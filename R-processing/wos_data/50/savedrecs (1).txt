FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Srinivasarao, P
   Satish, AR
AF Srinivasarao, Popuri
   Satish, Aravapalli Rama
TI Multi-objective materialized view selection using flamingo search
   optimization algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data warehousing; flamingo search algorithm; materialized view
   selection; query processing
ID BIG
AB A materialized view selection in data warehouse management is important to speed up query processing. The data presented in data warehouses is generally stored as a set of materialized views. The major challenge is determining which views to materialize and satisfy the response time with reduced cost functions. This paper proposed an effective multi objective cost model based flamingo search algorithm for materialized view selection in data warehouse design. The multiple view processing plan structure of the data warehouse describes the search space of problem in order to select the optimal materialized views. The proposed model evaluates a multi-objective optimization problem based on the cost functions resulting from materialization. The multiple objective functions of the proposed model are maintenance costs, current query processing costs, response cost and previous query processing costs. This model selects the top-k views for materialization by satisfying the mentioned multi-objective functions. The experimental results are simulated using the TPC-H dataset. The efficacy of proposed model is measured by comparing the obtained results of the proposed model with various existing approaches.
C1 [Srinivasarao, Popuri; Satish, Aravapalli Rama] VIT AP Univ, Sch Comp Sci & Engn, Amaravati, India.
C3 VIT-AP University
RP Srinivasarao, P (corresponding author), VIT AP Univ, Sch Comp Sci & Engn, Amaravati, India.
EM Srinivasarao.popuri@vitap.ac.in
OI Srinivasarao, Popuri/0000-0002-3810-496X; Aravapalli, Rama
   Satish/0000-0002-4323-8073
CR [Anonymous], 2009, 2009 INT WORKSHOP IN
   Arun B, 2017, INT J DECIS SUPPORT, V9, P1, DOI 10.4018/IJDSST.2017070101
   Arun B, 2017, INT J INTELL INF TEC, V13, P26, DOI 10.4018/IJIIT.2017010102
   Azgomi H, 2021, INFORM SCIENCES, V570, P200, DOI 10.1016/j.ins.2021.04.004
   Azgomi H, 2019, APPL INTELL, V49, P3965, DOI 10.1007/s10489-019-01481-w
   Azgomi H, 2018, ENG APPL ARTIF INTEL, V71, P125, DOI 10.1016/j.engappai.2018.02.018
   Betouati F, 2019, MULTIAGENT GRID SYST, V15, P137, DOI 10.3233/MGS-190306
   Chakraborty SA, 2021, INT J DATA WAREHOUS, V17, P22, DOI 10.4018/IJDWM.2021070102
   Gosain Anjana, 2018, Intelligent Engineering Informatics. Proceedings of the 6th International Conference on FICTA. Advances in Intelligent Systems and Computing (AISC 695), P241, DOI 10.1007/978-981-10-7566-7_25
   Gosain A, 2020, INT J RELIAB QUAL SA, V27, DOI 10.1142/S0218539320500084
   Gosain A, 2019, INT J SYST ASSUR ENG, V10, P801, DOI 10.1007/s13198-019-00812-x
   Goswami R, 2017, J INTELL INF SYST, V49, P407, DOI 10.1007/s10844-017-0455-6
   Gupta S, 2019, SWARM EVOL COMPUT, V44, P101, DOI 10.1016/j.swevo.2018.01.001
   Huang ZH, 2019, J INTERNET TECHNOL, V20, P423, DOI 10.3966/160792642019032002011
   Kumar Amit, 2021, International Journal of Distributed Artificial Intelligence, V13, P58, DOI [10.4018/ijdai.2021010103, 10.29005/IJCP.2021.13.2.58-59]
   Kumar A, 2018, INT J COGN INFORM NA, V12, P18, DOI 10.4018/IJCINI.2018070102
   Kumar TVV, 2017, INT J SYST ASSUR ENG, V8, P379, DOI 10.1007/s13198-015-0356-4
   Kumar TVV, 2012, COMM COM INF SC, V306, P225
   Mohseni M, 2020, INT J COOP INF SYST, V29, DOI 10.1142/S021884302050001X
   Prakash Jay, 2019, International Journal of Artificial Intelligence and Machine Learning, V9, P1, DOI 10.4018/IJAIML.2019070101
   Prakash J., 2021, RES ANTHOLOGY MULTII, P512
   Prakash J, 2020, INT J SYST ASSUR ENG, V11, P972, DOI 10.1007/s13198-020-01030-6
   Prakash J, 2020, INT J SYST ASSUR ENG, V11, P220, DOI 10.1007/s13198-020-00947-2
   Sachdeva K, 2021, MULTIMED TOOLS APPL, V80, P31619, DOI 10.1007/s11042-021-11181-8
   Sebaa A, 2019, INT J COOP INF SYST, V28, DOI 10.1142/S0218843019300018
   Sohrabi MK, 2019, KNOWL-BASED SYST, V163, P558, DOI 10.1016/j.knosys.2018.09.012
   Sohrabi MK, 2017, TURK J ELECTR ENG CO, V25, P3175, DOI 10.3906/elk-1608-112
   Sohrabi MK, 2016, J COMPUT, V11, P140, DOI 10.17706/jcp.11.2.140-148
   Troullinou G, 2021, INT CONF MANAGE DATA, P2789, DOI 10.1145/3448016.3452765
   Vijay Kumar T. V., 2015, International Journal of Business Information Systems, V19, P224
   Wang ZH, 2021, IEEE ACCESS, V9, P88564, DOI 10.1109/ACCESS.2021.3090512
   Xiangqian Song, 2010, 2010 International Conference on Intelligent Computing and Integrated Systems (ICISS 2010), P534, DOI 10.1109/ICISS.2010.5654879
   Yusoh Z. M., 2020, J PHYS C SERIES IOP, V1502
NR 33
TC 1
Z9 1
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2023
VL 53
IS 4
BP 988
EP 1012
DI 10.1002/spe.3174
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9M3GK
UT WOS:000942122600004
DA 2024-07-18
ER

PT J
AU Singh, A
   Kaur, A
   Dhillon, A
   Ahuja, S
   Vohra, H
AF Singh, Ashima
   Kaur, Amrita
   Dhillon, Arwinder
   Ahuja, Sahil
   Vohra, Harpreet
TI Software system to predict the infection in COVID-19 patients using deep
   learning and web of things
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE COVID-19; deep learning; EfficientNet B0; SARSCoV-2; segmentation;
   U-net; WoT
ID IOT; CT
AB Since the end of 2019, computed tomography (CT) images have been used as an important substitute for the time-consuming Reverse Transcriptase polymerase chain reaction (RT-PCR) test; a new coronavirus 2019 (COVID-19) disease has been detected and has quickly spread through many countries across the world. Medical imaging such as computed tomography provides great potential due to growing skepticism toward the sensitivity of RT-PCR as a screening tool. For this purpose, automated image segmentation is highly desired for a clinical decision aid and disease monitoring. However, there is limited publicly accessible COVID-19 image knowledge, leading to the overfitting of conventional approaches. To address this issue, the present paper focuses on data augmentation techniques to create synthetic data. Further, a framework has been proposed using WoT and traditional U-Net with EfficientNet B0 to segment the COVID Radiopedia and Medseg datasets automatically. The framework achieves an F-score of 0.96, which is best among state-of-the-art methods. The performance of the proposed framework also computed using Sensitivity, Specificity, and Dice-coefficient, achieves 84.5%, 93.9%, and 65.0%, respectively. Finally, the proposed work is validated using three quality of service (QoS) parameters such as server latency, response time, and network latency which improves the performance by 8%, 7%, and 10%, respectively.
C1 [Singh, Ashima; Kaur, Amrita; Dhillon, Arwinder; Ahuja, Sahil] Thapar Inst Engn & Technol, CSED, Patiala, Punjab, India.
   [Vohra, Harpreet] Thapar Inst Engn & Technol, ECED, Patiala, Punjab, India.
C3 Thapar Institute of Engineering & Technology; Thapar Institute of
   Engineering & Technology
RP Singh, A (corresponding author), Thapar Inst Engn & Technol, CSED, Patiala, Punjab, India.
EM ashima@thapar.edu
RI Dhillon, Arwinder/GZA-4367-2022
OI Singh, Ashima/0000-0002-9270-3533; Dhillon,
   Arwinder/0000-0002-6276-7181; Ahuja, Sahil/0000-0002-2710-1640
CR Abdulkareem KH, 2021, IEEE INTERNET THINGS, V8, P15919, DOI 10.1109/JIOT.2021.3050775
   Ahmed I, 2021, INT J MACH LEARN CYB, V12, P3053, DOI 10.1007/s13042-020-01220-5
   Ai T, 2020, RADIOLOGY, V296, pE32, DOI 10.1148/radiol.2020200642
   [Anonymous], 2021, WHAT IS WEB THINGS
   [Anonymous], 2021, IMPLEMENTING WEB THI
   [Anonymous], 2021, CLIENT SERVER
   [Anonymous], 2021, WEB THINGS IOT
   Bai HX, 2020, RADIOLOGY, V296, pE46, DOI 10.1148/radiol.2020200823
   Bullock J, 2020, J ARTIF INTELL RES, V69, P807
   Caruso D, 2020, RADIOLOGY, V296, pE79, DOI 10.1148/radiol.2020201237
   Dhillon A., 2019, J BIOL TODAYS WORLD, V8, P1, DOI DOI 10.15412/J.JBTW.01070206
   Dhillon A, 2022, ENTERP INF SYST-UK, V16, DOI 10.1080/17517575.2020.1820583
   Dhillon A, 2020, IET SYST BIOL, V14, P160, DOI 10.1049/iet-syb.2019.0087
   Drozdzal M, 2016, LECT NOTES COMPUT SC, V10008, P179, DOI 10.1007/978-3-319-46976-8_19
   El-Rashidy N, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9091439
   Faheem MR, 2019, IEEE ACCESS, V7, P185028, DOI 10.1109/ACCESS.2019.2960446
   Fan DP, 2020, IEEE T MED IMAGING, V39, P2626, DOI 10.1109/TMI.2020.2996645
   Fan DP, 2021, IEEE T NEUR NET LEAR, V32, P2075, DOI 10.1109/TNNLS.2020.2996406
   Fang YC, 2020, RADIOLOGY, V296, pE115, DOI 10.1148/radiol.2020200432
   Fu H., 2020, medRxiv, DOI [10.1101/2020.03.19.20038315, DOI 10.1101/2020.03.19.20038315]
   Gill SS, 2019, INTERNET THINGS-NETH, V8, DOI 10.1016/j.iot.2019.100118
   Gong D., 2019, arXiv
   Gong D, 2017, PROC CVPR IEEE, P3806, DOI 10.1109/CVPR.2017.405
   He T, 2019, PROC CVPR IEEE, P578, DOI 10.1109/CVPR.2019.00067
   Hsu IC, 2020, SOFTWARE PRACT EXPER, V50, P2293, DOI 10.1002/spe.2892
   Huang C, 2020, LANCET, V395, P496, DOI 10.1016/S0140-6736(20)30252-X
   Huang CL, 2020, LANCET, V395, P497, DOI [10.1016/S0140-6736(20)30183-5, 10.1016/S0140-6736(20)30211-7]
   Jin S., 2020, medRxiv
   Kallel A, 2021, SOFTWARE PRACT EXPER, V51, P91, DOI 10.1002/spe.2924
   Kaur A, 2021, ARCH COMPUT METHOD E, V28, P951, DOI 10.1007/s11831-020-09403-7
   Khemakhem M., HYBRID BASED FRAMEWO
   Kim Hyungjin, 2020, Radiology, V296, pE145, DOI 10.1148/radiol.2020201343
   Kumar A, 2021, FUTURE GENER COMP SY, V115, P1, DOI 10.1016/j.future.2020.08.046
   Le DN, 2021, INT J MACH LEARN CYB, V12, P3235, DOI 10.1007/s13042-020-01248-7
   Lee K, 2017, ARXIV
   Li L, 2020, RADIOLOGY, V296, pE65, DOI 10.1148/radiol.2020200905
   Li XM, 2018, IEEE T MED IMAGING, V37, P2663, DOI 10.1109/TMI.2018.2845918
   Litjens G, 2017, MED IMAGE ANAL, V42, P60, DOI 10.1016/j.media.2017.07.005
   Lu HZ, 2020, J MED VIROL, V92, P401, DOI [10.1002/jmv.2567, 10.1002/jmv.25678]
   Ma JZ, 2020, AIAA J, V58, P4976, DOI 10.2514/1.J058157
   Mainetti L, 2015, IEEE INTERNET THINGS, V2, P445, DOI 10.1109/JIOT.2015.2477467
   Manning D, 2006, RADIOGRAPHY, V12, P134, DOI 10.1016/j.radi.2005.02.003
   Mohammed MN., 2020, InternationalJournalofPsychosocialRehabilitation, V24, P2296, DOI [10.37200/IJPR/V24I7/PR270221, DOI 10.37200/IJPR/V24I7/PR270221]
   Ng MY, 2020, RADIOL-CARDIOTHORAC, V2, DOI 10.1148/ryct.2020200034
   Oktay O., 2018, ARXIV, DOI DOI 10.48550/ARXIV.1804.03999
   Qiu Y., 2020, MINISEG EXTREMELY MI, P1
   Ronneberger O, 2015, LECT NOTES COMPUT SC, V9351, P234, DOI 10.1007/978-3-319-24574-4_28
   Rubin GD, 2020, RADIOLOGY, V296, P172, DOI [10.1016/j.chest.2020.04.003, 10.1148/radiol.2020201365]
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Schlemper J, 2019, MED IMAGE ANAL, V53, P197, DOI 10.1016/j.media.2019.01.012
   Shi F, 2021, IEEE REV BIOMED ENG, V14, P4, DOI 10.1109/RBME.2020.2987975
   Shi Heshui, 2020, Lancet Infect Dis, V20, P425, DOI 10.1016/S1473-3099(20)30086-4
   Singh RP, 2020, DIABETES METAB SYND, V14, P521, DOI 10.1016/j.dsx.2020.04.041
   Strunk JL., 2014, IMAGING PROFILE COVI, V80, P1, DOI [10.14358/PERS.80.2.000, DOI 10.14358/PERS.80.2.000]
   Tuli S, 2020, INTERNET THINGS-NETH, V11, DOI 10.1016/j.iot.2020.100222
   Tuli S, 2020, FUTURE GENER COMP SY, V104, P187, DOI 10.1016/j.future.2019.10.043
   Yan QS, 2020, IEEE T IMAGE PROCESS, V29, P4308, DOI 10.1109/TIP.2020.2971346
   Yan QS, 2019, PROC CVPR IEEE, P1751, DOI 10.1109/CVPR.2019.00185
   Yan QS, 2019, IEEE WINT CONF APPL, P41, DOI 10.1109/WACV.2019.00012
   Yan QS, 2019, IEEE T IMAGE PROCESS, V28, P2200, DOI 10.1109/TIP.2018.2883741
   Ye Z, 2020, EUR RADIOL, V30, P4381, DOI 10.1007/s00330-020-06801-0
   Zeiler MD, 2010, PROC CVPR IEEE, P2528, DOI 10.1109/CVPR.2010.5539957
NR 62
TC 16
Z9 16
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 868
EP 886
DI 10.1002/spe.3011
EA JUN 2021
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000665035500001
PM 34538962
OA Green Published
DA 2024-07-18
ER

PT J
AU Mendoza, C
   Bocanegra, J
   Garcés, K
   Casallas, R
AF Mendoza, Camilo
   Bocanegra, Jose
   Garces, Kelly
   Casallas, Rubby
TI Architecture violations detection and visualization in the continuous
   integration pipeline
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architecture discovering; architecture recovering; conformance checking;
   continuous integration
ID SOFTWARE
AB New code in projects can introduce violations that deviate the code implementation from the intended architecture. This process is known as architecture erosion. In this article, we propose an approach for recovering the implemented architecture, and detecting violations when comparing it with the intended architecture. Given a code repository, the continuous integration pipeline calls the solution to detect the incidences of architecture violations as well as some quality and social metrics. This data is presented in metric-centered views that help development teams to manage architecture erosion. Our approach is based on model-driven engineering techniques since models serve to represent the code, and a model-based pattern language helps us to automate the search for violation occurrences and execute corresponding actions (e.g., creation/assignment of issues). We confirm the approach benefits in a real project implemented by a software developing company, in a sample project available on the internet, and in a software development course, including 20 projects, where every single project decreases its architecture violations density through time.
C1 [Mendoza, Camilo; Bocanegra, Jose; Garces, Kelly; Casallas, Rubby] Univ Andes, Sch Engn, Dept Syst & Comp Engn, Bogota, Colombia.
C3 Universidad de los Andes (Colombia)
RP Bocanegra, J (corresponding author), Univ Andes, Sch Engn, Dept Syst & Comp Engn, Bogota, Colombia.
EM j.bocanegra@uniandes.edu.co
OI Garces, Kelly/0000-0002-1070-439X; Mendoza Arrieta,
   Camilo/0000-0001-8256-1386; Bocanegra, Jose/0000-0002-8342-7346
CR Andrews S., 2020, INT J COMPUT SCI SEC, V14, P82
   Baabad A, 2020, IEEE ACCESS, V8, P173681, DOI 10.1109/ACCESS.2020.3024671
   Bruneliere Hugo., 2010, P IEEEACM INT C AUTO, P173, DOI DOI 10.1145/1858996.1859032
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   De Silva M, 2015, INT CONF IND INF SYS, P43, DOI 10.1109/ICIINFS.2015.7398983
   Eliasson U, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P33, DOI 10.1109/MTD.2015.7332622
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Guamán D, 2020, IET SOFTW, V14, P592, DOI 10.1049/iet-sen.2019.0246
   Jansen A, 2008, J SYST SOFTWARE, V81, P536, DOI 10.1016/j.jss.2007.08.025
   Li ZY, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P65, DOI 10.1109/WICSA.2015.19
   Ludwig J, 2017, IEEE SYS MAN CYBERN, P5, DOI 10.1109/SMC.2017.8122569
   Lutellier T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P69, DOI 10.1109/ICSE.2015.136
   MacCormack A, 2016, J SYST SOFTWARE, V120, P170, DOI 10.1016/j.jss.2016.06.007
   Mair Matthias, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P299, DOI 10.1007/978-3-642-39031-9_25
   Mendoza C, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P589, DOI 10.1109/MODELS-C.2019.00090
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Roeller R, 2006, J SYST SOFTWARE, V79, P552, DOI 10.1016/j.jss.2005.10.017
   Shahbazian A, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P95, DOI 10.1109/ICSA.2018.00019
   Shankar R, 2013, INT J PROD RES, V51, P2049, DOI 10.1080/00207543.2012.701779
   Smith S, 2019, ARCHITECTING MODERN, V5th ed.
   SonarSource, SONARQUBE
   Sora Ioana, 2010, IEEE International Joint Conference on Computational Cybernetics and Technical Informatics (ICCC-CONTI 2010). IEEE 8th International Conference on Computational Cybernetics and 9th International Conference on Technical Informatics, P259, DOI 10.1109/ICCCYB.2010.5491289
   Tornhill A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P59, DOI 10.1145/3194164.3194187
   van Vliet H, 2016, J SYST SOFTWARE, V117, P638, DOI 10.1016/j.jss.2016.01.017
NR 24
TC 3
Z9 3
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2021
VL 51
IS 8
BP 1822
EP 1845
DI 10.1002/spe.3004
EA MAY 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TD0EL
UT WOS:000656217000001
DA 2024-07-18
ER

PT J
AU Najafizadegan, N
   Nazemi, E
   Khajehvand, V
AF Najafizadegan, Negin
   Nazemi, Eslam
   Khajehvand, Vahid
TI An autonomous model for self-optimizing virtual machine selection by
   learning automata in cloud environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomous; cloud environment; learning automata; prediction; service
   level agreement; virtual machine
AB In recent years, cloud computing has become more popular because of advancements in virtualization technology. By increasing the number of servers in cloud computing environment, cloud data centers have expanded and consumed much energy. Virtual machine consolidation is a solution for energy management in cloud environment. On the other hand, by increasing resource utilization in virtual machine consolidation, service level agreement assurance is difficult to obtain. Two main challenges in virtual machine consolidation are timely detection of overloaded servers and proper immigrant virtual machine selection from detected servers. In this paper, a new model is proposed based on MAPE-k loop for autonomous virtual machine selection. The presented model uses a proposed ensemble prediction algorithm in the analysis phase. Also, in the planning phase, a new multi-heuristics algorithm with flexible weights using learning automata is proposed. The effectiveness of the proposed model is evaluated by CloudSim simulator under real workload as compared with well-known algorithms in this domain. The experimental results indicate that, the proposed approach has averagely improved the balance between service level agreement violations, energy and migration counts by 47.39% compared to other methods.
C1 [Najafizadegan, Negin; Khajehvand, Vahid] Islamic Azad Univ, Fac Comp & Informat Technol Engn, Qazvin Branch, Qazvin, Iran.
   [Nazemi, Eslam] Shahid Beheshti Univ, Fac Comp Sci & Engn, Tehran, Iran.
C3 Islamic Azad University; Shahid Beheshti University
RP Nazemi, E (corresponding author), Shahid Beheshti Univ, Fac Comp Sci & Engn, Tehran, Iran.
EM nazemi@sbu.ac.ir
RI Khajehvand, Vahid/AAH-4527-2021
OI Khajehvand, Vahid/0000-0002-8173-3526; Nazemi, Eslam/0000-0001-9084-3789
CR Akhter N., 2018, ARXIV PREPRINT ARXIV
   Al-Dulaimy A, 2018, SUSTAIN COMPUT-INFOR, V19, P185, DOI 10.1016/j.suscom.2018.05.012
   Alharbi F, 2019, EXPERT SYST APPL, V120, P228, DOI 10.1016/j.eswa.2018.11.029
   [Anonymous], 2016, SCI PROGRAMMING-NETH
   Arianyan E, 2016, J SUPERCOMPUT, V72, P688, DOI 10.1007/s11227-015-1603-9
   Arianyan E, 2015, COMPUT ELECTR ENG, V47, P222, DOI 10.1016/j.compeleceng.2015.05.006
   Basu Sayantani, 2019, Smart Intelligent Computing and Applications. Proceedings of the Second International Conference on SCI 2018. Smart Innovation, Systems and Technologies (SIST 105), P319, DOI 10.1007/978-981-13-1927-3_34
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Bui DM, 2017, J PARALLEL DISTR COM, V102, P103, DOI 10.1016/j.jpdc.2016.11.011
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Cao S, 2012, P 2012 13 INT C PAR
   Ding WC, 2020, FUTURE GENER COMP SY, V111, P254, DOI 10.1016/j.future.2020.05.004
   Farahnakian F, 2015, IEEE T SERV COMPUT, V8, P187, DOI 10.1109/TSC.2014.2382555
   Ferdaus MH, 2014, LECT NOTES COMPUT SC, V8632, P306, DOI 10.1007/978-3-319-09873-9_26
   Fu X, 2015, FRONT COMPUT SCI-CHI, V9, P322, DOI 10.1007/s11704-015-4286-8
   Ghobaei-Arani M, 2018, INT J COMMUN SYST, V31, DOI 10.1002/dac.3537
   Hadded L., 2016, P OTM CONF INT C MOV
   Hallawi H, 2017, FUTURE GENER COMP SY, V69, P1, DOI 10.1016/j.future.2016.10.025
   Horri A, 2014, J SUPERCOMPUT, V69, P1445, DOI 10.1007/s11227-014-1224-8
   Hsieh SY, 2020, J PARALLEL DISTR COM, V139, P99, DOI 10.1016/j.jpdc.2019.12.014
   Jacob B., 2004, IBM REDBOOKS, V4, P1
   Jamshidi P., 2014, P 9 INT S SOFTW ENG
   Jiang HP, 2018, J NETW COMPUT APPL, V120, P119, DOI 10.1016/j.jnca.2018.07.011
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Li HX, 2018, FUTURE GENER COMP SY, V84, P98, DOI 10.1016/j.future.2018.02.026
   Liang J., 2004, P IEEE INT S CLUST C
   Mandal R, 2020, J SUPERCOMPUT, V76, P7374, DOI 10.1007/s11227-020-03165-6
   Masoumzadeh SS, 2015, P 2015 IEEE INT C AU
   Mekala MS, 2019, COMPUT ELECTR ENG, V73, P227, DOI 10.1016/j.compeleceng.2018.11.021
   Mohamed M, 2016, J SYST SOFTWARE, V122, P416, DOI 10.1016/j.jss.2016.01.002
   Mohamed M, 2015, FUTURE GENER COMP SY, V50, P49, DOI 10.1016/j.future.2014.10.017
   Monil MAH, 2015, 2015 IEEE/ACIS 14TH INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE (ICIS), P223, DOI 10.1109/ICIS.2015.7166597
   Nadeem HA, 2018, INT J ADV COMPUT SC, V9, P416
   Naeen HM, 2020, J SUPERCOMPUT, V76, P1903, DOI 10.1007/s11227-018-2431-5
   Nagarajan A. B., 2007, P 21 ANN INT C SUP S
   Najafizadegan N., 2021, SOFTWARE PRACT EXPER, P1
   Nathuji Ripal, 2007, Operating Systems Review, V41, P265, DOI 10.1145/1323293.1294287
   Noshy M, 2018, J NETW COMPUT APPL, V110, P1, DOI 10.1016/j.jnca.2018.03.002
   Pa SK., 2017, P INT C DISTR COMP I
   Paulraj GJL, 2018, COMPUT ELECTR ENG, V69, P287, DOI 10.1016/j.compeleceng.2018.01.012
   Rahmani S, 2020, J NETW COMPUT APPL, V170, DOI 10.1016/j.jnca.2020.102789
   Rajabzadeh M, 2020, J SUPERCOMPUT, V76, P7438, DOI 10.1007/s11227-020-03169-2
   Reddy MA, 2020, APPL ARTIF INTELL, V34, P31, DOI 10.1080/08839514.2019.1689714
   Reddy VD, 2019, SOFT COMPUT, V23, P1917, DOI 10.1007/s00500-017-2905-z
   Sayadnavard MH, 2019, J SUPERCOMPUT, V75, P2126, DOI 10.1007/s11227-018-2709-7
   Shaw R, 2019, SIMUL MODEL PRACT TH, V93, P322, DOI 10.1016/j.simpat.2018.09.019
   Shaw SB, 2015, COMPUT ELECTR ENG, V47, P241, DOI 10.1016/j.compeleceng.2015.07.020
   Shehabi A, 2018, ENVIRON RES LETT, V13, DOI 10.1088/1748-9326/aaec9c
   Silva MC, 2018, J PARALLEL DISTR COM, V111, P222, DOI 10.1016/j.jpdc.2017.08.010
   Subirats J, 2015, FUTURE GENER COMP SY, V45, P70, DOI 10.1016/j.future.2014.11.008
   Teng F, 2017, J SUPERCOMPUT, V73, P782, DOI 10.1007/s11227-016-1797-5
   Wood Timothy, 2007, NSDI
   Xiao Z, 2013, IEEE T PARALL DISTR, V24, P1107, DOI 10.1109/TPDS.2012.283
   Yadav R, 2017, INT WORKSHOP DATABAS, P132, DOI 10.1109/DEXA.2017.43
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
   Zhou Z, 2018, CONCURR COMP-PRACT E, V30, DOI 10.1002/cpe.4942
   Zhou Z, 2018, FUTURE GENER COMP SY, V86, P836, DOI 10.1016/j.future.2017.07.048
   Zhu XY, 2009, CLUSTER COMPUT, V12, P45, DOI 10.1007/s10586-008-0067-6
NR 60
TC 8
Z9 8
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1352
EP 1386
DI 10.1002/spe.2960
EA MAR 2021
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000629195100001
DA 2024-07-18
ER

PT J
AU Zhou, J
   Wang, HM
   Xiao, F
   Yan, XY
   Sun, LJ
AF Zhou, Jian
   Wang, Haoming
   Xiao, Fu
   Yan, Xiaoyong
   Sun, Lijuan
TI Network traffic prediction method based on echo state network with
   adaptive reservoir
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive reservoir; cyber-physical systems; echo state network;
   generative adversarial network; network traffic prediction
ID NEURAL-NETWORKS; OPTIMIZATION; TIME
AB Network traffic prediction is of great significance to resource management in cyber-physical systems (CPSs). In particular, network traffic is a nonlinear time series. Echo state network (ESN) is a new neural network with strong nonlinear processing capacity and short-term memory capacity, and thus can achieve good performance in predicting nonlinear time series. However, network traffic has various characteristics such as self-similarity, chaos, mutability. As the core of ESN, the reservoir will be fixed rather than adjustable once it is generated, which limits the prediction performance of ESN in different network traffic. To achieve universal excellent prediction performance, this paper proposes a new network traffic prediction method based on ESN with adaptive reservoir (ESN-AR). First, the framework of ESN-AR is constructed for network traffic prediction, in which the idea of generative adversarial network (GAN) is incorporated into ESN to adaptively adjust the reservoir. Specifically, ESN is used as the generative model to predict network traffic and feedforward neural network (FNN) is used as the discriminative model to distinguish between the real network traffic and the predicted network traffic. Second, the adversarial training algorithm of ESN-AR is proposed to obtain the appropriate reservoir depending on the network traffic characteristics. Finally, ESN-AR is applied to the prediction of three actual network traffic with different characteristics. Simulation results show that compared with the state-of-the-art models, the proposed method achieves more accurate and stable prediction performance.
C1 [Zhou, Jian; Wang, Haoming; Xiao, Fu; Yan, Xiaoyong; Sun, Lijuan] Nanjing Univ Posts & Telecommun, Coll Comp, Nanjing, Peoples R China.
   [Zhou, Jian; Wang, Haoming; Xiao, Fu; Yan, Xiaoyong; Sun, Lijuan] Nanjing Univ Posts & Telecommun, Jiangsu High Technol Res Key Lab Wireless Sensor, Nanjing, Peoples R China.
C3 Nanjing University of Posts & Telecommunications; Nanjing University of
   Posts & Telecommunications
RP Zhou, J (corresponding author), Nanjing Univ Posts & Telecommun, Nanjing, Peoples R China.
EM zhoujian@njupt.edu.cn
RI Yan, Xiao-Yong/P-6027-2018
OI Zhou, Jian/0000-0002-1864-3894
FU National Natural Science Foundation of China [61972210, 61803212,
   61872191, 61873131]; Government of Jiangsu Province [18KJB520034]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   61972210, 61803212, 61872191, 61873131; Government of Jiangsu Province,
   Grant/Award Number: 18KJB520034
CR [Anonymous], 2011, INT J ADV COMP TECHN
   [Anonymous], 2014, ACTA PHYS SINICA
   [Anonymous], 2016, NIPS Workshop on Adversarial Training
   Barrat A, 2004, P NATL ACAD SCI USA, V101, P3747, DOI 10.1073/pnas.0400087101
   Cajueiro DO, 2004, PHYSICA A, V336, P521, DOI 10.1016/j.physa.2003.12.031
   Cao XF, 2018, IEEE ACCESS, V6, P5276, DOI 10.1109/ACCESS.2017.2787696
   Chen YL, 2017, SOFTWARE PRACT EXPER, V47, P379, DOI 10.1002/spe.2413
   Cortez P, 2012, EXPERT SYST, V29, P143, DOI 10.1111/j.1468-0394.2010.00568.x
   Duggan M, 2019, SOFTWARE PRACT EXPER, V49, P617, DOI 10.1002/spe.2635
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Hurault A, 2015, SOFTWARE PRACT EXPER, V45, P1659, DOI 10.1002/spe.2307
   Iizuka S, 2017, ACM T GRAPHIC, V36, DOI 10.1145/3072959.3073659
   Jaeger H, 2004, SCIENCE, V304, P78, DOI 10.1126/science.1091277
   Jaeger H., 2001, ECHO STATE APPROACH
   Jammazi R, 2012, ENERG ECON, V34, P828, DOI 10.1016/j.eneco.2011.07.018
   Kawai Y, 2019, NEURAL NETWORKS, V112, P15, DOI 10.1016/j.neunet.2019.01.002
   Kermia O, 2017, SOFTWARE PRACT EXPER, V47, P1485, DOI 10.1002/spe.2480
   KESTEVEN GL, 1946, NATURE, V158, P520, DOI 10.1038/158520c0
   Park DC, 2013, INFORM SCIENCES, V237, P18, DOI 10.1016/j.ins.2009.10.005
   Ren YZ, 2010, INFORMATION TECHNOLOGY FOR MANUFACTURING SYSTEMS, PTS 1 AND 2, P364, DOI 10.4028/www.scientific.net/AMM.20-23.364
   Rodan A, 2011, IEEE T NEURAL NETWOR, V22, P131, DOI 10.1109/TNN.2010.2089641
   ROSENSTEIN MT, 1993, PHYSICA D, V65, P117, DOI 10.1016/0167-2789(93)90009-P
   Scarselli F, 1998, NEURAL NETWORKS, V11, P15, DOI 10.1016/S0893-6080(97)00097-X
   Sun J, 2020, J SYST ARCHITECT, V108, DOI 10.1016/j.sysarc.2020.101799
   Sun XC, 2012, J ZHEJIANG U-SCI C, V13, P689, DOI 10.1631/jzus.C1200069
   Sun XC, 2020, IEEE INTERNET THINGS, V7, P1287, DOI 10.1109/JIOT.2019.2954283
   Thiede LA, 2019, NEURAL NETWORKS, V115, P23, DOI 10.1016/j.neunet.2019.02.001
   Tian Z, 2015, NEURAL NETW WORLD, V25, P669, DOI 10.14311/NNW.2015.25.034
   [田中大 Tian Zhongda], 2015, [计算机研究与发展, Journal of Computer Research and Development], V52, P1137
   Tomar P, 2018, SOFTWARE PRACT EXPER, V48, P896, DOI 10.1002/spe.2562
   Uhlig S, 2006, ACM SIGCOMM COMP COM, V36, P83, DOI 10.1145/1111322.1111341
   Wang, 2013, P IEEE INT C SIGN PR, P1, DOI [10.1109/CICEM.2013.6820163, DOI 10.1109/CICEM.2013.6820163, DOI 10.1109/WCSP.2013.6677037]
   Wang HS, 2014, NEUROCOMPUTING, V145, P353, DOI 10.1016/j.neucom.2014.05.024
   Wang QM, 2017, INT J SYST ASSUR ENG, V8, P1976, DOI 10.1007/s13198-016-0412-8
   Wang ZG, 2019, ENG APPL ARTIF INTEL, V81, P117, DOI 10.1016/j.engappai.2019.02.009
   Xingyu Zhou, 2018, Mathematical Problems in Engineering, V2018, DOI 10.1155/2018/4907423
   Yang CL, 2018, NEUROCOMPUTING, V290, P148, DOI 10.1016/j.neucom.2018.02.036
   Zhang WS, 2017, SOFTWARE PRACT EXPER, V47, P473, DOI 10.1002/spe.2426
   Zhang XY, 2018, CHEMSUSCHEM, V11, P11, DOI 10.1002/cssc.201701847
   Zhou J, 2018, IEEE ACCESS, V6, P70625, DOI 10.1109/ACCESS.2018.2880272
   Zhou JL, 2020, IEEE T SERV COMPUT, V13, P745, DOI 10.1109/TSC.2019.2963301
   Zhou XM, 2019, FUTURE GENER COMP SY, V93, P278, DOI 10.1016/j.future.2018.10.046
NR 42
TC 10
Z9 11
U1 2
U2 45
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2238
EP 2251
DI 10.1002/spe.2950
EA DEC 2020
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000602953000001
DA 2024-07-18
ER

PT J
AU Jiang, WJ
   Xu, ZC
   Gao, CY
   Gu, JY
   Wang, YH
AF Jiang, Wenjing
   Xu, Zichen
   Gao, Cuiying
   Gu, Jingyun
   Wang, Yuhao
TI Cost risk analysis for instance recommendation in a sustainable
   Cloud-cyber-physical system framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE IaaS in CPS; online optimization; performance modeling; risk inference
AB Cloud markets advocate powerful instances to take computation over from the cyber-physical system (CPS). Combining the Cloud and CPS layer, the whole Cloud-CPS framework is designed to achieve both accurate data sensing and fast data analysis. While most researchers trust the computation side, and focus on the actuator in the physical space to ensure the service-level objectives, SLO, that is, deadline misses, cloud can be a threat to the service sustainability as instance may fail, especially when one tries to make a cost-effective design. Specifically, users must bear the risk of instance failure. These risks can cause the entire cyber-physical system to collapse. Our work tackles the cloud aspect of the sustainability challenge from the cloud side in a cloud-CPS framework. We have studied the instance selection problem for the CPS systems, and propose a Cost-Risk Analysis for Instance Recommendation, or CRAIR, to support a sustainable Cloud-CPS framework. We have adopted the classic risk analysis process from the portfolio management in hedge financial market, combining with the system modeling for the CPS instance selection, as an optimization problem. To solve this problem, we formulate it as a multi-armed bandit problem and solve it with our upper confidence bound bandit algorithm together, our CRAIR can provide an online risk analysis to maximize the profit with a comparative ratio of O(1+eta). We have evaluated CRAIR based on simulations using real-world Google and Alibaba workloads and cloud market numbers. The results show that, compared to traditional approaches, our approach provides the best tradeoff between SLOs and costs. All users achieve their SLOs goals while minimizing their average expenses by 34.6%. By using CRAIR for instance selection, the CPS service can maximize its benefit under a controlled risk.
C1 [Jiang, Wenjing; Xu, Zichen; Wang, Yuhao] Nanchang Univ, Informat Engn Coll, Nanchang, Jiangxi, Peoples R China.
   [Gao, Cuiying] Huazhong Univ Sci & Technol, Sch Elect Informat & Commun, Wuhan, Peoples R China.
   [Gu, Jingyun] Univ Maryland, Robert H Smith Sch, College Pk, MD 20742 USA.
C3 Nanchang University; Huazhong University of Science & Technology;
   University System of Maryland; University of Maryland College Park
RP Xu, ZC (corresponding author), Nanchang Univ, Dept Artificial Intelligence, 999 Xuefu BLVD, Nanchang 330000, Jiangxi, Peoples R China.
EM xuz@ncu.edu.cn
RI Gao, Cuiying/HOF-4749-2023
FU Government of Jiangxi Province [jxsq106018]; National Natural Science
   Foundation of China [61702250]; National Key R&D Program of China
   [2018YFB14043033]
FX Government of Jiangxi Province, Grant/Award Number: jxsq106018; National
   Natural Science Foundation of China, Grant/Award Number: 61702250;
   National Key R&D Program of China, Grant/Award Number: 2018YFB14043033
CR Ahmad F, 2010, ACM SIGPLAN NOTICES, V45, P243, DOI 10.1145/1735971.1736048
   Brender N, 2013, INT J INFORM MANAGE, V33, P726, DOI 10.1016/j.ijinfomgt.2013.05.004
   Bubeck S, 2012, FOUND TRENDS MACH LE, V5, P1, DOI 10.1561/2200000024
   Cao XR, 2002, IEEE ACM T NETWORK, V10, P208, DOI 10.1109/90.993302
   Cayirci E, 2014, INT CONF UTIL CLOUD, P908, DOI 10.1109/UCC.2014.148
   COFFMAN EG, 1978, SIAM J COMPUT, V7, P1, DOI 10.1137/0207001
   Deng N, 2015, 2015 SIXTH INTERNATIONAL GREEN COMPUTING CONFERENCE AND SUSTAINABLE COMPUTING CONFERENCE (IGSC)
   Drissi S, 2013, INT J ADV COMPUT SC, V4, P143
   Gittins J, 2011, MULTIARMED BANDIT AL
   GOHAD A, 2013, 2013 IEEE INT C
   Gunes V, 2014, KSII T INTERNET INF, V8, P4242, DOI 10.3837/tiis.2014.12.001
   Hong Xu, 2012, IEEE International Conference on Communications (ICC 2012), P2929, DOI 10.1109/ICC.2012.6364013
   Jin H, 2015, IEEE T CLOUD COMPUT, V3, P436, DOI 10.1109/TCC.2014.2344680
   Kaplan S., 1981, RISK ANAL, V1, P11, DOI DOI 10.1111/J.1539-6924.1981.TB01350.X
   LAI TL, 1985, ADV APPL MATH, V6, P4, DOI 10.1016/0196-8858(85)90002-8
   Latif R., 2014, FUTURE INFORM TECHNO, P285
   Lee Jay, 2015, Manufacturing Letters, V3, P18, DOI 10.1016/j.mfglet.2014.12.001
   LIU PY, 2011, PROCEDIA ENGINEER, V15
   Liu YX, 2020, FUTURE GENER COMP SY, V105, P932, DOI 10.1016/j.future.2017.05.029
   Lovas R, 2018, COMPLEXITY, DOI 10.1155/2018/8281079
   Luko SN, 2014, QUAL ENG, V26, P379, DOI 10.1080/08982112.2014.875769
   Macias M., 2011, P 2011 ACM S APPL CO, P113
   Miller L, 1993, Rev Sci Tech, V12, P1153
   Mishra Asit K., 2010, Performance Evaluation Review, V37, P34, DOI 10.1145/1773394.1773400
   Moore S., 2018, Gartner Forecasts Worldwide Public Cloud Revenue to Grow 21.4 Percent in 2018
   Paschalidis IC, 2000, IEEE ACM T NETWORK, V8, P171, DOI 10.1109/90.842140
   Purdy G., 2009, P WELL M WELL NZ
   Scaling AA, 2013, AUTOSCALING
   Wang H, 2010, 2 USENIX C HOT TOP C
   Wang T, 2019, ADV MATER, V31, DOI 10.1002/adma.201807876
   Ward BT, 2010, INFORM SYST MANAGE, V27, P334, DOI 10.1080/10580530.2010.514248
   Wilder B., 2012, Cloud Architecture Patterns
   Xie F, 2012, INT CONF CLOUD COMPU, P476, DOI 10.1109/CCIS.2012.6664451
   Xu Z, 2016, P 35 IEEE INT C COMP
   Xu ZC, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, P177, DOI 10.1109/ICAC.2015.15
   Zhao H, 2015, IEEE T CLOUD COMPUT, V3, P304, DOI 10.1109/TCC.2015.2464799
   Zhao H, 2012, INT PARALL DISTRIB P, P808, DOI 10.1109/IPDPS.2012.77
   Zheng L, 2015, ACM SIGCOMM COMP COM, V45, P71, DOI 10.1145/2785956.2787473
   Zhou JL, 2020, IEEE T SERV COMPUT, V13, P745, DOI 10.1109/TSC.2019.2963301
NR 39
TC 1
Z9 1
U1 2
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2317
EP 2336
DI 10.1002/spe.2919
EA NOV 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000591641600001
DA 2024-07-18
ER

PT J
AU Sankar, H
   Subramaniyaswamy, V
   Vijayakumar, V
   Kumar, SA
   Logesh, R
   Umamakeswari, A
AF Sankar, H.
   Subramaniyaswamy, V
   Vijayakumar, V.
   Kumar, Sangaiah Arun
   Logesh, R.
   Umamakeswari, A.
TI Intelligent sentiment analysis approach using edge computing-based deep
   learning technique
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE convolutional neural network; deep learning; edge computing; mobile;
   sentiment analysis; word embeddings
AB Sentiment analysis and opinion mining has become a major tool for collecting information from customer reviews on user sentiments and emotions, especially for online video streaming services and social networks. The increasing use of smartphones has popularized subscription to various streaming services that provide streaming media and video-on-demand. These applications offer a gateway to analyze user reviews by introducing sentiment analysis in the mobile environment. Online user reviews can hold a lot of useful information and help predict user interests. Analysis of user reviews can provide substantive information for business processing. Sentiment classification of these reviews is a commonly used analysis technique. Usually, these reviews are given in a text format, with every word in each considered a feature, so selection should focus on optimal features from all available features present in the reviews. This study employs machine learning algorithms to extract the best features from the training review data set. Then, the selected features are fed into the convolutional neural network and other fully connected layers for further processing. The proposed approach is evaluated with the standard evaluation metrics, such as precision, accuracy, recall, and f-measure, using three distinct benchmark data sets: polarity, Rotten Tomatoes, and IMDb. This work has also employed a pretrained sentiment analysis model over an Android application framework to classify reviews on a Smartphone without the need for any cloud or server-side API.
C1 [Sankar, H.; Subramaniyaswamy, V; Logesh, R.; Umamakeswari, A.] SASTRA Deemed Univ, Sch Comp, Thanjavur, India.
   [Vijayakumar, V.] Vellore Inst Technol, Sch Comp Sci & Engn, Chennai, Tamil Nadu, India.
   [Kumar, Sangaiah Arun] Vellore Inst Technol, Sch Comp Sci & Engn, Vellore, Tamil Nadu, India.
C3 Shanmugha Arts, Science, Technology & Research Academy (SASTRA); Vellore
   Institute of Technology (VIT); VIT Chennai; Vellore Institute of
   Technology (VIT); VIT Vellore
RP Kumar, SA (corresponding author), Vellore Inst Technol, Sch Comp Sci & Engn, Vellore, Tamil Nadu, India.
EM arunkumarsangaiah@gmail.com
RI Freienberg, Selina/AAV-8829-2021; Sangaiah, Arun Kumar/U-6785-2019;
   varadarajan, vijayakumar/K-8007-2017
OI Sangaiah, Arun Kumar/0000-0002-0229-2460; A,
   Umamakeswari/0000-0001-9724-1115; ,
   Subramaniyaswamy/0000-0001-5328-7672; R, Logesh/0000-0002-0034-4714
CR Agarwal Apoorv., 2011, P WORKSHOP LANGUAGES
   [Anonymous], 2013, 2 JOINT C LEX COMP S
   [Anonymous], 2014, P 2014 C EMP METH NA
   [Anonymous], 2011, INT MOV DAT IMDB
   [Anonymous], 2014, 52 ANN M ASS COMP LI
   [Anonymous], 2014, P COLING 2014 25 INT
   [Anonymous], 2012, SENTIMENT ANAL USING
   [Anonymous], 2013, P 2013 C EMPIRICAL M
   [Anonymous], 2012, ARXIV PREPRINT ARXIV
   Aujla GS, 2018, IEEE T IND INFORM, V14, P778, DOI 10.1109/TII.2017.2738841
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Cambria E, 2010, AAAI FALL S ARL VA
   Cheng ME, 2014, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL SYMPOSIUM - MANAGEMENT & ENGINEERING (2014), P8
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Fazio M, 2018, IEEE CLOUD COMPUT, V5, P22, DOI 10.1109/MCC.2018.053711663
   Go A., 2009, TWITTER SENTIMENT CL, V1
   Kim Y., 2014, P 2014 C EMPIRICAL M
   Lee L, P 42 ANN M ASS COMP, P271, DOI 10.3115/1218955.1218990
   LiKamWa R., 2011, P PHONESENSE WORKSH
   Mikolov T., 2013, ADV NEURAL INF PROCE
   Tang D., 2014, P 52 ANN M ASS COMP
   Varghese B, 2018, IEEE CLOUD COMPUT, V5, P9, DOI 10.1109/MCC.2018.064181115
NR 22
TC 33
Z9 34
U1 5
U2 41
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 645
EP 657
DI 10.1002/spe.2687
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000526578200011
DA 2024-07-18
ER

PT J
AU Moreira, A
   Rosendo, D
   Gomes, D
   Santos, GL
   Silva, L
   Cani, C
   Kelner, J
   Sadok, D
   Gonçalves, G
   Mehta, A
   Wildeman, M
   Endo, PT
AF Moreira, Andre
   Rosendo, Daniel
   Gomes, Demis
   Santos, Guto Leoni
   Silva, Leylane
   Cani, Carolina
   Kelner, Judith
   Sadok, Djamel
   Goncalves, Glauco
   Mehta, Amardeep
   Wildeman, Mattias
   Endo, Patricia Takako
TI DCAV: A software system to evaluate next-generation cloud data center
   availability through a friendly graphical interface
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE availability; data center; software system; stochastic models; web-based
   interface
ID ARCHITECTURE
AB To assess the availability of different data center configurations, understand the main root causes of data center failures and represent its low-level details, such as subsystem's behavior and their interconnections, we have proposed, in previous works, a set of stochastic models to represent different data center architectures (considering three subsystems: power, cooling, and IT) based on the TIA-942 standard. In this paper, we propose the Data Center Availability (DCAV), a web-based software system to allow data center operators to evaluate the availability of their data center infrastructure through a friendly interface, without need of understanding the technical details of the stochastic models. DCAV offers an easy step-by-step interface to create and configure a data center model. The main goal of the DCAV system is to abstract low-level details and modeling complexities, becoming the data center availability analysis a simple and less time-consuming task.
C1 [Moreira, Andre; Rosendo, Daniel; Gomes, Demis; Santos, Guto Leoni; Silva, Leylane; Cani, Carolina; Kelner, Judith; Sadok, Djamel; Endo, Patricia Takako] Univ Fed Pernambuco, Recife, PE, Brazil.
   [Goncalves, Glauco] Univ Fed Rural Pernambuco, Recife, PE, Brazil.
   [Mehta, Amardeep; Wildeman, Mattias] Ericsson Res, Kista, Sweden.
   [Endo, Patricia Takako] Univ Pernambuco, Ave Agamenon Magalhaes,S-N Santo Amaro, BR-50100010 Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco; Universidade Federal Rural de
   Pernambuco (UFRPE); Ericsson; Universidade de Pernambuco (UPE)
RP Endo, PT (corresponding author), Univ Pernambuco, Ave Agamenon Magalhaes,S-N Santo Amaro, BR-50100010 Recife, PE, Brazil.
EM patricia.endo@upe.br
RI Sadok, Djamel F Hadj/M-9814-2015; Kelner, Judith/C-6746-2009; Gonçalves,
   Glauco Estácio/H-4474-2011
OI Gonçalves, Glauco Estácio/0000-0003-1341-5339; Endo, Patricia
   Takako/0000-0002-9163-5583; Moreira, Andre/0000-0002-6437-0639
FU Research, Development and Innovation Center, Ericsson Telecomunicacoes
   S. A., Brazil
FX This work was supported by the Research, Development and Innovation
   Center, Ericsson Telecomunicacoes S. A., Brazil.
CR [Anonymous], 2018, ser. Synthesis Lectures on Computer Architecture, DOI DOI 10.2200/S00516ED2V01Y201306CAC024
   [Anonymous], 002 ANSIBICSI
   [Anonymous], 2017, IEEE T SERV COMPUT
   [Anonymous], 2016, OPEN STANDARD DATACE
   Araujo J, 2014, P 44 ANN IEEE IFIP I
   Bause F., 2002, Stochastic Petri Nets: An Introduction to the Theory
   Callou G., 2012, IEEEIFIP INT C DEPEN, P1, DOI DOI 10.1109/DSNW.2012.6264697
   Callou G, 2013, COMPUTING, V95, P1137, DOI 10.1007/s00607-013-0328-y
   Cheraghlou MN, 2016, J NETW COMPUT APPL, V61, P81, DOI 10.1016/j.jnca.2015.10.004
   Endo PT, 2016, J CLOUD COMPUT-ADV S, V5, DOI 10.1186/s13677-016-0066-8
   Endo PT, 2017, COMPUTER, V50, P86, DOI 10.1109/MC.2017.4041358
   Endo PT., 2017, RES ADV CLOUD COMPUT, P21, DOI [10.1007/978-981-10-5026-8_2, DOI 10.1007/978-981-10-5026-8_2]
   Evans Tony., 2012, The different technologies for cooling data centers
   Gomes Demis, 2017, 2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), P797, DOI 10.23919/INM.2017.7987361
   Gomes D, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5156
   Gomes DM, 2017, IEEE SYMP COMP COMMU, P736, DOI 10.1109/ISCC.2017.8024615
   Goncalves GE, 2016, P 2016 IEEE S COMP C
   Guimaraes AP, 2015, PERFORM ENG SER, P265
   Heising C., 2007, IEEE RECOMMENDED PRA
   Kao W, 2015, Data Center Handbook, P559
   Krone ADC, 2008, TIA 942 DAT CTR STAN
   Li CS, 2017, FUTURE GENER COMP SY, V67, P180, DOI 10.1016/j.future.2016.07.014
   Li Z, 2018, IEEE T CLOUD COMPUT
   McCarthy K, 2005, 75 APC SCHNEID EL DA
   ROSENDO D, 2017, INT CONF NETW SER
   Rosendo D, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P1543
   Santos GL, 2017, IEEE SYMP COMP COMMU, P717, DOI 10.1109/ISCC.2017.8024612
   Schroeder B, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 5TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES ( FAST '07), P1
   Shetty S, 2002, DELL POWER SOLUT
   Silva B, 2010, IEEE SYS MAN CYBERN
   Smith WE, 2008, IBM SYST J, V47, P621, DOI 10.1147/SJ.2008.5386524
   Snyder B, 2018, SOFTWARE PRACT EXPER, V48, P665, DOI 10.1002/spe.2541
   WU C, 2015, HDB DATA CTR, P1209, DOI DOI 10.1007/978-1-4939-2092-1_42
   Wu J., 2015, Handbook on Data Centers, P961
NR 34
TC 2
Z9 2
U1 2
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2019
VL 49
IS 11
BP 1573
EP 1599
DI 10.1002/spe.2743
EA SEP 2019
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JG7JQ
UT WOS:000485482300001
DA 2024-07-18
ER

PT J
AU Gutiérrez-Madroñal, L
   García-Domínguez, A
   Medina-Bulo, I
AF Gutierrez-Madronal, Lorena
   Garcia-Dominguez, Antonio
   Medina-Bulo, Inmaculada
TI Evolutionary mutation testing for IoT with recorded and generated events
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CEP; event processing language; evolutionary mutation testing; genetic
   algorithm; guided evolutionary mutation testing; internet of things;
   IoT-TEG
ID REAL-TIME SYSTEMS
AB Mutation testing is a testing technique that has been applied successfully to several programming languages. Despite its benefits for software testing, the high computational cost of mutation testing has kept it from being widely used. Several refinements have been proposed to reduce its cost by reducing the number of generated mutants; one of those is evolutionary mutation testing (EMT). Evolutionary mutation testing aims at generating a reduced set of mutants with an evolutionary algorithm, which searches for potentially equivalent and difficult to kill mutants that help improve the test suite. Evolutionary mutation testing has been evaluated in two contexts so far, ie, web service compositions and object-oriented C++ programmes. This study explores its performance when applied to event processing language queries of various domains. This study also considers the impact of the test data, since a lack of events or the need to have specific values in them can hinder testing. The effectiveness of evolutionary mutation testing with the original test data generators and the new internet of things test event generator tool is compared in multiple case studies.
C1 [Gutierrez-Madronal, Lorena; Medina-Bulo, Inmaculada] Univ Cadiz, UCASE Res Grp, Cadiz, Spain.
   [Garcia-Dominguez, Antonio] Aston Univ, SEA Res Grp, Birmingham, W Midlands, England.
C3 Universidad de Cadiz; Aston University
RP Gutiérrez-Madroñal, L (corresponding author), Escuela Super Ingn, UCASE Res Grp, C Avd Univ Cadiz 10, Cadiz 11519, Spain.
EM lorena.gutierrez@uca.es
RI Gutiérrez-Madroñal, Lorena/A-3346-2016; Medina-Bulo,
   Inmaculada/L-5523-2014; Garcia Dominguez, Antonio/IAN-2064-2023
OI Gutiérrez-Madroñal, Lorena/0000-0002-2214-617X; Medina-Bulo,
   Inmaculada/0000-0002-7543-2671; Garcia Dominguez,
   Antonio/0000-0002-4744-9150
FU Ministry of Economy and Competitiveness (Spain); FEDER Fund
   [TIN2015-65845-C3-3-R]; Excellence Network SEBASENet
   [TIN2015-71841-REDT]
FX The Ministry of Economy and Competitiveness (Spain); FEDER Fund,
   Grant/Award Number: TIN2015-65845-C3-3-R; Excellence Network SEBASENet,
   Grant/Award Number: TIN2015-71841-REDT
CR Agrawal H., 1989, Design of mutant operators for the C programming language
   Ahmed Z., 2010, 2010 2 INT C COMP AU 2010 2 INT C COMP AU
   [Anonymous], 1980, Order No. 8025191
   [Anonymous], 2012, RECENT ADV INTELLIGE
   [Anonymous], SERV OR COMP ICSOC 2
   Barbosa EF, 2001, SOFTW TEST VERIF REL, V11, P113, DOI 10.1002/stvr.226
   Blanco-Munoz E, 2011, P INT C E BUS SEV SP
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Delgado-Perez P, 2017, P S APPL COMP MARR M
   Domínguez-Jiménez JJ, 2011, INFORM SOFTWARE TECH, V53, P1108, DOI 10.1016/j.infsof.2011.03.008
   Dominguez-Jimenez JJ, 2009, 2009 7 IEEE EUR C WE
   EsperTech, ESPERTECH SELF SERV
   Etzion O., 2010, Event Processing in Action, Vfirst
   Gad R., 2015, THESIS
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Gutiérrez-Madroñal L, 2018, J SYST SOFTWARE, V137, P784, DOI 10.1016/j.jss.2017.06.037
   Gutierrez-Madronal L, 2012, 2012 IEEE 23 INT S S
   Gutierrez-Madronal L., 2017, THESIS
   Gutierrez-Madronal L, 2015, 7 EUR S COMP INT MAT
   Haller S., 2008, The Internet of Things in an Enterprise Context' Research gate
   HEATH WS, 1991, REAL TIME SOFTWARE T
   Jia Y., 2008, 2008 8 IEEE INT WORK
   Kim H, 2018, IEEE ACCESS, V6, P15480, DOI 10.1109/ACCESS.2018.2802489
   Krichen M, 2009, FORM METHOD SYST DES, V34, P238, DOI 10.1007/s10703-009-0065-1
   Li C, 2017, PROCEDIA COMPUT SCI, V112, P2328, DOI 10.1016/j.procs.2017.08.265
   Luckham, 2006, VIEW CURRENT STATE E
   Luckham D., 2002, The Power of Events: An Introduction to Complex Event Processing in Distributed Enterprise Systems
   Ma Y-S, 2006, P 28 INT C SOFTW ENG
   Microsoft, COMP EV GRID ROUT IO
   Milne A, 2018, COMPLEX EVENT PROCES
   Nilsson R, 2007, 2 INT WORKSH AUT SOF
   Nilsson R, 2004, P 28 ANN INT COMP SO
   Nilsson R, 2006, ELECTRON NOTES THEOR, V164, P97, DOI 10.1016/j.entcs.2006.10.010
   Offutt A.J., 2000, MUTATION TESTING NEW, P34
   Offutt A.J., 1996, ISSETR9609
   Rose H, 2012, PARALLEL PROBLEM SOL
   Schiefer Josef, 2007, P 2007 IN INT C DIST
   Tonneau AS, 2015, AD HOC NETW, V30, P115, DOI 10.1016/j.adhoc.2015.03.002
   Tuya J, 2007, INFORM SOFTWARE TECH, V49, P398, DOI 10.1016/j.infsof.2006.06.009
   Vermesan O, 2013, RIVER PUBL SER COMM, P7
   Vijayalakshmi SR, 2017, 2017 INT C I SMAC IO
   WANG W., 2012, 2012 IEEE 11 INT C T
   Wegener J, 1997, SOFTWARE QUAL J, V6, P127, DOI 10.1023/A:1018551716639
   Wegener J, 1998, REAL-TIME SYST, V15, P275, DOI 10.1023/A:1008096431840
   Wegener J., 1996, 4 INT C SOFTW TEST A
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang QF, 2005, IEEE T EVOLUT COMPUT, V9, P192, DOI 10.1109/TEVC.2004.840835
NR 47
TC 19
Z9 19
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2019
VL 49
IS 4
SI SI
BP 640
EP 672
DI 10.1002/spe.2629
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN5AE
UT WOS:000460194000005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Arnatovich, YL
   Wang, LP
   Ngo, NM
   Soh, C
AF Arnatovich, Yauhen Leanidavich
   Wang, Lipo
   Ngoc Minh Ngo
   Soh, Charlie
TI Mobolic: An automated approach to exercising mobile application GUIs
   using symbiosis of online testing technique and customated input
   generation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE event-driven FSM; model-based testing; model checking; symbolic
   execution; systematic GUI exploration; textual input generation
AB The increasingly prevalent use of mobile devices has raised the popularity of mobile applications. Therefore, automated testing of mobile applications has become an extremely important task. However, it is still a challenge to automatically generate tests with high coverage for mobile applications due to their specific nontrivial structure and the highly interactive nature of graphical user interfaces (GUIs). In this paper, we propose a novel automated GUI testing technique for mobile applications, namely, Mobolic. In this approach, tests with high coverage are automatically generated and executed by combining the online testing technique and customated input generation. Employing the online testing technique, Mobolic systematically explores the app GUI without falling in a loop. It generates relevant events on the fly that are followed by an immediate execution. In addition, involving the customated input generation, Mobolic automatically generates relevant user inputs such as user-predefined, concrete, or random ones. We implemented Mobolic and evaluated its performance on 10 real-world open-source Android applications. Our experimental results show the effectiveness and efficiency of Mobolic in terms of achieved code coverage and overall exercising time.
C1 [Arnatovich, Yauhen Leanidavich; Wang, Lipo; Soh, Charlie] Nanyang Technol Univ, Sch Elect & Elect Engn, Singapore, Singapore.
   [Ngoc Minh Ngo] Arizona State Univ, Global Outreach & Extended Educ, Ho Chi Minh City, Vietnam.
C3 Nanyang Technological University
RP Wang, LP (corresponding author), Nanyang Technol Univ, Sch Elect & Elect Engn, Dept Informat Engn, 50 Nanyang Ave, Singapore 639798, Singapore.
EM elpwang@ntu.edu.sg
RI Wang, Lipo/A-5154-2011; Arnatovich, Yauhen/AAI-1913-2021
OI Arnatovich, Yauhen/0000-0001-8266-9151
CR Amalfitano D, 2011, 2011 IEEE 4 INT C SO
   Amalfitano D., 2012, P 27 IEEE ACM INT C
   Amalfitano D, 2017, J SYST SOFTWARE, V125, P322, DOI 10.1016/j.jss.2016.12.017
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Anand S., 2012, THESIS
   Anand S, 2012, P ACM SIGSOFT 20 INT, V59
   [Anonymous], P 29 INT C SOFTW ENG
   [Anonymous], 2012, WORKSH MOB SEC TECHN
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], P 33 INT C SOFTW ENG
   [Anonymous], P 19 INT S SOFTW TES
   [Anonymous], 2011, P 16 INT C ARCH SUPP
   [Anonymous], 2013, P 11 ANN INT C MOB S
   [Anonymous], TECHNICAL REPORT
   [Anonymous], P 2014 ACM SIGSAC C
   Arnatovich YL, 2016, 2016 23 AS PAC SOFTW
   Artzi S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P571, DOI 10.1145/1985793.1985871
   Azim T., 2013, P 2013 ACM SIGPLAN I
   Brummayer R, 2010, AUTOMATED TESTING DE, P44
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Choi W., 2013, P 2013 ACM SIGPLAN I
   Choudhary SR, 2015, 2015 30 IEEE ACM INT
   De Moura L, 2008, 14 INT C TOOLS ALG C
   De Moura L, 2009, 12 BRAZ S FORM METH
   Feldt R., 2010, VALIDITY THREATS EMP
   Gamboa MA, 2016, 2016 4 INT C MOD DRI
   Gianazza A., 2014, ARXIV14024826
   Godboley S, 2017, SOFTWARE PRACT EXPER, V47, P311, DOI 10.1002/spe.2405
   Godefroid P., 2005, P 2005 ACM SIGPLAN C
   Gutiérrez JJ, 2015, J SYST SOFTWARE, V109, P214, DOI 10.1016/j.jss.2015.08.001
   Hamlet Richard., 1994, Random testing. Encyclopedia of software Engineering
   Hofer B, 2009, 2009 ICSE WORKSH AUT
   Hu C., 2011, P 6 INT WORKSH AUT S
   Inkumsah K, 2007, P 22 IEEE ACM INT C
   Jensen C. S., 2013, P 2013 INT S SOFTW T
   Klein John, 2015, TECHNICAL REPORT
   Larsen KG, 2005, ONLINE TESTING REAL, P79
   Lee J, 2005, COMMUN ACM, V48, P75, DOI 10.1145/1101779.1101813
   Li G, 2009, 2009 3 INT C NEW TEC
   Linehan M. H., 2006, P 2 INT SEM WEB POL
   Liu H, 2011, SOFTWARE PRACT EXPER, V41, P1131, DOI 10.1002/spe.1067
   Liu P, 2017, P 39 INT C SOFTW ENG
   Machiry Aravind, 2013, P 2013 9 JOINT M FDN
   Mahmood R., 2014, P 22 ACM SIGSOFT INT
   Mao K., 2016, P INT S SOFTWARE TES
   Marback A, 2013, SOFTWARE PRACT EXPER, V43, P241, DOI 10.1002/spe.2111
   Mehlitz P, 2011, P 2011 26 IEEE ACM I
   Mirzaei Nariman, 2012, ACM SIGSOFT Software Engineering Notes, V37, P1, DOI DOI 10.1145/2382756.2382798
   Nguyen BN, 2014, AUTOMAT SOFTW ENG, V21, P65, DOI 10.1007/s10515-013-0128-9
   Nguyen CD, 2012, P COMB INT S SOFTW T
   Nyman Noel., 2000, Software Testing and Quality Engineering Magazine
   Pacheco C, 2007, COMP 22 ACN SIGPLAN
   Poole D.L., 2010, ARTIF INTELL, DOI DOI 10.1017/9781108164085
   Potdar G.P., 2014, Int. J. Artific. Intell. Appl., V5, P63
   Siddiqui JH, 2010, 2010 2 INT C SOFTW T
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Walton GH, 2000, SOFTWARE PRACT EXPER, V30, P1095, DOI 10.1002/1097-024X(200008)30:10<1095::AID-SPE328>3.0.CO;2-H
   Wohlin C., 2012, Experimentation in Software Engineering
   Wright HK, 2010, P FSE SDP WORKSH FUT
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Yang WR, 2014, J SYST SOFTWARE, V89, P76, DOI 10.1016/j.jss.2013.09.043
   Yuan X., 2007, P 29 INT C SOFTW ENG
   Zhang J, 2002, SOFTWARE PRACT EXPER, V32, P1411, DOI 10.1002/spe.487
   [No title captured]
NR 65
TC 5
Z9 6
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2018
VL 48
IS 5
BP 1107
EP 1142
DI 10.1002/spe.2564
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC4BJ
UT WOS:000429727600006
DA 2024-07-18
ER

PT J
AU Jamshidi, P
   Pahl, C
   Mendonça, NC
AF Jamshidi, Pooyan
   Pahl, Claus
   Mendonca, Nabor C.
TI Pattern-based multi-cloud architecture migration
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud architecture; microservice architecture; cloud migration;
   migration pattern; multicloud; situational method engineering;
   variability model
ID SOFTWARE MODERNIZATION; ADOPTION
AB Many organizations migrate on-premise software applications to the cloud. However, current coarse-grained cloud migration solutions have made such migrations a non transparent task, an endeavor based on trial-and-error. This paper presents Variability-based, Pattern-driven Architecture Migration (V-PAM), a migration method based on (i) a catalogue of fine-grained service-based cloud architecture migration patterns that target multi-cloud, (ii) a situational migration process framework to guide pattern selection and composition, and (iii) a variability model to structure system migration into a coherent framework. The proposed migration patterns are based on empirical evidence from several migration projects, best practice for cloud architectures and a systematic literature review of existing research. Variability-based, Pattern-driven Architecture Migration allows an organization to (i) select appropriate migration patterns, (ii) compose them to define a migration plan, and (iii) extend them based on the identification of new patterns in new contexts. The patterns are at the core of our solution, embedded into a process model, with their selection governed by a variability model. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Jamshidi, Pooyan] Imperial Coll London, London, England.
   [Pahl, Claus] Free Univ Bozen Bolzano, Bolzano, Italy.
   [Mendonca, Nabor C.] Univ Fortaleza, Fortaleza, Ceara, Brazil.
C3 Imperial College London; Free University of Bozen-Bolzano; Universidade
   Fortaleza
RP Jamshidi, P (corresponding author), Imperial Coll London, Dept Comp, London, England.
EM p.jamshidi@imperial.ac.uk
RI Mendonça, Nabor C/O-8453-2015; Jamshidi, Pooyan/K-2848-2014
OI Jamshidi, Pooyan/0000-0002-9342-0703
FU Irish Centre for Cloud Computing and Commerce (an Irish national
   Technology Centre - Enterprise Ireland); Irish Centre for Cloud
   Computing and Commerce (Irish Industrial Development Authority);
   Brazil's National Council for Scientific and Technological Development
   (CNPq) [487174/2012-7, 310611/2014-8]
FX The research work described in this paper was in parts supported by the
   Irish Centre for Cloud Computing and Commerce (an Irish national
   Technology Centre funded by Enterprise Ireland and the Irish Industrial
   Development Authority). Nabor C. Mendonca is partially supported by
   Brazil's National Council for Scientific and Technological Development
   (CNPq), under grants 487174/2012-7 and 310611/2014-8.
CR Andrikopoulos V, 2014, LECT NOTES COMPUT SC, V8745, P1, DOI 10.1007/978-3-662-44879-3_1
   Andrikopoulos V, 2013, COMPUTING, V95, P493, DOI 10.1007/s00607-012-0248-2
   [Anonymous], P 1 INT WORKSH QUAL
   [Anonymous], 2009, TECHNICAL REPORT
   Balalaie A, 2015, 1 SHAR U TECHN
   Balalaie A, 2016, COMM COM INF SC, V567, P201, DOI 10.1007/978-3-319-33313-7_15
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Bergmayr A., 2015, P 3 INT WORKSH MOD D, P1
   Beserra P. V., 2012, 2012 IEEE 6th International Workshop on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA 2012), P7, DOI 10.1109/MESOCA.2012.6392602
   Bruneliere H, 2015, COMPUTER, V48, P76, DOI 10.1109/MC.2015.234
   Brunnert A., 2015, PERFORMANCE ORIENTED
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Chauhan M. A., 2011, Proceedings of the 2011 IEEE 4th International Conference on Cloud Computing (CLOUD 2011), P404, DOI 10.1109/CLOUD.2011.46
   Cunha M., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P746, DOI 10.1109/CloudCom.2011.115
   Di Martino B, 2013, INT CONF CLOUD COMP, P182, DOI 10.1109/CloudCom.2013.123
   Fehling C., 2014, Cloud Computing Patterns: Fundamentals to Design, Build, and Manage Cloud Applications, DOI DOI 10.1007/978-3-7091-1568-8
   Fehling C, 2013, IEEE INT CONF SERV, P9, DOI 10.1109/SOCA.2013.41
   Frey S., 2011, International Journal on Advances in Software, V4, P342
   Frey S, 2013, J SOFTW-EVOL PROC, V25, DOI 10.1002/smr.582
   Gholami MF, 2014, SOFTW SYST MODEL, V13, P361, DOI 10.1007/s10270-011-0222-z
   Grozev N, 2014, SOFTWARE PRACT EXPER, V44, P369, DOI 10.1002/spe.2168
   Jamshidi P., 2014, ICSOC Workshops, V8954, P6
   Jamshidi P., CLOUD MIGRATION PATT
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Jamshidi P, 2013, EUR CON SFTWR MTNCE, P305, DOI 10.1109/CSMR.2013.39
   Jamshidi Pooyan., 2014, EUROPEAN C SERVICE O, P249
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Khadka R, 2013, MIGRATING LEGACY APPLICATIONS: CHALLENGES IN SERVICE ORIENTED ARCHITECTURE AND CLOUD COMPUTING ENVIRONMENTS, P40, DOI 10.4018/978-1-4666-2488-7.ch003
   Khajeh-Hosseini A., 2011, Proceedings of the 2011 IEEE 4th International Conference on Cloud Computing (CLOUD 2011), P541, DOI 10.1109/CLOUD.2011.59
   Khajeh-Hosseini Ali, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P450, DOI 10.1109/CLOUD.2010.37
   Khajeh-Hosseini A, 2012, SOFTWARE PRACT EXPER, V42, P447, DOI 10.1002/spe.1072
   Kwon YW, 2014, AUTOMAT SOFTW ENG, V21, P345, DOI 10.1007/s10515-013-0136-9
   Maenhaut PJ, 2016, SOFTWARE PRACT EXPER, V46, P31, DOI 10.1002/spe.2320
   Mendonça NC, 2014, COMPUTER, V47, P62, DOI 10.1109/MC.2014.203
   Menychtas A, 2014, SCALABLE COMPUT-PRAC, V15, P131, DOI 10.12694/scpe.v15i2.980
   Mirbel I, 2006, REQUIR ENG, V11, P58, DOI 10.1007/s00766-005-0019-0
   Misra SC, 2011, MATH COMPUT MODEL, V53, P504, DOI 10.1016/j.mcm.2010.03.037
   Mohagheghi P., 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P507, DOI 10.1109/SERVICES.2011.26
   Newman S., 2015, BUILDING MICROSERVIC
   Pahl Claus, 2013, 2013 IEEE 7th International Symposium on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA), P86, DOI 10.1109/MESOCA.2013.6632740
   Pahl Claus, 2013, Service-Oriented and Cloud Computing. Second European Conference (ESOCC 2013). Proceedings: LNCS 8135, P212, DOI 10.1007/978-3-642-40651-5_18
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Saripalli Prasad., 2011, CLOUD COMPUTING CLOU, P316, DOI [DOI 10.1109/CLOUD.2011.61, 10.1109/cloud.2011.61]
   Tran V., 2011, Proceedings of the 2nd International Workshop on Software Engineering for Cloud Computing, P22, DOI [10.1145/1985500.1985505, DOI 10.1145/1985500.1985505]
   van der Meulen R, 2015, WHAT DATA CTR ARCHIT
   Vasconcelos M, 2015, LECT NOTES COMPUT SC, V9306, P181, DOI 10.1007/978-3-319-24072-5_13
   Wilder B., 2012, Cloud Architecture Patterns
   Wilkes L., 2011, APPL MIGRATION PATTE
   Xiong HH, 2014, LECT NOTES COMPUT SC, V8627, P226, DOI 10.1007/978-3-319-09970-5_21
NR 49
TC 30
Z9 32
U1 2
U2 30
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2017
VL 47
IS 9
SI SI
BP 1159
EP 1184
DI 10.1002/spe.2442
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD0BH
UT WOS:000407204300001
OA Green Published
DA 2024-07-18
ER

PT J
AU Bispo, J
   Cardoso, JMP
AF Bispo, Joao
   Cardoso, Joao M. P.
TI A MATLAB subset to C compiler targeting embedded systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE MATLAB; C code generation; source-to-source compilers; aspect-oriented
   programming; LARA; embedded systems
ID PROGRAMS; LANGUAGE
AB This paper describes MATISSE, a compiler able to translate a MATLAB subset to C targeting embedded systems. MATISSE uses LARA, an aspect-oriented programming language, to specify additional information and transformations to the input MATLAB code, for example, insertion of code for initialization of variables, and specification of types and shapes of variables. The compiler is being developed bearing in mind flexibility, multitarget and multitoolchain support, allowing for the generation of several implementations in C from the same reference code in MATLAB. In this paper, we also present a number of techniques being employed in MATLAB to C compilation, such as element-wise mapping operations, matrix views, weak types, and intrinsics. We validate these techniques using MATISSE and a set of representative benchmarks. More specifically, we evaluate the compiler with a set of 31 benchmarks using an embedded system board and a desktop computer. The results show speedups up to 1.8x by employing information provided by LARA aspects, when compared with C code generated without additional user information. When compared with the execution time of the original code running on MATLAB, the execution time of the generated C code achieved a geometric mean speedup of 13x. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Bispo, Joao; Cardoso, Joao M. P.] Univ Porto, Fac Engn, Dept Engn Informat, Oporto, Portugal.
   [Bispo, Joao; Cardoso, Joao M. P.] INESC TEC, Oporto, Portugal.
C3 Universidade do Porto; INESC TEC
RP Bispo, J (corresponding author), Univ Porto, Fac Engn, Dept Engn Informat, Oporto, Portugal.
EM jbispo@fe.up.pt
RI Bispo, João/C-6682-2008
OI Bispo, João/0000-0002-3017-9449
FU North Portugal Regional Operational Programme, under the National
   Strategic Reference Framework (NSRF), through the European Regional
   Development Fund (ERDF) [ON.2-O Novo Norte]; national funds, through the
   Portuguese funding agency, Fundacao para a Ciencia e a Tecnologia (FCT);
    [REAL TIME NORTE-07-0124-FEDER-000062]
FX This work was partially funded by project REAL TIME
   NORTE-07-0124-FEDER-000062, which was financed by the North Portugal
   Regional Operational Programme (ON.2-O Novo Norte), under the National
   Strategic Reference Framework (NSRF), through the European Regional
   Development Fund (ERDF), and by national funds, through the Portuguese
   funding agency, Fundacao para a Ciencia e a Tecnologia (FCT). The
   authors would like to acknowledge Luis Reis and Tiago Carvalho regarding
   their help on topics addressing the code generation and the LARA
   language, respectively.
CR Almasi G, 2001, MAJIC MATLAB JUST IN
   [Anonymous], 2009, BEST PRACT MATLAB WO
   [Anonymous], ACM Computing Surveys, DOI [DOI 10.1145/242224.242420, 10.1145/242224.242420]
   Banerjee P, 2003, ANN IEEE SYM FIELD P, P263
   Becker J., 2012, 2012 15th Euromicro Conference on Digital System Design (DSD 2012), P114, DOI 10.1109/DSD.2012.65
   Birkbeck N, 2007, INT SYM CODE GENER, P115
   Bispo J., 2014, P ACM SIGPLAN INT WO, P95
   Bispo J, 2015, P 2 ACM SIGPLAN INT, DOI [10.1145/2774959.2774961, DOI 10.1145/2774959.2774961]
   Bispo J, 2013, IEEE INTL CONF IND I, P602, DOI 10.1109/INDIN.2013.6622952
   Bispo Joao, 2015, 30 ACM S APPL COMP S
   Blackford LS, 2002, ACM T MATH SOFTWARE, V28, P135, DOI 10.1145/567806.567807
   Bodzay A., 2015, P 14 INT C MODULARIT, P41
   Cardoso J., 2006, WORKSH SOFTW ENG PRO
   Cardoso J.M., 2010, A domain-specific aspect language for transforming MATLAB programs, P15
   Cardoso J.M. P., 2012, Proceedings of the 11th Annual International Conference on Aspect-oriented Software Development, AOSD '12, P179
   Cardoso JM, 2014, SOFTWARE PRACTICE EX, V46, P251
   Cardoso Joao M. P., 2013, Compilation and Synthesis for Embedded Reconfigurable Systems: An Aspect-Oriented Approach
   Casey A, 2010, PROCEEDINGS OF THE THIRD C* CONFERENCE ON COMPUTER SCIENCE AND SOFTWARE ENGINEERING 2010 (C3S2E '10), P114, DOI 10.1145/1822327.1822343
   Chevalier-Boisvert M, 2010, LECT NOTES COMPUT SC, V6011, P46, DOI 10.1007/978-3-642-11970-5_4
   Chun-Yu Shei, 2011, 2011 INTERACT-15: Proceedings of the 15th Workshop on Interaction between Compilers and Computer Architectures (INTERACT 2011), P44, DOI 10.1109/INTERACT.2011.18
   De Rose L., 1996, Languages and Compilers for Parallel Computing. 8th International Workshop, LCPC Proceedings, P269, DOI 10.1007/BFb0014205
   De Rose L, 1999, ACM T PROGR LANG SYS, V21, P286, DOI 10.1145/316686.316693
   de Rose LuizAntonio., 1996, COMPILER TECHNIQUES
   Doherty J, 2011, ACM SIGPLAN NOTICES, V46, P99, DOI 10.1145/2076021.2048077
   Dubrau A. W., 2012, TAMING MATLAB, V47
   Gradecki J.D., 2003, MASTERING ASPECTJ AS
   Joisha PG, 2003, ACM SIGPLAN NOTICES, V38, P258, DOI 10.1145/780822.781160
   Joisha PG, 2007, SOFTWARE PRACT EXPER, V37, P535, DOI 10.1002/spc.781
   Joisha PG, 2006, ACM T PROGR LANG SYS, V28, P848, DOI 10.1145/1152649.1152651
   Kumar V, 2014, ACM SIGPLAN NOTICES, V49, P617, DOI [10.1145/2660193.2660218, 10.1145/2714064.2660218]
   Kumar Vineet., 2013, P 3 ACM SIGPLAN X10, P2
   Lam M., 2006, COMPILERS PRINCIPLES
   Lameed N. A., 2013, DYNAMIC COMPILER OPT
   Li X., 2014, MC2FOR MATLAB FORTRA
   Martins P, 2012, LECT NOTES COMPUT SC, V7336, P217, DOI 10.1007/978-3-642-31128-4_16
   Navak A., 2001, P 9 IEEE S FIELD PRO, P1
   Olmos K, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P141, DOI 10.1109/SCAM.2003.1238040
   Prasad A, 2011, ACM SIGPLAN NOTICES, V46, P152, DOI 10.1145/1993316.1993517
   Reis L, 2015, COMP PAR COMP CPC 15
   Rose L.D., 1996, International Conference on Supercomputing, P309
   Sharma G, 2009, INT J PARALLEL PROG, V37, P3, DOI 10.1007/s10766-008-0082-5
   Toheed Aslam AntonDubrau., 2010, AOSD 10 P 9 INT C AS, P181
NR 42
TC 9
Z9 9
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2017
VL 47
IS 2
BP 249
EP 272
DI 10.1002/spe.2408
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EK2RP
UT WOS:000393774700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bellodi, E
   Lamma, E
   Riguzzi, F
   Zese, R
   Cota, G
AF Bellodi, Elena
   Lamma, Evelina
   Riguzzi, Fabrizio
   Zese, Riccardo
   Cota, Giuseppe
TI A web system for reasoning with probabilistic OWL
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE semantic web; web applications; description logics; probabilistic
   description logics; SWI-Prolog; logic programming
ID KNOWLEDGE REPRESENTATION; LOGIC; LANGUAGE
AB We present the web application Tableau Reasoner for descrIption Logics in proLog on SWI-Prolog for SHaring (TRILL on SWISH) which allows the user to write probabilistic description logic (DL) theories and compute the probability of queries with just a web browser. Various probabilistic extensions of DLs have been proposed in the recent past, because uncertainty is a fundamental component of the Semantic Web. We consider probabilistic DL theories following our distribution semantics for probabilistic ontologies (DISPONTE) semantics. Axioms of a DISPONTE knowledge base can be annotated with a probability, and the probability of queries can be computed with inference algorithms. TRILL is a probabilistic reasoner for DISPONTE knowledge base that is implemented in Prolog and exploits its backtracking facilities for handling the non-determinism of the tableau algorithm. TRILL on SWISH is based on SWISH, a recently proposed web framework for logic programming, based on various features and packages of SWI-Prolog (e.g., a web server and a library for creating remote Prolog engines and posing queries to them). TRILL on SWISH also allows users to cooperate in writing a probabilistic DL theory. It is free, open, and accessible on the Web at the url: ; it includes a number of examples that cover a wide range of domains and provide interesting Probabilistic Semantic Web applications. By building a web-based system, we allow users to experiment with probabilistic DLs without the need to install a complex software stack. In this way, we aim to reach out to a wider audience and popularize the Probabilistic Semantic Web. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Bellodi, Elena; Lamma, Evelina; Zese, Riccardo; Cota, Giuseppe] Univ Ferrara, Dipartimento Ingn, Via Saragat 1, I-44122 Ferrara, Italy.
   [Riguzzi, Fabrizio] Univ Ferrara, Dipartimento Matemat & Informat, Via Saragat 1, Ferrara, Italy.
C3 University of Ferrara; University of Ferrara
RP Riguzzi, F (corresponding author), Univ Ferrara, Dipartimento Matemat & Informat, Via Saragat 1, Ferrara, Italy.
EM fabrizio.riguzzi@unife.it
RI Bellodi, Elena/AAE-7286-2020; Zese, Riccardo/Q-8581-2017; Cota,
   Giuseppe/AAU-3295-2020; Fabrizio, Riguzzi/C-7679-2012; BELLODI,
   Elena/HNP-1127-2023
OI Zese, Riccardo/0000-0001-8352-6304; Cota, Giuseppe/0000-0002-3780-6265;
   Fabrizio, Riguzzi/0000-0003-1654-9703; BELLODI,
   Elena/0000-0002-3717-3779
FU 'GNCS-INdAM'
FX We would like to thank Jan Wielemaker for his very useful comments on
   how to set up the system. This work was supported by the 'GNCS-INdAM'.
CR [Anonymous], 1990, REPRESENTING REASONI
   BAADER F, 1995, J AUTOM REASONING, V14, P149, DOI 10.1007/BF00883932
   Baader F., 2003, DESCRIPTION LOGIC HD
   Baader F, 2010, J LOGIC COMPUT, V20, P5, DOI 10.1093/logcom/exn058
   Baader F, 2008, FOUND ARTIF INTELL, P135, DOI 10.1016/S1574-6526(07)03003-9
   Bellodi E., 2011, CEUR WORKSHOP P, V778, P75
   Bellodi E, 2017, SOFTWARE PRACT EXPER, V47, P125, DOI 10.1002/spe.2410
   Ceylan Ismail Ilkan, 2014, CEUR WORKSHOP P, V1193, P447
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   d'Amato C, 2008, LECT NOTES ARTIF INT, V5291, P146, DOI 10.1007/978-3-540-87993-0_13
   Darwiche A, 2002, J ARTIF INTELL RES, V17, P229, DOI 10.1613/jair.989
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Fuhr N, 2000, J AM SOC INFORM SCI, V51, P95, DOI 10.1002/(SICI)1097-4571(2000)51:2<95::AID-ASI2>3.0.CO;2-H
   Haarslev V, 2012, SEMANT WEB, V3, P267, DOI 10.3233/SW-2011-0032
   HALPERN JY, 1990, ARTIF INTELL, V46, P311, DOI 10.1016/0004-3702(90)90019-V
   Hitzler Pascal, 2009, Foundations of semantic web technologies
   Kalyanpur A., 2006, THESIS
   Klinov P, 2008, LECT NOTES COMPUT SC, V5021, P822
   Lager T, 2014, THEOR PRACT LOG PROG, V14, P539, DOI 10.1017/S1471068414000192
   Meinel C., 1994, Mathematical Foundations of Computer Science 1994. 19th International Symposium, MFCS'94. Proceedings, P515
   NILSSON NJ, 1986, ARTIF INTELL, V28, P71, DOI 10.1016/0004-3702(86)90031-7
   Patel-Schneider F., 2003, TUTORIAL ON OWL
   Poole D, 1997, ARTIF INTELL, V94, P7, DOI 10.1016/S0004-3702(97)00027-1
   POOLE D, 1993, ARTIF INTELL, V64, P81, DOI 10.1016/0004-3702(93)90061-F
   Riguzzi F., 2012, CEUR WORKSHOP P, V846, P519
   Riguzzi F., 2012, P 8 INT WORKSH UNC R, V900, P3
   Riguzzi F, 2016, SOFTWARE PRACT EXPER, V46, P1381, DOI 10.1002/spe.2386
   Riguzzi F, 2015, SEMANT WEB, V6, P477, DOI 10.3233/SW-140154
   Riguzzi F, 2009, LOG J IGPL, V17, P589, DOI 10.1093/jigpal/jzp025
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   Sato T., 1995, P INT C LOG PROGR, P715
   Schreiber G, 2008, J WEB SEMANT, V6, P243, DOI 10.1016/j.websem.2008.08.001
   Shearer R., 2008, P 5 OWLED WORKSHOP O, P1
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Tudorache T, 2013, SEMANT WEB, V4, P89, DOI 10.3233/SW-2012-0057
   VALIANT LG, 1979, SIAM J COMPUT, V8, P410, DOI 10.1137/0208032
   Vassiliadis V, 2009, INT WORKSH OWL EXP D, V529, P1
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P195, DOI 10.1007/978-3-540-27775-0_14
   Vennekens J, 2009, THEOR PRACT LOG PROG, V9, P245, DOI 10.1017/S1471068409003767
   Wielemaker J, 2008, THEOR PRACT LOG PROG, V8, P363, DOI 10.1017/S1471068407003237
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Zese Riccardo, 2014, Uncertainty Reasoning for the Semantic Web III. ISWC International Workshops URSW 2011-2013. Revised Selected Papers: LNCS 8816, P79, DOI 10.1007/978-3-319-13413-0_5
   Zese Riccardo., 2013, P 28 ITALIAN C COMPU, P33
NR 43
TC 8
Z9 8
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2017
VL 47
IS 1
BP 125
EP 142
DI 10.1002/spe.2410
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI5DO
UT WOS:000392514400006
OA Green Published
DA 2024-07-18
ER

PT J
AU Pizzonia, M
   Rimondini, M
AF Pizzonia, Maurizio
   Rimondini, Massimo
TI Netkit: network emulation for education
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE emulation; computer networks; didactics; teaching; virtualization;
   Netkit
AB In the era of virtualization, virtual networking plays an important role. Besides production use, virtual networking can be effectively adopted in many other contexts where accurate emulation of functionalities is important, like testing before deployment, evaluation of what-if scenarios, research, and, increasingly, didactics. In this paper, we describe our 10-year experience in designing, implementing, using, and maintaining Netkit, an environment for simple, inexpensive, and lightweight network emulation targeted at didactics. We analyze the peculiar requirements in this context and discuss how the architecture chosen for Netkit is tailored to fulfill them. We show that Netkit is particularly well suited for a quick preparation of complex network scenarios comprising a wide range of networking technologies. These scenarios can be specified using configuration languages that are similar to those used on real devices and, once set up, can be easily distributed via email or published on the Web. Netkit comes with a rich set of ready-to-use pre-configured networks, accompanied by lecture slides that enable users to immediately experiment with specific case studies. To complete the picture, we report our experience in supporting and fostering the growth of the community of users revolving around Netkit: more than 15 educational institutions worldwide take advantage of Netkit, allowing teachers and students to practice with realistic networks without the need of expensive laboratories. We also detail how we profitably use Netkit within advanced academic-level networking courses and related examinations at the Roma Tre University. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Pizzonia, Maurizio; Rimondini, Massimo] Univ Rome Tre, Dept Engn, I-00146 Rome, Italy.
C3 Roma Tre University
RP Rimondini, M (corresponding author), Univ Rome Tre, Sect Comp Sci & Automat, Dept Engn, Via Vasca Navale 79, I-00146 Rome, Italy.
EM rimondin@dia.uniroma3.it
OI Rimondini, Massimo/0000-0003-1523-5315
FU ESF [10-EuroGIGA-OP-003 GraDR]
FX This work is partially supported by ESF project 10-EuroGIGA-OP-003
   GraDR.
CR Ahrenholz J, 2008, IEEE MILIT COMMUN C, P3856
   [Anonymous], 2012, Software-Defined Networking: The New Norm for Networks
   [Anonymous], 2006, 4271 IETF RFC
   Bellard F., Qemu - open source processor emulator
   Bonaventure O., COMPUTER NETWORKING
   Davoli R., 2005, 1 INT C TESTBEDS RES, P213, DOI DOI 10.1109/TRIDNT.2005.38
   Dike Jeff., 2006, USER MODE LINUX
   Feamster N, 2011, P SIGCOMM 2011 ED WO
   Fernandez D, 2011, P WORKSH SYST VIRT M, DOI [10.1109/SVM.2011.6096467, DOI 10.1109/SVM.2011.6096467]
   Fillot C., DYNAMIPS CISCO 7200
   Galan F, 2008, P WORKSH SYST VIRT M
   Galán F, 2009, ANN TELECOMMUN, V64, P305, DOI 10.1007/s12243-009-0104-3
   Knight S, 2013, PROCEEDINGS OF THE 2013 ACM INTERNATIONAL CONFERENCE ON EMERGING NETWORKING EXPERIMENTS AND TECHNOLOGIES (CONEXT '13), P235, DOI 10.1145/2535372.2535378
   Knight S, 2012, ACM SIGCOMM COMP COM, V42, P97, DOI 10.1145/2377677.2377699
   Kohler E, 2000, ACM T COMPUT SYST, V18, P263, DOI 10.1145/354871.354874
   Lantz B., 2010, Proceedings of the 9th ACM SIGCOMM Workshop on Hot Topics in Networks, P19, DOI 10.1145/1868447.1868466
   Leu JR, MPLS FOR LINUX
   Liebeherr J., 2004, MASTERING NETWORKS I
   Linkletter B, NETKIT TEST DRIVE IN
   Loddo JV, 2007, P ACM SIGPLAN WORKSH, DOI [10.1145/1292535.1292545, DOI 10.1145/1292535.1292545]
   Maheswaran Muthucumaru, 2009, SIGCSE Bulletin, V41, P39, DOI 10.1145/1539024.1508880
   McKeown N, 2008, ACM SIGCOMM COMP COM, V38, P69, DOI 10.1145/1355734.1355746
   Pizzonia M, 2008, P TRIDENTCOM INNSBR
   Rimondini M., 2007, RTDIA1132007
   Stewart J., 1999, BGP4 INTERDOMAIN ROU
   University of Zagreb Department of Telecommunications, IMUNES INT MULTIPROT
   US Naval Research Laboratory, CORE COMM OP RES EM
   XORP Inc, XORP EXTENSIBLE OP R
   Zec M., 2003, P 2003 USENIX ANN TE
NR 29
TC 12
Z9 13
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2016
VL 46
IS 2
BP 133
EP 165
DI 10.1002/spe.2273
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA6HP
UT WOS:000367904000001
OA Bronze
DA 2024-07-18
ER

PT J
AU Ortac, A
   Monperrus, M
   Mezini, M
AF Ortac, Alper
   Monperrus, Martin
   Mezini, Mira
TI Abmash: mashing up legacy Web applications by automated imitation of
   human actions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web applications; legacy software; integration; mash-up
ID INTEGRATION; SERVICES; MASHUPS
AB Many business Web-based applications do not offer APIs to enable other applications to access their data and functions in a programmatic manner. This makes their composition difficult (for instance to synchronize data between two applications). To address this challenge, this paper presents Abmash, an approach to facilitate the integration of such legacy Web applications by automatically imitating human interactions with them. By automatically interacting with the GUI of Web applications, the system supports all forms of integrations including bidirectional interactions and is able to interact with AJAX-based applications. Furthermore, the integration programs are easy to write because they deal with end-user, visual UI elements. The integration code is simple enough to be called a mash-up'. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Ortac, Alper] Acama Syst, Kassel, Germany.
   [Monperrus, Martin] Univ Lille, Villeneuve Dascq, France.
   [Mezini, Mira] Tech Univ Darmstadt, Darmstadt, Germany.
C3 Universite de Lille; Technical University of Darmstadt
RP Monperrus, M (corresponding author), Univ Lille, Campus Sci, Villeneuve Dascq, France.
EM martin.monperrus@univ-lille1.fr
RI Monperrus, Martin/I-3640-2012
OI Monperrus, Martin/0000-0003-3505-3383
CR Altinel M., 2007, En Proceedings of the 33rd international conference on Very large data bases, P1370
   [Anonymous], 2009, P 14 INT C INT US IN
   [Anonymous], 2009, P WEB C
   Baumgartner R., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P119
   Baumgartners R, 2003, P IIWEB, V3, P137
   Beemer B, 2009, FUTURE INTERNET, V1, P59, DOI 10.3390/fi1010059
   Bolin Michael, 2005, Proceedings of the ACM symposium on User interface software and technology (UIST '05), P163, DOI [10.1145/1095034.1095062, DOI 10.1145/1095034.1095062]
   Cai D, 2003, LECT NOTES COMPUT SC, V2642, P406
   Cais D, 2003, TECHNICAL REPORT
   Canfora G., 2006, 10th European Conference on Software Maintenance and Reengineering
   Cao Jill, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P149, DOI 10.1109/VLHCC.2010.29
   Cappiello C, 2009, LECT NOTES COMPUT SC, V5648, P236, DOI 10.1007/978-3-642-02818-2_19
   Chang K.C.-C., 2005, PROC CIDR, P44
   Curbera F, 2007, LECT NOTES COMPUT SC, V4749, P94
   Daniel F, 2009, LECT NOTES COMPUT SC, V5829, P428, DOI 10.1007/978-3-642-04840-1_32
   Di Lorenzo G, 2009, SIGMOD REC, V38, P59, DOI 10.1145/1558334.1558343
   Drumm C., 2007, P 16 ACM C INFORM KN, P107, DOI DOI 10.1145/1321440.1321458
   Ennals R, 2007, ACM SIGPLAN NOTICES, V42, P223, DOI 10.1145/1291220.1291187
   FAGAN J, 2007, COMPUTERS LIB, V27, P10
   Fowlers M, 2005, FLUENT INTERFACE
   Gamble MT, 2008, IEEE SOFTWARE, V25, P71, DOI 10.1109/MS.2008.152
   Grammel L, 2010, LECT NOTES COMPUT SC, V6400, P137
   Grammels L, 2008, DCS324IR U VICT
   Gupta S., 2003, P 12 INT C WORLD WID, P207, DOI [10.1145/775152.775182, DOI 10.1145/775152.775182]
   Gurram R, 2008, LECT NOTES COMPUT SC, V5176, P144, DOI 10.1007/978-3-540-85200-1_17
   Hartmann B, 2008, IEEE PERVAS COMPUT, V7, P46, DOI 10.1109/MPRV.2008.54
   Hartmann B, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P241
   Hornung Thomas, 2008, LECT NOTES BUSINESS, P228
   Hoyer V, 2008, P IEEE I C SERV COMP, P601, DOI 10.1109/SCC.2008.88
   Huy H. P., 2005, P 14 INT C WORLD WID, P850
   Huynh D.F., 2007, P 16 INT C WORLD WID, P737
   Huynh DF, 2008, J WEB SEMANT, V6, P274, DOI 10.1016/j.websem.2008.09.005
   Jan YW, 2005, 2005 IEEE/WIC/ACM International Conference on Web Intelligence, Proceedings, P590
   Kaibs M, 2002, ENTERPRISE APPL INTE
   KOCH N., 2004, Journal of Web Engineering, V3, P22
   Koschmider A., 2009, P 2 WORKSH MASH ENT, P1
   Leshed G, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1719
   Linthicums DS, 2000, ENTERPRISE APPL INTE
   Little G, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P943
   LIU W., 2006, P 9 INT WORKSH WEB D, P20
   Liu W, 2010, IEEE T KNOWL DATA EN, V22, P447, DOI 10.1109/TKDE.2009.109
   López J, 2009, LECT NOTES COMPUT SC, V5648, P30, DOI 10.1007/978-3-642-02818-2_3
   Maximilien EM, 2007, LECT NOTES COMPUT SC, V4749, P13
   Ngu AHH, 2010, IEEE T SERV COMPUT, V3, P2, DOI 10.1109/TSC.2010.8
   Oren E, 2007, IEEE SOFTWARE, V24, P64, DOI 10.1109/MS.2007.126
   Pautasso C, 2009, LECT NOTES COMPUT SC, V5634, P142, DOI 10.1007/978-3-642-02655-3_11
   Savarimuthu B.T.R., 2005, Proceedings of the fourth international joint conference on Autonomous agents and multiagent systems, P1345
   Simmen David E., 2008, P 2008 ACM SIGMOD IN, P1171, DOI DOI 10.1145/1376616.1376734
   Simon K., 2005, CIKM 05, P381, DOI 10.1145/1099554.1099672
   Sneed HM, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P3
   Sneed HM, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P59, DOI 10.1109/WSE.2003.1234009
   Song Ruihua., 2004, WWW 04, P203, DOI DOI 10.1145/988672.988700
   Tuchinda Rattapoom, 2008, 13th International Conference on Intelligent User Interfaces. IUI 2008, P139, DOI 10.1145/1378773.1378792
   Vinoski S, 2003, IEEE INTERNET COMPUT, V7, P75, DOI 10.1109/MIC.2003.1250587
   Wang G., 2009, Proceedings of the 18th international conference on World wide web, P861, DOI DOI 10.1145/1526709.1526825
   Wong J, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1435
   Wood J, 2007, IEEE T VIS COMPUT GR, V13, P1176, DOI 10.1109/TVCG.2007.70570
   Wu D, 2007, IEEE COMP SOC ANN, P325, DOI 10.1109/ISVLSI.2007.45
   Yu J, 2007, LECT NOTES COMPUT SC, V4607, P479
NR 59
TC 0
Z9 0
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2015
VL 45
IS 5
BP 581
EP 612
DI 10.1002/spe.2249
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF4OC
UT WOS:000352528200001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Dias, M
   Peck, MM
   Ducasse, S
   Arévalo, G
AF Dias, Martin
   Peck, Mariano Martinez
   Ducasse, Stephane
   Arevalo, Gabriela
TI Fuel: a fast general purpose object graph serializer
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented programming; pickle format; object graphs;
   serialization; Smalltalk
ID MEMORY
AB Because objects need to be stored and reloaded on different environments, serializing object graphs is a very important activity. There is a plethora of serialization frameworks with different requirements and design trade-offs. Most of them are based on recursive parsing of the object graphs, an approach which often is too slow. In addition, most of them prioritize a language-agnostic format instead of speed and language-specific object serialization. For the same reason, such serializers usually do not support features such as class-shape changes, global references or executing pre and post load actions. Looking for speed, some frameworks are partially implemented at Virtual Machine (VM) level, hampering code portability and making them difficult to understand, maintain and extend.
   In this paper, we present Fuel, a general-purpose object serializer based on these principles: (1) speed, through a compact binary format and a pickling algorithm which invests time in serialization for obtaining the best performance on materialization; (2) good object-oriented design, without special help at VM; and (3) serialize any object, thus have a full-featured language-specific format.
   We implement and validate this approach in Pharo, where we demonstrate that Fuel is faster than other serializers, even those with special VM support. The extensibility of Fuel made possible to successfully serialize various objects: classes in Newspeak, debugger stacks, and full content management system object graphs. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Peck, Mariano Martinez; Ducasse, Stephane] Univ Lille 1, RMoD Project Team, Inria Lille Nord Europe, Lille, France.
   [Peck, Mariano Martinez] Ecole Mines Douai, Douai, France.
   [Dias, Martin] Univ Buenos Aires, Buenos Aires, DF, Argentina.
   [Arevalo, Gabriela] Univ Abierta Interamericana, La Plata, Buenos Aires, Argentina.
   [Arevalo, Gabriela] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
C3 Universite de Lille; IMT - Institut Mines-Telecom; Universite de Lille;
   IMT Nord Europe; University of Buenos Aires; Consejo Nacional de
   Investigaciones Cientificas y Tecnicas (CONICET)
RP Peck, MM (corresponding author), Univ Lille 1, RMoD Project Team, Inria Lille Nord Europe, Lille, France.
EM marianopeck@gmail.com
OI Ducasse, Stephane/0000-0001-6070-6599
FU Ministry of Higher Education and Research; FEDER through the CPER;
   Nord-Pas de Calais Regional Council
FX This work was supported by the Ministry of Higher Education and
   Research, Nord-Pas de Calais Regional Council and FEDER through the CPER
   2007-2013.
CR Alpert ShermanR., 1998, DESIGN PATTERNS SMAL
   BENNETT JK, 1987, SIGPLAN NOTICES, V22, P318, DOI 10.1145/38807.38836
   Black A.P., 2009, PHARO EXAMPLE
   Bond MD, 2008, ACM SIGPLAN NOTICES, V43, P109, DOI 10.1145/1449955.1449774
   Bracha G, 2010, LECT NOTES COMPUT SC, V6183, P405, DOI 10.1007/978-3-642-14107-2_20
   Breg F, 2001, P ISCOPE C ACM 2001, P173
   BUTTERWORTH P, 1991, COMMUN ACM, V34, P64, DOI 10.1145/125223.125254
   DECOUCHANT D, 1986, SIGPLAN NOTICES, V21, P444, DOI 10.1145/960112.28743
   KAEHLER T, 1986, SIGPLAN NOTICES, V21, P87, DOI 10.1145/960112.28707
   Martinez Peck M, 2010, SMALLT 2010 CONC UR
   Miranda E, 2005, COMPUT LANG SYST STR, V31, P165, DOI 10.1016/j.cl.2005.02.001
   Nierstrasz O., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [DOI 10.1145/1095430, 10.1145/1095430.1081707, DOI 10.1145/1095430.1081707]
   Peck MM, 2012, COMPUT LANG SYST STR, V38, P1, DOI 10.1016/j.cl.2011.10.001
   Peck Mariano Martinez, 2011, P SMALLT 2011 INT WO
   Renggli L., 2007, PIER METADESCRIBED C
   Riggs R, 1996, COMPUT SYST, V9, P291
   UNGAR D, 1995, SIGPLAN NOTICES, V30, P73
   WIEBE D, 1986, SIGPLAN NOTICES, V21, P453, DOI 10.1145/960112.28744
NR 18
TC 2
Z9 2
U1 2
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2014
VL 44
IS 4
SI SI
BP 433
EP 453
DI 10.1002/spe.2136
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1IH
UT WOS:000332987100004
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Makady, S
   Walker, RJ
AF Makady, Soha
   Walker, Robert J.
TI Validating pragmatic reuse tasks by leveraging existing test suites
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE pragmatic software reuse; test suite reuse; semi-automatic; lightweight;
   pragmatic-reuse plan; Skipper
ID SOFTWARE; COMPONENT
AB Traditional industrial practice often involves the ad hoc reuse of source code that was not designed for that reuse. Such pragmatic reuse tasks play an important role in disciplined software development. Pragmatic reuse has been seen as problematic due to a lack of systematic support, and an inability to validate that the reused code continues to operate correctly within the target system. Although recent work has successfully systematized support for pragmatic reuse tasks, the issue of validation remains unaddressed. In this paper, we present a novel approach and tool to semi-automatically reuse and transform relevant portions of the test suite associated with pragmatically reused code, as a means to validate that the relevant constraints from the originating system continue to hold, while minimizing the burden on the developer. We conduct a formal experiment with experienced developers, to compare the application of our approach versus the use of a standard IDE (the 'manual approach'). We find that, relative to the manual approach, our approach: reduces task completion time; improves instruction coverage by the reused test cases; and improves the correctness of the reused test cases. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Makady, Soha; Walker, Robert J.] Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Walker, RJ (corresponding author), Univ Calgary, Dept Comp Sci, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM walker@ucalgary.ca
OI Walker, Robert/0000-0002-0953-6907
FU Discovery Grant from the Natural Sciences and Engineering Research
   Council of Canada
FX We wish to thank Brad Cossette, Rylan Cottrell, Reid Holmes, Elham
   Moazzen, and Mehrdad Nurolahzade for their valuable feedback on drafts
   of this paper, and our anonymous participants. This work was supported
   by a Discovery Grant from the Natural Sciences and Engineering Research
   Council of Canada.
CR Al Dallal J, 2005, J SOFTW MAINT EVOL-R, V17, P169, DOI 10.1002/smr.308
   [Anonymous], P WORKSH EMP STUD PR
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Biggerstaff T. J., 1994, Proceedings. Third International Conference on Software Reuse: Advances in Software Reusability (Cat. No.94TH06940), P102, DOI 10.1109/ICSR.1994.365806
   Boehm B, 1999, COMPUTER, V32, P111, DOI 10.1109/2.789755
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Burkhardt J.-M., 1995, Human-Computer Interaction. Interact '95, P133
   Cordy JR, 2003, PROG COMPREHEN, P196
   Cormen TH, 2009, SECTION 2 7
   Cottrell Rylan., 2008, P INT S FDN SOFTWARE, P214, DOI [DOI 10.1145/1453101.1453130, 10.1145/1453101.1453130]
   Elbaum S, 2009, IEEE T SOFTWARE ENG, V35, P29, DOI 10.1109/TSE.2008.103
   Fisher M, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P257, DOI 10.1109/ISSRE.2002.1173265
   FRAKES WB, 1995, COMMUN ACM, V38, P75, DOI 10.1145/203241.203260
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Gaffney J. E.  Jr., 1992, International Conference on Software Engineering, P327, DOI 10.1109/ICSE.1992.753510
   Gallardo-Valencia RE, 2009, P ICSE WORKSH SEARCH, P49
   GARLAN D, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.469757
   GARNETT ES, 1990, SOFTWARE ENG J, V5, P185, DOI 10.1049/sej.1990.0021
   Grieskamp W, 2006, LECT NOTES COMPUT SC, V4262, P1
   Holmes R, 2011, ACM TRANSACTIONS ON, V21
   Holmes R., 2008, THESIS
   Holmes R, 2008, LECT NOTES COMPUT SC, V5030, P330, DOI 10.1007/978-3-540-68073-4_35
   Holmes R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P100, DOI 10.1109/VISSOF.2007.4290707
   Holmes R, 2007, PROC INT CONF SOFTW, P447
   Holmes R, 2009, IEEE INT CONF AUTOM, P397, DOI 10.1109/ASE.2009.65
   Hummel O, 2008, IEEE SOFTWARE, V25, P45, DOI 10.1109/MS.2008.110
   Hunt A, 1999, THE PRAGMATIC PROGRA
   Janjic W., 2010, P INT S SOFTW REL EN, P21
   Janson S, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.155
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Koenemann J., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P125, DOI 10.1145/108844.108863
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kumar P, 2010, LECT NOTES COMPUTER, V5947
   Lange B. M., 1989, SIGCHI Bulletin, P69, DOI 10.1145/67450.67465
   Lemos O.A.L., 2007, P 22 IEEE ACM INT C, P525, DOI 10.1145/1321631.1321726
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Lions JL, 1996, ARIANE
   McIlroy M.D., 1969, SOFTWARE ENG REPORT, V1, P138
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   National Institute of Standards, 2002, 023 NAT I STAND
   Orso Alessandro., 2005, SIGSOFT SOFTW ENG NO, V30, P1, DOI [10.1145/1082983.1083251, DOI 10.1145/1082983.1083251]
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   POULIN JS, 1993, IBM SYST J, V32, P567, DOI 10.1147/sj.324.0567
   PRIETODIAZ R, 1993, IEEE SOFTWARE, V10, P61, DOI 10.1109/52.210605
   Ravichandran T, 2003, COMMUN ACM, V46, P109, DOI 10.1145/859670.859678
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Rosson Mary Beth, 1996, ACM Transactions on ComputerHuman Interaction (TOCHI), V3, P219
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   Saff David., 2005, PROC ASE, P114, DOI DOI 10.1145/1101908.1101927
   Selby RW, 2005, IEEE T SOFTWARE ENG, V31, P495, DOI 10.1109/TSE.2005.69
   Sen A, 1997, IEEE T SOFTWARE ENG, V23, P418, DOI 10.1109/32.605760
   STANDISH TA, 1984, IEEE T SOFTWARE ENG, V10, P494, DOI 10.1109/TSE.1984.5010272
   Torkar R, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/SWSTE.2003.1245437
   Tracz W., 1990, SIGSOFT Software Engineering Notes, V15, P42, DOI 10.1145/382296.382702
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   Wang Y, 2000, ACM ACM COMPUTING SU, V32
   Weisenberg GM., 1971, LECT NOTES COMPUTER
   Weyuker EJ, 1998, IEEE SOFTWARE, V15, P54, DOI 10.1109/52.714817
NR 62
TC 7
Z9 7
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2013
VL 43
IS 9
SI SI
BP 1039
EP 1070
DI 10.1002/spe.2134
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 195OH
UT WOS:000322712200002
DA 2024-07-18
ER

PT J
AU Marx, E
   Salas, P
   Breitman, K
   Viterbo, J
   Casanova, MA
AF Marx, Edgard
   Salas, Percy
   Breitman, Karin
   Viterbo, Jose
   Casanova, Marco Antonio
TI RDB2RDF: A relational to RDF plug-in for Eclipse
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE RDB2RDF; Linked Data; Semantic Web
AB The process of transforming data stored in relational databases (RDBs) into sets of Resource Description Framework (RDF) triples is known as triplification or RDB2RDF. It consists of two consecutive operations, schema extraction and data conversion. Schema extraction is a process similar to creating an external schema, and contains a collection of database views. The data conversion is divided into two steps. The first step consists of deciding how to represent database schema concepts in terms of RDF classes and properties, defining an RDB2RDF mapping. The second step consists of the actual conversion of relational data to RDF data instances, based on the mapping previously defined. Although the schema extraction is very well understood, the data conversion operation is still murky. Indeed, the World Wide Web Consortium RDB2RDF Working Group has been working to define a standard language, called R2RML, to describe RDB2RDF mapping files. The definition of the R2RML, however, is still undergoing changes. In this paper, we introduce an Eclipse plug-in that supports the entire conversion process. Its architecture takes into consideration the specificities of the triplification process by providing a modular structure that encapsulates the stable and well-understood components separately from the volatile, change-prone mapping strategies. The latter are accessible via a well-defined interface to promote information hiding and separation of concerns and to facilitate evolution. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Marx, Edgard; Salas, Percy; Breitman, Karin; Viterbo, Jose; Casanova, Marco Antonio] Pontificia Univ Catolica Rio de Janeiro, Dept Informat, BR-22451900 Rio De Janeiro, Brazil.
   [Viterbo, Jose] Univ Fed Fluminense, Dept Comp Sci, BR-24210240 Niteroi, RJ, Brazil.
C3 Pontificia Universidade Catolica do Rio de Janeiro; Universidade Federal
   Fluminense
RP Viterbo, J (corresponding author), Pontificia Univ Catolica Rio de Janeiro, Dept Informat, Rua Marques de S Vicente 225, BR-22451900 Rio De Janeiro, Brazil.
EM viterbo@ic.uff.br
RI Viterbo, Jose/M-4930-2013; Casanova, Marco Antonio/M-9054-2014
OI Viterbo, Jose/0000-0002-0339-6624; breitman, karin/0000-0001-9578-3623;
   Casanova, Marco Antonio/0000-0003-0765-9636
FU FAPERJ [E-26/170028/2008]; CNPq [557.128/2009-9]
FX This research was made possible by grants E-26/170028/2008 from FAPERJ
   and 557.128/2009-9 from CNPq, and was carried out with the Brazilian Web
   Science Institute.
CR [Anonymous], 2009, WEB SEMANTICS SCI SE
   Arenas M., A Direct Mapping of Relational Data to RDF
   Auer S., 2009, P 18 INT C WORLD WID, P621, DOI DOI 10.1145/1526709.1526793
   Bin He, 2007, Communications of the ACM, V50, P94, DOI 10.1145/1230819.1241670
   Bizer C, 2004, 3 INT SEM WEB C ISWC
   Brinker S, BEST BUY JUMP STARTS
   CARROLL JJ, 2004, P 13 WORLD WID WEB C
   COX BJ, 1990, IEEE SOFTWARE, V7, P25, DOI 10.1109/52.60587
   Das S., 2012, R2RML: RDB To RDF Mapping Language
   Das S., 2011, R2RML RDB R IN PRESS
   Ding L., 2010, 2010 AAAI SPRING S S
   Erling O, 2007, GI EDITION LECT NOTE, VP-113, P59
   Mcllroy M.D., 1968, REPORT C NATO SCI CO, P138
   Miller E., 2004, RDF primer
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Picinnini H, 2010, P 4 INT WORKSH SEM C
   Prud'hommeaux E., 2010, USE CASES REQUIREMEN
   Salas P.E., 2010, POLITICA PAISATGE CA, P43, DOI 10.1145/1839707.1839760
   Truszkowski W, 2006, SEMANTIC CONCEPTS TE, V1, P337
   Viterbo J, 2011, P 1 WORKSH DEV TOOLS
   2004, W3C RECOMMENDATION
NR 21
TC 4
Z9 4
U1 0
U2 13
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2013
VL 43
IS 4
SI SI
BP 435
EP 447
DI 10.1002/spe.2145
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 112UL
UT WOS:000316619200005
DA 2024-07-18
ER

PT J
AU Aguiar, A
   Hessel, F
AF Aguiar, Alexandra
   Hessel, Fabiano
TI Current techniques and future trends in embedded system's virtualization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE embedded devices; virtualization; hypervisor; real-time operating
   system; software quality design
AB Traditionally, virtualization has been adopted by enterprise industry to make better use of the general purpose processors (single and multicore) besides improving the utilization of existing computational resources, especially in data centers. Until recently, its use in embedded systems (ESs) seemed to be a distant, unnecessary, and unfeasible reality. However, with the rise of each more powerful multiprocessed ESs, typically implemented as multiprocessor system-on-chip, virtualization has become a very promising technique to achieve and improve functionalities in future multiprocessor system-on-chips. One of the main advantages of virtualizing ESs is to improve the software design quality because legacy software can be reused along with newer applications. Also, we have the classic use cases, such as allowing several operating systems (OSs) to work in the same physical resource, simultaneously. Still, we can provide more secure ESs by splitting the system into user application OS and security certified OS, for instance. Moreover, depending on the way that embedded virtualization is employed, it may be even possible to reduce manufacturing costs and energy consumption levels. However, it is well understood that although ESs deal with increasingly more powerful solutions, they are still far more restricted than general purpose computers, especially in terms of area, memory size, and power consumption. In this article, we provide an extensive analysis of what is being currently offered as embedded virtualization solution, the pros and cons, besides presenting an innovative proposal regarding virtualization for restricted embedded architectures and its possible advantages. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Aguiar, Alexandra; Hessel, Fabiano] Pontificia Univ Catolica Rio Grande do Sul, Fac Informat, BR-6681 Porto Alegre, RS, Brazil.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Aguiar, A (corresponding author), Pontificia Univ Catolica Rio Grande do Sul, Fac Informat, Av Ipiranga, BR-6681 Porto Alegre, RS, Brazil.
EM alexandra.aguiar@pucrs.br
RI Isec, Inct/I-2409-2013; Hessel, Fabiano/M-5971-2018
OI Hessel, Fabiano/0000-0002-5473-9199
FU CNPq; FAPESP [573963/2008-8, 08/57870-9]; Fundacao de Amparo a Pesquisa
   do Estado de Sao Paulo (FAPESP) [08/57870-9] Funding Source: FAPESP
FX The authors acknowledge the support granted by CNPq and FAPESP to the
   INCT-SEC (National Institute of Science and Technology Embedded Critical
   Systems Brazil), processes 573963/2008-8 and 08/57870-9.
CR Acharya A, 2009, POLIT ASIA, P1
   Adams K, 2006, ACM SIGPLAN NOTICES, V41, P2, DOI 10.1145/1168918.1168860
   Aguiar A, 2010, 21 IEEE INT S RAP SY, DOI [10.1109/RSP-2010.05, DOI 10.1109/RSP-2010.05]
   Ahmad I, 2003, I S WORKL CHAR PROC, P65, DOI 10.1109/WWC.2003.1249058
   Armand F., 2009, CONSUMER COMMUNICATI, P1, DOI [10.1109/CCNC.2009.4784874, DOI 10.1109/CCNC.2009.4784874]
   Bertin C, 2010, DES AUT CON, P96
   Bertozzi S, 2006, DES AUT TEST EUROPE, P13
   Fornaeus J, 2010, DES AUT CON, P114
   GOLDBERG RP, 1974, COMPUTER, V7, P34, DOI 10.1109/MC.1974.6323581
   Hansson H, 2005, EMBEDDED SYSTEMS HDB, P1
   Heiser G., 2009, Consumer Communications and Networking Conference, P1, DOI [10.1109/ CCNC.2009.4784922, DOI 10.1109/CCNC.2009.4784922]
   Heiser G., 2008, P 1 WORKSH IS INT EM, P11, DOI [10.1145/1435458.1435461, DOI 10.1145/1435458.1435461]
   Hermeling M, KEY DIFFERENCES ENTE
   Hohmuth M, 2004, P 11 WORKSH ACM SIGO, P22, DOI [10.1145/1133572.1133615, DOI 10.1145/1133572.1133615]
   Jerraya A, 2005, COMPUTER, V38, P36, DOI 10.1109/MC.2005.231
   Kleidermacher D, 2008, MILS VIRTUALIZATION, DOI [10.1109/DASC.2008.4702759, DOI 10.1109/DASC.2008.4702759]
   Kuhns F, 1999, PROCEEDINGS OF THE FIFTH IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, P154, DOI 10.1109/RTTAS.1999.777670
   Lavagno L, 2005, EMBEDDED SYSTEMS HDB, P32
   Martin G, 2006, DES AUT CON, P274, DOI 10.1109/DAC.2006.229245
   Noergaard T., 2005, Embedded Systems Architecture: A Comprehensive Guide for Engineers and Programmers
   Nollet V, 2005, DES AUT TEST EUROPE, P252, DOI 10.1109/DATE.2005.201
   Park Y, REAL TIME OPERATING
   Rosenblum M., 2004, ACM QUEUE, V2, P34
   Rudolph L, 2009, IEEE PERVAS COMPUT, V8, P8, DOI 10.1109/MPRV.2009.66
   Shen H, 2009, ASIA S PACIF DES AUT, P733, DOI 10.1109/ASPDAC.2009.4796567
   Stoess J, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 2007 USENIX ANNUAL TECHNICAL CONFERENCE, P1
   Subar S, VIRTUALISATION ENABL
   Trango, TRANG VIRT PROC
   VLX, VIRT VLX
   Waldspurger CA, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P181, DOI 10.1145/1060289.1060307
   Walters J. P., 2008, 2008 22nd International Conference on Advanced Information Networking and Applications - Workshops, P861, DOI 10.1109/AINA.2008.45
   Wolf W, 2003, COMPUTER, V36, P38, DOI 10.1109/MC.2003.1193227
   Wolf Wayne., 2001, Computers As Components: Principles of Embedded Computing System Design
   Xen, XEN HYP SOL
   XENorg, EMB XEN PROJ
   Xtratum, XTRAT SIMPL BETT
   Yoo S, 2010, REAL TIME SCHEDULING, P261, DOI [10.1109/ICCE.2010.5418991, DOI 10.1109/ICCE.2010.5418991]
   Yun Chan Cho, 2007, 2007 International Conference on Control, Automation and Systems - ICCAS '07, P1255
   Zorian Y, 2000, DES AUT CON, P136, DOI 10.1145/337292.337352
NR 39
TC 3
Z9 4
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2012
VL 42
IS 7
SI SI
BP 917
EP 944
DI 10.1002/spe.1156
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 952UX
UT WOS:000304819600008
DA 2024-07-18
ER

PT J
AU Kirschnick, J
   Calero, JMA
   Goldsack, P
   Farrell, A
   Guijarro, J
   Loughran, S
   Edwards, N
   Wilcock, L
AF Kirschnick, Johannes
   Alcaraz Calero, Jose M.
   Goldsack, Patrick
   Farrell, Andrew
   Guijarro, Julio
   Loughran, Steve
   Edwards, Nigel
   Wilcock, Lawrence
TI Towards an architecture for deploying elastic services in the cloud
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; automated service deployment; service provisioning;
   elastic services
AB Cloud computing infrastructure services enable the flexible creation of virtual infrastructures on-demand. However, the creation of infrastructures is only a part of the process for provisioning services. Other steps such as installation, deployment, configuration, monitoring and management of software components are needed to fully provide services to end-users in the cloud. This paper describes a peer-to-peer architecture to automatically deploy services on cloud infrastructures. The architecture uses a component repository to manage the deployment of these software components, enabling elasticity by using the underlying cloud infrastructure provider. The life cycle of these components is described in this paper, as well as the language for defining them. We also describe the open-source proof-of-concept implementation. Some technical information about this implementation together with some statistical results are also provided. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Kirschnick, Johannes; Alcaraz Calero, Jose M.; Goldsack, Patrick; Farrell, Andrew; Guijarro, Julio; Loughran, Steve; Edwards, Nigel; Wilcock, Lawrence] Hewlett Packard Labs, Cloud & Secur Lab, Bristol BS34 8QZ, Avon, England.
   [Alcaraz Calero, Jose M.] Univ Murcia, Commun & Informat Engn Dept, E-30100 Murcia, Spain.
C3 Hewlett-Packard; University of Murcia
RP Calero, JMA (corresponding author), Hewlett Packard Labs, Cloud & Secur Lab, Bristol BS34 8QZ, Avon, England.
EM jmalcaraz@um.es
RI Alcaraz Calero, Jose M./JWP-8793-2024
OI Alcaraz Calero, Jose M./0000-0002-2654-7595
FU Fundacion Seneca [15714/PD/10]
FX Authors thank to the Fundacion Seneca for sponsoring Jose M. Alcaraz
   Calero under the post-doctoral grant 15714/PD/10.
CR Amazon, 2010, AM EL MAPR
   Amazon Inc, 2009, AM EC2
   Burgess M, 2009, LECT NOTES COMPUT SC, V5637, P95, DOI 10.1007/978-3-642-02627-0_8
   Cohesive FT, 2010, EL SERV
   DTO Solutions, 2010, CONTR TIER
   Frost D., 2009, LINUX J, V177, P8
   Goldsack Patrick, 2009, Operating Systems Review, V43, P16, DOI 10.1145/1496909.1496915
   Jacob A, 2009, P INT OR C VEL
   ScalrInc, 2010, SELF SCAL HOST ENV U
   Turnbull J, 2007, PULLING STRINGS PUPP, P192
NR 10
TC 20
Z9 21
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2012
VL 42
IS 4
SI SI
BP 395
EP 408
DI 10.1002/spe.1090
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902OK
UT WOS:000301047600002
DA 2024-07-18
ER

PT J
AU Nelson, A
   Menzies, T
   Gay, G
AF Nelson, Adam
   Menzies, Tim
   Gay, Gregory
TI Sharing experiments using open-source software
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE open source; data mining
AB When researchers want to repeat, improve or refute prior conclusions, it is useful to have a complete and operational description of prior experiments. If those descriptions are overly long or complex, then sharing their details may not be informative. OURMINE is a scripting environment for the development and deployment of data mining experiments. Using OURMINE, data mining novices can specify and execute intricate experiments, while researchers can publish their complete experimental rig alongside their conclusions. This is achievable because of OURMINE's succinctness. For example, this paper presents two experiments documented in the OURMINE syntax. Thus, the brevity and simplicity of OURMINE recommends it as a better tool for documenting, executing, and sharing data mining experiments. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Nelson, Adam; Menzies, Tim; Gay, Gregory] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
C3 West Virginia University
RP Nelson, A (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM rabituckman@gmail.com
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Gay, Gregory/0000-0001-6794-9585
CR [Anonymous], THESIS W VIRGINIA U
   BASH RC, 1994, BOURNE AGAIN SHELL
   Chen ZH, 2005, IEEE SOFTWARE, V22, P38, DOI 10.1109/MS.2005.151
   EISENSTEIN J, 2004, VISUAL LINGUISTIC IN, P113
   Freund Y, 1999, MACHINE LEARNING, PROCEEDINGS, P124
   Gay Gregory., 2009, PROMISE 09, P1, DOI DOI 10.1145/1540438.1540460
   Gupta Chetan., 2004, SIAM INT C DATA MINI
   Kernighan BrianW., 1988, The AWK Programming Language
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Loui R., Class Lecture
   MATHENY A, 2009, THESIS W VIRGINIA U
   McCallum A., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P169, DOI 10.1145/347090.347123
   Menzies T., 2002, Evaluation issues for visual programming languages
   MENZIES T, 2007, CROSS VS WITHIN CO D, P1
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   MIERSWA I, 1996, KDD 06, P935
   RAMOS JM, 2008, AIRO, V18, pNIL3
   Rittho O., 2001, LLWA 01 TAG GI WORKS, P84
   TURHAN B, 2009, EMPIR SOFTW ENG, P540
NR 21
TC 10
Z9 11
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2011
VL 41
IS 3
BP 283
EP 305
DI 10.1002/spe.1004
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 724WZ
UT WOS:000287608400004
OA Green Published
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Fasano, F
   Oliveto, R
   Tortora, G
AF De Lucia, Andrea
   Fasano, Fausto
   Oliveto, Rocco
   Tortora, Genoveffa
TI Fine-grained management of software artefacts: the ADAMS system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software artefact management systems; fine-grained artefact management;
   traceability management; usability study
ID TRACEABILITY LINKS; SOURCE-CODE; TOOL
AB We present ADvanced Artefact Management System (ADAMS), a web-based system that integrates project management features, such as work-breakdown structure definition, resource allocation, and schedule management as well as artefact management features, such as artefact versioning, traceability management, and artefact quality management. In this article we focus on the fine-grained artefact management approach adopted in ADAMS, which is a valuable support to high-level documentation and traceability management. In particular, the traceability layer in ADAMS is used to propagate events concerning changes to an artefact to the dependent artefacts, thus also increasing the context-awareness in the project. We also present the results of experimenting with the system in software projects developed at the University of Salerno. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Fasano, Fausto] Univ Molise, STAT Dept, I-86090 Pesche, IS, Italy.
   [De Lucia, Andrea; Oliveto, Rocco; Tortora, Genoveffa] Univ Salerno, DMI, Fisciano, SA, Italy.
C3 University of Molise; University of Salerno
RP Fasano, F (corresponding author), Univ Molise, STAT Dept, Cda Fonte Lappone, I-86090 Pesche, IS, Italy.
EM fausto.fasano@unimol.it
RI Fasano, Fausto/F-4912-2012; Oliveto, Rocco/J-4037-2012; De Lucia,
   Andrea/AAG-6781-2020
OI De Lucia, Andrea/0000-0002-4238-1425; Fasano, Fausto/0000-0003-3736-6383
FU MiUR
FX We thank the anonymous reviewers for their detailed, constructive, and
   thoughtful comments that helped us to improve the presentation of the
   results in this article. Special thanks are also to the students who
   were involved in the usability study of ADAMS as subjects. The work
   described in this article is partially supported by the project TOCAI
   (Tecnologie Orientate alla Conoscenza per Aggregazioni di Imprese in
   Internet), funded by MiUR within the FIRB 2005 program.
CR Ambriola V., 1997, ACM Transactions on Software Engineering and Methodology, V6, P283, DOI 10.1145/258077.258080
   [Anonymous], 1 INT C REQ ENG ICRE
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   ASKLUND U, 1999, 9 INT S SYST CONF MA, P100
   Aversano L., 2004, Software Process Improvement and Practice, V9, P239, DOI 10.1002/spip.206
   Bandinelli S, 1996, IEEE T SOFTWARE ENG, V22, P841, DOI 10.1109/32.553634
   BENDIX L, 1998, 8 INT S SYST CONF MA, P174
   BENSHAUL IZ, 1994, PROC INT CONF SOFTW, P179, DOI 10.1109/ICSE.1994.296777
   Berliner B., 1990, Proceedings of the Winter 1990 USENIX Conference, P341
   Boldyreff C., 2002, P 26 ANN INT COMP SO
   Bruegge B, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P213, DOI 10.1109/ICGSE.2006.261235
   BRUGGE B, 2003, OBJECT ORIENTED SOFT
   Chen JYJ, 1999, J SYST SOFTWARE, V47, P105, DOI 10.1016/S0164-1212(99)00030-8
   CHUCARROLL M, 2002, P 10 ACM SIGSOFT S F, P99
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Collins-Sussman B., 2010, VERSION CONTROL SUBV
   Cugola G., 1996, ACM Transactions on Software Engineering and Methodology, V5, P191, DOI 10.1145/234426.234427
   Cugola G, 1998, IEEE T SOFTWARE ENG, V24, P982, DOI 10.1109/32.730546
   De Lucia A, 2007, J VISUAL LANG COMPUT, V18, P492, DOI 10.1016/j.jvlc.2007.08.005
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P252
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   DELUCIA A, 2004, P 16 INT C SOFTW ENG, P31
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   Egyed A., 2005, P IEEEACM INT C AUTO, P360, DOI DOI 10.1145/1101908.1101970
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   FASANO F, 2010, THESIS U SALERNO
   Freedman DanielP., 2000, Handbook of walkthroughs, inspec- tions, and technical reviews: evaluating programs, projects, and products
   Grundy JC, 1998, IEEE INTERNET COMPUT, V2, P53, DOI 10.1109/4236.722231
   HAAKE A, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P406
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Heimann P, 1996, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.1996.493428
   *HOL CORP, 2010, RDD100 HOL CORP
   KAMMER PJ, 1998, P 5 INT C SOFTW PROC, P83
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   Magnusson B, 1996, LECT NOTES COMPUT SC, V1167, P31, DOI 10.1007/BFb0023079
   MALETIC IJ, 2005, P 3 ACM INT WORKSH T, P67
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Maurer F, 2000, IEEE INTERNET COMPUT, V4, P65, DOI 10.1109/4236.845392
   Nguyen TN, 2005, PROC INT CONF SOFTW, P215
   NISTOR EC, 2005, P 12 INT WORKSH SOFT, P99
   Ohst D, 2002, PROC IEEE INT CONF S, P521, DOI 10.1109/ICSM.2002.1167813
   OLIVEIRA H, 2005, P 12 INT WORKSH SOFT, P1
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Palmer J D., 2000, Sqfwarz RggmrgfweMfs EMgzweenHg, V2nd, P412
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   SCHTT H, 1990, HYP CONC SYST APPL P, P95
   Settimi R, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P49, DOI 10.1109/IWPSE.2004.1334768
   SMITH M, 2003, OPHELIA TRACEABILITY, P150
   Völzer H, 2004, IEEE T SOFTWARE ENG, V30, P675, DOI 10.1109/TSE.2004.67
   Weidl J, 1998, P INT COMP SOFTW APP, P26, DOI 10.1109/CMPSAC.1998.716632
   Zisman A, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P448
   2010, TELELOGIC DOORS
   2010, RATIONAL REQUISITEPR
NR 55
TC 17
Z9 17
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2010
VL 40
IS 11
BP 1007
EP 1034
DI 10.1002/spe.986
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 663SU
UT WOS:000282911000004
DA 2024-07-18
ER

PT J
AU Milkowski, M
AF Milkowski, Marcin
TI Developing an open-source, rule-based proofreading tool
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE grammar checker; proofreading; computational linguistics; pattern
   matching; controlled vocabulary
AB In this paper, we show how an open-source, language-independent proofreading tool has been built. Many languages lack contextual proofreading tools; for many others, only partial solutions are available. Using existing, largely language-independent tools and collaborative processes it is possible to develop a practical style and grammar checker and to light the digital divide in countries where commercial linguistic application software is unavailable or too expensive for average users. The described solution depends on relatively easily available language resources and does not require a fully formalized grammar nor a deep parser, yet it can detect many frequent context-dependent spelling mistakes, as well as grammatical, punctuation, usage, and stylistic errors. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 Polish Acad Sci, Inst Philosophy & Sociol, PL-00330 Warsaw, Poland.
C3 Polish Academy of Sciences; Institute of Philosophy & Sociology of the
   Polish Academy of Sciences
RP Milkowski, M (corresponding author), Polish Acad Sci, Inst Philosophy & Sociol, Nowy Swiat 72, PL-00330 Warsaw, Poland.
EM marcin.milkowski@gmail.com
RI Milkowski, Marcin/L-5642-2013
OI Milkowski, Marcin/0000-0001-7646-5742
CR [Anonymous], CORPUS LINGUISTICS C
   BIGERT J, 2003, RANLP 2003, P51
   DACIUK J, 2000, COLING 2000 WORKSH U, P34
   INGASON AK, 2009, NEALT P SERIES, V4, P231
   Kurcz I., 1990, Slownik frekwencyjny polszczyzny wspolczesnej
   Mangu L., 1997, P 14 INT C MACH LEAR, P734
   MILKOWSKI M, 2010, P PALC 2009 IN PRESS
   MORE J, DIGITHUM, V8
   Naber D., 2004, Openthesaurus: Building a thesaurus with a Web community
   Naber Daniel, 2003, RULE BASED STYLE GRA
   Piasecki Maciej, 2009, A Wordnet from the ground up
   PISAREK W, 1978, SLOWNIK JEZYKA NIBY
   Przepiorkowski A., 2008, POWIERZCHNIOWE PRZET
   Riloff E., 1999, Natural Language Engineering, V5, P147, DOI 10.1017/S1351324999002235
   SALONI Z, 1971, BLEDY JEZYKOWE PRACA
   Shaalan KF, 2005, SOFTWARE PRACT EXPER, V35, P643, DOI 10.1002/spe.653
   SOUQUE A, 2007, MEMOIRE MASTER 2 SCI, P3
   Tron Viktor., 2005, Proceedings of the ACL Workshop on Software, P77
   WEISS D, 2005, RA002105 POZN U TECH
   SEGMENTATION RULES E
NR 20
TC 26
Z9 28
U1 1
U2 11
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2010
VL 40
IS 7
BP 543
EP 566
DI 10.1002/spe.971
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 599HL
UT WOS:000277901900001
DA 2024-07-18
ER

PT J
AU Nicart, F
AF Nicart, Florent
TI Towards scalable virtuality in C plus
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE polymorphism simulation; C plus plus classes; virtual function; virtual
   pointer; bitwise fields; space saving; memory usage
AB This article describes a programming technique that allows a size reduction of C++ objects by designing classes in a particular way. In order to reduce the size of the objects to the extreme, a technique to simulate runtime polymorphism and avoid the addition of the implicit virtual pointer is presented. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 ENSSAT, LLI IRISA, F-22305 Lannion, France.
RP Nicart, F (corresponding author), ENSSAT, LLI IRISA, 6 Rue Kerampont, F-22305 Lannion, France.
EM florent.nicart@univ-rennes1.fr
OI NICART, Florent/0009-0001-2663-4306
CR [Anonymous], 2000, The C++ Programming Language
   JOSUTTIS NM, 1996, OBJECT ORIENTED PROG
   Kempe A, 2003, LECT NOTES COMPUT SC, V2759, P108
   Lippman StanleyB., 1996, INSIDE C OBJECT MODE
   Meyers Scott., 1996, More Effective C++: 35 New Ways to Improve Your Programs and Designs, V1st
   Stroustrup B., 1994, The Design and Evolution of C++
   STROUSTRUP B, 2003, C STANDARD INCORPORA
NR 7
TC 0
Z9 0
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2008
VL 38
IS 14
BP 1451
EP 1473
DI 10.1002/spe.871
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 372EH
UT WOS:000260884300001
DA 2024-07-18
ER

PT J
AU Chen, ZQ
   Wei, P
   Delis, A
AF Chen, Zhongqiang
   Wei, Peter
   Delis, Alex
TI Catching Remote Administration Trojans (RATs)
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Remote Administration Trojans; Trojan detection accuracy; session and
   event correlation; application-layer inspection
AB A Remote Administration Trojan (RAT) allows an attacker to remotely control a computing system and typically consists of a server invisibly running and listening to specific TCP/UDP ports on a victim machine as well as a client acting as the interface between the server and the attacker. The accuracy of host and/or network-based methods often employed to identify RATs highly depends on the quality of Trojan signatures derived from static patterns appearing in PAT programs and/or their communications. Attackers may also obfuscate such patterns by having RATs use dynamic ports, encrypted messages, and even changing Trojan banners. In this paper, we propose a comprehensive framework termed RAT Catcher, which reliably detects and ultimately blocks RAT malicious activities even when Trojans use multiple evasion techniques. Employing network-based methods and functioning in inline mode to inspect passing packets in real time, our RAT Catcher collects and maintains status information for every connection and conducts session correlation to greatly improve detection accuracy. The RAT Catcher re-assembles packets in each data stream and dissects the resulting aggregation according to known Trojan communication protocols, further enhancing its traffic classification. By scanning not only protocol headers but also payloads, RAT Catcher is a truly application-layer inspector that performs a range of corrective actions on identified traffic including alerting, packet dropping, and connection termination. We show the effectiveness and efficiency of RAT Catcher with experimentation in both laboratory and real-world settings. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Delis, Alex] Univ Athens, GR-15771 Athens, Greece.
   [Chen, Zhongqiang] Yahoo Inc, Santa Clara, CA 95054 USA.
   [Wei, Peter] Fortinet Inc, Sunnyvale, CA 94085 USA.
C3 National & Kapodistrian University of Athens; Yahoo! Inc; Yahoo! Inc
   United States
RP Delis, A (corresponding author), Univ Athens, GR-15771 Athens, Greece.
EM ad@di.uoa.gr
CR Adams CM, 1993, P 3 S STAT PROGR RES, P181
   ADELMAN L, 1988, P ADV CRYPT CRYPTO 8, P354
   [Anonymous], 1975, MTR2997 MITRE CORP
   *BACK OR 2000, 2007, CULT DEAD
   Bishop M, 1989, ACSAC, P46
   *CERT, 2007, CA199902 CERT
   *CERT, 2007, CA199901 CERT
   CHARLIER BL, 1995, P 5 INT VIR B C BOST, P149
   CHEN Z, 2004, PRAGMATIC METHODOLOG
   CHEN Z, 2007, CATCHING REMOTE ADM
   Clark D. D., 1987, Proceedings of the 1987 IEEE Symposium on Security and Privacy (Cat. No.87CH2416-6), P184
   Cohen F., 1989, Computers & Security, V8, P149, DOI 10.1016/0167-4048(89)90070-9
   Cohen F., 1989, Computers & Security, V8, P325, DOI 10.1016/0167-4048(89)90089-8
   Cohen F., 1987, Computers & Security, V6, P22, DOI 10.1016/0167-4048(87)90122-2
   COMER D, 1991, INTERNETWORKING TCP
   *COMM COMM, 2007, THREATS YOUR SEC INT
   Cormen T.H., 1997, Introduction to Algorithms
   DeMaio H. B., 1989, Computers & Security, V8, P381, DOI 10.1016/0167-4048(89)90018-7
   DENNING D, 1988, AM SCI, V76, P236
   DENNING DE, 1987, IEEE T SOFTWARE ENG, V13, P222, DOI 10.1109/TSE.1987.232894
   Duff T., 1989, Computing Systems, V2, P155
   *ETH, 2007, ETH POW MULT PLATF A
   FARROW R, 1991, UNIX SYSTEM SECURITY
   Fielding R., 1999, Internet Eng. Task Force, P1
   *FORT INC, 2007, INTR PREV SYST
   *FOUNDST INC, 2007, FPORT INTR DET TOOL
   Garfinkel Simson., 1991, Practical Unix Security"
   Gleissner W., 1989, Computers & Security, V8, P35, DOI 10.1016/0167-4048(89)90037-0
   GORDON S, 1999, P EICAR COP DENM MAY, P183
   HANSEN R, 2007, MOOSE TEST WINDOWS N
   HEYS HM, 1994, P CAN C EL COMP ENG
   HOFFMAN LJ, 1990, ROGUE PROGRAMS VIRUS
   *INT SEC SYST, 2007, ISS SEC AL WIND BACK
   Joseph M. K., 1988, Proceedings of the 1988 IEEE Symposium on Security and Privacy (Cat. No.88CH2558-5), P52, DOI 10.1109/SECPRI.1988.8097
   KIM GH, 1994, ACM C COMP COMM SEC, P18
   *KOR INF SEC AG, 2007, SEC INC STAT KOR
   KULAKOW S, 2007, NETBUS 2 1 IS IT STI
   Lipner S. B., 1982, Proceedings of the 1982 Symposium on Security and Privacy, P2
   Lunt T. F., 1988, Proceedings of the 1988 IEEE Symposium on Security and Privacy (Cat. No.88CH2558-5), P59, DOI 10.1109/SECPRI.1988.8098
   *MICR, 2007, QUICK START GUID TCP
   *MISCH INT SEC, 2007, TROJANHUNTER PAR BEA
   NUSSBACKER H, 2007, P INT SOC ISR C TEL
   *PESTPATROL, 2007, RATS SUBSEVEN REM AD
   *PRIV SOFTW CORP, 2007, ANTI TROJ PROGR BOCL
   ROESCH M, 1999, USENIX 13 ADM C LISA
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Schneier B., 1996, Applied Cryptography: Protocols, Algorithms, and Source Code in C
   SLEATOR DD, 1985, J ACM, V32, P652, DOI 10.1145/3828.3835
   SONG D, 1999, 2 INT WORKSH REC ADV
   *SOURC INC, 2003, SNORT 2 0 DET REV
   Spafford E. H., 1989, Computer Communication Review, V19, P17, DOI 10.1145/66093.66095
   Summers R., 1997, SECURE COMPUTING THR
   *SYM COM, 2007, NORT ANT VIR SYST
   Teng H. S., 1990, Proceedings. 1990 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.90CH2884-5), P278, DOI 10.1109/RISP.1990.63857
   WHALLEY I, 1999, P 9 INT VIR B C VANC, P55
   YOUNG C, 1987, P 10 NAT COMP SEC C, P220
   *ZON LABS LLC, 2007, ZONEALARM SEC SUIT
NR 57
TC 9
Z9 10
U1 3
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2008
VL 38
IS 7
BP 667
EP 703
DI 10.1002/spe.837
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 300IN
UT WOS:000255817600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cook, RP
AF Cook, R. P.
TI An introduction to the NASA Shuttle ground operations simulator (SGOS)
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE NASA; Shuttle; simulation; ground operations
AB The Shuttle ground operations simulator (SGOS) simulation software introduced in this paper is used to train NASA ground controllers and to certify launch countdown readiness. The SGOS executive and its subsystems have been an integral component of the Shuttle Launch Safety Program for almost 30 years. It is usable (via a LAN) by over 2000 NASA employees at the Kennedy Space Center and 11000 contractors. SGOS supports over 800 models comprised of several hundred thousand lines of code and over 1000 Model Control Procedures. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 Georgia So Univ, Dept Comp Sci, Statesboro, GA 30460 USA.
C3 University System of Georgia; Georgia Southern University
RP Cook, RP (corresponding author), Georgia So Univ, Dept Comp Sci, Statesboro, GA 30460 USA.
EM bobcook47@hotmail.com
CR [Anonymous], ILLUSTRATED GUIDE PS
   BARDINA J, 2004, P 18 EUR SIM MULT SC
   DUPUIS E, 2000, 6 ESA WORKSH ADV SPA
   KARRIS ST, 2006, INTRO SIMULINK ENG A
   LOSTROSCIO CT, 2002, 211179 NASA KSC, P122
   *NASA, 2004, 84K08140 NASA KSC
   Peaden CJ, 2005, Proceedings of the 2005 Winter Simulation Conference, Vols 1-4, P1281, DOI 10.1109/WSC.2005.1574388
NR 7
TC 0
Z9 0
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2008
VL 38
IS 6
BP 575
EP 587
DI 10.1002/spe.843
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 298ZR
UT WOS:000255726100002
DA 2024-07-18
ER

PT J
AU Rozman, I
   Juric, MB
   Golob, I
   Hericko, M
AF Rozman, Ivan
   Juric, Matjaz B.
   Golob, Izidor
   Hericko, Marjan
TI Qualitative and quantitative analysis and comparison of Java distributed
   architectures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE RMI; Web services; performance; Java
ID PERFORMANCE; CORBA; RMI
AB In this article we have undertaken a qualitative and quantitative comparison of common approaches used to develop distributed solutions in Java: RMI and Web services for regular unsecured communication, RMI-SSL and WS-Security for secure communication and authentication, and HTTP-to-port and HTTP-to-CGI/servlet tunnelling for RMI communication through firewalls and proxies. We have performed a functional comparison that helps with the selection of the most appropriate approach. We have also carried out a detailed performance analysis with the identification of major bottlenecks, identification of design and implementation guidelines for distributed applications, and specification of optimizations for distributed middleware. This article contributes to the understanding of different approaches for developing Java distributed applications, provides detailed performance analysis, presents design and implementation guidelines, and identifies the major performance overheads. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Maribor, Inst Informat, FERI, SI-2000 Maribor, Slovenia.
C3 University of Maribor
RP Juric, MB (corresponding author), Univ Maribor, Inst Informat, FERI, Smetanova 17, SI-2000 Maribor, Slovenia.
EM matjaz.juric@uni-mb.si
CR ADATIA R, 2001, PROFESSIONAL EJB
   [Anonymous], 2004, Service-oriented architecture
   Comer D., 2000, INTERNETWORKING TCP, VIII
   Comer D. E., 2000, INTERNETWORKING TCP, V1
   Davis D, 2002, CCGRID 2002: 2ND IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P407, DOI 10.1109/CCGRID.2002.1017169
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GARFINKEL S, 2002, TECHNOL REV, V33, P22
   Gill CD, 2001, REAL-TIME SYST, V20, P117, DOI 10.1023/A:1008137720322
   Gokhale AS, 1998, IEEE T COMPUT, V47, P391, DOI 10.1109/12.675710
   GOKHALE SA, 1996, P IEEE GLOBECOM 96 C, P401
   Hericko M, 2003, ACM SIGPLAN NOTICES, V38, P44, DOI 10.1145/944579.944589
   JURIC BM, 2005, J SYST SOFTWARE, DOI DOI 10.1016/J.JSS.2005.08.006
   JURIC BM, 2000, MORA JAVA GEMS, P391
   Juric M. B., 2001, PROFESSIONAL J2EE EA
   Juric MB, 2000, INFORM SOFTWARE TECH, V42, P915, DOI 10.1016/S0950-5849(00)00128-2
   Juric MB, 2000, ACM SIGPLAN NOTICES, V35, P31, DOI 10.1145/360271.360274
   Juric MB, 2004, ACM SIGPLAN NOTICES, V39, P58, DOI 10.1145/997140.997146
   Juric MB, 1999, LECT NOTES COMPUT SC, V1691, P349
   Kono K., 2000, Proceedings 20th IEEE International Conference on Distributed Computing Systems, P308, DOI 10.1109/ICDCS.2000.840943
   Nester C., 1999, Proceedings of the ACM 1999 Java Grande Conference, P152, DOI 10.1145/304065.304117
   PITT E, 2002, RMI PROXY WHITE PAPE
   PLASIL F, 1998, 987 CHARL U DEP SOFT
   SINGHAI A, 1997, LECT NOTES COMPUTER, V1241, P149
   *SUN MICR INC, 2005, INTRO SSL
   *SUN MICR INC, 2002, JAV REM METH INV SPE
   Wellings A., 2004, CONCURRENT REAL TIME
   *WORLD WID WEB CON, 2001, W3C WORLD WID WEB C
   *WORLD WID WEB CON, 2002, W3C REC
   *WORLD WID WEB CON, 2003, W3C REC
   Zeadally S, 2004, INFORM SOFTWARE TECH, V46, P397, DOI 10.1016/j.infsof.2003.08.005
NR 30
TC 1
Z9 1
U1 0
U2 4
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2006
VL 36
IS 14
BP 1543
EP 1562
DI 10.1002/spe.731
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 103SA
UT WOS:000241905800002
DA 2024-07-18
ER

PT J
AU Ngassam, EK
   Kourie, DG
   Watson, BW
AF Ngassam, EK
   Kourie, DG
   Watson, BW
TI Performance of hardcoded finite automata
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE finite automata; hardcoding; performance; cache memory; regression
   analysis
AB We study the performance of a hardcoded algorithm for recognizing strings of a finite automaton's language and compare it with the use of the more conventional table-driven algorithm. In both cases, performance depends on the finite automaton's dimensions such as alphabet size and the number of states. However, the respective processing mechanisms that influence the performance, in particular cache memory usage, depend on the details of the processor's underlying architecture. In the hardcoded case, the automaton's dimensions determine the size of the code which is, in turn, the primary determinant of the way in which cache memory is used. In the table-driven case, cache memory usage is primarily determined by the way in which portions of the transition table are stored in it. Using statistical regression analysis, we provide multivariate equations to model the observed time efficiency of both methods. The equations obtained are cross-compared and conclusions are drawn. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ S Africa, Sch Comp, ZA-0003 Pretoria, South Africa.
   Univ Pretoria, Dept Comp Sci, Fastar Res Grp, ZA-0002 Pretoria, South Africa.
C3 University of South Africa; University of Pretoria
RP Ngassam, EK (corresponding author), Univ S Africa, Sch Comp, POB 392 UNISA, ZA-0003 Pretoria, South Africa.
EM ngassek@unisa.ac.za
CR ARETZ FEJK, 1988, INFORM PROCESS LETT, V29, P201, DOI 10.1016/0020-0190(88)90061-0
   BERRENDORF R, 2003, PCL THE PERFORMANCE
   BHAMIDIPATY A, 1995, 9 U AR DEP COMP SCI
   DEBEIJER N, 2003, P SAICIST JOH SEPT 2, P198
   Field A.P., 2004, DISCOVERING STAT USI, V2nd
   Govindarajan S., 2001, Inside the Pentium 4
   GRUNE D, 1991, PARSING TECHNIQUES P
   HORSPOOL RN, 1988, SOFTWARE PRACTICE EX, V6, P515
   *INT CORP, 2002, INT OPT REF MAN
   Johnson C., 1975, Yacc: Yet Another Compiler Compiler, Computing Science
   Knuth D. E., 1977, SIAM Journal on Computing, V6, P323, DOI 10.1137/0206024
   LESK ME, 1975, 39 AT T BELL LAB
   Navarro G., 2002, FLEXIBLE PATTERN MAT
   NGASSAM EK, 2004, PRAG STRING C PRAG A
   NGASSAM EK, 2003, THESIS U PRETORIA
   NGASSAM EK, 2003, P SAICSIT JOH SEPT 2, P111
   NGASSAM EK, 2003, PRELIMINARY EXPT HAR, P299
   PENNELLO JT, 1986, ACM SIGPLAN, V21, P145
   Sprunt Brinkley., 2002, PENTIUM 4 PERFORMANC
   THOMPSON K, 1968, COMMUN ACM, V11, P323
   YAO ACC, 1979, SIAM J COMPUT, V8, P368, DOI 10.1137/0208029
NR 21
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2006
VL 36
IS 5
BP 525
EP 538
DI 10.1002/spe.708
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 040WB
UT WOS:000237410500005
DA 2024-07-18
ER

PT J
AU Kao, TH
   Yuan, SM
AF Kao, TH
   Yuan, SM
TI Automatic adaptation of mobile applications to different user devices
   using modular mobile agents
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptation; mobile applications; mobile agents; context-aware; mobile
   execution environment; ubiquitous computing environment
AB Wearable, handheld, and embedded or standalone intelligent devices are becoming quite common and can support a diverse range of applications. In order to simplify development of applications which can adapt to a variety of mobile devices, we propose an adaptation framework which includes three techniques: follow-me, context-aware adaptation, and remote control scheme. For the first, we construct a personal agent capable of carrying its owner's applications. Second, we design a personal agent capable of carrying applications with an adaptable hierarchical structure. Then, applications can be adapted approximately to the context of devices by using an attribute-based component decision algorithm. Finally, to achieve a remote control scheme, we distribute the computational load of applications on the resource-restricted mobile devices. An application is divided into two parts that can be executed on a user device and a server separately. In short, this framework facilitates the development of widespread applications for ubiquitous computing environments. Furthermore, it enables the applications to follow their owners and automatically adapt to different devices. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Natl Chiao Tung Univ, Dept Comp & Informat Sci, Hsinchu 300, Taiwan.
C3 National Yang Ming Chiao Tung University
RP Natl Chiao Tung Univ, Dept Comp & Informat Sci, 1001 Ta Hsueh Rd, Hsinchu 300, Taiwan.
EM gis89539@cis.nctu.edu.tw
RI chen, jenny/G-6723-2015; Yuan, Shyan-Ming/O-1809-2013
OI chen, jenny/0000-0003-3501-9046; Yuan, Shyan-Ming/0000-0002-3621-9528
CR *AP FOR, 2001, US AG PROF SPEC
   ARMSTRONG E, 2003, J2EE 1 4 TUTORIAL
   Asthana A., 1994, WMCSA '94: Proceedings of the 1994 First Workshop on Mobile Computing Systems and Applications, P69
   Baumann J, 2002, SOFTWARE PRACT EXPER, V32, P575, DOI 10.1002/spe.450
   Brickley D., 2003, RDF VOCABULARY DESCR
   BUTLER M, 2002, HPL2001260
   BUTLER MH, 2001, HPL2001190
   Chen G., 2000, TECHNICAL REPORT TR2
   Cheverst K., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P17, DOI 10.1145/332040.332047
   Dey AK, 2000, MANAGING INTERACTIONS IN SMART ENVIRONMENTS, P114
   GEIER J, 2002, WIRELESS LANS SAMS
   GRAY PD, 2001, P 8 IFIP WORK C ENG
   GREEN D, TRAIL RELECTION API
   Harter A., 1999, MobiCom'99. Proceedings of Fifth Annual ACM/IEEE International Conference on Mobile Computing and Networking, P59, DOI 10.1145/313451.313476
   HELD G, 2001, WIRELESS NETWORKS BL
   HENRICKSEN K, 2002, LECT NOTES COMPUTER, V2414, P169
   HJELM H, 2001, CC PP IMPLEMENTORS G
   Hull R, 1997, FIRST INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS - DIGEST OF PAPERS, P146, DOI 10.1109/ISWC.1997.629931
   INDULSKA J, 2003, LECT NOTES COMPUTER, V2574
   JANG SI, 2001, P 1 INT C HUM SOC IN
   KERMARREC AM, 1998, P 8 ACM SIGOPS EUR W, P229
   Klyne Graham., 2003, Composite Capability/Preference Profiles (CC/PP): Structure and Vocabularies
   Lange D. B., 1998, PROGRAMMING DEPLOYIN
   Lassila Ora, 1998, W3C Recommendation
   MARUYAMA H, 2002, DEV WEB APPL
   OHTO H, 1999, CC PP EXCHANGE PROTO
   Reynolds F, 1999, COMPOSITE CAPABILITY
   SATOH I, 2000, P 20 INT C DISTR COM
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   Schmidt A, 1999, LECT NOTES COMPUT SC, V1707, P89
   *SUN MICR INC, 2000, JAV 2PLATF MICR ED T
   Takashio K, 2003, LECT NOTES COMPUT SC, V2574, P230
   TAKASHIO K, 2001, P 2002 IEEE 4 INT WO
   TAKASHIO K, 2001, P 21 INT C DISTR COM
   WANG J, 2001, BROADBAND WIRELESS C
NR 35
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2005
VL 35
IS 14
BP 1349
EP 1391
DI 10.1002/spe.674
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 980MB
UT WOS:000233021500002
DA 2024-07-18
ER

PT J
AU Mhashi, MM
AF Mhashi, MM
TI The effect of multiple reference characters on detecting matches in
   string-searching algorithms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE string-searching; pattern matching; checking and skipping; condition
   type; multiple references
AB The effect of multiple reference characters and the condition types on the performance of exact string-searching algorithms is tested. In order to perform such a test a new algorithm called the Multiple Reference Characters Algorithm (MRCA) is developed. An experiment is performed using English text; the results are compared with the known string-matching algorithms called Boyer-Moore-Horspool (BMH) and Straight Forward (Naive). With the MRCA algorithm, the shift distance is increased up to 3m + 1 positions in comparison with exactly one position in the Naive algorithm and up to m positions in BMH. Furthermore, by using the new algorithm MRCA, the results suggest that the evaluation criteria of the average number of comparisons, the average number of shifts, and the clock time required by BMH are improved up to 73.1%, 64.7%, and 49.6%, respectively. The same evaluation criteria required by Naive are improved by MRCA up to 98.1%, 98%, and 94.7%, respectively. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Mutah Univ, Dept Informat Technol, Fac Sci, Mutah 61710, Al Karak, Jordan.
C3 Mutah University
RP Mhashi, MM (corresponding author), Mutah Univ, Dept Informat Technol, Fac Sci, Mutah 61710, Al Karak, Jordan.
EM mhashi@mutah.edu.jo
CR ALJABER A, 2003, ASME PERIODICALS, V8, P1
   [Anonymous], 1997, Pattern matching algorithms
   [Anonymous], 1997, ACM SIGACT NEWS
   BOYER RS, 1977, COMMUN ACM, V20, P762, DOI 10.1145/359842.359859
   Fenwick P, 2001, SOFTWARE PRACT EXPER, V31, P815, DOI 10.1002/spe.367
   Fenwick P, 2001, SOFTWARE PRACT EXPER, V31, P835, DOI 10.1002/spe.392
   HORSPOOL RN, 1980, SOFTWARE PRACT EXPER, V10, P501, DOI 10.1002/spe.4380100608
   Liu Z, 1988, SOFTWARE PRACTICE EX, V28, P191
   Mhashi M., 2003, DIRASAT J U JORDAN J, V30, P84
   RAITA T, 1992, SOFTWARE PRACT EXPER, V22, P879, DOI 10.1002/spe.4380221006
   SMITH PD, 1994, SOFTWARE PRACT EXPER, V24, P435, DOI 10.1002/spe.4380240408
   Stephen GrahamA., 1994, String Searching Algorithms
   SUNDAY DM, 1990, COMMUN ACM, V33, P132, DOI 10.1145/79173.79184
   UKKONEN E, 1990, ALGORITHMICA, V5, P313, DOI 10.1007/BF01840391
NR 14
TC 1
Z9 2
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2005
VL 35
IS 13
BP 1299
EP 1315
DI 10.1002/spe.672
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 979FH
UT WOS:000232927300004
DA 2024-07-18
ER

PT J
AU Avvenuti, M
   Vecchio, A
AF Avvenuti, M
   Vecchio, A
TI MobileRMI: upgrading Java remote method invocation towards mobility
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java RMI; distributed object middleware; code mobility; mobile agents;
   mobile computing
AB Code mobility is recognized as a promising design technique, able to improve flexibility, adaptability and bandwidth utilization in mobile computing applications. To promote and facilitate its use, researchers argue that code mobility should be made available to programmers in combination with, and not as an alternative to, more traditional programming models. This paper describes the design and implementation of the MobileRMI toolkit which, unlike agent-based systems, enables mobility-based programming within a widely accepted middleware platform, Java Remote Method Invocation (RMI). Our toolkit provides a set of mobility primitives that allow programmers to create, clone and move remote objects across a network. To preserve location transparency we implemented a novel, efficient scheme for automatically updating remote references by exploiting the distributed garbage collector. Programming examples are given and a case study where an adaptive application uses logical mobility to minimize communication over a mobile ad hoc network is presented. Experience from using MobileRMI confirmed the benefit of designing both static and mobile applications within the same programming framework. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Pisa, Dipartimento Ingn Informaz, I-56122 Pisa, Italy.
C3 University of Pisa
RP Avvenuti, M (corresponding author), Univ Pisa, Dipartimento Ingn Informaz, Via Diotisalvi 2, I-56122 Pisa, Italy.
EM rn.avvenuti@iet.unipi.it
RI avvenuti, marco/M-7150-2019; Avvenuti, Marco/B-7823-2013; Vecchio,
   Alessio/J-4779-2012
OI avvenuti, marco/0000-0002-8547-0348; Vecchio,
   Alessio/0000-0001-6894-7338
CR ACHARYA A, 1997, MOBILE OBJECT SYSTEM, V1222
   BAUMANN J, 1999, THESIS  STUTTGART IP
   BAUMANN J, 1997, SPECIAL ISSUES OBJEC, P301
   BIRRELL A, 1993, 116 DIG EQ CORP SYST
   Caromel D, 1998, CONCURRENCY-PRACT EX, V10, P1043, DOI 10.1002/(SICI)1096-9128(199809/11)10:11/13<1043::AID-CPE413>3.0.CO;2-6
   DAHM M, 2000, TECHNICAL REPORT
   Day M., 1993, ACM Letters on Programming Languages and Systems, V2, P115, DOI 10.1145/176454.176500
   FALL K, 1999, P IEEE INT S COMP CO
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   Harrison C, 1995, TECHNICAL REPORT
   Izatt M, 2000, CONCURRENCY-PRACT EX, V12, P667, DOI 10.1002/1096-9128(200007)12:8<667::AID-CPE504>3.0.CO;2-U
   JUL E, 1988, ACM T COMPUT SYST, V6, P109, DOI 10.1145/35037.42182
   Kotz D, 2002, IEEE DISTRIBUTED SYS, V3
   Lange D. B., 1998, World Wide Web, V1, P111, DOI 10.1023/A:1019267832048
   Philippsen M, 1997, CONCURRENCY-PRACT EX, V9, P1225, DOI 10.1002/(SICI)1096-9128(199711)9:11<1225::AID-CPE332>3.0.CO;2-F
   PICCO GP, 1998, LECT NOTES COMPUTER, V1477, P160
   RANGANATHAN M, 1997, P USENIX 1997 ANN TE
   ROMAN GC, 2000, 22 INT C SOFTW ENG, P241
   Waldo J, 1997, LECT NOTES COMPUT SC, V1222, P49
   WOLLRATH A, JAVA TUTORIAL RMI TR
   Wong D, 1999, COMMUN ACM, V42, P92, DOI 10.1145/295685.295717
NR 21
TC 0
Z9 0
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2005
VL 35
IS 10
BP 939
EP 975
DI 10.1002/spe.658
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 952AV
UT WOS:000230974500003
DA 2024-07-18
ER

PT J
AU Watson, BW
   Cleophas, L
AF Watson, BW
   Cleophas, L
TI SPARE Parts: a C++ toolkit for string pattern recognition
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE keyword pattern matching; C plus plus toolkits; C plus plus frameworks;
   generic algorithms; foundation classes; taxonomies
AB In this paper, we consider the design and implementation of SPARE Parts, a C++ toolkit for pattern matching. SPARE Parts (in particular, the 2003 version presented in this article) is the second generation string pattern matching toolkit by the authors. The toolkit, the first generic program for keyword pattern matching, contains implementations of the well-known Knuth-Morris-Pratt, Boyer-Moore, Aho-Corasick and Commentz-Walter algorithms (and their variants). The toolkit is freely available for non-commercial use. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Pretoria, Dept Comp Sci, ZA-0002 Pretoria, South Africa.
   Eindhoven Univ Technol, Dept Math & Comp Sci, NL-5600 MB Eindhoven, Netherlands.
C3 University of Pretoria; Eindhoven University of Technology
RP Univ Pretoria, Dept Comp Sci, ZA-0002 Pretoria, South Africa.
EM bruce@bruce-watson.com
OI Cleophas, Loek/0000-0002-7221-3676
CR AHO AV, 1975, COMMUN ACM, V18, P333, DOI 10.1145/360825.360855
   [Anonymous], THESIS EINDHOVEN U T
   [Anonymous], 1997, ACM SIGACT NEWS
   Austem M.H., 1999, GENERIC PROGRAMMING
   BOYER RS, 1977, COMMUN ACM, V20, P62
   BREYMANN U, 2000, DESIGNING COMPONENTS
   CARROLL MD, 1995, DESIGNING CODING REU
   COMMENTZWALTER B, 1979, P 6 INT C AUT LANG P, P118
   COMMENTZWALTER B, 1979, 7909007 IBM HEID SCI
   Crochemore M., 1994, TEXT ALGORITHMS
   CZUMAJ A, 1997, P WORKSH ALG ENG VEN, P166
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   HUME A, 1991, SOFTWARE PRACT EXPER, V21, P1221, DOI 10.1002/spe.4380211105
   JOSUTTIS NM, 1999, CPLUSPLUS STANDARD L
   Knuth D. E., 1977, SIAM Journal on Computing, V6, P323, DOI 10.1137/0206024
   Meyer B., 1998, Object-oriented software construction (Second Edi)
   Meyer B., 1994, REUSABLE SOFTWARE BA
   PLAUGER PJ, 1995, DRAFT STANDARD CPLUS
   STROUSTRUP B, 1994, DESIGN EVOLUTION CPL
   STROUSTRUP B, 1998, CPLUSPLUS PROGRAMMIN
   TEALE S, 1993, CPLUSPLUS IOSTREAMS
   Watson BW, 1996, SCI COMPUT PROGRAM, V27, P85, DOI 10.1016/0167-6423(96)00008-1
   WATSON BW, 1996, INT INFORMATICS SERI, V4, P280
   WATSON BW, 1994, 19 EINDH U TECHN FAC
   WATSON BW, 1993, P COMP SCI NATH 93, P25
NR 25
TC 8
Z9 10
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2004
VL 34
IS 7
BP 697
EP 710
DI 10.1002/spe.590
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825SB
UT WOS:000221777500005
DA 2024-07-18
ER

PT J
AU Georges, A
   Christiaens, M
   Ronsse, M
   De Bosschere, K
AF Georges, A
   Christiaens, M
   Ronsse, M
   De Bosschere, K
TI JaRec: a portable record/replay environment for multi-threaded Java
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; debugging; multi-threaded; record/replay
ID PROGRAMS
AB This paper describes JaRec, a portable record/replay system for Java. It correctly replays multi-threaded, data-race free Java applications, by recording the order of synchronization operations, and by executing them in the same order during replay. The record/replay infrastructure is developed in Java, and does not require a modification of the Java Virtual Machine (JVM) if it provides the JVM Profiler Interface (JYMPI). If the JVM does not support JVMPI, which is used for intercepting the loaded classes, only a minor modification to the JVM is required in order to run the system. On systems with limited memory resources, JaRec can be executed in a distributed fashion. This also makes it suitable to aid debugging of multi-threaded applications on embedded systems. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Ghent, Dept ELIS, B-9000 Ghent, Belgium.
C3 Ghent University
RP Univ Ghent, Dept ELIS, St Pietersnieuwstr 41, B-9000 Ghent, Belgium.
EM ageorges@elis.ugent.be
RI De Bosschere, Koen OM/P-6865-2014
CR [Anonymous], 1999, P OBJ OR SYST LANG
   BERNSTEIN AJ, 1966, IEEE TRANS ELECTRON, VEC15, P757, DOI 10.1109/PGEC.1966.264565
   BLANCHET B, 1999, P 1999 ACM SIGPLAN C, P20
   Bogda J, 1999, ACM SIGPLAN NOTICES, V34, P35, DOI 10.1145/320385.320388
   CHOI JD, 2001, 15 INT PAR DISTR PRO
   CHOI JD, 1998, ACM SIGM S PAR DISTR, P48
   Christiaens M, 2001, USENIX ASSOCIATION PROCEEDINGS JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P105
   Cornelis F, 2003, PDPTA'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS 1-4, P1598
   Dahm M., 1999, JIT'99. Java-Information-Tag 1999, P267
   *KL GROUP, 2000, GETT START JBPROB
   Konuru R., 2000, Proceedings 14th International Parallel and Distributed Processing Symposium. IPDPS 2000, P219, DOI 10.1109/IPDPS.2000.845988
   *KUCK ASS INC, 1999, ASS US MAN
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   LEBLANC TJ, 1987, IEEE T COMPUT, V36, P471, DOI 10.1109/TC.1987.1676929
   LINDHOLM T, 1999, JAVA SERIES
   Ronsse M, 1999, ACM T COMPUT SYST, V17, P133, DOI 10.1145/312203.312214
   STEVEN J, 2000, ACM SPECIAL INTEREST, P158
   Whaley J., 1999, P 14 ACM SIGPLAN C O, P187, DOI [10.1145/320384.320400, DOI 10.1145/320384.320400]
NR 18
TC 10
Z9 31
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2004
VL 34
IS 6
BP 523
EP 547
DI 10.1002/spe.579
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 817WC
UT WOS:000221206600001
DA 2024-07-18
ER

PT J
AU Kaya, MC
   Cilden, E
   Karamanlioglu, A
   Murat, F
   Dogru, AH
   Oguztuzun, H
AF Kaya, M. Cagri
   Cilden, Erkin
   Karamanlioglu, Alper
   Murat, Furkan
   Dogru, Ali H. H.
   Oguztuzun, Halit
TI Data interoperability between DDS and HLA through a dynamically
   reconfigurable gateway
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data distribution service; dynamic adaptation; gateway; high-level
   architecture; interoperability
ID SIMULATION; SYSTEMS
AB Software systems need to be complex and large-scale to keep up with growing user expectations with ever-increasing technological improvements. Building these systems from scratch is costly and time-consuming; thus, the importance of reuse and interoperability is increasing. Live-virtual-constructive (LVC) simulation systems are composed of multiple heterogeneous subsystems. These subsystems may have different implementations and designs. In such multiarchitecture LVC environments, gateways are promising solutions to address interoperability issues. In this article, a gateway-based solution is proposed to achieve LVC interoperability with a particular focus on two standard middleware, namely, data distribution service for real-time systems (DDS) and high-level architecture (HLA) for distributed simulation. The gateway is capable of providing two-way data transfer between DDS and HLA. The design of the gateway adheres to the idea of configurable connectors, which allow users to generate a customized gateway. The gateway is capable of converting primitive and structured data types between DDS and HLA. These conversions are specified by users resulting in different configurations of the gateway. The gateway can also be adapted to different configurations at runtime. This research addresses the increasing importance of interoperability and reuse considering the complex and large-scale LVC systems. The effectiveness of the proposed gateway is demonstrated by academic and industrial case studies.
C1 [Kaya, M. Cagri; Karamanlioglu, Alper; Murat, Furkan; Oguztuzun, Halit] Middle East Tech Univ, Dept Comp Engn, Ankara, Turkiye.
   [Kaya, M. Cagri] Ardahan Univ, Dept Comp Engn, Ardahan, Turkiye.
   [Cilden, Erkin] STM Def Technol Engn & Trade Inc, Simulat Software Grp, Ankara, Turkiye.
   [Karamanlioglu, Alper] HAVELSAN Inc, Open Source Transformat Grp, Ankara, Turkiye.
   [Dogru, Ali H. H.] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX USA.
   [Kaya, M. Cagri] Middle East Tech Univ, Dept Comp Engn, ODTU Bilgisayar Muh Bol, TR-06800 Ankara, Turkiye.
C3 Middle East Technical University; Ardahan University; STM; Havelsan AS;
   University of Texas System; University of Texas at San Antonio (UTSA);
   Middle East Technical University
RP Kaya, MC (corresponding author), Middle East Tech Univ, Dept Comp Engn, ODTU Bilgisayar Muh Bol, TR-06800 Ankara, Turkiye.
EM mckaya@ceng.metu.edu.tr
RI Karamanlioglu, Alper/ABA-3990-2020; KAYA, MUHAMMED CAGRI/G-6452-2018
OI KAYA, MUHAMMED CAGRI/0000-0001-8924-0630; Murat,
   Furkan/0000-0003-0832-5320
FU Scientific and Technological Research Council of Turkey (TUBITAK)
   [3151162]
FX The Scientific and Technological Research Council of Turkey (TUBITAK),
   Grant/Award Number: 3151162
CR Adjoyan Seza, 2017, P S APPL COMP MARR M, P1154, DOI [10.1145/3019612.3019767, DOI 10.1145/3019612.3019767]
   ADLINK, 2021, VORTEX DATA DISTRIBU
   Akram H., 2011, INT C COMP TOOL EURO, P1
   Alexander T., 2012, INTERSERVICE IND TRA
   [Anonymous], 2003, OMG document
   [Anonymous], 2021, NEO4J GRAPH DAT PLAT
   Aragao M, 2016, FRONT ROBOT AI, V3, DOI 10.3389/frobt.2016.00064
   Arbab F, 2004, MATH STRUCT COMP SCI, V14, P329, DOI 10.1017/S0960129504004153
   Ardila L, 2015, COMPUT STAND INTER, V41, P39, DOI 10.1016/j.csi.2015.02.007
   Bashari M, 2017, INT J SOFTW ENG KNOW, V27, P191, DOI 10.1142/S0218194017500085
   Beuche D., 2012, SPLC 12, V2, P255
   Bonache-Seco JA., 2018, 2018 IEEE ACM 22 INT, P1
   Cetinkaya A., 2016, P SDPS 21 INT C EM T, P120
   Chaudron JB, 2014, SIMUL-T SOC MOD SIM, V90, P627, DOI 10.1177/0037549714531054
   Coolahan JE., 2012, LVC ARCHITECTURE ROA
   Corsaro A., 2014, DATA DISTRIBUTION SE
   D??az JC., 2011, DEV TRUE DISTRIBUTED
   Dianes JA, 2012, COMPUT STAND INTER, V34, P238, DOI 10.1016/j.csi.2011.10.002
   Elahi B, 2020, SOFTWARE PRACT EXPER, V50, P827, DOI 10.1002/spe.2769
   eProsima, 2021, INT SERV
   Garlan D., 1998, P WORKSH COMP SOFTW
   Ghazouani S, 2020, SOFTWARE PRACT EXPER, V50, P447, DOI 10.1002/spe.2789
   Greff F., 2016, 8 EUR C EMB REAL TIM
   Henninger A.E., 2008, Live virtual constructive architecture roadmap (lvcar) final report
   Hodson DD, 2014, J DEF MODEL SIMUL-AP, V11, P77, DOI 10.1177/1548512913506620
   IEEE Standards Association, 2010, 15162010 IEEE
   ?ilden E., 2018, 2018 IEEE ACM 22 INT, P1, DOI DOI 10.1109/DISTRA.2018.8601012
   Jena A., 2022, FREE OPEN SOURCE JAV
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Karamanlioglu A, 2018, LECT NOTES BUS INF P, V319, P362, DOI 10.1007/978-3-319-94214-8_27
   Kaya MC, 2019, PROCEEDINGS OF THE 2019 SUMMER SIMULATION CONFERENCE (SUMMERSIM '19)
   Kaya MC, 2018, J INTEGR DES PROCESS, V22, P35, DOI 10.3233/JID190003
   Kaya MC., 2019, SOFTWARE ENG VARIABI, P95
   Kaya MC., P 7 NAT DEF APPL MOD, P60
   Kaya MC, 2019, COMPUT COMMUN NETW S, P69, DOI 10.1007/978-3-030-04173-1_4
   Kaya MC, 2017, COMPUT COMMUN NETW S, P127, DOI 10.1007/978-3-319-70102-8_7
   Kim MC., 2008, 2008 IEEE AIAA 27 DI, p5.A.1
   Lessmann K., 2011, P 2011 SPRING SIM IN
   Lopez-Rodriguez J. M, 2011, DEV TRUE DISTRIBUTED
   Mall R., 2009, REAL TIME SYSTEMS TH
   Mohammed O, 2017, SMART ENERGY GRID ENGINEERING, P245, DOI 10.1016/B978-0-12-805343-0.00012-7
   Morse KL, 2006, COMPUTER, V39, P115, DOI 10.1109/MC.2006.17
   NATO MSG-131 Specialist Team, 2015, MODELLING SIMULATION
   Huynh NT, 2019, IEEE RIVF INT CONF, P181, DOI 10.1109/rivf.2019.8713617
   Nostro N, 2016, J SYST SOFTWARE, V111, P185, DOI 10.1016/j.jss.2015.09.038
   O'Connor MJ., P 2011 SPRING SIM IN
   OH M, 2015, INDIAN J SCI TECHNOL, V8
   OMG, 2021, DATA DISTRIBUTION SE
   OMG, 2021, EXTENSIBLE DYNAMIC T
   OpenRTI, 2021, OPENRTI
   Palomar E, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16111810
   Pardo-Castellote G., 2005, An introduction to dds and data-centric communications
   Park Y., 2013, 7 INT C APPL INF COM, P1
   Park Y, 2012, ACM IEEE INT CONF CY, P210, DOI 10.1109/ICCPS.2012.33
   Park Y, 2015, INT CONF UBIQ FUTUR, P450, DOI 10.1109/ICUFN.2015.7182584
   Pérez H, 2017, COMPUT STAND INTER, V50, P258, DOI 10.1016/j.csi.2016.10.012
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Portico, 2021, PORTICO
   Qt, 2021, QT
   Suloglu S, 2020, COMPUT COMMUN NETW S, P109, DOI 10.1007/978-3-030-33624-0_5
   Togay C, 2008, J SYST SOFTWARE, V81, P1803, DOI 10.1016/j.jss.2007.12.746
   Topcu O, 2017, SIMUL FOUND METH APP, P1, DOI 10.1007/978-3-319-61267-6
   Tsai WT, 2006, PROC ANNU SIMUL SYMP, P160, DOI 10.1109/ANSS.2006.17
   Yibin Tu, 2016, 2016 3rd International Conference on Information Science and Control Engineering (ICISCE), P543, DOI 10.1109/ICISCE.2016.122
NR 64
TC 0
Z9 0
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2023
VL 53
IS 11
BP 2200
EP 2221
DI 10.1002/spe.3253
EA AUG 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U0UL3
UT WOS:001051239400001
DA 2024-07-18
ER

PT J
AU Söylemez, M
   Tekinerdogan, B
   Tarhan, AK
AF Soylemez, Mehmet
   Tekinerdogan, Bedir
   Tarhan, Ayca Kolukisa
TI Microservice reference architecture design: A multi-case study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE case study research; microservice architecture; reference architecture
AB Microservice architecture (MSA) is an architectural style that is designed to support the modular development of software systems within a particular domain. It is characterized by the use of small, independently deployable services, which can be developed and deployed autonomously. The benefits of MSA include improved scalability, fault-tolerance, and ease of deployment and maintenance. However, developing MSA for a specific domain can be challenging and requires a thorough consideration of various concerns such as service boundaries, communication protocols, and security. To support the easy development and guidance of an MSA for practitioners, we present a reference architecture design for MSA. The reference architecture has been designed after a comprehensive domain analysis of MSA in the literature and the MSAs of key vendors. This analysis has been used to identify best practices and common patterns that can be applied to the development of MSA. Additionally, relevant architecture viewpoints have been selected to model the corresponding architecture views, providing a clear and comprehensive understanding of the architecture. To validate the proposed reference architecture, a multi-case study research approach has been used. In this approach, two industrial case studies have been used to demonstrate the practical applicability of the proposed reference architecture. The results of these case studies have shown that the reference architecture can be used to effectively guide the development of MSA in real-world scenarios.
C1 [Soylemez, Mehmet; Tarhan, Ayca Kolukisa] Hacettepe Univ, Comp Engn Dept, Ankara, Turkiye.
   [Tekinerdogan, Bedir] Wageningen Univ & Res, Informat Technol, Wageningen, Netherlands.
   [Tekinerdogan, Bedir] Wageningen Univ & Res, Chair Informat Technol Grp, POB 8130, NL-6700 EW Wageningen, Netherlands.
C3 Hacettepe University; Wageningen University & Research; Wageningen
   University & Research
RP Tekinerdogan, B (corresponding author), Wageningen Univ & Res, Chair Informat Technol Grp, POB 8130, NL-6700 EW Wageningen, Netherlands.
EM bedir.tekinerdogan@wur.nl
RI Tekinerdogan, Bedir/K-3639-2019
OI Tekinerdogan, Bedir/0000-0002-8538-7261
CR Aksakalli IK, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11209617
   [Anonymous], MICROSERVICE ARCHITE
   [Anonymous], Microservices architecture style
   [Anonymous], MICROSERVICE DECOMPO
   [Anonymous], Microservices Architecture: Advantages and Drawbacks
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Baylov K, 2018, STUD COMPUT INTELL, V737, P297, DOI 10.1007/978-3-319-66379-1_26
   Benevides R., ISTIO KUBERNETES
   Blinowski G, 2022, IEEE ACCESS, V10, P20357, DOI 10.1109/ACCESS.2022.3152803
   Bondi B., P 2 INT WORKSH SOFTW, DOI [10.1145/350391, DOI 10.1145/350391]
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Evans E., 2003, Domain-Driven Design
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Giudici G, 2020, J IND BUS ECON, V47, P1, DOI 10.1007/s40812-019-00138-6
   ibm, MICROSERVICES ARCHIT
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Jogalekar P, 2000, IEEE T PARALL DISTR, V11, P589, DOI 10.1109/71.862209
   Josuttis N.M., 2007, SOA in Practice: the Art of Distributed System Design
   Kassahun A., 2017, ALIGNING BUSINESS PR, DOI [10.18174/414988, DOI 10.18174/414988]
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lewis J., 2014, Microservices: A definition of this new architectural term
   Newman S., 2015, BUILDING MICROSERVIC
   Newman Sam, 2019, Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith
   Richter D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P608, DOI 10.5220/0006791006080615
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shadija D., 2017, 2017 23 INT C AUT CO, P1
   Stefanko M, 2019, ICSOFT: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P483, DOI 10.5220/0007918704830490
   Tekinerdogan Bedir., 2013, Software Engineering Frameworks for the Cloud Computing Paradigm, P189, DOI [10.1007/978-1-4471-5031-2_9, DOI 10.1007/978-1-4471-5031-2_9]
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Yu Y, 2016, Adv Inform Managemen, P1856, DOI 10.1109/IMCEC.2016.7867539
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 32
TC 0
Z9 0
U1 5
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2024
VL 54
IS 1
BP 58
EP 84
DI 10.1002/spe.3241
EA JUL 2023
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF0T2
UT WOS:001036502200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Correia, J
   Silva, AR
AF Correia, Jose
   Silva, Antonio Rito
TI Identification of monolith functionality refactorings for microservices
   migration
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE heuristics; microservices; monolith migration; refactoring; SAGA Pattern
AB In the process of migrating a monolith to a microservice architecture, functionalities which execute on top of a single database as ACID transactions, have their execution split between several databases, one for each microservice. Therefore, the complexity of functionality migration increases, because of the lack of isolation of the functionality execution, which has to be handled by following an eventual consistency model. On the other hand, the object-oriented approach, commonly followed in the development of monolith systems, promotes fine-grained interactions in the functionalities implementation, which further increases the migration effort due to the large number of remote invocations between microservices, because it increases the number of microservices transactions that have to eventually be consistent. The main contribution of this paper is a heuristic method to help the software architect on the identification of functionality refactorings, to reduce the effort required to migrate the functionality to microservices when applying the SAGA pattern in the functionality microservices implementation. The heuristic accuracy and efficiency of the method is evaluated using a dataset extracted from 78 codebases and by comparing the results with expert refactorizations. Additionally, a performance analysis of the heuristic implementation is done.
C1 [Correia, Jose; Silva, Antonio Rito] INESC ID, Distributed Parallel & Secure Syst, Lisbon, Portugal.
   [Correia, Jose] Univ Lisbon, Inst Super Tecn, Dept Elect & Comp & Engn, Lisbon, Portugal.
   [Silva, Antonio Rito] Univ Lisbon, Inst Super Tecn, Dept Comp Sci & Engn, Lisbon, Portugal.
C3 Universidade de Lisboa; INESC-ID; Universidade de Lisboa; Universidade
   de Lisboa
RP Silva, AR (corresponding author), Rua Alves Redol 9, P-1000029 Lisbon, Portugal.
EM rito.silva@tecnico.ulisboa.pt
RI Rito Silva, Antonio/A-6604-2012
OI Rito Silva, Antonio/0000-0001-9840-457X
FU Fundacao para a Ciencia e a Tecnologia [UIDB/50021/2020]
FX Fundacao para a Ciencia e a Tecnologia, Grant/Award Number:
   UIDB/50021/2020
CR Abdellatif M, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110868
   Abdullah M, 2019, J SYST SOFTWARE, V151, P243, DOI 10.1016/j.jss.2019.02.031
   Almeida JF, 2020, LECT NOTES COMPUT SC, V12292, P39, DOI 10.1007/978-3-030-58923-3_3
   Andrade B., 2022, MONOLITH MICROSERVIC
   Bailis P, 2013, COMMUN ACM, V56, P55, DOI 10.1145/2447976.2447992
   Bogner J., 2017, PROC 27 INT WORKSHOP, P107, DOI [10.1145/3143434.3143443, DOI 10.1145/3143434.3143443]
   BREWER EA, 2000, PODC, V7, DOI [10.1145/343477.343502, DOI 10.1145/343477.343502]
   Daoud, 2020, CCIS, P299, DOI DOI 10.1007/978
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fowler M., Microservices
   Fritzsch J, 2019, LECT NOTES COMPUT SC, V11350, P128, DOI 10.1007/978-3-030-06019-0_10
   Garcia-Molina H., 1987, ACM SIGMOD Record, P249, DOI DOI 10.1145/38714.38742
   Barbosa MHG, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P41, DOI 10.1109/ICSA-C50368.2020.00015
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   HAERDER T, 1983, COMPUT SURV, V15, P287, DOI 10.1145/289.291
   Hassan S, 2022, ACM T AUTON ADAP SYS, V16, DOI 10.1145/3502724
   Hassan S, 2022, SOFTWARE PRACT EXPER, V52, P1378, DOI 10.1002/spe.3069
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Ma SP, 2018, INT CONF E BUS ENG, P239, DOI 10.1109/ICEBE.2018.00046
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Moha, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI [10.1109/TSE.2014.2372760, DOI 10.1109/TSE.2014.2372760]
   Nakazawa R, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P32, DOI 10.1109/VISSOFT.2018.00012
   Nunes L, 2019, LECT NOTES COMPUT SC, V11681, P37, DOI 10.1007/978-3-030-29983-5_3
   OHanlon C., 2006, Queue, P14, DOI DOI 10.1145/1142055.1142065
   Palomba F, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Richardson C., 2019, Microservices Patterns
   Santos N, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P169, DOI 10.1109/ICSA47634.2020.00024
   Selmadji A, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P157, DOI 10.1109/ICSA47634.2020.00023
   Zanoni M, 2015, J SYST SOFTWARE, V103, P102, DOI 10.1016/j.jss.2015.01.037
NR 33
TC 1
Z9 1
U1 1
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2022
VL 52
IS 12
BP 2664
EP 2683
DI 10.1002/spe.3141
EA AUG 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A1NL
UT WOS:000841264100001
DA 2024-07-18
ER

PT J
AU Ni, TG
   Zhu, CY
   Qian, PJ
AF Ni, Tongguang
   Zhu, Chunyan
   Qian, Pengjiang
TI Domain adaptation metric learning method embedded with structural
   information for person re-identification in internet of autonomous
   unmanned vehicles
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE Person re-identification; internet of autonomous unmanned vehicles;
   domain adaptation; discriminative model; metric learning
AB Internet of autonomous unmanned vehicles (IAUV) is a global network of sensors, robots, and autonomous vehicles. Person re-identification (Re-ID) is an important intelligent transportation application in IAUV, which needs to be solved using artificial intelligence algorithms. In this study, a domain adaptation metric learning method embedded with structural information (called DAML-ESI) is designed for person Re-ID in IAUV. Due to the lack of labeling information in the target domain, DAML-ESI realizes person Re-ID with the help of the discriminative and structural information of pedestrian images of related domains. DAML-ESI projects pedestrian images selected from different domains into a common metric space and establishes a discriminative metric learning model, which requires that the positive sample pair be mapped to a point, and the distance distribution of the negative sample pair be mapped to a fixed value. The projection matrix learned by DAML-ESI is used to eliminate the distribution differences between different domains, and the distance metric is used to ensure that the learned metric learning model has strong discriminative ability in the metric space. To verify the effectiveness of DAML-ESI, experimental comparisons are conducted on three person Re-ID datasets, and DAML-ESI achieves satisfactory recognition performance.
C1 [Ni, Tongguang] Changzhou Univ, Sch Comp Sci & Artificial Intelligence, Changzhou, Peoples R China.
   [Zhu, Chunyan] Suzhou Top Inst Informat Technol, Sch Informat Technol, Suzhou, Peoples R China.
   [Qian, Pengjiang] Jiangnan Univ, Sch Artificial Intelligence & Comp Sci, Hihu Rd 1800, Wuxi, Jiangsu, Peoples R China.
C3 Changzhou University; Jiangnan University
RP Qian, PJ (corresponding author), Jiangnan Univ, Sch Artificial Intelligence & Comp Sci, Hihu Rd 1800, Wuxi, Jiangsu, Peoples R China.
EM qianpjiang@jiangnan.edu.cn
RI Ni, Tongguang/GPP-6949-2022
OI Ni, Tongguang/0000-0002-0354-5116
FU Natural Science Foundation of Jiangsu Province [BK 20211333]; Science
   and Technology Demonstration Project of Social Development of Jiangsu
   Province [BE 2019631]
FX Natural Science Foundation of Jiangsu Province, Grant/Award Number: BK
   20211333; Science and Technology Demonstration Project of Social
   Development of Jiangsu Province, Grant/Award Number: BE 2019631; Jiangsu
   Province
CR Bao WGDL, 2021, CHINA COMMUN, V18, P39, DOI 10.23919/JCC.2021.06.004
   Bitam S, 2015, IEEE COMMUN SURV TUT, V17, P843, DOI 10.1109/COMST.2014.2371828
   Dong PR, 2020, CHINA COMMUN, V17, P1, DOI 10.23919/JCC.2020.11.001
   Eskandarian A, 2021, IEEE T INTELL TRANSP, V22, P683, DOI 10.1109/TITS.2019.2958352
   Fan HH, 2018, ACM T MULTIM COMPUT, V14, DOI 10.1145/3243316
   Feroz Ali TM., 2018, PAPER PRESENTED P 11, P1
   Guo Y, 2020, SOFTWARE PRACT EXPER, V50, P489, DOI 10.1002/spe.2685
   Huang JC, 2019, IET IMAGE PROCESS, V13, P804, DOI 10.1049/iet-ipr.2018.5871
   Kumar N., 2021, RESOURCE MANAGEMENT, V51, P2357
   Leng QM, 2018, ADV MULTIMED, V2018, DOI 10.1155/2018/3586191
   Li YL, 2018, PROC CVPR IEEE, P5997, DOI 10.1109/CVPR.2018.00628
   Liao SC, 2015, IEEE I CONF COMP VIS, P3685, DOI 10.1109/ICCV.2015.420
   Liao SC, 2015, PROC CVPR IEEE, P2197, DOI 10.1109/CVPR.2015.7298832
   Lin Shan, 2018, 2018 IEEE 36 VLSI TE
   Liu YX, 2018, ELECTRON LETT, V54, P821, DOI 10.1049/el.2018.0324
   Ni TG, 2018, J ELECTRON IMAGING, V27, DOI 10.1117/1.JEI.27.4.043026
   paperswithcode, MSMT17 DATASET
   paperswithcode, MARKET1501 DATASET
   paperswithcode, DUKEMTMC REID DATASE
   Pedagadi S, 2013, PROC CVPR IEEE, P3318, DOI 10.1109/CVPR.2013.426
   ShaoY SZ., 2021, IEEE T CONTROL SYST, V29, P1721
   Tao DP, 2016, IEEE T IMAGE PROCESS, V25, P2726, DOI 10.1109/TIP.2016.2553446
   Tao DP, 2013, IEEE T CIRC SYST VID, V23, P1675, DOI 10.1109/TCSVT.2013.2255413
   Wan LT, 2021, IEEE T INTELL TRANSP, V22, P3603, DOI 10.1109/TITS.2020.3018377
   Wang HY, 2017, PATTERN RECOGN, V67, P340, DOI 10.1016/j.patcog.2017.01.033
   Wang J, 2018, PATTERN RECOGN, V74, P38, DOI 10.1016/j.patcog.2017.09.014
   Wang JY, 2018, PROC CVPR IEEE, P2275, DOI 10.1109/CVPR.2018.00242
   Wei LH, 2018, ICMR '18: PROCEEDINGS OF THE 2018 ACM INTERNATIONAL CONFERENCE ON MULTIMEDIA RETRIEVAL, P501, DOI 10.1145/3206025.3206086
   Yu HX, 2019, PROC CVPR IEEE, P2143, DOI 10.1109/CVPR.2019.00225
   Yu HX, 2017, IEEE I CONF COMP VIS, P994, DOI 10.1109/ICCV.2017.113
   Zhang J, 2020, P IEEE, V108, P246, DOI 10.1109/JPROC.2019.2947490
   Zhang L, 2016, PROC CVPR IEEE, P1239, DOI 10.1109/CVPR.2016.139
   Zhang SW, 2019, IEEE INTERNET THINGS, V6, P5446, DOI 10.1109/JIOT.2019.2902162
   Zhao CR, 2018, NEUROCOMPUTING, V275, P403, DOI 10.1016/j.neucom.2017.08.064
   Zheng ZD, 2018, ACM T MULTIM COMPUT, V14, DOI 10.1145/3159171
   Zhong Z, 2021, IEEE T PATTERN ANAL, V43, P2723, DOI 10.1109/TPAMI.2020.2976933
NR 36
TC 0
Z9 0
U1 4
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2022 JUL 12
PY 2022
DI 10.1002/spe.3122
EA JUL 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U2LY
UT WOS:000822993300001
DA 2024-07-18
ER

PT J
AU Tziakouris, G
   Mera-Gomez, C
   Ramírez, F
   Bahsoon, R
   Buyya, R
AF Tziakouris, Giannis
   Mera-Gomez, Carlos
   Ramirez, Francisco
   Bahsoon, Rami
   Buyya, Rajkumar
TI Market-inspired framework for securing assets in cloud computing
   environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE assets; cloud computing; market-based; security; self-adaptation
ID MANAGEMENT; AUCTION; MODELS
AB Self-adaptive security methods have been extensively leveraged for securing software systems and users from runtime threats in online and elastic environments, such as the cloud. The existing solutions treat security as an aggregated quality by enforcing "one service for all" without considering the explicit security requirements of each asset or the costs associated with security. Dealing with the security of assets in ultra-large environments calls for rethinking the way we select and compose services-considering not only the services but the underlying supporting computational resources in the process. We motivate the need for an asset-centric, self-adaptive security framework that selects and allocates services and underlying resources in the cloud. The solution leverages learning algorithms and market-inspired approaches to dynamically manage changes in the runtime security goals/requirements of assets with the provision of suitable services and resources, while catering for monetary and computational constraints. The proposed framework aims to inform the self-adaptive security efforts of security researchers and practitioners operating in dynamic large-scale environments, such as the Cloud. To illustrate the utility of the proposed framework it is evaluated using simulation on an application based scenario, involving cloud-based storage and security services.
C1 [Tziakouris, Giannis; Ramirez, Francisco; Bahsoon, Rami] Univ Birmingham, Sch Comp Sci, Birmingham, Edgbaston, England.
   [Mera-Gomez, Carlos] ESPOL Polytech Univ, Fac Ingn Elect & Comp, Escuela Super Politecn Litoral, ESPOL, Campus Gustavo Galindo Km 30-5 Via Perimetral, Guayaquil, Ecuador.
   [Buyya, Rajkumar] Univ Melbourne, Cloud Comp & Distributed Syst CLOUDS Lab, Sch Comp & Informat Syst, Parkville, Vic, Australia.
C3 University of Birmingham; Escuela Superior Politecnica del Litoral;
   University of Melbourne
RP Mera-Gomez, C (corresponding author), ESPOL Polytech Univ, Fac Ingn Elect & Comp, Escuela Super Politecn Litoral, ESPOL, Campus Gustavo Galindo Km 30-5 Via Perimetral, Guayaquil, Ecuador.
EM cjmera@espol.edu.ec
RI Buyya, Rajkumar/C-3424-2009
OI Buyya, Rajkumar/0000-0001-9754-6496; Mera-Gomez,
   Carlos/0000-0002-7014-1138
CR AuYoung A., 2004, P 1 WORKSHOP OPERATI
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1507, DOI 10.1002/cpe.690
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Caruana R, 2006, P 23 INT C MACH LEAR, V148, P161, DOI DOI 10.1145/1143844.1143865
   Ebay, 2021, BID INCREMENTS
   Gaedke Martin., 2005, Special interest tracks and posters of the 14th international conference on World Wide Web, WWW '05, P1156
   Gul F, 2000, J ECON THEORY, V92, P66, DOI 10.1006/jeth.1999.2580
   Hatala M, 2005, INTERNATIONAL CONFERENCE ON NEXT GENERATION WEB SERVICES PRACTICES, P287, DOI 10.1109/NWESP.2005.41
   Holmes G., 1994, Proceedings of the 1994 Second Australian and New Zealand Conference on Intelligent Information Systems (Cat. No.94TH8019), P357, DOI 10.1109/ANZIIS.1994.396988
   Irwin D, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 2006 USENIX ANNUAL TECHNICAL CONFERENCE, P199
   Jia Xu, 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P703, DOI 10.1109/CloudCom.2010.16
   KETCHAM J, 1984, REV ECON STUD, V51, P595, DOI 10.2307/2297781
   Lai K, 2005, MULTIAGENT GRID SYST, V1, P169, DOI 10.3233/MGS-2005-1303
   Li JX, 2012, FUTURE GENER COMP SY, V28, P379, DOI 10.1016/j.future.2011.04.012
   Ma SN, 2013, 2013 INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA (CLOUDCOM-ASIA), P597, DOI 10.1109/CLOUDCOM-ASIA.2013.94
   Mazur S., 2011, NAECON 2011 - IEEE National Aerospace and Electronics Conference, P39, DOI 10.1109/NAECON.2011.6183074
   pCloud AG, 2021, PCLOUD
   Ruth P., 2006, Proceedings. 3rd International Conference on Autonomic Computing (IEEE Cat. No. 06EX1303), P5
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Squicciarini A. C., 2012, 2012 8th International Conference on Network and Service Management (CNSM 2012), P140
   Tari Z, 1997, DATABASE SECURITY VOLUME X - STATUS AND PROSPECTS, P23
   Tchernykh A, 2020, IEEE INTERNET THINGS, V7, P10171, DOI 10.1109/JIOT.2020.2981276
   Tziakouris G, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, 2014 IEEE 6TH INTL SYMP ON CYBERSPACE SAFETY AND SECURITY, 2014 IEEE 11TH INTL CONF ON EMBEDDED SOFTWARE AND SYST (HPCC,CSS,ICESS), P221, DOI 10.1109/HPCC.2014.39
   Vytelingum P, 2008, ARTIF INTELL, V172, P1700, DOI 10.1016/j.artint.2008.06.001
   Watson P, 2012, J CLOUD COMPUT-ADV S, V1, DOI 10.1186/2192-113X-1-15
   Xiong H, 2022, IEEE INTERNET THINGS, V9, P3097, DOI 10.1109/JIOT.2021.3094323
   Yan LA, 2009, LECT NOTES COMPUT SC, V5931, P167
   Yun Fu, 2003, Operating Systems Review, V37, P133, DOI 10.1145/1165389.945459
NR 30
TC 1
Z9 1
U1 3
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2022
VL 52
IS 9
BP 2005
EP 2025
DI 10.1002/spe.3113
EA JUN 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3T7YW
UT WOS:000807256700001
DA 2024-07-18
ER

PT J
AU Gu, XQ
   Jiang, YZ
AF Gu Xiaoqing
   Jiang Yizhang
TI Online multitarget tracking system for autonomous vehicles using
   discriminative dictionary learning with embedded auto-encoder algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomous vehicles; dictionary learning; internet of vehicles; mobile
   edge computing; multitarget tracking
ID OBJECT TRACKING; K-SVD
AB With the advancements in 5G network and mobile edge computing technology, autonomous vehicle technology has gained new development opportunities. Multitarget tracking becomes the research hotspots in autonomous vehicles. Since many factors such as motion blur, partial occlusion, and illumination changes affect the performance of target tracking, the problem of target tracking is still an open topic. In this article, inspired by the strong discriminative ability of dictionary learning, the discriminative dictionary learning with embedded auto-encoder (DDLEA) algorithm is developed for the multitarget tracking system. The DDLEA algorithm integrates the auto-encoder into the dictionary learning framework and learns sparse representations while preserving the local structure and discriminative information of data. The learned dictionary model has the strong recognition ability. Further, a multitarget tracking system is developed based on the proposed DDLEA algorithm and the hierarchical data association scheme. Based on the target confidence in the STKSVD model, the hierarchical data association method first uses the Hungarian algorithm to complete the preliminary matching of high confidence targets, and then further tracks the low confidence targets to improve the tracking ability. Experiments are carried out the public MOT 2015 dataset. Compared with several popular multitarget tracking algorithms, the tracking performance of our system is satisfactory.
C1 [Gu Xiaoqing] Changzhou Univ, Sch Comp Sci & Artificial Intelligence, Changzhou, Peoples R China.
   [Jiang Yizhang] Jiangnan Univ, Sch Artificial Intelligence & Comp Sci, Lihu Rd 1800, Wuxi, Peoples R China.
C3 Changzhou University; Jiangnan University
RP Jiang, YZ (corresponding author), Jiangnan Univ, Sch Artificial Intelligence & Comp Sci, Lihu Rd 1800, Wuxi, Peoples R China.
EM yzjiang@jiangnan.edu.cn
RI Gu, Xiaoqing/GPP-6913-2022; Jiang, Yizhang/V-2171-2019
OI Jiang, Yizhang/0000-0002-4558-9803
FU open project fund of Key Laboratory of Image Processing and Intelligent
   Control Huazhong University of science and technology; Science and
   Technology Project of Changzhou City [CE20215032]; Ministry of
   Education; National Natural Science Foundation of China [62171203];
   Huazhong University of science and technology
FX open project fund of Key Laboratory of Image Processing and Intelligent
   Control (Huazhong University of science and technology); Science and
   Technology Project of Changzhou City, Grant/Award Number: CE20215032;
   Ministry of Education; Huazhong University of science and technology;
   National Natural Science Foundation of China, Grant/Award Number:
   62171203
CR Abbasi S, 2021, INT J COMMUN SYST, V34, DOI 10.1002/dac.4793
   Aharon M, 2006, IEEE T SIGNAL PROCES, V54, P4311, DOI 10.1109/TSP.2006.881199
   Alqahtani A, 2019, SOFTWARE PRACT EXPER, V49, P1689, DOI 10.1002/spe.2747
   Bae SH, 2014, PROC CVPR IEEE, P1218, DOI 10.1109/CVPR.2014.159
   Candes EJ, 2005, IEEE T INFORM THEORY, V51, P4203, DOI 10.1109/TIT.2005.858979
   Ciaparrone G, 2020, NEUROCOMPUTING, V381, P61, DOI 10.1016/j.neucom.2019.11.023
   Collotta M, 2021, INT J INTELL SYST, V36, P1595, DOI 10.1002/int.22353
   Dollár P, 2014, IEEE T PATTERN ANAL, V36, P1532, DOI 10.1109/TPAMI.2014.2300479
   Gao SH, 2021, IEEE T PATTERN ANAL, V43, P652, DOI 10.1109/TPAMI.2019.2938758
   Garcia-Saavedra A, 2018, IEEE J SEL AREA COMM, V36, P2433, DOI 10.1109/JSAC.2018.2874142
   Gu XH, 2021, T EMERG TELECOMMUN T, V32, DOI 10.1002/ett.4095
   Guo Y, 2020, SOFTWARE PRACT EXPER, V50, P489, DOI 10.1002/spe.2685
   He ZL, 2021, SOFTWARE PRACT EXPER, V51, P1868, DOI 10.1002/spe.2951
   Huang JW, 2020, PEER PEER NETW APPL, V13, P1776, DOI 10.1007/s12083-020-00880-y
   Jiancheng Zou, 2021, Artificial Intelligence and Security: 7th International Conference, ICAIS 2021, Proceedings. Lecture Notes in Computer Science, Information Systems and Applications, incl. Internet/Web, and HCI (12736), P455, DOI 10.1007/978-3-030-78609-0_39
   Jiang ZL, 2013, IEEE T PATTERN ANAL, V35, P2651, DOI 10.1109/TPAMI.2013.88
   Leal-Taixé L, 2016, IEEE COMPUT SOC CONF, P418, DOI 10.1109/CVPRW.2016.59
   Li B, 2018, PROC CVPR IEEE, P8971, DOI 10.1109/CVPR.2018.00935
   Liu N, 2019, MULTIMED TOOLS APPL, V78, P3689, DOI 10.1007/s11042-017-5538-4
   Manh H., 2018, P 2018 15 C COMP ROB
   Milan A, 2014, IEEE T PATTERN ANAL, V36, P58, DOI 10.1109/TPAMI.2013.103
   Shakeel PM, 2021, MOBILE NETW APPL, V26, P969, DOI 10.1007/s11036-020-01670-9
   Solera F., 2016, P 2015 IEEE INT C CO
   Tan X, 2021, J VIS COMMUN IMAGE R, V79, DOI 10.1016/j.jvcir.2021.103250
   Wang HY, 2020, SIGNAL PROCESS, V172, DOI 10.1016/j.sigpro.2020.107535
   Wang H, 2018, IEEE SENS J, V18, P7158, DOI 10.1109/JSEN.2018.2853188
   Wang JG, 2007, J SYST ENG ELECTRON, V18, P27, DOI 10.1016/S1004-4132(07)60045-0
   Wang XH, 2018, IEEE T PARALL DISTR, V29, P2429, DOI 10.1109/TPDS.2018.2832124
   Xie Y, 2021, SOFTWARE PRACT EXPER, V51, P2108, DOI 10.1002/spe.2965
   Zhang J, 2020, P IEEE, V108, P246, DOI 10.1109/JPROC.2019.2947490
   Zhang YX, 2017, REMOTE SENS-BASEL, V9, DOI 10.3390/rs9050482
   Zheng D, 2013, 2013 15TH IEEE INTERNATIONAL CONFERENCE ON COMMUNICATION TECHNOLOGY (ICCT), P438, DOI 10.1109/ICCT.2013.6820416
NR 32
TC 1
Z9 1
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2022
VL 52
IS 8
BP 1785
EP 1801
DI 10.1002/spe.3089
EA APR 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2R3HL
UT WOS:000778768500001
DA 2024-07-18
ER

PT J
AU Prutchi, ES
   Campos, HD
   Murta, LGP
AF Prutchi, Eduardo S.
   Campos Junior, Heleno de S.
   Murta, Leonardo G. P.
TI How the adoption of feature toggles correlates with branch merges and
   defects in open-source projects?
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE branch; defect; feature toggles; merge; trunk-based development
AB Context Branching has been widely adopted in version control to enable collaborative software development. However, the isolation caused by branches may impose challenges on the upcoming merging process. Recently, companies like Google, Microsoft, Facebook, and Spotify, among others, have adopted trunk-based development together with feature toggles. This strategy enables collaboration without the need for isolation through branches, potentially reducing the merging challenges. However, the literature lacks evidence about the benefits and limitations of feature toggles to collaborative software development. Objective/method In this article, we study the effects of applying feature toggles on 949 open-source projects written in six different programming languages. We first identified the moment in which each project adopted a feature toggles framework. Then, we observed whether the adoption implied significant changes in the frequency or complexity of branch merges and the number of defects, and the average time to fix them. Finally, we compared the obtained results with results obtained from a set of control projects that do not use feature toggles frameworks. Results/conclusion We could observe a reduction in the average merge effort and an increase in the average total time needed to fix defects after adopting feature toggles frameworks. However, we could not confirm that this increase was influenced by the use of feature toggles.
C1 [Prutchi, Eduardo S.; Campos Junior, Heleno de S.; Murta, Leonardo G. P.] Univ Fed Fluminense, Inst Comp, Niteroi, RJ, Brazil.
C3 Universidade Federal Fluminense
RP Campos, HD (corresponding author), Univ Fed Fluminense, Av Gal Milton Tavares de Souza S-N, Niteroi, RJ, Brazil.
EM helenocampos@id.uff.br
OI de Souza Campos Junior, Heleno/0000-0001-5541-0021
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [306137/2017-8]; Coordenacao de Aperfeicoamento de Pessoal de Nivel
   Superior [8887.357762/2019-00]; Fundacao Carlos Chagas Filho de Amparo a
   Pesquisa do Estado do Rio de Janeiro [E-26/200.591/2021,
   E26/010.101250/2018]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Number: 306137/2017-8; Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior, Grant/Award Number: 8887.357762/2019-00;
   Fundacao Carlos Chagas Filho de Amparo a Pesquisa do Estado do Rio de
   Janeiro, Grant/Award Numbers: E-26/200.591/2021, E26/010.101250/2018
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   [Anonymous], 2018, DIGITALOCEAN DEV USI
   Barnett V., 1994, OUTLIERS STAT DATA
   Berczuk S, 2003, IEEE SOFTWARE, V20, P15, DOI 10.1109/MS.2003.1184160
   Bird J, 2014, FEATURE TOGGLES ARE
   Bonferroni C.E., 1936, Pubblicazioni del R Istituto Superiore di Scienze Economiche e Commericiali diFirenze, V8, P3
   Costa C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/2950290.2950339
   Costa C, 2014, INT J SOFTW ENG KNOW, V24, P1489, DOI 10.1142/S0218194014400166
   Dias K, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106256
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fowler M., 2010, BLIKI FEATURETOGGLE
   Heys B., ALM RANGERS SOFTWARE
   Hodgson P., 2016, FEATURE TOGGLES
   Httermann Michael, 2012, DevOps for developers, V1
   Hubaux A., 2012, CONFWS 12 P 2012 INT, P31
   Ji T, 2020, PROC INT SYMP SOFTW, P70, DOI 10.1109/ISSRE5003.2020.00016
   Knuth Donald Ervin, 1997, ART COMPUTER PROGRAM, V3
   Kumar K., 2017, THESIS MIT
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Mahdavi-Hezaveh R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09901-z
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Meinicke J., 2020, P INT C MIN SOFTW RE
   Meinicke J, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P233, DOI 10.1145/3377813.3381366
   Moura T., 2018, P 6 WORKSH SOFTW VIS
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   Parnin C, 2017, IEEE SOFTWARE, V34, P86, DOI 10.1109/MS.2017.86
   Phillips S, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P9
   Prudêncio JG, 2012, J SYST SOFTWARE, V85, P277, DOI 10.1016/j.jss.2011.04.065
   Rahman MT, 2019, EMPIR SOFTW ENG, V24, P826, DOI 10.1007/s10664-018-9639-0
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Ramanathan MK, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P221, DOI 10.1145/3377813.3381350
   Rehn C., 2012, CONTINUOUS INTEGRATI
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Sato D., 2014, BLIKI CANARYRELEASE
   Schermann G., 2016, PEERJ PREPRINTS
   Shihab E, 2012, INT SYMP EMP SOFTWAR, P301, DOI 10.1145/2372251.2372305
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Warner R., 2013, Applied Statistics: From Bivariate through Multivariate Techniques, V2nd
   Wilcoxon F., 1945, BIOMETR BULL, V1, p80
NR 39
TC 1
Z9 2
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 506
EP 536
DI 10.1002/spe.3034
EA SEP 2021
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000700334700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU He, ZL
   Li, KL
   Li, KQ
   Zhou, W
AF He, Zhenli
   Li, Kenli
   Li, Keqin
   Zhou, Wei
TI Server configuration optimization in mobile edge computing: A
   cost-performance tradeoff perspective
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cost-performance tradeoff; edge server; mobile edge computing; queueing
   model; server configuration
ID POWER; CONSUMPTION; MANAGEMENT
AB Before service providers build up an mobile edge computing (MEC) platform, an important issue that needs to be considered is the configuration of computing resources on edge servers. Since the computing resources on an edge server are limited compared with a cloud server and the service provider's deployment budget is limited, it would be unrealistic to equip all edge servers with abundant computing resources. In addition, the edge servers have different computation demands due to their different geographies. Therefore, this article investigates the problem of server configuration optimization in an MEC environment based on a given computation demand statistics of the selected deployment locations. Our strategy is to treat each edge server as an M/M/m queueing model, and then establish the performance and cost models for the system. Two optimization problems, including cost constrained performance optimization, and performance constrained cost optimization are formulated based on our models and solved by a series of fast numerical algorithms. We also conduct extensive numerical simulation examples to show the effectiveness of the proposed algorithms. MEC service providers can use our strategy to get the appropriate type of processor and obtain the optimal processor number for each edge server to achieve two different goals: (1) deliver the highest-quality services with a given cost constraint; (2) minimize the investment cost with a service-quality guarantee. Our research is of great significance for service providers to control the tradeoff between investment cost and service quality.
C1 [He, Zhenli; Li, Kenli; Li, Keqin] Hunan Univ, Coll Comp Sci & Elect Engn, Changsha 410082, Peoples R China.
   [He, Zhenli; Li, Kenli; Li, Keqin] Hunan Univ, Natl Supercomp Ctr Changsha, Changsha, Peoples R China.
   [He, Zhenli; Zhou, Wei] Yunnan Univ, Coll Software, Kunming, Yunnan, Peoples R China.
   [Li, Keqin] SUNY Coll New Paltz, Dept Comp Sci, New Paltz, NY 12561 USA.
C3 Hunan University; Hunan University; Yunnan University; State University
   of New York (SUNY) System; SUNY New Paltz
RP Li, KQ (corresponding author), Hunan Univ, Coll Comp Sci & Elect Engn, Changsha 410082, Peoples R China.
EM lik@newpaltz.edu
RI ZHOU, WEI/HNP-4799-2023
OI Xiao, Guoqing/0000-0001-5008-4829; He, Zhenli/0000-0002-7986-2222
FU National Natural Science Foundation of China [61876061]; Yunnan Applied
   Basic Research Projects [202001BB050034]
FX National Natural Science Foundation of China, Grant/Award Number:
   61876061; Yunnan Applied Basic Research Projects, Grant/Award Number:
   202001BB050034
CR Abbas N, 2018, IEEE INTERNET THINGS, V5, P450, DOI 10.1109/JIOT.2017.2750180
   Ahmed E, 2017, FUTURE GENER COMP SY, V70, P59, DOI 10.1016/j.future.2016.09.015
   Alelaiwi A, 2019, J PARALLEL DISTR COM, V127, P58, DOI 10.1016/j.jpdc.2019.01.003
   [Anonymous], 2020, Cisco annual Internet report (2018-2023) white paper
   Cao JW, 2014, IEEE T COMPUT, V63, P45, DOI 10.1109/TC.2013.122
   CHANDRAKASAN AP, 1992, IEICE T ELECTRON, VE75C, P371
   Chen X, 2016, IEEE ACM T NETWORK, V24, P2827, DOI 10.1109/TNET.2015.2487344
   Dayarathna M, 2016, IEEE COMMUN SURV TUT, V18, P732, DOI 10.1109/COMST.2015.2481183
   Dolui K., 2017, GLOBAL INTERNET THIN
   He Z., 2021, SOFTW PRACT EXPER, P1
   Huang D, 2012, IEEE T WIREL COMMUN, V11, P1991, DOI 10.1109/TWC.2012.041912.110912
   Jia MK, 2017, IEEE T CLOUD COMPUT, V5, P725, DOI 10.1109/TCC.2015.2449834
   Li HX, 2016, IEEE INT CONF MOB CL, P83, DOI 10.1109/MobileCloud.2016.16
   Li KG, 2019, IEEE UNDERWATER TECH, DOI 10.1109/ut.2019.8734319
   Li KX, 2020, IEEE T SYST MAN CY-S, V50, P4676, DOI 10.1109/TSMC.2018.2859364
   Li KQ, 2019, IEEE ACCESS, V7, P69960, DOI 10.1109/ACCESS.2019.2919106
   Li KQ, 2015, J SUPERCOMPUT, V71, P3744, DOI 10.1007/s11227-015-1463-3
   Li KQ, 2012, J SUPERCOMPUT, V61, P189, DOI 10.1007/s11227-011-0686-1
   Lin L, 2019, P IEEE, V107, P1584, DOI 10.1109/JPROC.2019.2922285
   Liu J, 2016, IEEE INT SYMP INFO, P1451, DOI 10.1109/ISIT.2016.7541539
   Lyu XC, 2018, IEEE NETWORK, V32, P54, DOI 10.1109/MNET.2018.1700101
   Ma X, 2021, IEEE T CLOUD COMPUT, V9, P968, DOI 10.1109/TCC.2019.2903240
   Ma X, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P2397, DOI 10.1145/2998181.2998269
   Mach P, 2017, IEEE COMMUN SURV TUT, V19, P1628, DOI 10.1109/COMST.2017.2682318
   Mao YY, 2017, IEEE COMMUN SURV TUT, V19, P2322, DOI 10.1109/COMST.2017.2745201
   Mao YY, 2017, IEEE T WIREL COMMUN, V16, P5994, DOI 10.1109/TWC.2017.2717986
   Mao YY, 2016, IEEE J SEL AREA COMM, V34, P3590, DOI 10.1109/JSAC.2016.2611964
   Pascinski U, 2018, J GRID COMPUT, V16, P85, DOI 10.1007/s10723-017-9415-1
   Rahimi MR, 2014, MOBILE NETW APPL, V19, P133, DOI 10.1007/s11036-013-0477-4
   Romik D, 2000, AM MATH MON, V107, P556, DOI 10.2307/2589351
   Shi WS, 2019, P IEEE, V107, P1474, DOI 10.1109/JPROC.2019.2928287
   Taleb T, 2017, IEEE COMMUN MAG, V55, P38, DOI 10.1109/MCOM.2017.1600249CM
   Tao XY, 2017, IEEE WIREL COMMUN LE, V6, P774, DOI 10.1109/LWC.2017.2740927
   Tao ZY, 2019, P IEEE, V107, P1482, DOI 10.1109/JPROC.2019.2927919
   Tham CK., 2017, 17 INT S COMMUNICATI, P1, DOI 10.1109/WoWMoM.2017.7974307
   Dinh TQ, 2017, IEEE T COMMUN, V65, P3571, DOI 10.1109/TCOMM.2017.2699660
   Thomas M. U., 1976, Queueing Systems, V18, P512
   Tran TX, 2019, IEEE T VEH TECHNOL, V68, P856, DOI 10.1109/TVT.2018.2881191
   Xu J, 2018, IEEE INFOCOM SER, P207, DOI 10.1109/INFOCOM.2018.8485977
   Xu XL, 2022, CONCURR COMP-PRACT E, V34, DOI 10.1002/cpe.5674
   Xu ZC, 2016, IEEE T PARALL DISTR, V27, P2866, DOI 10.1109/TPDS.2015.2510638
   Zhai B, 2004, DES AUT CON, P868, DOI 10.1145/996566.996798
   Zhang GL, 2018, IEEE T IND INFORM, V14, P4642, DOI 10.1109/TII.2018.2843365
   Zhang J, 2018, IEEE INTERNET THINGS, V5, P2633, DOI 10.1109/JIOT.2017.2786343
   Zhou Z, 2018, FUTURE GENER COMP SY, V86, P836, DOI 10.1016/j.future.2017.07.048
NR 45
TC 12
Z9 12
U1 1
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2021
VL 51
IS 9
SI SI
BP 1868
EP 1895
DI 10.1002/spe.2951
EA JAN 2021
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT9JV
UT WOS:000612307900001
DA 2024-07-18
ER

PT J
AU Mozaffari, M
   Nazemi, E
   Eftekhari-Moghadam, AM
AF Mozaffari, Maryam
   Nazemi, Eslam
   Eftekhari-Moghadam, Amir-Masoud
TI CONST: Continuous online NoSQL schema tuning
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automatic schema design tuning; autonomic databases; NoSQL wide column
   stores; workload change detection; workload monitoring and analysis
AB Self-tuning is a feature of autonomic databases that includes the problem of automatic schema design. Automating the schema design process is critical to provide an optimized schema that increases the performance of an application's workload in NoSQL databases. There has been important work on automated design tuning for NoSQL databases. Existing solutions take an offline approach to the schema design problem and leave several important decisions to database administrators. Although offline approaches recommend good and efficient schemas, their analysis is far too heavy-weight to be run continuously. This paper develops a novel self-tuning control loop, called CONST, for online monitoring, analysis, and schema tuning a managed NoSQL database system that automatically modify the current schema design reacting to changes in the application's workload. CONST provides components that fulfill IBM's MAPE-K loop phases to support self-tuning. We describe an implementation of the proposed CONST loop on top of the Cassandra wide column store and evaluate its performance experimentally. Our results show the low overhead of CONST and demonstrate its ability to tune a schema design in response to changes in the application's workload.
C1 [Mozaffari, Maryam; Eftekhari-Moghadam, Amir-Masoud] Islamic Azad Univ, Fac Comp & Informat Technol Engn, Qazvin Branch, Qazvin, Iran.
   [Nazemi, Eslam] Shahid Beheshti Univ, Fac Comp Sci & Engn, Tehran, Iran.
C3 Islamic Azad University; Shahid Beheshti University
RP Nazemi, E (corresponding author), Shahid Beheshti Univ, Fac Comp Sci & Engn, Tehran, Iran.
EM nazemi@sbu.ac.ir
RI Moghadam, Amir Masoud Eftekhari/ABA-5362-2021
OI Nazemi, Eslam/0000-0001-9084-3789
CR Agrawal S., 2005, SIGMOD, P930, DOI DOI 10.1145/1066157.1066292
   AMZA C, 2002, 5 WORKSH WORKL CHAR
   [Anonymous], 2006, SIGMOD, DOI [10.1145/1142473.1142592, DOI 10.1145/1142473.1142592]
   Atzeni P, 2014, INFORM SYST, V43, P117, DOI 10.1016/j.is.2013.05.002
   Badouel E, 2003, PDPTA'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS 1-4, P1568
   Bermbach D, 2015, IEEE INT CONF SERV, P163, DOI 10.1109/SOCA.2015.29
   BOUSSAHOUA M., 2018, P INT C PAR DISTR PR, P54
   Bruno N, 2007, PROC INT CONF DATA, P801
   Chebotko A, 2015, IEEE INT CONGR BIG, P238, DOI 10.1109/BigDataCongress.2015.41
   Dageville Benoit., 2004, VLDB 04, P1098, DOI DOI 10.1016/B978-012088469-8.50096-6
   de Lima C, 2015, 17 INT C INF INT WEB, P1
   Dehdouh K., 2015, International Conference on Parallel and Distributed Processing Techniques and Applications (PDPTA'15), P469
   Imam AA, 2018, J BIG DATA-GER, V5, DOI 10.1186/s40537-018-0156-1
   KEPHART J, 2003, ARCHITECTURAL BLUEPR
   Klettke M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON BIG DATA (BIG DATA), P2764, DOI 10.1109/BigData.2016.7840924
   Kuhlenkamp J, 2014, PROC VLDB ENDOW, V7, P1219, DOI 10.14778/2732977.2732995
   Mior MJ, 2017, IEEE T KNOWL DATA EN, V29, P2275, DOI 10.1109/TKDE.2017.2722412
   Mozaffari M, 2019, TABRIZ J ELECT ENG, V49, P1317
   Mozaffari M, 2020, EXPERT SYST APPL, V142, DOI 10.1016/j.eswa.2019.112973
   Noguera V, 2019, P BRAZ SYMP SOFTW, P43, DOI 10.1145/3357141.3357601
   Nzekwa RA, 2010, ELECTR COMMUN, V28, P1
   Papadomanolakis S, 2004, 16TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT, PROCEEDINGS, P383
   Pavlo A, 2017, CIDR 2017 C INN DAT
   Rasin A., 2013, P 16 INT C EXTENDING, P203
   Sattler Kai-Uwe., 2003, VLDB 2003, P1129
   Saur K, 2016, PROC IEEE INT CONF S, P167, DOI 10.1109/ICSME.2016.47
   Scherzinger S, 2013, 14 INT S DAT PROGR L
   Vajk T, 2013, INT CONF COGN INFO, P747, DOI 10.1109/CogInfoCom.2013.6719198
   Valens G, 2000, POSITIF, P101, DOI 10.1109/ICDE.2000.839397
   Yang F, 2017, ADV MATER INTERFACES, V4, DOI 10.1002/admi.201700237
   Yangui R, 2016, PROCEDIA COMPUT SCI, V96, P264, DOI 10.1016/j.procs.2016.08.138
   Zilio D. C., 2004, P 30 INT C VER LARG, P1087, DOI DOI 10.5555/1316689.1316783
NR 32
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 1147
EP 1169
DI 10.1002/spe.2945
EA DEC 2020
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000600330700001
DA 2024-07-18
ER

PT J
AU Sarwar, MU
   Javed, AR
   Kulsoom, F
   Khan, S
   Tariq, U
   Bashir, AK
AF Usman Sarwar, Muhammad
   Rehman Javed, Abdul
   Kulsoom, Farzana
   Khan, Suleman
   Tariq, Usman
   Kashif Bashir, Ali
TI PARCIV: Recognizing physical activities having complex interclass
   variations using semantic data of smartphone
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE accelerometer; complex confused activities; healthcare; interclass
   variations; semantic data; smartphone sensors
ID ACTIVITY RECOGNITION SYSTEM; SENSORS
AB Smartphones are equipped with precise hardware sensors including accelerometer, gyroscope, and magnetometer. These devices provide real-time semantic data that can be used to recognize daily life physical activities for personalized smart health assessment. Existing studies focus on the recognition of simple physical activities but they lacked in providing accurate recognition of physical activities having complex interclass variations. Therefore, this research focuses on the accurate recognition of physical activities having complex interclass variations. We propose a two-layered approach called PARCIVthat first clusters similar activities based on semantic data and then recognize them using a machine learning classifier. Our two-layered approach first bounds the highly indistinguishable activities in clusters to avoid misclassification with other distinguishable activities and thereafter recognize them on a fine-grained level within each cluster. To evaluate our approach, we make an android application that collects labeled data by using smartphone sensors from 10 participants, while performing activities. PARCIV recognizes distinguishable as well as indistinguishable activities with high accuracy of 99% on the self-collected dataset. Furthermore, PARCIV achieve 95% accuracy on the publicly available dataset used by state-of-the-art studies. PARCIVoutperforms various state-of-the-art studies by 8%-17% for simple activities as well as complex activities.
C1 [Usman Sarwar, Muhammad] Air Univ, Dept Comp Sci, Islamabad, Pakistan.
   [Usman Sarwar, Muhammad] ASET Ambient Syst & Emerging Technol Lab, Islamabad, Pakistan.
   [Rehman Javed, Abdul; Khan, Suleman] Air Univ, Natl Ctr Cyber Secur, Islamabad 44000, Pakistan.
   [Kulsoom, Farzana] Univ Pavia, Dept Elect Comp & Biomed Engn, Pavia, Italy.
   [Tariq, Usman] Prince Sattam bin Abdulaziz Univ, Coll Comp Sci Engn, Al Kharj, Saudi Arabia.
   [Kashif Bashir, Ali] Manchester Metropolitan Univ, Sch Comp Math & Digital Technol, Manchester, Lancs, England.
C3 Air University Islamabad; Air University Islamabad; University of Pavia;
   Prince Sattam Bin Abdulaziz University; Manchester Metropolitan
   University
RP Javed, AR (corresponding author), Air Univ, Natl Ctr Cyber Secur, Islamabad 44000, Pakistan.
EM abdurrahman.j74@gmail.com
RI Javed, Abdul Rehman/AAR-7021-2020; Sarwar, Muhammad Usman/AAQ-5242-2021;
   Tariq, Usman/AAF-8954-2020; Bashir, Ali Kashif/R-4015-2019; Javed, Abdul
   Rehman/ABB-2826-2020; Tariq, Usman/GZL-9946-2022; Tariq,
   Usman/AAE-8037-2022
OI Javed, Abdul Rehman/0000-0002-0570-1813; Sarwar, Muhammad
   Usman/0000-0001-7494-3413; Bashir, Ali Kashif/0000-0003-2601-9327;
   Javed, Abdul Rehman/0000-0002-0570-1813; Tariq,
   Usman/0000-0001-7672-1187
CR Alazab M, 2019, ADV SCI TECH SEC APP, P1, DOI 10.1007/978-3-030-13057-2
   ALAZAB RM, 2015, S E ASIA J PUBL HLTH, V5, P23
   ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   de la Concepción MAA, 2017, PERVASIVE MOB COMPUT, V34, P3, DOI 10.1016/j.pmcj.2016.05.002
   [Anonymous], IEEE IJCNN
   Baker T, 2013, COMPUT ELECTR ENG, V39, P2400, DOI 10.1016/j.compeleceng.2013.04.019
   Bao L, 2004, LECT NOTES COMPUT SC, V3001, P1, DOI 10.1007/978-3-540-24646-6_1
   Bayat A, 2014, PROCEDIA COMPUT SCI, V34, P450, DOI 10.1016/j.procs.2014.07.009
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen ZH, 2019, IEEE T IND INFORM, V15, P2691, DOI 10.1109/TII.2018.2869843
   Chen ZH, 2017, IEEE T IND INFORM, V13, P3070, DOI 10.1109/TII.2017.2712746
   Fahim M, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18030874
   Fahim M, 2017, 2017 IEEE 19TH INTERNATIONAL CONFERENCE ON E-HEALTH NETWORKING, APPLICATIONS AND SERVICES (HEALTHCOM)
   Farhan AA, 2016, 2016 IEEE WIRELESS HEALTH (WH), P30
   Gjoreski H, 2014, INT CONF PERVAS COMP, P145, DOI 10.1109/PerComW.2014.6815182
   Hamerly G., 2015, PARTITIONAL CLUSTERI, P41, DOI [10.1007/978-3-319-09259-1_2, DOI 10.1007/978-3-319-09259-1_2]
   Hassan MM, 2018, FUTURE GENER COMP SY, V81, P307, DOI 10.1016/j.future.2017.11.029
   Javed A, 2020, J SUPERCOMPUT, V76, P7242, DOI 10.1007/s11227-020-03155-8
   Kutia S, 2019, IEEE ACCESS, V7, P90777, DOI 10.1109/ACCESS.2019.2924584
   Kwapisz JR., 2011, ACM SIGKDD EXPLORATI, V12, P74, DOI [DOI 10.1145/1964897.1964918, 10.1145/1964897.1964918]
   Maestre-Rendon JR, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10010154
   Mannini A, 2010, SENSORS-BASEL, V10, P1154, DOI 10.3390/s100201154
   Miao F, 2015, BIOMED ENG ONLINE, V14, DOI 10.1186/s12938-015-0026-4
   Nakano K, 2017, INT CONF AWARE SCI, P539, DOI 10.1109/ICAwST.2017.8256516
   Pei L, 2013, SENSORS-BASEL, V13, P1402, DOI 10.3390/s130201402
   RUBAIYEAT HA, 2010, EMB MULT COMP EMC 20, P1
   Sarwar MU, 2019, 2019 22ND IEEE INTERNATIONAL MULTI TOPIC CONFERENCE (INMIC), P272, DOI 10.1109/inmic48123.2019.9022684
   Shoaib M, 2014, SENSORS-BASEL, V14, P10146, DOI 10.3390/s140610146
   Morillo LMS, 2015, SENSORS-BASEL, V15, P5163, DOI 10.3390/s150305163
   SRINIVASAN V, 2012, P 3 INT WORKSH SENS, P1
   Su X, 2014, TSINGHUA SCI TECHNOL, V19, P235, DOI 10.1109/TST.2014.6838194
   Sultan S, 2019, J AMB INTEL HUM COMP, V10, P4197, DOI 10.1007/s12652-019-01444-6
   Tapia EM, 2007, ELEVENTH IEEE INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS, PROCEEDINGS, P37
   Wannenburg J, 2017, IEEE T SYST MAN CY-S, V47, P3142, DOI 10.1109/TSMC.2016.2562509
   Warburton DER, 2006, CAN MED ASSOC J, V174, P801, DOI 10.1503/cmaj.051351
   Wei Y, 2015, LECT NOTES ARTIF INT, V9403, P691, DOI 10.1007/978-3-319-25159-2_63
   Yan ZX, 2012, IEEE INT SYM WRBL CO, P17, DOI 10.1109/ISWC.2012.23
   Yonggang Lu, 2017, Multimedia Tools and Applications, V76, P10701, DOI 10.1007/s11042-015-3188-y
   ZHENG Y, 2013, P 25 IAAI C
NR 39
TC 30
Z9 30
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2021
VL 51
IS 3
SI SI
BP 532
EP 549
DI 10.1002/spe.2846
EA MAY 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QH1RQ
UT WOS:000535699000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Mula, W
   Lemire, D
AF Mula, Wojciech
   Lemire, Daniel
TI Base64 encoding and decoding at almost the speed of a memory copy
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE binary-to-text encoding; data URI; vectorization; web performance
AB Many common document formats on the Internet are text-only such as email (MIME) and the Web (HTML, JavaScript, JSON, and XML). To include images or executable code in these documents, we first encode them as text using base64. Standard base64 encoding uses 64 ASCII characters, ie, both lower and upper case Latin letters, digits and two other symbols. We show how we can encode and decode base64 data at nearly the speed of a memory copy (memcpy) on recent Intel processors, as long as the data does not fit in the first-level (L1) cache. We use the single-instruction-multiple-data instruction set AVX-512 available on commodity processors. Our implementation generates several times fewer instructions than previous single-instruction-multiple-data-accelerated base64 codecs. It is also more versatile, as it can be adapted, even at runtime, to any base64 variant by only changing constants.
C1 [Mula, Wojciech; Lemire, Daniel] Univ Quebec, TELUQ, 5800 St Denis St, Montreal, PQ H2S 3L5, Canada.
C3 University of Quebec; Universite TELUQ; University of Quebec Montreal
RP Lemire, D (corresponding author), Univ Quebec, TELUQ, 5800 St Denis St, Montreal, PQ H2S 3L5, Canada.
EM daniel.lemire@teluq.ca
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922
FU Natural Sciences and Engineering Research Council of Canada
   [RGPIN-2017-03910]
FX Natural Sciences and Engineering Research Council of Canada, Grant/Award
   Number: RGPIN-2017-03910
CR Cebrian J.M., 2019, J SUPERCOMPUT, P1
   Crane M, 2017, P ACM SIGIR INT C TH
   Downs T., 2019, AVX TURBO TEST NONAV
   Freed N, 1996, 2045 INT ENG TASK FO
   Intel R, 2016, 248966033 INT CORP
   Josefsson S., 2006, The base16, base32, and base64 data encodings, DOI DOI 10.17487/RFC4648
   Kataoka H, 2019, B NETW COMPUT SYST S, V8
   Kersten T, 2018, PROC VLDB ENDOW, V11, P2209, DOI 10.14778/3275366.3275370
   Langdale G, VLDB J
   Lasch R, 2019, 15TH INTERNATIONAL WORKSHOP ON DATA MANAGEMENT ON NEW HARDWARE (DAMON 2019), DOI 10.1145/3329785.3329924
   Mua W, 2018, ACM T WEB, V12
   Reinders J., 2013, AVX 512 INSTRUCTIONS
   Rucci E, 2019, INT J PARALLEL PROG, V47, P296, DOI 10.1007/s10766-018-0585-7
   Stephens N, 2017, IEEE MICRO, V37, P26, DOI 10.1109/MM.2017.35
   Zarubin M, 2019, 15TH INTERNATIONAL WORKSHOP ON DATA MANAGEMENT ON NEW HARDWARE (DAMON 2019), DOI 10.1145/3329785.3329923
NR 15
TC 5
Z9 5
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2020
VL 50
IS 2
BP 89
EP 97
DI 10.1002/spe.2777
EA NOV 2019
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KA5NF
UT WOS:000498459700001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Yu, X
   Han, CC
   Guo, JQ
   Chen, YH
AF Yu, Xiao
   Han, Congcong
   Guo, Junqi
   Chen, Yinghe
TI The role of superior image composition in children's analogical
   reasoning
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE analogical reasoning; children; image composition; minimum region
   entropy; sparse coding; spatial pyramid matching; watershed segmentation
AB Analogical reasoning, as a higher cognitive ability, can help children make inferences about a novel situation. It is vital to help children's analogical reasoning development. However, the traditional intervention methods are simple and the effects cannot maintain. Aiming at this problem, the present study was the first to use computer technology especially image composition technique to promote children's analogical reasoning from an interdisciplinary perspective. Specifically, one minimum region entropy based composition model was proposed. On the one hand, sparse coding model and spatial pyramid matching model were used for searching semantically matching images. On the other hand, minimum region entropy model could contribute to composite the candidate region into an ideal position. Furthermore, we set up a database using massive images and adequate experiments based on it to verify the model's effectiveness and robustness. What's more important, we applied the improved image composition to analogical reasoning task. The results showed that the performance of intervention group was obviously better than control group during intervention stages and posttest stage. In general, the present study not only demonstrated the advantages of the improved image composition but also revealed composition's remarkable contribution for getting analogical relationship by children.
C1 [Yu, Xiao; Chen, Yinghe] Beijing Normal Univ, Fac Psychol, Sch Dev Psychol, Beijing 100875, Peoples R China.
   [Han, Congcong] Shandong Normal Univ, Sch Psychol, Jinan, Shandong, Peoples R China.
   [Guo, Junqi] Beijing Normal Univ, Sch Artificial Intelligence, Beijing 100875, Peoples R China.
C3 Beijing Normal University; Shandong Normal University; Beijing Normal
   University
RP Chen, YH (corresponding author), Beijing Normal Univ, Fac Psychol, Sch Dev Psychol, Beijing 100875, Peoples R China.; Guo, JQ (corresponding author), Beijing Normal Univ, Sch Artificial Intelligence, Beijing 100875, Peoples R China.
EM junqiguobnu@163.com; chenyinghe@bnu.edu.cn
FU National Natural Science Foundation of China [61977006]; National Social
   Science Foundation of China [14ZDB160]; BNU Interdisciplinary Research
   Foundation for the First-Year Doctoral Candidates [BNUXKJC1817]; Beijing
   Advanced Innovation Center for Future Education [BJAICFE2016IR-004]
FX National Natural Science Foundation of China, Grant/Award Number:
   61977006; National Social Science Foundation of China, Grant/Award
   Number: 14ZDB160; BNU Interdisciplinary Research Foundation for the
   First-Year Doctoral Candidates, Grant/Award Number: BNUXKJC1817; Beijing
   Advanced Innovation Center for Future Education, Grant/Award Number:
   BJAICFE2016IR-004
CR [Anonymous], IEEE COMP SOC C COMP
   [Anonymous], 2007, CALTECH 256 OBJECT C
   [Anonymous], 2011, INT C MACH LEARN
   [Anonymous], 2013, IEEE T PATTERN ANAL, DOI DOI 10.1109/TPAMI.2012.213
   Arbelaez Pablo., 2007, The Berkeley segmentation dataset and benchmark
   Bhat P, 2008, EUR C COMP VIS MARS
   Bhat P, 2010, ACM T GRAPHIC, V29, DOI 10.1145/1731047.1731048
   Chen J, 2014, P INT C MULT RETR GL
   Glady Y, 2017, FRONT PSYCHOL, V8, DOI 10.3389/fpsyg.2017.00707
   Goldwater MB, 2016, PSYCHOL BULL, V142, P729, DOI 10.1037/bul0000043
   Hamarneh G, 2009, IMAGE VISION COMPUT, V27, P59, DOI 10.1016/j.imavis.2006.10.009
   Hays J, 2007, ACM T GRAPHIC, V26, DOI 10.1145/1239451.1239455
   Jiang YG, 2010, IEEE T MULTIMEDIA, V12, P42, DOI 10.1109/TMM.2009.2036235
   Jia JY, 2006, ACM T GRAPHIC, V25, P631, DOI 10.1145/1141911.1141934
   Knowlton BJ, 2012, TRENDS COGN SCI, V16, P373, DOI 10.1016/j.tics.2012.06.002
   Kuncel NR, 2004, J PERS SOC PSYCHOL, V86, P148, DOI 10.1037/0022-3514.86.1.148
   Li, 2016, PREPRINT
   Morrison RG, 2011, DEVELOPMENTAL SCI, V14, P516, DOI 10.1111/j.1467-7687.2010.00999.x
   Pérez P, 2003, ACM T GRAPHIC, V22, P313, DOI 10.1145/882262.882269
   Poultney C, 2006, P ANN C ADV NEUR INF
   Qu ZG, 2013, OPTIK, V124, P1398, DOI 10.1016/j.ijleo.2012.03.047
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Russell BC, 2008, INT J COMPUT VISION, V77, P157, DOI 10.1007/s11263-007-0090-8
   Shivakumara P, 2009, 2009 10 INT C DOC AN
   Siddiquie B, 2010, 2010 IEEE C COMP VIS
   Starr A, 2018, ACTA PSYCHOL, V186, P18, DOI 10.1016/j.actpsy.2018.04.002
   STERNBERG RJ, 1977, PSYCHOL REV, V84, P353, DOI 10.1037/0033-295X.84.4.353
   Sunkavalli K, 2010, ACM T GRAPHIC, V29, DOI 10.1145/1778765.1778862
   Thibaut JP, 2010, J EXP CHILD PSYCHOL, V106, P1, DOI 10.1016/j.jecp.2010.01.001
   Vendetti MS, 2017, FRONT PSYCHOL, V8, DOI 10.3389/fpsyg.2017.00932
   Vincent N, 2008, TLS-TIMES LIT SUPPL, P25
   Wu H, 2016, J VIS COMMUN IMAGE R, V38, P100, DOI 10.1016/j.jvcir.2016.02.011
   Wu H, 2015, NEUROCOMPUTING, V159, P157, DOI 10.1016/j.neucom.2014.12.088
   Yanai K, 2005, P 13 ANN ACM INT C M
   Zhao CR, 2011, NEUROCOMPUTING, V74, P2929, DOI 10.1016/j.neucom.2011.03.035
NR 35
TC 3
Z9 3
U1 2
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2020
VL 50
IS 11
SI SI
BP 2082
EP 2094
DI 10.1002/spe.2767
EA NOV 2019
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NW3WG
UT WOS:000494605000001
DA 2024-07-18
ER

PT J
AU Utture, A
   Nandivada, VK
AF Utture, Akshay
   Nandivada, V. Krishna
TI Efficient lock-step synchronization in task-parallel languages
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE lock-step synchronization; task-parallel languages; runtime
   optimizations
AB Many modern task-parallel languages allow the programmer to synchronize tasks using high-level constructs like barriers, clocks, and phasers. While these high-level synchronization primitives help the programmer express the program logic in a convenient manner, they also have their associated overheads. In this paper, we identify the sources of some of these overheads for task-parallel languages like X10 that support lock-step synchronization, and propose a mechanism to reduce these overheads. We first propose three desirable properties that an efficient runtime (for task-parallel languages like X10, HJ, Chapel, and so on) should satisfy, to minimize the overheads during lock-step synchronization. We use these properties to derive a scheme to called uClocks to improve the efficiency of X10 clocks; uClocks consists of an extension to X10 clocks and two related runtime optimizations. We prove that uClocks satisfies the proposed desirable properties. We have implemented uClocks for the X10 language+runtime and show that the resulting system leads to a geometric mean speedup of 5.36x on a 16-core Intel system and 11.39x on a 64-core AMD system, for benchmarks with a significant number of synchronization operations.
C1 [Utture, Akshay; Nandivada, V. Krishna] IIT Madras, Dept CSE, Chennai 600036, Tamil Nadu, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Madras
RP Nandivada, VK (corresponding author), IIT Madras, Dept CSE, Chennai 600036, Tamil Nadu, India.
EM nvk@iitm.ac.in
OI Nandivada, V Krishna/0000-0002-5949-0046; Utture,
   Akshay/0000-0002-9623-3049
CR ALOOR R, 2015, P 29 ACM INT C SUP I, DOI DOI 10.1111/J.1467-9876.2011.01001.X
   ALOOR R, 2019, P 28 INT C COMP CONS
   [Anonymous], 1998, SIGPLAN Fortran Forum, DOI [10.1145/289918.289920, DOI 10.1145/289918.289920]
   Blumofe R.D., 1995, P 5 ACM SIGPLAN S PR
   Cave V, 2011, P 9 INT C PRINC PRAC
   CHARLES P, 2005, P 20 ANN ACM SIGPLAN
   COGUMBREIRO T, 2016, P 9 WORKSH PROGR LAN, DOI DOI 10.1038/NATURE06509
   Cogumbreiro T, 2017, J LOG ALGEBR METHODS, V90, P50, DOI 10.1016/j.jlamp.2017.02.006
   Cogumbreiro T, 2013, LECT NOTES COMPUT SC, V7890, P31, DOI 10.1007/978-3-642-38493-6_3
   *CRAY CHAP, CHAP PAR PROGR LANG
   FEAUTRIER P, 2014, 23 INT C COMP CONSTR
   GEORGES A, 2007, P 22 ANN ACM SIGPLAN
   GOSLING J, 2015, JAVA VERSION 1 8 SPE
   Guo Y, 2009, INT PARALL DISTRIB P, P1077
   Gupta S, 2015, J PARALLEL DISTR COM, V75, P1, DOI 10.1016/j.jpdc.2014.10.010
   Imam S, 2014, LECT NOTES COMPUT SC, V8586, P618, DOI 10.1007/978-3-662-44202-9_25
   KALIBERA T, 2013, P 2013 INT S MEM MAN, DOI DOI 10.1098/RSPB.2009.1058
   Kang Hye-Na, 2018, B WORLD HEALTH ORGAN, V96, P281, DOI [10.2471/BLT.17.206284, DOI 10.2471/BLT.17.206284]
   KRISHNAMURTHY A, 1993, P 1993 ACM IEEE C SU, DOI DOI 10.1016/J.TPB.2011.12.001
   KUMAR V, 2012, P ACM INT C OBJ OR P, DOI DOI 10.1371/JOURNAL.PMED.0050074
   Nandivada VK, 2013, ACM T PROGR LANG SYS, V35, DOI 10.1145/2450136.2450138
   Olivier SL, 2012, INT J HIGH PERFORM C, V26, P110, DOI 10.1177/1094342011434065
   Pressler Ron, 2018, Project Loom: Fibers and Continuations for the Java Virtual Machine
   SARASWAT V, X10 LANGUAGE SPECIFI, DOI DOI 10.1002/SIM.6472
   SHIRAKO J, 2009, P 23 INT C SUP ICS Y
   SHIRAKO J, 2010, 2010 IEEE INT S PAR, DOI DOI 10.1002/SIM.1688
   Shirako J, 2008, P 22 ANN INT C SUP I
   Shirako J, 2011, LECT NOTES COMPUT SC, V6665, P122, DOI 10.1007/978-3-642-21487-5_10
   TARDIEU O, 2012, P 17 ACM SIGPLAN S P, DOI DOI 10.1080/10543400802369053
   Vasudevan N, 2009, LECT NOTES COMPUT SC, V5501, P48, DOI 10.1007/978-3-642-00722-4_5
   Yang JX, 2018, INT J PARALLEL PROG, V46, P173, DOI 10.1007/s10766-016-0484-8
   Yelick K, 1998, CONCURRENCY-PRACT EX, V10, P825, DOI 10.1002/(SICI)1096-9128(199809/11)10:11/13<825::AID-CPE383>3.0.CO;2-H
   Yuki T, 2015, P ACM SIGPLAN WORKSH
NR 33
TC 0
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2019
VL 49
IS 9
BP 1379
EP 1401
DI 10.1002/spe.2726
EA JUL 2019
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IP8HI
UT WOS:000474150800001
DA 2024-07-18
ER

PT J
AU Wang, P
   Wu, DH
   Chen, ZF
   Wei, T
AF Wang, Pei
   Wu, Dinghao
   Chen, Zhaofeng
   Wei, Tao
TI Field experience with obfuscating million-user iOS apps in large
   enterprise mobile development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE iOS; mobile; obfuscation; reverse engineering; software protection
AB In recent years, mobile apps have become the infrastructure of many popular Internet services. It is now common that a mobile app serves millions of users across the globe. By examining the code of these apps, reverse engineers can learn various knowledge about the design and implementation of the apps. Real-world cases have shown that the disclosed critical information allows malicious parties to abuse or exploit the app-provided services for unrightful profits, leading to significant financial losses. One of the most viable mitigations against malicious reverse engineering is to obfuscate the apps. Despite that security by obscurity is typically considered to be an unsound protection methodology, software obfuscation can indeed increase the cost of reverse engineering, thus delivering practical merits for protecting mobile apps. In this paper, we share our experience of applying obfuscation to multiple commercial iOS apps, each of which has millions of users. We discuss the necessity of adopting obfuscation for protecting modern mobile business, the challenges of software obfuscation on the iOS platform, and our efforts in overcoming these obstacles. We especially focus on factors that are unique to mobile software development that may affect the design and deployment of obfuscation techniques. We report the outcome of our obfuscation with empirical experiments. We additionally elaborate on the follow-up case studies about how our obfuscation affected the app publication process and how we responded to the negative impacts. This experience report can benefit mobile developers, security service providers, and Apple as the administrator of the iOS ecosystem.
C1 [Wang, Pei; Wu, Dinghao] Penn State Univ, University Pk, PA 16802 USA.
   [Wang, Pei; Chen, Zhaofeng; Wei, Tao] Baidu X Lab, Sunnyvale, CA 94089 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania State University -
   University Park
RP Wang, P (corresponding author), Baidu X Lab, Sunnyvale, CA 94089 USA.
EM wangpei10@baidu.com
OI Wu, Dinghao/0000-0002-0741-5511
FU National Science Foundation [CNS-1652790]; Office of Naval Research
   [N00014-16-1-2265, N00014-16-1-2912, N00014-17-1-2894]
FX National Science Foundation, Grant/Award Number: CNS-1652790; Office of
   Naval Research, Grant/Award Number: N00014-16-1-2265, N00014-16-1-2912,
   and N00014-17-1-2894
CR [Anonymous], P 34 INT C SOFTW ENG
   [Anonymous], WHAT IS APP THINN IO
   [Anonymous], GITH WHISPERSYSTEMS
   [Anonymous], 2015, P 20 INT C ARCH SUPP
   [Anonymous], 1998, P 25 ACM SIGPLAN SIG
   [Anonymous], P 38 IEEE S SEC PRIV
   [Anonymous], 2015, RES ATTACKS INTRUSIO
   [Anonymous], ENG SECURE SOFTWARE
   [Anonymous], P 12 ACM AS C COMP C
   [Anonymous], INFORM SECURITY
   [Anonymous], P 17 ACM C COMP COMM
   [Anonymous], ITUNES CONN DEV GUID
   [Anonymous], P 11 ANN INT C MOB S
   [Anonymous], P 40 INT C SOFTW ENG
   [Anonymous], 2016, P 1 IEEE EUR S SEC P
   [Anonymous], P 30 IEEE S SEC RIV
   [Anonymous], P 22 USENIX SEC S WA
   [Anonymous], P 39 INT C SOFTW ENG
   [Anonymous], GITH PREEMPT PPIOS R
   [Anonymous], P 22 ACM SIGSAC C CO
   [Anonymous], P 2014 ACM C SEC PRI
   [Anonymous], THEORY CRYPTOGRAPHY
   [Anonymous], P 2017 11 JOINT M FD
   [Anonymous], UNL SOFTW US STILL H
   [Anonymous], 2016, DETECTION INTRUSIONS
   [Anonymous], P 1 INT WORKSH SOFTW
   [Anonymous], SHRINK YOUR COD RES
   [Anonymous], P 46 ANN IEEE S FDN
   [Anonymous], SECURITY PRIVACY COM
   [Anonymous], P 23 ANN COMP SEC AP
   [Anonymous], 2012, P 33 IEEE S SEC PRIV
   [Anonymous], INFORM SECURITY
   [Anonymous], 2018, P 25 ANN NETW DISTR
   [Anonymous], P 2013 ACM SIGSAC C
   [Anonymous], P 12 WORK C REV ENG
   [Anonymous], P 24 USENIX SEC S WA
   [Anonymous], 2014, P 11 WORK C MIN SOFT
   [Anonymous], 2011, COMPUTER AIDED VERIF
   [Anonymous], P 42 ANN IEEE ACM IN
   [Anonymous], 2011, P 18 ACM C COMP COMM
   [Anonymous], 2015, P 24 USENIX SEC S US
   [Anonymous], P 22 ACM SIGSAC C CO
   [Anonymous], GITH PJEBS OBF IOS S
   [Anonymous], P 2015 ANN REV ENG S
   [Anonymous], P 54 IEEE ANN S FDN
   [Anonymous], P 39 INT C SOFTW ENG
   [Anonymous], 2012, P 7 ACM WORKSH SCAL
   [Anonymous], SECURITY PRIVACY COM
   [Anonymous], MAX BUILD FIL SIZ
   [Anonymous], IDA AB
   [Anonymous], P IEEE ACM 1 INT WOR
   [Anonymous], P 22 ANN COMP SEC AP
   Apon D., 2014, IACR Cryptology ePrint Archive
   Balakrishnan Gogul., 2004, Compiler Construction
   Barak B, 2012, J ACM, V59, DOI 10.1145/2160158.2160159
   Baumann R., 2017, Anti-proguard: Towards automated deobfuscation of android apps. pages, P7
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Chen Z., iOS masque attack weaponized: A real world look
   Cohen F. B., 1993, Computers & Security, V12, P565, DOI 10.1016/0167-4048(93)90054-9
   Dave V, 2012, ACM SIGCOMM COMP COM, V42, P175, DOI 10.1145/2377677.2377715
   Guo FL, 2008, LECT NOTES COMPUT SC, V5230, P98
   Hubbard J, 2014, CONSUM COMM NETWORK, DOI 10.1109/CCNC.2014.6866553
   Li M, 2017, IEEE INT C INTELL TR
   Nayak K, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23349
   Popov Igor V., 2007, P 16 USENIX SEC S US
   Prakash Anand., How anyone could have used Uber to ride for free!
   Sagiv M, 1998, ACM T PROGR LANG SYS, V20, P1, DOI 10.1145/271510.271517
   Schrittwieser S, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2886012
   Wang H, 2015, PROCEEDINGS OF THE 2015 FIRST INTERNATIONAL CONFERENCE ON RELIABILITY SYSTEMS ENGINEERING 2015 ICRSE
NR 69
TC 3
Z9 3
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2019
VL 49
IS 2
SI SI
BP 252
EP 273
DI 10.1002/spe.2648
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0GK
UT WOS:000459864300007
DA 2024-07-18
ER

PT J
AU Nirumand, A
   Zamani, B
   Ladani, BT
AF Nirumand, Atefeh
   Zamani, Bahman
   Ladani, Behrouz Tork
TI VAnDroid: A framework for vulnerability analysis of Android applications
   using a model-driven reverse engineering technique
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Android application; Android application communication model; Android
   security; domain-specific model; model-driven reverse engineering;
   vulnerabilities
ID MULTILEVEL SECURITY
AB Android is extensively used worldwide by mobile application developers. Android provides applications with a message passing system to communicate within and between them. Due to the risks associated with this system, it is vital to detect its unsafe operations and potential vulnerabilities. To achieve this goal, a new framework, called VAnDroid, based on Model Driven Reverse Engineering (MDRE), is presented that identifies security risks and vulnerabilities related to the Android application communication model. In the proposed framework, some security-related information included in an Android app is automatically extracted and represented as a domain-specific model. Then, it is used for analyzing security configurations and identifying vulnerabilities in the corresponding application. The proposed framework is implemented as an Eclipse-based tool, which automatically identifies the Intent Spoofing and Unauthorized Intent Receipt as two attacks related to the Android application communication model. To evaluate the tool, it has been applied to several real-world Android applications, including 20 apps from Google Play and 110 apps from the F-Droid repository. VAnDroid is also compared with several existing analysis tools, and it is shown that it has a number of key advantages over those tools specifically regarding its high correctness, scalability, and usability in discovering vulnerabilities. The results well indicate the effectiveness and capacity of the VAnDroid as a promising approach in the field of Android security.
C1 [Nirumand, Atefeh; Zamani, Bahman] Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
   [Ladani, Behrouz Tork] Univ Isfahan, Dept Software Engn, Esfahan, Iran.
C3 University of Isfahan; University of Isfahan
RP Zamani, B (corresponding author), Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
EM zamani@eng.ui.ac.ir
RI Ladani, Behrouz Tork/U-5040-2019; Zamani, Bahman/X-6918-2019
OI Zamani, Bahman/0000-0001-6424-1442; Tork Ladani,
   Behrouz/0000-0003-2280-8839
CR [Anonymous], 2013, P 2013 ACM SIGSAC C
   [Anonymous], 21 ANN NETW DISTR SY
   [Anonymous], 2017, SYNTHESIS LECT SOFTW
   [Anonymous], 22 ANN NETW DISTR SY
   [Anonymous], P 2014 ACM SIGSAC C
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Bagheri H, 2015, TECHNICAL REPORT
   Bergmann G, 2011, LECT NOTES COMPUTER, V6707
   Bhandari S, 2017, COMPUT SECUR, V70, P392, DOI 10.1016/j.cose.2017.07.002
   BONDI A, 2000, P 2 INT WORKSH SOFTW
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Chan PP, 2011, IEEE 13 INT C COMM T
   Chin E., 2011, P 9 INT C MOB SYST A
   Eclipse Foundation, 2017, ECL ACC PROJ
   Fahl S., 2012, ACM C COMPUTER COMMU, P50, DOI 10.1145/2382196.2382205
   Gallingani D, 2014, THESIS
   Github, 2018, JADX DEX JAV DEC
   GitHub, 2017, SEC SOFTW ENG DROIDB
   GitHub, 2017, FGWEI ICC BENCH
   Gordon M.I., 2015, 22 ANN NETW DISTR SY
   Grace M., 2012, WISEC 12
   Granthi P.K., 2017, INT RES J ENG TECHNO, V4, P541
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Klieber W, 2014, P 3 ACM SIGPLAN INT
   Lam Patrick, 2011, The Soot framework for Java program analysis: a retrospective
   Lauren Annuzzi Jr J., 2014, INTRO ANDROID APPL D
   Lee YK, 2017, P 39 INT C SOFTW ENG
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li Li, 2015, P 37 INT C SOFTW ENG
   Lu L, 2012, INT C WIREL COMM NET
   Malik H, 2018, INT J FUTUR GENER CO
   Mednieks Z.R., 2012, PROGRAMMING ANDROID
   Nirumand A, 2018, UISEMDSERG201810 U I
   Nirumand A, 2018, UISEMDSERG201809 MOD
   Octeau D, 2013, P 22 IUSENIX SEC S W
   Oh JS, 2014, COMM COM INF SC, V490, P13
   Oh JS, 2014, LECT NOTES COMPUT SC, V8582, P743, DOI 10.1007/978-3-319-09147-1_54
   Okediran O. O., 2014, International Journal of Advanced Networking and Applications, V6, P2195
   Peck M, 2016, TECHNICAL REPORT
   Poniszewska-Maranda A, 2016, LECT NOTES COMPUT SC, V9847, P149, DOI 10.1007/978-3-319-44215-0_12
   Pressman Roger, 2015, SOFTWARE ENG PRACTIT, V8TH
   Rai Pragati Ogal., 2013, Android Application Security Essentials
   Rangwala Mohammed, 2014, International Journal of Security and Networks, V9, P40, DOI 10.1504/IJSN.2014.059327
   Rashidi B., 2015, Journal of Wireless Mobile Networks, Ubiquitous Computing, and Dependable Applications JoWUA, V6, P3
   Reaves B, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2996358
   Salva S, 2015, INT J SOFTW TOOLS TE, V17, P201, DOI 10.1007/s10009-014-0303-8
   Shen F., 2014, P 29 ACM IEEE INT C
   Six Jeff., 2011, APPL SECURITY ANDROI
   Software Engineering Institute, 2002, SOFTWARE ARCHITECTUR
NR 49
TC 18
Z9 20
U1 1
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2019
VL 49
IS 1
BP 70
EP 99
DI 10.1002/spe.2643
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC7ZF
UT WOS:000452020000003
OA hybrid
DA 2024-07-18
ER

PT J
AU Sabir, F
   Palma, F
   Rasool, G
   Guéhéneuc, YG
   Moha, N
AF Sabir, Fatima
   Palma, Francis
   Rasool, Ghulam
   Gueheneuc, Yann-Gael
   Moha, Naouel
TI A systematic literature review on the detection of smells and their
   evolution in object-oriented and service-oriented systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE antipatterns; design smells; object-oriented (OO) systems;
   service-oriented (SO) systems; smells
ID CODE-1ST WEB SERVICES; SOFTWARE; PATTERNS
AB This systematic literature review paper investigates the key techniques employed to identify smells in different paradigms of software engineering from object-oriented (OO) to service-oriented (SO). In this review, we want to identify commonalities and differences in the identification of smells in OO and SO systems. Our research method relies on an automatic search from the relevant digital libraries to find the studies published since January 2000 on smells until December 2017. We have conducted a pilot and author-based search that allows us to select the 78 most relevant studies after applying inclusion and exclusion criteria. We evaluated the studies based on the smell detection techniques and the evolution of different methodologies in OO and SO. Among the 78 relevant studies selected, we have identified six different studies in which linguistic source code analysis received less attention from the researchers as compared to the static source code analysis. Smells like the yo-yo problem, unnamed coupling, intensive coupling, and interface bloat received considerably less attention in the literature. We also identified a catalog of 30 smells infrequently reported for SO systems and that require further attention. Moreover, a suite of 20 smells reported for SO systems can also be detected using static source code metrics in OO. Finally, our review highlighted three major research trends that are further subdivided into 20 research patterns initiating the detection of smells toward their correction.
C1 [Sabir, Fatima; Rasool, Ghulam] COMSATS Univ Islamabad, Dept Comp Sci, Lahore, Pakistan.
   [Sabir, Fatima] UET Lahore, Sharif Coll Engn & Technol, Lahore, Pakistan.
   [Palma, Francis] Linnaeus Univ, Dept Comp Sci, Kalmar, Sweden.
   [Gueheneuc, Yann-Gael] Concordia Univ, Dept Comp Sci, Montreal, PQ, Canada.
   [Moha, Naouel] Univ Quebec Montreal, Dept Comp Sci, Montreal, PQ, Canada.
C3 COMSATS University Islamabad (CUI); Linnaeus University; Concordia
   University - Canada; University of Quebec; University of Quebec Montreal
RP Palma, F (corresponding author), Linnaeus Univ, Dept Comp Sci, Kalmar, Sweden.
EM francispalmaphd@gmail.com
RI Palma, Francis/HPC-9574-2023; Palma, Francis/R-3651-2019
OI Sabir, Fatima/0000-0001-8707-6603
CR Abebe SL, 2012, 2012 19 WORK C REV E
   Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   [Anonymous], 2008, SYSTEMATIC REV SOCIA
   [Anonymous], P 37 INT C SOFTW ENG
   Arnaoudova V, 2013, 2013 17 EUR C SOFTW
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Atkinson P., 1994, Ethnography and participant observation
   Baghdadi Youcef, 2015, International Journal of Systems and Service-Oriented Engineering, V5, P1, DOI 10.4018/IJSSOE.2015040101
   Bandi A, 2013, 2013 20 WORK C REV E
   Bashir I, 2012, TESTING OBJECT ORIEN
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   BIFFL S, 2001, P 7 INT S SOFTW METR
   Booch G., 2006, OBJECT ORIENTED ANAL
   Breivold HP, 2007, P 33 EUROMICRO C SOF
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Coscia JLO, 2011, P 12 ARG S SOFTW ENG
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   DAmbros M., 2008, Software Evolution, P37
   Danphitsanuphan P., 2012, 2012 SPRING C ENG TE, P1
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Neto BFD, 2015, EXPERT SYST APPL, V42, P1652, DOI 10.1016/j.eswa.2014.09.022
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Erl T, 2005, SERVICE ORIENTED ARC
   Etzkorn LH, 2004, INFORM SOFTWARE TECH, V46, P677, DOI 10.1016/j.infsof.2003.12.002
   Feldt R., 2010, 22 INT C SOFTW ENG K
   Fontana FA, 2012, P 3 INT WORKSH MAN T
   Fontana FA, 2013, P 2013 IEEE INT C SO
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ganea G, 2017, SCI COMPUT PROGRAM, V134, P19, DOI 10.1016/j.scico.2015.02.007
   Gravino C, 2011, 2011 18 WORK C REV E
   Guerrouj L, 2015, SOFTW QUAL J, V25, P641
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassaine S, 2010, 2010 7 INT C QUAL IN
   Hess A, 2004, LECT NOTES COMPUT SC, V3298, P320
   Izurieta C., 2009, THESIS
   Jaafar F, 2014, P 2014 14 INT C QUAL
   Jaafar F, 2013, P 2013 20 WORK C REV
   Jaafar F, 2017, J SYST SOFTWARE, V131, P311, DOI 10.1016/j.jss.2017.05.047
   Karsai G., 2014, ARXIV14092378
   Kessentini M, 2013, SOFTWARE QUAL J, V21, P551, DOI 10.1007/s11219-012-9187-6
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F., 2009, An exploratory study of the impact of code smells on software change-proneness
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Kitchenham B, 2007, EBSE200701 EBSE U DU
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kral Jaroslav., 2008, Proceedings of the International Conference on Software Engineering Advances, V2, P160
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Lehnert S., 2011, TECHNICAL REPORT
   Lehnert S., 2011, P 12 INT WORKSH PRIN, P41
   Liu H, 2016, IEEE T SOFTWARE ENG, V42, P544, DOI 10.1109/TSE.2015.2503740
   Liu H, 2013, IEEE T SOFTWARE ENG, V39, P1112, DOI 10.1109/TSE.2013.4
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Llano MT, 2009, 4 INT C SOFTW ENG AD
   Luo YX, 2010, AEROSP CONF PROC
   Maiga A, 2012, 2012 19 WORK C REV E
   Maneerat N, 2011, 2011 8 INT JOINT C C
   Mantyla M., 2003, P INT C SOFTW MAINT
   Mantyla MV, 2004, P 20 IEEE INT C SOFT
   Rodriguez JM, 2013, SOFTWARE PRACT EXPER, V43, P613, DOI 10.1002/spe.2123
   Marinescu R, 2004, P 20 IEEE INT C SOFT
   Marinescu R, 2005, 21 IEEE INT C SOFTW
   Marinescu R, 2011, 2011 IEEE 11 INT WOR
   Marinescu R., 2004, P 11 WORK C REV ENG
   Mateos C, 2015, SOFTWARE PRACT EXPER, V45, P925, DOI 10.1002/spe.2268
   Mateos C, 2013, IEEE INTERNET COMPUT, V17, P46, DOI 10.1109/MIC.2013.4
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Meyer B., 1988, Object-Oriented Software Construction
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Moha N, 2010, FORM ASP COMPUT, V22, P345, DOI 10.1007/s00165-009-0115-x
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro M. J., 2005, IEEE INT S SOFTW MET
   Nayrolles M., 2013, 2013 20 WORK C REV E
   Nguyen HV, 2012, 201 P 27 IEEE ACM IN
   Oliveto R, 2010, 2010 14 EUR C SOFTW
   Coscia JLO, 2014, SCI COMPUT PROGRAM, V89, P374, DOI 10.1016/j.scico.2014.03.015
   Coscia JLO, 2013, INT J WEB GRID SERV, V9, P107, DOI 10.1504/IJWGS.2013.054108
   Ouni A, 2012, 2012 28 IEEE INT C S
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Ouni Ali, 2015, P 2015 ANN C GEN EV
   Palma F, 2014, P INT C SERV OR COMP
   Palma F, 2015, P INT C SERV OR COMP
   Palma F, 2014, P EUR C SOFTW ARCH 2
   Palma F, 2014, 2014 IEEE 7 INT C SE
   Palma F, 2013, INT J COOP INF SYST, V22, DOI 10.1142/S0218843013410049
   Palomba F, 2013, 2013 IEEE ACM 28 INT
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Papazoglou M.P., 2003, P 4 INT C WEB INF SY
   Papazoglou MP, 2008, INT J COOP INF SYST, V17, P223, DOI 10.1142/S0218843008001816
   Pate JR, 2013, J SOFTW-EVOL PROC, V25, P261, DOI 10.1002/smr.579
   Petrillo F, 2016, 14 INT C SERV OR COM
   Polaek I, 2012, 2012 IEEE 16 INT C I
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Roy C., 2007, 2007541 TR SCH COMP
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sabane A, 2013, 2013 17 EUR C SOFTW
   Salehie M, 2006, INT C PROGR COMPR AT
   Salvatierra G, 2012, 12 INT C COMP SCI IT
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   SjOberg DI, 2007, 2007 FUT SOFTW ENG F
   Soares G, 2013, J SYST SOFTWARE, V86, P1006, DOI 10.1016/j.jss.2012.10.040
   Stoianov A, 2010, 2010 INT JOINT C COM
   Taba S. E. S., 2013, 2013 IEEE INT C SOFT
   Trifu A, 2004, P 8 EUR WORK C SOFTW
   Ujhelyi Z, 2015, INFORM SOFTWARE TECH, V65, P147, DOI 10.1016/j.infsof.2015.01.003
   Wake WC., 2004, Refactoring Workbook
   Walter B, 2016, INFORM SOFTWARE TECH, V74, P127, DOI 10.1016/j.infsof.2016.02.003
   Wang H, 2016, 14 INT C SERV OR COM
   Wangberg R. D., 2010, THESIS
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Wong SMS, 2011, ADV M C M, P33, DOI 10.1079/9781845937607.0033
   Yamashita A, 2013, 2013 35 INT C SOFTW
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 125
TC 20
Z9 22
U1 0
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2019
VL 49
IS 1
BP 3
EP 39
DI 10.1002/spe.2639
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC7ZF
UT WOS:000452020000001
OA Bronze
DA 2024-07-18
ER

PT J
AU Staron, M
   Meding, W
   Tichy, M
   Bjurhede, J
   Giese, H
   Söder, O
AF Staron, Miroslaw
   Meding, Wilhelm
   Tichy, Matthias
   Bjurhede, Jonas
   Giese, Holger
   Soder, Ola
TI Industrial experiences from evolving measurement systems into
   self-healing systems for improved availability
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE measurement systems; metrics; self-healing
ID SOFTWARE; ARCHITECTURE; SERVICES
AB Automated measurement programs are an efficient way of collecting, processing, and visualizing measures in large software development companies. The number of measurements in these programs is usually large, which is caused by a diversity of the needs of the stakeholders. In this paper, we present the application of the self-healing concepts to assure the availability of measurements to the stakeholders without the need for effort-intensive and costly manual interventions of the operators. We study the measurement infrastructure at one of the development units of a large infrastructure provider. In this paper, we present how the Monitor, Analyze, Plane, and Execute with Knowledge model was instantiated in a simplistic manner to reduce the need for manual intervention in the operation of the measurement systems. Based on the experiences from the 2 cases studied in this paper, we show how an evolution toward self-healing measurement systems is done both with a dedicated failure taxonomy and with an effective straightforward handling of the most common errors in the execution. The mechanisms studied and presented in this paper show that self-healing provides significant improvements to the operation of the measurement program and reduces the need for daily oversight by an operator for the measurement systems.
C1 [Staron, Miroslaw; Tichy, Matthias] Univ Gothenburg, Gothenburg, Sweden.
   [Meding, Wilhelm; Bjurhede, Jonas] Ericsson AB, Stockholm, Sweden.
   [Giese, Holger] Hasso Plattner Inst Software Syst Engn, Potsdam, Germany.
   [Soder, Ola] Axis Commun, Lund, Sweden.
C3 University of Gothenburg; Ericsson
RP Staron, M (corresponding author), Univ Gothenburg, Gothenburg, Sweden.
EM miroslaw.staron@gu.se
RI Giese, Holger/W-5309-2019
OI Giese, Holger/0000-0002-4723-730X; Staron, Miroslaw/0000-0002-9052-0864
FU Swedish Strategic Research Foundation [SM13-0007]; Swedish Foundation
   for Strategic Research (SSF) [SM13-0007] Funding Source: Swedish
   Foundation for Strategic Research (SSF)
FX Swedish Strategic Research Foundation, Grant/Award Number: SM13-0007
CR [Anonymous], 2007, 15939 ISOIEC
   Brewer EA, 2001, IEEE INTERNET COMPUT, V5, P46, DOI 10.1109/4236.939450
   Candea G, 2004, USENIX Association Proceedings of the Sixth Symposium on Operating Systems Design and Implementation (OSDE '04), P31
   Chirinos L, 2005, J SYST SOFTWARE, V74, P207, DOI 10.1016/j.jss.2004.01.019
   Denaro G, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522921
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Keromytis AD, 2007, COMP NETW SEC P 4 IN, P2007
   Klopper B, 2010, 4 IEEE INT C SELF AD
   Murch R., 2004, Autonomic Computing (On Demand Series)
   Nafz Florian., 2013, Assurances for Self-Adaptive Systems, P80
   Robinson H, 2005, P AG C JUL IEEE
   Rombach H. D., 2002, ENCY SOFTWARE ENG, V2, P578
   Shin ME, 2005, SCI COMPUT PROGRAM, V57, P27, DOI 10.1016/j.scico.2004.10.003
   SHIN ME, 2006, P 3 IEEE INT WORKSH
   Staron M, 2014, ADV SOFTW ENG, V2014
   Staron M, 2013, 2013 JOINT C 23 INT
   Staron M, 2009, SOFTW PROC PROD MAN
   Staron M, 2013, RELATING SYSTEM QUAL, P209
   Staron M, 2008, INFORM SOFTWARE TECH, V50, P782, DOI 10.1016/j.infsof.2007.10.001
   Staron M, 2011, E-INFORMATICA, V5, P7, DOI 10.2478/v10233-011-0027-z
   Staron M, 2012, LECT NOTES BUS INF P, V111, P93
   Staron M, 2012, INFORM SOFTWARE TECH, V54, P887, DOI 10.1016/j.infsof.2012.02.003
   Staron M, 2011, J SOFTW MAINT EVOL-R, V23, P89, DOI 10.1002/smr.470
   Staron M, 2009, LECT NOTES COMPUT SC, V5891, P1, DOI 10.1007/978-3-642-05415-0_1
   Staron Miroslaw, 2014, CONTINUOUS SOFTWARE, P183
   SULLIVAN M, 1991, P 1991 INT S FAULT T
   Thomas JJ, 2006, IEEE COMPUT GRAPH, V26, P10, DOI 10.1109/MCG.2006.5
   Tichy M, 2004, LECT NOTES COMPUT SC, V3069, P25
   Williams S., 2007, The Profit Impact of Business Intelligence, P44, DOI [10.1016/B978-012372499-1/50004-1, DOI 10.1016/B978-012372499-1/50004-1]
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zeller M, 2013, J SYST ARCHITECT, V59, P1067, DOI 10.1016/j.sysarc.2012.11.003
NR 32
TC 3
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 719
EP 739
DI 10.1002/spe.2522
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300015
DA 2024-07-18
ER

PT J
AU Tarhio, J
   Holub, J
   Giaquinta, E
AF Tarhio, Jorma
   Holub, Jan
   Giaquinta, Emanuele
TI Technology beats algorithms (in exact string matching)
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE AVX2; exact string matching; SIMD instructions; SSE2
AB More than 120 algorithms have been developed for exact string matching within the last 40 years. We show by experiments that the naive algorithm exploiting SIMD instructions of modern CPUs (with symbols compared in a special order) is the fastest one for patterns of length up to about 50 symbols and extremely good for longer patterns and small alphabets. The algorithm compares 16 or 32 characters in parallel by applying SSE2 or AVX2 instructions, respectively. Moreover, it uses loop peeling to further speed up the searching phase. We tried several orders for comparisons of pattern symbols, and the increasing order of their probabilities in the text was the best.
C1 [Tarhio, Jorma] Aalto Univ, Dept Comp Sci, Espoo, Finland.
   [Holub, Jan] Czech Tech Univ, Fac Informat Technol, Dept Theoret Comp Sci, Prague, Czech Republic.
   [Giaquinta, Emanuele] F Secure Corp, Helsinki, Finland.
C3 Aalto University; Czech Technical University Prague
RP Holub, J (corresponding author), Czech Tech Univ, Fac Informat Technol, Dept Theoret Comp Sci, Prague, Czech Republic.
EM Jan.Holub@fit.cvut.cz
RI Tarhio, Jorma A/F-5831-2012; Holub, Jan/E-8218-2012
OI Holub, Jan/0000-0003-3022-2694; Tarhio, Jorma/0000-0003-2455-1985
CR Aho AV., 1974, DESIGN ANAL COMPUTER
   [Anonymous], 2013, Proceedings of the 15th Meeting on Algorithm Engineering and Experiments, ALENEX 2013, New Orleans, Louisiana
   Arnold R, 1997, IEEE DATA COMPR CONF, P201, DOI 10.1109/DCC.1997.582019
   BOYER RS, 1977, COMMUN ACM, V20, P762, DOI 10.1145/359842.359859
   Chhabra T, 2017, SOFTWARE PRACT EXPER, V47, P731, DOI 10.1002/spe.2433
   Durian B, 2010, INFORM PROCESS LETT, V110, P148, DOI 10.1016/j.ipl.2009.11.010
   Faro S, 2016, CORR
   Faro S, 2016, PROCEEDINGS OF THE PRAGUE STRINGOLOGY CONFERENCE 2016, P99
   Feng Z. R., 1987, Journal of Information Processing, V10, P173
   HORSPOOL RN, 1980, SOFTWARE PRACT EXPER, V10, P501, DOI 10.1002/spe.4380100608
   HUME A, 1991, SOFTWARE PRACT EXPER, V21, P1221, DOI 10.1002/spe.4380211105
   Knuth D. E., 1977, SIAM Journal on Computing, V6, P323, DOI 10.1137/0206024
   Külekci AO, 2007, LECT NOTES ENG COMP, P337
   Nevill-Manning CG, 1999, IEEE DATA COMPR CONF, P257, DOI 10.1109/DCC.1999.755675
   RAITA T, 1992, SOFTWARE PRACT EXPER, V22, P879, DOI 10.1002/spe.4380221006
   Raita T, 1999, SOFTWARE PRACT EXPER, V29, P931, DOI 10.1002/(SICI)1097-024X(199909)29:11<931::AID-SPE264>3.0.CO;2-X
   SUNDAY DM, 1990, COMMUN ACM, V33, P132, DOI 10.1145/79173.79184
   Thathoo R, 2006, CURR SCI INDIA, V91, P47
NR 18
TC 2
Z9 2
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2017
VL 47
IS 12
BP 1877
EP 1885
DI 10.1002/spe.2511
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM0FF
UT WOS:000414636600001
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Ding, Y
   Wang, D
   Li, GQ
   Sun, D
   Xin, X
   Qian, SY
AF Ding, Yue
   Wang, Dong
   Li, Guoqiang
   Sun, Daniel
   Xin, Xin
   Qian, Shiyou
TI Exploiting long-term and short-term preferences and RFID trajectories in
   shop recommendation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE matrix factorization; tensor; bpr; RFID trajectories; recommendation
ID FACTORIZATION
AB Shop recommendation in large shopping malls is useful in the mobile internet era. With the maturity of indoor positioning technology, customers' indoor trajectories can be captured by radio frequency identification devices readers, which provides a new way to analyze customers' potential preferences. In this paper, we design three methods for the top-N shop recommendation problem. The first method is an improved matrix factorization method fusing estimated prior customer preference matrix that is constructed by Session-based Temporal Graph computing. The second method is a Bayesian personalized ranking method based on the first method. The third method is by tensor decomposition combined with Session-based Temporal Graph. Besides, we exploit customer history radio frequency identification devices trajectory information to find customers' frequent paths and revise predicted rating values to improve recommendation accuracy. Our methods are effective in modeling customers' temporal dynamics. At the same time, our approach considers repeated recommendation of the same shop by designing rating update rules. The test dataset is formed by JoyCity customer behavior records. JoyCity is a large-scale modern shopping center in downtown Shanghai, China. The results show that our approaches are effective and outperform previous state-of-the-art approaches. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Ding, Yue; Qian, Shiyou] Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.
   [Wang, Dong; Li, Guoqiang; Xin, Xin] Shanghai Jiao Tong Univ, Sch Software, Shanghai, Peoples R China.
   [Sun, Daniel] CSIRO, Data61, Sydney, NSW, Australia.
C3 Shanghai Jiao Tong University; Shanghai Jiao Tong University;
   Commonwealth Scientific & Industrial Research Organisation (CSIRO)
RP Li, GQ (corresponding author), Shanghai Jiao Tong Univ, Sch Software, Shanghai, Peoples R China.
EM li.g@sjtu.edu.cn
RI Wang, Dong/I-5425-2012
FU National Natural Science Foundation of China [61472240, 61672340,
   61502296]; NSFC-ANR [61261130589]
FX This work is supported by National Natural Science Foundation of China
   with grant no. 61472240, 61672340 and 61502296 and the NSFC-ANR
   bilateral joint research project with grant no. 61261130589.
CR Ahn S, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P9, DOI 10.1145/2783258.2783373
   [Anonymous], 2005, Proceedingsofthe14th ACM International Conference on Information and Knowledge Management. CIKM '05, DOI DOI 10.1145/1099554.1099689
   [Anonymous], 2003, PROC CVPR IEEE
   [Anonymous], 2006, KDD
   [Anonymous], 2010, RECSYS
   Bao J, 2015, GEOINFORMATICA, V19, P525, DOI 10.1007/s10707-014-0220-8
   Bauer J, 2014, PROCEEDINGS OF THE 8TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'14), P249, DOI 10.1145/2645710.2645735
   Hu LK, 2014, SIGIR'14: PROCEEDINGS OF THE 37TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P345, DOI 10.1145/2600428.2609593
   Jiang SH, 2015, IEEE T MULTIMEDIA, V17, P907, DOI 10.1109/TMM.2015.2417506
   Kabbur S, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P659
   Kawamae N, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P537, DOI 10.1145/2783258.2783260
   Kolda TG, 2009, SIAM REV, V51, P455, DOI 10.1137/07070111X
   Kolda TG, 2005, FIFTH IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P242, DOI 10.1109/ICDM.2005.77
   Koren Y, 2010, COMMUN ACM, V53, P89, DOI 10.1145/1721654.1721677
   Koren Y, 2009, COMPUTER, V42, P30, DOI 10.1109/MC.2009.263
   Lou PL, 2016, 2016 IEEE SECOND INTERNATIONAL CONFERENCE ON MULTIMEDIA BIG DATA (BIGMM), P33, DOI 10.1109/BigMM.2016.38
   Mnih A., 2007, ADV NEURAL INFORM PR, V20
   Qian XM, 2014, IEEE T KNOWL DATA EN, V26, P1763, DOI 10.1109/TKDE.2013.168
   Rendle S., 2009, P 25 C UNCERTAINTY A, P452
   Shuhui Jiang, 2016, IEEE Transactions on Big Data, V2, P43, DOI 10.1109/TBDATA.2016.2541160
   Sun JM, 2006, IEEE DATA MINING, P1076
   Sun JM, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P687
   Wang H, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1235, DOI 10.1145/2783258.2783273
   Wang WQ, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1255, DOI 10.1145/2783258.2783335
   Xia Ning, 2011, Proceedings of the 2011 IEEE 11th International Conference on Data Mining (ICDM 2011), P497, DOI 10.1109/ICDM.2011.134
   Xiang L., 2010, P 16 ACM SIGKDD INT, P723, DOI 10.1145/1835804.1835896
   Xin Y, 2011, RECSYS 11, P221
   Xiong L, 2010, P SIAM INT C DAT MIN, P211, DOI DOI 10.1137/1.9781611972801.19
   Xu YY, 2013, SIAM J IMAGING SCI, V6, P1758, DOI 10.1137/120887795
   Yin H., 2015, P 24 ACM INT C INF K, P1631, DOI [10.1145/2806416.2806500, DOI 10.1145/2806416.2806500]
   Yin HZ, 2016, ACM T INFORM SYST, V35, DOI 10.1145/2873055
   Yin HZ, 2015, MM'15: PROCEEDINGS OF THE 2015 ACM MULTIMEDIA CONFERENCE, P819, DOI 10.1145/2733373.2806339
   Yin HZ, 2014, ACM T INFORM SYST, V32, DOI 10.1145/2629461
   Yin HZ, 2012, PROC VLDB ENDOW, V5, P896, DOI 10.14778/2311906.2311916
   Yin HZ, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P221
   Zhao GS, 2017, IEEE T BIG DATA, V3, P67, DOI 10.1109/TBDATA.2016.2552541
   Zhao GS, 2016, IEEE T MULTIMEDIA, V18, P496, DOI 10.1109/TMM.2016.2515362
   Zhao WX, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1935, DOI 10.1145/2623330.2623351
NR 38
TC 1
Z9 1
U1 3
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2017
VL 47
IS 6
BP 849
EP 865
DI 10.1002/spe.2460
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EE
UT WOS:000403114000004
DA 2024-07-18
ER

PT J
AU Bliudze, S
   Mavridou, A
   Szymanek, R
   Zolotukhina, A
AF Bliudze, Simon
   Mavridou, Anastasia
   Szymanek, Radoslaw
   Zolotukhina, Alina
TI Exogenous coordination of concurrent software components with JavaBIP
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE BIP; JavaBIP; component coordination; concurrency; modularity
ID MODEL
AB A strong separation of concerns is necessary in order to make the design of domain-specific functional components independent from cross-cutting concerns, such as concurrent access to the shared resources of the execution platform. Native coordination mechanisms, such as locks and monitors, allow developers to address these issues. However, such solutions are not modular; they are complex to design, debug, and maintain. We present the JavaBIP framework that allows developers to think on a higher level of abstraction and clearly separate the functional and coordination aspects of the system behavior. It implements the principles of the Behavior, Interaction, and Priority (BIP) component framework rooted in rigorous operational semantics. It allows the coordination of existing concurrent software components in an exogenous manner, relying exclusively on annotations, component APIs, and external specification files. We introduce the annotation and specification syntax of JavaBIP and illustrate its use on realistic examples, present the architecture of our implementation, which is modular and easily extensible, and provide and discuss performance evaluation results. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Bliudze, Simon; Zolotukhina, Alina] Ecole Polytech Fed Lausanne, CH-1015 Lausanne, Switzerland.
   [Mavridou, Anastasia] Vanderbilt Univ, Inst Software Integrated Syst, 221 Kirkland Hall, Nashville, TN 37235 USA.
   [Szymanek, Radoslaw] Crossing Tech SA, EPFL Innovat Pk, CH-1015 Lausanne, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; Ecole Polytechnique
   Federale de Lausanne; Vanderbilt University; Swiss Federal Institutes of
   Technology Domain; Ecole Polytechnique Federale de Lausanne
RP Bliudze, S (corresponding author), Ecole Polytech Fed Lausanne, IC, IINFCOM, LCA2, Stn 14, CH-1015 Lausanne, Switzerland.
EM simon.bliudze@epfl.ch
RI Bliudze, Simon/ABD-8558-2021
OI Bliudze, Simon/0000-0002-7900-5271
FU Swiss Commission for Technology and Innovation [CTI 14432.1 PFES-ES]
FX This work was partially supported by the Swiss Commission for Technology
   and Innovation (CTI 14432.1 PFES-ES).
CR Agha G., 1986, Actors: a model of concurrent computation in distributed systems
   AKERS SB, 1978, IEEE T COMPUT, V27, P509, DOI 10.1109/TC.1978.1675141
   Aldrich J., 2009, OOPSLA COMPANION, P1015, DOI DOI 10.1145/1639950
   Ameur-Boulifa R, 2012, RR8167 INRIA
   Attie Paul, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P128, DOI 10.1007/978-3-319-10431-7_10
   Attie P, 2016, FORM ASP COMPUT, V28, P207, DOI 10.1007/s00165-015-0349-8
   Basu A, 2011, IEEE SOFTWARE, V28, P41, DOI 10.1109/MS.2011.27
   BAUDE F, 2008, ANN TELECOMMUNICATIO
   Bensalem S, 2009, LECT NOTES COMPUT SC, V5643, P614, DOI 10.1007/978-3-642-02658-4_45
   Blech JO, 2015, LECT NOTES COMPUT SC, V9509, P43, DOI 10.1007/978-3-662-49224-6_5
   Blech Jan Olaf, 2013, CEUR P, V1069, P51
   Blech JO, 2013, ELECT P THEORETICAL
   Bliudze Simon, 2011, Software Composition. Proceedings of the 10th International Conference, SC 2011, P51, DOI 10.1007/978-3-642-22045-6_4
   Bliudze S, 2015, P 13 INT S AUT TECHN, P326, DOI [10.1007/978-3-319-24953-7_25, DOI 10.1007/978-3-319-24953-7_25]
   Bliudze S, 2014, P 6 INT WORKSH MOD S, P25, DOI [10.1145/2593770.2593777, DOI 10.1145/2593770.2593777]
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bliudze S, 2010, FORM METHOD SYST DES, V36, P167, DOI 10.1007/s10703-010-0091-z
   Bliudze Simon, 2014, P 17 INT ACM SIGS S, P169, DOI [10.1145/2602458.2602477, DOI 10.1145/2602458.2602477]
   Bozga Marius, 2012, Software Composition. Proceedings 11th International Conference, SC 2012, P1, DOI 10.1007/978-3-642-30564-1_1
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Bures T, 2004, LECT NOTES COMPUT SC, V3026, P102
   Bures T, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P40, DOI 10.1109/SERA.2006.62
   Caromel D, 2009, INFORM COMPUT, V207, P459, DOI 10.1016/j.ic.2008.12.004
   Cave V., 2010, EVALUATION USABILITY, P9
   DeLine R, 2004, LECT NOTES COMPUT SC, V3086, P465
   Deng XG, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P442, DOI 10.1109/ICSE.2002.1007989
   Dragert C., 2008, SIGSOFT '08/FSE-16, P146
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Garavel H, 2011, LECT NOTES COMPUT SC, V6605, P372, DOI 10.1007/978-3-642-19835-9_33
   Gupta M.K., 2012, Akka essentials
   Gybels Kris., 2003, P 2 INT C ASPECT ORI, P60
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Henrio L, 2016, LECT NOTES COMPUT SC, V9686, P208, DOI 10.1007/978-3-319-39519-7_13
   Henrio L, 2016, LECT NOTES COMPUT SC, V9633, P66, DOI 10.1007/978-3-662-49665-7_5
   Huang Y, 2009, IPTCOMM 09, DOI 10.1145/1595637.1595647
   JBehave North D., 2011, FRAMEWORK BEHAV DRIV
   Johnsen E.B., 2011, Lecture Notes in Computer Science, V6957, P142, DOI [10.1007/978- 3- 642-25271-6 8, DOI 10.1007/978-3-642-25271-6]
   Joshi Pallavi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P288, DOI 10.1109/ASE.2008.39
   Kofron J, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1513, DOI 10.1145/1244002.1244326
   Lavender R.G., 1996, PATTERN LANGUAGES PR, P483
   Lea D., 2000, CONCURRENT PROGRAMMI
   Lopes C.V., 1997, THESIS
   Mavridou A., 2016, 13 INT C FORM ASP CO
   Mavridou A, 2016, ELECTRON P THEOR COM, P83, DOI 10.4204/EPTCS.223.6
   Mavridou A, 2017, J LOG ALGEBR METHODS, V86, P2, DOI 10.1016/j.jlamp.2016.05.002
   Mavridou A, 2016, LECT NOTES COMPUT SC, V9539, P256, DOI 10.1007/978-3-319-28934-2_14
   Ozkaya M., 2014, P 17 INT ACM SIGS S, P129, DOI DOI 10.1145/2602458.2602463
   Pavel S, 2005, LECT NOTES COMPUT SC, V3628, P115, DOI 10.1007/11550679_9
   Seinturier L, 2006, LECT NOTES COMPUT SC, V4063, P139
   Sirjani M, 2004, FUND INFORM, V63, P385
   Solís C, 2011, EUROMICRO CONF PROC, P383, DOI 10.1109/SEAA.2011.76
   Whaley J., 2002, Software Engineering Notes, V27, P221, DOI 10.1145/566171.566212
   Williams A., 2012, C CONCURRENCY ACTION
   Zhang C, 2009, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2009.5070537
   Ziaei R, 2003, LECT NOTES COMPUT SC, V2830, P324
NR 55
TC 11
Z9 11
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1801
EP 1836
DI 10.1002/spe.2495
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500015
OA Green Published
DA 2024-07-18
ER

PT J
AU Kastens, U
   Waite, W
AF Kastens, Uwe
   Waite, William
TI Name analysis for modern languages: a general solution
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compilers; name analysis; attribute grammars; reuse; framework
AB Classical strategies for matching identifier uses with declarations cannot handle the complexities of modern languages: arbitrarily qualified superclass names, cyclic dependence among lookup operations, and contextual access constraints. We have developed a language-independent algorithm and supporting data structure that overcome these problems. A well-defined interface allows introduction of arbitrary code to enforce language-specific constraints within the basic lookup operations. This paper explains the limitations of the classical strategies, presents the concepts on which our approach is based, and showcases an implementation based on attribute grammars. We explore the major issues through a series of examples and show how one can deal with those issues in a general framework. Many of the issues are specific to a particular language, and in those cases, we explain the solutions that our general interface supports. Although attribute grammars simplify the task of incorporating the model into a compiler, the model itself is completely independent of attribute grammars. We validated our model by using an implementation to process programs in several representative languages. In particular, we mechanically compared the results produced by that implementation with those produced by the Java SE 8 compiler on complete Java programs that are in general use. Performance data obtained during this processing show that our implementation is efficient. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Kastens, Uwe] Univ Paderborn, D-33102 Paderborn, Germany.
   [Waite, William] Univ Colorado, Boulder, CO 80309 USA.
C3 University of Paderborn; University of Colorado System; University of
   Colorado Boulder
RP Waite, W (corresponding author), Dept Elect Comp & Energy Engn, 425 UCB, Boulder, CO 80309 USA.
EM william.waite@colorado.edu
RI Waite, William/HZI-2682-2023
OI Waite, William/0000-0002-0911-9353; Kastens, Uwe/0000-0003-2671-7440
CR [Anonymous], 2007, COMPILERS PRINCIPLES
   [Anonymous], 2014, The Java Language Specification, Java SE
   [Anonymous], 2013, SOFTWARE LANGUAGE EN
   Appel A.W., 2002, MODERN COMPILER IMPL, V2nd
   BACKUS JW, 1963, COMMUN ACM, V6, P1, DOI 10.1145/366193.366201
   Barrett K, 1996, ACM SIGPLAN NOTICES, V31, P69, DOI 10.1145/236338.236343
   Bobrow DG, 1988, SIGPLAN NOTICES, V23
   Cardelli L, 1989, 52 DIG SYST RES CTR
   CLEMM G, 1990, ACM T PROGR LANG SYS, V12, P1, DOI 10.1145/77606.77607
   ECMA International, 1996, 3341996 ECMA
   Ekman T, 2007, ACM SIGPLAN NOTICES, V42, P1, DOI 10.1145/1297105.1297029
   Ekman T, 2006, LECT NOTES COMPUT SC, V4143, P422
   Ekman T, 2007, SCI COMPUT PROGRAM, V69, P14, DOI 10.1016/j.scico.2007.02.003
   Gosling J., 2000, The Java Language Specification
   Grune D., 2012, MODERN COMPILER DESI
   Hedin G, 2011, LECT NOTES COMPUT SC, V6491, P166, DOI 10.1007/978-3-642-18023-1_4
   International Standards Organization, 1990, 7185 ISOIEC
   International Standards Organization, 2014, N42962014 ISOIEC
   KASTENS U, 1991, LECT NOTES COMPUT SC, V545, P16
   KASTENS U, 1991, ACTA INFORM, V28, P539, DOI 10.1007/BF01463944
   KASTENS U, 1994, ACTA INFORM, V31, P601, DOI 10.1007/BF01177548
   Kastens U, 2009, SOFTWARE PRACT EXPER, V39, P833, DOI 10.1002/spe.917
   Lampson B. W., 1977, SIGPLAN Notices, V12, P1, DOI 10.1145/954666.971189
   Magnusson E, 2007, SCI COMPUT PROGRAM, V68, P21, DOI 10.1016/j.scico.2005.06.005
   Modula Wirth N., 1977, SOFTWARE PRACTICE EX, V7, P3
   Neron P, 2015, LECT NOTES COMPUT SC, V9032, P205, DOI 10.1007/978-3-662-46669-8_9
   Odersky Martin., 2014, The Scala Language Specification
   Pemberton S., 1983, PASCAL IMPLEMENTATIO
   Persch G., 1980, SIGPLAN Notices, V15, P47, DOI 10.1145/947783.948640
   REISS SP, 1983, ACM T PROGR LANG SYS, V5, P127, DOI 10.1145/69624.69625
   Voufo Larisse., 2014, Proceedings of the 10th ACM SIGPLANWorkshop on Generic Programming, WGP '14, P59
   Winter V, 2011, J SOFTWARE ENG APPL, V4, P146
NR 32
TC 0
Z9 0
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1597
EP 1631
DI 10.1002/spe.2489
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500007
DA 2024-07-18
ER

PT J
AU Liu, WJ
   Nong, G
   Chan, WH
   Wu, Y
AF Liu, Wei Jun
   Nong, Ge
   Chan, Wai Hong
   Wu, Yi
TI Improving a lightweight LZ77 computation algorithm for running faster
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Lempel-Ziv factorization; algorithm; linear time; lightweight; data
   compression; suffix array
ID LINEAR-TIME
AB Computing the Lempel-Ziv factorization (LZ77) of a string is a key step in many applications. However, at the same time, it constitutes a bottleneck of the entire computation. The investigation of time and space efficient computation of the LZ77 has become an important topic. In this paper, we present a lightweight linear-time algorithm called LZone for computing the LZ77, which is designed by improvements on the existing linear-time space efficient LZ77 algorithm BGone for speed acceleration. For an input string T[1..n] over a constant alphabet size of O(1), LZone requires only n words of workspace in addition to the input string and the output factorization, remvoelogn bits per word. This is the same space requirement for the algorithm BGone. LZone has two versions, LZoneT and LZoneSA, corresponding to BGoneT and BGoneSA, respectively. Our experimental results show that for computing the LZ77 from an input string T, LZoneT and LZoneSA run at around 26% and 57%, respectively, faster than their counterparts in BGone. Moreover, for computing the LZ77 from the suffix array of T, the speed of LZoneSA is on average twice that of BGoneSA. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Liu, Wei Jun; Nong, Ge; Wu, Yi] Sun Yat Sen Univ, Dept Comp Sci, Guangzhou, Guangdong, Peoples R China.
   [Liu, Wei Jun] Gannan Normal Univ, Sch Phys & Elect Informat, Ganzhou, Peoples R China.
   [Nong, Ge] SYSU CMU Shunde Int Joint Res Inst, Shunde, Peoples R China.
   [Chan, Wai Hong] Hong Kong Inst Educ, Dept Math & Informat Technol, Hong Kong, Hong Kong, Peoples R China.
C3 Sun Yat Sen University; Gannan Normal University; Education University
   of Hong Kong (EdUHK)
RP Nong, G (corresponding author), Sun Yat Sen Univ, Dept Comp Sci, Guangzhou, Guangdong, Peoples R China.; Chan, WH (corresponding author), Hong Kong Inst Educ, Dept Math & Informat Technol, Hong Kong, Hong Kong, Peoples R China.
EM issng@mail.sysu.edu.cn; waihchan@ied.edu.hk
RI Chan, Wai Hong/B-5652-2009; Nong, Ge/N-3967-2015
OI Wu, Yi/0000-0002-5913-2126
FU DEGP of China; Research Grant Council of Hong Kong SAR [DEGP
   2014KTSCX007, GRF 810012]
FX DEGP of China, The Research Grant Council of Hong Kong SAR;
   contract/grant number DEGP 2014KTSCX007, GRF 810012.
CR Abel J, 2007, SOFTWARE PRACT EXPER, V37, P247, DOI 10.1002/spe.763
   Al-Hafeedh A, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379781
   BELL T, 1993, SOFTWARE PRACT EXPER, V23, P757, DOI 10.1002/spe.4380230705
   Chen G, 2007, LECT NOTES COMPUT SC, V4580, P307
   Claude Francisco., 2011, Proc. of 20th ACM CIKM, P463
   Crochemore M, 2008, INFORM PROCESS LETT, V106, P75, DOI 10.1016/j.ipl.2007.10.006
   Ferragina P, 2005, J ACM, V52, P552, DOI 10.1145/1082036.1082039
   Fraser CW, 2006, SOFTWARE PRACT EXPER, V36, P397, DOI 10.1002/spe.702
   Gagie Travis, 2012, Language and Automata Theory and Applications. Proceedings 6th International Conference, LATA 2012, P240, DOI 10.1007/978-3-642-28332-1_21
   Gagie T, 2014, LECT NOTES COMPUT SC, V8392, P731
   Goto K, 2013, SPACE EFFICIENT LINE
   Goto K, 2014, IEEE DATA COMPR CONF, P163, DOI 10.1109/DCC.2014.62
   Goto K, 2013, IEEE DATA COMPR CONF, P133, DOI 10.1109/DCC.2013.21
   Karkkainen Juha, 2013, Experimental Algorithms 12th International Symposium, SEA 2013. Proceedings, P139, DOI 10.1007/978-3-642-38527-8_14
   Kärkkäinen J, 2013, LECT NOTES COMPUT SC, V7922, P189, DOI 10.1007/978-3-642-38905-4_19
   Kärkkäinen J, 2009, LECT NOTES COMPUT SC, V5577, P181, DOI 10.1007/978-3-642-02441-2_17
   Kempa Dominik, 2013, ALENEX, P103, DOI DOI 10.1137/1.9781611972931.9
   Ko P, 2003, LECT NOTES COMPUT SC, V2676, P200
   Langiu A, 2013, J DISCRET ALGORITHMS, V20, P65, DOI 10.1016/j.jda.2013.04.001
   Nong G, 2013, ACM T INFORM SYST, V31, DOI 10.1145/2493175.2493180
   Nong G, 2011, IEEE T COMPUT, V60, P1471, DOI 10.1109/TC.2010.188
   Skibinski P, 2005, SOFTWARE PRACT EXPER, V35, P1455, DOI 10.1002/spe.678
   Skibinski P, 2008, SOFTWARE PRACT EXPER, V38, P1027, DOI 10.1002/spe.859
   Thies William, 2009, P 17 ACM INT C MULT, P331, DOI DOI 10.1145/1631272.1631319
   ZIV J, 1977, IEEE T INFORM THEORY, V23, P337, DOI 10.1109/TIT.1977.1055714
NR 25
TC 3
Z9 3
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2016
VL 46
IS 9
BP 1201
EP 1217
DI 10.1002/spe.2377
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DS8KO
UT WOS:000381032300003
DA 2024-07-18
ER

PT J
AU Sheikhalishahi, M
   Grandinetti, L
   Wallace, RM
   Vazquez-Poletti, JL
AF Sheikhalishahi, Mehdi
   Grandinetti, Lucio
   Wallace, Richard M.
   Luis Vazquez-Poletti, Jose
TI Autonomic resource contention-aware scheduling
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomic scheduling; resource contention; performance; cloud computing;
   high performance computing
AB The complexity of computing systems introduces a few issues and challenges such as poor performance and high energy consumption. In this paper, we first define and model resource contention metric for high performance computing workloads as a performance metric in scheduling algorithms and systems at the highest level of resource management stack to address the main issues in computing systems. Second, we propose a novel autonomic resource contention-aware scheduling approach architected on various layers of the resource management stack. We establish the relationship between distributed resource management layers in order to optimize resource contention metric. The simulation results confirm the novelty of our approach.Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Sheikhalishahi, Mehdi; Grandinetti, Lucio] Univ Calabria, Dept Elect Comp Sci & Syst, I-87036 Arcavacata Di Rende, CS, Italy.
   [Wallace, Richard M.; Luis Vazquez-Poletti, Jose] Univ Complutense, Dept Comp Architecture & Automat, E-28040 Madrid, Spain.
C3 University of Calabria; Complutense University of Madrid
RP Sheikhalishahi, M (corresponding author), Univ Calabria, Dept Elect Comp Sci & Syst, I-87036 Arcavacata Di Rende, CS, Italy.
EM alishahi@unical.it
RI Vazquez-Poletti, Jose Luis/A-9697-2011; Vazquez-Poletti, Jose
   Luis/P-4818-2019
OI Vazquez-Poletti, Jose Luis/0000-0002-6241-8141; Vazquez-Poletti, Jose
   Luis/0000-0002-6241-8141
CR Amazon, 2010, AM EC2 SPOT INST
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Bobroff N, 2007, 2007 10TH IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2009), VOLS 1 AND 2, P119, DOI 10.1109/INM.2007.374776
   Dhimans G, 2009, 14 IEEE ACM INT S LO
   FEDOROVA A, 2007, P 16 INT C PAR ARCH, P25, DOI DOI 10.1109/PACT.2007.40
   Feitelsons D., 2010, PARALLEL WORKLOADS A
   Hermenier F., 2009, P 2009 ACM SIGPLAN S
   Iyer R, 2009, COMPUT NETW, V53, P2873, DOI 10.1016/j.comnet.2009.04.015
   Iyer R, 2007, PERF E R SI, V35, P25
   Nathuji R, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P237
   Rackspace, 2010, RACKSP CLOUD
   Schad J, 2010, PROC VLDB ENDOW, V3, P460, DOI 10.14778/1920841.1920902
   Sheikhalishahi Mehdi, 2011, Proceedings of the 1st International Conference on Cloud Computing and Services Science. CLOSER 2011, P37
   Sheikhalishahis M, 2011, INT C PAR COMP GENT, P109
   Shmueli E, 2009, IEEE T PARALL DISTR, V20, P983, DOI 10.1109/TPDS.2008.152
   Srikantaiahs S, 2008, USENIX HOTPOWER 08
   Urbán P, 2000, IEEE IC COMP COM NET, P582, DOI 10.1109/ICCCN.2000.885548
   Verma A, 2008, ICS'08: PROCEEDINGS OF THE 2008 ACM INTERNATIONAL CONFERENCE ON SUPERCOMPUTING, P175
   VMWare, 2010, VMWARE DYN RES SCHED
   Zhuravlev S, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P129
NR 20
TC 18
Z9 18
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2015
VL 45
IS 2
BP 161
EP 175
DI 10.1002/spe.2223
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY4FJ
UT WOS:000347533400002
DA 2024-07-18
ER

PT J
AU Eynard, D
   Mazzola, L
   Dattolo, A
AF Eynard, Davide
   Mazzola, Luca
   Dattolo, Antonina
TI Exploiting tag similarities to discover synonyms and homonyms in
   folksonomies
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE folksonomies; tag clustering; tag disambiguation; tag similarity
ID RECOMMENDATIONS
AB Tag-based systems are widely available, thanks to their intrinsic advantages, such as self-organization, currency, and ease of use. Although they represent a precious source of semantic metadata, their utility is still limited. The inherent lexical ambiguities of tags strongly affect the extraction of structured knowledge and the quality of tag-based recommendation systems. In this paper, we propose a methodology for the analysis of tag-based systems, addressing tag synonymy and homonymy at the same time in a holistic approach: in more detail, we exploit a tripartite graph to reduce the problem of synonyms and homonyms; we apply a customized version of Tag Context Similarity to detect them, overcoming the limitations of current similarity metrics; finally, we propose the application of an overlapping clustering algorithm to detect contexts and homonymies, then evaluate its performances, and introduce a methodology for the interpretation of its results. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Eynard, Davide; Mazzola, Luca] Univ Svizzera Italiana, Inst Commun Technol, CH-6904 Lugano, Switzerland.
   [Dattolo, Antonina] Univ Udine, Dept Math & Comp Sci, SASWEB Res Lab, I-33100 Udine, Italy.
C3 Universita della Svizzera Italiana; University of Udine
RP Eynard, D (corresponding author), Univ Svizzera Italiana, Inst Commun Technol, Via Buffi 13, CH-6904 Lugano, Switzerland.
EM davide.eynard@usi.ch; mazzola.luca@gmail.com; antonina.dattolo@uniud.it
RI Mazzola, Luca/X-6480-2019; Mazzola, Luca/J-9234-2012; DATTOLO,
   Antonina/B-9545-2018
OI Mazzola, Luca/0000-0002-6747-1021; DATTOLO, Antonina/0000-0002-8511-524X
CR Angeletou S, 2009, LECT NOTES COMPUT SC, V5926, P276, DOI 10.1007/978-3-642-10871-6_19
   Angeletou S, 2008, LECT NOTES COMPUT SC, V5318, P889, DOI 10.1007/978-3-540-88564-1_58
   [Anonymous], ADV INTELLIGENT SOFT
   [Anonymous], 2006, COLL WEB TAGG WORKSH
   [Anonymous], P WORKSH SOC NAV COM
   [Anonymous], P INT WORKSH EM SEM
   [Anonymous], 2007, Folksonomy
   [Anonymous], J INTELLIGENT INFORM
   [Anonymous], 1968, Mathematical structures of language
   [Anonymous], P INT WORKSH AD SOC
   Brooks ChristopherH., 2006, WWW '06, P625, DOI DOI 10.1145/1135777.1135869
   Cattuto C, 2008, LECT NOTES COMPUT SC, V5318, P615, DOI 10.1007/978-3-540-88564-1_39
   Datta A, 2010, HANDBOOK OF SOCIAL NETWORK TECHNOLOGIES AND APPLICATIONS, P349, DOI 10.1007/978-1-4419-7142-5_17
   Dattolo A, 2009, INT CONF INTELL SYST, P267, DOI 10.1109/ISDA.2009.245
   Dattolo A, 2009, LECT NOTES COMPUT SC, V5535, P325, DOI 10.1007/978-3-642-02247-0_31
   Dattolo Antonina., 2011, SAC, P814, DOI DOI 10.1145/1982185.1982359
   Desrosiers C, 2011, RECOMMENDER SYSTEMS HANDBOOK, P107, DOI 10.1007/978-0-387-85820-3_4
   Felfernig A, 2011, RECOMMENDER SYSTEMS HANDBOOK, P187, DOI 10.1007/978-0-387-85820-3_6
   Gemmell Jonathan., 2009, Proceedings of the 3rd ACM conference on Recommender Systems, P45, DOI 10.1145/ 1639714.1639724
   Golder SA, 2006, J INF SCI, V32, P198, DOI 10.1177/0165551506062337
   Grahl M., 2007, Proceedings of I-KNOW, International Conference on Knowledge Management, Graz, Austria, P356
   Kroski E., 2005, The Hive Mind: Folksonomies and User-Based Tagging
   Lambiotte R, 2006, LECT NOTES COMPUT SC, V3993, P1114
   Lancichinetti A, 2009, NEW J PHYS, V11, DOI 10.1088/1367-2630/11/3/033015
   Laniado David, 2007, SEMANTIC WEB APPL PE, P192
   Markines B., 2009, P 18 INT C WORLD WID, P641
   Mika P, 2005, LECT NOTES COMPUT SC, V3729, P522, DOI 10.1007/11574620_38
   Newman MEJ, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.066133
   Pudota N, 2010, INT J INTELL SYST, V25, P1158, DOI 10.1002/int.20448
   Ricci F, 2011, RECOMMENDER SYSTEMS HANDBOOK, P1, DOI 10.1007/978-0-387-85820-3_1
   Schmitz C, 2006, STUD CLASS DATA ANAL, P261, DOI 10.1007/3-540-34416-0_28
   Shirky C., 2005, ONTOLOGY IS OVERRATE
   Specia L, 2007, LECT NOTES COMPUT SC, V4519, P624
   Tan P. N., 2016, INTRO DATA MINING
   VANDER WAL Thomas, 2005, FOLKSONOMY DEFINITIO
   Vandic D., 2011, P 2011 ACM S APPL CO, P1693
   Wetzker R., 2008, P ECAI MIN SOC DAT W, P26
   Yeung CMA, 2009, 20TH ACM CONFERENCE ON HYPERTEXT AND HYPERMEDIA (HYPERTEXT 2009), P251
NR 38
TC 7
Z9 7
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2013
VL 43
IS 12
SI SI
BP 1437
EP 1457
DI 10.1002/spe.2150
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 248JD
UT WOS:000326694500004
DA 2024-07-18
ER

PT J
AU Cañete, E
   Díaz, M
   Rubio, B
AF Canete, Eduardo
   Diaz, Manuel
   Rubio, Bartolome
TI A wireless sensor network framework based on light databases
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE wireless sensor network; databases; design; high-level programming;
   framework
ID SERVICE; SYSTEM
AB The development of wireless sensor and actor network applications is made difficult by the fact that developers have to face up to a set of resource-constrained devices which have to work wirelessly and distributely. In this work, we propose a framework to create and integrate light databases within nodes that need to manage and process data. The databases will be designed by means of simple entity-relationship models from which the code needed to manage the database will be generated. Basically, this code will be composed of data structures and the algorithms in charge of managing them. This architecture will help developers avoid data redundancy to better manage the memory of the nodes and to save time in developing applications. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Canete, Eduardo; Diaz, Manuel; Rubio, Bartolome] Univ Malaga, Dpto Lenguajes & Ciencias Comp, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Cañete, E (corresponding author), Univ Malaga, ETSI Informat, Bulevar Louis Pasteur,35 Campus Teatinos Lab 3-3-, E-29071 Malaga, Spain.
EM ecc@lcc.uma.es
RI Díaz, Manuel/AAM-6225-2021; Cañete, Eduardo/L-1799-2014; Cañete,
   Eduardo/G-3553-2018; Rubio, Bartolome/L-2400-2014
OI Díaz, Manuel/0000-0002-0625-2730; Cañete, Eduardo/0000-0002-0384-1660;
   Rubio, Bartolome/0000-0002-8279-4224
FU European Project SEEDS [FP7-285250]; Spanish Projects [P07-TIC-03184,
   TIN2008-03107, TIN2011-23795, TIC-03085]
FX This work was partially supported by European Project SEEDS FP7-285250
   and Spanish Projects P07-TIC-03184, TIN2008-03107, TIN2011-23795 and
   TIC-03085.
CR Akyildiz IF., 2004, AD HOC NETW, V2, P351, DOI [10.1016/j.adhoc.2004.04.003, DOI 10.1016/J.ADHOC.2004.04.003]
   Amato G, 2010, SOFTWARE PRACT EXPER, V40, P431, DOI 10.1002/spe.965
   [Anonymous], 2006, MidSens '06: Proceedings of the international workshop on Middleware for sensor networks, pag
   Barbarán J, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE SERVICES, P196
   Cañete E, 2011, AD HOC NETW, V9, P430, DOI 10.1016/j.adhoc.2010.08.022
   Curino C, 2005, THIRD IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P61, DOI 10.1109/PERCOM.2005.48
   Dunkels A, 2004, CONF LOCAL COMPUT NE, P455
   Eriksson J, 2009, LECT NOTES COMPUT SC, V5432, P312
   Gehrke J, 2006, IEEE INTERNET COMPUT, V10, P16, DOI 10.1109/MIC.2006.31
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   Gummadi R, 2005, MACROPROGRAMMING WIR
   Herbert J, 2006, MOBILE AGENT ARCHITE
   Kushwaha M, 2007, P 2 INT C COMM SYST, P941
   Liu J, 2008, IEEE NETWORK, V22, P44, DOI 10.1109/MNET.2008.4579770
   Liu KB, 2008, MOBILE NETW APPL, V13, P212, DOI 10.1007/s11036-008-0052-6
   Madden SR, 2005, ACM T DATABASE SYST, V30, P122, DOI 10.1145/1061318.1061322
   McCann D, 2009, LECT NOTES COMPUT SC, V5741, P38, DOI 10.1007/978-3-642-04471-7_4
   Meliou A, 2008, UCBEECS2008137
   Newton R, 2007, PROCEEDINGS OF THE SIXTH INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING IN SENSOR NETWORKS, P489, DOI 10.1109/IPSN.2007.4379709
   Othman Nuru Yakub, 2007, 2007 IEEE Symposium on Computers and Communications, P941, DOI 10.1109/ISCC.2007.4381506
   Priyantha NB, 2008, SENSYS'08: PROCEEDINGS OF THE 6TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P253
   Rezgui A, 2007, COMPUT COMMUN, V30, P2627, DOI 10.1016/j.comcom.2007.05.036
   Rubio B., 2007, Systems and Networks Communications, P36
   Shen CC, 2001, IEEE PERS COMMUN, V8, P52, DOI 10.1109/98.944004
   Wang MM, 2008, J COMPUT SCI TECH-CH, V23, P305, DOI 10.1007/s11390-008-9135-x
   Wenning BL, 2010, TELECOMMUN SYST, V43, P3, DOI 10.1007/s11235-009-9191-8
   Yao Y, 2002, SIGMOD REC, V31, P9, DOI 10.1145/601858.601861
   Zhu XJ, 2009, IEEE T KNOWL DATA EN, V21, P1722, DOI 10.1109/TKDE.2009.38
NR 28
TC 0
Z9 0
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2013
VL 43
IS 5
BP 501
EP 523
DI 10.1002/spe.2119
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 127HW
UT WOS:000317690100002
DA 2024-07-18
ER

PT J
AU Mariani, L
   Pastore, F
AF Mariani, L.
   Pastore, F.
TI MASH: tool integration made easy
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software engineering; tool integration; plug-in architecture; visual
   languages; workflow; MASH
ID SYSTEMS
AB Integrating tools implemented as plug-ins is a complex and time-consuming activity that requires good programming skills and a deep understanding of the underlying plug-in architecture for successful completion. Even when tools are implemented as plug-ins for a same integrated development environment (IDE), users frequently prefer to manually perform the same inefficient operations every time they use the tools rather than implementing automated tool integration.In our vision, IDE users must be able to flexibly execute plug-ins and easily integrate their results by designing workflows that can be persisted, automatically executed, and reused in other workflows.This paper therefore presents MASH, a framework that extends IDEs with task-based plug-ins (TB-plug-ins) and workflows. A TB-plug-in is a plug-in that exposes its functionalities as executable tasks in a workflow. TB-plug-in workflows are processes that automatically execute multiple tools and integrate their results. IDE users can turn regular plug-ins into TB-plug-ins by writing simple scripts or using the GUI capturing feature that MASH offers.We validated our idea with two case studies examining the design of two data-driven analyses as tool integration. We discovered that workflows can be easily designed by knowing little about the IDE or plug-ins API, saving significant effort otherwise devoted to implementing additional plug-ins and glue code, and they produce analyses that can be quickly modified and reused. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Mariani, L.; Pastore, F.] Univ Milano Bicocca, I-20126 Milan, Italy.
C3 University of Milano-Bicocca
RP Mariani, L (corresponding author), Univ Milano Bicocca, Dept Informat Syst & Commun, Viale Sarca 336, I-20126 Milan, Italy.
EM mariani@disco.unimib.it
RI Pastore, Fabrizio/ABY-9262-2022
OI Pastore, Fabrizio/0000-0003-3541-3641; Mariani,
   Leonardo/0000-0001-9527-7042
FU European Community [FP7-ICT-2009-5, PINCETTE 257647]
FX This work is partially supported by the European Community under the
   call FP7-ICT-2009-5 - project PINCETTE 257647.
CR [Anonymous], 2012, SPRING FRAMEWORK
   [Anonymous], 2011, Apple
   [Anonymous], 2011, ECLIPSE TEST PERFORM
   [Anonymous], 2011, ECLIPSE EQUINOX
   [Anonymous], 2011, YAHOO PIPES
   [Anonymous], 2011, MOZILLA DEV NETWORK
   Automate 8, 2011, AUTOMATE 8
   Automator, 2011, AUTOMATOR
   Babenko A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P237
   Biornstad B, 2009, SERV OR COMP ICSOC 2
   Bolour A, 2012, COMPUTING B NOTES EC
   Bovet D.P., 2002, UNDERSTANDING LINUX, V2nd
   Cao F, 2005, ELECTRON NOTES THEOR, V114, P119, DOI 10.1016/j.entcs.2004.02.070
   Cctvnet, 2011, CCTVNET
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gregersen AR, 2007, P 2007 OOPSLA WORKSH, P41, DOI DOI 10.1145/1328279.1328288
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Lin C, 2009, IEEE T SERV COMPUT, V2, P79, DOI 10.1109/TSC.2009.4
   Liu J, 2006, P 9 IEEE INT S OBJ C
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Mariani L, 2011, 1 INT WORKSH DEV TOO, P1
   McDaniel R.G., 1999, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, CHI '99, P442
   Meyer B, 2003, PROC INT CONF SOFTW, P660, DOI 10.1109/ICSE.2003.1201252
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pautasso C, 2005, J VISUAL LANG COMPUT, V16, P119, DOI 10.1016/j.jvlc.2004.08.004
   Powell Stephen G., 2004, The art of modeling with spreadsheets: Management science, spreadsheet engineering, and modeling craft
   Progmate, 2011, PROGMATE
   Scaffidi C, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P207, DOI 10.1109/VLHCC.2005.34
   Tavares AL, 2008, ACM SIGSOFT SOFTWARE, V33, P8
   Vaarandi R, 2003, PROCEEDINGS OF THE 3RD IEEE WORKSHOP ON IP OPERATIONS & MANAGEMENT (IPOM2003), P119
   Wolber D., 2002, IUI 02. 2002 International Conference on Intelligent User Interfaces, P228
   Wolfinger R, 2010, P 9 INT C GEN PROGRD, P93
NR 36
TC 4
Z9 4
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2013
VL 43
IS 4
SI SI
BP 419
EP 433
DI 10.1002/spe.2129
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 112UL
UT WOS:000316619200004
OA Green Published
DA 2024-07-18
ER

PT J
AU Kastens, U
   Waite, WM
AF Kastens, Uwe
   Waite, William M.
TI Reusable specification modules for type analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compilers; type analysis; attribute grammars; reuse
ID SYSTEM
AB Type analysis can be characterized by a language-independent collection of standard computational roles such as 'typed identifier use' (e.g. a variable name appearing in an expression) and 'dyadic expression' (e.g. addition of two values). A type analyzer for a specific language is then defined by stating which language construct(s) play each role. The computational roles provide a framework for understanding the general process and a vocabulary for applying that understanding to the solution of particular problems. We have captured this knowledge in attribute grammar modules that are carefully designed to be combinable and adaptable, exporting language-independent roles that define the general type analysis problem. From this collection, the compiler designer instantiates the appropriate modules and identifies the relevant source-language constructs; an attribute grammar processor then weaves the necessary computations into the compiler's semantic analyzer. Our attribute grammar modules provide a precise definition of the actions constituting the various roles and the dependences among them. They can therefore also be used to describe the type analysis process to students, or to specify a hand-coded semantic analyzer. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Waite, William M.] Univ Colorado, Boulder, CO 80309 USA.
   [Kastens, Uwe] Univ Paderborn, D-33102 Paderborn, Germany.
C3 University of Colorado System; University of Colorado Boulder;
   University of Paderborn
RP Waite, WM (corresponding author), Univ Colorado, Boulder, CO 80309 USA.
EM william.waite@colorado.edu
RI Waite, William/HZI-2682-2023
OI Waite, William/0000-0002-0911-9353
CR Aho AV., 1974, DESIGN ANAL COMPUTER
   [Anonymous], 1999, 9899 ISOIEC
   [Anonymous], 1991, Commentary on Standard ML
   [Anonymous], 1971, Math. Syst. Theory, DOI DOI 10.1007/BF01702865
   [Anonymous], 1997, The Definition of Standard ML
   AVGUSTINOV P, 2008, AOSD 08 P 7 INT C AS, P25
   BACKUS JW, 1963, COMMUN ACM, V6, P1, DOI 10.1145/366193.366201
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   Cardelli L, 1989, 52 DIG SYST RES CTR
   Ekman T, 2007, SCI COMPUT PROGRAM, V69, P14, DOI 10.1016/j.scico.2007.02.003
   Elrad T, 2001, COMMUN ACM, V44, P28
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gosling J., 2005, Java Language Specification, Vthird
   Hedin G., 2000, Informatica, V24, P301
   *ISO, 1998, 14882 ISOIEC
   *ISO IEC, 2006, 86521995E ISOIEC
   KASTENS U, 1991, LECT NOTES COMPUT SC, V545, P16
   KASTENS U, 1994, ACTA INFORM, V31, P601, DOI 10.1007/BF01177548
   KASTENS U, 2007, GENERATING SOFTWARE
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Knuth D. E., 1968, Mathematical Systems Theory, V2, P127, DOI 10.1007/BF01692511
   Koster C. H. A., 1969, ALGOL Bulletin, P86
   KRAL J, 1973, ALGOL B, V35, P34
   Lieberherr K, 2004, ACM T PROGR LANG SYS, V26, P370, DOI 10.1145/973097.973102
   Magnusson E, 2007, SCI COMPUT PROGRAM, V68, P21, DOI 10.1016/j.scico.2005.06.005
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   PAAKKI J, 1995, ACM COMPUT SURV, V27, P196, DOI 10.1145/210376.197409
   Persch G., 1980, SIGPLAN Notices, V15, P47, DOI 10.1145/947783.948640
   Rebernak D, 2006, ELECTRON NOTES THEOR, V164, P37, DOI 10.1016/j.entcs.2006.10.003
   Saraiva J., 1999, P 2 WORKSHOP ATTRIBU, P185
   Steimann F, 2000, DATA KNOWL ENG, V35, P83, DOI 10.1016/S0169-023X(00)00023-9
   Strachey Christopher, 1967, Lecture notes for International Summer School in Computer Programming
   STROUSTRUP B, 1989, COMPUT SYST, V2, P191
   Stroustrup B., 1994, The Design and Evolution of C++
   VANWIJNGAARDEN A, 1969, NUMER MATH, V14, P79, DOI DOI 10.1007/BF02163002
   WAITE WM, 1984, COMPILER CONSTRUCTIO
NR 36
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN 25
PY 2009
VL 39
IS 9
BP 833
EP 864
DI 10.1002/spe.917
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 459EK
UT WOS:000267083300002
DA 2024-07-18
ER

PT J
AU Demko, AB
   Pizzi, NJ
AF Demko, Aleksander B.
   Pizzi, Nick J.
TI Scopira: an open source C++ framework for biomedical data analysis
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data analysis; Visualization; software engineering; application
   development framework; distributed computing
AB In many biomedical research laboratories, data analysis and visualization algorithms are typical prototypes using tin interpreted programming language. If performance becomes an issue, they are ported to C and integrated with interpreted systems, not fully utilizing object-oriented software development. This paper presents an overview of Scopira, an open source C++ framework suitable for biomedical data analysis and visualization. Scopira provides high-performance end-to-end application development features, in the form of an extensible C++ library. This library provides general programming utilities, numerical matrices and algorithms, parallelization facilities, and graphical user interface elements. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Demko, Aleksander B.; Pizzi, Nick J.] Natl Res Council Canada, Inst Biodiagnost, Winnipeg, MB R3B 1Y6, Canada.
   [Demko, Aleksander B.; Pizzi, Nick J.] Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
C3 National Research Council Canada; University of Manitoba
RP Pizzi, NJ (corresponding author), Natl Res Council Canada, Inst Biodiagnost, 435 Ellice Ave, Winnipeg, MB R3B 1Y6, Canada.
EM pizzi@nrc-cnrc.gc.ca
CR [Anonymous], The message passing interface MPI standard
   BEZDEK JC, 1984, COMPUT GEOSCI, V10, P191, DOI 10.1016/0098-3004(84)90020-7
   Bowman K.P., 2006, INTRO PROGRAMMING ID
   Brezinski ME, 1997, J SURG RES, V71, P32, DOI 10.1006/jsre.1996.4993
   Dalheimer M.K., 2002, PROGRAMMING QT, VSecond
   Demko AB, 2002, IEEE CCEC 2002: CANADIAN CONFERENCE ON ELECTRCIAL AND COMPUTER ENGINEERING, VOLS 1-3, CONFERENCE PROCEEDINGS, P1093, DOI 10.1109/CCECE.2002.1013099
   Geist A., 1994, PVM: Parallel Virtual Machine
   Hill FS., 2006, Computer Graphics Using OpenGL, V3
   HUANG D, 1991, SCIENCE, V254, P1178, DOI 10.1126/science.1957169
   Huettel SA., 2004, Functional magnetic resonance imaging
   Jones R.M., 2000, INTRO MFC PROGRAMMIN
   *OPENGL, 2008, IND FDN HIGH PERF GR
   Pizzi NJ, 2005, NEURAL NETW WORLD, V15, P257
   Pizzi NJ, 2001, ARTIF INTELL MED, V21, P263, DOI 10.1016/S0933-3657(00)00095-6
   Schroeder W., 2006, VISUALIZATION TOOLKI, V4th
   Sigmon K, 2004, MATLAB PRIMER
   Smart J, 2005, Cross-platform GUI programming with wxWidgets
   Snir M., 1998, MPI-The Complete Reference
   *VTK, 2008, VTK VIS TOLLK
   2008, VISUAL INFORM SOLUTI
   2008, MFC FEATURE PAEK VIS
NR 21
TC 5
Z9 6
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2009
VL 39
IS 6
BP 641
EP 660
DI 10.1002/spe.915
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 429SR
UT WOS:000264940900004
DA 2024-07-18
ER

PT J
AU Alvarez-Sabucedo, LM
   Anido-Rifón, LE
   Santos-Gago, JM
AF Alvarez-Sabucedo, L. M.
   Anido-Rifon, L. E.
   Santos-Gago, J. M.
TI Reusing web contents: a DOM approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web contents; HTTP; DOM tree
AB This paper addresses the development of new web sites by reusing already existing contents from external sources. Unlike common links, which retrieve the whole web resource, we propose an approach where partial retrieval is possible. In our case, the unit for reuse is a node in a DOM tree. A suitable proposal far extracting just one single node is presented. This solution permits the partial reuse of external and heterogeneous web contents with no need for client (browser) modifications and with only minor changes for web servers. Copyright (c) 2008 John Wiley & Sons, Ltd.
C1 [Alvarez-Sabucedo, L. M.; Anido-Rifon, L. E.; Santos-Gago, J. M.] Univ Vigo, Dept Ingn, ETS, E-36310 Vigo, Spain.
C3 Universidade de Vigo
RP Alvarez-Sabucedo, LM (corresponding author), ETSE Telecomunicac, Campus Univ S-N, E-36310 Vigo, Spain.
EM lsabucedo@det.uvigo.es
RI Gago, Juan Manuel Santos/ABG-9718-2020; Anido-Rifón, Luis/ABI-6838-2020;
   Anido-Rifón, Luis/D-4597-2018
OI Gago, Juan Manuel Santos/0000-0002-2930-4249; Anido-Rifón,
   Luis/0000-0003-2780-2727; Anido-Rifón, Luis/0000-0003-2780-2727
CR [Anonymous], 2008, Scalable vector graphics
   *AT, 2008, AT ALL
   BOS B, 2008, STARTING HTML CSS
   CONWAY N, 2008, TORNADO HTTP SERVER
   *FREE SOTW FDN INC, 2008, GNU GEN PUBL LIC
   Garrett J.J., 2005, AJAX NEW APPROACH WE
   *GNOM, 2008, GNOM DOM ENG
   *INT DOI FDN, 2008, DIG OBJ ID SYST
   LIU Q, 2003, AUSTR INF SEC WORKSH, P49
   *MOZ, 2008, GECK DOM REF
   *NETW WORK GROUP, 2008, 1738 RFC NEWT WROK G
   *NETW WORK GROUP, 2008, URN SYNT
   *NETW WORK GROUP, 2008, HYP TRANSF PROT HTTP
   *NETW WORK GROUP, 2008, UN RES ID UR GEN SYN
   *ONL COMP LIB CTR, 2008, PERS
   *OR, 2008, OR XML DEV KIT
   PHP, 2008, HYP PREPR
   *RSS DEV WORK GROU, 2008, EXT MARK LANG
   *RSS DEV WORK GROU, 2008, RDF SUMM SIT
   RUTHERFOORD RH, 2001, J COMPUTING SCI COLL, V17, P261
   *W3C, 2008, XML TTPREQ OBJ
   *W3C, 2008, CASC STYL SHEETS LEV
   *W3C, 2008, HTML TECHN WEB CONT
   *W3C, 2008, XML PATH LANG
   W3C, 2008, W3C MATH HOM
   *W3C, 2008, DOC OBJ MOD
   *WERK CO, 2008, JAX UN JAV XPATH ENG
   2008, NET FRAMEWORK
   2008, XHTML 1 0
   2008, KHTML LIB API DOCUME
   2008, XERCES JAVA PARSER
   2008, DOM XML PARSER LIB P
   2008, CRIMSON
   2008, JAVASERVER PAGES TEC
   2008, CGI COMMON GATEWAY I
   2008, 25 NEW WAYS USE RSS
   2008, ACTIVE SERVER PAGES
   2008, COMPOUND DOCUMENT FO
   2008, XMP CC WIKI
NR 39
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR 10
PY 2009
VL 39
IS 3
BP 299
EP 314
DI 10.1002/spe.901
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 412EF
UT WOS:000263705700004
DA 2024-07-18
ER

PT J
AU Venugopal, S
   Nadiminti, K
   Gibbins, H
   Buyya, R
AF Venugopal, Srikumar
   Nadiminti, Krishna
   Gibbins, Hussein
   Buyya, Rajkumar
TI Designing a resource broker for heterogeneous grids
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE grid computing; software design; resource broker; extensibility;
   heterogeneous systems
ID SYSTEMS; SERVICE
AB Grids provide uniform access to aggregations of heterogeneous resources and services such as computers, networks and storage owned by multiple organizations. However, such a dynamic environment poses many challenges for application composition and deployment. In this paper, we present the design of the Gridbus Grid resource broker that allows users to create applications and specify different objectives through different interfaces without having to deal with the complexity of Grid infrastructure. We present the unique requirements that motivated our design and discuss how these provide flexibility in extending the functionality of the broker to support different low-level middlewares and user interfaces. We evaluate the broker with different job profiles and Grid middleware and conclude with the lessons learnt from our development experience. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Venugopal, Srikumar; Nadiminti, Krishna; Gibbins, Hussein; Buyya, Rajkumar] Univ Melbourne, Grid Comp & Distributed Syst Lab, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Buyya, R (corresponding author), Univ Melbourne, Grid Comp & Distributed Syst Lab, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
EM raj@csse.unimelb.edu.au
RI Venugopal, Srikumar/K-6399-2012; Buyya, Rajkumar/C-3424-2009; Venugopal,
   Srikumar/S-5164-2019
OI Venugopal, Srikumar/0000-0001-8320-724X; 
CR ABRAMSON D, 2000, P 4 INT C ALG ARCH P
   ABRAMSON D, 1995, P 4 IEEE INT S HIGH
   ALLEN G, 2000, P 9 INT S HIGH PERF
   Anjomshoaa A., 2005, Job submission description language (jsdl) specification
   [Anonymous], 2000, P 2000 ACM IEEE C SU
   [Anonymous], P 1 INT S CLUST COMP
   [Anonymous], P INT PAR DISTR PROC
   AYYUB S, 2007, P 7 INT S CLUST COMP
   Baker M, 2002, SOFTWARE PRACT EXPER, V32, P1437, DOI 10.1002/spe.488
   BARMOUTA A, 2003, P WORKSH INT COMP E
   Bayucan A., 1999, Portable Batch System: External reference specification
   Berman F, 2001, INT J HIGH PERFORM C, V15, P327, DOI 10.1177/109434200101500401
   Berman F., 1997, P 8 NEC RES S BERL G
   Björkander M, 2003, IEEE SOFTWARE, V20, P57, DOI 10.1109/MS.2003.1207456
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1507, DOI 10.1002/cpe.690
   BUYYA R, 2000, P 4 INT C HIGH PERF
   Buyya R, 2000, P 2 WORKSH ACT MIDDL
   CASANOVA H, 2000, P 9 HET COMP SYST WO
   CASANOVA H, 1996, P 1996 ACM IEEE C SU
   CHAPIN S, 1999, LECT NOTES COMPUTER, V1659
   Czajkowski K., 1998, LECT NOTES COMPUTER, V1459
   CZAJKOWSKI K, 1999, P 8 IEEE INT S HIGH
   CZAJKOWSKI K., 2001, P 10 IEEE INT S HIGH
   DEASSUNCAO D, 2005, LECT NOTES COMPUTER
   Dumitrescu C., 2005, P 2005 ACM IEEE C SU
   Eriksson H., 2000, BUSINESS MODELING UM
   ERWIN DW, 2001, P 7 INT EUR PAR C PA
   Foster I, 2005, P IEEE, V93, P604, DOI 10.1109/JPROC.2004.842766
   Foster I, 2001, INT J HIGH PERFORM C, V15, P200, DOI 10.1177/109434200101500302
   Foster I, 1997, INT J SUPERCOMPUT AP, V11, P115, DOI 10.1177/109434209701100205
   Foster I., 1999, GRID BLUEPRINT FUTUR
   Frey J., 2002, Cluster Computing, V5, P237, DOI 10.1023/A:1015617019423
   Gibbins H, 2005, P 3 APAC C EXH ADV C
   Harold Soh, 2005, P 13 INT C ADV COMP
   Huedo E, 2004, SOFTWARE PRACT EXPER, V34, P631, DOI 10.1002/spe.584
   Hughes B., 2004, P 5 IEEE ACM INT WOR
   IN J, 2003, 200317 GRIPHYN
   KOLBE S, 2005, P 1 IEEE INT C E SCI
   KOSAR T, 2004, P 24 INT C DISTR COM
   Kramer D., 2004, P 13 IEEE INT S HIGH
   LAMANNA M, 2004, P C COMP HIGH EN PHY
   Luther A, 2006, WILEY SER PARA DIST, P403, DOI 10.1002/0471732710.ch21
   Mutka M., 1988, P 8 INT C DISTR COMP
   Nakada H, 1999, FUTURE GENER COMP SY, V15, P649, DOI 10.1016/S0167-739X(99)00016-3
   Raman Rajesh., 1998, P 7 IEEE INT S HIGH
   Seidel E, 2002, FUTURE GENER COMP SY, V18, P1143, DOI 10.1016/S0167-739X(02)00091-2
   Thain D., 2001, P 10 IEEE S HIGH PER
   VENUGOPAL S, 2005, LECT NOTES COMPUTER, V3719
   Venugopal S, 2006, CONCURR COMP-PRACT E, V18, P685, DOI 10.1002/cpe.974
   VONLASZEWSKI G, 2001, PRACTICE EXPERIENCE, V13, P643
   VRAALSEN F, 2001, LECT NOTES COMPUTER, V2242
   Wolski R, 1999, FUTURE GENER COMP SY, V15, P757, DOI 10.1016/S0167-739X(99)00025-4
   YANG Y, 2003, P 17 INT S PAR DISTR
   YU J, 2004, P 5 IEEE ACM INT WOR
   Yu J, 2006, J SUPERCOMPUT, V36, P17, DOI 10.1007/s11227-006-3073-6
NR 55
TC 16
Z9 18
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2008
VL 38
IS 8
BP 793
EP 825
DI 10.1002/spe.849
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 321YA
UT WOS:000257341200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Favero, EL
AF Favero, E. L.
TI The simple and powerful yfx operator precedence parser
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic operator; operator precedence; Prolog parser; attribute grammar
AB Dynamic operator declarations were introduced in the first Prolog system in the early 1970s. Today several other logical and functional languages adopt the Prolog style of dynamic operators. Despite this widespread use, there are no guidelines to assist the development of dynamic operator parsers. This paper presents an in-depth study of the built-in classical dynamic operator parser in Prolog systems. It is a powerful operator precedence parser covering pre/in/postfix operators; it is table-driven, allowing operators to be redefined at run-time; it is encoded in a simple, small and fast code; and, finally, it is widely used as a standard parser by the logic programming community. In a stepwise refinement approach (from specification to implementation and evaluation), this paper presents a detailed analysis of this parser. As an additional contribution, it is also shown how to encode the parser as a plug-in component in procedural languages. (C) 2007 John Wiley & Sons, Ltd.
RP Favero, EL (corresponding author), UFPA, Rua Augusto Correa 01, BR-66075110 Belem, Para, Brazil.
EM favero@ufpa.br
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   AITKACI H, 1989, TA INFORMATIONS, V30, P37
   [Anonymous], 1996, Prolog-the Standard: Reference Manual
   BOSSCHERE K, 1996, SOFTWARE PRACTICE EX, V26, P763
   BOWEN DL, 1982, DEC SYSTEM 10 PROLOG
   COLMERAUER A., 1993, P 2 HIST PROGR LANG, P37
   Levine J.R., 1992, LEX YACC
   O'Keefe R.A., 1990, The Craft of Prolog
   POST K, 1993, P 1993 ILPS C VANC C, P456
NR 9
TC 1
Z9 1
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2007
VL 37
IS 14
BP 1451
EP 1474
DI 10.1002/spe.811
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 228JA
UT WOS:000250725000001
DA 2024-07-18
ER

PT J
AU Wainer, G
AF Wainer, Gabriel
TI Developing a software toolkit for urban traffic modeling
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE traffic simulation; DEVS models; cellular models; cell-DEVS models;
   modeling methodologies; simulation support systems; environments
ID CELLULAR-AUTOMATA; DEVS MODELS; SIMULATION; FLOW
AB ATLAS is a modeling language that permits a static view of a city section to be defined for simulating traffic in closed areas. We propose a methodology that is focused on the user while being able to improve the software development activities. The models are formally specified, avoiding a high number of errors in the application, thus reducing the problem solving time. Streets are characterized by their traffic direction, number of lanes, etc. Once the urban section is outlined, the traffic flow is automatically set up. Specialized behavior is included to model traffic lights, trucks, traffic signs, railways, etc. The basic idea is to provide a mapping into DEVS and Cell-DEVS models that can be easily executed with a simulation tool. As the modelers can focus on the problem to solve, development times for the simulators can be dramatically reduced. A front-end system allows the user to draw city sections (and then parse the drawing to create a valid ATLAS file), and an output subsystem permitting cars to be shown with realistic 3D graphics. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
C3 Carleton University
RP Wainer, G (corresponding author), Carleton Univ, Dept Syst & Comp Engn, 4456 Mackenzie Bldg,1125 Colonel Dr, Ottawa, ON K1S 5B6, Canada.
EM gwainer@sce.carleton.ca
RI Wainer, Gabriel A/A-2797-2008
OI Wainer, Gabriel A/0000-0003-3366-9184
CR AMES AL, 1996, VRML 2 0 SOURCEBOOK
   [Anonymous], P TRAFF GRAN FLOW
   [Anonymous], LAUR991658 LOS AL NA
   [Anonymous], 1998, Cellular Automata Modeling of Physical Systems
   BALMER B, 2004, P AUT AG MULT AG SYS
   BARCELO J, 1998, P 10 SCS EUR SIM S
   BUMBLE M, 2000, P 33 ANN SIM S
   CAMERON, 1995, P IEEE SUP 95
   CAMPARI E, 2004, LECT NOTES COMPUTER, V3305
   CHEN O, 1998, GAME THEORETIC FORMU
   Chi SD, 1997, T SOC COMPUT SIMUL I, V14, P211
   Chopard B, 1996, J PHYS A-MATH GEN, V29, P2325, DOI 10.1088/0305-4470/29/10/012
   Chopard B., 1995, P 3 CM US M PARM IT
   DAVIDSON A, 2000, P AI SIM PLANN HIGH
   DAVIDSON A, 2006, SIMULAT PRACT THEORY, V14, P317
   Davidson A., 2000, P 33 ANN SIM S
   DIAZ A, 2001, P 34 ANN SIM S SEATT
   DUPUIS A, 2001, VIRTUAL SHARED MEMOR, P89
   KIM TG, 2001, DISCRETE EVENT MODEL
   KOSONEN I, 1990, IEE C PUBLICATION, V320
   Labiche Y., 2005, P 1 OP INT C MOD SIM
   Lee JK, 2005, SIMUL-T SOC MOD SIM, V81, P153, DOI 10.1177/0037549705052234
   Li XG, 2006, PHYSICA A, V367, P479, DOI 10.1016/j.physa.2005.11.016
   LOTARTARO M, 2001, P 2001 WINT SIM C
   NAGEL K, 2002, P 5 INT C CELL AUT R, V2493
   Nagel K., 1998, P TRANSP RES BOARD 7
   Nutaro N, 2004, J DEFENSE MODEL SIMU, P19, DOI DOI 10.1177/154851290400100102
   Sadoun B, 2003, SIMUL-T SOC MOD SIM, V79, P243, DOI 10.1177/0037549703038878
   Sahraoui A, 2005, SIMUL-T SOC MOD SIM, V81, P353, DOI 10.1177/0037549705052771
   SCHMIDT M, 2000, P AI SIM PLANN HIGH
   Simon PM, 1998, PHYS REV E, V57, P2441, DOI 10.1103/PhysRevE.57.2441
   Tolba C, 2005, SIMUL MODEL PRACT TH, V13, P407, DOI 10.1016/j.simpat.2005.01.001
   Treiber M, 2000, PHYS REV E, V62, P1805, DOI 10.1103/PhysRevE.62.1805
   UNSAL C, 1997, T SCS, V14
   Wagner P, 1997, PHYSICA A, V234, P687, DOI 10.1016/S0378-4371(96)00308-1
   Wainer G, 2002, SOFTWARE PRACT EXPER, V32, P1261, DOI 10.1002/spe.482
   Wainer G., 2004, P SCS 1 MED MULT MOD
   Wainer G, 2002, P SISO SPRING INT WO
   Wainer GA, 2002, DISCRETE EVENT DYN S, V12, P135, DOI 10.1023/A:1014536803451
   Wainer GA, 2001, SIMULATION, V76, P22, DOI 10.1177/003754970107600102
   Wolfram S., 2002, A new kind of science
   ZAMORA RR, 2004, LECT NOTES COMPUTER, V3305
   Zeigler B.P., 2000, THEORY MODELING SIMU, Vsecond
   ZEIGLER BP, 2003, P 9 ANN M S WORKSH I
   ZIEGLER B, 1997, IEEE COMP SCI ENG, V4
NR 45
TC 13
Z9 14
U1 0
U2 6
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2007
VL 37
IS 13
BP 1377
EP 1404
DI 10.1002/spe.809
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 226SA
UT WOS:000250607600002
OA Bronze
DA 2024-07-18
ER

PT J
AU Luo, G
   Chen, T
   Yu, H
AF Luo, Gang
   Chen, Tong
   Yu, Hao
TI Toward a progress indicator for program compilation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE progress indicator; program compilation; tool
AB For user-friendliness purposes, many modern software systems provide progress indicators for long-running tasks. These progress indicators continuously estimate the percentage of the task that has been completed and when the task will finish. However, none of the existing program compilation tools provide a non-trivial progress indicator, although it often takes minutes or hours to build a large program. In this paper, we investigate the problem of supporting such progress indicators. We first discuss the goals and challenges inherent in this problem. Then we present a set of techniques that are sufficient for implementing a simple yet useful progress indicator for program compilation. Finally, we report on an initial implementation of these techniques in GNU Make. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 IBM Corp, TJ Watson Res Ctr, Hawthorne, NY 10532 USA.
C3 International Business Machines (IBM)
RP Luo, G (corresponding author), IBM Corp, TJ Watson Res Ctr, 19 Skyline Dr, Hawthorne, NY 10532 USA.
EM luog@us.ibm.com
RI Li, Lei/JPE-6543-2023
CR [Anonymous], 2001, Mathematical Statistics: Basic Ideas and Selected Topics
   [Anonymous], 2002, DATABASE MANAGEMENT
   [Anonymous], PROCEEDINGS OF THE 1
   BERQUE DA, 1992, DIAMACS SERIES DISCR, V15, P153
   BRAUN JL, 1998, THESIS U ILLINOIS UR
   CHAUDHURI S, 2004, P ACM SIGMOD, P803
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   FLAJOLET P, 1987, MATH SYST THEORY, V19, P301
   HICKEY T, 1988, J ACM, V35, P185, DOI 10.1145/42267.42275
   Ilyas IhabF., 2003, PROC ACM SIGMOD INT, P373
   KVITKA C, 2004, TAPPING GRID
   LANDAY J, 2004, LECT NOTES USER INTE
   LOHMAN G, 2005, COMMUNICATION
   Luo G., 2004, P 2004 ACM SIGMOD PO, P791
   Luo G, 2006, LECT NOTES COMPUT SC, V3896, P921
   Myers Brad A., 1985, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. CHI'85, P11, DOI [DOI 10.1145/317456.317459, 10.1145/1165385.317459, 10.1145/317456.317459]
   SARKAR V, 1989, P ACM SIGPLAN 89 C P, P298
   SHAW WH, 1989, IEEE T SOFTWARE ENG, V15, P543, DOI 10.1109/32.24703
   WEGBREIT B, 1975, COMMUN ACM, V18, P528, DOI 10.1145/361002.361016
NR 19
TC 6
Z9 7
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2007
VL 37
IS 9
BP 909
EP 933
DI 10.1002/spe.792
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 194CN
UT WOS:000248321700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tripathi, AR
   Kulkarni, D
   Talkad, H
   Koka, M
   Karanth, S
   Ahmed, T
   Osipkov, I
AF Tripathi, Anand R.
   Kulkarni, Devdatta
   Talkad, Harsha
   Koka, Muralidhar
   Karanth, Sandeep
   Ahmed, Tanvir
   Osipkov, Ivan
TI Autonomic configuration and recovery in a mobile agent-based distributed
   event monitoring system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agent-based systems; distributed event processing; autonomic systems;
   policy-based system management
ID COORDINATION; MANAGEMENT
AB In this paper we present a framework for building policy-based autonomic distributed agent systems. The autonomic mechanisms of configuration and recovery are supported through a distributed event processing model and a set of policy enforcement mechanisms embedded in an agent framework. Policies are event-driven rules derived from the system's functional and non-functional requirements. Agents in the network monitor the system state for policy violation conditions, generate appropriate events, and communicate them to other agents for cooperative filtering, aggregation, and handling. A set of agents perform policy enforcement actions whenever events signifying any policy violation conditions occur. Policies are defined using a specification framework based on XML. The policy enforcement agents interpret the policies given in XML. We illustrate the utility of this framework in the context of an agent-based distributed network monitoring application. We also present an experimental evaluation of our approach. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Minnesota, Dept Comp Sci, Minneapolis, MN 55455 USA.
C3 University of Minnesota System; University of Minnesota Twin Cities
RP Tripathi, AR (corresponding author), Univ Minnesota, Dept Comp Sci, Minneapolis, MN 55455 USA.
EM tripathi@cs.umn.edu
RI Ahmed, Tanvir/B-9755-2015
OI Ahmed, Tanvir/0000-0002-6748-2441
CR [Anonymous], IEEE COMPUTER
   CANDEA G, 2004, PERFORMANCE EVALUATI, V56
   Carzaniga A, 2001, ACM T COMPUT SYST, V19, P332, DOI 10.1145/380749.380767
   CERI S, 1990, VERY LARGE DATA BASES, P566
   Clark D., 1988, P ACM SIGCOMM 88 STA, P106
   Corradi A, 2001, LECT NOTES COMPUT SC, V1995, P214
   Damianou N, 2001, LECT NOTES COMPUT SC, V1995, P18
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   FOX A, 1997, P 16 ACM S OP SYST P, P78
   Guessoum Z., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P672
   Jennings NR, 2003, IEEE CONTR SYST MAG, V23, P61, DOI 10.1109/MCS.2003.1200249
   Jennings NR, 2001, COMMUN ACM, V44, P35, DOI 10.1145/367211.367250
   Jones A., 1993, DEONTIC LOGIC COMPUT, P275
   Karnik NM, 2001, SOFTWARE PRACT EXPER, V31, P301, DOI 10.1002/spe.364
   Kephart JO, 2004, FIFTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P3, DOI 10.1109/POLICY.2004.1309145
   Kiniry J., 1997, IEEE Internet Computing, V1, P21, DOI 10.1109/4236.612210
   Lobo J, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P291
   Lopez y Lopez F., 2005, P 1 INT S NORM MULT
   Minsky NH, 2004, LECT NOTES COMPUT SC, V2940, P189
   Minsky NH, 2000, ACM T SOFTW ENG METH, V9, P273, DOI 10.1145/352591.352592
   Moats R, 1997, 2141 RFC
   MOORE B, 2001, 3060 RFC INT SOC INT
   Pietzuch PR, 2003, LECT NOTES COMPUT SC, V2672, P62
   ROESCH M, 1999, P 13 SYST ADM C LISA
   ROWANHILL JC, 2004, INT C DEP SYST NETW
   Tesauro G., 2004, Proceedings of the 3rd International Joint Conference on Autonomous Agents Multi-Agent Systems, P464
   Tripathi A, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P320, DOI 10.1109/ICAC.2004.1301396
   Tripathi A, 2003, LECT NOTES COMPUT SC, V2603, P251
   Tripathi A, 2002, NOMS 2002: IEEE/IFIP NETWORK OPERATIONS AND MANAGEMENT SYMPOSIUM, P65, DOI 10.1109/NOMS.2002.1015546
   Tripathi AR, 2006, LECT NOTES COMPUT SC, V3914, P1
   Tripathi AR, 2002, J SYST SOFTWARE, V62, P123, DOI 10.1016/S0164-1212(01)00129-7
   Tripathi AR, 1999, INT CON DISTR COMP S, P190, DOI 10.1109/ICDCS.1999.776520
   West RE, 2001, IMECHE CONF TRANS, V2001, P3
   White SR, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P2, DOI 10.1109/ICAC.2004.1301340
   ZAMBONELLI F, 2001, P 1 INT C AG OR SOFT
NR 35
TC 7
Z9 9
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2007
VL 37
IS 5
BP 493
EP 522
DI 10.1002/spe.777
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 157FK
UT WOS:000245703800003
DA 2024-07-18
ER

PT J
AU Rossi, G
   Panegai, E
   Poleo, E
AF Rossi, G.
   Panegai, E.
   Poleo, E.
TI JSetL: a Java library for supporting declarative programming in Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE declarative programming; constraint programming; set constraints; Java;
   non-determinism
ID LANGUAGE
AB In this paper we present a Java library-called JSetL-that offers a number of facilities to support declarative programming such as those usually found in logic or functional declarative languages: logical variables, list and set data structures (possibly partially specified), unification and constraint solving over sets, non-determinism. The paper describes the main features of JSetL and it shows, through a number of simple examples, how these features can be exploited to support a real declarative programming style in Java. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Parma, Dipartimento Matemat, I-43100 Parma, Italy.
C3 University of Parma
RP Rossi, G (corresponding author), Univ Parma, Dipartimento Matemat, Parco Area Sci,53-A, I-43100 Parma, Italy.
EM gianfranco.rossi@unipr.it
RI Rossi, Gianfranco/C-9386-2017
OI Rossi, Gianfranco/0000-0002-6970-8790
CR ABDENNADHER S, 2001, P WFLP 2001 INT WORK
   [Anonymous], 2004, Concepts, techniques, and models of computer programming
   Apt KR, 1998, ACM T PROGR LANG SYS, V20, P1014, DOI 10.1145/293677.293679
   Cadoli M, 2000, COMPUT LANG, V26, P165, DOI 10.1016/S0096-0551(01)00010-8
   CHUN AHW, 1999, P 1 INT C EXH PRACT
   DALPALU A, 2003, PPDP 03, P219
   DENTI E, 2001, LECT NOTES COMPUTER, V1900, P184
   DINCBAS M, 1988, P 2 INT C 5 GEN COMP, P683
   Dovier A, 2000, ACM T PROGR LANG SYS, V22, P861, DOI 10.1145/365151.365169
   DOVIER A, IN PRESS SET UNIFICA
   DOVIER A, 2006, 235 U PARM
   Drejhammar F, 2003, LECT NOTES COMPUT SC, V2916, P346, DOI 10.1007/978-3-540-24599-5_24
   FALKMAN G, 2002, P 12 INT WORKSH LOG
   FRAPPE CA, 2001, LECT NOTES COMPUTER, V1990, P29
   PANEGAI E, 2004, 384 U PARM
   Puget J.-F., 1995, INT LOGIC PROGRAMMIN, P513
   ROSSI G, 2002, P 11 INT WORKSH FUNC, V76
   ZHOU NF, 1999, P IEEE COMPSAC 99, P442
   ZHOU NF, 2006, DJ DECLARATIVE JAVA
NR 19
TC 6
Z9 6
U1 1
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2007
VL 37
IS 2
BP 115
EP 149
DI 10.1002/spe.749
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 136GY
UT WOS:000244211800001
DA 2024-07-18
ER

PT J
AU Schantz, RE
   Loyall, JP
   Rodrigues, C
   Schmidt, DC
AF Schantz, Richard E.
   Loyall, Joseph P.
   Rodrigues, Craig
   Schmidt, Douglas C.
TI Controlling quality-of-service in distributed real-time and embedded
   systems via adaptive middleware
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive middleware; reconfigurable DRE systems; aspect-oriented design;
   multimedia applications
AB Computing systems are increasingly distributed, real-time, and embedded (DRE) and must operate under highly unpredictable and changeable conditions. A challenging problem for DRE systems is adaptation of behavior and reconfiguration of resources to maintain the best application performance in the face of changes in system load and available resources. To provide predictable mission-critical quality of service (QoS) end-to-end, QoS-enabled middleware services and mechanisms have begun to emerge, but they lack support for applications with stringent QoS requirements in changing, dynamic environments. This paper presents two contributions to research on adaptive and reconfigurable DRE systems. First, we describe the structure and functionality of an advanced middleware platform for developing applications that apply various techniques to adapt themselves to changes in resource availability to meet real-time QoS requirements. Second, we present results of a case study of a multimedia application for Unmanned Aerial Vehicle (UAV) video distribution we developed using this middleware platform in conjunction with QoS-enabled operating systems and networking protocols. We describe the design of the multimedia application using our middleware platform and report empirical results showing how adaptive behavior and end-to-end resource management techniques are used to reconfigure the system dynamically to meet timeliness requirements. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 BBN Technol, Cambridge, MA 02138 USA.
   Vanderbilt Univ, Nashville, TN 37203 USA.
C3 Raytheon Technologies; Raytheon BBN Technologies; Vanderbilt University
RP Schantz, RE (corresponding author), BBN Technol, 10 Moulton St, Cambridge, MA 02138 USA.
EM shantz@bbn.com
CR Abdelzaher TF, 2003, IEEE CONTR SYST MAG, V23, P74, DOI 10.1109/MCS.2003.1200252
   ABENI L, 2002, P IEEE REALT SYST S
   Abeni L., 2001, P IEEE REAL TIM TECH
   BLAIR G, 1998, P IFIP INT C DISTR S
   CONAN D, 2001, P 6 INT WORKSH COMP
   Cucinotta T, 2004, RTAS 2004: 10TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P238, DOI 10.1109/RTTAS.2004.1317269
   de Miguel MA, 2002, INT WORKSH QUAL SERV, P161, DOI 10.1109/IWQoS.2002.1006584
   DUZAN G, 2004, P INT C ASP OR SOFTW
   EIDE E, 2004, P 10 IEEE REAL TIM E
   FITZPATRICK T, 1998, P INT C CONF DISTR S
   GILL GD, 2004, P 10 IEEE REAL TIM T, V24
   *IETF, 1998, ARCH DIFF SERV
   Kon F, 2002, COMMUN ACM, V45, P33, DOI 10.1145/508448.508470
   LEGALL D, 1991, COMMUN ACM, V34, P46, DOI 10.1145/103085.103090
   Loyall J, 2005, RTAS 2005: 11th IEEE Real Time and Embedded Technology and Applications Symposium, Proceedings, P88
   LOYALL J, 2004, P 2 RTAS WORKSH MOD
   Loyall J. P., 1998, LECT NOTES COMPUTER, V1511
   LU C, 2003, P 9 IEEE REAL TIM EM
   MANGHWANI P, 2005, P 13 INT WORKSH PAR
   MUNGEE S, 2000, DESIGN MANAGEMENT MU
   *OBJ MAN GROUP, 1998, 981005 OMG RFP
   *OBJ MAN GROUP, 2001, OMG FIN AD SPEC
   *OBJ MAN GROUP, 1999, ORBOS990212 OMG
   SCHANTZ R, 2002, P 5 IEEE INT S OBJ O
   SCHANTZ R, 2003, LECT NOTES COMPUTER, V2672
   Schantz R. E., 2002, Encyclopedia of Software Engineering
   Schmidt DC, 1998, COMPUT COMMUN, V21, P294, DOI 10.1016/S0140-3664(97)00165-5
   Schmidt DC, 2003, J SYST SOFTWARE, V66, P213, DOI 10.1016/S0164-1212(02)00078-X
   Sharma P. K., 2004, LECT NOTES COMPUTER, V3291
   *TIM CORP, 2002, PRED PERF DYN LOAD O
   *TIMESYS CORP, 2001, TIMESYS LIN R T US M
   Wang NB, 2003, MICROPROCESS MICROSY, V27, P45, DOI 10.1016/S0141-9331(02)00096-0
   WANG X, 2004, P 10 IEEE REALT EMB
   Zhang L., 1993, IEEE Network, V7, P8, DOI 10.1109/65.238150
   Zinky JohnA., 1997, THEOR PRACT OBJ SYST, V3, P1
NR 35
TC 6
Z9 8
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1189
EP 1208
DI 10.1002/spe.761
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 086HN
UT WOS:000240664500006
DA 2024-07-18
ER

PT J
AU Aleksy, M
   Korthaus, A
   Schmoigl, N
AF Aleksy, M.
   Korthaus, A.
   Schmoigl, N.
TI Design and implementation of an enhanced CORBA property service
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE property service; management of time-dependent information; CORBA; CORBA
   services; distributed systems
AB Part of the number of Common Object Request Broker Architecture (CORBA) services specified by the Object Management Group is CORBA's Property Service (PS), which can be used to provide CORBA objects dynamically with additional properties not declared in their static Interface Description Language (IDL) type definitions. Although the management of dynamic properties is a common requirement for several application purposes, the support offered by CORBA's PS is very limited. One shortcoming, for example, is the fact that the PS specification considers the association between objects and properties an implementation detail, which is completely delegated to the developers of applications that require property management. Moreover, CORBA's PS does not support the definition of properties with lifetime restrictions, i.e. it is not possible to specify properties that are only allowed to exist for a certain period of time. In this paper, we address these shortcomings by proposing an extended version of CORBA's PS, which provides explicit property set/object associations managed by the service and integrates the aspect of temporary properties. A primary goal in our design of the Enhanced PS was smoothness of the extensions with respect to downward compatibility with the original specification. In addition, we intended to simplify the integration of the new functionality in CORBA applications that need to utilize the enhanced features. We provide a detailed description of the design of our Enhanced PS by explaining IDL code fragments and offering Unified Modeling Language diagrams. In addition, some implementation aspects concerning our Java-based prototype of the new service are discussed and the results of several benchmarking runs are presented. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Mannheim, Dept Informat Syst, D-68131 Mannheim, Germany.
C3 University of Mannheim
RP Korthaus, A (corresponding author), Univ Mannheim, Dept Informat Syst, Schloss L 5,5, D-68131 Mannheim, Germany.
EM korthaus@uni-mannheim.de
RI Korthaus, Axel/A-1471-2011
OI Korthaus, Axel/0000-0002-4150-8607; Aleksy, Markus/0000-0001-8457-5642
CR ALEKSY M, 2003, P INT C COMP SCI SOF, P182
   ALEKSY M, 2005, P 2005 ACM S APPL CO, P706
   Cormen T.H., 2000, INTRO ALGORITHMS
   JAIN P, 2000, P 7 PATT LANG PROGR
   KRISHNAMURTHY Y, 2001, P ACM SIGPLAN WORKSH
   MOWBRAY TJ, CORBA DESIGN PATTERN
   *OBJ MAN GROUP, 2002, 020506 OMG
   *OBJ MAN GROUP, CAT OMG CORBASERVICE
   *OBJ MAN GROUP, 2000, 000622 OMG
   *OBJ MAN GROUP, 2004, 040312 OMG
   Object Management Group, 2003, PTC030802 OMG
   Object Management Group, 2003, PTC030915 OMG
   *SUN MICR, JAV 2 PLATF
   *SUN MICR INC, 2005, JIN ARCH SPEC VERS 1
   *SUN MICR INC, 2005, JIN DISTR LEAS SPEC
   TU MT, 1997, P IFIP WG 6 1 INT WO
   ZERBST C, MARINET SERVICE INTE
NR 17
TC 0
Z9 0
U1 0
U2 3
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2006
VL 36
IS 10
BP 1029
EP 1050
DI 10.1002/spe.723
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 072OE
UT WOS:000239681900002
DA 2024-07-18
ER

PT J
AU Fernández-Iglesias, MJ
   Alvarez-Sabucedo, LM
   Lojo-Silva, C
   Anido-Rifón, LE
AF Fernández-Iglesias, MJ
   Alvarez-Sabucedo, LM
   Lojo-Silva, C
   Anido-Rifón, LE
TI Generating high quality printouts from content management systems:: a
   cost-effective approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Content Management Systems; Web mining; report generation; PDF; LATEX
AB Web Content Management Systems support both access to content and content management using a Web interface. However, navigation-based access to content is not ideal for some tasks, like content analysis and assessment, report generation, education, filing or third-party distribution. This paper discusses a cost-effective approach to the generation of high-quality printed versions of content held in a Web Content Management System using typesetting software. This approach is illustrated with two case studies. Copyright (C) 2005 John Wiley & Sons, Ltd.
C1 Univ Vigo, ETS Ingn Telecomunicac, Dept Ingn Telemat, E-36200 Vigo, Spain.
C3 Universidade de Vigo
EM manolo@det.uvigo.es
RI Iglesias, Manuel José Fernández/I-1695-2013; Anido-Rifón,
   Luis/ABI-6838-2020; Anido-Rifón, Luis/D-4597-2018
OI Iglesias, Manuel José Fernández/0000-0003-4462-8724; Anido-Rifón,
   Luis/0000-0003-2780-2727; Anido-Rifón, Luis/0000-0003-2780-2727
CR BOLLEN J, 1999, NEW REV HYPERMEDIA M, P189
   Browning Lowndes, 2001, TSW0102 JOINT INF SY
   FERGUSON R, 2002, USING MICROSOFT SHAR
   GOOSSENS M, 1994, ETEX COMPANION
   GRIZEL PL, 2003, ZOPE
   Hammersley B., 2003, Content syndication with RSS
   Heylighen F., 1999, Computational & Mathematical Organization Theory, V5, P253, DOI 10.1023/A:1009690407292
   KOPKA H, 1995, GUIDE ATEX2 DOCUMENT
   MANGANO S, 2002, XSLT COOKBOOK
   Newcomer E., 2002, UNDERSTANDING WEB SE
   *OBSAM SURGAL, 2005, OBS MED PYMES
   *REDDOT SOL, 2003, REDDOT ECMS TECHN D
   ZAIANE OR, 2003, LECT NOTES COMPUTER, V2703
NR 13
TC 1
Z9 2
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2005
VL 35
IS 11
BP 1007
EP 1026
DI 10.1002/spe.660
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 963EF
UT WOS:000231785500001
DA 2024-07-18
ER

PT J
AU McNab, A
AF McNab, A
TI The GridSite Web/Grid security system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT International Workshop on Grid Security
CY JUL, 2004
CL Oxford, ENGLAND
DE GridSite; GSI; GACL; Apache; X.509
AB This paper describes the architecture of the GridSite system, which adds support for several Grid security protocols to the Apache Web server platform. These include the Globus GSI authentication system, Grid Access Control Language (GACL) access policy files, and Distinguished Name (DN) List and Virtual Organization Membership Service (VOMS) group memberships. Particular emphasis is placed on how the architecture of GridSite has evolved during the past 3 years, how this has been influenced by operational experience with production systems, and how the project has led to new developments, such as GACL. Finally, a description is given of how GridSite has been made to interoperate with other deployed security systems, both as producers and consumers of GridSite's authorization information. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Manchester, Dept Phys, Manchester M13 9PL, Lancs, England.
C3 University of Manchester
RP McNab, A (corresponding author), Univ Manchester, Dept Phys, Oxford Rd, Manchester M13 9PL, Lancs, England.
EM andrew.mcnab@man.ac.uk
RI McNab, Andrew/HHS-6972-2022
CR MCNAB A, 2003, P COMP HIGH EN PHYS
NR 1
TC 12
Z9 12
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2005
VL 35
IS 9
BP 827
EP 834
DI 10.1002/spe.690
PG 8
WC Computer Science, Software Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 943CO
UT WOS:000230329800004
OA Bronze
DA 2024-07-18
ER

PT J
AU Li, M
   Qi, M
AF Li, M
   Qi, M
TI Leveraging legacy codes to distributed problem-solving environments: a
   Web services approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE problem-solving environments; Web services; CORBA; wrapper generator;
   software reuse
AB This paper presents WSOWG, a Web-services-oriented wrapper generator for automatically wrapping non-networked legacy codes as Web services for reuse in distributed problem-solving environments. Using WSOWG, a finite element based computational fluid dynamics (CFD) legacy code has been wrapped as a Web service. A problem-solving environment for simulating incompressible Navier-Stokes flows has also been implemented. A user makes use of the CFD service through a Web page without knowing the exact implementation of the service. In this way, a user's computing environment can be extended to a heterogeneous distributed computing environment. Performance evaluation shows that the overhead to invoke the CFD Web service generated by WSOWG using Simple Object Access Protocol (SOAP) and CORBA Internet Inter-ORB Protocol (IIOP) is reasonable compared with that of invoking another CFD Web service manually wrapped from the CFD legacy code using SOAP only. Copyright (C) 2004 John Wiley Sons,Ltd.
C1 Brunel Univ, Dept Elect & Comp Engn, Uxbridge UB8 3PH, Middx, England.
   Univ Bath, Dept Comp Sci, Bath BA2 7AY, Avon, England.
C3 Brunel University; University of Bath
RP Brunel Univ, Dept Elect & Comp Engn, Uxbridge UB8 3PH, Middx, England.
EM maozhen.li@brunnel.ac.uk
CR ASHISH N, 1994, P 2 INT C COOP INF S
   BEAZLEY DM, 1996, P SUPERCOMPUTING 96
   CHIU K, 2002, P 11 C HIGH PERF DIS
   DEVARAM K, 2003, P INT C WEB SERV ICW
   GOKHALE A, 2002, P WWW2002 HON HI
   Kim H. S., 2000, P JOINT M 4 WORLD MU
   LI M, 2000, P ACM IEEE SUPERCOMP
   Shields MS, 2000, CONCURRENCY-PRACT EX, V12, P687, DOI 10.1002/1096-9128(200007)12:8<687::AID-CPE505>3.0.CO;2-P
   SOUDER T, 1999, P 6 WORK C REV ENG A
   VIDAL M, 1995, P 3 INT C COOP INF S
   Walker DW, 2000, CONCURRENCY-PRACT EX, V12, P1455, DOI 10.1002/1096-9128(20001225)12:15<1455::AID-CPE538>3.0.CO;2-#
   Williams PT, 1996, NUMER HEAT TR B-FUND, V29, P137, DOI 10.1080/10407799608914980
NR 12
TC 4
Z9 14
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2004
VL 34
IS 13
BP 1297
EP 1309
DI 10.1002/spe.614
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 867VD
UT WOS:000224869700005
DA 2024-07-18
ER

PT J
AU Bakic, AM
   Mutka, MW
   Rover, DT
AF Bakic, AM
   Mutka, MW
   Rover, DT
TI An on-line performance visualization technology
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed system instrumentation; markup language; performance
   analysis; performance visualization
ID PARALLEL
AB A new software technology for on-line performance analysis and the visualization of complex parallel and distributed systems is presented. Often heterogeneous, these systems need capabilities for the flexible integration and configuration of performance analysis and visualization. Our technology is based on an object-oriented framework for the rapid prototyping and development of distributable visual objects. The visual objects consist of two levels, a platform/device-specific low level and an analysis- and visualization-specific high level. We have developed a very high-level markup language called VOML and a compiler for the component-based development of high-level visual objects. The VOML is based on a software architecture for on-line event processing and performance visualization called EPIRA. The technology lends itself to constructing high-level visual objects from globally distributed component definitions. Details of the technology and tools used, as well as how an example visual object can be rapidly prototyped from several reusable components, are presented. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Iowa State Univ, Dept Elect & Comp Engn, Ames, IA 50011 USA.
   Motorola Inc, Software Design Automat Ctr, Schaumburg, IL 60196 USA.
   Michigan State Univ, Dept Comp Sci & Engn, E Lansing, MI 48824 USA.
C3 Iowa State University; Michigan State University
RP Rover, DT (corresponding author), Iowa State Univ, Dept Elect & Comp Engn, Coover Hall, Ames, IA 50011 USA.
EM drover@iastate.edu
OI Mutka, Matt/0000-0002-7381-8095
CR [Anonymous], 1990, SGML HDB
   [Anonymous], ORNLTM12125
   AYDT R, 1995, PABLO SELF DEFINING
   BAKIC A, 1997, P IEEE WORKSH MIDDL
   BEDERSON B, 2000, CSTR4137 U MAR
   BERNAT G, 1997, P REAL TIM SYST S DE
   Bosch R, 2000, COMPUT GRAPHICS-US, V34, P68, DOI 10.1145/563788.604455
   BOTHNER P, 1998, P 1998 USENIX ANN TE
   Box D., 1998, ESSENTIAL COM
   Chuah MC, 1996, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION '96, PROCEEDINGS, P29, DOI 10.1109/INFVIS.1996.559213
   CLARK J, 1995, SP SGML PARSER
   Corman T., 1990, INTRO ALGORITHMS
   DONGARRA J, 1995, MPI MESSAGE PASSING
   Geist A., 1994, PVM: Parallel Virtual Machine
   HAIBLE B, 1997, CLISP COMMON LISP IM
   HEALY CG, 1999, 28 WORKSH ADV IM PAT
   HEATH MT, 1991, IEEE SOFTWARE, V8, P29, DOI 10.1109/52.84214
   HERRATE V, 1991, ANL9115 TR
   HERSEY HH, 1996, CISTR9605 U OR DEP C
   Kelsey R, 1998, ACM SIGPLAN NOTICES, V33, P26, DOI 10.1145/290229.290234
   LEE KJ, 2001, WORKSH SOFTW VIS INT
   LORD T, 1995, US TCL TK WORKSH 95
   MOWBRAY TJ, 1997, ESSENTIAL CORBA SYST
   Murray-Rust P, 1999, J CHEM INF COMP SCI, V39, P928, DOI 10.1021/ci990052b
   REED D, 1995, IEEE COMPUT, V28, P55
   REED DA, 1992, OVERVIEW PABLO PERFO
   SCHROD J, 1995, SGML TRANSFORMATION
   Shaffer E, 1999, COMPUTER, V32, P44, DOI 10.1109/2.809250
   Smith HM, 1998, J HIGH SPEED NETW, V7, P259
   *SUN MICR INC, 1995, SOL 2 4 SOFTW DEV AN
   TAMMET T, 1995, SCHEME TO C COMPILER
   Vetter JS, 2000, INT J HIGH PERFORM C, V14, P357, DOI 10.1177/109434200001400407
   *VRML CONS INC, 1997, VIRT REAL MOD LANG
   Welch B.B., 1995, PRACTICAL PROGRAMMIN
   Zaki O, 1999, INT J HIGH PERFORM C, V13, P277, DOI 10.1177/109434209901300310
   1995, VISUAL INSIGHTS EBIZ
NR 36
TC 1
Z9 1
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2003
VL 33
IS 15
BP 1447
EP 1469
DI 10.1002/spe.559
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 752MF
UT WOS:000187164100002
DA 2024-07-18
ER

PT J
AU Palopoli, L
   Terracina, G
   Ursino, D
AF Palopoli, L
   Terracina, G
   Ursino, D
TI DIKE: a system supporting the semi-automatic construction of cooperative
   information systems from heterogeneous databases
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cooperative information systems; inter-schema properties; database
   integration and abstraction; data repository; description logics;
   mediator-based architecture
ID VIEW INTEGRATION; SCHEMA INTEGRATION
AB In this paper we present DIKE, a system supporting the semi-automatic construction of cooperative information systems from heterogeneous databases. The input of DIKE consists of the set of databases to belong to the cooperative system. First, DIKE constructs a data repository representing a structured, integrated and consistent description of the information stored in the input databases. The data repository thus constructed is then used as the core structure of a mediator-like module supporting the user-friendly integrated access to available data resources. The core of DIKE is the extraction and exploitation of the inter-schema knowledge (in the form of inter-schema properties) relative to the involved database schemas. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Mediterranea Reggio Calabria, DIMET, I-89060 Reggio Di Calabria, RC, Italy.
   Univ Calabria, Dipartimento Matemat, I-87030 Arcavacata Di Rende, CS, Italy.
C3 Universita Mediterranea di Reggio Calabria; University of Calabria
RP Ursino, D (corresponding author), Univ Mediterranea Reggio Calabria, DIMET, Via Graziella,Local Feo di Vito, I-89060 Reggio Di Calabria, RC, Italy.
EM ursino@unirc.it
RI , giorgio/ABG-7441-2020
OI , giorgio/0000-0002-3090-7223; Palopoli, Luigi/0000-0003-4915-5137;
   Ursino, Domenico/0000-0003-1360-8499
CR Arens Y., 1993, International Journal of Intelligent & Cooperative Information Systems, V2, P127, DOI 10.1142/S0218215793000071
   *AUT INF NELL PUBB, 1996, REL ANN STAT INF NEL
   *AUT INF NELL PUBB, 1997, REL ANN STAT INF NEL
   BATINI C, 1984, IEEE T SOFTWARE ENG, V10, P650, DOI 10.1109/TSE.1984.5010294
   Batini C., 1996, Requirements Engineering, V1, P47, DOI 10.1007/BF01235765
   BATINI C, 1995, ATT C ANN AICA AICA, P247
   Bayardo Roberto., 1997, P ACM SIGMOD INT C M, P195
   BENEVENTANO D, 1997, LECT NOTES COMPUTER, V1321, P435
   Bergamaschi S, 2001, DATA KNOWL ENG, V36, P215, DOI 10.1016/S0169-023X(00)00047-1
   BONIFATI A, 1999, J INTEGRATED DESIGN, V3, P55
   BREITBART Y, 1990, SIGMOD REC, V19, P53
   BRIGHT MW, 1994, ACM T DATABASE SYST, V19, P212, DOI 10.1145/176567.176569
   Calvanese D, 1998, NINTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P192, DOI 10.1109/DEXA.1998.707402
   Castano S, 2001, IEEE T KNOWL DATA EN, V13, P277, DOI 10.1109/69.917566
   CATARCI T, 1993, J INTELLIGENT COOPER, V2, P375
   CHAUDHURI S, 1995, PROC INT CONF DATA, P190, DOI 10.1109/ICDE.1995.380392
   FANKHAUSER P, 1991, SIGMOD REC, V20, P59, DOI DOI 10.1145/141356.141383
   FLESCA S, 1998, NETWORKING INFORMATI, V1, P495
   Garcia-Molina H., 1997, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V8, P117, DOI 10.1023/A:1008683107812
   GOTTHARD W, 1992, IEEE T KNOWL DATA EN, V4, P1, DOI 10.1109/69.124894
   Hammer J., 1993, International Journal of Intelligent & Cooperative Information Systems, V2, P51, DOI 10.1142/S0218215793000046
   LARSON JA, 1989, IEEE T SOFTWARE ENG, V15, P449, DOI 10.1109/32.16605
   Levy AY, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P251
   LITWIN W, 1990, ACM COMPUT SURV, V22, P267, DOI DOI 10.1145/96602.96608
   Madhavan J., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P49
   MANNINO MV, 1984, P INT C DAT ENG ICDE, P418
   Mena E, 2000, DISTRIB PARALLEL DAT, V8, P223, DOI 10.1023/A:1008741824956
   Metais E, 1997, DATA KNOWL ENG, V23, P59, DOI 10.1016/S0169-023X(97)00004-9
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   NAGGAR P, 2002, LECT NOTES COMPUTER, V2453, P123
   Palopoli L, 2003, IEEE T KNOWL DATA EN, V15, P271, DOI 10.1109/TKDE.2003.1185834
   Palopoli L, 1999, DATA KNOWL ENG, V30, P239, DOI 10.1016/S0169-023X(99)00013-0
   Palopoli L., 1998, Proceedings of the 1998 ACM CIKM International Conference on Information and Knowledge Management, P306, DOI 10.1145/288627.288671
   Palopoli L, 2000, DATA KNOWL ENG, V35, P201, DOI 10.1016/S0169-023X(00)00028-8
   PALOPOLI L, 1999, INFORMATION SYSTEMS, V24, P410
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   RICHARDSON SD, 1998, P INT C COMP LING CO, P1098
   Sheth A., 1990, ACM Computing Surveys, V22, P183, DOI DOI 10.1145/96602.96604
   SPACCAPIETRA S, 1994, IEEE T KNOWL DATA EN, V6, P258, DOI 10.1109/69.277770
   Su S. Y. W., 1996, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V6, P171, DOI 10.1007/BF00122127
   THOMAS G, 1990, ACM COMPUT SURV, V22, P236
   Ullman JD, 1997, LECT NOTES COMPUT SC, V1186, P19
   WIEDERHOLD G, 1992, IEEE COMPUT, V25, P38
   YAND J, 2000, COMMUN ACM, V43, P39
NR 44
TC 20
Z9 25
U1 0
U2 2
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2003
VL 33
IS 9
BP 847
EP 884
DI 10.1002/spe.531
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 706MA
UT WOS:000184456400003
DA 2024-07-18
ER

PT J
AU Baldoni, R
   Marchetti, C
AF Baldoni, R
   Marchetti, C
TI Three-tier replication for FT-CORBA infrastructures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software replication; architectures for dependable services;
   fault-tolerant CORBA
ID CONSENSUS; SYSTEMS
AB Enforcing strong replica consistency among a set of replicas of a service deployed across an asynchronous distributed system in the presence of crash failures is a real practical challenge. If each replica runs the consistency protocol bundled with the actual service implementation, this target cannot be achieved, as replicas need to be located over a partially synchronous distributed system to solve the distributed agreement problems underlying strong replica consistency.
   A three-tier architecture for software replication enables the separation of the replication logic, i.e. protocols and mechanisms necessary for managing software replication, from both clients and server replicas. The replication logic is embedded in a middle-tier that confines the need of partial synchrony and thus frees replica deployment.
   In this paper we first introduce the basic concepts underlying three-tier replication. Then we present the interoperable replication logic (IRL) architecture, a fault-tolerant CORBA compliant infrastructure. IRL exploits a three-tier approach to replicate stateful deterministic CORBA objects and allows object replicas to run on object request brokers from different vendors. A description of an IRL prototype developed in our department is proposed along with an extensive performance analysis. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Roma La Sapienza, Dipartimento Informat & Sistemist, I-00198 Rome, Italy.
C3 Sapienza University Rome
RP Univ Roma La Sapienza, Dipartimento Informat & Sistemist, Via Salaria 113, I-00198 Rome, Italy.
EM marchet@dis.uniroma1.it
CR AMIR Y, 1998, CNDS984 J HOPKINS U
   ANKER T, 2000, HUJICSELTR200031 HEB
   Babaoglu Ö, 2001, IEEE T SOFTWARE ENG, V27, P308, DOI 10.1109/32.917522
   Baldoni R, 2002, 2002 PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P19, DOI 10.1109/PRDC.2002.1185614
   Baldoni R, 2002, SYM REL DIST SYST, P109, DOI 10.1109/RELDIS.2002.1180179
   Baldoni R, 2002, PROCEEDINGS OF THE SEVENTH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, P37, DOI 10.1109/WORDS.2002.1000034
   Baldoni R, 2001, EIGHTH IEEE WORKSHOP ON FUTURE TRENDS OF DISTRIBUTED COMPUTING SYSTEMS, PROCEEDINGS, P133, DOI 10.1109/FTDCS.2001.969633
   BALDONI R, IN PRESS CONCURRENCY
   BIRMAN K, 1991, ACM T COMPUT SYST, V9, P272, DOI 10.1145/128738.128742
   Birman K., 1987, Proceedings of the eleventh ACM Symposium on Operating systems principles, P123
   BIRMAN KP, 1993, COMMUN ACM, V36, P37, DOI 10.1145/163298.163303
   Birman KP, 1999, ACM T COMPUT SYST, V17, P41, DOI 10.1145/312203.312207
   Birman KP, 1999, SOFTWARE PRACT EXPER, V29, P741, DOI 10.1002/(SICI)1097-024X(19990725)29:9<741::AID-SPE259>3.0.CO;2-I
   Budhiraja Navin, 1993, Distributed Systems, V2, P199
   Chandra TD, 1996, J ACM, V43, P225, DOI 10.1145/226643.226647
   Cristian F, 1999, IEEE T PARALL DISTR, V10, P642, DOI 10.1109/71.774912
   Défago X, 1998, SYM REL DIST SYST, P43, DOI 10.1109/RELDIS.1998.740473
   Dolev D, 1996, COMMUN ACM, V39, P64, DOI 10.1145/227210.227227
   DOLEV D, 1987, J ACM, V34, P77, DOI 10.1145/7531.7533
   Fabre JC, 1998, IEEE T COMPUT, V47, P78, DOI 10.1109/12.656088
   Felber P, 2001, DOA'01: 3RD INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS & APPLICATIONS, PROCEEDINGS, P239, DOI 10.1109/DOA.2001.954089
   Felber P, 1998, THEOR PRACT OBJ SYST, V4, P93, DOI 10.1002/(SICI)1096-9942(1998)4:2<93::AID-TAPO4>3.0.CO;2-8
   Felber P, 2001, SIXTH INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, PROCEEDINGS, P153, DOI 10.1109/WORDS.2001.945126
   FELBER P, P 21 INT C DISTR COM
   FETZER C, 2001, P 21 INT C DISTR SYS
   FISCHER MJ, 1985, J ACM, V32, P374, DOI 10.1145/3149.214121
   FRIEDMAN R, 1996, P TINA 96 C SEPT
   Gamma Erich., 1994, DESIGN PATTERNS
   Goft G., 1999, Proceedings of the 1999 ICPP Workshops on Collaboration and Mobile Computing (CMC'99). Group Communications (IWGC). Internet '99 (IWI'99). Industrial Applications on Network Computing (INDAP). Multimedia Network Systems (MMNS). Security (IWSEC). Parallel Computing '99 (IWPC'99). Parallel Execution on Reconfigurable Hardware (PERH), P44, DOI 10.1109/ICPPW.1999.800039
   Guerraoui R, 1997, COMPUTER, V30, P68, DOI 10.1109/2.585156
   Guerraoui R, 2001, IEEE T SOFTWARE ENG, V27, P29, DOI 10.1109/32.895986
   Henning M., 1999, ADV CORBA PROGRAMMIN
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   Landis S., 1997, Theory and Practice of Object Systems, V3, P31, DOI 10.1002/(SICI)1096-9942(1997)3:1<31::AID-TAPO4>3.0.CO;2-A
   MARCHETTI C, J INFORMATION SCI EN, V19, P39
   *OMG, 2000, PTC20001206 OMG
   *OMG, 2001, COMM OBJ REQ BROK AR
   *OMG, 1999, PORT INT SPEC
   *OMG, 2001, PCT20011108 OMG
   SHCNEIDER FB, 1993, DISTRIBUTED SYSTEMS
NR 40
TC 11
Z9 12
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2003
VL 33
IS 8
BP 767
EP 797
DI 10.1002/spe.525
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 694AG
UT WOS:000183750100003
DA 2024-07-18
ER

PT J
AU He, J
   Hiltunen, MA
   Rajagopalan, M
   Schlichting, RD
AF He, J
   Hiltunen, MA
   Rajagopalan, M
   Schlichting, RD
TI QoS customization in distributed object systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CORBA; Java RMI; quality of service; fault tolerance; customization;
   distributed systems
AB Applications built on networked collections of computers are increasingly using distributed object platforms such as CORBA, Java Remote Method Invocation (RMI), and DCOM to standardize object interactions. With this increased use comes the increased need for enhanced quality of service (QoS) attributes related to fault tolerance, security, and timeliness. This paper describes an architecture called CQoS (configurable QoS) for implementing such enhancements in a transparent, highly customizable, and portable manner. CQoS consists of two parts: application- and platform-dependent interceptors and generic QoS components. The generic QoS components are implemented using Cactus, a system for building highly configurable protocols and services in distributed systems. The CQoS architecture and the interfaces between the different components are described, together with implementations of QoS attributes using Cactus and interceptors for CORBA and Java RMI. Experimental results are given for a test application executing on a Linux cluster using Cactus/J, the Java implementation of Cactus. Compared with other approaches, CQoS emphasizes portability across different distributed object platforms, while the use of Cactus allows custom combinations of fault-tolerance, security, and timeliness attributes to be realized on a per-object basis in a straightforward way. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 AT&T Labs Res, Florham Pk, NJ 07932 USA.
   Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
C3 AT&T; University of Arizona
RP AT&T Labs Res, 180 Pk Ave, Florham Pk, NJ 07932 USA.
EM hiltunen@research.att.com
CR Armstrong S., 1992, MULTICAST TRANSPORT
   BENZEL T, 2000, P DARPA INF SURV C E, P308
   Chen WK, 2001, INT CON DISTR COMP S, P635, DOI 10.1109/ICDSC.2001.918994
   CUKIER M, 1998, P 17 IEEE S REL DIST
   Fabre JC, 1998, IEEE T COMPUT, V47, P78, DOI 10.1109/12.656088
   Felber P, 1996, 15TH SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P150, DOI 10.1109/RELDIS.1996.559713
   FELBER P, 1997, SPECIAL ISSUES OBJEC, P199
   HILTUNEN M, 2000, CACTUS SYSTEM SOFTWA
   Hiltunen M. A., 1999, Distributed Systems Engineering, V6, P103, DOI 10.1088/0967-1846/6/3/302
   Hiltunen M. A., 1998, IEE Proceedings-Software, V145, P180, DOI 10.1049/ip-sen:19982298
   Hiltunen MA, 1998, IEEE T COMPUT, V47, P573, DOI 10.1109/12.677244
   Hiltunen MA, 1999, IEEE T PARALL DISTR, V10, P600, DOI 10.1109/71.774909
   HILTUNEN MA, 2001, P INT C DEP SYST NET
   Killijian MO, 2000, SYM REL DIST SYST, P154, DOI 10.1109/RELDI.2000.885403
   Koster R, 2000, LECT NOTES COMPUT SC, V1795, P273
   Landis S., 1997, Theory and Practice of Object Systems, V3, P31, DOI 10.1002/(SICI)1096-9942(1997)3:1<31::AID-TAPO4>3.0.CO;2-A
   Loyall J, 2001, INT CON DISTR COMP S, P625, DOI 10.1109/ICDSC.2001.918993
   MAFFEIS S, 1995, P 1995 USENIX C OBJ
   MELLIARSMITH P, 2000, DARPA INF SURV C EXP, P281
   *MICR CORP, 1998, DISTR COMP OBJ MOD P
   Moser Louise E., 2000, P IEEE INF SURV C EX, V2, P184
   Narasimhan P, 1999, COMPUTER, V32, P62, DOI 10.1109/2.774920
   Natarajan B, 2000, DOA'00: INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS AND APPL ICATIONS, PROCEEDINGS, P39, DOI 10.1109/DOA.2000.874174
   *NBS, 1981, FIPS PUB 81
   *OBJ MAN GROUP, 2000, ORBOS20000404 OMG TE
   *OBJ MAN GROUP, 2001, IDL JAV LANG MAPP VE
   Object Management Group, 2000, The Common Object Request Broker: Architecture and Specification
   PRUYNE J, 2000, HPL200029
   RAJAGOPALAN B, 1989, PROCEEDINGS OF THE EIGHTH SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, P84, DOI 10.1109/RELDIS.1989.72752
   Schantz R, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P223, DOI 10.1109/ISORC.1999.776381
   SCHMIDT D, 1997, IEEE COMMUNICATIONS, V25, P72
   Singhal M., 1994, Advanced Concepts in Operating Systems
   *SUN MICR, 1998, JAV REM METH IN SPEC
   *SUN MICR INC, 2000, JIN TECHN COR PLATF
   THOMAS V, 2000, P WORKSH DEP SYST MI
   WEGDAM M, 2000, P WORKSH REFL MIDDL
   Zinky J. A., 1997, Theory and Practice of Object Systems, V3, P55, DOI 10.1002/(SICI)1096-9942(1997)3:1<55::AID-TAPO6>3.0.CO;2-6
   [No title captured]
NR 38
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2003
VL 33
IS 4
BP 295
EP 320
DI 10.1002/spe.509
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 660QF
UT WOS:000181843300002
DA 2024-07-18
ER

PT J
AU Rouhi, A
   Lano, K
AF Rouhi, Alireza
   Lano, Kevin
TI Towards a pattern-based model transformation framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code smells; design patterns; formal model; model transformation;
   model-driven development; technical debts
ID FORMAL SPECIFICATION; LANGUAGE; ALLOY
AB Model-Driven Development (MDD) is one of the important approaches to develop complex software systems. This approach tries to model a system in high-abstraction level. Then through applying multiple transformations step by step, the model abstraction level is reduced and finally yields to executable code. As a result, Model transformation (MT) plays a pivotal role on the realization of MDD goals. Due to the increasing complexity of software systems, MTs naturally become more complex. Hence, qualitative technical issues may be overlooked or forgotten in these model transformations. To alleviate these issues in terms of technical debts/code smells in MTs, we can apply MT patterns. A main drawback on applying patterns is that most of them are cataloged in informal language. Additionally, construction of a conceptual framework to help MT designers through applying patterns requires a precise specification of the underlying MT patterns. With a formal basis, this paper is trying to realize the proposed framework. Hence, some of the existing well-known MT patterns are formalized. Then based on the identified common technical debts/code smells in MTs, a designer can be directed to apply the appropriate patterns and resolve the detected problems iteratively. For the applicability and functionality of the proposed framework, several examples of problematic model transformations in terms of quality flaws were considered and resolved using the appropriate patterns. We consider the Epsilon Transformation Language (ETL) cases of model transformations in this paper, and other similar MT languages could be treated using the same measures and patterns as well.
C1 [Rouhi, Alireza] Azarbaijan Shahid Madani Univ, Fac Informat Technol & Comp Engn, Tabriz, Iran.
   [Lano, Kevin] Kings Coll London, Dept Informat, London, England.
C3 Azarbaijan Shahid Madani University; University of London; King's
   College London
RP Rouhi, A (corresponding author), Azarbaijan Shahid Madani Univ, Fac Informat Technol & Comp Engn, Tabriz, Iran.
EM rouhi@azaruniv.ac.ir
RI Rouhi, Alireza/L-2209-2018
OI Rouhi, Alireza/0000-0003-1494-3467; Lano, Kevin
   Charles/0000-0002-9706-1410
CR Andoni A., POPL 02 P 29 ACM S P
   Araujo Gomes Ramon, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P740, DOI 10.1145/3422392.3422434
   Bagheri H, 2018, FORM ASP COMPUT, V30, P525, DOI 10.1007/s00165-017-0445-z
   Baresi L, 2006, LECT NOTES COMPUT SC, V4178, P306
   Bonet N, 2018, COMPUT SCI EDUC, V28, P87, DOI 10.1080/08993408.2018.1472950
   Bowen JP, 2001, FACIT, P3
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Buschmann F., 2007, PATTERN ORIENTED SOF, V5
   Clarke EdmundM., 2018, Cyber physical systems series, V2nd
   Demirezen Z., 2009, MODEVVA 09
   Derrick J, 2011, FORM ASP COMPUT, V23, P43, DOI 10.1007/s00165-009-0126-7
   El Boussaidi G, 2007, P INT COMP SOFTW APP, P97
   Ergin H, 2016, COMPUT LANG SYST STR, V46, P106, DOI 10.1016/j.cl.2016.07.004
   Gamma R., 1995, Design_Patterns: Elements_of_Reusable_Object-Oriented_Software
   Giraldo FD, 2015, LECT NOTES BUS INF P, V204, P199, DOI 10.1007/978-3-319-19270-3_13
   He X, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P162, DOI 10.1145/2976767.2976806
   Izurieta C, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P31, DOI 10.1145/2737182.2737193
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jackson D, 2019, COMMUN ACM, V62, P66, DOI 10.1145/3338843
   Kim DK, 2017, J SYST SOFTWARE, V125, P289, DOI 10.1016/j.jss.2016.12.019
   Kim DK, 2015, SOFTWARE PRACT EXPER, V45, P473, DOI 10.1002/spe.2238
   Kolahdouz-Rahimi S, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110684
   Kolahdouz-Rahimi S, 2020, J COMPUT LANG, V59, DOI 10.1016/j.cola.2020.100971
   Kolandouz-Rahimi S, 2014, SCI COMPUT PROGRAM, V85, P5, DOI 10.1016/j.scico.2013.07.013
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Lamo Y., 2011, ELECT COMMUN EASST, P31
   Lano K, 2018, LECT NOTES COMPUT SC, V10888, P127, DOI 10.1007/978-3-319-93317-7_6
   Lano K, 2018, J SYST SOFTWARE, V140, P48, DOI 10.1016/j.jss.2018.03.001
   Lano K, 2014, IEEE T SOFTWARE ENG, V40, P1224, DOI 10.1109/TSE.2014.2354344
   Malik P, 2010, LECT NOTES COMPUT SC, V5977, P377, DOI 10.1007/978-3-642-11811-1_28
   Mokaddem CE, 2022, SOFTW SYST MODEL, V21, P1241, DOI 10.1007/s10270-021-00936-4
   Orejas F, 2009, LECT NOTES COMPUT SC, V5700, P140
   Rekhis S., P 2015 IEEE ACS 12 I
   Rekhis S., 2013, DOMAIN ENG PRODUCT L, P59
   Rouhi A, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2406
   Rouhi A, 2016, INFORM SOFTWARE TECH, V79, P1, DOI 10.1016/j.infsof.2016.06.002
   Rouland Q, 2020, FUTURE GENER COMP SY, V108, P178, DOI 10.1016/j.future.2020.02.033
   Saraiva D, 2021, ICEIS: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P88, DOI 10.5220/0010459100880098
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sun Y., 2008, DOMAIN SPECIFIC PROG, V5, HAL
   van Amstel MF, 2009, LECT NOTES COMPUT SC, V5563, P239, DOI 10.1007/978-3-642-02408-5_17
   Wimmer M, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a2
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
NR 45
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2023
VL 53
IS 9
BP 1815
EP 1849
DI 10.1002/spe.3215
EA MAY 2023
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N8MZ4
UT WOS:000989362900001
DA 2024-07-18
ER

PT J
AU Toroslu, IH
AF Toroslu, Ismail H.
TI The Floyd-Warshall all-pairs shortest paths algorithm for disconnected
   and very sparse graphs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE all-pairs shortest path problem; Dijkstra's algorithm; Floyd-Warshall
   algorithm; Johnson's algorithm; sparse graphs
AB The Floyd-Warshall algorithm is the most popular algorithm for determining the shortest paths between all vertex pairs in a graph. It is a very simple and an elegant algorithm. However, for graphs without any negative weighted edges, using Dijkstra's shortest path algorithm for every vertex as a source vertex to produce all-pairs shortest paths works significantly better than the Floyd-Warshall algorithm, especially for large graphs. Furthermore, for graphs with negative weighted edges, with no negative cycle, in general Johnson's algorithm also performs better than the Floyd-Warshall algorithm for large graphs. Johnson's algorithm first transforms the graph into a non-negative one by using the Bellman-Ford algorithm, then applies the Dijkstra's algorithm to the transformed graph. Thus, mainly, the Floyd-Warshall algorithm is quite inefficient, especially for large graphs. In this paper, we show a simple improvement on the Floyd-Warshall algorithm that will increases its efficiency, especially for very sparse graphs (i.e., the number of its edges is less than the number of its vertices), so it can be used instead of more complicated alternatives. We also show that our approach is also very effective for denser disconnected graphs. Since the new algorithm modifies the original Floyd-Warshall algorithm, it is mainly aimed for directed graphs without negative cycles. Most programmers prefer to implement the Floyd-Warshall algorithm over more complicated but more efficient alternatives for solving all-pairs shortest path problems. In this work, we show that without the addition of any complicated data structures, the performance of the Floyd-Warshall algorithm can be improved very easily. Our practical approach works even better than its alternatives for large sparse graphs.
C1 [Toroslu, Ismail H.] METU, Dept Comp Engn, Ankara, Turkiye.
C3 Middle East Technical University
RP Toroslu, IH (corresponding author), METU, Dept Comp Engn, Ankara, Turkiye.
EM toroslu@metu.edu.tr
RI toroslu, ismail/AAK-3170-2021; TOROSLU, ISMAIL HAKKI/W-4795-2017
OI toroslu, ismail/0000-0002-4524-8232; 
CR Bellman R., 1958, Q APPL MATH, V16, P87
   Brodnik A, 2022, ARS MATH CONTEMP, V22, DOI 10.26493/1855-3974.2467.497
   Brodnik A, 2017, DISCRETE APPL MATH, V231, P119, DOI 10.1016/j.dam.2017.03.008
   Cormen T.H., 2009, INTRO ALGORITHMS
   Demetrescu C, 2004, J ACM, V51, P968, DOI 10.1145/1039488.1039492
   Demetrescu C, 2006, ACM T ALGORITHMS, V2, DOI 10.1145/1198513.1198519
   Dijkstra E. W., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Drobyshevskiy M, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3369782
   Erdos P., 1959, Publicationes Mathematicae Debrecen, V6, P18
   FLOYD RW, 1962, COMMUN ACM, V5, P345, DOI 10.1145/367766.368168
   Ford Lester R., 1956, NETWORK FLOW THEORY, VP- 923
   JOHNSON DB, 1977, J ACM, V24, P1, DOI 10.1145/321992.321993
   KARGER DR, 1993, SIAM J COMPUT, V22, P1199, DOI 10.1137/0222071
   Peres Y, 2013, J ACM, V60, DOI 10.1145/2505988
   Sedgewick R, 1990, ALGORITHMS C
   WARSHALL S, 1962, J ACM, V9, P11, DOI 10.1145/321105.321107
NR 16
TC 2
Z9 2
U1 9
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2023
VL 53
IS 6
BP 1287
EP 1303
DI 10.1002/spe.3188
EA FEB 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E8MO0
UT WOS:000924052000001
DA 2024-07-18
ER

PT J
AU Alongi, F
   Bersani, MM
   Ghielmetti, N
   Mirandola, R
   Tamburri, DA
AF Alongi, Francesco
   Bersani, Marcello M.
   Ghielmetti, Nicolo
   Mirandola, Raffaela
   Tamburri, Damian A.
TI Event-sourced, observable software architectures: An experience report
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design principles; event sourcing; software architecture observability;
   software practice and experience
ID COMPONENT; COHESION
AB The speeding growth of the IT market and the spreading of disruptive technologies are leading towards more and more risky operations in need of constant upkeep, monitoring as well as proactive orchestration. On the one hand, the property allowing a system to be catered by automated monitoring and healing technology is defined as observability . On the other hand, appropriate design principles to manifest observability were originally referred as event sourcing by its inventor Martin Fowler and warrant for the aforementioned sustainable software operations. Both event sourcing and observability are complex to leverage on and design for. In an effort to understand more on both concepts, we offer an experience report on their practical use, featuring: (1) a rigorous definition of software architecture observability and a set of principles to design for observability using augmented forms of well-known design patterns in line with event sourcing; and (2) an impact analysis in the context of a case study. Our study reveals several interesting notions around the concept of observability but our findings also make explicit new architecture trade-offs that software architects and stakeholders need to consider as first-class architecture-level concerns.
C1 [Alongi, Francesco; Bersani, Marcello M.; Ghielmetti, Nicolo; Mirandola, Raffaela] Politecnico Milano, Dipartimento Elettron Informazione & Bioingn DEIB, Milan, Italy.
   [Tamburri, Damian A.] Eindhoven Univ Technol, Jheronimus Acad Data Sci JADS, Eindhoven, Netherlands.
C3 Polytechnic University of Milan; Eindhoven University of Technology
RP Bersani, MM (corresponding author), Politecn Milan, Milan, Italy.
EM marcellomaria.bersani@polimi.it
RI Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961
CR Aagedal J., 2001, THESIS U OSLO
   Abualkishik AZ, 2017, INFORM SOFTWARE TECH, V86, P1, DOI 10.1016/j.infsof.2017.02.005
   Akkermans H., 1999, P 12 WORKSHOP KNOWLE, P147
   ANDREWS GR, 1991, COMPUT SURV, V23, P49, DOI 10.1145/103162.103164
   [Anonymous], 2022, APPENDIX PAPER
   [Anonymous], 2021, Azure
   [Anonymous], 2022, DYNATRACE
   [Anonymous], 2022, GOOGLE DEVOPS MEASUR
   [Anonymous], 2001, SOFTW ENG PROD QUA 1
   [Anonymous], 2022, GRAFANA
   [Anonymous], 2001, Fundamental Concepts of Dependability
   [Anonymous], 2000, Dissertation
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   [Anonymous], 2022, SPLUNK
   [Anonymous], 2022, LOGSTASH
   [Anonymous], 2022, APACHE SKYWALKING
   Apache, 2021, APACHE KAFKA
   ATLEE JM, 1993, IEEE T SOFTWARE ENG, V19, P24, DOI 10.1109/32.210305
   Bass L., 2015, DevOps:_A_software_architect's_perspective
   Bass L, 2012, SEI SERIES SOFTWARE
   Bellomo S, 2015, IEEE SOFTWARE, V32, P38, DOI 10.1109/MS.2015.35
   Bersani MM, 2016, PROC INT CONF SOFTW, P888, DOI 10.1145/2884781.2884832
   Burbeck Steve., APPL PROGRAMMING SMA
   Carey S., 2021, SOFTW MONITOR STEROI
   Cooper K., 2012, MVVM PATTERN
   Debski A, 2018, IEEE SOFTWARE, V35, P62, DOI 10.1109/MS.2017.265095722
   DHAMA H, 1995, J SYST SOFTWARE, V29, P65, DOI 10.1016/0164-1212(94)00128-A
   Erb B., 2014, P 7 INT C SIMULATION, P51
   Eventuate, 2021, EVENTUATE LOCAL
   Eventuate, 2021, SOLVING DISTRIBUTED
   Fowler M., 2021, COMMAND QUERY RESPON
   Fowler M., 2021, EVENT SOURCING
   Galletta Antonino, 2018, 2018 4th International Conference on Big Data Innovations and Applications (Innovate-Data). Proceedings, P25, DOI 10.1109/Innovate-Data.2018.00011
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   Ghezzi C., 2007, TEST ANAL WEB SERVIC, P237
   Google Chrome Team, EV WEB
   Gui G, 2009, J COMPUT, V4, P797
   Hira A., 2016, P 10 ACMIEEE INT S E, P1
   Horvat G, 2017, ADV ENG INFORM, V33, P258, DOI 10.1016/j.aei.2016.10.003
   Hu K., 2021, DATA OBSERVABILITY V
   Huang ZK, 2020, LIBR HI TECH, V38, P610, DOI 10.1108/LHT-09-2018-0131
   Ibrahim AK, 2016, 2016 INTERNATIONAL SYMPOSIUM ON COMPUTER, CONSUMER AND CONTROL (IS3C), P260, DOI 10.1109/IS3C.2016.76
   Jones Capers, 2013, Software Engineering Notes, V38, P1, DOI 10.1145/2492248.2492268
   Kalman R. E., 1963, J SOC IND APPL MATH, V1, P152, DOI [10.1137/0301010, DOI 10.1137/0301010]
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Muller E., 2018, MONITORING OBSERVABI
   Narumoto M., 2021, COMMAND QUERY RESPON
   Narumoto M., 2021, EVENT SOURCING PATTE
   Overeem M, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P193, DOI 10.1109/SANER.2017.7884621
   Paolone G, 2020, COMPUTERS, V9, DOI 10.3390/computers9030056
   Reale A., 2014, THESIS U BOLOGNA ITA
   Richards M., 2016, MICROSERVICES VS SER
   Richardson C., 2021, PATTERN EVENT SOURCI
   Sangkon Han, 2020, ICCDE 2020: Proceedings of 2020 the 6th International Conference on Computing and Data Engineering, P164, DOI 10.1145/3379247.3379290
   Schewe KD, 2005, DATA KNOWL ENG, V54, P147, DOI 10.1016/j.datak.2004.08.005
   Shahin M, 2019, EMPIR SOFTW ENG, V24, P1061, DOI 10.1007/s10664-018-9651-4
   SHELLEY M, 1984, J AM STAT ASSOC, V79, P240, DOI 10.2307/2288384
   Splunk, 2021, WHAT IS OBSERVABILIT
   Taligent I., 1996, MVP MODEL VIEW PRESE
   Tamburri DA, 2018, LECT NOTES COMPUT SC, V11116, P49, DOI 10.1007/978-3-319-99819-0_4
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Taylor RN, 1996, IEEE T SOFTWARE ENG, V22, P390, DOI 10.1109/32.508313
   Toffetti G., 2015, AIMC 15, P19, DOI [10.1145/2747470.2747474, DOI 10.1145/2747470.2747474]
   Wohlin C., 2012, Experimentation in Software Engineering
NR 65
TC 0
Z9 0
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2127
EP 2151
DI 10.1002/spe.3116
EA JUL 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000820832100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Frantz, RZ
   Sawicki, S
   Roos-Frantz, F
   Basso, FP
   Zucoloto, B
   Pillat, RM
AF Frantz, Rafael Z.
   Sawicki, Sandro
   Roos-Frantz, Fabricia
   Basso, Fabio P.
   Zucoloto, Benjamim
   Pillat, Raquel M.
TI On the analysis of makespan and performance of the task-based execution
   model for enterprise application integration platforms: An empirical
   study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Big data; enterprise application integration; integration framework;
   integration platform; large volumes of data; makespan; performance
   analysis
ID WORKFLOW; SYSTEMS; INFRASTRUCTURE; ALLOCATION; ALGORITHM
AB Increasingly enterprises rely on software applications to support their business processes. Since such processes are continually evolving to keep up with market dynamism, companies strive to increase their efficiency, for example, by optimising the integration of applications supporting these processes. Integration platforms are specialised software tools that allow creating integration processes so that applications can share data and functionality. However, this integration involves several challenges, especially when large volumes of heterogeneous data should be integrated and shared. The performance of an integration process, in terms of message processing, is directly related to the run-time system of the integration platform. This article investigates the impact of the volume of messages and the number of threads used by a run-time system on makespan and performance of an integration process. The greater is the number of messages per second received by the integration process, the high is the volume of messages. The study was based on a run-time system with task-based execution model and follows a strict protocol to conduct and report our empirical study. We observed an increment of makespan when increasing the volume of messages to integration processes and different behaviours when increasing the number of threads used in their executions. Makespan reduces as the number of threads increases, but only when the volume of inbound messages is not very high. We confirmed that there is a performance gain by increasing the number of threads to execute an integration process, but observed that the continuous increment of threads leads to degradation of the performance in this model.
C1 [Frantz, Rafael Z.; Sawicki, Sandro; Roos-Frantz, Fabricia; Zucoloto, Benjamim] Unijui Univ, Ijui, Brazil.
   [Basso, Fabio P.] Fed Univ Pampa, Bage, Brazil.
   [Pillat, Raquel M.] Univ Fed Rio de Janeiro, Rio De Janeiro, Brazil.
C3 Universidade Regional do Noroeste do Estado do Rio Grande do Sul -
   UNIJUI; Universidade Federal do Pampa; Universidade Federal do Rio de
   Janeiro
RP Frantz, RZ (corresponding author), Unijui Univ, Ijui, Brazil.
EM rzfrantz@unijui.edu.br
RI Frantz, Rafael Z./J-9521-2012; Roos-Frantz, Fabricia/Y-6059-2018;
   Zucolotto, Benjamim/E-3797-2015
OI Frantz, Rafael Z./0000-0003-3740-7560; Roos-Frantz,
   Fabricia/0000-0001-9514-6560; Zucolotto, Benjamim/0000-0001-9129-7206;
   Basso, Fabio/0000-0003-4275-0638; Sawicki, Sandro/0000-0002-7960-0775;
   Mainardi Pillat, Raquel/0000-0002-5420-6966
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [309315/2020-4]; Coordenacao de Aperfeicoamento de Pessoal de Nivel
   Superior [88881.136207/2017-01]; Fundacao de Amparo a Pesquisa do Estado
   do Rio Grande do Sul [17/2551-0001206-2]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Number: 309315/2020-4; Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior, Grant/Award Number: 88881.136207/2017-01;
   Fundacao de Amparo a Pesquisa do Estado do Rio Grande do Sul,
   Grant/Award Number: 17/2551-0001206-2
CR Abdi S., 2014, INT C MACH LEARN EL
   Alkhanak EN, 2016, J SYST SOFTWARE, V113, P1, DOI 10.1016/j.jss.2015.11.023
   Almi'ani K, 2018, COMPUT NETW, V146, P232, DOI 10.1016/j.comnet.2018.10.003
   Amalarethinam D.I.G., 2012, P INT C COMP COMM IN, P1
   [Anonymous], 2011, ACM SIGMETRICS PERFO
   Asghari A, 2020, SOFT COMPUT, V24, P16177, DOI 10.1007/s00500-020-04931-7
   Aziz MA., 2018, INDONES J ELECT ENG, V12, P482
   Blythe J, 2005, 2005 IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, VOLS 1 AND 2, P759
   Boehm M, 2011, INFORM SYST, V36, P3, DOI 10.1016/j.is.2010.06.007
   Brahmi Z., 2014, International Conference on Business Information Systems, P73
   Chen WN, 2009, IEEE T SYST MAN CY C, V39, P29, DOI 10.1109/TSMCC.2008.2001722
   Chirkin AM, 2017, FUTURE GENER COMP SY, V75, P376, DOI 10.1016/j.future.2017.01.011
   da Silva R.F., 2013, P 8 WORKSHOP WORKFLO, P58
   da Silva RF, 2017, FUTURE GENER COMP SY, V75, P228, DOI 10.1016/j.future.2017.02.026
   da Silva RF, 2015, PARALLEL PROCESS LET, V25, DOI 10.1142/S0129626415410030
   Daniel F, 2011, COMM COM INF SC, V253, P189
   Deelman E, 2017, INT J HIGH PERFORM C, V31, P4, DOI 10.1177/1094342015594515
   Durillo JJ, 2014, FUTURE GENER COMP SY, V36, P221, DOI 10.1016/j.future.2013.07.005
   Bittencourt LF, 2011, J INTERNET SERV APPL, V2, P207, DOI 10.1007/s13174-011-0032-0
   Frantz RZ, 2016, J SYST SOFTWARE, V111, P89, DOI 10.1016/j.jss.2015.08.044
   Frantz RZ, 2012, J SYST SOFTWARE, V85, P480, DOI 10.1016/j.jss.2011.10.048
   Freire DL, 2019, SOFTWARE PRACT EXPER, V49, P341, DOI 10.1002/spe.2670
   Ghafouri R, 2019, PEER PEER NETW APPL, V12, P241, DOI 10.1007/s12083-018-0662-0
   Grinstead C.M., 1997, Introduction to Probability
   Gunter D., 2011, Proceedings of the 7th International Conference on Network and Services Management, P152
   Guo FY, 2015, INT J COMMUN SYST, V28, P1053, DOI 10.1002/dac.2743
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hohpe G, 2005, IEEE SOFTWARE, V22, P64, DOI 10.1109/MS.2005.52
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   Huang KC, 2015, J SUPERCOMPUT, V71, P217, DOI 10.1007/s11227-014-1294-7
   Janetschek M, 2017, FUTURE GENER COMP SY, V75, P330, DOI 10.1016/j.future.2017.02.029
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Jia R., 2020, INF SOFTW TECHNOL
   Juve G, 2015, IEEE INT C CL COMP, P650, DOI 10.1109/CLUSTER.2015.115
   Kanai K, 2016, P INT C INF AN, VPP, P1
   Lee H, 2008, INT J PROD ECON, V111, P105, DOI 10.1016/j.ijpe.2007.01.003
   Linthicum DS, 2017, IEEE CLOUD COMPUT, V4, P50, DOI 10.1109/MCC.2017.47
   Ma TH, 2014, IETE TECH REV, V31, P4, DOI 10.1080/02564602.2014.890837
   Malawski M, 2014, LECT NOTES COMPUT SC, V8384, P251, DOI 10.1007/978-3-642-55224-3_24
   Manasrah AM, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/1934784
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Masdari M, 2020, J SUPERCOMPUT, V76, P499, DOI 10.1007/s11227-019-03038-7
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Pinto G, 2014, ACM SIGPLAN NOTICES, V49, P345, DOI [10.1145/2714064.2660235, 10.1145/2660193.2660235]
   Pouchard L., 2017, CAPTURING PROVENANCE, P1
   Ritter D, 2017, IEEE INT ENTERP DIST, P103, DOI 10.1109/EDOC.2017.23
   Ritter D, 2017, INFORM SYST, V67, P36, DOI 10.1016/j.is.2017.03.003
   Rodrigues A. F., 2011, Performance Evaluation Review, V38, P37, DOI 10.1145/1964218.1964225
   Romero D, 2016, COMPUT IND, V79, P3, DOI 10.1016/j.compind.2016.03.001
   Samak T., 2011, Proceedings of the 2011 IEEE 13th International Conference on High Performance Computing and Communication (HPCC 2011). 2011 IEEE International Workshop on Future Trends of Distributed Computing Systems (FTDCS 2011). Workshops of the 2011 International Conference on Ubiquitous Intelligence and Computing (UIC 2011). Workshops of the 2011 International Conference on Autonomic and Trusted Computing (ATC 2011), P373, DOI 10.1109/HPCC.2011.55
   Simiscuka AA, 2017, IEEE INT CONF COMM, P271, DOI 10.1109/ICCW.2017.7962669
   Spafford KL, 2012, INT CONF HIGH PERFOR
   Stratan C, 2008, 2008 9TH IEEE/ACM INTERNATIONAL CONFERENCE ON GRID COMPUTING, P25, DOI 10.1109/GRID.2008.4662779
   Torre E, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106390
   Vahi K, 2013, J GRID COMPUT, V11, P381, DOI 10.1007/s10723-013-9265-4
   Wang XF, 2011, FUTURE GENER COMP SY, V27, P1124, DOI 10.1016/j.future.2011.03.008
   Zhou JL, 2019, J SYST ARCHITECT, V100, DOI 10.1016/j.sysarc.2019.08.004
   Zuoxian Nie, 2009, 2009 6th International Conference on Service Systems and Service Management (ICSSSM), P865, DOI 10.1109/ICSSSM.2009.5175003
NR 58
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2022
VL 52
IS 7
BP 1717
EP 1735
DI 10.1002/spe.3085
EA MAR 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1X8ZE
UT WOS:000773676000001
DA 2024-07-18
ER

PT J
AU Zini, M
   Cicero, G
   Casini, D
   Biondi, A
AF Zini, Matteo
   Cicero, Giorgiomaria
   Casini, Daniel
   Biondi, Alessandro
TI Profiling and controlling I/O-related memory contention in COTS
   heterogeneous platforms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE I; O regulators; memory contention; memory regulators
ID FRAMEWORK; SYSTEMS; MODEL
AB Motivated by the increasing number of embedded applications that make use of traffic-intensive I/O devices, this work studies the memory contention generated by I/O devices and investigates on the regulation of the bus traffic they generate by means of COTS regulators, namely the QoS-400 by Arm. To this purpose, the behavior of the QoS-400 regulators is analytically characterized and then, taking the Xilinx Ultrascale+ as a reference modern heterogeneous platform, a software infrastructure to control such regulators from Linux is proposed. As an experience report, this article presents the results of an extensive experimental evaluation, based on both benchmarks and microbenchmarks, aimed at validating the effectiveness of QoS-400 regulators in predictably controlling I/O-related memory traffic, as well as assessing the impact of the regulation on software applications and I/O devices themselves.
C1 [Zini, Matteo; Cicero, Giorgiomaria; Casini, Daniel; Biondi, Alessandro] Scuola Super Sant Anna, TeCIP Inst, Pisa, Italy.
   [Casini, Daniel; Biondi, Alessandro] Scuola Super Sant Anna, Dept Excellence Robot & AI, Pisa, Italy.
C3 Scuola Superiore Sant'Anna; Scuola Superiore Sant'Anna
RP Zini, M (corresponding author), Scuola Super Sant Anna, TeCIP Inst, Pisa, Italy.
EM matteo.zini@santannapisa.it
RI Biondi, Alessandro/KDO-0511-2024; Biondi, Alessandro/GSG-5989-2022
OI Biondi, Alessandro/0000-0002-6625-9336; Casini,
   Daniel/0000-0003-4719-3631; Zini, Matteo/0000-0003-2750-7437
FU Huawei Technologies; Italian Ministry of University and Research
   (MIUR)/SPHERE project PRIN [93008800505]
FX Huawei Technologies; Italian Ministry of University and Research
   (MIUR)/SPHERE project PRIN 2017, Grant/Award Number: 93008800505
CR Aghilinasab H, 2020, IEEE T COMPUT AID D, V39, P3348, DOI 10.1109/TCAD.2020.3012210
   Agrawal A, 2018, REAL TIM SYST SYMP P, P230, DOI 10.1109/RTSS.2018.00040
   Akesson B., 2007, 2007 5th IEEE/ACM/IFIP International Conference on Hardware/Software Codesign and System Synthesis (CODES+ISSS), P251
   Akesson B, 2011, DES AUT TEST EUROPE, P851
   ARM, 2016, ARM COR QOS 400 NETW
   Awan MA, 2018, DES AUT TEST EUROPE, P1277, DOI 10.23919/DATE.2018.8342211
   Awan MF, 2019, INT SYM MED INFORM, P120, DOI 10.1109/ismict.2019.8743933
   Bak S, 2009, REAL TIM SYST SYMP P, P193, DOI 10.1109/RTSS.2009.41
   Becker M, 2016, PROC EUROMICR, P14, DOI 10.1109/ECRTS.2016.14
   Betti E, 2013, IEEE T COMPUT, V62, P45, DOI 10.1109/TC.2011.202
   Biondi A, 2018, IEEE REAL TIME, P240, DOI 10.1109/RTAS.2018.00032
   Boniol Frederic, 2012, Architecture of Computing Systems - ARCS 2012. Proceedings 25th International Conference, P98, DOI 10.1007/978-3-642-28293-5_9
   Capodieci N, 2017, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON REAL-TIME NETWORKS AND SYSTEMS (RTNS 2017), P48, DOI 10.1145/3139258.3139270
   Casini D., 2020, P P 26 IEEE REAL TIM
   Casini D., 2021, P 27 IEEE REAL TIME
   Casini D, 2020, DES AUT CON, DOI 10.1109/dac18072.2020.9218640
   CAST, 2016, Position Paper CAST-32A Multi-core Processors
   CRUZ RL, 1991, IEEE T INFORM THEORY, V37, P114, DOI 10.1109/18.61109
   Dasari D, 2016, REAL-TIME SYST, V52, P272, DOI 10.1007/s11241-015-9229-9
   Davis RI, 2018, REAL-TIME SYST, V54, P607, DOI 10.1007/s11241-017-9285-4
   Durrieu G, 2014, Embedded Real Time Software
   Fan GS, 2018, SOFTWARE PRACT EXPER, V48, P1536, DOI 10.1002/spe.2590
   Farshchi F., 2020, P 2020 IEEE REAL TIM
   Flodin Jonas, 2014, Proceedings of the 2014 9th IEEE International Symposium on Industrial Embedded Systems (SIES 2014), P151, DOI 10.1109/SIES.2014.6871199
   Gracioli G., 2015, SURVEY CACHE MANAGEM
   Hassan M., 2020, P 32 EUROMICRO C REA
   Hassan M, 2018, IEEE T COMPUT AID D, V37, P2323, DOI 10.1109/TCAD.2018.2857379
   Hebbache F, 2020, REAL-TIME SYST, V56, P124, DOI 10.1007/s11241-019-09336-w
   Jiang Z., 2017, P 29 EUROMICRO C REA
   Jiang Z, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3309765
   Jiang Z, 2018, IEEE REAL TIME, P75, DOI 10.1109/RTAS.2018.00013
   Jiang Z, 2017, DES AUT TEST EUROPE, P806, DOI 10.23919/DATE.2017.7927099
   Kim H, 2014, IEEE REAL TIME, P145, DOI 10.1109/RTAS.2014.6925998
   Kim N, 2020, REAL-TIME SYST, V56, P349, DOI 10.1007/s11241-020-09351-2
   Kim N, 2018, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON REAL-TIME NETWORKS AND SYSTEMS (RTNS 2018), DOI 10.1145/3273905.3273911
   Kloda T, 2019, IEEE REAL TIME, P1, DOI 10.1109/RTAS.2019.00009
   Lu ZH, 2009, DES AUT TEST EUROPE, P578
   Maiza C, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3323212
   Mancuso R., 2017, P 29 EUROMICRO C REA
   Mancuso R, 2015, EUROMICRO, P174, DOI 10.1109/ECRTS.2015.23
   Mirosanlou R, 2020, IEEE REAL TIME, P82, DOI 10.1109/RTAS48715.2020.00-15
   Modica P, 2018, IEEE INT CONF INDUST, P1651, DOI 10.1109/ICIT.2018.8352429
   Nowotsch J., 2013, Proceedings of the 21st International Conference on Real-Time Networks and Systems, P151, DOI DOI 10.1145/2516821.2516826
   Pagani M., 2019, P 31 EUROMICRO C REA
   Paolieri M, 2009, IEEE EMBED SYST LETT, V1, P86, DOI 10.1109/LES.2010.2041634
   Pazzaglia P., 2021, P 58 DESIGN AUTOMATI
   Pellizzoni R, 2007, RTSS 2007: 28TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P73
   Pellizzoni R, 2011, IEEE REAL TIME, P269, DOI 10.1109/RTAS.2011.33
   Pellizzoni R, 2010, IEEE T COMPUT, V59, P400, DOI 10.1109/TC.2009.156
   Pellizzoni R, 2008, REAL TIM SYST SYMP P, P221, DOI 10.1109/RTSS.2008.42
   Restuccia F., 2020, P 32 EUROMICRO C REA
   Restuccia F, 2020, DES AUT CON, DOI 10.1109/dac18072.2020.9218652
   Rouxel B., 2019, P 31 EUROMICRO C REA
   Rouxel B, 2017, ACM T EMBED COMPUT S, V16, DOI 10.1145/3126496
   Serrano-Cases A., 2021, ECRTS
   Sohal P, 2020, REAL TIM SYST SYMP P, P345, DOI 10.1109/RTSS49844.2020.00039
   Stiliadis D, 1998, IEEE ACM T NETWORK, V6, P611, DOI 10.1109/90.731196
   Suzuki N, 2013, IEEE INT C COMPUT, P685, DOI 10.1109/CSE.2013.106
   Tabish R., 2016, IEEE REAL TIME
   Tabish R, 2019, REAL-TIME SYST, V55, P850, DOI 10.1007/s11241-019-09340-0
   Tessler C, 2016, PROCEEDINGS OF 2016 IEEE REAL-TIME SYSTEMS SYMPOSIUM (RTSS), P279, DOI [10.1109/RTSS.2016.11, 10.1109/RTSS.2016.035]
   Valsan PK, 2016, IEEE REAL TIME
   Venkata SK, 2009, I S WORKL CHAR PROC, P55, DOI 10.1109/IISWC.2009.5306794
   Wu S, 2022, SOFTWARE PRACT EXPER, V52, P337, DOI 10.1002/spe.3016
   Xiao J, 2020, IEEE T COMPUT, V69, P1487, DOI 10.1109/TC.2020.2974224
   Yun H., 2015, P 2015 27 EUROMICRO
   Yun H, 2014, IEEE REAL TIME, P155, DOI 10.1109/RTAS.2014.6925999
   Yun H, 2013, IEEE REAL TIME, P55, DOI 10.1109/RTAS.2013.6531079
   Zhao S., 2020, P INT C OPT NETW DES, P1
NR 69
TC 10
Z9 10
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2022
VL 52
IS 5
BP 1095
EP 1113
DI 10.1002/spe.3053
EA NOV 2021
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0G4IQ
UT WOS:000716816400001
DA 2024-07-18
ER

PT J
AU Soldani, J
   Muntoni, G
   Neri, D
   Brogi, A
AF Soldani, Jacopo
   Muntoni, Giuseppe
   Neri, Davide
   Brogi, Antonio
TI The <i>μ</i>TOSCA toolchain: Mining, analyzing, and refactoring
   microservice-based architectures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architectural smells; microservices; refactoring; software architecture
   mining
AB Exploiting microservices to architect enterprise applications is becoming commonplace. This makes it crucial to provide some support for designing and analyzing microservice-based applications, for example, for understanding whether a microservice-based application adheres to the main design principles of microservices and for choosing how to refactor it when this is not the case. To provide such support, in this article we present the mu Topology and Orchestration Specification for Cloud Applications (TOSCA) toolchain. More precisely, we first introduce the mu TOSCA model to represent the architecture of microservice-based applications with the OASIS standard TOSCA. We then describe a technique to automatically mine the architecture of a microservice-based application and represent it with mu TOSCA, given the Kubernetes deployment of the application. We also present a methodology to analyze the mu TOSCA representation of a microservice-based architecture to systematically identify the architectural smells potentially affecting the corresponding application and to resolve them. Finally, we present two prototype tools, mu Miner and mu Freshener, implementing our mining solution and the support for identifying and resolving architectural smells in microservice-based applications, respectively. We then assess -by discussing some case studies- how effectively mu Miner, mu Freshener, and the mu TOSCA toolchain can support researchers and practitioners working with microservices.
C1 [Soldani, Jacopo; Muntoni, Giuseppe; Neri, Davide; Brogi, Antonio] Univ Pisa, Dept Comp Sci, Largo B Pontecorvo 3, I-56127 Pisa, Italy.
C3 University of Pisa
RP Soldani, J (corresponding author), Univ Pisa, Dept Comp Sci, Largo B Pontecorvo 3, I-56127 Pisa, Italy.
EM soldani@di.unipi.it
RI Brogi, Antonio/HLQ-2040-2023; Soldani, Jacopo/O-5057-2019
OI Soldani, Jacopo/0000-0002-2435-3543; Brogi, Antonio/0000-0003-2048-2468
CR Alshuqayran N, 2018, PAPER PRESENTED P 20, P4701
   [Anonymous], 2016, SPIGO
   [Anonymous], 2020, SOURCEGRAPH APPDASH
   [Anonymous], P INT COMP SOFTW APP
   [Anonymous], 2020, SOCK SHOP MICROSERVI
   [Anonymous], 2020, NETFLIX CONDUCTOR
   [Anonymous], 2020, ISTIO SIDECAR
   [Anonymous], 2020, DOCUMENTATION MONGOD
   [Anonymous], 2020, Kubernetes documentation
   Arcelli D, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P639, DOI [10.1109/saner.2019.8667967, 10.1109/SANER.2019.8667967]
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Ben Coleman, 2020, KUBEVIEW
   Brogi A, 2018, SOFTWARE PRACT EXPER, V48, P1461, DOI 10.1002/spe.2583
   Camilli M, 2018, LECT NOTES COMPUT SC, V10729, P187, DOI 10.1007/978-3-319-74781-1_14
   Cardarelli M, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1225, DOI 10.1145/3297280.3297400
   De Iasio A, 2021, SOFTWARE PRACT EXPER, V51, P25, DOI 10.1002/spe.2877
   Familiar B., 2015, MICROSERVICES IOT AZ
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Granchelli G, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P46, DOI 10.1109/ICSAW.2017.48
   Granchelli G, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P298, DOI 10.1109/ICSAW.2017.9
   Guidi C., Present and Ulterior Software Engineering, DOI 10.1007/978-3-319-67425-4_13
   Haselböck S, 2017, LECT NOTES COMPUT SC, V10475, P155, DOI 10.1007/978-3-319-65831-5_11
   Hassan S, 2020, SOFTWARE PRACT EXPER, V50, P1651, DOI 10.1002/spe.2869
   Hassan S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P1, DOI 10.1109/ICSA.2017.32
   Hassan S, 2016, P IEEE I C SERV COMP, P813, DOI 10.1109/SCC.2016.113
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   Indrasiri K., 2019, MICROSERVICES PRACTI
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Joseph CT, 2019, SOFTWARE PRACT EXPER, V49, P1448, DOI 10.1002/spe.2729
   Karfakis P, 2018, Institutions, economic freedom and structural transformation in 11 sub-Saharan African countries, P1, DOI DOI 10.1145/3242163.3242164
   Kopp O, 2013, LECT NOTES COMPUT SC, V8274, P700, DOI 10.1007/978-3-642-45005-1_64
   Korab Jakub., 2017, Understanding Message Brokers [Book]
   Larsson L, 2020, SOFTWARE PRACT EXPER, V50, P1986, DOI 10.1002/spe.2885
   Lewis James, 2014, Microservices
   Mora M, 2018, SOFTWARE PRACT EXPER, V48, P263, DOI 10.1002/spe.2547
   Muntoni G, 2020, PAPER PRESENTED P AD
   Neri D, 2020, SICS SOFTWARE, V35, P3, DOI 10.1007/s00450-019-00407-8
   Newman S., 2015, BUILDING MICROSERVIC
   OASIS, 2020, OASIS TOSCA SIMPLE P
   Pigazzini I, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P92, DOI 10.1145/3387906.3388625
   Rademacher Florian, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P311, DOI 10.1007/978-3-030-49418-6_21
   Redis.io, 2020, REDIS SERIALIZATION
   Richardson C., 2019, Microservices Patterns
   Sanchez A, 2015, LECT NOTES COMPUT SC, V8938, P147, DOI 10.1007/978-3-319-15201-1_10
   Savchenko DI, 2015, 2015 8TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P235, DOI 10.1109/MIPRO.2015.7160271
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   Terzic B, 2018, ENTERP INF SYST-UK, V12, P1034, DOI 10.1080/17517575.2018.1460766
   Vidal S, 2015, 2015 34TH INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY (SCCC)
   Wurster M, 2020, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P171, DOI 10.5220/0009571001710180
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 53
TC 15
Z9 16
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2021
VL 51
IS 7
BP 1591
EP 1621
DI 10.1002/spe.2974
EA APR 2021
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO3PJ
UT WOS:000636642300001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Xiao, L
   Meng, Y
   Tian, XB
   Luo, HB
AF Xiao, Ling
   Meng, Yu
   Tian, Xiaobing
   Luo, Haibo
TI Energy allocation for activity recognition in wearable devices with
   kinetic energy harvesting
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE activity recognition; energy allocation; kinetic energy harvesting;
   Lyapunov optimization
AB Harvesting kinetic energy from body movement is regarded as a promising rechargeable energy source for wearable devices with low-power. Energy allocation is essential for motion-based rechargeable devices since the great variability of energy gained from movement. Based on the realistic characteristics of an ultra-low-power wearable devices and our measurement observations, we propose the optimization framework allocating energy to maximize the average accuracy of human activity recognition and provide an offline and online algorithm, respectively. We evaluate the proposed energy allocation approach with real-world human activity and kinetic energy harvesting datasets. Experimental results validate that our proposed energy allocation approach can maximize the energy allocation utility and improve energy efficiency of wearable devices.
C1 [Xiao, Ling] Hunan Univ, Coll Comp Sci & Elect Engn, Changsha, Peoples R China.
   [Meng, Yu] Guangdong Univ Sci & Technol, Coll Comp Sci, Dongguan, Peoples R China.
   [Tian, Xiaobing] Hunan Univ, Key Lab Embedded & Network Comp Hunan Prov, Changsha, Peoples R China.
   [Luo, Haibo] Minjiang Univ, Coll Comp & Control Engn, Fuzhou, Fujian, Peoples R China.
C3 Hunan University; Guangdong University of Science & Technology; Hunan
   University; Minjiang University
RP Xiao, L (corresponding author), Hunan Univ, Coll Comp Sci & Elect Engn, Changsha, Peoples R China.
EM xiaoling@hnu.edu.cn
RI MENG, Yuxian/AAE-6610-2022
FU National Natural Science Foundation of China [61300219]
FX National Natural Science Foundation of China, Grant/Award Number:
   61300219
CR Amirnavaei F, 2016, IEEE T WIREL COMMUN, V15, P4888, DOI 10.1109/TWC.2016.2548459
   [Anonymous], 2017, DEVICE DIGITAL ACCEL, P1
   Ashraf M, 2019, IEEE SIGNAL PROC LET, V26, P24, DOI 10.1109/LSP.2018.2878947
   Calvo-Fullana M, 2018, IEEE T SIGNAL PROCES, V66, P3363, DOI 10.1109/TSP.2018.2833814
   Chen, 2019, J SENSORS, V19, P227
   Chen SB, 2012, IEEE INFOCOM SER, P379, DOI 10.1109/INFCOM.2012.6195775
   Chen YK, 2018, IEEE ACCESS, V6, P20572, DOI 10.1109/ACCESS.2018.2825648
   Cong PJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3378935
   Deng RL, 2016, IEEE J SEL AREA COMM, V34, P1307, DOI 10.1109/JSAC.2016.2520181
   Fallahzadeh R, 2016, PR IEEE COMP DESIGN, P428, DOI 10.1109/ICCD.2016.7753320
   Ganesan D., 2010, P 8 INT C MOB SYST A
   Gao N, 2020, J CIRCUIT SYST COMP, V29, DOI 10.1142/S0218126620502035
   Geissdoerfer K, 2019, IPSN '19: PROCEEDINGS OF THE 2019 INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS, P109, DOI 10.1145/3302506.3310393
   Gorlatova M, 2015, IEEE J SEL AREA COMM, V33, P1624, DOI 10.1109/JSAC.2015.2391690
   Gorlatova M, 2013, IEEE T MOBILE COMPUT, V12, P1853, DOI 10.1109/TMC.2012.154
   Guo S., 2013, J IEEE T MOB COMPUT, V17, p1524
   Do HT, 2018, IEEE T IND ELECTRON, V65, P1316, DOI 10.1109/TIE.2017.2733424
   Huang LB, 2013, IEEE ACM T NETWORK, V21, P1117, DOI 10.1109/TNET.2012.2230336
   Iwendi C, 2021, SOFTWARE PRACT EXPER, V51, P2558, DOI 10.1002/spe.2797
   Jaber AS, 2021, SOFTWARE PRACT EXPER, V51, P271, DOI 10.1002/spe.2904
   Ju QA, 2018, IEEE SENS J, V18, P4336, DOI 10.1109/JSEN.2018.2820644
   Khalifa S, 2015, INT CONF PERVAS COMP, P79, DOI 10.1109/PERCOM.2015.7146512
   Li KQ, 2012, J PARALLEL DISTR COM, V72, P902, DOI 10.1016/j.jpdc.2012.03.001
   Li QZ, 2019, IEEE T VEH TECHNOL, V68, P2791, DOI 10.1109/TVT.2019.2892770
   Li YZ, 2017, IEEE T AUTOMAT CONTR, V62, P277, DOI 10.1109/TAC.2016.2553128
   Lv XQ, 2018, LECT NOTES ELECTR EN, V483, P1, DOI 10.1007/978-981-10-7989-4_1
   Noh DK, 2012, WIREL COMMUN MOB COM, V12, P379, DOI 10.1002/wcm.965
   Nourian M, 2014, IEEE T AUTOMAT CONTR, V59, P2128, DOI 10.1109/TAC.2014.2319011
   Tanganelli G, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19030693
   Wu GY, 2018, ALGORITHMS, V11, DOI 10.3390/a11020014
   Xiao L, 2021, SOFTWARE PRACT EXPER, V51, P2185, DOI 10.1002/spe.2958
   Xie GQ, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3782
   Xu J, 2014, IEEE J SEL AREA COMM, V32, P322, DOI 10.1109/JSAC.2014.141212
   Xu WQ, 2015, IEEE T WIREL COMMUN, V14, P2814, DOI 10.1109/TWC.2015.2394799
   Yu H, 2019, IEEE ACM T NETWORK, V27, P1501, DOI 10.1109/TNET.2019.2926403
   Zhang D, 2019, IEEE SENS J, V19, P3772, DOI 10.1109/JSEN.2018.2890078
   Zhang YM, 2013, IEEE T WIREL COMMUN, V12, P3096, DOI 10.1109/TCOMM.2013.050613.121698
   Zhong S, 2018, IEEE INTERNET THINGS, V5, P2781, DOI 10.1109/JIOT.2018.2828851
   Zhou JL, 2020, IEEE T SERV COMPUT, V13, P745, DOI 10.1109/TSC.2019.2963301
NR 39
TC 4
Z9 4
U1 2
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2185
EP 2202
DI 10.1002/spe.2958
EA MAR 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000623518400001
DA 2024-07-18
ER

PT J
AU Zhou, ZY
   Yu, HQ
   Fan, GS
AF Zhou, Ziyi
   Yu, Huiqun
   Fan, Guisheng
TI Effective approaches to combining lexical and syntactical information
   for code summarization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code summarization; deep learning; program comprehension
ID NEURAL-NETWORKS
AB Natural language summaries of source codes are important during software development and maintenance. Recently, deep learning based models have achieved good performance on the task of automatic code summarization, which encode token sequence or abstract syntax tree (AST) of code with neural networks. However, there has been little work on the efficient combination of lexical and syntactical information of code for better summarization quality. In this paper, we propose two general and effective approaches to leveraging both types of information: a convolutional neural network that aims to better extract vector representation of AST node for downstream models; and a Switch Network that learns an adaptive weight vector to combine different code representations for summary generation. We integrate these approaches into a comprehensive code summarization model, which includes a sequential encoder for token sequence of code and a tree based encoder for its AST. We evaluate our model on a large Java dataset. The experimental results show that our model outperforms several state-of-the-art models on various metrics, and the proposed approaches contribute a lot to the improvements.
C1 [Zhou, Ziyi; Yu, Huiqun; Fan, Guisheng] East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai, Peoples R China.
   [Yu, Huiqun] Shanghai Engn Res Ctr Smart Energy, Shanghai, Peoples R China.
C3 East China University of Science & Technology
RP Yu, HQ (corresponding author), East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai, Peoples R China.
EM yhq@ecust.edu.cn
OI Zhou, Ziyi/0000-0002-8267-8178
FU Educational Research Fund of ECUST [ZH1726108]; National Natural Science
   Foundation of China [61702334, 61772200]; Natural Science Foundation of
   Shanghai [17ZR1406900, 17ZR1429700]; Shanghai Pujiang Talent Program
   [17PJ1401900]
FX Educational Research Fund of ECUST, Grant/Award Number: ZH1726108;
   National Natural Science Foundation of China, Grant/Award Numbers:
   61702334, 61772200; Natural Science Foundation of Shanghai, Grant/Award
   Numbers: 17ZR1406900, 17ZR1429700; Shanghai Pujiang Talent Program,
   Grant/Award Number: 17PJ1401900
CR Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U, 2019, 7 INT C LEARN REPR N
   [Anonymous], 2014, ABS14091259 CORR
   [Anonymous], 2018, P INT C LEARNING REP
   Banerjee S., 2005, P WORKSHOP INTRINSIC, P65
   Carioca V, 2019, PIXEL-BIT, P7, DOI 10.12795/pixelbit.2019.i56.01
   Chen Boxing, 2014, P 9 WORKSHOP STAT MA, P362, DOI DOI 10.3115/V1/W14-3346
   Chen X, 2018, WORKSH TRACK 6 INT C
   Cho K., 2014, ARXIV14061078
   Cho SY, 2003, IEEE T NEURAL NETWOR, V14, P781, DOI 10.1109/TNN.2003.813831
   Eriguchi A, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P823
   Glorot X., 2010, INT C ARTIFICIAL INT, P249
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haiduc S, 2010, P 32 ACM IEEE INT C, V2
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Iyer S, 2016, 54 ANN M ASS COMP LI
   King DB, 2015, ACS SYM SER, V1214, P1
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Liang Y, 2018, P 32 AAAI C ART INT
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Luong T., 2015, P 2015 C EMP METH NA, DOI [DOI 10.18653/V1/D15-1166, 10.18653/v1/D15-1166]
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Movshovitz-Attias D, 2013, P 51 ANN M ASS COMP, V2
   Nair V., 2010, P 27 INT C MACHINE L, P807
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Qu C, 2018, FARADAY DISCUSS, V212, P33, DOI 10.1039/c8fd00077h
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Sridhara G, 2010, 25 IEEE ACM INT C AU
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sutskever I, 2014, ADV NEUR IN, V27
   Tai KS, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1556
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wei B, 2019, ADV NEURAL INFORM PR
   Wong E, 2015, SOFTW AN EV REENG SA
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Wu Y., 2016, GOOGLES NEURAL MACHI
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhou ZH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3553
NR 45
TC 9
Z9 13
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2020
VL 50
IS 12
BP 2313
EP 2336
DI 10.1002/spe.2893
EA SEP 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OO7CG
UT WOS:000572222500001
DA 2024-07-18
ER

PT J
AU Huang, MH
   Yang, W
AF Huang, Ming Hsiang
   Yang, Wuu
TI PFACC: An OpenACC-like programming model for irregular nested
   parallelism
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic scheduling; GPGPU; irregular parallelism; nested parallelism;
   OpenACC; parallel programming model; PFACC
AB OpenACC is a directive-based programming model which allows programmers to write graphic processing unit (GPU) programs by simply annotating parallel loops. However, OpenACC has poor support for irregular nested parallel loops, which are natural choices to express nested parallelism. We propose PFACC, a programming model similar to OpenACC. PFACC directives can be used to annotate parallel loops and to guide data movement between different levels of memory hierarchy. Parallel loops can be arbitrarily nested or be placed inside functions that would be (possibly recursively) called in other parallel loops. The PFACC translator translates C programs with PFACC directives into CUDA programs by inserting runtime iteration-sharing and memory allocation routines. The PFACC runtime iteration-sharing routine is a two-level mechanism. Thread blocks dynamically organize loop iterations intobatchesand execute the batches in a depth-first order. Different thread blocks share iterations among one another with an iteration-stealing mechanism. PFACC generates CUDA programs with reasonable memory usage because of the depth-first execution order. The two-level iteration-sharing mechanism is implemented purely in software and fits well with the CUDA thread hierarchy. Experiments show that PFACC outperforms CUDA dynamic parallelism in terms of performance and code size on most benchmarks.
C1 [Huang, Ming Hsiang; Yang, Wuu] Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
C3 National Yang Ming Chiao Tung University
RP Yang, W (corresponding author), Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
EM wuuyang@cs.nctu.edu.tw
OI Huang, Ming Hsiang/0000-0002-2761-1077
FU Ministry of Science and Technology, Taiwan, R.O.C. [MOST
   103-2221-E-009-105-MY3, MOST 105-2221-E-009-078-MY3]
FX Ministry of Science and Technology, Taiwan, R.O.C., Grant/Award Numbers:
   MOST 103-2221-E-009-105-MY3, MOST 105-2221-E-009-078-MY3
CR Adinetz Andrew V, 2014, CUDA PROTIP OPTIMIZE
   [Anonymous], 2018, CUDA C PROGRAMMING G
   [Anonymous], 2012, CTR RELIABLE HIGH PE
   Bell N., 2011, GPU COMPUTING GEMS J
   Bergstrom L, 2012, J FUNCT PROGRAM, V22, P382, DOI 10.1017/S0956796812000172
   Blelloch GE, 1995, NESL NESTED DATA PAR
   Bryan Catanzaro, 2011, P ACM S PRINC PRACT
   CAPS Enterprise Cray Inc. NVIDIA the Portland Group, 2015, OPENACC APPL PROGR I
   Cederman Daniel, 2009, J EXPT ALGORITHMICS, V14, P1
   Farzad Khorasani, 2016, P IEEE INT PAR DISTR
   Farzad Khorasani, 2015, P IEEE ACM INT S MIC
   Frank Mueller, 2013, P IEEE ACM INT S COD
   Gupta K., 2012, INNOVATIVE PARALLEL
   Guray Ozen, 2016, P INT C PAR ARCH COM
   Harris M., 2007, GPU GEMS, V3
   John Jenkins, 2011, P EUR C PAR PROC
   Kazuhisa Makino, 2004, P SCAND WORKSH ALG T
   Lars Bergstrom, 2012, P ACM SIGPLAN INT C
   Michael Wolfe, 2013, P GPU TECHN C GTC
   Ming-Hsiang Huang, 2016, P INT C PAR PROC ICP
   Oded Green, 2012, P ACM INT C SUP
   Palmer Daniel W, 1995, P INT WORKSH LANG CO
   Reppy J, 2015, COMPILERS PARALLEL C
   Sang-Ik Lee, 2003, P INT WORKSH LANG CO
   Yi Yang, 2014, P ACM S PRINC PRACT
   Yongpeng Zhang, 2012, P INT C PAR PROC ICP
NR 26
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2020
VL 50
IS 10
BP 1877
EP 1904
DI 10.1002/spe.2868
EA JUL 2020
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ8HF
UT WOS:000546570800001
DA 2024-07-18
ER

PT J
AU Maenhaut, PJ
   Volckaert, B
   Ongenae, V
   De Turck, F
AF Maenhaut, Pieter-Jan
   Volckaert, Bruno
   Ongenae, Veerle
   De Turck, Filip
TI Efficient resource management in the cloud: From simulation to
   experimental validation using a low-cost Raspberry Pi testbed
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; experimental validation; Raspberry Pi testbed; resource
   allocation; simulations
AB Within the context of cloud computing, efficient resource management is of great importance as it can result in higher scalability and significant energy and cost reductions over time. Because of the high complexity and costs of cloud environments, however, newly developed resource allocation strategies are often only validated by means of simulations, for example, by using CloudSim or custom-developed simulation tools. This article describes a general approach for the validation of cloud resource allocation strategies, illustrating the importance of experimental validation on physical testbeds. Furthermore, the design and implementation of RaspberryPiasaService(RPiaaS), a low-cost embedded testbed built using Raspberry Pi nodes, is presented. RPiaaS aims to facilitate the step from simulations toward experimental evaluations on larger cloud testbeds and is designed using a microservice architecture, where experiments and all required management services are running inside containers. The performance of the RPiaaS testbed is evaluated using several benchmark experiments. The obtained results not only illustrate that the overhead of both using containers and running the required RPiaaS services is minimal but also provide useful insights for scaling up experiments between the Raspberry Pi testbed and a larger more traditional cloud testbed. The introduced validation approach is then illustrated using a case study focusing on the allocation of hierarchically structured tenant data. The results obtained through simulations are compared to the experimental results. The RPiaaS testbed proved to be a very useful tool for the initial experimental validation before moving the experiments to a large-scale testbed.
C1 [Maenhaut, Pieter-Jan; Ongenae, Veerle] Univ Ghent, Dept Informat Technol, Fac Engn & Architecture, Ghent, Oost Vlaanderen, Belgium.
   [Maenhaut, Pieter-Jan; Volckaert, Bruno; De Turck, Filip] Univ Ghent, IMEC, Internet Technol & Data Sci Lab, Dept Informat Technol,IDLab, Ghent, Oost Vlaanderen, Belgium.
C3 Ghent University; IMEC; Ghent University
RP Maenhaut, PJ (corresponding author), iGent, Technol Pk,Zwijnaarde 15, B-9052 Ghent, Belgium.
EM pieterjan.maenhaut@ugent.be
OI Maenhaut, Pieter-Jan/0000-0002-9385-8000; De Turck,
   Filip/0000-0003-4824-1199
CR Abrahamsson P, 2013, INT CONF CLOUD COMP, P170, DOI 10.1109/CloudCom.2013.121
   Ahmed A, 2014, 2014 IEEE INT ADV CO, DOI [10.1109/IAdCC.2014.6779436, DOI 10.1109/IADCC.2014.6779436]
   Alshammari D, 2018, 2018 IEEE 3 INT C CL, DOI [10.1109/ICCCBDA.2018.8386571, DOI 10.1109/ICCCBDA.2018.8386571]
   Alshammari D, 2017, IEEE INT CONF CLOUD, P705, DOI 10.1109/CLOUD.2017.97
   [Anonymous], INT J SERVICE COMPUT
   Aral A, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P1033, DOI 10.1109/CLOUD.2015.145
   Atrey A, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P221, DOI 10.5220/0005812002210229
   Barker A, 2014, 6 USENIX WORKSH HOT
   Bi J, 2017, IEEE T AUTOM SCI ENG, V14, P1172, DOI 10.1109/TASE.2015.2503325
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chung WC, 2014, INT CONF CLOUD ENG, P107, DOI 10.1109/IC2E.2014.28
   docker docs, US OVERLAYFS STOR DR
   docker docs, US DEV MAPP STOR DRI
   docker docs, SEL STOR DRIV
   Jennings B, 2015, J NETW SYST MANAG, V23, P567, DOI 10.1007/s10922-014-9307-7
   Kecskemeti G, 2017, EUROMICRO WORKSHOP P, P39, DOI 10.1109/PDP.2017.33
   Kecskemeti G, 2015, SIMUL MODEL PRACT TH, V58, P188, DOI 10.1016/j.simpat.2015.05.009
   Khoshkholghi MA, 2017, IEEE ACCESS, V5, P10709, DOI 10.1109/ACCESS.2017.2711043
   Liu N, 2017, INT CON DISTR COMP S, P372, DOI 10.1109/ICDCS.2017.123
   Maenhaut P-J, 2016, 2016 IEEE IFIP NETW, DOI 10.1109/NOMS.2016.7502951
   Maenhaut P-J, 2017, 2017 IEEE C COMP COM, DOI [10.1109/INFCOMW.2017.8116503, DOI 10.1109/INFCOMW.2017.8116503]
   Maenhaut PJ, 2017, J NETW COMPUT APPL, V93, P182, DOI 10.1016/j.jnca.2017.05.014
   Mambretti J, 2015, 2015 INTERNATIONAL CONFERENCE ON CLOUD COMPUTING RESEARCH AND INNOVATION (ICCCRI), P73, DOI 10.1109/ICCCRI.2015.10
   Mann ZA, 2018, SOFTWARE PRACT EXPER, V48, P1368, DOI 10.1002/spe.2579
   Metwally K, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P1058, DOI 10.1109/CLOUD.2015.152
   Hieu NT, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P750, DOI 10.1109/CLOUD.2015.104
   Pahl C, 2016, 2016 IEEE 4TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD WORKSHOPS (FICLOUDW), P117, DOI 10.1109/W-FiCloud.2016.36
   Piraghaj SF, 2017, SOFTWARE PRACT EXPER, V47, P505, DOI 10.1002/spe.2422
   Portaluri G, 2017, IEEE T GREEN COMMUN, V1, P541, DOI 10.1109/TGCN.2017.2725488
   Rampersaud S, 2017, IEEE T PARALL DISTR, V28, P2046, DOI 10.1109/TPDS.2016.2641937
   Rampersaud S, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P718, DOI 10.1109/CLOUD.2015.100
   Ricci Robert, 2014, USENIX;login, V39, P6
   Sanatinia A, 2017, 2017 IEEE INTERNATIONAL SYMPOSIUM ON TECHNOLOGIES FOR HOMELAND SECURITY (HST)
   Son JM, 2015, IEEE ACM INT SYMP, P475, DOI 10.1109/CCGrid.2015.87
   Tso FP, 2013, IEEE INT CON DIS, P108, DOI 10.1109/ICDCSW.2013.25
   Virtual Wall, ILAB T TESTB 1 0 0 D
   Yousafzai A, 2017, KNOWL INF SYST, V50, P347, DOI 10.1007/s10115-016-0951-y
   Zhang ZM, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P758, DOI 10.1109/CLOUD.2015.105
NR 38
TC 4
Z9 4
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2019
VL 49
IS 3
BP 449
EP 477
DI 10.1002/spe.2669
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0HU
UT WOS:000459868900006
OA Green Published
DA 2024-07-18
ER

PT J
AU Ceraolo, M
AF Ceraolo, Massimo
TI Experiences in creating a software tool to analyze and postprocess
   simulated and measured data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Fourier series; Matlab; Modelica, SVG; plotting; postprocessing
AB Today, there is a great availability of software to plot simulated or measured data either commercial or free, possibly open source. The author has created one of them, which has the specificity of being compact, compatible with several input formats, and freely distributed, available for Windows, Macintosh, and Unix. It has also the ability to postprocess simulated and measured data. This paper shows some of the choices that have been made to produce this tool, gives hints on their implementation, and shows which special characteristics were searched for, which not always are available on larger tools or tools built into simulation or measuring software.
C1 [Ceraolo, Massimo] Univ Pisa, I-56126 Pisa, Italy.
C3 University of Pisa
RP Ceraolo, M (corresponding author), Univ Pisa, I-56126 Pisa, Italy.
EM massimo.ceraolo@unipi.it
OI Ceraolo, Massimo/0000-0002-8379-1789
CR Lesk M. E., LEX LEXICAL ANAL GEN
NR 1
TC 1
Z9 1
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2380
EP 2388
DI 10.1002/spe.2632
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700012
DA 2024-07-18
ER

PT J
AU Tofighy, S
   Rahmanian, AA
   Ghobaei-Arani, M
AF Tofighy, Sajjad
   Rahmanian, Ali A.
   Ghobaei-Arani, Mostafa
TI An ensemble CPU load prediction algorithm using a Bayesian information
   criterion and smooth filters in a cloud computing environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Bayesian information criterion; cloud computing; CPU load prediction;
   ensemble model
ID VIRTUAL MACHINES; RESOURCE; CONSOLIDATION; HEURISTICS; ENERGY; FUZZY;
   MODEL
AB Cloud resource management requires complex policies and decisions to ensure the suitable use of computing resources due to fluctuations in the demanding workload. Deciding the right amount of resource usage for performing user requests in cloud environments is not trivial. Therefore, an efficient resource prediction model can play important roles in cloud resource management to estimate the needed resources properly. In this paper, we propose an ensemble CPU load prediction model using a Bayesian information criterion to choose the best constituent model in each time slot based on the cloud resource usage history. Further, we apply a couple of smooth filters in order to decrease the negative impacts of outliers in the observed data points. We also present a framework for cloud resource management including a prediction module to estimate the resource usage more accurately. The experimental results on the data set of the CoMon project indicate that the proposed approach achieves higher accuracy compared with the other ensemble prediction algorithms.
C1 [Tofighy, Sajjad] Tarbiat Modares Univ, Fac Elect & Comp Engn, Tehran, Iran.
   [Rahmanian, Ali A.] Shiraz Univ, Sch Elect & Comp Engn, Dept Comp Sci & Engn & Informat Technol, Shiraz, Iran.
   [Ghobaei-Arani, Mostafa] Qom Islamic Azad Univ, Dept Comp Engn, Qom, Iran.
C3 Tarbiat Modares University; Shiraz University
RP Ghobaei-Arani, M (corresponding author), Qom Islamic Azad Univ, Dept Comp Engn, Qom, Iran.
EM m.ghobaei@qom-iau.ac.ir
RI Ghobaei-Arani, Mostafa/K-5058-2015; Tofighy, Sajjad/M-9276-2019
OI Ghobaei-Arani, Mostafa/0000-0003-2639-0900; Tofighy,
   Sajjad/0000-0003-2914-8802; Rahmanian, Ali/0000-0001-9249-1633
CR Arianyan E, 2016, J SUPERCOMPUT, V72, P688, DOI 10.1007/s11227-015-1603-9
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Bey KB, 2011, NEUROCOMPUTING, V74, P1606, DOI 10.1016/j.neucom.2011.01.009
   Cao J, 2014, SOFTWARE PRACT EXPER, V44, P793, DOI 10.1002/spe.2231
   Chandrasekaran K., 2014, ESSENTIALS CLOUD COM
   [陈光 Chen Guang], 2012, [计算机科学与探索, Journal of Frontiers of Computer Science & Technology], V6, P495
   Chen Y, 2015, 2015 IEEE INT C DAT
   Chen Z., 2015, Computational Intelligence and Neuroscience, V2015, P17, DOI [10.1155/2015/919805, DOI 10.1371/J0URNAL.P0NE.0142809]
   Claeskens G., 2008, Model Selection and Model Averaging, DOI DOI 10.1017/CBO9780511790485
   Das AK, 2017, CLUSTER COMPUT, V20, P1599, DOI 10.1007/s10586-017-0785-8
   de Queiroz TA, 2013, INT J PROD ECON, V145, P511, DOI 10.1016/j.ijpe.2013.04.032
   Dong F, 2012, FUTURE GENER COMP SY, V28, P1030, DOI 10.1016/j.future.2011.10.014
   Draper N. R., 2014, Applied regression analysis
   Ghobaei-Arani M, 2018, SOFT COMPUT, V22, P8353, DOI 10.1007/s00500-017-2783-4
   Ghobaei-Arani M, 2018, INT J COMMUN SYST, V31, DOI 10.1002/dac.3537
   Ghobaei-Arani M, 2017, J EXP THEOR ARTIF IN, V29, P1149, DOI 10.1080/0952813X.2017.1310308
   Ghobaei-Arani M, 2018, FUTURE GENER COMP SY, V78, P191, DOI 10.1016/j.future.2017.02.022
   Ghobaei-Arani M, 2016, CLUSTER COMPUT, V19, P1017, DOI 10.1007/s10586-016-0574-9
   Hu R, 2013, 2013 IEEE 33 INT C D
   Hyndman RJ, 2007, 0607 MON EC BUS STAT
   Konishi S, 2008, SPRINGER SER STAT, P211
   KyoungSoo Park, 2006, Operating Systems Review, V40, P65, DOI 10.1145/1113361.1113374
   Mason K, 2018, FUTURE GENER COMP SY, V86, P162, DOI 10.1016/j.future.2018.03.040
   Messias VR, 2016, NEURAL COMPUT APPL, V27, P2383, DOI 10.1007/s00521-015-2133-3
   Neath AA, 2012, WIRES COMPUT STAT, V4, P199, DOI 10.1002/wics.199
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Rahmanian AA, 2017, INT J COMMUN SYST, V30, DOI 10.1002/dac.3179
   Rahmanian AA, 2018, INT J COMMUN SYST, V31, DOI 10.1002/dac.3490
   Rahmanian AA, 2018, FUTURE GENER COMP SY, V79, P54, DOI 10.1016/j.future.2017.09.049
   SAVITZKY A, 1964, ANAL CHEM, V36, P1627, DOI 10.1021/ac60214a047
   Shyam GK, 2016, J NETW COMPUT APPL, V65, P144, DOI 10.1016/j.jnca.2016.03.002
   Song BB, 2018, J SUPERCOMPUT, V74, P6554, DOI 10.1007/s11227-017-2044-4
   Subirats J, 2015, FUTURE GENER COMP SY, V45, P70, DOI 10.1016/j.future.2014.11.008
   Tong Junjie, 2014, [The Journal of China Universities of Posts and Telecommunications, 中国邮电高校学报], V21, P40
   Wolski R., 1998, Cluster Computing, V1, P119, DOI 10.1023/A:1019025230054
   Yang DY, 2013, J SYST SOFTWARE, V86, P1257, DOI 10.1016/j.jss.2012.12.023
   Yang L, 2003, 2003 PART DISTR PROC
   Yang QP, 2015, J SUPERCOMPUT, V71, P3037, DOI 10.1007/s11227-015-1426-8
   Yang QP, 2014, J SUPERCOMPUT, V68, P1402, DOI 10.1007/s11227-014-1097-x
   Zhang WS, 2017, SOFTWARE PRACT EXPER, V47, P473, DOI 10.1002/spe.2426
NR 40
TC 37
Z9 38
U1 1
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2257
EP 2277
DI 10.1002/spe.2641
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700007
DA 2024-07-18
ER

PT J
AU Zhang, YF
   Li, Y
   Tan, T
   Xue, JL
AF Zhang, Yifei
   Li, Yue
   Tan, Tian
   Xue, Jingling
TI Ripple: Reflection analysis for Android apps in incomplete information
   environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Android; pointer analysis; reflection analysis
AB Reflection poses grave problems for static security analysis, despite its widespread use in Android apps. In general, string inference has been mainly used to handle reflection, resulting in significantly missed security vulnerabilities. In this work, we bring forward the ubiquity of incomplete information environments (IIEs) for Android apps, where some critical dataflows are missing during static analysis and the need for resolving reflective calls under IIEs. We present Ripple, the first IIE-aware static reflection analysis for Android apps that resolves reflective calls more soundly than string inference. Validation with 17 popular Android apps from Google Play demonstrates the effectiveness of Ripple in discovering reflective targets with a low false positive rate (due to its trade-off made among soundness, precision, and scalability). As a result, Ripple enables FlowDroid, a taint analysis for Android apps, to find hundreds of sensitive data leakages that would otherwise be missed. As a fundamental analysis, Ripple will be valuable for many security analysis clients, since more program behaviors can now be analyzed under IIEs.
C1 [Zhang, Yifei; Xue, Jingling] UNSW Sydney, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
   [Li, Yue; Tan, Tian] Aarhus Univ, Dept Comp Sci, Aarhus, Denmark.
C3 University of New South Wales Sydney; Aarhus University
RP Xue, JL (corresponding author), UNSW Sydney, Sch Comp Sci & Engn, Programming Languages & Compilers Grp, Sydney, NSW 2052, Australia.
EM jingling@cse.unsw.edu.au
RI Zhang, Yifei/GRO-3001-2022; Xue, Jingling/AAE-1991-2020
OI Xue, Jingling/0000-0003-0380-3506
FU Australian Research Council [DP170103956]
FX Australian Research Council, Grant/Award Number: DP170103956
CR [Anonymous], P 43 ANN ACM SIGPLAN
   [Anonymous], 1994, Program analysis and specialization for the C programming language
   [Anonymous], P 37 INT C SOFTW ENG
   [Anonymous], 2012, P 2 ACM C DATA APPL, DOI DOI 10.1145/2133601.2133640
   [Anonymous], 2015, P 22 ACM C COMP COMM
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Arzt S, 2016, PROC INT CONF SOFTW, P725, DOI 10.1145/2884781.2884816
   Barros P, 2015, IEEE INT CONF AUTOM, P669, DOI 10.1109/ASE.2015.69
   Bastani O, 2015, ACM SIGPLAN NOTICES, V50, P553, DOI [10.1145/2775051.2676977, 10.1145/2676726.2676977]
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Elish KO, 2015, COMPUT SECUR, V49, P255, DOI 10.1016/j.cose.2014.11.001
   Ernst MD, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1092, DOI 10.1145/2660267.2660343
   Feng Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P576, DOI 10.1145/2635868.2635869
   Fengguo Wei, 2017, Detection of Intrusions and Malware, and Vulnerability Assessment. 14th International Conference, DIMVA 2017. Proceedings: LNCS 10327, P252, DOI 10.1007/978-3-319-60876-1_12
   Fratantonio Y, 2016, P IEEE S SECUR PRIV, P377, DOI 10.1109/SP.2016.30
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Grace M., 2012, P 19 ANN NETW DISTR
   Jiang X, 2013, P 8 ACM SIGSAC S INF, P329
   Krishnamurthi Shriram, 2016, 30 EUROPEAN C OBJECT, V15, P27
   Lee S, 2016, IEEE INT CONF AUTOM, P250, DOI 10.1145/2970276.2970368
   Lhoták O, 2006, LECT NOTES COMPUT SC, V3923, P47
   Li L., 2016, PROC ISSTA, P318
   Li Li, 2015, P 37 INT C SOFTW ENG
   Li Y, 2015, LECT NOTES COMPUT SC, V9291, P162, DOI 10.1007/978-3-662-48288-9_10
   Li Y, 2014, LECT NOTES COMPUT SC, V8586, P27
   Liu J, 2017, PROC INT SYMP SOFTW, P12, DOI 10.1109/ISSRE.2017.36
   Livshits B, 2005, LECT NOTES COMPUT SC, V3780, P139
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Lu Y, 2013, LECT NOTES COMPUT SC, V7791, P61, DOI 10.1007/978-3-642-37051-9_4
   Milanova A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/566171.566174
   Nguyen PH, 2005, P 28 AUSTR C COMP SC
   Oberheide J., 2012, SUMMERCON2012
   Octeau D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P77, DOI 10.1109/ICSE.2015.30
   Octeau Damien, 2013, P 22 USENIX C SEC SE, P543
   Rasthofer S, 2014, 2014 9 INT C AV REL
   Rasthofer S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23066
   Ruiz F., 2012, Fakeinstaller leads the attack on android phones
   Shang L, 2012, P 27 IEEE ACM INT C
   Shang Lei, 2012, P 10 INT S CODE GENE, P264
   Slavin R, 2016, PROC INT CONF SOFTW, P25, DOI 10.1145/2884781.2884855
   Smaragdakis Y, 2015, LECT NOTES COMPUT SC, V9458, P485, DOI 10.1007/978-3-319-26529-2_26
   Smaragdakis Y, 2011, ACM SIGPLAN NOTICES, V46, P17, DOI 10.1145/1925844.1926390
   Sridharan M, 2006, ACM SIGPLAN NOTICES, V41, P387, DOI 10.1145/1133981.1134027
   Tan T, 2017, ACM SIGPLAN NOTICES, V52, P278, DOI [10.1145/3140587.3062360, 10.1145/3062341.3062360]
   Tan T, 2016, LECT NOTES COMPUT SC, V9837, P489, DOI 10.1007/978-3-662-53413-7_24
   Tinaztepe E., 2013, ANDROID OBAD
   Vall ~ee-Rai R., 2010, CASCON 1 DECADE HIGH, P214, DOI DOI 10.1145/1925805.1925818
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Whaley J, 2004, ACM SIGPLAN NOTICES, V39, P131, DOI 10.1145/996893.996859
   Zhang YF, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P281, DOI 10.1145/3029806.3029814
   Zhauniarovich Y., 2015, P 5 ACM C DATA APPL, P37, DOI DOI 10.1145/2699026.2699105
   Zheng M, 2013, ARXIV13027212
NR 53
TC 11
Z9 12
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2018
VL 48
IS 8
BP 1419
EP 1437
DI 10.1002/spe.2577
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GL9XH
UT WOS:000437696200001
DA 2024-07-18
ER

PT J
AU Beheshti, A
   Benatallah, B
   Motahari-Nezhad, HR
AF Beheshti, Amin
   Benatallah, Boualem
   Motahari-Nezhad, Hamid Reza
TI ProcessAtlas: A scalable and extensible platform for business process
   analytics
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business processes; data-centric process services; process analytics;
   process data curation
ID PROVENANCE
AB In today's knowledge-, service-, and cloud-based economy, an overwhelming amount of business-related data are being generated at a fast rate daily from a wide range of sources. These data increasingly show all the typical properties of big data: wide physical distribution, diversity of formats, nonstandard data models, and independently managed and heterogeneous semantics. In this context, there is a need for new scalable and process-aware services for querying, exploration, and analysis of process data in the enterprise because (1) process data analysis services should be capable of processing and querying large amount of data effectively and efficiently and, therefore, have to be able to scale well with the infrastructure's scale and (2) the querying services need to enable users to express their data analysis and querying needs using process-aware abstractions rather than other lower-level abstractions. In this paper, we introduce ProcessAtlas, ie, an extensible large-scale process data querying and analysis platform for analyzing process data in the enterprise. The ProcessAtlas platform offers an extensible architecture by adopting a service-based model so that new analytical services can be plugged into the platform. In ProcessAtlas, we present a domain-specific model for representing process knowledge, ie, process-level entities, abstractions, and the relationships among them modeled as graphs. We provide services for discovering, extracting, and analyzing process data. We provide efficient mapping and execution of process-level queries into graph-level queries by using scalable process query services to deal with the process data size growth and with the infrastructure's scale. We have implemented ProcessAtlas as a MapReduce-based prototype and report on experiments performed on both synthetic and real-world datasets.
C1 [Beheshti, Amin; Benatallah, Boualem; Motahari-Nezhad, Hamid Reza] Univ New South Wales, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
   [Beheshti, Amin] Macquarie Univ, Dept Comp, Sydney, NSW, Australia.
   [Motahari-Nezhad, Hamid Reza] IBM Almaden Res Ctr, San Jose, CA USA.
C3 University of New South Wales Sydney; Macquarie University;
   International Business Machines (IBM)
RP Beheshti, A (corresponding author), Univ New South Wales, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
EM sbeheshti@cse.unsw.edu.au
RI Beheshti, Amin/ADI-5438-2022
OI Benatallah, Boualem/0000-0002-8805-1130; Beheshti,
   Amin/0000-0002-5988-5494
FU Data to Decisions CRC (D2D CRC); Cooperative Research Centres Programme
FX Data to Decisions CRC (D2D CRC); Cooperative Research Centres Programme
CR Aalst W.M. P., 2011, PROCESS MINING DISCO
   Aalst WMPVD, 2011, BUS PROC MAN WORKSH
   Aalst WMPVD, 2003, P INT C BUS PROC MAN
   Aalst WMPVD, 2009, P BUS PROC MAN DEM T
   Aalst WMPVD, 2012, ACM T MANAGE, V3
   Aggarwal CC, 2010, ADV DATABASE SYST, V40, P1, DOI 10.1007/978-1-4419-6045-0
   Allahbakhsh M, 2012, 2012 8 INT C COLL CO
   Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   [Anonymous], 2010, ACM SIGMOD INT C MAN
   [Anonymous], 2009, IEEE Data Engineering Bulletin
   [Anonymous], 2011, BIG DATA NEXT FRONTI
   [Anonymous], 2014, RDF 1 1 CONCEPTS ABS
   [Anonymous], C INN DAT SYST RES C
   [Anonymous], 2009, Hadoop: The definitive guide
   Awad A, 2007, ENT MOD INF SYST ARC
   Barros AP, 2007, P 10 INT C FUND APPR
   Batarfi O, 2015, CLUSTER COMPUT, V18, P1189, DOI 10.1007/s10586-015-0472-6
   Beeri C, 2007, P 33 INT C VER LARG
   Beeri C, 2008, INFORM SYST, V33, P477, DOI 10.1016/j.is.2008.02.005
   Begel A, 2010, P ACM IEEE INT C SOF
   Beheshti A, 2017, 26 ACM INT C INF KNO
   Beheshti S, 2007, P 2007 SPRING SIM MU
   Beheshti S, 2016, P 19 INT C EXT DAT T
   Beheshti S, 2017, P 26 INT C WORLD WID
   Beheshti S, 2011, P 9 INT C BUS PROC M
   Beheshti S, 2012, 13 INT C WEB INF SYS
   Beheshti S, 2013, P 25 INT C ADV INF S
   Beheshti S, 2012, THESIS
   Beheshti S.-M.-R., 2016, Process analytics-concepts and techniques for querying and analyzing process data
   Beheshti S-M-R, 2012, ABS12115009 CORR
   Beheshti SMR, 2016, DISTRIB PARALLEL DAT, V34, P379, DOI 10.1007/s10619-014-7171-9
   Bhattacharya K., 2007, P 5 INT C BUS PROC M
   Bose R. P. J. C., 2011, ANAL PATIENT TREATME, V1118
   Carey MJ, 2008, COMPUTER, V41, P92, DOI 10.1109/MC.2008.97
   Carey MJ, 2012, COMMUN ACM, V55, P86, DOI 10.1145/2184319.2184340
   Cheney J, 2007, FOUND TRENDS DATABAS, V1, P379, DOI 10.1561/1900000006
   HACIGUMUS HB, 2002, P INT C DAT ENG ICDE
   Hammoud M, 2015, PROC VLDB ENDOW, V8, P654, DOI 10.14778/2735703.2735705
   Husain M, 2010, IEEE INT C CLOUD COM
   Kim H, 2011, PROC VLDB ENDOW, V4, P1426
   McGill Michael, 1984, Introduction to Modern Information Retrieval
   Moreau L, 2011, FUTURE GENER COMP SY, V27, P743, DOI 10.1016/j.future.2010.07.005
   Motahari H, 2008, PROC VLDB ENDOW, V1, P1412, DOI 10.14778/1454159.1454186
   Motahari-Nezhad HR, 2008, IEEE T KNOWL DATA EN, V20, P1683, DOI 10.1109/TKDE.2008.87
   Motahari-Nezhad HR, 2011, VLDB J, V20, P417, DOI 10.1007/s00778-010-0203-9
   Nigam A, 2003, IBM SYST J, V42, P428, DOI 10.1147/sj.423.0428
   Ravindra P, 2011, EUR SEM WEB C ESWC H
   Resende L, 2007, P ACM SIGMOD INT C M
   Sakr S, 2015, P 26 AUSTR DAT C ADC
   Schatzle A., 2011, P INT WORKSH SEM WEB, P4
   Simmhan YL, 2005, SIGMOD REC, V34, P31, DOI 10.1145/1084805.1084812
   Swenson K., 2011, TAMING UNPREDICTABLE
   Swenson KD., 2011, SOCIAL BPM WORK PLAN
NR 53
TC 14
Z9 14
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2018
VL 48
IS 4
BP 842
EP 866
DI 10.1002/spe.2558
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FY3VV
UT WOS:000426749900005
DA 2024-07-18
ER

PT J
AU Cucinotta, T
   Abeni, L
   Lelli, J
   Lipari, G
AF Cucinotta, Tommaso
   Abeni, Luca
   Lelli, Juri
   Lipari, Giuseppe
TI Improving responsiveness of time-sensitive applications by exploiting
   dynamic task dependencies
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE concurrent programming; priority inheritance; priority inversion;
   real-time analysis; real-time scheduling on Linux
ID GLOBAL EDF
AB In this paper, a mechanism is presented for reducing priority inversion in multiprogrammed computing systems. Contrary to well-known approaches from the literature, this paper tackles cases where the dependency relationships among tasks cannot be known in advance to the operating system. The presented mechanism allows tasks to explicitly declare aforementioned relationships, enabling the operating system scheduler to take advantage of such information and trigger priority inheritance, resulting in reduced priority inversion. We present the prototype implementation of the concept within the Linux kernel in the form of modifications to the standard Portable Operating System Interface (POSIX) condition variable code, along with an extensive evaluation, including a quantitative assessment of the benefits for applications making use of the technique and comprehensive overhead measurements. In addition, we present an associated technique for the theoretical schedulability analysis of a system using the new mechanism, which is useful to determine whether all tasks can meet their deadlines or not, in the specific scenario of tasks interacting only through remote procedure calls and under partitioned scheduling.
C1 [Cucinotta, Tommaso; Abeni, Luca] Scuola Super Sant Anna, ReTiS Lab, Via G Moruzzi 1, I-56124 Pisa, Italy.
   [Lelli, Juri] ARM Ltd, Cambridge CB1 9NJ, England.
   [Lipari, Giuseppe] Univ Lille, CNRS, UMR 9189, CRIStAL, F-59800 Lille, France.
C3 Scuola Superiore Sant'Anna; Arm Holdings; Centre National de la
   Recherche Scientifique (CNRS); Universite de Lille; Centrale Lille
RP Cucinotta, T (corresponding author), Scuola Super Sant Anna, ReTiS Lab, Via G Moruzzi 1, I-56124 Pisa, Italy.
EM tommaso.cucinotta@santannapisa.it
RI Lipari, Giuseppe/E-7761-2010; Abeni, Luca/AAF-8220-2020
OI Abeni, Luca/0000-0002-7080-9601; Cucinotta, Tommaso/0000-0002-0362-0657
FU RETINA Eurostars Project [E10171]
FX RETINA Eurostars Project, Grant/Award Number: E10171
CR ABENI L, 1998, P IEEE REAL TIM SYST
   Abeni L, 2013, P 28 ANN ACM S APPL
   [Anonymous], 2012, Concepts of programming languages
   BAKER TP, 1991, REAL-TIME SYST, V3, P67, DOI 10.1007/BF00365393
   BEHNAM M, 2007, P 7 ACM IEEE INT C E
   Block A, 2007, 13TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P47, DOI 10.1109/RTCSA.2007.8
   Brandenburg BB, 2010, P IEEE REAL TIM SYST
   Buttazzo GC, 2011, HARD REAL-TIME COMPUTING SYSTEMS: PREDICTABLE SCHEDULING ALGORITHMS AND APPLICATIONS, THIRD EDITION, P1, DOI 10.1007/978-1-14614-0676-1
   Chen CM, 1994, TECHNICAL REPORT
   CHEN MI, 1990, REAL-TIME SYST, V2, P325, DOI 10.1007/BF01995676
   Chwa HS, 2013, EUROMICRO, P25, DOI 10.1109/ECRTS.2013.14
   Corbet Jonathan., 2007, CFS GROUP SCHEDULING
   Cornhill Dennis, 1987, ADA LETT, VVII, P30, DOI [10.1145/36072.36073, DOI 10.1145/36072.36073]
   Cornhilll D., 1987, ACM SIGADA ADA LETT, V7, P33
   Cucinotta T, 2013, P 9 INT WORKSH OP SY
   Cucinotta T, 2009, IEEE T IND INFORM, V5, P267, DOI 10.1109/TII.2009.2027013
   Davis RI, 2006, P IEEE REAL TIM SYST
   Dragojevic A, 2011, COMMUN ACM, V54, P70, DOI 10.1145/1924421.1924440
   Easwaran A, 2009, P IEEE REAL TIM SYST
   Faggioli D, 2008, P 4 INT WORKSH OP SY
   Faggioli D, 2010, 22 EUR REAL TIM SYST
   Faggioli D, 2012, REAL-TIME SYST, V48, P789, DOI 10.1007/s11241-012-9162-0
   Guan N, 2011, P 23 EUR REAL TIM SY
   Hart D, PTHREAD CONDVARS POS
   Hart D, 2009, P 11 REAL TIM LIN WO
   Kalkov I., 2015, P 13 INT WORKSH JAV
   Lakshmanan K, 2009, REAL TIM SYST SYMP P, P469, DOI 10.1109/RTSS.2009.51
   LAMASTRA G, 2001, P 22 IEEE REAL TIM S
   LAMPSON BW, 1980, COMMUN ACM, V23, P105, DOI 10.1145/358818.358824
   Lelli J, 2016, SOFTWARE PRACT EXPER, V46, P821, DOI 10.1002/spe.2335
   Li J, 2013, EUROMICRO, P3, DOI 10.1109/ECRTS.2013.12
   Locke CD, 1988, P 2 INT WORKSH REAL
   Macariu G, 2011, P 23 EUR REAL TIM SY
   Rajkumar R, 1990, P INT C DISTR COMP S
   Schmidt D, 1998, P 4 IEEE REAL TIM TE
   Sha L, 2004, REAL-TIME SYST, V28, P101, DOI 10.1023/B:TIME.0000045315.61234.1e
   SHA L, 1990, IEEE T COMPUT, V39, P1175, DOI 10.1109/12.57058
   Sha L, 1988, TECHNICAL REPORT
   Steinberg U, 2005, EUROMICRO, P89, DOI 10.1109/ECRTS.2005.16
   The IEEE and The Open Group, 2004, 10031 IEEE OP GROUP
   vanden Heuvel MM, 2011, 2011 IEEE 17 INT C E
   Xi S, 2012, TECHNICAL REPORT
   Yan Y, 2016, IEEE T MOBILE COMPUT, V15, P2564, DOI 10.1109/TMC.2015.2499187
   Yang ML, 2015, REAL TIM SYST SYMP P, P1, DOI 10.1109/RTSS.2015.8
   Zijlstra P, SCHEDULING NIGHTMARE
NR 45
TC 0
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2018
VL 48
IS 4
BP 820
EP 841
DI 10.1002/spe.2557
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FY3VV
UT WOS:000426749900004
OA Green Published
DA 2024-07-18
ER

PT J
AU Costa-Montenegro, E
   Tsybanev, A
   Cerezo-Costas, H
   González-Castaño, FJ
   Gil-Castiñeira, F
   Barragáns-Martínez, B
   Almuiña-Troncoso, D
AF Costa-Montenegro, Enrique
   Tsybanev, Alexander
   Cerezo-Costas, Hector
   Javier Gonzalez-Castano, Francisco
   Gil-Castineira, Felipe
   Barragans-Martinez, Belen
   Almuina-Troncoso, Diego
TI In-memory distributed software solution to improve the performance of
   recommender systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE recommender system; apache spark; performance; implementation; movies
AB Many recommender systems are currently available for proposing content (movies, TV series, music, etc.) to users according to different profiling metrics, such as ratings of previously consumed items and ratings of people with similar tastes. Recommendation algorithms are typically executed by powerful servers, as they are computationally expensive. In this paper, we propose a new software solution to improve the performance of recommender systems. Its implementation relies heavily on Apache Spark technology to speed up the computation of recommendation algorithms. It also includes a webserver, an API REST, and a content cache. To prove that our solution is valid and adequate, we have developed a movie recommender system based on two methods, both tested on the freely available Movielens and Netflix datasets. Performance was assessed by calculating root-mean-square error values and the times needed to produce a recommendation. We also provide quantitative measures of the speed improvement of the recommendation algorithms when the implementation is supported by a computing cluster. The contribution of this paper lies in the fact that our solution, which improves the performance of competitor recommender systems, is the first proposal combining a webserver, an API REST, a content cache and Apache Spark technology. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Costa-Montenegro, Enrique; Tsybanev, Alexander; Javier Gonzalez-Castano, Francisco; Gil-Castineira, Felipe; Almuina-Troncoso, Diego] Univ Vigo, AtlantTIC, Vigo 36310, Pontevedra, Spain.
   [Cerezo-Costas, Hector] Gradiant Galician Res & Dev Ctr Adv Telecomunicat, Vigo 36310, Pontevedra, Spain.
   [Barragans-Martinez, Belen] Escuela Naval Mil, Ctr Univ Def, Marin 36920, Pontevedra, Spain.
C3 Universidade de Vigo; atlanTTic
RP Costa-Montenegro, E (corresponding author), Univ Vigo, AtlantTIC, Vigo 36310, Pontevedra, Spain.
EM kike@gti.uvigo.es
RI Costa-Montenegro, Enrique/ABE-6778-2020; Gil-Castiñeira,
   Felipe/ABE-6411-2020; Martínez, Belén Barragáns/C-4775-2009;
   González-Castaño, Francisco J./D-2637-2018
OI Costa-Montenegro, Enrique/0000-0002-4674-1897; Gil-Castiñeira,
   Felipe/0000-0002-5164-0855; Martínez, Belén
   Barragáns/0000-0002-5011-989X; Gonzalez-Castano, Francisco
   Javier/0000-0001-5225-8378; Cerezo-Costas, Hector/0000-0003-2813-2462
FU MEIGA; CDTI, Spain; COINS [TEC2013-47016-C2-1-R]; MINECO, Spain
FX This work has been funded by projects MEIGA, CDTI, Spain, and COINS
   (TEC2013-47016-C2-1-R), MINECO, Spain.
CR Adomavicius G, 2005, ACM T INFORM SYST, V23, P103, DOI 10.1145/1055709.1055714
   Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   Balabanovic M, 1997, COMMUN ACM, V40, P66, DOI 10.1145/245108.245124
   Barragáns-Martínez B, 2015, EXPERT SYST APPL, V42, P4216, DOI 10.1016/j.eswa.2015.01.052
   Barragáns-Martínez A, 2010, IEEE INTERNET COMPUT, V14, P23, DOI 10.1109/MIC.2010.104
   Barragáns-Martínez AB, 2010, INFORM SCIENCES, V180, P4290, DOI 10.1016/j.ins.2010.07.024
   Bobadilla J, 2013, KNOWL-BASED SYST, V46, P109, DOI 10.1016/j.knosys.2013.03.012
   Breese J.S., 1999, P 14 C UNC ART INT, P43
   Burke R, 2002, USER MODEL USER-ADAP, V12, P331, DOI 10.1023/A:1021240730564
   Casey WE, 2014, THESIS
   Herlocker JL, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P230, DOI 10.1145/312624.312682
   Jing Jiang, 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P490, DOI 10.1109/SERVICES.2011.66
   Koren Y, 2010, COMMUN ACM, V53, P89, DOI 10.1145/1721654.1721677
   Koren Y, 2009, COMPUTER, V42, P30, DOI 10.1109/MC.2009.263
   Krauss C, 2013, P 2 INT WORKSH BIG D, P63
   Lai CF, 2011, FUTURE GENER COMP SY, V27, P823, DOI 10.1016/j.future.2010.10.002
   Linden G, 2003, IEEE INTERNET COMPUT, V7, P76, DOI 10.1109/MIC.2003.1167344
   Liu R, 2014, 2014 IEEE INT C DAT
   Moreno MN, 2013, LECT NOTES COMPUT SC, V8073, P122, DOI 10.1007/978-3-642-40846-5_13
   Resnick P., 1994, Transcending Boundaries, CSCW '94. Proceedings of the Conference on Computer Supported Cooperative Work, P175, DOI 10.1145/192844.192905
   Sanchez-Moreno D., 2013, ADV INTELLIGENT SYST, V221, P201
   Sang-Ki Ko, 2011, Human Interface and the Management of Information. Interacting with Information. Proceedings Symposium on Human Interface 2011. Held as Part of HCI International 2011, P558, DOI 10.1007/978-3-642-21793-7_63
   Sarwar B., 2000, P 6 ACM SIGKDD INT C
   Snijders C, 2012, INT J INTERNET SCI, V7, P1
   Symeonidis P, 2007, LECT NOTES ARTIF INT, V4511, P97
   Winoto P, 2010, EXPERT SYST APPL, V37, P6086, DOI 10.1016/j.eswa.2010.02.117
   Zhao ZD, 2010, THIRD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING: WKDD 2010, PROCEEDINGS, P478, DOI 10.1109/WKDD.2010.54
   Zhou YH, 2008, LECT NOTES COMPUT SC, V5034, P337, DOI 10.1007/978-3-540-68880-8_32
NR 28
TC 4
Z9 4
U1 2
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2017
VL 47
IS 6
BP 867
EP 889
DI 10.1002/spe.2467
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EE
UT WOS:000403114000005
DA 2024-07-18
ER

PT J
AU Portillo-Dominguez, AO
   Perry, P
   Magoni, D
   Murphy, J
AF Portillo-Dominguez, A. Omar
   Perry, Philip
   Magoni, Damien
   Murphy, John
TI PHOEBE: an automation framework for the effective usage of diagnosis
   tools in the performance testing of clustered systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance testing; performance analysis; cluster computing; system
   performance
ID LOAD; STRESS
AB The identification of performance issues and the diagnosis of their root causes are time-consuming and complex tasks, especially in clustered environments. To simplify these tasks, researchers have been developing tools with built-in expertise for practitioners. However, various limitations exist in these tools that prevent their efficient usage in the performance testing of clusters (e.g. the need of manually analysing huge volumes of distributed results). In a previous work, we introduced a policy-based adaptive framework (PHOEBE) that automates the usage of diagnosis tools in the performance testing of clustered systems, in order to improve a tester's productivity, by decreasing the effort and expertise needed to effectively use such tools. This paper extends that work by broadening the set of policies available in PHOEBE, as well as by performing a comprehensive assessment of PHOEBE in terms of its benefits, costs and generality (with respect to the used diagnosis tool). The performed evaluation involved a set of experiments in assessing the different trade-offs commonly experienced by a tester when using a performance diagnosis tool, as well as the time savings that PHOEBE can bring to the performance testing and analysis processes. Our results have shown that PHOEBE can drastically reduce the effort required by a tester to do performance testing and analysis in a cluster. PHOEBE also exhibited consistent behaviour (i.e. similar time-savings and resource utilisations), when applied to a set of commonly used diagnosis tools, demonstrating its generality. Finally, PHOEBE proved to be capable of simplifying the configuration of a diagnosis tool. This was achieved by addressing the identified trade-offs without the need for manual intervention from the tester. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Portillo-Dominguez, A. Omar; Perry, Philip; Murphy, John] Univ Coll Dublin, Sch Comp Sci, Lero, Dublin, Ireland.
   [Magoni, Damien] Univ Bordeaux, LaBRI, Bordeaux, France.
C3 University College Dublin; Centre National de la Recherche Scientifique
   (CNRS); Universite de Bordeaux
RP Portillo-Dominguez, AO (corresponding author), Univ Coll Dublin, Sch Comp Sci, Belfield D4, Ireland.
EM andres.portillodominguez@ucd.ie
RI Magoni, Damien/M-1117-2013
OI Magoni, Damien/0000-0003-2578-1803; Portillo-Dominguez, A.
   Omar/0000-0003-3009-985X
FU Science Foundation Ireland grant [13/RC/2094]; European Regional
   Development Fund through the Southern & Eastern Regional Operational
   Programme; Science Foundation Ireland (SFI) [13/RC/2094] Funding Source:
   Science Foundation Ireland (SFI)
FX This work was supported, in part, by Science Foundation Ireland grant
   13/RC/2094 and co-funded under the European Regional Development Fund
   through the Southern & Eastern Regional Operational Programme to Lero -
   the Irish Software Research Centre (www.lero.ie). Our thanks to Patrick
   O'Sullivan (IBM Dublin Software Lab), as his experience in performance
   testing helped us through the scope definition and validation, as well
   as for giving us the opportunity to work with his IBM System
   Verification Teams. The authors also thank the editor and the anonymous
   reviewers for their helpful comments and suggestions. Likewise, the
   authors appreciate the many discussions about this paper with Vanessa
   Ayala-Rivera.
CR ADRION WR, 1982, COMPUT SURV, V14, P159, DOI 10.1145/356876.356879
   Albert E, 2012, RESOURCE DRIVEN CLP
   Altman E, 2010, ACM SIGPLAN NOTICES, V45, P739, DOI 10.1145/1932682.1869519
   Ammons G., 2004, ECOOP 2004 - Object-Oriented Programming. 18th European Conference. Proceedings (Lecture Notes in Computer Science Vol.3086), P172
   Angelopoulos V., 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P493, DOI 10.1109/COMPSACW.2012.93
   Ayala-Rivera V, 2016, LECT NOTES COMPUT SC, V9867, P163, DOI 10.1007/978-3-319-45381-1_13
   Barham P, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P259
   Barr E. T., 2013, INT S SOFTW TEST AN, P123
   Bayan MS, 2006, P INT COMP SOFTW APP, P229
   Briand L. C., 2006, Genetic Programming and Evolvable Machines, V7, P145, DOI 10.1007/s10710-006-9003-9
   Chan EYK, 2012, SOFTWARE PRACT EXPER, V42, P967, DOI 10.1002/spe.1098
   Chen MY, 2004, USENIX S NETW SYST D, P88
   Chen SP, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P170, DOI 10.1109/ASWEC.2008.53
   Compuware, 2007, APPL PERF MAN SURV
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Csallner C., 2006, INT S SOFTW TEST AN
   Delahaye M, 2015, SOFTWARE PRACT EXPER, V45, P875, DOI 10.1002/spe.2312
   Dobre C., 2014, INT J COMPUTING, V11, P351
   Garousi V., 2006, 28th International Conference on Software Engineering Proceedings, P391, DOI 10.1145/1134285.1134340
   Gonzalez-Sanchez A, 2011, SOFTWARE PRACT EXPER, V41, P1105, DOI 10.1002/spe.1065
   Guo HF, 2015, SOFTWARE PRACT EXPER, V45, P1519, DOI 10.1002/spe.2278
   Haishan Wu, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P483, DOI 10.1109/ICWS.2013.71
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   Hoorn V., 2009, CONTINUOUS MONITORIN
   I.D.C. (IDC), 2012, TECHNICAL REPORT
   Jiang Z.M., 2010, INT S SOFTWARE TESTI, P143
   Jiang ZM, 2009, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSM.2009.5306331
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kumar M, 2015, SOFTWARE PRACT EXPER, V45, P949, DOI 10.1002/spe.2263
   Lee WY, 2003, J PARALLEL DISTR COM, V63, P286, DOI 10.1016/S0743-7315(03)00032-7
   Li MT, 2013, APPL MECH MATER, V327, P112, DOI 10.4028/www.scientific.net/AMM.327.112
   Liu H, 2011, SOFTWARE PRACT EXPER, V41, P1131, DOI 10.1002/spe.1067
   Malik H., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P201, DOI 10.1109/ISSRE.2010.43
   Manolache LI, 2001, SOFTWARE PRACT EXPER, V31, P1211, DOI 10.1002/spe.409
   Parsons  Trevor, 2008, INT MIDDL DOCT S GRE, P1
   Poon PL, 2011, SOFTWARE QUAL J, V19, P141, DOI 10.1007/s11219-010-9109-4
   Portillo-Dominguez A. O., 2012, INF TECHN TEL C CORK, P137
   Portillo-Dominguez AO, 2016, SOFTWARE PRACT EXPER, V46, P1705, DOI 10.1002/spe.2391
   Portillo-Dominguez AO, 2015, IEEE HI ASS SYS ENGR, P68, DOI 10.1109/HASE.2015.19
   Portillo-Dominguez AO, 2014, INT SYMP PARA DISTR, P127, DOI 10.1109/ISPDC.2014.20
   Portillo-Dominguez AO, 2014, IEEE ICST WORKSHOP, P370, DOI 10.1109/ICSTW.2014.46
   Portillo-Dominguez A Omar, 2014, P JAMAICA, P22
   Robertson P, 2000, INT WORKSH SELF AD S, P1
   Rolia J, 2003, LECT NOTES COMPUT SC, V2867, P118
   Ruggeri F., 2007, ENCY STAT QUALITY RE
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Shihab E, 2011, SOFTWARE PRACT EXPER, V41, P1027, DOI 10.1002/spe.1053
   Spear W., 2009, Proceedings of the 2009 DoD High Performance Computing Modernization Program Users Group Conference (HPCMP-UGC 2009), P430, DOI 10.1109/HPCMP-UGC.2009.71
   SUN Microystems, 2006, Memory Management in the Java HotSpot Virtual Machine.
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Wang XG, 2013, J CHIN INST ENG, V36, P74, DOI 10.1080/02533839.2012.726028
   Weyns D, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P3, DOI 10.1109/SEAMS.2013.6595487
   Woodside M, 2007, FUTURE SOFTWARE ENG, P1
   Xiao Xusheng, 2013, P 2013 INT S SOFTW T, P90, DOI DOI 10.1145/2483760.2483784
   Yancey W.E., 2005, EVALUATING STRING CO
   Yu K, 2012, IEEE INT CONF AUTOM, P20, DOI 10.1145/2351676.2351681
   Yu T., 2013, Proceedings of the International Symposium on Software Testing and Analysis, P167
   Zhang J, 2002, SOFTWARE PRACT EXPER, V32, P1411, DOI 10.1002/spe.487
NR 58
TC 5
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1837
EP 1874
DI 10.1002/spe.2500
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500016
OA Green Published
DA 2024-07-18
ER

PT J
AU Ruano-Ordás, D
   Fdez-Glez, J
   Fdez-Riverola, F
   Méndez, JR
AF Ruano-Ordas, David
   Fdez-Glez, Jorge
   Fdez-Riverola, Florentino
   Ramon Mendez, Jose
TI Using new scheduling heuristics based on resource consumption
   information for increasing throughput on rule-based spam filtering
   systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE rule optimization schedulers; increasing filtering throughput; spam
   detection; anti-spam filtering platforms; resource consumption-based
   heuristics; Wirebrush4SPAM framework
AB The large increase of spam deliveries since the first half of 2013 entailed hard to solve troubles in spam filters. In order to adequately fight spam, the throughput of spam filtering platforms should be necessarily increased. In this context, and taking into consideration the widespread utilization of rule-based filtering frameworks in the spam filtering domain, this work proposes three novel scheduling strategies for optimizing the time needed to classify new incoming e-mails through an intelligent management of computational resources depending on the Central Processing Unit (CPU) usage and Input/Output (I/O) delays. In order to demonstrate the suitability of our approaches, we include in our experiments a comparative study in contrast to other successful heuristics previously published in the scientific literature. Results achieved demonstrated that one of our alternative heuristics allows time savings of up to 10% in message filtering, while keeping the same classification accuracy. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Ruano-Ordas, David; Fdez-Glez, Jorge; Fdez-Riverola, Florentino; Ramon Mendez, Jose] Univ Vigo, Dept Comp Sci, ESEI, Campus As Lagoas, Orense 32004, Spain.
C3 Universidade de Vigo
RP Méndez, JR (corresponding author), Univ Vigo, Dept Comp Sci, ESEI, Campus As Lagoas, Orense 32004, Spain.
EM moncho.mendez@uvigo.es
RI Ruano-Ordás, David/G-8482-2017; Fdez-Riverola, Florentino/G-1411-2011;
   Méndez Reboredo, José Ramón/F-3993-2016
OI Ruano-Ordás, David/0000-0002-6050-373X; Fdez-Riverola,
   Florentino/0000-0002-3943-8013; Méndez Reboredo, José
   Ramón/0000-0002-1935-4760
FU University of Vigo [14VI05]
FX This work was partially funded by the [14VI05] Contract-Program from the
   University of Vigo. D. Ruano-Ordas was supported by a pre-doctoral
   fellowship from the University of Vigo.
CR De W, 2013, P 9 INT C COLL COMP, P1
   Doreian P, 2009, EVOLUTION SOCIAL NET
   Fdez-Riverola F, 2007, DECIS SUPPORT SYST, V43, P722, DOI 10.1016/j.dss.2006.11.012
   Godwin C, 2013, NEUROCOMPUTING, V108, P45
   Heydari A, 2015, EXPERT SYST APPL, V42, P3634, DOI 10.1016/j.eswa.2014.12.029
   Internet World Stats, 2014 INT GROWTH STAT
   Jeftovic M., FILTER PLX CONTEXT K
   Krebs B, SMAP VOLUMES PRESENT
   McAfee Inc, DAT SHEET POW INCL S
   Pérez-Díaz N, 2013, SOFTWARE PRACT EXPER, V43, P1299, DOI 10.1002/spe.2135
   Pérez-Díaz N, 2012, EXPERT SYST APPL, V39, P12487, DOI 10.1016/j.eswa.2012.04.064
   Robinson G., THE SPAMOMETER
   Ruano-Ordás D, 2013, J SYST SOFTWARE, V86, P3151, DOI 10.1016/j.jss.2013.07.036
   Sandeep Y, 2013, INT J MANAGEMENT IT, V3, P155
   Song Y, 2009, SOFTWARE PRACT EXPER, V39, P1003, DOI 10.1002/spe.925
   Symantec Corporation, SYM MESS GAT 10 5 DA
   Symantec Corporation, 2000 2009 SPAM EXPL
   Yevseyeva I, 2013, EXPERT SYST APPL, V40, P4010, DOI 10.1016/j.eswa.2013.01.008
NR 18
TC 5
Z9 6
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2016
VL 46
IS 8
BP 1035
EP 1051
DI 10.1002/spe.2343
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR4ZQ
UT WOS:000379912900002
DA 2024-07-18
ER

PT J
AU Inzinger, C
   Hummer, W
   Satzger, B
   Leitner, P
   Dustdar, S
AF Inzinger, Christian
   Hummer, Waldemar
   Satzger, Benjamin
   Leitner, Philipp
   Dustdar, Schahram
TI Generic event-based monitoring and adaptation methodology for
   heterogeneous distributed systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE monitoring; adaptation; complex Systems; domain-specific language;
   deployment; operator placement
AB The Cloud computing paradigm provides the basis for a class of platforms and applications that face novel challenges related to multi-tenancy, adaptivity, and elasticity. To account for service delivery guarantees in the face of ever increasing levels of heterogeneity, scale, and dynamism, service provisioning in the Cloud has raised the demand for systematic and flexible approaches to monitoring and adaptation of applications. In this paper, we tackle this issue and present a framework for efficient runtime management of Cloud environments and distributed heterogeneous systems in general. A novel domain-specific language termed MONINA is introduced that allows to define integrated monitoring and adaptation functionality for controlling such systems. We propose a mechanism for optimal deployment of the defined control operators onto available computing resources. Deployment is based on solving a quadratic programming problem, which aims at achieving minimized reaction times, low overhead, and scalable monitoring and adaptation. The monitoring infrastructure is based on a distributed messaging middleware, providing high level of decoupling and allowing new monitoring nodes to join the system dynamically. We provide a detailed formalization of the problem domain, discuss architectural details, highlight the implementation of the developed prototype, and put our work into perspective with existing work in the field. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Inzinger, Christian; Hummer, Waldemar; Satzger, Benjamin; Leitner, Philipp; Dustdar, Schahram] Vienna Univ Technol, Distributed Syst Grp, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Inzinger, C (corresponding author), Vienna Univ Technol, Distributed Syst Grp, Argentinierstr 8-184-1, A-1040 Vienna, Austria.
EM inzinger@dsg.tuwien.ac.at
RI Dustdar, Schahram/G-9877-2015; Inzinger, Christian/B-5490-2014
OI Dustdar, Schahram/0000-0001-6872-8821; Inzinger,
   Christian/0000-0002-8924-0355; Hummer, Waldemar/0000-0002-8559-3727
FU European Commission [257483]; Austrian Science Fund (FWF) [P23313-N23];
   Austrian Science Fund (FWF) [P23313] Funding Source: Austrian Science
   Fund (FWF)
FX This research has received funding from the European Commission's
   Seventh Framework Program (FP7/2007-2013) under grant agreement 257483
   (Indenica) and from the Austrian Science Fund (FWF) under grant
   P23313-N23 (Audit 4 SOAs).
CR Ahmad Yanif., 2004, Proceedings of the Thirtieth International Conference on Very Large Data Bases - Volume 30 - VLDB'04, P456
   Almeida EE, 2007, IEEE T AUTOM SCI ENG, V4, P167, DOI 10.1109/TASE.2006.880857
   [Anonymous], GUR OPT REF MAN
   [Anonymous], ActiveMQ
   Apache Software Foundation, TUSC SCA
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Bazaraa M.S., 1990, LINEAR PROGRAMMING N, DOI DOI 10.1002/0471787779
   Cardellini V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/1595696.1595718
   CHEN Y., 2007, ICAC 07, P3, DOI DOI 10.1016/S0166-526X(06)48001-6
   Comuzzi M, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P783, DOI 10.1109/ICWS.2009.47
   Eclipse Foundation, XTEXT DOC
   EsperTech, ESP REF DOC
   Gueyoung Jung, 2008, 2008 International Conference on Autonomic Computing (ICAC '08), P23, DOI 10.1109/ICAC.2008.21
   Hummer Waldemar, 2013, Middleware 2013. ACM/IFIP/USENIX 14th International Middleware Conference. Proceedings: LNCS 8275, P368, DOI 10.1007/978-3-642-45065-5_19
   Hummer W, 2011, LECT NOTES COMPUT SC, V7045, P451, DOI 10.1007/978-3-642-25106-1_3
   Inzinger C, 2012, LNCS, V7759, P167, DOI [10.1007/978-3-642-37804-1_18, DOI 10.1007/978-3-642-37804-1_18]
   Inzinger C., 2012, S APPL COMP SAC 12 A, P504, DOI DOI 10.1145/2276.2245373
   Inzinger C, 2012, SYM REL DIST SYST, P404, DOI 10.1109/SRDS.2012.78
   Lakshmanan GT, 2008, IEEE INTERNET COMPUT, V12, P50, DOI 10.1109/MIC.2008.129
   Leitner P, 2013, IEEE T SERV COMPUT, V6, P239, DOI 10.1109/TSC.2011.53
   Muhl G, 2006, Distributed Event-Based Systems
   OpenStack Foundation, OPENSTACK HEAT
   Pietzuch P., 2006, 22 INT C DAT ENG ICD, P49, DOI [10.1109/ICDE.2006, 10.1109/ICDE.2006.105, DOI 10.1109/ICDE.2006.105]
   Satzger B, 2008, LECT NOTES COMPUT SC, V5060, P60
   Satzger B, 2013, NAT COMPUT, V12, P87, DOI 10.1007/s11047-012-9332-y
   Satzger B, 2013, IEEE INTERNET COMPUT, V17, P69, DOI 10.1109/MIC.2013.19
   Schilling B., 2011, Proceedings of the 2011 IEEE 13th International Conference on High Performance Computing and Communication (HPCC 2011). 2011 IEEE International Workshop on Future Trends of Distributed Computing Systems (FTDCS 2011). Workshops of the 2011 International Conference on Ubiquitous Intelligence and Computing (UIC 2011). Workshops of the 2011 International Conference on Autonomic and Trusted Computing (ATC 2011), P355, DOI 10.1109/HPCC.2011.53
   Srivastava U., 2005, P 24 ACM SIGMOD SIGA, P250, DOI [10.1145/1065167.1065199, DOI 10.1145/1065167.1065199]
   The JBoss Drools team, DROOLS EXP US GUID
   Vinoski S, 2006, IEEE INTERNET COMPUT, V10, P87, DOI 10.1109/MIC.2006.116
   W3C, 2007, SOAP VERS 1 2 1
   Xing Y, 2005, PROC INT CONF DATA, P791
   Xing Y., 2006, Proceedings of the 32nd international conference on Very large data bases, P775
   Zang C, 2007, ENTERP INF SYST-UK, V1, P3, DOI 10.1080/17517570601092127
NR 34
TC 20
Z9 20
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2014
VL 44
IS 7
SI SI
BP 805
EP 822
DI 10.1002/spe.2254
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ5NN
UT WOS:000337731000004
DA 2024-07-18
ER

PT J
AU Zhang, WF
   Wang, LZ
   Ma, Y
   Liu, DS
AF Zhang, Wanfeng
   Wang, Lizhe
   Ma, Yan
   Liu, Dingsheng
TI Design and implementation of task scheduling strategies for massive
   remote sensing data processing across multiple data centers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multi-datacenter infrastructure; data intensive computing; task
   scheduling; big data computing
ID SHARING FILES; MANAGEMENT
AB Data intensive applications of remote sensing data processing are more and more widespread resulting from the evolutions in computer and network technologies. Especially, bags-of-tasks (BoTs) applications with a mass of sharing input files and directed acyclic graph (DAG) applications with data dependencies in a widely distributed computing environment bring new challenges. In this article, a strategy of partitioning group based on hypergraph (PGH) is introduced to formulate the model of sharing files. Within the PGH algorithm, BoTs applications would be partitioned into several groups to minimize the time of data transferring. We also adopted another scheduling policy, which is called optimized task tree (OTT) strategy to handle the DAG workflow of massive remote sensing data processing with data dependencies. A scheduling queue of DAG tasks would be updated according to the priorities changing. With the help of GridSim simulation environment, we designed the Gridlets within scheduler to test the performance of PGH and OTT. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Zhang, Wanfeng; Wang, Lizhe; Ma, Yan; Liu, Dingsheng] Chinese Acad Sci, Inst Remote Sensing & Digital Earth, Beijing 100864, Peoples R China.
   [Wang, Lizhe] China Univ Geosci, Sch Comp, Beijing, Peoples R China.
   [Zhang, Wanfeng] Univ Chinese Acad Sci, Beijing, Peoples R China.
C3 Chinese Academy of Sciences; The Institute of Remote Sensing & Digital
   Earth, CAS; China University of Geosciences; Chinese Academy of
   Sciences; University of Chinese Academy of Sciences, CAS
RP Wang, LZ (corresponding author), Chinese Acad Sci, Inst Remote Sensing & Digital Earth, Beijing 100864, Peoples R China.
EM Lizhe.Wang@gmail.com
RI Ma, Yan/AAH-5069-2019; Wang, Lizhe/L-7453-2014
OI Wang, Lizhe/0000-0003-2766-0845
FU National Natural Science Foundation of China [61361120098]
FX Dr. Lizhe Wang's work is supported by National Natural Science
   Foundation of China (61361120098).
CR Aho AlfredV., 2007, Compilers: principles, techniques, tools, V1009
   ALHUSAINI AH, 1999, 8 HET COMP WORKSH HC
   Ali S., 2000, Proceedings 9th Heterogeneous Computing Workshop (HCW 2000) (Cat. No.PR00556), P185, DOI 10.1109/HCW.2000.843743
   [Anonymous], TECHNICAL REPORT
   [Anonymous], INT HUMAN RIGHTS LAW
   Balman M, 2008, P 15 ACM MARD GRAS C
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1175, DOI 10.1002/cpe.710
   Casanova H., 2000, Proceedings 9th Heterogeneous Computing Workshop (HCW 2000) (Cat. No.PR00556), P349, DOI 10.1109/HCW.2000.843757
   Çatalyürek ÜV, 1999, IEEE T PARALL DISTR, V10, P673, DOI 10.1109/71.780863
   Chaves CG, 2010, GLOB TEL C GLOBECOM
   Chen D, 2011, COMPUT SCI ENG, V13, P42, DOI 10.1109/MCSE.2011.20
   da Silva FAB, 2004, LECT NOTES COMPUT SC, V3149, P254
   Dong F., 2006, Scheduling algorithms for grid computing: State of the art and open problems
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Giersch A, 2006, J SYST ARCHITECT, V52, P88, DOI 10.1016/j.sysarc.2004.10.008
   Hagerup T, 1997, J PARALLEL DISTR COM, V47, P185, DOI 10.1006/jpdc.1997.1411
   Heymann E., 2000, Grid Computing - GRID 2000. First IEEE/ACM International Workshop. Proceedings (Lecture Notes in Computer Science Vol.1971), P214
   Kaya K, 2006, IEEE T PARALL DISTR, V17, P883, DOI 10.1109/TPDS.2006.105
   KHANNA G, 2005, P 5 IEEE INT S CLUST
   Kosar T, 2009, FUTURE GENER COMP SY, V25, P406, DOI 10.1016/j.future.2008.09.006
   Lee YC, 2006, PROC INT CONF PARAL, P365
   Menzel M, 2012, INT ACM C WORLD WID
   Murshed M, 2002, INT C COMMUN NETW DI
   Rahman M, 2011, CONCURR COMP-PRACT E, V23, P1990, DOI 10.1002/cpe.1734
   Ranjan R., 2006, Proceedings of the IEEE International Conference on Cluster Computing, P1
   Ranjan R, 2013, J INTERNET SERV APPL, V4, DOI 10.1186/1869-0238-4-2
   Ranjan R, 2012, J SUPERCOMPUT, V61, P292, DOI 10.1007/s11227-010-0426-y
   Sarkar V, 1989, ACM SIGPLAN NOTICES
   Silberstein M., 2011, P 4 ANN INT C SYST S
   Song WJ, 2011, INT C PAR DISTRIB SY, P976, DOI 10.1109/ICPADS.2011.134
   Sulistio A, 2005, 6 INT C INT COMP ICO
   Topcuoglu H, 2002, IEEE T PARALL DISTR, V13, P260, DOI 10.1109/71.993206
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P739, DOI 10.1016/j.future.2012.09.001
   Wang LZ, 2012, INT J AD HOC UBIQ CO, V10, P96, DOI 10.1504/IJAHUC.2012.048261
   Wang LZ, 2011, ADV ENG SOFTW, V42, P714, DOI 10.1016/j.advengsoft.2011.05.007
   Wang LZ, 2011, COMPUT ELECTR ENG, V37, P300, DOI 10.1016/j.compeleceng.2011.01.004
   Zhang WF, 2013, CONCURR COMP-PRACT E, V25, P1798, DOI 10.1002/cpe.2966
NR 37
TC 21
Z9 24
U1 2
U2 27
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2014
VL 44
IS 7
SI SI
BP 873
EP 886
DI 10.1002/spe.2229
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ5NN
UT WOS:000337731000008
DA 2024-07-18
ER

PT J
AU Garcia, M
   Bessani, A
   Gashi, I
   Neves, N
   Obelheiro, R
AF Garcia, Miguel
   Bessani, Alysson
   Gashi, Ilir
   Neves, Nuno
   Obelheiro, Rafael
TI Analysis of operating system diversity for intrusion tolerance
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE replication; diversity; operating systems; vulnerabilities; intrusion
   tolerance
ID FAULT-TOLERANCE; DESIGN
AB One of the key benefits of using intrusion-tolerant systems is the possibility of ensuring correct behavior in the presence of attacks and intrusions. These security gains are directly dependent on the components exhibiting failure diversity. To what extent failure diversity is observed in practical deployment depends on how diverse are the components that constitute the system. In this paper, we present a study with operating system's (OS's) vulnerability data from the NIST National Vulnerability Database (NVD). We have analyzed the vulnerabilities of 11 different OSs over a period of 18 years, to check how many of these vulnerabilities occur in more than one OS. We found this number to be low for several combinations of OSs. Hence, although there are a few caveats on the use of NVD data to support definitive conclusions, our analysis shows that by selecting appropriate OSs, one can preclude (or reduce substantially) common vulnerabilities from occurring in the replicas of the intrusion-tolerant system. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Garcia, Miguel; Bessani, Alysson; Neves, Nuno] Univ Lisbon, Fac Sci, P-1749016 Lisbon, Portugal.
   [Gashi, Ilir] City Univ London, London EC1V 0HB, England.
   [Obelheiro, Rafael] State Santa Catarina Univ, Florianopolis, SC, Brazil.
C3 Universidade de Lisboa; City University London
RP Garcia, M (corresponding author), Univ Lisbon, Fac Sci, C6,Room 6-3-35, P-1749016 Lisbon, Portugal.
EM mhenriques@lasige.di.fc.ul.pt
RI ; Neves, Nuno/F-5261-2010
OI Bessani, Alysson/0000-0002-8386-1628; Neves, Nuno/0000-0003-0411-4542;
   Gashi, Ilir/0000-0002-8017-3184; Garcia, Miguel/0000-0002-4920-2151
FU EC [FP7-257475]; FCT; CMU-Portugal Programs; Strategic Development Fund
   (SDF); Pump Priming Fund grant;  [PTDC/EIA-EIA/100894/2008]; Fundação
   para a Ciência e a Tecnologia [PTDC/EIA-EIA/100894/2008] Funding Source:
   FCT
FX We would like to thank Paulo Sousa for his early work on this research
   effort and Peter Bishop for commenting on earlier drafts. This work was
   partially supported by the EC through project FP7-257475 (MASSIF) and by
   the FCT through the Multiannual and the CMU-Portugal Programs, and the
   project PTDC/EIA-EIA/100894/2008 (DIVERSE). Ilir Gashi has been
   supported by a Strategic Development Fund (SDF) and a Pump Priming Fund
   grant, both from City University London.
CR Abd-El-Malek M., 2005, ACM SIGOPS Operating Systems Review, P59, DOI DOI 10.1145/1095810.1095817
   Alhazmi OH, 2005, P REL MAINT S, P615, DOI 10.1109/RAMS.2005.1408432
   Alhazmi OH, 2008, IEEE T RELIAB, V57, P14, DOI 10.1109/TR.2008.916872
   Anbalagan P, 2009, P INT S SOFTW REL EN, P136, DOI [10.1109/ISSRE.2009.25, DOI 10.1109/ISSRE.2009.25]
   Anderson R. J., 2002, C OP SOURC SOFTW EC
   [Anonymous], 2011, SYM INT SEC THREAT R
   Avizienis A, 1977, P S HIGH SPEED ALG O, P173
   Bessani AN, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P163, DOI 10.1145/1357010.1352610
   Castro M, 2003, ACM T COMPUT SYST, V21, P236, DOI 10.1145/859716.859718
   Castro M, 2002, ACM T COMPUT SYST, V20, P398, DOI 10.1145/571637.571640
   Chou A., 2001, Operating Systems Review, V35, P73, DOI 10.1145/502059.502042
   Clement A, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P277
   Correia M, 2004, SYM REL DIST SYST, P174, DOI 10.1109/RELDIS.2004.1353018
   Deswarte Y., 1998, Proceedings of Computer Security, Dependability and Assurance: From Needs to Solutions, P171
   Distler T, 2010, P SICH SCHUTZ ZUV C, P61
   Forrest S, 1997, SIXTH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, PROCEEDINGS, P67, DOI 10.1109/HOTOS.1997.595185
   Ganapathi A., 2006, LISA '06: Proceedings of the 20th conference on Large Installation System Administration, P12
   Garcia M, 2011, I C DEPEND SYS NETWO, P383, DOI 10.1109/DSN.2011.5958251
   Gashi I, 2007, IEEE T DEPEND SECURE, V4, P280, DOI 10.1109/TDSC.2007.70208
   Geer D, 2003, TECHNICAL REPORT
   Gorbenko Anatoliy, 2011, Software Engineering for Resilient Systems. Proceedings Third International Workshop (SERENE 2011), P145, DOI 10.1007/978-3-642-24124-6_14
   Hatton L, 1997, IEEE SOFTWARE, V14, P71, DOI 10.1109/52.636672
   Hofmeyr SA, 2000, EVOL COMPUT, V8, P443, DOI 10.1162/106365600568257
   Joseph M. K., 1988, Proceedings of the 1988 IEEE Symposium on Security and Privacy (Cat. No.88CH2558-5), P52, DOI 10.1109/SECPRI.1988.8097
   Kapitza R., 2012, P 7 ACM EUR C COMP S, V12, P295, DOI DOI 10.1145/2168836.2168866
   Kim J, 2007, HASE 2007: 10TH IEEE HIGH ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P141, DOI 10.1109/HASE.2007.55
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   Koopman P, 1999, DIG PAP INT SYMP FAU, P30, DOI 10.1109/FTCS.1999.781031
   Kotla R, 2009, ACM T COMPUT SYST, V27, DOI [10.1145/1323293.1294267, 10.1145/1658357.1658358]
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Litchfield D., 2002, Hackproofing Oracle Application Server
   Littlewood B, 2004, LECT NOTES COMPUT SC, V3193, P423
   Littlewood B, 2001, ACM COMPUT SURV, V33, P177, DOI 10.1145/384192.384195
   McAfee Labs, 2009, 2010 THREAT PRED
   Microsoft, 2010, SUPP WIND 2000 WIND
   Miller B., 1995, 19951268 CSTR U WISC
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Moniz H, 2011, IEEE T DEPEND SECURE, V8, P122, DOI 10.1109/TDSC.2008.76
   Nikora A, 1996, HDB SOFTWARE RELIABI, P255
   OBELHEIRO RR, 2006, 0615 DIFCUL TR U LIS
   Oment A, 2006, USENIX Association Proceedings of the 15th USENIX Security Symposium, P93
   Ozment A., 2007, THESIS U CAMBRIDGE
   Rajnovic D, 2011, MONOCULTURE OTHER SI
   Randell B., 1975, SIGPLAN Notices, V10, P437, DOI 10.1145/390016.808467
   Ransbotham S, 2010, P WORKSH EC INF SEC
   RedHat, 2009, DOES CVE 2008 4609 A
   Rescorla E, 2005, IEEE SECUR PRIV, V3, P14, DOI 10.1109/MSP.2005.17
   Roeder T, 2010, ACM T COMPUT SYST, V28, DOI 10.1145/1813654.1813655
   Schryen G., 2009, AMCIS 2009 P, P387
   Serafini M, 2010, I C DEPEND SYS NETWO, P353, DOI 10.1109/DSN.2010.5544295
   Shankland, 2010, ORACLE APPARENTLY SH
   Sousa P, 2010, IEEE T PARALL DISTR, V21, P452, DOI 10.1109/TPDS.2009.83
   Symantec, 2012, SYM INT SEC THREAT R
   Veríssimo PE, 2003, LECT NOTES COMPUT SC, V2677, P3
   Verton D, 2003, ANTIMICROSOFT SECURI
   W3Techs, 2012, US STAT MARK SHAR MA
   Wood T, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P123
   Yin J., 2003, P 19 ACM S OP SYST P, P253, DOI [10.1145/945445.945470, DOI 10.1145/945445.945470]
NR 58
TC 57
Z9 70
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2014
VL 44
IS 6
BP 735
EP 770
DI 10.1002/spe.2180
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH0QS
UT WOS:000335825800004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Kiefer, KE
   Moser, LE
AF Kiefer, Kurt E.
   Moser, Louise E.
TI Replay debugging of non-deterministic executions in the Kernel-based
   Virtual Machine
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE debugging; replay debugging; logging and replay; non-deterministic
   executions; virtualization; virtual machine; KVM
AB Logging and replay provide numerous benefits for debugging today's increasingly distributed and parallel applications, as well as for debugging within cloud computing environments. Tracking down faults, particularly in applications that involve non-deterministic executions, becomes much easier if such a technique is used. This article presents a system that leverages the functionality of modern x86 hardware extensions present in Intel and AMD processors to implement logging and replay of the Kernel-based Virtual Machine (KVM). With our KVM-based logging and replay system, virtual machines can be logged at will. The system can record the behavior of the operating system, the applications, the network traffic, and the user input. At a later time, and even on another machine, the problematic execution can be replayed and analyzed. The implementation incurs a minimal amount of processing and memory overhead, and thus, its effects are largely imperceptible to users of the system. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Kiefer, Kurt E.; Moser, Louise E.] Univ Calif Santa Barbara, Dept Elect & Comp Engn, Santa Barbara, CA 93106 USA.
C3 University of California System; University of California Santa Barbara
RP Kiefer, KE (corresponding author), Univ Calif Santa Barbara, Dept Elect & Comp Engn, Santa Barbara, CA 93106 USA.
EM kekiefer@gmail.com
CR [Anonymous], INT 64 IA 32 ARCH SO
   [Anonymous], 2008, LINUX J
   [Anonymous], 2008, P 2 INT C VIRT COMP
   Cornelis F, 2003, P INT C ADV INFR EL, P203
   Deshane T, 2008, P XEN SUMM JUN
   Dieter WR, 1999, DIG PAP INT SYMP FAU, P224, DOI 10.1109/FTCS.1999.781054
   Dionne Carl., 1996, P 1996 INT C PARALLE, P203
   Dunlap GW, 2008, VEE'08: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P121
   Dunlap GW, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P211, DOI 10.1145/1060289.1060309
   Eeckhout L, 2003, ACM SIGPLAN NOTICES, V38, P169, DOI 10.1145/949343.949321
   Feng W, 2007, P INT C VIRT COMP IN
   Gatliff B, 1999, EMBED SYST PROGRAM, V12, P108
   Geels D, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 2006 USENIX ANNUAL TECHNICAL CONFERENCE, P289
   Keahey K, 2004, FIFTH IEEE/ACM INTERNATIONAL WORKSHOP ON GRID COMPUTING, PROCEEDINGS, P34, DOI 10.1109/GRID.2004.32
   Kiefer KE, 2010, P 2010 ANN INT C CLO, P270
   Kivity A, 2008, P LIN S LIN S OTT ON, V1, P225
   Konuru R., 2000, Proceedings 14th International Parallel and Distributed Processing Symposium. IPDPS 2000, P219, DOI 10.1109/IPDPS.2000.845988
   Narayanasamy S, 2005, CONF PROC INT SYMP C, P284, DOI 10.1109/ISCA.2005.16
   Niki H., GNU WGET
   PAN DZ, 1989, SIGPLAN NOTICES, V24, P124, DOI 10.1145/69215.69227
   Peikari C., 2004, Security warrior, V1st
   Russell Rusty, 2008, Operating Systems Review, V42, P95, DOI 10.1145/1400097.1400108
   Shiv K, 2009, LECT NOTES COMPUT SC, V5419, P17
   Sorin JD, 2002, ACM SIGARCH COMP ARC, V30, P123
   Srinivasan SM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK 2004 USENIX ANNUAL TECHNICAL CONFERENCE, P29
   Uhlig R, 2005, COMPUTER, V38, P48, DOI 10.1109/MC.2005.163
   Virtualization A., 2005, AMD PUBL
   Woo S, 1995, ACM SIGARCH COMP ARC, V26, P24
   Xu M, 2003, CONF PROC INT SYMP C, P122, DOI 10.1109/ISCA.2003.1206994
   Xu Min, 2007, P 3 ANN WORKSH MOD B
   Zhao W, 2004, P IEEE INT C DEP SYS, P110
NR 31
TC 1
Z9 1
U1 1
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2013
VL 43
IS 11
SI SI
BP 1261
EP 1281
DI 10.1002/spe.1094
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 233IF
UT WOS:000325561000002
DA 2024-07-18
ER

PT J
AU Carreton, AL
   Pinte, K
   De Meuter, W
AF Carreton, Andoni Lombide
   Pinte, Kevin
   De Meuter, Wolfgang
TI Software abstractions for mobile RFID-enabled applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE RFID; pervasive computing; ambient-oriented programming; mobile
   RFID-enabled applications
ID CONCURRENCY; MIDDLEWARE
AB Our everyday environments may soon be pervaded with radio frequency identification (RFID) tags integrated in physical objects. These RFID tags can store a digital representation of the physical object and transmit it wirelessly to pervasive, context-aware applications running on mobile devices. However, communicating with RFID tags is prone to many failures inherent to the technology. This hinders the development of such applications, as traditional programming models require the programmer to deal with the RFID hardware characteristics manually. On the other hand, traditional RFID middleware focuses on limited scenarios in an enterprise context and not on general ubiquitous computing scenarios. In this paper, we extend the ambient-oriented programming paradigm to program RFID applications, by considering RFID tags as intermittently connected mutable proxy objects hosted on mobile distributed computing devices, and detail our prototype implementation. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Carreton, Andoni Lombide; Pinte, Kevin; De Meuter, Wolfgang] Vrije Univ Brussel, Software Languages Lab, B-1050 Brussels, Belgium.
C3 Vrije Universiteit Brussel
RP Carreton, AL (corresponding author), Vrije Univ Brussel, Software Languages Lab, Pl Laan 2, B-1050 Brussels, Belgium.
EM alombide@vub.ac.be
FU "Institute for the Promotion of Innovation through Science and
   Technology in Flanders" (IWT Vlaanderen)
FX Andoni Lombide Carreton is funded by a doctoral scholarship of the
   "Institute for the Promotion of Innovation through Science and
   Technology in Flanders" (IWT Vlaanderen).
CR Agha G., 1986, Actors: a model of concurrent computation in distributed systems
   [Anonymous], 2010, P USENIX ANN TECH C
   Bleecker Julian., 2006, A Manifesto for Networked Objects
   Briot JP, 1998, ACM COMPUT SURV, V30, P291, DOI 10.1145/292469.292470
   Carey MJ, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P3
   Carreton AL, 2010, LECT NOTES COMPUT SC, V6115, P56, DOI 10.1007/978-3-642-13645-0_5
   DEDECKER J, 2005, 20 ANN ACM SIGPLAN C, P31, DOI DOI 10.1145/1094855.1094867
   Dedecker J, 2006, LECT NOTES COMPUT SC, V4067, P230
   Fleck M., 2002, IEEE Pervasive Computing, V1, P13, DOI 10.1109/MPRV.2002.1012333
   Floerkemeier C, 2006, INTERNATIONAL SYMPOSIUM ON APPLICATIONS AND THE INTERNET WORKSHOPS, PROCEEDINGS, P92, DOI 10.1109/SAINT-W.2006.10
   Floerkemeier C, 2007, IEEE SYST J, V1, P82, DOI 10.1109/JSYST.2007.909778
   GRAY C, 1989, SOSP 89, P202, DOI DOI 10.1145/74850.74870
   Juels A, 2006, IEEE J SEL AREA COMM, V24, P381, DOI 10.1109/JSAC.2005.861395
   Kefalakis N., 2008, ACM IFIP USENIX MIDD, P66
   Kulyukin V, 2004, IEEE INT C INT ROB S, V2, P1979
   Luh YP, 2011, WIRELESS PERS COMMUN, V59, P147, DOI 10.1007/s11277-010-0198-y
   MAMEI M, 2006, S APPL COMP, P434, DOI DOI 10.1145/1141277.1141378
   Miller MS, 2005, LECT NOTES COMPUT SC, V3705, P195, DOI 10.1007/11580850_12
   Murphy AL, 2001, INT CON DISTR COMP S, P524, DOI 10.1109/ICDSC.2001.918983
   *OR, DEV AUTOID SOL US SU
   Philipose M, 2004, IEEE PERVAS COMPUT, V3, P50, DOI 10.1109/MPRV.2004.7
   PINTE K, 2011, COORD MOD LANG 13 IN
   PRABHU BS, 2008, WINRFID MIDDLEWARE E
   Roussos G, 2009, PERVASIVE MOB COMPUT, V5, P110, DOI 10.1016/j.pmcj.2008.11.004
   Ungar D., 1991, LISP and Symbolic Computation, V4, P223, DOI 10.1007/BF01806107
   Van Cutsem T, 2007, P INT C CHIL COMPUT, P3, DOI 10.1109/SCCC.2007.12
   VANCUTSEM T, 2006, 21 ACM SIGPLAN S OBJ, P986, DOI DOI 10.1145/1176617.1176757
   Waller V, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1562764.1562796
NR 28
TC 1
Z9 1
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2013
VL 43
IS 10
SI SI
BP 1219
EP 1239
DI 10.1002/spe.1114
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 212YJ
UT WOS:000324018600006
OA Bronze
DA 2024-07-18
ER

PT J
AU Loureiro, A
   Porto, JP
   Araujo, G
AF Loureiro, Andre
   Porto, Joao Paulo
   Araujo, Guido
TI Extending decoupled software pipeline to parallelize Java programs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE parallel programming; pipeline; Java; performance
AB Programmers can no longer rely solely on micro-architectural and technology improvements to have their programs running faster. In today's multicore chips, parallel code needs to be explicitly written to extract any benefits from the extra available processing power. A recently proposed technique to parallelize general-purpose programs' loops at the binary level, called decoupled software pipeline (DSWP), has shown good performance numbers only under the assumption of a fast hardware intercore communication queue. In this paper, we propose Java-DSWP, a source-level DSWP-based parallelization technique that is much simpler than original DSWP and can be used to effectively parallelize Java applications. In addition, we propose and evaluate a software intercore communication scheme that enables code parallelized through Java-DSWP to be executed in commodity machines, thus not requiring a hardware intercore communication queue to be efficient, as DSWP does. We analyze three memory communication queue implementations and show experimental results that reveal an average 48% speedup on some SPCjvm2008 benchmarks. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Loureiro, Andre; Porto, Joao Paulo; Araujo, Guido] Univ Estadual Campinas, Inst Comp, Lab Sistemas Comp, BR-13083852 Campinas, SP, Brazil.
C3 Universidade Estadual de Campinas
RP Loureiro, A (corresponding author), Univ Estadual Campinas, Inst Comp, AC Andre Oliveira Loureiro Baixo, Lab Sistemas Comp, Av Albert Einstein,1251 Cidade Univ, BR-13083852 Campinas, SP, Brazil.
EM andre.oliveira@lsc.ic.unicamp.br
RI UNICAMP, CCES -/J-7787-2015
CR Aldinucci M., 2009, TR0912 U PIS DIP INF
   [Anonymous], 2001, OPTIMIZING COMPILERS
   [Anonymous], 2008, SPECjvm2008
   Ciechanowicz P., 2010, Proceedings of the 2010 IEEE 12th International Conference on High Performance Computing and Communications (HPCC 2010), P108, DOI 10.1109/HPCC.2010.23
   Dagum L, 1998, IEEE COMPUT SCI ENG, V5, P46, DOI 10.1109/99.660313
   Danelutto M, 2002, LECT NOTES COMPUT SC, V2330, P844
   Gosling J., 2005, JAVA TM LANGUAGE SPE, V3rd
   Lindholm T., 1999, JAVA TM VIRTUAL MACH, V2nd
   Lucia B, 2010, CONF PROC INT SYMP C, P222, DOI 10.1145/1816038.1815988
   Lundstrom S. F., 1980, Proceedings of the 1980 International Conference on Parallel Processing, P19
   Ottoni G, 2005, INT SYMP MICROARCH, P105
   Rangan R, 2004, 13TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURE AND COMPILATION TECHNIQUES, PROCEEDINGS, P177, DOI 10.1109/PACT.2004.1342552
   Reinders James, 2007, Intel threading building blocks-outfitting C++ for multi-core processor parallelism
   Terracotta Inc, 2008, DEF GUID TERR
   Zhang XY, 2009, INT SYM CODE GENER, P47, DOI 10.1109/CGO.2009.15
NR 15
TC 0
Z9 0
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2013
VL 43
IS 5
BP 525
EP 541
DI 10.1002/spe.2120
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 127HW
UT WOS:000317690100003
DA 2024-07-18
ER

PT J
AU Kumar, V
   Sharma, A
   Kumar, R
   Grover, PS
AF Kumar, Vijai
   Sharma, Arun
   Kumar, Rajesh
   Grover, P. S.
TI Quality aspects for component-based systems: A metrics based approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE components; metrics; quality; complexity; dependency; reusability;
   maintainability
ID SOFTWARE
AB In component-based development, software systems are built by assembling components already developed and prepared for integration. To estimate the quality of components, complexity, reusability, dependability, and maintainability are the key aspects. The quality of an individual component influences the quality of the overall system. Therefore, there is a strong need to select the best quality component, both from functional and nonfunctional aspects. The present paper produces a critical analysis of metrics for various quality aspects for components and component-based systems. These aspects include four main quality factors: complexity, dependency, reusability, and maintainability. A systematic study is applied to find as much literature as possible. A total of 49 papers were found suitable after a defined search criteria. The analysis provided in this paper has a different objective as we focused on efficiency and practical ability of the proposed approach in the selected papers. The various key attributes from these two are defined. Each paper is evaluated based on the various key parameters viz. metrics definition, implementation technique, validation, usability, data source, comparative analysis, practicability, and extendibility. The paper critically examines various quality aspects and their metrics for component-based systems. In some papers, authors have also compared the results with other techniques. For characteristics like complexity and dependency, most of the proposed metrics are analytical. Soft computing and evolutionary approaches are either not being used or much less explored so far for these aspects, which may be the future concern for the researchers. In addition, hybrid approaches like neuro-fuzzy, neuro-genetic, etc., may also be examined for evaluation of these aspects. However, to conclude that one particular technique is better than others may not be appropriate. It may be true for one characteristic by considering different set of inputs and dataset but may not be true for the same with different inputs. The intension in the proposed work is to give a score for each metric proposed by the researchers based on the selected parameters, but certainly not to criticize any research contribution by authors. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Kumar, Vijai] Aricent Technol, Telecom & Data Commun Business Unit, Gurgaon, India.
   [Sharma, Arun] Krishna Inst Engn & Technol, Dept Comp Sci & Engn, Ghaziabad, India.
   [Kumar, Rajesh] Thapar Univ, Sch Math & Comp Applicat, Patiala, Punjab, India.
   [Grover, P. S.] GGSIP Univ, Guru Tegh Bahadur Inst Technol, Delhi, India.
C3 KIET Group of Institutions; KIET School of Engineering & Technology;
   Thapar Institute of Engineering & Technology; GGS Indraprastha
   University
RP Kumar, V (corresponding author), Aricent Technol, Telecom & Data Commun Business Unit, Gurgaon, India.
EM vkumar.phd@gmail.com
RI Sharma, Arun/ABC-7356-2020; Sharma, Arun/IXN-0008-2023; Grover,
   PS/ABC-5776-2021; Grover, Pritam/Q-3757-2017
OI Sharma, Arun/0000-0002-9404-4519; Grover, Pritam/0000-0002-1882-4628
CR Aggarwal KK, 2006, PROC WRLD ACAD SCI E, V15, P285
   Aggarwal K. K., 2005, Journal of Computer Sciences, V1, P538, DOI 10.3844/jcssp.2005.538.542
   Ahn Y, 2003, J SOFTW MAINT EVOL-R, V15, P71, DOI 10.1002/smr.269
   [Anonymous], 1990, 610121990 IEEE INC
   Ardil E, 2010, INT J PHYS SCI, V5, P74
   Ardimento P, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P115, DOI 10.1109/CSMR.2004.1281412
   Bandini S, 2001, P 14 INT C SOFTW ENG, V27, P307
   Basili VR, 1988, CSTR2158 U MAR DEP C
   Bertoa MF, 2006, J SYST SOFTWARE, V79, P427, DOI 10.1016/j.jss.2005.06.026
   Boxall MAS, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P40, DOI 10.1109/ASWEC.2004.1290456
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cho ES, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P419
   Cox Lisa., 2001, Proceedingsofthe9thinternationalconferenceonconceptualstructures,ICCS, P117
   Cui Y, 2001, 10TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P127, DOI 10.1109/HPDC.2001.945183
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   Dumke R., 2000, METRICS NEWS, V5, P13
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   Gill N S, 2004, ACM SIGSOFT SOFTWARE, V29, P1
   Gill NasibS., 2008, SIGSOFT Softw. Eng. Notes, V33, P1, DOI DOI 10.1145/1350802.1350810
   GILL NS, 2003, ACM SIGSOFT SOFTWARE, V28, P1
   Goulao M, 2004, 8 ECOOP WORKSH QUANT
   GROVER P. S., 2007, ACM SIGSOFT SOFTWARE, V32, P1
   Gui G, 2000, J SYST SOFTWARE, V80, P1450
   Guo J, 2002, NINTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P185, DOI 10.1109/ECBS.2002.999837
   Hashim K., 1996, Malaysian Journal of Computer Science, V9, P92
   Kajko-Mattsson M., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P436
   Kaur A., 2010, INT J COMPUTER APPL, V1, P69, DOI DOI 10.5120/339-515
   Kharb L., 2008, ACM SIGSOFT Software Engineering Notes, ACM, V33, P1, DOI DOI 10.1145/1350802.1350811
   Khatatneh K., 2009, EUR J SCI RES, V26, P154
   Li Bixin., 2003, Net. ObjectDays Conf, P22
   Mahmood S, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P150
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Narasimhan VL, 2005, PROC WRLD ACAD SCI E, V10, P169
   Pernilla E, 2002, BUILDING RELIABLE CO, P86
   Pizzi NJ, 2006, NAFIPS 2006 - 2006 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, VOLS 1 AND 2, P267, DOI 10.1109/NAFIPS.2006.365420
   Rotaru OctavianPaul., 2005, 3 ACSIEEE INT C COMP, P24
   Sagar S., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI DOI 10.1145/1811226.1811235
   Salman N., 2006, J ARTS SCI, V1, P39
   Sedigh-Ali S, 2001, P INT COMP SOFTW APP, P303, DOI 10.1109/CMPSAC.2001.960631
   Sharma A., 2009, ACM SIGSOFT Software Engineering Notes, V34, P1, DOI DOI 10.1145/1507195.1507215
   Sharma A, 2008, INT J SOFTW ENG KNOW, V18, P519
   Shukla Ruchi, 2008, 1st India Software Engineering Conference. ISEC 2008, P107
   Sparling M, 2000, COMMUN ACM, V43, P47, DOI 10.1145/352183.352202
   Stafford JA, 2003, LECT NOTES COMPUT SC, V2804, P52
   Szyperski C., 1999, COMPONENT SOFTWARE O, V2nd
   Vernazza T., 2000, P WORLD MULT SYST CY, V1, P16
   Vieira M, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P241, DOI 10.1109/ASE.2002.1115020
   Wand A., 2002, P 6 IASTED INT C SOF, P583
   Washizaki H, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P211, DOI 10.1109/METRIC.2003.1232469
   Ye W, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P133, DOI 10.1109/CSMR.2003.1192420
   Yu B, 2004, 2004 IEEE 1ST SYMPOSIUM ON MULTI-AGENT SECURITY & SURVIVABILITY, P1
NR 52
TC 7
Z9 7
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2012
VL 42
IS 12
BP 1531
EP 1548
DI 10.1002/spe.1153
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 040FM
UT WOS:000311307500004
DA 2024-07-18
ER

PT J
AU Welponer, M
   Abeni, L
   Marchetto, G
   Lo Cigno, R
AF Welponer, Michele
   Abeni, Luca
   Marchetto, Guido
   Lo Cigno, Renato
TI Measuring and reducing the impact of the operating system kernel on
   end-to-end latencies in synchronous packet switched networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE kernel latency; end-to-end delay; pipeline forwarding; real-time Linux
AB This paper presents an evaluation of the impact of the so-called operating system (OS) latencies on the performance of a synchronous network based on global time coordination. The concept of end-to-end latency was first defined by extending the concept of latency used to evaluate the performance of real-time systems and the end-to-end latency provided by a general-purpose OS was measured as a benchmark. Finally, real-time techniques were used to reduce the worst-case values of such a latency, showing how a gateway between synchronous and asynchronous networks can be implemented by using commercial-off-the-shelf hardware and a proper software stack (based on a real-time version of Linux). The use of a real-time OS is still a nontrivial task, which requires experience and the analysis of the specific application to devise the proper techniques to be applied. This work dissects the problem of OS-to-network data transfer (and vice versa) identifying the key sources of latencies and delay jitter, and solving each problem with the application of a proper technique. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Welponer, Michele; Abeni, Luca; Lo Cigno, Renato] Univ Trent, DISI, I-38123 Trento, Italy.
   [Marchetto, Guido] Politecn Torino, DAUIN, I-10129 Turin, Italy.
C3 University of Trento; Polytechnic University of Turin
RP Abeni, L (corresponding author), Univ Trent, DISI, Via Sommarive 14, I-38123 Trento, Italy.
EM luca.abeni@unitn.it
RI Lo Cigno, Renato/E-9777-2011; Abeni, Luca/AAF-8220-2020; Abeni,
   Luca/H-1561-2016
OI Lo Cigno, Renato/0000-0002-4755-2844; Abeni, Luca/0000-0002-7080-9601;
   Abeni, Luca/0000-0002-7080-9601
FU Italian MIUR [prot. 2008P2HWBK_003]
FX project has been partially funded by the Italian MIUR PRIN Project
   Bandwidth Efficiency and Energy Saving by Sub-Lambda Optical Switching
   (BESOS) with grant number prot. 2008P2HWBK_003.
CR Abeni L, 2002, P IEEE REAL TIM EMB
   Agrawal D., 2007, 2007 IEEE Symposium on Computers and Communications, P211, DOI 10.1109/ISCC.2007.4381589
   Awerbuch B, 2007, IEEE T DEPEND SECURE, V4, P180, DOI 10.1109/TDSC.2007.1007
   Baldi M, 2009, IEEE INT WORKSH GREE
   Baldi M, 2006, P IEEE INT C COMM IC
   Baldi M, 2009, MESH: 2009 SECOND INTERNATIONAL CONFERENCE ON ADVANCES IN MESH NETWORKS, P12, DOI 10.1109/MESH.2009.10
   Baldi M, 2009, IEEE ACM T NETWORK, V17, P1936, DOI 10.1109/TNET.2009.2015759
   Braun Lothar., 2010, Proceedings of the 10th ACMSIGCOMMConference on InternetMeasurement, IMC '10, P206, DOI DOI 10.1145/1879141.1879168
   Brosky S, 2002, P 4 REAL TIM LIN WOR
   Carlson E, 2006, IEEE J SEL AREA COMM, V24, P2018, DOI 10.1109/JSAC.2006.881633
   Cereia M, 2010, PROC IEEE INT SYMP, P1748, DOI 10.1109/ISIE.2010.5637989
   Chang XL, 2008, IEEE ICC, P1835, DOI 10.1109/ICC.2008.352
   Chiaraviglio L, 2009, IEEE ICC, P2298
   Christensen K, 2004, COMPUTER, V37, P91, DOI 10.1109/MC.2004.100
   Fusco F, 2010, P IMC 2010 MELB AUST
   Gerum P., 2004, Xenomai - Implementing a RTOS emulation framework on GNU/Linux
   GUENACH M, 2009, IEEE INT WORKSH GREE
   Gupta M, 2003, ACM SIGCOMM COMP COM, V33, P19
   KIM I, 2001, P 5 INT C HIGH PERF
   Li CS, 1996, IEEE INFOCOM SER, P189, DOI 10.1109/INFCOM.1996.497893
   Mannie E., 2004, GEN MULTIPROTOCOL LA
   Mantegazza P., 2000, LINUX J, V2000, P10
   Nguyen VT, 2008, IEEE T COMMUN, V56, P957, DOI 10.1109/TCOMM.2008.060707
   RAMAMIRTHAM J, 2003, 22 ANN JOINT C IEEE, P2030
   Regnier Paul, 2008, Operating Systems Review, V42, P52, DOI 10.1145/1453775.1453787
   Ross K, 2003, IEEE J SEL AREA COMM, V21, P1441, DOI 10.1109/JSAC.2003.818230
   Rostedt S, 2007, P LIN S OTT CAN
   Schneider F., 2005, P 2005 ACM C EM NETW, P284
   SHA L, 1990, IEEE T COMPUTERS, V39
   Truong T-H, 2007, GLOB TEL C 2007 GLOB, P2331
   Ueda K, 2004, WFCS 2004: IEEE INTERNATIONAL WORKSHOP ON FACTORY COMMUNICATION SYSTEMS, PROCEEDINGS, P45
   Wei JY, 2000, J LIGHTWAVE TECHNOL, V18, P2019, DOI 10.1109/50.908815
   Yakoh T, 2002, P EUROMICRO INT WORK, P111
   YODAIKEN V, 1997, P USENIX LIN APPL DE
   Yu O., 2005, 2005 2nd International Conference on Broadband Networks (Broadnets) (IEEE Cat. No. 05EX1116), P1447
NR 35
TC 3
Z9 3
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2012
VL 42
IS 11
BP 1315
EP 1330
DI 10.1002/spe.1134
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015OV
UT WOS:000309456700001
DA 2024-07-18
ER

PT J
AU Ducournau, R
AF Ducournau, Roland
TI Coloring, a versatile technique for implementing object-oriented
   languages
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented programming; multiple inheritance; late binding; object
   layout; subtype testing; virtual function tables
ID LAYOUT; TESTS; DISPATCH
AB Late binding and subtyping create run-time overhead for object-oriented languages. Dynamic typing and multiple inheritance create even more overhead. Static typing and single inheritance lead to two major invariants, of reference and position, that make the implementation as efficient as possible. Coloring is a technique that preserves these invariants for dynamic typing or multiple inheritance at minimal spatial cost. Coloring has been independently proposed for method invocation under the name of selector coloring, for subtype tests under the name of pack encoding, and for attribute access and object layout. This paper reviews a number of uses of coloring for optimizing object-oriented programming, generalizes them, and specifies several variations, such as bidirectional and n-directional coloring. Coloring is NP-hard, hence compilers that use it depend on heuristics. The paper describes two families of heuristics and presents some experimental results which indicate that coloring is both efficient and tractable and that bidirectional coloring gives the best results. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Ducournau, Roland] Univ Montpellier 2, LIRMM, F-34000 Montpellier, France.
   [Ducournau, Roland] CNRS, F-34000 Montpellier, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite
   Paul-Valery; Universite Perpignan Via Domitia; Universite de
   Montpellier; Centre National de la Recherche Scientifique (CNRS)
RP Ducournau, R (corresponding author), Univ Montpellier 2, LIRMM, 161 Rue Ada, F-34000 Montpellier, France.
EM Roland.Ducournau@lirmm.fr
CR Alpern B, 2001, ACM SIGPLAN NOTICES, V36, P108, DOI 10.1145/504311.504291
   Ananian CS, 2003, ACM SIGPLAN NOTICES, V38, P59, DOI 10.1145/780731.780741
   ANDRE P, 1992, SIGPLAN NOTICES, V27, P110, DOI 10.1145/141937.141947
   [Anonymous], 1997, Object-oriented software construction
   CHEUNG B, 1992, OOP9201 CONC U DEP C
   Click Cliff, 2002, P 2002 JOINT ACMISCO, P96, DOI DOI 10.1145/583810.583821
   COHEN NH, 1991, ACM T PROGR LANG SYS, V13, P626, DOI 10.1145/115372.115297
   Collin S, 1997, LECT NOTES COMPUT SC, V1204, P67
   CONROY TJ, 1983, SMALLTALK 80 BITS HI, P238
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Czech ZJ, 1997, THEOR COMPUT SCI, V182, P1, DOI 10.1016/S0304-3975(96)00146-6
   DESNOS N, 2004, THESIS U MONTPELLIER
   Deutsch PeterL., 1984, Proceedings of the 11th ACM SIGACT-SIGPLAN symposium on Principles of Programming Languages, POPL '84, P297, DOI [10.1145/800017.800542, DOI 10.1145/800017.800542]
   Dijkstra E.W., 1960, NUMER MATH, V2, P312, DOI DOI 10.1007/BF01386232
   DIXON R, 1989, SIGPLAN NOTICES, V24, P211, DOI 10.1145/74878.74900
   DRIESEN K, 1993, SIGPLAN NOTICES, V28, P259, DOI 10.1145/167962.165902
   DRIESEN K, 1995, SIGPLAN NOTICES, V30, P141, DOI 10.1145/217839.217851
   Driesen Karel., 2001, EFFICIENT POLYMORPHI
   DUCOURNAU R, 2011, SCI COMPUTE IN PRESS
   DUCOURNAU R, 1991, YET ANOTHER FRAME BA
   DUCOURNAU R, 1997, OBJET, V3, P241
   DUCOURNAU R, 2003, LIRMM03036 U MONTP
   DUCOURNAU R, 2002, ACT LMO 2002 OBJ, V8, P79
   DUCOURNAU R, 2001, LIRMM01225 U MONTP
   Ducournau R, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922655
   Ducournau R, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1391956.1391960
   Ducournau R, 2009, ACM SIGPLAN NOTICES, V44, P41, DOI 10.1145/1639949.1640093
   FALL A, 1995, P INT KRUSE 95 C KNO, P162
   FESTA P, 2002, OPTIMIZATION METHODS, V7, P1033
   Gagnon EM, 2001, USENIX ASSOCIATION PROCEEDINGS JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P27
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Gil J, 2005, ACM T PROGR LANG SYS, V27, P819, DOI 10.1145/1086642.1086643
   Gil J, 1999, ACM SIGPLAN NOTICES, V34, P256, DOI 10.1145/320385.320408
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   HARBINSON SP, 1992, MODULA 3
   Holst W, 1997, LECT NOTES COMPUT SC, V1241, P276, DOI 10.1007/BFb0053383
   HOLZLE U, 1991, LECT NOTES COMPUT SC, V512, P21, DOI 10.1007/BFb0057013
   Huang S.-K., 1992, Proceedings. The Sixteenth Annual International Computer Software and Applications Conference, P39, DOI 10.1109/CMPSAC.1992.217606
   Jensen T. R, 1995, GRAPH COLORING PROBL
   Krall A, 1997, CONCURRENCY-PRACT EX, V9, P1017, DOI 10.1002/(SICI)1096-9128(199711)9:11<1017::AID-CPE347>3.0.CO;2-0
   Lippman StanleyB., 1996, INSIDE C OBJECT MODE
   Meyer B., 1992, Eiffel: The Language
   Mossenbock H., 1993, OBJECT ORIENTED PROG
   MYERS AC, 1995, SIGPLAN NOTICES, V30, P124, DOI 10.1145/217839.217849
   Palacz K, 2003, LECT NOTES COMPUT SC, V2743, P378
   PFISTER BHC, 1991, 156 EIDG TH DEP INF
   PRIVAT J, 2008, WORKSH ICOOOLPS ECOO
   PRIVAT J, 2005, ACM WORKSH PROG AN S, P20, DOI DOI 10.1145/1108792.1108799
   PRIVAT J, 2006, 06029 LIRMM U MONTP
   PUGH W, 1990, SIGPLAN NOTICES, V25, P85, DOI 10.1145/93548.93556
   PUGH W, 1993, CS9322 U WAT
   SPRUGNOLI R, 1977, COMMUN ACM, V20, P841, DOI 10.1145/359863.359887
   Steele Jr Guy L., 1990, COMMON LISP LANGUAGE
   TAKHEDMIT P, 2003, THESIS U MONTPELLIER
   TARJAN RE, 1979, COMMUN ACM, V22, P606, DOI 10.1145/359168.359175
   Tucker Taft S., 2006, LECT NOTES COMPUTER, V4348
   Vitek J., 1994, Object-Oriented Programming. 8th European Conference, ECOOP '94. Proceedings, P432, DOI 10.1007/BFb0052195
   Vitek J, 1997, ACM SIGPLAN NOTICES, V32, P142, DOI 10.1145/263700.263730
   VITEK J, 1996, LECT NOTES COMPUTER, V1060, P309
   Gil J, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1290520.1290525
   Zendra O, 1997, ACM SIGPLAN NOTICES, V32, P125, DOI 10.1145/263700.263728
   Zibin Y, 2003, LECT NOTES COMPUT SC, V2743, P329
NR 62
TC 6
Z9 6
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2011
VL 41
IS 6
BP 627
EP 659
DI 10.1002/spe.1022
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 748GZ
UT WOS:000289379600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Abel, J
AF Abel, Juergen
TI Post BWT stages of the Burrows-Wheeler compression algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE compression; Burrows-Wheeler transformation; block sorting
ID PRINCIPLES
AB The lossless Burrows-Wheeler compression algorithm has received considerable attention over recent years for both its simplicity and effectiveness. It is based on a permutation of the input sequence-the Burrows-Wheeler transformation (BWT)-which groups symbols with a similar context close together. In the original version, this permutation was followed by a Move-To-Front transformation and a final entropy coding stage. Later versions used different algorithms, placed after the BWT, since the following stages have a significant influence on the compression rate. This paper describes different algorithms and improvements for these post BWT stages including a new context-based approach. The results for compression rates are presented together with compression and decompression times on the Calgary corpus; the Canterbury corpus, the large Canterbury corpus and the Lukas 2D 16-bit medical image corpus. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 Ingenieurburo Dr Abel GmbH, D-41469 Neuss, Germany.
RP Abel, J (corresponding author), Ingenieurburo Dr Abel GmbH, Lechstr 1, D-41469 Neuss, Germany.
EM juergen.abel@data-compression.info
CR Abel J, 2005, IEEE DATA COMPR CONF, P449
   Abel J, 2005, IEEE T COMPUT, V54, P497, DOI 10.1109/TC.2005.85
   ABEL J, 2010, LUKAS 2D 16 BIT MED
   ABEL J, 2003, ADV BLOCKSORTING COM
   Abel J, 2007, SOFTWARE PRACT EXPER, V37, P247, DOI 10.1002/spe.763
   Abel Jurgen., 2003, Improvements to the Burrows-Wheeler compression algorithm: After BWT stages
   Abel R, 2004, IEEE DATA COMPR CONF, P521
   ADJEROH D, 2008, BURROWS WHEELER TRAN, P153
   Andersson A., 1994, Proceedings. 35th Annual Symposium on Foundations of Computer Science (Cat. No.94CH35717), P714, DOI 10.1109/SFCS.1994.365721
   Andersson B., 1987, Nuclear Physics A, VA461, p513c, DOI 10.1016/0375-9474(87)90510-0
   Arnavut Z, 2004, COMPUT J, V47, P46, DOI 10.1093/comjnl/47.1.46
   Arnavut Z., 2000, Proceedings DCC 2000. Data Compression Conference, P193, DOI 10.1109/DCC.2000.838159
   Arnavut Z, 1997, IEEE DATA COMPR CONF, P181, DOI 10.1109/DCC.1997.582009
   Arnold R, 1997, IEEE DATA COMPR CONF, P201, DOI 10.1109/DCC.1997.582019
   Awan FS, 2001, IEEE DATA COMPR CONF, P481
   Balkenhol B, 1999, IEEE DATA COMPR CONF, P188, DOI 10.1109/DCC.1999.755668
   BALKENHOL B, 1998, IEEE T COMPUT, V49, P1043
   BALKENHOL B, 1999, SFB343 U BIEL FAC MA, P99
   BELL T, 1989, COMPUT SURV, V21, P557, DOI 10.1145/76894.76896
   BENTLEY JL, 1986, COMMUN ACM, V29, P320, DOI 10.1145/5684.5688
   BINDER E, 2000, DISTANCE CODER USENE
   Burrows M., 1994, Algorithm, Data Compression, DOI 10.1.1.37.6774
   Chapin B., 2000, Proceedings DCC 2000. Data Compression Conference, P183, DOI 10.1109/DCC.2000.838158
   CHAPIN B, 2001, THESIS U N TEXAS, P42
   CLEARY JG, 1984, IEEE T COMMUN, V32, P396, DOI 10.1109/TCOM.1984.1096090
   Deorowicz S, 2000, SOFTWARE PRACT EXPER, V30, P1465, DOI 10.1002/1097-024X(20001110)30:13<1465::AID-SPE345>3.0.CO;2-D
   Deorowicz S, 2005, INFORM PROCESS LETT, V95, P313, DOI 10.1016/j.ipl.2005.03.008
   Deorowicz S, 2002, SOFTWARE PRACT EXPER, V32, P99, DOI 10.1002/spe.426
   ELIAS P, 1975, IEEE T INFORM THEORY, V21, P194, DOI 10.1109/TIT.1975.1055349
   Fenwick P, 2002, SOFTWARE PRACT EXPER, V32, P1307, DOI 10.1002/spe.484
   FENWICK P, 1996, BLOCK SORTING TEXT C, P130
   FENWICK P, 1996, BLOCK SORTING TEXT C, V21
   Fenwick P, 2007, THEOR COMPUT SCI, V387, P200, DOI 10.1016/j.tcs.2007.07.012
   Fenwick PM, 1996, COMPUT J, V39, P731, DOI 10.1093/comjnl/39.9.731
   FENWICK PM, 1996, ACSC 96 P 19 AUSTR C, P193
   Ferragina P, 2006, LECT NOTES COMPUT SC, V4051, P560, DOI 10.1007/11786986_49
   Ferragina P, 2006, LECT NOTES COMPUT SC, V4168, P756
   Foschini L, 2004, IEEE DATA COMPR CONF, P62
   Franceschini R., 2000, LOSSLESS REVERSIBLE, P1
   Gagie T, 2007, LECT NOTES COMPUT SC, V4580, P71
   GAILLY JL, 1993, GZIP DATA COMPRESSIO
   GRABOWSKI S, 1999, 7 K SIEC SYST INF TE, P229
   GRINGELER Y, 2002, COMMUNICATION
   Isal RYK, 2001, IEEE DATA COMPR CONF, P429, DOI 10.1109/DCC.2001.917174
   ISAL RYK, 2002, P 25 AUSTR C COMP SC, V4, P129
   KAO T, 2001, THESIS GUNMA U KIRYU
   Kärkkäinen J, 2003, LECT NOTES COMPUT SC, V2719, P943
   KOMIYA A, 2009, M03C COMPRESSION PRO
   KOMIYA A, 2009, COMMUNICATION
   Kruse H, 1999, IEEE DATA COMPR CONF, P536, DOI 10.1109/DCC.1999.785693
   Kurtz S, 2000, NUMBERS, INFORMATION AND COMPLEXITY, P375
   Kurtz S, 1999, SOFTWARE PRACT EXPER, V29, P1149, DOI 10.1002/(SICI)1097-024X(199911)29:13<1149::AID-SPE274>3.0.CO;2-O
   Larsson, 1999, THESIS LUND U SWEDEN
   MANISCALCO M, 2009, COMMUNICATION
   MANISCALCO M, 2004, SOLUTION CONTEXT BAS
   MANISCALCO M, 2004, COMP COMPRESSION GRO
   MANISCALO M, 2010, 2 MODIFIED RUN LENGT
   MANISCALO M, 2000, RUN LENGTH ENCODING
   Manzini G, 2002, LECT NOTES COMPUT SC, V2461, P698
   Nelson M., 1996, DATA COMPRESSION BOO, V2nd, P113
   SADAKANE K, 1997, THESIS U TOKYO JAPAN
   SADAKANE K, 2000, THESIS U TOKYO
   Schindler M., 1997, Proceedings DCC '97. Data Compression Conference (Cat. No.97TB100108), DOI 10.1109/DCC.1997.582137
   Seward J., 2000, Proceedings DCC 2000. Data Compression Conference, P173, DOI 10.1109/DCC.2000.838157
   Wirth AI, 2001, IEEE DATA COMPR CONF, P419, DOI 10.1109/DCC.2001.917173
   [No title captured]
NR 66
TC 10
Z9 11
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2010
VL 40
IS 9
BP 751
EP 777
DI 10.1002/spe.982
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 635WF
UT WOS:000280687400001
DA 2024-07-18
ER

PT J
AU Paolino, L
   Sebillo, M
   Tortora, G
   Vitiello, G
AF Paolino, Luca
   Sebillo, Monica
   Tortora, Genoveffa
   Vitiello, Giuliana
TI Towards a new approach to query search engines: the <i>Search Tree</i>
   visual language
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE search engine; web retrieval; usability; efficiency; effectiveness
AB In this paper, we describe the Search Tree visual language. It is a novel methodology able to support users to build up complex queries to be run on given search engines. For using this visual language, neither parentheses nor precedence rules are needed, nor the specific ability to perform advanced search tasks. The language is proven to have the same expressive power as the expressions in Sum Of Product form. In order to prove the appropriateness of our proposal, we measured the usability of the proposed querying approach against the traditional Yahoo (TM) web search query language. Results show that, even if both the approaches fully support users in terms of efficacy, the Search Tree visual language significantly improves task efficiency, both in terms of the number of actions performed and the time requested with respect to the advanced search interface. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Paolino, Luca; Sebillo, Monica; Tortora, Genoveffa; Vitiello, Giuliana] Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, SA, Italy.
C3 University of Salerno
RP Paolino, L (corresponding author), Univ Salerno, Dipartimento Matemat & Informat, Via Ponte don Melillo, I-84084 Fisciano, SA, Italy.
EM lpaolino@unisa.it
RI Vitiello, Giuliana/AAU-9132-2020
OI Vitiello, Giuliana/0000-0001-7130-996X
CR Dix A., 2004, Human-computer interaction
   GUO D, 2003, NATL C DIG GOVT RES, P1
   Hansaki T., 2006, AS PAC S INF VIS TOK, V60
   MURRAY N, 1998, ACM WORK C ADV VIS I, P247
   REISNER P, 1975, AFIPS P, P447
   ROSS MS, 2000, INTRO PROBABILITY ST
   Seffah A, 2006, SOFTWARE QUAL J, V14, P159, DOI 10.1007/s11219-006-7600-8
   YOUNG D, 1993, J AM SOC INFORM SCI, V44, P327, DOI 10.1002/(SICI)1097-4571(199307)44:6<327::AID-ASI3>3.0.CO;2-J
NR 8
TC 2
Z9 2
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2010
VL 40
IS 8
BP 735
EP 750
DI 10.1002/spe.978
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 627MS
UT WOS:000280044400007
DA 2024-07-18
ER

PT J
AU Amato, G
   Chessa, S
   Vairo, C
AF Amato, Giuseppe
   Chessa, Stefano
   Vairo, Claudio
TI MaD-WiSe: a distributed stream management system for wireless sensor
   networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE sensor networks databases; distributed query processing; sensor data
   modelling; wireless sensor networks
AB Wireless sensor networks (WSN) are composed of several sensors having limited memory, processing power, communication bandwidth, and energy, which cooperate in performing a given task. The use of the database paradigm has emerged in the last few years as a viable solution to manage data in such a context. In this paper we present the MaD-WiSe system, a distributed query processing framework that moves the processing of the query into the network. MaD-WiSe reconsiders various aspects related to database system design and it reinterprets them according to the WSN constraints and requirements. In particular it considers the aspects related to the definition of a query language to formalize the queries, a stream model to manage data acquired by the sensors, a query algebra to define the operators that actually perform the query, and energy efficiency and query optimization strategies for saving energy. Copyright (c) 2010 John Wiley & Sons, Ltd.
C1 [Amato, Giuseppe; Chessa, Stefano; Vairo, Claudio] ISTI CNR, I-56124 Pisa, Italy.
   [Chessa, Stefano; Vairo, Claudio] Univ Pisa, Dept Comp Sci, I-56127 Pisa, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); University
   of Pisa
RP Amato, G (corresponding author), ISTI CNR, Via Moruzzi 1, I-56124 Pisa, Italy.
EM giuseppe.amato@isti.cnr.it
RI Amato, Giuseppe/F-2227-2013; Chessa, Stefano/A-6837-2012
OI Amato, Giuseppe/0000-0003-0171-4315; Chessa,
   Stefano/0000-0002-1248-9478; Vairo, Claudio/0000-0003-2740-4331
CR Abadi DJ, 2003, VLDB J, V12, P120, DOI 10.1007/s00778-003-0095-z
   ABADI DJ, 2005, DESIGN BOREALIS STRE, P277
   AMATO G, 2006, ISTI2006TR39 CNR, P39
   AMATO G, 2007, QUER OPT WIR SENS NE, P242
   Amato G, 2009, COMPUT COMMUN, V32, P896, DOI 10.1016/j.comcom.2008.12.022
   [Anonymous], QUERY PROCESSING SEN
   Babcock B., 2002, P 21 ACM SIGMOD SIGA, P1, DOI [DOI 10.1145/543613.543615, 10.1145/543613]
   Balazinska M, 2005, P 2005 ACM SIGMOD IN, P13
   BANCHILHON F, 1987, 13TH P INT C VER LAR, P97
   Caruso A, 2005, IEEE INFOCOM SER, P150
   Deligiannakis A, 2009, PROC INT CONF DATA, P988, DOI 10.1109/ICDE.2009.100
   FELICE PD, 2008, IEEE S COMP COMM ISC, P1076
   Gay D., 2003, NESC 1 1 LANGUAGE RE
   Golab L, 2003, SIGMOD REC, V32, P5, DOI 10.1145/776985.776986
   Gomez C, 2006, INT S WORLD WIR MOB, P159
   Intanagonwiwat C., 2000, P ACM MOBICOM, P56, DOI DOI 10.1145/345910.345920
   Kossmann D, 2000, ACM COMPUT SURV, V32, P422, DOI 10.1145/371578.371598
   LAW YN, 2004, QUERY LANGUAGES DATA, P492
   Liu KB, 2008, MOBILE NETW APPL, V13, P212, DOI 10.1007/s11036-008-0052-6
   Madden SR, 2005, ACM T DATABASE SYST, V30, P122, DOI 10.1145/1061318.1061322
   McCann D, 2009, LECT NOTES COMPUT SC, V5741, P38, DOI 10.1007/978-3-642-04471-7_4
   Meliou A, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS (IPSN 2009), P229
   *MICR S JDBE, 2010, JAV DAT CONN
   O'Connor MF, 2009, INT CONF RES CHAL, P23, DOI 10.1109/RCIS.2009.5089264
   Olston C., 2003, P ACM SIGMOD INT C M, P563
   Perkins CE, 1999, WMCSA '99, SECOND IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P90, DOI 10.1109/MCSA.1999.749281
   Rahman MA, 2007, 21ST INTERNATIONAL CONFERENCE ON ADVANCED NETWORKING AND APPLICATIONS WORKSHOPS/SYMPOSIA, VOL 2, PROCEEDINGS, P696
   ROSEMARK R, 2007, 8 INT C MOB DAT MAN, P24
   SESHADRI P, 1995, MODEL SEQUENCE DATAB, P232
   STERN M, 2007, 8 INT C MOB DAT MAN, P336
   *TINYAODV IMPL, 2010, TINYOS SOURC COD RES
   Trigoni N, 2005, LECT NOTES COMPUT SC, V3560, P307
   TRIGONI N, 2004, P GI C INF WORKSH SE, P370
   VIA G, 2006, SENSORVIZ MADWISE VE
   WU H, 2009, 6 INT WORKSH DAT MAN, P1
   Yao Y, 2002, SIGMOD REC, V31, P9, DOI 10.1145/601858.601861
   Zhu XJ, 2009, IEEE T KNOWL DATA EN, V21, P1722, DOI 10.1109/TKDE.2009.38
   *ZIGBEE, 2006, ALL SPEC
   2010, MAD WISE MANAGEMENT
NR 39
TC 19
Z9 19
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2010
VL 40
IS 5
BP 431
EP 451
DI 10.1002/spe.965
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 583DB
UT WOS:000276652000003
DA 2024-07-18
ER

PT J
AU Cucurull, J
   Navarro-Arribas, G
   Martí, R
   Robles, S
   Borrell, J
AF Cucurull, J.
   Navarro-Arribas, G.
   Marti, R.
   Robles, S.
   Borrell, J.
TI An efficient and secure agent code distribution service
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile agents; code distribution; XACML contract; REST; performance
ID NETWORK; MANAGEMENT; FRAMEWORK; PLATFORM
AB Mobile agents (MAs) are autonomous computing entities that dwell in agent platforms and have the ability to move to different locations as needed They are typically composed of code, data, and a state The performance of MA migrations is always penalized by the need of carrying these components to each visited location In contrast to the agent data and state, the agent code is static during the whole agent life Therefore, optimizing the agent code management, the agent migration performance can be improved The main contribution of this article is the definition of a global cache service has been developed, and its benefits have been extensively demonstrated by a set of performance tests carried out in different scenarios Copyright (C) 2010 John Wiley & Sons, Ltd
C1 [Cucurull, J.; Marti, R.; Robles, S.; Borrell, J.] Univ Autonoma Barcelona, Dept Informat & Commun Engn, Cerdanyola Del Valles 08193, Spain.
   [Navarro-Arribas, G.] CSIC, Spanish Natl Res Council, IIIA, Artificial Intelligence Res Ctr, Cerdanyola Del Valles 08193, Spain.
C3 Autonomous University of Barcelona; Consejo Superior de Investigaciones
   Cientificas (CSIC); CSIC - Instituto de Investigacion en Inteligencia
   Artificial (IIIA)
RP Cucurull, J (corresponding author), Univ Autonoma Barcelona, Dept Informat & Commun Engn, Cerdanyola Del Valles 08193, Spain.
RI Navarro-Arribas, Guillermo/AFP-6074-2022; Robles, Sergi/Y-3052-2019;
   Marti, Ramon/K-1166-2014; Borrell, Joan/A-5352-2009; Robles,
   Sergi/L-7616-2014
OI Navarro-Arribas, Guillermo/0000-0003-3535-942X; Marti,
   Ramon/0000-0001-8203-5642; Borrell, Joan/0000-0001-6649-0450; Robles,
   Sergi/0000-0002-9924-2477
FU MEC Spanish Ministry [TSI2006-03481, TSI2007-65406-C03-02, 2010
   CSD2007-00004]; AGAUR Catalan Agency [2005-FI-00752]; European Social
   Fund (ESF)
FX Contract/grant sponsor MEC Spanish Ministry, contract/grant numbers
   TSI2006-03481, eAEGIS TSI2007-65406-C03-02, ARES-CONSOLIDER INGENIO 2010
   CSD2007-00004; Contract/grant sponsor AGAUR Catalan Agency,
   contract/grant number 2005-FI-00752; Contract/grant sponsor European
   Social Fund (ESF)
CR AMETLLER J, 2004, AAMAS 04, P362
   Artail H, 2006, J PARALLEL DISTR COM, V66, P428, DOI 10.1016/j.jpdc.2005.07.007
   Barabasi A.L., 2002, The Formula: The Universal Laws Of Success
   Bellifemine F, 2008, INFORM SOFTWARE TECH, V50, P10, DOI 10.1016/j.infsof.2007.10.008
   Bouras C, 2005, J NETW COMPUT APPL, V28, P209, DOI [10.1016/j.jnca.2004.06-003, 10.1016/j.jnca.2004.06.003]
   Braun P., 2005, MOBILE AGENTS BASIC
   CABRI G, 2000, P 2 INT C EXH PRACT
   Cucurull J, 2009, J SYST SOFTWARE, V82, P1927, DOI 10.1016/j.jss.2009.06.038
   Cucurull J, 2009, COMPUT COMMUN, V32, P712, DOI 10.1016/j.comcom.2008.11.038
   CUCURULL J, 2004, JADE MTP TFTP TECHNI
   CUCURULL J, 2008, THESIS U AUTONOMA BA
   Dilley J, 2002, IEEE INTERNET COMPUT, V6, P50, DOI 10.1109/MIC.2002.1036038
   Fielding R. T, 2002, ACM Transactions on Internet Technology (TOIT), V2, P115, DOI [DOI 10.1145/514183.514185, 10.1145/514183.514185]
   FRANKS J, 1999, 2617 RFC
   Gavalas D, 2002, COMPUT NETW, V38, P693, DOI 10.1016/S1389-1286(01)00277-8
   GAVALAS D, 2004, GLOB TEL C 2004 GLOB, V2, P605
   Gavalas D, 2009, J SYST SOFTWARE, V82, P355, DOI 10.1016/j.jss.2008.06.034
   Gong L, 2001, IEEE INTERNET COMPUT, V5, P88, DOI 10.1109/4236.935182
   Gotthelf P, 2008, J PARALLEL DISTR COM, V68, P1081, DOI 10.1016/j.jpdc.2008.04.002
   HADLEY M, 2007, JAX IS 1 0 EARLY DRA
   Hawick KA, 1999, FUTURE GENER COMP SY, V15, P623, DOI 10.1016/S0167-739X(99)00014-X
   Jurasovic K, 2006, INT T SYSTEMS SCI AP, V1, P335
   Lange D. B., 1998, PROGRAMMING DEPLOYIN
   Leibowitz N, 2003, WIAPP 2003: THIRD IEEE WORKSHOP ON INTERNET APPLICATIONS, PROCEEDINGS, P112, DOI 10.1109/WIAPP.2003.1210295
   Mathew JA, 1998, TOOLS, V28, P264, DOI 10.1109/TOOLS.1998.750041
   Navarro-Arribas G, 2009, INT FED INFO PROC, V297, P164
   Nicklisch J., 1998, Intelligent Agents for Telecommunication Applications. Second International Workshop, IATA'98. Proceedings, P142, DOI 10.1007/BFb0053950
   OSULLIVAN B, 2008, DISTRIBUTED REVISION
   Pathan M, 2008, LECT NOTES ELECTR EN, V9, P33
   Puliafito A, 2000, J SYST ARCHITECT, V46, P145, DOI 10.1016/S1383-7621(98)00076-9
   RAHUL H, 2005, REALIZING PERFORMANC
   Ripeanu M, 2002, IEEE INTERNET COMPUT, V6, P50, DOI 10.1109/4236.978369
   Rivest R., 1992, MD5 MESSAGE DIGEST A
   Roth V, 2001, 5TH INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P435, DOI 10.1109/ISADS.2001.917449
   ROUNDY D, 2005, HASKELL 05, P1
   SHERMAN A, 2005, NSDI 05 P 2 C S NETW, P245
   SILVA LM, 1999, P IATA 99 STOCKH SWE
   Soares Guilherme, 1999, P 1 WORKSH MOB AG TE, P161
   Stoica I, 2003, IEEE ACM T NETWORK, V11, P17, DOI 10.1109/TNET.2002.808407
   Tutschku K, 2004, LECT NOTES COMPUT SC, V3015, P12
   Watanabe T., 2000, Proceedings 20th IEEE International Conference on Distributed Computing Systems, P420, DOI 10.1109/ICDCS.2000.840954
   White J., 1996, Software Agents
   *XACML, 2005, XACML VERS 2 0
NR 43
TC 1
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2010
VL 40
IS 4
BP 363
EP 386
DI 10.1002/spe.963
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 570PQ
UT WOS:000275690600004
OA Bronze
DA 2024-07-18
ER

PT J
AU Philippe, J
   De Palma, N
   Boyer, F
   Gruber, O
AF Philippe, Jeremy
   De Palma, Noel
   Boyer, Fabienne
   Gruber, Olivier
TI Self-adaptation of service level in distributed systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance management, component model, quality of service; autonomous
   systems
AB Modern distributed systems are diverse and dynamic, and consequently difficult to manage using traditional approaches, which rely on an extensive initial knowledge of the system On the performance front, these systems often offer multiple opportunities for dynamically degrading or improving service level based on workload intensity, to avoid overload and underload In this context, we propose a novel approach for building distributed systems capable of autonomously deciding when and how to adapt service level Our approach limits the knowledge that must be provided manually to a component-based representation of the system From this presentation, we build and maintain a performance profile, which allows us to (1) identify the most promising adaptations based on workload type and (2) dynamically characterize the intrinsic efficiency of each adaptation based on past attempts We have successfully implemented and evaluated a prototype of our approach in the context of multi-tiered application servers Copyright (C) 2010 John Wiley & Sons, Ltd
C1 [Philippe, Jeremy; De Palma, Noel] Grenoble Inst Technol, Grenoble, France.
   [Boyer, Fabienne; Gruber, Olivier] Univ Grenoble 1, F-38041 Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Communaute Universite Grenoble Alpes; Universite Grenoble
   Alpes (UGA)
RP Philippe, J (corresponding author), INRIA Rhone Alpes, SARDES Project, 655 Ave Europe, F-38334 Saint Ismier, France.
CR ABDELZAHER T, 1999, ADAPTATION
   Abdelzaher TF, 2002, IEEE T PARALL DISTR, V13, P80, DOI 10.1109/71.980028
   BANGA P, 1999, P S OP SYST DEZ IMPL, V11
   BLANQUEI JNI, 2005, P S NETW SYST DES IM
   BLANQUER J, 1999, P FREEBSD C BERK CA
   CCCCLICT I, 2002, PERFORMANCE, V5, P7
   CHANDA A, 2005, P ACM IFIP USENIX MI
   CHARICLA A, 2007, P EUROSYS C LISB PRO
   COLIKON G, 1999, JKLAY, V111, P7
   DIAO Y, 2002, CONTROL
   EINOZALIV NI, 2003, MDRCH
   FRANKLIN GI, 2005, CONTROL, P1
   FROVD N, 2005, JULLE, P1111
   KEPHART J, 2003, TRANSACTIONS, V36, P41
   KILIL I, CONTROL, V13, P2008
   LAVAIDA H, 2005, P IFIP INT C DISTR A
   LIANG S, 1999, USELIX C OIL OBJECTO, V111, P7
   MERIA DA, 2004, ILETFORMANCE KV DESI, P1
   SADLER CNI, 2006, OCTOBER
   SICAID S, 2008, ICIPZIG GERMANY IMAY
   STEWART C, 2005, P S NETW SYST DES IM
   STEWART C, 2007, PERFORMANCE, V11, P11
   SZVLCI K, 2008, P S OBJ OR PROGR SYS, V26, P1
   TALON C, 2007, 9 INT S DISTR OBJ MI
   URLMONKAR S, 2005, COMPUTING, V13, P11
   WRIGHT CP, 2003, P USENIX ANN TECHN C, P13
   Yu XH, 2007, ADV INTEL SYS RES, DOI 10.2991/iske.2007.224
   ZHANG Q, 2007, PLANNING, V1, P111
NR 28
TC 6
Z9 6
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2010
VL 40
IS 3
BP 259
EP 283
DI 10.1002/spe.957
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 562ES
UT WOS:000275033100004
DA 2024-07-18
ER

PT J
AU Coenen, F
   Leng, P
   Pagourtzis, A
   Rytter, W
   Souliou, D
AF Coenen, F.
   Leng, P.
   Pagourtzis, A.
   Rytter, W.
   Souliou, D.
TI Improved methods for extracting frequent itemsets from interim-support
   trees
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE association rules; frequent itemsets; data mining; set-enumeration trees
ID PATTERNS
AB Mining association rules in relational databases is a significant computational task with lots of applications. A fundamental ingredient of this task is the discovery of sets of attributes (itemsets) whose frequency in the data exceeds some threshold value. In this paper we describe two algorithms for completing the calculation of frequent sets using a tree structure for storing partial supports, called interim-support (IS) tree. The first of our algorithms (T-Tree-First (TTF)) uses a novel tree pruning technique, based on the notion of (fixed-prefix) potential inclusion, which is specially designed for trees that are implemented using only two pointers per node. This allows to implement the IS tree in a space-efficient manner. The second algorithm (P-Tree-First (PTF)) explores the idea of storing the frequent itemsets in a second tree structure, called the total support tree (T-tree); the main innovation lies in the use of multiple pointers per node, which provides rapid access to the nodes of the T-tree and makes it possible to design a new, usually faster, method for updating them. Experimental comparison shows that these techniques result in considerable speedup for both algorithms compared with earlier approaches that also use IS trees (Principles of Data Mining and Knowledge Discovery, Proceedings of the 5th European Conference, PKDD, 2001, Freiburg, September 2001 (Lecture Notes in Artificial Intelligence, vol. 2168). Springer: Berlin, Heidelberg, 54-66, Journal of Knowledge-Based Syst. 2000, 13:141-149). Further comparison between the two new algorithms, shows that the PTF is generally faster on instances with a large number of frequent itemsets, provided that they are relatively short, whereas TTF is more appropriate whenever there exist few or quite long frequent itemsets, in addition. TTF behaves well on instances in which the densities of the items of file database have a high variance. Copyright (C) 2008 John Wiley & Sons. Ltd.
C1 [Pagourtzis, A.; Souliou, D.] Natl Tech Univ Athens, Sch Elect & Comp Engn, Athens 15780, Greece.
   [Coenen, F.; Leng, P.] Univ Liverpool, Dept Comp Sci, Liverpool L69 3BX, Merseyside, England.
   [Rytter, W.] Univ Warsaw, Inst Informat, PL-00325 Warsaw, Poland.
   [Rytter, W.] Nicholas Copernicus Univ, Dept Math & Informat, Torun, Poland.
C3 National Technical University of Athens; University of Liverpool;
   University of Warsaw; Nicolaus Copernicus University
RP Souliou, D (corresponding author), Natl Tech Univ Athens, Sch Elect & Comp Engn, Athens 15780, Greece.
EM dsouliou@cslab.ece.ntua.gr
OI Coenen, Frans/0000-0003-1026-6649; Pagourtzis, Aris/0000-0002-6220-3722
FU Polish Ministry of Science and Higher Education [N206 004 32/0806];
   Pythagoras grant; European Social Fund; National Resources
FX Wojeiech Rytter was supported for this work by grant N206 004 32/0806 of
   the Polish Ministry of Science and Higher Education. Aris Pagourtzis and
   Dora Souliou were supported for this research by 'Pythagoras' grant,
   co-financed by the European Social Fund (75%) and National Resources
   (25%)-Operational Programme Education and Initial Vocational Trainig'
   (EIIEAEK II).
CR Agarwal R. C., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P108, DOI 10.1145/347090.347114
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Ahmed S, 2006, KNOWL INF SYST, V10, P315, DOI 10.1007/s10115-006-0010-1
   BAYARDO RJ, 1998, SIGMOD 98, P85, DOI DOI 10.1145/276304.276313
   Coenen F, 2004, DATA MIN KNOWL DISC, V8, P25, DOI 10.1023/B:DAMI.0000005257.93780.3b
   Coenen Frans., 2001, PROC 5 EUROPEAN C PR, P54
   Goulbourne G, 2000, KNOWL-BASED SYST, V13, P141, DOI 10.1016/S0950-7051(00)00055-1
   GOULBOURNE G, 1999, P ES99, P132
   Han JW, 2004, DATA MIN KNOWL DISC, V8, P53, DOI 10.1023/B:DAMI.0000005258.31418.83
   Han JW, 2000, SIGMOD RECORD, V29, P1
   Huang H, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P629, DOI 10.1109/ICDM.2002.1184015
   LIU G, 2000, P 9 ACM SIGKDD INT C, P607
   Savasere A., 1995, VLDB '95. Proceedings of the 21st International Conference on Very Large Data Bases, P432
   TOIVONEN H, 1996, VLDB, P1
   Zaki M. J., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P34, DOI 10.1145/347090.347101
NR 16
TC 0
Z9 0
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2009
VL 39
IS 6
BP 551
EP 571
DI 10.1002/spe.902
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 429SR
UT WOS:000264940900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Masmano, M
   Ripoll, I
   Real, J
   Crespo, A
   Wellings, AJ
AF Masmano, M.
   Ripoll, I.
   Real, J.
   Crespo, A.
   Wellings, A. J.
TI Implementation of a constant-time dynamic storage allocator
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic storage management; real-time systems; operating systems
ID FRAGMENTATION; STRATEGIES; SYSTEMS; FIT
AB This paper describes the design criteria and implementation details of a dynamic storage allocator for real-time systems. The main requirements that have to he considered when designing a new allocator are concerned with temporal and spatial constraints. The proposed algorithm, called TLSF (two-level segregated fit, has an asymptotic constant cost, O(1), maintaining a fast response time (less than 200 processor instructions on a x86 processor) and a low level of memory usage (low fragmentation). TLSF uses two levels of segregated lists to arrange free memory blocks and an incomplete search policy. This policy is implemented with word-size bitmaps and logical processor instructions. Therefore, TLSF can be categorized as a good-fit allocator. The incomplete search policy is shown also to be a good policy in terms of fragmentation. The fragmentation caused by TLSF is slightly smaller (better) than that caused by best fit (which is one of the best allocators regarding memory fragmentation). In order to evaluate the proposed allocator, three analyses are presented in this paper. The first one is based on worst-case scenarios. The second one provides a detailed consideration or the execution cost of the internal operations of the allocator and its fragmentation. The third analysis is a comparison with other well-known allocators front the temporal (number of cycles and processor instructions) and spatial (fragmentation) points of view. In order to compare them, a task model has been presented. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Masmano, M.; Ripoll, I.; Real, J.; Crespo, A.] Univ Politecn Valencia, Dept Comp Engn, E-46071 Valencia, Spain.
   [Wellings, A. J.] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 Universitat Politecnica de Valencia; University of York - UK
RP Crespo, A (corresponding author), Univ Politecn Valencia, Dept Comp Engn, Camino Vera 14, E-46071 Valencia, Spain.
EM acrespo@disca.upv.es
RI Real, Jorge/L-8268-2014; Crespo, Alfons/L-6532-2014; Crespo,
   Alfons/AAB-5709-2020; Ripoll-Ripoll, Ismael/I-5546-2015
OI Crespo, Alfons/0000-0002-6606-7406; Crespo, Alfons/0000-0002-6606-7406;
   Ripoll, Jose Ismael/0000-0001-8592-0786; Real, Jorge/0000-0001-7636-6672
FU FRESCOR [IST/5-034026]; ARTIST2 [IST NoE 004527]; Thread [TIC2005-08665]
FX This work has been partially supported by the following projects:
   FRESCOR (IST/5-034026), ARTIST2 (IST NoE 004527) and Thread
   (TIC2005-08665).
CR [Anonymous], 1998, ALGORITHMS C
   ATIENZA D, 2003, WORKSH COMP OP SYST
   BERGER ED, 2002, RECONSIDERING CUSTOM, P1
   BERGER ED, 2001, SIGPLAN C PROGR LANG, P114
   Bollella G, 2000, COMPUTER, V33, P47, DOI 10.1109/2.846318
   BONWICK J, 1994, SLAB ALLOCATOR OBJEC, P87
   BORG A, 2006, REAL TIME MEMORY MAN, P237
   BRENT RP, 1989, ACM T PROGR LANG SYS, V11, P388, DOI 10.1145/65979.65981
   Garey M. R., 1972, P 4 ANN ACM S THEOR
   GRUNWALD D, 1993, SOFTWARE PRACT EXPER, V23, P851, DOI 10.1002/spe.4380230804
   Johnstone M.S., 1998, P INT S MEM MAN ISMM
   Knuth D. E., 2011, The art of computer programming (second ed.) vol. 1 fundamental algorithms, V4A
   LEA D, 1996, UNIX MAIL
   MARCHAND A, 2007, MEMORY RESOURCE MANA, P201
   Masmano M, 2004, EUROMICRO, P79, DOI 10.1109/EMRTS.2004.1311009
   Masmano M., 2006, THESIS U POLITECNICA
   NEELY MS, 1996, THESIS
   NIELSEN NR, 1977, COMMUN ACM, V20, P864, DOI 10.1145/359863.359890
   OGASAWARA T, 1995, 2 INT WORKSH REAL TI, P21
   PETERSON JL, 1977, COMMUN ACM, V20, P421, DOI 10.1145/359605.359626
   REZAEI M, 2000, SEGREGATED BINARY TR
   ROBSON JM, 1974, J ACM, V21, P491, DOI 10.1145/321832.321846
   ROBSON JM, 1971, J ACM, V18, P416, DOI 10.1145/321650.321658
   ROBSON JM, 1977, COMPUT J, V20, P242, DOI 10.1093/comjnl/20.3.242
   SHORE JE, 1975, COMMUN ACM, V18, P433, DOI 10.1145/360933.360949
   STEPHENSON CJ, 1983, OPERATING SYSTEMS RE, V15
   STEPHENSON CJ, 1983, P 9 S OP SYST PRINC
   Tofte M, 1997, INFORM COMPUT, V132, P109, DOI 10.1006/inco.1996.2613
   WEIDERMAN NH, 1992, REAL-TIME SYST, V4, P353, DOI 10.1007/BF00355299
   Wilson PR, 1995, LECT NOTES COMPUT SC, V986, P1
   ZOM B, 1994, ACM T MODEL COMPUT S, P107
NR 31
TC 4
Z9 7
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2008
VL 38
IS 10
BP 995
EP 1026
DI 10.1002/spe.858
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 340DA
UT WOS:000258625100001
DA 2024-07-18
ER

PT J
AU Meling, H
   Montresor, A
   Helvik, BE
   Babaoglu, O
AF Meling, Hein
   Montresor, Alberto
   Helvik, Bjarne E.
   Babaoglu, Ozalp
TI Jgroup/ARM: a distributed object group platform with autonomous
   replication management
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fault tolerance; fault treatment; replication and recovery management;
   measurement-based assessment; middleware; remote method invocation;
   group communication
ID FAULT-TOLERANT CORBA; SYSTEMS; SERVICE
AB This paper presents the design and implementation of Jgroup/ARM, a distributed object group platform with autonomous replication management along with a novel measurement-based assessment technique that is used to validate the fault-handling capability of Jgroup/ARM. Jgroup extends Java RMI through the group communication paradigm and has been designed specifically for application support in partitionable systems. ARM aims at improving the dependability characteristics of systems through a fault-treatment mechanism. Hence, ARM focuses on deployment and operational aspects, where the gain in terms of improved dependability is likely to be the greatest. The main objective of ARM is to localize failures and to reconfigure the system according to application-specific dependability requirements. Combining Jgroup and ARM can significantly reduce the effort necessary for developing, deploying and managing dependable, partition-aware applications. Jgroup/ARM is evaluated experimentally to validate its fault-handling capability; the recovery performance of a system deployed in a wide area network is evaluated. In this experiment multiple nearly coincident reachability changes are injected to emulate network partitions separating the service replicas. The results show that Jgroup/ARM is able to recover applications to their initial state in several realistic failure scenarios, including multiple, concurrent network partitionings. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Meling, Hein] Univ Stavanger, Dept Elect Engn & Comp Sci, N-4036 Stavanger, Norway.
   [Montresor, Alberto] Univ Trento, Dept Informat & Commun Technol, I-38050 Povo, Italy.
   [Helvik, Bjarne E.] Norwegian Univ Sci & Technol, Ctr Quantifiable Qual Serv Commun Syst Q2S, N-7491 Trondheim, Norway.
   Univ Bologna, Dept Comp Sci, I-40127 Bologna, Italy.
C3 Universitetet i Stavanger; University of Trento; Norwegian University of
   Science & Technology (NTNU); University of Bologna
RP Meling, H (corresponding author), Univ Stavanger, Dept Elect Engn & Comp Sci, N-4036 Stavanger, Norway.
EM hein.meling@uis.no
RI Montresor, Alberto/H-1413-2018; Babaoglu, Ozalp/K-7979-2015; Helvik,
   Bjarne E./N-2163-2015; Meling, Hein/AAA-3780-2020
OI Babaoglu, Ozalp/0000-0001-5848-1319; Helvik, Bjarne
   E./0000-0001-6969-4571; Meling, Hein/0000-0002-8564-2218; Montresor,
   Alberto/0000-0001-5820-8216
CR AMIR Y, 2000, P INT C DEP SYST NET
   [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   Babaoglu O, 1998, INT CON DISTR COMP S, P184, DOI [10.1109/ICDCS.1998.679501, 10.1145/280559.280567]
   Babaoglu Ö, 2001, IEEE T SOFTWARE ENG, V27, P308, DOI 10.1109/32.917522
   BABAOGLU O, 1994, P ACM SIGOPS EUR WOR, P612
   BAN B, 1998, JAVAGROUPS GROUP COM
   Birman K., 1987, Proceedings of the eleventh ACM Symposium on Operating systems principles, P123
   BIRMAN KP, 1993, COMMUN ACM, V36, P37, DOI 10.1145/163298.163303
   Chandra R, 2004, IEEE T PARALL DISTR, V15, P593, DOI 10.1109/TPDS.2004.14
   Chandra TD, 1996, J ACM, V43, P225, DOI 10.1145/226643.226647
   Chockler GV, 2001, ACM COMPUT SURV, V33, P427, DOI 10.1145/503112.503113
   COULSON G, 1992, MPG9234 LANC U DEP C
   DAVIDSON SB, 1985, COMPUTING SURVEYS, V17
   DAWSON S, 1996, CSETR31896 U MICH EE
   DOUCEUR JR, 2001, P 9 INT WORKSH MOD A
   Felber P, 2004, IEEE T COMPUT, V53, P497, DOI 10.1109/TC.2004.1275293
   Felber P, 1998, THEOR PRACT OBJ SYST, V4, P93, DOI 10.1002/(SICI)1096-9942(1998)4:2<93::AID-TAPO4>3.0.CO;2-8
   FELBER P, 1999, P 2 INT C DISTR APPL
   FELBER P, 2002, P INT S DISTR OBJ AP, P737
   FISCHER MJ, 1985, J ACM, V32, P374, DOI 10.1145/3149.214121
   GUERRAOUI R, 2000, P 19 ANN ACM S PRINC, P49
   Hayden M., 1998, THESIS CORNELL U
   Helvik BE, 2005, LECT NOTES COMPUT SC, V3463, P179
   Karamanolis CT, 1999, IEEE T SOFTWARE ENG, V25, P3, DOI 10.1109/32.748915
   KOLLTVEIT H, 2005, THESIS NORWEGIAN U S
   KOLLTVEIT H, 2007, 11 E EUR C ADV DAT I
   LABOUREY S, 2004, JBOSS AS CLUSTERING
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Lefever RM, 2003, SYM REL DIST SYST, P273, DOI 10.1109/RELDIS.2003.1238077
   LEWIS PAW, 1989, STAT PROBABILITY SER, V1
   MAFFEIS S, 1995, THESIS U ZURICH
   MELING H, 2006, THESIS NORW U SCI TE
   MELING H, 2004, P 23 INT PERF COMP C
   MELING H, 2001, P 4 EUR RES SEM ADV
   Melliar-Smith PM, 1998, COMPUTER, V31, P62, DOI 10.1109/2.660191
   MOLAND R, 2004, THESIS U STAVANGER
   MONTRESOR A, 2000, THESIS U BOLOGNA D
   MONTRESOR A, 1999, P RES SEM ADV DISTR
   MORGAN G, 1999, P 2 INT C DISTR APPL
   MURCH R, 2004, DEMAND SERIES
   NARASIMHAN N, 2001, THESIS U CALIFORNIA
   Narasimhan P, 2002, SOFTWARE PRACT EXPER, V32, P771, DOI 10.1002/spe.458
   NARASIMHAN P, 2002, COMPUTER SYSTEMS SCI, V17
   Natarajan B, 2000, DOA'00: INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS AND APPL ICATIONS, PROCEEDINGS, P39, DOI 10.1109/DOA.2000.874174
   Object Management Group (OMG), 2002, COMM OBJ REQ BROK AR
   *OMG, 2000, PTC000404 OMG
   POWELL D, 1994, IEEE MICRO, V14, P36, DOI 10.1109/40.259898
   Ren YJ, 2003, IEEE T COMPUT, V52, P31, DOI 10.1109/TC.2003.1159752
   REVERTE CF, 2003, P 9 INT WORKSH OBJ O
   SLOMAN M, 1994, J NETWORK SYSTEMS MA, V2
   SOLARSKI M, 2002, P WORKSH DEP ON LIN
   *SUN MICR, 2003, VERSION NOVEMBER, V2, P1
   *SUN MICR, 2003, JIN ARCH SPEC VERS 2
   SUN MICROSYSTEMS, 2004, JAV REM METH INV SPE
   Terry D.B., 1995, P 15 ACM S OPERATING, P172
   WU H, 2004, COOPIS DOA ODBASE
   YU H, 2000, P 2 INT WORKSH ADV I
NR 57
TC 11
Z9 13
U1 0
U2 3
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2008
VL 38
IS 9
BP 885
EP 923
DI 10.1002/spe.853
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 331KC
UT WOS:000258010100001
DA 2024-07-18
ER

PT J
AU Van Snyder, W
AF Van Snyder, W.
TI The benefits of posing application software as a language interpreter
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mathematical software; Fortran; scientific software; real-time systems;
   operating systems
AB Complicated and comprehensive software that is meant to execute in a non-interactive or semi-interactive mode needs to be configured to carry out the desired tasks, needs to carry out those tasks efficiently, needs to be extensible to take on additional ambitions, and needs to be maintainable. To reduce costs, it is helpful if experts in the discipline to which the program applies can configure and operate the program without needing to become expert software engineers and without needing to become familiar with the internal details of the program, and if software engineers who develop and maintain the program need not become experts in its target discipline. Progress toward these goals can be advanced by posing the software as a language interpreter. We describe the application of this principle to ground-based data analysis software for the Microwave Limb Sounder instrument on the NASA Earth Observing System Aura satellite, but we believe the principle has substantially broader applicability. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 CALTECH, Jet Prop Lab, Pasadena, CA 91109 USA.
C3 National Aeronautics & Space Administration (NASA); NASA Jet Propulsion
   Laboratory (JPL); California Institute of Technology
RP Van Snyder, W (corresponding author), CALTECH, Jet Prop Lab, 4800 Oak Grove Dr,Mail Stop 183-701, Pasadena, CA 91109 USA.
EM van.snyder@jpl.nasa.gov
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Fischer C.N., 1988, CRAFTING COMPILER
   Johnson StephenC., 1975, YACC YET ANOTHER COM, V32
   VAN SNYDER W, 2006, 35188 NPO NASA
   Waters JW, 2006, IEEE T GEOSCI REMOTE, V44, P1075, DOI 10.1109/TGRS.2006.873771
NR 5
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2008
VL 38
IS 5
BP 509
EP 522
DI 10.1002/spe.845
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 289YR
UT WOS:000255090300004
DA 2024-07-18
ER

PT J
AU Cunei, A
   Vitek, J
AF Cunei, A.
   Vitek, J.
TI An efficient and flexible toolkit for composing customized method
   dispatchers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 20th Conference on Object-Oriented Programming, Systems, Languages and
   Applications
CY OCT 16-20, 2005
CL San Diego, CA
SP ACM
DE dispatching; multimethods; visitor pattern; Java
ID IMPLEMENTATION; MULTIJAVA; MULTIPLE
AB The standard dispatching mechanisms built into programming languages sometimes fail to satisfy the needs of the programmer. In the case of Java, the need for more flexibility has led to the development of a number of tools, including visitors and multi-method extensions, that each add some particular functionality, but lack the generality necessary to support user-defined dispatching mechanisms. In this paper we advocate a more modular approach to dispatching, and we present a tool, PolyD, that allows the programmer to design custom dispatching strategies and to parametrize many aspects of the dispatching process. Polyp exhibits excellent performance and compares well against existing tools. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Cunei, A.; Vitek, J.] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 Purdue University System; Purdue University
RP Cunei, A (corresponding author), Purdue Univ, Dept Comp Sci, 305 N Univ St, W Lafayette, IN 47907 USA.
EM cunei@cs.purdue.edu
RI Vitek, Jan/J-9051-2014
CR AGRAWAL R, 1991, P ACM SIGPLAN 1991 C, V26, P113
   Barrett K, 1996, ACM SIGPLAN NOTICES, V31, P69, DOI 10.1145/236338.236343
   BAUMGARTNER G, 2002, OSUCISRC501TR08 DEP
   BOBROW DG, 1988, 88002R ACM SIGPLAN, V23
   BOURDONCLE F, 1997, 24 ACM SIGPLAN SIGAC, P302
   Boyland J, 1997, ACM SIGPLAN NOTICES, V32, P66, DOI 10.1145/263700.263721
   BRAVENBOER M, 2001, UUCS200142 I INF COM
   Bruneton Eric, 2002, ADAPTABLE EXTENSIBLE
   BUTTNER F, 2004, P 16 INT C SOFTW ENG, P135
   CHAMBERS C, 1992, LECT NOTES COMPUT SC, V615, P33, DOI 10.1007/BFb0053029
   Chambers C, 1999, ACM SIGPLAN NOTICES, V34, P238, DOI 10.1145/320385.320407
   CHAMBERS C, 1994, P ACM SIGPLAN 1994 C, V29, P1
   Clifton C, 2006, ACM T PROGR LANG SYS, V28, P517, DOI 10.1145/1133651.1133655
   DEMICHIEL LG, 1987, LECT NOTES COMPUT SC, V276, P151
   Dutchyn C, 2001, 6TH USENIX CONFERENCE OF OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS 01), P77
   Ernst M., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P186, DOI 10.1007/BFb0054092
   FOOTE B, 2005, P EUR C OBJ OR PROGR
   FORAX R, 2005, P 2005 ACM S APPL CO
   FORAX R, 2000, INT C TECHN OBJ OR L
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Grothoff C, 2003, LECT NOTES COMPUT SC, V2743, P103
   GROTHOFF C, 2001, P 16 ACM SIGPLAN C O, P241
   Krishnamurthi S., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P91, DOI 10.1007/BFb0054088
   Leavens GT, 1998, ACM SIGPLAN NOTICES, V33, P374, DOI 10.1145/286942.286977
   Millstein T, 2004, ACM SIGPLAN NOTICES, V39, P345, DOI 10.1145/1035292.1029006
   Millstein T, 2003, ACM SIGPLAN NOTICES, V38, P224, DOI 10.1145/949343.949325
   Millstein T, 2002, INFORM COMPUT, V175, P76, DOI 10.1006/inco.2002.3103
   *NIC, 2007, NIC LANG HOM PAG
   NORDBERG ME, 1996, P JOINT PATT LANG PR
   ORLEANS D, 2002, P 1 INT C ASP OR SOF
   PALACZ K, 2003, P ACM SIGPLAN WORKSH
   Palsberg J, 1998, P INT COMP SOFTW APP, P9, DOI 10.1109/CMPSAC.1998.716629
   SHONLE M, 2003, XASPECTS EXTENSIBLE, P28
   Torgersen M, 2004, LECT NOTES COMPUT SC, V3086, P123
   VanDrunen Thomas, 2004, P 11 ACM SIGPLAN INT
   ZENGER M, 2004, IC200433 EC POL FED
   2006, KIEV LANGUAGE HOME P
   2007, JAD DECOMPILER HOME
NR 38
TC 0
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2008
VL 38
IS 1
BP 33
EP 73
DI 10.1002/spe.821
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 259JA
UT WOS:000252934400002
DA 2024-07-18
ER

PT J
AU Paek, Y
   Ahn, M
   Cho, D
   Kim, T
AF Paek, Yunheung
   Ahn, Minwook
   Cho, Doosan
   Kim, Taehwan
TI Efficient embedded code generation with multiple load/store instructions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler; SIMD; parallelism; code optimization; processors; embedded
   systems
ID OFFSET ASSIGNMENT
AB In a recent study, we discovered that many single load/store operations in embedded applications can be parallelized and thus encoded simultaneously in a single-instruction multiple-data instruction, called the multiple load/store (MLS) instruction. In this work, we investigate the problem of utilizing MLS instructions to produce optimized machine code, and propose an effective approach to the problem. Specifically, we formalize the MLS problem, that is, the problem of maximizing the use of MLS instructions with an unlimited register file size. Based on this analysis, we show that we can solve the problem efficiently by translating it into a variant of the problem finding a maximum weighted path cover in a dynamic weighted graph. To handle a more realistic case of the finite size of the register file, our solution is then extended to take into account the constraints of register sequencing in MLS instructions and the limited register resource available in the target processor. We demonstrate the effectiveness of our approach experimentally by using a set of benchmark programs. In summary, our approach can reduce the number of loads/stores by 13.3% on average, compared with the code generated from existing compilers. The total code size reduction is 3.6%. This code size reduction comes at almost no cost because the overall increase in compilation time as a result of our technique remains quite minimal. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 Seoul Natl Univ, Sch Elect Engn & Comp Sci, Seoul 151744, South Korea.
C3 Seoul National University (SNU)
RP Cho, D (corresponding author), Seoul Natl Univ, Sch Elect Engn & Comp Sci, Seoul 151744, South Korea.
EM dscho@snu.ac.cr
CR [Anonymous], 1982, SIGPLAN Not, DOI DOI 10.1145/872726.806984
   *ARM, 2005, ARM DEV SUIT VER 1 2
   *ARM, 2005, ARM INSTR SET QUI RE
   Barten MJ, 2002, TRANSPL IMMUNOL, V10, P1, DOI 10.1016/S0966-3274(01)00041-7
   BUCHSBAUM A, 1997, REDUCTION DETERMINIZ
   Choi Y, 2002, DES AUT CON, P225, DOI 10.1109/DAC.2002.1012624
   *EMB CONC SOL INC, 2005, ARM TECHN TIDBITS
   FRANKLIN M, 2003, NETWORK PROCESSOR DE
   Johnson N, 2004, LECT NOTES COMPUT SC, V2985, P265
   Lee CH, 1997, INT SYMP MICROARCH, P330, DOI 10.1109/MICRO.1997.645830
   Leupers R, 1998, PROC INT SYMP SYST, P3, DOI 10.1109/ISSS.1998.730589
   Liao S, 1996, ACM T PROGR LANG SYS, V18, P235, DOI 10.1145/229542.229543
   NANDIVADA V, 2003, P 2003 INT C COMP AR, P24
   Ottoni D, 2003, LECT NOTES COMPUT SC, V2826, P285
   Paek Y, 2003, LECT NOTES COMPUT SC, V2826, P151
   PAEK Y, 2005, LECT NOTES COMPUTER, V3602
   RAO A, 1999, P ACM SIGPLAN C PROG, P128
   SANCHEZELEZ M, 2003, P C DES AUT TEST EUR, V1
   STALLMAN R, 2005, USING GNU COMP COLLE
   ZHUANG X, 2003, P ACM SIGPLAN C LANG, P220
   Zivojnovic V., 1994, Proceedings of the 5th International Conference on Signal Processing Applications and Technology, P715
NR 21
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2007
VL 37
IS 11
BP 1133
EP 1159
DI 10.1002/spe.801
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 204JW
UT WOS:000249040900001
DA 2024-07-18
ER

PT J
AU Kao, SJ
   Hsu, IC
AF Kao, Shang-Juh
   Hsu, I-Ching
TI Semantic Web approach to smart link generation for Web navigations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XLink; semantic Web; OWL; RuleML; Web navigation
AB The rapid development of the Internet has led to diverse applications of accessing various Web resources, such as Web pages, XML documents, pictures and video and audio files. Intelligently discovering how these Web resources are related in order to enable effective Web surfing is a current challenge in Internet development. The XML Link Language (XLink), which is a W3C recommendation for describing the relationships among Web resources, is a potential solution to this problem. However, XLink is still short of knowledge representation in handling computer-interpretable effects, such as dynamic link generations. This study attempts to integrate knowledge into XLink by defining a multi-layered semantic framework. The proposed framework is across four layers of the semantic Web stack, including the URI layer, XML (XLink) layer, ontology layer and rule layer, to facilitate machine understanding. The ontology, which is based on description logics, provides sound reasoning, while the rule is a logic program built on top of an ontology to support complementary inference capabilities. Based on the multi-layered semantic framework, an intelligent XLink shell, called XLinker, is also developed to facilitate three semantic approaches of linking associations, i.e. XLink-based metadata, ontology-based reasoning and rule-based inference. To demonstrate the feasibility of XLinker, an XLink Transcoding Web Server is also implemented to reveal smart hyperlink generation for Web navigations. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Natl Chung Hsing Univ, Dept Comp Sci, Taichung 40227, Taiwan.
C3 National Chung Hsing University
RP Hsu, IC (corresponding author), Natl Chung Hsing Univ, Dept Comp Sci, 250 Kuo Kuang Rd, Taichung 40227, Taiwan.
EM phd9203@cs.nchu.edu.tw
CR [Anonymous], SEMANTIC WEB, DOI DOI 10.1038/SCIENTIFICAMERICAN0501-34
   Arpinar IB, 2004, CEC 2004: IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE TECHNOLOGY, PROCEEDINGS, P146
   Baader F., 2003, DESCRIPTION LOGIC HD
   Berendt B, 2002, LECT NOTES COMPUT SC, V2342, P264
   BERENDT B, 2003, P 1 EUR WEB MIN FOR, P1
   Chakrabarti S, 1999, COMPUTER, V32, P60, DOI 10.1109/2.781636
   Chandrasekaran B, 1999, IEEE INTELL SYST APP, V14, P20, DOI 10.1109/5254.747902
   Christensen B. G., 2003, P 12 INT WORLD WID W, P490
   Christensen E., 2001, WEB SERVICES DESCRIP
   CIANCARINI P, 2002, P 2002 ACM S DOC ENG, P57, DOI DOI 10.1145/585058.585070
   FANG X, 2002, ACM TRANSACTIONS INT, V4, P209
   Gómez-Pérez A, 2002, IEEE INTELL SYST, V17, P54, DOI 10.1109/5254.988453
   Grosof BenjaminN., 2003, P 12 INT WORLD WIDE, P48, DOI DOI 10.1145/775152.775160
   GROSOF BN, 2003, P 12 INT C WORLD WID, P340, DOI DOI 10.1145/775152.775200
   Haarslev V., 2003, P INT WORKSHOP APPL, P91
   Horrocks I, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P792
   HORROCKS I, 1987, P 6 INT C PRINC KNOW, P636
   HORROCKS I, 2006, SEMANTIC WEB RULE LA
   Hsu IC, 2005, J INF SCI, V31, P178, DOI 10.1177/0165551505052346
   Huang Z., 2002, P 2 ACMIEEE CS JOINT, P65
   *IEEE LOM, 2006, LEARN OBJ MET STAND
   *JESS, 2006, JAV RUL ENG API
   Lee JK, 2003, COMMUN ACM, V46, P59, DOI 10.1145/769800.769802
   Martin D., 2006, OWL-S: Semantic markup for web services - Pre-Release 1.2
   Matheus CJ, 2003, LECT NOTES COMPUT SC, V2876, P81
   MIDDLETON S, 2002, P WWW2002 INT WORKSH, V55
   Middleton SE, 2004, ACM T INFORM SYST, V22, P54, DOI 10.1145/963770.963773
   MOLLER R, 2001, P INT WORKSH DESCR L, P132
   MUCHALUATSAADE DC, 2002, P 2002 ACM S DOC ENG, P49
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   NURNBERG PJ, 1997, J DIGITAL INFORMATIO, V1, P207
NR 31
TC 7
Z9 7
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2007
VL 37
IS 8
BP 857
EP 879
DI 10.1002/spe.789
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 187HB
UT WOS:000247837100003
DA 2024-07-18
ER

PT J
AU Ciabrini, D
AF Ciabrini, Damien
TI Stack virtualization for source level debugging
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE debugging; stack inspection; compilation; high-level languages
AB The compilation of high-level languages to general-purpose execution platforms poses some challenges when it comes to debugging. Typically, abstractions that are not natively supported by the execution platform must be emulated with intermediate data structures and function calls. Unfortunately, the details of the emulation are visible in the execution stack, and this unwanted information greatly reduces the effectiveness of debuggers. This paper presents a general method for constructing a virtual view of the stack, in order to mask intermediate function calls that were generated to emulate high-level abstractions, or even to recover logical frame information that was lost during the compilation process. In particular, virtual views enable the visualization of two disjoint code representations (e.g. native code and interpreted code) as a single unified stack. We illustrate this method by showing how to handle the compilation of Bigloo, a dialect of the Scheme programming language. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 INRIA, F-06902 Sophia Antipolis, France.
C3 Inria
RP Ciabrini, D (corresponding author), INRIA, 2004 Route Lucioles,BP 93, F-06902 Sophia Antipolis, France.
EM damien.ciabrini@sophia.inria.fr
CR Arnold M, 2000, ACM SIGPLAN NOTICES, V35, P47, DOI 10.1145/354222.353175
   BAKER HG, 1995, SIGPLAN NOTICES, V30, P17, DOI 10.1145/214448.214454
   BEE SM, 2000, J FUNCTIONAL PROGRAM, V10, P353
   Bobrow D.G., 1988, ACM SIGPLAN NOTICES, V23
   BUGLOO CD, 2003, P 3 INT LISP C NEW Y
   CHAMBERS C, 1989, SIGPLAN NOTICES, V24, P49, DOI 10.1145/74878.74884
   Clinger W.D., 1998, Proper tail recursion and space efficiency, P174, DOI [10.1145/277650.277719, DOI 10.1145/277650.277719]
   COUTANT DS, 1988, SIGPLAN NOTICES, V23, P125, DOI 10.1145/960116.54003
   ECMA, 1999, ECMA 262 ECMASCRIPT
   FIEDLER N, 1999, JSWAT JAVA DEBUGGER
   FIELD R, 2003, JSR 45 DEBUGGING SUP
   Gallesio E, 2005, J FUNCT PROGRAM, V15, P751, DOI 10.1017/S0956796805005575
   GOUGH J, 2001, COMPILING NET COMMON
   HOLZLE U, 1992, P ACM SIGPLAN C PROG, P32, DOI DOI 10.1145/143095.143114
   HOWARD TG, 1995, SMALLTALK DEV GUIDE
   HUGUNIN J, 1997, P 6 INT PHYTH C SAN, P11
   *IEEE ANSI, 100321992 IEEEANSI
   *IEEE ANSI, 10032A1992 IEEEANSI
   Kelsey R, 1998, ACM SIGPLAN NOTICES, V33, P26, DOI 10.1145/290229.290234
   KICZALES G, 2001, P 15 EUR C OBJ OR PR, P237
   Lidin S., 2002, INSIDE MICROSOFT NET
   Lindholm T., 1997, JAVA VIRTUAL MACHINE
   *MOZ FDN, 2004, RHIN JAV JAV
   Rossum G.V., 2000, PYTHON REFERENCE MAN
   SCHINZ M, 2001, ENTCS, V59, P155
   Serrano M., 1995, Static Analysis. Second International Symposium, SAS'95. Proceedings, P366
   SERRANO M, 2002, P 7 ACM SIGPLAN INT, P259
   STALLMAN R, 1993, DEBUGGING GDB GNU SO
   Suganuma T, 2000, IBM SYST J, V39, P175, DOI 10.1147/sj.391.0175
   THOMPSON K, 1968, COMMUN ACM, V11, P419, DOI 10.1145/363347.363387
   UNGAR D, 1987, SIGPLAN NOTICES, V22, P227, DOI 10.1145/38807.38828
   WARKUS M, 2004, OFFICIAL GNOME 2 DEV
   ZELLWEGER PT, 1983, P ACM SIGSOFT SIGPLA, P159
   ZELLWEGER PT, 1984, THESIS U CALIFORNIA
NR 34
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2007
VL 37
IS 7
BP 693
EP 725
DI 10.1002/spe.782
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 176BT
UT WOS:000247058400002
DA 2024-07-18
ER

PT J
AU Vincenzi, AMR
   Delamaro, ME
   Maldonado, JC
   Wong, WE
AF Vincenzi, A. M. R.
   Delamaro, M. E.
   Maldonado, J. C.
   Wong, W. E.
TI Establishing structural testing criteria for Java bytecode
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software testing; structural testing; program analysis; Java bytecode
ID PROGRAMS; SOFTWARE
AB This paper describes intra-method control-flow and data-flow testing criteria for the Java bytecode language. Six testing criteria are considered for the generation of testing requirements: four control-flow and two data-flow based. The main reason to work at a lower level is that, even when there is no source code, structural testing requirements can still be derived and used to assess the quality of a given test set. It can be used, for instance, to perform structural testing on third-party Java components. In addition, the bytecode can be seen as an intermediate language, so the analysis performed at this level can be mapped back to the original high-level language that generated the bytecode. To support the application of the testing criteria, we have implemented a tool named JaBUTi (Java Bytecode Understanding and Testing). JaBUTi is used to illustrate the application of the ideas developed in this paper. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Fed Goias, INF, Inst Informat, BR-74001970 Goiania, Go, Brazil.
   UNIVEM, Ctr Univ Euripides Marilia, Marilia, SP, Brazil.
   USP, ICMC, Inst Ciencias Matemat & Computacao, Sao Carlos, SP, Brazil.
   Univ Texas, Richardson, TX USA.
C3 Universidade Federal de Goias; Universidade de Sao Paulo; University of
   Texas System; University of Texas Dallas
RP Vincenzi, AMR (corresponding author), Univ Fed Goias, INF, Inst Informat, Bloco IMF-1,Sala 239,Campus 2,Cx Postal 131, BR-74001970 Goiania, Go, Brazil.
EM auri@inf.ufg.br
RI Vincenzi, Auri Marcelo Rizzo/D-8465-2013; Delamaro, Marcio/D-5180-2011;
   Maldonado, José Carlos/E-9290-2011
OI Vincenzi, Auri Marcelo Rizzo/0000-0001-5902-1672; Delamaro,
   Marcio/0000-0001-7535-5891; 
CR [Anonymous], P 21 ACM SIGPLAN SIG
   [Anonymous], PERFORMING DATA FLOW
   CHAIM ML, 2002, P INT C COMP SCI SOF, P317
   CHAIM ML, 1991, THESIS DCA FEEC UNIC
   Cifuentes C., 1997, Proceedings International Conference on Software Maintenance (Cat. No.97CB36119), P188, DOI 10.1109/ICSM.1997.624245
   DELASERNA MC, 2003, PIXEL BIT REV MEDIOS, P73
   DUNDAN I, 1996, SOFTWARE MAINTENANCE, V8, P241
   FRANKL P, 1985, P IEE C SOFTW TO APR, P72
   HARRIS S, 1994, J COUNTRY MUSIC, V16, P2
   HATCLIFF J, 1999, P 6 INT STAT AN S SE
   Herman P. M., 1976, Australian Computer Journal, V8, P92
   HORGAN JR, 1991, S SOFTW TEST AN VER, P87
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   LASKI JW, 1983, IEEE T SOFTWARE ENG, V9, P347, DOI 10.1109/TSE.1983.236871
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   MALDONADO JC, 1991, THESIS DCA FEE UNICA
   MALLOY BA, 1994, SIGPLAN NOTICES, V29, P38, DOI 10.1145/193209.193218
   Marx D. I. S., 1999, Software Testing, Verification and Reliability, V9, P51, DOI 10.1002/(SICI)1099-1689(199903)9:1<51::AID-STVR177>3.0.CO;2-U
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Myers Glenford J., 2011, The Art of Software Testing
   OSTRAND TJ, 1991, S SOFTW TEST AN VER, P74
   PIWOWARSKI P, 1993, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.1993.346035
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Roper M., 1994, SOFTWARE TESTING
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   VILELA PRS, 1997, P 10 INT SOFTW QUAL, P1
   Vincenzi AMR, 2001, SOFTW TEST VERIF REL, V11, P249, DOI 10.1002/stvr.242
   VINCENZI AMR, 2003, P 17 BRAZ S SOFTW EN, P70
   WEYUKER EJ, 1990, IEEE T SOFTWARE ENG, V16, P121, DOI 10.1109/32.44376
   Wong W. E., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P230, DOI 10.1109/ISSRE.1994.341379
   ZHAO J, 1999, P 16 C JAP SOC SOFTW, P313
   ZHAO J, 2000, P 24 IEEE ANN INT CO, P486
   Zhao JJ, 1999, PROG COMPREHEN, P126, DOI 10.1109/WPC.1999.777751
NR 33
TC 12
Z9 13
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2006
VL 36
IS 14
BP 1513
EP 1541
DI 10.1002/spe.726
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 103SA
UT WOS:000241905800001
DA 2024-07-18
ER

PT J
AU Díaz, M
   Garrido, D
   Romero, S
   Rubio, B
   Soler, E
   Troya, JM
AF Diaz, Manuel
   Garrido, Daniel
   Romero, Sergio
   Rubio, Bartolome
   Soler, Enrique
   Troya, Jose M.
TI Experiences with component-oriented technologies in nuclear power plant
   simulators
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE component-oriented programming; scientific computing; nuclear power
   plant simulator; CCA; CORBA
AB This paper proposes the application of modern component-oriented technologies to the development of nuclear power plant simulators. On the one hand, as a significant improvement on previous simulators, the new kernel is based on the Common Component Architecture (CCA). The use of such a high-performance computing oriented component technology, together with a novel algorithm to automatically resolve simulation data dependencies, allows the efficient execution of both parallel and sequential simulation models. On the other hand, RT-CORBA is employed in the development of the rest of the applications that comprise the simulator. This real-time communication middleware not only makes the management of communications easier, but also provides the applications with real-time capabilities. Software components used in these two ways, simulation models integrating the kernel and distributed applications from which the simulator is comprised, improve the evolution and maintenance of the entire system, as well as promoting code reusability in other projects. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Malaga, Dept Languages & Comp Sci, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Romero, S (corresponding author), Univ Malaga, Dept Languages & Comp Sci, E-29071 Malaga, Spain.
EM sromero@lcc.uma.es
RI Díaz, Manuel/AAM-6225-2021; Rubio, Bartolome/L-2400-2014; Soler,
   Enrique/L-2747-2014; Garrido Marquez, Daniel/L-2689-2014
OI Díaz, Manuel/0000-0002-0625-2730; Rubio, Bartolome/0000-0002-8279-4224;
   Soler, Enrique/0000-0003-0339-6752; Garrido Marquez,
   Daniel/0000-0002-7884-0793
CR Allan BA, 2002, CONCURR COMP-PRACT E, V14, P323, DOI 10.1002/cpe.651
   ALVAREZ JM, 1996, P EUR SUP NONL DIS S, P254
   Burns A., 2001, Real-time Systems and Programming Languages: Ada 95, Real-Time Java and Real-Time POSIX, V3rd
   Díaz M, 2005, LECT NOTES COMPUT SC, V3489, P283
   Díaz M, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON DISTRIBUTED SIMULATION AND REAL-TIME APPLICATIONS, PROCEEDINGS, P98, DOI 10.1109/DS-RT.2004.5
   Díaz M, 2004, SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P7, DOI 10.1109/ISORC.2004.1300323
   Díaz M, 2004, 12TH EUROMICRO CONFERENCE ON PARALLEL, DISTRIBUTED AND NETWORK-BASED PROCESSING, PROCEEDINGS, P318, DOI 10.1109/EMPDP.2004.1271461
   ENGLANDER R, 1997, DEV JAVA BEANS
   Geist A., 1994, PVM: Parallel Virtual Machine
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   Henning M., 1999, ADV CORBA PROGRAMMIN
   HORSMANN M, 1997, MICROSOFT WHITE PAPE
   Lee MG, 2004, SOFTWARE PRACT EXPER, V34, P1441, DOI 10.1002/spe.620
   Monson-Haefel Richard., 2001, Enterprise Java Beans, V3
   Nieplocha J., 1994, Proceedings Supercomputing '94 (Cat. No.94CH34819), P340, DOI 10.1109/SUPERC.1994.344297
   Schmidt DC, 1998, COMPUT COMMUN, V21, P294, DOI 10.1016/S0140-3664(97)00165-5
   SCHMIDT DC, 2000, SOFTWARE PRACT EXPER, V33, P56
   Snir M., 1998, MPI-the complete reference: the MPI core, V1
   Spore JW, 1981, NUREGCR2178, V1-4
   Vanneschi M, 2002, PARALLEL COMPUT, V28, P1709, DOI 10.1016/S0167-8191(02)00188-6
   Vivanco RA, 2005, SOFTWARE PRACT EXPER, V35, P237, DOI 10.1002/spe.633
   Zhao H, 2004, CONCURR COMP-PRACT E, V16, P1503, DOI 10.1002/cpe.876
NR 22
TC 4
Z9 4
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2006
VL 36
IS 13
BP 1489
EP 1512
DI 10.1002/spe.735
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 100ZJ
UT WOS:000241708400005
DA 2024-07-18
ER

PT J
AU Mostefaoui, A
AF Mostefaoui, A
TI A modular and adaptive framework for large scale video indexing and
   content-based retrieval: the SIRSALE system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE video indexing; multimedia systems
AB In this paper, we present the design and the implementation of SIRSALE: a distributed video data management system. SIRSALE allows users to manipulate video streams stored in large distributed repositories, i.e. it provides remote users with functionalities to browse video streams by structures (shots, scenes, sequences, etc.), to annotate the semantic contents of videos and to query the distributed video repositories. One of the main contributions of SIRSALE is its contextual adaptation to the target application, i.e. it is based on a modular data model that allows adapting the system to deal with several semantic contexts. In other words, SIRSALE allows users to define and to use their own semantic data model in order to annotate and query video databases. The key idea behind this is to dynamically adapt the whole system, mainly user interfaces, to stand several semantic data models. The system has been presented to professionals who gave a positive feedback. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 LIFC, F-25201 Montbeliard, France.
RP Mostefaoui, A (corresponding author), LIFC, 1 Cours Leprince Ringuet,BP 21126, F-25201 Montbeliard, France.
EM ahmed.mostefaoui@univ-fcomte.fr
CR ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   Apers Peter., 1997, MULTIMEDIA DATABASES
   BIMBO AD, 1998, IEEE WORKSH CONTENT
   Boreczky JS, 1996, P SOC PHOTO-OPT INS, V2670, P170, DOI 10.1117/12.234794
   Chua TS, 2002, MULTIMED TOOLS APPL, V16, P79, DOI 10.1023/A:1013293702591
   Fan JP, 2001, J ELECTRON IMAGING, V10, P895, DOI 10.1117/1.1406944
   GARGI U, 2000, IEEE T CIRCUITS SYST, V10
   Ghandeharizadeh S, 1997, MULTIMED TOOLS APPL, V5, P79, DOI 10.1023/A:1009690011119
   HJELSVOLD R, 1994, P 20 VLD C
   Konigsberg Ira., 1997, COMPLETE FILM DICT
   Li VOK, 1999, HANDBOOK OF INTERNET AND MULTIMEDIA SYSTEMS AND APPLICATIONS, P339
   Mostefaoui A, 2002, MULTIMED TOOLS APPL, V18, P159, DOI 10.1023/A:1016211110312
   Mostefaoui A, 2002, LECT NOTES COMPUT SC, V2515, P190
   MOSTEFAOUI A, 2002, ACM MULT C JUAN PINS, P251
   MOSTEFAOUI A, 1999, P RENPAR 11, P127
   Rubin B., 1989, SIGCHI Bulletin, V21, P78, DOI 10.1145/70609.70620
   *SMIL, 1998, RECSMIL19980615
   Subrahmanian V.S., 1996, MULTIMEDIA DATABASE
   SWAIN MJ, 1991, INT J COMPUT VISION, V7, P11, DOI 10.1007/BF00130487
NR 19
TC 2
Z9 2
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2006
VL 36
IS 8
BP 871
EP 890
DI 10.1002/spe.722
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056TK
UT WOS:000238547800004
DA 2024-07-18
ER

PT J
AU González, EJ
   Hamilton, AF
   Moreno, L
   Marichal, RL
   Muñoz, V
AF Gonzalez, E. J.
   Hamilton, A. F.
   Moreno, L.
   Marichal, R. L.
   Munoz, V.
TI Software experience when using ontologies in a multi-agent system for
   automated planning and scheduling
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multi-agent systems; software experience; ontologies; planning and
   scheduling
AB The main aim of this paper is to present the software experience when using multi-agent systems (MASs) and ontologies in the development of a sample application. In particular, the authors have implemented a MAS for the planning and scheduling of a University Research Group. This MAS, called MASplan, should help group members to find the best possible time frames to hold a meeting and to designate the use of common resources. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ La Laguna, Grp Computadoras & Control, Dept Fundamental & Expt Phys Electron & Syst, Tenerife 38207, Canary Isl, Spain.
C3 Universidad de la Laguna
RP González, EJ (corresponding author), Univ La Laguna, Grp Computadoras & Control, Dept Fundamental & Expt Phys Electron & Syst, Av Astrofis Francisco Sanchez,S-N, Tenerife 38207, Canary Isl, Spain.
EM ejgonzal@ull.es
RI L., Marichal R./G-2884-2013; Muñoz, Vanesa/L-5129-2015; Gonzalez,
   Evelio/F-1510-2014; Hamilton, Alberto/G-2535-2016
OI Gonzalez, Evelio/0000-0002-2203-3757; Munoz Cruz,
   Vanesa/0000-0003-0499-8341; Hamilton, Alberto/0000-0002-2347-5792
CR [Anonymous], 2000, Multiagent Systems: AModern Approach to DistributedArtificial Intelligence
   BECHHOFER S, 2001, LECT NOTES COMPUTER, V2174, P376
   Chalupsky H., 2001, P 13 C INNOVATIVE AP, P51
   Chaudhri V.K., 1998, OPEN KNOWLEDGE BASE
   Decker S, 2000, IEEE INTERNET COMPUT, V4, P68, DOI 10.1109/4236.895018
   FALASCONI S, 1996, P 10 KNOWL ACQ KNOWL
   *FIPA ABSTR ARCH S, 2002, SC00001L FIPA ABSTR
   *FIPA AG MAN SPEC, 2004, SC00023K FIPA AG MAN
   *FIPA ONT SERV SPE, 2001, XC00086D FIPA ONT SE
   *FIPA PERS ASS SPE, 2001, XC00083B FIPA PERS A
   FONSECA SP, 2002, P 1 INT JOINT C AUT
   GENESERETH MR, 1992, LOGIC921 INT WORK GR
   *HEWL PACK, 2003, JEN 2 MAN
   Jennings N. R., 1998, Autonomous agents and multi-agent systems, P7, DOI DOI 10.1023/A:1010090405266
   KAUTZ HA, 1994, 1994 SPRING S
   KNUBLAUCH H, 2004, P 3 INT SEM WEB C IS
   Montana D., 2000, Journal of Scheduling, V3, P225, DOI 10.1002/1099-1425(200007/08)3:4<225::AID-JOS44>3.0.CO;2-R
   Nwana HS, 1996, KNOWL ENG REV, V11, P205, DOI 10.1017/S026988890000789X
   *OBJ MAN GROUP AG, 2000, AGENT000901 OBJ MAN
   PEASE A, 2002, WHY USE DAML OIL
   PEASE A, 2005, WHY USE OWL
   PYNADATH D, 2000, P AAAI FALL S SOC IN
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Sen S, 1997, IEEE INTELL SYST APP, V12, P41, DOI 10.1109/64.608189
   Sen S, 1997, INT J HUM-COMPUT ST, V47, P407, DOI 10.1006/ijhc.1997.0139
   SPERBERGMCQUEEN CM, 1990, GUIDELINES ELECT TEX
   STRAFFIN PD, 1990, TOPICS THEORY VOTING
NR 27
TC 8
Z9 8
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2006
VL 36
IS 7
BP 667
EP 688
DI 10.1002/spe.711
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 053TP
UT WOS:000238328500001
DA 2024-07-18
ER

PT J
AU Paramá, JR
   Places, AS
   Brisaboa, NR
   Penabad, MR
AF Paramá, JR
   Places, AS
   Brisaboa, NR
   Penabad, MR
TI The design of a Virtual Library of Emblem Books
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE documental databases; Web interfaces; virtual libraries; emblem
   literature
ID AWARENESS
AB Antique documents, which undoubtedly represent our cultural heritage and can be considered a very rich source of information, are kept in many countries only on libraries with historical archives. The antiquity and fragility of such documents makes their access very restricted. Considering that nowadays the Internet is one of the most interesting places to publish any kind of information, it seems logical to use it to both preserve our cultural heritage and provide a broader access to these documents. This work presents a virtual library that stores data, transcribed texts and digitalized pages of historic Spanish documents from the 16th-18th centuries. This virtual library has two main objectives: first, by offering a set of services, including a powerful user interface to search and browse the documents, a bulletin board, a chat, or mail boxes, the virtual library is transformed into a meeting place for researchers that use emblem books as sources of information for their studies. Second, the virtual library contributes to the preservation of emblem books. We shall describe in this work the project that led to the development of the Virtual Library of Emblem Books, showing its evolution from the beginning (simple search forms and answer pages) to its current state as a virtual library, focusing on the techniques used to build an intuitive and powerful user interface. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ A Coruna, Lab Bases Datos, E-15071 Acoruna, Spain.
C3 Universidade da Coruna
RP Univ A Coruna, Lab Bases Datos, E-15071 Acoruna, Spain.
EM penabad@udc.es
RI Places, Ángeles Saavedra/E-8860-2015; Parama, Jose R./L-4793-2014;
   Rodriguez Penabad, Miguel/N-9781-2015; Brisaboa, Nieves R./S-4744-2016
OI Saavedra Places, Angeles/0000-0001-8539-304X; Parama, Jose
   R./0000-0002-8727-0980; Rodriguez Penabad, Miguel/0000-0001-5455-6088;
   Brisaboa, Nieves R./0000-0001-8025-3048
CR [Anonymous], OPEN ARCH INITIATIVE
   [Anonymous], 2005, BIBLIOTECA VIRTUAL M
   [Anonymous], DUBLIN CORE METADATA
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Borgman CL, 1999, INFORM PROCESS MANAG, V35, P227, DOI 10.1016/S0306-4573(98)00059-4
   BOWMAN CM, 1995, COMPUT NETWORKS ISDN, V28, P119, DOI 10.1016/0169-7552(95)00098-5
   Brisaboa NR, 2001, LECT NOTES COMPUT SC, V2115, P29
   BRISABOA NR, 2003, LECT NOTES COMPUTER, V2806, P371
   CUBAUD P, 2001, P 6 INT C 3D WEB TEC, P51
   FRAKES W, 1991, INFORM RETRIEVAL DAT
   Gamma E., 2000, Design Patterns: Elements of Reusable Object-Oriented Software
   GONCALVES MA, 2002, LECT NOTES COMPUTER, V2476, P194
   GONCALVES MA, 2001, TR0112 VIRG TECH
   Jang CY, 2002, INT J HUM-COMPUT ST, V56, P109, DOI 10.1006/ijhc.2001.0517
   Lesk Michael, 1997, PRACTICAL DIGITAL LI
   Lucas W, 2001, TEXT DATABASES AND DOCUMENT MANAGEMENT: THEORY AND PRACTICE, P22
   Maly K, 2004, ACM-IEEE J CONF DIG, P237, DOI 10.1145/996350.996403
   Marshall CC, 2004, ACM-IEEE J CONF DIG, P218, DOI 10.1145/996350.996401
   PENABAD MR, 1909, P 5 INT C INF SYST A, V2, P512
   Sumi Y, 2002, INT J HUM-COMPUT ST, V56, P127, DOI 10.1006/ijhc.2001.0518
   Zetie A, 1999, PRACTICAL USER INTER
   ZLOOF MM, 1977, IBM SYST J, V16, P324, DOI 10.1147/sj.164.0324
   2005, BIBLIOTECA SANTA CRU
   2005, GERMAN EMBLEM BOOKS
   2005, EMBLEM PROJECT UTREC
NR 25
TC 4
Z9 4
U1 2
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2006
VL 36
IS 5
BP 473
EP 494
DI 10.1002/spe.705
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 040WB
UT WOS:000237410500002
DA 2024-07-18
ER

PT J
AU Savidis, A
AF Savidis, A
TI Application invariants: Design by Contract augmented with deployment
   correctness logic
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Design by Contract; defensive programming; embedded correctness
   checking; application invariants
AB Design by Contract is a method for the development of robust object-oriented software, introducing class invariants as conditions corresponding to the design axioms that should be satisfied by every valid instance of a class. Additionally, the method states formally the way client programs should correctly utilize supplier classes, so that the composition of correct programs may be accomplished. However, the contextual correctness of supplier instances within client programs, only reflected in the client-specific semantics for supplier-class deployment, cannot be expressed through Design by Contract. For instance, supplier instances satisfying the supplier class invariant may not constitute plausible supplier instances in the context of a particular client program. In this context, we introduce application invariants as an extension to Design by Contract, for hosting the contextual-correctness logic for supplier instances, as conditionally defined by client programs. This allows stronger validation of supplier instances, through the dynamic encapsulation of client-specific acceptance filtering, enabling more intensive defect detection. Application invariants are implemented in the context of client classes as methods utilizing correctness condition expressions, are dynamically hosted within supplier instances, while always called by supplier instances when the basic supplier-class invariant test is performed. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Fdn Res & Technol Hellas, Inst Comp Sci, GR-71110 Iraklion, Crete, Greece.
C3 Foundation for Research & Technology - Hellas (FORTH)
RP Savidis, A (corresponding author), Fdn Res & Technol Hellas, Inst Comp Sci, Sci & Techno Pk Crete, GR-71110 Iraklion, Crete, Greece.
EM as@ics.forth.gr
CR Abrial J-R., 1996, The B Book
   [Anonymous], 1997, Object-oriented software construction
   BARNETT M, 2004, P INT WORKSH CONSTR
   BECK K, 2001, JUNIT TEST INFECTED
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Burdy L., 2005, INT J SOFTWARE TOOLS, V7
   CRESS D, 2003, STRATEGY INTEGRATE D
   GARLINGTON K, 1998, CRITIQUE PUT CONTRAC
   HOVEMEYER D, 2004, P 19 ANN ACM C OBJ O
   Hunt Andrew, 1999, The Pragmatic Programmer: From Journeyman to Master, V1
   Hunt Andy., 2003, Pragmatic Unit Testing in Java with JUnit
   Meyer B., 1992, Eiffel: The Language
   MILANOVIC M, 2004, P WORKSH ARCH DEP SY
   OTTOSEN T, 2004, PROP ADD DES CONTR C
   Savidis A, 2004, SOFTWARE PRACT EXPER, V34, P977, DOI 10.1002/spe.600
   VIEGA J, 2000, P 16 ANN COMP SEC AP
NR 16
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2006
VL 36
IS 3
BP 255
EP 282
DI 10.1002/spe.695
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 020MW
UT WOS:000235914600002
DA 2024-07-18
ER

PT J
AU Watkins, A
   Hufnagel, EM
AF Watkins, A
   Hufnagel, EM
TI Evolutionary test data generation: a comparison of fitness functions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automatic software test data generation; genetic algorithms; path
   testing; adaptive search
ID SOFTWARE TEST DATA
AB Previous research using genetic algorithms to automate the generation of data for path testing has utilized several different fitness functions, assessing their usefulness by comparing them to random generation. This paper describes two sets of experiments that assess the performance of several fitness functions, relative to one another and to random generation. The results demonstrate that some fitness functions provide better results than others, generating fewer test cases to exercise a given program path. In these studies, the branch predicate and inverse path probability approaches were the best performers, suggesting that a two-step process combining these two methods may be the most efficient and effective approach to path testing. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ S Florida, Coll Business, Informat Syst & Decis Syst, St Petersburg, FL 33701 USA.
C3 State University System of Florida; University of South Florida
RP Watkins, A (corresponding author), Univ S Florida, Coll Business, Informat Syst & Decis Syst, 140 7th Ave S, St Petersburg, FL 33701 USA.
EM awatkins@stpt.usf.edu
CR [Anonymous], 2002, RTI PROJECT
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Baresel A, 2003, LECT NOTES COMPUT SC, V2724, P2442
   Baresel Andre., 2002, Proceedings of the Genetic and Evolutionary Computation Conference, GECCO '02, P1329
   Binkley D, 2004, IEEE T SOFTWARE ENG, V30, P715, DOI 10.1109/TSE.2004.78
   Bueno PMS, 2002, INT J SOFTW ENG KNOW, V12, P691, DOI 10.1142/S0218194002001074
   Caruana RichardA., 1988, P 5 INT C MACHINE LE, P153
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   HCK S, 2003, READING STAT RES
   Holland I.H., 1975, ADAPTATION NATURAL A
   Lammermann F, 2004, LECT NOTES COMPUT SC, V3103, P1350
   Lin JC, 2001, INFORM SCIENCES, V131, P47, DOI 10.1016/S0020-0255(00)00093-1
   Mansour N, 2004, SOFTWARE QUAL J, V12, P121, DOI 10.1023/B:SQJO.0000024059.72478.4e
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Peres LM, 2001, SCCC 2001: XXI INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P240, DOI 10.1109/SCCC.2001.972653
   SRINIVAS M, 1994, COMPUTER, V27, P17, DOI 10.1109/2.294849
   WATKINS A, 1996, THESIS U PLYMOUTH
   WATKINS AL, 1995, PROCEEDINGS OF THE 4TH SOFTWARE QUALITY CONFERENCE, VOLS 1 AND 2, P300
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Westland JC, 2004, DECIS SUPPORT SYST, V37, P229, DOI 10.1016/S0167-9236(03)00020-4
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
NR 24
TC 22
Z9 29
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2006
VL 36
IS 1
BP 95
EP 116
DI 10.1002/spe.684
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 002KR
UT WOS:000234610800004
DA 2024-07-18
ER

PT J
AU Skibinski, P
   Grabowski, S
   Deorowicz, S
AF Skibinski, P
   Grabowski, S
   Deorowicz, S
TI Revisiting dictionary-based compression
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE lossless data compression; preprocessing; text compression; dictionary
   compression
AB An attractive way to increase text compression is to replace words with references to a text dictionary given in advance. Although there exist a few works in this area, they do not fully exploit the compression possibilities or consider alternative preprocessing variants for various compressors in the latter phase. In this paper, we discuss several aspects of dictionary-based compression, including compact dictionary representation, and present a PPM/BWCA-oriented scheme, word replacing transformation, achieving compression ratios higher by 2-6% than the state-of-the-art StarNT (2003) text preprocessor, working at a greater speed. We also present an alternative scheme designed for LZ77 compressors, with the advantage over StarNT of reaching up to 14% in combination with gzip. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Tech Univ Lodz, Dept Comp Engn, PL-90924 Lodz, Poland.
   Univ Wroclaw, Inst Comp Sci, PL-51151 Wroclaw, Poland.
   Silesian Tech Univ, Inst Comp Sci, PL-44100 Gliwice, Poland.
C3 Lodz University of Technology; University of Wroclaw; Silesian
   University of Technology
RP Tech Univ Lodz, Dept Comp Engn, Politechniki 11, PL-90924 Lodz, Poland.
EM sgrabow@zly.kis.p.lodz.pl
RI Grabowski, Szymon/AAJ-2398-2021; Deorowicz, Sebastian/F-8386-2014
OI Grabowski, Szymon/0000-0003-1714-1224; Deorowicz,
   Sebastian/0000-0002-9496-733X
CR ABEL J, 2005, IN PRESS IEEE T COMP
   Abel R, 2004, IEEE DATA COMPR CONF, P521
   Adiego J, 2004, IEEE DATA COMPR CONF, P112
   Arnavut Z, 1997, IEEE DATA COMPR CONF, P181, DOI 10.1109/DCC.1997.582009
   ATKINSON KEVIN., 2004, Spell Checking Oriented Word Lists (SCOWL)
   Awan FS, 2001, IEEE DATA COMPR CONF, P481
   BINDER E, 2000, DC ARCHIVER V0 98B
   Brisaboa NR, 2003, LECT NOTES COMPUT SC, V2857, P122
   Chapin B, 1998, IEEE DATA COMPR CONF, P532, DOI 10.1109/DCC.1998.672253
   Cheney J, 2001, IEEE DATA COMPR CONF, P163, DOI 10.1109/DCC.2001.917147
   Ciura MG, 2001, SOFTWARE PRACT EXPER, V31, P1077, DOI 10.1002/spe.402
   CLEARY JG, 1984, IEEE T COMMUN, V32, P396, DOI 10.1109/TCOM.1984.1096090
   Czech ZJ, 1997, THEOR COMPUT SCI, V182, P1, DOI 10.1016/S0304-3975(96)00146-6
   Daciuk J, 2000, COMPUT LINGUIST, V26, P3, DOI 10.1162/089120100561601
   de Moura E., 1997, 4th South American Workshop on String Processing, P95
   Deorowicz S, 2000, SOFTWARE PRACT EXPER, V30, P1465, DOI 10.1002/1097-024X(20001110)30:13<1465::AID-SPE345>3.0.CO;2-D
   Drinic M, 2002, IEEE DATA COMPR CONF, P192, DOI 10.1109/DCC.2002.999957
   Dvorsky J, 1999, LECT NOTES COMPUT SC, V1691, P75
   Franceschini R. W., 1996, Proceedings DCC'96. Data Compression Conference (Cat. No.96TB100013), DOI 10.1109/DCC.1996.488369
   GAILLY JL, 2003, GNU ZIP
   GRABOWSKI S, 1999, P 7 K SIEC SYST INF, P229
   GRINGELER Y, 2003, COMPRESSIA 1 0 BETA
   HERKLOTZ U, 2001, UHARC 0 4 PROGRAM
   HERKLOTZ U, 2003, UHBC 1 0 PROGRAM
   HORSPOOL NR, 1992, P 1992 DAT COMPR C, P62
   Isal R., 2002, P F 25 AUSTRALASIAN, P129
   KADACH AV, 1997, THESIS RUSSIAN ACAD
   Kruse H, 1998, IEEE DATA COMPR CONF, P556, DOI 10.1109/DCC.1998.672295
   LUCCHESI CL, 1993, SOFTWARE PRACT EXPER, V23, P15, DOI 10.1002/spe.4380230103
   Mahoney MV, 2004, PAQ6 DATA COMPRESSIO
   MOFFAT A, 1989, SOFTWARE PRACT EXPER, V19, P185, DOI 10.1002/spe.4380190207
   RAUTIO J, 2000, P 13 ANN S COMB PATT, P42
   SEWARD J, 1996, BZIP 0 21 PROGRAM
   SEWARD J, 2002, BZIP2 1 0 2 PROGRAM
   SHELWIEN E, 2003, COMPRESSING DICT
   Shkarin D, 2002, IEEE DATA COMPR CONF, P202, DOI 10.1109/DCC.2002.999958
   SHKARIN D, 2002, PPMD PPMONSTR VAR 1
   Shkarin D, 2004, DURILCA DURILCA LIGH
   SKIBINSKI P, 2004, WRT SOURCE CODES
   SKIBINSKI P, 2004, WRT LZ77 SOURC COD
   SMIRNOV M, 2002, PPMN V1 00B1 PROGRAM
   SMIRNOV MA, 2002, P 5 SESS POST GRAD S
   STORER JA, 1982, J ACM, V29, P928, DOI 10.1145/322344.322346
   Sun WF, 2003, IEEE DATA COMPR CONF, P448
   TAYLOR M, 2003, RKC V1 02 PROGRAM
   Teahan WJ, 1997, IEEE DATA COMPR CONF, P12, DOI 10.1109/DCC.1997.581953
   Teahan WJ, 1996, DCC '96 - DATA COMPRESSION CONFERENCE, PROCEEDINGS, P53, DOI 10.1109/DCC.1996.488310
   TEAHAN WJ, 1998, THESIS U WAIKATO NZ
   URROWS M, 1994, 124 SRC DIG EQ CORP
   Vo BD, 2004, IEEE DATA COMPR CONF, P92
   ZIV J, 1977, IEEE T INFORM THEORY, V23, P337, DOI 10.1109/TIT.1977.1055714
   [No title captured]
NR 52
TC 27
Z9 34
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2005
VL 35
IS 15
BP 1455
EP 1476
DI 10.1002/spe.678
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 991UU
UT WOS:000233840400003
DA 2024-07-18
ER

PT J
AU Brostoff, S
   Sasse, MA
   Chadwick, D
   Cunningham, J
   Mbanaso, U
   Otenko, S
AF Brostoff, S
   Sasse, MA
   Chadwick, D
   Cunningham, J
   Mbanaso, U
   Otenko, S
TI 'R-What?' - Development of a role-based access control policy-writing
   tool for e-Scientists
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT International Workshop on Grid Security
CY JUL, 2004
CL Oxford, ENGLAND
DE policy generation; usability; RBAC user interface
AB A lightweight role-based access control policy authoring tool was developed for e-Scientists, a community for which access policies have to be implemented for an increasingly heterogeneous group of local and remote users. Two fundamental problems were identified: (1) lack of understanding of what the policy components are (i.e. how authorization policies are structured), and (2) lack of understanding of the underlying policy paradigm (i.e. what should go into the policy, and what should be left out). Conceptual design (CD) techniques were used to revise the user interface (UI) labels so that e-Scientists and developers were better able to describe access policy components from labels, and match labels with components (t = 6.28, d f = 7, p = 0.000 two-tailed). CD, instructional text, bubble help, UI behaviour and alert boxes were used to shape users' models of the policy paradigm. The final prototype improved users' efficiency and effectiveness by more than doubling the speed with which expert users could write authorization policies, and facilitating users without specialist security knowledge to overcome the policy paradigm and components problems, enabling them to complete 80 % of basic and 75 % of advanced authorization policy-writing tasks in a usability trial. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 UCL, Dept Comp Sci, London WC1E 6BT, England.
   Univ Kent, Comp Lab, Canterbury, Kent, England.
   Univ Salford, Inst Informat Syst, Salford M5 4WT, Lancs, England.
C3 University of London; University College London; University of Kent;
   University of Salford
RP UCL, Dept Comp Sci, Mortimer St, London WC1E 6BT, England.
EM sb4@ecs.soton.ac.uk
RI Sasse, Angela M/G-8628-2013
OI Chadwick, David/0000-0003-3145-055X
CR ANDERSON B, 1994, PEOPLE AND COMPUTERS IX, P179
   [Anonymous], 1999, INMATES ARE RUNNING
   [Anonymous], 2011, Handbook of usability testing: How to plan, design, and conduct effective tests
   Balfanz D, 2004, IEEE SECUR PRIV, V2, P19, DOI 10.1109/MSP.2004.71
   BRITTON D, 2004, ESC ALL HANDS C NOTT
   Chadwick DW, 2003, IEEE INTERNET COMPUT, V7, P62, DOI 10.1109/MIC.2003.1189190
   Desurvire HeatherW., 1994, Faster, Cheaper!! Are Usability Inspection Methods As Effective As Empirical Testing?, P173
   GUTMANN P, 2002, GODZILLA CRYPTO TUTO
   HUMPHREY M, 2004, 2003 UK WORKSH GRID
   LAW ELC, 2004, CHI 2004, P9
   NIELSEN J, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P206
   Nielsen J., 1994, Usability inspection methods, P25, DOI [10.5555/189200.189209, DOI 10.5555/189200.189209, DOI 10.1089/TMJ.2010.0114]
   Nielsen J., 1994, CONDUCT HEURISTIC EV
   NIELSEN J, 2000, WHY YOU NEED TEST 5
   NORMAN D, 1986, MENTAL MODELS
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   SASSE A, BT TECHNOLOGY J, V19, P122
   SCHAAD A, 2003, P 6 ACM S ACC CONTR
   Spencer R., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P353, DOI 10.1145/332040.332456
   Synder C., 2003, PAPER PROTOTYPING FA
   WHITTEN A, 1999, 9 USENIX SEC S WASH
   WOOLRYCH A, 2001, IHM HCI 2001, P105
   YEE KP, 2004, IEEE SECUR PRIV, P278
   Zurko ME, 1999, P IEEE S SECUR PRIV, P57, DOI 10.1109/SECPRI.1999.766718
NR 25
TC 11
Z9 14
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2005
VL 35
IS 9
BP 835
EP 856
DI 10.1002/spe.691
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 943CO
UT WOS:000230329800005
DA 2024-07-18
ER

PT J
AU Maurer, PM
AF Maurer, PM
TI Converting command-line applications into binary components
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE component-level design; object oriented design; command line software
AB A binary component is a separately compiled program that can be used as a part of a larger program. Binary components generally conform to an accepted technology such as JavaBeans or ActiveX, and generally support a rich program interface containing properties, methods and events. Binary components are generally used in a graphical user interface (GUI) environment. There are a number of benefits to be realized by converting command-line software into binary components. The most important of these is that GUI environments are more popular and more familiar to most people than command-line environments. Using binary components can greatly simplify a GUI implementation, to the point where it is only slightly more complicated than a typical command-line implementation. However there are benefits that go beyond mere convenience. Binary components have much richer interfaces than command-line programs. Binary components are service-oriented rather than task-oriented. A task-oriented program has a main routine that is devoted to accomplishing a single task. A service-oriented component has no main routine or main function, but instead provides a variety of services to its clients. Binary components can be easily integrated with one another, which permits a design where each major feature of an application is implemented in a different component. Such a design encourages software reuse at the component level and facilitates low-impact feature upgrades. We first delineate a design-pattern-based methodology for converting command-line programs into components. We then illustrate these principles using two projects, a simulation system for digital circuits, and a data generation system for software and hardware testing. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Baylor Univ, Dept Comp Sci, Waco, TX 76798 USA.
C3 Baylor University
RP Maurer, PM (corresponding author), Baylor Univ, Dept Comp Sci, 1 Bear Pl 97356, Waco, TX 76798 USA.
EM peter_maurer@baylor.edu
CR BOOTH TL, 1973, IEEE T COMPUT, VC 22, P442, DOI 10.1109/T-C.1973.223746
   GAMMA E, 1995, DESIGN PATTERNS
   MAURER P, 2003, COMPONENT LEVEL PROG
   MAURER PM, 1992, SOFTWARE PRACT EXPER, V22, P223, DOI 10.1002/spe.4380220303
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   MAURER PM, 1990, P SE 90, P430
   Sorzano COS, 2002, SOFTWARE PRACT EXPER, V32, P873, DOI 10.1002/spe.465
NR 7
TC 1
Z9 1
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2005
VL 35
IS 8
BP 787
EP 797
DI 10.1002/spe.659
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 941NP
UT WOS:000230221800003
DA 2024-07-18
ER

PT J
AU Lee, YF
   Chang, RC
AF Lee, YF
   Chang, RC
TI Developing dynamic-reconfigurable communication protocol stacks using
   Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic reconfiguration; dynamic software updating; protocol; Java; TCP;
   component software
AB This paper proposes the development of a dynamic-reconfigurable protocol stack, which allows the programmer to create, to remove, and to replace protocol modules during their operation. Moreover, this protocol stack also aims to preserve the module state, such as the data structures that manage the existing connections. To achieve these goals, a Java-based component framework is developed so that the programmers are able to implement their components under the proposed framework. This framework can dynamically reconfigure the components at a safe period and can help the components transfer their states, and the dynamic reconfiguration is transparent to the user application running on top of the stack. To demonstrate the component framework, a TCP component is implemented. While maintaining active connections for the user application, the TCP component is able to be dynamically replaced by another version. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Natl Chiao Tung Univ, Dept Comp & Informat Sci, Hsinchu 30050, Taiwan.
C3 National Yang Ming Chiao Tung University
RP Lee, YF (corresponding author), Natl Chiao Tung Univ, Dept Comp & Informat Sci, 1001 Ta Hsueh Rd, Hsinchu 30050, Taiwan.
EM yflee@os.nctu.edu.tw
CR ALMEIDA JPA, 2001, THESIS U TWENTE NETH
   ANANTHASWAMY A, 1995, DATA COMMUNICATION O
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1981, 793 RFC IETF
   Archer T., 2002, INSIDE C, VVolume 1
   ARNOLD B, 2000, JAVA PROGRAMMING LAN
   BLOOM T, 1983, THESIS MIT LAB COMPU
   Clark D. D., 1985, P 10 ACM S OP SYST P, P171
   Dunkels A., 2001, "Design and Implementation of the lwIP TCP/IP Stack
   *ESTI, 2004, MOB RAD INT LAYER 3
   FERBER J, 1989, P C OBJ OR PROGR SYS, P317
   GOUDARZI KM, 1999, THESIS IMPERIAL COLL
   HOFMEISTER C, 1992, P IEEE INT C CONF DI
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   KRAMER J, 1985, IEEE T SOFTWARE ENG, V11, P424, DOI 10.1109/TSE.1985.232231
   KRASNYANSKY M, 2004, UNIVERSAL TUN TAP DR
   Krupczak B, 1998, IEEE INFOCOM SER, P765, DOI 10.1109/INFCOM.1998.665099
   Liang S., 1999, Java native interface: programmers guide and reference, V1
   Maes Pattie:., 1987, COMPUTATIONAL REFLEC
   MAGEE J, 1993, SOFTWARE ENG J, V8, P73, DOI 10.1049/sej.1993.0011
   Plagemann T., 1993, Proceedings 1993 International Conference on Network Protocols, P106, DOI 10.1109/ICNP.1993.340927
   Richard Stevens W., 1999, UNIX network programming, V2
   Ritchie D.M., 1984, ATT BELL LAB TECHNIC, V63, P311
   ROSE M, 2001, 3080 RFC
   SCHMIDT DC, 1993, J CONCURRENCY PRACTI, V5, P269
   *SUN MICR, 1997, JAV COR REFL
   *SUN MICR, 2001, JAV OBJ SER SPEC REV
   Warren I, 1996, THIRD INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P81, DOI 10.1109/CDS.1996.509349
   ZITTERBART M, 1993, IEEE J SEL AREA COMM, V11, P507, DOI 10.1109/49.221198
NR 29
TC 5
Z9 6
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2005
VL 35
IS 6
BP 601
EP 620
DI 10.1002/spe.650
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 923JN
UT WOS:000228906300005
DA 2024-07-18
ER

PT J
AU Zimmermann, R
   Shahabi, C
   Fu, K
   Yao, SYD
AF Zimmermann, R
   Shahabi, C
   Fu, K
   Yao, SYD
TI Scalability evaluation of the <i>Yima</i> streaming media architecture
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE streaming media; continuous media; multimedia servers
ID SERVER; SYSTEM
AB Over the last decade research has been pursued on all aspects of streaming media. While many theoretical results have been reported in the literature, few performance results of large-scale systems have been published. In this report we specifically explore the scalability aspects of our Yima streaming media architecture in an end-to-end test environment. With Yima, it was our goal to design and implement an architecture that would scale in performance from small to large systems. Some of the design features include (1) a multi-node cluster architecture based on commodity hardware and custom software, (2) media type independence (support ranges from 500 Kb s(-1) MPEG-4 to 45 Mb s(-1) HDTV, at both variable and constant bitrates), (3) fine-grained online scale up/down capabilities, and (4) a client-controlled rate smoothing protocol. We briefly discuss the design and implementation of these capabilities of Yima and then thoroughly evaluate its scalability through several sets of experiments. Our results show that Yima scales linearly (within the range of our test parameters) as a function of the cluster size and also as a function of available resources such as network bandwidth and CPU performance. Copyright (c) 2004 John Wiley & Sons, Ltd.
C1 Univ So Calif, Integrated Media Syst Ctr, Los Angeles, CA 90089 USA.
   Univ So Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
C3 University of Southern California; University of Southern California
RP Univ So Calif, Integrated Media Syst Ctr, Los Angeles, CA 90089 USA.
EM rzimmerm@imsc.usc.edu
RI Zimmermann, Roger/D-7944-2015; Wang, Ling/AGR-4917-2022; Shahabi,
   Cyrus/C-5199-2014
OI Zimmermann, Roger/0000-0002-7410-2590; Wang, Ling/0000-0003-0272-2974;
   Shahabi, Cyrus/0000-0001-9118-0681
CR BOLOSKY WJ, 1996, 6 WORKSH NETW OP SYS
   Dempsey BJ, 1996, COMPUT NETWORKS ISDN, V28, P719, DOI 10.1016/0169-7552(95)00051-8
   Ghandeharizadeh S, 1997, MULTIMED TOOLS APPL, V5, P79, DOI 10.1023/A:1009690011119
   GHANDEHARIZADEH S, 1997, P MULT COMP NETW 199, P144
   Goel A, 2002, PROC INT CONF DATA, P473, DOI 10.1109/ICDE.2002.994760
   HSIEH JW, 1995, J PARALLEL DISTR COM, V30, P147, DOI 10.1006/jpdc.1995.1134
   Hwang K., 1998, Scalable Parallel computing
   LAURSEN O, 1994, P ACM SIGMOD INT C M, P470
   MARTIN C, 1996, MULTIMEDIA INFORMATI, pCH5
   MUNTZ R, 1997, ACM PERFORMANCE EVAL, V25, P29
   Santos JR, 2000, PERF E R SI, V28, P44, DOI 10.1145/345063.339352
   SANTOS JR, 1998, ACM MULT C BRIST UK
   Seltzer M., 1990, Proceedings of the Winter 1990 USENIX Conference, P313
   Shahabi C, 2002, IEEE T PARALL DISTR, V13, P710, DOI 10.1109/TPDS.2002.1019860
   Shahabi C, 2002, IEEE T KNOWL DATA EN, V14, P447, DOI 10.1109/69.991729
   Shahabi C, 2002, COMPUTER, V35, P56, DOI 10.1109/MC.2002.1009169
   Shahabi C, 2000, MULTIMED TOOLS APPL, V11, P129, DOI 10.1023/A:1009629517590
   SHAHABI C, 2003, HDB VIDEO DATABASES, pCH32
   SHAHABI C, 1999, P INT WORKSH MULT IN
   Shahabi C., 2003, VLDB 1 BIENN C INN D
   TOBAGI F, 1993, 1 ACM C MULT AUG 199
   Zimmermann R, 2004, IEEE MULTIMEDIA, V11, P48, DOI 10.1109/MMUL.2004.1289041
   Zimmermann R, 1997, ACM MULTIMEDIA 97, PROCEEDINGS, P227, DOI 10.1145/266180.266374
   ZIMMERMANN R, 2001, VLDB 2001 WORKSH DAT
   ZIMMERMANN R, IN PRESS KLUER MULTI
   ZIMMERMANN R, IN PRESS SPIE J ELEC
   ZIMMERMANN R, 2000, P 2000 INT C PAR DIS
   ZIMMERMANN R, 2004, IEEE T MULTIMEDI DEC
   ZIMMERMANN R, 2003, P SPIE C MULT COMP N
   ZIMMERMANN R, 2003, P 5 INT C ENT INF SY
   [No title captured]
NR 31
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2005
VL 35
IS 4
BP 345
EP 359
DI 10.1002/spe.639
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 911UA
UT WOS:000228029500003
DA 2024-07-18
ER

PT J
AU Ramos, JR
   Rego, V
AF Ramos, JR
   Rego, V
TI Efficient implementation of multiprocessor scheduling algorithms on a
   simulation testbed
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE process-oriented; simulation; round-robin; threads; multiprocessor;
   scheduling
AB A layered and modular approach to implementing a process-oriented simulator testbed is described. The simulation kernel is supported by a threads library and is, in turn, capable of supporting distinct domains or application areas for various applications. The testbed offers an implementation methodology for testing novel simulation algorithms at the domain level, without interfacing with the kernel. To demonstrate its utility, a novel algorithm for simulating multiprocessing with round-robin scheduling is presented. The algorithm is more complex than the naive round-robin implementation in use, but offers significant performance improvement. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 Purdue University System; Purdue University
RP Ramos, JR (corresponding author), Purdue Univ, Dept Comp Sci, 250 N Univ St, W Lafayette, IN 47907 USA.
EM jrramos@cs.purdue.edu
CR Evans J.B., 1988, STRUCTURES DISCRETE
   Franta W.R., 1977, PROCESS VIEW SIMULAT
   *IEEE, 1995, 1003 POSIX API
   MACDOUGALL, 1987, SIMULATING COMPUTER
   Mascarenhas E, 1997, PROCEEDINGS OF THE 1997 WINTER SIMULATION CONFERENCE, P389, DOI 10.1145/268437.268514
   Mascarenhas E, 1996, SOFTWARE PRACT EXPER, V26, P327, DOI 10.1002/(SICI)1097-024X(199603)26:3<327::AID-SPE12>3.0.CO;2-H
   RAMOS JR, 2002, EFFICIENT BURST ARRI
   SANG J, 1994, SOFTWARE PRACT EXPER, V24, P485, DOI 10.1002/spe.4380240505
   SCHWETMAN H, 1986, P 1986 WINT SIM C, P387
   *SUN MICR INC, 1997, MULT PROGR GUID
NR 10
TC 0
Z9 0
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2005
VL 35
IS 1
BP 27
EP 50
DI 10.1002/spe.625
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 884HO
UT WOS:000226075700003
DA 2024-07-18
ER

PT J
AU Yu, YJ
   Lu, JG
   Mylopoulos, J
   Sun, WW
   Xue, JH
   D'Hollander, EH
AF Yu, YJ
   Lu, JG
   Mylopoulos, J
   Sun, WW
   Xue, JH
   D'Hollander, EH
TI Making XML document markup international
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE eXtensible Markup Language (XML); localization (110n) and
   internationalization (il8n); eXtensible Stylesheet Language
   Transformations (XSLT); programming and documentation languages; markup;
   transformation
AB In name and in practice, the World-Wide Web (hereafter Web) is used around the World beyond English-speaking areas. This creates a tremendous need to internationalize standard terminology used in the technologies that make the Web possible. Existing efforts on XML internationalization (i18n) and localization (i10n) have focused on the content of XML documents instead of the terms used in markup (annotations) such as elements and attributes. The SGML standard ISO 8879 supports the use of Unicode (ISO 10646) throughout a document, including markups. However, most elements and attributes of XML documents are still defined in English, thereby limiting their use among non-English speakers. This paper presents an XSLT-based method that can completely localize the markup of XML documents into different natural languages. We also describe how the proposed technique can be applied to translation problems in programming (e.g. C and Java) or documentation (e.g. IAT(E)X or other formatting languages) so that a program or a document can be converted to and from an XML format. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Toronto, Dept Comp Sci, Toronto, ON M5S 2E4, Canada.
   Univ Windsor, Windsor, ON N9B 3P4, Canada.
   Fudan Univ, Shanghai 200433, Peoples R China.
   Univ Bern, CH-3010 Bern, Switzerland.
   State Univ Ghent, B-9000 Ghent, Belgium.
C3 University of Toronto; University of Windsor; Fudan University;
   University of Bern; Ghent University
RP Univ Toronto, Dept Comp Sci, 40 St George St, Toronto, ON M5S 2E4, Canada.
EM yijun@cs.toronto.edu
OI Yu, Yijun/0000-0002-7154-8570
CR [Anonymous], XHTML ESSENTIALS
   *ANSI C, 1989, X3159 ANSI C
   Bray T., 1997, WORLD WIDE WEB J, V2, P29
   CASELLAS R, 2002, DOCBOOK LATEX2E CONV
   CLARK J, 1998, WORLD WIDE WEB CONSO
   DONNELLY C, 2000, BISON MANUAL USING Y
   FLYNN P, 1995, MAKING MORE USE MARK
   GOOSENS M, 1999, LATEX WEB COMPANION
   Gorman IE, 1996, DR DOBBS J, V21, P86
   LEMBERG W, 1997, J TUGBOAT, V18, P214
   MAMAS E, 2001, REENGINEERING TOOL K
   Walsh N., 1999, DocBook: The Definitive Guide
   YU Y, 2002, YACC EXTENSION XML
NR 13
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2005
VL 35
IS 1
BP 1
EP 14
DI 10.1002/spe.621
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 884HO
UT WOS:000226075700001
OA Green Published
DA 2024-07-18
ER

PT J
AU Leal, JP
   Silva, F
AF Leal, JP
   Silva, F
TI Mooshak: a Web-based multi-site programming contest system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web application; contest management; program evaluation; automatic
   judging
AB This paper presents a new Web-based system, Mooshak, to handle programming contests. The system acts as a full contest manager as well as an automatic judge for programming contests. Mooshak innovates in a number of aspects: it has a scalable architecture that can be used from small single server contests to complex multi-site contests with simultaneous public online contests and redundancy; it has a robust data management system favoring simple procedures for storing, replicating, backing up data and failure recovery using persistent objects; it has automatic judging capabilities to assist human judges in the evaluation of programs; it has built-in safety measures to prevent users from interfering with the normal progress of contests. Mooshak is an open system implemented on the Linux operating system using the Apache HTTP server and the TcI scripting language.
   This paper starts by describing the main features of the system and its architecture with reference to the automated judging, data management based on the replication of persistent objects over a network. Finally, we describe our experience using this system for managing two official programming contests. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Porto, DCC, FC, LIACC, P-4150180 Oporto, Portugal.
C3 Universidade do Porto
RP Leal, JP (corresponding author), Univ Porto, DCC, FC, LIACC, Rua Campo Alegre 823, P-4150180 Oporto, Portugal.
RI Silva, Fernando/HKW-3350-2023; Leal, José Paulo/C-6071-2009; Silva,
   Fernando/ABD-2062-2020; Ih, Ahahah/K-2338-2015; Silva,
   Fernando/C-5986-2009; INESC-TEC, CRACS/F-7527-2012
OI Leal, José Paulo/0000-0002-8409-0300; Ih, Ahahah/0000-0003-2851-0400;
   Silva, Fernando/0000-0001-8411-7094; 
CR [Anonymous], The ACM-ICPC International Collegiate Programming Contest
   [Anonymous], 2008, OPEN SOURCE INITIATI
   *CAL STAT U, PROGR CONT CONTR SYS
   *U PORT, 2001 SW REG ACM PROG
   ONLINE JUDGE U VALLA
   MARATONA INTERUNIVER
   NETWORK TIME SYNCHRO
   GANESH LEARNING ENV
   TCL DEV XCHANGE
   URAL U PROBLEM SET A
NR 10
TC 71
Z9 80
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2003
VL 33
IS 6
BP 567
EP 581
DI 10.1002/spe.522
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 675MH
UT WOS:000182698700004
DA 2024-07-18
ER

PT J
AU Sankranti, S
   Marjorie, SR
AF Sankranti, Sivaiah
   Marjorie, S. Roji
TI Designing power-efficient SRAM cells with SGFinFETs using LECTOR
   technique
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE leakage control transistor; LECTOR technique; leakage current and delays
   FinFETs NMOS transistor
AB Static random-access memory (SRAM) plays a vital component of digital systems. The main issue of SRAM cells is power leakage, which results in an increase in chip area. Therefore this manuscript proposes a shorted-gate fin-type field-effect transistor based SRAM cell utilizing leakage control transistor technique (SGFinFETs-SRAM-LECTOR) for decreasing the leakage power delay by improving the static noise margins (SNMs) together with power delay product (PDP). Here, the SGFinFETs-SRAM-LECTOR is primarily applied to stacking enhancement for lessening the leakage power dissipation (LPD). Two more transistors are used in LECTOR for reducing the leakage current with delay, which is based on transistor stacking. LECTOR employs two more transistors that are connected in series between pull-up and pull-down networks that means additional SG FinFETs PMOS transistor insertions amongst the pull-up network and output terminal, additional SG FinFETs NMOS transistor insertions amidst the pull down network and output terminal. These additional transistors can decrease the leakage current. The simulation of the proposed approach is implemented in HSPICE simulation tool. Some metrics are computed to validate the efficacy of the proposed approach. Finally, the proposed technique reaches 11.31%, 51.47%, 45.46% less read delay, 44.44%, 26.33%, 33.45% less write delay, 36.12%, 45.28%, 26.45% less read power, 34.5%, 33.56%, 22.41% less write power, 37.4%, 15.3%, 26.54% high read SNM, 33.67%, 35.8%,12.09% high write SNM when analyzed to the existing models.
C1 [Sankranti, Sivaiah] SIMATS, Saveetha Sch Engn, Dept Elect & Commun Engn, Thandalam, Tamil Nadu, India.
   [Marjorie, S. Roji] SRM Inst Sci & Technol, Dept Elect & Commun Engn, Kattankulathur, Tamil Nadu, India.
C3 Saveetha Institute of Medical & Technical Science; Saveetha School of
   Engineering; SRM Institute of Science & Technology Chennai
RP Sankranti, S (corresponding author), SIMATS, Saveetha Sch Engn, Dept Elect & Commun Engn, Thandalam, Tamil Nadu, India.
EM sivasankranthi@gmail.com
CR Abbasian E, 2022, CIRC SYST SIGNAL PR, V41, P3081, DOI 10.1007/s00034-021-01950-z
   Abbasian E, 2022, SILICON-NETH, V14, P6909, DOI 10.1007/s12633-021-01432-6
   Agarwal Samarth, 2022, Artificial Intelligence Driven Circuits and Systems: Select Proceedings of ISED 2021. Lecture Notes in Electrical Engineering (811), P65, DOI 10.1007/978-981-16-6940-8_6
   Asli RN, 2020, MICROELECTRON RELIAB, V104, DOI 10.1016/j.microrel.2019.113545
   Birla S, 2021, CIRCUIT WORLD, V47, P97, DOI 10.1108/CW-12-2019-0195
   Champac V, 2021, J ELECTRON TEST, V37, P369, DOI 10.1007/s10836-021-05955-z
   Chen RM, 2022, IEEE T VLSI SYST, V30, P432, DOI 10.1109/TVLSI.2022.3146125
   Copetti T, 2020, J ELECTRON TEST, V36, P271, DOI 10.1007/s10836-020-05869-2
   Gopinath A, 2022, MATER TODAY-PROC, V57, P368, DOI 10.1016/j.matpr.2021.10.327
   Gupta S, 2021, IEEE T CIRCUITS-I, V68, P5038, DOI 10.1109/TCSI.2021.3110484
   Karamimanesh M, 2021, MICROELECTRON J, V118, DOI 10.1016/j.mejo.2021.105185
   Kaur G, 2021, TRANS ELECTR ELECTRO, V22, P774, DOI 10.1007/s42341-021-00296-2
   Kumar GS, 2023, J CIRCUIT SYST COMP, V32, DOI 10.1142/S0218126623500032
   Kumar GS., 2022, EFFICIENT 5 TRANSIST
   Kumar TS, 2022, SILICON-NETH, V14, P5213, DOI 10.1007/s12633-021-01290-2
   Kumar TS, 2021, WIRELESS PERS COMMUN, V116, P1837, DOI 10.1007/s11277-020-07765-6
   Mahmoodi E, 2020, INTEGRATION, V75, P52, DOI 10.1016/j.vlsi.2020.06.006
   Maurya RK, 2022, SILICON-NETH, V14, P5783, DOI 10.1007/s12633-021-01366-z
   Mohammed MU, 2021, MICROELECTRON J, V114, DOI 10.1016/j.mejo.2021.105116
   Mushtaq U., 2022, AUSTR J ELECT ELECT, V1-2
   Narayana YV., 2022, SUSTAIN COMPUT-INFOR, V35
   Pown M, 2020, IEEE J ELECTRON DEVI, V8, P1397, DOI 10.1109/JEDS.2020.3002265
   Rajesh P, 2022, ISA T, V130, P253, DOI 10.1016/j.isatra.2022.03.017
   Rajesh P., 2020, Eur J Electr Eng, V22, P224, DOI [10.18280/ejee.224-509, DOI 10.18280/EJEE.224-509]
   Rao MVN, 2023, J ELECTR COMPUT ENG, V2023, DOI 10.1155/2023/7069746
   Raushan RK, 2021, TRANS ELECTR ELECTRO, V22, P328, DOI 10.1007/s42341-020-00243-7
   Shajin FH, 2022, CIRC SYST SIGNAL PR, V41, P1775, DOI 10.1007/s00034-021-01882-8
   Shajin FH, 2023, SOFT COMPUT, V27, P12457, DOI 10.1007/s00500-023-07891-w
   Sharma Deepika, 2021, Micro-Electronics and Telecommunication Engineering. Proceedings of 4th ICMETE 2020. Lecture Notes in Networks and Systems (LNNS 179), P9, DOI 10.1007/978-981-33-4687-1_2
   Sharma D, 2022, INT J ELECTRON, V109, P2053, DOI 10.1080/00207217.2021.2001868
   Vadthiya N, 2020, AEU-INT J ELECTRON C, V127, DOI 10.1016/j.aeue.2020.153459
NR 31
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2024
VL 54
IS 5
BP 704
EP 720
DI 10.1002/spe.3293
EA DEC 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NB0V3
UT WOS:001114921900001
DA 2024-07-18
ER

PT J
AU Akbar, MA
   Khan, AA
   Islam, N
   Mahmood, S
AF Akbar, Muhammad Azeem
   Khan, Arif Ali
   Islam, Najmul
   Mahmood, Sajjad
TI DevOps project management success factors: A decision-making framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE empirical investigations; DevOps; project management; success factors
ID SYSTEMATIC LITERATURE; PROCESS IMPROVEMENT; SOFTWARE; IMPLEMENTATION;
   DEPLOYMENT; TOOLS; MODEL
AB Development and operations (DevOps) refer to the collaboration and multidisciplinary organizational effort to automate continuous delivery of information systems (IS) development project with an aim to improve the quality of the IS. The flexibility and quality production of software projects motivated the organizations to adopt DevOps paradigm. Organizations face several complexities while management of DevOps process. This study aims to explore and analyze the factors that could positively impact the management of DevOps process. Firstly, literature review was performed and identified 36 success factors that are related to 10 knowledge areas of DevOps project management. Secondly, a questionnaire survey study was conducted to get the insight of industry experts concerning the success factors of DevOps project. Finally, the fuzzy-AHP was applied for ranking the success factors and examining the relationship between 10 knowledge areas of identified success factors. The results of this study will serve as a body of knowledge for researchers and practitioners to consider the highest priority success factors and develop the effective policies for the successful execution of DevOps project management.
C1 [Akbar, Muhammad Azeem; Islam, Najmul] LUT Univ, Dept Software Engn, Lappeenranta, Finland.
   [Khan, Arif Ali] Univ Oulu, Empir Software Engn Res Unit M3S, Oulu, Finland.
   [Mahmood, Sajjad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
   [Mahmood, Sajjad] King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran, Saudi Arabia.
C3 Lappeenranta-Lahti University of Technology LUT; University of Oulu;
   King Fahd University of Petroleum & Minerals; King Fahd University of
   Petroleum & Minerals
RP Akbar, MA (corresponding author), LUT Univ, Dept Software Engn, Lappeenranta, Finland.
EM azeem.akbar@lut.fi
RI Khan, Arif Ali/ABG-2862-2020
OI Khan, Arif Ali/0000-0002-8479-1481
FU Software Engineering group of LUT University, Finland
FX The work is supported by Software Engineering group of LUT University,
   Finland.
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Akbar MA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2264
   Akbar MA, 2019, J COMPUT LANG, V51, P112, DOI 10.1016/j.cola.2018.12.005
   Akbar MA, 2018, IEEE ACCESS, V6, P8066, DOI 10.1109/ACCESS.2018.2805702
   Akbari M, 2020, SN APPL SCI, V2, DOI 10.1007/s42452-020-03437-z
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   Altman D., 2013, Statistics with Confidence: Confidence Intervals and Statistical Guidelines, V2nd edition
   Angara J, 2020, CYBERN INF TECHNOL, V20, P79, DOI 10.2478/cait-2020-0018
   Ayhan MB., 2013, FUZZY AHP APPROACH S
   Banica Logica, 2017, Informatica Economica, V21, P39, DOI 10.12948/issn14531305/21.3.2017.04
   Batra P, 2020, 2020 INTERNATIONAL CONFERENCE ON COMPUTATIONAL PERFORMANCE EVALUATION (COMPE-2020), P757, DOI 10.1109/ComPE49325.2020.9200149
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Bozbura FT, 2007, EXPERT SYST APPL, V32, P1100, DOI 10.1016/j.eswa.2006.02.006
   Bucena I., 2017, BIR WORKSH
   Callanan M, 2016, IEEE SOFTWARE, V33, P53, DOI 10.1109/MS.2016.66
   Casey K., 2017, RETHINK PROJECT MANA
   Chamodrakas I, 2010, EXPERT SYST APPL, V37, P490, DOI 10.1016/j.eswa.2009.05.043
   Chang DY, 1996, EUR J OPER RES, V95, P649, DOI 10.1016/0377-2217(95)00300-2
   Chen HM, 2015, SYM REL DIST SYST, P25, DOI 10.1109/SRDSW.2015.14
   Cheng EWL, 2002, J MANAGE ENG, V18, P194, DOI 10.1061/(ASCE)0742-597X(2002)18:4(194)
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   Crawford J.K., 2014, PROJECT MANAGEMENT M
   Dyck A, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P3, DOI 10.1109/RELENG.2015.10
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Erich F., 2014, Report: DevOps literature review
   Erich F., 2014, TECH REP REPORT DEVO
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Filippetto Alexsandro, 2020, International Journal of Agile Systems and Management, V13, P296
   Finstad K, 2010, J USABILITY STUD, V5, P104
   Gall M, 2022, EUR J INFORM SYST, V31, P548, DOI 10.1080/0960085X.2021.1997100
   GARRISON HH, 1992, SCIENTOMETRICS, V24, P359, DOI 10.1007/BF02017915
   Gill AQ, 2018, VINE J INF KNOWL MAN, V48, P122, DOI 10.1108/VJIKMS-02-2017-0007
   Guide A., 2001, PROJECT MANAGEMENT I
   Gupta V, 2017, INFORM SOFTWARE TECH, V92, P75, DOI 10.1016/j.infsof.2017.07.010
   Hasselbring W, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P123, DOI 10.1109/ICSA-C.2019.00029
   Hayajneh S, 2020, RECENT ADV COMP SCI, V13, P454, DOI DOI 10.2174/2213275912666190429154641
   Hemon A, 2020, INFORM SYST FRONT, V22, P927, DOI 10.1007/s10796-019-09905-1
   Hemon-Hildgen A, 2020, EUR J INFORM SYST, V29, P474, DOI 10.1080/0960085X.2020.1782276
   Huynh QT, 2020, INT J INF TECHNOL PR, V11, P77, DOI 10.4018/IJITPM.2020070105
   Islam S., 2020, INT J ENG MAT MANUF, V5, P76, DOI 10.26776/ijemm.05.03.2020.02
   Jabbari R., 2016, P SCI WORKSH P XP201, P1
   Jabbari R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1957
   Jones C., 2004, CrossTalk:The Journal of Defense Software Engineering, P5
   Keshta I, 2017, IEEE ACCESS, V5, P24162, DOI 10.1109/ACCESS.2017.2764490
   Khan AA, 2021, APPL SOFT COMPUT, V102, DOI 10.1016/j.asoc.2021.107090
   Khan AA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2242
   Khan AA, 2018, IET SOFTW, V12, P333, DOI 10.1049/iet-sen.2018.0010
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Khan M.O., 2020, INDIAN J SCI TECHNOL, V13, P552, DOI [DOI 10.17485/ijst/2020/v13i05/148983, 10.17485/ijst/2020/v13i5/148983]
   Khan SU., 2011, SOFTWARE OUTSOURCING
   Kitchenham B., 2002, ACM SIGSOFT Softw. Eng. Notes, V27, P17
   Lam K., 1998, INT J QUAL RELIAB MA, V15, P389, DOI [10.1108/02656719810196351, DOI 10.1108/02656719810196351, rg/10.1108/02656719810196351]
   Layton M C., 2020, Agile project management for dummies
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Lenarduzzi V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P112, DOI 10.1109/SEAA.2016.56
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   Luz WP, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.083
   Mahmood S, 2017, INFORM SOFTWARE TECH, V91, P102, DOI 10.1016/j.infsof.2017.06.009
   Masombuka T, 2018, ACM INT CONF PR SER, P279, DOI 10.1145/3278681.3278714
   Mohammad S. M., 2017, International Journal of Creative Research Thoughts, V5, P2320
   Mufti Y, 2018, IEEE ACCESS, V6, P28611, DOI 10.1109/ACCESS.2018.2840322
   Munoz Mirna, 2019, New Knowledge in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 930), P666, DOI 10.1007/978-3-030-16181-1_63
   Niazi M, 2016, INT J PROJ MANAG, V34, P1553, DOI 10.1016/j.ijproman.2016.08.008
   Niazi M, 2015, IET SOFTW, V9, P135, DOI 10.1049/iet-sen.2014.0130
   Niazi M, 2015, ARAB J SCI ENG, V40, P845, DOI 10.1007/s13369-015-1586-0
   Niazi M, 2012, J SOFTW-EVOL PROC, V24, P877, DOI 10.1002/smr.543
   Nielsen PA., 2017, BIR WORKSH
   Patten M., 2016, Questionnaire research: A practical guide
   Puska A., 2020, Operat Res Eng Sci Theory Appl., V3, P89, DOI DOI 10.31181/ORESTA2001089P
   Rafi Saima, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P457, DOI 10.1145/3383219.3383285
   Riungu-Kalliosaari L, 2016, LECT NOTES COMPUT SC, V10027, P590, DOI 10.1007/978-3-319-49094-6_44
   Roche J, 2013, COMMUN ACM, V56, P38, DOI 10.1145/2524713.2524721
   Sanchez-Gordon M., 2018, SOFTWARE PROCESS IMP, V918, P3, DOI [DOI 10.1007/978-3-030-00623-5_1, https://doi.org/10.1007/978-3-030-00623-5_1]
   Senapathi M., 2018, ser. EASE'18, P57
   Shahin M, 2017, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2017.18
   Shameem M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1979
   Siegel S., 1956, NONPARAMETRIC STASTI
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Stray V, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P7007
   Team SU., 2001, CMUSEI2001TR034 TEAM
   Teixeira D, 2020, INT J HUM CAP INF TE, V11, P1, DOI 10.4018/IJHCITP.2020070101
   Trewin D., 2002, Small business in Australia (ABS catalogue no. 1321.0)
   Viadiu FM, 2006, INT J OPER PROD MAN, V26, P141, DOI 10.1108/01443570610641648
   Vrchota J, 2021, SUSTAINABILITY-BASEL, V13, DOI 10.3390/su13010281
   Wiedemann A, 2020, EUR J INFORM SYST, V29, P458, DOI 10.1080/0960085X.2020.1782277
   Wiedemann A, 2019, COMMUN ACM, V62, P44, DOI 10.1145/3331138
   Wong JKW, 2008, BUILD ENVIRON, V43, P108, DOI 10.1016/j.buildenv.2006.11.019
   Zadeh L.A., 1996, Fuzzy Sets, Fuzzy Logic, and Fuzzy Systems: Selected Papers, V6
   Garcia FAZ, 2019, RBGN-REV BRAS GEST N, V21, P970, DOI 10.7819/rbgn.v21i5.4028
   Zhou H, 2019, SOFTWARE PRACT EXPER, V49, P1421, DOI 10.1002/spe.2741
NR 92
TC 0
Z9 0
U1 12
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2024
VL 54
IS 2
BP 257
EP 280
DI 10.1002/spe.3269
EA SEP 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL7E2
UT WOS:001067473000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Dusi, M
   Lamperti, G
AF Dusi, Michele
   Lamperti, Gianfranco
TI Quick Subset Construction
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE determinization; finite automata; inward-oriented determinization;
   nondeterminism; subset construction
ID DISCRETE-EVENT SYSTEMS; INCREMENTAL DETERMINIZATION; FAILURE DIAGNOSIS;
   AUTOMATA; DIAGNOSABILITY; MINIMIZATION
AB A finite automaton can be either deterministic (DFA) or nondeterministic (NFA). An automaton-based task is in general more efficient when performed with a DFA rather than an NFA. For any NFA there is an equivalent DFA that can be generated by the classical Subset Construction algorithm. When, however, a large NFA may be transformed into an equivalent DFA by a series of actions operating directly on the NFA, Subset Construction may be unnecessarily expensive in computation, as a (possibly large) deterministic portion of the NFA is regenerated as is, a waste of processing. This is why a conservative algorithm for NFA determinization is proposed, called Quick Subset Construction, which progressively transforms an NFA into an equivalent DFA instead of generating the DFA from scratch, thereby avoiding unnecessary processing. Quick Subset Construction is proven, both formally and empirically, to be equivalent to Subset Construction, inasmuch it generates exactly the same DFA. Experimental results indicate that, the smaller the number of repair actions performed on the NFA, as compared to the size of the equivalent DFA, the faster Quick Subset Construction over Subset Construction.
C1 [Dusi, Michele; Lamperti, Gianfranco] Univ Brescia, Dept Informat Engn, Brescia, Italy.
   [Lamperti, Gianfranco] Univ Brescia, Dept Informat Engn, Via Branze 38, I-25123 Brescia, Italy.
C3 University of Brescia; University of Brescia
RP Lamperti, G (corresponding author), Univ Brescia, Dept Informat Engn, Via Branze 38, I-25123 Brescia, Italy.
EM gianfranco.lamperti@unibs.it
OI Dusi, Michele/0000-0002-6564-3096; LAMPERTI, Gian
   Franco/0000-0002-1915-6932
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Almeida M, 2014, RAIRO-THEOR INF APPL, V48, P173, DOI 10.1051/ita/2013045
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], 1971, Theory of Machines and Computations, DOI DOI 10.1016/B978-0-12-417750-5.50022-1
   Baier C, 2009, LECT NOTES COMPUT SC, V5556, P43, DOI 10.1007/978-3-642-02930-1_4
   Bairoch A, 2000, NUCLEIC ACIDS RES, V28, P45, DOI 10.1093/nar/28.1.45
   Benveniste A, 2003, IEEE T AUTOMAT CONTR, V48, P714, DOI 10.1109/TAC.2003.811249
   BRAVE Y, 1993, IEEE T AUTOMAT CONTR, V38, P1803, DOI 10.1109/9.250558
   Broda S, 2014, THEOR COMPUT SCI, V528, P85, DOI 10.1016/j.tcs.2014.02.013
   Brognoli S, 2016, COMPUT J, V59, P1872, DOI 10.1093/comjnl/bxw044
   Brzozowski J.A., 1962, Microwave Research Institute Symposia Series, V12, P529
   Cassandras C.G., 2008, INTRO DISCRETE EVENT, DOI DOI 10.1007/978-0-387-68612-7
   Cerutti S, 2007, SOFTWARE PRACT EXPER, V37, P365, DOI 10.1002/spe.773
   Dusi Michele, 2020, Intelligent Decision Technologies. Proceedings of the 12th KES International Conference on Intelligent Decision Technologies (KES-IDT 2020). Smart Innovation, Systems and Technologies (SIST 193), P49, DOI 10.1007/978-981-15-5925-9_5
   Friedl J.E.F., 2006, Mastering Regular Expressions, V3rd Edn.
   Hamscher W., 1992, READINGS MODEL BASED
   Hopcroft J. E., 2006, INTRO AUTOMATA THEOR
   Lamperti G, 2002, ARTIF INTELL, V137, P91, DOI 10.1016/S0004-3702(02)00123-6
   Lamperti G., 2018, Introduction to Diagnosis of Active Systems, DOI DOI 10.1007/978-3-319-92733-6
   Lamperti G, 2020, J ARTIF INTELL RES, V69, P1473
   Lamperti G, 2020, SOFTWARE PRACT EXPER, V50, P335, DOI 10.1002/spe.2776
   Lamperti G, 2016, SOFTWARE PRACT EXPER, V46, P513, DOI 10.1002/spe.2309
   Lamperti G, 2013, AI COMMUN, V26, P373, DOI 10.3233/AIC-130574
   Moore E.F., 1956, Automata studies, P129
   Pencolé Y, 2005, ARTIF INTELL, V164, P121, DOI 10.1016/j.artint.2005.01.002
   Qiu WB, 2006, IEEE T SYST MAN CY A, V36, P384, DOI 10.1109/TSMCA.2005.853503
   RABIN MO, 1959, IBM J RES DEV, V3, P114, DOI 10.1147/rd.32.0114
   REVUZ D, 1992, THEOR COMPUT SCI, V92, P181, DOI 10.1016/0304-3975(92)90142-3
   Sampath M, 1998, IEEE T AUTOMAT CONTR, V43, P908, DOI 10.1109/9.701089
   Sampath M, 1996, IEEE T CONTR SYST T, V4, P105, DOI 10.1109/87.486338
   Su R, 2005, IEEE T AUTOMAT CONTR, V50, P1923, DOI 10.1109/TAC.2005.860291
   Thorsley D, 2005, IEEE T AUTOMAT CONTR, V50, P476, DOI 10.1109/TAC.2005.844722
   Watson B., 1995, TAXONOMY FINITE AUTO, V93/44
   Watson B. W., 2003, Natural Language Engineering, V9, P49, DOI 10.1017/S1351324903003127
   Watson B. W., 1999, Automata Implementation. Third International Workshop on Implementing Automata, WIA'98. Revised Papers (Lecture Notes in Computer Science Vol.1660), P121
   Watson Bruce W., 2003, Grammars and Automata for String Processing: From Mathematics and Computer Science to Biology, and Back, P189
   Wonham W. M., 2019, Supervisory Control of Discrete-Event Sys-tems
   Yoo TS, 2002, IEEE T AUTOMAT CONTR, V47, P1491, DOI 10.1109/TAC.2002.802763
NR 38
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2023
VL 53
IS 11
BP 2092
EP 2132
DI 10.1002/spe.3246
EA AUG 2023
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U0UL3
UT WOS:001041210000001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Richmond, P
   Chisholm, R
   Heywood, P
   Chimeh, MK
   Leach, M
AF Richmond, Paul
   Chisholm, Robert
   Heywood, Peter
   Chimeh, Mozhgan Kabiri
   Leach, Matthew
TI FLAME GPU 2: A framework for flexible and performant agent based
   simulation on GPUs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agent based modelling; GPUs; large scale simulation
AB Agent based modelling (ABM) offers a powerful abstraction for scientific study in a broad range of domains. The use of agent based simulators encourages good software engineering design such as separation of concerns, that is, the uncoupling of the model description from its implementation detail. A major limitation in current approaches to ABM simulation is that of the trade off between simulator flexibility and performance. It is common that highly optimised simulations, such as those which target graphics processing units (GPU) hardware, are implemented as standalone software. This work presents a software framework (FLAME GPU 2) which balances flexibility with performance for general purpose ABM. Methods for ensuring high computational efficacy are demonstrated by, minimising data movement, and ensuring high device utilisation by exploiting opportunities for concurrent code execution within a model and through the use of ensembles of simulations. A novel hierarchical sub-modelling approach is also presented which can be used to model certain types of recursive behaviours. This feature is shown to be essential in providing a mechanism to resolve competition for resources between agents within a parallel environment which would otherwise introduce race conditions. To understand the performance characteristics of the software, a benchmark model with millions of agents is used to explore the use of simulation ensembles and to parametrically investigate concurrent code execution within a model. Performance speedups are demonstrated of 3.5x and 10x respectively over a baseline GPU implementation. Our hierarchical sub-modelling approach is used to demonstrate the implementation of a recursive algorithm to resolve competition of agent movement which occurs as a result of agent desire to simultaneously occupy discrete areas high in a `resource'. The algorithm is used to implement a classical socio-economics model, Sugarscape, with populations of up to 16M agents.
C1 [Richmond, Paul; Chisholm, Robert; Heywood, Peter; Leach, Matthew] Univ Sheffield, Dept Comp Sci, Sheffield, England.
   [Chimeh, Mozhgan Kabiri] NVIDIA, Bristol, England.
C3 University of Sheffield
RP Richmond, P (corresponding author), Univ Sheffield, Dept Comp Sci, Sheffield, England.
EM p.richmond@sheffield.ac.uk
OI Leach, Matthew/0000-0002-8901-5609; Kabiri Chimeh,
   Mozhgan/0000-0002-2561-7926; Chisholm, Robert/0000-0003-3379-9042
FU Engineering and Physical Sciences Research Council [EP/N018869/1];
   European Commission [777123, 826494]; H2020 Societal Challenges
   Programme [777123] Funding Source: H2020 Societal Challenges Programme
FX Engineering and Physical Sciences Research Council, Grant/Award Number:
   EP/N018869/1; European Commission, Grant/Award Numbers: 777123, 826494
CR Aaby BrandonG., 2010, [55] Brandon G Aaby, Kalyan S Perumalla, and Sudip K Seal. Efficient simulation of agent-based models on multi-gpu and multi-core clusters. Communications Management, pages 1-10, 2010., P1, DOI [DOI 10.4108/ICST.SIMUTOOLS2010.8822, 10.4108/ICST.SIMUTOOLS2010.8822]
   Abadi Martin, 2016, arXiv
   Abar S, 2017, COMPUT SCI REV, V24, P13, DOI 10.1016/j.cosrev.2017.03.001
   [Anonymous], 2000, AGENT ORIENTED SOFTW
   [Anonymous], 2011, GPU COMPUTING GEMS E
   BALANESCU T, 1999, J UNIVERS COMPUT SCI, V5, P494
   Bausch AR, 2006, NAT PHYS, V2, P231, DOI 10.1038/nphys260
   Bonabeau E, 2002, P NATL ACAD SCI USA, V99, P7280, DOI 10.1073/pnas.082080899
   Chimeh MK, 2018, IEEE INT C BIOINFORM, P1367, DOI 10.1109/BIBM.2018.8621404
   Chisholm R, 2017, LECT NOTES COMPUT SC, V10104, P311, DOI 10.1007/978-3-319-58943-5_25
   Christley S, 2010, BMC SYST BIOL, V4, DOI 10.1186/1752-0509-4-107
   Coakley S, 2012, IEEE I C EMBED SOFTW, P538, DOI 10.1109/HPCC.2012.79
   Collier N, 2013, SIMUL-T SOC MOD SIM, V89, P1215, DOI 10.1177/0037549712462620
   Cosenza B, 2011, EUROMICRO WORKSHOP P, P62, DOI 10.1109/PDP.2011.22
   De Chiara R., P VIS MOD VIS 2004 V
   Epstein J. M., 1996, GROWING ARTIFICIAL S, V1
   Ghaffarizadeh A, 2018, PLOS COMPUT BIOL, V14, DOI 10.1371/journal.pcbi.1005991
   Ghosh-Dastidar S, 2009, INT J NEURAL SYST, V19, P295, DOI 10.1142/S0129065709002002
   Husselmann A., SIMULATING SPECIES I, DOI [10.2316/P.2011.757-012, DOI 10.2316/P.2011.757]
   Jaxa-Rozen M, 2018, JASSS-J ARTIF SOC S, V21, DOI 10.18564/jasss.3668
   Karmakharm T., 2010, TPCG, DOI [DOI 10.2312/LOCALCHAPTEREVENTS/TPCG/TPCG10/067-074, 10.2312/LocalChapterEvents/TPCG/TPCG10/067-074]
   Li XS, 2016, CONCURR COMP-PRACT E, V28, P3313, DOI 10.1002/cpe.3808
   Martí-Bonmatí L, 2020, EUR RADIOL EXP, V4, DOI 10.1186/s41747-020-00150-9
   Mittal S, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2788396
   Neil P., FAIR PRINCIPLES RES, DOI [10.15497/RDA00065, DOI 10.15497/RDA00065]
   Nourisa J, 2022, SOFTWARE PRACT EXPER, V52, P1337, DOI 10.1002/spe.3067
   Owens JD, 2007, COMPUT GRAPH FORUM, V26, P80, DOI 10.1111/j.1467-8659.2007.01012.x
   Paszke A, 2019, ADV NEUR IN, V32
   Reynolds CW., 1987, SIGGRAPH Comput. Graph., V21, P25, DOI [10.1145/37402.37406, DOI 10.1145/37402.37406]
   Richmond P, 2010, BRIEF BIOINFORM, V11, P334, DOI 10.1093/bib/bbp073
   SCHELLING TC, 1971, J MATH SOCIOL, V1, P143, DOI 10.1080/0022250X.1971.9989794
   Stack M., 2021, ARXIV PREPRINT ARXIV
   Tisue S., NETLOGO SIMPLE ENV M
   Xiao J., 2018, ARXIV PREPRINT ARXIV
NR 34
TC 1
Z9 1
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2023
VL 53
IS 8
BP 1659
EP 1680
DI 10.1002/spe.3207
EA MAY 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L1MX2
UT WOS:000989316300001
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Kanda, S
   Akabe, K
   Oda, Y
AF Kanda, Shunsuke
   Akabe, Koichi
   Oda, Yusuke
TI Engineering faster double-array Aho-Corasick automata
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Aho-Corasick automata; code optimization; double-array; multiple pattern
   matching
ID EFFICIENT IMPLEMENTATION; COMPRESSION METHOD; ALGORITHM
AB Multiple pattern matching in strings is a fundamental problem in text processing applications such as regular expressions or tokenization. This article studies efficient implementations of double-array Aho-Corasick automata (DAACs), data structures for quickly performing the multiple pattern matching. The practical performance of DAACs is improved by carefully designing the data structure, and many implementation techniques have been proposed thus far. A problem in DAACs is that comprehensive descriptions and experimental analyses on their ideas are not provided. Engineers face difficulties in implementing an efficient DAAC. In this article, we review implementation techniques for DAACs and provide a comprehensive description of them. We also propose several new techniques for further improvement. We conduct exhaustive experiments through real-world datasets and reveal the best combination of techniques to achieve a higher performance in DAACs. The best combination is different from those used in the most popular libraries of DAACs, which demonstrates that their performance can be further enhanced. On the basis of our experimental analysis, we developed a new Rust library for fast multiple pattern matching using DAACs, named Daachorse, as open-source software at . Experiments demonstrate that Daachorse outperforms other AC-automaton implementations, indicating its suitability as a fast alternative for multiple pattern matching in many applications.
C1 [Kanda, Shunsuke; Akabe, Koichi] LegalOn Technol Res, Tokyo, Japan.
   [Oda, Yusuke] Tohoku Univ, Ctr Data Driven Sci & Artificial Intelligence, Sendai, Japan.
C3 Tohoku University
RP Kanda, S (corresponding author), LegalOn Technol Res, Tokyo, Japan.
EM shnsk.knd@gmail.com
OI Kanda, Shunsuke/0000-0002-5462-122X
CR AHO AV, 1975, COMMUN ACM, V18, P333, DOI 10.1145/360825.360855
   Aoe J, 1996, IEEE T KNOWL DATA EN, V8, P476, DOI 10.1109/69.506713
   AOE JI, 1992, SOFTWARE PRACT EXPER, V22, P695, DOI 10.1002/spe.4380220902
   AOE JI, 1989, IEEE T SOFTWARE ENG, V15, P1066, DOI 10.1109/32.31365
   Arroyuelo D., 2010, P 11 WORKSH ALG ENG, P84
   Askitis N., 2007, THESIS RMIT U
   Belazzougui D., 2010, P 21 ANN C COMB PATT, P88
   Brants T., 2006, Web 1T 5-gram Version 1, pLDC2006T13
   Brazil Inc, 2022, GROONG OP SOURC FULL
   daac-tools, 2022, VAP VER ACC POINTWIS
   Den Y., 2007, JPN LINGUIST, V22, P101
   Dorji TC, 2010, INFORM PROCESS MANAG, V46, P502, DOI 10.1016/j.ipm.2009.08.004
   DUNDAS JA, 1991, SOFTWARE PRACT EXPER, V21, P1027, DOI 10.1002/spe.4380211004
   Ferragina P, 2005, ANN IEEE SYMP FOUND, P184, DOI 10.1109/SFCS.2005.69
   Ferragina P., 2005, PIZZA CHILI CORPUS
   FREDKIN E, 1960, COMMUN ACM, V3, P490, DOI 10.1145/367390.367400
   Fuketa M, 2004, INT J COMPUT MATH, V81, P943, DOI 10.1080/00207160410001714600
   Fuketa M, 2014, INFORM PROCESS MANAG, V50, P796, DOI 10.1016/j.ipm.2014.04.004
   Gallant A., 2021, AHO CORASICK FAST IM
   hankcs, 2020, AHOCORASICKDOUBLEARR
   Hon WK, 2013, THEOR COMPUT SCI, V475, P113, DOI 10.1016/j.tcs.2012.10.050
   I T, 2015, THEOR COMPUT SCI, V578, P30, DOI 10.1016/j.tcs.2015.01.019
   JACOBSON G, 1989, ANN IEEE SYMP FOUND, P549, DOI 10.1109/SFCS.1989.63533
   Kanda S, 2018, SOFTWARE PRACT EXPER, V48, P65, DOI 10.1002/spe.2516
   Kanda S, 2017, KNOWL INF SYST, V51, P1023, DOI 10.1007/s10115-016-0999-8
   Kanda S, 2016, KNOWL INF SYST, V48, P55, DOI 10.1007/s10115-015-0873-0
   Kudo T, 2004, P 2004 C EMP METH NA, P230
   Kudo T, 2008, DARTS DOUBLE ARRAY T
   Liu H., 2011, P 5 INT JOINT C NAT, P1189
   Maekawa K, 2014, LANG RESOUR EVAL, V48, P345, DOI 10.1007/s10579-013-9261-0
   Mori S., 2011, J NATURAL LANGUAGE P, V18, P367, DOI DOI 10.5715/JNLP.18.367
   Morita K, 2001, SOFTWARE PRACT EXPER, V31, P43, DOI 10.1002/1097-024X(200101)31:1<43::AID-SPE356>3.0.CO;2-R
   Navarro G., 2002, FLEXIBLE PATTERN MAT
   Neubig G., 2011, P 49 ANN M ASS COMP, P529
   Nieminen J, 2007, SOFTWARE PRACT EXPER, V37, P669, DOI 10.1002/spe.785
   Norimatsu JY, 2016, ACM T ASIAN LOW-RESO, V15, DOI 10.1145/2873068
   Oono M, 2003, SOFTWARE PRACT EXPER, V33, P1229, DOI 10.1002/spe.545
   Pibiri GE, 2019, ACM T INFORM SYST, V37, DOI 10.1145/3302913
   Pibiri GE, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P615, DOI 10.1145/3077136.3080798
   Ruohang F., 2019, AC AHO CORASICK AUTO
   Sassano M, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P505
   Shinnou H., 2000, P 6 PAC RIM INT C AR, P822
   Song XY, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P2089
   Yasuhara M, 2013, P C EMP METH NAT LAN, P222
   Yata, 2010, NIHONGO WEB CORPUS 2
   Yata Susumu, 2008, IIT 2008 International Conference on Innovations in Information Technology, P79, DOI 10.1109/INNOVATIONS.2008.4781726
   Yata S., 2018, CLONE DARTS
   Yata S, 2006, P 1 INT C COMP INF I, P1
   Yata S, 2007, SOFTWARE PRACT EXPER, V37, P523, DOI 10.1002/spe.778
   Yata S, 2007, INFORM PROCESS MANAG, V43, P237, DOI 10.1016/j.ipm.2006.04.004
   Yihan Z., 2021, P 20 CHINESE NATL C, P1046
   Yoshinaga Naoki, 2014, P 24 INT C COMPUTATI, P1091
NR 52
TC 0
Z9 0
U1 3
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2023
VL 53
IS 6
BP 1332
EP 1361
DI 10.1002/spe.3190
EA FEB 2023
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E8MO0
UT WOS:000936978300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Han, X
   Yu, TT
   Yan, GJ
AF Han, Xue
   Yu, Tingting
   Yan, Gongjun
TI A systematic mapping study of software performance research
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software engineering; software performance; systematic mapping study
ID RELIABILITY
AB Context: Software performance is crucial for ensuring the quality of software products. As one of the non-functional requirements, the few efforts devoted to software performance have often been neglected until a later phase in the software development life cycle (SDLC). The lack of clarity of what software performance research literature is available prevents researchers from understanding what software performance research fields are available. It also creates difficulty for practitioners to adopt state-of-the-art software performance techniques. Software performance research is not as organized as other established research topics such as software testing. Thus, it is essential to conduct a systematic mapping study as a first step to provide an overview of the latest research literature available in software performance. Objective:The objective of this systematic mapping study is to survey and map software performance research literature into suitable categories and to synthesize the literature data for future access and reference. Method: This systematic mapping study conducts a manual examination by querying research literature in noble journals and proceedings in software engineering in the past decade. We examine each paper manually and identify primary studies for further analysis and synthesis according to the pre-defined inclusion criteria. Lastly, we map the primary studies based on their corresponding classification category. Results: This systematic mapping study provides a state-of-the-art literature mapping in software performance research. We have carefully examined 222 primary studies out of 2000+ research literature. We have identified six software performance research categories and 15 subcategories. We generate the primary study mapping and report five research findings. Conclusions: Unlike established research fields, it is unclear what types of software performance research categories are available to the community. This work takes the systematic mapping study approach to survey and map the latest software performance research literature. The study results provide an overview of the paper distribution and a reference for researchers to navigate research literature on software performance.
C1 [Han, Xue; Yan, Gongjun] Univ Southern Indiana, Management & Informat Sci Dept, Evansville, IN 47712 USA.
   [Yu, Tingting] Univ Cincinnati, Dept Elect Engn & Comp Sci, Cincinnati, OH USA.
C3 University System of Ohio; University of Cincinnati
RP Han, X (corresponding author), Univ Southern Indiana, Management & Informat Sci Dept, Evansville, IN 47712 USA.
EM xhan@usi.edu
OI Han, Xue/0000-0002-2527-2497
CR [Anonymous], 2016, P 31 ANN ACM S APPL
   [Anonymous], 2010, Advances in Neural Information Processing Systems
   Arcelli D, 2012, P 8 INT ACM SIGSOFT, P33, DOI 10.1145/2304696.2304704
   Attariyan M., 2010, P 9 USENIX S OP SYST, P1
   Attariyan Mona, 2012, P 10 USENIX C OP SYS, P307
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Avritzer A, 1996, SOFTWARE PRACT EXPER, V26, P613, DOI 10.1002/(SICI)1097-024X(199606)26:6<613::AID-SPE23>3.0.CO;2-5
   Bailey DH, 2005, LECT NOTES COMPUT SC, V3648, P185
   BAILEY J, 2007, 1 INT S EMP SOFTW EN, P482
   Bao L, 2018, IEEE INT CONF AUTOM, P29, DOI 10.1145/3238147.3238175
   Barna C., 2011, Proceedings of the 8th ACM International Conference on Autonomic Computing - ICAC'11, P91
   Boehme D, 2016, SC '16: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, P550, DOI 10.1109/SC.2016.46
   Bugzilla, 2016, KEYW DESCR
   Bushehrian O, 2011, IET SOFTW, V5, P375, DOI 10.1049/iet-sen.2010.0076
   Cangussu JW, 2009, INT J SOFTW ENG KNOW, V19, P481, DOI 10.1142/S0218194009004283
   Chen G., 2012, P INT C HIGH PERFORM, P71
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Danciu A., 2015, P 6 ACMSPEC INT C PE, P91
   Dean DanielJ., 2014, Proceedings of the ACM Symposium on Cloud Computing, P1, DOI [10.1145/2670979.2670987, DOI 10.1145/2670979.2670987]
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Distefano S, 2010, J CIRCUIT SYST COMP, V19, P307, DOI 10.1142/S0218126610006220
   Draheim D, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P55
   Du MN, 2020, COMMUN ACM, V63, P68, DOI 10.1145/3359786
   Foo KC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P159, DOI 10.1109/ICSE.2015.144
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Habchi S, 2018, IEEE INT CONF AUTOM, P6, DOI 10.1145/3238147.3238197
   Han S, 2012, PROC INT CONF SOFTW, P145, DOI 10.1109/ICSE.2012.6227198
   Han X, 2019, J SYST SOFTWARE, V156, P268, DOI 10.1016/j.jss.2019.06.100
   Han X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962602
   Happe L, 2014, PROGR IS, P117, DOI 10.1007/978-3-319-04144-5_11
   HealthCare.gov, 2016, CAS STUD CMS MAN FED
   Huang P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P60, DOI 10.1145/2568225.2568232
   Incerto E, 2017, IEEE INT CONF AUTOM, P485, DOI 10.1109/ASE.2017.8115660
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Jovic M, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P155
   Keele S, 2007, GUIDELINES PERFORMIN
   Koziolek H., 2014, ACM SIGMET RICS PERF, V41, P2
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Kwon Yongin., 2013, P 2013 USENIX C ANN, P297
   Lung CH, 2016, J SYST SOFTWARE, V121, P311, DOI 10.1016/j.jss.2016.06.102
   Maplesden D, 2015, IEEE T SOFTWARE ENG, V41, P691, DOI 10.1109/TSE.2015.2396514
   Matsuki T, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P173, DOI 10.1145/2851553.2851554
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Menasce D A., 2002, Computer Measurement Group (CMG) Conference, P271
   Merugu G, 2012, INT J STW ENG APPL, V3
   Molnar Molnar C. C., Lulu. com
   Nambiar Manoj, 2016, ACM SIGMETRICS Performance Evaluation Review, V43, P53, DOI 10.1145/2897356.2897363
   Nistor A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P562, DOI 10.1109/ICSE.2013.6606602
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Olivo O, 2015, ACM SIGPLAN NOTICES, V50, P369, DOI [10.1145/2813885.2737966, 10.1145/273924.2737966]
   Petersen K, 2008, Systematic Mapping Studies in Software Engineering
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pradel Michael, 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P13, DOI DOI 10.1145/2610384.2610393
   Rights Direct, 2019, LIM KEYW SEARCH
   Sahin C, 2016, J SYST SOFTWARE, V117, P307, DOI 10.1016/j.jss.2016.03.031
   Shevtsov S, 2018, IEEE T SOFTWARE ENG, V44, P784, DOI 10.1109/TSE.2017.2704579
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Song LH, 2014, ACM SIGPLAN NOTICES, V49, P561, DOI [10.1145/2660193.2660234, 10.1145/2714064.2660234]
   Tallent NR, 2010, PPOPP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P269, DOI 10.1145/1693453.1693489
   Tawhid R., 2012, P 3 ACMSPEC INT C PE, P109
   Tribastone M., 2014, P 5 ACMSPEC INT C PE, P63
   Wert A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P552, DOI 10.1109/ICSE.2013.6606601
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Woodside M, 2014, SOFTW SYST MODEL, V13, P1529, DOI 10.1007/s10270-013-0385-x
   Yan DC, 2012, PROC INT CONF SOFTW, P134, DOI 10.1109/ICSE.2012.6227199
   Yang X, 2008, LECT NOTES COMPUT SC, V4976, P190
   Yu T., 2016, P 25 INT S SOFTW TES, P389
   Zhang J, 2002, SOFTWARE PRACT EXPER, V32, P1411, DOI 10.1002/spe.487
   Zhang Pingyu, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P43, DOI 10.1109/ASE.2011.6100093
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P312, DOI 10.1109/ICSE.2013.6606577
   Zheng L, 2015, INT SYM CODE GENER, P56, DOI 10.1109/CGO.2015.7054187
NR 75
TC 2
Z9 2
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2023
VL 53
IS 5
BP 1249
EP 1270
DI 10.1002/spe.3185
EA JAN 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C0ZX8
UT WOS:000905670100001
DA 2024-07-18
ER

PT J
AU Sahay, A
   Di Ruscio, D
   Iovino, L
   Pierantonio, A
AF Sahay, Apurvanand
   Di Ruscio, Davide
   Iovino, Ludovico
   Pierantonio, Alfonso
TI Analyzing business process management capabilities of low-code
   development platforms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business process management; low-code development platforms;
   model-driven engineering
ID LANGUAGES
AB Low-code development platforms (LCDPs) aim to simplify software systems' development by providing easy-to-use graphical interfaces and drag-and-drop facilities. The system behaviors are defined through available data handling and workflow mechanisms enabling the specification of business processes from users that do not have strong programming skills. However, the number of LCDPs has grown significantly over the last few years. Consequently, it is not easy for inexpert users to understand their differences, especially in terms of provided modeling constructs. In this article, we analyze and compare eight low-code development platforms by focusing on their capabilities for specifying business processes. The analysis exploits business process modeling and notation (BPMN) as a reference modeling language. Thus, the core elements of BPMN are leveraged to analyze the workflow mechanisms provided by each of the analyzed LCDP. The article explains different types of process flows and data handling means of the different LCDPs aiming to give potential users objective elements that can be used to make educated decisions when selecting LCDPs.
C1 [Sahay, Apurvanand; Di Ruscio, Davide; Pierantonio, Alfonso] Univ Aquila, Dept Engn & Informat Sci & Math, Laquila, Italy.
   [Iovino, Ludovico] Gran Sasso Sci Inst, Laquila, Italy.
C3 University of L'Aquila; Gran Sasso Science Institute (GSSI)
RP Sahay, A (corresponding author), Univ Aquila, Dept Engn & Informat Sci & Math, Laquila, Italy.
EM apurvanand.sahay@univaq.it
OI Sahay, Apurvanand/0000-0003-3695-8598; Di Ruscio,
   Davide/0000-0002-5077-6793
FU Lowcomote Training Network; H2020 Marie Sklodowska-Curie Actions
   [813884]
FX Lowcomote Training Network; H2020 Marie Sklodowska-Curie
   Actions,Grant/Award Number: 813884
CR Aguirre S, 2017, COMM COM INF SC, V742, P65, DOI 10.1007/978-3-319-66963-2_7
   Allweyer T., 2016, BOD BOOKS DEMAND
   Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], 2008, Petri Net
   [Anonymous], 2012, J SOFTW ENG APPL
   Appsheet G., 2022, GOOGLE APPSHEET ACTI
   Ben Hassen M, 2016, PROCEDIA COMPUT SCI, V100, P1002, DOI 10.1016/j.procs.2016.09.272
   Bendraou R, 2010, IEEE T SOFTWARE ENG, V36, P662, DOI 10.1109/TSE.2009.85
   Birkmeier D, 2010, LECT NOTES COMPUT SC, V6093, P119, DOI 10.1007/978-3-642-13821-8_10
   Cabot Jordi, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P58, DOI 10.1007/978-3-642-30982-3_3
   Corradini F, 2018, DATA KNOWL ENG, V113, P129, DOI 10.1016/j.datak.2017.11.003
   Creator Z., 2022, ZOHO CREATOR DELUGE
   Di Ruscio D, 2022, SOFTW SYST MODEL, V21, P437, DOI 10.1007/s10270-021-00970-2
   Dorador JM, 2000, INT J COMP INTEG M, V13, P430, DOI 10.1080/09511920050117928
   Force URT., 2010, OMG UNIFIED MODELING
   from Workflow Process RD from Schema RPE Element AS, 2005, WFMCTC1025
   García-García JA, 2019, COMPUT STAND INTER, V63, P52, DOI 10.1016/j.csi.2018.11.008
   Gartner, 2022, GARTN FOR
   GEORGAKOPOULOS D, 1995, DISTRIB PARALLEL DAT, V3, P119, DOI 10.1007/BF01277643
   Guizani K, 2021, PROCEDIA COMPUT SCI, V181, P843, DOI 10.1016/j.procs.2021.01.238
   HoneyCode A., 2022, AMAZON HONEYCODE CAP
   Keel J., 2016, LIGHTNING PROCESS BU
   Kelemen Z. D., 2013, SELECTING PROCESS MO
   Lightning S., 2022, SALESFORCE LIGHTNING
   MacDonell S, 2010, IEEE T SOFTWARE ENG, V36, P676, DOI 10.1109/TSE.2010.28
   Martins Ricardo, 2020, 2020 International Conference on Smart Technologies in Computing, Electrical and Electronics (ICSTCEE), P395, DOI 10.1109/ICSTCEE49637.2020.9277404
   Mendix, 2022, MEND MICR MEN DOCS
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   OutSystems, 2022, OUTS PLATF BUS PROC
   Ouyang C, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1555392.1555395
   Pereira JL, 2016, ADV INTELL SYST, V444, P619, DOI 10.1007/978-3-319-31232-3_58
   PowerApps M, 2022, MICR POWERAPPS FLOW
   Recker J, 2009, J ASSOC INF SYST, V10, P333, DOI 10.17705/1jais.00193
   Reisig W., 2012, Petri nets: an introduction, V4
   Sahay A, 2020, EUROMICRO CONF PROC, P171, DOI 10.1109/SEAA51224.2020.00036
   Song H., 2010, P 5 INT WORKSHOP MOD, V16
   Terragni S., 2021, CEUR WORKSHOP PROC, V3033
   Thinkwise, 2022, THINKW PROC FLOW
   Vincent P., 2020, Magic Quadrant for Enterprise Low-Code Application Platforms [WWW Document]
   Wang W, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON SERVICE OPERATIONS AND LOGISTICS, AND INFORMATICS (SOLI 2006), PROCEEDINGS, P1136, DOI 10.1109/SOLI.2006.328910
   Waszkowski R, 2019, IFAC PAPERSONLINE, V52, P376, DOI 10.1016/j.ifacol.2019.10.060
   White SA., 2004, IBM Cooperation, V2, P0
   Wise A, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/ASE.2000.873660
NR 43
TC 1
Z9 1
U1 4
U2 28
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2023
VL 53
IS 4
BP 1036
EP 1060
DI 10.1002/spe.3177
EA DEC 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9M3GK
UT WOS:000895296700001
OA Green Published
DA 2024-07-18
ER

PT J
AU Liang, JG
   Fu, Y
   Hua, R
   Zhang, H
   Zhu, WQ
   Ye, YX
AF Liang, Jianguo
   Fu, You
   Hua, Rong
   Zhang, Hao
   Zhu, Wenqiang
   Ye, Yuxi
TI A novel acceleration method for molecular dynamics of crystal silicon on
   GPUs using OpenACC
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE GPUs; molecular dynamics simulation; OpenACC; OpenMP
ID SIMULATION; EFFICIENT; ALGORITHMS
AB Compared with CUDA and OpenCL, OpenACC has the advantages of simple programming, openness, and good portability for GPU acceleration. An OpenMP/OpenACC implementation for molecular dynamics of silicon crystal on GPUs is proposed. First, to make effective use of vectorization and streaming, data structure conversion and data dependence elimination are designed. Second, the parallel version on the single GPU is realized by adding OpenACC guidance sentences, with very few modifications. Third, a patch block strategy is proposed to realize the parallel version on single machine multi-GPUs using OpenMP+OpenACC, which greatly simplifies the construction of shadow area and the exchange of shadow area data. Experimental results show that 23 to 25 speedup is achieved for the single GPU at different scales over the serial program on Intel(R) Xeon(R) CPU E5-2690 v4, and 6.37 speedup is achieved over the single GPU when the number of atoms reaches 2,097,152 on 8GPUs on single machine.
C1 [Liang, Jianguo; Fu, You; Hua, Rong; Zhu, Wenqiang; Ye, Yuxi] Shandong Univ Sci & Technol, Coll Comp Sci & Engn, Qingdao 266590, Peoples R China.
   [Liang, Jianguo] Qingdao Harbour Vocat & Tech Univ, Coll Informat & Elect Engn, Qingdao, Peoples R China.
   [Zhang, Hao] Univ Otago, Dept Comp Sci, Dunedin, New Zealand.
C3 Shandong University of Science & Technology; University of Otago
RP Fu, Y (corresponding author), Shandong Univ Sci & Technol, Coll Comp Sci & Engn, Qingdao 266590, Peoples R China.
EM fuyou@sdust.edu.cn
OI Liang, Jianguo/0000-0001-6244-1467
FU Key Research and Development Project of Shandong Province, China
   [2019GGX101066]; National Key R&D Program of China [2017YFB0202002]
FX Key Research and Development Project of Shandong Province, China,
   Grant/Award Number: 2019GGX101066; National Key R&D Program of China,
   Grant/Award Number: 2017YFB0202002
CR Anderson JA, 2008, J COMPUT PHYS, V227, P5342, DOI 10.1016/j.jcp.2008.01.047
   BERENDSEN HJC, 1995, COMPUT PHYS COMMUN, V91, P43, DOI 10.1016/0010-4655(95)00042-E
   Boukai AI, 2008, NATURE, V451, P168, DOI 10.1038/nature06458
   Ciccotti G., 2014, ENTROPY, V16, P1
   Figueroa A., 2021, EXPERIENCES PORTING
   Glaser J, 2015, COMPUT PHYS COMMUN, V192, P97, DOI 10.1016/j.cpc.2015.02.028
   Hardy DJ., 2010, J COMPUT CHEM, V28, P2618
   Harvey MJ, 2009, J CHEM THEORY COMPUT, V5, P1632, DOI 10.1021/ct9000685
   Hess B, 2008, J CHEM THEORY COMPUT, V4, P435, DOI 10.1021/ct700301q
   Hou CF, 2013, INT J HIGH PERFORM C, V27, P307, DOI 10.1177/1094342012456047
   Hou CF, 2013, COMPUT PHYS COMMUN, V184, P1364, DOI 10.1016/j.cpc.2013.01.001
   Hou CF, 2012, INT J MOD PHYS C, V23, DOI 10.1142/S0129183112500155
   Kim JY, 2021, COMPUT GEOSCI-UK, V146, DOI 10.1016/j.cageo.2020.104627
   Krieger E, 2015, J COMPUT CHEM, V36, P996, DOI 10.1002/jcc.23899
   Liang JG, 2022, PARALLEL COMPUT, V111, DOI 10.1016/j.parco.2022.102893
   Liang JG, 2020, PARALLEL COMPUT, V99, DOI 10.1016/j.parco.2020.102667
   Marowka A, 2022, SOFTWARE PRACT EXPER, V52, P154, DOI 10.1002/spe.3002
   NVIDIA, OP APPL PROGR INT EB
   NVIDIA, 2019, CUDA C PROGRAMMING G
   Phillips JC, 2005, J COMPUT CHEM, V26, P1781, DOI 10.1002/jcc.20289
   PLIMPTON S, 1995, J COMPUT PHYS, V117, P1, DOI 10.1006/jcph.1995.1039
   Salomon-Ferrer R, 2013, WIRES COMPUT MOL SCI, V3, P198, DOI 10.1002/wcms.1121
   TERSOFF J, 1989, PHYS REV B, V39, P5566, DOI 10.1103/PhysRevB.39.5566
   Tian B, 2009, CHEM SOC REV, V38, P16, DOI 10.1039/b718703n
   Tian XN, 2016, PROC INT CONF PARAL, P572, DOI 10.1109/ICPP.2016.72
   Wright E, 2020, PLOS COMPUT BIOL, V16, DOI [10.1371/journal.pcbi.1007877, 10.1371/journal.pcbi.1007877.r001, 10.1371/journal.pcbi.1007877.r002, 10.1371/journal.pcbi.1007877.r003, 10.1371/journal.pcbi.1007877.r004]
   Xue WC, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.6036
   Yang JK, 2007, J COMPUT PHYS, V221, P799, DOI 10.1016/j.jcp.2006.06.039
   Zhang S., 2018, COMPUT SCI, V45, P298
NR 29
TC 1
Z9 1
U1 2
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2226
EP 2240
DI 10.1002/spe.3123
EA JUL 2022
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000827281600001
DA 2024-07-18
ER

PT J
AU Gouda, SK
   Mehta, AK
AF Gouda, Sunil Kumar
   Mehta, Ashok Kumar
TI A new evolutionism based self-adaptive multi-objective optimization
   method to predict software cost estimation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multi-objective differential evolution; multi-objective evolutionary
   algorithms; optimization; software cost estimation
ID DIFFERENTIAL EVOLUTION; ALGORITHM; SELECTION; MUTATION; MODELS; MOEA/D
AB One of the major challenge that organizations face in the present environment is having an efficient model for software cost estimation (SCE). In this article, the significance of the meta-heuristic algorithm in addressing various optimization challenges faced in mathematical models and software applications is discussed. The proposed method uses the new evolutionism-based self-adaptive mutation operator to solve the multi-objective optimization problems. This approach addresses the issues that exist in multi-objective differential evolution algorithms. To improve diversity among candidate solutions, the Pareto optimality principle is integrated with the evolutionism-based self-adaptive mutation operator in a multi-objective DE algorithm. To reduce the time complexity of Pareto dominance, we have adopted the non-dominated sorting algorithm. We used eight benchmark test functions to evaluate the effectiveness of the proposed method, and it outperformed the most recent multi-objective evolutionary algorithms (MOEAs). Furthermore, this article explores software engineering problems like SCE by using the proposed approach, where SCEs are accurately predicted by optimizing the tuning parameters of the multi-objective constructive cost model. The proposed algorithm achieves better cost prediction as compared to the other standard benchmark algorithms for all objective problems in terms of prediction, mean absolute error, and root mean square error.
C1 [Gouda, Sunil Kumar; Mehta, Ashok Kumar] Natl Inst Technol, Dept Comp Sci & Engn, Jamshedpur, Bihar, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Jamshedpur
RP Gouda, SK (corresponding author), Natl Inst Technol, Dept Comp Sci & Engn, Jamshedpur, Bihar, India.
EM sunilgouda20@gmail.com; akmehta.cse@nitjsr.ac.in
RI MEHTA, ASHOK KUMAR/AAC-6380-2019; MEHTA, ASHOK KUMAR/GLU-7486-2022
OI MEHTA, ASHOK KUMAR/0000-0003-1587-343X; Gouda, sunil
   kumar/0000-0001-5006-2582
CR Abbass HA, 2001, IEEE C EVOL COMPUTAT, P207, DOI 10.1109/CEC.2001.934391
   Adeyemo J. A., 2009, Journal of Applied Sciences, V9, P3652, DOI 10.3923/jas.2009.3652.3661
   Ahmad SW, 2019, SADHANA-ACAD P ENG S, V44, DOI 10.1007/s12046-019-1085-1
   Ali M, 2012, EUR J OPER RES, V217, P404, DOI 10.1016/j.ejor.2011.09.025
   Ali M, 2009, 2009 INTERNATIONAL CONFERENCE OF SOFT COMPUTING AND PATTERN RECOGNITION, P196, DOI 10.1109/SoCPaR.2009.48
   [Anonymous], 2006, NASA DATA SET PRO93
   Arora S., 2018, Advances in Intelligent Systems and Computing, V584, P51, DOI DOI 10.1007/978-981-10-5699-4_6
   Beed R, 2020, COMPUT INTELL-US, V36, P884, DOI 10.1111/coin.12276
   Benala TR, 2018, SWARM EVOL COMPUT, V38, P158, DOI 10.1016/j.swevo.2017.07.009
   Boehm B, 2000, IEEE SOFTWARE, V17, P14, DOI 10.1109/52.877854
   Chen BL, 2015, APPL INTELL, V43, P49, DOI 10.1007/s10489-014-0619-9
   Chen X, 2014, CHEMOMETR INTELL LAB, V136, P85, DOI 10.1016/j.chemolab.2014.05.007
   Das S, 2016, SWARM EVOL COMPUT, V27, P1, DOI 10.1016/j.swevo.2016.01.004
   Deb K, 2002, IEEE C EVOL COMPUTAT, P825, DOI 10.1109/CEC.2002.1007032
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Got A, 2020, EXPERT SYST APPL, V141, DOI 10.1016/j.eswa.2019.112972
   Gu ZM, 2020, FUTURE GENER COMP SY, V107, P49, DOI 10.1016/j.future.2020.01.048
   Li H, 2009, IEEE T EVOLUT COMPUT, V13, P284, DOI 10.1109/TEVC.2008.925798
   Li K, 2014, IEEE T EVOLUT COMPUT, V18, P909, DOI 10.1109/TEVC.2013.2293776
   Nwaiwu JC., 2016, ANAL STUDY FUZZY BAS, P22
   Price KV, 1996, 1996 BIENNIAL CONFERENCE OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY - NAFIPS, P524, DOI 10.1109/NAFIPS.1996.534790
   Qian WY, 2008, APPL MATH COMPUT, V201, P431, DOI 10.1016/j.amc.2007.12.052
   Resmi V, 2020, J CIRCUIT SYST COMP, V29, DOI 10.1142/S0218126620500917
   Robic T, 2005, LECT NOTES COMPUT SC, V3410, P520
   Schott J.R., 1995, FAULT TOLERANT DESIG, DOI DOI 10.1016/0008-8749(78)90168-5
   Sheta AF, 2013, INT J ADV COMPUT SC, V4, P192
   Singh S. P., 2020, IRAN J COMPUTER SCI, V3, P115
   Singh SP, 2021, J KING SAUD UNIV-COM, V33, P740, DOI 10.1016/j.jksuci.2018.05.009
   Singh SP, 2018, APPL INTELL, V48, P628, DOI 10.1007/s10489-017-0980-6
   Singh SP, 2017, J INTELL FUZZY SYST, V32, P3245, DOI 10.3233/JIFS-169268
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tan YY, 2012, INFORM SCIENCES, V213, P14, DOI 10.1016/j.ins.2012.06.007
   Thamarai I, 2017, SADHANA-ACAD P ENG S, V42, P23, DOI 10.1007/s12046-016-0577-5
   Ullah Aman, 2019, 2019 International Conference on Intelligent Computing, Automation and Systems (ICICAS), P654, DOI 10.1109/ICICAS48597.2019.00142
   Van Veldhuizen DA, 2000, IEEE C EVOL COMPUTAT, P204, DOI 10.1109/CEC.2000.870296
   Van Veldhuizen DA, 1998, TR9803 AIR FORC I TE
   Xue F, 2003, IEEE C EVOL COMPUTAT, P862
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zhang XY, 2015, IEEE T EVOLUT COMPUT, V19, P201, DOI 10.1109/TEVC.2014.2308305
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E, 2000, EVOL COMPUT, V8, P173, DOI 10.1162/106365600568202
NR 42
TC 2
Z9 2
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2022
VL 52
IS 8
BP 1826
EP 1848
DI 10.1002/spe.3092
EA MAY 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2R3HL
UT WOS:000799662600001
DA 2024-07-18
ER

PT J
AU Turk, T
AF Turk, Tomaz
TI SDFunc: Modular spreadsheet design with sheet-defined functions in
   Microsoft Excel
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE add-in; Microsoft Excel; modular design; sheet-defined function;
   spreadsheet
AB The goal of the SDFunc tool is to enable spreadsheet developers to build their model computations in Microsoft Excel according to the modular design approach, that is, the separation of the functionalities into independent, interchangeable modules with interfaces that provide input and output elements. This concept has been theoretically developed in recent years and is known as sheet-defined functions in the literature. In this article, we are presenting our implementation of the tool and the evaluation steps that we took to make the tool interesting and suitable for the assessment of the modular approach in spreadsheet development by the industry, specifically within organizational and companies' settings where the spreadsheet developers and end-users involved in experiments expect to use a well-established spreadsheet platform. We also demonstrated that sheet-defined functions can be implemented by development tools already present in Microsoft Excel.
C1 [Turk, Tomaz] Univ Ljubljana, Sch Econ & Business, Kard Pl 17, Ljubljana 1000, Slovenia.
C3 University of Ljubljana
RP Turk, T (corresponding author), Univ Ljubljana, Sch Econ & Business, Kard Pl 17, Ljubljana 1000, Slovenia.
EM tomaz.turk@ef.uni-lj.si
OI Turk, Tomaz/0000-0003-1480-3296
FU Javna Agencija za raziskovalno dejavnost RS [P2-0037]
FX Javna Agencija za raziskovalno dejavnost RS, Grant/Award Number: P2-0037
CR Barricelli BR, 2019, J SYST SOFTWARE, V149, P101, DOI 10.1016/j.jss.2018.11.041
   Bock AA, 2020, J COMPUT LANG, V57, DOI 10.1016/j.cola.2020.100960
   Cunha J, 2016, J SYST SOFTWARE, V118, P234, DOI 10.1016/j.jss.2016.04.043
   Cunha J, 2014, SCI COMPUT PROGRAM, V96, P254, DOI 10.1016/j.scico.2014.02.002
   Dagit J, 2006, J VISUAL LANG COMPUT, V17, P302, DOI 10.1016/j.jvlc.2006.04.006
   Green, 2000, COGNITIVE DIMENSIONS, V11
   Green Thomas., 1998, Cognitive dimensions of information artefacts: a tutorial
   Huang YC, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110615
   Jannach D, 2014, J SYST SOFTWARE, V94, P129, DOI 10.1016/j.jss.2014.03.058
   Joharizadeh Nima, 2020, CHI EA '20: Extended Abstracts of the 2020 CHI Conference on Human Factors in Computing Systems, P1, DOI 10.1145/3334480.3382806
   Jones SP, 2003, ACM SIGPLAN NOTICES, V38, P165, DOI 10.1145/944746.944721
   Kankuzi B, 2016, INT J HUM-COMPUT ST, V86, P149, DOI 10.1016/j.ijhcs.2015.10.005
   Koch P, 2019, J SYST SOFTWARE, V147, P64, DOI 10.1016/j.jss.2018.09.092
   Kreie J, 2000, DECIS SUPPORT SYST, V29, P143, DOI 10.1016/S0167-9236(00)00068-3
   Mccutchen M, 2020, J FUNCT PROGRAM, V30, DOI 10.1017/S0956796820000234
   Sestoft Peter, 2013, End User Development. 4th International Symposium, IS-EUD 2013. Proceedings. LNCS 7897, P88
   Zhang RQ, 2017, J SYST SOFTWARE, V126, P87, DOI 10.1016/j.jss.2016.03.061
NR 17
TC 0
Z9 0
U1 2
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 415
EP 426
DI 10.1002/spe.3027
EA SEP 2021
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000694999700001
OA Green Published
DA 2024-07-18
ER

PT J
AU Salimian, M
   Ghobaei-Arani, M
   Shahidinejad, A
AF Salimian, Mahboubeh
   Ghobaei-Arani, Mostafa
   Shahidinejad, Ali
TI Toward an autonomic approach for Internet of Things service placement
   using gray wolf optimization in the fog computing environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomic computing; fog computing; gray wolf optimization algorithm;
   IoT applications; service placement
ID EDGE; NETWORK
AB Divers and the huge amount of data produced by the Internet of Things (IoT) applications on the one hand, and inherent limitations of local equipment to handle these data, on the other hand, leads to present emerging closer technologies to the end-users such as fog computing environment. Nevertheless, despite the numerous advantages of such an environment, it still needs state-of-the-art approaches to cope with some inherent limitations. In the literature, resource placement strategies are generally proposed to address such problems, in which the IoT applications are mapped to fog nodes. However, despite its importance, different approaches attempt to enhance the overall system's performance and users' expectations: none of such approaches is satisfactory. In this article, to deploy IoT applications on fog nodes, an autonomic IoT service placement approach based on the gray wolf optimization scheme is proposed, enhancing the system's performance while considering execution costs. Besides, the autonomic concepts help make an appropriate automanagement system that fits better the fog environment's dynamic behavior. Simulation results demonstrate that the proposed approach outperforms the other approaches and converges to the solution in near-optimal application deployment on fog nodes in respect of the performance of performing services that are 93.7%, the performance of the average waiting time for performed services that are 100%, the remaining services sent to an extra provisioned period that is zero.
C1 [Salimian, Mahboubeh; Ghobaei-Arani, Mostafa; Shahidinejad, Ali] Islamic Azad Univ, Qom Branch, Dept Comp Engn, Qom, Iran.
C3 Islamic Azad University
RP Ghobaei-Arani, M (corresponding author), Islamic Azad Univ, Qom Branch, Dept Comp Engn, Qom, Iran.
EM m.ghobaei@qom-iau.ac.ir
RI Shahidinejad, Ali/V-5523-2019; Ghobaei-Arani, Mostafa/K-5058-2015
OI Shahidinejad, Ali/0000-0003-4856-9119; Ghobaei-Arani,
   Mostafa/0000-0003-2639-0900
CR Ait-Salaht F, 2019, P IEEE I C SERV COMP, P19, DOI 10.1109/SCC.2019.00017
   Amira RB, 2018, LECT NOTES COMPUT SC, V11230, P241, DOI 10.1007/978-3-030-02671-4_14
   Aziz S, 2021, INT J MENT HEALTH AD, V19, P1605, DOI 10.1007/s11469-020-00249-5
   Azizi S, 2020, CLUSTER COMPUT, V23, P3421, DOI 10.1007/s10586-020-03096-0
   Brogi A, 2020, SOFTWARE PRACT EXPER, V50, P719, DOI 10.1002/spe.2766
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Canali C, 2019, ALGORITHMS, V12, DOI 10.3390/a12100201
   Nguyen DQ, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P9
   Farhadi M, 2020, SOFTWARE PRACT EXPER, V50, P973, DOI 10.1002/spe.2804
   Ghobaei-Arani M, 2020, J GRID COMPUT, V18, P1, DOI 10.1007/s10723-019-09491-1
   Guo Y, 2020, SOFTWARE PRACT EXPER, V50, P489, DOI 10.1002/spe.2685
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Kayal P, 2019, I S WORLD WIREL MOBI, DOI 10.1109/wowmom.2019.8792989
   Kherraf N, 2019, IEEE T NETW SERV MAN, V16, P489, DOI 10.1109/TNSM.2019.2894955
   Liang Y, 2021, IEEE T MOBILE COMPUT, V20, P1064, DOI 10.1109/TMC.2019.2952097
   Lin CY, 2019, PROCEEDINGS OF THE 2019 ACM MOBIHOCWORKSHOP ON PERVASIVE SYSTEMS IN THE IOT ERA (PERSIST-IOT '19), P43, DOI 10.1145/3331052.3332477
   Liu L., 2019, 2019 IEEEACM 27 INT, p1
   Mahmud R, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3403955
   Mann ZA, 2020, FUTURE GENER COMP SY, V110, P243, DOI 10.1016/j.future.2020.03.064
   Tran MQ, 2019, WIREL COMMUN MOB COM, DOI 10.1155/2019/6215454
   Munoz DJ, 2019, FUTURE GENER COMP SY, V91, P536, DOI 10.1016/j.future.2018.09.006
   Niu PF, 2019, KNOWL-BASED SYST, V171, P37, DOI 10.1016/j.knosys.2019.01.018
   Omer S, 2021, J SYST ARCHITECT, V115, DOI 10.1016/j.sysarc.2021.101996
   Pasteris Stephen, 2019, IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, P514, DOI 10.1109/INFOCOM.2019.8737449
   Martin JP, 2020, SOFTWARE PRACT EXPER, V50, P2337, DOI 10.1002/spe.2896
   Qian YF, 2019, INFORM SCIENCES, V505, P562, DOI 10.1016/j.ins.2019.07.069
   Shaer I, 2020, IEEE ICC, DOI 10.1109/icc40277.2020.9148960
   Shakarami A, 2021, CLUSTER COMPUT, V24, P2545, DOI 10.1007/s10586-021-03283-7
   Shakarami A, 2021, J NETW COMPUT APPL, V178, DOI 10.1016/j.jnca.2021.102974
   Shakarami A, 2020, COMPUT NETW, V182, DOI 10.1016/j.comnet.2020.107496
   Shakarami A, 2020, J GRID COMPUT, V18, P639, DOI 10.1007/s10723-020-09530-2
   Shakarami A, 2020, SOFTWARE PRACT EXPER, V50, P1719, DOI 10.1002/spe.2839
   SINGH S, 2017, IEEE T CLOUD COMPUT, V8, P1040
   Skarlat O, 2017, SERV ORIENTED COMPUT, V11, P427, DOI 10.1007/s11761-017-0219-8
   Son AY, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9173550
   Tanganelli G, 2020, FUTURE GENER COMP SY, V109, P420, DOI 10.1016/j.future.2020.02.047
   Toczé K, 2019, 2019 IEEE 3RD INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), DOI 10.1109/cfec.2019.8733152
   Varshney P, 2020, SOFTWARE PRACT EXPER, V50, P558, DOI 10.1002/spe.2699
   Venticinque S, 2019, J AMB INTEL HUM COMP, V10, P1955, DOI 10.1007/s12652-018-0785-4
   Wang N, 2021, INT J COMPUT VISION, V129, P400, DOI 10.1007/s11263-020-01357-4
   Xing HL, 2019, APPL SOFT COMPUT, V76, P575, DOI 10.1016/j.asoc.2018.12.037
   Xu XL, 2020, IEEE INTERNET THINGS, V7, P4084, DOI 10.1109/JIOT.2019.2959124
   Yadav V, 2019, TENCON IEEE REGION, P1280, DOI [10.1109/TENCON.2019.8929234, 10.1109/tencon.2019.8929234]
   Yarinezhad R, 2021, COMPUT NETW, V193, DOI 10.1016/j.comnet.2021.108116
   Yousefpour A, 2019, IEEE INTERNET THINGS, V6, P5080, DOI 10.1109/JIOT.2019.2896311
   Zeng DZ, 2020, FUTURE GENER COMP SY, V105, P757, DOI 10.1016/j.future.2018.01.060
NR 46
TC 28
Z9 28
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2021
VL 51
IS 8
BP 1745
EP 1772
DI 10.1002/spe.2986
EA MAY 2021
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TD0EL
UT WOS:000651030300001
DA 2024-07-18
ER

PT J
AU Rocha, ÉD
   da Silva, LGF
   Santos, GL
   Bezerra, D
   Moreira, A
   Gonçalves, G
   Marquezini, MV
   Mehta, A
   Wildeman, M
   Kelner, J
   Sadok, D
   Endo, PT
AF da Silva Rocha, Elisson
   G. F. da Silva, Leylane
   Santos, Guto L.
   Bezerra, Diego
   Moreira, Andre
   Goncalves, Glauco
   Marquezini, Maria Valeria
   Mehta, Amardeep
   Wildeman, Mattias
   Kelner, Judith
   Sadok, Djamel
   Endo, Patricia T.
TI Aggregating data center measurements for availability analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE availability; data center; data collection; software system; Zabbix
AB A data center infrastructure is composed of heterogeneous resources divided into three main subsystems: IT (processor, memory, disk, network, etc.), power (generators, power transformers, uninterruptible power supplies, distribution units, among others), and cooling (water chillers, pipes, and cooling tower). This heterogeneity brings challenges for collecting and gathering data from several devices in the infrastructure. In addition, extracting relevant information is another challenge for data center managers. While seeking to improve the cloud availability, monitoring the entire infrastructure using a variety of (open source and/or commercial) advanced monitoring tools, such as Zabbix, Nagios, Prometheus, CloudWatch, AzureWatch, and others is required. It is often common to use many monitoring systems to collect real-time data for data center components from different subsystems. Such an environment brings an inherent challenge stemming from the need to aggregate and organize the whole collected infrastructure data and measurements. This first step is necessary prior to obtaining any valuable insights for decision-making. In this paper, we present the Data Center Availability (DCA) System, a software system that is able to aggregate and analyze data center measurements aimed toward the study of DCA. We also discuss the DCA implementation and illustrate its operation, monitoring a small University research laboratory data center. The DCA System is able to monitor different types of devices using the Zabbix tool, such as servers, switches, and power devices. The DCA System is able to automatically identify the failure time seasonality and trend present in the collected data from different devices of the data center.
C1 [da Silva Rocha, Elisson; G. F. da Silva, Leylane; Santos, Guto L.; Bezerra, Diego; Moreira, Andre; Kelner, Judith; Sadok, Djamel; Endo, Patricia T.] Univ Pernambuco, Recife, PE, Brazil.
   [Goncalves, Glauco] Univ Fed Rural Pernambuco, Recife, PE, Brazil.
   [Marquezini, Maria Valeria] Ericsson Telecomunicacoes SA, Sao Paulo, Brazil.
   [Mehta, Amardeep; Wildeman, Mattias] Ericsson Sweden, Stockholm, Sweden.
C3 Universidade de Pernambuco (UPE); Universidade Federal Rural de
   Pernambuco (UFRPE); Ericsson; Ericsson
RP Endo, PT (corresponding author), Univ Pernambuco, Recife, PE, Brazil.
EM patricia.endo@upe.br
RI Sadok, Djamel F Hadj/M-9814-2015; Kelner, Judith/C-6746-2009; Bezerra,
   Diego/AAD-2240-2020; Gonçalves, Glauco Estácio/H-4474-2011
OI Bezerra, Diego/0000-0002-9933-091X; Gonçalves, Glauco
   Estácio/0000-0003-1341-5339; Moreira, Andre/0000-0002-6437-0639; Endo,
   Patricia Takako/0000-0002-9163-5583
FU Research, Development and Innovation Center, Ericsson Telecomunicacoes
   S.A., Brazil
FX This work was supported by the Research, Development and Innovation
   Center, Ericsson Telecomunicacoes S.A., Brazil.
CR [Anonymous], MATH PROBL ENG
   [Anonymous], 2017, PERSPECTIVES IND MAS
   [Anonymous], 2014, P 3 WORKSH HOT TOP S, DOI DOI 10.1145/2620728.2620739
   Brondolin R, 2018, IEEE SYM PARA DISTR, P676, DOI 10.1109/IPDPSW.2018.00110
   Chircu A, 2019, P INT 2019 50 JAHR G
   Demetriou DW, 2019, ASHRAE J, V61, P52
   Endo PT, 2017, COMPUTER, V50, P86, DOI 10.1109/MC.2017.4041358
   Ferreira Leylane, 2020, IEEE Engineering Management Review, V48, P92, DOI 10.1109/EMR.2020.2969864
   Goncalves Glauco, 2019, IEEE Communications Standards Magazine, V3, P36, DOI 10.1109/MCOMSTD.2019.1800045
   Grinberg Miguel, 2018, Flask web development: developing web applications with python
   Herodotou H, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1689, DOI 10.1145/2623330.2623365
   Ji SH, 2019, IEEE T PARALL DISTR, V30, P2090, DOI 10.1109/TPDS.2019.2904058
   Kutare G., 2010, P 7 INT C AUT COMP J, P141
   Li J, 2022, IEEE T KNOWL DATA EN, V34, P50, DOI 10.1109/TKDE.2020.2981314
   Likas A, 2003, PATTERN RECOGN, V36, P451, DOI 10.1016/S0031-3203(02)00060-2
   Mendonça J, 2019, J SYST SOFTWARE, V149, P511, DOI 10.1016/j.jss.2018.12.023
   Petruti CM, 2018, ROEDUNET IEEE
   Puech Tom, 2019, INT WORKSHOP ADV ANA, P43
   Renita J, 2017, 2017 2ND IEEE INTERNATIONAL CONFERENCE ON WIRELESS COMMUNICATIONS, SIGNAL PROCESSING AND NETWORKING (WISPNET), P1904, DOI 10.1109/WiSPNET.2017.8300092
   Scharf M., 2012, 2012 16th International Conference on Intelligence in Next Generation Networks (ICIN 2012): Realising the Power of the Network, P80, DOI 10.1109/ICIN.2012.6376038
   Seabold S., 2010, 9 PYTH SCI C, P57, DOI [DOI 10.25080/MAJORA-92BF1922-011, 10.25080/MAJORA-92BF1922-011]
   Sukhija N., 2019, IEEE SMARTWORLD
   Vlachos M, 2005, SIAM PROC S, P449
NR 23
TC 1
Z9 1
U1 0
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 868
EP 892
DI 10.1002/spe.2934
EA NOV 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000590150700001
DA 2024-07-18
ER

PT J
AU Marimuthu, C
   Chimalakonda, S
   Chandrasekaran, K
AF Marimuthu, C.
   Chimalakonda, Sridhar
   Chandrasekaran, K.
TI How do open source app developers perceive API changes related to
   Android battery optimization? An empirical study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE android battery optimization; empirical study; GitHub issues; mining
   software repositories; thematic analysis
ID ENERGY-CONSUMPTION
AB There is an increasing interest shown by researchers and developers in reducing the battery consumption of Android applications. Recently, the battery optimization features such as doze mode, app standby, background execution limits, and background location limits were introduced in the form of API changes. According to the API changes, application developers have to change their source code to manage the behavioral changes caused by operating system limitations. These battery optimization features are evolving rapidly, and the apps show unexpected behaviors until updating the source code. Also, developers find it difficult to cope with the changes. Therefore, there is a need to understand the behavioral changes, application developer's perceptions, and response patterns on the API changes to plan upcoming battery optimization features. In this article, we have collected the relevant GitHub issues from 225 open-source Android repositories and performed a thematic analysis of collected data. This study analyzes the 391 related issues to answer three research questions. This study's important finding is that developers often post issues related to delayed app notifications, inconsistent background location updates, and suspended background tasks, and so on. We found that library developers are showing a quick response to API changes compared with application developers.
C1 [Marimuthu, C.; Chandrasekaran, K.] Natl Inst Technol Karnataka, Dept Comp Sci & Engn, Mangalore 575025, India.
   [Chimalakonda, Sridhar] Indian Inst Technol Tirupati, Dept Comp Sci & Engn, Tirupati, Andhra Pradesh, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Karnataka; Indian Institute of Technology System (IIT
   System); Indian Institute of Technology (IIT) - Tirupati
RP Marimuthu, C (corresponding author), Natl Inst Technol Karnataka, Dept Comp Sci & Engn, Mangalore 575025, India.
EM cs15fv08.muthu@nitk.edu.in
RI C, Marimuthu/AAT-9268-2021
OI C, Marimuthu/0000-0002-4905-0530
CR Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   [Anonymous], BACKGR EX LIM
   [Anonymous], BACKGR LOC LIM
   [Anonymous], OPT DOZ APP STANDB
   Banerjee A, 2018, IEEE T SOFTWARE ENG, V44, P470, DOI 10.1109/TSE.2017.2689012
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P127, DOI [10.1109/MobileSoft.2016.037, 10.1145/2897073.2897085]
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P139, DOI [10.1109/MobileSoft.2016.038, 10.1145/2897073.2897086]
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Bao LF, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P37, DOI [10.1145/2901739.2901748, 10.1109/MSR.2016.014]
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Braun V, 2013, Success Qual Res, V1st
   Chowdhury SA, 2019, PROC INT CONF SOFTW, P1107, DOI 10.1109/ICSE.2019.00114
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2209, DOI 10.1007/s10664-019-09682-0
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   FireBase, FIR CLOUD MESS
   Georgiou S, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3337773
   Hao S, 2013, INT SYM COMPUT INTEL, P59, DOI 10.1109/ISCID.2013.22
   Jabbarvand R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P208, DOI 10.1145/3106237.3106244
   Jagroep E, 2017, PROC INT CONF SOFTW, P76, DOI 10.1109/ICSE-SEIS.2017.10
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lamothe M, 2018, IEEE WORK CONF MIN S, P503, DOI 10.1145/3196398.3196420
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Lima C, 2020, SOFTWARE QUAL J, V28, P425, DOI 10.1007/s11219-019-09476-z
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Liu YP, 2014, IEEE T SOFTWARE ENG, V40, P911, DOI 10.1109/TSE.2014.2323982
   Malik H, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P418, DOI 10.1109/MSR.2015.53
   Marimuthu C, 2019, P 31 INT C SOFTW ENG, P553
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Moura I, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P56, DOI 10.1109/MSR.2015.13
   Palomba F, 2019, INFORM SOFTWARE TECH, V105, P43, DOI 10.1016/j.infsof.2018.08.004
   Pathak A., 2011, P 10 ACM WORKSH HOT, P1
   Pathak A, 2012, IEEE INT CONF NETWOR, P268, DOI 10.1109/ICON.2012.6506568
   Pereira R, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110463
   Pinto G., 2014, P 11 WORK C MIN SOFT, P22
   Pinto G., 2015, Proceedings of the 6th Workshop on Evaluation and Usability of Programming Languages and Tools, P39, DOI DOI 10.1145/2846680.2846687
   Rahman A, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P16, DOI 10.1145/3194760.3194769
   Repository G, 2019, REPOSITORY G ADV BAC
   Robbes R., 2012, P ACM SIGSOFT 20 INT, P1, DOI 10.1145/2393596.2393662
   Sahar H, 2019, SUSTAIN COMPUT-INFOR, V21, P28, DOI 10.1016/j.suscom.2018.10.005
   Salza P, 2020, EMPIR SOFTW ENG, V25, P2341, DOI 10.1007/s10664-019-09754-1
   Salza P, 2018, INT C PROGRAM COMPRE, P255, DOI 10.1145/3196321.3196341
   Sawant AA, 2019, EMPIR SOFTW ENG, V24, P3824, DOI 10.1007/s10664-019-09713-w
   Tahir Amjed, 2018, Proceedings of the 22nd International Conference on Evaluation and Assessment in Software Engineering 2018, P68
   User G, 2017, USER G HUAWEI BLOCKS
   User G, 2016, USER G SETREQUIRESDE
   User G, 2019, USER G SUPPORT BACKG
   User G, 2018, USER G ADDED ALARM C
   User G, 2017, USER G UPDATE README
   User G, 2016, USER G INTRO REQUEST
   User G, 2017, USER G ADD SUPPORT A
   User G, 2016, USER G ADDED INSTRUC
   User G, 2019, USER G LOCKSCREEN PL
   User G, 2017, USER G ANDROID HEART
   User G, 2019, USER G SCAN ONLY ONE
   User G, 2019, USER G LOCATION STAR
   User G, 2015, USER G QUESTION WHAT
   User G, 2019, USER G TRACKING STOP
   User G, 2016, USER G PLAYBACK STOP
   User G, 2018, USER G USING JOBINTE
   User G, 2019, USER G ANDROID PIE N
   User G, 2019, USER G DOES THIS LIB
   User G, 2019, USER G GEOFENCE NOT
   User G, 2019, USER G BEACON MONITO
   User G, 2017, USER G AUTODESTROY
   User G, 2019, USER G REGISTER BACK
   User G, 2019, USER G FREQUENCY LOC
   User G, 2019, USER G NOTIFICATIONS
   User G, 2016, USER G HIGH PRIORITY
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
NR 73
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2021
VL 51
IS 4
SI SI
BP 691
EP 710
DI 10.1002/spe.2928
EA NOV 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR8DY
UT WOS:000587154900001
DA 2024-07-18
ER

PT J
AU Zeng, F
   Yao, L
   Wu, BL
   Li, WJ
   Meng, L
AF Zeng, Feng
   Yao, Lan
   Wu, Baoling
   Li, Wenjia
   Meng, Lin
TI Dynamic human contact prediction based on naive Bayes algorithm in
   mobile social networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE clustering coefficient; features extraction; human contact prediction;
   mobile social networks; naive Bayes algorithm; time interval
ID LINK-PREDICTION
AB Human contact prediction is a challenging task in mobile social networks. The existing prediction methods are based on the static network structure, and directly applying these static prediction methods to dynamic network prediction is bound to reduce the prediction accuracy. In this paper, we extract some important features to predict human contacts and propose a novel human contact prediction method based on naive Bayes algorithm, which is suitable for dynamic networks. The proposed method takes the ever-changing structure of mobile social networks into account. First, the past time is partitioned into many periods with equal intervals, and each period has a feature matrix of all node pairs. Then, with the feature matrixes used for classifiers training based on naive Bayes algorithm, we can get a classifier for each time period. At last, the different weights are assigned to the classifiers according to their importance to contact prediction, and all classifiers are weighted combination into the final prediction classifier. The extensive experiments are conducted to verify the effectiveness and superiority of the proposed method, and the results show that the proposed method can improve the prediction accuracy and TP Rate to a large extent. Besides, we find that the size of time interval has a certain impact on the clustering coefficient of mobile social networks, which further affects the prediction accuracy.
C1 [Zeng, Feng; Wu, Baoling] Cent South Univ, Sch Comp Sci & Engn, Changsha 410083, Peoples R China.
   [Yao, Lan] Hunan Univ, Coll Math & Econometr, Changsha 410082, Peoples R China.
   [Li, Wenjia] New York Inst Technol, Dept Comp Sci, New York, NY USA.
   [Meng, Lin] Ritsumeikan Univ, Dept Elect & Comp Engn, Kusatsu, Japan.
C3 Central South University; Hunan University; New York Institute
   Technology; Ritsumeikan University
RP Zeng, F (corresponding author), Cent South Univ, Sch Comp Sci & Engn, Changsha 410083, Peoples R China.; Yao, L (corresponding author), Hunan Univ, Coll Math & Econometr, Changsha 410082, Peoples R China.
EM fengzeng@csu.edu.cn; yao@hnu.edu.cn
RI Meng, Lin/ABG-9888-2021; Li, Wenjia/H-4005-2015; Meng, Lin/JYQ-9584-2024
OI Meng, Lin/0000-0003-4351-6923; Meng, Lin/0000-0003-4351-6923; zeng,
   feng/0000-0002-1541-1326; Li, Wenjia/0000-0001-6059-6422
CR Adamic LA, 2003, SOC NETWORKS, V25, P211, DOI 10.1016/S0378-8733(03)00009-1
   Aggarwal CC, 2014, STAT ANAL DATA MIN, V7, P14, DOI 10.1002/sam.11198
   AlHasan M, 2006, SDM06, P798
   [Anonymous], 2007, 7 IEEE INT C DAT MIN
   [Anonymous], PREDICTING REAL WORL
   Berlusconi G, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0154244
   Bogua Mari, 2007, J STAT PHYS, V126, P419
   Daly E, 2007, MOBIHOC'07: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL SYMPOSIUM ON MOBILE AD HOC NETWORKING AND COMPUTING, P32
   De Sa HR, 2011, 2011 INT JOINT C NEU
   Eagle N, 2007, P NATL ACAD SCI PNAS
   Huang Z., 2010, Link prediction based on graph topology: The predictive value of generalized clustering coefficient, DOI [10.2139/ssrn.1634014, DOI 10.2139/SSRN.1634014]
   Hui P, 2008, MOBIHOC'08: PROCEEDINGS OF THE NINTH ACM INTERNATIONAL SYMPOSIUM ON MOBILE AD HOC NETWORKING AND COMPUTING, P241, DOI 10.1145/1374618.1374652
   Jaccard P., 1901, B SOC VAUD SCI NAT, V37, P547, DOI DOI 10.5169/SEALS-266450
   Jahanbakhsh K, 2010, P 2010 IEEE ACM INT
   Jahanbakhsh K, 2011, 2011 IEEE INT S WORL
   Jahanbakhsh K, 2012, PERVASIVE MOB COMPUT, V8, P698, DOI 10.1016/j.pmcj.2012.07.007
   Liben-Nowell D, 2007, J AM SOC INF SCI TEC, V58, P1019, DOI 10.1002/asi.20591
   Lichtenwalter Ryan N, 2010, P 16 ACM SIGKDD INT, P243, DOI [10.1145/1835804.1835837, DOI 10.1145/1835804.1835837]
   Lu YD, 2017, BMC BIOINFORMATICS, V18, DOI 10.1186/s12859-017-1460-z
   Lü LY, 2009, PHYS REV E, V80, DOI 10.1103/PhysRevE.80.046122
   Meng Y, 2019 IEEE 13 INT C S, DOI [10.1109/ICOSC.2019.8665664, DOI 10.1109/IC0SC.2019.8665664]
   Mtibaa A., 2008, Proc. first Work. Online Soc. networks - WOSP'08, P67
   Samad A, 2017, INT CONF EMERG TECHN
   Scholz C, 2013, P 2013 IEEE ACM INT
   Sirisup C, 2018 INT JOINT S ART, DOI [10.1109/iSAI-NLP.2018.8692951, DOI 10.1109/ISAI-NLP.2018.8692951]
   Vert J-P, 2005, ADV NEUR INF PROC SY
   Wang Dashun, 2011, P 17 ACM SIGKDD INT, P1100, DOI DOI 10.1145/2020408.2020581
   Zeng F, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17051109
   Zhou T, 2009, EUR PHYS J B, V71, P623, DOI 10.1140/epjb/e2009-00335-8
NR 29
TC 4
Z9 4
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2020
VL 50
IS 11
SI SI
BP 2031
EP 2045
DI 10.1002/spe.2727
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NW3WG
UT WOS:000574940300003
DA 2024-07-18
ER

PT J
AU Akram, J
   Luo, P
AF Akram, Junaid
   Luo, Ping
TI SQVDT: A scalable quantitative vulnerability detection technique for
   source code security assessment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big code; clone detection; code vulnerability detection; software reuse;
   software security and maintenance
ID SOFTWARE; CLONES
AB Vulnerability detection and exploit is becoming a very important part of security, especially in malware code delivery, hacking a system, efforts to create patches, improving the source code, or updating a software. Vulnerabilities in applications, including browsers, media players, online services, document readers, and so forth. are often exploited and cause a serious damage. In this article, we propose a vulnerability detection technique to detect vulnerabilities in software, as well as shared libraries at source code level. We crawl the vulnerable source code by tracing and locating the patch files from different web sources according to their CVE-numbers and built a fingerprint index of 2931 vulnerable files. Then we developed a vulnerability detection approach based on code clone detection technique and detect hundreds of vulnerabilities in thousands of GitHub open source projects, which are not noticed before as vulnerable. We detected vulnerabilities in some very famous recently available software, including latest version of Linux, HTC-kernel, FindX-8.1-kernel, and in 7-TB of C/C++ source code (152,823 open source projects). In this study, we discuss some of the very high severity level (CVSS) vulnerabilities that are detected by our approach. Furthermore, we performed an empirical evaluation and verification on these vulnerabilities, including intraproject clone vulnerabilities, copied-kernel clone vulnerabilities, and library-used clone vulnerabilities. Our technique is very fast, efficient, reliable, practical, scalable, and can be implemented at industrial level. The comparison with the state-of-the-art tools shows the effectiveness of our approach.
C1 [Akram, Junaid; Luo, Ping] Tsinghua Univ, Sch Software, Key Lab Informat Syst Secur, Beijing, Peoples R China.
C3 Tsinghua University
RP Akram, J (corresponding author), Tsinghua Univ, Sch Software, Key Lab Informat Syst Secur, Beijing, Peoples R China.
EM znd15@tsinghua.org.cn
RI Akram, Junaid/AAX-2254-2020
OI Akram, Junaid/0000-0003-1752-6124
CR AKRAM J, 2019, INT J INF COMPUT SEC, V11, P1
   Akram J, 2020, IET INFORM SECUR, V14, P60, DOI 10.1049/iet-ifs.2018.5647
   Akram J, 2020, SOFTWARE PRACT EXPER, V50, P22, DOI 10.1002/spe.2759
   Akram J, 2019, IEEE INT CONF SOFTW, P402, DOI 10.1109/ICST.2019.00049
   Akram J, 2018, P INT COMP SOFTW APP, P100, DOI 10.1109/COMPSAC.2018.00021
   Akram Junaid, 2018, P SEKE 2018 30 INT C, P354
   Alhazmi OH, 2007, COMPUT SECUR, V26, P219, DOI 10.1016/j.cose.2006.10.002
   Alqahtani SS, 2016, SCI COMPUT PROGRAM, V121, P153, DOI 10.1016/j.scico.2016.01.005
   Avery J, 2018, COMPUT SECUR, V75, P182, DOI 10.1016/j.cose.2018.02.009
   Brumley D, 2008, P IEEE S SECUR PRIV, P143, DOI 10.1109/SP.2008.17
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chen W, 2012, 2012 2ND INTERNATIONAL CONFERENCE ON APPLIED SOCIAL SCIENCE (ICASS 2012), VOL 4, P317
   Gorbenko A, 2017, PROC INT SYMP SOFTW, P205, DOI 10.1109/ISSRE.2017.20
   Guo H, 2016, INT CONF INSTR MEAS, P366, DOI 10.1109/IMCCC.2016.21
   Jabeen G., 2019, PROC 31 INT C SOFTW, P349
   Jang JY, 2012, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2012.13
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jogi VD, 2016, 2016 3RD INTERNATIONAL CONFERENCE ON RECENT ADVANCES IN INFORMATION TECHNOLOGY (RAIT), P586, DOI 10.1109/RAIT.2016.7507964
   Johnston R, 2019, RELIAB ENG SYST SAFE, V183, P341, DOI 10.1016/j.ress.2018.11.030
   Juergens E, 2009, PROC INT CONF SOFTW, P603, DOI 10.1109/ICSE.2009.5070566
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Kim S, 2018, COMPUT SECUR, V77, P720, DOI 10.1016/j.cose.2018.02.007
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Li ZH, 2016, PROCEEDINGS OF THE 12TH EURO-ASIA CONFERENCE ON ENVIRONMENT AND CSR: TOURISM, SOCIETY AND EDUCATION SESSION, PT II, P201
   Liu Z, 2017, 2017 IEEE 3RD INFORMATION TECHNOLOGY AND MECHATRONICS ENGINEERING CONFERENCE (ITOEC), P548, DOI 10.1109/ITOEC.2017.8122356
   Mumtaz Majid, 2019, 2019 IEEE 21st International Conference on High Performance Computing and Communications; IEEE 17th International Conference on Smart City; IEEE 5th International Conference on Data Science and Systems (HPCC/SmartCity/DSS). Proceedings, P758, DOI 10.1109/HPCC/SmartCity/DSS.2019.00112
   Nappa A, 2015, P IEEE S SECUR PRIV, P692, DOI 10.1109/SP.2015.48
   Ng YY, 2014, P INT COMP SOFTW APP, P509, DOI 10.1109/COMPSAC.2014.95
   Sajnani H, 2015, J SOFTW-EVOL PROC, V27, P402, DOI 10.1002/smr.1707
   Sharma R, 2019, ADV INTELL SYST, V731, P533, DOI 10.1007/978-981-10-8848-3_51
   Sheneamer A., 2016, INT J COMPUT APPL, V137, P975, DOI [10.1109/MITICON.2016.8025227, DOI 10.1109/MITICON.2016.8025227]
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 34
TC 6
Z9 7
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 294
EP 318
DI 10.1002/spe.2905
EA OCT 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000574171300001
DA 2024-07-18
ER

PT J
AU Gu, ZQ
   Zhu, Y
   Wang, YX
   Du, XJ
   Guizani, M
   Tian, ZH
AF Gu, Zhaoquan
   Zhu, Yan
   Wang, Yuexuan
   Du, Xiaojiang
   Guizani, Mohsen
   Tian, Zhihong
TI Applying artificial bee colony algorithm to the multidepot vehicle
   routing problem
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE artificial bee colony algorithm; coevolution strategy; depot clustering;
   multidepot vehicle routing problem
ID KEY MANAGEMENT SCHEME; ANOMALY DETECTION; COMPLEXITY; FRAMEWORK;
   NETWORK; DEPOT
AB With advanced information technologies and industrial intelligence, Industry 4.0 has been witnessing a large scale digital transformation. Intelligent transportation plays an important role in the new era and the classic vehicle routing problem (VRP), which is a typical problem in providing intelligent transportation, has been drawing more attention in recent years. In this article, we study multidepot VRP (MDVRP) that considers the management of the vehicles and the optimization of the routes among multiple depots, making the VRP variant more meaningful. In addressing the time efficiency and depot cooperation challenges, we apply the artificial bee colony (ABC) algorithm to the MDVRP. To begin with, we degrade MDVRP to single-depot VRP by introducing depot clustering. Then we modify the ABC algorithm for single-depot VRP to generate solutions for each depot. Finally, we propose a coevolution strategy in depot combination to generate a complete solution of the MDVRP. We conduct extensive experiments with different parameters and compare our algorithm with a greedy algorithm and a genetic algorithm (GA). The results show that the ABC algorithm has a good performance and achieve up to 70% advantage over the greedy algorithm and 3% advantage over the GA.
C1 [Gu, Zhaoquan; Tian, Zhihong] Guangzhou Univ, Cyberspace Inst Adv Technol, Guangzhou, Peoples R China.
   [Zhu, Yan] Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Wang, Yuexuan] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
   [Du, Xiaojiang] Temple Univ, Dept Comp & Informat Sci, Philadelphia, PA 19122 USA.
   [Guizani, Mohsen] Qatar Univ, Comp Sci & Engn Dept, Doha, Qatar.
C3 Guangzhou University; University of Hong Kong; Zhejiang University;
   Pennsylvania Commonwealth System of Higher Education (PCSHE); Temple
   University; Qatar University
RP Tian, ZH (corresponding author), Guangzhou Univ, Cyberspace Inst Adv Technol, Guangzhou, Peoples R China.
EM tianzhihong@gzhu.edu.cn
RI Guizani, Mohsen/AAX-4534-2021
OI Guizani, Mohsen/0000-0002-8972-8094; tian, zhihong/0000-0002-9409-5359;
   Zhu, Yan/0000-0002-4963-160X
FU Guangdong Province Universities and Colleges Pearl River Scholar Funded
   Scheme; National key research and development program of china
   [2018YFB1004003]; National Natural Science Foundation of China
   [U1636215]
FX Guangdong Province Universities and Colleges Pearl River Scholar Funded
   Scheme (2019); National key research and development program of china,
   Grant/Award Number: 2018YFB1004003; National Natural Science Foundation
   of China, Grant/Award Number: U1636215
CR [Anonymous], 1995, THESIS
   [Anonymous], 2008, INT J ELECT POWER EN
   [Anonymous], BIOINSPIRED ALGORITH
   [Anonymous], 2010, 2010 INT C POWER SYS
   Archetti C, 2011, TRANSPORT RES C-EMER, V19, P741, DOI 10.1016/j.trc.2009.12.006
   Aujla GS, 2017, IEEE COMMUN MAG, V55, P100, DOI 10.1109/MCOM.2017.1601224
   BALINSKI ML, 1964, OPER RES, V12, P300, DOI 10.1287/opre.12.2.300
   Bramel J, 2002, SIAM MONOG DISCR MAT, P85
   Chen P, 2010, EXPERT SYST APPL, V37, P1620, DOI 10.1016/j.eswa.2009.06.047
   CHRISTOF.N, 1969, OPER RES QUART, V20, P309, DOI 10.2307/3008733
   CHRISTOFIDES N, 1981, MATH PROGRAM, V20, P255, DOI 10.1007/BF01589353
   CLARKE G, 1964, OPER RES, V12, P568, DOI 10.1287/opre.12.4.568
   DANTZIG GB, 1959, MANAGE SCI, V6, P80, DOI 10.1287/mnsc.6.1.80
   Du XJ, 2007, IEEE ICC, P3407, DOI 10.1109/ICC.2007.564
   Du XJ, 2008, IEEE WIREL COMMUN, V15, P60, DOI 10.1109/MWC.2008.4599222
   Du XJ, 2007, AD HOC NETW, V5, P24, DOI 10.1016/j.adhoc.2006.05.012
   Dua A, 2018, IEEE GLOB COMM CONF
   Garg S, 2020, FUTURE GENER COMP SY, V104, P105, DOI 10.1016/j.future.2019.09.038
   Garg S, 2020, J PARALLEL DISTR COM, V135, P219, DOI 10.1016/j.jpdc.2019.09.013
   Garg S, 2019, IEEE T NETW SERV MAN, V16, P924, DOI 10.1109/TNSM.2019.2927886
   Irani R, 2011, J PETROL SCI ENG, V78, P6, DOI 10.1016/j.petrol.2011.05.006
   Iwendi C, 2021, SOFTWARE PRACT EXPER, V51, P2558, DOI 10.1002/spe.2797
   Jindal A, 2018, IEEE NETWORK, V32, P66, DOI 10.1109/MNET.2018.1800101
   Karaboga D., 2005, Technical Report-TR06
   Kool W., 2019, P INT C LEARN REPR
   Kytöjoki J, 2007, COMPUT OPER RES, V34, P2743, DOI 10.1016/j.cor.2005.10.010
   LAPORTE G, 1986, NETWORKS, V16, P33, DOI 10.1002/net.3230160104
   LAPORTE G, 1988, TRANSPORT SCI, V22, P161, DOI 10.1287/trsc.22.3.161
   LAPORTE G, 1985, OPER RES, V33, P1050, DOI 10.1287/opre.33.5.1050
   LENSTRA JK, 1981, NETWORKS, V11, P221, DOI 10.1002/net.3230110211
   Li JQ, 2011, INT J ADV MANUF TECH, V55, P1159, DOI 10.1007/s00170-010-3140-2
   MALANDRAKI C, 1992, TRANSPORT SCI, V26, P185, DOI 10.1287/trsc.26.3.185
   Mezni H, 2018, SOFTWARE PRACT EXPER, V48, P1285, DOI 10.1002/spe.2575
   Nazari M, 2018, ADV NEUR IN, V31
   Osman I. H., 1993, Annals of Operations Research, V41, P421, DOI 10.1007/BF02023004
   Prins C, 2004, COMPUT OPER RES, V31, P1985, DOI 10.1016/S0305-0548(03)00158-8
   Singh A, 2011, SOFT COMPUT, V15, P2489, DOI 10.1007/s00500-011-0711-6
   SOLOMON MM, 1988, TRANSPORT SCI, V22, P1, DOI 10.1287/trsc.22.1.1
   Szeto WY, 2011, EUR J OPER RES, V215, P126, DOI 10.1016/j.ejor.2011.06.006
   Tian ZH, 2019, INFORM SCIENCES, V491, P151, DOI 10.1016/j.ins.2019.04.011
   Tian ZH, 2019, FUTURE GENER COMP SY, V95, P212, DOI 10.1016/j.future.2018.12.054
   Toth P, 2014, MOS-SIAM SER OPTIMIZ, P1
   Urra E, 2019, SOFTWARE PRACT EXPER, V49, P971, DOI 10.1002/spe.2690
   Vidal T, 2012, OPER RES, V60, P611, DOI 10.1287/opre.1120.1048
   Yang XS, 2005, LECT NOTES COMPUT SC, V3562, P317
   Yao BZ, 2010, KEY TECHNOLOGIES OF RAILWAY ENGINEERING - HIGH SPEED RAILWAY, HEAVY HAUL RAILWAY AND URBAN RAIL TRANSIT, P747
   Yu B, 2009, EUR J OPER RES, V196, P171, DOI 10.1016/j.ejor.2008.02.028
NR 47
TC 13
Z9 15
U1 9
U2 62
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2022
VL 52
IS 3
SI SI
BP 756
EP 771
DI 10.1002/spe.2838
EA APR 2020
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA YS2YA
UT WOS:000528749500001
DA 2024-07-18
ER

PT J
AU de Oliveira, EM
   Estrella, JC
   Delbem, ACB
   Pardo, MHS
   da Costa, FG
   Defelicibus, A
   Reiff-Marganiec, S
AF de Oliveira, Edvard Martins
   Estrella, Julio Cezar
   Botazzo Delbem, Alexandre Claudio
   Souza Pardo, Mario Henrique
   da Costa, Fausto Guzzo
   Defelicibus, Alexandre
   Reiff-Marganiec, Stephan
TI Optimizing computational resource management for the scientific gateways
   ecosystems based on the service-oriented paradigm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE optimization; protein structure prediction; science gateways; scientific
   workflow; service-oriented architecture; WorkflowSim
ID SCIENCE GATEWAYS; WEB SERVICES; CLOUD; WORKFLOWS; PLATFORM; GALAXY
AB Science Gateways provide portals for experiments execution, regardless of the users' computational background. Nowadays its construction and performance need enhancement in terms of resource provision and task scheduling. We present the Modular Distributed Architecture to support the Protein Structure Prediction (MDAPSP), a Service-Oriented Architecture for management and construction of Science Gateways, with resource provisioning on a heterogeneous environment. The Decision Maker, central module of MDAPSP, defines the best computational environment according to experiment parameters. The proof of concept for MDAPSP is presented in WorkflowSim, with two novel schedulers. Our results demonstrate good Quality of Service (QoS), capable of correctly distributing the workload, fair response times, providing load balance, and overall system improvement. The study case relies on PSP algorithms and the Galaxy framework, with monitoring experiments to show the bottlenecks and critical aspects.
C1 [de Oliveira, Edvard Martins] Univ Fed Itajuba, lIESTI, Ave BPS 1303, BR-37500903 Itajuba, MG, Brazil.
   [Estrella, Julio Cezar; Botazzo Delbem, Alexandre Claudio; Souza Pardo, Mario Henrique; da Costa, Fausto Guzzo] Univ Sao Paulo, ICMC, Sao Paulo, Brazil.
   [Defelicibus, Alexandre] AC Camargo Canc Ctr, Sao Paulo, Brazil.
   [Reiff-Marganiec, Stephan] Univ Derby, Dept Elect Comp & Math, Derby, England.
C3 Universidade Federal de Itajuba; Universidade de Sao Paulo; A.C.Camargo
   Cancer Center; University of Derby
RP de Oliveira, EM (corresponding author), Univ Fed Itajuba, lIESTI, Ave BPS 1303, BR-37500903 Itajuba, MG, Brazil.
EM edvard@unifei.edu.br
RI Defelicibus, Alexandre/JMA-9822-2023; Estrella, Julio
   Cezar/AAP-4484-2020; Delbem, Alexandre C B/A-9287-2008; Defelicibus,
   Alexandre/JMA-9721-2023
OI Defelicibus, Alexandre/0000-0002-3484-6317; Estrella, Julio
   Cezar/0000-0003-0524-3274; Delbem, Alexandre C B/0000-0003-1810-1742;
   Defelicibus, Alexandre/0000-0002-3484-6317; Reiff-Marganiec,
   Stephan/0000-0001-6456-7063; Martins de Oliveira,
   Edvard/0000-0002-2842-2155
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [165009/2015-2]; Fundacao de Amparo a Pesquisa do Estado de Sao Paulo
   [2013/07375-0]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Number: 165009/2015-2; Fundacao de Amparo a Pesquisa do
   Estado de Sao Paulo (at CEMEAI), Grant/Award Number: 2013/07375-0
CR Abu-Mostafa Y. S., 2012, LEARNING FROM DATA, V4
   Afgan E, 2016, NUCLEIC ACIDS RES, V44, pW3, DOI 10.1093/nar/gkw343
   Afgan E, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0140829
   Aggarwal CC, 2015, OUTLIER ANAL, DOI DOI 10.1007/978-3-319-14142-8
   Alm E, 1999, P NATL ACAD SCI USA, V96, P11305, DOI 10.1073/pnas.96.20.11305
   [Anonymous], 2013, P INT WORKSHOP MULTI, DOI DOI 10.1145/2462326.2462339
   AUPY G, 2016, INT J NETW COMPUT, V6, P2, DOI DOI 10.15803/IJNC.6.1_2
   Balasko A, 2013, COMPUT SCI-AGH, V14, P307, DOI 10.7494/csci.2013.14.2.307
   Bhagat J, 2010, NUCLEIC ACIDS RES, V38, pW689, DOI 10.1093/nar/gkq394
   BHATNAGAR R, 2013, INT J EMERGING TECHN, V3, P362
   Butnaru D., 2012, Proceedings of the 2012 11th International Symposium on Parallel and Distributed Computing (ISPDC 2012), P203, DOI 10.1109/ISPDC.2012.35
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Cassidy S, 2017, COMPUT SPEECH LANG, V45, P375, DOI 10.1016/j.csl.2017.01.003
   Chard R, 2015, P IEEE INT C E-SCI, P136, DOI 10.1109/eScience.2015.67
   Chatterjee S, 2016, INT CONF COMPUT INFO, P321, DOI 10.1109/ICCITECHN.2016.7860217
   Chen WW, 2013, P IEEE INT C E-SCI, P188, DOI 10.1109/eScience.2013.40
   CHEN Y, P INT C COMP DES APP, V2, pV2319
   Cheng WD, 2012, STRUCT BOND, V144, P1, DOI [10.1007/430_2011_64, 10.1109/ICADE.2012.6330087]
   Cock PJA, 2013, PEERJ, V1, DOI 10.7717/peerj.167
   Cuccuru G, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P600, DOI 10.1109/HPCSim.2014.6903742
   de Oliveira EM, 2017, 2017 11TH IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE), P108, DOI 10.1109/SOSE.2017.15
   de Oliveira EM, 2017, INT SYMPOS COMPUT NE, P298, DOI 10.1109/CANDAR.2017.100
   DEFELICIBUS A, 2016, THESIS
   Faccioli R. A., 2014, International Journal of Natural Computing Research, V4, P43, DOI 10.4018/ijncr.2014010104
   Fan J, 2015, MOL CELL PROTEOMICS, V14, P3087, DOI 10.1074/mcp.O115.048777
   Fang YQ, 2019, PROCEEDINGS OF 2019 IEEE 3RD INFORMATION TECHNOLOGY, NETWORKING, ELECTRONIC AND AUTOMATION CONTROL CONFERENCE (ITNEC 2019), P852, DOI [10.1109/ITNEC.2019.8728996, 10.1109/itnec.2019.8728996]
   FLANAGAN MT, 2016, MT FLANAGANS JAVA SC
   Gannon D, 2005, LECT NOTES COMPUT SC, V3826, P21
   Giacomoni F, 2015, BIOINFORMATICS, V31, P1493, DOI 10.1093/bioinformatics/btu813
   Giardine B, 2005, GENOME RES, V15, P1451, DOI 10.1101/gr.4086505
   HILTEMANN S, 2014, GIGASCIENCE, V3
   Hoogstrate Youri, 2016, F1000Res, V5, DOI 10.12688/f1000research.10221.1
   HOQUE MT, 2006, P IEEE C EV COMP, P2339
   HUNTER J, 2014, JDOM
   Jagtap PD, 2014, J PROTEOME RES, V13, P5898, DOI 10.1021/pr500812t
   Jones E., 2001, SciPy: Open source scientific tools for Python
   Kail E, 2015, 2015 IEEE 10TH JUBILEE INTERNATIONAL SYMPOSIUM ON APPLIED COMPUTATIONAL INTELLIGENCE AND INFORMATICS (SACI), P233, DOI 10.1109/SACI.2015.7208205
   Kaur G, 2017, PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, DATA SCIENCE AND ENGINEERING (CONFLUENCE 2017), P276, DOI 10.1109/CONFLUENCE.2017.7943162
   Kim Sungchan., 2011, ADMS, DOI DOI 10.1109/ISQED.2011.5770812
   KOMATSU K, 2017, INT J NETW COMPUT, V7, P405
   Kugler K, 2014, P IEEE INT C E-SCI, P13, DOI 10.1109/eScience.2014.26
   Liang B, 2019, PROCEEDINGS OF 2019 IEEE 3RD INFORMATION TECHNOLOGY, NETWORKING, ELECTRONIC AND AUTOMATION CONTROL CONFERENCE (ITNEC 2019), P180, DOI [10.1109/ITNEC.2019.8729201, 10.1109/itnec.2019.8729201]
   Lin WW, 2014, SOFTWARE PRACT EXPER, V44, P163, DOI 10.1002/spe.2163
   Liu B, 2014, J BIOMED INFORM, V49, P119, DOI 10.1016/j.jbi.2014.01.005
   Lucas-Simarro JL, 2013, FUTURE GENER COMP SY, V29, P1431, DOI 10.1016/j.future.2012.01.007
   Madduri R, 2015, CONCURR COMP-PRACT E, V27, P4344, DOI 10.1002/cpe.3486
   Mandal A, 2016, IEEE SYM PARA DISTR, P1370, DOI 10.1109/IPDPSW.2016.202
   Massie ML, 2004, PARALLEL COMPUT, V30, P817, DOI 10.1016/j.parco.2004.04.001
   MATH C, 2016, APACHE COMMONS MATH
   Mojab SZM, 2019, 2019 IEEE FIFTH INTERNATIONAL CONFERENCE ON BIG DATA COMPUTING SERVICE AND APPLICATIONS (IEEE BIGDATASERVICE 2019), P99, DOI 10.1109/BigDataService.2019.00020
   Narang P, 2014, BMC SYST BIOL, V8, DOI 10.1186/s12918-014-0130-2
   OHNO K, 2016, INT J NETW COMPUT, V6, P290
   Oliveira EM, 2014, INT CONF NETW SER, P37, DOI 10.1109/CNSM.2014.7014139
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Perera Srinath, 2008, 2008 IEEE Fourth International Conference on eScience, P402, DOI 10.1109/eScience.2008.90
   Senturk IF, 2018, FUTURE GENER COMP SY, V78, P379, DOI 10.1016/j.future.2016.06.008
   Simonet A, 2015, 23RD EUROMICRO INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED, AND NETWORK-BASED PROCESSING (PDP 2015), P269, DOI 10.1109/PDP.2015.76
   Singh S, 2016, J GRID COMPUT, V14, P217, DOI 10.1007/s10723-015-9359-2
   Singh S, 2015, COMPUT ELECTR ENG, V47, P138, DOI 10.1016/j.compeleceng.2015.02.003
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Pardo MHS, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0158291
   Thiel WH, 2016, MOL THER-NUCL ACIDS, V5, DOI 10.1038/mtna.2016.54
   Varghese B, 2018, FUTURE GENER COMP SY, V79, P849, DOI 10.1016/j.future.2017.09.020
   VINOTHINA V, 2017, P 2017 IEEE INT C CU, P1, DOI DOI 10.1109/ICCTAC.2017.8249991
   Wang CF, 2015, SCI REP-UK, V5, DOI 10.1038/srep14294
   Wolstencroft K, 2013, NUCLEIC ACIDS RES, V41, pW557, DOI 10.1093/nar/gkt328
   YAMAGIWA S, 2012, INT J NETWORKING COM, V2, P188, DOI DOI 10.15803/IJNC.2.2_188
   Yang C, 2018, 2018 IEEE 3RD INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA ANALYSIS (ICCCBDA), P6, DOI [10.1109/ICCCBDA.2018.8386458, 10.1109/ICSSE.2018.8520188]
NR 68
TC 0
Z9 0
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2020
VL 50
IS 6
BP 899
EP 924
DI 10.1002/spe.2808
EA FEB 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK4IJ
UT WOS:000516391000001
DA 2024-07-18
ER

PT J
AU Liu, RC
   Ji, GL
   Su, MJ
AF Liu, Richen
   Ji, Genlin
   Su, Mingjun
TI Domain-specific visualization system based on automatic multiseed
   recommendations: Extracting stratigraphic structures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE domain-specific system; scientific data visualization; seismic
   visualization; visualization tool
ID BLOB DETECTION; SEISMIC DATA; ATTRIBUTES
AB Underground flow path (UFP) is one of the most significant stratigraphic structures in revealing the distribution of oil or gas from seismic data. We design a domain-specific visualization system to extract the stratigraphic structures by seed point tracing and explore the seismic data by graph interactions. The seeds are automatically generated by kernel function-based density gradients computation. Users are allowed to adjust the recommended seeds by fine-tuning them with visual interactions. The seeds are further merged by a weighted quick-union algorithm to get the link information to construct a graph. Different types of nodes in the graph are designed to enable users to explore the extracted UFP structures intuitively. Finally, we evaluated the proposed approach by performance tests, sensitivity tests, and ground truth tests. The feedback from the domain experts demonstrates that the proposed visualization tool improved the capability of revealing the distribution and geostructures of UFPs compared with the existing methods.
C1 [Liu, Richen; Ji, Genlin] Nanjing Normal Univ, Sch Comp Sci & Technol, 1Wenyuan Rd, Nanjing 210023, Jiangsu, Peoples R China.
   [Su, Mingjun] PetroChina, Res Inst Explorat & Dev, Lanzhou, Gansu, Peoples R China.
C3 Nanjing Normal University; China National Petroleum Corporation
RP Liu, RC (corresponding author), Nanjing Normal Univ, Sch Comp Sci & Technol, 1Wenyuan Rd, Nanjing 210023, Jiangsu, Peoples R China.
EM richen@pku.edu.cn
RI Liu, Richen/AAB-2890-2022
OI Liu, Richen/0000-0002-5321-098X
FU National Natural Science Foundation of China (NSFC) [61702271, 41971343,
   61702270]
FX National Natural Science Foundation of China (NSFC), Grant/Award Number:
   61702271, 41971343, and 61702270
CR Amorim R, 2012, P INT S SKETCH BAS I, P1
   [Anonymous], 2017, INT ENERGY OUTLOOK 2
   Aziz IA, 2008, INT S INF TECHN KUAL
   Boykov Y, 2006, INT J COMPUT VISION, V70, P109, DOI 10.1007/s11263-006-7934-5
   Correa CD, 2008, IEEE T VIS COMPUT GR, V14, P1380, DOI 10.1109/TVCG.2008.162
   Danker A. J., 1981, IEEE Transactions on Pattern Analysis and Machine Intelligence, VPAMI-3, P79, DOI 10.1109/TPAMI.1981.4767053
   DECANI JS, 1986, AM STAT, V40, P220, DOI 10.2307/2684541
   dos Santos WHS, 2018, IEEE INT C ART INT V
   Elmqvist N, 2008, IEEE T VIS COMPUT GR, V14, P1095, DOI 10.1109/TVCG.2008.59
   EPANECHN.VA, 1969, THEOR PROBAB APPL+, V14, P153, DOI 10.1137/1114019
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Faraklioti M, 2004, MACH VISION APPL, V15, P216, DOI 10.1007/s00138-004-0151-8
   FUKUNAGA K, 1975, IEEE T INFORM THEORY, V21, P32, DOI 10.1109/TIT.1975.1055330
   Gao M, 2019, 10 INT C IM GRAPH BE
   Gao M, 2019, J ELECTRON IMAGING, V28, DOI 10.1117/1.JEI.28.2.021009
   Gibson NH, 2003, TRANSPORT RES REC, P3, DOI 10.3141/1860-01
   Gluyas J.G., 2004, Petroleum geoscience
   Guo H, 2013, IEEE PAC VIS S SYDN
   Guo HQ, 2011, IEEE T VIS COMPUT GR, V17, P2106, DOI 10.1109/TVCG.2011.261
   Hollt T, 2011, IEEE PAC VIS S HONG
   JACQUEMIN P., 2005, SEG EXP ABSTR, V24, P755
   Jeong W-K, 2006, EUR IEEE VGTC WORKSH
   Kadlec BJ, 2010, IEEE COMPUT GRAPH, V30, P30, DOI 10.1109/MCG.2010.13
   Kong H, 2013, IEEE T CYBERNETICS, V43, P1719, DOI 10.1109/TSMCB.2012.2228639
   Lidal E, 2013, WORKSH VIS ENV SCI E
   Lidal EM, 2013, COMPUT GRAPH-UK, V37, P445, DOI 10.1016/j.cag.2013.01.010
   LINDEBERG T, 1990, IEEE T PATTERN ANAL, V12, P234, DOI 10.1109/34.49051
   Liu RC, 2019, J IMAGING SCI TECHN, V63, DOI 10.2352/J.ImagingSci.Technol.2019.63.6.060505
   Liu RC, 2018, J VISUAL LANG COMPUT, V48, P81, DOI 10.1016/j.jvlc.2018.07.004
   Liu RC, 2014, J VISUAL-JAPAN, V17, P157, DOI 10.1007/s12650-014-0207-4
   Marfurt KJ, 1998, GEOPHYSICS, V63, P1150, DOI 10.1190/1.1444415
   McClymont AF, 2008, GEOPHYSICS, V73, pB11, DOI 10.1190/1.2825408
   Natali M, 2012, 25 SIBGRAPI C GRAPH
   Natali M, 2014, COMPUT GEOSCI-UK, V67, P40, DOI 10.1016/j.cageo.2014.02.010
   Owada S, 2005, P ACM S INT 3D GRAPH
   Patel D, 2010, IEEE PAC VIS S TAIP
   Patel D, 2009, COMPUT GRAPH-UK, V33, P585, DOI 10.1016/j.cag.2009.06.005
   Sherbondy A, 2003, IEEE VIS SEATTL WA
   Silverman, 2018, DENSITY ESTIMATION S, DOI 10.1201/9781315140919
   Tawara T, 2011, HDB AUGMENTED REALIT
   Witkin AP, 1983, 8 INT JOINT C ART IN
   Xiang DH, 2011, IEEE T VIS COMPUT GR, V17, P1295, DOI 10.1109/TVCG.2010.239
   Xu JC, 2018, COMPUT GEOSCI-UK, V111, P272, DOI 10.1016/j.cageo.2017.11.020
   Yuan XR, 2005, VISUAL COMPUT, V21, P745, DOI 10.1007/s00371-005-0330-2
   Zhou L, 2014, EUR C VIS SWANS UK
NR 45
TC 6
Z9 6
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2020
VL 50
IS 2
BP 98
EP 115
DI 10.1002/spe.2768
EA NOV 2019
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KA5NF
UT WOS:000496588400001
DA 2024-07-18
ER

PT J
AU Kilinc, D
AF Kilinc, Deniz
TI A spark-based big data analysis framework for real-time sentiment
   prediction on streaming data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Big Data machine learning; fake account detection; real-time sentiment
   analysis; streaming data; Twitter streaming
AB There are many data sources that produce large volumes of data. The Big Data nature requires new distributed processing approaches to extract the valuable information. Real-time sentiment analysis is one of the most demanding research areas that requires powerful Big Data analytics tools such as Spark. Prior literature survey work has shown that, though there are many conventional sentiment analysis researches, there are only few works realizing sentiment analysis in real time. One major point that affects the quality of real-time sentiment analysis is the confidence of the generated data. In more clear terms, it is a valuable research question to determine whether the owner that generates sentiment is genuine or not. Since data generated by fake personalities may decrease accuracy of the outcome, a smart/intelligent service that can identify the source of data is one of the key points in the analysis. In this context, we include a fake account detection service to the proposed framework. Both sentiment analysis and fake account detection systems are trained and tested using Naive Bayes model from Apache Spark's machine learning library. The developed system consists of four integrated software components, ie, (i) machine learning and streaming service for sentiment prediction, (ii) a Twitter streaming service to retrieve tweets, (iii) a Twitter fake account detection service to assess the owner of the retrieved tweet, and (iv) a real-time reporting and dashboard component to visualize the results of sentiment analysis. The sentiment classification performances of the system for offline and real-time modes are 86.77% and 80.93%, respectively.
C1 [Kilinc, Deniz] Manisa Celal Bayar Univ, Fac Technol, Dept Software Engn, TR-45400 Manisa, Turkey.
C3 Celal Bayar University
RP Kilinc, D (corresponding author), Manisa Celal Bayar Univ, Fac Technol, Dept Software Engn, TR-45400 Manisa, Turkey.
EM deniz.kilinc@cbu.edu.tr
OI Kilinc, Deniz/0000-0002-2336-8831
CR Akin AA, 2018, STRUCTURE, V10, P1
   Aldogan D, 2017, COMPUT ELECTR ENG, V57, P311, DOI 10.1016/j.compeleceng.2016.11.015
   [Anonymous], DETECTING SUBVERSION
   [Anonymous], 2010, 26 ANN COMP SEC APPL
   Bach F, 2017, J MACH LEARN RES, V18
   Baltas A, 2017, INT WORKSH ALG ASP C
   Cakir MU, 2016, 2016 IEEE 40 ANN COM
   Chen C, 2015, 2015 IEEE C COMP COM
   Chen C, 2017, IEEE T INF FOREN SEC, V12, P914, DOI 10.1109/TIFS.2016.2621888
   Chen C, 2016, IT PROF, V18, P66, DOI 10.1109/MITP.2016.36
   Cheng Otto KM, 2015, J COMPUTER COMMUNICA, V3, P189
   Conti M, 2012, 2012 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM), P1071, DOI 10.1109/ASONAM.2012.185
   Egele M, 2013, DETECTING COMPROMISE
   Erahin B, 2017, 2017 INT C COMP SCI
   Flores Marcel, 2013, Passive and Active Measurement. 14th International Conference, PAM 2013. Proceedings, P208, DOI 10.1007/978-3-642-36516-4_21
   Karanasou M, 2016, 2016 IEEE 16 INT C D
   Kilinç D, 2017, J INF SCI, V43, P174, DOI 10.1177/0165551515620551
   Liu B, 2011, DATA CENTRIC SYST AP, P459, DOI 10.1007/978-3-642-19460-3_11
   Makinist S, 2017, ITM WEB CONF, V13, DOI 10.1051/itmconf/20171301030
   Malhotra A, 2012, PALGRAVE STUD CULT, P121
   Nair LR, 2018, COMPUT ELECTR ENG, V65, P393, DOI 10.1016/j.compeleceng.2017.03.009
   Nirmal VJ, 2017, 2017 WORLD C COMP CO
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Provost F, 1998, MACH LEARN, V30, P127, DOI 10.1023/A:1007442505281
   Rahnama AHA, 2014, 2014 INT C CONTR DEC
   Ramsingh J, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER APPLICATIONS (ICACA), P346, DOI 10.1109/ICACA.2016.7887979
   Salloum S., 2016, Int. J. Data Sci. Anal., V1, P145, DOI [DOI 10.1007/S41060-016-0027-9, 10.1007/s41060-016-0027-9]
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Shi JW, 2015, PROC VLDB ENDOW, V8, P2110, DOI 10.14778/2831360.2831365
   Singh Dilpreet, 2015, J Big Data, V2, P8
   STATISTIC BRAIN RESEARCH INSTITUTE, STAT BRAIN
   Sun N, 2019, IEEE COMMUN SURV TUT, V21, P1744, DOI 10.1109/COMST.2018.2885561
   Ucan A, 2016, 2016 12 INT C SIGN I
   Weinberger K., 2009, P 26 ANN INT C MACH, P1113, DOI DOI 10.1145/1553374.1553516
   Yang Z, 2014, ACM T KNOWL DISCOV D, V8, P5, DOI 10.1145/2556609
   Yildirim P, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON INNOVATIONS IN INTELLIGENT SYSTEMS AND APPLICATIONS (INISTA 2014), P110, DOI 10.1109/INISTA.2014.6873605
   Zaharia M, 2018, P 4 USENIX C HOT TOP
   Zaharia M., 2012, Proceedings of the 4th USENIX Conference on Hot Topics in Cloud Ccomputing, HotCloud'12, P10
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
NR 39
TC 6
Z9 6
U1 5
U2 45
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2019
VL 49
IS 9
BP 1352
EP 1364
DI 10.1002/spe.2724
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IP8HI
UT WOS:000480287100002
OA Bronze
DA 2024-07-18
ER

PT J
AU Babu, KRR
   Samuel, P
AF Babu, Kaippilly Raman Remesh
   Samuel, Philip
TI Service-level agreement-aware scheduling and load balancing of tasks in
   cloud
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; imbalance; load balancing; quality of service;
   scheduling; SLA
ID QUALITY; SIMULATION; ALGORITHM; WORKLOAD
AB Cloud computing is an innovative computing paradigm designed to provide a flexible and low-cost way to deliver information technology services on demand over the Internet. Proper scheduling and load balancing of the resources are required for the efficient operations in the distributed cloud environment. Since cloud computing is growing rapidly and customers are demanding better performance and more services, scheduling and load balancing of the cloud resources have become very interesting and important area of research. As more and more consumers assign their tasks to cloud, service-level agreements (SLAs) between consumers and providers are emerging as an important aspect. The proposed prediction model is based on the past usage pattern and aims to provide optimal resource management without the violations of the agreed service-level conditions in cloud data centers. It considers SLA in both the initial scheduling stage and in the load balancing stage, and it looks into different objectives to achieve the minimum makespan, the minimum degree of imbalance, and the minimum number of SLA violations. The experimental results show the effectiveness of the proposed system compared with other state-of-the-art algorithms.
C1 [Babu, Kaippilly Raman Remesh] Govt Engn Coll, Dept Informat Technol, Painavu 685603, Idukki, India.
   [Samuel, Philip] Cochin Univ Sci & Technol, Dept Comp Sci, Kochi, India.
C3 Government Engineering College Idukki; Cochin University Science &
   Technology
RP Babu, KRR (corresponding author), Govt Engn Coll, Dept Informat Technol, Painavu 685603, Idukki, India.
EM remeshbabu@yahoo.com
RI Babu, K. R. Remesh/J-7390-2019
OI K R, Remesh Babu/0000-0002-2644-7244
CR Abdelmaboud A, 2015, J SYST SOFTWARE, V101, P159, DOI 10.1016/j.jss.2014.12.015
   [Anonymous], COMPUTERS IEEE T
   [Anonymous], 2009, P CLOUD WORKSH
   [Anonymous], 2013, MASTERING CLOUD COMP
   [Anonymous], 2017, CONCURR COMPUT, DOI DOI 10.1002/CPE.4126
   Armbrust M., UCBEECS200928
   Babu K.R., 2016, Innovation in Bio-Inspired Computing and Application, P67
   Babu KR Remesh, 2015, 2015 5 INT C ADV COM
   Breitgand D, 2011, 12 IFIP IEEE INT S I
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Dam S, 2014, ADV COMPUTING NETWOR, V2, P403, DOI [10.1007/978-3-319-07350-7_45, DOI 10.1007/978-3-319-07350-7_45]
   Dastjerdi AV, 2012, SOFTWARE PRACT EXPER, V42, P501, DOI 10.1002/spe.1104
   DOMANAL SG, 2013, INDIA
   Elsherbiny S, 2018, EGYPT INFORM J, V19, P33, DOI 10.1016/j.eij.2017.07.001
   Fahim Y, 2014, 2014 2 WORLD C COMPL
   Fan GS, 2018, SOFTWARE PRACT EXPER, V48, P1536, DOI 10.1002/spe.2590
   Fang YQ, 2010, LECT NOTES COMPUT SC, V6318, P271, DOI 10.1007/978-3-642-16515-3_34
   Guérout T, 2014, SUSTAIN COMPUT-INFOR, V4, P225, DOI 10.1016/j.suscom.2014.08.006
   Han YM, 2017, INT J PARALLEL PROG, V45, P595, DOI 10.1007/s10766-016-0434-5
   Jinhua Hu, 2010, Proceedings of the Third International Symposium on Parallel Architectures, Algorithms and Programming (PAAP 2010), P89, DOI 10.1109/PAAP.2010.65
   Kumbhare AG, 2015, IEEE T CLOUD COMPUT, V3, P105, DOI 10.1109/TCC.2015.2394316
   LEONE FC, 1961, TECHNOMETRICS, V3, P543, DOI 10.2307/1266560
   Li K., 2011, 2011 6 ANN CHIN C CH
   Li X, 2014, INT S COMP CONS CONT
   Liu JZ, 2015, IEEE T CLOUD COMPUT, V3, P119, DOI 10.1109/TCC.2014.2353045
   Liu Y, 2017, J NETW COMPUT APPL, V83, P213, DOI 10.1016/j.jnca.2015.04.017
   Lublin U, 2003, J PARALLEL DISTR COM, V63, P1105, DOI 10.1016/S0743-7315(03)00108-4
   Magalhaes D, 2015, COMPUT ELECTR ENG, V47, P69, DOI 10.1016/j.compeleceng.2015.08.016
   Mukherjee A, 2019, IEEE T CLOUD COMPUT, V7, P141, DOI 10.1109/TCC.2016.2586061
   Paya A, 2017, IEEE T CLOUD COMPUT, V5, P15, DOI 10.1109/TCC.2015.2396059
   Remesh Babu KR., 2018, INT J ENG TECHNOL, V7, P1677
   Rodriguez MA, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4041
   Roy A, 2013, IEEE 24 INT S SOFTW
   Singh S, 2015, COMPUT ELECTR ENG, V47, P138, DOI 10.1016/j.compeleceng.2015.02.003
   TAWFEEK MA, 2013, 2013 8 INT C COMP EN
   Toosi AN, 2017, J NETW COMPUT APPL, V83, P155, DOI 10.1016/j.jnca.2017.01.036
   Tsakalozos K, 2017, IEEE T PARALL DISTR, V28, P2285, DOI 10.1109/TPDS.2017.2658572
   Woo SS, 2014, COMPUT NETW, V68, P138, DOI 10.1016/j.comnet.2013.12.001
   Xu GC, 2013, TSINGHUA SCI TECHNOL, V18, P34, DOI 10.1109/TST.2013.6449405
   Zhang F, 2015, IEEE T CLOUD COMPUT, V3, P156, DOI 10.1109/TCC.2014.2350490
NR 41
TC 12
Z9 12
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2019
VL 49
IS 6
BP 995
EP 1012
DI 10.1002/spe.2692
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW3GY
UT WOS:000466579600003
DA 2024-07-18
ER

PT J
AU Tomar, P
   Mishra, R
   Sheoran, K
AF Tomar, Pradeep
   Mishra, Rajesh
   Sheoran, Kavita
TI Prediction of quality using ANN based on Teaching-Learning Optimization
   in component-based software systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE artificial neural network; bounded interface complexity metric;
   interface surface consistency; self-completeness of component's
   parameter; self-completeness of component's return value;
   Teaching-Learning-based Optimization
ID ARCHITECTURES; METRICS
AB The primary objective of our research work is to enhance the prediction of the quality of a component-based software system and to develop an artificial neural network (ANN) model for the system reliability optimization problem. In this paper, we introduced the ANN-supported Teaching-Learning Optimization by transforming constraints to objective functions. Artificial neural network techniques are found to be powerful in the modeling software package quality metrics compared with the ancient statistical techniques. Therefore, by using the neural network, the quality characteristics of software components of the proposed work are predicted. A nonlinear differentiable transfer function of ANN used in the proposed approach is hyperbolic tangent sigmoid. A new efficient optimization methodology referred to as the Teaching-Learning-based Optimization is proposed in this paper to optimize reliability and different cost functions. The weight values of the network are then adjusted consistent with a proposed optimization rule, therefore minimizing the network error. The proposed work is implemented in MATLAB by using the Neural Network Toolbox. The proposed work provides improved performance in terms of sensitivity, precision, specificity, negative predictive value, fall-out or false positive rate, false discovery rate, accuracy, Matthews correlation coefficient, and rate of convergence.
C1 [Tomar, Pradeep] Gautam Buddha Univ, Sch Informat & Commun Technol, Greater Noida 201308, India.
   [Mishra, Rajesh] Gautam Buddha Univ, Dept Elect & Commun Engn, Greater Noida 201308, India.
   [Sheoran, Kavita] Gautam Buddha Univ, Dept Comp Sci & Engn, Greater Noida 201308, India.
C3 Gautam Buddha University; Gautam Buddha University; Gautam Buddha
   University
RP Sheoran, K (corresponding author), Gautam Buddha Univ, Dept Comp Sci & Engn, Greater Noida 201308, India.
EM kavitasheoranphd@gmail.com
RI Sheoran, Kavita/ABF-9354-2021
OI Sheoran, Kavita/0000-0001-7985-9288
CR Abdellatief M, 2013, J SYST SOFTWARE, V86, P587, DOI 10.1016/j.jss.2012.10.001
   Bhattacharya P., 2012, P 34 INT C SOFTW ENG
   Brosch F, 2012, IEEE T SOFTWARE ENG, V38, P1319, DOI 10.1109/TSE.2011.94
   Brosig F, 2015, IEEE T SOFTWARE ENG, V41, P157, DOI 10.1109/TSE.2014.2362755
   Brosig F, 2014, SCI COMPUT PROGRAM, V90, P71, DOI 10.1016/j.scico.2013.06.004
   Chen X, 2014, IEEE T PARALL DISTR, V25, P1913, DOI 10.1109/TPDS.2013.308
   Ferenc Rudolf., 2014, Evolving Software Systems, P65, DOI DOI 10.1007/978-3-642-45398-4_3
   Heinrich R, 2017, SOFTW SYST MODEL, V16, P257, DOI 10.1007/s10270-015-0457-1
   Jha PC, 2014, J COMPUT SCI-NETH, V5, P233, DOI 10.1016/j.jocs.2013.07.003
   Johnson K., 2013, P 16 INT ACM SIGSOFT
   Kang JS, 2015, INFORM SOFTWARE TECH, V57, P1, DOI 10.1016/j.infsof.2014.08.001
   Kaur K, 2013, INT J ADV RES COMPUT, V2, P1841
   Koziolek A, 2013, J SYST SOFTWARE, V86, P2542, DOI 10.1016/j.jss.2013.03.081
   KUMAR V, 2014, MIDDLE EAST J SCI RE, V19, P1412, DOI DOI 10.5829/idosi.mejsr.2014.19.10.11532
   Kundu S, 2016, WORLD APPL SCI J, V34, P733
   Li K, 2016, QUAL RELIAB ENG INT
   Nazir S, 2014, LIFE SCI J, V11, P504
   Nazir S, 2013, P FRONT INF TECHN IS
   Nazir S, 2012, P INF SCI APPL SUW S
   Nazir S, 2015, INT ARAB J INF TECHN, V15, P1
   Nazir S., 2014, ABSTR APPL ANAL, V2014, P12, DOI [10.1155/2014/535970, DOI 10.1155/2014/535970]
   Petriu DC, 2014, SOFTW SYST MODEL, V13, P1237, DOI 10.1007/s10270-013-0373-1
   Rathfelder C, 2014, SOFTW SYST MODEL, V13, P1291, DOI 10.1007/s10270-013-0316-x
   Sagar S, 2016, INT J ADV COMPUT TEC, V8, P21
   Seceleanu C, 2013, COMPUTER, V46, P40, DOI 10.1109/MC.2013.335
   Shahzad S., 2014, LIFE SCI J, V11, P98
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Singh P, 2017, IEEE T SYST MAN CY-S, V47, P826, DOI 10.1109/TSMC.2016.2521840
   Tobias Mwalili, 2015, Journal of Theoretical and Applied Information Technology, V73, P275
   Tobias M, 2016, AM EURASIAN J SCI RE, V11, P240
   Ulkuniemi P, 2015, IND MARKET MANAG, V44, P54, DOI 10.1016/j.indmarman.2014.10.007
   Xu JL, 2016, IEEE T RELIAB, V65, P28, DOI 10.1109/TR.2015.2464075
   Yang B, 2015, IEEE T RELIAB, V64, P497, DOI 10.1109/TR.2014.2372411
NR 33
TC 10
Z9 10
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2018
VL 48
IS 4
BP 896
EP 910
DI 10.1002/spe.2562
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FY3VV
UT WOS:000426749900007
DA 2024-07-18
ER

PT J
AU Xie, WP
   Xue, JY
   Jiang, DM
   Song, L
AF Xie, Wuping
   Xue, Jinyun
   Jiang, Dongming
   Song, Lan
TI An iteration-based interactive analysis method to design dynamic
   service-oriented systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE service computing; service-oriented design; dynamic system; system
   analysis; design evaluation
ID IDENTIFICATION
AB Service-oriented paradigm presents numerous new software development patterns and idioms. Software systems are implemented by composing existing third-party services deployed in the open environment, which is significantly different from traditional software development methodologies in which systems are built through developing modules after system design in a closed environment. Therefore, it is urgent to raise a new design method to adapt to this new circumstance. We concentrate on reusing as many deployed services as possible then introduce a new life cycle model named Taiji model to illustrate this development process. The iteration-based interactive analysis method following the model is proposed to design service-oriented systems based on the view of extracting non-creative activities from a creative activity through defining new notations or applying new rules. The method includes the interactive analysis process that analyzes requirements with deployed services in a local point of view and the iterative analysis process that redesigns system with new knowledge in a global perspective. Meanwhile, the reusable service threshold value is defined to build the uncertain candidate service set (UCSS) of each module in analysis process. The reliability and flexibility of systems can be improved through the quantitative static structure analysis on the basis of the UCSS of systems. Meanwhile, a practical dynamic service binding method that selects services according to actual states of invoking them is presented on the basis of the UCSS containing them. Finally, we also give a case study to illustrate the feasibility of this method. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [Xie, Wuping; Xue, Jinyun; Jiang, Dongming] Jiangxi Normal Univ, Jiangxi Prov Key Lab High Performance Comp Techno, Nanchang, Jiangxi, Peoples R China.
   [Xie, Wuping; Xue, Jinyun; Jiang, Dongming; Song, Lan] Wuhan Univ, State Key Lab Software Engn, Wuhan, Hubei, Peoples R China.
C3 Jiangxi Normal University; Wuhan University
RP Xie, WP (corresponding author), Jiangxi Normal Univ, Prov Key Lab High Performance Comp Technol, Nanchang, Jiangxi, Peoples R China.
EM wupingxie@gmail.com
FU National Natural Science Foundation of China [61462039, 61462041]
FX This project is supported by the National Natural Science Foundation of
   China under grant no. 61462039 and no. 61462041. We are grateful to the
   reviewers for their helpful and insightful comments and suggestions.
CR Arsanjani A, 2008, IBM SYST J, V47, P377, DOI 10.1147/sj.473.0377
   Bianchini D, 2014, IEEE T SERV COMPUT, V7, P265, DOI 10.1109/TSC.2013.26
   Bianco P, 2008, CMUSEI2008TN021, P1
   Bianco P, 2011, CMUSEI2011TN008, P1
   CHANG SH, 2007, A SERVICE ORIENTED A, P204
   Chen YT, 2015, ADV ENG INFORM, V29, P269, DOI 10.1016/j.aei.2015.06.005
   Dam HK, 2010, 13 INT C PRINC PRACT, P499
   Deng SG, 2014, EXPERT SYST APPL, V41, P8075, DOI 10.1016/j.eswa.2014.07.012
   Erradi A, 2006, P IEEE I C SERV COMP, P151, DOI 10.1109/SCC.2006.97
   Fuhr A, 2013, COMPUT SCI-RES DEV, V28, P65, DOI 10.1007/s00450-011-0183-z
   Garriga M, 2015, IETE TECH REV, V32, P376, DOI 10.1080/02564602.2015.1019942
   Haihe Shi, 2011, Proceedings of the 2011 IEEE 5th International Symposium on Theoretical Aspects of Software Engineering (TASE 2011), P76, DOI 10.1109/TASE.2011.34
   Helfert M, 2016, FUTURE GENER COMP SY, V55, P163, DOI 10.1016/j.future.2015.11.007
   Huergo RS, 2014, SERV ORIENTED COMPUT, V8, P199, DOI 10.1007/s11761-014-0161-y
   Jayapriya K., 2015, J NETW SYST MANAG, V24, P916
   Kim TH, 2010, IEEE T SERV COMPUT, V3, P236, DOI 10.1109/TSC.2010.2
   Kohlborn T, 2009, IEEE T SERV COMPUT, V2, P50, DOI 10.1109/TSC.2009.6
   Lo A, 2007, LECT NOTES COMPUT SC, V4801, P87
   Miao WK, 2013, IEEE T SERV COMPUT, V6, P536, DOI 10.1109/TSC.2012.22
   MOOSAVI S, 2009, A METHOD FOR SERVICE, P290
   Papazoglou M. P., 2006, International Journal of Web Engineering and Technology, V2, P412, DOI 10.1504/IJWET.2006.010423
   Papazoglou MP, 2008, INT J COOP INF SYST, V17, P223, DOI 10.1142/S0218843008001816
   Parvizi-Mosaed A, 2015, FRONT INFORM TECH EL, V16, P43, DOI 10.1631/FITEE.1400040
   Scandurra P, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P684, DOI 10.1109/COMPSACW.2014.115
   Sindhgatta Renuka, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P364, DOI 10.1109/ICWS.2013.56
   Sun L, 2014, J NETW COMPUT APPL, V45, P134, DOI 10.1016/j.jnca.2014.07.019
   Sun WH, 2009, IEEC 2009: FIRST INTERNATIONAL SYMPOSIUM ON INFORMATION ENGINEERING AND ELECTRONIC COMMERCE, PROCEEDINGS, P383, DOI 10.1109/IEEC.2009.86
   [王昌晶 Wang Changjing], 2013, [软件学报, Journal of Software], V24, P715
   XIE WP, 2014, 14 IEEE INT C COMP I, P252, DOI DOI 10.1109/CIT.2014.169
   Xu YS, 2016, EXPERT SYST APPL, V53, P75, DOI 10.1016/j.eswa.2016.01.010
   Zdun U, 2008, ACM T INTERNET TECHN, V8, DOI 10.1145/1361186.1361191
   ZHANG Y, 2009, THEMES4BPEL AN EFFIC, P534
   Zheng ZB, 2013, IEEE T PARALL DISTR, V24, P1213, DOI 10.1109/TPDS.2012.285
NR 33
TC 0
Z9 0
U1 1
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2018
VL 48
IS 2
SI SI
BP 300
EP 326
DI 10.1002/spe.2543
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FS0OE
UT WOS:000419472700003
DA 2024-07-18
ER

PT J
AU Zhang, WS
   Zhao, DH
   Chai, Z
   Yang, LT
   Liu, X
   Gong, FM
   Yang, S
AF Zhang, Weishan
   Zhao, Dehai
   Chai, Zhi
   Yang, Laurence T.
   Liu, Xin
   Gong, Faming
   Yang, Su
TI Deep learning and SVM-based emotion recognition from Chinese speech for
   smart affective services
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE speech emotion recognition; feature fusion; support vector machine; deep
   belief network
AB Emotion recognition is challenging for understanding people and enhances human-computer interaction experiences, which contributes to the harmonious running of smart health care and other smart services. In this paper, several kinds of speech features such as Mel frequency cepstrum coefficient, pitch, and formant were extracted and combined in different ways to reflect the relationship between feature fusions and emotion recognition performance. In addition, we explored two methods, namely, support vector machine (SVM) and deep belief networks (DBNs), to classify six emotion status: anger, fear, joy, neutral status, sadness, and surprise. In the SVM-based method, we used SVM multi-classification algorithm to optimize the parameters of penalty factor and kernel function. With DBN, we adjusted different parameters to achieve the best performance when solving different emotions. Both gender-dependent and gender-independent experiments were conducted on the Chinese Academy of Sciences emotional speech database. The mean accuracy of SVM is 84.54%, and the mean accuracy of DBN is 94.6%. The experiments show that the DBN-based approach has good potential for practical usage, and suitable feature fusions will further improve the performance of speech emotion recognition. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [Zhang, Weishan; Zhao, Dehai; Liu, Xin; Gong, Faming] China Univ Petr, Sch Comp & Commun Engn, 66 Changjiang West Rd, Qingdao 266580, Peoples R China.
   [Chai, Zhi] Sci & Technol Opt Radiat Lab, Beijing 100854, Peoples R China.
   [Yang, Laurence T.] St Francis Xavier Univ, Dept Comp Sci, Antigonish, NS, Canada.
   [Yang, Su] Fudan Univ, Coll Comp Sci & Technol, Shanghai 200433, Peoples R China.
C3 China University of Petroleum; Saint Francis Xavier University - Canada;
   Fudan University
RP Zhang, WS (corresponding author), China Univ Petr, Sch Comp & Commun Engn, 66 Changjiang West Rd, Qingdao 266580, Peoples R China.
EM zhangws@upc.edu.cn
RI xu, liang/AAC-4448-2022; li, fang/KDO-8841-2024; Laurence T. Yang,
   FCAE/AAA-1898-2019; li, xiang/JCN-9316-2023; liu, sha/JXL-6600-2024;
   Chai, Zhi/KIG-1970-2024
OI Laurence T. Yang, FCAE/0000-0002-7986-4244; Zhang,
   Weishan/0000-0001-9800-1068
FU Ministry of Science and Technology, China [2015010300]; National Natural
   Science Foundation of China [61309024]; Natural Science Foundation of
   Shandong Province [ZR2014FM038]; Fundamental Research Funds for the
   Central Universities
FX This research was supported by the Program on Innovative Methods of Work
   from Ministry of Science and Technology, China (Grant No. 2015010300),
   National Natural Science Foundation of China (Grant No. 61309024),
   Natural Science Foundation of Shandong Province (Grant No. ZR2014FM038),
   and also supported by Fundamental Research Funds for the Central
   Universities.
CR Aher P., 2014, AUDITORY PROCESSING
   [Anonymous], 1997, AFFECTIVE COMPUTING
   Bang-Jensen J, 2009, SPRINGER MONOGR MATH, P1, DOI 10.1007/978-1-84800-998-1_1
   Banse R, 1996, J PERS SOC PSYCHOL, V70, P614, DOI 10.1037/0022-3514.70.3.614
   Chen D, 2017, IEEE T PARALL DISTR, V28, P1091, DOI 10.1109/TPDS.2016.2613054
   Chen D, 2017, SOFTWARE PRACT EXPER, V47, P405, DOI 10.1002/spe.2418
   Chu YY, 2014, ADV MATER RES-SWITZ, V831, P460, DOI 10.4028/www.scientific.net/AMR.831.460
   El Ayadi M, 2011, PATTERN RECOGN, V44, P572, DOI 10.1016/j.patcog.2010.09.020
   Hinton GE, 2009, SCHOLARPEDIA, V4, P47
   Hsu CW, 2002, IEEE T NEURAL NETWOR, V13, P415, DOI 10.1109/72.991427
   Jin Q, 2015, INT CONF ACOUST SPEE, P4749, DOI 10.1109/ICASSP.2015.7178872
   Joshi D. D., 2013, RECOGNITION EMOTION
   Kim Y, 2013, INT CONF ACOUST SPEE, P3687, DOI 10.1109/ICASSP.2013.6638346
   Lee CC, 2011, SPEECH COMMUN, V53, P1162, DOI 10.1016/j.specom.2011.06.004
   Mohamed AR, 2012, IEEE T AUDIO SPEECH, V20, P14, DOI 10.1109/TASL.2011.2109382
   Peipei Shen, 2011, 2011 International Conference on Electronic & Mechanical Engineering and Information Technology (EMEIT 2011), P621, DOI 10.1109/EMEIT.2011.6023178
   Schuller B, 2004, 2004 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH, AND SIGNAL PROCESSING, VOL I, PROCEEDINGS, P577
   Utane AS, 2013, EMOTION, V2, P742
   WILLIAMS CE, 1972, J ACOUST SOC AM, V52, P1238, DOI 10.1121/1.1913238
   Wu SQ, 2011, SPEECH COMMUN, V53, P768, DOI 10.1016/j.specom.2010.08.013
NR 20
TC 34
Z9 36
U1 1
U2 61
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2017
VL 47
IS 8
SI SI
BP 1127
EP 1138
DI 10.1002/spe.2487
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FA1LW
UT WOS:000405202100007
DA 2024-07-18
ER

PT J
AU Vögler, M
   Schleicher, JM
   Inzinger, C
   Dustdar, S
AF Voegler, Michael
   Schleicher, Johannes M.
   Inzinger, Christian
   Dustdar, Schahram
TI Ahab: A cloud-based distributed big data analytics framework for the
   Internet of Things
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; smart city; internet of things; stream processing; lambda
   architecture
AB Smart city applications generate large amounts of operational data during their execution, such as information from infrastructure monitoring, performance and health events from used toolsets, and application execution logs. These data streams contain vital information about the execution environment that can be used to fine-tune or optimize different layers of a smart city application infrastructure. Current approaches do not sufficiently address the efficient collection, processing, and storage of this information in the smart city domain. In this paper, we present Ahab, a generic, scalable, and fault-tolerant data processing framework based on the cloud that allows operators to perform online and offline analyses on gathered data to better understand and optimize the behavior of the available smart city infrastructure. Ahab is designed for easy integration of new data sources, provides an extensible API to perform custom analysis tasks, and a domain-specific language to define adaptation rules based on analysis results. We demonstrate the feasibility of the proposed approach using an example application for autonomous intersection management in smart city environments. Our framework is able to autonomously optimize application deployment topologies by distributing processing load over available infrastructure resources when necessary based on both online analysis of the current state of the environment and patterns learned from historical data. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Voegler, Michael; Schleicher, Johannes M.; Dustdar, Schahram] TU Wien, Distributed Syst Grp, Vienna, Austria.
   [Inzinger, Christian] Univ Zurich, Dept Informat, Zurich, Switzerland.
C3 Technische Universitat Wien; University of Zurich
RP Vögler, M (corresponding author), TU Wien, Distributed Syst Grp, Vienna, Austria.
EM voegler@dsg.tuwien.ac.at
RI Dustdar, Schahram/G-9877-2015; Inzinger, Christian/B-5490-2014
OI Dustdar, Schahram/0000-0001-6872-8821; Inzinger,
   Christian/0000-0002-8924-0355
CR Abadi D.J., 2005, CIDR, P277
   Agrawal D., 2011, P 14 INT C EXTENDING, P530, DOI DOI 10.1145/1951365.1951432
   AssuncAo MD, 2014, S AM EARTH SCI UNPUB, V79, P1
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Bizer C, 2011, SIGMOD REC, V40, P56, DOI 10.1145/2094114.2094129
   Chang F, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1365815.1365816
   Chaudhuri Surajit., 2012, Proceedings of the 31st ACM SIGMOD-SIGACT-SIGAI symposium on Principles of Database Systems, P1
   Chen QM, 2015, LECT NOTES COMPUT SC, V9260, P94, DOI 10.1007/978-3-662-47804-2_5
   DeCandia Giuseppe, 2007, Operating Systems Review, V41, P205, DOI 10.1145/1323293.1294281
   Distefano S., 2012, 2012 Sixth International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS 2012), P858, DOI 10.1109/IMIS.2012.61
   Hackenbroich G., 2014, P 8 ACM INT C DISTR, P13
   Hausknecht M, 2011, IEEE INT C INT ROBOT, P4581, DOI 10.1109/IROS.2011.6048565
   Heinze T, 2014, 2014 IEEE 30TH INTERNATIONAL CONFERENCE ON DATA ENGINEERING WORKSHOPS (ICDEW), P296, DOI 10.1109/ICDEW.2014.6818344
   Hummer W., 2011, 2011 7th International Conference on Next Generation Web Services Practices, P176, DOI 10.1109/NWeSP.2011.6088173
   Inzinger C, 2014, SOFTWARE PRACT EXPER, V44, P805, DOI 10.1002/spe.2254
   Ji CQ, 2012, PROCEEDINGS OF THE 2012 12TH INTERNATIONAL SYMPOSIUM ON PERVASIVE SYSTEMS, ALGORITHMS, AND NETWORKS (I-SPAN 2012), P17, DOI 10.1109/I-SPAN.2012.9
   Lakshman Avinash, 2010, Operating Systems Review, V44, P35, DOI 10.1145/1773912.1773922
   Liu C., 2015, Handbook on Data Centers, P631
   Mayer-Schonberger V., 2014, BIG DATA REVOLUTION
   Newman S., 2015, BUILDING MICROSERVIC
   Perera C, 2015, IT PROF, V17, P32, DOI 10.1109/MITP.2015.34
   Ranjan R, 2015, IEEE T CLOUD COMPUT, V3, P101, DOI 10.1109/TCC.2015.2437231
   Sakr S, 2011, IEEE COMMUN SURV TUT, V13, P311, DOI 10.1109/SURV.2011.032211.00087
   Satzger B., 2011, Proceedings of the 2011 IEEE 4th International Conference on Cloud Computing (CLOUD 2011), P348, DOI 10.1109/CLOUD.2011.27
   Villari M, 2014, 2014 INTERNATIONAL CONFERENCE ON SMART COMPUTING WORKSHOPS (SMARTCOMP WORKSHOPS), P9, DOI 10.1109/SMARTCOMP-W.2014.7046676
   Vögler M, 2017, SOFTWARE PRACT EXPER, V47, P443, DOI 10.1002/spe.2424
   Vögler M, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P78, DOI 10.1109/SOSE.2015.23
   Vögler M, 2015, IEEE INT CONF MO, P298, DOI [10.1109/MobServ.2015.49, 10.1109/MS.2015.49]
   Wu E., 2006, P ASS COMP MACH ACM, P407
   Xhafa F, 2015, INT CON ADV INFO NET, P263, DOI 10.1109/AINA.2015.194
   Zaharia M, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P423, DOI 10.1145/2517349.2522737
NR 31
TC 20
Z9 20
U1 2
U2 38
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2017
VL 47
IS 3
SI SI
BP 443
EP 454
DI 10.1002/spe.2424
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL9RK
UT WOS:000394957500008
DA 2024-07-18
ER

PT J
AU Ramadasan, D
   Chevaldonné, M
   Chateau, T
AF Ramadasan, Datta
   Chevaldonne, Marc
   Chateau, Thierry
TI LMA: A generic and efficient implementation of the Levenberg-Marquardt
   Algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Levenberg-Marquardt; nonlinear least squares; C plus; genericity;
   meta-programming
AB This paper presents an open-source, generic and efficient implementation of a very popular nonlinear optimization method: the Levenberg-Marquardt algorithm (LMA). This minimization algorithm is well known and hundreds of implementations have already been released. However, none of them offer at the same time a high level of genericity, a friendly syntax and a high computational performance. In this paper, we propose a solution to gather all those advantages in one library named LMA. The main challenge is to implement an efficient solver for every encounter problem. To overcome this difficulty, LMA uses compile time algorithms to design a code specific to the given optimization problem. The features of LMA are presented and the performances are compared with the state-of-the-art best alternatives through extensive benchmarks on different kind of problems. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Ramadasan, Datta; Chevaldonne, Marc; Chateau, Thierry] UBP, Inst Pascal, UMR 6602, CNRS,IFMA, Campus Cezeaux,4 Ave Blaise Pascal, F-63171 Aubiere, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Clermont
   Auvergne (UCA); CNRS - Institute for Engineering & Systems Sciences
   (INSIS)
RP Ramadasan, D (corresponding author), John Wiley & Sons Ltd, Journals Prod Dept, Chichester PO19 8SQ, W Sussex, England.
EM datta.ramadasan@gmail.com
OI ramadasan, datta/0000-0002-2396-9995
CR Agarwal S., 2012, CERES SOLVER TUTORIA, V2
   [Anonymous], TECHNICAL REPORT
   BYRD RH, 1987, SIAM J NUMER ANAL, V24, P1152, DOI 10.1137/0724076
   Changchang Wu, 2011, 2011 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), P3057, DOI 10.1109/CVPR.2011.5995552
   Clifford WilliamKingdon., 1873, A preliminary sketch of biquaternions
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2319, P351
   Davis T.A., 2013, SUITESPARSE
   Dellaert Frank, 2012, TECHNICAL REPORT
   Hudak P., 1996, ACM COMPUT SURV, V28, P196, DOI [10.1145/242224.242477, DOI 10.1145/242224.242477]
   Jacob B, 2012, EIGEN IS C TEMPLATE
   Karypis George., 1995, Frontiers of Massively Parallel Computation, 1995. Proceedings. Frontiers' 95., P140
   Kummerle Rainer, 2011, IEEE International Conference on Robotics and Automation, P3607
   Lapreste J-T, 2009, INTRO MATLAB
   Lebraly P., 2012, THESIS
   Levenberg K, 1944, Q APPL MATH
   Lourakis MIA, 2010, LECT NOTES COMPUT SC, V6312, P43, DOI 10.1007/978-3-642-15552-9_4
   Lourakis MIA, 2005, IEEE I CONF COMP VIS, P1526
   Madsen K., 1999, METHODS NONLINEAR LE
   MARQUARDT DW, 1963, J SOC IND APPL MATH, V11, P431, DOI 10.1137/0111030
   Nielsen HB, 1999, TECHNICAL REPORT
   Nocedal J., 2006, SERIES OPERATIONS RE
   Piponi D., 2004, Journal of Graphics Tools, V9, P41, DOI 10.1080/10867651.2004.10504901
   Polok L, 2013, P 21 HIGH PERF COMP
   Polok Lukas., 2013, Robotics: Science and Systems
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Triggs B., 2000, VISION ALGORITHMS TH, P298, DOI DOI 10.1007/3-540-44480-7_21THISWORKWASSUPPORTEDINPARTBYTHEEUROPEAN
   Vandevoorde David., 2002, C TEMPLATES
   Veldhuizen T., 1995, C++ Report, V7, P26
   WRIGHT SJ, 1985, J AUST MATH SOC B, V26, P387, DOI 10.1017/S0334270000004604
NR 29
TC 10
Z9 10
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1707
EP 1727
DI 10.1002/spe.2497
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500011
DA 2024-07-18
ER

PT J
AU Karaa, WB
   Ben Azzouz, Z
   Singh, A
   Dey, N
   Ashour, AS
   Ben Ghazala, H
AF Karaa, Wahiba Ben Abdessalem
   Ben Azzouz, Zeineb
   Singh, Aarti
   Dey, Nilanjan
   Ashour, Amira S.
   Ben Ghazala, Henda
TI Automatic builder of class diagram (ABCD): an application of UML
   generation from functional requirements
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE class diagram; user's requirements; Unified Modeling Language; model
   driven architecture; XML Metadata Interchange; natural language
   processing
AB Software development life cycle is a structured process, including the definition of user requirements specification, the system design, and programming. The design task comprises the transfer of natural language specifications into models. The class diagram of Unified Modeling Language has been considered as one of the most useful diagrams. It is a formal description of user's requirements and serves as inputs to the developers. The automated extraction of UML class diagram from natural language requirements is a highly challenging task. This paper explains our vision of an automated tool for class diagram generation from user requirements expressed in natural language. Our new approach amalgamates the statistical and pattern recognition properties of natural language processing techniques. More than 1000 patterns are defined for the extraction of the class diagram concepts. Once these concepts are captured, an XML Metadata Interchange file is generated and imported with a Computer-Aided Software Engineering tool to build the corresponding UML class diagram. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Karaa, Wahiba Ben Abdessalem] Taif Univ, Coll Comp & Informat Technol, At Taif, Saudi Arabia.
   [Ben Azzouz, Zeineb] Higher Inst Management, Tunis, Tunisia.
   [Singh, Aarti] MMU, MMICT & BM, Mullana, Haryana, India.
   [Dey, Nilanjan] Bengal Coll Engn & Technol, Dept Comp Sci, Durgapur, India.
   [Ashour, Amira S.] Tanta Univ, Dept Elect & Elect Commun Engn, Fac Engn, Tanta, Egypt.
   [Ben Ghazala, Henda] Natl Sch Comp Sci Tunis, Tunis, Tunisia.
   [Karaa, Wahiba Ben Abdessalem; Ben Azzouz, Zeineb; Ben Ghazala, Henda] ENSI, RIADI GDL Lab, Tunis, Tunisia.
   [Ashour, Amira S.] Taif Univ, Coll Comp & IT, At Taif, Saudi Arabia.
C3 Taif University; Universite de Tunis; Bengal College of Engineering &
   Technology; Egyptian Knowledge Bank (EKB); Tanta University; Universite
   de la Manouba; Taif University
RP Ben Ghazala, H (corresponding author), Natl Sch Comp Sci Tunis, Tunis, Tunisia.
EM hhbg.hhbg@gmail.com
RI Ashour, Amira S./T-5454-2019; Ben Ghezala, Henda Hajjami/AAK-7052-2021;
   Ben Abdessalem, Wahiba/JSL-3792-2023
OI Ashour, Amira S./0000-0003-3217-6185; Ben Ghezala, Henda
   Hajjami/0000-0002-6874-1388; Ben Abdessalem, wahiba/0000-0002-7444-5921
CR [Anonymous], D3STR201205 CHARL U
   Bajwa IS., 2009, European Journal of Scientific Research, V35, P22
   Bézivin J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P273, DOI 10.1109/ASE.2001.989813
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   CHEN PPS, 1983, INFORM SCIENCES, V29, P127, DOI 10.1016/0020-0255(83)90014-2
   Clark A., 2010, The handbook of computational linguistics and natural language processing
   Crowston, 2010, P AM SOC INF SCI TEC
   Daneva M, 2014, J SYST SOFTWARE, DOI [10.1016/jjss201406035, DOI 10.1016/JJSS201406035]
   Deeptimahanti DK, 2011, P 4 IND SOFTW ENG C, P165, DOI [10.1145/1953355.1953378, DOI 10.1145/1953355.1953378]
   Drusinsky D, 2012, SOFTWARE PRACT EXPER, V42, P853, DOI 10.1002/spe.1152
   Harmain H. M., 2003, Automated Software Engineering, V10, P157, DOI 10.1023/A:1022916028950
   Herchi H., 2012, P INT C COMP REAL KN
   Hogenboom F. P., 2010, 10 DUTCH BELG INF RE, P69
   James RumbaughIvar Jacobson Grady Booch., 2004, UNIFIED MODELING LAN
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Landhäusser M, 2014, SOFTWARE QUAL J, V22, P121, DOI 10.1007/s11219-013-9210-6
   Leidner J.L., 2003, P WORKSH SOFTW ENG A, P45
   Lin L, 2009, SOFTWARE PRACT EXPER, V39, P573, DOI 10.1002/spe.907
   Mich L., 1996, Natural Language Engineering, V2, P161, DOI 10.1017/S1351324996001337
   More P., 2012, International Journal of Applied Information Systems, V1, P19, DOI 10.5120/ijais12-450222
   Nivre J, 2008, STAT METHODS NATURAL
   Omar N., 2004, 15 IRISH C ARTICIAL, P302
   Overmyer SLV, 2011, 23 INT C SOFTW ENG K
   Rus V., 2013, ENCY SCI RELIG, P1401, DOI DOI 10.1007/978-1-4020-8265-8_1225
   Sagar VBRV, 2014, J SYST SOFTWARE, V88, P25, DOI 10.1016/j.jss.2013.08.036
   Stefano C, 2013, DATA CENTRIC SYSTEMS, P57
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
NR 27
TC 31
Z9 32
U1 1
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2016
VL 46
IS 11
BP 1443
EP 1458
DI 10.1002/spe.2384
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DZ8VK
UT WOS:000386150000001
DA 2024-07-18
ER

PT J
AU Riguzzi, F
   Bellodi, E
   Lamma, E
   Zese, R
   Cota, G
AF Riguzzi, Fabrizio
   Bellodi, Elena
   Lamma, Evelina
   Zese, Riccardo
   Cota, Giuseppe
TI Probabilistic logic programming on the web
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE logic programming; probabilistic logic programming; distribution
   semantics; logic programs with annotated disjunctions; web application;
   tool for probabilistic logic programming
ID INFERENCE; PROLOG; LANGUAGE
AB We present the web application cplint on SWI-Prolog for SHaring that allows the user to write (SWISH)' Probabilistic Logic Programs and submit the computation of the probability of queries with a web browser. The application is based on SWISH, a web framework for Logic Programming. SWISH is based on various features and packages of SWI-Prolog, in particular, its web server and its Pengine library, that allow to create remote Prolog engines and to pose queries to them. In order to develop the web application, we started from the PITA system, which is included in cplint, a suite of programs for reasoning over Logic Programs with Annotated Disjunctions, by porting PITA to SWI-Prolog. Moreover, we modified the PITA library so that it can be executed in a multi-threading environment. Developing cplint on SWISH' also required modification of the JavaScript SWISH code that creates and queries Pengines. cplint on SWISH' includes a number of examples that cover a wide range of domains and provide interesting applications of Probabilistic Logic Programming. By providing a web interface to cplint, we allow users to experiment with Probabilistic Logic Programming without the need to install a system, a procedure that is often complex, error prone, and limited mainly to the Linux platform. In this way, we aim to reach out to a wider audience and popularize Probabilistic Logic Programming. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Riguzzi, Fabrizio] Univ Ferrara, Dipartimento Matemat & Informat, I-44100 Ferrara, Italy.
   [Bellodi, Elena; Lamma, Evelina; Zese, Riccardo; Cota, Giuseppe] Univ Ferrara, Dipartimento Ingn, I-44100 Ferrara, Italy.
C3 University of Ferrara; University of Ferrara
RP Riguzzi, F (corresponding author), Dipartimento Matemat & Informat, Via Saragat 1, I-44122 Ferrara, Italy.
EM fabrizio.riguzzi@unife.it
RI Bellodi, Elena/AAE-7286-2020; Cota, Giuseppe/AAU-3295-2020; Fabrizio,
   Riguzzi/C-7679-2012; Zese, Riccardo/Q-8581-2017; BELLODI,
   Elena/HNP-1127-2023
OI Cota, Giuseppe/0000-0002-3780-6265; Fabrizio,
   Riguzzi/0000-0003-1654-9703; Zese, Riccardo/0000-0001-8352-6304;
   BELLODI, Elena/0000-0002-3717-3779
CR Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   Bellodi E, 2015, THEOR PRACT LOG PROG, V15, P169, DOI 10.1017/S1471068413000689
   Bellodi E, 2013, INTELL DATA ANAL, V17, P343, DOI 10.3233/IDA-130582
   Blockeel H, 2004, INDUCTIVE LOGIC PROG, P1
   Christiansen H, 2009, LECT NOTES COMPUT SC, V5649, P55, DOI 10.1007/978-3-642-02846-5_10
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Dantsin E., 1991, LNCS, P152
   Darwiche A, 2002, J ARTIF INTELL RES, V17, P229, DOI 10.1613/jair.989
   De Raedt L., 2008, 1 WORKSH PROB PROGR, P1
   De Raedt L., 2008, LNCS, V4911
   Fierens D, 2015, THEOR PRACT LOG PROG, V15, P358, DOI 10.1017/S1471068414000076
   Fuhr N, 2000, J AM SOC INFORM SCI, V51, P95, DOI 10.1002/(SICI)1097-4571(2000)51:2<95::AID-ASI2>3.0.CO;2-H
   Goodman ND., 2008, UAI, P220
   Grünwald PD, 2003, J ARTIF INTELL RES, V19, P243, DOI 10.1613/jair.1164
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   Lager T, 2014, THEOR PRACT LOG PROG, V14, P539, DOI 10.1017/S1471068414000192
   Meert W., 2009, LNCS, P96
   Poole D, 1997, ARTIF INTELL, V94, P7, DOI 10.1016/S0004-3702(97)00027-1
   Poole D, 2000, J LOGIC PROGRAM, V44, P5, DOI 10.1016/S0743-1066(99)00071-0
   Raedt L. D., 2007, P 20 INT JOINT C ART, P2462
   Riguzzi F, 2007, LECT NOTES COMPUT SC, V4733, P109
   Riguzzi F, 2013, THEOR PRACT LOG PROG, V13, P279, DOI 10.1017/S1471068411000664
   Riguzzi F, 2012, MACH LEARN, V86, P89, DOI 10.1007/s10994-011-5247-6
   Riguzzi F, 2010, LEIBNIZ INT PR INFOR, V7, P162, DOI 10.4230/LIPIcs.ICLP.2010.162
   Riguzzi F, 2011, THEOR PRACT LOG PROG, V11, P433, DOI 10.1017/S147106841100010X
   Riguzzi F, 2010, FUND INFORM, V102, P429, DOI 10.3233/FI-2010-313
   Riguzzi F, 2009, LOG J IGPL, V17, P589, DOI 10.1093/jigpal/jzp025
   Riguzzi F, 2008, LECT NOTES COMPUT SC, V5366, P667, DOI 10.1007/978-3-540-89982-2_54
   Sang T., 2005, P 10 NAT C ART INT 1, P475
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   Sato T., 1995, P INT C LOG PROGR, P715
   Sato T, 2015, THEOR PRACT LOG PROG, V15, P147, DOI 10.1017/S1471068413000677
   Singla P., 2005, 20 NATL C ARTIFICIAL, V5, P868
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Thayse A., 1978, Proceedings of the Eighth International Symposium on Multiple-Valued Logic, P171
   VALIANT LG, 1979, SIAM J COMPUT, V8, P410, DOI 10.1137/0208032
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P195, DOI 10.1007/978-3-540-27775-0_14
   Vennekens J., 2004, P 10 INT WORKSH NONM, P409
   Vennekens J, 2003, CCW386 K U LEUV
   Vennekens J, 2009, THEOR PRACT LOG PROG, V9, P245, DOI 10.1017/S1471068409003767
   Wielemaker J, 2008, THEOR PRACT LOG PROG, V8, P363, DOI 10.1017/S1471068407003237
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Zese R, 2015, INT WORKSH ONT LOG P, P13
NR 44
TC 21
Z9 21
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2016
VL 46
IS 10
BP 1381
EP 1396
DI 10.1002/spe.2386
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW4PG
UT WOS:000383624900005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fuentes-Lorenzo, D
   Sánchez, L
   Cuadra, A
   Cutanda, M
AF Fuentes-Lorenzo, Damaris
   Sanchez, Luis
   Cuadra, Antonio
   Cutanda, Mar
TI A RESTful and semantic framework for data integration
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data integration; heterogeneous source; information system;
   interoperability; semantic web; telecommunication services
ID BIOINFORMATICS; WEB
AB Companies have to deal with huge amounts of heterogeneous information, usually stored in distributed datasets that make use of different data schemas. This topic is especially crucial for enterprises that deal with new and different kinds of business data as new services are provided; they need to be able to dynamically add new datasets with new schemas to their information systems. However, even though research efforts have been applied to deal with this integration problem, there is still a lack of practical approaches ready to be implemented for industrial cases. We present a web-based architecture and system built upon ontologies and other semantic web techniques to cope with federation of business data in real time. The scenario used to demonstrate the utility of the architecture is composed of actual data of a telecom company. Results show that our solution is more suitable, efficient and practical than other works. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Fuentes-Lorenzo, Damaris; Sanchez, Luis] Univ Carlos III Madrid, Madrid 28911, Spain.
   [Cuadra, Antonio] Indra Sistemas, Valladolid 47151, Spain.
   [Cutanda, Mar] Indra Sistemas, Madrid 28108, Spain.
C3 Universidad Carlos III de Madrid; Indra; Indra
RP Fuentes-Lorenzo, D (corresponding author), Univ Carlos III Madrid, Madrid 28911, Spain.
EM damaris.fuenteslorenzo@yahoo.es
RI Sanchez-Fernandez, Luis/I-3867-2015
OI Sanchez-Fernandez, Luis/0000-0002-9801-4747
CR Belleau F, 2008, J BIOMED INFORM, V41, P706, DOI 10.1016/j.jbi.2008.03.004
   Beneventanos D, 2001, SPECIAL ISSUE INTELL, V36, P249
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Bleiholder J, 2008, ACM COMPUT SURV, V41, DOI 10.1145/1456650.1456651
   Brisaboas NR, 2002, NOVATICA, V158, P45
   Buitelaar P, 2008, INT J HUM-COMPUT ST, V66, P759, DOI 10.1016/j.ijhcs.2008.07.007
   Cheung KH, 2005, BIOINFORMATICS, V21, pI85, DOI 10.1093/bioinformatics/bti1026
   Colomb RM, 1997, COMPUT J, V40, P235, DOI 10.1093/comjnl/40.5.235
   Colomb RM, 2007, APPL ONTOL, V2, P1
   Cuadra A., 2011, 2011 7th International Conference on Next Generation Web Services Practices, P93, DOI 10.1109/NWeSP.2011.6088159
   Delongchamp R, 2006, BMC BIOINFORMATICS, V7, DOI 10.1186/1471-2105-7-S2-S11
   Doan A, 2005, AI MAG, V26, P83
   Dowell RD, 2001, BMC BIOINFORMATICS, V2, DOI 10.1186/1471-2105-2-7
   Fielding R. T, 2002, ACM Transactions on Internet Technology (TOIT), V2, P115, DOI [DOI 10.1145/514183.514185, 10.1145/514183.514185]
   Garcia-Molina H., 1997, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V8, P117, DOI 10.1023/A:1008683107812
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Haas L., 1999, IEEE DATA ENG B, V22, P31
   Haider S, 2009, NUCLEIC ACIDS RES, V37, pW23, DOI 10.1093/nar/gkp265
   Hausenblas M, 2011, REST: FROM RESEARCH TO PRACTICE, P303, DOI 10.1007/978-1-4419-8303-9_13
   Hekkelman ML, 2005, NUCLEIC ACIDS RES, V33, pW766, DOI 10.1093/nar/gki422
   Kimballs R, 2002, DATA WAREHOUSE TOOLK
   Knoblocks C, 1993, P 1993 ACM SIGMOD IN, P300
   Maiz N, 2006, FRONT ARTIF INTEL AP, V143, P181
   Mena E, 2000, DISTRIB PARALLEL DAT, V8, P223, DOI 10.1023/A:1008741824956
   Nielsens J., 2000, NEW RIDERS
   Noys NF, 2001, KSL0105 STANF U SCH
   Poggi A, 2008, LECT NOTES COMPUT SC, V4900, P133, DOI 10.1007/978-3-540-77688-8_5
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Shadbolt N, 2006, IEEE INTELL SYST, V21, P96, DOI 10.1109/MIS.2006.62
   Shah SP, 2005, BMC BIOINFORMATICS, V6, DOI 10.1186/1471-2105-6-34
   SHETH AP, 1990, COMPUT SURV, V22, P183, DOI 10.1145/96602.96604
   WIEDERHOLD G, 1992, COMPUTER, V25, P38, DOI 10.1109/2.121508
   Wilkinson Mark D, 2002, Brief Bioinform, V3, P331, DOI 10.1093/bib/3.4.331
   World Wide Web Consortium, 2006, WEB ONT LANG OWL
   World Wide Web Consortium, 2004, RDF XML SYNT SPEC RE
   Zdobnov EM, 2002, BIOINFORMATICS, V18, P368, DOI 10.1093/bioinformatics/18.2.368
   Zhangs X, 2011, KNOWLEDGE DATA ENG I, V6, P1
NR 37
TC 4
Z9 5
U1 0
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2015
VL 45
IS 9
BP 1161
EP 1188
DI 10.1002/spe.2267
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM9FH
UT WOS:000358012100001
DA 2024-07-18
ER

PT J
AU Li, C
   Huang, LP
   Chen, LX
AF Li, Chen
   Huang, Linpeng
   Chen, Luxi
TI Breeze graph grammar: a graph grammar approach for modeling the software
   architecture of big data-oriented software systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; software architecture; graph grammar; BGG; reliability; GSPN
ID STOCHASTIC PETRI NETS; SPECIFICATION; DEFINITION
AB Various technologies have been proposed to support the processing of big data. However, such technologies require software architectures not only to adapt to the changes and achieve dynamic evolution but also to be reliable. Most of the architecture description techniques are not able to directly capture the dynamic changes in the definition of the software architecture and cannot analyze or evaluate the system reliability. In this paper, we provide a breeze graph grammar (BGG) to model the software architecture in both static and dynamic aspects and give a BGG reliability model to help supporting software system reliability modeling and evaluation. Our work expands this idea in three directions. We first present the definition of BGG to specify the software architecture and map the system dynamic evolution to BGG transformation rules. Second, a BGG reliability model is proposed in which we add error attributes to the BGG graph for capturing the system error information, and the system error state transition is performed through BGG graph rewriting rules. Then, we study the rules to map the BGG reliability model to a generalized stochastic Petri net (GSPN) model, which can be used for reliability evaluation. Throughout this paper, we use a big data-based centralized system to demonstrate our approach. The BGG graph rewriting characteristic supports the dynamic change requirements, and the architecture is statically checked through the BGG productions. Moreover, system reliability modeling and evaluation can be achieved through the BGG reliability model by combining GSPN. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Li, Chen; Huang, Linpeng; Chen, Luxi] Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai 200240086, Peoples R China.
C3 Shanghai Jiao Tong University
RP Huang, LP (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai 200240086, Peoples R China.
EM lphuang@sjtu.edu.cn
RI LI, Chen/AAF-8336-2019
OI LI, Chen/0000-0001-6249-8957
FU National Natural Science Foundation of China [91118004, 61232007];
   National Grand Fundamental Research 973 Program of China [2009CB320705];
   Shanghai Municipal Education Commission [13ZZ023]
FX We would like to express our special thanks to Ella and Carolyn for
   their helpful suggestions to improve the paper. This work is supported
   by the National Natural Science Foundation of China under Grant Nos.
   91118004 and 61232007, the National Grand Fundamental Research 973
   Program of China under Grant No. 2009CB320705 and the Innovation Program
   of Shanghai Municipal Education Commission under Grant No. 13ZZ023.
CR Akharware N., 2005, PIPE2 PLATFORM INDEP
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   Allen R, 1998, LECT NOTES COMPUT SC, V1382, P21, DOI 10.1007/BFb0053581
   AMMAR HH, 1989, IEEE T SOFTWARE ENG, V15, P809, DOI 10.1109/32.24734
   Angin P., 2013, Journal of Wireless Mobile Networks, Ubiquitous Computing, and Dependable Applications, V4, P1
   [Anonymous], SPECIAL ONLINE COLLE
   [Anonymous], 2013, J WIRELESS MOBILE NE
   [Anonymous], 2012, BIG DATA
   [Anonymous], 2007, DEPENDABILITY MODELI
   Brandenburg F. J., 1988, STACS 88. 5th Annual Symposium on Theoretical Aspects of Computer Science. Proceedings, P227, DOI 10.1007/BFb0035847
   Bryant R., 2008, BIG-DATA COMPUTING: CREATING REVOLUTIONARY BREAKTHROUGHS IN COMMERCE, SCIENCE, AND SOCIETY
   Bucchiarone A, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P181, DOI 10.1109/WICSA.2009.5290804
   Bunke A, 1992, STRUCTURED DOCUMENT, P500
   CHIOLA G, 1993, IEEE T SOFTWARE ENG, V19, P89, DOI 10.1109/32.214828
   Choi JY, 2003, IEEE T ROBOTIC AUTOM, V19, P474, DOI 10.1109/TRA.2003.810577
   Dan H., 1998, P 3 INT WORKSHOP SOF, P69
   Dashofy EM, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P103, DOI 10.1109/WICSA.2001.948416
   DEAN TR, 1995, IEEE T SOFTWARE ENG, V21, P302, DOI 10.1109/32.385969
   Dong Yun-Wei, 2011, Journal of Software, V22, P1252, DOI 10.3724/SP.J.1001.2011.04014
   Ericson CA, 2005, HAZARD ANALYSIS TECHNIQUES FOR SYSTEM SAFETY, P223
   Ferrucci F., 1994, Proceedings. IEEE Symposium on Visual Languages (Cat. No.94TH8010), P245, DOI 10.1109/VL.1994.363611
   Garlan David., 2010, CASCON 1 DECADE HIGH, P159, DOI DOI 10.1145/1925805.1925814
   Ishikawa Kaoru., 1982, GUIDE QUALITY CONTRO, V2
   Kolar R., 2006, RELIABILITY BLOCK DI
   Kong J, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P492, DOI 10.1109/CMPSAC.2003.1245385
   Le Metayer D, 1998, IEEE T SOFTWARE ENG, V24, P521, DOI 10.1109/32.708567
   LEE WS, 1985, IEEE T RELIAB, V34, P194, DOI 10.1109/TR.1985.5222114
   Li C, 2013, 2013 SEVENTH INTERNATIONAL CONFERENCE ON INNOVATIVE MOBILE AND INTERNET SERVICES IN UBIQUITOUS COMPUTING (IMIS 2013), P291, DOI 10.1109/IMIS.2013.56
   Li X, 2014, INT J INFORM MANAGE, V34, P319, DOI 10.1016/j.ijinfomgt.2013.11.007
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P717, DOI 10.1109/32.464548
   Magee J., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P137
   Marko G, 2012, BIG DATA TUTORIAL
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   McVeigh A., 2009, A rigorous, architectural approach to extensible applications
   MCVEIGH A, 2006, P 2006 C SPEC VER CO, P49, DOI DOI 10.1145/1181195.1181206
   McVeigh A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1040, DOI 10.1145/1985793.1985990
   Mei H, 2002, LECT NOTES COMPUT SC, V2495, P38
   Oquendo F., 2004, ACM SIGSOFT SOFTWARE, V29, P1, DOI DOI 10.1145/986710.986728
   Oquendo F., 2006, ACM SIGSOFT SOFTWARE, V31, P1
   Rekers J, 1997, J VISUAL LANG COMPUT, V8, P27, DOI 10.1006/jvlc.1996.0027
   Roshandel R, 2004, ACM T SOFTW ENG METH, V13, P240, DOI 10.1145/1018210.1018213
   ROZENBERG G, 1986, INFORM CONTROL, V69, P136, DOI 10.1016/S0019-9958(86)80045-6
   Rugina AE, 2007, LECT NOTES COMPUT SC, V4615, P14
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Tiihonen J., 1998, P 4 WDK WORKSH PROD, P1139
   Wermelinger M, 1998, FOURTH INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P111, DOI 10.1109/CDS.1998.675764
   Wittenburg K., 1992, Proceedings. 1992 IEEE Workshop on Visual Languages (Cat. No.92TH0471-3), P192, DOI 10.1109/WVL.1992.275765
   Xu HZ, 2010, J SYST ARCHITECT, V56, P523, DOI 10.1016/j.sysarc.2010.08.005
   Zhang DQ, 2001, COMPUT J, V44, P186, DOI 10.1093/comjnl/44.3.186
NR 50
TC 8
Z9 12
U1 1
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2015
VL 45
IS 8
SI SI
BP 1023
EP 1050
DI 10.1002/spe.2271
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM6JB
UT WOS:000357793500002
DA 2024-07-18
ER

PT J
AU Friedman, R
   Portnoy, A
AF Friedman, Roy
   Portnoy, Amit
TI A generic decentralized trust management framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed systems; trust management; P2P
ID DERIVATIVES
AB This paper describes TRUSTPACK, a decentralized trust management framework that provides trust management as a generic service. TRUSTPACK is unique in that it does not provide a central service. Instead, it is run by many autonomous services. This design enables TRUSTPACK to alleviate privacy concerns, as well as potentially provide better personalization and scalability when compared with current centralized solutions. A major component of TRUSTPACK is a generic decentralized graph query processing framework called GRAPHPACK, which was also developed as part of this work. GRAPHPACK consists of a decentralized graph processing language as well as an execution engine, as elaborated in this paper. The paper also presents several examples and a case study showing how TRUSTPACK can be used to handle various trust management scenarios, as well as its incorporation in an existing third party P2P file sharing application. Prototypes of TRUSTPACK and GRAPHPACK are available as open source projects at and , respectively. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Friedman, Roy; Portnoy, Amit] Technion Israel Inst Technol, Dept Comp Sci, IL-32000 Haifa, Israel.
C3 Technion Israel Institute of Technology
RP Friedman, R (corresponding author), Technion Israel Inst Technol, Dept Comp Sci, IL-32000 Haifa, Israel.
EM roy@cs.technion.ac.il
OI Portnoy, Amit/0000-0001-6491-5814
CR [Anonymous], TECHNICAL REPORT
   [Anonymous], THESIS IMPERIAL COLL
   [Anonymous], 200256 STANF INFOLAB
   [Anonymous], COMPLIANCE CHECKING
   [Anonymous], 2005, RECOMMENDATION X 509
   [Anonymous], 1987, SIMULATED ANNEALING
   [Anonymous], PLASMA GRAPH BASED D
   [Anonymous], TECHNICAL REPORT
   [Anonymous], STUD COMPUT INTELL
   [Anonymous], SMALL LABELS CREATE
   [Anonymous], UCAMCLTR608
   [Anonymous], 7 USENIX SEC S
   [Anonymous], 2003, WORKSH EC PEER PEER
   [Anonymous], 1960, IRE transactions on Electronic Computers, DOI [DOI 10.1109/TEC.1960.5221603, 10.1109/TEC.1960.5221603]
   [Anonymous], 1995, The official PGP user's guide
   [Anonymous], THESIS COLL PARK MD
   Artz D, 2007, J WEB SEMANT, V5, P58, DOI 10.1016/j.websem.2007.03.002
   BERRY G, 1986, THEOR COMPUT SCI, V48, P117, DOI 10.1016/0304-3975(86)90088-5
   Blaze M, 1996, P IEEE S SECUR PRIV, P164, DOI 10.1109/SECPRI.1996.502679
   BRZOZOWSKI JA, 1964, J ACM, V11, P481, DOI 10.1145/321239.321249
   Buchegger Sonja., 2009, P 2 AC M EUROSYS WOR, P46, DOI DOI 10.1145/1578002.1578010
   Chu Y.-H., 1997, WORLD WIDE WEB J, V2, P127
   Cutillo LA, 2009, IEEE COMMUN MAG, V47, P94, DOI 10.1109/MCOM.2009.5350374
   DIFFIE W, 1976, IEEE T INFORM THEORY, V22, P644, DOI 10.1109/TIT.1976.1055638
   Douceur JR, 2002, LECT NOTES COMPUT SC, V2429, P251, DOI 10.1007/3-540-45748-8_24
   Farmer R., 2010, Building Web Reputation Systems
   Iordanov B, 2010, LECT NOTES COMPUT SC, V6185, P25, DOI 10.1007/978-3-642-16720-1_3
   Josang A, 2007, DECIS SUPPORT SYST, V43, P618, DOI 10.1016/j.dss.2005.05.019
   Jsang A., 2002, P 15 BLED EL COMM C, V5
   Kohnfelder LorenM., 1978, Towards a practical public-key cryptosystem
   Owens S, 2009, J FUNCT PROGRAM, V19, P173, DOI 10.1017/S0956796808007090
   Pouwelse JA, 2008, CONCURR COMP-PRACT E, V20, P127, DOI 10.1002/cpe.1189
   Sherman A., 2009, CONEXT, P133
   Sun Y. L., 2006, P 25 IEEE INT C COMP, P1
   Yao WTM, 2003, LECT NOTES COMPUT SC, V2692, P301
NR 35
TC 2
Z9 2
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2015
VL 45
IS 4
BP 435
EP 454
DI 10.1002/spe.2226
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD0HU
UT WOS:000350752200001
DA 2024-07-18
ER

PT J
AU Cuadrado, JS
   Aracil, JP
AF Sanchez Cuadrado, Jesus
   Perera Aracil, Jesus
TI Scheduling model-to-model transformations with continuations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE model-to-model transformation; transformation scheduling; transformation
   algorithm
AB Model transformations are at the heart of model-driven engineering because they allow the automation of diverse kinds of model manipulations. Transformation scheduling is a key issue in the design and implementation of many transformation languages. This paper reports our results using continuations as the underlying technique for building a scheduling mechanism implicitly driven by data dependence among transformation rules. To support our experiments, we have built a proof-of-concept model transformation language, which is also reported here. First, we motivate the problem by analyzing the scheduling mechanism of current model transformation languages. Then, we introduce the notion of continuation, showing its applicability to model transformations. Afterwards, we present our approach, notably explaining how dependence is specified and giving the scheduling algorithm. We also analyze the lazy resolution of rules and how to deal with collection operations. The approach is validated by an implementation that targets the Java Virtual Machine and by running of the performance benchmarks that show its efficiency and scalability. Besides, we discuss how it can be applied to other existing transformation languages and present several applicability scenarios. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Sanchez Cuadrado, Jesus] Univ Autonoma Madrid, E-28049 Madrid, Spain.
   [Perera Aracil, Jesus] Univ Murcia, Murcia, Spain.
C3 Autonomous University of Madrid; University of Murcia
RP Cuadrado, JS (corresponding author), Univ Autonoma Madrid, Escuela Politecn Super, Ciudad Univ Cantoblanco, E-28049 Madrid, Spain.
EM jesus.sanchez.cuadrado@uam.es
RI Sanchez Cuadrado, Jesus/L-2365-2013
OI Sanchez Cuadrado, Jesus/0000-0001-9755-5616
FU Spanish Ministry of Economy and Competitivity ['Go Lite' TIN2011-24139];
   R&D programme of the Madrid Region ['e-Madrid' S2009/TIC-1650]
FX This work was funded by the Spanish Ministry of Economy and
   Competitivity (project 'Go Lite' TIN2011-24139) and the R&D programme of
   the Madrid Region (project 'e-Madrid' S2009/TIC-1650).
CR [Anonymous], SOFTWARE SYSTEMS MOD
   [Anonymous], P MOD TRANSF PRACT W
   [Anonymous], 1992, Compiling with Continuations
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Borger E., 2003, ABSTRACT STATE MACHI
   Boyer Brent., 2008, ROBUST JAVA BENCHMAR
   Bruneliere H, 2010, MODISCO GENERIC EXTE, P173
   Cuadrado JS, 2013, LNCS, P104
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Danvy Olivier., 1992, MATH STRUCT COMP SCI, V2, P361, DOI DOI 10.1017/S0960129500001535
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Ducasse S, 2007, IEEE SOFTWARE, V24, P56, DOI 10.1109/MS.2007.144
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   Geiss R, 2008, LECT NOTES COMPUT SC, V5088, P568
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2007, SCI COMPUT PROGRAM, V68, P114, DOI 10.1016/j.scico.2007.05.005
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Kelsey R, 1998, ACM SIGPLAN NOTICES, V33, P26, DOI 10.1145/290229.290234
   Kleppe A, 2006, LECT NOTES COMPUT SC, V4066, P173
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Lawley M, 2006, LECT NOTES COMPUT SC, V3844, P139
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   OMG, 2009, ARCH DRIV MOD ADM KN
   OMG, 2005, FIN AD SPEC MOF 2 0
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Rompf T, 2009, ACM SIGPLAN NOTICES, V44, P317, DOI 10.1145/1631687.1596596
   Rose LM, 2010, LECT NOTES COMPUT SC, V6394, P61
   Sanchez Cuadrado Jesus, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P176, DOI 10.1007/978-3-642-30476-7_12
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Cuadrado JS, 2009, SOFTW SYST MODEL, V8, P325, DOI 10.1007/s10270-008-0093-0
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Thomas David., 2000, Programming Ruby: the pragmatic programmer's guide
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Wagelaar D, 2011, LECT NOTES COMPUT SC, V6981, P623, DOI 10.1007/978-3-642-24485-8_46
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
NR 39
TC 4
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2014
VL 44
IS 11
BP 1351
EP 1378
DI 10.1002/spe.2202
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AT2AQ
UT WOS:000344733400003
DA 2024-07-18
ER

PT J
AU Debroy, V
   Wong, WE
AF Debroy, Vidroha
   Wong, W. Eric
TI A consensus-based strategy to improve the quality of fault localization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE consensus; software fault localization; program debugging;
   suspiciousness-based ranking
ID MUTATION; SLICES
AB A vast number of software fault localization techniques have been proposed recently with the growing realization that manual debugging is time-consuming, tedious, and error-prone, and fault localization is one of the most expensive debugging activities. Although some techniques perform better than others on a large number of data sets, they do not do so on all data sets and therefore, the actual quality of fault localization can vary considerably by using just one technique. This paper proposes the use of a consensus-based strategy that combines the results of multiple fault localization techniques to consistently provide high quality performance, irrespective of data set. Empirical evidence based on case studies conducted on six sets of programs (seven programs of the Siemens suite, and the gzip, grep, make, space, and Ant programs) and three different fault localization techniques (Tarantula, Ochiai, and H3) suggests that the consensus-based strategy holds merit and generally provides close to the best, if not the best, results. Empirically, we show that this is true of both single-fault and multifault programs. Additionally, the consensus-based strategy makes use of techniques that all operate on the same set of input data, minimizing the overhead. It is also simple to include or exclude techniques from consensus, making it an easily extensible or tractable strategy. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Debroy, Vidroha; Wong, W. Eric] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
C3 University of Texas System; University of Texas Dallas
RP Wong, WE (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
EM ewong@utdallas.edu
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Ailon N, 2008, J ACM, V55, DOI 10.1145/1411509.1411513
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 1998, CHISUDS US MAN
   Arrow KJ, 1950, J POLIT ECON, V58, P328, DOI 10.1086/256963
   Chen L., 1978, FTCS-8. The Eighth Annual International Conference on Fault-Tolerant Computing, P3
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Conitzer V., 2006, P 21 NAT C ART INT 1, P620
   Coppersmith D, 2006, PROCEEDINGS OF THE SEVENTHEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P776, DOI 10.1145/1109557.1109642
   Cranor L.F., 1996, THESIS WASHINGTON U
   Debroy V., 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P506, DOI 10.1109/COMPSACW.2011.92
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Dwork C., 2001, P 10 INT C WORLD WID, P613, DOI [10.1145/371920.372165, DOI 10.1145/371920.372165]
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   Jones J A., 2007, Debugging in parallel, P16
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   Latif-Shabgahi G, 2005, FUZZY SET SYST, V150, P579, DOI 10.1016/j.fss.2004.02.014
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Lyle J. R., 1987, Second International Conference on Computers and Applications (Cat. No.87CH2433-1), P877
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   von Neumann J., 1956, Annals of Mathematics Studies, V34, P43
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   Wong W. Eric, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P27, DOI 10.1109/ISSRE.2008.15
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2006, J SYST SOFTWARE, V79, P891, DOI 10.1016/j.jss.2005.06.045
   Wong WE, 2009, TECHNICAL REPORT
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang ZY, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P43, DOI 10.1145/1595696.1595705
   [No title captured]
NR 40
TC 21
Z9 24
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2013
VL 43
IS 8
SI SI
BP 989
EP 1011
DI 10.1002/spe.1146
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 279UM
UT WOS:000328984900006
DA 2024-07-18
ER

PT J
AU Huang, CM
   Yang, CC
   Tseng, CY
AF Huang, Chung-Ming
   Yang, Chia-Ching
   Tseng, Chun-Yu
TI A telematics service discovery platform using the distributed
   peer-to-peer networking system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE telematics; service discovery; geographic information system;
   location-based service
AB In this paper, a distributed telematics peer-to-peer networking system is proposed to provide an efficient and feasible service discovery mechanism for mobile users. When mobile users travel on the road, they may request for some services from service providers to meet their demands. Mobile users in vehicles are assumed to go through a lot of regions, in which each region is associated with a region server. Related information of all service providers in a region is stored in its region server, and each region server is in charge of the service discovery requests from all vehicles located in its region. This paper focuses on the issues of developing a distributed peer-to-peer telematics service discovery networking system over the vehicular network environment for mobile users. To provide the communication mechanism for telematics service discovery among region server, mobile users, and service providers, the Telematics Service Markup Language is proposed. According to clients' demands, three types of query scenarios are proposed, which are (1) reference point based query, (2) continual query, and (3) route-based query. Finally, we present usage examples and system implementation of distributed telematics peer-to-peer. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Huang, Chung-Ming; Yang, Chia-Ching; Tseng, Chun-Yu] Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Lab Multimedia Mobile Networking, Tainan 70101, Taiwan.
C3 National Cheng Kung University
RP Huang, CM (corresponding author), Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Lab Multimedia Mobile Networking, Tainan 70101, Taiwan.
EM huangcm@locust.csie.ncku.edu.tw
FU National Science Council of the Republic of China, Taiwan [NSC
   99-2219-E-006-009]
FX This research was supported by the National Science Council of the
   Republic of China, Taiwan under the contract number NSC
   99-2219-E-006-009.
CR Abrougui K, 2010, P GLOB TEL C GLOB 20, p[16, 610]
   Abrougui K, 2011, IEEE T INTELL TRANSP, V12, P717, DOI 10.1109/TITS.2011.2159377
   Ahlers D, 2009, WORKS POSIT NAVIGAT, P129, DOI 10.1109/WPNC.2009.4907815
   Anitha A., 2011, Proceedings 2011 International Conference on Signal Processing, Communication, Computing and Networking Technologies (ICSCCN 2011), P277, DOI 10.1109/ICSCCN.2011.6024559
   [Anonymous], 2012, OMA SEC US PLAN LOC
   Brisaboa NR, 2007, SOFTWARE PRACT EXPER, V37, P1319, DOI 10.1002/spe.807
   da Silva Campos B., 2011, 2011 IEEE Symposium on Computers and Communications (ISCC 2011), P719, DOI 10.1109/ISCC.2011.5983924
   Debroy S, 2008, P IEEE REG 10 C NOV, P1
   Fawaz A., 2011, 2011 11th International Conference on ITS Telecommunications (ITST), P474, DOI 10.1109/ITST.2011.6060104
   Ficco M, 2011, COMMUN ACM, V53, P116
   Ficco M, 2009, SOFTWARE PRACT EXPER, V39, P1095, DOI 10.1002/spe.919
   Hu L, 2011, VEH TECHN C VTC FALL, P1
   Huang CM, 2010, INT CON ADV INFO NET, P607, DOI 10.1109/AINA.2010.89
   Kim DK, 2007, MUE: 2007 INTERNATIONAL CONFERENCE ON MULTIMEDIA AND UBIQUITOUS ENGINEERING, PROCEEDINGS, P500
   Kim Y., 2009, OCEANS 2009, P1, DOI DOI 10.1109/WTS.2009.5068977
   Kuo1 S-P, 2007, P IEEE INT C MOB ADH, P1
   Liapis D, 2008, 2008 3RD INTERNATIONAL SYMPOSIUM ON WIRELESS PERVASIVE COMPUTING, VOLS 1-2, P133, DOI 10.1109/ISWPC.2008.4556182
   Lu HX, 2009, PROCEEDINGS OF 2009 IEEE INTERNATIONAL CONFERENCE ON COMMUNICATIONS TECHNOLOGY AND APPLICATIONS, P284, DOI 10.1109/ICCOMTA.2009.5349192
   Mountain D. M., 2007, P 4 ACM WORKSH GEOGR, P61
   Open Geospatial Consortium, 2007, KEYH MARK LANG KML 2
   Open Geospatial Consortium, 2007, GEOGR MARK LANG GML
   Popovich V, 2011, IEEE AERO EL SYS MAG, V26, P29, DOI 10.1109/MAES.2011.5980606
   Pradhan Sameer., 2011, Proceedings of the Fifteenth Conference on Computational Natural Language Learning: Shared Task, P1
   TaeKwon M, 2010, INT CONF ADV COMMUN, P364
   Telematics Forum, 2012, GLOB TEL PROT GTP 1
   Xiaoyu Shi, 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P2397, DOI 10.1109/CIT.2010.412
   Yu W, 2011, P 19 INT C GEOINF SH, p[1, 24]
   Zhang Zhen, 2010, 2010 Second IITA International Conference on Geoscience and Remote Sensing (IITA-GRS 2010), P438, DOI 10.1109/IITA-GRS.2010.5603117
NR 28
TC 0
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2013
VL 43
IS 6
BP 641
EP 662
DI 10.1002/spe.2125
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 140MD
UT WOS:000318657300002
OA Bronze
DA 2024-07-18
ER

PT J
AU Díaz, J
   Pérez, J
   Alarcón, PP
   Garbajosa, J
AF Diaz, Jessica
   Perez, Jennifer
   Alarcon, Pedro P.
   Garbajosa, Juan
TI Agile product line engineering-a systematic literature review
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agile product line engineering (APLE); agile software development;
   software product line engineering; systematic literature review
ID SOFTWARE; WORKSHOP; REUSE
AB Software Product Line Engineering (SPLE) demands upfront long-term investment in (i) designing a common set of core-assets and (ii) managing variability across the products from the same family. When anticipated changes in these core-assets have been predicted with certain accuracy, SPLE has proved significant improvements. However, when large/complex software product line projects have to deal with changing market conditions, alternatives to supplement SPLE are required. Agile Software Development (ASD) may be an alternative, as agile processes harness change for the customer's competitive advantage. However, when the aim is to scale Agile projects up to effectively manage reusability and variability across the products from the same family, alternatives to supplement agility are also required. As a result, a new approach called Agile Product Line Engineering (APLE) advocates integrating SPLE and ASD with the aim of addressing these gaps. APLE is an emerging approach, which implies that organizations have to face several barriers to achieve its adoption. This paper presents a systematic literature review of experiences and practices on APLE, in which the key findings uncover important challenges about how to integrate the SPLE model with an agile iterative approach to fully put APLE into practice. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Diaz, Jessica; Perez, Jennifer; Alarcon, Pedro P.; Garbajosa, Juan] Tech Univ Madrid UPM, Univ Politecn Madrid, E-28031 Madrid, Spain.
C3 Universidad Politecnica de Madrid
RP Díaz, J (corresponding author), Tech Univ Madrid UPM, Univ Politecn Madrid, EU Informat Ctra Valencia Km 7, E-28031 Madrid, Spain.
EM yesica.diaz@upm.es
RI Alarcón, Pedro Pablo/ABG-7026-2020; PEREZ, JENIFER/M-2506-2014;
   Garbajosa, Juan/B-5818-2012; Diaz, Jessica/J-9751-2012
OI Alarcón, Pedro Pablo/0000-0003-4285-5333; PEREZ,
   JENIFER/0000-0003-3192-7995; Garbajosa, Juan/0000-0003-0161-3485; Diaz,
   Jessica/0000-0001-6738-9370
FU Spanish MEC [DSDM TIN2008-00889-E]; MICINN [INNOSEP TIN2009-13849];
   MITYC [FLEXI FIT-340005-2007-37, ITEA2 6022]; UPM (Technical University
   of Madrid)
FX This work has been partially sponsored by the Spanish MEC (DSDM
   TIN2008-00889-E), MICINN (INNOSEP TIN2009-13849), MITYC (FLEXI
   FIT-340005-2007-37, ITEA2 6022) and UPM (Technical University of Madrid)
   under their Researcher Training program.
CR BABAR MA, 2009, SPLC 09 P 13 INT C S
   BAYER J, 2000, ECBS 00 P 7 IEEE INT, P237
   BUDGEN D, 2006, ICSE 06 P 28 INT C S, P1051
   CARBON R, 2006, APLE 06 1 INT WORKSH
   Carbon R, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P180, DOI 10.1109/SPLC.2008.21
   Chivers H, 2005, LECT NOTES COMPUT SC, V3556, P57
   Clements P., 2002, Software product lines
   COCKBURN A, 2006, COOPERATIVE GAME
   CODENIE W, 2009, VAMOS 09 P 3 INT WOR, V29, P61
   Cooper K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P205
   DUBA T, 2008, J INFORM SOFTWARE TE, V50, P833
   FENG K, 2007, AG 2007 C INT RES IN, P1
   Ghanam Y., 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P27, DOI 10.1109/AGILE.2010.6
   GHANAM Y, 2008, SPLC 2 SPLIT 08 P 5, P151
   GHANAM Y, 2009, SIGSOFT SOFTWARE ENG, V34, P25
   GHANAM Y, 2010, 2 XP WORKSH AG PROD
   GHANAM Y, 2008, SPLC 2 SPLC DOCT S 2, P377
   Ghanam Y, 2009, AGILE 2009 CONFERENCE, P41, DOI 10.1109/AGILE.2009.12
   Ghanam Y, 2010, LECT NOTES BUS INF, V48, P43
   Ghanam Y, 2010, LECT NOTES COMPUT SC, V6287, P211, DOI 10.1007/978-3-642-15579-6_15
   Ghanam Y, 2009, LECT NOTES BUS INF P, V31, P215
   Hanssen G., 2010, 43 HAW INT C SYST SC, P1, DOI DOI 10.1109/HICSS.2010.344
   Hanssen G., 2010, Workshop on Product Line Approaches in Software Engineering, International Conference on Software Engineering, P1
   Hanssen GK, 2008, J SYST SOFTWARE, V81, P843, DOI 10.1016/j.jss.2007.10.025
   HANSSEN GK, 2007, ESSAY
   Johansen T, 2005, LECT NOTES COMPUT SC, V3547, P216
   KAKARONTZAS G, 2008, CIMCA 08 P 2008 INT, P146
   Kane D, 2003, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P132, DOI 10.1109/ADC.2003.1231463
   Känsälä K, 2004, LECT NOTES COMPUT SC, V3009, P424
   Karam M, 2008, J SYST SOFTWARE, V81, P855, DOI 10.1016/j.jss.2007.10.031
   Kircher M, 2006, SPLC 2006: 10th International Software Product Line Conference, Proceedings, P163
   Kitchenham B., 2004, TRSE0401 KEEL U DEP, P33
   KURMANN R, 2006, APLE 06 1 INT WORKSH
   Martinez J, 2009, LECT NOTES BUS INF P, V31, P247
   MCGREGOR J, 2008, SPLC 08 IEEE COMP SO, P364
   McGregor JD, 2008, J OBJECT TECHNOL, V7, P7
   Mohan K, 2010, IEEE SOFTWARE, V27, P48, DOI 10.1109/MS.2010.31
   NAVARRETE F, 2006, APLE 06 1 INT WORKSH
   NOOR MA, 2006, APLE 06 1 INT WORKSH
   Noor MA, 2008, J SYST SOFTWARE, V81, P868, DOI 10.1016/j.jss.2007.10.028
   Noor MA, 2008, LECT NOTES COMPUT SC, V5082, P69
   NORTHROP L, 2008, CMUSEI2008, P85
   O'Leary P, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P121
   OLEARY P, 2007, CEE SET 07 P 2 IFIP, P166
   OLEARY P, 2009, SOFTW PROD LIN C P 1, P121
   OLEARY P, 2008, CEE SET 08 P 3 IFIP, P189
   OLEARY P, 2009, EUROSPI 09 P 16 EUR
   OLEARY P, 2007, RISE 07 P 4 INT WORK, P9
   Paige RF, 2006, LECT NOTES COMPUT SC, V4044, P198
   Pérez J, 2010, LECT NOTES COMPUT SC, V6285, P102, DOI 10.1007/978-3-642-15114-9_10
   Pérez J, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P221, DOI 10.1109/WICSA.2009.5290808
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   RAATIKAINEN M, 2008, SDG 08 P 1 INT WORKS, P17
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Shore J., 2007, ART AGILE DEV
   Taborda LJM, 2004, LECT NOTES COMPUT SC, V3054, P100
   TIAN K, 2006, APLE 06 1 INT WORKSH
   Trinidad P, 2008, J SYST SOFTWARE, V81, P883, DOI 10.1016/j.jss.2007.10.030
   TRINIDAD P, 2006, APLE 06 1 INT WORKSH
   Yoder JW, 2002, LECT NOTES COMPUT SC, V2319, P336
NR 60
TC 41
Z9 43
U1 1
U2 31
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2011
VL 41
IS 8
SI SI
BP 921
EP 941
DI 10.1002/spe.1087
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 777DW
UT WOS:000291596600005
DA 2024-07-18
ER

PT J
AU Hanssen, GK
AF Hanssen, Geir K.
TI Agile software product line engineering: enabling factors
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software product line engineering; agile software development;
   qualitative research; industrial case study
ID USER INVOLVEMENT
AB This paper reports on a study of a software product line organization that has adopted agile software development to address process rigidity and slowing performance. Experience has showed that despite some impediments, this has become a valuable change to both the organization and its development process. The aim of this study is to identify and understand enabling factors of a combined process, and to understand their subsequent effects. Qualitative data are summarized and analyzed, giving insight into the actions taken, their effects that have emerged over time, and the enabling and contextual factors. The study concludes that a combined process is feasible, that the simplified approach makes the organization more flexible and thus capable of serving a volatile market with fast-changing technologies. This has also enabled the organization to collaborate better with external actors. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Hanssen, Geir K.] Norwegian Univ Sci & Technol, NO-7491 Trondheim, Norway.
   [Hanssen, Geir K.] SINTEF ICT, NO-7465 Trondheim, Norway.
C3 Norwegian University of Science & Technology (NTNU); SINTEF
RP Hanssen, GK (corresponding author), Norwegian Univ Sci & Technol, Sem Saelands Vei 7-9, NO-7491 Trondheim, Norway.
EM ghanssen@sintef.no
OI Hanssen, Geir Kjetil/0000-0003-2718-6637
FU Research Council of Norway [174390/I40, 179851/I40]
FX The authors are grateful to the people at CSoft for sharing their
   precious time, providing highly valuable input to this study. This work
   was done as part of the EVISOFT project (grant 174390/I40) and the Agile
   project (grant 179851/I40), both partly funded by the Research Council
   of Norway.
CR [Anonymous], 2002, CASE STUDY RES
   [Anonymous], 2004, XP Ser
   [Anonymous], AGILE SOFTWARE DEV S
   [Anonymous], 2000, Kluwer international series in software engineering
   BABAR MA, 2009, P 13 INT SOFTW PROD, P171
   Beck K., 2000, EXTREME PROGRAMMING
   Böckle G, 2005, LECT NOTES COMPUT SC, V3714, P124
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   CHESBROUGH HW, 2003, MIT SOLAN MANAGEMENT, V44, P9
   Clements P., 2002, Software product lines
   Cockburn A., 2002, Agile Software Development: Software Through People
   Costa, 2006, 1 INT WORKSH AG PROD
   Cusumano M.A., 2006, PRODUCT PROCESS SERV
   DAFT RL, 1987, MIS QUART, V11, P355, DOI 10.2307/248682
   Damodaran L, 1996, BEHAV INFORM TECHNOL, V15, P363, DOI 10.1080/014492996120049
   Dubey A., 2007, Delivering Software as a Service
   ECKSTEIN J, 2004, AGILE SOFTWARE DEV L, P234
   Enkel E, 2009, R&D MANAGE, V39, P311, DOI 10.1111/j.1467-9310.2009.00570.x
   Fægri TE, 2007, IEEE SOFTWARE, V24, P96, DOI 10.1109/MS.2007.68
   GHANAM Y, 2008, P SOFTW PROD LIN C S
   Gilb T., 2005, COMPETITIVE ENG HDB, P480
   GRUNBACHER P, 2001, P 34 HAW INT C SYST, P1
   Hanssen G., 2010, Workshop on Product Line Approaches in Software Engineering, International Conference on Software Engineering, P1
   Hanssen GK, 2008, J SYST SOFTWARE, V81, P843, DOI 10.1016/j.jss.2007.10.025
   Hanssen GK, 2012, J SYST SOFTWARE, V85, P1455, DOI 10.1016/j.jss.2011.04.020
   Hanssen GK, 2009, PROC IEEE INT CONF S, P487, DOI 10.1109/ICSM.2009.5306278
   HANSSEN GK, 2006, P 5 INT S EMP SOFTW, P164
   Johansen T, 2005, LECT NOTES COMPUT SC, V3547, P216
   KEIL M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203356.203363
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Larman C., 2003, AGILE SOFTWARE DEV S
   LARMAN C, 2008, SCALING LEAN AGILE D, P348
   LEFFINGWELL D, 2007, AGILE SOFTWARE DEV S, P349
   Lettl C, 2007, J ENG TECHNOL MANAGE, V24, P53, DOI 10.1016/j.jengtecman.2007.01.004
   March JG, 1991, ORGAN SCI, V2, P1, DOI 10.1287/orsc.2.1.1
   McGregor JD, 2008, J OBJECT TECHNOL, V7, P7
   Messerschmitt DG, 2003, SOFTWARE ECOSYSTEM: UNDERSTANDING AN INDISPENSABLE TECHNOLOGY AND INDUSTRY, P41
   MOE NB, 2002, P EUR SOFTW PROC IMP, P177
   Noor MA, 2008, J SYST SOFTWARE, V81, P868, DOI 10.1016/j.jss.2007.10.028
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Reel JS, 1999, IEEE SOFTWARE, V16, P18, DOI 10.1109/52.765782
   Sanchez R, 1996, STRATEGIC MANAGE J, V17, P63, DOI 10.1002/smj.4250171107
   Sawhney M, 2005, J INTERACT MARK, V19, P4, DOI 10.1002/dir.20046
   Schwaber K., 2001, Agile software development with scrum
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   TIAN K, 2006, P 1 INT WORKSH AG PR
   Trist E., 1977, Australian Journal of Management, V2, P161, DOI 10.1177/031289627700200205
   Von Hippel Eric, 2005, Democratizing Innovation
   VONHIPPEL E, 1986, MANAGE SCI, V32, P791, DOI 10.1287/mnsc.32.7.791
   Zook C., 2010, Profit from the Core: A Return to Growth in Turbulent Times. Ed, V2a
NR 50
TC 7
Z9 7
U1 0
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2011
VL 41
IS 8
SI SI
BP 883
EP 897
DI 10.1002/spe.1064
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 777DW
UT WOS:000291596600003
DA 2024-07-18
ER

PT J
AU Romei, A
   Turini, F
AF Romei, Andrea
   Turini, Franco
TI XML data mining
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data mining; knowledge discovery; XML; XQuery; query language; inductive
   database
ID ITEMSETS
AB With the spreading, of XML sources, mining XML data can be an important objective in the near future. This paper presents a project focussed on designing a general-purpose query language in Support of mining XML data. In our framework, raw data, mining models and domain knowledge are represented by way of XML documents and stored inside native XML databases. Data mining (DM) tasks are expressed in an extension of XQuery. Special attention is given to the frequent pattern discovery problem, and a way of exploiting domain-dependent optimization,,, and efficient data Structures as deeper as possible in the extraction process is presented. We report the results of a first bunch of experiments, showing that a good trade-off between expressiveness and efficiency in XML DM is not a chimera. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Romei, Andrea; Turini, Franco] Univ Pisa, Dept Comp Sci, I-56127 Pisa, Italy.
C3 University of Pisa
RP Romei, A (corresponding author), Univ Pisa, Dept Comp Sci, Largo Bruno Pontecorvo 3, I-56127 Pisa, Italy.
EM romei@di.unipi.it
CR AGRAWAL R, 1994, P 20 INT C VER LARG, V12, P487
   [Anonymous], P ACM SIGMOD
   [Anonymous], 2006, ACM SIGKDD INT C KNO, DOI DOI 10.1145/1150402.1150531
   [Anonymous], EXTENSIBLE BUSINESS
   [Anonymous], 2000, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   Bentayeb F, 2002, LECT NOTES ARTIF INT, V2366, P423
   Bonchi F, 2005, IEEE INTELL SYST, V20, P25, DOI 10.1109/MIS.2005.45
   Bonchi F, 2007, DATA KNOWL ENG, V60, P377, DOI 10.1016/j.datak.2006.02.006
   BOTAN I, 2007, P 33 INT C VER LARG, P75
   Braga D, 2002, PROC INT C TOOLS ART, P57, DOI 10.1109/TAI.2002.1180788
   Bucila C, 2003, DATA MIN KNOWL DISC, V7, P241, DOI 10.1023/A:1024076020895
   Coenen F, 2004, IEEE T KNOWL DATA EN, V16, P774, DOI 10.1109/TKDE.2004.8
   Data Mining Group, 2009, PRED MOD MARK LANG P
   Esposito R, 2006, J INTELL INF SYST, V26, P95, DOI 10.1007/s10844-006-5453-z
   FENG L, 2004, MINING INTERESTING X, P814
   Fromont E, 2007, LECT NOTES COMPUT SC, V4747, P81
   GHELLI G, 2007, P 33 INT C VER LARG, P81
   Giannotti F, 2004, IEEE T KNOWL DATA EN, V16, P1232, DOI 10.1109/TKDE.2004.64
   HAN J, 1996, P 1 WORKSH RES ISS D, P122
   HOLUPIREK A, 2009, P 12 INT C EXT DAT T, P1108
   *IBM, 2008, INT MIN 8 2
   Imielinski T, 1996, COMMUN ACM, V39, P58, DOI 10.1145/240455.240472
   Imielinski T, 1999, DATA MIN KNOWL DISC, V3, P373, DOI 10.1023/A:1009816913055
   Jeudy B., 2002, Intelligent Data Analysis, V6, P341
   Kumar V, 2005, INTRO DATA MINING
   Law Y.-N., 2004, Proceedings of the Thirtieth International Conference on Very Large Data Bases - Volume 30, VLDB'04, page, P492
   Meo R, 1998, DATA MIN KNOWL DISC, V2, P195, DOI 10.1023/A:1009774406717
   Meo R, 2006, LECT NOTES COMPUT SC, V4254, P814
   Mitchell T. M., 1997, MACHINE LEARNING
   MORZY T, 1997, P 1 E EUR S ADV DAT, P317
   Netz A, 2001, PROC INT CONF DATA, P379, DOI 10.1109/ICDE.2001.914850
   *OP GEOSP CONS, 2004, 03105R1 OGC
   Pyle D., 1999, DATA PREPARATION DAT
   Romei A, 2006, DATA KNOWL ENG, V57, P179, DOI 10.1016/j.datak.2005.04.007
   *SPSS, 2008, CLEM 12 0
   *W3C WORLD WEB CON, 2004, OWL WEB ONT LANG
   *W3C WORLD WID CON, 2004, RDF XML SYNT SPEC
   *W3C WORLD WID WEB, 2007, XQUERY 1 0 XML QUER
   *W3C XML PROT WORK, 2007, SOAP VERS 1 2 1
   Walmsley Priscilla., 2007, XQuery
   WAN JWW, 2004, P 2 WORKSH AUSTR INF, V32, P169
   WICKER J, 2008, P ECML PKDD EUR C SP, P220
   [No title captured]
NR 43
TC 7
Z9 7
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2010
VL 40
IS 2
BP 101
EP 130
DI 10.1002/spe.944
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 561AE
UT WOS:000274946400001
DA 2024-07-18
ER

PT J
AU Abramson, D
   Chu, C
   Kurniawan, D
   Searle, A
AF Abramson, David
   Chu, Clement
   Kurniawan, Donny
   Searle, Aaron
TI Relative debugging in an integrated development environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE debugging; integrated development environments; software tools
ID SOFTWARE; TECHNOLOGY
AB Relative Debugging allows a user to compare the internal state of two programs as they run, making it possible to test whether two programs perform the same function given the same input. When implemented with a command line user interface, a relative debugger looks like traditional debugging tools with the addition of commands that describe which structures should be equivalent in the two programs. In this paper, we discuss relative debugging within an integrated development environment, and show that there are significant advantages over a command line form. We describe a pluggable, modular, architecture that works with a variety of different products, including Microsoft's Visual Studio, SUN's NetBeans, and IBM's Eclipse. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Abramson, David; Chu, Clement; Kurniawan, Donny] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Searle, Aaron] Queensland Univ Technol, Fac Informat Technol, Brisbane, Qld 4001, Australia.
C3 Monash University; Queensland University of Technology (QUT)
RP Abramson, D (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM david.abramson@infotech.monash.edu.au
OI Abramson, David/0000-0003-0441-4596
FU Australian Government; Object Technology International; Microsoft; IBM;
   SUN
FX Contract/grant sponsor: Australian Government; Contract/grant sponsor:
   Object Technology International; Contract/grant sponsor: Microsoft;
   Contract/grant sponsor: IBM; Contract/grant sponsor: SUN
CR ABRAMSON D, 1995, P IEEE SUP 1995 SAN
   ABRAMSON D, 1996, COMMUNICATIONS ASS C, V39, P67
   AGRAWAL H, 1991, THESIS PURDUE U, P194
   [Anonymous], 1982, Algorithmic Program Debugging
   BOEKHOUDT C, 2003, ACM QUEUE, V1, P74
   BROWN AW, 1992, IEEE SOFTWARE, V9, P23, DOI 10.1109/52.120598
   CASE AF, 1985, DATA BASE, V17, P35, DOI 10.1145/1040694.1040698
   Decasse M., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P162, DOI 10.1109/ICSE.1988.93698
   DESRIVIERES J, 2007, ECLIPSE PLATFORM TEC
   FUGGETTA A, 1993, COMPUTER, V26, P25, DOI 10.1109/2.247645
   Glass RL, 1999, COMMUN ACM, V42, P74, DOI 10.1145/293411.293481
   Kline RB, 2005, INT J HUM-COMPUT ST, V63, P607, DOI 10.1016/j.ijhcs.2005.05.002
   KURTZ T, 1987, HIST PROGRAMMING LAN, P515
   *MICR, 2001, TC39TG3 ECMA
   NORMAN RJ, 1989, COMMUN ACM, V32, P1102, DOI 10.1145/66451.66458
   REIS C, 2004, SIGCSE 04, P156
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   SEARLE A, 2006, THESIS QUEENSLAND U
   SEARLE A, 2003, DUCT INTERACTIVE DEF
   Sommerville I, 2001, Software Engineering
   Tsuda M., 1992, International Conference on Software Engineering, P49, DOI 10.1109/ICSE.1992.753489
   Watson G, 2000, IEEE CONCURR, V8, P42, DOI 10.1109/4434.895105
   WATSON G, 2001, THESIS MONASH U CLAY
   WHALLEY DB, 1994, ACM T PROGR LANG SYS, V16, P1648, DOI 10.1145/186025.186103
   Yang ZH, 2007, IEEE SOFTWARE, V24, P87, DOI 10.1109/MS.2007.58
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
   Zeller A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P316, DOI 10.1109/FOSE.2007.31
NR 29
TC 1
Z9 1
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP 25
PY 2009
VL 39
IS 14
BP 1157
EP 1183
DI 10.1002/spe.932
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 496AV
UT WOS:000269941200001
DA 2024-07-18
ER

PT J
AU Appeat, C
   Beaudouin-Lafon, M
AF Appeat, C.
   Beaudouin-Lafon, M.
TI SwingStates: adding state machines to Java and the Swing toolkit
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE human-computer interaction; graphical user interfaces; user interface
   toolkits; finite-state machines; Java Swing
ID DESIGN
AB This article describes SwingStates, a Java toolkit designed to facilitate the development of graphical user interfaces and bring advanced interaction techniques to the Java platform. SwingStates is based on the use of finite-state machines specified directly in Java to describe the behavior of interactive systems. State machines can be used to redefine the behavior of existing Swing widgets or, in combination with a new canvas widget that features a rich graphical model, to create brand new widgets. SwingStates also supports arbitrary input devices to implement novel interaction techniques based, for example, on bi-manual or pressure-sensitive input. We have used SwingStates in several Master's-level classes over the past two years and have developed a benchmark approach to evaluate the toolkit in this context. The results demonstrate that SwingStates can be used by non-expert developers with little training to successfully implement advanced interaction techniques. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Appeat, C.; Beaudouin-Lafon, M.] Univ Paris 11, LRI, F-91405 Orsay, France.
   [Appeat, C.; Beaudouin-Lafon, M.] CNRS, F-91405 Orsay, France.
   [Appeat, C.; Beaudouin-Lafon, M.] INRIA, F-91893 Orsay, France.
C3 Universite Paris Saclay; Centre National de la Recherche Scientifique
   (CNRS); Inria
RP Appeat, C (corresponding author), Univ Paris 11, LRI, Bat 490, F-91405 Orsay, France.
EM appert@lri.fr; mbl@lri.fr
OI Appert, Caroline/0000-0002-3050-9284; Beaudouin-Lafon,
   Michel/0000-0002-2905-9810
CR [Anonymous], 2005, Proceedings of the SIGCHI conference on Human factors in computing systems
   Apitz Georg, 2004, P 17 ANN ACM S US IN, P3, DOI [10.1145/1029632.1029635, DOI 10.1145/1029632.1029635]
   APPERT C, 2006, C FRANC INT HOMM MAC, P99
   APPERT C, 2004, HCI 04 PEOPL COMP 18, P279
   Appert Caroline., 2006, CHI'06: Proceedings of the SIGCHI conference on Human Factors in computing systems, P21
   Bastide R, 2003, INTERACT COMPUT, V15, P309, DOI 10.1016/S0953-5438(03)00011-0
   Beaudouin-Lafon M., 2004, Proceedings of the working conference on Advanced visual interfaces, P15, DOI DOI 10.1145/989863.989865
   Beaudouin-Lafon Michel, 2000, P WORK C ADV VIS INT, P102, DOI DOI 10.1145/345513.345267
   BEAUDOUINLAFON M, 1991, FOCUS COMPUTER GRAPH, P197
   Bederson B.B., 1996, UIST '96, P169
   Bederson BB, 2004, IEEE T SOFTWARE ENG, V30, P535, DOI 10.1109/TSE.2004.44
   BERARD F, 2006, TRIMAGCLIPSIIHM20060
   BLANCH R, 2006, AVI 06 C ADV VIS INT, P51
   BUXTON WAS, 1990, HUMAN-COMPUTER INTERACTION : INTERACT 90, P449
   Callahan J., 1988, P ACM CHI C HUMAN FA, P95, DOI DOI 10.1145/57167.57182
   CHANG DW, 1993, UIST 93 P 6 ANN ACM, P45
   ENG E, 1996, LINUX J, V31
   Fekete JD, 2004, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2004, PROCEEDINGS, P167, DOI 10.1109/INFVIS.2004.64
   GREEN M, 1986, ACM T GRAPHIC, V5, P244, DOI 10.1145/24054.24057
   GREEN M, 1985, SIGGRAPH 85 P 12 ANN, P205
   Guimbretiere F., 2000, UIST. Proceedings of the 13th Annual ACM Symposium on User Interface Software and Technology, P213, DOI 10.1145/354401.354778
   HUDSON S, 2005, CHI 05 C HUM FACT CO, P381
   Jacob R. J. K., 1999, ACM Transactions on Computer-Human Interaction, V6, P1, DOI 10.1145/310641.310642
   JACOB RJK, 1983, COMMUN ACM, V26, P259, DOI 10.1145/2163.358093
   *JINPUT, 2007, JAV INP API PROJ
   KABBASH P, 1994, HUMAN FACTORS IN COMPUTING SYSTEMS, CHI '94 CONFERENCE PROCEEDINGS - CELEBRATING INTERDEPENDENCE, P417, DOI 10.1145/191666.191808
   KURTENBACH G, 1994, HUMAN FACTORS IN COMPUTING SYSTEMS, CHI '94 CONFERENCE PROCEEDINGS - CELEBRATING INTERDEPENDENCE, P258, DOI 10.1145/191666.191759
   Landay James A., 1996, C COMPANION HUMAN FA, P398, DOI 10.1145/257089.257396
   LECOLINET E, 2003, UIST 03 P 16 ANN ACM, P135
   Logan S., 2001, GTK PROGRAMMING C
   MACKAY W, CHI 07 C COMP HUM FA, P1425
   MYERS BA, 1990, COMPUTER, V23, P71, DOI 10.1109/2.60882
   MYERS BA, 1990, ACM T INFORM SYST, V8, P289, DOI 10.1145/98188.98204
   Myers BA, 1997, IEEE T SOFTWARE ENG, V23, P347, DOI 10.1109/32.601073
   MYERS S, 1991, UIST 91 S US INT SOF, P211
   NEWMAN WA, 1968, SEMINAL GRAPHICS PIO, P409
   Olsen DR, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P251
   Ousterhout J.K., 1994, TCL TK TOOLKIT
   PALANQUE PA, 1993, CAISE 93, P569
   PIETRIGA EA, 2006, VL HCC 05 S VIS LANG, P145
   Pook S., 2000, Proceedings of ACM Conference on Human Factors in Computing Systems (CHI). (The Hague, P263, DOI [DOI 10.1145/633292.633446, 10.1145/633292.6334461, DOI 10.1145/633292.6334461]
   Raisamo R., 1996, UIST, P157
   RAMOS G, 2005, UIST 05, P143
   REKIMOTO J, 1997, UIST 97, P31, DOI DOI 10.1145/263407.263505
   RUBINE D, 1991, COMP GRAPH, V25, P329, DOI 10.1145/127719.122753
   RUMBAUGH JAMES., 1998, UNIFIED MODELING LAN
   STAMANT R, 2002, P 2 INT S SMART GRAP, P86
   STATECHARTS HD, 1987, SCI COMPUT PROGRAM, V8, P237
   STATEMASTER WP, 1989, CHI 89 C HUM FACT CO, P177
   STRAUSS PS, 1993, OOPSLA 93 P C OBJ OR, P192
   Terry Michael, 2002, Proceedings of the ACM Symposium on User Interface Software and Technology, P71, DOI 10.1145/571985.571996
   WASSERMAN AI, 1985, IEEE T SOFTWARE ENG, V11, P699, DOI 10.1109/TSE.1985.232519
   [No title captured]
   2007, STATE CHART XML SCXM
   2007, STATE MACHINE COMPIL
NR 55
TC 15
Z9 17
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2008
VL 38
IS 11
BP 1149
EP 1182
DI 10.1002/spe.867
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 364OR
UT WOS:000260345500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mishra, D
   Shaffer, CA
   Ramakrishnan, N
   Watson, LT
   Bae, KK
   He, H
   Verstak, AA
   Tranter, WH
AF Mishra, Dhananjay
   Shaffer, Clifford A.
   Ramakrishnan, Naren
   Watson, Layne T.
   Bae, Kyung K.
   He, Han
   Verstak, Alex A.
   Tranter, William H.
TI S<SUP>4</SUP>W:: a problem-solving environment for wireless system
   design
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE problem-solving environment; wireless system design; visualization;
   database-centered architecture
ID MANAGEMENT; WBCSIM; CELL
AB This work describes the Site-Specific System Simulator for Wireless System Design ((SW)-W-4), a problem-solving environment (PSE) that integrates visualization and computational tools with a high-level graphical user interface. (SW)-W-4 improves the ability of wireless system engineers to design an indoor wireless system by encouraging them to think in terms of designing the system for optimal performance. Issues of computation management, data management, and location of resources are hidden from the user. The complex nature of data sets in the domain of wireless simulations calls for a customized set of visualization tools. Therefore, a number of ad hoc visualizations were developed for (SW)-W-4. A study comparing the integrated system with an earlier, unintegrated version is presented. This helps to demonstrate the productivity gains that a PSE provides. (C) 2007 John Wiley & Sons, Ltd.
C1 Virginia Polytech Inst & State Univ, Dept Comp Sci, Blacksburg, VA 24061 USA.
   Virginia Polytech Inst & State Univ, Dept Math, Blacksburg, VA 24061 USA.
   Virginia Polytech Inst & State Univ, Dept Elect & Comp Engn, Blacksburg, VA 24061 USA.
C3 Virginia Polytechnic Institute & State University; Virginia Polytechnic
   Institute & State University; Virginia Polytechnic Institute & State
   University
RP Shaffer, CA (corresponding author), Virginia Polytech Inst & State Univ, Dept Comp Sci, Blacksburg, VA 24061 USA.
EM shaffer@vt.edu
OI Shaffer, Cliff/0000-0003-0001-0295; Ramakrishnan,
   Naren/0000-0002-1821-9743
CR Ailamaki A, 1998, TENTH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT - PROCEEDINGS, P190, DOI 10.1109/SSDM.1998.688123
   Allen NA, 2003, SIMUL-T SOC MOD SIM, V79, P674, DOI 10.1177/0037549703040944
   ALSCHER RG, 2001, P HIGH PERF COMP S A, P64
   Anderson C. R., 2002, THESIS VIRGINIA TECH THESIS VIRGINIA TECH
   [Anonymous], 1996, WIRELESS COMMUNICATI
   [Anonymous], P 4 C VIS
   BOISVERT RF, 1985, SOLVING ELLIPTIC PRO
   BONOMO JP, 1986, CSDTR569 PURD U DEP
   BRAMLEY R, 2000, P 9 IEEE INT S HIGH
   CONRAD ED, 2005, FDN SYSTEMS BIOL ENG
   Drashansky T, 1999, COMMUN ACM, V42, P48, DOI 10.1145/295685.295699
   ELDRED MS, 1998, P 7 AIAA USAF NASA I
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   GALLOPOULOS E, 1995, ACM COMPUT SURV, V27, P277, DOI 10.1145/210376.210396
   Goel A, 1999, ENG COMPUT-GERMANY, V15, P198, DOI 10.1007/s003660050014
   Goel A, 2001, COMPUT SCI ENG, V3, P56, DOI 10.1109/5992.895188
   Gordon JC, 2005, NUCLEIC ACIDS RES, V33, pW368, DOI 10.1093/nar/gki464
   GUISSET P, 1997, P ASME S AC NOIS CON
   HE J, 2002, THESIS VIRGINIA TECH
   Johnson C, 1999, COMPUTER, V32, P59, DOI 10.1109/2.809252
   JONES DR, 1993, J OPTIMIZ THEORY APP, V79, P157, DOI 10.1007/BF00941892
   KINGSLEY G, 1998, P 7 AIAA USAF NASA I
   Markus S, 1997, IEEE COMPUT SCI ENG, V4, P43, DOI 10.1109/99.615430
   MESSAC A, 2000, ENG OPTIMIZATION J, V32
   MISHRA D, 2004, THESIS VIRGINIA TECH
   Moraru II, 2002, ANN NY ACAD SCI, V971, P595, DOI 10.1111/j.1749-6632.2002.tb04535.x
   OLSEN DR, 1998, DEV USER INTERFACES
   OUSTERHOUT JK, 1994, INTRO TCL TK
   Parker SG, 1997, IEEE COMPUT SCI ENG, V4, P50, DOI 10.1109/99.641609
   Ramakrishnan N, 2002, CONCURR COMP-PRACT E, V14, P1241, DOI 10.1002/cpe.679
   Rice JR, 1996, IEEE COMPUT SCI ENG, V3, P44, DOI 10.1109/99.537091
   SHAFFER CA, 1999, P HIGH PERF COMP S A, P242
   Shu J, 2004, ADV ENG SOFTW, V35, P115, DOI 10.1016/j.advengsoft.2003.09.002
   TONG SS, 1992, P AER DESIGN C IRV C
   Verstak A, 2002, P NEXT GEN SOFTW WOR
   VERSTAK AA, 2002, THESIS VIRGINIA TECH
   Watson LT, 2002, J COMPUT CIVIL ENG, V16, P259, DOI 10.1061/(ASCE)0887-3801(2002)16:4(259)
   WESTON RP, 1994, P 5 AIAA USAF NASA I, P1091
   Wood J, 1997, VISUALIZATION '97 - PROCEEDINGS, P253, DOI 10.1109/VISUAL.1997.663890
   WRIGHT H, 2000, PROBLEM SOLVING ENV, P1323
   YUEN DA, 2003, VISUAL GEOSCIENCES, V8, P83
   [No title captured]
NR 42
TC 2
Z9 3
U1 0
U2 2
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2007
VL 37
IS 14
BP 1539
EP 1558
DI 10.1002/spe.817
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 228JA
UT WOS:000250725000005
DA 2024-07-18
ER

PT J
AU Eberhard, J
   Tripathi, A
AF Eberhard, John
   Tripathi, Anand
TI Mechanisms for object caching in distributed applications using Java RMI
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE RMI; distributed systems; caching
AB Remote Method Invocation (RMI), a mechanism to access remote objects in Java-based distributed applications, uses network communication for each method invocation. Consequently, using RMI in a wide-area environment can cause poor application performance. One solution to improve performance is to cache the objects such that network communication is not necessary:for each method invocation. In this paper, we present mechanisms to transparently add object caching to RMI These mechanisms are compatible with existing RMI applications and use an event-based model to support different consistency policies. The mechanisms also include the ability to adaptively select the consistency policy for an object based on its usage pattern. A novel feature of our mechanisms is the use of a 'reduced object', which is a partial representation of the RMI object. We experimentally evaluate and demonstrate the benefits of our mechanisms. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Minnesota, Dept Comp Sci, Minneapolis, MN 55455 USA.
C3 University of Minnesota System; University of Minnesota Twin Cities
RP Eberhard, J (corresponding author), Univ Minnesota, Dept Comp Sci, Minneapolis, MN 55455 USA.
EM eberhard@cs.umn.edu
CR ALDRICH J, 1999, P 6 INT STAT AN S SA, P19
   ARIDOR Y, 2000, P ACM JAV GRAND C SA, P168
   BAKKER A, 1999, P 7 IEEE WORKSH FUT
   BAKKER A, 2003, IRCS003 U AMST DEP C
   BOGDA J, 1999, P 14 ANN ACM SIGPLAN
   Eberhard J, 2005, WORDS 2005: 10TH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE, PROCEEDINGS, P279, DOI 10.1109/WORDS.2005.44
   EBERHARD J, 2001, P IFIP ACM INT C DIS, P15
   Garbinato B., 1995, Distributed Systems Engineering, V2, P14, DOI 10.1088/0967-1846/2/1/002
   GHEZZI C, 2004, P 7 INT C FUND APPR, P339
   HALTER SL, 2000, ENTERPRISE JAVA PERF
   Hassoun Y, 2005, SOFTWARE PRACT EXPER, V35, P75, DOI 10.1002/spe.629
   JOSEPH AD, 1995, P 15 ACM S OP SYST P, P156
   KRINTZ C, 1999, P 14 ANN ACM SIGPLAN
   KRISHNASWAMY V, 2000, P MIDDL 2000 C APR S, P45
   KRISHNASWAMY V, 1998, P 4 USENIX C OBJ OR
   LIPKIND I, 1999, P 14 ANN ACM SIGPLAN
   Liskov B, 1999, LECT NOTES COMPUT SC, V1628, P230
   Maassen J, 2001, ACM T PROGR LANG SYS, V23, P747, DOI 10.1145/506315.506317
   Maassen J, 2001, CONCURR COMP-PRACT E, V13, P681, DOI 10.1002/cpe.581
   MAZOUNI KR, 1995, P INT C TECHN OBJ OR
   SHAPIRO M, 1985, P 6 IEEE INT C DISTR, P198
   *SUN MICR, 2003, US CUST RMI SOCK FAC
   *SUN MICR, 2003, DYN PROX CLASS
   *SUN MICR, 2003, JAV REM METH INV SPE
   van Steen M, 1999, IEEE CONCURR, V7, P70, DOI 10.1109/4434.749137
   VANHEININGEN W, 2006, P 8 INT WORKSH JAV P
   Veldema R, 2003, IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, PROCEEDINGS, P127
NR 27
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2007
VL 37
IS 8
BP 799
EP 831
DI 10.1002/spe.783
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 187HB
UT WOS:000247837100001
DA 2024-07-18
ER

PT J
AU Torrey, LA
   Coleman, J
   Miller, BP
AF Torrey, Lisa A.
   Coleman, Joyce
   Miller, Barton P.
TI A comparison of interactivity in the Linux 2.6 scheduler and an MLFQ
   scheduler
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE scheduling; interactivity; Linux; multilevel feedback queue
AB We implemented a simple multilevel feedback queue scheduler in the Linux 2.6 kernel and compared its response to interactive tasks with that of the new Linux 2.6 scheduler. Our objectives were to evaluate whether Linux 2.6 accomplished its goal of improved interactivity, and to see whether a simpler model could do as well without all of the special cases and exceptions that the new Linux 2.6 scheduler acquired. We describe the two algorithms in detail, report their average interactive response times under different kinds of background workloads, and compare their methods of deciding whether a task is interactive. The MLFQ scheduler performs comparably to the Linux 2.6 scheduler in all response time tests and displays some inadvertent improvements in turnaround time, while avoiding the complex task of explicitly defining interactivity. We maintain an inverse relationship between priority and time slice length, and this seems to be the primary reason that the MLFQ remains simple, yet performs comparably to the Linux 2.6 scheduler. These results may provide some guidelines for designers of new scheduling systems. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Wisconsin, Dept Comp Sci, Madison, WI 53706 USA.
C3 University of Wisconsin System; University of Wisconsin Madison
RP Torrey, LA (corresponding author), Univ Wisconsin, Dept Comp Sci, 1210 W Dayton St, Madison, WI 53706 USA.
EM ltorrey@cs.wisc.edu
OI Cruise, Tom/0000-0003-3104-2281
CR BOVET DP, 2003, UNDERSTANDING LINUX
   Corbato F. J., 1962, P SPRING JOINT COMP, P335
   Duda KJ, 1999, OPERATING SYSTEMS REVIEW, VOL 33, NO 5, DECEMBER 1999, P261, DOI 10.1145/319344.319169
   KOLIVAS C, 2003, INTERACTIVITY LINUX
   KOLIVAS C, 2004, LINUX STAIRCASE PROC
   LEHEY G, 1998, COMPLETE FREEBSD
   Love R., 2004, Linux Kernel Development
   MCDOUGALL R, 2000, SOLARIS INTERNALS
   MOLNAR I, 2002, ULTRASCALABLE O1 SMP
   RITCHIE DM, 1974, COMMUN ACM, V17, P365, DOI 10.1145/361011.361061
   Russinovich M., 2005, WINDOWS INTERNALS, V4th
   Silberschatz A., 2003, OPERATING SYSTEM CON, V6th
   SOLOMON D.A., 2000, Inside Microsoft Windows 2000
   Tanenbaum A.S., 1992, Modern Operating Systems
   WHITE B, 2003, LINUX 2 6 BREAKTHROU
   WILLIAMS P, 2004, SINGLE PRIORITY ARRA
   LINUX 2 6 3 SOURCE C
NR 17
TC 21
Z9 26
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2007
VL 37
IS 4
BP 347
EP 364
DI 10.1002/spe.772
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 151VK
UT WOS:000245318700001
DA 2024-07-18
ER

PT J
AU Schürmann, KB
   Stoye, J
AF Schuermann, Klaus-Bernd
   Stoye, Jens
TI An incomplex algorithm for fast suffix array construction
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE strings; indexing; suffix arrays; permutations
AB The suffix array of a string is a permutation of all starting positions of the string's suffixes that are lexicographically sorted. We present a practical algorithm for suffix array construction that consists of two easy-to-implement components. First it sorts the suffixes with respect to a fixed length prefix; then it refines each bucket of suffixes sharing the same prefix using the order of already sorted suffixes. Other suffix array construction algorithms follow more complex strategies. Moreover, we achieve a very fast construction for common strings as well as for worst case strings by enhancing our algorithm with further techniques. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Bielefeld, Tech Fak, AG Genominformat, D-33501 Bielefeld, Germany.
C3 University of Bielefeld
RP Stoye, J (corresponding author), Univ Bielefeld, Tech Fak, AG Genominformat, Postfach 10 01 31, D-33501 Bielefeld, Germany.
EM stoye@techfak.uni-bielefeld.de
RI Stoye, Jens/A-2709-2012
OI Stoye, Jens/0000-0002-4656-7155
CR [Anonymous], 1994, 124 DIG SYST RES CTR
   Bentley JL, 1997, PROCEEDINGS OF THE EIGHTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P360
   BENTLEY JL, 1993, SOFTWARE PRACT EXPER, V23, P1249, DOI 10.1002/spe.4380231105
   Burkhardt S, 2003, LECT NOTES COMPUT SC, V2676, P55
   Cormen T.H., 1989, Introduction to Algorithms
   Farach M, 1997, ANN IEEE SYMP FOUND, P137, DOI 10.1109/SFCS.1997.646102
   Farach-Colton M, 2000, J ACM, V47, P987, DOI 10.1145/355541.355547
   Hon WK, 2003, ANN IEEE SYMP FOUND, P251
   Kärkkäinen J, 2003, LECT NOTES COMPUT SC, V2719, P943
   Kim DK, 2004, LECT NOTES COMPUT SC, V3059, P301
   Kim DK, 2005, J DISCRET ALGORITHMS, V3, P126, DOI 10.1016/j.jda.2004.08.019
   Ko P, 2005, J DISCRET ALGORITHMS, V3, P143, DOI 10.1016/j.jda.2004.08.002
   Kurtz S, 1999, SOFTWARE PRACT EXPER, V29, P1149, DOI 10.1002/(SICI)1097-024X(199911)29:13<1149::AID-SPE274>3.0.CO;2-O
   LARSSON NJ, 1999, LUCSTR99214 DEP COMP
   LARSSON NJ, 1999, LUNDFD6NFCS314012019
   MANBER U, 1993, SIAM J COMPUT, V22, P935, DOI 10.1137/0222058
   Manzini G, 2004, ALGORITHMICA, V40, P33, DOI 10.1007/s00453-004-1094-1
   McIlroy P. M., 1993, Computing Systems, V6, P5
   Seward J., 2000, Proceedings DCC 2000. Data Compression Conference, P173, DOI 10.1109/DCC.2000.838157
   SINGLETON RC, 1969, COMMUN ACM, V12, P185, DOI 10.1145/362875.362901
   [No title captured]
   [No title captured]
NR 22
TC 19
Z9 21
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2007
VL 37
IS 3
BP 309
EP 329
DI 10.1002/spe.768
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 145ZS
UT WOS:000244904900004
DA 2024-07-18
ER

PT J
AU Kågstrom, S
   Grahn, H
   Lundberg, L
AF Kagstrom, Simon
   Grahn, Hakan
   Lundberg, Lars
TI The application kernel approach -: a novel approach for adding SMP
   support to uniprocessor operating systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE operating systems; performance; implementation complexity;
   multiprocessor port
AB The current trend of using multiprocessor computers for server applications requires operating system adaptations to take advantage of more powerful hardware. However, modifying large bodies of software is very costly and time consuming, and the cost of porting an operating system to a multiprocessor might not be motivated by the potential performance benefits. In this paper we present a novel method, the application kernel approach, for adaption of an existing uniprocessor kernel to multiprocessor hardware. Our approach considers the existing uniprocessor kernel as a 'black box', to which no or very small changes are made. Instead, the original kernel runs operating system services unmodified on one processor whereas the other processors execute applications on top of a small custom kernel. We have implemented the application kernel for the Linux operating system, which illustrates that the approach can be realized with fairly small resources. We also present an evaluation of the performance and complexity of our approach, where we show that it is possible to achieve good performance while at the same time keeping the implementation complexity low. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, SE-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Kågstrom, S (corresponding author), Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, POB 520, SE-37225 Ronneby, Sweden.
EM ska@bth.se
RI Grahn, Håkan/G-9720-2011
OI Grahn, Håkan/0000-0001-9947-1088
CR [Anonymous], 1997, COMPUTER
   ARPACIDUSSEAU AC, 2001, P 18 ACM S OP SYST P, P43
   BACH MJ, 1984, AT&T TECH J, V63, P1733, DOI 10.1002/j.1538-7305.1984.tb00062.x
   BARAK A, 1999, J FUTURE GENERATION, V13, P361
   Barham P., 2003, Operating Systems Review, V37, P164, DOI 10.1145/1165389.945462
   BUSHNELL MI, 1994, GNUS B
   Cheriton D. R., 1994, Proceedings of the First USENIX Symposium on Operating Systems Design and Implementation (OSDI), P179
   CLARK R, 1995, TECHNOLOGIES INFORMA, P110
   Denham J. M., 1994, Digital Technical Journal, V6, P29
   DESPLACES F, 1996, P C FREEL DISTR SOFT
   Eggers SJ, 1997, IEEE MICRO, V17, P12, DOI 10.1109/40.621209
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   GAMSA B, 1995, CSRI339 U TOR
   Gefflaut Alain., 2000, P 9 WORKSHOP ACM SIG, P109
   GOBLE GH, 1982, P 9 ANN S COMP ARCH, P291
   Greenwald M, 1996, PROCEEDINGS OF THE SECOND SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '96), P123, DOI 10.1145/248155.238767
   HARTIG H., 1997, P 16 ACM S OP SYST P
   IBM, 2005, PowerPC Microprocessor Family: The Programming Environments Manual for 32 and 64-bit Microprocessors
   Kågström S, 2005, 11TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P365, DOI 10.1109/RTCSA.2005.45
   KAGSTROM S, 2004, P 18 INT PAR DISTR P
   KAHLE J, 1999, P 1999 INT MICR SAN
   KLEIMAN S, 1992, SYMMETRIC MULTIPROCE, P181
   Kleinosowski A.J., 2002, Computer Architecture Letters, V1
   Lehey G, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK, P155
   LIEDTKE J, 1995, P 15 ACM S OP SYST P, P1
   Love R., 2003, LINUX KERNEL DEV
   Magnusson PS, 2002, COMPUTER, V35, P50, DOI 10.1109/2.982916
   Marr D. T., 2002, Intel Technology Journal
   *MIPS TECHN, 2001, MIPS32 ARCH PROGR, V3
   MUIR SJ, 2001, THESIS U PENNSYLVANI
   Rawson FL, 1997, SIXTH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, PROCEEDINGS, P2, DOI 10.1109/HOTOS.1997.595173
   Regnier G, 2004, COMPUTER, V37, P48, DOI 10.1109/MC.2004.223
   Roscoe T., 1995, THESIS U CAMBRIDGE
   Schimmel Curt., 1994, UNIX SYSTEMS MODERN
   Spracklen L, 2005, INT S HIGH PERF COMP, P248, DOI 10.1109/HPCA.2005.10
   Standard Performance Evaluation Corporation, 2000, SPEC CPU 2000
   *U KARLSR, 2003, L4KA PIST MICR WHIT
   WOO SC, 1995, ACM COMP AR, P24, DOI 10.1109/ISCA.1995.524546
   YAGHMOUR K, PRACTICAL APPROACH L
   Zhang RH, 2003, 9TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P96
NR 40
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2006
VL 36
IS 14
BP 1563
EP 1583
DI 10.1002/spe.732
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 103SA
UT WOS:000241905800003
DA 2024-07-18
ER

PT J
AU Zheng, YJ
   Chan, ATS
   Ngai, G
AF Zheng, Yongjie
   Chan, Alvin T. S.
   Ngai, Grace
TI MCL: a MobiGATE coordination language for highly adaptive and
   reconfigurable mobile middleware
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile computing; coordination languages; adaptive middleware; dynamic
   reconfiguration
ID INTERNET; NETWORK
AB The use of middleware is one important approach in facilitating adaptation across wireless and mobile environments, where augmented service entities are composed and deployed to shield mobile clients from the effects of dynamic network characteristics. The MobiGate Coordination Language (MCL) system provides a language-based approach to the building of mobile applications running in an adaptive middleware, MobiGATE. The concept of the separation of concerns forms the underlying and unifying principle in the provision of the adaptive composition of services. Specifically, a coordination language, MCL, is designed to provide rich constructs supporting the definition of compositions, with constrained type validation and checking. In particular, MCL is formalized by means of the design of a semantic model based on the Z language, which can be used to analyze architectural descriptions and detect possible composition errors such as feedback loops and open circuit problems. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University
RP Chan, ATS (corresponding author), Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
EM cstschan@comp.polyu.edu.hk
RI Ngai, Grace/A-1846-2014
OI Ngai, Grace/0000-0002-2027-168X
CR Abowd G. D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P319, DOI 10.1145/226241.226244
   Anastasi G, 2003, COMPUT J, V46, P3, DOI 10.1093/comjnl/46.1.3
   ARBAB F, 1996, LECT NOTES COMPUT SC, V1061, P34
   BARBACCI MR, 1993, SOFTWARE ENG J, V8, P83, DOI 10.1049/sej.1993.0012
   Chan ATS, 2003, IEEE T SOFTWARE ENG, V29, P1072, DOI 10.1109/TSE.2003.1265522
   Fox A, 1998, IEEE PERS COMMUN, V5, P10, DOI 10.1109/98.709365
   FREED N, 1996, 2046 RFC IETF
   Garlan D., 1994, CMUCS94166
   Kolman B., 1996, Discrete Mathematical Structures
   MAGEE J, 1989, IEEE T SOFTWARE ENG, V15, P663, DOI 10.1109/32.24720
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   McKinley PK, 2003, IEEE T COMPUT, V52, P713, DOI 10.1109/TC.2003.1204828
   Papadopoulos G. A., 1998, ADV COMPUT, V46, P329, DOI [DOI 10.1016/S0065-2458(08)60208-9, 10.1016/S0065-2458(08)60208-9]
   PESCHANSKI F, 2001, TYPEFUL COMPOSITION
   RICE MD, 1994, IEEE T SOFTWARE ENG, V20, P88, DOI 10.1109/32.263757
   SAALTINK M, 1997, LECT NOTES COMPUTER, V1212, P72, DOI DOI 10.1007/BFB0027284]
   SOMMERVILLE I, 1996, SOFTWARE 96 ENG J
   Spivey J. M., 1989, The Z Notation: A Reference Manual
NR 18
TC 3
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1355
EP 1380
DI 10.1002/spe.757
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 086HN
UT WOS:000240664500014
DA 2024-07-18
ER

PT J
AU Parsons, D
   Rashid, A
   Telea, A
   Speck, A
AF Parsons, D
   Rashid, A
   Telea, A
   Speck, A
TI An architectural pattern for designing component-based application
   frameworks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE framework; architectural pattern; component backbone; electronic design
   automation; simulation; visualization; industrial control
AB A widely used architecture for the development of software systems is the component-based application framework. Such frameworks offer two mechanisms. First, they provide component integration and interoperability services which make it possible to extend the framework with various third-party components. Second, they provide mechanisms to customize the integrated components to the specific needs of applications to be built using the framework. This paper describes an architectural pattern for designing such frameworks so that the appropriate mix of fixed and flexible elements can be integrated into architectures that maximize scalability and extensibility. The pattern is illustrated by frameworks developed for three different application domains: electronic design automation, scientific visualization and numerical simulation, and industrial control systems. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Lancaster, Dept Comp, Infolab21, Lancaster LA1 4WA, England.
   Massey Univ, Inst Informat & Math Sci, Auckland 1310, New Zealand.
   Eindhoven Univ Technol, Dept Math & Comp Sci, NL-5600 MB Eindhoven, Netherlands.
   Intershop Res, D-07740 Jena, Germany.
C3 Lancaster University; Massey University; Eindhoven University of
   Technology
RP Univ Lancaster, Dept Comp, Infolab21, Lancaster LA1 4WA, England.
EM marash@comp.lancs.ac.uk
RI Parsons, David/AAI-6071-2021
OI Parsons, David/0000-0002-9815-036X; Rashid, Awais/0000-0002-0109-1341
CR Abram G, 1995, VISUALIZATION '95 - PROCEEDINGS, P263, DOI [10.1109/VISUAL.1995.480821, 10.1145/204362.204366]
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 1995, Design patterns for object-oriented software development
   [Anonymous], 1997, Requirements engineering: a good practice guide
   *APPL COMP INC, OP
   ASKIT M, 2000, ACM COMPUTING SURVEY, V32
   BENYEHUDA S, PLOP 97 WRIT WORKSH
   BLANCHETTE J, 2004, C GUI PROGRAMMING QI
   BOHEM B, 1999, IEEE COMPUT, V32, P135
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   BUSCHMANN F, 1996, PATTERN LANGUAGES PR, V2, P271
   Carey J. O., 2002, FRAMEWORK PROCESS PA
   Coplien JO, 1992, ADV C PROGRAMMING ST
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   Dalheimer M.K., 2002, PROGRAMMING QT, VSecond
   Demeyer S, 1997, COMMUN ACM, V40, P60, DOI 10.1145/262793.262805
   ERDOGMUS H, 1999, IMPLEMENTING APPL FR, P403
   FAYAD M, 1999, IMPLEMENTING APPL
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   Fontoura M, 2000, LECT NOTES COMPUT SC, V1850, P63
   Fowler M., 2003, Patterns of Enterprise Application Architecture. A Martin Fowler signature book
   Gabriel R.P., 1996, PATTERNS SOFTWARE TA
   GALLMEISTER B, 1995, POSIX 4 PROGRAMMING
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gamma E., JUnit
   GARLAN D, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.469757
   GUNN C, 1997, VISUALIZATION ATH, V2, P386
   *IBM, 2005, BUS RUL BEANS
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Johnson R, 1998, USER DEFINED PRODUCT
   JOHNSON R, 1998, DYNAMIC OBJECT MODEL
   Johnson RE, 1997, COMMUN ACM, V40, P39, DOI 10.1145/262793.262799
   JONES R, 1999, BUILDING APPL FRAMEW, P237
   KUECHLIN W, 1997, ENG COMPUTER BASED S, P444
   MARTIN R, 1997, CPLUSPLUS REPORT, V9, P42
   MAUBACH J, 2003, VISUALIZATION MATH, V3, P131
   MCKERROW J, 1995, INTRO ROBOTICS
   Meijer E., 2005, TECHNICAL OVERVIEW C
   *MICR, 2005, MICR NET FRAM DEV CT
   *OB MICR INC, 2005, BLACKB DEV BLACKB CO
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Parsons D, 1999, TOOLS, V29, P141, DOI 10.1109/TOOLS.1999.779007
   PURTILO JM, 1994, ACM T PROGR LANG SYS, V16, P151, DOI 10.1145/174625.174629
   REMBOLD U, 1993, CIM COMPUTER INTEGRA
   Ribarsky W., 1994, SCI VISUALIZATION AD, P251
   RIEHLE D, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P9
   Roberts D, 1998, SOFTW PATT S, P471
   Royce W. W., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P328
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   RUPING A, EUR 96 WRIT WORKSH
   Schmid H.A., 1998, PATTERNS HDB TECHNIQ, P443
   Schroeder W., 1996, The Visualization Toolkit: An Object-Oriented Approach to 3-D Graphics
   *SUM MICR JAV COMM, 1997, JAV SPEC
   *SUM MICR JAV COMM, 2003, ENT JAV BEANS SPEC
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   Telea A., 1999, Proceedings Visualization '99 (Cat. No.99CB37067), P35, DOI 10.1109/VISUAL.1999.809865
   Telea A, 1999, TOOLS, V29, P56, DOI 10.1109/TOOLS.1999.778999
   UPSON C, 1989, IEEE COMPUT GRAPH, V9, P30, DOI 10.1109/38.31462
   Wernecke J., 1994, The Inventor Mentor: Programming Object-Oriented 3D Graphics with Open Inventor, V2nd
   WILLNAU K, 2002, BUILDING SYSTEMS COM
   WOOLF B, 1999, IMPLEMENTING APPL FR, P621
   WRIGHT C, 1998, PATTERNS 98 REUSE ID
NR 63
TC 16
Z9 19
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2006
VL 36
IS 2
BP 157
EP 190
DI 10.1002/spe.694
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 012YK
UT WOS:000235376600003
DA 2024-07-18
ER

PT J
AU Chan, F
   Cao, JN
   Chan, ATS
   Zhang, K
AF Chan, F
   Cao, JN
   Chan, ATS
   Zhang, K
TI Visual programming support for graph-oriented parallel/distributed
   processing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE parallel and distributed processing; programming environment;
   graph-oriented model; cluster computing
ID PARALLEL
AB GOP is a graph-oriented programming model which aims at providing high-level abstractions for configuring and programming cooperative parallel processes. With GOP, the programmer can configure the logical structure of a parallel/distributed program by constructing a logical graph to represent the communication and synchronization between the local programs in a distributed processing environment. This paper describes a visual programming environment, called VisualGOP, for the design, coding, and execution of GOP programs. VisualGOP applies visual techniques to provide the programmer with automated and intelligent assistance throughout the program design and construction process. It provides a graphical interface with support for interactive graph drawing and editing, visual programming functions and automation facilities for program mapping and execution. VisualGOP is a generic programming environment independent of programming languages and platforms. GOP programs constructed under VisualGOP can run in heterogeneous parallel/distributed systems. Copyright (c) 2005 John Wiley & Sons,Ltd.
C1 Hong Kong Polytech Univ, Software Management & Dev Lab, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
   Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
C3 Hong Kong Polytechnic University; University of Texas System; University
   of Texas Dallas
RP Hong Kong Polytech Univ, Software Management & Dev Lab, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
EM csjcao@comp.polyu.edu.hk
OI Cao, Jiannong/0000-0002-2725-2529
CR BEGUELIN AL, 1990, J PARALLEL DISTRIBUT, V22, P235
   BEGUELIN AL, 1992, SHPCC 92 P SCAL HIGH, P129
   BROWNE JC, 1995, IEEE PARALL DISTRIB, V3, P75, DOI 10.1109/88.384586
   BROWNE JC, 1994, UTCS94229 U TEX AUST
   CAI W, 1996, SOFTWARE VISUALISATI, P119
   Cao J, 2004, J SYST SOFTWARE, V72, P389, DOI 10.1016/S0164-1212(03)00099-2
   CAO J, 1996, INT PROGRAMMING, V1
   CAO J, 2002, P 2002 INT C PAR PRO
   CAO J, 1995, P 2 INT C HIGH PERF
   Cao JN, 2003, SPRING INT SER ENG C, P77
   Chan F, 2003, LECT NOTES COMPUT SC, V2834, P254
   Chan F, 2003, PARALLEL COMPUT, V29, P1589, DOI 10.1016/j.parco.2003.05.008
   Evangelist M., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P102, DOI 10.1109/ICSE.1988.93693
   HERMAN I, 2001, LNCS, V1984, P52
   Holt RC, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P162, DOI 10.1109/WCRE.2000.891463
   Hui CC, 1997, IEEE T PARALL DISTR, V8, P908, DOI 10.1109/71.615437
   Kacsuk P, 1997, SECOND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P210, DOI 10.1109/PDSE.1997.596840
   MAGEE J, 1994, P INT WORKSH CONF DI
   NEWTON P, 1995, UTCS94261 U TENN
   NEWTON P, 1993, THESIS U TEXAS AUSTI
   NG K, 1996, TOOLS ENV PARALLEL D, P7
   SENAR MA, 1998, INT PAR P S SYM PAR, P415
   SHEN VY, 1990, J PARALLEL DISTR COM, V9, P128, DOI 10.1016/0743-7315(90)90041-M
   Stankovic N, 2002, IEEE T SOFTWARE ENG, V28, P478, DOI 10.1109/TSE.2002.1000451
   Stankovic N, 1999, INT J SOFTW ENG KNOW, V9, P397, DOI 10.1142/S0218194099000231
   Topcuoglu H, 1997, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P40, DOI 10.1109/HPDC.1997.622361
   *W3C, EXT MARK LANG
   WIRTZ G, 1994, INFORM SOFTWARE TECH, V36, P405, DOI 10.1016/0950-5849(94)90062-0
   WOLSKI R, 1995, P HET WORKSH IPPS 95
NR 29
TC 3
Z9 8
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2005
VL 35
IS 15
BP 1409
EP 1439
DI 10.1002/spe.676
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 991UU
UT WOS:000233840400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ristov, S
AF Ristov, S
TI LZ trie and dictionary compression
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE LZ trie; lexicon compression; dictionary compression; index compression;
   static database compression
ID PERFECT HASH FUNCTIONS; ALGORITHM; CONSTRUCTION
AB An efficient algorithm for trie compression has already been described. Here we present its practical value and demonstrate its superiority in terms of space savings to other methods of lexicon compression. Apart from simple lexicons, a compressed trie can, with some additional processing, be used as a component in the compact representation of simple static databases. We present the potential of the algorithm in compressing natural language dictionaries. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Rudjer Boskovic Inst, Dept Elect, Zagreb, Croatia.
C3 Rudjer Boskovic Institute
RP Ristov, S (corresponding author), Rudjer Boskovic Inst, Dept Elect, Bijenicka 54, Zagreb, Croatia.
EM ristov@rudjer.irb.hr
CR ACHARYA A, 1999, P ACM SIAM WORKSH AL, P296
   ANDERSSON A, 1993, INFORM PROCESS LETT, V46, P295, DOI 10.1016/0020-0190(93)90068-K
   [Anonymous], 1999, Compressing and Indexing Documents and Images
   [Anonymous], 1973, The art of computer programming
   [Anonymous], 1997, ACM SIGACT NEWS
   AOE JI, 1992, SOFTWARE PRACT EXPER, V22, P695, DOI 10.1002/spe.4380220902
   APPEL AW, 1988, COMMUN ACM, V31, P572, DOI 10.1145/42411.42420
   Ciura MG, 2001, SOFTWARE PRACT EXPER, V31, P1077, DOI 10.1002/spe.402
   Czech ZJ, 1997, THEOR COMPUT SCI, V182, P1, DOI 10.1016/S0304-3975(96)00146-6
   Daciuk J, 2000, COMPUT LINGUIST, V26, P3, DOI 10.1162/089120100561601
   DARRAGH JJ, 1993, SOFTWARE PRACT EXPER, V23, P277, DOI 10.1002/spe.4380230305
   DONELLY A, 2000, P 25 C LOC COMP NETW, P589
   DUNDAS JA, 1991, SOFTWARE PRACT EXPER, V21, P1027, DOI 10.1002/spe.4380211004
   FOX EA, 1991, ACM T INFORM SYST, V9, P281, DOI 10.1145/125187.125200
   FOX EA, 1992, COMMUN ACM, V35, P105, DOI 10.1145/129617.129623
   FREDKIN E, 1960, COMMUN ACM, V3, P490, DOI 10.1145/367390.367400
   HIRSCHBERG DS, 1990, COMMUN ACM, V33, P449, DOI 10.1145/77556.77566
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Klein ST, 2002, IEEE DATA COMPR CONF, P142, DOI 10.1109/DCC.2002.999952
   Ko P, 2003, LECT NOTES COMPUT SC, V2676, P200
   KOWALTOWSKI T, 1993, P 1 S AM STRING PROC, P36
   LAPORTE E, 1990, LANGUE FRANCAISE, P59
   LUCCHESI CL, 1993, SOFTWARE PRACT EXPER, V23, P15, DOI 10.1002/spe.4380230103
   Luk RWP, 2001, COMPUT J, V44, P425, DOI 10.1093/comjnl/44.5.425
   MALY K, 1976, COMMUN ACM, V19, P409, DOI 10.1145/360248.360258
   MANBER U, 1993, SIAM J COMPUT, V22, P935, DOI 10.1137/0222058
   MORIMOTO K, 1994, SOFTWARE PRACT EXPER, V24, P265, DOI 10.1002/spe.4380240303
   MORRISON DR, 1968, J ACM, V15, P514, DOI 10.1145/321479.321481
   Purdin T. D. M., 1990, Proceedings of the 1990 Symposium on Applied Computing (Cat. No.90TH0307-9), P336, DOI 10.1109/SOAC.1990.82193
   REVUZ D, 1991, THESIS U PARIS 7
   Ristov S., 2002, Journal of Computing and Information Technology - CIT, V10, P157, DOI 10.2498/cit.2002.03.02
   RISTOV S, 1999, 10 ANN S COMB PATT M, V1645, P196
   RISTOV S, 2003, 25 INT C INF TECHN I, P155
   RISTOV S, 1995, P 17 INT C INF TECHN, P269
   RISTOV S, 2003, P 6 INT MULT C INF S, P121
   RODEH M, 1981, J ACM, V28, P16, DOI 10.1145/322234.322237
   ZIV J, 1977, IEEE T INFORM THEORY, V23, P337, DOI 10.1109/TIT.1977.1055714
NR 37
TC 5
Z9 9
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2005
VL 35
IS 5
BP 445
EP 465
DI 10.1002/spe.643
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 913XQ
UT WOS:000228189300002
DA 2024-07-18
ER

PT J
AU Doyle, P
   Cavanna, C
   Abdelrahman, TS
AF Doyle, P
   Cavanna, C
   Abdelrahman, TS
TI The design and implementation of a modular and extensible Java Virtual
   Machine
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java Virtual Machines (JVMs); modular and extensible design; JVM
   infrastructures; design for scalability
AB This paper describes the design, implementation, and experimental evaluation of a modular and extensible Java(TM) Virtual Machine (JVM) infrastructure, called Jupiter. The infrastructure is intended to serve as a vehicle for our research on scalable JVM architectures for a cluster of PC workstations, with support for shared memory in software. Jupiter is constructed, using a building block architecture, out of many modules with small, simple interfaces. This flexible structure, similar to UNIX(R) shells that build complex command pipelines out of discrete programs, allows the rapid prototyping of our research ideas by confining changes in JVM design to a small number of modules. In spite of this flexibility, Jupiter delivers good performance. Experimental evaluation of the current implementation of Jupiter using the SPECjvm98 and the EPCC Java Grande single-threaded and multithreaded benchmarks reflects competitive performance. Jupiter is on average about 2.5 times faster than Kaffe and about 2 times slower than the Sun Microsystems JDK (interpreter versions only). By providing a flexible JVM infrastructure that delivers competitive performance, we believe we have developed a framework that supports further research into JVM scalability. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Toronto, Edward S Rogers Sr Dept Elect & Comp Engn, Toronto, ON M5S 3G4, Canada.
C3 University of Toronto
RP Univ Toronto, Edward S Rogers Sr Dept Elect & Comp Engn, 10 Kings Coll Rd, Toronto, ON M5S 3G4, Canada.
EM tsa@eecg.toronto.edu
CR Alpern B, 2000, IBM SYST J, V39, P211, DOI 10.1147/sj.391.0211
   [Anonymous], The Jupiter Project
   [Anonymous], JIKES RES VIRTUAL MA
   ARTIGAS P, 1999, P 2000 INT C SUP SAN, P1
   BACON DF, 2001, P ACM SIGPLAN C PROG, P92
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   DOMANI T, 2000, P S MEM MAN, P155
   DOYLE P, 2002, THESIS U TORONTO
   GAGNON EM, 2001, P USENIX JVM 01, P27
   *IEEE ANSI, 1995, 10031C1995 IEEEANSI
   Ishizaki K., 1999, Proceedings of the ACM 1999 Java Grande Conference, P119, DOI 10.1145/304065.304111
   Krieger O, 1997, ACM T COMPUT SYST, V15, P286, DOI 10.1145/263326.263356
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   MARUYAMA F, 2001, IN PRESS USENIX JAV
   Meyer B., 1988, Object-Oriented Software Construction
   SIEBERT F, 2001, P USENIX JVM01, P141
   SMITH L, 2001, P 3 WORKSH JAV HIGH, P23
   WHALEY J, JOEQ VIRTUAL MACHINE
   WILKINSON T, 2002, KAFFE VIRTUAL MACHIN
   WU P, 1999, P ACM 1999 JAV GRAND, P109
NR 20
TC 1
Z9 1
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2004
VL 34
IS 3
BP 287
EP 313
DI 10.1002/spe.565
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 800DQ
UT WOS:000220009500004
DA 2024-07-18
ER

PT J
AU Garcia, NP
   Durán, F
   Berrocal, KM
   Pimentel, E
AF Garcia, Nicolas Pozas
   Duran, Francisco
   Berrocal, Katia Moreno
   Pimentel, Ernesto
TI Location-aware scalable service composition
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE genetic algorithms; quality decomposition; quality of service; service
   composition
ID COMPOSITION MECHANISMS
AB The problem of service composition is the process of assigning resources to services from a pool of available ones in the shortest possible time so that the overall quality of service is maximized. This article provides solutions for the composition problem that takes into account its scalability, services' locations, and users' restrictions, which are key for the management of applications using state-of-the-art technologies. The provided solutions use different techniques, including genetic algorithms and heuristics. We provide an extensive experimental evaluation, which shows the pros and cons of each of them, and allows us to characterize the preferred option for each specific problem. Since no solution dominates the others, we propose a decision tree, based on our results, to select the best composition algorithm in each situation.
C1 [Garcia, Nicolas Pozas; Duran, Francisco; Berrocal, Katia Moreno; Pimentel, Ernesto] Univ Malaga, ITIS Software, Malaga, Spain.
C3 Universidad de Malaga
RP Durán, F (corresponding author), Univ Malaga, ITIS Software, Malaga, Spain.
RI Durán, Francisco/JXL-7273-2024; Pimentel, Ernesto/L-4266-2014
OI Pozas Garcia, Nicolas/0000-0002-2761-5836; Duran,
   Francisco/0000-0001-5864-8094; Pimentel, Ernesto/0000-0002-7125-8434
FU Spanish Government
FX Spanish Government
CR [Anonymous], 2004, Web Semantics: Science, Services and Agents on the World Wide Web, DOI DOI 10.1016/J.WEBSEM.2004.03.001
   Parejo JA, 2014, EXPERT SYST APPL, V41, P4211, DOI 10.1016/j.eswa.2013.12.036
   Arellanes D, 2020, FUTURE GENER COMP SY, V108, P827, DOI 10.1016/j.future.2020.02.073
   Barreto C., WS BPEL WEB SERVICES
   Ben Mabrouk N, 2009, LECT NOTES COMPUT SC, V5896, P123, DOI 10.1007/978-3-642-10445-9_7
   Berbner R, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P72
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Cardenes Cabre Jesus Alejandro, 2017, 2017 International Conference on Cloud and Autonomic Computing (ICCAC), P184, DOI 10.1109/ICCAC.2017.25
   Carrasco J, 2020, COMPUT STAND INTER, V69, DOI 10.1016/j.csi.2019.103392
   Chen IR, 2016, IEEE T SERV COMPUT, V9, P482, DOI 10.1109/TSC.2014.2365797
   Coutinho EF, 2015, ANN TELECOMMUN, V70, P289, DOI 10.1007/s12243-014-0450-7
   Crusoe MR, 2022, COMMUN ACM, V65, P54, DOI 10.1145/3486897
   Dabek F, 2004, ACM SIGCOMM COMP COM, V34, P15, DOI 10.1145/1030194.1015471
   Deshpande N., 2020, SOFTWARE ARCHITECTUR, P170, DOI DOI 10.1007/978-3-030-59155-7_13
   Fan SL, 2018, LECT NOTES COMPUT SC, V10966, P196, DOI 10.1007/978-3-319-94289-6_13
   Fan SL, 2018, LECT NOTES COMPUT SC, V10966, P215, DOI 10.1007/978-3-319-94289-6_14
   Festa P, 2002, OPER RES COMPUT SCI, V15, P325
   Garijo D, 2017, FUTURE GENER COMP SY, V75, P271, DOI 10.1016/j.future.2017.01.008
   ISO/IEC, 19510 ISOIEC
   Katoch S, 2021, MULTIMED TOOLS APPL, V80, P8091, DOI 10.1007/s11042-020-10139-6
   Klein A, 2014, IEEE T SERV COMPUT, V7, P452, DOI 10.1109/TSC.2013.2
   Klein Adrian., 2012, Proceedings of the 21st International Conference on World Wide Web, WWW'12, P959
   Kritikos K, 2009, IEEE T SERV COMPUT, V2, P122, DOI 10.1109/TSC.2009.10
   Le DN., 2009, P 3 INT C PAIR BAS C, P1
   Mardukhi F, 2013, APPL SOFT COMPUT, V13, P3409, DOI 10.1016/j.asoc.2012.12.033
   Martini B, 2015, 2015 1ST IEEE CONFERENCE ON NETWORK SOFTWARIZATION (NETSOFT)
   McCall J, 2005, J COMPUT APPL MATH, V184, P205, DOI 10.1016/j.cam.2004.07.034
   Mirjalili S, 2019, STUD COMPUT INTELL, V780, P43, DOI 10.1007/978-3-319-93025-1_4
   Moustafa A, 2013, LECT NOTES COMPUT SC, V8274, P298, DOI 10.1007/978-3-642-45005-1_21
   Ouyang C, 2007, SCI COMPUT PROGRAM, V67, P162, DOI 10.1016/j.scico.2007.03.002
   Poletti F, 2013, NAT PHOTONICS, V7, P279, DOI [10.1038/nphoton.2013.45, 10.1038/NPHOTON.2013.45]
   Pozas Garcia N., COMPANION WEB SITE L
   Pozas N, 2021, LECT NOTES COMPUT SC, V13121, P449, DOI 10.1007/978-3-030-91431-8_28
   Ramírez A, 2017, EXPERT SYST APPL, V72, P357, DOI 10.1016/j.eswa.2016.10.047
   Razian M, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111290
   Risse T., 2009, P 18 INT C WORLD WID, P881, DOI DOI 10.1145/1526709.1526828
   Sastry K., 2005, Genet. Algorithms, P97
   Siddiqui H, 2016, 2016 SIXTH INTERNATIONAL CONFERENCE ON INNOVATIVE COMPUTING TECHNOLOGY (INTECH), P471, DOI 10.1109/INTECH.2016.7845066
   Sotiriadis S, 2019, IEEE T SERV COMPUT, V12, P319, DOI 10.1109/TSC.2016.2634024
   Stefanic P, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.6120
   Strunk A., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P67, DOI 10.1109/ECOWS.2010.16
   Suciu M, 2013, LECT NOTES COMPUT SC, V7832, P73, DOI 10.1007/978-3-642-37198-1_7
   Trummer I, 2014, IEEE T SOFTWARE ENG, V40, P167, DOI 10.1109/TSE.2013.61
   Vakili A, 2017, J NETW COMPUT APPL, V81, P24, DOI 10.1016/j.jnca.2017.01.005
   Wada H, 2012, IEEE T SERV COMPUT, V5, P358, DOI 10.1109/TSC.2011.6
   Wan CL, 2008, GCC 2008: SEVENTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P467, DOI 10.1109/GCC.2008.75
   Wang PW, 2016, IEEE T SERV COMPUT, V9, P551, DOI 10.1109/TSC.2015.2412943
   Wei Zhang, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P493, DOI 10.1109/COMPSAC.2010.76
   Wu J, 2005, P IEEE I C SERV COMP, P287
   Xu Y, 2016, IEEE INTERNET THINGS, V3, P285, DOI 10.1109/JIOT.2015.2455555
   Yu T, 2005, LECT NOTES COMPUT SC, V3826, P130
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Yu Y, 2015, IEEE C EVOL COMPUTAT, P2843, DOI 10.1109/CEC.2015.7257242
   Yuan Y, 2019, SYMMETRY-BASEL, V11, DOI 10.3390/sym11030403
   Zeng L., 2003, Proceedings of the 12th International Conference on World Wide Web, P411, DOI [DOI 10.1145/775152.775211, 10.1145/775152.775211]
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 57
TC 0
Z9 0
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2023
VL 53
IS 12
SI SI
BP 2408
EP 2429
DI 10.1002/spe.3260
EA AUG 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X8MK4
UT WOS:001063575700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Buyya, R
   Ilager, S
   Arroba, P
AF Buyya, Rajkumar
   Ilager, Shashikant
   Arroba, Patricia
TI Energy-efficiency and sustainability in new generation cloud computing:
   A vision and directions for integrated management of data centre
   resources and workloads
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cloud computing; cooling systems; energy efficiency; integrated resource
   management; learning-centric management; thermal awareness
ID DYNAMIC CONSOLIDATION; VIRTUAL MACHINES; HEURISTICS; COST
AB Cloud computing has become a critical infrastructure for modern society, like electric power grids and roads. As the backbone of the modern economy, it offers subscription-based computing services anytime, anywhere, on a pay-as-you-go basis. Its use is growing exponentially with the continued development of new classes of applications driven by a huge number of emerging networked devices. However, the success of Cloud computing has created a new global energy challenge, as it comes at the cost of vast energy usage. Currently, data centres hosting Cloud services world-wide consume more energy than most countries. Globally, by 2025, they are projected to consume 20% of global electricity and emit up to 5.5% of the world's carbon emissions. In addition, a significant part of the energy consumed is transformed into heat which leads to operational problems, including a reduction in system reliability and the life expectancy of devices, and escalation in cooling requirements. Therefore, for the future generations of Cloud computing to address the environmental and operational consequences of such significant energy usage, they must become energy-efficient and environmentally sustainable while continuing to deliver high-quality services. In this article, we propose a vision for learning-centric approach for the integrated management of new generation Cloud computing environments to reduce their energy consumption and carbon footprint while delivering service quality guarantees. In this article, we identify the dimensions and key issues of integrated resource management and our envisioned approaches to address them. We present a conceptual architecture for energy-efficient new generation Clouds and early results on the integrated management of resources and workloads that evidence its potential benefits towards energy efficiency and sustainability.
C1 [Buyya, Rajkumar; Ilager, Shashikant; Arroba, Patricia] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Madrid, Australia.
   [Arroba, Patricia] Univ Politecn Madrid, CCS Ctr Computat Simulat, ETSI Telecomunicac, Madrid, Spain.
C3 University of Melbourne; Universidad Politecnica de Madrid
RP Buyya, R (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Madrid, Australia.
EM rbuyya@unimelb.edu.au
RI Buyya, Rajkumar/C-3424-2009
OI Buyya, Rajkumar/0000-0001-9754-6496
FU HiPEAC Network; University of Melbourne; HiPEAC6 Network; European
   Union's Horizon 2020 research and innovation programme
FX HiPEAC Network; University of Melbourne; HiPEAC6 Network; European
   Union's Horizon 2020 research and innovation programme
CR Andrae A. S., 2015, CHALLENGES, V6, P117
   Arroba P, 2018, SOFTWARE PRACT EXPER, V48, P1775, DOI 10.1002/spe.2603
   Arroba P, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4067
   Beloglazov A, 2013, IEEE T PARALL DISTR, V24, P1366, DOI 10.1109/TPDS.2012.240
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Buyya R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241737
   Calheiros RN, 2014, INT CONF CLOUD COMP, P342, DOI 10.1109/CloudCom.2014.20
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chowdhury MR, 2015, J CLOUD COMPUT-ADV S, V4, DOI 10.1186/s13677-015-0045-5
   Doidge F., WASTE ENERGY DEALING
   Dulac-Arnold G Levine N Mankowitz DJ., ABS200311881 CORR
   Gill SS, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241038
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guitart J., 2016, SUSTAINABLE DATA CTR
   Gupta A, 2016, IEEE T CLOUD COMPUT, V4, P307, DOI 10.1109/TCC.2014.2339858
   Hu B, 2022, IEEE T CLOUD COMPUT, V10, P662, DOI 10.1109/TCC.2019.2956498
   Ilager S, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P579, DOI 10.1109/CCGrid49817.2020.00-35
   Islam MA, 2018, INT S HIGH PERF COMP, P776, DOI 10.1109/HPCA.2018.00071
   Kaplan J.M., 2008, REVOLUTIONIZING DATA
   Khosravi A, 2017, IEEE T SUST COMPUT, V2, P183, DOI 10.1109/TSUSC.2017.2709980
   Lima J., DATA CTR WORLD WILL
   Maybury S., MUCH ENERGY DOES YOU
   Pantazoglou M, 2016, IEEE T CLOUD COMPUT, V4, P196, DOI 10.1109/TCC.2015.2464817
   Pedram M, 2012, IEEE T COMPUT AID D, V31, P1465, DOI 10.1109/TCAD.2012.2212898
   Shehabi A, 2018, ENVIRON RES LETT, V13, DOI 10.1088/1748-9326/aaec9c
   Shen S., P 15 IEEE ACM INT S
   Stavrinides GL, 2019, FUTURE GENER COMP SY, V96, P216, DOI 10.1016/j.future.2019.02.019
   Wang YC, 2019, IEEE ACCESS, V7, P36340, DOI 10.1109/ACCESS.2019.2903291
   Yuan HT, 2022, IEEE T AUTOM SCI ENG, V19, P1233, DOI 10.1109/TASE.2020.3042409
   Yuan HT, 2022, IEEE T SYST MAN CY-S, V52, P5506, DOI 10.1109/TSMC.2021.3128430
NR 30
TC 3
Z9 3
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2024
VL 54
IS 1
BP 24
EP 38
DI 10.1002/spe.3248
EA AUG 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF0T2
UT WOS:001045189300001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Miao, JF
   Wang, ZS
   Ning, X
   Xiao, N
   Cai, WW
   Liu, RM
AF Miao, Junfeng
   Wang, Zhaoshun
   Ning, Xin
   Xiao, Nan
   Cai, Weiwei
   Liu, Ruimin
TI Practical and secure multifactor authentication protocol for autonomous
   vehicles in 5G
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE 5G; autonomous vehicles; authentication; security; performance
ID SCHEME; DESIGN
AB Autonomous vehicles (AV) can not only improve traffic safety and congestion, but also have strategic significance for the development of the transportation industry. With the continuous updating of core technologies such as artificial intelligence, sensor detection, synchronous positioning, and high-precision mapping, the development of AV has been promoted. When 5G network is combined with Internet of Vehicles, the problems of AV can be solved by taking advantage of 5G ultra-large bandwidth, low latency and high reliability. However, when the user controls the vehicle remotely, a real-time and reliable authentication process is needed, while minimizing the overhead of security protocols. Therefore, this article proposes a practical and secure multifactor user authentication protocol for AV in 5G network. By introducing non-interactive zero-knowledge proof technology and physical uncloning function, the protocol completes mutual authentication and key agreement without revealing any sensitive information. The article proves the security of the protocol through BAN logic and the simulation of Scyther. And it can resist malicious attacks and provide more security features. The informal security analysis shows that the protocol can meet the proposed security requirements. Finally, we evaluate the efficiency of the protocol, and the results show that the protocol can provide better performance.
C1 [Miao, Junfeng; Wang, Zhaoshun; Xiao, Nan] Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing, Peoples R China.
   [Ning, Xin] Chinese Acad Sci, Inst Semicond, Beijing 100083, Peoples R China.
   [Cai, Weiwei] Cent South Univ Forestry & Technol, Sch Logist & Transportat, Changsha, Peoples R China.
   [Cai, Weiwei; Liu, Ruimin] AiTech Artificial Intelligence Res Inst, Changsha, Peoples R China.
   [Liu, Ruimin] Wuhan Sports Univ, Coll Sports Engn & Informat Technol, Wuhan, Peoples R China.
C3 University of Science & Technology Beijing; Chinese Academy of Sciences;
   Institute of Semiconductors, CAS; Central South University of Forestry &
   Technology; Wuhan Sports University
RP Ning, X (corresponding author), Chinese Acad Sci, Inst Semicond, Beijing 100083, Peoples R China.
EM ningxin@semi.ac.cn
RI chen, xian/KHW-2227-2024; chen, minghui/KFR-8832-2024; Cai,
   Weiwei/AAH-5456-2020; Ning, Xin/M-9479-2018; Cai, Weiwei/AAH-5456-2020
OI Cai, Weiwei/0000-0001-8992-9999; Ning, Xin/0000-0001-7897-1673; Cai,
   Weiwei/0000-0001-6795-6152
FU 2020 Industrial Technology Foundation Public Service Platform Project
   [2020-0105-2-1]
FX 2020 Industrial Technology Foundation Public Service Platform Project,
   Grant/Award Number: 2020-0105-2-1
CR 3rd Generation Partnership Project (3GPP, 2018, TS33501F10 3GPP
   Ali R, 2018, FUTURE GENER COMP SY, V84, P200, DOI 10.1016/j.future.2017.06.018
   Amin R, 2015, WIRELESS PERS COMMUN, V84, P439, DOI 10.1007/s11277-015-2616-7
   Bagga P, 2021, IEEE T VEH TECHNOL, V70, P1736, DOI 10.1109/TVT.2021.3050614
   BURROWS M, 1990, ACM T COMPUT SYST, V8, P18, DOI [10.1145/77648.77649, 10.1145/74851.74852]
   Cai WW, 2021, DISPLAYS, V69, DOI 10.1016/j.displa.2021.102076
   Challa S, 2017, IEEE ACCESS, V5, P3028, DOI 10.1109/ACCESS.2017.2676119
   Chandrakar P, 2017, T EMERG TELECOMMUN T, V28, DOI 10.1002/ett.3200
   Cremers C., 2020, THE SCYTHER TOOL
   DIFFIE W, 1976, IEEE T INFORM THEORY, V22, P644, DOI 10.1109/TIT.1976.1055638
   Dodis Y., 2004, PROC EUROCRYPT, V38, p97
   DOLEV D, 1983, IEEE T INFORM THEORY, V29, P198, DOI 10.1109/TIT.1983.1056650
   He DB, 2015, IEEE SYST J, V9, P816, DOI 10.1109/JSYST.2014.2301517
   Herder C, 2014, P IEEE, V102, P1126, DOI 10.1109/JPROC.2014.2320516
   Jiang Q, 2021, COMPUT COMMUN, V173, P45, DOI 10.1016/j.comcom.2021.03.022
   Jiang Q, 2020, IEEE T VEH TECHNOL, V69, P9390, DOI 10.1109/TVT.2020.2971254
   Katsaros K., 2017, P 5G MOB COMM, P595, DOI DOI 10.1007/978-3-319-34208-5
   Khan SM., 2018, ARXIV PREPRINT ARXIV
   Kim H., 2011, P 12 INT C COMP SCI
   Kumari S, 2017, FUTURE GENER COMP SY, V68, P320, DOI 10.1016/j.future.2016.10.004
   Lai CZ, 2020, IEEE NETWORK, V34, P37, DOI 10.1109/MNET.001.1900220
   Liu WZ, 2020, IEEE ACCESS, V8, P8754, DOI 10.1109/ACCESS.2019.2962912
   Qiu SM, 2022, IEEE T DEPEND SECURE, V19, P1338, DOI 10.1109/TDSC.2020.3022797
   Reebadiya D, 2021, PEER PEER NETW APPL, V14, P2757, DOI 10.1007/s12083-021-01073-x
   Ren XP, 2022, IEEE INTERNET THINGS, V9, P3642, DOI 10.1109/JIOT.2021.3098224
   Saqlain J., 2018, IoT and 5G: History evolution and its architecture their compatibility and future
   Sharma V, 2020, IEEE NETWORK, V34, P306, DOI 10.1109/MNET.001.1900662
   Soni P, 2019, COMPUT METH PROG BIO, V182, DOI 10.1016/j.cmpb.2019.105054
   Srinivas J, 2021, IEEE INTERNET THINGS, V8, P7727, DOI 10.1109/JIOT.2020.3040938
   Srinivas J, 2017, AD HOC NETW, V54, P147, DOI 10.1016/j.adhoc.2016.11.002
   Tomaz AEB, 2020, IEEE ACCESS, V8, P204441, DOI 10.1109/ACCESS.2020.3036811
   Wang C, 2022, PATTERN RECOGN, V124, DOI 10.1016/j.patcog.2021.108498
   Wang D, 2018, IEEE T DEPEND SECURE, V15, P708, DOI 10.1109/TDSC.2016.2605087
   Wu F, 2018, PEER PEER NETW APPL, V11, P1, DOI 10.1007/s12083-016-0485-9
   Xia YD, 2022, WIREL COMMUN MOB COM, V2022, DOI 10.1155/2022/8865158
   Yoon EJ, 2013, J SUPERCOMPUT, V63, P235, DOI 10.1007/s11227-010-0512-1
   Zhaojun Lu, 2019, IEEE Transactions on Intelligent Transportation Systems, V20, P760, DOI 10.1109/TITS.2018.2818888
   Zhou L, 2019, FUTURE GENER COMP SY, V91, P244, DOI 10.1016/j.future.2018.08.038
NR 38
TC 28
Z9 29
U1 4
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2022 APR 12
PY 2022
DI 10.1002/spe.3087
EA APR 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0L4XD
UT WOS:000781477400001
DA 2024-07-18
ER

PT J
AU Moeyersons, J
   Kerkhove, S
   Wauters, T
   De Turck, F
   Volckaert, B
AF Moeyersons, Jerico
   Kerkhove, Sarah
   Wauters, Tim
   De Turck, Filip
   Volckaert, Bruno
TI Towards cloud-based unobtrusive monitoring in remote multi-vendor
   environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Docker; sidecar containers; unobtrusive monitoring
ID SERVICE
AB Nowadays, many complex multi-vendor production environments, such as telecom infrastructures in smart cities or on-board passenger information systems in trains, are based on micro-services and deployed in the cloud. From a service integrator viewpoint, building new solutions for these environments, which can host a large number of externally designed and developed micro-services, is often complex and error-prone. This is in part due to undocumented behaviour or undocumented architectural specifications of such systems. Advanced service monitoring can offer a solution to quickly detect anomalies or unexpected service interaction behaviour during on-site integration. However, the monitoring service should not have an impact on the production environment itself. Therefore, this article proposes an agent-based unobtrusive monitoring platform, capable of monitoring both internally developed and externally developed services through the use of sidecar containers. It monitors state, metrics and network traffic at micro-service level and the research was conducted as part of the DynAMo research project, a collaboration with various industry partners. Prototype evaluation proves that our solution has a negligible impact (below 0.02% CPU usage on average) on an existing micro-service environment just as other monitoring systems like Prometheus while offering additional functionality focused on multi-vendor service integration. This makes it suitable to be deployed in complex production domains to further aid on-site integration and quickly find potential new anomalies.
C1 [Moeyersons, Jerico; Kerkhove, Sarah; Wauters, Tim; De Turck, Filip; Volckaert, Bruno] Ghent Univ Imec, Dept Informat Technol, Internet Technol & Data Sci Lab IDLab, Ghent, Belgium.
C3 Ghent University; IMEC
RP Moeyersons, J (corresponding author), iGent, Technol Pk Zwijnaarde 126, B-9052 Ghent, Belgium.
EM jerico.moeyersons@ugent.be
RI Moeyersons, Jerico/AAS-2760-2020; Volckaert, Bruno/G-6288-2015
OI Moeyersons, Jerico/0000-0001-9494-3170; De Turck,
   Filip/0000-0003-4824-1199; Volckaert, Bruno/0000-0003-0575-5894
FU Vlaio (Flemish Agency for Innovation and Entrepreneurship)
FX Vlaio (Flemish Agency for Innovation and Entrepreneurship) in the
   context of the imec ICON project DynAMo
   (https://www.imec-int.com/en/whatwe-offer/research-portfolio/dynamo)
CR Alhamazani K, 2019, IEEE T CLOUD COMPUT, V7, P48, DOI 10.1109/TCC.2015.2441715
   Anderson, 2012, MANAGED EXTENSIBILIT, P501
   [Anonymous], OPERATIONS CLOUD MON
   [Anonymous], 2021, APIMETRICS SOFTWARE
   Badger M., 2008, ZENOSS CORE NETWORK
   Banker K., 2011, MONGODB IN ACTION
   Beloussov, 2008, Patent, Patent No. [7 ,366,859, 7366859]
   Calero JMA, 2015, IEEE T SERV COMPUT, V8, P65, DOI 10.1109/TSC.2014.2302810
   Cardroom J., 2018, NONINTRUSIVE MONITOR, P1
   Cinque M, 2022, IEEE T SERV COMPUT, V15, P294, DOI 10.1109/TSC.2019.2940009
   Fuchs C., 2017, Patent, Patent No. [9,571,591, 9571591]
   Gawkowski P, 2016, INFORM SYST MANAGE, V5, P481
   Kallel A, 2021, SOFTWARE PRACT EXPER, V51, P91, DOI 10.1002/spe.2924
   Lee, 2015, ZABBIX NETWORK MONIT
   Ma SP, 2019, ASIA PAC SOFWR ENG, P165, DOI 10.1109/APSEC48747.2019.00031
   Merkel D., 2014, LINUX J, V2014, P2, DOI DOI 10.5555/2600239.2600241
   Neufeld N., 2011, WEPMU035 ICALEPCS
   Noor A, 2019, IEEE INT CONF CLOUD, P156, DOI 10.1109/CLOUD.2019.00035
   Oppenheimer D., 2016, DESIGN PATTERNS CONT
   Petrik D, 2019, PROCEEDINGS OF THE 2ND ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE-INTENSIVE BUSINESS: START-UPS, PLATFORMS, AND ECOSYSTEMS (IWSIB '19), P1, DOI 10.1145/3340481.3342730
   Prometheus, MONITORING SYSTEM TI
   Santos J., 2017, INT CONF NETW SER, P1
   Santos J, 2018, ENTROPY-SWITZ, V20, DOI 10.3390/e20010004
   Souza A, 2018, IEEE 20TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS / IEEE 16TH INTERNATIONAL CONFERENCE ON SMART CITY / IEEE 4TH INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (HPCC/SMARTCITY/DSS), P758, DOI 10.1109/HPCC/SmartCity/DSS.2018.00129
   Strauss D, 2019, NET CORE 3 0, P189
   Sycara K., 2008, SEMANTIC WEB SERVICE, P313
   Taneja M, 2019, SOFTWARE PRACT EXPER, V49, P1055, DOI 10.1002/spe.2704
   Traefik, CLOUD NAT APPL PROX
   Turnbull J., 2018, Monitoring with Prometheus
   Vinoski S, 2012, IEEE INTERNET COMPUT, V16, P98, DOI 10.1109/MIC.2012.117
   Whitus, 2018, LOW COST TIME SYNCHR
NR 31
TC 2
Z9 2
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 427
EP 442
DI 10.1002/spe.3029
EA SEP 2021
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000696398100001
OA Green Published
DA 2024-07-18
ER

PT J
AU Karthikeyan, P
AF Karthikeyan, Periyasami
TI An efficient load balancing using seven stone game optimization in cloud
   computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; genetic algorithm; load balancing; particle swarm
   optimization; seven stone game optimization; simulated annealing; tabu
   search
ID RESOURCE-ALLOCATION; ALGORITHM; SCHEME
AB Cloud computing offers massive processing power to cloud client to solve the scientific, financial forecasting, and weather forecasting applications. The process of distributing to the load to the different cloud service providers is a complex problem. Cloud service providers have different types of virtual machines with different computing power types in multi-layered architectures. Various optimization works have been proposed to tackle the load balancing problem in cloud service providers. Improving performance in load balancing is a cumbersome task. Seven stone game optimization (SSGO) is designed based on the south Indian seven stone game workflow. The proposed method's foremost ambition is to reduce makespan time and maximize cloud service providers' utilization. The proposed method was simulated, and results demonstrate that minimizes the makespan time and maximizes the resource utilization than the particle swarm optimization (PSO), genetic algorithm (GA), simulated annealing (SA), and Tabu search (TS). The experimental results show that the SSGO provides 4% more resource utilization than PSO, 5% more than GA, and 7% more than SA and 10% more than TS.
C1 [Karthikeyan, Periyasami] Parul Univ, Fac Engn & Technol, Parul Inst Technol, Vadodara 391760, Gujarat, India.
C3 Parul University
RP Karthikeyan, P (corresponding author), Parul Univ, Fac Engn & Technol, Parul Inst Technol, Vadodara 391760, Gujarat, India.
EM nrmkarthi@gmail.com
RI P, Karthikeyan/Q-8849-2016
OI P, Karthikeyan/0000-0001-8977-5520
CR Adhikari M, 2019, J NETW COMPUT APPL, V128, P64, DOI 10.1016/j.jnca.2018.12.010
   Arab MN, 2014, J SUPERCOMPUT, V68, P1538, DOI 10.1007/s11227-014-1124-y
   Aral A, 2016, J SYST SOFTWARE, V120, P89, DOI 10.1016/j.jss.2016.07.007
   Babu LDD, 2013, APPL SOFT COMPUT, V13, P2292, DOI 10.1016/j.asoc.2013.01.025
   Baranwal G, 2015, J SYST SOFTWARE, V108, P60, DOI 10.1016/j.jss.2015.06.025
   Calheiros RN, 2014, INT CONF CLOUD COMP, P342, DOI 10.1109/CloudCom.2014.20
   Chainbi W, 2018, SOFTWARE PRACT EXPER, V48, P1847, DOI 10.1002/spe.2600
   Daraghmi EY, 2015, J SYST SOFTWARE, V107, P187, DOI 10.1016/j.jss.2015.06.001
   Devaraj AFS, 2020, J PARALLEL DISTR COM, V142, P36, DOI 10.1016/j.jpdc.2020.03.022
   Elsherbiny S, 2018, EGYPT INFORM J, V19, P33, DOI 10.1016/j.eij.2017.07.001
   Gao H, 2014, IEEE T IND INFORM, V10, P2044, DOI 10.1109/TII.2014.2342378
   Golchi MM, 2019, COMPUT NETW, V162, DOI 10.1016/j.comnet.2019.106860
   Hussain A, 2019, J SUPERCOMPUT, V75, P6777, DOI 10.1007/s11227-019-02916-4
   Hussain A, 2018, DATA, V3, DOI 10.3390/data3040038
   Jena UK, 2022, J KING SAUD UNIV-COM, V34, P2332, DOI 10.1016/j.jksuci.2020.01.012
   Jeyakrishnan V, 2017, WIRELESS PERS COMMUN, V94, P2363, DOI 10.1007/s11277-016-3481-8
   Kaur A, 2022, J KING SAUD UNIV-COM, V34, P813, DOI 10.1016/j.jksuci.2019.02.010
   Kaur P, 2017, J PARALLEL DISTR COM, V101, P41, DOI 10.1016/j.jpdc.2016.11.003
   Li KQ, 2018, SOFTWARE PRACT EXPER, V48, P1805, DOI 10.1002/spe.2584
   Liu Y, 2017, J NETW COMPUT APPL, V83, P213, DOI 10.1016/j.jnca.2015.04.017
   Ma K, 2018, APPL SOFT COMPUT, V62, P504, DOI 10.1016/j.asoc.2017.09.021
   Masdari M, 2016, J NETW COMPUT APPL, V66, P64, DOI 10.1016/j.jnca.2016.01.018
   Midya S, 2018, J NETW COMPUT APPL, V103, P58, DOI 10.1016/j.jnca.2017.11.016
   Milan ST, 2019, COMPUT OPER RES, V110, P159, DOI 10.1016/j.cor.2019.05.022
   Mohamed AM, 2020, SOFTWARE PRACT EXPER, V50, P925, DOI 10.1002/spe.2803
   Montazerolghaem A, 2016, IEEE T NETW SERV MAN, V13, P806, DOI 10.1109/TNSM.2016.2572161
   Panda SK, 2018, ARAB J SCI ENG, V43, P913, DOI 10.1007/s13369-017-2798-2
   Ramezani F, 2014, INT J PARALLEL PROG, V42, P739, DOI 10.1007/s10766-013-0275-4
   Ramezani F, 2013, LECT NOTES COMPUT SC, V8274, P237, DOI 10.1007/978-3-642-45005-1_17
   Shishido HY, 2018, COMPUT ELECTR ENG, V69, P378, DOI 10.1016/j.compeleceng.2017.12.004
   Wang HF, 2010, NAT COMPUT, V9, P703, DOI 10.1007/s11047-009-9176-2
   Xu YM, 2015, IEEE T PARALL DISTR, V26, P3208, DOI 10.1109/TPDS.2014.2385698
   Ye X, 2017, KNOWL-BASED SYST, V135, P113, DOI 10.1016/j.knosys.2017.08.006
   Yuan HT, 2016, IEEE T AUTOM SCI ENG, V13, P976, DOI 10.1109/TASE.2015.2427234
   Zheng W, 2018, FUTURE GENER COMP SY, V82, P244, DOI 10.1016/j.future.2017.12.004
NR 35
TC 1
Z9 1
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1242
EP 1258
DI 10.1002/spe.2954
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000646149500004
DA 2024-07-18
ER

PT J
AU Cao, K
   Wei, TQ
   Chen, MS
   Li, KQ
   Weng, J
   Tan, WZ
AF Cao, Kun
   Wei, Tongquan
   Chen, Mingsong
   Li, Keqin
   Weng, Jian
   Tan, Wuzheng
TI Exploring reliable edge-cloud computing for service latency optimization
   in sustainable cyber-physical systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cyber-physical systems; edge-cloud computing; energy; reliability;
   service latency minimization
ID ENERGY; DESIGN
AB In recent years, the advance in information technology has promoted a wide span of emerging cyber-physical systems (CPS) applications such as autonomous automobile systems, healthcare monitoring, and process control systems. For these CPS applications, service latency management is extraordinarily important for the sake of providing high quality-of-experience to terminal users. Edge-cloud computing, integrating both edge computing and cloud computing, is regarded as a promising computation paradigm to achieve low service latency for terminal users in CPS. However, existing latency-aware edge-cloud computing methods dedicated for CPS fail to jointly consider energy budgets and reliability requirements, which may greatly degrade the sustainability of CPS applications. In this article, we explore the problem of minimizing service latency of edge-cloud computing coupled CPS under the constraints of energy budgets and reliability requirements. We propose a two-stage approach composed of static and dynamic service latency optimization. At static stage, Monte-Carlo simulation with integer-linear-programming technique is adopted to find the optimal computation offloading mapping and task backup number. At dynamic stage, a backup-adaptive dynamic mechanism is developed to avoid redundant data transmissions and executions for achieving additional energy savings and service latency enhancement. Experimental results show that our solution is able to reduce system service latency by up to 18.3% compared with representative baseline solutions.
C1 [Cao, Kun; Weng, Jian; Tan, Wuzheng] Jinan Univ, Coll Cyber Secur, Coll Informat Sci & Technol, Guangzhou 510632, Peoples R China.
   [Wei, Tongquan] East China Normal Univ, Sch Comp Sci & Technol, Shanghai, Peoples R China.
   [Chen, Mingsong] East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai, Peoples R China.
   [Li, Keqin] SUNY Coll New Paltz, Dept Comp Sci, New Paltz, NY 12561 USA.
C3 Jinan University; East China Normal University; East China Normal
   University; State University of New York (SUNY) System; SUNY New Paltz
RP Tan, WZ (corresponding author), Jinan Univ, Coll Cyber Secur, Coll Informat Sci & Technol, Guangzhou 510632, Peoples R China.
EM tanwuzheng@126.com
RI Chen, Ming/GVU-8412-2022
OI Cao, Kun/0000-0003-4872-4908; Weng, Jian/0000-0003-4067-8230
FU Key R&D Program of Guangdong Province [2019B010136003]; National Key
   Research and Development Program of China [2018YFB2101300]; Natural
   Science Foundation of China [61872147]
FX This work was partially supported by Key R&D Program of Guangdong
   Province under Grant 2019B010136003, National Key Research and
   Development Program of China under Grant 2018YFB2101300, and Natural
   Science Foundation of China under Grant 61872147.
CR Behr Technologies Inc, 2019, 6 LEAD TYP IOT WIR T
   Cao K, 2021, IEEE T IND INFORM, V17, P494, DOI 10.1109/TII.2020.2975897
   Cao K, 2020, IEEE T COMPUT AID D, V39, P2095, DOI 10.1109/TCAD.2019.2957374
   Cao K, 2019, IEEE T COMPUT AID D, V38, P1799, DOI 10.1109/TCAD.2018.2873239
   Cao K, 2019, J SYST ARCHITECT, V97, P397, DOI 10.1016/j.sysarc.2019.01.003
   Cao K, 2019, IEEE T COMPUT AID D, V38, P1189, DOI 10.1109/TCAD.2018.2846650
   Cicirelli F, 2016, IEEE SYS MAN CYBERN, P3463, DOI 10.1109/SMC.2016.7844769
   Fraga-Lamas P, 2020, IEEE ACCESS, V8, P45496, DOI 10.1109/ACCESS.2020.2978291
   FUHRMANN SW, 1985, OPER RES, V33, P1117, DOI 10.1287/opre.33.5.1117
   Ghobaei-Arani M, 2020, T EMERG TELECOMMUN T, V31, DOI 10.1002/ett.3770
   Haque MA, 2017, IEEE T PARALL DISTR, V28, P813, DOI 10.1109/TPDS.2016.2600595
   Hassan MU, 2020, IEEE COMMUN SURV TUT, V22, P746, DOI 10.1109/COMST.2019.2944748
   Jayaseelan Ramkumar, 2008, 2008 IEEE/ACM International Conference on Computer-Aided Design (ICCAD), P618, DOI 10.1109/ICCAD.2008.4681641
   Jiang W, 2020, J SYST ARCHITECT, V110, DOI 10.1016/j.sysarc.2020.101775
   Jiang W, 2019, IEEE T COMPUT AID D, V38, P1413, DOI 10.1109/TCAD.2018.2846652
   Jiang W, 2017, MICROPROCESS MICROSY, V52, P401, DOI 10.1016/j.micpro.2016.08.002
   Li KL, 2014, IEEE T PARALL DISTR, V25, P2867, DOI 10.1109/TPDS.2013.270
   Li LY, 2021, IEEE T COMPUT, V70, P581, DOI 10.1109/TC.2020.2991177
   Li LY, 2019, IEEE T COMPUT AID D, V38, P1599, DOI 10.1109/TCAD.2018.2859241
   Lin S, 2011, IEEE T INTELL TRANSP, V12, P846, DOI 10.1109/TITS.2011.2114652
   Miller K., 2005, Communication theories: Perspectives, processes, and contexts, V2nd
   Mudassar M, 2020, INT BHURBAN C APPL S, P395, DOI [10.1109/ibcast47879.2020.9044538, 10.1109/IBCAST47879.2020.9044538]
   O'Donovan Peter, 2018, Manufacturing Letters, V15, P139, DOI 10.1016/j.mfglet.2018.01.005
   Okafor K. C., 2021, International Journal of Computers and Applications, V43, P612, DOI 10.1080/1206212X.2019.1600830
   Peng K, 2020, IET CYBER PHYS SYST, V5, P196, DOI 10.1049/iet-cps.2019.0085
   Rodrigues TG, 2017, IEEE T COMPUT, V66, P810, DOI 10.1109/TC.2016.2620469
   Sood SK, 2018, FUTURE GENER COMP SY, V88, P764, DOI 10.1016/j.future.2018.01.008
   Tariq UU, 2019, ACM T INTEL SYST TEC, V10, DOI 10.1145/3336121
   Wang SG, 2021, IEEE T MOBILE COMPUT, V20, P939, DOI 10.1109/TMC.2019.2957804
   Wang SG, 2019, J PARALLEL DISTR COM, V127, P160, DOI 10.1016/j.jpdc.2018.06.008
   Zeng DZ, 2020, FUTURE GENER COMP SY, V105, P757, DOI 10.1016/j.future.2018.01.060
   Zhao J, 2021, SOFTWARE PRACT EXPER, V51, P2143, DOI 10.1002/spe.2895
   Zhou JL, 2021, IEEE T IND INFORM, V17, P7820, DOI 10.1109/TII.2020.3011506
   Zhou JL, 2020, IEEE T SERV COMPUT, V13, P745, DOI 10.1109/TSC.2019.2963301
NR 34
TC 15
Z9 15
U1 2
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2225
EP 2237
DI 10.1002/spe.2942
EA JAN 2021
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000607085600001
DA 2024-07-18
ER

PT J
AU Singh, A
   Auluck, N
AF Singh, Anil
   Auluck, Nitin
TI Load balancing aware scheduling algorithms for fog networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud data center; fog computing; load balancing; mobile data center;
   security
ID INTERNET; THINGS
AB Fog networks have attracted the attention of researchers recently. The idea is that a part of the computation of a job/application can be performed by fog devices that are located at the network edge, close to the users. Executing latency sensitive applications on the cloud may not be feasible, owing to the significant communication delay involved between the user and the cloud data center (cdc). By the time the application traverses the network and reaches the cloud data center, it might already be too late. However, fog devices, also known as mobile data centers (mdcs), are capable of executing such latency sensitive applications. In this paper, we study the problem of balancing the application load while taking account of security constraints of jobs, across variousmdcsin a fog network. In case a particularmdcdoes not have sufficient capacity to execute a job, the job needs to be migrated to some othermdc. To this end, we propose three heuristic algorithms:minimum distance, minimum load, and minimum hop distance and load (MHDL). In addition, we also propose anILP-based algorithm calledload balancing aware scheduling ILP(LASILP) for solving the task mapping and scheduling problem. The performance of the proposed algorithms have been compared with the cloud only algorithm and another heuristic algorithm called fog-cloud-placement (FCP). Simulation results performed on real-life workload traces reveal that theMHDLheuristic performs better as compared to other scheduling policies in the fog computing environment while meeting application privacy requirements.
C1 [Singh, Anil; Auluck, Nitin] Indian Inst Technol Ropar, Dept Comp Sci & Engn, Rupnagar, Punjab, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Ropar
RP Singh, A (corresponding author), Indian Inst Technol Ropar, Dept Comp Sci & Engn, Rupnagar, Punjab, India.
EM anil.singh@iitrpr.ac.in
RI Singh, Anil/ABB-9997-2020
OI Singh, Anil/0000-0002-0820-0256
CR Aljabre A., 2012, International Journal Of Business Social Science, V3
   Bajer M, 2018, 2018 IEEE 6TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD 2018), P149, DOI 10.1109/FiCloud.2018.00029
   Balarin F, 1998, IEEE DES TEST COMPUT, V15, P71, DOI 10.1109/54.655185
   Bittencourt LF, 2016, COMM COM INF SC, V581, P3, DOI 10.1007/978-3-319-29582-4_1
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Cardellini V, 2015, 2015 IEEE S COMP COM
   Cisco, 2016, CISC VIS NETW IND GL
   Clark S, 2005, LIT COMPASS, V2, DOI 10.1111/j.1741-4113.2005.00154.x
   DAR BK, 2018, INT CONF EMERG TECHN, pNIL23
   Dastjerdi AV, 2016, COMPUTER, V49, P112, DOI 10.1109/MC.2016.245
   Fan Q, 2020, IEEE T NETW SCI ENG, V7, P253, DOI 10.1109/TNSE.2018.2852762
   Fizza K, 2018, IEEE 6 INT C FUT INT
   Ghit B, 2016, 2016 16 IEEE ACM INT
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hamlen K, 2010, INT J INF SECUR PRIV, V4, P36, DOI 10.4018/jisp.2010040103
   Hauser CB, 2017, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UTILITY AND CLOUD COMPUTING (UCC' 17), P29, DOI 10.1145/3147213.3147217
   Hu Jinhua, 2010, 2010 3 INT S PAR ARC
   Jennings B, 2015, J NETW SYST MANAG, V23, P567, DOI 10.1007/s10922-014-9307-7
   Jonathan A, 2017, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UTILITY AND CLOUD COMPUTING (UCC' 17), P141, DOI 10.1145/3147213.3147228
   Klusaek D, 2017, P 10 INT C UT CLOUD
   Li J, 2017, 2017 IEEE 1 INT C FO
   Mondragon OH, 2016, 2016 16 IEEE ACM INT
   Olaniyan R, 2018, 2018 IEEE 2ND INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC)
   Parak B., 2017, JOB SCHEDULING STRAT, P25
   Pietzuch P.R., 2006, P 22 INT C DATA ENG
   Selea T, 2016, 2016 16 IEEE ACM INT
   Shekhar S, 2017, 2017 IEEE 1 INT C FO
   Singh A, 2017, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UTILITY AND CLOUD COMPUTING (UCC' 17), P131, DOI 10.1145/3147213.3147216
   Singh J, 2015, IEEE T PARALL DISTR, V26, P1251, DOI 10.1109/TPDS.2014.2322354
   Skarlat O, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P89, DOI 10.1109/ICFEC.2017.12
   Taneja Mohit, 2017, 2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), P1222, DOI 10.23919/INM.2017.7987464
   Verma S, 2016, 2016 3 INT C COMP SU
   Vilela PH, 2018, 2018 3 INT C SMART S
   Voorsluys W., 2011, Cloud Computing: Principles and Paradigms, P1, DOI DOI 10.1002/9780470940105.CH1
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
NR 35
TC 28
Z9 28
U1 0
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2020
VL 50
IS 11
SI SI
BP 2012
EP 2030
DI 10.1002/spe.2722
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NW3WG
UT WOS:000574940300002
DA 2024-07-18
ER

PT J
AU Parimala, M
   Priya, RMS
   Reddy, MPK
   Chowdhary, CL
   Poluru, RK
   Khan, S
AF Parimala, M.
   Swarna Priya, R. M.
   Praveen Kumar Reddy, M.
   Lal Chowdhary, Chiranji
   Kumar Poluru, Ravi
   Khan, Suleman
TI Spatiotemporal-based sentiment analysis on tweets for risk assessment of
   event using deep learning approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deep learning; long short-term memory; random forest; risk assessment
   sentiment analysis; stochastic gradient descent; XGBoost
AB Social media plays a vital role in analyzing the actual emotions of people after and during a disaster. Sentiment analysis is a method to detect a pattern from the emotions and feedback of the user. The main objective of the proposed work is to perform sentiment analysis on the tweets on a specific disaster context for a particular location at different intervals of time. LSTM network with word embedding algorithm is used to derive keywords based on the history of tweets and the context of the tweets. The proposed algorithm risk assessment sentiment analysis (RASA) uses the keywords generated from the network to classify the tweets and sentiment score for each location is identified. The model is validated with various state-of-art algorithms, namely, support vector machine, Naive-Bayes, maximum entropy, logistic regression, random forest, XGBoost, stochastic gradient descent, and convolution neural networks in 2-fold scenario: one for binary class and the other multiclass with three target classes. The results infer that the proposed RASA performs better in a binary class scenario with an increase of 1% when compared with XGBoost and 30% in multiclass scenario on an average when compared with all the other techniques. The model helps the government to take preventive measures to manage the posteffect of the disaster event in a location.
C1 [Parimala, M.; Swarna Priya, R. M.; Praveen Kumar Reddy, M.; Lal Chowdhary, Chiranji] Vellore Inst Technol, Sch Informat Technol & Engn, Vellore, Tamil Nadu, India.
   [Kumar Poluru, Ravi] Vellore Inst Technol, Sch Comp Sci & Engn, Vellore, Tamil Nadu, India.
   [Khan, Suleman] Air Univ Islamabad, Islamabad, Pakistan.
C3 Vellore Institute of Technology (VIT); VIT Vellore; Vellore Institute of
   Technology (VIT); VIT Vellore; Quaid I Azam University; Air University
   Islamabad
RP Reddy, MPK (corresponding author), Vellore Inst Technol, Sch Informat Technol & Engn, Vellore, Tamil Nadu, India.
EM praveenkumarreddy@vit.ac.in
RI Maddikunta, Praveen Kumar Reddy/HSG-8292-2023; Chowdhary, Chiranji
   Lal/P-5387-2017; Reddy, Praveen Kumar/AAB-4338-2019
OI Maddikunta, Praveen Kumar Reddy/0000-0003-4209-2495; Chowdhary, Chiranji
   Lal/0000-0002-5476-1468; Reddy, Praveen Kumar/0000-0003-4209-2495; Ramu,
   Swarna Priya/0000-0002-8287-9690
CR Alaei AR, 2019, J TRAVEL RES, V58, P175, DOI 10.1177/0047287517747753
   Alfarrarjeh A, 2017, PR INT CONF DATA SC, P193, DOI 10.1109/DSAA.2017.77
   [Anonymous], 2019, World Bank Open Data
   [Anonymous], ARXIV191103298
   Bhavaraju SKT, 2019, INT J DISAST RISK RE, V39, DOI 10.1016/j.ijdrr.2019.101251
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Bollen J, 2011, J COMPUT SCI-NETH, V2, P1, DOI 10.1016/j.jocs.2010.12.007
   Chien Y, 2017, DOES FLICKR WORK DIS
   Do HH, 2019, EXPERT SYST APPL, V118, P272, DOI 10.1016/j.eswa.2018.10.003
   Gadekallu T., 2019, SENTIMENT ANAL KNOWL, P77
   Gadekallu TR, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9020274
   Ghani U, 2018, SYMMETRY-BASEL, V10, DOI 10.3390/sym10120761
   Go A., 2009, Twitter sentiment classification using distant supervision, V150, DOI DOI 10.1016/J.SEDGEO.2006.07.004
   Ibrahim NF, 2019, COMPUT HUM BEHAV, V96, P32, DOI 10.1016/j.chb.2019.02.004
   Iwendi C., SOFTW PRACT EXP
   Jansen BJ, 2009, J AM SOC INF SCI TEC, V60, P2169, DOI 10.1002/asi.21149
   Kumar S, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0224-1
   Kumari A, 2019, J NETW COMPUT APPL, V128, P90, DOI 10.1016/j.jnca.2018.12.013
   Kutia S, 2019, IEEE ACCESS, V7, P90777, DOI 10.1109/ACCESS.2019.2924584
   Mikhaylov MB, 2019, US Patent, Patent No. [10,198,432, 10198432]
   Molla MAI, 2020, ENVIRON TECHNOL, V41, P3524, DOI 10.1080/09593330.2019.1615129
   Mollah MB, 2017, J NETW COMPUT APPL, V84, P38, DOI 10.1016/j.jnca.2017.02.001
   Mollah MB, 2017, IEEE CLOUD COMPUT, V4, P34, DOI 10.1109/MCC.2017.9
   Moreira MWL, 2019, COMPUT ELECTR ENG, V77, P435, DOI 10.1016/j.compeleceng.2018.07.041
   Nadali Samaneh, 2010, Proceedings of 2010 International Symposium on Information Technology (ITSim 2010), P1037, DOI 10.1109/ITSIM.2010.5561583
   Raghavendra T. S., 2019, Procedia Computer Science, V152, P230, DOI 10.1016/j.procs.2019.05.047
   Raychev V, 2019, ARXIV191112544
   Reddy GT, 2020, IEEE ACCESS, V8, P54776, DOI 10.1109/ACCESS.2020.2980942
   Reynard D, 2019, TRANSP RED
   Seo H, 2014, VIS COMMUN Q, V21, P150, DOI 10.1080/15551393.2014.955501
   Shafiq M, 2018, J SUPERCOMPUT, V74, P4867, DOI 10.1007/s11227-018-2263-3
   Shalunts G, 2014, SENTIMENT ANAL GERMA
   Shimada K., 2011, Proceedings of the 2011 First ACIS International Symposium on Software and Network Engineering (SSNE 2011), P61, DOI 10.1109/SSNE.2011.27
   Singh A, 2019, FUTURE GENER COMP SY, V94, P173, DOI 10.1016/j.future.2018.11.026
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   Wang H, 2012, SYSTEM REAL TIME TWI, P115
   Wang XH, 2012, ADV MAR BIOL, V62, P231, DOI 10.1016/B978-0-12-394283-8.00005-9
   Wudaru V, 2019, INT CONF ADVAN COMPU, P1, DOI [10.1109/icaccs.2019.8728487, 10.1109/ICACCS.2019.8728487]
NR 38
TC 28
Z9 29
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2021
VL 51
IS 3
SI SI
BP 550
EP 570
DI 10.1002/spe.2851
EA JUN 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QH1RQ
UT WOS:000538676500001
DA 2024-07-18
ER

PT J
AU Mohamed, AM
   Abdelsalam, HM
AF Mohamed, Amany M.
   Abdelsalam, Hisham M.
TI A multicriteria optimization model for cloud service provider selection
   in multicloud environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud service provider; genetic algorithm; multicloud; particle swarm
   optimization; simulated annealing; Taguchi method
AB Multicloud computing is a strategy that helps customers to reduce reliance on any single cloud provider (known as the vendor lock-in problem). The value of such strategy increases with proper selection of qualified service providers. In this paper, a constrained multicriteria multicloud provider selection mathematical model is proposed. Three metaheuristics algorithms (simulated annealing [SA], genetic algorithm [GA], and particle swarm optimization algorithm [PSO]) were implemented to solve the model, and their performance was studied and compared using a hypothetical case study. For the sake of comparison, Taguchi's robust design method was used to select the algorithms' parameters values, an initial feasible solution was generated using analytic hierarchy process (AHP)-as the most used method to solve the cloud provider selection problem in the literature, all three algorithms used that solution and, in order to avoid AHP limitations, another initial solution was generated randomly and used by the three algorithm in a second set of performance experiments. Results showed that SA, GA, PSO improved the AHP solution by 53.75%, 60.41%, and 60.02%, respectively, SA and PSO are robust because of reaching the same best solution in spite of the initial solution.
C1 [Mohamed, Amany M.] Cairo Univ, Fac Comp & Informat, Decis Support & Future Studies Ctr, Cairo 12613, Egypt.
   [Abdelsalam, Hisham M.] Cairo Univ, Fac Comp & Informat, Operat Res & Decis Support Dept, Cairo, Egypt.
C3 Egyptian Knowledge Bank (EKB); Cairo University; Egyptian Knowledge Bank
   (EKB); Cairo University
RP Mohamed, AM (corresponding author), Cairo Univ, Fac Comp & Informat, Decis Support & Future Studies Ctr, Cairo 12613, Egypt.
EM amanymagdymohamed@gmail.com
OI Magdy Mohamed, Amany/0000-0002-7625-6737
CR Alhamad M, 2010, P 12 INT C INF INT W, DOI 10.1145/1967486.1967579
   Alkhalil A, 2014, CENTR EUR C INF INT
   Andrikopoulo V, 2013, P IEEE 6 INT C CLOUD
   Andrikopoulos V, 2013, P 3 INT C CLOUD COMP
   Andrikopoulos V, 2014, EUR C SERV OR CLOUD
   Assadipour G, 2013, INT J ADV MANUF TECH, V67, P575, DOI 10.1007/s00170-012-4506-4
   Baranwal G, 2014, IEEE INT ADV COMP C
   Barr R. S., 1995, Journal of Heuristics, V1, P9, DOI 10.1007/BF02430363
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Calcavecchia NM, 2012, P IEEE 5 INT C CLOUD
   Chaisiri S, 2009, P IEEE AS PAC SESRV
   Che ZH, 2017, COMPUT IND ENG, V105, P247, DOI 10.1016/j.cie.2016.12.036
   Cui LX, 2015, INT J COMPUT INTEG M, V28, P729, DOI 10.1080/0951192X.2014.900869
   EL-Sawy Ahmed A, 2014, INT J SCI ENG RES, V1, P252
   Flores RH, 2014, US Patent Application, Patent No. [13/570,193, 13570193]
   Fox A., 2009, UCBEECS200928
   Gai KK, 2018, IEEE NETWORK, V32, P34, DOI 10.1109/MNET.2018.1700407
   Gai KK, 2018, J PARALLEL DISTR COM, V111, P126, DOI 10.1016/j.jpdc.2017.08.001
   Gai KK, 2016, J NETW COMPUT APPL, V59, P46, DOI 10.1016/j.jnca.2015.05.016
   Garg SK, 2012, P 4 IEEE INT C UT CL
   Grozev N, 2014, SOFTWARE PRACT EXPER, V44, P369, DOI 10.1002/spe.2168
   Ipsilandis PG, 2008, ARXIV08093574
   Kaneko R, 2015, P 21 AS PAC C COMM A
   Kennedy J., 1995, 1995 IEEE International Conference on Neural Networks Proceedings (Cat. No.95CH35828), P1942, DOI 10.1109/ICNN.1995.488968
   Kennedy J, 1997, IEEE SYS MAN CYBERN, P4104, DOI 10.1109/ICSMC.1997.637339
   Khajeh-Hosseini A, 2011, P IEEE 4 INT C CLOUD
   Khajeh-Hosseini A, 2012, SOFTWARE PRACT EXPER, V42, P447, DOI 10.1002/spe.1072
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Koneru A, 2016, P INT C INV COMP TEC
   Kumar N., 2014, RES J RECENT SCI, V3, P7
   Li A, 2010, 10 ACM SIGCOMM C INT
   Menzel M., 2012, Proceedings of the 21st international conference on World Wide Web, New York, P979
   Menzel M, 2013, SOFTWARE PRACT EXPER, V43, P1283, DOI 10.1002/spe.1110
   Mitchell M, 1998, INTRO GENETIC ALGORI, P6
   Mohamadia H., 2014, International Journal of Supply and Operations Management, V1, P228
   Mohammaditabar D, 2016, INT J SYST SCI, V47, P1745, DOI 10.1080/00207721.2014.951418
   Neredumilli GK, 2013, IJCER, V2, P160
   Oki E, 2017, IEICE T COMMUN, VE100B, P1406, DOI 10.1587/transcom.2016EBP3403
   Park MW, 1998, COMPUT OPER RES, V25, P207, DOI 10.1016/S0305-0548(97)00054-3
   Repschlaeger J, 2013, P 9 AM C INF SYST AU
   Repschlager J, 2011, P EMISA, V190, P163
   Saaty T, 2012, Decision Making for Leaders: The Analytical Hierarchy Process for Decision in ComplexWorld
   Sengupta S, 2019, MACH LEARN KNOW EXTR, V1, P157, DOI 10.3390/make1010010
   Shirur S, 2015, INT J SCI RES, V4, P1957
   Simarro JLL, 2011, P INT C HIGH PERF CO
   Sousa G, 2016, P 9 IEEE INT C CLOUD
   Suman B, 2006, J OPER RES SOC, V57, P1143, DOI 10.1057/palgrave.jors.2602068
   Taguchi G., 1994, J. Electron. Packag, V116, P2, DOI [10.1115/1.2905506, DOI 10.1115/1.2905506]
   Totiya S, 2017, P WORLD C ENG COMP S
   Upadhyay N, 2017, PROCEDIA COMPUT SCI, V122, P1061, DOI 10.1016/j.procs.2017.11.474
   Varghese B, 2018, FUTURE GENER COMP SY, V79, P849, DOI 10.1016/j.future.2017.09.020
   Yang PC, 2011, EXPERT SYST APPL, V38, P14773, DOI 10.1016/j.eswa.2011.05.041
   Yao W, 2015, P INT C YOUNG COMP S
NR 53
TC 12
Z9 13
U1 3
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2020
VL 50
IS 6
BP 925
EP 947
DI 10.1002/spe.2803
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK4IJ
UT WOS:000530823800007
DA 2024-07-18
ER

PT J
AU Chirivella-Perez, E
   Marco-Alaez, R
   Hita, A
   Serrano, A
   Calero, JMA
   Wang, Q
   Neves, PM
   Bernini, G
   Koutsopoulos, K
   Perez, MG
   Perez, GM
   Barros, MJ
   Gavras, A
AF Chirivella-Perez, Enrique
   Marco-Alaez, Ricardo
   Hita, Alba
   Serrano, Ana
   Calero, Jose M. Alcaraz
   Wang, Qi
   Neves, Pedro M.
   Bernini, Giacomo
   Koutsopoulos, Konstantinos
   Gil Perez, Manuel
   Martinez Perez, Gregorio
   Barros, Maria Joao
   Gavras, Anastasius
TI SELFNET 5G mobile edge computing infrastructure: Design and prototyping
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deployment; infrastructure; mobile edge computing; network function
   virtualization; software-defined networks; 5G
ID MANAGEMENT; NETWORK
AB This paper presents the design and prototype implementation of the SELFNET fifth-generation (5G) mobile edge infrastructure. In line with the current and emerging 5G architectural principles, visions, and standards, the proposed infrastructure is established primarily based on a mobile edge computing paradigm. It leverages cloud computing, software-defined networking, and network function virtualization as core enabling technologies. Several technical solutions and options have been analyzed. As a result, a novel portable 5G infrastructure testbed has been prototyped to enable the preliminary testing of the integrated key technologies and to provide a realistic execution platform for further investigating and evaluating software-defined networking- and network function virtualization-based application scenarios in 5G networks.
C1 [Chirivella-Perez, Enrique; Marco-Alaez, Ricardo; Hita, Alba; Serrano, Ana; Calero, Jose M. Alcaraz; Wang, Qi] Univ West Scotland, Sch Comp Engn & Phys Sci, Paisley PA1 2BE, Renfrew, Scotland.
   [Neves, Pedro M.] Altice Labs SA, Aveiro, Portugal.
   [Bernini, Giacomo] Nextworks, Pisa, Italy.
   [Koutsopoulos, Konstantinos] Creat Syst Engn Monoprosopi Epe, Athens, Greece.
   [Gil Perez, Manuel; Martinez Perez, Gregorio] Univ Murcia, Fac Comp Sci, Murcia, Spain.
   [Barros, Maria Joao; Gavras, Anastasius] Eurescom GmbH, Heidelberg, Germany.
C3 University of West Scotland; Altice Portugal; University of Murcia
RP Calero, JMA (corresponding author), Univ West Scotland, Sch Comp Engn & Phys Sci, Paisley PA1 2BE, Renfrew, Scotland.
EM Jose.Alcaraz-Calero@uws.ac.uk
RI Serrano-Mamolar, Ana/ABH-4677-2020; Gavras, Anastasius/AAU-5659-2020;
   Perez, Gregorio Martinez/I-7620-2013; Pérez, Enrique
   Chirivella/M-5463-2019; Alcaraz Calero, Jose M./JWP-8793-2024
OI Serrano-Mamolar, Ana/0000-0002-0027-7128; Gavras,
   Anastasius/0000-0003-4496-8358; Pérez, Enrique
   Chirivella/0000-0001-6363-7859; Alcaraz Calero, Jose
   M./0000-0002-2654-7595; Marco Alaez, Ricardo/0000-0002-4211-5223;
   Bernini, Giacomo/0000-0003-1460-5855; Gil Perez,
   Manuel/0000-0002-7768-9665
CR 5G PPP, SELFNET PROJ
   5G-PPP, 5G VIS
   5G-PPP, GLOB 5G ACT
   5G-PPP, KEY PERF IND KPIS
   5G-PPP, 5G PPP PHAS 1 PROJ
   5G-PPP/Selfnet, DEL 2 1 US CAS DEF R
   Alaez RM, 2018, VEH TECHNOL CONFE
   Amit N, 2016, COMMUN ACM, V59, P108, DOI 10.1145/2845648
   [Anonymous], 2013, 4G: LTE/LTE-advanced for mobile broadband
   [Anonymous], 2010, International Journal of Engineering
   [Anonymous], 2014, CISC VIS NETW IND GL
   [Anonymous], MULT EDG COMP
   [Anonymous], 2014, NETW FUNCT VIRT NFV
   [Anonymous], 2015, SERVICE FUNCTION CHA
   Baldo N., 2011, NS 3 LTE MODULE LENA
   Bartholomew Daniel., 2006, Linux J, V2006, P3
   Berde P., 2014, PROC ACM HOTSDN
   Bhamare D, 2016, J NETW COMPUT APPL, V75, P138, DOI 10.1016/j.jnca.2016.09.001
   Chirivella-Perez E., 2018, WIREL COMMUN MOB COM, V2018
   CHIRIVELLAPEREZ E, 2018, IEEE WCNC
   ElNashar A., 2014, Design, deployment and performance of 4G-LTE networks: A practical approach
   ETSI, NETW FUNCT VIR NFV
   Farinacci D., 2000, 2784 RFC
   Garg V. K., 2001, Wireless network evolution: 2G to 3G
   Pérez MG, 2017, IEEE INTERNET COMPUT, V21, P28, DOI 10.1109/MIC.2017.3481345
   Goldsack Patrick, 2009, Operating Systems Review, V43, P16, DOI 10.1145/1496909.1496915
   Henderson TR, 2008, SIGCOMM DEM SEATTL W
   Hewlett Packard Enterprise Development, HPE INS CLUST MAN UT
   Hochstein L., 2017, Ansible: Up and Running: Automating configuration management and deployment the easy way
   Katsalis K, 2017, IEEE COMMUN MAG, V55, P146, DOI 10.1109/MCOM.2017.1600936
   Kivity A, 2007, P LIN S OTT CAN
   Kumar R., 2014, Proceedings of the International Journal of Advancement in Engineering Technology, Management Applied Science, P111
   Mahalingam M., 2014, 7348 RFC
   Marschall M., 2015, CHEF INFRASTRUCTURE
   Martinez R., 2018, 2018 INT C OPT NETW
   McLoughlin M., 2008, QCOW2 IMAGE FORMAT
   Medved J, 2014, 2014 IEEE 15TH INTERNATIONAL SYMPOSIUM ON A WORLD OF WIRELESS, MOBILE AND MULTIMEDIA NETWORKS (WOWMOM)
   Mijumbi R, 2016, IEEE COMMUN MAG, V54, P98, DOI 10.1109/MCOM.2016.7378433
   Milojicic D, 2011, IEEE INTERNET COMPUT, V15, P11, DOI 10.1109/MIC.2011.44
   NGMN Alliance, 2015, 5G WHIT PAP
   Nikaein N, 2014, ACM SIGCOMM COMP COM, V44, P33, DOI 10.1145/2677046.2677053
   OpenStack, NEUTR
   Rosenblum M, 1999, P HOT CHIPS STANF CA
   Ryu S., 2015, Framework community: Ryu sdn framework
   Sefraoui O., 2012, INT J COMPUTER APPL, V55, P38, DOI 10.5120/8738-2991
   Semeria C, 2000, CISC VIS NETW IND GL
   Sesia S., 2011, LTE UMTS LONG TERM E
   Smart Energy Groups, EN AW EV
   Thompson G.O., 1999, US Patent, Patent No. [5,959,990, 5959990]
   Tkachova O, 2015, 2015 2 INT SCI PRACT
   VirtualBox, VIRT STOR
   Wallner R., 2013, Proceedings of the Asia-Pacific Advanced Network, V35, P10
NR 52
TC 7
Z9 7
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 741
EP 756
DI 10.1002/spe.2681
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000526578200016
DA 2024-07-18
ER

PT J
AU Krishnan, P
   Duttagupta, S
   Achuthan, K
AF Krishnan, Prabhakar
   Duttagupta, Subhasri
   Achuthan, Krishnashree
TI SDN/NFV security framework for fog-to-things computing infrastructure
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cloud security; Edge network; Fog computing; Internet of things (IoT);
   Network Intrusion Detection System (NIDS); NFV; OpenFlow; SDN; 5G
ID DDOS DEFENSE; PLANE
AB Currently, core networking architectures are facing disruptive developments, due to emergence of paradigms such as Software-Defined-Networking (SDN) for control, Network Function Virtualization (NFV) for services, and so on. These are the key enabling technologies for future applications in 5G and locality-based Internet of things (IoT)/wireless sensor network services. The proliferation of IoT devices at the Edge networks is driving the growth of all-connected world of Internet traffic. In the Cloud-to-Things continuum, processing of information and data at the Edge mandates development of security best practices to arise within a fog computing environment. Service providers are transforming their business using NFV-based services and SDN-enabled networks. The SDN paradigm offers an easily programmable model, global view, and control for modern networks, which demand faster response to security incidents and dynamically enforce countermeasures to intrusions and cyberattacks. This article proposes an autonomic multilayer security framework called Distributed Threat Analytics and Response System (DTARS) for a converged architecture of Fog/Edge computing and SDN infrastructures, for emerging applications in IoT and 5G networks. The major detection scheme is deployed within the data plane, consisting of a coarse-grained behavioral, anti-spoofing, flow monitoring and fine-grained traffic multi-feature entropy-based algorithms. We developed exemplary defense applications under DTARS framework, on a malware testbed imitating the real-life DDoS/botnets such as Mirai. The experiments and analysis show that DTARS is capable of detecting attacks in real-time with accuracy more than 95% under attack intensities up to 50 000 packets/s. The benign traffic forwarding rate remains unaffected with DTARS, while it drops down to 65% with traditional NIDS for advanced DDoS attacks. Further, DTARS achieves this performance without incurring additional latency due to data plane overhead.
C1 [Krishnan, Prabhakar; Achuthan, Krishnashree] Amrita Vishwa Vidyapeetham, Amrita Ctr Cybersecur Syst & Networks, Amritapuri, India.
   [Duttagupta, Subhasri] Amrita Vishwa Vidyapeetham, Dept Comp Sci & Engn, Amritapuri, India.
C3 Amrita Vishwa Vidyapeetham; Amrita Vishwa Vidyapeetham Amritapuri;
   Amrita Vishwa Vidyapeetham; Amrita Vishwa Vidyapeetham Amritapuri
RP Krishnan, P (corresponding author), Amrita Vishwa Vidyapeetham, Ctr Cybersecur Syst & Networks, Amritapuri Campus,Clappana PO, Kollam 690525, India.
EM kprabhakar@am.amrita.edu
RI joy, shone/AAR-3728-2020; Achuthan, Krishnashree/AGS-6660-2022;
   Duttagupta, Subhasri/ABF-1752-2020
OI Duttagupta, Subhasri/0000-0003-3716-6947; Krishnan,
   Prabhakar/0000-0001-6702-112X
CR Afek Y, 2017, IEEE INFOCOM SER
   Ali A, 2017, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON ACCOUNTING STUDIES (ICAS) 2017, P178
   Ambrosin M, 2017, IEEE ACM T NETWORK, V25, P1206, DOI 10.1109/TNET.2016.2626287
   [Anonymous], ICN 2017 16 INT C NE
   [Anonymous], 9 INT C COMP COMM NE
   [Anonymous], P US SEC WASH DC
   [Anonymous], 2017 IEEE REG 10 C P
   [Anonymous], 2017 IEEE S COMP COM
   [Anonymous], ACM COMPUT SURV
   [Anonymous], P USENIX ATC PHIL PA
   [Anonymous], NETW FUNCT VIRT NFV
   [Anonymous], SPRINGER COMMUNICATI
   [Anonymous], 2015, ACM HOTNETS
   [Anonymous], P IEEE LOC COMP NETW
   [Anonymous], OS SPEC VERS 1 0 0 W
   [Anonymous], 2015 29 INT C ADV IN
   [Anonymous], 2015, 2015 IEEE TRUSTC BIG
   [Anonymous], MIRAI BOTNET
   [Anonymous], 2014, CISC VIS NETW IND GL
   Basile C, 2015, 2015 1ST IEEE CONFERENCE ON NETWORK SOFTWARIZATION (NETSOFT), DOI 10.1109/NETSOFT.2015.7116152
   BERNSTEIN DJ, SYN COOKIES
   Bi YG, 2018, IEEE COMMUN MAG, V56, P53, DOI 10.1109/MCOM.2018.1700908
   Bianchi G, 2014, ACM SIGCOMM COMP COM, V44, P45
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Casado M, 2009, IEEE ACM T NETWORK, V17, P1270, DOI 10.1109/TNET.2009.2026415
   Chaignon P, 2018, PROCEEDINGS OF THE SYMPOSIUM ON SDN RESEARCH (SOSR'18), DOI 10.1145/3185467.3185496
   Chakrabarty S, 2015, IEEE INT CONF MOB, P190, DOI 10.1109/MASS.2015.100
   Cui YH, 2016, J NETW COMPUT APPL, V68, P65, DOI 10.1016/j.jnca.2016.04.005
   Dargahi T, 2017, IEEE COMMUN SURV TUT, V19, P1701, DOI 10.1109/COMST.2017.2689819
   Giotis K, 2014, COMPUT NETW, V62, P122, DOI 10.1016/j.bjp.2013.10.014
   Greenberg A, 2005, ACM SIGCOMM COMP COM, V35, P41, DOI 10.1145/1096536.1096541
   Gude N, 2008, ACM SIGCOMM COMP COM, V38, P105, DOI 10.1145/1384609.1384625
   Guo ZH, 2016, 2016 IEEE/ACM 24TH INTERNATIONAL SYMPOSIUM ON QUALITY OF SERVICE (IWQOS)
   Han BA, 2018, SECUR COMMUN NETW, DOI 10.1155/2018/9649643
   Hao ZJ, 2017, IEEE INTERNET COMPUT, V21, P44, DOI 10.1109/MIC.2017.26
   Jackson EJ, 2016, PROCEEDINGS OF USENIX ATC '16: 2016 USENIX ANNUAL TECHNICAL CONFERENCE, P15
   Kalkan K, 2018, IEEE J SEL AREA COMM, V36, P2358, DOI 10.1109/JSAC.2018.2869997
   Khan MA, 2018, FUTURE GENER COMP SY, V82, P395, DOI 10.1016/j.future.2017.11.022
   Krishnan A, 2017, EMERG TECH ETH INT A, P116
   Krishnan Prabhakar, 2017, INT J PURE APPL MATH, V115, P93
   Li C, 2017, IEEE INTERNET THINGS, V4, P1156, DOI 10.1109/JIOT.2017.2685596
   Lim S, 2014, INT CONF UBIQ FUTUR, P63, DOI 10.1109/ICUFN.2014.6876752
   McKeown N, 2008, ACM SIGCOMM COMP COM, V38, P69, DOI 10.1145/1355734.1355746
   Mekky H, 2014, P 3 WORKSH HOT TOP S
   Morabito R, 2018, FUTURE GENER COMP SY, V81, P1, DOI 10.1016/j.future.2017.10.011
   Pan JL, 2018, IEEE INTERNET THINGS, V5, P439, DOI 10.1109/JIOT.2017.2767608
   Rapuzzi R, 2018, FUTURE GENER COMP SY, V85, P235, DOI 10.1016/j.future.2018.04.007
   Sahay R, 2017, COMPUT SECUR, V70, P482, DOI 10.1016/j.cose.2017.07.008
   Shaghaghi A., 2018, Handbook of Computer Networks and Cyber Security, V4
   Shin S., 2013, P 2013 ACM SIGSAC C
   Sun C, 2017, IEEE ACM T NETWORK, V25, P3294, DOI 10.1109/TNET.2017.2726550
   Vaquero LM, 2014, ACM SIGCOMM COMP COM, V44, P27, DOI 10.1145/2677046.2677052
   Wang DS, 2019, PEER PEER NETW APPL, V12, P269, DOI 10.1007/s12083-018-0663-z
   Xia WF, 2015, IEEE COMMUN SURV TUT, V17, P27, DOI 10.1109/COMST.2014.2330903
   Yu ML, 2010, ACM SIGCOMM COMP COM, V40, P351, DOI 10.1145/1851275.1851224
   Zhang PY, 2018, FUTURE GENER COMP SY, V88, P16, DOI 10.1016/j.future.2018.05.008
NR 56
TC 19
Z9 19
U1 1
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 757
EP 800
DI 10.1002/spe.2761
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000526578200017
DA 2024-07-18
ER

PT J
AU Lu, N
   Wang, B
   Zhang, YX
   Shi, WB
   Esposito, C
AF Lu, Ning
   Wang, Bin
   Zhang, Yongxin
   Shi, Wenbo
   Esposito, Christian
TI NeuCheck: A more practical Ethereum smart contract security analysis
   tool
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE blockchain; Ethereum; security analysis; smart contract
AB Ethereum is one of the currently popular trading platform, where any one can exchange, buy, or sell cryptocurrencies. Smart contract, a computer program, can help Ethereum to encode rules or scripts for processing transactions. Because the smart contract usually handles large number of cryptocurrencies worth billions of dollars apiece, its security has gained considerable attention. In this paper, we first investigate the security of smart contracts running on the Ethereum and introduce several new security vulnerabilities that allow adversaries to exploit and gain financial benefits. Then, we propose a more practical smart contract analysis tool termed NeuCheck, in which we introduce the syntax tree in the syntactical analyzer to complete the transformation from source code to intermediate representation, and then adopt the open source library working with XML to analyze such tree. We have built a prototype of NeuCheck for Ethereum and evaluate it with over 52 000 existing Ethereum smart contracts. The results show that (1) our new documented vulnerabilities are prevalent; (2) NeuCheck improves the analysis speed by at least 17.2 times compared to other popular analysis tools (eg, Securify and Mythril; and (3) allows for cross-platform deployment.
C1 [Lu, Ning; Wang, Bin; Zhang, Yongxin; Shi, Wenbo] Northeastern Univ, Coll Comp Sci & Engn, Shenyang, Liaoning, Peoples R China.
   [Lu, Ning] Xidian Univ, Sch Comp Sci & Technol, Xian, Shaanxi, Peoples R China.
   [Esposito, Christian] Univ Salerno, Dept Comp Sci, Fisciano, Italy.
C3 Northeastern University - China; Xidian University; University of
   Salerno
RP Shi, WB (corresponding author), Northeastern Univ, Coll Comp Sci & Engn, Shenyang, Liaoning, Peoples R China.
EM shiwb@neuq.edu.cn
RI ESPOSITO, Christiancarmine/AAI-4626-2020
OI ESPOSITO, Christiancarmine/0000-0002-0085-0748; Lu,
   ning/0000-0001-7325-7307; zhang, yong xin/0000-0003-1415-5831
FU National Nature Science Foundation of China [61601107, U1708262,
   61472074]; Fundamental Research Funds for the Central Universities
   [N172304023]; China Postdoctoral Science Foundation [2019M653568]
FX National Nature Science Foundation of China, Grant/Award Number:
   61601107, U1708262 and 61472074; Fundamental Research Funds for the
   Central Universities, Grant/Award Number: N172304023; China Postdoctoral
   Science Foundation, Grant/Award Number: 2019M653568
CR Aho Alfred V., 1986, Addison Wesley, V7, P9
   [Anonymous], 2016, THEDAO
   [Anonymous], 2016, EXCEPTION OVERFLOW
   [Anonymous], 2018, MYTHRIL
   [Anonymous], 2017, IN DEPTH LOOK PARITY
   [Anonymous], 2018, DICE2WIN
   [Anonymous], 2018, P 25 ANN NETW DISTR
   [Anonymous], 2016, KING ETHER
   [Anonymous], 2017, ACCIDENTAL BUG MAY H
   Baliga A., 2017, Persistent, V4, P14
   Banerjee M, BLOCKCHAIN FUTURE IN
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Castro M, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P173, DOI 10.1145/571637.571640
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Delmolino K, 2016, LECT NOTES COMPUT SC, V9604, P79, DOI 10.1007/978-3-662-53357-4_6
   Dworkin M.J, 2015, Federal Information Processing Standards, DOI [DOI 10.6028/NIST.FIPS.202, 10.6028/NIST.FIPS.202]
   Ethereum Foundation, 2014, ETH WHIT PAP
   Hirai Yoichi, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P520, DOI 10.1007/978-3-319-70278-0_33
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Li X, 2019, IEEE INTERNET THINGS, V6, P4755, DOI 10.1109/JIOT.2018.2874473
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Nakamoto S., 2008, DECENTRAL BUS REV
   Nikoli I, 2018, P 34 ANN COMP SEC AP
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Siegel David, 2016, UNDERSTANDING DAO HA
   Swamy N, 2016, ACM SIGPLAN NOTICES, V51, P256, DOI 10.1145/2914770.2837655
   Szabo N., 1997, IDEA SMART CONTRACTS
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Vitalik B, 2016, THINKING SMART CONTR
   Xu JL, 2019, IEEE T IND INFORM, V15, P3538, DOI 10.1109/TII.2019.2896965
   Yi-feng Z, 2011, MODERN COMPUTER, V15, P39
NR 33
TC 28
Z9 32
U1 0
U2 33
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2021
VL 51
IS 10
SI SI
BP 2065
EP 2084
DI 10.1002/spe.2745
EA AUG 2019
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UN1VW
UT WOS:000484100100001
DA 2024-07-18
ER

PT J
AU Freire, DL
   Frantz, RZ
   Roos-Frantz, F
   Sawicki, S
AF Freire, Daniela L.
   Frantz, Rafael Z.
   Roos-Frantz, Fabricia
   Sawicki, Sandro
TI Survey on the run-time systems of enterprise application integration
   platforms focusing on performance
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; enterprise application integration; integration
   patterns; integration platform; run-time system
ID CLOUD; ENVIRONMENT; SCIENCE; DESIGN; MODEL
AB Companies are taking advantage of cloud computing to upgrade their business processes. Cloud computing requires interaction with many kinds of applications, so it is necessary to improve the performance of software tools that allow keeping information on all these applications consistent and synchronised. Integration platforms are specialised software tools that provide support to design, implement, run, and monitor integration solutions, which aim to orchestrate a set of applications so as to promote compatibility among their data or to develop new functionality on top of the current ones. The run-time system is the part of the integration platform responsible for running the integration solutions, which makes its performance the uttermost important issue. The contribution of this article is two-fold: a framework and an evaluation of integration platforms. The former is a framework composed of ten properties grouped into two dimensions to evaluate the run-time systems focusing on performance. Using this framework as reference, the second contribution is an evaluation of nine open-source integration platforms, which represent the state-of-the-art, provide support to the integration patterns, and follow the pipes-and-filters architectural style. In addition, as a result of this work, we suggest open research directions that can be explored to improve the performance of the run-time systems and at the same time may be useful to adapt them to the context of cloud computing.
C1 [Freire, Daniela L.; Frantz, Rafael Z.; Roos-Frantz, Fabricia; Sawicki, Sandro] Unijui Univ, Dept Exact Sci & Engn, BR-98700000 Ijui, RS, Brazil.
C3 Universidade Regional do Noroeste do Estado do Rio Grande do Sul -
   UNIJUI
RP Frantz, RZ (corresponding author), Unijui Univ, Dept Exact Sci & Engn, BR-98700000 Ijui, RS, Brazil.
EM rzfrantz@unijui.edu.br
RI Roos-Frantz, Fabricia/Y-6059-2018; Sawicki, Sandro/T-6912-2019; Frantz,
   Rafael Z./J-9521-2012; Freire, Daniela Lopes/S-3465-2019
OI Roos-Frantz, Fabricia/0000-0001-9514-6560; Frantz, Rafael
   Z./0000-0003-3740-7560; Freire, Daniela Lopes/0000-0002-5363-3608;
   Sawicki, Sandro/0000-0002-7960-0775
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior
   [73318345415, 88881.119518/2016-01]; Fundacao de Amparo a Pesquisa do
   Estado do Rio Grande do Sul [17/2551-0001206-2]
FX Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior, Grant/Award
   Number: 73318345415 and 88881.119518/2016-01; Fundacao de Amparo a
   Pesquisa do Estado do Rio Grande do Sul, Grant/Award Number:
   17/2551-0001206-2
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   Anand S, 2018, ADV INTELL SYST, V701, P531, DOI 10.1007/978-981-10-7563-6_55
   [Anonymous], 2011, NIST DEFINITION CLOU
   [Anonymous], 2017, Petals Documentation Version 5.1.0. Topology configuration
   [Anonymous], 1990, Basics of qualitative research
   [Anonymous], 2013, Distributed and Cloud computing: from parallel processing to the internet of things
   Anwar N, 2018, FUTURE INTERNET, V10, DOI 10.3390/fi10010005
   Apache Camel, 2017, DES NOT THREADP CONF
   Bahadur F., 2014, Nucleus, V51, P93
   Balko S, 2015, 2015 IEEE 19 INT ENT
   Bauer KS, 2017, J PHYS CONF SER, V803, DOI 10.1088/1742-6596/803/1/012018
   Belusso CLM, 2016, PROCEDIA COMPUT SCI, V100, P229, DOI 10.1016/j.procs.2016.09.147
   Bhadoria RS, 2017, INFORM SYST, V65, P158, DOI 10.1016/j.is.2016.12.005
   Boillat T, 2014, 2014 IEEE 16 C BUS I
   Brahmi Z, 2014, INT C BUS INF SYST I
   Burns DW, 2003, US patent, Patent No. [6,651,158, 6651158]
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Caseau Y, 2005, ADV ENG INFORM, V19, P199, DOI 10.1016/j.aei.2005.05.013
   CHEN W, 2011, P 6 WORKSH WORKFL SU
   Corchuelo R, 2008, JORN ING SOFT BAS DA
   Cordes D, 2011, 2011 IEEE 17 INT C P
   dasSilvaDias A, 2014, 2014 IEEE S COMP COM
   Dossot D., 2014, Mule in action
   Ebert N., 2016, Multikonferenz Wirtschaftsinformatik, P1675
   Ebert N, 2017, BUS INFORM SYST ENG+, V59, P375, DOI 10.1007/s12599-017-0486-0
   Elmougy S, 2017, J CLOUD COMPUT-ADV S, V6, DOI 10.1186/s13677-017-0085-0
   Emmersberger C, 2013, P 7 ACM INT C DISTR
   Fisher M., 2012, Spring integration in action
   Fisher M, 2017, SPRING INTEGRATION R
   Frantz RZ, 2016, J SYST SOFTWARE, V111, P89, DOI 10.1016/j.jss.2015.08.044
   Frantz RZ, 2012, J SYST SOFTWARE, V85, P480, DOI 10.1016/j.jss.2011.10.048
   Frantz RZ, 2011, 2011 IEEE 3 INT C CL
   Garcia-Jimenez FJ, 2010, 2010 IEEE 7 INT C E
   Garousi V., 2018, Information and Software Technology, V106, P1
   Gleyzer G., 2017, US Patent, Patent No. [9,547,521 B2, 9547521]
   Guttridge K., 2017, Magic quadrant for enterprise integration platform as a service 2017
   Guttridge K., 2016, Magic quadrant for enterprise integration platform as a service, worldwide
   Harman M, 2013, J SYST SOFTWARE, V86, P2225, DOI 10.1016/j.jss.2012.10.027
   He W, 2014, IEEE T IND INFORM, V10, P35, DOI 10.1109/TII.2012.2189221
   Hernández I, 2015, PROCEDIA COMPUT SCI, V64, P977, DOI 10.1016/j.procs.2015.08.616
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Ibsen C., 2010, Camel in action
   Indrasiri K., 2016, BEGINNING W502 ESB, P1
   Janetschek M, 2017, FUTURE GENER COMP SY, V75, P330, DOI 10.1016/j.future.2017.02.029
   Jitterbit Success Central, 2017, HARM 9 0 CHUNK
   Khoumbati K, 2006, J MANAGE INFORM SYST, V22, P69, DOI 10.2753/MIS0742-1222220404
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   Kitchenham B. A., 1997, Software Engineering Notes, V22, P21, DOI 10.1145/263244.263251
   Klein MJ, 2014, P 16 INT C ENT INF S
   Konsek H., 2013, Instant apache servicemix how-to
   Kraisig AR, 2016, PROCEDIA COMPUT SCI, V100, P407, DOI 10.1016/j.procs.2016.09.176
   Kurniawan K, 2015, 2015 INT C DAT SOFTW
   Le Hors AJ, 2013, P 22 INT C WORLD WID
   Lee K-L, 2011, 2011 IEEE 9 INT S PA
   Li Q, 2013, COMPUT IND, V64, P813, DOI 10.1016/j.compind.2013.05.003
   Ma L, 2014, FUTURE GENER COMP SY, V30, P202, DOI 10.1016/j.future.2013.06.020
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Messerschmitt D., 2003, SOFTWARE ECOSYSTEM U
   MuleSoft, 2017, CISC VIS NETW IND GL
   Muthuvelu N, 2013, FUTURE GENER COMP SY, V29, P170, DOI 10.1016/j.future.2012.03.022
   Myroshnychenko K, 2013, THESIS
   Nazeer S., 2016, International Journal of Computer Science and Information Security, V14, P299
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Palanimalai S, 2015, PROCEDIA COMPUT SCI, V50, P163, DOI 10.1016/j.procs.2015.04.079
   Pandey C., 2015, Spring integration essentials
   Penciuc D, 2014, PROC CIRP, V25, P369, DOI 10.1016/j.procir.2014.10.051
   Peyret H, 2016, FORRESTER WAVE IPAAS
   Pezzini M., 2011, Integration platform as a service: moving integration to the cloud
   Pezzini M., 2015, Magic quadrant for enterprise integration platform as a service
   Powell KR, 2017, NURS OUTLOOK, V65, P572, DOI 10.1016/j.outlook.2017.03.004
   RedHat, 2017, PROD DOC RED HAT FUS
   Ritter D, 2018, P 12 ACM INT C DISTR
   Ritter D, 2016, INT C DISTR EV SYST
   Ritter D, 2017, INFORM SYST, V67, P36, DOI 10.1016/j.is.2017.03.003
   Rosati P., 2017, 2017 IEEE INT C CLOU
   Russell J., 2012, Fuse esb
   Russell J., 2012, Petals ESB
   Russell J., 2012, Jitterbit integration server
   Schulte S, 2015, FUTURE GENER COMP SY, V46, P36, DOI 10.1016/j.future.2014.09.005
   Sellaro DF, 2017, P 31 BRAZ S SOFTW EN
   Sequeira FR, 2015, PROCEDIA COMPUT SCI, V64, P894, DOI 10.1016/j.procs.2015.08.604
   Sethi A., 2015, International Journal of Research in Engineering and Technology, V4, P87
   Shah R, 2017, WORKING PAPER
   Sharma S., 2015, Ovum decision matrix: Selecting an integration paas (ipaas)
   Sharma S., 2017, Ovum decision matrix highlights the growing importance of ipaas and API platforms in hybrid integration
   Singh P, 2017, KNOWL INF SYST, V52, P1, DOI 10.1007/s10115-017-1044-2
   St Laurent A. M., 2004, Understanding Open Source and Free Software Licensing
   SUDARSANAM A, 2004, P 10 INT C PAR DISTR
   Synapse, 2017, AP SYN DOC
   Tang W., 2018, GeoComputational Analysis and Modeling of Regional Systems, P37
   Tirkey A, 2017, 2017 IEEE 15 INT C S
   Tsai JT, 2013, COMPUT OPER RES, V40, P3045, DOI 10.1016/j.cor.2013.06.012
   WSO2 Enterprise Integrator Documentation, 2017, WSO2 ENTERPRISE INTE
   Yoon MK, 2016, 2016 ACM IEEE 43 ANN
   Oh Sukkyu, 2013, [Journal of Tourism Management Research, 관광경영연구], V17, P189
NR 95
TC 13
Z9 16
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2019
VL 49
IS 3
BP 341
EP 360
DI 10.1002/spe.2670
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0HU
UT WOS:000459868900001
DA 2024-07-18
ER

PT J
AU Mertz, J
   Nunes, I
AF Mertz, Jhonny
   Nunes, Ingrid
TI Automation of application-level caching in a seamless way
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive systems; application-level caching; cache; framework; web
   application
AB Meeting performance and scalability requirements while delivering services is a critical issue in web applications. Recently, latency and cost of Internet-based services are encouraging the use of application-level caching to continue satisfying users' demands and improve the scalability and availability of origin servers. Application-level caching, in which developers manually control cached content, has been adopted when traditional forms of caching are insufficient to meet such requirements. Despite its popularity, this level of caching is typically addressed in an ad hoc way, given that it depends on specific details of the application. Furthermore, it forces application developers to reason about a crosscutting concern, which is unrelated to the application business logic. As a result, application-level caching is a time-consuming and error-prone task, becoming a common source of bugs. Among all the issues involved with application-level caching, the decision of what should be cached must frequently be adjusted to cope with the application evolution and usage, making it a challenging task. In this paper, we introduce an automated caching approach to automatically identify application-level cache content at runtime by monitoring system execution and adaptively managing caching decisions. Our approach is implemented as a framework that can be seamlessly integrated into new and existing web applications. In addition to the reduction of the effort required from developers to develop a caching solution, an empirical evaluation showed that our approach significantly speeds up and improves hit ratios with improvements ranging from 2.78% to 17.18%.
C1 [Mertz, Jhonny; Nunes, Ingrid] Univ Fed Rio Grande do Sul, 9500 Bento Goncalves Ave, Porto Alegre, RS, Brazil.
   [Nunes, Ingrid] TU Dortmund, Dortmund, Germany.
C3 Universidade Federal do Rio Grande do Sul; Dortmund University of
   Technology
RP Mertz, J (corresponding author), Univ Fed Rio Grande do Sul, 9500 Bento Goncalves Ave, Porto Alegre, RS, Brazil.
EM jmamertz@inf.ufrgs.br
RI Nunes, Ingrid/A-3715-2014
OI Nunes, Ingrid/0000-0002-6879-5829; Mertz, Jhonny/0000-0002-2522-4700
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq)
   [131550/2015-2, 303232/2015-3]; Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior (CAPES) [7619-15-4]; Alexander von Humboldt
   Foundation [BRA 1184533 HFSTCAPES-P]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq),
   Grant/Award Number: 131550/2015-2 and 303232/2015-3; Coordenacao de
   Aperfeicoamento de Pessoal de Nivel Superior (CAPES), Grant/Award
   Number: 7619-15-4; Alexander von Humboldt Foundation, Grant/Award
   Number: BRA 1184533 HFSTCAPES-P
CR Ali W., 2011, INT J ADV SOFT COMPU, V3, P18
   Amza C., 2005, SUPERCOMPUTING ICS 0, P264
   Baeza-Yates R, 2007, 14 INT C STRING PROC, DOI [10. 1007/978-3-540-75530-2_7, DOI 10.1007/978-3-540-75530-2_7]
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Binder R.V., 2000, AW OBJ TECHNOL S
   Bouchenak S, 2006, LECT NOTES COMPUT SC, V4290, P1
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Della Toffola L, 2015, ACM SIGPLAN NOTICES, V50, P607, DOI [10.1145/2858965.2814290, 10.1145/2814270.2814290]
   Einziger G, 2017, ACM T STORAGE, V13, DOI 10.1145/3149371
   Guerrero C, 2011, 2011 10TH IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), DOI 10.1109/NCA.2011.55
   Guo P.J., 2011, ISSTA 11, P287, DOI [DOI 10.1145/2001420.2001455, 10.1145/2001420.2001455]
   Gupta P, 2011, P 12 ACM IFIP USENIX, DOI [DOI 10.1007/978-3-642-25821-3_17, 10.1007/978-3-642-25821-317, 10.1007/978-3-642-25821-3_17]
   Huang J, 2010, P 2010 IEEE INT C SE, DOI [10.1109/SOCA.2010.5707138, DOI 10.1109/SOCA.2010.5707138]
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Labrinidis A, 2009, FOUND TRENDS DATABAS, V2, P169, DOI 10.1561/1900000005
   Li L, 2006, P INT C QUAL SOFTW 2, DOI [10. 1109/QSIC. 2006. 9, DOI 10.1109/QSIC.2006.9]
   Maplesden D, 2015, P 6 ACM SPEC INT C P, DOI [10. 1145/2668930. 2688040, DOI 10.1145/2668930.2688040]
   Mertz J, 2018, ACM COMPUT SURV, V50, DOI 10.1145/3145813
   Mertz J, 2017, IEEE T SOFTWARE ENG, V43, P798, DOI 10.1109/TSE.2016.2633992
   Negrao AP, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0018-4
   Nguyen Khanh, 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2013, page, P268
   Ports Dan R. K., 2010, P 9 USENIX S OP SYST
   Radhakrishnan G, 2004, BELL LABS TECH J, V9, P165, DOI 10.1002/bltj.20011
   Ravi J, 2009, J NETW COMPUT APPL, V32, P943, DOI 10.1016/j.jnca.2009.03.005
   Sajeev GP, 2010, 2010 5 IEEE INT C IN, DOI [10. 1109/IS. 2010. 5548373, DOI 10.1109/IS.2010.5548373]
   Santhanakrishnan G, 2006, SOFTWARE PRACT EXPER, V36, P1179, DOI 10.1002/spe.755
   Sun HL, 2017, SOFTWARE PRACT EXPER, V47, P891, DOI 10.1002/spe.2462
   Wang W, 2014, P 6 ASIAPACIFIC S IN, P35
   Xu GQ, 2012, ACM SIGPLAN NOTICES, V47, P1017, DOI 10.1145/2398857.2384690
NR 29
TC 10
Z9 10
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2018
VL 48
IS 6
BP 1218
EP 1237
DI 10.1002/spe.2571
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF5UQ
UT WOS:000432033700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lemire, D
   Kaser, O
   Kurz, N
   Deri, L
   O'Hara, C
   Saint-Jacques, F
   Ssi-Yan-Kai, G
AF Lemire, Daniel
   Kaser, Owen
   Kurz, Nathan
   Deri, Luca
   O'Hara, Chris
   Saint-Jacques, Francois
   Ssi-Yan-Kai, Gregory
TI Roaring bitmaps: Implementation of an optimized software library
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bitmap indexes; database indexes; Jaccard index; SIMD instructions;
   vectorization
ID COMPRESSION; INDEX; ALGORITHM; SIMD
AB Compressed bitmap indexes are used in systems such as Git or Oracle to accelerate queries. They represent sets and often support operations such as unions, intersections, differences, and symmetric differences. Several important systems such as Elasticsearch, Apache Spark, Netflix's Atlas, LinkedIn's Pivot, Metamarkets' Druid, Pilosa, Apache Hive, Apache Tez, Microsoft Visual Studio Team Services, and Apache Kylin rely on a specific type of compressed bitmap index called Roaring. We present an optimized software library written in C implementing Roaring bitmaps: CRoaring. It benefits from several algorithms designed for the single-instruction-multiple-data instructions available on commodity processors. In particular, we present vectorized algorithms to compute the intersection, union, difference, and symmetric difference between arrays. We benchmark the library against a wide range of competitive alternatives, identifying weaknesses and strengths in our software. Our work is available under a liberal open-source license.
C1 [Lemire, Daniel] Univ Quebec, TELUQ, 5800 St Denis,Off 1105, Montreal, PQ H2S 3L5, Canada.
   [Kaser, Owen] Univ New Brunswick, Fac Comp Sci, St John, NB, Canada.
   [Deri, Luca] CNR, Ist Informat & Telemat, Pisa, Italy.
   [O'Hara, Chris] Kissmetrics, San Francisco Bay Area, CA USA.
   [Saint-Jacques, Francois] AdGear Technol Inc, Montreal, PQ, Canada.
   [Ssi-Yan-Kai, Gregory] 42 Quai Georges Gorse, Boulogne, France.
C3 University of Quebec; University of Quebec Montreal; Universite TELUQ;
   University of New Brunswick; Consiglio Nazionale delle Ricerche (CNR);
   Istituto di Informatica e Telematica (IIT-CNR)
RP Lemire, D (corresponding author), Univ Quebec, TELUQ, 5800 St Denis,Off 1105, Montreal, PQ H2S 3L5, Canada.
EM lemire@gmail.com
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922; Kaser, Owen/0000-0001-6204-5085
FU Natural Sciences and Engineering Research Council of Canada [261437]
FX Natural Sciences and Engineering Research Council of Canada, Grant/Award
   Number: 261437
CR Abuzaid F., 2016, P ADV NEUR INF PROC, P3817
   Anh VN, 2010, SOFTWARE PRACT EXPER, V40, P131, DOI 10.1002/spe.948
   [Anonymous], 1998, The art of computer programming: Sorting and searching
   [Anonymous], 2010, IA-32 and IA-64 Instruction Set Architectures.
   Antoshenkov G., 1995, Proceedings. DCC '95 Data Compression Conference (Cat. No.95TH8037), DOI 10.1109/DCC.1995.515586
   Apache, 2017, KYL EXTR OLAP ENG BI
   Batcher K. E., 1968, P AFIPS SPRING JOINT, P307, DOI [DOI 10.1145/1468075.1468121, 10.1145/1468075. 1468121]
   Bentley J. L., 1976, Information Processing Letters, V5, P82, DOI 10.1016/0020-0190(76)90071-5
   Chambi S, 2016, P 20 INT DAT ENG APP
   Chambi S, 2016, REV NOUVELLES TECHNO, P1
   Chambi S, 2016, SOFTWARE PRACT EXPER, V46, P709, DOI 10.1002/spe.2325
   Chang J, 2015, 2015 IEEE INT C COMM
   Colantonio A, 2010, INFORM PROCESS LETT, V110, P644, DOI 10.1016/j.ipl.2010.05.018
   Corrales Fabian, 2011, Database and Expert Systems Applications. Proceedings 22nd International Conference, DEXA 2011, P381, DOI 10.1007/978-3-642-23091-2_32
   Culpepper JS, 2010, ACM T INFORM SYST, V29, DOI 10.1145/1877766.1877767
   Damme P, 2017, P 20 INT C EXT DAT T
   FLYNN MJ, 1972, IEEE T COMPUT, VC 21, P948, DOI 10.1109/TC.1972.5009071
   Fog A, 2016, TECHNICAL REPORT
   Fokou G, 2015, P 12 EUR SEM WEB C S, V9088
   Fusco F, 2010, PROC VLDB ENDOW, V3, P1382, DOI 10.14778/1920841.1921011
   Germond C, 2017, PILOSA LAUNCHES BREA
   Graefe G., 2008, P 2008 EDBT WORKSH S, P24, DOI DOI 10.1145/1385486.1385494
   Grand A, 2014, LUCENE 5983 ROARINGD
   Grand A, 2015, FRAME REFERENCE ROAR
   Guzun G, 2016, VLDB J, V25, P339, DOI 10.1007/s00778-015-0419-9
   Guzun G, 2014, PROC INT CONF DATA, P484, DOI 10.1109/ICDE.2014.6816675
   Hipp R, 2015, SQLITE AMALGAMATION
   Inoue H, 2015, PROC VLDB ENDOW, V8, P1274, DOI 10.14778/2809974.2809988
   Intel Corporation, 2012, INT IACA TOOL STAT C
   Interlandi M, 2015, P VLDB END KOH COAST
   Kaser O, 2016, SOFTWARE PRACT EXPER, V46, P167, DOI 10.1002/spe.2289
   Khuong PV, 2017, ARRAY LAYOUTS COMP B
   Knuth DE, 2011, COMBINATORIAL AL A 1, V4A
   Koblents G, 2017, BRINGING APACHE SPAR
   Krogh B, 2016, 24TH ACM SIGSPATIAL INTERNATIONAL CONFERENCE ON ADVANCES IN GEOGRAPHIC INFORMATION SYSTEMS (ACM SIGSPATIAL GIS 2016), DOI 10.1145/2996913.2996972
   Kuznetsov A, 2016, BITMAGIC C LIB
   Lemire D, 2016, SOFTWARE PRACT EXPER, V46, P1547, DOI 10.1002/spe.2402
   Lemire D, 2016, SOFTWARE PRACT EXPER, V46, P723, DOI 10.1002/spe.2326
   Lemire D, 2012, ACM T DATABASE SYST, V37, DOI 10.1145/2338626.2338633
   Lemire D, 2010, DATA KNOWL ENG, V69, P3, DOI 10.1016/j.datak.2009.08.006
   Marti V, 2015, GITHUB ENG BLOG
   Mua W, 2017, FASTER POPULATION CO
   Naga PN, 2017, REAL TIME ANAL MASSI
   Navarro Gonzalo, 2012, Experimental Algorithms. Proceedings 11th International Symposium, SEA 2012, P295, DOI 10.1007/978-3-642-30850-5_26
   O'Neil E, 2007, P 11 INT DAT ENG APP
   O'Neil P, 1997, P 1997 ACM SIGMOD IN
   Pieterse V, 2010, P 2010 ANN RES C S A
   Rapoport R, 2014, INTRO ATLAS NETFLIXS
   Rinfret D, 2001, P 2001 ACM SIGMOD IN
   Sanfilippo S, 2017, REDIS MODULES
   Schlegel B., 2011, WS on Accelerating Data Management Systems Using Modern Processor and Storage Architectures
   Siddiqui T, 2016, P VLDB END NEW DELH
   van Cranenburgh Andreas, 2016, J LANGUAGE MODELLING, V4, P57
   Wang J, 2017, P 2017 ACM SIGMOD IN
   Warren HS., 2007, BEAUTIFUL CODE LEADI, P147
   Wikimedia, 2017, GITHUB ENG BLOG
   Wikipedia, 2017, BIT MAN INSTR SETS
   Wu C, 2017, COMMUNICATION
   Wu KS, 2008, LECT NOTES COMPUT SC, V5069, P348
   Wu YJ, 2016, TSINGHUA SCI TECHNOL, V21, P136, DOI 10.1109/TST.2016.7442497
   Yinjun Wu, 2016, IEEE Communications Letters, V20, P1128, DOI 10.1109/LCOMM.2016.2551719
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
NR 62
TC 22
Z9 27
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2018
VL 48
IS 4
BP 867
EP 895
DI 10.1002/spe.2560
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FY3VV
UT WOS:000426749900006
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Urbieta, M
   Frajberg, D
   Rossi, G
AF Urbieta, M.
   Frajberg, D.
   Rossi, G.
TI Assessing the impact of Volatile Functionality removal in web
   applications: Model-Driven vs Code-Based approaches
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE maintenance; Model-Driven web application; quality; requirement;
   Volatile Functionality
ID SOFTWARE MAINTENANCE; TAXONOMY
AB Web applications must quickly adapt to new business demands to keep clients onboard. When unexpected and unforeseen requirements appear, the changes pose challenges to software engineers as they were not considered in the application design and such new functionality can be only valid only for a period in certain situations. This work presents a comparison of maintenance consequences in the software quality when using a Model-Driven approach against a Code-Based one where changes are managed in an ad hoc way. We used the removal of volatile functionality as case of study due to the fact that its characteristics stress the development process. We considered both external and internal quality of deliverables. For assessing the quality of deliverables, we evaluated the production of more than 35 students using both approaches considering their perception gathered through questionnaires and their deliverables. We present the preliminary evidence that there is no significant difference between approaches. Model-Driven performed slightly better than Code-Based, but both responded negatively in terms of deliverables' quality. Results show that maintenance tasks are detrimental to software quality where Model-Driven approach does not excel over Code-Based approach. The Model-Driven approach only highlighted on productivity.
C1 [Urbieta, M.; Frajberg, D.; Rossi, G.] UNLP, LIFIA, Fac Informat, La Plata, Argentina.
   [Urbieta, M.; Rossi, G.] Consejo Nacl Invest Cient & Tecn, La Plata, Argentina.
   [Frajberg, D.] Politecn Milan, Piazza Leonardo da Vinci 32, I-20133 Milan, Italy.
C3 National University of La Plata; Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET); Polytechnic University of Milan
RP Urbieta, M (corresponding author), UNLP, LIFIA, Fac Informat, La Plata, Argentina.
EM murbieta@lifia.info.unlp.edu.ar
RI Rossi, Gustavo/AAE-4736-2020
CR [Anonymous], CALCULATION FUNCTION, P1
   [Anonymous], 2005, PROBABILITY STAT ENG
   Aragon G, 2013, ANAL MODEL DRIVEN WE
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Brambilla M., 2014, Interaction Flow Modeling Language: Model-Driven UI Engineering of Web and Mobile Apps with IFML
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Cerny T, 2015, CLUSTER COMPUT, V18, P1215, DOI 10.1007/s10586-015-0471-7
   Cerny T, 2015, COMPUT SCI INF SYST, V12, P655, DOI 10.2298/CSIS141202021C
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Curtis B., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P49, DOI 10.1109/MTD.2012.6226000
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gaedke M., 2001, Web engineerng. Managing diversity and complexity of web application development, P58
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gethers M., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P540, DOI 10.1109/ASE.2011.6100120
   Guo Y., 2011, 2 WORKSH MAN TECHN D, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Hemel Z, 2011, J SYMB COMPUT, V46, P150, DOI 10.1016/j.jsc.2010.08.006
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Ihme T, 2014, EMPIR SOFTW ENG, V19, P1144, DOI 10.1007/s10664-013-9253-0
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kennard R, 2010, J SYST SOFTWARE, V83, P1896, DOI 10.1016/j.jss.2010.05.079
   Klinger T, 2011, P 2 WORKSHOP MANAGIN, P35
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Martinez Yulkeidi, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P223, DOI 10.1007/978-3-642-31753-8_17
   Martínez Y, 2014, EMPIR SOFTW ENG, V19, P1887, DOI 10.1007/s10664-013-9269-5
   Martínez Y, 2013, INFORM SOFTWARE TECH, V55, P189, DOI 10.1016/j.infsof.2012.07.004
   Morgenthaler J. D., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P1, DOI 10.1109/MTD.2012.6225994
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Olson JackE., 2003, DATA QUALITY ACCURAC
   Olson JE, 2010, DATABASE ARCH KEEP L
   Panach JI, 2015, INFORM SOFTWARE TECH, V62, P164, DOI 10.1016/j.infsof.2015.02.012
   Redman T. C., 2001, Data quality: the field guide
   Rossi G., 2008, Web Engineering. Modelling and Implementing Web Applications
   SALMAN I, 2015, ARE STUDENTS REPRESE, P666, DOI DOI 10.1109/ICSE.2015.82
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Urbieta M, 2012, INT J SOFTW ENG KNOW, V22, P129, DOI 10.1142/S0218194012500064
   Weber Jens H., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P43, DOI 10.1109/MTD.2014.17
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
NR 42
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2018
VL 48
IS 1
BP 11
EP 43
DI 10.1002/spe.2503
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FP4WK
UT WOS:000417617500002
DA 2024-07-18
ER

PT J
AU Ivanchykhin, D
   Ignatchenko, S
   Lemire, D
AF Ivanchykhin, Dmytro
   Ignatchenko, Sergey
   Lemire, Daniel
TI Regular and almost universal hashing: an efficient implementation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance; measurement; random hashing; universal hashing;
   non-cryptographic hashing; avalanche effect
ID MESSAGE-AUTHENTICATION
AB Random hashing can provide guarantees regarding the performance of data structures such as hash tables - even in an adversarial setting. Many existing families of hash functions are universal: given two data objects, the probability that they have the same hash value is low given that we pick hash functions at random. However, universality fails to ensure that all hash functions are well behaved. We might further require regularity: when picking data objects at random they should have a low probability of having the same hash value, for any fixed hash function. We present the efficient implementation of a family of non-cryptographic hash functions (PM+) offering good running times, good memory usage, and distinguishing theoretical guarantees: almost universality and component-wise regularity. On a variety of platforms, our implementations are comparable with the state of the art in performance. On recent Intel processors, PM+ achieves a speed of 4.7 bytes per cycle for 32-bit outputs and 3.3bytes per cycle for 64-bit outputs. We review vectorization through Single Instruction on Multiple Data instructions (e.g., AVX2) and optimizations for superscalar execution. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Ivanchykhin, Dmytro; Ignatchenko, Sergey] OLogN Technol AG, Triesen, Liechtenstein.
   [Lemire, Daniel] TELUQ, LICEF Res Ctr, Montreal, PQ, Canada.
C3 University of Quebec; Universite TELUQ
RP Lemire, D (corresponding author), Univ Quebec, TELUQ, LICEF Res Ctr, 5800 St Denis,Off 1105, Montreal, PQ H2S 3L5, Canada.
EM lemire@gmail.com
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922
FU Natural Sciences and Engineering Research Council of Canada [261437]
FX We thank Ivan Kravets for his help with our testing framework, and more
   specifically with the ARM processors. This work was supported by the
   Natural Sciences and Engineering Research Council of Canada with grant
   no. 261437.
CR Ahmad T, 2014, J NETW COMPUT APPL, V41, P197, DOI 10.1016/j.jnca.2013.11.007
   Appleby A., 2012, SMHasher MurmurHash
   Appleby A, 2012, MURMURHASH3 CODE
   Aumasson J.-P., 2012, INT C CRYPT IND, P489
   BABAI L, 1998, NOTICES AMS, V45, P19
   Bellare M, 2004, LECT NOTES COMPUT SC, V3027, P401
   Bernstein DJ, 2005, LECT NOTES COMPUT SC, V3557, P32
   Black J., 1999, Advances in Cryptology - CRYPTO'99. 19th Annual International Cryptology Conference. Proceedings, P216, DOI 10.1007/3-540-48405-1_14
   Boesgaard M, 2005, BADGER FAST PROVABLY
   Canetti R., 1998, Proceedings of the Thirtieth Annual ACM Symposium on Theory of Computing, P131, DOI 10.1145/276698.276721
   CARTER JL, 1979, J COMPUT SYST SCI, V18, P143, DOI 10.1016/0022-0000(79)90044-8
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Crosby SA, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P29
   Dai Wei., 2007, IACR Cryptology ePrint Archive, V2007, P338
   Dietzfelbinger M., 1996, STACS 96. 13th Annual Symposium on Theoretical Aspects of Computer Science. Proceedings, P569
   Estebanez C, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1861
   Estébanez C, 2014, SOFTWARE PRACT EXPER, V44, P681, DOI 10.1002/spe.2179
   Fleischmann E, 2012, P 4 W EUR C RES CRYP, P83, DOI [10.1007/978-3-642-34159-5_6, DOI 10.1007/978-3-642-34159-5_6]
   Halevi S, 1997, LECT NOTES COMPUT SC, V1267, P172
   Handschuh H, 2008, LECT NOTES COMPUT SC, V5157, P144, DOI 10.1007/978-3-540-85174-5_9
   Intel Corporation, 2012, INT IACA TOOL STAT C
   Intel Corporation, 2015, INT INTR GUID
   Jenkins B, 2012, SPOOKYHASH 128 BIT N
   Klink A, 2011, OCERT2011003
   Krovetz T., 2001, Information Security and Cryptology - ICISC 2000. Third International Conference. Proceedings (Lecture Notes in Computer Science Vol.2015), P73
   Krovetz T, 2007, VMAC VHASH IMPLEMENT
   Krovetz T, 2007, LECT NOTES COMPUT SC, V4356, P327
   Krovetz T, 2006, INFORM PROCESS LETT, V100, P36, DOI 10.1016/j.ipl.2005.11.026
   Lambert D, 2012, NUMBER DISTINCT PROD
   Lemire D, 2016, J CRYPTOGR ENG, V6, P171, DOI 10.1007/s13389-015-0110-5
   Lemire D, 2014, COMPUT J, V57, P1624, DOI 10.1093/comjnl/bxt070
   Lemire D, 2012, DISCRETE APPL MATH, V160, P604, DOI 10.1016/j.dam.2011.11.009
   Lemire D, 2010, COMPUT SPEECH LANG, V24, P698, DOI 10.1016/j.csl.2009.12.001
   NUSSBAUMER HJ, 1976, IBM J RES DEV, V20, P498, DOI 10.1147/rd.205.0498
   Orton Y., 2013, HARDENING PERLS HASH
   Pike Geoff, 2011, CITYHASH
   Richter S, 2015, PROC VLDB ENDOW, V9, P96
   Saarinen MJO, 2012, LECT NOTES COMPUT SC, V7549, P216, DOI 10.1007/978-3-642-34047-5_13
   Sarkar P, 2011, DESIGN CODE CRYPTOGR, V58, P271, DOI 10.1007/s10623-010-9408-6
   So W, 2012, PROCEEDINGS OF THE EIGHTH ACM/IEEE SYMPOSIUM ON ARCHITECTURES FOR NETWORKING AND COMMUNICATIONS SYSTEMS (ANCS'12), P85
   Stinson D. R., 1994, Designs, Codes and Cryptography, V4, P369, DOI 10.1007/BF01388651
   Stinson D.R., 1996, Congressus Numerantium, P7
   Thorup M, 2000, PROCEEDINGS OF THE ELEVENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P496
   Thorup M, 2015, HIGH SPEED HASHING I
   Thorup M, 2012, SIAM J COMPUT, V41, P293, DOI 10.1137/100800774
   VANOORSCHOT PC, 2006, INT J INF SECUR, V5, P186, DOI DOI 10.1007/S10207-006-0081-8
   WEGMAN MN, 1981, J COMPUT SYST SCI, V22, P265, DOI 10.1016/0022-0000(81)90033-7
   Zobrist A.L., 1970, A New Hashing Method with Application for Game Playing
   ZOBRIST AL, 1990, ICCA J, V13, P69, DOI 10.3233/ICG-1990-13203
NR 49
TC 1
Z9 1
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2017
VL 47
IS 10
BP 1299
EP 1323
DI 10.1002/spe.2461
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG0OJ
UT WOS:000409457000001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Kune, R
   Konugurthi, PK
   Agarwal, A
   Chillarige, RR
   Buyya, R
AF Kune, Raghavendra
   Konugurthi, Pramod Kumar
   Agarwal, Arun
   Chillarige, Raghavendra Rao
   Buyya, Rajkumar
TI XHAMI - extended HDFS and MapReduce interface for Big Data image
   processing applications in cloud computing environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; Big Data; Hadoop; MapReduce; extended MapReduce; XHAMI;
   image processing; scientific computing; remote sensing
AB Hadoop distributed file system (HDFS) and MapReduce model have become popular technologies for large-scale data organization and analysis. Existing model of data organization and processing in Hadoop using HDFS and MapReduce are ideally tailored for search and data parallel applications, for which there is no need of data dependency with its neighboring/adjacent data. However, many scientific applications such as image mining, data mining, knowledge data mining, and satellite image processing are dependent on adjacent data for processing and analysis. In this paper, we identify the requirements of the overlapped data organization and propose a two-phase extension to HDFS and MapReduce programming model, called XHAMI, to address them. The extended interfaces are presented as APIs and implemented in the context of image processing application domain. We demonstrated effectiveness of XHAMI through case studies of image processing functions along with the results. Although XHAMI has little overhead in data storage and input/output operations, it greatly enhances the system performance and simplifies the application development process. Our proposed system, XHAMI, works without any changes for the existing MapReduce models and can be utilized by many applications where there is a requirement of overlapped data. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Kune, Raghavendra; Konugurthi, Pramod Kumar] Adv Data Proc Res Inst, Dept Space, Hyderabad 500009, Andhra Pradesh, India.
   [Agarwal, Arun; Chillarige, Raghavendra Rao] Univ Hyderabad, Sch Comp & Informat Sci, Hyderabad, Andhra Pradesh, India.
   [Buyya, Rajkumar] Univ Melbourne, Dept Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic, Australia.
C3 University of Hyderabad; University of Melbourne
RP Kune, R (corresponding author), Adv Data Proc Res Inst, Dept Space, Hyderabad 500009, Andhra Pradesh, India.
EM raghav.es@gmail.com
RI Raghavendra, Kune/AAQ-3640-2021; Buyya, Rajkumar/C-3424-2009
OI Konugurthi, Pramod/0000-0002-0451-1030; Agarwal,
   Arun/0000-0003-4191-408X
CR Almeer M.H., 2012, Journal of Emerging Trends in Computing and Information Sciences, V3, P637
   [Anonymous], 2010, 19 ACM INT S HIGH PE
   [Anonymous], P 9 ACM S OP SYST PR
   Bakshi K., 2012, P 2012 IEEE AER C BI
   Cao XZ, 2012, COMM COM INF SC, V288, P127
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Demir I, 2014, INT J COMPUT COMMUN, V9, P664
   Ekanayake J, 2008, P IEEE 4 INT C E SCI
   Gonzalez RC, 2007, DIGITAL IMAGE PROCES
   Jiang W, 2010, P 10 IEEE ACM INT C
   Jin C, 2009, LECT NOTES COMPUT SC, V5704, P417
   Kelly Jeff, 2012, BIG DATA HADOOP BUSI
   Kennedy L, 2009, P 1 WORKSH WEB SCAL
   Kocalkulak H, 2011, P INT C HIGH PERF CO
   Kune R, 2015, P 4 INT C CLOUD COMP
   Kune R, 2014, P INT S BIG DAT COMP
   Kune R, 2016, SOFTWARE PRACT EXPER, V46, P79, DOI 10.1002/spe.2374
   Ma Y, 2015, FUTURE GENER COMP SY, V51, P47, DOI 10.1016/j.future.2014.10.029
   Michael K, 2013, COMPUTER, V46, P22, DOI 10.1109/MC.2013.196
   Potisepp K., 2013, THESIS
   Schvachko K, 2010, P 26 IEEE S MASS STO
   Shi L., 2011, P INT C COMP SCI NET
   Sweeney Chris, THESIS
   White Tom., 2009, The Small Files Problem
   Yang CT, 2011, P IEEE INT C CLOUD C
NR 25
TC 12
Z9 12
U1 0
U2 27
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2017
VL 47
IS 3
SI SI
BP 455
EP 472
DI 10.1002/spe.2425
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL9RK
UT WOS:000394957500009
OA Green Published
DA 2024-07-18
ER

PT J
AU Sarimbekov, A
   Stadler, L
   Bulej, L
   Sewe, A
   Podzimek, A
   Zheng, YD
   Binder, W
AF Sarimbekov, Aibek
   Stadler, Lukas
   Bulej, Lubomir
   Sewe, Andreas
   Podzimek, Andrej
   Zheng, Yudi
   Binder, Walter
TI Workload characterization of JVM languages
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE workload characterization; dynamic metrics; JVM languages; dynamic
   program analysis
AB Originally developed with a single language in mind, the JVM is now targeted by numerous programming languagesits automatic memory management, just-in-time compilation, and adaptive optimizationsmaking it an attractive execution platform. However, the garbage collector, the just-in-time compiler, and other optimizations and heuristics were designed primarily with the performance of Java programs in mind. Consequently, many of the languages targeting the JVM, and especially the dynamically typed languages, are suffering from performance problems that cannot be simply solved at the JVM side. In this article, we aim to contribute to the understanding of the character of the workloads imposed on the JVM by both dynamically typed and statically typed JVM languages. To this end, we introduce a new set of dynamic metrics for workload characterization, along with an easy-to-use toolchain to collect the metrics. We apply the toolchain to applications written in six JVM languages (Java, Scala, Clojure, Jython, JRuby, and JavaScript) and discuss the findings. Given the recently identified importance of inlining for the performance of Scala programs, we also analyze the inlining behavior of the HotSpot JVM when executing bytecode originating from different JVM languages. As a result, we identify several traits in the non-Java workloads that represent potential opportunities for optimization. Copyright (c) 2015John Wiley & Sons, Ltd.
C1 [Sarimbekov, Aibek; Bulej, Lubomir; Zheng, Yudi; Binder, Walter] USI, Lugano, Switzerland.
   [Stadler, Lukas] Johannes Kepler Univ Linz, Linz, Austria.
   [Sewe, Andreas] Tech Univ Darmstadt, Darmstadt, Germany.
   [Bulej, Lubomir; Podzimek, Andrej] Charles Univ Prague, Prague, Czech Republic.
C3 Johannes Kepler University Linz; Technical University of Darmstadt;
   Charles University Prague
RP Binder, W (corresponding author), Univ Svizzera Italiana, Fac Informat, CH-6900 Lugano, Switzerland.
EM walter.binder@usi.ch
RI Bulej, Lubomír/G-3045-2014
OI Bulej, Lubomír/0000-0002-4573-6084; Binder, Walter/0000-0002-2477-2182
FU Swiss National Science Foundation [CRSII2_136225]; European Commission
   [ACP2-GA-2013-605442]; Sino-Swiss Science and Technology Cooperation
   (SSSTC); Oracle (ERO project) [1332]; Swiss National Science Foundation
   (SNF) [CRSII2_136225] Funding Source: Swiss National Science Foundation
   (SNF)
FX The research presented here was conducted while Lubom'ir Bulej was with
   the Universita della Svizzera italiana in Lugano, Switzerland. It was
   supported by the Swiss National Science Foundation (project
   CRSII2_136225), by the European Commission (contract
   ACP2-GA-2013-605442), by the Sino-Swiss Science and Technology
   Cooperation (SSSTC), and by the Oracle (ERO project 1332).
CR Andreas S, 2013, THESIS
   [Anonymous], 2012, P 3 ANN C SYST PROGR, DOI DOI 10.1145/2384716.2384723
   Ausiello G, 2012, ACM SIGPLAN NOTICES, V47, P867, DOI 10.1145/2398857.2384679
   Bacon DF, 1998, ACM SIGPLAN NOTICES, V33, P258, DOI 10.1145/277652.277734
   Bacon DF, 2002, LECT NOTES COMPUT SC, V2374, P111
   Barany G, 2013, LNI, V215, P43
   Binder W, 2005, P 5 WORKSH SOFTW ENG, P46
   Blackburn SM, 2006, P 21 C ORJ OR PROGR, P169
   Bodden E, 2010, IEEE T SOFTWARE ENG, V36, P509, DOI 10.1109/TSE.2010.25
   Bogda J, 1999, ACM SIGPLAN NOTICES, V34, P35, DOI 10.1145/320385.320388
   Bolz Carl Friedrich, 2009, P 4 WORKSH IMPL COMP, P18, DOI [10.1145/1565824.1565827, DOI 10.1145/1565824.1565827]
   Brunthaler S, 2010, LECT NOTES COMPUT SC, V6183, P429, DOI 10.1007/978-3-642-14107-2_21
   Bull J. M., 1999, Proceedings of the ACM 1999 Java Grande Conference, P81, DOI 10.1145/304065.304103
   Castanheira JM, 2012, ATMOS CHEM PHYS, V12, P10195, DOI 10.5194/acp-12-10195-2012
   Chen K, 2007, P INT COMP SOFTW APP, P23
   Choi JD, 2003, ACM T PROGR LANG SYS, V25, P876, DOI 10.1145/945885.945892
   CLBG, COMP LANG BENCHM GAM
   Daly C., 2001, Proceedings of the 2001 joint ACM-ISCOPE conference on Java Grande, P106, DOI [DOI 10.1145/376656.376826, 10.1145/376656, DOI 10.1145/376656]
   Detlefs D, 1999, LECT NOTES COMPUT SC, V1628, P258
   Dufour B, 2003, ACM SIGPLAN NOTICES, V38, P149, DOI 10.1145/949343.949320
   Dufour B., 2008, A scalable technique for characterizing the usage of temporaries in framework-intensive Java applications, P59, DOI DOI 10.1145/1453101.1453111
   Gal A, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P465, DOI 10.1145/1542476.1542528
   Holzle U., 1991, P EUROPEAN C OBJECT, P21, DOI DOI 10.1007/BFB0057013
   Hundt R., 2010, TECHNICAL REPORT
   Jones R, 2006, IMPLEMENTATION COMPI, P182
   Lashari G, 2003, P 17 INT PAR DISTR P, P22
   Li W.H., 2013, P 2013 INT C PRINC P, P101, DOI DOI 10.1145/2500828.2500838
   Marek Lukas, 2012, AOSD, P239, DOI [10.1145/2162049.2162077, DOI 10.1145/2162049.2162077]
   Mark Bull J., 2001, P 2001 JOINT ACM ISC, P97, DOI DOI 10.1145/376656.376823
   Mostafa N, 2010, TECHNICAL REPORT
   Nethercote N, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P65
   Ousterhout JK, 1998, COMPUTER, V31, P23, DOI 10.1109/2.660187
   Pearce DJ, 2007, SOFTWARE PRACT EXPER, V37, P747, DOI 10.1002/spe.788
   Pearson K, 1901, PHILOS MAG, V2, P559, DOI 10.1080/14786440109462720
   Pechtchanski I, 2005, CONCURR COMP-PRACT E, V17, P639, DOI 10.1002/cpe.853
   Pizlo F., 2011, P 9 INT C PRINC PRAC, P171
   Ratanaworabhan P, 2010, P C WEB APPL DEV WEB, P27
   Ricci Nathan P., 2011, INT C PRINC PRACT PR, P139, DOI 10.1145/2093157.2093178
   Sarimbekov A., 2011, Proceedings of the 9th International Conference on Principles and Practice of Programming in Java, PPPJ'11, P11
   Sarimbekov A, 2013, P 11 ACM SIGPLAN SIG, P9
   Sarimbekov A, 2014, SCI COMPUT PROGRAM, V79, P146, DOI 10.1016/j.scico.2011.11.003
   Sarimbekov Aibek., 2013, Proceedings of the 7th ACM workshop on Virtual machines and intermediate languages, P11, DOI [10.1145/2542142.2542144, DOI 10.1145/2542142.2542144]
   Sewe A, 2012, ACM SIGPLAN NOTICES, V47, P97, DOI 10.1145/2426642.2259010
   Sewe A, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P657
   Shankar A, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P127
   Shiv K, 2009, LECT NOTES COMPUT SC, V5419, P17
   Siek J, 2011, 2011 JVM LANG SUMM
   Stadler Lukas, 2013, P 4 WORKSHOP SCALA, P1, DOI [10.1145/2489837.2489846, DOI 10.1145/2489837.2489846]
   *STAND PERF EV COR, 2008, SPECJVM2008 BENCHM
   Tim Lindholm ., 1999, The Java Virtual Machine Specification
   Whaley John., 2000, JAVA 00, P78
   Williams K, 2010, INT SYM CODE GENER, P278
   Xi Y, 2011, P ACM OBJ OR PROGR S, P307
   Yermolovich A, 2009, ACM SIGPLAN NOTICES, V44, P79, DOI 10.1145/1837513.1640147
   Zaleski M, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P83
NR 55
TC 0
Z9 1
U1 4
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2016
VL 46
IS 8
BP 1053
EP 1089
DI 10.1002/spe.2337
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR4ZQ
UT WOS:000379912900003
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Terblanche, C
   Wongthongtham, P
AF Terblanche, Chamonix
   Wongthongtham, Pornpit
TI Ontology-based employer demand management
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE employer demand analysis; employer demand ontology; employer demand;
   intelligence
AB Skills shortages globally pose a real and urgent need for proper investigation and workforce development planning into the future. Analysing workforce development and employer demand needs through electronic job market allows much deeper and wider research into skill shortages. Current methods do not provide the level of depth required to address such important economic implications. In this paper, we present a system aiming to gather and analyse current employer demand information from online job advertisements. It identifies current employer demand needs analysed from electronic job market. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Terblanche, Chamonix; Wongthongtham, Pornpit] Curtin Univ, Perth, WA 6845, Australia.
C3 Curtin University
RP Wongthongtham, P (corresponding author), Curtin Univ, Perth, WA 6845, Australia.
EM p.wongthongtham@curtin.edu.au
OI Wongthongtham, Pornpit/0000-0002-3413-6868
CR [Anonymous], 2009, EMPL FOR
   [Anonymous], WHAT IS AN ONTOLOGY
   Ashraf J, 2015, SOFTWARE PRACT EXPER, V45, P1051, DOI 10.1002/spe.2272
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Biesalski E, 2005, LECT NOTES ARTIF INT, V3782, P499
   Bizer C., 2005, P 7 INT TAGUNG WIRTS, P1367, DOI DOI 10.1007/3-7908-1624-8_72
   Chamber of Minerals and Energy WA, 2009, DEV GROWTH OUTL WAS
   Chang E., 2006, Trust and Reputation for Service-Oriented Environments
   Cunningham H., 2013, DEV LANGUAGE PROCESS
   Curtain R., 1988, AUSTR SKILLS SHORT L
   DEEWR, SKILL SHORT METH 200
   Department of Employment Education Training and Youth Affairs, 1998, SKILLS AUSTR TRENDS
   Dorn J, 2007, 4 INT C KNOWL MAN
   García-Sánchez F, 2006, EXPERT SYST APPL, V31, P248, DOI 10.1016/j.eswa.2005.09.023
   Gómez-Pérez A, 2007, LECT NOTES COMPUT SC, V4692, P534
   Green F, 1998, OXFORD B ECON STAT, V60, P165, DOI 10.1111/1468-0084.00093
   Gruber T., 1993, INT WORKSH FORM ONT
   Gualtieri A, 2005, I KNOW 05 GRAZ AUSTR
   Guarino N., 2009, HDB ONTOLOGIES, P1, DOI [DOI 10.1007/978-3-540-92673-30, 10.1007/978-3-540-92673-3_0, DOI 10.1007/978-3-540-92673-3_0]
   Hayton G., 1988, AUSTR SKILLS SHORT L
   Hepp M, 2007, IEEE INTERNET COMPUT, V11, P90, DOI 10.1109/MIC.2007.20
   Jobs DB Dimension, 2011, JOBSDB DIM INTR
   Kumaran V. Senthil, 2013, International Journal of Metadata, Semantics and Ontologies, V8, P56
   Lau Thorsten, 2002, MOD P, P123
   Lv H, 2006, COMP AID IND DES CON
   MacDonald K, 2009, W AUSTR         0917
   Maedche A, 2003, KLUWER INT SERIES EN, P665
   NECHES R, 1991, AI MAG, V12, P36
   O'Callaghan A., 2008, LATEST TRENDS RECRUI
   Probyn A., 2009, W AUSTR         0902
   Sowa J.F., 2009, Building, Sharing, and Merging Ontologies
   Stanimirovic A, 2013, SOFTWARE PRACT EXPER, V43, P129, DOI 10.1002/spe.2103
   Storey K, 2001, AUST GEOGR, V32, P133, DOI 10.1080/00049180120066616
   Studer R, 1998, DATA KNOWL ENG, V25, P161, DOI 10.1016/S0169-023X(97)00056-6
   Terziev Ivan, 2005, BASE UPPER LEVEL ONT
   Trichet F, 2003, LECT NOTES ARTIF INT, V2871, P633
   Wibisono A, 2013, SOFTWARE PRACT EXPER, V43, P1319, DOI 10.1002/spe.2141
   WILCOCK Graham, 2009, Introduction to Linguistic Annotation and Text Analytics
   WONGTHONGTHAM P, 2006, METHODOLOGY MULTISIT
   Zemmouchi-Ghomari L., 2012, HERO HIGHER ED REFER
NR 40
TC 5
Z9 5
U1 1
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2016
VL 46
IS 4
BP 469
EP 492
DI 10.1002/spe.2319
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DG8HR
UT WOS:000372324600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Berbecaru, D
   Lioy, A
AF Berbecaru, Diana
   Lioy, Antonio
TI Exploiting the European Union trusted service status list for
   certificate validation in STORK: design, implementation, and lessons
   learnt
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE security; trusted lists; public key certificate validation; online
   certificate status protocol
AB Since December 2009, the European Union Trusted Service Status Lists (TSLs) have been specified and adopted across European Union countries in order to enable the verification of digital signatures with legal values. This paper deals with the exploitation of TSLs in real digital services, other than electronic signatures, that is for certificate validation service. In particular, we used such lists in the service provided by the pan-European Secure identTities acRoss boRders linKed identity management infrastructure in order to validate X.509 public key certificates. In addition, we propose an XML data structure to be used in conjunction with a TSL, in the form of a Trust Service Association (TrSA) file, to hold trust relationships between different services in a TSL. The TrSA file in conjunction with the TSLs may be used directly by the service providers or users to validate certificates. For the generation of the TSLs, we propose also a tool for automatic generation of the TSLs, named TSLGenerator. Copyright (C) 2014 John Wiley & Sons, Ltd.
C1 [Berbecaru, Diana; Lioy, Antonio] Politecn Torino, Dipartimento Automat & Informat, I-10129 Turin, Italy.
C3 Polytechnic University of Turin
RP Berbecaru, D (corresponding author), Politecn Torino, Dipartimento Automat & Informat, Corso Duca Abruzzi 24, I-10129 Turin, Italy.
EM diana.berbecaru@polito.it
RI Berbecaru, Diana/AAO-6554-2020; Lioy, Antonio/AAA-5168-2019
OI Berbecaru, Diana/0000-0003-1930-9473; Lioy, Antonio/0000-0002-5669-9338
FU  [INFSO-ICT-PSP-297263]
FX This work was developed in the framework of the EU cofunded project
   STORK 2.0 (INFSO-ICT-PSP-297263). We also thank Matteo Maria Casalino
   for his help in the implementation of the TSLGenerator tool.
CR [Anonymous], 2009, SEALED SPRL TECHN SP
   [Anonymous], 1999, RFC 2560
   [Anonymous], 2008, Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile
   [Anonymous], 2000, OFFICIAL J EUROPEAN
   [Anonymous], 102231 ETSI TS
   Berbecaru Diana, 2011, Trust, Privacy and Security in Digital Business. Proceedings 8th International Conference (TrustBus 2011), P13, DOI 10.1007/978-3-642-22890-2_2
   Berbecaru D, 2011, P AICA 2011 SNART TE
   Berbecaru D, D5 8 3C SOFTWARE DES
   Berbecaru D, 2001, LECT NOTES COMPUTER, V2200, P183
   Berbecaru D, 2009, SOFTWARE PRACT EXPER, V39, P891, DOI 10.1002/spe.918
   Cantor S, 2005, PROFILES OASIS SECUI
   European Commission, 2009, OFFICIAL J EUROPEA L, V274
   European Telecommunications Standards Institute (ETSI), CERT AUTH OTH TRUST
   Housley R, 2010, 5914 IETF RFC
   Knall T, 2011, LECT NOTES COMPUTER, V6866, P94
   Krontiris I, 2011, HDB EID SECURITY CON, P167
   Leitold H., 2011, P 2010 SEC EL BUS PR, P131
   Leitold H, 2012, DIGITAL ENLIGHTENMEN, P289
   Majava J, 2007, COMM SPEC EID INTERO
   Reid P, ETSI SUPPORTS EC REG
   Schneier B, COMODO GROUP ISSUES
   Tauber Arne, 2010, Proceedings 2010 IEEE 12th International Conference on Commerce and Enterprise Computing (CEC 2010), P9, DOI 10.1109/CEC.2010.12
   Tauber A, 2010, LECT NOTES COMPUT SC, V6267, P120, DOI 10.1007/978-3-642-15172-9_12
   Zwattendorfer B, 2013, J INF ASSUR SECUR, V8, P107
NR 24
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2015
VL 45
IS 11
BP 1457
EP 1477
DI 10.1002/spe.2292
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LI
UT WOS:000363500900001
DA 2024-07-18
ER

PT J
AU Dhillon, S
   Mahmoud, QH
AF Dhillon, Sunny
   Mahmoud, Qusay H.
TI An evaluation framework for cross-platform mobile application
   development tools
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile applications; mobile app development; cross-platform mobile apps;
   cross-platform development tools
ID PERFORMANCE
AB The mobile application market is becoming increasingly fragmented with the availability of multiple mobile platforms that differ in development procedures. Developers are forced to choose to support only some platforms and specific devices because of limited development resources. To address these challenges, numerous tools have been created to aid developers in building cross-platform applications; however, there is no metric to evaluate the quality of these tools or the applications produced by them. This paper introduces a framework for evaluating the features, performance, and development experience of existing and future cross-platform development tools. The framework is implemented by benchmarking several tools, and the results identify a disparity in the features and performance of applications built using different development tools. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Dhillon, Sunny] Univ Guelph, Sch Comp Sci, Guelph, ON N1G 2W1, Canada.
   [Mahmoud, Qusay H.] Univ Ontario Inst Technol, Dept Elect Comp & Software Engn, Oshawa, ON, Canada.
C3 University of Guelph; Ontario Tech University
RP Mahmoud, QH (corresponding author), Univ Ontario Inst Technol, Dept Elect Comp & Software Engn, Oshawa, ON, Canada.
EM qusay.mahmoud@uoit.ca
RI Mahmoud, Qusay H/B-7010-2008
OI H. Mahmoud, Qusay/0000-0003-0472-5757
FU BlackBerry; NSERC Engage grant; industry partner Desire2Learn
   Incorporated
FX Development contributions for some applications described in this
   research were provided by the Centre for Mobile Education and Research
   (CMER) Undergraduate Research Assistants, Sacha Bagasan, Justin
   Carvalho, and Domenico Commisso. CMER is partially funded by BlackBerry,
   and additional funding was provided through an NSERC Engage grant with
   industry partner Desire2Learn Incorporated. Rocky Jain, Rose Kocher,
   David Kruis, and Bill Lee from Desire2Learn have contributed ideas and
   provided real-world questions answered by this research.
CR Agarwals V, 2009, MIDDL 09 P 10 ACM IF, p[1, 10, 24]
   [Anonymous], 2011, MOBS7 11 7 ANN WORKS
   Che SA, 2009, I S WORKL CHAR PROC, P44, DOI 10.1109/IISWC.2009.5306797
   Corneliuss B, 2001, UNDERSTANDING JAVA
   Cowell-Shahs C, 2004, 9 LANGUAGE PERFORMAN
   Hartmanns G, 2011, CROSS PLATFORM MOBIL
   [IDC Appcelerator Inc], 2012, Q3 2012 MOB DEV REP
   [IDC Appcelerator Inc.], 2011, Q1 2011 MOB DEV REP
   Krishnaswamy U, 2000, IEEE T COMPUT, V49, P1325, DOI 10.1109/12.895853
   Mark Bull J., 2001, P 2001 JOINT ACM ISC, P97, DOI DOI 10.1145/376656.376823
   McMahans P, 2000, LINPACK BENCHMARK JA
   Nikishkov GP, 2003, COMPUT STRUCT, V81, P2401, DOI 10.1016/S0045-7949(03)00301-8
   Ohrt J, 2012, COMPUTER, V45, P72, DOI 10.1109/MC.2012.121
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Rajapakse Damith C., 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P923
   Vaananen-Vainio-Mattila K., 2009, P 13 INT MINDTREK C, DOI [10.1145/1621841.1621871, DOI 10.1145/1621841.1621871]
   Vision Mobile, 2012, CROSS PLATF DEV TOOL
   WebKit Open Source Project, 2010, SUNSPIDER JAVASCRIPT
   Winokurs D, 2011, FLASH FOCUS PC BROWS
NR 19
TC 19
Z9 20
U1 4
U2 37
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2015
VL 45
IS 10
BP 1331
EP 1357
DI 10.1002/spe.2286
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7VW
UT WOS:000360814800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dvinsky, A
   Friedman, R
AF Dvinsky, Alex
   Friedman, Roy
TI Chameleon - a group communication framework for smartphones
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ad hoc networks; group communication; mobile computing
ID PROTOCOL
AB This paper reports about our experience in designing and developing Chameleon, a highly portable and adaptable group communication framework for smartphones. Chameleon owes its level of portability to several design choices, including the following: (i) a layered architecture, where the headers of each layer have a standard XML-based format, enabling automatic, error-resistant generation of efficient serialization code in any platform; (ii) reliance only on the J2ME library, which serves as least common denominator for Java dialects and facilitates automatic translation to.NET; (iii) having flexible membership models; and (iv) supporting multiple concurrent protocol stacks.Through a single codebase, Chameleon is currently available as an open-source project for J2ME, J2SE, Android,.NET CF, and.NET. Chameleon is easily extendable and is bundled with tools, configurations, and third-party code tuned in a way that lifts some of the burden normally associated with multiplatform development for smartphones. Both the header generation from XML and automatic translation to.NET features of Chameleon are readily available to any application that is based on it. Chameleon's threading model separates between execution of internal layers and application's code and by that protects one from the other. As we describe in the paper, it simplifies layers' development and allows the protocol stack to easily block application calls when this is required by internal algorithms. Additionally, this model simplifies testing, and an extensive testing framework is supplied along with Chameleon, which is also usable for testing of application-specific layers. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Dvinsky, Alex] Technion, Dept Elect Engn, IL-32000 Haifa, Israel.
   [Friedman, Roy] Technion, Dept Comp Sci, IL-32000 Haifa, Israel.
C3 Technion Israel Institute of Technology; Technion Israel Institute of
   Technology
RP Friedman, R (corresponding author), Technion, Dept Comp Sci, IL-32000 Haifa, Israel.
EM roy@cs.technion.ac.il
FU Israeli Science Foundation [1247/09]
FX This work was partially supported by the Israeli Science Foundation
   grant number 1247/09. We would like to thank the anonymous reviewers for
   their helpful comments and insights, which greatly improved the
   presentation of this paper.
CR AMIR Y, 1998, CNDS984 TR J HOPK U
   Amir Y., 1992, Twenty-Second International Symposium on, P76
   [Anonymous], 2014, Mobile technology fact sheet
   BABAOGLU O, 1994, UBLCS9415
   Birman KP, 1999, SOFTWARE PRACT EXPER, V29, P1285, DOI 10.1002/(SICI)1097-024X(19991210)29:14<1285::AID-SPE281>3.0.CO;2-W
   Birman KP, 1999, ACM T COMPUT SYST, V17, P41, DOI 10.1145/312203.312207
   Birman KP, 1986, SYSTEM FAULT TOLERAN
   Chockler GV, 2001, ACM COMPUT SURV, V33, P427, DOI 10.1145/503112.503113
   DRABKIN V, 2006, P 26 IEEE INT C DIST, P36
   Eugster PT, 2003, ACM T COMPUT SYST, V21, P341, DOI 10.1145/945506.945507
   Friedman R, 1996, 15TH SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P140, DOI 10.1109/RELDIS.1996.559711
   Friedman R, 2003, LECT NOTES COMPUT SC, V2584, P114
   Friedman R, 1997, SYM REL DIST SYST, P130, DOI 10.1109/RELDIS.1997.632808
   Friedman R, 2002, IEEE T PARALL DISTR, V13, P124
   Ganesh A. J., 2001, Networked Group Communication. Third International COST264 Workshop, NGC 2001. Proceedings (Lecture Notes in Computer Science Vol.2233), P44
   HAYDEN M, 1998, TR981662 CORN U DEP
   Jelasity M, 2005, LECT NOTES ARTIF INT, V3910, P1
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Lamport L, 1998, ACM T COMPUT SYST, V16, P133, DOI 10.1145/279227.279229
   Leitao J, 2007, I C DEPEND SYS NETWO, P419, DOI 10.1109/DSN.2007.56
   Lin MJ, 2000, LECT NOTES COMPUT SC, V1914, P253
   Luo J, 2004, IEEE T MOBILE COMPUT, V3, P164, DOI 10.1109/TMC.2004.12
   Melamed R, 2004, THIRD IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS, PROCEEDINGS, P5, DOI 10.1109/NCA.2004.1347755
   Miranda H, 2001, INT CON DISTR COMP S, P707, DOI 10.1109/ICDSC.2001.919005
   Mocito J, 2006, LECT NOTES COMPUT SC, V4128, P582
   Moser LE, 1996, COMMUN ACM, V39, P54, DOI 10.1145/227210.227226
   Prakash R, 1998, SYM REL DIST SYST, P235, DOI 10.1109/RELDIS.1998.740505
   Puder A, 2010, SECOND INTERNATIONAL CONFERENCE ON MOBILE, HYBRID, AND ON-LINE LEARNING (ELML 2010), P87, DOI 10.1109/eLmL.2010.13
   Ramasamy HV, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P229, DOI 10.1109/DSN.2002.1028904
   Reiter M, 1996, COMMUN ACM, V39, P70
   Rodeh Ohad., 2001, ACM T INFORM SYSTEM, V4, P289
   Rodrigues L, 1996, 15TH SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P130, DOI 10.1109/RELDIS.1996.559710
   Rodrigues L, 2009, RT32009 INESCID
   SCHNEIDER FB, 1986, 86800 TR CORN U DEP
   Urban P., 2002, P 15 INT C INF NETW, P503
   van Renesse R., 1995, Proceedings of the Fourteenth Annual ACM Symposium on Principles of Distributed Computing, P80, DOI 10.1145/224964.224974
   Voulgaris S., 2005, Journal of Network and Systems Management, V13, P197, DOI 10.1007/s10922-005-4441-x
NR 37
TC 1
Z9 1
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2015
VL 45
IS 10
BP 1429
EP 1455
DI 10.1002/spe.2277
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7VW
UT WOS:000360814800006
DA 2024-07-18
ER

PT J
AU Chen, Z
   Gu, Y
   Huang, ZQ
   Zheng, J
   Liu, C
   Liu, ZY
AF Chen, Zhe
   Gu, Yi
   Huang, Zhiqiu
   Zheng, Jun
   Liu, Chang
   Liu, Ziyi
TI Model checking aircraft controller software: a case study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE formal verification; model checking; aircraft software; case study;
   safety; temporal logic
ID FORMAL METHODS
AB This paper documents an application of model checking to formally verify an interrupt-driven Slats and Flaps Control Unit software programmed in C, one component of a certain type of Chinese aircraft. Our objective was to identify errors rather than to prove correctness. We focused on the correctness of the algorithms used in the buffer operations, which are very common and important in aircraft software. In the verification, a total of four flawed code fragments was identified, including a minor efficiency issue. According to the programming team, this is regarded as a very successful result, and this project is the first successful attempt to apply model checking to the practice of verifying onboard aircraft software in China. Thanks to its completeness and reality, this case study can also serve as a complete and valuable real-world example for teaching and learning model checking. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Chen, Zhe; Gu, Yi; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Jiangsu, Peoples R China.
   [Zheng, Jun; Liu, Chang; Liu, Ziyi] Aviat Ind Corp China, China Aeropolytechnol Estab, Beijing 100028, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Aviation Industry
   Corporation of China (AVIC)
RP Chen, Z (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, 29 Yudao St, Nanjing 210016, Jiangsu, Peoples R China.
EM zhechen@nuaa.edu.cn
RI Liu, ziyi/HHM-8313-2022
FU National Natural Science Foundation of China [61100034, 61272083];
   Scientific Research Foundation for the Returned Overseas Chinese
   Scholars of State Education Ministry; China Postdoctoral Science
   Foundation [20110491411, 2012T50498]; Fundamental Research Funds for the
   Central Universities [NZ2013306]; Jiangsu Planned Projects for
   Postdoctoral Research Funds [1101092C]
FX This work was supported by the National Natural Science Foundation of
   China (61100034 and 61272083), the Scientific Research Foundation for
   the Returned Overseas Chinese Scholars of State Education Ministry, the
   China Postdoctoral Science Foundation (20110491411 and 2012T50498), the
   Fundamental Research Funds for the Central Universities (NZ2013306), and
   the Jiangsu Planned Projects for Postdoctoral Research Funds (1101092C).
CR Alglave Jade, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P141, DOI 10.1007/978-3-642-39799-8_9
   [Anonymous], COMMUNICATION
   [Anonymous], 2009, P POW SYST C EXP PSC
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Ben-Ari M., 2008, Principles of the Spin Model Checker
   Bochot T, 2009, PROC INT CONF SOFTW, P18, DOI 10.1109/ICSE-COMPANION.2009.5070960
   Chan W, 1998, IEEE T SOFTWARE ENG, V24, P498, DOI 10.1109/32.708566
   Chen Z, 2010, LECT NOTES COMPUT SC, V6349, P162
   Chiappini A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P109, DOI 10.1145/1810295.1810312
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Clarke Edmund M., 2001, Model Checking
   Cordeiro L, 2012, IEEE T SOFTWARE ENG, V38, P957, DOI 10.1109/TSE.2011.59
   Courcoubetis C., 1992, Formal Methods in System Design, V1, P275, DOI 10.1007/BF00121128
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   Delange J, 2012, SOFTWARE PRACT EXPER, V42, P799, DOI 10.1002/spe.1151
   Drusinsky D, 2012, SOFTWARE PRACT EXPER, V42, P853, DOI 10.1002/spe.1152
   Esteve MA, 2012, PROC INT CONF SOFTW, P1022, DOI 10.1109/ICSE.2012.6227118
   Faber J, 2006, PROCEEDINGS OF FORMAL METHODS IN COMPUTER AIDED DESIGN, P76
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Gerth R., 1995, INT C PROTOCOL SPECI, P3
   Havelund K, 2001, IEEE T SOFTWARE ENG, V27, P749, DOI 10.1109/32.940728
   Holzmann G. J., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P385
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Holzmann GJ, 1998, FORM METHOD SYST DES, V13, P289, DOI 10.1023/A:1008696026254
   Huth Michael, 2004, Logic in Computer Science: Modelling and reasoning about systems
   Kreiker J., 2011, Dagstuhl Manifestos, V1, P21
   Myers Glenford J., 2011, The Art of Software Testing
   Pervez S, 2010, SOFTWARE PRACT EXPER, V40, P23, DOI 10.1002/spe.946
   Queille JP, 2008, LECT NOTES COMPUT SC, V5000, P216
   Staunstrup J, 2000, COMPUTER, V33, P68, DOI 10.1109/2.841786
   Tretmans J, 2001, FORM METHOD SYST DES, V19, P195, DOI 10.1023/A:1011236117591
   Wijbrans K, 2008, LECT NOTES COMPUT SC, V5014, P419
NR 37
TC 17
Z9 24
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2015
VL 45
IS 7
BP 989
EP 1017
DI 10.1002/spe.2242
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8EW
UT WOS:000355733900007
DA 2024-07-18
ER

PT J
AU Kim, DK
AF Kim, Dae-Kyoo
TI Design pattern based model transformation with tool support
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design pattern; model; RBML; transformation; UML
ID ACCESS-CONTROL
AB A design pattern helps to improve the quality of a software system by providing a proven solution for recurring design problems. However, the abstract and informal nature of prevailing pattern descriptions makes it hard to use design patterns and hinders the development of tool support. In this paper, we present an approach that systematically applies a design pattern to a problem model and transforms it to a solution model with traceability, which helps to understand how a design pattern addresses its intended design problem. In the approach, a design pattern is defined as a pair of solution and problem specifications and a transformation specification. A problem model is checked for pattern applicability, and if applicable, the pattern is applied to the model using the pattern's transformation specification, which results in a solution model conforming to the solution specification of the pattern. This approach establishes an explicit traceability of how pattern properties are incorporated into a model. We demonstrate the approach using the Visitor pattern applied to two case studies. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 Oakland Univ, Dept Comp Sci & Engn, Rochester, MI 48309 USA.
C3 Oakland University
RP Kim, DK (corresponding author), Oakland Univ, Dept Comp Sci & Engn, Rochester, MI 48309 USA.
EM kim2@oakland.edu
RI Kim, Daekyoo/HGE-1133-2022
OI Kim, Daekyoo/0000-0002-6123-2900
FU Korea Institute of Energy Technology Evaluation and Planning (KETEP)
   under the international collaborative RD program [20118530020020]
FX This work is supported in part by the Korea Institute of Energy
   Technology Evaluation and Planning (KETEP) under the international
   collaborative R&D program (20118530020020).
CR Akehurst D., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P243
   Andries M, 1999, SCI COMPUT PROGRAM, V34, P1, DOI 10.1016/S0167-6423(98)00023-9
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1995, Design patterns for object-oriented software development
   Banerjee J., 1987, SIGMOD Record, V16, P311, DOI 10.1145/38714.38748
   BERGSTEIN PL, 1991, SIGPLAN NOTICES, V26, P299, DOI 10.1145/118014.117977
   BEZIVIN J, 2003, P 2 OOPSLA WORKSH GE
   Cinneide MO, 2000, THESIS U DUBLIN
   Czarnecki K, 2003, P 2 OOPSLA03 WORKSH
   Dong J, 2007, IEEE T SOFTWARE ENG, V33, P433, DOI 10.1109/TSE.2007.1012
   Eden A, 1999, THESIS U TEL AVIV IS
   France R, IEEE SOFTWARE MODEL, V20, P52
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gerber A, 2002, LECT NOTES COMPUT SC, V2505, P90
   Kim D.-K., 2007, Design Pattern Formalization Techniques, P183
   Kim DK, 2008, SOFTWARE QUAL J, V16, P329, DOI 10.1007/s11219-008-9048-5
   Kim DK, 2008, LECT NOTES COMPUT SC, V5030, P306
   Kim DK, 2010, LECT NOTES COMPUT SC, V6013, P188
   Kim DK, 2008, IEEE HI ASS SYS ENGR, P293, DOI 10.1109/HASE.2008.10
   Kim DK, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P452, DOI 10.1109/CMPSAC.2003.1245379
   Kircher M, 1999, DOVE DISTRIBUTED OBJ
   Kuster J., 2004, P WORKSH BEST PRACT
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Lano K, 1996, P 1 BCS FACS NO FORM, P11
   Lauder A., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P114, DOI 10.1007/BFb0054089
   Le Guennec A, 2000, LECT NOTES COMPUT SC, V1939, P482
   Massoni T., 2005, 19 BRAZILIAN S SOFTW, P152
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   Milicev D, 2002, IEEE T SOFTWARE ENG, V28, P413, DOI 10.1109/TSE.2002.995438
   Object Management Group, 2005, PTC20051101 OMG
   Object Management Group, 1998, 981209 OBJ MAN GROUP
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Porres I, 2003, LECT NOTES COMPUT SC, V2863, P159
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Radermacher A., 1999, P APPL GRAPH TRANSF, P111
   SANDHU RS, 1994, IEEE COMMUN MAG, V32, P40, DOI 10.1109/35.312842
   Schmidt D., TECHNICAL REPORT
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Schulz B, 1998, TOOLS 27: TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES, PROCEEDINGS, P258, DOI 10.1109/TOOLS.1998.713608
   Tokuda L, 1995, 3 INT S APPL CORP CO
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Whittle J., 2002, P 5 INT C UN MOD LAN, P227
   Zdun U, 2005, ACM SIGPLAN NOTICES, V40, P133, DOI 10.1145/1103845.1094822
   Zhao C, 2007, J VISUAL LANG COMPUT, V18, P378, DOI 10.1016/j.jvlc.2007.07.004
NR 45
TC 9
Z9 10
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2015
VL 45
IS 4
BP 473
EP 499
DI 10.1002/spe.2238
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD0HU
UT WOS:000350752200003
DA 2024-07-18
ER

PT J
AU Bruns, R
   Dunkel, J
AF Bruns, Ralf
   Dunkel, Juergen
TI Towards pattern-based architectures for event processing systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE event-driven architecture; complex event processing; design pattern;
   software architecture; reference architecture
ID MODEL
AB Recently, event processing (EP) has gained considerable attention as an individual discipline in computer science. From a software engineering perspective, EP systems still lack the maturity of well-established software architectures. For the development of industrial EP systems, generally accepted software architectures based on proven design patterns and principles are still missing. In this article, we introduce a catalog of design patterns that supports the development of event-driven architectures (EDAs) and complex EP systems. The design principles originate from experiences reported in publications as well as from our own experiences in building EP systems with industrial and academic partners. We present several patterns on different layers of abstractions that define the overall structure as well as the building blocks for EP systems. Architectural patterns that determine the top-level structure of an EDA can be distinguished from design patterns that specify the basic mechanisms of EP. The practical application of the catalog of patterns is described by the pattern-based design of a sample EDA for a sensor-based energy control system. Finally, we propose a coherent and general reference architecture for EP derived from the proposed patterns. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Bruns, Ralf; Dunkel, Juergen] Hannover Univ Appl Sci & Arts, Dept Comp Sci, D-30459 Hannover, Germany.
C3 Hochschule Hannover-University of Applied Sciences & Arts
RP Bruns, R (corresponding author), Hannover Univ Appl Sci & Arts, Dept Comp Sci, Ricklinger Stadtweg 120, D-30459 Hannover, Germany.
EM ralf.bruns@hs-hannover.de
OI Bruns, Ralf/0000-0001-5842-4218
FU European Community [2-221-2007-0042]; German Ministry of Economics and
   Technology [ZIM KF2425001ED9]
FX This work has been partially supported by the European Community through
   project grant EFRE Nr. 2-221-2007-0042 and the German Ministry of
   Economics and Technology through grant ZIM KF2425001ED9.
CR [Anonymous], 2006, P 22 INT C DATA ENG
   [Anonymous], 2010, Business Process Model and Notation (BPMN). Version 2.0
   [Anonymous], 2007, WEB SERV BUS PROC EX
   [Anonymous], 2002, the Power of Events
   Babcock B., 2002, P 21 ACM SIGMOD SIGA, P1, DOI [DOI 10.1145/543613.543615, 10.1145/543613]
   Bruns R., 2010, Event-Driven Architecture
   Buschmann F., 1998, PATTERN ORIENTED SOF, V1
   Chandy K., 2010, Event Processing: Designing IT Systems for Agile Companies, V1st
   Coral8, 2006, CORAL8 COMPLEX EVENT
   Dunkel Jurgen, 2012, Proceedings of the 14th International Conference on Enterprise Information Systems (ICEIS 2012), P187
   Dunkel Jurgen, 2009, Proceedings of the 11th International Conference on Enterprise Information Systems. DISI, P70
   Dunkel J, 2011, EXPERT SYST APPL, V38, P6530, DOI 10.1016/j.eswa.2010.11.087
   Erl T., 2009, SOA DESIGN PATTERNS, VFirst
   Etizon O, 2010, EVENT PROCESSING ACT
   Fowler M., 2010, Domain-specific languages
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Fowler Martin, 2006, WRITING SOFTWARE PAT
   Gamma E., 1998, Design Patterns: Elements of Reusable Object-Oriented Software
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   IEEE-SA Standards Boards, 2000, 14712000 IEEESA STAN
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Luckham D., 2008, Event processing glossary - Version 1.1
   Michelson B.M., 2006, EVENT DRIVEN ARCHITE
   *OMG, 2003, UML 2 0 OBJ CONSTR L
   Paschke A., 2009, P AAAI SPRING S INT, P54
   Paschke A., 2012, Proceedings of the 6th ACM International Conference on Distributed Event-Based Systems - DEBS '12, P324
   Paschke A, 2009, P 3 INT C DISTR EV B
   Paschke A, 2010, EPTS EVENT PROCESSIN
   Renners L, 2012, P WORKSH AI PROBL AP, P33
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Schulte R, 2009, GARTNER REFERENCE AR
   SEI (Software Engineering Institute), 2011, SOFTW ARCH DEF
   Sharon G, 2008, IBM SYST J, V47, P321, DOI 10.1147/sj.472.0321
   The Hillside Group, 2011, DES PATT CAT
   Wu E., 2006, P ASS COMP MACH ACM, P407
NR 35
TC 4
Z9 4
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2014
VL 44
IS 11
BP 1395
EP 1416
DI 10.1002/spe.2204
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AT2AQ
UT WOS:000344733400005
DA 2024-07-18
ER

PT J
AU Richardson, T
   Burd, L
   Smith, S
AF Richardson, Thomas
   Burd, Liz
   Smith, Shamus
TI Guidelines for supporting real-time multi-touch applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE real-time systems; multi-touch; RTSJ; MSF; software development
AB Multi-touch driven user interfaces are becoming increasingly prevalent because of their intuitiveness and because of the reduction in the associated hardware costs. In recognition of this trend, multi-touch software frameworks (MSFs) have begun to emerge. These frameworks abstract the low level issues of multi-touch software development and deployment. MSFs therefore enable software developers who are unfamiliar with the complexities of multi-touch software development to implement and deploy multi-touch applications more easily. However, some multi-touch applications have real-time system requirements, and at present, no MSFs provide support for the development and deployment of such real-time multi-touch applications. The implication of this is that software developers are unable to take advantage of MSFs and, therefore, are forced to handle the complexities of multi-touch and real-time systems development and deployment for themselves in an ad hoc manner. The primary consequence of this is that the multi-touch and/or real-time aspects of the application may not function correctly. In this paper, guidelines are presented for applying real-time system concepts to support the development and deployment of real-time multi-touch applications using MSFs. This serves to increase the probability that the application will meet its timing requirements while also reducing the complexity of the development and deployment process associated with multi-touch applications. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Richardson, Thomas; Burd, Liz] Univ Durham, Sch Educ, Durham, England.
   [Smith, Shamus] Univ Durham, Sch Engn & Comp Sci, Durham, England.
C3 Durham University; Durham University
RP Richardson, T (corresponding author), Univ Durham, Sch Educ, Durham, England.
EM rich.tom@gmail.com
RI Smith, Shamus/HCI-0648-2022
OI Smith, Shamus/0000-0001-9135-1356
FU ESRC [ES/F042027/1] Funding Source: UKRI
CR Abeni L, 2002, P 8 IEEE REAL TIME E
   AlAgha I, 2010, ACM INT C INT TABL S
   [Anonymous], INT J COMPUTER SUPPO
   [Anonymous], P 18 ANN ACM S US IN
   [Anonymous], P 1 INT C TANG EMB I
   [Anonymous], INT J COMPUTER SUPPO
   Apple Inc. Apple iPhone, 2008, APPL IPH
   Ardito C., 2010, P INT C ADV VIS INT
   Ashley RK, 2010, P 28 ACM INT C DES C
   Bergmann A, 2011, BKL THATS ALL FOLKS
   Bollella G, 2000, COMPUTER, V33, P47, DOI 10.1109/2.846318
   Burns A., 2001, Real-time Systems and Programming Languages: Ada 95, Real-Time Java and Real-Time POSIX, V3rd
   Chang Yang, 2007, THESIS U YORK THESIS U YORK
   Crevoisier A, 2009, MULTIOUCH EVERYWHERE
   Cuypers T, 2008, P 22 BRIT HCI GROUP, V2
   Dianes JA, 2012, COMPUT STAND INTER, V34, P238, DOI 10.1016/j.csi.2011.10.002
   DIETZ P, 2001, P 14 ANN ACM S US IN
   Echtler F, 2012, P 6 INT C TANG EMB E
   Echtler F, 2008, P 5 NORD C HUM COMP
   Echtler F., 2009, TISCH TANGIBLE INTER
   ej-technologies, 2012, JPROFILER
   Essl G, 2008, 5 INT MOB MUS WORKSH
   Goetz B, 2006, JAVA CONCURRENCY PRA
   Guru3D, 2012, RIVATUNER
   Hart D, 2008, IBM SYST J, V47, P207, DOI 10.1147/sj.472.0207
   Hatch A, 2011, CONNECTING COMPUTER
   Higgins S., 2011, BRIT J ED TECHNOLOGY
   IBM, 2007, IBMWEBSPHERE REAL TI
   JCP, 2000, JSR 1 REAL TIME SPEC
   jME.org, 2012, JMONK
   Joseph M., 1986, COMPUTER J, V29
   Kaltenbrunner M., 2009, P ACM INT C INT TABL
   Kim T, 1999, ACM SIGPLAN NOTICES, V34, P55, DOI 10.1145/315253.314444
   Koskinen H, 2011, P 29 ANN EUR C COGN
   Lindgren M, 2000, 7 INT C REAL TIME CO
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   McNaughton J, 2011, THESIS DURHAM U
   Microsoft Corporation, 2012, MICRSOFTW SURF 2 0 S
   MT4j, 2010, WORKSH ACM SIGCHI S
   O'Mahony K, 2010, 2010 IEEE INT C VIRT
   Owen V, 2008, P 2008 10 IEEE INT S
   Puschner P, 2000, REAL-TIME SYST, V18, P115, DOI 10.1023/A:1008119029962
   Richardson T, 2010, 8 INT WORKSH JAV TE
   Richardson T, 2012, OSGI INTEGRATING OSG, P293
   Rick Jochen, 2008, 2008 IEEE International Workshop on Horizontal Interactive Human Computer Systems (TABLETOP), P73, DOI 10.1109/TABLETOP.2008.4660186
   Selker T, 2008, COMMUN ACM, V51, P14, DOI 10.1145/1409360.1409366
   Sha L, 2004, REAL-TIME SYST, V28, P101, DOI 10.1023/B:TIME.0000045315.61234.1e
   Shen C, 2009, COLLABORATIVE TABLET, P1
   Stankovic J.A., 1988, Hard real-time systems
   STANKOVIC JA, 1988, COMPUTER, V21, P10, DOI 10.1109/2.7053
   Taylor S, 2009, P 27 INT C HUM FACT
   Yinsheng Z, 2011, P 2011 ANN C HUM FAC
   [No title captured]
NR 53
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2014
VL 44
IS 8
BP 931
EP 949
DI 10.1002/spe.2183
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AL9RW
UT WOS:000339479400004
DA 2024-07-18
ER

PT J
AU Jantz, MR
   Kulkarni, PA
AF Jantz, Michael R.
   Kulkarni, Prasad A.
TI Analyzing and addressing false interactions during compiler optimization
   phase ordering
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE exhaustive search; false phase interaction; phase ordering
ID COMPILATION
AB Compiler optimization phase ordering is a fundamental, pervasive, and long-standing problem for optimizing compilers. This problem is caused by interacting optimization phases producing different codes when applied in different orders. Producing the best phase ordering code is very important in performance-oriented and cost-constrained domains, such as embedded systems. In this work, we analyze the causes of the phase ordering problem in our compiler, Very Portable Optimizer (VPO), and report our observations. We devise new techniques to eliminate, what we call, false phase interactions in our compiler. We find that reducing such false phase interactions significantly prunes the phase order search space. We also develop and study algorithms to find the best average performance that can be delivered by a single phase sequence over our benchmark set and discuss the challenges in resolving this important problem. Our results show that there is no single sequence in VPO that can achieve the optimal phase ordering performance across all functions. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Jantz, Michael R.; Kulkarni, Prasad A.] Univ Kansas, Dept Elect Engn & Comp Sci, Lawrence, KS 66045 USA.
C3 University of Kansas
RP Jantz, MR (corresponding author), Univ Kansas, Dept Elect Engn & Comp Sci, Lawrence, KS 66045 USA.
EM mjantz@ittc.ku.edu
OI Jantz, Michael/0000-0003-4460-1206
CR Agakov F, 2006, INT SYM CODE GENER, P295
   Almagor L, 2004, ACM SIGPLAN NOTICES, V39, P231, DOI 10.1145/998300.997196
   Ambrosch W., 1994, Programming Languages and System Architectures. International Conference Proceedings, P125
   BENITEZ ME, 1988, SIGPLAN NOTICES, V23, P329, DOI 10.1145/960116.54023
   BODIN F, 1998, WORKSH PROF FEEDB DI
   Box G.E., 1978, STAT EXPT
   BRIGGS P, 1994, ACM T PROGR LANG SYS, V16, P428, DOI 10.1145/177492.177575
   BURGER DT, 1997, SIGARCH COMPUTER ARC
   Cavazos J, 2006, ACM SIGPLAN NOTICES, V41, P229, DOI 10.1145/1167515.1167492
   Chen Y, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P448, DOI 10.1145/1806596.1806647
   CLICK C, 1995, ACM T PROGR LANG SYS, V17, P181, DOI 10.1145/201059.201061
   Cooper KD, 1999, ACM SIGPLAN NOTICES, V34, P1, DOI 10.1145/315253.314414
   Cooper KD, 2005, ACM SIGPLAN NOTICES, V40, P69, DOI 10.1145/1070891.1065921
   DAVIDSON JW, 1991, MICROPROCESS MICROSY, V15, P459, DOI 10.1016/0141-9331(91)90002-W
   DAVIDSON JW, 1986, SIGPLAN NOTICES, V21, P234, DOI 10.1145/13310.13334
   FLEMING PJ, 1986, COMMUN ACM, V29, P218, DOI 10.1145/5666.5673
   Fursin G., 2008, GCC SUMMIT
   Fursin G, 2007, LECT NOTES COMPUT SC, V4050, P34, DOI 10.1007/978-3-540-71528-3_4
   George L, 1996, ACM T PROGR LANG SYS, V18, P300, DOI 10.1145/229542.229546
   GIBBONS PB, 1986, SIGPLAN NOTICES, V21, P11, DOI 10.1145/13310.13312
   GNU, 2011, INT GNU COMP
   Goodman J. R., 1988, Conference Proceedings. 1988 International Conference on Supercomputing, P442, DOI 10.1145/55364.55407
   Guthaus MR, 2001, WWC-4: IEEE INTERNATIONAL WORKSHOP ON WORKLOAD CHARACTERIZATION, P3, DOI 10.1109/WWC.2001.990739
   Haneda M, 2005, PACT 2005: 14TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P123
   HANEDA M, 2005, ICS 05, P161
   Haneda M., 2005, CF 05 P 2 C COMPUTIN, P180
   Haneda M., 2006, P 20 IEEE INT PAR DI, P385, DOI [10.1109/IPDPS.2006.1639724, DOI 10.1109/IPDPS.2006.1639724]
   HENNESSY J, 1983, ACM T PROGR LANG SYS, V5, P422, DOI 10.1145/2166.357217
   Hoste K, 2008, INT SYM CODE GENER, P165
   Jantz MR, 2010, PROCEEDINGS OF THE 2010 INTERNATIONAL CONFERENCE ON COMPILERS, ARCHITECTURES AND SYNTHESIS FOR EMBEDDED SYSTEMS (CASES '10), P187, DOI 10.1145/1878921.1878950
   Kisuki T., 1999, High Performance Computing. Second International Symposium, ISHPC'99. Proceedings, P121
   Kisuki T, 2000, 2000 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P237, DOI 10.1109/PACT.2000.888348
   Kulkarni P, 2004, ACM SIGPLAN NOTICES, V39, P171, DOI 10.1145/996893.996863
   Kulkarni P, 2003, ACM SIGPLAN NOTICES, V38, P12, DOI 10.1145/780731.780735
   Kulkarni PA, 2007, INT SYM CODE GENER, P157
   Kulkarni PA, 2006, INT SYM CODE GENER, P306
   Kulkarni PA, 2010, ACM SIGPLAN NOTICES, V45, P95, DOI 10.1145/1755951.1755903
   Kulkarni PA, 2009, ACM T ARCHIT CODE OP, V6, DOI 10.1145/1509864.1509865
   LEVERETT BW, 1980, COMPUTER, V13, P38, DOI 10.1109/MC.1980.1653748
   Pan ZL, 2006, INT SYM CODE GENER, P319
   PINTER SS, 1993, SIGPLAN NOTICES, V28, P248, DOI 10.1145/173262.155114
   Sanchez RN, 2011, INT SYM CODE GENER, P257, DOI 10.1109/CGO.2011.5764693
   Stephenson M, 2005, INT SYM CODE GENER, P123, DOI 10.1109/CGO.2005.29
   Stephenson M, 2003, ACM SIGPLAN NOTICES, V38, P77, DOI 10.1145/780822.781141
   Triantafyllis S, 2003, INT SYM CODE GENER, P204, DOI 10.1109/CGO.2003.1191546
   Vegdahl S. R., 1982, MICRO 15. Proceedings of the 15th Annual Workshop on Microprogramming, P125
   WHITFIELD D, 1990, SIGPLAN NOTICES, V25, P137, DOI 10.1145/99164.99179
NR 47
TC 2
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2014
VL 44
IS 6
BP 643
EP 679
DI 10.1002/spe.2176
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH0QS
UT WOS:000335825800001
DA 2024-07-18
ER

PT J
AU van der Meer, J
   Frasincar, F
AF van der Meer, Jeroen
   Frasincar, Flavius
TI Automatic review identification on the web using pattern recognition
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE automatic annotation; user submitted reviews; Google Rich Snippets; RDFa
ID DATA EXTRACTION
AB In this paper we propose the Automatic Review Recognition and annOtation of Webpages method, which is capable of identifying and annotating user submitted reviews on a Web page. The method consists of six steps: data preparation, page-level pattern identification, subjectivity analysis, container structure analysis, review properties identification, and review annotation. For the evaluation, we have implemented the method and tested it on various review websites. On the basis of the performed evaluation, we conclude that our method is capable of identifying and annotating the majority of reviews. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [van der Meer, Jeroen; Frasincar, Flavius] Erasmus Univ, NL-3000 DR Rotterdam, Netherlands.
C3 Erasmus University Rotterdam - Excl Erasmus MC; Erasmus University
   Rotterdam
RP van der Meer, J (corresponding author), Erasmus Univ, POB 1738, NL-3000 DR Rotterdam, Netherlands.
EM jeroenvdmeer@gmail.com
RI Frasincar, Flavius/AAC-8253-2021; Frasincar, Flavius/D-3171-2011
OI Frasincar, Flavius/0000-0002-8031-758X; 
CR Adelberg B., 1998, SIGMOD Record, V27, P283, DOI 10.1145/276305.276330
   [Anonymous], 2005, P HLTEMNLP 2005 INTE
   [Anonymous], 2011, SEARCHMONKEY YDN
   Arasu A., 2003, P 2003 ACM SIGMOD IN, P337, DOI DOI 10.1145/872757.872799
   Barbosa L., 2009, P NAACL, P494
   Boiy Erik, 2007, 11th International Conference on Electronic Publishing. Openness in Digital Publishing: Awareness, Discovery and Access, P349
   Buttler D, 2001, INT CON DISTR COMP S, P361, DOI 10.1109/ICDSC.2001.918966
   Califf ME, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P328
   Celik T., 2010, HREVIEW 0 3 MICROFOR
   Crescenzi V., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P109
   Crescenzi V, 1998, INFORM SYST, V23, P539, DOI 10.1016/S0306-4379(98)00028-3
   Hammer J., 1997, PROC E EUROPEAN WORK, P1
   Hickson I., 2011, HTML5: A vocabulary and associated APIs for HTML and XHTML
   Hsu CN, 1998, INFORM SYST, V23, P521, DOI 10.1016/S0306-4379(98)00027-1
   Laender AHF, 2002, DATA KNOWL ENG, V40, P121, DOI 10.1016/S0169-023X(01)00047-7
   Liu B., 2003, Proceedings of the Ninth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD '03, P601
   Musiea I., 1999, Proceedings of the Third International Conference on Autonomous Agents, P190, DOI 10.1145/301136.301191
   Pang B., 2004, ANN M ASS COMP LING, P271, DOI [10.3115/1218955.1218990, DOI 10.3115/1218955.1218990]
   Quick A, 2011, JTIDY
   Simon K., 2005, CIKM 05, P381, DOI 10.1145/1099554.1099672
   van der Meer Jeroen, 2011, P 2011 ACM S APPL CO, P765
   W3C, 2004, DOC OBJ MOD DOM LEV
   Wang J., 2003, P 12 INT C WORLD WID, P187
   Wiebe J, 2004, COMPUT LINGUIST, V30, P277, DOI 10.1162/0891201041850885
   Zhao H., 2005, WWW 05, P66
   Zhao H., 2006, VLDB 06, P989
NR 26
TC 0
Z9 0
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2013
VL 43
IS 12
SI SI
BP 1415
EP 1436
DI 10.1002/spe.2152
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 248JD
UT WOS:000326694500003
DA 2024-07-18
ER

PT J
AU Menzel, M
   Schönherr, M
   Tai, S
AF Menzel, Michael
   Schoenherr, Marten
   Tai, Stefan
TI (<i>MC</i><SUP>2</SUP>)<SUP>2</SUP>: criteria, requirements and a
   software prototype for Cloud infrastructure decisions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE decision; evaluation; Cloud computing; IT infrastructure; criteria
   requirements catalog; software prototype implementation
ID OUTSOURCING DECISION; COST
AB Cloud computing is a disruptive technology, representing a new model for information technology solution engineering and management that promises to introduce significant cost savings and other benefits. The adoption of Cloud computing requires a detailed comparison of infrastructure alternatives, taking a number of aspects into careful consideration. Existing methods of evaluation, however, limit decision-making to the relative costs of Cloud computing, but do not take a broader range of criteria into account. The Multi-Criteria Comparison Method for Cloud Computing ((MC2)2) offers a multi-criteria-based decision framework that can be applied to Cloud computing. The framework allows organizations to create evaluation methods that help to determine what infrastructure best suits their needs by evaluating and ranking infrastructure alternatives using multiple criteria derived from a comprehensive criteria catalog. Therefore, (MC2)2 offers a way to differentiate infrastructures not only by costs but also in terms of benefits, opportunities and risks. (MC2)2 can be adapted to facilitate a wide array of decision-making scenarios within the domain of information technology infrastructures, depending on the criteria selected to support the framework. The software prototype presented in this paper creates an interface to decision-makers that makes the framework more usable for Cloud infrastructure decisions in practice. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Menzel, Michael] FZI Forschungszentrum Informat, D-76131 Karlsruhe, Germany.
   [Schoenherr, Marten] Telekom Labs Berlin, D-10587 Berlin, Germany.
   [Tai, Stefan] KIT, D-76131 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Menzel, M (corresponding author), FZI Forschungszentrum Informat, Haid & Neu Str 10-14, D-76131 Karlsruhe, Germany.
EM menzel@fzi.de
CR [Anonymous], 1993, Decisions with Multiple Objectives
   [Anonymous], 2009, CLOUDS BERKELEY VIEW
   [Anonymous], 2011, CLOUDHARMONY LIST CL
   [Anonymous], 2001, WSRCIM200200002 US D
   Greenberg A, 2009, ACM SIGCOMM COMP COM, V39, P68, DOI 10.1145/1496091.1496103
   Klems M, 2008, LNBIP
   Kolovou V., 2009, THESIS U KARLSRUHE T
   Koomey Jonathan., 2007, SIMPLE MODEL DETERMI
   Lacity Mary., 1993, INFORM SYSTEMS OUTSO
   Manzi G., 2009, CLOUD COMPUTING EVOL
   Menzel M, 2011, AOTEAROA ONLINE TOOL
   Menzel M., 2011, AOTEAROA SOURCE DOCU
   Menzel M., 2010, P INT C CLOUD COMP V
   Mosebach K., 2009, THESIS KARLSRUHE I T
   Ngwenyama OK, 1999, EUR J OPER RES, V115, P351, DOI 10.1016/S0377-2217(97)00171-9
   Pardee F., 1969, MEASUREMENT EVALUATI
   PATEL CD, 2005, HPL2005107R1
   Saaty T. L., 2004, Journal of Systems Science and Systems Engineering, V13, P1, DOI 10.1007/s11518-006-0151-5
   Saaty T.L., 2005, THEORY APPL ANALYTIC
   Udo GG, 2000, IND MANAGE DATA SYST, V100, P421, DOI 10.1108/02635570010358348
   Walker E, 2009, COMPUTER, V42, P35, DOI 10.1109/MC.2009.135
   Wang JJ, 2007, COMPUT OPER RES, V34, P3691, DOI 10.1016/j.cor.2006.01.017
   Yoon P., 1995, MULTIPLE ATTRIBUTE D
NR 23
TC 34
Z9 36
U1 2
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2013
VL 43
IS 11
SI SI
BP 1283
EP 1297
DI 10.1002/spe.1110
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 233IF
UT WOS:000325561000003
DA 2024-07-18
ER

PT J
AU Kam, BW
   Dean, TR
AF Kam, Ben W. Y.
   Dean, Thomas R.
TI Linguistic security testing for text communication protocols
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE security testing; mutation testing; text-based communication protocol
AB We introduce a new Syntax-based Security Testing framework that uses a protocol specification to perform security testing on text-based communication protocols. A protocol specification of a particular text-based protocol under test represents its syntactic grammar and static constraints. The specification is used to generate test cases by mutating valid messages, breaking the syntax and constraints of the protocol. The framework is demonstrated using a toy web application and the open source application KOrganizer. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Kam, Ben W. Y.] Sheridan Coll, Oakville, ON, Canada.
   [Dean, Thomas R.] Queens Univ, Kingston, ON, Canada.
C3 Queens University - Canada
RP Dean, TR (corresponding author), Queens Univ, Kingston, ON, Canada.
EM tom.dean@queensu.ca
FU Natural Sciences and Engineering Research Council of Canada
FX This work is supported by the Natural Sciences and Engineering Research
   Council of Canada Discovery Grant Program.
CR AboElFotoh Muhammad., 2009, Proceedings of the 2009 conference of the Centre for Advanced Studies on Collaborative Research, November 2-5, 2009, Toronto, Ontario, Canada, P112
   Aitel D., 2011, ADVANTAGES BLOCK BAS
   [Anonymous], 2013, Extensible markup language
   [Anonymous], 2008, Fuzzing for Software Security
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2005, INPROCEEDINGS 20 IEE
   [Anonymous], 1998, 2328 RFC
   Borenstein N, 1996, IETF RFC, V2045
   Bravenboer M, SCI COMPUTER PROGRAM, V72, P52
   Chuanming Jing, 2008, 2008 22nd International Conference on Advanced Information Networking and Applications - Workshops, P667, DOI 10.1109/AINA.2008.98
   Cordy JR, SCI COMPUTER PROGRAM, V61, P190
   Dawson F, 1998, IETF RFC, P2445
   Dean ThomasR., 2003, J AUTOMATED SOFTWARE, V10, P311
   El-Far I.K., 2001, ENCY SOFTWARE ENG
   Farchi E, 2002, IBM SYST J, V41, P89, DOI 10.1147/sj.411.0089
   Fielding R., 1999, Hypertext transfer protocol-http/1.1. Tech. rep
   Gudgin M., 2007, SOAP VERSION 1 2 1
   Halfond W.G.J., 2005, P 3 INT ICSE WORKSH, P105
   Jürjens J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P408, DOI 10.1109/ASE.2001.989840
   Kaksonen Rauli, 2001, VTT PUBLICATIONS, V447
   Kam BWY, 2010, LECT NOTES COMPUT SC, V6303, P104, DOI 10.1007/978-3-642-15585-7_10
   Klint P, 2009, IEEE INT WORK C SO, P168, DOI 10.1109/SCAM.2009.28
   Merlo E, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P191
   TAL O, 2004, P 2 ANN C PRIV SEC T
   Turcotte Y, 2004, IEEE MILIT COMMUN C, P1572
   WASC Projects. Web Application Security Consortium, 2011, THREAT CLASS
   Wimmel G, 2002, LECT NOTES COMPUT SC, V2495, P471
   Xiao S, 2003, 2003 INTERNATIONAL CONFERENCE ON COMPUTER NETWORKS AND MOBILE COMPUTING, PROCEEDINGS, P311
   Xiao S, 2003, SECOND IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS, PROCEEDINGS, P223, DOI 10.1109/NCA.2003.1201160
   Zhang ST, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P223, DOI 10.1109/TAIC.PART.2007.31
NR 30
TC 0
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2013
VL 43
IS 9
SI SI
BP 1103
EP 1120
DI 10.1002/spe.2108
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 195OH
UT WOS:000322712200005
DA 2024-07-18
ER

PT J
AU Sant'Anna, C
   Garcia, A
   Batista, T
   Rashid, A
AF Sant'Anna, Claudio
   Garcia, Alessandro
   Batista, Thais
   Rashid, Awais
TI Mastering crosscutting architectural decisions with aspects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architectural decisions; modularity; aspect-oriented software
   development; early aspects
ID DESIGN STABILITY; MODEL
AB When reflecting upon driving system requirements such as security and availability, software architects often face decisions that have a broadly scoped impact on the software architecture. These decisions are the core of the architecting process because they typically have implications intertwined in a multitude of architectural elements and across multiple views. Without a modular representation and management of those crucial choices, architects cannot properly communicate, assess and reason about their crosscutting effects. The result is a number of architectural breakdowns, such as misinformed architectural evaluation, time-consuming trade-off analysis and unmanageable traceability. This paper presents an architectural documentation approach in which aspects are exploited as a natural way to capture widely-scoped design decisions in a modular fashion. The approach consists of a simple high-level notation to describe crosscutting decisions, and a supplementary language that allows architects to formally define how such architectural decisions affect the final architectural decomposition according to different views. On the basis of two case studies, we have systematically assessed to what extent our approach: (i) supports the description of heterogeneous forms of crosscutting architecture decisions, (ii) improves the support for architecture modularity analysis, and (iii) enhances upstream and downstream traceability of crosscutting architectural decisions. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Sant'Anna, Claudio] Univ Fed Bahia, Dept Comp Sci, BR-41170290 Salvador, BA, Brazil.
   [Garcia, Alessandro] Pontifical Catholic Univ Rio Janeiro, Dept Informat, Rio De Janeiro, Brazil.
   [Batista, Thais] Univ Fed Rio Grande do Norte, Dept Comp Sci, BR-59072970 Natal, RN, Brazil.
   [Rashid, Awais] Univ Lancaster, Dept Comp, InfoLab21, Lancaster LA1 4YW, England.
C3 Universidade Federal da Bahia; Pontificia Universidade Catolica do Rio
   de Janeiro; Universidade Federal do Rio Grande do Norte; Lancaster
   University
RP Sant'Anna, C (corresponding author), Univ Fed Bahia, Dept Comp Sci, BR-41170290 Salvador, BA, Brazil.
EM santanna@dcc.ufba.br
RI Ines, INCT/J-9550-2013; Batista, Thais/L-3935-2013
OI Batista, Thais/0000-0003-3558-1450; Rashid, Awais/0000-0002-0109-1341
FU European Commission: European Network of Excellence on AOSD
   (AOSD-Europe) [IST-2-004349]; CNPq: National Institute of Science and
   Technology for Software Engineering [573964/2008-4]; Universal Project
   [480374/2009-0, 483882/2009-7, 483699/2009-8, 485348/2011-0]; CAPES:
   PROCAD-NF [720/2010]; FAPERJ [E-26/102.211/2009]; DANSis project
   [E-26/111.152/2011]; CNPq [305526/2009-0, 307269/2010-8]; CAPES
   [5688-09]; PROCAD-NF [720/2010]; PUC-Rio (productivity grant); PDI
   [560266/2010-3]
FX This work was partially supported by European Commission Grant
   IST-2-004349: European Network of Excellence on AOSD (AOSD-Europe).
   Claudio is also supported by CNPq: National Institute of Science and
   Technology for Software Engineering (grant 573964/2008-4) and Universal
   Project (grant 480374/2009-0); and CAPES: PROCAD-NF (grant 720/2010).
   Alessandro is supported by FAPERJ: distinguished scientist (grant
   E-26/102.211/2009) and DANSis project (grant E-26/111.152/2011); CNPq:
   productivity scholarship (grant 305526/2009-0) and Universal Project
   (grants 483882/2009-7, 483699/2009-8, 485348/2011-0); CAPES:
   international collaboration scheme (grant 5688-09), PROCAD-NF (grant
   720/2010); and PUC-Rio (productivity grant). Thais is supported by CNPq:
   productivity scholarship (grant 307269/2010-8) and PDI (grant
   560266/2010-3).
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   Bachmann F., 2003, Deriving Architectural Tactics: A Step Toward Methodical Architectural Design
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bass L, 2004, WORKSH EARL ASP ASP, P50
   Batista T.s., 2006, P 2006 INT WORKSHOP, P3, DOI DOI 10.1145/1137639.1137642
   Cacho Nelio., 2006, AOSD 06 P 5 INT C AS, P109
   CHITCHYAN R, 2005, D11 AOSD
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Cuesta CE, 2005, LECT NOTES COMPUT SC, V3527, P247
   Davies N, 2001, COMPUTER, V34, P35, DOI 10.1109/2.940011
   Figueiredo E., 2007, P INT WORKSH ASP ARC
   Figueiredo E, 2009, INT C PROGRAM COMPRE, P138, DOI 10.1109/ICPC.2009.5090037
   Filho F, 2006, ADV TOPICS EXCEPTION, V4119, P255
   Filho Fernando Castor, 2007, 2007 IEEE International Conference on Software Maintenance, P134, DOI 10.1109/ICSM.2007.4362626
   Filman R., 2004, ASPECT ORIENTED SOFT
   Garcia A., 2005, AOSD 05, P3
   Greenwood P, 2007, LECT NOTES COMPUT SC, V4609, P176
   Kiczales G, 2005, PROC INT CONF SOFTW, P49
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Krechetov I., 2006, 8 WORKSH ASP OR MOD
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kulesza U, 2006, PROC IEEE INT CONF S, P223
   Kulesza U, 2006, LECT NOTES COMPUT SC, V4039, P231
   Lago P, 2005, PROC INT CONF SOFTW, P206
   Louridas P, 2000, ACM T SOFTW ENG METH, V9, P199, DOI 10.1145/350887.350895
   Magee J., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P137
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Molesini A, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P29, DOI 10.1109/WICSA.2008.26
   Moreira A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/RE.2005.46
   Pinto M, 2007, LECT NOTES COMPUT SC, V4765, P94
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Rashid A, 2006, LECT NOTES COMPUT SC, V4199, P155
   Rashid Awais., 2003, AOSD 03, P120
   Sampaio Americo, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P166
   Sant'Anna C., 2008, THESIS PUC RIO
   Sant'Anna C, 2006, QUANTITATIVE ASSESSM
   Sant'Anna C, 2007, LECT NOTES COMPUT SC, V4758, P207
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Silva LF, 2007, LECT NOTES COMPUT SC, V4765, P75
   Soares S, 2002, ACM SIGPLAN NOTICES, V37, P174, DOI 10.1145/583854.582437
   Tekinerdogan B, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P5, DOI 10.1109/WICSA.2004.1310685
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   Woods E, 2006, 5th Working IEEE/IFIP Conference on Software Architecture, Proceedings, P25
NR 44
TC 1
Z9 1
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2013
VL 43
IS 3
BP 305
EP 332
DI 10.1002/spe.2113
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 089RE
UT WOS:000314926900003
OA Green Published
DA 2024-07-18
ER

PT J
AU Forward, A
   Badreddin, O
   Lethbridge, TC
   Solano, J
AF Forward, Andrew
   Badreddin, Omar
   Lethbridge, Timothy C.
   Solano, Julian
TI Model-driven rapid prototyping with Umple
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE modeling; prototyping; UML; Umple; model-driven development
AB The emergence of model-driven software development brings new opportunities and challenges for rapid prototyping. On the one hand, the modeling process is inherently abstract, removing the prototyper from details, and letting him or her focus on exploring design alternatives for various aspects of the system. On the other hand, the most popular modeling languages and tools entirely omit the modeling and generating of user interfaces. As a result, the benefit of user interface prototypes as a medium for interaction with the user and customer is lost. This paper presents a model-oriented technology called Umple that can be used for prototyping and also supporting model driven engineering. Umple allows end users to quickly create class and state machine models and to incrementally embed implementation artifacts. At any point in the modeling process, users can quickly generate a fully functional prototype that exposes modeling implications on the user interface, and allows stakeholders to get a feel of how the full system will behave. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Forward, Andrew; Badreddin, Omar; Lethbridge, Timothy C.; Solano, Julian] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON K1N 6N5, Canada.
C3 University of Ottawa
RP Lethbridge, TC (corresponding author), Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON K1N 6N5, Canada.
EM tcl@site.uottawa.ca
RI Badreddin, Omar/A-8116-2015; Lethbridge, Timothy/I-3199-2014
OI Lethbridge, Timothy/0000-0001-9410-2056
CR ALAVI M, 1984, COMMUN ACM, V27, P556, DOI 10.1145/358080.358095
   Balzert H, 1996, J OBJECT-ORIENT PROG, V8, P43
   Chaves R., TextUML
   Chua CheeKai., 2003, RAPID PROTOTYPING PR
   Elkoutbi M., 2006, Automated Software Engineering, V13, P5, DOI 10.1007/s10515-006-5465-5
   Elkoutbi M, 2000, LECT NOTES COMPUT SC, V1825, P166
   Fadila A., 2006, Information Technology Journal, V5, P1146
   Farah H, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/WCRE.2007.49
   Fliedl G, 2005, DATA KNOWL ENG, V55, P20, DOI 10.1016/j.datak.2004.11.007
   Forward A., 2008, Proc. 2008 Int. Work. onModels Softw. Eng, P27, DOI DOI 10.1145/1370731.1370738
   Forward A., 2010, THESIS U OTTAWA
   Forward A, 2010, 21 IEEE INT S RAP SY
   Forward A, 2009, INT C PROGRAM COMPRE, P311, DOI 10.1109/ICPC.2009.5090073
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   Homrighausen A., 2002, Requirements Engineering, V7, P34, DOI 10.1007/s007660200003
   Hunt A., 2001, ART COMPUTER PROGRAM
   IBM, IBM RAT SOFTW ARCH M
   IBM, IBM RAT JAZZ TECHN P
   IBM, RAT STATEMATE
   JANSSEN C, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P418
   Jones M C., 2007, Handbook of Research on Open Source Software: Technological, Economic, and Social Perspectives, P126
   Kordon F, 2002, IEEE T SOFTWARE ENG, V28, P817, DOI 10.1109/TSE.2002.1033222
   Lethbridge T. C., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P220, DOI 10.1109/WCRE.2010.32
   Li XS, 2004, LECT NOTES COMPUT SC, V3347, P255
   Lim YK, 2008, ACM T COMPUT-HUM INT, V15, DOI 10.1145/1375761.1375762
   Medvidovic N, 1999, 2 INT WORKSH OBJ OR
   Memmel T., 2007, BCS HCI 07 P 21 BRIT, P167, DOI DOI 10.1177/004057368303900411
   Nandi P., 2010, DATA4BPM INTRO BUSIN
   Object Management Group (OMG), HUM US TEXT NOT
   POMBERGER G, 1991, STRUCT PROGRAM, V12, P43
   Seidewitz E., 1992, Ada Letters, V12, P76
   Solano J., 2010, THESIS U OTTAWA
NR 32
TC 17
Z9 19
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2012
VL 42
IS 7
SI SI
BP 781
EP 797
DI 10.1002/spe.1155
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 952UX
UT WOS:000304819600002
DA 2024-07-18
ER

PT J
AU Pardo, A
   Kloos, CD
AF Pardo, Abelardo
   Delgado Kloos, Carlos
TI SubCollaboration: large-scale group management in collaborative learning
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE version control systems; computer-supported collaborative systems;
   software management
AB Computer-supported collaborative learning is a paradigm that uses technology to support collaborative methods of instruction. When combining collaborative learning with the need to exchange documents between students and the teaching staff in a blended learning scenario, version control systems (VCSs) greatly simplify this collaboration. Furthermore, these tools need to be adopted in regular classes as they are used in industrial environments. But deploying a collaborative environment in which version control is used does not scale for large classes. This paper presents SubCollaboration, a platform that uses the VCS Subversion to manage a large number of work spaces in a collaborative learning environment. The tool maintains a reference workspace where teaching staff introduces new material that is then synchronized with the team repositories. Two case studies are presented showing that students easily learn the use of version control and its deployment in large classes is feasible. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Pardo, Abelardo; Delgado Kloos, Carlos] Univ Carlos III Madrid, Dept Telemat Engn, Madrid 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Pardo, A (corresponding author), Univ Carlos III Madrid, Dept Telemat Engn, Av Univ 30, Madrid 28911, Spain.
EM abelardo.pardo@uc3m.es
RI Kloos, Carlos Delgado/X-6670-2019; Pardo, Abelardo/C-3001-2011
OI Kloos, Carlos Delgado/0000-0003-4093-3705; Pardo,
   Abelardo/0000-0002-6857-0582
FU Plan Nacional de I+D+I [TIN2008-05163/TSI]; Best Practice Network ICOPER
   [ECP-2007-EDU-417007]; Plan Nacional de Investigacion Cientifica,
   Desarrollo e Innovacion Tecnologica [TSI-020301-2008-19]; Emadrid:
   Investigacion y desarrollo de tecnologias para el e-learning en la
   Comunidad de Madrid [S2009/TIC-1650]
FX This work was partially funded by the Learn3 project, 'Plan Nacional de
   I+D+I TIN2008-05163/TSI', the Best Practice Network ICOPER (Grant No.
   ECP-2007-EDU-417007), the Flexo Project 'Plan Nacional de Investigacion
   Cientifica, Desarrollo e Innovacion Tecnologica' (Ref.
   TSI-020301-2008-19), and the 'Emadrid: Investigacion y desarrollo de
   tecnologias para el e-learning en la Comunidad de Madrid' project
   (S2009/TIC-1650).
CR *ASS COMP MACH, 2004, COMP ENG 2004 CURR G
   *ASS COMP MACH, 2008, CUMP SCI CIRR 2008 I
   CABOT J, 2009, SURVEY WEB BASED SOF
   Collins-Sussman B., 2004, VERSION CONTROL SUBV
   Dillenbourg P., 1999, Collaborative-learning: Cognitive and computational approaches, P1
   *GIT, FAST VERS CONTR SYST
   GLASSY L, 2006, J COMPUTING SCI COLL, V21, P106
   HARTNESS K, 2006, J COMPUTING SCI COLL, V21, P222
   HELMICK M, 2007, INNOVATION TECHNOLOG, V39, P146, DOI DOI 10.1145/1269900.1268828
   KOSCHMANN T, 1996, PARADIGM SHIFTS INST, V116, P1
   Laadan O, 2010, SIGCSE 10: PROCEEDINGS OF THE 41ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P480
   LASS RN, 2003, ACM SIGCSE B, V35, P168, DOI DOI 10.1145/961290.961558
   Lee BG, 2001, J SYST SOFTWARE, V59, P119, DOI 10.1016/S0164-1212(01)00013-9
   LINDER S, 2006, J COMPUTING SCI COLL, V21, P250
   LIU Y, 2004, P INT WORKSH MIN SOF, P32
   MENEELY A, 2009, ACM SIGCSE B, V41, P529, DOI DOI 10.1145/1539024.1509047
   MIERLE K, 2005, P 2005 INT WORKSH MI, P5
   MIURA M, 2007, INT C KNOWL INF CREA, P152
   *NSSE, 2006, ENG LEARN FOST SUCC
   REID K, 2005, P 36 SIGCSE TECHN S, P272
   Spacco J., 2004, P 2004 OOPSLA WORKSH, P52
   Stahl G, 2006, CAMB HANDB PSYCHOL, P409
   CURRENT VERSION SYST
NR 23
TC 3
Z9 3
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2011
VL 41
IS 4
BP 449
EP 465
DI 10.1002/spe.1023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 731BH
UT WOS:000288080800006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Hauswirth, M
   Sweeney, PF
   Diwan, A
AF Hauswirth, Matthias
   Sweeney, Peter F.
   Diwan, Amer
TI Temporal vertical profiling
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance; whole-system profiling; perturbation; performance counters
AB Modern systems are enormously complex; many applications today comprise millions of lines of code, make extensive use of software frameworks, and run on complex, multi-tiered, run-time systems. Understanding the performance of these applications is challenging because it depends on the interactions between the many software and the hardware components. This paper describes and evaluates an interactive and iterative methodology, temporal vertical profiling, for understanding the performance of applications. There are two key insights behind temporal vertical profiling. First, we need to collect and reason across information from multiple layers of the system before we can understand an application's performance. Second, application performance changes over time and thus we must consider the time-varying behavior of the application instead of aggregate statistics. We have developed temporal vertical profiling from our own experience of analyzing performance anomalies and have found it very helpful for methodically exploring the space of hardware and software components. By representing an application's behavior as a set of metrics, where each metric is represented as a time series, temporal vertical profiling provides a way to reason about performance across system layers, regardless of their level of abstraction, and independent of their semantics. Temporal vertical profiling provides a methodology to explore a large space of metrics, hundreds of metrics even for small benchmarks, in a systematic way. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Hauswirth, Matthias] Univ Lugano, CH-6904 Lugano, Switzerland.
   [Sweeney, Peter F.] IBM Corp, TJ Watson Res Ctr, Hawthrone, NY USA.
   [Diwan, Amer] Univ Colorado, Boulder, CO 80309 USA.
C3 Universita della Svizzera Italiana; International Business Machines
   (IBM); University of Colorado System; University of Colorado Boulder
RP Hauswirth, M (corresponding author), Univ Lugano, Via Giuseppe Buffi 13, CH-6904 Lugano, Switzerland.
EM Matthias.Hauswirth@unisi.ch
FU Defense Advanced Research Project Agency [NBCH30390004]; NSF
   [CSE-0509521, CCR-0085792]
FX We thank Michael Hind for his earlier collaboration on this work. We
   thank Sam Guyer for the idea of using, and the implementation of, object
   inlining to improve the performance of Db. We also thank Martin Hirzel
   and Urs Hoelzle, for their feedback on the paper. This work was
   supported in parts by the Defense Advanced Research Project Agency under
   contract NBCH30390004, NSF grants CSE-0509521, CCR-0085792, and Career
   CCR-0133457, an IBM faculty partnership award, and a gift from Intel.
   Any opinions, findings and conclusions, or recommendations expressed in
   this material are the authors' and do not necessarily reflect those of
   the sponsors.
CR AHN DH, 2002, P 2002 ACM IEEE C SU, P1
   Alpern B, 2005, IBM SYST J, V44, P399, DOI 10.1147/sj.442.0399
   Alpern B, 1999, ACM SIGPLAN NOTICES, V34, P314, DOI 10.1145/320385.320418
   Arnold M, 2005, P IEEE, V93, P449, DOI 10.1109/JPROC.2004.840305
   ARNOLD M, 2000, OOPSLA, P47, DOI DOI 10.1145/353171.353175.ISBN:I-58113-200-X
   Berndt D.J., 1994, AAAI 94 WORKSH KNOWL, V10, P359, DOI [10.5555/3000850.3000887, DOI 10.5555/3000850.3000887]
   BLACKBURN S, 2004, 26 INT C SOFTW ENG E
   Cantrill BM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK 2004 USENIX ANNUAL TECHNICAL CONFERENCE, P15
   DEROSE L, 1999, P INT C PAR PROC FUK
   DUFOUR B, 2003, P 18 ANN ACM SIGPLAN, P149, DOI DOI 10.1145/949305.949320
   Eeckhout L, 2003, COMPUTER, V36, P65, DOI 10.1109/MC.2003.1178050
   Eeckhout L., 2003, J INSTRUCTION LEVEL, V5, P1
   EECKHOUT L, 2003, P 18 ANN ACM SIGPLAN, P169
   Fink SJ, 2003, INT SYM CODE GENER, P241, DOI 10.1109/CGO.2003.1191549
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Fortier P.J., 2003, Computer systems performance evaluation and prediction
   GUITART J, 2000, 2 WORKSH JAV HIGH PE
   Hauswirth M, 2005, ACM SIGPLAN NOTICES, V40, P281, DOI 10.1145/1103845.1094834
   HAUSWIRTH M, 2004, P 19 ANN ACM SIGPLAN, DOI DOI 10.1145/1035292.1028998
   *INT, 2009, INT COR MICR
   Kalla R, 2004, IEEE MICRO, V24, P40, DOI 10.1109/MM.2004.1289290
   Kimelman D., 1994, Proceedings. Visualization '94 (Cat. No.94CH35707), P172, DOI 10.1109/VISUAL.1994.346322
   LABARTA J, 1996, 2 INT EUR PAR C LYON
   LANUS J, 2006, T MEMORY
   Lee H, 2006, SOFTWARE PRACT EXPER, V36, P835, DOI [10.1002/spe.718, 10.1002/spc.718]
   Lilja D. J, 2000, MEASURING COMPUTER P
   MELLORCRUMMEY J, 2001, P LOS AL COMP SCI I
   MILLER BP, 1995, COMPUTER, V28, P37, DOI 10.1109/2.471178
   MOHR B, 1996, PARALLE PROGRAMMING
   NEWHALL T, 1999, P ACM 1999 JAV GRAND
   PAUW WD, 2001, WORKSH SOFTW VIS INT
   REED DA, 1993, P SCAL PAR LIBR C MI
   SEVITSKY G, 2001, INFORM EXPLORATION T
   Sprunt B, 2002, IEEE MICRO, V22, P64, DOI 10.1109/MM.2002.1028477
   Sprunt B, 2002, IEEE MICRO, V22, P72, DOI 10.1109/MM.2002.1028478
   *STAND PERF EV COR, SPECJBB2000
   *STAND PERF EV COR, 1998, SPECJVM98 BENCHM
   Sweeney Peter F., 2004, P 3 VIRT MACH RES TE
   Wu C.Eric., 2000, SC, P50
   XU Z, 1999, P 7 ACM SIGPLAN S PR, P49, DOI DOI 10.1145/301104.301109
   Zaki O, 1999, INT J HIGH PERFORM C, V13, P277, DOI 10.1177/109434209901300310
NR 41
TC 3
Z9 4
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2010
VL 40
IS 8
BP 627
EP 654
DI 10.1002/spe.972
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 627MS
UT WOS:000280044400003
DA 2024-07-18
ER

PT J
AU Barioni, MCN
   Razente, HL
   Tralna, AJM
   Traina, C
AF Barioni, M. C. N.
   Razente, H. L.
   Tralna, A. J. M.
   Traina, C., Jr.
TI Seamlessly integrating similarity queries in SQL
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE similarity queries; content-based retrieval; metric access methods; SQL
   extension
ID RETRIEVAL
AB Modern database applications are increasingly employing database management systems (DBMS) to store multimedia and other complex data. To adequately support the queries required to retrieve these kinds of data, the DBMS need to answer similarity queries. However, the standard structured query language (SQL) does not provide effective support for such queries. This paper proposes an extension to SQL that seamlessly integrates syntactical constructions to express similarity predicates to the existing SQL syntax and describes the implementation of a similarity retrieval engine that allows posing similarity queries using the language extension in a relational DBM. The engine allows the evaluation of every aspect of the proposed extension, including the data definition language and data manipulation language statements, and employs metric access methods to accelerate the queries. Copyright (c) 2008 John Wiley & Sons, Ltd.
C1 [Barioni, M. C. N.] Univ Fed Abc, Ctr Matemat Comp & Cognicao, BR-09210170 Santo Andre, SP, Brazil.
   [Razente, H. L.; Tralna, A. J. M.; Traina, C., Jr.] Univ Sao Paulo, Dept Ciencias Comp, BR-13560970 Sao Carlos, SP, Brazil.
C3 Universidade Federal do ABC (UFABC); Universidade de Sao Paulo
RP Barioni, MCN (corresponding author), Univ Fed Abc, Ctr Matemat Comp & Cognicao, Rua Santa Adelia 166 Bairro Bangu, BR-09210170 Santo Andre, SP, Brazil.
EM camila.barioni@ufabc.edu.br
RI Incod, Inct/J-8375-2013; Traina, Agma J. M./F-1299-2011; Razente,
   Humberto/KAM-5752-2024; Traina, Caetano Jr/E-9814-2011
OI Nardini Barioni, Maria Camila/0000-0002-5809-0243; Razente,
   Humberto/0000-0001-9687-5730
CR [Anonymous], 1995, P 1995 ACM SIGMOD IN, DOI DOI 10.1145/223784.223794
   Barioni M.C.N., 2006, 32 INT C VLDB, P1155
   BARIONI MCN, 2005, P 20 BRAZ S DAT SBBD, P130
   Boehm C, 2004, KNOWL INF SYST, V6, P728, DOI 10.1007/s10115-003-0122-9
   CAREY MJ, 1988, P 24 INT C VER LARG, P158
   Ciaccia P, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P426
   Ciaccia P, 2002, ACM T DATABASE SYST, V27, P398, DOI 10.1145/582410.582412
   Doulamis N, 2006, SIGNAL PROCESS-IMAGE, V21, P334, DOI 10.1016/j.image.2005.11.006
   FERREIRA MRP, 2007, P 15 ACM INT S ADV G, P396
   Gao L, 2004, LECT NOTES COMPUT SC, V3288, P464
   *GBDI ICMC USP, 2008, SIM RETR ENG SIREN
   *GBDI ICMC USP, 2008, GBDI ARB LIB
   Hjaltason GR, 2003, ACM T DATABASE SYST, V28, P517, DOI 10.1145/958942.958948
   JOAQUIM CF, 2003, P 16 IEEE S COMP BAS, P26
   Melton J, 2001, SIGMOD RECORD, V30, P97, DOI 10.1145/604264.604280
   NING H, 2003, P IEEE WORKSH APPL S, P185
   Papadias D, 2004, PROC INT CONF DATA, P301, DOI 10.1109/ICDE.2004.1320006
   Smeulders AWM, 2000, IEEE T PATTERN ANAL, V22, P1349, DOI 10.1109/34.895972
   SWAIN MJ, 1991, INT J COMPUT VISION, V7, P11, DOI 10.1007/BF00130487
   Traina C, 2002, IEEE T KNOWL DATA EN, V14, P244, DOI 10.1109/69.991715
   TRAINA C, 2006, P 15 ACM C INF KNOWL, P1
   Tzanetakis G., 2001, P INT S MUSIC INFORM, P205
   Ye B, 2002, J OPT A-PURE APPL OP, V4, P606, DOI 10.1088/1464-4258/4/6/304
NR 23
TC 13
Z9 13
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR 25
PY 2009
VL 39
IS 4
BP 355
EP 384
DI 10.1002/spe.898
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 421JC
UT WOS:000264354200002
DA 2024-07-18
ER

PT J
AU Jiang, Y
   Li, M
   Zhou, ZH
AF Jiang, Yuan
   Li, Ming
   Zhou, Zhi-Hua
TI Mining extremely small data sets with application to software reuse
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data mining; machine learning; software reuse; extremely small data set;
   twice learning; ensemble learning; random forest
ID FAILURE FACTORS; SUCCESS
AB A serious problem encountered by machine learning and data mining techniques in software engineering is the lack of sufficient data. For example, there are only, 24 examples in the current largest data set on software reuse. In this paper, a recently proposed machine learning algorithm is modified for mining extremely small data sets. This algorithm works in a twice-learning style. In detail, a random forest is trained from the original data set at first. Then, virtual examples are generated from the random forest and used to train a single decision tree. In contrast to the numerous discrepancies between the empirical data and expert opinions reported by previous research, our mining practice shows that the empirical data are actually consistent with expert opinions. Copyright (c) 2008 John Wiley & Sons, Ltd.
C1 [Jiang, Yuan; Li, Ming; Zhou, Zhi-Hua] Nanjing Univ, Natl Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
C3 Nanjing University
RP Zhou, ZH (corresponding author), Nanjing Univ, Natl Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
EM zhouzh@nju.edu.cn
RI jiang, anyi/GPT-0379-2022
CR [Anonymous], 2001, Statistical and Neural Classifiers: An Integrated Approach to Design
   [Anonymous], 2000, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cherkassky V, 1997, IEEE Trans Neural Netw, V8, P1564, DOI 10.1109/TNN.1997.641482
   CHULANI S, 2004, CALIBRATING SOFTWARE
   DIETTERICH T, 1996, P 13 INT C MACH LEAR, P96
   Domingos Pedro, 1997, ICML 97
   Ho TK, 2002, IEEE T PATTERN ANAL, V24, P289, DOI 10.1109/34.990132
   Jain AK., 1982, Handbook of Statistics, DOI [DOI 10.1016/S0169-7161, 10.1016/S0169-7161(82)02042-2, 10.1016/S0169-7161]
   Jiang Y, 2006, LECT NOTES COMPUT SC, V3916, P116
   Kononenko I., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1034
   Menzies T, 2003, IEEE T SOFTWARE ENG, V29, P474, DOI 10.1109/TSE.2003.1199076
   MENZIES T, 2004, VALIDATION METHODS C
   Mjolsness E, 2001, SCIENCE, V293, P2051, DOI 10.1126/science.293.5537.2051
   Morisio M, 2003, IEEE T SOFTWARE ENG, V29, P478, DOI 10.1109/TSE.2003.1199077
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   Newman D., 1998, UCI REPOSITORY MACHI
   POULIN JS, 1993, IBM SYST J, V32, P567, DOI 10.1147/sj.324.0567
   Rao NSV, 2001, IEEE T PATTERN ANAL, V23, P904, DOI 10.1109/34.946993
   RAUDYS SJ, 1991, IEEE T PATTERN ANAL, V13, P252, DOI 10.1109/34.75512
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Zhou Z.-H., 2008, Encyclopedia of Biometrics
   Zhou ZH, 2004, IEEE T KNOWL DATA EN, V16, P770, DOI 10.1109/TKDE.2004.11
   Zhou ZH, 2003, AI COMMUN, V16, P3
   Zhou ZH, 2003, IEEE T INF TECHNOL B, V7, P37, DOI 10.1109/TITB.2003.808498
NR 27
TC 9
Z9 14
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR 25
PY 2009
VL 39
IS 4
BP 423
EP 440
DI 10.1002/spe.905
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 421JC
UT WOS:000264354200004
OA Bronze
DA 2024-07-18
ER

PT J
AU Magalhaes, J
   von Staa, A
   de Lucena, CJP
AF Magalhaes, Joao
   von Staa, Arndt
   Pereira de Lucena, Carlos Jose
TI Evaluating the recovery-oriented approach through the systematic
   development of real complex applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software engineering; recovery-oriented systems; reliable software
ID FORMAL METHODS
AB Recovery-oriented software is built with the perspective that hardware or software failures and operation mistakes are facts to he coped with, as they are problems that cannot be fully solved while developing real complex applications. Consequently, any software will always have a non-zero chance or failure. Some of these failures may be caused by defects that may be removed or encapsulated. From the point of view of removing or encapsulating defects, a failure is considered to be trivial, when (i) the required effort to identify and eliminate or encapsulate the causing defect is small, (ii) the risk of making mistakes in these steps is also small and (iii) the consequences of the failure are tolerable. It is highly important to design systems in such a way that most (ideally all) of the failures are trivial. Such systems are called 'debuggable systems'. In this study, we present the results of systematic applying techniques that focus on creating debuggable software for real embedded applications. Copyright (c) 2008 John Wiley & Sons, Ltd.
C1 [Magalhaes, Joao; von Staa, Arndt; Pereira de Lucena, Carlos Jose] Pontifical Catholic Univ Rio de Janeiro, Dept Comp Sci, Rio De Janeiro, Brazil.
C3 Pontificia Universidade Catolica do Rio de Janeiro
RP Magalhaes, J (corresponding author), Pontifical Catholic Univ Rio de Janeiro, Dept Comp Sci, Rio De Janeiro, Brazil.
EM magalha@gmail.com
CR Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bentley Peter, 2005, Natural Computing, V4, P417, DOI 10.1007/s11047-005-3666-7
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   BROWN A, 2002, UCBCSD021175
   Cockburn A., 2001, EXTREME PROGRAMMING, P223, DOI DOI 10.1108/00012530210448235
   FOX A, 2004, P 1 ACM SIGSOFT WORK, P49
   FOX A, 2008, P 28 INT C VER LARG, P873
   Gotlieb A, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P34, DOI 10.1109/CMPSAC.2003.1245319
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   HUNT A, 2003, PRAGMATIC UNIT TEST, P65
   KEMMERER RA, 1990, IEEE SOFTWARE, V7, P37, DOI 10.1109/52.57891
   Mackinnon Tim., 2001, ENDO TESTING UNIT TE, P287
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Payne J. E., 1997, Object Magazine, V7, P34
   Pullum L.L., 2001, ART H COMP SCI LIBR
   Satpathy M, 2004, PROC IEEE INT CONF S, P124, DOI 10.1109/ICSM.2004.1357797
   Sobel AEK, 2002, IEEE T SOFTWARE ENG, V28, P308, DOI 10.1109/32.991322
   STAA AV, 2000, PROGRAMACAO MODULAR
   TAYLOR DJ, 1986, IEEE T COMPUT, V35, P288, DOI 10.1109/TC.1986.1676761
   2008, COD CONV JAVA PROGR
   2007, MOCKS ARENT STUBS
NR 22
TC 1
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR 10
PY 2009
VL 39
IS 3
BP 315
EP 330
DI 10.1002/spe.903
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 412EF
UT WOS:000263705700005
DA 2024-07-18
ER

PT J
AU Binder, W
   Hulaas, J
   Moret, P
   Villazón, A
AF Binder, Walter
   Hulaas, Jarle
   Moret, Philippe
   Villazon, Alex
TI Platform-independent profiling in a virtual execution environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; JVM; profiling; program transformations; bytecode instrumentation;
   dynamic metrics
ID JAVA
AB Virtual execution environments, such as the Java virtual machine, promote platform-independent software development. However, when it comes to analyzing algorithm complexity and performance bottlenecks, available tools focus on platform-specific metrics, such its the CPU time consumption on a particular system. Other drawbacks of many prevailing profiling tools are high overhead, significant measurement perturbation. as well as reduced portability of profiling tools, which are often implemented in platform-dependent native code. This article presents a novel profiling approach, which is entirely based oil program transformation techniques. in order to build a profiling data structure that provides calling-context-sensitive program execution statistics. We explore the use of platform-independent profiling metrics in order to make the instrumentation entirely portable and to generate reproducible profiles. We implemented these ideas within a Java-based profiling tool called JP. A significant novelty is that this tool achieves complete bytecode coverage by statically instrumenting the core runtime libraries and dynamically instrumenting the rest of the code. JP provides a small and flexible API to write customized profiling agents in pure Java, which are periodically activated to process the collected profiling information. Performance measurements point out that, despite the presence of dynamic instrumentation,JP causes significantly less overhead than a prevailing tool for the profiling of Java code. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Binder, Walter] Univ Lugano, Fac Informat, CH-6900 Lugano, Switzerland.
   [Hulaas, Jarle] Ecole Polytech Fed Lausanne, CH-1015 Lausanne, Switzerland.
C3 Universita della Svizzera Italiana; Swiss Federal Institutes of
   Technology Domain; Ecole Polytechnique Federale de Lausanne
RP Binder, W (corresponding author), Univ Lugano, Fac Informat, Via Giuseppe Buffi 13, CH-6900 Lugano, Switzerland.
EM walter.binder@unisi.ch
RI Villazón, Alex/AGR-6972-2022; Villazon, Alex/AAK-3937-2020
OI Villazón, Alex/0000-0001-8428-3420; Hulaas, Jarle/0000-0003-4103-2503;
   Binder, Walter/0000-0002-2477-2182
FU Marie Curie Fellowship; Swiss National Science Foundation
FX Contract/grant sponsor: Marie Curie Fellowship Contract/grant sponsor:
   Swiss National Science Foundation
CR Ammons Glenn, 1997, P ACM SIGPLAN 97 C P, P85, DOI [10.1145/258915, DOI 10.1145/258915]
   ARNOLD M, 2001, SIGPLAN C PROGR LANG, P168
   Ball T, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P46, DOI 10.1109/MICRO.1996.566449
   BALL T, 1994, ACM T PROGR LANG SYS, V16, P1319, DOI 10.1145/183432.183527
   *BEA, SERP
   Binder W, 2005, LECT NOTES COMPUT SC, V3780, P178
   Binder W, 2005, LECT NOTES COMPUT SC, V3437, P154
   Binder W, 2001, ACM SIGPLAN NOTICES, V36, P139, DOI 10.1145/504311.504293
   BINDER W, 2005, LECT NOTES INFORMA P, V69, P110
   Binder W, 2006, I S WORKL CHAR PROC, P201
   Binder W, 2006, SOFTWARE PRACT EXPER, V36, P615, DOI 10.1002/spe.712
   Blackburn S.M., 2006, OOPSLA 06
   Camesi A, 2006, INT CONF QUANT EVAL, P19
   Chiba S, 2003, LECT NOTES COMPUT SC, V2830, P364
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   CHOI JD, 1999, P ACM SIGPLAN SIGSOF, P21
   Cierniak M, 2000, ACM SIGPLAN NOTICES, V35, P13, DOI 10.1145/358438.349306
   Cohen GA, 1998, PROCEEDINGS OF THE USENIX 1998 ANNUAL TECHNICAL CONFERENCE, P167
   COOPER BF, 1998, CUCS85398 U COL BOUL
   CZAJKOWSKI G, 1998, P 13 C OBJ OR PROGR, V33
   DAHM M, 1999, JAVA INFORM TAGE 199
   DMITRIEV M, 2004, WOSP 04, P139
   Dufour B, 2003, ACM SIGPLAN NOTICES, V38, P149, DOI 10.1145/949343.949320
   DUFOUR B, 2003, OOPSLA 03, P306
   Feeley M., 1993, FPCA '93. Conference on Functional Programming Languages and Computer Architecture, P179, DOI 10.1145/165180.165205
   FELLER P, 1998, CS1998581 U CAL
   GOSLIN J, 2005, JAVA SERIES
   Gregg D, 2003, CONCURR COMP-PRACT E, V15, P459, DOI 10.1002/cpe.666
   *IBM, JIK BYT TOOLK
   *JBOSS, OP SOURC MIDDL SOFTW
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   LARUS JR, 1994, SOFTWARE PRACT EXPER, V24, P197, DOI 10.1002/spe.4380240204
   Liang S, 1999, PROCEEDINGS OF THE FIFTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS '99), P229
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   *NETBEANS, NETBEANS PROF PROJ
   Ogasawara T, 2001, ACM SIGPLAN NOTICES, V36, P83, DOI 10.1145/504311.504289
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   Pearce DJ, 2007, SOFTWARE PRACT EXPER, V37, P747, DOI 10.1002/spe.788
   SHUF Y, 2001, SIGMETRICS PERFORMAN, P194
   Srivastava A, 2004, ACM SIGPLAN NOTICES, V39, P528, DOI 10.1145/989393.989446
   *STAND PERF EV COR, SPEC JVM98 BENCHM
   *STAND PERF EV COR, SPEC JBB2005 JAV BUS
   *SUN MICR INC, JVM TOOL INT JVMTI V
   *SUN MICR INC, JAV VIRT MACH PROT I
   TANTER E, 2000, LECT NOTES COMPUTER, V2487, P283
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Whaley John., 2000, JAVA 00, P78
NR 47
TC 25
Z9 26
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2009
VL 39
IS 1
BP 47
EP 79
DI 10.1002/spe.890
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 388RA
UT WOS:000262035700003
OA Green Published, Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Francese, R
   Passero, I
   Tortora, G
AF De Lucia, Andrea
   Francese, Rita
   Passero, Ignazio
   Tortora, Genoveffa
TI Migrating legacy video lectures to multimedia learning objects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE e-learning; learning object; SCORM; slide change detection
AB Video lectures are an old distance learning approach that offers only basic interaction and retrieval features to the user. Thus, to follow the new learning paradigms, we need to re-engineer the e-learning processes while preserving the investments made in the past. In this paper we present an approach for migrating video lectures to multimedia learning objects. Two essential problems are tackled: the detection of slide transitions and the generation of the learning objects. To this aim, the video of the lecture is scanned to detect the slide changes, while the learning object metadata and the slide pictures are extracted from the presentation document. A tool named VLMigrator (video lecture migrator) has been developed to support the migration of video lectures and the restructuring of their contents in terms of learning objects. Both the migration strategy and the tool have been experimented in a case study. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [De Lucia, Andrea; Francese, Rita; Passero, Ignazio; Tortora, Genoveffa] Univ Salerno, Dipartimento Matemat & Informat, Fisciano, SA, Italy.
C3 University of Salerno
RP Passero, I (corresponding author), Univ Salerno, Dipartimento Matemat & Informat, Via Ponte don Melillo 1, Fisciano, SA, Italy.
EM ipassero@unisa.it
RI Passero, Ignazio/B-6564-2015; Passero, Ignazio/AAZ-7426-2020; De Lucia,
   Andrea/AAG-6781-2020; Passero, Ignazio/AAF-8780-2019
OI Passero, Ignazio/0000-0001-9844-4301; De Lucia,
   Andrea/0000-0002-4238-1425
CR Abowd G.D., 1996, ACM MULTIMEDIA, P187
   ADAMS B, 2003, NIST SPECIAL PUBLICA, P289
   [Anonymous], 1991, P VDB
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   BEHARA A, 2004, IEEE INT C MULT EXP, P2127
   Bell T., 2001, P WORLD C ED MULT HY, V2001, P117
   Bersin J., 2003, LEARNING CIRCUITS
   BOLEY SA, 2004, PRESENTATION LEARNIN
   Brodie M., 1995, MIGRATING LEGACY SYS
   Deshpande S. G., 2001, IEEE Transactions on Multimedia, V3, P432, DOI 10.1109/6046.966115
   Dugad R., 1998, IEEE WORKSH MULT SIG
   Ford RM, 1997, IEEE INTERNATIONAL CONFERENCE ON MULTIMEDIA COMPUTING AND SYSTEMS '97, PROCEEDINGS, P610, DOI 10.1109/MMCS.1997.609780
   GERHARD J, 2002, P 35 HAW INT C SYST, P262
   Gonzalez R., 2002, DIGITAL IMAGE PROCES, V2nd, P75
   He LW, 1999, ACM MULTIMEDIA 99, PROCEEDINGS, P489, DOI 10.1145/319463.319691
   *ISO IEC, 2008, 263002006 ISOIEC
   *KOM, 2007, LOM ED VERS 1 0
   *LOMGEN, 2005, LEARN OBJ MET GEN
   Mostefaoui A, 2006, SOFTWARE PRACT EXPER, V36, P871, DOI 10.1002/spe.722
   Mukhopadhyay S, 1999, ACM MULTIMEDIA 99, PROCEEDINGS, P477, DOI 10.1145/319463.319690
   Ngo CW, 2002, IEEE INTERNATIONAL CONFERENCE ON MULTIMEDIA AND EXPO, VOL I AND II, PROCEEDINGS, pA533
   PINCAS A, 2005, GRADUAL SIMPLE CHANG
   *RELOAD, REUS LEARN OBJ AUTH
   ROBSON C, 1997, ICMCS 97 P 1997 INT, P610
   SETHI IK, 1995, IS T SPIE P STORAGE, V2420
   Syeda-Mahmood T., 2000, Proceedings ACM Multimedia 2000, P85, DOI 10.1145/354384.354433
   TIECHENG L, 2002, P 2002 IEEE INT C MU
   2008, JMF JAVA MEDIA FRAME
   2001, OPEN VIDEO PROJECT
   2008, SMIL
   2008, ECONTENTPLUS PROGRAM
   2008, COM COMPONENT OBJECT
NR 32
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2008
VL 38
IS 14
BP 1499
EP 1530
DI 10.1002/spe.877
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 372EH
UT WOS:000260884300003
DA 2024-07-18
ER

PT J
AU Chen, Q
   Grundy, J
   Hosking, J
AF Chen, Qi
   Grundy, John
   Hosking, John
TI SUMLOW: early design-stage sketching of UML diagrams on an E-whiteboard
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE sketch-based user interfaces; E-whiteboards; CASE tools; unified
   modelling language; hand-drawn visual language recognition
AB Most visual diagramming tools provide point-and-click construction of computer-drawn diagram elements using a conventional desktop computer and mouse. SUMLOW is a unified modelling language (UML) diagramming tool that uses an electronic whiteboard (E-whiteboard) and sketching-based user interface to support collaborative software design. SUMLOW allows designers to sketch UML constructs, mixing different UML diagram elements, diagram annotations, and hand-drawn text. A key novelty of the tool is the preservation of hand-drawn diagrams and support for manipulation of these sketches using pen-based actions. Sketched diagrams can be automatically 'formalized' into computer-recognized and -drawn UML diagrams and then exported to a third party CASE tool for further extension and use. We describe the motivation for SUMLOW, illustrate the use of the tool to sketch various UML diagram types, describe its key architecture abstractions and implementation approaches, and report on two evaluations of the toolset. We hope that our experiences will be useful for others developing sketching-based design tools or those looking to leverage pen-based interfaces in software applications. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Grundy, John] Univ Auckland, Dept Elect & Elect Engn, Auckland 1, New Zealand.
   [Chen, Qi; Grundy, John; Hosking, John] Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
C3 University of Auckland; University of Auckland
RP Grundy, J (corresponding author), Univ Auckland, Dept Elect & Elect Engn, Private Bag 92019, Auckland 1, New Zealand.
EM john-g@cs.auckland.ac.nz
RI Grundy, John/AAF-1716-2019
OI Grundy, John/0000-0003-4928-7076; Hosking, John/0000-0002-4776-3828
CR ALVARADO C, 2004, P 2004 ACM S US INT
   APPERLEY M, 2002, P IHM HCI LILL FRANC
   Apte A., 1993, P 6 ANN ACM S US INT, DOI [10.1145/168642.168654, DOI 10.1145/168642.168654]
   BERQUE D, 2001, ACM SIGCSE B, V33, P169
   BLACK A, 1990, BEHAV INFORM TECHNOL, V9, P283, DOI 10.1080/01449299008924244
   Brooks A, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P285, DOI 10.1109/ASWEC.2001.948522
   Chen Q, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P219
   Damm C. H., 2000, P SIGCHI C HUM FACT, P518
   DONALDSON A, 2005, HCI 2005 WORKSH IMPR
   Fowler Martin., 1999, UML Distilled: A Brief Guide to the Standard Object Modeling Language
   Goel V., 1995, Sketches of thought
   GOLDSCHMIDT G, 1992, CYBERNET SYST, V23, P191, DOI 10.1080/01969729208927457
   Gray JP, 2000, INFORM SOFTWARE TECH, V42, P73, DOI 10.1016/S0950-5849(99)00080-4
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   GREIF I, 1992, IEEE T SOFTWARE ENG, V18, P827, DOI 10.1109/32.159831
   Grundy J, 2002, SOFTWARE PRACT EXPER, V32, P983, DOI 10.1002/spe.472
   Hammond Tracy., 2002, P 2002 AAAI SPRING S, P59
   Hse H, 2004, INT C PATT RECOG, P367, DOI 10.1109/ICPR.2004.1334128
   Hse H., 2004, P 9 INT C INT US INT, P156, DOI DOI 10.1145/964442.964472
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   LANDAY JA, 1996, P CHI 96 HUM FACT CO, P518
   Lank E., 2001, Proceedings of Sixth International Conference on Document Analysis and Recognition, P356, DOI 10.1109/ICDAR.2001.953813
   Lin J., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P510, DOI 10.1145/332040.332486
   MACKAY D, 2003, P 4 AUSTR US INT C A, V18
   Myers BA, 1997, IEEE T SOFTWARE ENG, V23, P347, DOI 10.1109/32.601073
   *OBJ MAN GROUP, 2007, UML RES PAG
   PLIMMER B, 2002, ACM INT C P SERIES, V7, P9
   Quatrani Terry., 2002, VISUAL MODELING RATI, V3rd
   RATZER AV, 2002, P 2 NORD C HUM COMP, V31
   ROBBINS J, 2000, INFORM SOFTWARE TECH
   RUBINE D, 1991, COMP GRAPH, V25, P329, DOI 10.1145/127719.122753
   SEZGIN TM, 2005, P 2005 INT C INT US
   SHUCKMAN C, 1996, P ACM C COMP SUPP CO, P21
   *SMART TECHN INC, 2007, SMART BOARD     0918
   Voida S., 2002, IEEE Pervasive Computing, V1, P73, DOI 10.1109/MPRV.2002.1037725
   WONG YY, 1992, HUMAN FACTORS COMPUT
NR 36
TC 16
Z9 20
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2008
VL 38
IS 9
BP 961
EP 994
DI 10.1002/spe.856
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 331KC
UT WOS:000258010100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, N
   Wang, N
   Shi, B
AF Chen, Ningtao
   Wang, Nengchao
   Shi, Baochang
TI A new algorithm for encoding and decoding the Hilbert order
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Hilbert curve; encoding; decoding; space-filling curve
ID SPACE-FILLING CURVE
AB An iterative algorithm is described, based on the replication process of the Hilbert matrix, for encoding and decoding the Hilbert order. The time complexity of the proposed algorithm is smaller than those published previously, and the space complexity is bounded by a constant. Moreover, the new algorithm has a wider applicability when compared with existing algorithms for certain machine-word lengths. A new variant of the Hilbert curve is suggested to overcome a shortcoming of the traditional Hilbert curve for the mapping problem. The proposed coding algorithms for the traditional Hilbert curve are also applicable to the new variant without increasing the time and space complexities. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Huazhong Univ Sci & Technol, Parallel Computat Inst, Sch Comp Sci & Technol, Wuhan 430074, Hubei, Peoples R China.
C3 Huazhong University of Science & Technology
RP Chen, N (corresponding author), Huazhong Univ Sci & Technol, Parallel Computat Inst, Sch Comp Sci & Technol, Wuhan 430074, Hubei, Peoples R China.
EM nt_chen@263.net
OI Shi, Baochang/0000-0002-8082-715X
CR Bartholdi JJ, 2001, SOFTWARE PRACT EXPER, V31, P395, DOI 10.1002/spe.376
   Böhm C, 2001, ACM COMPUT SURV, V33, P322, DOI 10.1145/502807.502809
   Breinholt G, 1998, ACM T MATH SOFTWARE, V24, P184, DOI 10.1145/290200.290219
   BUTZ AR, 1971, IEEE T COMPUT, VC 20, P424, DOI 10.1109/T-C.1971.223258
   COLE AJ, 1983, SOFTWARE PRACT EXPER, V13, P1181, DOI 10.1002/spe.4380131209
   DICKOV RM, 1996, 2D L SYSTEMS
   FISHER AJ, 1986, SOFTWARE PRACT EXPER, V16, P5, DOI 10.1002/spe.4380160103
   GOLDSCHLAGER LM, 1981, SOFTWARE PRACT EXPER, V11, P99, DOI 10.1002/spe.4380110106
   GOODCHILD MF, 1983, P 6 INT S AUT CART O, P400
   Gotsman C, 1996, IEEE T IMAGE PROCESS, V5, P794, DOI 10.1109/83.499920
   GOTSMAN C, 1995, PATTERN RECOGN LETT, V16, P409, DOI 10.1016/0167-8655(94)00112-G
   GOTSMAN C, 1994, INT C PATT RECOG, P98, DOI 10.1109/ICPR.1994.577130
   GRIFFITHS JG, 1986, SOFTWARE PRACT EXPER, V16, P403, DOI 10.1002/spe.4380160503
   GRIFFITHS JG, 1985, COMPUT AIDED DESIGN, V17, P37, DOI 10.1016/0010-4485(85)90009-0
   Gupta SKS, 1996, J PARALLEL DISTR COM, V34, P137, DOI 10.1006/jpdc.1996.0051
   Hilbert David, 1891, MATH ANN, V38, P459, DOI [DOI 10.1007/BF01199431, 10.1007/bf01199431]
   JAGADISH HV, 1990, ACM SIGMOND RECORD, V19, P232
   Lin SY, 2003, 2003 INTERNATIONAL CONFERENCE ON PARALLEL PROCESSING, PROCEEDINGS, P99
   Liu X, 1997, IEEE T IMAGE PROCESS, V6, P1333, DOI 10.1109/83.623197
   Liu X, 1996, SOFTWARE PRACT EXPER, V26, P1335, DOI 10.1002/(SICI)1097-024X(199612)26:12<1335::AID-SPE60>3.0.CO;2-A
   Liu X, 1998, INT J GEOGR INF SCI, V12, P3, DOI 10.1080/136588198241987
   Lu Feng, 2001, Journal of Computer Aided Design & Computer Graphics, V13, P424
   Null A., 1971, SOFTWARE PRACTICE EX, V1, P403
   PEANO G, 1890, MATH ANNAL, V36
   Sagan H., 1992, INT J MATH ED SCI TE, V23, P403, DOI [10.1080/0020739920230309, DOI 10.1080/0020739920230309]
   SONG ZX, 2000, P 2000 ACM WORKSH MU, V11, P167
   Wirth N., 1976, ALGORITHMS DATA STRU
   WITTEN IH, 1983, SOFTWARE PRACT EXPER, V13, P519, DOI 10.1002/spe.4380130606
   Zhang YF, 1998, COMPUT GRAPH, V22, P559, DOI 10.1016/S0097-8493(98)00043-0
NR 29
TC 11
Z9 14
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2007
VL 37
IS 8
BP 897
EP 908
DI 10.1002/spe.793
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 187HB
UT WOS:000247837100005
DA 2024-07-18
ER

PT J
AU Abel, J
AF Abel, Juergen
TI Incremental frequency count - a post BWT-stage for the Burrows-Wheeler
   compression algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compression; Burrows-Wheeler transform; BWT
AB The silage after the Burrows-Wheeler transform (BWT) has a key function inside the Burrows-Wheeler compression algorithm as it transforms the BWT output from a local context into a global context. This paper presents the Incremental Frequency Count stage, a post-BWT stage. The new stage is paired with a run length encoding stage between the BWT and the entropy coding stage of the algorithm. It offers high throughput similar to a Move To Front stage, and at the same time good compression rates like the strong but slow Weighted Frequency Count stage. The properties of the Incremental Frequency Count stage are compared to the Move To Front and Weighted Frequency Count stages by their compression rates and speeds on the Calgary and large Canterbury corpora. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Ingenieurburo Dr Abel GmbH, D-41469 Neuss, Germany.
RP Abel, J (corresponding author), Ingenieurburo Dr Abel GmbH, Lechstr 1, D-41469 Neuss, Germany.
EM juergen.abel@data-compression.info
CR Abel J, 2005, IEEE DATA COMPR CONF, P449
   ABEL J, 2003, ADV BLOCKSORTING COM
   Arnavut Z, 1997, IEEE DATA COMPR CONF, P181, DOI 10.1109/DCC.1997.582009
   Balkenhol B, 1999, IEEE DATA COMPR CONF, P188, DOI 10.1109/DCC.1999.755668
   Balkenhol B., 1999, SFB343 DISCRETE STRU
   BENTLEY JL, 1986, COMMUN ACM, V29, P320, DOI 10.1145/5684.5688
   Binder E., 2000, DISTANCE CODER
   Burrows M., 1994, Algorithm, Data Compression, DOI 10.1.1.37.6774
   CHAPIN B, 2001, THESIS U N TEXAS
   CLEARY JG, 1984, IEEE T COMMUN, V32, P396, DOI 10.1109/TCOM.1984.1096090
   Deorowicz S, 2000, SOFTWARE PRACT EXPER, V30, P1465, DOI 10.1002/1097-024X(20001110)30:13<1465::AID-SPE345>3.0.CO;2-D
   Deorowicz S, 2002, SOFTWARE PRACT EXPER, V32, P99, DOI 10.1002/spe.426
   ELIAS P, 1975, IEEE T INFORM THEORY, V21, P194, DOI 10.1109/TIT.1975.1055349
   Fenwick P, 2002, SOFTWARE PRACT EXPER, V32, P1307, DOI 10.1002/spe.484
   FENWICK P, 2003, LOSSLESS DATA COMPRE, P182
   FENWICK P, 1996, 130 U AUCKL DEP COMP
   GAILLY JL, 1993, GZIP DATA COMPRESSIO
   Giancarlo R, 2003, LECT NOTES COMPUT SC, V2676, P129
   GRINGELER Y, 2002, COMMUNICATION
   KAO TH, 2001, 3768515 GUNM U
   Kärkkäinen J, 2003, LECT NOTES COMPUT SC, V2719, P943
   Larsson N. J., 1999, FASTER SUFFIX SORTIN
   POWELL M, TABLE COMPRESSION RA
   SADAKANE K, 2000, THESIS U TOKYO
   Seward J., 2000, Proceedings DCC 2000. Data Compression Conference, P173, DOI 10.1109/DCC.2000.838157
   Yao Z, 2002, IEEE DATA COMPR CONF, P481, DOI 10.1109/DCC.2002.1000024
   [No title captured]
NR 27
TC 13
Z9 13
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2007
VL 37
IS 3
BP 247
EP 265
DI 10.1002/spe.763
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 145ZS
UT WOS:000244904900002
DA 2024-07-18
ER

PT J
AU Pal, P
   Rubel, P
   Atighetchi, M
   Webber, F
   Sanders, WH
   Seri, M
   Ramasamy, H
   Lyons, J
   Courtney, T
   Agbaria, A
   Cukier, M
   Gossett, J
   Keidar, I
AF Pal, Partha
   Rubel, Paul
   Atighetchi, Michael
   Webber, Franklin
   Sanders, William H.
   Seri, Mouna
   Ramasamy, HariGovind
   Lyons, James
   Courtney, Tod
   Agbaria, Adnan
   Cukier, Michel
   Gossett, Jeanna
   Keidar, Idit
TI An architecture for adaptive intrusion-tolerant applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE intrusion tolerance; Byzantine fault tolerance; adaptive defense;
   redundancy; adaptive middleware; survivability architecture
AB Applications that are part of a mission-critical information system need to maintain a usable level of key services through ongoing cyber-attacks. In addition to the well-publicized denial of service (DoS) attacks, these networked and distributed applications are increasingly threatened by sophisticated attacks that attempt to corrupt system components and violate service integrity. While various approaches have been explored to deal with DoS attacks, corruption-inducing attacks remain largely unaddressed. We have developed a collection of mechanisms based on redundancy, Byzantine fault tolerance, and adaptive middleware that help distributed, object-based applications tolerate corruption-inducing attacks. In this paper, we present the ITUA architecture, which integrates these mechanisms in a framework for auto-adaptive intrusion-tolerant systems, and we describe our experience in using the technology to defend a critical application that is part of a larger avionics system as an example. We also motivate the adaptive responses that are key to intrusion tolerance, and explain the use of the ITUA architecture to support them in an architectural framework. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 BBN Technol, Cambridge, MA 02138 USA.
   Univ Illinois, Coordinated Sci Lab, Ctr Reliable & High Performance Comp, Urbana, IL 61801 USA.
   IBM Corp, Res, Zurich Res Lab, CH-8803 Ruschlikon, Switzerland.
   Univ Maryland, A James Clark Sch Engn, College Pk, MD 20742 USA.
   Boeing Co, Chicago, IL 60606 USA.
   Technion Israel Inst Technol, Dept Elect Engn, IL-32000 Haifa, Israel.
C3 Raytheon Technologies; Raytheon BBN Technologies; University of Illinois
   System; University of Illinois Urbana-Champaign; International Business
   Machines (IBM); University System of Maryland; University of Maryland
   College Park; Boeing; Technion Israel Institute of Technology
RP Pal, P (corresponding author), BBN Technol, 10 Moulton St, Cambridge, MA 02138 USA.
EM ppal@bbn.com
RI Cukier, Michel/AAV-8017-2021; Pal, Partha/R-7085-2019
OI Cukier, Michel/0000-0001-6250-4632; Pal, Partha/0000-0002-5979-4306
CR ADELSBACH A, 2003, TR0301 DIFCUL DEP CO
   BIRMAN K, 1991, ACM T COMPUT SYST, V9, P272, DOI 10.1145/128738.128742
   Birman K.P., 1996, BUILDING SECURE RELI
   Cristian F, 1999, IEEE T PARALL DISTR, V10, P642, DOI 10.1109/71.774912
   FISCHER MJ, 1985, J ACM, V32, P374, DOI 10.1145/3149.214121
   GUPTA V, 2003, THESIS U ILLINOIS
   *ITUA TEAM, 2003, ITUA FIN REP
   *ITUA TEAM, 2003, ITUA TEST EV REP
   *ITUA TEAM, 2003, ITUA VAL REP
   Kim G.H., 1994, P 2 ACM C COMPUTER C, P18
   KNIGHT J, 2002, 2002 P INT C DEP S S
   Loyall JP, 1998, FIRST INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC '98), P43, DOI 10.1109/ISORC.1998.666767
   LOYALL JP, 2000, P ISOC NETW DISTR SY
   LYONS JP, 2003, THESIS U ILLINOIS
   NELSON W, 2002, 1326 BBN TECHN LLC
   NELSON W, 2002, 1311 BBN TECHN LLC
   Neumann PG, 1999, PROCEEDINGS OF THE WORKSHOP ON INTRUSION DETECTION AND NETWORK MONITORING (ID '99), P73
   OBRIEN D, 2003, P DARPA INF SURV C E
   Pal P, 2003, DARPA INFORMATION SURVIVABILITY CONFERENCE AND EXPOSITION, VOL II, PROCEEDINGS, P135
   PAL P, 2003, DESIGNING PROTECTION
   PAL P, 2001, P MIL COMM C MILCOM
   Pal P, 2001, P NEW SEC PAR WORKSH, P71
   PAL PP, 2000, P DARPA INF SURV C E
   Ramasamy HV, 2002, 2002 PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P9, DOI 10.1109/PRDC.2002.1185613
   Ramasamy HV, 2003, IEICE T INF SYST, VE86D, P2612
   Ramasamy HV, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P229, DOI 10.1109/DSN.2002.1028904
   REN YJ, 2003, THEOR PRACT OBJ SYST, V52, P31
   Roesch M, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRTEENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA XIII), P229
   Sames D, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P239, DOI 10.1109/DSN.2002.1028905
   SATTERTHWAITE CP, 2001, P 6 INT COMM CONTR R
   SCHNEIDER FB, 1990, COMPUT SURV, V22, P299, DOI 10.1145/98163.98167
   SERI M, 2002, 2002 INT C DEP SYS S
   SINGH S, 2003, P INT C DEP SYST NET
   *USAF SCI ADV BOAR, 1999, SABTR9902 USAF, V1
   VALDES A, 2002, LECT NOTES COMPUTER, V2845
   WEBBER F, 2002, APOD FINAL REPORT
   Zinky J. A., 1997, Theory and Practice of Object Systems, V3, P55, DOI 10.1002/(SICI)1096-9942(1997)3:1<55::AID-TAPO6>3.0.CO;2-6
   2006, NETFILTER FIREWALLIN
NR 38
TC 12
Z9 13
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1331
EP 1354
DI 10.1002/spe.747
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 086HN
UT WOS:000240664500013
DA 2024-07-18
ER

PT J
AU Hartman, JH
   Baker, S
   Murdock, I
AF Hartman, JH
   Baker, S
   Murdock, I
TI Customizing the swarm storage system using agents
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE log structured; LFS; file system; storage system; agents
ID FILE SYSTEM
AB Swarm is a scalable, modular storage system that uses agents to customize low-level storage functions to meet the needs of high-level services. Agents influence low-level storage functions such as data layout, metadata management, and crash recovery. An agent is a program that is attached to data in the storage system and invoked when events occur during the data's lifetime. For example, before Swarm writes data to disk, agents attached to the data are invoked to determine a layout policy. Agents are typically persistent, remaining attached to the data they manage until the data are deleted; this allows agents to continue to affect how the data are handled long after the application or storage service that created the data has terminated. In this paper, we present Swarm's agent architecture, describe the types of agents that Swarm supports and the infrastructure used to support them, and discuss their performance overhead and security implications. We describe how several storage services and applications use agents, and the benefits they derive from doing so. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
   Progeny Linux Syst, Indianapolis, IN 46250 USA.
C3 University of Arizona
RP Univ Arizona, Dept Comp Sci, 1040 E 4th St, Tucson, AZ 85721 USA.
EM bakers@cs.arizona.edu
CR Amiri K, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 2000 USENIX ANNUAL TECHNICAL CONFERENCE, P307
   [Anonymous], SOSP
   CORBETT PF, 1996, PROPOSAL COMMON PARA
   de Jonge Wiebren., 1993, PROC 14 SOSP, P15
   Frans Kaashoek M., 1997, Proceedings of the Sixteenth ACM Symposium on Operating Systems Principles, P52, DOI DOI 10.1145/268998.266644
   GIBSON GA, 1997, P 1997 ACM SIGMETRIC, P272
   Grimm R, 1996, INT CON DISTR COMP S, P26, DOI 10.1109/ICDCS.1996.507898
   HARTMAN JH, 1995, ACM T COMPUT SYST, V13, P274, DOI 10.1145/210126.210131
   Hartman JH, 1999, INT CON DISTR COMP S, P74, DOI 10.1109/ICDCS.1999.776508
   HUTCHINSON NC, 1991, IEEE T SOFTWARE ENG, V17, P64, DOI 10.1109/32.67579
   MCKUSICK MK, 1984, ACM T COMPUT SYST, V2, P181, DOI 10.1145/989.990
   *MESS PASS INT FOR, 2002, MPI 2 EXT MESS PASS
   Necula GC, 1996, PROCEEDINGS OF THE SECOND SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '96), P229, DOI 10.1145/248155.238781
   RASHID R, 1988, IEEE T COMPUT, V37, P896, DOI 10.1109/12.2242
   RIEDEL E, CMUCS99177
   Riedel E., 1999, THESIS CARNEGIE MELL
   ROSENBLUM M, 1992, ACM T COMPUT SYST, V10, P26, DOI 10.1145/146941.146943
   Seltzer MI, 1996, PROCEEDINGS OF THE SECOND SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '96), P213, DOI 10.1145/248155.238779
   [No title captured]
NR 19
TC 0
Z9 0
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2006
VL 36
IS 2
BP 117
EP 137
DI 10.1002/spe.685
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 012YK
UT WOS:000235376600001
DA 2024-07-18
ER

PT J
AU Chirouze, O
   Cleary, D
   Mitchell, GG
AF Chirouze, O
   Cleary, D
   Mitchell, GG
TI A software methodology for applied research: eXtreme Researching
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE eXtreme Programming; agile processes; process engineering;
   telecommunications
AB Applied research is, by necessity, a distributed, collaborative process. To be useful, research methodologies must not only be applicable in such an environment, but must also be adaptive to the needs of human resources and specific research area requirements. This paper introduces eXtreme Researching (XR), an adaptation of eXtreme Programming (XP) by Ericsson, to support distributed telecommunications research and development. XR builds on XP and tailors it to meet the needs of applied industrial research. It adopts and extends the most useful elements of XP: collective ownership, planning game, continuous integration and metaphor and shows how they are applicable in multi-site, research projects. XPWeb is developed as a tool to facilitate XR in a distributed research environment. XPWeb and XR are actively used by Ericsson Applied Research and have been shown to significantly increase output and efficiencies in multi disciplinary research projects. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Natl Univ Ireland, Dept Comp Sci, Maynooth, Kildare, Ireland.
   Solutec, Lyon, France.
   Ericsson Appl Res Labs, Athlone, Ireland.
C3 Maynooth University; Ericsson
RP Mitchell, GG (corresponding author), Natl Univ Ireland, Dept Comp Sci, Maynooth, Kildare, Ireland.
EM george.mitchell@nuim.ie
CR Ahmed-Nacer M, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P345, DOI 10.1109/AICCSA.2001.934011
   [Anonymous], P XP2001 21 23 MAY 2
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   BELLOTTI V, 2002, P 3 INT C EXTREME PR, P56
   Boehm B.W., 1988, IEEE COMPUTER, V21, P61
   Bruegge B., 2000, Object-Oriented Software Engineering Conquering Complex and Changing Systems
   Cugola G., 1998, Software Process Improvement and Practice, V4, P101, DOI 10.1002/(SICI)1099-1670(199809)4:3<101::AID-SPIP103>3.0.CO;2-K
   FOWLER M, NEW METHODOLOGY
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   FOWLWER M, VARIATIONS THEME XP
   Grundy J, 1998, SEVENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WET ICE '98), P39, DOI 10.1109/ENABL.1998.725667
   HIGHTOWER R, 2001, JAVA TOOLS EXTREME P
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kivi J, 2000, 2000 CANADIAN CONFERENCE ON ELECTRICAL AND COMPUTER ENGINEERING, CONFERENCE PROCEEDINGS, VOLS 1 AND 2, P816, DOI 10.1109/CCECE.2000.849579
   Müller MM, 2001, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE.2001.919128
   *RAT SOFTW, 1998, RAT UN PROC VERS 5 0
   Robson C., 2002, Real world research
   SOMERVILLE I, 2000, SOFTWARE ENG
   STROSTRUP B, PROCESS
   WEST D, 2002, P 3 INT C EXTREME PR, P101
   Wood WA, 2003, IEEE SOFTWARE, V20, P30, DOI 10.1109/MS.2003.1196317
   Yin R., 1994, CASE STUDY RES DESIG
NR 22
TC 4
Z9 4
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2005
VL 35
IS 15
BP 1441
EP 1454
DI 10.1002/spe.677
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 991UU
UT WOS:000233840400002
DA 2024-07-18
ER

PT J
AU Staelin, C
AF Staelin, C
TI <i>lmbench</i>:: an extensible micro-benchmark suite
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE micro-benchmarking; performance analysis; measurement
ID PERFORMANCE
AB Imbench is a powerful and extensible suite of micro-benchmarks that measures a variety of important aspects of system performance. It has a powerful timing harness that manages most of the 'housekeeping' chores associated with benchmarking, making it easy to create new benchmarks that analyze systems or components of specific interest to the user. In many ways lmbench is a Swiss army knife for performance analysis. It includes an extensive suite of micro-benchmarks that give powerful insights into system performance. For those aspects of system or application performance not covered by the suite, it is generally a simple task to create new benchmarks using the timing harness. Imbench is written in ANSI-C and uses POSIX interfaces, so it is portable across a wide variety of systems and architectures. It also includes powerful new tools that measure performance under scalable loads to analyze SMP and clustered system performance. Copyright (C) 2005 John Wiley & Sons, Ltd.
C1 Hewlett Packard Labs, IL-32000 Haifa, Israel.
C3 Hewlett-Packard
RP Hewlett Packard Labs, Technion City, IL-32000 Haifa, Israel.
EM carl.staelin@hp.com
CR [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 1993, MONOGR STAT APPL PRO
   Banga G, 1998, PROCEEDINGS OF THE USENIX 1998 ANNUAL TECHNICAL CONFERENCE, P1
   Banga G, 1997, PROCEEDINGS OF THE USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS, P61
   BRAY T, 1990, BONNIE BENCHMARK
   BROWN A, 1997, P 1997 ACM SIGMETRIC, P214
   CHEN PM, 1993, P IEEE, V81, P1151, DOI 10.1109/5.236192
   CHEN PM, 1994, ACM T COMPUT SYST, V12, P308, DOI 10.1145/195792.195812
   Gilat D, 1996, STAT PROBABIL LETT, V29, P45, DOI 10.1016/0167-7152(95)00154-9
   GLENDINNING I, 1994, GENESIS DISTR MEM BE
   HOWARD JH, 1988, ACM T COMPUT SYST, V6, P51, DOI 10.1145/35037.35059
   HRISTEA C, 1997, P ICS NOV, P1
   *INT CORP, 1999, WHITEPAPER       JUL
   MCCALPIN JD, 2005, STREAM2 HOME PAGE
   McCalpin John, 1995, IEEE Technical Committee on Computer Architecture Newsletter
   McVoy L, 1996, PROCEEDINGS OF THE USENIX 1996 ANNUAL TECHNICAL CONFERENCE, P279
   Mogul J. C., 1999, Proceedings of the Seventh Workshop on Hot Topics in Operating Systems, P90, DOI 10.1109/HOTOS.1999.798383
   *NASA ADV SUP DIV, 2005, NAS PAR BENCHM
   PARK A, 1990, COMPUTER ARCHITECTUR, V18, P45
   PRESTOR U, 2001, THESIS U UTAH
   SAAVEDRA RH, 1995, IEEE T COMPUT, V44, P1223, DOI 10.1109/12.467697
   SAAVEDRABARRERA RH, 1992, THESIS U CALIFORNIA
   Seltzer M., 1999, Proceedings of the Seventh Workshop on Hot Topics in Operating Systems, P102, DOI 10.1109/HOTOS.1999.798385
   SHEIN B, 1989, P SUMM USENIX TECHN, P269
   SMITH KA, 1997, P 1997 ACM SIGMETRIC, P203
   Staelin C, 1998, PROCEEDINGS OF THE USENIX 1998 ANNUAL TECHNICAL CONFERENCE, P155
   WEICKER RP, 1984, COMMUN ACM, V27, P1013, DOI 10.1145/358274.358283
   WHALEY RC, 1997, UTCS97366 U TENN DEP
   Wolman B. L., 1989, Computer Architecture News, V17, P55, DOI 10.1145/71302.71309
   ZHOU T, 1999, PROFUSION ARCHITECTU
NR 30
TC 15
Z9 19
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2005
VL 35
IS 11
BP 1079
EP 1105
DI 10.1002/spe.665
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 963EF
UT WOS:000231785500004
DA 2024-07-18
ER

PT J
AU Power, DJ
   Politou, EA
   Slaymaker, MA
   Simpson, AC
AF Power, DJ
   Politou, EA
   Slaymaker, MA
   Simpson, AC
TI Towards secure Grid-enabled healthcare
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT International Workshop on Grid Security
CY JUL, 2004
CL Oxford, ENGLAND
DE security; Grid computing; electronic healthcare
AB The primary focus of the UK e-Science Programme is the development of software architectures, middleware and applications to support the end-user scientific community in the undertaking of large-scale research. A significant subset of e-Science projects is concerned with the healthcare domain: as well as satisfying the needs of the end users, such projects have to consider the legal, ethical and security constraints associated with the use of sensitive patient data-these concerns are particularly relevant within the context of the U.K.'s National Health Service (NHS). In this paper we present a vision for Grid-enabled healthcare that is sensitive to the information security requirements both of the NHS and the projects themselves. Although our motivation is principally derived from U.K.-based e-Health projects, this paper should be of interest to the worldwide health Grid community. By restricting ourselves to information security, we do not consider, for example, physical security or audit trail capabilities, which are outside the scope of this paper. The vision we describe is grounded in terms of experience, and reflects the challenges faced by the e-DiaMoND project team. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
C3 University of Oxford
RP Univ Oxford, Comp Lab, Wolfson Bldg,Pk Rd, Oxford OX1 3QD, England.
EM andrew.simpson@comlab.ox.ac.uk
RI Politou, Eugenia/AAI-9529-2021
OI Politou, Eugenia/0000-0001-6157-6490; Slaymaker, Mark
   A/0009-0000-6875-6128; Simpson, Andrew/0000-0003-3597-2232
CR AMEDOLIA SR, 2003, P 18 MED INF C MIE 2
   Brady J., 2003, GRID COMPUTING, P923
   CHADWICK DW, 2002, P IFIP TC11 17 INT C, P39
   Date C.J., 2004, An Introduction to Database Systems, V8th
   Flechais I., 2003, P 2003 WORKSHOP NEW, P49
   Foster I.K., 2002, Global Grid Forum
   Godik S., 2005, EXTENSIBLE ACCESS CO
   Humphrey M., 2002, Cluster Computing, V5, P257, DOI 10.1023/A:1015621120332
   MEYERS M, 2005, RFC, V2560
   *NAT RES CTR COMM, 1999, TRUST CYB
   POWER DJ, UNPUB EUROPEAN GRID
   SLAYMAKER MA, 2004, P HEALTHGR 04
   SLAYMAKER MA, IN PRESS METHODS INF
   SOUTTER J, 2003, HOSPITAL RADIOLOGIST, V5
NR 14
TC 19
Z9 21
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2005
VL 35
IS 9
BP 857
EP 871
DI 10.1002/spe.692
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 943CO
UT WOS:000230329800006
DA 2024-07-18
ER

PT J
AU Finkel, R
   Marek, VW
   Truszczynski, M
AF Finkel, R
   Marek, VW
   Truszczynski, M
TI Constraint Lingo: towards high-level constraint programming
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE logic puzzles; logic programming; constraint satisfaction; tabular
   constraint satisfaction
AB Logic programming requires that the programmer convert a problem into a set of constraints based on predicates. Choosing the predicates and introducing appropriate constraints can be intricate and error prone. If the problem domain is structured enough, we can let the programmer express the problem in terms of more abstract, higher-level constraints. A compiler can then convert the higher-level program into a logic-programming formalism. The compiler writer can experiment with alternative low-level representations of the higher-level constraints in order to achieve a high-quality translation. The programmer can then take advantage of both a reduction in complexity and an improvement in runtime speed for all problems within the domain. We apply this analysis to the domain of tabular constraint-satisfaction problems. Examples of such problems include logic puzzles solvable on a hatch grid and combinatorial problems such as graph coloring and independent sets. The proper abstractions for these problems are rows, columns, entries, and their interactions. We present a higher-level language, Constraint Lingo, dedicated to problems in this domain. We also describe how we translate programs from Constraint Lingo into lower-level logic formalisms such as the logic of propositional schemata. These translations require that we choose among competing lower-level representations in order to produce efficient results. The overall effectiveness of our approach depends on the appropriateness of Constraint Lingo, our ability to translate Constraint Lingo programs into high-quality representations in logic formalisms, and the efficiency with which logic engines can compute answer sets. We comment on our computational experience with these tools in solving both graph problems and logic puzzles. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 University of Kentucky
RP Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
EM raphael@cs.uky.edu
CR BRACCHI C, 2001, P 11 INT WORKSH LOG
   CADOLI M, 2003, P 2 INT WORKSH MOD R, P33
   Colmerauer A., 1973, Un systeme de communication homme-machine en francais
   EAST D, 2001, LECT NOTES ARTIF INT, V2174, P138
   EDMUNDS D, 2000, LEARNING CONSTRAINT
   Eiter T, 2000, SPRINGER INT SER ENG, V597, P79
   Eiter Thomas, 1998, P 6 INT C PRINC KNOW, P406
   FIKES RE, 1971, ARTIF INTELL, V2, P189, DOI 10.1016/0004-3702(71)90010-5
   FINKEL R, 2003, CONSTRAINT LINGO PAC
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   KAUTZ HA, 1999, P IJCAI 99 SAN MAT C
   Kwok C., 1998, Pddl-the planning domain definition language
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nilsson NJ., 1998, ARTIF INTELL
   OUSTERHOUT JK, 1994, PROFESSIONAL COMPUTI
   SELMAN B, 1992, P 10 EUR C ART INT V
   WALLACE M, 1977, PLATFORM CONSTRAINT
   WHIPKEY RK, 2004, VARIOUS LOGIC PUZZLE
   WHIPKEY RK, 2001, VARIOUS LOGIC PUZZLE
   [No title captured]
NR 23
TC 7
Z9 7
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2004
VL 34
IS 15
BP 1481
EP 1504
DI 10.1002/spe.623
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 875VY
UT WOS:000225451400004
DA 2024-07-18
ER

PT J
AU Jaksic, M
AF Jaksic, M
TI Mapping of bibliographical standards into XML
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XML; UNIMARC; XML Schema language; bibliographic records; validation
AB The most popular bibliographical standards, which prescribe the exchange of bibliographical data in machine readable form, are MARC (Machine Readable Cataloguing) and UNIMARC (Universal Machine Readable Cataloguing). This paper presents two schemas, both written in the XML schema language: the UNIMARC format schema and the XML bibliographical records schema. The instance of the UNIMARC format schema is an XML document of UNIMARC format. This schema provides easier updating and adjusting of the UNIMARC format at the national or regional level. It was also the basis for the development of the XML editor for UNIMARC format description. The instance of the XML bibliographical records schema is an XML bibliographic record. This schema provides very thorough control of the contents and structure of bibliographical records, whether they were directly created as XML records or converted to XML from existing UNIMARC records. The validation process is implemented in the Java environment, with the Sun Multi-Schema XML Validator (MSV) package. The author is aware of the inevitable question of redundant information contained in these two schemas and proposes some possible solutions. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Novi Sad, Fac Sci, Dept Math & Informat, YU-21000 Novi Sad, Serbia Monteneg, Serbia.
C3 University of Novi Sad
RP Univ Novi Sad, Fac Sci, Dept Math & Informat, Trg D Obradovica 4, YU-21000 Novi Sad, Serbia Monteneg, Serbia.
EM mirjanaz@im.ns.ac.yu
CR [Anonymous], IMPLEMENTATION GUIDE
   CARVLHO J, 2002, P 68 IFLA COUNC GEN
   CLARKE KS, 2003, MEDLANE XMLMARC UPDA
   *IFLA, 1994, UNIMARC MAN BIBL FOR
   JELLIFFE R, 2004, SCHEMATION XML STRUC
   *LIB C NETW DEV MA, 2003, MARC STAND
   MIJIC V, 2003, THESIS NOVI SAD
   MILLER DR, 2003, XOBIS XML ORGANIC BI
   MILOSAVLJEVIC B, 2001, NOVI SAD J MATH, V31, P159
   PETERS B, 2004, MARC4J BASIC TUTORIA
   ZEREMSKI M, 2003, THESIS NOVI SAD
   2002, UNIMARC CONCISE BIBL
   2003, MARC XML MARC 21 XML
NR 13
TC 6
Z9 8
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2004
VL 34
IS 11
BP 1051
EP 1064
DI 10.1002/spe.603
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 850ZH
UT WOS:000223652400002
DA 2024-07-18
ER

PT J
AU Nyström, M
   Risch, T
AF Nyström, M
   Risch, T
TI Engineering information integration using object-oriented mediator
   technology
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE computer aided design; computer aided engineering; database queries;
   information integration; mediator database; object orientation
ID OPTIMIZATION; SYSTEM
AB The mechanical product development process uses many different software systems to virtually simulate the behaviour of a design. The present work deals with flexible and efficient integration using object-oriented mediator technology that provides transparent access to distributed engineering systems. The use of mediator technology is investigated for semi-automatically integrating engineering information resident in computer aided design systems with a Common Object Request Broker Architecture based application programming interface. The purpose is to provide engineering analysis applications access to computer aided design system information and computational methods through a declarative query language. We conclude that the use of a declarative query language for developing engineering applications shows great potential in terms of flexibility, development productivity, performance, and ease of use, compared with using a procedural programming language. The work also shows new use of mediator technology, declarative queries, and active rules within engineering information integration that traditionally is accomplished using procedural programming. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Uppsala Univ, Dept Informat Technol, S-75105 Uppsala, Sweden.
   Lulea Univ Technol, Dept Appl Phys & Mech Engn, S-97187 Lulea, Sweden.
C3 Uppsala University; Lulea University of Technology
RP Uppsala Univ, Dept Informat Technol, Box 337, S-75105 Uppsala, Sweden.
EM tore.risch@it.uu.se
CR Cattell R., 2000, The Object Data Standard: ODMG 3.0
   Cook R.D., 1974, Concepts and Applications of Finite Element Analysis
   Fahl G., 1997, VLDB Journal, V6, P261, DOI 10.1007/s007780050045
   Gabbert U, 1998, ENG COMPUT, V14, P115, DOI 10.1007/BF01213585
   Hardwick M., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P285, DOI 10.1109/69.87967
   *INT ORG STAND, 1994, 103031 ISO INT ORG S
   Josifovski V, 1999, J INTELL INF SYST, V12, P165, DOI 10.1023/A:1008752909607
   Josifovski V, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P435
   KATCHAOUNOV T, 2002, P INT WORKSH EFF WEB
   Klaas O, 2001, ENG COMPUT-GERMANY, V17, P151, DOI 10.1007/PL00007199
   KOPARANOVA M, 2002, P INT DAT ENG APPL S
   Liang J, 1999, COMPUT AIDED DESIGN, V31, P429, DOI 10.1016/S0010-4485(99)00041-X
   LIN H, 2002, J APPL SYSTEM STUDIE, V3, P399
   LITWIN W, 1992, IEEE T KNOWL DATA EN, V4, P517, DOI 10.1109/69.180603
   *NIST US NAT BUR S, IN GRAPH EXCH SPEC I
   NYSTROM M, 2000, ISATA 2000 P SIM ENG, P213
   NYSTROM M, 2000, P 8 AIAA USAF NASA I
   *OBJ MAN GROUP, 2002, COMP AID DES CAD SER
   Object Management Group, 2002, COMM OBJ REQ BROK AR
   Piegl L., 1997, The Nurbs Book, Vsecond
   Risch T, 2001, CONCURR COMP-PRACT E, V13, P933, DOI 10.1002/cpe.607
   Sistla R, 2000, ADV ENG SOFTW, V31, P707, DOI 10.1016/S0965-9978(00)00014-4
   Skold M, 1996, PROC INT CONF DATA, P392, DOI 10.1109/ICDE.1996.492188
   *SUN, 2000, ENT JAV BEANS SPEC 2
   *SUN, 2001, JAV 2 PLATF ENT ED S
   TAKIZAWA M, 1983, JPN ANNU REV ELECTR, V7, P262
   Tang J, 2000, ADV ENG SOFTW, V32, P1
   *UN SOL INC, 2002, OP 1 DEAS US GUID VE
   URBAN SD, 2001, J COMPUT INF SCI ENG, V1, P23
   Widom J, 2002, DATABASE SYSTEMS COM
   WIEDERHOLD G, 1992, COMPUTER, V25, P38, DOI 10.1109/2.121508
   Wiederhold G, 2000, J INTELL INF SYST, V14, P85, DOI 10.1023/A:1008775517030
   Xie SQ, 2002, INT J ADV MANUF TECH, V20, P50, DOI 10.1007/s001700200123
NR 33
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2004
VL 34
IS 10
BP 949
EP 975
DI 10.1002/spe.599
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 844AN
UT WOS:000223129300002
DA 2024-07-18
ER

PT J
AU Sanghi, D
   Jalote, P
   Agarwal, P
   Jain, N
   Bose, S
AF Sanghi, D
   Jalote, P
   Agarwal, P
   Jain, N
   Bose, S
TI A testbed for performance evaluation of load-balancing strategies for
   Web server systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE load balancing; DNS based schemes; Web server systems; testbed
AB To improve response time of a Web site, one replicates the site on multiple servers. The effectiveness of a replicated server system will depend on how the incoming requests are distributed among replicas. A large number of load-balancing strategies for Web server systems have been proposed.
   In this paper we describe a testbed that can be used to evaluate the performance of different load-balancing strategies. The testbed uses a general architecture which allows different load-balancing approaches to be supported easily. It emulates a typical World Wide Web scenario and allows variable load generation and performance measurement. We have performed some preliminary experiments to measure the performance of a few policies for load balancing using this testbed. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Indian Inst Technol, Dept Comp Sci & Engn, Kanpur 208016, Uttar Pradesh, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kanpur
RP Indian Inst Technol, Dept Comp Sci & Engn, Kanpur 208016, Uttar Pradesh, India.
EM jalote@cse.iitk.ac.in
CR AGARWAL P, 2001, THESIS INDIAN I TECH
   ANDERSONE, MAGICROUTER ANAL FAS
   Aversa L., 2000, P 2000 IEEE INT PERF, P24
   Cardellini V, 1999, IEEE INTERNET COMPUT, V3, P28, DOI 10.1109/4236.769420
   Cardellini V, 2002, ACM COMPUT SURV, V34, P263, DOI 10.1145/508352.508355
   Cohen A, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS (USITS'99), P117
   Colajanni M, 1998, INT CON DISTR COMP S, P295, DOI 10.1109/ICDCS.1998.679729
   Colajanni M, 1998, IEEE T PARALL DISTR, V9, P585, DOI 10.1109/71.689446
   ERIKSSON P, 2003, HTTP BENCHMARKING TO
   Fielding R., 1999, 2616 RFC
   KWAN TT, 1995, COMPUTER, V28, P68, DOI 10.1109/2.471181
   LI Q, 2001, P 10 INT WORLD WIDE
   Mendez T., 1993, 1546 RFC
   Mockapetris P., 1987, RFC 1034 DOMAIN NAME
   Mockapetris Paul, 1987, RFC 1035
   PERKINS CE, 1996, RFC 2003 IP ENCAPSUL
   Sanghi D, 2002, LECT NOTES COMPUT SC, V2510, P659
   Schroeder T, 2000, IEEE NETWORK, V14, P38, DOI 10.1109/65.844499
   Shaikh A, 2001, IEEE INFOCOM SER, P1801, DOI 10.1109/INFCOM.2001.916678
   Teo YM, 2001, SIMULATION, V77, P185, DOI 10.1177/003754970107700504
   *WORLD WID WEB C, COMM LOGF FORM
   Yeung KH, 2002, IEE P-COMMUN, V149, P223, DOI 10.1049/ip-com:20020169
NR 22
TC 5
Z9 6
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2004
VL 34
IS 4
BP 339
EP 353
DI 10.1002/spe.567
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 810IU
UT WOS:000220698800001
DA 2024-07-18
ER

PT J
AU Liu, MC
AF Liu, MC
TI DrawCAD: using deductive object-relational databases in CAD
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE computer-aided design (CAD); database systems; nested relations;
   complex-object relations; deductive databases
ID SYSTEM; PROTOTYPE; LOGIC
AB Computer-aided design (CAD) involves the use of computers in the various stages of engineering design. CAD has large volumes of data with complex structures that need to be stored and managed effectively and properly. Database systems provide general purpose programs that can be used to access and manipulate large amounts of data stored in the database. They also provide an independence between the program accessing data and the database. It is therefore important to use database systems to store CAD data in the most efficient and effective manner for easy retrieval and better management.
   Graphical objects can be created, in CAD, by reusing previously created objects. The data of these objects have references to the other objects they contain. Deductive object-relational databases not only provide direct support for the effective storage and efficient access to large amounts of data with complex structures on disk, but also perform the inferences and computations to obtain the complete data of graphical objects that reuse other objects. They should be able to play a major role in CAD systems. This is the idea behind the development of the DrawCAD system. DrawCAD is a CAD system built on top of the Relationlog object-relational deductive database system. It facilitates the creation of graphical objects by reusing previously created objects. The DrawCAD system illustrates how CAD systems can be developed, using database systems to store and manage data and also perform the inferences and computations that are normally performed by the application program. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Carleton Univ, Sch Comp Sci, Ottawa, ON K1S 5B6, Canada.
C3 Carleton University
RP Liu, MC (corresponding author), Carleton Univ, Sch Comp Sci, Ottawa, ON K1S 5B6, Canada.
RI Liu, Mengchi/JQI-3255-2023
OI Liu, Mengchi/0000-0002-8245-2355
CR BARJA ML, 1995, INFORM SYST, V20, P185, DOI 10.1016/0306-4379(95)00009-S
   BUTTERWORTH P, 1991, COMMUN ACM, V34, P64, DOI 10.1145/125223.125254
   Cattell R.G. G., 1997, OBJECT DATABASE STAN
   Ceri S., 1990, Logic Programming and Databases, DOI [10.1007/978-3-642-83952-8, DOI 10.1007/978-3-642-83952-8_6]
   Chimenti D., 1990, IEEE Transactions on Knowledge and Data Engineering, V2, P76, DOI 10.1109/69.50907
   Codd E.F., 1970, COMMUN ACM, V13, P6
   Date C.J., 2000, INTRO DATABASE SYSTE, V7th
   DEUX O, 1991, COMMUN ACM, V34, P35
   Frohn J, 1997, PROC INT CONF DATA, P583, DOI 10.1109/ICDE.1997.582037
   Gallaire Herve., 1984, ACM COMPUT SURV, V16, P153
   GARDARIN G, 1984, NEW APPL DATABASES
   GRANOVETTER M, 1992, ACTA SOCIOL, V35, P3, DOI 10.1177/000169939203500101
   Groover M.P., 1984, CAD CAM COMPUTER AID
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   Kim W., 1990, INTRO OBJECT ORIENTE
   LAMB C, 1991, COMMUN ACM, V34, P50, DOI 10.1145/125223.125244
   LIU M, 2003, J INTELLIGENT INFORM, V20
   LIU M, 1999, P 30 INT C TECHN OBJ, P63
   Liu MC, 1998, J INTELL INF SYST, V10, P5, DOI 10.1023/A:1008609906090
   Liu MC, 2001, SOFTWARE PRACT EXPER, V31, P409, DOI 10.1002/spe.378
   Ramakrishnan R., 1994, VLDB J, V3, P161
   RULAND D, 1986, P INT WORKSH GRAPHTH, P290
   Silberschatz Abraham., 1997, Database System Concepts, V3rd
   SOLOVIEV V, 1992, ACM SIGMOD RECORD, V21, P93
   STEVENS A, 1994, C PLUS PLUS DATABASE
   Stonebraker M., 1995, OBJECT RELATIONAL DB
   Taylor D.L., 1992, COMPUTER AIDED DESIG
   WILKES W, 1989, PROCEEDINGS : FIFTH INTERNATIONAL CONFERENCE ON DATA ENGINEERING, P443, DOI 10.1109/ICDE.1989.47248
   YANG YK, 1988, P 25 ACM IEEE C DES, P263
NR 29
TC 0
Z9 0
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2003
VL 33
IS 2
BP 143
EP 172
DI 10.1002/spe.500
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 644PX
UT WOS:000180928300003
DA 2024-07-18
ER

PT J
AU Daun, M
   Brings, J
   Obe, PA
   Tenbergen, B
AF Daun, Marian
   Brings, Jennifer
   Obe, Patricia Aluko
   Tenbergen, Bastian
TI An industry survey on approaches, success factors, and barriers for
   technology transfer in software engineering
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE industry survey; software engineering; technology transfer
ID REPLICATION
AB One central aspect of software engineering research is the transfer of the proposed approaches into industrial practice. In the past, a number of technology transfer approaches and experiences from technology transfer projects in software engineering have already been reported. However, many researchers still struggle to get their research results noticed by practitioners. To investigate what is important to practitioners, we conducted a mixed-methods study that provides us with reliable quantitative data as well as deeper insights from qualitative data. Our results show that there is a mismatch between industry professionals' needs and commonly proposed technology transfer approaches in the software engineering field. For instance, collaboration between industry and academia as well as participation in empirical evaluations is not deemed important from an industry point of view. In contrast, industry professionals emphasize the use of company-specific pilot projects conducted by industry and the need for experts to be available in every phase of technology transfer.
C1 [Daun, Marian] Tech Univ Appl Sci Wurzburg Schweinfurt, Ctr Robot, Schweinfurt, Germany.
   [Brings, Jennifer; Obe, Patricia Aluko] Univ Duisburg Essen, Paluno, Essen, Germany.
   [Tenbergen, Bastian] SUNY Coll Oswego, Dept Comp Sci, Oswego, NY USA.
   [Daun, Marian] Tech Univ Appl Sci Wurzburg Schweinfurt, Schweinfurt, Bavaria, Germany.
C3 University of Duisburg Essen; State University of New York (SUNY)
   System; State University of New York (SUNY) - Oswego
RP Daun, M (corresponding author), Tech Univ Appl Sci Wurzburg Schweinfurt, Schweinfurt, Bavaria, Germany.
EM marian.daun@thws.de
OI Daun, Marian/0000-0002-9156-9731
CR ABERCROMBIE DA, 1993, PROCEEDINGS OF THE TENTH BIENNIAL UNIVERSITY/GOVERNMENT/INDUSTRY MICROELECTRONICS SYMPOSIUM, P41, DOI 10.1109/UGIM.1993.297040
   Abernethy K., 2000, Thirteenth Conference on Software Engineering Education and Training, P23, DOI 10.1109/CSEE.2000.827014
   Amsden D. C., 1993, IEEE Transactions on Professional Communications, V36, P190, DOI 10.1109/47.259956
   Andrade J, 2004, J RES PRACT INF TECH, V36, P295
   [Anonymous], 1908, BIOMETRIKA, V6, P1
   Aschauer T., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P49, DOI 10.1145/1810295.1810304
   Baldassarre M. T., 2013, P 17 INT C EV ASS SO, P144, DOI [10.1145/2460999.2461020, DOI 10.1145/2460999.2461020]
   Bass M., 2006, P 2006 INT WORKSH SO, P55
   Bril R.J, 2006, P 2006 INT WORKSHOP, P15, DOI DOI 10.1145/1138046.1138052
   Brings J, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1981
   BUTLER RW, 1995, COMPASS '95 - PROCEEDINGS OF THE TENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P135, DOI 10.1109/CMPASS.1995.521893
   BUXTON JN, 1991, SOFTWARE ENG J, V6, P17, DOI 10.1049/sej.1991.0002
   Cantu-Ortiz F. J., 1990, Proceedings. IEEE Conference on Managing Expert System Programs and Projects (Cat. No.90CH2913-2), P70, DOI 10.1109/MESPP.1990.122678
   Chookittikul W., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P239, DOI 10.1109/ITNG.2011.49
   Cockburn A, 2020, COMMUN ACM, V63, P70, DOI 10.1145/3360311
   Colyer A. M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P569, DOI 10.1109/ICSE.2000.870449
   Corbin J., 2015, BASICS QUALITATIVE R
   CURRAN LJ, 1993, IEEE SPECTRUM, V30, P50, DOI 10.1109/6.208367
   Curtis B., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P521, DOI 10.1109/ICSE.2000.870442
   De Lucia A, 2008, SOFTWARE PRACT EXPER, V38, P1333, DOI 10.1002/spe.870
   Diebold P, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P66, DOI [10.1109/ICSSP.2016.017, 10.1145/2904354.2904356]
   Diebold P, 2015, INT SYMP EMP SOFTWAR, P86, DOI 10.1109/ESEM.2015.7321189
   Diebold Philipp, 2014, P INT S EMP SOFTW EN, DOI [10.1145/2652524.2652552, DOI 10.1145/2652524.2652552]
   Duarte CHC, 2015, Second International Workshop on Software Engineering Research and Industrial Practice SER&IP 2015, P32, DOI 10.1109/SERIP.2015.14
   Fowler P., 1994, Proceedings of the Twenty-Seventh Hawaii International Conference on System Sciences. Vol.IV: Information Systems: Collaboration Technology Organizational Systems and Technology (Cat. No.94TH0607-2), P483, DOI 10.1109/HICSS.1994.323469
   Freedman P., 1993, 1993 Canadian Conference on Electrical and Computer Engineering (Cat. No.93TH0590-0), P179, DOI 10.1109/CCECE.1993.332206
   Garousi V., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering - EASE'17, P224, DOI [DOI 10.1145/3084226.3084279, 10.1145/3084226, DOI 10.1145/3084226]
   Garousi V, 2019, EMPIR SOFTW ENG, V24, P2540, DOI 10.1007/s10664-019-09711-y
   Geisler E., 1993, Journal of Technology Transfer, V18, P88, DOI [10.1007/bf02174807, DOI 10.1007/BF02174807]
   Gibson D. V., 1995, Proceedings of the Twenty-Eighth Hawaii International Conference on System Sciences, P661, DOI 10.1109/HICSS.1995.375684
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Grigoleit Florian, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321203
   Hallinan S., 2005, P IASTED C SOFTWARE
   Harrison W, 2006, IEEE SOFTWARE, V23, P5
   Heuer Andre, 2014, CEUR WORKSHOP P, V1129, P47
   Hinchey MG., 2006, P 2006 INT WORKSH SO, P43, DOI 10.1145/1138046.1138060
   Huang LG, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P189, DOI 10.1109/CSEET.2011.5876086
   Illarramendi M, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P290, DOI 10.1109/SEAA.2015.43
   Ivarsson M, 2009, REQUIR ENG, V14, P155, DOI 10.1007/s00766-009-0080-1
   Iyer SV, 1995, PROCEEDINGS OF THE ELEVENTH BIENNIAL UNIVERSITY/GOVERNMENT/INDUSTRY MICROELECTRONICS SYMPOSIUM, P16, DOI 10.1109/UGIM.1995.514108
   Jedlitschka Andreas, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P31
   Junker M, 2015, Second International Workshop on Software Engineering Research and Industrial Practice SER&IP 2015, P50, DOI 10.1109/SERIP.2015.17
   Kalinowski M, 2007, P INT C CHIL COMPUT, P132, DOI 10.1109/SCCC.2007.9
   LAHDENIEMI M, 1994, PROCEEDINGS OF THE IEEE 1994 INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, P119, DOI 10.1109/IEMC.1994.379942
   Laird L, 2015, Second International Workshop on Software Engineering Research and Industrial Practice SER&IP 2015, P46, DOI 10.1109/SERIP.2015.16
   Mashkoor A, 2018, SOFTWARE PRACT EXPER, V48, P2350, DOI 10.1002/spe.2634
   Meek GE, 2007, J MOD APPL STAT METH, V6, P91, DOI 10.22237/jmasm/1177992540
   Michalik B., 2008, ACM IEEE 30 INT C SO, P741
   Mikkonen T, 2018, INFORM SOFTWARE TECH, V95, P34, DOI 10.1016/j.infsof.2017.10.013
   Mirachi S, 2017, SOFTWARE PRACT EXPER, V47, P1465, DOI 10.1002/spe.2477
   Ozkaya M, 2018, SOFTWARE PRACT EXPER, V48, P985, DOI 10.1002/spe.2561
   Pfleeger SL, 1999, J SYST SOFTWARE, V47, P111, DOI 10.1016/S0164-1212(99)00031-X
   Punter T, 2009, J SYST SOFTWARE, V82, P993, DOI 10.1016/j.jss.2008.12.035
   Ram P, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P14, DOI 10.1109/ICSSP.2019.00013
   REDFORD M, 1993, PROCEEDINGS OF THE TENTH BIENNIAL UNIVERSITY/GOVERNMENT/INDUSTRY MICROELECTRONICS SYMPOSIUM, P29, DOI 10.1109/UGIM.1993.297042
   Redwine S. T.  Jr., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P189
   Rombach D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P531, DOI 10.1109/ICSE.2000.870443
   Rombach DH, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P29, DOI 10.1109/FOSE.2007.16
   Schuh G., 2014, P 2014 IEEE INT C MA
   Schuh G, 2013, PORTL INT CONF MANAG, P858
   Selic B, 2015, Second International Workshop on Software Engineering Research and Industrial Practice SER&IP 2015, P58, DOI 10.1109/SERIP.2015.19
   Shepperd M, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P73, DOI 10.1145/3183399.3183423
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Sjoberg DIK, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P29
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Skevoulis S, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P343, DOI 10.1109/CSEET.2011.5876105
   Smith J, 1998, ESA SP PUBL, V432, P63
   STEVENS SS, 1946, SCIENCE, V103, P677, DOI 10.1126/science.103.2684.677
   Yamashita A, 2015, Second International Workshop on Software Engineering Research and Industrial Practice SER&IP 2015, P11, DOI 10.1109/SERIP.2015.11
   Zelkowitz MV., 1998, P NASA GODDARD SOFTW
NR 71
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2023
VL 53
IS 7
BP 1496
EP 1524
DI 10.1002/spe.3200
EA MAR 2023
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H9FS7
UT WOS:000949241500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zada, I
   Shahzad, S
   Ali, S
   Mehmood, RM
AF Zada, Islam
   Shahzad, Sara
   Ali, Shaukat
   Mehmood, Raja Majid
TI OntoSuSD: Software engineering approaches integration ontology for
   sustainable software development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agile; green; lean; ontology; software development process model;
   sustainability
ID GREEN
AB Different software development approaches (SDAs) are developed with broad portfolios of development processes. Each of the approaches has certain exclusive principles, practices, thinking, and values, which are informally represented, implemented, and improperly institutionalized. Ontologies are developed for the representation, assessment, and adaptation of SDAs separately without having a shared terminology which may lead to terminological conflict and confusion affecting the simultaneous representation and implementation in software development industry and academia. The software engineering approaches does not consider and support sustainability as priority concern. However, the approaches have capabilities of supporting sustainable software development in different sustainability aspects. This research article aims for the designing and development of an integrated ontology of software engineering approaches (i.e., agile, lean, and green) named OntoSuSD (ontology for sustainable software development) to support sustainable software development knowledge, awareness, and implementation. The goal of OntoSuSD is to propose, design and develop a formal, generic, consistent, and shared knowledge base containing semantic terminology and description of concepts and relationships generated around the representation and implementation of lean, agile, and green approaches in software development processes, which will facilitate their simultaneous implementation and assessment for sustainable software development. The OntoSuSD is developed using practical ontology engineering methodology by reusing relevant ontologies and explicit concepts and properties are defined to fulfill knowledge requirements and representations of the domain. The OntoSuSD is evaluated, and results infer OntoSuSD has high ontological design, good domain coverage, potential applications and achieves purpose of the ontology development.
C1 [Zada, Islam; Shahzad, Sara; Ali, Shaukat] Univ Peshawar, Dept Comp Sci, Peshawar 25120, Pakistan.
   [Mehmood, Raja Majid] Xiamen Univ Malaysia, Dept Informat & Commun Technol, Sch Elect & Comp Engn, Sepang, Malaysia.
C3 University of Peshawar; Xiamen University Malaysia Campus
RP Zada, I (corresponding author), Univ Peshawar, Dept Comp Sci, Peshawar 25120, Pakistan.
EM islamzada_cs@uop.edu.pk
RI ZADA, Dr.ISLAM/GLT-3832-2022
OI ZADA, Dr.ISLAM/0000-0001-6472-8795
CR Ali, 2022, MATH PROBL ENG, V2022
   Ali S, 2016, COGENT ENG, V3, DOI 10.1080/23311916.2016.1193959
   Ali S, 2017, J SENSORS, V2017, DOI 10.1155/2017/8790198
   Almeida, 2018, P INT C SOFTW PROC I, P104
   Alobaid A, 2019, J WEB SEMANT, V57, DOI 10.1016/j.websem.2018.09.003
   Amri R, 2014, 2014 FOURTH INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING AND COMMUNICATIONS (ICACC), P231, DOI 10.1109/ICACC.2014.62
   [Anonymous], 2004, METRICS NEWS
   Atzberger Alexander, 2020, Procedia CIRP, V91, P464, DOI 10.1016/j.procir.2020.02.200
   Bassil Y., 2012, International Journal of Engineering Technology, V2, P1
   Beck K., 2000, EXTREME PROGRAMMING
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   Bertoa M., 2006, Ontologies for Software Engineering and Software Technology, P175, DOI DOI 10.1007/3-540-34518-3_6
   Boone HN., 2012, J EXT, V50, P48, DOI [https://doi.org/10.34068/joe.50.02.48, DOI 10.1007/S11172-017-1908-3]
   Bourque P, 2003, 10TH INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P8
   Brank J., 2005, P C DAT MIN DAT WAR, P166
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Burton-Jones A, 2005, DATA KNOWL ENG, V55, P84, DOI 10.1016/j.datak.2004.11.010
   Calero C., 2021, SOFTWARE SUSTAINABIL, P1
   Calero C., 2006, Ontologies for software engineering and software technology
   Suárez-Figueroa MC, 2015, APPL ONTOL, V10, P107, DOI 10.3233/AO-150145
   Ceravolo P, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P236, DOI 10.1109/APSEC.2003.1254376
   Cui, 2021, SCI PROGRAM, V2021
   Ding BJ, 2023, PROD PLAN CONTROL, V34, P442, DOI 10.1080/09537287.2021.1934587
   Ebert C, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.116
   Eito-Brun R, 2022, ADV SPACE RES, V70, P485, DOI 10.1016/j.asr.2022.04.052
   Ferchichi A, 2008, 1 INT WORKSHOP MODEL, P17
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   Govindan K, 2015, INT J ENVIRON SCI TE, V12, P15, DOI 10.1007/s13762-013-0409-7
   Gutierrez-Rios S, 2021, 2021 4TH INTERNATIONAL CONFERENCE ON INFORMATION AND COMPUTER TECHNOLOGIES (ICICT 2021), P122, DOI 10.1109/ICICT52872.2021.00028
   Hlomani H., 2014, Semantic Web Journal, V1, P1
   Horridge M., 2004, PRACTICAL GUIDE BUIL
   Khusro S, 2017, J INTERNET TECHNOL, V18, P1043, DOI 10.6138/JIT.2017.18.5.20150605
   Kiv S., 2019, P INT C AG SOFTW DEV, P19
   Kiv S, 2022, EXPERT SYST APPL, V195, DOI 10.1016/j.eswa.2022.116520
   Konys A, 2018, SUSTAINABILITY-BASEL, V10, DOI 10.3390/su10020300
   Laanti M., 2013, P EUR C SOFTW PROC I, P247
   Lami G, 2012, COMM COM INF SC, V301, P97
   Liao, 2014, P 4 INT SEM WEB C IS
   Lin, 2011, P INT S DAT DRIV PRO, P189
   Mandic V, 2010, LECT NOTES BUS INF P, V65, P72, DOI 10.1007/978-3-642-16416-3_12
   Mathiyazhagan K, 2021, TECHNOL FORECAST SOC, V171, DOI 10.1016/j.techfore.2021.120982
   Middleton P., 2005, LEAN SOFTWARE STRATE
   Moniruzzaman A.B. M., 2013, Comparative study on agile software development methodologies
   Morales, 2020, P INT C APPL TECHN, P536
   Muthu, 2019, SUSTAIN ASSESSM 21 C, V27, P63
   Naumann S, 2011, SUSTAIN COMPUT-INFOR, V1, P294, DOI 10.1016/j.suscom.2011.06.004
   Ortega-Ordoñez Wilson Alfredo, 2019, Dyna rev.fac.nac.minas, V86, P79, DOI 10.15446/dyna.v86n209.76670
   Oyedeji S, 2018, SUSTAINABILITY-BASEL, V10, DOI 10.3390/su10072296
   Papadopoulos G, 2015, PROCD SOC BEHV, V175, P455, DOI 10.1016/j.sbspro.2015.01.1223
   Pardo-Calvache César Jesús, 2014, Rev.fac.ing.univ. Antioquia, P29
   Parsons, 2010, AGILE SOFTWARE DEV M
   Penzenstadler, 2013, P 1 INT C ICT SUST I
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Poppendieck M, 2012, IEEE SOFTWARE, V29, P26, DOI 10.1109/MS.2012.107
   Presutti, 2008, P INT C CONC MOD, P28
   Rao, 2009, APPROACH ONTOLOGY DE
   Rashid N, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1964
   Rinehart Brenda, 2013, Radiol Manage, VSuppl, P19
   Roldan-Molina GR, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10186328
   Salviano C.F., 2008, P 20 INT C SOFTW ENG, P173
   Shenoy S.S., 2011, 2011 ANN IEEE IND C, P1, DOI [10.1109/INDCON.2011.6139638, DOI 10.1109/INDCON.2011.6139638]
   Siddiqui, 2011, P 5 IND INT C ART IN, P1125
   Silva DS, 2020, INT J ENTREP BEHAV R, V26, P595, DOI [10.1108/IJEBR-07-2019-0425, 10.1109/TSE.2020.2968072]
   Soydan, 2006, P WORKSH SEM WEB EN
   Strode DE, 2016, INFORM SYST FRONT, V18, P23, DOI 10.1007/s10796-015-9574-1
   Sun Z, 2020, IEEE ACCESS, V8, P205374, DOI 10.1109/ACCESS.2020.3037188
   Sutling Kamalrufadillah, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P234, DOI 10.1109/MySec.2014.6986020
   Swacha J, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su14010551
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
   Tartir S, 2007, ICSC 2007: INTERNATIONAL CONFERENCE ON SEMANTIC COMPUTING, PROCEEDINGS, P185, DOI 10.1109/ICSC.2007.19
   Tartir S, 2010, THEORY AND APPLICATIONS OF ONTOLOGY: COMPUTER APPLICATIONS, P115, DOI 10.1007/978-90-481-8847-5_5
   Tripathi V., 2021, Journal of Open Innovation: Technology, Market, and Complexity 2021, V7, P215, DOI [DOI 10.3390/JOITMC7040215, https://doi.org/10.3390/joitmc7040215]
   Turk D., 2002, Proceedings of the Third International Conference on eXtreme Programming and Agile Processes in Software Engineering, P43
   Werewka, 2010, PROD ENG MAK, P7
   Zualkernan IA, 2008, FR ART INT, V182, P190, DOI 10.3233/978-1-58603-916-5-190
NR 75
TC 4
Z9 4
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 283
EP 317
DI 10.1002/spe.3149
EA SEP 2022
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000850581700001
DA 2024-07-18
ER

PT J
AU Marcén, AC
   Pérez, F
   Pastor, O
   Cetina, C
AF Marcen, Ana C.
   Perez, Francisca
   Pastor, Oscar
   Cetina, Carlos
TI Evaluating the benefits of empowering model-driven development with a
   machine learning classifier
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data-oriented software systems; machine learning; model-driven
   development
AB Increasingly, the model driven engineering (MDE) community is paying more attention to the techniques offered by the machine learning (ML) community. This has led to the application of ML techniques to MDE related tasks in hope of increasing the current benefits of MDE. Nevertheless, there is a lack of empirical experiments that evaluate the benefits that ML brings to MDE. In this work, we evaluate the benefits of empowering model engineers of model-driven development (MDD) with an ML classifier. To do this, we tackled how to embed the ML classifier as part of the MDD. Then, this was evaluated using two different real industrial cases. Our results show that despite the ML part takes an extra effort, the use of the ML classifier pays off in terms of the quality results, the perceived usefulness, and intention to use.
C1 [Marcen, Ana C.; Perez, Francisca; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
   [Pastor, Oscar] Univ Politecn Valencia, Res Ctr Software Prod Methods PROS, Valencia, Spain.
C3 Universidad San Jorge; Universitat Politecnica de Valencia
RP Marcén, AC (corresponding author), Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
EM acmarcen@usj.es
RI Pérez, Francisca/KPH-0503-2024; Marcén, Ana/HKF-5543-2023; Cetina,
   Carlos/P-8682-2017; Pastor Lopez, Oscar/S-4216-2016
OI Marcén, Ana/0000-0002-5054-4618; Cetina, Carlos/0000-0001-8542-5515;
   Pastor Lopez, Oscar/0000-0002-1320-8471
FU Generalitat Valenciana [ACIF/2018/171, PROMETEO/2018/176]; Ministerio de
   Ciencia, Innovacion y Universidades [PID2021-128695OB-I00]; Ministerio
   de Economia y Competitividad [TIN2016-80811-P]
FX Generalitat Valenciana, Grant/Award Numbers: ACIF/2018/171,
   PROMETEO/2018/176; Ministerio de Ciencia, Innovacion y Universidades,
   Grant/Award Number: PID2021-128695OB-I00; Ministerio de Economia y
   Competitividad, Grant/Award Number: TIN2016-80811-P
CR Ahmad R, 2021, INTERNET THINGS-NETH, V14, DOI 10.1016/j.iot.2021.100365
   Ambler Scott W., 2004, The Object Primer: Agile Model-Driven Development with UML
   Ambler SW, 2003, AGILE MODEL DRIVEN D
   Anderson B, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1723, DOI 10.1145/3097983.3098163
   Asadi M, 2008, LECT NOTES COMPUT SC, V5095, P419, DOI 10.1007/978-3-540-69100-6_30
   Awad MA, 2005, COMP AGILE TRADITION
   Beydeda S., 2005, Model-driven software development, V15
   Bianchini M., 2013, HDB NEURAL INFORM PR
   Burden H., 2014, ESEM
   Carvalho TP, 2019, COMPUT IND ENG, V137, DOI 10.1016/j.cie.2019.106024
   Casale G, 2015, 2015 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING, P78, DOI 10.1109/MiSE.2015.21
   Ceri S, 2012, COMPUTER AND INFORMATION SCIENCES II, P1, DOI [10.1007/978-1-4471-2155-8_1, 10.1007/978-3-642-34002-4_1]
   Chandrashekar G, 2014, COMPUT ELECTR ENG, V40, P16, DOI 10.1016/j.compeleceng.2013.11.024
   Di Rocco J, 2023, SOFTW SYST MODEL, V22, P203, DOI 10.1007/s10270-022-00994-2
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Echeverría J, 2016, LECT NOTES COMPUT SC, V9694, P476, DOI 10.1007/978-3-319-39696-5_29
   Embley DW, 2013, LECT NOTES COMPUT SC, V8217, P1, DOI 10.1007/978-3-642-41924-9_1
   Gray I., 2014, ARCHITECTURE AWARENE, P151
   Guerriero M, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING (BIGDSE 2016), P37, DOI [10.1145/2896825.2896835, 10.1109/BIGDSE.2016.015]
   Hartmann T, 2019, SOFTW SYST MODEL, V18, P1285, DOI 10.1007/s10270-017-0600-2
   Hasan N, 2021, HEALTH TECHNOL-GER, V11, P471, DOI 10.1007/s12553-021-00538-6
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hron M, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111110
   IEEE Standards Association, 2010, 247652010 ISOIECIEEE
   ISO/IEC, 2001, Technical Report, V1st
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kienzle J, 2020, COMMUN ACM, V63, P80, DOI 10.1145/3371906
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lary DJ, 2009, IEEE GEOSCI REMOTE S, V6, P694, DOI 10.1109/LGRS.2009.2023605
   Leskovec J, 2014, MINING OF MASSIVE DATASETS, 2ND EDITION, P1
   Marcen AC., 2017, ONTOLOGICAL EVOLUTIO, P491
   Marcen AC., 2021, SOFTW SYST MODEL, P1
   McKight P. E., 2010, The Corsini Encyclopedia of Psychology, DOI 10.1002/9780470479216.corpsy0524
   Molina-Ríos J, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106238
   Nguyen TTT, 2008, IEEE COMMUN SURV TUT, V10, P56, DOI 10.1109/SURV.2008.080406
   Panach JI, 2015, INFORM SOFTWARE TECH, V62, P164, DOI 10.1016/j.infsof.2015.02.012
   Ponce M, 2016, Arxiv, DOI arXiv:1604.05676
   Razali N. M., 2011, J. Stat. Model. and Anal., V2, P21, DOI DOI 10.1515/BILE-2015-0008
   Refaeilzadeh P., 2009, ENCYCL DATABASE SYST, V5, P532, DOI DOI 10.1007/978-0-387-39940-9565
   Reinhartz-Berger I, 2014, LECT NOTES COMPUT SC, V8767, P501, DOI 10.1007/978-3-319-11653-2_31
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Shabtai Asaf, 2009, Information Security Technical Report, V14, P16, DOI 10.1016/j.istr.2009.03.003
   Shafique U., 2014, International Journal of Innovation and Scientific Research, V12, P217
   Smith G., 1998, J STAT EDUC, V6, DOI DOI 10.1080/10691898.1998.11910623
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Younas M, 2018, INFORM SOFTWARE TECH, V103, P142, DOI 10.1016/j.infsof.2018.06.014
   Zicari RV, 2016, STUD BIG DATA, V18, P17, DOI 10.1007/978-3-319-30265-2_2
NR 48
TC 1
Z9 1
U1 2
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2022
VL 52
IS 11
BP 2439
EP 2455
DI 10.1002/spe.3133
EA AUG 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5C7YI
UT WOS:000836859900001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Somasekaram, P
   Calinescu, R
AF Somasekaram, Premathas
   Calinescu, Radu
TI Predicting locally manageable resource failures of high availability
   clusters
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Bayesian networks; dependability; high availability; high availability
   clusters; reliability
ID DECISION-SUPPORT; INFLUENCE DIAGRAMS; BAYESIAN NETWORKS; LARGE-SCALE;
   ARCHITECTURE; PERFORMANCE; DIAGNOSIS; FRAMEWORK; SERVICE; METRICS
AB Critical services from domains as diverse as finance, manufacturing and healthcare are often delivered by complex enterprise applications (EAs). High-availability clusters (HACs) are software-managed IT infrastructures that enable these EAs to operate with minimum downtime. This article presents a novel Bayesian decision network model to improve the failure detection capabilities of the HACs components using a comprehensive set of characteristics for the analyzed component. The model then combines these characteristics to predict whether the failure of this component can be managed locally at the failed component level without propagating the failure to upper-level components and causing a complete system failure. By improving the detection capabilities and predicting locally manageable failures, the model improves the decision-making process of HACs, and has the potential to reduce the downtime and improve availability for the applications protected by HACs. The model uses the capabilities of the Bayesian decision networks, which combines Bayesian networks with the utility theory, to assign weights to different characteristics and consolidate the related variables to output the result. The model evaluation in a realistic testbed environment with three servers, an established HAC and a well-known EA shows that the model can improve the area under the receiver operating characteristic curve for prediction of locally manageable failures by up to 9.05% compared to the baseline HAC results.
C1 [Somasekaram, Premathas; Calinescu, Radu] Univ York, Dept Comp Sci, Deramore Lane, York YO10 5GH, N Yorkshire, England.
C3 University of York - UK
RP Somasekaram, P (corresponding author), Univ York, Dept Comp Sci, Deramore Lane, York YO10 5GH, N Yorkshire, England.
EM premathas.somasekaram@york.ac.uk
RI Somasekaram, Premathas/M-2773-2017
OI Somasekaram, Premathas/0000-0002-2971-7641; Calinescu,
   Radu/0000-0002-2678-9260
FU UK Research and Innovation [EP/V026747/1]; SPF [EP/V026747/1] Funding
   Source: UKRI
FX UK Research and Innovation, Grant/Award Number: EP/V026747/1
CR [Anonymous], 2013, The foundations of expected utility
   [Anonymous], 2003, Blueprints for High Availability
   Artoni F, 2018, NEUROIMAGE, V175, P176, DOI 10.1016/j.neuroimage.2018.03.016
   Ashraf RA, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807670
   Astekin M, 2019, SOFTWARE PRACT EXPER, V49, P153, DOI 10.1002/spe.2653
   Baldoni R, 2015, FUTURE GENER COMP SY, V45, P123, DOI 10.1016/j.future.2014.11.015
   BayesFusion L., 2019, GENIE MODELER USER M
   Beekhof Andrew, 2017, PACEMAKER 1 1 CONFIG
   Benz K, 2014, IEEE INT CONF CLOUD, P384, DOI 10.1109/CLOUD.2014.59
   Bott S. C., 2008, 2008 IEEE 35th International Conference on Plasma Science, DOI 10.1109/PLASMA.2008.4590968
   Calinescu R, 2021, COMPUTING, V103, P533, DOI 10.1007/s00607-020-00887-6
   Carriger JF, 2021, J ENVIRON MANAGE, V278, DOI 10.1016/j.jenvman.2020.111478
   Carvalho C.M., 2017, IEEE ICC, P1, DOI 10.1109/ICC.2017.7996968
   Cheng FT, 2005, IEEE INT CONF ROBOT, P4062
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   Christoforou A, 2013, IFIP ADV INF COMM TE, V412, P151
   Claudel B, 2006, LECT NOTES COMPUT SC, V4280, P184
   Constantinou AC, 2016, ARTIF INTELL MED, V67, P75, DOI 10.1016/j.artmed.2016.01.002
   Critchley Terry, 2014, HIGH AVAILABILITY IT
   Dangut MD, 2022, MECH SYST SIGNAL PR, V171, DOI 10.1016/j.ymssp.2022.108873
   Das A, 2018, HPDC '18: PROCEEDINGS OF THE 27TH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE PARALLEL AND DISTRIBUTED COMPUTING, P40, DOI 10.1145/3208040.3208051
   De Palma N, 2012, IEEE T PARALL DISTR, V23, P330, DOI 10.1109/TPDS.2011.161
   Dell Technologies Inc, 2012, EMC MISS CRIT BUS CO
   Di Sanzo P, 2021, SOFTWARE PRACT EXPER, V51, P46, DOI 10.1002/spe.2908
   Shoyari MF, 2021, SOFTWARE PRACT EXPER, V51, P1218, DOI 10.1002/spe.2953
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fernández J, 2004, COMPUT CARDIOL, V31, P181, DOI 10.1109/CIC.2004.1442902
   Frank A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING, DATA, AND ANALYTICS (HIPC), P323, DOI 10.1109/HiPC.2019.00047
   Gao J., 2020, IEEE T SERV COMPUT, V15
   Garcia A., 2011, International Journal of Performability Engineering, V7, P525
   Ghosh D, 2007, DECIS SUPPORT SYST, V42, P2164, DOI 10.1016/j.dss.2006.06.011
   Hanmer R. S., 2013, Patterns for Fault Tolerant Software
   HOWARD RA, 1988, MANAGE SCI, V34, P679, DOI 10.1287/mnsc.34.6.679
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   HUANG YN, 1995, DIG PAP INT SYMP FAU, P381, DOI 10.1109/FTCS.1995.466961
   IBM Corp. Released, 2021, IBM SPSS STAT WINDOW
   IBM Redbooks, 2008, BUILD HIGH AV STEELE
   Jammal M, 2016, INT CONF CLOUD ENG, P234, DOI 10.1109/IC2E.2016.44
   Johnson P, 2007, INFORM SYST FRONT, V9, P163, DOI 10.1007/s10796-007-9030-y
   Kao HY, 2008, COMPUT METH PROG BIO, V90, P9, DOI 10.1016/j.cmpb.2007.11.009
   Kawakami K, 2012, 2012 IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS (ICCE), P418, DOI 10.1109/ICCE.2012.6161956
   Khakzad N, 2021, RELIAB ENG SYST SAFE, V212, DOI 10.1016/j.ress.2021.107577
   Khan M, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON EDGE COMPUTING (IEEE EDGE), P106, DOI 10.1109/IEEE.EDGE.2017.22
   Kjaerulff U.B., 2008, Bayesian networks and influence diagrams, V200, P114, DOI DOI 10.1007/978-0-387-74101-7
   Korb K.B., 2010, Bayesian artificial intelligence, V2nd, DOI DOI 10.1201/B10391
   Leander J, 2018, ENG FAIL ANAL, V91, P306, DOI 10.1016/j.engfailanal.2018.04.033
   LEANGSUKSUN C, 2004, P 5 LCI INT C LIN CL, P18
   Lee YJ, 2008, 2008 22ND INTERNATIONAL WORKSHOPS ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOLS 1-3, P157, DOI 10.1109/WAINA.2008.36
   Li YW, 2006, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P531
   Liu HC, 2013, EXPERT SYST APPL, V40, P828, DOI 10.1016/j.eswa.2012.08.010
   Liu Y. Q., 2004, 2004 IEEE International Engineering Management Conference (IEEE Cat. No.04CH37574), P746
   Luoma E, 2021, MAR POLLUT BULL, V170, DOI 10.1016/j.marpolbul.2021.112614
   Luque A, 2019, PATTERN RECOGN, V91, P216, DOI 10.1016/j.patcog.2019.02.023
   Marcot BG, 2012, ECOL MODEL, V230, P50, DOI 10.1016/j.ecolmodel.2012.01.013
   Mayerl C, 2007, INFORMATION TECHNOLOGY MANAGEMENT FROM A BUSINESS PERSPECTIVE, P1, DOI 10.1109/BDIM.2007.375006
   Neapolitan R, 2016, TRANSPLANTATION, V100, P489, DOI 10.1097/TP.0000000000001145
   Nelson R, 2016, Health informatics-E-book: an interprofessional approach
   Nielsen J.J., 2010, ASRANET INTEGRATING
   Nielsen T.D., 2009, BAYESIAN NETWORKS DE
   Novell Inc, SAP APPL MAD HIGH AV
   Oonk S., 2016, P 2016 IEEE AUTOTEST, P1
   Oppenheimer D, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS (USITS'03), P1
   Oracle C, 2015, OR SOL CLUST SYST AD
   Pillay A, 2003, RELIAB ENG SYST SAFE, V79, P69, DOI 10.1016/S0951-8320(02)00179-5
   Pitakrat T, 2018, J SYST SOFTWARE, V137, P669, DOI 10.1016/j.jss.2017.02.041
   Platini M, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.6231
   Quintero D., 2013, IBM POWERHA SYSTEMMI
   Ranade Dilip M, 2003, VERITAS SERIES, V9
   Ranade DM., 2002, SHARED DATA CLUSTERS
   Rashid HSJ, 2015, ENG FAIL ANAL, V50, P7, DOI 10.1016/j.engfailanal.2014.12.013
   Reddy GT, 2020, IEEE ACCESS, V8, P54776, DOI 10.1109/ACCESS.2020.2980942
   Renooij S, 2001, KNOWL ENG REV, V16, P255, DOI 10.1017/S0269888901000145
   Insua DR, 2021, RISK ANAL, V41, P16, DOI 10.1111/risa.13331
   Roux J, 2021, MICROELECTRON RELIAB, V122, DOI 10.1016/j.microrel.2021.114135
   Salfner F, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1670679.1670680
   Schmidt K., 2006, High availability and disaster recovery: concepts, design, implementation, V22
   Schroeder B, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 5TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES ( FAST '07), P1
   Schroeder B, 2010, IEEE T DEPEND SECURE, V7, P337, DOI 10.1109/TDSC.2009.4
   Schurink CAM, 2005, LANCET INFECT DIS, V5, P305, DOI 10.1016/S1473-3099(05)70115-8
   Seixas FL, 2014, COMPUT BIOL MED, V51, P140, DOI 10.1016/j.compbiomed.2014.04.010
   Sen SD, 2015, AUTON AGENT MULTI-AG, V29, P1061, DOI 10.1007/s10458-014-9276-y
   Sethi T., 2019, P AAAI 19IAAI 19EAAI
   Somasekaram P., 2021, THESIS U YORK UK
   Somasekaram P., 2021, P 14 IEEEACM INT C U, P1
   Somasekaram P, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2021.111208
   Somasekaram Premathas, 2021, HOLISTIC MODELLING T
   SUSE LLC, 2012, SAP SUSE LIN ENT
   SUSE LLC, 2016, ENQ REPL SAP NETWEAV, P12
   Torres-Toledano JG, 1998, LECT NOTES ARTIF INT, V1484, P195
   Vaidyanathan K., 2001, Performance Evaluation Review, V29, P62, DOI 10.1145/384268.378434
   van der Gaag LC, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P647
   Veritas Technologies LLC, 2017, CLUST SERV 7 3 ADM G
   Vogels W, 1998, DIG PAP INT SYMP FAU, P422, DOI 10.1109/FTCS.1998.689494
   Wang G, 2017, EXPERT SYST APPL, V69, P247, DOI 10.1016/j.eswa.2016.10.011
   Wang SS, 2020, OPER MANAGE RES, V13, P94, DOI 10.1007/s12063-020-00148-x
   Weber P., 2002, P EUROPEAN C SYSTEM, P266
   Weflen E, 2022, EXPERT SYST APPL, V187, DOI 10.1016/j.eswa.2021.115866
   Xiao J, 2018, PROC INT CONF PARAL, DOI 10.1145/3225058.3225106
   Xie W, 2005, RELIAB ENG SYST SAFE, V87, P13, DOI 10.1016/j.ress.2004.02.011
   Zhang SL, 2018, P ACM MEAS ANAL COMP, V2, DOI [10.1145/3292040.3219643, 10.1145/3179405]
NR 100
TC 0
Z9 0
U1 4
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2191
EP 2225
DI 10.1002/spe.3119
EA JUL 2022
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000822584800001
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Zhao, ZM
   Koulouzis, S
   Bianchi, R
   Farshidi, S
   Shi, ZS
   Xin, RY
   Wang, YD
   Li, N
   Shi, YF
   Timmermans, J
   Kissling, WD
AF Zhao, Zhiming
   Koulouzis, Spiros
   Bianchi, Riccardo
   Farshidi, Siamak
   Shi, Zeshun
   Xin, Ruyue
   Wang, Yuandou
   Li, Na
   Shi, Yifang
   Timmermans, Joris
   Kissling, W. Daniel
TI Notebook-as-a-VRE (NaaVRE): From private notebooks to a collaborative
   cloud virtual research environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud; Jupyter; virtual research environment
AB Virtual research environments (VREs) provide user-centric support in the lifecycle of research activities, for example, discovering and accessing research assets or composing and executing application workflows. A typical VRE is often implemented as an integrated environment, including a catalog of research assets, a workflow management system, a data management framework, and tools for enabling user collaboration. In contrast, notebook environments like Jupyter allow researchers to rapidly prototype scientific code and share their experiments as online accessible notebooks. Jupyter can support several popular languages used by data scientists, such as Python, R, and Julia. However, such notebook environments do not have seamless support for running heavy computations on remote infrastructure or finding and accessing collaborative software code inside notebooks. This article investigates the gap between a notebook environment and a VRE and proposes an embedded VRE solution for the Jupyter environment called Notebook-as-a-VRE (NaaVRE). The NaaVRE solution provides functional components via a component marketplace and allows users to create a customized VRE on top of the Jupyter environment. From the VRE, a user can search research assets (data, software, and algorithms), compose workflows, manage the lifecycle of an experiment, and share the results among users in the community. We demonstrate how such a solution can enhance a legacy workflow that uses Light Detection and Ranging (LiDAR) data from country-wide airborne laser scanning surveys for deriving geospatial data products of ecosystem structure at high resolution over broad spatial extents. This enables users to scale out the processing of multi-terabyte LiDAR point clouds for ecological applications to more data sources in a distributed cloud environment. Similar applications could be developed for workflows producing other essential biodiversity variables.
C1 [Zhao, Zhiming; Koulouzis, Spiros; Bianchi, Riccardo; Farshidi, Siamak; Shi, Zeshun; Xin, Ruyue; Wang, Yuandou; Li, Na] Univ Amsterdam, Multiscale Networked Syst, Sci Pk 904, NL-1098 XH Amsterdam, Netherlands.
   [Zhao, Zhiming; Koulouzis, Spiros; Bianchi, Riccardo; Shi, Yifang; Timmermans, Joris; Kissling, W. Daniel] Virtual Lab & Innovat Ctr VLIC, LifeWatch ERIC, Amsterdam, Netherlands.
   [Shi, Yifang; Timmermans, Joris; Kissling, W. Daniel] Univ Amsterdam, Inst Biodivers & Ecosyst Dynam IBED, Amsterdam, Netherlands.
C3 University of Amsterdam; University of Amsterdam
RP Zhao, ZM (corresponding author), Univ Amsterdam, Multiscale Networked Syst, Sci Pk 904, NL-1098 XH Amsterdam, Netherlands.
EM z.zhao@uva.nl
RI Zhao, Zhiming/AAW-6752-2020; Wang, Yuandou/ITT-0973-2023; Xin,
   R/JWP-9782-2024; Timmermans, Joris/AAR-6588-2021; Farshidi,
   Siamak/GQH-3241-2022
OI Zhao, Zhiming/0000-0002-6717-9418; Timmermans,
   Joris/0000-0003-0628-1803; Li, Na/0000-0001-7799-876X; Koulouzis,
   Spiros/0000-0001-8652-315X; Xin, Ruyue/0000-0001-5821-4835; Farshidi,
   Siamak/0000-0001-6139-921X; Farshidi, Siamak/0000-0003-3270-4398; Shi,
   Zeshun/0000-0001-9163-8023
FU EU [860627, 824068, 862409, 825134]; Microsoft
   [AI4E-1111-Q3N7-20100806]; Netherlands eScience Center [ASDI.2016.014]
FX EU Horizon 2020 Marie Sklodowska-Curie Actions, Grant/Award Number:
   860627; EU Horizon 2020 Framework Programme, Grant/Award Numbers:
   824068, 862409, 825134; Microsoft, Grant/Award Number:
   AI4E-1111-Q3N7-20100806; Netherlands eScience Center, Grant/Award
   Number: ASDI.2016.014
CR Akers RL, 1997, IEEE COMPUT SCI ENG, V4, P32, DOI 10.1109/99.615429
   Alwasel K, 2021, SOFTWARE PRACT EXPER, V51, P893, DOI 10.1002/spe.2917
   Calyam P, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.6099
   De Roure David, 2008, 2008 IEEE Fourth International Conference on eScience, P182, DOI 10.1109/eScience.2008.86
   Desconnets JC, 2017, INT J APPL EARTH OBS, V54, P95, DOI 10.1016/j.jag.2016.09.010
   El Khaldi Ahanach Elias, 2019, 2019 15th International Conference on eScience (eScience). Proceedings, P634, DOI 10.1109/eScience.2019.00093
   Henderson ML., 2019, ACCELERATING EXPT SC, P145
   Hu G, 2020, SOFTWARE PRACT EXPER, V50, P299, DOI 10.1002/spe.2760
   Jeffery K., 2020, INTEROPERABLE RES IN, P17
   Kacsuk, 2014, SCI GATEWAYS DISTRIB, V10, P978
   Kanazawa H, 2005, FIRST INTERNATIONAL CONFERENCE ON E-SCIENCE AND GRID COMPUTING, PROCEEDINGS, P456, DOI 10.1109/E-SCIENCE.2005.66
   Koulouzis S., 2021, P EGU GEN ASSEMBLY C
   Koulouzis S, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5269
   Kruijer W., 2020, P INT C HIGH PERFORM, P1
   Martin P, 2019, FUTURE GENER COMP SY, V101, P1, DOI 10.1016/j.future.2019.05.076
   Meijer C, 2020, SOFTWAREX, V12, DOI 10.1016/j.softx.2020.100626
   Miller MT, 2012, IEEE POW ENER SOC GE
   Navarro LM, 2017, CURR OPIN ENV SUST, V29, P158, DOI 10.1016/j.cosust.2018.02.005
   Paolini A., 2020, INTEROPERABLE RES IN, P247, DOI DOI 10.1145/3324884.3416585
   Parodi A, 2017, B AM METEOROL SOC, V98, P2149, DOI [10.1175/bams-d-16-0279.1, 10.1175/BAMS-D-16-0279.1]
   Pereira HM., 2022, PREPRINT
   Perkel JM, 2018, NATURE, V563, P145, DOI 10.1038/d41586-018-07196-1
   Ragan-Kelley B., 2018, P 17 PYTH SCI C, P113, DOI [10.25080/Majora-4af1f417-011, DOI 10.25080/MAJORA-4AF1F417-011]
   Roth B., 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P267, DOI 10.1109/COMPSACW.2011.53
   Skidmore AK, 2021, NAT ECOL EVOL, V5, P896, DOI 10.1038/s41559-021-01451-x
   Stodden V, 2020, COMMUN ACM, V63, P58, DOI 10.1145/3360646
   Tenopir C, 2011, PLOS ONE, V6, DOI 10.1371/journal.pone.0021101
   Tuli S, 2020, INTERNET TECHNOL LET, V3, DOI 10.1002/itl2.145
   Valbuena R, 2020, TRENDS ECOL EVOL, V35, P656, DOI 10.1016/j.tree.2020.03.006
   Vermeulen A., 2020, Towards Interoperable Research Infrastructures for Environmental and Earth Sciences: A Reference Model Guided Approach for Common Challenges, P3, DOI [10.1007/978-3-030-52829-4_1, DOI 10.1007/978-3-030-52829-4_1]
   Wang JW, 2020, IEEE INT CONF AUTOM, P138, DOI 10.1145/3324884.3416585
   Zhao ZM, 2007, CCGRID 2007: SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P655
   Zhao ZM, 2019, IEEE WORLD CONGR SER, P127, DOI 10.1109/SERVICES.2019.00041
NR 33
TC 9
Z9 9
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2022
VL 52
IS 9
BP 1947
EP 1966
DI 10.1002/spe.3098
EA MAY 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3T7YW
UT WOS:000796769500001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Cai, WW
   He, FZ
   Yang, SX
   Lv, X
   Cheng, Y
AF Cai, Weiwei
   He, Fazhi
   Yang, Shangxu
   Lv, Xiao
   Cheng, Yuan
TI Self-compressing object sequence for consistency maintenance in
   co-editors
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE address space transformation; collaborative editing; collaborative
   systems; consistency maintenance; human-to-human collaboration
ID MODEL
AB Co-editors are a class of human-centered collaborative systems that allow multiple geographically dispersed people to freely and concurrently edit shared documents at the same time over networks. The most important building co-editors technique is consistency maintenance. Even though OT (operational transformation) is a widely adopted consistency maintenance technique, researchers and practitioners have persistently explored alternative techniques to OT. One of the representative techniques is AST (Address Space Transformation), which replaces OT's transformation components with basic manipulation on an additional object sequence. However, the additional object sequence causes an unbounded metadata overhead problem. To solve the problem, this work proposes an optimized AST algorithm called ASTO, which is equipped with a specially designed self-compressing object sequence. ASTO can automatically compress the object sequence and keep the metadata overhead under control. The effectiveness and feasibility of ASTO are verified by simulation experiments and a publicly accessible prototype system.
C1 [Cai, Weiwei; He, Fazhi; Yang, Shangxu] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Hubei, Peoples R China.
   [Lv, Xiao] Naval Univ Engn, Dept Comp Engn, Wuhan, Hubei, Peoples R China.
   [Cheng, Yuan] Wuhan Univ, Sch Informat Management, Wuhan, Hubei, Peoples R China.
C3 Wuhan University; Wuhan Naval University of Engineering; Wuhan
   University
RP He, FZ (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan 430072, Hubei, Peoples R China.
EM fzhe@whu.edu.cn
RI He, Fazhi/Q-3691-2018
FU National Natural Science Foundation of China [62072348]; Natural Science
   Foundation of Hubei Province [2019CFB627]; Science and Technology Major
   Project of Hubei Province (Next-Generation AI Technologies) [2019AEA170]
FX National Natural Science Foundation of China, Grant/Award Number:
   62072348; Natural Science Foundation of Hubei Province, Grant/Award
   Number: 2019CFB627; Science and Technology Major Project of Hubei
   Province (Next-Generation AI Technologies), Grant/Award Number:
   2019AEA170
CR Agustina A, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P5
   Ahmed-Nacer M, 2011, DOCENG 2011: PROCEEDINGS OF THE 2011 ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P103
   [Anonymous], 2017, EAI ENDORS T COLLABO, DOI DOI 10.4108/EAI.30-6-2017.152755
   [Anonymous], 2005, P 2005 INT ACM SIGGR
   Arora R, 2017, SOFTWARE PRACT EXPER, V47, P1393, DOI 10.1002/spe.2468
   Attiya H, 2021, THEOR COMPUT SCI, V855, P141, DOI 10.1016/j.tcs.2020.11.046
   Bartel JW, 2018, COMPUT SUPP COOP W J, V27, P983, DOI 10.1007/s10606-018-9321-5
   Baykal GE, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376291
   Bravo C, 2013, J SYST SOFTWARE, V86, P1759, DOI 10.1016/j.jss.2012.08.039
   Briola D, 2019, SOFTWARE PRACT EXPER, V49, P549, DOI 10.1002/spe.2657
   Briot L., 2016, ACM INT C SUPP GROUP, P51, DOI [10.1145/2957276.2957300, DOI 10.1145/2957276.2957300]
   Cai WW, 2019, INT C COMP SUPP COOP, P386, DOI [10.1109/cscwd.2019.8791849, 10.1109/CSCWD.2019.8791849]
   Chen YL, 2020, APPL SOFT COMPUT, V93, DOI 10.1016/j.asoc.2020.106335
   Chengzheng Sun, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3375186
   Chengzheng Sun, 1998, ACM Transactions on Computer-Human Interaction, V5, P63, DOI 10.1145/274444.274447
   Cho Bryden, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3361126
   de Almeida DS, 2018, SOFTWARE PRACT EXPER, V48, P197, DOI 10.1002/spe.2506
   Fan HF, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9214642
   Fan HF, 2017, IEEE ACCESS, V5, P22566, DOI 10.1109/ACCESS.2017.2760914
   Fan HF, 2012, PROCEEDINGS OF THE 17TH ACM INTERNATIONAL CONFERENCE ON SUPPORTING GROUP WORK, P107
   Gao LP, 2019, J INTERNET TECHNOL, V20, P1, DOI 10.3966/160792642019012001001
   Gao LP, 2018, MULTIMED TOOLS APPL, V77, P5067, DOI 10.1007/s11042-017-5242-4
   Gao LP, 2016, CLUSTER COMPUT, V19, P255, DOI 10.1007/s10586-015-0499-8
   Gu N, 2007, GROUP'07: PROCEEDINGS OF THE 2007 INTERNATIONAL ACM CONFERENCE ON SUPPORTING GROUP WORK, P157
   Imine Abdessamad, 2008, 2008 28th International Conference on Distributed Computing Systems Workshops (ICDCS Workshops), P423, DOI 10.1109/ICDCS.Workshops.2008.91
   Jiang T, 2019, IEEE ACCESS, V7, P151692, DOI 10.1109/ACCESS.2019.2948021
   Kim BC, 2021, J COMPUT DES ENG, V8, P409, DOI 10.1093/jcde/qwaa087
   Kim H, 2020, COMPUT IND, V123, DOI 10.1016/j.compind.2020.103320
   Kim H, 2021, MULTIMED TOOLS APPL, V80, P10859, DOI 10.1007/s11042-020-10283-z
   Lee H, 2021, J COMPUT DES ENG, V8, P824, DOI 10.1093/jcde/qwab017
   Li D, 2008, COMPUT SUPP COOP W J, V17, P469, DOI 10.1007/s10606-005-9008-6
   Li HR, 2021, MEMET COMPUT, V13, P1, DOI 10.1007/s12293-021-00328-7
   Li HR, 2020, SOFT COMPUT, V24, P6851, DOI 10.1007/s00500-019-04324-5
   Li R, 2004, TENTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P429
   Li R, 2007, IEEE T PARALL DISTR, V18, P307, DOI 10.1109/TPDS.2007.35
   Liang YQ, 2022, INTEGR COMPUT-AID E, V29, P23, DOI 10.3233/ICA-210661
   Liang YQ, 2020, INTEGR COMPUT-AID E, V27, P417, DOI 10.3233/ICA-200641
   Liu RC, 2021, SOFTWARE PRACT EXPER, V51, P1080, DOI 10.1002/spe.2935
   Luo JK, 2022, INT J BIO-INSPIR COM, V20, P71, DOI 10.1504/IJBIC.2022.126764
   Luo JK, 2022, INT J BIO-INSPIR COM, V19, P124, DOI 10.1504/IJBIC.2022.121238
   Lv X, 2017, ADV ENG INFORM, V33, P397, DOI 10.1016/j.aei.2016.10.005
   Mechaoui MD, 2016, PEER PEER NETW APPL, V9, P1242, DOI 10.1007/s12083-016-0439-2
   Ng A., 2016, P 19 INT C SUPP GROU, P61
   Nicolaescu P., P ACM GROUP, DOI [10.1145/2957276.2957310, DOI 10.1145/2957276.2957310]
   Oster G., P ACM CSCW, DOI [10.1145/1180875.1180916, DOI 10.1145/1180875.1180916]
   Pan YT, 2020, WORLD WIDE WEB, V23, P2259, DOI 10.1007/s11280-020-00793-z
   Preguiça N, 2009, INT CON DISTR COMP S, P395, DOI 10.1109/ICDCS.2009.20
   Randolph A, 2015, IEEE T COMPUT, V64, P1074, DOI 10.1109/TC.2014.2308203
   Roh HG, 2011, J PARALLEL DISTR COM, V71, P354, DOI 10.1016/j.jpdc.2010.12.006
   Shao B., 2010, P 2010 ACM INT C SUP, P131
   Shapiro M., 2011, INRIA TECHNICAL REPO
   Song YP, 2022, COMPUT AIDED DESIGN, V146, DOI 10.1016/j.cad.2022.103196
   Song YP, 2022, MULTIMED TOOLS APPL, V81, P13961, DOI 10.1007/s11042-022-12036-6
   Sun C., 2006, ACM Transactions on Computer-Human Interaction, V13, P531, DOI 10.1145/1188816.1188821
   Sun C., 1998, ACM 1998 Conference on Computer Supported Cooperative Work. Proceedings. CSCW 98, P59, DOI 10.1145/289444.289469
   Sun CZ, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P2504, DOI 10.1145/2998181.2998252
   Sun David, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3392825
   Sun D, 2009, IEEE T PARALL DISTR, V20, P1454, DOI 10.1109/TPDS.2008.240
   Weiss S, 2010, IEEE T PARALL DISTR, V21, P1162, DOI 10.1109/TPDS.2009.173
   Wu CX, 2019, EURASIP J IMAGE VIDE, DOI 10.1186/s13640-019-0427-6
   Wu HR, 2022, INTEGR COMPUT-AID E, V29, P141, DOI 10.3233/ICA-210672
   Xia, 2014, P 17 ACM C COMP SUPP, P530
   Xu Y, 2016, IEEE T PARALL DISTR, V27, P695, DOI 10.1109/TPDS.2015.2412938
   Yu HP, 2020, MULTIMED TOOLS APPL, V79, P5743, DOI 10.1007/s11042-019-08493-1
   Yu Weihai, 2014, P 18 INT C SUPPORTIN, P226, DOI [10.1145/2660398.2660401, DOI 10.1145/2660398.2660401]
   Zhang JH, 2017, INT C COMP SUPP COOP, P162, DOI 10.1109/CSCWD.2017.8066688
   Zhang SD, 2020, VISUAL COMPUT, V36, P1797, DOI 10.1007/s00371-019-01774-8
   Zhang SD, 2020, VISUAL COMPUT, V36, P305, DOI 10.1007/s00371-018-1612-9
NR 68
TC 0
Z9 3
U1 4
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2022
VL 52
IS 8
BP 1802
EP 1825
DI 10.1002/spe.3090
EA APR 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2R3HL
UT WOS:000789503700001
DA 2024-07-18
ER

PT J
AU Bodkhe, U
   Tanwar, S
AF Bodkhe, Umesh
   Tanwar, Sudeep
TI Secure data dissemination techniques for IoT applications: Research
   challenges and opportunities
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Blockchain; Data dissemination; Internet of battlefield things; Internet
   of drones; Internet of Things; Internet of vehicles; Security
ID IDENTITY-BASED ENCRYPTION; BROADCAST ENCRYPTION; BATTLEFIELD THINGS;
   ENERGY-EFFICIENT; TACTILE INTERNET; DATA ANALYTICS; SCHEME; PROTOCOL;
   AGGREGATION; FRAMEWORK
AB Internet of Things (IoT) connects different objects in the physical world to the Internet, and various Internet protocols are used to provide communication services to a large number of these embedded devices termed as smart devices. But, these devices are resource-constrained, low configured, and have very low power storage capacity, which depends on the services offered by the protocols. For the exchange of information to the end-users, smart devices communicate through an open channel, such as the Internet, which is not secure enough. Moreover, efficient delivery ratio, secure data forwarding are not achieved because of the enormous amount of data produced by these smart devices and the possibility of security threats. So there is a need to devise a secure and reliable data dissemination scheme for the IoT environment. Motivated from the these facts, this paper presents a systematic review and propose a solution taxonomy for secure data dissemination techniques for various smart IoT-based applications. This paper also includes a comparison of the state-of-the-art data dissemination techniques used for the Internet of Vehicles (IoVs), Internet of Drones (IoDs), and Internet of Battlefield Things (IoBTs) applications along with their merits and demerits. Finally, the research challenges and possible countermeasures are also discussed in detail, which gives insights to the beginners who want to start work in this emerging area.
C1 [Bodkhe, Umesh; Tanwar, Sudeep] Nirma Univ, Inst Technol, Dept Comp Sci & Engn, Ahmadabad 382481, Gujarat, India.
C3 Nirma University
RP Tanwar, S (corresponding author), Nirma Univ, Inst Technol, Dept Comp Sci & Engn, Ahmadabad 382481, Gujarat, India.
EM sudeep.tanwar@nirmauni.ac.in
RI Tanwar, Sudeep/AAI-6709-2020
OI Tanwar, Sudeep/0000-0002-1776-4651
CR Abdelzaher T, 2018, COMPUTER, V51, P24, DOI 10.1109/MC.2018.2876048
   Aggarwal S., 2019, 2019 IEEE International Conference on Communications ICC, P1
   Ahmad F., 2019, IFIP WIREL DAY, P1
   Al-Turjman F, 2018, IEEE SENS J, V18, P470, DOI 10.1109/JSEN.2017.2761396
   Almasoud AM, 2019, IEEE T COGN COMMUN, V5, P849, DOI 10.1109/TCCN.2019.2922263
   Alqasir A., 2018, PAPER PRESENTED P 20, P1
   Alsamhi SH, 2019, IEEE ACCESS, V7, P128125, DOI 10.1109/ACCESS.2019.2934998
   Alsamhi SH, 2019, DRONES-BASEL, V3, DOI 10.3390/drones3010013
   Amrutha S., 2016, INDIAN J SCI TECHNOL, V9, P1, DOI DOI 10.17485/ijst/2016/v9i48/108022
   Balamurugan V., 2017, INT J PURE APPL MATH, V117, P399
   Banerjee S, 2018, IEEE ACCESS, V6, P20673, DOI 10.1109/ACCESS.2018.2827027
   Ben Arbia D, 2015, IEEE CONF WIREL MOB, P1, DOI 10.1109/WiMOB.2015.7347933
   Bhatia J, 2020, COMPUT COMMUN, V149, P162, DOI 10.1016/j.comcom.2019.10.011
   Bhatia J, 2019, INT J COMMUN SYST, V32, DOI 10.1002/dac.4005
   Bhattacharya P, 2021, IEEE T NETW SCI ENG, V8, P1242, DOI 10.1109/TNSE.2019.2961932
   Bodkhe U, 2019, INT CONF COMP INFO, P237, DOI 10.1109/cits.2019.8862001
   Boneh D, 2005, LECT NOTES COMPUT SC, V3621, P258
   Boneh D, 2004, LECT NOTES COMPUT SC, V3027, P223
   Boneh D, 2003, SIAM J COMPUT, V32, P586, DOI 10.1137/S0097539701398521
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budhiraja I, 2019, IEEE T IND INFORM, V15, P6354, DOI 10.1109/TII.2019.2910532
   Burhan M, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18092796
   Chang CY, 2015, APPL SCI-BASEL, V5, P1882, DOI 10.3390/app5041882
   Chatterjea S., 2003, 14 P RISC WORKSH CIR, P1
   Chen PY, 2018, IEEE INTERNET THINGS, V5, P2467, DOI 10.1109/JIOT.2018.2846722
   Cocks C., 2001, CRYPTOGRAPHY CODING, V2260, P360, DOI DOI 10.1007/3-540-45325-3
   Daneels G, 2017, GLOB INFORM INFRAS, P23, DOI 10.1109/GIIS.2017.8169799
   Davis G., 2020, P 2018 IEEE INT C CO, V2018, P1
   Fan XY, 2019, WIREL COMMUN MOB COM, DOI 10.1155/2019/2150524
   Farooq MJ, 2017, PAPER PRESENTED P 15, P1
   Farooq MJ, 2018, IEEE T WIREL COMMUN, V17, P2618, DOI 10.1109/TWC.2018.2799860
   Gonizzi P, 2015, INFORM FUSION, V22, P16, DOI 10.1016/j.inffus.2013.04.003
   Gulati A., 2018, PROC IEEE INT C COMM, V2018, P1
   Gupta R., 2019, INT CONF COMP INFO, P1
   Hathaliya JJ, 2019, COMPUT ELECTR ENG, V76, P398, DOI 10.1016/j.compeleceng.2019.04.017
   Heinzelman WB, 2002, IEEE T WIREL COMMUN, V1, P660, DOI 10.1109/TWC.2002.804190
   Hwang YH, 2007, LECT NOTES COMPUT SC, V4575, P2
   Jelasity M, 2005, ACM T COMPUT SYST, V23, P219, DOI 10.1145/1082469.1082470
   Jelasity M, 2007, ACM T COMPUT SYST, V25, DOI 10.1145/1275517.1275520
   Jelasity M, 2005, LECT NOTES ARTIF INT, V3910, P1
   Kabra N, 2020, FUTURE GENER COMP SY, V102, P574, DOI 10.1016/j.future.2019.08.035
   Kapitonov A, 2017, 2017 WORKSHOP ON RESEARCH, EDUCATION AND DEVELOPMENT OF UNMANNED AERIAL SYSTEMS (RED-UAS), P84, DOI 10.1109/RED-UAS.2017.8101648
   Kim JY, 2018, IEEE T DEPEND SECURE, V15, P1041, DOI 10.1109/TDSC.2016.2639503
   Kim M, 2018, KSII T INTERNET INF, V12, P5744, DOI 10.3837/tiis.2018.12.008
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kumari A, 2019, IEEE WIREL COMMUN, V26, P47, DOI 10.1109/MWC.2019.1800356
   Kumari A, 2019, IET NETW, V8, P155, DOI 10.1049/iet-net.2018.5187
   Kumari A, 2019, J NETW COMPUT APPL, V128, P90, DOI 10.1016/j.jnca.2018.12.013
   Kumari A, 2018, COMPUT ELECTR ENG, V72, P1, DOI 10.1016/j.compeleceng.2018.08.015
   Kumari A, 2018, J NETW COMPUT APPL, V124, P169, DOI 10.1016/j.jnca.2018.09.014
   Langson J., 2017, SECURITY IMPLICATION
   Liang XP, 2017, IEEE MILIT COMMUN C, P261, DOI 10.1109/MILCOM.2017.8170858
   Libert B, 2012, LECT NOTES COMPUT SC, V7293, P206, DOI 10.1007/978-3-642-30057-8_13
   Lin C, 2018, IEEE COMMUN MAG, V56, P64, DOI 10.1109/MCOM.2017.1700390
   Liu L, 2018, VEH COMMUN, V13, P78, DOI 10.1016/j.vehcom.2018.05.002
   Martínez JA, 2017, INT J DISTRIB SENS N, V13, DOI 10.1177/1550147717727974
   Mistry I, 2020, MECH SYST SIGNAL PR, V135, DOI 10.1016/j.ymssp.2019.106382
   Nobre J, 2016, IEEE COMMUN MAG, V54, P152, DOI 10.1109/MCOM.2016.7588285
   Park JH, 2008, IEEE T BROADCAST, V54, P401, DOI 10.1109/TBC.2008.919940
   PayalJ AC., 2017, INT J COMPUT SCI MOB, V6, P15
   Radhika R., 2018, INT C PHOEN EM CURR, P24
   Rajagopalan R, 2006, IEEE COMMUN SURV TUT, V8, P48, DOI 10.1109/COMST.2006.283821
   Ramprakash A., 2020, PRINCIPLES INTERNET, P385, DOI [10.1007/978-3-030-33596-0_16, DOI 10.1007/978-3-030-33596-0_16]
   Rizomiliotis Panagiotis., 2015, Proc. 2015 ACM Workshop Cloud Computing Security Workshop, P65
   Sarhan Q., 2018, Int. J. Int. Things Cyber Assur., V1, P40, DOI DOI 10.1504/IJITCA.2018.090162
   Sfar AR, 2018, DIGIT COMMUN NETW, V4, P118, DOI 10.1016/j.dcan.2017.04.003
   Sharma V, 2017, PROCEEDINGS OF THE 2017 INTERNATIONAL WORKSHOP ON MANAGING INSIDER SECURITY THREATS (MIST'17), P81, DOI 10.1145/3139923.3139932
   Shi H, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19122651
   Singh R, 2020, SECUR PRIVACY, V3, DOI 10.1002/spy2.96
   Suri N., 2016, MILITARY COMMUNICATI, P1
   Tanwar S, 2020, J INF SECUR APPL, V50, DOI 10.1016/j.jisa.2019.102407
   Tanwar S, 2019, IEEE WIREL COMMUN, V26, P66, DOI 10.1109/MWC.2019.1800553
   Tanwar S, 2018, SECUR PRIVACY, V1, DOI 10.1002/spy2.39
   Tanwar S, 2019, IEEE SYST J, V13, P313, DOI 10.1109/JSYST.2018.2818618
   Tanwar S, 2015, J NETW COMPUT APPL, V53, P39, DOI 10.1016/j.jnca.2015.03.004
   Tanwar S, 2014, INT J COMMUN SYST, V27, P1289, DOI 10.1002/dac.2780
   Teng HJ, 2019, FUTURE GENER COMP SY, V94, P351, DOI 10.1016/j.future.2018.11.039
   Tortonesi M, 2016, 2016 IEEE 3RD WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P111, DOI 10.1109/WF-IoT.2016.7845503
   Trihinas D, 2017, IEEE INFOCOM SER
   Tyagi S, 2015, TELECOMMUN SYST, V59, P43, DOI 10.1007/s11235-014-9884-5
   Tyagi S, 2013, 2013 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P1485, DOI 10.1109/ICACCI.2013.6637399
   Varghese V, 2019, WIRELESS PERS COMMUN, V106, P423, DOI 10.1007/s11277-019-06170-y
   VORA J., 2018, 2018 IEEE Globecom Workshops (GC Wkshps), P1, DOI DOI 10.1109/GLOCOMW.2018.8644088
   Wu DJ, 2016, LECT NOTES COMPUT SC, V9879, P301, DOI 10.1007/978-3-319-45741-3_16
   Younis O, 2004, IEEE T MOBILE COMPUT, V3, P366, DOI 10.1109/TMC.2004.41
NR 86
TC 23
Z9 24
U1 2
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2469
EP 2491
DI 10.1002/spe.2811
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000713879400010
DA 2024-07-18
ER

PT J
AU Ferreira, F
   Borges, HS
   Valente, MT
AF Ferreira, Fabio
   Borges, Hudson Silva
   Valente, Marco Tulio
TI On the (un-)adoption of JavaScript front-end frameworks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE front-end frameworks; JavaScript; software modernization; software
   reengineering
ID USER ACCEPTANCE
AB JavaScript is characterized by a rich ecosystem of libraries and frameworks. A key element in this ecosystem are frameworks used for implementing the front-end of web-based applications, such as Vue and React. However, despite their relevance, we have few works investigating the factors that drive the adoption-and un-adoption-of front-end-based JavaScript frameworks. Therefore, in this article, we first report the results of a survey with 49 developers where we asked them to describe the factors they consider when selecting a front-end framework. In the second part of the work, we focus on projects that migrate from one framework to another since JavaScript's ecosystem is also very dynamic. Finally, we provide a quantitative characterization of the migration effort and reveal the main barriers faced by the developers during this effort. Although not completely generalizable, our central findings are as follows: (a) popularity and learnability are the key factors that motivate the choice of front-end frameworks in JavaScript; (b) from the 49 surveyed developers, one out of four have plans to migrate to another framework in the future; (c) the time spent performing the migration is greater than or equal to the time spent using the old framework in all studied projects. We conclude with a list of implications for practitioners, framework developers, tool builders, and researchers.
C1 [Ferreira, Fabio; Valente, Marco Tulio] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
   [Ferreira, Fabio] Ctr Informat, IF Sudeste MG Campus Barbacena, Barbacena, MG, Brazil.
   [Borges, Hudson Silva] Univ Fed Mato Grosso do Sul, Dept Comp Sci, Campo Grande, MS, Brazil.
C3 Universidade Federal de Minas Gerais; Universidade Federal de Mato
   Grosso do Sul
RP Ferreira, F (corresponding author), Ctr Informat, IF Sudeste MG Campus Barbacena, Barbacena, MG, Brazil.
EM fabio.ferreira@ifsudestemg.edu.br
RI Ferreira, Fábio/HGU-3176-2022; Ferreira, Fábio/JBR-9074-2023
OI Ferreira, Fábio/0000-0003-4485-3219; Ferreira,
   Fábio/0000-0003-4485-3219; Valente, Marco Tulio/0000-0002-8180-7548
FU FAPEMIG; CNPq
FX Our research is supported by FAPEMIG and CNPq.
CR Bajammal M, 2018, IEEE INT CONF AUTOM, P601, DOI 10.1145/3238147.3238194
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Gizas A., 2012, P 21 INT C COMPANION, P513
   Graziotin D, 2013, LECT NOTES COMPUT SC, V7983, P334, DOI 10.1007/978-3-642-39259-7_28
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Mariano C, 2017, THESIS TECHNOLOGICAL
   Mikowski M., 2013, SINGLE PAGE WEB APPL
   Nakajima N, 2019, ASIA PAC SOFWR ENG, P474, DOI 10.1109/APSEC48747.2019.00070
   Ocariza FS, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P325, DOI 10.1109/ICSE.2015.52
   Pano A, 2018, EMPIR SOFTW ENG, V23, P3503, DOI 10.1007/s10664-018-9613-x
   Polancic G, 2011, COMPUT HUM BEHAV, V27, P730, DOI 10.1016/j.chb.2010.10.006
   Ramos M, 2018, IEEE SOFTWARE, V35, P72, DOI 10.1109/MS.2017.265100610
   Ramos M, 2016, PLATEAU'16: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON EVALUATION AND USABILITY OF PROGRAMMING LANGUAGES AND TOOLS, P9, DOI 10.1145/3001878.3001881
   Robles G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P167, DOI 10.1109/MSR.2009.5069497
   Rudafshani M, 2017, SOFTWARE PRACT EXPER, V47, P97, DOI 10.1002/spe.2406
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Silva LH, 2017, LECT NOTES COMPUT SC, V10221, P155, DOI 10.1007/978-3-319-56856-0_11
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Wei SY, 2016, SOFTWARE PRACT EXPER, V46, P867, DOI 10.1002/spe.2334
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Wohlin C., 2012, Experimentation in Software Engineering
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P589, DOI [10.1109/saner.2019.8667997, 10.1109/SANER.2019.8667997]
NR 28
TC 5
Z9 5
U1 9
U2 68
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 947
EP 966
DI 10.1002/spe.3044
EA OCT 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000708007300001
DA 2024-07-18
ER

PT J
AU Ai, L
   Deng, YH
   Zhou, Y
   Feng, H
AF Ai, Liang
   Deng, Yuhui
   Zhou, Yi
   Feng, Hao
TI RUE: A caching method for identifying and managing hot data by
   leveraging resource utilization efficiency
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cache replacement algorithm; caching; hot data identification and
   management; resource utilization efficiency; reuse distance
AB In this study, we propose a caching method called RUE for dynamic large-scale data streams. We define a data model to facilitate hot data identification and management. At the heart of RUE model is hot degree that takes into account two factors data resource utilization efficiency and reuse distance, aiming to quantitatively reflect data popularity in a dynamic data stream. Based on data's hot degree, RUE classifies data into four types, each of which is assigned with an associated cache residence time. Guided by RUE model, we develop HM algorithm to identify and manage hot data in a dynamic data stream. HM algorithm is implemented by four stacks, namely, new stack, short stack, long stack, and temp stack. Moreover, an eviction and a migration algorithms are integrated into HM to facilitate block replacement and migration. To evaluate the performance of HM algorithm, we quantitatively compare the performance of RUE with three state-of-art algorithms, namely, LRU, LIRS, and ARC under various replacement policies, operations, and workloads. Experimental results show that RUE outperforms these three existing algorithms in terms of both read and write hit rates. Furthermore, we show that with the four stacks in place, the computing overhead of HM is negligible.
C1 [Ai, Liang; Deng, Yuhui; Feng, Hao] Jinan Univ, Dept Comp Sci, Guangzhou 510632, Peoples R China.
   [Deng, Yuhui] Wuhan Natl Lab Optoelect, Wuhan, Peoples R China.
   [Zhou, Yi] Columbus State Univ, TSYS Sch Comp Sci, Columbus, GA USA.
C3 Jinan University; Huazhong University of Science & Technology;
   University System of Georgia; Columbus State University
RP Deng, YH (corresponding author), Jinan Univ, Dept Comp Sci, Guangzhou 510632, Peoples R China.
EM tyhdeng@jnu.edu.cn
OI , Yi/0000-0002-1460-322X
FU International Cooperation Project of Guangdong Province
   [2020A0505100040]
FX International Cooperation Project of Guangdong Province, Grant/Award
   Number: 2020A0505100040
CR [Anonymous], 2012, COMPUTER ARCHITECTUR
   Arlitt M, 2000, PERF E R SI, V27, P3, DOI [10.1145/362883.362920, 10.1145/346000.346003]
   Beckmann N, 2017, INT S HIGH PERF COMP, P109, DOI 10.1109/HPCA.2017.43
   Chang LP, 2002, EIGHTH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P187, DOI 10.1109/RTTAS.2002.1137393
   Deng Y., 2008, J SYST ARCHITECT, V54, P787
   Deng YH, 2008, J SYST ARCHITECT, V54, P787, DOI 10.1016/j.sysarc.2008.02.002
   Deng YH, 2012, SIMUL MODEL PRACT TH, V20, P33, DOI 10.1016/j.simpat.2011.08.004
   Deng YH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922660
   Deng YH, 2011, J SYST ARCHITECT, V57, P214, DOI 10.1016/j.sysarc.2010.12.003
   Devarakonda MV., 1990, PERF E R SI
   Einziger G, 2017, ACM T STORAGE, V13, DOI 10.1145/3149371
   Fan ZQ, 2014, IEEE S MASS STOR SYS
   Jain A, 2016, CONF PROC INT SYMP C, P78, DOI 10.1109/ISCA.2016.17
   Jen-Wei Hsieh, 2006, ACM Transaction on Storage, V2, P22, DOI 10.1145/1138041.1138043
   Jiang S, 2005, USENIX Association Proceedings of the General Track: 2005 UNENIX Annual Technical Conference, P323
   JIANG S., 2002, ACM SIGMETRICS Performance Evaluation Review, V30, P31
   Johnson T., 1994, P 20 INT C VER LARG, P439
   Karakostas G, 2002, IEEE SYMP COMP COMMU, P207, DOI 10.1109/ISCC.2002.1021680
   KAREDLA R, 1994, COMPUTER, V27, P38, DOI 10.1109/2.268884
   Megiddo N, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES (FAST'03), P115
   Narayanan D, 2008, PROCEEDINGS OF THE 6TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES (FAST '08), P253
   O'Neil EJ, 1999, J ACM, V46, P92, DOI 10.1145/300515.300518
   Park S., 2017, PROC 33 IEEE INT C M, P1
   Shi Z, 2019, MICRO'52: THE 52ND ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, P413, DOI 10.1145/3352460.3358319
   Stoica R., 2013, P 29 INT C DAT ENG A
   Wu CJ, 2011, INT SYMP MICROARCH, P430
   Zhou JL, 2021, IEEE T IND INFORM, V17, P7820, DOI 10.1109/TII.2020.3011506
   Zhou JL, 2020, IEEE T SERV COMPUT, V13, P745, DOI 10.1109/TSC.2019.2963301
   Zhou JL, 2019, IEEE T COMPUT, V68, P1785, DOI 10.1109/TC.2019.2935042
   Zhou YY, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 2001 USENIX ANNUAL TECHNICAL CONFERENCE, P91
NR 30
TC 2
Z9 2
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2252
EP 2273
DI 10.1002/spe.2963
EA MAR 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000626543100001
DA 2024-07-18
ER

PT J
AU Vogel, A
   Griebler, D
   Fernandes, LG
AF Vogel, Adriano
   Griebler, Dalvan
   Fernandes, Luiz Gustavo
TI Providing high-level self-adaptive abstractions for stream parallelism
   on multicores
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE parallelism abstractions; parallel programming; self-adaptive systems;
   stream parallelism; stream processing applications
AB Stream processing applications are common computing workloads that demand parallelism to increase their performance. As in the past, parallel programming remains a difficult task for application programmers. The complexity increases when application programmers must set nonintuitive parallelism parameters, that is, the degree of parallelism. The main problem is that state-of-the-art libraries use a static degree of parallelism and are not sufficiently abstracted for developing stream processing applications. In this article, we propose a self-adaptive regulation of the degree of parallelism to provide higher-level abstractions. Flexibility is provided to programmers with two new self-adaptive strategies, one is for performance experts, and the other abstracts the need to set a performance goal. We evaluated our solution using compiler transformation rules to generate parallel code with the SPar domain-specific language. The experimental results with real-world applications highlighted higher abstraction levels without significant performance degradation in comparison to static executions. The strategy for performance experts achieved slightly higher performance than the one that works without user-defined performance goals.
C1 [Vogel, Adriano; Griebler, Dalvan; Fernandes, Luiz Gustavo] Pontificia Univ Catolica Rio Grande do Sul, Sch Technol, Porto Alegre, RS, Brazil.
   [Griebler, Dalvan] Soc Educ Tres de Maio SETREM, Lab Adv Res Cloud Comp, Tres De Maio, RS, Brazil.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Vogel, A; Griebler, D (corresponding author), Pontificia Univ Catolica Rio Grande do Sul, Sch Technol, Porto Alegre, RS, Brazil.
EM adriano.vogel@acad.pucrs.br; dalvan.griebler@acad.pucrs.br
RI Griebler, Dalvan/C-2041-2017; Vogel, Adriano/GZG-8215-2022; Fernandes,
   Luiz Gustavo/N-1988-2018
OI Griebler, Dalvan/0000-0002-4690-3964; Vogel,
   Adriano/0000-0003-3299-2641; Fernandes, Luiz Gustavo/0000-0002-7506-3685
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [437693/2018-0]; Coordenacao de Aperfeicoamento de Pessoal de Nivel
   Superior [001]; Fundacao de Amparo a Pesquisa do Estado do Rio Grande do
   Sul [17/2551-0000871-5, 19/2551-0001895-9]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Number: 437693/2018-0; Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior, Grant/Award Number: 001; Fundacao de Amparo a
   Pesquisa do Estado do Rio Grande do Sul, Grant/Award Numbers:
   17/2551-0000871-5, 19/2551-0001895-9
CR Aldinucci M., 2017, FASTFLOW HIGH LEVEL, P261
   Aldinucci M, 2010, EUROMICRO WORKSHOP P, P195, DOI 10.1109/PDP.2010.93
   Aldinucci M, 2009, EUROMICRO WORKSHOP P, P3, DOI [10.1109/.47, 10.1109/PDP.2009.48]
   Andrade HCM, 2014, FUNDAMENTALS OF STREAM PROCESSING: APPLICATION DESIGN, SYSTEMS, AND ANALYTICS, P1, DOI 10.1017/CBO9781139058940
   Berger ED, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3340571
   Carbone P., 2015, IEEE DATA ENG B, V36, P28, DOI DOI 10.1109/IC2EW.2016.56
   Cardellini V, 2018, FUTURE GENER COMP SY, V87, P171, DOI 10.1016/j.future.2018.05.025
   Chakravarthy S, 2009, ADV DATABASE SYST, V36, P1, DOI 10.1007/978-0-387-71003-7_1
   Danelutto M, 2016, EUROMICRO WORKSHOP P, P354, DOI 10.1109/PDP.2016.115
   Danelutto M., 2017, PARALLEL PROCESS LET, V27, P1
   Das T., 2014, P ASS COMP MACH S CL, P1, DOI DOI 10.1145/2670979.2670995
   De Matteis T, 2016, ACM SIGPLAN NOTICES, V51, P149, DOI 10.1145/2851141.2851148
   De Sensi D, 2018, FUTURE GENER COMP SY, V87, P136, DOI 10.1016/j.future.2018.05.012
   De Sensi D, 2017, SOFTWAREX, V6, P150, DOI 10.1016/j.softx.2017.06.005
   Astorga DD, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4175
   Faraway JJ, 2016, TEXTS STAT SCI
   Floratou A, 2017, PROC VLDB ENDOW, V10, P1825
   Gedik B, 2014, IEEE T PARALL DISTR, V25, P1447, DOI 10.1109/TPDS.2013.295
   González-Vélez H, 2010, SOFTWARE PRACT EXPER, V40, P1135, DOI 10.1002/spe.1026
   Griebler D, 2016, THESIS
   Griebler D, 2017, PARALLEL PROCESS LET, V27, DOI 10.1142/S0129626417400059
   Griebler D, 2019, INT J PARALLEL PROG, V47, P253, DOI 10.1007/s10766-018-0558-x
   Griebler Dalvan, 2017, PARALLEL COMPUTING I, P698
   Heinze T, 2014, 2014 IEEE 30TH INTERNATIONAL CONFERENCE ON DATA ENGINEERING WORKSHOPS (ICDEW), P296, DOI 10.1109/ICDEW.2014.6818344
   Hellerstein Joseph L, 2004, Feedback control of computing systems
   Hirzel M, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2528412
   Macías-Escrivá FD, 2013, EXPERT SYST APPL, V40, P7267, DOI 10.1016/j.eswa.2013.07.033
   Mattson T., 2005, PATTERNS PARALLEL PR
   Mencagli G, 2019, IEEE ACCESS, V7, P131944
   Metzger P, 2020, IEEE REAL TIME, P188, DOI 10.1109/RTAS48715.2020.000-7
   Misale C, 2018, FUTURE GENER COMP SY, V87, P392, DOI 10.1016/j.future.2018.05.030
   Moir M, 2004, COMPUTR INFORM SCI S
   Pusukuri KK, 2011, I S WORKL CHAR PROC, P116, DOI 10.1109/IISWC.2011.6114208
   Rajadurai S, 2018, ACM SIGPLAN NOTICES, V53, P98, DOI [10.1145/3173162.3173170, 10.1145/3296957.3173170]
   Raman A, 2011, ACM SIGPLAN NOTICES, V46, P26, DOI 10.1145/1993316.1993502
   Reinders James, 2007, Intel threading building blocks-outfitting C++ for multi-core processor parallelism
   Reyes RP, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1195, DOI 10.1145/3180155.3180161
   Schneider S, 2012, INT CONFER PARA, P53
   Selva M, 2015, 23RD EUROMICRO INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED, AND NETWORK-BASED PROCESSING (PDP 2015), P27, DOI 10.1109/PDP.2015.53
   Sensi DD, 2017, P WORKSH AUT SOL PAR, P42
   Sensi DD, 2016, ACM T ARCHIT CODE OP, V13, P43
   Seward Julian., 2007, BZIP2 LIBBZIP2 VERSI
   Sridharan Srinath., 2013, Proceedings of the 27th International ACM Conference on International Conference on Supercomputing, ICS '13, P337
   Su Y, 2015, CLUSTER COMPUT, V18, P949, DOI 10.1007/s10586-014-0412-x
   Thies W, 2002, LECT NOTES COMPUT SC, V2304, P179
   Torquati M, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.4652
   Toshniwa A, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P147, DOI 10.1145/2588555.2595641
   Vogel A., 2019, PARCO19 ADV PARALLEL, V36, P533, DOI DOI 10.3233/APC200082
   Vogel A, 2019, LECT NOTES COMPUT SC, V11339, P28, DOI 10.1007/978-3-030-10549-5_3
   Vogel P, 2019, HISTORIA, P12
   Zaharia M, 2016, COMMUN ACM, V59, P56, DOI 10.1145/2934664
   Zeuch S, 2019, PROC VLDB ENDOW, V12, P516, DOI 10.14778/3303753.3303758
NR 52
TC 6
Z9 6
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1194
EP 1217
DI 10.1002/spe.2948
EA JAN 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000606455700001
OA Green Published
DA 2024-07-18
ER

PT J
AU Alshehri, YA
AF Alshehri, Yasser Ali
TI Predicting change in newly created files in a software product line
   project
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive boost; data mining; decision tree J48; machine learning;
   re-sampling; SMOTE; software change proneness; software quality
ID OBJECT-ORIENTED METRICS; DEFECT PREDICTION; CODE SMELLS; IMPACT;
   SELECTION; PRONENESS; MODELS
AB At the beginning of the testing phase and before the deployment phase of a project's development cycle, we need to predict files with a high chance of change. Software products are always prone to change due to several reasons, including fixing errors or improvements. In this work, we used the Eclipse (releases from 2.0 to 3.5) to investigate how prediction models can perform when learning from a release and predicting in the subsequent one, which contains new files that models have not seen. We compared the performance of these models with models that are trained and tested on the same release. We found no differences between predicting the same release or subsequent release on two pre Europa releases. Predicting change in newly created files helps improve maintenance planning for software project managers and reduce cost. It will also help to enhance the quality of software by improving the practices of developers. This study used the Adaptive Boost classifier with the decision tree J48 algorithm and combined it with the re-sampling method. We find this to be better than using a meta classifier alone or combine the re-sampling with the standard classification. We compared our results with related works and found that our results are outperforming.
C1 [Alshehri, Yasser Ali] Yanbu Univ Coll, Comp Sci & Engn Dept, Royal Commiss Yanbu, Yanbu 46455, Saudi Arabia.
RP Alshehri, YA (corresponding author), Yanbu Univ Coll, Comp Sci & Engn Dept, Royal Commiss Yanbu, Yanbu 46455, Saudi Arabia.
EM alshehriya@rcyci.edu.sa
RI Alshehri, Yasser/AAE-5918-2021
OI Alshehri, Yasser/0000-0003-1134-4514
CR Abdi MK, 2006, EUROMICRO CONF PROC, P310, DOI 10.1109/EUROMICRO.2006.20
   Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   Alshehri YA, 2020, J SOFTW ENG APPL, V13, P91
   Alshehri YA, 2018, IEEE SOUTHEASTCON
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 1993, C45 PROGRAMS MACHINE, DOI [DOI 10.1007/BF00993309, 10.1007/bf00993309]
   Arar ÖF, 2015, APPL SOFT COMPUT, V33, P263, DOI 10.1016/j.asoc.2015.04.045
   Bell Robert M., 2011, P 7 INT C PRED MOD S
   Bennin KE, 2017, INT SYMP EMP SOFTWAR, P364, DOI 10.1109/ESEM.2017.50
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Catolino G, 2020, EMPIR SOFTW ENG, V25, P49, DOI 10.1007/s10664-019-09739-0
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Catolino G, 2018, 2018 IEEE WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P25, DOI 10.1109/MALTESQUE.2018.8368455
   Catolino G, 2017, INT C PROGRAM COMPRE, P186, DOI 10.1109/ICPC.2017.19
   Chen Mingming., 2015, SEKE, P397
   Daniel Rodriguez, 2014, P 18 INT C EV ASS SO
   Devine T, 2016, AUTOMAT SOFTW ENG, V23, P253, DOI 10.1007/s10515-014-0160-4
   Eski S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P566, DOI 10.1109/ICSTW.2011.43
   Frank E, 2016, COMMUNICATION
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Gholap NN, 2012, BMJ OPEN, V2, DOI 10.1136/bmjopen-2012-001596
   Giger E, 2012, P 2012 9 IEEE WORK C, P277
   Goseva-Popstojanova K, 2019, P INT COMP SOFTW APP, P336, DOI 10.1109/COMPSAC.2019.10229
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kang K, 2018, ARXIV180203522
   Khomh F., 2009, EPMRT200902
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khoshgoftaar TM, 2010, PROC INT C TOOLS ART, DOI 10.1109/ICTAI.2010.27
   Koru AG, 2007, J SYST SOFTWARE, V80, P63, DOI 10.1016/j.jss.2006.05.017
   Krishnan S, 2011, P 7 INT C PRED MOD S
   Krishnan S, 2013, INFORM SOFTWARE TECH, V55, P1479, DOI 10.1016/j.infsof.2012.11.008
   LEHNERT S., 2011, REV SOFTWARE CHANGE
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Malhotra R, 2019, E-INFORMATICA, V13, P227, DOI 10.5277/e-Inf190107
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Marinescu C, 2014, INT SYMP SYMB NUMERI, P544, DOI 10.1109/SYNASC.2014.78
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Ostrand T. J., 2010, P 6 INT C PRED MOD S, P19, DOI [DOI 10.1145/1868328, 10.1145/1868328]
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Shatnawi R, 2017, INNOV SYST SOFTW ENG, V13, P201, DOI 10.1007/s11334-017-0295-0
   Soetens QD, 2016, EMPIR SOFTW ENG, V21, P1990, DOI 10.1007/s10664-015-9405-5
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
   Zhu J, 2009, STAT INTERFACE, V2, P349
   Zhu XY, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.2111
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
NR 57
TC 0
Z9 0
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2022
VL 52
IS 12
BP 2499
EP 2512
DI 10.1002/spe.2911
EA OCT 2020
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A1NL
UT WOS:000579029900001
DA 2024-07-18
ER

PT J
AU Abbasi, R
   Bashir, AK
   Chen, JW
   Mateen, A
   Piran, J
   Amin, F
   Luo, B
AF Abbasi, Rashid
   Kashif Bashir, Ali
   Chen, Jianwen
   Mateen, Abdul
   Piran, Jalil
   Amin, Farhan
   Luo, Bin
TI Author classification using transfer learning and predicting stars in
   co-author networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE author classification; semantic web; social network; transfer learning
ID EMOTION CLASSIFICATION; ALGORITHM; RANKING; MODEL; TEXT
AB The vast amount of data is key challenge to mine a new scholar that is plausible to be star in the upcoming period. The enormous amount of unstructured data raise every year is infeasible for traditional learning; consequently, we need a high quality of preprocessing technique to expand the performance of traditional learning. We have persuaded a novel approach, Authors classification algorithm using Transfer Learning (ACTL) to learn new task on target area to mine the external knowledge from the source domain. Comprehensive experimental outcomes on real-world networks showed that ACTL, Node-based Influence Predicting Stars, Corresponding Authors Mutual Influence based on Predicting Stars, and Specific Topic Domain-based Predicting Stars enhanced the node classification accuracy as well as predicting rising stars to compared with contemporary baseline methods.
C1 [Abbasi, Rashid; Chen, Jianwen] Univ Elect Sci & Technol China, Sch Informat & Commun Engn, Chengdu, Peoples R China.
   [Kashif Bashir, Ali] Manchester Metropolitan Univ, Dept Comp & Math, Manchester, Lancs, England.
   [Mateen, Abdul] Fed Urdu Univ Arts Sci & Technol, Dept Comp Sci, Islamabad, Pakistan.
   [Piran, Jalil] Sejong Univ, Dept Comp Engn, Yeungnam, South Korea.
   [Amin, Farhan] Yeungnam Univ, Dept Informat & Commun Engn, Yeungnam, South Korea.
   [Luo, Bin] Anhui Univ, MOE, Key Lab Intelligent Comp & Signal Proc, Hefei, Peoples R China.
   [Luo, Bin] Anhui Univ, Sch Comp & Technol, Hefei, Peoples R China.
C3 University of Electronic Science & Technology of China; Manchester
   Metropolitan University; Federal Urdu University of Arts Science &
   Technology; Sejong University; Yeungnam University; Anhui University;
   Anhui University
RP Abbasi, R; Chen, JW (corresponding author), Univ Elect Sci & Technol China, Sch Informat & Commun Engn, Chengdu, Peoples R China.
EM rashidd.abbasi@gmail.com; chenjianwen@uestc.edu.cn; piran@sejong.ac.kr
RI lu, bin/HPE-4790-2023; Bashir, Ali Kashif/R-4015-2019; Abbasi, Rashid
   Hanif/E-1734-2013
OI Bashir, Ali Kashif/0000-0003-2601-9327; 
FU Sichuan Science and Technology Program [2018RZ0070]
FX This work was supported by the Sichuan Science and Technology Program
   under Grant 2018RZ0070.
CR Abbasi R, 2017, PROCEEDINGS OF 2017 IEEE 2ND INFORMATION TECHNOLOGY, NETWORKING, ELECTRONIC AND AUTOMATION CONTROL CONFERENCE (ITNEC), P743, DOI 10.1109/ITNEC.2017.8284832
   Abu Ahmad H, 2018, DISTRIB PARALLEL DAT, V36, P593, DOI 10.1007/s10619-018-7240-6
   Aggarwal C.C., 2011, SDM, P355
   Akbar AH, 2006, P INT C ADV COMM TEC, V1, P2
   Al-Maytami BA, 2019, IEEE ACCESS, V7, P160916, DOI 10.1109/ACCESS.2019.2948704
   Ali A, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19030678
   Amin A, 2018, IEEE C EVOL COMPUTAT, P244, DOI 10.1109/CEC.2018.8477954
   Amin F, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19092007
   Amjad T, 2018, LIBR HI TECH, V36, P97, DOI 10.1108/LHT-05-2017-0090
   [Anonymous], 2000, Proc. AAAI-2000 Workshop on Learning Statistical Models from Relational Data
   [Anonymous], Combining collective classification and link prediction. Seventh IEEE Int. Conf. Data Mining Workshops (ICDMW 2007), 2007, DOI [DOI 10.1109/ICDMW.2007.35, 10.1109/ICDMW.2007.35]
   Arul R., 2019, MACHINE LEARNING COG, P240, DOI DOI 10.4018/978-1-5225-8100-0.CH010
   Boldi P., 2005, P 14 INT C WORLD WID, P557
   Bu Z., 2017, IEEE T CYBERNETICS, V49, P328
   Bu Z, 2017, INFORM FUSION, V37, P10, DOI 10.1016/j.inffus.2017.01.002
   Cao WM, 2019, PATTERN RECOGN, V86, P248, DOI 10.1016/j.patcog.2018.08.021
   Chaturvedi Shubhangi, 2019, Emerging Technologies in Data Mining and Information Security. Proceedings of IEMIS 2018. Advances in Intelligent Systems and Computing (AISC 814), P507, DOI 10.1007/978-981-13-1501-5_44
   CiteSeer, IST SCI LIT DIG LIB
   Dai Wenyuan, 2007, P 24 INT C MACHINE L, P193
   Daud Ali, 2013, Database Systems for Advanced Applications.18th International Conference, DASFAA 2013. Proceedings, P13, DOI 10.1007/978-3-642-37487-6_4
   Daud Ali, 2009, Mehran University Research Journal of Engineering and Technology, V28, P253
   Daud A, 2015, SCIENTOMETRICS, V102, P1687, DOI 10.1007/s11192-014-1455-8
   Daud A, 2012, KNOWL-BASED SYST, V26, P154, DOI 10.1016/j.knosys.2011.07.015
   Daud A, 2010, KNOWL-BASED SYST, V23, P615, DOI 10.1016/j.knosys.2010.04.008
   Eldardiry H., 2011, AAAI
   Fang M, 2015, IEEE T KNOWL DATA EN, V27, P2536, DOI 10.1109/TKDE.2015.2413789
   Fang M, 2013, IEEE DATA MINING, P161, DOI 10.1109/ICDM.2013.116
   Feng L, 2019, IEEE T IND INFORM, V15, P3016, DOI 10.1109/TII.2019.2902604
   Gong X, 2019, IEEE T IND INFORM, V15, P942, DOI 10.1109/TII.2018.2839645
   Granovetter M.S., 1977, AM J SOCIOL, P347, DOI DOI 10.1086/225469
   GUPTA S, 2018, ARXIV180204168
   He ZF, 2019, KNOWL-BASED SYST, V163, P145, DOI 10.1016/j.knosys.2018.08.018
   Jensen D., 2004, Proceedings of the 10th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P593, DOI [10.1145/1014052.1014125, DOI 10.1145/1014052.1014125]
   Jiang LC, 2019, PHYSICA A, V516, P58, DOI 10.1016/j.physa.2018.10.011
   Jing BY, 2018, IEEE DATA MINING, P187, DOI 10.1109/ICDM.2018.00034
   Kalra V, 2019, EXTRACTING KNOWLEDGE, P268, DOI DOI 10.4018/978-1-5225-6117-0.CH012
   Khalaf M, 2018, IEEE C EVOL COMPUTAT, P230, DOI 10.1109/CEC.2018.8477904
   Kim J, 2018, SCIENTOMETRICS, V116, P1867, DOI 10.1007/s11192-018-2824-5
   Kschischang FR, 2001, IEEE T INFORM THEORY, V47, P498, DOI 10.1109/18.910572
   Kutia S, 2019, IEEE ACCESS, V7, P90777, DOI 10.1109/ACCESS.2019.2924584
   Li SQ, 2018, J MED SYST, V42, DOI 10.1007/s10916-017-0876-3
   Li XL, 2009, LECT NOTES COMPUT SC, V5463, P288, DOI 10.1007/978-3-642-00887-0_25
   Li ZL, 2018, AAAI CONF ARTIF INTE, P5220
   Liang WM, 2018, EXPERT SYST APPL, V114, P322, DOI 10.1016/j.eswa.2018.07.027
   Lu YC, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P773, DOI 10.1145/3178876.3186158
   Mallick C, 2019, ADV INTELL SYST, V758, P137, DOI 10.1007/978-981-13-0514-6_14
   McCallum AK, 2000, INFORM RETRIEVAL, V3, P127, DOI 10.1023/A:1009953814988
   McDowell LK, 2009, J MACH LEARN RES, V10, P2777
   Nerurkar P, 2019, ADV INTELL SYST COMP, V810, P215, DOI 10.1007/978-981-13-1513-8_23
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Pietro Cordella Luigi, 2001, 3 IAPR TC15 WORKSH G, P149, DOI [10.1016/S0167-8655(02)00248-9, DOI 10.1016/S0167-8655(02)00248-9]
   Plekhanova E, 2019, EVOL APPL, V12, P18, DOI 10.1111/eva.12607
   Qureshi NMF, 2021, WIRELESS PERS COMMUN, V116, P1217, DOI 10.1007/s11277-020-07215-3
   Qureshi NMF, 2018, IEEE GLOB COMM CONF
   Rane Rahul, 2019, Emerging Technologies in Data Mining and Information Security. Proceedings of IEMIS 2018. Advances in Intelligent Systems and Computing (AISC 813), P393, DOI 10.1007/978-981-13-1498-8_35
   Rao YH, 2016, INFORM MANAGE-AMSTER, V53, P978, DOI 10.1016/j.im.2016.04.005
   Rehman T, 2017, LECT N MECH ENG, P329, DOI 10.1007/978-3-319-33581-0_25
   Riaz FM, 2017, INT CONF FRONT INFO, P223, DOI 10.1109/FIT.2017.00047
   Santos RLT, 2013, INFORM RETRIEVAL, V16, P429, DOI 10.1007/s10791-012-9211-2
   Sen P, 2008, AI MAG, V29, P93, DOI 10.1609/aimag.v29i3.2157
   Shi C, 2019, IEEE T KNOWL DATA EN, V31, P357, DOI 10.1109/TKDE.2018.2833443
   Song AB, 2019, EXPERT SYST APPL, V118, P329, DOI 10.1016/j.eswa.2018.10.018
   Sudharshan PJ, 2019, EXPERT SYST APPL, V117, P103, DOI 10.1016/j.eswa.2018.09.049
   Tang J., 2008, SIGKDD, P990, DOI DOI 10.1145/1401890.1402008
   Tang J, 2016, ACM T INFORM SYST, V34, DOI 10.1145/2746230
   Treur Jan, 2019, Transactions on Computational Collective Intelligence XXXII. Lecture Notes in Computer Science (LNCS 11370), P120, DOI 10.1007/978-3-662-58611-2_2
   Tsatsaronis G, 2011, LECT NOTES COMPUT SC, V6966, P15, DOI 10.1007/978-3-642-24469-8_4
   Valenzuela S, 2018, POLIT COMMUN, V35, P117, DOI 10.1080/10584609.2017.1334726
   Wang GA, 2013, DECIS SUPPORT SYST, V54, P1442, DOI 10.1016/j.dss.2012.12.020
   Witten IH, 2016, DATA MINING PRACTICA, P76
   Zhang YZ, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P399, DOI 10.1145/3178876.3186106
   Zhao-lei Xiong, 2019, Recent Developments in Intelligent Computing, Communication and Devices. Proceedings of International Conference on Intelligent Computing, Communication and Devices (ICCD 2017). Advances in Intelligent Systems and Computing (AISC 752), P417, DOI 10.1007/978-981-10-8944-2_48
   2011, SOCIAL NETWORK DATA, P1
NR 73
TC 7
Z9 7
U1 6
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2021
VL 51
IS 3
SI SI
BP 645
EP 669
DI 10.1002/spe.2884
EA SEP 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QH1RQ
UT WOS:000573330600001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Gong, WW
   Lv, C
   Duan, YC
   Liu, ZG
   Khosravi, MR
   Qi, LY
   Dou, WC
AF Gong, Wenwen
   Lv, Chao
   Duan, Yucong
   Liu, Zengguang
   Khosravi, Mohammad R.
   Qi, Lianyong
   Dou, Wanchun
TI Keywords-driven web APIs group recommendation for automatic app service
   creation process
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE APIs group recommendation; app creation; diverse composition; query
   keywords
AB With the ever-increasing popularity of web application programming interfaces (APIs) sharing communities, it is becoming a promising way for software developers to design and create their interesting Apps through composing a set of selected web APIs that can collectively fulfill the App functions expected by the App developer. However, the App developer's web APIs selection decision-makings are often nontrivial due to the massive candidate APIs as well as their diverse functions. Furthermore, it is difficult to guarantee that the selected web APIs are compatible enough. Moreover, traditional web APIs recommendation approaches only return a recommended APIs list, which are often not sufficient to accommodate the App developer's undetermined and fuzzy personalized preferences. Considering the above challenges, a novel keywords-driven web APIs recommendation approach called keywords-driven and compatibility-aware multiple API group recommendation is proposed in this article for green and compatible software, which cannot only satisfy the App developer's functional requirements, but also return a group of web APIs recommended lists. Each returned list includes a set of compatible web APIs. Finally, we design a series of experiments based on a real-world web APIs dataset, that is, PW dataset crawled fromwww.programmableWeb.com. Experimental reports compared with other competitive approaches in existing literatures indicate the effectiveness and efficiency of our proposal in this work.
C1 [Gong, Wenwen] China Agr Univ, Coll Informat & Elect Engn, Beijing, Peoples R China.
   [Lv, Chao] China Telecom Smart Home Competence Ctr, Nanjing, Peoples R China.
   [Lv, Chao] E Surfing Smart Home Technol Co Ltd, Nanjing, Peoples R China.
   [Duan, Yucong] Hainan Univ, Sch Comp Sci & Cyberspace Secur, Haikou, Hainan, Peoples R China.
   [Liu, Zengguang] Shandong Univ Sci & Technol, Coll Comp Sci & Engn, Qingdao, Peoples R China.
   [Khosravi, Mohammad R.] Persian Gulf Univ, Dept Comp Engn, Bushehr, Iran.
   [Khosravi, Mohammad R.] Shiraz Univ Technol, Dept Elect & Elect Engn, Telecommun Grp, Shiraz, Iran.
   [Qi, Lianyong] Qufu Normal Univ, Sch Informat Sci & Engn, 80 Yantai Rd, Rizhao, Donggang Distri, Peoples R China.
   [Qi, Lianyong; Dou, Wanchun] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Dou, Wanchun] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Peoples R China.
C3 China Agricultural University; Hainan University; Shandong University of
   Science & Technology; Persian Gulf University; Shiraz University of
   Technology; Qufu Normal University; Nanjing University; Nanjing
   University
RP Qi, LY (corresponding author), Qufu Normal Univ, Sch Informat Sci & Engn, 80 Yantai Rd, Rizhao, Donggang Distri, Peoples R China.
EM lianyongqi@qfnu.edu.cn
RI Khosravi, Mohammad R./ABG-8013-2021; Qi, Lianyong/AAO-2681-2020; Gong,
   Wenwen/Q-9161-2016; Khosravi, Mohamadreza (Mohammad Reza)/KOD-0343-2024
FU National Natural Science Foundation of China [61872219]; Natural Science
   Foundation of Shandong Province [ZR2019MF001]; Open Project of State Key
   Laboratory for Novel Software Technology [KFKT2020B08]; National Key
   Research and Development Program of China [2017YFB1400600]
FX National Natural Science Foundation of China, Grant/Award Number: No.
   61872219; Natural Science Foundation of Shandong Province, Grant/Award
   Number: ZR2019MF001; Open Project of State Key Laboratory for Novel
   Software Technology, Grant/Award Number: No. KFKT2020B08; the National
   Key Research and Development Program of China, Grant/Award Number:
   No.2017YFB1400600
CR Almarimi N, 2019, APPL SOFT COMPUT, V85, DOI 10.1016/j.asoc.2019.105830
   Anarfi R, 2019, IEEE WORLD CONGR SER, P372, DOI 10.1109/SERVICES.2019.00109
   [Anonymous], IEEE T CLOUD COMPUT
   Blake MB, 2011, IEEE T KNOWL DATA EN, V23, P889, DOI 10.1109/TKDE.2010.168
   Chi XX, 2022, CONCURR COMP-PRACT E, V34, DOI 10.1002/cpe.5681
   Dou WC, 2015, IEEE T PARALL DISTR, V26, P455, DOI 10.1109/TPDS.2013.246
   Fletcher KK, 2019, P IEEE I C SERV COMP, P1, DOI 10.1109/SCC.2019.00014
   Gao W, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P65, DOI 10.1109/ICWS.2017.17
   Gao W, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P432, DOI 10.1109/ICWS.2015.64
   GAREY MR, 1977, SIAM J APPL MATH, V32, P826, DOI 10.1137/0132071
   Gu Q, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P452, DOI 10.1109/ICWS.2016.65
   Huang G, 2015, IEEE T SERV COMPUT, V8, P494, DOI 10.1109/TSC.2014.2347293
   Hwang F., 1992, STEINER TREE PROBLEM
   Jiang MH, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P393, DOI 10.1145/2723372.2749447
   Kwapong BA, 2019, IEEE WORLD CONGR SER, P115, DOI 10.1109/SERVICES.2019.00039
   Li HC, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC), P84, DOI 10.1109/SCC.2017.19
   Li JX, 2020, INFORM SYST, V92, DOI 10.1016/j.is.2020.101522
   Liu HY, 2021, EMERG MARK FINANC TR, V57, P348, DOI 10.1080/1540496X.2018.1556636
   Liu HW, 2020, COMPLEXITY, V2020, DOI 10.1155/2020/2085638
   Liu Q, 2019, IEEE T NETW SCI ENG, V6, P983, DOI 10.1109/TNSE.2018.2889539
   Liu Q, 2017, J COMPUT SCI TECH-CH, V32, P1231, DOI 10.1007/s11390-017-1797-9
   Liu Q, 2017, IEEE T PARALL DISTR, V28, P1417, DOI 10.1109/TPDS.2016.2615020
   Qi L, 2020, IEEE J SOLID-ST CIRC, V55, P344, DOI 10.1109/JSSC.2019.2942359
   Qi L, 2020, INT J PHYTOREMEDIAT, V22, P227, DOI 10.1080/15226514.2019.1658704
   Rahman MM, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC), P225, DOI 10.1109/SCC.2017.36
   Sinha A, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P243, DOI 10.1145/2740908.2742839
   Wang HB, 2016, KNOWL-BASED SYST, V92, P151, DOI 10.1016/j.knosys.2015.10.022
   Xia B, 2017, IEEE T SERV COMPUT, V8, P674
   Zhong WY, 2020, COMPUT COMMUN, V157, P116, DOI 10.1016/j.comcom.2020.04.018
   Zhong Y, 2018, IEEE T AUTOM SCI ENG, V15, P468, DOI 10.1109/TASE.2016.2624310
   Zhou CJ, 2020, EXPERT SYST APPL, V151, DOI 10.1016/j.eswa.2020.113361
   Zhou JL, 2020, IEEE T SERV COMPUT, V13, P745, DOI 10.1109/TSC.2019.2963301
   Zhou JL, 2019, IEEE T COMPUT, V68, P1785, DOI 10.1109/TC.2019.2935042
   Zhou JL, 2019, IEEE T COMPUT AID D, V38, P2215, DOI 10.1109/TCAD.2018.2883993
NR 34
TC 14
Z9 15
U1 1
U2 27
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2337
EP 2354
DI 10.1002/spe.2902
EA SEP 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000572905900001
DA 2024-07-18
ER

PT J
AU Asghar, MZ
   Subhan, F
   Ahmad, H
   Khan, WZ
   Hakak, S
   Gadekallu, TR
   Alazab, M
AF Asghar, Muhammad Zubair
   Subhan, Fazli
   Ahmad, Hussain
   Khan, Wazir Zada
   Hakak, Saqib
   Gadekallu, Thippa Reddy
   Alazab, Mamoun
TI Senti-eSystem: A sentiment-basedeSystem-using hybridized fuzzy and deep
   neural network for measuring customer satisfaction
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE attention mechanism; customer satisfaction; deep neural network;
   eSystem; fuzzy system; hybridized fuzzy and deep neural network; twitter
ID SYSTEM; MODEL
AB In the competing era of online industries, understanding customer feedback and satisfaction is one of the important concern for any business organization. The well-known social media platforms like Twitter are a place where customers share their feedbacks. Analyzing customer feedback is beneficial, as it provides an advantage way of unveiling customer interests. The proposed system, namelySenti-eSystem, aims at the development of sentiment-basedeSystemusing hybridized Fuzzy and Deep Neural Network for Measuring Customer Satisfaction to assist business organizations for improving the quality of their services and products. The proposed approach initially deploys a Bidirectional Long Short Term Memory with attention mechanism to predict the sentiment polarity that is positive and negative, followed by Fuzzy logic approach to determine the customer satisfaction level, which further strengthens the capabilities of the proposed approach. The system achieves an accuracy of 92.86%, outperforming the previous state-of-art lexicon-based approaches. Moreover, the effectiveness of the proposed system is also validated by applying the statistical test.
C1 [Asghar, Muhammad Zubair; Ahmad, Hussain] Gomal Univ, Inst Comp & Informat Technol, Di Khan Kp, Pakistan.
   [Subhan, Fazli] Natl Univ Modern Languages NUML, Islamabad, Pakistan.
   [Khan, Wazir Zada] Jazan Univ, Fac Comp Sci & IS, Jazan, Saudi Arabia.
   [Hakak, Saqib] Univ Northern British Columbia, Fac Comp Sci, Prince George, BC, Canada.
   [Gadekallu, Thippa Reddy] Vellore Inst Technol, Sch Informat Technol & Engn, Vellore, Tamil Nadu, India.
   [Alazab, Mamoun] Charles Darwin Univ, Coll Engn IT & Environm, Darwin, NT, Australia.
C3 Jazan University; University of Northern British Columbia; Vellore
   Institute of Technology (VIT); VIT Vellore; Charles Darwin University
RP Gadekallu, TR (corresponding author), Vellore Inst Technol, Sch Informat Technol & Engn, Vellore, Tamil Nadu, India.
EM thippareddy.g@vit.ac.in
RI Alazab, Mamoun/AAG-6684-2021; Asghar, Muhammad Zubair/M-6411-2015; Khan,
   Wazir Zada/G-8580-2015; Gadekallu, Thippa Reddy/T-4254-2019; Hakak,
   Saqib/AAC-5134-2021
OI Alazab, Mamoun/0000-0002-1928-3704; Asghar, Muhammad
   Zubair/0000-0003-3320-2074; Khan, Wazir Zada/0000-0003-0819-4236;
   Gadekallu, Thippa Reddy/0000-0003-0097-801X; Subhan,
   Fazli/0000-0003-4379-822X
CR Ahmad H, 2020, P 2020 INT C INF NET
   Ahmad S, 2019, HUM-CENTRIC COMPUT I, V9, DOI 10.1186/s13673-019-0185-6
   ALAM J, 2017, J INFORM TECHNOLOGY, V7, P1
   [Anonymous], 2014, INT J COMPUT APPL, DOI DOI 10.5120/17463-8243
   [Anonymous], 2016, MEDIUM BACKPROPOGATI
   [Anonymous], 2004, COLING
   Asghar M. Z., 2019, COMPUT MATH ORGAN TH, P1
   Asghar MZ, 2019, J AMB INTEL HUM COMP, V17, P1
   Baniata LH, 2018, APPL SCI-BASEL, V8, DOI 10.3390/app8122502
   Bolos MI, 2019, SYMMETRY-BASEL, V11, DOI 10.3390/sym11020186
   Chu JB, 2018, J BIOMED INFORM, V87, P118, DOI 10.1016/j.jbi.2018.10.002
   Cui Z., 2018, DEEP BIDIRECTIONAL U
   Dalai M.K., 2014, Applied Computational Intelligence and Soft Computing, V2014, P1
   Danda P, 2017, P IJCNLP 2017 SHAR T
   Darestani A. Y., 2009, Journal of Applied Sciences, V9, P469, DOI 10.3923/jas.2009.469.478
   Dey L, 2009, INT J DOC ANAL RECOG, V12, P205, DOI 10.1007/s10032-009-0090-z
   Ding X, 2015, 75TH CONFERENCE ON GLASS PROBLEMS, P29
   Forit, 2015, FORIT DEEP LEARNING
   Gadekallu T., 2019, SENTIMENT ANAL KNOWL, P77
   Gadekallu TR, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9020274
   Ghani U, 2018, SYMMETRY-BASEL, V10, DOI 10.3390/sym10120761
   Guzman E, 2014, P 2014 IEEE 22 INT R
   Haque M., 2014, SENTIMENT ANAL USING
   Huang J, 2018, J INTELL FUZZY SYST, V34, P1161, DOI 10.3233/JIFS-169410
   Huang YS, 2014, INFORM SCIENCES, V274, P210, DOI 10.1016/j.ins.2014.02.132
   Katarya R, 2017, MULTIMED TOOLS APPL, V76, P21481, DOI 10.1007/s11042-016-4078-7
   Keras, 2015, EMB LAYERS
   Keras, 2015, TEXT PREPR
   Khan A, 2020, ENTERTAIN COMPUT, V34, DOI 10.1016/j.entcom.2020.100357
   Kumar S, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0224-1
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Liu G, 2019, NEUROCOMPUTING, V337, P325, DOI 10.1016/j.neucom.2019.01.078
   Liu J., 2019, Journal of Ambient Intelligence and Humanized Computing, DOI [10.1007/s12652-019-01344-9, DOI 10.1007/S12652-019-01344-9]
   Magesh G, 2017, DENT TECH, V8, P1829
   Musto C., 2014, Information Filtering and Retrieval, V59
   Nadali S, 2010, P 2010 INT S INF TEC
   Nuruzzaman M, P 2018 IEEE 15 INT C
   Rani S, 2019, ARAB J SCI ENG, V44, P3305, DOI 10.1007/s13369-018-3500-z
   Reddy GT, 2020, IEEE ACCESS, V8, P54776, DOI 10.1109/ACCESS.2020.2980942
   Reddy GT, 2020, COMPUT COMMUN, V157, P64, DOI 10.1016/j.comcom.2020.04.004
   Rhanoui M, 2019, MACH LEARN KNOW EXTR, V1, P832, DOI 10.3390/make1030048
   Singh Pramod., 2019, Machine Learning with PySpark, P191
   Taboada M, 2011, COMPUT LINGUIST, V37, P267, DOI 10.1162/COLI_a_00049
   Toujani R, 2017, P 2016 7 INT C SCI E
   Vinayakumar R, 2020, IEEE T IND APPL, V6, P1
   Wang XZ, 2016, INT J SOFTW ENG KNOW, V26, P1341, DOI 10.1142/S0218194016400076
   Wang Y, 2020, CMC-COMPUT MATER CON, V62, P631, DOI 10.32604/cmc.2020.07920
   Wordpress, 2017, BLOG DAT SCI MACH LE
   Yao XL, 2017, P INT C INF SCI CLOU
   Zhou X, 2016, INT SYMP INERT SENSO, P54, DOI 10.1109/ISISS.2016.7435543
   Zomaya AY, 2017, Handbook of big data technologies
NR 51
TC 64
Z9 65
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2021
VL 51
IS 3
SI SI
BP 571
EP 594
DI 10.1002/spe.2853
EA AUG 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QH1RQ
UT WOS:000554875600001
DA 2024-07-18
ER

PT J
AU Hassan, S
   Bahsoon, R
   Kazman, R
AF Hassan, Sara
   Bahsoon, Rami
   Kazman, Rick
TI Microservice transition and its granularity problem: A systematic
   mapping study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design decision support; granularity; microservices; software economics;
   systematic mapping study
ID ADAPTIVE SYSTEMS; SELF-ADAPTATION; ARCHITECTURE; MIGRATION; FRAMEWORK;
   MODELS; DEPLOYMENT; WEB
AB Microservices have gained wide recognition and acceptance in software industries as an emerging architectural style for autonomic, scalable, and more reliable computing. The transition to microservices has been highly motivated by the need for better alignment of technical design decisions with improving value potentials of architectures. Despite microservices' popularity, research still lacks disciplined understanding of transition and consensus on the principles and activities underlying that transition. In this paper, we report on a systematic mapping study that consolidates various views, approaches and activities that commonly assist in the transition to microservices. The study aims to provide a better understanding of the transition; it also contributes a working definition of the transition and technical activities underlying it. We term the transition and technical activities leading to microservice architectures as microservitization. We then shed light on a fundamental problem of microservitization: microservice granularity and reasoning about its adaptation as first-class entities. This study reviews state-of-the-art and -practice related to reasoning about microservice granularity; it reviews modeling approaches, aspects considered, guidelines and processes used to reason about microservice granularity. This study identifies opportunities for future research and development related to reasoning about microservice granularity.
C1 [Hassan, Sara; Bahsoon, Rami] Univ Birminhgam, Sch Comp Sci, Birmingham, W Midlands, England.
   [Kazman, Rick] Software Engn Inst SEI CMU, Pittsburgh, PA USA.
   [Kazman, Rick] Univ Hawaii, Honolulu, HI 96822 USA.
C3 Software Engineering Institute; University of Hawaii System
RP Hassan, S (corresponding author), Univ Birminhgam, Sch Comp Sci, Birmingham, W Midlands, England.
EM ssh195@cs.bham.ac.uk
CR Akbulut A, 2019, IEEE INTERNET COMPUT, V23, P19, DOI 10.1109/MIC.2019.2951094
   Alipour H, 2017, IEEE INT CONF BIG DA, P2433, DOI 10.1109/BigData.2017.8258201
   Almeida W.H.C., 2017, ICSEA 2017, P210
   Alshuqayran N, 2016, P 2016 9 INT C SERV
   Alshuqayran N, 2018, P IEEE INT C SOFTW A
   Andrawos Mina., 2017, Cloud Native Programming with Golang: Develop microservice-based high performance web apps for the cloud with Go
   [Anonymous], 1999, PERISH PUBLISH PERIS
   [Anonymous], CHALLENGES IMPLEMENT
   [Anonymous], 2010, Just Enough Software Architecture: a Risk-Driven Approach
   [Anonymous], 2018, MICROSERVICES PATTER
   [Anonymous], 2006, ARCHITECTURAL BLUEPR
   [Anonymous], 2004, Web Semantics: Science, Services and Agents on the World Wide Web, DOI DOI 10.1016/J.WEBSEM.2004.03.001
   Asenova M, 2019, PROCEDIA COMPUT SCI, V160, P610, DOI 10.1016/j.procs.2019.11.039
   Ashikhmin N, 2017, COMM COM INF SC, V793, P456, DOI 10.1007/978-3-319-71255-0_37
   Asik T, 2017, 2017 IEEE/ACIS 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P283, DOI 10.1109/SERA.2017.7965739
   ASSmann Uwe, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P1
   Asundi J., 2001, Using economic considerations to choose among architecture design alternatives
   Baines T, 2018, DIGITALISATION SERVI
   Baines T, 2016, SERVITIZATION UNDERS
   Baines TS, 2009, J MANUF TECHNOL MANA, V20, P547, DOI 10.1108/17410380910960984
   Bakshi K, 2017, AEROSP CONF PROC
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Baraiya V, 2016, NETFLIX CONDUCTOR MI
   Barbier F, 2006, PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, VOLS 1 AND 2, P163, DOI 10.1109/COGINF.2006.365692
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Behara DGK, 2018, MICROSERVICES GOVERN
   Benatallah B, 2002, PROC INT CONF DATA, P297, DOI 10.1109/ICDE.2002.994738
   Bencomo Nelly, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P221, DOI 10.1007/978-3-642-37422-7_16
   Bencomo N, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P113, DOI 10.1109/SEAMS.2013.6595498
   Berger C, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P7, DOI 10.1109/ICSAW.2017.56
   Betts T, 2017, Q A SUSAN FOWLER PRO
   Bianco P.K., 2007, EVALUATING SERVICE O
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   BRIAND LC, 1993, CONFERENCE ON SOFTWARE MAINTENANCE 1993, CSM-93: PROCEEDINGS, P88
   Brilhante J, 2017, P 23 BRAZ S MULT WEB, P373, DOI [10.1145/3126858.3126873, DOI 10.1145/3126858.3126873]
   Brogi A, 2018, LECT NOTES COMPUT SC, V10729, P219, DOI 10.1007/978-3-319-74781-1_16
   Bryant D, 2017, SHRINKING MICROSERVI
   Bryant D, 2017, EC MICROSERVICES PHI
   Bryant D, 2017, OBSERVABILITY AVOIDI
   Bryant D, 2017, MICROSERVICES ORG PE
   Burns R.S., 2001, ADV CONTROL ENG
   Calinescu R., 2014, P 5 ACM SPEC INT C P, P87
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Camara Javier, 2017, UNCERTAINTY SELF ADA
   Carlson L, 2017, WHAT ARE MICROSERVIC
   Casati F, 2000, LECT NOTES COMPUT SC, V1789, P13
   Cerny T, 2019, ENTERP INF SYST-UK, V13, P467, DOI 10.1080/17517575.2018.1462406
   Cerny T, 2017, APPL COMPUT REV, V17, P29, DOI [10.1145/3129676.3129682, 10.1145/3183628.3183631]
   Channabasavaiah Kishore., 2003, IBM DeveloperWorks, V16, P727
   Chavez Kevin, 2019, 2019 International Conference on Information Systems and Computer Science (INCISCOS). Proceedings, P311, DOI 10.1109/INCISCOS49368.2019.00056
   Chen HY, 2020, IEEE ACCESS, V8, P43413, DOI 10.1109/ACCESS.2020.2977464
   Chen L., 2018, P IEEE INT C SOFTW A
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng SW, 2005, LECT NOTES COMPUT SC, V3460, P158
   Cheng SW, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P276
   Ciuffoletti A, 2015, PROCEDIA COMPUT SCI, V68, P163, DOI 10.1016/j.procs.2015.09.232
   Cockroft A, 2015, STATE ART MICROSERVI
   Cockroft A, 2015, GLUECON MONITORING M
   Conway ME, 1968, COMMITTEES INVENT
   Cruz P, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P174, DOI 10.1109/ICSA-C.2019.00039
   Curlett C, 2016, TAME MICROSERVICES C
   Danilovic M., 2007, International Journal of Project Management, V25, P300, DOI 10.1016/j.ijproman.2006.11.003
   Daya S, 2016, MICROSERVICES THEORY
   Daya S., 2015, Microservices from theory to practice: Creating applications in IBM Bluemix using the microservices approach
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Dehghani Z, 2015, YOUTUBE
   Derakhshanmanesh M, P SOFTW ENG WORKSH
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Dietrich J, 2010, LECT NOTES COMPUT SC, V6093, P135, DOI 10.1007/978-3-642-13821-8_11
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   Dobson S, 2006, ACM T AUTON ADAP SYS, V1, P223, DOI 10.1145/1186778.1186782
   Dragoni N, 2017, ABS170404173 CORR
   Dragoni  N., 2016, ABS160604036 CORR
   Dragoni N, 2018, LECT NOTES COMPUT SC, V10742, P95, DOI 10.1007/978-3-319-74313-4_8
   ElectricCloud, DEPL AUT
   Elenteny R, 2020, MICROSERVICE DEFINIT
   Engelen R.v., 2004, P 2004 ACM S APPL CO, P854, DOI DOI 10.1145/967900.968075
   Erl T., 2007, SOA Principles of Service Design
   Erl T, 2005, SERVICE ORIENTED ARC
   Esposte A. M. D., 2017, P 6 INT C SMART CIT
   Evans E., 2003, Domain-Driven Design
   Farcic V., 2018, DEVOPS 2 0 TOOLKIT A
   Filieri A., 2011, FORM ASP COMPUT, V24, P163
   Fisher T, 2014, DIGITAL TRANSFORMATI
   Fleurey F, 2009, LECT NOTES COMPUT SC, V5421, P97, DOI 10.1007/978-3-642-01648-6_11
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   Florio L, 2016, PR INT CONF AUTONOM, P357, DOI 10.1109/ICAC.2016.25
   Flygare R., 2017, Performance Characteristics Between Monolithic and Microservice-Based Systems
   Ford N, 2018, BUILDING MICROSERVIC
   Fowler M., 2014, Bounded context
   Fowler M., 2004, STRANGLER APPL
   Fowler M, 2004, EVENT INTERCEPTION
   Fowler M, 2006, EVENT COLLABORATION
   GALBRAITH K., 2019, 3 METHODS MICROSERVI
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garriga M, 2018, LECT NOTES COMPUT SC, V10729, P203, DOI 10.1007/978-3-319-74781-1_15
   Geerinck X, 2017, ARCHITECTURE RESOURC
   Georgiadis I., 2002, P 1 WORKSHOP SELF HE, P33, DOI DOI 10.1145/582128.582135.
   Gerking C, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P61, DOI 10.1109/ICSA.2019.00015
   Giallorenzo S, 2017, RIV PUBL SER AUTOMAT, P147
   Godwin S, 2016, CLOUD BASED MICROSER
   Haselböck S, 2017, LECT NOTES COMPUT SC, V10475, P155, DOI 10.1007/978-3-319-65831-5_11
   Hassan S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P1, DOI 10.1109/ICSA.2017.32
   Hassan S, 2016, P IEEE I C SERV COMP, P813, DOI 10.1109/SCC.2016.113
   Hasselbring W, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P133, DOI 10.1145/2851553.2858659
   Haupt F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P55, DOI 10.1109/ICSA.2017.40
   Haywood D, 2017, DEFENCE MONOLITH 1
   Hecht AM, 2015, SCI REP-UK, V5, DOI 10.1038/srep16604
   Heinrich R, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P199, DOI 10.1109/ICSAW.2017.33
   Herzberg N, 2018, P 10 ZEUS WORKSH ZEU
   Höhr S, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON MECHATRONICS (ICM), P321, DOI [10.1109/ICMECH.2019.8722926, 10.1109/icmech.2019.8722926]
   Huston T, 2018, WHAT IS MICROSERVICE
   Huttunen J, 2017, MICROSERVICE TESTING
   Iffland D, 2016, Q INTUITS ALEX BALAZ
   Ismail U, 2016, CHALLENGES MICROSERV
   Ivkovic I, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P133
   Jamshidi P, 2015, LECT NOTES COMPUT SC, V8954, P6, DOI 10.1007/978-3-319-22885-3_2
   Janes A, 2019, IEEE INT SYMP SOFTW, P163, DOI 10.1109/ISSREW.2019.00067
   Jaramillo Acevedo Cesar Augusto, 2017, 2017 6 INT C SOFTW P, P1
   Ji Z.-l., 2016, IJCS, V13, P8
   Joselyne MI, 2017, MICROSERVICES
   Joseph CT, 2019, SOFTWARE PRACT EXPER, V49, P1448, DOI 10.1002/spe.2729
   Joshi KR, 2005, 24TH IEEE SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P25, DOI 10.1109/RELDIS.2005.11
   Kaiser S, 2018, FUTURE MICROSERVICES
   Kallergis D, 2020, AD HOC NETW, V104, DOI 10.1016/j.adhoc.2020.102153
   Kalske M, 2018, LECT NOTES COMPUT SC, V10544, P32, DOI 10.1007/978-3-319-74433-9_3
   Kecskemeti G, 2016, 2016 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS 2016), P591, DOI 10.1109/HPCSim.2016.7568389
   Kessler FB, 2014, ASTRO CAPTEVO
   Khazaei H, 2016, INT CONF CLOUD COMP, P261, DOI [10.1109/CloudCom.2016.48, 10.1109/CloudCom.2016.0051]
   Killalea T, 2016, COMMUN ACM, V59, P42, DOI 10.1145/2948985
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kleindienst P, 2017, IMPLEMENTATION EVALU
   Klinaku F, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P93, DOI 10.1145/3185768.3186296
   Klock S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P11, DOI 10.1109/ICSA.2017.38
   Kothawade P, 2019, CLOUD SECURITY PENET, P68
   Kousiouris G, 2019, ICT EXPRESS, V5, P141, DOI 10.1016/j.icte.2019.04.002
   Koutsouras A, 2015, P 19 PANH C INF, P165, DOI [10.1145/2801948.2802030, DOI 10.1145/2801948.2802030]
   Krafzig D., ENTERPRISE SOA SERVI
   Kukade PP., 2015, INT J SCI RES, V4, P1960
   Kulkarni N, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P423, DOI 10.1109/SERVICES-1.2008.86
   Kwon YW, 2014, AUTOMAT SOFTW ENG, V21, P345, DOI 10.1007/s10515-013-0136-9
   Li SS, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P9, DOI 10.1109/APSECW.2017.33
   LINTHICUM DS, 2016, IEEE CLOUD COMPUT, V3, P6
   Little M, 2017, DIFFERENCE SOA MICRO
   LOFTIS H, 2015, WHY MICROSERVICES MA
   Losavio F, 2015, REV ANTIOQUENA CIENC, V5, P32
   Lotz J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P45, DOI 10.1109/ICSA-C.2019.00016
   Lv HD, 2020, PROCEEDINGS OF 2020 IEEE 4TH INFORMATION TECHNOLOGY, NETWORKING, ELECTRONIC AND AUTOMATION CONTROL CONFERENCE (ITNEC 2020), P2003, DOI [10.1109/ITNEC48623.2020.9084717, 10.1109/itnec48623.2020.9084717]
   Ma M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P60, DOI [10.1109/1CWS.2019.00022, 10.1109/ICWS.2019.00022]
   Ma SP, 2019, FUTURE GENER COMP SY, V100, P724, DOI 10.1016/j.future.2019.05.048
   MacKenzie C., 2006, Public Rev. Draft, V12, P18
   Malek S, 2005, LECT NOTES COMPUT SC, V3798, P99
   Martin LJ, 2014, MICROSERVICES DEFINI
   Maximilien E.M., 2004, 2 INT C SERVICE ORIE, P212
   McIlraith S., 2002, P 8 INT C KNOWLEDGE, P482
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Miles R, 2016, ANTIFRAGILE SOFTWARE
   dos Santos EFMD, 2019, 2019 INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS AND SOFTWARE TECHNOLOGIES (ICI2ST), P149, DOI 10.1109/ICI2ST.2019.00028
   Mo R, 2016, PROC INT CONF SOFTW, P499, DOI 10.1145/2884781.2884825
   Mongiello M, 2016, COMPLEX INTELL SYST, V2, P111, DOI 10.1007/s40747-016-0020-x
   Mont O, 2001, ARRAY0X8348A88
   Montesi F, 2017, LECT NOTES COMPUT SC, V10320, P131, DOI 10.1007/978-3-319-59665-5_9
   Montesi Fabrizio, 2016, CORR
   Morin B, 2009, PROC INT CONF SOFTW, P122, DOI 10.1109/ICSE.2009.5070514
   Mozaffari B., 2016, MICROSERVICE ARCHITE
   Müssig D, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P454, DOI 10.5220/0006373304540459
   Mustafa O, 2017, P SUST DIAL INT C SU
   Mustafa O, 2016, P 2016 EUR INT VIRT
   Naily MA, 2018, LECT NOTES COMPUT SC, V10729, P246, DOI 10.1007/978-3-319-74781-1_18
   Namiot D., 2014, International Journal of Open Information Technologies, V2, P24
   Newman S., 2015, BUILDING MICROSERVIC
   Newman S, 2014, PRACTICAL CONSIDER 1
   Newman S, 2014, PRACTICAL CONSIDER 2
   Nguyen P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P187, DOI 10.1109/ICAC.2017.38
   Niu Y, 2018, P IEEE INT C COMP CO
   Novatec, 2017, INTR MICR TEST CONS
   Nygard M., 2007, Release It!: Design and Deploy Production-Ready Software
   O'Connor RV, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1866
   OASIS, 2018, OASIS AMQP IS INTERN
   Oksa M, 2016, WEB API DEV INTEGRAT
   Oksanych I, 2017, INF TECHNOL, V2, P84
   Olliffe G, 2015, MICROSERVICES BUILDI
   Oreizy P., 1998, IEE Proceedings-Software, V145, P137, DOI 10.1049/ip-sen:19982296
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Ozkaya I., 2007, Quality-Attribute-Based Economic Valuation of Architectural Patterns
   Pahl C, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P137, DOI 10.5220/0005785501370146
   Papazoglou M.P., 2006, Service Oriented Computing (SOC)
   Papazoglou MP, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P3
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   Pautasso C, 2017, IEEE SOFTWARE, V34, P91, DOI 10.1109/MS.2017.24
   Penchikala S, 2017, SUSANNE KAISER MICRO
   Perrey R, 2003, 2003 SYMPOSIUM ON APPLICATIONS AND THE INTERNET WORKSHOPS, PROCEEDINGS, P116, DOI 10.1109/SAINTW.2003.1210138
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Ponce F, 2019, P INT C CHIL COMPUT, DOI [10.1109/sccc49216.2019.8966423, 10.1109/SCCC49216.2019.8966423]
   Porrmann T, 2017, IEEE IND ELEC, P3441, DOI 10.1109/IECON.2017.8216583
   Posta C, 2017, LOW RISK MONOLITH 2
   Posta C, 2017, HARDEST PART MICROSE
   Probst K, 2016, ENG TRADE OFFS NETFL
   Rademacher F, 2018, LECT NOTES COMPUT SC, V10729, P230, DOI 10.1007/978-3-319-74781-1_17
   Rademacher F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P38, DOI 10.1109/ICSAW.2017.32
   Rajagopalan S, 2015, P 7 USENIX WORKSH HO
   Rajasekar A, 2012, DATA INTENSIVE DISTR
   Rajasekar A, 2015, INTEGRATED RULE ORIE
   Rajavaram H, 2019, P 2019 IEEE INT C EL, P1
   Reinhold E, 2016, LESSONS LEARNED UBER
   Riahi T, 2019, DISTRIBUTED AGENT OR
   Richards M., 2016, MICROSERVICES VS SER
   Richardson C, 2016, MICROXCHG
   Richardson C., 2016, MICROSERVICES DESIGN
   Richardson C, 2014, PATTERN LANGUAGE MIC
   Richter D, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P130, DOI 10.1109/QRS-C.2017.28
   Riegg CS, 2015, COST EFFECTIVENESS C, P636
   Rodger R., 2017, The Tao of Microservices
   ROMBACH HD, 1987, IEEE T SOFTWARE ENG, V13, P344, DOI 10.1109/TSE.1987.233165
   Rosen MI, 2012, AIDS RES THER, V9, DOI 10.1186/1742-6405-9-30
   Sacolick I, 2018, WHAT IS CI CD CONTIN
   Salah T, 2016, INT CONF INTERNET, P318, DOI 10.1109/ICITST.2016.7856721
   Salvadori I, 2017, 19TH INTERNATIONAL CONFERENCE ON INFORMATION INTEGRATION AND WEB-BASED APPLICATIONS & SERVICES (IIWAS2017), P425, DOI 10.1145/3151759.3151793
   Sama M, 2010, CONTEXT AWARE ADAPTI
   Sami H, 2020, IEEE ACM T NETWORK, V28, P778, DOI 10.1109/TNET.2020.2973800
   Sampaio AR, 2017, PROC IEEE INT CONF S, P539, DOI 10.1109/ICSME.2017.63
   Sanjeev-Shareema BC, DEVOPS DUMMIES
   Scaffidi C., 2005, P 5 EDSER
   Schäffer E, 2019, PROC CIRP, V86, P86, DOI 10.1016/j.procir.2020.01.017
   Schaevitz S, 2017, DEPLOYING CHANGES PR
   Schmidt Douglas C., 2009, International Journal of Business Process Integration and Management, V4, P35, DOI 10.1504/IJBPIM.2009.026984
   Schmidt F, 2012, STUD COMPUT INTELL, V377, P95
   Schulz H, 2019, I S MOD ANAL SIM COM, P323, DOI 10.1109/MASCOTS.2019.00043
   Sharma G, 2017, SPRBRIEF ELECT, P9, DOI 10.1007/978-3-319-64373-1_2
   SHEPPERD M, 1990, SOFTWARE ENG J, V5, P3, DOI 10.1049/sej.1990.0002
   Shoumik FS, 2017, 2017 20TH INTERNATIONAL CONFERENCE OF COMPUTER AND INFORMATION TECHNOLOGY (ICCIT)
   Shoup R, 2016, GOTO 2016 PRAGMATIC
   Simons D, 2016, DECOUPLED APIS MICRO
   Soenen T, 2017, PROCEEDINGS OF 2017 9TH INTERNATIONAL WORKSHOP ON RESILIENT NETWORKS DESIGN AND MODELING (RNDM)
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Song Z, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P426, DOI 10.1109/ICWS.2019.00076
   Sorgalla J., 2017, EXTENDED ABSTRACTS M
   Srirama SN, 2020, J NETW COMPUT APPL, V160, DOI 10.1016/j.jnca.2020.102629
   Stal M, 2014, AGILE SOFTWARE ARCHI, P63, DOI [10.1016/B978-0-12-407772-000003-4, DOI 10.1016/B978-0-12-407772-000003-4]
   Stenberg J, 2017, SOA HERITAGE IMPACT
   Stenberg J, 2018, STRATEGIES DECOMPOSI
   Stenberg J, 2014, EXPLORING HEXAGONAL
   Stenberg J, 2015, MICROSERVICES TEAMS
   Sullivan K. J., 2001, Software Engineering Notes, V26, P99, DOI 10.1145/503271.503224
   Sullivan K.J., 1999, RISK BOOKS, P215
   Taha MB, 2019, PROCEDIA COMPUT SCI, V155, P441, DOI 10.1016/j.procs.2019.08.061
   Terzi B, 2017, ENTERPRISE INF SYST, V12, P1034
   ThoughtWorks Otto, 2016, LEG SYST FAST FLEX P
   Tilkov S, 2016, ONE SIZE DOES NOT FI
   Toffetti G., 2015, AIMC 15, P19, DOI [10.1145/2747470.2747474, DOI 10.1145/2747470.2747474]
   Tonse S, 2015, CHALLENGES TOOLS TRA
   Trends G, MICROSERVICES EXPLOR
   Truong HL, 2020, INTERNET THINGS-NETH, V9, DOI 10.1016/j.iot.2019.100150
   Uhle J, 2014, DEPENDABILITY MODELI
   Ulander D., 2017, Software Architectural Metrics for the Scania Internet of Things Platform: From a Microservice Perspectiv
   Vandermerwe S., 1988, EUROPEAN MANAGEMENT, V6, P314, DOI [10.1016/0263-2373(88)90033-3, DOI 10.1016/0263-2373(88)90033-3]
   Villamizar M, 2016, IEEE ACM INT SYMP, P179, DOI 10.1109/CCGrid.2016.37
   Vlaovic S, 2016, NETFLIX BILLING MIGR
   Vogel T, 2014, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2555612
   Vromant Pieter., 2011, Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems. SEAMS 2011, P202, DOI DOI 10.1145/1988008.1988037
   Vural H, 2017, LECT NOTES COMPUT SC, V10409, P203, DOI 10.1007/978-3-319-62407-5_14
   Wagner T, 2015, MICROSERVICES SERVER
   Wang P, 2020, IEEE ACCESS, V8, P49695, DOI 10.1109/ACCESS.2020.2979898
   Wang P, 2009, ICEBE 2009: IEEE INTERNATIONAL CONFERENCE ON E-BUSINESS ENGINEERING, PROCEEDINGS, P501, DOI 10.1109/ICEBE.2009.80
   Wasson M, 2018, DESIGNING MICROSERVI
   Weyns D., 2010, Proceedings of the 2010 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), P84, DOI [DOI 10.1145/1808984.1808994, 10.1145/1808984.1808994]
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wiggins A., 2017, 12 FACTOR APP
   Wizenty P, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P68, DOI 10.1145/3129790.3129821
   Wolff Eberhard, 2016, Microservices: Flexible Software Architecture
   Yáñez JM, 2015, FRONT GENET, V6, DOI 10.3389/fgene.2015.00128
   Yang MX, 2019, INT CONF SOFTW ENG, P706, DOI [10.1109/icsess47205.2019.9040740, 10.1109/ICSESS47205.2019.9040740]
   Yu Y, 2016, Adv Inform Managemen, P1856, DOI 10.1109/IMCEC.2016.7867539
   Zachman J.A., 2003, ZACHMAN FRAMEWORK EN
   Zeiner H, 2016, ELEKTROTECH INFORMAT, V133, P158, DOI 10.1007/s00502-016-0404-z
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
   Zhang Y., 2003, Proceedings of the 14th Australasian database conference, V17, P201
   Zheng TL, 2017, INT CONF ADV CLOUD B, P45, DOI 10.1109/CBD.2017.16
   Zhou X, 2018, P ICSE 18 COMP
   Zimmermann O., 2012, P WICSA ECSA 2012 CO, P96, DOI DOI 10.1145/23619992362021
   Zimmermann O., 2005, Companion to the 20th Annual ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications, P301
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
   Zimmermann O, 2017, COMPUTING, V99, P129, DOI 10.1007/s00607-016-0520-y
   2009, SOFTW ARCH KNOWL, P1
NR 288
TC 26
Z9 31
U1 1
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2020
VL 50
IS 9
BP 1651
EP 1681
DI 10.1002/spe.2869
EA JUN 2020
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MT2QQ
UT WOS:000542613100001
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Teles, G
   Rodrigues, JJPC
   Rabêlo, RAL
   Kozlov, SA
AF Teles, Germanno
   Rodrigues, Joel J. P. C.
   Rabelo, Ricardo A. L.
   Kozlov, Sergei A.
TI Comparative study of support vector machines and random forests machine
   learning algorithms on credit operation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Big Data; credit operation; machine learning; random forests; support
   vector machines
ID CLASSIFICATION
AB Corporate insolvency has significant adverse effects on an economy. With the number of multinationals increasing rapidly, corporate bankruptcy can severely disrupt the global financial environment. However, multinationals do not fail instantaneously; objective strategies combined with a rigorous analysis of both qualitative and quantifiable data can go a long way in identifying an organization's financial risks. Recent advancements in information and communication technologies have made data collection and storage an easy task. The challenge becomes mining the appropriate data about a company's financial risks and implementing it in forecasting a company's insolvency probabilities. In recent years, machine learning has been incorporated into big data analytics owing to its massive success in learning complex models. Machine learning algorithms such as Support Vector Machines (SVM), Random Forests (RF), Artificial Neural Networks, Gaussian Processes, and Adaptive Learning have been used in the analysis of Big Data to predict the financial risks of companies. In this paper, credit scoring is explored with regards to data processed using the collateral as an independent variable. The obtained results indicate that RF algorithm is promising for use in credit risk management. This research shows the advantages of the RF approach over the SVM algorithm are its speed and operational simplicity, and SVM has the benefit of higher classification accuracy than RF. The paper compares the SVM and RF algorithms to forecast the recovered value in a credit task. The execution of the projected intelligent systems uses tests and algorithms for authentication of the projected model.
C1 [Teles, Germanno; Rodrigues, Joel J. P. C.] Univ Beira Interior, Inst Telecomunicacoes, Covilha, Portugal.
   [Rodrigues, Joel J. P. C.; Rabelo, Ricardo A. L.] Fed Univ Piaui UFPI, Teresina, Brazil.
   [Rodrigues, Joel J. P. C.; Kozlov, Sergei A.] ITMO Univ, St Petersburg, Russia.
C3 Universidade da Beira Interior; Universidade Federal do Piaui; ITMO
   University
RP Rodrigues, JJPC (corresponding author), Univ Fed Piaui, Campus Petronio Portela, BR-64049550 Teresina, PI, Brazil.
EM joeljr@ieee.org
RI de Andrade Lira Rabelo, Ricardo/AAN-3551-2020; Rodrigues, Joel J. P.
   C./A-8103-2013
OI de Andrade Lira Rabelo, Ricardo/0000-0003-1482-6404; Rodrigues, Joel J.
   P. C./0000-0001-8657-3800
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [309335/2017-5, 200450/2015-8]; Fundacao para a Ciencia e a Tecnologia
   [UIDB/EEA/50008/2020]; Government of Russian Federation [08-08]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Numbers: Grant No. 309335/2017-5, Process No. 200450/2015-8;
   Fundacao para a Ciencia e a Tecnologia, Grant/Award Number: Project
   UIDB/EEA/50008/2020; Government of Russian Federation, Grant/Award
   Number: Grant No. 08-08
CR ADAMS JB, 1995, REMOTE SENS ENVIRON, V52, P137, DOI 10.1016/0034-4257(94)00098-8
   ALTMAN EI, 1968, J FINANC, V23, P589, DOI 10.2307/2978933
   Antonakis AC, 2009, J APPL STAT, V36, P537, DOI 10.1080/02664760802554263
   Aven T, 2016, EUR J OPER RES, V253, P1, DOI 10.1016/j.ejor.2015.12.023
   Bekiroglu B., 2011, IJAEST - INTERNATIONAL JOURNAL OF ADVANCED ENGINEERING SCIENCES AND TECHNOLOGIES, V9, P273
   Biau G, 2012, J MACH LEARN RES, V13, P1063
   Boardman J.W., 1993, Automating spectral unmixing of AVIRIS data using convex geometry concepts
   Boser B. E., 1992, Proceedings of the Fifth Annual ACM Workshop on Computational Learning Theory, P144, DOI 10.1145/130385.130401
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Crone SF, 2012, INT J FORECASTING, V28, P224, DOI 10.1016/j.ijforecast.2011.07.006
   Davutyan N., 2006, 13th Annual ERF Conference, P16
   Diederich J, 2008, STUD COMPUT INTELL, V80, P1, DOI 10.1007/978-3-540-75390-2
   El-Shazly Alaa., 2002, 9th Annual Conference of the Economic Research Forum, P1
   Fassnacht FE, 2016, REMOTE SENS ENVIRON, V186, P64, DOI 10.1016/j.rse.2016.08.013
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fitch D, 2007, DECIS SUPPORT SYST, V42, P2137, DOI 10.1016/j.dss.2006.05.008
   Hachicha W, 2012, COMPUT IND ENG, V63, P204, DOI 10.1016/j.cie.2012.03.002
   Jiao L, 2006, P 2 INT C ICNC 2006, P24
   Kabari L.G., 2013, Int. J. Eng. Res. Technol, V2, P2738
   Khondoker M, 2016, STAT METHODS MED RES, V25, P1804, DOI 10.1177/0962280213502437
   Lessmann S, 2015, EUR J OPER RES, V247, P124, DOI 10.1016/j.ejor.2015.05.030
   Lin WY, 2012, IEEE T SYST MAN CY C, V42, P421, DOI 10.1109/TSMCC.2011.2170420
   Marqués AI, 2012, EXPERT SYST APPL, V39, P10244, DOI 10.1016/j.eswa.2012.02.092
   Pereira S, 2015, PROCEDIA COMPUT SCI, V64, P601, DOI 10.1016/j.procs.2015.08.573
   Provost F., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P43
   Stalla-Bourdillon S., 2018, Data Protection and Privacy: The Internet of Bodies, P1
   Sweeney D., 2007, Statistics for Business and Economics, V7th
   Witzany Jiri., 2017, Credit Risk Management Pricing, Measurement, and Modeling
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Zhou HH, 2013, 2013 9TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY (CIS), P174, DOI 10.1109/CIS.2013.43
NR 31
TC 20
Z9 20
U1 5
U2 46
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2492
EP 2500
DI 10.1002/spe.2842
EA MAY 2020
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000531725300001
DA 2024-07-18
ER

PT J
AU Safaei, M
   Ismail, AS
   Chizari, H
   Driss, M
   Boulila, W
   Asadi, S
   Safaei, M
AF Safaei, Mahmood
   Ismail, Abul Samad
   Chizari, Hassan
   Driss, Maha
   Boulila, Wadii
   Asadi, Shahla
   Safaei, Mitra
TI Standalone noise and anomaly detection in wireless sensor networks: A
   novel time-series and adaptive Bayesian-network-based approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE anomaly detection; outlier detection; time-series analysis; wireless
   sensor network
ID OUTLIER DETECTION; DIAGNOSIS
AB Wireless sensor networks (WSNs) consist of small sensors with limited computational and communication capabilities. Reading data in WSN is not always reliable due to open environmental factors such as noise, weakly received signal strength, and intrusion attacks. The process of detecting highly noisy data is called anomaly or outlier detection. The challenging aspect of noise detection in WSN is related to the limited computational and communication capabilities of sensors. The purpose of this research is to design a local time-series-based data noise and anomaly detection approach for WSN. The proposed local outlier detection algorithm (LODA) is a decentralized noise detection algorithm that runs on each sensor node individually with three important features: reduction mechanism that eliminates the noneffective features, determination of the memory size of data histogram to accomplish the effective available memory, and classification for predicting noisy data. An adaptive Bayesian network is used as the classification algorithm for prediction and identification of outliers in each sensor node locally. Results of our approach are compared with four well-known algorithms using benchmark real-life datasets, which demonstrate that LODA can achieve higher (up to 89%) accuracy in the prediction of outliers in real sensory data.
C1 [Safaei, Mahmood; Ismail, Abul Samad] Univ Technol Malaysia, Fac Engn, Sch Comp Sci, Johor Baharu, Malaysia.
   [Chizari, Hassan] Univ Glouctershire, Dept Comp, Cheltenham, Glos, England.
   [Driss, Maha; Boulila, Wadii] Taibah Univ, Coll Comp Sci & Engn, Medina, Saudi Arabia.
   [Driss, Maha; Boulila, Wadii] Univ Manouba, Natl Sch Comp Sci, RIADI Lab, Manouba, Tunisia.
   [Asadi, Shahla] Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Seri Kembangan, Malaysia.
   [Safaei, Mitra] Leibniz Univ Hannover, Informat Gottrried Wilhelm, Hannover, Germany.
C3 Universiti Teknologi Malaysia; Taibah University; Universite de la
   Manouba; Universiti Putra Malaysia; Leibniz University Hannover
RP Boulila, W (corresponding author), Taibah Univ, Coll Comp Sci & Engn, Medina, Saudi Arabia.
EM wadii.boulila@riadi.rnu.tn
RI Boulila, Wadii/AGY-5718-2022; Chizari, Hassan/H-1732-2013
OI Boulila, Wadii/0000-0003-2133-0757; Chizari, Hassan/0000-0002-6253-1822;
   Safaei, Mahmood/0000-0002-3924-6927; Driss, Maha/0000-0001-8236-8746;
   Asadi, Shahla/0000-0002-8199-2122
CR Abid A, 2017, WIRELESS PERS COMMUN, V97, P1503, DOI 10.1007/s11277-017-4583-7
   Akyildiz IF, 2002, COMPUT NETW, V38, P393, DOI 10.1016/S1389-1286(01)00302-4
   Al-Sarem M, 2019, IEEE ACCESS, V7, P152788, DOI 10.1109/ACCESS.2019.2947855
   [Anonymous], 2005, P 1 ACM INT WORKSHOP
   [Anonymous], 2006, VLDB'06
   [Anonymous], 1980, IDENTIFICATION OUTLI
   Bhuse V, 2006, J HIGH SPEED NETW, V15, P33
   Boulila W, 2017, J COMPUT SCI-NETH, V23, P58, DOI 10.1016/j.jocs.2017.10.006
   Breunig MM, 2000, SIGMOD REC, V29, P93, DOI 10.1145/335191.335388
   Cauteruccio F, 2019, INFORM FUSION, V52, P13, DOI 10.1016/j.inffus.2018.11.010
   Chen Jinran, 2006, P WORKSH DEP ISS WIR, P65, DOI [10.1145/1160972.1160985, DOI 10.1145/1160972.1160985]
   Chen QQ, 2005, IEEE T COMPUT, V54, P1182, DOI 10.1109/TC.2005.140
   Ding M, 2005, IEEE INFOCOM SER, P902
   Farah IR, 2008, IEEE T GEOSCI REMOTE, V46, P4142, DOI 10.1109/TGRS.2008.2000817
   Ferchichi A, 2017, ECOL INFORM, V37, P24, DOI 10.1016/j.ecoinf.2016.11.006
   Ghalem SK, 2019, J NETW COMPUT APPL, V127, P9, DOI 10.1016/j.jnca.2018.11.009
   Hodge VJ, 2004, ARTIF INTELL REV, V22, P85, DOI 10.1023/B:AIRE.0000045502.10941.a9
   Illiano VP, 2018, ACM T SENSOR NETWORK, V14, DOI 10.1145/3176621
   Ji C, 2020, SOFTWARE PRACT EXPER, V50, P2065, DOI 10.1002/spe.2756
   Kumar V., 2006, Introduction to Data Mining
   Luo XW, 2006, IEEE T COMPUT, V55, P58, DOI 10.1109/TC.2006.13
   Ma M, 2007, IEEE T PARALL DISTR, V18, P1476, DOI 10.1109/TPDS.2007.1070
   Mahmud M, 2018, IEEE T NEUR NET LEAR, V29, P2063, DOI 10.1109/TNNLS.2018.2790388
   Martincic F., 2006, 2006 International Conference on Systems and Networks Communications (ICSNC'06), P43
   Nisha UB, 2017, INT J FUZZY SYST, V19, P1528, DOI 10.1007/s40815-016-0253-2
   Ord K, 1996, INT J FORECASTING, V12, P175, DOI 10.1016/0169-2070(95)00625-7
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   Ramotsoela D, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18082491
   Rubia R., 2014, INT J ENG TRENDS TEC, V7, P205
   Saneja B, 2017, INT J COMMUN SYST, V30, DOI 10.1002/dac.3352
   Shahid N, 2015, ARTIF INTELL REV, V43, P515, DOI 10.1007/s10462-013-9395-x
   Titouna C, 2019, COMPUT NETW, V161, P93, DOI 10.1016/j.comnet.2019.06.014
   Wang F, 2011, IEEE COMMUN SURV TUT, V13, P673, DOI 10.1109/SURV.2011.060710.00066
   Yick J, 2008, COMPUT NETW, V52, P2292, DOI 10.1016/j.comnet.2008.04.002
   Younis M, 2008, AD HOC NETW, V6, P621, DOI 10.1016/j.adhoc.2007.05.003
   Zhang Y., 2007, Computer, V49, P355
   Zhang Y, 2010, IEEE COMMUN SURV TUT, V12, P159, DOI 10.1109/SURV.2010.021510.00088
NR 37
TC 37
Z9 40
U1 2
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2020
VL 50
IS 4
BP 428
EP 446
DI 10.1002/spe.2785
EA JAN 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS7QQ
UT WOS:000506570700001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Son, J
   He, TZ
   Buyya, R
AF Son, Jungmin
   He, TianZhang
   Buyya, Rajkumar
TI CloudSimSDN-NFV: Modeling and simulation of network function
   virtualization and service function chaining in edge computing
   environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; edge computing; network function virtualization (NFV);
   service function chaining (SFC); simulation software; software-defined
   clouds; software-defined networking (SDN)
ID CLOUD; MANAGEMENT; TOOLKIT; AWARE; FOG
AB Software-defined networking (SDN) has evolved and brought an innovative paradigm shift in computer networks by utilizing a programmable software controller with open protocols. Network functions, previously served on dedicated hardware, have shifted to network function virtualization (NFV) that enabled functions to be virtualized and provisioned dynamically upon generic hardware. In addition to NFV, edge computing utilizes the edge resources close to end-users, which can reduce the end-to-end service delay and the network traffic volume. Although these innovative technologies gained significant attention from both academia and industry, there are limited tools and simulation frameworks for the effectiveness evaluation in a repeatable and controllable manner. Furthermore, large-scale experimental infrastructures are expensive to setup and difficult to maintain. Even if they are created, they are not available or accessible for the majority of researchers throughout the world. In this paper, we propose a framework for simulating NFV functionalities in both edge and cloud computing environments. In addition to the basic network functionalities supported by SDN in CloudSimSDN, we added new NFV features, such as virtualized network functions allocation, migration, and autoscaling with the support of corresponding network functionalities, such as flow load balancing, rerouting, and service function chaining (SFC) maintenance. We evaluated our simulation framework with autoscaling and placement policies for SFC in the integrated edge and cloud computing environments. The results demonstrate its effectiveness in measuring and evaluating the end-to-end delay, response time, resource utilization, network traffic, and power consumption with different algorithms in each scenario.
C1 [Son, Jungmin; He, TianZhang; Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Buyya, R (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic 3010, Australia.
EM rbuyya@unimelb.edu.au
RI He, TianZhang/AEF-2833-2022; Buyya, Rajkumar/C-3424-2009
OI He, TianZhang/0000-0002-5472-7681; Buyya, Rajkumar/0000-0001-9754-6496;
   Son, Jungmin/0000-0001-6278-2368
CR Al-Fares M., 2008, P ACM SIGCOMM 2008 C
   [Anonymous], 2018, NETW FUNCT VIRT
   [Anonymous], OP SOURC NFV MAN ORC
   Aroca JA, 2015, IEEE J SEL AREA COMM, V33, P2863, DOI 10.1109/JSAC.2015.2481198
   Boubendir A, 2016, P 12 INT C NETW SERV
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chang C., 2019, FOG EDGE COMPUTING P, P1
   Cziva R, 2018, P IEEE INFOCOM 2018
   Cziva R, 2017, IEEE COMMUN MAG, V55, P24, DOI 10.1109/MCOM.2017.1601039
   Dominicini CK, 2017, IEEE T NETW SERV MAN, V14, P817, DOI 10.1109/TNSM.2017.2756062
   Ersoz Deniz, 2007, P INT C DISTR COMP S, V1, DOI [10.1109/ICDCS.2007.90, DOI 10.1109/ICDCS.2007.90]
   Filho MCS, 2017, P IFIP IEEE S INT NE
   Garg SK, 2011, P 4 IEEE INT C UT CL
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   He TZ, 2019, J PARALLEL DISTR COM, V131, P55, DOI 10.1016/j.jpdc.2019.04.014
   Ilager S, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5221
   Kaup F, 2014, P IEEE 10 INT C NETW
   Lantz Bob, 2010, P 9 ACM SIGCOMM WORK, P1
   Louis B, 2015, P 2015 IEEE ACM 8 IN
   McKeown N, 2008, ACM SIGCOMM COMP COM, V38, P69, DOI 10.1145/1355734.1355746
   Mijumbi R, 2016, IEEE COMMUN MAG, V54, P98, DOI 10.1109/MCOM.2016.7378433
   OpenStack Tacker, 2019, OPENSTACK SERV NFV O
   Pedram M, 2010, P 39 INT C PAR PROC
   Pelley S., 2009, P WORKSH EN EFF DES, V11, P1
   Piraghaj SF, 2017, SOFTWARE PRACT EXPER, V47, P505, DOI 10.1002/spe.2422
   Riggio R, 2018, P 2018 IEEE IFIP NET
   Son J, 2015, P 15 IEEE ACM INT S
   Son J, 2019, NPJ QUANTUM MATER, V4, DOI 10.1038/s41535-019-0157-0
   Son J, 2019, J SYST SOFTWARE, V152, P24, DOI 10.1016/j.jss.2019.02.030
   Son JM, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3190617
   Son J, 2017, IEEE T SUST COMPUT, V2, P76, DOI 10.1109/TSUSC.2017.2702164
   Toosi AN, 2019, J SYST SOFTWARE, V152, P108, DOI 10.1016/j.jss.2019.02.052
   van Lingen F, 2017, IEEE COMMUN MAG, V55, P28, DOI 10.1109/MCOM.2017.1600907
   Wang X, 2012, P 2012 IEEE INFOCOM
NR 35
TC 26
Z9 28
U1 1
U2 27
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2019
VL 49
IS 12
BP 1748
EP 1764
DI 10.1002/spe.2755
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JH7QQ
UT WOS:000492963400004
OA Green Published
DA 2024-07-18
ER

PT J
AU Zhou, A
   Sun, QB
   Li, JL
AF Zhou, Ao
   Sun, Qibo
   Li, Jinglin
TI BCEdge: Blockchain-based resource management in D2D-assisted mobile edge
   computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE blockchain; mobile edge computing; mobile services; resource management
ID CLOUD; ENERGY; DEPLOYMENT; INTERNET; IOT
AB In recent decades, newly emerging mobile applications and services are becoming increasingly resource hungry and computation intensive. Portable size mobile devices fall short in providing such services. Cloud computing has been a core computation technology to provide visualized resources in a scalable way for mobile services. However, the unpredictable network transmission latency makes cloud computing not efficient enough for time-sensitive mobile services, which requires major changes in underlying computing platform. Mobile edge computing is widely known as one of the novel technologies has emerged in recent years to address this issue. For being impractical to construct huge edge cloud in network edge, edge clouds can still be overloaded in rush time. Offloading to near-user facilities using device-to-device (D2D) or other technologies becomes an augmentation approach. However, how to manage the facilities/resources effectively become a new issue. In this paper, we proposed a resource management scheme named BCEdge based on blockchain in D2D-assisted mobile edge computing. BCEdge is a reliable scheme that operates in a distributed way to relieve the load of edge clouds. We illustrate the advantages and technical details of BCEdge using flow charts and interaction charts. The experiment results validate the effectiveness of our scheme. Finally, we discuss the possible future extensions.
C1 [Zhou, Ao; Sun, Qibo; Li, Jinglin] Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, Beijing 100876, Peoples R China.
   [Zhou, Ao; Sun, Qibo; Li, Jinglin] 10 Xitucheng Rd, Beijing 100876, Peoples R China.
C3 Beijing University of Posts & Telecommunications
RP Zhou, A (corresponding author), Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, Beijing 100876, Peoples R China.; Zhou, A (corresponding author), 10 Xitucheng Rd, Beijing 100876, Peoples R China.
EM aozhou@bupt.edu.cn
FU National Natural Science Foundation of China [61602054, 61571066]
FX National Natural Science Foundation of China, Grant/Award Number:
   61602054 and 61571066
CR [Anonymous], 2010, PROC 8 INT C MOBILE, DOI [DOI 10.1145/1814433, 10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   [Anonymous], 2012, Cuckoo: A computation offloading framework for smartphones, DOI DOI 10.1007/978-3-642-29336-84
   Ao Zhou, 2019, Cluster Computing, V22, pS11619, DOI 10.1007/s10586-017-1426-y
   Azaria A, 2016, PROCEEDINGS 2016 2ND INTERNATIONAL CONFERENCE ON OPEN AND BIG DATA - OBD 2016, P25, DOI 10.1109/OBD.2016.11
   Borjigin W, 2018, IEEE T NETW SERV MAN, V15, P1322, DOI 10.1109/TNSM.2018.2882535
   Chen MH, 2018, IEEE T MOBILE COMPUT, V17, P2868, DOI 10.1109/TMC.2018.2815533
   Chen XW, 2019, IEEE ACCESS, V7, P59172, DOI 10.1109/ACCESS.2019.2915020
   Chen X, 2017, IEEE WIREL COMMUN, V24, P64, DOI 10.1109/MWC.2017.1600321
   Chen X, 2016, IEEE ACM T NETWORK, V24, P2827, DOI 10.1109/TNET.2015.2487344
   Chun BG, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P301
   Dorri A, 2017, INT CONF PERVAS COMP
   DROLIA U, 2017, INT CONF PERVAS COMP, pNI665
   FAN Q, 2017, IEEE ICC
   Guo HZ, 2018, IEEE COMMUN MAG, V56, P14, DOI 10.1109/MCOM.2018.1701069
   Habak K, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P9, DOI 10.1109/CLOUD.2015.12
   Higashino T, 2017, INT CON DISTR COMP S, P1729, DOI 10.1109/ICDCS.2017.160
   Jia MK, 2017, IEEE T CLOUD COMPUT, V5, P725, DOI 10.1109/TCC.2015.2449834
   Kosba A, 2016, P IEEE S SECUR PRIV, P839, DOI 10.1109/SP.2016.55
   Kosta S, 2012, IEEE INFOCOM SER, P945, DOI 10.1109/INFCOM.2012.6195845
   Li H, 2018, IEEE NETWORK, V32, P96, DOI 10.1109/MNET.2018.1700202
   Liu X, 2016, IEEE T SERV COMPUT
   Ma LJ, 2017, IEEE ACM INT SYMP, P196, DOI 10.1109/CCGRID.2017.34
   Mach P, 2017, IEEE COMMUN SURV TUT, V19, P1628, DOI 10.1109/COMST.2017.2682318
   Madni SHH, 2016, J NETW COMPUT APPL, V68, P173, DOI 10.1016/j.jnca.2016.04.016
   Mao YJ, 2017, INT GEOL REV, V59, P1276, DOI [10.1109/COMST.2017.2745201, 10.1080/00206814.2016.1209435]
   Mehrabi A, 2019, IEEE T MOBILE COMPUT, V18, P787, DOI 10.1109/TMC.2018.2850026
   Neto JLD, 2018, IEEE T MOBILE COMPUT, V17, P2660, DOI 10.1109/TMC.2018.2815015
   Ouaddah A, 2016, SECUR COMMUN NETW, V9, P5943, DOI 10.1002/sec.1748
   Saab SA, 2015, SUSTAIN COMPUT-INFOR, V8, P38, DOI 10.1016/j.suscom.2015.09.002
   Satyanarayanan M, 2017, COMPUTER, V50, P30, DOI 10.1109/MC.2017.9
   Sharples M, 2016, LECT NOTES COMPUT SC, V9891, P490, DOI 10.1007/978-3-319-45153-4_48
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Sun X, 2016, IEEE COMMUN MAG, V54, P22, DOI 10.1109/MCOM.2016.1600492CM
   Tanzil SMS, 2015, IEEE GLOB COMM CONF, DOI 10.1109/GLOCOM.2015.7417264
   Tran TX, 2017, IEEE COMMUN MAG, V55, P54, DOI 10.1109/MCOM.2017.1600863
   Wilson D, 2015, INT C NETW SYST SEC, DOI [10.1007/978-3-319-25645-0_25, DOI 10.1007/978-3-319-25645-0_25]
   Wu ZY, 2019, FUTURE GENER COMP SY, V92, P17, DOI 10.1016/j.future.2018.09.032
   Xu JW, 2018, IEEE COMMUN MAG, V56, P102, DOI 10.1109/MCOM.2018.1700909
   Xu XD, 2017, IEEE ACCESS, V5, P16406, DOI 10.1109/ACCESS.2017.2739343
   Xu ZC, 2015, C LOCAL COMPUT NETW, P570, DOI 10.1109/LCN.2015.7366372
   Yang L, 2017, IEEE INT CONF CLOUD, P246, DOI 10.1109/CLOUD.2017.39
   Yasin Affan, 2016, 2016 IEEE 40th Annual Computer Software and Applications Conference (COMPSAC), P192, DOI 10.1109/COMPSAC.2016.2
   Yi S, 2017, 2017 IEEE 37 INT C D
   Yuan Y, 2016, 2016 IEEE 19TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P2663, DOI 10.1109/ITSC.2016.7795984
   Zhang H, 2013, IEEE INFOCOM SER, P1510
   Zhang J, 2016, IEEE ACCESS, V4, P9239, DOI 10.1109/ACCESS.2016.2645904
   Zhou A, 2017, IEEE T SERV COMPUT, V10, P902, DOI 10.1109/TSC.2016.2519898
   Zhou A, 2016, IEEE T CLOUD COMPUT, V4, P452, DOI 10.1109/TCC.2014.2369421
   Zyskind G, 2015, 2015 IEEE SECURITY AND PRIVACY WORKSHOPS (SPW), P180, DOI 10.1109/SPW.2015.27
NR 49
TC 14
Z9 15
U1 0
U2 38
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2021
VL 51
IS 10
SI SI
BP 2085
EP 2102
DI 10.1002/spe.2758
EA OCT 2019
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UN1VW
UT WOS:000491846200001
DA 2024-07-18
ER

PT J
AU Chiang, ML
   Su, WL
   Tu, SW
   Lin, ZW
AF Chiang, Mei-Ling
   Su, Wei-Lun
   Tu, Shu-Wei
   Lin, Zhen-Wei
TI Memory-aware kernel mechanism and policies for improving internode load
   balancing on NUMA systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE load balancing; NUMA; remote memory access; resource contention;
   scheduling
AB Although nonuniform memory access architecture provides better scalability for multicore systems, cores accessing memory on remote nodes take longer than those accessing on local nodes. Remote memory access accompanied by contention for internode interconnection degrades performance. Properly mapping threads to cores and data accessed to their nodes can substantially improve performance and energy efficiency. However, an operating system kernel's load-balancing activity may migrate threads across nodes, which thus messes up the thread mapping. Besides, subsequent data mapping behavior pays for the cost of page migration to reduce remote memory access. Once unsuitable threads are migrated, it is detrimental to system performance. This paper focuses on improving the kernel's internode load balancing on nonuniform memory access systems. We develop a memory-aware kernel mechanism and policies to reduce remote memory access incurred by internode thread migration. The Linux kernel's load balancing mechanism is modified to incorporate selection policies in the internode thread migration, and the kernel is modified to track the amount of memory used by each thread on each node. With this information, well-designed policies can then choose suitable threads for internode migration. The purpose is to avoid migrating a thread that might incur relatively more remote memory access and page migration. The experimental results show that with our mechanism and the proposed selection policies, the system performance is substantially increased when compared with the unmodified Linux kernel that does not consider memory usage and always migrates the first-fit thread in the runqueue that can be migrated to the target central processing unit.
C1 [Chiang, Mei-Ling; Su, Wei-Lun; Tu, Shu-Wei; Lin, Zhen-Wei] Natl Chi Nan Univ, Dept Informat Management, Nantou 54561, Taiwan.
C3 National Chi Nan University
RP Chiang, ML (corresponding author), Natl Chi Nan Univ, Dept Informat Management, Nantou 54561, Taiwan.
EM joanna@ncnu.edu.tw
OI Chiang, Mei-Ling/0000-0001-9022-577X
FU Ministry of Science and Technology, Taiwan [MOST 105-2221-E-260-015,
   106-2221-E-260-001]
FX Ministry of Science and Technology, Taiwan, Grant/Award Number: MOST
   105-2221-E-260-015 and 106-2221-E-260-001
CR [Anonymous], 2011, BENCHMARKING MODERN
   [Anonymous], 2008, P WORKSH POW AW COMP
   ASUS, TS500 E6 PS4 SERV
   Barrera IS, 2018, P 2018 INT C SUP ICS
   Blagodurov Sergey., 2011, P 2011 USENIX C USEN
   Bovet D. P., 2005, Understanding the Linux Kernel: from I/O ports to process management
   Chiang ML, 2016, J SYST SOFTWARE, V121, P72, DOI 10.1016/j.jss.2016.08.038
   Chiang ML, 2018, 2018 IEEE 42 ANN COM
   Corbet J, BETTER NUMA SCHEDULI
   Corbet Jonathan., AutoNUMA: the Other Approach to NUMA Scheduling
   Cruz EHM, 2016, P 22 INT EUR PAR PRO
   Dashti M, 2013, ACM SIGPLAN NOTICES, V48, P381, DOI 10.1145/2499368.2451157
   Di Gennaro ID, 2016, 2016 16 IEEE ACM INT
   Diener Matthias, 2017, ACM Computing Surveys, V49, DOI 10.1145/3006385
   Diener M, 2016, IEEE T PARALL DISTR, V27, P2653, DOI 10.1109/TPDS.2015.2504985
   Goglin B, 2009, LIN S MONTR CAN
   Goglin B, 2009, P 2009 IEEE INT S PA
   Knauerhase R, 2008, IEEE MICRO, V28, P54, DOI 10.1109/MM.2008.48
   Lameter C, 2013, COMMUN ACM, V56, P59, DOI 10.1145/2500468.2500477
   Lepers B., 2015, P 2015 USENIX C US A
   Li T., 2007, P 2007 ACM IEEE C SU
   Lozi JP, 2016, PROCEEDINGS OF THE ELEVENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS, (EUROSYS 2016), DOI 10.1145/2901318.2901326
   Marchetti M., 1995, P 9 INT PAR PROC S S
   Merkel A, 2010, P 5 EUR C COMP SYST
   Mishra VK, 2013, P 2013 IEEE 3 INT AD
   PARSEC, 2019, BENCHM SUIT
   SCHERMERHORN LT, 2007, P LIN S SYDN AUSTR
   Seo D, 2014, 2014 C TIM RES OP SY
   Singh A. K., 2013, DES AUT CON, P1
   Srikanthan S., 2015, ATC
   Supermicro, A SERV 4042G 72RF4
   Terboven C, 2008, P 2008 WORKSH MEM AC
   Unat D, 2017, IEEE T PARALL DISTR, V28, P3007, DOI 10.1109/TPDS.2017.2703149
   Virouleau P, 2016, P 22 INT EUR PAR PRO
   Zhuravlev S, 2010, 15 INT C ARCH SUPP P
   Zhuravlev S, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379780
NR 36
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2019
VL 49
IS 10
BP 1485
EP 1508
DI 10.1002/spe.2731
EA JUL 2019
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU8BK
UT WOS:000478119100001
DA 2024-07-18
ER

PT J
AU Riganelli, O
   Micucci, D
   Mariani, L
AF Riganelli, Oliviero
   Micucci, Daniela
   Mariani, Leonardo
TI From source code to test cases: A comprehensive benchmark for resource
   leak detection in Android apps
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Android app; benchmark; bug detection; resource leak
AB Android apps share resources, such as sensors, cameras, and Global Positioning System, that are subject to specific usage policies whose correct implementation is left to programmers. Failing to satisfy these policies may cause resource leaks, that is, apps may acquire but never release resources. This might have different kinds of consequences, such as apps that are unable to use resources or resources that are unnecessarily active wasting battery. Researchers have proposed several techniques to detect and fix resource leaks. However, the unavailability of public benchmarks of faulty apps makes comparison between techniques difficult, if not impossible, and forces researchers to build their own data set to verify the effectiveness of their techniques (thus, making their work burdensome). The aim of our work is to define a public benchmark of Android apps affected by resource leaks. The resulting benchmark, called AppLeak, is publicly available on GitLab and includes faulty apps, versions with bug fixes (when available), test cases to automatically reproduce the leaks, and additional information that may help researchers in their tasks. Overall, the benchmark includes a body of 40 faults that can be exploited to evaluate and compare both static and dynamic analysis techniques for resource leak detection.
C1 [Riganelli, Oliviero; Micucci, Daniela; Mariani, Leonardo] Univ Milano Bicocca, Dipartimento Informat Sistemist & Comunicaz, Viale Sarca 336, I-20126 Milan, Italy.
C3 University of Milano-Bicocca
RP Riganelli, O (corresponding author), Univ Milano Bicocca, Dipartimento Informat Sistemist & Comunicaz, Viale Sarca 336, I-20126 Milan, Italy.
EM oliviero.riganelli@unimib.it
RI Riganelli, Oliviero/AAD-9285-2020; MICUCCI, DANIELA/AAB-6066-2020
OI Riganelli, Oliviero/0000-0003-2120-2894; MICUCCI,
   DANIELA/0000-0003-1261-2234
FU European Research Council [646867]; European Research Council (ERC)
   [646867] Funding Source: European Research Council (ERC)
FX Horizon 2020 LEARN Project funded under the European Research Council
   Consolidator Grant 2014 program, Grant/Award Number: 646867
CR Amann S, 2018, MUBENCH
   Amann S, 2016, P 13 WORK C MIN SOFT
   AppBrain, 2018, NUMB ANDR APPL GOOGL
   Azim MT, 2014, P 29 ACM IEEE INT C
   Banerjee A, 2018, IEEE T SOFTWARE ENG, V44, P470, DOI 10.1109/TSE.2017.2689012
   Banerjee Abhijeet, 2014, P 22 ACM SIGSOFT INT
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gray J., 1992, The benchmark handbook for database and transaction systems
   Guo C, 2013, P 2013 28 IEEE ACM I
   IDC, 2017, SMARTPH OS MARK SHAR
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Liu J, 2016, P 2016 27 INT S SOFT
   Liu Y, 2016, ARXIV161108079
   Liu YP, 2014, IEEE T SOFTWARE ENG, V40, P911, DOI 10.1109/TSE.2014.2323982
   McDonnell T, 2013, P 2013 IEEE INT C SO
   Riganelli O, 2017, P 17 INT C RUNT VER
   Riganelli O, 2017, P 2017 IEEE ACM 12 I
   Riganelli O, 2016, P INT WORKSH SOFTW F
   Sim SE, 2003, P 25 INT C SOFTW ENG
   Voorhees E. M., 2005, TREC: Experiment and Evaluation in Information Retrieval
   Wu TY, 2016, IEEE T SOFTWARE ENG, V42, P1054, DOI 10.1109/TSE.2016.2547385
   Yan D, 2013, P 2013 24 INT S SOFT
NR 25
TC 5
Z9 5
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2019
VL 49
IS 3
BP 540
EP 548
DI 10.1002/spe.2672
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0HU
UT WOS:000459868900010
PM 31007293
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Zou, Q
   Li, GQ
   Yu, WY
AF Zou, Quan
   Li, Guoqing
   Yu, Wenyang
TI MapReduce functions to remote sensing distributed data processingGlobal
   vegetation drought monitoring as example
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; data abstraction; global vegetation drought-monitoring
   model; MapReduce
ID DIFFERENCE WATER INDEX; DIGITAL EARTH; HIGH-PERFORMANCE; MULTI-PLATFORM;
   CLASSIFICATION; MODELS; NDWI
AB Global change models for different applications are developed, according to the principle of remote sensing technology. Data for these models are generally remote sensing image, which is multiplatform, multidimentional, multiband, and multisource. Moreover, such data may be in different parts of the world and perhaps up to terabyte or petabyte level. Therefore, a data-intensive computing problem in the global change has emerged. Distributed computing infrastructures are suitable to store large-scale datalike satellite images that have to be written only once and read frequently. The emergence of the cloud computing technology brings new information architecture, and global change models implemented in the cloud platform provide users with stable, effective, on-demand cloud computing services. In this paper, the experiment is carried out on the cloud framework based on open cloud computing platform-Hadoop. In addition, on this framework, it achieves a prototype example for monitoring global vegetation drought conditions. Oriented to a variety of remote sensing data, we propose an abstract data format to achieve the unified description of remote sensing data. The data abstraction is to discretize the multidimensional remote sensing data for easy-distributed storage and computation. Using MapReduce paradigm, the complexity of remote sensing algorithms is resolved. Experimental results show that based on the parallel programming method, good scalability changing with the amount of processed data in the Hadoop distributed environment.
C1 [Zou, Quan] Southwest Univ, Sch Comp Informat & Sci, Chongqing, Peoples R China.
   [Li, Guoqing; Yu, Wenyang] Chinese Acad Sci, Inst Remote Sensing & Digital Earth, Key Lab Digital Earth, Beijing, Peoples R China.
C3 Southwest University - China; Chinese Academy of Sciences; The Institute
   of Remote Sensing & Digital Earth, CAS
RP Zou, Q (corresponding author), Southwest Univ, Sch Comp Informat & Sci, Chongqing, Peoples R China.
EM qzou2014@swu.edu.cn
OI zou, quan/0000-0002-9504-3622
FU Fundamental Research Funds for the Central Universities [XDJK2015C025,
   SWU114094]
FX Fundamental Research Funds for the Central Universities, Grant/Award
   Number: XDJK2015C025 and SWU114094
CR [Anonymous], GRIDS CLOUDS VIRTUAL
   [Anonymous], 2001, REMOTE SENSING INFOR
   [白力改 Bai Ligai], 2012, [干旱区地理, Arid Land Geography], V35, P708
   Benz UC, 2004, ISPRS J PHOTOGRAMM, V58, P239, DOI 10.1016/j.isprsjprs.2003.10.002
   Bruzzone L, 1999, IEEE T GEOSCI REMOTE, V37, P1350, DOI 10.1109/36.763299
   Bürger CM, 2012, COMPUT GEOSCI-UK, V48, P334, DOI 10.1016/j.cageo.2012.01.007
   Campo L, 2006, HYDROL PROCESS, V20, P2693, DOI 10.1002/hyp.6061
   Cary A, 2009, LECT NOTES COMPUT SC, V5566, P302, DOI 10.1007/978-3-642-02279-1_24
   Chen JM, 2003, REMOTE SENS ENVIRON, V84, P516, DOI 10.1016/S0034-4257(02)00150-5
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dong J, 2011, 2011 IEEE INT GEOSC
   Douglas L, 2012, IMPORTANCE BIG DATA
   Gallo K, 2005, REMOTE SENS ENVIRON, V99, P221, DOI 10.1016/j.rse.2005.08.014
   Gao BC, 1996, REMOTE SENS ENVIRON, V58, P257, DOI 10.1016/S0034-4257(96)00067-3
   Huang QY, 2013, COMPUT GEOSCI-UK, V59, P41, DOI 10.1016/j.cageo.2013.05.001
   Huang QY, 2013, INT J DIGIT EARTH, V6, P338, DOI 10.1080/17538947.2012.749949
   Jin H, 2013, FUTURE GENER COMP SY, V29, P1808, DOI 10.1016/j.future.2013.01.013
   Kaiser C, 2013, PERVASIVE MOB COMPUT, V9, P708, DOI 10.1016/j.pmcj.2012.11.003
   Kim IH, 2013, INT J DIGIT EARTH, V6, P383, DOI 10.1080/17538947.2013.783125
   Kim T, 2011, 2011 IEEE 17 INT C P
   Krieger G, 2008, IEEE T GEOSCI REMOTE, V46, P31, DOI 10.1109/TGRS.2007.905974
   Kune R, 2006, SOFTWARE PRACT EXPER, V47, P455
   Liu Y, 2013, INT J DIGIT EARTH, V6, P313, DOI 10.1080/17538947.2012.687778
   Lv ZH, 2010, LECT NOTES COMPUT SC, V6318, P162, DOI 10.1007/978-3-642-16515-3_21
   Ma Y, 2015, FUTURE GENER COMP SY, V51, P47, DOI 10.1016/j.future.2014.10.029
   MYNENI RB, 1995, IEEE T GEOSCI REMOTE, V33, P481, DOI 10.1109/36.377948
   PAOLA JD, 1995, INT J REMOTE SENS, V16, P3033, DOI 10.1080/01431169508954607
   Petit CC, 2001, INT J GEOGR INF SCI, V15, P785, DOI 10.1080/13658810110074483
   Rezgui A, 2013, PROCEDIA COMPUT SCI, V18, P2615, DOI 10.1016/j.procs.2013.05.453
   Rhee J, 2010, REMOTE SENS ENVIRON, V114, P2875, DOI 10.1016/j.rse.2010.07.005
   Schaffer B, 2010, GEOSP THINK 13 AGILE
   Schonberger V., 2013, BIG DATA REVOLUTION
   SELLERS PJ, 1985, INT J REMOTE SENS, V6, P1335, DOI 10.1080/01431168508948283
   Shen Zhan-feng, 2006, Journal of the Harbin Institute of Technology, V38, P1968
   Sun A, 2013, ENVIRON MODELL SOFTW, V41, P93, DOI 10.1016/j.envsoft.2012.11.008
   Tanre D, 1997, J GEOPHYS RES-ATMOS, V102, P16971, DOI 10.1029/96JD03437
   Tripathy GK, 1996, INT J REMOTE SENS, V17, P2243, DOI 10.1080/01431169608948771
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P739, DOI 10.1016/j.future.2012.09.001
   Wang PY, 2013, FUTURE GENER COMP SY, V29, P1963, DOI 10.1016/j.future.2013.05.002
   Wang XY, 2013, APPL MECH MATER, V333-335, P1224, DOI 10.4028/www.scientific.net/AMM.333-335.1224
   Wen YN, 2013, INT J DIGIT EARTH, V6, P356, DOI 10.1080/17538947.2012.716861
   Xu HQ, 2006, INT J REMOTE SENS, V27, P3025, DOI 10.1080/01431160600589179
   Xue Y, 2011, INT J DIGIT EARTH, V4, P185, DOI 10.1080/17538947.2010.535569
   Yang CW, 2013, INT J DIGIT EARTH, V6, P297, DOI 10.1080/17538947.2013.769783
   Yang CW, 2011, INT J DIGIT EARTH, V4, P305, DOI 10.1080/17538947.2011.587547
   Yu B, 2012, INFORM SYST, V38, P1252
   Yuan F, 2005, REMOTE SENS ENVIRON, V98, P317, DOI 10.1016/j.rse.2005.08.006
   Yue P, 2013, INT J DIGIT EARTH, V6, P404, DOI 10.1080/17538947.2012.748847
   Zhang JX, 2010, INT J IMAGE DATA FUS, V1, P5, DOI 10.1080/19479830903561035
   Zhang S, 2009, 8 INT C IEEE
NR 50
TC 17
Z9 17
U1 0
U2 36
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2018
VL 48
IS 7
BP 1352
EP 1367
DI 10.1002/spe.2578
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI6XE
UT WOS:000434645700002
DA 2024-07-18
ER

PT J
AU Cassol, I
   Arévalo, G
AF Cassol, Ignacio
   Arevalo, Gabriela
TI A methodology to infer and refactor an object-oriented model from C
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design recovery; legacy software; object-oriented paradigm; procedural
   language; reengineering; refactoring; reverse engineering
AB When analyzing legacy code, generating a high-level model of an application during the reverse engineering process helps the developers understand how the application is structured and how the dependencies relate the different software entities. Within the context of procedural programming languages (such as C), the existing approaches to get a model of the code require documentation and/or implicit knowledge that stakeholders acquire during the software building. These approaches use the code itself to build a syntactic model where we see the different software artifacts, such as variables, functions, and modules. However, there is no supporting methodology to detect and analyze if there are relationships/dependencies between those artifacts, such as which variable in a module is declared using an abstract data type described in another one, or which are the functions that are using parameters typed with an abstract data type; or any design decision taken by original developers, such as how the developer has implemented functions in different modules. On the other hand, current developers use object-oriented (OO) paradigm to implement not only business applications but also useful methodologies/tools that allow semiautomatic analysis of any application. We must remark the legacy procedural code still has worth and is working in several industries, and as any evolving code, the developers have to be able to perform maintenance tasks minimizing the limitations offered by the language. Based on useful properties that the OO paradigm (and their supporting analysis tools) provide, such as UML models, we propose M2K as a methodology to generate a high-level model from legacy procedural code, mainly written in Ansi C. To understand how C-based applications were implemented is not a new problem in software reengineering. However, our contribution is based on building an OO model and suggesting different refactorings that help the developer to improve it and to eventually guide a new implementation of the target application. Specifically, the methodology builds cohesive software entities mapped from procedural code and makes the coupling between C entities explicit in the high-level model. The result of our methodology is a set of refactored class candidates: a structure that groups a set of variables and a set of functions obtained from the C applications. Based on the class candidate model, we propose refactorings based on OO design principles to improve the design of the application. The most relevant design improvements were obtained with algorithm abstraction by applying the strategy pattern, attributes/methods relocalization, variables types generalization, and removing/renaming methods/attributes. Besides a methodology and the supporting tool, we provide 14 case studies based on real projects implemented in C, and we showed how the results validate our proposal.
C1 [Cassol, Ignacio] Univ Austral, Fac Ingn, Buenos Aires, DF, Argentina.
   [Arevalo, Gabriela] Univ Nacl Quilmes, Dept Ciencia & Tecnol, Buenos Aires, DF, Argentina.
   [Arevalo, Gabriela] Consejo Nacl Invest Cient & Tecn, Buenos Aires, DF, Argentina.
   [Arevalo, Gabriela] Univ Abierta Interamer, CAETI, Buenos Aires, DF, Argentina.
C3 Austral University; Consejo Nacional de Investigaciones Cientificas y
   Tecnicas (CONICET)
RP Cassol, I (corresponding author), Univ Austral, Fac Ingn, Buenos Aires, DF, Argentina.
EM ignacio.cassol@gmail.com
RI Fritola, Renato/AAU-4721-2021
OI Cassol, Ignacio/0000-0003-4592-6272
CR Canfora G, 1996, SOFTWARE PRACT EXPER, V26, P25, DOI 10.1002/(SICI)1097-024X(199601)26:1<25::AID-SPE994>3.0.CO;2-T
   Canfora G, 1993, P 2 WORKSH PROGR COM
   Cassol I, 2015, 10 INT C EV NOV APPR
   Deursen AV, 2004, P WORK IEEE IFIP C S
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   EISENBARTH T, 2001, P IEEE INT C SOFTW M
   Favre J.-M., 2004, P 11 WORK C REV ENG
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gall H, 1995, P 2 WORK C REV ENG T
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garrido A., 2005, THESIS
   GODIN R, 1995, INT J SOFTW ENG KNOW, V5, P119, DOI 10.1142/S0218194095000071
   Khanam Zeba, 2013, International Journal of Modern Education and Computer Science, V5, P57, DOI 10.5815/ijmecs.2013.11.08
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Lindig C, 1997, INT C SOFTW ENG BOST
   Liu SS, 1990, C SOFTW MAINT SAN DI
   Livadas PE, 1992, INT C SOFTW MAINT OR
   Medvidovic N., 2006, Automated Software Engineering, V13, P225, DOI 10.1007/s10515-006-7737-5
   OFFUTT AJ, 1993, J SYST SOFTWARE, V20, P295, DOI 10.1016/0164-1212(93)90072-6
   Ormandjieva O, 2005, P INT WORKSH SOFTW M
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SCHWANKE R, 1991, P 13 INT C SOFTW ENG
   Siff M, 1999, IEEE T SOFTWARE ENG, V25, P749, DOI 10.1109/32.824377
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   Yeh AS, 1995, P 2 WORK C REV ENG W
   YOURDON E, 1979, STRUCTURED DESIGN FU
NR 26
TC 0
Z9 0
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 550
EP 577
DI 10.1002/spe.2549
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300008
DA 2024-07-18
ER

PT J
AU Venkateswaran, S
   Sarkar, S
AF Venkateswaran, Sreekrishnan
   Sarkar, Santonu
TI Architectural partitioning and deployment modeling on hybrid clouds
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE hybrid cloud; CLIC; architectural partitioning; workload; hybrid
   deployment complexity
ID INFRASTRUCTURE
AB The hybrid cloud idea is increasingly gaining momentum because it brings distinct advantages as a hosting platform for complex software systems. However, there are several challenges that need to be surmounted before hybrid hosting can become pervasive and penetrative. One main problem is to architecturally partition workloads across permutations of feasible cloud and non-cloud deployment choices to yield the best-fit hosting combination. Another is to predict the effort estimate to deliver such an advantageous hybrid deployment. In this paper, we describe a heuristic solution to address the said obstacles and converge on the ideal hybrid cloud deployment architecture, based on properties and characteristics of workloads that are sought to be hosted. We next propose a model to represent such a hybrid cloud deployment and demonstrate a method to estimate the effort required to implement and sustain that deployment. We also validate our model through dozens of case studies spanning several industry verticals and record results pertaining to how the industrial grouping of a software system can impact the aforementioned hybrid deployment model. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [Venkateswaran, Sreekrishnan] IBM Corp, Bangalore, Karnataka, India.
   [Sarkar, Santonu] BITS Pilani KK Birla Goa Campus, Sancoale 403726, Goa, India.
C3 International Business Machines (IBM)
RP Sarkar, S (corresponding author), BITS Pilani KK Birla Goa Campus, Sancoale 403726, Goa, India.
EM santonus@goa.bits-pilani.ac.in
OI Sarkar, Santonu/0000-0001-9470-7012
CR Aldrich J., 2014, Proceedings of the International Workshop on Aliasing, Capabilities and Ownership (IWACO), P1
   [Anonymous], 2002, EXPT QUASIEXPERIMENT
   [Anonymous], SPECIAL PUBLICATION
   Aulkemeier F, 2016, J THEOR APPL EL COMM, V11, P26, DOI 10.4067/S0718-18762016000100003
   de Assunçao MD, 2009, HPDC'09: 18TH ACM INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, P141
   EdAnderson JM, 2015, CLOUD ADOPTION VERTI
   Javadi B, 2012, J PARALLEL DISTR COM, V72, P1318, DOI 10.1016/j.jpdc.2012.06.012
   Keen M, 2009, CASE STUDY SOA BANKI
   McKendrick J, NASA S NEBULA STELLA
   Mirandi J., 2014, HYBRID CLOUD CUSTOME
   NimaKaviani EW, 2014, J INTERNET SERVICES
   Orvis N, 2008, HEALTHCARE SOA REFER
   Plummer D., 2012, CLOUD SERVICES BROKE
   Rosas C, 14 INT C HIGH PERF C, P216
   Smit M., 2012, Proceedings of the 2012 Conference of the Center for Advanced Studies on Collaborative Research (Cascon '12), P27
   Sotomayor B, 2009, IEEE INTERNET COMPUT, V13, P14, DOI 10.1109/MIC.2009.119
   Tolosana-Calasanz R, 2014, IEEE ACM INT SYMP, P651, DOI 10.1109/CCGrid.2014.50
   ZHANG H, 2009, INTELLIGENT WORKLOAD, P701
NR 18
TC 5
Z9 5
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2018
VL 48
IS 2
SI SI
BP 345
EP 365
DI 10.1002/spe.2496
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FS0OE
UT WOS:000419472700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Milazzo, F
   Gentile, V
   Gentile, A
   Sorce, S
AF Milazzo, Fabrizio
   Gentile, Vito
   Gentile, Antonio
   Sorce, Salvatore
TI KIND-DAMA: A modular middleware for Kinect-like device data management
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE gestural data management; gesture interaction middleware; Kinect-like
   devices
ID GESTURE RECOGNITION
AB In the last decades, we have witnessed a growing interest toward touchless gestural user interfaces. Among other reasons, this is due to the large availability of different low-cost gesture acquisition hardware (the so-called Kinect-like devices). As a consequence, there is a growing need for solutions that allow to easily integrate such devices within actual systems. In this paper, we present KIND-DAMA, an open and modular middleware that helps in the development of interactive applications based on gestural input. We first review the existing middlewares for gestural data management. Then, we describe the proposed architecture and compare its features against the existing similar solutions we found in the literature. Finally, we present a set of studies and use cases that show the effectiveness of our proposal in some possible real-world scenarios.
C1 [Milazzo, Fabrizio; Gentile, Vito; Gentile, Antonio; Sorce, Salvatore] Univ Palermo, Ubiquitous Syst & Interfaces Grp, Viale Sci,Edificio 6, I-690128 Palermo, Italy.
   [Milazzo, Fabrizio; Gentile, Vito; Gentile, Antonio] Univ Palermo, Dipartimento Innovaz Ind & Digitale, Viale Sci,Edificio 6, I-90128 Palermo, Italy.
   [Gentile, Antonio; Sorce, Salvatore] Acad Spin Off, InformAmuse Srl, Via Nunzio Morello 20, I-90144 Palermo, Italy.
   [Sorce, Salvatore] Brunel Univ London, Dept Comp Sci, Coll Engn Design & Phys Sci, Kingston Lane, Uxbridge UB8 3PH, Middx, England.
C3 University of Palermo; University of Palermo; Brunel University
RP Milazzo, F (corresponding author), Univ Palermo, Ubiquitous Syst & Interfaces Grp, Viale Sci,Edificio 6, I-690128 Palermo, Italy.; Milazzo, F (corresponding author), Univ Palermo, Dipartimento Innovaz Ind & Digitale, Viale Sci,Edificio 6, I-90128 Palermo, Italy.
EM fabrizio.milazzo@unipa.it
RI Gentile, Vito/I-2332-2019; SORCE, Salvatore/AAG-7547-2019
OI Gentile, Vito/0000-0002-3844-3136; SORCE, Salvatore/0000-0003-1976-031X;
   GENTILE, Antonio/0000-0003-4054-5809; Milazzo,
   Fabrizio/0000-0002-9061-385X
FU Italian Ministry of University and Research [PON03PE_00214_3]
FX Italian Ministry of University and Research, Grant/Award Number:
   PON03PE_00214_3
CR Abbasi-Kesbi R, 2017, ELECTRON LETT, V53, P322, DOI 10.1049/el.2016.3811
   [Anonymous], 2006, HUM INT GUID 2 0
   [Anonymous], 2008, DIGITAL IMAGE PROCES
   [Anonymous], ADV ONTO INTERNET TH
   Azimi M, 2011, SKELETAL JOINT SMOOT
   Bailey R, 2016, US Patent 9,342,160, Patent No. 9342160
   Bas J, 2011, A 3D GESTURE RECOGNI
   Bolt R. A., 1980, Computer Graphics, V14, P262, DOI 10.1145/965105.807503
   Carrino S, 2011, PAPER PRESENTED AT I
   CARTER M, 2016, PATHSYNC MULTI USER, P3415, DOI DOI 10.1145/2858036.2858284
   Celebi S, 2013, PAPER PRESENTED AT I
   Chaczko Z, 2015, 2015 ASIA-PACIFIC CONFERENCE ON COMPUTER-AIDED SYSTEM ENGINEERING - APCASE 2015, P257, DOI 10.1109/APCASE.2015.52
   Coenen J, 2017, PAPER PRESENTED AT P
   De Paola A, 2011, PAPER PRESENTED AT 2
   Gehring Sven, 2014, Informatik- Spektrum, V37, P474
   GENTILE V, 2014, CONTINUOUS HAND OPEN, P553, DOI DOI 10.1109/CISIS.2014.80
   Gentile V, 2015, PAPER PRESENTED AT I
   Gentile V, 2016, MONDO DIGIT, V15
   Gentile V, 2016, PAPER PRESENTED AT P
   Han J, 2011, PAPER PRESENTED AT 2
   Ibraheem N.A., 2012, Int. J. Comput. Appl, V50
   Laufs U, 2010, PAPER PRESENTED AT A
   Leotta F, 2015, SOFTWARE PRACT EXPER, V45, P801, DOI 10.1002/spe.2262
   Lopes J, 2014, J UNIVERS COMPUT SCI, V20, P1327
   Milazzo F, 2017, J SENS, V2017
   Mitra S, 2007, IEEE T SYST MAN CY C, V37, P311, DOI 10.1109/TSMCC.2007.893280
   Molchanov P, 2015, PAPER PRESENTED AT 2, V1
   Moreno F, 2015, PAPER PRESENTED AT L
   Muller M., 2007, INFORM RETRIEVAL MUS, P69, DOI DOI 10.1007/978-3-540-74048-34
   Murakami K, 1991, PAPER PRESENTED AT P
   Neverova N, 2014, PAPER PRESENTED AT W
   Nielsen J, 1994, USABILITY ENGINEERIN
   Paliyawan P, 2017, SOFTW PRACT EXP
   Perrey R, 2003, PAPER PRESENTED AT S
   Pham HH, 2016, J SENS, V2016
   Roltgen J, 2010, AQUA G A UNIVERSAL G
   Ruffieux S, 2015, COMPUT VIS IMAGE UND, V131, P72, DOI 10.1016/j.cviu.2014.07.004
   Russo A, 2012, SOFTWARE PRACT EXPER, V42, P1275, DOI 10.1002/spe.1138
   Shrivastava R, 2013, PAPER PRESENTED AT 2
   Signer B, 2007, PAPER PRESENTED AT I, V2
   SORCE S, 2013, REAL TIME HAND POSE, P344, DOI DOI 10.1109/BWCCA.2013.60
   Sorce S, 2014, INT J AD HOC UBIQ CO, V16, P232, DOI 10.1504/IJAHUC.2014.064861
   SOrensen T, 2015, PAPER PRESENTED AT P
   Tan JH, 2013, RADIOGRAPHICS, V33, pE61, DOI 10.1148/rg.332125101
   tensHolt GA, 2007, PAPER PRESENTED AT T, V300
   Wobbrock JO, 2009, PAPER PRESENTED AT P
   Wobbrock JO, 2005, PAPER PRESENTED AT C
   Zha X, 2016, PAPER PRESENTED AT P
NR 48
TC 5
Z9 5
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2018
VL 48
IS 1
BP 141
EP 160
DI 10.1002/spe.2521
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FP4WK
UT WOS:000417617500008
DA 2024-07-18
ER

PT J
AU Paliyawan, P
   Thawonmas, R
AF Paliyawan, Pujana
   Thawonmas, Ruck
TI UKI: universal Kinect-type controller by ICE Lab
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE middleware; motion controller; Kinect; user interfaces; video games
ID HEALTH; GAMES
AB Universal Kinect-type-controller by ICE Lab (UKI, pronounced as You-key') was developed to allow users to control any existing application by using body motions as inputs. The middleware works by converting detected motions into keyboard and/or mouse-click events and sending them to a target application. This paper presents the structure and design of core modules, along with examples from real cases to illustrate how the middleware can be configured to fit a variety of applications. We present our designs for interfaces that decode all configuration details into a human-interpretable language, and these interfaces significantly promote user experience and eliminate the need for programming skill. The performance of the middleware is evaluated on fighting-game motion data, and we make the data publicly available so that they can be used in other researches. UKI welcomes its use by everyone without any restrictions on use; for instance, it can be used to promote healthy life through a means of gaming and/or used to conduct serious research on motion systems. The middleware serves as a shortcut in the development of motion applicationscoding of an application to detect motions can be replaced with simple clicks on UKI. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [Paliyawan, Pujana; Thawonmas, Ruck] Ritsumeikan Univ, Grad Sch Informat Sci & Engn, Intelligent Comp Entertainment Lab, Kyoto, Japan.
C3 Ritsumeikan University
RP Paliyawan, P (corresponding author), Ritsumeikan Univ, Grad Sch Informat Sci & Engn, Intelligent Comp Entertainment Lab, Kyoto, Japan.
EM Pujana.P@gmail.com
FU Grants-in-Aid for Scientific Research [15H02939] Funding Source: KAKEN
CR Ando Y, 2013, 2013 INTERNATIONAL CONFERENCE ON CULTURE AND COMPUTING (CULTURE AND COMPUTING 2013), P218, DOI 10.1109/CultureComputing.2013.73
   [Anonymous], P 2012 VIRT REAL INT
   Baranowski T, 2016, GAMES HEALTH J, V5, P1, DOI 10.1089/g4h.2015.0026
   Da Gama A., 2012, 2012 IEEE Symposium on 3D User Interfaces (3DUI), P145, DOI 10.1109/3DUI.2012.6184203
   Da Gama A, 2015, GAMES HEALTH J, V4, P123, DOI 10.1089/g4h.2014.0047
   Galna B, 2014, J NEUROENG REHABIL, V11, DOI 10.1186/1743-0003-11-60
   Jung Timothy., 2016, INFORM COMMUNICATION, P621, DOI [DOI 10.1007/978-3-319-28231-2_45, 10.1007/978-3-319-28231-245, DOI 10.1007/978-3-319-28231-245]
   Kyan M, 2015, ACM T INTEL SYST TEC, V6, DOI 10.1145/2735951
   Leutwyler H, 2012, GAMES HEALTH J, V1, P381, DOI 10.1089/g4h.2012.0051
   Mathur AS, 2015, P IEEE VIRT REAL ANN, P345, DOI 10.1109/VR.2015.7223437
   Mizobata R, 2014, PROCEEDINGS OF CHINESE CHI 2014: SECOND INTERNATIONAL SYMPOSIUM OF CHINESE CHI (CHINESE CHI 2014), P57, DOI 10.1145/2592235.2592244
   Paliyawan P, 2016, 2016 IEEE 5 GLOB C C, P321
   Paliyawan P, 2015, 2015 IEEE 4TH GLOBAL CONFERENCE ON CONSUMER ELECTRONICS (GCCE), P332, DOI 10.1109/GCCE.2015.7398599
   Paliyawan P, 2015, IEEE CONF COMPU INTE, P360, DOI 10.1109/CIG.2015.7317960
   Paliyawan P, 2014, ASIA-PAC CONF COMMUN, P58, DOI 10.1109/APCC.2014.7091605
   Pañella OG, 2012, STUD HEALTH TECHNOL, V172, P71, DOI 10.3233/978-1-61499-088-8-71
   Pastor I, 2012, IEEE ENG MED BIO, P1286, DOI 10.1109/EMBC.2012.6346173
   Pazhoumand-Dar H, 2015, J VIS COMMUN IMAGE R, V30, P10, DOI 10.1016/j.jvcir.2015.03.002
   Peng W, 2013, HEALTH EDUC BEHAV, V40, P171, DOI 10.1177/1090198112444956
   Plantard P, 2015, SENSORS-BASEL, V15, P1785, DOI 10.3390/s150101785
   Potkonjak V, 2016, COMPUT EDUC, V95, P309, DOI 10.1016/j.compedu.2016.02.002
   Rössler R, 2014, SPORTS MED, V44, P1733, DOI 10.1007/s40279-014-0234-2
   Saini S., 2012, 2012 Proceedings of International Conference on Computer & Information Science (ICCIS 2012), P55, DOI 10.1109/ICCISci.2012.6297212
   Sato K, 2015, GAMES HEALTH J, V4, P161, DOI 10.1089/g4h.2014.0057
   Silpasuwanchai C, 2015, INT J HUM-COMPUT ST, V80, P1, DOI 10.1016/j.ijhcs.2015.02.010
   Smallwood SR, 2012, ARCH PEDIAT ADOL MED, V166, P1005, DOI 10.1001/archpediatrics.2012.1271
   Sookhanaphibarn K, 2016, 2016 IEEE 4 GLOB C C, P323
   Stone E, 2011, J AMB INTEL SMART EN, V3, P349, DOI 10.3233/AIS-2011-0124
   Suma EA, 2013, COMPUT GRAPH-UK, V37, P193, DOI 10.1016/j.cag.2012.11.004
   Taylor R.M., 2001, Proceedings of the ACM Symposium on Virtual Reality Software and Technology - VRST '01, P55, DOI [10.1145/505008.505019, DOI 10.1145/505008.505019, 10.1145/505008.505019., DOI 10.1145/505008.5050192]
NR 30
TC 6
Z9 6
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2017
VL 47
IS 10
BP 1343
EP 1363
DI 10.1002/spe.2474
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG0OJ
UT WOS:000409457000003
DA 2024-07-18
ER

PT J
AU Liu, LY
   Chen, JY
   Gao, CX
   Sang, N
AF Liu, Leyuan
   Chen, Jingying
   Gao, Changxin
   Sang, Nong
TI A low-cost real-time face tracking system for ITSs and SDASs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE face tracking; face detection; face validation; low-cost; real-time;
   onboard computer
AB It is important to track people's face efficiently and accurately in many Intelligent Transportation Systems (ITSs) and Safety Driving Assistant Systems (SDASs). This paper presents a high-performance and low-cost real-time face tracking system, which runs on general onboard computer with very low CPU consumption. The proposed face tracking system is composed of four modules: the motion detector, face detector, face tracker, and face validator. The motion detector extracts motion areas by using a spatial-temporal bi-differential method with a very low computational cost. The face detector integrates motions into a cascade face detection framework to reject most of non-face scanning-windows to ensure efficient face localization. The face tracker fuses motion feature with color feature to alleviate the drifting problem during tracking. The face validator builds face appearance models online and identifies each specific tracked face to avoid confusion. Experimental results on three challenging video sequences show that the proposed face tracking system outperforms the state-of-the-art face tracker and consumes only 5-13% CPU resources of a low-spec onboard computer while processing in real time. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Liu, Leyuan; Chen, Jingying] Cent China Normal Univ, Natl Engn Res Ctr E Learning, Wuhan, Peoples R China.
   [Liu, Leyuan; Chen, Jingying] CICET, Wuhan, Peoples R China.
   [Gao, Changxin; Sang, Nong] Huazhong Univ Sci & Technol, Sch Automat, Wuhan, Peoples R China.
C3 Central China Normal University; Huazhong University of Science &
   Technology
RP Chen, JY (corresponding author), NERCEL, Sci Hall,152,Luoyu Rd, Wuhan 430079, Hubei, Peoples R China.
EM chenjy@mail.ccnu.edu.cn
RI Gao, Changxin/L-4841-2016
OI Gao, Changxin/0000-0003-2736-3920
FU National Natural Science Foundation of China [61505064, 61502195,
   41671377]; Ministry of Education and China Mobile [MCM20130601];
   Humanities and Social Sciences Foundation of the Ministry of Education
   [14YJAZH005]; National Social Science Foundation [16BSH107]; Research
   Funds of CCNU from Colleges Basic Research and Operation of MOE
   [CCNU14A05020, CCNU16A02020]
FX This work was supported in part by the National Natural Science
   Foundation of China (nos. 61505064, 61502195, and 41671377), in part by
   the Research funds from Ministry of Education and China Mobile
   (MCM20130601), in part by Research funds from the Humanities and Social
   Sciences Foundation of the Ministry of Education (no. 14YJAZH005), in
   part by the National Social Science Foundation (no. 16BSH107), and in
   part by the Research Funds of CCNU from the Colleges Basic Research and
   Operation of MOE (nos. CCNU14A05020 and CCNU16A02020).
CR Barfield W., 2014, Human factors in intelligent transportation systems
   Bradski GR, 1998, FOURTH IEEE WORKSHOP ON APPLICATIONS OF COMPUTER VISION - WACV'98, PROCEEDINGS, P214, DOI 10.1109/ACV.1998.732882
   Chen DW, 2014, ADV INTELL SYST, V277, P1041, DOI 10.1007/978-3-642-54924-3_98
   Collins RT, 2005, IEEE T PATTERN ANAL, V27, P1631, DOI 10.1109/TPAMI.2005.205
   Comaniciu D, 2003, IEEE T PATTERN ANAL, V25, P564, DOI 10.1109/TPAMI.2003.1195991
   Dasgupta A, 2013, IEEE T INTELL TRANSP, V14, P1825, DOI 10.1109/TITS.2013.2271052
   Gao C, 2016, IEEE T CIRCUITS SYST, V99, P1
   Guo L, 2012, EXPERT SYST APPL, V39, P4274, DOI 10.1016/j.eswa.2011.09.106
   Henriques JF, 2015, IEEE T PATTERN ANAL, V37, P583, DOI 10.1109/TPAMI.2014.2345390
   Kalal Zdenek, 2010, Proceedings of the 2010 20th International Conference on Pattern Recognition (ICPR 2010), P2756, DOI 10.1109/ICPR.2010.675
   Kalal Z, 2012, IEEE T PATTERN ANAL, V34, P1409, DOI 10.1109/TPAMI.2011.239
   Kalal Z, 2010, IEEE IMAGE PROC, P3789, DOI 10.1109/ICIP.2010.5653525
   Kaplan S, 2015, IEEE T INTELL TRANSP, V16, DOI 10.1109/TITS.2015.2462084
   Liu LY, 2010, ELECTRON LETT, V46, P41, DOI 10.1049/el.2010.2833
   Liu LY, 2011, IEEE T CONSUM ELECTR, V57, P1295, DOI 10.1109/TCE.2011.6018887
   Possegger H, 2015, PROC CVPR IEEE, P2113, DOI 10.1109/CVPR.2015.7298823
   Sung J, 2008, INT J COMPUT VISION, V80, P260, DOI 10.1007/s11263-007-0125-1
   Viola P, 2004, INT J COMPUT VISION, V57, P137, DOI 10.1023/B:VISI.0000013087.49260.fb
   Wang CX, 2008, ISCSCT 2008: INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND COMPUTATIONAL TECHNOLOGY, VOL 2, PROCEEDINGS, P657, DOI 10.1109/ISCSCT.2008.206
   Wang HZ, 2014, INT C PATT RECOG, P4098, DOI 10.1109/ICPR.2014.702
   Zhou Y, 2016, INT J COMPUT VISION, V118, P337, DOI 10.1007/s11263-015-0879-9
NR 21
TC 2
Z9 2
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2017
VL 47
IS 8
SI SI
BP 1111
EP 1126
DI 10.1002/spe.2455
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FA1LW
UT WOS:000405202100006
DA 2024-07-18
ER

PT J
AU Liu, ZX
   Zhang, P
   Lam, HK
   Chan, KY
   Ma, K
AF Liu, Zhixin
   Zhang, Peng
   Lam, Hak-Keung
   Chan, Kit Yan
   Ma, Kai
TI Robust power optimization scheme for cooperative wireless relay system
   in smart city
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE smart city communication; power allocation; relay cooperation; robust
   control; distributed algorithm
ID OFDMA CELLULAR NETWORKS; ALLOCATION; DIVERSITY; CHANNEL
AB Ultra dense deployment of base stations is one of most significant features in smart city communication networks. Aiming at the large-scale wireless communication issue in smart city, we propose a distributed robust power allocation scheme with proportional fairness for cooperative orthogonal frequency-division-multiple-access relay network. With the amplify-and-forward relay mode, all of the relays assist the information transmission simultaneously on orthogonal subcarriers. Considering the uncertainty of channel gains, first we aim at achieving the maximum utility subject to the constraints of outage probability threshold and power bound. Subsequently, the problem is transformed to a solvable convex optimization problem with determination constraints. The dual-decomposition method is applied to solve the formulated optimization problem. To reduce the information exchange of the whole system, we propose a computationally efficient distributed iteration algorithm. Numerical results reveal the effectiveness of the proposed robust optimization algorithm. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Liu, Zhixin; Zhang, Peng; Ma, Kai] Yanshan Univ, Inst Elect Engn, Qinhuangdao 066004, Peoples R China.
   [Lam, Hak-Keung] Kings Coll London, Dept Informat, London WC2R 2LS, England.
   [Chan, Kit Yan] Curtin Univ, Dept Elect & Comp Engn, Perth, WA, Australia.
C3 Yanshan University; University of London; King's College London; Curtin
   University
RP Lam, HK (corresponding author), Kings Coll London, Dept Informat, London WC2R 2LS, England.
EM hak-keung.lam@kcl.ac.uk
RI Liu, Zhixin/AAO-1419-2020; Ma, Kai/ABV-0763-2022; Lam, H.K./C-1140-2014
OI Lam, H.K./0000-0002-6572-7265
FU National Science Foundation of China [61473247, 61573301, 61573303]
FX This work was supported in part by the National Science Foundation of
   China (Project numbers 61473247, 61573301, 61573303).
CR Anghel PA, 2004, IEEE T WIREL COMMUN, V3, P1416, DOI 10.1109/TWC.2004.833431
   [Anonymous], P IEEE ICC WORKSH BE
   [Anonymous], 2004, CONVEX OPTIMIZATION
   Boostanimehr H, 2011, IEEE T WIREL COMMUN, V10, P4057, DOI 10.1109/TWC.2011.092911.101200
   Cao Q, 2013, IEEE T WIREL COMMUN, V12, P2870, DOI 10.1109/TWC.2013.050313.121183
   Chen D, 2015, IEEE T PARALL DISTR, V26, P847, DOI 10.1109/TPDS.2014.2311805
   Chen JY, 2014, IEEE T IND INFORM, V10, P323, DOI 10.1109/TII.2013.2271914
   Cheung KTK, 2013, IEEE T COMMUN, V61, P2746, DOI 10.1109/TCOMM.2013.13.120727
   Correia LM, 2010, IEEE COMMUN MAG, V48, P66, DOI 10.1109/MCOM.2010.5621969
   Fan B, 2009, IET COMMUN, V4, P1143
   Fang HR, 2012, IEEE T VEH TECHNOL, V61, P2991, DOI 10.1109/TVT.2012.2200705
   Gifford WM, 2005, IEEE T WIREL COMMUN, V4, P1935, DOI 10.1109/TWC.2005.852127
   Guan XP, 2013, AEU-INT J ELECTRON C, V67, P504, DOI 10.1016/j.aeue.2012.11.008
   He SB, 2012, IEEE T PARALL DISTR, V23, P1090, DOI 10.1109/TPDS.2011.242
   Ikki S, 2007, IEEE COMMUN LETT, V11, P334, DOI [10.1109/LCOM.2007.348292, 10.1109/LCOMM.2007.061947]
   Ju MC, 2012, IEEE T COMMUN, V60, P908, DOI 10.1109/TCOMM.2012.030712.1001762
   Laneman JN, 2004, IEEE T INFORM THEORY, V50, P3062, DOI 10.1109/TIT.2004.838089
   Liu Z, 2015, IEEE COMMUNICATIONS, V19
   Loodaricheh RA, 2014, IEEE T WIREL COMMUN, V13, P6132, DOI 10.1109/TWC.2014.2329877
   Lu L, 2013, IEEE T WIREL COMMUN, V12, P1832, DOI 10.1109/TWC.2013.022113.120908
   Lu XQ, 2013, IEEE T GEOSCI REMOTE, V51, P2815, DOI 10.1109/TGRS.2012.2213825
   Mall S, 2011, PEDIATR INFECT DIS J, V30, pE142, DOI 10.1097/INF.0b013e318217e356
   Mallick S, 2012, IEEE T WIREL COMMUN, V11
   Mallick S, 2013, IEEE T COMMUN, V61, P1822, DOI 10.1109/TCOMM.2013.032013.120322
   Palomar DP, 2006, IEEE J SEL AREA COMM, V24, P1439, DOI 10.1109/JSAC.2006.879350
   Quek TQS, 2010, IEEE T COMMUN, V58, P1931, DOI 10.1109/TCOMM.2010.07.080277
   Yang B, 2016, IEEE T PARALL DISTR, V27, P3441, DOI 10.1109/TPDS.2016.2533614
NR 27
TC 2
Z9 2
U1 0
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2017
VL 47
IS 8
SI SI
BP 1045
EP 1059
DI 10.1002/spe.2464
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FA1LW
UT WOS:000405202100002
DA 2024-07-18
ER

PT J
AU Sun, HL
   Xiao, B
   Wang, X
   Liu, XD
AF Sun, Hailong
   Xiao, Bang
   Wang, Xu
   Liu, Xudong
TI Adaptive trade-off between consistency and performance in data
   replication
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed systems; data replication; consistency; Paxos; data
   management
ID BROADCAST; TIME
AB Replication is widely adopted in modern Internet applications and distributed systems to improve the reliability and performance. Though maintaining the strong consistency among replicas can guarantee the correctness of application behaviors, however, it will affect the application performance at the same time because there is a well-known trade-off between consistency and performance. Many real-world applications favoring performance often choose to enforce weak consistency. Although there has been some work on flexible configuration of consistency, most focuses on design or deployment time. As the system settings constantly change during runtime, the tuning of the consistency-performance trade-off needs to be handled dynamically. Failing to do that will cause either underestimation or overestimation of the consistency and performance that can be achieved. Existing work does not well support the dynamic tuning of the aforementioned trade-off in runtime, which is mainly because of the lack of an appropriate quantitative model of consistency and performance. In this work, based on our previous effort on the quantitative model of consistency and latency, we design a replication protocol, CC-Paxos, to achieve an adaptive trade-off between consistency and performance according to application preferences and runtime information. By design, CC-Paxos is not bound to any specific underlying data stores. We have implemented CC-Paxos and applied it to MySQL databases. And real experiments both within a data center and across data centers show that CC-Paxos not only can dynamically adjust the delivered consistency in return for ensured performance but also outperforms MySQL Cluster in the case of strong consistency guarantee. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Sun, Hailong; Xiao, Bang; Wang, Xu; Liu, Xudong] Beihang Univ, Sch Comp Sci & Engn, Beijing, Peoples R China.
C3 Beihang University
RP Wang, X (corresponding author), Beihang Univ, Sch Comp Sci & Engn, Beijing, Peoples R China.
EM wangxu@act.buaa.edu.cn
RI liu, xudong/HJG-8137-2022
FU National Key Research and Development Program of China [2016YFB1000804];
   National Natural Science Foundation of China [61370057, 61421003]; China
   863 program [2015AA01A202]
FX This work was supported partly by National Key Research and Development
   Program of China (no. 2016YFB1000804), National Natural Science
   Foundation of China (no. 61370057 and no. 61421003) and partly by China
   863 program (no. 2015AA01A202).
CR Abadi DJ, 2012, COMPUTER, V45, P37, DOI 10.1109/MC.2012.33
   AHAMAD M, 1995, DISTRIB COMPUT, V9, P37, DOI 10.1007/BF01784241
   [Anonymous], 2009, Proc.VLDB Endow
   Baldoni R, 2003, SOFTWARE PRACT EXPER, V33, P767, DOI 10.1002/spe.525
   BREWER EA, 2000, PODC, V7, DOI [10.1145/343477.343502, DOI 10.1145/343477.343502]
   Chang F, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1365815.1365816
   Charlton CC, 1998, SOFTWARE PRACT EXPER, V28, P285, DOI 10.1002/(SICI)1097-024X(199803)28:3<285::AID-SPE153>3.0.CO;2-1
   Cooper BF, 2008, PROC VLDB ENDOW, V1, P1277
   Corbett JC, 2013, ACM T COMPUT SYST, V31, DOI 10.1145/2491245
   Défago X, 2004, ACM COMPUT SURV, V36, P372, DOI 10.1145/1041680.1041682
   Défago X, 2003, IEICE T INF SYST, VE86D, P2698
   Dragojevic A, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P54, DOI 10.1145/2815400.2815425
   Friedman R, 1997, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P233, DOI 10.1109/HPDC.1997.626423
   Google, READ CONS DEADL MOR
   Kirsch J, 2008, P 2 WORKSH LARG SCAL
   Konczak J, 2011, 167765 EPFL FAC INF
   Kune R, 2016, SOFTWARE PRACT EXPER, V46, P79, DOI 10.1002/spe.2374
   Lamport L., 2001, SIGACT News, V32, P51
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Lamport L, 1998, ACM T COMPUT SYST, V16, P133, DOI 10.1145/279227.279229
   Lampson B., 1993, 19th International Conference on Very Large Data Bases Proceedings, P630
   Lampson B., 1976, CRASH RECOVERY DISTR
   Marandi PJ, 2010, I C DEPEND SYS NETWO, P527, DOI 10.1109/DSN.2010.5544272
   Meling H, 2008, SOFTWARE PRACT EXPER, V38, P885, DOI 10.1002/spe.853
   Mohamed N, 2015, SOFTWARE PRACT EXPER, V45, P343, DOI 10.1002/spe.2235
   Oracle, 2015, MYSQL CLUST
   Oracle MDT, 2014, RE WHY DOES NONFR JU
   Padhye V, 2014, SOFTWARE PRACT EXPER, V44, P1251, DOI 10.1002/spe.2206
   Quinton C, 2016, SOFTWARE PRACT EXPER, V46, P55, DOI 10.1002/spe.2311
   Terry DB, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P309, DOI 10.1145/2517349.2522731
   Vaquero LM, 2011, ACM SIGCOMM COMP COM, V41, P45, DOI 10.1145/1925861.1925869
   Vogels W., CHOOSING CONSISTENCY
   Vogels W, 2009, COMMUN ACM, V52, P40, DOI 10.1145/1435417.1435432
   Wang XiVincent., 2013, Cloud manufacturing, P1
   Wei XD, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87, DOI 10.1145/2815400.2815419
   Yu WH, 2007, INT J WEB SERV RES, V4, P80, DOI 10.4018/jwsr.2007010105
NR 36
TC 4
Z9 4
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2017
VL 47
IS 6
BP 891
EP 906
DI 10.1002/spe.2462
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EE
UT WOS:000403114000006
DA 2024-07-18
ER

PT J
AU Vasic, V
   Antonic, A
   Pripuzic, K
   Mikuc, M
   Zarko, IP
AF Vasic, Valter
   Antonic, Aleksandar
   Pripuzic, Kresimir
   Mikuc, Miljenko
   Zarko, Ivana Podnar
TI Adaptable secure communication for the Cloud of Things
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Internet of Things; secure communication agreement; adaptable
   communication; secure communication model; cloud of things
ID INTERNET; PRIVACY; CHALLENGES
AB Cloud of Things (CoT) is a novel concept driven by the synergy of the Internet of Things (IoT) and cloud computing paradigm. The CoT concept has expedited the development of smart services resulting in the proliferation of their real world deployments. However, new research challenges arise because of the transition of research-driven and proof-of-concept solutions to commercial offerings, which need to provide secure, energy-efficient, and reliable services. An open research issue in the CoT is to provide a satisfactory level of security between various IoT devices and the cloud. Existing solutions for secure CoT communication typically use devices with pre-loaded and pre-configured parameters, which define a static setup for secure communication. In contrast to existing pre-configured solutions, we present an adaptable model for secure communication in CoT environments. The model defines six secure communication operations to enable CoT entities to autonomously and dynamically agree on the security protocol and cryptographic keys used for communication. Further on, we focus on device agreement and present an original solution, which uses the Agile Cryptographic Agreement Protocol in the context of CoT. We verify our solution by a prototype implementation of CoT device agreement based on required security level, which takes into account the capabilities of communicating devices. Our experimental evaluation compares the average processing times of the proposed secure communication operations demonstrating the viability of the proposed solution in real-world deployments. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Vasic, Valter; Antonic, Aleksandar; Pripuzic, Kresimir; Mikuc, Miljenko; Zarko, Ivana Podnar] Univ Zagreb, Fac Elect Engn & Comp, Unska 3, HR-10000 Zagreb, Croatia.
   [Vasic, Valter] Ericsson Nikola Tesla Dd, Krapinska 45, HR-10000 Zagreb, Croatia.
C3 University of Zagreb; Ericsson
RP Antonic, A (corresponding author), Univ Zagreb, Fac Elect Engn & Comp, Unska 3, HR-10000 Zagreb, Croatia.
EM aleksandar.antonic@fer.hr
RI Podnar Zarko, Ivana/JCE-2233-2023; Pripužić, Krešimir/GLQ-7853-2022;
   Antonic, Aleksandar/I-3229-2017; Zarko, Ivana Podnar/E-8711-2015
OI Podnar Zarko, Ivana/0000-0001-5619-2142; Pripužić,
   Krešimir/0000-0001-7364-3021; 
FU Croatian Science Foundation [8065]; European Union [688156]
FX This work has been supported in part by the Croatian Science Foundation
   under the project number 8065 (Human-centric Communications in Smart
   Networks). This work is supported in part by the H2020 symbIoTe project,
   which has received funding from the European Union's Horizon 2020
   research and innovation programme under grant agreement no. 688156.
CR [Anonymous], SCYTHER UNBOUNDED VE
   [Anonymous], P 1 INT C AGR TECHN
   [Anonymous], 1071 RFC
   [Anonymous], IEEE COMMUN SURV TUT
   [Anonymous], 10 2014 10 MOST CRIT
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Bellare M., 1996, Advances in Cryptology - CRYPTO'96. 16th Annual International Cryptology Conference. Proceedings, P1
   Bing Zhang, 2011, Journal of Electronic Science and Technology, V9, P364, DOI 10.3969/j.issn.1674-862X.2011.04.014
   Christin D, 2011, J SYST SOFTWARE, V84, P1928, DOI 10.1016/j.jss.2011.06.073
   Cremers C., 2014, Scyther User Manual
   Dierks T., 2008, 5246 RFC
   DIFFIE W, 1976, IEEE T INFORM THEORY, V22, P644, DOI 10.1109/TIT.1976.1055638
   Freier Alan O., 2011, RFC 6101
   Hui Suo, 2012, Proceedings of the 2012 International Conference on Computer Science and Electronics Engineering (ICCSEE 2012), P648, DOI 10.1109/ICCSEE.2012.373
   Jing Q, 2014, WIREL NETW, V20, P2481, DOI 10.1007/s11276-014-0761-7
   Kapadia A., 2009, COMMUNICATION SYSTEM, P1
   Krawczyk H, 2003, LECT NOTES COMPUT SC, V2729, P400
   Li QH, 2015, IEEE COMMUN MAG, V53, P68, DOI 10.1109/MCOM.2015.7180510
   Roman R, 2013, COMPUT NETW, V57, P2266, DOI 10.1016/j.comnet.2012.12.018
   Sagiroglu S, 2013, PROCEEDINGS OF THE 2013 INTERNATIONAL CONFERENCE ON COLLABORATION TECHNOLOGIES AND SYSTEMS (CTS), P42
   Soldatos J, 2014, INT J WEB GRID SERV, V10, P139, DOI 10.1504/IJWGS.2014.060254
   Vasic V, 2017, SOFTWARE PRACT EXPER, V47, P489, DOI 10.1002/spe.2437
   Vasic V, 2016, KSII T INTERNET INF, V10, P1212
   Weber Rolf H., 2010, Computer Law and Security Report, V26, P23, DOI 10.1016/j.clsr.2009.11.008
   Yan Z, 2014, J NETW COMPUT APPL, V42, P120, DOI 10.1016/j.jnca.2014.01.014
   Yang K, 2015, IEEE COMMUN MAG, V53, P75, DOI 10.1109/MCOM.2015.7180511
   Ylonen T., 2006, The Secure Shell (SSH) Protocol Architecture
   Zhao K, 2013, 2013 9TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY (CIS), P663, DOI 10.1109/CIS.2013.145
NR 28
TC 4
Z9 4
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2017
VL 47
IS 3
SI SI
BP 489
EP 501
DI 10.1002/spe.2437
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL9RK
UT WOS:000394957500011
OA Green Published
DA 2024-07-18
ER

PT J
AU Pruijt, L
   Köppe, C
   van der Werf, JM
   Brinkkemper, S
AF Pruijt, Leo
   Koppe, Christian
   van der Werf, Jan Martijn
   Brinkkemper, Sjaak
TI The accuracy of dependency analysis in static architecture compliance
   checking
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Software architecture; architecture compliance; dependency analysis;
   benchmark test
ID SOFTWARE
AB Architecture compliance checking (ACC) is an approach to verify conformance of implemented program code to high-level models of architectural design. Static ACC focuses on the modular software architecture and on the existence of rule violating dependencies between modules. Accurate tool support is essential for effective and efficient ACC. This paper presents a study on the accuracy of ACC tools regarding dependency analysis and violation reporting. Ten tools were tested and compared by means of a custom-made benchmark. The Java code of the benchmark testware contains 34 different types of dependencies, which are based on an inventory of dependency types in object oriented program code. In a second test, the code of open source system FreeMind was used to compare the 10 tools on the number of reported rule violating dependencies and the exactness of the dependency and violation messages. On the average, 77% of the dependencies in our custom-made test software were reported, while 72% of the dependencies within a module of FreeMind were reported. The results show that all tools in the test could improve the accuracy of the reported dependencies and violations, though large differences between the 10 tools were observed. We have identified 10 hard-to-detect types of dependencies and four challenges in dependency detection. The relevance of our findings is substantiated by means of a frequency analysis of the hard-to-detect types of dependencies in five open source systems. (c) 2016 The Authors. Software: Practice and Experience Published by John Wiley & Sons, Ltd.
C1 [Pruijt, Leo] HU Univ Appl Sci, Utrecht, Netherlands.
   [Koppe, Christian] HAN Univ Appl Sci, Arnhem, Netherlands.
   [van der Werf, Jan Martijn; Brinkkemper, Sjaak] Univ Utrecht, Utrecht, Netherlands.
C3 Utrecht University
RP Pruijt, L (corresponding author), HU Univ Appl Sci, Utrecht, Netherlands.
EM leo.pruijt@hu.nl
RI Köppe, Christian/ABE-5100-2020
OI Köppe, Christian/0000-0003-0326-678X; van der Werf, Jan Martijn
   E.M./0000-0002-7264-381X
CR Adersberger J, 2011, 5 EUR C SOFTW ARCH, P344, DOI [10.1007/978-3-642-23798-0_37, DOI 10.1007/978-3-642-23798-0_37]
   [Anonymous], 2014, P 29 ACM IEEE INT C, DOI DOI 10.1145/2642937.2648624
   [Anonymous], 2011, ISO 13314
   Arias TBC, 2011, EMPIR SOFTW ENG, V16, P544, DOI 10.1007/s10664-011-9158-8
   Arlt S., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P301, DOI 10.1109/ISSRE.2012.25
   Barowski LA, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P309, DOI 10.1109/WCRE.2002.1173088
   Binkley D, 2007, FoSE 2007: Future of Software Engineering, P104, DOI 10.1109/FOSE.2007.27
   Bischofberger W, 2004, LECT NOTES COMPUT SC, V3047, P1
   Buckley J, 2015, INFORM SOFTWARE TECH, V61, P107, DOI 10.1016/j.infsof.2015.01.011
   Buckley J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1291, DOI 10.1109/ICSE.2013.6606700
   Canfora G, 2011, COMMUN ACM, V54, P142, DOI 10.1145/1924421.1924451
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Deissenboeck F., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P247, DOI 10.1145/1810295.1810343
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Emanuel AWR, 2012, INT J COMPUTER APPL, V59, P28, DOI [10.5120/9602-4227, DOI 10.5120/9602-4227]
   Feilkas M, 2009, INT C PROGRAM COMPRE, P188, DOI 10.1109/ICPC.2009.5090042
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Gleirscher M, 2014, SOFTWARE QUAL J, V22, P499, DOI 10.1007/s11219-013-9217-z
   Haitzer T., 2012, P 8 INT ACM SIGSOFT, P61, DOI DOI 10.1145/2304696.2304709
   Huynh S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P411, DOI 10.1145/1368088.1368144
   Knodel Jens, 2007, 2007 WORKING IEEEIFI, P12, DOI 10.1109/wicsa.2007.1
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Koschke R, 2009, SOFTWARE QUAL J, V17, P331, DOI 10.1007/s11219-009-9077-8
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Passos L, 2010, IEEE SOFTWARE, V27, P82, DOI 10.1109/MS.2009.117
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Pruijt L, 2015, ACCURACY TEST SOFTWA
   Pruijt L, 2013, PROC IEEE INT CONF S, P220, DOI 10.1109/ICSM.2013.33
   Pruijt L, 2013, CONF PROC INT SYMP C, P172, DOI 10.1109/ICPC.2013.6613845
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   Saraiva J, 2010, LECT NOTES COMPUT SC, V6285, P344, DOI 10.1007/978-3-642-15114-9_27
   Skansholm J, 2004, JAVA BEGINNING
   Stafford JA, 2001, INT J SOFTW ENG KNOW, V11, P431, DOI 10.1142/S021819400100061X
   Sutton A, 2007, INFORM SOFTWARE TECH, V49, P212, DOI 10.1016/j.infsof.2006.10.011
   Tempero E, 2008, LECT NOTES COMPUT SC, V5142, P667, DOI 10.1007/978-3-540-70592-5_28
   Tempero E, 2013, LECT NOTES COMPUT SC, V7920, P577, DOI 10.1007/978-3-642-39038-8_24
   Tempero E, 2009, IEEE AUS SOFT ENGR, P91, DOI 10.1109/ASWEC.2009.19
   Terra R, 2009, SOFTWARE PRACT EXPER, V39, P1073, DOI 10.1002/spe.931
   Van Eyck Jo, 2011, P 6 INT WORKSHOP SHA, P53
   WIRFSBROCK R, 1989, SIGPLAN NOTICES, V24, P71, DOI 10.1145/74878.74885
   Wohlin C., 2012, Experimentation in Software Engineering
   Zoller C, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P43, DOI 10.1109/IWSM-MENSURA.2012.15
NR 45
TC 12
Z9 13
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2017
VL 47
IS 2
BP 273
EP 309
DI 10.1002/spe.2421
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EK2RP
UT WOS:000393774700005
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ireland, I
   Amaral, JN
   Silvera, R
   Cui, SM
AF Ireland, Iain
   Amaral, Jose Nelson
   Silvera, Raul
   Cui, Shimin
TI SafeType: detecting type violations for type-basedalias analysis of C
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE type-based analysis; alias analysis; type safety
ID POINTS-TO ANALYSIS; ALIAS ANALYSIS; MILLIONS; LINES; CODE; JAVA
AB To improve the ability of compilers to determine alias relations in a program, the C standard restricts the types of expressions that may access objects in memory. In practice, however, many existing C programs do not conform to these restrictions, making type-based alias analysis unsound for those programs. As a result, type-based alias analysis is frequently disabled. Existing approaches for verifying type safety exist within larger frameworks designed to verify overall memory safety, requiring both static analysis and runtime checks. This paper describes the motivation for analyzing the safety of type-based alias analysis independently; presents SafeType, a purely static approach to detection of violations of the C standard's restrictions on memory accesses; describes an implementation of SafeType in the IBM XL C compiler, with flow-sensitive and context-sensitive queries to handle variables with type void*; evaluates that implementation, showing that it scales to programs with hundreds of thousands of lines of code; and uses SafeType to identify a previously unreported violation in the 470.lbm benchmark in SPEC CPU2006. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Ireland, Iain; Cui, Shimin] IBM Canada Software Lab, Toronto, ON, Canada.
   [Amaral, Jose Nelson] Univ Alberta, Edmonton, AB, Canada.
   [Silvera, Raul] Google Inc, Mountain View, CA USA.
C3 University of Alberta; Google Incorporated
RP Amaral, JN (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 1R4, Canada.
EM jamaral@ualberta.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   through a Collaborative Research and Development (CRD) grant; Alberta
   Innovates Technology Futures organization; IBM Canada Centre for
   Advanced Studies
FX This work was funded by the Natural Sciences and Engineering Research
   Council of Canada (NSERC) through a Collaborative Research and
   Development (CRD) grant, by the Alberta Innovates Technology Futures
   organization, and by the IBM Canada Centre for Advanced Studies.
CR [Anonymous], 1992, Programming Language Design and Implementation (PLDI), DOI DOI 10.1145/143103.143137
   [Anonymous], 1994, Program analysis and specialization for the C programming language
   [Anonymous], 2011, LLVM 2 9 RELEASE NOT
   [Anonymous], 1998, Alias Analysis
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Bravenboer M, 2009, ACM SIGPLAN NOTICES, V44, P243, DOI 10.1145/1639949.1640108
   Chandra S., 1999, Proceedings of the 1999 ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering. (Toulouse, P66
   CHASE DR, 1990, SIGPLAN NOTICES, V25, P296, DOI 10.1145/93548.93585
   Dhurjati D, 2006, ACM SIGPLAN NOTICES, V41, P144, DOI 10.1145/1133981.1133999
   Diwan A, 1998, ACM SIGPLAN NOTICES, V33, P106, DOI 10.1145/277652.277670
   EMAMI M, 1994, SIGPLAN NOTICES, V29, P242, DOI 10.1145/773473.178264
   Ghiya R, 2001, ACM SIGPLAN NOTICES, V36, P47, DOI 10.1145/381694.378806
   Grossman D, 2002, ACM SIGPLAN NOTICES, V37, P282, DOI 10.1145/543552.512563
   Hardekopf B, 2007, ACM SIGPLAN NOTICES, V42, P290, DOI 10.1145/1273442.1250767
   Hardekopf B, 2011, INT SYM CODE GENER, P289, DOI 10.1109/CGO.2011.5764696
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Loewis M, 2003, ANSI STRICT ALIASING
   Necula GC, 2005, ACM T PROGR LANG SYS, V27, P477, DOI 10.1145/1065887.1065892
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Reinig AugustG., 1998, Digital Technical Journal, V10, P48
   Siff M, 1999, LECT NOTES COMPUT SC, V1687, P180, DOI 10.1145/318774.318942
   Steensgaard Bjarne., 1996, POINTS TO ANAL ALMOS, P32
   Sundaresan V, 2000, ACM SIGPLAN NOTICES, V35, P264, DOI 10.1145/354222.353189
   Whaley J, 2004, ACM SIGPLAN NOTICES, V39, P131, DOI 10.1145/996893.996859
   Wilson RobertP., 1990, Programming Language Design and Implementation (PLDI), P1
   Zhu JW, 2004, ACM SIGPLAN NOTICES, V39, P145, DOI 10.1145/996893.996860
NR 27
TC 1
Z9 1
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2016
VL 46
IS 11
BP 1571
EP 1588
DI 10.1002/spe.2388
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DZ8VK
UT WOS:000386150000007
DA 2024-07-18
ER

PT J
AU Kim, S
   Heo, K
   Oh, H
   Yi, K
AF Kim, Sol
   Heo, Kihong
   Oh, Hakjoo
   Yi, Kwangkeun
TI Widening with thresholds via binary search
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE static program analyzers; abstract interpretation; widening
AB In this paper, we present a useful technique for implementing practical static program analyzers that use widening. Our technique aims to improve the efficiency of the conventional widening-with-thresholds technique at a small precision compromise. In static analysis, widening is used to accelerate (or converge) fixed point iterations. Unfortunately, this acceleration often comes with a significant loss in analysis precision. A standard method to improve the precision is to apply the widening with a set of thresholds. However, this technique may significantly slow down the analysis, because in practice it is commonplace to use a large set of thresholds. In worst case, the technique increases the analysis cost by the size N of the threshold set. In this paper, we propose a technique to reduce the worst case by logN, by employing a binary search in the process of applying threshold values. We formalize the technique in the abstract interpretation framework and show that, by experiments with a realistic static analyzer for C, our technique considerably improves the efficiency (by 81.5%) of the existing method with a small compromise (20.9%) on the analysis precision. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Kim, Sol; Heo, Kihong; Yi, Kwangkeun] Seoul Natl Univ, Seoul, South Korea.
   [Oh, Hakjoo] Korea Univ, Seoul, South Korea.
C3 Seoul National University (SNU); Korea University
RP Oh, H (corresponding author), Korea Univ, Coll Informat, Programming Res Lab, Anamdong 5 Ga, Seoul 136713, South Korea.
EM hakjoo_oh@korea.ac.kr
RI Heo, Kihong/AAD-8692-2019; Heo, Kihong/F-2901-2018; ‍, 오학주[ 부교수 / 컴퓨터학과
   ]/AAW-5194-2020
OI Heo, Kihong/0000-0003-2671-0142; 
FU Engineering Research Center of Excellence Program of Korea Ministry of
   Science, ICT and Future Planning(MSIP)/National Research Foundation of
   Korea(NRF) [NRF-2008-0062609]; Samsung Electronics Software Center;
   Institute for Information and Communications Technology Promotion (IITP)
   - Korea government (MSIP) [B0101-15-0557, R0190-15-2011]
FX This work was supported by the Engineering Research Center of Excellence
   Program of Korea Ministry of Science, ICT and Future
   Planning(MSIP)/National Research Foundation of Korea(NRF) (grant
   NRF-2008-0062609) and by Samsung Electronics Software Center. This work
   was partly supported by the Institute for Information and Communications
   Technology Promotion (IITP) grant funded by the Korea government (MSIP)
   (no. B0101-15-0557, Resilient Cyber-Physical Systems Research) and (no.
   R0190-15-2011, Development of Vulnerability Discovery Technologies for
   IoT Software Security).
CR Blanchet B, 2002, LECT NOTES COMPUT SC, V2566, P85
   Bouissou O, 2012, J SYMB COMPUT, V47, P1479, DOI 10.1016/j.jsc.2011.12.050
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot P, 2007, LECT NOTES COMPUT SC, V4435, P272
   Cousot P, 2009, FORM METHOD SYST DES, V35, P229, DOI 10.1007/s10703-009-0089-6
   Cousot Patrick, 1976, P 2 INT S PROGRAMMIN
   Gopan D, 2006, LECT NOTES COMPUT SC, V4144, P452, DOI 10.1007/11817963_41
   Gopani D, 2007, LECT NOTES COMPUT SC, V4634, P349
   Halbwachs N, 1997, FORM METHOD SYST DES, V11, P157, DOI 10.1023/A:1008678014487
   Lakhdar-Chaouch L, 2011, LECT NOTES COMPUT SC, V6996, P492, DOI 10.1007/978-3-642-24372-1_38
   Mihaila Bogdan, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P170, DOI 10.1007/978-3-642-38088-4_12
   Simon A, 2006, LECT NOTES COMPUT SC, V4279, P166
NR 13
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2016
VL 46
IS 10
BP 1317
EP 1328
DI 10.1002/spe.2381
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW4PG
UT WOS:000383624900002
DA 2024-07-18
ER

PT J
AU Guo, HF
   Qiu, ZY
AF Guo, Hai-Feng
   Qiu, Zongyan
TI A dynamic stochastic model for automatic grammar-based test generation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE grammar-based test generation; software testing; fault localization
ID STRATEGY
AB Grammar-based test generation provides a systematic approach to producing test cases from a given context-free grammar. Unfortunately, naive grammar-based test generation is problematic because of the fact that exhaustive random test case production is often explosive, and grammar-based test generation with explicit annotation controls often causes unbalanced testing coverage. In this paper, we present an automatic grammar-based test generation approach, which takes a symbolic grammar as input, requires zero control input from users, and produces well-distributed test cases. Our approach utilizes a novel dynamic stochastic model where each variable is associated with a tuple of probability distributions, which are dynamically adjusted along the derivation. We further present a coverage tree illustrating the distribution of generated test cases and their detailed derivations. More importantly, the coverage tree supports various implicit derivation control mechanisms. We implemented this approach in a Java-based system, named Gena. Each test case generated by Gena automatically comes with a set of structural features, which can play an important and effective role on automated failure causes localization. Experimental results demonstrate the effectiveness of our approach, the well-balanced distribution of generated test cases over grammatical structures, and a case study on grammar-based failure causes localization. Copyright (C) 2014 John Wiley & Sons, Ltd.
C1 [Guo, Hai-Feng] Univ Nebraska, Dept Comp Sci, Omaha, NE 68182 USA.
   [Qiu, Zongyan] Peking Univ, Dept Informat, Beijing 100871, Peoples R China.
C3 University of Nebraska System; Peking University
RP Guo, HF (corresponding author), Univ Nebraska, Dept Comp Sci, Omaha, NE 68182 USA.
EM haifengguo@unomaha.edu
CR Ammann P, 2008, INTRO SOFEWARE TESTI
   [Anonymous], 1986, Denotational Semantics: A Methodology for Language Development
   [Anonymous], 2010, ICSE
   [Anonymous], 2013, GRAPH VIS SOFTW
   Bagheri Ebrahim, 2012, P 2012 C CTR ADV STU, P87
   Belli Fevzi, 2013, Implementation and Application of Automata. 18th International Conference, CIAA 2013. Proceedings: LNCS 7982, P48, DOI 10.1007/978-3-642-39274-0_6
   Belli F., 2011, Proceedings of the 2011 IEEE 6th International Symposium on Service Oriented System Engineering (SOSE 2011), P181, DOI 10.1109/SOSE.2011.6139107
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   Debroy V, 2013, SOFTWARE PRACT EXPER, V43, P989, DOI 10.1002/spe.1146
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   Gansner E., 2010, DRAWING GRAPHS DOT
   Godefroid P, 2008, ACM SIGPLAN NOTICES, V43, P206, DOI 10.1145/1379022.1375607
   Groce A., 2012, P INT S SOFTW TEST A, P78, DOI DOI 10.1145/2338965.2336763
   Guo HF, 2008, SOFTWARE PRACT EXPER, V38, P75, DOI 10.1002/spe.824
   Hai-Feng Guo, 2012, 2012 IEEE Sixth International Symposium on Theoretical Aspects of Software Engineering (TASE 2012), P111, DOI 10.1109/TASE.2012.16
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hamlet Richard., 1994, Random testing. Encyclopedia of software Engineering
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   Harrold M., 1992, P PACIFIC NW QUALITY, P311
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hayhurst K., 2001, TECHNICAL REPORT
   Hoffman DM, 2011, SOFTWARE PRACT EXPER, V41, P427, DOI 10.1002/spe.1017
   Jacod J, 2003, PROBABILITY ESSENTIA, P37
   Knuth D. E., 1990, P INT C ATTR GRAMM T, P1, DOI DOI 10.1007/3-54053101-7_1
   Kosindrdecha N., 2010, J SOFTWARE ENG, V4, P265
   Lammel R., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P201
   Lämmel R, 2006, LECT NOTES COMPUT SC, V3964, P19
   Lei Y, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P267
   Majumdar Rupak, 2007, 22 IEEE ACM INT C AU, P134
   MAURER PM, 1992, SOFTWARE PRACT EXPER, V22, P223, DOI 10.1002/spe.4380220303
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   MILLER JC, 1963, COMMUN ACM, V6, P58, DOI 10.1145/366246.366248
   Misherghi G., 2006, 28th International Conference on Software Engineering Proceedings, P142, DOI 10.1145/1134285.1134307
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   PAAKKI J, 1995, ACM COMPUT SURV, V27, P196, DOI 10.1145/210376.197409
   Peter Olofsson MA, 2012, PROBABILITY STAT STO
   Pretschner A, 2005, PROC INT CONF SOFTW, P392
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   Raymond P, 1998, REAL TIM SYST SYMP P, P200, DOI 10.1109/REAL.1998.739746
   Regehr J, 2012, ACM SIGPLAN NOTICES, V47, P335, DOI 10.1145/2345156.2254104
   Riehl J., 2004, THESIS U CHICAGO
   Sirer EG, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P1
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   Weyuker E.J., 1980, 13th Int'l Conf on System Sciences, P44
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1173, DOI 10.1109/ICSE.2013.6606671
   Zhang Sai., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, P353, DOI 10.1145/2001420.2001463
   Zheng LX, 2009, P INT COMP SOFTW APP, P130, DOI 10.1109/COMPSAC.2009.193
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 54
TC 4
Z9 4
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2015
VL 45
IS 11
BP 1519
EP 1547
DI 10.1002/spe.2278
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LI
UT WOS:000363500900004
DA 2024-07-18
ER

PT J
AU Castiglione, A
   Gribaudo, M
   Iacono, M
   Palmieri, F
AF Castiglione, Aniello
   Gribaudo, Marco
   Iacono, Mauro
   Palmieri, Francesco
TI Modeling performances of concurrent big data applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data applications; cloud architecture; mean field analysis;
   Markovian agents; capacity planning; performance evaluation
ID MEAN-FIELD
AB Big Data applications are characterized by a non-negligible number of complex parallel transactions on a huge amount of data that continuously varies, generally increasing over time. Because of the amount of needed resources, the ideal runtime scenario for these applications is based on complex cloud computing and storage infrastructures, providing a scalable degree of parallelism together with isolation between different applications and resource abstraction. However, such additional abstraction degree also introduces significant complexity in performance modeling and decision making. Potential concurrency of many applications on the same cloud infrastructure has to be evaluated, and, simultaneously, scalability of applications over time has to be studied through proper modeling practices, in order to predict the system behavior as the usage patterns evolve and the load increases. For this purpose, in this paper, we propose an analytic modeling technique based on the use of Markovian Agents and Mean Field Analysis that allows the effective description of different concurrent Big Data applications on a same, multi-site cloud infrastructure, accounting for mutual interactions, in order to support the careful evaluation of several elements in terms of real costs/risks/benefits for correctly dimensioning and allocating the resources and verifying the existing service level agreements. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Castiglione, Aniello] Univ Salerno, Dipartimento Informat, I-84084 Fisciano, SA, Italy.
   [Gribaudo, Marco] Politecn Milan, Dipartimento Informat Elettron & Bioingn, I-20133 Milan, Italy.
   [Iacono, Mauro] Seconda Univ Napoli, Dipartimento Sci Polit, Viale Ellittico 31, I-81100 Caserta, Italy.
   [Palmieri, Francesco] Seconda Univ Napoli, Dipartimento Ingn Ind & Informaz, I-81031 Aversa, CE, Italy.
C3 University of Salerno; Polytechnic University of Milan; Universita della
   Campania Vanvitelli; Universita della Campania Vanvitelli
RP Palmieri, F (corresponding author), Seconda Univ Napoli, Dipartimento Ingn Ind & Informaz, Via Roma 29, I-81031 Aversa, CE, Italy.
EM francesco.palmieri@unina.it
RI Castiglione, Aniello/F-1034-2011; Gribaudo, Marco/K-6511-2017; Palmieri,
   Francesco/AAT-9080-2020; Iacono, Mauro/G-2772-2011; GRIBAUDO,
   MARCO/AAI-5402-2021
OI Castiglione, Aniello/0000-0003-0571-1074; Palmieri,
   Francesco/0000-0003-1760-5527; Iacono, Mauro/0000-0002-2089-975X;
   GRIBAUDO, MARCO/0000-0002-1415-5287
CR [Anonymous], P 27 EUR C MOD SIM
   [Anonymous], 2009, HOTCLOUD
   [Anonymous], ECEHPCLAB97202 PURD
   [Anonymous], RACKSP CLOUD
   [Anonymous], 2001, P 2001 ACM IEEE C SU
   [Anonymous], 2011, CIDR
   [Anonymous], 2011, TECHNICAL REPORT
   [Anonymous], APPL PERFORMANCE MOD
   [Anonymous], TR200702 AMALTHEA
   [Anonymous], 2009, P VLDB ENDOWMENT
   [Anonymous], 7 INT C PERF EV METH
   [Anonymous], 2007, NSDI
   [Anonymous], AM EL COMP CLOUD AM
   Armstrong B, 1998, PROC INT CONF PARAL, P518, DOI 10.1109/ICPP.1998.708525
   Barbierato E, 2014, FUTURE GENER COMP SY, V37, P345, DOI 10.1016/j.future.2013.12.036
   Benaim M, 2008, PERFORM EVALUATION, V65, P823, DOI 10.1016/j.peva.2008.03.005
   Bobbio A, 2008, INT CONF QUANT EVAL, P215, DOI 10.1109/QEST.2008.47
   Boulon J., 2008, P CCA, V8, P1
   Castiglione A, 2014, FUTURE GENER COMP SY, V37, P203, DOI 10.1016/j.future.2013.07.016
   Dinda P. A., 1999, Proceedings. The Eighth International Symposium on High Performance Distributed Computing (Cat. No.99TH8469), P87, DOI 10.1109/HPDC.1999.805285
   Esposito C, 2013, CLUSTER COMPUT, V16, P887, DOI 10.1007/s10586-013-0261-z
   Fei Teng, 2011, Proceedings of the 2011 Fifth IEEE/FTRA International Conference on Multimedia and Ubiquitous Engineering (MUE 2011), P277, DOI 10.1109/MUE.2011.56
   Gribaudo M, 2008, INT CONF PERVAS COMP, P300, DOI 10.1109/PERCOM.2008.100
   Gribaudo M, 2009, LECT NOTES COMPUT SC, V5652, P218, DOI 10.1007/978-3-642-02924-0_18
   Hammoud S., 2010, 2010 Seventh International Conference on Fuzzy Systems and Knowledge Discovery (FSKD 2010), P2993, DOI 10.1109/FSKD.2010.5569086
   Herodotou H, 2011, PROC VLDB ENDOW, V4, P1111
   Kurtz T. G., 1978, Stochastic Processes & their Applications, V6, P223, DOI 10.1016/0304-4149(78)90020-0
   Liu Y, 2013, FUTURE GENER COMP SY, V29, P300, DOI 10.1016/j.future.2011.05.007
   Palmieri F, 2010, FUTURE GENER COMP SY, V26, P1241, DOI 10.1016/j.future.2010.02.003
   Press W. H., 2002, Numerical Recipes in C: the Art of Scientific Computing, V2nd ed., DOI DOI 10.1119/1.14981
   Schopf JM, 1998, FIRST MERGED INTERNATIONAL PARALLEL PROCESSING SYMPOSIUM & SYMPOSIUM ON PARALLEL AND DISTRIBUTED PROCESSING, P647, DOI 10.1109/IPPS.1998.669995
   Wang G., 2009, IEEE INT S MODELING, P1
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P1661, DOI 10.1016/j.future.2013.02.010
   Zheng W., 2009, USENIX Annual Technical Conference, P18
NR 34
TC 28
Z9 30
U1 0
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2015
VL 45
IS 8
SI SI
BP 1127
EP 1144
DI 10.1002/spe.2269
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM6JB
UT WOS:000357793500008
DA 2024-07-18
ER

PT J
AU Chen, TY
   Yeh, HL
   Wei, HW
   Sun, MJ
   Hsu, TS
   Shih, WK
AF Chen, Tseng-Yi
   Yeh, Hsiu-Lien
   Wei, Hsin-Wen
   Sun, Mei-ju
   Hsu, Tsan-sheng
   Shih, Wei-Kuan
TI An effective monitoring framework and user interface design
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE monitoring system; monitoring tool; information entropy; iRODS
AB A distributed environment requires a monitoring system to oversee the operation of various distributed nodes. A monitoring service is crucial because it ensures a high-quality computing environment and a reliable service. The interface and framework determine the effectiveness of a monitoring system. This paper uses the concept of user-adaptive visualization to design its interface and proposes a flexible modular framework. Designers can use the proposed modular framework to flexibly extend existing modules, design visual interfaces to satisfy user requirements, and improve system failover schemes. The implementation of such a monitoring system for monitoring data preservation nodes is also provided. The system including fault-tolerance and notification functions supports full monitoring services for Storage Resource Broker (SRB) or integrated Rule-Oriented Data System (iRODS) based systems. The experimental results show that the proposed framework is suitable for data preservation services and is robust and responsive when faced with system failures. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Chen, Tseng-Yi; Sun, Mei-ju; Shih, Wei-Kuan] Natl Tsing Hua Univ, Dept Comp Sci, Taipei, Taiwan.
   [Yeh, Hsiu-Lien] Natl Tsing Hua Univ, Inst Informat Syst & Applicat, Taipei, Taiwan.
   [Wei, Hsin-Wen] Tamkang Univ, Dept Elect Engn, New Taipei City, Taiwan.
   [Hsu, Tsan-sheng] Acad Sinica, Inst Informat Sci, Taipei, Taiwan.
C3 National Tsing Hua University; National Tsing Hua University; Tamkang
   University; Academia Sinica - Taiwan
RP Wei, HW (corresponding author), Tamkang Univ, Dept Elect Engn, New Taipei City, Taiwan.
EM hwwei@mail.tku.edu.tw
OI Chen, Tseng-Yi/0000-0003-2939-2821
CR Andreozzi S, 2005, FUTURE GENER COMP SY, V21, P559, DOI 10.1016/j.future.2004.10.005
   [Anonymous], 2007, P WORKSH GRID MON
   Araujo F, 2009, IPDPS 2009 IEEE INT
   Balis B, 2011, FUTURE GENER COMP SY, V27, P1103, DOI 10.1016/j.future.2011.04.005
   Burigat S, 2013, PERS UBIQUIT COMPUT, V17, P371, DOI 10.1007/s00779-011-0500-3
   Cooke A., 2004, J GRID COMPUT, V2, P323
   Hornbæk K, 2011, INT J HUM-COMPUT ST, V69, P509, DOI 10.1016/j.ijhcs.2011.02.007
   Katsaros G, 2011, 2011 IEEE INT C SERV
   Katsaros G, 2012, J SYST SOFTWARE, V85, P1029, DOI 10.1016/j.jss.2011.11.1043
   Massie ML, 2004, PARALLEL COMPUT, V30, P817, DOI 10.1016/j.parco.2004.04.001
   Ochin JG, 2011, UACEE INT J ADV COMP, V1, P5
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Sztajnberg A, 2011, SOFTWARE PRACT EXPER, V41, P103, DOI 10.1002/spe.1007
   Yeh HL, 2011, P 2011 INT C GRID CO
   Yeh TT, 2010, P IRODS US GROUP M
   Yi JS, 2007, IEEE T VIS COMPUT GR, V13, P1224, DOI 10.1109/TVCG.2007.70515
   Zanikolas S, 2005, FUTURE GENER COMP SY, V21, P163, DOI 10.1016/j.future.2004.07.002
   Zdenko S, 2004, P 6 CARNET US C
   Zhang XH, 2003, 12TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P270
NR 19
TC 3
Z9 3
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2015
VL 45
IS 4
BP 549
EP 570
DI 10.1002/spe.2248
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD0HU
UT WOS:000350752200006
DA 2024-07-18
ER

PT J
AU Hume, T
   Watson, D
AF Hume, Tom
   Watson, Des
TI Is superoptimization viable for VM instruction sets?
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE superoptimizer; JVM; virtual machine; Java; search; code optimization
AB The technique of superoptimization attempts to ensure true optimality of a code (according to predefined criteria) through an exhaustive search of all potentially viable programs. Implementations have demonstrated that superoptimizers are capable of finding shorter programs than those hand optimized for size by experts or produced by conventional compilers. Superoptimizers have been developed for many machine architectures and used for diverse purposes including automating peephole optimization and binary translation of instruction sets. The output of superoptimizers is frequently surprising to human experts and often takes advantage of side effects or obscure characteristics of the targeted hardware. Virtual machines (VMs) are increasingly popular in implementations of programming languages, because they can provide a common platform across heterogeneous hardware architectures. This paper examines whether superoptimization could be a viable technique for VMs. A superoptimizer for the Java VM (JVM) has been developed and used to generate demonstrably size-optimized versions of some simple mathematical functions, implemented in a Java bytecode. We have shown that these versions are shorter than both implementations shipped with the Java software development kit and those generated by the Java compiler. We also have some useful observations concerning techniques to allow larger programs to be optimized in a reasonable time by this approach. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Hume, Tom; Watson, Des] Univ Sussex, Sch Engn & Informat, Brighton BN1 9QJ, E Sussex, England.
C3 University of Sussex
RP Hume, T (corresponding author), Google Inc, 1600 Amphitheatre Pkwy, Mountain View, CA 94043 USA.
EM twhume@gmail.com
CR [Anonymous], 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08
   Bansal S, 2006, ACM SIGPLAN NOTICES, V41, P394, DOI 10.1145/1168918.1168906
   Bik AJC, 1998, CONCURRENCY-PRACT EX, V10, P879, DOI 10.1002/(SICI)1096-9128(199809/11)10:11/13<879::AID-CPE408>3.0.CO;2-R
   Cousot P., 1981, Program flow analysis. Theory and applications, P303
   Cricks T, 2009, THESIS
   GRANLUND T, 1992, SIGPLAN NOTICES, V27, P341, DOI 10.1145/143103.143146
   Joshi R, 2002, ACM SIGPLAN NOTICES, V37, P304, DOI 10.1145/543552.512566
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Maierhofer M, 1998, LECT NOTES COMPUT SC, V1383, P189
   Massalins H., 1987, ACM SIGPLAN NOTICES, V122-126, P10
   Yunkes J, 2012, SYSLOG4J COMPLETE SY
   [No title captured]
NR 12
TC 0
Z9 0
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2015
VL 45
IS 4
BP 571
EP 579
DI 10.1002/spe.2240
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD0HU
UT WOS:000350752200007
DA 2024-07-18
ER

PT J
AU Min, B
   Varadharajan, V
   Tupakula, U
   Hitchens, M
AF Min, Byungho
   Varadharajan, Vijay
   Tupakula, Udaya
   Hitchens, Michael
TI Antivirus security: naked during updates
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE security; antivirus; malware; vulnerability; code execution; local
   privilege escalation; denial of service
ID MALWARE
AB The security of modern computer systems heavily depends on security tools, especially on antivirus software solutions. In the anti-malware research community, development of techniques for evading detection by antivirus software is an active research area. This has led to malware that can bypass or subvert antivirus software. The common strategies deployed include the use of obfuscated code and staged malware whose first instance (usually installer such as dropper and downloader) is not detected by the antivirus software. Increasingly, most of the modern malware are staged ones in order for them to be not detected by antivirus solutions at the early stage of intrusion. The installers then determine the method for further intrusion including antivirus bypassing techniques. Some malware target boot and/or shutdown time when antivirus software may be inactive so that they can perform their malicious activities. However, there can be another time frame where antivirus solutions may be inactive, namely, during the time of update. All antivirus software share a unique characteristic that they must be updated at a very high frequency to provide up-to-date protection of their system. In this paper, we suggest a novel attack vector that targets antivirus updates and show practical examples of how a system and antivirus software itself can be compromised during the update of antivirus software. Local privilege escalation using this vulnerability is also described. We have investigated this design vulnerability with several of the major antivirus software products such as Avira, AVG, McAfee, Microsoft, and Symantec and found that they are vulnerable to this new attack vector. The paper also discusses possible solutions that can be used to mitigate the attack in the existing versions of the antivirus software as well as in the future ones. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Min, Byungho; Varadharajan, Vijay; Tupakula, Udaya; Hitchens, Michael] Macquarie Univ, Fac Sci, Sydney, NSW 2109, Australia.
C3 Macquarie University
RP Varadharajan, V (corresponding author), Macquarie Univ, Fac Sci, Sydney, NSW 2109, Australia.
EM vijay.varadharajan@mq.edu.au
OI Hitchens, Michael/0000-0001-6320-9184; Varadharajan,
   Vijay/0000-0002-3621-9114; TUPAKULA, Udaya/0000-0001-5048-9797
CR AHNLAB ANALYSIS TEAM, 2012, MALW AN CIT
   Al-Saleh M. I., 2011, 4 USENIX WORKSH LARG
   Alvarez S., 2007, COMMUNICATION
   Alvarez S., 2008, DEATH AV DEFENSE DEP
   Anity labs, 2012, ANAL REP FLAM WORM S
   [Anonymous], 2011, W32 DUQU PRECURSOR N
   [Anonymous], 2012, SYMANTEC INTELLIGENC
   [Anonymous], 2008, USENIX SEC S
   Assolini F, 2012, BRAZILIAN TROJAN BAN
   AV-comparatives, 2011, AV COM SUMM REP 2011
   Bishop P, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P11, DOI 10.1109/ISSRE.2011.15
   Bravo P., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P515, DOI 10.1109/ARES.2011.78
   Bravo P, 2011, ROOTKITS SURVEY
   Corrons L, 2008, MBR TROJANS EXPLORIN
   djwm, 2012, ONLY 9 22 VIRUS SCAN
   Falliere N., 2011, SALITY STORY PEER TO
   Falliere Nicolas., 2011, Stuxnet Dossier
   Gashi I, 2009, 2009 8TH IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS, P4, DOI 10.1109/NCA.2009.14
   Golovanov S., 2012, UNIQUE FILELESS BOT
   Heasman John, 2007, HACKING EXTENSIBLE F
   IOActive, 2012, Reversal and analysis of zeus and spyeye banking trojans
   Jana S, 2012, P IEEE S SECUR PRIV, P80, DOI 10.1109/SP.2012.15
   Josse S, 2006, J COMPUT VIROL HACKI, V2, P51, DOI 10.1007/s11416-006-0016-y
   Kapoor A, 2011, VIRUS B C
   Kaspersky Lab, 2012, GAUSS ABN DISTR
   Kleissner P., 2009, STONED BOOTKIT
   Lee K., 2010, P 2010 ACM S APPL CO, P1970, DOI [10.1145/1774088.1774505, DOI 10.1145/1774088.1774505]
   Lin D, 2011, J COMPUT VIROL HACKI, V7, P201, DOI 10.1007/s11416-010-0148-y
   Loukas K. (Snare), 2012, MYSTERIIS DOM JOBSIV
   Microsoft malware protection center, 2011, WIN32 RAMN
   MSDN, SEARCH PATH US WIND
   Murad K, 2010, LECT NOTES COMPUT SC, V6485, P394, DOI 10.1007/978-3-642-17569-5_39
   Newsome J, 2005, P IEEE S SECUR PRIV, P226, DOI 10.1109/SP.2005.15
   O'Kane P, 2011, IEEE SECUR PRIV, V9, P41, DOI 10.1109/MSP.2011.98
   Oberheide J, 2009, P 3 USENIX C OFF TEC, V99
   OPSWAT, 2012, MARK SHAR REP
   Porst S., 2010, REALLY OBFUSCATE YOU
   Potter B, 2009, COMPUT FRAUD SECUR, P12, DOI 10.1016/S1361-3723(09)70033-8
   Rad BB, 2012, INT J COMPUT SCI NET, V12, P74
   Sirag H., 2011, ADV PERSISTENT ATTAC
   Sotirov A., 2012, ANAL MD5 COLLISION F
   Sukwong O, 2011, COMPUTER, V44, P63, DOI 10.1109/MC.2010.187
   Symantec Security Response Team, 2009, DOWNADUP COD COMPR G
   Szor P., 2001, VIRUS B C
   WHEELER A., 2005, BLACK HAT EUR C AMST
   Wong W, 2006, J COMPUT VIROL HACKI, V2, P211, DOI 10.1007/s11416-006-0028-7
   Xu JY, 2007, J RES PRACT INF TECH, V39, P181
   Xue F., 2008, PROC BLACK HAT EUROP, P1
NR 48
TC 13
Z9 15
U1 2
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2014
VL 44
IS 10
BP 1201
EP 1222
DI 10.1002/spe.2197
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP2AR
UT WOS:000341875200003
DA 2024-07-18
ER

PT J
AU Roantree, M
   Liu, J
AF Roantree, Mark
   Liu, Jun
TI A heuristic approach to selecting views for materialization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE view adaptation; view selection; XML data warehouses
ID ADAPTATION
AB XML data warehouses are becoming more popular as data is harvested from the web or as output from web services. As these warehouses tend to grow significantly over time, various techniques for expediting queries have been developed. One such technique is to materialize some or all of the queries in advance of query processing. These views are then subject to change either when underlying data changes or view definitions themselves are modified by users. The work in this paper focuses on changes to view definitions or view adaptation as it is known. Our approach is to segment the materialized view into fragments to minimize the effect of view changes. One crucial aspect to this approach is how to select the best fragments for materialization. In this paper, we introduce a new approach to selecting fragments based on heuristics derived from costs associated with the view graph. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Roantree, Mark; Liu, Jun] Dublin City Univ, Sch Comp, Dublin 9, Ireland.
C3 Dublin City University
RP Roantree, M (corresponding author), Dublin City Univ, Sch Comp, Dublin 9, Ireland.
EM mark@computing.dcu.ie
OI Roantree, Mark/0000-0002-1329-2570
FU Enterprise Ireland Grant [TD/2008/0231]
FX This work was supported by Enterprise Ireland Grant Reference
   TD/2008/0231.
CR Algergawy A, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978804
   [Anonymous], 2009, ERCIM NEWS, V79
   Ayyagari P., 2007, ASIACCS 07, P105
   Baril X, 2003, LECT NOTES COMPUTER, V2681, P1031
   Bauer A, 2003, SSDBM 2002: 15TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT, P43, DOI 10.1109/SSDM.2003.1214953
   Bellahsene Z, 2004, IEEE T KNOWL DATA EN, V16, P1441, DOI 10.1109/TKDE.2004.79
   Bellahsene Z, 2000, LECT NOTES COMPUT SC, V1920, P239
   Bertino E, 2008, J INTELL INF SYST, V30, P55, DOI 10.1007/s10844-006-0023-y
   Cavalieri F, 2011, EDBT 2011 14 INT C E
   Chaves LeonardoWeiss F., 2009, P 12 INT C EXTENDING, P1088
   Fong J, 2008, SOFTWARE PRACT EXPER, V38, P1183, DOI 10.1002/spe.868
   Georgiadis H, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P603
   Ghosh A., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P179
   Golfarelli M., 2001, Proc. DOLAP01, P40, DOI DOI 10.1145/512236.512242
   Gong A, 2008, FIFTH INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY, VOL 5, PROCEEDINGS, P391, DOI 10.1109/FSKD.2008.96
   Gupta A., 1995, SIGMOD Record, V24, P211, DOI 10.1145/568271.223817
   Jeh G., 2002, PROC 8 ACM SIGKDD IN, P538
   Jin XY, 2010, LECT NOTES COMPUT SC, V6184, P513
   Kade AM, 2008, DOCENG'08: PROCEEDINGS OF THE EIGHTH ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P191
   Kumar T. V. Vijay, 2010, International Journal of Information and Communication Technology, V2, P386, DOI 10.1504/IJICT.2010.034979
   Liu J., 2011, THESIS U CHINESE ACA, P1
   Liu J., 2010, P ADC BRISB QLD AUST, P151
   Liu J, 2010, LECT NOTES COMPUT SC, V6412, P160, DOI 10.1007/978-3-642-16373-9_12
   Lu EJL, 2006, J SYST SOFTWARE, V79, P984, DOI 10.1016/j.jss.2005.10.009
   Pérez JM, 2008, IEEE T KNOWL DATA EN, V20, P940, DOI 10.1109/TKDE.2007.190746
   Marks G, 2011, 22 AUSTR DAT C PERTH
   Miklau G., 2002, PODS, P65, DOI DOI 10.1145/543613.543623
   Mohania M., 1997, Data Mining, Data Warehousing and Client/Server Databases. Proceedings of the 8th International Database Workshop, P151
   O'Connor MF, 2010, ACM C P EDBT ICDT WO
   Onizuka M., 2005, WWW 05, P671
   Sawires A, 2005, P 2005 ACM SIGMOD IN
   Tang N, 2009, LECT NOTES COMPUT SC, V5463, P616, DOI 10.1007/978-3-642-00887-0_55
   Wu X., 2009, The Conference on Information and Knowledge Management, P475
   Ye W, 2005, LECT NOTES COMPUT SC, V3739, P245
NR 34
TC 11
Z9 11
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2014
VL 44
IS 10
BP 1157
EP 1179
DI 10.1002/spe.2192
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP2AR
UT WOS:000341875200001
DA 2024-07-18
ER

PT J
AU Boyer, F
   de Palma, N
   Gruber, O
   Sicard, S
AF Boyer, Fabienne
   de Palma, Noel
   Gruber, Olivier
   Sicard, Sylvain
TI Full autonomic repair for distributed applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomic computing; repair management; distributed systems; component
   models
AB Grid or cloud environments leverage the need for self-repair solutions that resist and repair their own failures, something not yet ensured by existing solutions. In this paper, we describe the JADE Autonomic Repair System for legacy applications deployed in a grid or cloud environment. JADE is based on three main design principles. First, legacy applications are wrapped with Java objects, obtaining a uniform set of management operations over the heterogeneous legacy management capabilities. Second, to gain full autonomy, we adopt a replicated design combined with a recursive approach that makes JADE appear to JADE as any distributed application it manages and repairs. Finally, to scale, we rely on tiling the distributed environment and structuring our repair system per tile. To our knowledge, our repair system is the only one that is designed to scale and is fully autonomic, repairing not only the failures of the managed system but also its own. Our repair system has been tested in various realistic scenarios. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Boyer, Fabienne; de Palma, Noel; Gruber, Olivier; Sicard, Sylvain] Univ Grenoble, LIG, Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS)
RP Boyer, F (corresponding author), Univ Grenoble, LIG, Grenoble, France.
EM Fabienne.Boyer@imag.fr
CR Abdellatif T, 2004, LECT NOTES COMPUT SC, V3291, P1571
   ANR (Agence Nationale de la Recherche), 2006, SELFW PROJ
   Arshad N, 2007, SOFTWARE QUAL J, V15, P265, DOI 10.1007/s11219-007-9019-2
   Bagchi S, 1998, CHAMELEON SOFTWARE I
   Baldoni R, 2002, LECT NOTES COMPUT SC, V2604, P49
   Balter R., 2004, JORAM OPEN SOURCE EN
   Bertier M, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P354, DOI 10.1109/DSN.2002.1028920
   Blair G.S., 2002, P 1 WORKSHOP SELF HE, P9, DOI 10.1145/582128.582131
   Bouchenak S, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P369
   BURKE B, 2002, CLUSTERING JBOSS 3 0
   Candea G, 2006, CLUSTER COMPUT, V9, P175, DOI 10.1007/s10586-006-7562-4
   Candea G, 2004, CORR
   Cecchet E, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK 2004 USENIX ANNUAL TECHNICAL CONFERENCE, P9
   Chen M.Y., 2004, Proc. NSDI, P23
   Clark C, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI '05), P273
   Cully B., 2008, P S NETW SYST DES IM, P161
   Etchevers X., 2011, Proceedings of the 2011 IEEE 4th International Conference on Cloud Computing (CLOUD 2011), P668, DOI 10.1109/CLOUD.2011.65
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Guerraoui R., 1996, Reliable Software Technologies - Ada-Europe '96. 1996 Ada-Europe International Conference on Reliable Software Technologies. Proceedings, P38, DOI 10.1007/BFb0013477
   Janakiraman G, 2005, I C DEPEND SYS NETWO, P260, DOI 10.1109/DSN.2005.33
   Kalyanakrishnam M., 1999, Proceedings of the 18th IEEE Symposium on Reliable Distributed Systems, P178, DOI 10.1109/RELDIS.1999.805094
   Kephart JO, 2005, PROC INT CONF SOFTW, P15, DOI 10.1145/1062455.1062464
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Leners JB, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P279
   Murphy MA, 2010, J GRID COMPUT, V8, P1, DOI 10.1007/s10723-009-9142-3
   Oppenheimer D, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS (USITS'03), P1
   Osman S, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P361, DOI 10.1145/1060289.1060323
   Parashar M, 2006, CLUSTER COMPUT, V9, P161, DOI 10.1007/s10586-006-7561-5
   Sicard S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P101, DOI 10.1145/1368088.1368103
   Sun Microsystems, JAV PLATF ENT ED JEE
   Zhang ZP, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P196
NR 31
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2014
VL 44
IS 9
BP 1027
EP 1045
DI 10.1002/spe.2185
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN2MI
UT WOS:000340419100001
DA 2024-07-18
ER

PT J
AU Rodriguez, JM
   Crasso, M
   Mateos, C
   Zunino, A
AF Manuel Rodriguez, Juan
   Crasso, Marco
   Mateos, Cristian
   Zunino, Alejandro
TI Best practices for describing, consuming, and discovering web services:
   a comprehensive toolset
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE service-oriented computing; service-oriented development guidelines; web
   services; WSDL anti-patterns; web service discovery; web service
   consumption
ID SOFTWARE; METRICS
AB The service-oriented computing (SOC) paradigm has recently gained a lot of attention in the software industry because SOC represents a novel and a fresh way of architecting distributed applications. SOC is usually materialized via web services, which allows developers to structure applications exposing a clear, public interface to their capabilities. Although conceptually and technologically mature, SOC still lacks adequate development support from a methodological point of view. In this paper, we present the EasySOC project, a set of guidelines to simplify the development of service-oriented applications and services. EasySOC is a synthesized catalog of best SOC development practices that arise as a result of several years of research in fundamental Services Computing topics, that is, Web Service Description Language-based technical specification, Web Service discovery, and Web Service outsourcing. In addition, we describe a materialization of the guidelines for the Java language, which has been implemented as a plug-in for the Eclipse IDE. We believe that both the practical nature of the guidelines and the availability of this software that enforces them may help software practitioners to rapidly exploit our ideas for building real SOC applications. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Manuel Rodriguez, Juan; Crasso, Marco; Mateos, Cristian; Zunino, Alejandro] UNICEN Univ, ISISTAN Res Inst, Buenos Aires, DF, Argentina.
   [Manuel Rodriguez, Juan; Crasso, Marco; Mateos, Cristian; Zunino, Alejandro] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Mateos, C (corresponding author), UNICEN Univ, ISISTAN Res Inst, Tandil B7001BBO, Buenos Aires, DF, Argentina.
EM cmateos@conicet.gov.ar
RI Zunino, Alejandro/W-2100-2017; Rodriguez, Juan Manuel/V-9039-2019
OI Zunino, Alejandro/0000-0002-9537-3541; Rodriguez, Juan
   Manuel/0000-0002-1130-8065; Mateos, Cristian/0000-0001-5761-1898
FU ANPCyT [PAE-PICT 2007-02311]
FX We acknowledge the financial support provided by ANPCyT through grant
   PAE-PICT 2007-02311.
CR Allen EE, 2006, SCI COMPUT PROGRAM, V59, P26, DOI 10.1016/j.scico.2005.07.003
   *AP SOFTW FDN, 2009, AP CXF OP SOURC SERV
   Atkinson M, 2005, CONCURR COMP-PRACT E, V17, P377, DOI 10.1002/cpe.936
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bichler M, 2006, COMPUTER, V39, P99, DOI 10.1109/MC.2006.102
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Blake MB, 2008, IEEE INTERNET COMPUT, V12, P62, DOI 10.1109/MIC.2008.112
   Bollmann P., 1983, Proceedings of the Sixth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P122, DOI 10.1145/511793.511811
   Campbell-Kelly M, 2009, COMMUN ACM, V52, P28, DOI [10.1145/150B409.1506419, 10.1145/1506409.1506419]
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chumbley R, 2010, BASIC PROFILE VERSIO
   Crasso M, 2010, INFORM SCI
   Crasso M, 2011, INFORM SYST FRONT, V13, P407, DOI 10.1007/s10796-009-9221-9
   Crasso M, 2011, J DATABASE MANAGE, V22, P102, DOI 10.4018/jdm.2011010105
   Crasso M, 2010, NEW GENERAT COMPUT, V28, P371, DOI 10.1007/s00354-009-0094-8
   Crasso M, 2010, IEEE INTERNET COMPUT, V14, P48, DOI 10.1109/MIC.2010.81
   Crasso M, 2010, J WEB ENG, V9, P66
   Duftler M, 2001, ACM C OBJ OR PROGR S
   Erickson J, 2008, J DATABASE MANAGE, V19, P42, DOI 10.4018/jdm.2008070103
   Erl T., 2009, Web Service Contract Design Versioning
   Flaxer D, 2004, PROCEEDINGS OF THE IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE TECHNOLOGY FOR DYNAMIC E-BUSINESS, P328
   Garofalakis J, 2006, J WEB ENG, V5, P265
   International Organization for Standardization, 2001, 250012007 ISO
   Johnson R, 2005, COMPUTER, V38, P107, DOI 10.1109/MC.2005.22
   Juric MB, 2009, J SYST SOFTWARE, V82, P1326, DOI 10.1016/j.jss.2009.03.001
   Klein D, 2003, 41ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P423, DOI 10.3115/1075096.1075150
   Kohlborn T, 2009, IEEE T SERV COMPUT, V2, P50, DOI 10.1109/TSC.2009.6
   Kohlmann F., 2007, BPSC, V7, P180
   Kongdenfha W, 2009, IEEE T SERV COMPUT, V2, P94, DOI 10.1109/TSC.2009.12
   Korfhage R.R., 1997, INFORM STORAGE RETRI
   Kousiouris G, 2012, IGI GLOBAL, P75
   LOUGHRAN S, 2005, HPL200583
   Rodriguez JM, 2010, SCI COMPUT PROGRAM, V75, P1001, DOI 10.1016/j.scico.2010.01.002
   Martin RC, 1995, REP OBJECT ANAL DES, V2, P1
   Mateos C, 2011, COMPUTER AP IN PRESS
   Mateos C, 2010, WEB TECHN TRACK WT 2
   McCool R, 2006, IEEE INTERNET COMPUT, V10, P96, DOI 10.1109/MIC.2006.18
   OASIS Consortium, 2004, UDDI VERS 3 IN PRESS
   Papazoglou M. P., 2006, International Journal of Web Engineering and Technology, V2, P412, DOI 10.1504/IJWET.2006.010423
   Pasley J, 2006, IEEE INTERNET COMPUT, V10, P72, DOI 10.1109/MIC.2006.45
   Pautasso Cesare., 2008, WWW 08, P805
   Peiris C, 2007, INTRO SERVICE ORIENT, P3
   Perera S, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P833
   Ramollari E., 2007, The 2nd European Young Researchers Workshop on Service Oriented Computing, P75
   Rodriguez J, 2011, INTERNET COMPUTING, P99, DOI 10.1109/MIC.2011.162
   Rodriguez J, 2010, IFIP ADV INFORM COMM, V341
   Stroulia E, 2005, INT J COOP INF SYST, V14, P407, DOI 10.1142/S0218843005001213
   The Eclipse Foundation, 2010, ECL JAV DEV TOOLS JD
   W3C Consortium, 2009, XML SCHEM D IN PRESS
   W3C Consortium, 2007, SOAP VERS 1 2 1
   Walls Craig., 2005, SPRING ACTION
   YOURDON E, 1979, STRUCTURED DESIGN FU
NR 52
TC 32
Z9 33
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2013
VL 43
IS 6
BP 613
EP 639
DI 10.1002/spe.2123
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 140MD
UT WOS:000318657300001
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Pérez-Castillo, R
   de Guzmán, IGR
   Piattini, M
   Places, AS
AF Perez-Castillo, Ricardo
   Garcia-Rodriguez de Guzman, Ignacio
   Piattini, Mario
   Places, Angeles S.
TI A case study on business process recovery using an e-government system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business process mining; legacy system; ADM; model transformation; case
   study
AB Business processes have become one of the key assets of organization, since these processes allow them to discover and control what occurs in their environments, with information systems automating most of an organization's processes. Unfortunately, and as a result of uncontrolled maintenance, information systems age over time until it is necessary to replace them with new and modernized systems. However, while systems are aging, meaningful business knowledge that is not present in any of the organization's other assets gradually becomes embedded in them. The preservation of this knowledge through the recovery of the underlying business processes is, therefore, a critical problem. This paper provides, as a solution to the aforementioned problem, a model-driven procedure for recovering business processes from legacy information systems. The procedure proposes a set of models at different abstraction levels, along with the model transformations between them. The paper also provides a supporting tool, which facilitates its adoption. Moreover, a real-life case study concerning an e-government system applies the proposed recovery procedure to validate its effectiveness and efficiency. The case study was carried out by following a formal protocol to improve its rigor and replicability. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Perez-Castillo, Ricardo; Garcia-Rodriguez de Guzman, Ignacio; Piattini, Mario] Univ Castilla La Mancha, Alarcos Res Grp, E-13071 Ciudad Real, Spain.
   [Places, Angeles S.] Univ A Coruna, Database Lab, Fac Informat, La Coruna 15071, Spain.
C3 Universidad de Castilla-La Mancha; Universidade da Coruna
RP Pérez-Castillo, R (corresponding author), Univ Castilla La Mancha, Alarcos Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM ricardo.pdelcastillo@uclm.es
RI Places, Ángeles Saavedra/E-8860-2015; de Guzmán, Ignacio
   García-Rodríguez/N-4489-2014; Pérez-Castillo, Ricardo/A-3033-2011;
   Piattini, Mario/F-6271-2013
OI de Guzmán, Ignacio García-Rodríguez/0000-0002-0038-0942; Pérez-Castillo,
   Ricardo/0000-0002-9271-3184; Piattini, Mario/0000-0002-7212-8279;
   Saavedra Places, Angeles/0000-0001-8539-304X
FU FPU; JCCM: ALTAMIRA [PII2I09-0106-2463]; INGENIO [PAC08-0154-9262];
   PRALIN [PAC08-0121-1374]; PEGASO/MAGO [TIN2009-13718-C02-01]; MICINN;
   FEDER
FX This work was supported by the FPU Spanish Program; by the R+D projects
   funded by JCCM: ALTAMIRA (PII2I09-0106-2463), INGENIO (PAC08-0154-9262)
   and PRALIN (PAC08-0121-1374), and the PEGASO/MAGO project
   (TIN2009-13718-C02-01) funded by MICINN and FEDER.
CR Brereton Pearl., 2008, Proceedings of the 12th International Conference on Evaluation and Assessment in Software Engineering, P41
   Cai ZG, 2009, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2009.5306291
   Canfora G., 2007, FUTURE SOFTWARE ENG
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Daga A, 2005, P P 38 ANN HAW INT C, V8, P2241
   Davis Jesse, 2006, P 23 INT C MACH LEAR, P233, DOI [DOI 10.1145/1143844.1143874, 10.1145/1143844.1143874]
   Di Francescomarino C, 2009, EUR CON SFTWR MTNCE, P139, DOI 10.1109/CSMR.2009.26
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Garcia VC, 2006, LECT NOTES COMPUT SC, V4063, P82
   Garcia-Rodriguez de Guzman I, 2009, 24 ANN ACM S APPL CO, P2126
   Ghose Aditya, 2007, 2007 IEEE Congress on Services, P167, DOI 10.1109/SERVICES.2007.52
   Günther CW, 2006, LECT NOTES COMPUT SC, V4103, P81
   ikv++, 2008, IKV MED QVT IKV TECH
   Ingvaldsen JE, 2008, LECT NOTES COMPUT SC, V4928, P30
   ISO/IEC, 2006, 147642006 IEOIEC
   *ISO IEC, 2009, 19506 ISOIEC DIS, P302
   Jeston J., 2008, BUSINESS PROCESS MAN, P469
   KAZMAN R, 1998, P WORK C REV ENG WCR
   Khusidman V, 2007, ARCHITECTUR IN PRESS, P7
   Koskinen J, 2004, ESTIMATION BUSINESS
   LEHMAN MM, 1984, INFORM PROCESS MANAG, V20, P19, DOI 10.1016/0306-4573(84)90037-2
   Lewis GA, 2010, RES AGENDA SERVICE O, P40
   Lucrédio D, 2008, LECT NOTES COMPUT SC, V5301, P296, DOI 10.1007/978-3-540-87875-9_22
   Miller J, 2003, MDA GUIDE VERSION 1, P62
   Moyer B, 2009, EMBEDDED TECHNOLOGY
   Muller HA, 2000, P C FUT SOFTW ENG
   NEWCOMB P, 2005, P 12 WORK C REV ENG
   OMG, 2009, ARCH DRIV MOD STAND
   OMG, 2009, ARCH DRIV MOD ADM KN, P308
   OMG, 2008, ARCHITECTURE DRIVEN, P310
   OMG, 2003, WHY DO WE NEED STAND
   OMG, 2009, BUS PROC MOD NOT BPM, P496
   OMG, 2008, MET OBJ FAC MOF 2 0
   *OMG, 2007, XML MET INT MOF 2 0
   Open Source Initiative, 2009, JAVACC 4 2 PARS SCAN
   Paradauskas B., 2006, Information Technology and Control, V35, P214
   Perez- Castillo R, 2009, INT WORKSH REV ENG M, P17
   Perez-Castillo R, 2010, 25 ANN ACM S APPL CO, P165
   Pérez-Castillo R, 2010, LECT NOTES COMPUT SC, V6142, P168, DOI 10.1007/978-3-642-13688-7_12
   Pradel M, 2010, PROC IEEE INT CONF S
   Sneed HM, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P111
   van der Aalst WMP, 2007, INFORM SYST, V32, P713, DOI 10.1016/j.is.2006.05.003
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Visaggio G, 2001, J SOFTW MAINT EVOL-R, V13, P281, DOI 10.1002/smr.234
   W-JVD Heuvel, 2006, ALIGNING MODERN BUSI
   WANG X, 2004, P 8 EUR WORK C SOFTW
   Weske M., 2007, Business Process Management: Concepts, Languages, Architectures, P368
   Wohlin C, 2000, EXPT SOFTWARE ENG IN, P204
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
   Yin RK, 2003, DESIGN METHODS
   Zdun U, 2007, ACM T WEB, V1, DOI 10.1145/1281480.1281484
   Zhao LP, 2008, J SYST SOFTWARE, V81, P1272, DOI 10.1016/j.jss.2007.11.717
   Zou Y, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P224
NR 54
TC 6
Z9 6
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2012
VL 42
IS 2
BP 159
EP 189
DI 10.1002/spe.1057
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 880OQ
UT WOS:000299417200002
DA 2024-07-18
ER

PT J
AU Yang, XH
   Zhao, LP
   Wang, XY
   Wang, Y
   Sun, J
   Cristoforo, AJ
AF Yang, Xiaohu
   Zhao, Liping
   Wang, Xinyu
   Wang, Ye
   Sun, Jie
   Cristoforo, Albert Jerry
TI Satisfying quality requirements in the design of a partition-based,
   distributed stock trading system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed systems; partition-based server clusters;
   quality-of-service; quality requirements; software design; static load
   distribution and dynamic load balancing strategies; stock trading
   systems
ID ALLOCATION; CLUSTER
AB Although quality requirements (QRs) have become a major drive in today's software development, there have been very few real-world examples in the literature that demonstrate how to meet these requirements. This paper presents such an example. Specifically, the paper describes the design of a partition-based distributed stock trading service system that satisfies a set of QRs related to resource utilization, performance, scalability and availability. The paper evaluates this design through detailed experiments and discusses some design alternatives and the lessons learned. Central to this design are a static load distribution strategy and a dynamic load balancing strategy. The first strategy is to achieve an initial balanced workload on the system's server cluster during the system initialization time, whereas the second strategy is to maintain this balanced workload throughout the system execution time. Together, these two strategies work in unison to ensure that the server resources are efficiently utilized; the user requests are processed with the required speed; the application is partitioned with sufficient room to scale; and the system is highly available. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Yang, Xiaohu; Wang, Xinyu; Wang, Ye; Sun, Jie] Zhejiang Univ, Coll Comp Sci, Hangzhou 310027, Zhejiang, Peoples R China.
   [Zhao, Liping] Univ Manchester, Sch Comp Sci, Manchester, Lancs, England.
   [Cristoforo, Albert Jerry] State St Corp, Boston, MA USA.
C3 Zhejiang University; University of Manchester
RP Wang, XY (corresponding author), Zhejiang Univ, Coll Comp Sci, Hangzhou 310027, Zhejiang, Peoples R China.
EM wangxinyu@zju.edu.cn
RI Zhang, xiaohui/KEE-5747-2024
OI Zhao, Liping/0000-0001-8556-8655
FU State Street Cooperation in U.S.A.; Fundamental Research Funds for the
   Central Universities; National 973 Fundamental Research and Development
   Program of China [2009CB320701]
FX We are indebted to our three anonymous reviewers for their thoughtful
   and detailed comments and suggestions. Our special thanks are due to the
   second reviewer who has helped us to improve the quality of the writing
   by providing us with an excellent commentary on this paper. We also
   thank the editor of the journal for giving us the opportunity to improve
   the paper. This work was jointly supported by the State Street
   Cooperation in U.S.A., by the Fundamental Research Funds for the Central
   Universities and by the National 973 Fundamental Research and
   Development Program of China under the Grant 2009CB320701.
CR Aleksy M, 2001, PDPTA'2001: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, P2140
   [Anonymous], JAVA2 PLATFORM
   APERS PMG, 1988, ACM T DATABASE SYST, V13, P263, DOI 10.1145/44498.45063
   Balasubramanian J, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P135
   Bharadwaj V., 2003, Cluster Computing, V6, P7, DOI 10.1023/A:1020958815308
   CERI S, 1987, P IEEE, V75, P533, DOI 10.1109/PROC.1987.13771
   Copeland G., 1988, SIGMOD Record, V17, P99, DOI 10.1145/971701.50213
   DATE C., 1990, INTRO DATABASE SYSTE
   Dutta K, 2007, IEEE T PARALL DISTR, V18, P1516, DOI 10.1109/TPDS.2007.1105
   García DF, 2009, IEEE T SERV COMPUT, V2, P3, DOI 10.1109/TSC.2009.3
   Gmach D, 2008, ACM T WEB, V2, DOI 10.1145/1326561.1326569
   Ho KS, 2000, DOA'00: INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS AND APPL ICATIONS, PROCEEDINGS, P49, DOI 10.1109/DOA.2000.874175
   HUA KA, 1990, VERY LARGE DATA BASES, P493
   Huang YF, 2001, J INF SCI ENG, V17, P491
   Jiang YC, 2009, IEEE T PARALL DISTR, V20, P641, DOI 10.1109/TPDS.2008.133
   Mehra A, 1997, IEEE T SOFTWARE ENG, V23, P616, DOI 10.1109/32.637145
   NAVATHE SB, 1989, SIGMOD REC, V18, P440, DOI 10.1145/66926.66966
   Othman O., 2001, IEEE DISTRIBUTED SYS, V2
   OTHMAN O, 2003, P 3 INT WORKSH SELF
   Othman O, 2003, P 3 INT WORKSH SELF, P205
   Qin X, 2010, IEEE T COMPUT, V59, P42, DOI 10.1109/TC.2009.108
   Runceanu A, 2008, INNOVATIONS AND ADVANCED TECHNIQUES IN SYSTEMS, COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P57, DOI 10.1007/978-1-4020-8735-6_12
   SACCA D, 1985, ACM T DATABASE SYST, V10, P29, DOI 10.1145/3148.3161
   Saito Y, 2000, ACM T COMPUT SYST, V18, P298, DOI 10.1145/354871.354875
   Shah R, 2007, IEEE T PARALL DISTR, V18, P1675, DOI 10.1109/TPDS.2007.1115
   Shankaran N, 2009, IEEE T COMPUT, V58, P1485, DOI 10.1109/TC.2009.44
   Viswanathan S, 2007, IEEE T PARALL DISTR, V18, P1450, DOI 10.1109/TPDS.2007.1073
   WebSphere Partition Facility (WPF), WEBSPHERE PARTITION
   Winckler A., 1993, Proceedings TENCON '93. 1993 IEEE Region 10 Conference on `Computer, Communication, Control and Power Engineering' (Cat. No.93CH3286-2), P169, DOI 10.1109/TENCON.1993.319955
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 30
TC 3
Z9 3
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2012
VL 42
IS 2
BP 131
EP 157
DI 10.1002/spe.1054
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 880OQ
UT WOS:000299417200001
OA Green Published
DA 2024-07-18
ER

PT J
AU Basanta-Val, P
   Garcia-Valls, M
   Estevez-Ayres, I
AF Basanta-Val, P.
   Garcia-Valls, M.
   Estevez-Ayres, I.
TI Non-functional information transmission patterns for distributed
   real-time Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 13th IEEE International Symposium on Object/Component/Service-Oriented
   Real-Time Distributed Computing (ISORC)
CY MAY 05-06, 2010
CL Carmona, SPAIN
SP IEEE
DE RTSJ; DRSTJ; RT-JRMP; RT-RMI
ID CLOCK SYNCHRONIZATION; PERFORMANCE
AB Many real-time systems use preemptive priority-based scheduling in their internals to guarantee certain real-time performance. This includes technologies that range from The Real-Time Specification for Java (RTSJ) to middleware like Real-Time Common Object Request Broker Architecture (RT-CORBA), which offers additional models and policies that blend client and server information. This decision eases the integration of real-time admission tests and dispatching policies in these types of infrastructures. In this paper, we analyze different trade-offs that emerge from the definition of different propagation models for distributed real-time Java. The paper covers technological integration aspects as impact on interfaces and other practical issues mainly related to the performance that this model offers to a real-time application and non-functional overhead. The contribution described in the paper may help in the development of The Distributed Specification for Java (DRTSJ). Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Basanta-Val, P.; Garcia-Valls, M.; Estevez-Ayres, I.] Univ Carlos III Madrid, DREQUIEM Lab, Madrid, Spain.
C3 Universidad Carlos III de Madrid
RP Basanta-Val, P (corresponding author), Univ Carlos III Madrid, DREQUIEM Lab, Madrid, Spain.
EM pbasanta@it.uc3m.es
RI Garcia-Valls, Marisol/D-6064-2013; Estevez-Ayres, Iria/G-4730-2011;
   Basanta-Val, Pablo/F-6863-2016
OI Garcia-Valls, Marisol/0000-0003-2383-5310; Estevez-Ayres,
   Iria/0000-0002-1047-5398; Basanta-Val, Pablo/0000-0002-0522-9010
CR Anderson J. S., 2006, P 4 INT WORKSH JAV T, P3
   Basanta-Val P, 2005, ISORC 2005: EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P382
   Basanta-Val P, 2004, LECT NOTES COMPUT SC, V3292, P359
   Basanta-Val Pablo, 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P2341, DOI 10.1109/CIT.2010.403
   Basanta-Val P., 2010, Proceedings of the 2010 13th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC 2010). Volume I: Main Symposium, P225, DOI 10.1109/ISORC.2010.28
   Basanta-Val P, 2009, IEEE LAT AM T, V7, P107, DOI 10.1109/TLA.2009.5173472
   Basanta-Val P., 2012, DISTRIBUTED EMBEDDED
   Basanta-Val P, 2011, CONCURR COMP-PRACT E, V23, P1236, DOI 10.1002/cpe.1701
   Basanta-Val P, 2010, IEEE T PARALL DISTR, V21, P506, DOI 10.1109/TPDS.2009.95
   BASANTAVAL P, 2007, P 13 IEEE REAL TIM E, P123
   BASANTAVAL P, 2010, 16 IEEE REA IN PRESS, P66
   BASANTAVAL P, 2005, SIGBED REV, V2, P7
   BASANTAVAL P, CONCURR COMP-PRACT E, DOI DOI 10.1002/CPE.1561
   BASANTAVAL P, THESIS, P1
   BASANTAVAL P, 2006, P 4 INT WORKSH JAV T, P30
   BASANTAVAL P, 2010, EM TECN FACT AUT ETF, P1
   BASANTAVAL P, 2011, 11 IEEE C CONS EL LA, P747
   BLANQUER J, 1999, P 1 FREEBSD C BERK C
   Bollella G, 2005, ISORC 2005: EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P45
   Bollella G, 2000, COMPUTER, V33, P47, DOI 10.1109/2.846318
   Borg A., 2003, Proceedings 15th Euromicro Conference on Real-Time Systems. ECRTS 2003, P238
   BURNS A, 1995, IEEE T SOFTWARE ENG, V21, P475, DOI 10.1109/32.387477
   CHECCONI F, 2009, OSPERT 2009 DUBL IR
   Corsaro A, 2001, DOA'01: 3RD INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS & APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/DOA.2001.954094
   Cucinotta T, 2009, IEEE T IND INFORM, V5, P267, DOI 10.1109/TII.2009.2027013
   DAWSON MH, 2008, P 2008 11 IEEE S OBJ, P241
   Estévez-Ayres I, 2009, IEEE T IND INFORM, V5, P278, DOI 10.1109/TII.2009.2026422
   ESTEVEZAYRES I, 2011, CONCURRENCY IN PRESS
   Fan JS, 2008, PROCEEDINGS OF 2008 INTERNATIONAL CONFERENCE ON CONSTRUCTION & REAL ESTATE MANAGEMENT, VOLS 1 AND 2, P582
   Ferreira J, 2002, IEEE MICRO, V22, P46, DOI 10.1109/MM.2002.1028475
   Valls MG, 2009, 2009 INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS: WAINA, VOLS 1 AND 2, P494, DOI 10.1109/WAINA.2009.93
   GARCIAVALLS M, 2010, 10 IEEE INT C COMP I, P1987
   GARCIAVALLS M, 2010, EMB WORLD C NUR GERM
   GARCIAVALLS MG, 2009, P 2009 INT C EMB SOF
   Gill CD, 2001, REAL-TIME SYST, V20, P117, DOI 10.1023/A:1008137720322
   GOPALAN K, 2007, P WORKSH OP SYST PLA
   Hernández-Orallo E, 2009, J PARALLEL DISTR COM, V69, P482, DOI 10.1016/j.jpdc.2009.01.008
   Higuera-Toledano MT, 2005, CONCURR COMP-PRACT E, V17, P715, DOI 10.1002/cpe.845
   KRISHNAMURTHY A, 2004, P 10 IEEE REAL TIM E, P121
   LAKSHMANAN K, 2008, REAL TIM EMB TECHN A, P195
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Loques O., 2004, J BRAZ COMPUT SOC, V10, P5, DOI DOI 10.1007/BF03192350
   Park JK, 2008, LECT NOTES COMPUT SC, V5275, P91, DOI 10.1007/978-3-540-87357-0_8
   Raman K, 2005, LECT NOTES COMPUT SC, V3790, P225
   RAMANATHAN P, 1990, COMPUTER, V23, P33, DOI 10.1109/2.58235
   SANGIG R, 2004, THESIS TX
   Schmidt DC, 2001, REAL-TIME SYST, V21, P77, DOI 10.1023/A:1011195304563
   Schmidt DC, 2000, COMPUTER, V33, P56, DOI 10.1109/2.846319
   Schoeberl M, 2010, SOFTWARE PRACT EXPER, V40, P507, DOI 10.1002/spe.968
   Sha L, 2004, REAL-TIME SYST, V28, P101, DOI 10.1023/B:TIME.0000045315.61234.1e
   Sun Microsystems, 2004, JAV REM METH INV RMI
   Tejera D, 2005, ISORC 2005: EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P390
   *TIMESYS, JTIME
   Val PB, 2009, IEEE T IND INFORM, V5, P289, DOI 10.1109/TII.2009.2026271
   VALLS MG, 2002, P 3 INT C SOFTW ENG, P36
   Wellings A, 2002, ISORC 2002: FIFTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P13, DOI 10.1109/ISORC.2002.1003655
   Wellings AJ, 2008, P 6 INT WORKSH JAV T, P3
   FRSH FORB
NR 58
TC 7
Z9 7
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2011
VL 41
IS 12
SI SI
BP 1409
EP 1435
DI 10.1002/spe.1084
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 842NP
UT WOS:000296606500003
DA 2024-07-18
ER

PT J
AU Jeffrey, D
   Wang, Y
   Tian, C
   Gupta, R
AF Jeffrey, Dennis
   Wang, Yan
   Tian, Chen
   Gupta, Rajiv
TI Isolating bugs in multithreaded programs using execution suppression
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software debugging; multithreading bugs; data races; atomicity
   violations; order violations; memory bugs; execution suppression; memory
   corruption propagation
AB Memory-related program failures in multithreaded programs can be caused by a variety of bugs. Concurrency bugs can occur due to unexpected or incorrect thread interleavings during execution. Other kinds of memory bugs, such as buffer overflows and uninitialized reads, may also occur in multithreaded as well as single-threaded programs. Most prior techniques for isolating these bugs are specialized, addressing only one type of concurrency bug or certain types of other memory bugs. The memory corruption caused by these bugs can also undergo significant propagation during program execution. When a program failure finally occurs due to memory corruption, the true root cause of the failure may be effectively concealed as significant portions of memory may have become corrupted. We propose a general framework that can isolate the root cause of any failure in a multithreaded program that involves memory corruption and reveals at least a subset of this memory corruption. This includes three important types of concurrency bugs-data races, atomicity violations, and order violations-as well as other kinds of memory bugs. To account for propagation of memory corruption, our approach uses a dynamic technique called 'execution suppression' that iteratively reveals memory corruption in a failing execution to isolate the true root cause of the failure. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Jeffrey, Dennis; Wang, Yan; Tian, Chen; Gupta, Rajiv] Univ Calif Riverside, CSE Dept, Riverside, CA 92521 USA.
C3 University of California System; University of California Riverside
RP Jeffrey, D (corresponding author), Univ Calif Riverside, CSE Dept, Riverside, CA 92521 USA.
EM jeffreyd@cs.ucr.edu
OI Gupta, Rajiv/0000-0002-9348-3974
FU Direct For Computer & Info Scie & Enginr; Division Of Computer and
   Network Systems [0810906] Funding Source: National Science Foundation
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Agrawal H., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P348, DOI 10.1109/ICSM.1993.366927
   Altekar G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P193
   [Anonymous], 1991, P 1991 ACM IEEE C SU
   [Anonymous], 2008, ISSTA
   Berger ED, 2006, ACM SIGPLAN NOTICES, V41, P158, DOI 10.1145/1133981.1134000
   Christiaens M, 2001, USENIX ASSOCIATION PROCEEDINGS JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P105
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   DINNING A, 1991, SIGPLAN NOTICES, V26, P85, DOI 10.1145/127695.122767
   Edelstein O, 2002, IBM SYST J, V41, P111, DOI 10.1147/sj.411.0111
   Farzan A, 2009, LECT NOTES COMPUT SC, V5643, P248, DOI 10.1007/978-3-642-02658-4_21
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Flanagan C, 2008, SCI COMPUT PROGRAM, V71, P89, DOI 10.1016/j.scico.2007.12.001
   Gyimóthy T, 1999, LECT NOTES COMPUT SC, V1687, P303, DOI 10.1145/318774.319248
   Hastings Reed., 1992, WINTER USENIX C, P125
   Jeffrey D, 2008, PROC IEEE INT CONF S, P356, DOI 10.1109/ICSM.2008.4658084
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Krena Bohuslav., 2007, Proceedings of the 2007 ACM Workshop on Parallel and Distributed Systems: Testing and Debugging, PADTAD '07, P54
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Lu S, 2006, ACM SIGPLAN NOTICES, V41, P37, DOI 10.1145/1168918.1168864
   Lu Shan, 2005, P WORKSH EV SOFTW DE
   Lu Shan., 2007, P 6 JOINT M EUROPEAN, P533
   Lvin VB, 2008, ACM SIGPLAN NOTICES, V43, P115, DOI 10.1145/1353536.1346296
   Musuvathi M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P446, DOI 10.1145/1250734.1250785
   Narayanasamy S, 2005, CONF PROC INT SYMP C, P284, DOI 10.1109/ISCA.2005.16
   Narayanasamy S, 2007, INT C PROGR LANG DES, P22
   Necula GC, 2002, ACM SIGPLAN NOTICES, V37, P128, DOI 10.1145/565816.503286
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   NOVARK G, 2007, ACM SIGPLAN C PROGR, P1
   O'Callahan R., 2003, SIGPLAN Notices, V38, P166, DOI 10.1145/966049.781528
   Park C.-S., 2008, FSE, P135
   Park S, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P177
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Pattabiraman K, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P219, DOI 10.1145/1357010.1352616
   Rajamani S, 2009, ACM SIGPLAN NOTICES, V44, P181, DOI 10.1145/1508284.1508266
   Ratanaworabhan P, 2009, ACM SIGPLAN NOTICES, V44, P173, DOI 10.1145/1594835.1504202
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Ronsse M, 1999, ACM T COMPUT SYST, V17, P133, DOI 10.1145/312203.312214
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Sen K., 2007, P 22 IEEE ACM INT C, P323, DOI [DOI 10.1145/1321631.1321679, 10.1145/1321631.1321679]
   Sen K, 2008, ACM SIGPLAN NOTICES, V43, P11, DOI 10.1145/1379022.1375584
   Tallam S, 2008, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2008.4658058
   Tian C, 2009, SOFTWARE PRACT EXPER, V39, P947, DOI 10.1002/spe.922
   Tian Chen., 2008, Proceedings of the 2008 international Symposium on Software Testing and Analysis, P143, DOI DOI 10.1145/1390630.1390649
   Weeratunge D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P155
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Yang JF, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P131
   Yu J, 2009, CONF PROC INT SYMP C, P325, DOI 10.1145/1555815.1555796
   Yu Y., 2005, P 20 ACM S OP SYST P, P221
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang W, 2010, ACM SIGPLAN NOTICES, V45, P179, DOI 10.1145/1735971.1736041
   Zhang X, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1133981.1134002
   Zhou P, 2007, INT S HIGH PERF COMP, P121
NR 59
TC 1
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2011
VL 41
IS 11
BP 1259
EP 1288
DI 10.1002/spe.1040
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827RZ
UT WOS:000295446900005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Neira-Ayuso, P
   Gasca, RM
   Lefevre, L
AF Neira-Ayuso, Pablo
   Gasca, Rafael M.
   Lefevre, Laurent
TI Communicating between the kernel and user-space in Linux using Netlink
   sockets
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE kernel interfaces; netlink; Linux
AB When developing Linux kernel features, it is a good practice to expose the necessary details to user-space to enable extensibility. This allows the development of new features and sophisticated configurations from user-space. Generally, software developers have to face the task of looking for a good way to communicate between the kernel and user-space in Linux. This tutorial introduces you to Net link sockets, a flexible and extensible messaging system that provides communication between kernel and user-space. We provide the fundamental guidelines for practitioners who wish to develop Net link-based interfaces. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Neira-Ayuso, Pablo] Univ Seville, ETS Ingn Informat, Dept Comp Languages & Syst, QUIVIR Res Grp, E-41012 Seville, Spain.
   [Lefevre, Laurent] Univ Lyon, INRIA, RESO LIP Team, Lyon, France.
C3 University of Sevilla; Ecole Normale Superieure de Lyon (ENS de LYON);
   Inria
RP Neira-Ayuso, P (corresponding author), Univ Seville, ETS Ingn Informat, Dept Comp Languages & Syst, QUIVIR Res Grp, Avda Reina Mercedes S-N, E-41012 Seville, Spain.
EM pneira@us.es
RI M. Gasca, Rafael/F-5857-2015; Neira Ayuso, Pablo/T-6627-2017
OI M. Gasca, Rafael/0000-0003-2348-7424; Neira Ayuso,
   Pablo/0000-0002-4238-0385
FU Spanish Ministerio de Educacion e Innovacion [TIN2009-13714]
FX Contract/grant sponsor: Spanish Ministerio de Educacion e Innovacion;
   contract/grant number: TIN2009-13714
CR CORBET J, 2008, LINUX DEVICE DRIVERS
   DHANDAPANI G, 2009, NETLINK SOCKETS OVER
   GRAF T, 2009, LIBNL USER SPACE LIB
   HE KK, 2005, LINUX J
   HOCKIN T, 2009, ACPID ACPI EVENT DAE
   HORMAN N, 2009, UNDERSTANDING PROGRA
   *KAM PROJ, 2009, IPSEC TOOLS LIN 2 6
   KERNIGHAM BW, 1988, C PROGRAMMING LANGUA
   KROAHHARTMAN G, 2009, LINUX KERNEL INTERFA
   KUZNETSOV A, 2009, IPROUTE ADV ROUTING
   *LIN MAN PAG PROJ, 2009, NETL COMM KERN US
   *LIN MAN PAG PROJ, 2009, NETL MACR
   Love R., 2003, LINUX KERNEL DEV
   MOCHEL P, 2005, LIN S OTT CAN, V1, P313
   NEIRAAYUSO P, 2009, CONNTRACK TOOLS NETF
   NEIRAAYUSO P, 2010, NETLINK SOURCE CODE
   NEIRAAYUSO P, 2010, LIBMNL MINIMALISTIC
   *NETF COR, 2009, IPT FREE SOFTW FIR T
   *NETF COR, 2009, LIBN QUEUE
   *NETF COR, 2009, NETF PROJ FREE SOFTW
   NORDSTROM H, 2009, AODV UU AD HOC ON DE
   *OLSRD TEAM, 2009, OLSRD AD HOC WIR MES
   *QUAGG TEAM, 2009, QUAGG ROUT SOFTW SUI
   SALIM J, 2009, GENERIC NETLINK HOWT
   SALIM J, 2009, 3549 RFC
   SALIM J, 2004, NETLINK2 FORCES PROT
   Salzman, 2009, LINUX KERNEL MODULE
   Stevens R., 1998, UNIX NETWORK PROGRAM, V1
   TORVALDS L, 2009, LINUX KERNEL
NR 29
TC 25
Z9 35
U1 0
U2 12
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2010
VL 40
IS 9
BP 797
EP 810
DI 10.1002/spe.981
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 635WF
UT WOS:000280687400003
DA 2024-07-18
ER

PT J
AU Lee, H
   Jin, L
   Lee, K
   Demetriades, S
   Moeng, M
   Cho, S
AF Lee, Hyunjin
   Jin, Lei
   Lee, Kiyeon
   Demetriades, Socrates
   Moeng, Michael
   Cho, Sangyeun
TI Two-phase trace-driven simulation (TPTS): a fast multicore processor
   architecture simulation approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE trace-driven simulation, computer architecture; multicore processor,
   performance evaluation
AB Simulation is indispensable in computer architecture research Researchers increasingly resort to detailed architecture simulator to identify performance bottlenecks, analyze interactions among different hardware and software components, and measure the impact to new design ideas on the system performance However, the slow speed of conventional execution-driven architecture simulators is a serious impediment to obtaining desirable research productivity. This paper describes a novel fast multicore processor architecture simulation framework called Two-Phase Trace-driven Simulation (TPTS), which splits detailed timing simulation into a trace generation phase and a trace simulation phase Much of the simulation overhead caused by uninteresting architectural events in only incurred once during the cycle-accurate simulation-based trace generation phase and can be omitted in the repeated trace-driven simulations We report out experiences with tsim, and evident-driven multicore processor architecture simulator that models detailed memory hierarchy, interconnect, and coherence protocol based on the TPTS framework By applying aggressive event filtering, tsim achieves an impressive simulation speed of 146 millions of simulated instructions per second, when running 16-thread parallel applications Copyright (C) 2010 John Wiley & Sons, Ltd
C1 [Lee, Hyunjin; Jin, Lei; Lee, Kiyeon; Demetriades, Socrates; Moeng, Michael; Cho, Sangyeun] Univ Pittsburgh, Dept Comp Sci, Pittsburgh, PA 15260 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE); University
   of Pittsburgh
RP Cho, S (corresponding author), Univ Pittsburgh, Dept Comp Sci, Pittsburgh, PA 15260 USA.
FU ACM Desion Automation Conference (DAC)
FX This work was supported in part by the A Richard Newton Graduate
   Scholarship from the ACM Desion Automation Conference (DAC) 2008
CR AOARWAL A, 1990, P ACM SIGMETRICS C M, P48
   Austin T, 2002, COMPUTER, V35, P59, DOI 10.1109/2.982917
   BARNES L, 2007, PERFORMANCE
   BARR K, 2005, ANALYSIS, V1111, P66
   BLACK B, 1996, OCTOBER, P478
   CHAME J, 1993, P ACM SIGM MAY, P36
   Chang JC, 2006, CONF PROC INT SYMP C, P264, DOI 10.1145/1150019.1136509
   CHEN J, 2008, P INT C WORKSH DES A
   Chidester M., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P176, DOI 10.1145/643114.643116
   CHIOU S, 2007, MICRO, V1, P455
   Cho SY, 2008, IEEE MICRO, V28, P2, DOI 10.1109/MM.2008.39
   Cho SY, 2006, INT SYMP MICROARCH, P455
   CHUM ES, 2008, FEBRUARY, V11, P77
   DALLY I, 2007, INT S HIGH EPRF COMP, V13, P11111
   EKMAN NI, 2005, P INT S PERF AN SYST, P89
   FALC A, 2008, PERFORMANCE, V1, P22
   GOLDSCHMIDT S, 1993, PERFORMANCE
   GUO F, 2007, CHICAGO IL US DECEMB, V343, P3
   Iyer R., 2004, Proc. 18th Annual Int'l Conf. Supercomputing, P257
   KAPLIN SF, 2003, SIMULATION, V13, P1
   Karkhanis TS, 2004, CONF PROC INT SYMP C, P338
   Kim SB, 2004, 13TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURE AND COMPILATION TECHNIQUES, PROCEEDINGS, P111
   Kongetira P, 2005, IEEE MICRO, V25, P21, DOI 10.1109/MM.2005.35
   LEE K, 2009, ANALYSIS
   LILA D, 2000, XLEASTOING COMPUTER
   Lo JL, 1998, CONF PROC INT SYMP C, P39, DOI 10.1109/ISCA.1998.694761
   Magnusson PS, 2002, COMPUTER, V35, P50, DOI 10.1109/2.982916
   MONCHICRO A, 2008, P INT WORKSH DES ARC
   MUKHEYEE SS, 1997, P WORKSH PERF DAS
   NARTIN MMK, 2005, COMPUTER ARCHITECTUR
   Nesbit KJ, 2006, INT SYMP MICROARCH, P208
   PENRY D, 2006, FEBRUARV, V27
   PLAKAL M, 1998, P 10 ACM S PAR ALG A, P67
   SHERWOOD P, 2002, P INT C ARCH SUPP PR, P45
   Uhlig RA, 1997, ACM COMPUT SURV, V29, P128, DOI 10.1145/254180.254184
   VANGAL S, 2007, P IEE INT SOL STAT C, P99
   VEENSTRA JE, 1994, COMPUTER, V2, P1
   WANWH, 1990, COMPUTER, V1, P27
   WENISCH TRRE, 2006, SIMULATION, V11, P2
   WOO SC, 1995, SANTA MARGLIENTA LIG, V5, P24
   Wunderlich RE, 2003, CONF PROC INT SYMP C, P84, DOI 10.1109/ISCA.2003.1206991
   WUNDERLICH RE, 2004, P WORKSH DUPL DEC DE
   Yi JJ, 2006, COMPUTER, V39, P22, DOI 10.1109/MC.2006.404
   Zhang M, 2005, CONF PROC INT SYMP C, P336, DOI 10.1109/ISCA.2005.53
   PERFORMANCE, P20091
NR 45
TC 7
Z9 9
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2010
VL 40
IS 3
BP 239
EP 258
DI 10.1002/spe.956
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 562ES
UT WOS:000275033100003
DA 2024-07-18
ER

PT J
AU Allali, J
   Sagot, MF
AF Allali, Julien
   Sagot, Marie-France
TI A multiple layer model to compare RNA secondary structures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE graph layers; graph comparison; edit distance; RNA; secondary structure
ID DISTANCE; ALGORITHM; SHAPES; TREES
AB We formally introduce a new data structure, called MiGaL for 'Multiple Graph Layer', composed of various graphs linked together by relations of abstraction/refinement. The new structure is useful for representing information that can be described at different levels of abstraction, each level corresponding to a graph. We then propose an algorithm for comparing two MiGaLs. The algorithm performs a stepby-step comparison starting with the most 'abstract' level. The result of the comparison at a given step is communicated to the next step using a special colouring scheme. MiGaLs represent a very natural model for comparing RNA secondary structures that may be seen at different levels of detail, going from the sequence of nucleotides, single or paired with another to participate in a helix, to the network of multiple loops that is believed to represent the most conserved part of RNAs having similar function. We therefore show how one can use MiGaLs to very efficiently compare two RNAs of any size at different levels of detail. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Allali, Julien] Univ Bordeaux 1, LaBRI, ENSEIRB, UMR 5800, F-33405 Talence, France.
   [Allali, Julien] Univ Marne La Vallee, Inst Gaspard Monge, F-2 Marne La Vallee, France.
   [Sagot, Marie-France] Inria Rhone Alpes, Villeurbanne, France.
   [Sagot, Marie-France] Univ Lyon 1, Lab Biometrie & Biol Evolut, UMR 5558, CNRS, F-69622 Villeurbanne, France.
   [Sagot, Marie-France] Kings Coll London, London WC2R 2LS, England.
C3 Centre National de la Recherche Scientifique (CNRS); Universite de
   Bordeaux; Universite Gustave-Eiffel; ESIEE Paris; Centre National de la
   Recherche Scientifique (CNRS); CNRS - Institute of Ecology & Environment
   (INEE); VetAgro Sup; Universite Claude Bernard Lyon 1; University of
   London; King's College London
RP Allali, J (corresponding author), Univ Bordeaux 1, LaBRI, ENSEIRB, UMR 5800, 351 Cours Liberat, F-33405 Talence, France.
EM allali@labri.fr
OI /0000-0002-5933-9960
CR Allali J, 2005, IEEE ACM T COMPUT BI, V2, P3, DOI 10.1109/TCBB.2005.2
   BLIN G, 2003, RRIRIN0307 U NANT
   Brown JW, 1999, NUCLEIC ACIDS RES, V27, P314, DOI 10.1093/nar/27.1.314
   Cannone JJ, 2002, BMC BIOINFORMATICS, V3, DOI 10.1186/1471-2105-3-15
   Evans P. A., 1999, Combinatorial Pattern Matching. 10th Annual Symposium, CPM 99. Proceedings (Lecture Notes in Computer Science Vol.1645), P270
   FELSENSTEIN J, 2005, PHYLIP PHYLOGENCY IN
   FERNANDEZ JA, 1998, HIERARCHICAL GRAPH S, P656
   Fernández-Madrigal JA, 2002, IEEE T PATTERN ANAL, V24, P103, DOI 10.1109/34.982887
   Ferraro P, 2003, ALGORITHMICA, V36, P1, DOI 10.1007/s00453-002-1002-5
   FONTANA W, 1993, BIOPOLYMERS, V33, P1389, DOI 10.1002/bip.360330909
   Galindo C, 2004, IEEE T ROBOTIC AUTOM, V20, P677, DOI 10.1109/TRO.2004.829480
   Giegerich R, 2004, NUCLEIC ACIDS RES, V32, P4843, DOI 10.1093/nar/gkh779
   Godin C, 1998, J THEOR BIOL, V191, P1, DOI 10.1006/jtbi.1997.0561
   Höchsmann M, 2003, PROCEEDINGS OF THE 2003 IEEE BIOINFORMATICS CONFERENCE, P159, DOI 10.1109/CSB.2003.1227315
   Howe K, 2002, BIOINFORMATICS, V18, P1546, DOI 10.1093/bioinformatics/18.11.1546
   Jiang T., 1994, Proceedings of the 5th Annual Symposium on Combinatorial Pattern Matching, LNCS, 807, P75
   Klein PhilipN., 1998, Proceedings of the 6th Annual European Symposium on Algorithms, ESA '98, P91
   LIN GH, 2001, EDIT DISTANCE 2 RNA, P211
   Ouangraoua A, 2007, J DISCRET ALGORITHMS, V5, P23, DOI 10.1016/j.jda.2006.03.010
   Reeder J, 2005, BIOINFORMATICS, V21, P3516, DOI 10.1093/bioinformatics/bti577
   Remolina E, 1999, LECT NOTES COMPUT SC, V1661, P109
   SHAPIRO BA, 1988, COMPUT APPL BIOSCI, V4, P387
   TAI KC, 1979, J ACM, V26, P422, DOI 10.1145/322139.322143
   VIALETTE S, 2002, P 13 ANN S COMB PATT, P53
   ZHANG KZ, 1989, SIAM J COMPUT, V18, P1245, DOI 10.1137/0218082
   ZUKER M, 1984, B MATH BIOL, V46, P591, DOI 10.1016/S0092-8240(84)80062-2
NR 26
TC 10
Z9 12
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2008
VL 38
IS 8
BP 775
EP 792
DI 10.1002/spe.846
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 321YA
UT WOS:000257341200001
OA Green Published
DA 2024-07-18
ER

PT J
AU Mateos, C
   Zunino, A
   Campo, M
AF Mateos, Cristian
   Zunino, Alejandro
   Campo, Marcelo
TI A survey on approaches to gridification
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE grid computing; grid development; gridification tools
ID GRIDS; PERFORMANCE; PARALLEL; SYSTEMS; SERVICE
AB The Grid shows itself as a globally distributed computing environment, in which hardware and software resources are virtualized to transparently provide applications with vast capabilities. Just like the electrical power grid, the Grid aims at offering a powerful yet easy-to-use computing infrastructure to which applications can be easily 'plugged' and efficiently executed. Unfortunately, it is still very difficult to Grid-enable applications, since current tools force users to take into account many details when adapting applications to run on the Grid. In this paper, we survey some of the recent efforts in providing tools for easy gridification of applications and propose several taxonomies to identify approaches followed in the materialization of such tools. We conclude this paper by describing common features among the proposed approaches, and by pointing out open issues and future directions in the research and development of gridification methods. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Mateos, Cristian; Zunino, Alejandro; Campo, Marcelo] UNICEN, ISISTAN Res Inst, Buenos Aires, DF, Argentina.
   [Mateos, Cristian; Zunino, Alejandro; Campo, Marcelo] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Zunino, A (corresponding author), UNICEN, ISISTAN Res Inst, Campus Univ,Tandil B7001BBO, Buenos Aires, DF, Argentina.
EM azunino@exa.unicen.edu.ar
RI Zunino, Alejandro/W-2100-2017
OI Zunino, Alejandro/0000-0002-9537-3541; Mateos,
   Cristian/0000-0001-5761-1898; Campo, Marcelo/0000-0002-3555-835X
CR Allcock B, 2002, PARALLEL COMPUT, V28, P749, DOI 10.1016/S0167-8191(02)00094-7
   Allen G, 2005, P IEEE, V93, P534, DOI 10.1109/JPROC.2004.842755
   Allen G, 2003, INT J HIGH PERFORM C, V17, P449, DOI 10.1177/10943420030174008
   ALLIANCE G, 2007, JAVA COG KIT
   Alonso JM, 2006, CONCURR COMP-PRACT E, V18, P2021, DOI 10.1002/cpe.1052
   Anderson DP, 2002, COMMUN ACM, V45, P56, DOI 10.1145/581571.581573
   ARMSTRONG R, 1999, IEEE INT S HIGH PERF, P115
   ARNOLD A, 1996, JAVA PROGRAMMING LAN
   Atkinson M, 2005, CONCURR COMP-PRACT E, V17, P377, DOI 10.1002/cpe.936
   Baduel L, 2006, GRID COMPUTING: SOFTWARE ENVIRONMENTS AND TOOLS, P205, DOI 10.1007/1-84628-339-6_9
   Baker M, 2002, SOFTWARE PRACT EXPER, V32, P1437, DOI 10.1002/spe.488
   BAL H, 2003, GRID, V2, P463
   Berman F, 2003, IEEE T PARALL DISTR, V14, P369, DOI 10.1109/TPDS.2003.1195409
   *CERN, 2007, GRIDCARE PROJ
   Chetty M, 2002, COMPUT SCI ENG, V4, P61, DOI 10.1109/MCISE.2002.1014981
   Chien A, 2003, J PARALLEL DISTR COM, V63, P597, DOI 10.1016/S0743-7315(03)00006-6
   Codenie W, 1997, COMMUN ACM, V40, P71
   Delaitre T., 2005, J GRID COMPUT, V3, P75, DOI DOI 10.1007/S10723-005-9002-8
   Downing T., 1998, JAVA RMI REMOTE METH
   ENGLANDER R, 1997, DEV JAVA BEANS
   Ferreira JF, 2006, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P301
   Foster I, 2001, INT J HIGH PERFORM C, V15, P200, DOI 10.1177/109434200101500302
   Foster I, 2003, SCI AM, V288, P78, DOI 10.1038/scientificamerican0403-78
   Foster I, 2005, LECT NOTES COMPUT SC, V3779, P2
   Foster I., 2002, GRID Today, V1
   FOSTER I, 2003, GRID, V2, P37
   Foster I, 2003, GRID
   Gannon D, 2005, CLUSTER COMPUT, V8, P271, DOI 10.1007/s10586-005-4094-2
   Geist A., 1994, PVM: Parallel Virtual Machine
   GOODALE T, 2006, COMPUTATIONAL METHOD, V20, P7
   Goux JP, 2000, NINTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P43, DOI 10.1109/HPDC.2000.868633
   *GRIDS LAB, 2007, GRIDBUS PROJ
   HO Q, 2003, LECT NOTES COMPUTER, V3032, P83
   Ho QT, 2006, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P305
   Huedo E, 2004, SOFTWARE PRACT EXPER, V34, P631, DOI 10.1002/spe.584
   Huhns MN, 2005, IEEE INTERNET COMPUT, V9, P75, DOI 10.1109/MIC.2005.21
   Johnson R, 2005, COMPUTER, V38, P107, DOI 10.1109/MC.2005.22
   Johnson RE, 1997, COMMUN ACM, V40, P39, DOI 10.1145/262793.262799
   Jugravu A, 2005, FUTURE GENER COMP SY, V21, P239, DOI 10.1016/j.future.2004.09.030
   Kacsuk P., 2005, J GRID COMPUT, V3, P221, DOI [DOI 10.1007/S10723-005-9012-6, 10.1007/s10723-005-9012-6]
   Karonis NT, 2003, J PARALLEL DISTR COM, V63, P551, DOI 10.1016/S0743-7315(03)00002-9
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Kielmann T, 2006, FUTURE GENERATION GRIDS, P283, DOI 10.1007/978-0-387-29445-2_15
   Kolanzo PZ, 2003, LECT NOTES COMPUT SC, V2893, P73
   Kommineni J, 2005, LECT NOTES COMPUT SC, V3470, P961
   Krauter K, 2002, SOFTWARE PRACT EXPER, V32, P135, DOI 10.1002/spe.432
   LEVINE D, 2003, GRID, V2, P167
   Loewe L, 2007, SOFTWARE PRACT EXPER, V37, P1289, DOI 10.1002/spe.806
   MAIA PHM, 2006, P ACM S APPL COMP NE, P1569
   Mateos C, 2008, FUTURE GENER COMP SY, V24, P99, DOI 10.1016/j.future.2007.04.011
   NAKADA H, 2005, GRIDRPC MODEL API EN
   Natrajan A, 2002, FUTURE GENER COMP SY, V18, P1033, DOI 10.1016/S0167-739X(02)00083-3
   Neary MO, 2005, CONCURR COMP-PRACT E, V17, P797, DOI 10.1002/cpe.855
   *OASIS CONS, 2007, UDD VERS 3 0 2 UDDI
   *OASIS CONS, WEB SERV RES FRAM WS
   *OGSA WG, 2007, DEF GRID ROADM OGSA
   Pope A.L., 1998, CORBA REFERENCE GUID
   Sarmenta LFG, 1999, FUTURE GENER COMP SY, V15, P675, DOI 10.1016/S0167-739X(99)00018-7
   Stockinger H, 2007, J SUPERCOMPUT, V42, P3, DOI 10.1007/s11227-006-0037-9
   *SUN MICR, 2007, SUN GRID ENG 6
   TAKEMIYA H, 2003, J GRID COMPUT, V1, P117
   TAYLOR IJ, 2005, COMPUTER COMMUNICATI
   Thain D., 2003, GRID COMPUTING, P299
   Vadhiyar SS, 2005, CONCURR COMP-PRACT E, V17, P235, DOI 10.1002/cpe.927
   van Nieuwpoort RV, 2005, CONCURR COMP-PRACT E, V17, P1079, DOI 10.1002/cpe.860
   Vann RD, 2005, HIGH ALT MED BIOL, V6, P32, DOI 10.1089/ham.2005.6.32
   Vaughan-Nichols SJ, 2002, COMPUTER, V35, P18, DOI 10.1109/2.982908
   VENUGOPAL S, 2006, ACM COMPUT SURV, V38, P1
   *W3C CONS, 2007, WEB SERV DESCR LANG
   *W3C CONS, 2007, SOAP VERS 1 2 PART 0
   Walker DW, 1996, SUPERCOMPUTER, V12, P56
   Wang B, 2004, LECT NOTES COMPUT SC, V3251, P404
   WEBB D, 2003, LECT NOTES COMPUTER, V2659
   Wolski R, 1999, FUTURE GENER COMP SY, V15, P757, DOI 10.1016/S0167-739X(99)00025-4
NR 75
TC 18
Z9 19
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2008
VL 38
IS 5
BP 523
EP 556
DI 10.1002/spe.847
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 289YR
UT WOS:000255090300005
DA 2024-07-18
ER

PT J
AU Liddell, M
   Moffat, A
AF Liddell, Mike
   Moffat, Alistair
TI Decoding prefix codes
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Huffmann code; minimum-redundancy code; prefix code; canonical code;
   table-based decoding
ID HUFFMAN CODES; EFFICIENT; COMPRESSION; TEXT; IMPLEMENTATION
AB Minimum-redundancy prefix codes have been a mainstay of research and commercial compression systems since their discovery by David Huffman more than 50 years ago. In this experimental evaluation we compare techniques for decoding minimum-redundancy codes, and quantify the relative benefits of recently developed restricted codes that are designed to accelerate the decoding process. We find that table-based decoding techniques offer fast operation, provided that the size of the table is kept relatively small, and that approximate coding techniques can offer higher decoding rates than Huffman codes with varying degrees of loss of compression effectiveness. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Moffat, A (corresponding author), Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
EM alistair@csse.unimelb.edu.au
OI Moffat, Alistair/0000-0002-6638-0232
CR Anh VN, 2005, INFORM RETRIEVAL, V8, P151, DOI 10.1023/B:INRT.0000048490.99518.5c
   [Anonymous], 2002, Compression and Coding Algorithms
   BASSIOUNI MA, 1995, J AM SOC INFORM SCI, V46, P1, DOI 10.1002/(SICI)1097-4571(199501)46:1<1::AID-ASI1>3.0.CO;2-U
   Brisaboa NR, 2003, LECT NOTES COMPUT SC, V2857, P122
   Burrows M., 1994, BLOCK SORTING LOSSLE
   Chen D, 2003, IEEE DATA COMPR CONF, P372
   Choueka Y., 1985, Proc. of the 8th ACM-SIGIR Conference, P122
   CONNELL JB, 1973, P IEEE, V61, P1046, DOI 10.1109/PROC.1973.9200
   Culpepper JS, 2005, LECT NOTES COMPUT SC, V3772, P1
   de Moura ES, 2000, ACM T INFORM SYST, V18, P113, DOI 10.1145/348751.348754
   HARMAN D, 1995, INFORM PROCESS MANAG, V31, P271, DOI 10.1016/0306-4573(94)00047-7
   Hashemian R, 2004, IEEE T COMMUN, V52, P6, DOI 10.1109/TCOMM.2003.822145
   HASHEMIAN R, 1995, IEEE T COMMUN, V43, P2576, DOI 10.1109/26.469442
   HIRSCHBERG DS, 1990, COMMUN ACM, V33, P449, DOI 10.1145/77556.77566
   HUFFMAN DA, 1952, P IRE, V40, P1098, DOI 10.1109/JRPROC.1952.273898
   IGNATCHENKO S, 1998, C C USERS J, V16, P63
   Klein ST, 2000, INFORM RETRIEVAL, V3, P7, DOI 10.1023/A:1009910017828
   LARMORE LL, 1990, J ACM, V37, P464, DOI 10.1145/79147.79150
   Larsson NJ, 2000, P IEEE, V88, P1722, DOI 10.1109/5.892708
   LIDDELL M, 2003, THESIS U MELBOURNE A
   Milidiú RL, 2003, IEEE DATA COMPR CONF, P438
   Moffat A, 1997, IEEE T COMMUN, V45, P1200, DOI 10.1109/26.634683
   Moffat A, 2005, INFORM PROCESS MANAG, V41, P1175, DOI 10.1016/j.ipm.2004.08.009
   NEKRITCH Y, 1999, 85209CS TR U BONN DE
   Scholer F., 2002, Proceedings of SIGIR 2002. Twenty-Fifth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P222
   SCHWARTZ ES, 1964, COMMUN ACM, V7, P166, DOI 10.1145/363958.363991
   SIEMINSKI A, 1988, INFORM PROCESS LETT, V26, P237, DOI 10.1016/0020-0190(88)90146-9
   TANAKA H, 1987, IEEE T INFORM THEORY, V33, P154, DOI 10.1109/TIT.1987.1057265
   Turpin A, 1998, INFORM PROCESS LETT, V68, P1, DOI 10.1016/S0020-0190(98)00136-7
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   ZOBEL J, 1995, SOFTWARE PRACT EXPER, V25, P891, DOI 10.1002/spe.4380250804
NR 31
TC 9
Z9 10
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2006
VL 36
IS 15
BP 1687
EP 1710
DI 10.1002/spe.741
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 114XW
UT WOS:000242699900003
DA 2024-07-18
ER

PT J
AU Westermann, U
   Klas, W
AF Westermann, U.
   Klas, W.
TI PTDOM: a schema-aware XML database system for MPEG-7 media descriptions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XML; XML databases; XML schema; MPEG-7; MPEG-7 DDL; DOM; Typed DOM
ID MANAGEMENT
AB Current XML database systems largely neglect or make limited use of available schema definitions. But only with schema definitions at hand is it possible to ensure database consistency by document validation, to store, index, and access the content of elements and attribute values in an appropriately typed manner and not just as text, and to perform more sophisticated query optimizations. In this paper, we give an overview of our implementation of a schema-aware XML database system: the Persistent Typed Document Object Model (PTDOM). Originally developed for the management of MPEG-7 media descriptions in a database, the core of PTDOM is made up of a schema catalog capable of managing schema definitions written in MPEG-7 DDL, a superset of XML schema. PTDOM exploits the schema information maintained by this catalog in a variety of contexts: for document validation, for typed storage of elements and attribute values, for structural indexing of XML documents providing additional efficient access paths to document contents, and for optimized construction of query execution plans for XPath expressions. This along with its profound extensibility with new datatypes, user-defined functions, and value index structures makes PTDOM a flexible and effective database solution not only for the management of MPEG-7 media descriptions but also for the management of any kind of XML documents for which schema definitions exist. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Vienna, Dept Comp Sci & Business Informat, A-1090 Vienna, Austria.
C3 University of Vienna
RP Westermann, U (corresponding author), Univ Vienna, Dept Comp Sci & Business Informat, Liebiggasse 4-3-4, A-1090 Vienna, Austria.
EM westermann@acm.org
CR BELDEN E, 2003, ORACLE 10G DATA CART
   Biron P., 2001, W3C Recommendation
   BOAG S, 2005, W3C WORKING DRAFT
   Bohm K, 1998, P IEEE INT FORUM RES, P196, DOI 10.1109/ADL.1998.670397
   BOURRET R, 2005, XML DATABASE PRODUCT
   Bray T., 2000, W3C RECOMMENDATION
   CAREY MJ, 1994, P ACM SIGMOD INT C M, P383
   Chidlovskii B, 2000, IEEE ADVANCES IN DIGITAL LIBRARIES 2000, PROCEEDINGS, P89, DOI 10.1109/ADL.2000.848373
   CLARK J, 2001, 1593842001 ISOIEC JT
   CLARK J, 2001, 1593852001 ISOIEC JT
   CLARK J, 1999, W3C RECOMMENDATION V
   CLARK J, 2001, 1593832001 ISOIEC JT
   Clark James, 1999, W3C RECOMMENDATION
   Deutsch A, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P431, DOI 10.1145/304181.304220
   DIAO Y., 2004, P 30 INT C VERY LARG, P612
   DUCHESNE Y, 2001, OZONE DEV GUIDE
   *EXCELON CORP, 2000, JAV API US GUID
   EXCELON CORP, 2001, MAN DXE
   *EXCELON CORP, 2001, PSE PRO JAV API US G
   Fernandez M, 1998, PROC INT CONF DATA, P14, DOI 10.1109/ICDE.1998.655753
   FERNANDEZ M, 2005, W3C WORKING DRAFT
   Fiebig T, 2002, VLDB J, V11, P292, DOI 10.1007/s00778-002-0080-y
   FIEBIG T, 2000, P 3 INT WORKSH WEBDB, P125
   FRANKSTON C, 1998, UNPUB XML DATA REDUE
   Gardarin G, 1999, LECT NOTES COMPUT SC, V1728, P506
   Goldman R, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P436
   Goldman R., 1999, P 2 INT WORKSHOP WEB, P25
   HUCK G, 1999, P WORKSH JAV DAT PER
   *IBM CORP, 2002, IBM DB2 UN DAT XML E
   *INF GMBH, 2005, INF DB US MAN PROGR
   *ISO IEC, 2001, 1593812001 ISOIEC JT
   *ISO IEC, 2001, 1593822001 ISOIEC JT
   *IXIASOFT INC, 2004, CREAT CLIENT APPL TE
   Jagadish HV, 2002, VLDB J, V11, P274, DOI 10.1007/s00778-002-0081-x
   JELLIFFE R, 1999, DRAFT TECHNICAL DOCU
   KANNE C, 1999, 899 U MANNH
   KEMPA M, 2000, A0021 U LUB SCHRIFT
   KOCH C, 2004, P 30 INT C VER LARG, P228
   Lee D, 2000, SIGMOD RECORD, V29, P76
   LEHORS A, 2000, W3C RECOMMENDATION V
   MALHOTRA A, 2005, W3C WORKING DRAFT
   Martínez JM, 2002, IEEE MULTIMEDIA, V9, P83, DOI 10.1109/MMUL.2002.1022862
   Martínez JM, 2002, IEEE MULTIMEDIA, V9, P78, DOI 10.1109/93.998074
   MEYER WM, 2005, XIST DEV GUID
   *MICR CORP, 2004, MICR SQL SERV 2000 S
   Milo T, 1999, LECT NOTES COMPUT SC, V1540, P277, DOI 10.1007/3-540-49257-7_18
   MURATA M, 1999, HEDGE AUTOMATA FORMA
   *OR CORP, 2003, OR XML DB DEV GUID
   Papakonstantinou Y, 2003, LECT NOTES COMPUT SC, V2572, P47
   POOLA L, 2001, TR200104 IND I SCI D
   PRESCOD P, 1998, DRAFT TECHNICAL DOCU
   REIS M, 2003, THESIS U VIENNA AUST
   *SAX LTD, 2005, SAX DOC
   SCHMIDT A, 2000, LECT NOTES COMPUTER, V1997, P137
   Segoufin L., 2002, PODS, P53, DOI DOI 10.1145/543613.543622
   Shanmugasundaram J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P302
   Shimura T., 1999, Database and Expert Systems Applications. 10th International Conference, DEXA'99 (Lecture Notes in Computer Science Vol.1677), P206
   *SOFTW AG, 2004, TAM XML SCHEM US GUI
   *SOFTW AG, 2004, TAM XML SERV DOC
   *SOFTW AG, 2001, TAM X QUER
   STAKEN K, 2001, DBXML DEV GUIDE 5 0
   Steele Jr Guy L., 1990, COMMON LISP LANGUAGE
   THOMPSON HS, 2001, W3C RECOMMENDATION
   Tian F, 2002, SIGMOD RECORD, V31, P5, DOI 10.1145/507338.507341
   VINER D, 2003, XINDICE DEV GUIDE 1
   Westermann U, 2003, ACM COMPUT SURV, V35, P331, DOI 10.1145/954339.954340
   WESTERMANN U, 2005, IN PRESS MULTIMEDIA
   WESTERMANN U, 2003, TR2003301 U VIEN DEP
   WOOD PT, 1999, P 2 ACM CIKM INT WOR, P28
   *X HIV CORP, 2004, X HIV DB 6 1 MAN
   *XML GLOB TECHN IN, 2001, GOXML DB ADM HELP
NR 71
TC 5
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2006
VL 36
IS 8
BP 785
EP 834
DI 10.1002/spe.717
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056TK
UT WOS:000238547800001
DA 2024-07-18
ER

PT J
AU Ghosh, S
   France, RB
   Simmonds, DM
   Bare, A
   Kamalakar, B
   Shankar, RP
   Tandon, G
   Vile, P
   Yin, SX
AF Ghosh, S
   France, RB
   Simmonds, DM
   Bare, A
   Kamalakar, B
   Shankar, RP
   Tandon, G
   Vile, P
   Yin, SX
TI A middleware-transparent approach to developing distributed applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE aspect-oriented programming; distributed applications; Java RMI; Jini;
   middleware technologies; SOAP-RPC; .Net
AB An innovative middleware-transparent approach to developing distributed applications is presented. The approach uses an aspect-oriented software development technique to separate an application's middleware-independent functionality from its middleware-specific functionality. Application elements that are specific to the middleware are localized in aspects that can be seamlessly integrated into middleware-independent application designs. The middleware-transparent approach is used to decouple business functionality from middleware-specific functionality. The decoupling allows developers to change middleware application elements without significantly modifying business functionality. Middleware technologies such as Java Remote Method Invocation (RMI), Jini, Simple Object Access Protocol (SOAP) remote procedure call (RPC) and Net are used as examples to illustrate the approach. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
C3 Colorado State University
RP Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
EM ghosh@cs.colostate.edu
RI Ghosh, Sudipto/ABI-4888-2020; Bare, Abhijit/AAO-1011-2020
CR [Anonymous], JTB JAVA TREE BUILDE
   Bergmans L, 2001, COMMUN ACM, V44, P51, DOI 10.1145/383845.383857
   BUSSARD L, 2000, P ECOOP 2000 WORKSH
   CLARKE S, 1998, P ASP OR PROGR WORKS
   CLARKE S, 1999, LECT NOTES COMPUTER, V1743
   *DOC GROUP, 2004, REAL TIM CCM CIAO
   Fiadeiro JL, 1999, LECT NOTES COMPUT SC, V1548, P293
   France R, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1231152
   FRANCE R, 2002, 02102 COL STAT U COM
   FRANCE RB, 2004, ASPECT ORIENTED REQU, V151, P173, DOI DOI 10.1049/IP-SEN:20040920
   FRANCE RB, 2003, PRACTICAL FDB BUSINE
   GEORG G, 2002, P INT C ENG COMP COM
   GEORG G, 2003, P 5 IFIP TC 11 WG 11
   GEORG G, 2002, P WORKSH CRIT SYST D
   GRAY J, 2002, COMMUN ACM, V44, P87
   HUNLETH F, 2001, OOPSLA WORKSHOP ADV
   KAMALAKAR B, 2004, THESIS COLORADO STAT
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   KIEBERHERR K, 2001, COMMUN ACM, V44, P39
   Kim DK, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P452, DOI 10.1109/CMPSAC.2003.1245379
   KIM DK, 2002, P 8 IEEE INT C ENG C
   *OBJ MAN GROUP, 2001, UN MOD LANG VERS 1 4
   *OMG, 2002, CORBAIIOP26 OMG
   Ossher H, 2001, COMMUN ACM, V44, P43, DOI 10.1145/383845.383856
   Pace JAD, 2001, COMMUN ACM, V44, P66
   Pichler R, 2003, SOFTWARE PRACT EXPER, V33, P957, DOI 10.1002/spe.534
   Rashid A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P199, DOI 10.1109/ICRE.2002.1048526
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   RASHID A, 2001, P 3 INT C MET LEV AR, V2192
   ROMAN M, 2004, UNIVERSALLY INTEROPE
   SILVA AR, 1999, OOPSLA 99 1 WORKSHOP
   Sullivan GT, 2001, COMMUN ACM, V44, P95, DOI 10.1145/383845.383865
   *SUN MICR, 2003, ENT JAV BEAN EJB
   SUZUKI J, 1999, LECT NOTES COMPUTER, V1743
   W3C, 2003, SIMPL OBJ ACC PROT S
   Waldo J, 2000, COMPUTER, V33, P107, DOI 10.1109/2.846324
NR 38
TC 3
Z9 4
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2005
VL 35
IS 12
BP 1131
EP 1154
DI 10.1002/spe.666
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 971NZ
UT WOS:000232392500002
DA 2024-07-18
ER

PT J
AU Davis, M
   Smith, R
   Dixon, B
   Parrish, A
   Cordes, D
AF Davis, M
   Smith, R
   Dixon, B
   Parrish, A
   Cordes, D
TI Utilizing commodity hardware and software to distribute a real-world
   application: maximizing reuse while improving performance
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE parallel computing; commodity components; performance analysis
AB Commodity computing hardware continues to increase performance while decreasing price. This combination is driving a renewed interest in parallel and distributed computing. In this study, we examine the performance of an existing application in a ten-node computing cluster using commodity off-the-shelf components. The application is a statistical analysis software package that processes categorical data used by state public safety programs. The study examines various network topologies and focuses on minimizing the software modifications required to distribute the application. We conclude that parallel computing using commodity components is an effective mechanism to increase the performance of real-world applications especially when the underlying application architectures have the flexibility to support efficient reuse of the existing code. Copyright (C) 2005 John Wiley & Sons, Ltd.
C1 Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa
RP Smith, R (corresponding author), Univ Alabama, Dept Comp Sci, Box 870290, Tuscaloosa, AL 35487 USA.
EM rsmith@cs.ua.edu
RI Smith, Randy K/HOH-4597-2023
CR Deng YF, 2001, PARALLEL COMPUT, V27, P91, DOI 10.1016/S0167-8191(00)00090-9
   HINEMAN G, 2001, COMPONENT BASED SOFT
   MERKEY P, 2003, BEOWULF HIST
   ONeil P., 2001, DATABASE PRINCIPLES, V2nd
   Parrish A, 2005, DECIS SUPPORT SYST, V38, P621, DOI 10.1016/j.dss.2003.09.005
   PARRISH A, 2003, IEEE COMPUTER MAGAZI, P22
   *TOP500 ORG, 2003, TOP 500 SUP SIT
   WARREN MS, 1997, P INT C PAR DISTR PR, P1372
NR 8
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2005
VL 35
IS 7
BP 621
EP 641
DI 10.1002/spe.651
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 931VF
UT WOS:000229512900001
DA 2024-07-18
ER

PT J
AU Vivanco, RA
   Pizzi, NJ
AF Vivanco, RA
   Pizzi, NJ
TI Scientific computing with Java and C++: a case study using functional
   magnetic resonance neuroimages
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE scientific computing; object-oriented programming; functional magnetic
   resonance imaging; data analysis; Java; C plus
AB Modern systems for the analysis of image-based biomedical data, such as functional magnetic resonance imaging (fMRI), require fast computational techniques and rapid, robust development. Object-oriented programming languages such as Java and C++ provide the foundations for the development of complex data analysis applications. This case study explores the advantages and disadvantages of using these two programming environments for scientific computation as typified in the analysis of fMRI datasets. C++ is well suited for computational and memory optimization while Java is more compliant to the object-oriented paradigm, supports cross-platform development and has a rich set of application programming interface (API) classes. The same data model and algorithms were implemented in C++ and Java, and a user interface was developed with the Java API. Comparisons were made with respect to computational performance and ease of development. Benchmarks show that C++ generally outperforms Java, while Java is easier to use, leading to more robust code and shorter development times. However, with the advent of newer just-in-time compilers, Java performance is at times comparable to C++. The latest Java virtual machine technology is closing the gap and eventually Java should be a good compromise between efficient algorithm performance and effective application development. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Natl Res Council Canada, Inst Biodiagnost, Winnipeg, MB R3B 1Y6, Canada.
C3 National Research Council Canada
RP Natl Res Council Canada, Inst Biodiagnost, 435 Ellice Ave, Winnipeg, MB R3B 1Y6, Canada.
EM rodrigo.vivanco@nrc-cnrc.gc.ca
CR BANK D, 1995, WIRED
   BEZDEK JC, 1984, COMPUT GEOSCI, V10, P191, DOI 10.1016/0098-3004(84)90020-7
   BULL JM, 2001, JAVA GRANDE ISCOPE 0
   Cierniak M, 1997, CONCURRENCY-PRACT EX, V9, P427, DOI 10.1002/(SICI)1096-9128(199706)9:6<427::AID-CPE300>3.0.CO;2-K
   FANNING D, 1998, IDL PROGRAMMING TECH
   Gosling James, 1996, The Java Language Specification
   Gu W, 2000, IBM SYST J, V39, P135, DOI 10.1147/sj.391.0135
   HALFHILL T, 1998, BYTE, V5, P60
   HOLMEVIK JR, 1994, IEEE ANN HIST COMPUT, V16, P25, DOI 10.1109/85.329756
   Hyvärinen A, 2001, INDEPENDENT COMPONENT ANALYSIS: PRINCIPLES AND PRACTICE, P71
   Kazi IH, 2000, ACM COMPUT SURV, V32, P213, DOI 10.1145/367701.367714
   KERNIGHAM BW, 1988, C PROGRAMMING LANGUA
   Kolen JF, 2002, IEEE T FUZZY SYST, V10, P263, DOI 10.1109/91.995126
   MENDENHALL W, 1998, STAT ENG COMPUTING S
   MINGARDI P, 2002, PREPARING GENERICS I
   Moreira JE, 1998, IEEE ANTENNAS PROPAG, V40, P102, DOI 10.1109/74.736311
   PETER J, 2001, FUNCTIONAL MRI INTRO
   PHILIPPSEN M, 1998, P 2 EUR PAR DISTR SY, P1
   Phipps G, 1999, SOFTWARE PRACT EXPER, V29, P345, DOI 10.1002/(SICI)1097-024X(19990410)29:4<345::AID-SPE238>3.0.CO;2-C
   Prechelt L, 1999, COMMUN ACM, V42, P109, DOI 10.1145/317665.317683
   PRESS HW, 1997, NUMERICAL RECIPES C
   SIGMON K, 2001, MATLAB PRIMER
   Stroustrup B., 1997, The C++ Programming Language
   *SUN MICR INC, 2001, 15124341511 SUN MICR
   Tyma P, 1998, COMMUN ACM, V41, P38, DOI 10.1145/276609.276617
   Wilson S., 2000, JAVA PLATFORM PERFOR
   Wolfram S., 2003, The Mathematica Book
   YUASA T, 1998, CURRENT PROGR FUNCTI
NR 28
TC 11
Z9 12
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2005
VL 35
IS 3
BP 237
EP 254
DI 10.1002/spe.633
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902II
UT WOS:000227347800002
DA 2024-07-18
ER

PT J
AU Hohn, MH
AF Hohn, MH
TI A little language for modularizing numerical PDE solvers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE domain-specific language; code generation; pretty-printing; partial
   differential equations
AB This paper describes a concise specification language for linear partial differential equations (PDEs) on a union of rectangles, along with three tools: a pretty-printer, TEX generator, and a code generator. The pretty-printer and TEX generator help users by allowing equations to be specified (and read) in their natural form, while the code generator allows implementors to separate their numerical solver from the input equations, and greatly simplifies testing. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Utah, Dept Math, Salt Lake City, UT 84112 USA.
C3 Utah System of Higher Education; University of Utah
RP Hohn, MH (corresponding author), Univ Utah, Dept Math, Salt Lake City, UT 84112 USA.
EM hohn@math.utah.edu
CR Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   HOHN MH, 2001, THESIS U UTAH SALT L
   KAUFMAN L, 1990, 154 AT T BELL LAB
   LEROY X, 1997, OBJECTIVE CAML
   LEROY X, 1995, SYSTEME CAML SPECIAL
   Rice JR., 1985, Solving Elliptic Problems Using ELLPACK
   ROITZSCH R, 1993, KASKADE MANUAL
NR 7
TC 1
Z9 1
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2004
VL 34
IS 9
BP 797
EP 813
DI 10.1002/spe.592
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 836HU
UT WOS:000222547300001
DA 2024-07-18
ER

PT J
AU Huang, Y
   Lee, YH
AF Huang, Y
   Lee, YH
TI System and software designs for transaction processing in asymmetric
   communication environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Computer Communications and Networks
CY OCT 15-17, 2001
CL PHOENIX, AZ
SP Army Res Lab, IBM, Telcordia, Nokia, Avaya, IEEE Communicat Soc
DE data broadcast; asymmetric communication; concurrency control;
   transaction processing
AB Observing that it is impractical to use traditional methods to control concurrency in broadcast-based asymmetric communication environments, we introduce a concurrency control protocol designed for broadcast-based transaction processing called Server Timestamp and Update Broadcast Supported Concurrency (STUBcast). STUBcast supports two new correctness criteria proposed in this paper-Single Serializability and Local Serializability. These criteria are weaker than global serializability, but are practical and easier to achieve in broadcast environments. This article also discusses the software design for the simulation program and the protocol implementation. Simulation results collected using our simulation program suggest that STUBcast could be very efficient in realistic application environments. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Motorola Labs, Florida Commun Res Labs, Ft Lauderdale, FL 33322 USA.
   Arizona State Univ, Dept Comp Sci & Engn, Tempe, AZ 85287 USA.
C3 Legend Holdings; Lenovo; Arizona State University; Arizona State
   University-Tempe
RP Huang, Y (corresponding author), Motorola Labs, Florida Commun Res Labs, 8000 W Sunrise Blvd, Ft Lauderdale, FL 33322 USA.
EM yanhuang@motorola.com
CR Acharya Swarup., 1995, SIGMOD Conference, P199
   [Anonymous], CONCURRECY CONTROL R
   [Anonymous], P ACM SIGM C
   [Anonymous], THESIS
   BARBARA D, 1997, P IEEE ICDS C 1987
   Huang Y, 2001, PARALLEL AND DISTRIBUTED COMPUTING SYSTEMS, P130
   HUANG Y, 2002, P 1 IEEE ICCCAS C 20, P358
   LAM KY, 1999, P 2 IEEE WMCSA WORKS
   Lee V. C. S., 1999, Proceedings Sixth International Conference on Real-Time Computing Systems and Applications. RTCSA'99 (Cat. No.PR00306), P29, DOI 10.1109/RTCSA.1999.811190
   Ozsu M.T., 1991, PRINCIPLES DISTRIBUT
   Pitoura E, 1998, NINTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P428, DOI 10.1109/DEXA.1998.707435
   PITOURA E, 1999, P 19 IEEE ICDCS C 19
   SHANMUGASUNDARA. J, 1999, P ACM SIGMOD C 1999, P85
   VAIDYA N, 1997, P 3 ANN ACM IEEE INT, P90
   ZDONIK S, 1994, P WORKSH MOB COMP SY, P12
NR 15
TC 0
Z9 0
U1 0
U2 2
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2003
VL 33
IS 14
BP 1359
EP 1376
DI 10.1002/spe.552
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 741JJ
UT WOS:000186454700005
DA 2024-07-18
ER

PT J
AU Probets, SG
   Brailsford, DF
AF Probets, SG
   Brailsford, DF
TI Substituting outline fonts for bitmap fonts in archived PDF files
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE PDF; (L-A)TEX; bitmap fonts; outline fonts
AB As collections of archived digital documents continue to grow the maintenance of an archive, and the quality of reproduction from the archived format, become important long-term considerations. In particular, Adobe's portable document format (PDF) is now an important 'final form' standard for archiving and distributing electronic versions of technical documents. It is important that all embedded images in the PDF, and any fonts used for text rendering, should at the very minimum be easily readable on screen. Unfortunately, because PDF is based on PostScript technology, it allows the embedding of bitmap fonts in Adobe Type 3 format as well as higher-quality outline fonts in TrueType or Adobe Type 1 formats. Bitmap fonts do not generally perform well when they are scaled and rendered on low-resolution devices such as workstation screens.
   The work described here investigates how a plug-in to Adobe Acrobat enables bitmap fonts to be substituted by corresponding outline fonts using a checksum matching technique against a canonical set of bitmap fonts, as originally distributed. The target documents for our initial investigations are those PDF files produced by (LA)TEX systems when set up in a default (bitmap font) configuration. For all bitmap fonts where recognition exceeds a certain confidence threshold replacement fonts in Adobe Type 1 (outline) format can be substituted with consequent improvements in file size, screen display quality and rendering speed. The accuracy of font recognition is discussed together with the prospects of extending these methods to bitmap-font PDF files from sources other than (B)TEX. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Nottingham, Sch Comp Sci, Nottingham NG8 1BB, England.
C3 University of Nottingham
RP Brailsford, DF (corresponding author), Univ Nottingham, Sch Comp Sci, Jubilee Campus, Nottingham NG8 1BB, England.
CR *AD SYST INC, 1985, POSTSCR LANG TUT COO
   Adobe Systems Inc, 1990, AD TYP 1 FONT FORM
   [Anonymous], 1994, LaTeX: A Document Preparation System: User's Guide and Reference Manual
   Goossens M., 1997, The LaTeX Graphics Companion
   *ISO, ISO ARCH STAND
   KNUTH DE, 1982, TUGBOAT, V3, P14
   KNUTH DE, 1986, COMPUTERS TYPESETTIN, VA
   KNUTH DE, 1986, COMPUTERS TYPESETTIN, VC
   MALYSHEV B, BAKOMA FONTS
   ROKICKI T, 1993, DVIPS TEX DRIVER
   *Y Y, BLUE SKY TYP 1 CM FO
   TEX PDF SOLVING FONT
NR 12
TC 4
Z9 6
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2003
VL 33
IS 9
BP 885
EP 899
DI 10.1002/spe.532
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 706MA
UT WOS:000184456400004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Luk, RWP
   Yeung, DS
   Lu, Q
   Leung, HL
   Li, SY
   Leung, F
AF Luk, RWP
   Yeung, DS
   Lu, Q
   Leung, HL
   Li, SY
   Leung, F
TI ASAB: a Chinese screen reader
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE interface design; screen reader; graphical user interface;
   text-to-speech; visually-impaired; Chinese; ideographic languages
AB This paper describes the design and development of a computer interface for blind and visually-impaired users, who are native speakers of Cantonese (i.e. a Chinese dialect). Apart from enabling the interface to (1) produce Chinese voice output, (2) convert Chinese characters to Braille codes, (3) facilitate Chinese Braille input, and (4) operate in a Microsoft Chinese Windows environment, the significant aspects of this paper include the following: (1) the description of an integrated architecture, which can be used for other languages; (2) a general bilingual Braille input mechanism; (3) a sentence-based input method that can be used for contracted-Braille-to-text conversion with an error rate of about 6%, operating at about 700 characters/second using a Pentium 11300 MHz PC; (4) a code-mixed synthesis module for general bilingual and multilingual applications; (5) the potential to directly adopt the system for use with other ideographic languages (like Japanese and Korean), as well as agglutinating languages like Finnish and Turkish, which have no space between words. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
   Hong Kong Soc BLind, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University
RP Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
EM csrluk@comp.polyu.edu.hk
RI ; Luk, Robert/B-9382-2015
OI Lu, Qin/0000-0002-9092-2476; Luk, Robert/0000-0002-9310-8867
CR Adams F. R., 1989, P GLOB TEL C DALL TX, V2, P980
   *ALV ACC GROUP, 2001, OUTSPOKEN ENS 3 0 SC
   [Anonymous], 2001, UNDERSTANDING DIGITA
   Bauwens B., 1995, IEEE Transactions on Rehabilitation Engineering, V3, P84, DOI 10.1109/86.372897
   BLENKHORN P, 2000, IEE SEM SPEECH LANG, P1
   Bohlman E., 1992, Proceedings of the Johns Hopkins National Search for Computing Applications to Assist Persons with Disabilities (Cat. No.92TH0429-1), P191, DOI 10.1109/CAAPWD.1992.217421
   BOYD LH, 1990, J VISUAL IMPAIR BLIN, V84, P496
   DAI ST, 1994, COMMUNICATIONS COLIP, V4, P1
   FREDKIN E, 1960, COMMUN ACM, V3, P490, DOI 10.1145/367390.367400
   *FREED SCI, 2001, JAWS WIND QUICK STAR
   *GW MICR INC, 2001, WIND EYES 4 2 BET 2
   Huang X, 1997, INT CONF ACOUST SPEE, P959, DOI 10.1109/ICASSP.1997.596097
   *IBM JAP LTD, 2001, JAWS WIND IBM VERS S
   *JAV ACC TEAM, 1998, JAV ACC UT VERS 1 2
   Lazzaro JJ, 1999, IEEE SPECTRUM, V36, P54, DOI 10.1109/6.750401
   LIN YC, 1995, INT J COMPUTER PROCE, V9, P93
   LOCHOVSKY AF, 1997, COMMUNICATIONS COLIP, V7, P5
   LUK RWP, 1998, P 1998 S IM SPEECH S
   MAO YH, 1997, P 7 INT C COMP PROC, V2, P223
   MCCREIGHT EM, 1976, J ACM, V23, P262, DOI 10.1145/321941.321946
   POLL LHD, 1995, IEEE T REHABIL ENG, V3, P65, DOI 10.1109/86.372894
   POLL LHD, 1993, 943 I PERC RES
   PONG MC, 1992, SOFTWARE PRACT EXPER, V22, P809, DOI 10.1002/spe.4380221002
   SCHWERDTFEGER RS, 1991, BYTE, V16, P118
   Shinohara M, 1998, IEEE Trans Rehabil Eng, V6, P249, DOI 10.1109/86.712218
   VITERBI AJ, 1967, IEEE T INFORM THEORY, V13, P260, DOI 10.1109/TIT.1967.1054010
   *W3C, 2000, WEB ACC IN
   Watanabe T, 2000, ELECTRON COMM JPN 1, V83, P1, DOI 10.1002/(SICI)1520-6424(200009)83:9<1::AID-ECJA1>3.0.CO;2-Y
   WATANABE T, 1998, IEICE T, P137
   Way T P, 1997, IEEE Trans Rehabil Eng, V5, P81, DOI 10.1109/86.559353
NR 30
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2003
VL 33
IS 3
BP 201
EP 219
DI 10.1002/spe.497
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 655GD
UT WOS:000181542200001
DA 2024-07-18
ER

PT J
AU Nakano, B
   Matsumoto, T
   Hoshikawa, N
   Ito, T
   Shiraki, A
AF Nakano, Bunta
   Matsumoto, Takaki
   Hoshikawa, Naoto
   Ito, Tomoyoshi
   Shiraki, Atsushi
TI Development of a second-screen system for sharing virtual reality
   information
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE reuse; second-screen system; virtual reality
ID DESK-TOP
AB Since virtual reality technology can easily realize a particular environment, it has been applied to various training. This technology is also expected in education such as those dealing with three-dimensional figures because they can represent phenomena in three dimensions. One of the standard virtual reality technologies is wearing a head-mounted display to experience a virtual reality project. However, the virtual reality experience is limited to the person wearing the head-mounted display (in most cases) when considering the use of head-mounted display-based virtual reality in education, making its usage unsuitable for mass education. Therefore, in this study, we develop a second-screen system that can share virtual reality information using an Android device. Healthy first- and second-year high school students between the ages of 15 and 17 were asked to use the virtual reality educational materials that implemented the developed system, and a questionnaire survey was conducted. There were no negative comments in the survey on whether proposing second-screen system was necessary, demonstrating the usefulness of the proposed system. Therefore, the second-screen system may adapt VR technology to mass education. In addition, we developed a package to integrate our second-screen system into the pre-existing virtual reality projects. This package simplifies the procedure for implementing a second-screen system, thus helping to reuse the virtual reality projects that have been developed so far.
C1 [Nakano, Bunta; Matsumoto, Takaki; Ito, Tomoyoshi; Shiraki, Atsushi] Chiba Univ, Grad Sch Engn, Chiba, Japan.
   [Hoshikawa, Naoto] Natl Inst Technol, Oyama Coll, Dept Innovat Elect & Elect Engn, Tochigi, Japan.
   [Shiraki, Atsushi] Chiba Univ, Inst Management & Informat Technol, Chiba, Japan.
C3 Chiba University; Chiba University
RP Shiraki, A (corresponding author), Chiba Univ, Grad Sch Engn, Chiba, Japan.
EM ashiraki@chiba-u.jp
FU JSPS KAKENHI;  [19H01097]
FX This work was supported in part by JSPS KAKENHI grant number 19H01097.
CR ARCore, 2021, QUICKSTART ANDROID
   ARCore, 2021, BUILD ANDROID 11 UNI
   Ausburn L., 2004, J IND TEACHER ED, V41, P33
   Biocca F., 1995, Communication in the age of virtual reality, V15, P10
   Concannon BJ, 2019, FRONT EDUC, V4, DOI 10.3389/feduc.2019.00080
   DeFanti TA, 1993, Proceedings of the 20th annual conference on Computer graphics and interactive techniques, P135, DOI 10.1145/166117.166134.
   Ehrlich JR, 2017, AM J OPHTHALMOL, V176, P26, DOI 10.1016/j.ajo.2016.12.021
   Franco AA, 2023, BATTERIES SUPERCAPS, V6, DOI [10.1002/batt.202200369, 10.1002/batt.202200538]
   Freeman D, 2018, LANCET PSYCHIAT, V5, P625, DOI 10.1016/S2215-0366(18)30226-8
   Izard SG, 2018, J MED SYST, V42, DOI 10.1007/s10916-018-0900-2
   Gugenheimer J, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P4021, DOI 10.1145/3025453.3025683
   Huang KT, 2019, CYBERPSYCH BEH SOC N, V22, P105, DOI 10.1089/cyber.2018.0150
   Huber T, 2017, SURG ENDOSC, V31, P4472, DOI 10.1007/s00464-017-5500-6
   Ihemedu-Steinke Q.C., 2017, Automotive User Interfaces; Human-Computer Interaction Series, P401, DOI DOI 10.1007/978-3-319-49448-7_15
   Ihemedu-Steinke QC., 2017, VIRTUAL AUGMENTED MI
   Ishii A, 2017, SIGGRAPH ASIA 2017 VR SHOWCASE (SA'17), DOI 10.1145/3139468.3139482
   Iwamoto K., 1994, IEEE INT C SYST MAN, DOI [10.1109/ICSMC.1994.399804, DOI 10.1109/ICSMC.1994.399804]
   Kaminska D, 2019, INFORMATION, V10, DOI 10.3390/info10100318
   Kang S, 2019, CLUSTER COMPUT, V22, P2351, DOI 10.1007/s10586-018-2254-4
   Kennedy RS, 2010, APPL ERGON, V41, P494, DOI 10.1016/j.apergo.2009.11.006
   Klüver M, 2016, TRANSPORT RES F-TRAF, V37, P78, DOI 10.1016/j.trf.2015.12.005
   Mäkinen H, 2023, NURS OPEN, V10, P3210, DOI 10.1002/nop2.1571
   Makransky G, 2019, COMPUT EDUC, V134, P15, DOI 10.1016/j.compedu.2019.02.002
   Mekki AO, 2017, IEEE INT CONF FUZZY
   Meuleners L, 2015, TRANSPORT RES F-TRAF, V29, P14, DOI 10.1016/j.trf.2014.11.009
   Nathal KLP., 2018, AM J ED RES, V6, P170, DOI [10.12691/education-6-3-2, DOI 10.12691/EDUCATION]
   Owlchemy Labs, 2021, OWLCHEMY LAB REPORT
   Papanastasiou G, 2019, VIRTUAL REAL-LONDON, V23, P425, DOI 10.1007/s10055-018-0363-2
   Pirker J., 2020, 2020 6 INT C IMM LEA, DOI [10.23919/iLRN47897.2020.9155167, DOI 10.23919/ILRN47897.2020.9155167]
   Pirker J, 2017, IEEE INT CONF ADV LE, P482, DOI 10.1109/ICALT.2017.92
   Ruisoto P., 2017, 360 VISION APPL MEDI, DOI [10.1145/3144826.3145405, DOI 10.1145/3144826.3145405]
   Saarinen S., 2017, HUMAN COMPUTER INTER
   Sawada Y, 2018, SCI REP-UK, V8, DOI 10.1038/s41598-018-30373-1
   Schell Games, 2021, SUPERCHEM VR SHOWS W
   Sharples S, 2008, DISPLAYS, V29, P58, DOI 10.1016/j.displa.2007.09.005
   Valentino K, 2017, INTERNETWORKING INDO, V9, P21
   Xu S., 2019, 72TH JOINT C ELECT E, P111, DOI [10.11527/jceeek.2019.0_111, DOI 10.11527/JCEEEK.2019.0_111]
   Yavrucuk I, 2011, IEEE AERO EL SYS MAG, V26, P10, DOI 10.1109/MAES.2011.5763338
   Yilmaz M, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2531
NR 39
TC 0
Z9 0
U1 4
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2024
VL 54
IS 5
BP 796
EP 812
DI 10.1002/spe.3299
EA DEC 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NB0V3
UT WOS:001126589100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Wu, SY
   Zhang, GM
   Dai, F
   Liu, BW
   Dou, WC
AF Wu, Siyuan
   Zhang, Guoming
   Dai, Fei
   Liu, Bowen
   Dou, Wanchun
TI An edge-assisted federated contrastive learning method with local
   intrinsic dimensionality in noisy label environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE contrastive learning; edge computing; federated learning; local
   intrinsic dimensionality; noisy labels
AB The advent of federated learning (FL) has presented a viable solution for distributed training in edge environment, while simultaneously ensuring the preservation of privacy. In real-world scenarios, edge devices may be subject to label noise caused by environmental differences, automated weakly supervised annotation, malicious tampering, or even human error. However, the potential of the noisy samples have not been fully leveraged by prior studies on FL aimed at addressing label noise. Rather, they have primarily focused on conventional filtering or correction techniques to alleviate the impact of noisy labels. To tackle this challenge, a method, named DETECTION, is proposed in this article. It aims at effectively detecting noisy clients and mitigating the adverse impact of label noise while preserving data privacy. Specially, a confidence scoring mechanism based on local intrinsic dimensionality (LID) is investigated for distinguishing noisy clients from clean clients. Then, a loss function based on prototype contrastive learning is designed to optimize the local model. To address the varying levels of noise across clients, a LID weighted aggregation strategy (LA) is introduced. Experimental results on three datasets demonstrate the effectiveness of DETECTION in addressing the issue of label noise in FL while maintaining data privacy.
C1 [Wu, Siyuan; Zhang, Guoming; Liu, Bowen; Dou, Wanchun] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing Xianlin Rd 1, Peoples R China.
   [Dai, Fei; Dou, Wanchun] Southwest Forestry Univ, Coll Big Data & Intelligent Engn, Kunming, Peoples R China.
C3 Nanjing University; Southwest Forestry University - China
RP Dou, WC (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing Xianlin Rd 1, Peoples R China.
EM douwc@nju.edu.cn
RI zhang, guoming/HHN-0617-2022
OI dai, fei/0000-0001-6469-357X
FU National Natural Science Foundation of China; Dou Wanchun Expert
   Workstation of Yunnan Province [202105AF150013];  [92267104]
FX This research is supported by the National Natural Science Foundation of
   China under Grant No. 92267104 and the Dou Wanchun Expert Workstation of
   Yunnan Province No. 202105AF150013. Here, we deeply appreciated Xitong
   Liu and Gaozhan Yu for their original contributions in our work.
CR Arazo E, 2019, PR MACH LEARN RES, V97
   Arpit D, 2017, PR MACH LEARN RES, V70
   Arthur D, 2007, PROCEEDINGS OF THE EIGHTEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P1027
   Chen Y., 2020, Federated Learning: Privacy and Incentive, P108
   Chen YQ, 2020, Arxiv, DOI arXiv:2001.11359
   Chen Z, 2023, MED IMAGE ANAL, V90, DOI 10.1016/j.media.2023.102976
   Cheng ZP, 2023, IEEE T PARALL DISTR, V34, P3174, DOI 10.1109/TPDS.2023.3322755
   Fang XW, 2022, PROC CVPR IEEE, P10062, DOI 10.1109/CVPR52688.2022.00983
   Han B., 2018, 32nd Conference on Advances in Neural Information Processing Systems, P1
   Han JF, 2019, IEEE I CONF COMP VIS, P5137, DOI 10.1109/ICCV.2019.00524
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hongxin Wei, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P13723, DOI 10.1109/CVPR42600.2020.01374
   Houle ME, 2017, LECT NOTES COMPUT SC, V10609, P64, DOI 10.1007/978-3-319-68474-1_5
   Houle ME, 2013, INT CONF DAT MIN WOR, P468, DOI 10.1109/ICDMW.2013.139
   Houle ME, 2012, INT CONF DAT MIN WOR, P587, DOI 10.1109/ICDMW.2012.94
   Huang ZZ, 2023, Arxiv, DOI [arXiv:2303.06930, 10.48550/arXiv.2303.06930, DOI 10.48550/ARXIV.2303.06930]
   Jiang XF, 2022, PROCEEDINGS OF THE 31ST ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, CIKM 2022, P862, DOI 10.1145/3511808.3557475
   Karim N, 2022, PROC CVPR IEEE, P9666, DOI 10.1109/CVPR52688.2022.00945
   Krizhevsky Alex, 2009, LEARNING MULTIPLE LA
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Li JN, 2020, Arxiv, DOI arXiv:2002.07394
   Li JY, 2022, PROCEEDINGS OF THE 28TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2022, P914, DOI 10.1145/3534678.3539328
   Li PC, 2023, Arxiv, DOI arXiv:2301.03062
   Li QB, 2022, PROC INT CONF DATA, P965, DOI 10.1109/ICDE53745.2022.00077
   Li T., Federated optimization in heterogeneous networks. Proceedings of Machine Learning and Systems; 2020:429-450
   Li Z, 2024, IEEE T COMPUT SOC SY, V11, P3179, DOI 10.1109/TCSS.2022.3217790
   Liang KJ, 2022, PROC CVPR IEEE, P9079, DOI 10.1109/CVPR52688.2022.00888
   Liu BW, 2022, J PARALLEL DISTR COM, V168, P80, DOI 10.1016/j.jpdc.2022.06.007
   Liu BW, 2021, J SYST ARCHITECT, V114, DOI 10.1016/j.sysarc.2020.101970
   Ma XJ, 2018, PR MACH LEARN RES, V80
   Ma XJ, 2018, Arxiv, DOI arXiv:1801.02613
   McMahan HB, 2017, PR MACH LEARN RES, V54, P1273
   Mendieta M, 2022, PROC CVPR IEEE, P8387, DOI 10.1109/CVPR52688.2022.00821
   Rooyen B. V., 2015, P ADV NEUR INF PROC, P10
   Siriwardhana Y, 2021, IEEE COMMUN SURV TUT, V23, P1160, DOI 10.1109/COMST.2021.3061981
   Song H, 2021, KDD '21: PROCEEDINGS OF THE 27TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P1490, DOI 10.1145/3447548.3467222
   Song H, 2023, IEEE T NEUR NET LEAR, V34, P8135, DOI 10.1109/TNNLS.2022.3152527
   Sun F, 2022, IEEE T VEH TECHNOL, V71, P10088, DOI 10.1109/TVT.2022.3182782
   Tan Y, 2022, AAAI CONF ARTIF INTE, P8432
   Tanaka D, 2018, PROC CVPR IEEE, P5552, DOI 10.1109/CVPR.2018.00582
   Wang F, 2021, PROC CVPR IEEE, P2495, DOI 10.1109/CVPR46437.2021.00252
   Wang J., 2020, ADV NEURAL INFORM PR, V33, P7611, DOI DOI 10.48550/ARXIV.2007.07481
   Wang K., 2023, P ACM WEB C 2023, P2979, DOI 10.1145/3543507.3583347
   Wang L, 2023, IEEE T MOBILE COMPUT, V22, P5001, DOI 10.1109/TMC.2022.3178378
   Wang Z., 2022, Fednoil: A simple two-level sampling method for federated learning with noisy labels
   Wu CR, 2023, Arxiv, DOI arXiv:2304.02892
   Xia J, 2022, IEEE T COMPUT AID D, V41, P4100, DOI 10.1109/TCAD.2022.3197491
   Xia XY, 2023, IEEE T MOBILE COMPUT, V22, P1646, DOI 10.1109/TMC.2021.3107918
   Xu JY, 2022, PROC CVPR IEEE, P10174, DOI 10.1109/CVPR52688.2022.00994
   Xu XL, 2022, AVIAN RES, V13, DOI 10.1016/j.avrs.2022.100007
   Xu XL, 2023, IEEE T IND INFORM, V19, P5485, DOI 10.1109/TII.2022.3190380
   Xu XL, 2023, IEEE T IND INFORM, V19, P1655, DOI 10.1109/TII.2022.3195896
   Yang CY, 2022, ACM T MULTIM COMPUT, V18, DOI 10.1145/3548687
   Yang M, 2022, IEEE T VEH TECHNOL, V71, P2193, DOI 10.1109/TVT.2021.3131852
   Yang S, 2022, IEEE INTELL SYST, V37, P35, DOI 10.1109/MIS.2022.3151466
   Zeng BX, 2022, ACM T INTEL SYST TEC, V13, DOI 10.1145/3519311
   Zhang CX, 2018, PROTEINS, V86, P136, DOI 10.1002/prot.25414
   Zhou XK, 2023, IEEE J SEL AREA COMM, V41, P3191, DOI 10.1109/JSAC.2023.3310046
NR 58
TC 2
Z9 2
U1 6
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 NOV 30
PY 2023
DI 10.1002/spe.3295
EA NOV 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z2ZB0
UT WOS:001110796900001
DA 2024-07-18
ER

PT J
AU Liu, HW
   Qi, LY
   Shen, SG
   Khan, AA
   Meng, SM
   Li, QM
AF Liu, Hanwen
   Qi, Lianyong
   Shen, Shigen
   Khan, Arif Ali
   Meng, Shunmei
   Li, Qianmu
TI Microservice-driven privacy-aware cross-platform social relationship
   prediction based on sequential information
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE improved Simhash technique; microservice environment; privacy
   protection; r-GRU network; sequential information; social relationship
   prediction
ID RECOMMENDATION; SYSTEM
AB Currently, the accurate prediction of social relationships can effectively reduce the decision-making burden of users in various service platforms. However, in the big data environment, the users' data information used for the relationship prediction is highly fragmented distribution, so it is a non-trivial challenge to integrate the users' sequence data information from different platforms while preventing sensitive information leakage. To this end, based on the microservice environment, we devise a cross-platform social relationship prediction approach (CPSRP) to address the above problems. Briefly, the improved Simhash method aggregates similar users into the common bucket. Then the embedding technique converts the users' sparse data information into the low-dimensional dense continuous feature vectors; the redefined Gated Recurrent Unit (r-GRU) network and the Multilayer Perceptron (MLP) network are employed to extract the overall temporal sequence features of users. The relationship prediction is finally executed according to the users' sequential features. Extensive experiments are conducted on Epinions, and the experimental results further prove the benefits of our proposal in terms of relationship prediction while protecting users' sensitive information.
C1 [Liu, Hanwen; Meng, Shunmei; Li, Qianmu] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing, Peoples R China.
   [Qi, Lianyong] China Univ Petr, Sch Comp Sci & Technol, Qingdao, Peoples R China.
   [Shen, Shigen] Huzhou Univ, Sch Informat Engn, Huzhou, Peoples R China.
   [Khan, Arif Ali] Univ Oulu, Empir Software Engn Res Unit M3S, Oulu, Finland.
   [Li, Qianmu] Nanjing Univ Sci & Technol, Sch Cyber Sci & Engn, Nanjing, Peoples R China.
   [Li, Qianmu] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, 200 Xiaolingwei Rd, Nanjing, Peoples R China.
C3 Nanjing University of Science & Technology; China University of
   Petroleum; Huzhou University; University of Oulu; Nanjing University of
   Science & Technology; Nanjing University of Science & Technology
RP Li, QM (corresponding author), Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, 200 Xiaolingwei Rd, Nanjing, Peoples R China.
EM qianmu@njust.edu.cn
RI Khan, Arif Ali/ABG-2862-2020; Liu, Hanwen/JAA-9522-2023; Qi,
   Lianyong/AAO-2681-2020; Shen, Shigen/AAJ-4325-2020
OI Khan, Arif Ali/0000-0002-8479-1481; Shen, Shigen/0000-0002-7558-5379
FU National Key Ramp; D Program of China [2020YFB1805503]; Youth Talent
   Support Program of Beihang University [KG16166701]; Research on the
   Construction of Ideological and Political Selective Compulsory Courses
   in Higher Vocational Colleges [2022SJZDSZ011]; Research Project of
   Nanjing Vocational University of Industry Technology [2020SKYJ03];
   Fundamental Research Fund for the Central Universities [30920041112]
FX National Key R& D Program of China, Grant/Award Number: 2020YFB1805503;
   Youth Talent Support Program of Beihang University, Grant/Award Number:
   KG16166701; Research on the Construction of Ideological and Political
   Selective Compulsory Courses in Higher Vocational Colleges, Grant/Award
   Number: 2022SJZDSZ011; Research Project of Nanjing Vocational University
   of Industry Technology, Grant/Award Number: 2020SKYJ03; Fundamental
   Research Fund for the Central Universities, Grant/Award Number:
   30920041112
CR Bag S, 2019, INFORM SCIENCES, V483, P53, DOI 10.1016/j.ins.2019.01.023
   Bengio Y, 2009, FOUND TRENDS MACH LE, V2, P1, DOI 10.1561/2200000006
   Berkani L, 2020, SOFTWARE PRACT EXPER, V50, P1498, DOI 10.1002/spe.2828
   Casino F, 2015, J COMPUT SYST SCI, V81, P1000, DOI 10.1016/j.jcss.2014.12.013
   Cui P, 2019, IEEE T KNOWL DATA EN, V31, P833, DOI 10.1109/TKDE.2018.2849727
   Dai HP, 2023, IEEE T KNOWL DATA EN, V35, P6710, DOI 10.1109/TKDE.2022.3199646
   Deng SG, 2017, IEEE T NEUR NET LEAR, V28, P1164, DOI 10.1109/TNNLS.2016.2514368
   Di Luccio D, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.5988
   Dou WC, 2022, J SYST ARCHITECT, V128, DOI 10.1016/j.sysarc.2022.102545
   Fallah S, 2022, SOFTWARE PRACT EXPER, V52, P1987, DOI 10.1002/spe.3112
   Friedman A, 2016, USER MODEL USER-ADAP, V26, P425, DOI 10.1007/s11257-016-9177-7
   Guidong Zhong, 2021, Intelligent and Converged Networks, V2, P115, DOI 10.23919/ICN.2021.0005
   Hamilton MJ., 2022, J SOC COMPUT, V3, P18, DOI [10.23919/JSC.2021.0019, DOI 10.23919/JSC.2021.0019]
   Hartpence Bruce, 2021, Intelligent and Converged Networks, V2, P66, DOI 10.23919/ICN.2020.0023
   He RN, 2017, PROCEEDINGS OF THE ELEVENTH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'17), P161, DOI 10.1145/3109859.3109882
   Huo Y, 2021, TSINGHUA SCI TECHNOL, V26, P523, DOI 10.26599/TST.2020.9010020
   Jang MH, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P629, DOI 10.1145/2983323.2983753
   Jiehong Wu, 2021, Intelligent and Converged Networks, V2, P91, DOI 10.23919/ICN.2021.0011
   Kang WC, 2018, IEEE DATA MINING, P197, DOI 10.1109/ICDM.2018.00035
   Kohler TA., 2022, J SOCIAL COMPUTING, V3, P1, DOI [10.23919/JSC.2021.0020, DOI 10.23919/JSC.2021.0020]
   Kou HZ, 2023, APPL SOFT COMPUT, V136, DOI 10.1016/j.asoc.2023.110137
   Kou HZ, 2021, APPL SOFT COMPUT, V100, DOI 10.1016/j.asoc.2020.106942
   Kumar M, 2023, SOFT COMPUT, V27, P11661, DOI 10.1007/s00500-023-07844-3
   Lanlan Li, 2021, Intelligent and Converged Networks, V2, P101, DOI 10.23919/ICN.2020.0017
   Lianyong Qi, 2017, Security, Privacy, and Anonymity in Computation, Communication, and Storage. 10th International Conference, SpaCCS 2017. Proceedings: LNCS 10656, P280, DOI 10.1007/978-3-319-72389-1_23
   Liao XT, 2021, BIG DATA MIN ANAL, V4, P242, DOI 10.26599/BDMA.2021.9020010
   Lin WY, 2020, IEEE INFOCOM SER, P914, DOI [10.1109/INFOCOM41043.2020.9155370, 10.1109/infocom41043.2020.9155370]
   Liu BW, 2022, J PARALLEL DISTR COM, V168, P80, DOI 10.1016/j.jpdc.2022.06.007
   Liu HW, 2022, J CIRCUIT SYST COMP, V31, DOI 10.1142/S0218126622501602
   Magableh B, 2020, SOFTWARE PRACT EXPER, V50, P116, DOI 10.1002/spe.2778
   Memon I, 2015, WIRELESS PERS COMMUN, V82, P1585, DOI 10.1007/s11277-015-2300-y
   Memos VA, 2018, FUTURE GENER COMP SY, V83, P619, DOI 10.1016/j.future.2017.04.039
   Meng SM, 2022, IEEE T IND INFORM, V18, P5637, DOI 10.1109/TII.2022.3143103
   Nitu P, 2021, BIG DATA MIN ANAL, V4, P139, DOI 10.26599/BDMA.2020.9020026
   Pang JJ, 2021, TSINGHUA SCI TECHNOL, V26, P759, DOI 10.26599/TST.2021.9010026
   Parimala M, 2021, SOFTWARE PRACT EXPER, V51, P550, DOI 10.1002/spe.2851
   Qi LY, 2021, ACM T MULTIM COMPUT, V17, DOI 10.1145/3417293
   Qi LY, 2021, IEEE T NETW SCI ENG, V8, P1145, DOI 10.1109/TNSE.2020.2969489
   Qi LY, 2020, IEEE T CLOUD COMPUT, V8, P338, DOI 10.1109/TCC.2015.2511764
   Ren Jing-xia, 2020, ICBDT 2020: Proceedings of the 2020 3rd International Conference on Big Data Technologies, P121, DOI 10.1145/3422713.3422727
   Sandhu AK, 2022, BIG DATA MIN ANAL, V5, P32, DOI 10.26599/BDMA.2021.9020016
   Stergiou C, 2018, FUTURE GENER COMP SY, V78, P964, DOI 10.1016/j.future.2016.11.031
   Stergiou CL, 2021, IEEE INTERNET THINGS, V8, P5164, DOI 10.1109/JIOT.2020.3033131
   Stergiou CL., 2022, Virtual Reality Intelligent Hardware, V4, P279, DOI [10.1016/j.vrih.2022.05.003, DOI 10.1016/J.VRIH.2022.05.003]
   Tang J., 2013, P 6 ACM INT C WEB SE, P53, DOI DOI 10.1145/2433396.2433405
   Uslander E., 2018, OXFORD HDB SOCIAL PO, DOI [https://doi.org/10.1093/oxfordhb/9780190274801.001.0001, DOI 10.1093/OXFORDHB/9780190274801.001.0001]
   Van Noppen Aden, 2021, Journal of Social Computing, V2, P309, DOI 10.23919/JSC.2021.0024
   Wang SG, 2020, IEEE T EMERG TOP COM, V8, P82, DOI 10.1109/TETC.2017.2675479
   Wang X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3564
   Wang XK, 2023, IEEE T NEUR NET LEAR, V34, P7286, DOI 10.1109/TNNLS.2022.3140238
   Wang XK, 2022, IEEE NETWORK, V36, P40, DOI 10.1109/MNET.011.1800508
   Wei DW, 2021, TSINGHUA SCI TECHNOL, V26, P918, DOI 10.26599/TST.2021.9010029
   Wernke SA., 2022, J SOC COMPUT, V3, P57, DOI [10.23919/JSC.2021.0016, DOI 10.23919/JSC.2021.0016]
   Xu MX, 2022, IEEE T NETW SERV MAN, V19, P3995, DOI 10.1109/TNSM.2022.3210211
   Xu PH, 2019, IEEE DATA MINING, P678, DOI 10.1109/ICDM.2019.00078
   Xu YW, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, ICWS 2021, P598, DOI 10.1109/ICWS53863.2021.00081
   Yuan L, 2022, IEEE T PARALL DISTR, V33, P1873, DOI 10.1109/TPDS.2021.3131680
   Yuan WH, 2020, INFORM SCIENCES, V510, P122, DOI 10.1016/j.ins.2019.09.007
   Zeng F, 2020, SOFTWARE PRACT EXPER, V50, P2031, DOI 10.1002/spe.2727
   Zhang JT, 2021, BIG DATA MIN ANAL, V4, P233, DOI 10.26599/BDMA.2021.9020008
   Zhang SA, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3285029
   Zhang WS, 2021, TSINGHUA SCI TECHNOL, V26, P878, DOI 10.26599/TST.2020.9010052
   Zhang ZS, 2018, IEEE T VEH TECHNOL, V67, P10378, DOI [10.1109/TIE.2018.2835378, 10.1109/TVT.2018.2866828]
   Zhong WY, 2020, COMPUT COMMUN, V157, P116, DOI 10.1016/j.comcom.2020.04.018
NR 64
TC 4
Z9 4
U1 6
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2024
VL 54
IS 1
BP 85
EP 105
DI 10.1002/spe.3240
EA AUG 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF0T2
UT WOS:001045084800001
DA 2024-07-18
ER

PT J
AU Pati, A
   Parhi, M
   Pattanayak, BK
   Pati, B
AF Pati, Abhilash
   Parhi, Manoranjan
   Pattanayak, Binod Kumar
   Pati, Bibudhendu
TI IFCnCov: An IoT-based smart diagnostic architecture for COVID-19
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; COVID-19 diagnosis; deep learning; fog computing; IoT
ID FRAMEWORK; DISEASE; EDGE
AB Performing a coronary disease diagnosis remotely is challenging now-a-days. COVID-19 is a worldwide pandemic, and methods for detecting COVID-19 are hampered by insufficient data and a lack of validation testing. Internet of Things (IoT) applications that rely on cloud computing (CC) are being studied in an effort to improve e-Healthcare systems, even though CC presents substantial latency, bandwidth, energy consumption, security and privacy issues and so forth. The extension to CC, fog computing (FC), can overcome these said limitations. This study aims to diagnose COVID-19 patients to fight the outbreak remotely. This study proposes IFCnCov, which enables remote users to diagnose COVID-19 disease in real-time using integrated IoT, FC, and CC principles, as well as ensemble learning (EL) and deep learning (DL). The proposed system is a two-layered architecture, trained with DL approaches to two different datasets: a symptom-based dataset and a chest x-rays imaging dataset obtained from the Kaggle repository employing several evaluative measures. From various experiments, this proposed IFCnCov achieves comparatively enhanced accuracies of 97.71% and 98.64%, precision of 97.38% and 98.52%, sensitivity of 98.19% and 98.92%, specificity of 97.21% and 98.34%, and F1-scores of 97.79% and 98.72% in the first and second stages respectively, which also outperforms some other considered state-of-the-art works. Additionally, this work is validated in terms of several network parameters, including scalability, energy consumption, network utilization, jitter, processing time, throughput, and arbitration time.
C1 [Pati, Abhilash; Pattanayak, Binod Kumar] Siksha OAnusandhan, Dept Comp Sci & Engn, Bhubaneswar, Orissa, India.
   [Parhi, Manoranjan] Siksha OAnusandhan, Ctr Data Sci, Bhubaneswar, Orissa, India.
   [Pati, Bibudhendu] Rama Devi Womens Univ, Dept Comp Sci, Bhubaneswar, Orissa, India.
C3 Siksha 'O' Anusandhan University; Siksha 'O' Anusandhan University
RP Pati, A (corresponding author), Siksha OAnusandhan, Dept Comp Sci & Engn, Bhubaneswar, Orissa, India.
EM er.abhilash.pati@gmail.com
RI Pati, Dr. Abhilash/AFW-2012-2022; Pati, Bibudhendu/X-9503-2019
OI Pati, Dr. Abhilash/0000-0002-3418-4202; Pati,
   Bibudhendu/0000-0002-2544-5343
CR Abdulkareem KH, 2022, COMPUT INTEL NEUROSC, V2022, DOI 10.1155/2022/5012962
   Abid A, 2022, SOFTWARE PRACT EXPER, V52, P841, DOI 10.1002/spe.2983
   Ahanger TA, 2022, J SUPERCOMPUT, V78, P1783, DOI 10.1007/s11227-021-03935-w
   Ahsan MM, 2020, MACH LEARN KNOW EXTR, V2, P490, DOI 10.3390/make2040027
   Ahsan MM, 2021, IEEE ACCESS, V9, P35501, DOI 10.1109/ACCESS.2021.3061621
   Akram KM, 2022, BIOMED SIGNAL PROCES, V76, DOI 10.1016/j.bspc.2022.103715
   Alazab Moutaz, 2020, International Journal of Computer Information Systems and Industrial Management Applications, P168
   Aljumah A, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10151834
   Attaullah M, 2022, APPL ARTIF INTELL, V36, DOI 10.1080/08839514.2022.2055398
   Avr S., SAMPLES COVID 19 ISR
   Bebortta Sujit, 2022, Smart Health (Amst), V26, P100308, DOI 10.1016/j.smhl.2022.100308
   Bhardwaj Vaneeta, 2022, SN Comput Sci, V3, P137, DOI 10.1007/s42979-022-01015-1
   Chaddad A, 2021, J MED IMAGING, V8, DOI 10.1117/1.JMI.8.S1.014502
   Elimian KO, 2021, BMJ OPEN, V11, DOI 10.1136/bmjopen-2021-049699
   Ghosh S, 2022, SOFTWARE PRACT EXPER, V52, P2700, DOI 10.1002/spe.3144
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Haritha D, 2020, PROCEEDINGS OF THE 2020 5TH INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND SECURITY (ICCCS-2020), DOI 10.1109/icccs49678.2020.9277077
   Irmak E, 2021, IET IMAGE PROCESS, V15, P1814, DOI 10.1049/ipr2.12153
   Islam Md Zabirul, 2020, Inform Med Unlocked, V20, P100412, DOI 10.1016/j.imu.2020.100412
   Islam S., 2021, ANN ROMANIAN SOC CEL, V25, P10410
   Jain G, 2020, BIOCYBERN BIOMED ENG, V40, P1391, DOI 10.1016/j.bbe.2020.08.008
   Kallel A, 2021, SOFTWARE PRACT EXPER, V51, P91, DOI 10.1002/spe.2924
   Kumar V, 2022, J HEALTHC ENG, V2022, DOI 10.1155/2022/6216273
   Li Y, 2020, FRONT PUBLIC HEALTH, V8, DOI 10.3389/fpubh.2020.587937
   Liang SHL, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21010050
   Livieris IE, 2020, ALGORITHMS, V13, DOI 10.3390/a13050121
   Lu SY, 2022, BIOLOGY-BASEL, V11, DOI 10.3390/biology11010033
   Lydia EL, 2021, SOFT COMPUT, DOI 10.1007/s00500-021-06514-6
   Mangalmurti Y, 2022, INTELL AUTOM SOFT CO, V34, P733, DOI 10.32604/iasc.2022.025073
   Meem AT, 2022, COMPUT SYST SCI ENG, V41, P1223, DOI 10.32604/csse.2022.021563
   Nasser N, 2023, NEURAL COMPUT APPL, V35, P13775, DOI 10.1007/s00521-021-06396-7
   PATEL P., Chest X-ray (Covid-19 Pneumonia)
   Pati Abhilash, 2021, Advances in Intelligent Computing and Communication. Proceedings of ICAC 2020. Lecture Notes in Networks and Systems (LNNS 202), P307, DOI 10.1007/978-981-16-0695-3_30
   Pati A., 2022, HEARTFOG FOG COMPUTI, P39
   Pati A, 2023, INFORMATICS-BASEL, V10, DOI 10.3390/informatics10010021
   Pati A, 2022, WIREL COMMUN MOB COM, V2022, DOI 10.1155/2022/7268571
   Poonia A, 2021, INTERNET THINGS-NETH, V16, DOI 10.1016/j.iot.2021.100459
   Prajapati CC., 2021, 2021 9 INT C REL INF, P1
   Prakash K.B., 2020, Int. J. Emerg. Trends Eng. Res, V8, P2199, DOI DOI 10.30534/IJETER/2020/117852020
   Reshi AA, 2021, COMPLEXITY, V2021, DOI 10.1155/2021/6621607
   Rinderknecht MD, 2021, NPJ DIGIT MED, V4, DOI 10.1038/s41746-021-00482-9
   Roul A., 2022, COVIHUNT INTELLIGENT, P313
   Sarkar Joy Lal, 2022, IEEE/ACM Trans Comput Biol Bioinform, VPP, DOI 10.1109/TCBB.2022.3193918
   Singh A, 2022, SOFTWARE PRACT EXPER, V52, P868, DOI 10.1002/spe.3011
   Singh PD, 2021, INFORM SYST FRONT, V23, P1385, DOI 10.1007/s10796-021-10132-w
   Singh P, 2022, WORLD J ENG, V19, P80, DOI 10.1108/WJE-12-2020-0636
   Singh Prabhdeep, 2020, Glob Transit, V2, P283, DOI 10.1016/j.glt.2020.11.002
   Sun LP, 2020, J CLIN VIROL, V128, DOI 10.1016/j.jcv.2020.104431
   Syarif Abdusy, 2022, Inform Med Unlocked, V28, P100842, DOI 10.1016/j.imu.2021.100842
   Tuli S, 2020, INTERNET THINGS-NETH, V11, DOI 10.1016/j.iot.2020.100222
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
   Uddin Azher, 2021, Mathematical Problems in Engineering, V2021, DOI 10.1155/2021/3366057
   Wang SH, 2021, INFORM FUSION, V67, P208, DOI 10.1016/j.inffus.2020.10.004
   Whaiduzzaman M, 2020, IEEE J BIOMED HEALTH, V24, P3564, DOI 10.1109/JBHI.2020.3026060
   Xia J, 2019, COMPUT MATH METHOD M, V2019, DOI 10.1155/2019/8152713
   Yan HM, 2006, EXPERT SYST APPL, V30, P272, DOI 10.1016/j.eswa.2005.07.022
   Yasser I., 2020, NEUTROSOPHIC SETS SY, V35
   Zain ZM., 2021, J CONTROL SCI ENG, V2021, P23
NR 58
TC 2
Z9 2
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2023
VL 53
IS 11
BP 2133
EP 2162
DI 10.1002/spe.3247
EA AUG 2023
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U0UL3
UT WOS:001041222500001
DA 2024-07-18
ER

PT J
AU Denninnart, C
   Chanikaphon, T
   Salehi, MA
AF Denninnart, Chavit
   Chanikaphon, Thanawat
   Salehi, Mohsen Amini
TI Efficiency in the serverless cloud paradigm: A survey on the reusing and
   approximation aspects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE approximate computing; computational reuse; serverless; survey
ID MANAGEMENT; WORKFLOWS
AB Serverless computing along with Function-as-a-Service (FaaS) is forming a new computing paradigm that is anticipated to found the next generation of cloud systems. The popularity of this paradigm is due to offering a highly transparent infrastructure that enables user applications to scale in the granularity of their functions. Since these often small and single-purpose functions are managed on shared computing resources behind the scene, a great potential for computational reuse and approximate computing emerges that if unleashed, can remarkably improve the efficiency of serverless cloud systems-both from the user's QoS and system's (energy consumption and incurred cost) perspectives. Accordingly, the goal of this survey study is to, first, unfold the internal mechanics of serverless computing and, second, explore the scope for efficiency within this paradigm via studying function reuse and approximation approaches and discussing the pros and cons of each one. Next, we outline potential future research directions within this paradigm that can either unlock new use cases or make the paradigm more efficient.
C1 [Denninnart, Chavit; Chanikaphon, Thanawat; Salehi, Mohsen Amini] Univ Louisiana Lafayette, Sch Comp & Informat, High Performance Cloud Comp HPCC Lab, Louisiana, MO 70503 USA.
RP Salehi, MA (corresponding author), Univ Louisiana Lafayette, Sch Comp & Informat, High Performance Cloud Comp HPCC Lab, Louisiana, MO 70503 USA.
EM amini@louisiana.edu
OI Amini Salehi, Mohsen/0000-0002-7020-3810
FU National Science Foundation (NSF) [CNS-2047144, CNS-2007209]
FX ACKNOWLEDGMENTS We would like to thank the anonymous reviewers of the
   paper, and members of the HPCC Lab, particularly Davood G. Samani and
   Pawissanutt Lertpongrujikorn, who brainstormed with us on this paper.
   This research is supported by the National Science Foundation (NSF)
   under awards# CNS-2047144 and CNS-2007209.
CR A. S. Foundation, 2023, AP OP IS SERV OP SOU
   Abadi M., 2016, OSDI 16
   Agache A, 2020, PROCEEDINGS OF THE 17TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P419
   Akkus IE, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P923
   Amazon, 2022, AM ATH SERV INT QUER
   Amazon, 2023, FAST NOSQL KEY VAL D
   Amazon, 2022, SERV CICD ENT AWS
   Amazon, 2023, SERV COMP ENG AWS FA
   Amazon, 2023, AWS SERV APPL MOD
   Amazon, 2022, AWS ID ACC MAN IAM
   Amazon, 2022, AM API GAT AM WEB SE
   Amazon, 2023, AM RDS CLOUD REL DAT
   Amazon, 2023, AWS LAMBD SERV COMP
   Amazon, 2023, AWS STEP FUNCT SERV
   [Anonymous], 2012, P 3 ANN C SYST PROGR, DOI DOI 10.1145/2384716.2384723
   Apache, 2023, APACHE ZOOKEEPER
   Apache, 2023, Apache Sedona
   Apache, 2021, AP COUCHDB
   Apache, 2022, Apache FlinkStateful Computations over Data Streams
   apache, 2023, Apache Kafka
   Arachchi S., 2018, CONTINUOUS INTEGRATI
   Arteaga D., 2016, FAST 16
   Balegas V., 2015, P 10 EUR C COMP SYST
   Baresi L., 2017, P EUR C SERV OR CLOU
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Bermbach D, 2022, SOFTWARE PRACT EXPER, V52, P1143, DOI 10.1002/spe.3058
   Bird R.S, 1988, FUNCTIONAL PROGRAMMI
   Bitnami, 2023, KUB
   Bookstein A, 2002, INFORM RETRIEVAL, V5, P353, DOI 10.1023/A:1020499411651
   Bortolini D., 2019, P 14 INT C P2P PAR G
   Bruno R., 2022, ARXIV
   Burckhardt S, 2022, PROC VLDB ENDOW, V15, P1591, DOI 10.14778/3529337.3529344
   C. N. C. Foundation, 2023, CNCF ANN SURV 20212
   C. N. C. Foundation, 2023, CLOUD NAT COMP FDN C
   C. N. Foundation, 2021, KNAT
   Carlson J., 2013, Redis in action
   Carreira Joao, 2021, P WORKSH HOT TOP OP
   Casas I, 2017, FUTURE GENER COMP SY, V74, P168, DOI 10.1016/j.future.2015.12.005
   Chakraborty A, 2023, SOFTWARE PRACT EXPER, V53, P496, DOI 10.1002/spe.3157
   Chippa VK., 2013, ANAL CHARACTERIZATIO
   Chuanqi Tan, 2018, Artificial Neural Networks and Machine Learning - ICANN 2018. 27th International Conference on Artificial Neural Networks. Proceedings: Lecture Notes in Computer Science (LNCS 11141), P270, DOI 10.1007/978-3-030-01424-7_27
   Ciavotta M., 2021, P 10 IEEE INT C CLOU
   Cloud G., 2023, CLOUD FUNCT
   D. Inc, 2023, DOCK REG DOCK DOC
   Datadog, 2023, STAT SERV
   Daw N., 2020, P 21 INT MIDDL C
   Denninnart C., 2018, ICSOC 18
   Denninnart C., 2021, TRANSPARALLEL DISTRI, V31, P617
   Denninnart C., 2020, COST QOS EFFICIENT S
   Denninnart Chavit, 2022, arXiv
   Du Z., 2014, ASP DAC 14
   Dukic V., 2020, P 11 ACM S CLOUD COM
   Ebert C, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.68
   Eismann S., 2020, REV SERVERLESS USE C
   Eismann S., IEEE T SOFTW ENG
   Eismann S, 2021, IEEE SOFTWARE, V38, P32, DOI 10.1109/MS.2020.3023302
   Ellis A., 2023, OPENFAAS SERVERLESS
   FFmpeg, 2023, FFMPEG
   fission.io, 2021, FISS SERV FUNCT KUB
   fission.io, 2023, FISS WORKFL
   Friebel KFA., 2021, DOMAIN SPECIFIC LANG
   Gain G., 2022, P 13 S CLOUD COMP
   Gentry J., 2019, IPDPS 19
   Ghaemi S, 2020, IEEE ACCESS, V8, P131760, DOI 10.1109/ACCESS.2020.3010119
   Ghatrehsamani D., 2020, P 49 INT C PAR PROC
   Google, 2022, gVisor
   Gunasekaran JR, 2020, PROCEEDINGS OF THE 2020 21ST INTERNATIONAL MIDDLEWARE CONFERENCE (MIDDLEWARE '20), P280, DOI 10.1145/3423211.3425683
   Guo PZ, 2018, MOBICOM'18: PROCEEDINGS OF THE 24TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P19, DOI 10.1145/3241539.3241557
   Gupta A., 2017, ICECCT 17
   Ha K, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P68, DOI 10.1145/2594368.2594383
   Hepworth A, 2014, J COMPUT INF SCI ENG, V14, DOI 10.1115/1.4026553
   Hersche M., 2022, P IEEE CVF C COMP VI
   Hewitt C., 2010, ACTOR MODEL COMPUTAT
   Huang JS, 2018, PROCEEDINGS OF THE 2ND INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND APPLICATION ENGINEERING (CSAE2018), DOI 10.1145/3207677.3278086
   Huang Z., 2019, MSST 19
   I. F5, 2023, HIGH PERF LOAD BAL W
   IBM, 2022, SERV ENT 2021
   IBM, 2023, IBM cloud functions usecases
   Initiative OC., 2023, OP CONT IN
   Iron.io, 2023, IR IO DEVOPS SP IT S
   Jackson D., 2018, INVESTIGATION IMPACT
   Jain A., 2019, SOCC 19
   Jayakumar H., 2016, ASP DAC 16
   Jiang T, 2017, IEEE T INF FOREN SEC, V12, P532, DOI 10.1109/TIFS.2016.2622013
   JOSEPHS MB, 1986, SCI COMPUT PROGRAM, V7, P279, DOI 10.1016/0167-6423(86)90011-0
   K. Containers, 2022, KAT CONT OP SOURC CO
   Kaman RS, 2019, PROCEEDINGS OF THE FOURTEENTH EUROSYS CONFERENCE 2019 (EUROSYS '19), DOI 10.1145/3302424.3303958
   Kelly D, 2021, J INF SECUR APPL, V60, DOI 10.1016/j.jisa.2021.102843
   Kjorveziroski V., 2022, P 30 TEL FOR TELFOR
   Klimovic A, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P427
   knix.io, 2023, KNIX MICROFUNCTIONS
   Kraft P., 2022, ARXIV
   Krishnan DR, 2016, P 25 INT C WORLD WID
   Kritikos K., 2018, P IEEE ACM INT C UT
   krustlet.dev, 2023, KUB RUST KUB
   Kumar D., 2018, HYPERVISOR BASED PER
   L. Inc, 2023, HIGH PERF MICR APIS
   Lertpongrujikorn P., 2023, P 16 IEEE CLOUD C
   Li CL, 2020, FUTURE GENER COMP SY, V112, P1106, DOI 10.1016/j.future.2020.06.022
   Li J., 2021, ANAL OPEN SOURCE SER
   Li WH, 2022, MECH SYST SIGNAL PR, V167, DOI 10.1016/j.ymssp.2021.108487
   Li XB, 2018, IEEE T PARALL DISTR, V29, P556, DOI 10.1109/TPDS.2017.2766069
   Li Y., IEEE T SERV COMPUT
   Li Z., ACM COMPUT SURV
   Li ZZ, 2022, IEEE T PARALL DISTR, V33, P4948, DOI 10.1109/TPDS.2022.3208767
   Lloyd W, 2018, INT CONF CLOUD ENG, P159, DOI 10.1109/IC2E.2018.00039
   Lopez PG., 2021, SERVERLESS PREDICTIO
   Mampage A, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3510412
   Mao Y., 2012, P 7 ACM EUR C COMP S, P183
   Marin E, 2022, J CLOUD COMPUT-ADV S, V11, DOI 10.1186/s13677-022-00347-w
   McGrath G., 2017, ICDCSW 17
   Microsoft, 2023, DUR FUNCT OV AZ
   Microsoft, 2023, AZ FUNCT SERV COMP
   Microsoft, 2022, DUR ENT AZ FUNCT
   Mokhtari A., 2020, IPDPSW 20
   Mokhtari A., 2022, P 15 IEEE CLOUD C
   Nazari M., 2021, P 8 INT C SOFTW DEF
   nuclio.io, 2023, NUCL SERV PLATF AUT
   O. W. A. S. Project, 2022, OWASP TOP 10 2017 IN
   Oakes E., 2018, USENIX ATC 18
   Oracle, 2023, FN FLOW
   Oracle, 2023, FN PROJ CONT NAT SER
   Paulo J., 2014, P 14 IFIP INT C DIST
   Pérez A, 2018, FUTURE GENER COMP SY, V83, P50, DOI 10.1016/j.future.2018.01.022
   Pokhilko P, 2018, J CHEM THEORY COMPUT, V14, P4088, DOI 10.1021/acs.jctc.8b00321
   Popa L., 2009, P 1 USENIX WORKSH HO
   Pu QF, 2019, PROCEEDINGS OF THE 16TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P193
   Qu YB, 2021, IEEE NETWORK, V35, P156, DOI 10.1109/MNET.001.2100253
   R. Containers, 2022, ABOUT US
   Rahimi A., 2015, DATA 15
   Rastogi V., 2017, P 11 JOINT M FDN SOF
   Raza A., 2021, JSYS, V1, P1
   Redmon J, 2018, Arxiv, DOI [arXiv:1804.02767, DOI 10.1109/CVPR.2017.690, DOI 10.48550/ARXIV.1804.02767]
   Risco S, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11041438
   Romero F., 2021, P ACM S CLOUD COMP
   Roy RB, 2022, INT CONF HIGH PERFOR, DOI 10.1109/SC41404.2022.00027
   Salehi MA, 2017, SOFTWARE PRACT EXPER, V47, P1221, DOI 10.1002/spe.2473
   Salehi MA, 2016, J PARALLEL DISTR COM, V97, P96, DOI 10.1016/j.jpdc.2016.06.008
   Salehi MA, 2014, SOFTWARE PRACT EXPER, V44, P353, DOI 10.1002/spe.2221
   Samadi M, 2014, ACM SIGPLAN NOTICES, V49, P35, DOI 10.1145/2541940.2541948
   Samani Davood G., 2022, P 22 IEEE ACM INT S
   Satyanarayanan M, 2001, WIREL NETW, V7, P601, DOI 10.1023/A:1012315301312
   Satyanarayanan M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON EDGE COMPUTING (IEEE EDGE), P33, DOI 10.1109/EDGE.2019.00022
   Saurabh N., 2019, IPDPS 19
   Sayfan G., 2020, Mastering kubernetes: Level up your container orchestration skills with kubernetes to build, run, secure, and observe large-scale distributed apps
   Scheuner J, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110708
   Schleier-Smith J., 2020, FAAS FILE SYSTEM SER
   Schleier-Smith J, 2021, COMMUN ACM, V64, P76, DOI 10.1145/3406011
   Seneviratne S, 2011, FUTURE GENER COMP SY, V27, P245, DOI 10.1016/j.future.2010.09.004
   serverlessworkflow.io, 2023, SERV SPEC
   Shahrad M, 2020, PROCEEDINGS OF THE 2020 USENIX ANNUAL TECHNICAL CONFERENCE, P205
   Shillaker S., 2020, USENIX ATC 20
   Sim H., 2018, P 55 ANN DES AUT C
   Snigdha FS., 2016, DAC 16
   Sreekanti V, 2020, PROC VLDB ENDOW, V13, P2438, DOI 10.14778/3407790.3407836
   Sreekanti V, 2020, PROCEEDINGS OF THE FIFTEENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS'20), DOI 10.1145/3342195.3387535
   Tang Y., 2015, USENIC ATC 15
   Tankov V., 2021, INFRASTRUCTURE CODE
   Thompson NC, 2021, COMMUN ACM, V64, P64, DOI 10.1145/3430936
   Tiwari D., 2014, IPDPS 14
   Torrey Lisa, 2010, Handbook of Research on Machine Learning Applications and Trends: Algorithms, Methods, and Techniques, P242
   Vassiliadis V., 2022, P IEEE INT C SERV CO
   Veillon V., 2019, ICFEC 19
   Veillon V, 2019, 2019 IEEE 3RD INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), DOI 10.1109/cfec.2019.8733154
   Venkatagiri R., 2016, MICRO 16
   Vogel S., 2017, DASIP 17
   Wallenta C, 2010, APPL INTELL, V32, P1, DOI 10.1007/s10489-008-0132-0
   Wang L, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P133
   Wang M., 2020, IEEE INT ULTRA SYM, P1, DOI DOI 10.1109/ius46767.2020.9251480
   Wang X., 2020, EUROPAR 20
   Wen Z., 2018, ICDCS 18
   Wu C., 2020, VLDB J, P1
   Wu S, 2022, SOFTWARE PRACT EXPER, V52, P337, DOI 10.1002/spe.3016
   Wu Y, 2019, PROC CVPR IEEE, P374, DOI 10.1109/CVPR.2019.00046
   Yazdanbakhsh A., 2015, DATE 15
   Yu XY, 2018, PROC VLDB ENDOW, V11, P1289, DOI 10.14778/3231751.3231763
   Zamani AR., 2017, FICLOUD 17
   Zeng H., 2016, P 2 INT C NETW INF S
   Zhang H., 2021, SERVERLESS CLOUD FOG
   Zhang J., 2022, INFINISTORE ELASTIC
   Zhang M, 2021, SOFTWARE PRACT EXPER, V51, P1852, DOI 10.1002/spe.2944
   Zhao N., 2020, USENIX ATC 20
   Zheng X., 2018, IEDM 18
   Zobaed S., 2021, P 15 IEEE INT C SEM
NR 184
TC 0
Z9 0
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2023
VL 53
IS 10
BP 1853
EP 1886
DI 10.1002/spe.3233
EA JUN 2023
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R6FK9
UT WOS:001012016400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Quattrocchi, G
   Tamburri, DA
   van den Heuvel, WJ
AF Quattrocchi, Giovanni
   Tamburri, Damian Andrew
   Van Den Heuvel, Willem-Jan
TI Making service continuity smarter with artificial intelligence: An
   approach and its evaluation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE artificial intelligence; digital transformation; incident management;
   natural language processing; service continuity
ID MANAGEMENT
AB Service continuity entails establishing an observable and explainable continuum between customer experience and service operations. Such continuum is currently established manually, via service customer management operations (such as service incident management (IM)) often resulting in time-consuming, human-detrimental, and error-prone activities. Conversely, artificial intelligence (AI) is rapidly emerging as an automated enabler towards handling the discontinuities in the aforementioned critical business tasks. Consequently, the emerging topic of AI-driven incident management (AIIM) addresses practices and tools to resolve incidents by means of AI-enabled organizational processes and methodologies. Our conjecture is that AIIM could reduce unplanned interruptions of service and let customers resume their work as quick as possible. While several techniques were presented in the literature to automatically identify the problems described in incident tickets by customers, this article focuses on the qualitative analysis and feature extraction off of the provided descriptions. When an incident ticket does not describe properly the problem, the analyst must ask the customer for additional details which could require several long-lasting interactions. This article proposes ACQUA , an AIIM approach to automatically assess the quality of ticket descriptions with the goals of removing the need of additional communications and guiding the customers to properly describe the incident. A preliminary evaluation of ACQUA was performed on a dataset provided by a large bank in Europe, showing promising results and a boost of 13% in ticket resolution times and connected service continuity.
C1 [Quattrocchi, Giovanni] Politecn Milan, Dipartimento Elettron & Informaz & Bioingn, Milan, Italy.
   [Tamburri, Damian Andrew; Van Den Heuvel, Willem-Jan] Jheronimus Acad Data Sci, Shertogenbosch, Netherlands.
   [Tamburri, Damian Andrew; Van Den Heuvel, Willem-Jan] Tilburg Univ, Tilburg, Netherlands.
C3 Polytechnic University of Milan; Tilburg University
RP Quattrocchi, G (corresponding author), Politecn Milan, Dipartimento Elettron & Informaz & Bioingn, Milan, Italy.
EM giovanni.quattrocchi@polimi.it
RI Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961
CR Aggarwal C. C., 2018, MACHINE LEARNING TEX
   Agichtein E., 2008, P 2008 INT C WEB SEA, P183, DOI DOI 10.1145/1341531.1341557
   Aly M., 2005, SURVEY MULTICLASS CL
   Bansode J., 2015, INT J RECENT INNOV T, V3, P852, DOI [10.17762/ijritcc2321-8169.150292, DOI 10.17762/IJRITCC2321]
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Cao CJ, 2011, INT CONF CLOUD COMPU, P225, DOI 10.1109/CCIS.2011.6045064
   Chapman P., 2000, CRISP DM 10 STEP BY
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chen ZB, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1487, DOI 10.1145/3368089.3417055
   Dilawar N, 2018, APPL SCI-BASEL, V8, DOI 10.3390/app8091589
   Guo J., 2019, PACIS 2019 P, P219
   Gupta M, 2018, EMPIR SOFTW ENG, V23, P1664, DOI 10.1007/s10664-017-9532-2
   Gupta R, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P57, DOI 10.1109/SCC.2009.48
   Iden J, 2013, INT J INFORM MANAGE, V33, P512, DOI 10.1016/j.ijinfomgt.2013.01.004
   Jan EE, 2015, PROCEEDINGS OF THE 2015 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM), P870, DOI 10.1109/INM.2015.7140397
   Janssen P., 2008, IT SERVICEMANAGEMENT
   Klems M, 2010, IEEE IFIP NETW OPER, P65, DOI 10.1109/NOMS.2010.5488437
   Konyushkova K., 2017, ADV NEURAL INFORM PR, P4225
   Kuhn M, 2013, Applied predictive modeling, P600, DOI [10.1007/978-1-4614-6849-3, 10.1007/978-1-4614-6849-3_3]
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Mikolov T, 2013, P WORKSHOP ICLR 2013
   Mithas S, 2011, MIS QUART, V35, P237
   Motahari-Nezhad HR, 2010, IEEE INT ENTERP DIST, P247, DOI 10.1109/EDOC.2010.20
   Naamkunde N., INFORM MANAGEMENT CA
   OpenAI, Introducing ChatGPT
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Patterson DA, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTEENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA XVI), P185
   Perez D., 2005, FLAIRS C, P358
   Qian Wang, 2010, Proceedings 2010 5th International Conference on Pervasive Computing and Applications (ICPCA 2010), P359, DOI 10.1109/ICPCA.2010.5704127
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rowley DD., FIRES CREATED INCIDE
   Tamburri DA, 2018, LECT NOTES COMPUT SC, V11116, P49, DOI 10.1007/978-3-319-99819-0_4
   White L., 2015, P 20 AUSTR DOC COMP, DOI DOI 10.1145/2838931.2838932
   Wohlin C., 2006, WEB ENG
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Yang YM, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P42, DOI 10.1145/312624.312647
   Zhou WB, 2016, IEEE T NETW SERV MAN, V13, P954, DOI 10.1109/TNSM.2016.2587807
NR 38
TC 0
Z9 0
U1 5
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2023
VL 53
IS 10
BP 1887
EP 1901
DI 10.1002/spe.3230
EA JUN 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R6FK9
UT WOS:001008539800001
DA 2024-07-18
ER

PT J
AU Amrit, P
   Singh, AK
AF Amrit, Preetam
   Singh, Amit Kumar
TI AutoCRW: Learning based robust watermarking for smart city applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE convolutional neural network; digital images; security; smart city;
   watermarking
ID NEURAL-NETWORKS
AB Deep learning has become a promising model in the industry due to its superior learning accuracy and efficiency. In addition to conventional applications, such as fraud detection, natural language processing, image classification and reconstruction, object detection and segmentation this model can be widely used for data hiding, that is, watermarking. Existing transformed-domain-based watermarking provided better robustness toward attacks. In this article, an interesting autoencoder convolutional neural network (CNN)-based watermarking technique, AutoCRW, is proposed, which can prevent intellectual property theft of digital images. First, the autoencoder functionality of CNN generates two versions of the same image, namely positive and negative version of the images, which decompose by a transformed domain scheme. Then, watermark information is embedded into the output images, which can be extracted to realize copyright protection and ownership verification. Finally, a denoising convolutional neural network (DnCNN) is employed over the extracted mark to ensure the robustness of the watermarking system. Extensive experiments demonstrate that the proposed algorithm has high invisibility and good robustness against several attacks.
C1 [Amrit, Preetam; Singh, Amit Kumar] Natl Inst Technol Patna, Dept Comp Sci & Engn, Ashok Rajpath, Patna 800005, Bihar, India.
   [Singh, Amit Kumar] NIT Patna, Dept CSE, Patna, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Patna; National Institute of Technology (NIT System);
   National Institute of Technology Patna
RP Singh, AK (corresponding author), NIT Patna, Dept CSE, Patna, India.
EM amit.singh@nitp.ac.in
RI Singh, Amit Kumar/D-1300-2015
OI Singh, Amit Kumar/0000-0001-7359-2068
CR Abbas NH., 2016, 2016 AL SADEQ INT C, P1
   Al-qdah M, 2018, SIGNAL IMAGE PROCESS, V9
   Amrit P, 2022, COMPUT COMMUN, V188, P52, DOI 10.1016/j.comcom.2022.02.023
   Anand A, 2023, IEEE T COMPUT SOC SY, V10, P2033, DOI 10.1109/TCSS.2022.3140862
   [Anonymous], REMOTE SENSING IMAGE
   Cheng G, 2017, P IEEE, V105, P1865, DOI 10.1109/JPROC.2017.2675998
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Ding WP, 2022, IEEE TETCI, V6, P613, DOI 10.1109/TETCI.2021.3055520
   Elson J, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P366
   Fierro-Radilla A, 2019, I W BIOMETRIC FORENS, DOI 10.1109/iwbf.2019.8739245
   Haribabu K., 2015, PROC IEEE WORKSHOP C, P1
   Hilal AM., 2021, COMPUT J, P1
   Hou JC, 2021, SIGNAL PROCESS-IMAGE, V92, DOI 10.1016/j.image.2020.116118
   Ingaleshwar S, 2023, MULTIMED TOOLS APPL, V82, P21957, DOI 10.1007/s11042-020-10498-0
   Kandi H, 2017, COMPUT SECUR, V65, P247, DOI 10.1016/j.cose.2016.11.016
   Kingma D. P., 2014, arXiv
   Krizhevsky A., 2009, LEARNING MULTIPLE LA
   LeCun Y., 1995, The handbook of brain theory and neural networks, V3361, DOI [10.5555/303568.303704, DOI 10.5555/303568.303704]
   Mahapatra D, 2023, J ELECTRON IMAGING, V32, DOI 10.1117/1.JEI.32.2.021604
   Mahto DK, 2021, COMPUT ELECTR ENG, V93, DOI 10.1016/j.compeleceng.2021.107255
   Mumtaz S, 2017, IEEE IND ELECTRON M, V11, P28, DOI 10.1109/MIE.2016.2618724
   Roldan LR, 2019, 2019 3RD INTERNATIONAL CONFERENCE ON DIGITAL SIGNAL PROCESSING (ICDSP 2019), P119, DOI 10.1145/3316551.3316556
   Simard PY, 2003, PROC INT CONF DOC, P958
   Singh AK, 2018, FUTURE GENER COMP SY, V86, P926, DOI 10.1016/j.future.2016.11.023
   Singh AK, 2017, MULTIMED TOOLS APPL, V76, P8881, DOI 10.1007/s11042-016-3514-z
   Singh HK., 2023, MULTIMED TOOLS APPL
   Singh OP., 2021, MULTIMED TOOLS APPL, V80, p30 367
   Singh S., 2017, MULTIMED TOOLS APPL, V76, p19 113
   Sun L, 2018, NEURAL COMPUT APPL, V30, P2425, DOI 10.1007/s00521-016-2788-4
   Sun WW, 2021, IEEE T CIRC SYST VID, V31, P1208, DOI 10.1109/TCSVT.2020.2998476
   Yu PT, 2001, SIGNAL PROCESS, V81, P663, DOI 10.1016/S0165-1684(00)00239-5
   Yu ZW, 2012, SOFTWARE PRACT EXPER, V42, P409, DOI 10.1002/spe.1088
   Zaidan BB, 2017, SOFTWARE PRACT EXPER, V47, P1365, DOI 10.1002/spe.2465
   Zheng WB, 2018, C IND ELECT APPL, P1233, DOI 10.1109/ICIEA.2018.8397898
   Zhong X, 2021, IEEE T MULTIMEDIA, V23, P1951, DOI 10.1109/TMM.2020.3006415
NR 35
TC 2
Z9 2
U1 2
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 FEB 26
PY 2023
DI 10.1002/spe.3197
EA FEB 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9J8AE
UT WOS:000940401800001
DA 2024-07-18
ER

PT J
AU Mirampalli, S
   Srirama, SN
   Wankar, R
   Chillarige, RR
AF Mirampalli, Sreenivasu
   Srirama, Satish Narayana
   Wankar, Rajeev
   Chillarige, Raghavendra Rao
TI Hierarchical fuzzy-based Quality of Experience (QoE)-aware application
   placement in fog nodes
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fog computing; fuzzy logic; Hungarian maximization assignment algorithm;
   IoT; quality of experience
ID IOT; OPTIMIZATION
AB Fog computing or a fog network is a decentralized network placed in between data source and the cloud to minimize the network latency issues and thus support in-time service delivery, of Internet of Things (IoT) applications. However, placing computational tasks of IoT applications in fog infrastructure is a challenging task. State of the art focuses on quality of service and quality of experience (QoE) based application placement. In this article, we design hierarchical fuzzy based QoE-aware application placement strategy for mapping IoT applications with compatible instances in the fog network. The proposed method considers user application expectation parameters and metrics of available fog instances, and assigns the priority of applications using hierarchical fuzzy logic. The method later uses Hungarian maximization assignment algorithm to map applications with compatible instances. The simulation results of the proposed policy show better performance over the existing baseline algorithms in terms of resource gain (RG), processing time reduction ratio (PTRR), and similarly network relaxation ratio. When considering 10 applications in the fog network, our proposed method simulation results show 70.00%, 22.44%, 37.83% improvement in RG, and 28.46%, 37.5%, 23.07% improvement in PTRR, when compared with QoE-aware, randomized, FIFO algorithms, respectively.
C1 [Mirampalli, Sreenivasu; Srirama, Satish Narayana; Wankar, Rajeev; Chillarige, Raghavendra Rao] Univ Hyderabad, Sch Comp & Informat Sci, Hyderabad 500046, India.
C3 University of Hyderabad
RP Srirama, SN (corresponding author), Univ Hyderabad, Sch Comp & Informat Sci, Hyderabad 500046, India.
EM satish.srirama@uohyd.ac.in
RI Srirama, Satish Narayana/H-2729-2015
OI Srirama, Satish Narayana/0000-0002-7600-7124
FU Science and Engineering Research Board, India [CRG/2021/003888]; MHRD,
   India [F11/9/2019-U3(A)]
FX Science and Engineering Research Board, India, Grant/Award Number:
   CRG/2021/003888; UoH-IoE by MHRD, India, Grant/Award Number:
   F11/9/2019-U3(A)
CR Aazam M, 2016, 2016 23RD INTERNATIONAL CONFERENCE ON TELECOMMUNICATIONS (ICT), DOI 10.1109/ICT.2016.7500362
   Abd Elaziz M, 2021, FUTURE GENER COMP SY, V124, P142, DOI 10.1016/j.future.2021.05.026
   Adhikari M, 2020, IEEE INTERNET THINGS, V7, P5773, DOI 10.1109/JIOT.2019.2946426
   Anjana Parwat Singh, 2017, Multi-disciplinary Trends in Artificial Intelligence. 11th International Workshop, MIWAI 2017. Proceedings: LNAI 10607, P54, DOI 10.1007/978-3-319-69456-6_5
   [Anonymous], HUNGARIAN MAXIMIZATI
   Baranwal G, 2020, MOBILE NETW APPL, V25, P1816, DOI 10.1007/s11036-020-01563-x
   Brogi A, 2017, IEEE INTERNET THINGS, V4, P1185, DOI 10.1109/JIOT.2017.2701408
   Cardellini V, 2015, 2015 IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATION (ISCC), P271, DOI 10.1109/ISCC.2015.7405527
   Chang CH, 2019, IEEE INT C ELECTR TA, DOI 10.1109/icce-tw46550.2019.8991981
   Eissa MA., 2021, IEEE ACCESS
   Farooq MJ, 2021, IEEE T MOBILE COMPUT, V20, P3395, DOI 10.1109/TMC.2020.2999895
   Feng S., 2020, IEEE T FUZZY SYST
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Hazra A, 2020, IEEE T NETW SCI ENG, V7, P3266, DOI 10.1109/TNSE.2020.3021792
   Hong CH, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18103444
   Jasim MA., 2022, P 2022 IEEE 19 ANN C, P1
   Keane, 2006, Int. J. Comput. Cogn, V4, P18
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Kuipers F, 2010, LECT NOTES COMPUT SC, V6074, P216
   Kumar N, 2021, SOFTWARE PRACT EXPER, V51, P2357, DOI 10.1002/spe.3006
   Liu CC, 2022, IEEE T COMPUT, V71, P3268, DOI 10.1109/TC.2022.3148379
   Ma M, 2021, IEEE T FUZZY SYST, V29, P3186, DOI 10.1109/TFUZZ.2020.3009727
   Mahmud R, 2020, J PARALLEL DISTR COM, V135, P177, DOI 10.1016/j.jpdc.2019.10.001
   Mahmud R, 2019, J PARALLEL DISTR COM, V132, P190, DOI 10.1016/j.jpdc.2018.03.004
   Mann ZA, 2021, COMPUTING, V103, P51, DOI 10.1007/s00607-020-00848-z
   Munusamy A., 2021, IEEE IOT J
   Mushtaq MS., 2017, QUALITY EXPERIENCE P
   Nam H, 2016, IEEE INFOCOM SER
   Nashaat H, 2020, IEEE ACCESS, V8, P111253, DOI 10.1109/ACCESS.2020.3003249
   Roy DG, 2022, J AMB INTEL HUM COMP, DOI 10.1007/s12652-021-03644-5
   Santos H, 2020, COMPUT NETW, V177, DOI 10.1016/j.comnet.2020.107288
   Skarlat O, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P89, DOI 10.1109/ICFEC.2017.12
   Sriraghavendra Meeniga, 2022, Energy Conservation Solutions for Fog-Edge Computing Paradigms. Lecture Notes on Data Engineering and Communications Technologies (74), P21, DOI 10.1007/978-981-16-3448-2_2
   Tsipis A., 2020, 2020 5 S E EUROPE DE, P1
   Zahedi MH, 2020, IRAN J FUZZY SYST, V17, P29
NR 35
TC 2
Z9 2
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 263
EP 282
DI 10.1002/spe.3147
EA SEP 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000850231000001
DA 2024-07-18
ER

PT J
AU Dai, F
   Liu, GZ
   Xu, XL
   Mo, Q
   Qiang, ZP
   Liang, ZH
AF Dai, Fei
   Liu, Guozhi
   Xu, Xiaolong
   Mo, Qi
   Qiang, Zhenping
   Liang, Zhihong
TI Compatibility checking for cyber-physical systems based on microservices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compatibility; cyber-physical systems; microservices architecture;
   stability; unbounded buffers
ID VERIFICATION; WEB
AB Microservices architecture provides a promising solution for developing sustainable cyber-physical systems (CPSs). However, checking the compatibility of CPSs over a set of microservices communicating asynchronously via unbounded buffers are undecidable due to their infinite state spaces. In this article, we propose a new approach for checking the compatibility of CPSs with infinite state spaces without restricting the size of buffers or the number of communication cycles. First, we integrate CPSs with microservice architecture and design the system architecture for building CPSs over a set of cyber-physical microservices with unbounded buffers. Second, we model CPSs composed of asynchronously communicating cyber-physical microservices via FIFO buffers as labelled transition systems. Third, we adopt the stability notion and present a sufficient condition for checking the unspecified receptions of CPSs through stability checking. Finally, we implement our approach in Process Analysis Toolkit for automatic compatibility checking and conduct experiments to show our approach is effective and efficient.
C1 [Dai, Fei; Liu, Guozhi; Qiang, Zhenping; Liang, Zhihong] Southwest Foreqi Univ, Sch Big Data & Intelligent Engn, Kunming, Yunnan, Peoples R China.
   [Xu, Xiaolong] Nanjing Univ Informat Sci & Technol, Sch Comp & Software, Nanjing, Peoples R China.
   [Mo, Qi] Yunnan Univ, Sch Software, Kunming, Yunnan, Peoples R China.
C3 Nanjing University of Information Science & Technology; Yunnan
   University
RP Xu, XL (corresponding author), Nanjing Univ Informat Sci & Technol, Sch Comp & Software, Nanjing, Peoples R China.
EM njuxlxu@gmail.com
RI Qiang, Zhenping/JEO-7966-2023; Xu, Xiaolong/U-2547-2019
OI Xu, Xiaolong/0000-0003-4879-9803; Liu, Guozhi/0000-0001-9125-2518; dai,
   fei/0000-0001-6469-357X
FU Project of Key Science Foundation of Yunnan Province [202101AS070007];
   Dou Wanchun Expert Workstation of Yunnan Province [202105AF150013];
   Science and Technology Youth Lift talents of Yunnan Province; Project of
   Scientific Research Fund Project of Yunnan Education Department
   [2022Y561]
FX Project of Key Science Foundation of Yunnan Province, Grant/Award
   Number: 202101AS070007; DouWanchun Expert Workstation of Yunnan
   Province, Grant/Award Number: 202105AF150013; Science and Technology
   Youth Lift talents of Yunnan Province; Project of Scientific Research
   Fund Project of Yunnan Education Department, Grant/Award Number:
   2022Y561
CR Akroun L, 2018, FORM METHOD SYST DES, V52, P260, DOI 10.1007/s10703-017-0285-8
   Basu S., 2014, ACM/IEEE International Conference on Automated Software Engineering, P743
   Basu S, 2016, THEOR COMPUT SCI, V656, P60, DOI 10.1016/j.tcs.2016.09.023
   Bordeaux L, 2005, LECT NOTES COMPUT SC, V3324, P15
   Bouajjani A, 2014, INT J SOFTW TOOLS TE, V16, P127, DOI 10.1007/s10009-013-0276-z
   Brings J, 2017, INT REQUIR ENG CONF, P556, DOI 10.1109/RE.2017.45
   Canal C., 2016, P IT C SOFW ENG FORM, P321
   Cintuglu MH, 2017, IEEE COMMUN SURV TUT, V19, P446, DOI 10.1109/COMST.2016.2627399
   Dahmani D., 2017, PNSE PETRI NETS, P69
   Dai F, 2020, COMPLEXITY, V2020, DOI 10.1155/2020/2128793
   Dai F, 2020, IEEE ACCESS, V8, P53215, DOI 10.1109/ACCESS.2020.2980891
   Darondeau P, 2008, LECT NOTES COMPUT SC, V5201, P310, DOI 10.1007/978-3-540-85361-9_26
   Denielou PM, 2010, LECT NOTES COMPUT SC, V6269, P343, DOI 10.1007/978-3-642-15375-4_24
   Durán F, 2012, SCI COMPUT PROGRAM, V77, P870, DOI 10.1016/j.scico.2011.03.009
   Fu X, 2004, THEOR COMPUT SCI, V328, P19, DOI 10.1016/j.tcs.2004.07.004
   Ganty P, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2160910.2160915
   Genest B, 2006, J COMPUT SYST SCI, V72, P617, DOI 10.1016/j.jcss.2005.09.007
   Gudemann Matthias, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P238, DOI 10.1007/978-3-642-33386-6_20
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Li JL, 2018, IEEE T SUST COMPUT, V3, P112, DOI 10.1109/TSUSC.2017.2717807
   Mena M, 2021, J UNIVERS COMPUT SCI, V27, P734, DOI 10.3897/jucs.70325
   Mo Q, 2022, IEEE T SERV COMPUT, V15, P752, DOI 10.1109/TSC.2019.2961346
   Ouederni M., 2013, COMPATIBILITY CHECKI, P310
   Poizat P., 2012, P 27 ANN ACM S APPL, P1927, DOI [10.1145/2245276.2232095, DOI 10.1145/2245276.2232095]
   Rathore MM, 2021, SUSTAINABILITY-BASEL, V13, DOI 10.3390/su13147606
   Salaün G, 2012, IEEE T SERV COMPUT, V5, P290, DOI 10.1109/TSC.2011.9
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Thramboulidis Kleanthis, 2018, 2018 IEEE Industrial Cyber-Physical Systems (ICPS). Proceedings, P232, DOI 10.1109/ICPHYS.2018.8387665
   Wu M, 2019, 2019 FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD), P129, DOI [10.23919/fmcad.2019.8894264, 10.23919/FMCAD.2019.8894264]
   Xie GQ, 2018, IEEE T IND INFORM, V14, P5447, DOI 10.1109/TII.2018.2854762
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2022, IEEE T SERV COMPUT, V15, P16, DOI 10.1109/TSC.2019.2919823
NR 32
TC 0
Z9 0
U1 2
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2022
VL 52
IS 11
BP 2393
EP 2410
DI 10.1002/spe.3131
EA JUL 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5C7YI
UT WOS:000833602100001
DA 2024-07-18
ER

PT J
AU Ahmed, H
   Ismail, MA
AF Ahmed, Hameeza
   Ismail, Muhammad Ali
TI Toward a novel engine for compiler optimization space exploration of big
   data workloads
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data (3Vs); compiler; design space exploration; optimizations
ID BENCHMARK SUITE; CHALLENGES; INTERNET; THINGS
AB Recently, big data specific technologies have been emerging, including domain-specific languages, software frameworks, databases, third-party libraries, and so forth. These techniques are successful in concealing the low-level details by producing high-level code, which is passed through the conventional compilation cycle for generating hardware operable code. Several optimization opportunities exist in the compiler which can assist in meeting the processing deadlines of big data workloads, through optimized machine code. However, the existing iterative compilation techniques are not enough for the exploration of big data applications. In this regard, a novel engine has been presented for exploiting the compiler optimization space of big data workloads. The engine is comprised of training and testing phases. During the training stage, the big data application is optimized with Mitigates the Compiler Phase-ordering (MiCOMP) and genetic algorithm (GA) optimization sequences, which are executed with train datasets. In the testing stage, the test datasets are executed only for the best 300 optimization sequences discovered at the training stage. The proposed engine has been tested with graph mining, machine learning, and text search categories of big data applications using a wide range of real-world and synthetic datasets. Overall, the engine is 56.8x, 47x, and 9.8x faster than Iterative Optimization for the Data Center (IODC), MiCOMP, and GA respectively in exploiting the compiler search space for big data workloads. Further, the integration of best-10 and best-3 techniques with the engine brings a speedup of 5.9x and 7.8x. The compiler level exploitation of general-purpose machines incurs no extra overhead, no heavy computing, and no personnel cost. Also, the overall performance of big data specialized software solutions can be enhanced by compiling their high-level code with suitable compiler optimizations.
C1 [Ahmed, Hameeza; Ismail, Muhammad Ali] NED Univ Engn & Technol, Informat Syst Engn, Karachi, Sindh, Pakistan.
C3 Ned University of Engineering & Technology
RP Ahmed, H (corresponding author), NED Univ Engn & Technol, Informat Syst Engn, Karachi, Sindh, Pakistan.
EM hameeza@neduet.edu.pk
CR Ahmed H, 2020, IEEE ACCESS, V8, P186304, DOI 10.1109/ACCESS.2020.3030562
   Ainsworth S, 2019, ACM T COMPUT SYST, V36, DOI 10.1145/3319393
   Almagor L, 2004, ACM SIGPLAN NOTICES, V39, P231, DOI 10.1145/998300.997196
   Andión JM, 2013, PARALLEL COMPUT, V39, P442, DOI 10.1016/j.parco.2013.04.003
   [Anonymous], 2020, SNAP NETWORK DATASET
   [Anonymous], 2020, NETWORK REPOSITORY
   [Anonymous], 2006, REAL TIME DIGITAL SI, V1, P1
   [Anonymous], 2020, UCI Machine Learning Repository
   Ashouri AH, 2018, SPRINGERBR APPL SCI, P23, DOI 10.1007/978-3-319-71489-9_2
   Ashouri AH, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3197978
   Ashouri AH, 2017, ACM T ARCHIT CODE OP, V14, DOI 10.1145/3124452
   Ashouri AH, 2016, ACM T ARCHIT CODE OP, V13, DOI 10.1145/2928270
   Ashouri AH, 2013, IEEE INT CONF VLSI, P124, DOI 10.1109/VLSI-SoC.2013.6673262
   Ashouri Amir Hossein, 2016, COMPILER AUTOTUNING
   Assunçao MD, 2015, J PARALLEL DISTR COM, V79-80, P3, DOI 10.1016/j.jpdc.2014.08.003
   Bagozi A, 2017, LECT NOTES COMPUT SC, V10253, P264, DOI 10.1007/978-3-319-59536-8_17
   Basanta-Val Pablo, 2016, IEEE Transactions on Big Data, V2, P310, DOI 10.1109/TBDATA.2016.2622719
   Belcastro L, 2019, INT J PARALLEL EMERG, V34, P632, DOI 10.1080/17445760.2017.1422501
   Bello-Orgaz G, 2016, INFORM FUSION, V28, P45, DOI 10.1016/j.inffus.2015.08.005
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Buchty R, 2012, CONCURR COMP-PRACT E, V24, P663, DOI 10.1002/cpe.1904
   Ceng JJ, 2005, DES AUT TEST EUROPE, P1150, DOI 10.1109/DATE.2005.88
   Chan Y, 2017, IEEE T BIG DATA, V3, P262, DOI 10.1109/TBDATA.2017.2666201
   Che SA, 2009, I S WORKL CHAR PROC, P44, DOI 10.1109/IISWC.2009.5306797
   Chen CLP, 2014, INFORM SCIENCES, V275, P314, DOI 10.1016/j.ins.2014.01.015
   Chen M, 2014, MOBILE NETW APPL, V19, P171, DOI 10.1007/s11036-013-0489-0
   Chen Y, 2012, ACM T ARCHIT CODE OP, V9, DOI 10.1145/2355585.2355594
   Chi MM, 2016, P IEEE, V104, P2207, DOI 10.1109/JPROC.2016.2598228
   Cooper KD, 1999, ACM SIGPLAN NOTICES, V34, P1, DOI 10.1145/315253.314414
   de Souza Xavier TC, 2018, COMPUT INFORM, V37, P165, DOI 10.4149/cai_2018_1_165
   Emani CK, 2015, COMPUT SCI REV, V17, P70, DOI 10.1016/j.cosrev.2015.05.002
   Erling O, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P619, DOI 10.1145/2723372.2742786
   Fang SD, 2015, ACM T ARCHIT CODE OP, V12, DOI 10.1145/2739048
   Ferreira R., 2000, P SBAC PAD CIT
   Gao WL, 2018, 27TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES (PACT 2018), DOI 10.1145/3243176.3243190
   Ge M, 2018, FUTURE GENER COMP SY, V87, P601, DOI 10.1016/j.future.2018.04.053
   Georgiou K, 2022, COMPUT J, V65, DOI 10.1093/comjnl/bxaa103
   Georgiou K, 2018, SCOPES '18: PROCEEDINGS OF THE 21ST INTERNATIONAL WORKSHOP ON SOFTWARE AND COMPILERS FOR EMBEDDED SYSTEMS, P35, DOI 10.1145/3207719.3207727
   Hall M, 2009, COMMUN ACM, V52, P60, DOI 10.1145/1461928.1461946
   Hashem IAT, 2015, INFORM SYST, V47, P98, DOI 10.1016/j.is.2014.07.006
   Hirzel M, 2013, IBM J RES DEV, V57, DOI 10.1147/JRD.2013.2243535
   Hoste K, 2008, INT SYM CODE GENER, P165
   Inoubli W, 2018, FUTURE GENER COMP SY, V86, P546, DOI 10.1016/j.future.2018.04.032
   Jin XL, 2015, BIG DATA RES, V2, P59, DOI 10.1016/j.bdr.2015.01.006
   Jirkovsky V, 2017, IEEE T IND INFORM, V13, P660, DOI 10.1109/TII.2016.2596101
   Kennedy K, 2004, INT J HIGH PERFORM C, V18, P441, DOI 10.1177/1094342004048537
   Khan N, 2014, SCI WORLD J, DOI 10.1155/2014/712826
   Kiriansky V, 2016, 2016 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURE AND COMPILATION TECHNIQUES (PACT), P299, DOI 10.1145/2967938.2967948
   Kitchin Rob., 2017, The SAGE Handbook of Social Media Research Methods, P27
   KOPI, 2020, WIK TEXT DUMPS
   Kulkarni P, 2004, ACM SIGPLAN NOTICES, V39, P171, DOI 10.1145/996893.996863
   Kune R, 2016, SOFTWARE PRACT EXPER, V46, P79, DOI 10.1002/spe.2374
   Lokuciejewski P, 2011, SOFTWARE PRACT EXPER, V41, P1437, DOI 10.1002/spe.1079
   Lopez MG, 2016, PROCEEDINGS OF WACCPD 2016: THIRD WORKSHOP ON ACCELERATOR PROGRAMMING USING DIRECTIVES, P13, DOI [10.1109/WACCPD.2016.006, 10.1109/WACCPD.2016.9]
   Martins LGA, 2016, ACM T ARCHIT CODE OP, V13, DOI 10.1145/2883614
   Martins LGA, 2014, ACM SIGPLAN NOTICES, V49, P63, DOI [10.1145/2666357.2597821, 10.1145/2597809.2597821]
   Nai LF, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807626
   Nobre R., 2015, Proceedings of the 18th International Workshop on Software and Compilers for Embedded Systems, SCOPES '15, P58
   Nobre R., 2018, P EUR C PAR PROC, P494
   Nobre R, 2016, ACM SIGPLAN NOTICES, V51, P21, DOI [10.1145/2907950.2907959, 10.1145/2980930.2907959]
   Oussous A, 2018, J KING SAUD UNIV-COM, V30, P431, DOI 10.1016/j.jksuci.2017.06.001
   Pallister J, 2015, COMPUT J, V58, P95, DOI 10.1093/comjnl/bxt129
   Purini S, 2013, ACM T ARCHIT CODE OP, V9, DOI 10.1145/2400682.2400715
   Rao TR, 2019, KNOWL INF SYST, V60, P1165, DOI 10.1007/s10115-018-1248-0
   Rodríguez-Mazahua L, 2016, J SUPERCOMPUT, V72, P3073, DOI 10.1007/s11227-015-1501-1
   Sakr S, 2017, IT PROF, V19, P34, DOI 10.1109/MITP.2017.6
   Schiller Benjamin, 2016, Appl Netw Sci, V1, P9, DOI 10.1007/s41109-016-0011-2
   Sodani A, 2016, IEEE MICRO, V36, P34, DOI 10.1109/MM.2016.25
   Thomas S, 2014, I S WORKL CHAR PROC, P76, DOI 10.1109/IISWC.2014.6983043
   Triantafyllis S, 2003, INT SYM CODE GENER, P204, DOI 10.1109/CGO.2003.1191546
   Tumeo A, 2015, COMPUTER, V48, P14, DOI 10.1109/MC.2015.233
   Wang L, 2014, INT S HIGH PERF COMP, P488, DOI 10.1109/HPCA.2014.6835958
   Wang M, 2018, FUTURE GENER COMP SY, V87, P580, DOI 10.1016/j.future.2018.01.047
   Woller, 2014, EFFICIENT PREOPTIMIZ
   Wongthongtham P, 2017, COMPUT COMMUN NETW S, P41, DOI 10.1007/978-3-319-70102-8_3
   Yoo RM, 2009, I S WORKL CHAR PROC, P198, DOI 10.1109/IISWC.2009.5306783
   Zhang H, 2015, IEEE T KNOWL DATA EN, V27, P1920, DOI 10.1109/TKDE.2015.2427795
   Zhang YQ, 2016, P IEEE, V104, P2114, DOI 10.1109/JPROC.2016.2591592
   Zheng X, 2017, IEEE T IND INFORM, V13, P2048, DOI 10.1109/TII.2017.2679741
NR 79
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2022
VL 52
IS 5
BP 1262
EP 1293
DI 10.1002/spe.3065
EA DEC 2021
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0G4IQ
UT WOS:000733739200001
DA 2024-07-18
ER

PT J
AU Venkateswaran, S
   Bauskar, A
   Sarkar, S
AF Venkateswaran, Sreekrishnan
   Bauskar, Adwait
   Sarkar, Santonu
TI Architecture of a time-sensitive provisioning system for cloud-native
   software
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bare metal servers; cloud-native applications; committed use instances;
   hyperscalers; multiclouds; public clouds; reliable software
   architecture; reserved instances; time-sensitive provisioning
ID ALLOCATION
AB Application development paradigms and composition of technology services are decisively moving in the direction of hybrid and multi clouds. Enterprises are stitching new cloud-native business models that leverage containerized multi-tier microservice architecture, heterogeneity of cloud deployment models, and diversity of cloud providers. Scalability and resiliency are key components of this new world architecture, but these are also functions of the predictability of provisioning the underpinning compute instances on cloud. Thus, a major challenge to surmount before complex multicloud aware applications can be designed is the problem of unpredictable latencies associated with the provisioning of compute services on cloud. In the first part of this article, we develop a technique for time-sensitive provisioning of virtual compute on demand, while also allowing deprovisioning on demand. Using the technique we propose, a cloud broker will be able to operate on a pool of reserved instances sourced from cloud providers and multiplex them profitably across cloud customers with associated provisioning time guarantees, but without usage commitment restrictions. We articulate this challenge in the form of the Reserved Instance Allocation Problem (RIAP), which we first prove to be NP-hard. We then design a heuristic-based method to solve the intractable RIAP in polynomial time. We evaluate the effectiveness of our heuristic-based mechanism through a combination of deep simulations and practical validation on mainstream public clouds. We demonstrate that our algorithm consistently yields a high profit-to-investment ratio for a broker who seeks to operate a commerce of virtual machines with time-sensitive provisioning. In the second part of this article, we tackle the problem of unpredictable provisioning latencies in bare metal commerce. We build and evaluate an allocation model to calculate optimal supporting bare metal inventory to maximize cost-sensitive fulfillment of bare metal provisioning requests in a time-sensitive manner.
C1 [Venkateswaran, Sreekrishnan] Kyndryl Corp, Bangalore, Karnataka, India.
   [Venkateswaran, Sreekrishnan] IBM Corp, Bangalore, Karnataka, India.
   [Bauskar, Adwait] Georgia Inst Technol, Atlanta, GA 30332 USA.
   [Sarkar, Santonu] ABB Corp Res, Bangalore, Karnataka, India.
C3 International Business Machines (IBM); University System of Georgia;
   Georgia Institute of Technology; ABB
RP Venkateswaran, S (corresponding author), Kyndryl Corp, Bangalore, Karnataka, India.
EM krishhna@gmail.com
CR Anselmi J, 2017, ACM TRANS MODELING P, V2, DOI 10.1145/3086574
   Bagchi S., 2006, P 1 INT C PERF EV ME
   Barker A, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P1029, DOI 10.1109/CLOUD.2015.144
   Begam R, 2015, IEEE I C EMBED SOFTW, P660, DOI 10.1109/HPCC-CSS-ICESS.2015.142
   Bhatt A, 2020, SOFTWARE PRACT EXPER, V50, P1381, DOI 10.1002/spe.2819
   Buyya R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241737
   Casalicchio E, 2018, FUTURE GENER COMP SY, V78, P211, DOI 10.1016/j.future.2016.11.025
   Chauhan SS, 2019, J PARALLEL DISTR COM, V133, P193, DOI 10.1016/j.jpdc.2018.08.001
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Farokhi S, 2014, IEEE ACM INT SYMP, P591, DOI 10.1109/CCGrid.2014.62
   Fowley F, 2018, IEEE T CLOUD COMPUT, V6, P358, DOI 10.1109/TCC.2016.2537333
   Fukai T, 2021, IEEE T CLOUD COMPUT, V9, P226, DOI 10.1109/TCC.2018.2848981
   Ghazouani S, 2020, SOFTWARE PRACT EXPER, V50, P447, DOI 10.1002/spe.2789
   Goher SZ, 2018, FUTURE GENER COMP SY, V81, P203, DOI 10.1016/j.future.2017.09.080
   Iyoob I, 2013, SERV SCI, V5, P88, DOI 10.1287/serv.1120.0038
   Jatoth C, 2019, SOFT COMPUT, V23, P4701, DOI 10.1007/s00500-018-3120-2
   Jiang YX, 2013, IEEE T NETW SERV MAN, V10, P312, DOI 10.1109/TNSM.2013.051913.120278
   Kim K., 2009, P ASME TURBO EXPO 20, P1, DOI DOI 10.1145/1657120.1657121
   Klancnik T, 2010, INT REV COMPUT SOFTW, V5, P1
   Korte B, 2006, COMBINATORIAL OPTIMI, P425
   Mashayekhy L, 2015, IEEE T PARALL DISTR, V26, P2386, DOI 10.1109/TPDS.2014.2355228
   Menasce DA., 2009, PROC INT CMG C
   Mohamed AM, 2020, SOFTWARE PRACT EXPER, V50, P925, DOI 10.1002/spe.2803
   Mohan A, 2018, INT CONF CLOUD ENG, P61, DOI 10.1109/IC2E.2018.00028
   Nejad MM, 2015, IEEE T PARALL DISTR, V26, P594, DOI 10.1109/TPDS.2014.2308224
   Omote Y, 2015, ACM SIGPLAN NOTICES, V50, P145, DOI [10.1145/2694344.2694349, 10.1145/2775054.2694349]
   Pawluk P., 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P891, DOI 10.1109/CLOUD.2012.24
   Pillai PS, 2016, IEEE SYST J, V10, P637, DOI 10.1109/JSYST.2014.2314861
   Ptolemaeus Claudius., 2014, System design, modeling, and simulation: using Ptolemy II
   Rad P, 2016, IEEE CONF CLOUD COMP, P153, DOI 10.1109/CCEM.2015.13
   Rodrigues LR, 2019, SOFTWARE PRACT EXPER, V49, P1331, DOI 10.1002/spe.2723
   Venkateswaran S., 2020, IEEE ICC
   Venkateswaran S, 2019, IEEE INT CONF CLOUD, P447, DOI 10.1109/CLOUD.2019.00077
   Wei-Yu Lin, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P591, DOI 10.1109/CCGRID.2010.92
   Yexi Jiang, 2012, 2012 IEEE International Conference on Services Computing (SCC), P73, DOI 10.1109/SCC.2012.8
   Yuan-Kan Lu, 2012, 2012 Eighth International Conference on Intelligent Information Hiding and Multimedia Signal Processing (IIH-MSP), P331, DOI 10.1109/IIH-MSP.2012.86
   Yue WY, 2014, MATH PROBL ENG, V2014, DOI 10.1155/2014/613719
NR 38
TC 0
Z9 0
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2022
VL 52
IS 5
BP 1170
EP 1198
DI 10.1002/spe.3059
EA DEC 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0G4IQ
UT WOS:000728435700001
DA 2024-07-18
ER

PT J
AU Shahpar, Z
   Bardsiri, VK
   Bardsiri, AK
AF Shahpar, Zahra
   Bardsiri, Vahid Khatibi
   Bardsiri, Amid Khatibi
TI An evolutionary ensemble analogy-based software effort estimation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE analogy-based estimation; ensemble effort estimation; genetic algorithm;
   software effort estimation
ID COST ESTIMATION; OPTIMIZATION; ALGORITHM; SELECTION; WEIGHTS
AB Analogy-based estimation (ABE) is the most commonly applied method for estimating using software. Although there are several analogy-based estimation techniques, there is no consistent conclusion of which technique is the best in all circumstances. Therefore, this article presents an evolutionary ensemble ABE (EEABE) for software cost estimation. Ensemble effort estimation (EEE) models forecast software development endeavors through using multiple estimation methods. In this article, EEABE combines GA as an evolutionary algorithm with six ABE models. The proposed method has been evaluated on four well-known datasets comprising Maxwell, Albrecht, Kemerer, and Desharnais, by the k-fold cross-validation technique and based on the performance criteria of MRE, MMRE, MDMRE, BMMRE, and PRED(0.25). The simulation results demonstrate that the use of EEABE increases the accuracy of estimation and reduces the cost. Besides, EEABE is a flexible and adaptable model with any type of dataset and software development project, and it has been optimized with the possibility of using various ABE techniques.
C1 [Shahpar, Zahra] Islamic Azad Univ, Dept Comp Engn, Kerman Branch, Kerman, Iran.
   [Bardsiri, Vahid Khatibi; Bardsiri, Amid Khatibi] Islamic Azad Univ, Dept Comp Engn, Bardsir Branch, Bardsir, Iran.
C3 Islamic Azad University; Islamic Azad University
RP Bardsiri, VK (corresponding author), Islamic Azad Univ, Dept Comp Engn, Bardsir Branch, Bardsir, Iran.
EM khatibi78@yahoo.com
OI Shahpar, Zahra/0000-0002-2881-7595; Khatibi Bardsiri,
   Amid/0000-0001-9640-498X
CR Abnanel I., P 45H EUROM C SOFTW
   Akritidis A., AKRITEAN DISTANCE
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 2009, INT S SOFTW REL ENG
   Anusha, 2013, INT J EMERG TRENDS T, V1, P1
   Azzeh M, 2014, INT J ADV COMPUT SC, V5, P6
   Bardsiri A. K., 2014, INT J COMPUTER SCI E, V3, P46
   Bardsiri AK, 2020, INT J NONLINEAR ANAL, V11, P85, DOI 10.22075/ijnaa.2020.4384
   Bardsiri VK, 2014, EMPIR SOFTW ENG, V19, P857, DOI 10.1007/s10664-013-9241-4
   Benala TR, 2018, SWARM EVOL COMPUT, V38, P158, DOI 10.1016/j.swevo.2017.07.009
   Boetticher G., 2012, PROMISE REPOSITORY E
   Cantrell CD, 2000, Modern mathematical methods for physicists and engineers
   Chao-Jung Hsu, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P98, DOI 10.1109/COMPSACW.2010.27
   De Maesschalck R, 2000, CHEMOMETR INTELL LAB, V50, P1, DOI 10.1016/S0169-7439(99)00047-7
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   Elish MO, 2013, 2013 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING (CIDM), P316, DOI 10.1109/CIDM.2013.6597253
   Hayes W.L., 1994, Statistics, V5th
   Hosni M., 2017, P 27 INT WORKSH SOFT, P207
   Hosni M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2343
   Hosni M, 2016, INT CONF SOFT COMP, P174, DOI 10.1109/ISCMI.2016.15
   Hosni M, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2117
   Hosni M, 2018, SOFT COMPUT, V22, P5977, DOI 10.1007/s00500-017-2945-4
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Idri A, 2016, INT J INTELL SYST, V31, P128, DOI 10.1002/int.21748
   Keung J, 2009, IEEE AUS SOFT ENGR, P327, DOI 10.1109/ASWEC.2009.32
   Khatibi E, 2015, IET SOFTW, V9, P109, DOI 10.1049/iet-sen.2014.0169
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Li YF, 2007, IN C IND ENG ENG MAN, P1256, DOI 10.1109/IEEM.2007.4419393
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Li YF, 2008, IN C IND ENG ENG MAN, P1542, DOI 10.1109/IEEM.2008.4738130
   Li YF, 2009, EXPERT SYST APPL, V36, P5921, DOI 10.1016/j.eswa.2008.07.062
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Mahmood Y, 2022, SOFTWARE PRACT EXPER, V52, P39, DOI 10.1002/spe.3009
   Mendes E, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/ISESE.2003.1237969
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Mittas N, 2008, INFORM SOFTWARE TECH, V50, P221, DOI 10.1016/j.infsof.2007.04.001
   Moosavi SHS, 2017, ENG APPL ARTIF INTEL, V60, P1, DOI 10.1016/j.engappai.2017.01.006
   Nassif AB, 2019, COMPUT INTEL NEUROSC, V2019, DOI 10.1155/2019/8367214
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Pal SankarK., 2004, FDN SOFT CASE BASED
   Palaniswamy SK, 2021, J AMB INTEL HUM COMP, V12, P6579, DOI 10.1007/s12652-020-02277-4
   Pandey P, 2013, INT C ADV COMPUT COM, P16, DOI 10.1109/ACCT.2013.13
   Ramya R, 2019, CLUSTER COMPUT, V22, P12147, DOI 10.1007/s10586-017-1568-y
   Shah MA, 2020, IEEE ACCESS, V8, P58402, DOI 10.1109/ACCESS.2020.2980236
   Shahpar Z, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.6358
   Shekhar S., 2016, International Journal of Computer Applications, V141, P31, DOI DOI 10.5120/IJCA2016909867
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P181
   Shukla S, 2021, ENASE: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P205, DOI 10.5220/0010405002050212
   Shukla S, 2019, IEEE WORLD CONGR SER, P339, DOI 10.1109/SERVICES.2019.00094
   Vinaykumar K., 2009, HDB RES MACHINE LEAR, P499, DOI DOI 10.4018/978-1-60566-766-9
   Wu DS, 2018, SOFT COMPUT, V22, P5299, DOI 10.1007/s00500-017-2985-9
NR 53
TC 2
Z9 2
U1 4
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 929
EP 946
DI 10.1002/spe.3040
EA OCT 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000710885200001
DA 2024-07-18
ER

PT J
AU Aghazadeh, R
   Shahidinejad, A
   Ghobaei-Arani, M
AF Aghazadeh, Rafat
   Shahidinejad, Ali
   Ghobaei-Arani, Mostafa
TI Proactive content caching in edge computing environment: A review
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE edge caching; edge computing; heuristic-based; machine learning;
   model-based; proactive caching; systematic review
ID RESOURCE-ALLOCATION; CELLULAR NETWORKS; LEARNING APPROACH; RESEARCH
   ISSUES; MOBILE; STRATEGY; OPTIMIZATION; FRAMEWORK; SYSTEMS; SERVICE
AB Edge computing environment provides processing capability and computing at the network edge and close to users. Edge equipment includes small data centers that locally perform process and content delivery. Therefore, edge equipment management has received much attention due to the rapid growth of information and resources limitations. The content caching and proactive caching techniques are management methods of edge equipment resources. We recently witnessed the development of proactive caching mechanisms that have a crucial enabler in improving heavy traffic, energy, and bandwidth. Also, it has huge potential to increase the quick response time to users' requests that today, these services are demanded by many users and applications. This article prepares a systematic literature review content caching approach in the edge computing environment. The purpose of this study is to survey the research done on the proactive caching strategies in the edge computing environment to identify subjects that must be emphasized more in current and future research paths. This research has studied 71 articles divided into three classes: model-based, machine-learning-based, and heuristic-based. Next, we discuss content caching approaches based on critical factors such as performance metrics, case studies, utilized techniques, assessment tools, advantages, and disadvantages. Finally, open issues and challenges are presented, and the survey is concluded.
C1 [Aghazadeh, Rafat; Shahidinejad, Ali; Ghobaei-Arani, Mostafa] Islamic Azad Univ, Qom Branch, Dept Comp Engn, Qom, Iran.
C3 Islamic Azad University
RP Shahidinejad, A (corresponding author), Islamic Azad Univ, Qom Branch, Dept Comp Engn, Qom, Iran.
EM a.shahidinejad@qom-iau.ac.ir; m.ghobaei@qom-iau.ac.ir
RI Shahidinejad, Ali/V-5523-2019; Ghobaei-Arani, Mostafa/K-5058-2015
OI Shahidinejad, Ali/0000-0003-4856-9119; Ghobaei-Arani,
   Mostafa/0000-0003-2639-0900
CR Abani N, 2017, PROCEEDINGS OF THE 4TH ACM CONFERENCE ON INFORMATION-CENTRIC NETWORKING (ICN 2017), P88, DOI 10.1145/3125719.3125728
   Abouaomar A., 2017, P 2017 INT C WIRELES, P1
   Ahmad F, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10186145
   Ale L, 2019, IEEE INTERNET THINGS, V6, P5520, DOI 10.1109/JIOT.2019.2903245
   [Anonymous], 2019, P 2019 IEEECIC INT C
   Antonogiorgakis D., 2019, ARXIV PREPRINT ARXIV
   Assila B, 2023, INT J COMMUN SYST, V36, DOI 10.1002/dac.4358
   Baccour E., 2019, 2019 IEEE WIR COMM N, P1
   Bastug E., 2016, 5G APPL REQUIREMENTS, P78, DOI DOI 10.1002/9781118979846.CH6
   Chang Z, 2018, IEEE WIREL COMMUN, V25, P28, DOI 10.1109/MWC.2018.1700317
   Chen T, 2019, IEEE COMMUN LETT, V23, P1538, DOI 10.1109/LCOMM.2019.2924422
   Chirivella-Perez E, 2020, SOFTWARE PRACT EXPER, V50, P741, DOI 10.1002/spe.2681
   Costa FR, 2019, FUTURE GENER COMP SY, V93, P143, DOI 10.1016/j.future.2018.10.031
   Cui LZ, 2022, IEEE INTERNET THINGS, V9, P14151, DOI 10.1109/JIOT.2020.3014370
   de Assunçao MD, 2018, J NETW COMPUT APPL, V103, P1, DOI [10.1016/j.jnca.2017.12.001, 10.1016/j.jnea.2017.12.001]
   Dehghan M, 2015, IEEE INFOCOM SER
   di Pietro N, 2018, EUR SIGNAL PR CONF, P792, DOI 10.23919/EUSIPCO.2018.8553086
   Du BQ, 2021, INTERNET TECHNOL LET, V4, DOI 10.1002/itl2.208
   Ekici, 2020, P 21 INT S THEORY AL, P121
   Elbamby MS, 2018, EURASIP J WIREL COMM, DOI 10.1186/s13638-018-1218-y
   Fan S., 2020, IEEE WCNC, P1
   Fan XQ, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20061582
   Fekih A, 2018, IEEE INT CONF SERV, P81, DOI 10.1109/SOCA.2018.00018
   Friderikos V., 2018, ARXIV PREPRINT ARXIV
   Gao N, 2020, IEEE T COMMUN, V68, P569, DOI 10.1109/TCOMM.2019.2947918
   Gedeon J, 2019, IEEE ACCESS, V7, P152847, DOI 10.1109/ACCESS.2019.2948399
   Goian HS, 2019, IEEE ACCESS, V7, P27699, DOI 10.1109/ACCESS.2019.2898734
   Goudarzi M, 2021, IEEE T MOBILE COMPUT, V20, P1298, DOI 10.1109/TMC.2020.2967041
   Gu HX, 2020, IEEE ACCESS, V8, P142747, DOI 10.1109/ACCESS.2020.3009683
   Gunduz D., 2017, P 2017 15 INT S MOD, P1
   Guo H, 2020, FUTURE GENER COMP SY, V106, P22, DOI 10.1016/j.future.2019.12.050
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hamidouche K, 2014, 2014 12TH INTERNATIONAL SYMPOSIUM ON MODELING AND OPTIMIZATION IN MOBILE, AD HOC, AND WIRELESS NETWORKS (WIOPT), P569, DOI 10.1109/WIOPT.2014.6850348
   Han SQ, 2020, IEEE WIREL COMMUN, V27, P133, DOI 10.1109/MWC.001.1900554
   Hao H, 2018, IEEE CONF COMPUT, P450
   Hou L, 2019, IEEE INTERNET THINGS, V6, P4512, DOI 10.1109/JIOT.2018.2883762
   Hou TT, 2018, INT J COMMUN SYST, V31, DOI 10.1002/dac.3706
   Hsu H, 2016, IEEE COMMUN LETT, V20, P145, DOI 10.1109/LCOMM.2015.2499193
   Hu J, 2019, ELECTRONICS-SWITZ, V8, DOI 10.3390/electronics8010050
   Hu ZW, 2016, IEEE COMMUN MAG, V54, P37, DOI 10.1109/MCOM.2016.7537175
   Huang DL, 2020, IEEE T WIREL COMMUN, V19, P62, DOI 10.1109/TWC.2019.2941201
   Huang W, 2019, IEEE T WIREL COMMUN, V18, P2903, DOI 10.1109/TWC.2019.2904261
   Ji H., 2017, P INT C COMM NETW CH, P433
   Jiang W, 2020, IEEE T FUZZY SYST, V28, P1585, DOI 10.1109/TFUZZ.2019.2918999
   Jiang YX, 2020, IEEE T WIREL COMMUN, V19, P8442, DOI 10.1109/TWC.2020.3022907
   Jiao JP, 2018, CHINA COMMUN, V15, P88, DOI 10.1109/CC.2018.8424606
   Kanai K, 2016, IEEE J SEL AREA COMM, V34, P2102, DOI 10.1109/JSAC.2016.2577238
   Khreishah A, 2016, IEEE J SEL AREA COMM, V34, P2275, DOI 10.1109/JSAC.2016.2577199
   Kirilin V, 2020, IEEE J SEL AREA COMM, V38, P2372, DOI 10.1109/JSAC.2020.3000415
   Ko H, 2018, EURASIP J WIREL COMM, DOI 10.1186/s13638-018-1204-4
   Kristan M, 2019, LECT NOTES COMPUT SC, V11129, P3, DOI 10.1007/978-3-030-11009-3_1
   Kumar S, 2020, COMPUT NETW, V179, DOI 10.1016/j.comnet.2020.107434
   Kwak J, 2018, IEEE T WIREL COMMUN, V17, P3030, DOI 10.1109/TWC.2018.2805893
   Lai P, 2018, LECT NOTES COMPUT SC, V11236, P230, DOI 10.1007/978-3-030-03596-9_15
   Lan YW, 2019, ELECTRONICS-SWITZ, V8, DOI 10.3390/electronics8121430
   Leung VC., 2016, P 2016 IEEE INT C CO, P1
   Li D., 2019, IEEE WCNC, P1
   Li LM, 2020, IEEE ACCESS, V8, P170211, DOI 10.1109/ACCESS.2020.3023771
   Li LY, 2018, IEEE COMMUN SURV TUT, V20, P1710, DOI 10.1109/COMST.2018.2820021
   Li Q, 2020, I C COMM SOFTW NET, P223, DOI [10.1109/iccsn49894.2020.9139058, 10.1109/ICCSN49894.2020.9139058]
   Li XM, 2018, FUTURE GENER COMP SY, V89, P89, DOI 10.1016/j.future.2018.06.017
   Lin PH, 2019, IEEE ICC
   Liu D, 2016, IEEE COMMUN MAG, V54, P22, DOI 10.1109/MCOM.2016.7565183
   Liu JY, 2020, IEEE INTERNET THINGS, V7, P1548, DOI 10.1109/JIOT.2019.2956554
   Liu L, 2021, MOBILE NETW APPL, V26, P1145, DOI 10.1007/s11036-020-01624-1
   Liu Y, 2020, INFORM SCIENCES, V521, P14, DOI 10.1016/j.ins.2020.02.042
   Luo ZH, 2019, T EMERG TELECOMMUN T, V30, DOI 10.1002/ett.3689
   Ma M., 2020, ARXIV PREPRINT ARXIV, P1
   Mancini Riccardo, 2021, Intelligent and Cloud Computing. Proceedings of ICICC 2019. Smart Innovation, Systems and Technologies (SIST 194), P11, DOI 10.1007/978-981-15-5971-6_2
   Manzoor S, 2020, T EMERG TELECOMMUN T, V31, DOI 10.1002/ett.3739
   Mathew A., 2019, SECURITY AWARE CONTE, V5, P121
   Mehrizi S, 2020, UEEE INT SYM PERS IN
   Müller S, 2017, IEEE T WIREL COMMUN, V16, P1024, DOI 10.1109/TWC.2016.2636139
   Ndikumana A, 2021, IEEE T INTELL TRANSP, V22, P2862, DOI 10.1109/TITS.2020.2976572
   Ndikumana A, 2020, IEEE T MOBILE COMPUT, V19, P1359, DOI 10.1109/TMC.2019.2908403
   Ndikumana A, 2018, IEEE ACCESS, V6, P33702, DOI 10.1109/ACCESS.2018.2848231
   Ottersten B., 2019, CONSUM COMM NETWORK, P1
   Ottersten SMR, 2019, POPULARITY TRACKING
   Pandey S, 2020, INT J NETW MANAG, V30, DOI 10.1002/nem.2104
   Paschos GS, 2018, IEEE J SEL AREA COMM, V36, P1111, DOI 10.1109/JSAC.2018.2844939
   Pervej MF, 2020, IEEE GLOB COMM CONF, DOI 10.1109/GLOBECOM42002.2020.9322208
   Piao ZY, 2019, IEEE INTERNET THINGS, V6, P1010, DOI 10.1109/JIOT.2018.2866709
   Qi KQ, 2019, IEEE ACCESS, V7, P120788, DOI 10.1109/ACCESS.2019.2936866
   Rahman S, 2020, 2020 34TH INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN 2020), P797, DOI [10.1109/ICOIN48656.2020.9016437, 10.1109/icoin48656.2020.9016437]
   Rathore S, 2019, IEEE NETWORK, V33, P130, DOI 10.1109/MNET.2019.1800058
   Safavat S, 2020, DIGIT COMMUN NETW, V6, P189, DOI 10.1016/j.dcan.2019.08.004
   Saputra YM, 2019, IEEE WIREL COMMUN LE, V8, P1220, DOI 10.1109/LWC.2019.2912365
   Shu P, 2020, PROCEEDINGS OF 2020 IEEE 4TH INFORMATION TECHNOLOGY, NETWORKING, ELECTRONIC AND AUTOMATION CONTROL CONFERENCE (ITNEC 2020), P2441, DOI [10.1109/ITNEC48623.2020.9085078, 10.1109/itnec48623.2020.9085078]
   Shuja J., 2020, ARXIV200616864
   Son J, 2019, SOFTWARE PRACT EXPER, V49, P1748, DOI 10.1002/spe.2755
   Song F, 2020, IEEE INTERNET THINGS, V7, P6046, DOI 10.1109/JIOT.2019.2958097
   Sun SS, 2019, TEH VJESN, V26, P503, DOI 10.17559/TV-20190303092125
   Tan JW, 2021, T EMERG TELECOMMUN T, V32, DOI 10.1002/ett.3871
   Tanaka M, 2019, INT CONF UBIQ FUTUR, P27, DOI [10.1109/icufn.2019.8806060, 10.1109/ICUFN.2019.8806060]
   Tang QQ, 2019, IET NETW, V8, P329, DOI 10.1049/iet-net.2018.5111
   Tang QQ, 2018, IET COMMUN, V12, P2357, DOI 10.1049/iet-com.2018.5553
   Thar K, 2018, IEEE ACCESS, V6, P78260, DOI 10.1109/ACCESS.2018.2884913
   Thar K, 2018, IEEE ACCESS, V6, P59679, DOI 10.1109/ACCESS.2018.2874448
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
   Van DD, 2018, IET INTELL TRANSP SY, V12, P703, DOI 10.1049/iet-its.2017.0261
   Varghese B., 2020, HDB INTEGRATION CLOU, P127
   Veeramanikandan, 2020, ENG APPL ARTIF INTEL, V94, DOI 10.1016/j.engappai.2020.103785
   Wang CM, 2018, IEEE COMMUN SURV TUT, V20, P7, DOI 10.1109/COMST.2017.2758763
   Wang R, 2019, IEEE T VEH TECHNOL, V68, P8279, DOI 10.1109/TVT.2019.2921615
   Wang S, 2017, IEEE ACCESS, V5, P6757, DOI 10.1109/ACCESS.2017.2685434
   Wang SH, 2021, IEEE INTERNET THINGS, V8, P1358, DOI 10.1109/JIOT.2020.3011286
   Wang XF, 2020, IEEE INTERNET THINGS, V7, P9441, DOI 10.1109/JIOT.2020.2986803
   Wang XJ, 2022, IEEE T MOBILE COMPUT, V21, P598, DOI 10.1109/TMC.2020.3012509
   Wang YT, 2020, INFORMATICS-BASEL, V7, DOI 10.3390/informatics7040043
   Xie RC, 2019, IET COMMUN, V13, P687, DOI 10.1049/iet-com.2018.5530
   Xu MC., 2020, ARXIV PREPRINT ARXIV
   Xu XG, 2020, IEEE ACCESS, V8, P59906, DOI 10.1109/ACCESS.2020.2983068
   Yan M, 2019, IEEE ACCESS, V7, P104394, DOI 10.1109/ACCESS.2019.2931449
   Yang C., 2020, P 2020 IEEE WIR COMM, P1
   Yao JJ, 2019, IEEE COMMUN SURV TUT, V21, P2525, DOI 10.1109/COMST.2019.2908280
   Yu GH, 2020, PEER PEER NETW APPL, V13, P1839, DOI 10.1007/s12083-020-00954-x
   Yu ZX, 2021, IEEE T INTELL TRANSP, V22, P5341, DOI 10.1109/TITS.2020.3017474
   Yu ZX, 2018, IEEE GLOB COMM CONF
   Yuan PY, 2020, WIREL NETW, V26, P2929, DOI 10.1007/s11276-020-02248-9
   Zahed MIA, 2020, FUTURE GENER COMP SY, V105, P210, DOI 10.1016/j.future.2019.11.041
   Zhang B., 2020, IEEE T SERV COMPUT, V17, P99
   Zhang TH, 2021, IEEE INTERNET THINGS, V8, P2751, DOI 10.1109/JIOT.2020.3020911
   Zhang Y, 2020, IEEE T NETW SCI ENG, V7, P2145, DOI 10.1109/TNSE.2020.2990963
   Zhang Z, 2021, IEEE T WIREL COMMUN, V20, P1152, DOI 10.1109/TWC.2020.3030973
   Zhao HT, 2021, SOFTWARE PRACT EXPER, V51, P2501, DOI 10.1002/spe.2843
   Zheng R, 2019, PROCEEDINGS OF 2019 IEEE 7TH INTERNATIONAL CONFERENCE ON BIOINFORMATICS AND COMPUTATIONAL BIOLOGY (ICBCB 2019), P1, DOI [10.1109/ICBCB.2019.8854648, 10.1109/icbcb.2019.8854648]
   Zheng ZJ, 2018, IEEE T WIREL COMMUN, V17, P5198, DOI 10.1109/TWC.2018.2839111
   Zhou A, 2021, SOFTWARE PRACT EXPER, V51, P2085, DOI 10.1002/spe.2758
   Zhou JZ, 2020, IEEE T COGN COMMUN, V6, P1308, DOI 10.1109/TCCN.2020.3020887
   Zhu FC, 2020, LANCET, V396, P479, DOI 10.1016/S0140-6736(20)31605-6
   Zhu H, 2018, IEEE NETWORK, V32, P50, DOI 10.1109/MNET.2018.1800109
   Zhu ZH, 2019, INT CONF WIRE COMMUN, DOI 10.1109/wcsp.2019.8928131
   Zong TY, 2021, IEEE INFOCOM SER, DOI 10.1109/INFOCOM42981.2021.9488910
NR 133
TC 9
Z9 9
U1 15
U2 101
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 811
EP 855
DI 10.1002/spe.3033
EA SEP 2021
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000697962700001
DA 2024-07-18
ER

PT J
AU Iqbal, MS
   Ahmad, I
   Asif, M
   Kim, SH
   Mehmood, RM
AF Iqbal, Muhammad Shahid
   Ahmad, Iftikhar
   Asif, Muhammad
   Kim, Sun-Hee
   Mehmood, Raja Majid
TI Drug investigation tool: Identifying the effect of drug on cell image by
   using improved correlation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE drug investigation tool; image correlation; long-term monitoring;
   short-term monitoring; significant improvement of correlation;
   two-photon excited florescence
ID ATOMIC-FORCE MICROSCOPY; FIELD-MEASUREMENTS; DEFORMATION;
   CLASSIFICATION; RECOGNITION; DOXORUBICIN; SPECKLE
AB In the treatment of human cancer, the existing drug response identification and assessment methods have some issues, such as high cost, slow processing, and low accuracy. Responsive methods that easily and indirectly assess patient tissue response to drugs or small molecules offer promising options for improving drug safety, and they are able to identify the right treatment for specific patients. Digital image correlation is a good technique that detects a part of the image between two images. In this article, a new method of correlation called significant improvement of correlation (SIC) was proposed. Data were taken from the confocal microscopy of two-photon excited fluorescence (TPEF) probe images taken every 5 min for short-term monitoring (STM) and long-term monitoring (LTM; 12, 24, and 48 hours). Cells were cultured, and a new compound TPEF was tested and injected the drug. The effect of drug on the TPEF compound was assessed through correlation. Experimental and simulation results showed that the proposed SIC was better than the conventional correlation method. Results also revealed that the first three images had 0.8% correlation in STM and LTM Image15 and Image10 had 0.49% correlation. The other images demonstrated minimum correlation. Thus, the effect of the newly made drug on the cell and image had a minimum correlation.
C1 [Iqbal, Muhammad Shahid] Anhui Univ, Sch Comp Sci & Technol, Hefei, Peoples R China.
   [Iqbal, Muhammad Shahid] Air Univ, Dept Comp Sci, Islamabad, Pakistan.
   [Ahmad, Iftikhar] King Abdulaziz Univ, Fac Comp & Informat Technol, Dept Informat Technol, Jeddah, Saudi Arabia.
   [Asif, Muhammad] Univ Sci & Technol China, Key Lab Wireless Opt Commun, Hefei, Peoples R China.
   [Kim, Sun-Hee] Korea Univ, Dept Brain & Cognit Engn, Seoul 02841, South Korea.
   [Mehmood, Raja Majid] Xiamen Univ Malaysia, Sch Elect & Comp Engn, Informat & Commun Technol Dept, Sepang 43900, Malaysia.
C3 Anhui University; Air University Islamabad; King Abdulaziz University;
   Chinese Academy of Sciences; University of Science & Technology of
   China, CAS; Korea University; Xiamen University Malaysia Campus
RP Kim, SH (corresponding author), Korea Univ, Dept Brain & Cognit Engn, Seoul 02841, South Korea.; Mehmood, RM (corresponding author), Xiamen Univ Malaysia, Sch Elect & Comp Engn, Informat & Commun Technol Dept, Sepang 43900, Malaysia.
EM sunheekim@korea.ac.kr; rmeex07@ieee.org
RI iqbal, muhammad shahid/AAQ-4575-2020; Ahmad, Iftikhar/C-4917-2019;
   Mehmood, Raja Majid/H-3643-2012
OI iqbal, muhammad shahid/0000-0003-4766-0439; Ahmad,
   Iftikhar/0000-0003-3719-2387; Mehmood, Raja Majid/0000-0002-2284-0479
FU National Research Foundation of Korea (NRF) [NRF-2018R1A2B6006046];
   Xiamen University Malaysia Research Fund (XMUMRF)
   [XMUMRF/2019-C3/IECE/0007]
FX National Research Foundation of Korea (NRF):, Grant/Award Number:
   NRF-2018R1A2B6006046; Xiamen University Malaysia Research Fund (XMUMRF),
   Grant/Award Number: XMUMRF/2019-C3/IECE/0007
CR [Anonymous], 2003, THESIS
   Barras David, 2015, Biomark Cancer, V7, P49, DOI 10.4137/BIC.S39882
   Brillaud J, 2002, APPL OPTICS, V41, P6603, DOI 10.1364/AO.41.006603
   Cho S, 2005, J MICROMECH MICROENG, V15, P728, DOI 10.1088/0960-1317/15/4/009
   Chu W, 2009, PROCEEDINGS OF THE ASME INTERNATIONAL MANUFACTURING SCIENCE AND ENGINEERING CONFERENCE, VOL 2, P289, DOI 10.1115/MSEC2009-84274
   Diwakar M, 2018, IET IMAGE PROCESS, V12, P708, DOI 10.1049/iet-ipr.2017.0639
   Feng LW, 2018, ORG BIOMOL CHEM, V16, P2647, DOI 10.1039/c8ob00227d
   Franck C, 2007, EXP MECH, V47, P427, DOI 10.1007/s11340-007-9037-9
   Friedberg MW, 2017, JAMA INTERN MED, V177, P1058, DOI 10.1001/jamainternmed.2017.2142
   Gedik B, 2014, SOFTWARE PRACT EXPER, V44, P1105, DOI 10.1002/spe.2194
   Gomes LR, 2015, ONCOGENE, V34, P5329, DOI 10.1038/onc.2014.461
   Horowitz LF, 2020, NPJ PRECIS ONCOL, V4, DOI 10.1038/s41698-020-0117-y
   HOWARD MA, 1971, THROMB DIATH HAEMOST, V26, P362
   Hu Y, 2017, PROCEEDINGS OF 2017 6TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND NETWORK TECHNOLOGY (ICCSNT 2017), P435, DOI 10.1109/ICCSNT.2017.8343734
   Hyman DM, 2017, CELL, V168, P584, DOI 10.1016/j.cell.2016.12.015
   Iqbal MS, 2021, T EMERG TELECOMMUN T, V32, DOI 10.1002/ett.4017
   Iqbal MS, 2019, IEEE ACCESS, V7, P86570, DOI 10.1109/ACCESS.2019.2925041
   Iqbal MS, 2019, PROCEDIA COMPUT SCI, V147, P77, DOI 10.1016/j.procs.2019.01.188
   Iqbal MS, 2019, J OPT-INDIA, V48, P113, DOI 10.1007/s12596-018-0508-4
   Jonas O, 2015, SCI TRANSL MED, V7, DOI 10.1126/scitranslmed.3010564
   Kawata AK, 2009, CLIN DRUG INVEST, V29, P215, DOI 10.2165/00044011-200929040-00001
   Kune R, 2017, SOFTWARE PRACT EXPER, V47, P455, DOI 10.1002/spe.2425
   Letai A, 2017, NAT MED, V23, P1028, DOI 10.1038/nm.4389
   Li XD, 2007, IEEE T NANOTECHNOL, V6, P4, DOI 10.1109/TNANO.2006.888527
   Li XD, 2006, MATER SCI TECH-LOND, V22, P835, DOI 10.1179/174328406X101283
   Liu Y, 2011, CELL DEATH DIS, V2, pe121
   Lovitt CJ, 2018, BMC CANCER, V18, DOI 10.1186/s12885-017-3953-6
   MacRae CA, 2015, NAT REV DRUG DISCOV, V14, P721, DOI 10.1038/nrd4627
   Másson M, 2003, DRUG DEV IND PHARM, V29, P107, DOI 10.1081/DDC-120016689
   Mohan P, 2010, MOL PHARMACEUT, V7, P1959, DOI 10.1021/mp100269f
   Mudassar AA, 2016, OPT LASER ENG, V87, P156, DOI 10.1016/j.optlaseng.2015.10.002
   Naipal KAT, 2016, BMC CANCER, V16, DOI 10.1186/s12885-016-2119-2
   Parker JJ, 2017, JOVE-J VIS EXP, DOI 10.3791/53557
   Peng B, 2013, J TEST EVAL, V41, P231, DOI 10.1520/JTE20120085
   Qu YD, 2019, MOL CANCER, V18, DOI 10.1186/s12943-019-0992-4
   Ravi M, 2017, J CELL PHYSIOL, V232, P685, DOI 10.1002/jcp.25603
   Rowe RG, 2016, CELL STEM CELL, V18, P707, DOI 10.1016/j.stem.2016.05.016
   Saar T, 2016, SOFTWARE PRACT EXPER, V46, P1459, DOI 10.1002/spe.2387
   Sachs N, 2018, CELL, V172, P373, DOI 10.1016/j.cell.2017.11.010
   Sherwood T, 2016, SOFTWARE PRACT EXPER, V46, P931, DOI 10.1002/spe.2339
   Sutton MA, 2007, EXP MECH, V47, P775, DOI 10.1007/s11340-007-9042-z
   Sutton MA, 2000, TOP APPL PHYS, V77, P323
   Turaga D, 2010, SOFTWARE PRACT EXPER, V40, P1073, DOI 10.1002/spe.993
   Vaira V, 2010, P NATL ACAD SCI USA, V107, P8352, DOI 10.1073/pnas.0907676107
   Vendroux G, 1998, EXP MECH, V38, P154, DOI 10.1007/BF02325737
   Wang H, 2006, EXP TECHNIQUES, V30, P42, DOI 10.1111/j.1747-1567.2006.00021.x
   Zhang DS, 2006, OPT ENG, V45, DOI 10.1117/1.2182108
NR 47
TC 5
Z9 5
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 260
EP 270
DI 10.1002/spe.2903
EA OCT 2020
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000577470000001
DA 2024-07-18
ER

PT J
AU Casini, D
   Biondi, A
   Buttazzo, G
AF Casini, Daniel
   Biondi, Alessandro
   Buttazzo, Giorgio
TI Timing isolation and improved scheduling of deep neural networks for
   real-time systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deep learning; neural networks; predictability; real-time systems;
   temporal isolation; tensorflow
AB In recent years, the performance of deep neural networks (DNNs) is significantly improved, making them suitable for many application fields, such as autonomous driving, advanced robotics, and industrial control. Despite a lot of research being devoted to improving the accuracy of DNNs, only limited efforts have been spent to enhance their timing predictability, required in several real-time applications. This paper proposes a software infrastructure based on the Linux operating system to integrate DNNs within a real-time multicore system. It has been realized by modifying both the internal scheduler of the popular TensorFlow framework and the SCHED_DEADLINE scheduling class of Linux. The proposed infrastructure allows providing timing isolation of DNN inference tasks, hence improving the determinism of the temporal interference generated by TensorFlow. The proposal is finally evaluated with a case study derived from a state-of-the-art benchmark inspired by an autonomous industrial system. Extensive experiments demonstrate the effectiveness of the proposed solution and show a significant reduction of both average and longest-observed response times of TensorFlow tasks.
C1 [Casini, Daniel; Biondi, Alessandro; Buttazzo, Giorgio] Scuola Super Sant Anna, Dept Excellence Robot & AI, Pisa, Italy.
   [Casini, Daniel; Biondi, Alessandro; Buttazzo, Giorgio] Scuola Super Sant Anna, TeCIP Inst, Pisa, Italy.
C3 Scuola Superiore Sant'Anna; Scuola Superiore Sant'Anna
RP Casini, D (corresponding author), Scuola Super Sant Anna, Dept Excellence Robot & AI, Pisa, Italy.
EM daniel.casini@santannapisa.it
RI Biondi, Alessandro/KDO-0511-2024; Biondi, Alessandro/GSG-5989-2022
OI Biondi, Alessandro/0000-0002-6625-9336; Casini,
   Daniel/0000-0003-4719-3631
FU Department of Excellence in Robotics and Artificial Intelligence of
   Scuola Superiore Sant'Anna, Pisa, Italy
FX The authors would like to thank Daniel Bristot De Oliveira and Luca
   Abeni for their advice in configuring and modifying the SCHED_DEADLINE
   scheduling class of Linux and in performing the overhead measurements.
   This work has been partially supported by the Department of Excellence
   in Robotics and Artificial Intelligence of Scuola Superiore Sant'Anna,
   Pisa, Italy.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   ALBAQSAMI A, 2018, P DES AUT TEST EUR C
   ALI W, 2018, P EUR C REAL TIM SYS
   Apuzzo V, 2016, IEEE REAL TIME
   BARUAH SK, 1990, REAL-TIME SYST, V2, P301, DOI 10.1007/BF01995675
   BATENI S, 2018, P 39 IEEE REAL TIM S
   BEHNAM M, 2007, P 7 ACM IEEE INT C E
   BEHNAM M, 2008, P 2008 IEEE INT C EM
   Behnam M, 2010, IEEE T IND INFORM, V6, P93, DOI 10.1109/TII.2009.2037918
   Bertogna M, 2009, IEEE T IND INFORM, V5, P202, DOI 10.1109/TII.2009.2026051
   Biondi A, 2018, REAL-TIME SYST, V54, P515, DOI 10.1007/s11241-018-9303-1
   Biondi A, 2016, IEEE T COMPUT, V65, P1593, DOI 10.1109/TC.2015.2444833
   Biondi A, 2014, INT SYM IND EMBED
   BRANDENBURG B, 2016, P 37 IEEE REAL SYST
   Buttazzo GC, 2011, HARD REAL-TIME COMPUTING SYSTEMS: PREDICTABLE SCHEDULING ALGORITHMS AND APPLICATIONS, THIRD EDITION, P1, DOI 10.1007/978-1-14614-0676-1
   CAPODIECI N, 2017, P 25 ACM INT C REAL
   Capodieci N, 2018, 2018 PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT)
   CASINI D, 2017, P 29 EUR C REAL TIM
   CASINI D, 2017, P 25 ACM INT C REAL
   Casini D, 2019, PROCEEDINGS OF THE 2019 56TH ACM/EDAC/IEEE DESIGN AUTOMATION CONFERENCE (DAC), DOI 10.1145/3316781.3317771
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   DAVIS RI, 2006, P 27 IEEE INT REAL T
   de Oliveira DB, 2020, J SYST ARCHITECT, V107, DOI 10.1016/j.sysarc.2020.101729
   de Oliveira DB, 2016, SOFTWARE PRACT EXPER, V46, P789, DOI 10.1002/spe.2333
   DENIZ D, 2001, P 22 IEEE REAL TIM S
   FAGGIOLI D, 2010, P 22 EUR C REAL TIM
   Falk H., 2016, Proceedings of the 16th International Workshop on Worst-Case Execution Time Analysis (WCET'16), P1, DOI [DOI 10.4230/OASICS.WCET.2016.2, 10.4230/OASIcs.WCET.2016.2]
   FORSBERG B, 2017, P DES AUT TEST EUR C
   GHAZALIE TM, 1995, REAL-TIME SYST, V9, P31, DOI 10.1007/BF01094172
   Hong H, 2017, DES AUT CON, DOI 10.1145/3061639.3062260
   Kang W, 2019, REAL-TIME SYST, V55, P106, DOI 10.1007/s11241-018-9314-y
   LAMASTRA G, 2001, P 22 IEEE REAL TIM S
   Lane ND, 2016, 2016 15TH ACM/IEEE INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS (IPSN)
   Lelli J, 2016, SOFTWARE PRACT EXPER, V46, P821, DOI 10.1002/spe.2335
   LENSSEN JE, 2018, P 11 INT JOINT C BIO
   Lenz I, 2015, INT J ROBOT RES, V34, P705, DOI 10.1177/0278364914549607
   Lin WY, 2018, NEUROCOMPUTING, V308, P138, DOI 10.1016/j.neucom.2018.04.061
   MIN SJ, 2011, P 5 C PART GLOB ADDR
   PARRI A, 2014, P 16 REAL TIM LIN WO
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   SANDLER M, 2018, P IEEE CVF 31 C COMP
   SHIN I, 2003, P 24 IEEE REAL TIM S
   SW MY, 2019, P 25 IEEE REAL TIM E
   SZEGEDY C, 2016, P IEEE CVF 29 C COMP
   Zhang FX, 2009, IEEE T COMPUT, V58, P1250, DOI 10.1109/TC.2009.58
   ZHOU H, 2018, P 24 IEEE REAL TIM E
   Zhou QB, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19030644
NR 47
TC 10
Z9 10
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2020
VL 50
IS 9
BP 1760
EP 1777
DI 10.1002/spe.2840
EA JUN 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MT2QQ
UT WOS:000536608900001
DA 2024-07-18
ER

PT J
AU Giang, NK
   Lea, R
   Leung, VCM
AF Giang, Nam Ky
   Lea, Rodger
   Leung, Victor C. M.
TI Developing applications in large scale, dynamic fog computing: A case
   study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE coordination; dataflow; dynamic; edge; fog computing; exogenous; large
   scale
AB In recent years, fog computing has emerged as a new distributed system model for a large class of applications that are data-intensive or delay-sensitive. By exploiting widely distributed computing infrastructure that is located closer to the network edge, communication cost and service response time can be significantly reduced. However, developing this class of applications is not straightforward and requires addressing three key challenges, ie, supporting the dynamic nature of the edge network, managing the context-dependent characteristics of application logic, and dealing with the large scale of the system. In this paper, we present a case study in building fog computing applications using our open source platform Distributed Node-RED (DNR). In particular, we show how applications can be decomposed and deployed to a geographically distributed infrastructure using DNR, and how existing software components can be adapted and reused to participate in fog applications. We present a lab-based implementation of a fog application built using DNR that addresses the first two of the issues highlighted earlier. To validate that our approach also deals with large scale, we augment our live trial with a large scale simulation of the application model, conducted in Omnet++, which shows the scalability of the model and how it supports the dynamic nature of fog applications.
C1 [Giang, Nam Ky; Leung, Victor C. M.] Univ British Columbia, Dept Elect & Comp Engn, Vancouver, BC, Canada.
   [Lea, Rodger] Univ Lancaster, Sch Comp & Commun, Lancaster, England.
   [Leung, Victor C. M.] Shenzhen Univ, Coll Comp Sci & Software Engn, Shenzhen, Peoples R China.
C3 University of British Columbia; Lancaster University; Shenzhen
   University
RP Leung, VCM (corresponding author), Shenzhen Univ, Coll Comp Sci & Software Engn, Shenzhen, Peoples R China.
EM vleung@ieee.org
RI Leung, Victor C. M./AGU-2462-2022; Leung, Victor C.M./X-6823-2019
OI Leung, Victor C. M./0000-0003-3529-2640; Leung, Victor
   C.M./0000-0003-3529-2640; Lea, Rodger James/0000-0003-2442-7693
CR Albertson K, 2018, POL PRESS SHORT, P1
   Arbab F, 1998, B DUTCH ASS THEORETI, P11
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Bozzon A, 2014, 14 INT C WEB ENG TOU
   Cherrier S, 2011, 2011 INT C INT THING
   DeRemer F., 1976, IEEE Transactions on Software Engineering, VSE-2, P80, DOI 10.1109/TSE.1976.233534
   Elgamal T, 2018, INT ICE CONF ENG
   Galletta Antonino, 2018, 2018 IEEE 2 INT C, P1
   Giang NK, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON EDGE COMPUTING (IEEE EDGE), P9, DOI 10.1109/EDGE.2018.00009
   Giang NK, 2018, IEEE ACCESS, V6, P31740, DOI 10.1109/ACCESS.2018.2844336
   Giang NK, 2019, DISTRIBUTED DATA FLO
   Giang NK, 2015, 2015 5 INT C INT THI
   Hiesgen R, 2014, 2014 IEEE 4 INT C CO
   Hoque S, 2017, ASHRAE ANN CONF PAP
   Jia Yangqing, 2014, ARXIV14085093, DOI [10.1145/2647868.2654889, DOI 10.1145/2647868.2654889]
   Kawano M, 2018, URB IOT 2018 3 EAI I
   Kim KA, 2017, IEEE W CONTR MODEL
   Krajzewicz D., 2012, Int. J. Adv. Syst. Meas., V5, P128
   Lin J, 2017, IEEE INTERNET THINGS, V4, P1125, DOI 10.1109/JIOT.2017.2683200
   Mottola L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922656
   Project BigClouT, 2019, TRANSFORMING MANAGEM
   Pulli K, 2012, COMMUN ACM, V55, P61, DOI 10.1145/2184319.2184337
   Riliskis L, 2015, P 2015 INT WORKSH IN
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Sivieri A, 2016, COMPUT COMMUN, V89-90, P141, DOI 10.1016/j.comcom.2016.02.004
   Wöbker C, 2018, IEEE IFIP NETW OPER
   Yigitoglu E, 2017, P 2017 IEEE 6 INT C
NR 27
TC 11
Z9 12
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 519
EP 532
DI 10.1002/spe.2695
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000526578200005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Kourai, K
   Sannomiya, K
AF Kourai, Kenichi
   Sannomiya, Kouta
TI Flexible service consolidation with nested virtualization and library
   operating systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE IaaS clouds; library operating system; nested virtualization; process
   pool; service consolidation; virtual private network
AB In Infrastructure-as-a-service (IaaS) clouds, users can reduce costs by scale-in or scale-down when running services are underutilized. Since these optimizations of instance deployment require at least one minimum instance even for running an underutilized service, cost reduction is limited. For further optimization, multiple services can be consolidated into one instance. However, services have to be stopped temporarily at the consolidation time, and isolation between services becomes weaker after the consolidation. To solve these problems, this paper proposes FlexCapsule, which enables seamless and secure service consolidation in existing IaaS clouds. FlexCapsule runs each service in a lightweight virtual machine (VM) called an app VM, using a library operating system. An app VM runs inside an instance using a technique called nested virtualization. FlexCapsule can optimize instance deployment with negligible downtime by flexibly migrating app VMs. Due to strong isolation provided by app VMs, it can guarantee security between consolidated services. In addition, FlexCapsule provides multiprocess support using app VMs by emulating process fork and process pools. We have implemented FlexCapsule in Xen using both fully virtualized OSv and paravirtualized MiniOS. Then, we examined the effectiveness of FlexCapsule using several applications. Due to the premature implementation of nested virtualization in Xen, the performance of app VMs largely degraded, but we believe that the performance could be improved using several existing optimizations.
C1 [Kourai, Kenichi; Sannomiya, Kouta] Kyushu Inst Technol, Dept Comp Sci & Networks, 680-4 Kawazu, Iizuka, Fukuoka 8208502, Japan.
C3 Kyushu Institute of Technology
RP Kourai, K (corresponding author), Kyushu Inst Technol, Dept Comp Sci & Networks, 680-4 Kawazu, Iizuka, Fukuoka 8208502, Japan.
EM kourai@ksl.ci.kyutech.ac.jp
OI Kourai, Kenichi/0000-0002-5455-4418
FU  [19304]
FX JUNO2, Grant/Award Number: 19304
CR Aker B., Memaslap - load testing and benchmarking a server
   Amazon Inc, AWS LAMBD SERV COMP
   Amazon Inc , AWS FARG RUN CONT HA
   Ammons G, 2007, P 3 INT C VIRT EX E
   [Anonymous], NETWORK BLOCK DEVICE
   [Anonymous], ARM ARCH REF MAN ARM
   Balliache Leonardo., Querying libiptc howto, 2022
   Barham P., 2003, Operating Systems Review, V37, P164, DOI 10.1145/1165389.945462
   Ben-Yehuda M., 2010, P 9 USENIX C OP SYST, P423
   Ben-Yehuda O. A., 2012, HOTCLOUD
   Canonical Ltd, Linux Containers.
   Doddamani S, 2019, P 15 ACM SIGPLAN SIG
   Douceur J, 2008, P 8 USENIX C OP SYST
   Engler D. R., 1995, Operating Systems Review, V29, P251, DOI 10.1145/224057.224076
   FISHMAN A, 2013, P 5 USENIX WORKSH HO
   FITZPATRICK B., 2011, memcached: a Distributed Memory Object Caching System
   García-Valls M, 2014, J SYST ARCHITECT, V60, P726, DOI 10.1016/j.sysarc.2014.07.004
   Goldberg R, 1973, P WORKSH VIRT COMP S
   Google Inc, CONT RUNT SANDB
   Intel Corp, 2013, 4 GEN INT COR VPRO P
   Jordan M, GUEST VM MICROKERNEL
   Kaashoek MF, 1997, P 16 ACM S OP SYST P
   Kivity A., 2014, P 2014 USENIX ANN TE
   Konstanteli K, 2014, IEEE T CLOUD COMPUT, V2, P348, DOI 10.1109/TCC.2014.2325034
   Kourai K, 2016, P 8 IEEE INT C CLOUD
   Kourai K, 2016, P 35 IEEE S REL DIST
   Lagar-Cavilla H.A., 2009, P 4 ACM EUR C COMP S
   Lighty Team, LIGHTTPD FLY LIGHT
   Lim JT, 2017, P 26 ACM S OP SYST P
   Liu C, 2013, P 5 USENIX WORKSH HO
   Madhavapeddy A, 2015, P 12 USENIX C NETW S
   Madhavapeddy A, 2013, ACM SIGPLAN NOTICES, V48, P461, DOI 10.1145/2499368.2451167
   Manco F, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P218, DOI 10.1145/3132747.3132763
   Milojicic DS, 2000, ACM COMPUT SURV, V32, P241, DOI 10.1145/367701.367728
   Morikawa T, 2019, P 17 IEEE INT C DEP
   Mosberger D, 1998, TECHNICAL REPORT
   OpenVPN Technologies Inc, OPENVPN OP SOURC VP
   Osman S., 2002, P 5 S OP SYST DES IM
   Park Yoonho., 2012, P 24 IEEE INT S COMP
   Redis Labs Inc, FAST IS RED
   Sisu Xi, 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P39
   Soma Y, 2014, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON RUNTIME AND OPERATING SYSTEMS FOR SUPERCOMPUTERS, ROSS 2014, DOI 10.1145/2612262.2612264
   Ta-Min R, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P279
   Tan C, 2012, P 3 IEEE IFIP INT WO
   The Openstack Foundation, KAT CONT SPEED CONT
   Tsai C.-C., 2014, P 9 EUR C COMP SYST, P1, DOI 10.1145/2592798.2592812
   VMware Inc, VMWARE VCLOUD AIR PU
   Vrable M., 2005, SIGOPS OPERATING SYS, V39, P148, DOI DOI 10.1145/1095809.1095825
   WEICKER RP, 1984, COMMUN ACM, V27, P1013, DOI 10.1145/358274.358283
   Williams D., 2012, P EUR C COMP SYST, P113
   Williams D, 2011, P 3 USENIX WORKSH HO
   Wisniewski RW, 2014, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON RUNTIME AND OPERATING SYSTEMS FOR SUPERCOMPUTERS, ROSS 2014, DOI 10.1145/2612262.2612263
   Zhang FZ, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P203
   Zhang L, 2016, PROCEEDINGS OF THE ELEVENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS, (EUROSYS 2016), DOI 10.1145/2901318.2901345
   Zhang Y, 2018, P 2018 USENIX ANN TE
NR 55
TC 1
Z9 1
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2020
VL 50
IS 1
BP 3
EP 21
DI 10.1002/spe.2752
EA OCT 2019
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JR9RB
UT WOS:000492165100001
DA 2024-07-18
ER

PT J
AU Pérez-Berenguer, D
   García-Molina, J
AF Perez-Berenguer, Daniel
   Garcia-Molina, Jesus
TI A standard-based architecture to support learning interoperability: A
   practical experience in gamification
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Caliper; e-learning interoperability standards; e-learning platform;
   interoperability; learning analytics; learner motivation; LTI
AB Creating quality online content requires a great deal of effort from teachers. In addition to issues specific to the design and creation of the elements of a course, teachers must face technical hurdles so as to perform common tasks, such as deploying the same content on different e-learning platforms and integrating content into external tools, or acquiring the ability to analyze tracking data generated during learner interactions. These problems principally arise owing to the very limited level of interoperability provided by content creation tools. In order to facilitate the creation of interoperable contents, the Digital Content Production Center at the Polytechnic University of Cartagena (Spain) has developed the UPCTforma tool, whose main architectural driver has been interoperability. More specifically, the tool takes advantage of the Learning Tools Interoperability and Caliper interoperability specifications to provide several types of quality regarding three key aspects of content production: tool interoperability, learning analytics, and motivation. In this paper, we provide a detailed description of the component-based architecture proposed and present a validation of the requirements elicited through the use of a UPCTforma gamification activity created for a real project involving approximately 4000 students. One of the novel aspects of this architecture is the transformation of tracking data into learning analysis models that represent the information in the tracked learning activities at a higher level of abstraction. These models are used to provide activity-specific learning analytics and motivation. Platform independency with respect to data analytics technologies, messaging systems, and communication protocols is achieved by using adapters.
C1 [Perez-Berenguer, Daniel] Univ Politecn Cartagena, Ctr Prod Contenidos Digitales, Murcia, Spain.
   [Garcia-Molina, Jesus] Univ Murcia, Fac Informat, Murcia, Spain.
C3 Universidad Politecnica de Cartagena; University of Murcia
RP Pérez-Berenguer, D (corresponding author), Ctr Prod Contenidos Digitales, Edificio ELDI,Calle Angel,Campus Muralla Mar, Murcia 30202, Spain.
EM daniel.perez@upct.es
RI GARCIA-MOLINA, JESUS J/X-7078-2019; Perez-Berenguer, Daniel/L-1116-2017
OI Garcia-Molina, Jesus/0000-0003-4685-6659; Perez-Berenguer,
   Daniel/0000-0003-1548-9294
CR Forment MA, 2012, J UNIVERS COMPUT SCI, V18, P1483
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 1996, PATTERN ORIENTED SOF
   [Anonymous], LEARN TOOLS INT LTI
   [Anonymous], 2010, OAUTH 1 0 PROTOCOL
   Brusilovsky P., 2014, P WORK GROUP 2014 IN, P31
   Challenge Me and I Learn website, 2017, CHALLENGE ME I LEARN
   Craig L, 2006, APPL UML PATTERNS IN
   Dawson S., 2014, P 4 INT C LEARN AN K, P231, DOI 10.1145/2567574.2567585
   de Oliveira JC, 2016, I SYMP CONSUM ELECTR, P131, DOI 10.1109/ISCE.2016.7797406
   del Blanco A, 2013, COMPUT STAND INTER, V36, P178, DOI 10.1016/j.csi.2013.06.002
   Fidalgo-Blanco A, 2015, COMPUT HUM BEHAV, V47, P149, DOI 10.1016/j.chb.2014.11.050
   Fontenla J, 2011, USING IMS BASIC LTI, P299
   Franklin Consulting, 2005, INT SPEC E LEARN
   Freire M., 2016, Learning, Design, and Technology, P1, DOI DOI 10.1007/978-3-319-17727-4_21-1
   Galanis N., 2014, TEEM '14, (Salamanca), P409, DOI DOI 10.1145/2669711.2669932
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gañán D, 2016, PROCEEDINGS OF 2016 10TH INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT, AND SOFTWARE INTENSIVE SYSTEMS (CISIS), P87, DOI 10.1109/CISIS.2016.42
   Hicken A., 2017, 2017 ELEARNING PREDI
   IEEE Standard Computer Dictionary: A Compilation of IEEE Standard Computer Glossaries, 1991, 610 IEEE, P1, DOI DOI 10.1109/IEEESTD.1991.106963
   IMS Global Learning Consortium, CAL AN
   IMS Global Learning Consortium, 2017, IMS CONT PACK SPEC
   Incubation project in the Apereo Foundation, TSUGI FRAM BUILD PHP
   Pereira J., 2016, P 4 INT C TECHN EC E, P911, DOI DOI 10.1145/3012430.3012625
   Perez-Berenguer D, 2016, P 4 INT C TECHN EC E, P887, DOI 10. 1145/3012430. 3012622
   Perez-Berenguer D, 2016, 2016 INT S COMP ED, DOI 10. 1109/SIIE. 2016. 7751861
   Polytechnic University of Cartagena, 2017, SINGL ACC POINT
   Ruiz J S., 2014, Proceedings of the Second International Conference on Technological Ecosystems for Enhancing Multiculturality, P299, DOI [DOI 10.1145/2669711.2669914, 10.1145/2669711.2669914]
   Schneider DK, 2012, LEARNING ANAL
   Serrano-Laguna A, 2017, COMPUT STAND INTER, V50, P116, DOI 10.1016/j.csi.2016.09.014
   Sirkiä T, 2017, SOFTWARE PRACT EXPER, V47, P1657, DOI 10.1002/spe.2492
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Ther┬u┬En R., 2011, INT J COMPUTERS APPL, V1, P8
   Wikipedia, 2017, SINGL SIGN ON
NR 34
TC 11
Z9 11
U1 2
U2 36
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2018
VL 48
IS 6
BP 1238
EP 1268
DI 10.1002/spe.2572
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF5UQ
UT WOS:000432033700004
DA 2024-07-18
ER

PT J
AU Kan, SL
   Huang, ZQ
AF Kan, Shuanglong
   Huang, Zhiqiu
TI Detecting safety-related components in statecharts through traceability
   and model slicing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fault trees; model slicing; safety-critical systems; statecharts;
   traceability
ID REQUIREMENTS; AUTOMATA
AB With rapid development in software technology, more and more safety-critical systems are software intensive. Safety issues become important when software is used to control such systems. However, there are 2 important problems in software safety analysis: (1) there is often a significant traceability gap between safety requirements and software design, resulting in safety analysis and software design are often conducted separately; and (2) the growing complexity of safety-critical software makes it difficult to determine whether software design fulfills safety requirements. In this paper, we propose a technique to address the above 2 important problems on the model level. The technique is based on statecharts, which are used to model the behavior of software, and fault tree safety analysis. This technique contains the following 2 parts, which are corresponding to the 2 problems, respectively. The first part is to build a metamodel of traceability between fault trees and statecharts, which is to bridge their traceability gap. A collection of rules for the creation and maintenance of traceability links is provided. The second part is a model slicing technique to reduce the complexity of statecharts with respect to the traceability information. The slicing technique can deal with the characteristics of hierarchy, concurrency, and synchronization of statecharts. The reduced statecharts are much smaller than their original statecharts, which are helpful to successive safety analysis. Finally, we illustrate the effectiveness and the importance of the method by a case study of slats and flaps control units in flight control systems.
C1 [Kan, Shuanglong; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics
RP Kan, SL (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
EM kanshuanglong@nuaa.edu.cn
FU National High-tech R&D Program of China [2015AA015303]; Natural Science
   Foundation of China [61502231]; National Natural Science Foundation of
   China [U1533130]; Civil Aviation Administration of China [U1533130];
   Shanghai Key Laboratory of Trustworthy Computing [07dz22304201502];
   Natural Science Foundation of Jiangsu Province [BK20150753]
FX National High-tech R&D Program of China, Grant/Award Number:
   2015AA015303; Natural Science Foundation of China, Grant/Award Number:
   61502231; Joint Research Funds of National Natural Science Foundation of
   China and Civil Aviation Administration of China, Grant/Award Number:
   (U1533130); Open Project of Shanghai Key Laboratory of Trustworthy
   Computing, Grant/Award Number: 07dz22304201502; the Natural Science
   Foundation of Jiangsu Province, Grant/Award Number: BK20150753
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   Androutsopoulos K, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501667
   [Anonymous], INT COMP SOFTW APPL
   [Anonymous], 1 3 INT C FORM METH
   [Anonymous], 61508 IEC
   [Anonymous], 2003, P 8 AUSTR WORKSH SAF
   [Anonymous], LNCS
   [Anonymous], P IFIP TC6WG61 3 INT
   [Anonymous], 2004, ELECTRON NOTES THEOR
   [Anonymous], 1992, DO 178B SOFTW CONS A
   [Anonymous], AS PAC SOFTW ENG C S
   [Anonymous], 19 INT C SOFTW MAIN
   [Anonymous], ROAD VEH FUNCT SAF
   [Anonymous], 2010, Design and Safety Assessment of Critical Systems
   [Anonymous], 2012, Software and Systems Traceability
   [Anonymous], MODEL BASED SOFTWARE
   [Anonymous], FAULT TREE HDB NUREG
   [Anonymous], DAGST SEM P
   Chen Z, 2015, SOFTWARE PRACT EXPER, V45, P989, DOI 10.1002/spe.2242
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Cleland-Huang J, 2013, IEEE SOFTWARE, V30, P16, DOI 10.1109/MS.2013.117
   Colangelo D, 2006, LECT NOTES COMPUT SC, V4229, P243
   de Leon DC, 2006, IEEE T SOFTWARE ENG, V32, P790, DOI 10.1109/TSE.2006.103
   El Ariss O, 2011, IEEE T SYST MAN CY A, V41, P610, DOI 10.1109/TSMCA.2010.2093889
   Ericson CA, 2005, HAZARD ANALYSIS TECHNIQUES FOR SYSTEM SAFETY, P1, DOI 10.1002/0471739421
   Hamon G., 2007, International Journal on Software Tools for Technology Transfer, V9, P447, DOI 10.1007/s10009-007-0049-7
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Janowska A, 2006, FUND INFORM, V72, P181
   Kan SL, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P783, DOI 10.1145/2635868.2666606
   LEVESON NG, 1986, COMPUT SURV, V18, P125, DOI 10.1145/7474.7528
   LEVESON NG, 1994, IEEE T SOFTWARE ENG, V20, P684, DOI 10.1109/32.317428
   Mäder P, 2013, SOFTW SYST MODEL, V12, P537, DOI 10.1007/s10270-012-0237-0
   MARANINCHI F, 1992, LECT NOTES COMPUT SC, V630, P550
   Nejati S, 2012, INFORM SOFTWARE TECH, V54, P569, DOI 10.1016/j.infsof.2012.01.005
   Queille JP, 2008, LECT NOTES COMPUT SC, V5000, P216
   Rempel P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P943, DOI 10.1145/2568225.2568290
   Rybicki F, 2016, LECT NOTES COMPUT SC, V9953, P150, DOI 10.1007/978-3-319-47169-3_12
   von der Beeck M., 1994, Formal Techniques in Real-Time and Fault-Tolerant Systems. Third International Symposium Proceedings. ProCoS, P128
   von Hanxleden R, 2014, ACM SIGPLAN NOTICES, V49, P372, DOI [10.1145/2666356.2594310, 10.1145/2594291.2594310]
   Wang J, 2002, LECT NOTES COMPUT SC, V2495, P435
NR 41
TC 5
Z9 5
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 428
EP 448
DI 10.1002/spe.2526
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300003
DA 2024-07-18
ER

PT J
AU Fernandes, TS
   Moreira, AF
   Cota, É
AF Fernandes, Thiago Soares
   Moreira, Alvaro Freitas
   Cota, Erika
TI EPE-MobileA framework for early performance estimation of mobile
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Android; aspect-oriented programming; benchmarks; embedded systems;
   mobile systems; nonfunctional requirements; performance evaluation
AB Considering the constrained resources of mobile devices, a thorough performance evaluation of a mobile application is crucial. However, performance evaluation in the mobile domain is still a manual and time-consuming task. The diversity of mobile devices only increases the complexity of this task. We propose EPE-Mobile, a framework to automate early performance estimation in mobile applications. It is composed of a configurable library of basic operations and an engine that automatically creates a synthetic program based on the specification of a new app. The synthetic program that EPE-Mobile generates provides feedback for mobile developers at the first design stages and before the actual implementation of a new application. The fast evaluation can also guide developers in optimizing their applications or in choosing devices with the best trade-off between cost and performance to run a given application. Finally, developers can reuse the data collection infrastructure of the framework to collect performance data during all development stages. We validate the proposed framework using 4 applications from the Android Play Store. Based on their specifications, 4 synthetic programs were generated and executed on different devices. We compared the results to those obtained from the execution of the actual applications in the same devices. Experimental results show that it is possible to create synthetic applications with similar behavior to that of real applications and, thus, classify devices based on the actual application needs. The framework uses aspect-oriented programming to collect the metrics of interest. This approach provides increased modularity and separation of concerns, thus facilitating the improvement of the framework itself, by adding other metrics or basic operations.
C1 [Fernandes, Thiago Soares; Moreira, Alvaro Freitas; Cota, Erika] Univ Fed Rio Grande do Sul, Inst Informat, Ave Bento Goncalves 9500,Bl 4,POB 15064, BR-91501970 Porto Alegre, RS, Brazil.
   [Fernandes, Thiago Soares] Inst Fed Baiano, Campus Guanambi Dist Ceraima, BR-46430000 Guanambi, BA, Brazil.
C3 Universidade Federal do Rio Grande do Sul; Instituto Federal Baiano
   (IFBAIANO)
RP Cota, É (corresponding author), Univ Fed Rio Grande do Sul, Inst Informat, Ave Bento Goncalves 9500,Bl 4,POB 15064, BR-91501970 Porto Alegre, RS, Brazil.
EM erika@inf.ufrgs.br
RI ; Cota, Erika/G-3252-2012
OI Freitas Moreira, Alvaro/0000-0002-9224-2781; Cota,
   Erika/0000-0001-7431-7738
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq);
   Fundacao de Amparo a Pesquisa do Rio Grande do Sul (FAPERGS)
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq);
   Fundacao de Amparo a Pesquisa do Rio Grande do Sul (FAPERGS)
CR Anasthase, ZIRCO BROWSER
   [Anonymous], 2010, INT C CONTR AUT SYST
   [Anonymous], 2001, IEEE INT WORKSH WORK
   Azimzadeh E, 2012, 2012 IEEE 2 INT C CO
   Batyuk L, 2009, DEV BENCHMARKING NAT, P381
   Bauset VF, 2011, 2011 IEEE ACM 15 INT
   Chang DW, 2010, 2010 INT C FIELD PRO
   CHEN G, 2002, IEEE INT WORKSH WORK
   Currie IA, 2008, PROC 7 INT C MOB UB
   Fedorynski P, FROZEN BUBBLE
   Games C, GLTRON
   Gutierrez A., 2011, IEEE INT S WORKL CHA
   HAO S, 2013, ESTIMATING MOBILE AP, P92
   Kayande D, 2012, INT C SOFTW ENG CONS
   Kiczales G., 2001, Proceedings of the 8th European Software Engineering Conference Held Jointly with 9th ACM SIGSOFT International Symposium on Foundations of Software Engineering, ESEC/FSE-9, ACM, New York, NY, USA, P313, DOI DOI 10.1145/503271.503260
   Kim H, 2011, ACM SOSP WORKSH NETW
   Kim JM, 2012, ADV INTEL SOFT COMPU, V133, P667
   Kim Y-K., 2012, INT C CONTR AUT SYST INT C CONTR AUT SYST
   LEE C, 1997, IEEE ACM INT S MICR
   Lin CM, 2011, INT C INN BIOIN COMP
   Nguyen D. T., 2013, PROC ACM C PERVASIVE, P319
   Schoeberl M, 2010, INT WORKSH JAV TECHN
   Shuai Hao, 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P1, DOI 10.1109/GREENS.2012.6224263
   Soares T, LEMBRAR BETA
   Thompson C, 2009, LECT NOTES COMPUT SC, V5860, P36, DOI 10.1007/978-3-642-10265-3_4
   Uti NV, 2010, IEEE ACIS INT C COMP
   Wang J, 2012, INT C COMP SCI NETW
NR 27
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2018
VL 48
IS 1
BP 85
EP 104
DI 10.1002/spe.2518
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FP4WK
UT WOS:000417617500005
DA 2024-07-18
ER

PT J
AU Grabowski, S
   Susik, R
   Raniszewski, M
AF Grabowski, Szymon
   Susik, Robert
   Raniszewski, Marcin
TI A Bloom filter based semi-index on <i>q</i>-grams
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE text indexing; q-grams; Bloom filter; minimizers
AB We present a simple q-gram based semi-index, which allows to look for a pattern typically only in a small fraction of text blocks. Several space-time tradeoffs are presented. Experiments on Pizza & Chili datasets show that our solution is up to three orders of magnitude faster than the Claude et al. (Journal of Discrete Algorithms 2012; 11: 37) semi-index at a comparable space usage. Moreover, the construction of our data structure is fast and easily parallelizable. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Grabowski, Szymon; Susik, Robert; Raniszewski, Marcin] Lodz Univ Technol, Inst Appl Comp Sci, Al Politech 11, PL-90924 Lodz, Poland.
C3 Lodz University of Technology
RP Grabowski, S (corresponding author), Lodz Univ Technol, Inst Appl Comp Sci, Al Politech 11, PL-90924 Lodz, Poland.
EM sgrabow@kis.p.lodz.pl
RI Grabowski, Szymon/AAJ-2398-2021; Susik, Robert/AAI-4911-2021
OI Grabowski, Szymon/0000-0003-1714-1224; Susik, Robert/0000-0003-0653-433X
FU Polish National Science Centre [DEC-2013/09/B/ST6/03117]
FX The work was supported by the Polish National Science Centre under the
   project DEC-2013/09/B/ST6/03117 (the first and the third author).
CR [Anonymous], 2015, THESIS
   BaezaYates R, 2000, J AM SOC INFORM SCI, V51, P69, DOI 10.1002/(SICI)1097-4571(2000)51:1<69::AID-ASI10>3.0.CO;2-C
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Burkhardt S., 2001, Combinatorial Pattern Matching. 12th Annual Symposium, CPM 2001. Proceedings (Lecture Notes in Computer Science Vol. 2089), P73
   Burkhardt S., 1999, INT C COMPUTATIONAL, P77
   Chikhi R, 2013, ALGORITHM MOL BIOL, V8, DOI 10.1186/1748-7188-8-22
   Claude F, 2012, J DISCRET ALGORITHMS, V11, P37, DOI 10.1016/j.jda.2010.09.004
   Crainiceanu A., 2013, 2 INT WORKSH CLOUD I
   Erclogan O., 2007, International Journal of Security and Networks, V2, P50
   Fredriksson K, 2005, LECT NOTES COMPUT SC, V3772, P376
   Fredriksson K, 2009, J DISCRET ALGORITHMS, V7, P579, DOI 10.1016/j.jda.2008.09.001
   Gog S, 2014, SOFTWARE PRACT EXPER, V44, P1287, DOI 10.1002/spe.2198
   Grabowski S, 2015, LECT NOTES COMPUT SC, V9309, P287, DOI 10.1007/978-3-319-23826-5_28
   HORSPOOL RN, 1980, SOFTWARE PRACT EXPER, V10, P501, DOI 10.1002/spe.4380100608
   Kandhan R, 2010, PROC VLDB ENDOW, V3, P1173, DOI 10.14778/1920841.1920987
   Karkkainen J., 1996, Computing and Combinatorics. Second Annual International Conference. COCOON '96. Proceedings, P219
   Kent WJ, 2002, GENOME RES, V12, P656, DOI [10.1101/gr.229202, 10.1101/gr.229202. Article published online before March 2002]
   Kirsch A, 2008, RANDOM STRUCT ALGOR, V33, P187, DOI 10.1002/rsa.20208
   Labeit J, 2016, IEEE DATA COMPR CONF, P33, DOI 10.1109/DCC.2016.117
   MANBER U, 1994, PROCEEDINGS OF THE WINTER 1994 USENIX CONFERENCE, P23
   Manber Udi., 1990, SODA 90, P319
   Navarro G., 2001, IEEE Data Engineering Bulletin, V24, P19
   Puglisi SJ, 2006, LECT NOTES COMPUT SC, V4209, P122
   Rasmussen KR, 2006, J COMPUT BIOL, V13, P296, DOI 10.1089/cmb.2006.13.296
   Roberts M, 2004, BIOINFORMATICS, V20, P3363, DOI 10.1093/bioinformatics/bth408
   Sutinen E., 1995, Algorithms - ESA '95. Third Annual European Symposium. Proceedings, P327
   Takaoka T., 1994, Algorithms and Computation. 5th International Symposium, ISAAC '94 Proceedings, P234
   UKKONEN E, 1992, THEOR COMPUT SCI, V92, P191, DOI 10.1016/0304-3975(92)90143-4
   Wang LY, 2015, LECT NOTES COMPUT SC, V9233, P573, DOI 10.1007/978-3-662-48096-0_44
   Wang Z, 2015, 12 INT C DISTR COMP, P293
NR 30
TC 0
Z9 0
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2017
VL 47
IS 6
BP 799
EP 811
DI 10.1002/spe.2431
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EE
UT WOS:000403114000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Boyer, F
   Gruber, O
   Pous, D
AF Boyer, Fabienne
   Gruber, Olivier
   Pous, Damien
TI A robust reconfiguration protocol for the dynamic update of
   component-based software systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE reconfigurable software; dynamic reconfiguration; dynamic update;
   component models
ID MODEL; FRAMEWORK
AB This paper focuses on the dynamic reconfiguration of component-based software systems. From a structural point of view, such systems are made of components linked together through their provided and required services, the code of components being defined by modules (e.g., jar files). Today, the ability to reconfigure component-based systems at runtime faces limitations. Some component frameworks allow to dynamically reconfigure components -starting or stopping them, or changing how they are wired together for instance but forbid any dynamic evolution of the modules defining their code. Other frameworks allow to dynamically update modules but at the cost of loosing control on component wires, preventing software architects or tools alike to decide how components are wired together. In this paper, we propose a component framework that addresses these limitations through a unified approach for the management of components and modules. Our approach uniquely enables to reconfigure both components and modules at runtime, without restrictions. We prototyped the proposed framework in Java and exercised various dynamic reconfigurations of componentbased systems. Furthermore, we formalized this framework and proved the correctness of its reconfiguration protocol with the Coq proof assistant. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Boyer, Fabienne; Gruber, Olivier; Pous, Damien] Univ Grenoble Alpes, LIG, Grenoble, France.
   [Pous, Damien] UCB Lyon 1, Univ Lyon, CNRS, ENS Lyon,LIP, Lyon, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Universite Claude Bernard Lyon 1; Ecole
   Normale Superieure de Lyon (ENS de LYON); Centre National de la
   Recherche Scientifique (CNRS)
RP Boyer, F (corresponding author), Univ Grenoble, LIG, Grenoble, France.
EM fabienne.boyer@imag.fr
CR Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Apache Software Foundation, 2015, TAP COMP OR FRAM
   Baumeister H, 2006, ELECTRON NOTES THEOR, V160, P75, DOI 10.1016/j.entcs.2006.05.015
   Bertot Y., 2004, TEXT THEORET COMP S
   Bialek R, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P616, DOI 10.1109/APSEC.2004.71
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Boudreau T., 2007, RICH CLIENT PROGRAMM
   Boyer F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P13, DOI 10.1109/ICSE.2013.6606547
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Buhnova B, 2013, ELECT NOTES THEORETI, V295, P101
   Buisson J, 2014, CBSE 14 P 17 INT S C
   Cervantes H, 2004, COMP BAS SOFTW ENG 7
   Chen XJ, 2002, LECT NOTES COMPUT SC, V2370, P82
   Coulson G, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1328671.1328672
   Drossopoulou S, 1998, P ACM C OBJ OR PROGR
   Escoffier Clement, 2013, 2013 IEEE International Conference on Services Computing (SCC), P328, DOI 10.1109/SCC.2013.82
   Escoffier C, 2007, P IEEE I C SERV COMP, P474
   Escoffier C, 2015, 2015 18TH INTERNATIONAL ACM SIGSOFT SYMPOSIUM ON COMPONENT-BASED SOFTWARE ENGINEERING (CBSE), P85, DOI 10.1145/2737166.2737178
   Gamma E, 2011, FUTURE OF SOFTWARE ENGINEERING, P72, DOI 10.1007/978-3-642-15187-3_4
   Garlan David., 1994, INTRO SOFTWARE ARCHI
   Georgas JC, 2005, WORKSH ARCH DEP SYST
   Gomes ATA, 2007, LECT NOTES COMPUT SC, V4615, P237
   Gregersen Allan Raundahl, 2013, ICSOFT 2013. Proceedings of the 8th International Joint Conference on Software Technologies, P220
   Gregersen AR, 2009, J SOFTW MAINT EVOL-R, V21, P81, DOI 10.1002/smr.406
   JOnAS Project, JAV OP APPL SERV JON
   Joolia A., 2005, P 5 WORK IEEE IFIP C, P131
   Kabanov J., 2010, P BYT
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Lee YF, 2005, IEE P-SOFTW, V152, P110, DOI 10.1049/ip-sen:20045016
   Ma X., 2011, SIGSOFT/FSE'11 19th ACM SIGSOFT Symposium on the Foundations of Software Engineering (FSE-19) and ESEC'11: 13th European Software Engineering Conference (ESEC-13), Szeged, Hungary, September 5-9, 2011, P245, DOI [10.1145/2025113.2025148, DOI 10.1145/2025113.2025148]
   Malohlava M, 2013, ELECTRON NOTES THEOR, V295, P101, DOI 10.1016/j.entcs.2013.04.009
   Melton H, 2007, P 30 AUSTR C COMP SC, V62, P87
   Moreira RS, 2004, 24TH INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P320, DOI 10.1109/ICDCSW.2004.1284049
   Morin B, 2009, PROC INT CONF SOFTW, P122, DOI 10.1109/ICSE.2009.5070514
   Oracle, NETBEAN PLATF MOD SY
   Oreizy P, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P899
   OSGi Alliance, 2008, OSGI SERV PLATF COR
   OSGi Alliance, OSGI REL 4
   Panzica La Manna V., 2012, P 15 ACM SIGSOFT S C, P167
   Pous D., COQ FORMALISATION CE
   Pukall M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P989, DOI 10.1145/1985793.1985970
   Redlich David, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P208
   Roshandel R, 2004, ACM T SOFTW ENG METH, V13, P240, DOI 10.1145/1018210.1018213
   Seinturier L, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P268, DOI 10.1109/SCC.2009.27
   Sicard S, 2008, IEEE INT C SOFTW ENG
   Spring Projects, SPRING DYN MOD OSG S
   Subramanian S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1542476.1542478
   The Apache software foundation, AP XERC PROJ
   The Woodstox project, WOODST HIGH PERF XML
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   Wurthinger Thomas., 2010, P 8 INT C PRINC PRAC, P10, DOI [DOI 10.1145/1852761.1852764, 10.1145/1852761.1852764]
NR 52
TC 5
Z9 5
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1729
EP 1753
DI 10.1002/spe.2499
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500012
DA 2024-07-18
ER

PT J
AU Heo, K
   Oh, H
   Yi, K
AF Heo, Kihong
   Oh, Hakjoo
   Yi, Kwangkeun
TI Selective conjunction of context-sensitivity and octagon domain toward
   scalable and precise global static analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE static analysis; context-sensitive analysis; relational analysis;
   abstract interpretation
AB We present a practical technique for achieving a scalable and precise global static analysis by selectively applying context-sensitivity and the octagon relational domain. For precise analysis, context-sensitivity and relational analysis are key properties, but it has been hard to practically combine both of them. Our approach turns on those precision improvement features only when the analysis is likely to improve the precision to resolve given queries. The guidance comes from an impact pre-analysis that estimates the impact of a fully context-sensitive and relational octagon analysis. We designed a cost-effective pre-analysis and implemented this method in a realistic octagon analysis for full C. The experimental results show that our approach proves eight times more queries, while saving the time cost by 73.1% compared with a partially relational octagon analysis enabled by a syntactic heuristic. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Heo, Kihong; Yi, Kwangkeun] Seoul Natl Univ, Seoul, South Korea.
   [Oh, Hakjoo] Korea Univ, Seoul, South Korea.
C3 Seoul National University (SNU); Korea University
RP Oh, H (corresponding author), Korea Univ, Coll Informat, Programming Res Lab, Anam Dong 5 Ga, Seoul 136713, South Korea.
EM hakjoo_oh@korea.ac.kr
RI Heo, Kihong/AAD-8692-2019; Heo, Kihong/F-2901-2018; ‍, 오학주[ 부교수 / 컴퓨터학과
   ]/AAW-5194-2020
OI Heo, Kihong/0000-0003-2671-0142; 
FU Samsung Research Funding Center of Samsung Electronics [SRFC-IT1502-07];
   Institute for Information & communications Technology Promotion(IITP) -
   Korea government(MSIP) [R0190-16-2011, B0717-16-0098]; National Research
   Foundation of Korea(NRF) - Ministry of Science, ICT & Future Planning
   [NRF-2016R1C1B2014062]; BK21 Plus for Pioneers in Innovative Computing
   (Dept. of Computer Science and Engineering, SNU) - National Research
   Foundation of Korea(NRF) [21A20151113068]
FX This work was partly supported by Samsung Research Funding Center of
   Samsung Electronics under Project Number SRFC-IT1502-07 and Institute
   for Information & communications Technology Promotion(IITP) grant funded
   by the Korea government(MSIP) (No. R0190-16-2011, Development of
   Vulnerability Discovery Technologies for IoT Software Security), (No.
   B0717-16-0098, Development of homomorphic encryption for DNA analysis
   and biometry authentication). This research was also supported by Basic
   Science Research Program through the National Research Foundation of
   Korea(NRF) funded by the Ministry of Science, ICT & Future
   Planning(NRF-2016R1C1B2014062) and BK21 Plus for Pioneers in Innovative
   Computing (Dept. of Computer Science and Engineering, SNU) funded by
   National Research Foundation of Korea(NRF) (21A20151113068).
CR [Anonymous], 1977, POPL
   [Anonymous], 1991, Ph.D. dissertation
   Beckschulze E, 2012, ELECTRON NOTES THEOR, V287, P29, DOI 10.1016/j.entcs.2012.09.004
   Blanchet B, 2003, PLDI
   Cousot Patrick., 1992, Journal of Logic and Computation, V3, P103
   Farzan A, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P297
   Mangal R, 2014, LECT NOTES COMPUT SC, V8410, P513
   Manna Z., 1972, Proceedings of an ACM Conference on Proving Assertations about Programs, P27, DOI 10.1145/800235.807070
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   Oh H, 2011, VMCAI
   Oh H, 2012, ACM
   Oh H, 2014, ACM
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   Venet A., 2004, PLDI
   Yo Jhee, 2008, INTERPRETATION
NR 15
TC 3
Z9 3
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1677
EP 1705
DI 10.1002/spe.2493
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500010
DA 2024-07-18
ER

PT J
AU Yin, J
   Ma, C
   Hu, SM
AF Yin, Jie
   Ma, Chao
   Hu, Shi-Min
TI PAST: accurate instrumentation on fully optimized program
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE PAST; online instrumentation; offline instrumentation; abstract syntax
   tree; pattern matching
AB Instrumentation is a powerful technique for monitoring, profiling, debugging, logging and tracing the software. In order to determine the instrumentation location, the user needs to know where the current executed location is in the source code. Previous instrumentation approaches rely on debugging information to find the location in the source code. For fully optimized programs, debugging information is not complete, which limits the application of those approaches. In this paper, we present pattern-based abstract syntax tree (PAST) instrumentation, an ideal instrumentation methodology that accurately instruments the fully optimized program. The instrumentation location is specified in an intuitive way that matches the source code at the abstract syntax tree level. The program can be instrumented either at the compile time using the ordinary compiling or when it is running using the just-in-time compiling. Experimental results show that PAST can accurately instrument the target program. There is negligible run time overhead when the running program is instrumented without any operation. We have implemented PAST on both x86-32 and x86-64 to show that PAST is easily portable across different architecture. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Yin, Jie; Ma, Chao; Hu, Shi-Min] Tsinghua Univ, West Main Bldg 1-417, Beijing 100084, Peoples R China.
C3 Tsinghua University
RP Yin, J (corresponding author), Tsinghua Univ, West Main Bldg 1-417, Beijing 100084, Peoples R China.
EM yin-j10@mails.tsinghua.edu.cn
RI Hu, Shi-Min/AAW-1952-2020
CR Anand K., 2013, Proceedings of the 8th ACM European Conference on Computer Systems, EuroSys '13, P295
   [Anonymous], 2007, COMPILERS PRINCIPLES
   Bernat Andrew R., 2011, P 10 ACM SIGPLAN SIG, P9, DOI 10.1145/2024569.2024572
   Bruening D, 2003, INT SYM CODE GENER, P265, DOI 10.1109/CGO.2003.1191551
   Cantrill B., 2004, P ANN C USENIX ANN T, P2
   Coady Y., 2001, Software Engineering Notes, V26, P88, DOI 10.1145/503271.503223
   Cohn R, 1997, PROCEEDINGS OF THE USENIX WINDOWS NT WORKSHOP, P17
   Cook J, 2008, WODA 2008 6 INT WORK, P8
   Erlingsson U, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P311
   Hui K, 2003, IBM SYST J, P60
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Klimek M, 2013, CLANG AST TUTORIAL
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lattner C, 2007, INT S COD GEN OPT 20
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Muth R, 2001, SOFTWARE PRACT EXPER, V31, P67, DOI 10.1002/1097-024X(200101)31:1<67::AID-SPE357>3.0.CO;2-A
   Neamtiu J. F. I., 2005, P INT WORKSH MIN SOF, V30, P1, DOI [DOI 10.1145/1082983.1083143, 10.1145/1082983.1083143]
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Olszewski M., 2007, Operating Systems Review, V41, P3, DOI 10.1145/1272998.1273000
   Prasad V., 2005, OTTAWA LINUX S, P49
   Sager T., 2006, P 2006 INT WORKSHOP, P65, DOI DOI 10.1145/1137983.1138000
   Srivastava A.Eustace., 1994, ATOM: A system for building customized program analysis tools, V29
   Van Put L, 2005, 2005 IEEE INTERNATIONAL SYMPOSIUM ON SIGNAL PROCESSING AND INFORMATION TECHNOLOGY (ISSPIT), VOLS 1 AND 2, P7
NR 24
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2016
VL 46
IS 3
BP 341
EP 360
DI 10.1002/spe.2313
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DD2RH
UT WOS:000369769400003
DA 2024-07-18
ER

PT J
AU Duran-Faundez, C
   Ramos, M
   Rodriguez, P
AF Duran-Faundez, Cristian
   Ramos, Mario
   Rodriguez, Pedro
TI Applying Gaia and AUML for the development of multiagent-based control
   software for flexible manufacturing systems: addressing methodological
   and implementation issues
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multiagent systems; flexible manufacturing; software development
AB In this article, we present the development of a simple multiagent-based system for the control of a flexible manufacturing system. We followed the stages of a methodology specially conceived for the development of agent-based system, which is an integration of the classical methodology for agent-oriented analysis and design Gaia, and AUML (Agent-Unified Modeling Language). We adopted as study case the CIMUBB Laboratory at the University of Bio-Bio, which has a flexible manufacturing system including three flexible manufacturing cells interconnected by a conveyor belt. In the analysis stage, we identified roles involved, and we design models representing roles and protocols. In the design stage, we applied Gaia agent, services, and acquaintance models from Gaia, and we complemented with AUML as the adopted methodology suggests. With the developed models, we constructed a fully functional system where each agent was built as an independent process tree. Agents communicate by passing messages through the Ethernet network with socket interfaces. Various tests executed in our laboratory scale manufacturing system show the effectiveness of our implementation. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Duran-Faundez, Cristian] Univ Bio Bio, Dept Ingn Elect & Elect, Concepcion, Chile.
   [Ramos, Mario] Univ Bio Bio, Dept Ingn Maderas, Concepcion, Chile.
   [Rodriguez, Pedro] Univ Bio Bio, Dept Sistemas Informac, Concepcion, Chile.
C3 Universidad del Bio-Bio; Universidad del Bio-Bio; Universidad del
   Bio-Bio
RP Duran-Faundez, C (corresponding author), Univ Bio Bio, Fac Ingn, Dept Ingn Elect & Elect, Avda Collao 1202,Casilla 5-C, Concepcion, Chile.
EM crduran@ubiobio.cl
RI Duran-Faundez, Cristian/E-4279-2016
OI Duran-Faundez, Cristian/0000-0002-2793-5880
CR Allan R., 2011, SURVEY AGENT BASED M
   Ameri F, 2013, INT J ADV MANUF TECH, V66, P1097, DOI 10.1007/s00170-012-4392-9
   [Anonymous], 2002, FIPA Contract Net Interaction Protocol Specification
   [Anonymous], 2001, INT J PROD RES, V39, P625
   Bauer B, 2001, P AG OR SOFTW ENG AO, P8
   Bellifemine F, 2005, MU S ART SOC SIM ORG, V15, P125, DOI 10.1007/0-387-26350-0_5
   Botti NVJ, 2003, APLICACIONES IND SIS
   Chen B, 2006, SOFTWARE PRACT EXPER, V36, P1711, DOI 10.1002/spe.742
   Chen B, 2009, TRANSPORT RES C-EMER, V17, P1, DOI 10.1016/j.trc.2008.04.003
   Cossentino M., 2014, Handbook on Agent-Oriented Design Processes
   Davis R, 1981, 624 MIT AI LAB
   Duffie NA, 1996, INT J COMP INTEG M, V9, P270, DOI 10.1080/095119296131562
   Elalouf A, 2013, INT J PROD ECON, V145, P96, DOI 10.1016/j.ijpe.2013.01.003
   Garcia-Ojeda JC, 2002, 4 IB WORKSH MULT SYS, P16
   Groover M., 1980, AUTOMATION PRODUCTIO
   Guessoum Z, 1999, IEEE CONCURR, V7, P68, DOI 10.1109/4434.788781
   He N, 2014, INT J PROD ECON, V149, P117, DOI 10.1016/j.ijpe.2013.08.022
   Jana TK, 2013, J MANUF SYST, V32, P801, DOI 10.1016/j.jmsy.2013.07.004
   Li DN, 2013, COMPUT OPER RES, V40, P1207, DOI 10.1016/j.cor.2012.11.024
   Maropoulos PG, 2002, CIRP ANN-MANUF TECHN, V51, P363, DOI 10.1016/S0007-8506(07)61537-6
   Merdan M, 2013, J SIMUL, V7, P144, DOI 10.1057/jos.2012.15
   Odell James., 2000, AOIS WORKSHOP AAAI 2, P3
   Park HS, 2012, J MANUF SYST, V31, P337, DOI 10.1016/j.jmsy.2012.05.002
   Parunak V, 1998, SPECIFICATION DESIGN, P45
   Polyakovskiy S, 2014, COMPUT OPER RES, V44, P115, DOI 10.1016/j.cor.2013.10.013
   Ramos M, 1998, THESIS U H POINCAE N
   REHG JK, 1994, COMPUTER INTEGRATED
   Robotec E, 1991, ACL ADV CONTR LANG R
   Stefano AD, SOFTWARE PRACTICE EX, V39, P137
   Wooldridge M, 2000, AUTON AGENT MULTI-AG, V3, P285, DOI 10.1023/A:1010071910869
   Wooldridge M. J., 2002, INTRO MULTIAGENT SYS
NR 31
TC 2
Z9 2
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2015
VL 45
IS 12
BP 1719
EP 1737
DI 10.1002/spe.2302
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LK
UT WOS:000363501100006
DA 2024-07-18
ER

PT J
AU Gog, S
   Petri, M
AF Gog, Simon
   Petri, Matthias
TI Optimized succinct data structures for massive data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE succinct data structures; binary sequences; FM-index; algorithm
   engineering; massive data sets; rank; select; SSE; hugepages
ID SUFFIX ARRAYS; RETRIEVAL; STORAGE
AB Succinct data structures provide the same functionality as their corresponding traditional data structure in compact space. We improve on functions rank and select, which are the basic building blocks of FM-indexes and other succinct data structures. First, we present a cache-optimal, uncompressed bitvector representation that outperforms all existing approaches. Next, we improve, in both space and time, on a recent result by Navarro and Providel on compressed bitvectors. Last, we show techniques to perform rank and select on 64-bit words that are up to three times faster than existing methods. In our experimental evaluation, we first show how our improvements affect cache and runtime performance of both operations on data sets larger than commonly used in the evaluation of succinct data structures. Our experiments show that our improvements to these basic operations significantly improve the runtime performance and compression effectiveness of FM-indexes on small and large data sets. To our knowledge, our improvements result in FM-indexes that are either smaller or faster than all current state of the art implementations. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Gog, Simon] Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
   [Petri, Matthias] RMIT Univ, Sch Comp Sci & Informat Technol, Melbourne, Vic 3001, Australia.
C3 University of Melbourne; Royal Melbourne Institute of Technology (RMIT)
RP Gog, S (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
EM simon.gog@unimelb.edu.au
FU Australian Research Council; NICTA
FX The first author was supported by the Australian Research Council and
   the second author by NICTA.
CR [Anonymous], 1988, Succinct static data structures
   [Anonymous], 2008, J EXPT ALGORITHMICS
   Burrows M., 1994, BLOCK SORTING LOSSLE
   Clark D., 1996, THESIS U WATERLOO
   Claude F, 2008, LECT NOTES COMPUT SC, V5280, P176
   Culpepper JS, 2012, SIGIR 2012: PROCEEDINGS OF THE 35TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P225, DOI 10.1145/2348283.2348317
   ELIAS P, 1974, J ACM, V21, P246, DOI 10.1145/321812.321820
   Ferragina P, 2004, LECT NOTES COMPUT SC, V3246, P150
   Ferragina P, 2000, ANN IEEE SYMP FOUND, P390, DOI 10.1109/SFCS.2000.892127
   Fog A, 2012, INSTR TABL
   Gog S., 2011, THESIS ULM U ULM GER
   Gonzalez R, 2005, TRIQUARTERLY, P27
   Grossi R, 2003, SIAM PROC S, P841
   Haque IS, 2011, J CHEM INF MODEL, V51, P2345, DOI 10.1021/ci200235e
   Hon WK, 2010, LECT NOTES COMPUT SC, V6129, P260
   Kärkkäinen J, 2011, LECT NOTES COMPUT SC, V7024, P174, DOI 10.1007/978-3-642-24583-1_18
   Knuth D. E., 2011, ART COMPUTER PRO A 1, V4A
   Mäkinen V, 2005, LECT NOTES COMPUT SC, V3537, P45
   Mäkinen V, 2009, LECT NOTES COMPUT SC, V5541, P121, DOI 10.1007/978-3-642-02008-7_9
   MANBER U, 1993, SIAM J COMPUT, V22, P935, DOI 10.1137/0222058
   Munro J. I., 1996, Foundations of Software Technology and Theoretical Computer Science. 16th Conference Proceedings, P37
   Navarro Gonzalo, 2012, Combinatorial Pattern Matching. Proceedings 23rd Annual Symposium, CPM 2012, P2, DOI 10.1007/978-3-642-31265-6_2
   Navarro Gonzalo, 2012, Experimental Algorithms. Proceedings 11th International Symposium, SEA 2012, P295, DOI 10.1007/978-3-642-30850-5_26
   Navarro G, 2007, ACM COMPUT SURV, V39, DOI 10.1145/1216370.1216372
   Ohlebusch E, 2010, LECT NOTES COMPUT SC, V6393, P322, DOI 10.1007/978-3-642-16321-0_34
   Okanohara D, 2007, P WORKSH ALG ENG EXP
   Pagh R, 1998, RS9828 BRICS DEP COM
   Raman R, 2002, SIAM PROC S, P233
   Sadakane K, 2003, J ALGORITHMS, V48, P294, DOI 10.1016/S0196-6774(03)00087-7
   Suciu A, 2011, 2011 ROEDUNET INT C, P1
   Vigna S, 2008, LECT NOTES COMPUT SC, V5038, P154, DOI 10.1007/978-3-540-68552-4_12
NR 31
TC 46
Z9 49
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2014
VL 44
IS 11
BP 1287
EP 1314
DI 10.1002/spe.2198
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AT2AQ
UT WOS:000344733400001
DA 2024-07-18
ER

PT J
AU Liaw, HT
   Wei, SC
AF Liaw, Heh-Tyan
   Wei, Shih-Chieh
TI Obfuscation for object-oriented programs: dismantling instance methods
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE obfuscation; dismantling instance method; virtual function system;
   interface function system; dispatching function; callback method
ID JAVA
AB Code obfuscation can help software developers protect technological secrets. Code readability is greatly enhanced with object-oriented technology that represents dynamic binding using instance method invocation. Therefore, dismantling instance methods is proposed in this paper as a critical obfuscating technique for object-oriented programs. The interception classes are interpolated first into the project. The static images and the up forwarders are then created. For each virtual function system and each interface function system, a respective dispatching function is set up. By properly arranging the class identifiers and binding identifiers, the switch statement in the dispatching function can be compiled into constant-time low-level code. After using dispatching functions to simulate virtual function system or interface function system invocations, all original instance methods in the project will be removed. Interception functions and export functions are indispensable in supporting the operation of callback methods. A prototype of our obfuscation system was implemented and successfully tested on some practical scale applications. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Liaw, Heh-Tyan; Wei, Shih-Chieh] Tamkang Univ, New Taipei City 25137, Taiwan.
C3 Tamkang University
RP Liaw, HT (corresponding author), Tamkang Univ, Dept Informat Management, 151 Yingzhuan Rd, New Taipei City 25137, Taiwan.
EM htliaw@mail.tku.edu.tw
OI Wei, Shih-Chieh/0000-0001-7084-2498
CR [Anonymous], 2001, CRYPTO 2001, DOI DOI 10.1007/3-540-44647-81
   Appel Andrew W., 2002, DEOBFUSCATION IS NP
   Arnold K., 2005, The Java programming language
   Balachandran V., 2011, Information Forensics and Security (WIFS), 2011 IEEE International Workshop on, P1
   Batchelder M, 2007, LECT NOTES COMPUT SC, V4420, P96
   BIONDI P., 2006, BLACK HAT EUROPE
   Chan JT, 2004, J SYST SOFTWARE, V71, P1, DOI 10.1016/S0164-1212(02)00066-3
   Chou CF, 2008, J INFORM MANAGEMENT, V10, P111
   Collberg C., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P184, DOI 10.1145/268946.268962
   Collberg C., 1997, TAXONOMY OBFUSCATING
   Collberg CS, 2002, IEEE T SOFTWARE ENG, V28, P735, DOI 10.1109/TSE.2002.1027797
   Deitel H., 2003, JAVA PROGRAM, Vfifth
   DEITEL HM, 2007, JAVA PROGRAM
   Fukushima K, 2006, IPSJ DIGITAL COURIER, V2, P498, DOI [10.2197/ipsjdc.2.498, DOI 10.2197/IPSJDC.2.498]
   Gosling James., 2011, The Java Language Specification, Vseven
   Hou TW, 2006, IEE P-SOFTW, V153, P80, DOI 10.1049/ip-sen:20050010
   Lindholm T., 2011, JAVA VIRTUAL MACHINE
   Lippman StanleyB., 1996, INSIDE C OBJECT MODE
   Macionis J.J., 2007, SOCIOLOGY
   Mavrogiannopoulos N, 2011, COMPUT SECUR, V30, P679, DOI 10.1016/j.cose.2011.08.007
   Sakabe Y, 2006, INFORM MEDIA TECHNOL, V1, P134
   Schrittwieser Sebastian, 2011, Information Hiding. 13th International Conference, IH 2011. Revised Selected Papers, P270, DOI 10.1007/978-3-642-24178-9_19
   Sebesta R.W., 2009, Concepts of programming languages, V10th
   Sosonkin Mikhail., 2003, P 2003 ACM WORKSHOP, P142, DOI 10.1145/947380.947399
   Stroustrup B., 1997, The C++ Programming Language
   Vrba Z, 2010, FIFTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY: ARES 2010, PROCEEDINGS, P242, DOI 10.1109/ARES.2010.47
   Zhang X, 2010, CONVERGENCE HYBRID I, DOI [10.5772/9632, DOI 10.5772/9632]
   Zheng LT, 2005, ICTZ 12 10 NATL COLL
   Zhi Wang, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P553, DOI 10.1109/COMPSACW.2012.102
   Zhu W, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GRANULAR COMPUTING, P770, DOI 10.1109/GRC.2006.1635914
NR 30
TC 1
Z9 1
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2014
VL 44
IS 9
BP 1077
EP 1104
DI 10.1002/spe.2193
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN2MI
UT WOS:000340419100003
DA 2024-07-18
ER

PT J
AU Shtern, M
   Tzerpos, V
AF Shtern, Mark
   Tzerpos, Vassilios
TI Methods for selecting and improving software clustering algorithms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
C1 [Shtern, Mark; Tzerpos, Vassilios] York Univ, Dept Comp Sci & Engn, Toronto, ON M3J 2R7, Canada.
C3 York University - Canada
RP Shtern, M (corresponding author), York Univ, Dept Comp Sci & Engn, Toronto, ON M3J 2R7, Canada.
EM mark@cse.yorku.ca
CR Andreopoulos B, 2007, INFORM SOFTWARE TECH, V49, P244, DOI 10.1016/j.infsof.2006.10.010
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   Andritsos P, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P334, DOI 10.1109/WCRE.2003.1287264
   Andritsos P, 2004, LECT NOTES COMPUT SC, V2992, P123
   [Anonymous], 2010, ASE 10 P IEEE ACM IN, DOI DOI 10.1145/1858996.1859024
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   ANQUETIL N, 1997, P CASCON 1997, P184
   Bowman I. T., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P555, DOI 10.1109/ICSE.1999.841045
   CHOI SC, 1990, IEEE SOFTWARE, V7, P66, DOI 10.1109/52.43051
   Dietrich J, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P91
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Harman M, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1029
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   Koschke R, 2000, PROG COMPREHEN, P201, DOI 10.1109/WPC.2000.852494
   LAKHOTIA A, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/WCRE.1995.514714
   Lindig C, 1997, PROC INT CONF SOFTW, P349, DOI 10.1145/253228.253354
   Lung CH, 2004, J SYST SOFTWARE, V73, P227, DOI [10.1016/S0164-1212(03)00234-6, 10.1016/s0164-1212(03)00234-6]
   Maletic J. I., 1999, 14th IEEE International Conference on Automated Software Engineering, P251, DOI 10.1109/ASE.1999.802296
   Mamaghani Ali Safari, 2009, Proceedings of the 2009 Ninth IEEE International Conference on Computer and Information Technology. CIT 2009, P20, DOI 10.1109/CIT.2009.111
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Medvidovic N., 2006, Automated Software Engineering, V13, P225, DOI 10.1007/s10515-006-7737-5
   Mitchell BS, 2001, PROC IEEE INT CONF S, P744, DOI 10.1109/ICSM.2001.972795
   Mitchell BS, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P93
   Muller H. A., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P12, DOI 10.1109/ICSM.1990.131315
   Muller H. A., 1993, Journal of Software Maintenance: Research and Practice, V5, P181, DOI 10.1002/smr.4360050402
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Patel C, 2009, EUR CON SFTWR MTNCE, P27, DOI 10.1109/CSMR.2009.62
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Schwanke R. W., 1989, Proceedings of Fifth International Workshop on Software Specification and Design (Cat. No.89CH2717-7), P147, DOI 10.1145/75199.75223
   SCHWANKE RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.1991.130626
   Shokoufandeh A, 2005, J SYST SOFTWARE, V77, P213, DOI 10.1016/j.jss.2004.03.032
   Shtern M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P284, DOI 10.1109/WCRE.2004.6
   Shtern M, 2009, INT C PROGRAM COMPRE, P248, DOI 10.1109/ICPC.2009.5090051
   Tzerpos V., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P187, DOI 10.1109/WCRE.1999.806959
   Tzerpos V, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P76, DOI 10.1109/WCRE.1997.624578
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   TZERPOS V, 2001, THESIS U TORONTO
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Wen ZH, 2004, PROC IEEE INT CONF S, P368
   Wen ZH, 2003, PROG COMPREHEN, P227
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   XIAO C, 2004, THESIS YORK U
   Zhong S, 2004, IEEE INTELL SYST, V19, P20, DOI 10.1109/MIS.2004.1274907
NR 43
TC 9
Z9 9
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2014
VL 44
IS 1
BP 33
EP 46
DI 10.1002/spe.2147
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 271VL
UT WOS:000328419600002
DA 2024-07-18
ER

PT J
AU Monteiro, MP
   Gomes, J
AF Monteiro, Miguel P.
   Gomes, Joao
TI Implementing design patterns in Object Teams
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE aspect-oriented programming; design patterns; modularity; extensibility;
   reusability
ID CODE
AB This paper presents a study of the support for modularity of Object Teams, an aspect-oriented language backwards compatible with Java. The study is based on implementations in Object Teams of two complete collections of the Gang-of-Four design patterns. An analysis of the implementations is provided, in terms of advantages of Object Teams over Java with respect to modularity, module composition and reuse. We present a systematic comparison with a functionally equivalent collection of implementations in AspectJ, regarding five modularity properties: locality, reusability, composition transparency, (un)pluggability and extensibility. Object Teams yields broadly comparable results in terms of the first four properties. Object Teams yields better results as regards flexible module extensibility, composition at the instance level and enclosing multiple pattern participants into a larger, cohesive module. AspectJ is more successful than Object Teams in the Singleton pattern because of its ability to intercept constructor events. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Monteiro, Miguel P.; Gomes, Joao] Univ Nova Lisboa, Fac Ciencias & Tecnol, Dept Informat, CITI, P-2829516 Caparica, Portugal.
C3 Universidade Nova de Lisboa
RP Monteiro, MP (corresponding author), Univ Nova Lisboa, Fac Ciencias & Tecnol, Dept Informat, CITI, P-2829516 Caparica, Portugal.
EM mtpm@fct.unl.pt
OI Monteiro, Miguel/0000-0001-6043-8176
FU project PRIA [UTAustin/CA/0056/2008]; project GasPar
   [PTDC/EIA-EIA/108937/2008]; Portuguese FCT/MCTES; FEDER
FX This work is partially supported by projects PRIA
   (UTAustin/CA/0056/2008) and GasPar (PTDC/EIA-EIA/108937/2008) funded by
   Portuguese FCT/MCTES and FEDER.
CR Alpert ShermanR., 1998, DESIGN PATTERNS SMAL
   [Anonymous], 1997, Object-oriented software construction
   Aracic I, 2006, LECT NOTES COMPUT SC, V3880, P135
   Baumgartner G, 1996, CSDTR96020 PURD U
   Bernardi ML, 2005, P 13 IEEE INT WORKSH, P206, DOI 10. 1109/STEP. 2005. 14
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   Brichau J, 2005, AOSD EUROPE DELIVERA
   Cacho Nelio., 2006, AOSD 06 P 5 INT C AS, P109
   Colyer A., 2004, Eclipse aspectj: aspect-oriented programming with aspectj and the eclipse aspectj development tools
   Cooper J.W., 2000, JAVA DESIGN PATTERNS
   Elrad T, 2001, COMMUN ACM, V44, P33, DOI 10.1145/383845.383854
   Ernst E., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P303
   Ernst E, 2003, LECT NOTES COMPUT SC, V2743, P303
   Ernst E, 2003, P 2 INT C ASP OR SOF, P150, DOI 10.1145/643603.643619
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   Filman RobertE., 2005, ASPECT ORIENTED SOFT, P21
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia A, 2006, LECT NOTES COMPUT SC, V3880, P36
   Gibbons Jeremy., 2006, WGP 06, P1, DOI [10.1145/1159861.1159863, DOI 10.1145/1159861.1159863]
   Gomes Joao L., 2010, P 2010 ACM S APPL CO, P2119, DOI [10.1145/1774088.1774534, DOI 10.1145/1774088.1774534]
   Greenwood P, 2007, LECT NOTES COMPUT SC, V4609, P176
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   Harmes R., 2008, Pro JavaScript Design Patterns
   Herrmann S, 2003, LECT NOTES COMPUT SC, V2591, P248
   Herrmann S, 2009, OBJECTTEAMS JAVA LAN
   Herrmann S., 2002, WORKSH ASP OR MOD UM
   Herrmann S., 2004, Translation Polymorphism in Object Teams
   Herrmann S., 2004, Confinement and representation encapsulation in Object Teams
   Herrmann S, 2007, APPL ONTOL, V2, P181
   Hirschfeld R, 2003, LECT NOTES COMPUT SC, V2591, P216
   Hirschfeld R, 2003, 3 GERM WORKSH ASP OR
   Holzle U., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P36
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kouskouras KG, 2008, J SYST SOFTWARE, V81, P1725, DOI 10.1016/j.jss.2007.12.807
   Kuhlemann M, 2007, P 6 WORKSH ASP COMP
   Laddad R., 2009, ASPECTJ ACTION, V2nd
   Lammel R., 2006, GPCE 06, P161
   Lesiecki N., 2005, AOP WORK SERIES DE 2
   Lima A, 2010, 1 WORKSH EMP EV SOFT
   Lopez-Herrejon RE, 2005, LECT NOTES COMPUT SC, V3586, P169
   MADSEN OL, 1989, SIGPLAN NOTICES, V24, P397, DOI 10.1145/74878.74919
   Martin RC, 1996, C REPORT, V8
   Mattsson M., 1999, Communications of the ACM, V42, P80, DOI 10.1145/317665.317679
   Mezini M, 2005, ASPECT ORIENTED SOFT, P165
   Monteiro MP, 2008, SOFTWARE PRACT EXPER, V38, P361, DOI 10.1002/spe.835
   Monteiro MP, 2006, LECT NOTES COMPUT SC, V3880, P214
   Monteiro MP, 2004, DSOA 2004 WORKSH JIS
   Nordberg M.E., 2005, ASPECTORIENTED SOFTW, P557
   Odersky M, 2006, LAMPREPORT2006001 EC
   Oliveira BCDS, 2008, ACM SIGPLAN NOTICES, V43, P439, DOI 10.1145/1449955.1449799
   Olsen R, 2007, DESIGN PATTERNS RUBY
   Piveta EK, 2012, 3 LAT AM C PATT LANG
   Rajan H, 2007, P 14 C PATT LANG PRO, DOI 10. 1145/1772070. 1772081
   Rashid A, 2006, LECT NOTES COMPUT SC, V4199, P155
   Reenskaug Trygve., 1996, WORKING OBJECTS OORA
   Riehle D, 2000, ACM COMPUTING SURVEY, V32, DOI 10.1145/351936.351946
   Schmager F, 2010, 2 WORKSH EV US PROGR, DOI 10. 1145/1937117. 1937127
   Sousa E, 2008, P 2008 AOSD WORKSH S, DOI 10. 1145/1408647. 1408653
   Sullivan GT., 2002, AIM2002005 MIT ART I
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Torgersen M, 2004, LECT NOTES COMPUT SC, V3086, P123
   Wadler P, 1998, EXPRESSION PROBLEM M
   Xin B, 2004, UUCS04001
   Yuen I, 2007, P 3 WORKSH LINK ASP, DOI 10.1145/1275672.1275673
NR 66
TC 4
Z9 5
U1 0
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2013
VL 43
IS 12
SI SI
BP 1519
EP 1551
DI 10.1002/spe.2154
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 248JD
UT WOS:000326694500007
DA 2024-07-18
ER

PT J
AU Hasso, S
   Carlson, RC
AF Hasso, Sargon
   Carlson, R. C.
TI Software patterns catalog based on a new classification scheme
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design patterns; design patterns catalog; classification; requirements
   specification; software design; formal concepts
AB There are many software pattern catalogs that exist in the published literature today, but none of them uses a consistent classification technique that results in evolving and extensible pattern catalog. We have created a new classification scheme and used it as the basis for constructing a software pattern catalog. It is a uniform approach for creating, maintaining, and expanding the catalog. We present a brief overview of the classification scheme, describe the resulting catalog and the principles underlying its construction, show how to use the catalog, and demonstrate some of its benefits for software designers. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Hasso, Sargon] Wolters Kluwer Law & Business, Chicago, IL 60645 USA.
   [Carlson, R. C.] IIT, Chicago, IL 60616 USA.
C3 Illinois Institute of Technology
RP Hasso, S (corresponding author), Wolters Kluwer Law & Business, 4025 W Peterson, Chicago, IL 60645 USA.
EM sargon.hasso@wolterskluwer.com
CR Adamczyk P, 2002, THESIS ILLINOIS I TE
   Alexander C., 1977, PATTERN LANGUAGE TOW, V2
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1995, Design patterns for object-oriented software development
   [Anonymous], 2000, IEEE STD, V1471-2000, P1
   [Anonymous], 2000, Kluwer international series in software engineering
   Boch G, 2006, HDB SOFTWARE ARCHITE
   Boyd N, 2003, SELECTIVE V IN PRESS
   COAD P, 1997, OBJECT MODELS STRATE
   Coad P., 1991, OBJECT ORIENTED ANAL, V2nd
   Coplien JO, 1992, ADV C PROGRAMMING ST
   Eriksson H., 2000, BUSINESS MODELING UM
   GAMMA E, 1995, DESIGN PATTERNS
   GAMMA E, 1993, LECT NOTES COMPUTER, V707, P406, DOI DOI 10.1007/3-540-47910-4_21
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   Giarratano J. C., 2007, CLIPS USERS GUIDE
   HARRISON N, 2000, PATTERN LANGUAGES PR, V4
   Hasso S, 2007, THESIS ILLINOIS I TE
   Hasso S, 2005, 12 PATTERN LANGUAGES
   Hohpe  G., 2004, ADDISON WESLEY SIGNA
   Kampffmeyer H, 2007, LECT NOTES COMPUT SC, V4735, P211
   Mahdy A, 2002, 9 C PATT LANG PROGR
   Miller G., 1993, TECHNICAL REPORT
   MULYAR N, 2005, 6 WORKSH TUT PRACT U
   Nida E.A., 1975, COMPONENTIAL ANAL ME
   Noy N., Ontology development 101: A guide to creating your first ontology 0880
   Ranganatha SR, 1967, PROLEGOMENA LIB CLAS
   Rising L., 2000, SOFTWARE PATTERN SER
   Silverston L, 2003, DATA MODEL RESOURCE, V2
   TICHY WF, 1997, TECHNOLOGY OBJECT OR, P330
   Trowbridge D., 2004, DESCRIBING ENTERPRIS
   Vlissides J.M., 1996, PATTERN LANGUAGES PR, V2
   Zachman J, 2006, FRAMEWORK ENTERPRISE
   ZIMMER W, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P345
NR 34
TC 0
Z9 0
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2013
VL 43
IS 7
SI SI
BP 759
EP 768
DI 10.1002/spe.1117
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 158TW
UT WOS:000319997100003
DA 2024-07-18
ER

PT J
AU Kamal, AW
   Avgeriou, P
   Zdun, U
AF Kamal, Ahmad Waqas
   Avgeriou, Paris
   Zdun, Uwe
TI The use of pattern participants relationships for integrating patterns:
   a controlled experiment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architectural patterns; pattern languages; pattern relationships;
   modeling
ID SOFTWARE; DESIGN
AB Architectural patterns are often applied in combination with related patterns within software architectures. The relationships among architectural patterns must be considered when applying a combination of patterns into a system; for example the way the Model-View-Controller uses the Observer pattern to implement the change propagation mechanism needs to be carefully designed. However, effective integration of architectural patterns within software architectures remains a challenging task. This is because the integration of any two architectural patterns can take several forms. Furthermore, existing pattern languages define generic and abstract relationships between architectural patterns without going into detail about associations among the participants of architectural patterns. In this paper, we propose to address the pattern integration issue by discovering and defining a set of pattern participants relationships that serve the purpose of effectively integrating architectural patterns. Our findings are validated through a controlled experiment, which provides significant evidence that the proposed relationships support inexperienced designers in integrating patterns. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Kamal, Ahmad Waqas; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, Groningen, Netherlands.
   [Zdun, Uwe] Univ Vienna, Fac Comp Sci, Vienna, Austria.
C3 University of Groningen; University of Vienna
RP Kamal, AW (corresponding author), Univ Groningen, Dept Math & Comp Sci, Groningen, Netherlands.
EM a.w.kamal@rug.nl
RI Zdun, Uwe/AFR-2161-2022
OI Avgeriou, Paris/0000-0002-7101-0754
CR Abowd G. D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P319, DOI 10.1145/226241.226244
   [Anonymous], CASCON 96 P 1996 C C
   [Anonymous], HDB SOFTWARE ARCHITE
   [Anonymous], UML 2 0 SUP FIN AD S
   [Anonymous], 4 EUR C SOFTW ARCH E
   [Anonymous], PATTERN LANGUAGE DEV
   [Anonymous], SEKE 02 P 14 INT C S
   [Anonymous], ICDT 07 P 2 INT C DI
   [Anonymous], 2007, WILEY SERIES SOFTWAR
   [Anonymous], INFORMATICA
   [Anonymous], 1996, PATTERN ORIENTED SOF
   [Anonymous], 2000, PATTERNS CONCURRENT
   [Anonymous], 1995, Design patterns for object-oriented software development
   [Anonymous], ACM P 4 INT WORKSH P
   [Anonymous], TECHNICAL REPORT
   [Anonymous], INT C AUT SOFTW ENG
   [Anonymous], ACM IEEE P
   [Anonymous], BRIT J ORAL MAXILLOF
   Bass L., 2013, SOFTWARE ARCHITECTUR
   BROWN MB, 1974, J AM STAT ASSOC, V69, P364, DOI 10.2307/2285659
   Buschmarm F, 2007, IEEE SOFTWARE, V24, P31, DOI 10.1109/MS.2007.115
   Cronk B.C., 2006, How to use SPSS: A step-by-step guide to analysis and interpretation, V4th
   Fayad ME, 2001, COMMUN ACM, V44, P95, DOI 10.1145/383694.383713
   Giesecke Simon., 2007, Proceedings of the 11th IASTED International Conference on Software Engineering and Applications (SEA '07), P530
   Golden E, 2005, PROC INT CONF SOFTW, P460
   Harrison NB, 2007, IEEE SOFTWARE, V24, P38, DOI 10.1109/MS.2007.124
   Janeiro J, 2009, SIGDOC'09: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON DESIGN OF COMMUNICATION, P9
   Jedlitschka A, 2007, LECT NOTES COMPUT SC, V4336, P58
   Kitchenham BA, 2001, IEEE T SOFTWARE ENG, V27, P788, DOI 10.1109/32.950316
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   Porter R, 2005, SCI COMPUT PROGRAM, V56, P231, DOI 10.1016/j.scico.2004.11.014
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schumacher M., 2005, Security Patterns: Integrating Security and Systems Engineering, V1st
   Thisted R.A., 2010, Departments of Statistics and Health Studies
   ZIMMER W, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P345
NR 37
TC 1
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2013
VL 43
IS 7
SI SI
BP 807
EP 833
DI 10.1002/spe.1121
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 158TW
UT WOS:000319997100006
OA Green Published
DA 2024-07-18
ER

PT J
AU Stal, M
   Schmidt, DC
   Otte, WR
AF Stal, Michael
   Schmidt, Douglas C.
   Otte, William R.
TI Efficiently and transparently automating scalable on-demand activation
   and deactivation of services with the activator pattern
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE patterns; distributed computing; embedded systems
AB Computing systems are increasingly designed as a collection of interacting services that constitute a set of functionality offered by a service provider or server to its clients. Many service-oriented computing systems have constraints on the resources they allocate and manage. In these systems, certain types of services should consume resources only when they are accessed by clients, and clients should be shielded from where services are located, how they are deployed, and how their lifecycle is managed. The activator pattern provides an effective means to efficiently and transparently automate scalable on-demand activation and deactivation of services accessed by many clients. This paper motivates the need for the activator pattern, describes the structure and dynamics of canonical implementations of the pattern, and examines the benefits and liabilities of applying this pattern to services in resource-constrained computing systems. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Stal, Michael] Siemens Corp Technol, Munich, Germany.
   [Schmidt, Douglas C.; Otte, William R.] Vanderbilt Univ, Nashville, TN 37212 USA.
C3 Siemens AG; Siemens Germany; Vanderbilt University
RP Schmidt, DC (corresponding author), Vanderbilt Univ, Nashville, TN 37212 USA.
EM d.schmidt@vanderbilt.edu
CR Alur D., 2003, Core J2EE patterns, best practices and design strategies, V2nd
   [Anonymous], 2007, PATTERN ORIENTED SOF
   [Anonymous], MOBILE PHONE PROGRAM
   [Anonymous], 1996, PATTERN ORIENTED SOF
   Apple iOS Developer Library, 2011, APPL RUNT ENV
   Barisic D., 2007, International Conference on Advanced Information Networking and Applications Workshops, V1, P941
   Buschmann F., 2007, PATTERN ORIENTED SOF, V4
   CORSARO A, 2002, P 9 ANN C PATT LANG
   de Champeaux D., 1993, OBJECT ORIENTED SYST
   Evans E., 2003, Domain-Driven Design
   Fayad M, 2004, 11 PATT LANG PROGR P
   FAYAD ME, 2003, 2003 IEEE INT C INF
   Fowler M., 2015, UML Distilled: A Brief Guide to the Standard Object Modeling Language
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Grosso William., 2001, JAVA RMI
   Henning M., 1999, ADV CORBA PROGRAMMIN
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   Kircher M., 2004, PATTERN ORIENTED SOF, V3
   Mani N, 2011, P 2 JOINT WOSP SIPEW
   Newcomer E., 2002, UNDERSTANDING WEB SE
   Otte W, 2007, BEAUTIFUL CODE
   Petriu D, 1998, 6 INT WORKSH THEOR A
   RAGO S, 1993, UNIX SYSTEM 5 NETWOR
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Somadder G, 1998, P ISCA 13 INT C COMP
   Stevens R, 2008, ADV PROGRAMMING UNIX
   Waddington D.G., 2008, DESIGNING SOFTWARE I
   Weir C., 2000, SMALL MEMORY SOFTWAR
NR 28
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2013
VL 43
IS 7
SI SI
BP 789
EP 806
DI 10.1002/spe.1119
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 158TW
UT WOS:000319997100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ameller, D
   Collell, O
   Franch, X
AF Ameller, David
   Collell, Oriol
   Franch, Xavier
TI The Three-Layer architectural pattern applied to plug-in-based
   architectures: the Eclipse case
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE plug-in-based development; Three-Layer architectural pattern; Eclipse;
   software architecture; architectural knowledge
ID MODEL
AB The process of designing a software architecture using different kinds of components is often challenging. Different designs support some quality attributes while damaging others; therefore, trade-off analysis is needed to make informed decisions. Moreover, analysis made in theory needs to be complemented with observations in practice, especially when using a particular set of technologies to implement the system. In this paper, we present a particular instance of this problem. We study how the Three-Layer architectural pattern may be developed using plug-ins. We compare two extreme alternatives according to several representative scenarios and their impact in some quality attributes. Then, we apply this theoretical knowledge to a case study, the implementation of a plug-in-based tool for managing architectural knowledge using Eclipse. We report some unexpected difficulties found that forced us to adapt the theoretical solution into an operative architecture. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Ameller, David; Collell, Oriol; Franch, Xavier] Univ Politecn Cataluna, Barcelona, Spain.
C3 Universitat Politecnica de Catalunya
RP Ameller, D (corresponding author), Univ Politecn Cataluna, Barcelona, Spain.
EM dameller@essi.upc.edu
RI Ameller, David/A-4927-2010; Franch, Xavier/A-8588-2008
OI Ameller, David/0000-0002-3725-566X; Franch, Xavier/0000-0001-9733-8830
FU Spanish MICINN [TIN2010-19130-C02-02]
FX We thank Cristina Gomez and Cristina Vicente for their comments on early
   versions of the paper. We also thank David Cerdan for the early
   implementations of the ArchiTech system. This work has been partially
   supported by the Spanish MICINN project TIN2010-19130-C02-02.
CR Alexander C., 1979, The Timeless Way of Building
   Ameller D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P189, DOI 10.1109/RE.2010.32
   Ameller D, 2011, INT WORKSH SYST SOFT
   [Anonymous], 1996, PATTERN ORIENTED SOF
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Erl T., 2009, SOA DESIGN PATTERNS, VFirst
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Gamma Erich., 2003, CONTRIBUTING ECLIPSE
   Gamma Erich., 1994, DESIGN PATTERNS
   ISO/IEC/(IEEE), 2007, 42010 ISOIECIEEE
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lago P, 2010, IEEE SOFTWARE, V27, P20, DOI 10.1109/MS.2010.142
   Mayer J, 2003, LECT NOTES COMPUT SC, V2591, P87
   Prechelt L, 2011, P 1 WORKSH DEV TOOLS, P9
   Rivieres J, 2006, TECHNICAL REPORT
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   ZIMMERMANN H, 1980, IEEE T COMMUN, V28, P425, DOI 10.1109/TCOM.1980.1094702
NR 20
TC 0
Z9 0
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2013
VL 43
IS 4
SI SI
BP 391
EP 402
DI 10.1002/spe.2142
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 112UL
UT WOS:000316619200002
DA 2024-07-18
ER

PT J
AU Basanta-Val, P
   García-Valls, M
   Estévez-Ayres, I
AF Basanta-Val, P.
   Garcia-Valls, M.
   Estevez-Ayres, I.
TI Enhancing OSGi with real-time Java support
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE OSGi; real-time; RTSJ; Java; real-time Java
ID HEAP REMOTE OBJECTS; GARBAGE COLLECTION; ARCHITECTURE; GATEWAYS
AB OSGi was designed with embedded systems in mind, its current support is insufficient for coping with one main characteristic of many embedded systems: real-time performance. This article analyzes different key issues in providing OSGi with real-time Java performance covering motivational issues, and different integration ways and challenges stemming from the integration. It also contributes a general framework for introducing real-time performance in OSGi, which is called the real-time for OSGi framework. The framework uses real-time Java virtual machines and the real-time specification for Java. The adoption of this framework allows cyber-physical systems to experience real-time Java performance in their applications. The framework introduces several integration levels for OSGi and real-time specification for Java, and specific real-time OSGi services. An empirical implementation was carried out using standard software, which was extended with the new defined services. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Basanta-Val, P.; Garcia-Valls, M.; Estevez-Ayres, I.] Univ Carlos III Madrid, Dept Ingn Telemat, Leganes 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Basanta-Val, P (corresponding author), Univ Carlos III Madrid, Dept Ingn Telemat, Leganes 28911, Spain.
EM pbasanta@it.uc3m.es
RI Garcia-Valls, Marisol/D-6064-2013; Basanta-Val, Pablo/F-6863-2016;
   Estevez-Ayres, Iria/G-4730-2011
OI Garcia-Valls, Marisol/0000-0003-2383-5310; Basanta-Val,
   Pablo/0000-0002-0522-9010; Estevez-Ayres, Iria/0000-0002-1047-5398
FU iLAND project [ARTEMIS-JU 100026]; ARTEMIS JTU; Spanish Ministry of
   Industry, Commerce, and Tourism; ARTISTDesign NoE of the 7th EU
   Framework Programme [IST-2007-214373]; Spanish national project 'DDS
   Gateway for Web Services' [TSI-020501-2008-159]; REM4VSS: Desarrollo de
   middleware para la Reconfiguracion en Tiempo real de Sistemas
   Distribuidos de Video-Vigilancia, CICyT [TIN 2011-28339]
FX The authors would like to acknowledge the many valuable contributions
   made by the anonymous reviewers of the article. This work has been
   partly funded by the iLAND project (ARTEMIS-JU 100026) funded by the
   ARTEMIS JTU and the Spanish Ministry of Industry, Commerce, and Tourism.
   Also, this work has been partly funded by the ARTISTDesign NoE
   (IST-2007-214373) of the 7th EU Framework Programme and by the Spanish
   national project 'DDS Gateway for Web Services' (TSI-020501-2008-159)
   and by REM4VSS: Desarrollo de middleware para la Reconfiguracion en
   Tiempo real de Sistemas Distribuidos de Video-Vigilancia (TIN
   2011-28339) CICyT.
CR [Anonymous], REAL TIME SPECIFICAT
   [Anonymous], P 6 INT S SOFTW ENG
   [Anonymous], JTRES 10 PRAG CZECH
   [Anonymous], JTIME VIRTUAL MACHIN
   [Anonymous], 2010, OSGI SERV PLATF COR
   [Anonymous], OPEN SOURCE OSGI SER
   [Anonymous], 2011, DISTRIBUTED REAL TIM
   [Anonymous], REQUIREMENTS REAL TI
   Bacon DF, 2003, LECT NOTES COMPUT SC, V2889, P466
   Basanta-Val P, 2005, ISORC 2005: EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P382
   Basanta-Val P, 2004, LECT NOTES COMPUT SC, V3292, P359
   Basanta-Val P, 2011, IEEE T IND INFORM, V7, P750, DOI 10.1109/TII.2011.2166796
   Basanta-Val P, 2011, CONCURR COMP-PRACT E, V23, P1623, DOI 10.1002/cpe.1675
   Basanta-Val Pablo, 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P2341, DOI 10.1109/CIT.2010.403
   Basanta-Val P, 2009, IEEE LAT AM T, V7, P107, DOI 10.1109/TLA.2009.5173472
   Basanta-Val P, DISTRIBUTED EMBEDDED
   Basanta-Val P, 2011, 11 IEEE C CONS EL LA
   Basanta-Val P, 2010, P IEEE RTAS WORK IN
   Basanta-Val P, 2011, SOFTWARE PRACTICE EX
   Basanta-Val P, 2007, RTAS 2007: 13TH REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P123
   Basanta-Val P, 2011, CONCURR COMP-PRACT E, V23, P1236, DOI 10.1002/cpe.1701
   Basanta-Val P, 2010, ACM T EMBED COMPUT S, V10, DOI 10.1145/1814539.1814546
   Basanta-Val P, 2010, IEEE T PARALL DISTR, V21, P506, DOI 10.1109/TPDS.2009.95
   Bini E, 2009, IEEE T COMPUT, V58, P279, DOI 10.1109/TC.2008.167
   Bollella G, 2005, ISORC 2005: EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P45
   Bollella Gregory, 2003, OOPSLA COMPANION, P361, DOI [10.1145/949344.949443, DOI 10.1145/949344.949443]
   Borg A., 2003, Proceedings 15th Euromicro Conference on Real-Time Systems. ECRTS 2003, P238
   de Lucena VF, 2009, IEEE T CONSUM ELECTR, V55, P1254, DOI 10.1109/TCE.2009.5277985
   Estévez-Ayres I, 2009, IEEE T IND INFORM, V5, P278, DOI 10.1109/TII.2009.2026422
   Foley S, 2007, P 5 INT WORKSH JAV T, P23
   Garcia-Valls M., 2010, 2010 8th IEEE International Conference on Industrial Informatics (INDIN 2010), P130, DOI 10.1109/INDIN.2010.5549450
   Garcia-Valls Marisol, 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P1987, DOI 10.1109/CIT.2010.336
   Garcia-Valls M., 2005, Business Process Management Workshops. BPM 2005 International Workshops BPI, BPD, ENEI, BPRM, WSCOBPM, BPS. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3812), P329
   García-Valls M, 2011, IEEE T CONSUM ELECTR, V57, P1280, DOI 10.1109/TCE.2011.6018885
   Gui N, 2008, FRAMEWORK ADAPTIVE R, P35
   Ha YG, 2009, IEEE T CONSUM ELECTR, V55, P470, DOI 10.1109/TCE.2009.5174409
   Kang DO, 2005, IEEE T CONSUM ELECTR, V51, P87, DOI 10.1109/TCE.2005.1405704
   Lin CY, 2009, IEEE T CONSUM ELECTR, V55, P1271, DOI 10.1109/TCE.2009.5277987
   Nilsen Kelvin., 1996, Java Developer's Journal, V1, P44
   Rajkumar R, 2010, DES AUT CON, P731
   Redondo RPD, 2007, IEEE T CONSUM ELECTR, V53, P87, DOI 10.1109/TCE.2007.339507
   Richardson T, 2009, J CLIN EXP NEUROPSYC, P1
   Richardson T, 2012, DISTRIBUTED EMBEDDED
   Richardson T, 2010, ADMISSION CONTROL PR, P217
   Sha L., 2004, REAL TIME SYSTEMS J, V28, P101
   Tofte M., 2004, Higher-Order and Symbolic Computation, V17, P245, DOI 10.1023/B:LISP.0000029446.78563.a4
   Topalis E, 2002, IEEE T CONSUM ELECTR, V48, P825, DOI 10.1109/TCE.2003.1196408
   Val PB, 2009, IEEE T IND INFORM, V5, P289, DOI 10.1109/TII.2009.2026271
   Wellings A, 2002, ISORC 2002: FIFTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P13, DOI 10.1109/ISORC.2002.1003655
   Wu JK, 2008, IEEE T CONSUM ELECTR, V54, P1166, DOI 10.1109/TCE.2008.4637602
NR 50
TC 3
Z9 3
U1 0
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2013
VL 43
IS 1
BP 33
EP 65
DI 10.1002/spe.2101
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 058SC
UT WOS:000312653300002
DA 2024-07-18
ER

PT J
AU Park, Y
   King, R
   Nathan, S
   Most, W
   Andrade, H
AF Park, Yoonho
   King, Richard
   Nathan, Senthil
   Most, Wesley
   Andrade, Henrique
TI Evaluation of a high-volume, low-latency market data processing system
   implemented with IBM middleware
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE market data processing; IBM middleware; commodity hardware; performance
   optimizations
AB A stock market data processing system that can handle high data volumes at low latencies is critical to market makers. Such systems play a critical role in algorithmic trading, risk analysis, market surveillance, and many other related areas. The current systems tend to use specialized software and custom processors. We show that such a system can be built with general-purpose middleware and run on commodity hardware. The middleware we use is IBM System S which includes transport technology from IBM WebSphere MQ Low Latency Messaging (LLM). Our performance evaluation consists of two parts. First, we determined the effectiveness of each system optimization that the hardware and software infrastructure makes available. These optimizations were implemented at all software levelsapplication, middleware, and operating system. Second, we evaluated our system on different hardware platforms. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Park, Yoonho; King, Richard; Nathan, Senthil; Most, Wesley; Andrade, Henrique] IBM TJ Watson Res Ctr, Hawthorne, NY 10532 USA.
C3 International Business Machines (IBM)
RP Park, Y (corresponding author), IBM TJ Watson Res Ctr, POB 704, Hawthorne, NY 10532 USA.
EM yoonho@us.ibm.com
CR Abadi D., 2005, P INN DAT SYST RES C
   Agarwal V, 2009, COMPUT SCI-RES DEV, V23, P249, DOI 10.1007/s00450-009-0093-5
   AMINI L, 2006, P INT C DISTR COMP S
   Andrade H., 2009, P IEEE INT C DAT ENG
   [Anonymous], 2011, IBM SYST X3950 M2
   [Anonymous], 2011, FAST PROTOCOL
   [Anonymous], 2011, CEL MARK DAT LIN HAN
   [Anonymous], 2011, RED HAT ENT LIN 5, P5
   [Anonymous], 2011, IBM BLADECENTER BLAD
   [Anonymous], 2011, IBM Z OS
   [Anonymous], 2011, REDL TRAD SOL PROD
   Arasu A., 2003, IEEE DATA ENG B, V26, P19
   Brosky S., 2003, P INT PAR DISTR PROC
   Chandrasekaran S., 2003, P INN DAT SYST RES C
   Feldman M, 2007, HPCWIRE          JUN
   Ferreira KB, 2008, P C HIGH PERF NETW C
   Froehlich S, 2008, P S PREC CLOCK SYNCH
   Gedik B, 2008, P INT C MAN DAT SIGM
   Gedik B., 2009, P 2009 C INF KNOWL M
   Gedik B, 2009, SOFTWARE PRACT EXPER, V39, P1347, DOI 10.1002/spe.941
   Hirzel M, 2009, RC24830 IBM
   *IBM, IBM CELL BROADB ENG
   *IBM, IBM BLUE GEN
   IBM WebSphere, 2011, IBM WEBSPHERE MQ LOW
   Jacques-Silva G, 2007, P INT C AUT COMP ICA
   Jain N., 2006, P INT C MAN DAT SIGM
   Jones T, 2003, P C HIGH PERF NETW C
   Kim JS, 2007, J PARALLEL DISTR COM, V67, P755, DOI 10.1016/j.jpdc.2007.04.006
   Klug T., 2008, T HIGH PERFORMANCE E, V3
   MacSweeny G, 2008, WALL STREET TECH DEC
   Nataraj A, 2007, P C HIGH PERF NETW C
   Petrini F, 2003, P C HIGH PERF NETW C
   Sottile MJ, 2004, P INT C CLUST COMP C
   Wolf J, 2009, P INT MIDDL C MIDDL
   Wolf J, 2008, P INT MIDDL C MIDDL
   WU KL, 2007, P INT C VER LARG DAT
   Zhang L, 2002, P C COMP COMM INFOCO
   [No title captured]
NR 38
TC 11
Z9 12
U1 0
U2 5
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2012
VL 42
IS 1
BP 37
EP 56
DI 10.1002/spe.1047
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 869KG
UT WOS:000298596200004
DA 2024-07-18
ER

PT J
AU Zhao, XL
   Zou, Y
AF Zhao, Xulin
   Zou, Ying
TI A business process-driven approach for generating software modules
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business process; software architecture generation; clustering
   algorithms
AB Business processes describe the business operations of an organization and capture the business requirements. Business applications provide automated support for an organization to achieve their business objectives. A software modular structure represents the structure of a business application and shows the distribution of functionality to software components. However, mainstream design approaches rely on software architects' craftsmanship to derive software modular structures from business requirements. Such a manual approach is inefficient and often leads to inconsistency between business requirements and business applications. To address this problem, we propose an approach to derive software modular structures from business processes. We use clustering algorithms to analyze dependencies among data and tasks captured in business processes and group the strongly dependent tasks and data into a software component. A case study is conducted to generate software modular structures from a collection of business processes from the industrial setting and open-source development domain. The experiment results illustrate that our proposed approach can generate meaningful software modular structures with high modularity. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Zhao, Xulin; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada
RP Zhao, XL (corresponding author), Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
EM xulin.zhao@queensu.ca
RI Zou, Ying/KLC-9380-2024
CR Al-Otaiby T. N., 2005, P 43 ANN SE REG C, P223
   AMBRIOLA V, 2004, J INFORM, V28, P117
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], BUSINESS PROCESS EXE
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Arsanjani A., 2004, SERVICE ORIENTED MOD
   Bass L., 2013, SOFTWARE ARCHITECTUR
   BRIGGS R, 2002, P 35 ANN HAW INT C S, V1
   Card DavidN., 1990, MEASURING SOFTWARE D
   DHAMA H, 1995, J SYST SOFTWARE, V29, P65, DOI 10.1016/0164-1212(94)00128-A
   Garlan D., 1993, Advances in software engineering and knowledge engineering, P1
   Grunbacher P., 2004, SOFTW SYST MODEL, V3, P235
   Hofmeister C, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P77
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   *IBM, IBM WBI MOD
   IEEE, 2000, IEEE REC PRACT ARCH
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Klein MH, 1999, INT FED INFO PROC, V12, P225
   Ko R., 2009, CROSSROADS, V15, P11, DOI DOI 10.1145/1558897.1558901
   KOEHLER J, 2006, 5 INT WORKSH GRAPH T, P1
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lung CH, 2004, J SYST SOFTWARE, V73, P227, DOI [10.1016/S0164-1212(03)00234-6, 10.1016/s0164-1212(03)00234-6]
   LUNG CH, 1998, P 3 INT WORKSH SOFTW, P101
   LUNG CH, 2005, INT J SOFTW ENG KNOW, P747
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Maqbool O, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P15, DOI 10.1109/CSMR.2004.1281402
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   McDavid Doug, BUSINESS IT GAP KEY
   MERILINNA J, 2005, THESIS VTT TECHNICAL, P3
   MITCHELL BS, 2002, THESIS DREXEL U PHIL, P1
   Mitra T., 2005, BUSINESS DRIVEN DEV
   NORTHROP LM, 1991, P SEI C SOFTW ENG ED, P205
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   SCHWANKE RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.1991.130626
   SULLIVAN KJ, 2001, P 8 EUR SOFTW ENG C, P99, DOI DOI 10.1145/503209.503224
   Tang A, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P640, DOI 10.1109/APSEC.2004.2
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Tzerpos V, 2000, PROG COMPREHEN, P211, DOI 10.1109/WPC.2000.852495
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   Wasserman AI, 1996, IEEE SOFTWARE, V13, P23, DOI 10.1109/52.542291
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Xiong B, 2010, I C WIREL COMM NETW
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   Zhang W, 2006, REQUIR ENG, V11, P205, DOI 10.1007/s00766-006-0033-x
   ZIMMERMANN O, 2007, WORKSH SOFTW ENG MET
   Zou Y, 2002, PROC IEEE INT CONF S, P530, DOI 10.1109/ICSM.2002.1167814
   Zou Y, 2009, J SOFTW MAINT EVOL-R, V21, P315, DOI 10.1002/smr.410
NR 50
TC 9
Z9 9
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2011
VL 41
IS 10
SI SI
BP 1049
EP 1071
DI 10.1002/spe.1068
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 818RV
UT WOS:000294773600004
DA 2024-07-18
ER

PT J
AU Gampe, A
   von Ronne, J
   Niedzielski, D
   Vasek, J
   Psarris, K
AF Gampe, Andreas
   von Ronne, Jeffery
   Niedzielski, David
   Vasek, Jonathan
   Psarris, Kleanthis
TI Safe, multiphase bounds check elimination in Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multiphase optimization; program analysis; array bounds checks; Java;
   SafeTSA
ID EFFICIENT; CODE
AB As part of its type-safety regime, Java's semantics require precise exceptions at runtime when programs attempt out-of-bound array accesses. This paper describes a Java implementation that utilizes a multiphase approach to identifying safe array accesses. This approach reduces runtime overhead by spreading the out-of-bounds checking effort across multiple phases of compilation and execution: production of mobile code from source code, just-in-time (JIT) compilation in the virtual machine, application method invocations, and the execution of individual array accesses. The code producer uses multiple passes (including common subexpression elimination, load elimination, induction variable substitution, speculation of dynamically verified invariants, and inequality constraint analysis) to identify unnecessary bounds checks and prove their redundancy. During class-loading and JIT compilation, the virtual machine verifies the proofs, inserts code to dynamically validate speculated invariants, and generates code specialized under the assumption that the speculated invariants hold. During each runtime method invocation, the method parameters and other inputs are checked against the speculated invariants, and execution reverts to unoptimized code if the speculated invariants do not hold. The combined effect of the multiple phases is to shift the effort associated with bounds-checking array access to phases that are executed earlier and less frequently, thus, reducing runtime overhead. Experimental results show that this approach is able to eliminate more bounds checks than prior approaches with minimal overhead during JIT compilation. These results also show the contribution of each of the passes to the overall elimination. Furthermore, this approach increased the speed at which the benchmarks executed by up to 16%. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Gampe, Andreas; von Ronne, Jeffery; Niedzielski, David; Vasek, Jonathan; Psarris, Kleanthis] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
C3 University of Texas System; University of Texas at San Antonio (UTSA)
RP von Ronne, J (corresponding author), Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
EM vonronne@cs.utsa.edu
OI von Ronne, Jeffery/0000-0002-6575-196X
FU Air Force Research laboratory [F30602-02-1-0001]; National Science
   Foundation [CCF-0846010, EIA-0117255, CCF-0702527, CNS-0855247]; Direct
   For Computer & Info Scie & Enginr; Division Of Computer and Network
   Systems [0855247] Funding Source: National Science Foundation; Division
   of Computing and Communication Foundations; Direct For Computer & Info
   Scie & Enginr [0846010, 1237502] Funding Source: National Science
   Foundation
FX The authors thank Keyvan Nayyeri and Zi Yan for their assistance in
   formatting the pseudocode for the BQVE algorithm. They also thank the
   anonymous referees for their comments and suggestions, which have
   greatly improved this paper. This paper is supported by the Air Force
   Research laboratory (F30602-02-1-0001) and by the National Science
   Foundation (CCF-0846010, EIA-0117255, CCF-0702527, CNS-0855247).
CR Albert E, 2005, LECT NOTES COMPUT SC, V3452, P380
   AMMARGUELLAT Z, 1990, P ACM SIGPLAN C PROG, P283
   Amme W, 2001, ACM SIGPLAN NOTICES, V36, P137, DOI 10.1145/381694.378825
   AMME W, 2005, ELIMINATING BOUND CH
   Amme W, 2007, ACM T ARCHIT CODE OP, V4, DOI 10.1145/1250727.1250733
   Amme W, 2007, ELECTRON NOTES THEOR, V176, P97, DOI 10.1016/j.entcs.2006.06.019
   Barrett C, 2004, LECT NOTES COMPUT SC, V3114, P515
   Bender MA, 2002, LECT NOTES COMPUT SC, V2286, P508, DOI 10.1007/3-540-45995-2_44
   Besson F, 2006, THEOR COMPUT SCI, V364, P273, DOI 10.1016/j.tcs.2006.08.012
   Birch Johnnie, 2004, PRO 2004, P265
   Blume W., 1994, Proceedings Supercomputing '94 (Cat. No.94CH34819), P528, DOI 10.1109/SUPERC.1994.344316
   Bodik R, 2000, ACM SIGPLAN NOTICES, V35, P321, DOI 10.1145/358438.349342
   Bouton T, 2009, LECT NOTES ARTIF INT, V5663, P151, DOI 10.1007/978-3-642-02959-2_12
   Bull JM, 2000, CONCURRENCY-PRACT EX, V12, P375, DOI 10.1002/1096-9128(200005)12:6<375::AID-CPE480>3.0.CO;2-M
   Burke M. G., 1999, Proceedings of the ACM 1999 Java Grande Conference, P129, DOI 10.1145/304065.304113
   Chen Guangyu., 2005, CASES '05: Proceedings of the 2005 international conference on Compilers, architectures and synthesis for embedded systems, P105
   COLBY C, 2000, P 2000 ACM C PROG LA, P95
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Dantzig G., 2016, LINEAR PROGRAMMING E
   Dantzig GB., 1973, Journal of Combinatorial Theory (A), V14, P288, DOI DOI 10.1016/0097-3165(73)90004-6
   de Moura L, 2007, LECT NOTES COMPUT SC, V4590, P20
   Dor Nurit., 2003, PLDI 03, P155, DOI [10.1145/781131.781149, DOI 10.1145/781131.781149]
   FRANZ M, 2003, IVME 03, P24
   GAMPE A, 2008, P INT C PRINC PRACT
   Ganapathy V., 2003, ACM C COMPUTER COMMU, P345
   Gosling J., 2005, Java Language Specification, Vthird
   Grant B, 2000, THEOR COMPUT SCI, V248, P147, DOI 10.1016/S0304-3975(00)00051-7
   HAGHIGHAT MR, 1995, THESIS U ILLINOIS UR
   HALDAR V, 2002, 2002118 SUN LABS
   KARMARKAR N, 1984, COMBINATORICA, V4, P373, DOI 10.1007/BF02579150
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Menon V.S., 2006, POPL 06, P397
   Midkiff SP, 1998, IBM SYST J, V37, P409, DOI 10.1147/sj.373.0409
   MOCK M, 2000, MICRO 33, P291
   Moreira JE, 2000, ACM T PROGR LANG SYS, V22, P265, DOI 10.1145/349214.349222
   Moreira JE, 2000, IBM SYST J, V39, P21, DOI 10.1147/sj.391.0021
   Moskal M, 2008, LECT NOTES COMPUT SC, V4963, P486, DOI 10.1007/978-3-540-78800-3_38
   MOTZKIN TS, 1936, THESIS U BASEL AZRIE
   Necula G, 1998, THESIS CARNEGIE MELL
   Necula G.C., 1997, 24 ANN S PRINCIPLES, P106
   Nguyen TVN, 2005, ACM T PROGR LANG SYS, V27, P527, DOI 10.1145/1065887.1065893
   Niedzielski D, 2009, LECT NOTES COMPUT SC, V5673, P137, DOI 10.1007/978-3-642-03237-0_11
   ODERSKY M, P S PRINC PROGR LANG, P146
   PUGH W, 1992, P ACM SIGPLAN 92 C P, P140
   Qian F, 2002, LECT NOTES COMPUT SC, V2304, P325
   Rose E, 2003, J AUTOM REASONING, V31, P303, DOI 10.1023/B:JARS.0000021015.15794.82
   Rugina R, 2005, ACM T PROGR LANG SYS, V27, P185, DOI 10.1145/1057387.1057388
   RUSTAN K, 2005, LECT NOTES COMPUTER, V3780, P119
   Shankar A, 2005, ACM SIGPLAN NOTICES, V40, P327, DOI 10.1145/1103845.1094837
   SHOU Y, 2006, ACM SE 44 P 44 ANN S, P1
   SRIVASTAVA S, 2009, 21 INT C COMP AID VE
   Suzuki N., 1977, POPL 77, P132
   van Engelen R. A., 2001, Compiler Construction. 10th International Conference, CC 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2027), P118
   von Ronne J, 2009, CONCURR COMP-PRACT E, V21, P41, DOI 10.1002/cpe.1341
   VONRONNE J, 2006, CSTR2006004 U TEX SA
   WOLFE M, 1992, SIGPLAN NOTICES, V27, P162
   Wu P., 2001, ICS 01, P78, DOI DOI 10.1145/377792.377809
   Würthinger T, 2009, SCI COMPUT PROGRAM, V74, P279, DOI 10.1016/j.scico.2009.01.002
   Xi HW, 1998, ACM SIGPLAN NOTICES, V33, P249, DOI 10.1145/277652.277732
   Yessick DE, 2002, IEEE SOUTHEASTCON 2002: PROCEEDINGS, P226, DOI 10.1109/SECON.2002.995591
   Zhao JS, 2005, PDCAT 2005: SIXTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED COMPUTING, APPLICATIONS AND TECHNOLOGIES, PROCEEDINGS, P35
NR 62
TC 3
Z9 3
U1 2
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2011
VL 41
IS 7
BP 753
EP 788
DI 10.1002/spe.1028
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 766TV
UT WOS:000290810300002
DA 2024-07-18
ER

PT J
AU Di Penta, M
   Harman, M
   Antoniol, G
AF Di Penta, Massimiliano
   Harman, Mark
   Antoniol, Giuliano
TI The use of search-based optimization techniques to schedule and staff
   software projects: an approach and an empirical study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE search-based software engineering; genetic algorithms in software
   engineering; software project management
ID MANAGEMENT; METHODOLOGY; ALGORITHM; SYSTEM
AB Allocating resources to a software project and assigning tasks to teams constitute crucial activities that affect project cost and completion time. Finding a solution for such a problem is NP-hard; this requires managers to be supported by proper tools for performing such an allocation. This paper shows how search-based optimization techniques can be combined with a queuing simulation model to address these problems. The obtained staff and task allocations aim to minimize the completion time and reduce schedule fragmentation. The proposed approach allows project managers to run multiple simulations, compare results and consider trade-offs between increasing the staffing level and anticipating the project completion date and between reducing the fragmentation and accepting project delays. The paper presents results from the application of the proposed search-based project planning approach to data obtained from two large-scale commercial software maintenance projects. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Di Penta, Massimiliano] Univ Sannio Palazzo Ex Poste, Dept Engn, I-82100 Benevento, Italy.
   [Harman, Mark] Kings Coll London Strand, Dept Comp Sci, London WC2R 2LS, England.
   [Antoniol, Giuliano] Ecole Polytech, Dept Genie Informat, Montreal, PQ H3C 3A7, Canada.
C3 University of Sannio; University of London; King's College London;
   Universite de Montreal; Polytechnique Montreal
RP Di Penta, M (corresponding author), Univ Sannio Palazzo Ex Poste, Dept Engn, Via Traiano, I-82100 Benevento, Italy.
EM dipenta@unisannio.it
RI Di Penta, Massimiliano/AAF-9656-2021
OI Di Penta, Massimiliano/0000-0002-0340-9747; Harman,
   Mark/0000-0002-5864-4488
FU Natural Sciences and Engineering Research Council of Canada
   [950-202658]; EPSRC [EP/D050863, EP/G060525]
FX This research was partially supported by the Natural Sciences and
   Engineering Research Council of Canada (Research Chair in Software
   Evolution # 950-202658) and by G. Antoniol Individual Discovery Grant.
   Mark Harman is supported by EPSRC project Software Engineering by
   Automated Search (EP/D050863, SEBASE, 2006-2011), for which the other
   principal investigators are John Clark (University of York) and Xin Yao
   (University of Birmingham) and by an EPSRC platform grant (EP/G060525,
   CREST, 2009-2014).
CR ABDELHAMID TK, 1989, IEEE T SOFTWARE ENG, V15, P109, DOI 10.1109/32.21738
   Aguilar-Ruiz JS, 2001, INFORM SOFTWARE TECH, V43, P875, DOI 10.1016/S0950-5849(01)00193-8
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   Alvarez-Valdes R, 2006, J HEURISTICS, V12, P95, DOI 10.1007/s10732-006-5224-6
   [Anonymous], P 6 MET INT C MIC 05
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], P 9 INT ADV SCI TECH
   [Anonymous], P 2002 C GEN EV COMP
   [Anonymous], 1975, ANAL BEHAV CLASS GEN
   [Anonymous], 2007, J MATH MODEL ALGORIT, DOI DOI 10.1007/S10852-007-9058-5
   [Anonymous], FUTURE SOFTWARE ENG
   [Anonymous], TR0903 KINGS COLL DE
   [Anonymous], 2004, NONLINEAR OPTICS TEL, DOI DOI 10.1007/978-3-662-08996-5
   [Anonymous], GENETIC PROGRAMMING
   [Anonymous], EUR C SOFTW MAINT RE
   [Anonymous], FUTURE SOFTWARE ENG
   Antoniol G, 2005, PROC IEEE INT CONF S, P240
   Antoniol G, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P172, DOI 10.1109/METRIC.2004.1357901
   Antoniol G, 2004, IEEE T SOFTWARE ENG, V30, P43, DOI 10.1109/TSE.2004.1265735
   ARANO T, 1993, P INT COMP SOFTW APP, P56, DOI 10.1109/CMPSAC.1993.404215
   Barreto A., 2005, Proceedings of the Seventh International Workshop on Economics-driven Software Engineering Research, New York, NY, USA, P1, DOI DOI 10.1145/1082983.1083093
   Barreto A, 2008, COMPUT OPER RES, V35, P3073, DOI 10.1016/j.cor.2007.01.010
   Bertolino A., 2007, Software Process Improvement and Practice, V12, P141, DOI 10.1002/spip.312
   Brooks F.P., 1995, The mythical man-month (20th anniversary ed.)
   Chang CK, 2001, ANN SOFTW ENG, V11, P11, DOI 10.1023/A:1012579501037
   Chang CK, 1998, P INT COMP SOFTW APP, P534, DOI 10.1109/CMPSAC.1998.716715
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Coello CAC, 2002, COMPUT METHOD APPL M, V191, P1245, DOI 10.1016/S0045-7825(01)00323-1
   Coffman E. G., 1996, Approximation algorithms for bin packing: A survey, P46
   Cortellessa V, 2008, COMPUT OPER RES, V35, P3090, DOI 10.1016/j.cor.2007.01.011
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Di Penta Massimiliano, 2007, 2007 IEEE International Conference on Software Maintenance, P315, DOI 10.1109/ICSM.2007.4362644
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   French S., 1982, Sequencing and Scheduling
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Gross D., 1998, FOUNDAMENTALS QUEUEI, V3rd
   Gueorguiev S., 2009, P 11 ANN C GENETIC E, P1673, DOI DOI 10.1145/1569901.1570125
   Gutjahr WJ, 2008, CENT EUR J OPER RES, V16, P281, DOI 10.1007/s10100-008-0057-z
   Husbands P., 1994, AISB Quarterly, P38
   Kapur P, 2008, J SOFTW MAINT EVOL-R, V20, P365, DOI 10.1002/smr.379
   Kirsopp Colin., 2002, GECCO 02, P1367
   Kolisch R, 2006, EUR J OPER RES, V174, P23, DOI 10.1016/j.ejor.2005.01.065
   Lestan Z, 2009, ANN DAAAM, V20, P1603
   METROPOLIS N, 1953, J CHEM PHYS, V21, P1087, DOI 10.1063/1.1699114
   Raffo DM, 2000, J SYST SOFTWARE, V53, P31, DOI 10.1016/S0164-1212(00)00006-6
   Ramaswamy R, 2000, IEEE SOFTWARE, V17, P90, DOI 10.1109/52.896255
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Stummer C, 2009, INT J INF TECH DECIS, V8, P379, DOI 10.1142/S0219622009003429
NR 50
TC 33
Z9 35
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2011
VL 41
IS 5
SU SI
BP 495
EP 519
DI 10.1002/spe.1001
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 736RQ
UT WOS:000288512200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bellifemine, F
   Fortino, G
   Giannantonio, R
   Gravina, R
   Guerrieri, A
   Sgroi, M
AF Bellifemine, Fabio
   Fortino, Giancarlo
   Giannantonio, Roberta
   Gravina, Raffaele
   Guerrieri, Antonio
   Sgroi, Marco
TI SPINE: A domain-specific framework for rapid prototyping of WBSN
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE body sensor networks; domain-specific frameworks; signal processing;
   SPINE
ID SENSOR
AB Wireless body sensor networks (WBSNs) enable a broad range of applications for continuous and real-time health monitoring and medical assistance. Programming WBSN applications is a complex task especially due to the limitation of resources of typical hardware platforms and to the lack of suitable software abstractions. In this paper, SPINE (signal processing in-node environment), a domain-specific framework for rapid prototyping of WBSN applications, which is lightweight and flexible enough to be easily customized to fit particular application-specific needs, is presented. The architecture of SPINE has two main components: one implemented on the node coordinating the WBSN and one on the nodes with sensors. The former is based on a Java application, which allows to configure and manage the network and implements the classification functions that are too heavy to be implemented on the sensor nodes. The latter supports sensing, computing and data transmission operations through a set of libraries, protocols and utility functions that are currently implemented for TinyOS platforms. SPINE allows evaluating different architectural choices and deciding how to distribute signal processing and classification functions over the nodes of the network. Finally, this paper describes an activity monitoring application and presents the benefits of using the SPINE framework. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Fortino, Giancarlo; Gravina, Raffaele; Guerrieri, Antonio] Univ Calabria, DEIS, I-87036 Arcavacata Di Rende, CS, Italy.
   [Bellifemine, Fabio; Giannantonio, Roberta] Telecom Italia, Turin, Italy.
   [Gravina, Raffaele; Sgroi, Marco] WSN Lab Telecom Italia, Berkeley, CA USA.
C3 University of Calabria; Telecom Italia; Telecom Italia
RP Fortino, G (corresponding author), Univ Calabria, DEIS, I-87036 Arcavacata Di Rende, CS, Italy.
EM g.fortino@unical.it
RI Guerrieri, Antonio/JFN-2228-2023; Gravina, Raffaele/S-8707-2017;
   Fortino, Giancarlo/J-2950-2017
OI Gravina, Raffaele/0000-0002-2257-0886; GUERRIERI,
   ANTONIO/0000-0003-1469-9484; Fortino, Giancarlo/0000-0002-4039-891X
FU European Commission [FP7-2007-2-224053]
FX The authors thank Roozbeh Jafari at the University of Dallas, Sameer
   Iyengar, Kevin Klues, and Alberto Sangiovanni-Vincentelli at the
   University of Berkeley, Filippo Tempia Bonda at Telecom Italia, Trevor
   Pering at Intel Research Santa Clara, Philip Kuryloski at the Cornell
   University, Luigi Buondonno, Antonio Giordano, Stefano Galzarano at the
   University of Calabria, for their precious contributions to the SPINE
   project in terms of ideas, discussions and implementation efforts. This
   work has been partially supported by CONET, the Cooperating Objects
   Network of Excellence, funded by the European Commission under FP7 with
   contract number FP7-2007-2-224053.
CR Akyildiz IF, 2002, COMPUT NETW, V38, P393, DOI 10.1016/S1389-1286(01)00302-4
   [Anonymous], 2006, BODY SENSOR NETWORKS
   Bao L, 2004, LECT NOTES COMPUT SC, V3001, P1, DOI 10.1007/978-3-540-24646-6_1
   Bramer M., 2007, PRINCIPLES DATA MINI, V180
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   FOK CL, 2005, P 4 INT C INF PROC S, P1
   GIANNANTONIO R, 2009, P 3 INT C PERV COMP
   Heinzelman WB, 2004, IEEE NETWORK, V18, P6, DOI 10.1109/MNET.2004.1265828
   Hester T, 2006, BSN 2006: International Workshop on Wearable and Implantable Body Sensor Networks, Proceedings, P5
   KUMAR R, 2003, ACM SENSYS LOS ANG C, P114
   Kuryloski P, 2009, SIXTH INTERNATIONAL WORKSHOP ON WEARABLE AND IMPLANTABLE BODY SENSOR NETWORKS, PROCEEDINGS, P92, DOI 10.1109/P3644.30
   Lester J, 2006, LECT NOTES COMPUT SC, V3968, P1
   LOMBRISER C, 2007, VERT SYST KIVS 2007, P49
   Madden S, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P131, DOI 10.1145/1060289.1060303
   Malan D., 2004, Proc of the MobiSys 2004 Workshop on Applications of Mobile Embedded Systems (WAMES 2004), P12
   Maurer U, 2006, BSN 2006: INTERNATIONAL WORKSHOP ON WEARABLE AND IMPLANTABLE BODY SENSOR NETWORKS, PROCEEDINGS, P113
   Najafi B, 2003, IEEE T BIO-MED ENG, V50, P711, DOI 10.1109/TBME.2003.812189
   Pansiot J, 2007, IFMBE PROC, V13, P208
   PUDIL P, 1994, PATTERN RECOGN LETT, V15, P1119, DOI 10.1016/0167-8655(94)90127-9
   Raveendranathan N, 2009, INT SYM IND EMBED, P124, DOI 10.1109/SIES.2009.5196204
   SADILEK DA, 2007, P 4 INT WORKSH SOFTW, P237
   SIMON D, 2005, 20 ANN ACM SIGPLAN C, P150, DOI DOI 10.1145/1094855.1094908
   Souto E, 2006, PERS UBIQUIT COMPUT, V10, P37, DOI 10.1007/s00779-005-0038-3
   2009, LGPL DOCUMENTATION
   2010, SPINE HMM
NR 25
TC 69
Z9 72
U1 1
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2011
VL 41
IS 3
BP 237
EP 265
DI 10.1002/spe.998
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 724WZ
UT WOS:000287608400002
OA Green Published
DA 2024-07-18
ER

PT J
AU Turaga, D
   Andrade, H
   Gedik, B
   Venkatramani, C
   Verscheure, O
   Harris, JD
   Cox, J
   Szewczyk, W
   Jones, P
AF Turaga, Deepak
   Andrade, Henrique
   Gedik, Bugra
   Venkatramani, Chitra
   Verscheure, Olivier
   Harris, Jeffrey David
   Cox, John
   Szewczyk, William
   Jones, Paul
TI Design principles for developing stream processing applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design principles; stream processing applications; System S; Spade
AB Stream processing applications are used to ingest, process, and analyze continuous data streams from heterogeneous sources of live and stored data, generating streams of output results. These applications are, in many cases, complex, large- scale, low- latency, and distributed in nature. In this paper, we describe the design principles and architectural underpinnings for stream processing applications. These principles are distilled from our experience in building real- world applications both for internal use as well as with customers from several industrial and academic domains. We provide principles, guidelines, as well as appropriate implementation examples to highlight the different aspects of stream processing application design and development. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Turaga, Deepak; Andrade, Henrique; Gedik, Bugra; Venkatramani, Chitra; Verscheure, Olivier] IBM Res Corp, Hawthorne, NY 10532 USA.
   [Harris, Jeffrey David; Cox, John; Szewczyk, William] US Govt, Washington, DC USA.
   [Jones, Paul] HM Govt, London, England.
C3 International Business Machines (IBM)
RP Andrade, H (corresponding author), Goldman Sachs, 200 W St, New York, NY 10282 USA.
EM henrique.c.m.andrade@gmail.com
RI Gedik, Buğra/F-7842-2014
OI Szewczyk, William/0000-0002-5327-2478
CR Abadi D.J., 2005, CIDR, P277
   AGGARWAL C, 2006, DATA STREAMS MODELS, pCH9
   AMINI L, 2006, P WORKSH DAT MIN STA
   Andrade H, 2009, PROC INT CONF DATA, P1375, DOI 10.1109/ICDE.2009.116
   [Anonymous], 2008, Proceedings of the 2008 ACM SIGMOD international conference on Management of data, SIGMOD'08, ACM
   [Anonymous], 2006, P 15 INT C WORLD WID, DOI [DOI 10.1145/1135777.1135794, 10.1145/1135777.1135794]
   [Anonymous], 2006, Data Streams: Models and Algorithms (Advances in Database Systems)
   [Anonymous], 2009, INTEL OPEN SOURCE CO
   Arasu A., 2003, IEEE Data Engineering Bulletin, V26
   BABCOCK B, 2007, DATA STREAMS MODELS, pCH7
   Balakrishnan H., 2004, VERY LARGE DATABASES
   BIEM A, 2010, P INT C AC SPEECH SI
   *CALTECH, 2003, SENS RESP M CHAND BI
   Chandrasekaran S., 2003, P INN DAT SYST RES C
   CHEN L, 2006, P INT PAR DISTR PROC
   Dasgupta K., 2008, EDBT, P668
   Data Mining Group, 2009, PRED MOD MARK LANG
   Duyne D.K.V., 2002, DESIGN SITES PATTERN
   Erl T., 2007, SOA Principles of Service Design
   Gamma Erich., 1994, DESIGN PATTERNS
   Gedik B., 2009, SOFTWARE PRACTICE EX, V39
   Gedik Bugra., 2009, PROC 18 INT C INFORM, P847, DOI DOI 10.1145/1645953.1646061
   Hellerstein Joseph L, 2004, Feedback control of computing systems
   HIRZEL M, 2009, RC24760 IBM RES
   Huayong Wang, 2009, Languages and Compilers for Parallel Computing. 22nd International Workshop, LCPC 2009, Revised Selected Papers, P383
   Hughes C., 2003, PARALLEL DISTRIBUTED
   Hulten Geoff., 2003, VFML TOOLKIT MINING
   Hwang JH, 2005, PROC INT CONF DATA, P779
   *IBM, 2009, IBM INFOSPHERE WAR
   *IBM, 2009, IBM SOLIDDB
   Jacques-Silva G, 2007, P INT C AUT COMP ICA
   Jacques-Silva G, 2009, I C DEPEND SYS NETWO, P145, DOI 10.1109/DSN.2009.5270344
   JACQUESSILVA G, 2010, P INT MIDDL C MIDDL
   Jain Navendu., 2006, SIGMOD 06 P 2006 ACM, P431, DOI DOI 10.1145/1142473.1142522
   Khandekar R, 2009, LECT NOTES COMPUT SC, V5896, P308, DOI 10.1007/978-3-642-10445-9_16
   KIM JS, 2007, J PARALLEL DISTRIBUT, V67
   Kopetz H., 1997, REAL TIME SYSTEMS DE
   Kumar V., 2006, P EUR C COMP SYST EU
   Lea Doug, 1999, Concurrent Programming in Java. Second Edition: Design Principles and Patterns, V2nd
   Lienhart R, 2003, 2003 INTERNATIONAL CONFERENCE ON MULTIMEDIA AND EXPO, VOL II, PROCEEDINGS, P277
   McConnell Steve, 2004, Code Complete: A Practical Handbook of Software Construction. Best Practices for Developers, V2nd
   PARK Y, J PARALLEL DIS UNPUB
   Pauw W. De, 2009, INFORM VISUALIZATION, V8
   SALIHBEGOVIC A, 2008, P INT WORKSH SOFTW E, P15
   SCHNEIDER S, 2009, P INT C PAR DISTR PR
   Senator TE, 2005, FIFTH IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P386, DOI 10.1109/ICDM.2005.102
   Shah MA, 2003, PROC INT CONF DATA, P25, DOI 10.1109/ICDE.2003.1260779
   *STREAMBASE, 2009, STREAMBASE SYST
   Subhlok J, 2000, J PARALLEL DISTR COM, V60, P297, DOI 10.1006/jpdc.1999.1596
   Thies W, 2002, LECT NOTES COMPUT SC, V2304, P179
   TURAGA D, 2007, SEM AEC APC
   Turaga DS, 2008, BIOSIGNALS 2008: PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON BIO-INSPIRED SYSTEMS AND SIGNAL PROCESSING, VOL II, P96
   Turaga DeepakS., 2008, MM 08, P289
   Upadhyaya G, 2007, PROCEEDINGS OF THE 2007 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING PPOPP'07, P13, DOI 10.1145/1229428.1229433
   Wolf J, 2008, LECT NOTES COMPUT SC, V5346, P306, DOI 10.1007/978-3-540-89856-6_16
   Wu K.-L., 2007, Proc. of VLDB, P1185
   Zhang X., 2009, P 2009 WORKSH HIGH P
   2009, OPEN SOURCE JPEG LIB
   2009, AUSTR SQUARE KILOMET
NR 59
TC 16
Z9 20
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2010
VL 40
IS 12
SI SI
BP 1073
EP 1104
DI 10.1002/spe.993
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677TZ
UT WOS:000284016000003
DA 2024-07-18
ER

PT J
AU Sendín-Raña, P
   Rodríguez-Fernández, E
   González-Castaño, FJ
   Costa-Montenegro, E
   Rodríguez-Hernández, PS
   Pousada-Carballo, JM
   Burguillo-Rial, JC
AF Sendin-Rana, P.
   Rodriguez-Fernandez, E.
   Gonzalez-Castano, F. J.
   Costa-Montenegro, E.
   Rodriguez-Hernandez, P. S.
   Pousada-Carballo, J. M.
   Burguillo-Rial, J. C.
TI Web-oriented business intelligence solution based on Associative Query
   Logic
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business intelligence; Associative Query Logic; data clouds
ID DATABASE TECHNOLOGY
AB In this paper we present our experience in the development of a web-based business intelligence tool according to the Associative Query Logic paradigm, which can represent large amounts of data in a way that allows extremely fast queries. It has been developed as an open-source, multi-platform software, relying on data compression techniques for the storage of large amounts of data in the main memory. The performance of our solution in terms of compression, load time and response time is close to that of the commercial tool of reference, QlikView. Moreover, we provide solutions to some open problems in QlikView published description, which may be beneficial to assist in the development of other open or proprietary tools. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Gonzalez-Castano, F. J.] ETSI Telecommun, Galician Res & Dev Ctr Adv Telecommun, Vigo 36310, Spain.
   [Sendin-Rana, P.; Rodriguez-Fernandez, E.; Gonzalez-Castano, F. J.; Costa-Montenegro, E.; Rodriguez-Hernandez, P. S.; Pousada-Carballo, J. M.; Burguillo-Rial, J. C.] Univ Vigo, Dept Ingn Telemat, Vigo 36310, Spain.
C3 Universidade de Vigo; Universidade de Vigo
RP González-Castaño, FJ (corresponding author), ETSI Telecommun, Galician Res & Dev Ctr Adv Telecommun, Vigo 36310, Spain.
EM javier@det.uvigo.es
RI Rodríguez-Hernández, Pedro S/E-8468-2016; Costa-Montenegro,
   Enrique/ABE-6778-2020; González-Castaño, Francisco J./D-2637-2018;
   Burguillo, Juan Carlos/E-9091-2016
OI Rodríguez-Hernández, Pedro S/0000-0003-3610-6125; Costa-Montenegro,
   Enrique/0000-0002-4674-1897; Burguillo, Juan Carlos/0000-0001-9869-7448;
   Gonzalez-Castano, Francisco Javier/0000-0001-5225-8378
CR AGARWAL S, 1996, P 22 INT C VER LARG
   *AP FDN, 2010, STRUTS FRAM
   Booth D., 2004, W3C WORKING GROUP NO, DOI Booth, D., Haas, H., McCabe, F., Newcomer, E. I., Champion, M. F., & Orchard, D
   Chaudhuri S, 2001, COMPUTER, V34, P48, DOI 10.1109/2.970575
   Chaudhuri S., 1997, SIGMOD Record, V26, P65, DOI 10.1145/248603.248616
   Codd E.F., 1993, Providing OLAP (Online Analytical Processing) to User-Analysts: An IT Mandate
   DASILVA J, 2006, P ACM S APPL COMP DI
   Davenport T.H., 2000, WORKING KNOWLEDGE OR, DOI DOI 10.1145/347634.348775
   FIDALGO R, 2002, P 22 INT C CHIL COMP
   FISER B, 2004, P 15 INT WORKSH DAT
   GUPTA A, 1995, P 21 VLDB C
   MADEIRA H, 2003, P 2003 INT C DEP SYS
   *MICR CORP, 2010, OLE DB
   *MICR CORP HYP SOL, 2002, XML AN SPEC VERS 1 1
   MOORMAN M, 1999, P 1999 24 ANN SAS US
   MUMICK IS, 1997, P INT C MAN DAT TUCS
   MURRAY G, 2002, ASYNCHRONTOUS JAVASC
   NEGASH S, 2003, P AM C INF SYST TAMP
   *OLAP COUNC, 2010, MDAPI SPEC VERS 2 0
   PENDSE N, 2003, WHAT IS OLAP OLAP RE
   *PENT, 2010, OP SOURC BUS INT
   QLIK TECH INT AB, 2000, Patent No. 6037938
   QLIK TECH INT AB, 2006, Patent No. 7058621
   QLIK TECH INT AB, 2001, Patent No. 6236986
   Sendín-Raña P, 2009, SOFTWARE PRACT EXPER, V39, P279, DOI 10.1002/spe.899
   Thalhammer T, 2002, SOFTWARE PRACT EXPER, V32, P1193, DOI 10.1002/spe.479
   ZAMAN KA, 2005, P INT C MAN DAT BALT
   ZHUGE Y, 1995, P INT C MAN DAT SAN
   [No title captured]
   2010, SOAP SPECIFICATIONS
   2010, JAVA SPECIFICATION R
NR 31
TC 0
Z9 1
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2010
VL 40
IS 9
BP 779
EP 796
DI 10.1002/spe.980
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 635WF
UT WOS:000280687400002
DA 2024-07-18
ER

PT J
AU Deorowicz, S
AF Deorowicz, Sebastian
TI Solving longest common subsequence and related problems on graphical
   processing units
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE longest common subsequence; constrained longest common subsequence;
   transposition invariance; graphical processing units; general processing
   using GPU; CUDA
ID ALGORITHM; GPU; COMPUTATION; ALIGNMENT; SPACE; CUDA
AB Modern graphical processing units (GPUs) offer much more computational power than modern central processing units. Therefore, it is natural that GPUs are applied not only for their original purposes, but also for general processing (GPGPU). In the field of sequence processing, one of the most important problems is the measuring of sequence similarity. There are many sequence similarity measures, e.g. edit distance, longest common subsequence length, and their derivatives. We examine the possibility of speeding up the algorithms computing some of them. We chose three measures useful in different situations. The experimental results show that the GPU versions of the examined algorithms are faster than their serial counterparts by a factor between 4 and 65. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 Silesian Tech Univ, PL-44100 Gliwice, Poland.
C3 Silesian University of Technology
RP Deorowicz, S (corresponding author), Silesian Tech Univ, Akad 16, PL-44100 Gliwice, Poland.
EM sebastian.deorowicz@polsl.pl
RI Deorowicz, Sebastian/F-8386-2014
OI Deorowicz, Sebastian/0000-0002-9496-733X
CR Alerstan E., 2008, J BIOMEDICAL OPTICS, V13
   ALLISON L, 1986, INFORM PROCESS LETT, V23, P305, DOI 10.1016/0020-0190(86)90091-8
   [Anonymous], 2007, NVIDIA CUDA PROGR GU
   ARSIAN AN, 2005, INT J FOUND COMPUT S, V16, P1099
   Bereg S, 2007, J COMB OPTIM, V13, P179, DOI 10.1007/s10878-006-9020-x
   Bergroth L, 2000, SPIRE 2000: SEVENTH INTERNATIONAL SYMPOSIUM ON STRING PROCESSING AND INFORMATION RETRIEVAL - PROCEEDINGS, P39, DOI 10.1109/SPIRE.2000.878178
   BOAS PV, 1977, INFORMATION PROCESSI, V6, P80
   Chin FYL, 2004, INFORM PROCESS LETT, V90, P175, DOI 10.1016/j.ipl.2004.02.008
   Chowdhury RA, 2006, PROCEEDINGS OF THE SEVENTHEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P591, DOI 10.1145/1109557.1109622
   Crawford T., 1998, COMPUTING MUSICOLOGY, V11, P71
   Crochemore M, 2001, INFORM PROCESS LETT, V80, P279, DOI 10.1016/S0020-0190(01)00182-X
   Crochemore M., 2007, Algorithms on strings, DOI DOI 10.1017/CBO9780511546853
   DEOROWICZ S, 2007, THEORETICAL APPL INF, V19, P91
   Deorowicz S, 2006, INFORM PROCESS LETT, V100, P14, DOI 10.1016/j.ipl.2006.04.018
   Deorowicz S, 2010, COMPUT INFORM, V29, P427
   Deorowicz S, 2009, ADV INTEL SOFT COMPU, V59, P551
   EPPSTEIN D, 1992, J ACM, V39, P519, DOI 10.1145/146637.146650
   FARBER R, DOCTOR DOBBS J 20082
   Farrar M, 2007, BIOINFORMATICS, V23, P156, DOI 10.1093/bioinformatics/btl582
   FREZZOTTI A, 2009, ARXIV09034044V1
   GRABOWSKI S, 2008, P 9 INT C MOD PROBL, P50
   Gusfield D., 1999, ALGORITHMS STRINGS T
   He Dan, 2005, Genome Inform, V16, P237
   HIRSCHBERG DS, 1975, COMMUN ACM, V18, P341, DOI 10.1145/360825.360861
   HUNT JW, 1977, COMMUN ACM, V20, P350, DOI 10.1145/359581.359603
   Hyyro H., 2004, P 15 AUSTR WORKSH CO, P16
   ILIOPOULOS CS, 2001, P 12 AUSTR WORKSH CO, P106
   KLOETZLI J, 2008, P EUR S PAR GRAPH VI, P14
   Krusche P, 2006, LECT NOTES COMPUT SC, V3984, P165, DOI 10.1007/11751649_18
   KUO S, 1989, ACM SIGIR FORUM, V23, P89
   Lemstrom K., 2000, P RIAO C, P1261
   LEMSTROM K, 2000, P AISB 2000 S CREAT, P53
   Lemström K, 2005, J DISCRET ALGORITHMS, V3, P267, DOI 10.1016/j.jda.2004.08.009
   Ligowski L, 2009, INT PARALL DISTRIB P, P1602, DOI 10.1109/IPDPS.2009.5160931
   LIPTON RJ, 1985, P CHAP HILL C VLSI, P363
   Liu SA, 2006, AM J RHINOL, V20, P274, DOI 10.2500/ajr.2006.20.2859
   Mäkinen V, 2005, J ALGORITHMS, V56, P124, DOI 10.1016/j.jalgor.2004.07.008
   Manavski SA, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-S2-S10
   MASEK WJ, 1980, J COMPUT SYST SCI, V20, P18, DOI 10.1016/0022-0000(80)90002-1
   MUNSHI, OPENCL SPEC VERS 1 0
   NAVARRO G, 2005, TRDCC20054 U CHIL DE, P1
   *NVIDIA CORP, 2009, CUDA ZONE RES CUDA D
   PARK H, 2008, P 40 C WINT SIM WASH, P795
   PENG CL, 2003, THESIS NATL SUN YATS, P1
   PENG ZS, 2004, P 9 INT C IMPL APPL, P237
   Rajko S, 2004, IEEE T PARALL DISTR, V15, P1070, DOI 10.1109/TPDS.2004.86
   RANKA S, 1990, J PARALLEL DISTR COM, V9, P411, DOI 10.1016/0743-7315(90)90125-9
   SCHIVE HY, 2008, ARXIV07072991V2
   TREVETT N, 2009, OPENCL OPEN STAND HE
   Tsai YT, 2003, INFORM PROCESS LETT, V88, P173, DOI 10.1016/j.ipl.2003.07.001
   VALIANT LG, 1990, COMMUN ACM, V33, P103, DOI 10.1145/79173.79181
   WONG CK, 1976, J ACM, V23, P13, DOI 10.1145/321921.321923
NR 52
TC 4
Z9 6
U1 0
U2 7
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2010
VL 40
IS 8
BP 673
EP 700
DI 10.1002/spe.976
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 627MS
UT WOS:000280044400005
OA Bronze
DA 2024-07-18
ER

PT J
AU Amarnath, BR
   Somasundaram, TS
   Ellappan, M
   Buyya, R
AF Amarnath, Balachandar R.
   Somasundaram, Thamarai Selvi
   Ellappan, Mahendran
   Buyya, Rajkumar
TI Ontology-based Grid resource management
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Grid computing; semantic Grid; ontology; Grid resource; management
ID DISCOVERY; SERVICE
AB Grid resources are typically diverse in nature with respect to their software and hardware configurations, resource usage policies and the kind of application they support. Aggregating and monitoring these resources, and discovering suitable resources for the applications become a challenging issue. This is partially due to the representation of Grid metadata supported by the existing Grid middleware which offers limited scope for matching the job requirements that directly affect scheduling decisions. This paper proposes a semantic component in conventional Grid architecture to support ontology-based representation of Grid metadata and facilitate context-based information retrieval that complements Grid schedulers for effective resource management. Web Ontology language is used for creating Grid resource ontology and Algernon inference engine has been used for resource discovery. This semantic component has been integrated with conventional Grid schedulers. Several experiments have also been carried out to investigate the performance overhead that arises while integrating this component with Grid schedulers. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Amarnath, Balachandar R.; Somasundaram, Thamarai Selvi; Ellappan, Mahendran] Anna Univ Chennai, Madras Inst Technol, Dept Informat Technol, CARE, Madras 600044, Tamil Nadu, India.
   [Buyya, Rajkumar] Univ Melbourne, Dept Comp Sci & Software Engn, Cloud Comp & Distributed Syst Lab, Melbourne, Vic 3010, Australia.
C3 Anna University; Anna University Chennai; Madras Institute of
   Technology; University of Melbourne
RP Amarnath, BR (corresponding author), Anna Univ Chennai, Madras Inst Technol, Dept Informat Technol, CARE, Madras 600044, Tamil Nadu, India.
EM balachandar.ra@gmail.com
RI Buyya, Rajkumar/C-3424-2009; Somasundaram, Thamarai Selvi/J-7525-2019
OI Thamaraiselvi, S/0000-0003-1828-8922
FU Ministry of Communication and Information Technology, Goverrinient of
   India; Australian Department of Innovation. Industry, Science and
   Research
FX Contract/grant sponsor: Ministry of Communication and Information
   Technology, Goverrinient of India; Contract/grant sponsor: Australian
   Department of Innovation. Industry, Science and Research
CR [Anonymous], MONITORING DISCOVERY
   [Anonymous], SEMANTIC WEB RULE LA
   [Anonymous], RESOURCE DESCRIPTION
   Berners-Lee T., 2001, Scientific American May
   CHEN L, 2003, 2 INT SEM WEB C SAN
   Corcho O, 2006, J WEB SEMANT, V4, P102, DOI 10.1016/j.websem.2006.03.001
   Czajkowski K, 2001, 10TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P181, DOI 10.1109/HPDC.2001.945188
   Davies J, 2005, BT TECHNOL J, V23, P175, DOI 10.1007/s10550-005-0040-3
   De Roure D., 2003, Grid Computing-Making the Global Infrastructure a Reality, P437
   Erwin DW, 2002, CONCURR COMP-PRACT E, V14, P1395, DOI 10.1002/cpe.691
   Foster I, 1999, GRID: BLUEPRINT FOR A NEW COMPUTING INFRASTRUCTURE, P259
   Foster I, 2001, INT J HIGH PERFORM C, V15, P200, DOI 10.1177/109434200101500302
   Foster I, 1997, INT J SUPERCOMPUT AP, V11, P115, DOI 10.1177/109434209701100205
   FOSTER I, 2002, PHYSL GRID OPEN GRID, P1
   *GLITE, GLITE MIDDL
   Hartung M, 2008, STUD COMPUT INTELL, V162, P115
   HE H, 2004, SEMANTIC MATCHMAKER, P326
   HORRIDGE M, 2004, PRACTICAL GUIDE BUIL, P11
   Huedo E, 2005, SCALABLE COMPUT-PRAC, V6, P1
   Imamagic E., 2006, Journal of Computing and Information Technology - CIT, V14, P329, DOI 10.2498/cit.2006.04.09
   Murphy M. J., 2008, COMMUNICATIONS IIMA, V8, P11
   Pernas AM, 2005, HPCS 2005: 19TH INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P223
   Rao BBP, 2009, COMPUT SCI-RES DEV, V23, P283, DOI [10.1007/s00450-009-0079-3, 10.1007/S00450-009-0079-3]
   Roure D, 2003, GRID COMPUTING MAKIN
   SAHA GK, 2007, ACM UBIQUITY     SEP, P1
   Said MP, 2009, J GRID COMPUT, V7, P205, DOI 10.1007/s10723-008-9111-2
   SAID MP, 2008, P 9 INT C GRID COMP, P358
   Selvi ST, 2006, 2006 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE, (WI 2006 MAIN CONFERENCE PROCEEDINGS), P170, DOI 10.1109/WI.2006.154
   SELVI T, 2006, P 14 INT C ADV COMP
   STUMME G, 2003, KARLSRUHE VIEW ONTOL, P3
   Tangmunarunkit H, 2003, LECT NOTES COMPUT SC, V2870, P706
   Venugopal S, 2006, CONCURR COMP-PRACT E, V18, P685, DOI 10.1002/cpe.974
   Wroe C, 2004, IEEE INTELL SYST, V19, P48, DOI 10.1109/MIS.2004.1265885
   Yu J, 2006, J SUPERCOMPUT, V36, P17, DOI 10.1007/s11227-006-3073-6
   Zhang W., 2008, WSEAS T COMPUTER RES, V3, P273
   Zhang WY, 2009, INT J PROD RES, V47, P3079, DOI 10.1080/00207540701769966
   ALGERNON INFERENCE E
   MOAB METASCHEDULER
NR 38
TC 12
Z9 13
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC 10
PY 2009
VL 39
IS 17
BP 1419
EP 1438
DI 10.1002/spe.942
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 519ST
UT WOS:000271789000002
DA 2024-07-18
ER

PT J
AU Milano, M
   Guerri, A
AF Milano, Michela
   Guerri, Alessio
TI Bid evaluation in combinatorial auctions: optimization and learning
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE combinatorial auctions; combinatorial optimization; decision tree
   machine learning; algorithm selection
ID ALGORITHM
AB In combinatorial auctions bidders can post bids on groups of items. The problem of selecting the winning bids, called Winner Determination Problem, is NP-hard. In this paper, we consider an interesting variant of this problem, called Bid Evaluation Problem (BEP), where items are services and are subject to precedence constraints and temporal windows. The BEP has many practical applications, such as, for instance, in transportation routes auctions and in take off and landing time slot allocation problems. We have developed a number of optimization algorithms based on Constraint Programming, on Integer Programming and on the combination of the two techniques. We first show that all algorithms proposed outperform the only commercial system for solving BEP instances called Multi AGent Negotiation Testbed, a more general tool for agent negotiation. Then, we evaluate the developed algorithms and use the decision tree machine learning technique for finding a relation between the instance structure and the solving algorithm and providing an automatic algorithm selection procedure. We show that we can achieve an accuracy of 90% in predicting the best algorithm given the instance to be solved with a significant time saving w.r.t. a single solving technique or a costless, but less accurate, prediction technique. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Milano, Michela; Guerri, Alessio] Univ Bologna, DEIS, I-40136 Bologna, Italy.
C3 University of Bologna
RP Milano, M (corresponding author), Univ Bologna, DEIS, Vle Risorgimento 2, I-40136 Bologna, Italy.
EM michela.milano@unibo.it
CR [Anonymous], 2003, Principles of Constraint Programming
   [Anonymous], 1998, Aspects of set packing, partitioning, and covering
   BECK J, 2004, P 1 INT C INT AI OR, P50
   Boutilier C, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P527
   Carchrae T, 2005, COMPUT INTELL-US, V21, P372, DOI 10.1111/j.1467-8640.2005.00278.x
   COLLINS J, 1999, AG MED EL COMM IJCA, P113
   COLLINS J, 2001, INTEGER PROGRAMMING, P59
   Cramton P., 2006, COMBINATORIAL AUCTIO
   de Vries S, 2003, INFORMS J COMPUT, V15, P284, DOI 10.1287/ijoc.15.3.284.16077
   Dechter R., 2003, Constraint Processing
   Fink E., 1998, Proceedings Fourth International Conference on Artificial Intelligence Planning Systems, P128
   Fujishima Y, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P548
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Gini C., 1921, ECON J, V31, P124, DOI [DOI 10.2307/2223319, 10.2307/2223319]
   Guerri A, 2004, FRONT ARTIF INTEL AP, V110, P475
   Guerri A, 2003, LECT NOTES COMPUT SC, V2833, P863
   Guo HP, 2007, ANN OPER RES, V156, P61, DOI 10.1007/s10479-007-0229-6
   Harvey WD, 1995, INT JOINT CONF ARTIF, P607
   Hoos HH, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P22
   Horvitz E., 2001, Proceedings of the Seventeenth con- ference on Uncertainty in artificial intelligence, P235
   Houstis EN, 2000, ACM T MATH SOFTWARE, V26, P227, DOI 10.1145/353474.353475
   Hutter F, 2006, LECT NOTES COMPUT SC, V4204, P213
   HUTTER H, 2007, P 22 NAT C ART INT 1
   *ILOG SA, 2002, ILOG SOLV 5 3 REF MA
   *ILOG SA, 2002, ILOG CPLEX 8 1 REF M
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   KNUTH DE, 1975, MATH COMPUT, V29, P121, DOI 10.2307/2005469
   Lagoudakis M.G., 2000, Proceedings of the Seventeenth International Conference on Machine Learning, P511
   Leyton-Brown K., 2002, Principles and Practice of Constraint Programming - CP 2002. 8th International Conference, CP 2002. Proceedings (Lecture Notes in Computer Science Vol.2470), P556
   Leyton-Brown K, 2003, LECT NOTES COMPUT SC, V2833, P899
   Leyton-Brown K., 2003, IJCAI, P1542
   Leyton-Brown K., 2006, EMPIRICAL HARDNESS M, P479
   Leyton-Brown Kevin., 2000, ACM conference on Electronic commerce, P66
   LEYTONBROWN K, 2009, J ACM IN PRESS
   Lobjois L, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P353
   MENKE R, 2000, P 17 NAT C ART INT 1, P1084
   Nemhauser G., 1988, INTEGER COMBINATORIA, DOI DOI 10.1002/9781118627372
   Nudelman E, 2004, LECT NOTES COMPUT SC, V3258, P438
   Quinlan Ross, 1993, C4 5 PROGRAMS MACHIN
   Régin JC, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P209
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Sandholm T., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P69
   Sandholm T, 2002, ARTIF INTELL, V135, P1, DOI 10.1016/S0004-3702(01)00159-X
   Sandholm T, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P542
   Sandholm T., 2001, INT JOINT C ARTIFICI, V17, P1102
   SCHAPIRE RE, 1990, MACH LEARN, V5, P197, DOI 10.1023/A:1022648800760
   SHANNON CE, 1951, BELL SYST TECH J, V30, P50, DOI 10.1002/j.1538-7305.1951.tb01366.x
   Witten I. H., 2005, DATA MINING PRACTICA
NR 48
TC 0
Z9 0
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP 10
PY 2009
VL 39
IS 13
BP 1127
EP 1155
DI 10.1002/spe.930
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 484ZW
UT WOS:000269090900002
DA 2024-07-18
ER

PT J
AU Ahn, S
   Kim, N
   Lee, S
   Nam, D
   Hwang, S
   Koblitz, B
   Breton, V
   Han, SY
AF Ahn, Sunil
   Kim, Namgyu
   Lee, Seehoon
   Nam, Dukyun
   Hwang, Soonwook
   Koblitz, Birger
   Breton, Vincent
   Han, Sangyong
TI Performance analysis and optimization of AMGA for the large-scale
   virtual screening
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE large-scale grids; virtual screening; AMGA; WISDOM; metadata catalog
AB This paper addresses performance issues on ARDA Metadata Grid Application (AMGA) and presents new techniques to improve the throughput of AMGA for the WISDOM environment. The first issue is a performance degradation problem when AMGA is used as a metadata service for task retrieval in the WISDOM environment. To deal with the issue, a new AMGA operation designed to reduce the communication overhead required to retrieve a task from AMGA is proposed. According to a performance study conducted with the new operation, the throughput of task retrieval using the proposed operation can be as much as 70 times higher than the throughput when using the existing AMGA operations. The second issue is an AMGA throughput issue in large-scale grid-enabled applications such as WISDOM, where it is not uncommon that thousands of jobs running on grid nodes access the AGMA service simultaneously. To address this issue, integration of a load-balancing technique and a DB connection pool technique into the AMGA are proposed. Test results demonstrate that the performance can be improved linearly in proportion to the number of AMGA servers set up for load balancing; the performance improvement continues until the performance limit of the backend database system is reached. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Ahn, Sunil; Kim, Namgyu; Lee, Seehoon; Nam, Dukyun; Hwang, Soonwook] KISTI, Taejon, South Korea.
   [Breton, Vincent] CNRS, IN2P3, UMR 6533, Phys Corpusculaire Lab, F-63177 Clermont Ferrand, France.
   [Koblitz, Birger] CERN, European Org Nucl Res, CH-1211 Geneva, Switzerland.
C3 Korea Institute of Science & Technology Information (KISTI); Centre
   National de la Recherche Scientifique (CNRS); CNRS - National Institute
   of Nuclear and Particle Physics (IN2P3); Universite Clermont Auvergne
   (UCA); European Organization for Nuclear Research (CERN)
RP Ahn, S (corresponding author), KISTI, 52-11 Eoeun Dong, Taejon, South Korea.
EM siahn@kisti.re.kr
RI Nam, Dukyun/AFX-2852-2022
OI Nam, Dukyun/0000-0003-1023-7311; Breton, Vincent/0000-0001-8197-7080
CR ALFIERI R, 2004, LECT NOTES COMPUTER, V2970
   *AMGA, 2008, ARDA MET GRID APPL
   [Anonymous], 2006, Computational Methods in Science and Technology, DOI DOI 10.12921/CMST.2006.12.01.33-45
   BOX D, 2000, NOTESOAP20000508
   Breton V, 2008, IEEE T INF TECHNOL B, V12, P173, DOI 10.1109/TITB.2007.895930
   Congreve M, 2005, DRUG DISCOV TODAY, V10, P895, DOI 10.1016/S1359-6446(05)03484-7
   CYBENKO G, 1989, J PARALLEL DISTR COM, V7, P279, DOI 10.1016/0743-7315(89)90021-X
   DIJKSTRA E, 1968, PROGRAMMING LANGUAGE
   *EGEE, 2008, EN GRIDS E SCIENCE
   FOSTER I, 2005, 5 ACM C COMP COMM SO, P83
   Gagliardi F, 2005, PHILOS T R SOC A, V363, P1729, DOI 10.1098/rsta.2005.1603
   Ghosh S, 2006, CURR OPIN CHEM BIOL, V10, P194, DOI 10.1016/j.cbpa.2006.04.002
   JACQ N, 2007, J GRID COMPUTING, V120, P14
   Jacq N, 2007, PARALLEL COMPUT, V33, P289, DOI 10.1016/j.parco.2007.02.010
   KASAM V, 2007, CLUSTER COMPUTING GR
   Lyne PD, 2002, DRUG DISCOV TODAY, V7, P1047, DOI 10.1016/S1359-6446(02)02483-2
   MONTAGNAT J, 2006, P HEALTHGRID SPAIN 7
   Morris GM, 1998, J COMPUT CHEM, V19, P1639, DOI 10.1002/(SICI)1096-987X(19981115)19:14<1639::AID-JCC10>3.0.CO;2-B
   SANTOS N, 2005, P ADV COMP AN TECHN
   SANTOS N, 2006, WORKSH NEXT GEN DIST
   WENSONG Z, 2000, OTT LIN S
NR 21
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG 25
PY 2009
VL 39
IS 12
BP 1055
EP 1072
DI 10.1002/spe.927
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 482CF
UT WOS:000268860600002
DA 2024-07-18
ER

PT J
AU Berbecaru, D
   Desai, A
   Lioy, A
AF Berbecaru, Diana
   Desai, Amarkumar
   Lioy, Antonio
TI A unified and flexible solution for integrating CRL and OCSP into PKI
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE security; middleware; certificate validation; CRL; OCSP; OpenSSL library
AB Public key certificates (PKCs) are used nowadays in several security protocols and applications, so as to secure data exchange via transport layer security channels, or to protect data at the application level by means of digital signatures. However, many security applications often fail to manage properly the PKCs, in particular when checking their validity status. These failures are partly due to the lack of experience (or training) of the users who configure these applications or protocols, and partly due to the scarce support offered by some common cryptographic libraries to the application developers. This paper describes the design and implementation of a light middieware dealing with certificate validation in a unified way. Our middleware exploits on one side the libraries that have already been defined or implemented for certificate validation, and it constructs a thin layer, which provides flexibility and security features to the upper layer applications. In our current approach, this layer boasts an integrated approach to support various certificate revocation mechanisms, it protects the applications from some common security attacks, and offers several configuration and performance options to the programmers and to the end users. We describe the architecture of this approach as well as its practical implementation in the form of a library based on the famous OpenSSL security library, and that can be easily integrated with other certificate-aware security applications. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Berbecaru, Diana; Desai, Amarkumar; Lioy, Antonio] Politecn Torino, Dipartimento Automat & Informat, I-10129 Turin, Italy.
C3 Polytechnic University of Turin
RP Berbecaru, D (corresponding author), Politecn Torino, Dipartimento Automat & Informat, C So Duca Abruzzi 24, I-10129 Turin, Italy.
EM diana.berbecaru@polito.it
RI Berbecaru, Diana/AAO-6554-2020; Lioy, Antonio/AAA-5168-2019
OI Berbecaru, Diana/0000-0003-1930-9473; Lioy, Antonio/0000-0002-5669-9338
CR Adams C., 1998, GEN FLEXIBLE APPROAC
   [Anonymous], THESIS MIT
   [Anonymous], 2008, RFC5280
   [Anonymous], XML KEY MANAGEMENT S
   *B MS, 2003, MS02050 MICR SEC B
   BLAHUT R, 1994, SECURE MIDDLEWARE IN
   BOEYEN S, 2006, RFC4386
   COOPER D, 2007, RFC3280BIS
   Cooper DA, 2000, P IEEE S SECUR PRIV, P190, DOI 10.1109/SECPRI.2000.848456
   DEACON A, 2007, RFC5019
   DIERKS T, 1999, TLS PROTOCOL VERSION
   FREEMAN T, 2007, RFC5055
   Freier AlanO., 1996, SSL PROTOCOL VERSION
   KAIJSER P, 1938, LECT NOTES COMPUTER, V1438, P1
   KOMAR B, 2006, CERTIFICATE REVOCATI
   KOMAR B, 2003, TROUBLESHOOTING CERT
   MARIAS GF, 2005, P IEEE CREAT NET WOR
   *MICR TECHNET, 2008, ONL RESP INST CONF T
   Myers M., 1999, RFC2560
   Naor M, 2000, IEEE J SEL AREA COMM, V18, P561, DOI 10.1109/49.839932
   Pala M, 2007, LECT NOTES COMPUT SC, V4582, P154
   Park N, 2004, LECT NOTES COMPUT SC, V3032, P849
   Slagell A, 2006, IEEE IPCCC, P475, DOI 10.1109/.2006.1629442
   Viega J., 2002, NETWORK SECURITY OPE, P384
NR 24
TC 4
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2009
VL 39
IS 10
BP 891
EP 921
DI 10.1002/spe.918
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 464HR
UT WOS:000267496500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Stefanov, E
   Sloane, AM
AF Stefanov, Ekaterina
   Sloane, Anthony M.
TI On the implementation of bytecode compression for interpreted languages
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE space optimization; code compression; bytecode; interpreter; functional
   language
ID CODE COMPRESSION
AB This paper describes a new method for code space optimization for interpreted languages called LZW-CC. The method is based on a well-known and widely used compression algorithm, LZW, which has been adapted to compress executable program code represented as bytecode. Frequently occurring sequences of bytecode instructions are replaced by shorter encodings for newly generated bytecode instructions. The interpreter for the compressed code is modified to recognize and execute those new instructions. When applied to systems where a copy of the interpreter is supplied with each user program, space is saved not only by compressing the program code but also by automatically removing the unused implementation code from the interpreter. The method's implementation within two compiler systems for the programming languages Haskell and Java is described and implementation issues of interest are presented, notably the recalculations of target jumps and the automated tailoring of the interpreter to program code. Applying LZW-CC to nhc98 Haskell results in bytecode size reduction by up to 15.23% and executable size reduction by up to 11.9%. Java bytecode is reduced by up to 52%. The impact of compression on execution speed is also discussed; the typical speed penalty for Java programs is between 1.8 and 6.6%, while most compressed Haskell executables run faster than the original. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Stefanov, Ekaterina; Sloane, Anthony M.] Macquarie Univ, Dept Comp, N Ryde, NSW, Australia.
C3 Macquarie University
RP Stefanov, E (corresponding author), Macquarie Univ, Dept Comp, N Ryde, NSW, Australia.
EM kate.stefanov@gmail.com
OI Sloane, Anthony/0000-0002-6802-7360
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], IEEE J COMPUTER, DOI 10.1109/MC.1984.1659158
   Bull JM, 2000, CONCURRENCY-PRACT EX, V12, P375, DOI 10.1002/1096-9128(200005)12:6<375::AID-CPE480>3.0.CO;2-M
   *CAN COM, 2008, CAN EST 2005
   Clausen LR, 2000, ACM T PROGR LANG SYS, V22, P471, DOI 10.1145/353926.353933
   Cooper KD, 1999, ACM SIGPLAN NOTICES, V34, P139, DOI 10.1145/301631.301655
   Debray SK, 2000, ACM T PROGR LANG SYS, V22, P378, DOI 10.1145/349214.349233
   EVANS WS, 2001, PLDI 01 P ACM SIGPLA, P148
   Fraser CW, 2006, SOFTWARE PRACT EXPER, V36, P397, DOI 10.1002/spe.702
   FRASER CW, 2008, CUSTOM INSTRUC UNPUB
   Hoogerbrugge J, 1999, SOFTWARE PRACT EXPER, V29, P1005, DOI 10.1002/(SICI)1097-024X(199909)29:11<1005::AID-SPE270>3.0.CO;2-F
   Hudak P., 1994, YALEUDCSRR1049
   *IBM, 2008, IBM RES JIK COMP PRO
   KRISHNAN R, 2008, FUTURE EMBEDDED SYST
   Latendresse M., 2003, INTERPRETERS VIRTUAL, P32
   MATHEW JA, 1999, P ASS COMP MACH JAV
   Partain W., 1992, FUNCTIONAL PROGRAMMI, P195
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   STEFANOV E, 2007, THESIS MACQUARIE U
   STORER J, 1997, 234 PRINC U
   [No title captured]
NR 22
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2009
VL 39
IS 2
BP 111
EP 135
DI 10.1002/spe.888
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 394NO
UT WOS:000262453600001
DA 2024-07-18
ER

PT J
AU Crawford, H
   Aycock, J
AF Crawford, Heather
   Aycock, John
TI Kwyjibo: automatic domain name generation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE domain names; random word generation; hyphenation; Internet
AB Automatically generating 'good' domain names that are random yet pronounceable is a problem harder than it first appears. The problem is related to random word generation, and we survey and categorize existing techniques before presenting our own syllable-based algorithm that produces higher-quality results. Our results are also applicable elsewhere, in areas such as password generation, username generation, and even computer-generated poetry. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Crawford, Heather; Aycock, John] Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Aycock, J (corresponding author), Univ Calgary, Dept Comp Sci, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM aycock@ucalgary.ca
OI Crawford, Heather/0000-0001-6267-6303
FU Natural Sciences and Engineering Research Council of Canada
FX The second author's work is supported in part by a grant from the
   Natural Sciences and Engineering Research Council of Canada. Thanks to
   Morrie Gasser, Richard Lowe, Richard Lawrence, and Sam Stoddard for
   answering questions about their random word generators. The anonymous
   referees made many comments that improved the presentation and focus of
   this work.
CR Aycock J., 2006, 3 C EM ANT, P137
   Bentley JL, 2000, PROGRAMMING PEARLS
   Gasser M., 1975, MTR3006 MITRE
   GASSER M, 2007, COMMUNICATION   0719
   Hartman CharlesO., 1996, Virtual Muse: Experiments in Computer Poetry
   HAZEL S, 2007, PASSOGVAL 1 0 RANDOM
   KLIEBER W, 2007, USERS GUIDE RANDOM P
   Knuth Donald Ervin, 1984, TEXBOOK
   LAWRENCE R, 2007, RANDOM WORD GENERATO
   LAWRENCE R, 2007, COMMUNICATION   0731
   LIANG FM, 1983, THESIS STANDFORD U
   LOWE R, 2007, COMMUNICATION   0720
   MIRZAZHANOV A, 2007, APG AUTOMATED PASSWO
   National Institute of Standards, 1993, 181 FIPS PUB NAT I S
   *NOEMATA, 2007, NOEMATA NAM GEN
   SALTZER JH, 1974, COMMUN ACM, V17, P398
   STODDARD S, 2007, COMMUNICATION   0724
   VANVLECK T, 2007, GPW PASSWORD GENERAT
   von Ahn L, 2004, COMMUN ACM, V47, P57, DOI 10.1145/966389.966390
   2007, FANTASY NAME GENERAT
NR 20
TC 21
Z9 27
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2008
VL 38
IS 14
BP 1561
EP 1567
DI 10.1002/spe.885
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 372EH
UT WOS:000260884300005
DA 2024-07-18
ER

PT J
AU Brisaboa, NR
   Fariña, A
   Navarro, G
   Parama, JR
AF Brisaboa, N. R.
   Farina, A.
   Navarro, G.
   Parama, J. R.
TI New adaptive compressors for natural language text
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE text databases; natural language text compression; dynamic compression;
   searching compressed text
AB Semistatic byte-oriented word-based compression codes have been shown to be an attractive alternative to compress natural language text databases, because of the combination of speed, effectiveness, and direct searchability they offer. In particular, our recently proposed family of dense compression codes has been shown to be superior to the more traditional byte-oriented word-based Huffman codes in most aspects. In this paper, we focus on the problem of transmitting texts among peers that do not share the vocabulary. This is the typical scenario for adaptive compression methods. We design adaptive variants of our semistatic dense codes, showing that they are much simpler and faster than dynamic Huffman codes and reach almost the same compression effectiveness. We show that our variants have a very compelling trade-off between compression/decompression speed, compression ratio, and search speed compared with most of the state-of-the-art general compressors. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Brisaboa, N. R.; Farina, A.; Parama, J. R.] Univ A Coruna, Dept Comp Sci, Database Lab, La Coruna 15071, Spain.
   [Navarro, G.] Univ Chile, Dept Comp Sci, Ctr Web Res, Santiago, Chile.
C3 Universidade da Coruna; Universidad de Chile
RP Fariña, A (corresponding author), Univ A Coruna, Dept Comp Sci, Database Lab, Campus Elvina S-N, La Coruna 15071, Spain.
EM fari@ude.es
RI Fariña, Antonio/C-6243-2017; Parama, Jose R./L-4793-2014; Brisaboa,
   Nieves R./S-4744-2016
OI Fariña, Antonio/0000-0001-8263-3298; Parama, Jose
   R./0000-0002-8727-0980; Brisaboa, Nieves R./0000-0001-8025-3048
FU MEC [TIN2006-15071-C03-03]; Xunta de Galicia [PGIDIT05-SIN-10502PR,
   2006/4]; Millennium Nucleus Center for Web Research [P04-067-F]
FX This work is funded in part (for the Spanish group) by MEC
   (TIN2006-15071-C03-03), Xunta de Galicia (PGIDIT05-SIN-10502PR and
   2006/4) and (for the third author) by Millennium Nucleus Center for Web
   Research. grant (P04-067-F), Mideplan, Chile.
CR Allauzen C, 1999, LECT NOTES COMPUT SC, V1725, P295
   [Anonymous], 2002, Compression and Coding Algorithms
   BENTLEY JL, 1986, COMMUN ACM, V29, P320, DOI 10.1145/5684.5688
   BOYER RS, 1977, COMMUN ACM, V20, P762, DOI 10.1145/359842.359859
   BRISABOA N, 2005, P 28 ANN INT ACM SIG, P234
   Brisaboa NR, 2007, INFORM RETRIEVAL, V10, P1, DOI 10.1007/s10791-006-9001-9
   Brisaboa NR, 2004, LECT NOTES COMPUT SC, V3246, P230
   Burrows M., 1994, BLOCK SORTING LOSSLE
   CARPINELLI J, 2004, WORD CHARACTER INTEG
   Culpepper JS, 2005, LECT NOTES COMPUT SC, V3772, P1
   FARINA A, 2005, THESIS U CORUNA SPAI
   GOLOMB SW, 1966, IEEE T INFORM THEORY, V12, P399, DOI 10.1109/TIT.1966.1053907
   Heaps H. S., 1978, Information retrieval: Computational and theoretical aspects
   HORSPOOL RN, 1980, SOFTWARE PRACT EXPER, V10, P501, DOI 10.1002/spe.4380100608
   KRUTH DE, 1985, J ALGORITHM, V6, P163
   MOFFAT A, 1989, SOFTWARE PRACT EXPER, V19, P185, DOI 10.1002/spe.4380190207
   MOURA E, 2000, ACM T INFORM SYST, V18, P113, DOI DOI 10.1145/348751.348754
   Navarro G, 2005, SOFTWARE PRACT EXPER, V35, P1107, DOI 10.1002/spe.663
   Navarro G., 2002, FLEXIBLE PATTERN MAT
   TURPIN A, 1997, P 20 AUSTR COMP SCI, P1
   Williams HE, 1999, COMPUT J, V42, P193, DOI 10.1093/comjnl/42.3.193
   WU S, 1992, COMMUN ACM, V35, P83, DOI 10.1145/135239.135244
   Wu Sun., 1992, Usenix Winter 1992, P153
   ZIV J, 1977, IEEE T INFORM THEORY, V23, P337, DOI 10.1109/TIT.1977.1055714
   ZIV J, 1978, IEEE T INFORM THEORY, V24, P530, DOI 10.1109/TIT.1978.1055934
NR 25
TC 14
Z9 15
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2008
VL 38
IS 13
BP 1429
EP 1450
DI 10.1002/spe.882
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 364OY
UT WOS:000260346200005
DA 2024-07-18
ER

PT J
AU Shah, S
   Noble, BD
AF Shah, Sam
   Noble, Brian D.
TI A study of e-mail patterns
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE e-mail characterization; workload characterization; analytical modeling;
   electronic mail benchmark
AB Although electronic mail is an increasingly important service, there are few empirical studies of e-mail traffic. We have observed over 2.85 million messages passing through our departmental servers over the course of seven months, and derived distributions that approximate several important e-mail parameters including message sizes, message senders and receivers and the burstiness of message deliveries. Our work is unique in that we also analyse message payloads: attachment content types, e-mail redundancy, and the use of e-mail as a sharing mechanism. These data can be used in developing e-mail workloads for mail system engineering or benchmarking. To this end, we provide an improved version of Postmark, a small-file Internet benchmark, that better approximates mail server characteristics. (C) 2007 John Wiley & Sons,Ltd.
C1 Univ Michigan, Dept Elect Engn & Comp Sci, Ann Arbor, MI 48109 USA.
C3 University of Michigan System; University of Michigan
RP Shah, S (corresponding author), Univ Michigan, Dept Elect Engn & Comp Sci, Ann Arbor, MI 48109 USA.
EM shahsam@umich.edu
RI SHAH, SAM/GPS-9387-2022
CR [Anonymous], 1981, TR1581 CTR RES COMP
   [Anonymous], P USENIX WINT 1994 T
   [Anonymous], 3022 NETW APPL
   [Anonymous], 2004, Comput. Commun. Rev, V25, P202, DOI [DOI 10.1145/205447.205464, 10.1145/205447.205464]
   Bertolotti L, 2001, PERFORM EVALUATION, V46, P65, DOI 10.1016/S0166-5316(01)00047-5
   BERTOLOTTI L, 2000, P 2000 S PERF EV COM
   BORENSTEIN N, 1993, MIME MULTIPURPOSE 1
   Card R., 1994, PROCESSDINGS 1 DUTCH, P5
   CREOROVELLA M, 1996, P 1996 ACM SIGMETRIC, P160
   Crispin M., 1996, INTERNET MESSAGE ACC
   FALLOWS D, 2002, EMAIL WORK FEW FELL
   FONSECA R, 2003, P 22 ANN JOINT C IEE
   GOMES L.H., 2004, ACM Internet Measurement Conference, P356
   GRIBBLE SD, 1998, P 1998 ACM SIGMETRIC, P141
   Hernandez-Campos F., 2002, Proceedings 10th IEEE International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunications Systems. MASCOTS 2002, P43, DOI 10.1109/MASCOT.2002.1167059
   MEYERS J, 1996, POST OFFICE PROTOCOL
   Nocedal J., 1999, NUMERICAL OPTIMIZATI
   PENG CK, 1994, PHYS REV E, V49, P1685, DOI 10.1103/PhysRevE.49.1685
   Postel J., 1982, Simple Mail Transfer Protocol
   Saito Yasushi., 1999, ACM S OPERATING SYST, P1
   *STAND PERF EV COR, 2001, SPEC MAIL 2001 MAIL
   TAQQU MS, 1998, ESTIMATING INTENSITY, P177
NR 22
TC 8
Z9 12
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2007
VL 37
IS 14
BP 1515
EP 1538
DI 10.1002/spe.816
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 228JA
UT WOS:000250725000004
DA 2024-07-18
ER

PT J
AU Yeo, CS
   Buyya, R
AF Yeo, Chee Shin
   Buyya, Rajkumar
TI A taxonomy of market-based resource management systems for
   utility-driven cluster computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cluster computing; utility computing; market-based resource management
   systems; taxonomy
ID ALLOCATION
AB In utility-driven cluster computing, cluster Resource Management Systems (RMSs) need to know the specific needs of different users in order to allocate resources according to their needs. This in turn is vital to achieve service-oriented Grid computing that harnesses resources distributed worldwide based on users' objectives. Recently, numerous market-based RMSs have been proposed to make use of real-world market concepts and behavior to assign resources to users for various computing platforms. The aim of this paper is to develop a taxonomy that characterizes and classifies how market-based RMSs can support utility-driven cluster computing in practice. The taxonomy is then mapped to existing market-based RMSs designed for both cluster and other computing platforms to survey current research developments and identify outstanding issues. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Melbourne, Dept Comp Sci & Software Engn, Grid Comp & Distributed Syst Lab, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Buyya, R (corresponding author), Univ Melbourne, Dept Comp Sci & Software Engn, Grid Comp & Distributed Syst Lab, Melbourne, Vic 3010, Australia.
EM raj@cs.mu.oz.au
RI Yeo, Chee Shin/D-2363-2013; Buyya, Rajkumar/C-3424-2009
OI Yeo, Chee Shin/0000-0002-9965-0905; 
CR Abramson D., 1995, Proceedings of the Fourth IEEE International Symposium on High Performance Distributed Computing (Cat. No.95TB8075), P112, DOI 10.1109/HPDC.1995.518701
   Abramson D, 2002, FUTURE GENER COMP SY, V18, P1061, DOI 10.1016/S0167-739X(02)00085-7
   Alexandrov AD, 1997, CONCURRENCY-PRACT EX, V9, P535, DOI 10.1002/(SICI)1096-9128(199706)9:6<535::AID-CPE307>3.0.CO;2-1
   Amir Y, 2000, IEEE T PARALL DISTR, V11, P760, DOI 10.1109/71.877834
   AMIR Y, 1998, P 1 INT C INF COMP E, P140
   Anastasiadi A., 1998, P 1 INT C INF COMP E, P166
   [Anonymous], ECOLOGY COMPUTATION
   [Anonymous], 2004, P 1 WORKSH OP SYST A
   [Anonymous], 1996, Parallel Programming Using C++
   BAMROUTA A, 2003, P 3 WORKSH INT COMP
   Barak A, 1998, FUTURE GENER COMP SY, V13, P361, DOI 10.1016/S0167-739X(97)00037-X
   Bhandarkar M, 2001, LECT NOTES COMPUT SC, V2074, P108
   Braun TD, 1998, SYM REL DIST SYST, P330, DOI 10.1109/RELDIS.1998.740518
   BREDIN J, 1998, PCSTR98331 DARTM COL
   Buyya R, 2005, P IEEE, V93, P698, DOI 10.1109/JPROC.2004.842784
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1507, DOI 10.1002/cpe.690
   Buyya R, 2001, INT J HIGH PERFORM C, V15, P124, DOI 10.1177/109434200101500205
   BUYYA R, 2001, P 10 INT HET COMP WO
   BUYYA R, 2000, P 4 INT C HIGH PERF
   BUYYA R, 2000, P 2 ANN WORKSH ACT M
   Buyya Rajkumar., 1999, HIGH PERFORMANCE CLU
   BYDE A, 2003, HPL2003188
   CASAVANT TL, 1988, IEEE T SOFTWARE ENG, V14, P141, DOI 10.1109/32.4634
   Chase JS, 2003, 12TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P90
   CHEN C, 2002, P 11 INT HET COMP WO
   Chen M, 2004, LECT NOTES COMPUT SC, V3033, P612
   Chun B., 2000, MARKET BASED PROPORT
   CHUN B N, 2002, Proceedings. of the 2nd IEEE/ACM International Symposium on Cluster Computing and the Grid, P22
   Cooper BR, 2002, INT CON DISTR COMP S, P372, DOI 10.1109/ICDCS.2002.1022275
   Ekmecic I, 1996, P IEEE, V84, P1127, DOI 10.1109/5.533958
   EKMECIC I, 1995, COMPUTER, V28, P68, DOI 10.1109/2.476202
   Eymann T, 2003, CCGRID 2003: 3RD IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P645, DOI 10.1109/CCGRID.2003.1199427
   FERGUSON D, 1988, P 8 INT C DISTR COMP, P491
   Foster I, 2003, GRID
   Gropp W., 2003, BEOWULF CLUSTER COMP, VSecond
   GROSU D, 2004, P 16 IASTED INT C PA, P20
   *IBM, 2003, LOADLEVELER AIX 5L V
   *IBM, 2005, BUS PROC EX LANG WEB
   Irwin DE, 2004, 13TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P160, DOI 10.1109/HPDC.2004.1323519
   JACKSON SM, 2004, ALLOCATION MANAGEMEN
   Kalé LV, 2004, PROC INT CONF PARAL, P396
   KALE LV, 2002, P 2 INT S CLUST COMP, P215
   Keller A., 2003, Journal of Network and Systems Management, V11, P57, DOI 10.1023/A:1022445108617
   Krauter K, 2002, SOFTWARE PRACT EXPER, V32, P135, DOI 10.1002/spe.432
   KUROSE JF, 1989, IEEE T COMPUT, V38, P705, DOI 10.1109/12.24272
   Lai K., 2004, CSDC0404013 HP LAB
   Lalis S, 2001, LECT NOTES COMPUT SC, V1971, P36
   Malone T.W., 1988, The Ecology of Computation, P177
   Padala P, 2003, SECOND INTERNATIONAL SYMPOSIUM ON PARALLEL AND DISTRIBUTED COMPUTING, PROCEEDINGS, P185, DOI 10.1109/ISPDC.2003.1267662
   Pfaffinger Alexander., 1996, EURO, VII, P631
   Pfister G., 1998, SEARCH CLUSTERS, Vsecond
   Platform Computing, 2001, LSF VERS 4 1 ADM GUI
   Preist C., 2001, Proceedings of the Fifth International Conference on Autonomous Agents, P545, DOI 10.1145/375735.376441
   Ranjan R., 2005, P 7 IEEE INT C CLUST
   Reed D., 1999, Proceedings of the Seventh Workshop on Hot Topics in Operating Systems, P136, DOI 10.1109/HOTOS.1999.798390
   Regev O., 1998, Proceedings of the first international conference on Information and computation economies, P148
   ROTITHOR HG, 1994, IEE P-COMPUT DIG T, V141, P1, DOI 10.1049/ip-cdt:19949630
   Sherwani J, 2004, SOFTWARE PRACT EXPER, V34, P573, DOI 10.1002/spe.581
   STOICA I, 1995, LECT NOTES COMPUTER, V949, P200
   Stonebraker M., 1994, Proceedings of the Third International Conference on Parallel and Distributed Information Systems (Cat. No.94TH0668-4), P58, DOI 10.1109/PDIS.1994.331732
   *SUN MICR, 2002, SUN 1 GRID ENG ADM U
   Venugopai S., 2004, P 2 WORKSHOP MIDDLEW, P75
   WALDSPURGER CA, 1992, IEEE T SOFTWARE ENG, V18, P103, DOI 10.1109/32.121753
   Wellman MP, 1993, J ARTIF INTELL RES, V1, P1
   Wolski R, 2001, INT J HIGH PERFORM C, V15, P258, DOI 10.1177/109434200101500305
   Yemini Y, 2000, DECIS SUPPORT SYST, V28, P205, DOI 10.1016/S0167-9236(99)00069-X
   YEO C, P 7 IEEE INT C CLUST
   YEO CS, 2004, P 12 INT C ADV COMP, P32
   Yu J, 2004, FIFTH IEEE/ACM INTERNATIONAL WORKSHOP ON GRID COMPUTING, PROCEEDINGS, P119
NR 69
TC 66
Z9 76
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2006
VL 36
IS 13
BP 1381
EP 1419
DI 10.1002/spe.725
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 100ZJ
UT WOS:000241708400001
DA 2024-07-18
ER

PT J
AU Bruneton, E
   Coupaye, T
   Leclercq, M
   Quéma, V
   Stefani, JB
AF Bruneton, Eric
   Coupaye, Thierry
   Leclercq, Matthieu
   Quema, Vivien
   Stefani, Jean-Bernard
TI The FRACTAL component model and its support in Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE component-based programming; reflective component model; aspects and
   components; Java components
AB This paper presents FRACTAL, a hierarchical and reflective component model with sharing. Components in this model can be endowed with arbitrary reflective capabilities, from plain black-box objects to components that allow a fine-grained manipulation of their internal structure. The paper describes JULIA, a Java implementation of the model, a small but efficient runtime framework, which relies on a combination of interceptors and mixins for the programming of reflective features of components. The paper presents a qualitative and quantitative evaluation of this implementation, showing that component-based programming in FRACTAL can be made very efficient. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 INRIA Rhone Alpes, Projet Sardes, Saint Ismier, France.
   France Telecom, R&D, Saint Ismier, France.
C3 Orange SA
RP Quéma, V (corresponding author), INRIA Rhone Alpes, Projet Sardes, 655 Av Europe, Saint Ismier, France.
EM vivien.quema@inrialpes.fr
RI Coupaye, Thierry/IWU-7448-2023; Coupaye (PhD, HDR),
   Thierry/AAC-2526-2022
CR ALDRICH J, 2002, LECT NOTES COMPUTER, V2374
   ALDRICH J, 2003, LECT NOTES COMPUTER, V2743
   ANCONA D, 2000, LECT NOTES COMPUTER, V1850
   *AP, 2006, AP AV PROJ
   *ASM, 2006, JAV BYT COD MAN FRAM
   Banavar G, 1999, LECT NOTES COMPUT SC, V1693, P1
   BELLISSARD L, 1999, P S REL DISTR SYST S
   Carzaniga A, 2001, ACM T COMPUT SYST, V19, P332, DOI 10.1145/380749.380767
   CLARKE M, 2001, LECT NOTES COMPUTER, V2218
   DAVID P, 2003, LECT NOTES COMPUTER, V2893
   DUCLOS F, 2002, P INT C ASP OR SOFTW
   Dumant B., 1999, Distributed Systems Engineering, V6, P3, DOI 10.1088/0967-1846/6/1/301
   Eric Bruneton, 2006, FRACTAL COMPONENT MO
   *JORAM, 2006, JAV OP REL AS MESS
   KICZALES G, 2001, LECT NOTES COMPUTER, V2072
   Leavens G.T., 2000, FDN COMPONENT BASED
   MCDIRMID S, 2001, P INT C OBJ OR PROGR
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   *OSGI SERV, 2003, OSGI SERV PLATF REL
   OUTHRED G, 1998, P INT WORKSH COMP OR
   PAWLAK R, 2001, LECT NOTES COMPUTER, V2192
   Pichler R, 2003, SOFTWARE PRACT EXPER, V33, P957, DOI 10.1002/spe.534
   POPOVICI A, 2003, P INT C ASP OR SOFTW
   POPOVICI A, 2003, LECT NOTES COMPUTER, V2743
   PROCHAZKA M, 2003, LECT NOTES COMPUTER, V2893
   RIVIERRE N, 2003, P 8 WORKSH CORR MOD
   STROM R, 1998, P INT S SOFTW REL EN
   *SUN MICR, 2002, JAV MESS SERV SPEC F
   SZYPERSKI C, 2002, COMPONENT SOFTWARE
   Van Renesse R, 2003, ACM T COMPUT SYST, V21, P164, DOI 10.1145/762483.762485
   Welsh M., 2001, P 18 S OP SYST PRINC
   2006, KILIM PROJECT
   2006, PLEXUS PROJECT
   2006, CARBON PROJECT
   2006, HIVEMIND PROJECT
   2006, PICOCONTAINER PROJEC
   2006, JBOSS ASPECT ORIENTE
   2006, SPRING FRAMEWORK
NR 38
TC 262
Z9 273
U1 0
U2 4
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1257
EP 1284
DI 10.1002/spe.767
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 086HN
UT WOS:000240664500010
DA 2024-07-18
ER

PT J
AU Lee, H
   von Dincklage, D
   Diwan, A
   Moss, JEB
AF Lee, Han
   von Dincklage, Daniel
   Diwan, Amer
   Moss, J. Eliot B.
TI Understanding the behavior of compiler optimizations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; compiler optimizations; performance evaluation of optimizations
AB Compiler optimizations are difficult to implement and add complexity to a compiler. For this reason, compiler writers are selective about implementing them: they implement only the ones that they believe will be beneficial. To support compiler writers in this, we describe a method for measuring the cost and benefits of compiler optimizations, both individually and in synergy with other optimizations. We demonstrate our method by presenting results for the optimizations implemented in the Jikes Research Virtual Machine on the PowerPC and IA32 platforms. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Colorado, Dept Comp Sci, Boulder, CO 80309 USA.
   Univ Massachusetts, Dept Comp Sci, Amherst, MA 01003 USA.
C3 University of Colorado System; University of Colorado Boulder;
   University of Massachusetts System; University of Massachusetts Amherst
RP Diwan, A (corresponding author), Univ Colorado, Dept Comp Sci, Box 0430, Boulder, CO 80309 USA.
EM diwan@cs.colorado.edu
CR [Anonymous], 1992, Compiling with Continuations
   Arnold Matthew., 2000, P 15 ACM SIGPLAN C O, P47
   Blackburn StephenM., 2002, P SIGPLAN 2002 C PRO, P153, DOI DOI 10.1145/512529.512548
   BURKE MG, 1999, ACM 1999 JAV GRAND C, P129
   Detlefs D, 1999, LECT NOTES COMPUT SC, V1628, P258
   Fink S, 2000, LECT NOTES COMPUT SC, V1824, P155
   ISHIZAKI K, 1999, ACM 1999 JAV GRAND C, P119
   ISHIZAKI K, 2003, P ACM SIGPLAN C OBJ, P187
   *JIK RVM, JIK RES VIRT MACH US
   LEE H, 2004, CUCS97204 U COL
   Poletto M, 1999, ACM T PROGR LANG SYS, V21, P895, DOI 10.1145/330249.330250
   *SPEC, 2005, SPECJVM98 BENCHM
NR 12
TC 10
Z9 16
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2006
VL 36
IS 8
BP 835
EP 844
DI 10.1002/spe.718
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056TK
UT WOS:000238547800002
DA 2024-07-18
ER

PT J
AU Dong, J
   Alencar, PSC
   Cowan, DD
AF Dong, J
   Alencar, PSC
   Cowan, DD
TI Automating the analysis of design component contracts
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE component-based software design; contract; design pattern
AB Software patterns are a new design paradigm used to solve problems that arise when developing software within a particular context. Patterns capture the static and dynamic structure and collaboration among the components in a software design. A key promise of the pattern-based approach is that it may greatly simplify the construction of software systems out of building blocks and thus reuse experience and reduce cost. However, it also introduces significant problems in ensuring the integrity and reliability of these composed systems because of their complex software topologies, interactions and transactions. There is a need to capture these features as a contract through a formal model that allows us to analyze pattern-based designs. In this paper, we provide an overview of a formal framework for ensuring the integrity of the compositions in object-oriented designs by providing mathematically rigorous modeling and analysis techniques for object-oriented systems comprising pattern-based designs as the basic building blocks or design components. A case study related to a hypermedia Web-based application has been presented to illustrate our approach in distributed systems. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
   Univ Waterloo, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Texas System; University of Texas Dallas; University of
   Waterloo
RP Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
EM jdong@utdallas.edu
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   Alencar P., 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P160, DOI 10.1109/CMPSAC.1999.812694
   [Anonymous], P 22 INT C SOFTW ENG
   [Anonymous], 1814, DTSCH BLATTER, V3, P576
   [Anonymous], 2001, Handbook of Process Algebra, DOI [DOI 10.1016/B978-044482830-9/50022-9, 10.1016/B978-044482830-9/50022-9]
   [Anonymous], 1992, CMUCS92131
   Basu S., 2000, Proceedings Seventh IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ECBS 2000), P342, DOI 10.1109/ECBS.2000.839894
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   Bieber M, 1997, COMPUTER, V30, P62, DOI 10.1109/2.562928
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Borgida A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P378, DOI 10.1109/ICSE.1999.841028
   Bradbury R, 1999, FUTURIST, V33, P4
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clarke EM, 1999, MODEL CHECKING, P1
   DISCENZA A, 1999, 994 POL MIL
   Dong J, 2004, INFORM SOFTWARE TECH, V46, P293, DOI 10.1016/j.infsof.2003.09.003
   DONG J, 2004, INT J SOFTWARE SYSTE, V3, P262
   DONG J, 2002, THESIS U WATERLOO
   DOONG J, 2001, P 7 INT C OBJ OR INF, P540
   Emerson E.A., 1996, Lecture Notes in Computer Science, V1043, P41
   EMERSON EA, 1986, IEEE S LOG COMP SCI
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garlan D, 2000, TENTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, P23, DOI 10.1109/IWSSD.2000.891123
   Garlan D, 2000, FDN COMPONENT BASED, P47
   GARZOTTO F, 1993, ACM T INFORM SYST, V11, P1, DOI 10.1145/151480.151483
   GERMAN DM, 2000, P 33 ANN HAW INT C S
   GERMAN DM, 2000, THESIS U WATERLOO
   HELM R, 1999, P ACM C OBJ OR PROGR, P169
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   ISAKOWITZ T, 1995, COMMUN ACM, V38, P34, DOI 10.1145/208344.208346
   Keller RK, 1998, PROC INT CONF SOFTW, P302, DOI 10.1109/ICSE.1998.671356
   Kim SK, 1999, LECT NOTES COMPUT SC, V1723, P83
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   LAMPORT L, 1977, IEEE T SOFTWARE ENG, V3, P125, DOI 10.1109/TSE.1977.229904
   LANGE D, 1994, P 33 ANN HAW INT C S
   Lloyd J. W., 1984, Foundations of Logic Programming
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   Milner Robin., 1989, INT SERIES COMPUTER
   Nierstrasz O., 1995, Object-Oriented Software Composition, P3
   PEMMASANI G, 2004, P INT S FUNCT LOG PR
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1254, P143
   SCHWABE D, 1995, COMMUN ACM, V38, P45, DOI 10.1145/208344.208354
   STIRLING C, 1991, LECT NOTES COMPUT SC, V491, P2
   Wang WL, 2000, COMPUTER, V33, P48, DOI 10.1109/2.876292
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
   WOOLF B, 1999, IMPLEMENTING APPL FR, P621
   [No title captured]
NR 48
TC 7
Z9 8
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2006
VL 36
IS 1
BP 27
EP 71
DI 10.1002/spe.681
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 002KR
UT WOS:000234610800002
DA 2024-07-18
ER

PT J
AU Gu, HY
AF Gu, HY
TI A large-alphabet-oriented scheme for Chinese and English text
   compression
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE text compression; large alphabet; Markov modeling; arithmetic coding
ID PROBABILITIES
AB In this paper, a large-alphabet-oriented scheme is proposed for both Chinese and English text compression. Our scheme parses Chinese text with the alphabet defined by Big-5 code, and parses English text with some rules designed here. Thus, the alphabet used for English is not a word alphabet. After a token is parsed out from the input text, zero-, first-, and second-order Markov models are used to estimate the occurrence probabilities of this token. Then, the probabilities estimated are blended and accumulated in order to perform arithmetic coding. To implement arithmetic coding under a large alphabet and probability-blending condition, a way to partition count-value range is studied. Our scheme has been programmed and can be executed as a software package. Then, typical Chinese and English text files are compressed to study the influences of alphabet size and prediction order. On average, our compression scheme can reduce a text file's size to 33.9% for Chinese and to 23.3% for English text. These rates are comparable with or better than those obtained by popular data compression packages. Copyright (C) 2005 John Wiley & Sons, Ltd.
C1 Natl Taiwan Univ Sci & Technol, Dept Comp Sci & Informat Engn, Taipei, Taiwan.
C3 National Taiwan University of Science & Technology
RP Natl Taiwan Univ Sci & Technol, Dept Comp Sci & Informat Engn, Taipei, Taiwan.
EM guhy@mail.ntust.edu.tw
CR Bell T. C., 1990, TEXT COMPRESSION
   CLEARY JG, 1984, IEEE T COMMUN, V32, P396, DOI 10.1109/TCOM.1984.1096090
   GU HY, 1995, J COMPUTER PROCESSIN, V9, P111
   GU HY, LARGE ALPHABET ORIEN
   HAMMING RW, 1980, CODING INFORMATION T
   HORSPOOL RN, 1992, P IEEE DAT COMPR C L, P67
   MOFFAT A, ARITHMETIC CODING PA
   NADAS A, 1985, IEEE T ACOUST SPEECH, V33, P1414, DOI 10.1109/TASSP.1985.1164728
   Salomon D., 1998, DATA COMPRESSION
   Sayood K, 2017, Introduction to data compression
   Shkarin D, 2002, IEEE DATA COMPR CONF, P202, DOI 10.1109/DCC.2002.999958
   Vines P, 1998, SOFTWARE PRACT EXPER, V28, P1299, DOI 10.1002/(SICI)1097-024X(1998100)28:12<1299::AID-SPE203>3.0.CO;2-E
   WITTEN IH, 1991, IEEE T INFORM THEORY, V37, P1085, DOI 10.1109/18.87000
NR 13
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2005
VL 35
IS 11
BP 1027
EP 1039
DI 10.1002/spe.661
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 963EF
UT WOS:000231785500002
DA 2024-07-18
ER

PT J
AU Wijnstra, JG
AF Wijnstra, JG
TI Classifying product families using platform coverage and variation
   mechanisms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE product family; platform; variation mechanisms; coverage; introduction
   strategy; architecture
AB The notion of product families is becoming more and more popular, both in research and in industry. Every product family initiative that is started within a company has its own context, such as a particular business strategy and a particular application domain. Each product family has its own specific characteristics that have to fit in with its context. In this paper we will describe two dimensions for classifying product families. The first dimension deals with the coverage of the product family platform. Platform coverage deals with the proportion of the functionality provided by the platform, and the additional functionality needed to derive a specific product within the product family. The second dimension deals with the variation mechanisms that are used to derive a specific product from the generic platform. The coverage of the platform and the variation mechanisms used are not totally unrelated. We will discuss various types of platform coverage and variation mechanisms, including their characteristics. These two dimensions are based on experience gained with a number of product families. We will look at four of these in greater detail to illustrate our ideas. We believe that these dimensions will aid the classification of product families. This will both facilitate the selection of a new product family approach for a particular context, and support the evaluation of existing product families. Copyright (c) 2005 John Wiley T Sons, Ltd.
C1 Philips Semicond, Innovat Ctr Eindhoven, NL-5656 AA Eindhoven, Netherlands.
C3 Philips; Philips Research
RP Wijnstra, JG (corresponding author), Philips Semicond, Innovat Ctr Eindhoven, Prof Holstlaan 4, NL-5656 AA Eindhoven, Netherlands.
EM jangerben.wijnstra@philips.com
CR AMERICA P, 2000, LECT NOTES COMPUTER, V1429, P199
   [Anonymous], 2000, IEEE STD, V1471-2000, P1
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Bass Len, 2012, SEI S SOFTW
   BOSCH J, 2002, LNCS, V2379, P257, DOI DOI 10.1007/3-540-45652-X_16
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   BOSCH J, 2000, LECT NOTES COMPUTER, V1429, P117
   Dahl O.-J., 1972, STRUCTURED PROGRAMMI
   Fayad M, 2002, COMMUN ACM, V45, P111
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Jacobson I., 1998, UNIFIED SOFTWARE DEV
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   MALAN R, 2002, IEEE IT PROFESSIONAL
   MULLER G, LIGHT WEIGHT ARCHITE
   Northrop L, 2002, LECT NOTES COMPUT SC, V2290, P258
   OBBINK H, 2000, 1INT SOFTW PROD LIN
   PERRY DE, 1998, LNCS, V1429, P51
   Pronk BJ, 2000, KLUWER INT SER ENG C, V576, P331
   van der Linden F, 2002, LECT NOTES COMPUT SC, V2290, P224
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   van Ommering R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255, DOI 10.1109/ICSE.2002.1007973
   VANDERLINDEN FJ, 1995, IEEE SOFTWARE, V12, P51, DOI 10.1109/52.469760
   VANDERLINDEN FJ, 2003, LECT NOTES COMPUTER, V3014
   VANOMMERING R, 2000, LECT NOTES COMPUTER, V1429, P187
   Wieringa R.J., 1996, REQUIREMENTS ENG FRA
   WIJNSTRA J, 2002, LECT NOTES COMPUTER, V2379, P68
   Wijnstra J. G., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P51, DOI 10.1109/ICSE.2000.870396
   WIJNSTRA JG, 2003, LECT NOTES COMPUTER, V3014, P120
NR 29
TC 1
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2005
VL 35
IS 5
BP 413
EP 444
DI 10.1002/spe.641
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 913XQ
UT WOS:000228189300001
DA 2024-07-18
ER

PT J
AU Lee, SI
   Yang, BS
   Moon, SM
AF Lee, SI
   Yang, BS
   Moon, SM
TI Efficient Java exception handling in just-in-time compilation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT ACM 2000 Java Grande Conference
CY JUN, 2000
CL San Francisco, CA
DE Java virtual machine; exception handling; just-in-time compiler;
   on-demand translation; exception handier prediction
AB Java uses exceptions to provide elegant error handling capabilities during program execution. However, the presence of exception handlers complicates the job of the just-in-time (JIT) compiler, while exceptions are rarely used in most programs. This paper describes two techniques for reducing such complications. First, we delay the translation of an exception handier until the exception really occurs. This on-demand translation of exception handlers allows more optimizations when translating the main flow, without being hindered by constraints caused by the exception flows. Secondly, for those exceptions that are actually thrown during program execution we insert exception-type check code and a direct branch to the translated exception handlers. This exception handler prediction is motivated by an observation that frequently thrown exceptions are likely to be handled by the same exception handlers, so this will eliminate the exception processing overhead of the Java virtual machine. Our experiments indicate that the code quality of the main flow is no longer affected by the presence of exception handlers. Also, frequently thrown exceptions can be efficiently handled by the exception handier prediction. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Seoul Natl Univ, Sch Elect Engn, Seoul 151742, South Korea.
C3 Seoul National University (SNU)
RP Seoul Natl Univ, Sch Elect Engn, Seoul 151742, South Korea.
EM smoon@altair.snu.ac.kr
OI Ebcioglu, Kemal/0000-0001-6256-4248
CR AGESEN O, 1998, PROGRAMMING LANGUAGE, P269
   Arnold K., 2000, The Java Programming Language, V3rd ed
   Gosling J., 1997, The Java Language Specification
   GUPTA M, 2000, P 14 EUR C OBJ OR PR
   HOELZLE U, 1994, THESIS STANDFORD U S
   KRALL A, 1998, P ACM 1998 WORKSH JA, P15
   LEE S, 2000, P ACM 2000 JAV GRAND
   LINDHOLM T, 1997, JAVA MACHINE SPECIFI
   MAHLKE SA, 1993, ACM T COMPUT SYST, V11, P376, DOI 10.1145/161541.159765
   MOON SM, 2000, COMPUTER, V33, P41
   OGASAWARA T, 2001, P 2001 ACM SIGPLAN C
   STICHNOTH JM, 1999, P ACM SIGPLAN 99 C P, P118
   WILKINSON T, 1998, JIT INTERPRETING VIR
   YANG BS, 1999, P 1999 INT C PAR ARC, P128
   1998, SPEC JVM98 BENCHMARK
   1999, BILL PAULS EXCELLENT
   1999, JAVA GRANDE BENCHMAR
NR 17
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2004
VL 34
IS 15
BP 1463
EP 1480
DI 10.1002/spe.622
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 875VY
UT WOS:000225451400003
DA 2024-07-18
ER

PT J
AU Johnson, CW
   Holloway, CM
AF Johnson, CW
   Holloway, CM
TI The ESA/NASA SOHO mission interruption: using the STAMP accident
   analysis technique for a software related 'mishap'
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE STAMP; causation; SOHO; accident investigation; mishap investigation;
   software mishaps
AB Mishap investigations provide important information about adverse events and are intended to help avoid any recurrence of previous failures. However, the complexity of many safety critical systems poses new challenges for mishap analysis. Similarly, the recognition that many failures have complex, systemic causes has helped to widen the scope of many mishap investigations. A new generation of mishap analysis techniques has been proposed to help investigators address these problems. For instance, Leveson has recently developed the Systems Theory Accident Modelling and Process (STAMP) approach to address some of the weaknesses associated with previous 'chain of event' approaches that can miss the systemic causes of adverse events. There are relatively few examples of the STAMP approach. This paper, therefore, presents the results obtained when two analysts performed an independent application of this technique to analyse the causes, including software problems, which led to the mission interruption of the joint European Space Agency (ESA) and National Aeronautics and Space Administration (NASA) Solar and Heliocentric Observatory (SOHO). Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Glasgow, Dept Comp Sci, Glasgow G12 9QQ, Lanark, Scotland.
   NASA, Langley Res Ctr, Hampton, VA 23681 USA.
C3 University of Glasgow; National Aeronautics & Space Administration
   (NASA); NASA Langley Research Center
RP Johnson, CW (corresponding author), Univ Glasgow, Dept Comp Sci, Lilybank Gardens, Glasgow G12 9QQ, Lanark, Scotland.
CR Byrne RMJ, 1997, COGNITION, V62, P1, DOI 10.1016/S0010-0277(96)00720-2
   *IEC, 2000, 61505 IEC
   ISAAC A, 2002, INVESTIGATION REPORT
   Johnson C, 2003, RELIAB ENG SYST SAFE, V80, P271, DOI 10.1016/S0951-8320(03)00053-X
   JOHNSON CW, 2003, IN PRESS HDB REPORTI
   LEKBERG AK, 1997, P 15 INT SYST SAF C, P178
   Leveson N. G., 2002, P 20 INT SYST SAF C
   Leveson Nancy., 2002, Proceedings of the 20th International System Safety Conference, P476
   *NASA, 2001, 86211 NASA PG
   *NASA ESA, 1998, SOHO MISS INT JOINT
   REASON J, 1997, MANAGING RISKS ORG A
NR 11
TC 15
Z9 16
U1 0
U2 5
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2003
VL 33
IS 12
BP 1177
EP 1198
DI 10.1002/spe.544
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 727JN
UT WOS:000185655000004
DA 2024-07-18
ER

PT J
AU Al-Salman, AS
   Al-Khalifa, HS
AF Al-Salman, AS
   Al-Khalifa, HS
TI Towards a computerized Arabic Braille environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Arabic Braille; Braille editor; translator; visually impaired
AB People with visual disabilities face many difficulties and barriers when using computers and the Internet. Such people need the help of IT developers to create adaptive technologies that facilitate their interaction with the computers and Internet.
   This paper presents the design and implementation of an Arabic Braille environment (ABE). The paper also exposes to the reader the ABE's functionality and unique features. The ABE is designed to facilitate Arabic-speaking visually impaired people interaction with computers, as well as helping sighted users to communicate with the visually impaired. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 King Saud Univ, Dept Comp Sci, Riyadh 11543, Saudi Arabia.
C3 King Saud University
RP Al-Salman, AS (corresponding author), King Saud Univ, Dept Comp Sci, POB 51178, Riyadh 11543, Saudi Arabia.
RI Al-Khalifa, Hend S./F-3945-2011; AlSalman, Abdulmalik/AEY-1650-2022;
   Al-Khalifa, Hend/AAY-5219-2020
OI Al-Khalifa, Hend S./0000-0002-7328-4935; AlSalman,
   Abdulmalik/0000-0001-5874-2611; Al-Khalifa, Hend/0000-0002-7328-4935
CR ALSALMAN A, 2000, 2 INT C DIS REH PRIN
   [Anonymous], JAWS WINDOWS
   [Anonymous], IBM HOME PAGE READER
   [Anonymous], Experts Exchange
   BLOMQVIST M, 2002, P TECHN PERS DIS C
   BURGER D, 1999, P 14 ANN INT C TECHN
   GARDNER J, 1997, P 1997 C W3 CONS SAN
   Gardner J.A., 1993, P 1993 INT C TECHN P
   GLASNER J, 1999, GIVING VOICE WEB
   Halousek Jan, 1999, P 14 ANN INT C TECHN
   *IND BRAILL CO, 2002, CAT 2002 BRAILL EQ B
   *KUW I SCI RES, 1999, PRINT SYST BRAILL US
   LAMOTHE A, 1999, WINDOWS GAME PROGRAM
   Ley Thomas A, 1999, P 14 ANN INT C TECHN
   MEIJER PBL, PRINT NONIMPACT PRIN
   MEIJER PBL, LETS MAKE VISION ACC
   Mennens J., 1994, IEEE Transactions on Rehabilitation Engineering, V2, P207, DOI 10.1109/86.340878
   Okada Y, 1998, NEC RES DEV, V39, P335
   *OR STAT U SCI ACC, BOXER METH MAK FLOW
   Sahyun S., 1998, P 1998 CSUN INT C TE
   SAKHR, 2002, READING MACHINE USER
   SAVIDIS A, 1995, P CHI 95 DENV CO 7 1
   *SENS APS, 1999, SENS
   *SIGHT EL INC, 1999, SIGHT EL
   Talat QZ, 1998, ALQAMOUS SHAMEL
   CODE GURU
   SPEECHHTML ACCESSING
   TOUCHSENSE MOUSE
   FRONTIER COMPUTING
   TOUCH GRAPHICS
   GLOSSARY ADAPTIVE TE
   IBM VOICE SYSTMES
   VOICEXML FORUM TECHN
NR 33
TC 2
Z9 2
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2003
VL 33
IS 6
BP 497
EP 508
DI 10.1002/spe.501
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 675MH
UT WOS:000182698700001
DA 2024-07-18
ER

PT J
AU Chae, HS
   Kwon, YR
   Bae, DH
AF Chae, HS
   Kwon, YR
   Bae, DH
TI Response to 'More comments on: A cohesion measure for object-oriented
   classes'
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE class; object-orientation; cohesion; interaction patterns; restructuring
AB The authors insist that monotonicity is a necessary property of a good cohesion metric and the violation of the monotonicity property limits the application of CBMC. They also state that the augmented CBMC can also be used as a guideline for quality evaluation and restructuring of poorly designed classes. This paper raises the question about the necessity of monotonicity by analyzing the reason that causes CBMC to violate the monotonicity property. In addition, we give a detailed description of the restructuring procedure based on CBMC. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Tong Yang Syst Corp, R&D Ctr, Songpa Gu, Seoul 138130, South Korea.
   Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, Div Comp Sci, Yusung Gu, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Chae, HS (corresponding author), Tong Yang Syst Corp, R&D Ctr, Songpa Gu, 24 Ogum Dong, Seoul 138130, South Korea.
EM hschae@salmosa.kaist.ac.kr
RI Kwon, Yong Rae/C-1872-2011; Bae, Doo-Hwan/C-1538-2011
CR Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Chae HS, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P158, DOI 10.1109/METRIC.1998.731241
   Chae HS, 2001, SOFTWARE PRACT EXPER, V31, P1389, DOI 10.1002/spe.414
   CHAE HS, 1996, P AS PAC SOFTW ENG C, P76
   Xu BW, 2001, SOFTWARE PRACT EXPER, V31, P1381, DOI 10.1002/spe.413
NR 6
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2003
VL 33
IS 6
BP 589
EP 594
DI 10.1002/spe.506
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 675MH
UT WOS:000182698700006
OA Bronze
DA 2024-07-18
ER

PT J
AU Anh, ND
   Khanna, D
   Le, GH
   Greer, D
   Wang, XF
   Zaina, LM
   Matturro, G
   Melegati, J
   Guerra, E
   Kettunen, P
   Hyrynsalmi, S
   Edison, H
   Sales, A
   Chanin, R
   Rutitis, D
   Kemell, KK
   Aldaeej, A
   Mikkonen, T
   Garbajosa, J
   Abrahamsson, P
AF Anh, Nguyen-Duc
   Khanna, Dron
   Le, Giang Huong
   Greer, Des
   Wang, Xiaofeng
   Zaina, Luciana Martinez
   Matturro, Gerardo
   Melegati, Jorge
   Guerra, Eduardo
   Kettunen, Petri
   Hyrynsalmi, Sami
   Edison, Henry
   Sales, Afonso
   Chanin, Rafael
   Rutitis, Didzis
   Kemell, Kai-Kristian
   Aldaeej, Abdullah
   Mikkonen, Tommi
   Garbajosa, Juan
   Abrahamsson, Pekka
TI Work-from-home impacts on software project: A global study on software
   development practices and stakeholder perceptions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE COVID-19; empirical study; project management; software engineering;
   work-from-home
ID COORDINATION; TELEWORKING; REQUIREMENTS; TECHNOLOGY; CHALLENGES;
   ENGINEERS; SPACE; TOOLS
AB ContextThe COVID-19 pandemic has had a disruptive impact on how people work and collaborate across all global economic sectors, including software business. While remote working is not new for software engineers, forced WFH situations come with both limitations and opportunities. As the 'new normal' for working might be based on the current state of Work-from-home (WFH), it is useful to understand what has happened and learn from that.ObjectiveThis study aims to gain insights into how their WFH arrangement impacts project management and software engineering. We are also interested in exploring these impacts in different contexts, such as startups and established companies.MethodWe conducted a global-scale, cross-sectional survey during the spring and summer 2021. Our results are based on quantitative and qualitative analysis of 297 valid responses.ResultsWe characterize the profile of WFH in both spatial and temporal aspects, together with a set of common collaborative tools and coordination and control mechanisms. We revealed some areas of project management that are relatively more challenging during WFH situations, such as coordination, communication and project planning. We also revealed a mixed picture of the perceived impact of WFH on different software engineering activities.ConclusionWFH is a situational phenomenon which can have both negative and positive impact on software teams. For practitioners, we suggest a unified approach to consider the context of WFH, collaborative tools, associated coordination and control approaches and a process that resolve those aspects that are sensitive to physical interaction.
C1 [Anh, Nguyen-Duc] Norwegian Univ Sci & Technol, Dept Comp Sci, Trondheim, Norway.
   [Khanna, Dron; Wang, Xiaofeng; Melegati, Jorge; Guerra, Eduardo] Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Italy.
   [Le, Giang Huong] Oslo Metropolitan Univ, Fac Social Sci, Oslo, Norway.
   [Greer, Des] Queens Univ Belfast, Sch Elect Elect Engn & Comp Sci, Belfast, North Ireland.
   [Zaina, Luciana Martinez] Univ Fed Sao Carlos, Dept Comp, Sao Carlos, Brazil.
   [Matturro, Gerardo] Univ ORT Uruguay, Dept Software Engn, Montevideo, Uruguay.
   [Kettunen, Petri; Kemell, Kai-Kristian] Univ Helsinki, Dept Comp Sci, Helsinki, Finland.
   [Hyrynsalmi, Sami] Univ Lappeenranta, Software Engn Dept, Lappeenranta, Finland.
   [Edison, Henry] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
   [Sales, Afonso; Chanin, Rafael] Pontificia Univ Catolica Rio Grande do Sul, Sch Technol, Porto Alegre, Brazil.
   [Rutitis, Didzis] BA Sch Business & Finance, Sch Business & Finance, Riga, Latvia.
   [Aldaeej, Abdullah] Imam Abdulrahman Bin Faisal Univ, Dept Management Informat Syst, Dammam, Saudi Arabia.
   [Mikkonen, Tommi] Univ Jyvaskyla, Fac Informat Technol, Jyvaskyla, Finland.
   [Garbajosa, Juan] Univ Politecn Madrid, Comp Syst Engn Sch ETSISI, Madrid, Spain.
   [Abrahamsson, Pekka] Tampere Univ, Fac Informat Technol & Commun Sci, Tampere, Finland.
   [Anh, Nguyen-Duc] Univ South Eastern Norway, Dept Comp Sci, Trondheim, Norway.
   [Anh, Nguyen-Duc] Norwegian Univ Sci & Technol, Trondheim, Norway.
C3 Norwegian University of Science & Technology (NTNU); Free University of
   Bozen-Bolzano; Oslo Metropolitan University (OsloMet); Queens University
   Belfast; Universidade Federal de Sao Carlos; University ORT Uruguay;
   University of Helsinki; Blekinge Institute Technology; Pontificia
   Universidade Catolica Do Rio Grande Do Sul; Imam Abdulrahman Bin Faisal
   University; University of Jyvaskyla; Universidad Politecnica de Madrid;
   Tampere University; Norwegian University of Science & Technology (NTNU);
   Norwegian University of Science & Technology (NTNU)
RP Anh, ND (corresponding author), Univ South Eastern Norway, Dept Comp Sci, Trondheim, Norway.; Anh, ND (corresponding author), Norwegian Univ Sci & Technol, Trondheim, Norway.
EM anh.nguyen.duc@usn.no
RI Nguyen-Duc, Anh/AAB-5189-2020; Garbajosa, Juan/B-5818-2012; Hyrynsalmi,
   Sami/U-6315-2017; Aldaeej, Abdullah/KTI-5552-2024; Rutitis,
   Didzis/AAD-5389-2019
OI Garbajosa, Juan/0000-0003-0161-3485; Hyrynsalmi,
   Sami/0000-0002-5073-3750; Aldaeej, Abdullah/0000-0002-6405-1750; Khanna,
   Dron/0000-0003-4760-5560; Mikkonen, Tommi/0000-0002-8540-9918; Greer,
   Des/0000-0001-6367-9274; Rutitis, Didzis/0000-0002-9621-6513;
   Nguyen-Duc, Anh/0000-0002-7063-9200; Kettunen, Petri/0000-0002-2928-5885
CR Amir U, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ELECTRICAL SYSTEMS FOR AIRCRAFT, RAILWAY, SHIP PROPULSION AND ROAD VEHICLES & INTERNATIONAL TRANSPORTATION ELECTRIFICATION CONFERENCE (ESARS-ITEC)
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   Bai JJ., DIGITAL RESILIENCE W, DOI [10.2139/ssrn.3616893, DOI 10.2139/SSRN.3616893]
   Baker E., RES PRACT HUMAN RESO, V15, P37
   Bao L., DOES WORKING HOME AF
   Baruch Y, 2000, NEW TECH WORK EMPLOY, V15, P34, DOI 10.1111/1468-005X.00063
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Boden A., 2007, INT C GLOB SOFTW ENG, DOI 10.1109/ICGSE.2007.18
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Butler J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P362, DOI 10.1109/ICSE-SEIP52600.2021.00047
   Bygrave W.D., 1991, Entrepreneurship Theory and Practice, V16, P13, DOI DOI 10.1177/104225879201600203
   Cascio WF, 2000, ACAD MANAGE EXEC, V14, P81, DOI 10.5465/AME.2000.4468068
   Choudhury P, 2021, STRATEGIC MANAGE J, V42, P655, DOI 10.1002/smj.3251
   Collins CS, 2018, INT J QUAL METH, V17, DOI 10.1177/1609406918797475
   CROSSAN G, 1993, J INFORM SCI, V19, P349, DOI 10.1177/016555159301900503
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cummings JN, 2009, INFORM SYST RES, V20, P420, DOI 10.1287/isre.1090.0239
   Davenport TH, 1998, SLOAN MANAGE REV, V39, P51
   Duxbury L, 1998, S INF TECHN MANAG, P218
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Eurofound L., WORKING COVID 19
   Farooq R, 2022, MEAS BUS EXCELL, V26, P308, DOI 10.1108/MBE-12-2020-0173
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Fink A., 2003, DESIGN SURVEY STUDIE, DOI DOI 10.4135/9781412984447
   Ford D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487567
   Forsgren Nicole, 2021, ACM Queue, V19, P20, DOI 10.1145/3454122.3454124
   Garousi V, 2015, J SYST SOFTWARE, V108, P148, DOI 10.1016/j.jss.2015.06.036
   Gregory S, 2021, IEEE SOFTWARE, V38, P15, DOI 10.1109/MS.2020.3044403
   Gutwin C., 2004, GROUP AWARENESS DIST, DOI [10.1145/1031607.1031621, DOI 10.1145/1031607.1031621]
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hyman J, 2003, BRIT J IND RELAT, V41, P215, DOI 10.1111/1467-8543.00270
   Jun Jie Ng, 2021, IEEE Engineering Management Review, V49, P12, DOI 10.1109/EMR.2021.3121964
   Kettunen P, 2021, LECT NOTES BUS INF P, V426, P33, DOI 10.1007/978-3-030-88583-0_4
   Khanna D, 2018, LECT NOTES BUS INF P, V336, P172, DOI 10.1007/978-3-030-04840-2_12
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kuhrmann M, 2019, IEEE SOFTWARE, V36, P20, DOI 10.1109/MS.2018.110161245
   Kurland NB, 1999, ORGAN DYN, V28, P53
   Lanubile F, 2013, IEEE SOFTWARE, V30, P18, DOI 10.1109/MS.2013.30
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   de la Vara JL, 2016, IEEE T SOFTWARE ENG, V42, P1095, DOI 10.1109/TSE.2016.2553032
   Machado LS, 2021, IEEE SOFTWARE, V38, P38, DOI 10.1109/MS.2020.3040135
   Majchrzak A, 2000, MIS QUART, V24, P569, DOI 10.2307/3250948
   Marinho M, 2021, TECHNOL SOC, V67, DOI 10.1016/j.techsoc.2021.101799
   Maxwell J.A., 2012, QUALITATIVE RES DESI
   Maznevski ML, 2000, ORGAN SCI, V11, P473, DOI 10.1287/orsc.11.5.473.15200
   Mockus A, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P182, DOI 10.1109/METRIC.2001.915526
   Molleri J. S., 2016, ACM IEEE INT S EMP S, P1, DOI [DOI 10.1145/2961111.2962619, 10.1145/2961111.2962619]
   Neumann M., 2021, SARS COV 2 PANDEMIC
   Nguyen-Duc A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09987-z
   Niazi M, 2015, IET SOFTW, V9, P135, DOI 10.1049/iet-sen.2014.0130
   Nolan A, 2021, COMM COM INF SC, V1442, P14, DOI 10.1007/978-3-030-85521-5_2
   Noll J., 2011, ACM INROADS, V1, P66, DOI [10.1145/1835428.1835445, DOI 10.1145/1835428.1835445]
   Oliveira E., SURVEYING IMPACTS CO
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   OLSON MH, 1983, COMMUN ACM, V26, P182, DOI 10.1145/358061.358068
   Perez M.P., 2004, EUR J INNOV MANAG, V7, P280, DOI DOI 10.1108/14601060410565038
   Pratt J., HOME TELEWORKING STU, DOI [10.1016/0040-1625(84)90076-3, DOI 10.1016/0040]
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Rindfleisch A, 2008, J MARKETING RES, V45, P261, DOI 10.1509/jmkr.45.3.261
   Rodeghero P., PLEASE TURN YOUR CAM
   Russell H, 2009, GENDER WORK ORGAN, V16, P73, DOI 10.1111/j.1468-0432.2008.00431.x
   Russo D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09945-9
   Sarasvathy SD, 2001, ACAD MANAGE REV, V26, P243, DOI 10.2307/259121
   Smite D, 2005, LECT NOTES COMPUT SC, V3547, P234
   Smite D., FORCED WORKING FROM
   Smite D, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111197
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Teo TSH, 1998, INT J INFORM MANAGE, V18, P329, DOI 10.1016/S0268-4012(98)00023-1
NR 69
TC 0
Z9 0
U1 8
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2024
VL 54
IS 5
BP 896
EP 926
DI 10.1002/spe.3306
EA DEC 2023
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NB0V3
UT WOS:001131509800001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Bermbach, D
   Bader, J
   Hasenburg, J
   Pfandzelter, T
   Thamsen, L
AF Bermbach, David
   Bader, Jonathan
   Hasenburg, Jonathan
   Pfandzelter, Tobias
   Thamsen, Lauritz
TI AuctionWhisk: Using an auction-inspired approach for function placement
   in serverless fog platforms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed scheduling; fog computing; function-as-a-service; serverless
   computing
ID RESOURCE-ALLOCATION; SERVICE MIGRATION; EDGE; CLOUD; MECHANISMS;
   INTERNET; SIMULATION; TOOLKIT
AB The Function-as-a-Service (FaaS) paradigm has a lot of potential as a computing model for fog environments comprising both cloud and edge nodes, as compute requests can be scheduled across the entire fog continuum in a fine-grained manner. When the request rate exceeds capacity limits at the resource-constrained edge, some functions need to be offloaded toward the cloud. In this article, we present an auction-inspired approach in which application developers bid on resources while fog nodes decide locally which functions to execute and which to offload in order to maximize revenue. Unlike many current approaches to function placement in the fog, our approach can work in an online and decentralized manner. We also present our proof-of-concept prototype AuctionWhisk that illustrates how such an approach can be implemented in a real FaaS platform. Through a number of simulation runs and system experiments, we show that revenue for overloaded nodes can be maximized without dropping function requests.
C1 [Bermbach, David; Hasenburg, Jonathan; Pfandzelter, Tobias] TU Berlin, Mobile Cloud Comp Res Grp, Berlin, Germany.
   [Bermbach, David; Hasenburg, Jonathan; Pfandzelter, Tobias] Einstein Ctr Digital Future, Berlin, Germany.
   [Bader, Jonathan; Thamsen, Lauritz] TU Berlin, Distributed & Operating Syst Res Grp, Berlin, Germany.
C3 Technical University of Berlin; Technical University of Berlin
RP Bermbach, D (corresponding author), TU Berlin, Sekr EN17,Einsteinufer 17, D-10587 Berlin, Germany.
EM db@mcc.tu-berlin.de
RI Pfandzelter, Tobias/AAZ-7485-2021
OI Pfandzelter, Tobias/0000-0002-7868-8613; Bermbach,
   David/0000-0002-7524-3256; Hasenburg, Jonathan/0000-0001-8549-0405
FU Projekt DEAL
FX The authors thank Setareh Maghsudi for contributing an overview of
   various auction approaches to our original paper.9 Open Access funding
   enabled and organized by Projekt DEAL.
CR Abdulsalam Y, 2022, IEEE T NETW SCI ENG, V9, P309, DOI 10.1109/TNSE.2020.3026637
   [Anonymous], 2015, P USENIX HOTSTORAGE, DOI DOI 10.5555/2827719.2827740
   Apache Software Foundation, OPENWHISK DOC
   Aske A, 2018, INT CONF PARA PROC, DOI 10.1145/3229710.3229742
   Aslam Masood, 2021, 2021 Digital Image Computing: Techniques and Applications (DICTA), P01, DOI 10.1109/DICTA52665.2021.9647409
   Badri H, 2020, IEEE T PARALL DISTR, V31, P909, DOI 10.1109/TPDS.2019.2950937
   Bagaa M., 2020, IEEE T MOBILE COMPUT
   Balasubramanian D, 2014, P IEEE RAP SYST PROT, P128, DOI 10.1109/RSP.2014.6966903
   Baldini I., 2017, RES ADV CLOUD COMPUT, P1, DOI DOI 10.1007/978-981-10-5026-8_1
   Baldini I, 2017, PROCEEDINGS OF THE 2017 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!'17), P89, DOI 10.1145/3133850.3133855
   Banzai Takayuki., 2010, Proceedings of the 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing, P631, DOI [DOI 10.1109/CCGRID.2010.72, 10.1109/CCGRID. 2010.72]
   Baranwal Gaurav, 2020, 2020 IEEE 15th International Conference on Industrial and Information Systems (ICIIS), P575, DOI 10.1109/ICIIS51140.2020.9342683
   Baresi L, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2019), P1, DOI 10.1109/ICFC.2019.00008
   Baresi L, 2017, LECT NOTES COMPUT SC, V10465, P196, DOI 10.1007/978-3-319-67262-5_15
   Basic F, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2019), P87, DOI 10.1109/ICFC.2019.00020
   Becker S, 2021, IEEE IPCCC, DOI 10.1109/IPCCC51483.2021.9679447
   Bermbach D, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P134, DOI 10.1145/3341105.3373909
   Bermbach D, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2020), P25, DOI 10.1109/ICFC49376.2020.00012
   Bermbach D, 2018, LECT NOTES COMPUT SC, V10797, P198, DOI 10.1007/978-3-319-91764-1_16
   Bermbach David, 2017, Cloud Service Benchmarking: Measuring Quality of Cloud Services from a Client Perspective
   Bin Wang, 2020, HPDC '21: Proceedings of the 30th International Symposium on High-Performance Parallel and Distributed Computing, P239, DOI 10.1145/3431379.3460646
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Bradshaw S, 2011, INT J LAW INFORM TEC, V19, P187, DOI 10.1093/ijlit/ear005
   Brambilla G., 2014, Proceedings of the First International Conference on IoT in Urban Space, P50, DOI DOI 10.4108/ICST.URB-IOT.2014.257268
   Brogi A, 2017, IEEE INTERNET THINGS, V4, P1185, DOI 10.1109/JIOT.2017.2701408
   Cardellini Valeria, 2017, ACM SIGMETRICS Performance Evaluation Review, V44, P11, DOI 10.1145/3092819.3092823
   Chandrashekar TS, 2007, IEEE T AUTOM SCI ENG, V4, P297, DOI 10.1109/TASE.2006.885126
   Chen L, 2021, IEEE T SERV COMPUT, V14, P286, DOI 10.1109/TSC.2018.2792024
   Cheng B, 2019, P IEEE I C SERV COMP, P28, DOI 10.1109/SCC.2019.00018
   Cicconetti C, 2021, IEEE T NETW SERV MAN, V18, P2166, DOI 10.1109/TNSM.2020.3023305
   Cicconetti C, 2020, COMPUT NETW, V172, DOI 10.1016/j.comnet.2020.107184
   Confais B, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P41, DOI 10.1109/ICFEC.2017.13
   Coutinho A, 2018, IEEE ICC
   Das A, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P41, DOI 10.1109/CCGrid49817.2020.00-89
   De Maio V, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P127, DOI 10.1145/3297663.3310301
   Deng SG, 2021, IEEE T MOBILE COMPUT, V20, P1907, DOI 10.1109/TMC.2020.2970698
   Fawcett Lyndon, 2016, 2016 Fifth European Workshop on Software-Defined Networks (EWSDN). Proceedings, P62, DOI 10.1109/EWSDN.2016.16
   Fernández-Cerero D, 2020, SIMUL MODEL PRACT TH, V101, DOI 10.1016/j.simpat.2019.101966
   Foukas X, 2017, IEEE COMMUN MAG, V55, P94, DOI 10.1109/MCOM.2017.1600951
   Gao B, 2021, IEEE T MOH COMPUT
   Gao GJ, 2021, IEEE T SERV COMPUT, V14, P1702, DOI 10.1109/TSC.2019.2902549
   Gao L, 2011, IEEE T MOBILE COMPUT, V10, P1144, DOI 10.1109/TMC.2010.220
   George G, 2020, 2020 IEEE/ACM SYMPOSIUM ON EDGE COMPUTING (SEC 2020), P220, DOI 10.1109/SEC50012.2020.00035
   Gharaibeh A, 2017, IEEE INTERNET THINGS, V4, P1583, DOI 10.1109/JIOT.2017.2724938
   Goudarzi M, 2021, IEEE T MOBILE COMPUT, V20, P1298, DOI 10.1109/TMC.2020.2967041
   Guo SY, 2020, IEEE T VEH TECHNOL, V69, P5549, DOI 10.1109/TVT.2020.2982000
   Guo Y, 2020, P 34 INT C ADV INF N, P268
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Gusev M, 2019, IEEE INTERNET COMPUT, V23, P37, DOI 10.1109/MIC.2019.2892219
   Habiba U, 2018, IEEE COMMUN SURV TUT, V20, P2264, DOI 10.1109/COMST.2018.2811395
   Hall A, 2019, PROCEEDINGS OF THE 2019 INTERNATIONAL CONFERENCE ON INTERNET OF THINGS DESIGN AND IMPLEMENTATION (IOTDI '19), P225, DOI 10.1145/3302505.3310084
   Hasenburg, IEEE TRANS CLOUD COM, P2021
   Hasenburg J., 2019, FBASE REPLICATION SE
   Hasenburg J, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P267, DOI 10.1145/3341105.3374060
   Hasenburg J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2019), P144, DOI 10.1109/ICFC.2019.00026
   Hasenburg J, 2018, PROCEEDINGS OF THE 2018 WORKSHOP ON MIDDLEWARE AND APPLICATIONS FOR THE INTERNET OF THINGS (M4IOT '18), P1, DOI 10.1145/3286719.3286720
   He ZL, 2021, SOFTWARE PRACT EXPER, V51, P1868, DOI 10.1002/spe.2951
   Hellerstein JM, 2019, P CIDR 19 ASIL CA
   Hendrickson Scott, 2016, P USENIX HOT CLOUD
   Hu SS, 2018, IEEE GLOB COMM CONF
   Huang JW, 2008, IEEE J SEL AREA COMM, V26, P1226, DOI 10.1109/JSAC.2008.080919
   Janssen G, 2018, IEEE INT CONF BIG DA, P5159, DOI 10.1109/BigData.2018.8622651
   Jayaweera SK, 2011, IEEE T WIREL COMMUN, V10, P2716, DOI 10.1109/TWC.2011.061311.102044
   Jha DN, 2020, SOFTWARE PRACT EXPER, V50, P844, DOI 10.1002/spe.2787
   Jiao YT, 2019, IEEE T PARALL DISTR, V30, P1975, DOI 10.1109/TPDS.2019.2900238
   Jindal A, 2021, SOFTWARE PRACT EXPER, V51, P1936, DOI 10.1002/spe.2966
   Kantarci B, 2014, IEEE INTERNET THINGS, V1, P360, DOI 10.1109/JIOT.2014.2337886
   Karagiannis V, 2020, 4TH IEEE INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC 2020), P19, DOI 10.1109/ICFEC50348.2020.00010
   Kiani A, 2017, IEEE INTERNET THINGS, V4, P2082, DOI 10.1109/JIOT.2017.2750030
   Lee Y, 2020, IEEE ACCESS, V8, P147313, DOI 10.1109/ACCESS.2020.3015550
   Li QY, 2020, IEEE INTERNET THINGS, V7, P5976, DOI 10.1109/JIOT.2019.2953108
   Li Y, IEEE T MOBILE COMPUT, P2021
   Liwang MH, 2019, IEEE INTERNET THINGS, V6, P4214, DOI 10.1109/JIOT.2018.2875507
   Lu R, 2017, IEEE ACCESS, V5, P3302, DOI 10.1109/ACCESS.2017.2677520
   Luckow A, 2021, 5TH IEEE INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC 2021), P79, DOI 10.1109/ICFEC51620.2021.00019
   Luong NC, 2020, IEEE COMMUN MAG, V58, P82, DOI 10.1109/MCOM.001.1900136
   Lynn T, 2017, INT CONF CLOUD COMP, P162, DOI 10.1109/CloudCom.2017.15
   Ma Y, 2022, IEEE T MOBILE COMPUT, V21, P196, DOI 10.1109/TMC.2020.3006507
   Machen A, 2018, IEEE WIREL COMMUN, V25, P140, DOI 10.1109/MWC.2017.1700011
   Mahmud R, 2020, J PARALLEL DISTR COM, V135, P177, DOI 10.1016/j.jpdc.2019.10.001
   Mayer Ruben, 2017, P 1 WORKSH DISTR INF, P1, DOI DOI 10.1109/FWC.2017.8368525
   Mell P, 2010, COMMUN ACM, V53, P50
   Mohan A, P 11 USENIX WORKSH H, P2109
   Moubayed A, 2021, IEEE T MOBILE COMPUT, V20, P1380, DOI 10.1109/TMC.2020.2965929
   Naas MI, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P97, DOI 10.1109/ICFEC.2017.15
   Nastic S, 2018, DEVICELESS EDGE COMP
   Nastic S, 2017, IEEE INTERNET COMPUT, V21, P64, DOI 10.1109/MIC.2017.2911430
   Nemeth B, IEEE T MOBILE COMPUT, P2021
   O'Neill ME, 2009, J FUNCT PROGRAM, V19, P95, DOI 10.1017/S0956796808007004
   Oh K, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P649, DOI 10.1109/CCGrid49817.2020.00-28
   Ouyang X, 2016, INT CON DISTR COMP S, P425, DOI 10.1109/ICDCS.2016.88
   Palade A, 2020, P IEEE I C SERV COMP, P48, DOI 10.1109/SCC49832.2020.00013
   Palade A, 2019, IEEE WORLD CONGR SER, P206, DOI 10.1109/SERVICES.2019.00057
   Pallas F, 2020, IEEE INTERNET COMPUT, V24, P15, DOI 10.1109/MIC.2020.2979161
   Martin JP, 2020, SOFTWARE PRACT EXPER, V50, P2337, DOI 10.1002/spe.2896
   Peng XT, 2020, IEEE INTERNET THINGS, V7, P3094, DOI 10.1109/JIOT.2020.2965009
   Persson P, 2017, PROCEEDINGS OF THE 2ND INTERNATIONAL WORKSHOP ON SERVERLESS COMPUTING (WOSC '17), P16, DOI 10.1145/3154847.3154853
   Persson P, 2015, PROCEDIA COMPUT SCI, V52, P210, DOI 10.1016/j.procs.2015.05.059
   Pfandzelter, P 4 INT WORKSH EDG S, V2021, P43
   Pfandzelter T, 2021, SOFTWARE PRACT EXPER, V51, P1798, DOI 10.1002/spe.3003
   Pfandzelter T, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2020), P17, DOI 10.1109/ICFC49376.2020.00011
   Pfandzelter T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2019), P201, DOI 10.1109/ICFC.2019.00033
   Qayyum T, 2018, IEEE ACCESS, V6, P63570, DOI 10.1109/ACCESS.2018.2877696
   Rausch T, 2019, P HOTEDGE19 RENT WA
   Rausch T, 2021, FUTURE GENER COMP SY, V114, P259, DOI 10.1016/j.future.2020.07.017
   Roy N, 2011, P 2 ACM SPEC INT C P, P259
   Safianowska MB, 2016, 2016 INTERNATIONAL COMPUTER SYMPOSIUM (ICS), P736, DOI [10.1109/ICS.2016.0152, 10.1109/ICS.2016.151]
   de Oliveira RLS, 2014, 2014 IEEE COLOMBIAN CONFERENCE ON COMMUNICATIONS AND COMPUTING (COLCOM)
   Santos L, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1488, DOI 10.1145/3341105.3374030
   Saurez E., 2016, P 10 ACM INT C DISTR, P258, DOI [DOI 10.1145/2933267.2933317, 10.1145/2933267, DOI 10.1145/2933267]
   Shakarami A, 2020, SOFTWARE PRACT EXPER, V50, P1719, DOI 10.1002/spe.2839
   Sonmez C, 2018, T EMERG TELECOMMUN T, V29, DOI 10.1002/ett.3493
   Sotiriadis S, 2014, 2014 28TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P444, DOI 10.1109/WAINA.2014.74
   Sreekanti V, 2020, PROC VLDB ENDOW, V13, P2438, DOI 10.14778/3407790.3407836
   Sun W, 2018, IEEE T IND INFORM, V14, P4692, DOI 10.1109/TII.2018.2855746
   Symeonides M, 2020, 2020 IEEE/ACM SYMPOSIUM ON EDGE COMPUTING (SEC 2020), P42, DOI 10.1109/SEC50012.2020.00011
   Tasiopoulos AG, 2018, I S WORLD WIREL MOBI
   Tong L, 2016, 35 IEEE ANN INT C CO
   Wang SQ, 2019, IEEE ACM T NETWORK, V27, P1272, DOI 10.1109/TNET.2019.2916577
   Wiesner P, 2021, 5TH IEEE INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC 2021), P29, DOI 10.1109/ICFEC51620.2021.00012
   Wöbker C, 2018, IEEE IFIP NETW OPER
   Xu XL, 2019, IEEE ACCESS, V7, P67734, DOI 10.1109/ACCESS.2019.2918585
   Yang DM, 2015, 2015 6TH INTERNATIONAL CONFERENCE ON POWER ELECTRONICS SYSTEMS AND APPLICATIONS (PESA), DOI 10.1080/00207543.2014.998789
   You M, 2020, P 2020 4 INT C INN A, P242
   Zeng XZ, 2017, J SYST ARCHITECT, V72, P93, DOI 10.1016/j.sysarc.2016.06.008
   Zhang LQ, 2014, IEEE INFOCOM SER, P433, DOI 10.1109/INFOCOM.2014.6847966
   Zhao D, 2014, IEEE INFOCOM SER, P1213, DOI 10.1109/INFOCOM.2014.6848053
   Zhao PY, 2022, IEEE T MOBILE COMPUT, V21, P3656, DOI 10.1109/TMC.2021.3060118
   Zhao YM, 2021, IEEE T MOBILE COMPUT, V20, P460, DOI 10.1109/TMC.2019.2947465
   Zhou BW, 2019, J SYST SOFTWARE, V152, P151, DOI 10.1016/j.jss.2019.03.003
   ZU Y, 2019, P 2019 IEEE 30 ANN I, P1
NR 131
TC 23
Z9 23
U1 3
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2022
VL 52
IS 5
BP 1143
EP 1169
DI 10.1002/spe.3058
EA DEC 2021
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0G4IQ
UT WOS:000727104800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, ZW
   Feng, D
   Hu, YC
   Lu, MT
AF Li, Zongwei
   Feng, Dan
   Hu, Yuchong
   Lu, Mengting
TI SPOPB: Reducing solid state drive write traffic for flash-based
   key-value caching
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE flash-based KV caching; slab popularity; SSD write traffic
AB Flash-based key-value (KV) caching has received increasing attention in recent years with the advantages of flash-based solid state drives (SSDs) in capacity and cost. By caching most data in SSD, the caching system can eliminate lots of time-consuming requests to back-end data stores to provide low-latency services. To adapt to the unique technical constraints of flash memory, flash-based KV caching adopts a slab-based log-structured management scheme in which the slab is the basic storage unit, and uses a small memory space as a write buffer to eliminate small random writes to SSD for consistent performance and increased lifetime of SSD. However, we have observed that under update-intensive workloads with strong temporal locality, the slab-based management in flash-based KV caching introduces substantial SSD write traffic because of indistinguishable SSD flushing of hot items in slabs, which shortens the SSD lifetime and degrades the performance with increased erase operations. In this article, we first analyze the SSD write traffic in the flash-based KV caching, and then propose a novel slab popularity-based storage management scheme-SPOPB, to extend SSD lifetime and improve performance. Our scheme identifies hot items using a self-adaptive threshold to reorganize and classify slabs with both the hotness and size of items. Then SPOPB filters and retains the popular slabs containing hot items in the write buffer with redesigned replacement policy to reduce the SSD write traffic. Our experiments show that our design can effectively reduce the SSD write traffic by 63.6%, the erase counts by 55.6%, and improve the performance by 42%.
C1 [Li, Zongwei; Feng, Dan; Hu, Yuchong; Lu, Mengting] Huazhong Univ Sci & Technol, Wuhan Natl Lab Optoelect, Wuhan 430074, Peoples R China.
   [Feng, Dan; Hu, Yuchong] Huazhong Univ Sci & Technol, Sch Comp Sci & Technol, Wuhan, Peoples R China.
C3 Huazhong University of Science & Technology; Huazhong University of
   Science & Technology
RP Feng, D (corresponding author), Huazhong Univ Sci & Technol, Wuhan Natl Lab Optoelect, Wuhan 430074, Peoples R China.
EM dfeng@hust.edu.cn
OI Li, Zongwei/0000-0002-6926-3859
FU National Natural Science Foundation of China [61821003]
FX This work was supported by the National Natural Science Foundation of
   China No. 61821003.
CR Andersen DG, 2010, IEEE MICRO, V30, P52, DOI 10.1109/MM.2010.71
   Anderson, 1997, P 16 ACM S OP SYST P
   Atikoglu Berk, 2012, Performance Evaluation Review, V40, P53, DOI 10.1145/2318857.2254766
   Axboe Jens., 2007, blktrace user guide
   Bonwick, 1994, C P USENIX SUMM 1994
   Carra D, 2014, IEEE ICC, P1154, DOI 10.1109/ICC.2014.6883477
   Chan HHW, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P1007
   Chen Feng, 2011, P 9 USENIX C FIL STO
   Cheng W, 2020, SOFTWARE PRACT EXPER, V50, P1952, DOI 10.1002/spe.2875
   FACEBOOK, MCDIPPER KEY VAL CAC
   Hu Xiameng., 2015, USENIX ANN TECHNICAL, P57
   Hu Y, 2013, IEEE T COMPUT, V62, P1141, DOI 10.1109/TC.2012.60
   Jia YY, 2020, ARCH BUDO, V16, P1
   Kassa HT, 2021, PROCEEDINGS OF THE 2021 USENIX ANNUAL TECHNICAL CONFERENCE, P821
   Li Conglong., 2015, P 10 EUROPEAN C COMP, P1
   Lilly P., FACEBOOK DITCHES DRA
   Lu LY, 2017, ACM T STORAGE, V13, DOI 10.1145/3033273
   Mei F, 2019, IEEE T PARALL DISTR, V30, P400, DOI 10.1109/TPDS.2018.2864209
   MEMCACHED, MEMCACHED DISTRIBUTE
   Min C., 2012, P 10 USENIX C FIL ST, P1
   Nishtala R., 2013, Proceedings of the 10th USENIX Conference on Networked Systems Design and Implementation, NSDI '13, Berkeley, CA, USA, P385
   Pan C, 2019, PROCEEDINGS OF THE 2019 TENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '19), P193, DOI 10.1145/3357223.3362729
   ROSENBLUM M, 1992, ACM T COMPUT SYST, V10, P26, DOI 10.1145/146941.146943
   Shen ZY, 2017, PROCEEDINGS OF FAST '17: 15TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P391
   TWITTER, TWEMC
   TWITTER, FATC
   Wang KF, 2018, PROCEEDINGS OF THE 2018 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '18), P464, DOI 10.1145/3267809.3267847
   Wu XB, 2016, PROCEEDINGS OF THE ELEVENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS, (EUROSYS 2016), DOI 10.1145/2901318.2901332
   Xiangyong Ouyang, 2012, 2012 41st International Conference on Parallel Processing (ICPP 2012), P470, DOI 10.1109/ICPP.2012.54
   Xu YH, 2014, IEEE INTERNET COMPUT, V18, P41, DOI 10.1109/MIC.2013.80
   Yong-Xiao Chen, 2015, 2015 IEEE 33rd VLSI Test Symposium (VTS). Proceedings, P1, DOI 10.1109/VTS.2015.7116247
   Zhang T, 2020, PROCEEDINGS OF THE 18TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P225
NR 32
TC 1
Z9 1
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 353
EP 373
DI 10.1002/spe.3050
EA NOV 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000720817400001
DA 2024-07-18
ER

PT J
AU Tomei, M
   Baraldi, L
   Fiameni, G
   Bronzin, S
   Cucchiara, R
AF Tomei, Matteo
   Baraldi, Lorenzo
   Fiameni, Giuseppe
   Bronzin, Simone
   Cucchiara, Rita
TI A computational approach for progressive architecture shrinkage in
   action recognition
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architectural optimization; distributed training; video understanding
AB Efficiency plays a key role in video understanding modeling, and developing more efficient spatiotemporal deep networks is a key ingredient for enabling their usage in production scenarios. In this work, we propose a methodology for reducing the computational complexity of a video understanding backbone while limiting the drop in accuracy caused by architectural changes. Our approach, named, Progressive Architecture Shrinkage, applies a sequence of reduction operators to the hyperparameters of a network to reduce its computational footprint. The choice of the sequence of operations is automatically optimized in a coordinate-descent schema, and the approach transfers knowledge from both the initial network and previous stages of the shrinking process by employing a Knowledge Distillation and an adaptive fine-tuning strategy. As each iteration of the shrinking algorithm requires to train a large-scale video understanding network, we perform experiments on MARCONI 100-a supercomputer equipped with an IBM Power9 architecture and Volta NVIDIA GPUs. Experimental evaluations are conducted using two backbones and three different action recognition benchmarks. We show that, through our approach, high accuracy levels can be maintained while reducing the number of multiply-adds operations by four times with respect to the original architectures. Code will be made available.
C1 [Tomei, Matteo; Baraldi, Lorenzo; Cucchiara, Rita] Univ Modena & Reggio Emilia, Modena, Italy.
   [Fiameni, Giuseppe] NVIDIA AI Technol Ctr, Bologna, Italy.
   [Bronzin, Simone] Metaliquid Srl, Milan, Italy.
C3 Universita di Modena e Reggio Emilia
RP Tomei, M (corresponding author), Univ Modena & Reggio Emilia, Modena, Italy.
EM matteo.tomei@unimore.it
RI Cucchiara, Rita/L-3006-2015
OI Tomei, Matteo/0000-0002-1385-924X; Baraldi, Lorenzo/0000-0001-5125-4957
CR Bhardwaj S, 2019, PROC CVPR IEEE, P354, DOI 10.1109/CVPR.2019.00044
   BILEN H, 2016, PROC CVPR IEEE, P3034, DOI [10.1109/CVPR.2016.331, DOI 10.1109/CVPR.2016.331]
   Carreira J, 2018, LECT NOTES COMPUT SC, V11208, P680, DOI 10.1007/978-3-030-01225-0_40
   Carreira J, 2017, PROC CVPR IEEE, P4724, DOI 10.1109/CVPR.2017.502
   Chen YP, 2018, LECT NOTES COMPUT SC, V11205, P364, DOI 10.1007/978-3-030-01246-5_22
   Chen YP, 2019, IEEE I CONF COMP VIS, P3434, DOI 10.1109/ICCV.2019.00353
   Dean J., 2015, NIPS DEEP LEARNING R
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Diba A, 2018, LECT NOTES COMPUT SC, V11208, P299, DOI 10.1007/978-3-030-01225-0_18
   Tran D, 2015, IEEE I CONF COMP VIS, P4489, DOI 10.1109/ICCV.2015.510
   Feichtenhofer C, 2016, ADV NEUR IN, V29
   Feichtenhofer C, 2020, PROC CVPR IEEE, P200, DOI 10.1109/CVPR42600.2020.00028
   Feichtenhofer C, 2019, IEEE I CONF COMP VIS, P6201, DOI 10.1109/ICCV.2019.00630
   Feichtenhofer C, 2016, PROC CVPR IEEE, P1933, DOI 10.1109/CVPR.2016.213
   Garcia NC, 2018, LECT NOTES COMPUT SC, V11212, P106, DOI 10.1007/978-3-030-01237-3_7
   Garcia Nuno C, 2019, ARXIV191210982
   Guedria S, 2020, SOFTWARE PRACT EXPER, V50, P1966, DOI 10.1002/spe.2878
   Hara K, 2018, PROC CVPR IEEE, P6546, DOI 10.1109/CVPR.2018.00685
   He K., 2016, PROC CVPR IEEE, P770, DOI [10.1109/CVPR.2016.90, DOI 10.1109/CVPR.2016.90]
   Heo B, 2019, IEEE I CONF COMP VIS, P1921, DOI 10.1109/ICCV.2019.00201
   HORN BKP, 1981, ARTIF INTELL, V17, P185, DOI 10.1016/0004-3702(81)90024-2
   Hussein N, 2019, PROC CVPR IEEE, P254, DOI 10.1109/CVPR.2019.00034
   Kay W., ARXIV PREPRINT ARXIV
   Kim K., 2020, ARXIV PREPRINT ARXIV
   Köpüklü O, 2019, IEEE INT CONF COMP V, P1910, DOI 10.1109/ICCVW.2019.00240
   Kuehne H, 2011, IEEE I CONF COMP VIS, P2556, DOI 10.1109/ICCV.2011.6126543
   Li C, 2019, PROC CVPR IEEE, P7864, DOI 10.1109/CVPR.2019.00806
   Li X., 2020, P EUR C COMP VIS VIR
   Lin J, 2019, IEEE I CONF COMP VIS, P7082, DOI 10.1109/ICCV.2019.00718
   Luo CX, 2019, IEEE I CONF COMP VIS, P5511, DOI 10.1109/ICCV.2019.00561
   Luo ZY, 2018, IEEE ICC
   Meng Y., 2020, P EUR C COMP VIS VIR
   Mirzadeh SI, 2020, AAAI CONF ARTIF INTE, V34, P5191
   Paszke A, 2019, ADV NEUR IN, V32
   Qiu ZF, 2017, IEEE I CONF COMP VIS, P5534, DOI 10.1109/ICCV.2017.590
   Sankar H, 2020, SOFTWARE PRACT EXPER, V50, P645, DOI 10.1002/spe.2687
   Simonyan K, 2014, ADV NEUR IN, V27
   Soomro Khurram, 2012, UCF101 DATASET 101 H
   Thoker FM., 2019, P INT C IM PROC TAIP
   Tran D, 2019, IEEE I CONF COMP VIS, P5551, DOI 10.1109/ICCV.2019.00565
   Tran D, 2018, PROC CVPR IEEE, P6450, DOI 10.1109/CVPR.2018.00675
   Varol G, 2018, IEEE T PATTERN ANAL, V40, P1510, DOI 10.1109/TPAMI.2017.2712608
   Wang LM, 2016, LECT NOTES COMPUT SC, V9912, P20, DOI 10.1007/978-3-319-46484-8_2
   Wang SL, 2018, PROC CVPR IEEE, P2589, DOI 10.1109/CVPR.2018.00274
   Wang X., 2020, P EUR C COMP VIS VIR
   Wang Z., 2020, ARXIV200712061
   Wright SJ, 2015, MATH PROGRAM, V151, P3, DOI 10.1007/s10107-015-0892-3
   Xiao L, 2021, SOFTWARE PRACT EXPER, V51, P2185, DOI 10.1002/spe.2958
   Xie, 2018, P EUR C COMP VIS MUN
   Yoon, 2020, ARXIV PREPRINT ARXIV
   Yuan L, 2020, PROC CVPR IEEE, P3902, DOI 10.1109/CVPR42600.2020.00396
   Yue K., 2020, EUR C COMP VIS ECCV
   Zolfaghari M, 2018, LECT NOTES COMPUT SC, V11206, P713, DOI 10.1007/978-3-030-01216-8_43
NR 53
TC 1
Z9 1
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 537
EP 554
DI 10.1002/spe.3035
EA SEP 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000701315500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zolfaghari, B
   Parizi, RM
   Srivastava, G
   Hailemariam, Y
AF Zolfaghari, Behrouz
   Parizi, Reza M.
   Srivastava, Gautam
   Hailemariam, Yoseph
TI Root causing, detecting, and fixing flaky tests: State of the art and
   future roadmap
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE detection; flaky testing; software; tools
ID FORMAL MODEL; SOFTWARE; SMELLS
AB A flaky test is a test that may lead to different results in different runs on a single code under test without any change in the test code. Test flakiness is a noxious phenomenon that slows down software deployment, and increases the expenditures in a broad spectrum of platforms such as software-defined networks and Internet of Things environments. Industrial institutes and labs have conducted a whole lot of research projects aiming at tackling this problem. Although this issue has been receiving more attention from academia in recent years, the academic research community is still behind the industry in this area. A systematic review and trend analysis on the existing approaches for detecting and root causing flaky tests can pave the way for future research on this topic. This can help academia keep pace with industrial advancements and even lead the research in this field. This article first presents a comprehensive review of recent achievements of the industry as well as academia regarding the detection and mitigation of flaky tests. In the next step, recent trends in this line of research are analyzed and a roadmap is established for future research.
C1 [Zolfaghari, Behrouz] Indian Inst Technol Guwahati, Comp Sci & Engn Dept, Gauhati, India.
   [Zolfaghari, Behrouz] Univ Guelph, Sch Comp Sci, Cyber Sci Lab, Guelph, ON, Canada.
   [Parizi, Reza M.; Hailemariam, Yoseph] Kennesaw State Univ, Coll Comp & Software Engn, Marietta, GA USA.
   [Srivastava, Gautam] Brandon Univ, Dept Math & Comp Sci, Brandon, MB, Canada.
   [Srivastava, Gautam] China Med Univ, Res Ctr Interneural Comp, Taichung, Taiwan.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Guwahati; University of Guelph; University System of
   Georgia; Kennesaw State University; Brandon University; China Medical
   University Taiwan
RP Srivastava, G (corresponding author), Brandon Univ, Dept Math & Comp Sci, Brandon, MB, Canada.
EM srivastavag@brandonu.ca
RI Srivastava, Gautam/N-5668-2019; Parizi, Reza/AAF-3813-2019; Zolfaghari,
   Behrouz/AAU-7919-2020
OI Srivastava, Gautam/0000-0001-9851-4103; Zolfaghari,
   Behrouz/0000-0001-6691-0988; M. Parizi, Reza/0000-0002-0049-4296
CR [Anonymous], 2020, P291193DIS ISOIEC TR
   [Anonymous], 2020, P291192DIS ISOIEC TR
   [Anonymous], 2020, P291191CD ISOIEC TR
   [Anonymous], 2014, P 22 ACM SIGSOFT INT
   [Anonymous], 2020, P291194DIS ISOIEC TR
   [Anonymous], 2019, FACEBOOK TESTING VER
   Bach T, 2017, P 2017 IEEE INT C SO
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Buzhinsky I, 2015, P 2015 IEEE TRUSTC B
   Cangussu JW, 2002, IEEE T SOFTWARE ENG, V28, P782, DOI 10.1109/TSE.2002.1027800
   CREMERS AB, 1978, IEEE T SOFTWARE ENG, V4, P426, DOI 10.1109/TSE.1978.233862
   Das S, 2020, IEEE T VLSI SYST, V28, P1016, DOI 10.1109/TVLSI.2019.2959618
   Dong Z, 2020, ARXIV200510762V2CSSE
   Durelli VHS, 2019, IEEE T RELIAB, V68, P1189, DOI 10.1109/TR.2019.2892517
   Dutta S, 2020, DETECTING FLAKY TEST
   Eck M, 2019, P 2019 27 ACM JOINT
   Fan Z, 2019, P 2019 IEEE ACM 41 I
   Gambi A, 2018, PRACTICAL TEST DEPEN
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Grossmann J, 2020, IEEE SOFTWARE, V37, P40, DOI 10.1109/MS.2019.2915297
   Gulzar MA, 2019, PERCEPTION PRACTICES
   King TM, 2018, 2018 IEEE INT C SOFT
   Labuschagne A, 2017, P 2017 11 JOINT M FD
   Lam W, 2019, P 2019 12 IEEE C SOF
   Lam W, 2020, P ACM IEEE 42 INT C
   Lam W, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P101, DOI 10.1145/3293882.3330570
   Landsberg D, 2018, ARXIV181002659CSSE
   Leong C, 2019, ASSESSING TRANSITION
   Machalica M, 2019, 019 IEEE ACM 41 INT
   Mascheroni MA, 2018, J COMPUT SCI TECHNOL, V18, P1
   Memon AM, 2013, P 28 ACM SIGSOFT INT
   Micco John, 2017, The State of Continuous Integration Testing @Google
   Palomba F, 2019, EMPIR SOFTW ENG, V24, P2907, DOI 10.1007/s10664-019-09683-z
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Paydar Samad, 2019, Fundamentals of Software Engineering. 8th International Conference, FSEN 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 11761), P111, DOI 10.1007/978-3-030-31517-7_8
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pinto G, 2020, IEEE WORK CONF MIN S, P492, DOI 10.1145/3379597.3387482
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Presler-Marshall K, 2019, WAIT WAIT NO TELL ME
   Rahman MT, 2018, IMPACT FAILING FLAKY
   Shameem M, 2020, IET SOFTW, V14, P389, DOI 10.1049/iet-sen.2019.0196
   Shi A, 2016, DETECTING ASSUMPTION
   Shi A, 2019, P 2019 IEEE 30 INT S
   Shi A, 2019, P 2019 27 ACM JOINT
   Shi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P112, DOI 10.1145/3293882.3330568
   Sjobom A, 2019, THESIS
   Thorve S, 2018, P 2018 IEEE INT C SO
   Vahabzadeh A, 2015, P 2015 IEEE INT C SO
   Vancsics B, 2020, P 2020 IEEE WORKSH V
   Wang H, 2017, P 2017 4 INT C INF S
   Zhang S, 2014, EMPIRICALLY REVISITI
NR 53
TC 11
Z9 11
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 851
EP 867
DI 10.1002/spe.2929
EA NOV 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000584400400001
DA 2024-07-18
ER

PT J
AU Sandhu, AK
   Batth, RS
AF Sandhu, Amandeep Kaur
   Batth, Ranbir Singh
TI Software reuse analytics using integrated random forest and gradient
   boosting machine learning algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE AdaBoostM1; confusion matrix; DecisionStump; gradient boosting machine;
   J48; JRip; LMT; LogitBoost; one R; part; random forest; software
   metrics; software reuse
ID DATA MINING TECHNIQUES; MANAGEMENT
AB The term Cleaner Production (CP) for Production Companies is contemplated as influential to get sustainable production. CP mainly deals with three R's that is, reuse, reduce, and recycle. For software enterprise, the software reuse plays a pivotal role. Software reuse is a process of producing new products or software from the existing software by updating it. To extract useful information from the existing software data mining comes into light. The algorithms used for software reuse face issues related to maintenance cost, accuracy, and performance. Also, the currently used algorithm does not give accurate results on whether the component of software can be reused. Machine Learning gives the best results to predicate if the given software component is reusable or not. This paper introduces an integrated Random Forest and Gradient Boosting Machine Learning Algorithm (RFGBM) which test the reusability of the given software code considering the object-oriented parameters such as cohesion, coupling, cyclomatic complexity, bugs, number of children, and depth inheritance tree. Further, the proposed algorithm is compared with J48, AdaBoostM1, LogitBoost, Part, One R, LMT, JRip, DecisionStump algorithms. Performance metrices like accuracy, error rate, Relative Absolute Error, and Mean Absolute Error are improved using RFGBM. This algorithm also utilizes data preprocessing with the help of an unsupervised filter to remove the missing value for efficiency improvement. Proposed algorithm outperforms existing in term of performance parameters.
C1 [Sandhu, Amandeep Kaur; Batth, Ranbir Singh] Lovely Profess Univ, Sch Comp Sci & Engn, Phagwara, Punjab, India.
C3 Lovely Professional University
RP Batth, RS (corresponding author), Lovely Profess Univ, Sch Comp Sci & Engn, Phagwara, Punjab, India.
EM ranbir.21123@lpu.co.in
RI batth, Ranbir singh/AAD-4726-2019
OI batth, Ranbir singh/0000-0002-8655-7613
CR Cai X, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P372, DOI 10.1109/APSEC.2000.896722
   Cooper KML, 2009, WILEY ENCY COMPUTER, DOI [10.1002/9780470050118.ecse278, DOI 10.1002/9780470050118.ECSE278]
   Di Stefano JS, 2002, P 14 IEEE INT C TOOL
   Dwivedi AK, 2016, PROCEEDINGS OF THE 2016 IEEE REGION 10 CONFERENCE (TENCON), P222, DOI 10.1109/TENCON.2016.7847994
   Gupta DL, 2016, INT J CURR ENG TECHN, V6, P1728
   Iqbal MS, 2019, SN APPL SCI, V1, DOI 10.1007/s42452-019-1270-1
   Iqbal MS, 2019, J OPT-INDIA, V48, P113, DOI 10.1007/s12596-018-0508-4
   Kaur A., 2018, Int. J. Appl. Eng. Res., V13, P10005
   Kim Y, 1991, IS9 CTR DIS EC RES S
   Landwehr N, 2003, THESIS U FREIBURG
   Silva DAL, 2013, J CLEAN PROD, V47, P174, DOI 10.1016/j.jclepro.2012.10.026
   Murillo-Luna JL, 2011, J CLEAN PROD, V19, P1417, DOI 10.1016/j.jclepro.2011.05.005
   Ngai EWT, 2009, EXPERT SYST APPL, V36, P2592, DOI 10.1016/j.eswa.2008.02.021
   Padhy N, 2018, COMPUT ELECTR ENG, V69, P653, DOI 10.1016/j.compeleceng.2017.11.022
   Prakash BVA, 2012, PROC TECH, V4, P384, DOI 10.1016/j.protcy.2012.05.059
   Rabl T, 2012, PROC VLDB ENDOW, V5, P1724, DOI 10.14778/2367502.2367512
   Rajakumari K.E., 2019, P 2019 3 IEEE INT C, P1, DOI [10.1109/ICECCT.2019.8869324, DOI 10.1109/ICECCT.2019.8869324]
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Rodriguez G, 2016, INTED PROC, P4335
   Sadiq, 2018, IRAN J COMPUTER SCI, V1, P31, DOI [10.1007/s42044-017-0004-z, DOI 10.1007/S42044-017-0004-Z]
   Shri Anju, 2010, INT J COMPUT INF ENG, V43, P853, DOI DOI 10.5281/ZENODO.1074887
   Sidhu Brahmaleen Kaur, 2022, International Journal of Computers and Applications, V44, P166, DOI 10.1080/1206212X.2020.1711616
   Sidiq S.J., 2018, INT J DATA MIN EMERG, V8, P115
   Sidiq SJ, 2017, INT J ADV RES COMPUT, V8, P311
   Varnell-Sarjeant J, 2015, ADV COMPUT, V97, P1, DOI 10.1016/bs.adcom.2014.10.002
   Vinodh S, 2011, INT J PROD RES, V49, P6651, DOI 10.1080/00207543.2010.535044
   Wang HW, 2010, INT J PROD RES, V48, P2513, DOI 10.1080/00207540903564918
   Wangoo D. P., 2018, 2018 4 INT C COMP CO, P1
   [魏斐翡 Wei Feifei], 2013, [计算机工程与科学, Computer Engineering and Science], V35, P65
   Yue RR, 2018, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2018.00021
   Zanoni M, 2015, J SYST SOFTWARE, V103, P102, DOI 10.1016/j.jss.2015.01.037
   Zhang YF, 2017, J CLEAN PROD, V142, P626, DOI 10.1016/j.jclepro.2016.07.123
NR 32
TC 22
Z9 22
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2021
VL 51
IS 4
SI SI
BP 735
EP 747
DI 10.1002/spe.2921
EA OCT 2020
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR8DY
UT WOS:000583323900001
DA 2024-07-18
ER

PT J
AU Guo, Y
   Wang, SG
   Zhou, A
   Xu, JL
   Yuan, J
   Hsu, CH
AF Guo, Yan
   Wang, Shangguang
   Zhou, Ao
   Xu, Jinliang
   Yuan, Jie
   Hsu, Ching-Hsien
TI User allocation-aware edge cloud placement in mobile edge computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE edge cloud placement; mixed-integer quadratic programming; mobile edge
   computing; user allocation; workload balance
ID ALGORITHMS
AB Mobile edge computing is emerging as a novel ubiquitous computing platform to overcome the limit resources of mobile devices and bandwidth bottleneck of the core network in mobile cloud computing. In mobile edge computing, it is a significant issue for cost reduction and QoS improvement to place edge clouds at the edge network as a small data center to serve users. In this paper, we study the edge cloud placement problem, which is to place the edge clouds at the candidate locations and allocate the mobile users to the edge clouds. Specifically, we formulate it as a multiobjective optimization problem with objective to balance the workload between edge clouds and minimize the service communication delay of mobile users. To this end, we propose an approximate approach that adopted the K-means and mixed-integer quadratic programming. Furthermore, we conduct experiments based on Shanghai Telecom's base station data set and compare our approach with other representative approaches. The results show that our approach performs better to some extent in terms of workload balance and communication delay and validate the proposed approach.
C1 [Guo, Yan; Wang, Shangguang; Zhou, Ao; Xu, Jinliang; Yuan, Jie] Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, Beijing, Peoples R China.
   [Hsu, Ching-Hsien] Chung Hua Univ, Dept Comp Sci & Informat, Hsinchu, Taiwan.
C3 Beijing University of Posts & Telecommunications; Chung Hua University
RP Wang, SG (corresponding author), Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, Beijing, Peoples R China.
EM sgwang@bupt.edu.cn
RI Hsu, Ching-Hsien/AAE-6917-2020
OI Wang, Shangguang/0000-0001-7245-1298
CR Ahmed A, 2016, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS AND CONTROL (ISCO'16)
   Ahmed E, 2015, SIMUL MODEL PRACT TH, V50, P42, DOI 10.1016/j.simpat.2014.07.001
   [Anonymous], 2012, Cuckoo: A computation offloading framework for smartphones, DOI DOI 10.1007/978-3-642-29336-84
   [Anonymous], ARXIV150700939
   [Anonymous], SPECIAL PUBLICATION
   Bliek C., 2014, P 26 RAMP S TOK JAP
   Charikar M, 2002, J COMPUT SYST SCI, V65, P129, DOI 10.1006/jcss.2002.1882
   Dohan D., 2015, K MEDIAN ALGORITHMS
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   Hassan Q.F., 2011, CrossTalk, P16
   Jia MK, 2017, IEEE T CLOUD COMPUT, V5, P725, DOI 10.1109/TCC.2015.2449834
   Kosta S, 2012, IEEE INFOCOM SER, P945, DOI 10.1109/INFCOM.2012.6195845
   Liu J, 2015, J NETW COMPUT APPL, V48, P99, DOI 10.1016/j.jnca.2014.09.009
   Qiao XQ, 2018, IEEE INTERNET COMPUT, V22, P46, DOI 10.1109/MIC.2018.043051464
   Qiu L, 2001, P IEEE 20 ANN JOINT
   Satyanarayanan M, 2015, IEEE PERVAS COMPUT, V14, P24, DOI 10.1109/MPRV.2015.32
   Sharma S, 2016, FUTURE GENER COMP SY, V59, P63, DOI 10.1016/j.future.2016.01.003
   Sharma S, 2018, CLEAN TECHNOL ENVIR, V20, P2157, DOI 10.1007/s10098-018-1498-2
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Xia Q, 2014, 38 ANN IEEE C LOC CO
   Xia Q, 2014, P 2014 IEEE ACM 7 IN
   Xiang HL, 2016, IEEE GLOB COMM CONF
   Xu ZC, 2016, IEEE T PARALL DISTR, V27, P2866, DOI 10.1109/TPDS.2015.2510638
   Yin H, 2013, IEEE T MULTIMEDIA, V15, P2114, DOI 10.1109/TMM.2013.2280557
   Zhang YQ, 2012, EVID-BASED COMPL ALT, V2012, DOI 10.1155/2012/931636
NR 25
TC 103
Z9 109
U1 9
U2 77
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 489
EP 502
DI 10.1002/spe.2685
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000526578200003
DA 2024-07-18
ER

PT J
AU Rui, LL
   Qin, YB
   Li, BY
   Wang, Y
   Huang, HQ
AF Rui, Lanlan
   Qin, Yabin
   Li, Biyao
   Wang, Ying
   Huang, Haoqiu
TI SEWMS: An edge-based smart wearable maintenance system in communication
   network
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE communication network; edge computing; information push; internet of
   things; maintenance; wearable
AB The development of the Internet of Things (IoT) and wearable technology provides an opportunity for the development of maintenance of communication. The use of wearable technology and instant messaging technology of IoT can improve the support capabilities and data interaction ability of on-site maintenance of the communication network. Existing communication maintenance systems lack real-time operation and maintenance of data interaction. In the field operation decision-making and execution process, there are problems of lack of field links and inconvenient information interaction. On-site maintenance mainly relies on maintenance personnel to actively search for information, and the retrieval results are lacking of personalization, which makes it difficult to meet the needs of on-site maintenance of the communication network. Edge computing and information push technology can solve these problems to some extent. In this paper, we focus on the current low level in information, complicated scenes, and various information of on-site maintenance and propose a dynamic context-aware information push algorithm. The simulation results demonstrate that the algorithm delivers good performance in terms of precision, recall, and F1. Besides, we present a smart wearable maintenance system, an edge computing-assisted IoT platform for the real-time guidance of technical experts and systems for on-site maintenance personnel, aiming to improve the efficiency and quality of on-site maintenance.
C1 [Rui, Lanlan; Qin, Yabin; Li, Biyao; Wang, Ying] Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, 10 Xitucheng Rd, Beijing 100876, Peoples R China.
   [Huang, Haoqiu] China Aerosp Sci, Ind Corp Ltd Network Informat Dept, Beijing, Peoples R China.
C3 Beijing University of Posts & Telecommunications
RP Qin, YB (corresponding author), Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, 10 Xitucheng Rd, Beijing 100876, Peoples R China.
EM qinyabin@bupt.edu.cn
RI Pan, Yue/KFS-4602-2024
FU National Key Research and Development Program of China [2016YFE0204500];
   Industrial Internet Innovation and Development Project 2018 of China
FX National Key Research and Development Program of China, Grant/Award
   Number: 2016YFE0204500; Industrial Internet Innovation and Development
   Project 2018 of China
CR Ahsan U, 2018, CAN J ELECT COMPUT E, V41, P17, DOI 10.1109/CJECE.2017.2776975
   Ai Y, 2018, DIGIT COMMUN NETW, V4, P77, DOI 10.1016/j.dcan.2017.07.001
   Alrowaily M., 2018, 2018 IEEE ACM S EDG
   Amanatullah Y, 2013, INT C ICT FOR SMART
   Bahrami M, 2016, 2016 INTERNATIONAL CONFERENCE ON COMPUTING, NETWORKING AND COMMUNICATIONS (ICNC)
   Chen R, 2017, IEEE ACCESS, V5, P23413, DOI 10.1109/ACCESS.2017.2761235
   Cordonnier Michel, 2017, CIRED - Open Access Proceedings Journal, V2017, P87, DOI 10.1049/oap-cired.2017.0413
   Dey S, 2016, 8 IND C HUM COMP INT
   Faping Z, 2016, IEEE INT C IND ENG E
   Fernandez-Anez V, 2018, CITIES, V78, P4, DOI 10.1016/j.cities.2017.12.004
   Fowley F, 2018, IEEE T CLOUD COMPUT, V6, P358, DOI 10.1109/TCC.2016.2537333
   Gu CC, 2015, RES ENG DES, V26, P309, DOI 10.1007/s00163-015-0199-7
   Han S, 2012, IEEE INT C PERV COMP
   He ZM, 2017, PROCEDIA COMPUT SCI, V107, P170, DOI 10.1016/j.procs.2017.03.074
   Kabalci Y, 2016, RENEW SUST ENERG REV, V57, P302, DOI 10.1016/j.rser.2015.12.114
   Michalakis K, 2018, IEEE CONSUM ELECTR M, V7, P64, DOI 10.1109/MCE.2018.2797638
   Ngoko Y, 2017, 2017 IEEE INT C EDG
   Nosair H, 2015, IEEE T SUSTAIN ENERG, V6, P1624, DOI 10.1109/TSTE.2015.2462318
   Perusquía-Hernández M, 2017, IEEE T AFFECT COMPUT, V8, P522, DOI 10.1109/TAFFC.2017.2755040
   Rahmani AM, 2018, FUTURE GENER COMP SY, V78, P641, DOI 10.1016/j.future.2017.02.014
   Rano D, 2016, 2016 TWENTY SECOND NATIONAL CONFERENCE ON COMMUNICATION (NCC)
   Raquibuzzaman M, 2016, INT C CONTR INSTR CO
   Singh S, 2016, INT C GREEN COMP INT
   Tsikoudis N., 2014, IEEE T EMERG TOP COM, V4, P142
   Yin HX, 2017, IEEE T MULTI-SCALE C, V3, P228, DOI 10.1109/TMSCS.2017.2710194
   Zega V, 2018, EUR J MECH A-SOLID, V70, P203, DOI 10.1016/j.euromechsol.2018.02.005
   Zhang H, 2014, P REL MAINT S
   Zhang J, 2007, C REC SYST MINN MN
   Ziegler S, 2016, 2015 IEEE 2 WORLD FO
NR 29
TC 0
Z9 0
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 611
EP 629
DI 10.1002/spe.2775
EA DEC 2019
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000503016800001
DA 2024-07-18
ER

PT J
AU Nabavi, SY
   Bushehrian, O
AF Nabavi, Seyyed Yahya
   Bushehrian, Omid
TI An adaptive plan-oriented and continuous software migration to cloud in
   dynamic enterprises
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud migration; finite state process; migration pattern
ID MODEL
AB Replacing existing software/hardware components with their equivalent cloud services is an important decision faced by IT managers in today's enterprises. A variety of possible migration targets and cloud services with too many configurations and cost models, disparate and changing strategic objectives of the enterprise management that triggers the migration process, and the complex structure of the legacy applications make software migration to the cloud a challenging issue. In contrast to the existing approaches that model the migration process as an optimization problem to find the optimal deployment of software components on cloud services without presenting a practical migration plan, in this paper, a plan-oriented migration approach is proposed by which the enterprise management is able to follow migration steps of a valid plan. All valid plans are modeled using a labeled transition system, and a recommender engine directs the management through the possible migration paths using predefined fitness functions. It was observed that, particularly in dynamic and changing conditions that a flexible migration plan is essential, the proposed plan-oriented method is very much effective in satisfying the enterprise strategic objectives. Evaluations have been performed using two quality indicators: total cost of ownership and scalability index.
C1 [Nabavi, Seyyed Yahya; Bushehrian, Omid] Shiraz Univ Technol, Dept Comp Engn & Informat Technol, Modarres Blvd, Shiraz 7155713876, Iran.
C3 Shiraz University of Technology
RP Nabavi, SY (corresponding author), Shiraz Univ Technol, Dept Comp Engn & Informat Technol, Modarres Blvd, Shiraz 7155713876, Iran.
EM y.nabavi@sutech.ac.ir
CR Andrikopoulos V, 2013, COMPUTING, V95, P493, DOI 10.1007/s00607-012-0248-2
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Bushehrian O., 2010, International Journal on Computer Science Engineering, P3120
   Bushehrian O, 2017, P 2017 INT S COMP SC, DOI [10.1109/CSICSSE.2017.8364657, DOI 10.1109/CSICSSE.2017.8364657]
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Chauhan M. A., 2011, P 2011 IEEE 4 INT C, P404, DOI DOI 10.1109/CLOUD.2011.46
   Church P, 2017, J CLOUD COMPUT-ADV S, V6, DOI 10.1186/s13677-017-0080-5
   Cunha M, 2011, P 2011 IEEE 3 INT C, DOI [10.1109/CloudCom.2011.115, DOI 10.1109/CLOUDCOM.2011.115]
   Fehling C, 2013, IEEE INT CONF SERV, P9, DOI 10.1109/SOCA.2013.41
   Fekete A, 2004, FSP LECT
   Frey S., 2011, International Journal on Advances in Software, V4, P342
   García-Galán J, 2016, FUTURE GENER COMP SY, V55, P200, DOI 10.1016/j.future.2015.03.006
   Ghanbari H, 2012, FUTURE GENER COMP SY, V28, P104, DOI 10.1016/j.future.2011.05.019
   Jamshidi P, 2017, SOFTWARE PRACT EXPER, V47, P1159, DOI 10.1002/spe.2442
   Jogalekar P, 2000, IEEE T PARALL DISTR, V11, P589, DOI 10.1109/71.862209
   Khajeh-Hosseini Ali, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P450, DOI 10.1109/CLOUD.2010.37
   Lee S, 2016, WIRELESS PERS COMMUN, V86, P57, DOI 10.1007/s11277-015-2976-z
   Leymann F, 2011, INT J COOP INF SYST, V20, P307, DOI 10.1142/S0218843011002250
   Mansouri Y, 2019, IEEE T CLOUD COMPUT, V7, P705, DOI 10.1109/TCC.2017.2659728
   Megahed A, 2019, FUTURE GENER COMP SY, V91, P86, DOI 10.1016/j.future.2018.08.005
   Mendonça NC, 2014, COMPUTER, V47, P62, DOI 10.1109/MC.2014.203
   Pahl Claus, 2013, Service-Oriented and Cloud Computing. Second European Conference (ESOCC 2013). Proceedings: LNCS 8135, P212, DOI 10.1007/978-3-642-40651-5_18
   Pandey S, 2010, INT CON ADV INFO NET, P400, DOI 10.1109/AINA.2010.31
   Shirvani MH, 2018, SOFTWARE PRACT EXPER, V48, P449, DOI 10.1002/spe.2528
   Tran V., 2011, Proceedings of the 2nd International Workshop on Software Engineering for Cloud Computing, P22, DOI [10.1145/1985500.1985505, DOI 10.1145/1985500.1985505]
   Vukovic M, 2016, P 2016 IEEE IFIP NET, DOI [10.1109/NOMS.2016.7502801, DOI 10.1109/NOMS.2016.7502801]
NR 26
TC 2
Z9 2
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2019
VL 49
IS 9
BP 1365
EP 1378
DI 10.1002/spe.2725
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IP8HI
UT WOS:000480287100003
DA 2024-07-18
ER

PT J
AU Leszczyna, R
   Wróbel, MR
AF Leszczyna, Rafal
   Wrobel, Michal R.
TI Threat intelligence platform for the energy sector
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE critical infrastructures; cybersecurity; information sharing; ISAC;
   power systems; situation awareness; testing; threat intelligence
ID COLLABORATIVE INTRUSION DETECTION; CYBER SECURITY; SITUATIONAL
   AWARENESS; ELECTRONIC MAIL; INFORMATION; CHALLENGES; EXCHANGE;
   ARCHITECTURE; MANAGEMENT; FRAMEWORK
AB In recent years, critical infrastructures and power systems in particular have been subjected to sophisticated cyberthreats, including targeted attacks and advanced persistent threats. A promising response to this challenging situation is building up enhanced threat intelligence (TI) that interlinks information sharing and fine-grained situation awareness. In this paper, a framework that integrates all levels of TI, ie, strategic, tactical, operational, and technical, is presented. The platform implements the centralized model of information exchange with peer-to-peer interactions between partners as an option. Several supportive solutions were introduced, including anonymity mechanisms or data processing and correlation algorithms. A data model that enables communication of cyberincident information, both in natural language and machine-readable formats, was defined. Similarly, security requirements for critical components were devised. A pilot implementation of the platform was developed and deployed in the operational environment, which enabled practical evaluation of the design. Also, the security of the anonymity architecture was analyzed.
C1 [Leszczyna, Rafal] Gdansk Univ Technol, Fac Management & Econ, Gdansk, Poland.
   [Wrobel, Michal R.] Gdansk Univ Technol, Fac Elect Telecommun & Informat, Gdansk, Poland.
C3 Fahrenheit Universities; Gdansk University of Technology; Fahrenheit
   Universities; Gdansk University of Technology
RP Leszczyna, R (corresponding author), Gdansk Univ Technol, Narutowicza 11-12, PL-80952 Gdansk, Poland.
EM rle@zie.pg.gda.pl
RI Wróbel, Michał/AAM-6144-2020; Leszczyna, Rafal/D-9476-2013
OI Wróbel, Michał/0000-0002-1117-903X; Leszczyna, Rafal/0000-0001-7293-2956
FU European Commission, Directorate-General Home Affairs
   [HOME/2012/CIPS/AG/4000003772]; DS Program of Faculty of Management and
   Economics of Gdansk University of Technology; DS Program of Faculty of
   Electronics, Telecommunications and Informatics of Gdansk University of
   Technology
FX European Commission, Directorate-General Home Affairs, Grant/Award
   Number: HOME/2012/CIPS/AG/4000003772; DS Programs of Faculty of
   Management and Economics and Faculty of Electronics, Telecommunications
   and Informatics of Gdansk University of Technology
CR Abdellatif T, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.4907
   Adewumi A, 2019, SOFTWARE PRACT EXPER, V49, P780, DOI 10.1002/spe.2682
   Aguirre I, 2012, IEEE SECUR PRIV, V10, P55, DOI 10.1109/MSP.2011.153
   Ahrend JM, 2016, 2016 INTERNATIONAL CONFERENCE ON CYBER SITUATIONAL AWARENESS, DATA ANALYTICS AND ASSESSMENT (CYBERSA)
   Aktug I, 2008, SCI COMPUT PROGRAM, V74, P2, DOI 10.1016/j.scico.2008.09.004
   Alcaraz C, 2013, COMPUTER, V46, P30, DOI 10.1109/MC.2013.72
   AlienVault, 2019, ALIENVAULT OP THREAT
   AlienVault, 2019, OSSIM OP SOURC SIEM
   [Anonymous], 2019, MISP OPEN SOURCE THR
   [Anonymous], 2015, BERKELEY TECHNOLOGY
   [Anonymous], 2000, SITUATION AWARENESS, DOI DOI 10.1201/B12461
   [Anonymous], 2007, 5070 RFC
   [Anonymous], 1998, ACM Trans Inform Syst Secur TISSEC, DOI DOI 10.1145/290163.290168
   [Anonymous], 2002, FIPA ABSTR ARCH SPEC
   [Anonymous], 2016, REP CYB SEC INF SHAR
   [Anonymous], 2016, BRO NETWORK SECURITY
   [Anonymous], 2011, TECHNICAL REPORT
   [Anonymous], 2015, TECHNICAL REPORT
   [Anonymous], 2016, P 2016 ACM WORKSH IN
   [Anonymous], 2013, PRESIDENTIAL POLICY
   [Anonymous], 2019, ARGUS ALL SEEING SYS
   [Anonymous], 2018, ENISA Threat Landscape Report 2017 15 Top Cyber-Threats and Trends
   Anstee D, 2017, COMPUT FRAUD SECUR, P14, DOI 10.1016/S1361-3723(17)30099-4
   Barford P, 2010, ADV INFORM SECUR, V46, P3, DOI 10.1007/978-1-4419-0140-8_1
   Barth R, 2012, P 2012 S EM APPL MS
   Bishop M, 2010, P 2010 NEW SEC PAR W
   Boden A, 2012, J SOFTW-EVOL PROC, V24, P139, DOI 10.1002/smr.473
   Bolzoni D, 2016, ACSIS-ANN COMPUT SCI, V8, P743, DOI 10.15439/2016F50
   Bourgue R., 2013, TECHNICAL REPORT
   Brucker AD, 2017, SOFTWARE PRACT EXPER, V47, P1923, DOI 10.1002/spe.2513
   Brunner Martin, 2011, Critical Information Infrastructures Security. 5th International Workshop, CRITIS 2010. Revised Papers, P81, DOI 10.1007/978-3-642-21694-7_7
   Cárdenas AA, 2012, HANDBOOK ON SECURING CYBER-PHYSICAL CRITICAL INFRASTRUCTURE: FOUNDATIONS AND CHALLENGES, P637, DOI 10.1016/B978-0-12-415815-3.00025-X
   Carter J, 2002, COMPUT INTELL-US, V18, P515, DOI 10.1111/1467-8640.t01-1-00201
   CHAUM DL, 1981, COMMUN ACM, V24, P84, DOI 10.1145/358549.358563
   Chen JG, 2018, FUTURE GENER COMP SY, V79, P243, DOI 10.1016/j.future.2017.11.005
   Chismon D., 2015, THREAT INTELLIGENCE
   Choo KKR, 2011, COMPUT SECUR, V30, P719, DOI 10.1016/j.cose.2011.08.004
   Cisco, SNORT NETW INTR DET
   Connolly J, 2012, TECHNICAL REPORT
   Crawford R, 2007, P 2006 WORKSH NEW SE
   Cruz D., 2006, Software Process Improvement and Practice, V11, P107, DOI 10.1002/spip.257
   Dara S, 2018, J INF SECUR APPL, V38, P28, DOI 10.1016/j.jisa.2017.11.006
   de Fuentes JM, 2017, COMPUT SECUR, V69, P127, DOI 10.1016/j.cose.2016.12.011
   Debar H., 2007, INTRUSION DETECTION
   Dehmer M, 2015, EURO J DECIS PROCESS, V3, P305, DOI 10.1007/s40070-015-0046-0
   Dighe N., 2009, INT J PERFORMABILITY, V5, P31
   Dolev S., 2000, ACM Transactions on Information and Systems Security, V3, P63, DOI 10.1145/354876.354877
   Edgar D, 2004, TECHNICAL REPORT
   Elmellas J, 2016, COMPUT FRAUD SECUR, P5, DOI 10.1016/S1361-3723(16)30051-3
   European Commission, 2004, COM2004 702 FINAL
   European Commission, 2006, COM 2006 786
   Falliere N, 2011, TECHNICAL REPORT
   Franke U, 2014, COMPUT SECUR, V46, P18, DOI 10.1016/j.cose.2014.06.008
   Fransen F, 2015, ELEKTROTECH INFORMAT, V132, P106, DOI 10.1007/s00502-015-0289-2
   Gal-Or E, 2005, INFORM SYST RES, V16, P186, DOI 10.1287/isre.1050.0053
   GOLDBERG I, 1998, 1 MONDAY, V3
   Gordon L. A., 2003, Journal of Accounting and Public Policy, V22, P461, DOI DOI 10.1016/J.JACCPUBPOL.2003.09.001
   Gordon LA, 2015, J ACCOUNT PUBLIC POL, V34, P509, DOI 10.1016/j.jaccpubpol.2015.05.001
   GRAY RS, 2000, TR2000365 DARTM COLL
   Hausken K., 2007, Journal of Accounting and Public Policy, V26, P639, DOI [10.1016/j.jaccpubpol.2007.10.001, DOI 10.1016/J.JACCPUBPOL.2007.10.001]
   Hausken Kjell, 2015, JISTEM J.Inf.Syst. Technol. Manag., V12, P245
   He ML, 2018, RISK ANAL, V38, P215, DOI 10.1111/risa.12878
   Hernandez-Ardieta JL, 2013, INT CONF CYBER CONFL
   Hilverda F, 2018, RISK ANAL, V38, P1904, DOI 10.1111/risa.12980
   Hughes LP, 2009, J COASTAL RES, P1
   ISO, 2009, 158362009 ISO
   Jadhav AS, 2011, J SYST SOFTWARE, V84, P1394, DOI 10.1016/j.jss.2011.03.034
   Jain A, 2011, PROD OPER MANAG, V20, P235, DOI 10.1111/j.1937-5956.2010.01161.x
   Jajodia S, 2011, P MIL COMM C MILCOM, DOI 10.1109/MILCOM.2011.6127490
   Jajodia S, 2010, ADV INFORM SECUR, V46, P139, DOI 10.1007/978-1-4419-0140-8_7
   Jang-Jaccard J, 2014, J COMPUT SYST SCI, V80, P973, DOI 10.1016/j.jcss.2014.02.005
   Kamhoua C, 2015, 2015 IEEE 2ND INTERNATIONAL CONFERENCE ON CYBER SECURITY AND CLOUD COMPUTING (CSCLOUD), P382, DOI 10.1109/CSCloud.2015.80
   Kaufmann H, 2015, ELEKTROTECH INFORMAT, V132, P117, DOI 10.1007/s00502-015-0286-5
   Kesdogan D, 1998, LECT NOTES COMPUTER, V1525
   KIRBY AJ, 1988, RAND J ECON, V19, P138, DOI 10.2307/2555403
   Klump R, 2010, IFIP ADV INF COMM TE, V342, P113
   Korstanje M.E., 2016, THREAT MITIGATION DE
   Kshetri N, 2015, COMPUTER, V48, P64, DOI 10.1109/MC.2015.188
   Kulikova O, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON CYBER SECURITY (CYBERSECURITY), P103, DOI 10.1109/CyberSecurity.2012.20
   Kumar G, 2012, TECHNICAL REPORT
   Kumar V, 2012, SOFTWARE PRACT EXPER, V42, P1531, DOI 10.1002/spe.1153
   Kushner D, 2013, IEEE SPECTRUM, V50, P48, DOI 10.1109/MSPEC.2013.6471059
   Leszczyna R, 2014, 9 INT C INT TECHN SE
   Leszczyna R, 2005, P 4 INT JOINT C AUT, DOI 10.1145/1082473.1082709
   Leszczyna R, 2014, INT J INF SECUR RES, V4, P479
   Leszczyna R, 2016, P 2016 10 INT C COMP
   Leszczyna R, 2006, 15 EICAR ANN C HAMB
   Leszczyna R, 2016, ACTA ENERGETICA, V3, P81, DOI [10.12736/issn.2300-3022.2016308, DOI 10.12736/ISSN.2300-3022.2016308]
   Leszczyna R, 2007, LECT NOTES ARTIF INT, V4659, P93
   Leszczyna R, 2018, INT J CRIT INFR PROT, V22, P70, DOI 10.1016/j.ijcip.2018.05.006
   Leszczyna R, 2015, 2015 IEEE WORLD CONFERENCE ON FACTORY COMMUNICATION SYSTEMS (WFCS)
   Leszczyna R, 2015, 2015 MODERN ELECTRIC POWER SYSTEMS (MEPS)
   Lindell Y, 2006, TECHNICAL REPORT
   Line MB, 2016, INT J CRIT INFR PROT, V12, P12, DOI [10.1016/j.ijcip.2015.17.003, 10.1016/j.ijcip.2015.12.003]
   Liu DP, 2011, DECIS SUPPORT SYST, V52, P95, DOI 10.1016/j.dss.2011.05.007
   Liu P, 2005, J AM SOC INF SCI TEC, V56, P283, DOI 10.1002/asi.20117
   Liu XX, 2015, IEEE T SMART GRID, V6, P2435, DOI 10.1109/TSG.2015.2418280
   Locasto ME, 2005, P 6 ANN IEEE SYST MA
   Marback A, 2013, SOFTWARE PRACT EXPER, V43, P241, DOI 10.1002/spe.2111
   Mazieres D., 1998, P 5 ACM C COMP COMM
   Meng GZ, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2785733
   MITRE, 2019, CVE COMM VULN EXP CV
   Moriarty KM, 2011, IEEE SECUR PRIV, V9, P71, DOI 10.1109/MSP.2011.164
   Murdoch S., 2015, P 2 ACM WORKSH INF S
   Mutemwa MM, 2017, 2017 CONFERENCE ON INFORMATION COMMUNICATION TECHNOLOGY AND SOCIETY (ICTAS)
   Nikoofal ME, 2015, EUR J OPER RES, V246, P320, DOI 10.1016/j.ejor.2015.04.043
   Odell J, 2000, TECHNICAL REPORT
   Open Information Security Foundation (OISF), 2019, SUR OP SOURC IDS IPS
   Patel A, 2017, COMPUT SECUR, V64, P92, DOI 10.1016/j.cose.2016.07.002
   Peretti K, 2014, CBMI, P1
   Pfitzmann A., 2010, A terminology for talking about privacy by data minimization: Anonymity, Unlinkability, Undetectability, Unobservability, Pseudonymity, and Identity Management
   Qamar S, 2017, COMPUT SECUR, V67, P35, DOI 10.1016/j.cose.2017.02.005
   Rafaeli S, 2003, INFORM SYST J, V13, P191, DOI 10.1046/j.1365-2575.2003.00149.x
   Raymond J.-F., 2001, Designing Privacy Enhancing Technologies. International Workshop on Design Issues in Anonymity and Unobservability. Proceedings (Lecture Notes in Computer Science Vol.2009), P10
   Ring T, 2014, COMPUT FRAUD SECUR, P5, DOI 10.1016/S1361-3723(14)70469-5
   Science Applications International Corporation, 2005, TECHNICAL REPORT
   Science Applications International Corporation, 2002, TECHNICAL REPORT
   Seigneur J-M, 2000, ADV INFORM SECURITY, V3, P63
   SHAPIRO C, 1986, REV ECON STUD, V53, P433, DOI 10.2307/2297638
   Sillaber C, 2016, P 2016 ACM WORKSH IN
   Skopik F, 2016, COMPUT SECUR, V60, P154, DOI 10.1016/j.cose.2016.04.003
   Sonnenwald DH, 2006, INFORM RES, V11
   Sosic G, 2010, NAV RES LOG, V57, P279, DOI 10.1002/nav.20403
   Stemn E, 2018, SAFETY SCI, V101, P313, DOI 10.1016/j.ssci.2017.09.018
   Stevenson J., 2013, The Electricity Journal, V26, P42
   Sun CC, 2018, INT J ELEC POWER, V99, P45, DOI 10.1016/j.ijepes.2017.12.020
   Syverson P., 2001, Designing Privacy Enhancing Technologies. International Workshop on Design Issues in Anonymity and Unobservability. Proceedings (Lecture Notes in Computer Science Vol.2009), P96
   Tadda GP, 2010, ADV INFORM SECUR, V46, P15, DOI 10.1007/978-1-4419-0140-8_2
   ThreatView, 2019, CYB THREAT REP INT
   Tor project, 2019, TOR BROWS
   Tosh D, 2015, 2015 IEEE INT C COMM
   Tosh D, 2018, J COMPUT SYST SCI, V98, P27, DOI 10.1016/j.jcss.2016.08.005
   Tounsi W, 2018, COMPUT SECUR, V72, P212, DOI 10.1016/j.cose.2017.09.001
   US CERT, 2013, INF SHAR SPEC CYB
   VAKILINIA I, 2017, 2017 INT S PERF EV
   Vakilinia Iman, 2017, P IEEE MIL COMM C MI
   Valdes A., 2006, DATA CUBE INDEXING L
   vanImpe K, 2015, STIX TAXII CYBOX CAN
   Vasilomanolakis E, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2716260
   Ward D, 2014, INT J CRIT INFR PROT, V7, P193, DOI 10.1016/j.ijcip.2014.07.003
   Ward L, 2017, COMPUT FRAUD SECUR, P11, DOI 10.1016/S1361-3723(17)30031-3
   Waring S, 2018, J OCCUP ORGAN PSYCH, V91, P591, DOI 10.1111/joop.12217
   Yang Y, 2011, IEEE PES INNOV SMART
   Zhang T, 2018, IEEE T SIGNAL INF PR, V4, P148, DOI 10.1109/TSIPN.2018.2801622
   Zhou Z, 2010, IEEE ICC
   Zhuang J, 2010, RISK ANAL, V30, P1737, DOI 10.1111/j.1539-6924.2010.01455.x
   Zhuang J, 2010, EUR J OPER RES, V203, P409, DOI 10.1016/j.ejor.2009.07.028
NR 147
TC 7
Z9 9
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2019
VL 49
IS 8
BP 1225
EP 1254
DI 10.1002/spe.2705
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IG7YI
UT WOS:000474013200002
DA 2024-07-18
ER

PT J
AU Kumara, I
   Han, J
   Colman, A
   van den Heuvel, WJ
   Tamburri, DA
   Kapuruge, M
AF Kumara, Indika
   Han, Jun
   Colman, Alan
   van den Heuvel, Willem-Jan
   Tamburri, Damian A.
   Kapuruge, Malinda
TI SDSN@RT: A middleware environment for single-instance multitenant cloud
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud application; middleware; multitenancy; SaaS; SDSN; service
   network; virtual service network
ID PERFORMANCE ISOLATION; SERVICE; RECONFIGURATION; DRIVEN
AB With the single-instance multitenancy (SIMT) model for composite Software-as-a-Service (SaaS) applications, a single composite application instance can host multiple tenants, yielding the benefits of better service and resource utilization and reduced operational cost for the SaaS provider. An SIMT application needs to share services and their aggregation (the application) among its tenants while supporting variations in the functional and performance requirements of the tenants. The SaaS provider requires a middleware environment that can deploy, enact, and manage a designed SIMT application, to achieve the varied requirements of the different tenants in a controlled manner. This paper presents the SDSN@RT (software-defined service networks at runtime) middleware environment that can meet the aforementioned requirements. SDSN@RT represents an SIMT composite cloud application as a multitenant service network, where the same service network simultaneously hosts a set of virtual service networks, one for each tenant. A service network connects a set of services and coordinates the interactions between them. A virtual service network realizes the requirements for a specific tenant and can be deployed, configured, and logically isolated in the service network at runtime. SDSN@RT also supports the monitoring and runtime changes of the deployed multitenant service networks. We show the feasibility of SDSN@RT with a prototype implementation and demonstrate its capabilities to host SIMT applications and support their changes with a case study. The performance study of the prototype implementation shows that the runtime capabilities of our middleware incur little overhead.
C1 [Kumara, Indika; van den Heuvel, Willem-Jan; Tamburri, Damian A.] Tilburg Univ, Tilburg Sch Econ & Management, Tilburg, Netherlands.
   [Han, Jun; Colman, Alan; Kapuruge, Malinda] Swinburne Univ Technol, Sch Software & Elect Engn, Hawthorn, Vic, Australia.
   [Kumara, Indika; van den Heuvel, Willem-Jan; Tamburri, Damian A.] Univ Jheronimus, Acad Data Sci, Shertogenbosch, Netherlands.
C3 Tilburg University; Swinburne University of Technology
RP Kumara, I (corresponding author), Tilburg Univ, NL-5037 AB Tilburg, North Brabant, Netherlands.
EM i.p.k.weerasingha.dewage@tue.nl
RI Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961; kumara,
   Indika/0000-0003-4355-0494; Colman, Alan/0000-0003-0264-9965
FU Cooperative Research Centres, Australian Government Department of
   Industry; Swinburne University of Technology; European Commission
   [825480]; H2020 - Industrial Leadership [825480] Funding Source: H2020 -
   Industrial Leadership
FX Cooperative Research Centres, Australian Government Department of
   Industry; Swinburne University of Technology; European Commission,
   Grant/Award Number: 825480 (Horizon 2020, SODALITE)
CR Al-Jaroodi J, 2012, J NETW COMPUT APPL, V35, P211, DOI 10.1016/j.jnca.2011.07.013
   Allee V, 2008, J INTELLECT CAP, V9, P5, DOI 10.1108/14691930810845777
   Alves A., 2006, Web Services Business Process Execution Language - version 2.0
   [Anonymous], 1988, READINGS ARTIFICIAL
   Baker S, 2005, LECT NOTES COMPUT SC, V3760, P631
   Baresi L, 2012, COMPUTER, V45, P42, DOI 10.1109/MC.2012.289
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Blake MB, 2010, IEEE INTERNET COMPUT, V14, P78, DOI 10.1109/MIC.2010.2
   Boyer F, 2017, SOFTWARE PRACT EXPER, V47, P1729, DOI 10.1002/spe.2499
   Canfora G, 2006, LECT NOTES COMPUT SC, V4294, P141
   Chong F., 2006, ARCHITECTURE STRATEG
   Colman A, 2007, SCI COMPUT PROGRAM, V64, P223, DOI 10.1016/j.scico.2006.06.006
   Danylevych O, 2010, J UNIVERS COMPUT SCI, V16, P1668
   Eberle H, 2009, LECT NOTES COMPUT SC, V5870, P398, DOI 10.1007/978-3-642-05148-7_29
   Geebelen K, 2012, P INT C INT COMP LAS
   Gey Fatih, 2013, Software Composition. 12th International Conference, SC 2013. Proceedings. LNCS 8088, P113, DOI 10.1007/978-3-642-39614-4_8
   Guo CJ, 2007, 9 IEEE INT C E COMM
   Haesevoets R, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559937
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Kagal L, 2007, AUTON AGENT MULTI-AG, V14, P187, DOI 10.1007/s10458-006-0013-z
   Kapuruge Malinda, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P338, DOI 10.1007/978-3-642-38709-8_22
   Kapuruge M, 2014, SERVICE ORCHESTRATIO
   Kastner C, 2008, P 30 INT C SOFTW ENG
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   KRAMER J, 1985, IEEE T SOFTWARE ENG, V11, P424, DOI 10.1109/TSE.1985.232231
   Krebs R, 2014, P IEEE 7 INT C CLOUD
   Krebs R, 2014, SCI COMPUT PROGRAM, V90, P116, DOI 10.1016/j.scico.2013.08.003
   Kreutz D, 2015, P IEEE, V103, P14, DOI 10.1109/JPROC.2014.2371999
   Kumara I, 2013, 2013 IEEE INT C SERV
   Kumara I, 2015, 2015 IEEE INT C SERV
   Kumara I, 2017, IEEE T SERV COMPUT, V10, P9, DOI 10.1109/TSC.2016.2594061
   Lemos AL, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2831270
   Li XH, 2008, LECT NOTES COMPUT SC, V5364, P649
   Lin H, 2009, P 15 INT C PAR DISTR
   Loyall JP, 2011, SOFTWARE PRACT EXPER, V41, P1459, DOI 10.1002/spe.1101
   Mietzner R, 2008, 2008 3 INT C INT WEB
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Papazoglou MP, 2007, VLDB J, V16, P389, DOI 10.1007/s00778-007-0044-3
   Pathirage M, 2012, INT J WEB SERV RES, V9, P21, DOI 10.4018/jwsr.2012040102
   Patikirikorala T, 2012, P ICSOC, P206
   Razo-Zapata IS., 2012, Handbook of Service Description, P45
   Reichert M., 2015, Handbook on Business Process Management, DOI DOI 10.1007/978-3-642-45100-3_11
   Scheer AW, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P119, DOI 10.1002/0471741442.ch6
   Schmidt DC, 2002, COMMUN ACM, V45, P43, DOI 10.1145/508448.508472
   Seinturier L, 2012, SOFTWARE PRACT EXPER, V42, P559, DOI 10.1002/spe.1077
   Sherwood R, 2016, 12 USENIX S OP SYST
   Strauch Steve, 2013, Service-Oriented and Cloud Computing. Second European Conference (ESOCC 2013). Proceedings: LNCS 8135, P79, DOI 10.1007/978-3-642-40651-5_7
   Truyen E, 2001, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2001.919097
   Truyen E, 2012, P 27 ANN ACM S APPL
   Nguyen T, 2011, LECT NOTES COMPUT SC, V7084, P404, DOI 10.1007/978-3-642-25535-9_27
   Van Landuyt D, 2017, LECT NOTES COMPUT SC, V10601, P340, DOI 10.1007/978-3-319-69035-3_24
   Vogels W, 2003, IEEE INTERNET COMPUT, V7, P59, DOI 10.1109/MIC.2003.1250585
   Walraven S, 2013, SOFTWARE PRACT EXPER, V43, P1145, DOI 10.1002/spe.1128
   Walraven S, 2011, LECT NOTES COMPUT SC, V7049, P370
   Wang MX, 2010, 2010 IEEE INT C SERV
   Zúñiga-Prieto M, 2018, SOFTWARE PRACT EXPER, V48, P327, DOI 10.1002/spe.2457
NR 57
TC 6
Z9 6
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2019
VL 49
IS 5
BP 813
EP 839
DI 10.1002/spe.2686
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HR3KH
UT WOS:000463035200005
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Mann, ZA
AF Mann, Zoltan Adam
TI Cloud simulators in the implementation and evaluation of virtual machine
   placement algorithms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; CloudSim; cloud simulator; DISSECT-CF; resource
   allocation; virtual machine consolidation; virtual machine placement
ID ENERGY; CONSOLIDATION; HEURISTICS; TOOLKIT
AB In recent years, many algorithms have been proposed for the optimized allocation of virtual machines in cloud data centers. Such algorithms are usually implemented and evaluated in a cloud simulator. This paper investigates the impact of the choice of cloud simulator on the implementation of the algorithms and on the evaluation results. In particular, we report our experiences with porting an algorithm and its evaluation framework from one simulator (CloudSim) to another (DISSECT-CF). Our findings include limitations in the design of the simulators and in existing algorithm implementations. Based on this experience, we propose architectural guidelines for the integration of virtual machine allocation algorithms into cloud simulators.
C1 [Mann, Zoltan Adam] Univ Duisburg Essen, Paluno, D-45127 Essen, Germany.
C3 University of Duisburg Essen
RP Mann, ZA (corresponding author), Univ Duisburg Essen, Paluno, D-45127 Essen, Germany.
EM zoltan.mann@gmail.com
OI Mann, Zoltan/0000-0001-5741-2709
FU European Union [731678]; Hungarian Scientific Research Fund [OTKA
   108947]
FX European Union's Horizon 2020 research and innovation programme,
   Grant/Award Number: 731678; Hungarian Scientific Research Fund,
   Grant/Award Number: OTKA 108947
CR Ahvar E, 2016, P 13 IEEE INT C SERV
   Alicherry M, 2012, P IEEE INF ORL FL
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Boru D, 2015, CLUSTER COMPUT, V18, P385, DOI 10.1007/s10586-014-0404-x
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Casanova H, 2014, J PARALLEL DISTR COM, V74, P2899, DOI 10.1016/j.jpdc.2014.06.008
   Chowdhury M. R., 2015, 16 IEEE ACIS INT C S
   Digital Power Group, 2013, CLOUD BEG COAL BIG D
   Feller E, 2012, P 2012 12 IEEE ACM I
   Guazzone M, 2012, 1 INT WORKSH EN EFF
   Guérout T, 2013, SIMUL MODEL PRACT TH, V39, P76, DOI 10.1016/j.simpat.2013.04.007
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hirofuchi T, 2018, IEEE T CLOUD COMPUT, V6, P221, DOI 10.1109/TCC.2015.2481422
   Jung JK, 2013, LECT NOTES ELECT ENG, V214, P537
   Kecskemeti G, 2015, SIMUL MODEL PRACT TH, V58, P188, DOI 10.1016/j.simpat.2015.05.009
   Khosravi A, 2013, EUR C PAR PROC AACH
   KyoungSoo Park, 2006, Operating Systems Review, V40, P65, DOI 10.1145/1113361.1113374
   Lago DGD, 2011, P 9 INT WORKSH MIDDL
   Mahmud MR, 2016, SOFTWARE PRACT EXPER, V46, P1525, DOI 10.1002/spe.2392
   Mann Za, 2015, P 9 HUNG JAP S DISCR
   Mann Za, 2015, P INT C MATH METH MA
   Mann ZA, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4083
   Mann ZA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2797211
   Mann ZA, 2015, FUTURE GENER COMP SY, V51, P1, DOI 10.1016/j.future.2015.04.004
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   Ouarnoughi H, 2016, INT C HIGH PERF COMP
   Peterson L, 2006, P 7 S OP SYST DES IM
   Piraghaj SF, 2017, SOFTWARE PRACT EXPER, V47, P505, DOI 10.1002/spe.2422
   Quang-Hung N, 2013, INF COMM TECHN EURAS
   RightScale, 2017, CLOUD COMP TRENDS 20
   Sakellari G, 2013, SIMUL MODEL PRACT TH, V39, P92, DOI 10.1016/j.simpat.2013.04.002
   Snyder B, 2018, SOFTWARE PRACT EXPER, V48, P665, DOI 10.1002/spe.2541
   Svard P, 2015, IEEE 7 INT C CLOUD C
   Tian WH, 2015, SIMUL MODEL PRACT TH, V58, P239, DOI 10.1016/j.simpat.2015.06.002
   Tighe M, 2012, 8 INT C NETW SERV MA
   Velho P, 2013, ACM T MODEL COMPUT S, V23, DOI 10.1145/2517448
NR 37
TC 14
Z9 14
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2018
VL 48
IS 7
BP 1368
EP 1389
DI 10.1002/spe.2579
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI6XE
UT WOS:000434645700003
DA 2024-07-18
ER

PT J
AU Zúñiga-Prieto, M
   González-Huerta, J
   Insfran, E
   Abrahao, S
AF Zuniga-Prieto, Miguel
   Gonzalez-Huerta, Javier
   Insfran, Emilio
   Abrahao, Silvia
TI Dynamic reconfiguration of cloud application architectures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud architecture; dynamic reconfiguration; service-oriented
   architecture; model-driven development; empirical validation
ID PERCEIVED EASE; ACCEPTANCE; TECHNOLOGY
AB Service-based cloud applications are software systems that continuously evolve to satisfy new user requirements and technological changes. This kind of applications also require elasticity, scalability, and high availability, which means that deployment of new functionalities or architectural adaptations to fulfill service level agreements (SLAs) should be performed while the application is in execution. Dynamic architectural reconfiguration is essential to minimize system disruptions while new or modified services are being integrated into existing cloud applications. Thus, cloud applications should be developed following principles that support dynamic reconfiguration of services, and also tools to automate these reconfigurations at runtime are needed. This paper presents an extension of a model-driven method for dynamic and incremental architecture reconfiguration of cloud services that allows developers to specify new services as software increments, and the tool to generate the implementation code for the services integration logic and the deployment and architectural reconfiguration scripts specific to the cloud environment in which the service will be deployed (e.g., Microsoft Azure). We also report the results of a quasi-experiment that empirically validate our method. It was conducted to evaluate their perceived ease of use, perceived usefulness, and perceived intention to use. The results show that the participants perceive the method to be useful, and they also expressed their intention to use the method in the future. Although further experiments must be carried out to corroborate these results, the method has proven to be a promising architectural reconfiguration process for cloud applications in the context of agile and incremental development processes. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Zuniga-Prieto, Miguel; Insfran, Emilio; Abrahao, Silvia] Univ Politecn Valencia, Dept Informat Syst & Computat, Camino Vera S-N, E-46022 Valencia, Spain.
   [Zuniga-Prieto, Miguel] Univ Cuenca, Dept Comp Sci, Av 12 Abril y Agustin Cueva,01-01-168, Cuenca, Ecuador.
   [Gonzalez-Huerta, Javier] Blekinge Inst Technol, Software Engn Res Lab Sweden, Campus Grasvik, S-37179 Karlskrona, Sweden.
C3 Universitat Politecnica de Valencia; Universidad de Cuenca; Blekinge
   Institute Technology
RP Insfran, E (corresponding author), Univ Politecn Valencia, Dept Informat Syst & Computat, Camino Vera S-N, E-46022 Valencia, Spain.
EM einsfran@disc.upv.es
RI Abrahão, Silvia/AAK-6976-2020; Gonzalez-Huerta, Javier/V-4258-2019;
   Insfran, Emilio/O-6934-2015
OI Abrahão, Silvia/0000-0003-3580-2014; Gonzalez-Huerta,
   Javier/0000-0003-1350-7030; Zuniga Prieto, Miguel
   Angel/0000-0001-9369-1813; Insfran, Emilio/0000-0003-0855-5564
FU Value@Cloud project [MINECO TIN2013-46300-R]; Microsoft Azure Research
   Award;  [DIUC_XIV_2016_038]
FX This research is supported by the Value@Cloud project (MINECO
   TIN2013-46300-R), DIUC_XIV_2016_038 project, and the Microsoft Azure
   Research Award.
CR [Anonymous], 2002, Applied Statistics for Software Managers
   [Anonymous], INT J INFORM TECHNOL
   Ardagna D., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P50, DOI 10.1109/MISE.2012.6226014
   Basili V R., 1994, Encyclopedia of Software Engineering, V2, P1
   Bergmayr Alexander., 2014, CEUR Workshop Proceedings, V1242, P56
   Brandtzaeg E., 2012, 8 EUR C MOD FDN APPL, P18
   BREIVOLD HP, 2014, ARCHITECTING FOR THE, P312, DOI DOI 10.1109/CSE.2014.85
   Brogi A., 2014, ACM SIGSOFT Software Engineering Notes, V39, P1, DOI DOI 10.1145/2557833.2557844
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Chef Software Inc, 2015, DEVOPS CLOUD CHEF MI
   Cook T., 1979, Quasi experimental design and analysis
   Costa B, 2014, J SYST SOFTWARE, V112, P156
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Frey S., 2011, International Journal on Advances in Software, V4, P342
   Guill├a┬n J., 2013, P 2 NORD S CLOUD COM, P30, DOI [10.1145/2513534.2513541, DOI 10.1145/2513534.2513541]
   Guillen Joaquin, 2013, Service-Oriented and Cloud Computing. Second European Conference (ESOCC 2013). Proceedings: LNCS 8135, P180, DOI 10.1007/978-3-642-40651-5_15
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hu PJ, 1999, J MANAGE INFORM SYST, V16, P91, DOI 10.1080/07421222.1999.11518247
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jamshidi P, 2013, EUR CON SFTWR MTNCE, P305, DOI 10.1109/CSMR.2013.39
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lane S, 2011, 9 INT C SERV OR COMP, P44
   Meireles F, 2014, LECT NOTES COMPUT SC, V8806, P73, DOI 10.1007/978-3-319-14313-2_7
   Moody D. L., 2001, THESIS
   Motta G., 2012, 2012 International Joint Conference on Service Sciences (IJCSS 2012), P23, DOI 10.1109/IJCSS.2012.37
   Newman S., 2015, BUILDING MICROSERVIC
   *OMG, 2008, SERV OR ARCH MOD LAN
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   Venkatesh V, 2000, INFORM SYST RES, V11, P342, DOI 10.1287/isre.11.4.342.11872
   Wohlin C., 2012, Experimentation in Software Engineering
   Zuniga-Prieto M, DIARY METHOD EXPT MA
   Zuniga-Prieto M., 2015, 24 INT C INF SYST DE
   Zuniga-Prieto M., 2014, 8 INT WORKSH MOD EV, P52
   Zuniga-Prieto M., 2016, IEEE 10 S MAINT EV S
NR 34
TC 6
Z9 6
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2018
VL 48
IS 2
SI SI
BP 327
EP 344
DI 10.1002/spe.2457
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FS0OE
UT WOS:000419472700004
OA Green Published
DA 2024-07-18
ER

PT J
AU Dayarathna, M
   Li, YL
   Wen, YG
   Fan, R
AF Dayarathna, Miyuru
   Li, Yuanlong
   Wen, Yonggang
   Fan, Rui
TI Energy consumption analysis of data stream processing: a benchmarking
   approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data stream processing; energy consumption analysis; benchmarking;
   workload characterization; distributed systems; linear road
ID DATA CENTERS; PERFORMANCE; MANAGEMENT
AB Energy efficiency of data analysis systems has become a very important issue in recent times because of the increasing costs of data center operations. Although distributed streaming workloads have increasingly been present in modern data centers, energy-efficient scheduling of such applications remains as a significant challenge. In this paper, we conduct an energy consumption analysis of data stream processing systems in order to identify their energy consumption patterns. We follow stream system benchmarking approach to solve this issue. Specifically, we implement Linear Road benchmark on six stream processing environments (S4, Storm, ActiveMQ, Esper, Kafka, and Spark Streaming) and characterize these systems' performance on a real-world data center. We study the energy consumption characteristics of each system with varying number of roads as well as with different types of component layouts. We also use a microbenchmark to capture raw energy consumption characteristics. We observed that S4, Esper, and Spark Streaming environments had highest average energy consumption efficiencies compared with the other systems. Using a neural networkbased technique with the power/performance information gathered from our experiments, we developed a model for the power consumption behavior of a streaming environment. We observed that energy-efficient execution of streaming application cannot be specifically attributed to the system CPU usage. We observed that communication between compute nodes with moderate tuple sizes and scheduling plans with balanced system overhead produces better power consumption behaviors in the context of data stream processing systems. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Dayarathna, Miyuru; Li, Yuanlong; Wen, Yonggang; Fan, Rui] Nanyang Technol Univ, Sch Comp Engn, Singapore, Singapore.
C3 Nanyang Technological University
RP Dayarathna, M (corresponding author), Nanyang Technol Univ, Sch Comp Engn, Singapore, Singapore.
EM miyurud@ntu.edu.sg
RI Wen, Yonggang/B-8848-2011; Wen, Yonggang/P-9406-2017
OI Wen, Yonggang/0000-0002-2751-5114
CR Abadi DJ, 2003, VLDB J, V12, P120, DOI 10.1007/s00778-003-0095-z
   Akram Shoaib., 2012, Proceedings of the International Conference on Distributed Event-Based Systems, P290
   [Anonymous], 2011, P 14 INT C EXT DAT T
   [Anonymous], 2014, AMAZON KINESIS APACH
   Arasu A., 2004, VLDB, P480
   ASF, 2014, STROM DISTR FAULT TO
   Bedini Ivan, 2013, P 4 ACMSPEC INT C PE, P173
   Beloglazov A, 2011, ADV COMPUT, V82, P47, DOI 10.1016/B978-0-12-385512-1.00003-7
   Botan I., 2007, VLDB, P75
   Chandramouli B, 2010, COMPUTER, V43, P45, DOI 10.1109/MC.2010.346
   Chauhan J., 2012, 2012 Seventh International Conference on P2P, Parallel, Grid, Cloud and Internet Computing (3PGCIC 2012), P58, DOI 10.1109/3PGCIC.2012.55
   Dayarathna Miyuru, 2013, Quantitative Evaluation of Systems. 10th International Conference, QEST 2013. Proceedings: LNCS 8054, P225, DOI 10.1007/978-3-642-40196-1_19
   Dayarathna M, 2011, I S WORKL CHAR PROC, P79, DOI 10.1109/IISWC.2011.6114204
   Diouri M. E. M., 2013, P 20 EUR MPI US GROU, P111
   EsperTech, 2014, ESP COMPL EV PROC
   Feng B, 2012, ENERGY EFFICIENCY MA, P61
   Feng Boliang., 2012, Proceedings of the Twenty-Third Australasian Database Conference - Volume 124, ADC'12, P61
   Jain N., 2006, P 2006 ACM SIGMOD IN, P431
   Jalali F, 2014, IEEE ACM INT SYMP, P604, DOI 10.1109/CCGrid.2014.68
   Kreps Jay, 2011, P NETDB, P1, DOI DOI 10.1007/BF00640482
   Kunjir M., 2012, P 15 INT C EXT DAT T, P444, DOI [10.1145/2247596.2247648, DOI 10.1145/2247596.2247648]
   Lang W, 2010, PROC VLDB ENDOW, V3, P129, DOI 10.14778/1920841.1920862
   Li C, 2014, CEPBEN BENCHMARK COM, P125
   Liarou E., 2009, P 12 INT C EXTENDING, P323
   Lu RR, 2014, INT CONF UTIL CLOUD, P69, DOI 10.1109/UCC.2014.15
   Mashayekhy L., 2014, IEEE T PARALL DISTR, P1
   Mashayekhy L, 2014, IEEE INT CONGR BIG, P32, DOI 10.1109/BigData.Congress.2014.15
   Mendes M.R.N., 2013, Proceedings of ICPE, P431
   Mendes MRN, 2009, LECT NOTES COMPUT SC, V5895, P221, DOI 10.1007/978-3-642-10424-4_16
   Nabi Z., 2014, IBM White Paper, P1
   Neumeyer L., 2010, Proceedings 2010 10th IEEE International Conference on Data Mining Workshops (ICDMW 2010), P170, DOI 10.1109/ICDMW.2010.172
   Noureddine A, 2013, SOFTWARE PRACT EXPER, V43, P1071, DOI 10.1002/spe.2139
   Poess M, 2008, PROC VLDB ENDOW, V1, P1229, DOI 10.14778/1454159.1454162
   Qian SL, 2016, PROCEEDINGS 2016 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY (ICIT), P592, DOI 10.1109/ICIT.2016.7474816
   Rabkin A., 2014, NSDI
   Risch T, 2014, UPPSALA U LINEAR ROA
   Snyder B, 2011, ACTION SERIES
   SQLstream, 2014, SQLSTREAM BLAZ AP ST
   Sumbaly R., 2013, P 2013 ACM SIGMOD IN
   Turaga D, 2010, SOFTWARE PRACT EXPER, V40, P1073, DOI 10.1002/spe.993
   Xia WF, 2014, J SUPERCOMPUT, V70, P1383, DOI 10.1007/s11227-014-1233-7
   Xu JL, 2014, INT CON DISTR COMP S, P535, DOI 10.1109/ICDCS.2014.61
   Zaharia M, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P423, DOI 10.1145/2517349.2522737
   Zeitler E, 2011, PROC VLDB ENDOW, V4, P1181
   Zhu N, 2011, ACM SIGCOMM COMP COM, V41, P416, DOI 10.1145/2043164.2018497
   Zikopoulos P.C., 2012, Harness the Power of Big Data: The IBM Big Data Platform
NR 46
TC 4
Z9 7
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2017
VL 47
IS 10
BP 1443
EP 1462
DI 10.1002/spe.2458
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG0OJ
UT WOS:000409457000007
DA 2024-07-18
ER

PT J
AU Xiao, J
   Wang, ZY
   Chen, Y
   Liao, LA
   Xiao, J
   Zhan, G
   Hu, RM
AF Xiao, Jing
   Wang, Zhongyuan
   Chen, Yu
   Liao, Liang
   Xiao, Jun
   Zhan, Gen
   Hu, Ruimin
TI A sensitive object-oriented approach to big surveillance data
   compression for social security applications in smart cities
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE surveillance data compression; ROI-based video coding; sensitive
   objects; saliency map; rate control
ID SALIENT REGION DETECTION; RATE CONTROL ALGORITHM; VIDEO; IMAGE; MODEL
AB Surveillance has become a fairly common practice with the global boom in "smart cities". How to efficiently store and manage the vast quantities of surveillance data is a persistent challenge in terms of analyzing social security problems. Developing data compression technology under the analytic requirements of surveillance data is the key to solving the storage problem. Criminal investigation demands the quality preservation of sensitive objects, typically pedestrians, human faces, vehicles, and license plates; however, the analytical value of surveillance data is rapidly lost as the compression ratio increases. In this paper, we propose a sensitive object-oriented regions of interest-based coding strategy for preserving the analytical value of surveillance data. In the proposed method, instead of generating a saliency map based on human visual perception, we consider saliency as a set of characteristics important for object detection and recognition. By making this modification, almost all sensitive objects necessary in a criminal investigation are assigned high saliency value rather than only one or two salient regions. Motions in the temporal domain are integrated to place emphasis on moving objects, namely moving sensitive objects, which then gain the highest saliency. Finally, a saliency-based rate control algorithm embedded in High Efficiency Video Coding is used to maintain the quality of sensitive objects in the encoded video under a fixed bitrate. Experiments were conducted on two analytical indexes: Feature similarity and object detection accuracy. The results showed that by achieving the same feature similarity and object detection accuracy, our method can save 20% and 40% bitrate over High Efficiency Video Coding, respectively, for the storage of big surveillance data. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Xiao, Jing] Wuhan Univ, Comp Sch, State Key Lab Software Engn, Wuhan, Hubei, Peoples R China.
   [Xiao, Jing; Wang, Zhongyuan; Chen, Yu; Liao, Liang; Xiao, Jun; Zhan, Gen; Hu, Ruimin] Wuhan Univ, Natl Engn Res Ctr Multimedia Software, Wuhan, Hubei, Peoples R China.
   [Wang, Zhongyuan] Wuhan Univ, Hubei Prov Key Lab Multimedia & Network Commun En, Wuhan, Hubei, Peoples R China.
   [Hu, Ruimin] Collaborat Innovat Ctr Geospatial Technol, Wuhan, Peoples R China.
C3 Wuhan University; Wuhan University; Wuhan University
RP Wang, ZY (corresponding author), Wuhan Univ, Natl Engn Res Ctr Multimedia Software, Wuhan, Hubei, Peoples R China.
EM wzy_hope@163.com
RI Wang, Zhongyuan/ABD-2189-2020
FU National Nature Science Foundation of China [61502348]; State Key
   Laboratory of Software Engineering [SKLSE-2015-A-01]; EU QUICK project
   [PIRSES-GA-2013-612652]; National Basic Research Program of China;
   Chinese National Natural Science Foundation
FX This work was partly supported by the National Nature Science Foundation
   of China (No. 61502348), the Fundamental Research Funds of State Key
   Laboratory of Software Engineering (SKLSE-2015-A-01), and the EU FP7
   QUICK project under Grant Agreement (PIRSES-GA-2013-612652). Portions of
   the research in this paper use the PKU-SVD-A dataset and PKU HumanID
   dataset collected under the sponsor of the National Basic Research
   Program of China and Chinese National Natural Science Foundation.
CR Achanta R, 2012, IEEE T PATTERN ANAL, V34, P2274, DOI 10.1109/TPAMI.2012.120
   Achanta R, 2009, PROC CVPR IEEE, P1597, DOI 10.1109/CVPRW.2009.5206596
   Alexe B, 2010, PROC CVPR IEEE, P73, DOI 10.1109/CVPR.2010.5540226
   [Anonymous], SG16 ITUT
   [Anonymous], IEEE T PARA IN PRESS
   [Anonymous], ADV VIDEO CODING SYS
   [Anonymous], 2007, PROC IEEE C COMPUT V, DOI 10.1109/CVPR.2007.383267
   Boccignone G, 2008, IEEE T CIRC SYST VID, V18, P1727, DOI 10.1109/TCSVT.2008.2005798
   Brox T, 2011, IEEE T PATTERN ANAL, V33, P500, DOI 10.1109/TPAMI.2010.143
   Cavallaro A, 2005, IEEE T CIRC SYST VID, V15, P1200, DOI 10.1109/TCSVT.2005.854240
   Chen D, 2017, SOFTWARE PRACT EXPER, V47, P405, DOI 10.1002/spe.2418
   Chen D, 2015, IEEE T PARALL DISTR, V26, P847, DOI 10.1109/TPDS.2014.2311805
   Chen D, 2015, IEEE T COMPUT, V64, P707, DOI 10.1109/TC.2013.2295806
   Chen Q, 2009, IEEE T CIRC SYST VID, V19, P1389, DOI 10.1109/TCSVT.2009.2022703
   Cheng MM, 2015, IEEE T PATTERN ANAL, V37, P569, DOI 10.1109/TPAMI.2014.2345401
   Devore J., 1999, APPL STAT ENG SCI
   Fang YHD, 2014, BIOMED RES INT, V2014, DOI 10.1155/2014/248505
   Felzenszwalb PF, 2010, IEEE T PATTERN ANAL, V32, P1627, DOI 10.1109/TPAMI.2009.167
   Fu HZ, 2013, IEEE T IMAGE PROCESS, V22, P3766, DOI 10.1109/TIP.2013.2260166
   Gao W, 2014, IEEE INTELL SYST, V29, P30, DOI 10.1109/MIS.2013.101
   Grois D, 2011, IEEE INT CON MULTI
   Guo CL, 2008, PROC CVPR IEEE, P2908
   Guo CL, 2010, IEEE T IMAGE PROCESS, V19, P185, DOI 10.1109/TIP.2009.2030969
   Hadizadeh H, 2014, IEEE T IMAGE PROCESS, V23, P19, DOI 10.1109/TIP.2013.2282897
   Itti L, 1998, IEEE T PATTERN ANAL, V20, P1254, DOI 10.1109/34.730558
   Jiang P, 2013, IEEE I CONF COMP VIS, P1976, DOI 10.1109/ICCV.2013.248
   Jiang ZL, 2013, PROC CVPR IEEE, P2043, DOI 10.1109/CVPR.2013.266
   Karlsson LS, 2005, IEEE IMAGE PROC, P1817
   Klein DA, 2011, IEEE I CONF COMP VIS, P2214, DOI 10.1109/ICCV.2011.6126499
   Li B, 2014, IEEE T IMAGE PROCESS, V23, P3841, DOI 10.1109/TIP.2014.2336550
   Li H, 2006, INT CONF SIGN PROCES, P1380
   Liao Shengcai, 2016, IEEE Trans Pattern Anal Mach Intell, V38, P211, DOI 10.1109/TPAMI.2015.2448075
   Liu T, 2011, IEEE T PATTERN ANAL, V33, P353, DOI 10.1109/TPAMI.2010.70
   Lowe DG, 2004, INT J COMPUT VISION, V60, P91, DOI 10.1023/B:VISI.0000029664.99615.94
   Mallat S, 1998, IEEE T SIGNAL PROCES, V46, P1027, DOI 10.1109/78.668554
   Perazzi F, 2012, PROC CVPR IEEE, P733, DOI 10.1109/CVPR.2012.6247743
   Scharfenberger C, 2015, IEEE T IMAGE PROCESS, V24, P457, DOI 10.1109/TIP.2014.2380351
   Shi KY, 2013, PROC CVPR IEEE, P2115, DOI 10.1109/CVPR.2013.275
   Sullivan GJ, 1998, IEEE SIGNAL PROC MAG, V15, P74, DOI 10.1109/79.733497
   Valenti R, 2009, IEEE I CONF COMP VIS, P2185, DOI 10.1109/ICCV.2009.5459240
   Wei L, 2015, AAAI CONF ARTIF INTE, P1882
   Wenguan Wang, 2015, 2015 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), P3395, DOI 10.1109/CVPR.2015.7298961
   Xu M, 2014, IEEE J-STSP, V8, P475, DOI 10.1109/JSTSP.2014.2314864
   Yang L, 2009, PCS: 2009 PICTURE CODING SYMPOSIUM, P441
   Yang XK, 2005, IEEE T CIRC SYST VID, V15, P496, DOI 10.1109/TCSVT.2005.844458
   Yin, 2014, P 31 URSI GEN ASS SC, P1
   Zhu L, 2010, PROC CVPR IEEE, P1062, DOI 10.1109/CVPR.2010.5540096
NR 47
TC 10
Z9 10
U1 1
U2 36
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2017
VL 47
IS 8
SI SI
BP 1061
EP 1080
DI 10.1002/spe.2430
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FA1LW
UT WOS:000405202100003
DA 2024-07-18
ER

PT J
AU Kim, N
   Park, S
   Jeong, D
   Hwang, M
   Park, S
   In, HP
AF Kim, Neunghoe
   Park, Soojin
   Jeong, Dongwon
   Hwang, Mansoo
   Park, Sooyong
   In, Hoh Peter
TI EURECA: End-user requirements engineering with collaborative animation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE end-user software engineering; software reuse; requirements engineering
AB In recent years, software development environments have changed from being driven by professional developers to being driven by technical end users. One of the key issues in end-user-driven software development environments is how to guarantee the quality of the software artifacts. Measuring the quality of developed software requires the correct specification of a quality range the software is expected to meet. However, technical end users are non-professionals in engineering techniques for software requirements, and training a developer to be an expert in requirements engineering in a short period of time is difficult. This paper proposes a new software development life cycle based on reutilizing previously evaluated software requirements assets from completed projects. End-User Requirements Engineering with Collaborative Animation, a tool that was developed to support the proposed software development life cycle, is described and demonstrated by application to three projects. The results from real cases are used as the basis for a discussion on the efficiency enhancement of requirements work, an increased rate of reusing legacy software requirements assets, and an improvement in the technical end user's individual competency level using the End-User Requirements Engineering with Collaborative Animation. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [Kim, Neunghoe; In, Hoh Peter] Korea Univ, Dept Comp Sci & Engn, Seoul, South Korea.
   [Park, Soojin] Sogang Univ, Sogang Inst Adv Technol, Seoul, South Korea.
   [Jeong, Dongwon] Kunsan Natl Univ, Dept Stat & Comp Sci, Gunsan, South Korea.
   [Hwang, Mansoo] Shinhan Univ, Sch IT Convergence Engn, Dongducheon, South Korea.
   [Park, Sooyong] Sogang Univ, Dept Comp Sci & Engn, Seoul, South Korea.
C3 Korea University; Sogang University; Kunsan National University; Sogang
   University
RP In, HP (corresponding author), Korea Univ, Dept Comp Sci & Engn, Seoul, South Korea.
EM hoh_in@korea.ac.kr
FU Korea Health Technology RAMP;D Project through the Korea Health Industry
   Development Institute (KHIDI); Ministry of Health AMP; Welfare, Republic
   of Korea [HI14C3212]
FX This research was supported by a grant of the Korea Health Technology
   R&D Project through the Korea Health Industry Development Institute
   (KHIDI), funded by the Ministry of Health & Welfare, Republic of Korea
   (grant number: HI14C3212).
CR Albrech A., 1979, PROC JOINT SHAREGUID, P83
   de Gea JMC, 2011, IEEE SOFTWARE, V28, P86
   Fischer G, 2009, IEEE SOFTWARE, V26, P37, DOI 10.1109/MS.2009.134
   Fonoage M, 2010, IEEE SYST J, V4, P396, DOI 10.1109/JSYST.2010.2055030
   Jha M, 2009, LECT NOTES COMPUT SC, V5791, P181
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Ko AJ, 2009, IEEE SOFTWARE, V26, P16, DOI 10.1109/MS.2009.129
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   Koesnandar Andhy., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, SIGSOFT '08/FSE-16, P124
   Kuttal Sandeep Kaur, 2011, End-User Development. Proceedings Third International Symposium, IS-EUD 2011, P25, DOI 10.1007/978-3-642-21530-8_4
   Schmid R, 2000, TECHNICAL REPORT
   Stolee KT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P81, DOI 10.1145/1985793.1985805
   Tzeremes V, 2016, P ANN HICSS, P5831, DOI 10.1109/HICSS.2016.721
NR 13
TC 2
Z9 2
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2017
VL 47
IS 7
SI SI
BP 1001
EP 1012
DI 10.1002/spe.2471
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EG
UT WOS:000403114200006
DA 2024-07-18
ER

PT J
AU Sirkiä, T
   Haaranen, L
AF Sirkia, Teemu
   Haaranen, Lassi
TI Improving online learning activity interoperability with Acos server
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE online learning activities; learning management systems;
   interoperability; reusability
ID ARCHITECTURE; SYSTEMS
AB Modern online learning management systems (LMSs) support a variety of online learning activities, such as animations, exercises, and other interactive learning materials. However, there are many technical challenges in using the same activities in multiple LMSs because content is typically tightly coupled with one protocol to communicate with the LMS and different LMSs use different protocols for launching activities and receiving grades. This leads to low reusability of learning activities and similar content being developed in multiple places. To overcome these issues, we present Acos, a smart learning content server, which emphasizes the reusability of online learning activities by decoupling the content and existing interoperability protocols. It allows integrating the same learning activities into multiple LMSs using different protocols by providing a uniform interface for learning activities. Adapting this architecture allows instructors to choose activities based on pedagogical goals instead of letting technical restrictions of LMSs dictate the content selection process. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Sirkia, Teemu; Haaranen, Lassi] Aalto Univ, Dept Comp Sci, Espoo, Finland.
C3 Aalto University
RP Sirkiä, T (corresponding author), POB 15400, Aalto 00076, Finland.
EM teemu.sirkia@aalto.fi
RI Haaranen, Lassi/AAZ-3031-2020; Sirkiä, Teemu/AAM-8548-2020
OI Haaranen, Lassi/0000-0002-6500-6425; Sirkiä, Teemu/0000-0003-4415-6966
FU Advanced Distributed Learning (ADL) Initiative
FX This work is supported by the Advanced Distributed Learning (ADL)
   Initiative. The views and conclusions contained in this document are
   those of the authors and should not be interpreted as representing the
   official policies, either expressed or implied, of the Department of
   Defense or the Joint Staff.
CR Alario-Hoyos C, 2013, COMPUT EDUC, V60, P122, DOI 10.1016/j.compedu.2012.08.010
   Allison C, 2012, COMPUT NETW, V56, P3811, DOI 10.1016/j.comnet.2012.09.017
   [Anonymous], 2004, Computer Science Education Research
   Brusilovsky P., 2014, P WORK GROUP 2014 IN, P31
   Brusilovsky P., 2004, Proceedings of the 13th international World Wide Web Conference on Alternate track papers posters, P104, DOI DOI 10.1145/1013367.1013386
   Dagger D, 2007, IEEE INTERNET COMPUT, V11, P28, DOI 10.1109/MIC.2007.70
   Fontenla J, 2010, IEEE LAT AM T, V8, P135, DOI 10.1109/TLA.2010.5514439
   Gamma Erich., 1994, DESIGN PATTERNS
   Hernández-Leo D, 2014, LECT NOTES COMPUT SC, V8719, P490, DOI 10.1007/978-3-319-11200-8_48
   Ihantola P., 2011, Journal of Information Technology Education: Innovations in Practice, V10, P1
   IMS Global Learning Consortium, 2010, LEARN TOOLS INT
   Karavirta V, 2013, IEEE INT CONF ADV LE, P341, DOI 10.1109/ICALT.2013.105
   Karavirta Ville., 2013, Proceedings of the 18th ACM conference on Innovation and technology in computer science education, P159, DOI DOI 10.1145/2462476.2462487
   Kumar A. N., 2005, SIGCSE Bulletin, V37, P216, DOI 10.1145/1047124.1047422
   Loboda TD, 2014, MASTERY GRIDS OPEN S
   Orduna Pablo, 2013, 2013 IEEE Frontiers in Education Conference (FIE), P1372, DOI 10.1109/FIE.2013.6685057
   Rey-Lopez M., 2008, International Journal on E-Learning, V7, P363
   Sirkiä T, 2016, 2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION, P36, DOI 10.1109/VISSOFT.2016.24
NR 18
TC 7
Z9 9
U1 1
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1657
EP 1676
DI 10.1002/spe.2492
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500009
DA 2024-07-18
ER

PT J
AU Cukic, I
AF Cukic, Ivan
TI A continuation-based task programming model for C plus plus : design of
   the Causeway library
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE coordination; asynchronous task-oriented design; continuation monad;
   C++11; domain-specific languages; functional programming
ID THREADS
AB There is a big class of problems that requires writing programs in an asynchronous manner. Cloud computing, service-oriented architectures, multi-core and heterogeneous systems all require programs to be written with asynchronous components. The necessity of concurrency and asynchronous execution brings in the added complexity of the inversion of control into the system, either through message passing or through event processing. In this paper, we introduce explicit programming language support for asynchronous programming that completely hides inversion of control. The presented programming model defines a common abstraction of the different types of tasks, both synchronous and asynchronous. It defines common imperative control constructs equivalent to those of the host programming language, along with a few more advanced ones for transactional and parallel execution that can universally work for any task type. It allows the programmer to implement the logic of an asynchronous system in a natural way by writing simple, seemingly, synchronous imperative code. We will show that the programs written using this approach are easier to understand by programmers. They are also easier to design automated tests for, and for performing computer-based static analysis of the program logic. The principles behind this approach were tested in a couple of real-world systems with worldwide user base. Our experience shows that it makes the complex code with a lot of interdependencies between asynchronously executed tasks easy to write and reason about. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Cukic, Ivan] Univ Belgrade, Fac Math, Studentski Trg 16, Belgrade 1611100, Serbia.
C3 University of Belgrade
RP Cukic, I (corresponding author), Univ Belgrade, Fac Math, Studentski Trg 16, Belgrade 1611100, Serbia.
EM ivan@math.rs
CR Alexandrescu A., 2012, SYSTEMATIC ERROR HAN, P11
   Alexandrescu A., 2001, Modern C++ Design: Generic Programming and Design Patterns Applied
   [Anonymous], 2012, ISOIEC148822011
   Boussinot F, 2006, CONCURR COMP-PRACT E, V18, P445, DOI 10.1002/cpe.919
   CARRIERO NJ, 1994, PARALLEL COMPUT, V20, P633, DOI 10.1016/0167-8191(94)90032-9
   Cernuzzi L, 2005, ENG APPL ARTIF INTEL, V18, P205, DOI 10.1016/j.engappai.2004.11.015
   Charousset Dominik., 2013, Proceedings of the 2013 workshop on Programming based on actors, agents, P87, DOI 10.1145/2541329.2541336
   Chin B, 2006, LECT NOTES COMPUT SC, V4067, P255
   Claessen K., 1999, FUNCTIONAL PEARLS PO
   Coelho R., 2006, Proceedings of the International Workshop on Software Engineering for Large-Scale Multi-Agent Systems, P83
   CONWAY ME, 1963, COMMUN ACM, V6, P396, DOI 10.1145/366663.366704
   Cukic I., 2014, M C, P64
   Cukic I., 2013, QT DEV DAYS 2013, P20
   Czarnecki K., 2002, Software Reuse: Methods, Techniques, and Tools, V2319, P477, DOI DOI 10.1007/3-540-46020-9_38
   Epstein J, 2011, ACM SIGPLAN NOTICES, V46, P118, DOI 10.1145/2096148.2034690
   Felleisen M., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P180, DOI 10.1145/73560.73576
   Fischer J., 2007, PEPM, P134, DOI [10.1145/1244381.1244403, DOI 10.1145/1244381.1244403]
   Freeman E., 2004, Head First Design Patterns: A Brain-Friendly Guide
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gustafsson N, 2013, N3564 RESUMABLE FUNC
   Haller P, 2006, LECT NOTES COMPUT SC, V4228, P4
   Hewitt C., 1973, PROC 3 INT JOINT C A, P235, DOI 10.1145/359545.359563
   Huizinga D., 2007, AUTOMATED DEFECT PRE
   Hunt J, 2014, BEGINNERS GUIDE SCAL, P399
   Imam S, 2012, 3 SCAL WORKSH SCLA D, P2
   Imam S, 2014, LECT NOTES COMPUT SC, V8586, P618, DOI 10.1007/978-3-662-44202-9_25
   Keiser H, 2014, M C, P5
   Knublauch H., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P704
   Kohlhoff C., 2013, N3747 UNIVERSAL MODE
   Kohlhoff C., 2003, BOOST ASIO, V48, P2003
   Lauer H. C., 1979, Operating Systems Review, V13, P3, DOI 10.1145/850657.850658
   Li P, 2007, ACM SIGPLAN NOTICES, V42, P189, DOI 10.1145/1273442.1250756
   Maier I., 2010, TECHNICAL REPORT
   Menascé DA, 2003, IEEE INTERNET COMPUT, V7, P78, DOI 10.1109/MIC.2003.1250588
   Milewski B, 2012, ASYNCHRONOUS API C C
   Nishanov G., 2014, TECHNICAL REPORT, P6
   Ousterhout J., 1996, WHY THREADS ARE BAD, P2
   Schaling B., 2011, The boost C++ libraries
   Schemenauer N, 2009, HETLAND MAGNUSLIE PE
   Steele GuyL., 1976, LAMBDA ULTIMATE IMPE
   Stroustrup Bjarne, 2013, The C++ programming language
   VANDEVOORDE D, 2003, C TEMPLATES COMPLETE
   vonsBehren JR, 2003, WHY EVENTS ARE BAD I, P19
   Wan ZY, 2000, ACM SIGPLAN NOTICES, V35, P242, DOI 10.1145/358438.349331
NR 44
TC 0
Z9 0
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2016
VL 46
IS 12
BP 1617
EP 1656
DI 10.1002/spe.2395
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB4TV
UT WOS:000387367600002
DA 2024-07-18
ER

PT J
AU Pawlak, R
   Monperrus, M
   Petitprez, N
   Noguera, C
   Seinturier, L
AF Pawlak, Renaud
   Monperrus, Martin
   Petitprez, Nicolas
   Noguera, Carlos
   Seinturier, Lionel
TI SPOON: A library for implementing analyses and transformations of Java
   source code
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE source code analysis; source code transformation; metaprogramming
AB This paper presents SPOON, a library for the analysis and transformation of Java source code. SPOON enables Java developers to write a large range of domain-specific analyses and transformations in an easy and concise manner. SPOON analyses and transformations are written in plain Java. With SPOON, developers do not need to dive into parsing, to hack a compiler infrastructure, or to master a new formalism. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Pawlak, Renaud] Cincheo, Paris, France.
   [Monperrus, Martin; Seinturier, Lionel] Univ Lille, Campus Sci, F-59655 Villeneuve Dascq, France.
   [Monperrus, Martin; Petitprez, Nicolas; Seinturier, Lionel] Inria, F-59650 Villeneuve Dascq, France.
   [Noguera, Carlos] Vrije Univ Brussel, B-1050 Brussels, Belgium.
C3 Universite de Lille; Inria; Vrije Universiteit Brussel
RP Monperrus, M (corresponding author), Univ Lille, Campus Sci, F-59655 Villeneuve Dascq, France.; Monperrus, M (corresponding author), Inria, F-59650 Villeneuve Dascq, France.
EM martin.monperrus@univ-lille1.fr
RI Seinturier, Lionel/ABG-2829-2020; Monperrus, Martin/I-3640-2012
OI Seinturier, Lionel/0000-0003-0006-6088; Monperrus,
   Martin/0000-0003-3505-3383
CR Alves TL, 2011, IEEE INT WORK C SO, P145, DOI 10.1109/SCAM.2011.14
   Ancona D, 2000, P 14 EUR C OBJ OR PR, P154
   [Anonymous], 2004, ASPECTJ 5 DEV KIT DE
   [Anonymous], LNCS
   [Anonymous], 1988, TXL RAPID PROTOTYPIN
   Balland E, 2007, LECT NOTES COMPUT SC, V4533, P36
   BARSTOW DR, 1985, IEEE T SOFTWARE ENG, V11, P1321, DOI 10.1109/TSE.1985.231881
   Binkley D, 2007, FoSE 2007: Future of Software Engineering, P104, DOI 10.1109/FOSE.2007.27
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   Bruneton Eric, 2002, ADAPTABLE EXTENSIBLE
   Carlos Noguera, 2008, THESIS
   CHIBA S, 1995, SIGPLAN NOTICES, V30, P285, DOI 10.1145/217839.217868
   Chiba S., 1998, Proceedings of OOPSLA98 Workshop on Reflective Programming in C++ and Java, P174
   Dahn C, 2003, P WCRE WASH DC US, V3, P323
   de Oliveira AA, 2004, J UNIVERS COMPUT SCI, V10, P872
   Feather M.S., 1987, The IFIP TC2/WG 2.1 Working Conference on Program specification and transformation, P165
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Fuhrer R, 2005, LECT NOTES COMPUT SC, V3586, P71
   Harmer TJ, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P26, DOI 10.1109/SCAM.2002.1134102
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Ichisugi Y., 1997, Scientific Computing in Object-Oriented Parallel Environments. First International Conference, ISCOPE 97. Proceedings, P153
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Klint P, 2009, IEEE INT WORK C SO, P168, DOI 10.1109/SCAM.2009.28
   Kniesel G, 2004, SCI COMPUT PROGRAM, V52, P9, DOI 10.1016/j.scico.2004.03.002
   Kramer D., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P147, DOI 10.1145/318372.318577
   Kuipers T, 2003, SCI COMPUT PROGRAM, V47, P59, DOI 10.1016/S0167-6423(02)00108-9
   Lee SI, 2004, LECT NOTES COMPUT SC, V2958, P539, DOI 10.1007/978-3-540-24644-2_35
   LOVEMAN DB, 1977, J ACM, V24, P121, DOI 10.1145/321992.322000
   Ludwig A, 2001, LNCS, P179, DOI DOI 10.1007/3-540-44815-213
   Michel L. D., 2006, ENTERPRISE JAVABEANS
   Nadera Beevi S., 2012, ACM Inroads, V3, P49, DOI 10.1145/2077808.2077825
   Palsberg J, 1998, P INT COMP SOFTW APP, P9, DOI 10.1109/CMPSAC.1998.716629
   PARTSCH H, 1983, COMPUT SURV, V15, P199, DOI 10.1145/356914.356917
   Pawlak R., 2006, Distributed Systems Online, IEEE, V7, P1
   Pawlak R., 2006, RR5901 INRIA
   Rouvoy R, 2009, ANN TELECOMMUN, V64, P65, DOI 10.1007/s12243-008-0072-z
   Schärli N, 2003, LECT NOTES COMPUT SC, V2743, P248
   Schordan M, 2003, P JMLC 2003
   Seinturier L, 2012, SOFTWARE PRACT EXPER, V42, P559, DOI 10.1002/spe.1077
   Shaham R, 2001, ACM SIGPLAN NOTICES, V36, P104, DOI 10.1145/381694.378820
   Strein D, 2007, IEEE T SOFTWARE ENG, V33, P592, DOI [10.1109/TSE.2007.70710, 10.1109/tse.2007.70710]
   Tatsubori M, 2000, LECT NOTES COMPUT SC, V1826, P117
   van Deursen A, 2004, SOFTWARE PRACT EXPER, V34, P1345, DOI 10.1002/spe.616
   Visser Eelco, 2001, LNCS
   Yuepu Guo, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P167, DOI 10.1145/1810295.1810321
   Zotter B., 2005, WEB SERVICES METADAT
NR 48
TC 136
Z9 157
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2016
VL 46
IS 9
BP 1155
EP 1179
DI 10.1002/spe.2346
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DS8KO
UT WOS:000381032300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sherwood, T
   Ahmad, E
   Yap, MH
AF Sherwood, Thomas
   Ahmad, Ezak
   Yap, Moi Hoon
TI Formulating efficient software solution for digital image processing
   system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE image processing; software solution; sustainability; plugin; OpenCV;
   Matlab
AB Digital image processing systems are complex, being usually composed of different computer vision libraries. Algorithm implementations cannot be directly used in conjunction with algorithms developed using other computer vision libraries. This paper formulates a software solution by proposing a processor with the capability of handling different types of image processing algorithms, which allow the end users to install new image processing algorithms from any library. This approach has other functionalities like capability to process one or more images, manage multiple processing jobs simultaneously and maintain the manner in which an image was processed for later use. It is a computational efficient and promising technique to handle variety of image processing algorithms. To promote the reusability and adaptation of the package for new types of analysis, a feature of sustainability is established. The framework is integrated and tested on a medical imaging application, and the software is made freely available for the reader. Future work involves introducing the capability to connect to another instance of processing service with better performance. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Sherwood, Thomas; Ahmad, Ezak; Yap, Moi Hoon] Manchester Metropolitan Univ, Sch Comp Math & Digital Technol, Chester St, Manchester M1 5GD, Lancs, England.
C3 Manchester Metropolitan University
RP Yap, MH (corresponding author), Manchester Metropolitan Univ, Sch Comp Math & Digital Technol, Chester St, Manchester M1 5GD, Lancs, England.
EM moihoon@gmail.com
RI Ahmad, Ezak/AAJ-3477-2021
OI Ahmad, Ezak/0000-0001-9741-6819; Yap, Moi Hoon/0000-0001-7681-4287
CR Ahmad E, 2014, SPIE MED IMAGING, V9037
   Ahmad E, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON CONTROL SYSTEM COMPUTING AND ENGINEERING, P405, DOI 10.1109/ICCSCE.2014.7072753
   [Anonymous], P 2009 INT C IM
   Chang PL, 2007, COMP MED SY, P281, DOI 10.1109/CBMS.2007.48
   Culjak I., 2012, 2012 35th International Convention on Information and Communication Technology, Electronics and Microelectronics, P1725
   EmguCV, EMG CV OPENCV NET C
   Larkins DB, 2010, PROCEDIA COMPUT SCI, V1, P913, DOI 10.1016/j.procs.2010.04.100
   Lo WY, 2008, VET RADIOL ULTRASOUN, V49, pS42, DOI 10.1111/j.1740-8261.2007.00333.x
   Mankoff J., 2007, Proceedings of CHI 2007, P2121, DOI [DOI 10.1145/1240866.1240963, 10.1145/1240866, 10.1145/1240866.1240963]
   Matuska S., 2012, 2012 Proceedings of the 9th Conference of ELEKTRO (ELEKTRO 2012), P75, DOI 10.1109/ELEKTRO.2012.6225575
   Ng CC, 2015, LECT NOTES COMPUT SC, V9005, P609, DOI 10.1007/978-3-319-16811-1_40
   Weinhardt C, 2009, BUS INF SYST ENG, V1, P391, DOI [10.1007/S12599-009-0071-2, 10.1007/s12599-009-0071-2]
   YAP MH, 2005, P MMU INT S INF COMM, P5
   Zhou ZJ, 2010, DIGITAL IMAGE PROC 1
NR 14
TC 4
Z9 4
U1 1
U2 36
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2016
VL 46
IS 7
BP 931
EP 954
DI 10.1002/spe.2339
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN7OL
UT WOS:000377266200003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Wei, SY
   Xhakaj, F
   Ryder, BG
AF Wei, Shiyi
   Xhakaj, Franceska
   Ryder, Barbara G.
TI Empirical study of the dynamic behavior of JavaScript objects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE JavaScript; study of websites; object behavioral metrics and patterns
AB Despite the popularity of JavaScript for client-side web applications, there is a lack of effective software tools supporting JavaScript development and testing. The dynamic characteristics of JavaScript pose software engineering challenges such as program understanding and security. One important feature of JavaScript is that its objects support flexible mechanisms such as property changes at runtime and prototype-based inheritance, making it difficult to reason about object behavior. We have performed an empirical study on real JavaScript applications to understand the dynamic behavior of JavaScript objects. We present metrics to measure behavior of JavaScript objects during execution (e.g., operations associated with an object, object size, and property type changes). We also investigated the behavioral patterns of observed objects to understand the coding or user interaction practices in JavaScript software. Copyright (c) 2015John Wiley & Sons, Ltd.
C1 [Wei, Shiyi; Ryder, Barbara G.] Virginia Tech, Dept Comp Sci, Blacksburg, VA USA.
   [Xhakaj, Franceska] Lafayette Coll, Dept Comp Sci, Easton, PA 18042 USA.
C3 Virginia Polytechnic Institute & State University; Lafayette College
RP Wei, SY (corresponding author), Virginia Tech, Dept Comp Sci, Blacksburg, VA USA.
EM wei@cs.vt.edu
RI Wei, Shiyi/AAR-1561-2020
CR Alimadadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P367, DOI 10.1145/2568225.2568268
   Andreasen E, 2014, ACM SIGPLAN NOTICES, V49, P17, DOI [10.1145/2714064.2660214, 10.1145/2660193.2660214]
   [Anonymous], 2011, P 2011 INT S SOFTW T, DOI DOI 10.1145/2001420.2001442
   [Anonymous], 2009, P 18 USENIX SEC S
   [Anonymous], 2015, Ase, DOI [DOI 10.1145/2491411.2491417, 10.1145/2491411.2491417]
   Balakrishnan G, 2006, LECT NOTES COMPUT SC, V4134, P221
   Chugh R, 2012, ACM SIGPLAN NOTICES, V47, P587, DOI 10.1145/2398857.2384659
   Dufour B, 2003, ACM SIGPLAN NOTICES, V38, P149, DOI 10.1145/949343.949320
   Furr M, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P283
   Gal A, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P465, DOI 10.1145/1542476.1542528
   Hackett B, 2012, ACM SIGPLAN NOTICES, V47, P239, DOI 10.1145/2345156.2254094
   Hills M., 2013, Proceedings of ISSTA 2013, P325, DOI DOI 10.1145/2483760.2483786
   Holkner Alex, 2009, P 32 AUSTR C COMP SC, V91, P19
   Jensen S. H., 2009, LNCS, V5673, DOI 10.1007/978-3-642-03237-0_17
   Kashyap V, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P121, DOI 10.1145/2635868.2635904
   Lerner BS, 2014, ACM SIGPLAN NOTICES, V49, P1, DOI 10.1145/2508168.2508170
   LIEBERMAN H, 1986, SIGPLAN NOTICES, V21, P214, DOI 10.1145/960112.28718
   Martinsen J. K., 2011, 2011 9th IEEE/ACS International Conference on Computer Systems and Applications (AICCSA), P241, DOI 10.1109/AICCSA.2011.6126611
   Ocariza Frolin  Jr., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P55, DOI 10.1109/ESEM.2013.18
   Ocariza FS, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P100, DOI 10.1109/ISSRE.2011.28
   Ratanaworabhan P., 2010, P 2010 USENIX C WEB, P3
   Richards G, 2011, LECT NOTES COMPUT SC, V6813, P52, DOI 10.1007/978-3-642-22655-7_4
   Richards G, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1806596.1806598
   Ryder BG, 2003, LECT NOTES COMPUT SC, V2622, P126
   Schäfer M, 2013, ACM SIGPLAN NOTICES, V48, P165, DOI 10.1145/2499370.2462168
   Schafer M, 2013, RC25359 IBM
   Sridharan M, 2012, LECT NOTES COMPUT SC, V7313, P435, DOI 10.1007/978-3-642-31057-7_20
   WEGNER P, 1987, SIGPLAN NOTICES, V22, P168
   Wei SY, 2014, LECT NOTES COMPUT SC, V8586, P1
   Wei Shiyi., 2013, P 2013 INT S SOFTWAR, P336
   Yue C., 2009, Proceedings of the 18th international conference on World Wide Web, WWW, P961, DOI DOI 10.1145/1526709.1526838
   Yue C, 2013, ACM T WEB, V7, DOI 10.1145/2460383.2460386
NR 32
TC 8
Z9 9
U1 2
U2 25
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2016
VL 46
IS 7
BP 867
EP 889
DI 10.1002/spe.2334
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN7OL
UT WOS:000377266200001
DA 2024-07-18
ER

PT J
AU Colnet, D
   Sonntag, B
AF Colnet, Dominique
   Sonntag, Benoit
TI Exploiting array manipulation habits to optimize garbage collection and
   type flow analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE content of arrays; dynamic type; garbage collector; null pointer
   detection; type analysis
ID INFERENCE; COMPILER
AB A widespread practice to implement a flexible array is to consider the storage area into two parts: the used area, which is already available for read/write operations, and the supply area, which is used in case of enlargement of the array. The main purpose of the supply area is to avoid as much as possible the reallocation of the whole storage area in case of enlargement. As the supply area is not used by the application, the main idea of the paper is to convey the information to the garbage collector, making it possible to avoid completely the marking of the supply area. We also present a simple method to analyze the types of objects, which are stored in an array as well as the possible presence of NULL values within the array. This allows us to better specialize the work of the garbage collector when marking the used area, and also, by transitivity, to improve overall results for type analysis of all expressions of the source code. After introducing several abstract data types, which represent the main arrays concerned by our technique (i.e., zero or variable indexing, circular arrays and hash maps), we measure its impact during the bootstrap of two compilers whose libraries are equipped with these abstract data types. We then measure, on various software products we have not written, the frequency of certain habits of manipulation of arrays, to assess the validity of our approach. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Colnet, Dominique] Univ Lorraine, LORIA, F-54600 Villers Les Nancy, France.
   [Sonntag, Benoit] Univ Strasbourg, LSIIT, F-67412 Illkirch Graffenstaden, France.
C3 Universite de Lorraine; Universites de Strasbourg Etablissements
   Associes; Universite de Strasbourg
RP Colnet, D (corresponding author), LORIA, Campus Sci,BP 239, F-54506 Vandoeuvre Les Nancy, France.
EM Dominique.Colnet@loria.fr
CR AGESEN O, 1995, SOFTWARE PRACT EXPER, V25, P975, DOI 10.1002/spe.4380250903
   [Anonymous], 2000, CASES 00
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Bacon DF, 2003, ACM SIGPLAN NOTICES, V38, P285, DOI 10.1145/640128.604155
   Beyer D, 2007, ACM SIGPLAN NOTICES, V42, P300, DOI 10.1145/1273442.1250769
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Blanchet B, 2003, ACM SIGPLAN NOTICES, V38, P196, DOI 10.1145/780822.781153
   Bond MD, 2007, ACM SIGPLAN NOTICES, V42, P405, DOI 10.1145/1297105.1297057
   Bradley AR, 2006, LECT NOTES COMPUT SC, V3855, P427
   Chen G, 2003, ACM SIGPLAN NOTICES, V38, P282, DOI 10.1145/949343.949330
   Chin WN, 1995, TOPLAS 1995, V17, P217
   Collin S, 1997, LECT NOTES COMPUT SC, V1204, P67
   Colnet D., 1998, ISMM, P154, DOI DOI 10.1145/286860.286877
   Corney D., 1994, Programming Languages and System Architectures. International Conference Proceedings, P137
   Cousot Patrick, 1976, P 2 INT S PROGRAMMIN
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Dean J, 1996, ACM SIGPLAN NOTICES, V31, P83, DOI 10.1145/236338.236344
   Fähndrich M, 2003, ACM SIGPLAN NOTICES, V38, P302, DOI 10.1145/949343.949332
   Fitzgerald R, 2000, SOFTWARE PRACT EXPER, V30, P199, DOI 10.1002/(SICI)1097-024X(200003)30:3<199::AID-SPE296>3.0.CO;2-2
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P191, DOI 10.1145/565816.503291
   GUPTA R, 1990, SIGPLAN NOTICES, V25, P272, DOI 10.1145/93548.93581
   Habermehl P, 2008, LECT NOTES COMPUT SC, V4962, P474, DOI 10.1007/978-3-540-78499-9_33
   Halbwachs N, 2008, ACM SIGPLAN NOTICES, V43, P339, DOI 10.1145/1379022.1375623
   Jhala R, 2007, LECT NOTES COMPUT SC, V4590, P193
   Jones Richard., 1996, GARBAGE COLLECTION
   Lahiri SK, 2003, LECT NOTES COMPUT SC, V2725, P141
   Lahiri SK, 2004, LECT NOTES COMPUT SC, V3114, P135
   PALSBERG J, 1991, SIGPLAN NOTICES, V26, P146
   Pizlo F, 2010, ACM SIGPLAN NOTICES, V45, P146, DOI 10.1145/1809028.1806615
   Sartor JB, 2010, ACM SIGPLAN NOTICES, V45, P471, DOI 10.1145/1809028.1806649
   Sonntag B, 2002, 40 C TECHN OBJ OR LA, P45
   Sonntag B, 2012, SOFTWARE PRACTICE EX, V44, P565
   Zendra O, 1997, ACM SIGPLAN NOTICES, V32, P125, DOI 10.1145/263700.263728
   Zendra O., 1999, Proceedings Technology of Object-Oriented Languages and Systems. TOOLS 32, P188, DOI 10.1109/TOOLS.1999.809425
NR 34
TC 2
Z9 2
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2015
VL 45
IS 12
BP 1639
EP 1657
DI 10.1002/spe.2300
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LK
UT WOS:000363501100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cook, CT
   Sun, YS
   Sitaraman, M
AF Cook, Charles T.
   Sun, Yu-Shan
   Sitaraman, Murali
TI Experience report: evolution of a web-integrated software development
   and verification environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Education; formal methods; IDE; reusable components; software
   engineering; verification; web application
AB This paper summarizes our experiences over the last 4years in creating a web-integrated software development and verification environment. The environment has been used for both research experimentation and education. It has been used in undergraduate computer science courses to teach modular software development and analytical reasoning principles at multiple institutions. In the process, the environment has undergone many refinements to meet demands for improved functionality and to leverage rapidly changing underlying technology for the improvements. The environment is tailored to present formal specifications and alternative implementations of components, and enable correctness checking through a server-side verifying compiler. This paper presents a detailed account of the development and evolution of the environmentits functionality, user interface, and underlying technologythat we hope will serve as a model for others, especially as the benefits of online learning systems are becoming increasingly obvious. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Cook, Charles T.; Sun, Yu-Shan; Sitaraman, Murali] Clemson Univ, Sch Comp, Clemson, SC 29634 USA.
C3 Clemson University
RP Cook, CT (corresponding author), Clemson Univ, Sch Comp, Clemson, SC 29634 USA.
EM ccook4@clemson.edu
OI Sun, Yu-Shan/0009-0002-5636-2986
FU NSF [CCF-0811748, CCF-1161916, DUE-1022191, DUE-1022941]; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1161916] Funding Source: National Science Foundation
FX We thank past and present members of our research groups at Clemson and
   Ohio State for their contributions to the ideas contained in this paper.
   This research has been funded in part by NSF grants CCF-0811748,
   CCF-1161916, DUE-1022191, and DUE-1022941.
CR [Anonymous], 2011, ONL C PHP C C RUB VB
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Cloud9 IDE Inc., 2011, CLOUD9 YOUR COD AN A
   Coderun Studio, 2009, WEB DEV DEPL TOOLS C
   Cook CT, 2013, CONF SOFTW ENG EDUC, P229, DOI 10.1109/CSEET.2013.6595254
   Cook CT, 2012, PROC INT CONF SOFTW, P1379, DOI 10.1109/ICSE.2012.6227243
   Cook CT, 2011, THESIS CLEMSON
   de Caso G, 2013, SOFTWARE PRACT EXPER, V43, P403, DOI 10.1002/spe.2143
   Drachova-Strang S., 2013, THESIS CLEMSON
   Jacobs B, 2010, LECT NOTES COMPUT SC, V6461, P304, DOI 10.1007/978-3-642-17164-2_21
   Klebanov V., 2011, LNCS, V6664, P154, DOI [10.1007/978-3-642-21437-0_14, DOI 10.1007/978-3-642-21437-0_14]
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Sitaraman M, 2011, FORM ASP COMPUT, V23, P607, DOI 10.1007/s00165-010-0154-3
   Smith H., 2013, THESIS CLEMSON
   [No title captured]
NR 15
TC 1
Z9 1
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2015
VL 45
IS 6
BP 857
EP 872
DI 10.1002/spe.2259
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG1LA
UT WOS:000353032900006
DA 2024-07-18
ER

PT J
AU Barros, FJ
AF Barros, Fernando J.
TI Aspect-oriented programming and pluggable software units: a comparison
   based on design patterns
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software composition; aspect programming; design patterns
ID MODEL
AB The support for software reuse has been a major goal in the design of programming languages. This goal, however, has proven difficult to reach, being only partially enabled by current software tools. In particular, reuse is not fully supported by object-oriented programming (OOP). Aspect-oriented programming (AOP) has introduced new operators that extend OOP, enabling a superior support for reusability. However, AOP operators exhibit limitations in supporting software reuse and more powerful constructs are still required. We consider the ability to define software in an independent manner as the key construct to enable systematic software reuse. To bridge the gap between independence and practical software tools, we have developed the concept of Independent and Pluggable Software Unit (PU), a construct that supports the definition of software topologies. In this paper, we compare PUs with AOP in their support for reusable software. To enable comparison, we employ some well described problems addressed by Software Design Patterns (SDPs). We provide PU and AOP versions of several SDPs, including, Observer, Composite, Command, Chain of Responsibility, and Proxy. In particular, we show that, whereas PUs provide a unified representation of design patterns, AOP representations do not achieve this unification. We also show that AOP solutions do not promote independent and reusable software.Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 Univ Coimbra, Dept Informat Engn, P-3030 Coimbra, Portugal.
C3 Universidade de Coimbra
RP Barros, FJ (corresponding author), Univ Coimbra, Dept Informat Engn, P-3030 Coimbra, Portugal.
EM barros@dei.uc.pt
RI Barros, Fernando J./H-5574-2019
OI Barros, Fernando J./0000-0002-3792-2354
FU Portuguese Foundation for Science and Technology
   [PTDC/EIA-EIA/100752/2008]; Fundação para a Ciência e a Tecnologia
   [PTDC/EIA-EIA/100752/2008] Funding Source: FCT
FX This work was supported by the Portuguese Foundation for Science and
   Technology under project PTDC/EIA-EIA/100752/2008.
CR Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Aldrich J, 2001, TECHNICAL REPORT
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   [Anonymous], 1997, Software engineering with reusable components
   [Anonymous], 1989, EXTEND USERS MANUAL
   [Anonymous], 1974, PROC IFIP C 74
   [Anonymous], 2008, GARTN ID 7 GRAND CHA
   Arbab F, 2004, MATH STRUCT COMP SCI, V14, P329, DOI 10.1017/S0960129504004153
   Arlow Jim., 2005, UML 2 UNIFIED PROCES
   Balasubramanian K, 2006, COMPUTER, V39, P33, DOI 10.1109/MC.2006.54
   Barais O., 2008, Software Evolution, P233
   Barros F, 2005, US Patent, Patent No. [6851104 B1, 6851104]
   Barros F, 2007, INT WORKSH SOFTW AD, P5
   Barros F., 2013, S APPL COMP COIMBR P, P1006
   Barros F., 2013, S THEOR MOD SIM WORK, P315
   Barros F, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P236, DOI 10.1109/QUATIC.2010.44
   Barros FJ, 1997, ACM T MODEL COMPUT S, V7, P505
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   BUSCHMAN F, 1996, PATTERN ORIENTED SOF
   Cacho Nelio., 2006, AOSD 06 P 5 INT C AS, P109
   Casanova M, 2002, MOD BAS SOFTW REUS E, P49
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garlan D., 1997, P 1997 C CTR ADV STU
   Garlan D, 2009, IEEE SOFTWARE, V26, P66, DOI 10.1109/MS.2009.86
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   Hirsch D, 2006, LECT NOTES COMPUT SC, V4344, P113
   Hoffman K, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P91
   Ingstrup M, 2005, 17 INT C SOFTW ENG K, P632
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Mens T, 2010, COMPUTER, V43, P42, DOI 10.1109/MC.2010.136
   Monroe RT, 1997, IEEE SOFTWARE, V14, P43, DOI 10.1109/52.566427
   OMG, 2012, PTC20121018 OMG
   Oquendo F., 2006, ACM SIGSOFT SOFTWARE, V31, P1
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pawlak R, 2006, FDN AOP J2EE DEV
   Rouvoy Romain, 2012, 15 ACM SIGSOFT S COM, P13, DOI [10.1145/2304736.2304741, DOI 10.1145/2304736.2304741]
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Shaw M, 2006, CMUISRI06101 CARN ME
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Szyperski C., 1998, COMPONENT SOFTW OBJE
   Wymore AW, 1967, A mathematical theory of systems engineering: The elements
   Zeigler B. P., 1976, Theory of Modeling and Simulation
NR 49
TC 2
Z9 2
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2015
VL 45
IS 3
BP 289
EP 314
DI 10.1002/spe.2224
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AZ7XW
UT WOS:000348429500001
OA Bronze
DA 2024-07-18
ER

PT J
AU Thomas, SW
   Snodgrass, RT
   Zhang, R
AF Thomas, Stephen W.
   Snodgrass, Richard T.
   Zhang, Rui
TI Benchmark frameworks and τ Bench
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE benchmarks; XML; temporal databases
ID PERFORMANCE; SCHEMA
AB Software engineering frameworks tame the complexity of large collections of classes by identifying structural invariants, regularizing interfaces, and increasing sharing across the collection. We wish to appropriate these benefits for families of closely related benchmarks, say for evaluating query engine implementation strategies. We introduce the notion of a benchmark framework, an ecosystem of benchmarks that are related in semantically rich ways and enabled by organizing principles. A benchmark framework is realized by iteratively changing one individual benchmark into another, say by modifying the data format, adding schema constraints, or instantiating a different workload. Paramount to our notion of benchmark frameworks are the ease of describing the differences between individual benchmarks and the utility of methods to validate the correctness of each benchmark component by exploiting the overarching ecosystem. As a detailed case study, we introduce Bench, a benchmark framework consisting of ten individual benchmarks, spanning XML, XQuery, XML Schema, and PSM, along with temporal extensions to each. The second case study examines the Mining Unstructured Data benchmark framework, and the third examines the potential benefits of rendering the TPC family as a benchmark framework. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Thomas, Stephen W.] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Snodgrass, Richard T.; Zhang, Rui] Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
C3 Queens University - Canada; University of Arizona
RP Thomas, SW (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM sthomas@cs.queensu.ca
FU NSF [IIS-0415101, IIS-0639106, IIS-0803229, IIS-1016205]; Microsoft
FX This research was supported in part by NSF grants IIS-0415101,
   IIS-0639106, IIS-0803229, and IIS-1016205 and a grant from Microsoft.
   Jennifer Dempsey helped develop tau Bench, including the Query Executor
   tool. We thank the referees for their helpful comments, which improved
   the paper.
CR Afanasiev L, 2005, LECT NOTES COMPUTER, V3671, P578, DOI [10.1007/11547273_11, DOI 10.1007/11547273_11]
   [Anonymous], 2012586 QUEENS U SCH
   [Anonymous], 2010, INTERNET MEASUREMENT, DOI DOI 10.1145/1879141.1879143
   [Anonymous], 2009, TR91 TIMECENTER
   Apache, LOG4J LOGG SERV
   Austern MatthewH., 1998, Generic programming and the STL: Using and extending the C++ Standard Template Library
   Bair J, 1997, WIRTSCHAFTSINF, V39, P25
   Barbosa Denilson., 2002, SIGMOD: Proc. of the ACM SIGMOD Intl. Conf. on Management of Data, P616, DOI DOI 10.1145/564691.564769
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Böhlen MH, 2000, ACM T DATABASE SYST, V25, P407, DOI 10.1145/377674.377665
   Bohme T., 2001, P GERMAN DATABASE C, P264
   Boncz PA., 2005, Cidr, V5, P225
   CORDY JR, 1991, COMPUT LANG, V16, P97, DOI 10.1016/0096-0551(91)90019-6
   Currim F, 2004, LECT NOTES COMPUT SC, V2992, P348
   Currim FA, 2012, IEEE T KNOWL DATA EN, V24, P1361, DOI 10.1109/TKDE.2011.74
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   DATE CJ, 1987, GUIDE SQL STANDARD
   Di Penta M, 2007, PROC IEEE INT CONF S, P64
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   Franceschet M, 2005, INT XML DAT S XSYM, P129
   Free Software Foundation, 2010, GNU GEN PUBL LIC
   Gamma Erich., 1995, DESIGN PATTERNS ELEM, V206
   Gao D, 2003, TR72 TIMECENTER
   Gao D, 2009, THESIS U ARIZONA TUC
   Gao D., 2003, P 29 INT C VER LARG, P632
   Gray J, 1993, The benchmark handbook for database and transasction systems
   Grosse-Kunstleve RW, 2002, J APPL CRYSTALLOGR, V35, P126, DOI 10.1107/S0021889801017824
   Henning JL, 2000, COMPUTER, V33, P28, DOI 10.1109/2.869367
   IBM Corporation, 2010, MATT TIM TEMP DAT MA
   Johnson RE, 1997, COMMUN ACM, V40, P39, DOI 10.1145/262793.262799
   Joshi S, 2007, THESIS U ARIZONA TUC
   Libxml, 2008, XML C PARS TOOLK GNO
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   McVoy L, 1996, PROCEEDINGS OF THE USENIX 1996 ANNUAL TECHNICAL CONFERENCE, P279
   Melton J, 1998, UNDERSTANDING SQLS S
   Mendelsohn N, 2004, XML SCHEMA 2
   Mendelsohn N, 2004, XML SCHEMA 1
   Microsoft Corporation, WSTEST WEB SERV BENC
   Naftalin M., 2006, JAVA GENERICS COLLEC
   Nicola M., 2007, P 2007 ACM SIGMOD IN, P937, DOI [10.1145/1247480.1247590, DOI 10.1145/1247480.1247590]
   Oracle Corporation, 2008, WORKSP MAN DEV GUID
   Pavlo A, 2011, PROC VLDB ENDOW, V5, P85, DOI 10.14778/2078324.2078325
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Runapongsa K, 2006, INFORM SYST, V31, P73, DOI 10.1016/j.is.2004.09.004
   Schmidt A., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P974
   SCHNEIDER SA, 1991, IEEE INTERNATIONAL CONFERENCE ON SYSTEMS ENGINEERING //, P129, DOI 10.1109/ICSYSE.1991.161096
   Shanmugasundaram J, 2001, SIGMOD RECORD, V30, P20, DOI 10.1145/603867.603871
   Snodgrass R., 2000, DEV TIME ORIENTED DA
   Snodgrass RT, 2008, DATA KNOWL ENG, V65, P223, DOI 10.1016/j.datak.2007.09.003
   Snodgrass RT, 2012, PROC INT CONF DATA, P114, DOI 10.1109/ICDE.2012.70
   SPEC, 2011, SPEC ORG INF
   SQL Standards, 2011, 907522011 SQL ISOIEC
   Stonebraker Mike., 2005, VLDB'05
   Sturm M, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-163
   Teradata Corporation, 2010, TER TEMP
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Thomas SW, 2009, THESIS U ARIZONA TUC
   Thomas SW, 2010, TR93 TIMECENTER
   Van der Vlist E, 2004, RELAX NG
   W3C, 2007, XQUERY 1 0 XML QUERY
   W3C, 2007, DOC OBJ MOD
   Walrath Kathy., 2004, The JFC Swing Tutorial: A Guide to Constructing GUIs, VSecond
   Wang Y, 2004, P 19 INT C DAT ENG B, P519
   Yao BB, 2004, PROC INT CONF DATA, P621, DOI 10.1109/ICDE.2004.1320032
   Ying Guang Li, 2001, Proceedings of the 2001 ACM CIKM. Tenth International Conference on Information and Knowledge Management, P167
NR 67
TC 1
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2014
VL 44
IS 9
BP 1047
EP 1075
DI 10.1002/spe.2189
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN2MI
UT WOS:000340419100002
DA 2024-07-18
ER

PT J
AU Marback, A
   Do, H
   He, K
   Kondamarri, S
   Xu, DX
AF Marback, Aaron
   Do, Hyunsook
   He, Ke
   Kondamarri, Samuel
   Xu, Dianxiang
TI A threat model-based approach to security testing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE threat modeling; threat trees; security testing; software testing
ID SQL INJECTION
AB Software security issues have been a major concern in the cyberspace community, so a great deal of research on security testing has been performed, and various security testing techniques have been developed. Threat modeling provides a systematic way to identify threats that might compromise security, and it has been a well-accepted practice by the industry, but test case generation from threat models has not been addressed yet. Thus, in this paper, we propose a threat model-based security testing approach that automatically generates security test sequences from threat trees and transforms them into executable tests. The security testing approach we consider consists of three activities in large: building threat models with threat trees; generating security test sequences from threat trees; and creating executable test cases by considering valid and invalid inputs. To support our approach, we implemented security test generation techniques, and we also conducted an empirical study to assess the effectiveness of our approach. The results of our study show that our threat tree-based approach is effective in exposing vulnerabilities. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Marback, Aaron; Do, Hyunsook; Kondamarri, Samuel] N Dakota State Univ, Fargo, ND 58105 USA.
   [He, Ke; Xu, Dianxiang] Dakota State Univ, Madison, SD USA.
C3 North Dakota State University Fargo; Dakota State University
RP Do, H (corresponding author), N Dakota State Univ, Fargo, ND 58105 USA.
EM hyunsook.do@ndsu.edu
FU NSF [CNS-0855106]
FX This work was supported in part by NSF under Award CNS-0855106.
CR Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 1990, Software testing techniques {
   Blackburn M, 2001, QUALITY WEEK     JUN
   *CENZ, 2008, APPL SEC TRENDS REP
   CGI Security, 2009, CROSS SIT SCRIPT FAQ
   Fonseca J, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P365, DOI 10.1109/PRDC.2007.55
   HALFOND W, 2006, P ACM SIGSOFT S FDN
   Howard M., 2003, Writing Secure Code
   Jürjens J, 2008, ELECTRON NOTES THEOR, V220, P93, DOI 10.1016/j.entcs.2008.11.008
   Jürjens J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P408, DOI 10.1109/ASE.2001.989840
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Lam M, 2008, P PEPM SAN FRANC CA
   Larsen E, 2000, P USENIX WIND SYST S, P1
   Le Traon Y., 2007, P INT S SOFTW REL EN
   Martin E., 2007, P 16 INT C WORLD WID, P667, DOI DOI 10.1145/1242572.1242663
   MARTIN E, 2007, 3 INT WORKSH SOFTW E
   Martin E, 2006, LECT NOTES COMPUT SC, V4307, P139
   MASOOD A, 2005, SERCTR277 PURD U
   Masood A, 2009, IEEE T SOFTWARE ENG, V35, P654, DOI 10.1109/TSE.2009.35
   McDermott J, 2001, 17TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P366, DOI 10.1109/ACSAC.2001.991553
   Mouelhi T, 2007, P MUT
   Mouelhi T, 2008, P INT C MOD DRIV ENG
   Mouelhi T, 2009, P INT C SOFTW TEST V
   Oehlert P, 2005, IEEE SECUR PRIV, V3, P58, DOI 10.1109/MSP.2005.55
   Potter B, 2004, IEEE SECUR PRIV, V2, P81, DOI 10.1109/MSP.2004.84
   RICHARDSON R, 2007, CSI SURVEY COMPUTER
   Shahriar H, 2008, INT CONF QUAL SOFTW, P77, DOI 10.1109/QSIC.2008.33
   Shahriar H, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P47, DOI 10.1109/IWSESS.2009.5068458
   Sindre G, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P120, DOI 10.1109/TOOLS.2000.891363
   Swiderski F., 2004, Threat modeling
   *SYM, SYM INT SEC THREAT R
   Thompson HH, 2002, DR DOBBS J, V27, P24
   Tuya J, 2007, INFORM SOFTWARE TECH, V49, P398, DOI 10.1016/j.infsof.2006.06.009
   WANG L, 2007, 3 INT WORKSH SOFTW E
   Wassermann G, 2008, P INT C SOFTW TEST A
   *WEBCOHORT INC, 2004, ONL 10 WEB APPL AR S
   Wimmel G, 2002, LECT NOTES COMPUT SC, V2495, P471
   Wysopal C., 2006, ART SOFTWARE SECURIT
   Xu D., 2008, WILEY ENCY COMPUTER
   Xu DX, 2006, IEEE T SOFTWARE ENG, V32, P265, DOI 10.1109/TSE.2006.40
NR 41
TC 45
Z9 51
U1 0
U2 30
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2013
VL 43
IS 2
BP 241
EP 258
DI 10.1002/spe.2111
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 071SP
UT WOS:000313614800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fdez-Riverola, F
   Glez-Peña, D
   López-Fernández, H
   Reboiro-Jato, M
   Méndez, JR
AF Fdez-Riverola, F.
   Glez-Pena, D.
   Lopez-Fernandez, H.
   Reboiro-Jato, M.
   Mendez, J. R.
TI A JAVA application framework for scientific software development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java application framework; reusable components; component-based
   software development
ID C++ FRAMEWORK; TOOL
AB This paper presents AIBench (SING group, Ourense, Spain), a JAVA desktop application framework mainly focused on scientific software development, with the goal of improving the productivity of research groups. Following the MVC design pattern, the programmer is able to develop applications using only three types of concepts: operations, data-typesand views. The framework provides the rest of the functionality present in typical scientific applications, including user parameter requests, logging facilities, multithreading execution, experiment repeatability and graphic user interface generation, among others. The proposed framework is implemented following a plugin-based architecture, which also allows assembling new applications by the reuse of modules from past development projects. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Fdez-Riverola, F.; Glez-Pena, D.; Lopez-Fernandez, H.; Reboiro-Jato, M.; Mendez, J. R.] Univ Vigo, Dept Comp Sci, ESEI, Orense 32004, Spain.
C3 Universidade de Vigo
RP Fdez-Riverola, F (corresponding author), Univ Vigo, Dept Comp Sci, ESEI, Campus Lagoas, Orense 32004, Spain.
EM riverola@uvigo.es
RI Fdez-Riverola, Florentino/G-1411-2011; Reboiro-Jato,
   Miguel/AAB-8453-2022; Méndez Reboredo, José Ramón/F-3993-2016;
   Glez-Pena, Daniel/D-5922-2014; Lopez-Fernandez, Hugo/H-7558-2017
OI Fdez-Riverola, Florentino/0000-0002-3943-8013; Reboiro-Jato,
   Miguel/0000-0001-8749-2703; Méndez Reboredo, José
   Ramón/0000-0002-1935-4760; Glez-Pena, Daniel/0000-0002-6129-7245;
   Lopez-Fernandez, Hugo/0000-0002-6476-7206
FU Spanish Ministry of Science and Innovation; Plan E from Spanish
   Government; European Union from ERDF [TIN2009-14057-C03-02]; University
   of Vigo
FX This work was partially funded by the Spanish Ministry of Science and
   Innovation, the Plan E from the Spanish Government and the European
   Union from the ERDF (TIN2009-14057-C03-02). M. Reboiro-Jato was
   supported by a pre-doctoral fellowship from University of Vigo. We want
   to thank all the members of the Bioscope group for their brilliant
   conception of the DPD application.
CR [Anonymous], LIGHTW SCRIPT JAV
   [Anonymous], MICR VIS C PROGR MFC
   [Anonymous], AI WORKB
   [Anonymous], OSGI SERV PLATF REL
   Apache Software Foundation, Apache Log4j 2
   Borrajo JM, 2007, ARTIFICIAL INTELLIGE
   Cheung KKT, 2003, SOFTWARE PRACT EXPER, V33, P523, DOI 10.1002/spe.518
   Cieslik M, 2011, BMC BIOINFORMATICS, V12, DOI 10.1186/1471-2105-12-61
   Cunningham H., 2002, P 40 ANN M ASS COMP, P168
   Demko AB, 2009, SOFTWARE PRACT EXPER, V39, P641, DOI 10.1002/spe.915
   Fayad Mohamed E., 1999, Building Application Frameworks: Object-oriented Foundations of Framework Design
   Gaertner N, 2000, SOFTWARE PRACT EXPER, V30, P1, DOI 10.1002/(SICI)1097-024X(200001)30:1<1::AID-SPE288>3.0.CO;2-4
   Gamma Erich., 1994, DESIGN PATTERNS
   Glez-Peña D, 2010, COMPUT METH PROG BIO, V98, P191, DOI 10.1016/j.cmpb.2009.12.003
   Glez-Peña D, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-187
   Gstreamer, OP SOURC MULT FRAM
   Lourenço A, 2009, J BIOMED INFORM, V42, P710, DOI 10.1016/j.jbi.2009.04.002
   Mierswa I., 2006, P P 12 ACM SIGKDD IN
   Oinn T, 2004, BIOINFORMATICS, V20, P3045, DOI 10.1093/bioinformatics/bth361
   Parsons D, 2006, SOFTWARE PRACT EXPER, V36, P157, DOI 10.1002/spe.694
   Pree W, 2001, P 1 INT WORKSH EMB S
   Pree Wolfgang., 1994, P 8 EUROPEAN C OBJEC, P150
   Rocha I, 2010, BMC SYST BIOL, V4, DOI 10.1186/1752-0509-4-45
   Santos HM, 2010, TALANTA, V82, P1412, DOI 10.1016/j.talanta.2010.07.007
   Schaerf A, 2000, SOFTWARE PRACT EXPER, V30, P233, DOI 10.1002/(SICI)1097-024X(200003)30:3<233::AID-SPE297>3.0.CO;2-K
   Sun Microsystems, NETB PLATF
   Sun Microsystems, ENT JAVABEANS TECHN
   Sun Microsystems, JAV SERV FAC TECHN
   Sun Microsystems, JAV COMP COMP
   The Eclipse Foundation, ECLIPS RICH CLIENT P
   The Eclipse Foundation, EQUIN
   van Gurp J, 2001, SOFTWARE PRACT EXPER, V31, P277, DOI 10.1002/spe.366
   Witten I. H., 2005, DATA MINING PRACTICA
NR 33
TC 9
Z9 9
U1 0
U2 29
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2012
VL 42
IS 8
BP 1015
EP 1036
DI 10.1002/spe.1108
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 970MG
UT WOS:000306133400004
DA 2024-07-18
ER

PT J
AU Ferrari, L
   Zhu, HB
AF Ferrari, Luca
   Zhu, Haibin
TI Autonomous role discovery for collaborating agents
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE JAVA; bytecode manipulation; roles; agents
AB Role-based collaboration is an emerging methodology to facilitate an organizational structure, provide orderly system behavior, and consolidate system security for both human and non-human entities, like agents, that collaborate and coordinate their activities with or within systems. Interaction management must, however, be able to handle run-time and dynamic scenarios. Hence, every role-based collaboration system must provide a good level of dynamism, that is, provide an agent with the capability to assume, use, and release a role depending on run-time conditions. Dynamism, however, does not suffice in adaptative scenarios: being able to use a role dynamically is important, but in order to enhance interagent communications, the capability to perceive a played role is important too. Role perceivability is the capability of an agent to autonomously recognize the role played by another entity without the need to ask a yellow-page directory. Whereas dynamism has been achieved with different techniques and often through language support, role perceivability is more difficult to achieve and to some extent even more important because it can boost sociality among entities and agents. In object-oriented programming languages, such as JAVA, role perceivability could be achieved with appropriate changes to the agent/entity class structure, but this requires compile time constraints that are, in their nature, not dynamic. This paper proposes an approach to remedy the above problems: maintaining an appropriate level of dynamism. The work presented here allows a JAVA agent to make its role perceivable to other entities as if it is applied at compile time. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Zhu, Haibin] Nipissing Univ, Dept Comp Sci & Math, N Bay, ON, Canada.
C3 Nipissing University
RP Ferrari, L (corresponding author), Via Pavia 3, I-41043 Modena, Italy.
EM luca.ferrari@ieee.org
RI Zhu, Haibin/S-5988-2019
OI Zhu, Haibin/0000-0003-1922-1631
CR Ahn GJ, 2009, IEEE T SYST MAN CY C, V39, P562, DOI 10.1109/TSMCC.2009.2020437
   [Anonymous], INT J COMPUT INTELL
   [Anonymous], OOPSLA 87
   [Anonymous], J OBJECT TECHNOL
   Cabri G, 2003, LECT NOTES COMPUT SC, V2888, P145
   Cabri G, 2006, MOBILE MIDDLEWARE
   Cabri G, 2003, P 2 INT C PRINC PRAC, P7
   Cabri G, 2005, DIIAG20051 U MOD REG
   Cabri G, 2009, IBM SYST J, V44, P185
   CABRI G, 2007, INT J INTELLIGENT CO, V12, P179
   Cabri G, 2003, P IEEE SYST MAN CYB
   Cavazos J, 2006, P 15 INT C COMP CONS
   Chiba S, 2003, LECT NOTES COMPUT SC, V2830, P364
   Chiba S, 1998, P ACM OOPSLA 1998 WO
   Ferrari L, 2008, INT S COLLAB TECHNOL, P391, DOI 10.1109/CTS.2008.4543956
   Ferrari L, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL SYMPOSIUM ON COLLABORATIVE TECHNOLOGIES AND SYSTEMS, P408, DOI 10.1109/CTS.2009.5067508
   Gamma Erich., 1994, DESIGN PATTERNS
   HIRSH B, 2003, P 1 EUR WORKSH MULT
   Kendall EA, 2000, IEEE CONCURR, V8, P34, DOI 10.1109/4434.846192
   KENNEDY DB, 1981, J POLICE SCI ADMIN, V9, P346
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Luck M., 2005, AGENT TECHNOLOGY COM
   McCallum A, 2007, J ARTIF INTELL RES, V30, P249, DOI 10.1613/jair.2229
   Prasad M. V. N., 1996, ICMAS-96 Proceedings. Second International Conference on Multi-Agent Systems, P291
   Turner RalphH., 2001, HDB SOCIOLOGICAL THE, P233, DOI DOI 10.1007/0-387-36274-6_12
   Yu Zhang, 2008, Journal of Software, V3, P9, DOI 10.4304/jsw.3.6.9-20
   Zhu HB, 2008, PROCEEDINGS OF THE SEVENTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, P144, DOI 10.1109/COGINF.2008.4639162
   Zhu HB, 2008, IEEE T SYST MAN CY C, V38, P377, DOI 10.1109/TSMCC.2008.919168
   Zhu HB, 2006, IEEE T SYST MAN CY C, V36, P578, DOI 10.1109/TSMCC.2006.875726
   [No title captured]
NR 30
TC 2
Z9 2
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2012
VL 42
IS 6
BP 707
EP 731
DI 10.1002/spe.1091
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 936NP
UT WOS:000303597500003
DA 2024-07-18
ER

PT J
AU Bainomugisha, E
   Vallejos, J
   Boix, EG
   Costanza, P
   D'Hondt, T
   De Meuter, W
AF Bainomugisha, Engineer
   Vallejos, Jorge
   Boix, Elisa Gonzalez
   Costanza, Pascal
   D'Hondt, Theo
   De Meuter, Wolfgang
TI Bringing Scheme programming to the iPhoneuExperience
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE iPhone development; Scheme; Objective-C; language symbiosis; interactive
   scripting environment; event-driven programming
AB The iPhone SDK provides a powerful platform for the development of applications that make use of iPhone capabilities, such as sensors, GPS, Wi-Fi, or Bluetooth connectivity. We observe that so far the development of iPhone applications has mostly been restricted to using Objective-C. However, developing applications in plain Objective-C on the iPhone OS suffers from limitations, such as the need for explicit memory management and lack of syntactic extension mechanism. Moreover, when developing distributed applications in Objective-C, programmers have to manually deal with distribution concerns, such as service discovery, remote communication, and failure handling. In this paper, we discuss our experience in porting the Scheme programming language to the iPhone OS and how it can be used together with Objective-C to develop iPhone applications. To support the interaction between Scheme programs and the underlying iPhone APIs, we have implemented a language symbiosis layer that enables programmers to access the iPhone SDK libraries from Scheme. In addition, we have designed high-level distribution constructs to ease the development of distributed iPhone applications in an event-driven style. We validate and discuss these constructs with a series of examples, including an iPod controller, a maps application, and a distributed multiplayer Scrabble-like game. We discuss the lessons learned from this experience for other programming language ports to mobile platforms. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Bainomugisha, Engineer; Vallejos, Jorge; Boix, Elisa Gonzalez; Costanza, Pascal; D'Hondt, Theo; De Meuter, Wolfgang] Vrije Univ Brussel, Software Languages Lab, B-1050 Brussels, Belgium.
C3 Vrije Universiteit Brussel
RP Bainomugisha, E (corresponding author), Vrije Univ Brussel, Software Languages Lab, Pl Laan 2, B-1050 Brussels, Belgium.
EM ebainomu@vub.ac.be
RI Bainomugisha/N-6925-2017
FU SAFE-IS of the Research Foundation-Flanders (FWO); IWOIB-IRSIB, Belgium;
   ICT of the ISRIB
FX We thank Nick De Cooman for undertaking the AmbiScrabble project to
   validate the Scheme and Objective-C symbiosis. We are grateful to the
   anonymous reviewers and the editors who made important suggestions to
   improve the paper. We thank Eric Tanter for the initial ideas about this
   work and also for suggesting the venue of the publication. We thank
   Ellie D'Hondt for the final review of the paper. Engineer Bainomugisha
   is funded by the SAFE-IS project in the context of the Research
   Foundation-Flanders (FWO); Elisa Gonzalez Boix is funded by the
   Prospective Research for Brussels program of IWOIB-IRSIB, Belgium; Jorge
   Vallejos is funded by the VariBru project of the ICT Impulse Programme
   of the ISRIB.
CR Anderson K, 2000, P SCHEM FUNCT PROGR
   Apple Inc, 2009, US JAV BRIDG
   Apple Inc, 2010, IPHONE DEV CTR
   Bothner Per, 1998, P USENIX ANN TECHNIC, P41
   Cant G, 2009, PORTABLE OBJECTIVE C
   D'Hondt T, 2010, SKEM INT
   Dedecker J, 2006, LECT NOTES COMPUT SC, V4067, P230
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Feeley M, 2009, GAMB SCHEM SYST
   Felleisen M, 2010, DES WORLDS IM PROGR
   Flatt M, 2009, PLT GUIDE PLT SCHEME
   GOLUBSKI W, 1995, COMPUT LANG, V21, P67, DOI 10.1016/0096-0551(95)00002-L
   Google Inc, 2009, GOOGL MAPS MOB
   Google Inc, 2009, ANDR OS
   Gybels K, 2006, COMPUT LANG SYST STR, V32, P109, DOI 10.1016/j.cl.2005.10.003
   GYBELS K, 2003, P WORKSH DECL PROGR
   Kaasinen E, 2003, PERS UBIQUIT COMPUT, V7, P70, DOI 10.1007/s00779-002-0214-7
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Kochan S.G., 2009, Programming in Objective-C 2.0
   Krishnamurthi S, 2009, P INT LISP C ILC 09
   Mascolo C, 2002, LECT NOTES COMPUT SC, V2497, P20
   Pedro P, 2003, P SCHEM FUNCT PROGR
   PyOBjC Project, 2009, PYOBJC PYTH OBJ C BR
   TweakerSoft, 2009, AR
   Van Cutsem T, 2009, COMPUT LANG SYST STR, V35, P80, DOI 10.1016/j.cl.2008.06.005
   Van Cutsem T, 2007, P INT C CHIL COMPUT, P3, DOI 10.1109/SCCC.2007.12
   Van Cutsem Tom, 2007, P ICDL 07, P222
   Wikipedia, 2010, APP STOR
NR 28
TC 2
Z9 2
U1 1
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2012
VL 42
IS 3
BP 331
EP 356
DI 10.1002/spe.1073
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 887KP
UT WOS:000299926600004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lokuciejewski, P
   Plazar, S
   Falk, H
   Marwedel, P
   Thiele, L
AF Lokuciejewski, Paul
   Plazar, Sascha
   Falk, Heiko
   Marwedel, Peter
   Thiele, Lothar
TI Approximating Pareto optimal compiler optimization sequences-a trade-off
   between WCET, ACET and code size
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 13th IEEE International Symposium on Object/Component/Service-Oriented
   Real-Time Distributed Computing (ISORC)
CY MAY 05-06, 2010
CL Carmona, SPAIN
SP IEEE
DE real-time; WCET; compiler; optimization; multi-objective; Pareto optimal
AB With the growing complexity of embedded systems software, high code quality can only be achieved using a compiler. Sophisticated compilers provide a vast spectrum of various optimizations to improve code aggressively w.r.t. different objective functions, e. g. average-case execution time (ACET) or code size. Owing to the complex interactions between the optimizations, the choice for a promising sequence of code transformations is not trivial. Compiler developers address this problem by proposing standard optimization levels, e. g. O3 or Os. However, previous studies have shown that these standard levels often miss optimization potential or might even result in performance degradation. In this paper, we propose the first adaptive worst-case execution time (WCET)-aware compiler framework for an automatic search of compiler optimization sequences that yield highly optimized code. Besides the objective functions ACET and code size, we consider the WCET which is a crucial parameter for real-time systems. To find suitable trade-offs between these objectives, stochastic evolutionary multi-objective algorithms identifying Pareto optimal solutions for the objectives < WCET, ACET > and < WCET, code size > are exploited. A comparison based on statistical performance assessments is performed that helps to determine the most suitable multi-objective optimizer. The effectiveness of our approach is demonstrated on real-life benchmarks showing that standard optimization levels can be significantly outperformed. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Lokuciejewski, Paul; Plazar, Sascha; Falk, Heiko; Marwedel, Peter] TU Dortmund Univ, D-44221 Dortmund, Germany.
   [Thiele, Lothar] ETH, Comp Engn & Networks Lab, CH-8092 Zurich, Switzerland.
C3 Dortmund University of Technology; Swiss Federal Institutes of
   Technology Domain; ETH Zurich
RP Lokuciejewski, P (corresponding author), TU Dortmund Univ, D-44221 Dortmund, Germany.
EM paul.lokuciejewski@tu-dortmund.de
CR *ABSINT ANG INF GM, WORST CAS EXT TIM AN
   Agakov F, 2006, INT SYM CODE GENER, P295
   [Anonymous], P ACM SIGPLAN SIGBED
   [Anonymous], P 9 INT WORKSH WORST
   [Anonymous], T ARCHIT CODE OPTIM
   [Anonymous], P 1 WORKSH STAT MACH
   [Anonymous], P ACM SIGPLAN SIGBED
   [Anonymous], 1998, Practical nonparametric statistics
   [Anonymous], APPL MULTIOBJECTIVE
   [Anonymous], P ACM SIGMETRICS INT
   Bleuler S, 2003, LECT NOTES COMPUT SC, V2632, P494
   Bright Paul, 1992, P1
   Campoy AM, 2005, EUROMICRO, P49
   Cooper KD, 1999, ACM SIGPLAN NOTICES, V34, P1, DOI 10.1145/315253.314414
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Deverge JF, 2007, EUROMICRO, P179, DOI 10.1109/ECRTS.2007.37
   Falk H, 2010, REAL-TIME SYST, V46, P251, DOI 10.1007/s11241-010-9101-x
   Falk H, 2009, DES AUT CON, P732
   Falk H, 2009, DES AUT CON, P726
   Falk H, 2006, EMB SYST REAL TIME M, P121, DOI 10.1109/ESTMED.2006.321284
   Goodwin DW, 1996, SOFTWARE PRACT EXPER, V26, P929, DOI 10.1002/(SICI)1097-024X(199608)26:8<929::AID-SPE40>3.0.CO;2-T
   Guthaus MR, 2001, WWC-4: IEEE INTERNATIONAL WORKSHOP ON WORKLOAD CHARACTERIZATION, P3, DOI 10.1109/WWC.2001.990739
   Hoste K, 2008, INT SYM CODE GENER, P165
   Kadlec Albrecht, 2010, Proceedings of the 2010 13th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC 2010). Volume I: Main Symposium, P123, DOI 10.1109/ISORC.2010.27
   Khare V, 2003, LECT NOTES COMPUT SC, V2632, P376
   KNOWLES J, 2005, P 3 INT C EV MULT OP, P1
   Kunzli S., 2006, THESIS SWISS FEDERAL
   Laumanns M., 2002, Parallel Problem Solving from Nature - PPSN VII. 7th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2439), P44
   Lee CH, 1997, INT SYMP MICROARCH, P330, DOI 10.1109/MICRO.1997.645830
   Lokuciejewski Paul, 2010, Proceedings of the 2010 13th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC 2010). Volume I: Main Symposium, P115, DOI 10.1109/ISORC.2010.15
   Lokuciejewski P, 2011, EMBED SYST, P1, DOI 10.1007/978-90-481-9929-7
   Malardalen WCET research group, WCET BENCHM
   Maneeratana K, 2006, LECT NOTES COMPUT SC, V4193, P473
   Memik G, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P39, DOI 10.1109/ICCAD.2001.968595
   Muchnick S., 1997, ADV COMPILER DESIGN
   PRASAD WZ, 2004, P 10 IEEE REAL TIM E, P472
   Suhendra V, 2005, REAL TIM SYST SYMP P, P223
   Thiele L, 2002, DES AUT CON, P880, DOI 10.1109/DAC.2002.1012746
   Zhao M, 2003, ACM SIGPLAN NOTICES, V38, P1, DOI 10.1145/780731.780734
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E., 2001, Evolutionary Methods for Design Optimization and Control with Applications to Industrial Problems, P95100, DOI DOI 10.1007/978-3-540-30217-9_75
   Zivojnovic V., 1994, Proceedings of the 5th International Conference on Signal Processing Applications and Technology, P715
   TDSP BENCHMARK SUITE
   [No title captured]
NR 44
TC 13
Z9 15
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2011
VL 41
IS 12
SI SI
BP 1437
EP 1458
DI 10.1002/spe.1079
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 842NP
UT WOS:000296606500004
DA 2024-07-18
ER

PT J
AU Silva, R
   Pascal, C
   Thai, SH
   Butler, M
AF Silva, Renato
   Pascal, Carine
   Thai Son Hoang
   Butler, Michael
TI Decomposition tool for Event-B
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE event-B; decomposition; shared event; shared variable; formal methods
ID REFINEMENT
AB Two methods have been identified for Event-B model decomposition: shared variable and shared event. The purpose of this paper is to introduce the two approaches and the respective tool support in the Rodin platform. Besides alleviating the complexity for large systems and respective proofs, decomposition allows team development in parallel over the same Event-B project which is very attractive in the industrial environment. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Silva, Renato; Butler, Michael] Univ Southampton, Southampton, Hants, England.
   [Pascal, Carine] Systerel, Aix En Provence, France.
   [Thai Son Hoang] Swiss Fed Inst Technol, Zurich, Switzerland.
C3 University of Southampton; Swiss Federal Institutes of Technology
   Domain; ETH Zurich
RP Silva, R (corresponding author), Univ Southampton, Southampton, Hants, England.
EM ras07r@ecs.soton.ac.uk
OI Butler, Michael/0000-0003-4642-5373
FU Fundacao Ciencia e Tecnologia (FCT-Portugal); European Commission
   [214158]
FX R. Silva is sponsored by a Fundacao Ciencia e Tecnologia (FCT-Portugal)
   scholarship. Part of this research was carried out within the European
   Commission ICT DEPLOY (http://www.deployproject.eu) under grant number
   214158.
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial JR, 2007, FUND INFORM, V77, P1
   ABRIAL JR, 2009, EVENT MODEL DE UNPUB
   [Anonymous], 2009, PROB
   Back RJ, 1998, ACTA INFORM, V35, P921, DOI 10.1007/s002360050148
   BALL E, 2006, FM 06 DOCT S
   BALL E, 2008, THESIS SOUTHAMPTON U
   Butler M, 2002, DES AUTOM EMBED SYST, V6, P355, DOI 10.1023/A:1016503426126
   Butler M, 2006, SYNCHRONISATION BASE, P47
   BUTLER M, 1997, LNCS, V1212, P221
   BUTLER M, 2007, BCS FACS CHRISTM 200, P1
   Butler M. J., 1993, CONCUR '93. 4th International Conference on Concurrency Theory Proceedings, P217
   Butler M, 2009, LECT NOTES COMPUT SC, V5423, P20
   BUTLER MJ, 1992, THESIS OXFORD U, P61
   Go K, 1999, IEEE T SOFTWARE ENG, V25, P258, DOI 10.1109/32.761449
   Hoang TS, 2010, LECT NOTES COMPUT SC, V5977, P319, DOI 10.1007/978-3-642-11811-1_24
   Hoare C., 1985, Prentice-Hall International Series in Computer Science
   *ISO, 1987, LOTOS FORM DESCR TEC
   Lanoix A, 2008, TASE 2008: SECOND IFIP/IEEE INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P297, DOI 10.1109/TASE.2008.39
   *ROD, RODIN PROJ
   SILVA R, PARALLEL COMPOSITION
NR 21
TC 24
Z9 25
U1 0
U2 4
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2011
VL 41
IS 2
SI SI
BP 199
EP 208
DI 10.1002/spe.1002
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718FH
UT WOS:000287106000008
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Oh, H
   Yi, K
AF Oh, Hakjoo
   Yi, Kwangkeun
TI An algorithmic mitigation of large spurious interprocedural cycles in
   static analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE static analysis; interprocedural analysis; abstract interpretation;
   spurious cycles; fixpoint algorithm
ID DATA-FLOW ANALYSIS; DOMAIN
AB We present a simple algorithmic extension of the approximate call-strings approach to mitigate substantial performance degradation caused by spurious interprocedural cycles. Spurious interprocedural cycles are, in a realistic setting, the key reasons for why approximate call-return semantics in both context-sensitive and -insensitive static analysis can make the analysis much slower than expected. In the approximate call-strings-based context-sensitive static analysis, because the number of distinguished contexts is finite, multiple call-contexts are inevitably joined at the entry of a procedure and the output at the exit is propagated to multiple return-sites. We found that these multiple returns frequently create a single large cycle (we call it 'butterfly cycle') covering almost all parts of the program and such a spurious cycle makes analyses very slow and inaccurate. Our simple algorithmic technique (within the fixpoint iteration algorithm) identifies and prunes these spurious interprocedural flows. The technique's effectiveness is proven by experiments with a realistic C analyzer to reduce the analysis time by 7-96%. As the technique is algorithmic, it can be easily applicable to existing analyses without changing the underlying abstract semantics, it is orthogonal to the underlying abstract semantics' context-sensitivity, and its correctness is obvious. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Oh, Hakjoo] Seoul Natl Univ, Sch Comp Sci & Engn, Programming Res Lab, Seoul 151742, South Korea.
C3 Seoul National University (SNU)
RP Oh, H (corresponding author), Seoul Natl Univ, Sch Comp Sci & Engn, Programming Res Lab, 599 Gwanak Ro Gwanak Gu, Seoul 151742, South Korea.
EM pronto@ropas.snu.ac.kr
RI ‍, 오학주[ 부교수 / 컴퓨터학과 ]/AAW-5194-2020
FU Korea Ministry of Education, Science and Technology (MEST)/National
   Research Foundation of Korea (NRF) [2009-0063247]; School of Electrical
   Engineering and Computer Science, Seoul National University
FX This work was supported by the Engineering Research Center of Excellence
   Program of Korea Ministry of Education, Science and Technology
   (MEST)/National Research Foundation of Korea (NRF) (Grant 2009-0063247)
   and the Brain Korea 21 Project, School of Electrical Engineering and
   Computer Science, Seoul National University.
CR [Anonymous], P 7 INT S MEM MAN
   Balakrishnan G, 2004, LECT NOTES COMPUT SC, V2985, P5
   BLANCHET B, 2003, DESIGN, P196
   BOURDONCLE F, 1993, LECT NOTES COMPUTER, V735, P128
   CHAMBERS C, 1996, FRAMEWORKS ULTRA INT
   Cousot Patrick, 1977, P 4 ACM S PRINC PROG, P238, DOI [10.1145/512950.512973, DOI 10.1145/512950.512973]
   JHEE Y, 2008, WORKSH 30 YEARS INT
   Jung YB, 2005, LECT NOTES COMPUT SC, V3672, P203
   Karkare B, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1286821.1286829
   Khedker U., 2009, Data Flow Analysis: Theory and Practice, V1st
   Khedker UP, 2008, LECT NOTES COMPUT SC, V4959, P213
   Martin F, 1999, LECT NOTES COMPUT SC, V1575, P63
   MARTIN F, 1998, INT J SOFTW TOOLS TE, V2, P46
   Myers EugeneM., 1981, P 8 ACM SIGPLAN SIGA, P219, DOI 10.1145/567532.567556
   OH H, 2009, LECT NOTES COMPUTER, V5904
   PNUELI ASM, 1981, PROGRAM FLOW ANAL TH, pCH7
   REPS T, 1988, INFORM SOFTWARE TECH, V40, P5
   Reps ThomasW., 1995, P ACM S PRINCIPLES P, P49
   Rival X, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275501
   Sagiv M, 1996, THEOR COMPUT SCI, V167, P131, DOI 10.1016/0304-3975(96)00072-2
   SHAPIRO M, 1997, LECT NOTES COMPUTER, V1302, P16
   SRIDHARAN M, 2006, PLDI 06, P387
   Whaley John., 2004, PROGRAMMING LANGUAGE, P131
NR 23
TC 6
Z9 6
U1 0
U2 3
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2010
VL 40
IS 8
BP 585
EP 603
DI 10.1002/spe.969
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 627MS
UT WOS:000280044400001
DA 2024-07-18
ER

PT J
AU Spinellis, D
AF Spinellis, Diomidis
TI User-level operating system transactions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE user-level transaction; snapshot; ZFS; snapshot isolation concurrency
   control
AB User-level operating system transactions allow system administrators and ordinary users to perform a sequence of file operations and then commit them as a group, or abort them without leaving any trace behind. Such a facility can aid many system administration and software development tasks. The snapshot isolation concurrency control mechanism allows transactions to be implemented without locking individual system calls; conflicts are detected when the transaction is ready to commit. Along these lines we have implemented a user-space transaction monitor that is based on ZFS snapshots and a file system event monitor. Transactions are committed through a robust and efficient algorithm that merges the operations performed on a file system's clone back to its parent. Both the performance impact and the implementation cost of the transaction monitor we describe are fairly small. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 Athens Univ Econ & Business, Dept Management Sci & Technol, Athens, Greece.
C3 Athens University of Economics & Business
RP Spinellis, D (corresponding author), Athens Univ Econ & Business, Dept Management Sci & Technol, Athens, Greece.
EM dds@aueb.gr
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897
FU Athens University of Economics and Business [51]
FX Contract/grant sponsor: Athens University of Economics and Business:
   contract/grant number: 51
CR BERENSON H, 1995, SIGMOD, P1
   ESWARAN KP, 1976, COMMUN ACM, V19, P624, DOI 10.1145/360363.360369
   Evans J, 1999, PROCEEDINGS OF THE FREENIX TRACK, P19
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Gray J., 1981, P 7 INT C VERY LARGE, P144
   HAERDER T, 1983, COMPUT SURV, V15, P287, DOI 10.1145/289.291
   HERLIHY M, 1993, ISCA, P289, DOI DOI 10.1145/165123.165164
   Kumar P., 1993, Proceedings of the Second International Conference on Parallel and Distributed Information Systems (Cat. No.93TH0493-7), P202, DOI 10.1109/PDIS.1993.253092
   LU Q, 1994, OPERATING SYSTEMS RE, V28, P81
   McDougall R., 2006, Solaris Performance and Tools: DTrace and MDB Techniques for Solaris 10 and OpenSolaris
   McKusick Marshall., 2004, DESIGN IMPLEMENTATIO
   McKusick MK, 1999, PROCEEDINGS OF THE FREENIX TRACK, P1
   Saito Y, 2005, ACM COMPUT SURV, V37, P42, DOI 10.1145/1057977.1057980
   SATYANARYANAN M, 1994, ACM T COMPUT SYST, V12, P33, DOI 10.1145/174613.174615
   Shneiderman B., 2010, DESIGNING USER INTER
   Singh A., 2007, Mac OS X internals: a systems approach
   Spinellis D, 2005, IEEE SOFTWARE, V22, P108, DOI 10.1109/MS.2005.140
   Wright Charles P., 2007, ACM Transactions on Storage, V3, P1, DOI 10.1145/1242520.1242521
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 28
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP 25
PY 2009
VL 39
IS 14
BP 1215
EP 1233
DI 10.1002/spe.935
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 496AV
UT WOS:000269941200003
DA 2024-07-18
ER

PT J
AU Bölöni, L
   Luotsinen, LJ
   Ekblad, JN
   Fitz-Gibbon, IR
   Houchin, C
   Key, JL
   Khan, MA
   Lyu, J
   Nguyen, J
   Oleson, R
   Stein, G
   Weide, SAV
   Trinh, V
AF Boloni, Ladislau
   Luotsinen, Linus J.
   Ekblad, Joakirn N.
   Fitz-Gibbon, I. Ryan
   Houchin, Charles
   Key, Justin L.
   Khan, Majid Ali
   Lyu, Jin
   Nguyen, Johann
   Oleson, Rex
   Stein, Gary
   Weide, Scott A. Vander
   Trinh, Viet
TI A comparison study of 12 paradigms for developing embodied agents
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE embodied agents; comparison study; paradigms
AB We report on a study in which 12 different paradigms were used to implement agents acting in an environment which borrows elements from artificial life and multi-player strategy games. In choosing the paradigms we strived to maintain a balance between high-level, logic-based approaches and low-level, physics-oriented models; between imperative programming, declarative approaches and 'learning from basics'; between anthropomorphic or biologically inspired models on one hand and pragmatic, performance-oriented approaches on the other. We have found that the choice of the paradigm determines the software development process and requires a different set of skills from the developers. In terms of raw performance, we found that the best performing paradigms were those which (a) allowed the knowledge of human experts to be explicitly transferred to the agent and (b) allowed the integration of well-known, high-performance algorithms. We have found that maintaining a commitment to the chosen paradigm can be difficult; there is a strong temptation to offer shallow fixes to perceived performance problems through a 'flight into heuristics'. Our experience is that a development process without the discipline enforced by a central paradigm leads to agents which are a random collection of heuristics whose interactions are not clearly understood. Although far from providing a definitive verdict on the benefits of the different paradigms, our study provided a good insight into what kind of conceptual, technical or organizational problems would a development team face depending on their choice of agent paradigm. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Boloni, Ladislau; Luotsinen, Linus J.; Ekblad, Joakirn N.; Fitz-Gibbon, I. Ryan; Houchin, Charles; Key, Justin L.; Khan, Majid Ali; Lyu, Jin; Nguyen, Johann; Oleson, Rex; Stein, Gary; Weide, Scott A. Vander; Trinh, Viet] Sch Elect Engn & Comp Sci, Orlando, FL 32816 USA.
RP Bölöni, L (corresponding author), Sch Elect Engn & Comp Sci, POB 162450, Orlando, FL 32816 USA.
EM lboloni@eecs.ucf.edu
OI Khan, Majid/0000-0001-9872-8195
CR AAMODT A, 1994, AI COMMUN, V7, P39
   [Anonymous], ENCY COMPUTER SCI TE
   Berne E., 1996, Games People Play: The Basic Handbook of Transactioal Analysis
   Boloni L., 2005, P 8 ACM INT S MOD AN, P169, DOI 10.1145/1089444.1089473
   Bouvier E, 1997, J ELECTRON IMAGING, V6, P94, DOI 10.1117/12.261175
   GONZALEZ AJ, 1994, INDUSTRIAL AND ENGINEERING APPLICATIONS OF ARTIFICIAL INTELLIGENCE AND EXPERT SYSTEMS, P515
   GONZALEZ AJ, 1996, P COMP GEN FORC BEH
   HANKS, 1993, AI MAG, V14, P175
   Helbing D, 2000, NATURE, V407, P487, DOI 10.1038/35035023
   HODJAT S, 1994, IEEE INT C NEUR NETW, P2333
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   KOZA JR, 1990, PROCEEDINGS OF THE 2ND INTERNATIONAL IEEE CONFERENCE ON TOOLS FOR ARTIFICIAL INTELLIGENCE, P819, DOI 10.1109/TAI.1990.130444
   LIKHACHEV M, P IEEE INT C ROBO AU, P1282
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MCPHAIL C, 1983, ANNU REV SOCIOL, V9, P579, DOI 10.1146/annurev.so.09.080183.003051
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Picard R.W., 2000, Affective Computing
   Reif J., 1995, Proceedings of the International Workshop on Algorithmic Foundations ofRobotics, P431
   REIF J, 1993, P 12 ANN C AUT LANG, P162
   Reynolds CW., 1987, SIGGRAPH Comput. Graph., V21, P25, DOI [10.1145/37402.37406, DOI 10.1145/37402.37406]
   Rumelhart D.E., 2013, Learning internal representations by error propagation, P399, DOI [10.1016/b978-1-4832-1446-7.50035-2, 10.1016/B978-1-4832-1446-7.50035-2]
   SCHANK RC, 1983, DYNAMIC THEORY REMIN
   Scheutz M, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P42
   SCHEUTZ M, 2002, P FLAIRS 02, P89
   Steiner C.M., 1974, Scripts People Live: Transactional Analysis of Life Scripts
   Sutton R. S., 1988, Machine Learning, V3, P9, DOI 10.1007/BF00115009
   THOLLOT J, 2003, P INT C COMP GRAPH V
   TOMLINSON B, 2006, AAMAS 06 P 5 INT JOI, P969
   TRINH VC, 2004, SWED AM WORKSH MOOD
   Von Neumann J., 1945, THEORY GAMES EC BEHA, DOI DOI 10.1017/S0266462300008461
   Yaeger L., 1994, Proc. Artif. Life, V3, P263
   YANNAKAKIS GN, 2003, IEEE P 11 MED C CONT
NR 32
TC 0
Z9 2
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2008
VL 38
IS 3
BP 259
EP 305
DI 10.1002/spe.832
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 284BA
UT WOS:000254679000002
DA 2024-07-18
ER

PT J
AU Woodall, P
   Brereton, P
   Budgen, D
AF Woodall, Philip
   Brereton, Pearl
   Budgen, David
TI Investigating service-oriented system performance: a systematic study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance; investigation; service-oriented; services; systematic
   process; SOA
AB The initial use of a service-oriented system, which collates information from three databases, highlighted a performance problem with query response time for queries that selected more than ten attributes from a single data source. Our aim was to find the cause of the performance problem within the service-oriented system. The challenges that were encountered when attempting to locate such a problem are described. Our approach to finding the performance problem, while addressing these challenges, was based on systematically devising and applying measurements to the system. We developed strategies that addressed the challenges and the inherent difficulty of measuring performance in a service-oriented system. The cause of the performance problem was a buffer used by a JDBC-ODBC driver to connect Java code to a Microsoft Access database. Three strategies successfully addressed the challenges of measuring performance in the service-oriented system. In particular, routing queries to a local data source eliminated networking problems. Creating a model of the system allowed performance measurements to continue concurrently with demonstrations of the system, and with its further development. Finally, porting the system identified the part that had a detrimental effect on performance. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   Univ Durham, Dept Comp Sci, Durham, England.
C3 Keele University; Durham University
RP Woodall, P (corresponding author), Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM p.m.woodall@cs.keele.ac.uk
OI Budgen, David/0000-0001-7143-0241; Woodall, Philip/0000-0003-0412-1347
CR BUDGEN D, 2004, P 28 INT COMP SOFTW
   BUDGEN D, 2005, GRID HEALTHGRID P HL
   BUDGEN D, 2006, UNPUB DEPLOYING SOFT
   *DEP HLTH, 2003, VICT CLIMB ENQ REP E
   Krafzig D., 2004, ENTERPRISE SOA SERVI
   Newcomer E., 2005, UNDERSTANDING SOA WE
   Turner M, 2003, COMPUTER, V36, P38, DOI 10.1109/MC.2003.1236470
NR 7
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2007
VL 37
IS 2
BP 177
EP 191
DI 10.1002/spe.752
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 136GY
UT WOS:000244211800003
DA 2024-07-18
ER

PT J
AU Al-Salman, AMS
   Al-Qahtani, F
AF Al-Salman, AMS
   Al-Qahtani, F
TI GLAL: An openGL arabization library
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE OpenGL; arabization; arabic scripts
AB OpenGL is an industry standard for rendering computer graphics. This paper brings Arabic language support to OpenGL in the form of a library, named GLAL. The library can be used easily and efficiently by programmers to render Arabic script in their OpenGL applications. GLAL uses a widely available application programming interface, Uniscribe API, to contextually analyze the text. Then it builds OpenGL display lists that render the text right to left. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 King Saud Univ, Dept Comp Sci, CCIS, Riyadh 11543, Saudi Arabia.
C3 King Saud University
RP King Saud Univ, Dept Comp Sci, CCIS, POB 51178, Riyadh 11543, Saudi Arabia.
EM salman@ccis.ksu.edu.sa
RI AlSalman, Abdulmalik/AEY-1650-2022
OI AlSalman, Abdulmalik/0000-0001-5874-2611
CR [Anonymous], 1999, OpenGL programming guide: the official guide to learning OpenGL
   DUNWOODY C, 1998, OPENGL TM CHARACTER
   *GLTT FTGL, 2004, TRUET SUPP OP LIB
   KHAN EH, 1991, IEEE T CONSUM ELECTR, V37, P86, DOI 10.1109/30.73650
NR 4
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2005
VL 35
IS 14
BP 1393
EP 1407
DI 10.1002/spe.675
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 980MB
UT WOS:000233021500003
OA Bronze
DA 2024-07-18
ER

PT J
AU Navarro, G
   Tarhio, J
AF Navarro, G
   Tarhio, J
TI LZgrep: a Boyer-Moore string matching tool for Ziv-Lempel compressed
   text
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE text searching; compressed pattern matching; Ziv-Lempel format; direct
   search on compressed text
ID ALGORITHM; SEARCH
AB We present a Boyer-Moore (BM) approach to string matching over LZ78 and LZW compressed text. The idea is to search the text directly in compressed form instead of decompressing and then searching it. We modify the BM approach so as to skip text using the characters explicitly represented in the LZ78/LZW formats, modifying the basic technique where the algorithm can choose which characters to inspect. We present and compare several solutions for single and multipattern searches. We show that our algorithms obtain speedups of up to 50% compared to the simple decompress-then-search approach. Finally, we present a public tool, LZgrep, which uses our algorithms to offer grep-like capabilities directly searching files compressed using Unix's Compress, a LZW compressor. LZgrep can also search files compressed with Unix gzip, using new decompress-then-search techniques we develop, which are faster than the current tools. This way, users can always keep their files in compressed form and still search them, uncompressing only when they want to see them. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Chile, Dept Comp Sci, Santiago, Chile.
   Aalto Univ, Dept Comp Sci & Engn, Helsinki, Finland.
C3 Universidad de Chile; Aalto University
RP Univ Chile, Dept Comp Sci, Blanco Encalada 2120, Santiago, Chile.
EM gnavarro@dcc.uchile.cl
RI Tarhio, Jorma A/F-5831-2012; Navarro, Gonzalo/J-3731-2016
OI Tarhio, Jorma/0000-0003-2455-1985
CR AHO AV, 1975, COMMUN ACM, V18, P333, DOI 10.1145/360825.360855
   ALLAUZEN C, 2001, P 12 ANN S COMB PATT, V2089, P51
   Amir A, 1996, J COMPUT SYST SCI, V52, P299, DOI 10.1006/jcss.1996.0023
   Amir A., 1992, P 2 IEEE DAT COMPR C, P279
   [Anonymous], LECT NOTES COMPUT SC
   [Anonymous], IEEE J COMPUTER, DOI 10.1109/MC.1984.1659158
   [Anonymous], 1999, Compressing and Indexing Documents and Images
   Bell T. C., 1990, TEXT COMPRESSION
   BOYER RS, 1977, COMMUN ACM, V20, P762, DOI 10.1145/359842.359859
   Burrows M., 1994, BLOCK SORTING LOSSLE
   CROCHEMORE M, 1994, ALGORITHMICA, V12, P247, DOI 10.1007/BF01185427
   Crochemore M., 1994, TEXT ALGORITHMS
   Farach M, 1998, ALGORITHMICA, V20, P388, DOI 10.1007/PL00009202
   FIALA ER, 1989, COMMUN ACM, V32, P490, DOI 10.1145/63334.63341
   GASIENIEC L, 1996, P 5 SCAND WORKSH ALG
   Harmon D., 1995, OVERVIEW 3 TEXT RETR, P1
   HORSPOOL RN, 1980, SOFTWARE PRACT EXPER, V10, P501, DOI 10.1002/spe.4380100608
   HUFFMAN DA, 1952, P IRE, V40, P1098, DOI 10.1109/JRPROC.1952.273898
   Karkkainen J., 2003, Journal of Discrete Algorithms, V1, P313, DOI 10.1016/S1570-8667(03)00032-7
   KIDA T, 1999, LNCS, V1645, P1
   KIDA T, 1999, P 6 INT S STRING PRO, P89
   KIDA T, 1998, P 8 IEEE DAT COMPR C
   Klein S. T., 2000, Proceedings DCC 2000. Data Compression Conference, P400, DOI 10.1109/DCC.2000.838180
   Klein ST, 2001, IEEE DATA COMPR CONF, P449, DOI 10.1109/DCC.2001.917176
   Knuth D. E., 1977, SIAM Journal on Computing, V6, P323, DOI 10.1137/0206024
   Kytöjoki J, 2003, LECT NOTES COMPUT SC, V2676, P211
   Manber U, 1997, ACM T INFORM SYST, V15, P124, DOI 10.1145/248625.248639
   Manber U., 1993, 9334 U AR DEP COMP S
   MILLER VS, 1985, NATO ASI SERIES F, V12, P131
   Miyazaki M., 1998, Transactions of the Information Processing Society of Japan, V39, P2638
   MOFFAT A, 1989, SOFTWARE PRACT EXPER, V19, P185, DOI 10.1002/spe.4380190207
   MOURA E, 2000, ACM T INFORM SYST, V18, P113, DOI DOI 10.1145/348751.348754
   Navarro G., 2003, Journal of Discrete Algorithms, V1, P423, DOI 10.1016/S1570-8667(03)00036-4
   Navarro G, 2001, IEEE DATA COMPR CONF, P459, DOI 10.1109/DCC.2001.917177
   Navarro G, 2000, LECT NOTES COMPUT SC, V1848, P166
   Navarro G, 2000, INFORM RETRIEVAL, V3, P49, DOI 10.1023/A:1009934302807
   Navarro G., 2002, FLEXIBLE PATTERN MAT
   Navarro G., 2004, Journal of Discrete Algorithms, V2, P347
   NAVARRO G, 2000, ACM J EXPT ALGORITHM, V5
   Shibata Y, 2000, LECT NOTES COMPUT SC, V1848, P181
   SUNDAY DM, 1990, COMMUN ACM, V33, P132, DOI 10.1145/79173.79184
   Tarhio J, 1997, SOFTWARE PRACT EXPER, V27, P851, DOI 10.1002/(SICI)1097-024X(199707)27:7<851::AID-SPE108>3.0.CO;2-D
   Wu S., 1994, TR9417 U AR DEP COMP
   Wu Sun., 1992, Usenix Winter 1992, P153
   ZIV J, 1977, IEEE T INFORM THEORY, V23, P337, DOI 10.1109/TIT.1977.1055714
   ZIV J, 1978, IEEE T INFORM THEORY, V24, P530, DOI 10.1109/TIT.1978.1055934
   [No title captured]
NR 47
TC 17
Z9 18
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2005
VL 35
IS 12
BP 1107
EP 1130
DI 10.1002/spe.663
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 971NZ
UT WOS:000232392500001
DA 2024-07-18
ER

PT J
AU Hsiung, PA
   Lee, TY
   Fu, JM
   See, WB
AF Hsiung, PA
   Lee, TY
   Fu, JM
   See, WB
TI SESAG: an object-oriented application framework for real-time systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented application framework design; real-time application
   development; task scheduling; resource allocation; code generation;
   framework evaluation; design patterns
ID LANGUAGE
AB Advancements in hardware and software technologies have made possible the design of real-time systems and applications where stringent timing constraints are imposed on critical tasks. The design of such systems is more complex than that of temporally unrestricted systems because system correctness depends on the satisfaction of functional as well as temporal requirements. To aid users in correctly and efficiently designing systems, object-oriented frameworks provide a useful environment for significant reuse and reduction in design effort. In contrast to other application domains, there has been relatively little work on an application framework for the design of real-time systems. Facing the growing need for real-time applications, we propose a novel application framework called SESAG, which consists of five components, namely Specifier, Extractor, Scheduler, Allocator, and Generator. Within SESAG, several design patterns are proposed and used for the development of real-time applications. A new evaluation metric called relative design effort is proposed for evaluating SESAG. Experiences in using SESAG show a significant increase in design productivity through design reuse and a significant decrease in design time and effort. Two complex application examples have been developed using SESAG and evaluated using the new evaluation metric. The examples demonstrate relative design efforts of at most 18% of the design efforts required by conventional methods. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, Chiayi 621, Taiwan.
   Natl Taipei Univ Technol, Taipei, Taiwan.
   Cheng Shiu Univ, Kaohsiung, Taiwan.
   Aerosp Ind Dev Corp, Taichung, Taiwan.
C3 National Chung Cheng University; National Taipei University of
   Technology; Cheng Shiu University
RP Hsiung, PA (corresponding author), Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, 160 San Hsing, Chiayi 621, Taiwan.
EM hpa@computer.org
RI Hsiung, Pao-Ann/B-1293-2011
OI Hsiung, Pao-Ann/0000-0002-3639-1467
CR ACHAUER B, 1996, ACM OOPS MESSENGER, V7, P21
   [Anonymous], 1999, DOING HARD TIME DEV
   ATTOUI A, 1991, PROCEEDING : TWELFTH REAL-TIME SYSTEMS SYMPOSIUM, P84, DOI 10.1109/REAL.1991.160361
   BANNISTER JA, 1983, ACTA INFORM, V20, P261, DOI 10.1007/BF01257086
   BROWNE JC, 1996, ACM OOPS MESSENGER, V7, P59
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GERGELEIT M, 1996, ACM OOPS MESSENGER, V7, P51
   GRIMSHAW A, 1989, P IEEE GLOBECOM, P141
   HAMMER DK, 1996, ACM OOPS MESSENGER, V7, P78
   Hansson HA, 1996, REAL-TIME SYST, V11, P223, DOI 10.1007/BF00337680
   ISHIKAWA Y, 1990, SIGPLAN NOTICES, V25, P289, DOI 10.1145/97946.97980
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   KLIGERMAN E, 1986, IEEE T SOFTWARE ENG, V12, P941, DOI 10.1109/TSE.1986.6313049
   KUAN TY, 1995, P OOPSLA 95 WORKSH, V6, P207
   LIN KJ, 1988, P 9 IEEE REAL TIM SY, P96
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   POTKONJAK M, 1999, ACM T DES AUTOMAT EL, V4, P430
   RATNER RS, 1973, NASI10920, V2
   Rumbaugh J., 1999, UML REFERENCE GUIDE
   Schmidt D.C., 1997, HDB PROGRAMMING LANG, V1
   SEE WB, 2000, DOMAIN SPECIFIC APPL, P327
   SEE WB, 1996, P INT COMP S DEC, P363
   SHA L, 1987, CMUCS87181
   Tokuda H., 1989, Operating Systems Review, V23, P29, DOI 10.1145/71021.71023
   WELCH LR, 1996, ACM OOPS MESSENGER, V7, P70
NR 26
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2005
VL 35
IS 10
BP 899
EP 921
DI 10.1002/spe.655
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 952AV
UT WOS:000230974500001
DA 2024-07-18
ER

PT J
AU Karasik, D
   Berezin, A
   Belman, V
   Sporring, J
AF Karasik, D
   Berezin, A
   Belman, V
   Sporring, J
TI A graphical user-interface and an image processing toolkit for Perl
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Perl; graphical user interfaces; image processing; medical applications
AB Perl is a powerful language for writing portable programs on a wide range of platforms. In this article two stand-alone Perl toolkits, Prima and IPA, are presented, which provide graphical user interface and image processing functionality with features not found in any other Perl toolkits. Prima is a platform-independent Perl graphic toolkit with an object-oriented interface. Its features include an extensive set of Perl-coded interface elements, a wide range of image types and conversion routines, and a visual builder. IPA is an image processing toolkit based on Prima functionality, and it provides a set of common two-dimensional operators. Prima and IPA are used as a base for biological research, where the effects of various peptide-based preparations on neuron culture are studied. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Copenhagen, Prot Lab, Inst Mol Pathol, DK-2200 Copenhagen, Denmark.
   Univ Copenhagen, Dept Comp Sci, DK-2100 Copenhagen, Denmark.
C3 University of Copenhagen; University of Copenhagen
RP Univ Copenhagen, Prot Lab, Inst Mol Pathol, Blegdamsvej 3C,Bld 6-2, DK-2200 Copenhagen, Denmark.
EM dmitry@karasik.eu.org
RI Berezin, Alexander E/B-9032-2014; Sporring, Jon/L-4499-2016
OI Berezin, Alexander E/0000-0002-0446-3999; Sporring,
   Jon/0000-0003-1261-6702
CR [Anonymous], 2000, Programming Perl
   BEREZIN A, 1999, P 3 PERL C MONT
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gonzalez R. C., 2007, DIGITAL IMAGE PROCES
   GUNDERSEN HJG, 1988, APMIS, V96, P379, DOI 10.1111/j.1699-0463.1988.tb05320.x
   HIETANIEMI J, 2004, UNICODE SUPPORT PERL
   Klette R., 1996, HDB IMAGE PROCESSING
   Levine MartinD., 1985, VISION MAN MACHINE
   NYE A, 1995, XLIB PROGRAMMING MAN
   PRATT W.K., 1991, DIGITAL IMAGE PROCES, V2
   PRIMA KD, 2002, PERL GRAPHIC TOOLKIT
   Ronn LCB, 2000, J NEUROSCI METH, V100, P25, DOI 10.1016/S0165-0270(00)00228-4
   Russ J.C., 1995, The Image Processing Handbook, Vsecond
   SOELLER C, 2004, PDL MANUALS
   Sonka M., 2014, Image processing, analysis, and machine vision
   Tkach V, 2003, ONCOGENE, V22, P5045, DOI 10.1038/sj.onc.1206570
   WALL L, 2004, POD FORMAT
   WALMOD PS, 2000, METHODS MOL BIOL CYT, V161
   WALSH N, 1999, LEARNING PERL TK
   2004, WXWINDOWS DOCUMENTAT
   2004, PDL PRIMAIMAGE PACKA
NR 21
TC 0
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2005
VL 35
IS 5
BP 467
EP 490
DI 10.1002/spe.644
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 913XQ
UT WOS:000228189300003
DA 2024-07-18
ER

PT J
AU Jann, J
   Dubey, N
   Burugula, RS
   Pattnaik, P
AF Jann, J
   Dubey, N
   Burugula, RS
   Pattnaik, P
TI Dynamic reconfiguration of CPU and WebSphere on IBM pSeries servers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE DR; WebSphere; trade3; AIX; DLPAR; epanechnikov kernel
AB This paper studies the effects that dynamic reconfiguration (DR) has on a WebSphere workload while CPUs are dynamically added to and removed from the underlying AIX instance. DR is a new technology available in AIX 5.2. This study shows that the resource allocations for a complex and function-rich middleware system such as WebSphere can be efficiently and dynamically managed by the DR technology, without WebSphere having to explicitly accommodate for the DR features of the operating system. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 IBM Corp, Thomas J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
C3 International Business Machines (IBM)
RP IBM Corp, Thomas J Watson Res Ctr, 1101 Kitchawan Rd,ROute 134,POB 218, Yorktown Hts, NY 10598 USA.
EM joefon@us.ibm.com
CR [Anonymous], 1986, DENSITY ESTIMATION
   CHASE IS, 2001, P 18 ACM S OP SYST P, P103
   *IBM, IBM REDB
   *IBM DLPAR, IBM DLPAR TOOL SET P
   JANN J, 2003, IBM SYSTEMS J, V42
   SCOTT DW, 1979, BIOMETRIKA, V66, P605, DOI 10.1093/biomet/66.3.605
   Sturges HA, 1926, J AM STAT ASSOC, V21, P65, DOI 10.1080/01621459.1926.10502161
   *SUN MICR INC, SUN FIR 15K INF
NR 8
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2004
VL 34
IS 13
BP 1257
EP 1272
DI 10.1002/spe.612
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 867VD
UT WOS:000224869700003
DA 2024-07-18
ER

PT J
AU Kim, J
   Paek, Y
   Uh, G
AF Kim, J
   Paek, Y
   Uh, G
TI Code optimizations for a VLIW-style network processing unit
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler; embedded system software; network processors; VLIW
AB The explosive growth in network bandwidth and Internet services such as QoS (quality of service) and SLA (service level agreement) monitoring have created the need for new networking hardware called a Network Processing Unit (NPU). In order to rapidly reconfigure the NPU for frequently varying Internet services and technologies, a high-performance C compiler is urgently needed. Several code generation techniques, which are intended to meet the high code quality demands of other types of application specific instruction-set processors (ASH's) like digital signal processors (DSPs), have already been developed. However, these techniques are insufficient for NPUs due to striking architectural differences such as asymmetric data paths. The main purpose of this paper is to discuss our recent experience with the development of a commercial compiler for a new NPU called the Paion PPII, which is basically a packet engine for NPU to meet the growing need for new high-bandwidth communication equipment targeted for Internet routers and ethernet adapters. For this purpose, we will first show the architectural challenges posed by the target NPU. Then, we will describe several compiler techniques that we found to be effective for the target NPU with various unorthogonal architectural features. The current implementations of the PPII use a VLIW (Very Long Instruction Word) architecture. So, we handled this VLIW-style architecture by employing a simple code compaction scheme which packs multiple parallel instructions into one long instruction word. The experimental results show that our techniques are effective for significantly reducing the dynamic instruction count. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Seoul Natl Univ, Dept Elect Engn, Sch Elect Engn, Seoul 151744, South Korea.
   Boise State Univ, Dept Comp Sci, Boise, ID 83725 USA.
   Korea Adv Inst Sci & Technol, Dept Elect Engn, Taejon 350701, South Korea.
C3 Seoul National University (SNU); Idaho; Boise State University; Korea
   Advanced Institute of Science & Technology (KAIST)
RP Seoul Natl Univ, Dept Elect Engn, Sch Elect Engn, Seoul 151744, South Korea.
EM ypaek@ee.snu.ac.kr
CR [Anonymous], P IEEE WORKSH SIGN P
   Appel A., 1998, The Zephyr Compiler Infrastructure
   BATTEN D, 1999, P INT C SIGN PROC AP
   Bowman RL, 1998, P ANN HICSS, P115, DOI 10.1109/HICSS.1998.649204
   Cooper K. D., 1992, ACM Letters on Programming Languages and Systems, V1, P22, DOI 10.1145/130616.130619
   *EZCHIP TECHN, 2002, NETW PROC DES NEXT G
   JUNG S, 2001, P INT C COMP ARCH SY
   KIM J, 2002, P INT C COMP ARCH SY
   Leupers Rainer., 2000, CODE OPTIMIZATION TE
   Paulin PG, 2001, DESIGN, AUTOMATION AND TEST IN EUROPE, CONFERENCE AND EXHIBITION 2001, PROCEEDINGS, P420, DOI 10.1109/DATE.2001.915058
   RAMSEY N, 1999, WORKSH LANG COMP TOO
   STEENKISTE PA, 1989, ACM T PROGR LANG SYS, V11, P1, DOI 10.1145/59287.59289
   SUDARSANAM A, 1998, THESIS PRINCETON U
   WAGNER J, 2001, P ACM SIGPLAN WORKSH, P155
   WAGNER J, 2002, WORKSH NETW PROC HPC
NR 15
TC 0
Z9 0
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2004
VL 34
IS 9
BP 847
EP 874
DI 10.1002/spe.595
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 836HU
UT WOS:000222547300003
DA 2024-07-18
ER

PT J
AU Ogasawara, T
   Komatsu, H
   Nakatani, T
AF Ogasawara, T
   Komatsu, H
   Nakatani, T
TI Optimizing precision overhead for x86 processors
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; floating-point operations; precision control; x86 processors
AB It is a major challenge for a Java AT compiler to perform single-precision floating-point operations efficiently for the x86 processors. In previous research, the double-precision mode is set as the default precision mode when methods are invoked. Sophisticated approaches then use heuristic approaches to optimization by considering the trade-offs between roundings and mode switches. However, this convention introduces redundant mode switches across method boundaries. Furthermore, methods that include both single- and double-precision operations cannot switch the mode, even if single-precision operations are dominant. We propose a new approach to these problems. We eliminate redundant mode switches by ignoring the default precision mode and calling a method in the same precision mode as the caller. For methods that include both single- and double-precision methods, we reduce the overhead of rounding by isolating code segments of a given method that should be executed in the single-p recision mode. We implemented our approach in IBM's Just-in-Time compiler, and obtained experimental results demonstrating that, in SPECjvm98, it consistently shows the best performance in any configuration of benchmark programs, inline policies, and processor architectures compared with previous research approaches. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 IBM Corp, Tokyo Res Lab, Yamato, Kanagawa 2428502, Japan.
C3 International Business Machines (IBM)
RP Ogasawara, T (corresponding author), IBM Corp, Tokyo Res Lab, 1623-14 Shimotsuruma, Yamato, Kanagawa 2428502, Japan.
EM takeshi@jp.ibm.com
OI Ogasawara, Takeshi/0000-0002-4021-5239
CR Arnold Matthew., 2000, P 15 ACM SIGPLAN C O, P47
   CIERNIAK M, 2000, ACM SIGPLAN 00 C PRO, P18
   Gosling James, 1996, The Java Language Specification
   HINTON G., 2001, INTEL TECHNOLOGY J, V5
   *IEEE INC, 1985, IEEE STAND BIN FLOAT
   *INT CORP, 2001, IA 32 INT ARCH SOFTW, V1
   *INT CORP, 1998, P6 FAM PROC HARDW DE
   ISHIZAKI K, 2003, P ACM SIGPLAN C OBJ, P187
   JACOB M, 2002, P JAV VIRT MACH RES, P79
   KRALL A, 1998, ACM 1998 WORKSH JAV, P15
   Lee JS, 2000, TERATOGEN CARCIN MUT, V20, P1, DOI 10.1002/(SICI)1520-6866(2000)20:1<1::AID-TCM1>3.0.CO;2-1
   LIAO S, 1995, DES AUT CON, P599
   MIKE J, 1991, PRENTICEHALL SERIES
   OGASAWARA T, 2001, P ACM SIGPLAN C OBJ, P83
   Paleczny M, 2001, USENIX ASSOCIATION PROCEEDINGS JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P1
   Suganuma T, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P91
   SUGANUMA T, 2001, P ACM SIGPLAN C OBJ, P180
   *SUN, 1998, UPD JAV LANG SPEC JD
   2003, IBM DEV KIT JAVA 2 T
   1998, JAVA GRANDE FORUM RE
NR 20
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2004
VL 34
IS 9
BP 875
EP 893
DI 10.1002/spe.596
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 836HU
UT WOS:000222547300004
DA 2024-07-18
ER

PT J
AU Boldi, P
   Codenotti, B
   Santini, M
   Vigna, S
AF Boldi, P
   Codenotti, B
   Santini, M
   Vigna, S
TI UbiCrawler: a scalable fully distributed Web crawler
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web crawling; distributed computing; fault tolerance; consistent hashing
ID SYSTEMS; DESIGN
AB We report our experience in implementing UbiCrawler, a scalable distributed Web crawler, using the Java programming language. The main features of UbiCrawler are platform independence, linear scalability, graceful degradation in the presence of faults, a very effective assignment function (based on consistent hashing) for partitioning the domain to crawl, and more in general the complete decentralization of every task. The necessity of handling very large sets of data has highlighted some limitations of the Java APIs, which prompted the authors to partially reimplement them. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Milan, Dipartimento Sci Informaz, I-20135 Milan, Italy.
   Univ Modena, Dipartimento Sci Sociali Cognit & Quantitat, I-42100 Reggio Emilia, Italy.
   Univ Iowa, Dept Comp Sci, Iowa City, IA 52240 USA.
C3 University of Milan; Universita di Modena e Reggio Emilia; University of
   Iowa
RP Univ Milan, Dipartimento Sci Informaz, Via Comel 39-41, I-20135 Milan, Italy.
EM viana@dsi.unimi.it
RI ; Vigna, Sebastiano/R-5285-2017
OI SANTINI, MASSIMO/0000-0003-1416-0673; BOLDI, PAOLO/0000-0002-8297-6255;
   Vigna, Sebastiano/0000-0002-3257-651X
CR [Anonymous], ACM T INTERNET TECHN
   BOLDI P, 2001, P 10 INT WORLD WID W, P140
   BOLDI P, 2002, P AUSW 8 AUSTR WORLD
   Boldi P., 2002, P 11 INT WORLD WID W
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Burner M., 1997, WEB TECHNIQUES MAGAZ, V2, P37
   Chandra TD, 1996, J ACM, V43, P225, DOI 10.1145/226643.226647
   CHO J, 2002, P 11 INT WORLD WID W
   DEVINE R, 1993, P 4 INT C FDN DAT OR, V730, P101
   DIJKSTRA EW, 1974, COMMUN ACM, V17, P643, DOI 10.1145/361179.361202
   Heydon A, 2000, CONCURRENCY-PRACT EX, V12, P363, DOI 10.1002/1096-9128(200005)12:6<363::AID-CPE479>3.0.CO;2-3
   HOSCHEK W, 2001, COLT DISTRIBUTION
   KARGER D, 1999, P 8 INT WORLD WID WE
   Karger David, 1997, P 29 ANN ACM S THEOR, P654, DOI DOI 10.1145/258533.258660
   KOSTER M, 2001, ROBOT EXCLUSION STAN
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P3, DOI 10.1145/272991.272995
   Najork M., 2001, P 10 INT WORLD WID W
   NAJORK M, 2001, HDB MASSIVE DATA SET
   Page L., 1999, PAGERANK CITATION RA
   Shkapenyuk V, 2002, IEEE INT C DAT ENG I
   Yan HF, 2002, J SYST SOFTWARE, V60, P185, DOI 10.1016/S0164-1212(01)00091-7
   Zeinalipour-Yazti D, 2002, LECT NOTES COMPUT SC, V2382, P58
NR 22
TC 262
Z9 305
U1 0
U2 66
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2004
VL 34
IS 8
BP 711
EP 726
DI 10.1002/spe.587
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 834SS
UT WOS:000222431700001
DA 2024-07-18
ER

PT J
AU Zhou, NF
AF Zhou, NF
TI CGLIB - a constraint-based graphics library
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE programming languages; constraints; graphics programming; graphical user
   interface design; agents; action rules; prolog
AB CGLIB is a high-level graphics library for B-Prolog, a constraint logic programming system. The library provides primitives for creating and manipulating graphical objects and a set of constraints including not-overlap, grid, table and tree constraints that facilitate the specification of the layouts of objects. The library adopts a construct called action rules which is available in B-Prolog for creating agents and programming interactions among agents or between agents and the user. The library is a fully working system implemented in B-Prolog, Java and C. It can be used in many areas such as drawing editors, interactive user interfaces, document authoring, animation, information visualization, intelligent agents and games. The high-level abstraction of the library and the use of constraints and action rules in the specification of layouts and behaviors can significantly enhance the productivity of the development of graphics. We demonstrate through several examples the effectiveness of the library as a tool for developing graphics-rich and interactive user interfaces. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 CUNY Brooklyn Coll, Brooklyn, NY 11210 USA.
   CUNY, Grad Ctr, Brooklyn, NY 11210 USA.
C3 City University of New York (CUNY) System; Brooklyn College (CUNY); City
   University of New York (CUNY) System
RP Zhou, NF (corresponding author), CUNY Brooklyn Coll, 2900 Bedford Ave, Brooklyn, NY 11210 USA.
CR BORNING A, 1981, ACM T PROGR LANG SYS, V3, P353, DOI 10.1145/357146.357147
   BORNING L, 2000, ACM MULTIMEDIA SYSTE
   COHEN J, 1990, COMMUN ACM, V33, P52, DOI 10.1145/79204.79209
   CRUZ I, 1998, CONSTRAINTS INT J, V3
   HELM R, 1986, P INT C LOG PROGR, P513
   Hudak Paul., 2000, The Haskell school of expression: learning functional programming through multimedia
   HUDSON S, SUBARCTIC UI TOOLKIT
   KINO N, JIPL JAVA INTERFACE
   MYERS B, 1992, LANGUAGES DEV USER I
   OHWADA H, 1990, P N AM C LOG PROGR, P139
   SUTHERLAND I, 1963, IFIPS P SPRING JOINT
   ZANDEN BV, 1995, ACM T COMPUTER HUMAN, V2, P308
   Zhou N., 1994, B PROLOG USERS MANUA
   Zhou NF, 1996, ACM T PROGR LANG SYS, V18, P752, DOI 10.1145/236114.236120
   ZHOU NF, 2002, TR200210 CUNY COMP S
   [No title captured]
   [No title captured]
NR 17
TC 2
Z9 2
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2003
VL 33
IS 13
BP 1199
EP 1216
DI 10.1002/spe.539
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 739LA
UT WOS:000186346300001
DA 2024-07-18
ER

PT J
AU Thimbleby, H
AF Thimbleby, H
TI The directed Chinese postman problem
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE directed Chinese postman problem; Java; usability evaluation
ID ALGORITHMS
AB The Chinese Postman Problem has many applications, including robot exploration, and analysing interactive system and Web site usability. This paper reviews the wide range of applications of the problem and presents complete, executable code to solve it for the case of directed multigraphs. A variation called the 'open Chinese Postman Problem' is also introduced and solved. Although optimizations are possible, no substantially better algorithms are likely. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 UCL, Interact Ctr, London WC1E 6BT, England.
C3 University of London; University College London
RP Thimbleby, H (corresponding author), UCL, Interact Ctr, Gower St, London WC1E 6BT, England.
EM h.thimbleby@ucl.ac.uk
RI Thimbleby, Harold/D-4389-2013
OI Thimbleby, Harold/0000-0003-2222-4243
CR AHUJA RK, 1983, NETWORK FLOWS THEORY
   ALBERS S, 1997, 1997014 SRC DIG SYST
   Aldous J. M., 2000, GRAPHS APPL
   [Anonymous], CHINESE MATH
   BOLLOBIS B, 1979, GRAPH THEORY
   Chen WH, 1998, INFORM PROCESS LETT, V65, P261, DOI 10.1016/S0020-0190(97)00208-1
   GIBBONS A, 1985, ALGORITHMS GRAPH THE
   GOLDBERG AV, 1989, J ACM, V36, P873, DOI 10.1145/76359.76368
   KNUTH DE, 1996, STANFORD GRAPHBASE
   LIN YX, 1988, COMPUT OPER RES, V15, P577, DOI 10.1016/0305-0548(88)90053-6
   *NOK MOB PHON, 1996, NOK 2110 US GUID
   Orloff C. S., 1974, NETWORKS, V4, P35, DOI [DOI 10.1002/NET.3230040105, 10.1002/net.3230040105]
   PAPADIMITRIOU CH, 1976, J ACM, V23, P544, DOI 10.1145/321958.321974
   PEARN WL, 1995, COMPUT OPER RES, V22, P819, DOI 10.1016/0305-0548(94)00070-O
   Pevzner PA, 2001, P NATL ACAD SCI USA, V98, P9748, DOI 10.1073/pnas.171285098
   Shen YN, 1996, SIAM J DISCRETE MATH, V9, P511, DOI 10.1137/S0895480192239190
   SKIENNA S, 1998, ALGORITHM DESIGN MAN
   THIMBELBY HW, 1997, WEBN 97 WORLD C WWW, P1056
   Thimbleby H, 2003, SOFTWARE PRACT EXPER, V33, P975, DOI 10.1002/spe.537
   THIMBLEBY H, 1999, 10 IEEE INT C IM AN, P670
   THIMBLEBY HW, 1993, ADV HUMAN COMPUTER I, V4, P58
NR 21
TC 57
Z9 72
U1 1
U2 18
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2003
VL 33
IS 11
BP 1081
EP 1096
DI 10.1002/spe.540
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715LU
UT WOS:000184974300004
DA 2024-07-18
ER

PT J
AU Thimbleby, H
AF Thimbleby, H
TI Explaining code for publication
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE documentation; Java; Javadoc; LATEX; literate programming; loom;
   publishing code; warp; XML
ID ALGORITHM
AB The computer science literature discusses code and algorithms extensively, but not always reliably. Tool support can help ensure integrity between code and explanation so that published papers are more reliable.
   A versatile, lightweight tool to support explaining code for publication is justified, described and compared with alternatives. The tool works with Java, C and similar languages, and provides support for publishing explanations of real code in LAT(E)X, XML, HTML, etc. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 UCL, Interact Ctr, London WC1H 0AP, England.
C3 University of London; University College London
RP Thimbleby, H (corresponding author), UCL, Interact Ctr, 26 Bedford Way, London WC1H 0AP, England.
EM h.thimbleby@ucl.ac.uk
RI Thimbleby, Harold/D-4389-2013
OI Thimbleby, Harold/0000-0003-2222-4243
CR Adam D, 2002, NATURE, V419, P772, DOI 10.1038/419772a
   ADDISON MA, 1996, INTERACTING COMPUTER, V8, P51
   Ahuja R. K., 1993, Network flows: theory, algorithms, and applications
   Anderson John R., 1998, The Atomic Components of Thought
   [Anonymous], 1997, ART COMPUTER PROGRAM
   [Anonymous], 1997, FABRIC REALITY
   [Anonymous], 1985, Structure and Interpretation of Computer Programs
   [Anonymous], 1992, ACM code of ethics and professional conduct
   [Anonymous], CHINESE MATH
   [Anonymous], C INTERFACES IMPLEME
   [Anonymous], 2001, CATHEDRAL BAZAAR
   [Anonymous], 2001, MECH PROOF
   Arnold K., 2000, The Java Programming Language, V3rd ed
   ARTZT E, 2001, AUTODUCK
   BECK K, 2001, GAMMA E
   Braune B, 2000, IEEE T VIS COMPUT GR, V6, P1, DOI 10.1109/2945.841117
   BROWN JS, 2000, SOCIAL LIFE INFORMAT
   CARTWRIGHT N, 1983, LAWS PHYSICS LIE
   Chartrand G, 1993, Applied and Algorithmic Graph Theory
   Dror M., 2000, Arc routing : Theory, solutions and applications
   DUNHAM CB, 1982, COMPUT J, V25, P61, DOI 10.1093/comjnl/25.1.61
   Feynman R.P., 1992, "Surely you're joking
   FORSYTHE GE, 1966, COMMUN ACM, V9, P255
   Friedrich B, 1996, INT REV PHYS CHEM, V15, P1
   Goossens Michel, 1999, The Latex Web Companion: Integrating TEX, HTML, and XML, V1st
   Hall R. W., 1997, OR MS TODAY, V24, P38
   HANSON DR, 1987, COMMUN ACM, V30, P594
   HANSON DR, 1987, LOOM WEAVE FRAGMENTS
   HAROLD R, 2001, XML NUTSHELL
   JONES SP, 1999, HASKELL 98 NONSTRICT
   Jungnickel D., 1999, ALGORITHMS COMPUTATI, V5
   Knuth D.E., 1994, The CWEB system of structured documentation: version 3.0
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   KNUTH DE, 1996, FOREWORD A EQUAL TO
   Knuth Donald., 1993, STANFORD GRAPHBASE
   LADKIN PB, 1995, PEOPLE COMPUTERS, V10, P107
   LADKIN PB, 1997, SOFTWARE ENG J, V11, P347
   LADKIN PB, 1997, IEE P SOFTWARE ENG, V144, P185
   LIBES D, 1997, P 5 ANN TCL TK WORKS, P14
   LIN YX, 1988, COMPUT OPER RES, V15, P577, DOI 10.1016/0305-0548(88)90053-6
   *MICR CORP, 1992, OF640760295 MICR COR
   MITTELBACH F, 1997, DOC SHORT VRB PACKAG
   Ovsiannikov IA, 1999, INT J HUM-COMPUT ST, V50, P329, DOI 10.1006/ijhc.1999.0247
   Park Robert., 2000, VOODOO SCI
   PERLIS AJ, 1966, COMMUN ACM, V9, P255
   Phelps TA, 2000, COMMUN ACM, V43, P83, DOI 10.1145/336460.336480
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Porter MF, 2001, Snowball: a language for stemming algorithms
   QUEINNEC C, 2000, LITERATE PROGRAMMING
   Ramsdell J W, 1991, Clin Geriatr Med, V7, P677
   Ramsey N, 1996, SOFTWARE PRACT EXPER, V26, P467, DOI 10.1002/(SICI)1097-024X(199604)26:4<467::AID-SPE17>3.0.CO;2-M
   RAMSEY N, 1994, IEEE SOFTWARE, V11, P97, DOI 10.1109/52.311070
   Resnik D.B., 1998, The Ethics of Science: An Introduction
   SCOWEN RS, 1977, SOFTWARE PRACT EXPER, V7, P779, DOI 10.1002/spe.4380070612
   Sedgewick R., 1983, ALGORITHMS
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Skiena S. S, 1998, The Algorithm Design Manual
   STERLING TD, 1990, COMMUN ACM, V33, P112, DOI 10.1145/79173.79182
   Thimbleby H, 2000, INT J HUM-COMPUT ST, V52, P1031, DOI 10.1006/ijhc.1999.0341
   Thimbleby H, 1996, SOFTWARE PRACT EXPER, V26, P309, DOI 10.1002/(SICI)1097-024X(199603)26:3<309::AID-SPE11>3.0.CO;2-O
   THIMBLEBY H, 1986, COMPUT J, V29, P201, DOI 10.1093/comjnl/29.3.201
   Thimbleby H., 2001, ACM Transactions on Computer-Human Interaction, V8, P99, DOI 10.1145/376929.376941
   THIMBLEBY H, 1989, SOFTWARE PRACT EXPER, V19, P303, DOI 10.1002/spe.4380190308
   Thimbleby H., 1990, Interacting with Computers, V2, P8, DOI 10.1016/0953-5438(90)90011-6
   Thimbleby H, 1999, SOFTWARE PRACT EXPER, V29, P457, DOI 10.1002/(SICI)1097-024X(19990425)29:5<457::AID-SPE243>3.0.CO;2-5
   THIMBLEBY HW, 1999, PERSONAL TECHNOLOGIE, V4, P241
   Tidwell Doug., 2001, MASTERING XML TRANSF
   Underhill P., 2000, Why We Buy? The science of shopping
   VANWYK CJ, 1990, COMMUN ACM, V33, P361, DOI 10.1145/77481.316051
   VANWYK CJ, 1998, COMMUN ACM, V33, P365
   Wolfram S., 2003, The Mathematica Book
   Ziman J., 1991, Reliable Knowledge
   [No title captured]
NR 73
TC 17
Z9 18
U1 0
U2 2
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2003
VL 33
IS 10
BP 975
EP 998
DI 10.1002/spe.537
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715CV
UT WOS:000184953700005
DA 2024-07-18
ER

PT J
AU Evans, H
   Atkinson, M
   Brown, M
   Cargill, J
   Crease, M
   Draper, S
   Gray, P
   Thomas, R
AF Evans, H
   Atkinson, M
   Brown, M
   Cargill, J
   Crease, M
   Draper, S
   Gray, P
   Thomas, R
TI The pervasiveness of evolution in GRUMPS software
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE run-time evolution; dynamic evolution; change management; distributed
   systems; experiment; investigation; large-scale
AB This paper describes the evolution of the design and implementation of a distributed run-time system that itself is designed to support the evolution of the topology and implementation of an executing, distributed system. The three different versions of the run-time architecture that have been designed and implemented are presented, together with how each architecture addresses the problems of topological and functional evolution. In addition, the reasons for the rapid evolution of the design and implementation of the architecture are also described.
   From the lessons learned in both evolving the design of the architecture and in trying to provide a runtime system that can support run-time evolution, this paper discusses two generally applicable observations: evolution happens all the time, and it is not possible to anticipate how systems will evolve as designs; and large, run-time systems do not follow a predictable path. In addition to this, rapid prototyping has proved to be extremely useful in the production of the three architectures; this kind of prototyping has been made much easier by designing the core set of Java abstractions in terms of interfaces; and building an architecture that allows as many decisions as possible to be made at run-time which has produced a support system that is more responsive to the user as well as the distributed environment in which it is executing. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Glasgow, Dept Comp Sci, Glasgow G12 8RZ, Lanark, Scotland.
   Univ Glasgow, Dept Psychol, Glasgow G12 8QQ, Lanark, Scotland.
   Univ Western Australia, Dept Comp Sci & Software Engn, Crawley, WA 6009, Australia.
C3 University of Glasgow; University of Glasgow; University of Western
   Australia
RP Evans, H (corresponding author), Univ Glasgow, Dept Comp Sci, Glasgow G12 8RZ, Lanark, Scotland.
CR ANDERSON TE, 1995, IEEE MICRO, V15, P54, DOI 10.1109/40.342018
   Atallah M.J., 1999, ALGORITHMS THEORY CO
   ATKINSON M, 2001, TR200196 GLASG U DEP
   BRAY T, 2000, EXTENSIBLE MARKUP LA
   Cattell R.G. G., 1997, OBJECT DATABASE STAN
   EVANS H, 2001, WORKSH ENG COMPL OBJ
   EVANS H, 2002, WORKSH PEER TO PEER
   EVANS H, GRUMPS TEAM GRUMPS A
   Foster I, 2001, INT J HIGH PERFORM C, V15, P200, DOI 10.1177/109434200101500302
   FOSTER I, 1999, GIRD BLUEPRINT NEW C
   Graham S., 2002, BUILDING WEB SERVICE
   MITRA N, 2001, SOAP VERSION 1 2
   ORAM A, 2001, PEER TO PEER HARNESS
   Sommerville I, 2001, Software Engineering
   *SUN MICR, JAV 2 RMI WEB PAG
NR 15
TC 5
Z9 6
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2003
VL 33
IS 2
BP 99
EP 120
DI 10.1002/spe.498
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 644PX
UT WOS:000180928300001
DA 2024-07-18
ER

PT J
AU Nizipli, Y
   Lemire, D
AF Nizipli, Yagiz
   Lemire, Daniel
TI Parsing millions of URLs per second
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance; text processing; URL; vectorization
AB URLs are fundamental elements of web applications. By applying vector algorithms, we built a fast standard-compliant C++ implementation. Our parser uses three times fewer instructions than competing parsers following the WHATWG standard (e.g., Servo's rust-url) and up to eight times fewer instructions than the popular curl parser. The Node.js environment adopted our C++ library. In our tests on realistic data, a recent Node.js version (20.0) with our parser is four to five times faster than the last version with the legacy URL parser.
C1 [Nizipli, Yagiz; Lemire, Daniel] Univ Quebec TELUQ, Data Sci Res Ctr, Montreal, PQ H2S 3L5, Canada.
C3 University of Quebec; Universite TELUQ
RP Lemire, D (corresponding author), Univ Quebec TELUQ, Data Sci Res Ctr, Montreal, PQ H2S 3L5, Canada.
EM daniel.lemire@teluq.ca
FU Natural Sciences and Engineering Research Council of Canada
FX We thank A. Henningsen, M. Teixeira, R. Nagy, S. Klabnik, N. Nuon, S.
   Vohr, M. Atlow, and D. Chatterjee for their software contributions. We
   thank A. van Kesteren for answering our technical questions on the URL
   standard. We thank that Node.js team for their feedback.
CR Ajmani DK, 2022, IEEE SEC PRIV WORKS, P51, DOI 10.1109/SPW54247.2022.9833883
   [Anonymous], 2012, URL STANDARD
   Berners-Lee Tim., 1998, UNIFORM RESOURCE IDE
   Cameron RD., 2008, P 2008 C CTR ADV STU, p17:222
   Costello AM., 2003, PUNYCODE BOOTSTRING
   Faltstrom P., 2005, INTERNATIONALIZING D
   Keiser J, 2021, SOFTWARE PRACT EXPER, V51, P950, DOI 10.1002/spe.2920
   Kostoulas MG., 2006, P 15 INT C WORLD WID, P93, DOI DOI 10.1145/1135777.1135796
   Langdale G, 2019, VLDB J, V28, P941, DOI 10.1007/s00778-019-00578-5
   Lemire D, 2022, SOFTWARE PRACT EXPER, V52, P555, DOI 10.1002/spe.3036
   Lemire D, 2021, SOFTWARE PRACT EXPER, V51, P1700, DOI 10.1002/spe.2984
   Mula W, 2020, SOFTWARE PRACT EXPER, V50, P89, DOI 10.1002/spe.2777
   Mula W, 2018, ACM T WEB, V12, DOI 10.1145/3132709
   Park H, 2016, ACM T ARCHIT CODE OP, V13, DOI 10.1145/3004281
   Reynolds J, 2022, LECT NOTES COMPUT SC, V13556, P166, DOI 10.1007/978-3-031-17143-7_9
   Schmidt DC., 2000, GPERF PERFECT HASH F, P461
   Van Engelen RA., 2004, P INT C INTERNET COM
NR 17
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2024
VL 54
IS 5
BP 744
EP 758
DI 10.1002/spe.3296
EA DEC 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NB0V3
UT WOS:001117049200001
OA hybrid, Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Carnà, S
   Marotta, R
   Pellegrini, A
   Quaglia, F
AF Carna, Stefano
   Marotta, Romolo
   Pellegrini, Alessandro
   Quaglia, Francesco
TI Strategies and software support for the management of hardware
   performance counters
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomic computing; hardware performance counters; profiling;
   self-tuning
AB Hardware performance counters (HPCs) are facilities offered by most off-the-shelf CPU architectures. They are a vital support to post-mortem performance profiling and are exploited by standard tools such as Linux or Intel V-Tune. Nevertheless, an increasing number of application domains (e.g., simulation, task-based high-performance computing, or cybersecurity) are exploiting them to perform different activities, such as self-tuning, autonomic optimization, and/or system inspection. This repurposing of HPCs can be difficult, for example, because of the overhead for extracting relevant information. This overhead might render any online or self-tuning activity ineffective. This article discusses various practical strategies to exploit HPCs beyond post-mortem profiling, suitable for different application contexts. The presented strategies are accompanied by a general primer on HPCs usage on Linux. We also provide reference x86 (both Intel and AMD) implementations targeting the Linux kernel, upon which we present an experimental assessment of the viability of our proposals.
C1 [Carna, Stefano] Sapienza Univ Rome, DIAG, Rome, Italy.
   [Marotta, Romolo; Pellegrini, Alessandro; Quaglia, Francesco] Univ Roma Tor Vergata, DICII, Rome, Italy.
   [Marotta, Romolo] Ctr Nazl Ric High Performance Comp Big Data & Quan, Casalecchio Di Reno, BO, Italy.
C3 Sapienza University Rome; University of Rome Tor Vergata
RP Pellegrini, A (corresponding author), Univ Roma Tor Vergata, DICII, Rome, Italy.
EM a.pellegrini@ing.uniroma2.it
RI Marotta, Romolo/ABH-1225-2020; Pellegrini, Alessandro/S-6105-2018
OI Marotta, Romolo/0000-0001-7589-9274; Pellegrini,
   Alessandro/0000-0002-0179-9868
FU Ministero dell'Universita e della Ricerca; Italian Research Center on
   High Performance Computing, Big Data and Quantum Computing (ICSC)
   [M4C2-19]
FX Ministero dell'Universita e della Ricerca; Italian Research Center on
   High Performance Computing, Big Data and Quantum Computing (ICSC),
   Grant/Award Number: M4C2-19
CR Adhianto L, 2010, CONCURR COMP-PRACT E, V22, P685, DOI 10.1002/cpe.1553
   Akiyama Soramichi., 2017, P 7 INT WORKSHOP RUN, P1
   AMD64 Technology, 2021, AMD64 ARCH PROGR MAN, V1-5
   Ammons G, 1997, ACM SIGPLAN NOTICES, V32, P85, DOI 10.1145/258916.258924
   Banerjee SS, 2021, ASPLOS XXVI: TWENTY-SIXTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P832, DOI 10.1145/3445814.3446739
   Bare Keith A., 2010, P 2010 IEEE NETW OP, P551
   Basu K, 2020, IEEE T INF FOREN SEC, V15, P3213, DOI 10.1109/TIFS.2020.2983287
   Bircher WL, 2012, IEEE T COMPUT, V61, P563, DOI 10.1109/TC.2011.47
   Bitzes G., OVERHEAD PROFILING U
   Calandrino JM, 2009, EUROMICRO, P194, DOI 10.1109/ECRTS.2009.13
   Canella C, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P249
   Carn?? S., 2022, DIGIT THREAT RES PRA, V4, P1
   Carnà S, 2019, WINT SIMUL C PROC, P2759, DOI 10.1109/WSC40007.2019.9004901
   Das S, 2020, ANN COMPUT SECURITY, P345, DOI 10.1145/3427228.3427269
   Das S, 2019, P IEEE S SECUR PRIV, P20, DOI 10.1109/SP.2019.00021
   Dashti M, 2013, ACM SIGPLAN NOTICES, V48, P381, DOI 10.1145/2499368.2451157
   Dean J, 1997, INT SYMP MICROARCH, P292, DOI 10.1109/MICRO.1997.645821
   Di Gennaro I, 2016, IEEE ACM INT SYMP, P291, DOI 10.1109/CCGrid.2016.91
   Diener Matthias, 2010, Proceedings of the 2010 IEEE 12th International Conference on High Performance Computing and Communications (HPCC 2010), P491, DOI 10.1109/HPCC.2010.114
   Drongowski Paul J., 2008, INTRO ANAL OPTIMIZAT
   Eranian S., P 2006 OTT LIN S
   Fujimoto R. M., 1990, Distributed Simulation. Proceedings of the SCS Multiconference, P23
   Gruss Daniel, 2016, Detection of Intrusions and Malware, and Vulnerability Assessment. 13th International Conference, DIMVA 2016. Proceedings: LNCS 9721, P279, DOI 10.1007/978-3-319-40667-1_14
   Gruss D, 2017, LECT NOTES COMPUT SC, V10379, P161, DOI 10.1007/978-3-319-62105-0_11
   Hassan S, 2009, 2009 SECOND INTERNATIONAL CONFERENCE ON DEVELOPMENTS IN ESYSTEMS ENGINEERING (DESE 2009), P273, DOI 10.1109/DeSE.2009.22
   Herath N, These are not your grand daddys cpu performance counters-cpu hardware performance counters for security
   Herlihy M, 2011, LECT NOTES COMPUT SC, V7109, P313, DOI 10.1007/978-3-642-25873-2_22
   HongWei Zhou, 2014, Information Security Practice and Experience. 10th International Conference, ISPEC 2014. Proceedings: LNCS 8434, P172, DOI 10.1007/978-3-319-06320-1_14
   Ian KC., STRESS NG STRESS TES
   Intel Corporation, Intel 64 and IA-32 Architectures Software Developer's Manuals
   Intel Corporation, 2009, INT VTUNETM PROF US
   Intel Corporation, 2020, 8 9 GEN INT COR PROC
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Lachaize R., 2012, USENIX ANN TECHNICAL, P53
   Levon J., 2004, Oprofile: A system profiler for linux
   Li CM, 2022, IEEE T COMPUT, V71, P1320, DOI 10.1109/TC.2021.3082471
   Lipp M, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P973
   Lv Y., 2018, 2018 51 ANN IEEE ACM
   Marathe J., 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P90, DOI 10.1145/1122971.1122987
   Merkel A, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P153
   Molka Daniel., 2017, P 8 ACMSPEC INT C PE, P27, DOI DOI 10.1145/3030207.3030223
   Mucci Philip J., 1999, PAPI PORTABLE INTERF
   Mytkowicz T., 2007, PAR DISTR PROC S 200, P1
   Neill R, 2017, ACM T ARCHIT CODE OP, V14, DOI 10.1145/3148054
   Neville-Neil GV, 2017, COMMUN ACM, V60, P29, DOI 10.1145/3108930
   Nomani J., 2015, P 4 WORKSH HARDW ARC, P1
   O'Brien K, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3078811
   Ozcelik B, 2016, IEEE T SOFTWARE ENG, V42, P26, DOI 10.1109/TSE.2015.2442577
   Pellegrini Alessandro, 2012, P 4 INT ICST C SIM T, P96, DOI [10.4108/icst.simutools.2011.245551, DOI 10.4108/ICST.SIMUTOOLS.2011.245551]
   Pettersson M., PERFCTR LINUX PERFOR
   Pierce C., DETECTING SPECTRE ME
   Sapan B., 2008, P 8 USENIX C OP SYST
   Shahid A, 2021, IEEE ACCESS, V9, P63149, DOI 10.1109/ACCESS.2021.3075139
   Shahid A, 2021, J PARALLEL DISTR COM, V151, P38, DOI 10.1016/j.jpdc.2021.01.007
   Shahid Arsalan, 2017, [Supercomputing Frontiers and Innovations, Supercomputing Frontiers and Innovations], V4, P50
   Singh Karan, 2009, Computer Architecture News, V37, P46, DOI 10.1145/1577129.1577137
   Suciu A, 2011, COMM COM INF SC, V189, P123
   Treibig J., 2010, 2010 39th International Conference on Parallel Processing Workshops (ICPPW), P207, DOI 10.1109/ICPPW.2010.38
   Wang Z, 2009, ACM SIGPLAN NOTICES, V44, P75, DOI 10.1145/1594835.1504189
   Weaver Vincent M., 2013, IEEE International Symposium on Performance Analysis of Systems and Software (ISPASS 2013), P215
   Weaver VM., 2 INT WORKSH PERF AN
   Yasin A, 2014, INT SYM PERFORM ANAL, P35, DOI 10.1109/ISPASS.2014.6844459
   Zellweger Gerd, 2016, P 7 ACM SIGOPS AS PA
NR 63
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2023
VL 53
IS 10
BP 1928
EP 1957
DI 10.1002/spe.3236
EA JUL 2023
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R6FK9
UT WOS:001031372700001
DA 2024-07-18
ER

PT J
AU Zhang, HT
   Lin, WW
   Xie, R
   Li, SH
   Dai, ZY
   Wang, JZ
AF Zhang, Haotong
   Lin, Weiwei
   Xie, Rong
   Li, Shenghai
   Dai, Zhiyan
   Wang, James Z.
TI An optimal container update method for edge-cloud collaboration
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE container; data duplicate; Docker; edge-cloud collaboration
ID DOCKER
AB Emerging computing paradigms provide field-level service responses for users, for example, edge computing, fog computing, and MEC. Edge virtualization technologies represented by Docker can provide a platform-independent, low-resource-consumption operating environment for edge service. The image-pulling time of Docker is a crucial factor affecting the start-up speed of edge services. The layer reuse mechanism of native Docker cannot fully utilize the duplicate data of node local images. In this paper, we propose a chunk reuse mechanism (CRM), which effectively targets node-local duplicate data during container updates and reduces the volume of data transmission required for image building. We orchestrate the CRM process for cloud and remote-cloud nodes to ensure that the resource overhead from container update data preparation and image reconstruction is within an acceptable range. The experimental results show that the CRM proposed in this paper can effectively utilize the node local duplicate data in the synchronous update of containers in multiple nodes, reduce the volume of data transmission, and significantly improve container update efficiency.
C1 [Zhang, Haotong] South China Univ Technol, Sch Software Engn, Guangzhou, Peoples R China.
   [Lin, Weiwei; Li, Shenghai; Dai, Zhiyan] South China Univ Technol, Sch Comp Sci & Engn, Guangzhou, Peoples R China.
   [Lin, Weiwei; Li, Shenghai] Peng Cheng Lab, Dept New Network Technol, Shenzhen, Peoples R China.
   [Xie, Rong] Guangdong Univ Finance & Econ, Sch Informat, Guangzhou, Peoples R China.
   [Wang, James Z.] Clemson Univ, Sch Comp, Clemson, SC USA.
C3 South China University of Technology; South China University of
   Technology; Peng Cheng Laboratory; Guangdong University of Finance &
   Economics; Clemson University
RP Lin, WW (corresponding author), South China Univ Technol, Sch Comp Sci & Engn, Guangzhou, Peoples R China.
EM linww@scut.edu.cn
RI Chen, YiJun/KFS-9282-2024; li, Shang/KHU-3233-2024; zhang,
   quan/KHY-9180-2024; chen, xu/JNT-3068-2023; Wang, James/JAD-0675-2023
OI lin, weiwei/0000-0001-6876-1795
FU Key-Area Research and Development Program of Guangdong Province
   [2021B0101420002]; National Natural Science Foundation of China
   [62072187]; Guangdong Major Project of Basic and Applied Basic Research
   [2019B030302002]; Guangdong Marine Economic Development Special Fund
   Project (GDNRC); Guangzhou Development Zone Science and Technology
   Project [R01 HD 069374, 1759856]; National Institutes of Health
   (NIH)/Eunice Kennedy Shriver National Institute of Child Health and
   Human Development [GDNRC[2022]17]; National Science Foundation (NSF) DBI
   [PCL2021A09]; Major Key Project of PCL;  [2021GH10];  [2020GH10]
FX This work is supported by Key-Area Research and Development Program of
   Guangdong Province (2021B0101420002), National Natural Science
   Foundation of China (62072187), Guangdong Major Project of Basic and
   Applied Basic Research (2019B030302002), the Major Key Project of PCL
   (PCL2021A09), Guangdong Marine Economic Development Special Fund Project
   (GDNRC[2022]17) and Guangzhou Development Zone Science and Technology
   Project (2021GH10, 2020GH10). James Z. Wang work was supported (in part)
   by the National Institutes of Health (NIH)/Eunice Kennedy Shriver
   National Institute of Child Health and Human Development (R01 HD 069374)
   and the National Science Foundation (NSF) DBI (1759856).
CR Addad RA, 2020, IEEE NETWORK, V34, P84, DOI 10.1109/MNET.2019.1800268
   Addad RA, 2020, IEEE NETWORK, V34, P92, DOI 10.1109/MNET.001.1800289
   Alam M, 2018, IEEE COMMUN MAG, V56, P118, DOI 10.1109/MCOM.2018.1701233
   Ascigil O, 2022, IEEE T SERV COMPUT, V15, P2410, DOI 10.1109/TSC.2021.3052139
   Avasalcai C, 2022, IEEE T SERV COMPUT, V15, P2982, DOI 10.1109/TSC.2021.3074188
   Dai W., 2022, IEEE T IND INF, V1-11
   Deng SG, 2022, IEEE T PARALL DISTR, V33, P2346, DOI 10.1109/TPDS.2021.3137380
   Dolati M., 2022, IEEE TRANS NETW SERV, p1
   Fan H, 2021, IEEE INT SYMP CIRC S, DOI 10.1109/ISCAS51556.2021.9401483
   Gill SS, 2022, INTERNET THINGS-NETH, V19, DOI 10.1016/j.iot.2022.100514
   Gu L., 2021, IEEE INFOCOM 2021 IE
   Harter T., 2016, C FIL STOR TECHN
   Hu Shihong., 2022, IEEE Transactions on Mobile Computing, P1
   Li LZ, 2019, IEEE NETWORK, V33, P136, DOI 10.1109/MNET.2018.1700394
   Li SS, 2022, PROCEEDINGS OF THE ACM WEB CONFERENCE 2022 (WWW'22), P3358, DOI 10.1145/3485447.3512154
   Li YP, 2022, INT WORKSH QUAL SERV, DOI 10.1109/IWQoS54832.2022.9812887
   Lin HP, 2018, IEEE NETWORK, V32, P114, DOI 10.1109/MNET.2018.1700367
   Liu L, 2022, IEEE T IND INFORM, V18, P719, DOI 10.1109/TII.2021.3088135
   Lou J, 2023, IEEE T SERV COMPUT, V16, P1118, DOI 10.1109/TSC.2022.3159728
   Ma L, 2019, IEEE T MOBILE COMPUT, V18, P2020, DOI 10.1109/TMC.2018.2871842
   Mahmud R, 2022, IEEE INTERNET THINGS, V9, P4125, DOI 10.1109/JIOT.2021.3103053
   Morabito R, 2018, IEEE NETWORK, V32, P102, DOI 10.1109/MNET.2018.1700175
   Olivier Pierre, 2021, IEEE Transactions on Computers
   Perez R, 2022, IEEE T NETW SERV MAN, V19, P1489, DOI 10.1109/TNSM.2022.3150586
   Rabin M. O., 1981, Fingerprinting by random polynomials
   Sami H, 2020, IEEE T NETW SERV MAN, V17, P1026, DOI 10.1109/TNSM.2019.2963643
   Sharghivand Nafiseh., 2022, IEEE Transactions on Services Computing
   Shih YY, 2019, IEEE T NETW SERV MAN, V16, P1419, DOI 10.1109/TNSM.2019.2948764
   Skourtis D, 2019, 11 USENIX WORKSH HOT
   Smet P, 2018, IEEE T NETW SERV MAN, V15, P1161, DOI 10.1109/TNSM.2018.2844187
   Tang Z., 2022, IEEE T MOBILE COMPUT
   Valsamas P, 2022, IEEE T NETW SERV MAN, V19, P1351, DOI 10.1109/TNSM.2021.3130792
   Xia W, 2016, P IEEE, V104, P1681, DOI 10.1109/JPROC.2016.2571298
   Yin L., 2022, IEEE INTERNET THINGS
   Zhang JW, 2021, IEEE T PARALL DISTR, V32, P2086, DOI 10.1109/TPDS.2021.3059447
   Zhang YC, 2017, IEEE T COMPUT, V66, P199, DOI 10.1109/TC.2016.2595565
   Zhao N., 2020, USENIX ANN TECHN C A
   Zhao NN, 2021, IEEE T PARALL DISTR, V32, P918, DOI 10.1109/TPDS.2020.3034517
NR 38
TC 2
Z9 2
U1 2
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2024
VL 54
IS 4
SI SI
BP 617
EP 634
DI 10.1002/spe.3232
EA JUN 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KD1F8
UT WOS:001016099800001
DA 2024-07-18
ER

PT J
AU Rosales, E
   Basso, M
   Rosà, A
   Binder, W
AF Rosales, Eduardo
   Basso, Matteo
   Rosa, Andrea
   Binder, Walter
TI Large-scale characterization of Java streams
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code repositories; dynamic program analysis; empirical studies; GitHub;
   Java streams; Java virtual machine
AB Java streams are receiving the attention of developers targeting the Java virtual machine (JVM) as they ease the development of data-processing logic, while also favoring code extensibility and maintainability through a concise and declarative style based on functional programming. Recent studies aim to shedding light on how Java developers use streams. However, they consider only small sets of applications and mainly apply manual code inspection and static analysis techniques. As a result, the large-scale dynamic analysis of stream processing remains an open research question. In this article, we present the first large-scale empirical study on the use of streams in Java code exercised via unit tests. We present stream-analyzer, a novel dynamic program analysis (DPA) that collects runtime information and key metrics, which enable a fine-grained characterization of sequential and parallel stream processing. We use a fully automatic approach to massively apply our DPA for the analysis of open-source software projects hosted on GitHub. Our findings advance the understanding of the use of Java streams. Both the scale of our analysis and the profiling of dynamic information enable us to confirm with more confidence the outcome highlighted at a smaller scale by related work. Moreover, our study reports the popularity of many features of the Stream API and highlights multiple findings about runtime characteristics unique to streams, while also revealing inefficient stream processing and stream misuses. Finally, we present implications of our findings for developers of the Stream API, tool builders and researchers, and educators.
C1 [Rosales, Eduardo; Basso, Matteo; Rosa, Andrea; Binder, Walter] Univ Svizzera Italiana, Fac Informat, Lugano, Switzerland.
   [Rosales, Eduardo] Univ Svizzera Italiana, Fac Informat, CH-6900 Lugano, Switzerland.
C3 Universita della Svizzera Italiana; Universita della Svizzera Italiana
RP Rosales, E (corresponding author), Univ Svizzera Italiana, Fac Informat, CH-6900 Lugano, Switzerland.
EM rosale@usi.ch
OI Binder, Walter/0000-0002-2477-2182; Rosa, Andrea/0000-0002-6467-0113
CR Al-Rubaye A., 2020, ARXIV
   Amazon Web Services, 2022, ABOUT US
   [Anonymous], 2022, Selenium
   Basso M., 2022, OPTIMIZING PARALLEL, DOI [10.1109/ICECCS54210.2022.00012, DOI 10.1109/ICECCS54210.2022.00012]
   Basso M., 2022, EUROPAR, DOI [10.1007/978-3-031-12597-3_3, DOI 10.1007/978]
   Biboudis A., 2015, LIPICS, DOI [10.4230/LIPIcs.ECOOP.2015.591, DOI 10.4230/LIPICS.ECOOP.2015.591]
   Biboudis A., 2014, CLASH LAMBDAS
   Binder W., 2007, P 5 INT S PRINC PRAC, DOI DOI 10.1145/1294325.1294344
   Bird R., 1988, INTRO FUNCTIONAL PRO
   Bloch Joshua., 2008, The Java Series, V2nd
   Borges H., 2016, PROMISE, DOI [10.1145/2972958.2972966, DOI 10.1145/2972958.2972966]
   Bustamante P., 2022, CRYPTOMARKET JAVA
   Chan A., 2022, CLIENT LEDGER CORE D
   Costa D., 2017, P 8 ACM SPEC INT C P, P389, DOI [10.1145/3030207.3030221, DOI 10.1145/3030207.3030221]
   CryptoMarket, 2022, ABOUT US
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   dockerdocs, 2022, Dockerdocs
   Fink SJ, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348255
   GitHub, 2022, REST API
   GitHub, 2022, ABOUT US
   Goetz B., 2015, DOES STREAM FOREACH
   Google, 2022, GOOGL CLOUD PUB SUB
   Gosain A., 2015, FICTA, DOI [10.1007/978-3-319-11933-5_13, DOI 10.1007/978]
   Grcevski N., 2004, VM, DOI [10.5555/1267242.1267254, DOI 10.5555/1267242.1267254]
   Guava, 2022, CLASS IMMUTABLEMAP K
   Hayashi A., 2015, Proceedings of the principles and practices of programming on the Java platform, P27
   Hilton M, 2018, IEEE INT CONF AUTOM, P53, DOI 10.1145/3238147.3238183
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Ishizaki K, 2015, INT CONFER PARA, P419, DOI 10.1109/PACT.2015.46
   Kell S., 2012, VMIL, DOI [10.1145/2414740.2414747, DOI 10.1145/2414740.2414747]
   Khatchadourian R., 2020, FASE, DOI [10.1007/978-3-030-45234-6_5, DOI 10.1007/978]
   Khatchadourian R, 2019, PROC INT CONF SOFTW, P619, DOI 10.1109/ICSE.2019.00072
   Khatchadourian R, 2018, IEEE INT WORK C SO, P34, DOI 10.1109/SCAM.2018.00011
   Kiczales G., 2001, Proceedings of the 8th European Software Engineering Conference Held Jointly with 9th ACM SIGSOFT International Symposium on Foundations of Software Engineering, ESEC/FSE-9, ACM, New York, NY, USA, P313, DOI DOI 10.1145/503271.503260
   Kiselyov O., 2017, POPL, DOI [10.1145/3009837.3009880, DOI 10.1145/3009837.3009880]
   Kiselyov O, 2017, ACM SIGPLAN NOTICES, V52, P285, DOI 10.1145/3093333.3009880
   Lea D., 2014, USE PARALLEL STREAMS
   Lea Doug, 2000, JAVA, P36
   Ma'ayan DD., 2018, SQUADE, DOI [10.1145/3194095.3194102, DOI 10.1145/3194095.3194102]
   Marek L., 2013, ACM, DOI [10.1145/2637365.2517219, DOI 10.1145/2637365.2517219]
   Marek Lukas, 2012, AOSD, P239, DOI [10.1145/2162049.2162077, DOI 10.1145/2162049.2162077]
   Mazinanian D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133909
   Mehlhorn N, 2022, PROC INT CONF SOFTW, P1157, DOI 10.1145/3510003.3519016
   Mei H., 2015, JTRES, DOI [10.1145/2822304.2822314, DOI 10.1145/2822304.2822314]
   Moller A, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428236
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Monperrus Martin, 2019, Ubiquity, V2019, P1, DOI 10.1145/3349589
   Nielebock S, 2019, EMPIR SOFTW ENG, V24, P103, DOI 10.1007/s10664-018-9622-9
   Nostas J., 2021, ICCSA, DOI [10.1007/978-3-030-87007-2_23, DOI 10.1007/978]
   Oracle, 2022, INT STREAM V
   Oracle, 2022, INT SUPPL T
   Oracle, 2022, INT SPLIT T
   Oracle, 2022, JAVA VIRTUAL MACHINE
   Oracle, 2022, PACK JAV UT STREAM
   Oracle, 2022, CLASS OPT T
   Oracle, 2022, CLASS ARR
   Oracle, 2022, INT BASESTREAM T S E
   Oracle, 2022, CLASS FORKJOINPOOL
   Oracle, 2022, CLASS COLL
   Oracle, 2022, INT INTSTREAM T
   Petric J., 2018, PROMISE, DOI [10.1145/3273934.3273939, DOI 10.1145/3273934.3273939]
   Prodonovich J., 2022, PUB SUB EMULATOR KAF
   Prokopec A., 2019, ACM, DOI [10.1145/3314221.3314637, DOI 10.1145/3314221.3314637]
   Renouf C., 2009, IBM J9 JAVA VIRTUAL, P15
   Ribeiro F., 2019, BRAZ S PROGR LANG, DOI [10.1145/3355378.3355386, DOI 10.1145/3355378.3355386]
   Rosa A., 2017, GPCE 2017, DOI [10.1145/3136040.3136061, DOI 10.1145/3136040.3136061]
   Rosa A., 2018, CGO, DOI [10.1145/3168828, DOI 10.1145/3168828]
   Rosà A, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3338497
   Rosà A, 2018, J VISUAL LANG COMPUT, V49, P29, DOI 10.1016/j.jvlc.2018.10.007
   Rosales E., 2023, ART SCI ENG PROGRAM, V7, DOI [10.22152/programming-journal.org/2023/7/10, DOI 10.22152/PROGRAMMING]
   Rosales E., 2020, ACM, DOI [10.1145/3388831.3388851, DOI 10.1145/3388831.3388851]
   Rosales E, 2022, 2022 26TH INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS 2022), P143, DOI 10.1109/ICECCS54210.2022.00025
   Schiavio Filippo, 2022, GPCE 2022: Proceedings of the 21st ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences, P179, DOI 10.1145/3564719.3568699
   Shangchuan Y., 2022, CUSTOMIZED PRECISE S
   Shima H., 2022, WORDNET SIMILARITY J
   Siri, 2022, AMAZON SQS JAVA TEMP
   Snyk, 2022, JVM EC REP 2021
   Software Freedom Conservancy, 2022, WEBDRIVER CAP
   St-Amour V., 2012, ACM, DOI [10.1145/2398857.2384629, DOI 10.1145/2398857.2384629]
   Tanaka H, 2019, IEICE T INF SYST, VE102D, P2414, DOI 10.1587/transinf.2019MPP0002
   The Apache Software Foundation, 2022, AP KAFK
   The Apache Software Foundation, 2022, AP MAV PROJ
   The JUnit Team, 2022, JUNIT
   The Trustees of Princeton University, 2022, WORDNET
   Tsantalis N, 2017, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2017.14
   Urma RG., 2014, JAVA 8 ACTION LAMBDA
   Villazon A., 2019, ECOOP, DOI [10.4230/LIPIcs.ECOOP.2019.20, DOI 10.4230/LIPICS.ECOOP.2019.20]
   WALA Team, 2019, WALA
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Zheng Y., 2016, SANER, DOI [10.1109/SANER.2016.70, DOI 10.1109/SANER.2016.70]
NR 90
TC 0
Z9 0
U1 5
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2023
VL 53
IS 9
BP 1763
EP 1792
DI 10.1002/spe.3213
EA JUN 2023
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N8MZ4
UT WOS:000999541700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zese, R
   Bellodi, E
AF Zese, Riccardo
   Bellodi, Elena
TI A web application for reasoning on probabilistic description logics
   knowledge bases
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE description logics; inference; probabilistic description logics;
   semantic web; web applications
ID PSYCHOMETRIC EVALUATION; SYSTEM; FUZZY
AB The aim of the Semantic Web is making information and resources from the Web automatically processable by machines. Usually, the uncertainty characterizing much of this information is addressed by means of a probabilistic semantics. Following the vision of a "Probabilistic Semantic Web", a plethora of probabilistic semantics have been proposed: some of them change the syntax and/or the semantics itself of the knowledge representation language, others allow one to annotate axioms of a knowledge base with a probability value. Among the latter, the DISPONTE semantics exploits probabilistic annotations to extend query answering with the capability of returning the probability of a query being true in a domain. In order to promote the adoption of Probabilistic Semantic Web we first developed BUNDLE, a framework that can exploit different underlying (probabilistic and non-probabilistic) reasoners to perform probabilistic inference under the DISPONTE semantics. In this paper we present a web application for BUNDLE, to show how DISPONTE is easily usable even in already established applications and systems. It allows users to query a DISPONTE knowledge base written or uploaded directly in the application interface by using just a web browser, without the need to install any software on their machine. It is accessible on the web at and also provides some examples for familiarizing with the application. The results of a usability evaluation involving human participants are also reported, showing the relevance and the practical impact of the tool and possible ways for improvement.
C1 [Zese, Riccardo] Univ Ferrara, Dept Chem Pharmaceut & Agr Sci, Ferrara, Italy.
   [Bellodi, Elena] Univ Ferrara, Dept Engn, Ferrara, Italy.
   [Zese, Riccardo] Univ Ferrara, Dept Chem Pharmaceut & Agr Sci, Via Borsari 46, I-44121 Ferrara, Italy.
C3 University of Ferrara; University of Ferrara; University of Ferrara
RP Zese, R (corresponding author), Univ Ferrara, Dept Chem Pharmaceut & Agr Sci, Via Borsari 46, I-44121 Ferrara, Italy.
EM riccardo.zese@unife.it
FU National Group of Computing Science (GNCS-INDAM)
FX This work was partly supported by the "National Group of Computing
   Science (GNCS-INDAM)".
CR [Anonymous], 2015, Semantic web
   [Anonymous], 2006, P 10 INT C PRINCIPLE
   Baader F, 2007, LECT NOTES ARTIF INT, V4667, P52
   Baader F, 2008, FOUND ARTIF INTELL, P135, DOI 10.1016/S1574-6526(07)03003-9
   Bellodi E., 2011, CEUR WORKSHOP P, V778, P75
   Bellodi E, 2017, SOFTWARE PRACT EXPER, V47, P125, DOI 10.1002/spe.2410
   Bobillo F, 2018, FUZZY SET SYST, V351, P1, DOI 10.1016/j.fss.2018.03.011
   Calero C., 2006, Ontologies for software engineering and software technology
   Ceylan, 2015, P 4 INT WORKSH OWL R, V1387, P8
   Cota G, 2018, LECT NOTES ARTIF INT, V11142, P78, DOI 10.1007/978-3-030-00461-3_6
   Gavanelli M, 2017, LECT NOTES ARTIF INT, V10091, P187, DOI 10.1007/978-3-319-50953-2_14
   Giordano L, 2022, J LOGIC COMPUT, V32, P178, DOI 10.1093/logcom/exab082
   Gutiérrez-Basulto V, 2017, J ARTIF INTELL RES, V58, P1, DOI 10.1613/jair.5222
   Horridge M Parsia B., 2009, OWL EXPLANATION WORK
   Kalyanpur Aditya., 2006, Debugging and repair of OWL ontologies
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   Klinov P., 2008, The Semantic Web: Research and Applications, V5021, P822
   Klinov P, 2008, LECT NOTES COMPUT SC, V5318, P213, DOI 10.1007/978-3-540-88564-1_14
   Lewis JR, 2017, J USABILITY STUD, V12, P183
   Lewis JR, 2002, INT J HUM-COMPUT INT, V14, P463, DOI 10.1080/10447318.2002.9669130
   LEWIS JR, 1995, INT J HUM-COMPUT INT, V7, P57, DOI 10.1080/10447319509526110
   Lukasiewicz T, 2007, LECT NOTES ARTIF INT, V4724, P187
   Pileggi SF., 2018, P 29 AUSTR C INF SYS, p1
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Renkens J., 2012, NIPS PROB PROGR WORK
   Riguzzi Fabrizio, 2013, Web Reasoning and Rule Systems. 7th International Conference, RR 2013. Proceedings. LNCS 7994, P183, DOI 10.1007/978-3-642-39666-3_14
   Riguzzi F., 2012, P 8 INT WORKSH UNC R, V900, P3
   Riguzzi F, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P4310
   Riguzzi F, 2016, SOFTWARE PRACT EXPER, V46, P1381, DOI 10.1002/spe.2386
   Riguzzi F, 2015, SEMANT WEB, V6, P477, DOI 10.3233/SW-140154
   Sato T., 1995, ICLP
   Schlobach S., 2003, P 18 INT JOINT C ART, P355
   Shearer R., 2008, CEUR WORKSHOP P, V432, P1
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Stearns MQ, 2001, J AM MED INFORM ASSN, P662
   Stoilos G., 2005, P INT WORKSH OWL EXP, V188, P1
   Straccia U, 2005, LECT NOTES COMPUT SC, V3532, P167
   Tsarkov D, 2006, LECT NOTES ARTIF INT, V4130, P292
   Tudorache T., 2008, OWLED, P432
   Tullis T.S., 2004, USABILITY PROFESSION, P1
   van Bremen T, 2020, KUNSTL INTELL, V34, P501, DOI 10.1007/s13218-020-00670-x
   W3C, 2012, OWL 2 WEB ONTOLOGY L
   Yu HQ, 2022, INT J SEMANT WEB INF, V18, DOI 10.4018/IJSWIS.297145
   Zese R, 2017, STUD SEMANTIC WEB, V28, P1
   Zese Riccardo, 2014, Uncertainty Reasoning for the Semantic Web III. ISWC International Workshops URSW 2011-2013. Revised Selected Papers: LNCS 8816, P79, DOI 10.1007/978-3-319-13413-0_5
   Zese R, 2019, THEOR PRACT LOG PROG, V19, P449, DOI 10.1017/S1471068418000480
   Zese R, 2018, ANN MATH ARTIF INTEL, V82, P101, DOI 10.1007/s10472-016-9529-3
   Zese Riccardo., 2013, P 28 ITALIAN C COMPU, P33
NR 48
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2023
VL 53
IS 9
BP 1741
EP 1762
DI 10.1002/spe.3212
EA APR 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N8MZ4
UT WOS:000976758600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Yang, J
   Baker, T
   Gill, SS
   Yang, XC
   Han, WF
   Li, YZ
AF Yang, Jie
   Baker, Thar
   Gill, Sukhpal Singh
   Yang, Xiaochuan
   Han, Weifeng
   Li, Yuanzhang
TI A federated learning attack method based on edge collaboration via cloud
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Byzantine-robust attack; collaborative edge computing; federated
   learning; poisoning attacks
AB Federated learning (FL) is widely used in edge-cloud collaborative training due to its distributed architecture and privacy-preserving properties without sharing local data. FLTrust, the most state-of-the-art FL defense method, is a federated learning defense system with trust guidance. However, we found that FLTrust is not very robust. Therefore, in the edge collaboration scenario, we mainly study the poisoning attack on the FLTrust defense system. Due to the aggregation rule, FLTrust, with trust guidance, the model updates of participants with a significant deviation from the root gradient direction will be eliminated, which makes the poisoning effect on the global model not obvious. To solve this problem, under the premise of not being deleted by the FLTrust aggregation rules, we construct malicious model updates that deviate from the trust gradient to the greatest extent to achieve model poisoning attacks. First, we utilize the rotation of high-dimensional vectors around axes to construct malicious vectors with fixed orientations. Second, the malicious vector is constructed by the gradient inversion method to achieve an efficient and fast attack. Finally, a method of optimizing random noise is used to construct a malicious vector with a fixed direction. Experimental results show that our attack method reduces the model accuracy by 20%, severely undermining the usability of the model. Attacks are also successful hundreds of times faster than the FLTrust adaptive attack method.
C1 [Yang, Jie] Beijing Inst Technol, Sch Cyberspace Sci & Technol, Beijing, Peoples R China.
   [Baker, Thar] Univ Sharjah, Coll Comp & Informat, Dept Comp Sci, Sharjah 27272, U Arab Emirates.
   [Gill, Sukhpal Singh] Queen Mary Univ London, Sch Elect Engn & Comp Sci, London, England.
   [Yang, Xiaochuan; Li, Yuanzhang] Beijing Inst Technol, Sch Comp Sci, 5 Zhongguancun South St, Beijing, Peoples R China.
   [Han, Weifeng] China Railway Tunnel Bur Grp Co Ltd, Sch Mech Mfg & Automat, Zhengzhou, Henan, Peoples R China.
C3 Beijing Institute of Technology; University of Sharjah; University of
   London; Queen Mary University London; Beijing Institute of Technology
RP Baker, T (corresponding author), Univ Sharjah, Coll Comp & Informat, Dept Comp Sci, Sharjah 27272, U Arab Emirates.; Li, YZ (corresponding author), Beijing Inst Technol, Sch Comp Sci, 5 Zhongguancun South St, Beijing, Peoples R China.
EM tshamsa@sharjah.ac.ae; popular@bit.edu.cn
RI Gill, Sukhpal Singh/J-5930-2014; Baker, Thar/H-6073-2019; Han,
   Weifeng/D-8853-2013
OI Gill, Sukhpal Singh/0000-0002-3913-0369; Baker,
   Thar/0000-0002-5166-4873; Han, Weifeng/0000-0001-5121-8112
FU National Key Research and Development Program of China; National Natural
   Science Foundation of China;  [2020YFB1712101];  [U1936218];  [62072037]
FX ACKNOWLEDGMENTS This work was supported by the National Key Research and
   Development Program of China under Grant 2020YFB1712101 and the National
   Natural Science Foundation of China (Nos. U1936218 and 62072037).
CR Al-khafajiy M, 2019, FUTURE GENER COMP SY, V100, P266, DOI 10.1016/j.future.2019.05.015
   Bagdasaryan E, 2020, PR MACH LEARN RES, V108, P2938
   Baker T, 2020, SOFTWARE PRACT EXPER, V50, P503, DOI 10.1002/spe.2688
   Baruch M, 2019, ADV NEUR IN, V32
   Bhagoji AN, 2019, PR MACH LEARN RES, V97
   Biggio B., 2012, POISONING ATTACKS S
   Blanchard P, 2017, ADV NEUR IN, V30
   Cao X., 2020, FLTRUST BYZANTINE R
   Cao XY, 2022, IEEE COMPUT SOC CONF, P3395, DOI 10.1109/CVPRW56347.2022.00383
   Damaskinos Georgios, 2019, PROC MACH LEARN SYST, V1, P81
   Demontis A, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P321
   Deng FY, 2022, SOFTWARE PRACT EXPER, V52, P1849, DOI 10.1002/spe.3094
   Fang MH, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1623
   Fung C., 2018, MITIGATING SYBILS
   Gill SS, 2022, INTERNET THINGS-NETH, V19, DOI 10.1016/j.iot.2022.100514
   Gouissem A, 2022, IEEE WCNC, P572, DOI 10.1109/WCNC51071.2022.9771594
   Guerraoui Rachid, 2018, PR MACH LEARN RES, P3521
   Jagielski M., 2018, REVISITING LEAST SQU, P19
   Jha DN, 2020, SOFTWARE PRACT EXPER, V50, P844, DOI 10.1002/spe.2787
   Maamar Z, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P2008, DOI 10.1145/3297280.3297477
   Mahloujifar S., 2019, INT C MACHINE LEARNI, P4274
   Mei SK, 2015, AAAI CONF ARTIF INTE, P2871
   Munoz-Gonzalez L., 2017, PROC 10 ACMWORKSHOP, P27, DOI 10.1145/3128572.3140451
   Pang T., 2021, NIPs, V34, P2899
   Puthal D, 2021, IEEE CONSUM ELECTR M, V10, P68, DOI 10.1109/MCE.2021.3051813
   Qian B, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3398020
   Sahoo B., 2012, INT J COMPUT APPL, V44, P43, DOI DOI 10.5120/6367-8773
   Shejwalkar V, 2021, 28TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2021), DOI 10.14722/ndss.2021.24498
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Suciu O, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1299
   Tolpegin V., 2020, Computer Security-ESORICS 2020, P480
   Wang NY, 2024, DIGIT COMMUN NETW, V10, P126, DOI 10.1016/j.dcan.2022.05.020
   Xie C, 2020, PR MACH LEARN RES, V115, P261
   Yang HB, 2019, IEEE DECIS CONTR P, P5832, DOI [10.1109/CDC40024.2019.9029245, 10.1109/cdc40024.2019.9029245]
   Yang J, 2022, INT J INTELL SYST, V37, P9290, DOI 10.1002/int.22992
   Yang Q, 2019, ACM T INTEL SYST TEC, V10, DOI 10.1145/3298981
   Yang W, 2022, INT J OBESITY, V46, P1341, DOI 10.1038/s41366-022-01119-x
   Ye YF, 2020, IEEE ACCESS, V8, P209191, DOI 10.1109/ACCESS.2020.3038287
   Yin D, 2018, PR MACH LEARN RES, V80
   Yu W, 2018, IEEE ACCESS, V6, P6900, DOI 10.1109/ACCESS.2017.2778504
   Zhang J., 2020, IEEE INTERNET THINGS, V8, P3310
   Zhang JL, 2021, IEEE INTERNET THINGS, V8, P3310, DOI 10.1109/JIOT.2020.3023126
   Zhao B., 2020, FEDINV BYZANTINE RO
NR 43
TC 2
Z9 2
U1 3
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2024
VL 54
IS 7
SI SI
BP 1257
EP 1274
DI 10.1002/spe.3180
EA DEC 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TC7Y2
UT WOS:000895948200001
DA 2024-07-18
ER

PT J
AU Humayun, M
   Niazi, M
   Jhanjhi, NZ
   Mahmood, S
   Alshayeb, M
AF Humayun, Mamoona
   Niazi, Mahmood
   Jhanjhi, Noor Zaman
   Mahmood, Sajjad
   Alshayeb, Mohammad
TI Toward a readiness model for secure software coding
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE secure coding; secure SDLC; readiness model; case study
ID MATURITY MODEL; IMPLEMENTATION
AB The heart of the application's secure operation is its software code. If the code contains flaws, the entire program might be hacked. The issue with software vulnerabilities is that they reveal coding flaws that hackers could exploit. The prevention of cybersecurity issues begins with the program code itself. When writing software code, a software developer must consider expressing the application's architecture and design requirements, keeping the code streamlined and efficient, and ensuring the code is safe. Secure code helps save the system from various cyber-attacks by eliminating the weaknesses that many hacks rely on. To assist the software organization in Secure Software Coding (SSC), this article proposes a readiness model for SSC, namely SSCRM. The proposed model has five levels; SSC challenges and best practices (BP) are mapped at each level. The proposed model will help the organizations better understand SSC challenges and BPs and provide a roadmap for developing secure software code. The proposed model was evaluated using three case studies. The findings demonstrate that the proposed approach helps determine an organization's SSC level.
C1 [Humayun, Mamoona] Jouf Univ, Coll Comp & Informat Sci, Dept Informat Syst, Al Jouf, Saudi Arabia.
   [Niazi, Mahmood; Mahmood, Sajjad; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
   [Niazi, Mahmood; Mahmood, Sajjad; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran, Saudi Arabia.
   [Jhanjhi, Noor Zaman] Taylors Univ, Sch Comp Sci & Engn SCE, Subang Jaya, Selangor, Malaysia.
C3 Al Jouf University; King Fahd University of Petroleum & Minerals; King
   Fahd University of Petroleum & Minerals; Taylor's University
RP Humayun, M (corresponding author), Jouf Univ, Coll Comp & Informat Sci, Dept Informat Syst, Al Jouf, Saudi Arabia.
EM mahumayun@ju.edu.sa
RI Humayun, Mamoona/J-5644-2019; Jhanjhi, Prof Dr Noor Zaman/F-3051-2011;
   Niazi, Mahmood/C-8873-2015; Alshayeb, Mohammad/B-5941-2015
OI Humayun, Mamoona/0000-0001-6339-2257; Jhanjhi, Prof Dr Noor
   Zaman/0000-0001-8116-4733; Alshayeb, Mohammad/0000-0001-7950-0099
FU King Fahd University of Petroleum and Minerals [DF201007]
FX King Fahd University of Petroleum and Minerals, Grant/Award Number:
   DF201007
CR Acar Y, 2017, 2017 IEEE CYBERSECURITY DEVELOPMENT (SECDEV), P22, DOI 10.1109/SecDev.2017.17
   Akram J, 2021, SOFTWARE PRACT EXPER, V51, P294, DOI 10.1002/spe.2905
   Al-Matouq H, 2020, IEEE ACCESS, V8, P215758, DOI 10.1109/ACCESS.2020.3040220
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   Almrezeq N., 2021, TURKISH J COMPUT MAT, V12, P2982
   Andrade R, 2020, SOFTWARE PRACT EXPER, V50, P1905, DOI 10.1002/spe.2872
   [Anonymous], 2016, IJCA, DOI DOI 10.5120/IJCA2016911424
   [Anonymous], WIKISEICMUEDUCONFLUE
   [Anonymous], GLOSSARYCONTENTSECUR
   [Anonymous], BLOGOWASP SECURE COD
   Antunes N, 2012, COMPUTER, V45, P66, DOI 10.1109/MC.2011.259
   Appiah V., 2017, INT J APPL INFORMAT, V12, P10
   Assal H., P 2019 CHI C HUMAN F, P2019
   Assal H, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P281
   Ayachi Y., 2018, INT C EUROPE MIDDLE
   Baca D, 2013, SOFTWARE PRACT EXPER, V43, P259, DOI 10.1002/spe.2109
   Ballman A., 2016, 2016 IEEE CYBERSECUR
   Higuera JRB, 2020, CMC-COMPUT MATER CON, V64, P1555, DOI 10.32604/cmc.2020.010885
   Chrissis M., 2011, CMMI DEV GUIDELINES
   DASKALANTONAKIS MK, 1994, IEEE SOFTWARE, V11, P17, DOI 10.1109/52.300079
   Davis D, 2020, ACMSE 2020: PROCEEDINGS OF THE 2020 ACM SOUTHEAST CONFERENCE, P107, DOI 10.1145/3374135.3385293
   Dodson D., 2019, MITIGATING RISK SOFT
   Du W., 1998, 21 NATL INFORM SYSTE
   Eian IC., 2020, ARXIV
   Farhan SAR, 2018, 2018 21ST SAUDI COMPUTER SOCIETY NATIONAL COMPUTER CONFERENCE (NCC)
   Fernandes AM., 2018, 2018 2 INT C ELECT C
   Fernandez EB, 2004, SERP'04: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P130
   Fredj OB., 2020, INT C RISKS SEC INT
   Garcia VC., 2010, THESIS RISE MATURITY
   Grover M., 2016, J INF SYST APPL RES, V9, P38
   Hassan MM., 2018, INT J SIMULAT SYST S, V19
   Howard M., 2010, 24 Deadly Sins of Software Security
   Huang Z., 2018, FIXING SOFTWARE VULN
   Humayun M, 2020, ARAB J SCI ENG, V45, P3171, DOI 10.1007/s13369-019-04319-2
   Hydara I, 2015, INFORM SOFTWARE TECH, V58, P170, DOI 10.1016/j.infsof.2014.07.010
   Jayaram K., 2005, Software Engineering for Secure Software - State of the Art: A Survey Technical report
   Jhanjhi NZ, 2021, COMPUT SYST SCI ENG, V37, P361, DOI 10.32604/csse.2021.015206
   Jones Russell L., 2004, Information Systems Security, V13, P29, DOI DOI 10.1201/1086/44797.13.5.20041101/84907.5
   Kang J, 2017, NEUROCOMPUTING, V256, P23, DOI 10.1016/j.neucom.2015.11.139
   Kang Soo-Young, 2020, [Journal of The Korea Institute of Information Security and Cryptology, 정보보호학회논문지], V30, P909, DOI 10.13089/JKIISC.2020.30.5.909
   Karim NSA, 2016, SECUR COMMUN NETW, V9, P5333, DOI 10.1002/sec.1700
   Keshta IM, 2020, IET SOFTW, V14, P308, DOI 10.1049/iet-sen.2019.0180
   Khan Rafiq A., 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P487, DOI 10.1145/3383219.3383290
   Khan RA, 2021, IEEE ACCESS, V9, P19139, DOI 10.1109/ACCESS.2021.3052311
   Khan SU., 2011, SOFTWARE OUTSOURCING
   KumarShrestha A., 2015, International Journal of Computer Applications, V114, P39, DOI [DOI 10.5120/20082-2148, 10.5120/20082-2148]
   Kurachi R, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON VEHICULAR ELECTRONICS AND SAFETY (ICVES 2018)
   Li J, 2020, Ann. Emerg. Technol. Comput., V4, P1, DOI [DOI 10.33166/AETIC.2020.03.001, 10.33166/aetic.2020.03.001, 10.21037/anpc.2020.03.01]
   Long F, 2011, The CERT Oracle Secure Coding Standard for Java
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   Nguyen TT, 2019, ASIA PAC SOFWR ENG, P70, DOI 10.1109/APSEC48747.2019.00019
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   Rafi S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2323
   Rashid Y, 2019, INT J QUAL METH, V18, DOI 10.1177/1609406919862424
   Rodríguez GE, 2020, COMPUT NETW, V166, DOI 10.1016/j.comnet.2019.106960
   Sahu DR, 2017, ARAB J SCI ENG, V42, P885, DOI 10.1007/s13369-016-2362-5
   Shahidullah M., 2019, VULNERABILITY ASSESS
   Shivakumar SK., 2019, BUILDING DIGITAL EXP, P183
   Siavvas M., 2018, INT ISCIS SECURITY W
   Standard CC., 2016, 6 CERT
   Sugiantoro B., 2020, J PHYS C SERIES, V1566
   Sulatycki R, 2015, PROCEEDINGS OF THE 20TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2015), DOI 10.1145/2855321.2855368
   Thu Trang Nguyen, 2019, 2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER&IP). Proceedings, P41, DOI 10.1109/CESSER-IP.2019.00015
   Touseef P., 2019, P 3 INT C FUTURE NET
   Tsipenyuk K, 2005, IEEE SECUR PRIV, V3, P81, DOI 10.1109/MSP.2005.159
   Vargas S., 2019, J PHYS C SERIES, V1414
   Xie J, 2011, S VIS LANG HUM CEN C, P161, DOI 10.1109/VLHCC.2011.6070393
   Yang J, 2016, INT CONF BIG DATA, P115, DOI 10.1109/BIGCOMP.2016.7425809
   Zhivich M, 2009, IEEE SECUR PRIV, V7, P87, DOI 10.1109/MSP.2009.56
NR 69
TC 0
Z9 0
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2023
VL 53
IS 4
BP 1013
EP 1035
DI 10.1002/spe.3175
EA DEC 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9M3GK
UT WOS:000894959300001
DA 2024-07-18
ER

PT J
AU Apple, J
AF Apple, Jim
TI Stretching your data with taffy filters
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Bloom filters; dictionaries; hash tables
ID SPACE-EFFICIENT; CUCKOO; BLOOM; HASH; DICTIONARIES; INSERTION; CACHE
AB Popular approximate membership query structures such as Bloom filters and cuckoo filters are widely used in databases, security, and networking. These structures represent sets approximately, and support at least two operations-insert and lookup; lookup always returns true on elements in the structure; it also returns true with some probability epsilon$$ \varepsilon $$ on elements not in the structure. These latter elements are called false positives. Compensatory for these false positives, filters can be much smaller than hash tables that represent the same set. However, unlike hash tables, cuckoo filters, and Bloom filters must be initialized with the intended number of maximum entries, and cannot grow larger-inserts beyond this number fail or significantly increase the false positive probability. This article presents designs and implementations of filters than can grow without inserts failing and without meaningfully increasing the false positive probability, even if the filters are created with a small initial size. The resulting code is available on GitHub under a permissive open source license.
EM jbapple@jbapple.com
OI Apple, Jim/0000-0002-8685-9451
CR Alaggan Mohammad, 2012, Stabilization, Safety, and Security of Distributed Systems. Proceedings of the 14th International Symposium, SSS 2012, P202, DOI 10.1007/978-3-642-33536-5_20
   Almeida PS, 2007, INFORM PROCESS LETT, V101, P255, DOI 10.1016/j.ipl.2006.10.007
   [Anonymous], 1998, The art of computer programming: Sorting and searching
   [Anonymous], 2014, DAMON 14
   Arbitman Y, 2010, ANN IEEE SYMP FOUND, P787, DOI 10.1109/FOCS.2010.80
   Bender MA, 2018, ANN IEEE SYMP FOUND, P182, DOI 10.1109/FOCS.2018.00026
   Bender MA, 2012, PROC VLDB ENDOW, V5, P1627
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Boncz P, 2014, LECT NOTES COMPUT SC, V8391, P61, DOI 10.1007/978-3-319-04936-6_5
   Breslow AD, 2020, VLDB J, V29, P731, DOI 10.1007/s00778-019-00561-0
   Broder Andrei, 2003, Internet Math, V1, DOI DOI 10.1080/15427951.2004.10129096
   Carter L., 1978, P 10 ANN ACM S THEOR, P59, DOI DOI 10.1145/800133.804332
   Cha SK, 2011, J COMMUN NETW-S KOR, V13, P187, DOI 10.1109/JCN.2011.6157418
   Chazelle B., 2004, P THEFIFTEENTH ANN A, P30
   Chen HC, 2017, APPL POWER ELECT CO, P1, DOI 10.1109/APEC.2017.7930605
   Cristo F., 2019, VIVID CUCKOO HASH FA, P288
   Dayan N, 2021, INT CONF MANAGE DATA, P365, DOI 10.1145/3448016.3457273
   Dayan N, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P79, DOI 10.1145/3035918.3064054
   Dharmapurikar S, 2003, ACM SIGCOMM COMP COM, V33, P201
   Dietzfelbinger M., 1996, STACS 96. 13th Annual Symposium on Theoretical Aspects of Computer Science. Proceedings, P569
   Dietzfelbinger M, 2007, THEOR COMPUT SCI, V380, P47, DOI 10.1016/j.tcs.2007.02.054
   Dietzfelbinger M, 2011, LECT NOTES COMPUT SC, V6942, P615, DOI 10.1007/978-3-642-23719-5_52
   Dillinger Peter C., 2021, CoRR abs/2103.02515
   Einziger G, 2017, IEEE ACM T NETWORK, V25, P2295, DOI 10.1109/TNET.2017.2685530
   Eppstein D., 2016, 15 SCAND S WORKSH AL, V53, P8, DOI [10.4230/LIPIcs.SWAT.2016.8, DOI 10.4230/LIPICS.SWAT.2016.8]
   Fan B., 2017, CUCKOO FILTER
   Fan B, 2014, PROCEEDINGS OF THE 2014 CONFERENCE ON EMERGING NETWORKING EXPERIMENTS AND TECHNOLOGIES (CONEXT'14), P75, DOI 10.1145/2674005.2674994
   Fan L, 2000, IEEE ACM T NETWORK, V8, P281, DOI 10.1109/90.851975
   Fotakis DT, 2005, THEOR COMPUT SYST, V38, P229, DOI 10.1007/s00224-004-1195-x
   Fu PT, 2021, INT CON DISTR COMP S, P57, DOI 10.1109/ICDCS51616.2021.00015
   Geneiatakis D, 2009, COMPUT SECUR, V28, P578, DOI 10.1016/j.cose.2009.04.007
   Goodrich Michael T., 2011, 2011 49th Annual Allerton Conference on Communication, Control, and Computing (Allerton), P792
   Graf Thomas Mueller, 2020, Journal of Experimental Algorithmics, V25, DOI 10.1145/3376122
   Guo DK, 2010, IEEE T KNOWL DATA EN, V22, P120, DOI 10.1109/TKDE.2009.57
   Hunt T., 2021, HAVE BEEN PWNED
   K?ppl D., 2020, P 18 INT S EXPT ALGO
   Khosla M, 2019, ALGORITHMICA, V81, P3707, DOI 10.1007/s00453-019-00595-4
   Kirsch A, 2009, SIAM J COMPUT, V39, P1543, DOI 10.1137/080728743
   Kornacker M., 2015, Impala: A modern, open -source SQL engine for Hadoop
   Lang H, 2019, PROC VLDB ENDOW, V12, P502, DOI 10.14778/3303753.3303757
   Lehman E, 2009, LECT NOTES COMPUT SC, V5757, P671, DOI 10.1007/978-3-642-04128-0_60
   Lu JY, 2019, IEEE T PARALL DISTR, V30, P953, DOI 10.1109/TPDS.2018.2869889
   Luo C, 2020, VLDB J, V29, P393, DOI 10.1007/s00778-019-00555-y
   Luo LL, 2019, IEEE INFOCOM SER, P712, DOI [10.1109/INFOCOM.2019.8737454, 10.1109/infocom.2019.8737454]
   Maier T, 2019, ALGORITHMICA, V81, P3162, DOI 10.1007/s00453-019-00572-x
   Mitzenmacher M, 2008, PROCEEDINGS OF THE NINETEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P746
   Pagh R, 2004, J ALGORITHMS, V51, P122, DOI 10.1016/j.jalgor.2003.12.002
   Pagh R, 2013, ANN IEEE SYMP FOUND, P80, DOI 10.1109/FOCS.2013.17
   Pandey P, 2021, INT CONF MANAGE DATA, P1386, DOI 10.1145/3448016.3452841
   Pandey P, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P775, DOI 10.1145/3035918.3035963
   Porat E, 2012, IEEE DATA COMPR CONF, P347, DOI 10.1109/DCC.2012.41
   Putze F, 2007, LECT NOTES COMPUT SC, V4525, P108
   Raman R, 2003, LECT NOTES COMPUT SC, V2719, P357
   Ren K, 2017, PROC VLDB ENDOW, V10, P2037, DOI 10.14778/3151106.3151108
   Spafford EH, 1992, COMPUT SECUR, V11, P273, DOI [DOI 10.1016/01674048(92)902078, DOI 10.1016/0167, 10.1016/0167-4048(92)90207-8]
   The Apache Software Foundation, 2016, IMP 2 7 0
   Walzer S., 2018, P 45 INT C AUT LANG, DOI [10.4230/LIPIcs.ICALP.2018.102, DOI 10.4230/LIPICS.ICALP.2018.102, 10.4230/LIPICS.ICALP.2018.102]
   Wang MM, 2019, PROC VLDB ENDOW, V13, P197, DOI 10.14778/3364324.3364333
   Wu YH, 2022, IEEE T COMPUT, V71, P984, DOI 10.1109/TC.2021.3067713
   Xie ZH, 2017, INT C PAR DISTRIB SY, P190, DOI 10.1109/ICPADS.2017.00035
   Yu Shuiying, 2021, Network and Parallel Computing. 17th IFIP WG 10.3 International Conference, NPC 2020. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12639), P373, DOI 10.1007/978-3-030-79478-1_32
   Zhang F, 2021, PROC INT CONF DATA, P948, DOI 10.1109/ICDE51399.2021.00087
NR 62
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2022
VL 52
IS 11
BP 2349
EP 2367
DI 10.1002/spe.3129
EA AUG 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5C7YI
UT WOS:000835015200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Faustino, J
   Adriano, D
   Amaro, R
   Pereira, R
   da Silva, MM
AF Faustino, Joao
   Adriano, Daniel
   Amaro, Ricardo
   Pereira, Ruben
   da Silva, Miguel Mira
TI DevOps benefits: A systematic literature review
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE agile; benefits; case study; DevOps; systematic literature review
ID CONTINUOUS DELIVERY; AGILE DEVELOPMENT
AB Among current IT work cultures, DevOps stands out as one of the most adopted worldwide. The focus of this culture is on bridging the gap between development and operations teams, enabling collaborative effort toward quickly producing software, without sacrificing its quality and support. DevOps is used to tackle a variety of issues; as such, there are differing benefits reported by authors when performing their analysis. For this research, we aim to reach consensus on the DevOps benefits reported in existing literature. To accomplish this objective, two systematic literature reviews. The first intends to find all benefits reported in the literature, while the second review will be used to map the benefits found in the first one with DevOps implementation case studies, providing empirical evidences of each benefit. To strengthen the results, the concept-centric approach is used. During this research it was possible to observe that the most reported benefits are aligned with the DevOps premises of better collaboration between developers and operators, delivering software and products quicker. Based on DevOps implementation case studies, most reported benefits include a faster time to market as well as improvements in synergy and automation. Less reported benefits include a reduction in failed changes and security issues.
C1 [Faustino, Joao; Adriano, Daniel; Amaro, Ricardo; Pereira, Ruben] Inst Univ Lisboa ISCTE IUL, Lisbon, Portugal.
   [da Silva, Miguel Mira] Univ Lisbon, Inst Super Tecn, Lisbon, Portugal.
C3 Instituto Universitario de Lisboa; Universidade de Lisboa
RP Faustino, J (corresponding author), Inst Univ Lisboa ISCTE IUL, Lisbon, Portugal.
EM jpcfo11@iscte-iul.pt
RI Mira da Silva, Miguel/A-2892-2009; Pereira, Ruben/T-7648-2017
OI Mira da Silva, Miguel/0000-0002-0489-4465; Pereira,
   Ruben/0000-0002-3001-5911; Adriano, Daniel/0000-0003-2907-855X;
   Faustino, Joao/0000-0002-1743-5348; Amaro, Ricardo/0000-0003-2649-8102
CR Ajayi BA, 2016, INT CONF INFORM COMM, P1, DOI [10.1109/ICT4M.2016.13, 10.1109/ICT4M.2016.014]
   Al-Zahrani S., 2020, International Journal of Advanced Trends in Computer Science and Engineering, V9, P2780, DOI DOI 10.30534/IJATCSE/2020/46932020
   Alban D., 2019, INFORM SYSTEMS MANAG, DOI [10.1016/B978-012226570-9/50107-1, DOI 10.1016/B978]
   Albuquerque AB, 2019, ADV INTELL SYST COMP, V860, P143, DOI 10.1007/978-3-030-00184-1_14
   Ali N, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2248
   Alt R., 2018, ADV CONSULTING RES, P385, DOI [10.1007/978-3-319-95999-3_19, DOI 10.1007/978]
   Angara J, 2018, ADV INTELL SYST, V709, P271, DOI 10.1007/978-981-10-8633-5_28
   Arulkumar V, 2019, PROCEDIA COMPUT SCI, V165, P399, DOI 10.1016/j.procs.2020.01.032
   Atwal H., 2019, DEVOPS DATAOPS PRACT, P161, DOI [10.1007/978-1-4842-5104-1_7, DOI 10.1007/978]
   Barna Cornel, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P65, DOI 10.1109/SEAMS.2017.12
   Bartolini C., IT SERVICE MANAGEMEN, DOI [10.1109/NOMS.2006.1687537, DOI 10.1109/NOMS.2006.1687537]
   Baudry B, 2018, 2018 ACM/IEEE 4TH INTERNATIONAL GENETIC IMPROVEMENT WORKSHOP (GI@ICSE 2018), P35, DOI 10.1145/3194810.3194818
   Beigi-Mohammadi N., 2018, SYSTEM, P270, DOI [10.1145/nnnnnnn.nnnnnnn, DOI 10.1145/NNNNNNN.NNNNNNN]
   Benguria G, 2018, COMM COM INF SC, V896, P15, DOI 10.1007/978-3-319-97925-0_2
   Beulen Erik, 2019, Digital Services and Platforms. Considerations for Sourcing. 12th Global Sourcing Workshop 2018. Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 344), P124, DOI 10.1007/978-3-030-15850-7_7
   Bruneo D., 2014, 2014 IEEE WORKSH ENV, P1
   Bruza M., 2018, ANAL MULTI DOMAIN CO
   Caprarelli A., 2020, Fallacies and Pitfalls on the Road to DevOps: A Longitudinal Industrial Study, P200, DOI [DOI 10.1007/978-3-030-39306-9_15, DOI 10.1007/978]
   Cavalcante V, 2014, ANN SRII GLOB CONF, P19, DOI 10.1109/SRII.2014.13
   Céspedes D, 2020, ADV INTELL SYST, V1071, P51, DOI 10.1007/978-3-030-33547-2_5
   Chen BY, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P194, DOI 10.1109/ICSE-Companion.2019.00080
   Chen LP, 2017, J SYST SOFTWARE, V128, P72, DOI 10.1016/j.jss.2017.02.013
   Cito J, 2019, LECT NOTES COMPUT SC, V11350, P184, DOI 10.1007/978-3-030-06019-0_14
   Colavita F, 2016, ADV INTELL SYST, V422, P203, DOI 10.1007/978-3-319-27896-4_17
   Colomo-Palacios R, 2018, INT J INFORM MANAGE, V40, P186, DOI 10.1016/j.ijinfomgt.2017.11.005
   Combemale Benoit, 2020, Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment. Second International Workshop, DEVOPS 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12055), P84, DOI 10.1007/978-3-030-39306-9_6
   Cruzes DS, 2019, LECT NOTES COMPUT SC, V11622, P442, DOI 10.1007/978-3-030-24305-0_33
   Cukier D., SPLASH 2013 P 2013 C, DOI [10.1145/2508075.2508432, DOI 10.1145/2508075.2508432]
   Cuppett MS., 2016, DEVOPS DBAS DBAAS, P73, DOI [10.1007/978-1-4842-2208-9, DOI 10.1007/978]
   Daneva M., 2020, Software Technologies, P26
   Davis A., 2019, MASTERING SALESFORCE, DOI [10.1007/978-1-4842-5473-8_3, DOI 10.1007/978]
   de Feijter R, 2018, LECT NOTES BUS INF P, V318, P244, DOI 10.1007/978-3-319-91704-7_16
   de Kort W., 2016, DEVOPS MICROSOFT STA, DOI [10.1007/978-1-4842-1446-6, DOI 10.1007/978]
   De Sanctis Martina, 2020, Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment. Second International Workshop, DEVOPS 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12055), P95, DOI 10.1007/978-3-030-39306-9_7
   Debroy V., BUILDING LEAN CONTIN, DOI [10.1145/3236024.3275528, DOI 10.1145/3236024.3275528]
   Diaz J., 2019, INT C PROD FOC SOFTW, P1
   Díaz J, 2019, IEEE ACCESS, V7, P100283, DOI 10.1109/ACCESS.2019.2930000
   Díaz J, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234199
   Dörnenburg E, 2018, IEEE SOFTWARE, V35, P71, DOI 10.1109/MS.2018.290110337
   Düllmann TF, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P27, DOI 10.1145/3194760.3194763
   Ebert C, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.68
   Elberzhager F, 2017, LECT NOTES BUS INF P, V269, P33, DOI 10.1007/978-3-319-49421-0_3
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Familiar B., 2017, BUSINESS REAL TIME U, P21, DOI [10.1007/978-1-4842-2650-6_2, DOI 10.1007/978]
   Faustino Joao, 2020, International Journal of Agile Systems and Management, V13, P339, DOI 10.1504/IJASM.2020.112331
   Fishman N., 2020, SMARTER DATA SCI, DOI [10.1002/9781119697985, DOI 10.1002/9781119697985]
   Forsgren N., 2017, ACM QUEUE, V61, P1
   Forsgren Nicole., 2018, ACCELERATE SCI LEAN, V1st
   Fowler M., 2001, Software Development, V9, P28
   Furfaro A, 2016, INT REQUIR ENG CONF, P246, DOI 10.1109/RE.2016.15
   Gall M, 2018, AMCIS 2018 PROCEEDINGS
   Ghantous GB, 2018, CONF BUS INFORM, P158, DOI 10.1109/CBI.2018.00026
   Gotimer G., 2016, CrossTalk Magazine, P13
   Govil N., 2020, 4 INT C TRENDS ELECT, P899
   Gupta RK, 2019, INT CONF GLOBAL SOFT, P30, DOI 10.1109/ICGSE.2019.00020
   Gupta V, 2017, INFORM SOFTWARE TECH, V92, P75, DOI 10.1016/j.infsof.2017.07.010
   Hanna A., 2011, ITIL 2011 SERVICE TR
   Heistand C., 2019, AEROSP CONF PROC, P1, DOI [DOI 10.1109/AERO.2019.8742143, DOI 10.1109/aero.2019.8742143]
   Hemon A, 2020, IEEE SOFTWARE, V37, P30, DOI 10.1109/MS.2019.2958900
   Hemon A, 2020, INFORM SYST FRONT, V22, P927, DOI 10.1007/s10796-019-09905-1
   H├╝ttermann M., 2012, DEVOPS DEV, DOI [10.1007/978-1-4302-4570-4, DOI 10.1007/978]
   Hussaini SW, 2015, PROCEDIA COMPUT SCI, V61, P261, DOI 10.1016/j.procs.2015.09.209
   Ivanov V., 2018, IMPLEMENTATION DEVOP, DOI [10.1007/978-3-030-03673-7_4, DOI 10.1007/978]
   Jaatun MG, 2019, 13TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2018), DOI 10.1145/3230833.3233275
   Jaatun MG, 2017, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2017), DOI 10.1145/3098954.3103172
   Jabbari R., WHAT IS DEVOPS SYSTE, DOI DOI 10.1145/2962695.2962707
   Jabbari R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1957
   Jimenez MJ, 2017, LECT NOTES COMPUT SC, V10256, P229, DOI 10.1007/978-3-319-59108-7_18
   Johng H, 2019, LECT NOTES COMPUT SC, V11895, P151, DOI 10.1007/978-3-030-33702-5_12
   Jones Stephen, 2016, P 2 INT WORKSH QUAL, P7
   Kaiser AK., 2018, REINVENTING ITIL AGE, DOI [10.1007/978-1-4842-3976-6, DOI 10.1007/978]
   Kang H., CONTAINER MICROSERVI, DOI [10.1109/IC2E.2016.26, DOI 10.1109/IC2E.2016.26]
   Katal A, 2019, PROCEEDINGS OF THE 2019 3RD INTERNATIONAL CONFERENCE ON COMPUTING METHODOLOGIES AND COMMUNICATION (ICCMC 2019), DOI 10.1109/iccmc.2019.8819631
   Kim Gene, 2016, The DevOps Handbook: How to Create WorldClass Agility, Reliability, and Security in Technology Organizations
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Koilada DVSRK, 2019, 2019 IEEE TECHNOLOGY & ENGINEERING MANAGEMENT CONFERENCE (TEMSCON), DOI [10.1109/temscon.2019.8813557, 10.1109/temscon.2019.8813559]
   Kuruba M., 2019, Springer Series in Reliability Engineering, P149, DOI [DOI 10.1007/978-3-030-36518-9_6, DOI 10.1007/978]
   Kuusinen K., LARGE AGILE ORG ITS, DOI [10.1109/SEAA.2018.00019, DOI 10.1109/SEAA.2018.00019]
   Lai ST., 2019, MICROSERVICES QUALIT, V773, DOI [10.1007/978-3-319-93554-6_55, DOI 10.1007/978]
   Laukkanen E, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P23, DOI 10.1109/ICSE-SEIP.2017.21
   Laukkarinen T., P 2017 IEEE ACM 39 I, DOI [10.1109/ICSE-NIER.2017.20, DOI 10.1109/ICSE]
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Lewerentz M, 2019, FUSION ENG DES, V146, P40, DOI 10.1016/j.fusengdes.2018.11.022
   Lewis B., 2017, 28th Modern Artificial Intelligence and Cognitive Science Conference, MAICS 2017, P189
   Luz WP, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.083
   Lwakatare LE., 2016, An Exploratory Study of DevOps Extending the Dimensions of DevOps with Practices
   Lwakatare LE, 2019, INFORM SOFTWARE TECH, V114, P217, DOI 10.1016/j.infsof.2019.06.010
   Lwakature LE., 2017, DEVOPS ADOPTION IMPL, P99
   Machiraju S., 2018, DEVOPS AZURE APPL, DOI [10.1007/978-1-4842-3643-7, DOI 10.1007/978]
   Mala DJ, 2020, COMPUT COMMUN NETW S, P277, DOI 10.1007/978-3-030-33624-0_11
   Masombuka T, 2018, ACM INT CONF PR SER, P279, DOI 10.1145/3278681.3278714
   Medina O., 2018, DEVOPS SHAREPOINT, DOI [10.1007/978-1-4842-3688-8, DOI 10.1007/978]
   Metzger S, 2017, GEOSCI MODEL DEV, V10, P3189, DOI 10.5194/gmd-10-3189-2017
   Michener JR, 2016, P INT COMP SOFTW APP, P396, DOI 10.1109/COMPSAC.2016.155
   Mohan V., 2018, BP: Security Concerns and Best Practices for Automation of Software Deployment Processes: An Industrial Case Study, P21, DOI DOI 10.1109/SECDEV.2018.00011
   Morales JA, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234188
   Muñoz M, 2020, ADV INTELL SYST, V1071, P65, DOI 10.1007/978-3-030-33547-2_6
   Mu├▒oz M., 2017, ENG MANAGEMENT DATA, P205, DOI [10.1007/978-3-319-65082-1_10, DOI 10.1007/978]
   Murphy Gail C., 2020, Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment. Second International Workshop, DEVOPS 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12055), P181, DOI 10.1007/978-3-030-39306-9_13
   Nagarajan AD., 2018, MOVE MEANINGFUL INTE, P1, DOI [10.1007/978-3-030-02610-3_10, DOI 10.1007/978]
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   Nybom K., 2016, INT C AG SOFTW DEV, P131, DOI [10.1007/978-3-319-33515-5_11, DOI 10.1007/978-3-319-33515-5_11]
   Okoli C, 2015, COMMUN ASSOC INF SYS, V37, P879
   Olszewska M., 2015, Proceedings of the 1st International Workshop on Quality-Aware DevOps, P7
   Ottosson S., 2018, AGILE PRINCIPLES INN, P1, DOI [10.1007/978-3-319-94045-8, DOI 10.1007/978]
   Palermo J., 2019, NET DEVOPS AZURE, DOI [10.1007/978-1-4842-5343-4, DOI 10.1007/978]
   Perez-Palacin D., 2017, QUALITY ASSESSMENT D, P133, DOI [10.1145/3053600.3053632, DOI 10.1145/3053600.3053632]
   P├rez JF., 2015, WOSP C 2015 P 2015 A, DOI [10.1145/2693561.2693564, DOI 10.1145/2693561.2693564]
   Punjabi R, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON RECENT TRENDS IN ELECTRONICS, INFORMATION & COMMUNICATION TECHNOLOGY (RTEICT), P658, DOI 10.1109/RTEICT.2016.7807905
   Rahman AAU, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P70, DOI [10.1109/CSED.2016.021, 10.1145/2896941.2896946]
   Rauf A, 2015, 2015 AGILE CONFERENCE, P102, DOI 10.1109/Agile.2015.21
   Ravichandran, 2016, DEVOPS DIGITAL LEADE, DOI [10.1007/978-1-4842-1842-6, DOI 10.1007/978]
   Ravichandran A., 2016, DEVOPS DIGITAL LEADE, P139
   Riti P., 2018, Practical Scala DSLs, P209, DOI [10.1007/978-1-4842-3036-7_11, DOI 10.1007/978]
   Rittgen P, 2019, COMM COM INF SC, V1060, P111, DOI 10.1007/978-3-030-28005-5_9
   Riungu-Kalliosaari L, 2016, LECT NOTES COMPUT SC, V10027, P590, DOI 10.1007/978-3-319-49094-6_44
   Roche J, 2013, COMMUN ACM, V56, P38, DOI 10.1145/2524713.2524721
   Rong GP, 2020, SOFTWARE PRACT EXPER, V50, P210, DOI 10.1002/spe.2770
   Rong GP, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P76, DOI [10.1145/2904354.2904372, 10.1109/ICSSP.2016.018]
   Sahid A, 2017, ICCWCS'17: PROCEEDINGS OF THE 2ND INTERNATIONAL CONFERENCE ON COMPUTING AND WIRELESS COMMUNICATION SYSTEMS, DOI 10.1145/3167486.3167556
   Sampedro Z., 2018, Proceedings of the Practice and Experience on Advanced Research Computing, P1, DOI [DOI 10.1145/3219104.3219147, 10.1145/3219104.3219147]
   Sanchez-Gordon M., 2018, SOFTWARE PROCESS IMP, V918, P3, DOI [DOI 10.1007/978-3-030-00623-5_1, https://doi.org/10.1007/978-3-030-00623-5_1]
   Scekic M., 2018, 2018 7th Mediterranean Conference on Embedded Computing (MECO), P1, DOI DOI 10.1109/MECO.2018.8406047
   Schaefer A., 2013, IAENG Transactions on Engineering Technologies, P345
   Scheaffer J., 2018, KITTY HAWK VENTURE, DOI [10.1007/978-1-4842-3661-1, DOI 10.1007/978]
   Senapathi M., 2018, ser. EASE'18, P57
   Setyadi R., 2019, C SESSION, DOI DOI 10.1109/ICSECC.2019.8907224
   Setyadi R., 2019, P 2019 7 INT C CYB I, P1, DOI [10.1109/CITSM47753.2019.8965411, DOI 10.1109/CITSM47753.2019.8965411]
   Shahin M., INTERSECTION CONTINU, DOI [10.1145/2961111.2962587, DOI 10.1145/2961111.2962587]
   Shahin M., 2015, P ASWEC 2015 24 AUST, P147, DOI [10.1145/2811681.2824996, DOI 10.1145/2811681.2824996]
   Sharma S., 2014, DevOps for dummies, V2nd
   Siebra C, 2019, COMM COM INF SC, V1077, P247, DOI 10.1007/978-3-030-29157-0_11
   Silva CC, 2014, 2014 AGILE CONFERENCE (AGILE), P64, DOI 10.1109/AGILE.2014.14
   Silva M. A., 2018, PROC 27 INT C INF SY
   Silva MA., 2018, P 27 INT C INF SYST, V13
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Smite D, 2020, LECT NOTES BUS INF P, V383, P145, DOI 10.1007/978-3-030-49392-9_10
   Snyder B, 2018, IEEE SOFTWARE, V35, P78, DOI 10.1109/MS.2017.4541032
   Soni M., END END AUTOMATION C, DOI [10.1109/CCEM.2015.29, DOI 10.1109/CCEM.2015.29]
   Sousa L., 2019, ATAS C ASS PORT SIST
   Teixeira Daniel, 2020, International Journal of Agile Systems and Management, V13, P464, DOI 10.1504/IJASM.2020.112343
   Teixeira D, 2020, INT J HUM CAP INF TE, V11, P1, DOI 10.4018/IJHCITP.2020070101
   Thomas G., 2016, DO YOUR CASE STUDY, V2nd
   Tomlinson T., 2017, ENTERPRISE DRUPAL DE, P271, DOI [10.1007/978-1-4842-0253-1_11, DOI 10.1007/978]
   Trivedi P, 2013, 2013 2ND INTERNATIONAL CONFERENCE ON INFORMATION MANAGEMENT IN THE KNOWLEDGE ECONOMY (IMKE), P188
   Veres Oleh, 2019, 2019 IEEE 14th International Conference on Computer Sciences and Information Technologies (CSIT), P103, DOI 10.1109/STC-CSIT.2019.8929861
   Virmani M., UNDERSTANDING DEVOPS, DOI [10.1109/INTECH.2015.7173368, DOI 10.1109/INTECH.2015.7173368]
   Wahaballa A., UNIFIED DEVOPS MODEL, DOI [10.1109/ICSESS.2015.7339039, DOI 10.1109/ICSESS.2015.7339039]
   Wang W., 2017, MODEL DRIVEN DEV OPE, P95, DOI [10.1007/978-3-319-46031-4_10, DOI 10.1007/978]
   Webster J, 2002, MIS QUART, V26, pXIII
   Wettinger J, 2017, COMPUT SCI-RES DEV, V32, P281, DOI 10.1007/s00450-016-0338-z
   Wettinger J, 2015, LECT NOTES COMPUT SC, V9415, P348, DOI 10.1007/978-3-319-26148-5_23
   Wiedemann A., INTEGRATING DEV OPER, DOI [10.1145/3322385.3322400, DOI 10.1145/3322385.3322400]
   Wiedemann A, 2019, COMMUN ACM, V62, P44, DOI 10.1145/3331138
   Zhou X., MAP THREATS VALIDITY, DOI [10.1109/APSEC.2016.031, DOI 10.1109/APSEC.2016.031]
NR 155
TC 4
Z9 5
U1 8
U2 37
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2022
VL 52
IS 9
BP 1905
EP 1926
DI 10.1002/spe.3096
EA MAY 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3T7YW
UT WOS:000793451900001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Wu, S
   Tao, ZH
   Fan, H
   Huang, Z
   Zhang, XM
   Jin, H
   Yu, C
   Cao, C
AF Wu, Song
   Tao, Zhiheng
   Fan, Hao
   Huang, Zhuo
   Zhang, Xinmin
   Jin, Hai
   Yu, Chen
   Cao, Chun
TI Container lifecycle-aware scheduling for serverless computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cold start; container; elastic scaling; scheduling; serverless computing
AB Elastic scaling in response to changes on demand is a main benefit of serverless computing. When bursty workloads arrive, a serverless platform launches many new containers and initializes function environments (known as cold starts), which incurs significant startup latency. To reduce cold starts, platforms usually pause a container after it serves a request, and reuse this container for subsequent requests. However, this reuse strategy cannot efficiently reduce cold starts because the schedulers are agnostic of container lifecycle. For example, it may ignore soon available containers or evict soon needed containers. We propose a container lifecycle-aware scheduling strategy for serverless computing, CAS. The key idea is to control distribution of requests and determine creation or eviction of containers according to different lifecycle phases of containers. We implement a prototype of CAS on OpenWhisk. Our evaluation shows that CAS reduces 81% cold starts and therefore brings a 63% reduction at 95th percentile latency compared with native scheduling strategy in OpenWhisk when there is worker contention between workloads, and does not add significant performance overhead.
C1 [Wu, Song; Tao, Zhiheng; Fan, Hao; Huang, Zhuo; Zhang, Xinmin; Jin, Hai; Yu, Chen] Huazhong Univ Sci & Technol, Natl Engn Res Ctr Big Data Technol, Sch Comp Sci & Technol, Wuhan, Peoples R China.
   [Wu, Song; Tao, Zhiheng; Fan, Hao; Huang, Zhuo; Zhang, Xinmin; Jin, Hai; Yu, Chen] Huazhong Univ Sci & Technol, Syst Serv Comp Technol & Syst Lab, Cluster & Grid Comp Lab, Sch Comp Sci & Technol, Wuhan, Peoples R China.
   [Cao, Chun] Nanjing Univ, State Key Lab Novel Software Technol, Dept Comp Sci & Technol, Nanjing, Peoples R China.
C3 Huazhong University of Science & Technology; Huazhong University of
   Science & Technology; Nanjing University
RP Fan, H (corresponding author), Huazhong Univ Sci & Technol, Natl Engn Res Ctr Big Data Technol, Sch Comp Sci & Technol, Wuhan, Peoples R China.; Fan, H (corresponding author), Huazhong Univ Sci & Technol, Syst Serv Comp Technol & Syst Lab, Cluster & Grid Comp Lab, Sch Comp Sci & Technol, Wuhan, Peoples R China.
EM fanh@hust.edu.cn
RI Huang, Zhuo/KGL-0780-2024
OI Wu, Song/0000-0001-8690-127X
FU National Key Research and Development Program [2018YFB1004805]; National
   Science Foundation of China [62032008, 61872155]
FX This work is supported by National Key Research and Development Program
   under grant 2018YFB1004805, National Science Foundation of China under
   grants No.62032008 and 61872155.
CR Akkus IE, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P923
   [Anonymous], 2019, DESIGN CONSIDERATION
   [Anonymous], 2019, I M AFRAID YOU RE TH
   [Anonymous], 2019, TLC TRIP RECORD DATA
   [Anonymous], 2019, NAMESPACES 7
   [Anonymous], 2019, SERVICE MESH
   [Anonymous], 2019, SQUEEZING MILLISECON
   [Anonymous], 2019, Kubernetes
   [Anonymous], 2019, USING NGINX HTTP LOA
   [Anonymous], 2019, APACHE OPENWHISK
   Aumala G, 2019, IEEE ACM INT SYMP, P282, DOI 10.1109/CCGRID.2019.00042
   Boettiger Carl, 2015, ACM SIGOPS Operating Systems Review, V49, P71
   Cadden J., 2019, COMPUT RES REPOSITOR
   Dua R, 2014, INT CONF CLOUD ENG, P610, DOI 10.1109/IC2E.2014.41
   Fuerst A, 2021, ASPLOS XXVI: TWENTY-SIXTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P386, DOI 10.1145/3445814.3446757
   JINDAL A, 2021, SOFTW PRACT EXPER
   Kaffes K, 2019, PROCEEDINGS OF THE 2019 TENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '19), P158, DOI 10.1145/3357223.3362709
   Karger D, 1999, COMPUT NETW, V31, P1203, DOI 10.1016/S1389-1286(99)00055-9
   Kumara I, 2019, SOFTWARE PRACT EXPER, V49, P813, DOI 10.1002/spe.2686
   Ling W, 2019, 2019 6TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND COMPUTATIONAL INTELLIGENCE (CSCI 2019), P1416, DOI 10.1109/CSCI49370.2019.00265
   Madhavapeddy A, 2013, ACM SIGPLAN NOTICES, V48, P461, DOI 10.1145/2499368.2451167
   Mitzenmacher M, 2001, IEEE T PARALL DISTR, V12, P1094, DOI 10.1109/71.963420
   Mohan A., 2019, P USENIX WORKSH HOT
   Morabito R, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON CLOUD ENGINEERING (IC2E 2015), P386, DOI 10.1109/IC2E.2015.74
   Oakes E, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P57
   Singhvi A., 2019, COMPUT RES REPOSITOR
   Suresh A, 2019, PROCEEDINGS OF THE 2019 FIFTH INTERNATIONAL WORKSHOP ON SERVERLESS COMPUTING (WOSC '19), P19, DOI 10.1145/3366623.3368136
   Thalheim J, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P199
   Wang L, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P133
   Zhang M, 2021, SOFTWARE PRACT EXPER, V51, P1852, DOI 10.1002/spe.2944
NR 30
TC 18
Z9 18
U1 0
U2 27
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 337
EP 352
DI 10.1002/spe.3016
EA JUL 2021
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000672041500001
DA 2024-07-18
ER

PT J
AU Carter, LR
AF Carter, Lynn Robert
TI Climbing out of a software black hole
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE learning by doing; privacy; professional; reliability; sea change;
   security; story&#8208; centered curriculum; teaching hospital; trust
AB As we become ever more dependent on computer systems for much of what we do, we are losing the battle with cyber criminals and suffer from poor-quality offerings. Mission-critical, life-critical, and infrastructure-critical systems should be secure, reliable, and worthy of trust. Yet, that is not our experience. Many firms complain that entry-level software workers do not have the skills and abilities to do what is required and yet we continue to teach computer science in ways very similar to what we did in the 1970s and '80s. As we spiral downward, it's hard to know precisely where the event horizon might be, so let us deal with it now. It's time for an educational and societal sea change when it comes to computing. Society has demonstrated the willingness to deal with such issues in medicine and other critical domains. Highly-skilled clinical professors teach new physicians and specialists using the processes, methods, tools, and disciplines learners are expected to use as practicing professionals. It is time for the crucial software domains to leverage these proven methods and stop pushing off to employers these critical aspects of what it means to be a software professional.
C1 [Carter, Lynn Robert] 3857 East Equestrian Trail, Phoenix, AZ 85044 USA.
RP Carter, LR (corresponding author), 3857 East Equestrian Trail, Phoenix, AZ 85044 USA.
EM lynnrobertcarter@gmail.com
RI Carter, Lynn Robert/HZI-1963-2023
OI Carter, Lynn Robert/0000-0003-0415-9329
CR [Anonymous], 2020, TEACHING HOSP TEACHI
   Brooks, 1982, TAR PIT
   Carter LR., P 27 ACM INT C DES C, DOI 10.1145/1621995.1622035
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Herkert J, 2020, SCI ENG ETHICS, V26, P2957, DOI 10.1007/s11948-020-00252-y
   Humphrey W., 2005, PSP: A self - improvement process for software engineers
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Knuth D. E., 1974, Computing Surveys, V6, P261, DOI 10.1145/356635.356640
   Mintzberg H., 2013, RISE FALL STRATEGIC
   Ritchie, 2016, C PROGRAMMING LANGUA
   Schon D. A., 1983, The reflective practitioner: How professionals think in action
   Seacord, 2020, EFFECTIVE C AN INTRO
   Senge Peter., 2009, The Fifth Discipline: The Art and Practice of the Learning Organization
NR 13
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 319
EP 336
DI 10.1002/spe.2970
EA MAR 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000634122000001
DA 2024-07-18
ER

PT J
AU Al Said, N
   Gorbachev, Y
   Avdeenko, A
AF Al Said, Nidal
   Gorbachev, Yuri
   Avdeenko, Aleksei
TI RETRACTED: An unmanned aerial vehicles navigation system on the basis of
   pattern recognition applications-Review of implementation options and
   prospects for development (Retracted Article)
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Retracted Publication
DE navigation; object model; pattern recognition; unmanned aerial vehicle
AB The popularity of unmanned aerial vehicles (UAVs) kept growing over the past few decades. UAVs are widely used in various fields for monitoring, mapping, aerial photography, rescue operations, and so forth. However, the UAV navigation may be difficult in areas where global positioning systems is not available. This article presents an analytical review of the promising methods of creating a navigation system based on a pattern recognition algorithm. Linear algebra and mathematical morphology to describe the operation of pattern recognition applications in UAV's navigation systems, classification of images through profound research of intelligent navigation systems, analysis and digital image processing to identify options for the implementation of artificial intelligent systems of visual navigation were used to identify existing pattern recognition applications in the process of constructive systematization. It was shown that the UAV navigation requires objects in the image to be recognized and the distance to a possible obstacle to be estimated using deep learning method for image segmentation and depth map estimation. An obligatory initial point in the image recognition algorithm is the image preprocessing procedures based on machine vision techniques. The results of this study may be useful in developing efficient UAV applications for military and civil purposes.
C1 [Al Said, Nidal] Ajman Univ, Coll Mass Commun, Ajman, U Arab Emirates.
   [Gorbachev, Yuri] Natl Res Univ, Moscow Aviat Inst, Dept Informat Technol, Moscow, Russia.
   [Avdeenko, Aleksei] Don State Agr Univ, Dept Agr & Storage Technol Crop Prod, Persianovsky, Russia.
C3 Ajman University; Moscow Aviation Institute; Don State Agrarian
   University
RP Al Said, N (corresponding author), Ajman Univ, Coll Mass Commun, Ajman, U Arab Emirates.
EM nidalsaid08@gmail.com
RI Avdeenko, Aleksei/D-4800-2017
OI Avdeenko, Aleksei/0000-0003-0341-7701
CR Abeywardena D., 2019, GOOGLE PATENTS
   Akintoye KA., 2017, INT J COMPUT APPL, V157, P16, DOI 10.5120/ijca2017912637
   Al-Kaff A, 2017, LECT NOTES COMPUT SC, V10617, P288, DOI 10.1007/978-3-319-70353-4_25
   Al-Kaff A, 2018, EXPERT SYST APPL, V92, P447, DOI 10.1016/j.eswa.2017.09.033
   Avdeenko A, 2021, SOFTW PRACT EXPER, P1
   Boranbayev A., 2020, P SCI INF C, P380, DOI [10.1007/978-3-030-52246-9_28, DOI 10.1007/978-3-030-52246-9_28]
   Borodin K, 2019, CURVED LAYER STRUCT, V6, P236, DOI 10.1515/cls-2019-0020
   Bulat MP, 2018, ACTA ASTRONAUT, V150, P153, DOI 10.1016/j.actaastro.2017.11.030
   Bulat PV, 2017, ACTA ASTRONAUT, V135, P150, DOI 10.1016/j.actaastro.2016.11.042
   Bulat P.V., 2014, LIFE SCI J, V11, P307
   Carrio A, 2017, J SENSORS, V2017, DOI 10.1155/2017/3296874
   Chen BH, 2016, NEUROCOMPUTING, V208, P350, DOI 10.1016/j.neucom.2015.11.118
   Craye C, 2019, 2019 16TH IEEE INTERNATIONAL CONFERENCE ON ADVANCED VIDEO AND SIGNAL BASED SURVEILLANCE (AVSS), DOI 10.1109/avss.2019.8909854
   Duissenbekov B, 2020, CURVED LAYER STRUCT, V7, P48, DOI 10.1515/cls-2020-0005
   Fresk E, 2017, IEEE T CONTR SYST T, V25, P192, DOI 10.1109/TCST.2016.2542022
   Fu CH, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16091406
   Gebrehiwot A, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19071486
   Geifman Y, 2017, ADV NEUR IN, V30
   Gorokhovatsky VA., 2017, RADIOELECTRON INFORM, V3, P78
   Guo Y, 2019, IEEE T VEH TECHNOL, V68, P6557, DOI 10.1109/TVT.2019.2914477
   Hawkes PW., 2020, MORPHOLOGICAL IMAGE, P520
   Knyaz V, 2020, PROC SPIE, V11533, DOI 10.1117/12.2574078
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Maheshwari B.C., 2017, ICECTA, 2017 International Conference on, P1, DOI 10.1109/ICECTA.2017.8251977
   Olivares-Mendez MA, 2015, SENSORS-BASEL, V15, P31362, DOI 10.3390/s151229861
   Ospanov A. A., 2019, Journal of Hygienic Engineering and Design, V27, P87
   Perez-Grau FJ, 2018, J FIELD ROBOT, V35, P121, DOI 10.1002/rob.21757
   Pingel TJ, 2013, ISPRS J PHOTOGRAMM, V77, P21, DOI 10.1016/j.isprsjprs.2012.12.002
   Plyer A, 2016, J REAL-TIME IMAGE PR, V11, P713, DOI 10.1007/s11554-014-0423-0
   Rosten E, 2006, LECT NOTES COMPUT SC, V3951, P430, DOI 10.1007/11744023_34
   Rublee E, 2011, IEEE I CONF COMP VIS, P2564, DOI 10.1109/ICCV.2011.6126544
   Schumann A., 2017, P NATO IST 153 RWS 2, P1, DOI 10.1109/AVSS.2017.8078558
   Tabarzad MA, 2017, APPL INTELL, V46, P62, DOI 10.1007/s10489-016-0824-9
   Thaher RH., 2014, INT J COMPUTER APPL, V107, P38, DOI 10.5120/18735-9977
   Torres VAMF, 2020, ENG APPL ARTIF INTEL, V87, DOI 10.1016/j.engappai.2019.08.021
   Wonjae Lee, 2017, 2017 IEEE International Conference on Consumer Electronics (ICCE), P252, DOI 10.1109/ICCE.2017.7889305
   Youngjib Ham, 2016, Visualization in Engineering, V4, DOI 10.1186/s40327-015-0029-z
   Zahran S, 2018, IEEE POSITION LOCAT, P1135, DOI 10.1109/PLANS.2018.8373497
NR 38
TC 5
Z9 5
U1 2
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2021
VL 51
IS 7
BP 1509
EP 1517
DI 10.1002/spe.2964
EA MAR 2021
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO3PJ
UT WOS:000624573900001
DA 2024-07-18
ER

PT J
AU Castro, JPD
   Carniel, AC
   Ciferri, CDD
AF de Carvalho Castro, Joao Pedro
   Chaves Carniel, Anderson
   Dutra de Aguiar Ciferri, Cristina
TI Analyzing spatial analytics systems based on Hadoop and Spark: A user
   perspective
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Hadoop; Spark; Spatial Analytics Systems; User-centric Comparison
ID DATA-MANAGEMENT; DESIGN; GIS
AB Spatial analytics systems (SASs) represent a technology capable of managing huge volumes of spatial data using frameworks such as Apache Hadoop and Apache Spark. An increasing number of SASs have been proposed, requiring a comparison among them. However, existing comparisons in the literature provide asystem-centricview based on performance evaluations. Thus, there is a lack of comparisons based on theuser-centricview, that is, comparisons that help users to understand how the characteristics of SASs are useful to meet the specific requirements of their spatial applications. In this article, we provide a user-centric comparison of the following SASs based on Hadoop and Spark: Hadoop-GIS, SpatialHadoop, SpatialSpark, GeoSpark, GeoMesa Spark, SIMBA, LocationSpark, STARK, Magellan, SparkGIS, and Elcano. This comparison employs an extensive set of criteria related to the general characteristics of these systems, to the aspects of spatial data handling, and to the aspects inherent to distributed systems. Based on this comparison, we introduce guidelines to help users to choose an appropriate SAS. We also describe two case studies based on real-world applications to illustrate the use of these guidelines. Finally, we discuss chronological tendencies related to SASs and identify limitations that SASs should address to improve user experience.
C1 [de Carvalho Castro, Joao Pedro; Dutra de Aguiar Ciferri, Cristina] Univ Sao Paulo, Dept Comp Sci, Sao Paulo, Brazil.
   [de Carvalho Castro, Joao Pedro] Fed Univ Minas Gerais UFMG, Comp Ctr CECOM, Belo Horizonte, MG, Brazil.
   [Chaves Carniel, Anderson] Fed Univ Technol Parana UTFPR, Dois Vizinhos, Brazil.
C3 Universidade de Sao Paulo; Universidade Federal de Minas Gerais;
   Universidade Tecnologica Federal do Parana
RP Castro, JPD (corresponding author), Fed Univ Minas Gerais UFMG, Belo Horizonte, MG, Brazil.
EM jpcarvalhocastro@ufmg.br
RI Carniel, Anderson Chaves/H-6685-2017
OI Carniel, Anderson Chaves/0000-0002-8297-9894; Castro, Joao Pedro de
   Carvalho/0000-0003-3566-0415
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico;
   Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior [001];
   Fundacao de Amparo a Pesquisa do Estado de Sao Paulo [2018/22277-8];
   Fundacao de Amparo a Pesquisa do Estado de Sao Paulo (FAPESP)
   [18/22277-8] Funding Source: FAPESP
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico;
   Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior, Grant/Award
   Number: Finance Code 001; Fundacao de Amparo a Pesquisa do Estado de Sao
   Paulo, Grant/Award Number: 2018/22277-8
CR Aji A, 2013, PROC VLDB ENDOW, V6, P1009, DOI 10.14778/2536222.2536227
   Al-Naami KM, 2016, SOFTWARE PRACT EXPER, V46, P1329, DOI 10.1002/spe.2383
   Al-Naami KM, 2014, IEEE INT CONF CLOUD, P681, DOI 10.1109/CLOUD.2014.96
   Alam MM, 2018, BIGSPATIAL 2018: PROCEEDINGS OF THE 7TH ACM SIGSPATIAL INTERNATIONAL WORKSHOP ON ANALYTICS FOR BIG GEOSPATIAL DATA (BIGSPATIAL-2018), P1, DOI 10.1145/3282834.3282841
   Alic AS, 2018, P 19 BRAZ S GEOINF C, P1
   Andrade SC, 2018, 19 BRAZ S GEOINF GEO, P116
   [Anonymous], 2016, J DIRECT DATA DIGIT, DOI DOI 10.1057/S41263-016-0007-8
   [Anonymous], 1994, VLDB J, DOI [10.1007/BF01231602, DOI 10.1007/BF01231602]
   [Anonymous], OPENGIS IMPL STAND G
   Armbrust M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1383, DOI 10.1145/2723372.2742797
   Baig F, 2017, 25TH ACM SIGSPATIAL INTERNATIONAL CONFERENCE ON ADVANCES IN GEOGRAPHIC INFORMATION SYSTEMS (ACM SIGSPATIAL GIS 2017), DOI 10.1145/3139958.3140019
   Bimonte S, 2017, INT J DIGIT EARTH, V10, P901, DOI 10.1080/17538947.2016.1266040
   Carniel AC, 2017, SAT EV BRAZ S DAT DA, P286
   Castro JPC, 2018, P BRAZ S GEOINF CAMP, P80
   Chen W, 2015, IEEE T INTELL TRANSP, V16, DOI 10.1109/TITS.2015.2436897
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Drakou EG, 2015, ECOSYST SERV, V13, P134, DOI 10.1016/j.ecoser.2014.12.002
   Du ZH, 2017, ISPRS INT J GEO-INF, V6, DOI 10.3390/ijgi6040096
   Eldawy A, 2015, PROC INT CONF DATA, P1352
   Eldawy A, 2015, PROC VLDB ENDOW, V8, P1602
   Eldawy A, 2016, PROC INT CONF DATA, P601, DOI 10.1109/ICDE.2016.7498274
   Eldawy A, 2015, PROC INT CONF DATA, P1585, DOI 10.1109/ICDE.2015.7113427
   Eldawy A, 2013, PROC VLDB ENDOW, V6, P1230, DOI 10.14778/2536274.2536283
   Eldawy A, 2014, PROC INT CONF DATA, P1242, DOI 10.1109/ICDE.2014.6816751
   Engélinus J, 2018, GISTAM: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON GEOGRAPHICAL INFORMATION SYSTEMS THEORY, APPLICATIONS AND MANAGEMENT, P119, DOI 10.5220/0006794601190128
   Gaede V, 1998, ACM COMPUT SURV, V30, P170, DOI 10.1145/280277.280279
   García-García F, 2017, LECT NOTES COMPUT SC, V10509, P214, DOI 10.1007/978-3-319-66917-5_15
   Guttman A., 1984, SIGMOD Record, V14, P47, DOI 10.1145/971697.602266
   Haffner M, 2018, T GIS, V22, P913, DOI 10.1111/tgis.12335
   Hagedorn S., 2017, P 20 INT C EXT DAT T, P570
   Hagedorn S, 2017, EDBT, P490
   Hagedorn S, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P187, DOI 10.1145/2872518.2890530
   Hagedorn Stefan, 2017, Datenbanksysteme fur Business, Technologie und Web (BTW 2017)
   Haklay M, 2008, IEEE PERVAS COMPUT, V7, P12, DOI 10.1109/MPRV.2008.80
   Hughes JN, 2015, PROC SPIE, V9473, DOI 10.1117/12.2177233
   Jacox EH, 2007, ACM T DATABASE SYST, V32, DOI 10.1145/1206049.1206056
   Kamel C., 1994, P 20 INT C VER LARG, P500
   Lee KB, 2005, IEEE INSTRU MEAS MAG, V8, P14, DOI 10.1109/MIM.2005.1578613
   Madaan N, 2018, COMPUT LAW SECUR REV, V34, P125, DOI 10.1016/j.clsr.2017.06.007
   Magdy Amr., 2014, SIGSPATIAL
   NIEVERGELT J, 1984, ACM T DATABASE SYST, V9, P38, DOI 10.1145/348.318586
   Pandey V, 2018, PROC VLDB ENDOW, V11, P1661, DOI 10.14778/3236187.3236213
   Perlibakas V, 2004, PATTERN RECOGN LETT, V25, P711, DOI 10.1016/j.patrec.2004.01.011
   PEUQUET DJ, 1987, PATTERN RECOGN, V20, P65, DOI 10.1016/0031-3203(87)90018-5
   Qiu Y, 2010, SCAND J IMMUNOL, V72, P425, DOI 10.1111/j.1365-3083.2010.02456.x
   Rosina K, 2020, INT J DIGIT EARTH, V13, P602, DOI 10.1080/17538947.2018.1550119
   SAMET H, 1984, COMPUT SURV, V16, P187, DOI 10.1145/356924.356930
   Shi JW, 2015, PROC VLDB ENDOW, V8, P2110, DOI 10.14778/2831360.2831365
   Shvachko K, 2010, IEEE S MASS STOR SYS
   Smarzaro R, 2017, WWW'17 COMPANION: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1463, DOI 10.1145/3041021.3051700
   Steiniger S, 2009, INT J GEOGR INF SCI, V23, P1345, DOI 10.1080/13658810802634956
   Tang MJ, 2016, PROC VLDB ENDOW, V9, P1565, DOI 10.14778/3007263.3007310
   Thusoo A, 2010, PROC INT CONF DATA, P996, DOI 10.1109/ICDE.2010.5447738
   Wedding LM, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0189792
   Wiemann S, 2018, INT J DIGIT EARTH, V11, P79, DOI 10.1080/17538947.2017.1326984
   Xie D, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1071, DOI 10.1145/2882903.2915237
   You S., 2016, P 5 ACM SIGSPATIAL I, P42
   You SM, 2015, 2015 13TH IEEE INTERNATIONAL CONFERENCE ON DATA ENGINEERING WORKSHOPS (ICDEW), P34, DOI 10.1109/ICDEW.2015.7129541
   Yu J, 2018, 30TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT (SSDBM 2018), DOI 10.1145/3221269.3223040
   Yu J, 2019, GEOINFORMATICA, V23, P37, DOI 10.1007/s10707-018-0330-9
   Yu J, 2015, 23RD ACM SIGSPATIAL INTERNATIONAL CONFERENCE ON ADVANCES IN GEOGRAPHIC INFORMATION SYSTEMS (ACM SIGSPATIAL GIS 2015), DOI 10.1145/2820783.2820860
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
NR 62
TC 5
Z9 5
U1 2
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2020
VL 50
IS 12
BP 2121
EP 2144
DI 10.1002/spe.2882
EA AUG 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OO7CG
UT WOS:000564557400001
DA 2024-07-18
ER

PT J
AU De Iasio, A
   Zimeo, E
AF De Iasio, Antonio
   Zimeo, Eugenio
TI A framework for microservices synchronization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE concurrency; continuous deployment; microservices paradigm; middleware;
   services coordination; synchronization
AB Microservices architecture and continuous software engineering are becoming popular approaches for developing and operating software products. The enabling feature of this success is the independence of the execution environments hosting microservices: by insulating failures and versioning in specific microservices, a complex application benefits of high availability at runtime and agility at development time. However, execution independence does not mean functional independence. Microservices need to interact among them to fulfill a common goal of an application. The unavailability of a microservice may seriously impact other dependent microservices, limiting continuity. To address this new kind of problem in microservices architecture, we argue the necessity of a synchronization mechanism able to support microservices coordination according to their running states: dependent microservices should wait for unready ones to avoid useless and faulty interactions. In this article, we propose a new framework,Synchronizer, able to support synchronization among microservices by exploiting distributed registries for collecting health/state information about deployed containers and hosted microservices. It has been implemented for the OpenShift platform and validated in different use cases: for example, for coordinating applications bootstrap and for programming scripts of continuous deployment orchestrators, such as Jenkins. In both cases,Synchronizerworked as expected and showed the positive effects of synchronization, giving us a valuable feedback about the possibility of further extending its application and of integrating the feature in existing microservices frameworks (eg, services mesh).
C1 [De Iasio, Antonio; Zimeo, Eugenio] Univ Sannio, Dept Engn, Benevento, Italy.
C3 University of Sannio
RP Zimeo, E (corresponding author), Via Traiano 1, I-82100 Benevento, Italy.
EM zimeo@unisannio.it
OI ZIMEO, Eugenio/0000-0003-4683-5487
FU GAUSS PRIN 2015 [2015KWREMX]; SISMA PRIN 2017 [201752ENYB_002]
FX GAUSS PRIN 2015, Grant/Award Number: 2015KWREMX; SISMA PRIN 2017,
   Grant/Award Number: 201752ENYB_002
CR Aderaldo CM, 2017, BENCHMARK REQUIREMEN, P8
   [Anonymous], 2018, OPENSHIFT
   [Anonymous], 2018, KUBERNETES
   [Anonymous], 2018, ETCD
   [Anonymous], 2018, OPENSHIFT PIPELINE P
   [Anonymous], 2018, 7 METRICS TRACK IMPL
   [Anonymous], 2018, CONSUL
   [Anonymous], 2019, SERF DOCUMENTATION
   [Anonymous], 2018, JENKINS
   [Anonymous], 2019, ZOOKEEPER 3 5 DOCUME
   [Anonymous], 2019, CONDUCTOR
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Burns B, 2016, 8 USENIX WORKSH HOT
   de Guzmán PC, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P379, DOI 10.1109/ICWS.2018.00066
   Dan Z., 2016, TECHTACK CONTINUOUS
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Esparrachiari S., 2018, Queue, V16, P44, DOI DOI 10.1145/3277539.3277541
   Evans E., 2003, Domain-Driven Design
   Farcic V, 2016, DEVOPS 2 0 TOOLKIT A
   Fowler M., 2014, CONTINUOUS INTEGRATI
   Furber SB, 2013, IEEE T COMPUT, V62, P2454, DOI 10.1109/TC.2012.142
   Furno A, 2014, J PARALLEL DISTR COM, V74, P2994, DOI 10.1016/j.jpdc.2014.06.006
   Giallorenzo S, 2017, CHOREOGRAPHIES MICRO
   Hamunen J., 2016, Challenges in Adopting a DevOps Approach to Software Development and Operations
   Hunt P., 2010, 2010 USENIX ANN TECH, V8, P9
   Hunter Thomas, 2017, ADV MICROSERVICES, P73
   Jenkins X, 2019, JENKINS X
   Kalantari B, 2013, ADDRESSING ZOOKEEPER, P434
   Kupiainen E, 2014, INT WORKSH EM TRENDS, P23
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Lewis J., 2014, Microservices: A definition of this new architectural term
   Lwakatare LE, 2016, LECT NOTES COMPUT SC, V10027, P399, DOI 10.1007/978-3-319-49094-6_27
   Michael B, 2015, MEASUREMENTS CONTINU
   Montesi F., 2016, ARXIV160905830
   Newman S., 2015, BUILDING MICROSERVIC
   Nygard MichaelT., 2018, Release it!: design and deploy production-ready software
   Ongaro Diego, 2014, 2014 USENIX ANN TECH, P305, DOI DOI 10.1007/0-387-34805-0_21
   Pittet S., 2018, Continuous integration vs. continuous delivery vs. continuous deployment
   Shadija D., 2017, UNDERSTANDING MICROS, P1
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Silberschatz Abraham, 2012, OPERATING SYSTEM CON, V9th
   Stubbs J, 2015, 7TH INTERNATIONAL WORKSHOP ON SCIENCE GATEWAYS - IWSG 2015, P34, DOI 10.1109/IWSG.2015.16
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 43
TC 5
Z9 5
U1 4
U2 45
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2021
VL 51
IS 1
SI SI
BP 25
EP 45
DI 10.1002/spe.2877
EA AUG 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PH6SW
UT WOS:000558976500001
DA 2024-07-18
ER

PT J
AU Sen, A
   Madria, S
AF Sen, Amartya
   Madria, Sanjay
TI Analysis of a cloud migration framework for offline risk assessment of
   cloud service providers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud migration; cloud security; genetic algorithm; multiobjective
   optimization; risk assessment; sensitivity analysis
ID OPTIMIZATION
AB Generic notions of security on cloud platforms make clients apprehensive about fully migrating their applications on these platforms. The challenge lies in the capability of personalizing the security assessments of different cloud service providers from the perspective of the security requirements of the client applications to be hosted on them. This challenge was addressed by the previously proposed offline risk assessment framework for cloud service providers. This article presents a comprehensive analysis of a cloud migration framework that has been designed by adapting the novel security assessment principles of the offline risk assessment framework. The migration strategy has been modeled as a multiobjective optimization problem to further study the performance of numerous evolutionary algorithms in designing various cloud migration scenarios. The overall effectiveness of the proposed framework has been examined using a use-case application scenario and semisynthetic cloud service providers.
C1 [Sen, Amartya] Oakland Univ, Dept Comp Sci & Engn, Rochester, MI 48309 USA.
   [Madria, Sanjay] Missouri Univ Sci & Technol, Dept Comp Sci, 500 W 15th St,325 Comp Sci Bldg, Rolla, MO 65409 USA.
C3 Oakland University; University of Missouri System; Missouri University
   of Science & Technology
RP Madria, S (corresponding author), Missouri Univ Sci & Technol, Dept Comp Sci, 500 W 15th St,325 Comp Sci Bldg, Rolla, MO 65409 USA.
EM madrias@mst.edu
RI Sen, Amartya/AAR-2573-2021
OI Sen, Amartya/0000-0002-5265-1484
CR Andrikopoulos V., 2013, P WESOA 13, P1
   [Anonymous], 2013, P INT WORKSHOP MULTI
   Barker S.K., 2012, INT C EXTENDING DATA, P432
   Ben Yahia W, 2015, APPL COND MONITOR, V2, P327, DOI 10.1007/978-3-319-14532-7_34
   Cayirci E, 2016, J CLOUD COMPUT-ADV S, V5, DOI 10.1186/s13677-016-0064-x
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Djemame K, 2016, IEEE T CLOUD COMPUT, V4, P265, DOI 10.1109/TCC.2014.2344653
   Ghosh N, 2015, IEEE T CLOUD COMPUT, V3, P66, DOI 10.1109/TCC.2014.2328578
   Hale M., 2012, P 8 IEEE WORLD C SER
   Jamkhedkar P, 2013, INT CONF CLOUD COMP, P371, DOI 10.1109/CloudCom.2013.55
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Johnson B., 2012, 2012 IEEE 10th International Symposium on Parallel and Distributed Processing with Applications (ISPA), P435, DOI 10.1109/ISPA.2012.63
   Kamongi P., 2014, P 6 ASE INT C PRIV S
   Kashef Mohammad Mahdi, 2012, Economics of Grids, Clouds, Systems, and Services. 8th International Workshop, GECON 2011. Revised Selected Papers, P46, DOI 10.1007/978-3-642-28675-9_4
   Khajeh-Hosseini A., 2011, Proceedings of the 2011 IEEE 4th International Conference on Cloud Computing (CLOUD 2011), P541, DOI 10.1109/CLOUD.2011.59
   Khajeh-Hosseini Ali, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P450, DOI 10.1109/CLOUD.2010.37
   Li MQ, 2014, IEEE T CYBERNETICS, V44, P2568, DOI 10.1109/TCYB.2014.2310651
   Loucks D.P., 2005, Water Resources Systems Planning and Management
   Madria S, 2015, IEEE CLOUD COMPUT, V2, P50, DOI 10.1109/MCC.2015.63
   Menzel M, 2015, IEEE T COMPUT, V64, P1336, DOI 10.1109/TC.2014.2317188
   Morana MM, 2008, IMI SEC S EXP
   Nussbaumer N, 2013, P IEEE 37 ANN COMP S
   Optimizing IT, 2015, TECHN REFR POL
   Ponsich A, 2013, IEEE T EVOLUT COMPUT, V17, P321, DOI 10.1109/TEVC.2012.2196800
   Qiu WW, 2014, IEEE T SERV COMPUT, V7, P223, DOI 10.1109/TSC.2013.38
   Sen A, 2014, IEEE WORLD CONGR SER, P58, DOI 10.1109/SERVICES.2014.20
   Shostacj Adam, 2008, MOD SEC WORKSH DEP C
   Sobol IM, 2001, MATH COMPUT SIMULAT, V55, P271, DOI 10.1016/S0378-4754(00)00270-6
   Tran V., 2011, Proceedings of the 2nd International Workshop on Software Engineering for Cloud Computing, P22, DOI [10.1145/1985500.1985505, DOI 10.1145/1985500.1985505]
   Zhang XY, 2015, CPT-PHARMACOMET SYST, V4, P69, DOI 10.1002/psp4.6
NR 30
TC 3
Z9 3
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2020
VL 50
IS 6
BP 998
EP 1021
DI 10.1002/spe.2809
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK4IJ
UT WOS:000530823800010
DA 2024-07-18
ER

PT J
AU Ke, HJ
   Chen, D
   Shah, T
   Liu, XZ
   Zhang, XH
   Zhang, L
   Li, XL
AF Ke, Hengjin
   Chen, Dan
   Shah, Tejal
   Liu, Xianzeng
   Zhang, Xinhua
   Zhang, Lei
   Li, Xiaoli
TI Cloud-aided online EEG classification system for brain healthcare: A
   case study of depression evaluation with a lightweight CNN
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE brain healthcare; Cloud computing; CNN; depression; EEG classification
ID BIG DATA; CHALLENGES
AB Brain healthcare, when supported by Internet of Things, can perform online and accurate analysis of brain big data for the classification of multivariate Electroencephalogram (EEG), which is a prerequisite for the recent boom in neurofeedback applications and clinical practices. However, it remains a grand research challenge due to (1) the embedded intensive noises and the intrinsic nonstationarity determined by the evolution of brain states; and (2) the lack of a user-friendly computing platform to sustain the complicated analytics. This study presents the design of an online EEG classification system aided by Cloud centering on a lightweight Convolutional Neural Network (CNN). The system incrementally trains the CNN on Cloud and enables hot deployment of the trained classifier without the need to restart the gateway to adapt to the users' needs. The classifier maintains a High Convolutional Layer to gain the ability of processing high-dimensional EEG segments. The number of hidden layers is minimized to ensure the efficiency of training. The lightweight CNN adopts an "hourglass" block of fully connected layers to reduce the number of neurons quickly toward the output end. A case study of depression evaluation has been performed against raw EEG datasets to distinguish between (1) Healthy and Major Depression Disorder with an accuracy, sensitivity, and specificity of [98.59% +/- 0.28%], [97.77% +/- 0.63%], and [99.51% +/- 0.19%], respectively; and (2) Effective and Noneffective treatment outcome with an accuracy, sensitivity, and specificity of [99.53% +/- 0.002%], [99.50% +/- 0.01%], and [99.58% +/- 0.02%], respectively. The results show that the classification can be completed several magnitudes faster when EEG is collected on the gateway (several milliseconds vs. 4 seconds).
C1 [Ke, Hengjin; Chen, Dan; Zhang, Lei] Wuhan Univ, Sch Comp Sci, Med AI Res Grp, Inst Artificial Intelligence, Wuhan, Peoples R China.
   [Shah, Tejal] Newcastle Univ, Inst Hlth & Soc, Newcastle Upon Tyne, Tyne & Wear, England.
   [Liu, Xianzeng; Zhang, Xinhua] Peking Univ, Dept Neurol, Peoples Hosp, Beijing, Peoples R China.
   [Li, Xiaoli] Beijing Normal Univ, Natl Key Lab Cognit Neurosci & Learning, Beijing, Peoples R China.
C3 Wuhan University; Newcastle University - UK; Peking University; Beijing
   Normal University
RP Chen, D (corresponding author), Wuhan Univ, Sch Comp Sci, Med AI Res Grp, Inst Artificial Intelligence, Wuhan, Peoples R China.
EM dan.chen@whu.edu.cn
RI Li, Xiaoli/JAC-5560-2023; Li, Xiaoli/GYQ-7384-2022; Ke,
   Hengjin/JUU-8383-2023; Li, Xiaoli/B-6565-2016; jin, chen/KBQ-8592-2024
OI Li, Xiaoli/0000-0003-1359-5130; Li, Xiaoli/0000-0003-1359-5130; Ke,
   Hengjin/0000-0003-3571-0005; Shah, Tejal/0000-0001-7060-4211
CR Al-Kaysi AM, 2017, J AFFECT DISORDERS, V208, P597, DOI 10.1016/j.jad.2016.10.021
   [Anonymous], 2017, P 2017 IEEE INT C
   [Anonymous], 2015, P 32 INT C MACH LEAR
   Blankertz B, 2008, IEEE SIGNAL PROC MAG, V25, P41, DOI 10.1109/MSP.2008.4408441
   Buzsáki G, 2004, SCIENCE, V304, P1926, DOI 10.1126/science.1099745
   Cai HS, 2018, COMPLEXITY, DOI 10.1155/2018/5238028
   Casola V, 2016, IEEE CLOUD COMPUT, V3, P10, DOI 10.1109/MCC.2016.139
   Chen JY, 2019, COMPUT HUM BEHAV, V90, P204, DOI 10.1016/j.chb.2018.08.057
   Esposito C, 2018, IEEE CLOUD COMPUT, V5, P31
   Farahani B, 2018, FUTURE GENER COMP SY, V78, P659, DOI 10.1016/j.future.2017.04.036
   Gia TN, 2015, 2015 IEEE INT C COMP
   Gong WY, 2020, IEEE T SYST MAN CY-S, V50, P1499, DOI 10.1109/TSMC.2018.2828018
   Guo C, 2016, J MED SYST, V40, DOI 10.1007/s10916-016-0588-0
   He DB, 2018, IEEE T DEPEND SECURE, V15, P633, DOI 10.1109/TDSC.2016.2596286
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He K, 2015, 2015 C COMP VIS PATT
   Jain V., 2009, PROC ADV NEURAL INFO, P769
   Jing XY, 2017, IEEE T IMAGE PROCESS, V26, P1363, DOI 10.1109/TIP.2017.2651364
   Ke HJ, 2018, IEEE ACCESS, V6, P14722, DOI 10.1109/ACCESS.2018.2810882
   Khoshkbarforoushha A, 2017, J COMPUT SYST SCI, V89, P24, DOI 10.1016/j.jcss.2016.11.002
   Khoshkbarforoushha A, 2017, IEEE T EMERG TOP COM, V5, P120, DOI 10.1109/TETC.2016.2597546
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Liao SC, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17061385
   Liao ZW, 2020, IEEE T SYST MAN CY-S, V50, P1590, DOI 10.1109/TSMC.2018.2852798
   Lu N, 2015, J NEUROSCI METH, V249, P41, DOI 10.1016/j.jneumeth.2015.03.031
   Lu XX, 2018, IEEE T GEOSCI REMOTE, V56, P2183, DOI 10.1109/TGRS.2017.2776321
   Lu XQ, 2018, IEEE T GEOSCI REMOTE, V56, P1704, DOI 10.1109/TGRS.2017.2767068
   Lu XQ, 2014, IEEE T CYBERNETICS, V44, P366, DOI 10.1109/TCYB.2013.2256347
   Maciukiewicz M, 2018, J PSYCHIATR RES, V99, P62, DOI 10.1016/j.jpsychires.2017.12.009
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Mirowski P, 2009, CLIN NEUROPHYSIOL, V120, P1927, DOI 10.1016/j.clinph.2009.09.002
   Mumtaz W, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0171409
   Myers MH, 2016, FRONT HUM NEUROSCI, V10, DOI 10.3389/fnhum.2016.00080
   Nepal S, 2015, IEEE CLOUD COMPUT, V2, P78, DOI 10.1109/MCC.2015.36
   Nugraha AT, 2018, 2018 INT C SIGN SYST
   Puthal D, 2015, 2015 IEEE TRUSTC BIG
   Ranjan R, 2018, IEEE CLOUD COMPUT, V5, P12, DOI 10.1109/MCC.2018.032591612
   Ruder S., 2016, ARXIV
   Spinoulas L, 2015, IEEE COMPUT SOC CONF
   Sushkova O, 2016, PARK RELAT DISORD, V22
   Tomida N, 2015, IEEE T BIO-MED ENG, V62, P458, DOI 10.1109/TBME.2014.2358536
   Verma P, 2018, J PARALLEL DISTR COM, V116, P27, DOI 10.1016/j.jpdc.2017.11.018
   Wiatowski T, 2018, IEEE T INFORM THEORY, V64, P1845, DOI 10.1109/TIT.2017.2776228
   Zhang WZ, 2018, IEEE T GEOSCI REMOTE, V56, P3587, DOI 10.1109/TGRS.2018.2802785
NR 44
TC 54
Z9 54
U1 12
U2 52
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 596
EP 610
DI 10.1002/spe.2668
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000526578200008
DA 2024-07-18
ER

PT J
AU Weir, C
   Becker, I
   Noble, J
   Blair, L
   Sasse, MA
   Rashid, A
AF Weir, Charles
   Becker, Ingolf
   Noble, James
   Blair, Lynne
   Sasse, M. Angela
   Rashid, Awais
TI Interventions for long-term software security creating a lightweight
   program of assurance techniques for developers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE action research; cybersecurity; developer-centered security;
   intervention; software developer; software security
AB Though some software development teams are highly effective at delivering security, others either do not care or do not have access to security experts to teach them how. Unfortunately, these latter teams are still responsible for the security of the systems they build: systems that are ever more important to ever more people. We propose that a series of lightweight interventions, six hours of facilitated workshops delivered over three months, can improve a team's motivation to consider security and awareness of assurance techniques, changing its security culture even when no security experts are involved. The interventions were developed after an Appreciative Inquiry and Grounded Theory survey of security professionals to find out what approaches work best. We tested the interventions in a participatory action research field study where we delivered the workshops to three software development organizations and evaluated their effectiveness through interviews beforehand, immediately afterwards, and after twelve months. We found that the interventions can be effective with teams with limited or no security experience and that improvement is long-lasting. This approach and the learning points arising from the work here have the potential to be applied in many development teams, improving the security of software worldwide.
C1 [Weir, Charles] Univ Lancaster, Secur Lancaster, Lancaster LA1 4YW, England.
   [Becker, Ingolf] UCL, Secur & Crime Sci, London, England.
   [Noble, James] Victoria Univ Wellington, Engn & Comp Sci, Wellington, New Zealand.
   [Blair, Lynne] Univ Lancaster, Comp & Commun, Lancaster, England.
   [Sasse, M. Angela] UCL, Comp Sci, London, England.
   [Rashid, Awais] Univ Bristol, Bristol Cyber Secur Grp, Bristol, Avon, England.
C3 Lancaster University; University of London; University College London;
   Victoria University Wellington; Lancaster University; University of
   London; University College London; University of Bristol
RP Weir, C (corresponding author), Univ Lancaster, Secur Lancaster, Lancaster LA1 4YW, England.
EM c.weir1@lancaster.ac.uk
RI Sasse, Angela M/G-8628-2013
OI Noble, James/0000-0001-9036-5692; Weir, Charles/0000-0003-3051-4195;
   Rashid, Awais/0000-0002-0109-1341
FU EPSRC [EP/N033396/1] Funding Source: UKRI
CR Acar Y., 2017, 13 S US PRIV SEC SOU
   [Anonymous], 1973, DISCOVERY GROUNDED T
   [Anonymous], 2019, BUILDING SECURITY MA
   [Anonymous], 2017, TOP 2016 CYB REP OUT
   Ashenden D, 2016, IEEE SECUR PRIV, V14, P82, DOI 10.1109/MSP.2016.57
   Assal H, 2018, 14 S US PRIV SEC SOU
   Assal H, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300519
   Baskenrille R. L, 1999, COMMUNICATIONS AIS, V2, P4
   Bell L., 2017, Agile Application Security: Enabling Securityin a Continuous Delivery Pipeline
   Caputo DD, 2016, IEEE SECUR PRIV, V14, P22, DOI 10.1109/MSP.2016.95
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Conradi R., 2001, Software Engineering Notes, V26, P268, DOI 10.1145/503271.503246
   Cooperrider DavidL., 2005, APPRECIATIVE INQUIRY
   De Win B, 2009, INFORM SOFTWARE TECH, V51, P1152, DOI 10.1016/j.infsof.2008.01.010
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Do LNQ, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P307, DOI 10.1145/3092703.3092705
   Fogg Brian J, 2009, P 4 INT C PERS TECHN, P1, DOI [10.1145/1541948.1541999, DOI 10.1145/1541948.1541999]
   Frey S, 2019, IEEE T SOFTWARE ENG, V45, P521, DOI 10.1109/TSE.2017.2782813
   Geer D, 2010, COMPUTER, V43, P12, DOI 10.1109/MC.2010.159
   Gen M., 2000, Genetic Algorithms and Engineering Optimization
   Haney J.M., 2017, 13 S US PRIV SEC SOU
   Haney JM, 2018, 14 S US PRIV SEC SOU
   Hardgrave BC, 2003, J MANAGE INFORM SYST, V20, P123
   Kirlappos I., 2015, ACM SIGCAS Computers and Society, V45, P29
   Kirlappos I, 2013, LECT NOTES COMPUT SC, V7862, P70, DOI 10.1007/978-3-642-41320-9_5
   Lavallee M, 2012, 34 INT C SOFTW ENG I, DOI [10.1109/ICSE.2012.6227201, DOI 10.1109/ICSE.2012.6227201]
   Microsoft, 2018, SECURITY DEV LIFECYC
   Nayak K, 2014, RES ATTACKS INTRUSIO, DOI 10.1007/978-3-319-11379-1_21
   Nguyen D. C., 2017, P 2017 ACM SIGSAC C
   Oliveira Daniela, 2014, P 30 ANN COMP SEC AP, P296, DOI [10.1145/2664243.2664254, DOI 10.1145/2664243.2664254]
   Petersen K., 2014, P INT WORKSH LONG TE, P55
   Pfleeger SL, 2014, J HOMEL SECUR EMERG, V11, P489, DOI 10.1515/jhsem-2014-0035
   Poller A, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P2489, DOI 10.1145/2998181.2998191
   Pribik Ingo, 2012, Persuasive Technology. Design for Health and Safety. Proceedings 7th International Conference, PERSUASIVE 2012, P227, DOI 10.1007/978-3-642-31037-9_20
   Rahman AAU, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P70, DOI [10.1109/CSED.2016.021, 10.1145/2896941.2896946]
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Senarath A., 2018, P 22 INT C EV ASS SO, P211, DOI DOI 10.1145/3210459.3210484
   Senarath AR, 2018, TELEMAT INFORM, V35, P1845, DOI 10.1016/j.tele.2018.05.012
   Shah AK, 2012, SCIENCE, V338, P682, DOI 10.1126/science.1222426
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Shostack A., 2014, Threat Modeling: Designing for Security
   Smeets Yannic, 2015, THESIS
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stransky Christian, 2017, CSET 17 USENIX WORKS
   Such JM, 2016, COMPUT SECUR, V60, P117, DOI 10.1016/j.cose.2016.03.009
   Tabassum M., 2017, 13 S US PRIV SEC SOU
   Tahaei M, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW), P129, DOI 10.1109/EuroSPW.2019.00021
   Tietjen M., 1998, Management Decision, V36, P226, DOI [DOI 10.1108/00251749810211027, 10.1108/00251749810211027]
   Türpe S, 2017, INT REQUIR ENG CONF, P122, DOI 10.1109/RE.2017.13
   Turpe S., 2016, WSIWSOUPS
   Vaniea K, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3215, DOI 10.1145/2858036.2858303
   Weir C, 2018, 2018 IEEE CYB DEV SE, DOI 10.1109/SecDev.2018.00019
   Weir C, 2019, AGILE APP SECURITY G
   Weir C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P41, DOI 10.1109/ICSE-SEIP.2019.00013
   Werlinger R, 2009, INT J HUM-COMPUT ST, V67, P584, DOI 10.1016/j.ijhcs.2009.03.002
   Whyte W.F., 1991, PARTICIPATORY ACTION
   Witschey J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P260, DOI 10.1145/2786805.2786816
   Xiao ZK, 2014, INT SYMP INTEGR CIRC, P17, DOI 10.1109/ISICIR.2014.7029473
   Xie J, 2011, IEEE S VIS LANG HUM, DOI DOI 10.1109/VLHCC.2011.6070393
   Xie J., 2012, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, New York, NY, USA, P2707
   Xie J, 2011, 27TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2011), P267
   YouTube, 2014, EE CASH TAP EE
NR 63
TC 15
Z9 16
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2020
VL 50
IS 3
SI SI
BP 275
EP 298
DI 10.1002/spe.2774
EA NOV 2019
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KH3BI
UT WOS:000495815400001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Owusu, E
   Abdulai, JD
   Zhan, YZ
AF Owusu, Ebenezer
   Abdulai, Jamal-Deen
   Zhan, Yongzhao
TI Face detection based on multilayer feed-forward neural network and Haar
   features
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE anisotropic smoothing; Bessel down-sampling; face detection; Haar
   features; multilayer feed-forward neural network (MFNN)
AB Fast and accurate detection of a facial data is crucial for both face and facial expression recognition systems. These systems include internet protocol video surveillance systems, crime scene photographs systems, and criminals' databases. The aim for this study is both improvement of accuracy and speed. The salient facial features are extracted through Haar techniques. The sizes of the images are reduced by Bessel down-sampling algorithm. This method preserved the details and perceptual quality of the original image. Then, image normalization was done by anisotropic smoothing. Multilayer feed-forward neural network with a back-propagation algorithm was used as classifier. A detection accuracy of 98.5% with acceptable false positives was registered with test sets from FDDB, CMU-MIT, and Champions databases. The speed of execution was also promising. An evaluation of the proposed method with other popular detectors on the FDDB set shows great improvement.
C1 [Owusu, Ebenezer; Abdulai, Jamal-Deen] Univ Ghana, Dept Comp Sci, Accra, Ghana.
   [Zhan, Yongzhao] Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang, Peoples R China.
C3 University of Ghana; Jiangsu University
RP Owusu, E (corresponding author), Univ Ghana, Dept Comp Sci, Accra, Ghana.
EM ebeowusu@ug.edu.gh
RI Owusu, Ebenezer/AAL-2011-2021; Abdulai, Jamal-Deen/GPF-9160-2022; jin,
   li/IWU-4648-2023
OI Owusu, Ebenezer/0000-0002-4670-1342; Abdulai,
   Jamal-Deen/0000-0002-4871-9458; 
CR Aghajanian J, 2009, 12 IEEE INT C COMP V
   [Anonymous], 2008, Computer Facial Animation
   [Anonymous], 2016, DIGITAL IMAGE PROCES
   [Anonymous], COMP VIS PATT REC CV
   [Anonymous], 2011, DISCRETE WAVELET TRA
   Berg L, 2004, P 2004 IEEE COMP SOC, V2
   Chadha AR, 2011, 2011 INT C REC ADV E
   Chang C.-C., 2004, INT J WAVELETS MULTI, V2, P111
   Choi E, 2003, PATTERN RECOGN, V36, P1703, DOI 10.1016/S0031-3203(03)00035-9
   Dalal N, 2005, P CVPR, P01
   Gross R, 2003, AUDIO VIDEO BASED BI
   Gross R, 2010, IMAGE VISION COMPUT, V28, P807, DOI 10.1016/j.imavis.2009.08.002
   Gupta B, 2010, P INT S COMP ENG TEC
   Huang HF, 2012, ELECT LETT COMPUT VI, V11, P41
   Huang LL, 2005, PATTERN RECOGN LETT, V26, P1641, DOI 10.1016/j.patrec.2005.01.015
   Jiang F, 2011, IEEE IMAGE PROC
   Khatun A., 2011, INT J COMPUTUTER SCI, V11, P71
   Kim S., 2008, INT J COMPUTER SCI E, V2, P100
   Maekinen E, 2008, PATTERN RECOGN LETT, V29, P1544, DOI 10.1016/j.patrec.2008.03.016
   Mikolajczyk K, 2004, LECT NOTES COMPUT SC, V3021, P69
   Mohan GP, 2011, 18 INT C SYST SIGN I
   MOHARIR PS, 1992, PATTERN RECOGNITION
   Mulcahy C., 1997, SPELMAN SCI MATH J, V1, P22
   Owusu E, 2014, J EXP THEOR ARTIF IN, V26, P477, DOI 10.1080/0952813X.2014.886300
   Owusu E, 2014, APPL INTELL, V40, P536, DOI 10.1007/s10489-013-0478-9
   Owusu E, 2014, EXPERT SYST APPL, V41, P3383, DOI 10.1016/j.eswa.2013.11.041
   Polani D., 2013, Encyclopedia of Systems Biology, P1087
   Rowley HA, 1998, IEEE T PATTERN ANAL, V20, P23, DOI 10.1109/34.655647
   Rucklidge WJ, 1997, INT J COMPUT VISION, V24, P251, DOI 10.1023/A:1007975324482
   Sarode N., 2010, Int. J. Comput. Sci. Eng, V2, P1552
   Satiyan M, 2010, IEEE 2010 INT C INT
   Schneiderman H, 2000, IEEE P COMP VIS PATT
   Shenoy A, 2007, P UK WORKSH COMP INT
   Viola P, 2004, INT J COMPUT VISION, V57, P137, DOI 10.1023/B:VISI.0000013087.49260.fb
   Yang M-H, 2000, NIPS 99 P 12 INT C N
   Zalmanzon L.A., 1989, Fourier, Walsh, and Haar Transforms and Their Applications in Control, Communication, and Other Fields
NR 36
TC 11
Z9 12
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2019
VL 49
IS 1
BP 120
EP 129
DI 10.1002/spe.2646
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC7ZF
UT WOS:000452020000005
OA Bronze
DA 2024-07-18
ER

PT J
AU Arroba, P
   Risco-Martín, JL
   Moya, JM
   Ayala, JL
AF Arroba, Patricia
   Risco-Martin, Jose L.
   Moya, Jose M.
   Ayala, Jose L.
TI Heuristics and metaheuristics for dynamic management of computing and
   cooling energy in cloud data centers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; energy efficiency; metaheuristics; thermal management
ID VIRTUAL MACHINE PLACEMENT; OPTIMIZATION; TIME
AB Data centers handle impressive high figures in terms of energy consumption, and the growing popularity of cloud applications is intensifying their computational demand. Moreover, the cooling needed to keep the servers within reliable thermal operating conditions also has an impact on the thermal distribution of the data room, thus affecting to servers' power leakage. Optimizing the energy consumption of these infrastructures is a major challenge to place data centers on a more scalable scenario. Thus, understanding the relationship between power, temperature, consolidation, and performance is crucial to enable an energy-efficient management at the data center level. In this research, we propose novel power and thermal-aware strategies and models to provide joint cooling and computing optimizations from a local perspective based on the global energy consumption of metaheuristic-based optimizations. Our results show that the combined awareness from both metaheuristic and best fit decreasing algorithms allow us to describe the global energy into faster and lighter optimization strategies that may be used during runtime. This approach allows us to improve the energy efficiency of the data center, considering both computing and cooling infrastructures, in up to a 21.74% while maintaining quality of service.
C1 [Arroba, Patricia; Moya, Jose M.] Univ Politecn Madrid, LSI, ETSI Telecomunicac, Ave Complutense 30, E-28040 Madrid, Spain.
   [Arroba, Patricia; Risco-Martin, Jose L.; Moya, Jose M.; Ayala, Jose L.] Univ Politecn Madrid, Ctr Computat Simulat, Campus Montegancedo UPM, E-28660 Madrid, Spain.
   [Risco-Martin, Jose L.; Ayala, Jose L.] Univ Complutense Madrid, Fac Informat, Dept Arquitectura Comp & Automat, E-28040 Madrid, Spain.
C3 Universidad Politecnica de Madrid; Universidad Politecnica de Madrid;
   Complutense University of Madrid
RP Arroba, P (corresponding author), Univ Politecn Madrid, LSI, ETSI Telecomunicac, Ave Complutense 30, E-28040 Madrid, Spain.
EM parroba@die.upm.es
RI Moya, Jose Manuel/B-1605-2010; Martín, José Luis Risco/B-6940-2008;
   Alfaro-Saiz, Juan-Jose/H-7015-2015
OI Moya, Jose Manuel/0000-0003-4433-2296; Martín, José Luis
   Risco/0000-0002-3127-6507; Ayala, Jose L/0000-0001-7236-5330; Arroba,
   Patricia/0000-0002-0587-997X
FU EU (FEDER); Spanish Ministry of Economy and Competitiveness
   [TIN-2015-65277-R, TEC-2012-33892, AYA2015-65973-C3-3-R,
   RTC-2014-2717-3]
FX EU (FEDER); Spanish Ministry of Economy and Competitiveness, Grant/Award
   Number: TIN-2015-65277-R, TEC-2012-33892, AYA2015-65973-C3-3-R, and
   RTC-2014-2717-3
CR Abbasi Z, 2010, P 19 ACM INT S HIGH
   Alboaneen DA, 2016, 2016 15 INT S PAR DI
   [Anonymous], 2007, DAT CTR FAC ENG C WA
   [Anonymous], 2014, INT J COMPUT SCI INF
   [Anonymous], 2011, TECHNICAL REPORT
   [Anonymous], 2013, 2013 STUD DAT CTR OU
   [Anonymous], 2009, UCBEECS2009109
   Arroba P, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4067
   Arroba P, 2014, ENRGY PROCED, V62, P401, DOI 10.1016/j.egypro.2014.12.402
   Ayoub R, 2012, 2012 IEEE 18 INT S H
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chan CS, 2012, P 2012 ACM IEEE INT
   Chowdhury MR, 2015, J CLOUD COMPUT-ADV S, V4, DOI 10.1186/s13677-015-0045-5
   Donoghue A, 2013, EU DREAMS RENEWABLE
   Engbers N, 2014, GREEN DATA NET
   Hamilton J., 2009, P 4 BIENN C INN DAT
   Heilig L, 2017, J NETW COMPUT APPL, V95, P79, DOI 10.1016/j.jnca.2017.07.010
   Heilig L, 2016, COMPUT IND ENG, V95, P16, DOI 10.1016/j.cie.2016.02.015
   Katz RH, 2009, IEEE SPECTRUM, V46, P40, DOI 10.1109/MSPEC.2009.4768855
   Khelghatdoust M., 2016, 2016 IEEE INT C CLUS
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Lewis Adam, 2008, HOTPOWER
   Li S, 2011, 2011 INT GREEN COMP
   Li X, 2018, IEEE T PARALL DISTR, V29, P1317, DOI 10.1109/TPDS.2017.2688445
   Markoff J, 2002, INTELS HUGE BET TURN
   Melhem SB, 2018, IEEE ACCESS, V6, P7190, DOI 10.1109/ACCESS.2017.2785280
   Mitra S, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.70
   Moore J, 2005, P ANN C US ANN TECHN
   Mosa A, 2016, J CLOUD COMPUT-ADV S, V5, DOI 10.1186/s13677-016-0067-7
   Narendra SG, 2010, LEAKAGE NANOMETER CM
   Nguyen QH, 2017, LECT NOTES COMPUT SC, V10140, P124, DOI 10.1007/978-3-662-54173-9_6
   Nguyen QH, 2015, LECT NOTES COMPUT SC, V9446, P198, DOI 10.1007/978-3-319-26135-5_15
   Niles S, 2010, CISC VIS NETW IND GL
   Pires F.L., 2015, 2015 15 IEEE ACM INT
   Primas B, 2017, 2017 IEEE INT C CLOU
   Rabaey J, 2009, INTEGR CIRCUIT SYST, P1, DOI 10.1007/978-0-387-71713-5
   Shen S, 2015, 2015 15 IEEE ACM INT
   Shrivastava A., 2017, INT J ENG SCI COMPUT, V7, P4076
   Solanki N, 2016, INT J ENG TECH RES, V5, P305
   Sun DW, 2015, INFORM SCIENCES, V319, P92, DOI 10.1016/j.ins.2015.03.027
   Usmani Z., 2015, INT C INF SEC PRIV I, V78, P491
   Wu G, 2012, P 19 INT C NEUR INF
   Xu J, 2010, 2010 IEEE ACM INT C
   Ye X, 2017, IEEE ACCESS, V5, P16006, DOI 10.1109/ACCESS.2017.2733723
NR 45
TC 11
Z9 12
U1 2
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2018
VL 48
IS 10
SI SI
BP 1775
EP 1804
DI 10.1002/spe.2603
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GS4EA
UT WOS:000443587100004
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Faragardi, HR
   Vahabi, M
   Fotouhi, H
   Nolte, T
   Fahringer, T
AF Faragardi, Hamid Reza
   Vahabi, Maryam
   Fotouhi, Hossein
   Nolte, Thomas
   Fahringer, Thomas
TI An efficient placement of sinks and SDN controller nodes for optimizing
   the design cost of industrial IoT systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE industrial IoT; node placement; parallel ant colony optimization;
   software-defined networking; wireless sensor networks
ID WIRELESS SENSOR NETWORKS; TASK ALLOCATION; MAXIMIZING RELIABILITY;
   TOPOLOGY CONTROL; DEPLOYMENT; SOFTWARE; COVERAGE
AB Recently, a growing trend has emerged toward using Internet of Things (IoT) in the context of industrial systems, which is referred to as industrial IoT. To deal with the time-critical requirements of industrial applications, it is necessary to consider reliability and timeliness during the design of an industrial IoT system. Through the separation of the control plane and the data plane, software-defined networking provides control units (controllers) coexisting with sink nodes, efficiently coping with network dynamics during run-time. It is of paramount importance to select a proper number of these devices (i.e., software-defined networking controllers and sink nodes) and locate them wisely in a network to reduce deployment cost. In this paper, we optimize the type and location of sinks and controllers in the network, subject to reliability and timeliness as the prominent performance requirements in time-critical IoT systems through ensuring that each sensor node is covered by a certain number of sinks and controllers. We propose PACSA-MSCP, an algorithm hybridizing a parallel version of the max-min ant system with simulated annealing for multiple-sink/controller placement. We evaluate the proposed algorithm through extensive experiments. The performance is compared against several well-known methods, and it is shown that our approach outperforms those methods by lowering the total deployment cost by up to 19%. Moreover, the deviation from the optimal solution achieved by CPLEX is shown to be less than 2.7%.
C1 [Faragardi, Hamid Reza; Fahringer, Thomas] Univ Innsbruck, Inst Comp Sci, A-6020 Innsbruck, Austria.
   [Vahabi, Maryam; Fotouhi, Hossein; Nolte, Thomas] Malardalen Univ, POB 883, SE-72123 Vasteras, Sweden.
C3 University of Innsbruck; Malardalen University
RP Faragardi, HR (corresponding author), Univ Innsbruck, Inst Comp Sci, A-6020 Innsbruck, Austria.
EM faragardi@dps.uibk.ac.at
RI Faragardi, Hamid Reza/AAL-4056-2020; Fotouhi, Hossein/AAK-6454-2020
OI Faragardi, Hamid Reza/0000-0002-1384-5323; Fotouhi,
   Hossein/0000-0001-5590-0784; Fahringer, Thomas/0000-0003-4293-1228
FU University of Innsbruck; Research Environment for Advancing Low Latency
   Internet (READY); Future Factories in the Cloud (FiC)
FX University of Innsbruck; Research Environment for Advancing Low Latency
   Internet (READY); Future Factories in the Cloud (FiC)
CR Altinel IK, 2008, COMPUT NETW, V52, P2419, DOI 10.1016/j.comnet.2008.05.002
   [Anonymous], NOW AVAILABLE NEW C4
   [Anonymous], THESIS
   [Anonymous], P IEEE INT C COMM IC
   [Anonymous], 14 GI ITG C MEAS MOD
   [Anonymous], PAPER PRESENTED AT 1
   [Anonymous], 2010, HDB METAHEURISTICS
   [Anonymous], P 2 INT C COMP COMM
   [Anonymous], NETW OP MAN S NOMS K
   [Anonymous], P 1 WORKSH ART INT T
   [Anonymous], 2016, 2016 IEEE 40 ANN COM
   [Anonymous], SMART MAT STRUCT
   [Anonymous], P 19 IEEE INT C HIGH
   [Anonymous], P IEEE INT C EMB SOF
   [Anonymous], 2015, SOFTW DEF NETW NEW N
   [Anonymous], FED C COMP SCI INF S
   [Anonymous], INT J ADV INTELL SYS
   [Anonymous], CPLEX Optimizer
   [Anonymous], 2013, P 9 IEEE INT C NETW
   [Anonymous], P INT S REAL TIM EMB
   [Anonymous], P 1 WORKSH HOT TOP S
   Baig MM, 2013, J MED SYST, V37, DOI 10.1007/s10916-012-9898-z
   Benamrane Fouad, 2016, International Journal of High Performance Computing and Networking, V9, P291
   Bhuiyan MZA, 2015, IEEE T COMPUT, V64, P382, DOI 10.1109/TC.2013.195
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Chakrabarty K, 2002, IEEE T COMPUT, V51, P1448, DOI 10.1109/TC.2002.1146711
   Chang CY, 2008, COMPUT NETW, V52, P2189, DOI 10.1016/j.comnet.2008.02.028
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Deif DS, 2014, IEEE COMMUN SURV TUT, V16, P834, DOI 10.1109/SURV.2013.091213.00018
   Duan HC, 2017, FUTURE GENER COMP SY, V74, P142, DOI 10.1016/j.future.2016.02.016
   Efrat A, 2005, 2ND INTERNATIONAL CONFERENCE ON BROADBAND NETWORKS (BROADNETS 2005), P767, DOI 10.1109/ICBN.2005.1589677
   Faragardi HR, 2018, J SYST SOFTWARE, V139, P64, DOI 10.1016/j.jss.2018.01.040
   Hung MCC, 2016, WIREL COMMUN MOB COM, V16, P209, DOI 10.1002/wcm.2509
   Jan MA, 2018, FUTURE GENER COMP SY, V80, P613, DOI 10.1016/j.future.2016.05.034
   Kang QM, 2010, J SYST SOFTWARE, V83, P2165, DOI 10.1016/j.jss.2010.06.024
   Kim D, 2011, IEEE ACM T NETWORK, V19, P1344, DOI 10.1109/TNET.2011.2109394
   Lee KH, 2011, SIGMOD REC, V40, P11, DOI 10.1145/2094114.2094118
   Linhares A, 2010, APPL INTELL, V32, P279, DOI 10.1007/s10489-008-0145
   Liu XX, 2015, IEEE T CYBERNETICS, V45, P2364, DOI 10.1109/TCYB.2015.2443062
   Luo T, 2012, IEEE COMMUN LETT, V16, P1896, DOI 10.1109/LCOMM.2012.092812.121712
   Nunes BAA, 2014, IEEE COMMUN SURV TUT, V16, P1617, DOI 10.1109/SURV.2014.012214.00180
   Pendharkar PC, 2015, J COMPUT SCI-NETH, V7, P37, DOI 10.1016/j.jocs.2015.01.001
   Safa H, 2012, IEEE ICC
   Safa H, 2014, J NETW COMPUT APPL, V39, P70, DOI 10.1016/j.jnca.2013.04.009
   Simopoulos DN, 2006, IEEE T POWER SYST, V21, P68, DOI 10.1109/TPWRS.2005.860922
   Sitanayah L, 2015, J HEURISTICS, V21, P197, DOI 10.1007/s10732-014-9256-z
   Stützle T, 2000, FUTURE GENER COMP SY, V16, P889, DOI 10.1016/S0167-739X(00)00043-1
   Talbi E.-G., 2009, METAHEURISTICS DESIG, V74
   Tang J, 2006, COMPUT COMMUN, V29, P490, DOI 10.1016/j.comcom.2004.12.032
   Vincze  Z., 2007, IEEE INT C PERV SERV
   Wang B, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978811
   Wang J, 2006, J COMB OPTIM, V11, P291, DOI 10.1007/s10878-006-7909-z
   Xu HP, 2015, SENSORS-BASEL, V15, P11277, DOI 10.3390/s150511277
   Xu XC, 2007, IEEE T COMPUT, V56, P1681, DOI 10.1109/TC.2007.1063
   Yin PY, 2007, J SYST SOFTWARE, V80, P724, DOI 10.1016/j.jss.2006.08.005
   Younis M, 2008, AD HOC NETW, V6, P621, DOI 10.1016/j.adhoc.2007.05.003
   Zhao CX, 2017, APPL MATH MODEL, V49, P319, DOI 10.1016/j.apm.2017.05.001
NR 57
TC 17
Z9 18
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2018
VL 48
IS 10
SI SI
BP 1893
EP 1919
DI 10.1002/spe.2593
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GS4EA
UT WOS:000443587100009
DA 2024-07-18
ER

PT J
AU Mendes, J
   Laranjeiro, N
   Vieira, M
AF Mendes, Joaquim
   Laranjeiro, Nuno
   Vieira, Marco
TI Toward characterizing HTML defects on the Web
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE HTML; HTML defects; HTML validation; standards compliance; web
AB HTML is being massively used as an interface to provide services to users. Web developers are producing and changing sites at a high pace while trying to support the latest HTML standards. In this context, it is common to find websites that do not comply with the standards and fail to be correctly processed by browsers. Considering this dynamic environment and the increasingly large diversity of browsers with frequent updates, the appearance of problems in web pages is a common, sometimes severe, and hard-to-track problem. In this short communication, we describe the initial design of an approach that will be used to obtain information regarding the characteristics of HTML documents on the Web and extract indicators of representative errors made by their developers. Preliminary results show nearly 90% of the pages analyzed having at least one type of error and the prevalence of a small number of error types.
C1 [Mendes, Joaquim; Laranjeiro, Nuno; Vieira, Marco] Univ Coimbra, Dept Informat Engn, Ctr Informat & Syst, P-3030790 Coimbra, Portugal.
C3 Universidade de Coimbra
RP Laranjeiro, N (corresponding author), Univ Coimbra, Dept Informat Engn, Ctr Informat & Syst, P-3030790 Coimbra, Portugal.
EM cnl@dei.uc.pt
RI Vieira, Marco/L-4087-2014
OI Vieira, Marco/0000-0001-5103-8541; Laranjeiro, Nuno/0000-0003-0011-9901
FU EUBra-BIGSEA; European Commission [690116]; Project MobiWise [P2020
   SAICTPAC/0011/2015]
FX EUBra-BIGSEA; European Commission under the Cooperation Programme,
   Horizon 2020, Grant/Award Number: 690116; Project MobiWise, Grant/Award
   Number: P2020 SAICTPAC/0011/2015
CR Apache, 2017, AP NUTCH
   Beatty P, 2008, IEEE INTERNET COMPUT, V12, P76, DOI 10.1109/MIC.2008.37
   Butkiewicz M., 2011, P 2011 ACM SIGCOMM C
   Chen S, 2005, 2005 INT C INT COMP
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   Ganzeli HdS, 2012, P 18 BRAZ S MULT WEB
   Ofuonye E, 2010, ONLINE INFORM REV, V34, P160, DOI 10.1108/14684521011024182
   Parnas D, 2001, THESIS
   Pinterits Andreas., 2006, International Journal of Technology, Policy and Management, V6, P103
   Quinn L, 2007, WDG HTML VALIDATOR
   Sanders Sean, 2015, Web Information Systems Engineering - WISE 2015. 16th International Conference. Proceedings: LNCS 9419, P1, DOI 10.1007/978-3-319-26187-4_1
   Wang XS, 2016, 13 USENIX S NETW SYS
   Wilson B, 2008, MAMA METADATA ANAL M
   World Wide Web Consortium, 2017, W3C MARK VAL SERV
   World Wide Web Consortium, 2014, HTML5
NR 15
TC 0
Z9 0
U1 1
U2 46
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 750
EP 757
DI 10.1002/spe.2545
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300017
DA 2024-07-18
ER

PT J
AU Kanda, S
   Fujita, Y
   Morita, K
   Fuketa, M
AF Kanda, Shunsuke
   Fujita, Yuma
   Morita, Kazuhiro
   Fuketa, Masao
TI Practical rearrangement methods for dynamic double-array dictionaries
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data structure; double-array trie; dynamic dictionary; string processing
ID COMPRESSION; TRIES
AB Double-array structures have been widely used to implement dictionaries with string keys. Although the space efficiency of dynamic double-array dictionaries tends to decrease with key updates, we can still maintain high efficiency using existing methods. However, these methods have practical problems of time and functionality. This paper presents several efficient rearrangement methods to solve these problems. Through experiments using real-world datasets, we demonstrate that the proposed rearrangement methods are much more practical than existing methods.
C1 [Kanda, Shunsuke; Fujita, Yuma; Morita, Kazuhiro; Fuketa, Masao] Tokushima Univ, Grad Sch Adv Technol & Sci, Minamijosanjima 2-1, Tokushima 7708506, Japan.
C3 Tokushima University
RP Kanda, S (corresponding author), Tokushima Univ, Grad Sch Adv Technol & Sci, Minamijosanjima 2-1, Tokushima 7708506, Japan.
EM shnsk.knd@gmail.com
OI Kanda, Shunsuke/0000-0002-5462-122X
FU Grants-in-Aid for Scientific Research [17J07555] Funding Source: KAKEN
CR [Anonymous], 1998, The art of computer programming: Sorting and searching
   AOE JI, 1992, SOFTWARE PRACT EXPER, V22, P695, DOI 10.1002/spe.4380220902
   AOE JI, 1989, IEEE T SOFTWARE ENG, V15, P1066, DOI 10.1109/32.31365
   Arroyuelo D, 2016, ALGORITHMICA, V74, P742, DOI 10.1007/s00453-015-9969-x
   Arz J, 2014, P DAT COMPR C DCC SN
   Askitis N, 2010, VLDB J, V19, P633, DOI 10.1007/s00778-010-0183-9
   Baeza-Yates R A, 2011, MODERN INFORM RETRIE
   Baskins D, 2002, JUDY 4 SHOP MANUAL
   Bast H, 2008, INFORM RETRIEVAL, V11, P269, DOI 10.1007/s10791-008-9048-x
   Bentley JL, 1997, P 8 ACM SIAM S DISCR, V97
   Boldi P, 2004, SOFTWARE PRACT EXPER, V34, P711, DOI 10.1002/spe.587
   Brazil Inc Groonga, 2017, OP SOURC FULLT SEARC
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   DARRAGH JJ, 1993, SOFTWARE PRACT EXPER, V23, P277, DOI 10.1002/spe.4380230305
   Dorji TC, 2010, INFORM PROCESS MANAG, V46, P502, DOI 10.1016/j.ipm.2009.08.004
   DUNDAS JA, 1991, SOFTWARE PRACT EXPER, V21, P1027, DOI 10.1002/spe.4380211004
   Ferragina P, 2010, ACM T ALGORITHMS, V7, DOI 10.1145/1868237.1868248
   FREDKIN E, 1960, COMMUN ACM, V3, P490, DOI 10.1145/367390.367400
   Fuketa M, 2014, INFORM PROCESS MANAG, V50, P796, DOI 10.1016/j.ipm.2014.04.004
   Google Inc, 2005, SPARS
   Grossi R, 2014, ACM J EXP ALGORITHM, V19
   Heinz S, 2004, ACM T INFORM SYST, V20, P192
   Jansson J, 2015, ALGORITHMICA, V71, P969, DOI 10.1007/s00453-013-9836-6
   Jones DC, 2011, HAT TRIE
   Kanda S, 2016, KNOWL INF SYST
   Kanda S, 2016, KNOWL INF SYST, V48, P55, DOI 10.1007/s10115-015-0873-0
   Kudo T, 2011, P 1 WORKSH ADV TEXT
   Kudo T, 2008, DARTS DOUBLE ARRAY T
   Leis V, 2013, P IEEE 29 INT C DAT
   Liu H, 2011, P 5 INT JOINT C NAT
   Martínez-Prieto MA, 2016, INFORM SYST, V56, P73, DOI 10.1016/j.is.2015.08.008
   Mavlyutov R, 2015, EUR SEM WEB C
   Morita K, 2001, SOFTWARE PRACT EXPER, V31, P43, DOI 10.1002/1097-024X(200101)31:1<43::AID-SPE356>3.0.CO;2-R
   Morita K, 2001, P IEEE INT C SYST MA, V1
   Murayama T, 2016, P 78 NAT CONV INF PR
   Norimatsu JY, 2016, ACM T ASIAN LOW-RESO, V15, DOI 10.1145/2873068
   Oono M, 2003, SOFTWARE PRACT EXPER, V33, P1229, DOI 10.1002/spe.545
   Poyias A, 2015, P 22 INT S STRING PR
   Raman R, 2003, INT C AUT LANG PROGR
   Seshake S, 2016, P 15 FOR INF TECHN F
   Wylot M, 2014, P 23 INT C WORLD WID
   Yasuhara M, 2013, P C EMP METH NAT LAN
   Yata S, 2009, P 71 NAT CONV INF PR
   Yata S, 2011, DARTS CLONE CLONE DA
   Yata S, 2007, SOFTWARE PRACT EXPER, V37, P523, DOI 10.1002/spe.778
   Yata S, 2007, INFORM PROCESS MANAG, V43, P237, DOI 10.1016/j.ipm.2006.04.004
   Yoshinaga N, 2014, P 24 INT C COMP LING
   Yoshinaga N, 2014, CEDAR C IMPLEMENTATI
NR 48
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2018
VL 48
IS 1
BP 65
EP 83
DI 10.1002/spe.2516
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FP4WK
UT WOS:000417617500004
DA 2024-07-18
ER

PT J
AU Caporuscio, M
   Mirandola, R
   Trubiani, C
AF Caporuscio, Mauro
   Mirandola, Raffaela
   Trubiani, Catia
TI Building design-time and run-time knowledge for QoS-based component
   assembly
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design-time QoS analysis; run-time QoS analysis; QoS-based feedback
ID HEALTH-CARE; PERFORMANCE ANTIPATTERNS; ARCHITECTURE; ADAPTATION
AB Modern software systems are required to dynamically adapt to changing workloads, scenarios, and objectives and to achieve a certain Quality of Service (QoS). Guaranteeing QoS requirements is not trivial, as run-time uncertainty might invalidate the design-time rationale, where software components have been selected by means of off-line analysis. In this work, we propose a QoS-based feedback approach that makes a combined use of design-time predictions and run-time measurements to manage QoS data over time and support software architects while selecting software components that best fit QoS requirements. We illustrate the feasibility and efficacy of the approach on a case study, where the quantitative evaluation shows how the analysis effectively identifies the sources of QoS violations and indicates possible solutions to achieve QoS requirements.
C1 [Caporuscio, Mauro] Linnaeus Univ, Vaxjo, Sweden.
   [Mirandola, Raffaela] Politecn Milan, Milan, Italy.
   [Trubiani, Catia] Gran Sasso Sci Inst, Laquila, Italy.
C3 Linnaeus University; Polytechnic University of Milan; Gran Sasso Science
   Institute (GSSI)
RP Trubiani, C (corresponding author), Gran Sasso Sci Inst, Laquila, Italy.
EM catia.trubiani@gssi.it
RI Caporuscio, Mauro/AAB-1320-2021; Trubiani, Catia/AAU-4040-2021
OI Caporuscio, Mauro/0000-0001-6981-0966; Trubiani,
   Catia/0000-0002-7675-6942; MIRANDOLA, RAFFAELA/0000-0003-3154-2438
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Andreu-Perez J, 2015, IEEE T BIO-MED ENG, V62, P2750, DOI 10.1109/TBME.2015.2422751
   [Anonymous], 2004, IBM REDBOOKS
   [Anonymous], UN MOD LANG UML
   Ardagna D, 2008, LECT NOTES COMPUT SC, V5281, P1, DOI 10.1007/978-3-540-87879-7_1
   Becker M., 2012, PROC 8 INT ACM SIGSO, P117
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Capilla R, 2011, COMPUTER, V44, P93, DOI 10.1109/MC.2011.382
   Caporuscio M, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P37, DOI 10.1145/2737182.2737192
   Caporuscio M, 2015, J SYST SOFTWARE, V106, P9, DOI 10.1016/j.jss.2015.03.102
   Cardellini V, 2012, IEEE T SOFTWARE ENG, V38, P1138, DOI 10.1109/TSE.2011.68
   Casale Giuliano, 2011, P INT C PERF ENG, P449
   Catarinucci L, 2015, IEEE INTERNET THINGS, V2, P515, DOI 10.1109/JIOT.2015.2417684
   Cortellessa V, 2002, SCI COMPUT PROGRAM, V44, P101, DOI 10.1016/S0167-6423(02)00033-3
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Deen MJ, 2015, PERS UBIQUIT COMPUT, V19, P573, DOI 10.1007/s00779-015-0856-x
   Demirkan H, 2013, IT PROF, V15, P38, DOI 10.1109/MITP.2013.35
   Doran D., 2011, P INT C SOFTW ENG KN, P629
   Drago ML, 2011, LECT NOTES COMPUT SC, V6981, P2, DOI 10.1007/978-3-642-24485-8_2
   Epifani I, 2009, PROC INT CONF SOFTW, P111, DOI 10.1109/ICSE.2009.5070513
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Insfran E, 2010, LECT NOTES COMPUT SC, V6395, P288
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Lazowska E. D., 1984, COMPUTER SYSTEM ANAL
   Menascé DA, 2011, IEEE SOFTWARE, V28, P78, DOI 10.1109/MS.2011.22
   Metzger A., 2010, P 2010 ICSE WORKSHOP, P20
   Mirandola R, 2012, IEEE INT C ENG COMP, P147, DOI 10.1109/ICECCS.2012.3
   Momm C, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES, P343, DOI 10.1109/ICIW.2009.57
   Park K, 2015, INFORM SCIENCES, V314, P240, DOI 10.1016/j.ins.2014.10.036
   Parsons T, 2008, J OBJECT TECHNOL, V7, P55, DOI 10.5381/jot.2008.7.3.a1
   Perez-Palacin Diego, 2014, 5 ACMSPEC INT C PERF, V14, P3
   Petriu D.C., 2015, WOSP 15, P41, DOI [10.1145/2693561.2693566, DOI 10.1145/2693561.2693566]
   Ramirez AJ, 2011, CLUSTER COMPUT, V14, P229, DOI 10.1007/s10586-010-0122-y
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Strunk A., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P67, DOI 10.1109/ECOWS.2010.16
   Trubiani C, 2014, J SYST SOFTWARE, V95, P141, DOI 10.1016/j.jss.2014.03.081
   Weyns D, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P88, DOI 10.1109/SEAMS.2015.27
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Xu J, 2010, PERFORM EVALUATION, V67, P585, DOI 10.1016/j.peva.2009.07.004
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 41
TC 3
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2017
VL 47
IS 12
BP 1905
EP 1922
DI 10.1002/spe.2502
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM0FF
UT WOS:000414636600003
DA 2024-07-18
ER

PT J
AU Mohammed, B
   Kiran, M
   Maiyama, KM
   Kamala, MM
   Awan, IU
AF Mohammed, Bashir
   Kiran, Mariam
   Maiyama, Kabiru M.
   Kamala, Mumtaz M.
   Awan, Irfan-Ullah
TI Failover strategy for fault tolerance in cloud computing environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; fault tolerance; checkpointing; virtualization; load
   balancing; virtual machine
AB Cloud fault tolerance is an important issue in cloud computing platforms and applications. In the event of an unexpected system failure or malfunction, a robust fault-tolerant design may allow the cloud to continue functioning correctly possibly at a reduced level instead of failing completely. To ensure high availability of critical cloud services, the application execution, and hardware performance, various fault-tolerant techniques exist for building self-autonomous cloud systems. In comparison with current approaches, this paper proposes a more robust and reliable architecture using optimal checkpointing strategy to ensure high system availability and reduced system task service finish time. Using pass rates and virtualized mechanisms, the proposed smart failover strategy (SFS) scheme uses components such as cloud fault manager, cloud controller, cloud load balancer, and a selection mechanism, providing fault tolerance via redundancy, optimized selection, and checkpointing. In our approach, the cloud fault manager repairs faults generated before the task time deadline is reached, blocking unrecoverable faulty nodes as well as their virtual nodes. This scheme is also able to remove temporary software faults from recoverable faulty nodes, thereby making them available for future request. We argue that the proposed SFS algorithm makes the system highly fault tolerant by considering forward and backward recovery using diverse software tools. Compared with existing approaches, preliminary experiment of the SFS algorithm indicates an increase in pass rates and a consequent decrease in failure rates, showing an overall good performance in task allocations. We present these results using experimental validation tools with comparison with other techniques, laying a foundation for a fully fault-tolerant infrastructure as a service cloud environment. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Mohammed, Bashir; Kiran, Mariam; Maiyama, Kabiru M.; Kamala, Mumtaz M.; Awan, Irfan-Ullah] Univ Bradford, Sch Elect Engn & Comp Sci, Bradford BD7 1DP, W Yorkshire, England.
C3 University of Bradford
RP Mohammed, B (corresponding author), Univ Bradford, Sch Elect Engn & Comp Sci, Bradford BD7 1DP, W Yorkshire, England.
EM b.mohammed1@bradford.ac.uk
RI Mohammed, Bashir/AAC-8387-2021
OI Mohammed, Bashir/0000-0002-0796-2195; Maiyama,
   Kabiru/0000-0002-7682-516X
FU PTDF under OSS scheme [PTDF/E/OSS/PHD/MB/651/14]
FX One of the authors Bashir Mohammed is a Petroleum Technology Development
   Fund (PTDF) scholar. We would like to express our sincere gratitude to
   PTDF for its funding support under the OSS scheme with grant number
   (PTDF/E/OSS/PHD/MB/651/14).
CR Agbaria A, 2002, SOFTWARE PRACT EXPER, V32, P1175, DOI 10.1002/spe.478
   Alshareef HN, 2016, CONCURR COMP-PRACT E, V22, P685
   Amoon M, 2013, OPEN COMPUT SCI, V3, P17, DOI 10.2478/s13537-013-0103-3
   [Anonymous], 2015, CONCURR COMP-PRACT E, V27, pi
   [Anonymous], P DEM 38 POST TRACK
   Bala A., 2012, Int J Comput Sci Issues, V9, P288
   Bertolli C, 2011, CONCURR COMP-PRACT E, V22, P685
   Bilal K, 2015, ENCY CLOUD COMPUTING, V2015, P291
   Bin E, 2011, INT CON DISTR COMP S, P700, DOI 10.1109/ICDCS.2011.72
   BinHong DW, 2015, CONCURR COMP-PRACT E, V22, P685
   Buyya Rajkumar, 2009, 2009 International Conference on High Performance Computing & Simulation (HPCS), P1, DOI 10.1109/HPCSIM.2009.5192685
   Chen G, 2015, CONCURR COMP-PRACT E, V22, P685
   Chen P, 2015, CONCURR COMP-PRACT E, V22, P685
   Cheraghlou MN, 2016, J NETW COMPUT APPL, V61, P81, DOI 10.1016/j.jnca.2015.10.004
   Chtepen M, 2009, IEEE T PARALL DISTR, V20, P180, DOI 10.1109/TPDS.2008.93
   Das P, 2013, 2013 IEEE CONFERENCE ON INFORMATION AND COMMUNICATION TECHNOLOGIES (ICT 2013), P473
   Egwutuoha I. P., 2012, Proceedings of the 2012 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2012), P709, DOI 10.1109/CCGrid.2012.80
   Egwutuoha IP, 2012, SECOND INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING / SECOND INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING AND ITS APPLICATIONS (CGC/SCA 2012), P268, DOI 10.1109/CGC.2012.22
   Elliott J, 2012, INT CON DISTR COMP S, P615, DOI 10.1109/ICDCS.2012.56
   Fu M, 2016, SOFTWARE PRACT EXPER, V39, P701
   Gallager R., 1996, DISCRETE STOCHASTIC, P92
   Ganesh A, 2014, IEEE INT ADV COMPUT, P844, DOI 10.1109/IAdCC.2014.6779432
   Greenberg A, 2009, ACM SIGCOMM COMP COM, V39, P68, DOI 10.1145/1496091.1496103
   Israel A, 2013, 2013 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2013), P9
   ITProPortal, 2012, ITPROPORTAL
   Jararweh Y., 2012, TEACHCLOUD CLOUD COM, P1
   Jhawar R, 2012, 2012 IEEE FIRST AESS EUROPEAN CONFERENCE ON SATELLITE TELECOMMUNICATIONS (ESTEL)
   Jung GY, 2010, I C DEPEND SYS NETWO, P497, DOI 10.1109/DSN.2010.5544273
   Kaur J., 2014, INT J COMPUTER SCI I, V5, P6278
   Kim H. K. H., 2003, ICME 03 P, V2, P6
   Kong XZ, 2009, 2009 IEEE INTERNATIONAL SYMPOSIUM ON PARALLEL AND DISTRIBUTED PROCESSING WITH APPLICATIONS, PROCEEDINGS, P282, DOI 10.1109/ISPA.2009.24
   Lawler G. F., 2006, INTRO STOCHASTIC PRO, P248
   Liu Y, 2008, 2008 IEEE INTERNATIONAL CONFERENCE ON MULTIMEDIA AND EXPO, VOLS 1-4, P17, DOI 10.1109/ICME.2008.4607360
   Malik S., 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P280, DOI 10.1109/SERVICES.2011.108
   Maloney A, 2009, CONCURR COMP-PRACT E, V22, P685
   Meshram A. D., 2013, FAULT TOLERANCE MODE
   Mohammed B, 2015, 2015 3RD INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD) AND INTERNATIONAL CONFERENCE ON OPEN AND BIG (OBD), P195, DOI 10.1109/FiCloud.2015.106
   Naik K. J., 2013, 2013 15 INT C ADV CO, P1, DOI DOI 10.1109/ICACT.2013.6710529
   Nassar R., 2009, HIGH PERFORMANCE COM, V4, P386
   Nita M., FIM SIM FAULT INJECT
   Nogueira R., 2014 IEEE 20 PAC RIM
   Okorafor E., 2011, 2011 IEEE International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum, P1525, DOI 10.1109/IPDPS.2011.306
   Pantic Z., 2012, Guidelines for building a private cloud infrastructure
   Parveen K., 2014, NOVEL HIGH ADAPTIVE, P138
   Paul HS, 2003, CONCURR COMP-PRACT E, V15, P1363, DOI 10.1002/cpe.743
   Pei X, 2015, CONCURR COMP-PRACT E, V22, P685
   Pradesh M., 2014, SURVEY VARIOUS FAULT, V4, P25
   Qiang W, 2015, INT J APPL ENG RES, V9, P5968
   Salehi MA, 2013, CONCURR COMP-PRACT E, V22, P685
   Sathya SS, 2010, COMPUT SCI REV, V4, P101, DOI 10.1016/j.cosrev.2010.02.001
   Sefraoui O, 2014, INT CONF MULTIMED, P1164, DOI 10.1109/ICMCS.2014.6911300
   Sen A, 2014, IEEE WORLD CONGR SER, P58, DOI 10.1109/SERVICES.2014.20
   Shen SQ, 2015, IEEE ACM INT SYMP, P495, DOI 10.1109/CCGrid.2015.58
   Sheng D, 2015, SOFTWARE PRACT EXPER, V39, P701
   Singh D., 2012, Proceedings of the 2012 International Conference on Communication Systems and Network Technologies (CSNT 2012), P698, DOI 10.1109/CSNT.2012.155
   Singh K, 2016, CONCURR COMP-PRACT E, V22, P685
   Sun DW, 2013, J SUPERCOMPUT, V66, P193, DOI 10.1007/s11227-013-0898-7
   Tchana A., 2012, IEEE CITS 2012 2012
   Wickremasinghe B, 2010, INT CON ADV INFO NET, P446, DOI 10.1109/AINA.2010.32
   Yadav N, FAULT TOLERANCE DCDI, P231
   Yadav S., 2013, Int. J. Eng. Sci, V3, P51
   Yanagisawa H, 2013, IEEE INFOCOM SER, P629
   Yang CT, 2013, 2013 INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED COMPUTING, APPLICATIONS AND TECHNOLOGIES (PDCAT), P71, DOI 10.1109/PDCAT.2013.18
NR 63
TC 19
Z9 19
U1 0
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2017
VL 47
IS 9
SI SI
BP 1243
EP 1274
DI 10.1002/spe.2491
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD0BH
UT WOS:000407204300005
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Malakuti, S
AF Malakuti, Somayeh
TI Modular composition of multiple applications with architectural event
   modules
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE aspect-oriented modularization; event-based modularization; crosscutting
   interfaces; system of systems; interoperability
AB A complex software system is usually developed as a system of systems (SoS's) in which multiple constituent applications are composed and coordinated to fulfill desired system-level requirements. To facilitate the interoperability of the constituent applications, they must be augmented with suitable coordination-specific interfaces, through which they can participate in coordinated interactions. To increase the reusability of the applications and to increase the comprehensibility of SoS's, suitable mechanisms are required to modularize the coordination rules and interfaces from the constituent applications. We introduce a new abstraction named as architectural event modules (AEMs), which facilitates defining constituent applications and desired coordination rules as modules of SoS's. AEMs modularly augment the constituent applications with event-based interfaces to let them participate in coordinated interactions. We introduce the EventArch language in which the concept of AEMs is implemented, and illustrate its suitability using a case study in the domain of energy optimization. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [Malakuti, Somayeh] Tech Univ Dresden, Software Technol Grp, D-01187 Dresden, Germany.
C3 Technische Universitat Dresden
RP Malakuti, S (corresponding author), Tech Univ Dresden, Software Technol Grp, D-01187 Dresden, Germany.
EM somayeh.malakuti@tu-dresden.de
CR Aksit M, 1994, P WORKSH OBJ BAS DIS
   Aldrich J, 2005, LECT NOTES COMPUT SC, V3586, P144
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Boldt J., 1995, TECHNICAL REPORT
   CHEN C, 1994, 1994 IEEE REGION 10'S NINTH ANNUAL INTERNATIONAL CONFERENCE, THEME - FRONTIERS OF COMPUTER TECHNOLOGY, VOLS 1 AND 2, P43, DOI 10.1109/TENCON.1994.369338
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Fiege L, 2002, LECT NOTES COMPUT SC, V2374, P309
   Garcia A, 2006, LECT NOTES COMPUT SC, V4344, P82
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   Gotz S., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P8, DOI 10.1109/GREENS.2012.6224264
   Hapner M., 2002, TECHNICAL REPORT
   Kellens A, 2006, LECT NOTES COMPUT SC, V4067, P501
   Kopetz H, 2015, P SOSE
   Kotov VE, 1998, 1998 WINTER SIMULATION CONFERENCE PROCEEDINGS, VOLS 1 AND 2, P1571, DOI 10.1109/WSC.1998.746031
   Luckham D., 1996, Rapide: A language and toolset for simulation of distributed systems by partial orderings of events
   MAGEE J, 1993, SOFTWARE ENG J, V8, P73, DOI 10.1049/sej.1993.0011
   Malakuti S., 2016, OVERVIEW EVENTBASED
   Malakuti S, 2015, TECHNICAL REPORT
   Malakuti S, 2014, LECT NOTES COMPUT SC, V8400, P27, DOI 10.1007/978-3-642-55099-7_2
   Papadopoulos G. A., 1998, ADV COMPUT, V46, P329, DOI [DOI 10.1016/S0065-2458(08)60208-9, 10.1016/S0065-2458(08)60208-9]
   Parallel E, 1991, LINDA LIKE SYSTEMS
   Pérez J, 2006, LECT NOTES COMPUT SC, V4063, P123
   Pessemier N, 2006, LECT NOTES COMPUT SC, V4089, P259
   Pinto M, 2011, INFORM SOFTWARE TECH, V53, P1165, DOI 10.1016/j.infsof.2011.04.003
   Rathfelder C, 2014, SOFTWARE SYSTEMS MOD, V13
   Richards M., 2009, Java message service
   Rybina K, 2015, 23RD EUROMICRO INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED, AND NETWORK-BASED PROCESSING (PDP 2015), P446, DOI 10.1109/PDP.2015.9
   Sommerville I, 1996, SOFTWARE ENG J, V11, P111, DOI 10.1049/sej.1996.0015
   Steimann F, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767752
   Sullivan K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1824760.1824762
   Woodcock J, 2012, P SOSE 12, V12
NR 31
TC 1
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2017
VL 47
IS 7
SI SI
BP 1013
EP 1025
DI 10.1002/spe.2478
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EG
UT WOS:000403114200007
DA 2024-07-18
ER

PT J
AU Santos, AL
AF Santos, Andre L.
TI Variability management of plugin-based systems using feature models
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE plugin-based systems; components; feature models; variability
   management; Equinox
AB Plugin-based systems are typically realized with resort to a component framework that offers an infrastructure for assembling plugin components, which can be composed to form system variants. Feature models have been proposed as an abstraction to manage software variability, where feature configurations describe variants of a software system. In this paper, we propose an automated approach to map the artifacts of plugin-based component frameworks to feature models. We describe a methodology for structuring the architecture of a plugin-based system, so that the variability space and variants are reflected in a feature model and its configurations. We materialized the proposed approach for the Eclipse Equinox component framework in a tool to visualize the variability of plugin-based systems in feature diagrams, which can be used to generate system variants. We carried out an experiment where we developed a small plugin-based product line on top of Equinox in the context of an advanced software development course. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Santos, Andre L.] ISTAR IUL, Inst Univ Lisboa ISCTE IUL, Ave Forcas Armadas,Edificio 2 ISCTE, P-1649026 Lisbon, Portugal.
C3 Instituto Universitario de Lisboa
RP Santos, AL (corresponding author), ISTAR, Inst Univ Lisboa ISCTE IUL, Ave Forcas Armadas,Edificio 2 ISCTE, P-1649026 Lisbon, Portugal.
EM andre.santos@iscte.pt
RI L. Santos, Andre/B-3479-2012
OI L. Santos, Andre/0000-0002-8247-7413
CR Acher M, 2014, SOFTW SYST MODEL, V13, P1367, DOI 10.1007/s10270-013-0364-2
   [Anonymous], P 33 INT C SOFTW ENG
   Atkinson C, 2000, KLUWER INT SER ENG C, V576, P289
   Capilla R., 2013, SYSTEMS SOFTWARE VAR
   Crnkovic I, 2011, IEEE T SOFTWARE ENG, V37, P593, DOI 10.1109/TSE.2010.83
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Heidenreich F, 2008, COMP P 30 INT C SOFT
   Kang K. C., 1990, Technical Report
   McAffer J., 2010, OSGi and Equinox: Creating Highly Modular Java Systems
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   Trinidad P., 2007, P INT SOFTW PROD LIN, P51
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
NR 13
TC 0
Z9 0
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2017
VL 47
IS 7
SI SI
BP 959
EP 970
DI 10.1002/spe.2428
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EG
UT WOS:000403114200003
DA 2024-07-18
ER

PT J
AU Rodriguez, A
   Mateos, C
   Zunino, A
AF Rodriguez, Ana
   Mateos, Cristian
   Zunino, Alejandro
TI Improving scientific application execution on android mobile devices via
   code refactorings
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE smartphones; android; scientific computing; computational kernels; code
   refactoring
ID JAVA; GRIDIFICATION; JGRIM; PERFORMANCE; MIDDLEWARE; LANGUAGE
AB The increasing number of mobile devices with ever-growing capabilities makes them useful for running scientific applications. However, these applications have high computational demands, whereas mobile devices have limited capabilities when compared with non-mobile devices. More importantly, mobile devices rely on batteries for their power supply. We initially measure the battery consumption of different versions of known micro-benchmarks representing common programming primitives found in scientific applications. Then, we analyze the performance of such micro-benchmarks in CPU-intensive mobile applications. We apply good programming practices and code refactorings to reduce battery consumption of scientific mobile applications. Our results show the reduction in energy usage from applying these refactorings to three scientific applications, and we consequently propose guidelines for high-performance computing applications. Our focus is on Android, the dominant mobile operating system. As a long-term contribution, our results represent one more step in the progress towards hybrid distributed infrastructures comprising fixed and mobile nodes, that is, the so-called mobile grids. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Rodriguez, Ana; Mateos, Cristian; Zunino, Alejandro] UNICEN Univ, ISISTAN Res Inst, Campus Univ,B7001BBO, Tandil, Argentina.
   [Rodriguez, Ana; Mateos, Cristian; Zunino, Alejandro] Consejo Nacl Invest Cient & Tecn, Buenos Aires, DF, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Rodriguez, A (corresponding author), UNICEN Univ, ISISTAN Res Inst, Campus Univ,B7001BBO, Tandil, Argentina.
EM ana.rodriguez@isistan.unicen.edu.ar
RI Zunino, Alejandro/W-2100-2017; Rodriguez, Ana Paula/KHX-4610-2024
OI Zunino, Alejandro/0000-0002-9537-3541; Mateos,
   Cristian/0000-0001-5761-1898
FU ANPCyT [PICT-2012-0045, PICT-2013-0464]
FX We greatly appreciate the time and the effort invested by the reviewers
   and the Editor-in-Chief in helping us improve this paper. We also thank
   the financial support of ANPCyT through grants PICT-2012-0045 and
   PICT-2013-0464.
CR Alachiotis N, 2012, J SUPERCOMPUT, V59, P830, DOI 10.1007/s11227-010-0474-3
   Amedro B., 2009, INT J COMPUT COMMUN, V3, P49
   Amedro B, 2010, INT C APPL INFORM C, P221
   [Anonymous], 2010, PROC 8 INT C MOBILE, DOI [DOI 10.1145/1814433, 10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   Azeemi NZ, 2006, SECOND INTERNATIONAL CONFERENCE ON EMERGING TECHNOLOGIES 2006, PROCEEDINGS, P251, DOI 10.1109/ICET.2006.335979
   Balan Rajesh., 2002, EW10, P87
   Balan RK, 2007, MOBISYS '07: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P272
   Barisone A, 2001, FUTURE GENER COMP SY, V18, P293, DOI 10.1016/S0167-739X(00)00097-2
   Baron R, 2006, ANGEW CHEM INT EDIT, V45, P1572, DOI 10.1002/anie.200503314
   Binder W, 2006, ELECTRON NOTES THEOR, V153, P57, DOI 10.1016/j.entcs.2005.10.032
   Bloch J., 2001, EFFECTIVE JAVA PROGR
   Bloch J., 2016, Effective Java
   CarvalhoJunior FH, 2013, PROGR LANG 17 BRAZ S, P31, DOI [10.1007/978-3-642-40922-6_3, DOI 10.1007/978-3-642-40922-6_3]
   Cheng-Min Lin, 2011, Proceedings of the 2011 2nd International Conference on Innovations in Bio-Inspired Computing and Applications (IBICA 2011), P320, DOI 10.1109/IBICA.2011.85
   Christensen AS, 2003, LECT NOTES COMPUT SC, V2694, P1
   Crasso M, 2011, EXPERT SYST APPL, V38, P1723, DOI 10.1016/j.eswa.2010.07.098
   Flinn J, 2002, INT CON DISTR COMP S, P217, DOI 10.1109/ICDCS.2002.1022259
   Flipsen B., 2012, P IEEE EL GOES GREEN, P1
   Foster I., 2003, GRID BLUEPRINT NEW C
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Ghosh P, 2010, FUTURE GENER COMP SY, V26, P1356, DOI 10.1016/j.future.2009.05.003
   Gottschalk M, 2014, SAVING ENERGY MOBILE, P437
   Gottschalk Marion., 2012, GI-Jahrestagung, V208, P441
   Goyal S, 2004, SIXTH IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P186, DOI 10.1109/MCSA.2004.2
   Guihot H., 2012, PROANDROID APPS PERF, P231, DOI DOI 10.1007/978-1-4302-4000-6
   Gurram SR, 2007, ICCIMA 2007: INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND MULTIMEDIA APPLICATIONS, VOL III, PROCEEDINGS, P58, DOI 10.1109/ICCIMA.2007.246
   Hermelin D, 2008, INFORM COMPUT, V206, P1303, DOI 10.1016/j.ic.2008.06.002
   Hofschuster W, 2004, LECT NOTES COMPUTER, V2991, P259
   Hung SH, 2015, SOFTWARE PRACT EXPER, V45, P1087, DOI 10.1002/spe.2265
   Huynh DBP, 2011, COMPUT FLUIDS, V43, P74, DOI 10.1016/j.compfluid.2010.07.007
   Kristensen Mads Daro, 2010, 2010 IEEE International Conference on Pervasive Computing and Communications (PerCom 2010), P217, DOI 10.1109/PERCOM.2010.5466972
   Kumar K, 2010, COMPUTER, V43, P51, DOI 10.1109/MC.2010.98
   Lee S, 2000, ACM JAV GRAND 2000 C, P1463
   Lee S, 2010, INTERNATIONAL CONFERENCE ON CONTROL, AUTOMATION AND SYSTEMS (ICCAS 2010), P1160
   Li CL, 2010, J PARALLEL DISTR COM, V70, P245, DOI 10.1016/j.jpdc.2009.06.003
   Mateos C, 2008, FUTURE GENER COMP SY, V24, P99, DOI 10.1016/j.future.2007.04.011
   Mateos C, 2011, COMPUT INFORM, V30, P1259
   Mateos C, 2010, FUTURE GENER COMP SY, V26, P797, DOI 10.1016/j.future.2010.02.014
   Mateos C, 2010, COMPUT LANG SYST STR, V36, P288, DOI 10.1016/j.cl.2009.12.003
   Mateos C, 2010, SOFTWARE PRACT EXPER, V40, P331, DOI 10.1002/spe.961
   Murray D.G., 2010, CASE CROWD COMPUTING, P39
   Papadimitriou S, 2011, IET SOFTW, V5, P543, DOI 10.1049/iet-sen.2010.0135
   Paradiso JA, 2005, IEEE PERVAS COMPUT, V4, P18, DOI 10.1109/MPRV.2005.9
   Park SM, 2003, LECT NOTES COMPUT SC, V2910, P499
   Perez-Castillo R, 2014, IEEE SOFTWARE, V31, P48, DOI 10.1109/MS.2014.23
   RODRIGUES A.M. G., 2012, O memorando da "Troika" e as empresas. Instinto de Direito das Empresas e do Trabalho, P61
   Rodriguez Juan Manuel, 2012, Advances in New Technologies, Interactive Interfaces and Communicability. Second International Conference, ADNTIIC 2011. Revised Selected Papers, P38, DOI 10.1007/978-3-642-34010-9_4
   Rodriguez J.M., 2010, 3 HIGH PERF COMP S 3, V54, P3341
   Rodriguez JM, 2012, COMPUT J, V94, P87
   Rodriguez JM, 2011, INT J WEB GRID SERV, V7, P1, DOI 10.1504/IJWGS.2011.038386
   Sharifi M, 2012, IEEE COMMUN SURV TUT, V14, P1232, DOI 10.1109/SURV.2011.111411.00016
   Shivle S, 2006, J PARALLEL DISTR COM, V66, P600, DOI 10.1016/j.jpdc.2005.10.005
   Sinschek J, 2009, P 3 WORKSH VIRT MACH, V6, P1
   Su YY, 2005, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES (MOBISYS 2005), P79, DOI 10.1145/1067170.1067180
   Taboada GL, 2013, SCI COMPUT PROGRAM, V78, P425, DOI 10.1016/j.scico.2011.06.002
   Thiagarajan Narendran., 2012, P 21 INT C WORLD WID, P41, DOI DOI 10.1145/2187836.2187843
   Tonini AR, 2012, EVALUATING ANDROID B
   VAIDYA PM, 1990, MATH PROGRAM, V47, P175, DOI 10.1007/BF01580859
   Van Nieuwpoort RV, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1709093.1709096
   van Nieuwpoort RV, 2005, CONCURR COMP-PRACT E, V17, P1079, DOI 10.1002/cpe.860
   Verbelen T, 2012, J SYST SOFTWARE, V85, P2629, DOI 10.1016/j.jss.2012.06.011
   Yang CY, 2012, IEEE SYM EMBED SYST, P67, DOI 10.1109/ESTIMedia.2012.6507031
   Zhang J, 2011, PROCEDIA ENVIRON SCI, V11, P163, DOI 10.1016/j.proenv.2011.12.025
   Zhang Y, 2012, ACM SIGPLAN NOTICES, V47, P233, DOI 10.1145/2398857.2384634
   Zunino A, 2010, HORIZONS COMPUTER SC, P1
NR 66
TC 9
Z9 9
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2017
VL 47
IS 5
BP 763
EP 796
DI 10.1002/spe.2419
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ER1SO
UT WOS:000398573700007
DA 2024-07-18
ER

PT J
AU Chauhan, MA
   Babar, MA
   Benatallah, B
AF Chauhan, Muhammad Aufeef
   Babar, Muhammad Ali
   Benatallah, Boualem
TI Architecting cloud-enabled systems: a systematic survey of challenges
   and solutions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; software architecture; systematic literature review
AB The literature on the challenges of and potential solutions to architecting cloud-based systems is rapidly growing but is scattered. It is important to systematically analyze and synthesize the existing research on architecting cloud-based software systems in order to build a cohesive body of knowledge of the reported challenges and solutions. We have systematically identified and reviewed 133 papers that report architecture-related challenges and solutions for cloud-based software systems. This paper reports the methodological details, findings, and implications of a systematic review that has enabled us to identify 44 unique categories of challenges and associated solutions for architecting cloud-based software systems. We assert that the identified challenges and solutions classified into the categories form a body of knowledge that can be leveraged for designing or evaluating software architectures for cloud-based systems. Our key conclusions are that a large number of primary studies focus on middleware services aimed at achieving scalability, performance, response time, and efficient resource optimization. Architecting cloud-based systems presents unique challenges as the systems to be designed range from pervasive embedded systems and enterprise applications to smart devices with Internet of Things. We also conclude that there is a huge potential of research on architecting cloud-based systems in areas related to green computing, energy efficient systems, mobile cloud computing, and Internet of Things. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Chauhan, Muhammad Aufeef; Babar, Muhammad Ali] IT Univ Copenhagen, CREST Ctr Res Engn Software Technol, Copenhagen, Denmark.
   [Babar, Muhammad Ali] Univ Adelaide, CREST Ctr Res Engn Software Technol, Adelaide, SA, Australia.
   [Benatallah, Boualem] Univ New South Wales, Sydney, NSW, Australia.
C3 IT University Copenhagen; University of Adelaide; University of New
   South Wales Sydney
RP Chauhan, MA (corresponding author), IT Univ Copenhagen, CREST Ctr Res Engn Software Technol, Copenhagen, Denmark.
EM muac@itu.dk
OI Benatallah, Boualem/0000-0002-8805-1130; Chauhan,
   Aufeef/0000-0002-8962-5730
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], P 24 ACM SIGPLAN C C
   [Anonymous], 2010, P 14 INT C EV ASS SO
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Azeez Afkham, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P458, DOI 10.1109/CLOUD.2010.50
   Babar MA, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P69, DOI 10.1007/978-3-642-02374-3_5
   Baiardi Fabrizio, 2010, Proceedings 2010 30th International Conference on Distributed Computing Systems Workshops (ICDCS 2010 Workshops), P32, DOI 10.1109/ICDCSW.2010.34
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Buyya R, 2009, LECT NOTES COMPUT SC, V5931, P24, DOI 10.1007/978-3-642-10665-1_4
   Celesti Antonio, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P337, DOI 10.1109/CLOUD.2010.46
   Chieu TC, 2009, ICEBE 2009: IEEE INTERNATIONAL CONFERENCE ON E-BUSINESS ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/ICEBE.2009.45
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   de Oliveira J. Alvares, 2010, P 1 WORKSH GREEN COM
   Dyba T., 2008, P 2 ACM IEEE INT S E
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Gorton I., 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P218, DOI 10.1109/CloudCom.2010.79
   Gorton I., 2006, ESSENTIAL SOFTWARE A
   Khajeh-Hosseini Ali, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P450, DOI 10.1109/CLOUD.2010.37
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Lenk A, 2009, CLOUD: 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING CHALLENGES OF CLOUD COMPUTING, P23, DOI 10.1109/CLOUD.2009.5071529
   Louridas P, 2010, IEEE SOFTWARE, V27, P6, DOI 10.1109/MS.2010.109
   Perez-Sorrosal F, 2011, VLDB J, V20, P841, DOI 10.1007/s00778-011-0228-8
   Roche K, 2010, BEGINNING JAVA, P169
   Samuel J, 1985, P 8 INT C SOFTW ENG
   Shang L, 2009, LECT NOTES COMPUT SC, V5931, P662, DOI 10.1007/978-3-642-10665-1_69
   van der Burg S, 2009, CLOUD: 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING CHALLENGES OF CLOUD COMPUTING, P61, DOI 10.1109/CLOUD.2009.5071534
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhang H, 2013, INFORM SOFTWARE TECH, V55, P1341, DOI 10.1016/j.infsof.2012.09.008
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
NR 32
TC 14
Z9 14
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2017
VL 47
IS 4
BP 599
EP 644
DI 10.1002/spe.2409
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM7IR
UT WOS:000395485200004
DA 2024-07-18
ER

PT J
AU Suh, YK
   Snodgrass, RT
   Kececioglu, JD
   Downey, PJ
   Maier, RS
   Yi, C
AF Suh, Young-Kyoon
   Snodgrass, Richard T.
   Kececioglu, John D.
   Downey, Peter J.
   Maier, Robert S.
   Yi, Cheng
TI EMP: execution time measurement protocol for compute-bound programs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE execution time; measurement; protocol; compute-bound programs
ID SYSTEM
AB Measuring execution time is one of the most used performance evaluation techniques in computer science research. Inaccurate measurements cannot be used for a fair performance comparison between programs. Despite the prevalence of its use, the intrinsic variability in the time measurement makes it hard to obtain repeatable and accurate timing results of a program running on an operating system. We propose a novel execution time measurement protocol (termed EMP) for measuring the execution time of a compute-bound program on Linux, while minimizing that measurement's variability. During the development of execution time measurement protocol, we identified several factors that disturb execution time measurement. We introduce successive refinements to the protocol by addressing each of these factors, in concert, reducing variability by more than an order of magnitude. We also introduce a new visualization technique, what we term dual-execution scatter plot' that highlights infrequent, long-running daemons, differentiating them from frequent and/or short-running daemons. Our empirical results show that the proposed protocol successfully achieves three major aspectsprecision, accuracy, and scalabilityin execution time measurement that can work for open-source and proprietary software. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [Suh, Young-Kyoon; Snodgrass, Richard T.; Kececioglu, John D.; Downey, Peter J.; Maier, Robert S.; Yi, Cheng] Univ Arizona, Tucson, AZ 85721 USA.
   [Yi, Cheng] Google Inc, Mountain View, CA 94043 USA.
C3 University of Arizona; Google Incorporated
RP Suh, YK (corresponding author), KISTI, Daejeon 34141, South Korea.
EM yksuh@kisti.re.kr
RI zhang, fei/KHU-5230-2024; yi, cheng/KHC-5004-2024; Maier, Robert
   S./C-4802-2014
OI Maier, Robert S./0000-0002-1259-1341
FU NSF [IIS-0639106, IIS-1016205]
FX We thank Phil Kaslo, Tom Lowry, Tom Buchanan, and Bob Burton for
   constructing and maintaining our experimental instrument, a laboratory
   of seven machines, and associated software. This research was supported
   in part by NSF grants IIS-0639106 and IIS-1016205.
CR Anderson JM, 1997, ACM T COMPUT SYST, V15, P357, DOI 10.1145/265924.265925
   [Anonymous], ENH INT SPEEDSTEP TE
   Berrendorf R., PCL - The Performance Counter Library: A Common Interface to Access Hardware Performance Counters on Microprocessors (Version 2.0)
   Beyer D, 2015, LECT NOTES COMPUT SC, V9232, P160, DOI 10.1007/978-3-319-23404-5_12
   Browne Shirley Victoria, 2000, P 2000 ACM IEEE C SU
   Bryant E.R., 2002, COMPUTER SYSTEMS PRO
   Burns A., 1993, Ada Letters, V13, P54
   Chaney C, PERFORMANCE INSPECTO
   Collberg C, 2007, SOFTWARE PRACT EXPER, V37, P581, DOI 10.1002/spe.776
   Currim S, 2017, ACM T DATABASE SYST, V42, DOI 10.1145/2996454
   CXperf HP, HP CXPERF PERFORMANC
   DeRose L. A., 2001, Euro-Par 2001 Parallel Processing. 7th International Euro-Par Conference. Proceedings (Lecture Notes in Computer Science Vol.2150), P122
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   Grund D, 2011, J SYST ARCHITECT, V57, P625, DOI 10.1016/j.sysarc.2010.05.013
   Hashemian R, 2012, SOFTWARE PRACT EXPER, V42, P629, DOI 10.1002/spe.1093
   Henning J. L., 2006, SIGARCH COMPUT ARCHI, V34, P1, DOI [DOI 10.1145/1186736.1186737, 10.1145/1186736.1186737]
   Intel, VTUNE AMPL XE 2013
   Intel, INT TURB BOOST TECHN
   Kerrisk M., LINUX USERS MANUAL T
   Mallada E, 2015, IEEE ACM T NETWORK, V23, P1619, DOI 10.1109/TNET.2014.2345692
   McGeoch CC, 2012, GUIDE TO EXPERIMENTAL ALGORITHMICS, P1
   Microsoft, WIND MAN INSTR
   MILLS DL, 1991, IEEE T COMMUN, V39, P1482, DOI 10.1109/26.103043
   Nesmachnow S, 2015, SOFTWARE PRACT EXPER, V45, P111, DOI 10.1002/spe.2217
   Odom J., 2005, ACM IEEE SC, P59, DOI [10.1109/SC.2005.77, DOI 10.1109/SC.2005.77]
   OProfile, 2014, OPROFILE SYST WID PR
   Red Hat, RED HAT ENT LIN 6 4
   Red Hat, RED HAT ENT LIN
   Richard Stevens W., 2003, UNIX NETWORK PROGRAM, V1
   Santos OMD, 2010, ACM T EMBED COMPUT S, V10, P1
   Stevens W.R., 2013, Advanced Programming in the UNIX Environment, V3rd
   Suh YK, 2014, PROC VLDB ENDOW, V7, P1641, DOI 10.14778/2733004.2733050
   TimeSys Corporation, TIM LINUXLINK
   Welponer M, 2012, SOFTWARE PRACT EXPER, V42, P1315, DOI 10.1002/spe.1134
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Working Group 2 of the Joint Committee for Guides in Metrology (JCGM/WG 2), 2008, INT VOC METR BAS GEN
   Zagha Marco, 1996, P 1996 ACM IEEE C SU
NR 37
TC 4
Z9 4
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2017
VL 47
IS 4
BP 559
EP 597
DI 10.1002/spe.2476
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM7IR
UT WOS:000395485200003
DA 2024-07-18
ER

PT J
AU Briola, D
   Deufemia, V
   Mascardi, V
   Paolino, L
AF Briola, Daniela
   Deufemia, Vincenzo
   Mascardi, Viviana
   Paolino, Luca
TI Agent-oriented and ontology-driven digital libraries: the IndianaMAS
   experience
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE intelligent software agents; ontologies; digital libraries; restful
   programming; modularity; reusability; rock art
ID WEB SERVICES; EXPLOITING ONTOLOGIES; NATURAL-LANGUAGE; FRAMEWORK;
   IMPLEMENTATION; SYSTEMS
AB This paper describes IndianaMAS, a multiagent system able to automatically classify and manage images, sketches, and multilingual documents in a cultural heritage domain. The latter has been formalized by means of an ontology, which enables the semantic integration of heterogeneous data from different sources, drives the agent communication with the internal and external environment, and provides an abstract and humanreadable interface between the system and the user. IndianaMAS is able to expose to the world the classified data via a digital library. Modularity and reusability are the key engineering principles followed in the system design and implementation. We present the details of the IndianaMAS system and discuss how its architecture can be generalized to create - with the minimal effort - systems addressing similar classification, storage, and management problems, but operating in different domains and driven by different ontologies. The concrete problems we faced and their solutions are described to share our lesson learned and, at the same time, to show the applicability and reusability of our modular approach based on ontologies, agents, and digital libraries. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Briola, Daniela] Univ Milano Bicocca, Dept Informat Syst & Commun, Milan, Italy.
   [Deufemia, Vincenzo] Univ Salerno, Dept Comp Sci, Salerno, Italy.
   [Mascardi, Viviana] Univ Genoa, Dept Informat Bioengn Robot & Syst Engn, Genoa, Italy.
   [Paolino, Luca] Link Campus Univ, Dept Res, Rome, Italy.
C3 University of Milano-Bicocca; University of Salerno; University of Genoa
RP Deufemia, V (corresponding author), Univ Salerno, Dept Comp Sci, Salerno, Italy.
EM deufemia@unisa.it
RI Deufemia, Vincenzo/M-3553-2016; Briola, Daniela/AAG-5079-2019
OI Deufemia, Vincenzo/0000-0002-6711-3590; Briola,
   Daniela/0000-0003-1994-8929
CR Aielli F, 2016, COMM COM INF SC, V616, P15, DOI 10.1007/978-3-319-39387-2_2
   [Anonymous], 2000, ARCHITECTURAL STYLES
   [Anonymous], 2007, Developing Multi-Agent Systems with JADE
   Baude F, 2015, SOFTWARE PRACT EXPER, V45, P1189, DOI 10.1002/spe.2270
   Beydoun G, 2005, LECT NOTES COMPUT SC, V3770, P131, DOI 10.1007/11568346_15
   Beydoun G, 2016, COMPLEX INTELL SYST, V2, P235, DOI 10.1007/s40747-016-0025-5
   Bianchi N, 2010, MOUNT BEGO PREHISTOR
   Bianchi N, 2014, POSTPALEOLITHIC FILI, P13
   Bicknell C., 1913, A guide to the prehistoric rock engravings in the Italian Maritime Alps
   Bimonte S, 2010, LECT NOTES GEOINF CA, P43, DOI 10.1007/978-3-642-12326-9_3
   Borth D., 2013, P 21 ACM INT C MULTI, P223, DOI 10.1145/2502081.2502282
   Braubach L., 2013, LNCS, V7837, P17, DOI [10.1007/978-3-642-38700-52, DOI 10.1007/978-3-642-38700-52]
   Briola D, 2015, INTELLIGENT DISTRIBU, V616, P25
   Briola D, 2014, INT J ADV SOFTWARE, V7, P63
   Briola D, 2013, P 5 INT C ADV COGN T, P153
   Briola D, 2014, LECT NOTES COMPUT SC, V8740, P217, DOI 10.1007/978-3-319-13695-0_21
   Briola D, 2012, FRONT ARTIF INTEL AP, V243, P376, DOI 10.3233/978-1-61499-105-2-376
   Briola D, 2013, INT J KNOWL-BASED IN, V17, P3, DOI 10.3233/KES-130262
   CANDELA L., 2011, The Digital Library Reference Model [Em linha]
   Costagliola G, 2007, J VISUAL LANG COMPUT, V18, P165, DOI 10.1016/j.jvlc.2006.06.002
   de Lumley H, 2009, ANTHROPOLOGIE, V113, P969
   Deufemia V, 2012, PROCEEDINGS OF THE INTERNATIONAL WORKING CONFERENCE ON ADVANCED VISUAL INTERFACES, P539, DOI 10.1145/2254556.2254658
   Deufemia V, 2012, P 13 INT S VIRT REAL, P1
   Deufemia V, 2014, J VISUAL LANG COMPUT, V25, P963, DOI 10.1016/j.jvlc.2014.10.031
   Deufemia V, 2014, LECT NOTES COMPUT SC, V8584, P466, DOI 10.1007/978-3-319-09153-2_35
   Deufemia V, 2014, LECT NOTES COMPUT SC, V8509, P487, DOI 10.1007/978-3-319-07998-1_56
   Deufemia V, 2012, PROC INT C TOOLS ART, P852, DOI 10.1109/ICTAI.2012.119
   Dileo J, 2002, P 4 INT BIC WORKSH A, P1
   Ferrando A, 2016, CEUR WORKSHOP P, V1589, P6
   Ferrando A, 2016, LECT NOTES COMPUT SC, V10093, P39, DOI 10.1007/978-3-319-50983-9_3
   Fuentes-Lorenzo D, 2015, SOFTWARE PRACT EXPER, V45, P1161, DOI 10.1002/spe.2267
   García-Sánchez F, 2009, EXPERT SYST APPL, V36, P3167, DOI 10.1016/j.eswa.2008.01.037
   Gibbins N., 2004, Web Semantics: Science, Services and Agents on the World Wide Web, V1, P141, DOI [DOI 10.1016/J.WEBSEM.2003.11.002, 10.1016/j.websem.2003.11.002]
   Giunchiglia F, 2002, LECT NOTES COMPUT SC, V2585, P162
   Gruber T, 2009, ENCY DATABASE SYSTEM, P1963, DOI DOI 10.1007/978-0-387-39940-9_1318
   Henderson-Sellers B, 2011, J SYST SOFTWARE, V84, P301, DOI 10.1016/j.jss.2010.10.025
   Hendler J, 2001, IEEE INTELL SYST APP, V16, P30, DOI 10.1109/5254.920597
   Horling B, 2004, KNOWL ENG REV, V19, P281, DOI 10.1017/S0269888905000317
   JADE Board, 2015, JADE WEB SERV INT GA
   Jennings NR, 1999, LECT NOTES ARTIF INT, V1611, P4
   Lackovic N, 2015, EDUC RES-UK, V57, P331, DOI 10.1080/00131881.2015.1058098
   Leotta Maurizio., 2015, CEUR Workshop Proceedings, V1351, P51
   Li YS, 2004, COMPUT INTELL-US, V20, P678, DOI 10.1111/j.0824-7935.2004.00260.x
   Locoro A, 2012, CEUR WORKSHOP P, V892, P1
   Lopez-Lorca AA, 2016, INT J HUM-COMPUT ST, V87, P20, DOI 10.1016/j.ijhcs.2015.10.007
   Maleshkova M, 2009, CEUR WORKSHOP P, V525, P1
   Martinez FJR, 2006, TCDL B, V2
   Mascardi V, 2010, TECHNICAL REPORT
   Mascardi V, 2014, INT J INNOV COMPUT I, V10, P81
   McIlraith SA, 2001, IEEE INTELL SYST APP, V16, P46, DOI 10.1109/5254.920599
   Mohamed K, 2012, WORLD ACAD SCI ENG T, V72, P530
   Mohamed N, 2015, SOFTWARE PRACT EXPER, V45, P343, DOI 10.1002/spe.2235
   Musen Mark A, 2015, AI Matters, V1, P4
   Sanz JO, 2010, J ARCHAEOL SCI, V37, P3158, DOI 10.1016/j.jas.2010.07.017
   Paolucci M, 2002, LECT NOTES COMPUT SC, V2342, P333
   Paurobally S, 2007, ACM T AUTON ADAP SYS, V2, DOI 10.1145/1293731.1293734
   Payne TR, 2008, IEEE INTELL SYST, V23, P12, DOI 10.1109/MIS.2008.37
   Plutchik R, 2001, AM SCI, V89, P344, DOI 10.1511/2001.4.344
   Seidl M., 2015, APPL ARCHAEOL CULT H, V2, P196, DOI DOI 10.1016/J.DAACH.2015.03.001
   Shen J, 2014, FUTURE GENER COMP SY, V32, P263, DOI 10.1016/j.future.2013.08.005
   Sirin E., 2003, Proc. Web Services: Modeling, P17
   Sivashanmugam K, 2003, ICWS'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON WEB SERVICES, P395
   Sycara K, 2004, IEEE INTERNET COMPUT, V8, P66, DOI 10.1109/MIC.2004.1297276
   Takaki R, 2006, FORMA, V21, P243
   Tansley R, 2016, 3X DUR
   Tran QNN, 2006, COMPUT SYST SCI ENG, V21, P117
   Tran QNN, 2008, INFORM SOFTWARE TECH, V50, P697, DOI 10.1016/j.infsof.2007.07.005
   Weinstein P, 1997, ACM DIGITAL LIBRARIES '97, P83
   Weinstein P. C., 1998, International Journal on Digital Libraries, V2, P20, DOI 10.1007/s007990050034
   WOOLDRIDGE M, 1995, KNOWL ENG REV, V10, P115, DOI 10.1017/S0269888900008122
   Wooldridge M., 2001, Agent-Oriented Software Engineering. First International Workshop, AOSE 2000. Revised Papers (Lecture Notes in Computer Science Vol.1957), P1
   Zeppelzauer M, 2016, J COMPUTING CULTURAL, V9
   Zhu QA, 2011, DATA MIN KNOWL DISC, V23, P91, DOI 10.1007/s10618-010-0200-z
NR 73
TC 9
Z9 9
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1773
EP 1799
DI 10.1002/spe.2494
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500014
DA 2024-07-18
ER

PT J
AU Grabowski, S
   Raniszewski, M
AF Grabowski, Szymon
   Raniszewski, Marcin
TI Sampled suffix array with minimizers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE full-text indexing; sparse suffix array; sampled suffix array;
   minimizers
ID WAVELET TREES; COMPRESSION; ALGORITHM; SEARCH
AB Sampling (evenly) the suffixes from the suffix array is an old idea trading the pattern search time for reduced index space. A few years ago Claude et al. showed an alphabet sampling scheme allowing for more efficient pattern searches compared with the sparse suffix array, for long enough patterns. A drawback of their approach is the requirement that sought patterns need to contain at least one character from the chosen subalphabet. In this work, we propose an alternative suffix sampling approach with only a minimum pattern length as a requirement, which is more convenient in practice. Experiments show that our algorithm (in a few variants) achieves competitive time-space tradeoffs on most standard benchmark data. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Grabowski, Szymon; Raniszewski, Marcin] Lodz Univ Technol, Inst Appl Comp Sci, Al Politech 11, PL-90924 Lodz, Poland.
C3 Lodz University of Technology
RP Raniszewski, M (corresponding author), Lodz Univ Technol, Inst Appl Comp Sci, Al Politech 11, PL-90924 Lodz, Poland.
EM ranisz@gmail.com
RI Grabowski, Szymon/AAJ-2398-2021
OI Grabowski, Szymon/0000-0003-1714-1224
FU Polish National Science Centre [DEC-2013/09/B/ST6/03117]
FX We thank Pawel Gawrychowski and Travis Gagie for an interesting
   discussion on fast minimizer detection, Kimmo Fredriksson for helpful
   comments over the whole manuscript, Sebastian Deorowicz for discussing
   suffix sampling criteria and Francisco Claude for sharing with us the
   sampled suffix array sources. The work was supported by the Polish
   National Science Centre under the project DEC-2013/09/B/ST6/03117 (both
   authors).
CR Alstrup S, 2000, PROCEEDINGS OF THE ELEVENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P819
   [Anonymous], 2002, Proceedings of the 34th annual ACM symposium on theory of computing, STOC' 02
   [Anonymous], P COMPR COMPL SEQ, DOI DOI 10.1109/SEQUEN.1997.666900
   Barbay J, 2014, ALGORITHMICA, V69, P232, DOI 10.1007/s00453-012-9726-3
   Belazzougui D, 2014, ACM T ALGORITHMS, V10, DOI 10.1145/2635816
   Brisaboa NR, 2007, INFORM RETRIEVAL, V10, P1, DOI 10.1007/s10791-006-9001-9
   Chikhi R, 2014, LECT N BIOINFORMAT, V8394, P35, DOI 10.1007/978-3-319-05269-4_4
   Claude F, 2012, J DISCRET ALGORITHMS, V11, P37, DOI 10.1016/j.jda.2010.09.004
   Coltuc D, 1996, ICECS 96 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL CONFERENCE ON ELECTRONICS, CIRCUITS, AND SYSTEMS, VOLS 1 AND 2, P464, DOI 10.1109/ICECS.1996.582906
   Crescenzi P, 2003, THEOR COMPUT SCI, V304, P341, DOI 10.1016/S0304-3975(03)00142-7
   Crescenzi P, 2000, TEXT SPARSIFICATION, P290
   Deorowicz S, 2015, BIOINFORMATICS, V31, P1569, DOI 10.1093/bioinformatics/btv022
   Farach M., 1997, OPTIMAL SUFFIX TREE
   Ferragina P, 2000, ANN IEEE SYMP FOUND, P390, DOI 10.1109/SFCS.2000.892127
   Ferragina P., 2009, J. Exp. Algorithmics, V13
   Fischer Johannes, 2015, Combinatorial Pattern Making. 26th Annual Symposium, CPM 2015. Proceedings: LNCS 9133, P160, DOI 10.1007/978-3-319-19929-0_14
   Fredriksson K, 2006, INFORM PROCESS LETT, V100, P226, DOI 10.1016/j.ipl.2006.04.020
   Gog S, 2015, J DISCRET ALGORITHMS, V32, P53, DOI 10.1016/j.jda.2015.01.006
   Gog S, 2014, SOFTWARE PRACT EXPER, V44, P1287, DOI 10.1002/spe.2198
   Gonzalez Rodrigo, 2015, ACM J EXP ALGORITHMI, V19, P1
   Grabowski S, 2016, ABS160501539 CORR
   Grabowski S, 2016, ABS14055919 CORR
   Grabowski S., 2014, PSC, P179
   Grabowski S, 2015, LECT NOTES COMPUT SC, V9309, P287, DOI 10.1007/978-3-319-23826-5_28
   Grabowski S, 2015, BIOINFORMATICS, V31, P1389, DOI 10.1093/bioinformatics/btu844
   HAREL D, 1984, SIAM J COMPUT, V13, P338, DOI 10.1137/0213024
   HU TC, 1971, SIAM J APPL MATH, V21, P514, DOI 10.1137/0121057
   Karkkainen J., 1996, Computing and Combinatorics. Second Annual International Conference. COCOON '96. Proceedings, P219
   Li Y, 2013, VLDB, P169
   Mehlhorn K, 1997, ALGORITHMICA, V17, P183, DOI 10.1007/BF02522825
   Navarro G, 2007, ACM COMPUT SURV, V39, DOI 10.1145/1216370.1216372
   Navarro G, 2014, J DISCRET ALGORITHMS, V25, P2, DOI 10.1016/j.jda.2013.07.004
   Puglisi SJ, 2006, LECT NOTES COMPUT SC, V4209, P122
   Roberts M, 2004, BIOINFORMATICS, V20, P3363, DOI 10.1093/bioinformatics/bth408
   Schnattinger T, 2010, LECT NOTES COMPUT SC, V6129, P40, DOI 10.1007/978-3-642-13509-5_5
   Suleyman S. C., 1994, Proceedings of the Twenty-Sixth Annual ACM Symposium on the Theory of Computing, P300
   VANHERK M, 1992, PATTERN RECOGN LETT, V13, P517, DOI 10.1016/0167-8655(92)90069-C
   Wood DE, 2014, GENOME BIOL, V15, DOI 10.1186/gb-2014-15-3-r46
   Yuan H, 2011, IEEE T PATTERN ANAL, V33, P2544, DOI 10.1109/TPAMI.2011.183
NR 39
TC 4
Z9 4
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1755
EP 1771
DI 10.1002/spe.2481
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500013
DA 2024-07-18
ER

PT J
AU Al-Naami, KM
   Seker, SE
   Khan, L
AF Al-Naami, Khaled Mohammed
   Seker, Sadi Evren
   Khan, Latifur
TI GISQAF: MapReduce guided spatial query processing and analytics system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; MapReduce; Hadoop; spatial query processing; data analytics;
   spatial co-occurring events
AB The Global Database of Event, Language, and Tone (GDELT) is the only global political georeferenced event dataset with more than 250 million observations covering all countries in the world since January 1, 1979. TABARI and CAMEO are the tools that are used to collect and code events from all international news coverage. To query such big geospatial data, traditional RDBMS can no longer be used, and the need for parallel distributed solutions has become a necessity. MapReduce paradigm has proven to be a scalable platform to process and analyze Big Data in the cloud. Hadoop, as an implementation of MapReduce, is an open-source application that has been widely used and accepted in academia and industry. However, when dealing with Spatial Data, Hadoop is not equipped well and does not perform efficiently. SpatialHadoop is an extension of Hadoop with the support of spatial data. In this paper, we present Geographic Information System Query and Analytics Framework (GISQAF), which has been built on top of SpatialHadoop. GISQAF focuses on two parts: query processing and data analytics. For the query processing part, we show how this solution outperforms Hadoop query processing by orders of magnitude when applying queries on the GDELT dataset with a size of 60 GB. We show the results for various types of queries. For the data analytics part, we present an approach for finding Spatial co-occurring events. We show how GISQAF is suitable and efficient to handle data analytics techniques. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Al-Naami, Khaled Mohammed; Khan, Latifur] Univ Texas Dallas, Dept Comp Sci, Dallas, TX USA.
   [Seker, Sadi Evren] Istanbul Medeniyet Univ, Dept Business, Istanbul, Turkey.
C3 University of Texas System; University of Texas Dallas; Istanbul
   Medeniyet University
RP Al-Naami, KM (corresponding author), John Wiley & Sons Ltd, Journals Prod Dept, Chichester PO19 8SQ, W Sussex, England.
EM khaled.al-naami@utdallas.edu
RI SEKER, Evren Sadi/HLW-1386-2023; SEKER, Sadi Evren/AAG-4911-2019
OI SEKER, Evren Sadi/0000-0002-7323-3695; SEKER, Sadi
   Evren/0000-0002-7323-3695; Khan, Latifur/0000-0002-9300-1576
FU National Science Foundation [CNS 1229652]; Air Force Office of
   Scientific Research [FA-9550-09-1-0468]; Direct For Computer & Info Scie
   & Enginr; Division Of Computer and Network Systems [1229652] Funding
   Source: National Science Foundation
FX This material is based upon work supported by the National Science
   Foundation under Award No. CNS 1229652 and the Air Force Office of
   Scientific Research under Award No. FA-9550-09-1-0468. We thank Dr.
   Robert Herklotz for his support.
CR Abouzeid A., 2009, PROC VLDB ENDOW, V2, P922, DOI [10.14778/1687627.1687731, DOI 10.14778/1687627.1687731]
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., P 20 INT C VERY LARG
   Aji A, 2013, P VLDB ENDOWMENT
   Al-Naami KM, 2014, IEEE INT CONF CLOUD, P681, DOI 10.1109/CLOUD.2014.96
   [Anonymous], 2013, P INT STUD ASS ANN C
   [Anonymous], P 7 USENIX S OP SYST
   Armbrust M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1383, DOI 10.1145/2723372.2742797
   Babu S., 2010, SoCC, P137, DOI DOI 10.1145/1807128.1807150
   Castiglione A, 2015, SOFTWARE PRACT EXPER, V45, P1127, DOI 10.1002/spe.2269
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dittrich J.-P., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P535, DOI 10.1109/ICDE.2000.839452
   Eldawy A., 2013, SIGSPATIAL, P284, DOI [DOI 10.1145/2525314.2525349, 10.1145/2525314.2525349]
   Eldawy A, 2013, PROC VLDB ENDOW, V6, P1230, DOI 10.14778/2536274.2536283
   Fox A, 2013, BIGD C, P291
   Guttman Antonin., 1984, P 1984 ACM SIGMOD C, P47
   Ismail L, 2015, SOFTWARE PRACT EXPER, V45, P765, DOI 10.1002/spe.2258
   Lakshman Avinash, 2010, Operating Systems Review, V44, P35, DOI 10.1145/1773912.1773922
   Lee KH, 2011, SIGMOD REC, V40, P11, DOI 10.1145/2094114.2094118
   Liao CS, 2014, SOFTWARE PRACT EXPER, V44, P823, DOI 10.1002/spe.2230
   Mennis J., 2005, Transactions in GIS, V9, P517
   Montavont J, 2006, WIMOB 2006: 2ND IEEE INTERNATIONAL CONFERENCE ON WIRELESS AND MOBILE COMPUTING, NETWORKING AND COMMUNICATIONS, PROCEEDINGS, P166
   NIEVERGELT J, 1984, ACM T DATABASE SYST, V9, P38, DOI 10.1145/348.318586
   Patel J., 1997, SIGMOD, P336
   Schrodt PA, 2008, ANN M INT STUD ASS S
   Sellis T., 1987, Proceedings of the Thirteenth International Conference on Very Large Data Bases: 1987 13th VLDB, P507
   Solaimani M, 2014, 2014 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN CYBER SECURITY (CICS), P66
   Solaimani M, 2014, IEEE INT CONF BIG DA, P1086, DOI 10.1109/BigData.2014.7004343
   Tan YS, 2013, SOFTWARE PRACT EXPER, V43, P1241, DOI 10.1002/spe.1082
   Thusoo A, 2010, PROC INT CONF DATA, P996, DOI 10.1109/ICDE.2010.5447738
   Zaharia M., 2012, 9 USENIX S NETWORKED
NR 31
TC 3
Z9 4
U1 0
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2016
VL 46
IS 10
BP 1329
EP 1349
DI 10.1002/spe.2383
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW4PG
UT WOS:000383624900003
DA 2024-07-18
ER

PT J
AU Rodríguez-Silva, DA
   Loureiro-Acuña, J
   González-Castaño, FJ
   López-Bravo, C
AF Rodriguez-Silva, Daniel A.
   Loureiro-Acuna, Jaime
   Gonzalez-Castano, Francisco J.
   Lopez-Bravo, Cristina
TI Improving the virtualization of rich applications by combining VNC and
   streaming protocols at the hypervisor layer
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE virtualization; VDI; VNC; WebM; streaming; cloud computing; SaaS
AB Virtual desktop infrastructure (VDI) solutions seek to provide a satisfactory user experience at the client side when accessing remote desktop applications, even from mobile devices with limited capabilities. This paper presents a new approach, improving on previous work by the authors, in which a combination of Virtual Network Computing (VNC) and streaming protocols allowed efficient remote web access to virtualized applications within a cloud architecture. The new approach simplifies virtual machine templates, from which virtual machine instances are deployed, by centralizing software modules, greatly simplifying their management. Our new contribution consists of an integrated solution with specific WebM video encoding modules in charge of application visual output processing, an Hypertext Transfer Protocol (HTTP) streaming server, and a VNC server. The solution can be installed in the hypervisor of the host machines instead of replicating the servers and modules throughout the guest (virtual) machines that run the virtualized applications. Consequently, their implementations are unique and independent of the operating system of the virtual machines. In short, it is not necessary to provide different implementations for different operating systems, which reduces the complexity of virtual machine templates and greatly simplies platform management. To demonstrate our solution, we have modified the Quick Emulator (QEMU)-Kernel-based Virtual Machine (KVM) hypervisor source code accordingly. We also present qualitative and quantitative analyses that demonstrate that the new approach is advantageous in terms of software management and quality of experience, compared with our previous work and other well-known thin clients, contributing to the enhancement of VDI systems. Copyright (c) 2015John Wiley & Sons, Ltd.
C1 [Rodriguez-Silva, Daniel A.; Gonzalez-Castano, Francisco J.] Univ Vigo, Gradiant, Edif CITEXVI, Pontevedra 36310, Spain.
   [Loureiro-Acuna, Jaime; Gonzalez-Castano, Francisco J.; Lopez-Bravo, Cristina] Univ Vigo, AtlantTIC, Escuela Ingn Telecomun, Pontevedra 36310, Spain.
C3 Universidade de Vigo; Universidade de Vigo; atlanTTic
RP González-Castaño, FJ (corresponding author), EI Telecomunicac, Vigo 36310, Spain.
EM javier@det.uvigo.es
RI González-Castaño, Francisco J./D-2637-2018; López-Bravo,
   Cristina/E-8323-2016; López Bravo, Cristina/GNO-9510-2022; Rodriguez
   Silva, Daniel Amos/M-4674-2015
OI López-Bravo, Cristina/0000-0002-9429-8076; Rodriguez Silva, Daniel
   Amos/0000-0003-0493-1876; Gonzalez-Castano, Francisco
   Javier/0000-0001-5225-8378
FU project VIMAIN, Mineco, Spain [IPT-2011-1224-430000]; project SECANI,
   Xunta de Galicia, Spain [10SEC001CT]
FX This research has been supported by projects VIMAIN
   (IPT-2011-1224-430000), Mineco, Spain, and SECANI (10SEC001CT), Xunta de
   Galicia, Spain.
CR BARATTO RA, 2005, P 20 ACM S OP SYST P, P277
   Deboosere Lien., 2007, International Conference on Networking and Services (ICNS'07), P38
   Joveski B, 2013, MULTIMEDIA SYST, V19, P455, DOI 10.1007/s00530-013-0304-6
   Joveski B, 2011, 15 INT S CONS EL ISC, P107
   Mitrea M, 2010, MATH SIGNAL INFORM P
   Ranjan R, 2010, SOFTWARE PRACTICE EX, V42, P391
   Rodriguez-Silva DA, 2013, P 3 INT C CLOUD COMP, P391
   Rodríguez-Silva DA, 2015, SOFTWARE PRACT EXPER, V45, P143, DOI 10.1002/spe.2219
   SHI W, 2010, P IEEE 3 INT C CLOUD, P346
   Simoens P, 2008, TEL NETW APPL C ATNA, P370
   Tan KJ, 2010, IEEE INT CON MULTI, P992, DOI 10.1109/ICME.2010.5582993
   Xuetao G, 2013, 3 INT C INT SYST DES, P266
   ZHONG LA, 2010, P 6 INT C AUT AUT SY, P144, DOI DOI 10.1109/ICAS.2010.28
NR 13
TC 0
Z9 0
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2016
VL 46
IS 5
BP 625
EP 644
DI 10.1002/spe.2328
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ3YV
UT WOS:000374143500004
DA 2024-07-18
ER

PT J
AU Wei, HW
   Chen, TY
   Hsu, TS
AF Wei, Hsin-Wen
   Chen, Tseng-Yi
   Hsu, Tsan-sheng
TI BASE: an assistant tool to precisely simulate energy consumption and
   reliability of energy-efficient storage systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE power simulation; energy-efficient storage; reliability analysis;
   simulation tool
AB The concept of green storage in cluster computing has recently attracted enormous interest among researchers. Consequently, several energy-efficient solutions, such as multi-speed disks and disk spin down methods, have been proposed to conserve power in storage systems and improve disk access. Some researchers have assessed their proposed solutions via simulations, while others have used real-world experiments. Both methods have advantages and disadvantages. Simulations can more swiftly assess the benefits of energy-efficient solutions, but various measurement errors can arise from procedural shortcomings. For instance, many power simulation tools fail to consider how heat increases the power overhead of disk operations. Some researchers claim that their modeling methods reduce the measurement error to 5% in the single disk model. However, the demand for large-scale storage systems is growing rapidly. Traditional power measurement using a single disk model is unsuited to such systems because of their complex storage architecture and the unpredictability of numerous disks. Consequently, a number of studies have conducted real machine experiments to assess the performance of their solutions in terms of power conservation, but such experiments are time consuming. To address this problem, this study proposes an efficient simulation tool called Benchmark Analysis Software for Energy-efficient Solution (BASE), which can accurately estimate disks' power consumption in large-scale storage systems. We evaluate the performance of BASE on real-world traces of Academia Sinica (Taiwan) and Florida International University. BASE incorporates an analytical method for assessing the reliability of energy-efficient solutions. The analytical results demonstrate that the measurement error of BASE is 2.5% lower than that achieved in real-world experiments involving energy-estimation experiments. Moreover, the results of simulations to assess solution reliability are identical to those obtained through real-world experiments. Copyright (c) 2015 Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Wei, Hsin-Wen] Tamkang Univ, Dept Elect Engn, New Taipei 25137, Taiwan.
   [Chen, Tseng-Yi] Natl Tsing Hua Univ, Dept Comp Sci, Hsinchu, Taiwan.
   [Hsu, Tsan-sheng] Acad Sinica, Inst Informat Sci, Taipei, Taiwan.
C3 Tamkang University; National Tsing Hua University; Academia Sinica -
   Taiwan
RP Wei, HW (corresponding author), Tamkang Univ, Dept Elect Engn, New Taipei 25137, Taiwan.
EM hwwei@mail.tku.edu.tw
OI Chen, Tseng-Yi/0000-0003-2939-2821
CR [Anonymous], T STORAGE
   [Anonymous], 2007, P 5 USENIX C FIL STO
   Bucy J. S., 2008, CMUPDL08101
   Chen TZ, 2013, 2013 IEEE 15TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS & 2013 IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND UBIQUITOUS COMPUTING (HPCC_EUC), P1, DOI 10.1109/HPCC.and.EUC.2013.11
   Chen TY, 2015, SOFTWARE PRACT EXPER, V45, P549, DOI 10.1002/spe.2248
   Chen TY, 2012, INT CONF UTIL CLOUD, P117, DOI 10.1109/UCC.2012.26
   Colarelli Dennis., 2002, SUPERCOMPUTING 02, P1, DOI DOI 10.1109/SC.2002.10058
   Gantz John F., 2008, An Updated Forecast of Worldwide Information Growth Through 2011
   Garg R, 2009, CCGRID: 2009 9TH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P76, DOI 10.1109/CCGRID.2009.67
   International Disk Drive Equipment & Materials Association (IDEMA), 1998, R298 IDEMA
   Joukov N, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P69, DOI 10.1145/1357010.1352600
   Li X, 2011, 2011 SECOND ETP/IITA CONFERENCE ON TELECOMMUNICATION AND INFORMATION (TEIN 2011), VOL 1, P1, DOI 10.1109/ICCSN.2011.6014661
   Lu L, 2007, INTERNATIONAL CONFERENCE ON NETWORKING, ARCHITECTURE, AND STORAGE, PROCEEDINGS, P233
   Molaro D, 2009, I SYMP CONSUM ELECTR, P243
   Pinheiro E., 2004, INT C SUPERCOMPUTING, P68, DOI DOI 10.1145/1006209.1006220
   Tyndall George W., 2010, ROLE HEAD DISK INTER
   Verma Akshat., 2010, Proceedings of the 8th USENIX Conference on File and Storage Technologies, FAST '10, P267
   Wang J, 2008, IEEE T COMPUT, V57, P359, DOI 10.1109/TC.2007.70821
   Xie T, 2008, IEEE T COMPUT, V57, P748, DOI 10.1109/TC.2008.27
   Yin Shu, 2009, CLUSTER COMPUTING AN, P1
   Zedlewski J, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES (FAST'03), P217
NR 21
TC 2
Z9 2
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2016
VL 46
IS 5
BP 581
EP 599
DI 10.1002/spe.2323
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ3YV
UT WOS:000374143500002
DA 2024-07-18
ER

PT J
AU Lee, B
   Hirzel, M
   Grimm, R
   McKinley, KS
AF Lee, Byeongcheol
   Hirzel, Martin
   Grimm, Robert
   McKinley, Kathryn S.
TI Debugging mixed-environment programs with Blink
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE debuggers; foreign function interface; JNI; composition
ID JAVA
AB Programmers build large-scale systems with multiple languages to leverage legacy code and languages best suited to their problems. For instance, the same program may use Java for ease of programming and C to interface with the operating system. These programs pose significant debugging challenges, because programmers need to understand and control code across languages, which often execute in different environments. Unfortunately, traditional multilingual debuggers require a single execution environment. This paper presents a novel composition approach to building portable mixed-environment debuggers, in which an intermediate agent interposes on language transitions, controlling and reusing single-environment debuggers. We implement debugger composition in Blink, a debugger for Java, C, and the Jeannie programming language. We show that Blink is (i)simple: it requires modest amounts of new code; (ii)portable: it supports multiple Java virtual machines, C compilers, operating systems, and component debuggers; and (iii)powerful: composition eases debugging, while supporting new mixed-language expression evaluation and Java native interface bug diagnostics. To demonstrate the generality of interposition, we build prototypes and demonstrate debugger language transitions with C for five of six other languages (Caml, Common Lisp, C#, Perl 5, Python, and Ruby) without modifications to their debuggers. Using real-world case studies, we show that diagnosing language interface errors require prior single-environment debuggers to restart execution multiple times, whereas Blink directly diagnoses them with one execution. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Lee, Byeongcheol] Gwangju Inst Sci & Technol, Kwangju 500712, South Korea.
   [Hirzel, Martin] IBM Corp, Thomas J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
   [Grimm, Robert] NYU, New York, NY USA.
   [McKinley, Kathryn S.] Microsoft Res, Redmond, WA USA.
C3 Gwangju Institute of Science & Technology (GIST); International Business
   Machines (IBM); New York University; Microsoft
RP Lee, B (corresponding author), Gwangju Inst Sci & Technol, Sch Informat & Commun, 123 Cheomdangwagi Ro, Kwangju 500712, South Korea.
EM byeong@gist.ac.kr
OI Grimm, Robert/0000-0002-8300-2153
FU National Science Foundation [SHF-0910818]; Samsung Foundation of
   Culture; Microsoft; CISCO; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [0910818] Funding
   Source: National Science Foundation
FX Much of this work was performed while Lee and McKinley were at the The
   University of Texas at Austin and supported by the National Science
   Foundation (SHF-0910818), Samsung Foundation of Culture, Microsoft, and
   CISCO. Any opinions, findings, and conclusions expressed herein are the
   authors' and do not necessarily reflect those of the sponsors.
CR [Anonymous], JAVAONE C SAN FRANC
   [Anonymous], US TECHN C AN CA US
   [Anonymous], BUG DAT BUG 4207056
   [Anonymous], COMPILING JAVA GCJ
   [Anonymous], ECLIPSECON US C SANT
   [Anonymous], JVM TOOL INT VERS 1
   [Anonymous], IBM STYLE INTRO IBM
   [Anonymous], DEBUGGING INTEGRATED
   [Anonymous], SPEC JVM98 BENCHM
   [Anonymous], M STALLS DEBUGGING B
   [Anonymous], DEB JAV APPL DBX
   [Anonymous], JAV SE HOTSPOT GLANC
   [Anonymous], DWARF 3 DEB INF FORM
   Beazley D.M., 1996, USENIX TCLTK C, P15
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Furr M, 2006, LECT NOTES COMPUT SC, V3924, P309
   Furr M, 2005, ACM SIGPLAN NOTICES, V40, P62, DOI 10.1145/1064978.1065019
   Furr M, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1377492.1377493
   Grimm R, 2006, ACM SIGPLAN NOTICES, V41, P38, DOI 10.1145/1133981.1133987
   Hanson DR, 1999, SOFTWARE PRACT EXPER, V29, P849, DOI 10.1002/(SICI)1097-024X(199908)29:10<849::AID-SPE260>3.0.CO;2-T
   Hirzel M, 2007, ACM SIGPLAN NOTICES, V42, P19, DOI 10.1145/1297105.1297030
   Kondoh G, 2008, P 2008 INT S SOFTW T, P109
   Lee B, 2010, ACM SIGPLAN NOTICES, V45, P36, DOI 10.1145/1809028.1806601
   Lee B, 2009, ACM SIGPLAN NOTICES, V44, P207, DOI 10.1145/1639949.1640105
   Liang S., 1999, Java native interface: programmers guide and reference, V1
   Necula GC, 2002, ACM SIGPLAN NOTICES, V37, P128, DOI 10.1145/565816.503286
   RAMSEY N, 1992, SIGPLAN NOTICES, V27, P22, DOI 10.1145/143103.143112
   Rosenberg JonathanB., 1996, DEBUGGERS WORK ALGOR
   Ryu S, 2005, LECT NOTES COMPUT SC, V3443, P10
   Tan G, 2008, P 17 C SEC S SS 08, P365
   Tan G, 2006, P 2006 IEEE INT S SE, P97
   Tan G, 2007, ACM SIGPLAN NOTICES, V42, P39, DOI 10.1145/1297105.1297031
   Tatlock Z, 2008, ACM SIGPLAN NOTICES, V43, P37, DOI 10.1145/1449955.1449768
   TOLMACH AP, 1990, PROCEEDINGS OF THE 1990 ACM CONFERENCE ON LISP AND FUNCTIONAL PROGRAMMING, P1, DOI 10.1145/91556.91564
   van den Brand MGJ, 2005, ELECTRON NOTES THEOR, V141, P161, DOI 10.1016/j.entcs.2005.02.056
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
NR 36
TC 2
Z9 2
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2015
VL 45
IS 9
BP 1277
EP 1306
DI 10.1002/spe.2276
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM9FH
UT WOS:000358012100005
DA 2024-07-18
ER

PT J
AU Dubey, A
   Weide, K
   Lee, D
   Bachan, J
   Daley, C
   Olofin, S
   Taylor, N
   Rich, PM
   Reid, LB
AF Dubey, Anshu
   Weide, Klaus
   Lee, Dongwook
   Bachan, John
   Daley, Christopher
   Olofin, Samuel
   Taylor, Noel
   Rich, Paul M.
   Reid, Lynn B.
TI Ongoing verification of a multiphysics community code: FLASH
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multiple platforms; parallel computing; regression testing; verification
AB When developing a complex, multi-authored code, daily testing on multiple platforms and under a variety of conditions is essential. It is therefore necessary to have a regression test suite that is easily administered and configured, as well as a way to easily view and interpret the test suite results. We describe the methodology for verification of FLASH, a highly capable multiphysics scientific application code with a wide user base. The methodology uses a combination of unit and regression tests and an in-house testing software that is optimized for operation under limited resources. Although our practical implementations do not always comply with theoretical regression-testing research, our methodology provides a comprehensive verification of a large scientific code under resource constraints.Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Dubey, Anshu; Weide, Klaus; Lee, Dongwook; Bachan, John; Daley, Christopher; Olofin, Samuel; Taylor, Noel] Univ Chicago, Flash Ctr Computat Sci, Chicago, IL 60637 USA.
   [Dubey, Anshu] Univ Calif Berkeley, Lawrence Berkeley Natl Lab, Computat Res Div, Berkeley, CA 94720 USA.
   [Rich, Paul M.] Argonne Natl Lab, ALCF, Argonne, IL 60439 USA.
   [Reid, Lynn B.] Univ Western Australia, Crawley, WA, Australia.
C3 University of Chicago; United States Department of Energy (DOE);
   Lawrence Berkeley National Laboratory; University of California System;
   University of California Berkeley; United States Department of Energy
   (DOE); Argonne National Laboratory; University of Western Australia
RP Dubey, A (corresponding author), Univ Calif Berkeley, Lawrence Berkeley Natl Lab, Computat Res Div, Berkeley, CA 94720 USA.
EM adubey@lbl.gov
RI Reid, Lynn B/A-7364-2011
OI Reid, Lynn Beverly/0009-0003-7405-7640; Daley,
   Christopher/0000-0003-3105-0804; Weide, Klaus/0000-0001-9869-9750
FU US DOE NNSA ASC at the ASC/Alliance Center for Astrophysical
   Thermonuclear Flashes [B523820]
FX The development of the FLASH code has been supported in part by the US
   DOE NNSA ASC, first at the ASC/Alliance Center for Astrophysical
   Thermonuclear Flashes under grant B523820, and later, through the
   Argonne Institute for Computing in Science under field work proposal
   57789 at the Flash Center for Computational Science at the University of
   Chicago.
NR 0
TC 4
Z9 4
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2015
VL 45
IS 2
BP 233
EP 244
DI 10.1002/spe.2220
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY4FJ
UT WOS:000347533400005
DA 2024-07-18
ER

PT J
AU Campbell-Kelly, M
AF Campbell-Kelly, M.
TI David Barron: a life in software, 1935-2012
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
C1 Univ Warwick, Dept Comp Sci, Coventry CV4 7AL, W Midlands, England.
C3 University of Warwick
RP Campbell-Kelly, M (corresponding author), Univ Warwick, Dept Comp Sci, Coventry CV4 7AL, W Midlands, England.
CR [Anonymous], WORLD SCRIPTING LANG
   [Anonymous], 1960, COMPUT J, DOI DOI 10.1093/COMJNL/3.1.28
   BARRON D, 1990, SOFTWARE PRACT EXPER, V20, P3, DOI 10.1002/spe.4380200103
   Barron D, 1987, TEXT PROCESSING TYPE
   Barron D, 1999, TIMES HIGHER ED SUPP
   Barron D.W., 1966, Advances in Programming and Non-Numerical Computation, P49
   Barron D. W., 1969, Assemblers and Loaders
   BARRON DW, 1963, COMPUT J, V6, P44, DOI 10.1093/comjnl/6.1.44
   BARRON DW, 1981, PASCAL LANGUAGE ITS
   Barron DW, 1972, COMPUTER OPERATING S, P111
   Barron DW, 2008, COMPUTER RESURRECTIO, V43, P11
   BARRON DW, 1968, RECURSIVE TECHNIQUES
   Barron DW, 1977, INTRO STUDY PROGRAMM, P150
   Barron DW, 1984, ADV PROGRAMMING PRAC
   Barron DW, 1977, IUCC NEWSLETTER, V5
   Barron DW, 1971, COMPUTER U SOC INAUG, P10
   Barron DW, 1961, COMPUT J, V6, P134
   Bowden B.V., 1953, FASTER THOUGHT
   Coetzee JM, 2003, YOUTH, P157
   Colouris GF, 2012, COMPILER COMPILER RE
   COULOURIS GF, 1968, COMPUT J, V11, P26, DOI 10.1093/comjnl/11.1.26
   Hartley DF, IEEE ANN HI IN PRESS
   RISHBETH H, 1960, J ATMOS TERR PHYS, V18, P234, DOI 10.1016/0021-9169(60)90095-7
   STRACHEY C, 1961, COMMUN ACM, V4, P488, DOI 10.1145/366813.366816
   1968, COMM ACM, V11, P151
NR 25
TC 1
Z9 1
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2013
VL 43
IS 6
BP 733
EP 741
DI 10.1002/spe.2177
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 140MD
UT WOS:000318657300007
OA Bronze
DA 2024-07-18
ER

PT J
AU Dai, SY
   Fyodor, Y
   Wu, MW
   Huang, YN
   Kuo, SY
AF Dai, Shih-Yao
   Fyodor, Yarochkin
   Wu, Ming-Wei
   Huang, Yennun
   Kuo, Sy-Yen
TI Holography: a behavior-based profiler for malware analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE virtual machine emulator; malware analyzer; sandbox; dynamic malware
   analysis; malware unpacker; malvertising
AB Behavior-based detection and signature-based detection are two popular approaches to malware (malicious software) analysis. The security industry, such as the sector selling antivirus tools, has been using signature and heuristic-based technologies for years. However, this approach has been proven to be inefficient in identifying unknown malware strains. On the other hand, the behavior-based malware detection approach has a greater potential in identifying previously unknown instances of malicious software. The accuracy of this approach relies on techniques to profile and recognize accurate behavior models. Unfortunately, with the increasing complexity of malicious software and limitations of existing automatic tools, the current behavior-based approach cannot discover many newer forms of malware either. In this paper, we implement holography platform, a behavior-based profiler on top of a virtual machine emulator that intercepts the system processes and analyzes the CPU instructions, CPU registers, and memory. The captured information is stored in a relational database, and data mining techniques are used to extract information. We demonstrate the breadth of the holography platform by conducting two experiments: a packed binary behavior analysis and a malvertising (malicious advertising) incident tracing. Both tasks are known to be very difficult to do efficiently using existing methods and tools. We demonstrate how the precise behavior information can be easily obtained using the holography platform tool. With these two experiments, we show that the holography platform can provide security researchers and automatic malware detection systems with an efficient malicious software behavior analysis solution. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Dai, Shih-Yao; Fyodor, Yarochkin; Kuo, Sy-Yen] Natl Taiwan Univ, Dept Elect Engn, Taipei 106, Taiwan.
   [Wu, Ming-Wei; Huang, Yennun] Acad Sinica, Res Ctr Informat Technol Innovat, Taipei 115, Taiwan.
C3 National Taiwan University; Academia Sinica - Taiwan
RP Kuo, SY (corresponding author), Natl Taiwan Univ, Dept Elect Engn, Taipei 106, Taiwan.
EM sykuo@cc.ee.ntu.edu.tw
RI Huang, Yennun/D-4272-2011
OI Huang, Yennun/0000-0001-9312-0113; Kuo, Sy-Yen/0000-0002-3021-8321
FU National Science Council, Taiwan [NSC 97-2221-E-002-216-MY3]; National
   Taiwan University Center for Quantum Science and Engineering
   [97R0066-65]; Quantum Computing; Quantum Information/Communication
   [97R0066-67]; Taiwan Information Security Center (TWISC), National
   Science Council [NSC 98-2219-E-011-001]; Ministry of Economy Affairs of
   the Republic of China
FX This research was supported by the National Science Council, Taiwan
   (grant NSC 97-2221-E-002-216-MY3), National Taiwan University Center for
   Quantum Science and Engineering (grant 97R0066-65), Quantum Computing,
   Quantum Information/Communication (grant 97R0066-67), and Taiwan
   Information Security Center (TWISC), National Science Council (grant NSC
   98-2219-E-011-001). This study is also conducted under the 'III
   Innovative and Prospective Technologies Project' of the Institute for
   Information Industry that is subsidized by the Ministry of Economy
   Affairs of the Republic of China.
CR [Anonymous], 2008, FINANCIAL ASPECTS NE
   [Anonymous], 2010, P 19 INT C WORLD WID
   [Anonymous], 2009, INTERNET SECURITY TH, VXIV
   [Anonymous], 2011, JSUNPACK GENERIC JAV
   [Anonymous], 2011, MICR PORT EX COMM OB
   [Anonymous], 2010, DAS Q3 MALW UPD WEB
   Bayer U, 2006, J COMPUT VIROL HACKI, V2, P67, DOI 10.1007/s11416-006-0012-2
   Bohne L., 2008, Master's thesis
   Dai SY, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P349, DOI 10.1109/PRDC.2007.23
   Dai SY, 2009, IEEE 15TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P263, DOI 10.1109/PRDC.2009.48
   Dinaburg A, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P51
   Jiang XX, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P128
   Kang MG, 2007, WORM'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON RECURRING MALCODE, P46
   Neugschwandtner M, 2010, 7 C DET INTR MALW VU
   Norman sandbox online analyzer, 2011, NORM SANDB ONL AN
   Oberhumer M.F. X. J., 2008, the Ultimate Packer for eXecutables
   Rosenblum Mendel, 2003, P NETW DISTR SYST SE
   Security response: backdoor.berbew.d, 2007, SECURITY RESPONSE BA
   Song D, 2008, LECT NOTES COMPUT SC, V5352, P1, DOI 10.1007/978-3-540-89862-7_1
   Vasudevan A, 2006, P IEEE S SECUR PRIV, P264, DOI 10.1109/SP.2006.9
   Wang YM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE EIGHTEENTH LARGE INSTALLATION SYSTEM ADMINISTRATION CONFERENCE, P33
   Willems C, 2007, IEEE SECUR PRIV, V5, P32, DOI 10.1109/MSP.2007.45
   Yan W, 2008, IEEE SECUR PRIV, V6, P65, DOI 10.1109/MSP.2008.126
   Yin H, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P116
   Yun J, 2011, IEICE ELECTRON EXPR, V8, P460, DOI 10.1587/elex.8.460
NR 25
TC 5
Z9 5
U1 0
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2012
VL 42
IS 9
BP 1107
EP 1136
DI 10.1002/spe.1115
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 983FC
UT WOS:000307103100003
DA 2024-07-18
ER

PT J
AU Wassenberg, J
AF Wassenberg, Jan
TI Lossless asymmetric single instruction multiple data codec
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE lossless compression; image compression; SIMD; algorithm engineering
ID COMPRESSION
AB This report introduces a new lossless asymmetric single instruction multiple data codec designed for extremely efficient decompression of large satellite images. A throughput in excess of 3GB/s allows decompression to proceed in parallel with asynchronous transfers from fast block devices such as disk arrays. This is made possible by a simple and fast single instruction multiple data entropy coder that removes leading null bits. Our main contribution is a new approach for vectorized prediction and encoding. Unlike previous approaches that treat the entropy coder as a black box, we account for its properties in the design of the predictor. The resulting compressed stream is 1.2 to 1.5 times as large as JPEG-2000, but can be decompressed 100 times as quickly even faster than copying uncompressed data in memory. Applications include streaming decompression for out of core visualization. To the best of our knowledge, this is the first entirely vectorized algorithm for lossless compression. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 Fraunhofer IOSB, SZA, D-76275 Ettlingen, Germany.
C3 Fraunhofer Gesellschaft; Fraunhofer Optronics, System Technologies &
   Image Exploitation Ettlingen
RP Wassenberg, J (corresponding author), Fraunhofer IOSB, SZA, Gutleuthausstr 1, D-76275 Ettlingen, Germany.
EM jan.wassenberg@iosb.fraunhofer.de
RI Wassenberg, Jan/C-6313-2009
OI Wassenberg, Jan/0000-0002-2016-1819
CR Adams M, 2000, JASPER SOFTWARE BASE
   Anh VN, 2010, SOFTWARE PRACT EXPER, V40, P131, DOI 10.1002/spe.948
   Assche SV, 1997, LOSSLESS COMPRESSION
   Black-Schaffer D., 2007, STANF MEM CHURCH HIG
   Bloom C., 2010, ARITHMETIC EQUIVALEN
   Burtscher M, 2009, IEEE T COMPUT, V58, P18, DOI 10.1109/TC.2008.131
   Corporation V, 2011, STREAM HARDW SOFTW S
   Declercq B., 2010, LUNAR MOSAIC
   Fisher R. J., 2003, THESIS PURDUE U
   Fraedrich R, 2007, SEQUENTIAL DATA COMP, P41
   HASHIDUME Y, 2007, SOC INSTR CONTR ENG, P2832, DOI DOI 10.1109/SICE.2007.4421471
   Howard P. G., 1993, DCC '93. Data Compression Conference (Cat. No.93TH0536-3), P351, DOI 10.1109/DCC.1993.253114
   Liddell M, 2006, SOFTPRES SOFTWARE PR, P36
   Mahoney Matt, 2011, Large text compression benchmark
   Memon N, 2000, IEEE T IMAGE PROCESS, V9, P1837, DOI 10.1109/83.877207
   Merhav N, 2000, IEEE T INFORM THEORY, V46, P121, DOI 10.1109/18.817513
   Meyer B, 2001, IEEE DATA COMPR CONF, P503
   NASA, 2010, LROC WAC MOS LUN NEA
   OwenZhao X, 2010, IEEE SIGNAL PROC LET, V17, P383, DOI 10.1109/LSP.2010.2040925
   Schlegel Benjamin., 2010, DaMoN workshop, P34
   Seemann T, 1997, P PICT COD S BARBARA, P147
   Steim J. M., 1994, STEIM COMPRESSION
   STROM J, 2008, P 23 ACM SIGGRAPH EU, P75
   van Waveren J, 2006, 20041068 USGS
   WANG JF, 1995, IEEE T GEOSCI REMOTE, V33, P1277, DOI 10.1109/36.469492
   Wassenberg J, 2010, PROC SPIE, V7831, DOI 10.1117/12.865014
   Wassenberg J, 2010, ADV MAUI OPT SPAC SU
   WEINBERGER MJ, 1996, DAT COMPR C, P140
   Westmann T, 2000, SIGMOD REC, V29, P55, DOI 10.1145/362084.362137
   Willhalm T., 2009, P VLDB ENDOW, V2, P385, DOI DOI 10.14778/1687627.1687671
   Wu XL, 1996, INT CONF ACOUST SPEE, P1890, DOI 10.1109/ICASSP.1996.544819
   Zhang J., 2008, P 17 INT C WORLD WID, P387, DOI [DOI 10.1145/1367497.1367550, 10.1145/ 1367497.1367550]
   Zukowski M, 2006, SUPER SCALAR RAM CPU, P59
NR 33
TC 1
Z9 1
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2012
VL 42
IS 9
BP 1095
EP 1106
DI 10.1002/spe.1109
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 983FC
UT WOS:000307103100002
DA 2024-07-18
ER

PT J
AU Birkenheuer, G
   Brinkmann, A
   Kaiser, J
   Keller, A
   Keller, M
   Kleineweber, C
   Konersmann, C
   Niehörster, O
   Schäfer, T
   Simon, J
   Wilhelm, M
AF Birkenheuer, Georg
   Brinkmann, Andre
   Kaiser, Juergen
   Keller, Axel
   Keller, Matthias
   Kleineweber, Christoph
   Konersmann, Christoph
   Niehoerster, Oliver
   Schaefer, Thorsten
   Simon, Jens
   Wilhelm, Maximilian
TI Virtualized HPC: a contradiction in terms?
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE virtualization; HPC; cloud; scheduling
AB System virtualization has become the enabling technology to manage the increasing number of different applications inside data centers. The abstraction from the underlying hardware and the provision of multiple virtual machines (VM) on a single physical server have led to a consolidation and more efficient usage of physical servers. The abstraction from the hardware also eases the provision of applications on different data centers, as applied in several cloud computing environments. In this case, the application need not adapt to the environment of the cloud computing provider, but can travel around with its own VM image, including its own operating system and libraries. System virtualization and cloud computing could also be very attractive in the context of high-performance computing (HPC). Today, HPC centers have to cope with both, the management of the infrastructure and also the applications. Virtualization technology would enable these centers to focus on the infrastructure, while the users, collaborating inside their virtual organizations (VOs), would be able to provide the software. Nevertheless, there seems to be a contradiction between HPC and cloud computing, as there are very few successful approaches to virtualize HPC centers. This work discusses the underlying reasons, including the management and performance, and presents solutions to overcome the contradiction, including a set of new libraries. The viability of the presented approach is shown based on evaluating a selected parallel, scientific application in a virtualized HPC environment. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Birkenheuer, Georg; Brinkmann, Andre; Kaiser, Juergen; Keller, Axel; Keller, Matthias; Kleineweber, Christoph; Konersmann, Christoph; Niehoerster, Oliver; Schaefer, Thorsten; Simon, Jens; Wilhelm, Maximilian] Paderborn Ctr Parallel Comp, D-33102 Paderborn, Germany.
RP Brinkmann, A (corresponding author), Paderborn Ctr Parallel Comp, Furstenallee 11, D-33102 Paderborn, Germany.
EM brinkman@upb.de
RI Brinkmann, Andre/H-9888-2016
OI Brinkmann, Andre/0000-0003-3083-2775
FU Fujitsu Technology Solutions GmbH
FX Thanks to the people of our project group 'Virtualized Supercomputer',
   namely Matthias Bolte, Holger Burger, Hubert Domer, Martin Hett, Michael
   Sievers, and Andreas Weizel. This work has been supported by Fujitsu
   Technology Solutions GmbH.
CR Barham P., 2003, Operating Systems Review, V37, P164, DOI 10.1145/1165389.945462
   Bent J, 2009, DADC 2009: SECOND INTERNATIONAL WORKSHOP ON DATA AWARE DISTRIBUTED COMPUTING, P1
   Bolte M, 2010, P 2010 C DES AUT TES
   Cacheiro JL, 2007, P HIGH PERF COMP SIM
   Camargos F., 2008, 2008 Linux Symposium, P63
   Cerbelaud D., 2009, 10th ACM/IFIP International Conference on Middleware, P1
   Chisnall D., 2007, DEFINITIVE GUIDE XEN, V2nd
   Clark C, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI '05), P273
   de Assunçao MD, 2009, HPDC'09: 18TH ACM INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, P141
   Fallenbeck N., 2006, Proceedings of the 2nd International Workshop on Virtualization Technology in Distributed Computing, P4, DOI DOI 10.1109/VTDC.2006
   Frisch M., 2004, GAUSSIAN 03 REVISION, DOI DOI 10.1016/J.MOLSTRUC.2017.03.014
   Grit L., 2006, P IEEE INT WORKSH VI
   Ivica C, 2009, P 31 INT C INF TECHN
   Johanssen M, 2008, COMM COM INF SC, V18, P125
   Keahey Katarzyna, 2008, 2008 IEEE Fourth International Conference on eScience, P301, DOI 10.1109/eScience.2008.82
   Keahey K., 2005, Sci. Program, V13, P265
   Kivity A., 2007, P LIN S DTTAW DNTOR, V1, P225
   Kiyanclar N, 2006, P 6 IEEE INT S CLUST, V2
   Lenk A, 2009, CLOUD: 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING CHALLENGES OF CLOUD COMPUTING, P23, DOI 10.1109/CLOUD.2009.5071529
   Lim B, 2001, P 2001 USENIX ANN TE
   Lindahl E, 2001, J MOL MODEL, V7, P306, DOI 10.1007/s008940100045
   Liu J, 2006, P USENIX ANN TECHN C
   Lorenz D, 2007, P CRAC GRID WORKSH 0, P191
   Macdonell C, 2009, P 4 VIRT HIGH PERF C
   MathWorks T, 2008, PAR COMP MATLAB AM E
   Menon Aravind., 2005, Proceedings of the 1st ACM/USENIX international conference on Virtual execution environments, VEE '05, P13
   Neiger G, 2008, INTEL TECHNOLOGY J, V10, P167
   Niehorster O, 2009, P 9 CRAC GRID WORKSH
   Niehorster O, 2010, IEEE INT C CLUST COM
   Nurmi D, 2009, CCGRID: 2009 9TH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P124, DOI 10.1109/CCGRID.2009.93
   Ouyang X, 2010, P INT WORKSH STOR NE
   Ouyang X, 2009, P 16 INT C HIGH PERF
   PCI-SIG: Peripheral Component Interconnect Special Interest Group, 2010, SINGL ROOT I O VIRT
   Petry A, 2007, THESIS U KAISERSLAUT, P35
   POPEK GJ, 1974, COMMUN ACM, V17, P412, DOI 10.1145/361011.361073
   Smith J., 2005, VIRTUAL MACHINES VER
   Smith M, 2009, FUTURE GENER COMP SY, V25, P315, DOI 10.1016/j.future.2008.03.002
   Sotomayor B., 2008, Proceedings of the 17th international symposium on High performance distributed computing, P87, DOI DOI 10.1145/1383422.1383434
   Sotomayor B, 2008, P 1 WORKSH CLOUD COM
   Sotomayor B, 2009, HPCC: 2009 11TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, P59, DOI 10.1109/HPCC.2009.17
   Sotomayor B, 2009, IEEE INTERNET COMPUT, V13, P14, DOI 10.1109/MIC.2009.119
   Systems C, 2008, WHIT CLEARL BETT VIR
   VMware, 2009, WHIT VMWARE VSPHERE
   Waldspurger CA, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P181, DOI 10.1145/1060289.1060307
   Walters J, 2008, P 1 WORKSH CLOUD COM
   Xiangyong Ouyang, 2009, Proceedings of the 2009 International Conference on Parallel Processing (ICPP 2009), P34, DOI 10.1109/ICPP.2009.73
   越民义, 1991, Acta Mathematicae Applicatae Sinica, V7, P321, DOI 10.1007/BF02009683
NR 47
TC 8
Z9 9
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2012
VL 42
IS 4
SI SI
BP 485
EP 500
DI 10.1002/spe.1055
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902OK
UT WOS:000301047600007
DA 2024-07-18
ER

PT J
AU Mannaert, H
   Verelst, J
   Ven, K
AF Mannaert, Herwig
   Verelst, Jan
   Ven, Kris
TI Towards evolvable software architectures based on systems theoretic
   stability
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software architecture; patterns; evolvability; systems theory;
   modularity
ID DESIGN; MANAGEMENT; EVOLUTION; METHODOLOGIES; MAINTENANCE; QUALITY;
   MODELS; CODE
AB In today's increasingly volatile environments, evolvability is quickly becoming the most desirable characteristic of information systems. Current information systems still struggle to provide these high levels of evolvability. Based on the concept of stability from systems theory, we require that information systems should be stable with respect to a set of anticipated changes in order to exhibit high evolvability. This requires that information systems should be free from so-called combinatorial effects. Combinatorial effects occur when the impact of a change is dependent on the size of the information system. To eliminate these combinatorial effects, we propose four theorems that are constraints on the modular structure of software architectures. The theorems are prescriptive and ensure that stable information systems are built, thereby guaranteeing high evolvability. We further present five higher level modular structures called elements. These elements provide the core functionality of information systems and comply fully with the stringent constraints implied by the four theorems. The internal structure of these elements is described by design patterns which are eligible for automatic code generation. These design patterns offer a constructive proof that it is possible to build information systems in practice by applying this set of theorems. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Mannaert, Herwig; Verelst, Jan; Ven, Kris] Univ Antwerp, Dept Management Informat Syst, B-2000 Antwerp, Belgium.
C3 University of Antwerp
RP Mannaert, H (corresponding author), Univ Antwerp, Dept Management Informat Syst, Prinsstr 13, B-2000 Antwerp, Belgium.
EM herwig.mannaert@ua.ac.be
CR Alexander C., 1964, Notes on the Synthesis of Form
   Alshayeb M, 2005, J SYST SOFTWARE, V74, P269, DOI 10.1016/j.jss.2004.02.002
   [Anonymous], 1995, INFORM SYSTEMS DEV M
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Binkley D, 2006, IEEE T SOFTWARE ENG, V32, P698, DOI 10.1109/TSE.2006.95
   Buschmann F., 2007, PATTERN ORIENTED SOF, V4
   Castor F, 2009, SOFTWARE PRACT EXPER, V39, P1377, DOI 10.1002/spe.939
   Dong J, 2009, SOFTWARE PRACT EXPER, V39, P773, DOI 10.1002/spe.914
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Elfatatry A, 2007, COMMUN ACM, V50, P35, DOI 10.1145/1278201.1278203
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fitzgerald B, 1998, INFORM MANAGE-AMSTER, V34, P317, DOI 10.1016/S0378-7206(98)00072-X
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GARLAN D, 1995, IEEE T SOFTWARE ENG, V21, P269
   Häggander D, 2001, IEEE INT C ENG COMP, P96, DOI 10.1109/ICECCS.2001.930168
   Kelly D, 2006, IEEE T SOFTWARE ENG, V32, P315, DOI 10.1109/TSE.2006.42
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Lehman MM, 2001, ANN SOFTW ENG, V11, P15, DOI 10.1023/A:1012535017876
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Lundberg L, 2001, LECT NOTES COMPUTER, V2047, P56
   Mannaert H, 2003, INTERNET RES, V13, P94, DOI 10.1108/10662240310469042
   Mannaert H, 2007, INT C SOFTW ENG ADV
   Mannaert H., 2008, P 3 INT C SOFTW ENG, P360
   Mannaert H, 2007, INT C INT WEB BAS AP
   Mannaert H, 2006, INT C SOFTW ENG ADV
   MCILROY MD, 1968, NATO SOFTW ENG C NAT, P138
   ORFALI R, 1998, CLIENT SERVER PROGRA
   Palopoli L, 2009, SOFTWARE PRACT EXPER, V39, P1, DOI 10.1002/spe.883
   PARNAS DL, 1985, IEEE T SOFTWARE ENG, V11, P259, DOI 10.1109/TSE.1985.232209
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   Parsons D, 2006, SOFTWARE PRACT EXPER, V36, P157, DOI 10.1002/spe.694
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Roden PL, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P171, DOI 10.1109/SCAM.2007.29
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Terra R, 2009, SOFTWARE PRACT EXPER, V39, P1073, DOI 10.1002/spe.931
   Tun TT, 2009, SOFTWARE PRACT EXPER, V39, P973, DOI 10.1002/spe.923
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6, P545, DOI 10.1109/TSE.1980.234503
   YAU SS, 1985, IEEE T SOFTWARE ENG, V11, P849, DOI 10.1109/TSE.1985.232544
NR 39
TC 28
Z9 31
U1 0
U2 7
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2012
VL 42
IS 1
BP 89
EP 116
DI 10.1002/spe.1051
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 869KG
UT WOS:000298596200006
DA 2024-07-18
ER

PT J
AU Youn, JM
   Lee, J
   Paek, Y
   Lee, J
   Scharwaechter, H
   Leupers, R
AF Youn, Jonghee M.
   Lee, Jongwon
   Paek, Yunheung
   Lee, Jongeun
   Scharwaechter, Hanno
   Leupers, Rainer
TI Fast graph-based instruction selection for multi-output instructions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler/architecture co-design; code generation; embedded system; ASIP;
   ISS
ID CODE GENERATION
AB A multi-output instruction (MOI) is an instruction that produces multiple outputs to its destination locations. Such inherently parallel instructions are becoming more and more popular in embedded processors, due to the advances in application-specific architectures. In order to provide high-level programmability and thus guarantee widespread acceptance, sophisticated compiler support for these programmable cores is necessary. However, traditional tree-based approaches for instruction selection, although very fast, fail to exploit MOIs mainly because of the fundamental limitation of the tree representation. In fact, to generate optimal code with MOIs requires a more general graph-based formulation of the instruction selection problem, which is at least NP-complete. In this paper we present a new methodology to automatically generate from simple instruction set descriptions, graph-based code selectors that can effectively utilize all provided instructions including MOIs. Our experimental results using a set of benchmarks on a target processor with various MOIs of up to two outputs demonstrate that our generated code selectors can quickly and effectively exploit many MOIs at the application level, and therefore are highly desirable both for architecture exploration and as code generators after architecture is fixed. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Lee, Jongeun] UNIST, Sch Elect & Comp Engn, Ulsan 689798, South Korea.
   [Youn, Jonghee M.; Lee, Jongwon; Paek, Yunheung] Seoul Natl Univ, Sch Elect Engn & Comp Sci, Seoul 151742, South Korea.
   [Scharwaechter, Hanno; Leupers, Rainer] Rhein Westfal TH Aachen, Inst Integrated Signal Proc Syst ISS, D-52056 Aachen, Germany.
C3 Ulsan National Institute of Science & Technology (UNIST); Seoul National
   University (SNU); RWTH Aachen University
RP Lee, J (corresponding author), UNIST, Sch Elect & Comp Engn, Ulsan 689798, South Korea.
EM jlee@unist.ac.kr
OI Youn, Jonghee M./0000-0001-7408-3804
FU Korea Science and Engineering Foundation (KOSEF) [2009-0083190]; Korea
   Ministry of Education, Science and Technology (MEST)/Korea Science and
   Engineering Foundation (KOSEF) [2010-0001724]
FX This work was supported by the Korea Science and Engineering Foundation
   (KOSEF) NRL Program grant (No. 2009-0083190) and the Engineering
   Research Center of Excellence Program of Korea Ministry of Education,
   Science and Technology (MEST)/Korea Science and Engineering Foundation
   (KOSEF) (Grant 2010-0001724).
CR AHO AV, 1989, ACM T PROGR LANG SYS, V11, P491, DOI 10.1145/69558.75700
   Araujo G, 1996, DES AUT CON, P591, DOI 10.1109/DAC.1996.545644
   CLARK N, 2006, P C COMP ARCH SYNTH
   DAVIDSON JW, 1984, ACM T PROGR LANG SYS, V6, P505, DOI 10.1145/1780.1783
   DAVIDSON S, 1981, IEEE T COMPUT, V30, P460, DOI 10.1109/TC.1981.1675826
   Ebner D, 2008, LCTES'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN-SIGBED CONFERENCE ON LANGUAGES, COMPILERS, AND TOOLS FOR EMBEDDED SYSTEMS, P31
   ECKSTEIN E, 2003, P WORKSH SOFTW COMP, P49
   ERTL MA, 1999, PRINC PROGR LANG POP
   Fraser Christopher W., 1995, A retargetable C compiler: Design and implementation
   FRASER CW, 1992, SIGPLAN NOTICES, V27, P68
   FRASER CW, 1992, TR38692
   Gries Matthias., 2005, Building ASIPs: The MESCAL Methodology
   HALAMBI A, 1999, P C DES AUT TEST EUR
   HOFFMANN A, 2003, ARCHITECTURE EXPLORA
   Karuri K, 2005, DES AUT CON, P329
   KOBAYASHI S, 2001, WORKSH SOFTW COMP EM
   LEUPERS R, 1996, P EUR C DES AUT EDAC
   LIAO S, 1995, P INT C COMP AID DES, P393
   Liem C., 1994, Proceedings. The European Design and Test Conference. EDAC, The European Conference on Design Automation. ETC European Test Conference. EUROASIC, The European Event in ASIC Design (Cat. No.94TH0634-6), P31, DOI 10.1109/EDTC.1994.326902
   *MIPS TECHN INC, 2000, MIPS 4KC PROC COR DA
   Proebsting Todd., LEAST COST INSTRUCTI
   Sakai S, 2003, DISCRETE APPL MATH, V126, P313, DOI 10.1016/S0166-218X(02)00205-6
   SCHARWAECHTER H, 2007, P 5 IEEE ACM INT C H
   Scharwaechter H, 2007, ACM T EMBED COMPUT S, V6, DOI 10.1145/1234675.1234679
   TJIANG SWK, 1993, OLIVE TWIG
   WILLEMS M, 1996, P INT C SIGN PROC AP
NR 26
TC 0
Z9 0
U1 0
U2 2
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2011
VL 41
IS 6
BP 717
EP 736
DI 10.1002/spe.1034
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 748GZ
UT WOS:000289379600005
DA 2024-07-18
ER

PT J
AU Omoronyia, I
   Ferguson, J
   Roper, M
   Wood, M
AF Omoronyia, Inah
   Ferguson, John
   Roper, Marc
   Wood, Murray
TI A review of awareness in distributed collaborative software engineering
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE global software development; context awareness; empirical studies;
   distributed teamwork
ID COMMUNICATION; TOOL; PEOPLE; WORK
AB Software development projects are inherently cooperative, requiring many developers to coordinate their efforts to produce complex systems. An integral part of this process is the development and maintenance of a shared understanding concerning the state of software project tasks, artefacts, and the activities and expertise of developers working on the project. In co-located settings, this vital awareness information that concerns developers, either directly or tangentially, is typically acquired using formal, regular meetings, informal personal interruptions and electronic communication. Developing and maintaining such an awareness are far more difficult in distributed teams where developers are separated by time and space. The goal of this review is to help bridge the gap between the theoretical benefits of distributed collaborative software development and the practical impediments to successful implementation, and more specifically, achieving similar levels of awareness in distributed settings to those available in co-located settings. The review starts with a detailed discussion of awareness and awareness types with particular relevance to collaboration. This is followed by a discussion of how awareness information is disseminated during collaborative processes. Awareness information needs and dissemination mechanisms in software development teams are then presented. The main contribution of the review, derived from a comparison of awareness needs in distributed collaborative software engineering and current support from tools and techniques, is that more support is required for the type of awareness known as context awareness. Context awareness crosscuts other (more basic) forms of awareness and arises because, over time, individual collaborators work on different sets of tasks and artefacts and form different perceptions of their colleagues; their colleagues' work, roles, and relationships; and, the workspace. This awareness is highly contextual and therefore cannot be generalized across individuals, entities or activities that are found in a collaboration space. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Omoronyia, Inah] Norwegian Univ Sci & Technol NTNU, Dept Comp & Informat Sci, Trondheim, Norway.
   [Ferguson, John; Roper, Marc; Wood, Murray] Univ Strathclyde, Dept Comp & Informat Sci, Glasgow G1 1X11, Lanark, Scotland.
C3 Norwegian University of Science & Technology (NTNU); University of
   Strathclyde
RP Omoronyia, I (corresponding author), Norwegian Univ Sci & Technol NTNU, Dept Comp & Informat Sci, Trondheim, Norway.
EM inah1@idi.ntnu.no
OI Wood, Murray/0000-0002-9449-1036
CR Alexanderson P., 2004, P NORDICHI 04 TAMPER, P281
   [Anonymous], P CHI 98
   [Anonymous], 1992, Proceedings of the 1992 ACM Conference on Computer Supported Cooperative Work (CSCW'92), DOI DOI 10.1145/143457.143468
   [Anonymous], ADV SOFTWARE ENG
   [Anonymous], 2005, UCIISR053
   [Anonymous], 2006, Proc. 2006 20th Anniversary Conf. Computer Supported Coop. Work
   [Anonymous], POWERGRID J
   [Anonymous], 1996, CONTEXT CONSCIOUSNES
   [Anonymous], P 2004 ACM C COMP SU
   BECK K, 1999, EXTREME PROGRAMMING, P7
   Biehl J.T., 2006, Proceedings of the working conference on Advanced visual interfaces, ACM, P35, DOI DOI 10.1145/1133265.1133273
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   BLY SA, 1993, COMMUN ACM, V36, P28, DOI 10.1145/151233.151235
   BODKER S, 2006, COMPUTER SUPPORTED C, V15, P1, DOI DOI 10.1007/S10606-005-9011-Y
   BOGDAN C, 2004, CHI 04 HUM FACT COMP, P1263
   Boland D., 2004, "Third International Workshop on Global Software Development (GSD 2004)" W12S Workshop - 26th International Conference on Software Engineering, P4, DOI 10.1049/ic:20040303
   Bruegge B, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P139, DOI 10.1109/ICGSE.2006.261227
   BUSCH P, 2000, PANS WORKSH VIS INF, P51
   Cadiz J, 2001, MSRTR200183
   CALEFATO F, 2009, ECL IT 2009 4 IT WOR, P6
   Cheng LT, 2007, PROC INT CONF SOFTW, P788
   CHISAN J, 2004, P 3 INT WORKSH GLOB, P28
   Convertino G., 2004, P 3 NORDIC C HUMAN C, P313
   Cramton CD, 2001, ORGAN SCI, V12, P346, DOI 10.1287/orsc.12.3.346.10098
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Cutrell E, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P263
   de Souza CRB, 2007, GROUP'07: PROCEEDINGS OF THE 2007 INTERNATIONAL ACM CONFERENCE ON SUPPORTING GROUP WORK, P147
   de Souza CRB, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P294, DOI 10.1109/ISESE.2003.1237990
   Decouchant D, 2009, EXPERT SYST APPL, V36, P8391, DOI 10.1016/j.eswa.2008.10.082
   DeLine Robert., 2005, SOFTVIS 05, P183, DOI [10.1145/1056018.1056044, DOI 10.1145/1056018.1056044]
   Dewan P., 2008, P 2008 INT WORKSH RE, P21
   Dey A.K., 1998, Association for the Advancement of Artificial Intelligence 1998 Spring Symposium on Intelligent Environments, P51
   DEY AK, 2000, WORKSH WHAT WHO CONT, P371
   Dix A., 2004, Human-computer interaction
   Drury J, 2002, WET ICE 2002: ELEVENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P12, DOI 10.1109/ENABL.2002.1029981
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   FARSHCHIAN BA, 2000, 12 INT C ADV INF SYS, P123
   Fitzpatrick G., 2003, LOCALES FRAMEWORK
   Froehlich J, 2004, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.2004.1317461
   Frost R, 2007, IEEE SOFTWARE, V24, P114, DOI 10.1109/MS.2007.170
   Gaver W., 1991, PROC CHI 91, P85
   Genilloud G, 2000, FOURTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE - PROCEEDINGS, P76, DOI 10.1109/EDOC.2000.882346
   Golder SA, 2006, J INF SCI, V32, P198, DOI 10.1177/0165551506062337
   Greenberg S, 2001, HUM-COMPUT INTERACT, V16, P257, DOI 10.1207/S15327051HCI16234_09
   Gross T, 2005, INT J HUM-COMPUT INT, V18, P323, DOI 10.1207/s15327590ijhc1803_5
   Trindade DDG, 2008, J COMPUT SCI TECHNOL, V8, P118
   Gutwin C., 1996, People and Computers XI. Proceedings of HCI '96, P281
   Gutwin C, 1995, PROCEEDINGS OF CSCL '95 - THE FIRST INTERNATIONAL CONFERENCE ON COMPUTER SUPPORT FOR COLLABORATIVE LEARNING, P147, DOI 10.3115/222020.222126
   HADAS W, 2001, ECSCW WORKSH MAN TAC, P55
   Handel M., 2002, P 2002 ACM C COMP SU, P1, DOI [10.1145/587078.587080, DOI 10.1145/587078.587080]
   HARGREAVES E, 2004, 3 INT WORKSH GLOB SO, P1
   HAWKINS ID, 1983, CONSUMER BEHAV
   Hayashi K., 1999, P 6 EUROPEAN C COMPU, P99
   Heiner J., 1999, Proc. UIST '99, P141, DOI [10.1145/320719.322595, DOI 10.1145/320719.322595]
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Horvitz E, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P305
   Kantor M, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P431
   Kersten M, 2007, THESIS U BRIT COLUMB
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   KOICHI H, 1999, T INFORM PROCESSING, V40, P3977
   Kommeren R, 2007, EMPIR SOFTW ENG, V12, P647, DOI 10.1007/s10664-007-9047-3
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Li QF, 2008, IEEE MULTIMEDIA, V15, P14, DOI 10.1109/MMUL.2008.54
   Margaret-Anne D.Storey., 2005, SOFTVIS, P193, DOI DOI 10.1145/1056018.1056045
   McDonald D.W., 2000, CSCW 00, P231, DOI [DOI 10.1145/358916.3589941, 10.1145/358916.358994, DOI 10.1145/358916.358994]
   McDonald D.W., 1998, P 1998 ACM C COMPUTE, P315
   McFarlane DC, 1999, HUMAN-COMPUTER INTERACTION - INTERACT '99, P295
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Neale D.C., 2004, Proc. of the 2004 ACM conf. on Computer supported cooperative work, P112
   Nguyen T, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/ICGSE.2008.39
   OMORONYIA I, 2008, THESIS U STRATHCLYDE
   Omoronyia I, 2009, COMPUT SUPP COOP W J, V18, P509, DOI 10.1007/s10606-009-9104-0
   Ornoronyia I, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P204
   Pacey M, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P174
   Pedersen E., 1998, CHI extended abstracts, P283, DOI [10.1145/286498.286763, DOI 10.1145/286498.286763]
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Prinz W., 1999, ECSCW'99. Proceedings of the Sixth European Conference on Computer Supported Cooperative Work, P391
   Ramasubbu Narayan., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P125
   Romero-Salcedo M, 2004, INTERACT COMPUT, V16, P657, DOI 10.1016/j.intcom.2004.07.004
   Sarma A, 2003, PROC INT CONF SOFTW, P444, DOI 10.1109/ICSE.2003.1201222
   Sarma A., 2007, C AUTOMATED SOFTWARE, P94
   Schmidt K., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P285, DOI 10.1023/A:1021272909573
   Segal L.D., 1995, LOCAL APPL ECOLOGICA, V2, P392
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Singh G, 1999, IEEE MULTIMEDIA, V6, P18
   Teasley SD, 2002, IEEE T SOFTWARE ENG, V28, P671, DOI 10.1109/TSE.2002.1019481
   TEE K, 2006, P 2006 20 ANN C COMP
   Tran MH, 2006, INFORM SOFTWARE TECH, V48, P1006, DOI 10.1016/j.infsof.2005.12.009
   Treude C, 2009, PROC INT CONF SOFTW, P12, DOI 10.1109/ICSE.2009.5070504
   VERTEGAAL R, 1997, WORKSH AW COLL SYST
   Vyas D, 2007, INT FED INFO PROC, V241, P113
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   WILLIAMSON C, 1992, RES DEV INFORMATION, P338
   Xiao W., 2007, Proceedings of the International Symposium on Wikis and Open Collaboration, WikiSym '07, P177
   YEW J, 2006, P 7 INT C LEARN SCI
   Zhu HB, 2003, CCECE 2003: CANADIAN CONFERENCE ON ELECTRICAL AND COMPUTER ENGINEERING, VOLS 1-3, PROCEEDINGS, P687
   2006, WEBSTERS UNABRIDGED
NR 100
TC 24
Z9 26
U1 3
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2010
VL 40
IS 12
SI SI
BP 1107
EP 1133
DI 10.1002/spe.1005
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677TZ
UT WOS:000284016000005
DA 2024-07-18
ER

PT J
AU Castor, F
   Cacho, N
   Figueiredo, E
   Garcia, A
   Rubira, CMF
   de Amorim, JS
   da Silva, HO
AF Castor, Fernando
   Cacho, Nelio
   Figueiredo, Eduardo
   Garcia, Alessandro
   Rubira, Cecilia M. F.
   de Amorim, Jefferson Silva
   da Silva, Hitalo Oliveira
TI On the modularization and reuse of exception handling with aspects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE aspect-oriented programming; exception handling; metrics; reuse;
   modularity; AspectJ
AB This paper presents an in-depth study of the adequacy of the AspectJ language for modularizing and reusing exception-handling code. The study consisted of refactoring existing applications so that the code responsible for implementing error-handling strategies was moved to newly created exception handier aspects. We have performed quantitative assessments of five systems-four object-oriented and one aspect-oriented-based on four key quality attributes, namely separation of concerns, coupling, cohesion, and conciseness. Our investigation also included a multi-perspective analysis of the refactored systems, including (i) the extent to which error-handling aspects can be reused, (ii) the beneficial and harmful aspectization scenarios for exception handling, and (iii) the scalability of AOP to support the modularization of exception handling in the presence of other aspects. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Castor, Fernando] Univ Fed Pernambuco, Informat Ctr, BR-50740540 Recife, PE, Brazil.
   [Cacho, Nelio] Univ Fed Rio Grande do Norte, Sch Sci & Technol, BR-59072970 Natal, RN, Brazil.
   [Figueiredo, Eduardo] Univ Lancaster, Dept Comp, Lancaster, England.
   [Garcia, Alessandro] Pontifical Catholic Univ Rio de Janeiro, Dept Informat, Rio De Janeiro, Brazil.
   [Rubira, Cecilia M. F.] Univ Estadual Campinas, UNICAMP, Inst Comp, Campinas, SP, Brazil.
   [de Amorim, Jefferson Silva; da Silva, Hitalo Oliveira] Univ Fed Pernambuco, Dept Comp & Syst, Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco; Universidade Federal do Rio Grande
   do Norte; Lancaster University; Pontificia Universidade Catolica do Rio
   de Janeiro; Universidade Estadual de Campinas; Universidade Federal de
   Pernambuco
RP Castor, F (corresponding author), Univ Fed Pernambuco, Informat Ctr, Av Prof Lus Freire S-N, BR-50740540 Recife, PE, Brazil.
EM castor@cin.ufpe.br
RI Cacho, Nelio/AAE-9926-2020; Cacho, Nelio/J-9436-2012; Ines,
   INCT/J-9550-2013; Cacho, Nelio/AAH-9390-2019; Rubira, Cecilia Mary
   Fischer/G-5594-2012; Castor, Fernando/V-4011-2018
OI Cacho, Nelio/0000-0002-4706-5616; Cacho, Nelio/0000-0002-4706-5616;
   Rubira, Cecilia Mary Fischer/0000-0003-4549-7105; Castor,
   Fernando/0000-0002-6389-3630
FU CNPq/Brazil [481147/2007-1, 550895/2007-8, 308383/2008-7, 301446/
   2006-7, 484138/2006-5]; National Institute of Science and Technology for
   Software Engineering (INES); CNPq; FACEPE; CAPES/Brazil; FACEPE/Brazil; 
   [573964/2008-4];  [APQ-1037-1.03/08]
FX Contract/grant sponsor: CNPq/Brazil; contract/grant numbers:
   481147/2007-1, 550895/2007-8, 308383/2008-7, 301446/ 2006-7
   484138/2006-5 Contract/grant sponsor: National Institute of Science and
   Technology for Software Engineering (INES); Contract/grant sponsor: CNPq
   and FACEPE;; contract/grant numbers: 573964/2008-4, APQ-1037-1.03/08;
   Contract/grant sponsor: CAPES/Brazil; Contract/grant sponsor:
   FACEPE/Brazil
CR Akai S, 2009, ACP4IS'09: 8TH WORKSHOP ON ASPECTS, COMPONENTS AND PATTERNS FOR INFRASTRUCTURE SOFTWARE, P43
   ANDERSON T, 1990, FOULT TOLERANCE PRIN, P302
   [Anonymous], P OBJ OR PROGR SYST
   [Anonymous], P 21 EUR C OBJ OR PR
   AVGUSTINOV R, 2005, P 4 ACM C ASP OR SOF, P87
   BARTOLOMEI TT, 2006, THESIS KIEL U APPL S
   Binkley D, 2006, IEEE T SOFTWARE ENG, V32, P698, DOI 10.1109/TSE.2006.95
   Cacho Nelio., 2006, AOSD 06 P 5 INT C AS, P109
   Cacho Nelio., 2008, AOSD 08 P 7 INT C AS, P72
   CARGILL T, 1994, C REPORT, V6
   CASTOR F, 2006, P 14 SIGSOFT FSE NOV, P152
   CASTOR F, 2007, P 23 INT C SOFTW MAI, P134
   CASTOR F, 2005, J BRAZILIAN COMPUTER, V10, P5
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Coelho R, 2008, AIP CONF PROC, V996, P207, DOI 10.1063/1.2917012
   Coelho Roberta., 2008, PLOP 08, P1
   Cole L., 2005, Proc. 4th ACM International Conference on Aspect-Oriented Software Development (AOSD), P123
   Cristian F., 1979, Proceedings of the 4th International Conference on Software Engineering, P42
   DOSHI G, 2003, BEST PRACTICES EXCEP
   EADDY M, 2007, P ICSE 2007 WORKSH A, P1
   Fetzer C, 2004, IEEE T SOFTWARE ENG, V30, P547, DOI 10.1109/TSE.2004.35
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   FILMAN R, 2000, P OOPSLA 2000 WORKSH, P1
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Garcia A, 2006, LECT NOTES COMPUT SC, V3880, P36
   Garcia A., 2005, AOSD 05, P3
   Garcia AF, 2001, J SYST SOFTWARE, V59, P197, DOI 10.1016/S0164-1212(01)00062-0
   GODIL I, 2005, P CASCON 2005 TOR CA, P83
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Hanenberg S., 2003, 4th Annual International Conference on Object-Oriented and Internet-based Technologies, Concepts, P19
   HARBULOT B, 2005, P 5 ACM C ASP OR SOF, P63
   Hoffman K, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P91
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kienzle J, 2002, LECT NOTES COMPUT SC, V2374, P37
   Kienzle Jorg., 2006, AOSD 06, P202
   LADDAD R, 2003, ASPECT ORIENTED RE 1
   LADDAD R, 2003, ASPECT ORIENTED RE 2
   LADDAD R, 2003, ASPECTJ ACTION, P512
   Lippert M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P418, DOI 10.1109/ICSE.2000.870432
   MCCUNE T, 2006, EXCEPTION HANDLING A
   Mezini M., 2003, P 2 INT C ASPECT ORI, P90
   Monteiro M., 2005, Proceedings of the 4th international conference on Aspect-oriented software development, P111
   RAJAN H, 2003, P 9 EUR SOFTW ENG C, P291
   REIMER D, 2003, P ECOOP 2003 WORKSH, P10
   Soares S, 2002, ACM SIGPLAN NOTICES, V37, P174, DOI 10.1145/583854.582437
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   *TIGR, 2005, AOPM
   VANDOOREN M, 2005, P OOPSLA 05, P455
   Weimer W, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330019
NR 50
TC 7
Z9 8
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC 10
PY 2009
VL 39
IS 17
BP 1377
EP 1417
DI 10.1002/spe.939
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 519ST
UT WOS:000271789000001
DA 2024-07-18
ER

PT J
AU Ierusalimschy, R
AF Ierusalimschy, Roberto
TI A text pattern-matching tool based on Parsing Expression Grammars
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE pattern matching; Parsing Expression Grammars; scripting languages
AB Current text pattern-matching tools are based on regular expressions. However, pure regular expressions have proven too weak a formalism for the task: many interesting patterns either are difficult to describe or cannot be described by regular expressions. Moreover, the inherent non-determinism of regular expressions does not fit the need to capture specific parts of a match. Motivated by these reasons, most scripting languages nowadays use pattern-matching tools that extend the original regular-expression formalism with a set of ad hoe features, such as greedy repetitions, lazy repetitions, possessive repetitions, 'longest-match rule,' lookahead, etc. These ad hoc extensions bring their own set of problems, such as lack of a formal foundation and complex implementations. In this paper, we propose the use of Parsing Expression Grammars (PEGs) as a basis for pattern matching. Following this proposal, we present LPEG, a pattern-matching tool based on PEGs for the Lua scripting language. LPEG unifies the ease of use of pattern-matching tools with the full expressive power of PEGs. Because of this expressive power, it can avoid the myriad of ad hoe constructions present in several current pattern-matching tools. We also present a Parsing Machine that allows a small and efficient implementation of PEGs for pattern matching. Copyright (c) 2008 John Wiley & Sons, Ltd.
C1 PUC Rio, BR-22451900 Rio De Janeiro, Brazil.
RP Ierusalimschy, R (corresponding author), PUC Rio, Rua MS Vicente 225, BR-22451900 Rio De Janeiro, Brazil.
EM roberto@inf.puc-rio.br
FU Brazilian Research Council (CNPq) [300993/2005-6]
FX Contract/grant sponsor: Brazilian Research Council (CNPq);
   contract/grant number 300993/2005-6
CR *AB, 2008, RED 3 CNF SAT PERL R
   AHO A, 1972, THEORY PARSING TRANS, V1, pCH6
   [Anonymous], 1992, J FUNCT PROGRAM
   [Anonymous], 2006, Lua 5.1 reference manual
   [Anonymous], 2006, Programming in lua
   [Anonymous], 2000, Programming Perl
   [Anonymous], 2005, 4180 RFC IETF
   [Anonymous], 2002, THESIS MIT
   Clarke CLA, 1997, ACM T PROGR LANG SYS, V19, P413, DOI 10.1145/256167.256174
   COX R, 2008, REGULAR EXPRESSION M
   FORD B, 2004, 31 S PRINC PROGR LAN
   FOWLER G, 2008, INTERPRETATION POSIX
   Griswold R.E., 1971, SNOBOL4 PROGRAMMING
   HAGEN H, 2008, TUGBOAT, V29, P295
   Ierusalimschy R., 2008, LPEG PARSING EXPRESS
   KERNIGHAN BW, 2008, TIMING TRIALS TRIALS
   Knuth D. E., 1971, Acta Informatica, V1, P79, DOI 10.1007/BF00289517
   LAURIKARI V, 2000, 7 INT S STRING PROC, P181
   LAURIKARI V, 2008, TRE MATCHING LIB
   THOMPSON K, 1968, COMMUN ACM, V11, P419, DOI 10.1145/363347.363387
   TISHER G, 2008, NARWHAL COMPILER SUI
NR 21
TC 15
Z9 18
U1 0
U2 5
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR 10
PY 2009
VL 39
IS 3
BP 221
EP 258
DI 10.1002/spe.892
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 412EF
UT WOS:000263705700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Brinkmann, G
   Degraer, J
   De Loof, K
AF Brinkmann, Gunnar
   Degraer, Jan
   De Loof, Karel
TI Rehabilitation of an unloved child: semi-splaying
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE semi-splaying; splay trees; self-adjusting; binary trees; experimental
   results
ID TREES
AB Splay trees are widely considered as the classic examples of self-adjusting binary search trees and are part of most courses on data structures and algorithms. Already in the first seminal paper on splay trees (J. Assoc. Comput. Mach. 1985, 32(3):652-686) alternative operations were introduced, among which is semi-splaying. On the one hand, the analysis of semi-splaying gives a smaller constant for the amortized complexity, but on the other hand the authors write: Whether any version of semi-splaying is an improvement over splaying depends on the access sequence. Semi-splaying may be better when the access pattern is stable, but splaying adapts much faster to changes in usage. Maybe this sentence was the reason that nobody seriously ran tests to compare the performance of semi-splaying and splaying. Semi-splaying is conceptually simpler than splaying, has the same asymptotic amortized complexity and, as will be clear from empirical data presented in this paper, the practical performance is better for a very broad variety of access patterns. Therefore, its efficiency is a good reason to use semi-splaying for applications instead of its more prominent brother. Moreover, its simplicity also makes it very attractive for teaching purposes. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Brinkmann, Gunnar; Degraer, Jan; De Loof, Karel] Univ Ghent, Dept Appl Math & Comp Sci, B-9000 Ghent, Belgium.
C3 Ghent University
RP Brinkmann, G (corresponding author), Univ Ghent, Dept Appl Math & Comp Sci, Krijgslaan 281-S9, B-9000 Ghent, Belgium.
EM Gunnar.Brinkmann@ugent.be
RI De Loof, Karel/A-5696-2009
CR Albers S, 2002, INFORM PROCESS LETT, V81, P213, DOI 10.1016/S0020-0190(01)00230-7
   BELL J, 1993, SOFTWARE PRACT EXPER, V23, P369, DOI 10.1002/spe.4380230403
   FURER M, 1999, P 10 ANN ACM SIAM S
   Klostermeyer W. F., 1992, Journal of Information & Optimization Sciences, V13, P85
   LEE EK, 2007, SOFTWARE PRACTICE EX
   SLEATOR DD, 1985, J ACM, V32, P652, DOI 10.1145/3828.3835
   Williams HE, 2001, SOFTWARE PRACT EXPER, V31, P925, DOI 10.1002/spe.394
NR 7
TC 0
Z9 0
U1 1
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2009
VL 39
IS 1
BP 33
EP 45
DI 10.1002/spe.886
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 388RA
UT WOS:000262035700002
OA Green Published
DA 2024-07-18
ER

PT J
AU Martínez-Carreras, MA
   Gómez-Skarmeta, AF
AF Martinez-Carreras, M. Antonia
   Gomez-Skarmeta, Antonio F.
TI Towards interoperability: a wrapper model for integrating remote
   laboratories in a collaborative discovery learning environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE interoperability; collaborative environments; distributed systems
ID COMMUNICATION
AB Collaborative theories in learning are playing a vital role in the way learners interact with each other. More concretely, in collaborative learning the communication between learners is considered the most important element in their knowledge building. Regarding experimental subjects, the discovery learning discipline has emerged, in which students construct their knowledge through experimentation. In this sense, platforms such as Pedagogica, Web-based inquiry science environment, SimQuest, Interactive Physics, Working Models and Co-Lab provide support of this kind of learning. Regarding experimentation, one of the resources that may enrich the learning of students is the use of remote laboratories. However, the majority of these learning systems lack interfaces and models to provide interoperability with remote laboratories. Regarding interoperability issues, service-oriented architecture (SOA) is the most well-known paradigm for this issue. In this paper, we describe a wrapper model based on SOA for interoperability between Co-Lab and existing remote laboratories. Moreover, we explain how we have integrated the existing remote laboratories in Co-Lab using this model and we show the general pattern for including external experiments. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Martinez-Carreras, M. Antonia; Gomez-Skarmeta, Antonio F.] Univ Murcia, Dept Informat & Commun Engn, Fac Informat, E-30071 Murcia, Spain.
C3 University of Murcia
RP Martínez-Carreras, MA (corresponding author), Univ Murcia, Dept Informat & Commun Engn, Fac Informat, Campus Espinardo, E-30071 Murcia, Spain.
EM amart@uni.es
RI Gomez, Antonio/HNB-6290-2023; Skarmeta Gómez, Antonio/K-4537-2014
OI Skarmeta Gómez, Antonio/0000-0002-5525-1259; Martinez-Carreras, M.
   Antonia/0000-0003-2422-6728
FU Collaborative Laboratories for Europe [IST-2000-25035]
FX The authors thank all the staff involved in the Co-Lab project. The
   Co-Lab project is a European project Co-Lab 'Collaborative Laboratories
   for Europe' (IST-2000-25035).
CR [Anonymous], P 5 INT C LEARN SCI
   Borghoff U.M., 2000, COMPUTER SUPPORTED C
   CARRERRAS MAM, 2005, P 1 INT C COLL COMP
   CHINNINI R, 2006, W3C CAND REC
   CLEMENT L, 2004, UDDI SPEC TECHNICAL
   COULOURIS GF, 1981, DISTRIBUTED SYSTEMS
   de Jong T, 1998, REV EDUC RES, V68, P179, DOI 10.3102/00346543068002179
   DEJONG T, 2004, LEARNING COMPLEX DOM
   Dillenbourg P., 1999, Collaborative-learning: Cognitive and computational approaches, P1
   ERL T, 2005, CONCEPTS TECHNOLOGY
   Gudgin M., 2003, SOAP VERSION 1 2 1
   Hickey DT, 2003, AM EDUC RES J, V40, P495, DOI 10.3102/00028312040002495
   JESCHKEL S, 2006, P ICML 2006
   Joolingen W.V., 1999, INT J ARTIFICIAL INT, V10, P385
   LIPPONEN L, 2002, P CSCL
   MARTINEZCARRERA.MA, 2006, P 2 INT C COLL COMP
   Menascé DA, 2005, IEEE INTERNET COMPUT, V9, P90, DOI 10.1109/MIC.2005.42
   *NAT SCI FDN, 2000, INQ THOUGHT VIEWS ST
   Nezhad HRM, 2006, COMPUTER, V39, P24
   NORIHIRO F, 2005, P 35 ASEE IEEE FRONT
   Paolucci M, 2003, IEEE INTERNET COMPUT, V7, P34, DOI 10.1109/MIC.2003.1232516
   Saab N, 2007, INSTR SCI, V35, P73, DOI 10.1007/s11251-006-9003-4
   SEGALL B, 1997, P AUUG
   SHIMODA T, 2006, 2006 ANN C AM ED RES
   TINKER R, 2001, FUTURE TRENDS TECHNO
   van Joolingen WR, 2005, COMPUT HUM BEHAV, V21, P671, DOI 10.1016/j.chb.2004.10.039
   van Joolingen WR, 2000, LECT NOTES COMPUT SC, V1839, P202
   White B.Y., 1999, INT J ED, V10, P151
NR 28
TC 0
Z9 0
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2008
VL 38
IS 15
BP 1601
EP 1620
DI 10.1002/spe.881
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 385JR
UT WOS:000261811000002
DA 2024-07-18
ER

PT J
AU Goldschmidt, DE
   Krishnamoorthy, M
AF Goldschmidt, David E.
   Krishnamoorthy, Mukkai
TI Comparing keyword search to semantic search:: a case study in solving
   crossword puzzles using the Google™ API
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE World Wide Web; semantic web; ontologies; RDF; OWL
AB Keyword-based search engines such as Google (TM) index Web pages for human consumption. Sophisticated as such engines have become, surveys indicate almost 25% of Web searchers are unable to find useful results in the first set of URLs returned (Technology Review, March 2004). The lack of machine-interpretable information on the Web limits software agents from matching human searches to desirable results. Tim Berners-Lee, inventor of the Web, has arcbitected the Semantic Web in which machine-interpretable information provides an automated means to traversing the Web. A necessary cornerstone application is the search engine capable of bringing the Semantic Web together into a searchable landscape. We implemented a Semantic Web Search Engine (SWSE) that performs semantic search, providing predictable and accurate results to queries. To compare keyword search to semantic search, we constructed the Google CruciVerbalist (GCV), which solves crossword puzzles by reformulating clues into Google queries processed via the Google API. Candidate answers are extracted from query results. Integrating GCV with SWSE, we quantitatively show how semantic search improves upon keyword search. Mimicking the human brain's ability to create and traverse relationships between facts, our techniques enable Web applications to 'think' using semantic reasoning, opening the door to intelligent search applications that utilize the Semantic Web. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Goldschmidt, David E.; Krishnamoorthy, Mukkai] Rensselaer Polytech Inst, Troy, NY USA.
C3 Rensselaer Polytechnic Institute
RP Goldschmidt, DE (corresponding author), 161 Manning Blvd, Albany, NY 12203 USA.
EM goldschmidt@gmail.com
CR Alesso HP, 2005, DEV SEMANTIC WEB SER
   [Anonymous], 1999, KEYNOTE TALK LCS 35
   Antoniou Grigoris, 2004, A Semantic Web Primer
   Bergman M., 2001, The deep web: Surfacing hidden value
   Berners-Lee T., 2001, Scientific American May
   Brickley D., 2004, RDF VOCABULARY DESCR
   CONNOLLY D, 2001, DAML OIL REF DESCRIP
   CONNOLLY D, WEB NAMING ADDRESSIN
   CONNOLLY D, ANNOTATED DAML OIL O
   ELGIN B, 2004, BUSINESS WEEK   0503
   FENSEL D, 1923, SPINNING SEMANTIC WE
   GOLDSCHMIDT D, 2004, P IADIS INT C WWW, P385
   Heflin J., REQUIREMENTS WEB ONT
   HOFFMAN J, 2003, CROSSWORDS
   Keim GA, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P710
   Lassila O., Resource description framework (rdf) model and syntax specification
   LAURIE B, APACHE DEFINITIVE GU
   MALESKA E, 1986, CHILDRENS WORD GAMES
   MARUNAS N, 2003, BIG BOOK TV GUIDE CR
   MCBRIDE B, HP LABS SEMANTIC WEB
   MCGUINESS D, OWL WEB ONTOLOGY LAN
   MELNIK S, WORDNET RDF
   PAYNE T, 1999, CROSSWORDS KIDS
   ROUSH W, TECHNOLOGY REV
   Seaborne A., Jena Tutorial, A Programmer's Introduction to RDQL
   SHORTZ W, 2002, NY TIMES EASY CROSSW, V1
   UNDERHILL W, 2000, NEWSWEEK        1030
NR 27
TC 6
Z9 6
U1 0
U2 11
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2008
VL 38
IS 4
BP 417
EP 445
DI 10.1002/spe.840
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 286OD
UT WOS:000254854300004
DA 2024-07-18
ER

PT J
AU Ferragina, P
   Gulli, A
AF Ferragina, P.
   Gulli, A.
TI A personalized search engine based on Web-snippet hierarchical
   clustering
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web-snippet clustering; search engines; personalized Web ranking
AB We propose a (meta-)search engine, called SnakeT (SNippet Aggregation for Knowledge ExtracTion), which queries more than 18 commodity search engines and offers two complementary views on their returned results. One is the classical flat-ranked list, the other consists of a hierarchical organization of these results into folders created on-the-fly at query time and labeled with intelligible sentences that capture the themes of the results contained in them. Users can browse this hierarchy with various goals: knowledge extraction, query refinement and personalization of search results. In this novel form of personalization, the user is requested to interact with the hierarchy by selecting the folders whose labels (themes) best fit her query needs. SnakeT then personalizes on-the-fly the original ranked list by filtering out those results that do not belong to the selected folders. Consequently, this form of personalization is carried out by the users themselves and thus results fully adaptive, privacy preserving, scalable and non-intrusive for the underlying search engines. We have extensively tested SnakeT and compared it against the best available Web-snippet clustering engines. SnakeT is efficient and effective, and shows that a mutual reinforcement relationship between ranking and Web-snippet clustering does exist. In fact, the better the ranking of the underlying search engines, the more relevant the results from which SnakeT distills the hierarchy of labeled folders, and hence the more useful this hierarchy is to the user. Vice versa, the more intelligible the folder hierarchy, the more effective the personalization offered by SnakeT on the ranking of the query results. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Gulli, A.] IAC Search & Media, Ask Com, Pisa, Italy.
   [Ferragina, P.] Dipartimento Informat, Pisa, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto per le Applicazioni
   del Calcolo "Mauro Picone" (IAC-CNR)
RP Gulli, A (corresponding author), IAC Search & Media, Ask Com, Pisa, Italy.
EM gulli@di.unipi.it
RI Ferragina, Paolo/AAZ-2580-2020
OI Ferragina, Paolo/0000-0003-1353-360X; gulli, antonio/0000-0002-1024-2324
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   [Anonymous], 1998, P ACM SIAM S DISCR A
   [Anonymous], 010302 U WASH DEP CO
   [Anonymous], 1998, Computer Networks and ISDN Systems, DOI [DOI 10.1016/S0169-7552(98)00110-X, 10.1016/S0169-7552(98)00110-X]
   [Anonymous], 1999, THESIS U WASHINGTON
   [Anonymous], 1983, INTRO MODERN INFORM
   [Anonymous], 2003, P 12 INT C WORLD WID
   ATTARDI G, 1999, P 8 INT WORLD WID WE, P136
   BHARAT K, 2000, P 9 INT WORLD WID WE, P493
   BHARAT K, 1998, P 7 INT WORLD WID WE, P379
   BRODER Z, 2002, SIGIR FORUM, V36, P3
   Carpineto C., 2004, CONCEPT DATA ANAL TH, V1st, P155
   CHEN H, 2000, P SIGCHI C HUM FACT, P145
   Chirita P.A., 2005, P 28 ACM INT SIGIR C
   CHIRITA PA, 2004, P 3 INT C AD HYP AD, P34
   Cho Junghoo, 2004, WWW'04, Proceedings of the 13th international conference on World Wide Web, P20, DOI DOI 10.1145/988672.988676
   *CNN COM, 2004, BETT SEARCH RES GOOG
   DIGIACOMO E, 2005, P 31 ANN C CURR TREN, P106
   Fagin R., 2004, P 23 ACM SIGMOD SIGA, P47, DOI DOI 10.1145/1055558.1055568
   FALLOWS D, 2004, POPULARITY IMPORTANC
   FERRAGINA P, 2001, P INT C INT AG WEB T
   FRAKES WB, 1992, CLUSTERING ALGORITHM, pCH16
   FREYNE J, 2005, P 3 WORKSH INT TECHN
   FUNG B, 2003, P SIAM INT C DAT MIN, P209
   Giannotti Fosca., 2003, Proceedings of Sistemi Evoluti per Basi di Dati, SEBD'03, P507
   Grabmeier J, 2002, DATA MIN KNOWL DISC, V6, P303, DOI 10.1023/A:1016308404627
   Gulli A., 2005, WWW 05 SPECIAL INTER, P1004
   GULLI A, 2005, P 14 INT C WORLD WID, P902
   Halkidi M, 2001, J INTELL INF SYST, V17, P107, DOI 10.1023/A:1012801612483
   Haveliwala T.H., 2002, WWW 02, P432
   HEARST MA, 1996, P 19 ACM SIGIR INT C
   Henzinger Monika, 2003, P 12 INT C WORLD WID, P1, DOI DOI 10.1145/775152.775154
   JIANG Z, 2002, RETRIEVER IMPROVING, pCH4
   KRITIKOPOULOS A, 2003, P INT TECHN WEB PERS
   KUMAR S, 2002, P 11 INT WORLD WID W, P517
   Kummamuru Krishna., 2004, Proceedings of the 13th international conference on World Wide Web, P658
   Lawrie DawnJ., 2003, Proceedings of the 26th annual international ACM SIGIR conference on Research and development in informaion retrieval, P457, DOI DOI 10.1145/860435.860549
   LAWRIE DJ, 2003, THESIS AMHERST
   MAAREK YS, 2000, 10186 RJ IBM RES
   MEILA M, 2002, 418 U WASH
   Morita M., 1994, P 17 ANN INT ACM SIG, P272
   MOSTAFA J, 2005, SCI AM           FEB
   NAJORK M, 2001, P 10 INT WORLD WID C
   Ntoulas A., 2004, Proceedings of the 13th International Conference on World Wide Web, WWW'04, page, P1, DOI DOI 10.1145/988672.988674
   Osinski S, 2004, ADV SOFT COMP, P369
   Pratt W, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P80
   QIU F, 2006, P 15 INT WORLD WID W
   SARLOS T, 2006, P 15 INT WORLD WID W
   Shen X., 2003, P 26 ANN INT ACM SIG, P377, DOI DOI 10.1145/860500.860509
   Sugiyama Kazunari, 2004, WWW, P675, DOI DOI 10.1145/988672.988764
   Sun Jian-Tao., 2005, PROC WWW 05, P382, DOI DOI 10.1145/1060745.1060803
   TEEVAN J, 2005, WORKSH NEW TECHN PER, P84
   Teevan Jaime, 2004, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, V1, P415, DOI 10.1145/985692.985745
   WANG Y, 2002, P 13 INT C DAT EXP S, P902
   Weiss D, 2003, ADV SOFT COMP, P209
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   Wu YFB, 2003, IKE'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE ENGINEERING, VOLS 1 AND 2, P103
   Zamir O, 1999, COMPUT NETW, V31, P1361, DOI 10.1016/S1389-1286(99)00054-7
   Zeng H.J., 2004, P 27 ANN INT ACM SIG, P210, DOI DOI 10.1145/1008992.1009030
   Zhang D, 2004, LECT NOTES COMPUT SC, V3007, P69
NR 60
TC 34
Z9 48
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2008
VL 38
IS 2
BP 189
EP 225
DI 10.1002/spe.829
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 268SU
UT WOS:000253600500004
DA 2024-07-18
ER

PT J
AU Distler, TJ
   Ouyang, J
AF Distler, Thomas James
   Ouyang, Jinsong
TI Clock synchronization for distributed media applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE clock synchronization; reliable multicast; distributed media
   applications
AB Current video wall technology relies on custom processing hardware to drive the individual display channels. This hardware is both expensive to design and to maintain. Given that modern off-the-shelf computers have a significant amount of computing power, future video displays can be driven with this hardware at a lower cost. By using mass-produced computers and a standard commercial operating system, the benefits of economies of scale can be brought to the custom video wall market. This paper describes a Windows library that provides the synchronized timing support necessary to drive a video wall with consumer hardware. The goal is to provide a key building block for the media software that will process the incoming video stream. This library exports several interfaces to the host software and provides support for synchronized timers, a synchronized clock, and reliable multicast messaging. The library uses common Windows APIs and protocols for maximum interoperability and portability. Through empirical testing, we are able to show that synchronization between any two machines in the system can be maintained to within 12 ms when run on Windows XP SP2. This synchronization is also shown to be consistent even when there is a heavy load on the processor. As a result, this library will successfully allow a commercial video wall to be driven from media software running on consumer hardware and software. (C) 2007 John Wiley & Sons,Ltd.
C1 Calif State Univ Sacramento, Dept Comp Sci, Sacramento, CA 95819 USA.
   Pelco Corp, Clovis, CA 93612 USA.
C3 California State University System; California State University
   Sacramento
RP Ouyang, J (corresponding author), Calif State Univ Sacramento, Dept Comp Sci, 6000 J St, Sacramento, CA 95819 USA.
EM ouyangj@ecs.csus.edu
CR ADAMSON B, 2004, NEGATIVE ACKNOWLEDGE
   ALLEN D, 2005, SCI TIMEKEEPING, P82
   ASAMSON B, 2004, NEGATIVE ACKNOWLEDGM
   *CISC SYST, 2005, INT TECHN HDB, pCH7
   Coulouris G.F., 2005, Distributed Systems: Concepts and Design
   CRISTIAN F, 1989, DISTRIB COMPUT, V3, P146, DOI 10.1007/BF01784024
   GUSELLA R, 1989, IEEE T SOFTWARE ENG, V15, P847, DOI 10.1109/32.29484
   *INT CORP, 2005, IO CONTR HUB 6 DAT, P715
   *INT CORP, 2004, IA PC HPET SPEC
   MARSH D, 2001, TEMPORAL RATE CONVER
   *MICR DEV NETW, 2005, OBT SETT TIM RES
   *MICR DEV NETW FOR, 2005, SUBJ QUER PERF COUNT
   *MICR DEV NETW FOR, 2005, SUBJ HPET SUPP MICR
   *MICR WHDC, 2002, GUID PROV MULT TIM S
   Mills D., 1992, NETWORK TIME PROTOCO
   MILLS D, 1991, IEEE T, V49, P1482
   SURANOVIC S, 2007, INT POLICY TRADE LEC
NR 17
TC 0
Z9 0
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2007
VL 37
IS 14
BP 1489
EP 1514
DI 10.1002/spe.815
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 228JA
UT WOS:000250725000003
DA 2024-07-18
ER

PT J
AU Urgun, B
   Dyreson, CE
   Snodgrass, RT
   Miller, JK
   Kline, N
   Soo, MD
   Jensen, CS
AF Urgun, Bedirhan
   Dyreson, Curtis E.
   Snodgrass, Richard T.
   Miller, Jessica K.
   Kline, Nich.
   Soo, Michael D.
   Jensen, Christian S.
TI Integrating multiple calendars using τZAMAN
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE time; multiple calendars; calendric systems; temporal data types;
   datetime representation
AB Programmers are increasingly interested in developing applications that can be used internationally. Part of the internationalization effort is the ability to engineer applications to use dates and times that conform to local calendars yet can inter-operate with dates and times in other calendars, for instance between the Gregorian and Islamic calendars. tau ZAMAN is a system that provides a natural language-and calendar-independent framework for integrating multiple calendars. tau ZAMAN performs 'runtime-binding' of calendars and language support. A running tau ZAMAN system dynamically loads calendars and language support tables from XML-formatted files. Loading a calendar integrates it with other, already loaded calendars, enabling users of tau ZAMAN to add, compare, and convert times between multiple calendars. tau ZAMAN also provides a flexible, calendar-independent framework for parsing temporal literals. Literals can be input and output in XML or plain text, using user-defined formats, and in different languages and character sets. Finally tau ZAMAN is a client/server system, enabling shared access to calendar servers spread throughout the Web. This paper describes the architecture of tau ZAMAN and experimentally quantifies the cost of using a calendar server to translate and manipulate dates. Copyright (C) 2006 John Wile, & Sons, Ltd.
C1 Washington State Univ, Sch EECS, Pullman, WA 99164 USA.
   Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
   Univ Washington, Dept Comp Sci, Seattle, WA 98195 USA.
   Microsoft Corp, Redmond, WA 98052 USA.
   Amazon Com, Seattle, WA USA.
   Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
C3 Washington State University; University of Arizona; University of
   Washington; University of Washington Seattle; Microsoft; Amazon.com;
   Aalborg University
RP Dyreson, CE (corresponding author), Washington State Univ, Sch EECS, Pullman, WA 99164 USA.
EM cdyreson@eecs.wsu.edu
OI Jensen, Christian Sondergaard/0000-0002-9697-7670; Dyreson,
   Curtis/0000-0003-0236-1515
CR ADIBA M, 1985, P ACM ANN C DENVER, P214
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   Anderson T., 1982, P INT C DAT IMPR US, P273
   ANDERSON TL, 1983, P 2 INT C DAT CAMBR
   BARBIC F, 1985, P ACM SIGMOD INT C M, P51
   BETTINI C, 1998, LECT NOTES COMPUTER, V139, P406
   BETTINI C, 2003, P INT S TEMP REPR RE
   Bettini Claudio., 2000, TIME GRANULARITIES D
   Cameron R. D., 1999, Markup Languages: Theory & Practice, V1, P61, DOI 10.1162/10996629952104377
   Chandra R., 1994, Proceedings. The 10th International Conference Data Engineering (Cat. No.94CH3383-7), P264, DOI 10.1109/ICDE.1994.283040
   Clifford J, 1997, ACM T DATABASE SYST, V22, P171, DOI 10.1145/249978.249980
   Clifford J., 1987, P C TEMP ASP INF SYS, P23
   Date C. J., 1988, SIGMOD Record, V17, P53, DOI 10.1145/51708.51712
   Dyreson CE, 1998, ACM T DATABASE SYST, V23, P1, DOI 10.1145/288086.288087
   Dyreson CE, 2000, IEEE T KNOWL DATA EN, V12, P568, DOI 10.1109/69.868908
   FALLSIDE DC, 2001, XML SCHEMA PART 0 PA
   Fraser J.T., 1987, Time, the familiar stranger
   *IBM CORP, 2002, INT COMP UN ICU
   *ISO, 2000, ISO86012000E INT ORG
   Jensen C.S., 1998, Temporal Databases: Research and Practice, Lecture Notes in Computer Science 1399, P367
   Jensen CS, 1999, IEEE T KNOWL DATA EN, V11, P36, DOI 10.1109/69.755613
   KAKOUDAKIS I, 1996, TR964 UMIST
   Karttunen L., 1996, Natural Language Engineering, V2, P305, DOI 10.1017/S1351324997001563
   KLINE N, 1999, 41 TIMECENTER
   Kolko BE, 2002, IPCC 2002, REFLECTIONS ON COMMUNICATION, PROCEEDINGS, P352, DOI 10.1109/IPCC.2002.1049117
   KRAUS S, 1996, CSTR3751 U AR DEP CO
   Melton J., 1993, UNDERSTANDING NEW SQ
   MONTANARI A, 1992, P INT C 5 GEN COMP S, V2, P702
   NAVRAT P, 1995, SIGPLAN NOTICES, V30, P45, DOI 10.1145/208639.208644
   Ning P, 2002, ANN MATH ARTIF INTEL, V36, P5, DOI 10.1023/A:1015835418881
   OHLBACH HJ, 2003, PROJECT WEBTNSS
   Reingold EdwardM., 2001, CALENDRICAL CALCULAT
   SARDA N, 1993, TEMPORAL DATABASES T, P110
   Soo M, 1993, P WORKSH INFR TEMP D, pFF1
   SOO MD, 1995, ALGEBRA TSQL2, P505
   SOO MD, 1992, 927 U AR COMP SCI DE
   SOO MD, 1992, 32 TEMPIS U AR COMP
   SPERBERGMCQUEEN CM, 1999, MARKUP LANGUAGES, V1, P20
   *SUN MICR, 2003, JAV 2 PLATF STAND ED
   *W3C, 2000, EXT MARK LANG XML 1
   Wang XS, 1997, ACM T DATABASE SYST, V22, P115, DOI 10.1145/249978.249979
   WIEDERHOLD G, 1991, P 3 NORD C ADV INF S
NR 42
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2007
VL 37
IS 3
BP 267
EP 308
DI 10.1002/spe.765
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 145ZS
UT WOS:000244904900003
DA 2024-07-18
ER

PT J
AU Veerman, N
   Verhoeven, EJ
AF Veerman, Niels
   Verhoeven, Ernst-Jan
TI Cobol minefield detection
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cobol; defects analysis; error-prone code; coding standards; code
   restructuring
ID LEGACY; RENOVATION
AB In Cobol, procedures can be programmed in ways that lead to unexpected behaviour and reduced portability. This behaviour is recognized as so-called 'mines': programming practices containing hidden dangers and requiring extreme caution. Cobol mines can be created intentionally or by a programming error, and can be tripped at an unforeseen moment. This leads to minefields in source code with unseen hazards, which complicate understanding and maintenance, and which can lead to costly breakdowns of business critical software systems. We discuss Cobol mines and the dangers that come with them, having implemented a mine detector for Cobol. Our detector was deployed in an industrial situation, and a number of minefields were found in production systems. By restructuring a complex legacy application, we argue that code restructuring can be used to combat minefields. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Vrije Univ Amsterdam, Dept Comp Sci, NL-1081 HV Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP Veerman, N (corresponding author), Vrije Univ Amsterdam, Dept Comp Sci, Boelelaan 1081A, NL-1081 HV Amsterdam, Netherlands.
EM nveerman@cs.vu.nl
CR *AC INC, 1999, ACUCOBOL 85 REF MAN
   [Anonymous], 2002, P 2002 ACM SIGSOFT I
   [Anonymous], P 2 INT WORKSH THEOR
   [Anonymous], P 7 INT WORKSH PROGR
   *ANSI, 1989, INF TECHN PROGR LANG
   BAUMANN P, 1993, IFI9339 U ZUR I INF
   Bergstra J.A., 1989, ALGEBRAIC SPECIFICAT, P1
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   BROWN W, 1999, ANTIPATTERNS REFACTO
   CALLISS FW, 1988, SIGPLAN NOTICES, V23, P13, DOI 10.1145/43895.43897
   *COMP COMP CORP, 2002, COB REF MAN VERS 2 5
   *DEC, 2002, COB REF MAN VERS 2 3
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   FIELDHOUSE J.D., 1999, PROPOSAL PREDICT NOI, P1
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   *FUJ SOFTW CORP, 1996, COB 85 REF MAN
   Gansner Emden, 2006, Technical report
   HEERING J, 1989, SIGPLAN NOTICES, V24, P43, DOI 10.1145/71605.71607
   *IBM CORP, 1995, IBM COB MVS VM LANG
   *IBM CORP, 2000, IBM COB OS 390 VM LA
   *IBM CORP, 2004, IBM ENT COBOL Z OS L
   Kernighan B.W., 1988, The C Programming Language
   Klint P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P176, DOI 10.1145/151257.151260
   Klusener AS, 2005, SCI COMPUT PROGRAM, V54, P143, DOI 10.1016/j.scico.2004.03.012
   KLUSENER S, 2003, P IEEE INT C SOFTW M
   Kort J., 2002, ELECT NOTES THEORETI, V65
   Lämmel R, 2001, SOFTWARE PRACT EXPER, V31, P1395, DOI 10.1002/spe.423
   Lämmel R, 2001, IEEE SOFTWARE, V18, P78, DOI 10.1109/52.965809
   LAMMEL R, 1999, COBOL II GRAMMAR VER
   LEGACY J, 2005, PERCOBOL LANGUAGE RE
   *LIANT SOFTW CORP, 2005, RM COB REF MAN
   MCCONNELL S., 1993, CODE COMPLETE
   *MICR FOC, 2002, MICR FOC COB LANG RE
   *MICR FOC INT LTD, 2002, MICR FOC SERV EXPR P
   RUBIN R, 1986, COMMUN ACM, V30, P195
   Sellink A, 2002, SCI COMPUT PROGRAM, V45, P193, DOI 10.1016/S0167-6423(02)00061-8
   *SIEM NIXD, 1996, COB 85 COB COMP VERS
   SNEED HM, 1999, P 6 IEEE WORK C REV, P204
   van den Brand M, 2000, SCI COMPUT PROGRAM, V36, P209, DOI 10.1016/S0167-6423(99)00037-4
   van Deursen A, 2002, PROG COMPREHEN, P137, DOI 10.1109/WPC.2002.1021335
   van Deursen A, 1999, LECT NOTES COMPUT SC, V1577, P1
   vandenBrand M, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P144, DOI 10.1109/WCRE.1997.624585
   VANDENBRAND MGJ, 2001, LECT NOTES COMPUTER, V2027, P365
   VANDENBRAND MGJ, ASF SDF META ENV
   VANDENBRAND MGJ, 1996, LNCS, V1175, P235
   Veerman N, 2004, J SOFTW MAINT EVOL-R, V16, P219, DOI 10.1002/smr.295
   Verhoef C, 2000, ANN SOFTW ENG, V9, P315, DOI 10.1023/A:1018941228255
   Visser Eelco., 1997, Scannerless Generalized-LR Parsing
   WESSLER J, 1998, COBOL UNLEASHED
NR 50
TC 8
Z9 9
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2006
VL 36
IS 14
BP 1605
EP 1642
DI 10.1002/spe.745
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 103SA
UT WOS:000241905800005
DA 2024-07-18
ER

PT J
AU Hautamäki, J
   Koskimies, K
AF Hautamaki, Juha
   Koskimies, Kai
TI Finding and documenting the specialization interface of an application
   framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE framework; framework specialization; pattern; product-line architecture;
   variability management; variation point
AB This paper presents an approach to find, specify and use the specialization interface of an object-oriented framework as a set of framework-specific patterns. The approach is based on the assumption that the user tries to reuse a framework by setting meaningful goals in the context of their application and then achieves the goals by performing a sequence of programming tasks. The goals can be refined as informal specialization patterns, which are framework-specific descriptions on how to reach a particular specialization goal. Furthermore, the obtained specialization patterns can be transformed into more precise specifications to enable tool support. As a result, the framework user can use both a cookbook-like informal documentation and supporting tools to specialize the framework. Copyright (c) 2006 John Wiley & Sons,Ltd.
C1 Tampere Univ Technol, Inst Software Engn, FIN-33101 Tampere, Finland.
C3 Tampere University
RP Koskimies, K (corresponding author), Tampere Univ Technol, Inst Software Engn, POB 553, FIN-33101 Tampere, Finland.
EM kai.koskimies@tut.fi
CR Alexander C., 1979, The Timeless Way of Building
   Alexander C., 1977, PATTERN LANGUAGE TOW
   Anderson John Robert, 1980, Cognitive Psychology and Its Implications
   [Anonymous], 1995, Design patterns for object-oriented software development
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Anton A.I., 1997, GOAL IDENTIFICATION
   Batory D, 2003, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2003.1201199
   Beck K, 1994, LECT NOTES COMPUTER, V821, P139
   BONNET S, 1999, THESIS TAMPERE U TEC
   Buschmann F., 1996, SYSTEM PATTERNS PATT
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   EDEN A, 2005, P IDPT 2002 SOC DES
   FAYAD M, 1999, BUILDIGN APPL FRAMEW
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GANNIYDA U, 2004, P ASE 2004 LOS AL CA, P78
   Hakala M, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P171, DOI 10.1109/WICSA.2001.948426
   HAKALA M, 2001, LNCS, V2186, P163
   HAMMOUDA I, 2005, P FASE 2005 BERL, P145
   HAMMOUDA I, 2005, PHD THESIS PUBLICATI, V549
   HAUTAMAKI J, 2005, PHD THESIS PUBLICATI, V521
   HURSCH W, 1995, NUCSS9503
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   JOHNSON RE, 1992, P OOPSLA 92 OCT, V27, P63
   Kang Kyo C, 1990, Technical Report
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Lago P, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P261, DOI 10.1109/CSMR.2004.1281428
   LEA D, 1994, ACM SIGSOFT SOFTWARE, V19, P39
   Meszaros G, 1998, SOFTW PATT S, P529
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   PASETTI A, 2002, LECT NOTES COMPUTER, V2231
   REGEV G, 2001, GOAL DRIVEN REQUIREM
   RIEHLE D, 2000, THESIS ETH ZURICH
   Schmidt D.C., 1997, HDB PROGRAMMING LANG, V1
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   VANDEURSEN A, 2002, LECT NOTES COMPUTER, V2379, P217
   VANLAMSWEERDE A, P ICSE 2000 NEW YORK, P5
   VILJAMAA A, 2001, C200152 U HELS DEP C
   VILJAMAA J, 2004, THESIS U HELSINKI
NR 38
TC 2
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2006
VL 36
IS 13
BP 1443
EP 1465
DI 10.1002/spe.728
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 100ZJ
UT WOS:000241708400003
DA 2024-07-18
ER

PT J
AU Barbosa, D
   Mendelzon, AO
AF Barbosa, Denilson
   Mendelzon, Alberto O.
TI Declarative generation of synthetic XML data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XML; synthetic data; benchmarking; probabilistic generative models
AB Synthetic data can be extremely useful in testing and evaluating algorithms, tools and systems. Most synthetic data generators available today are the result of individual benchmarking efforts. Typicallly, these are complex programs in which the specifications of both the structure and the contents of the data are hard-coded. As a result, it is often difficult to customize these tools for producing synthetic data tailored for specific needs. In this article, we describe the ToXgene synthetic data generator, which is a declarative tool for generating realistic XML data for benchmarking as well as testing purposes. We present our template specification language, which consists of augmenting XML Schema with probabilistic models that guide the data-generation process. We discuss the architecture of our current implementation and we argue about ToXgene's usefulness by discussing experimental results as well as describing two projects that use our tool. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
   Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
C3 University of Calgary; University of Toronto
RP Barbosa, D (corresponding author), Univ Calgary, Dept Comp Sci, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM denilson@cpsc.ucalgary.ca
RI Barbosa, Denilson/AAM-8499-2020
CR Abiteboul S., 1999, DATA WEB
   ABITEBOUL S, 1995, FDN DATABASE
   ABOULNAGA A, 2001, P 4 INT WORKSH WEB D, P79
   Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], 2013, Extensible markup language
   Barbosa D, 2005, WORLD WIDE WEB, V8, P413, DOI 10.1007/s11280-005-1544-y
   BARBOSA D, 2005, TRANSLATING BUSINESS
   BARBOSA D, 2001, P WORKSH INF INT WEB, P66
   BARBOSA D, 2003, CSRG474 U TOR
   Barbosa D., 2002, P 5 INT WORKSH WEB D, P49
   Bohme T., 2001, P GERMAN DATABASE C, P264
   Bosak J., 1997, World Wide Web Journal Special issue on XML, V2, P219
   Buneman Peter., 2001, P 10 INT WORLD WIDE, P201
   Christensen E., 2001, WEB SERVICES DESCRIP
   Fallside D.C., 2004, XML SCHEMA 0, VSecond
   Getoor L., 2002, Journal of Machine Learning Research, V3, P679
   Gray J., 1991, The benchmark handbook for database and transaction processing systems, V1st
   Hull R., 2003, Proc. ACM PODS, P1
   Hung E, 2003, PROC INT CONF DATA, P467, DOI 10.1109/ICDE.2003.1260814
   KWEELT SA, 2000, QUERYING XML NEW MIL
   Lee D., 2000, SIGMOD Record, V29, P76, DOI 10.1145/362084.362140
   Russell S., 2016, Artificial intelligence a modern approach
   SALOMAA A, 1969, INFORM CONTROL, V15, P529, DOI 10.1016/S0019-9958(69)90554-3
   Schmidt A., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P974
   Segoufin Luc., 2003, P 2003 ACM S PRINCIP, P167
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   *SUN MICR, 2004, OP OFF
   *T PROC PERF COUNC, 1999, TPC BENCHM H DEC SUP
   Thompson H.S., 2001, Recommendation REC-xmlschema-1-20041028.
   Widom J, 2002, DATABASE SYSTEMS COM
   Yao BB, 2004, PROC INT CONF DATA, P621, DOI 10.1109/ICDE.2004.1320032
NR 31
TC 1
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2006
VL 36
IS 10
BP 1051
EP 1079
DI 10.1002/spe.724
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 072OE
UT WOS:000239681900003
OA Bronze
DA 2024-07-18
ER

PT J
AU Gregor, D
   Schupp, S
AF Gregor, D
   Schupp, S
TI STLlint: lifting static checking from languages to libraries
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE static checking; program verification; interface compilation; generic
   programming; Standard Template Library
AB Traditional static checking centers around finding bugs in programs by isolating cases where the language has been used incorrectly. These language-based checkers do not understand the semantics of software libraries, and therefore cannot be used to detect errors in the use of libraries. In this paper, we introduce STLlint, a program analysis we have implemented for the C++ Standard Template Library and similar, generic software libraries, and we present the general approach that underlies STLlint. We show that static checking of library semantics differs greatly from checking of language semantics, requiring new representations of program behavior and new algorithms. Major challenges include checking the use of generic algorithms, loop analysis for interfaces, and organizing behavioral specifications for extensibility. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Indiana Univ, Dept Comp Sci, Bloomington, IN 47405 USA.
   Chalmers Univ Technol, Dept Comp Sci, SE-41296 Gothenburg, Sweden.
C3 Indiana University System; Indiana University Bloomington; Chalmers
   University of Technology
RP Indiana Univ, Dept Comp Sci, Bloomington, IN 47405 USA.
EM dgregor@cs.indiana.edu
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], POPL, DOI DOI 10.1145/1
   [Anonymous], HPL9511
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2003, STANDARD TEMPLATE LI
   *ANSI ISO IEC, 1998, 148821998 ISOIEC
   Antoy S, 2000, IEEE T SOFTWARE ENG, V26, P55, DOI 10.1109/32.825766
   Arnold K., 1998, JAVA PROGRAMMING LAN
   Austern MatthewH., 1999, AW PRO COMP, V1st
   Bauer C, 2002, J SYMB COMPUT, V33, P1, DOI 10.1006/jsco.2001.0494
   Blume W., 1995, Proceedings 9th International Parallel Processing Symposium (Cat. No.95TH8052), P357, DOI 10.1109/IPPS.1995.395956
   BOURDONCLE F, 1993, LECT NOTES COMPUTER, V735, P128
   CHAN P., 1999, JAVA CLASS LIB SUPPL
   CHIBA S, 1995, P ACM C OBJ OR PROGR, P285
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   *ED DES GROUP, 2005, ED DES GROUP C FRONT
   EMAMI M, 1994, P ACM SIGPLAN 94 C P, P242
   Engler DR, 1999, IEEE T SOFTWARE ENG, V25, P387, DOI 10.1109/32.798327
   Evans D., 1994, P FSE 94, P87, DOI DOI 10.1145/193173.195297
   EVANS D, 2000, 1 INT WORKSH AUT PRO
   FLANAGAN C, 2002, P ACM SIGPLAN 2002 C, P234
   *FREE SOFTW FDN, 2003, GNU COMP COLL
   Ghiya Rakesh., 1996, POPL 96, P1
   GREGOR D, 2004, THESIS RENSSELAER PO
   GREGOR D, 2003, IFIP C P, V243, P127
   GREGOR D, 2003, 0315 RENSS POL I
   Haghighat MR, 1996, ACM T PROGR LANG SYS, V18, P477, DOI 10.1145/233561.233568
   HARRISON WH, 1977, IEEE T SOFTWARE ENG, V3, P243, DOI 10.1109/TSE.1977.231133
   JOHNSON S, 1978, 65 AT T BELL LAB
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOENIG A, 2000, ACCELERATED C
   Kramer R, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P295, DOI 10.1109/TOOLS.1998.711021
   Leavens G., 1996, SPECIFICATION BEHAV, P121
   Liskov B., 1983, CLU REFERENCE MANUAL
   MEYERS S, 1991, EFFECTIVE STL 50 SPE
   Murer S, 1996, ACM T PROGR LANG SYS, V18, P1, DOI 10.1145/225540.225541
   Musser D.R., 2001, STL Tutorial and Reference Guide. C++ Programming with the Standard Template Library, V2nd
   Musser D R., 1989, The Ada generic library: Linear list processing packages
   MUSSER DR, 1994, SOFTWARE PRACT EXPER, V24, P623, DOI 10.1002/spe.4380240703
   RAMALINGAM G, 2002, P ACM SIGPLAN C PROG, P83
   ROSEN BK, 1988, POPL 88, P00012
   SAGIV M, 1996, P 23 ACM S PRINC PRO, P16
   SCHUPP S, 2002, 0202 RPI COMP SCI DE
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   Tatsubori M, 1998, P OOPSLA 98 WORKSH R, P56
   Veldhuizen T. L., 1998, P SIAM WORKSH OBJ OR
   Wang CQ, 1997, IEEE T SOFTWARE ENG, V23, P314, DOI 10.1109/32.588523
   WILLCOCK J, 2001, P 2 WORKSH C TEMPL P
   Wille R., 1981, NATO ADV STUDY I, P445
   Wolfe M., 1992, SIGPLAN Notices, V27, P162, DOI 10.1145/143103.143131
   Zolman L., 2001, C/C++ Users Journal, V19, P24
   [No title captured]
NR 52
TC 17
Z9 20
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2006
VL 36
IS 3
BP 225
EP 254
DI 10.1002/spe.683
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 020MW
UT WOS:000235914600001
DA 2024-07-18
ER

PT J
AU van Ommering, R
AF van Ommering, R
TI Horizontal communication: a style to compose control software
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software components; composition; diversity; product family; product
   population; control software
AB Consumer products become more complex and diverse, integrating functions that were previously available only in separate products. We believe that to build such products efficiently, a compositional approach is required. While this is quite feasible in hardware, we would like to achieve the same in software, especially in the low-level software that drives the hardware. We found this to be possible, but only if we let software components communicate horizontally, exchanging information along software channels that mirror the hardware signal topology. In this paper a concrete protocol implementing this style of control is described and many examples are given of its use. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Philips Res Labs, NL-5656 AA Eindhoven, Netherlands.
C3 Philips; Philips Research
RP van Ommering, R (corresponding author), Philips Res Labs, Prof Holstlaan 4, NL-5656 AA Eindhoven, Netherlands.
EM Rob.van.Ommering@philips.com
CR [Anonymous], 1995, LNCS
   [Anonymous], 1999, Concurrency-state models and Java programs
   BONSANGUE MM, 1998, SAC 98 P 1998 ACM S
   Clements P., 2002, Software product lines
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GELERNTER D, 1992, COMMUN ACM, V35, P96, DOI 10.1145/129630.129635
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   MELLROY MD, 1968, C NATO SCI COMM, P138
   PAPADOPOULOS GA, 1998, ADV COMPUTERS ENG LA, V46
   PERRY DE, 1998, LNCS, V1429, P51
   RITCHIE D, 1979, LECT NOTES COMPUTER, V79, P25
   *TRIM STREAM SOFT, TRIM STREAM SOFTW AR
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   VANOMMERING R, 2002, INT C SOFTW ENG ORL
   VANOMMERING R, 2002, 2 SOFTW PROD LIN C S
NR 16
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2003
VL 33
IS 12
BP 1117
EP 1150
DI 10.1002/spe.541
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 727JN
UT WOS:000185655000002
DA 2024-07-18
ER

PT J
AU Kim, D
   Han, J
   Son, S
   Gil, MS
   Moon, YS
   Won, H
AF Kim, Dasol
   Han, Jiwoo
   Son, Siwoon
   Gil, Myeong-Seon
   Moon, Yang-Sae
   Won, Heesun
TI Demeter: An automatic framework for data migration in open data lakes
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CKAN; data migration; Demeter; open data; open data lake
ID TABLES; SEARCH
AB An open data lake stores various forms and types of open data, and there is an increasing demand to manage raw data in tables rather than files for efficient data exploration and analysis. In this paper, we investigate the data management of open data lakes and recognize the limitations of table migration and related problems. First, open data lakes have problems of preprocessing complexity, scale limitation, and platform dependency due to the traditional data management method and open data characteristics. Second, existing studies for table migration have problems of lack of scalability, migration incompleteness, and scale limitation. In this work, we present a novel automation framework, called Demeter, which solves three problems inherent in open data lakes by expanding automation. Specifically, it supports automating catalog collection and preprocessing tasks to solve preprocessing complexity and scale limitation. It also supports platform universality for representative data platforms through the automation of catalog analysis and detailed processing logic. Demeter then solves three problems in table migration by adopting Airbyte, an open-source ELT platform, and by enhancing automation capability with the Airbyte manager. We verify that Demeter resolves all the problems above through extensive experiments and proves its scalability and universality. In addition, significantly outperforms CKAN by Demeter up to 508.5% in automation performance, up to 207.28% in processing time, and up to 917.17% in migration performance. These results indicate that Demeter is an excellent automation framework that increases the utilization of large-scale open data and supports reliable Internet-scale migration.
C1 [Kim, Dasol; Gil, Myeong-Seon; Moon, Yang-Sae] Kangwon Natl Univ, Dept Comp Sci & Engn, Chunchon, South Korea.
   [Han, Jiwoo; Son, Siwoon; Won, Heesun] ETRI, Future & Basic Technol Res Div, CyberBrain Sect, Daejeon, South Korea.
   [Moon, Yang-Sae; Won, Heesun] Kangwon Natl Univ, Dept Comp Sci & Engn, Chunchon, South Korea.
   [Won, Heesun] ETRI, Future & Basic Technol Res Div, CyberBrain Sect, Daejeon, South Korea.
C3 Kangwon National University; Electronics & Telecommunications Research
   Institute - Korea (ETRI); Kangwon National University; Electronics &
   Telecommunications Research Institute - Korea (ETRI)
RP Moon, YS; Won, H (corresponding author), Kangwon Natl Univ, Dept Comp Sci & Engn, Chunchon, South Korea.; Won, H (corresponding author), ETRI, Future & Basic Technol Res Div, CyberBrain Sect, Daejeon, South Korea.
EM ysmoon@kangwon.ac.kr; hswon@etri.re.kr
FU Institute of Information & communications Technology Planning &
   Evaluation (IITP) [2022-0-00046]; Institute of Information &
   communications Technology Planning & Evaluation (IITP), Korea Government
   (MSIT); National Research Foundation of Korea (NRF) [RS-2023-00242528];
   Korea Government (MSIT)
FX This work was partly supported by the Institute of Information &
   communications Technology Planning & Evaluation (IITP), Korea Government
   (MSIT): 2022-0-00046, Data Ops Framework Technology Development
   Supporting, National Research Foundation of Korea (NRF), and Korea
   Government (MSIT) (RS-2023-00242528).
CR airbus, About us
   [Anonymous], ARCGIS OPEN DATA
   [Anonymous], OPEN DATA PLATFORMS
   [Anonymous], 2023, STATE DATA
   AWS, ABOUT US
   Cafarella MJ, 2008, PROC VLDB ENDOW, V1, P538, DOI 10.14778/1453856.1453916
   Chappell D., 2008, Introducing the azure services platform, an early look at windows azure, .net services
   Chen Z, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P999, DOI 10.1145/3132847.3132882
   Christodoulakis C, 2020, PROC VLDB ENDOW, V13, P2075, DOI 10.14778/3407790.3407810
   Ckan, About us
   Clickhouse, US
   Corlosquet S, 2009, LECT NOTES COMPUT SC, V5823, P763, DOI 10.1007/978-3-642-04930-9_48
   DBT, US
   DKAN, US
   Dong YY, 2021, PROC INT CONF DATA, P456, DOI 10.1109/ICDE51399.2021.00046
   Enríquez-Reyes R, 2021, IEEE ACCESS, V9, P12968, DOI 10.1109/ACCESS.2021.3052025
   Ganino G, 2018, SOFTWARE PRACT EXPER, V48, P2302, DOI 10.1002/spe.2640
   Gao YH, 2018, INT CONF MANAGE DATA, P943, DOI 10.1145/3183713.3183746
   Hsu IC, 2020, SOFTWARE PRACT EXPER, V50, P2293, DOI 10.1002/spe.2892
   Imasheva Baktagul, 2020, Optimization of Complex Systems: Theory, Models, Algorithms and Applications. Advances in Intelligent Systems and Computing (AISC 991), P820, DOI 10.1007/978-3-030-21803-4_82
   Janssen M, 2012, INFORM SYST MANAGE, V29, P258, DOI 10.1080/10580530.2012.716740
   Kim D, 2021, ETRI J, V43, P835, DOI 10.4218/etrij.2020-0298
   Koci E, 2017, LECT NOTES COMPUT SC, V10253, P527, DOI 10.1007/978-3-319-59536-8_33
   Máchová R, 2017, J THEOR APPL EL COMM, V12, P21, DOI 10.4067/S0718-18762017000100003
   Miletic A., 2023, INT J GEO INFORMAT, V12, P1
   Miller RJ, 2018, PROC VLDB ENDOW, V11, P2130, DOI 10.14778/3229863.3240491
   Mitlöhner J, 2016, PROCEEDINGS 2016 2ND INTERNATIONAL CONFERENCE ON OPEN AND BIG DATA - OBD 2016, P72, DOI 10.1109/OBD.2016.18
   Nargesian F, 2019, PROC VLDB ENDOW, V12, P1986, DOI 10.14778/3352063.3352116
   Nargesian F, 2018, PROC VLDB ENDOW, V11, P813, DOI 10.14778/3192965.3192973
   Olawoyin AM, 2021, IEEE INT CONF BIG DA, P5215, DOI 10.1109/BigData52589.2021.9671453
   opencellid, US
   Ouellette P, 2021, PROC VLDB ENDOW, V14, P2863, DOI 10.14778/3476311.3476364
   Park S, 2022, GOV INFORM Q, V39, DOI 10.1016/j.giq.2020.101456
   PostgreSQL, About us
   Roldán JC, 2020, KNOWL-BASED SYST, V190, DOI 10.1016/j.knosys.2019.105157
   Sanchez-Nielsen E, 2021, IEEE ACCESS, V9, P151841, DOI 10.1109/ACCESS.2021.3127472
   Scholz R., 2017, PROC INT C CLOUD COM, P47
   socratic, ABOUT US
   Varon-Capera A., 2018, PROC INT C INFORM SY, P552, DOI DOI 10.1007/978-3-030-03577-8_60
   Wilkinson Mark D, 2016, Sci Data, V3, P160018, DOI 10.1038/sdata.2016.18
   Yaghmazadeh N, 2018, PROC VLDB ENDOW, V11, P580, DOI 10.1145/3177732.3177735
   Zhang Y, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1951, DOI 10.1145/3318464.3389726
   Zhu EK, 2019, INT CONF MANAGE DATA, P847, DOI 10.1145/3299869.3300065
   Zhu EK, 2017, PROC VLDB ENDOW, V10, P1837, DOI 10.14778/3137765.3137788
   Zhu EK, 2016, PROC VLDB ENDOW, V9, P1185
NR 45
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2024
VL 54
IS 5
BP 721
EP 743
DI 10.1002/spe.3294
EA DEC 2023
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NB0V3
UT WOS:001132409900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhong, Y
   Shi, MY
   He, JW
   Fang, CR
   Chen, ZY
AF Zhong, Yi
   Shi, Mengyu
   He, Jiawei
   Fang, Chunrong
   Chen, Zhenyu
TI Security-based code smell definition, detection, and impact
   quantification in Android
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Android code smell; quality assurance; repair priority; security
AB Android's high market share and extensive functionality make its security a significant concern. Research reveals that many security issues are caused by insecure coding practices. As a poor design indicator, code smell threatens the safety and quality assurance of Android applications (apps). Although previous works revealed specific problems associated with code smells, the field still lacks research reflecting Android features. Moreover, the cost and time limit developers to repairing numerous smells timely. We conducted a study, including Definition, Detection, and Impact Quantification for Android code smell (DefDIQ): (1) define 15 novel code smells in Android from a security programming perspective and provide suggestions on how to eliminate or mitigate them; (2) implement DACS (Detect Android Code Smell) to automatically detect the custom code smells based on ASTs; (3) investigate the correlation between individual smells with DACS detection results, select suitable code smells to construct fault counting models, then quantify their impact on quality, and thereby generating code smell repair priorities. We conducted experiments on 4575 open-source apps, and the findings are: (i) Lin's CCC between DACS and manual detection results reaches 0.9994, verifying the validity; (ii) the fault counting model constructed by zero-inflated negative binomial is superior to negative binomial (AIC = 517.32, BIC = 522.12); some smells do indicate fault-proneness, and we identify such avoidable poor designs; (iii) different code smells have different levels of importance and the repair priorities constructed provide a practical guideline for researchers and inexperienced developers.
C1 [Zhong, Yi; Shi, Mengyu; He, Jiawei; Fang, Chunrong; Chen, Zhenyu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Zhong, Yi; Shi, Mengyu; He, Jiawei; Fang, Chunrong; Chen, Zhenyu] Shanghai Key Lab Comp Software Evaluating & Testin, Shanghai, Peoples R China.
   [Zhong, Yi; Shi, Mengyu; He, Jiawei; Fang, Chunrong; Chen, Zhenyu] Nanjing Univ, Shenzhen Res Inst, Shenzhen, Peoples R China.
C3 Nanjing University; Nanjing University
RP Fang, CR; Chen, ZY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM fangchunrong@nju.edu.cn; zychen@nju.edu.cn
RI zhong, yi/IQS-2997-2023; Fang, Chunrong/GPW-9872-2022
OI zhong, yi/0000-0002-9309-3407; Fang, Chunrong/0000-0002-9930-7111; Chen,
   Zhenyu/0000-0002-9592-7022; Shi, Mengyu/0000-0002-3720-6075
FU The authors would like to thank the anonymous reviewers for their
   insightful comments.
FX The authors would like to thank the anonymous reviewers for their
   insightful comments.
CR Alkandari MA, 2021, IEEE ACCESS, V9, P61853, DOI 10.1109/ACCESS.2021.3075040
   Bell RM., P 2006 INT S SOFTW T
   Boutaib S, 2021, EXPERT SYST APPL, V166, DOI 10.1016/j.eswa.2020.114076
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Caudill SB, 2006, EUR J OPER RES, V172, P120, DOI 10.1016/j.ejor.2004.09.031
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Du XT, 2020, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE5003.2020.00010
   Everttt B., 1970, DISTRIBUTIONS STAT D
   Fang C., 29 ACM SIGSOFT INT S
   Fatima I., DETECTION CORRECTION
   Fenske W., 2015, P 9 INT WORKSH VAR M, P3, DOI DOI 10.1145/2701319.2701321
   FIELLER EC, 1957, BIOMETRIKA, V44, P470, DOI 10.2307/2332878
   FLEISS JL, 1969, PSYCHOL BULL, V72, P323, DOI 10.1037/h0028106
   Fowler M., REFACTORING IMPROVIN
   Ghafari M, 2017, IEEE INT WORK C SO, P121, DOI 10.1109/SCAM.2017.24
   Gong A., 2020 IEEE 20 INT C S
   Greene W., 1994, NYU WORKING PAPER EC
   Greenwood, 1920, J R STAT SOC, V83, P255
   Habchi S, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110964
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hecht G., 2 ACM INT C MOB SOFT
   Hecht G., 30 IEEE ACM INT C AU
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Huang ZJ, 2022, SCI COMPUT PROGRAM, V217, DOI 10.1016/j.scico.2022.102778
   Jan Reimann UA., 2014, SOFTW TRENDS, V34
   Kim S., 29 INT C SOFTW ENG I
   Lewowski T, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106783
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   LIN LI, 1989, BIOMETRICS, V45, P255, DOI 10.2307/2532051
   Linares-Vasquez M., P 22 INT C PROGR COM
   Lu Z., 2012 IEEE 36 ANN COM
   Mannan UA., P INT C MOB SOFTW EN
   Mizuno O., ES FSE 07 ORG NEW YO
   Mizuno O., MSR 07 ICSE MINN MN
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Muse BA., 2022, ARXIV
   Olague HM, 2008, J SOFTW MAINT EVOL-R, V20, P171, DOI 10.1002/smr.366
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Palomba F., 24 INT C SOFTW AN EV
   Patnaik Archana, 2021, International Journal of Open Source Software and Processes, V12, P21, DOI 10.4018/IJOSSP.2021040102
   Rahaman S., 2019 ACM SIGSAC C CO
   Rathore SS, 2019, ARTIF INTELL REV, V51, P255, DOI 10.1007/s10462-017-9563-5
   Senanayake J., P 2022 ACM AS C COMP
   Sharma T, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110936
   StatCounter, 2022, MOBILE OPERATING SYS
   Tang YT, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P914, DOI 10.1145/3368089.3409702
   Viega J, 2000, IEEE SOFTWARE, V17, P68, DOI 10.1109/52.877869
   Walter B, 2016, INFORM SOFTWARE TECH, V74, P127, DOI 10.1016/j.infsof.2016.02.003
   Xian Zhang JZ., 2021, RUAN JIAN XUE BAO, V32, P2219
   Zhang H., 2009 IEEE INT C SOFT
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
NR 53
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2023
VL 53
IS 11
BP 2296
EP 2321
DI 10.1002/spe.3257
EA SEP 2023
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U0UL3
UT WOS:001061217600001
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Chakraborty, A
   Kumar, M
   Chaurasia, N
   Gill, SS
AF Chakraborty, Ananya
   Kumar, Mohit
   Chaurasia, Nisha
   Gill, Sukhpal Singh
TI Journey from cloud of things to fog of things: Survey, new trends, and
   research directions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; internet of things; cloud of things; fog computing;
   latency
ID ENERGY-EFFICIENT; RESOURCE-ALLOCATION; SECURITY ISSUES; IOT-CLOUD; BIG
   DATA; INTERNET; ARCHITECTURE; CHALLENGES; FRAMEWORK; PRIVACY
AB With the advent of the Internet of Things (IoT) paradigm, the cloud model is unable to offer satisfactory services for latency-sensitive and real-time applications due to high latency and scalability issues. Hence, an emerging computing paradigm named as fog/edge computing was evolved, to offer services close to the data source and optimize the quality of services (QoS) parameters such as latency, scalability, reliability, energy, privacy, and security of data. This article presents the evolution in the computing paradigm from the client-server model to edge computing along with their objectives and limitations. A state-of-the-art review of Cloud Computing and Cloud of Things (CoT) is presented that addressed the techniques, constraints, limitations, and research challenges. Further, we have discussed the role and mechanism of fog/edge computing and Fog of Things (FoT), along with necessitating amalgamation with CoT. We reviewed the several architecture, features, applications, and existing research challenges of fog/edge computing. The comprehensive survey of these computing paradigms offers the depth knowledge about the various aspects, trends, motivation, vision, and integrated architectures. In the end, experimental tools and future research directions are discussed with the hope that this study will work as a stepping-stone in the field of emerging computing paradigms.
C1 [Chakraborty, Ananya; Kumar, Mohit; Chaurasia, Nisha] Dr BR Ambedkar Natl Inst Technol, Dept Informat Technol, Jalandhar, Punjab, India.
   [Gill, Sukhpal Singh] Queen Mary Univ London, Sch Elect Engn & Comp Sci, London, England.
C3 National Institute of Technology (NIT System); Dr B R Ambedkar National
   Institute of Technology Jalandhar; University of London; Queen Mary
   University London
RP Kumar, M (corresponding author), Dr BR Ambedkar Natl Inst Technol, Jalandhar, Punjab, India.
EM kumarmohit@nitj.ac.in
RI Chaurasia, Nisha/F-8863-2017; Gill, Sukhpal Singh/J-5930-2014; KUMAR,
   MOHIT/GNP-6004-2022
OI Gill, Sukhpal Singh/0000-0002-3913-0369; KUMAR,
   MOHIT/0000-0003-1600-6872; Chakraborty, Ananya/0000-0002-4558-2142
CR Abbasi M, 2020, J GRID COMPUT, V18, P43, DOI 10.1007/s10723-020-09507-1
   Abd El-Latif AA, 2020, IEEE ACCESS, V8, P92687, DOI 10.1109/ACCESS.2020.2992820
   Abd El-Latif AA, 2018, IEEE ACCESS, V6, P10332, DOI 10.1109/ACCESS.2018.2799879
   Abedi M, 2020, 2020 FIFTH INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P218, DOI [10.1109/fmec49853.2020.9144693, 10.1109/FMEC49853.2020.9144693]
   Abreu DP, 2020, SIMUL MODEL PRACT TH, V101, DOI 10.1016/j.simpat.2019.102029
   Adhikari M, 2019, INTERNET THINGS-NETH, V6, DOI 10.1016/j.iot.2019.100053
   Al-Kadhim HM, 2019, IEEE ACCESS, V7, P64641, DOI 10.1109/ACCESS.2019.2917387
   Al-Qamash A, 2018, 2018 INTERNATIONAL CONFERENCE ON COMPUTER AND APPLICATIONS (ICCA), P276, DOI 10.1109/COMAPP.2018.8460443
   Al-Zihad M, 2017, IEEE REG 10 HUMANIT, P516, DOI 10.1109/R10-HTC.2017.8289012
   Alahmad Y., 2018, P 2018 IEEE 37 INT P, DOI [10.1109/PCCC.2018.8711295, DOI 10.1109/PCCC.2018.8711295]
   Aleisa MA, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12104837
   Aleisa MA, 2020, IEEE ACCESS, V8, P83986, DOI 10.1109/ACCESS.2020.2992460
   Alli AA, 2020, INTERNET THINGS-NETH, V9, DOI 10.1016/j.iot.2020.100177
   Alli AA, 2019, INTERNET THINGS-NETH, V7, DOI 10.1016/j.iot.2019.100070
   Alouffi B, 2021, IEEE ACCESS, V9, P57792, DOI 10.1109/ACCESS.2021.3073203
   Alzoubi YI, 2021, SECUR PRIVACY, V4, DOI 10.1002/spy2.145
   Alzoubi YI, 2022, COMPUT COMMUN, V182, P129, DOI 10.1016/j.comcom.2021.11.005
   Amin R, 2020, J PARALLEL DISTR COM, V140, P52, DOI 10.1016/j.jpdc.2020.02.005
   Ari AAA, 2024, APPL COMPUT INFORM, V20, P119, DOI 10.1016/j.aci.2019.11.005
   Armstrong D, 2017, J CLOUD COMPUT-ADV S, V6, DOI 10.1186/s13677-017-0083-2
   Arunarani AR, 2019, FUTURE GENER COMP SY, V91, P407, DOI 10.1016/j.future.2018.09.014
   Asghari P, 2020, J AMB INTEL HUM COMP, DOI 10.1007/s12652-020-01723-7
   Ashtari S, 2017, J COMPUT SCI-NETH, V23, P173, DOI 10.1016/j.jocs.2016.12.007
   Aslanpour MS, 2020, INTERNET THINGS-NETH, V12, DOI 10.1016/j.iot.2020.100273
   Atlam HF, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON INTERNET OF THINGS (ITHINGS) AND IEEE GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) AND IEEE CYBER, PHYSICAL AND SOCIAL COMPUTING (CPSCOM) AND IEEE SMART DATA (SMARTDATA), P670, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData.2017.105
   Badii C, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19010001
   Baldini I., 2017, RES ADV CLOUD COMPUT, P1, DOI DOI 10.1007/978-981-10-5026-8_1
   Balevi E, 2018, IEEE ACCESS, V6, P11173, DOI 10.1109/ACCESS.2018.2808598
   Barik RK, 2018, PROCEDIA COMPUT SCI, V125, P647, DOI 10.1016/j.procs.2017.12.083
   Barros C., 2020, J INF SYST ENG MANAG, V5
   Ben Daoud W, 2019, HUM-CENT COMPUT INFO, V9, DOI 10.1186/s13673-019-0188-3
   Bendechache M, 2020, FUTURE INTERNET, V12, DOI 10.3390/fi12060095
   Bhatia M, 2019, COMPUT IND, V111, P51, DOI 10.1016/j.compind.2019.06.002
   Bittencourt L, 2018, INTERNET THINGS-NETH, V3-4, P134, DOI 10.1016/j.iot.2018.09.005
   Buyya R., 2013, MASTERING CLOUD COMP, P111
   Buyya R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241737
   Caiza G, 2020, HELIYON, V6, DOI 10.1016/j.heliyon.2020.e03706
   Cao K., 2019, IEEE T COMPUT DES IN, V70, P1
   Chalapathi G., 2019, ARXIV
   Chegini H, 2021, IOT-BASEL, V2, P92, DOI 10.3390/iot2010006
   Chenthara S, 2019, IEEE ACCESS, V7, P74361, DOI 10.1109/ACCESS.2019.2919982
   da Silva R. A. C., 2018, 2018 IEEE Frontiers in Education Conference (FIE), P1
   Dagar Rahul, 2018, 2018 International Conference on Inventive Research in Computing Applications (ICIRCA). Proceedings, P1052, DOI 10.1109/ICIRCA.2018.8597264
   Dao NN, 2017, IEEE ACCESS, V5, P14548, DOI 10.1109/ACCESS.2017.2712138
   Das P, 2020, 2020 IEEE 3RD 5G WORLD FORUM (5GWF), P218, DOI 10.1109/5GWF49715.2020.9221330
   Deng RL, 2016, IEEE INTERNET THINGS, V3, P1171, DOI 10.1109/JIOT.2016.2565516
   Dewangan Bhupesh Kumar, 2019, Procedia Computer Science, V152, P204, DOI 10.1016/j.procs.2019.05.044
   Dizdarevic J, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3292674
   Du JB, 2019, IEEE T VEH TECHNOL, V68, P1757, DOI 10.1109/TVT.2018.2882991
   Du JB, 2018, IEEE T COMMUN, V66, P1594, DOI 10.1109/TCOMM.2017.2787700
   Dubey K, 2015, 2015 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER ENGINEERING AND APPLICATIONS (ICACEA), P66, DOI 10.1109/ICACEA.2015.7164647
   El Azzaoui A, 2020, IEEE ACCESS, V8, P145918, DOI 10.1109/ACCESS.2020.3014356
   Eramo V, 2019, IEEE ACCESS, V7, P46898, DOI 10.1109/ACCESS.2019.2908990
   Fan K, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17071695
   Fard MV, 2020, IET SOFTW, V14, P638, DOI 10.1049/iet-sen.2019.0338
   Feng SH, 2021, IEEE T CLOUD COMPUT, V9, P995, DOI 10.1109/TCC.2019.2896632
   Fernández-Caramés TM, 2020, IEEE ACCESS, V8, P21091, DOI 10.1109/ACCESS.2020.2968985
   Gao HY, 2020, WIREL COMMUN MOB COM, V2020, DOI 10.1155/2020/6136298
   Ghomi EJ, 2017, J NETW COMPUT APPL, V88, P50, DOI 10.1016/j.jnca.2017.04.007
   Gialinou E., 2019, INT J COMPUT APPL, V177, P1
   Gill HK, 2020, MULTIMED TOOLS APPL, V79, P10733, DOI 10.1007/s11042-020-08649-4
   Gill SS, 2022, INTERNET THINGS-NETH, V19, DOI 10.1016/j.iot.2022.100514
   Gill SS, 2020, J SYST SOFTWARE, V166, DOI 10.1016/j.jss.2020.110596
   Gill SS, 2019, INTERNET THINGS-NETH, V8, DOI 10.1016/j.iot.2019.100118
   Gill SS, 2018, J NETW SYST MANAG, V26, P361, DOI 10.1007/s10922-017-9419-y
   Gomathi RM., 2018 ICCCSP, V2018, P1
   Valadares DCG, 2022, INTERNET THINGS-NETH, V19, DOI 10.1016/j.iot.2022.100543
   Guan ZT, 2017, IEEE INTERNET THINGS, V4, P1934, DOI 10.1109/JIOT.2017.2690522
   Gundu S.R., 2020, SN Computer Science, V1, P1, DOI [10.1007/s42979-020-00277-x, DOI 10.1007/S42979-020-00277-X]
   Guo T, 2018, MULTIMEDIA SYST, V24, P73, DOI 10.1007/s00530-017-0536-y
   Gupta A., 2020, J AMB INTEL HUM COMP, V12
   Haghighi V, 2018, IEEE ACCESS, V6, P11849, DOI 10.1109/ACCESS.2018.2808411
   Hasan R, 2018, FUTURE GENER COMP SY, V86, P821, DOI 10.1016/j.future.2017.11.024
   Hassan N, 2019, IEEE ACCESS, V7, P127276, DOI 10.1109/ACCESS.2019.2938534
   Hassanzadeh-Nazarabadi Y, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SMART CLOUD (SMARTCLOUD), P289, DOI 10.1109/SmartCloud.2016.45
   Hellerstein Joseph M., 2018, Serverless computing: One step forward, two steps back
   Hong CH., 2018, SENSORS SWITZERLAND, V18, P1
   Hong CH, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3326066
   Hu PF, 2017, J NETW COMPUT APPL, V98, P27, DOI 10.1016/j.jnca.2017.09.002
   Hussein SA, 2020, J INF SECUR APPL, V51, DOI 10.1016/j.jisa.2019.102412
   Jia M, 2019, IEEE INTERNET THINGS, V6, P4252, DOI 10.1109/JIOT.2018.2875743
   Jiang ZF, 2015, IEEE ACCESS, V3, P2306, DOI 10.1109/ACCESS.2015.2499300
   Karimiafshar A, 2020, IEEE INTERNET THINGS, V7, P10912, DOI 10.1109/JIOT.2020.2993276
   Khan T, 2018, IEEE 20TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS / IEEE 16TH INTERNATIONAL CONFERENCE ON SMART CITY / IEEE 4TH INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (HPCC/SMARTCITY/DSS), P1043, DOI 10.1109/HPCC/SmartCity/DSS.2018.00173
   Khansari ME, 2020, J SUPERCOMPUT, V76, P5578, DOI 10.1007/s11227-019-03095-y
   Khodkari H, 2017, INT SYM NETWO COMP
   Kholidy HA, 2020, COMPUT COMMUN, V151, P133, DOI 10.1016/j.comcom.2019.12.028
   Khoshkholghi MA, 2017, IEEE ACCESS, V5, P10709, DOI 10.1109/ACCESS.2017.2711043
   Kim HW, 2016, WIRELESS PERS COMMUN, V91, P1635, DOI 10.1007/s11277-015-3093-8
   Kim S, 2018, IEEE ACCESS, V6, P52047, DOI 10.1109/ACCESS.2018.2870132
   Krishnaveni S, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.5272
   Kumar Mohit, 2018, Computers & Electrical Engineering, V69, P395, DOI 10.1016/j.compeleceng.2017.11.018
   Kumar M., 2018, LOAD BALANCING ALGOR, V14, P276
   Kumar M, 2019, J NETW COMPUT APPL, V143, P1, DOI 10.1016/j.jnca.2019.06.006
   Kumar M, 2018, SUSTAIN COMPUT-INFOR, V19, P147, DOI 10.1016/j.suscom.2018.06.002
   Kumar M, 2017, ADV INTELL SYST, V547, P313, DOI 10.1007/978-981-10-3325-4_31
   Kumar P, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3281010
   Kumari S., 2017, FOG COMPUTING CHARAC, V6, P113
   Lera I, 2019, IEEE INTERNET THINGS, V6, P3641, DOI 10.1109/JIOT.2018.2889511
   Li CL, 2020, J NETW COMPUT APPL, V152, DOI 10.1016/j.jnca.2019.102518
   Li GS, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19092122
   Li HR, 2019, REAL TIM SYST SYMP P, P30, DOI 10.1109/RTSS46320.2019.00014
   Li LP, 2019, IEEE ACCESS, V7, P9490, DOI 10.1109/ACCESS.2019.2891567
   Liang QL, 2020, IEEE ACCESS, V8, P160549, DOI 10.1109/ACCESS.2020.3019946
   Lindsay D, 2021, COMPUTING, V103, P1859, DOI 10.1007/s00607-020-00900-y
   Liu BF, 2019, ADV ENG INFORM, V42, DOI 10.1016/j.aei.2019.100984
   Liu XC, 2020, FRONT COMPUT SCI-CHI, V14, DOI 10.1007/s11704-019-9130-0
   Londhe A., 2018, PROC 2018 4 INT C CO, P2018
   Maati B., 2019, J AMB INTEL HUM COMP, V2020, P1
   Mahmoud MME, 2018, COMPUT ELECTR ENG, V67, P58, DOI 10.1016/j.compeleceng.2018.02.047
   Mahmud R., 2018, Internet of Everything, P103, DOI [10.1007/978-981-10-5861-5_5, DOI 10.1007/978-981-10-5861-5_5]
   Mahmud R, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3403955
   Mahmud R, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3186592
   Malarvizhi N, 2020, WIRELESS PERS COMMUN, V115, P27, DOI 10.1007/s11277-020-07553-2
   Mandal R, 2020, J SUPERCOMPUT, V76, P7374, DOI 10.1007/s11227-020-03165-6
   Mann ZA, 2021, COMPUTING, V103, P51, DOI 10.1007/s00607-020-00848-z
   Marahatta A, 2019, MOBILE NETW APPL, V24, P1063, DOI 10.1007/s11036-018-1062-7
   Martin JP, 2020, J AMB INTEL HUM COMP, V11, P5259, DOI 10.1007/s12652-020-01854-x
   Martinez I, 2020, IEEE INTERNET THINGS, V7, P5504, DOI 10.1109/JIOT.2020.2979705
   Maswood MMS, 2020, IEEE ACCESS, V8, P113737, DOI 10.1109/ACCESS.2020.3003263
   Mekala MS, 2017, 2017 INTERNATIONAL CONFERENCE ON MICROELECTRONIC DEVICES, CIRCUITS AND SYSTEMS (ICMDCS)
   Mell P, 2010, COMMUN ACM, V53, P50
   Meng XL, 2017, IEEE ACCESS, V5, P21355, DOI 10.1109/ACCESS.2017.2748140
   Mengistu TM, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P359, DOI 10.1109/CLOUD.2018.00052
   Miah SJ, 2017, TELEMAT INFORM, V34, P311, DOI 10.1016/j.tele.2016.05.008
   Mishra Sambit Kumar, 2018, 2018 International Conference on Information Technology (ICIT), P284, DOI 10.1109/ICIT.2018.00064
   Mishra SK, 2018, SUSTAIN COMPUT-INFOR, V20, P48, DOI 10.1016/j.suscom.2018.01.002
   Mouradian C, 2018, IEEE COMMUN SURV TUT, V20, P416, DOI 10.1109/COMST.2017.2771153
   Moustafa N., 2019, ARXIV
   Mseddi A, 2019, IEEE INTERNET THINGS, V6, P10028, DOI 10.1109/JIOT.2019.2935056
   Saad M, 2017, IEEE ACCESS, V5, P4418, DOI 10.1109/ACCESS.2017.2682499
   Mukherjee M, 2020, IEEE T IND INFORM, V16, P6050, DOI 10.1109/TII.2019.2957129
   Mukherjee M, 2018, IEEE COMMUN SURV TUT, V20, P1826, DOI 10.1109/COMST.2018.2814571
   Mukherjee M, 2017, IEEE ACCESS, V5, P19293, DOI 10.1109/ACCESS.2017.2749422
   Naghshnejad M, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P762, DOI 10.1109/CLOUD.2018.00104
   Namasudra S, 2020, COMPUT COMMUN, V151, P539, DOI 10.1016/j.comcom.2019.12.041
   Nan YC, 2018, J PARALLEL DISTR COM, V112, P53, DOI 10.1016/j.jpdc.2017.09.009
   Nan Y, 2017, IEEE ACCESS, V5, P23947, DOI 10.1109/ACCESS.2017.2766165
   Nasirian S, 2019, COMPUT COMMUN, V147, P159, DOI 10.1016/j.comcom.2019.08.004
   Nath SB., 2018, ARXIV
   Nawaz F, 2018, FUTURE GENER COMP SY, V84, P78, DOI 10.1016/j.future.2018.02.025
   Nawaz F, 2017, 2017 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2017), P971, DOI 10.1145/3106426.3109431
   Nazir D., 2018, INT J COMPUT SCI ENG, V6, P540
   Neagu G, 2017, E-HEALTH BIOENG CONF, P53, DOI 10.1109/EHB.2017.7995359
   Nguyen DC, 2020, IEEE COMMUN SURV TUT, V22, P2521, DOI 10.1109/COMST.2020.3020092
   Ning ZL, 2019, IEEE COMMUN MAG, V57, P72, DOI 10.1109/MCOM.2018.1700895
   Okay FY, 2018, IEEE INTERNET THINGS, V5, P4871, DOI 10.1109/JIOT.2018.2882781
   Oma R, 2018, INTERNET THINGS-NETH, V1-2, P14, DOI 10.1016/j.iot.2018.08.003
   Pessoa MAO, 2018, IEEE IND ELEC, P2902, DOI 10.1109/IECON.2018.8592774
   Pooranian Z, 2017, IEEE INT CONF MOB, P604, DOI 10.1109/MASS.2017.33
   Praveena A, 2017, 2017 INTERNATIONAL CONFERENCE OF ELECTRONICS, COMMUNICATION AND AEROSPACE TECHNOLOGY (ICECA), VOL 2, P289, DOI 10.1109/ICECA.2017.8212819
   Priya V, 2019, APPL SOFT COMPUT, V76, P416, DOI 10.1016/j.asoc.2018.12.021
   Prokhorenko V, 2020, IEEE ACCESS, V8, P28078, DOI 10.1109/ACCESS.2020.2971007
   Puthal D, 2019, IEEE CONSUM ELECTR M, V8, P92, DOI 10.1109/MCE.2019.2893674
   Qazi K, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P900, DOI 10.1109/CLOUD.2018.00131
   La QD, 2019, DIGIT COMMUN NETW, V5, P3, DOI 10.1016/j.dcan.2018.10.008
   Pham QV, 2020, IEEE ACCESS, V8, P116974, DOI 10.1109/ACCESS.2020.3001277
   Rafique H, 2019, IEEE ACCESS, V7, P115760, DOI 10.1109/ACCESS.2019.2924958
   Rodrigo A, 2019, DATA SCI ENG, V4, P223, DOI 10.1007/s41019-019-00100-5
   Roy S, 2022, INTERNET THINGS-NETH, V19, DOI 10.1016/j.iot.2022.100557
   Sadri AA, 2021, J NETW COMPUT APPL, V174, DOI 10.1016/j.jnca.2020.102882
   Samann F.E. F., 2021, Journal of Applied Science and Technology Trends, V2, P29, DOI DOI 10.38094/JASTT20190
   Santos J, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19102238
   Shakarami A, 2021, CLUSTER COMPUT, V24, P2545, DOI 10.1007/s10586-021-03283-7
   Shankar K, 2020, J. Intell. Syst. Internet Things, V1, P61, DOI 10.54216/jisiot.010201
   Sharma G, 2020, J AMB INTEL HUM COMP, V11, P1771, DOI 10.1007/s12652-019-01225-1
   Sharma PK, 2018, IEEE ACCESS, V6, P115, DOI 10.1109/ACCESS.2017.2757955
   Sharma SK, 2020, IEEE ACCESS, V8, P56948, DOI 10.1109/ACCESS.2020.2980369
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Singh A, 2017, J NETW COMPUT APPL, V79, P88, DOI 10.1016/j.jnca.2016.11.027
   Singh S, 2016, J NETW COMPUT APPL, V75, P200, DOI 10.1016/j.jnca.2016.09.002
   Singh SP, 2019, J SUPERCOMPUT, V75, P2070, DOI 10.1007/s11227-018-2701-2
   Sivagami VM, 2019, FUTURE GENER COMP SY, V98, P35, DOI 10.1016/j.future.2018.11.002
   Skarlat O, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P89, DOI 10.1109/ICFEC.2017.12
   Sood SK, 2018, WORLD WIDE WEB, V21, P1601, DOI 10.1007/s11280-018-0525-x
   Sridevi Gutta, 2020, Intelligent Computing and Innovation on Data Science. Proceedings of ICTIDS 2019. Lecture Notes in Networks and Systems (LNNS 118), P761, DOI 10.1007/978-981-15-3284-9_88
   Stavrinides GL, 2019, MULTIMED TOOLS APPL, V78, P24639, DOI 10.1007/s11042-018-7051-9
   Stergiou C, 2018, FUTURE GENER COMP SY, V78, P964, DOI 10.1016/j.future.2016.11.031
   Stergiou C, 2018, SUSTAIN COMPUT-INFOR, V19, P174, DOI 10.1016/j.suscom.2018.06.003
   Sun HY, 2020, PEER PEER NETW APPL, V13, P548, DOI 10.1007/s12083-019-00783-7
   Sun Y, 2018, WIRELESS PERS COMMUN, V102, P1369, DOI 10.1007/s11277-017-5200-5
   Talia D, 2013, COMPUTER, V46, P98, DOI 10.1109/MC.2013.162
   Tanaka F, 2020, FOOD CHEM, V303, DOI 10.1016/j.foodchem.2019.125381
   Taneja Mohit, 2017, 2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), P1222, DOI 10.23919/INM.2017.7987464
   Tao M, 2018, FUTURE GENER COMP SY, V78, P1040, DOI 10.1016/j.future.2016.11.011
   Tärneberg W, 2016, INT CONF UTIL CLOUD, P63, DOI 10.1145/2996890.2996911
   Tota, 2021, SENSORS-BASEL, V4
   Toth A., 2021, COMMUNICATION INFORM, P1, DOI [10.1109/KIT52904.2021.9583760, DOI 10.1109/KIT52904.2021.9583760]
   Nguyen TG, 2019, IEEE ACCESS, V7, P107678, DOI 10.1109/ACCESS.2019.2932438
   Tuli S, 2020, FUTURE GENER COMP SY, V106, P595, DOI 10.1016/j.future.2020.01.038
   Uchibayashi T, 2019, IEEE 17TH INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP / IEEE 17TH INT CONF ON PERVAS INTELLIGENCE AND COMP / IEEE 5TH INT CONF ON CLOUD AND BIG DATA COMP / IEEE 4TH CYBER SCIENCE AND TECHNOLOGY CONGRESS (DASC/PICOM/CBDCOM/CYBERSCITECH), P360, DOI 10.1109/DASC/PiCom/CBDCom/CyberSciTech.2019.00073
   Ujjwal KC, 2019, INT J DISAST RISK RE, V38, DOI 10.1016/j.ijdrr.2019.101188
   Ul Islam MS, 2021, J NETW COMPUT APPL, V180, DOI 10.1016/j.jnca.2021.103008
   Varghese B, 2018, FUTURE GENER COMP SY, V79, P849, DOI 10.1016/j.future.2017.09.020
   Voorsluys W., 2011, Cloud Computing: Principles and Paradigms, P1, DOI DOI 10.1002/9780470940105.CH1
   Wang F., 2020, IEEE WIRELESS COMMUN, DOI [10.1109/LWC.2020.3028585, DOI 10.1109/LWC.2020.3028585]
   Wang K, 2020, IEEE T NETW SCI ENG, V7, P263, DOI 10.1109/TNSE.2018.2859307
   Wang Y., 2020, EURASIP J WIREL COMM, V1, P2020
   Wazid M, 2020, J NETW COMPUT APPL, V150, DOI 10.1016/j.jnca.2019.102496
   Wu YL, 2021, IEEE INTERNET THINGS, V8, P2300, DOI 10.1109/JIOT.2020.3025916
   Xiao Y, 2018, IEEE J SEL AREA COMM, V36, P2390, DOI 10.1109/JSAC.2018.2872287
   Xu JW, 2018, FRONT INFORM TECH EL, V19, P1546, DOI 10.1631/FITEE.1800519
   Yan H, 2019, INFORM SCIENCES, V477, P30, DOI 10.1016/j.ins.2018.10.020
   Yang JR, 2021, J PLANT GROWTH REGUL, V40, P91, DOI 10.1007/s00344-020-10078-4
   Yang YF, 2022, IEEE T INF FOREN SEC, V17, P317, DOI 10.1109/TIFS.2022.3140657
   Yao JJ, 2019, IEEE INTERNET THINGS, V6, P8262, DOI 10.1109/JIOT.2019.2922585
   Yi S., 2015, P 2015 WORKSH MOB BI, P37, DOI [DOI 10.1145/2757384.2757397, 10.1145/2757384.2757397]
   Yi SH, 2015, 2015 THIRD IEEE WORKSHOP ON HOT TOPICS IN WEB SYSTEMS AND TECHNOLOGIES (HOTWEB), P73, DOI 10.1109/HotWeb.2015.22
   Yogi MK., 2017, ARXIV
   Yousefpour A, 2019, J SYST ARCHITECT, V98, P289, DOI 10.1016/j.sysarc.2019.02.009
   Zahoor S, 2018, SUSTAINABILITY-BASEL, V10, DOI 10.3390/su10062079
   Zhang PY, 2018, FUTURE GENER COMP SY, V88, P16, DOI 10.1016/j.future.2018.05.008
   Zhang XQ, 2019, J SYST SOFTWARE, V147, P147, DOI 10.1016/j.jss.2018.09.084
   Zhu W, 2017, FUTURE GENER COMP SY, V69, P66, DOI 10.1016/j.future.2016.10.034
NR 214
TC 11
Z9 11
U1 5
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 496
EP 551
DI 10.1002/spe.3157
EA OCT 2022
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000871214000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Kwon, S
   Park, J
   Lee, T
   Oh, S
   Lee, JH
AF Kwon, Soonhong
   Park, Jaehyoung
   Lee, Taeyang
   Oh, SungHeun
   Lee, Jong-Hyouk
TI Decentralized identifier based illegal digital content distribution
   tracking system using the format-preserving encryption algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE decentralized identity; forensic watermarking; format-preserving
   encryption; illegal digital content distribution tracking system
AB The coronavirus pandemic, which first began in December 2019, has completely changed our daily lives. In particular, daily online digital content consumption over the world has soared since the start of the coronavirus pandemic. For preventing illegal digital content distribution, various technologies have been applied, but current copyright protection technologies are still lacking to provide secure digital content distribution while preserving privacy. In this article, we introduce a new digital content distribution system, which utilizes blockchain-based decentralized identifier and format-preserving encryption to enable user privacy preserved digital content tracking. We present the system architecture with detailed message flows of the proposal and provide its analysis result in terms of security and overhead.
C1 [Kwon, Soonhong; Lee, Taeyang; Lee, Jong-Hyouk] Sejong Univ, Dept Comp & Informat Secur & Convergence Engn Int, Seoul, South Korea.
   [Park, Jaehyoung] Sejong Univ, Protocol Engn Lab, Seoul, South Korea.
   [Oh, SungHeun] DigiCAP, Tech Res Ctr, Seoul, South Korea.
C3 Sejong University; Sejong University
RP Lee, JH (corresponding author), Sejong Univ, Dept Comp & Informat Secur & Convergence Engn Int, Seoul, South Korea.
EM jonghyouk@sejong.ac.kr
FU Ministry of Culture, Sports and Tourism; Korea Creative Content Agency
   [CR202104006]
FX Ministry of Culture, Sports and Tourism; Korea Creative Content Agency,
   Grant/Award Number: CR202104006
CR [Anonymous], WATERMARK FORENSICMA
   [Anonymous], MARKANY HOMEPAGE
   [Anonymous], FORENSIC WATERMARKIN
   [Anonymous], PALLYCON HOMEPAGE
   [Anonymous], 2021, KISA CYBER SECURITY
   [Anonymous], 2021 ANN REPORT COPY
   [Anonymous], DECENTRALIZED IDENTI
   Bellare M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P444, DOI 10.1145/2976749.2978390
   Hu YJ, 2004, 2004 IEEE INTERNATIONAL SYMPOSIUM ON CIRCUITS AND SYSTEMS, VOL 5, PROCEEDINGS, P584
   Jang W, 2020, INT J DISTRIB SENS N, V16, DOI 10.1177/1550147720914779
   JiHwan-Lim, 2018, [Journal of the Korea Institute Of Information and Communication Engineering, 한국정보통신학회논문지], V22, P805, DOI 10.6109/jkiice.2018.22.5.805
   JinHo K., 2004, ELECT TELECOMMUN TRE, V19, P74
   Kim Geun-Hyung, 2021, [Journal of Digital Contents Society, 디지털콘텐츠학회논문지], V22, P483, DOI 10.9728/dcs.2021.22.3.483
   Lee JH, 2018, IEEE ACCESS, V6, P2274, DOI 10.1109/ACCESS.2017.2782733
   Puthal D, 2022, COMPUT ELECTR ENG, V99, DOI 10.1016/j.compeleceng.2022.107754
   Puthal D, 2019, J PARALLEL DISTR COM, V124, P60, DOI 10.1016/j.jpdc.2018.10.007
   Soonhong K., 2021, P KOREAN I INFORM SE
   Sooyong Jeong, 2017, Journal of KIISE, V44, P860, DOI 10.5626/JOK.2017.44.8.860
   TTA, TTAKKO120359 2
   TTAK, 2015, TTAKKO120275
   Wonyoung, 2021, J KOREAN I COMMUN IN, V46, P420
   Zheng ZB, 2017, IEEE INT CONGR BIG, P557, DOI 10.1109/BigDataCongress.2017.85
   양세열, 2008, [Journal of Internet Computing and Services, 인터넷정보학회논문지], V9, P81
NR 23
TC 2
Z9 2
U1 2
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2024
VL 54
IS 7
SI SI
BP 1275
EP 1293
DI 10.1002/spe.3148
EA SEP 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TC7Y2
UT WOS:000849507300001
DA 2024-07-18
ER

PT J
AU Hassan, S
   Bahsoon, R
   Buyya, R
AF Hassan, Sara
   Bahsoon, Rami
   Buyya, Rajkumar
TI Systematic scalability analysis for microservices granularity adaptation
   design decisions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE goal-oriented analysis; guidance; microservices; scalability; systematic
   analysis
ID REQUIREMENTS
AB Microservices have gained wide recognition and acceptance in software industries as an emerging architectural style for autonomous, scalable and more reliable computing. A critical problem related to microservices is reasoning about the suitable granularity level of a microservice (i.e., when and how to merge or decompose microservices). Although scalability is pronounced as one of the major factors for adoption of microservices, there is a general gap of approaches that systematically analyse the dimensions and metrics, which are important for scalability-aware granularity adaptation decisions. To the best of our knowledge, the state-of-art in reasoning about microservice granularity adaptation is neither: (1) driven by microservice-specific scalability dimensions and metrics nor (2) follow systematic scalability analysis to make scalability-aware adaptation decisions. In this article, we address the aforementioned problems using a two-fold contribution. Firstly, we contribute to a working catalogue of microservice-specific scalability dimensions and metrics. Secondly, we describe a novel application of scalability goal-obstacle analysis for the context of reasoning about microservice granularity adaptation. We analyse both contributions by comparing their usage on a hypothetical microservice architecture against ad-hoc scalability assessment for the same architecture. This analysis shows how both contributions can aid making scalability-aware granularity adaptation decisions.
C1 [Hassan, Sara] Birmingham City Univ, Sch Comp Sci & Digital Technol, Birmingham, W Midlands, England.
   [Bahsoon, Rami] Univ Birmingham, Sch Comp Sci, Birmingham, W Midlands, England.
   [Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Parkville, Vic, Australia.
C3 Birmingham City University; University of Birmingham; University of
   Melbourne
RP Hassan, S (corresponding author), Birmingham City Univ, Sch Comp & Digital Technol, Curzon St, Birmingham B4 7XG, W Midlands, England.
EM sara.hassan@bcu.ac.uk
RI Buyya, Rajkumar/C-3424-2009
OI Buyya, Rajkumar/0000-0001-9754-6496
CR Abdullah M, 2019, J SYST SOFTWARE, V151, P243, DOI 10.1016/j.jss.2019.02.031
   Ahmadvand M, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P68, DOI [10.1109/REW.2016.026, 10.1109/REW.2016.14]
   Al-Rebiesh F., 2016, THESIS U BIRMINGHAM
   [Anonymous], 2007, RIT KAOS TUTORIAL
   [Anonymous], 2018, MICROSERVICES PATTER
   Avritzer A, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110564
   Bakshi K, 2017, AEROSP CONF PROC
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Calcado P., 2018, LAYERING MICROSERVIC
   Calcado P., NO FREE LUNCH INDEED
   Chen FW, 2021, SOFTWARE PRACT EXPER, V51, P1483, DOI 10.1002/spe.2967
   de Cerqueira LD., 2010, THESIS U COLL LONDON
   Dehghani Zhamak, 2015, ZHAMAK DEHGHANI REAL
   Do NH, 2017, CONF INNOV CLOUD, P72, DOI 10.1109/ICIN.2017.7899252
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Duboc L., 2007, P THE 6 JOINT M EURO, P375, DOI [10.1145/1287624.1287679, DOI 10.1145/1287624.1287679]
   Duboc L, 2013, IEEE T SOFTWARE ENG, V39, P119, DOI 10.1109/TSE.2012.12
   Edmund J., 1999, Model checking
   Fowler M., 2004, STRANGLER APPL
   Fowler M, 2004, EVENT INTERCEPTION
   Freire AFAA, 2021, SOFTWARE PRACT EXPER, V51, P1280, DOI 10.1002/spe.2956
   Godwin S, 2016, CLOUD BASED MICROSER
   Hassan S, 2020, SOFTWARE PRACT EXPER, V50, P1651, DOI 10.1002/spe.2869
   Hassan S, 2016, P IEEE I C SERV COMP, P813, DOI 10.1109/SCC.2016.113
   Iffland D., 2016, QA INTUITS ALEX BALA
   Jogalekar P, 2000, IEEE T PARALL DISTR, V11, P589, DOI 10.1109/71.862209
   Jogalekar PP, 1997, TELETRAF SCI ENG, V2, P101, DOI 10.1016/S1388-3437(97)80016-9
   Joseph CT, 2019, SOFTWARE PRACT EXPER, V49, P1448, DOI 10.1002/spe.2729
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   Knoche H, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.2141035
   Krause L., 2015, Microservices: Patterns and Applications: Designing Fine-Grained Services by Applying Patterns
   Kulkarni N, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P423, DOI 10.1109/SERVICES-1.2008.86
   Levcovitz A., TECHNIQUE EXTRACTING
   Mustafa O, 2017, P SUST DIAL INT C SU
   Newman S., 2015, BUILDING MICROSERVIC
   Nygard M., 2007, Release It!: Design and Deploy Production-Ready Software
   Penchikala S, 2017, SUSANNE KAISER MICRO
   Penchikala S., 2017, MANAGING DATA MICROS
   Posta C., 2015, LOW RISK MONOLITH MI
   Posta C, 2017, HARDEST PART MICROSE
   Probst K, 2016, ENG TRADE OFFS NETFL
   Reinhold E, 2016, LESSONS LEARNED UBER
   SAATY RW, 1987, MATH MODELLING, V9, P161, DOI 10.1016/0270-0255(87)90473-8
   Srirama SN, 2020, J NETW COMPUT APPL, V160, DOI 10.1016/j.jnca.2020.102629
   Steinacker G., 2015, MONOLITHS MICROSERVI
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   Taneja M, 2019, SOFTWARE PRACT EXPER, V49, P1055, DOI 10.1002/spe.2704
   Tonse Sudhir, 2015, Scalable Microservices at Netflix. Challenges and Tools of the Trade
   U. S. D. of Defense, 2006, RISK MANAGEMENT GUID
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   Vlaovic S, 2016, NETFLIX BILLING MIGR
   Wagner T, 2015, MICROSERVICES SERVER
   Watson C., 2015, A microscope on microservices (accessed 01/2021)
   Wolff Eberhard, 2016, Microservices: Flexible Software Architecture
NR 55
TC 6
Z9 7
U1 5
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2022
VL 52
IS 6
BP 1378
EP 1401
DI 10.1002/spe.3069
EA JAN 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1A1RT
UT WOS:000748766800001
OA Green Published, Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU He, J
   Zhou, J
   Wang, HY
   Cai, L
AF He, Jing
   Zhou, Jun
   Wang, Haoyu
   Cai, Li
TI DACA: Distributed adaptive grid decision graph based clustering
   algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive grid division; clustering algorithms; decision graphs;
   distributed; KD-tree
ID BIG DATA
AB Clustering algorithms play a very important role in machine learning. With the development of big-data artificial intelligence, distributed parallel algorithms have become an important research field. To reduce the computational complexity and running time of large-scale datasets in the clustering process, this study proposes a distributed clustering algorithm DACA (distributed adaptive grid decision graph based clustering algorithm). In a distributed environment, DACA uses relative entropy to adaptively mesh the data to form an obvious sparse grid and dense grid. Then, the decision graph is used to determine the cluster center mesh object. Finally, the KD-tree is used to accelerate the determination of the cluster center of sparse points to complete clustering. The algorithm is implemented using the popular Apache Spark computing framework, compared with other distributed clustering algorithms, DACA can adaptively divide the grid according to the data distribution to obtain better clustering effect. At the same time, KD tree algorithm is used to speed up the decision-making of clustering center. Numerous experiments show that the DACA algorithm has excellent performance and accuracy on six standard datasets and real GPS trajectory datasets.
C1 [He, Jing; Zhou, Jun; Wang, Haoyu; Cai, Li] Yunnan Univ, Natl Pilot Sch Software, Kunming, Yunnan, Peoples R China.
C3 Yunnan University
RP Cai, L (corresponding author), Yunnan Univ, Natl Pilot Sch Software, Kunming, Yunnan, Peoples R China.
EM caili@ynu.edu.cn
OI zhou, jun/0000-0002-5294-8296
CR [Anonymous], 2019, DOCUMENTATION S SPAR
   Chang H, 2008, PATTERN RECOGN, V41, P191, DOI 10.1016/j.patcog.2007.04.010
   Chen G., 2019, INT J HIGH PERFORM C, V13, P417
   Chen JC, 2018, ADV NEUR IN, V31
   Chen M, 2014, MOBILE NETW APPL, V19, P171, DOI 10.1007/s11036-013-0489-0
   Corizzo R, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0207-2
   Deng C, 2016, CONCURR COMP-PRACT E, V28, P3096, DOI 10.1002/cpe.3580
   Dharavath R, 2019, SOC NETW ANAL MIN, V9, DOI 10.1007/s13278-019-0573-y
   Ghani NA, 2019, COMPUT HUM BEHAV, V101, P417, DOI 10.1016/j.chb.2018.08.039
   Guha S, 2001, INFORM SYST, V26, P35, DOI 10.1016/S0306-4379(01)00008-4
   He YB, 2014, FRONT COMPUT SCI-CHI, V8, P83, DOI 10.1007/s11704-013-3158-3
   Liu RH, 2019, NEUROCOMPUTING, V330, P223, DOI 10.1016/j.neucom.2018.06.058
   Liu R, 2017, PROCEDIA COMPUT SCI, V107, P442, DOI 10.1016/j.procs.2017.03.138
   Malondkar A., 2018, INFORM SCI, V496, P5
   Markiewicz M, 2019, INT J DATA WAREHOUS, V15, P1, DOI 10.4018/IJDWM.2019100101
   Mukherjee S, 2019, AAAI CONF ARTIF INTE, P4610
   Olabelurin A, 2015, IEEE INT C NETW SENS, P315, DOI 10.1109/ICNSC.2015.7116055
   Oliva Gabriele, 2013, ARXIV13124176
   Park HS, 2009, EXPERT SYST APPL, V36, P3336, DOI 10.1016/j.eswa.2008.01.039
   Patwary MMA, 2013, INT CONF HIGH PERFOR, DOI 10.1145/2503210.2503255
   Roghani H, 2021, EXPERT SYST APPL, V183, DOI 10.1016/j.eswa.2021.115377
   [王飞 Wang Fei], 2017, [小型微型计算机系统, Journal of Chinese Computer Systems], V38, P1034
   XiaoKang C., 2014, J GUANGDONG U TECHNO, V31, P119
   Zhang JJ, 2019, PROC CVPR IEEE, P5468, DOI 10.1109/CVPR.2019.00562
   Zhang T., 1996, BIRCH EFFICIENT DATA, V25, P103, DOI [DOI 10.1145/233269.233324, 10.1145/235968.233324]
   Zhang Y, 2018, J INFORMETR, V12, P1099, DOI 10.1016/j.joi.2018.09.004
   Zhang Yonglai, 2019, Journal of Computer Applications, V39, P1869, DOI 10.11772/j.issn.1001-9081.2019010174
   Zhang YL, 2019, SOC NETW ANAL MIN, V9, DOI 10.1007/s13278-019-0609-3
NR 28
TC 1
Z9 2
U1 2
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2022
VL 52
IS 5
BP 1199
EP 1215
DI 10.1002/spe.3060
EA DEC 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0G4IQ
UT WOS:000736119700001
DA 2024-07-18
ER

PT J
AU Mahmood, Y
   Kama, N
   Azmi, A
   Khan, AS
   Ali, M
AF Mahmood, Yasir
   Kama, Nazri
   Azmi, Azri
   Khan, Ahmad Salman
   Ali, Mazlan
TI Software effort estimation accuracy prediction of machine learning
   techniques: A systematic performance evaluation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE effort estimation accuracy; ensemble techniques; machine learning;
   software development; software effort estimation; solo methods
ID FUNCTIONAL SIZE; APPROXIMATION; MODEL
AB Software effort estimation accuracy is a key factor in effective planning, controlling, and delivering a successful software project within budget and schedule. The overestimation and underestimation both are the key challenges for future software development, henceforth there is a continuous need for accuracy in software effort estimation. The researchers and practitioners are striving to identify which machine learning estimation technique gives more accurate results based on evaluation measures, datasets and other relevant attributes. The authors of related research are generally not aware of previously published results of machine learning effort estimation techniques. The main aim of this study is to assist the researchers to know which machine learning technique yields the promising effort estimation accuracy prediction in software development. In this article, the performance of the machine learning ensemble and solo techniques are investigated on publicly and non-publicly domain datasets based on the two most commonly used accuracy evaluation metrics. We used the systematic literature review methodology proposed by Kitchenham and Charters. This includes searching for the most relevant papers, applying quality assessment (QA) criteria, extracting data, and drawing results. We have evaluated a state-of-the-art accuracy performance of 35 selected studies (17 ensemble, 18 solo) using mean magnitude of relative error and PRED (25) as a set of reliable accuracy metrics for performance evaluation of accuracy among two techniques to report the research questions stated in this study. We found that machine learning techniques are the most frequently implemented in the construction of ensemble effort estimation (EEE) techniques. The results of this study revealed that the EEE techniques usually yield a promising estimation accuracy than the solo techniques.
C1 [Mahmood, Yasir; Kama, Nazri; Azmi, Azri] Univ Teknol Malaysia, Razak Fac Technol & Informat, Adv Informat Dept, Kuala Lumpur 54100, Malaysia.
   [Mahmood, Yasir; Khan, Ahmad Salman] Univ Lahore, Fac Informat Technol, Dept Software Engn, Lahore, Pakistan.
   [Ali, Mazlan] Univ Teknol Malaysia, Razak Fac Technol & Informat, Perdana Ctr, Kuala Lumpur, Malaysia.
C3 Universiti Teknologi Malaysia; University of Lahore; Universiti
   Teknologi Malaysia
RP Mahmood, Y (corresponding author), Univ Teknol Malaysia, Razak Fac Technol & Informat, Adv Informat Dept, Kuala Lumpur 54100, Malaysia.
EM mahmood.yasir@graduate.utm.my
RI MAHMOOD, YASIR/AAT-4367-2020; Kama, Nazri/K-5656-2012; AZMI,
   AZRI/GLN-5576-2022
OI MAHMOOD, YASIR/0000-0003-1578-5229; Khan, Ahmad
   Salman/0000-0001-5935-360X
FU Universiti Teknologi Malaysia [Q.K130000.2556.21H14]
FX Universiti Teknologi Malaysia, Grant/Award Number: Q.K130000.2556.21H14
CR Albrech A., 1979, PROC JOINT SHAREGUID, P83
   Alhazmi O. H., 2020, J. Softw. Eng. Appl, V13, P143, DOI [10.4236/jsea.2020.137010, DOI 10.4236/JSEA.2020.137010]
   [Anonymous], 2009, 20926 ISOIEC
   Arnuphaptrairong T., 2018, LECT NOTES ENG COMPU, V2203, P730
   Azzeh M, 2016, APPL SOFT COMPUT, V49, P981, DOI 10.1016/j.asoc.2016.05.008
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   BaniMustafa A, 2018, INT CONF COMP SCI, P249, DOI 10.1109/CSIT.2018.8486222
   Barbara Ann K., 2007, GUIDLINES PERFORMING, P2
   Bardsiri VK, 2013, ENG APPL ARTIF INTEL, V26, P2624, DOI 10.1016/j.engappai.2013.08.005
   Borandag E, 2016, INT J COMPUT APPL T, V53, P309, DOI 10.1504/IJCAT.2016.076777
   Britto R, 2014, INT CONF GLOBAL SOFT, P135, DOI 10.1109/ICGSE.2014.11
   Chandrasekaran R., 2012, International Journal of Computer Applications, V44, P38
   COSMIC FFP Measurement Manual, 2020, COSMIC IMPL GUID IS
   Demirors O, 2009, IEEE SOFTWARE, V26, P71, DOI 10.1109/MS.2009.60
   Carbonera CE, 2020, IET SOFTW, V14, P328, DOI 10.1049/iet-sen.2018.5334
   Elish MO, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/312067
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Gray A, 1997, 1997 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY - NAFIPS, P394, DOI 10.1109/NAFIPS.1997.624073
   Hidmi O., 2017, International Journal of Computing, Communication and Instrumentation Engineering, V4, P143
   Hussain I, 2013, DATA KNOWL ENG, V85, P2, DOI 10.1016/j.datak.2012.06.005
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Jodpimai P, 2018, INT J COMPUT APPL T, V58, P17, DOI 10.1504/IJCAT.2018.10015262
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kamal MW., 2011, Int J New Comput Architect Appl, V1, P953
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Khan MZ., 2020, INVERTIS J SCI TECHN, V13, P33, DOI DOI 10.5958/2454-762X.2020.00004.9
   Kocaguneli E, 2013, EMPIR SOFTW ENG, V18, P1, DOI 10.1007/s10664-011-9189-1
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Lavazza LA., 2012, P 7 INT C SOFTW ENG
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P623, DOI 10.1016/j.infsof.2014.01.015
   Mahmood Y, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2245
   Malgonde O, 2019, EMPIR SOFTW ENG, V24, P1017, DOI 10.1007/s10664-018-9647-0
   Mendes E., 2008, COST ESTIMATION TECH, DOI [10.4018/978-1-59904-135-3, DOI 10.4018/978-1-59904-135-3]
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Nagar Chetan, 2012, INT J COMPUTER APPL, V52, P1
   Ochodek M, 2016, INFORM SOFTWARE TECH, V80, P73, DOI 10.1016/j.infsof.2016.08.007
   Ozkan B., 2008, SOFTWARE PROCESS IMP
   Pai DR, 2013, J COMPUT INFORM SYST, V53, P49, DOI 10.1080/08874417.2013.11645650
   Patil LV., 2014, P 2014 IEEE INT ADV
   PMI's (Project Management Institute), SUCC RAT RIS TRANSF
   Sabrjoo S., 2015, P 2015 2 INT C KNOWL
   Seni G., 2010, Ensemble Methods in Data Mining: Improving Accuracy through Combining Predictions
   Silhavy P, 2019, ADV INTELL SYST, V984, P444, DOI 10.1007/978-3-030-19807-7_43
   Silhavy R, 2018, INFORM SOFTWARE TECH, V97, P1, DOI 10.1016/j.infsof.2017.12.009
   Toka D., 2013, P 2013 39 EUR C SOFT
   Tronto IFDB., 2007, P 2007 INT JOINT C N
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 51
TC 43
Z9 43
U1 8
U2 30
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 39
EP 65
DI 10.1002/spe.3009
EA JUN 2021
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000662067200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Keiser, J
   Lemire, D
AF Keiser, John
   Lemire, Daniel
TI Validating UTF-8 in less than one instruction per byte
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE character encoding; text processing; Unicode; vectorization
AB The majority of text is stored in UTF-8, which must be validated on ingestion. We present the lookupalgorithm, which outperforms UTF-8 validation routines used in many libraries and languages by more than 10 times using commonly available single-instruction-multiple-data instructions. To ensure reproducibility, our work is freely available as open source software.
C1 [Keiser, John] Microsoft, Redmond, WA USA.
   [Lemire, Daniel] Univ Quebec TELUQ, DOT Lab Res Ctr, Montreal, PQ H2S 3L5, Canada.
C3 Microsoft; University of Quebec; Universite TELUQ
RP Lemire, D (corresponding author), Univ Quebec TELUQ, DOT Lab Res Ctr, Montreal, PQ H2S 3L5, Canada.
EM lemire@gmail.com
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922
FU National Research Council Canada [RGPIN-2017-03910]
FX National Research Council Canada, Grant/Award Number: RGPIN-2017-03910
CR [Anonymous], 2019, CAPEC80 MITRE CORP
   Cai Y, 2019, UTILS OPTIMIZE UTF 8
   Cameron RD, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P91, DOI 10.1145/1345206.1345222
   Cameron RobertD., 2008, CASCON '08: Proceedings of the 2008 conference of the center for advanced studies on collaborative research, P222, DOI [10.1145/1463788.1463811., DOI 10.1145/1463788.1463811]
   Cebrian JM, 2012, 2012 SC COMPANION: HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SCC), P675, DOI 10.1109/SC.Companion.2012.93
   Collet Y., 2020, LZ4 EXTREMELY FAST C
   Hoefler T, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807644
   Hu┬hrmann B., 2010, FLEXIBLE EC UTF 8 DE
   Jiang P, 2017, ACM SIGPLAN NOTICES, V52, P179, DOI [10.1145/3155284.3018760, 10.1145/3018743.3018760]
   Karp R, 1972, COMPLEXITY COMPUTER, V40, P85, DOI 10.1007/978-3-540-68279-08
   Langdale G, 2019, VLDB J, V28, P941, DOI 10.1007/s00778-019-00578-5
   Mühlbauer T, 2013, PROC VLDB ENDOW, V6, P1702
   Mula W, 2020, SOFTWARE PRACT EXPER, V50, P89, DOI 10.1002/spe.2777
   Mula W, 2018, ACM T WEB, V12, DOI 10.1145/3132709
   Mytkowicz T, 2014, ACM SIGPLAN NOTICES, V49, P529, DOI 10.1145/2541940.2541988
   Nuzman D, 2006, ACM SIGPLAN NOTICES, V41, P132, DOI 10.1145/1133981.1133997
   Pohl A, 2020, PERFORM EVALUATION, V140, DOI 10.1016/j.peva.2020.102106
   Singh T, 2019, IITM J MANAG IT, V10, P65
   Stephens N, 2017, IEEE MICRO, V37, P26, DOI 10.1109/MM.2017.35
   Suneja N, 2019, IEEE SOFTWARE, V36, P96, DOI 10.1109/MS.2019.2909854
   Xia X, 2013, IEEE INT C ENG COMP, P222, DOI 10.1109/ICECCS.2013.40
   Yergeau F, 2015, UTF 8 TRANSFORMATION
NR 22
TC 5
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 950
EP 964
DI 10.1002/spe.2920
EA OCT 2020
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000583321400001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Wu, JMT
   Li, ZC
   Srivastava, G
   Tasi, MH
   Lin, JCW
AF Wu, Jimmy Ming-Tai
   Li, Zhongcui
   Srivastava, Gautam
   Tasi, Meng-Hsiun
   Lin, Jerry Chun-Wei
TI A graph-based convolutional neural network stock price prediction with
   leading indicators
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE convolutional neural network; options and futures of stocks; prediction;
   stock history
ID MENTION HYPERGRAPH; ALGORITHMS
AB The stock market is a capitalistic haven where the issued shares are transferred, traded, and circulated. It bases stock prices on the issue market, however, the structure and trading activities of the stock market are much more complicated than the issue market itself. Therefore, making an accurate prediction becomes an intricate as well as highly difficult task. On the other hand, because of the potential benefits of stock prediction, it attracts generation after generation of scholars as well as investors to continuously develop various prediction methods from different perspectives, a myriad of theories, a multitude of investment strategies, and different practical experiences. In this article, aiming at the task of time series (financial) feature extraction and prediction of price movements, a new convolutional novel neural network that can be called a framework to improve the prediction accuracy of stock trading is proposed. The method that is proposed is called SSACNN, a short form of stock sequence array convolutional neural network. SSACNN collects data including historical data of prices and its leading indicators (options/futures) for a stock to take an array as the input graph of the convolutional neural network framework. In our experimental results, five Taiwanese and American stocks were used as a benchmark to compare with the previous algorithms and proposed algorithm, the motion prediction performance of SSACNN has been improved significantly and proved that it has the potential to be applied in the real financial market.
C1 [Wu, Jimmy Ming-Tai; Li, Zhongcui] Shandong Univ Sci & Technol, Coll Comp Sci & Engn, Jinan, Shandong, Peoples R China.
   [Srivastava, Gautam] Brandon Univ, Dept Math & Comp Sci, Brandon, MB, Canada.
   [Srivastava, Gautam] China Med Univ, Res Ctr Interneural Comp, Taichung, Taiwan.
   [Tasi, Meng-Hsiun] Natl Chung Hsing Univ, Dept Management Informat Syst, Taichung, Taiwan.
   [Lin, Jerry Chun-Wei] Western Norway Univ Appl Sci, Dept Comp Sci Elect Engn & Math Sci, Inndalsveien 28, N-5063 Bergen, Norway.
C3 Shandong University of Science & Technology; Brandon University; China
   Medical University Taiwan; National Chung Hsing University; Western
   Norway University of Applied Sciences
RP Lin, JCW (corresponding author), Western Norway Univ Appl Sci, Dept Comp Sci Elect Engn & Math Sci, Inndalsveien 28, N-5063 Bergen, Norway.
EM jerrylin@ieee.org
RI Srivastava, Gautam/N-5668-2019; Wu, Jimmy/IQU-8501-2023; wu,
   jimmy/KDP-2256-2024; Lin, Jerry Chun-Wei/C-1514-2011
OI Srivastava, Gautam/0000-0001-9851-4103; Lin, Jerry
   Chun-Wei/0000-0001-8768-9709
FU Natural Sciences and Engineering Research Council of Canada
FX This research was partially supported by the Natural Sciences and
   Engineering Research Council of Canada through a Discovery Grant held by
   Dr. Gautam Srivastava.
CR [Anonymous], 1992, P IJCNN
   [Anonymous], 2014, J. Comput. Inform. Syst
   [Anonymous], 2014, STANFORD U DEP COMPU
   Bao W, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0180944
   Chen CH, 2017, KNOWL-BASED SYST, V125, P146, DOI 10.1016/j.knosys.2017.03.018
   Chen CH, 2016, J INF SCI ENG, V32, P1657
   Chen K, 2015, PROCEEDINGS 2015 IEEE INTERNATIONAL CONFERENCE ON BIG DATA, P2823, DOI 10.1109/BigData.2015.7364089
   Chou YH, 2014, IEEE ACCESS, V2, P883, DOI 10.1109/ACCESS.2014.2352261
   de Oliveira FA, 2013, EXPERT SYST APPL, V40, P7596, DOI 10.1016/j.eswa.2013.06.071
   Di Persio Luca, 2016, International Journal of Circuits, Systems and Signal Processing, V10, P403
   Ding X, 2015, P INT JOINT C ART IN
   Djenouri Y, 2021, IEEE T IND INFORM, V17, P2947, DOI 10.1109/TII.2020.3001493
   Fischer T, 2018, EUR J OPER RES, V270, P654, DOI 10.1016/j.ejor.2017.11.054
   Gardner MW, 1998, ATMOS ENVIRON, V32, P2627, DOI 10.1016/S1352-2310(97)00447-0
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Gunduz H, 2017, KNOWL-BASED SYST, V137, P138, DOI 10.1016/j.knosys.2017.09.023
   Hagenau M, 2013, DECIS SUPPORT SYST, V55, P685, DOI 10.1016/j.dss.2013.02.006
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hoseinzade E, 2019, EXPERT SYST APPL, V129, P273, DOI 10.1016/j.eswa.2019.03.029
   Hu P, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9214514
   Huang Ko-Wei., 2019, Data Science and Pattern Recognition, V3, P1
   Khaidem L., 2016, APPL MATH FINANCE
   Kim KJ, 2000, EXPERT SYST APPL, V19, P125, DOI 10.1016/S0957-4174(00)00027-0
   Kuo SY, 2013, P IEEE C EV COMP CAN, P1029
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lin JCW, 2020, NEUROCOMPUTING, V403, P431, DOI 10.1016/j.neucom.2020.04.102
   Lin JCW, 2019, ENG APPL ARTIF INTEL, V85, P175, DOI 10.1016/j.engappai.2019.06.005
   Lin JCW, 2019, INFORM SCIENCES, V496, P53, DOI 10.1016/j.ins.2019.04.059
   Long W, 2019, KNOWL-BASED SYST, V164, P163, DOI 10.1016/j.knosys.2018.10.034
   Nelson DMQ, 2017, IEEE IJCNN, P1419, DOI 10.1109/IJCNN.2017.7966019
   Pan JS, 2019, PROCESSES, V7, DOI 10.3390/pr7110845
   Pan JY, 2019, INT J INTERCULT REL, V69, P1, DOI 10.1016/j.ijintrel.2018.12.002
   Pang XW, 2020, J SUPERCOMPUT, V76, P2098, DOI 10.1007/s11227-017-2228-y
   Rani S., 2012, Int. J. Comput. Appl., V52, P1, DOI DOI 10.5120/8282-1278
   TAYLOR MP, 1992, J INT MONEY FINANC, V11, P304, DOI 10.1016/0261-5606(92)90048-3
   Tsai HH., 2017, DATA SCI PATTERN REC, V1, P48
   Williams RJ, 1989, NEURAL COMPUT, V1, P270, DOI 10.1162/neco.1989.1.2.270
   Xianggao Cai, 2012, Proceedings of the 2012 IEEE International Conference on Computer Science and Automation Engineering (CSAE 2012), P80, DOI 10.1109/CSAE.2012.6272913
   Yong B.X., 2017, MODELING DESIGN SIMU, P356, DOI DOI 10.1007/978-981-10-6463-031
   Zhong X, 2017, EXPERT SYST APPL, V67, P126, DOI 10.1016/j.eswa.2016.09.027
NR 40
TC 38
Z9 38
U1 4
U2 55
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2021
VL 51
IS 3
SI SI
BP 628
EP 644
DI 10.1002/spe.2915
EA OCT 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QH1RQ
UT WOS:000583203700001
DA 2024-07-18
ER

PT J
AU Zhao, HT
   Zhu, YY
   Tang, JW
   Han, Z
   Aujla, GS
AF Zhao, Haitao
   Zhu, Yinyang
   Tang, Jiawen
   Han, Zhe
   Aujla, Gagangeet Singh
TI Message-sensingclassified transmission scheme based on mobile edge
   computing in the Internet of Vehicles
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE message transmission; mobile edge computing; secure messages; task
   offloading; vehicle communication
ID INTELLIGENT TRANSPORTATION SYSTEM; ALGORITHM; MECHANISM
AB With the rapid development of intelligent transportation, vehicle terminals generate a large number of data messages that need to be processed in real time, and the required computing and storage resources far exceed the load capacity of vehicle terminals. Mobile edge computing enables data resources to be processed near device terminals, and provides low-latency and high-reliability computing services to meet the power and service quality requirements of terminal devices. Therefore, in order to achieve better data resource management, this paper introduces mobile edge computing technology, and mainly researches secure message transmission optimization algorithms based on mobile edge computing. Firstly, we prioritize secure messages through the analytic hierarchy process. This can guarantee that the most urgent messages get the highest transmission level. Secondly, we establish an optimal task offloading model of delay and energy loss by assigning different weight factors to delay and energy loss. The Lagrangian relaxation method is used to transform the nonconvex problem into a convex problem. We use greedy algorithm to solve the main problem. Finally, the vehicle transmits secure messages through the topology of the local network within its defined communication range. Performance evaluation results show that the scheme not only reduces the redundant transmission of messages, but also improves the performance of end-to-end delay and message deliver success ratio of secure messages.
C1 [Zhao, Haitao; Zhu, Yinyang; Tang, Jiawen; Han, Zhe] Nanjing Univ Posts & Telecommun, Coll Telecommun & Informat Engn, Nanjing, Peoples R China.
   [Aujla, Gagangeet Singh] Newcastle Univ, Sch Comp, Newcastle Upon Tyne, Tyne & Wear, England.
   [Aujla, Gagangeet Singh] Chandigarh Univ, Comp Sci & Engn Dept, Mohali, India.
C3 Nanjing University of Posts & Telecommunications; Newcastle University -
   UK; Chandigarh University
RP Zhao, HT (corresponding author), Nanjing Univ Posts & Telecommun, Coll Telecommun & Informat Engn, Nanjing, Peoples R China.
EM zhaoht@njupt.edu.cn
RI Aujla, Gagangeet Singh/Q-9907-2019
OI Aujla, Gagangeet Singh/0000-0002-2870-8938
FU Six talents High Peaks Class B Funding Project of Jiangsu Province
   [DZXX-041]; Key Laboratory of Wireless Sensor Networks and
   Communications, Shanghai Institute of Microsystem and Information
   Technology, Chinese Academy of Science [20190906]; Postgraduate Research
   & Practice Innovation Program of Jiangsu Province [KYCX19_0949]; Jiangsu
   Province University Natural Science Research Major Project
   [18KJA510005]; Jiangsu Provincial Association for Science and Technology
   Talents Entrustment Project; National Natural Science Foundation of
   China [61771252]; Natural Science Foundation Project of Jiangsu Province
   [BK20171444]; Object of Jiangsu Province 5th 333 Project
FX The Six talents High Peaks Class B Funding Project of Jiangsu Province,
   Grant/Award Number: DZXX-041; Key Laboratory of Wireless Sensor Networks
   and Communications, Shanghai Institute of Microsystem and Information
   Technology, Chinese Academy of Science, Grant/Award Number: 20190906;
   Postgraduate Research & Practice Innovation Program of Jiangsu Province,
   Grant/Award Number: KYCX19_0949; The Jiangsu Province University Natural
   Science Research Major Project, Grant/Award Number: 18KJA510005; The
   Jiangsu Provincial Association for Science and Technology Talents
   Entrustment Project; The National Natural Science Foundation of China,
   Grant/Award Number: 61771252; The Natural Science Foundation Project of
   Jiangsu Province, Grant/Award Number: BK20171444; The Object of Jiangsu
   Province 5th 333 Project
CR Cao H., 2019, IEEE IOT J, V99, P1
   Cao HT, 2020, IEEE T IND INFORM, V16, P1406, DOI 10.1109/TII.2019.2936074
   Cao HT, 2019, IEEE ACCESS, V7, P39721, DOI 10.1109/ACCESS.2019.2906874
   Cao HT, 2018, IEEE T NETW SERV MAN, V15, P356, DOI 10.1109/TNSM.2017.2778106
   Cao HT, 2018, IEEE INTERNET THINGS, V5, P108, DOI 10.1109/JIOT.2017.2773489
   Cao W, 2016, P 2016 9 INT S COMP
   Chahal RK, 2020, COMPUT COMMUN, V150, P13, DOI 10.1016/j.comcom.2019.10.034
   Gulati A., 2018, PROC IEEE INT C COMM, V2018, P1
   Hollinghurst J, 2017, 2017 PROCEEDINGS OF THE 29TH INTERNATIONAL TELETRAFFIC CONGRESS (ITC 29), VOL 1, P241, DOI [10.23919/ITC.2017.8064361, 10.1109/ITC.29.114]
   Trinh H, 2018, IEEE T MULTIMEDIA, V20, P2562, DOI 10.1109/TMM.2018.2865661
   Jiang F, 2018, IEEE ACCESS, V6, P44483, DOI 10.1109/ACCESS.2018.2851374
   Jindal A, 2019, COMPUT NETW, V153, P36, DOI 10.1016/j.comnet.2019.02.002
   Jindal A, 2018, IEEE NETWORK, V32, P66, DOI 10.1109/MNET.2018.1800101
   Kausar S, 2020, SOFTWARE PRACT EXPER, V50, P2095, DOI 10.1002/spe.2782
   Kim G, 2016, RSC ENERGY ENVIRON S, P110
   Li JJ, 2018, J INTERDISCIP MATH, V21, P307, DOI 10.1080/09720502.2017.1420561
   Limbasiya T, 2017, P IEEE REG 10 C
   Luo GY, 2018, CHINA COMMUN, V15, P1, DOI 10.1109/CC.2018.8424578
   Mao YY, 2016, IEEE J SEL AREA COMM, V34, P3590, DOI 10.1109/JSAC.2016.2611964
   Montejo-Sánchez S, 2019, IEEE WIREL COMMUN LE, V8, P584, DOI 10.1109/LWC.2018.2880959
   Ti NT, 2017, IEEE ICC
   Noor-A-Rahim M, 2019, IEEE T VEH TECHNOL, V68, P9359, DOI 10.1109/TVT.2019.2936799
   Pham QV, 2019, IEEE ACCESS, V7, P16444, DOI 10.1109/ACCESS.2018.2883692
   Saajid H, 2019, IEEE ACCESS, V7, P132374, DOI 10.1109/ACCESS.2019.2940872
   Saharan S, 2020, FUTURE GENER COMP SY, V106, P622, DOI 10.1016/j.future.2020.01.031
   Saharan S, 2020, COMPUT COMMUN, V150, P603, DOI 10.1016/j.comcom.2019.12.003
   Shah SS, 2019, IEEE ACCESS, V7, P16494, DOI 10.1109/ACCESS.2019.2895114
   Sirohi D, 2020, COMPUT COMMUN, V153, P459, DOI 10.1016/j.comcom.2020.01.058
   Tabuchi M, 2018, IEEJ T ELECT INF SYS, V138, P1464
   Dinh TQ, 2017, IEEE T COMMUN, V65, P3571, DOI 10.1109/TCOMM.2017.2699660
   Tonguz OK, 2010, IEEE WIREL COMMUN, V17, P47, DOI 10.1109/MWC.2010.5450660
   Wang J, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19112579
   Wang J, 2019, INT J DISTRIB SENS N, V15, DOI 10.1177/1550147719839581
   Wang J, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19071494
   Wang J, 2019, CMC-COMPUT MATER CON, V58, P711, DOI 10.32604/cmc.2019.05450
   Wang J, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19030671
   Wang J, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/9472075
   Wang J, 2018, CMC-COMPUT MATER CON, V56, P433, DOI 10.3970/cmc.2018.04132
   Yin X, 2018, INT J DISTRIB SENS N, V14, DOI 10.1177/1550147718795355
   Yuan J, 2018, IEEE ACCESS, V6, P23626, DOI 10.1109/ACCESS.2018.2831898
   Zhou A, 2021, SOFTWARE PRACT EXPER, V51, P2085, DOI 10.1002/spe.2758
NR 41
TC 4
Z9 4
U1 1
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2501
EP 2518
DI 10.1002/spe.2843
EA JUL 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000549842000001
DA 2024-07-18
ER

PT J
AU Khiat, A
   Tari, A
   Guérout, T
AF Khiat, Abdelhamid
   Tari, Abdelkamel
   Guerout, Tom
TI MFHS: A modular scheduling framework for heterogeneous system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed computing; heterogeneous environment; performance
   evaluation; real-experimental evaluation; task scheduling
ID SIMULATION; ENVIRONMENT; PERFORMANCE; TOOLKIT
AB Current innovative distributed architectures, proposing on-line services, involve more and more computing resources. From a provider point of view, the platform management leads to challenging problematic relating to resource allocation, which involve different kind of quality of service parameters, the provider has to focus on to keep his platform reliable and efficient. MFHS is a modular generic framework, which can be adapted to any distributed computing environment. Structured in modules, MFHS allows to discover the existing computing resources in terms of computing performance, network throughput and disk I/O speeds (Resources Discovery module) and to predict how the experiment should behave (P-i value). As the setting up of real experiments is often complex, MFHS allows: to make theoretical experimentation (based on models), to use any kind of distributed emulators, or to deploy experiments on real-experimental platforms. In this article, these three environments are used to highlight the reliability of MFHS (measured P-i=90% against 94% for the predicted P-i). Deployment and scheduling studies have also been achieved using an experimental Cloud based on OpenStack while Emulab test-bed has been used as emulator. During experiments, four QoS parameters are taken into account (Resources Monitoring module): energy consumption, cost, resource utilization, and makespan. These studies also includes a new heuristic called MMin, based on Max-Min and Min-Min algorithms. Experimentation section, proposes a detailed comparative analysis of these algorithms in terms of QoS results, while the abilities of the proposed heuristic MMin regarding the makespan metric is shown.
C1 [Khiat, Abdelhamid] CERIST, Networks & Distributed Syst Div, Algiers, Algeria.
   [Khiat, Abdelhamid] Univ Bejaia, Fac Exact Sci, Comp Sci Dept, Bejaia, Algeria.
   [Tari, Abdelkamel] Univ Bejaia, Fac Exact Sci, LIMED Lab, Bejaia, Algeria.
   [Guerout, Tom] Univ Toulouse, LAAS, CNRS, Toulouse, France.
C3 Centre de Recherche sur l'Information Scientifique et Technique
   (CERIST); Universite de Bejaia; Universite de Bejaia; Centre National de
   la Recherche Scientifique (CNRS); Universite de Toulouse
RP Khiat, A (corresponding author), CERIST, Networks & Distributed Syst Div, Algiers, Algeria.
EM a.khiat@dtri.cerist.dz
OI KHIAT, Abdelhamid/0000-0002-1932-9063; Guerout, Tom/0000-0002-6152-4065
CR [Anonymous], P IEEE ACM INT C SUP
   [Anonymous], 2013, Int. J. Appl. Innov. Eng. Manag
   [Anonymous], 2008, P HOTPOWER
   Bak S, 2011, SCI PROGRAMMING-NETH, V19, P231, DOI 10.3233/SPR-2011-0332
   Bawa RK, 2013, 2013 2ND INTERNATIONAL CONFERENCE ON INFORMATION MANAGEMENT IN THE KNOWLEDGE ECONOMY (IMKE), P166
   Beloglazov A, 2015, CONCURR COMP-PRACT E, V27, P1310, DOI 10.1002/cpe.3314
   Calheiros RN, 2013, SOFTWARE PRACT EXPER, V43, P595, DOI 10.1002/spe.2124
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Carlson J, 2008, 16 INT C REAL TIM NE
   Casanova H, 2008, UKSIM INT CONF COMP, P126, DOI 10.1109/UKSIM.2008.28
   Elzeki OM., 2012, INT J COMPUTER APPL, V50, P22, DOI [10.5120/7823-1009, DOI 10.5120/7823-1009]
   Etminani K, 2007, HYBRID MIN MIN MAX M, V32, P1
   Etminani K, 2007, 2007 THIRD IEEE/IFIP INTERNATIONAL CONFERENCE IN CENTRAL ASIA ON INTERNET, P167
   Feller E, 2012, INT CONF CLOUD COMP
   Ghosh TK, 2012, 2012 2ND IEEE INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED AND GRID COMPUTING (PDGC), P419, DOI 10.1109/PDGC.2012.6449857
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hermenier F., 2009, P 2009 ACM SIGPLAN S
   Hibler M., 2008, P USENIX ANN TECHN C, P113
   Issariyakul T., 2011, Introduction to network simulator NS2
   Izakian H, 2009, INTERNATIONAL JOINT CONFERENCE ON COMPUTATIONAL SCIENCES AND OPTIMIZATION, VOL 1, PROCEEDINGS, P8, DOI 10.1109/CSO.2009.487
   Kaur Navdeep, 2015, IOSR J COMPUTER ENG, V17, P42
   kaur R., 2013, Int. J. Comput. Appl, V76, P61
   KLIAZOVICH D, 2010, GLOB TELECOMM CONF
   Konjaang J. K., 2018, JCS, V14, P623
   Kopetz H, 1998, REAL TIM SYST SYMP P, P168, DOI 10.1109/REAL.1998.739743
   Kurowski K, 2013, SIMUL MODEL PRACT TH, V39, P135, DOI 10.1016/j.simpat.2013.08.007
   Li Y, 2018, INT CON DISTR COMP S, P1573, DOI 10.1109/ICDCS.2018.00173
   Liu C, 2009, J PARALLEL DISTR COM, V69, P307, DOI 10.1016/j.jpdc.2008.11.003
   Mittal S, 2016, INT CONF ADV COMPU, P197, DOI 10.1109/IACC.2016.45
   Nimkar AV, 2017, ADV INTELL SYST, V508, P155, DOI 10.1007/978-981-10-2750-5_16
   Panda SK, 2014, P ACCT 4 INT C ADV C
   Parsa Saeed., 2009, International Journal of Digital Content Technology and its Applications, V3, P91
   Piraghaj SF, 2017, SOFTWARE PRACT EXPER, V47, P505, DOI 10.1002/spe.2422
   Rimal BP, 2017, IEEE T PARALL DISTR, V28, P290, DOI 10.1109/TPDS.2016.2556668
   Sharma N., 2017, Int. J. Adv. Res. Comput. Sci, V8, P1038
   Stankovic J. A., 1998, Deadline Scheduling for RealTime Systems EDF and Related Algorithms
   Tabak EK, 2014, IEEE T PARALL DISTR, V25, P1244, DOI 10.1109/TPDS.2013.107
   Teixeira Jose, 2013, 2013 Second European Workshop on Software Defined Networks (EWSDN), P99, DOI 10.1109/EWSDN.2013.23
   Hung TC, 2019, PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND SOFT COMPUTING (ICMLSC 2019), P60, DOI 10.1145/3310986.3311017
   Wei XL, 2016, SOFT COMPUT, V20, P2611, DOI 10.1007/s00500-015-1662-0
   Wood T, 2007, 4 USENIX S NETW SYST, P17
   Wu GL, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18061671
   Zhu XM, 2016, P INT COMP SOFTW APP, P664, DOI 10.1109/COMPSAC.2016.121
NR 43
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2020
VL 50
IS 8
BP 1463
EP 1497
DI 10.1002/spe.2827
EA APR 2020
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MG0MA
UT WOS:000524332100001
DA 2024-07-18
ER

PT J
AU Hwang, S
   Lee, S
   Ryu, S
AF Hwang, Sungjae
   Lee, Sungho
   Ryu, Sukyoung
TI All about activity injection: Threats, semantics, detection, and defense
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE activity injection; Android; mobile security; UI security
AB Android supports seamless user experience by maintaining activities from different applications (apps) in the same activity stack. Although such close inter-app communication is essential in the Android framework, the powerful inter-app communication contains vulnerabilities that can inject malicious activities into a victim app's activity stack to hijack user interaction flows. In this article, we demonstrate activity injection attacks with a simple malware, and formally specify the activity activation mechanism using operational semantics. Based on the operational semantics, we develop a static analysis tool, which analyzes Android apps to detect activity injection attacks. Our tool is fast enough to analyze real-world Android apps in 6 seconds on average, and our experiments found that 1761 apps out of 129,756 real-world Android apps inject their activities into other apps' tasks. Moreover, we propose a defense mechanism, dubbed signature-based activity access control (SAAC), which completely prohibits activity injection attacks. The defense mechanism is general enough to keep the current Android multitasking features intact, and it is simple enough to be independent of the complex activity activation semantics, which does not increase activity activation time noticeably. With the extension of the formal semantics for SAAC, we prove that SAAC correctly mitigates activity injection attacks without any false alarms.
C1 [Hwang, Sungjae; Lee, Sungho; Ryu, Sukyoung] Korea Adv Inst Sci & Technol, Sch Comp, 291 Daehak Ro, Daejeon 34141, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Hwang, S (corresponding author), Korea Adv Inst Sci & Technol, Sch Comp, 291 Daehak Ro, Daejeon 34141, South Korea.
EM sjhwang87@kaist.ac.kr
RI Ryu, Sukyoung/A-8543-2015
OI Ryu, Sukyoung/0000-0002-0019-9772
FU National Research Foundation of Korea [2017R1A2B3012020,
   2017M3C4A7068177]
FX National Research Foundation of Korea, 2017R1A2B3012020 and
   2017M3C4A7068177
CR 3C Toolbox, 2017, 3C TOOLBOX
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   [Anonymous], 2014, NDSS
   [Anonymous], 2012, Proceedings of the 7th ACM Symposium on Information, Computer and Communications Security, DOI [DOI 10.1145/2414456.2414498, 10.1145/2414456.2414498]
   [Anonymous], SEC
   [Anonymous], 2012, PROC INT C FOUND PRA
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Chen EY, 2014, CCS
   Chen QA, 2014, P 23RD USENIX SECURI
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   CSipSimple, 2017, CSIPSIMPLE
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Developer Android, 2017, ACT EL
   Elish KarimO., 2015, P IEEE MOBILE SECURI
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Felt AP, 2011, SEC
   Felt AP, 2011, P WORKSH WEB SEC PRI
   Feng Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P576, DOI 10.1145/2635868.2635869
   Fuchs AP, 2019, SCANDROID AUTOMATED
   Georgiev Martin, 2014, NDDS Symp, V2014, P1
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Grace M.C., 2012, NDSS
   Hwang S., 2015, P 10 ACM S INF COMP, P579
   IBM, 2006, TJ WATS LIB AN
   Jaebaek S, 2016, NDSS
   Jiang Z, 2013, NDSS
   Kraunelis J, 2015, P EAI END T UB, P512
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Lin CC, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23049
   Luo T, 2011, ACSAC
   Miluzzo E., 2012, P 10 INT C MOB SYST, P323, DOI DOI 10.1145/2307636.2307666
   Niemietz Marcus., 2012, Black Hat Abu Dhabi
   Octeau Damien, 2013, P 22 USENIX SECURITY, P543
   Ongtang M, 2012, SECUR COMMUN NETW, V5, P658, DOI 10.1002/sec.360
   Ren C, 2015, P 24 USENIX SEC S
   Ren CG, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23529
   Smith A., 2015, US SMARTPHONE USE 20
   Sungho L, 2017, OPERATIONAL SEMANTIC
   Tongxin L, 2014, CCS
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Wu Lei., 2013, CCS
   Xu Z., 2012, ACM WiSec, P113
   Zheng C., 2012, P 2 ACM WORKSHOP SEC, P93, DOI DOI 10.1145/2381934.2381950
   Zhou X, 2013, P 20TH ACM C COMPUTE
   Zhou XY, 2014, P IEEE S SECUR PRIV, P409, DOI 10.1109/SP.2014.33
NR 45
TC 4
Z9 5
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1061
EP 1086
DI 10.1002/spe.2792
EA JAN 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT6RF
UT WOS:000510059200001
DA 2024-07-18
ER

PT J
AU Khorsand, R
   Ghobaei-Arani, M
   Ramezanpour, M
AF Khorsand, Reihaneh
   Ghobaei-Arani, Mostafa
   Ramezanpour, Mohammadreza
TI A self-learning fuzzy approach for proactive resource provisioning in
   cloud environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; proactive resource provisioning; probability
   distribution; self-learning fuzzy
ID MULTIPLAYER ONLINE GAMES; COMPUTING ENVIRONMENTS; SCHEDULING ALGORITHM;
   COST-AWARE; SIMULATION; MANAGEMENT; TAXONOMY; TASKS
AB The development of a communication infrastructure has made possible the expansion of the popular massively multiplayer online games. In these games, players all over the world can interact with one another in a virtual environment. The arrival rate of new players to the game environment causes fluctuations and players always expect services to be available and offer an acceptable service-level agreement (SLA), especially in terms of response time and cost. Cloud computing emerged in the recent years as a scalable alternative to respond to the dynamic changes of the workload. In massively multiplayer online games applications, players are allowed to lease resources from a cloud provider in an on-demand basis model. Proactive management of cloud resources in the face of workload fluctuations and dynamism upon the arrival of players are challenging issues. This paper presents a self-learning fuzzy approach for proactive resource provisioning in cloud environment, where key is to predict parameters of the probability distribution of the incoming players in each period. In addition, we propose a self-learning fuzzy autoscaling decision-maker algorithm to compute the proper number of resources to be allocated to each tier in the massively multiplayer online games by applying the predicted workload and user SLA. We evaluate the effectiveness of the proposed approach under real and synthetic workloads. The experimental results indicate that the proposed approach is able to allocate resources more efficiently than other approaches.
C1 [Khorsand, Reihaneh] Islamic Azad Univ, Dept Comp Engn, Dolatabad Branch, Esfahan 8341875185, Iran.
   [Ghobaei-Arani, Mostafa] Islamic Azad Univ, Dept Comp Engn, Qom Branch, Qom, Iran.
   [Ghobaei-Arani, Mostafa] Islamic Azad Univ, Qom Branch, Young Researchers & Elite Club, Qom, Iran.
   [Ramezanpour, Mohammadreza] Islamic Azad Univ, Dept Comp Engn, Mobarakeh Branch, Esfahan, Iran.
C3 Islamic Azad University; Islamic Azad University; Islamic Azad
   University; Islamic Azad University
RP Khorsand, R (corresponding author), Islamic Azad Univ, Dept Comp Engn, Dolatabad Branch, Esfahan 8341875185, Iran.
EM Reihaneh_khm@yahoo.com
RI Ramezanpour, Mohammadreza/AAD-6944-2021; Khorsand,
   Reihaneh/AAN-5797-2021; Ghobaei-Arani, Mostafa/K-5058-2015
OI Ramezanpour, Mohammadreza/0000-0002-1588-0982; Ghobaei-Arani,
   Mostafa/0000-0003-2639-0900
CR Alaei N, 2018, J SUPERCOMPUT, V74, P801, DOI 10.1007/s11227-017-2161-0
   [Anonymous], 2006, ARCH BLUEPR AUT COMP
   [Anonymous], 2004, IBM REDBOOKS
   Aslanpour MS, 2018, J SUPERCOMPUT, V74, P6470, DOI 10.1007/s11227-017-2156-x
   Aslanpour MS, 2017, J NETW COMPUT APPL, V95, P26, DOI 10.1016/j.jnca.2017.07.012
   Babu KRR, 2019, SOFTWARE PRACT EXPER, V49, P995, DOI 10.1002/spe.2692
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Ghobaei-Arani M, 2019, J NETW COMPUT APPL, V142, P76, DOI 10.1016/j.jnca.2019.06.002
   Ghobaei-Arani M, 2018, SOFTWARE PRACT EXPER, V48, P1865, DOI 10.1002/spe.2598
   Ghobaei-Arani M, 2018, SOFT COMPUT, V22, P8353, DOI 10.1007/s00500-017-2783-4
   Ghobaei-Arani M, 2018, INT J COMMUN SYST, V31, DOI 10.1002/dac.3537
   Ghobaei-Arani M, 2017, J EXP THEOR ARTIF IN, V29, P1149, DOI 10.1080/0952813X.2017.1310308
   Grozev N, 2015, COMPUT J, V58, P1, DOI 10.1093/comjnl/bxt107
   Han R, 2014, FUTURE GENER COMP SY, V32, P82, DOI 10.1016/j.future.2012.05.018
   Heidari S, 2019, FUTURE GENER COMP SY, V96, P490, DOI 10.1016/j.future.2019.02.048
   Hemasian-Etefagh F, 2019, J SUPERCOMPUT, P1
   Jagex Ltd, 2017, RUN
   Kavalionak H, 2015, PEER PEER NETW APPL, V8, P301, DOI 10.1007/s12083-013-0232-4
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Khorsand R, 2018, SOFTWARE PRACT EXPER, V48, P2147, DOI 10.1002/spe.2627
   Khorsand R, 2017, J SYST SOFTWARE, V132, P253, DOI 10.1016/j.jss.2017.05.017
   Khorsand R, 2017, J SUPERCOMPUT, V73, P2430, DOI 10.1007/s11227-016-1928-z
   Maenhaut PJ, 2019, SOFTWARE PRACT EXPER, V49, P449, DOI 10.1002/spe.2669
   Marzolla M, 2012, COMPUT ENTERTAIN, V10, DOI 10.1145/2381876.2381880
   Nae V, 2014, MULTIMEDIA SYST, V20, P521, DOI 10.1007/s00530-013-0352-y
   NegrAlo AP, 2014, 2014 IEEE 13 INT S N
   Netto MA, 2014, P 2014 IEEE 22 INT S
   Prodan R, 2016, PEER PEER NETW APPL, V9, P1145, DOI 10.1007/s12083-015-0383-6
   Prodan R, 2009, FUTURE GENER COMP SY, V25, P785, DOI 10.1016/j.future.2008.11.002
   Rahman M, 2011, CONCURR COMP-PRACT E, V23, P1990, DOI 10.1002/cpe.1734
   Safari M, 2018, SIMUL MODEL PRACT TH, V87, P311, DOI 10.1016/j.simpat.2018.07.006
   Safari M, 2018, J SUPERCOMPUT, V74, P5578, DOI 10.1007/s11227-018-2498-z
   Singh S, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2843889
   Van Den Bossche B, 2006, P 2006 INT WORKSH NE
   Van den Bossche B, 2011, CLUSTER COMPUT, V14, P145, DOI 10.1007/s10586-010-0140-9
   Weng CF, 2012, 2012 8 INT WIR COMM
   Yoon MS, 2016, IEEE GLOBE WORK
   Yoon MS, 2017, THESIS
NR 38
TC 45
Z9 45
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2019
VL 49
IS 11
BP 1618
EP 1642
DI 10.1002/spe.2737
EA AUG 2019
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JG7JQ
UT WOS:000480506100001
DA 2024-07-18
ER

PT J
AU Pinto, G
   Castor, F
   Bonifacio, R
   Rebouças, M
AF Pinto, Gustavo
   Castor, Fernando
   Bonifacio, Rodrigo
   Reboucas, Marcel
TI Work practices and challenges in continuous integration: A survey with
   Travis CI users
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE build breakage; continuous integration; Travis CI; user survey
AB Continuous integration (CI) is a software development practice that has been gaining increasing popularity in the last few years. However, we still miss a collection of experiences regarding how software developers perceive the idea of CI, in terms of its fundamental concepts, the reasons that motivate the adoption of this practice, the reasons for build breakage, and the benefits and problems related to CI. To shed light on this direction, we conducted a user survey with 158 CI users. Through a mostly qualitative investigation, we produce a list of findings that are not always obvious. For instance, we observed that (1) developers are not sure whether a job failure represents a failure or not; (2) inadequate testing is the most common technical reason related to build breakage, whereas lack of time plays a role on the social reasons; and (3) although some respondents reported that CI systems increase the confidence that the code is in a known state, some respondents also reported that there is a false sense of confidence when blindly trusting tests. This empirical study is particularly relevant to those interested in better understanding and fostering CI practices either in an open-source or industrial setting.
C1 [Pinto, Gustavo] Fed Univ Para, BR-66075110 Belem, Para, Brazil.
   [Castor, Fernando] Univ Fed Pernambuco, BR-50740560 Recife, PE, Brazil.
   [Bonifacio, Rodrigo] Univ Brasilia, BR-73345010 Brasilia, DF, Brazil.
   [Reboucas, Marcel] In Loco Media, BR-50030310 Recife, PE, Brazil.
C3 Universidade Federal do Para; Universidade Federal de Pernambuco;
   Universidade de Brasilia
RP Pinto, G (corresponding author), Fed Univ FACOMP UFPA, Fac Comp, Rua Augusto Correa 1, BR-66075110 Belem, Para, Brazil.
EM gpinto@ufpa.br
RI Bonifacio, Rodrigo/B-3450-2014; Castor, Fernando/V-4011-2018
OI Castor, Fernando/0000-0002-6389-3630; Bonifacio,
   Rodrigo/0000-0002-2380-2829; Pinto, Gustavo/0000-0001-7598-2799
FU CNPq [406308/2016-0, 453611/2017-6, 304220/2017-5]; FACEPE
   [APQ-0839-1.03/14, APQ 0388-1.03/14]
FX CNPq, Grant/Award Number: 406308/2016-0, 453611/2017-6, and
   304220/2017-5; FACEPE, Grant/Award Number: APQ-0839-1.03/14 and APQ
   0388-1.03/14
CR Abramovici M., 1992, Proceedings International Test Conference 1992 (Cat. No.92CH3191-4), P662, DOI 10.1109/TEST.1992.527887
   Adams Bram, 2007, 2007 IEEE International Conference on Software Maintenance, P114, DOI 10.1109/ICSM.2007.4362624
   [Anonymous], 2004, XP Ser
   [Anonymous], 2014, P 22 ACM SIGSOFT INT
   [Anonymous], 2014, P 22 ACM SIGSOFT INT
   [Anonymous], P 2015 10 JOINT M FD
   [Anonymous], 2007, Basics of qualitative research: techniques and procedures for developing grounded theory
   [Anonymous], P 31 IEEE ACM INT C
   [Anonymous], P 14 INT C MIN SOFTW
   [Anonymous], 1972, Chapter I: Notes on structured programming, em Structured programming
   Beller M, 2015, P 2015 10 JOINT M FD
   Beller M, 2018, P 40 INT C SOFTW ENG
   Beller M, 2017, P 2017 IEEE ACM 14 I
   Beller M, 2015, P 37 INT C SOFTW ENG
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Briand L, 1999, P 10 INT S SOFTW REL
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Fowler M, 2018, CONTINUOUS INTEGRATI
   Fowler M., 2000, Continuous integration
   Gousios G, 2015, P 37 IEEE ACM INT C
   Gousios G, 2016, P IEEE ACM 38 INT C
   Hilton M., 2017, P 2017 11 JOINT M FD
   Kim S, 2008, P 2008 23 IEEE ACM I
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Luz W, 2018, 2018 ACM IEEE INT S
   McIntosh S, 2012, EMPIR SOFTW ENG, V17, P578, DOI 10.1007/s10664-011-9169-5
   Nicolai J, 2000, GITHUB WELCOMES ALL
   Pinto G, 2017, P 10 IEEE ACM INT WO
   Pinto G, 2016, 2016 IEEE 32 INT C S
   Reboucas M, 2017, P 14 INT C MIN SOFTW
   Seo Hyunmin, 2014, P 36 INT C SOFTW ENG
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Steinmacher I, 2014, P 7 INT WORKSH COOP
   Tomasdottir KF, 2017, P 32 IEEE ACM INT C
   Trockman Asher, 2018, P 40 INT C SOFTW ENG
   Vasilescu B, 2014, 30 IEEE INT C SOFTW
   Williams TW, 2001, P REL MAINT S, P420, DOI 10.1109/RAMS.2001.902502
   Zhao YY, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON PLASMA SCIENCE (ICOPS)
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 39
TC 14
Z9 16
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2223
EP 2236
DI 10.1002/spe.2637
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700005
DA 2024-07-18
ER

PT J
AU Liu, YF
   Zeng, XQ
   Zou, Y
   Zhang, K
AF Liu, Yufeng
   Zeng, Xiaoqin
   Zou, Yang
   Zhang, Kang
TI A graph grammar-based approach for graph layout
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE graph grammars; graphic layout; quantitative analysis; VPLs
ID VISUAL LANGUAGES
AB As a two-dimensional formal tool, graph grammars are capable of handling the layout problems of visual programming languages. Based on an edge-based graph grammar (EGG), this paper proposes a novel layout approach that uses the unique features of EGG and overcomes the weakness of existing layout approaches. In order to make the approach rigorous yet concise, the graph grammar mechanisms with layout constraints and quantitative analysis techniques are combined together as an integrity. First, the basic notions of EGG are briefly introduced; second, the layout approach is presented that consists of two phases, ie, bottom-up parsing and top-down derivation. Finally, a case study is given by taking the standard flowchart as an example to demonstrate the working process of the proposed approach.
C1 [Liu, Yufeng; Zeng, Xiaoqin; Zou, Yang] Hohai Univ, Inst Intelligence Sci & Technol, Nanjing 213022, Jiangsu, Peoples R China.
   [Zhang, Kang] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
C3 Hohai University; University of Texas System; University of Texas Dallas
RP Zeng, XQ (corresponding author), Hohai Univ, Inst Intelligence Sci & Technol, Nanjing 213022, Jiangsu, Peoples R China.
EM xzeng@hhu.edu.cn
RI Zou, Yang/JJC-7125-2023
FU National Natural Science Foundation of China [61170089, 61572348];
   National High Technology Research and Development Program of China
   [215AA020506]; China Scholarship Council (CSC) [201706710082]
FX National Natural Science Foundation of China, Grant/Award Number:
   61170089 and 61572348; National High Technology Research and Development
   Program of China, Grant/Award Number: 215AA020506; China Scholarship
   Council (CSC), Grant/Award Number: 201706710082
CR Betz Gregor, 2013, Graph Drawing. 20th International Symposium, GD 2012. Revised Selected Papers, P236, DOI 10.1007/978-3-642-36763-2_21
   Brandenburg FJ, 1990, GRAPH GRAMMARS THEIR, P144
   CHANG SK, 1987, IEEE SOFTWARE, V4, P29, DOI 10.1109/MS.1987.229792
   Didimo Walter, 2011, Journal of Graph Algorithms and Applications, V15, P229, DOI 10.7155/jgaa.00224
   Dwyer T, 2012, INT S GRAPH DRAW NET
   Eades P., 1984, C NUMERANTIUM, V42, P149
   FRUCHTERMAN TMJ, 1991, SOFTWARE PRACT EXPER, V21, P1129, DOI 10.1002/spe.4380211102
   Fürst L, 2015, SOFTW SYST MODEL, V14, P1297, DOI 10.1007/s10270-013-0380-2
   Goik D, 2014, PROCEDIA COMPUT SCI, V29, P960, DOI 10.1016/j.procs.2014.05.086
   Hooshmand A, 2014, AI EDAM, V28, P239, DOI 10.1017/S0890060414000201
   KAMADA T, 1989, INFORM PROCESS LETT, V31, P7, DOI 10.1016/0020-0190(89)90102-6
   Matoba I, 2015, ABSTRACTS IEICE T A, VJ98-A, P152
   Matsakis N, 2010, COMPUTATION SCI
   McCreary CL, 1995, TECHNICAL REPORT
   Purchase H., 1997, Graph Drawing. 5th International Symposium, GD '97. Proceedings, P248, DOI 10.1007/3-540-63938-1_67
   Wang Yi, 2014, Journal of Computer Applications, V34, P3180, DOI 10.11772/j.issn.1001-9081.2014.11.3180
   Zeng X, 2005, P IEEE S VIS LANG HU
   Zeng Xiao-Qin, 2008, Journal of Software, V19, P1893, DOI 10.3724/SP.J.1001.2008.01893
   Zhang D-Q, 1997, P 1997 IEEE S VIS LA
   Zhang DQ, 2001, COMPUT J, V44, P186, DOI 10.1093/comjnl/44.3.186
   Zhang K-B, 2001, VIP 01 P PAN SYDN AR
   Zhang KB, 2002, LECT NOTES ARTIF INT, V2317, P106
   Zou Yang, 2012, Journal of Software, V23, P1635, DOI 10.3724/SP.J.1001.2012.04085
NR 23
TC 1
Z9 1
U1 3
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2018
VL 48
IS 9
BP 1523
EP 1535
DI 10.1002/spe.2588
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GP5RZ
UT WOS:000440932300001
DA 2024-07-18
ER

PT J
AU Barbaglia, G
   Murzilli, S
   Cudini, S
AF Barbaglia, Guido
   Murzilli, Simone
   Cudini, Stefano
TI Definition of REST web services with JSON schema
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE JSON Schema; JSON Hyper Schema; REST; web services definition
AB The Web has evolved from being a collection of documents to a collection of interconnected services that interoperate throughout the Internet. Web services are a natural consequence of this evolution. The web services model was initially centered around the eXtensible Markup Language (XML). Such services can be described by Web Services Description Language documents that are formally defined through the XML Schema Definition language. However, in recent years the popularity of XML-based web services has declined, as more developers favor JavaScript Object Notation (JSON)-based alternatives. Although the use of the latter language is spreading, no official standard to formally describe JSON documents exists. The aim of this article is to demonstrate how JSON Schema, and particularly the JSON Hyper Schema extension, is suitable to describe JSON-based web services that follow the REST architectural pattern. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Barbaglia, Guido; Murzilli, Simone; Cudini, Stefano] Food & Agr Org United Nations, Stat Div, Viale Terme Caracalla, I-00100 Rome, Italy.
C3 Food & Agriculture Organization of the United Nations (FAO)
RP Barbaglia, G (corresponding author), Food & Agr Org United Nations, Stat Div, Viale Terme Caracalla, I-00100 Rome, Italy.
EM guido.barbaglia@fao.org
RI Barbaglia, Guido/M-7889-2015
OI Barbaglia, Guido/0000-0001-9512-7706
CR Paredes-Valverde MA, 2015, SOFTWARE PRACT EXPER, V45, P365, DOI 10.1002/spe.2233
   [Anonymous], 2008, RESTFUL WEB SERVICES
   [Anonymous], 2000, ARCHITECTURAL STYLES
   [Anonymous], CRM STOCK QUOT SAL I
   Castillo P.A., 2011, ARXIV11054978
   Christensen E., 2001, WEB SERVICES DESCRIP
   Crockford D, 2013, JSON FAT FREE ALTERN
   Curbera F, 2001, OOPSLA 2001 WORKSH O, P249
   DuVander Adam., 2013, JSON's Eight Year Convergence With XML | ProgrammableWeb
   Fielding R, 1999, HYPERTEXT TRANSFER P, V2, P2
   Galiegue F, 2013, JSON SCHEM IN PRESS
   Hadley M., 2009, WEB APPL DESCR UNPUB
   Internet Engineering Task Force, 2013, JSON SCHEM CORE DEF
   Internet Engineering Task Force, 2013, JSON SCHEM HYP DEF J
   Internet Engineering Task Force, 2013, JSON SCHEM INT NONI
   Lafon Y, 2009, TEAM COMMENT W UNPUB
   Lane K., 2012, API EVANGELIST, V20, P1
   Levitt J, 2001, INFORM WEEK
   Mandel L., 2008, DESCRIBE REST WEB SE
   Rodriguez JM, 2013, SOFTWARE PRACT EXPER, V43, P613, DOI 10.1002/spe.2123
   Rodriguez A., 2008, Restful web services: The basics, V33, P18
   Van Kesteren A, 2007, XMLHTTPREQU IN PRESS
NR 22
TC 7
Z9 7
U1 1
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2017
VL 47
IS 6
BP 907
EP 920
DI 10.1002/spe.2466
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EE
UT WOS:000403114000007
DA 2024-07-18
ER

PT J
AU Bachelet, B
   Yon, L
AF Bachelet, Bruno
   Yon, Loic
TI Designing expression templates with concepts
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE generic programming; template specialization; concept-based
   specialization; template metaprogramming; expression templates
AB Concepts are likely to be introduced in a future C++ standard. They can be used for constraining template parameters, which enables checking requirements on template parameters sooner in the compilation process, and thus providing more intelligible error messages to the user. They can also be used in the specialization of templates, thus leading to a better control over the selection of the most appropriate version of a template for a given instantiation. This latter aspect offers new possibilities in the design of template libraries, as it enhances the specialization mechanism of templates, and set it up as a solid alternative to inheritance when static binding can replace dynamic binding. This article addresses the design of expression templates (i.e., templates that represent expressions and are usually built through operator overloading) that are useful to develop an embedded domain specific language (EDSL), and can speed up the evaluation of an expression by delaying the evaluation of intermediate operations to avoid unnecessary temporary objects. We propose to use concept-based template specialization to parse expression templates in order to ease the design of an EDSL. This approach is a static variant of the well-known visitor design pattern that replaces the overridden methods in the double dispatch of the original design pattern by template specializations based on concepts. An example of EDSL for linear programming developed with our solution demonstrates that a concept-based design helps producing concise and reliable code. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Bachelet, Bruno] Univ Blaise Pascal, Clermont Univ, LIMOS, BP 10448, F-63000 Clermont Ferrand, France.
   [Bachelet, Bruno; Yon, Loic] CNRS, UMR 6158, LIMOS, F-63171 Aubiere, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Clermont
   Auvergne (UCA); Centre National de la Recherche Scientifique (CNRS);
   Universite Clermont Auvergne (UCA)
RP Bachelet, B (corresponding author), LIMOS, Complexe Univ Cezeaux,1 Rue Chebarde, F-63178 Aubiere, France.
EM bruno.bachelet@univ-bpclermont.fr
OI Bachelet, Bruno/0000-0001-9190-3405; Yon, Loic/0000-0002-6411-3341
CR Bachelet B, 2013, SCI PROGRAMMING-NETH, V21, P43, DOI [10.1155/2013/581397, 10.3233/SPR-130362]
   Bassetti F, 1998, FIRST MERGED INTERNATIONAL PARALLEL PROCESSING SYMPOSIUM & SYMPOSIUM ON PARALLEL AND DISTRIBUTED PROCESSING, P635
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gottschling P., 2008, P 7 INT C GEN PROGR, P67
   Gregor D, 2007, N2421070281 ISOIEC J
   Härdtlein J, 2005, LECT NOTES COMPUT SC, V3515, P1055
   Iglberger K, 2012, SIAM J SCI COMPUT, V34, pC42, DOI 10.1137/110830125
   Niebler Eric, 2007, P 2007 S LIB CENTR S, P42, DOI [DOI 10.1145/1512762.1512767, 10.1145/1512762.1512767]
   SIEK J, 2000, 1 WORKSH C TEMPL PRO
   Sutton A, 2015, N4361 ISOIEC JTC 1
   Sutton A, 2013, N3580 ISOIEC JTC 1
   VANDEVOORDE D, 2003, C TEMPLATES COMPLETE
   Veldhuizen T., 1996, C GEMS, P475
   Veldhuizen TL, 1998, LECT NOTES COMPUT SC, V1505, P223
   [No title captured]
NR 15
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1521
EP 1537
DI 10.1002/spe.2483
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Saar, T
   Dumas, M
   Kaljuve, M
   Semenenko, N
AF Saar, Tonis
   Dumas, Marlon
   Kaljuve, Marti
   Semenenko, Nataliia
TI Browserbite: cross-browser testing via image processing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cross-browser compatibility testing; image processing
AB Cross-browser compatibility testing is concerned with identifying perceptible differences in the way a Web page is rendered across different browsers or configurations thereof. Existing automated cross-browser compatibility testing methods are generally based on document object model (DOM) analysis, or in some cases, a combination of DOM analysis with screenshot capture and image processing. DOM analysis, however, may miss incompatibilities that arise not during DOM construction but rather during rendering. Conversely, DOM analysis produces false alarms because different DOMs may lead to identical or sufficiently similar renderings. This paper presents a novel method for cross-browser testing based purely on image processing. The method relies on image segmentation to extract regions' from a Web page and computer vision techniques to extract a set of characteristic features from each region. Regions extracted from a screenshot taken on a baseline browser are compared against regions extracted from the browser under test based on characteristic features. A machine learning classifier is used to determine if differences between two matched regions should be classified as an incompatibility. An evaluation involving 140 pages shows that the proposed method achieves an F-score exceeding 90%, outperforming a state-of-the-art cross-browser testing tool based on DOM analysis. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Saar, Tonis; Dumas, Marlon; Kaljuve, Marti; Semenenko, Nataliia] STACC, Tartu, Estonia.
   [Dumas, Marlon; Semenenko, Nataliia] Univ Tartu, Tartu, Estonia.
C3 University of Tartu
RP Dumas, M (corresponding author), Univ Tartu, Tartu, Estonia.
EM marlon.dumas@ut.ee
RI Dumas, Marlon/H-2757-2015
OI Dumas, Marlon/0000-0002-9247-7476
FU European Regional Development Funds via the Estonian Competence Centre
   Programme
FX This research was funded by the European Regional Development Funds via
   the Estonian Competence Centre Programme.
CR CAI D, 2003, MSRTR200379 MICR
   Carmi A., 2014, U. S. Patent, Patent No. [Application US 20140189576 A1, 20140189576]
   Carmi A., 2014, U. S. Patent, Patent No. [Application US 20140218385 A1, 20140218385]
   Choudhary S. R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P171, DOI 10.1109/ICST.2012.97
   Choudhary SR, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P702, DOI 10.1109/ICSE.2013.6606616
   Choudhry S, 2010, PHARMACOGENET GENOM, V20, P351, DOI 10.1097/FPC.0b013e328337f992
   Dallmeier V, 2014, IEEE ICST WORKSHOP, P413, DOI 10.1109/ICSTW.2014.65
   Dallmeier V, 2013, LECT NOTES BUS INF P, V133, P55
   Dallmeier Valentin, 2012, P WORKSH JAVASCRIPT, P11, DOI [10.1145/2307720.2307722, DOI 10.1145/2307720.2307722]
   Dey S, 2002, FUND INFORM, V52, P285
   Flusser J, 2000, PATTERN RECOGN, V33, P1405, DOI 10.1016/S0031-3203(99)00127-2
   Han J., 2012, Data Mining, P393, DOI [DOI 10.1016/B978-0-12-381479-1.00009-5, 10.1016/B978-0-12-381479-1.00009-5]
   Harris C., 1988, P ALV VIS C, P5210
   HU M, 1962, IRE T INFORM THEOR, V8, P179, DOI 10.1109/tit.1962.1057692
   Kaljuve M, 2013, MITMEPLATVORMILINE V
   Lukac R, 2013, DIGIT IMAG COMPUT, P1
   Mahajan S., 2014, P 29 IEEEACM INT C A
   Mesbah A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/1985793.1985870
   Moeslund T.B., 2012, Introduction to Video and Image Processing, P103, DOI 10.1007/978-1-4471-2503-7_7
   OKUTOMI M, 1993, IEEE T PATTERN ANAL, V15, P353, DOI 10.1109/34.206955
   Prasad MR, 2013, U. S. Patent, Patent No. 20130083996
   Saar T, 2014, US Patent Application, Patent No. [US 20140189491 A1, 20140189491]
   Saar T, 2014, LECT NOTES COMPUT SC, V8541, P503, DOI 10.1007/978-3-319-08245-5_37
   Semenenko N, 2013, PROC IEEE INT CONF S, P528, DOI 10.1109/ICSM.2013.88
NR 24
TC 11
Z9 12
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2016
VL 46
IS 11
BP 1459
EP 1477
DI 10.1002/spe.2387
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DZ8VK
UT WOS:000386150000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dagkakis, G
   Papagiannopoulos, I
   Heavey, C
AF Dagkakis, Georgios
   Papagiannopoulos, Ioannis
   Heavey, Cathal
TI ManPy: an open-source software tool for building discrete event
   simulation models of manufacturing systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE discrete event simulation; open source; Python; SimPy; ManPy
ID MOTIVATION; DYNAMICS; PYTHON
AB In this paper, we present a new open-source (OS) software library for building discrete event simulation objects with focus on manufacturing environments. ManPy stands for Manufacturing in Python' but employs a generic approach that can be extended to other types of business processes such as services, logistics and supply chain management. It is written in Python and makes use of the SimPy library to implement a process interaction world view. The goal in developing ManPy is to provide an expandable OS layer of well-defined manufacturing objects, which can be used by users with multiple levels of expertise in discrete event simulation, namely, a super user and an industrial engineer. This object repository follows a structured architecture, allowing developers to extend it, exchange ideas and methodologies, with the goal of forming an OS community. We explain how ManPy is developed on SimPy, present its architecture and give examples of its utilization. We also give insight of how this work is planned to progress in order to attract software developers, modellers and practitioners in an OS community. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Dagkakis, Georgios; Papagiannopoulos, Ioannis; Heavey, Cathal] Univ Limerick, Enterprise Res Ctr, Limerick, Ireland.
C3 University of Limerick
RP Dagkakis, G (corresponding author), Univ Limerick, Enterprise Res Ctr, Limerick, Ireland.
EM georgios.dagkakis@ul.ie
RI Heavey, Cathal/F-6929-2017
OI Heavey, Cathal/0000-0003-0853-6769
FU European Union [314364]
FX The research leading to the results presented in this paper has received
   funding from the European Union Seventh Framework Programme
   (FP7-2012-NMP-ICT-FoF) under grant agreement no. 314364.
CR [Anonymous], P 1 INT C SIM TOOLS
   [Anonymous], 2006, A GUIDE TO NUMPY
   [Anonymous], 2008, OVERVIEW ROUTING PRO
   [Anonymous], MIS Q
   [Anonymous], 2009, PYTHON PAPERS MONOGR
   [Anonymous], NETWORK SIMULATION N
   [Anonymous], P 9 INT MOD C SEPT 3
   [Anonymous], 2010, P 2010 C GRAND CHALL
   [Anonymous], ADV FEATURES SIMPY L
   [Anonymous], P 14 I ITG C MEAS MO
   [Anonymous], P 8 INT C DIG ENT TE
   [Anonymous], P EUR SIM MULT ESM 2
   [Anonymous], P GAM DEV C GDC
   [Anonymous], INTRO SCIPY STACK SC
   [Anonymous], P 2011 S THEOR MOD S
   Bahouth A, 2007, PROC ANNU SIMUL SYMP, P114, DOI 10.1109/ANSS.2007.36
   Bangsow S., 2010, Manufacturing simulation with plant simulation and simtalk: usage and programming with examples and solutions
   Banks J, 2000, PROCEEDINGS OF THE 2000 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P9, DOI 10.1109/WSC.2000.899690
   Bause F, 2010, SIMUL-T SOC MOD SIM, V86, P291, DOI 10.1177/0037549709104236
   BISCHAK DP, 1991, 1991 WINTER SIMULATION CONFERENCE PROCEEDINGS, P194, DOI 10.1109/WSC.1991.185615
   Can B, 2008, 2008 WINTER SIMULATION CONFERENCE, VOLS 1-5, P1829, DOI 10.1109/WSC.2008.4736272
   Dagkakis G, 2016, J SIMUL, V10, P193, DOI 10.1057/jos.2015.9
   di Bella E, 2013, INFORM SCIENCES, V221, P72, DOI 10.1016/j.ins.2012.09.031
   Fangohr H, 2004, LECT NOTES COMPUT SC, V3039, P1210
   Fogel Karl, 2005, Producing Open Source Software: How to Run a Successful Free Software Project, V1st
   Fu MC, 2002, INFORMS J COMPUT, V14, P192, DOI 10.1287/ijoc.14.3.192.113
   FUJIMOTO RM, 1990, COMMUN ACM, V33, P30, DOI 10.1145/84537.84545
   Grandell L., 2006, P 8 AUSTR C COMP ED, V52, P71, DOI DOI 10.5555/1151869.1151880
   Heavey C, 2014, WINT SIMUL C PROC, P2824, DOI 10.1109/WSC.2014.7020124
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Hlupic V, 2000, PROCEEDINGS OF THE 2000 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P1676, DOI 10.1109/WSC.2000.899156
   Jahangirian M, 2010, EUR J OPER RES, V203, P1, DOI 10.1016/j.ejor.2009.06.004
   Karabuk S, 2007, IEEE SOFTWARE, V24, P39, DOI 10.1109/MS.2007.125
   Kelton W.David., 2000, SIMULATION MODELING
   King D., 2013, P 2013 GRAND CHALLEN, P1
   Kuljis J, 2001, SIMULAT PRACT THEORY, V9, P37, DOI 10.1016/S0928-4869(01)00032-5
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   Lavrijsen WTLP, 2012, J PHYS CONF SER, V396, DOI 10.1088/1742-6596/396/5/052046
   Liu XC, 2012, SIMUL MODEL PRACT TH, V26, P135, DOI 10.1016/j.simpat.2012.05.001
   Margo MW, 2008, LECT NOTES COMPUT SC, V4942, P116
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P3, DOI 10.1145/272991.272995
   McLean C, 2001, WSC'01: PROCEEDINGS OF THE 2001 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P1478, DOI 10.1109/WSC.2001.977475
   Millman KJ, 2011, COMPUT SCI ENG, V13, P9, DOI 10.1109/MCSE.2011.36
   Núñez A, 2012, SIMUL MODEL PRACT TH, V20, P12, DOI 10.1016/j.simpat.2011.08.009
   Pedregosa F, 2011, J. Mach. Learn. Res., V12, P2825
   Muñoz-Gea JP, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN FUTURE INTERNET, P53, DOI 10.1109/AFIN.2009.16
   Pegden CD, 2010, WINT SIMUL C PROC, P210, DOI 10.1109/WSC.2010.5679161
   Pidd M, 2006, J SIMUL, V1, P7, DOI 10.1057/palgrave.jos.4250004
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Rentsch T., 1982, SIGPLAN Notices, V17, P51, DOI 10.1145/947955.947961
   Rozel B., 2009, Proceedings of the IEEE Bucharest Power Tech Conference, P1
   Sarkar N., 2011, J SELECTED AREAS TEL, P10
   Schriber T., 2012, Simulation Conference (WSC), Proceedings of the 2012 Winter, P1
   Seila AF, 1995, 1995 WINTER SIMULATION CONFERENCE PROCEEDINGS, P7
   Shannon RE, 1998, 1998 WINTER SIMULATION CONFERENCE PROCEEDINGS, VOLS 1 AND 2, P7, DOI 10.1109/WSC.1998.744892
   Smets-Solanes Jean-Paul, 2011, 2011 Proceedings of IEEE International Conference on Services Computing (SCC 2011), P765, DOI 10.1109/SCC.2011.97
   Tabba Fuad, 2010, Computer Architecture News, V38, P12, DOI 10.1145/1978907.1978911
   Tako AA, 2012, DECIS SUPPORT SYST, V52, P802, DOI 10.1016/j.dss.2011.11.015
   Tako AA, 2010, EUR J OPER RES, V207, P784, DOI 10.1016/j.ejor.2010.05.011
   Ueda M, 2005, 2005 SYMPOSIUM ON APPLICATIONS AND THE INTERNET WORKSHOPS, PROCEEDINGS, P381, DOI 10.1109/SAINTW.2005.1620054
   Valentin EC, 2005, PROCEEDINGS OF THE 2005 WINTER SIMULATION CONFERENCE, VOLS 1-4, P654, DOI 10.1109/WSC.2005.1574306
   Varga A., 2008, An Overview of the Omnet++ Simulation Environment, P1
   von Krogh G, 2012, MIS QUART, V36, P649
   Weingärtner E, 2009, IEEE ICC, P1287
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 66
TC 8
Z9 8
U1 2
U2 25
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2016
VL 46
IS 7
BP 955
EP 981
DI 10.1002/spe.2347
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN7OL
UT WOS:000377266200004
DA 2024-07-18
ER

PT J
AU Huang, CM
   Lin, SY
   Hsieh, TH
AF Huang, Chung-Ming
   Lin, Shih-Yang
   Hsieh, Tsung-Han
TI The personalized context-aware mobile advertisement system using a novel
   approaching detection method over cellular networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE positioning method; fingerprinting database; cellular networks; mobile
   advertisement; context-aware; ad targeting
AB With the rapid development of smartphones and personal tablet computers, it brings a greatly growing rate of ubiquitous applications for location-based services (LBS). One famous LBS is the mobile advertisement. A mobile advertisement system brings benefits and opportunities among users, service providers, and advertisers. In this paper, we propose a personalized context-aware mobile advertisement system (PCA-MAS) over cellular networks, which contains two new techniques called (i) approaching detection method (ADM) and (ii) context-aware ad targeting method (CAADTM). ADM can find some point of interests that a user is approaching; CAADTM pushes advertisements that satisfy user's requirement based on the user's context, that is, user's profile, current time, current position, and so on. Our experimental results show that (i) ADM has the good hit rate to determine those point of interests that a user is approaching within the 150-m radius of the approaching range, and (ii) CAADTM has the good hit rate of finding appropriate advertisements that a user prefers through the favorite content table filtering, the annoying content table filtering, and the advertisement clicking feedback. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Huang, Chung-Ming; Lin, Shih-Yang; Hsieh, Tsung-Han] Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 70101, Taiwan.
C3 National Cheng Kung University
RP Huang, CM (corresponding author), Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 70101, Taiwan.
EM huangcm@locust.csie.ncku.edu.tw
RI Lin, Shih-Yang/KBQ-2834-2024
FU National Science Council of the Republic of China Taiwan [NSC
   100-2219-E-006-002]; Institute for Information Industry (III)
FX This research is supported by the National Science Council of the
   Republic of China Taiwan under the contract number NSC
   100-2219-E-006-002 and Institute for Information Industry (III).
CR Aalto Lauri., 2004, INT C MOBILE SYSTEMS, P49, DOI [10.1145/990064.990073, DOI 10.1145/990064.990073]
   [Anonymous], 2007, P 2 INT C COMM NETW
   Chantanetra S, 2003, IEEE ST CONF RES DEV, P319
   Chung-Ming Huang, 2011, Proceedings of the 2011 14th International Conference on Network-Based Information Systems (NBiS 2011), P325, DOI 10.1109/NBiS.2011.56
   Comput. Sci. Dept. Univ. Fed. de Campina Grande and Brazil, 2006, ADV INF NETW APPL, V1, DOI [10.1109/AINA.2006.16, DOI 10.1109/AINA.2006.16]
   De Castro J.E., 2006, Proceedings of the 7th International Conference on Mobile Data Management, P91, DOI DOI 10.1109/MDM.2006.105
   Gustafsson F, 2003, 2003 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH, AND SIGNAL PROCESSING, VOL VI, PROCEEDINGS, P553
   Halim AH, 2008, INTERNATIONAL SYMPOSIUM OF INFORMATION TECHNOLOGY 2008, VOLS 1-4, PROCEEDINGS, P2375
   Huang C-M, 2012, TELEMATICS SERVICE D, DOI [10.1002/spe.2125, DOI 10.1002/SPE.2125]
   Jerry Zeyu Gao, 2008, GPC Workshops - 2008 3rd International Conference on Grid and Pervasive Computing Workshops, P164, DOI 10.1109/GPC.WORKSHOPS.2008.16
   Kim Y, 2009, WIREL TELECOMM SYMP, P280
   Krumm J, 2011, IEEE PERVAS COMPUT, V10, P66, DOI 10.1109/MPRV.2010.21
   Kuo1 S-P, 2007, P IEEE INT C MOB ADH, P1
   Lee JW, 2009, FOURTH INTERNATIONAL CONFERENCE ON COOPERATION AND PROMOTION OF INFORMATION RESOURCES IN SCIENCE AND TECHNOLOGY (COINFO 2009), P137, DOI 10.1109/COINFO.2009.27
   Liapis D, 2008, 2008 3RD INTERNATIONAL SYMPOSIUM ON WIRELESS PERVASIVE COMPUTING, VOLS 1-2, P133, DOI 10.1109/ISWPC.2008.4556182
   Niculescu D., 2003, 22 ANN JOINT C IEEE, V3, P1734, DOI DOI 10.1109/INFCOM.2003.1209196
   Rashid O, 2005, ICMB 2005: International Conference on Mobile Business, P377, DOI 10.1109/ICMB.2005.45
   Simsim MT, 2006, IEEE VTS VEH TECHNOL, P2666
   Spirito M. A., 1999, Gateway to 21st Century Communications Village. VTC 1999-Fall. IEEE VTS 50th Vehicular Technology Conference (Cat. No.99CH36324), P2072, DOI 10.1109/VETECF.1999.797302
   Trevisani E, 2004, SIXTH IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P51, DOI 10.1109/MCSA.2004.9
   Xu DJ, 2008, DECIS SUPPORT SYST, V44, P710, DOI 10.1016/j.dss.2007.10.002
NR 21
TC 3
Z9 3
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2015
VL 45
IS 1
BP 31
EP 52
DI 10.1002/spe.2208
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY4FC
UT WOS:000347532700002
DA 2024-07-18
ER

PT J
AU Deufemia, V
   Giordano, M
   Polese, G
   Tortora, G
AF Deufemia, Vincenzo
   Giordano, Massimiliano
   Polese, Giuseppe
   Tortora, Genoveffa
TI A visual language-based system for extraction-transformation-loading
   development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data integration; visual languages; ETL processes
ID ETL PROCESSES; DESIGN; FRAMEWORK
AB Data warehouse loading and refreshment is typically performed by means of complex software processes called extraction-transformation-loading (ETL). In this paper, we propose a system based on a suite of visual languages for mastering several aspects of the ETL development process, turning it into a visual programming task. The approach can be easily generalized and applied to other data integration contexts beyond data warehouses. It introduces two new visual languages that are used to specify the ETL process, which can also be represented by means of UML activity diagrams. In particular, the first visual language supports data manipulation activities, whereas the second one provides traceability information of attributes to highlight the impact of potential transformations on integrated schemas depending on them. Once the whole ETL process has been visually specified, the designer might invoke the automatic generation of an activity diagram representing a possible orchestration of it based on its dependencies. The designer can edit such a diagram to modify the proposed orchestration provided that changes do not alter data dependencies. The final specification can be translated into code that is executable on the data sources. Finally, the effectiveness of the proposed approach has been validated through a user study in which we have compared the effort needed to design an ETL process in our approach with respect to the one required with main visual approaches described in the literature.Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Deufemia, Vincenzo; Giordano, Massimiliano; Polese, Giuseppe; Tortora, Genoveffa] Univ Salerno, Dept Management & Informat Technol, I-84084 Fisciano, SA, Italy.
C3 University of Salerno
RP Deufemia, V (corresponding author), Univ Salerno, Dept Management & Informat Technol, I-84084 Fisciano, SA, Italy.
EM deufemia@unisa.it
RI Polese, Giuseppe/CAG-5264-2022; Deufemia, Vincenzo/M-3553-2016
OI Polese, Giuseppe/0000-0002-8496-2658; Deufemia,
   Vincenzo/0000-0002-6711-3590
FU 'Indiana MAS and the Digital Preservation of Rock Carvings' FIRB project
   - Italian Ministry for Education, University and Research [RBFR10PEIT]
FX This research is supported by the 'Indiana MAS and the Digital
   Preservation of Rock Carvings' FIRB project funded by the Italian
   Ministry for Education, University and Research, under grant RBFR10PEIT.
CR [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2011, P ACM
   [Anonymous], 2007, WEB SERV BUS PROC EX
   BRADY JT, 1986, IEEE COMPUT GRAPH, V6, P25, DOI 10.1109/MCG.1986.276789
   Bullen S, 2005, DEFINITIVE GUIDE DEV
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Chang SK, 2007, IEEE T KNOWL DATA EN, V19, P1666, DOI 10.1109/TKDE.2007.190651
   Costagliola G, 2005, PROC INT CONF DOC, P1226, DOI 10.1109/ICDAR.2005.218
   Costagliola G, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P19, DOI 10.1109/VLHCC.2004.3
   Costagliola G, 2007, J VISUAL LANG COMPUT, V18, P165, DOI 10.1016/j.jvlc.2006.06.002
   Costagliola G, 2009, IEEE T KNOWL DATA EN, V21, P773, DOI 10.1109/TKDE.2008.133
   Demarest M., 1997, The politics of data warehousing
   Deufemia Vincenzo, 2013, Web Technologies and Applications. 15th Asia-Pacific Web Conference, APWeb 2013. Proceedings, P506, DOI 10.1007/978-3-642-37401-2_50
   Deufemia Vincenzo, 2012, Proceedings of the 8th International Conference on Web Information Systems and Technologies. WEBIST 2012, P653
   Di Lorenzo G, 2009, SIGMOD REC, V38, P59, DOI 10.1145/1558334.1558343
   El Akkaoui Z, 2009, P ACM 12 INT WORKSH, P41
   Galhardas H, 2000, SIGMOD RECORD, V29, P590
   Hellerstein JM, 1999, COMPUTER, V32, P51, DOI 10.1109/2.781635
   Inmon W.H., 1996, BUILDING DATA WAREHO, VSecond
   Inmon WH, 1997, DATA WAREHHOUSE BUDG
   Ishikawa K., 1976, Guide to Quality Control
   Luján-Mora S, 2004, LECT NOTES COMPUT SC, V3288, P191
   Madsen MR, 2009, TECHNICAL REPORT
   Mascardi Viviana, 2012, Agent and Multi-Agent Systems. Technologies and Applications. Proceedings 6th KES International Conference, KES-AMSTA 2012, P271, DOI 10.1007/978-3-642-30947-2_31
   Microsoft, MS DAT TRANSF SERV
   Norman KL, 2006, INTERACT COMPUT, V18, P246, DOI 10.1016/j.intcom.2005.06.002
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Raman V., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P381
   Romero Oscar, 2011, Data Warehousing and Knowledge Discovery. Proceedings 13th International Conference, DaWaK 2011, P80, DOI 10.1007/978-3-642-23544-3_7
   Roth MT, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P266
   Shilakes C., 1998, ENTERPRISE INFORM PO
   Shu N. C., 1977, ACM Transactions on Database Systems, V2, P134, DOI 10.1145/320544.320549
   Simitsis A, 2005, IEEE T KNOWL DATA EN, V17, P1404, DOI 10.1109/TKDE.2005.169
   Simitsis A., 2012, P 2012 INT C MANAGEM, P829
   Simitsis A, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P953
   Simitsis A, 2009, LECT NOTES COMPUT SC, V5895, P199, DOI 10.1007/978-3-642-10424-4_15
   Simitsis A, 2010, DATA KNOWL ENG, V69, P96, DOI 10.1016/j.datak.2009.08.009
   Skoutas D, 2009, LECT NOTES COMPUT SC, V5530, P120
   Song SX, 2011, ACM T DATABASE SYST, V36, DOI 10.1145/2000824.2000826
   Trujillo J, 2003, LECT NOTES COMPUT SC, V2813, P307
   Vassiliadis P, 2005, INFORM SYST, V30, P492, DOI 10.1016/j.is.2004.11.002
   Vassiliadis P., 2002, P 5 ACM INT WORKSH D, P14
   Vassiliadis P., 2002, PROC 4 TH INT WORKSH, P52
   Wilkinson K., 2011, P 14 INT C EXT DAT T, P503
   Wilkinson K, 2010, LECT NOTES COMPUT SC, V6412, P15, DOI 10.1007/978-3-642-16373-9_2
NR 46
TC 8
Z9 8
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2014
VL 44
IS 12
BP 1417
EP 1440
DI 10.1002/spe.2201
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AT2AR
UT WOS:000344733600001
DA 2024-07-18
ER

PT J
AU Gedik, B
AF Gedik, Bugra
TI Generic windowing support for extensible stream processing systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data stream processing; windowing semantics; windowing library
ID LANGUAGE
AB Stream processing applications process high volume, continuous feeds from live data sources, employ data-in-motion analytics to analyze these feeds, and produce near real-time insights with low latency. One of the fundamental characteristics of such applications is the on-the-fly nature of the computation, which does not require access to disk resident data. Stream processing applications store the most recent history of streams in memory and use it to perform the necessary modeling and analysis tasks. This recent history is often managed using windows. All data stream management systems provide some form of windowing functionality. Windowing makes it possible to implement streaming versions of the traditionally blocking relational operators, such as streaming aggregations, joins, and sorts, as well as any other analytic operator that requires keeping the most recent tuples as state, such as time series analysis operators and signal processing operators. In this paper, we provide a categorization of different window types and policies employed in stream processing applications and give detailed operational semantics for various window configurations. We describe an extensibility mechanism that makes it possible to integrate windowing support into user-defined operators, enabling consistent syntax and semantics across system-provided and third-party toolkits of streaming operators. We describe the design and implementation of a runtime windowing library that significantly simplifies the construction of window-based operators by decoupling the handling of window policies and operator logic from each other. We present our experience using the windowing library to implement a relational operators toolkit and compare the efficacy of the solution to an earlier implementation that did not employ a common windowing library. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 Bilkent Univ, Dept Comp Engn, TR-06800 Ankara, Turkey.
C3 Ihsan Dogramaci Bilkent University
RP Gedik, B (corresponding author), Bilkent Univ, Dept Comp Engn, TR-06800 Ankara, Turkey.
EM bgedik@cs.bilkent.edu.tr
RI Gedik, Buğra/F-7842-2014
CR Abadi D.J., 2005, CIDR, P277
   Ali M.H., 2010, IEEE DATA ENG B, V33, P69
   Andrade H, 2011, J PARALLEL DISTR COM, V71, P145, DOI 10.1016/j.jpdc.2010.08.007
   [Anonymous], 2008, Proceedings of the 2008 ACM SIGMOD international conference on Management of data, SIGMOD'08, ACM
   [Anonymous], 2007, Data streams: models and algorithms, DOI [10.1007/978-0-387-47534-9_9, DOI 10.1007/978-0-387-47534-9_9]
   Arasu A, 2006, VLDB J, V15, P121, DOI 10.1007/s00778-004-0147-z
   Arasu A., 2003, IEEE DATA ENG B, V26, P19
   Arasu Arvind, 2004, P 30 INT C VER LARG, P336
   Botan I, 2010, PROC VLDB ENDOW, V3, P232, DOI 10.14778/1920841.1920874
   CHANDRASEKARAN S, 2003, P 1 BIENN C INN DAT, P269
   Cranor Chuck., 2003, ACM SIGMOD
   Gedik B, 2007, IEEE T KNOWL DATA EN, V19, P1363, DOI 10.1109/TKDE.2007.190630
   Gedik B, 2012, SOFTWARE PRACT EXPER, V42, P1363, DOI 10.1002/spe.1139
   Golab L., 2006, CIKM, P844
   Hirzel M., 2009, RC24897 IBM
   Jain Navendu., 2006, SIGMOD 06 P 2006 ACM, P431, DOI DOI 10.1145/1142473.1142522
   Krämer J, 2009, ACM T DATABASE SYST, V34, DOI 10.1145/1508857.1508861
   Li J, 2005, INT C MAN DAT ACM SI, P311
   Maier D., 2009, ENCY DATABASE SYSTEM, P2216
   Srivastava U., 2004, VLDB, P324
   Tucker PA, 2003, IEEE T KNOWL DATA EN, V15, P555, DOI 10.1109/TKDE.2003.1198390
   Turaga D, 2010, SOFTWARE PRACT EXPER, V40, P1073, DOI 10.1002/spe.993
   Wu K.-L., 2007, Proc. of VLDB, P1185
NR 23
TC 21
Z9 23
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2014
VL 44
IS 9
BP 1105
EP 1128
DI 10.1002/spe.2194
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN2MI
UT WOS:000340419100004
DA 2024-07-18
ER

PT J
AU Tien, TR
   You, YP
AF Tien, Tsan-Rong
   You, Yi-Ping
TI Enabling OpenCL support for GPGPU in Kernel-based Virtual Machine
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE OpenCL; system virtualization; GPU virtualization; KVM; API remoting
AB The importance of heterogeneous multicore programming is increasing, and Open Computing Language (OpenCL) is an open industrial standard for parallel programming that provides a uniform programming model for programmers to write efficient, portable code for heterogeneous computing devices. However, OpenCL is not supported in the system virtualization environments that are often used to improve resource utilization. In this paper, we propose an OpenCL virtualization framework based on Kernel-based Virtual Machine with API remoting to enable multiplexing of multiple guest virtual machines (guest VMs) over the underlying OpenCL resources. The framework comprises three major components: (i) an OpenCL library implementation in guest VMs for packing/unpacking OpenCL requests/responses; (ii) a virtual device, called virtio-CL, that is responsible for the communication between guest VMs and the hypervisor (also called the VM monitor); and (iii) a thread, called CL thread, that is used for the OpenCL API invocation. Although the overhead of the proposed virtualization framework is directly affected by the amount of data to be transferred between the OpenCL host and devices because of the primitive nature of API remoting, experiments demonstrated that our virtualization framework has a small virtualization overhead (mean of 6.8%) for six common device-intensive OpenCL programs and performs well when the number of guest VMs involved in the system increases. These results indirectly infer that the framework allows for effective resource utilization of OpenCL devices.Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Tien, Tsan-Rong; You, Yi-Ping] Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
C3 National Yang Ming Chiao Tung University
RP You, YP (corresponding author), Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
EM ypyou@cs.nctu.edu.tw
OI You, Yi-Ping/0000-0002-4455-3147
FU National Science Council of Taiwan [NSC-97-2218-E-009-043-MY3,
   NSC-100-2218-E-009-011-MY3]
FX This study was partially supported by the National Science Council of
   Taiwan under grants NSC-97-2218-E-009-043-MY3 and
   NSC-100-2218-E-009-011-MY3.
CR [Anonymous], 2009, NVIDIAs Next Generation CUDA Compute Architecture: Fermi
   [Anonymous], DEV KIT LIN POW
   [Anonymous], 2003, ACM SIGOPS OPERATING
   [Anonymous], TAK GRAPH PROC GRAPH
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Buck I., 2000, P ACM SIGGRAPH EUROG, P87, DOI DOI 10.1145/346876.348233
   Dowty Micah, 2009, Operating Systems Review, V43, P73, DOI 10.1145/1618525.1618534
   Duato J, 2009, EUR 2009 EUR 09, DOI [10.1007/978-3-642-14122-5_44, DOI 10.1007/978-3-642-14122-5_44]
   Giunta G, 2010, LECT NOTES COMPUT SC, V6271, P379, DOI 10.1007/978-3-642-15277-1_37
   Gupta V., 2009, Proc. of the 3rd ACM Workshop on System-level Virtualization for High Performance Computing, P17, DOI DOI 10.1145/1519138.1519141
   Intel Cooperation, 2011, INT VIRT TECHN DIR I
   Jones MT, VIRTIO I O VIRTUALIZ
   Khronos Group, 2011, OPENCL SPEC
   Kim H., 2009, Proceedings of the 2009 ACM SIG-PLAN/SIGOPS international conference on Virtual execution environments, VEE '09, P101
   Kiszka J, 2010, TECHN SESS LIN K
   Kivity A., 2007, P LIN S DTTAW DNTOR, V1, P225
   Lagar-Cavilla HA, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P33
   Ongaro D, 2008, VEE'08: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P1
   Russell Rusty, 2008, Operating Systems Review, V42, P95, DOI 10.1145/1400097.1400108
   Shi L., 2009, Parallel and Distributed Processing Symposium, International, P1, DOI DOI 10.1109/IPDPS.2009.5161020
   Weggerle A, 2010, CLOUD COMP VIRT 2010
NR 21
TC 6
Z9 6
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2014
VL 44
IS 5
BP 483
EP 510
DI 10.1002/spe.2166
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE3YW
UT WOS:000333915400001
DA 2024-07-18
ER

PT J
AU Lee, YJ
   Kim, EK
   Cho, HG
   Woo, G
AF Lee, Yun-Jung
   Kim, Eun-Kyung
   Cho, Hwan-Gue
   Woo, Gyun
TI Detecting and visualizing online dispute dynamics in replying comments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE comment dynamics; online discussion; online dispute detection; Web
   behavior
AB In Web-based social media (blogs, Internet forums, etc.), readers express their opinions by attaching reply comments to articles and understand others' perspectives by reading these comments. On Web forums, users discuss and argue with others via reply comments. Thus, a series of comments may provide new information, particularly about disputes among participants. Unfortunately, current systems for viewing reply comments are primitive; it is hard to follow disputes and their relationships by using such systems. We examine the characteristics of disputes by using reply comments and propose a novel system for automatically detecting disputes and their relationships among a large set of reply comments. This paper defines a dispute section as a series of comments where the dispute index is sufficiently high. The dispute index is determined using an exponential model with three control parameters. Next, the dispute relationship can be defined according to a pair of arguing commenters. The basic concept is to exploit the order of comment posting times and comment writer information when detecting dispute sections because the comments tend to appear in ordered pairs. The proposed system detects dispute sections and visualizes them according to dispute relationships among commenters, enabling users to appreciate the controversial structure of comments. To test the performance of our system, we constructed a dataset containing comment sequences associated with 40 articles collected from an Web forum. We constructed the set of dispute comments manually. We found that the detection accuracy of our system for disputes and their relationships were 83% and 78% on average. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Lee, Yun-Jung] Pusan Natl Univ, Ctr U Port IT Res & Educ, Pusan 609735, South Korea.
   [Kim, Eun-Kyung; Cho, Hwan-Gue; Woo, Gyun] Pusan Natl Univ, Dept Comp Engn, Pusan 609735, South Korea.
C3 Pusan National University; Pusan National University
RP Woo, G (corresponding author), Pusan Natl Univ, Dept Comp Engn, Pusan 609735, South Korea.
EM woogyun@pusan.ac.kr
RI Woo, Gyun/KEJ-3643-2024
OI Woo, Gyun/0009-0006-0469-3723
FU National Research Foundation of Korea; Korean Government
   [NRF-2010-371-B00008]
FX This work was supported by the National Research Foundation of Korea
   Grant funded by the Korean Government (NRF-2010-371-B00008).
CR [Anonymous], 2006, 3 ANN WORKSH WEBL EC
   [Anonymous], 2009, P 4 INT C COMMUNITIE, DOI DOI 10.1145/1556460.1556497
   [Anonymous], 2010, P 19 INT C WORLD WID
   Bonsignore Elizabeth M., 2009, 2009 International Conference on Computational Science and Engineering (CSE), P332, DOI 10.1109/CSE.2009.120
   Efimova L, 2004, P 9 INT WORK C LANG
   Ennals R., 2010, Proceedings of the fourth workshop on Information Credibility (WICOW), P67
   Gomez Vicenc, 2008, P 17 INT C WORLD WID, P645, DOI [DOI 10.1145/1367497.1367585, 10.1145/1367497.1367585]
   Grabowski A, 2009, PHYSICA A, V388, P961, DOI 10.1016/j.physa.2008.11.036
   Hansen DL, 2010, LECT NOTES COMPUT SC, V6335, P47, DOI 10.1007/978-3-642-15470-6_7
   Hu Meishan., 2007, Proceedings of the sixteenth ACM conference on Conference on information and knowledge management, P901, DOI DOI 10.1145/1321440.1321571
   Lee Y-J, 2011, P 2011 ACM S APPL CO, P786
   Leprovost Damien, 2012, Web Intelligence and Agent Systems, V10, P93, DOI 10.3233/WIA-2012-0234
   Siersdorfer S., 2010, Proceedings of the 19th International Conference on World Wide Web, WWW'10, P891, DOI DOI 10.1145/1772690.1772781
   Walker D.M., 2006, Proceedings of the American Society for Information Science and Technology, V43, P1
   Watts DJ, 2007, J CONSUM RES, V34, P441, DOI 10.1086/518527
   Wen I Yang, 2009, International Journal of Electronic Business Management, V7, P201
   Yun-Jung Lee, 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P674, DOI 10.1109/CIT.2010.133
   Zhou L, 2006, P AAAI 2006 SPRING S
NR 18
TC 2
Z9 2
U1 1
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2013
VL 43
IS 12
SI SI
BP 1395
EP 1413
DI 10.1002/spe.2153
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 248JD
UT WOS:000326694500002
DA 2024-07-18
ER

PT J
AU El Boussaidi, G
   Mili, H
AF El Boussaidi, Ghizlane
   Mili, Hafedh
TI Understanding design patterns - what is the problem?
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design patterns; design problems; pattern detection; model-driven
   development
ID SPECIFICATION; ARCHITECTURE; SUPPORT; TOOL
AB Design patterns codify proven solutions to recurring design problems. Their proper use within a development context requires that: (i) we understand them; (ii) we ascertain their applicability or relevance to the design problem at hand; and (iii) we apply them faithfully to the problem at hand. We argue that an explicit representation of the design problem solved by a design pattern is key to supporting the three tasks in an integrated fashion. We propose a model-driven representation of design patterns consisting of triples?<?MP, MS, T?>?where MP is a model of the problem solved by the pattern, MS is a model of the solution proposed by the pattern, and T is a model transformation of an instance of the problem into an instance of the solution. Given an object-oriented design model, we look for model fragments that match MP (call them instances of MP), and when one is found, we apply the transformation T yielding an instance of MS. Easier said than done. Experimentation with an Eclipse Modeling Framework-based implementation of our approach applied to a number of open-source software application's raised fundamental questions about: (i) the nature of design patterns in general, and the ones that lend themselves to our approach, and (ii) our understanding and codification of seemingly simple design patterns. In this paper, we present the principles behind our approach, report on the results of applying the approach to the Gang of Four (GoF) design patterns, and discuss the representability of design problems solved by these patterns. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [El Boussaidi, Ghizlane] Ecole Technol Super, Montreal, PQ, Canada.
   [El Boussaidi, Ghizlane; Mili, Hafedh] Univ Quebec, LATECE Lab, Montreal, PQ H3C 3P8, Canada.
C3 University of Quebec; Ecole de Technologie Superieure - Canada;
   University of Quebec; University of Quebec Montreal
RP El Boussaidi, G (corresponding author), Ecole Technol Super, Montreal, PQ, Canada.
EM ghizlane.elboussaidi@etsmtl.ca
RI Mili, Hafedh/JAO-1456-2023
CR Agrawal A., 2005, J SOFTWARE IN PRESS
   Albin-Amiot H, 2001, P ECCOP WORKSH AUT O
   Alencar P.S.C., 1997, Formal Methods Europe FME'97
   [Anonymous], ACT 12 C LANG MOD OB
   Arcelli F, 2006, 13TH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P196, DOI 10.1109/STEP.2005.12
   Bacchus F, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P311
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Bass L., 2013, SOFTWARE ARCHITECTUR
   BAXTER ID, 1992, COMMUN ACM, V35, P73, DOI 10.1145/129852.129859
   Biggerstaff TJ, 2004, IEEE T SOFTWARE ENG, V30, P1036, DOI 10.1109/TSE.2004.89
   Bottoni P, 2010, INFORM SOFTWARE TECH, V52, P821, DOI 10.1016/j.infsof.2010.03.005
   Budinsky FJ, 1996, IBM SYST J, V35, P151, DOI 10.1147/sj.352.0151
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Cinneide MO, 2000, THESIS U DUBLIN
   Ciupke O., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P18, DOI 10.1109/TOOLS.1999.787532
   Clements P, 2003, ADDISON WESLEY SEI S
   Coplien, 1998, P 3 EUR C PATT LANG, P11
   Corradini A., 1996, TR9617 U PIS
   Danada Yasunobu, 2002, J OBJECT TECHNOLOGY, V1, P143
   Debnath NC, 2006, I C COMP SYST APPLIC, P1146
   Eden A. H., 1999, TECHNICAL REPORT
   El Boussaidi G, 2007, P INT COMP SOFTW APP, P97
   El-Boussaidi G, 2009, THESIS U MONTREAL
   El-Boussaidi G, 2008, LECT NOTES COMPUT SC, V5301, P189, DOI 10.1007/978-3-540-87875-9_14
   Elaasar M, 2006, ACM IEEE INT C MOD D
   Fayad Mohamed E., 1999, Building Application Frameworks: Object-oriented Foundations of Framework Design
   Florijn G, 1997, LECT NOTES COMPUT SC, V1241, P472, DOI 10.1007/BFb0053391
   Fontana FA, 2011, INFORM SCIENCES, V181, P1306, DOI 10.1016/j.ins.2010.12.002
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gamma E., 1994, ANAL PATTERNS REUSAB
   Geeheneuc Yann-Gel., 2001, P 1 IJCAI WORKSHOP M, P57
   Gil J, 2005, ACM SIGPLAN NOTICES, V40, P97, DOI 10.1145/1103845.1094819
   Gross D., 2001, Requirements Engineering, V6, P18, DOI 10.1007/s007660170013
   Grunske L, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P91, DOI 10.1007/3-540-28554-7_5
   Gueheneuc YG, 2005, P LANG MOD OBJ BERN
   HORVATH A, 2007, 6 INT GT VMT WORKSH
   Hsueh NL, 2009, SOFTW SYST MODEL, V8, P67, DOI 10.1007/s10270-007-0063-y
   Kaczor O, 2010, INFORM SOFTWARE TECH, V52, P152, DOI 10.1016/j.infsof.2009.08.006
   Kampffmeyer H, 2007, LECT NOTES COMPUT SC, V4735, P211
   Keepence B, 1999, IEEE SOFTWARE, V16, P102, DOI 10.1109/52.776957
   Malone TW, 1999, MANAGE SCI, V45, P425, DOI 10.1287/mnsc.45.3.425
   MAPLESDEN D, 2002, P 14 INT C TECHN OO
   Milanova A., 2005, ASE, P76
   Mili H, 2005, LECT NOTES COMPUT SC, V3713, P186, DOI 10.1007/11557432_14
   PAGEL BU, 1996, P EUROPLOP
   PARTSCH H, 1983, COMPUT SURV, V15, P199, DOI 10.1145/356914.356917
   Rudolf Michael, 1998, P INT WORKSH THEOR A, P238
   Sahraoui HA, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P456, DOI 10.1109/APSEC.2000.896734
   Sterritt A, 2010, LECT NOTES COMPUT SC, V6138, P277, DOI 10.1007/978-3-642-13595-8_22
   Sunyé G, 2000, LECT NOTES COMPUT SC, V1850, P44
   Tahvildari L, 2004, J SOFTW MAINT EVOL-R, V16, P331, DOI 10.1002/smr.299
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   van Lamsweerde A, 2003, LECT NOTES COMPUT SC, V2804, P25
   Varró G, 2006, ELECTRON NOTES THEOR, V152, P191, DOI 10.1016/j.entcs.2005.10.025
   ZIMMER W, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P345
   ZUNDORF A, 1996, LECT NOTES COMPUTER, V1073, P454
NR 58
TC 12
Z9 13
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2012
VL 42
IS 12
BP 1495
EP 1529
DI 10.1002/spe.1145
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 040FM
UT WOS:000311307500003
DA 2024-07-18
ER

PT J
AU Wang, PS
   Mu, Y
   Susilo, W
   Yan, J
AF Wang, Peishun
   Mu, Yi
   Susilo, Willy
   Yan, Jun
TI Privacy preserving protocol for service aggregation in cloud computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE service aggregation; cloud computing; privacy; re-encryption
AB Cloud computing has increasingly become a new model in the world of computing, and more businesses are moving to the cloud. As a cost-effective and time-efficient way to develop new applications and services, service aggregation in cloud computing empowers all service providers and consumers and creates tremendous opportunities in various industry sectors. However, it also poses various challenges to the privacy of personal information as well as the confidentiality of business and governmental information. The full benefits of service aggregation in cloud computing would only be enjoyed if the privacy concerns are addressed properly. In this paper, we investigate the privacy issues in service aggregation in a cloudenvironment and propose a privacy preserving protocol that is suitable for this environment. To demonstrate the security of our system, we construct a security game called IND-P3SAC-CPA and prove the security of the protocol accordingly. Our protocol has a distinct property that allows any service provider to obtain only the queried data under its conspiracy with the cloud. Additionally, the efficiency and various extensions are also discussed. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Wang, Peishun; Mu, Yi; Susilo, Willy] Univ Wollongong, Sch Comp Sci & Software Engn, Wollongong, NSW 2522, Australia.
   [Yan, Jun] Univ Wollongong, Sch Informat Syst & Technol, Wollongong, NSW 2522, Australia.
C3 University of Wollongong; University of Wollongong
RP Wang, PS (corresponding author), Univ Wollongong, Sch Comp Sci & Software Engn, Northfields Ave, Wollongong, NSW 2522, Australia.
EM peishun@uow.edu.au
RI Susilo, Willy/A-3724-2008; Mu, Yi/AAC-3871-2019
OI Susilo, Willy/0000-0002-1562-5105; Yan, Jun/0000-0002-6474-1049
FU Smart Services CRC Australia
FX The authors would like to thank Smart Services CRC Australia for the
   support in making this work and the industry partners who provided
   valuable input on the direction of this work.
CR AmazonWeb Services LLC, 2009, CAS STUD TC3 HLTH
   [Anonymous], 2009, PRIVACY CLOUDS RISKS
   [Anonymous], 2003, P NETW DISTR SYST SE
   ATENIESE G, 2005, P 12 ANN NETW DISTR
   Ateniese G, 2009, LECT NOTES COMPUT SC, V5473, P279, DOI 10.1007/978-3-642-00862-7_19
   Blaze M, 1998, LECT NOTES COMPUT SC, V1403, P127, DOI 10.1007/BFb0054122
   Boneh D, 2003, SIAM J COMPUT, V32, P586, DOI 10.1137/S0097539701398521
   Canetti R, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P185
   Chow SSM, 2010, LECT NOTES COMPUT SC, V6055, P316
   CSA (Cloud Security Alliance), 2009, SEC GUID CRIT AR FOC, V1
   Green M, 2007, LECT NOTES COMPUT SC, V4521, P288
   Greenberg A., 2008, FORBES MAGAZINE
   Horrigan J., 2008, Use of Cloud Computing Applications and Services
   Liang Xiaohui., 2009, ASIACCS 09, P276, DOI DOI 10.1145/1533057.1533094
   Libert B, 2008, LECT NOTES COMPUT SC, V5209, P332, DOI 10.1007/978-3-540-85538-5_22
   Libert B, 2008, LECT NOTES COMPUT SC, V4939, P360, DOI 10.1007/978-3-540-78440-1_21
   Lindell Y, 2002, J CRYPTOL, V15, P177, DOI 10.1007/s00145-001-0019-2
   Liu K, 2006, PRIVACY PRESERVING D
   Pearson S, 2009, CLOUD: 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING CHALLENGES OF CLOUD COMPUTING, P44, DOI 10.1109/CLOUD.2009.5071532
   Ristenpart T, 2009, ACM CCS 09 CHIC ILL
   Voltage Security, 2009, FORM PRES ENCR
   Wang P, 2010, 14 INT C COMP SUPP C, P166
   Wang P, 2010, 7 INT C SERV COMP IE
   Yao A. C., 1986, 27th Annual Symposium on Foundations of Computer Science (Cat. No.86CH2354-9), P162, DOI 10.1109/SFCS.1986.25
NR 24
TC 2
Z9 2
U1 0
U2 26
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2012
VL 42
IS 4
SI SI
BP 467
EP 483
DI 10.1002/spe.1129
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902OK
UT WOS:000301047600006
DA 2024-07-18
ER

PT J
AU Wu, YL
   Allen, AA
   Hernandez, F
   France, R
   Clarke, PJ
AF Wu, Yali
   Allen, Andrew A.
   Hernandez, Frank
   France, Robert
   Clarke, Peter J.
TI A domain-specific modeling approach to realizing user-centric
   communication
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE domain-specific modeling language; meta-models; model-driven
   development; user-centric communication
AB Advances in communication devices and technologies are dramatically expanding our communication capabilities and enabling a wide range of multimedia communication applications. The current approach to develop communication-intensive applications results in products that are fragmented, inflexible, and incapable of responding to changing end-users' communication needs. These limitations have resulted in the need for a new development approach of building communication applications that are driven by end-users and that support the dynamic nature of communication-based collaboration. To address this need, the Communication Virtual Machine (CVM) technology has been developed to support rapid specification and automatic realization of user-centric communication applications based on a domain-specific modeling approach. The CVM technology consists of a domain-specific modeling language (DSML), the Communication Modeling Language (CML), that is used to create communication models, and a semantic rich platform, the CVM, that realized the created communication models. In this paper, we report on our experiences of applying a systematic approach to engineering CML and the synthesis of CML models in CVM. Based on a feature model describing the taxonomy of the user-centric communication domain in a network independent manner, we develop the meta-model of CML and its different concrete syntaxes. We also present a behavioral specification (dynamic semantics) of CML that enables the dynamic synthesis of user-centric communication models into an executable form called communication control script. We validated the CML semantics using Kermeta, a meta-programming environment for engineering DSMLs, and evaluated the practicality of our approach using a CVM prototype and a set of experiments. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Wu, Yali; Allen, Andrew A.; Hernandez, Frank; Clarke, Peter J.] Florida Int Univ, Sch Comp & Informat Sci, Miami, FL 33199 USA.
   [France, Robert] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80532 USA.
C3 State University System of Florida; Florida International University;
   Colorado State University
RP Wu, YL (corresponding author), Florida Int Univ, Sch Comp & Informat Sci, Miami, FL 33199 USA.
EM ywu001@cs.fiu.edu
RI Clarke, Peter/AAF-8511-2021
OI Allen, Andrew/0000-0003-0244-3123; Clarke, Peter/0000-0003-0892-1907
FU National Science Foundation [HRD-0833093, OISE-0730065, CCF 1018711, CNS
   0854988]; US Dept of Ed. [P200A070543]; Florida International
   University; Division Of Human Resource Development; Direct For Education
   and Human Resources [0833093] Funding Source: National Science
   Foundation
FX This work was supported in part by the National Science Foundation under
   grants HRD-0833093, OISE-0730065, CCF 1018711, and CNS 0854988. Students
   working on this project were supported in part by a US Dept of Ed. grant
   P200A070543 and two Florida International University Dissertation Year
   Fellowships-Yali Wu and Andrew Allen. The authors thank Yingbo Wang for
   her work on the initial version of CML and CVM. We also thank Professor
   Jean-Marc Jezequel and the Triskell Research Team at INRIA Rennes for
   hosting Yali Wu and Andrew Allen during their visit in Summer 2009.
CR Allen A. A., 2009, CASCON 09, P203
   [Anonymous], 2009, USER CENTRIC COMMUNI
   Apple Inc, 2010, IP
   Apple Inc, 2010, FAC IPH 4
   Asterisk, 2010, DIG
   Burgy L, 2005, TELEPHONY SOFTWARE E, P12
   Burke Redmond P, 2004, Semin Thorac Cardiovasc Surg, V16, P283, DOI 10.1053/j.semtcvs.2004.08.012
   Clarke PJ, 2006, INT S COLLAB TECHNOL, P89, DOI 10.1109/CTS.2006.6
   Consel C., 2004, INT SEM DOM SPEC PRO
   Deng Y, 2008, J SYST SOFTWARE, V81, P1640, DOI 10.1016/j.jss.2008.02.020
   Deursen A, 2002, J COMPUTING INFORM T, V10, P12
   Dhara KK, 2009, GLOB TEL C GLOBECOM, P1
   DSM Forum, 2010, DOM SPEC MOD
   Google, 2010, ANDR DEV
   Group TP, 2010, PARL OS SPEC
   Heckel R, 2004, LECT NOTES COMPUTER, V3098, P39
   Hisano K, 2010, SKYPE4JAVA
   IBM, 2009, POW UN COMM COLL
   *IGN REALT, 2009, SMACK AP 3 1 0
   JML Development Team, 2010, JAV MSN MESS LIB
   Kang CK, 1990, CMUSEI90TR21, P6
   KREBS D, 2005, MOBILE SOFTWARE STAC
   Lasserre P, 2007, ALCATEL TELECOMMUNIC
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   MORFEO Open Source Community, 2010, MORFEO OP SOURC COMM
   Network Working Group CU, 2004, CALL PROC LANG CPL L
   *OBJ MAN GROUP, OBJ CONSTR LANG OCL
   Object Management Group, 2010, OMG FORM SPEC
   SIP Communicator Development Team, 2010, SIP COMM
   Tarkoma S., 2007, P 8 IEEE S WORLD WIR, P1
   The Eclipse Foundation, 2010, ECL TEST PERF TOOLS
   The JAIN-SIP Project, 2010, JAV AP SIP SIGN
   Triskell Team, 2009, KERM BREATH LIF YOUR
   van der Meer StefanArbanowski Sven., 2001, IEEE International Conference on Telecommunications, P425
   WANG Y, MOD RUNT WORKSH CONJ
   Wang YB, 2009, P INT COMP SOFTW APP, P254, DOI 10.1109/COMPSAC.2009.41
   WF-CML Development Team, 2010, WORKFL COMM MOD LANG
   Wu Y, 2008, 12 IASTED INT C SOFT, P210
   Wu Y., 2010, P 10 DOM SPEC MOD WO
   Yelmo JC, 2011, COMPUT COMMUN, V34, P209, DOI 10.1016/j.comcom.2010.04.002
   Youngmee Shin, 2008, 2008 Fourth Advanced International Conference on Telecommunications (AICT '08), P71, DOI 10.1109/AICT.2008.39
   Zhang C, 2010, MULTIMED TOOLS APPL, V50, P335, DOI 10.1007/s11042-009-0385-6
NR 42
TC 7
Z9 10
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2012
VL 42
IS 3
BP 357
EP 390
DI 10.1002/spe.1081
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 887KP
UT WOS:000299926600005
DA 2024-07-18
ER

PT J
AU Tolosa, JB
   Sanjuán-Martínez, O
   García-Díaz, V
   G-Bustelo, BCP
   Lovelle, JMC
AF Barranquero Tolosa, Jose
   Sanjuan-Martinez, Oscar
   Garcia-Diaz, Vicente
   Pelayo G-Bustelo, B. Cristina
   Cueva Lovelle, Juan Manuel
TI Towards the systematic measurement of ATL transformation models
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE MDE; model; transformation model; meta-transformation; metrics;
   measurement
ID INTEROPERABILITY
AB The Model-Driven Engineering paradigm is aimed at raising the abstraction level of Software Engineering approaches through the systematic use of models as primary artifacts, not only in software design and development, but also to understand, interact, configure, and modify the runtime behavior of software. It tries to overcome the wall between the documentation and the real state of the implementation. For that matter, our long-term goal seeks to reach a higher degree of interoperability among available meta-modeling technologies through bridges among technological spaces (TS bridges). The proposed system provides several ATL (ATLAS Transformation Language) transformations that enable the application of measuring operations over ATL transformation models and rules, and the generation of different complementary end-user models, such as SVG charts and (X)HTML reports. For this work, we have evaluated a set of meta-modeling TS bridges among UML, MOF, Ecore, KM3, and Microsoft DSL Tools. These results provide quantitative measurements of the declarative and imperative constructs of these transformations and relative quality factors as well. In addition to this, all the top-level results extracted from the measurement of these TS bridges are merged into one unique model in order to assist in performing a comparative study among them. This comparative study suggests that it is feasible to apply automatic transformations over transformation models, i.e. meta-transformations. In this regard, there are many open research trends towards complete management, validation, optimization, and inference of TS bridges between complementary meta-modeling technologies. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Barranquero Tolosa, Jose; Sanjuan-Martinez, Oscar; Garcia-Diaz, Vicente; Pelayo G-Bustelo, B. Cristina; Cueva Lovelle, Juan Manuel] Univ Oviedo, Dept Comp Sci, Oviedo 33007, Asturias, Spain.
C3 University of Oviedo
RP Tolosa, JB (corresponding author), Univ Oviedo, Dept Comp Sci, C Calvo Sotelo S-N, Oviedo 33007, Asturias, Spain.
EM barranquero@gmail.com
RI Garcia-Diaz, Vicente/T-3938-2017; Garcia-Bustelo, B. Cristina
   Pelayo/A-5791-2017
OI Garcia-Diaz, Vicente/0000-0003-2037-8548; Barranquero Tolosa,
   Jose/0000-0002-4577-1293
FU Spanish Ministry of Science and Innovation (MICINN) under FPI
   [BES-2009-027102, TIN2008-06247]; Regional Ministry of Education and
   Science (Government of the Principality of Asturias) under Severo Ochoa
   [BP09033]
FX This work was supported in part by the Spanish Ministry of Science and
   Innovation (MICINN), under FPI grant BES-2009-027102 (associated to
   research project TIN2008-06247); and by the Regional Ministry of
   Education and Science (Government of the Principality of Asturias),
   under Severo Ochoa grant BP09033.
CR ABREU F, 1998, P WORSH OBJ OR PROD, P258
   ABREU FBE, 1993, P 3 INT C SOFTW QUAL, P67
   ALLILAIRE F, 2006, P ECL TECHN EXCHANGE
   [Anonymous], 2002, 4 INT S DISTR OBJ AP
   [Anonymous], XSL TRANSFORMATIONS
   [Anonymous], OWL WEB ONTOLOGY LAN
   [Anonymous], OBJECT CONSTRAINT LA
   [Anonymous], Extensible Markup Language (XML) - World Wide Web Consortium
   [Anonymous], RESOURCE DESCRIPTION
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   BARONI AL, 2003, P 4 INT WORKSH OBJ O
   BARONI AL, 2002, THESIS VRIJE U BRUSS
   Tolosa JB, 2009, LECT NOTES COMPUT SC, V5518, P315, DOI 10.1007/978-3-642-02481-8_45
   BEZIVIN J, 2003, P 2 OOPSLA WORKSH GE
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   CHIDAMBER SR, 1993, P WORKSH PROC METR O
   Christoph A, 2005, LECT NOTES COMPUT SC, V3599, P93
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   CZARNECKI K, 2003, P 2 OOPSLA WORKSH GE
   DeMarco T, 1986, CONTROLLING SOFTWARE
   Dong J, 2009, SOFTWARE PRACT EXPER, V39, P773, DOI 10.1002/spe.914
   FABRO MDD, 2006, P ECL MOD S ECL SUMM
   FAVRE J, 2004, P 3 UML WORKSH SOFTW
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   García-Díaz V, 2009, LECT NOTES COMPUT SC, V5518, P299, DOI 10.1007/978-3-642-02481-8_43
   GARCIADIAZ V, 2009, THESIS U OVIEDO
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Ierusalimschy R, 2009, SOFTWARE PRACT EXPER, V39, P221, DOI 10.1002/spe.892
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   JOUAULT F, 2006, P 2006 ACM S APPL CO, P1188, DOI DOI 10.1145/1141277.1141561
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2007, SCI COMPUT PROGRAM, V68, P114, DOI 10.1016/j.scico.2007.05.005
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Lawley M, 2006, LECT NOTES COMPUT SC, V3844, P139
   LI W, 1995, J OBJECT-ORIENT PROG, V8, P48
   Lin YH, 2008, SOFTWARE PRACT EXPER, V38, P1475, DOI 10.1002/spe.876
   Ludewig Jochen, 2003, Softw Syst Model, V2, P5
   Mahmood S, 2008, SOFTWARE PRACT EXPER, V38, P117, DOI 10.1002/spe.769
   Mei H, 2002, J COMPUT SCI TECH-CH, V17, P757, DOI 10.1007/BF02960766
   Mellor StephenJ., 2004, MDA Distilled: Principles of Model-Driven Architecture
   Rensink A, 2008, LECT NOTES COMPUT SC, V5214, P463
   Rensink A, 2008, LECT NOTES COMPUT SC, V5088, P487
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   Seidewitz E, 2003, IEEE SOFTWARE, V20, P26, DOI 10.1109/MS.2003.1231147
   Soni D., 2009, International Journal of Computer Science and Information Security, V6, P46
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Taentzer G., 2005, P WORKSH MOD TRANSF, P1
   TOLOSA JB, 2009, THESIS U OVIEDO
   VANGORP P, 2008, THESIS U ANTWERP
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Varro D., 2003, Journal of Software and Systems Modeling, V2, P187, DOI [DOI 10.1007/S10270-003-0028-8, 10.1007/s10270-003-0028-8]
   Varró G, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P79, DOI 10.1109/VLHCC.2005.23
   Wu H, 2008, SOFTWARE PRACT EXPER, V38, P1073, DOI 10.1002/spe.863
   UML 2 0 OCL SPECIFIC
   TTC 2010 TRANSFORMAT
   OCL PORTAL CTR OCL R
   UML 2 2 INFRASTRUCTU
   ATL USE CASES MODELS
   ECLIPSE GENERATIVE M
   MOF 2 0 CORE SPECIFI
   GRABATS 2009 GRAPH B
   ATL USER MANUAL V0 7
   MDA GUIDE VERSION 1
   MOF 2 0 QUERY VIEW T
   MOF 20 XMI MAPPING 2
NR 71
TC 7
Z9 8
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2011
VL 41
IS 7
BP 789
EP 815
DI 10.1002/spe.1033
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 766TV
UT WOS:000290810300003
DA 2024-07-18
ER

PT J
AU Yang, YQ
   Yan, HJ
   Shao, ZL
   Guo, MY
AF Yang, Yanqin
   Yan, Haijin
   Shao, Zili
   Guo, Minyi
TI Compiler-assisted dynamic scratch-pad memory management with space
   overlapping for embedded systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler; scratch-pad memory; embedded system
AB Scratch-pad memory (SPM), a small, fast, software-managed on-chip SRAM (Static Random Access Memory) is widely used in embedded systems. With the ever-widening performance gap between processors and main memory, it is very important to reduce the serious off-chip memory access overheads caused by transferring data between SPM and off-chip memory. In this paper, we propose a novel compiler-assisted technique, ISOS (Iteration-access-pattern-based Space Overlapping SPM management), for dynamic SPM management with DMA (Direct Memory Access). In ISOS, we combine both SPM and DMA for performance optimization by exploiting the chance to overlap SPM space so as to further utilize the limited SPM space and reduce the number of DMA operations. We implement our technique based on IMPACT and conduct experiments using a set of benchmarks from DSPstone and Mediabench on the cycle-accurate VLIW simulator of Trimaran. The experimental results show that our technique achieves run-time performance improvement compared with the previous work. The average improvements are 13.15, 19.05, and 25.52% when the SPM sizes are 1KB, 512 bytes, and 256 bytes, respectively. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Shao, Zili] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
   [Yang, Yanqin; Guo, Minyi] Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai 200240, Peoples R China.
   [Yang, Yanqin] E China Normal Univ, Dept Comp Sci & Technol, Shanghai 200241, Peoples R China.
   [Yan, Haijin] Motorola Inc, Chicago, IL USA.
C3 Hong Kong Polytechnic University; Shanghai Jiao Tong University; East
   China Normal University
RP Shao, ZL (corresponding author), Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
EM cszlshao@comp.polyu.edu.hk
RI Shao, Zili/AAX-3339-2020
OI Shao, Zili/0000-0002-2173-2847
FU Research Grants Council of the Hong Kong Special Administrative Region,
   China [GRF 5269/08E]; HK PolyU [1-ZV5S]; National 863 Program of China
   [2006AA01Z172, 2006AA01Z199]; National Natural Science Foundation of
   China [60533040, 60773089]; National Science Fund for Distinguished
   Young Scholars [60725208]; Shanghai Pujiang Program [07pj14049]
FX This work is partially supported by the grants from the Research Grants
   Council of the Hong Kong Special Administrative Region, China (GRF
   5269/08E), HK PolyU (1-ZV5S), National 863 Program of China (Grant No.
   2006AA01Z172 and 2006AA01Z199), National Natural Science Foundation of
   China (Grant No. 60533040 and 60773089), National Science Fund for
   Distinguished Young Scholars (Grant No. 60725208), and Shanghai Pujiang
   Program (No. 07pj14049).
CR Anantharaman S, 1998, REAL TIM SYST SYMP P, P154, DOI 10.1109/REAL.1998.739740
   Angiolini F, 2005, IEEE T COMPUT AID D, V24, P1660, DOI 10.1109/TCAD.2005.852299
   Avissar Oren, 2002, ACM Trans. on Embedded Computing Systems (TECS), V1, P6, DOI [10.1145/581888.581891, DOI 10.1145/581888.581891]
   Avissar Oren., 2001, CASES 01 P 2001 INT, P34
   BALASA F, 1993, P IEEE INT C COMP AI, P669
   Banakar R, 2002, CODES 2002: PROCEEDINGS OF THE TENTH INTERNATIONAL SYMPOSIUM ON HARDWARE/SOFTWARE CODESIGN, P73, DOI 10.1109/CODES.2002.1003604
   CHANG PP, 1991, P 18 INT S COMP ARCH, P266
   Cho H., 2007, Proceedings of the 2007 ACMSIGPLAN/SIGBED Conference on Languages, Compilers, and Tools for Embedded Systems (LCTES), P195
   De Greef E, 1997, PARALLEL COMPUT, V23, P1811, DOI 10.1016/S0167-8191(97)00089-6
   Dominguez A., 2007, International conference on Compilers, architecture, and synthesis for embedded systems, P65
   Dominguez Angel., 2005, J EMBEDDED COMPUTING, V1, P521
   HISER JD, 2004, P 2004 ACM SIGPLAN S, P182
   Kandemir M, 2004, IEEE T COMPUT AID D, V23, P243, DOI 10.1109/TCAD.2003.822123
   Kandemir M, 2001, ISSS'01: 14TH INTERNATIONAL SYMPOSIUM ON SYSTEM SYNTHESIS, P7, DOI 10.1109/ISSS.2001.957905
   Kandemir M, 2001, DES AUT CON, P690, DOI 10.1109/DAC.2001.935595
   Li L, 2005, PACT 2005: 14TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P329
   Li LH, 2007, ACTA HORTIC, P207, DOI 10.17660/ActaHortic.2007.751.24
   Panda P.R., 1999, MEMORY ISSUES EMBEDD
   Panda PR, 1997, EUR CONF DESIG AUTOM, P7, DOI 10.1109/EDTC.1997.582323
   Panda PR, 2000, ACM T DES AUTOMAT EL, V5, P682, DOI 10.1145/348019.348570
   SCHREIBER R, 2004, HP TECHNICAL REPORTS, P11
   SJODIN J, 1998, COMPILER ARCHITECTUR, P205
   Steinke S, 2002, ISSS'02: 15TH INTERNATIONAL SYMPOSIUM ON SYSTEM SYNTHESIS, P213, DOI 10.1109/ISSS.2002.1227180
   Steinke S, 2002, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, 2002 PROCEEDINGS, P409, DOI 10.1109/DATE.2002.998306
   Udayakumaran S., 2003, CASES '03: Proceedings of the 2003 international conference on Compilers, architecture and synthesis for embedded systems, P276
   Udayakumaran Sumesh, 2006, ACM Transactions on Embedded Computing Systems (TECS), V5, P472
   Verma M, 2004, INTERNATIONAL CONFERENCE ON HARDWARE/SOFTWARE CODESIGN AND SYSTEM SYNTHESIS, P104
   Verma M, 2003, ASP-DAC 2003: PROCEEDINGS OF THE ASIA AND SOUTH PACIFIC DESIGN AUTOMATION CONFERENCE, P77, DOI 10.1109/ASPDAC.2003.1194997
   Vijaykrishnan N, 2000, PROCEEDING OF THE 27TH INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE, P95, DOI [10.1109/ISCA.2000.854381, 10.1145/342001.339659]
   Wang Z, 2001, IEEE T SIGNAL PROCES, V49, P2853, DOI 10.1109/78.960433
   Wang Z., 2001, P 2001 INT C COMPILE, P67
   WEHMEYER L, 2004, P 3 WORKSH MEM PERF, P114
   WEHMEYER L, 2004, P 4 INT WORKSH WORST, P120
   Yang YQ, 2010, CONCURR COMP-PRACT E, V22, P1874, DOI 10.1002/cpe.1602
   2009, ARM1136JF S ARM1136J
   2003, S3C2500 USERS MANUAL
   2008, DAVINCI DIGITAL MEDI
   2009, USING STM32F101XX ST
   2001, ELAN SC520 MICROCONT
NR 39
TC 5
Z9 5
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2011
VL 41
IS 7
BP 737
EP 752
DI 10.1002/spe.1020
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 766TV
UT WOS:000290810300001
DA 2024-07-18
ER

PT J
AU Nadella, S
   Janakiram, D
AF Nadella, Suneetha
   Janakiram, Dharanipragada
TI Message filters for hardening the Linux kernel
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE message filters; object orientation; Linux kernel; hardening
AB Various mechanisms for hardening the Linux kernel (for example, enforcing system call policies, device driver failure recovery, protection against exploitation of bugs in code) are proposed in the literature. The main problem with these mechanisms is that, they require changes in the kernel code leading to the possibility of introducing new bugs and hence increasing the testing time. We propose a message filter model as an extension to object-oriented wrappers for the Linux kernel, to dynamically provide various filtering capabilities to the kernel. This model works as a comprehensive framework for specifying system call policies, handling device driver faults, protecting the kernel against exploits of bugs in code etc, without modifying the existing kernel code. This considerably reduces the possibility of creating new bugs in the kernel code. We have integrated policies for system call interception and device driver failure handling, into the Linux kernel (2.6.9), using message filter model. Our experiments show that the overhead due to our filter objects is very low, making it a useful mechanism for providing filtering capabilities to the Linux kernel. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Nadella, Suneetha; Janakiram, Dharanipragada] IIT, Distributed & Object Syst Lab, Madras, Tamil Nadu, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Madras
RP Nadella, S (corresponding author), IIT, Distributed & Object Syst Lab, Madras, Tamil Nadu, India.
EM nsuneetha@gmail.com
FU Department of Information Technology, Government of India
FX The authors acknowledge the support received from the Department of
   Information Technology, Government of India, for this project work.
CR Bernaschi M., 2002, ACM Transactions on Information and Systems Security, V5, P36, DOI 10.1145/504909.504911
   Blaich A, 2009, SOFTWARE PRACTICE EX, V39, P15
   Bradski G, 2000, DR DOBBS J, V25, P120
   Brown A. B., 1997, Performance Evaluation Review, V25, P214, DOI 10.1145/258623.258690
   Cesare S., 1999, LINUX ANTIDEBUGGING
   Chou A., 2001, Operating Systems Review, V35, P73, DOI 10.1145/502059.502042
   DA W, 1999, JANUS APPROACH CONFI, P1
   Duda R. O., 2001, PATTERN CLASSIFICATI, P517
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garfinkel T, 2004, P 11 NETW DISTR SYST, P187
   Janakiram D, 2008, SOFTWARE PRACT EXPER, V38, P1411, DOI 10.1002/spe.879
   Joshi RK, 1997, SOFTWARE PRACT EXPER, V27, P677, DOI 10.1002/(SICI)1097-024X(199706)27:6<677::AID-SPE103>3.0.CO;2-I
   Krishnakumar R., 2005, LINUX J, P133
   Kumar Sandeep., 2005, ACSAC'05: Proceedings of the 21st Annual Computer Security Applications Conference, P441
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   Loscocco P, 2001, OTT LIN S, P115
   Nagaraju P., 2007, THESIS
   Provos N, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P257
   Pu C, 2006, P INT S SEC SOFTW EN, P399
   Reddy V, 2006, SOFTW ENG C 2006 APS, P461
   Swift MichaelM., 2002, Proceedings of the 10th Workshop on ACM SIGOPS European Workshop, EW 10, P102
   TURK M, 1991, J COGNITIVE NEUROSCI, V3, P71, DOI 10.1162/jocn.1991.3.1.71
   Viola Paul., 2002, INT J COMPUTER VISIO
   Watson R. N., 2007, WOOT, V7, P1
   Wright C, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P17
   Yu LG, 2004, IEEE T SOFTWARE ENG, V30, P694, DOI 10.1109/TSE.2004.58
NR 26
TC 2
Z9 2
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2011
VL 41
IS 1
BP 51
EP 62
DI 10.1002/spe.997
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 701UB
UT WOS:000285847800003
DA 2024-07-18
ER

PT J
AU Al-Masri, E
   Mahmoud, QH
AF Al-Masri, Eyhab
   Mahmoud, Qusay H.
TI WSB: a broker-centric framework for quality-driven web service discovery
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web services; Web service discovery; Web Service Broker; WSB;
   quality-driven discovery
AB Web service interfaces can be discovered through several means, including service registries, search engines, service portals, and peer-to-peer networks. But discovering Web services in such heterogeneous environments is becoming a challenging task and raises several concerns, such as performance, reliability, and robustness. In this paper, we introduce the Web Service Broker (WSB) framework that provides a universal access point for discovering Web services. WSB uses a crawler to collect the plurality of Web services disseminated throughout the Web, continuously monitor the behavior of Web services in delivering the expected functionality, and enable clients to articulate service queries tailored to their needs. The framework features ranking algorithms we have developed which are capable of ranking services according to Quality of Web Service parameters. WSB can be seamlessly integrated into the existing service-oriented architectures. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Al-Masri, Eyhab; Mahmoud, Qusay H.] Univ Guelph, Sch Comp Sci, Guelph, ON N1G 2W1, Canada.
C3 University of Guelph
RP Mahmoud, QH (corresponding author), Univ Guelph, Sch Comp Sci, Guelph, ON N1G 2W1, Canada.
EM qmahmoud@uoguelph.ca
RI Al-Masri, Eyhab/AAH-6667-2020; Mahmoud, Qusay H/B-7010-2008
OI Al-Masri, Eyhab/0000-0002-5163-6792; H. Mahmoud,
   Qusay/0000-0003-0472-5757
CR A-Masri E, 2007, IEEE IC COMP COM NET, P529
   AGARWAL S, 2006, AUTOMATIC MATCHMAKIN, P45
   Al-Masri E., 2007, P 16 INT C WORLD WID, P1257, DOI DOI 10.1145/1242572.1242795
   Al-Masri E., 2008, 17 INT WORLD WIDE WE, P795
   Al-Masri E, 2008, IEEE INTERNET COMPUT, V12, P74, DOI 10.1109/MIC.2008.53
   Al-Masri E, 2009, 2009 7TH ANNUAL COMMUNICATION NETWORKS AND SERVICES RESEARCH CONFERENCE, P118, DOI 10.1109/CNSR.2009.27
   Al-Masri E, 2007, CONSUM COMM NETWORK, P415, DOI 10.1109/CCNC.2007.88
   [Anonymous], SIGECOM EXC
   [Anonymous], 2004, UDDI VERS 3 0 2 SPEC
   [Anonymous], IBM WEBSPHERE APPL S
   *AS DEV BANK INT D, 2004, STRAT EL GOV PROC
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Daconta M.C., 2003, SEMANTIC WEB GUIDE F
   Dong X., 2004, Proceedings of the 30th International Conference on Very Large Data Bases (VLDB'04), V30, P372, DOI DOI 10.1016/B978-012088469-8.50035-8
   Emekci F, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P192, DOI 10.1109/ICWS.2004.1314739
   Jansen BJ, 2006, INFORM PROCESS MANAG, V42, P248, DOI 10.1016/j.ipm.2004.10.007
   Jansen BJ, 2005, J AM SOC INF SCI TEC, V56, P559, DOI 10.1002/asi.20145
   JANSEN J, 1998, SIGIR FORUM, V32, P5
   Jin L.jie., 2002, Analysis on service level agreement of web services
   LEE U, 2005, 14 INT WORLD WID WEB, P391
   Liu Y., 2004, 13 INT WORLD WIDE WE, P66, DOI DOI 10.1145/1013367.1013379
   MANSACE D, 2002, IEEE INTERNET COMPUT, V6, P72
   MARTIN D, 2006, SEMANTIC MARKUP WEB
   Maximilien IM, 2002, SIGMOD REC, V31, P36, DOI 10.1145/637411.637417
   Newcomer E., 2002, UNDERSTANDING WEB SE
   Platzer C, 2005, Third European Conference on Web Services, Proceedings, P62
   Sheth A, 2002, 6TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL XVI, PROCEEDINGS, P528
   Sivashanmugam K, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P270, DOI 10.1109/ICWS.2004.1314748
   TIAN M, 2003, 4 INT C WEB INF SYST, P29
   TOCH E, 2005, P 24 INT C CONC MOD
   Tosic V., 2003, 15 INT C ADV INF SYS
   *UDDI SERV, MICR WIND 2003 SERV
   Wolter Roger., 2001, XML Web Services Basic
   Zeng H.J., 2004, P 27 ANN INT ACM SIG, P210, DOI DOI 10.1145/1008992.1009030
   Zeng L., 2003, P 12 INT C WORLD WID
   ZHIHONG Z, 2003, P 4 INT C PAR DISTR, P157
NR 36
TC 3
Z9 4
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2010
VL 40
IS 10
BP 917
EP 941
DI 10.1002/spe.989
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 644EE
UT WOS:000281355100005
DA 2024-07-18
ER

PT J
AU Fonseca, NA
   Costa, VS
   Rocha, R
   Camacho, R
   Silva, F
AF Fonseca, Nuno A.
   Costa, Vitor Santos
   Rocha, Ricardo
   Camacho, Rui
   Silva, Fernando
TI Improving the efficiency of inductive logic programming systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE inductive logic programming; efficiency; data structures; indexing
AB Inductive logic programming (ILP) is a sub-field of machine learning that provides an excellent framework for multi-relational data mining applications. The advantages of ILP have been successfully demonstrated in complex and relevant industrial and scientific problems. However, to produce valuable models, ILP systems often require long running times and large amounts of memory. In this paper we address fundamental issues that have direct impact on the efficiency of ILP systems. Namely, we discuss how improvements in the indexing mechanisms of an underlying logic programming system benefit ILP performance. Furthermore, we propose novel data structures to reduce memory requirements and we suggest a new lazy evaluation technique to search the hypothesis space more efficiently. These proposals have been implemented in the April ILP system and evaluated using several well-known data sets. The results observed show significant improvements in running time without compromising the accuracy of the models generated. Indeed, the combined techniques achieve several order of magnitudes speedup in some data sets. Moreover, memory requirements are reduced in nearly half of the data sets. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Camacho, Rui] Univ Porto, Fac Engn, P-4100 Oporto, Portugal.
   [Camacho, Rui] Univ Porto, LIAAD, P-4100 Oporto, Portugal.
   [Fonseca, Nuno A.] Univ Porto, IBMC, P-4169007 Oporto, Portugal.
   [Costa, Vitor Santos; Rocha, Ricardo; Silva, Fernando] Univ Porto, Fac Ciencias, P-4169007 Oporto, Portugal.
   [Costa, Vitor Santos; Rocha, Ricardo; Silva, Fernando] Univ Porto, CRACS, P-4169007 Oporto, Portugal.
C3 Universidade do Porto; Universidade do Porto; Universidade do Porto;
   Universidade do Porto; Universidade do Porto
RP Camacho, R (corresponding author), Univ Porto, Fac Engn, Rua Dr Roberto Frias,S-N 4200-465, P-4100 Oporto, Portugal.
EM rcamacho@fe.up.pt
RI Lima, Marta T/C-7042-2009; Silva, Fernando/C-5986-2009; Silva,
   Fernando/ABD-2062-2020; Ih, Ahahah/K-2338-2015; Camacho,
   Rui/ABF-4895-2021; Fonseca, Nuno A./B-7801-2009; INESC-TEC,
   CRACS/F-7527-2012; Silva, Fernando/HKW-3350-2023; Rocha,
   Ricardo/B-2862-2012; Santos Costa, Vitor/B-2859-2012
OI Silva, Fernando/0000-0001-8411-7094; Ih, Ahahah/0000-0003-2851-0400;
   Camacho, Rui/0000-0003-0940-3554; Fonseca, Nuno A./0000-0003-4832-578X;
   Rocha, Ricardo/0000-0003-4502-8835; Santos Costa,
   Vitor/0000-0002-3344-8237
FU ILP-Web-Service [PTDC/EIA/70841/2006]; JEDI [PTDC/EIA/66924/2006];
   STAMPA [PTDC/EIA/67738/2006]; FCT [SFRH/BPD/26737/2006]; Fundação para a
   Ciência e a Tecnologia [PTDC/EIA/66924/2006, SFRH/BPD/26737/2006]
   Funding Source: FCT
FX Contract/grant sponsor: ILP-Web-Service; contract/grant number:
   PTDC/EIA/70841/2006; Contract/grant sponsor: JEDI; contract/grant
   number: PTDC/EIA/66924/2006; Contract/grant sponsor: STAMPA;
   contract/grant number: PTDC/EIA/67738/2006; Contract/grant sponsor: FCT;
   contract/grant number: SFRH/BPD/26737/2006
CR [Anonymous], LECT NOTES ARTIFICIA
   [Anonymous], 2001, RELATIONAL DATA MINI
   [Anonymous], 1996, ADV INDUCTIVE LOGIC
   Aycock J, 2003, ACM COMPUT SURV, V35, P97, DOI 10.1145/857076.857077
   BACHMAIR L, 1993, LECT NOTES COMPUTER, V668, P61
   Blockeel H, 2002, J ARTIF INTELL RES, V16, P135, DOI 10.1613/jair.924
   Botta M, 2000, LECT NOTES ARTIF INT, V1792, P178
   CAMACHO R, 2002, ANN MACH LEARN C BEL
   Camacho R., 2003, The Eighth Scandinavian Conference on Artificial Intelligence (SCAI'03), P47
   CAMACHO R, 2000, THESIS U PORTO
   Costa VS, 2007, LECT NOTES COMPUT SC, V4670, P395
   Costa VS, 1996, NEW GENERAT COMPUT, V14, P3, DOI 10.1007/BF03037216
   Costa VS, 1999, LECT NOTES COMPUT SC, V1702, P261
   COSTA VS, 2006, YAP USERS MANUAL 200
   COSTA VS, 2003, J MACHINE LEARNING R, V4, P465
   COSTA VS, 2000, LECT NOTES ARTIF INT, V1866, P225
   CUSSENS J, 1996, PRGTR2596 OXF U COMP
   Dehaspe L., 1995, P MLNET FAM WORKSH S
   Demoen B, 2000, LECT NOTES ARTIF INT, V1861, P1240
   DOLSAK B, 1997, MACHINE LEARNING DAT
   FONSECA NA, 2005, P 2005 IEEE INT C CL, P253
   FONSECA NA, 2003, 13 INT C IND LOG PRO
   Fonseca NA, 2006, LECT NOTES ARTIF INT, V4160, P481, DOI 10.1007/11853886_42
   FREDKIN E, 1960, COMMUN ACM, V3, P490, DOI 10.1145/367390.367400
   Furnkranz Johannes, 2003, P INT C MACHINE LEAR
   GRAF P, 1996, LECT NOTES ARTIFICIA, V1053
   KONSTANTOPOULOS S, 2008, ARTIFICIAL INTELLIGE
   Lavrac N, 1999, LECT NOTES ARTIF INT, V1634, P174
   Matsui T, 1998, LECT NOTES ARTIF INT, V1532, P397
   McCune W., 1992, Journal of Automated Reasoning, V9, P147, DOI 10.1007/BF00245458
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   MUGGLETON S, 1994, J LOGIC PROGRAM, V20, P629, DOI 10.1016/0743-1066(94)90035-3
   MUGGLETON S, 1992, PROTEIN ENG, V5, P647, DOI 10.1093/protein/5.7.647
   MUGGLETON S, 1992, INDUCTIVE LOGIC PROG, P281
   NIENHUYSCHENG SH, 1997, LECT NOTES ARTIFICIA, V1228
   NIJSSEN S., 2001, IJCAI, P891
   OHLBACH HJ, 1990, P 9 EUR C ART INT ST, P479
   Ohwada H., 2000, LECT NOTES ARTIF INT, V1866, P165
   PAGE D, 2003, J MACHINE LEARNING R, V4, P415
   PALMER D, 1991, P 8 INT C LOG PROGR
   QUINLAN JR, 1993, LECT NOTES ARTIF INT, V667, P3
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   RICHARDS BL, 1995, MACH LEARN, V19, P95
   ROCHA R, 2000, P 2 C TAB PARS DED V, P77
   SAMET H, 1985, COMMUN ACM, V28, P973, DOI 10.1145/4284.4290
   SAMET H, 1984, COMPUT SURV, V16, P187, DOI 10.1145/356924.356930
   Sebag M, 1997, INT JOINT CONF ARTIF, P888
   Srinivasan A, 1999, J LOGIC PROGRAM, V40, P185, DOI 10.1016/S0743-1066(99)00018-7
   Srinivasan A., 2003, ALEPH MANUAL
   SRINIVASAN A, 1994, GMD STUDIEN, V237, P217
   Srinivasan A., 2000, PRGTR1600 OXF U COMP
   Warren D. H. D., 1983, 309 SRI INT
NR 52
TC 6
Z9 8
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2009
VL 39
IS 2
BP 189
EP 219
DI 10.1002/spe.896
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 394NO
UT WOS:000262453600004
DA 2024-07-18
ER

PT J
AU Kurbalija, V
   Ivanovic, M
   Budimac, Z
AF Kurbalija, Vladimir
   Ivanovic, Mirjana
   Budimac, Zoran
TI Case-based curve behaviour prediction
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE artificial intelligence; case-based reasoning; time-series analysis;
   curve prediction
ID TIME-SERIES
AB Case-based reasoning (CBR) is the area of artificial intelligence where problems are solved by adapting solutions that worked for similar problems from the past. This technique can be applied in different domains and with different problem representations. In this paper, a system curve base generator (CuBaGe) is presented. This framework is designed to be a domain-independent prediction system for the analysis and prediction of curves and time-series trends, based on the CBR technology. CuBaGe employs a novel curve representation method based on splines and a corresponding similarity function based on definite integrals. This combination of curve representation and similarity measure showed excellent results with sparse and non-equidistant time series, which is demonstrated through a set of experiments. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Kurbalija, Vladimir; Ivanovic, Mirjana; Budimac, Zoran] Univ Novi Sad, Dept Math & Informat, Fac Sci, Novi Sad 21000, Serbia.
C3 University of Novi Sad
RP Kurbalija, V (corresponding author), Univ Novi Sad, Dept Math & Informat, Fac Sci, Trg D Obradovica 4, Novi Sad 21000, Serbia.
EM kurba@im.ns.ac.yu
RI Ivanovic, M./AAE-7711-2020
OI Kurbalija, Vladimir/0000-0002-9599-4495; Budimac,
   Zoran/0000-0001-5688-6320; Ivanovic, Mirjana/0000-0003-1946-0384
CR Aach J, 2001, BIOINFORMATICS, V17, P495, DOI 10.1093/bioinformatics/17.6.495
   AAMODT A, 1994, AI COMMUN, V7, P39
   Agrawal R., 1993, Foundations of Data Organization and Algorithms. 4th International Conference. FODO '93 Proceedings, P69
   [Anonymous], P ACM INT C MAN DAT
   [Anonymous], P 9 INT C INF KNOWL
   [Anonymous], 2001, P ACM SIGMOD C MAN D
   BERNADELL C, 2005, EUROPEAN CENTRAL BAN, V472
   BUDIMAC Z, 2001, C INF IT BIT
   Chakrabarti K, 2002, ACM T DATABASE SYST, V27, P188, DOI 10.1145/568518.568520
   Chan KP, 1999, PROC INT CONF DATA, P126, DOI 10.1109/ICDE.1999.754915
   Chiu C, 2004, INT J ADV MANUF TECH, V24, P440, DOI 10.1007/s00170-003-1707-x
   CUI Y, 2005, P ICSSSM 05 2005 INT, V2, P1057
   DAS G, 1997, LECT NOTES ARTIFICIA, V1263
   Davies HE, 1995, INT J RADIAT BIOL, V68, P631, DOI 10.1080/09553009514551641
   Debregeas A., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P179
   Dias MS, 2006, APPL RADIAT ISOTOPES, V64, P1186, DOI 10.1016/j.apradiso.2006.02.019
   Faloutsos Christos., 1994, ACM SIGMOD Record, V23, P419
   FALOUTSOS YB, 2000, P 26 INT C VER LARG, P385
   GEURTS P, 2005, P PRINC DAT MIN KNOW, P115
   Guralnik V., 1999, P 5 ACM SIGKDD INT C, P33, DOI [10.1145/312129.312190, DOI 10.1145/312129.312190]
   Indyk Piotr., 2000, VLDB, P363
   IVANOVIC M, 2002, P 5 JOINT C KNOWL BA, P255
   Kahveci T, 2001, PROC INT CONF DATA, P273, DOI 10.1109/ICDE.2001.914838
   Kalpakis K, 2001, 2001 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P273, DOI 10.1109/ICDM.2001.989529
   KEOGH E, 2002, 8 ACM SIGKDD INT C K, P550, DOI DOI 10.1145/775047.775128
   Keogh E. J., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P239
   Kolodner J.L., 1993, Case-Based Reasoning
   KOM F, 1997, P SIGMOD INT C TUCS, P289
   KURBALIJA V, 2003, SIMILARITY CURVES PR
   KURBALIJA V, 2003, P 4 INT C INF INF TE, P118
   KURBALIJA V, 2003, J INFORM TECHNOLOGY, V5, P14
   KURBALIJA V, 2005, NOVI SAD J MATH NSJO, V35, P25
   Lenz M., 1998, CASE BASED REASONING
   Lin J., 2003, WORKSH RES ISS DAT M
   Popivanov I, 2002, PROC INT CONF DATA, P212, DOI 10.1109/ICDE.2002.994711
   Ratanamahatana CA, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P1069
   Shahabi C, 2000, 12TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT, PROCEEDINGS, P55, DOI 10.1109/SSDM.2000.869778
   Simic D, 2005, LECT NOTES ARTIF INT, V3533, P839
   Simic D, 2003, LECT NOTES COMPUT SC, V2737, P66
   SIMIC D, 2004, P INT C INF KNOW ENG, P561
   TANG Y, 2006, P 24 IASTED INT C SI, P194
   Van Wijk J. J., 1999, Proceedings 1999 IEEE Symposium on Information Visualization (InfoVis'99), P4, DOI 10.1109/INFVIS.1999.801851
   Yan L, 2004, IEEE INTELL SYST, V19, P50, DOI 10.1109/MIS.2004.1274911
   [No title captured]
NR 45
TC 11
Z9 14
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2009
VL 39
IS 1
BP 81
EP 103
DI 10.1002/spe.891
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 388RA
UT WOS:000262035700004
OA Bronze
DA 2024-07-18
ER

PT J
AU Terrasa, A
   Espinosa, A
   García-Fornes, A
AF Terrasa, Andres
   Espinosa, Agustin
   Garcia-Fornes, Ana
TI Lightweight POSIX tracing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE real-time operating systems; POSIX standard; tracing
AB In embedded systems, the typical host/target development scheme normally requires a tracing mechanism to be available in the target system in order to collect run-time information of the application. This information is then used in the host system to debug, monitor, fine tune, etc., the application. Related to this, POSIX has recently incorporated the definition of standard tracing services into the complete POSIX 1003.1-2001 standard. It is obvious that standard interfaces present several advantages for applications, specially regarding portability. However, the observed trend in real-time operating systems (RTOSs) of progressively incorporating the POSIX interfaces have not reached the POSIX tracing services., As far as we know, this tracing interface has not been incorporated yet into any commercial RTOS, probably because it is quite recent and its tracing model is too complex and demanding for small, embedded real-time systems. After carefully analyzing and then implementing and using the POSIX Trace standard in both RT-Linux and MarteOS, this paper presents the redefinition of the POSIX tracing standard from the perspective of small real-time systems and, in particular, systems conforming to the POSIX Minimal Realtime System Profile (MRSP). The new tracing model is called Lightweight POSIX tracing. The model has been carefully designed to maintain all the syntax, and almost all the semantics, of the original standard, but it allows for the definition of useful subsets of the original standard that can be implemented very efficiently. The experimental results show that a minimal tracing system which is appropriate for MRSP systems exhibits a significantly smaller memory footprint and lower overhead, compared to the implementation of the complete standard. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Terrasa, Andres; Espinosa, Agustin; Garcia-Fornes, Ana] Univ Politecn Valencia, Dept Informat Syst & Computat, Valencia 46022, Spain.
C3 Universitat Politecnica de Valencia
RP Terrasa, A (corresponding author), Univ Politecn Valencia, Dept Informat Syst & Computat, Cno Vera S-N, Valencia 46022, Spain.
EM aterrasa@dsic.upv.es
RI Espinosa, Agustín/ABG-2376-2020; Garcia-Fornes, Ana/C-8260-2014
OI Espinosa, Agustín/0000-0001-8070-3344; Garcia-Fornes,
   Ana/0000-0003-4482-8793; Terrasa, Andres/0000-0003-1991-1691
CR [Anonymous], 1998, 1003131998 IEEE
   IEEE, 2001, 100312001 IEEE
   *OCERA PROJ, OP COMP EMB REAL TIM
   RIVAS MA, 2001, LNCS, V2043, P305
   Terrasa A, 2001, INT SYM PERFORM ANAL, P30, DOI 10.1109/ISPASS.2001.990672
   YODAIKEN V, 1999, P 5 LIN EXP RAL NC U
NR 6
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2008
VL 38
IS 5
BP 447
EP 469
DI 10.1002/spe.833
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 289YR
UT WOS:000255090300001
DA 2024-07-18
ER

PT J
AU Chatziantoniou, D
   Anagnostopoulos, A
AF Chatziantoniou, Damianos
   Anagnostopoulos, Achilleas
TI A session-oriented approach in modeling hierarchies of streams
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data stream systems; query languages; OLAP; database modeling;
   continuous queries
AB Data stream systems became recently the focus of intense research activity. Sensor measurements, financial data, network packets and log files can all be seen as data streams. The ability to query data streams is of increasing importance and has been identified as a crucial element for modern organizations and agencies. This article identifies an interesting class of applications where stream sessions may be organized into a hierarchical fashion-i.e. sessions may consist of subsessions. For example, log streams from call centers belong to different call sessions and call sessions consist of services subsessions. We may want to monitor statistics and perform accounting at any level on this hierarchy, relative to any other (higher) level (e.g. monitoring the average service session per call vs the average service session for the entire system). We argue that data streams of this kind have rich procedural semantics-i.e. behaviour-and therefore a semantically rich model should be used: a session may be defined by opening and closing conditions, may have data and methods and may consist of subsessions. We propose a simple conceptual model based on the notion of 'session'-similar to a class in an object-oriented environment having lifetime semantics. Queries on top of this schema can be formulated via HSA (hierarchical stream aggregate) expressions. We give an algorithm describing how stream data 'flow down' session hierarchies and discuss potential evaluation and optimization techniques for HSAs. We finally present NESTREAM, a prototype implementation incorporating many of these concepts. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Chatziantoniou, Damianos] Athens Univ Econ & Business, Dept Management Sci & Technol, Athens, Greece.
   [Anagnostopoulos, Achilleas] INI Carnegie Mellon Univ, Athens Informat Technol, Athens, Greece.
C3 Athens University of Economics & Business; Carnegie Mellon University
RP Chatziantoniou, D (corresponding author), Athens Univ Econ & Business, Dept Management Sci & Technol, Athens, Greece.
EM damianos@aueb.gr
CR ANVUR R, 2000, ACM SIGMOD C MAN DAT, P261
   Arasu A., 2003, IEEE DATA ENG B, V26, P19
   Babcock B., 2002, P 21 ACM SIGMOD SIGA, P1, DOI [DOI 10.1145/543613.543615, 10.1145/543613]
   Babu S, 2001, SIGMOD REC, V30, P109, DOI 10.1145/603867.603884
   BOOCH G, 1998, UNIFIED MODELING LAN
   Carney D., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P215
   CHANDRASEKARAN S, 2003, C INN DAT SYST RES A
   Chatziantoniou D, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P295
   Chatziantoniou D, 2004, 16TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT, PROCEEDINGS, P439
   Chatziantoniou D, 2001, PROC INT CONF DATA, P524, DOI 10.1109/ICDE.2001.914866
   Cortes C., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P9, DOI 10.1145/347090.347094
   Cranor Chuck., 2003, ACM SIGMOD
   Deshpande A., 2003, P 2003 ACM SIGMOD IN, P503
   GEHRKE J, 2001, ACM SIGMOD C MAN DAT
   KOUDAS N, 2003, 29 INT C VER LARG DA, P1149
   KRISHNAMURTHY S, 2005, UCBCSD051381 EECS DE
   LERNER A, 2003, 29 INT C VER LARG DA, P345
   Madden S, 2002, PROC INT CONF DATA, P555, DOI 10.1109/ICDE.2002.994774
   ROSS K, 1998, EXTENDING DATABASE T, P263
   SESHADRI P, 1996, P 22 VLDB C MUMB
   Terry D, 1992, Proceedings of the 1992 ACM SIGMOD International Conference on Management of Data, V21, P321
   Tucker PA, 2003, IEEE T KNOWL DATA EN, V15, P555, DOI 10.1109/TKDE.2003.1198390
   TUCKER PA, 2003, IEEE DATA ENG B, V26, P33
   Wang H., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P135, DOI 10.1109/ICDE.2000.839400
   WANG H, 2000, ACM SIGMOD WORKSH RE, P11
NR 25
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2008
VL 38
IS 1
BP 95
EP 115
DI 10.1002/spe.830
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 259JA
UT WOS:000252934400004
DA 2024-07-18
ER

PT J
AU Savidis, A
AF Savidis, Anthony
TI Rapidly implementing languages to compile as C plus plus without
   crafting a compiler
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE rapid language development; domain-specific languages; embedded
   programming languages; syntax emulation
AB We present a heuristic implementation method for programming languages that is appropriate when the following requirements or conditions are met: (a) there is a need for very rapid development of a language with significant performance demands, while exploiting a comprehensive host language and/or library; (b) need of customized runtime execution environment supporting of execution tracing and visualization instruments; (c) the facilitation of hybrid code exists, such as mixing with the native language, and there is the potential for allowing multiple languages to be deployed concurrently in the same program. This may account for a wide range of domain-specific languages such as learning-oriented, scripting, assembly style, data manipulation, rule-based, or event languages. The proposed technique is presented for the C++ language, supporting the development of languages whose source programs compile as C++ code. The software architecture shifts from the tradition of lexical analysis, syntax-directed translation and code generation, and we propose a complementary, conditionally advantageous, heuristic development paradigm. The method has been applied to the development of a high-level imperative language, an assembly language and a functional language, which are all currently deployed for teaching purposes. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Savidis, Anthony] Fdn Res & Technol Hellas, Inst Comp Sci, GR-70013 Iraklion, Greece.
C3 Foundation for Research & Technology - Hellas (FORTH)
RP Savidis, A (corresponding author), Fdn Res & Technol Hellas, Inst Comp Sci, GR-70013 Iraklion, Greece.
EM as@ics.forth.gr
CR ABRAHAMS D, 2005, CPLUSPLUS TEMPLATE M, P215
   BOOST, 2003, SPIRIT V1 8 2 USERS
   Dekker AH, 2006, ACM SIGPLAN NOTICES, V41, P30, DOI 10.1145/1140543.1140549
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   FEGARAS L, 2000, P SIGMOD, P583
   MacLennan Bruce J, 1990, FUNCTIONAL PROGRAMMI
   Mcnamara B, 2004, J FUNCT PROGRAM, V14, P429, DOI 10.1017/S0956796803004969
   Myers B., 2000, USABILITY ISSUES PRO
   *OR CORP, 1999, PRO C CPLUSPLUS PREC
   Rabin S., 2000, Game Programming Gems, P221
   SAVIDIS A, 2005, ACM SIGCSE B INROADS, V37, P49
   VELDHUIZEN T, 2006, BLITZPLUSPLUS
   Zolman L., 2005, STLFILT STL ERROR ME
NR 13
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2007
VL 37
IS 15
BP 1577
EP 1620
DI 10.1002/spe.818
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 243BT
UT WOS:000251770600002
DA 2024-07-18
ER

PT J
AU Grundy, J
   Hosking, J
   Cao, SP
   Zhao, D
   Zhu, NP
   Tempero, E
   Stoeckle, H
AF Grundy, John
   Hosking, John
   Cao, Shuping
   Zhao, Denjin
   Zhu, Nianping
   Tempero, Ewan
   Stoeckle, Hermann
TI Experiences developing architectures for realizing thin-client diagram
   editing tools
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE thin-client diagramming; software architecture; Web and mobile user
   interfaces; CASE tools
AB Diagram-centric applications such as software design tools, project planning tools and business process modelling tools are usually 'thick-client' applications running as stand-alone desktop applications. There are several advantages to providing such design tools as Web-based or even PDA- and mobile-phonebased applications. These include ease of access and upgrade, provision of collaborative work support and Web-based integration with other applications. However, building such thin-client diagram editing tools is very challenging. We have developed several thin-client diagram editing applications realized as a set of plug-in extensions to a meta-tool for visual design environment development. In this paper, we discuss key user interaction and software architecture issues, illustrate examples of interacting with our thin-client diagram editing tools, describe our design and implementation approaches, and present the results of several different evaluations of the resultant applications. Our experiences will be useful for those interested in developing their own thin-client diagram editing architectures and applications. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
   Univ Auckland, Dept Elect & Comp Engn, Auckland 1, New Zealand.
C3 University of Auckland; University of Auckland
RP Grundy, J (corresponding author), Univ Auckland, Dept Comp Sci, Private Bag 92019, Auckland 1, New Zealand.
EM john-g@cs.auckland.ac.nz
RI Tempero, Ewan/D-2621-2009; Grundy, John/I-6681-2012
OI Tempero, Ewan/0000-0002-3786-1707; Grundy, John/0000-0003-4928-7076;
   Hosking, John/0000-0002-4776-3828
CR BAUDISCHL P, 2004, P 2004 ACM C US INT
   BENTLEY R, 1995, P 4 INT WWW C BOST D
   Bonifati A, 2000, LECT NOTES COMPUT SC, V1921, P64
   Burnett M, 2001, J FUNCT PROGRAM, V11, P155, DOI 10.1017/S0956796800003828
   Buyukkokten Orkut., 2000, CHI 00, P430
   CAO S, 2005, P 2005 AUSTR US INT
   Chalk P., 2000, Computer Science Education, V10, P39, DOI 10.1076/0899-3408(200004)10:1;1-P;FT039
   CHAU T, 2004, P WORKSH LEARN SOFTW
   Chen Y., 2003, Proceedings of the WWW'03, P225
   COX PT, 1989, P 1989 IEEE WORKSH V
   Ebert J, 1997, LECT NOTES COMPUT SC, V1250, P203
   EISENSTEIN J, 2000, P 2000 C INT US INT, P74
   Evans E., 1997, IEEE Internet Computing, V1, P43, DOI 10.1109/4236.589194
   Ferguson RI, 2000, INFORM SOFTWARE TECH, V42, P115, DOI 10.1016/S0950-5849(99)00081-6
   GORDON D, 2003, P 2003 IEEE C HUM CE
   Graham T. C. N., 1999, STEP '99. Proceedings Ninth International Workshop Software Technology and Engineering Practice, P22, DOI 10.1109/STEP.1999.798404
   Green T.R.G., 1989, PEOPLE COMPUTERS
   Grundy J, 2000, INFORM SOFTWARE TECH, V42, P103, DOI 10.1016/S0950-5849(99)00084-1
   GRUNDY JC, 2003, CROSS PLATFORM MULTI
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   KAISER GE, 1998, WORLD WIDE WEB, V1, P3
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Khaled R., 2002, P SIGCHI NZ S COMP H
   LUZ S, 2004, P WORK C ADV VIS INT, P454, DOI DOI 10.1145/989863.989950
   LUZ S, 2003, P 10 INT C HUM COMP, V2, P148
   Lyu M., 1998, P INT S SOFTW REL EN
   MACKAY D, 2003, P 4 AUSTR US INT C A
   Marsic I, 2001, PROC INT CONF SOFTW, P475, DOI 10.1109/ICSE.2001.919120
   MASOODIAN M, 2004, P 5 AUSTR US INT C A
   Maurer F, 2000, IEEE INTERNET COMPUT, V4, P65, DOI 10.1109/4236.845392
   Maurer F, 2002, ANN SOFTW ENG, V14, P145, DOI 10.1023/A:1020505708326
   McIntyre D.W., 1995, VISUAL OBJECT ORIENT, P129
   McWhirter J. D., 1994, Proceedings. IEEE Symposium on Visual Languages (Cat. No.94TH8010), P15, DOI 10.1109/VL.1994.363645
   MEHRA A, 2004, P 6 INT WORKSH COLL
   Minas M., 1995, Proceedings. 11th IEEE International Symposium on Visual Languages (Cat. No.95TB8105), P203, DOI 10.1109/VL.1995.520810
   *MUPE, 2006, MULT US PUBL ENV
   *PALM CORP, 2001, WEB CLIPP SERV
   Robbins J. E., 1998, Automated Software Engineering, V5, P261, DOI 10.1023/A:1008652607643
   ROSSEL M, 1999, P 1999 INT C INT US
   Stephanidis C, 2001, HUM FAC ER, P371
   Sun J, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P453, DOI 10.1109/APSEC.2001.991514
   Wobbrock J.O., 2002, P 15 ANN ACM S USER, P205
   ZHAO D, 2006, P 2006 AUSTR US INT
   ZHU N, 2004, P 2004 INT C VIS LAN
   [No title captured]
NR 45
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2007
VL 37
IS 12
BP 1245
EP 1283
DI 10.1002/spe.803
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 224BF
UT WOS:000250419600002
DA 2024-07-18
ER

PT J
AU Augustin, I
   Yamin, AC
   da Silva, LC
   Real, RA
   Frainer, G
   Geyer, CFR
AF Augustin, I.
   Yamin, A. C.
   da Silva, L. C.
   Real, R. A.
   Frainer, G.
   Geyer, C. F. R.
TI ISAMadapt: abstractions and tools for designing general-purpose
   pervasive applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE programming language for pervasive computing; pervasive applications;
   context-aware adaptation; follow-me semantics
ID MOBILE
AB The concept of pervasiveness provides the future of computing with an attractive perspective. However, software support for physical and logical mobility raises a set of new requirements and challenges for software production, creating demand for new types of applications, the so-called pervasive applications, which express follow-me semantics. The core of these challenges is a dynamic operating environment, which originates with the users' movement in different terminals and locations, and determines different execution contexts. For this envision to become a reality, developers must build applications that constantly adapt to a highly dynamic computing environment. Research works in pervasive computing have already addressed important issues, but they do not approach the problem of how to program general-purpose pervasive systems. Pervasive applications are distributed, mobile, adaptive and consider context as a first-order concept. To make the developers' task easier, we have introduced the software architecture called ISAM, which provides an integrated environment aimed at building pervasive applications composed of a development environment and an execution middleware. As part of our study within the ISAM project, we have been investigating how context-awareness can be expressed at the programming language level with a basis on four main abstractions: context, adapters, adaptation commands, and adaptive behavior management policies. This paper introduces such abstractions, and presents some development and management tools anchored on an example application, which is under development. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Fed Santa Maria, Ctr Technol, BR-97105900 Santa Maria, RS, Brazil.
   Univ Catolica Pelotas, Informat Sch, Pelotas, RS, Brazil.
   Univ Fed Rio Grande do Sul, Inst Informat, Porto Alegre, RS, Brazil.
C3 Universidade Federal de Santa Maria (UFSM); Universidade Catolica de
   Pelotas; Universidade Federal de Pelotas; Universidade Federal do Rio
   Grande do Sul
RP Augustin, I (corresponding author), Univ Fed Santa Maria, Ctr Technol, Campus Km 9, BR-97105900 Santa Maria, RS, Brazil.
EM august@inf.ufsm.br
CR [Anonymous], LECT NOTES COMPUTER
   AUGUSTIN I, 2003, MOBILE COMPUTING HDB
   AUGUSTIN I, 2002, ISCC, V7
   AUGUSTIN I, 2002, CATA, V17
   AUGUSTIN I, 2002, P INT S PAR DISTR CO
   BANAVAR G, 2000, P ACM IEEE INT C MOB
   Bellavista P, 2003, IEEE INTERNET COMPUT, V7, P34, DOI 10.1109/MIC.2003.1189187
   Bellavista P, 2001, COMPUTER, V34, P73, DOI 10.1109/2.910896
   CASANOVA H, 2002, P WORKSH DISTR COMP
   DEY AK, 2000, THESIS GEORGIA I TEC
   Garlan D., 2002, IEEE Pervasive Computing, V1, P22, DOI 10.1109/MPRV.2002.1012334
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   GRIMM R, 2002, THESIS U WASHINGTON
   HENRICKSEN K, 2002, LECT NOTES COMPUTER, V2414
   Imielinski T, 1997, IEEE T KNOWL DATA EN, V9, P353, DOI 10.1109/69.599926
   Jing J, 1999, ACM COMPUT SURV, V31, P117, DOI 10.1145/319806.319814
   KALUS K, 2001, SOFTWARE PRACTICE EX, V32, P135
   KICAZALES G, 2001, ECOOP, V15
   LITIU R, 2000, P C PRINC DISTR COMP
   Noble B, 2000, IEEE PERS COMMUN, V7, P44, DOI 10.1109/98.824577
   PICCO G, 2001, P INT C DISTR COMP S
   RAKOTONIRAINY A, 2002, CONTEXT ORIENTED PRO
   ROMAN M, 2003, THESIS U ILLINOIS UR
   Saha D, 2003, COMPUTER, V36, P25, DOI 10.1109/MC.2003.1185214
   Satyanarayanan M, 2001, IEEE PERS COMMUN, V8, P10, DOI 10.1109/98.943998
   TAPUS C, 2002, P IEEE ACM C SC2002
   VIGNA G, 1998, THESIS POLITECNICO M
   Yamin AC, 2003, INT J HIGH PERFORM C, V17, P191, DOI 10.1177/1094342003017002008
   YAMIN AC, 2004, EXEHDA ADAPTIVE MIDD
   YAMIN AC, 2002, P INT C CHIL COMP SC
NR 30
TC 8
Z9 10
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1231
EP 1256
DI 10.1002/spe.756
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 086HN
UT WOS:000240664500009
DA 2024-07-18
ER

PT J
AU Avijit, K
   Gupta, P
   Gupta, D
AF Avijit, Kumar
   Gupta, Prateek
   Gupta, Deepak
TI Binary rewriting and call interception for efficient runtime protection
   against buffer overflows
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE buffer overflow attacks; binary rewriting; dynamic linking; function
   call interception
AB Buffer overflow vulnerabilities are one of the most commonly and widely exploited security vulnerabilities in programs. Most existing solutions for avoiding buffer overflows are either inadequate, inefficient or incompatible with existing code. In this paper, we present a novel approach for transparent and efficient runtime protection against buffer overflows. The approach is implemented by two tools: Type Information Extractor and Depositor (TIED) and LibsafePlus. TIED is first used on a binary executable or shared library file to extract type information from the debugging information inserted in the file by the compiler and reinsert it in the file as a data structure available at runtime. LibsafePlus is a shared library that is preloaded when the program is run. LibsafePlus intercepts unsafe C library calls such as strcpy and uses the type information made available by TIED at runtime to determine whether it would be 'safe' to carry out the operation. With our simple design we are able to protect most applications with a performance overhead of less than 10%. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Indian Inst Technol, Dept Comp Sci & Engn, Kanpur 208016, Uttar Pradesh, India.
   Carnegie Mellon Univ, Dept Comp Sci, Pittsburgh, PA 15213 USA.
   Univ Texas, Dept Comp Sci, Austin, TX 78712 USA.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kanpur; Carnegie Mellon University; University of
   Texas System; University of Texas Austin
RP Gupta, D (corresponding author), Indian Inst Technol, Dept Comp Sci & Engn, Kanpur 208016, Uttar Pradesh, India.
EM deepak@cse.iitk.ac.in
RI Gupta, Deepak/GPT-3072-2022
CR [Anonymous], 2003, P NETW DISTR SYST SE
   Austin ToddM., 1994, P ACM SIGPLAN 1994 C, P290
   Bhatkar S, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P105
   Cormen T.H., 2002, INTRO ALGORITHMS, V2nd
   Cowan C, 1998, PROCEEDINGS OF THE SEVENTH USENIX SECURITY SYMPOSIUM, P63
   Cowan C, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P91
   Dor Nurit., 2003, PLDI 03, P155, DOI [10.1145/781131.781149, DOI 10.1145/781131.781149]
   Etoh H., 2001, IPSJ SIGNOTES COMPUT, V14
   Evans D., 1994, P FSE 94, P87, DOI DOI 10.1145/193173.195297
   HSU FH, 2001, ICDCS 01, P409
   Jones Richard WM, 1997, AADEBUG, V97, P13
   Kiriansky V, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P191
   Larochelle D, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 10TH USENIX SECURITY SYMPOSIUM, P177
   Lhee KS, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P81
   LIVSHITS BV, 2003, ESEC FSE 11, P317
   NEBENZAHL D, 2004, P 19 IFIP INT INF SE, P225
   Prasad M, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P211
   Richarte G., 4 DIFFERENT TRICKS B
   Ruwase Olatunji, 2004, NDSS, P159
   *SOL DES, 2000, NON US STACK 2000
   *TIS COMM, 1995, DWARF DEB INF FORM S
   *UNIX INT PROGR LA, 2002, CONS LIB INT DWARF
   WAGNER D, 2000, P NETW DISTR SYST SE, P3
   Walpole J, 2000, IEEE DISCEX
   1996, PHRACK, V7
   2000, PHRACK, V10
   [No title captured]
NR 27
TC 9
Z9 10
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2006
VL 36
IS 9
BP 971
EP 998
DI 10.1002/spe.720
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 068GR
UT WOS:000239361500005
OA Bronze
DA 2024-07-18
ER

PT J
AU Bettini, L
   Capecchi, S
   Venneri, B
AF Bettini, Lorenzo
   Capecchi, Sara
   Venneri, Betti
TI Double dispatch in C++
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented programming; double dispatch; multi methods; dynamic
   overloading; C plus; language extension
ID JAVA
AB Double dispatch is the ability to dynamically select a method not only according to the run-time type of the receiver (single dispatch), but also according to the run-time type of the argument. This mechanism unleashes the power of dynamic binding in object-oriented languages, so enhancing re-usability and separation of responsibilities. However, many mainstream languages, such as, e.g., C++ and Java, do not provide it, resorting only to single dispatch. In this paper we propose an extension of C++ (also applicable to other object-oriented languages) that enables double dispatch as a language feature. This yields dynamic overloading and covariant specialization of methods. We define a translation from the new constructs to standard C++ and we present the preprocessor implementing this translation, called doublecpp. The translated code enjoys static type safety and implements the semantics of double dispatch by using only standard mechanisms of static overloading and dynamic binding, with minimal impact on the performance of the program. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Florence, Dipartimento Sistemi & Informat, I-50134 Florence, Italy.
C3 University of Florence
RP Bettini, L (corresponding author), Univ Florence, Dipartimento Sistemi & Informat, Viale Morgagni 65, I-50134 Florence, Italy.
EM bettini@dsi.unifi.it
OI VENNERI, BATTISTINA/0000-0001-6458-0305; Bettini,
   Lorenzo/0000-0002-4481-8096; CAPECCHI, SARA/0000-0001-6157-2932
CR AGRAWAL R, 1991, P OOPSLA 91, P113
   AIGNER G, 1996, LECT NOTES COMPUTER, V1098, P142
   Alexandrescu A., 2001, Modern C++ Design: Generic Programming and Design Patterns Applied
   Alstrup S, 2002, LECT NOTES COMPUT SC, V2368, P20
   ANCONA D, 2001, P FOOL, V8
   ANDRE P, 1992, P OOPSLA 92, P110
   [Anonymous], ACM COMPUTING SURVEY
   Arnold K., 2000, The Java Programming Language, V3rd ed
   BANCILHON F, 1992, IMPLEMENTING OBJECT
   Bobrow D. G., 1989, LISP and Symbolic Computation, V1, P245, DOI 10.1007/BF01806961
   Boyland J, 1997, ACM SIGPLAN NOTICES, V32, P66, DOI 10.1145/263700.263721
   BRUCE K, 1995, THEOR PRACT OBJ SYST, V1, P217
   CALDER B, 1994, P 21 ACM SIGPLAN SIG, P397
   CARBONETTO P, 2005, IMPLEMENTATION MULTI
   CASTAGNA G, 1995, ACM T PROGR LANG SYS, V17, P431, DOI 10.1145/203095.203096
   CASTAGNA G, 1995, THEOR COMPUT SCI, V151, P297, DOI 10.1016/0304-3975(95)00071-4
   Castagna Giuseppe., 1997, Progress in Theoretical Computer Science
   CHAMBERS C, 1996, P FOOL, V4
   CHEN W, 1995, THEOR PRACT OBJ SYST, V1, P41
   CHEN WM, 1994, LNCS, V821, P408
   Clifton C, 2000, ACM SIGPLAN NOTICES, V35, P130, DOI 10.1145/354222.353181
   DEMICHIEL LG, 1987, LECT NOTES COMPUT SC, V276, P151
   DIXON R, 1989, P OOPSLA 89, P211
   Driesen K, 1996, ACM SIGPLAN NOTICES, V31, P306, DOI 10.1145/236338.236369
   DRIESEN K, 2005, MULTIPLE DISPATCH TE
   DRIESEN K, 1993, P 8 ANN C OBJ OR PRO, P259
   DRIESEN K, 1999, TRCS9924 U CAL
   Driesen K., 1995, P ACMOOPSLA 95 C, P141
   Dutchyn C, 2001, 6TH USENIX CONFERENCE OF OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS 01), P77
   Ferragina P., 1999, Proceedings of the Thirty-First Annual ACM Symposium on Theory of Computing, P483, DOI 10.1145/301250.301378
   FORAX R, 2000, P INT C TECHN OBJ OR
   FRASER B, 2005, IMPLEMENTING DOUBLE
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GROTHOFF C, 2003, LECT NOTES COMPUTER, V2743
   GROVE DP, 1998, THESIS U STANFORD ST
   HOLST W, 1998, TR9803 U ALB
   INGALLS DHH, 1986, P OOPSLA, P347
   KICZALES G, 1990, PROCEEDINGS OF THE 1990 ACM CONFERENCE ON LISP AND FUNCTIONAL PROGRAMMING, P99, DOI 10.1145/91556.91600
   LEA D, 1992, P USENIX C TECHN C U, P341
   Meyer B., 1991, EIFFEL LANGUAGE
   MUGRIDGE WB, 1991, LECT NOTES COMPUT SC, V512, P307
   SHALIT A, 1997, DYLAN REFERENCE MANU
   Smith J., 2001, ASS C C USERS J  APR
   SMITH J, 2005, DRAFT PROPOSAL ADDIN
   Stroustrup B., 1997, The C++ Programming Language
   Stroustrup B., 1994, The Design and Evolution of C++
   VITEK J, 1996, LECT NOTES COMPUTER, V1060, P309
   VITEK J, 1994, LNCS, V821, P432
   ZENDRA O, 1997, P 12 ANN ACM SIGPLAN, P125
   ZIBIN Y, 2002, P 17 ACM C OBJ OR PR, P142
   [No title captured]
NR 51
TC 8
Z9 8
U1 0
U2 2
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2006
VL 36
IS 6
BP 581
EP 613
DI 10.1002/spe.709
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 042QV
UT WOS:000237544800002
DA 2024-07-18
ER

PT J
AU De Antonellis, V
   Melchiori, M
   De Santis, L
   Mecella, M
   Mussi, E
   Pernici, B
   Plebani, P
AF De Antonellis, V
   Melchiori, M
   De Santis, L
   Mecella, M
   Mussi, E
   Pernici, B
   Plebani, P
TI A layered architecture for flexible Web service invocation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web services; orchestration; substitution; dynamic process evolution
AB Web service composition is emerging as an interesting approach to integrate business applications and create intra-organizational business processes. Single Web services are combined to create a complex Web service that will realize the process business logic. Once the process is created, it is executed by an orchestration engine that invokes individual Web services in the correct order. However, Web services composing the workflow sometimes become unavailable during the run-time phase, blocking process execution. This paper describes an architecture that allows the flexible orchestration of business processes. With this approach, Web services composing the process can be automatically substituted with other compatible Web services during process execution. A methodology is defined to evaluate Web service compatibility based on interface matching, in order to select substitutable Web services. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Politecn Milan, Dipartimento Elettron & Informaz, I-20133 Milan, Italy.
   Univ Brescia, I-25123 Brescia, Italy.
   Univ Roma La Sapienza, I-00198 Rome, Italy.
C3 Polytechnic University of Milan; University of Brescia; Sapienza
   University Rome
RP Politecn Milan, Dipartimento Elettron & Informaz, Piazza Leonardo da Vinci 32, I-20133 Milan, Italy.
EM mussi@elet.polimi.it
RI Melchiori, Michele/AAH-3714-2019; Mecella, Massimo/F-7106-2011; Mecella,
   Massimo/N-8699-2019; Pernici, Barbara/C-1035-2016
OI Melchiori, Michele/0000-0001-8649-4192; Mecella,
   Massimo/0000-0002-9730-8882; PLEBANI, PIERLUIGI/0000-0001-8245-226X;
   Pernici, Barbara/0000-0002-2034-9774
CR ARKIN A., 2002, BUSINESS PROCESS MOD
   Arkin Assaf., 2002, Web Service Choreography Interface (WSCI) 1.0
   BOOTH D, 2004, WEB SERVICES DESCRIP
   BOUBEZ T, 2002, UDDI TMODELS CLASSIF
   BRITTENHAM P, 2002, UNDERSTANDING WSDL U
   BROWN H, 2004, WEB SERVICES GLOSSAR
   Castano S, 2001, IEEE T KNOWL DATA EN, V13, P277, DOI 10.1109/69.917566
   CASTANO S, 1909, P IDEA 99 INT DAT EN, P53
   Chinnici R., 2001, WEB SERVICES DESCRIP
   Chung J.-Y., 2003, IEEE COMPUTER, V36
   COLOMBO E, 2002, IEEE DATA ENG B, V25, P36
   Damiani E, 1997, LECT NOTES COMPUT SC, V1226, P550
   De Antonellis V, 2003, LECT NOTES COMPUT SC, V2681, P552
   DUFTLER MJ, 2003, JSR SPECIFICATIO MAR
   FELICI E, 2003, THESIS U ROMA LA SAP
   FIALLI J, 2003, JSR SPECIFICATIO JAN
   *IBM ALPH, 2003, BPEL4WSJ BUS PROC EX
   KIM SM, 2004, P 13 INT C WORLD WID, P312
   Mecella M, 2002, LECT NOTES COMPUT SC, V2444, P38
   MECELLA M, 2002, 212002 U ROM DIP INF
   MECELLA M, 2001, LECT NOTES COMPUTER, V2193, P30
   *OASIS EBXML REG T, 2003, OASIS EBXML REG INF
   PAPAZOGLOU M, 2003, COMMUNICATIONS ACM, V46
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   THATTE S, 2003, BUSINESS PROCESS EXE
   van der Aalst W, 2003, IEEE INTELL SYST, V18, P72
   2003, UDDI VERSION 3 01 AP
   2000, UDDI VERSION 2 04 AP
   2002, UDDI VERSION 2 03 DA
NR 29
TC 9
Z9 11
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2006
VL 36
IS 2
BP 191
EP 223
DI 10.1002/spe.696
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 012YK
UT WOS:000235376600004
DA 2024-07-18
ER

PT J
AU Gibbs, M
   Stroustrup, B
AF Gibbs, M
   Stroustrup, B
TI Fast dynamic casting
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic casting; C plus; modulo; embedded systems; hard real-time
AB We describe a scheme for implementing dynamic casts suitable for systems where the performance and predictability of performance is essential. A dynamic cast from a base class to a derived class in an object-oriented language can be performed quickly by having the linker assign an integer type ID to each class. A simple integer arithmetic operation verifies whether the cast is legal at run time. The type ID scheme presented uses the modulo function to check that one class derives from another. A 64-bit type ID is sufficient to handle class hierarchies of large size at least nine levels of derivation deep. We also discuss the pointer adjustments required for a C++ dynamic-cast. All examples will be drawn from the C++ language. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Lockheed Martin Aerosp, Ft Worth, TX 76101 USA.
   Texas A&M Univ, Dept Comp Sci, College Stn, TX 77843 USA.
C3 Lockheed Martin; Texas A&M University System; Texas A&M University
   College Station
RP Gibbs, M (corresponding author), Lockheed Martin Aerosp, MZ 6602,POB 748, Ft Worth, TX 76101 USA.
EM james.m.gibbs@lmco.com
CR [Anonymous], 2000, The C++ Programming Language
   GOLDWAITE L, 2003, 10815 ISOIEC PDTR
   KOENIG A, 2004, C STANDARD
NR 3
TC 6
Z9 11
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2006
VL 36
IS 2
BP 139
EP 156
DI 10.1002/spe.686
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 012YK
UT WOS:000235376600002
DA 2024-07-18
ER

PT J
AU Cook, RP
AF Cook, RP
TI Heuristic compression of an English word list
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compression; English word list
AB The goal of the project was to design and implement an English word-list representation suitable for spell-checking in space-constrained environments. The compression algorithm was derived by statistically analyzing the word list. A compression ratio of 18% was achieved through a combination of prefix and suffix encoding. The compressed file can be randomly accessed by prefix marker positions. A simple spell-checker based on the encoding was implemented and tested in Java. Copyright © 2005 John Wiley & Sons, Ltd.
C1 Georgia So Univ, Dept Comp Sci, Statesboro, GA 30460 USA.
C3 University System of Georgia; Georgia Southern University
RP Cook, RP (corresponding author), Georgia So Univ, Dept Comp Sci, POB 7997, Statesboro, GA 30460 USA.
EM bobcook@georgiasouthern.edu
CR BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   de Moura ES, 2000, ACM T INFORM SYST, V18, P113, DOI 10.1145/348751.348754
   Domeij R., 1994, J QUANT LINGUIST, V1, P195
   Kuenning G., 2004, INT ISPELL
   MANBER U, 1994, LNCS, V807, P113
NR 5
TC 0
Z9 0
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2005
VL 35
IS 6
BP 577
EP 581
DI 10.1002/spe.648
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 923JN
UT WOS:000228906300003
DA 2024-07-18
ER

PT J
AU O'Gorman, K
   El Abbadi, A
   Agrawal, D
AF O'Gorman, K
   El Abbadi, A
   Agrawal, D
TI Multiple query optimization in middleware using query teamwork
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE query teamwork; multiple query optimization; middleware
AB Multiple concurrent queries occur in many database settings. This paper describes the use of middleware as an optimization tool for such queries. Since common subexpressions derive from common data and the data is usually greatest at the source, the middleware exploits the presence of sharable access patterns to underlying data, especially scans of large portions of tables or indexes, in environments where query queuing or hatching is an acceptable approach. The results show that simultaneous queries with such sharable accesses have a tendency to form synchronous groups (teams) which benefit each other through the operation of the disk cache, in effect using it as an implicit pipeline. The middleware exploits this tendency by queuing and scheduling the queries to promote this interaction, using an algorithm designed to promote such teamwork. This is implemented as middleware for use with a commercial database engine. The results include tests using the query mix from the TPC Benchmark (TM) R, achieving a speed-up of 2.34 over the default scheduling provided by one database. Other results show that the success depends on the details of the computing environment. Copyright (c) 2004 John Wiley & Sons, Ltd.
C1 Calif Polytech State Univ San Luis Obispo, Dept Comp Sci, San Luis Obispo, CA 93407 USA.
   Univ Calif Santa Barbara, Dept Comp Sci, Santa Barbara, CA 93109 USA.
C3 California State University System; California Polytechnic State
   University San Luis Obispo; University of California System; University
   of California Santa Barbara
RP O'Gorman, K (corresponding author), Calif Polytech State Univ San Luis Obispo, Dept Comp Sci, San Luis Obispo, CA 93407 USA.
EM kogorman@csc.calpoly.edu
CR Chen F, 1988, IEEE T KNOWL DATA EN, V10, P493
   Cosar A., 1993, CIKM 93. Proceedings of the Second International Conference on Information and Knowledge Management, P433, DOI 10.1145/170088.170181
   Dalvi NN, 2003, J COMPUT SYST SCI, V66, P728, DOI 10.1016/S0022-0000(03)00031-X
   Graefe G, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P250
   Jarke Matthias., 1985, Query Processing in Database Systems
   Libes D., 1995, EXPLORING EXPECT
   *MICR CORP, RAMDISK SYS SAMPL DR
   O'Gorman K, 2000, LECT NOTES COMPUT SC, V1874, P77
   Park J., 1988, Proceedings Fourth International Conference on Data Engineering (Cat. No.88CH2550-2), P311, DOI 10.1109/ICDE.1988.105474
   Roy P., 2000, SIGMOD Record, V29, P249, DOI 10.1145/335191.335419
   ROY P, 1998, EFFICIENT EXTENSIBLE
   SELLIS TK, 1988, ACM T DATABASE SYST, V13, P23, DOI 10.1145/42201.42203
   TAN KL, 1995, INFORM PROCESS LETT, V55, P251, DOI 10.1016/0020-0190(95)00088-T
   Tan KL, 1996, INFORM SCIENCES, V95, P125, DOI 10.1016/S0020-0255(96)00129-6
   *TPC, 2002, TPC BENCHM R STAND S
   Trice A., 2002, Linux Journal, P62
   ZHAO Y, 1998, SIGMOD REC, V27, P271
NR 17
TC 3
Z9 5
U1 1
U2 1
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2005
VL 35
IS 4
BP 361
EP 391
DI 10.1002/spe.640
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 911UA
UT WOS:000228029500004
OA Bronze
DA 2024-07-18
ER

PT J
AU Plank, JS
   Ding, Y
AF Plank, JS
   Ding, Y
TI Note: Correction to the 1997 tutorial on Reed-Solomon coding
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
ID FAULT-TOLERANCE; RAID
C1 Univ Tennessee, Knoxville, TN 37996 USA.
C3 University of Tennessee System; University of Tennessee Knoxville
RP Plank, JS (corresponding author), Univ Tennessee, Knoxville, TN 37996 USA.
EM plank@es.utk.edu
OI Plank, James/0000-0002-9841-6076
CR [Anonymous], SOSP 01
   [Anonymous], 29 ANN ACM S THEOR C
   [Anonymous], 1977, THEORY ERROR CORRE 1
   BLOMER J, 1995, 95048 INT COMP SCI I
   BYERS J, 1998, ACM SIGCOMM 98, P56
   Byers JW, 1999, IEEE INFOCOM SER, P275, DOI 10.1109/INFCOM.1999.749293
   CHEN PM, 1994, ACM COMPUT SURV, V26, P145, DOI 10.1145/176979.176981
   Gibson GA., 1992, Redundant Disk Arrays: Reliable, Parallel Secondary Storage
   GIBSON GA, 1989, 3 INT C ARCH SUPP PR, P123
   Kubiatowicz J., 2000, P ACM ASPLOS ACM NOV
   Lowenthal F, 1975, LINEAR ALGEBRA LINEA
   LUBY M, 2002, 3452 IETF RFC
   Luby M., 2002, 3453 IETF RFC
   LUBY M, 1998, 9 ANN ACM SIAM S DIS
   Plank J. S., 2004, DSN 2004 INT C DEP S
   Plank JS, 1997, SOFTWARE PRACT EXPER, V27, P995, DOI 10.1002/(SICI)1097-024X(199709)27:9<995::AID-SPE111>3.0.CO;2-6
   RABIN MO, 1989, J ACM, V36, P335, DOI 10.1145/62044.62050
   RILEY M, 2000, INTRO REED SOLOMON C
   Rizzo L., 1997, ACM COMPUTER COMMUNI, V27, P24, DOI DOI 10.1145/263876.263881
   RIZZO L, 1998, MOBILE COMPUTER COMM, V2
NR 20
TC 39
Z9 55
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2005
VL 35
IS 2
BP 189
EP 194
DI 10.1002/spe.631
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893SF
UT WOS:000226738800004
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Csallner, C
   Smaragdakis, Y
AF Csallner, C
   Smaragdakis, Y
TI JCrasher: an automatic robustness tester for Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software testing; test case generation; random testing; Java; state
   re-initialization
AB JCrasher is an automatic robustness testing tool for Java code. JCrasher examines the type information of a set of Java classes and constructs code fragments that will create instances of different types to test the behavior of public methods under random data. JCrasher attempts to detect bugs by causing the program under test to 'crash', that is, to throw an undeclared runtime exception. Although in general the random testing approach has many limitations, it also has the advantage of being completely automatic: no supervision is required except for off-line inspection of the test cases that have caused a crash. Compared to other similar commercial and research tools, JCrasher offers several novelties: it transitively analyzes methods, determines the size of each tested method's parameter-space and selects parameter combinations and therefore test cases at random, taking into account the time allocated for testing; it defines heuristics for determining whether a Java exception should be considered as a program bug or whether the JCrasher supplied inputs have violated the code's preconditions; it includes support for efficiently undoing all the state changes introduced by previous tests; it produces test files for JUnit, a popular Java testing tool; and it can be integrated in the Eclipse IDE. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
C3 University System of Georgia; Georgia Institute of Technology
RP Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
EM vannis@cc.gatech.edu
RI Smaragdakis, Yannis/AAM-2851-2021
CR Beck K, 1998, JAVA REP, V3, P37
   Beizer Boris, 1995, Black-box testing: techniques for functional testing of software and systems
   Boyapati C., 2002, ISSTA 02, P123, DOI DOI 10.1145/566172.566191
   CHAN P., 1998, JAVA CLASS LIB, V1
   Cheon Y, 2002, LECT NOTES COMPUT SC, V2374, P231
   Claessen Koen., 2000, Proceedings of the fifth ACM SIGPLAN international conference on Functional programming - ICFP'00, P268, DOI [10.1145/351240.351266, DOI 10.1145/351240.351266]
   Dillenberger D, 2000, IBM SYST J, V39, P194, DOI 10.1147/sj.391.0194
   Edwards SH, 2001, SOFTW TEST VERIF REL, V11, P97, DOI 10.1002/stvr.224
   Forrester JE, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH UNSENIX WINDOWS SYSTEMS SYMPOSIUM, P59
   Howell A, 1997, ENDOCR-RELAT CANCER, V4, P1, DOI 10.1677/erc.0.0040001
   Kozen D., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P71
   Kropp NP, 1998, DIG PAP INT SYMP FAU, P230, DOI 10.1109/FTCS.1998.689474
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   Pan JT, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P141, DOI 10.1109/DSN.2001.941400
   SANKAR S, 1994, SIGPLAN NOTICES, V29, P13, DOI 10.1145/185087.185096
   *SILV MARK INC, 2003, ENH JUN VERS 3 7 US
   STOTTS D, 2002, 2 XP UN 1 AG UN C, P131
   Xie T, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P40
   ZWEBEN S, 1992, SOFTW TEST VERIF REL, V1, P39
NR 20
TC 218
Z9 268
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2004
VL 34
IS 11
BP 1025
EP 1050
DI 10.1002/spe.602
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 850ZH
UT WOS:000223652400001
DA 2024-07-18
ER

EF