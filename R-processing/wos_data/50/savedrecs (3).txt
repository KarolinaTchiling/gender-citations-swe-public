FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Lin, KW
   Chen, PS
AF Lin, Kai-Wei
   Chen, Peng-Sheng
TI An assistance tool employing a systematic methodology for GCC
   retargeting
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE GCC; compiler; RTL; machine description
AB GCC (GNU Compiler Collection) is a popular compiler because it is open source, generates high-quality code, and is portable. The emergence of various embedded systems has led to considerable interest in the portability of GCC. For GCC, a source programming language is parsed and internally transferred to the corresponding intermediate representation, RTL (Register Transfer Language). A machine description (MD)file, which describes the mapping relationships between RTL and the corresponding target assembly instructions, is provided at the stage of code generation. Therefore, GCC retargeting requires the construction of a target MD file. However, it is difficult for developers to understand and construct the MD because this requires considerable time spent studying the GCC intermediate representation and the strategy of code generation. In this paper, we propose a systematic methodology to help developers in retargeting GCC. The entire process is divided into seven levels according to the features of the supported source programming language. Based on this systematic methodology, a Web-based assistance tool is also developed to guide developers through the retargeting. The assistance tool operates like a wizard to provide developers with the necessary procedures at each level and then generates the corresponding GCC files. Finally, we demonstrate the utility and practicality of the assistance tool based on the proposed methodology by applying it to the retargeting of GCC to a 32-bit embedded processorthe helper function unit of the UniCore VisoMT processor, as developed by the System-on-Chips (SoC) Research Center of National Chung Cheng University, Taiwan. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Lin, Kai-Wei; Chen, Peng-Sheng] Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, Chiayi 621, Taiwan.
C3 National Chung Cheng University
RP Chen, PS (corresponding author), Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, Chiayi 621, Taiwan.
EM pschen@cs.ccu.edu.tw
RI lin, kai/KJL-3762-2024; chen, peng/HMD-1278-2023
FU National Science Council of Taiwan [NSC-96-2221-E-194-031,
   NSC-97-2221-E-194-028-MY2, NSC-96-2220-E-194-013, NSC-97-2220-E-194-008]
FX The work was sponsored by the National Science Council of Taiwan under
   grants NSC-96-2221-E-194-031, NSC-97-2221-E-194-028-MY2,
   NSC-96-2220-E-194-013, and NSC-97-2220-E-194-008. The authors are
   grateful to the National Center for High-performance Computing for
   computer time and facilities.
CR [Anonymous], 2007, WORKSH GCC INT
   [Anonymous], M KAUFMANN SERIES CO
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Chu JC, 2007, DES AUT CON, P652, DOI 10.1109/DAC.2007.375246
   Deshpande S, 2007, GREPS INT WORKSH GCC
   Earnshaw R, 2007, PROCEDURE CALL STAND
   GCC Wiki, STRUCT GCC
   Gough B J, 2004, An Introduction to GCC
   Gunnarsson H, 1995, THESIS CHALMERS
   Hubicka J., 2003, P GCC DEV SUMM CIT, P79
   Ku WC, 2006, ICME, P25
   Lin KW, 2008, THESIS NATL CHUNG CH
   Makarov VN, 2003, P GCC DEV SUMM, P135
   Nilsson HP, 2000, PORTING GCC DUNCES
   Parthey J, 2004, PORTING GCC BACKEND
   Parthey J, 2004, P GSPX 04 SANT CLAR
   Penner H, 2003, P GCC DEV SUMM, P195
   Stallman R. M., USING GNU COMPILER C
   Stallman RichardM., 2002, GNU COMPILER COLLECT
   Vidacs L, 2003, INTRO ARM MACHINE DE
   WikiBooks, GNU C COMP INT
NR 21
TC 0
Z9 0
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2012
VL 42
IS 1
BP 19
EP 36
DI 10.1002/spe.1045
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 869KG
UT WOS:000298596200003
DA 2024-07-18
ER

PT J
AU Zhang, PC
   Li, WR
   Wan, DS
   Grunske, L
AF Zhang, Pengcheng
   Li, Wenrui
   Wan, Dingsheng
   Grunske, Lars
TI Monitoring of Probabilistic Timed Property Sequence Charts
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE run-time monitoring; probabilistic properties; Property Sequence Chart;
   Probabilistic Timed Property Sequence Chart
ID TEMPORAL PROPERTIES; MODEL-CHECKING; RUNTIME; TOOL
AB Run-time monitoring is an important technique to detect erroneous run-time behaviors. Several techniques have been proposed to automatically generate monitors from specification languages to check temporal and real-time properties. However, monitoring of probabilistic properties still requires manual generation. To overcome this problem, we define a formal property specification language called Probabilistic Timed Property Sequence Chart (PTPSC). PTPSC is a probabilistic and timed extension of the existing scenario-based specification formalism Property Sequence Chart (PSC). We have defined a formal grammar-based syntax and have implemented a syntax-directed translator that can automatically generate a probabilistic monitor which combines timed Buchi automata and a sequential statistical hypothesis test process. We validate the generated monitors with a set of experiments performed with our tool WS-PSC Monitor. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Zhang, Pengcheng; Li, Wenrui; Wan, Dingsheng] Hohai Univ, Coll Comp & Informat Engn, Nanjing, Peoples R China.
   [Zhang, Pengcheng] Nanjing Xiaozhuang Univ, Sch Math & Informat Technol, Nanjing, Peoples R China.
   [Li, Wenrui] Wuhan Univ, State Key Lab Software Engn, Wuhan, Peoples R China.
   [Grunske, Lars] Swinburne Univ Technol, Fac ICT, Hawthorn, Vic 3122, Australia.
C3 Hohai University; Nanjing Xiaozhuang University; Wuhan University;
   Swinburne University of Technology
RP Zhang, PC (corresponding author), Hohai Univ, Coll Comp & Informat Engn, Nanjing, Peoples R China.
EM pchzhang@hhu.edu.cn
RI Grunske, Lars/AAH-4550-2019
OI Grunske, Lars/0000-0002-8747-3745
FU Fundamental Research Funds for the Central Universities [2009B04314];
   State Key Laboratory of Software Engineering(SKLSE) [2010-08-01];
   National Natural Science Foundation of China [51079040]; Ministry of
   Water Resources [201016]
FX The first author is grateful to his advisor, Prof. Bixin Li, for the
   insightful advice on research during his PhD program at Southeast
   University. The authors from Hohai University are supported partially by
   the Fundamental Research Funds for the Central Universities under Grant
   No. 2009B04314, by State Key Laboratory of Software Engineering(SKLSE)
   under Grant No. 2010-08-01, by National Natural Science Foundation of
   China under Grant No. 51079040, and by a project of Ministry of Water
   Resources under Grant No. 201016.
CR *ACTIVEBPEL, 2008, OP SOURC BPEL ENG
   AHO AV, 1986, COMPLILERS PRINCIPLE
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   [Anonymous], 2007, ANAL, DOI DOI 10.1016/J.JPHA.2021.03.003
   [Anonymous], 2002, LNCS
   Autili M, 2007, AUTOMAT SOFTW ENG, V14, P293, DOI 10.1007/s10515-007-0012-6
   Aziz A, 1995, LECT NOTES COMPUT SC, V939, P155
   Aziz A, 1996, LNCS, P269, DOI [DOI 10.1007/3-540-61474-5_75, 10.1007/3-540-61474-5_75, DOI 10.1007/3-540-61474-5]
   Baier C, 1999, LECT NOTES COMPUT SC, V1664, P146
   Baresi L, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P663
   BAUER A, ACM T SOFTW IN PRESS
   Bauer A, 2006, LECT NOTES COMPUT SC, V4337, P260
   BECKER S, 2004, GI EDITION LECT NOTE, V57, P163
   Bertolino A, 2004, LECT NOTES COMPUT SC, V3054, P233
   CHEN F, 2007, P 22 ANN ACM SIGPLAN, P569, DOI DOI 10.1145/1297027.1297069
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Epifani I, 2009, PROC INT CONF SOFTW, P111, DOI 10.1109/ICSE.2009.5070513
   Giannakopoulou D, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P412, DOI 10.1109/ASE.2001.989841
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   GRUNSKE L, 2008, 30 INT C SOFTW ENG I, P31
   GRUNSKE L, 2009, P 7 JOINT M EUR SOFT, P183, DOI DOI 10.1145/1595696.1595724
   Grunske L, 2007, J SYST SOFTWARE, V80, P678, DOI 10.1016/j.jss.2006.08.014
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Huang T, 2009, J COMPUT SCI TECH-CH, V24, P294, DOI 10.1007/s11390-009-9225-4
   Inverardi P., 2005, 20 IEEEACM INT C AUT, P405
   Jayaputera J, 2004, EUROMICRO CONF PROC, P100, DOI 10.1109/EURMIC.2004.1333361
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kwiatkowska M, 2006, FORM METHOD SYST DES, V29, P33, DOI 10.1007/s10703-006-0005-2
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Li WJ, 2009, LECT NOTES COMPUT SC, V5931, P69
   Muccini H, 2007, LECT NOTES COMPUT SC, V4608, P124
   *OASIS, 2007, WS BPEL WEB SERV BUS
   Pelliccione P, 2009, IEEE T SOFTWARE ENG, V35, P325, DOI 10.1109/TSE.2008.104
   Raimondi F., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, P170, DOI DOI 10.1145/1453101.1453125
   Refsdal A, 2005, LECT NOTES COMPUT SC, V3829, P32
   Sammapun U, 2005, 11TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P147, DOI 10.1109/RTCSA.2005.84
   Sammapun U, 2007, LECT NOTES COMPUT SC, V4839, P164
   Simmonds J, 2009, IEEE T SERV COMPUT, V2, P223, DOI 10.1109/TSC.2009.16
   Simmonds J, 2008, LECT NOTES COMPUT SC, V5289, P137
   WALD A, 1948, ANN MATH STAT, V19, P326, DOI 10.1214/aoms/1177730197
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Zhang PC, 2010, LECT NOTES COMPUT SC, V6418, P485, DOI 10.1007/978-3-642-16612-9_39
   Zhang PC, 2010, J SYST SOFTWARE, V83, P371, DOI 10.1016/j.jss.2009.09.013
   Zhang PC, 2008, ASIA PAC SOFWR ENG, P335, DOI 10.1109/APSEC.2008.10
   Zhang PC, 2008, IEEE HI ASS SYS ENGR, P197, DOI 10.1109/HASE.2008.20
   Zhang PC, 2008, LECT NOTES COMPUT SC, V4977, P144, DOI 10.1007/978-3-540-89376-9_14
   Zheng T, 2008, IEEE T SOFTWARE ENG, V34, P391, DOI 10.1109/TSE.2008.30
NR 49
TC 19
Z9 21
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2011
VL 41
IS 7
BP 841
EP 866
DI 10.1002/spe.1038
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 766TV
UT WOS:000290810300005
OA Bronze
DA 2024-07-18
ER

PT J
AU Lanna, M
   Amyot, D
AF Lanna, Marconi
   Amyot, Daniel
TI Spotting the difference
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE file comparison; usability; graphical user interface (GUI); Java;
   Eclipse
AB Source Code Management (SCM) is a valuable tool in software development projects, providing the ability to store and retrieve past versions of source files. Comparison tools offer the capability to compare different files or versions, highlighting their differences. Most such tools are built around a two-pane interface, with files displayed side by side. Such interfaces are inefficient in the use of horizontal screen space, and ineffective since duplication makes text more difficult to read, leaving most of the comparison burden to the user. In this article we introduce an innovative metaphor for comparison interfaces. Based on a single-pane interface, common text is displayed only once with differences intelligently combined into a single text, improving readability. To further improve usability, additional features were developed: difference classification (additions, deletions, and modifications); fine level of granularity; special features to display modifications; and intelligent white space handling. A usability study conducted among 16 participants using real-world samples demonstrated the interface adequacy: on average, participants were 60% faster in performing comparison tasks, while the quality of answers improved by almost 80% on our scale. After the experiment, the proposed interface was declared the favorite choice by all participants. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Lanna, Marconi; Amyot, Daniel] Univ Ottawa, SITE, Ottawa, ON K1N 6N5, Canada.
C3 University of Ottawa
RP Amyot, D (corresponding author), Univ Ottawa, SITE, 800 King Edward St, Ottawa, ON K1N 6N5, Canada.
EM damyot@site.uottawa.ca
RI Amyot, Daniel/AAI-6948-2020
OI Amyot, Daniel/0000-0003-2414-1791
CR [Anonymous], 1982, DATA STRUCTURES ALGO
   [Anonymous], WELCHS T TEST
   Binkley D, 2002, PROG COMPREHEN, P97, DOI 10.1109/WPC.2002.1021327
   Canfora G, 2009, PROC INT CONF SOFTW, P595, DOI 10.1109/ICSE.2009.5070564
   Cormen T.H., 1990, Introduction to Algorithms
   Gosling James., 2005, The Java Series, V3rd
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   MILLER W, 1985, SOFTWARE PRACT EXPER, V15, P1025, DOI 10.1002/spe.4380151102
   Ohst D, 2003, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSM.2003.1235402
   Voinea L., 2005, Proceedings of the ACM Symposium on Software Visualization, P47, DOI [10.1145/1056018.1056025, DOI 10.1145/1056018.1056025]
   Wickens C., 2004, INTRO HUMAN FACTORS, V2nd
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 32
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2011
VL 41
IS 6
BP 607
EP 626
DI 10.1002/spe.1013
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 748GZ
UT WOS:000289379600001
DA 2024-07-18
ER

PT J
AU Arcaini, P
   Gargantini, A
   Riccobene, E
   Scandurra, P
AF Arcaini, Paolo
   Gargantini, Angelo
   Riccobene, Elvinia
   Scandurra, Patrizia
TI A model-driven process for engineering a toolset for a formal method
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE formal methods; abstract state machines; model-driven engineering
ID METAMODEL; LANGUAGE
AB This paper presents a model-driven software process suitable to develop a set of integrated tools around a formal method. This process exploits concepts and technologies of the Model-driven Engineering (MDE) approach, such as metamodelling and automatic generation of software artifacts from models. We describe the requirements to fulfill and the development steps of this model-driven process. As a proof-of-concept, we apply it to the Finite State Machines and we report our experience in engineering a metamodel-based language and a toolset for the Abstract State Machine formal method. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Gargantini, Angelo; Scandurra, Patrizia] Univ Bergamo, Bergamo, Italy.
   [Arcaini, Paolo; Riccobene, Elvinia] Univ Milan, I-20122 Milan, Italy.
C3 University of Bergamo; University of Milan
RP Gargantini, A (corresponding author), Univ Bergamo, Bergamo, Italy.
EM angelo.gargantini@unibg.it
RI Arcaini, Paolo/J-3616-2017; Riccobene, Elvinia/B-7517-2013; Gargantini,
   Angelo/E-6060-2012
OI Arcaini, Paolo/0000-0002-6253-4062; Gargantini,
   Angelo/0000-0002-4035-0131; Riccobene, Elvinia/0000-0002-1400-1026;
   SCANDURRA, Patrizia/0000-0002-9209-3624
FU Italian Government [2007XKEHFA]
FX This work was partially supported by the Italian Government under the
   project PRIN 2007 D-ASAP (2007XKEHFA).
CR [Anonymous], The abstract state machine language
   [Anonymous], 2006, Software and Systems Modeling, DOI [10.1007/s10270-006-0027-7, DOI 10.1007/S10270-006-0027-7]
   [Anonymous], Textual Editing Framework -
   [Anonymous], WORKSH TOOL BUILD FO
   [Anonymous], XTEXT
   Arcaini P, 2010, LECT NOTES COMPUT SC, V5977, P61, DOI 10.1007/978-3-642-11811-1_6
   Borger E., 2003, ABSTRACT STATE MACHI
   Carioni A, 2008, LECT NOTES COMPUT SC, V5238, P71
   Fischer J, 2005, LECT NOTES COMPUT SC, V3319, P208
   Gargantini A, 2003, LECT NOTES COMPUT SC, V2589, P263
   Gargantini Angelo, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P373, DOI 10.1109/ICSEA.2008.62
   GARGANTINI A, EUR WORKSH MIL MOD M
   Gargantini A, 2008, J UNIVERS COMPUT SCI, V14, P1949
   Gargantini A, 2009, AUTOMAT SOFTW ENG, V16, P415, DOI 10.1007/s10515-009-0053-0
   HEIDENREICH F, 2009, DERIVATION REFINEMEN
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   KURTEV I, 2002, INT S DISTR OBJ APPL
   Muller PA, 2008, SOFTW SYST MODEL, V7, P423, DOI 10.1007/s10270-008-0088-x
   *OMG, 2006, FORMAL20060501 OMG
   PFEIFFER M, 2008, P 8 OOPSLA WORKSH DO, P1
   Rushby J, 2006, I C SOFTW ENG FORM M, P21
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   SUN Y, 2008, SLE, P178
NR 23
TC 46
Z9 48
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2011
VL 41
IS 2
SI SI
BP 155
EP 166
DI 10.1002/spe.1019
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718FH
UT WOS:000287106000004
DA 2024-07-18
ER

PT J
AU Sztajnberg, A
   Granja, RS
   Cesário, J
   Monteiro, AFA
AF Sztajnberg, Alexandre
   Granja, Rodrigo Souza
   Cesario, Jeane
   Almeida Monteiro, Andre Felipe
TI An integration experience of a software architecture and a monitoring
   infrastructure to deploy applications with non-functional requirements
   in computing grids
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE computing grid; non-functional requirements; contracts; middleware;
   dynamic configuration
AB Resource management is an important aspect to consider regarding applications that might have different non-functional or operational requirements, when running in distributed and heterogeneous environments. In this context, it is necessary to provide the means to specify the required resource constraints and an infrastructure that can adapt the applications in light of the changes in resource availability. We adopted a contract-based approach to describe and maintain parallel applications that have non-functional requirements in a Computing Grid context, called ZeliGrid. To form the supporting infrastructure we have designed a software architecture that integrates some of the Globus services, the LDAP and the NWS monitoring services. Some modules that map the contract approach into software artifacts were also integrated to this architecture. This paper addresses the architecture and integration issues of our approach, as well as how we put the pieces together highlighting deployment and implementation details, which have to consider diverse aspects such as monitoring, security and dynamic reconfiguration. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Sztajnberg, Alexandre; Cesario, Jeane; Almeida Monteiro, Andre Felipe] Univ Estado Rio De Janeiro, DICC, BR-20559900 Rio De Janeiro, Brazil.
   [Sztajnberg, Alexandre; Cesario, Jeane; Almeida Monteiro, Andre Felipe] Univ Estado Rio De Janeiro, PEL, BR-20559900 Rio De Janeiro, Brazil.
   [Granja, Rodrigo Souza] Univ Fed Rio de Janeiro, Programa Engn Sistemas & Comp, PESC COPPE, BR-21941 Rio De Janeiro, Brazil.
C3 Universidade do Estado do Rio de Janeiro; Universidade do Estado do Rio
   de Janeiro; Universidade Federal do Rio de Janeiro
RP Sztajnberg, A (corresponding author), Univ Estado Rio De Janeiro, DICC, Rua SF Xavier 524,6018-D, BR-20559900 Rio De Janeiro, Brazil.
EM alexszt@uerj.br
RI Sztajnberg, Alexandre/I-5330-2012
OI Sztajnberg, Alexandre/0000-0003-2018-6386
FU Faperj [APQ1 2009/02 E-26 110.253/2010]; CNPq
FX The authors acknowledge the support of Faperj (APQ1 2009/02 E-26
   110.253/2010) and CNPq (Edital Universal 2008 and 2009).
CR ABRAMSON D, 1995, 4 IEEE S HIGH PERF D
   [Anonymous], 2009, MOAB GRID SUIT
   [Anonymous], CONDOR MANUAL CONDOR
   [Anonymous], SOFTWARE MAN PAGES S
   Braga C, 2009, ELECTRON NOTES THEOR, V203, P103, DOI 10.1016/j.entcs.2009.03.029
   BUYYA R, 2000, P 4 INT C HIGH PERF
   Camargo YR, 2004, ACM I FIP USENIX 2 I
   Campana S, 2004, CERNLCGGDEIS498079
   Cardoso L, 2006, LECT NOTES COMPUT SC, V3996, P87
   *CERN, 2008, WORLDW LHC COMP GRID
   Cesario J, 2008, P 5 WORKSH OP SYST W, P189
   Chiba S, 2003, LECT NOTES COMPUT SC, V2830, P364
   de Camargo RY, 2006, CONCURR COMP-PRACT E, V18, P567, DOI 10.1002/cpe.966
   Distributed and parallel systems group, 2007, ASKALON GRID APPL DE
   Ellahi TN, 2006, IASTED INT C WEB TEC
   Fahringer T, 2005, CONCURR COMP-PRACT E, V17, P143, DOI 10.1002/cpe.929
   Foster I, 2001, INT J HIGH PERFORM C, V15, P200, DOI 10.1177/109434200101500302
   Frey James., 2001, P 10 IEEE S HIGH PER
   Globus Alliance, GLOB TOOLK 2 4 REL M
   Gogouvitis SV, 2008, P 1 ACM WORKSH AN RE, P119
   Granja RS, 2007, REIC REV EL IN CIENT, VVII:10
   [GridWay.or Distributed Systems Architecture Group], 2007, GRIDWAY MET
   Institute for advanced professional studies, 2008, NETW FIL SYST NFS PR
   Kovatch P, 2007, METASCHEDULING REQUI
   Krauter K, 2002, SOFTWARE PRACT EXPER, V32, P135, DOI 10.1002/spe.432
   Lisboa J, 2008, P BRAZ WORKSH FAULT, P211
   LOPES RF, 2005, INT C SIM MOD OPT, V2005, P31
   Loques O., 2004, J BRAZ COMPUT SOC, V10, P5, DOI DOI 10.1007/BF03192350
   McGough AS, 2006, LECT NOTES COMPUT SC, V3993, P964
   McGough AS, 2005, P UK E SCI ALL HANDS
   McGough S., 2004, UK e-Science All Hands Meeting, P894
   Mills D, 1992, 1305 RFC, V1305, P4
   Obertelli G, NETWORK WEATHER SERV
   Petrov V., 2009, P 24 ANN ACM S APPL, P1
   Petrucci V, 2007, WCGA 2007 P 4 WORKSH
   SEIDEL J, 2007, TR0096 COREGRID I RE
   Silva H, 2006, WORKSH TOL FALH 2006
   Sirac SB, 2001, 6 USENIX C OBJ OR TE
   Sztajnberg A, 2007, ROADS REAL OV DISTR
   Sztajnberg Alexandre, 2009, International Journal of Functional Informatics and Personalised Medicine, V2, P358
   Wang H, 2001, PROCEEDINGS OF THE SIXTH INTERNATIONAL CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK IN DESIGN, P313, DOI 10.1109/CSCWD.2001.942278
   Wolski R, 1999, FUTURE GENER COMP SY, V15, P757, DOI 10.1016/S0167-739X(99)00025-4
   Wolski R, COMPUTATIONAL GRIDS
   Woo N, 2004, IEICE T INF SYST, VE87D, P1820
   Yeong W, 1995, 1777 RFC, V1777, P2
NR 45
TC 3
Z9 5
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2011
VL 41
IS 1
BP 103
EP 127
DI 10.1002/spe.1007
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 701UB
UT WOS:000285847800006
DA 2024-07-18
ER

PT J
AU González-Vélez, H
   Leyton, M
AF Gonzalez-Velez, Horacio
   Leyton, Mario
TI A survey of algorithmic skeleton frameworks: high-level structured
   parallel programming enablers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE algorithmic skeletons; structured parallelism; parallel constructs;
   concurrent programming structures; software patterns; parallel computing
ID MULTI-CORE; COLLECTIVE COMMUNICATION; PERFORMANCE; ENVIRONMENT; DESIGN;
   OPENMP; MPI; LANGUAGE; STANDARD; SYSTEMS
AB Structured parallel programs ought to be conceived as two separate and complementary entities: computation, which expresses the calculations in a procedural manner, and coordination, which abstracts the interaction and communication. By abstracting commonly used patterns of parallel computation, communication, and interaction, algorithmic skeletons enable programmers to code algorithms without specifying platform-dependent primitives. This article presents a literature review on algorithmic skeleton frameworks (ASKF), parallel software development environments furnishing a collection of parameterizable algorithmic skeletons, where the control flow, nesting, resource monitoring, and portability of the resulting parallel program is dictated by the ASKF as opposed to the programmer. Consequently, the ASKF can be positioned as high-level structured parallel programming enablers, as their systematic utilization permits the abstract description of programs and fosters portability by focusing on the description of the algorithmic structure rather than on its detailed implementation. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Gonzalez-Velez, Horacio] Robert Gordon Univ, Sch Comp, Aberdeen AB25 1HG, Scotland.
   [Gonzalez-Velez, Horacio] Robert Gordon Univ, IDEAS Res Inst, Aberdeen AB25 1HG, Scotland.
   [Leyton, Mario] Univ Chile, NIC Labs, Santiago, Chile.
C3 Robert Gordon University; Robert Gordon University; Universidad de Chile
RP González-Vélez, H (corresponding author), Robert Gordon Univ, Sch Comp, St Andrew St, Aberdeen AB25 1HG, Scotland.
EM h.gonzalez-velez@rgu.ac.uk
RI Gonzalez-Velez, Horacio/B-7840-2008; Gonzalez-Velez,
   Horacio/ABD-5680-2021
OI Gonzalez-Velez, Horacio/0000-0003-0241-6053; 
CR Alba Enrique, 2007, International Journal of Innovative Computing and Applications, V1, P74, DOI 10.1504/IJICA.2007.013403
   Alba E, 2006, PARALLEL COMPUT, V32, P415, DOI 10.1016/j.parco.2006.06.007
   Alba E, 2002, LECT NOTES COMPUT SC, V2400, P927
   Aldinucci M, 2004, ADV PARALLEL COMPUT, V13, P63
   Aldinucci M, 2005, LECT NOTES COMPUT SC, V3648, P771
   Aldinucci M, 2004, LECT NOTES COMPUT SC, V3149, P596
   Aldinucci M, 2003, FUTURE GENER COMP SY, V19, P611, DOI 10.1016/S0167-739X(02)00172-3
   Aldinucci M., 2009, IPDPS 2009, P1, DOI DOI 10.1109/IPDPS.2009.5161034
   Aldinucci M., 2006, COMPUTATIONAL METHOD, V12, P21, DOI 10.12921/cmst.2006.12.01.21-32
   ALDINUCCI M, 2006, COREGRID SERIES, P177, DOI DOI 10.1007/978-0-387-72812-4_6
   ALDINUCCI M, 2007, P INT EUR PDP 2007 P, P213, DOI DOI 10.1109/PDP.2007.79
   Aldinucci M., 1999, P PDCS INT C PAR DIS, P955
   Aldinucci M, 2008, EUROMICRO WORKSHOP P, P54, DOI 10.1109/PDP.2008.46
   Aldinucci M, 2008, J SYST ARCHITECT, V54, P868, DOI 10.1016/j.sysarc.2008.02.008
   Aldinucci M, 2007, COMPUT LANG SYST STR, V33, P179, DOI 10.1016/j.cl.2006.07.004
   Aldinucci M, 2010, GRIDS, P2P AND SERVICES COMPUTING, P89, DOI 10.1007/978-1-4419-6794-7_8
   Aldinucci M, 2007, SCALABLE COMPUT-PRAC, V8, P325
   Aldinucci Marco., 2005, Grid Computing The New Frontier of High Performance Computing, volume, V14, P255, DOI DOI 10.1016/S0927-5452(05)80014-0
   Alonso JM, 2006, CONCURR COMP-PRACT E, V18, P2021, DOI 10.1002/cpe.1052
   Alt M, 2005, FUTURE GENER COMP SY, V21, P699, DOI 10.1016/j.future.2004.05.010
   Alt M, 2003, LECT NOTES COMPUT SC, V2834, P363
   Alt M, 2003, LECT NOTES COMPUT SC, V2763, P401
   ALT M, 2003, LECT NOTES COMPUTER, V2790, P682, DOI DOI 10.1007/B12024
   [Anonymous], 2003, PATTERNS SKELETONS P
   [Anonymous], 2001, LCPC
   [Anonymous], 2009, Hadoop: The definitive guide
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 10031 IEEE
   Armstrong R., 1999, Proceedings. The Eighth International Symposium on High Performance Distributed Computing (Cat. No.99TH8469), P115, DOI 10.1109/HPDC.1999.805289
   Asanovic K, 2009, COMMUN ACM, V52, P56, DOI 10.1145/1562764.1562783
   Austern MatthewH., 1998, Generic programming and the STL: Using and extending the C++ Standard Template Library
   Bacci B, 1999, PARALLEL COMPUT, V25, P1827, DOI 10.1016/S0167-8191(99)00072-1
   Bacci B, 1997, NATO ASI 3 HIGH TECH, V30, P219
   Bacci B, 1995, LECT NOTES COMPUT SC, V919, P7, DOI 10.1007/BFb0046602
   BACCI B, 1995, CONCURRENCY-PRACT EX, V7, P225, DOI 10.1002/cpe.4330070305
   BAL HE, 1992, IEEE T SOFTWARE ENG, V18, P190, DOI 10.1109/32.126768
   Barnett M., 1994, Proceedings Supercomputing '94 (Cat. No.94CH34819), P107, DOI 10.1109/SUPERC.1994.344270
   Benoit A, 2005, LECT NOTES COMPUT SC, V3648, P761
   Benoit A, 2005, LECT NOTES COMPUT SC, V3515, P764
   Benoit A, 2005, COMPUT J, V48, P369, DOI 10.1093/comjnl/bxh089
   Benoit A, 2005, SCALABLE COMPUT-PRAC, V6, P1
   Benoit A, 2008, J PARALLEL DISTR COM, V68, P790, DOI 10.1016/j.jpdc.2007.11.004
   Berthold J, 2008, LECT NOTES COMPUT SC, V4902, P248
   BIRD RS, 1988, TECHNICAL MONOGRAPH
   BIRRELL A, 2005, MSRTR200568
   Blelloch G. E., 1990, VECTOR MODELS DATA P
   Botorog G. H., 1996, Euro-Par '96 Parallel Processing. Second International Euro-Par Conference. Proceedings, P718
   Botorog GH, 1998, THEOR COMPUT SCI, V196, P71, DOI 10.1016/S0304-3975(97)00196-5
   BOTOROG GH, 1996, LECT NOTES COMPUTER, V1117, P263, DOI DOI 10.1007/BFB0030116
   BOTOROG GH, 1996, HPDC 96, P243, DOI DOI 10.1109/HPDC.1996.546194
   BOTOROG GH, 1995, LECT NOTES COMPUTER, V980, P27, DOI DOI 10.1007/3-540-60321-2
   BREITINGER S, 1997, HIPS 97 WORKSH HIGH, P120, DOI DOI 10.1109/HIPS.1997.582964
   BUSS A, 2010, SYSTOR 10, P1, DOI DOI 10.1145/1815695.1815713
   Cappel F, 2000, SEMINAR ON SINTER AND PELLETES 1999, P12
   CAROMEL D, 2008, IPDPS 2008, P1, DOI DOI 10.1109/IPDPS.2008.4536276
   Caromel D, 2008, EUROMICRO WORKSHOP P, P45, DOI 10.1109/PDP.2008.29
   Caromel D, 2007, LECT NOTES COMPUT SC, V4641, P72
   Chan E, 2007, CONCURR COMP-PRACT E, V19, P1749, DOI 10.1002/cpe.1206
   Ciechanowicz P., 2009, 7 ERCIS
   Clément F, 2006, PARALLEL COMPUT, V32, P539, DOI 10.1016/j.parco.2006.04.003
   Cole M., 2001, Journal of Systems Integration, V10, P127, DOI 10.1023/A:1011280825682
   Cole M, 2004, PARALLEL COMPUT, V30, P389, DOI 10.1016/j.parco.2004.12.002
   Cole M, 1999, RESEARCH DIRECTIONS IN PARALLEL FUNCTIONAL PROGRAMMING, P289
   COLE M, 1988, THESIS U EDINBURGH E
   Cole M, 1989, ALGORITHMIC SKELETON
   Crnkovic I, 2002, J SYST SOFTWARE, V61, P201, DOI 10.1016/S0164-1212(01)00148-0
   Cunha JC, 2005, FUTURE GENER COMP SY, V21, P843, DOI 10.1016/j.future.2003.12.015
   Dagum L, 1998, IEEE COMPUT SCI ENG, V5, P46, DOI 10.1109/99.660313
   Danelutto M, 2006, LECT NOTES COMPUT SC, V3992, P937, DOI 10.1007/11758525_124
   Danelutto M, 2005, 13TH EUROMICRO CONFERENCE ON PARALLEL, DISTRIBUTED AND NETWORK-BASED PROCESSING, PROCEEDINGS, P282, DOI 10.1109/EMPDP.2005.35
   Danelutto M, 2003, J SYST ARCHITECT, V49, P399, DOI 10.1016/j.sysarc.2003.06.001
   Danelutto M, 2000, LECT NOTES COMPUT SC, V1900, P1175
   Danelutto M, 2002, LECT NOTES COMPUT SC, V2330, P844
   Danelutto M., 2001, Parallel Processing Letters, V11, P41, DOI 10.1142/S0129626401000415
   Danelutto M., 2005, PARCO, P681
   DANELUTTO M, 1997, LECT NOTES COMPUTER, V1300, P619, DOI DOI 10.1007/BFB0002792
   Dangelmayr C, 2009, SOFTWARE PRACT EXPER, V39, P807, DOI 10.1002/spe.912
   Darlington J., 1993, PARLE '93 Parallel Architectures and Languages Europe. 5th International PARLE Conference Proceedings, P146
   DARLINGTON J, 1995, LNCS, V966, P55, DOI DOI 10.1007/BFB0020455
   DARLINGTON J, 1995, ABSTRACT MACHINE MOD, P140
   Darlington J., 1995, PPOPP 95, P19, DOI DOI 10.1145/209936.209940
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dieterle M, 2010, LECT NOTES COMPUT SC, V6009, P337, DOI 10.1007/978-3-642-12251-4_24
   DONGARRA, 2002, SOURCEBOOK PARALLEL, P383
   Dongarra JJ, 1996, COMMUN ACM, V39, P84, DOI 10.1145/233977.234000
   Dorta A.J., 2003, PARALLEL PROCESSING, V13, P437, DOI [DOI 10.1142/S0129626403001409, 10.1142/s0129626403001409]
   Dorta A, 2006, PARALLEL COMPUT, V32, P491, DOI 10.1016/j.parco.2006.07.001
   Dorta AJ, 2007, LECT NOTES COMPUT SC, V4757, P89
   DUNNWEBER J, 2004, SCC 04, DOI DOI 10.1109/SCC.2004.1358017
   Emoto K, 2007, LECT NOTES COMPUT SC, V4641, P705
   Emoto K, 2007, INT J PARALLEL PROG, V35, P615, DOI 10.1007/s10766-007-0043-4
   Falcou J, 2006, PARALLEL COMPUT, V32, P604, DOI 10.1016/j.parco.2006.06.001
   Falcou J, 2008, ADV PARALLEL COMPUT, V15, P243
   Ferreira JF, 2006, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P301
   FINKEL R, 1987, ACM T PROGR LANG SYS, V9, P235, DOI 10.1145/22719.24067
   Foster I, 1997, INT J SUPERCOMPUT AP, V11, P115, DOI 10.1177/109434209701100205
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GAMMA E, 1993, LECT NOTES COMPUTER, V707, P406, DOI DOI 10.1007/3-540-47910-4_21
   Gannon D., 2002, Cluster Computing, V5, P325, DOI 10.1023/A:1015633507128
   Geist A., 1994, PVM: Parallel Virtual Machine
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   Gerlach J, 2003, LECT NOTES COMPUT SC, V2834, P301
   Gomes C, 2008, INT J HIGH PERFORM C, V22, P301, DOI 10.1177/1094342007086228
   González-Vélez H, 2004, 2004 1ST INTERNATIONAL CONFERENCE ON ELECTRICAL AND ELECTRONICS ENGINEERING (ICEEE), P200
   González-Vélez H, 2005, LECT NOTES COMPUT SC, V3563, P43
   González-Vélez H, 2007, PROCEEDINGS OF THE 2007 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING PPOPP'07, P140, DOI 10.1145/1229428.1229456
   González-Vélez H, 2006, PARALLEL COMPUT, V32, P479, DOI 10.1016/j.parco.2006.07.002
   González-Vélez H, 2006, LECT NOTES COMPUT SC, V4330, P916
   González-Vélez H, 2010, CONCURR COMP-PRACT E, V22, P2073, DOI 10.1002/cpe.1549
   González-Vélez H, 2010, J SCHEDULING, V13, P427, DOI 10.1007/s10951-009-0138-4
   Gonzalez-Velez Virginia, 2007, J Bioinform Comput Biol, V5, P755, DOI 10.1142/S0219720007002679
   GONZALEZVELEZ H, 2008, IPDPS 2008, P1, DOI DOI 10.1109/IPDPS.2008.4536264
   Gorlatch S, 2006, FUTURE GENERATION GRIDS, P241, DOI 10.1007/978-0-387-29445-2_13
   Gorlatch S, 2004, ACM T PROGR LANG SYS, V26, P47, DOI 10.1145/963778.963780
   Goswami D, 2002, J PARALLEL DISTR COM, V62, P669, DOI 10.1006/jpdc.2001.1809
   Grelck C, 2005, J FUNCT PROGRAM, V15, P353, DOI 10.1017/S0956796805005538
   Grelck C, 1999, LECT NOTES COMPUT SC, V1595, P38
   Grelck C, 2010, DAMP'10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON DECLARATIVE ASPECTS OF MULTICORE PROGRAMMING, P25
   Grelck Clemens, 2003, Parallel Processing Letters, V13, P401
   HANSEN PB, 1993, CONCURRENCY-PRACT EX, V5, P407, DOI 10.1002/cpe.4330050503
   Hasselbring W, 2000, ACM COMPUT SURV, V32, P43, DOI 10.1145/349194.349199
   Herrmann C. A., 2002, Parallel Processing Letters, V12, P193, DOI 10.1142/S0129626402000926
   Herrmann C. A., 2000, Parallel Processing Letters, V10, P239, DOI 10.1016/S0129-6264(00)00023-8
   Hey A. J. G., 1990, Future Generation Computer Systems, V6, P185, DOI 10.1016/0167-739X(90)90018-9
   Horváth Z, 2003, MATH COMPUT MODEL, V38, P865, DOI [10.1016/S0895-7177(03)90071-9, 10.1016/S0895-7177(03)00288-7]
   JOHNSON E, 1997, ICS 97, P124, DOI DOI 10.1145/263580.263614
   Kambadur P, 2008, LECT NOTES COMPUT SC, V5004, P123, DOI 10.1007/978-3-540-79561-2_11
   Kambadur P, 2006, LECT NOTES COMPUT SC, V4192, P266
   Kambadur Prabhanjan., 2009, SC 09, P1, DOI DOI 10.1145/1654059.1654103
   KELLY P, 1989, RES MONOGRAPHS PARAL
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   Klusik U, 2001, LECT NOTES COMPUT SC, V2011, P71
   KRAWEZIK G, 2003, SPAA 03, P118, DOI DOI 10.1145/777412.777433
   Kuang HR, 2005, J PARALLEL DISTR COM, V65, P506, DOI 10.1016/j.jpdc.2004.11.009
   Kuchen H, 2005, CONCURR COMP-PRACT E, V17, P739, DOI 10.1002/cpe.844
   Kuchen H., 2002, Parallel Processing Letters, V12, P141, DOI 10.1142/S0129626402000896
   Kuchen H, 2003, LECT NOTES COMPUT SC, V3016, P254
   Kuchen H, 2002, LECT NOTES COMPUT SC, V2400, P620
   KUCHEN H, 2002, JGI 02, P122, DOI DOI 10.1145/583810.583824
   KUNG HT, 1988, PHILOS T R SOC A, V326, P357, DOI 10.1098/rsta.1988.0092
   Leijen D, 2009, ACM SIGPLAN NOTICES, V44, P227, DOI 10.1145/1639949.1640106
   Leopold C, 2001, W S PA DI C, P1
   Leyton M, 2010, EUROMICRO WORKSHOP P, P289, DOI 10.1109/PDP.2010.26
   Loidl H. W., 2003, Higher-Order and Symbolic Computation, V16, P203, DOI 10.1023/A:1025641323400
   Loogen R, 2005, J FUNCT PROGRAM, V15, P431, DOI 10.1017/S0956796805005526
   Luecke GR, 2001, CONCURR COMP-PRACT E, V13, P905, DOI 10.1002/cpe.588
   LUSK EL, 1987, SCI COMPUTATION SERI, P351
   MacDonald S, 2002, PARALLEL COMPUT, V28, P1663, DOI 10.1016/S0167-8191(02)00190-4
   MANNHEIM U, 2010, TENNESSEE NERSC TOP5
   Matsuzaki K, 2004, LECT NOTES COMPUT SC, V3149, P644
   Matsuzaki K, 2003, LECT NOTES COMPUT SC, V2790, P789
   Matsuzaki K., 2006, Proceedings of the 1st international conference on Scalable information systems - InfoScale '06, P13, DOI DOI 10.1145/1146847.1146860
   Matsuzaki K, 2006, PARALLEL COMPUT, V32, P590, DOI 10.1016/j.parco.2006.06.002
   Mattson T., 2004, SOFTWARE PATTERNS SE
   MCCOOL MD, 2010, HOTPAR 10, P1
   McKenney PE, 1996, COMMUN ACM, V39, P75, DOI 10.1145/236156.236174
   MEHROTRA P, 1995, LECT NOTES COMPUTER, V892, P346, DOI DOI 10.1007/BFB0025866
   Mehta P, 2006, PARALLEL COMPUT, V32, P616, DOI 10.1016/j.parco.2006.06.008
   MICHAELSON G, 2001, PARALLEL ALGORITHMS, V16, P18, DOI DOI 10.1080/01495730108935271
   Morihata A, 2009, ACM SIGPLAN NOTICES, V44, P177, DOI 10.1145/1594834.1480905
   *MPI FOR, OFF MESS PASS INT ST
   Nolte J, 2002, FUTURE GENER COMP SY, V18, P461, DOI 10.1016/S0167-739X(01)00075-9
   Oaks Scott., 2004, JAVA THREADS
   Pelagatti S, 1998, STRUCTURED DEV PARAL
   Pjesivac-Grbovic J, 2007, CLUSTER COMPUT, V10, P127, DOI 10.1007/s10586-007-0012-0
   Poldner M, 2008, PARALLEL PROCESS LET, V18, P117, DOI 10.1142/S0129626408003260
   Poldner M, 2008, ICSOFT 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL PL/DPS/KE, P181
   Priebe S, 2006, LECT NOTES COMPUT SC, V4128, P615
   Quinlan DJ, 2004, CONCURR COMP-PRACT E, V16, P293, DOI 10.1002/cpe.775
   Ranger C, 2007, INT S HIGH PERF COMP, P13
   Reinders James, 2007, Intel threading building blocks-outfitting C++ for multi-core processor parallelism
   Reyes R, 2009, LECT NOTES COMPUT SC, V5759, P185, DOI 10.1007/978-3-642-03770-2_25
   REYNDERS J, 2002, SOURCEBOOK PARALLEL, P383
   Schmidt D, 2000, PATTERNS CONCURRENT, V2
   Sérot J, 2002, PARALLEL COMPUT, V28, P1685, DOI 10.1016/S0167-8191(02)00189-8
   Sérot J, 1999, LECT NOTES COMPUT SC, V1662, P296
   Serot J, 2008, LECT NOTES COMPUT SC, V5101, P154, DOI 10.1007/978-3-540-69384-0_21
   Siek JG, 1998, LECT NOTES COMPUT SC, V1505, P59
   Singler J, 2007, LECT NOTES COMPUT SC, V4641, P682
   Skillicorn DB, 1998, ACM COMPUT SURV, V30, P123, DOI 10.1145/280277.280278
   SKILLICORN DB, 1990, COMPUTER, V23, P38, DOI 10.1109/2.62092
   SMITH DR, 1990, IEEE T SOFTWARE ENG, V16, P1024, DOI 10.1109/32.58788
   Snir M., 1998, MPI-the complete reference: the MPI core, V1
   Sobral JL, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, P365, DOI 10.1109/CLUSTR.2007.4629251
   Vadhiyar SS, 2005, CONCURR COMP-PRACT E, V17, P235, DOI 10.1002/cpe.927
   Vanneschi M, 2002, PARALLEL COMPUT, V28, P1709, DOI 10.1016/S0167-8191(02)00188-6
   VILLACIS J, 1995, SC 95, P18, DOI DOI 10.1145/224170.224207
   Whaley RC, 2001, PARALLEL COMPUT, V27, P3, DOI 10.1016/S0167-8191(00)00087-9
   WILLHALM T, 2008, IWMSE 08, P3, DOI DOI 10.1145/1370082.1370085
   Yaikhom G, 2007, ELECTRON NOTES THEOR, V190, P167, DOI 10.1016/j.entcs.2007.07.010
NR 190
TC 131
Z9 144
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2010
VL 40
IS 12
SI SI
BP 1135
EP 1160
DI 10.1002/spe.1026
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677TZ
UT WOS:000284016000006
DA 2024-07-18
ER

PT J
AU Hsiao, CF
   Chu, CP
AF Hsiao, Chun-Feng
   Chu, Chih-Ping
TI Enhancing SCORM through creating a reusable JAVA class repository
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE authoring tools and methods; interactive learning environments;
   eLearning; scenario-based elearning; simulations
ID SCENARIO; REUSE
AB Sharable Content Object Reference Model (SCORM) is a set of standards that have been widely adopted when developing eLearning products. However, even with the use of SCORM, the creation of a simulation-based eLearning course is still a hard task. An instructor can neither easily obtain source code from existing learning objects repositories nor reuse and adapt existing simulations to suit the instructor's needs. We describe an experimental reusable JAVA class repository that embeds itself in a SCORM run-time environment to support software reuse and the cooperative creation of simulation-based courses. Finally, we provide advice on how to promote software reuse and assure the quality of simulation-based eLearning courses. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Hsiao, Chun-Feng; Chu, Chih-Ping] Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 70101, Taiwan.
C3 National Cheng Kung University
RP Hsiao, CF (corresponding author), Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 70101, Taiwan.
EM p7895127@mail.ncku.edu.tw
CR *ADL, SHAR CONT OBJ REF MO
   *ADL, 2009, SHAR CONT OBJ REF MO
   Bond ST, 2008, COMPUT EDUC, V50, P601, DOI 10.1016/j.compedu.2007.09.019
   CHEN YH, 2007, M INT C PAR PROC WOR, P26
   COPPETO T, INTRO OSID V3 V2 DEV
   DAVID CR, 2000, SOFTWARE PRACTICE EX, V30, P685
   DAVIES J, 1990, SEM VIRT ED MIDDL U
   Gonzalez-Barbone V, 2008, COMPUT EDUC, V51, P1634, DOI 10.1016/j.compedu.2008.04.004
   Kim MS, 2004, BIOL PHARM BULL, V27, P34, DOI 10.1248/bpb.27.34
   *LETSI, ASS DOC SCORM 2 0 PR
   Littlejohn A, 2008, COMPUT EDUC, V50, P757, DOI 10.1016/j.compedu.2006.08.004
   Lucrédio D, 2008, J SYST SOFTWARE, V81, P996, DOI 10.1016/j.jss.2007.08.036
   PRESSMAN RS, 2001, SOFTWARE ENG PRACTIT, P739
   Siddiqui A, 2008, COMPUT EDUC, V51, P252, DOI 10.1016/j.compedu.2007.05.008
   Sierra JL, 2007, SOFTWARE PRACT EXPER, V37, P441, DOI 10.1002/spe.779
   SIERRA K, 2002, SUN CERTIFIED PROGRA, P4
   *SUN MICR, 2009, JAV PLATF STAND ED 6
   WANG D, DOES JSP WORK IIS
   *WIK, WIK CONC VERS SYST
   *WIK, WIK GIT SOFTW
NR 20
TC 2
Z9 2
U1 0
U2 4
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2010
VL 40
IS 10
BP 865
EP 881
DI 10.1002/spe.979
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 644EE
UT WOS:000281355100002
DA 2024-07-18
ER

PT J
AU Thomas, RC
   Karahasanovic, A
AF Thomas, Richard C.
   Karahasanovic, Amela
TI Experience with an extensible workspace for analysis of low-level usage
   data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE empirical studies; low-level usage data; data analysis tool
ID FEEDBACK
AB Analysis of low-level usage data collected in empirical studies of user interaction is well known as a demanding task. Existing techniques for data collection and analysis are either application specific or data-driven. This paper presents a workspace for data cleaning, transformation and analysis of low-level usage data that we have developed and reports our experience with it. By its five-level architecture, the workspace makes a distinction between more general data that typically can be used in initial data analysis and the data answering a specific research question. The workspace was used in four studies and in total 6.5M user actions were collected from 238 participants. The collected data have been proven to be useful for: (i) validating solution times, (ii) validating process conformances, (iii) exploratory studies on program comprehension for understanding use of classes and documents and (iv) testing hypotheses on keystroke latencies. We have found workspace creation to be demanding in time. Particularly demanding were determining the context of actions and dealing with deficiencies. However, once these processes were understood, it was easy to reuse the workspace for different experiments and to extend it to answer new research questions. Based on our experience, we give a set of guidelines that might help in setting up studies, collecting and preparing data. We recommend that designers of data collection instruments add context to each action. Furthermore, we recommend rapid iterations starting early in the process of data preparation and analysis, and covering both general and specific data. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Thomas, Richard C.] Univ Western Australia, Nedlands, WA 6009, Australia.
   [Karahasanovic, Amela] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 University of Western Australia; University of Oslo
RP Karahasanovic, A (corresponding author), SINTEF, ICT, POB 124 Blindern, N-0314 Oslo, Norway.
EM amela@sintef.no
FU Simula Research Laboratory Guest Researcher Programme; University of
   Western Australia Gledden Visiting Senior Fellowship
FX Contract/grant sponsor: Simula Research Laboratory Guest Researcher
   Programme; Contract/grant sponsor: University of Western Australia
   Gledden Visiting Senior Fellowship
CR [Anonymous], ANAL USER BEHAV WEB
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   *BORL, 2004, JBUILDER
   Bowdidge R. W., 1997, Empirical Software Engineering, V2, P221, DOI 10.1023/A:1009716016693
   Evans H, 2003, SOFTWARE PRACT EXPER, V33, P99, DOI 10.1002/spe.498
   *GROUPL, 2009, MOUVILENS DAT
   HAMMONTREE ML, 1992, P C HUM FACT COMP SY, P431
   HERMENS LA, 1994, IEEE EXPERT, V9, P28, DOI 10.1109/64.295135
   Ivory MY, 2001, ACM COMPUT SURV, V33, P470, DOI 10.1145/503112.503114
   Karahasanovi A, 2005, EMPIR SOFTW ENG, V10, P113, DOI 10.1007/s10664-004-6189-4
   Karahasanovic A., 2007, Proc. Ninth Australas. Conf. Comput. Educ., V66, P81
   Karahasanovic A, 2007, J SYST SOFTWARE, V80, P1541, DOI 10.1016/j.jss.2006.10.041
   Karahasanovic A, 2009, BEHAV INFORM TECHNOL, V28, P139, DOI 10.1080/01449290701682761
   KISHI N, 1995, 6 INT C HUM COMP INT, P161
   KORNBROT D, 1990, INTERACT 90 3 IFIP C, P401
   KVAERN K, 2006, THESIS U OSLO, P102
   Macleod M., 1993, People and Computers VIII. Proceedings of HCI 93, P293
   MISANCHUK ER, 1992, J ED MULTIMEDIA HYPE, V1, P413
   Monrose F, 2000, FUTURE GENER COMP SY, V16, P351, DOI 10.1016/S0167-739X(99)00059-X
   Parkin P, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P221, DOI 10.1109/ASWEC.2004.1290475
   Reeves TC., 2003, Interactive learning systems evaluation
   Renaud Karen., 2004, P 2004 ANN RES C S A, P115
   TAIJ J, 2005, THESIS U W AUSTR PER, P54
   Talavera L., 2004, P WORKSHOP ARTIFICIA, P17
   THOMAS R, 2005, P 7 AUSTR COMP ED C, P127
   THOMAS R, 2003, ASCILITE 2003 C U AD, P715
   THOMAS RC, 2005, 7 AUSTR COMP ED C AC, P127
   Thomas RichardC., 1998, LONG TERM HUMAN COMP
   Thomson Robert W., 2004, ITICSE, P161, DOI DOI 10.1145/1007996.1008039
   TOMMERBERG G, 2006, THESIS U OSLO, P86
   Torii K, 1999, IEEE T SOFTWARE ENG, V25, P474, DOI 10.1109/32.799942
   Wang Y, 2006, PROCEEDINGS OF 2006 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P2788
NR 32
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP 25
PY 2009
VL 39
IS 14
BP 1185
EP 1213
DI 10.1002/spe.934
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 496AV
UT WOS:000269941200002
DA 2024-07-18
ER

PT J
AU Ficco, M
   Russo, S
AF Ficco, Massimo
   Russo, Stefano
TI A hybrid positioning system for technology-independent location-aware
   computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE location-aware computing; mobile computing; hybrid location model;
   JSR-179; data sensor fusion; handset-based positioning;
   infrastructure-based positioning; Bluetooth; GPS
ID PRIVACY
AB Location-aware computing is a form of context-aware mobile computing that refers to the ability of providing users with services that depend on their position. Locating the user terminal, often called positioning, is essential in this form of computing. Towards this aim, several technologies exist, ranging from personal area networking, to indoor, outdoor, and up to geographic area systems. Developers of location-aware software applications have to face with a number of design choices, that typically depend on the chosen technology. This work addresses the problem of easing the development of pull location-aware applications, by allowing uniform access to multiple heterogeneous positioning systems. Towards this aim, the paper proposes an approach to structure location-aware mobile computing systems in a way independent of positioning technologies. The approach consists in structuring the system into a layered architecture, that provides application developers with a standard Java Application Programming Interface (JSR-179 API), and encapsulates location data management and technology-specific positioning subsystems into lower layers with clear interfaces. In order to demonstrate the proposed approach we present the development of HyLocSys. It is an open hybrid software architecture designed to support indoor/outdoor applications, which allows the uniform (combined or separate) use of several positioning technologies. HyLocSys uses a hybrid data model, which allows the integration of different location information representations (using symbolic and geometric coordinates). Moreover, it allows support to handset-and infrastructure-based positioning approaches while respecting the privacy of the user. The paper presents a prototypal implementation of HyLocSys for heterogeneous scenarios. It has been implemented and tested on several platforms and mobile devices. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Ficco, Massimo; Russo, Stefano] CINI, Lab ITeM Carlo Savy, I-80126 Naples, Italy.
   [Russo, Stefano] Univ Naples Federico II, Dipartimento Informat & Sistemist, I-80125 Naples, Italy.
C3 University of Naples Federico II
RP Ficco, M (corresponding author), CINI, Lab ITeM Carlo Savy, Via Cinthia 5,Monte S Angelo Edificio 1, I-80126 Naples, Italy.
EM ficco@unina.it
RI Russo, Stefano/H-7723-2013
OI Russo, Stefano/0000-0002-8747-3446
FU Regione Campania
FX This work has been partially Supported by the Regione Campania in the
   framework of the POR Campania 2000/2006 Misura 3.17 Project 'NET-UNO'.
CR *3GPP TS, 2007, 44031 3GPP TS
   [Anonymous], 2005, 4279 RFC
   *APP NETW INC, APP CONT ENG
   *AV BLUET, 2006, JAV IMPL JSR 82 LIN
   Bahl P., 2000, Proceedings IEEE INFOCOM 2000. Conference on Computer Communications. Nineteenth Annual Joint Conference of the IEEE Computer and Communications Societies (Cat. No.00CH37064), P775, DOI 10.1109/INFCOM.2000.832252
   Becker C, 2005, PERS UBIQUIT COMPUT, V9, P20, DOI 10.1007/s00779-004-0270-2
   Beresford AR, 2003, IEEE PERVAS COMPUT, V2, P46, DOI 10.1109/MPRV.2003.1186725
   *BLUEZ, 2008, OFF LIN BLUET PROT S
   Cotroneo D, 2004, SECOND IEEE WORKSHOP ON SOFTWARE TECHNOLOGIES FOR FUTURE EMBEDDED AND UBIQUITOUS SYSTEMS, PROCEEDINGS, P14, DOI 10.1109/WSTFES.2004.1300407
   di Flora C, 2005, 25TH IEEE INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P244, DOI 10.1109/ICDCSW.2005.77
   di Flora C, 2004, LECT NOTES COMPUT SC, V3292, P383
   di Flora C, 2006, FOURTH IEEE WORKSHOP ON SOFTWARE TECHNOLOGIES FOR FUTURE EMBEDDED AND UBIQUITOUS SYSTEMS AND THE SECOND INTERNATIONAL WORKSHOP ON COLLABORATIVE COMPUTING, INTEGRATION, AND ASSURANCE, PROCEEDINGS, P37, DOI 10.1109/SEUS-WCCIA.2006.11
   DIFLORA C, 2004, LECT NOTES COMPUTER, V3732, P464
   Ekahau Inc., EK POS ENG 2 0
   Focken D., 2002, P IEEE INT C MULT IN
   Hansen S, 2006, LECT NOTES COMPUTER, V4197, P383
   Hazas M, 2004, COMPUTER, V37, P95, DOI 10.1109/MC.2004.1266301
   Hightower J, 2001, COMPUTER, V34, P57, DOI 10.1109/2.940014
   Hightower J, 2002, P 4 IEEE INT WORKSH
   Hightower J., 2001, UWCSE010701, P1
   HOHL F, 1999, P 5 ANN ACM IEEE INT, P249, DOI DOI 10.1145/313451.313549
   Imielinski T, 1999, COMMUN ACM, V42, P86, DOI 10.1145/299157.299176
   *JAV COMM PROC, 2002, JAV APIS BLUET SPEC
   *JAV COMM PROC, 2003, LOC API J2ME SPEC 1
   JIANG C, 2002, LNCS, V2498, P246
   Kotanen A, 2003, ITCC 2003: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: COMPUTERS AND COMMUNICATIONS, PROCEEDINGS, P297, DOI 10.1109/ITCC.2003.1197544
   LaMarca A, 2005, LECT NOTES COMPUT SC, V3468, P116
   Langheinrich Marc, 2002, INT C UBIQUITOUS COM, P237, DOI DOI 10.1007/3-540-45809-3_19
   Lopes C., 2006, ACM SIGMOBILE Mobile Computing and Communications Review, V10, P38
   Martin-Escalona I, 2007, IEEE ICC, P5537, DOI 10.1109/ICC.2007.918
   Myles G, 2003, IEEE PERVAS COMPUT, V2, P56, DOI 10.1109/MPRV.2003.1186726
   Ni LM, 2003, PROCEEDINGS OF THE FIRST IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS (PERCOM 2003), P407, DOI 10.1109/PERCOM.2003.1192765
   Niculescu D, 2004, IEEE NETWORK, V18, P24, DOI 10.1109/MNET.2004.1316758
   NORD J, 2001, P 35 HAW INT C SYST, P293
   *NSICOM, 2003, CRE ME 4 1 J2ME CDC
   Patterson CA, 2003, IEEE PERVAS COMPUT, V2, P80, DOI 10.1109/MPRV.2003.1203757
   RAAB FH, 1979, IEEE T AERO ELEC SYS, V15, P709, DOI 10.1109/TAES.1979.308860
   Ranganathan A, 2004, LECT NOTES COMPUT SC, V3231, P397
   *TOMTOM INV BV, SOFTW DEV
   Tseng YC, 2001, COMPUTER, V34, P46, DOI 10.1109/2.928621
   VOSSICK M, 2003, IEEE MICROWAVE M DEC
   WANT R, 1992, ACM T INFORM SYST, V10, P91, DOI 10.1145/128756.128759
   Ward A, 1997, IEEE PERS COMMUN, V4, P42, DOI 10.1109/98.626982
   YANCHAO Z, 2003, IEEE J SEL AREA COMM, V24, P829
   Yilin Zhao, 2000, IEEE Transactions on Intelligent Transportation Systems, V1, P55, DOI 10.1109/6979.869021
   Zhao YL, 2002, IEEE COMMUN MAG, V40, P108, DOI 10.1109/MCOM.2002.1018015
   BLUE COVE OPEN SOURC
   OMA SECURE USER PLAN
   2008, GOOGLE GEO LOCATION
NR 49
TC 19
Z9 25
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP 10
PY 2009
VL 39
IS 13
BP 1095
EP 1125
DI 10.1002/spe.919
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 484ZW
UT WOS:000269090900001
DA 2024-07-18
ER

PT J
AU Rajapakse, DC
   Jarzabek, S
AF Rajapakse, Damith C.
   Jarzabek, Stan
TI Towards generic representation of web applications: solutions and
   trade-offs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code duplication; clone unification; meta-programming; design patterns;
   Web applications; genericity
AB Server pages (also called dynamic pages) render a generic web page into many similar ones. The technique is commonly used for implementing web application user interfaces (UIs). Yet our previous study found a high rate of repetitions (also called 'clones') in web applications, particularly in UIs. The finding raised the question as to why such repetitions had not been averted with the use of server pages. For an answer, we conducted an experiment using PHP server pages to explore how far server pages can be pushed to achieve generic web applications. Our initial findings suggested that generic representation obtained using server pages sometimes compromises certain important system qualities such as run-time performance. It may also complicate the use of WYSIWYG editors. We have analysed the nature of these trade-offs, and now propose a mixed-strategy approach to obtain optimum generic representation of web applications without unnecessary compromise to critical system qualities and user experience. The mixed-strategy approach applies the generative technique of XVCL to achieve genericity at the meta-level representation of a web application, leaving repetitions to the actual web application. Our experiments show that the mixed-strategy approach can achieve a good level of genericity without conflicting with other system qualities. Our findings should open the way for others to better-informed decisions regarding generic design solutions, which should in turn lead to simpler, more maintainable and more reusable web applications. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Rajapakse, Damith C.; Jarzabek, Stan] Natl Univ Singapore, Dept Comp Sci, Sch Comp, Singapore 117548, Singapore.
C3 National University of Singapore
RP Rajapakse, DC (corresponding author), Natl Univ Singapore, Dept Comp Sci, Sch Comp, Singapore 117548, Singapore.
EM damith@comp.nus.edu.sg
FU NUS research grant [R-252-000-239-112]
FX Contract/grant sponsor: NUS research grant; contract/grant number:
   R-252-000-239-112
CR Alur D., 2003, Core J2EE patterns, best practices and design strategies, V2nd
   [Anonymous], 1997, DESIGN PATTERNS ELEM
   Aversano L, 2001, WSE 2001: 3RD INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, P107
   Boldyreff C, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/WCRE.2001.957829
   Cordy JR, 2003, PROG COMPREHEN, P196
   De Lucia A, 2004, PROG COMPREHEN, P132, DOI 10.1109/WPC.2004.1311055
   Deshpande Y., 2002, J WEB ENG, V1, P3, DOI DOI 10.4018/978-1-59904-492-7.CH001
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2003, Patterns of Enterprise Application Architecture. A Martin Fowler signature book
   Jarzabek S, 2007, Effective software maintenance and evolution: A reuse-based approach
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kang Kyo C, 1990, Technical Report
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Lozano A., 2007, PROC 4 INT WORKSHOP, P18, DOI DOI 10.1109/MSR.2007.8
   PING Y, 2004, P 8 EUR C SOFTW MAIN, P204
   Rajapakse DC, 2007, PROC INT CONF SOFTW, P116
   Ricca F, 2003, PROG COMPREHEN, P207
   Synytskyy N, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P49, DOI 10.1109/WSE.2003.1234008
   Ueda Y, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P67, DOI 10.1109/METRIC.2002.1011326
   Zhang XM, 2005, BIOENG DIV ASME, V57, P69
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 31
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2009
VL 39
IS 5
BP 501
EP 530
DI 10.1002/spe.908
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425NU
UT WOS:000264645200003
DA 2024-07-18
ER

PT J
AU Janakiram, D
   Gunnam, A
   Suneetha, N
   Rajani, V
   Reddy, KVK
AF Janakiram, D.
   Gunnam, Ashok
   Suneetha, N.
   Rajani, Vineet
   Reddy, K. Vinay Kumar
TI Object-oriented wrappers for the Linux kernel
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Linux kernel; API; object orientation; wrappers; device drivers
ID MAINTAINABILITY; SYSTEM
AB Linux is an open-source operating system, which has increased in its popularity and size since its birth. Various studies have been conducted in literature on the evolution of the Linux kernel, which have shown that there are considerable maintenance problems arising out of the coupling issues in the Linux kernel and this may hamper the evolution of the kernel in future. We propose an object-oriented (00) wrapper-based approach to Linux kernel to provide 00 abstractions to external modules. As the major growth of the size of the Linux kernel is in device drivers, our approach provides substantial benefits in terms of developing the device drivers in C++, although the kernel is in C. Providing reusability and extensibility features to device drivers improves the maintainability of the kernel. The 00 wrappers provide several benefits to module developers in terms of understandability development ease, support for 00 modules, etc. The design and implementation of C++ wrappers for Linux kernel and the performance of a device driver re-engineered in C++ are presented in this paper. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Janakiram, D.; Gunnam, Ashok; Suneetha, N.; Rajani, Vineet; Reddy, K. Vinay Kumar] Indian Inst Technol Madras, Distributed & Object Syst Lab, Chennai, Tamil Nadu, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Madras
RP Gunnam, A (corresponding author), Indian Inst Technol Madras, Distributed & Object Syst Lab, Chennai, Tamil Nadu, India.
EM ashok.gunnam@gmail.com
FU Department of Information Technology; Government of India
FX The authors acknowledge the Department of Information Technology,
   Government of India for providing financial support for the Linux
   redesign project. The project review team has provided critical reviews
   to the project.
CR [Anonymous], 2000, PATTERN ORIENTED SOF
   BROWN A, 1997, P 1997 ACM SIGMETRIC, P214
   CAMPBELL RH, 1993, COMMUN ACM, V36, P117, DOI 10.1145/162685.162717
   Canfora G, 1996, SOFTWARE PRACT EXPER, V26, P25, DOI 10.1002/(SICI)1097-024X(199601)26:1<25::AID-SPE994>3.0.CO;2-T
   GALL H, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P208, DOI 10.1109/WCRE.1995.514709
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Islam N, 1996, COMMUN ACM, V39, P38, DOI 10.1145/234215.234469
   Joshi RK, 1997, SOFTWARE PRACT EXPER, V27, P677, DOI 10.1002/(SICI)1097-024X(199706)27:6<677::AID-SPE103>3.0.CO;2-I
   Kurtzman S., 1995, Digest of Papers. COMPCON '95. Technologies for the Information Superhighway (Cat. No.95CH35737), P367, DOI 10.1109/CMPCON.1995.512410
   *LIN KERN, 2007, LIN KERN MAIL LIST F
   LIU SS, 1990, CONFERENCE ON SOFTWARE MAINTENANCE 1990, P266
   PENDYALA N, THESIS
   Schmidt DC, 1999, C++ REP, V11, P40
   Stroustrup B., 1995, DESIGN EVOLUTION C
   SWITT MM, 2004, P 6 USENIX S OP SYST
   Vinay Kumar RK, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P461
   WHEELER DA, 1998, 6 INT WORKSH PROGR C
   YOKOTE Y, 1992, SIGPLAN NOTICES, V27, P414, DOI 10.1145/141937.141970
   Yu LG, 2004, IEEE T SOFTWARE ENG, V30, P694, DOI 10.1109/TSE.2004.58
   Yu LG, 2006, J SYST SOFTWARE, V79, P807, DOI 10.1016/j.jss.2005.08.014
NR 20
TC 5
Z9 6
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2008
VL 38
IS 13
BP 1411
EP 1427
DI 10.1002/spe.879
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 364OY
UT WOS:000260346200004
DA 2024-07-18
ER

PT J
AU Wu, H
   Gray, J
   Mernik, M
AF Wu, Hui
   Gray, Jeff
   Mernik, Marjan
TI Grammar-driven generation of domajin-specific language debuggers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE debugging; DSL; GPL; grammars; program environments-integrated
   environments
ID DOMAIN-SPECIFIC LANGUAGES; DESIGN
AB Domain-specific languages (DSLs) assist a software developer (or end-user) in writing a program using idioms that are similar to the abstractions round in a specific problem domain. Tool support for DSIs is lacking when compared with the capabilities provided for standard general-purpose languages (GPLs), such as Java and C++. For example, support for debugging a program written in a DSL is often non-existent. The lack of a debugger at the proper abstraction level limits an end-user's ability to discover and locate faults in a DSL program. This paper describes a grammar-driven technique to build a debugging tool generation framework from existing DSL grammars. The DSL grammars are used to generate the hooks needed to interface with a supporting infrastructure constructed for an integrated development environment that assists in debugging a program written in a DSL. The contribution represents a coordinated approach to bring essential software tools (e.g. debuggers) to different types of DSLs (e.g. imperative, declarative, and hybrid). This approach hides from the end-users the accidental complexities associated with expanding the focus of a language environment to include debuggers. The research described in this paper addresses a long-term goal of empowering end-users with development tools for particular DSL problem domains at the proper level of abstraction without depending on a specific GPL. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Wu, Hui; Gray, Jeff] Univ Alabama Birmingham, Dept Comp & Informat Sci, Birmingham, AL 35294 USA.
   [Mernik, Marjan] Univ Maribor, Fac Elect Engn & Comp Sci, SLO-2000 Maribor, Slovenia.
C3 University of Alabama System; University of Alabama Birmingham;
   University of Maribor
RP Wu, H (corresponding author), Univ Alabama Birmingham, Dept Comp & Informat Sci, Birmingham, AL 35294 USA.
EM wuh@cis.uab.edu
RI Mernik, Marjan/A-1147-2008
OI Mernik, Marjan/0000-0002-2775-0667; Gray, Jeff/0000-0003-0082-6753
FU IBM Eclipse Innovation Grant (EIG); Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1052616] Funding Source: National Science Foundation
FX This work was supported in part by an IBM Eclipse Innovation Grant
   (EIG). We thank the reviewers for their very helpful comments that aided
   LIS in preparing a revision of this paper.
CR [Anonymous], 2007, The Definitive ANTLR Reference: Building Domain-Specific Languages
   [Anonymous], 2007, COMPILERS PRINCIPLES
   Ashenden PJ., 2002, DESIGNERS GUIDE VHDL, VSecond
   Atkins DL, 1999, IEEE T SOFTWARE ENG, V25, P334, DOI 10.1109/32.798323
   Auguston M., 1995, AADEBUG. 2nd International Workshop on Automated and Algorithmic Debugging, P277
   AUGUSTON M, 1998, ECAI WORKSH SPAT TEM, P19
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   BENTLEY J, 1986, COMMUN ACM, V29, P711, DOI 10.1145/6424.315691
   Bravenboer M, 2004, ACM SIGPLAN NOTICES, V39, P365, DOI 10.1145/1035292.1029007
   Burnett M, 2003, PROC INT CONF SOFTW, P93, DOI 10.1109/ICSE.2003.1201191
   BURNETT M, 2005, COMMUN ACM, V48, P53
   Cleenewerck T., 2005, PROC 2005 ACM S APPL, P1398
   CORNELISSEN B, 2004, THESIS U AMSTERDAM
   Czarnecki K., 2000, GEN PROGRAMMING METH
   DMITRIEV M, 2004, DESIGN JFLUID PROFIL
   FAITH R, 1998, THESIS U N CAROLINA
   Faith RE, 1997, PROCEEDINGS OF THE CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES, P243
   FLOYD RW, 1979, COMMUN ACM, V22, P455, DOI 10.1145/359138.359140
   Gamma Erich., 2003, CONTRIBUTING ECLIPSE
   *GDB, 2007, GNU PROJ DEB
   GELPERIN D, 1988, COMMUN ACM, V31, P687, DOI 10.1145/62959.62965
   Groff J.R., 2002, SQL The Complete Reference, VSecond
   Henriques PR, 2005, IEE P-SOFTW, V152, P54, DOI 10.1049/ip-sen:20041317
   *JDB, 2007, JAV DEB
   *JSR, 2007, 45 JSR
   KEIBURTZ BR, 1996, INT C SOFTW ENG BERL, P542
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   KOSAR T, 2007, J INFORM SO IN PRESS, DOI DOI 10.1016/J.INFSOF.2007.04.002
   Loy M., 2002, Java Swing, VSecond
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mernik M, 2005, COMPUT LANG SYST STR, V31, P1, DOI 10.1016/j.cl.2004.02.001
   OLIVIER P, 2000, THESIS U AMSTERDAM
   Oram Andrew, 1991, MANAGING PROJECTS MA
   PARNAS DL, 1975, COMMUN ACM, V18, P401, DOI 10.1145/360881.360913
   REBERNAK D, 2006, GPCE WORKSH DOM SPEC
   Robbins J., 2003, DEBUGGING APPL MICRO
   Rosenberg JonathanB., 1996, DEBUGGERS WORK ALGOR
   RYU S, 2005, INT C COMP CONSTR ED, P10
   SCAFFIDI C, 2005, S VIS LANG HUM CENTR, P207
   Sebesta Robert., 2007, Concepts of Programming Languages, V8th
   Simonyi C, 2006, ACM SIGPLAN NOTICES, V41, P451, DOI 10.1145/1167515.1167511
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Sutcliffe A, 2004, COMMUN ACM, V47, P31, DOI 10.1145/1015864.1015883
   Thibault SA, 1999, IEEE T SOFTWARE ENG, V25, P363, DOI 10.1109/32.798325
   Van den Brand MGJ, 2002, ACM T PROGR LANG SYS, V24, P334, DOI 10.1145/567097.567099
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Van Deursen A, 1998, J SOFTW MAINT-RES PR, V10, P75, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<75::AID-SMR168>3.0.CO;2-5
   VANDENBRAND M, 2005, TOOL DEM 5 WORKSH LA
   VANWYK E, 2007, 40 HAW INT C SYST SC
   Wile D, 2004, SCI COMPUT PROGRAM, V51, P265, DOI 10.1016/j.scico.2003.12.006
   Wile DS, 1999, IEEE T SOFTWARE ENG, V25, P289
   WRIGHT D, 2004, ECLIPSE CORNER   FAL
   WU H, 2005, SAC 05, P1370
   WU H, 2004, OOPSLA ECLIPSE TECHN
   ZELLWEGGER PT, 1984, CSL845 U CAL DEP COM
   2007, JAVA PLATFORM DEBUGG
   CUP USER MANUAL
   2007, DOMAIN SPECIFIC LANG
NR 59
TC 39
Z9 40
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2008
VL 38
IS 10
BP 1073
EP 1103
DI 10.1002/spe.863
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 340DA
UT WOS:000258625100004
DA 2024-07-18
ER

PT J
AU Paulino, H
   Lopes, L
AF Paulino, Herve
   Lopes, Luis
TI A programming language for service-oriented computing with mobile agents
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile agents; service-oriented computing; programming languages;
   run-time systems; process-calculi
AB We present MOB, a service-oriented scripting language, for programming mobile agents. We argue that combining the service-oriented and mobile agent paradigms provides a very natural model for programming a large class of distributed applications. In MOB, mobile agents in a network simultaneously provide and use services. The service interfaces constitute contracts that bind agents among themselves. The language features static type-checking to guarantee that contracts are respected at run-time. Other language features, such as redundant service providers, allow a certain degree of fault-tolerance by allowing applications to switch servers dynamically in case a failure is detected (e.g. a server crash). For these reasons, the target applications we envision more interesting to develop using MOB are services for networks with highly dynamic, volatile resources or simply highly adaptive, reconfigurable applications for more classical networks. The paper presents MOB and its implementation from an application programmer's and a systems developer's view. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Paulino, Herve] Univ Nova Lisboa, Fac Ciencias & Tecnol, Dept Informat, P-2829516 Caparica, Portugal.
   [Lopes, Luis] Univ Porto, Fac Ciencias, Dept Ciencia Computadores, P-4169007 Oporto, Portugal.
C3 Universidade Nova de Lisboa; Universidade do Porto
RP Paulino, H (corresponding author), Univ Nova Lisboa, Fac Ciencias & Tecnol, Dept Informat, P-2829516 Caparica, Portugal.
EM herve@di.fct.unl.pt
RI Paulino, Hervé/P-5530-2019; FCTUNL, CITI/G-6714-2011; INESC-TEC,
   CRACS/F-7527-2012; Lopes, Luis/H-2044-2014
OI Paulino, Hervé/0000-0001-7958-9740; Lopes, Luis/0000-0001-8273-1357
CR BARHAM P, 2003, SOSP 03, P164, DOI DOI 10.1145/945445.945462
   Bettini L, 2005, LECT NOTES COMPUT SC, V3465, P29
   Bettini L, 2002, SOFTWARE PRACT EXPER, V32, P1365, DOI 10.1002/spe.486
   Conchon S., 1999, First International Symposium on Agent Systems and Applications/Third International Symposium on (Cat No.PR00340), P22, DOI 10.1109/ASAMA.1999.805390
   Figueira AR, 2003, J UNIVERS COMPUT SCI, V9, P745
   Funato D, 1997, 1997 INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS - PROCEEDINGS, P229, DOI 10.1109/ICNP.1997.643720
   GERMAIN F, 2002, EATCS WORKSH FDN WID
   Glass Graham., 1999, Overview of Voyager: ObjectSpace?s Product Family for State-of-the-art Distributed Computing
   GRAY RS, 1995, P CIKM WORKSH INT IN
   HONDA K, 1991, EUR C OBJ OR PROGR E, P141
   Horstmann Markus., 1997, DCOM ARCHITECTURE
   *KVM, 2006, KERN BAS VIRT MACH L
   Lange D. B., 1998, PROGRAMMING DEPLOYIN
   Lopes L, 2000, CLUSTER 2000: IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, PROCEEDINGS, P297, DOI 10.1109/CLUSTR.2000.889083
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   *OBJ MAN GROUP, 2001, COMM OBJ REQ BROK AR
   *OP, 2001, OP SERV OR COMP ARCH
   Paulino H, 2003, LECT NOTES COMPUT SC, V2722, P40
   PAULINO H, 2003, 7 INT C PAR COMP TEC, P316
   PAULINO H, MO CORE LANGUAGE VIR
   PAULINO H, 2006, THESIS U NOVA LISBOA
   PAULINO H, 2006, P JOINT MOD LANG C 2, P383
   PAULINO H, 2006, P 5 INT JOINT C AUT, P1294
   PEINE H, 1997, P 1 INT WORKSH MOB A, P316
   Pierce BC, 2000, FOUNDAT COMPUT, P455
   Platt D., 2003, INTRO MICROSOFT NET, VThird
   SCHMITT A, 2003, P 30 ACM SIGPLAN SIG, P50
   SEWELL P, 2005, ICFP 05, P15
   STRASSER M, 1997, WORKSH READ 10 EUR C, P301
   Sultan F, 2002, INT CON DISTR COMP S, P469, DOI 10.1109/ICDCS.2002.1022294
   *TYCO TEAM, 2003, TYP CONC OBJ
   VASCONCELOS V, 1998, WORKSH HIGH LEV PROG, P19
   VASCONCELOS VT, 2006, P TV06 MULT HARDW SO
   Waldo J, 1999, COMMUN ACM, V42, P76, DOI 10.1145/306549.306582
   WHITE JE, 1995, TELESCRIPT TECHNOLOG
   Wojciechowski PT, 2000, IEEE CONCURR, V8, P42, DOI 10.1109/4434.846193
   ZHANG Y, 1995, 4 INT C COMP COMM NE, P300
   Zhong XL, 2004, PROC INT CONF PARAL, P431
   1997, JAVA REMOTE METHOD I
NR 39
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2008
VL 38
IS 7
BP 705
EP 734
DI 10.1002/spe.842
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 300IN
UT WOS:000255817600002
DA 2024-07-18
ER

PT J
AU Jordan, M
   Daynès, L
   Jarzab, M
   Bryce, C
   Czajkowski, G
AF Jordan, Mick
   Daynes, Laurent
   Jarzab, Marcin
   Bryce, Ciaran
   Czajkowski, Grzegorz
TI Scaling J2EE™ application servers with the multi-tasking virtual machine
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE application servers; middleware; resource management; virtual machines;
   Java (TM); J2EE (TM)
AB The Java (TM) 2 Platform, Enterprise Edition (J2EE (TM)) is established as the standard platform for hosting enterprise applications written in the Java programming language. Similar to an operating system, a J2EE server can host multiple applications, but this is problematic due to limitations on scalability, weak inter-application isolation and inadequate resource management facilities in the underlying Java platform. These limitations lead to a proliferation of server instances with a consequent dramatic increase in the total memory footprint and more complex system administration. The Multi-tasking Virtual Machine (MVM) solves this problem by providing an efficient and scalable implementation of the isolate API for multiple, isolated tasks, enabling the co-location of multiple server instances in a single MVM process. Isolates also enable the restructuring of a J2EE server implementation as a collection of isolated components, offering increased flexibility and reliability. The resulting system is a step towards a complete and scalable operating environment for enterprise applications. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Sun Microsyst Labs, Menlo Pk, CA 94025 USA.
   AGH Univ Sci & Technol, Dept Comp Sci, Krakow, Poland.
   Univ Geneva, Object Syst Grp, CH-1211 Geneva 4, Switzerland.
C3 AGH University of Krakow; University of Geneva
RP Jordan, M (corresponding author), Sun Microsyst Labs, 16 Network Circle, Menlo Pk, CA 94025 USA.
EM mick.jordan@sun.com
OI Bryce, Ciaran/0000-0001-5963-6829
CR *AP SOFTW FDN, 2004, AP HTTP SERV PROJ
   *AP SOFTW FDN, 2004, AP TOMC
   *AP SOFTW FDN, 2004, AP AV PROJ
   BORMAN S, 293406 IBM
   Czajkowski G, 2005, SOFTWARE PRACT EXPER, V35, P123, DOI 10.1002/spe.628
   CZAJKOWSKI G, 2002, LECT NOTES COMPUTER, V2374
   CZAJKOWSKI G, 2003, P USENIX ANN TECHN C
   CZAJKOWSKI G, 2001, P ACM OOPSLA 01 TAMP
   DAYNES L, 2005, LECT NOTES COMPUTER, V3586
   Dillenberger D, 2000, IBM SYST J, V39, P194, DOI 10.1147/sj.391.0194
   Fleury M, 2003, LECT NOTES COMPUT SC, V2672, P344
   JORDAN M, 2004, P ACM IFIP USENIX 5
   KUCK N, 2002, WORK IN PROGR SESS J
   LIANG S, 1998, P ACM OOPSLA 98 VANC
   Mauro J., 2001, Solaris Internals: Core Kernel Compo- nents
   PALACZ K, 2002, P ACM OOPSLA 02 SEAT
   Sun DX, 2001, AAPS PHARMSCI, V3
   *SUN MICR INC, SUN JAV SYST APPL SE
   *SUN MICR INC, 2004, JAV HOTSPOT TECHN
   *SUN MICR INC, 2005, JAV 2 PLATF ENT ED J
   *SUN MICR INC, JAV 2 PLATF ENT ED J
   Welsh Matt., 2001, SIGOPS OPER SYST REV, V35, P230
   2004, CLOUDSCAPE DATABASE
   2005, JAVA COMMUNITY PROCE
NR 24
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2006
VL 36
IS 6
BP 557
EP 580
DI 10.1002/spe.703
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 042QV
UT WOS:000237544800001
DA 2024-07-18
ER

PT J
AU Carr, S
   Sweany, P
AF Carr, S
   Sweany, P
TI An experimental evaluation of scalar replacement on scientific
   benchmarks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler optimization; scalar replacement; register allocation; software
   pipelining
AB This paper describes our experiments comparing multiple scalar replacement algorithms to evaluate their effectiveness on entire scientific application benchmarks within the context of a production-level compiler. We investigate at what point aggressive scalar replacement becomes detrimental and which dependence tests are necessary to give scalar replacement enough information to be effective. As many commercial optimizing compilers may include some version of scalar replacement as an optimization, it is important to determine how aggressive these algorithms need to be.
   Previously, no study has examined 'how much' scalar replacement is sufficient and effective within the context of an existing highly optimizing compiler. Our experiments show that, on whole programs, simple algorithms and simple dependence analysis capture nearly all opportunities for scalar replacement found in scientific application benchmarks. While additional aggressiveness may lead to some performance gain in some individual loops, it also leads to performance degradation too often to be worth the risk when considering entire applications. Algorithms restricted to value reuse over at most one loop iteration and to fully redundant array references give the best results.
   Our experiment further shows that scalar replacement is not only an effective optimization, but also a feasible one for commercial optimizers since the simple algorithms are not computationally expensive. Based upon our findings, we conclude that scalar replacement ought to be a part of any highly optimizing compiler because of its low cost and significant potential gain. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Michigan Technol Univ, Dept Comp Sci, Houghton, MI 49931 USA.
   Texas Instruments Inc, Dallas, TX 75266 USA.
C3 Michigan Technological University; Texas Instruments
RP Carr, S (corresponding author), Michigan Technol Univ, Dept Comp Sci, Houghton, MI 49931 USA.
EM carr@mtu.edu
OI Carr, Steven/0000-0002-8922-0805
CR ADVE V, 1995, P SUP 95 SAN DIEG CA
   ALLAN VH, 1995, ACM COMPUTING SURVEY, V27
   ALLEN R, 1987, ACM T PROGR LANG SYS, V9, P491, DOI 10.1145/29873.29875
   Banerjee U.K., 1988, Dependence Analysis for Supercomputing
   Bodík R, 1999, ACM SIGPLAN NOTICES, V34, P64, DOI 10.1145/301631.301643
   BODIK R, 1995, LECT NOTES COMPUTER, V1033
   CALLAHAN D, 1988, J PARALLEL DISTR COM, V5, P334, DOI 10.1016/0743-7315(88)90002-0
   CALLAHAN D, 1987, P 1 INT C SUP ATH GR
   CALLAHAN D, 1990, P ACM SIGPLAN 90 C P, P53
   CARR S, 1994, SOFTWARE PRACT EXPER, V24, P51, DOI 10.1002/spe.4380240104
   CHAITIN GJ, 1981, COMPUT LANG, V6, P47, DOI 10.1016/0096-0551(81)90048-5
   DING C, 1996, THESIS MICHIGAN TU
   DRECHSLER KH, 1988, ACM T PROGR LANG SYS, V10, P635, DOI 10.1145/48022.214509
   DUESTERWALD E, 1993, P ACM SIGPLAN 93 C P, P68
   Forsythe GE., 1977, Computer methods for mathematical computations
   GANNON D, 1987, P 1 INT C SUP SPRING
   GOFF G, 1991, SIGPLAN NOTICES, V26, P15, DOI 10.1145/113446.113448
   HUFF RA, 1993, P ACM SIGPLAN 93 C P, P258, DOI DOI 10.1145/155090.155115
   KUCK D, 1978, STRUCTRE COMPUTERS C, V1
   Lam M., 1988, P ACM SIGPLAN 1988 C, P318, DOI [10.1145/53990.54022, DOI 10.1145/53990.54022]
   LAMPORT L, 1974, COMMUN ACM, V17, P83, DOI 10.1145/360827.360844
   LI Z, 1989, P 1989 INT C SUP CRE
   MOREL E, 1979, COMMUNICATIONS ACM, V22
   Moshovos A, 1999, INT SYMP MICROARCH, P177, DOI 10.1109/MICRO.1999.809455
   PUGH W, 1992, P ACM SIGPLAN 92 C P, P140
   RA BR, 1994, P 27 ANN WORKS MICR
   WARTER NJ, 1993, P C PROGR LANG DES I, P290
   WARTER NJ, 1992, P 25 ANN INT S MICR, P170
   [No title captured], DOI [10.1145/155090.155099, DOI 10.1145/155090.155099]
NR 29
TC 4
Z9 4
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2003
VL 33
IS 15
BP 1419
EP 1445
DI 10.1002/spe.546
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 752MF
UT WOS:000187164100001
DA 2024-07-18
ER

PT J
AU Giegerich, R
   Kurtz, S
   Stoye, J
AF Giegerich, R
   Kurtz, S
   Stoye, J
TI Efficient implementation of lazy suffix trees
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE string matching; suffix tree; space-efficient implementation; lazy
   evaluation
ID CONSTRUCTION; TIME
AB We present an efficient implementation of a write-only top-down construction for suffix trees. Our implementation is based on a new, space-efficient representation of suffix trees that requires only 12 bytes per input character in the worst case, and 8.5 bytes per input character on average for a collection of files of different type. We show how to efficiently implement the lazy evaluation of suffix trees such that a subtree is evaluated only when it is traversed for the first time. Our experiments show that for the problem of searching many exact patterns in a fixed input string, the lazy top-down construction is often faster and more space efficient than other methods. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Bielefeld, AG Genominformat, Fac Technol, D-33594 Bielefeld, Germany.
   Univ Hamburg, Ctr Bioinformat, D-20146 Hamburg, Germany.
C3 University of Bielefeld; University of Hamburg
RP Univ Bielefeld, AG Genominformat, Fac Technol, D-33594 Bielefeld, Germany.
EM stoye@techfak.uni-bielefeld.de
RI Stoye, Jens/A-2709-2012
OI Stoye, Jens/0000-0002-4656-7155
CR Allauzen C, 1999, LECT NOTES COMPUT SC, V1725, P295
   ANDERSSON A, 1995, SOFTWARE PRACT EXPER, V25, P129, DOI 10.1002/spe.4380250203
   [Anonymous], 1973, 14 ANN S SWITCHING A, DOI [DOI 10.1109/SWAT.1973.13, 10.1109/SWAT.1973.13]
   [Anonymous], 1971, Theory of Machines and Computations, DOI DOI 10.1016/B978-0-12-417750-5.50022-1
   [Anonymous], 1997, ART COMPUTER PROGRAM
   [Anonymous], 1985, Combinatorial Algorithms on Words
   APOSTOLICO A, 1988, ALGORITHMICA, V3, P347, DOI 10.1007/BF01762122
   Clark DR, 1996, PROCEEDINGS OF THE SEVENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P383
   Colussi L, 1996, INFORM PROCESS LETT, V58, P217, DOI 10.1016/0020-0190(96)00061-0
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Dorohonceanu B, 2000, Proc Int Conf Intell Syst Mol Biol, V8, P128
   Farach M, 1997, ANN IEEE SYMP FOUND, P137, DOI 10.1109/SFCS.1997.646102
   Giegerich R, 1995, SCI COMPUT PROGRAM, V25, P187, DOI 10.1016/0167-6423(95)00003-8
   Giegerich R, 1997, ALGORITHMICA, V19, P331, DOI 10.1007/PL00009177
   Giegerich R, 1999, LECT NOTES COMPUT SC, V1668, P30
   Grossi R., 2000, Proceedings of the Thirty Second Annual ACM Symposium on Theory of Computing, P397, DOI 10.1145/335305.335351
   GUSFIELD D, 1990, CSE9039 U CAL
   Gusfield Dan, 1997, Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology, DOI DOI 10.1017/CBO9780511574931
   HORSPOOL RN, 1980, SOFTWARE PRACT EXPER, V10, P501, DOI 10.1002/spe.4380100608
   Hunt E., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P139
   IRVING RW, 2001, TR200182 U GLASG DEP
   Karkkainen J, 1995, LECT NOTES COMPUT SC, V937, P191
   Kurtz S, 2001, NUCLEIC ACIDS RES, V29, P4633, DOI 10.1093/nar/29.22.4633
   Kurtz S, 1999, SOFTWARE PRACT EXPER, V29, P1149, DOI 10.1002/(SICI)1097-024X(199911)29:13<1149::AID-SPE274>3.0.CO;2-O
   Lander ES, 2001, NATURE, V409, P860, DOI 10.1038/35057062
   MANBER U, 1993, SIAM J COMPUT, V22, P935, DOI 10.1137/0222058
   MARTINEZ HM, 1983, NUCLEIC ACIDS RES, V11, P4629, DOI 10.1093/nar/11.13.4629
   MCCREIGHT EM, 1976, J ACM, V23, P262, DOI 10.1145/321941.321946
   Munro JL, 2001, J ALGORITHMS, V39, P205, DOI 10.1006/jagm.2000.1151
   SKIENA SS, 1998, P 2 WORKSH ALG ENG W, P204
   UKKONEN E, 1995, ALGORITHMICA, V14, P249, DOI 10.1007/BF01206331
NR 31
TC 44
Z9 51
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2003
VL 33
IS 11
BP 1035
EP 1049
DI 10.1002/spe.535
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715LU
UT WOS:000184974300002
OA Green Published
DA 2024-07-18
ER

PT J
AU Koster, R
   Black, AP
   Huang, J
   Walpole, J
   Pu, C
AF Koster, R
   Black, AP
   Huang, J
   Walpole, J
   Pu, C
TI Thread transparency in information flow middleware
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE middleware; threads; multimedia; streaming
ID SYSTEM
AB Applications that process continuous information flows are challenging to write because the application programmer must deal with flow-specific concurrency and timing requirements, necessitating the explicit management of threads, synchronization, scheduling and timing. We believe that middleware can ease this burden,, but many middleware platforms do not match the structure of these applications, because they focus on control-flow centric interaction models such as remote method invocation. Indeed, they abstract away from the very things that the information-flow centric programmer must control.
   This paper describes Infopipes-a new high-level abstraction for information flow applications-and a middleware framework that supports them. Infopipes handle the complexities associated with control flow and multi-threading, relieving the programmer of these tasks. Starting from a high-level description of an information flow pipeline, the framework determines which parts of a pipeline require separate threads or coroutines, and handles synchronization transparently, to the application programmer. The framework, also gives the programmer the freedom to write or reuse components in a passive style, even though the configuration will actually require the use of a thread or coroutine. Conversely, it is possible to write a component using a thread and know that the thread will be eliminated if it is not needed in a pipeline. This allows the most appropriate programming model to be chosen for a-given task, and existing code to be reused, irrespective of its activity model. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Oregon Hlth & Sci Univ, OGI Sch Sci & Engn, Dept Comp Sci & Engn, Beaverton, OR 97006 USA.
   Univ Kaiserslautern, Fachbereich Informat, D-67653 Kaiserslautern, Germany.
   Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
C3 Oregon Health & Science University; University of Kaiserslautern;
   University System of Georgia; Georgia Institute of Technology
RP Oregon Hlth & Sci Univ, OGI Sch Sci & Engn, Dept Comp Sci & Engn, 20000 NW Walker Rd, Beaverton, OR 97006 USA.
EM walpole@cse.ogi.edu
OI Black, Andrew/0000-0003-0014-6483
CR Blair G. S., 2000, IEE Proceedings-Software, V147, P13, DOI 10.1049/ip-sen:20000327
   DeLine R, 2001, IEEE T SOFTWARE ENG, V27, P124, DOI 10.1109/32.908958
   HUTCHINSON NC, 1991, IEEE T SOFTWARE ENG, V17, P64, DOI 10.1109/32.67579
   Kohler E, 2000, ACM T COMPUT SYST, V18, P263, DOI 10.1145/354871.354874
   Lindblad CJ, 1996, IEEE J SEL AREA COMM, V14, P1298, DOI 10.1109/49.536481
   Magee J., 1994, Distributed Systems Engineering, V1, P304, DOI 10.1088/0967-1846/1/5/005
   Pu C, 2001, SIGMOD RECORD, V30, P25, DOI 10.1145/373626.373680
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 13
TC 2
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2003
VL 33
IS 4
BP 321
EP 349
DI 10.1002/spe.510
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 660QF
UT WOS:000181843300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Luk, RWP
   T'sou, BKY
   Lai, TBY
   Kwong, OOY
   Chik, FCY
   Cheung, LYL
AF Luk, RWP
   T'sou, BKY
   Lai, TBY
   Kwong, OOY
   Chik, FCY
   Cheung, LYL
TI Bilingual legal document retrieval and management using XML
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE legal information retrieval; multilingual computing; XML; XSL
AB In certain bilingual and multi-lingual societies, translated legal documents are as important as the original legal documents because they have the same legal status as the originals. However, there is little reported work on the retrieval and management of bilingual legal documents. We describe the design and development of a bilingual document retrieval and management prototype, called ELDoS, which is used by court interpreters and judges from the Hong Kong Judiciary. Since the speed of retrieval is a major concern for user acceptance, and therefore for widespread deployment of the system, the architecture of the prototype is designed to balance the workload of the client and server. Extensible Markup Language (XML) is used to mark up the bilingual legal documents for a variety of document retrieval and management tasks. XML enables the use of XML Stylesheet Language Transformation (XSLT) to align bilingual data in the client, instead of the server, and improve alignment speed linearly with respect to the size of the document, using a high-end PC, when the server has no concurrent access. The design of the interface was continually improved after extensive consultation with court interpreters and after the user acceptance tests. In our evaluation, the facilities for highlighting translated terms have a macro-averaged precision of 90+ % and a macro-average recall of 80+ %, which were considered acceptable by our users. We believe that the experience in the design and development of this prototype is applicable to other language pairs as well as to other domains. Copyright (C) 2002 John Wiley Sons, Ltd.
C1 Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
   City Univ Hong Kong, Language Informat Sci Res Ctr, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University; City University of Hong Kong
RP Luk, RWP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
RI Luk, Robert/B-9382-2015
OI Luk, Robert/0000-0002-9310-8867
CR [Anonymous], P 15 C COMP LING KYO
   CALLAN JP, 1992, P 3 INT C DAT EXP SY, P78
   CAMMELLI A, 1999, LECT NOTES COMPUTER, V1677, P793
   CAMMELLI A, 1998, LECT NOTES COMPUTER, V1460, P619
   Daniels J., 1997, P 6 INT C LAW ICAIL, P39
   DANIELS JJ, 1997, P DEXA WORKSH 97 LEG, P206
   Debnath S, 2000, IEEE INTERNET COMPUT, V4, P32, DOI 10.1109/4236.895013
   DIGIORGI R, 1994, HYPERTEXT HYPERMEDIA
   Elhadi M. T., 1999, Proceedings. Tenth International Workshop on Database and Expert Systems Applications. DEXA 99, P769, DOI 10.1109/DEXA.1999.795281
   Ellis SD, 1997, QUAL LIFE RES, V6, P97
   GHOSHROY R, 1995, IEE C DOC IM PROC MU
   JUKES E, 1995, IEE C CAS BAS REAS P
   MacLeod D, 1996, DATABASE, V19, P50
   OSHEA PJ, 1997, LECT NOTES COMPUTER, V1308, P227
   Pepijn, 1995, KNOWLEDGE SPECIFICAT
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   SCHWEIGHOFER E, 2000, LECT NOTES COMPUTER, V1873, P1087
   SCHWEIGHOFER W, 1998, P C LAW INF SOC FLOR
   SMITH NHP, 1996, RODDS CHEM D-F, V3, P1
   Turtle H., 1995, Artificial Intelligence and Law, V3, P5, DOI 10.1007/BF00877694
   VALENTIE A, 1995, FRONTIERS ARTIFICIAL, V30
   van Kralingen R. W., 1995, COMPUTER LAW SERIES, V16
   VISSER PRS, 1997, P 1 INT WORKSH LEG O
   *W3C, 1999, EXT MARK LANG
   W3C, 1999, XML PATH LANG
   WAGNER D, 1996, ARIZONA PUBLIC  0825, P1
NR 26
TC 1
Z9 2
U1 0
U2 7
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2003
VL 33
IS 1
BP 41
EP 59
DI 10.1002/spe.494
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 631QE
UT WOS:000180177800003
DA 2024-07-18
ER

PT J
AU Andrade, L
   De Santana, CJL
   Alencar, BD
   Silva, CJ
   Prazeres, C
AF Andrade, Leandro
   De Santana, Cleber Jorge Lira
   Alencar, Brenno De Mello
   Silva, Claudio, Jr.
   Prazeres, Cassio
TI Data interplay: A model to optimize data usage in the Internet of Things
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fog computing; Internet of Things; IoT data; performance efficiency
ID IOT; FOG; LIGHTWEIGHT; SYSTEM; EDGE
AB The Internet of Things (IoT) has been playing an important role in the technology scenario due to its high potential and impact on different society segments. Estimates suggest a trend for an increase in the number of IoT devices connected to the Internet for the next few years. Hence, the volume of data produced by IoT devices will follow this growth perspective, and there will be a demand for systems that can process, store, and promote access to large amounts of data. The data collected from sensors in typical IoT systems is stored and processed in cloud servers. However, some IoT solutions use edge devices to perform specific actions, such as processing, storage, and access, using only local infrastructure for low latency requirements. Fog computing has been used to improve IoT solutions and to transfer some of the complexity from the cloud to the edge of the network, that is, closer to devices, applications and users, working as a kind of "local and private cloud. " The cooperation of devices and applications between edge and cloud creates a need for an interplay to enable data flow among the layers of IoT systems deployed on edge and in the cloud. Thus, IoT data systems should support the data life cycle through its collection, analysis, and use. Performance efficiency is a quality factor of systems and software engineering, which measures "performance relative to the number of resources used under stated conditions. " In particular, in IoT systems that involve a large volume of data, the performance efficiency of data interplay is a relevant requirement. This work proposes a data interplay model of IoT to define and deploy the IoT data life cycle in the collection, analytics, and data use stages. This data interplay proposal aims to improve performance efficiency in IoT data life cycle operations: collection, analytics, and use among devices and applications in edge and cloud infrastructures.
C1 [Andrade, Leandro] Univ Fed Bahia, Sch Management, Salvador, BA, Brazil.
   [De Santana, Cleber Jorge Lira] Fed Inst Bahia, Salvador, BA, Brazil.
   [Alencar, Brenno De Mello; Silva, Claudio, Jr.; Prazeres, Cassio] Univ Fed Bahia, Inst Comp, Salvador, BA, Brazil.
C3 Universidade Federal da Bahia; Instituto Federal da Bahia (IFBA);
   Universidade Federal da Bahia
RP Prazeres, C (corresponding author), Univ Fed Bahia, Inst Comp, Salvador, BA, Brazil.
EM prazeres@ufba.br
OI Prazeres, Cassio/0000-0003-0197-0909; lira de santana, cleber
   jorge/0000-0002-6089-4187
FU FAPESB; CAPES; CNPq
FX ACKNOWLEDGMENTS The authors would like to thank: FAPESB, CAPES, and CNPq
   organizations for supporting the Graduate Program in Computer Science at
   the Federal University of Bahia.
CR Abbasi MA., 2017, INT J ADV COMPUT SC, V8
   Abdelshkour M., 2019, IOT CLOUD FOG COMPUT
   Akrivopoulos O, 2018, IEEE ICC
   Andrade L, 2018, IEEE ICC
   [Anonymous], 2018, 1547 IEEE, P1
   [Anonymous], 2018, Ericsson Mobility Report November 2018
   Asghari P, 2019, COMPUT NETW, V148, P241, DOI 10.1016/j.comnet.2018.12.008
   Barnaghi, 2015, DIGITAL TECHNOLOGY A
   Batista E, 2018, 2018 IEEE 17TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA)
   Bilal K, 2018, COMPUT NETW, V130, P94, DOI 10.1016/j.comnet.2017.10.002
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Bu FY, 2019, FUTURE GENER COMP SY, V99, P500, DOI 10.1016/j.future.2019.04.041
   Byers CharlesC., 2015, Ubiquity, V2015, P4
   Cao W, 2010, IEEE INT C SOL DIEL
   Chen F, 2015, INT J DISTRIB SENS N, DOI 10.1155/2015/431047
   Chen M, 2014, MOBILE NETW APPL, V19, P171, DOI 10.1007/s11036-013-0489-0
   Du XX, 2020, J CLOUD COMPUT-ADV S, V9, DOI 10.1186/s13677-020-00166-x
   El-Sayed H, 2018, IEEE ACCESS, V6, P1706, DOI 10.1109/ACCESS.2017.2780087
   Estdale J., 2018, P EUR C SOFTW PROC I
   Fowler M, 2018, MICROSERVICES GUIDE
   Guerrero C, 2019, J AMB INTEL HUM COMP, V10, P2447, DOI 10.1007/s12652-018-0914-0
   Huang XM, 2020, COMPUT COMMUN, V150, P421, DOI 10.1016/j.comcom.2019.12.011
   Jan MA, 2021, FUTURE GENER COMP SY, V122, P40, DOI 10.1016/j.future.2021.03.020
   de Santana CJL, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1243, DOI 10.1145/3297280.3297402
   Lyu Y, 2020, COMPUT COMMUN, V150, P757, DOI 10.1016/j.comcom.2019.11.054
   Madureira ALR, 2020, COMPUT NETW, V177, DOI 10.1016/j.comnet.2020.107330
   Mishra N., 2014, 2014 IEEE INT C COMM
   Nguyen TDT, 2021, IEEE INTERNET THINGS, V8, P1687, DOI 10.1109/JIOT.2020.3015534
   Oteafy SMA, 2018, IEEE COMMUN MAG, V56, P157, DOI 10.1109/MCOM.2018.1700299
   Pierce FJ, 1999, ADV AGRON, V67, P1, DOI 10.1016/S0065-2113(08)60513-1
   Prazeres C., 2017, DESIGN IMPLEMENTATIO, P1814
   Prazeres C, 2016, IEEE 30TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA 2016), P803, DOI 10.1109/WAINA.2016.153
   Ribeiro FM, 2022, BIOSYST ENG, V223, P142, DOI 10.1016/j.biosystemseng.2021.12.021
   Sajedi SN, 2022, J SUPERCOMPUT, V78, P1030, DOI 10.1007/s11227-021-03890-6
   Sarwar K, 2021, FUTURE GENER COMP SY, V119, P188, DOI 10.1016/j.future.2021.02.013
   Sushanth G, 2018, 2018 INTERNATIONAL CONFERENCE ON WIRELESS COMMUNICATIONS, SIGNAL PROCESSING AND NETWORKING (WISPNET)
   Taherkordi A., 2017, Proceedings of the Symposium on Applied Computing, P485
   Younan M, 2021, IEEE INTERNET THINGS, V8, P5953, DOI 10.1109/JIOT.2020.3035248
   Zaydi, 2021, P 2021 INT C EL COMP
NR 40
TC 4
Z9 4
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2023
VL 53
IS 6
BP 1410
EP 1437
DI 10.1002/spe.3193
EA FEB 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E8MO0
UT WOS:000938253400001
OA Bronze
DA 2024-07-18
ER

PT J
AU Li, H
   Qu, Y
   Liu, Y
   Chen, R
   Ai, J
   Guo, SK
AF Li, Hui
   Qu, Yang
   Liu, Yong
   Chen, Rong
   Ai, Jun
   Guo, Shikai
TI Self-admitted technical debt detection by learning its comprehensive
   semantics via graph neural networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cross project prediction; graph neural network; self-admitted technical
   debt
ID IDENTIFICATION
AB The goal of software development is to deliver software products with high quality and free from defects, but resource and time constraints often cause the developers to submit incomplete or temporary patches of codes and further bear the additional burden. Therefore, the investigations on identifying self-admitted technical debt (SATD) to improve code quality have been conducted in recent years. However, missing syntactic structure information and the imbalance distribution bias shorten the SATD identification performance. Addressing to this issue, we present a graph neural network based SATD identification model (GNNSI) to improve the performance. Specifically, we obtain the structure information of the missing SATD in a compositional way to obtain different feature maps for different comments, and use focal loss to handle the imbalance between SATD and non-SATD classes in the comments. Then extensive experiments on 10 open source projects are conducted, and the results show that GNNSI outperforms the baselines and can help developers to better predict SATDs.
C1 [Li, Hui; Qu, Yang; Liu, Yong; Chen, Rong; Guo, Shikai] Dalian Maritime Univ, Coll Informat Sci & Technol, Dalian 116026, Peoples R China.
   [Ai, Jun] Univ Shanghai Sci & Technol, Sch Opt Elect & Comp Engn, Shanghai, Peoples R China.
C3 Dalian Maritime University; University of Shanghai for Science &
   Technology
RP Guo, SK (corresponding author), Dalian Maritime Univ, Coll Informat Sci & Technol, Dalian 116026, Peoples R China.
EM shikai.guo@dlmu.edu.cn
OI qu, yang/0000-0001-7909-4107
FU China Postdoctoral Science Foundation [2020M670736]; Fundamental
   Research Funds for the Central Universities [3132019355]; Natural
   Science Foundation of Liaoning Province [2021-MS-136]; National Natural
   Science Foundation of China [61902050, 1672122, 61602077]
FX The fellowship of China Postdoctoral Science Foundation, Grant/Award
   Number: 2020M670736; The Fundamental Research Funds for the Central
   Universities, Grant/Award Number: 3132019355; Natural Science Foundation
   of Liaoning Province, Grant/Award Number: 2021-MS-136; The National
   Natural Science Foundation of China, Grant/Award Numbers: 61902050,
   1672122, 61602077
CR Ali K, 2012, LECT NOTES COMPUT SC, V7313, P688, DOI 10.1007/978-3-642-31057-7_30
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Becker C, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P85, DOI 10.1145/3194164.3194171
   Blanco R, 2012, INFORM RETRIEVAL, V15, P54, DOI 10.1007/s10791-011-9172-x
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Cunningham W., 1993, OOPS Messenger, V4, P29
   dSCB S., 2010, J BRAZ COMPUT SOC, V12, P31
   Eisenberg R., 2012, ACM SIGSOFT SOFTW EN, V37, P36
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Freitas JL, 2012, IEEE ANNU SOFTW ENG, P11, DOI 10.1109/SEW.2012.8
   Graf J, 2010, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2010.9
   Guo Y., 2011, 2 WORKSH MAN TECHN D, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   Kim Y, 2014, IEEE ASME INT C ADV, P1747, DOI 10.1109/AIM.2014.6878336
   Kucharik M, 2012, J COMPUT PHYS, V231, P2851, DOI 10.1016/j.jcp.2011.12.033
   Li BY, 2019, AAAI CONF ARTIF INTE, P8577
   Li XY, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P465, DOI 10.1007/978-981-15-3863-6_51
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Lin TY, 2020, IEEE T PATTERN ANAL, V42, P318, DOI 10.1109/TPAMI.2018.2858826
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Mihalcea, 2004, P EMNLP, P401, DOI DOI 10.3115/1219044.1219064
   Mikolov T, 2013, P WORKSHOP ICLR 2013
   Mong Li Loo, 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P290
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Pan WF, 2021, INT J WEB SERV RES, V18, P34, DOI 10.4018/IJWSR.2021010103
   Pan WF, 2021, IEEE T SOFTWARE ENG, V47, P2272, DOI 10.1109/TSE.2019.2946357
   Perner P., 2016, LECT NOTES COMPUT SC
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Qu Y., GNN IMBALANCE TD MOD
   Rong X., WORD2VEC PARAMETER L
   Rousseau F, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1702
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   sei, 2016, THE FUTURE OF MANAGI
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang AQ, 2016, INT CONF GEOINFORM
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Yao L, 2019, AAAI CONF ARTIF INTE, P7370
   Yu DJ, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9281-z
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zhang YF, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P334
NR 53
TC 1
Z9 1
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2152
EP 2176
DI 10.1002/spe.3117
EA JUN 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000817136800001
DA 2024-07-18
ER

PT J
AU Yu, S
   Zhang, LC
   Li, P
   Li, LX
   Yan, B
   Cai, ZP
AF Yu, Sui
   Zhang, Lichen
   Li, Peng
   Li, Lixia
   Yan, Bin
   Cai, Zhipeng
TI Efficient interest-aware data dissemination in mobile opportunistic
   networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data dissemination; interest-aware; mobile opportunistic networks
ID PUBLISH-SUBSCRIBE
AB In mobile opportunistic networks, the high mobility of humans and the resource limitation of smart mobile devices pose a great challenge to the design of efficient data dissemination, in which data packets generated from publishers need to be delivered to the subscribers via opportunistic encounters. The current data dissemination schemes generally concentrate on the similarity among nodes while ignoring the similarity between nodes and data packets, which leads to that data packets move back and forth among the nodes with similar social features instead of reaching to the subscribers efficiently. In this paper, an efficient interest-aware data dissemination approach is proposed in mobile opportunistic networks, in which the similarity between nodes and data packets is used to determine whether a node is a potential destination. Moreover, both the social feature and the residual energy are considered to choose an appropriate relay node, and then determine the number of packet's replicas. The simulation results show that efficient interest-aware data dissemination provides high efficiency and less transmission overheads compared with the traditional approaches.
C1 [Yu, Sui; Zhang, Lichen; Li, Peng] Minist Educ, Key Lab Modern Teaching Technol, Xian, Peoples R China.
   [Yu, Sui; Zhang, Lichen; Li, Peng] Engn Lab Teaching Informat Technol Shaanxi Prov, Xian, Peoples R China.
   [Yu, Sui; Zhang, Lichen; Li, Peng; Li, Lixia; Yan, Bin] Shaanxi Normal Univ, Sch Comp Sci, Xian 710119, Peoples R China.
   [Cai, Zhipeng] Georgia State Univ, Dept Comp Sci, Atlanta, GA 30303 USA.
C3 Shaanxi Normal University; University System of Georgia; Georgia State
   University
RP Zhang, LC; Li, P (corresponding author), Shaanxi Normal Univ, Sch Comp Sci, Xian 710119, Peoples R China.
EM zhanglichen@snnu.edu.cn; lipeng@snnu.edu.cn
RI Cai, Zhipeng/AAA-7659-2021; peng, li/GQH-5153-2022
OI Zhang, Lichen/0000-0002-6711-0533
FU National Key R&D Program of China [2017YFB1402102]; National Natural
   Science Foundation of China [61877037]; Fundamental Research Funds for
   the Central Universities of China [GK201903090, GK201801004, IIKI 2018]
FX This work was sponsored in part by the National Key R&D Program of China
   under grant 2017YFB1402102, the National Natural Science Foundation of
   China under grant 61877037, and the Fundamental Research Funds for the
   Central Universities of China under grants GK201903090 and GK201801004.
   An earlier version of the paper was presented in the International
   Conference on Identification, Information, and Knowledge in the Internet
   of Things (IIKI 2018).<SUP>33</SUP>
CR [Anonymous], 2000, HDB SYSTEMIC AUTOIMM
   [Anonymous], 2017, Wiley Online Libr. Trans. Emerg. Telecommun. Technol.
   Boldrini C, 2008, ACM S MODEL ANAL SIM, P203
   Cai Z., 2019, IEEE T NETW SCI ENG
   Cai Z., 2016, P 35 ANN IEEE INT C
   Cai ZP, 2018, IEEE T DEPEND SECURE, V15, P577, DOI 10.1109/TDSC.2016.2613521
   Chakchouk N, 2015, IEEE COMMUN SURV TUT, V17, P2214, DOI 10.1109/COMST.2015.2411335
   Ciobanu RI, 2015, AD HOC NETW, V25, P330, DOI 10.1016/j.adhoc.2014.07.004
   Costa P, 2008, IEEE J SEL AREA COMM, V26, P748, DOI 10.1109/JSAC.2008.080602
   Fall K, 2003, ACM SIGCOMM COMP COM, V33, P27
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Gao W., 2011, P 30 IEEE INT C COMP
   Jaho E., 2009, P 2009 6 INT C WIR O
   Keranen A., 2009, P 2 INT C SIM TOOLS, P1, DOI 10.4108/ICST.SIMUTOOLS2009.5674
   Lin KC-J., 2012, P 31 IEEE INT C COMP
   Lindgren A., 2003, Probabilistic routing in intermittently connected networks, V7, P19, DOI DOI 10.1145/961268.961272
   Liu M., 2017, P 2017 IEEE GLOB COM
   Lo SC., 2012, P 15 INT S WIR PERS
   Mashhadi A., 2009, P 10 IEEE INT S WORL
   McPherson M, 2001, ANNU REV SOCIOL, V27, P415, DOI 10.1146/annurev.soc.27.1.415
   Patel JA, 2009, COMPUT NETW, V53, P2304, DOI 10.1016/j.comnet.2009.03.018
   Pelusi L, 2006, IEEE COMMUN MAG, V44, P134, DOI 10.1109/MCOM.2006.248176
   Sati S., 2016, PROC INT C COMPUT CO, P1
   Scott J., 2006, CRAWDAD data set cambridge/haggle (v. 20060915)
   Sharma DK., 2016, P 1 INDIA INT C INFO
   Spyropoulos T., 2005, ACM SIGCOMM WORKSH D, P252
   Thilakarathna K., 2012, POWER HOOD FRIENDSHI
   Thilakarathna K., 2013, P 14 ACM INT S MOB A
   Wu J., 2012, P 31 IEEE INT C COMP
   Yu S, 2019, PROCEDIA COMPUT SCI, V147, P394, DOI 10.1016/j.procs.2019.01.255
   Zhang LC, 2015, PERS UBIQUIT COMPUT, V19, P1111, DOI 10.1007/s00779-015-0880-x
   Zheng X., 2019, IEEE T NETW SCI ENG
NR 32
TC 1
Z9 1
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 917
EP 928
DI 10.1002/spe.2757
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000765529900008
DA 2024-07-18
ER

PT J
AU Gill, SS
   Kumar, A
   Singh, H
   Singh, M
   Kaur, K
   Usman, M
   Buyya, R
AF Gill, Sukhpal Singh
   Kumar, Adarsh
   Singh, Harvinder
   Singh, Manmeet
   Kaur, Kamalpreet
   Usman, Muhammad
   Buyya, Rajkumar
TI Quantum computing: A taxonomy, systematic review and future directions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE conceptual model; future directions; methodical analysis; quantum
   computing; qubits; research challenges; taxonomy
ID KEY DISTRIBUTION; PROGRAMMING-LANGUAGES; PHYSICAL SYNTHESIS;
   ELECTRON-SPIN; CRYPTOGRAPHY; CHALLENGES; ALGORITHM; SILICON; QUBIT;
   SECURITY
AB Quantum computing (QC) is an emerging paradigm with the potential to offer significant computational advantage over conventional classical computing by exploiting quantum-mechanical principles such as entanglement and superposition. It is anticipated that this computational advantage of QC will help to solve many complex and computationally intractable problems in several application domains such as drug design, data science, clean energy, finance, industrial chemical development, secure communications, and quantum chemistry. In recent years, tremendous progress in both quantum hardware development and quantum software/algorithm has brought QC much closer to reality. Indeed, the demonstration of quantum supremacy marks a significant milestone in the Noisy Intermediate Scale Quantum (NISQ) era-the next logical step being the quantum advantage whereby quantum computers solve a real-world problem much more efficiently than classical computing. As the quantum devices are expected to steadily scale up in the next few years, quantum decoherence and qubit interconnectivity are two of the major challenges to achieve quantum advantage in the NISQ era. QC is a highly topical and fast-moving field of research with significant ongoing progress in all facets. A systematic review of the existing literature on QC will be invaluable to understand the state-of-the-art of this emerging field and identify open challenges for the QC community to address in the coming years. This article presents a comprehensive review of QC literature and proposes taxonomy of QC. The proposed taxonomy is used to map various related studies to identify the research gaps. A detailed overview of quantum software tools and technologies, post-quantum cryptography, and quantum computer hardware development captures the current state-of-the-art in the respective areas. The article identifies and highlights various open challenges and promising future directions for research and innovation in QC.
C1 [Gill, Sukhpal Singh] Queen Mary Univ London, Sch Elect Engn & Comp Sci, London, England.
   [Kumar, Adarsh] Univ Petr & Energy Studies, Sch Comp Sci, Dept System, Dehra Dun 248007, Uttarakhand, India.
   [Singh, Harvinder] Univ Petr & Energy Studies, Sch Comp Sci, Dept Virtualizat, Dehra Dun, Uttarakhand, India.
   [Singh, Manmeet] Univ Texas Austin, Jackson Sch Geosci, Austin, TX USA.
   [Singh, Manmeet] Indian Inst Trop Meteorol IITM, Ctr Climate Change Res, Pune, Maharashtra, India.
   [Kaur, Kamalpreet] Seneca, Seneca Int Acad, Toronto, ON, Canada.
   [Usman, Muhammad] Univ Melbourne, Sch Comp & Informat Syst, Parkville, Vic, Australia.
   [Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Parkville, Vic, Australia.
C3 University of London; Queen Mary University London; University of
   Petroleum & Energy Studies (UPES); University of Petroleum & Energy
   Studies (UPES); University of Texas System; University of Texas Austin;
   Ministry of Earth Sciences (MoES) - India; Indian Institute of Tropical
   Meteorology (IITM); Centre for Climate Change Research - India;
   University of Melbourne; University of Melbourne
RP Kumar, A (corresponding author), Univ Petr & Energy Studies, Sch Comp Sci, Dept System, Dehra Dun 248007, Uttarakhand, India.
EM adarsh.kumar@ddn.upes.ac.in
RI Usman, Muhammad/C-1557-2012; Singh, Manmeet/AAU-9678-2021; Singh,
   Manmeet/GRY-0132-2022; Kumar, Adarsh/HZH-9480-2023; Kumar,
   Adarsh/AAT-5018-2020; Gill, Sukhpal Singh/J-5930-2014; Buyya,
   Rajkumar/C-3424-2009
OI Singh, Manmeet/0000-0002-3374-7149; Singh, Manmeet/0000-0002-3374-7149;
   Kumar, Adarsh/0000-0003-2919-6302; Gill, Sukhpal
   Singh/0000-0002-3913-0369; Buyya, Rajkumar/0000-0001-9754-6496; Usman,
   Muhammad/0000-0003-3476-2348
CR Aaronson S., 2003, SIMULATION SYNTHESIS
   Abura'ed N, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3009965
   Ajagekar A, 2019, ENERGY, V179, P76, DOI 10.1016/j.energy.2019.04.186
   Ajtai M., 1996, Proceedings of the Twenty-Eighth Annual ACM Symposium on the Theory of Computing, P99, DOI 10.1145/237814.237838
   Akleylek S, 2020, IEEE ACCESS, V8, P26210, DOI 10.1109/ACCESS.2020.2970537
   Alagic G., 2019, Status report on the first round of the nist post-quantumcryptography standardization process
   Alhussein M, 2019, JPN J APPL PHYS, V58, DOI 10.7567/1347-4065/ab42c7
   Almudever CG, 2017, DES AUT TEST EUROPE, P836, DOI 10.23919/DATE.2017.7927104
   Altenkirch T., 2010, SEMANTIC TECHNIQUES, P173, DOI 10.1017/CBO9781139193313.006
   Amy M, 2020, QUANTUM SCI TECHNOL, V5, DOI 10.1088/2058-9565/ab9359
   Anand Sahu R., 2019, IACR CRYPTOL EPRINT, V1498
   Anderlini M, 2007, NATURE, V448, P452, DOI 10.1038/nature06011
   [Anonymous], 2013, IACR CRYPTOL EPRINT
   [Anonymous], 2016, ARXIV160609225
   [Anonymous], 2012, Quantum computing and the entanglement frontier
   [Anonymous], 2006, THESIS
   [Anonymous], 2014, ARXIV14124704
   Ayanzadeh R, 2021, SCI REP-UK, V11, DOI 10.1038/s41598-021-95482-w
   Ayanzadeh R, 2020, SCI REP-UK, V10, DOI 10.1038/s41598-020-64078-1
   Azuma H., 2019, ARXIV191200196
   Bai S., 2020, P IACR INT C PUBL KE, P66
   Ball P., 2016, NATURE NEWS
   Banerjee U., 2019, IACR Transactions on Cryptographic Hardware and Embedded Systems, P17
   Bardet M., 2020, P ANN INT C THEOR AP, P64
   Barz S, 2012, SCIENCE, V335, P303, DOI 10.1126/science.1214707
   Bassoli R, 2021, QUANTUM COMMUNICATIO, V23, DOI 10.1007/978-3- 030-62938-0_6
   Beals TR., 2008, QUANTUM COMMUNICATIO
   BENNETT CH, 1992, PHYS REV LETT, V68, P3121, DOI 10.1103/PhysRevLett.68.3121
   BENNETT CH, 1992, SCI AM, V267, P50, DOI 10.1038/scientificamerican1092-50
   Bennett CH, 2014, THEOR COMPUT SCI, V560, P7, DOI 10.1016/j.tcs.2014.05.025
   Bernhardt C., 2019, Quantum Computing for Everyone
   Bernstein DJ, 2017, LECT NOTES COMPUT SC, V10346, P311, DOI 10.1007/978-3-319-59879-6_18
   Bernstein DJ, 2017, NATURE, V549, P188, DOI 10.1038/nature23461
   Bernstein Daniel J., 2009, Post-quantum cryptography, P1, DOI [10.1007/978-3-540-88702-71, 10.1007/978-3-540-88702-7, DOI 10.1007/978-3-540-88702-71, DOI 10.1007/978-3-540-88702-7, 10.1007/978-3-540-88702-7_1, DOI 10.1007/978-3-540-88702-7_1]
   Bernstein E, 1997, SIAM J COMPUT, V26, P1411, DOI 10.1137/S0097539796300921
   Bertoni A, 2000, PHYS REV LETT, V84, P5912, DOI 10.1103/PhysRevLett.84.5912
   Beullens W, 2019, LECT NOTES COMPUT SC, V11921, P227, DOI 10.1007/978-3-030-34578-5_9
   Bhusal N., 2020, ARXIV200607760
   Brandhorst-Satzkorn J., 2012, A Review of Freely Available Quantum Computer Simulation Software
   Brassard G, 1998, LECT NOTES COMPUT SC, V1443, P820, DOI 10.1007/BFb0055105
   Brassard G, 2000, PHYS REV LETT, V85, P1330, DOI 10.1103/PhysRevLett.85.1330
   Bravyi S, 2018, SCIENCE, V362, P308, DOI 10.1126/science.aar3106
   Bremner MJ, 2017, QUANTUM-AUSTRIA, V1, DOI 10.22331/q-2017-04-25-8
   Bruss D, 2007, ACM COMPUT SURV, V39, DOI 10.1145/1242471.1242474
   Bugge AN, 2014, PHYS REV LETT, V112, DOI 10.1103/PhysRevLett.112.070503
   Buhrman H, 2003, LECT NOTES COMPUT SC, V2747, P1
   Buyya R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241737
   Cacciapuoti AS, 2020, IEEE NETWORK, V34, P137, DOI 10.1109/MNET.001.1900092
   Caleffi M, 2018, ACM NANOCOM 2018: 5TH ACM INTERNATIONAL CONFERENCE ON NANOSCALE COMPUTING AND COMMUNICATION, DOI 10.1145/3233188.3233224
   Campagna M, HYBRID POST QUANTUM
   Caraiman S, 2009, INT SYMP SYMB NUMERI, P189, DOI 10.1109/SYNASC.2009.57
   Cartor R., 2019, STUDY BIG FIELD MULT
   Castryck W., 2019, ARXIV190306451
   Cayrel P.-L., 2021, EUROCRYPT 2021, V12697, P438, DOI [10.1007/978-3-030-77886-615, DOI 10.1007/978-3-030-77886-615]
   Chau HF, 2020, NEW J PHYS, V22, DOI 10.1088/1367-2630/ab6afa
   Chau HF, 2019, QUANTUM INF PROCESS, V18, DOI 10.1007/s11128-019-2263-0
   Chii Chang, 2017, ACM Computing Surveys, V49, DOI 10.1145/3012000
   Chong FT, 2017, NATURE, V549, P180, DOI 10.1038/nature23459
   Cohen Alejandro, 2021, IEEE Journal on Selected Areas in Information Theory, V2, P49, DOI 10.1109/JSAIT.2021.3054598
   Collins RJ, 2016, OPT LETT, V41, P4883, DOI 10.1364/OL.41.004883
   Compagno E, 2015, PHYS REV A, V92, DOI 10.1103/PhysRevA.92.022701
   Cong I, 2019, NAT PHYS, V15, P1273, DOI 10.1038/s41567-019-0648-8
   Conrad A., 2019, P APS DIV AT MOL OPT, V2019
   Corcoles AD, 2019, ARXIV191002894
   Cortese J. A., 2018, ARXIV PREPRINT ARXIV
   Couvreur A., 2020, ARXIV PREPRINT ARXIV
   Crockett E., 2019, Cryptology ePrint Archive, Report 2019/858, P1
   Cross A., 2018, APS, V2018
   da Silva Feitosa Samuel, 2016, COMMUNICATIONS INNOV, V1, P26
   de Albornoz ACC, 2019, PHYS REV A, V100, DOI 10.1103/PhysRevA.100.032329
   Dennis E, 2002, J MATH PHYS, V43, P4452, DOI 10.1063/1.1499754
   DEUTSCH D, 1992, P ROY SOC LOND A MAT, V439, P553, DOI 10.1098/rspa.1992.0167
   Deutsch D, 1996, PHYS REV LETT, V77, P2818, DOI 10.1103/PhysRevLett.77.2818
   Devitt SJ, 2016, LECT NOTES PHYS, V911, P407, DOI 10.1007/978-4-431-55756-2_19
   Devitt SJ, 2016, PHYS REV A, V94, DOI 10.1103/PhysRevA.94.032329
   Devitt SJ, 2014, LECT NOTES COMPUT SC, V8507, P26, DOI 10.1007/978-3-319-08494-7_3
   Devitt SJ, 2013, REP PROG PHYS, V76, DOI 10.1088/0034-4885/76/7/076001
   Ding J., 2009, Multivariate public-key cryptography, DOI [10.1007/978-3-540-88702-7_6, DOI 10.1007/978-3-540-88702-7_6]
   Dixit V, 2022, IEEE TETCI, V6, P417, DOI 10.1109/TETCI.2021.3074916
   Doliskani Javad, 2017, IACR CRYPTOLOGY EPRI, V2017, P1202
   Doron D, 2020, ANN IEEE SYMP FOUND, P1057, DOI 10.1109/FOCS46700.2020.00102
   Durak K., 2020, ARXIV200414445
   EKERT AK, 1991, PHYS REV LETT, V67, P661, DOI 10.1103/PhysRevLett.67.661
   El Kassem N., 2020, THESIS U SURREY
   Elboukhari M., 2010, International Journal of Universal Computer Sciences, V1, P59
   Ezerman MF, 2020, IEEE T INFORM THEORY, V66, P5754, DOI 10.1109/TIT.2020.2976073
   Farhi E., 2014, ARXIV
   Fedichkin L., 2000, ARXIVQUANTPH0006097
   Feito A., 2008, ARXIV08062171
   Fernández-Caramés TM, 2020, IEEE INTERNET THINGS, V7, P6457, DOI 10.1109/JIOT.2019.2958788
   FEYNMAN RP, 1982, INT J THEOR PHYS, V21, P467, DOI 10.1007/BF02650179
   Fowler AG, 2004, QUANTUM INF COMPUT, V4, P237
   Franklin D, 2004, NANO, QUANTUM AND MOLECULAR COMPUTING: IMPLICATIONS TO HIGH LEVEL DESIGN AND VALIDATION, P247, DOI 10.1007/1-4020-8068-9_8
   Freivalds R, 1999, ACM COMPUT SURV, V31, pM1
   Friis N, 2018, PHYS REV X, V8, DOI 10.1103/PhysRevX.8.021012
   Frolov AV, 2017, RUSS METEOROL HYDRO+, V42, P545, DOI 10.3103/S1068373917090011
   Fu P, 2020, IEEE S LOG, P440, DOI 10.1145/3373718.3394765
   Gahi Y, 2020, INT J SMART SECUR TE, V7, P1
   Galbraith SD, 2016, LECT NOTES COMPUT SC, V10031, P63, DOI 10.1007/978-3-662-53887-6_3
   Gay SJ, 2006, MATH STRUCT COMP SCI, V16, P581, DOI 10.1017/S0960129506005378
   Ghalaii M, 2020, IEEE J SEL AREA COMM, V38, P506, DOI 10.1109/JSAC.2020.2969058
   Gill SS, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241038
   Giovannetti V, 2008, PHYS REV LETT, V100, DOI 10.1103/PhysRevLett.100.160501
   Glendinning I., 2003, INT C PARALLEL PROCE, V70, P461, DOI [10.1007/978-3-540-24669-5_60, DOI 10.1007/978-3-540-24669-5_60]
   Glos A, 2019, COMPUT PHYS COMMUN, V235, P414, DOI 10.1016/j.cpc.2018.09.001
   Gras G, 2020, J APPL PHYS, V127, DOI 10.1063/1.5140824
   Grasselli F, 2019, NEW J PHYS, V21, DOI 10.1088/1367-2630/ab2b00
   Grice WP., 2020, U.S. patent application, Patent No. [16/197,457, 16197457]
   Grimm R, 2000, ADV ATOM MOL OPT PHY, V42, P95, DOI 10.1016/S1049-250X(08)60186-X
   Grover Lov K., 1996, THEOR COMPUT, P212
   Guo PL, 2020, OPT EXPRESS, V28, P4611, DOI 10.1364/OE.374292
   Gustiani C., 2020, THESIS UNIVERSITATSB
   Gyongyosi L, 2019, COMPUT SCI REV, V31, P51, DOI 10.1016/j.cosrev.2018.11.002
   Han KH, 2002, IEEE T EVOLUT COMPUT, V6, P580, DOI 10.1109/TEVC.2002.804320
   Harrow AW., 2020, SMALL QUANTUM COMPUT
   Hatakeyama Y, 2017, PHYS REV A, V95, DOI 10.1103/PhysRevA.95.042301
   Hayes AJF, 2004, J OPT B-QUANTUM S O, V6, P533, DOI 10.1088/1464-4266/6/12/008
   He Y, 2019, NATURE, V571, P371, DOI 10.1038/s41586-019-1381-2
   Heim B, 2020, NAT REV PHYS, V2, P709, DOI 10.1038/s42254-020-00245-7
   Hey T, 1999, COMPUT CONTROL ENG J, V10, P105, DOI 10.1049/cce:19990303
   Hill CD, 2015, SCI ADV, V1, DOI 10.1126/sciadv.1500707
   Hincks IN, 2015, PHYS REV APPL, V4, DOI 10.1103/PhysRevApplied.4.024012
   Ho A, 2018, JOULE, V2, P810, DOI 10.1016/j.joule.2018.04.021
   Huang AQ, 2020, PHYS REV APPL, V13, DOI 10.1103/PhysRevApplied.13.034017
   Huo Changming, 2009, THESIS U CINCINNATI
   Imamoglu A, 1999, PHYS REV LETT, V83, P4204, DOI 10.1103/PhysRevLett.83.4204
   Ivády V, 2019, NAT COMMUN, V10, DOI 10.1038/s41467-019-13495-6
   Ivancova O, 2020, SYST ANAL SCI ED, V2020, P52
   Jaameri E., 2020, THESIS AALTO U FINLA
   Jain N, 2014, NEW J PHYS, V16, DOI 10.1088/1367-2630/16/12/123030
   Jain S, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P2165
   JavadiAbhari A, 2015, PARALLEL COMPUT, V45, P2, DOI 10.1016/j.parco.2014.12.001
   Jones T, 2019, SCI REP-UK, V9, DOI 10.1038/s41598-019-47174-9
   Juliá-Díaz B, 2006, COMPUT PHYS COMMUN, V174, P914, DOI 10.1016/j.cpc.2005.12.021
   Jurcevic P, 2021, QUANTUM SCI TECHNOL, V6, DOI 10.1088/2058-9565/abe519
   Kane BE, 1998, NATURE, V393, P133, DOI 10.1038/30156
   Kelly A., 2018, ARXIV180500988
   Kelly J, 2015, NATURE, V519, P66, DOI 10.1038/nature14270
   Knill E, 2001, NATURE, V409, P46, DOI 10.1038/35051009
   Kong W., 2021, ARXIV PREPRINT ARXIV
   Koziel B, 2017, IEEE T CIRCUITS-I, V64, P86, DOI 10.1109/TCSI.2016.2611561
   Krämer S, 2018, COMPUT PHYS COMMUN, V227, P109, DOI 10.1016/j.cpc.2018.02.004
   Krauss T., 2020, IEEE T QUANTUM ENG, V1, P1
   Kruger Tom, 2020, P IEEEACM 42 INT C S, P445, DOI DOI 10.1145/3387940.3391472
   Kumar A, 2021, IEEE ACCESS, V9, P125868, DOI 10.1109/ACCESS.2021.3109816
   Kumar A, 2021, FUTURE GENER COMP SY, V115, P1, DOI 10.1016/j.future.2020.08.046
   Kumar K. Mahesh, 2015, 2015 IEEE 9th International Conference on Intelligent Systems and Control (ISCO), P1, DOI 10.1109/ISCO.2015.7282319
   Langlois A, 2015, DESIGN CODE CRYPTOGR, V75, P565, DOI 10.1007/s10623-014-9938-4
   Lauter K.E., 2017, IACR CRYPTOL EPRINT, V2017, P962
   Leuenberger MN, 2001, NATURE, V410, P789, DOI 10.1038/35071024
   Leverrier A, 2009, PHYS REV LETT, V102, DOI 10.1103/PhysRevLett.102.180504
   Li J, 2018, CHINESE J ELECTRON, V27, P223, DOI 10.1049/cje.2018.01.017
   Li JW, 2018, OPT ENG, V57, DOI 10.1117/1.OE.57.6.066109
   Li WJ, 2018, FUTURE GENER COMP SY, V88, P262, DOI 10.1016/j.future.2018.05.070
   Li YY, 2020, IEEE ACCESS, V8, P23568, DOI 10.1109/ACCESS.2020.2970105
   Lin J, 2019, PHYS REV X, V9, DOI 10.1103/PhysRevX.9.041064
   Liu F, 2020, OPT QUANT ELECTRON, V52, DOI 10.1007/s11082-020-02270-3
   Liu H, 2019, PHYS REV A, V100, DOI 10.1103/PhysRevA.100.042313
   Lloyd S, 2014, NAT PHYS, V10, P631, DOI [10.1038/nphys3029, 10.1038/NPHYS3029]
   Lo HK., 2001, ARXIVQUANTPH0102138
   Longdell JJ, 2004, PHYS REV LETT, V93, DOI 10.1103/PhysRevLett.93.130503
   Lyubashevsky V, 2021, LECT NOTES COMPUT SC, V12826, P611, DOI 10.1007/978-3-030-84245-1_21
   Mafu M, 2011, UNCONDITIONAL SECURI
   Mafu M., 2018, SEC QUANT KEY DISTR
   Mafu M, 2014, APPL MATH INFORM SCI, V8, P2769, DOI 10.12785/amis/080612
   Maiti A., 2017, BLIND QUANTUM COMPUT
   Mastriani M, 2021, OPT QUANT ELECTRON, V53, DOI 10.1007/s11082-021-02829-8
   MATSUMOTO T, 1988, LECT NOTES COMPUT SC, V330, P419
   Maurand R, 2016, NAT COMMUN, V7, DOI 10.1038/ncomms13575
   McCubbin Christopher B., 2000, THESIS U MARYLAND BA
   McEliece R. J., 1978, CODING THV, V4244, P114
   McKay D. C, 2018, ARXIV PREPRINT ARXIV
   Melhem M., 2020, ARXIV200511002
   Menon PS, 2014, IERI PROC, V10, P144, DOI 10.1016/j.ieri.2014.09.069
   Mera JMB, 2020, IACR CRYPTOL EPRINT, V2020, P321
   Metodi TS, 2005, INT SYMP MICROARCH, P305
   Miller DM, 2006, INT SYM MVL, P177
   Miranskyy A., 2021, ARXIV PREPRINT ARXIV
   Mirkhani Z, 2016, QUANTUM INF PROCESS, V15, P4117, DOI 10.1007/s11128-016-1377-x
   Miszczak JA., 2010, ARXIV PREPRINT ARXIV
   Mizuta R, 2017, PHYS REV B, V95, DOI 10.1103/PhysRevB.95.045414
   Mlnarik H., 2007, Quantum Programming Language LanQ
   Mohammadzadeh N, 2014, QUANTUM INF PROCESS, V13, P445, DOI 10.1007/s11128-013-0661-2
   Mohammadzadeh N, 2010, MICROELECTRON J, V41, P219, DOI 10.1016/j.mejo.2010.02.005
   Morello A, 2010, NATURE, V467, P687, DOI 10.1038/nature09392
   Mukai H., 2019, APS, V2019
   Naeem W., 2019, Q STUDIO
   Nafradi B, 2016, NAT COMMUN, V7, P1
   Nagayama S, 2017, NEW J PHYS, V19, DOI 10.1088/1367-2630/aa5918
   Naik DS, 2000, PHYS REV LETT, V84, P4733, DOI 10.1103/PhysRevLett.84.4733
   Nath RK, 2021, IEEE COMP SOC ANN, P453, DOI 10.1109/ISVLSI51109.2021.00089
   Nejatollahi H, 2020, ACM T EMBED COMPUT S, V19, DOI 10.1145/3378164
   Nejatollahi H, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3292548
   Nemoto K, 2017, PHILOS T R SOC A, V375, DOI 10.1098/rsta.2016.0236
   Neumann P, 2008, SCIENCE, V320, P1326, DOI 10.1126/science.1157233
   Nielsen E., 2013, QCAD SIMULATION OPTI
   O'Gorman J, 2016, NPJ QUANTUM INFORM, V2, DOI 10.1038/npjqi.2015.19
   Omole V., 2019, CIRQ PYTHON FRAMEWOR
   Oskin M, 2002, COMPUTER, V35, P79, DOI 10.1109/2.976922
   Ott D, 2019, ARXIV190907353
   Paler A., 2015, 2015 52 ACMEDACIEEE, P1
   Patrzyk J, 2015, COMPUT SCI-AGH, V16, P103, DOI 10.7494/csci.2015.16.1.103
   Patrzyk Joanna, 2014, THESIS
   PAUL W, 1990, REV MOD PHYS, V62, P531, DOI 10.1103/RevModPhys.62.531
   Peng C, 2019, IT PROF, V21, P27, DOI 10.1109/MITP.2019.2943136
   Perdomo-Ortiz A, 2018, QUANTUM SCI TECHNOL, V3, DOI 10.1088/2058-9565/aab859
   Petschnigg C, 2019, IEEE INT CONF ROBOT, P803, DOI [10.1109/ICRA.2019.8793768, 10.1109/icra.2019.8793768]
   Piattini M, 2021, IT PROF, V23, P62, DOI 10.1109/MITP.2020.3019522
   Piattini Mario, 2020, QANSWER, P1
   Pica G, 2016, PHYS REV B, V93, DOI 10.1103/PhysRevB.93.035306
   Pla JJ, 2013, NATURE, V496, P334, DOI 10.1038/nature12011
   Pla JJ, 2012, NATURE, V489, P541, DOI 10.1038/nature11449
   Preskill J, 2018, QUANTUM-AUSTRIA, V2, DOI 10.22331/q-2018-08-06-79
   Qassim Y, 2016, INT CONF COMPUT NETW, P684
   Qiang XG, 2018, NAT PHOTONICS, V12, P534, DOI 10.1038/s41566-018-0236-y
   Radtke T, 2005, COMPUT PHYS COMMUN, V173, P91, DOI 10.1016/j.cpc.2005.07.006
   Regev O, 2009, J ACM, V56, DOI 10.1145/1568318.1568324
   Rieffel E, 2000, ACM COMPUT SURV, V32, P300, DOI 10.1145/367701.367709
   Riesebos L, 2021, IEEE MICRO, V41, P57, DOI 10.1109/MM.2021.3094968
   Roetteler M, 2018, IEEE SECUR PRIV, V16, P22, DOI 10.1109/MSP.2018.3761710
   Rötteler M, 2006, COMPUT SCI-RES DEV, V21, P3, DOI 10.1007/s00450-006-0008-7
   Ruan XC, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9224956
   Ruping Shen, 2019, Collaborative Computing: Networking, Applications and Worksharing. 15th EAI International Conference, CollaborateCom 2019. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 292), P419, DOI 10.1007/978-3-030-30146-0_29
   Saad HMH, 2021, IEEE ACCESS, V9, P38488, DOI 10.1109/ACCESS.2021.3062790
   Sano Y., 2021, ARXIV PREPRINT ARXIV
   Savchuk MM, 2019, CYBERN SYST ANAL+, V55, P10, DOI 10.1007/s10559-019-00107-w
   Schaal S, 2018, PHYS REV APPL, V9, DOI 10.1103/PhysRevApplied.9.054016
   Schaetz T, 2013, NEW J PHYS, V15, DOI 10.1088/1367-2630/15/8/085009
   Schneider SSD., 2000, QUANTUM SYSTEMS SIMU
   Schrenk B., P 2018 OPT FIB COMM, P1
   Selinger P, 2004, LECT NOTES COMPUT SC, V2998, P1
   Shaikh TA, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY (CIT), P112, DOI 10.1109/CIT.2016.79
   SHOR PW, 1994, AN S FDN CO, P124
   Shrestha SR, 2014, 2014 14TH INTERNATIONAL SYMPOSIUM ON COMMUNICATIONS AND INFORMATION TECHNOLOGIES (ISCIT), P368, DOI 10.1109/ISCIT.2014.7011934
   Sibson P, 2017, NAT COMMUN, V8, DOI 10.1038/ncomms13984
   Silva Pinheiro Bittencourt M, 2019, REDUCING KEYS RAINBO
   Simon DR, 1997, SIAM J COMPUT, V26, P1474, DOI 10.1137/S0097539796298637
   Singh H., 2019, CODE BASED CRYPTOGRA, P1
   Singh H, 2021, SIMUL MODEL PRACT TH, V111, DOI 10.1016/j.simpat.2021.102353
   Singh S, 2017, IT PROF, V19, P42, DOI 10.1109/MITP.2017.26
   Smith-Tone D, 2019, IACR CRYPTOL EPRINT, V2019, P1355
   Sofge DA, 2008, SECOND INTERNATIONAL CONFERENCE ON QUANTUM-, NANO- AND MICRO-TECHNOLOGIES: ICQNM 2008, PROCEEDINGS, P66, DOI 10.1109/ICQNM.2008.15
   Solomon S, 2007, AR4 CLIMATE CHANGE 2007: THE PHYSICAL SCIENCE BASIS, P1
   Srinath MS, 2016, IACR CRYPTOL EPRINT, V2016, P148
   Srivastava R., 2016, COMMERCIAL PROSPECTS
   Staton S, 2015, ACM SIGPLAN NOTICES, V50, P395, DOI [10.1145/2676726.2676999, 10.1145/2775051.2676999]
   Steiger DS, 2018, QUANTUM-AUSTRIA, V2, DOI 10.22331/q-2018-01-31-49
   Stucki D, 2007, PROC SPIE, V6583, DOI 10.1117/12.722952
   Stumpf D., 2020, CRYPTOANALYSIS POST
   Tankasala A., 2019, ARXIV190807187
   Tao Shang, 2020, Quantum Engineering, V2, DOI 10.1002/que2.32
   Terorde Michael, 2019, REGISTRY SPUREN VERU
   Tolba AS., 2013, ARXIV13025133
   Tomza M, 2019, REV MOD PHYS, V91, DOI 10.1103/RevModPhys.91.035001
   Toosi AN, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2593512
   Tosi G, 2017, NAT COMMUN, V8, DOI 10.1038/s41467-017-00378-x
   Tóth G, 2008, COMPUT PHYS COMMUN, V179, P430, DOI 10.1016/j.cpc.2008.03.007
   Tregillus Henry, 2019, ARTISTE QB NET QUANT
   Trushechkin A, 2020, ARXIV200407809
   Tsai CW, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11093767
   Unruh D, 2006, COMPUT SCI-RES DEV, V21, P55, DOI 10.1007/s00450-006-0012-y
   Usman M, 2016, NAT NANOTECHNOL, V11, P763, DOI [10.1038/NNANO.2016.83, 10.1038/nnano.2016.83]
   Usman M, 2020, NPJ COMPUT MATER, V6, DOI 10.1038/s41524-020-0282-0
   Usman M, 2011, J APPL PHYS, V110, DOI 10.1063/1.3657783
   Usman M, 2009, IEEE T NANOTECHNOL, V8, P330, DOI 10.1109/TNANO.2008.2011900
   Valivarthi R, 2020, OPT EXPRESS, V28, P14547, DOI 10.1364/OE.391491
   Van Meter R, 2016, COMPUTER, V49, P31, DOI 10.1109/MC.2016.291
   Vandersypen LMK, 2001, NATURE, V414, P883, DOI 10.1038/414883a
   Veldhorst M, 2015, NATURE, V526, P410, DOI 10.1038/nature15263
   Vernacchia S, 2019, QUANTUM LEAP ADV STR
   Viamontes GF, 2009, QUANTUM CIRCUIT SIMULATION, P1, DOI 10.1007/978-90-481-3065-8
   Vybornyi I., 2020, ARXIV200310478
   Walther H, 2006, REP PROG PHYS, V69, P1325, DOI 10.1088/0034-4885/69/5/R02
   Weber B, 2012, SCIENCE, V335, P64, DOI 10.1126/science.1214319
   Weder Benjamin, 2020, APEQS 2020: Proceedings of the 1st SIGSOFT International Workshop on Architectures and Paradigms for Engineering Quantum Software, P2, DOI 10.1145/3412451.3428497
   Weitenberg C, 2011, PHYS REV A, V84, DOI 10.1103/PhysRevA.84.032322
   Willett RL, 2013, PHYS REV LETT, V111, DOI 10.1103/PhysRevLett.111.186401
   Wonfor A., 2019, 45 ECOC 2019, P1
   Xin T, 2018, SCI BULL, V63, P17, DOI 10.1016/j.scib.2017.12.022
   Yan F, 2016, QUANTUM INF PROCESS, V15, P1, DOI 10.1007/s11128-015-1195-6
   Yin J, 2020, NATURE, V582, P501, DOI 10.1038/s41586-020-2401-y
   Yin Tao, 2020, ARXIV200615781
   Yung M-H, 2020, ARXIV200501510
   Zagorodko P. V., 2020, THESIS
   Zhang GF, 2010, J COORD CHEM, V63, P1480, DOI 10.1080/00958972.2010.484489
   Zhang Y., 2020, ARXIV200404383
   Zhao J., 2020, ARXIV200707047
   Zhou L, 2018, J NETW COMPUT APPL, V103, P178, DOI 10.1016/j.jnca.2017.11.012
   Zhou Y., 2020, ARXIV200309883
   Zwanenburg FA, 2013, REV MOD PHYS, V85, P961, DOI 10.1103/RevModPhys.85.961
NR 290
TC 99
Z9 107
U1 49
U2 225
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 66
EP 114
DI 10.1002/spe.3039
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000727017400005
OA Green Submitted
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Chen, ZY
AF Chen, Zhaoyun
TI RIFLING: A reinforcement learning-based GPU scheduler for deep learning
   research and development platforms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cost-effective; deep learning platform; Q-learning; reinforcement
   learning; scheduling
AB GPU platforms have been widely adopted in both academia and industry to support deep learning (DL) research and development (R&D). Compared with giant companies who favor custom-designed AI platforms, most small-and-medium-sized enterprises, institutes and universities (EIUs) prefer to build or rent a cost-effective GPU cluster, usually in a limited-scale, to process diverse DL R&D workloads. Therefore, more attention has been attracted by DL scheduling with the aim of improving the system efficiency and task performance. However, prior prediction-based schedulers are limited in terms of their prediction accuracy and profiling overhead. Accordingly, in this article, we propose a reinforcement learning (RL)-based online GPU scheduler, RIFLING, to model the scheduling problem as an online decision-making process. Scheduling decisions are made according to Q-learning, which is a typical RL method. RIFLING can achieve high scheduling efficiency based on the online exploring and exploiting of diverse scheduling strategies for various DL workloads, without the need for expensive offline profiling or sophisticated prediction model. We implement RIFLING as a plugin of Tensorflow, and deploy it on a distributed GPU cluster. Experiments demonstrate that RIFLING achieves up to 47.8% reductions and 19.6% improvements in makespan and average normalized processing rate respectively compared to the best available baseline without any manual intervention.
C1 [Chen, Zhaoyun] Natl Univ Def Technol, Coll Comp, Changsha, Peoples R China.
C3 National University of Defense Technology - China
RP Chen, ZY (corresponding author), Natl Univ Def Technol, Coll Comp, Changsha, Peoples R China.
EM chenzhaoyun@nudt.edu.cn
FU National Nature Science Foundation of China under NSFC [62002366]
FX The authors gratefully acknowledge supports from National Nature Science
   Foundation of China under NSFC (No. 62002366).
CR [Anonymous], 2015, FOUND TRENDS MACH LE, V8, P232, DOI 10.1561/2200000050
   Aydin ME, 2000, ROBOT AUTON SYST, V33, P169, DOI 10.1016/S0921-8890(00)00087-7
   Baker B., 2017, INT C LEARNING REPRE
   Bao YX, 2020, IEEE INFOCOM SER, P626, DOI [10.1109/INFOCOM41043.2020.9155446, 10.1109/infocom41043.2020.9155446]
   Chen TB, 2021, INT J PARALLEL PROG, V49, P646, DOI 10.1007/s10766-021-00711-4
   Chen YJ, 2016, COMMUN ACM, V59, P105, DOI 10.1145/2996864
   Chen ZY, 2020, IEEE T PARALL DISTR, V31, P34, DOI 10.1109/TPDS.2019.2931558
   Chen ZY, 2019, DES AUT TEST EUROPE, P1599, DOI [10.23919/DATE.2019.8715279, 10.23919/date.2019.8715279]
   Cui DL, 2020, IEEE T CLOUD COMPUT, V8, P1030, DOI 10.1109/TCC.2017.2773078
   Gu JC, 2019, PROCEEDINGS OF THE 16TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P485
   Gu ZY, 2021, IEEE J SEL AREA COMM, V39, P2014, DOI 10.1109/JSAC.2021.3078498
   Hauswald J, 2015, 2015 ACM/IEEE 42ND ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA), P27, DOI 10.1145/2749469.2749472
   He K., 2015, IEEE C COMP VIS PATT, DOI [10.1109/CVPR.2015.7299173, DOI 10.1109/CVPR.2015.7299173]
   Jeon M, 2019, PROCEEDINGS OF THE 2019 USENIX ANNUAL TECHNICAL CONFERENCE, P947
   Jouppi NP, 2017, 44TH ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA 2017), P1, DOI 10.1145/3079856.3080246
   Krizhevsky Alex, 2014, ARXIV14045997
   KROSE BJA, 1995, ROBOT AUTON SYST, V15, P233, DOI 10.1016/0921-8890(95)00026-C
   Kumar, 2019, INT J ADV COMPUT SC, V9, P131
   Li SJ, 2017, NEUROCOMPUTING, V261, P153, DOI 10.1016/j.neucom.2016.05.112
   Luo, 2018, ARXIV180803405
   Mao HZ, 2019, SIGCOMM '19 - PROCEEDINGS OF THE ACM SPECIAL INTEREST GROUP ON DATA COMMUNICATION, P270, DOI 10.1145/3341302.3342080
   Mao HZ, 2016, PROCEEDINGS OF THE 15TH ACM WORKSHOP ON HOT TOPICS IN NETWORKS (HOTNETS '16), P50, DOI 10.1145/3005745.3005750
   Mirhoseini A., 2018, INT C LEARN REPR
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   MSEAS, CLUST MIT CLUST
   Nie X., 2018, PROC IEEEACM INT S Q, P1
   Pellegrini F., 2009, DISTILLATING KNOWLED
   Peng YH, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190517
   Souza A, 2021, LECT NOTES COMPUT SC, V12985, P126, DOI 10.1007/978-3-030-88224-2_7
   Wang YQ, 2016, NEUROCOMPUTING, V173, P1073, DOI 10.1016/j.neucom.2015.08.066
   Wu YW, 2020, IEEE CONF COMPUT, P1254, DOI 10.1109/INFOCOMWKSHPS50562.2020.9162977
   Xiao WC, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P595
   Yan F, 2016, SC '16: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, P300, DOI 10.1109/SC.2016.25
   Zhang Di, 2020, P INT C HIGH PERF CO, P31
NR 34
TC 7
Z9 7
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2022
VL 52
IS 6
BP 1319
EP 1336
DI 10.1002/spe.3066
EA DEC 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1A1RT
UT WOS:000736453400001
DA 2024-07-18
ER

PT J
AU Yin, XH
   Huang, ZQ
   Kan, SL
   Shen, GH
   Chen, Z
   Liu, Y
   Wang, F
AF Yin, Xiaohua
   Huang, Zhiqiu
   Kan, Shuanglong
   Shen, Guohua
   Chen, Zhe
   Liu, Yang
   Wang, Fei
TI SafeOSL: Ensuring memory safety of C via ownership-based intermediate
   language
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C; memory errors; memory safety; ownership system; Rust
ID RUNTIME VERIFICATION; SEMANTICS
AB The unsafe features of C make it a big challenge to ensure memory safety of C programs, and often lead to memory errors that can result in vulnerabilities. Various formal verification techniques for ensuring memory safety of C have been proposed. However, most of them either have a high overhead, such as state explosion problem in model checking, or have false positives, such as abstract interpretation. In this article, by innovatively borrowing ownership system from Rust, we propose a novel and sound static memory safety analysis approach, named SafeOSL. Its basic idea is an ownership-based intermediate language, called ownership system language (OSL), which captures the features of the ownership system in Rust. Ownership system specifies the relations among variables and memory locations, and maintains invariants that can ensure memory safety. The semantics of OSL is formalized in K-framework, which is a rewriting-logic based tool. C programs to be checked are first transformed into OSL programs and then detected by OSL semantics. Experimental results have demonstrated that SafeOSL is effective in detecting memory errors of C. Moreover, the translations and experiments indicate that the intermediate language OSL could be reused by other programming languages to detect memory errors.
C1 [Yin, Xiaohua; Huang, Zhiqiu; Kan, Shuanglong; Shen, Guohua; Chen, Zhe] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211106, Peoples R China.
   [Huang, Zhiqiu; Shen, Guohua] Collaborat Innovat Ctr Novel Software Technol & I, Nanjing, Peoples R China.
   [Huang, Zhiqiu; Shen, Guohua] Minist Ind & Informat Technol, Key Lab Safety Crit Software, Nanjing, Peoples R China.
   [Kan, Shuanglong] TU Kaiserslautern, Dept Comp Sci, Kaiserslautern, Germany.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore, Singapore.
   [Wang, Fei] Suzhou Univ Sci & Technol, Sch Elect & Informat Engn, Suzhou, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; University of
   Kaiserslautern; Nanyang Technological University; Suzhou University of
   Science & Technology
RP Huang, ZQ (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211106, Peoples R China.
EM zqhuang@nuaa.edu.cn
OI Yin, Xiaohua/0000-0002-5377-9826; Shen, Guohua/0000-0003-2182-0019
FU National Key Research and Development Program of China [2018YFB1003902];
   National Natural Science Foundation of China [61772270, 61902180,
   62172217, U1533130]
FX National Key Research and Development Program of China, Grant/Award
   Number: 2018YFB1003902; National Natural Science Foundation of China,
   Grant/Award Numbers: 61772270, 61902180, 62172217, U1533130
CR Allamigeon X., 2009, THESIS ECOLE POLYTEC
   [Anonymous], 2018, SOL STAT CIRC C ISSC
   [Anonymous], 2016, P 38 INT C SOFTWARE
   [Anonymous], 2020, La JornadaJuly 31
   [Anonymous], 2013, ASE ARP5412A
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Balabonski T., 2014, P 12 INT S FLOPS FUN
   Ball T, 2011, COMMUN ACM, V54, P68, DOI 10.1145/1965724.1965743
   Black PE., 2020, SATE 6 OCKHAM SOUND
   Blazy S, 2009, J AUTOM REASONING, V43, P263, DOI 10.1007/s10817-009-9148-3
   Bogdanas D., 2015, P 42 ANN ACM SIGPLAN
   Chen Z, 2019, 2019 IEEE INTERNATIONAL SYMPOSIUM ON RADIO-FREQUENCY INTEGRATION TECHNOLOGY (RFIT2019), DOI 10.1109/rfit.2019.8929159
   Chen Z, 2015, SOFTWARE PRACT EXPER, V45, P989, DOI 10.1002/spe.2242
   de Amorim AA., 2018, P 7 INT C POST2018 H
   Dreyer D., 2020, LECT NOTES COMPUT SC, DOI DOI 10.1007/978-3-030-53291-8_14
   Dropbox, 2021, US
   Ellison C, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P533
   Feist J, 2014, J COMPUT VIROL HACKI, V10, P211, DOI 10.1007/s11416-014-0203-1
   Filaretti D., 2015, THESIS IMPERIAL COLL
   Goseva-Popstojanova K, 2015, INFORM SOFTWARE TECH, V68, P18, DOI 10.1016/j.infsof.2015.08.002
   Guth D., 2013, THESIS U ILLINOIS UR
   Hóu Z, 2021, J AUTOM REASONING, V65, P569, DOI 10.1007/s10817-020-09579-4
   Jones J., 2018, ACM SIGSOFT SOFTW EN, V43, P56
   Kaiser J., 2017, P 31 EUR C OBJ OR PR
   Krebbers RJ., 2015, THESIS RADBOUD U NIJ
   Kroening D., 2014, P TOOLS ALG CONSTR A
   Laurent J., 2019, P 2019 WORKSH FAULT
   Maroneze AO., 2019, ELECT COMMUN EUR ASS, V77, P1
   Meseguer J, 2012, J LOGIC ALGEBR PROGR, V81, P721, DOI 10.1016/j.jlap.2012.06.003
   MISRA, 2021, MISRA C 2012
   Mitchell JohnC., 1990, Formal Models and Semantics, P365
   Nagarakatte S, 2010, ACM SIGPLAN NOTICES, V45, P31
   Nagarakatte S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P245, DOI 10.1145/1542476.1542504
   Necula GC, 2005, ACM T PROGR LANG SYS, V27, P477, DOI 10.1145/1065887.1065892
   O'Hearn P, 2019, COMMUN ACM, V62, P86, DOI 10.1145/3211968
   Pirry C., 2020, COMPUTER, V9, P48
   Reshetova E, 2018, SOFTWARE PRACT EXPER, V48, P2237, DOI 10.1002/spe.2638
   Rosu G, 2010, J LOGIC ALGEBR PROGR, V79, P397, DOI 10.1016/j.jlap.2010.03.012
   Rosu G, 2009, LECT NOTES COMPUT SC, V5779, P132, DOI 10.1007/978-3-642-04694-0_10
   Rust Team, 2021, NON LEX LIF
   Rust Team, 2016, RUST LANGUAGE HOMEPA
   Sánchez C, 2019, FORM METHOD SYST DES, V54, P279, DOI 10.1007/s10703-019-00337-w
   Signoles J., 2017, P RV CUBES 2017 INT
   Simpson MS, 2013, SOFTWARE PRACT EXPER, V43, P93, DOI 10.1002/spe.2105
   Stefanescu A, 2016, ACM SIGPLAN NOTICES, V51, P74, DOI [10.1145/2983990.2984027, 10.1145/3022671.2984027]
   Swamy N, 2006, SCI COMPUT PROGRAM, V62, P122, DOI 10.1016/j.scico.2006.02.003
   The Clang Team, 2021, CLANG C LANGUAGE FAM
   De Araújo VBU, 2016, ELECTRON NOTES THEOR, V324, P3, DOI 10.1016/j.entcs.2016.09.003
   Wang YL, 2018, IEEE IND APPLIC SOC
   Xi H., 2018, ABS181012190 CORR
   Yan H, 2018, P ICCREM 2018 CHARL
   Yin X., 2021, SAFEOSL
NR 52
TC 1
Z9 1
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2022
VL 52
IS 5
BP 1114
EP 1142
DI 10.1002/spe.3057
EA DEC 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0G4IQ
UT WOS:000726634500001
DA 2024-07-18
ER

PT J
AU Bartel, S
   Korch, M
AF Bartel, Silas
   Korch, Matthias
TI Generation of logic designs for efficiently solving ordinary
   differential equations on field programmable gate arrays
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code generation; FPGA; hardware accelerators; ODE; reconfigurable
   architectures; Runge-Kutta method
AB Ordinary differential equations can be used to describe simulation models. As such, solving these equations is an important task in the high performance computing (HPC) domain. Field programmable gate arrays (FPGAs) are a promising platform, expected to be usable as efficient accelerators for such computations. While the use of hardware description languages (HDLs) can produce very efficient logic designs, their unique concept is hard to adopt for scientists and software engineers. High-level synthesis (HLS) tools promise faster development, but bear the risk of lower performance and increased resource consumption of the final design. But even when using HLS tools the user still requires specialized knowledge about FPGAs and circuit design. In order to reach a wide adoption of FPGAs in HPC applications, a need for simple to use tools which enable performant designs was identified. This article proposes a framework that is able to automatically generate specific and optimized solver logic from easy to handle configuration files. No manual development, nor special FPGA or programming knowledge is required. To measure the capability of the proposed tool, the performance was evaluated for different solver methods and compared with an alternative hand optimized HLS implementation. The logic generated by this improved approach is up to 43 times faster than its hand optimized HLS counterpart, depending on the solution method.
C1 [Bartel, Silas; Korch, Matthias] Univ Bayreuth, Dept Comp Sci, Bayreuth, Germany.
C3 University of Bayreuth
RP Bartel, S (corresponding author), Univ Bayreuth, Dept Comp Sci, Bayreuth, Germany.
EM silas.bartel@uni-bayreuth.de
OI Korch, Matthias/0000-0001-7267-0378
FU German Research Foundation (DFG) [KO 2252/3-2]
FX German Research Foundation (DFG), Grant/Award Number: KO 2252/3-2
CR [Anonymous], 2009, YAML PROJECT YAML YA
   [Anonymous], 2013, Queue, DOI [DOI 10.1145/2436696.2443836, 10.1145/2436696.2443836]
   Brauer F., 2001, Texts in Applied Mathematics, V40
   Chen Yang, 2017, 2017 IEEE International Ultrasonics Symposium (IUS), DOI 10.1109/ULTSYM.2017.8092052
   Chisel/FIRRTL developers, 2020, CHIS FIRRTL HARDW CO
   De Matteis T, 2020, PROCEEDINGS OF SC20: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SC20), DOI 10.1109/SC41405.2020.00063
   Fasih A, 2009, SMRT SYS TECH, V4, P49
   Gisselquist Technology LLC, 2017, STRAT PIP LOG
   Gorlani P, 2019, 2019 INTERNATIONAL CONFERENCE ON FIELD-PROGRAMMABLE TECHNOLOGY (ICFPT 2019), P99, DOI 10.1109/ICFPT47387.2019.00020
   Hairer E., 2008, Solving ordinary differential equations. I: Nonstiff problems, V2nd
   Huang C, 2011, IEEE EMBED SYST LETT, V3, P113, DOI 10.1109/LES.2011.2170152
   Intel Corporation, 2021, INT FPGA SDK OPENCL
   Intel Corporation, 2021, INT QUART PRIM SOFTW
   Intel Corporation, 2020, DS1054 INT CORP
   Intel Corporation, INT ARR 10 COR FABR
   Koeplinger D, 2018, ACM SIGPLAN NOTICES, V53, P296, DOI [10.1145/3296979.3192379, 10.1145/3192366.3192379]
   Korch M, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.6016
   Lant J, 2020, IEEE MICRO, V40, P25, DOI 10.1109/MM.2019.2950655
   Licht JD, 2018, ACM SIGPLAN NOTICES, V53, P403, DOI [10.1145/3200691.3178527, 10.1145/3178487.3178527]
   Linux Kernel Developers, 2009, LIN HUG SUPP
   Mondigo A, 2019, IEICE T INF SYST, VE102D, P1029, DOI 10.1587/transinf.2018RCP0007
   MyHDL Community, 2018, MYHDL FROM PYTH SIL
   Nane R, 2016, IEEE T COMPUT AID D, V35, P1591, DOI 10.1109/TCAD.2015.2513673
   Osana Y., 2005, Proceedings. 2005 International Conference on Field Programmable Logic and Applications (IEEE Cat. No.05EX1155), P574
   Putnam A, 2015, IEEE MICRO, V35, P10, DOI 10.1109/MM.2015.42
   PyParsing Project, 2003, PYPARSING PYTH PARS
   Ruan ZY, 2018, ANN IEEE SYM FIELD P, P9, DOI 10.1109/FCCM.2018.00011
   Sanaullah A, 2018, HEART 2018: PROCEEDINGS OF THE 9TH INTERNATIONAL SYMPOSIUM ON HIGHLY-EFFICIENT ACCELERATORS AND RECONFIGURABLE TECHNOLOGIES, DOI 10.1145/3241793.3241800
   Sano K., 2015, P 2 INT WORKSH FPGAS, P29
   Serot J., 2014, 2014 IEEE 26th International Symposium on Computer Architecture and High-Performance Computing Workshops (SBAC-PADW), P72, DOI 10.1109/SBAC-PADW.2014.18
   Stamoulias I., 2017, P 8 INT S HIGHL EFF
   Williams Stephen, 2000, ICARUS VERILOG
   Xilinx Inc, 2020, DS890 XIL INC
NR 33
TC 2
Z9 2
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2023
VL 53
IS 1
SI SI
BP 27
EP 52
DI 10.1002/spe.3043
EA OCT 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7B2CV
UT WOS:000708686400001
OA Green Published
DA 2024-07-18
ER

PT J
AU Xie, Y
   Zhou, Y
   Xu, J
   Zhou, J
   Chen, XB
   Xiao, F
AF Xie, Yong
   Zhou, Yu
   Xu, Jing
   Zhou, Jian
   Chen, Xiaobai
   Xiao, Fu
TI Cybersecurity protection on in-vehicle networks for distributed
   automotive cyber-physical systems: State-of-the-art and future
   challenges
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE controller area network; cybersecurity protection; distributed
   automotive cyber&#8208; physical systems; in&#8208; vehicle networks;
   system design and optimization
ID INTRUSION DETECTION; SECURITY; IDENTIFICATION; FD
AB The ever-evolving trip mode of human being leads the automobiles moving toward connected, autonomous, sharing, and electrified vehicles rapidly. But the connection introduces new cybersecurity problems on in-vehicle networks, which poses great challenges for safety guarantee of distributed automotive cyber-physical systems. This article first analyzes the cybersecurity vulnerabilities and defines the security requirements for in-vehicle networks, and then introduces the architecture evolution of in-vehicle network. Based on the definition on architecture of in-vehicle networks, this article defines a security protection framework for it. And then, it surveys the state-of-the-art works for availability protection, integrity protection, and confidentiality protection of in-vehicle networks, respectively, and detailed analysis and comparisons are given about the proposed cybersecurity protection mechanisms. Finally, it summarizes the future challenges for cybersecurity protection of in-vehicle networks, and proposes possible solutions for these challenges.
C1 [Xie, Yong; Zhou, Jian; Chen, Xiaobai; Xiao, Fu] Nanjing Univ Posts & Telecommun, Sch Comp Sci, Xianlin, Peoples R China.
   [Zhou, Yu; Xu, Jing] Xiamen Univ Technol, Dept Comp & Informat Engn, Xiamen, Peoples R China.
C3 Nanjing University of Posts & Telecommunications; Xiamen University of
   Technology
RP Xie, Y (corresponding author), Nanjing Univ Posts & Telecommun, Sch Comp Sci, 9 Wenyuan Rd, Nanjing, Peoples R China.
EM yongxie@njupt.edu.cn
OI Zhou, Jian/0000-0002-1864-3894
FU National Natural Science Foundation of China [61872436, 61972210];
   Natural Science Foundation of Fujian Province, China [2018J01571];
   NUPTSF [NY220133, XK0040920081]; Research Foundation of Jiangsu
   [BRA2020065]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   61872436, 61972210; Natural Science Foundation of Fujian Province,
   China, Grant/Award Number: 2018J01571; NUPTSF, Grant/Award Numbers:
   NY220133, XK0040920081; Research Foundation of Jiangsu, Grant/Award
   Number: BRA2020065
CR Aminifar A, 2018, IEEE T COMPUT, V67, P748, DOI 10.1109/TC.2017.2778728
   [Anonymous], 2016, RECALLFIAT CHRYSLER
   [Anonymous], 2016, SAE STANDARD J3061 C
   [Anonymous], 2019, ESCYPRT MULTI LAYERE
   [Anonymous], 2020, 21434 ISOSAE
   [Anonymous], 2019, AUTOSAR SPECIFICATIO
   [Anonymous], 2016, Cybersecurity best practices for modern vehicles
   Avatefipour O, 2019, IEEE ACCESS, V7, P127580, DOI 10.1109/ACCESS.2019.2937576
   Bezemskij A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON INTERNET OF THINGS (ITHINGS) AND IEEE GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) AND IEEE CYBER, PHYSICAL AND SOCIAL COMPUTING (CPSCOM) AND IEEE SMART DATA (SMARTDATA), P98, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData.2017.20
   Braham R., 2019, P INT C SOFTW TEL CO
   Bushnell, 2018, P EMB SEC CARS BRUSS
   Cho KT, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P911
   Choi W, 2018, IEEE T VEH TECHNOL, V67, P4757, DOI 10.1109/TVT.2018.2810232
   Choi W, 2018, IEEE T INF FOREN SEC, V13, P2114, DOI 10.1109/TIFS.2018.2812149
   Combs FL., 2018, P ACM WORKSH AUT CYB
   Fischer A., 2020, BOSCH POOLS ITS SOFT
   Groza B., 2012, P INT C CRYPT NETW S, P185, DOI DOI 10.1007/978-3-642-35404-5_15
   Groza B., 2018, P INT C RISKS SEC IN
   Gu ZH, 2016, IEEE T PARALL DISTR, V27, P3044, DOI 10.1109/TPDS.2016.2520949
   Han K., 2015, EMB SEC CARS ROM MIC
   Herstellerinitiative software (HIS), 2013, SHE SECURE HARDWARE
   Hof HJ., 2018, P ACM COMP SCI CARS
   Horihata S., 2014, EMB SEC CARS ROM MIC
   Horihata S., 2015, EMB SEC CARS ROM MIC
   Hu, 2018, SAE TECHNICAL PAPERS
   Jennions, 2020, SENSORS-BASEL, V20, P1
   Jiang K, 2012, DES AUT TEST EUROPE, P947
   Jichici C., 2018, International Conference on Security for Information Technology and Communications, P109
   Jo HJ, 2020, IEEE T VEH TECHNOL, V69, P2204, DOI 10.1109/TVT.2019.2961765
   Kang MJ., 2020, P VEHICULAR TECHNOLO
   Keydel C., 2017, P INT C CAN NUR GER
   Komano, 2016, P EMB SEC CARS MUN G
   Koscher K, 2010, P IEEE S SECUR PRIV, P447, DOI 10.1109/SP.2010.34
   Kuwahara Takuya, 2018, J. Inf. Process., V26, P306, DOI DOI 10.2197/IPSJJIP.26.306
   Li Q., 2017, SAE TECHNICAL PAPER
   Li RF., 2017, P WORKSH SEC DEP CRI
   Li XX, 2018, IEEE NETWORK, V32, P58, DOI 10.1109/MNET.2018.1700319
   Liang W, 2021, IEEE T EMERG TOP COM, V9, P1410, DOI 10.1109/TETC.2020.2993032
   Liang W, 2020, IEEE T IND INFORM, V16, P6543, DOI 10.1109/TII.2020.2966069
   Lin CW, 2015, IEEE EMBED SYST LETT, V7, P11, DOI 10.1109/LES.2014.2354011
   Lin CW, 2013, ICCAD-IEEE ACM INT, P115, DOI 10.1109/ICCAD.2013.6691106
   Lock, 2020, ROBERT BOSCH GMBH TR
   Lukasiewycz M, 2016, ACM T DES AUTOMAT EL, V21, DOI 10.1145/2831232
   Luo B., 2017, P INT WORKSH SAF CON
   Luo Q, 2018, IEEE WIREL COMMUN, V25, P113, DOI 10.1109/MWC.2018.1700364
   Marasco S., 2017, P INT C CAN NUR GERM
   Marchetti M, 2016, 2016 IEEE 2ND INTERNATIONAL FORUM ON RESEARCH AND TECHNOLOGIES FOR SOCIETY AND INDUSTRY LEVERAGING A BETTER TOMORROW (RTSI), P429
   Matteucci I., 2019, P ACM C SEC PRIV WIR
   Mira H., 2020, J3061 SAE
   Mrowca A., 2017, ACM T AUTOMAT ELECT, V22
   Müter M, 2011, IEEE INT VEH SYM, P1110, DOI 10.1109/IVS.2011.5940552
   Munir A, 2020, IEEE T DEPEND SECURE, V17, P813, DOI 10.1109/TDSC.2018.2846741
   Murvay PS, 2014, IEEE SIGNAL PROC LET, V21, P395, DOI 10.1109/LSP.2014.2304139
   Nilsson D.K., 2008, P INT WORKSH COMP IN
   Ning J, 2019, IEEE COMMUN LETT, V23, P1927, DOI 10.1109/LCOMM.2019.2937097
   NIST, 2017, RECOMMENDATION BLOCK
   Nowdehi N., 2019, CASAD CAN AWARE STEA
   Olufowobi H, 2020, IEEE T VEH TECHNOL, V69, P1484, DOI 10.1109/TVT.2019.2961344
   Prowell SJ., 2017, P 12 ANN C CYB INF
   Ravi S., 2004, ACM T EMBED COMPUT S, V3, P461, DOI [DOI 10.1145/1015047.1015049, 10.1145/1015047.1015049]
   Roman O., 2014, P IEEE INT C IND INF
   Salem M, 2016, PROC EUROMICR, P97, DOI 10.1109/ECRTS.2016.22
   Schilling R., 2012, P EMB SEC CARS DRESD
   Schweppe H, 2011, IEEE VTS VEH TECHNOL
   Serpanos DN, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2435227.2435262
   Shaikh SA., 2018, P GEN EV COMP C COMP
   Sharma S, 2019, VEH COMMUN, V20, DOI 10.1016/j.vehcom.2019.100182
   Song HM, 2016, 2016 INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN), P63, DOI 10.1109/ICOIN.2016.7427089
   Stumpf F., 2014, P EMB SEC CARS DETR
   Sun H, 2019, IEEE ACCESS, V7, P158237, DOI 10.1109/ACCESS.2019.2950373
   Taylor A, 2015, 2015 WORLD CONGRESS ON INDUSTRIAL CONTROL SYSTEMS SECURITY (WCICSS), P45, DOI 10.1109/WCICSS.2015.7420322
   Ujiie Y., 2019, P EMB SEC CARS
   Verbauwhede I., 2011, P EMB SEC CARS DRESD
   Wang Q., 2018, P AS HARDW OR SEC TR
   Woo S, 2019, IEEE ACCESS, V7, P15521, DOI 10.1109/ACCESS.2019.2892961
   Woo S, 2015, IEEE T INTELL TRANSP, V16, P993, DOI 10.1109/TITS.2014.2351612
   Woo SS., 2020, P ACM SIGAPP S APPL
   Wu WF, 2020, IEEE T INTELL TRANSP, V21, P919, DOI 10.1109/TITS.2019.2908074
   Wu WF, 2018, IEEE ACCESS, V6, P45233, DOI 10.1109/ACCESS.2018.2865169
   Xie GQ, 2021, IEEE T INTELL TRANSP, V22, P5038, DOI 10.1109/TITS.2020.3000783
   Xie GQ, 2020, IEEE T COMPUT AID D, V39, P4413, DOI 10.1109/TCAD.2020.2979457
   Xie Y, 2021, SOFTWARE PRACT EXPER, V51, P2108, DOI 10.1002/spe.2965
   Xie Y, 2019, IEEE T IND INFORM, V15, P1094, DOI 10.1109/TII.2018.2851939
   Ying XH, 2019, ACM IEEE INT CONF CY, P23, DOI 10.1145/3302509.3313783
   Yong Xie, 2015, IEEE/CAA Journal of Automatica Sinica, V2, P422
   Young C, 2019, PROCEEDINGS OF THE ACM WORKSHOP ON AUTOMOTIVE CYBERSECURITY (AUTOSEC '19), P9, DOI 10.1145/3309171.3309179
   Zambreno J., 2018, P REAL TIM SYTS S WO
   Zhou JL, 2022, IEEE T RELIAB, V71, P178, DOI 10.1109/TR.2020.2981419
   Zhou JL, 2021, IEEE T IND INFORM, V17, P7820, DOI 10.1109/TII.2020.3011506
   Zweck, 2017, SAE TECHNICAL PAPER
NR 90
TC 17
Z9 20
U1 2
U2 42
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2108
EP 2127
DI 10.1002/spe.2965
EA MAR 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000629239700001
DA 2024-07-18
ER

PT J
AU Soares, DM
   de Lima, ML
   Murta, L
   Plastino, A
AF Moreira Soares, Daricelio
   de Lima Junior, Manoel Limeira
   Murta, Leonardo
   Plastino, Alexandre
TI What factors influence the lifetime of pull requests?
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE association rules; collaborative software development; data Mining;
   merge; pull request
AB When external contributors want to collaborate with an open-source project, they fork the repository, make changes, and send a pull request to the core team. However, the lifetime of a pull request, defined by the time interval between its opening and its closing, has a high variation, potentially affecting the contributor engagement. In this context, understanding the root causes of pull request lifetime is important to both the external contributors and the core team. The former can adopt strategies that increase the chances of fast review, while the latter can establish priorities in the reviewing process, alleviating the pending tasks and improving the software quality. In this work, we mined association rules from 97,463 pull requests from 30 projects in order to find characteristics that have affected the pull requests lifetime. In addition, we present a qualitative analysis, helping to understand the patterns discovered from the association rules. The results indicate that: (i) contributions with shorter lifetimes tend to be accepted; (ii) structural characteristics, such as number of commits, changed files, and lines of code, have influence, in an isolated or combined way, on the pull request lifetime; (iii) the files changed and the directories to which they belong can be robust predictors for pull request lifetime; (iv) the profile of external contributors and their social relationships have influence on lifetime; and (v) the number of comments in a pull request, as well as the developer responsible for the review, are important predictors for its lifetime.
C1 [Moreira Soares, Daricelio; de Lima Junior, Manoel Limeira] Univ Fed Acre, Ctr Ciencias Exatas & Tecnol, Rio Branco Ac, Brazil.
   [Murta, Leonardo; Plastino, Alexandre] Univ Fed Fluminense, Inst Comp, Niteroi, RJ, Brazil.
C3 Universidade Federal Fluminense
RP Soares, DM; de Lima, ML (corresponding author), Univ Fed Acre, Ctr Ciencias Exatas & Tecnol, BR-69920900 Rio Branco Acre, Brazil.
EM daricelio.soares@ufac.br; limeira@ufac.br; manoel.almeida@ufac.br;
   plastino@ic.uff.br
RI Lima Júnior, Manoel Limeira de/O-2981-2018
OI Lima Júnior, Manoel Limeira de/0000-0003-3621-6084
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [310444/2018-7, 306137/2017-8]; Fundacao Carlos Chagas Filho de Amparo a
   Pesquisa do Estado do Rio de Janeiro [E-26/201.523/2014]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Number: 310444/2018-7 and 306137/2017-8; Fundacao Carlos
   Chagas Filho de Amparo a Pesquisa do Estado do Rio de Janeiro,
   Grant/Award Number: E-26/201.523/2014
CR Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Bisong E, 2017, IEEE WORK CONF MIN S, P487, DOI 10.1109/MSR.2017.36
   Chacon S, 2014, PRO GIT DISTRIBUTED
   de Lima ML, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1567, DOI 10.1145/2695664.2695884
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J, 2012, MOR KAUF D, P1
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kotsiantis Sotiris, 2006, GESTS International Transactions on Computer Science and Engineering, V32, P71
   Marks Lionel, 2011, P 7 INT C PRED MOD S
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Rees-Jones M, 2017, BETTER PREDICTORS IS
   Soares DM, 2018, INFORM SOFTWARE TECH, V98, P32, DOI 10.1016/j.infsof.2018.01.015
   Soares DM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1541, DOI 10.1145/2695664.2695856
   Soares DM, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P960, DOI 10.1109/ICMLA.2015.41
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Witten IH, 2011, MOR KAUF D, P1
   Yu Y, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5595-8
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
NR 23
TC 8
Z9 8
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1173
EP 1193
DI 10.1002/spe.2946
EA DEC 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000600564700001
DA 2024-07-18
ER

PT J
AU Daoud, H
   Dagenais, MR
AF Daoud, Houssem
   Dagenais, Michel R.
TI Performance analysis of distributed storage clusters based on kernel and
   userspace traces
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Ceph; distributed storage; performance; tracing
AB Distributed storage systems are commonly used in modern computing. They are highly scalable and offer data replication and fault tolerance. The complexity of those systems makes them difficult to debug using traditional tools. The existing tools are able to evaluate the overall performance of such systems but they do not provide enough information to find the root cause of performance issues. In this article, we propose a tracing-based performance analysis framework for storage clusters. We use a tracing strategy that reduces the tracing overhead in production systems. The traces collected from the different storage nodes are correlated and used to generate a data model that represents the cluster. Userspace tracing is used to gather data from the storage daemons, while Kernel tracing is used to provide detailed information about operating system internals such as disk queues, network queues and process scheduling. Efficient data structures are used to store the model and to generate metrics and graphical views. Our tool is used in different real world scenarios and is able to investigate interesting performance problems including I/O latencies, data replication and storage nodes failures.
C1 [Daoud, Houssem; Dagenais, Michel R.] Ecole Polytech Montreal, 2900 Blvd Edouard Montpetit, Montreal, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Daoud, H (corresponding author), Ecole Polytech Montreal, 2900 Blvd Edouard Montpetit, Montreal, PQ H3T 1J4, Canada.
EM houssem.daoud@polymtl.ca
FU Ciena; EfficiOS; Ericsson; Natural Sciences and Engineering Research
   Council of Canada; Prompt
FX Ciena; EfficiOS; Ericsson; Natural Sciences and Engineering Research
   Council of Canada; Prompt
CR Adya A, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P1
   [Anonymous], 2005, P 22 IEEE 13 NASA GO
   [Anonymous], 2014, J PHYS C SER
   [Anonymous], 2002, P FAST 2002 C FIL ST
   Arumugam RV, 2016, PROCEEDINGS 2016 5TH IIAI INTERNATIONAL CONGRESS ON ADVANCED APPLIED INFORMATICS IIAI-AAI 2016, P930, DOI 10.1109/IIAI-AAI.2016.91
   Braam P.J., 2004, The Lustre Storage Architecture
   Carns P H, 2000, P 4 ANN LIN SHOWC C, P391
   Corbett P. F., 1993, Proceedings SUPERCOMPUTING '93, P472
   Daoud H, 2018, SOFTWARE PRACT EXPER, V48, P1019, DOI 10.1002/spe.2566
   Desnoyers Mathieu, 2006, OLS OTT LIN S CIT, V2006, P209
   Ezzati-Jivan N, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4068
   Ezzati-Jivan N, 2015, CONCURR COMP-PRACT E, V27, P1069, DOI 10.1002/cpe.3272
   Gudu D, 2014, IEEE INT CONF BIG DA, P177, DOI 10.1109/BigData.2014.7004229
   Jabbarifar M, 2015, J NETW SYST MANAG, V23, P1034, DOI 10.1007/s10922-014-9331-7
   Ji XH, 2004, ICIM' 2004: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON INDUSTRIAL MANAGEMENT, P52
   Kubiatowicz J, 2000, ACM SIGPLAN NOTICES, V35, P190, DOI 10.1145/384264.379239
   Lee Dong-Yun., 2017, Proceedings of the 2017 IEEE International Conference on Massive Storage Systems and Technology, V10
   Montplaisir A, 2013, LECT NOTES COMPUTER, V8174, DOI [10.1007/978-3-642-40787-1_13, DOI 10.1007/978-3-642-40787-1_13]
   Montplaisir-Gonçalves A, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P716, DOI 10.1109/SocialCom.2013.107
   Oh M, 2016, IEEE INT C CL COMP, P316, DOI 10.1109/CLUSTER.2016.11
   Pawlowski Brian, 2000, P 2 INT SYST ADM NET
   Poat MD, 2016, J PHYS CONF SER, V762, DOI 10.1088/1742-6596/762/1/012025
   Rodeh O, 2003, IEEE S MASS STOR SYS, P207, DOI 10.1109/MASS.2003.1194858
   Sigelman Benjamin H., 2010, Dapper, a large-scale distributed systems tracing infrastructure
   Toupin D, 2011, IEEE SOFTWARE, V28, P87, DOI 10.1109/MS.2011.20
   Wang Feiyi., 2013, Performance and scalability evaluation of the Ceph parallel file system, P14, DOI DOI 10.1145/2538542.2538562
   Weil SA, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P307
   Weil Sage A., 2007, PDSW, P35
   Xiao Zhang, 2018, Network and Parallel Computing. 15th IFIP WG 10.3 International Conference, NPC 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11276), P142, DOI 10.1007/978-3-030-05677-3_14
   Zhang XT, 2015, GLOBALISATION EUR MU, P113
NR 30
TC 2
Z9 2
U1 2
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2021
VL 51
IS 1
SI SI
BP 5
EP 24
DI 10.1002/spe.2889
EA SEP 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PH6SW
UT WOS:000566574200001
DA 2024-07-18
ER

PT J
AU Capilla, R
   Kazman, R
   Romera, C
   Carrillo, C
AF Capilla, Rafael
   Kazman, Rick
   Romera, Carlos
   Carrillo, Carlos
TI Usability implications in software architecture: The case study of a
   mobile app
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile app; software architecture; usability
ID GUIDELINES
AB Usability is a highly desired but often ignored software quality. Effective user interfaces tend to increase learnability, effectiveness and user satisfaction. But usability is often neglected in the early stages of software development and is thus frequently not address in a system's architectural design. Furthermore, because usability is often neglected or deferred, it is difficult to estimate the effort specifically spent on adding or improving usability mechanisms in the software architecture and in code. In this work, we present a case study where we analyze the impact of introducing a variety of usability mechanisms to a mobile application and we report on the architectural changes that must be made in the software architecture to accommodate them. We also report on the additional code required to implement these usability mechanisms and we investigate the users' satisfaction of combining and using several usability mechanisms in a mobile application. Finally, we evaluated user responses-both positive and negatives-to these usability mechanisms via a questionnaire involving 25 users from different roles and different organizations and including contextual interviews to analyze the qualitative responses of the subjects. Our results show that apart from the relatively modest modeling and coding effort, the combination of several usability mechanisms seems beneficial for users of mobile systems and increases the satisfaction during the interaction with the system.
C1 [Capilla, Rafael] Univ Rey Juan Carlos, Ciencias Comp, Madrid, Spain.
   [Kazman, Rick] Univ Hawaii Manoa, Honolulu, HI 96822 USA.
   [Romera, Carlos] Univ Rey Juan Carlos, Madrid, Spain.
   [Carrillo, Carlos] Univ Politecn Madrid, Madrid, Spain.
C3 Universidad Rey Juan Carlos; University of Hawaii System; University of
   Hawaii Manoa; Universidad Rey Juan Carlos; Universidad Politecnica de
   Madrid
RP Capilla, R (corresponding author), Univ Rey Juan Carlos, Ciencias Comp, Madrid, Spain.
EM rafael.capilla@urjc.es
RI Carrillo, Carlos/AAA-6776-2019
OI Carrillo, Carlos/0000-0002-5343-3323; Capilla,
   Rafael/0000-0002-6943-1285
CR Ali A., 2014, International Journal on Integrating Technology in Education, V3, P1, DOI [DOI 10.5121/IJITE.2014.3401, https://doi.org/10.5121/ijite.2014.3401]
   [Anonymous], 2014, RELATING SYSTEM QUAL
   Bass L, 2003, J SYST SOFTWARE, V66, P187, DOI 10.1016/S0164-1212(02)00076-6
   Bass L, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING (RELENG), P5, DOI 10.1109/RELENG.2013.6607688
   Bastien JMC, 1999, INTERACT COMPUT, V11, P299, DOI 10.1016/S0953-5438(98)00038-1
   Battey J., 1999, INFOWORLD
   BECK E, 2003, P OZCHI 2003 BRISB A
   Ben Ammar L, 2019, INT J ADV COMPUT SC, V10, P140
   BEVAN N, 1994, BEHAV INFORM TECHNOL, V13, P132, DOI 10.1080/01449299408914592
   Blackwell A., 2003, HCI MODELS THEORIES, P103, DOI [DOI 10.1016/B978-155860808-5/50005-8, 10.1016/B978-155860808-5/50005-8]
   Boiano S., 2012, Proceedings of the Electronic Workshops in Computing (eWiC), British Computer Society, P66
   Carvajal L, 2013, IEEE T SOFTWARE ENG, V39, P1582, DOI 10.1109/TSE.2013.29
   Clements P, 2011, SEI SERIES SOFTWARE
   Donahue GM, 2001, IEEE SOFTWARE, V18, P31, DOI 10.1109/52.903161
   Ericsson KA., 1998, Mind, Culture, and Activity, V5, P178, DOI [DOI 10.1207/S15327884MCA0503_3, 10.1207/s15327884mca0503_3]
   Ferre X, 2003, P INTERACT PORTL
   Ferreira JM, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106195
   Folmer E, 2005, LECT NOTES COMPUT SC, V3425, P38
   Folmer E., 2003, ICSE Workshop on SE-HCI, P61
   Freeman E., 2004, Head First Design Patterns: A Brain-Friendly Guide
   Griffith J., 2002, BUSINESS J
   Harrison R., 2013, J INTERACTION SCI, V1, P1, DOI [10.1186/2194-0827-1-1, DOI 10.1186/2194-0827-1-1]
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Holtzblatt Karen, 1995, Readings in HumanComputer Interaction, P241
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Hussain Azham, 2012, International Journal of Computer Information Systems and Industrial Management Applications, V4, P92
   HUSSAIN A, 2012, IJCSI INT J COMPUT S, V9, P11
   ISO/IEC CD, 2009, CD2501032009 ISOIEC
   Jerome B, 2005, HUMAN CTR SOFTWARE E
   John B, 2009, P 1 ACM SIGCHI S ENG
   John BE, 2005, LECT NOTES COMPUT SC, V3425, P1
   Juristo N, 2007, IEEE T SOFTWARE ENG, V33, P744, DOI 10.1109/TSE.2007.70741
   Juristo N, 2007, J SYST SOFTWARE, V80, P1506, DOI 10.1016/j.jss.2007.01.006
   Kaikkonen A, 2005, J USABILITY STUD, V1, P4
   Kazman R, 2004, ENCY HUMAN COMPUTER
   Kim H., 2002, P 35 HAW INT C SYST
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Kjeldskov J, 2004, INT J HUM-COMPUT ST, V60, P599, DOI 10.1016/j.ijhcs.2003.11.001
   Kondratova I., 2006, INT C NETW INT C SYS, P223
   Lundhal O., 2009, THESIS
   Mansar SL, 2012, PROC TECH, V5, P839, DOI 10.1016/j.protcy.2012.09.093
   Masood M, 2015, PROCD SOC BEHV, V197, P1818, DOI 10.1016/j.sbspro.2015.07.241
   Moreno AM, 2013, COMPUTER, V46, P100, DOI 10.1109/MC.2013.133
   Nielsen J., 1993, USABILITY ENG
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ryan C., 2005, P 28 AUSTRALASIAN C, V38, P115
   Salman HM, 2018, IEEE ACCESS, V6, P22578, DOI 10.1109/ACCESS.2018.2827358
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   Seffah A, 2008, J SYST SOFTWARE, V81, P1845, DOI 10.1016/j.jss.2008.04.037
   Soad GW, 2017, PROC FRONT EDUC CONF
   Swaid S.I., 2018, INT C APPL HUM FACT, P79
   Terrenghi MK, 2005, HUM COMP INT IHCI 05, P1
   Wong C. Y., 2018, INT C US SCI ENG, P93
NR 53
TC 5
Z9 5
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2020
VL 50
IS 12
BP 2145
EP 2168
DI 10.1002/spe.2883
EA AUG 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OO7CG
UT WOS:000561990800001
DA 2024-07-18
ER

PT J
AU Niemi, A
   Teuhola, J
AF Niemi, Arto
   Teuhola, Jukka
TI Burrows-Wheeler post-transformation with effective clustering and
   interpolative coding
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE lossless compression; Burrows-Wheeler transform; move-to-front;
   interpolative coding
ID BWT-STAGE; COMPRESSION; PRINCIPLES
AB Lossless compression methods based on the Burrows-Wheeler transform (BWT) are regarded as an excellent compromise between speed and compression efficiency: they provide compression rates close to the PPM algorithms, with the speed of dictionary-based methods. Instead of the laborious statistics-gathering process used in PPM, the BWT reversibly sorts the input symbols, using as the sort key as many following characters as necessary to make the sort unique. Characters occurring in similar contexts are sorted close together, resulting in a clustered symbol sequence. Run-length encoding and Move-to-Front (MTF) recoding, combined with a statistical Huffman or arithmetic coder, is then typically used to exploit the clustering. A drawback of the MTF recoding is that knowledge of the character that produced the MTF number is lost. In this paper, we present a new, competitive Burrows-Wheeler posttransform stage that takes advantage of interpolative coding-a fast binary encoding method for integer sequences, being able to exploit clusters without requiring explicit statistics. We introduce a fast and simple way to retain knowledge of the run characters during the MTF recoding and use this to improve the clustering of MTF numbers and run-lengths by applying reversible, stable sorting, with the run characters as sort keys, achieving significant improvement in the compression rate, as shown here by experiments on common text corpora.
C1 [Niemi, Arto; Teuhola, Jukka] Univ Turku, Dept Future Technol, Vesilinnantie 5, Turku 20500, Finland.
C3 University of Turku
RP Niemi, A (corresponding author), Univ Turku, Dept Future Technol, Vesilinnantie 5, Turku 20500, Finland.
EM arvani@utu.fi
OI Niemi, Arto/0000-0003-3118-4511
CR Abel J, 2005, IEEE DATA COMPR CONF, P449
   Abel J, 2007, SOFTWARE PRACT EXPER, V37, P247, DOI 10.1002/spe.763
   Abel J, 2010, SOFTWARE PRACT EXPER, V40, P751, DOI 10.1002/spe.982
   Adjeroh D., 2008, The Burrows-Wheeler Transform:: Data Compression, Suffix Arrays, and Pattern Matching
   [Anonymous], 1998, The art of computer programming: Sorting and searching
   Arnavut Z., 2000, Proceedings DCC 2000. Data Compression Conference, P193, DOI 10.1109/DCC.2000.838159
   Awan FS, 2001, LIPT LOSSLESS TEXT T
   Balkenhol B, 2000, IEEE T COMPUT, V49, P1043, DOI 10.1109/12.888040
   Balkenhol B, 1999, DISCRETE STRUCTURES
   BENTLEY JL, 1986, COMMUN ACM, V29, P320, DOI 10.1145/5684.5688
   Burrows M., 1994, BLOCK SORTING LOSSLE, V124, P1
   Chapin B., 1998, HIGHER COMPRESSION B
   Deorowicz S, 2005, INFORM PROCESS LETT, V95, P313, DOI 10.1016/j.ipl.2005.03.008
   Deorowicz S, 2002, SOFTWARE PRACT EXPER, V32, P99, DOI 10.1002/spe.426
   ELIAS P, 1975, IEEE T INFORM THEORY, V21, P194, DOI 10.1109/TIT.1975.1055349
   Fenwick P, 2002, SOFTWARE PRACT EXPER, V32, P1307, DOI 10.1002/spe.484
   Fenwick P, 2003, LOSSLESS COMPRESSION
   Fenwick P, 2007, THEOR COMPUT SCI, V387, P200, DOI 10.1016/j.tcs.2007.07.012
   Fenwick PM, 1996, COMPUT J, V39, P731, DOI 10.1093/comjnl/39.9.731
   Ferragina P, 2005, J ACM, V52, P688, DOI 10.1145/1082036.1082043
   Ferragina P, 2006, ENG COMPRESSION BOOS, P756
   GOLOMB SW, 1966, IEEE T INFORM THEORY, V12, P399, DOI 10.1109/TIT.1966.1053907
   Karkkainen J., 2003, Simple linear work suffix array construction, Automata, Languages and Programming, P943
   Kruse H, 1997, PREPROCESSING TEXT I, P556
   Moffat A, 2000, INFORM RETRIEVAL, V3, P25, DOI 10.1023/A:1013002601898
   Niemi A, 2015, INTERPOLATIVE CODING
   Petri M, 2018, SOFTWARE PRACT EXPER, V48, P974, DOI 10.1002/spe.2556
   Salomon D., 2010, Handbook of Data Compression, V5th
   Teuhola J, 2009, COMPUT J, V52, P368, DOI 10.1093/comjnl/bxn030
   Wirth AI, 2001, IEEE DATA COMPR CONF, P419, DOI 10.1109/DCC.2001.917173
   Zalik B, 2018, INFORM SCIENCES, V439, P39, DOI 10.1016/j.ins.2018.01.045
   Zipf GK, 1950, J CLIN PSYCHOL, V6, P306
NR 32
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2020
VL 50
IS 9
BP 1858
EP 1874
DI 10.1002/spe.2873
EA JUN 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MT2QQ
UT WOS:000543930900001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Dewangan, BK
   Agarwal, A
   Choudhury, T
   Pasricha, A
   Satapathy, SC
AF Dewangan, Bhupesh Kumar
   Agarwal, Amit
   Choudhury, Tanupriya
   Pasricha, Ashutosh
   Chandra Satapathy, Suresh
TI Extensive review of cloud resource management techniques in industry
   4.0: Issue and challenges
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE analysis; cloud computing; Industry 4; 0; optimization; performance
   evaluation; resource management
ID SCHEDULING ALGORITHM; OPTIMIZATION ALGORITHM; GENETIC ALGORITHM; COST;
   EFFICIENT; ENERGY; ALLOCATION; SIMULATION; MECHANISM; MODEL
AB Resource provisioning in the cloud is the most popular business model for any service provider due to profit that is based on how resources are distributed among users in Industry 4.0. Moreover, much research carried out to provide a better resource provisioning system to service providers; however, efficient resource provisioning may save the environments too. This study presents an extensive analysis of different resource provisioning systems based on concert parameters. More than 250 relative research articles have been considered for this study, out of these 125 articles has been processed for comparative analysis on the basis of different performance metrics. This study highlights the classifications of resource management techniques, objective functions, and open research challenges and issues while analyzing resource management techniques. It also provides the depth knowledge of uses of performance metrics utilization based on its classifications.
C1 [Dewangan, Bhupesh Kumar; Agarwal, Amit; Choudhury, Tanupriya] Univ Petr & Energy Studies, Sch Comp Sci, Dehra Dun, Uttarakhand, India.
   [Pasricha, Ashutosh] Schlumberger Asia Ltd, Gurgaon, Haryana, India.
   [Chandra Satapathy, Suresh] KIIT Deemed Univ, Sch Comp Engn, Bhubaneswar, Odisha, India.
C3 University of Petroleum & Energy Studies (UPES); Kalinga Institute of
   Industrial Technology (KIIT)
RP Dewangan, BK (corresponding author), Univ Petr & Energy Studies, Dehra Dun 248007, Uttarakhand, India.
EM bhupesh.dewangan@gmail.com
RI Dewangan, Bhupesh Kumar/Y-9452-2019; Sataphaty, Suresh
   Chandra/AAW-9662-2020
OI Dewangan, Bhupesh Kumar/0000-0001-8116-7563; Choudhury,
   Tanupriya/0000-0002-9826-2759
CR Abdulhamid SM, 2017, APPL SOFT COMPUT, V61, P670, DOI 10.1016/j.asoc.2017.08.048
   Abdullahi M, 2016, FUTURE GENER COMP SY, V56, P640, DOI 10.1016/j.future.2015.08.006
   Addis Bernardetta, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P220, DOI 10.1109/CLOUD.2010.19
   Al Salami N.M., 2009, UbiCC J., V4, P823
   Alkhanak EN, 2018, FUTURE GENER COMP SY, V86, P480, DOI 10.1016/j.future.2018.03.055
   Alsadie D, 2018, P AUSTR COMP SCI WEE, P1, DOI [10.1145/3167918.3167952, DOI 10.1145/3167918.3167952]
   Altmann J, 2014, FUTURE GENER COMP SY, V41, P79, DOI 10.1016/j.future.2014.08.014
   An B., 2010, Proceedings of the 9th International Conference on Autonomous Agents and Multiagent Systems: Volume 1 - Volume 1, AAMAS '10, V1, P981
   [Anonymous], 2010, 2010 IEEE 3 INT C CL
   [Anonymous], ARXIV150407283
   [Anonymous], 2017, IEEE T CLOUD COMPUT
   [Anonymous], 2014, P 8 INT C UB INF MAN
   [Anonymous], 2013, EURO PAR 2013
   [Anonymous], 2017, INT J PURE APPL MATH
   [Anonymous], IEEE 10 INT C IEEE
   Antonescu AF, 2016, FUTURE GENER COMP SY, V54, P260, DOI 10.1016/j.future.2015.01.015
   Arianyan E, 2015, COMPUT ELECTR ENG, V47, P222, DOI 10.1016/j.compeleceng.2015.05.006
   Babu KRR, 2019, SOFTWARE PRACT EXPER, V49, P995, DOI 10.1002/spe.2692
   Bansal N, 2015, PROCEDIA COMPUT SCI, V57, P126, DOI 10.1016/j.procs.2015.07.384
   Banu MU, 2014, ARXIV14022491
   Beloglazov A, 2016, US Patent, Patent No. [9,363,190, 9363190]
   Bruneo D, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P797, DOI 10.1109/CLOUD.2015.110
   Cai XJ, 2017, J SUPERCOMPUT, V73, P3526, DOI 10.1007/s11227-016-1653-7
   Casalicchio E., 2013, Proc. of the 2013 ACM Cloud Autonomic Computing Conf, P1
   Chaisiri S, 2012, IEEE T SERV COMPUT, V5, P164, DOI 10.1109/TSC.2011.7
   Chen Guo-chu, 2005, Information and Control, V34, P318
   Chen YW, 2018, IEEE T SMART GRID, V9, P458, DOI 10.1109/TSG.2016.2609738
   Convolbo MW, 2016, J SUPERCOMPUT, V72, P985, DOI 10.1007/s11227-016-1637-7
   Dai YY, 2015, INT C INTEL HUM MACH, DOI 10.1109/IHMSC.2015.186
   Das S, 2009, STUD COMPUT INTELL, V203, P23, DOI 10.1007/978-3-642-01085-9_2
   Delimitrou C, 2014, ACM SIGPLAN NOTICES, V49, P127, DOI 10.1145/2541940.2541941
   Deng J, 2010, IEEE GLOBE WORK, P1601, DOI 10.1109/GLOCOMW.2010.5700210
   Ding JB, 2016, COMPUT NETW, V94, P231, DOI 10.1016/j.comnet.2015.11.007
   Dorigo M., 1999, Proceedings of the 1999 Congress on Evolutionary Computation-CEC99 (Cat. No. 99TH8406), P1470, DOI 10.1109/CEC.1999.782657
   Dou WC, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3909
   Egwutuoha I. P., 2012, Proceedings of the 2012 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2012), P709, DOI 10.1109/CCGrid.2012.80
   Elster AC, 2016, CLOUDLIGHTNING FRAME
   Fang Y, 2018, INF SCI, V496, P300
   Fargo F, 2014, 2014 INTERNATIONAL CONFERENCE ON CLOUD AND AUTONOMIC COMPUTING (ICCAC 2014), P101, DOI 10.1109/ICCAC.2014.36
   Bittencourt LF, 2011, J INTERNET SERV APPL, V2, P207, DOI 10.1007/s13174-011-0032-0
   Gai KK, 2016, J NETW COMPUT APPL, V59, P46, DOI 10.1016/j.jnca.2015.05.016
   Gao GY, 2017, IEEE T MULTIMEDIA, V19, P836, DOI 10.1109/TMM.2016.2635019
   Gao YQ, 2014, COMPUT ELECTR ENG, V40, P1621, DOI 10.1016/j.compeleceng.2013.11.001
   Garg SK, 2014, J NETW COMPUT APPL, V45, P108, DOI 10.1016/j.jnca.2014.07.030
   Ghasemi S., 2017, Cluster Computing, V21, P1
   Ghobaei-Arani M, 2018, FUTURE GENER COMP SY, V78, P191, DOI 10.1016/j.future.2017.02.022
   Ghobaei-Arani M, 2016, CLUSTER COMPUT, V19, P1017, DOI 10.1007/s10586-016-0574-9
   Guo S., 2016, P 35 C COMPUTER COMM, P1, DOI DOI 10.1109/INFOCOM.2016.7524497
   Hoenisch P, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P17, DOI 10.1109/CLOUD.2015.13
   Iyer GN, 2011, IEEE INT CONF NETWOR, P147, DOI 10.1109/ICON.2011.6168522
   Jala J, 2019, LECT NOTE DATA ENG, V15, P65, DOI 10.1007/978-981-10-8681-6_8
   Jamshidi P, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P95, DOI 10.1145/2593929.2593940
   Jayadivya S., 2012, INT J COMPUTER SCI E, V4, P996
   Jhawar R, 2012, ANN IEEE SYST CONF, P601
   Jin AL, 2018, IEEE T EMERG TOP COM, V6, P45, DOI 10.1109/TETC.2015.2487865
   Kansal NJ, 2015, CONCURR COMP-PRACT E, V27, P1207, DOI 10.1002/cpe.3295
   Kaur P, 2017, J PARALLEL DISTR COM, V101, P41, DOI 10.1016/j.jpdc.2016.11.003
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Khorsand R, 2019, SOFTWARE PRACT EXPER, V49, P1618, DOI 10.1002/spe.2737
   Khorsand R, 2018, SOFTWARE PRACT EXPER, V48, P2147, DOI 10.1002/spe.2627
   Koch F, 2016, FUTURE GENER COMP SY, V55, P473, DOI 10.1016/j.future.2015.03.013
   Kohne A, 2016, PROC 3 WORKSHOP CROS, P6
   Kong WW, 2016, OPTIK, V127, P5099, DOI 10.1016/j.ijleo.2016.02.061
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   Lesch V, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P4, DOI 10.1145/3184407.3184415
   Li X., 2016, SCI PROGRAMMING-NETH, P17
   Li YB, 2017, IEEE SYST J, V11, P96, DOI 10.1109/JSYST.2015.2442994
   Liu K, 2010, INT J HIGH PERFORM C, V24, P445, DOI 10.1177/1094342010369114
   Liu XB, 2014, LECT N MANAG SCI, V28, P41
   Liu Y, 2019, COMPUT ELECTR ENG, V75, P123, DOI 10.1016/j.compeleceng.2019.02.007
   Liu ZP, 2014, COMPUT J, V57, P291, DOI 10.1093/comjnl/bxt009
   Maenhaut PJ, 2019, SOFTWARE PRACT EXPER, V49, P449, DOI 10.1002/spe.2669
   Malawski M, 2015, FUTURE GENER COMP SY, V48, P1, DOI 10.1016/j.future.2015.01.004
   Malik S., 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P280, DOI 10.1109/SERVICES.2011.108
   Marzband M, 2017, IEEE SYST J, V11, P1712, DOI 10.1109/JSYST.2015.2422253
   Meena J, 2016, IEEE ACCESS, V4, P5065, DOI 10.1109/ACCESS.2016.2593903
   Mehta Shikha., 2019, Nature-Inspired Algorithms for Big Data Frameworks, P196
   Mei J, 2017, IEEE T SUST COMPUT, V2, P17, DOI 10.1109/TSUSC.2017.2667706
   Midya S, 2018, J NETW COMPUT APPL, V103, P58, DOI 10.1016/j.jnca.2017.11.016
   Min WW, 2015, IEEE INT C BIOINFORM, P151, DOI 10.1109/BIBM.2015.7359673
   Mirjalili S, 2015, ADV ENG SOFTW, V83, P80, DOI 10.1016/j.advengsoft.2015.01.010
   Mirjalili S, 2014, ADV ENG SOFTW, V69, P46, DOI 10.1016/j.advengsoft.2013.12.007
   Mosa A, 2016, J CLOUD COMPUT-ADV S, V5, DOI 10.1186/s13677-016-0067-7
   Moschakis I. A., 2011, 2011 IEEE Symposium on Computers and Communications (ISCC 2011), P418, DOI 10.1109/ISCC.2011.5983873
   Nachiappan R, 2017, J NETW COMPUT APPL, V97, P35, DOI 10.1016/j.jnca.2017.08.011
   Navimipour Nima Jafari, 2015, International Journal of Modeling and Optimization, V5, P44, DOI 10.7763/IJMO.2015.V5.434
   Nir M, 2018, IEEE T CLOUD COMPUT, V6, P99, DOI 10.1109/TCC.2015.2469665
   Oprescu A., 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P351, DOI 10.1109/CloudCom.2010.32
   Panda SK, 2017, J SUPERCOMPUT, V73, P2730, DOI 10.1007/s11227-016-1952-z
   Poola D, 2014, PROCEDIA COMPUT SCI, V29, P523, DOI 10.1016/j.procs.2014.05.047
   Prodan R, 2011, J GRID COMPUT, V9, P531, DOI 10.1007/s10723-011-9196-x
   Qiu X., 2019, IEEE Transactions on Cloud Computing, V7, P693, DOI DOI 10.1109/TCC.2017.2691323
   Reddy KS, 2017, INT J SUSTAIN ENERGY, V36, P619, DOI 10.1080/14786451.2015.1069293
   Sahni J, 2018, IEEE T CLOUD COMPUT, V6, P2, DOI 10.1109/TCC.2015.2451649
   Salehi MA, 2010, LECT NOTES COMPUT SC, V6081, P351
   Sampaio AM, 2018, SUSTAIN COMPUT-INFOR, V19, P315, DOI 10.1016/j.suscom.2017.11.006
   Sedaghat M, 2014, 2014 INTERNATIONAL CONFERENCE ON CLOUD AND AUTONOMIC COMPUTING (ICCAC 2014), P131, DOI 10.1109/ICCAC.2014.16
   Serrano D, 2016, FUTURE GENER COMP SY, V54, P233, DOI 10.1016/j.future.2015.03.018
   Sheikhalishahi M, 2015, SOFTWARE PRACT EXPER, V45, P161, DOI 10.1002/spe.2223
   Sivanandam S.N., 2008, INTRO GENETIC ALGORI, P165
   Son S, 2013, IEEE ACM INT SYMP, P168, DOI 10.1109/CCGrid.2013.81
   Su S, 2013, PARALLEL COMPUT, V39, P177, DOI 10.1016/j.parco.2013.03.002
   Tafsiri SA, 2018, J SYST SOFTWARE, V137, P322, DOI 10.1016/j.jss.2017.11.044
   Tang CG, 2018, INT CONF BIG DATA, P198, DOI 10.1109/BigComp.2018.00037
   Tao F, 2014, APPL SOFT COMPUT, V19, P264, DOI 10.1016/j.asoc.2014.01.036
   Tesfatsion SK, 2016, PR INT CONF AUTONOM, P85, DOI 10.1109/ICAC.2016.32
   Van HN, 2009, CLOUD: 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING CHALLENGES OF CLOUD COMPUTING, P1, DOI 10.1109/CLOUD.2009.5071526
   Vashistha A, 2018, PROCEEDINGS OF THE 1ST ACM SIGCAS CONFERENCE ON COMPUTING AND SUSTAINABLE SOCIETIES (COMPASS 2018), DOI 10.1145/3209811.3209818
   Viswanathan H, 2015, IEEE T PARALL DISTR, V26, P2363, DOI 10.1109/TPDS.2014.2345057
   Wan JF, 2016, IEEE SENS J, V16, P7373, DOI 10.1109/JSEN.2016.2565621
   Wang LJ, 2017, IEEE T CYBERNETICS, V47, P473, DOI 10.1109/TCYB.2016.2519525
   Wei-Yu Lin, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P591, DOI 10.1109/CCGRID.2010.92
   Wenbing Zhao, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P67, DOI 10.1109/CLOUD.2010.26
   Wu LL, 2014, IEEE T SERV COMPUT, V7, P465, DOI 10.1109/TSC.2013.49
   Wu ZJ, 2013, J SUPERCOMPUT, V63, P256, DOI 10.1007/s11227-011-0578-4
   Xie N, 2017, PROCEEDINGS OF 2017 3RD IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATIONS (ICCC), P578, DOI 10.1109/CompComm.2017.8322611
   Xu CZ, 2012, J PARALLEL DISTR COM, V72, P95, DOI 10.1016/j.jpdc.2011.10.003
   Yuan HT, 2017, IEEE T AUTOM SCI ENG, V14, P337, DOI 10.1109/TASE.2016.2526781
   Yusoh Z. I. M., 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P590, DOI 10.1109/CLOUD.2012.61
   Zhang H, 2016, IEEE T COMPUT, V65, P805, DOI 10.1109/TC.2015.2435784
   Zhang JX, 2018, FUTURE GENER COMP SY, V89, P286, DOI 10.1016/j.future.2018.06.034
   Zhao G, 2014, INT J GRID DISTRIB, V7, P33, DOI 10.14257/ijgdc.2014.7.1.04
   Zhao YL, 2015, PROC INT CONF PARAL, P510, DOI 10.1109/ICPP.2015.60
   Zhou ZY, 2016, IEEE INTERNET THINGS, V3, P428, DOI 10.1109/JIOT.2015.2497712
   Zibin Zheng, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P398, DOI 10.1109/ISSRE.2010.28
   Zuo LY, 2017, IEEE ACCESS, V5, P22067, DOI 10.1109/ACCESS.2016.2633288
NR 126
TC 13
Z9 15
U1 1
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2373
EP 2392
DI 10.1002/spe.2810
EA FEB 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000514834800001
DA 2024-07-18
ER

PT J
AU Marchini, S
   Vigna, S
AF Marchini, Stefano
   Vigna, Sebastiano
TI Compact Fenwick trees for dynamic ranking and selection
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compact data structures; dynamic bit vectors; prefix sums
AB The Fenwick tree is a classical implicit data structure that stores an array in such a way that modifying an element, accessing an element, computing a prefix sum and performing a predecessor search on prefix sums all take logarithmic time. We introduce a number of variants which improve the classical implementation of the tree: in particular, we can reduce its size when an upper bound on the array element is known, and we can perform much faster predecessor searches. Our aim is to use our variants to implement an efficient dynamic bit vector: our structure is able to perform updates, ranking and selection in logarithmic time, with a space overhead in the order of a few percents, outperforming existing data structures with the same purpose. Along the way, we highlight the pernicious interplay between the arithmetic behind the Fenwick tree and the structure of current CPU caches, suggesting simple solutions that improve performance significantly.
C1 [Marchini, Stefano; Vigna, Sebastiano] Univ Milan, Dipartimento Informat, Via Celoria 18, I-20133 Milan, MI, Italy.
C3 University of Milan
RP Vigna, S (corresponding author), Univ Milan, Dipartimento Informat, Via Celoria 18, I-20133 Milan, MI, Italy.
EM vigna@acm.org
RI Vigna, Sebastiano/R-5285-2017
OI Vigna, Sebastiano/0000-0002-3257-651X
CR Beame P, 2002, J COMPUT SYST SCI, V65, P38, DOI 10.1006/jcss.2002.1822
   Bille P, 2017, LECT NOTES COMPUT SC, V10508, P91, DOI 10.1007/978-3-319-67428-5_8
   FENWICK PM, 1994, SOFTWARE PRACT EXPER, V24, P327, DOI 10.1002/spe.4380240306
   Gog S, 2014, SOFTWARE PRACT EXPER, V44, P1287, DOI 10.1002/spe.2198
   Harel D, 1980, THESIS
   Hon WK, 2011, THEOR COMPUT SCI, V412, P5176, DOI 10.1016/j.tcs.2011.05.023
   Jacobson G, 1989, SPACE EFFICIENT STAT, P549
   Jones E, 2019, SCIPY OPEN SOURCE SC
   KEMENY JG, 1959, DAEDALUS, V88, P577
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Knuth D.E., 2011, The Art of Computer Programming: Seminumerical Algorithms, V1st
   Mäkinen V, 2008, ACM T ALGORITHMS, V4, DOI 10.1145/1367064.1367072
   Prezza N, 2017, 16 INT S EXPT ALG SE, V75, P11
   Raman R, 2001, LECT NOTES COMPUT SC, V2125, P426
   Vigna S, 2008, LECT NOTES COMPUT SC, V5038, P154, DOI 10.1007/978-3-540-68552-4_12
NR 15
TC 3
Z9 3
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1184
EP 1202
DI 10.1002/spe.2791
EA JAN 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT6RF
UT WOS:000508308200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Xu, XL
   Chen, Y
   Zhang, XY
   Liu, QX
   Liu, XH
   Qi, LY
AF Xu, Xiaolong
   Chen, Yi
   Zhang, Xuyun
   Liu, Qingxiang
   Liu, Xihua
   Qi, Lianyong
TI A blockchain-based computation offloading method for edge computing in
   5G networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE blockchain; computation offloading; edge computing; 5G
ID CLOUD; SECURITY
AB Edge computing (EC) emerges as a novel computing paradigm to offload computing tasks from user equipments (UEs) to edge notes (ENs) in fifth-generation networks, which definitely breaks the resource limitation of UEs to a certain degree. However, it is troublesome to guarantee the overall operating performance of ENs due to the uneven distributed resource demands of UEs, the resulting transmission delay and the data loss for computation offloading between the covered EN and the deployed destination EN. In view of this challenge, a blockchain-based computation offloading method, named BCO, is proposed in this paper. Technically, since blockchain is a promising technique for the decentralized system, a blockchain-based EC framework is designed to degrade the data loss possibility by integrating blockchain and EC. Then, the nondominated sorting genetic algorithm, the third version (NSGA-III), is leveraged to acquire the balanced offloading strategies. Furthermore, by taking advantage of Simple Additive Weighting and Multiple Criteria Decision Making, the optimal offloading strategy is identified. Finally, systematic experiments and analyses on the comparative experiment are conducted to verify the efficiency of our proposed method BCO.
C1 [Xu, Xiaolong; Chen, Yi; Liu, Qingxiang; Liu, Xihua] Nanjing Univ Informat Sci & Technol, Sch Comp & Software, Nanjing, Jiangsu, Peoples R China.
   [Xu, Xiaolong] Nanjing Univ Informat Sci & Technol, Jiangsu Engn Ctr Network Monitoring, Nanjing, Jiangsu, Peoples R China.
   [Xu, Xiaolong] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Zhang, Xuyun] Univ Auckland, Dept Elect & Comp Engn, Auckland, New Zealand.
   [Qi, Lianyong] Qufu Normal Univ, Sch Informat Sci & Engn, Qufu 276826, Peoples R China.
C3 Nanjing University of Information Science & Technology; Nanjing
   University of Information Science & Technology; Nanjing University;
   University of Auckland; Qufu Normal University
RP Qi, LY (corresponding author), Qufu Normal Univ, Sch Informat Sci & Engn, Qufu 276826, Peoples R China.
EM lianyongqi@gmail.com
RI zhang, xu/GYE-3558-2022; ZHANG, XUCHEN/KBB-7989-2024; Xu,
   Xiaolong/U-2547-2019; Qi, Lianyong/AAO-2681-2020; Liu,
   Qingxiang/AHE-4780-2022
OI Xu, Xiaolong/0000-0003-4879-9803; Zhang, Xuyun/0000-0001-7353-4159; Liu,
   Qingxiang/0000-0003-2277-830X
FU National Natural Science Foundation of China [61702277, 61872219];
   Priority Academic Program Development of Jiangsu Higher Education
   Institutions; Jiangsu Collaborative Innovation Center on Atmospheric
   Environment and Equipment Technology
FX National Natural Science Foundation of China, Grant/Award Number:
   61702277 and 61872219; Priority Academic Program Development of Jiangsu
   Higher Education Institutions; Jiangsu Collaborative Innovation Center
   on Atmospheric Environment and Equipment Technology
CR Agiwal M, 2016, IEEE COMMUN SURV TUT, V18, P1617, DOI 10.1109/COMST.2016.2532458
   BISWAS K, 2016, 2016 IEEE 18 INT C H, DOI [DOI 10.1109/HPCC-SMARTCITY-DSS.2016.178, 10.1109/HPCC-SmartCity-DSS.2016.0198]
   Chen X, 2016, IEEE ACM T NETWORK, V24, P2827, DOI 10.1109/TNET.2015.2487344
   Cheng RZ, 2018, CLIN BIOMECH, V55, P1, DOI 10.1016/j.clinbiomech.2018.03.023
   Cho HH, 2014, IEEE ACCESS, V2, P1196, DOI 10.1109/ACCESS.2014.2357435
   Dadgarpour A, 2017, IEEE T ANTENN PROPAG, V65, P4263, DOI 10.1109/TAP.2017.2708091
   Dorri A, 2017, INT CONF PERVAS COMP
   Hallawi H, 2017, FUTURE GENER COMP SY, V69, P1, DOI 10.1016/j.future.2016.10.025
   Heilman E, 2016, LECT NOTES COMPUT SC, V9604, P43, DOI 10.1007/978-3-662-53357-4_4
   Hu Y., 2015, MOBILE EDGE COMPUTIN, P1
   Iuon-Chang Lin, 2017, International Journal of Network Security, V19, P653, DOI 10.6633/IJNS.201709.19(5).01
   Joshi AP, 2018, MATH FDN COMPUT, V1, P121, DOI 10.3934/mfc.2018007
   Liu H, 2018, IEEE NETWORK, V32, P78, DOI 10.1109/MNET.2018.1700344
   Mao YJ, 2017, INT GEOL REV, V59, P1276, DOI [10.1109/COMST.2017.2745201, 10.1080/00206814.2016.1209435]
   Monavar FM, 2017, IEEE T ANTENN PROPAG, V65, P1108, DOI 10.1109/TAP.2017.2662208
   Fajardo JO, 2016, MOBILE NETW APPL, V21, P564, DOI 10.1007/s11036-016-0752-2
   Peng K, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/8267838
   Rappaport TS, 2013, IEEE ACCESS, V1, P335, DOI 10.1109/ACCESS.2013.2260813
   Ren L, 2019, FUTURE GENER COMP SY, V94, P601, DOI 10.1016/j.future.2018.12.009
   Rimal BP, 2017, IEEE COMMUN MAG, V55, P192, DOI 10.1109/MCOM.2017.1600156CM
   Shi WS, 2016, COMPUTER, V49, P78, DOI 10.1109/MC.2016.145
   Shirazi SN, 2017, IEEE J SEL AREA COMM, V35, P2586, DOI 10.1109/JSAC.2017.2760478
   Wang CX, 2014, IEEE COMMUN MAG, V52, P122, DOI 10.1109/MCOM.2014.6736752
   Wang XK, 2019, IEEE NETWORK, V33, P64, DOI 10.1109/MNET.2018.1800192
   Wang XK, 2017, IEEE COMMUN MAG, V55, P80, DOI 10.1109/MCOM.2017.1700360
   Wu FG, 2018, CMC-COMPUT MATER CON, V56, P19, DOI 10.3970/cmc.2018.02664
   Xiong ZH, 2018, IEEE COMMUN MAG, V56, P33, DOI 10.1109/MCOM.2018.1701095
   Xiong ZH, 2018, IEEE WCNC
   Xu XL, 2018, SECUR COMMUN NETW, DOI 10.1155/2018/8180451
   Xu XL, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/6421607
   Yli-Huumo J, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0163477
   Zaidi AA, 2016, IEEE COMMUN MAG, V54, P90, DOI 10.1109/MCOM.2016.1600336CM
   Zhang J, 2017, IEEE ACCESS, V5, P15893, DOI 10.1109/ACCESS.2017.2690664
   Zhang JX, 2018, CMC-COMPUT MATER CON, V56, P123, DOI 10.3970/cmc.2018.03728
   Zheng ZB, 2018, INT J WEB GRID SERV, V14, P352, DOI 10.1504/IJWGS.2018.095647
   Zheng ZB, 2017, IEEE INT CONGR BIG, P557, DOI 10.1109/BigDataCongress.2017.85
   Zyskind G, 2015, 2015 IEEE SECURITY AND PRIVACY WORKSHOPS (SPW), P180, DOI 10.1109/SPW.2015.27
NR 37
TC 50
Z9 52
U1 1
U2 55
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2021
VL 51
IS 10
SI SI
BP 2015
EP 2032
DI 10.1002/spe.2749
EA SEP 2019
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UN1VW
UT WOS:000485398400001
DA 2024-07-18
ER

PT J
AU Harper-Cyr, C
   Dagenais, MR
   Bushehri, AS
AF Harper-Cyr, Christian
   Dagenais, Michel R.
   Bushehri, Ahmad S.
TI Fast and flexible tracepoints in x86
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic instrumentation; dynamic tracing; instrumentation; tracing; x86
AB Tracing is often the most effective technique for analyzing the performance of complex multithreaded applications. This paper presents an improvement on existing techniques for dynamic tracepoint insertion. To add a tracepoint, the technique inserts a jump at the tracing point, possibly replacing several shorter instructions. This jump embeds trap instructions inside its offset at the address of every replaced instruction. This makes the jump thread safe if any thread is about to execute a replaced instruction. It also makes it jump safe if a jump landing pad is at one of the replaced instructions. In both cases, a trap will be raised, and the thread can be redirected to the out-of-line equivalent instruction. The use of a jump instead of a trap to execute the tracepoint improves the performance of the execution. It also adds the flexibility to place the tracepoint at almost any instruction, since multiple instructions can be replaced atomically and safely. The downside of this technique is the increased memory usage, since it requires unaligned allocations with high external fragmentation.
C1 [Harper-Cyr, Christian; Dagenais, Michel R.; Bushehri, Ahmad S.] Ecole Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Harper-Cyr, C (corresponding author), Ecole Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ H3T 1J4, Canada.
EM christian.harper-cyr@polymtl.ca
OI Harper-Cyr, Christian/0000-0002-8691-7404
FU NSERC; Prompt; Ericsson; Google; EfficiOS; Ciena
FX NSERC; Prompt; Ericsson; Ciena; Google; EfficiOS
CR [Anonymous], 2018, LINUX PROGRAMMERS MA
   [Anonymous], PERF EXAMPLES
   [Anonymous], INT 64 IA 32 ARCH SO
   [Anonymous], INT 64 IA 32 ARCH SO
   Blem E., 2013, DETAILED ANAL CONT A
   Buck B, 2000, INT J HIGH PERFORM C, V14, P317, DOI 10.1177/109434200001400404
   Desnoyers M, 2009, IEEE T PARALL DISTR, V23, P375
   Dronamraju S., 2018, UPROBE TRACER UPROBE
   Free Software Foundation Inc, 2018, DEB GDB
   Gebai M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3158644
   Google, 2018, GOOGL BENCHM MICR SU
   Harper-Cyr C, CHARPERCYR DYNTRACE
   Hiramatsu M, 2007, P LIN S 2007 OTT CAN
   Hiramatsu M, 2018, KPROBE BASED EVENT T
   Intel, 2018, INT 64 IA 32 ARCH C, V2C
   Intel, 2018, INT 64 IA 32 ARCH A, V2A
   Intel, 2018, INT 64 IA 32 ARCH D, V2D
   Intel, 2018, INT 64 IA 32 ARCH C, V3C
   Intel, 2018, INT 64 IA 32 ARCH D, V3D
   Intel, 2018, INT 64 IA 32 ARCH B, V3B
   Intel, 2018, INT 64 IA 32 ARCH A, V3A
   Intel, 2018, INT 64 IA 32 ARCH B, V2B
   Keniston J, 2018, KERNEL PROBES KPROBE
   Lu Hongjiu, 2018, SYSTEM V APPL BINARY
   Nethercote N., 2003, Electronic Notes in Theoretical Computer Science, V89, DOI 10.1016/S1571-0661(04)81042-9
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Prasad V., 2005, Locating System Problems using Dynamic Instrumentation
   Shebbs S, 2009, P GCC DEV SUMM MONTR
   Torvalds L, 2018, LINUX KERNEL V4 16 1
   Zhu H, 2011, LINUX KERNEL GDB TRA
NR 30
TC 2
Z9 4
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2019
VL 49
IS 12
BP 1712
EP 1727
DI 10.1002/spe.2746
EA SEP 2019
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JH7QQ
UT WOS:000484728500001
DA 2024-07-18
ER

PT J
AU Shi, PC
   Wang, HM
   Yang, SZ
   Chen, C
   Yang, WT
AF Shi, Peichang
   Wang, Huaimin
   Yang, Shangzhi
   Chen, Chang
   Yang, Wentao
TI Blockchain-based trusted data sharing among trusted stakeholders in IoT
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE blockchain; Internet of Things; large-scale cooperation; trusted data
   sharing
ID INTERNET; THINGS; CHALLENGES
AB Sharing trusted data among trusted stakeholders is very important to large-scale Internet of Things (IoT) applications. However, the entities and organizations involved in IoT naturally lack trusted relationships, which poses significant challenges to the above vision. Specifically, the first challenge is to ensure that the data in the physical world can be objectively and truly injected into the information world of IoT. The second is to ensure the credibility of the entities' identities in IoT. The third is to ensure the authenticity of data, the credibility of identity, and the reliable transmission of data when a third trusted party is unable to provide the expected trusted services. In view of the above challenges, this paper proposes a secure and lightweight triple-trusting architecture (SLTA), which fully uses a blockchain-related supporting technology. The architecture includes an oracle-based data collection mechanism, which ensures that the data collected from edge devices of IoT cannot be modified, and the distributed identity management mechanism, which enhances personal privacy, security, and control of digital identities. Furthermore, a series of innovative designs for applying the blockchain to special large-scale cooperation scenario in IoT are proposed, which is also a part of the key mechanisms of the SLTA. The innovative design includes a new software-defined blockchain structure model and a lightweight Byzantine fault-tolerant algorithm that provides credible support for decentralized data collection, identity management, and data transfer, as well as low-overhead sequential storage mechanism.
C1 [Shi, Peichang; Wang, Huaimin; Yang, Shangzhi] Natl Univ Def Technol, Coll Comp Sci, Changsha 410073, Hunan, Peoples R China.
   [Chen, Chang; Yang, Wentao] Ziggurat Technol, Xian, Shaanxi, Peoples R China.
   [Yang, Wentao] Tsinghua Univ, Sch Econ & Management, Beijing 100084, Peoples R China.
C3 National University of Defense Technology - China; Tsinghua University
RP Shi, PC (corresponding author), Natl Univ Def Technol, Coll Comp Sci, Changsha 410073, Hunan, Peoples R China.
EM pcshi.nudt@gmail.com
OI Shi, Peichang/0000-0002-0973-7899
FU National Key R&D Program of China [2016YFB1000100]; National Natural
   Science Foundation of China [61772030]; GF Innovative Research Program
FX National Key R&D Program of China, Grant/Award Number: 2016YFB1000100;
   National Natural Science Foundation of China, Grant/Award Number:
   61772030; GF Innovative Research Program
CR Adler J, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P1145, DOI 10.1109/Cybermatics_2018.2018.00207
   Al-Turjman F, 2017, IEEE WIREL COMMUN, V24, P126, DOI 10.1109/WCM.2017.1700054
   Alvi SA, 2015, AD HOC NETW, V33, P87, DOI 10.1016/j.adhoc.2015.04.006
   Ambrosin M, 2016, IEEE MICRO, V36, P25, DOI 10.1109/MM.2016.101
   Ayoade G, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P15, DOI 10.1109/IRI.2018.00011
   Bader A, 2017, IEEE COMMUN MAG, V55, P138, DOI 10.1109/MCOM.2017.1600604CM
   Baird L, 2016, Swirlds, Inc.Technical Report SWIRLDS-TR-2016
   Castro M, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P173, DOI 10.1145/571637.571640
   Choi S, 2018, INT C ADV COMP COMM
   Conti M, 2018, FUTURE GENER COMP SY, V78, P544, DOI 10.1016/j.future.2017.07.060
   Dorri Ali, 2017, 2017 IEEE/ACM Second International Conference on Internet-of-Things Design and Implementation (IoTDI), P173, DOI 10.1145/3054977.3055003
   Dorri Ali, 2017, 2017 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops), P618, DOI 10.1109/PERCOMW.2017.7917634
   Eyal I, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P45
   Gilad Y, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P51, DOI 10.1145/3132747.3132757
   Hassanein H, 2017, INT C DISTR COMP SEN
   Khan MA, 2018, FUTURE GENER COMP SY, V82, P395, DOI 10.1016/j.future.2017.11.022
   Kotla R, 2009, ACM T COMPUT SYST, V27, DOI [10.1145/1323293.1294267, 10.1145/1658357.1658358]
   Lagutin D., 2019, WORKSH DEC IOT SYST
   Leal B, 2010, INTERNET OF THINGS-BOOK, P3, DOI 10.1007/978-1-4419-1674-7_1
   Long CC, 2018, IEEE T MULTIMEDIA, V20, P1126, DOI 10.1109/TMM.2017.2764330
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P17, DOI 10.1145/2976749.2978389
   Nakamoto S., 2008, DECENTRAL BUS REV
   Ongaro Diego, 2014, 2014 USENIX ANN TECH, DOI DOI 10.5555/2643634.2643666
   Praveen Kumar M., 2017, INT J COMPUTER SCI M, V6, p[10, 26]
   Rahman H, 2016, 2016 CLOUDIFICATION OF THE INTERNET OF THINGS (CIOT)
   Ramachandran G. S., 2018, BLOCKCHAIN IOT OPPOR
   Taherkordi Amir, 2017, 2017 IEEE/ACM Second International Conference on Internet-of-Things Design and Implementation (IoTDI), P317, DOI 10.1145/3054977.3057295
   Wang HM, 2017, INT CON DISTR COMP S, P1846, DOI 10.1109/ICDCS.2017.237
   Whitmore A, 2015, INFORM SYST FRONT, V17, P261, DOI 10.1007/s10796-014-9489-2
   Wood T, 2011, P 6 C COMP SYST EURO
   Xiaoyang Zhu, 2017, 2017 International Conference on Cloud and Autonomic Computing (ICCAC), P69, DOI 10.1109/ICCAC.2017.14
   Yu B, 2018, IEEE CLOUD COMPUT, V5, P12, DOI 10.1109/MCC.2018.043221010
   Zarpelao BB, 2017, J NETW COMPUT APPL, V84, P25, DOI 10.1016/j.jnca.2017.02.009
   Zheng ZB, 2018, INT J WEB GRID SERV, V14, P352, DOI 10.1504/IJWGS.2018.095647
NR 34
TC 38
Z9 40
U1 3
U2 40
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2021
VL 51
IS 10
SI SI
BP 2051
EP 2064
DI 10.1002/spe.2739
EA AUG 2019
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UN1VW
UT WOS:000479152200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Drave, I
   Hillemacher, S
   Greifenberg, T
   Kriebel, S
   Kusmenko, E
   Markthaler, M
   Orth, P
   Salman, KS
   Richenhagen, J
   Rumpe, B
   Schulze, C
   von Wenckstern, M
   Wortmann, A
AF Drave, Imke
   Hillemacher, Steffen
   Greifenberg, Timo
   Kriebel, Stefan
   Kusmenko, Evgeny
   Markthaler, Matthias
   Orth, Philipp
   Salman, Karin Samira
   Richenhagen, Johannes
   Rumpe, Bernhard
   Schulze, Christoph
   von Wenckstern, Michael
   Wortmann, Andreas
TI SMArDT modeling for automotive software testing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automotive software engineering; model-based testing; test case creation
AB Efficient testing is a crucial prerequisite to engineer reliable automotive software successfully. However, manually deriving test cases from ambiguous textual requirements is costly and error-prone. Model-based software engineering captures requirements in structured, comprehensible, and formal models, which enables early consistency checking and verification. Moreover, these models serve as an indispensable basis for automated test case derivation. To facilitate automated test case derivation for automotive software engineering, we conducted a survey with testing experts of the BMW Group and conceived a method to extend the BMW Group's specification method for requirements, design, and test methodology by model-based test case derivation. Our method is realized for a variant of systems modeling language activity diagrams tailored toward testing automotive software and a model transformation to derive executable test cases. Hereby, we can address many of the surveyed practitioners' challenges and ultimately facilitate quality assurance for automotive software.
C1 [Drave, Imke; Hillemacher, Steffen; Greifenberg, Timo; Kriebel, Stefan; Kusmenko, Evgeny; Markthaler, Matthias; Salman, Karin Samira; Rumpe, Bernhard; Schulze, Christoph; von Wenckstern, Michael; Wortmann, Andreas] Rhein Westfal TH Aachen, Software Engn, Aachen, Germany.
   [Kriebel, Stefan; Markthaler, Matthias] BMW Grp, Dev Elect Drive, Munich, Germany.
   [Orth, Philipp; Richenhagen, Johannes] FEV Europe GmbH, Aachen, Germany.
C3 RWTH Aachen University; BMW AG
RP Markthaler, M (corresponding author), BMW Grp, Dept Dev Elect Drive, D-80809 Munich, Germany.
EM matthias.markthaler@bmw.de
RI ; Rumpe, Bernhard/S-8216-2016
OI Wortmann, Andreas/0000-0003-3534-253X; Hillemacher,
   Steffen/0000-0002-6819-9031; Rumpe, Bernhard/0000-0002-2147-1966
CR Altinger Harald, 2014, P 2014 WORKSH JOIN A, P1
   [Anonymous], 2017, MBTSUITE TESTING FRA
   [Anonymous], 2006, V MOD XT 1
   [Anonymous], 2011, ISO 262622011
   [Anonymous], 2011, AIB201107 RWTH AACH
   Bertram V, 2016, P INT WORKSH OCL TEX
   Bertram V, 2017, INT C MOD DRIV ENG S
   Bolton C, 2000, LECT NOTES COMPUT SC, V1945, P77
   Broy M., 2006, 28th International Conference on Software Engineering Proceedings, P33, DOI 10.1145/1134285.1134292
   Broy M., 2005, Springer LNCS
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dias Neto AC, 2007, P 1 ACM INT WORKSH E
   Ebert C, 2017, IEEE SOFTWARE, V34, P33, DOI 10.1109/MS.2017.82
   Feiler PH., 2012, Model-based engineering with AADL: An introduction to the SAE architecture analysis design language
   France R, 2007, FUT SOFTW ENG FOSE M
   Hamilton MH, 2007, 17 INT S INT COUNC S
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Hettab A, 2015, P 8 INT C C COMP SCI
   Hillemacher S, 2018, P 6 INT C MOD DRIV E
   Holldobler K., 2021, MontiCore Language Workbench and Library Handbook
   Kansomkeat S, 2003, P 2003 ANN RES C S A
   Keum C, 2006, TESTING COMMUNICATIN
   Khandai M, 2011, INT J COMPUTER SCI I, V2, P1172
   Kriebel S, 2018, TAG DAGST WORKSH MBE
   Kusmenko E, 2018, P 6 INT C MOD DRIV E
   Lasalle J, 2011, P 1 INT WORKSH END T
   Maoz S, 2014, P 36 INT C SOFTW ENG
   Maoz S, 2013, JOINT M EUR SOFTW EN
   Maoz S, 2015, GI EDITION LECT NOTE, V239, P110
   Markthaler M, 2018, 2018 IEEE ACM 40 INT
   MathWorks, 2018, SIM US GUID
   Modelica Association, 2005, MOD LANG SPEC
   Mohr D, 2013, MCKINSEY CO AUTOMOT, V28, P2014
   Mosterman P, 2011, Model-based testing for embedded systems
   Object Management Group, 2010, OMG UN MOD LANG OMG
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   OMG, 2015, OMG SYST MOD LANG OM
   Prasad B., 1997, PRICING STRATEGY PRA, V5, P132
   PRETSCHNER A, 2005, P 27 INT C SOFTW ENG
   Pretschner A., 2004, INT J SOFTW TOOLS TE, V5, P140, DOI DOI 10.1007/S10009-003-0128-3
   Rauch A, 2012, IEEE INT VEH S ALC H
   Richenhagen J, 2016, P 20 INT SYST SOFTW
   Rumpe Bernhard, 2018, Principles of Modeling - Essays Dedicated to Edward A. Lee on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 10760), P383, DOI 10.1007/978-3-319-95246-8_23
   Rumpe B, 2003, FORMAL METHODS COMPO
   Rumpe B., 2017, Agile Modeling with UML: Code Generation, Testing, Refactoring
   Rumpe B, 2015, P 19 INT C SOFTW PRO
   Rumpe Bernhard, 2016, Modeling with UML: Language, Concepts, Methods
   Schlegel C, 2009, IT C ADV ROB MUN GER
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Shirole M, 2011, P 4 IND SOFTW ENG C
   Spillner A, 2011, OBJEKTSPEKTRUM, P2011
   Sugunnasil P, 2016, INT COMPUT SCI ENG
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Tian J., 2005, Software Quality Engineering: Testing, Quality Assurance, and Quantifiable Improvement
   Utting M., 2010, Practical model-based testing: a tools approach
   Volter M., 2013, MODEL DRIVEN SOFTWAR
   Vu T-D, 2015, P 6 INT S INF COMM T
   Wei<ss>leder S, 2011, OBJEKTSPEKTRUM, V2011, P59
   Yuan J, 2006, J COMPUT RES DEV, V1, P8
   Yue T., 2015, P INT S SOFTW TEST A, P397
NR 60
TC 21
Z9 21
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2019
VL 49
IS 2
SI SI
BP 301
EP 328
DI 10.1002/spe.2650
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0GK
UT WOS:000459864300009
DA 2024-07-18
ER

PT J
AU Ganino, G
   Lembo, D
   Mecella, M
   Scafoglieri, F
AF Ganino, Giulio
   Lembo, Domenico
   Mecella, Massimo
   Scafoglieri, Federico
TI Ontology population for open-source intelligence: A GATE-based solution
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE general architecture for text engineering (GATE); information
   extraction; internet as a data source; ontology population
ID DATA ACCESS
AB Open-Source INTelligence is intelligence based on publicly available sources such as news sites, blogs, forums, etc. The Web is the primary source of information, but once data are crawled, they need to be interpreted and structured. Ontologies may play a crucial role in this process, but because of the vast amount of documents available, automatic mechanisms for their population are needed, starting from the crawled text. This paper presents an approach for the automatic population of predefined ontologies with data extracted from text and discusses the design and realization of a pipeline based on the General Architecture for Text Engineering system, which is interesting for both researchers and practitioners in the field. Some experimental results that are encouraging in terms of extracted correct instances of the ontology are also reported. Furthermore, the paper also describes an alternative approach and provides additional experiments for one of the phases of our pipeline, which requires the use of predefined dictionaries for relevant entities. Through such a variant, the manual workload required in this phase was reduced, still obtaining promising results.
C1 [Ganino, Giulio; Lembo, Domenico; Mecella, Massimo; Scafoglieri, Federico] Sapienza Univ Roma, Dipartimento Ingn Informat Automat & Gest, Rome, Italy.
   [Mecella, Massimo] CINI, Lab Nazl Cyber Secur, Rome, Italy.
C3 Sapienza University Rome
RP Mecella, M (corresponding author), Sapienza Univ Roma, Dipartimento Ingn Informat Automat & Gest, Rome, Italy.; Mecella, M (corresponding author), CINI, Lab Nazl Cyber Secur, Rome, Italy.
EM mecella@diag.uniroma1.it
OI Scafoglieri, Federico Maria/0000-0003-1257-2404; LEMBO,
   Domenico/0000-0002-0628-242X
FU Ministero dell'Istruzione, dell'Universita e della Ricerca [SCN_00064]
FX Ministero dell'Istruzione, dell'Universita e della Ricerca, Grant/Award
   Number: SCN_00064
CR [Anonymous], 2007, DESCRIPTION LOGIC HD, DOI DOI 10.1017/CBO9780511711787
   Antonioli N, 2014, P 8 INT C FORM ONT I
   Baldoni R, 2015, WHITE BOOK CYBER SEC
   Barcaroli G, 2015, P P NEW TECHN TECHN
   Bird Steven, 2009, NATURAL LANGUAGE PRO, DOI DOI 10.1007/S10579-010-9124-X
   Calvanese D, 2007, J AUTOM REASONING, V39, P385, DOI 10.1007/s10817-007-9078-x
   Calvanese D, 2017, SEMANT WEB, V8, P471, DOI 10.3233/SW-160217
   Civili C, 2013, PROC VLDB ENDOW, V6, P1314, DOI 10.14778/2536274.2536304
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Cunningham H., 2014, Developing Language Processing Components with GATE Version 8, V8th
   Cunningham H., 2002, P 40 ANN M ASS COMP, P168
   Cunningham H, 2013, PLOS COMPUT BIOL, V9, DOI 10.1371/journal.pcbi.1002854
   Glimm B, 2014, J AUTOM REASONING, V53, P245, DOI 10.1007/s10817-014-9305-1
   Gruber T.R., 1993, Formal Ontology in Conceptual Analysis and Knowledge Representation
   Guarino N, 1998, FR ART INT, V46, P3
   Guarino N., 2009, HDB ONTOLOGIES, P1, DOI [DOI 10.1007/978-3-540-92673-30, 10.1007/978-3-540-92673-3_0, DOI 10.1007/978-3-540-92673-3_0]
   Johnson M, 2004, MATH FDN SPEECH LANG
   Kharlamov E, 2017, J WEB SEMANT, V44, P3, DOI 10.1016/j.websem.2017.05.005
   Kibble R., 2013, INTRO NATURAL LANGUA
   Lembo D, 2018, AI COMMUN, V31, P97, DOI 10.3233/AIC-180751
   Lembo D, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P573
   Maynard D, 2006, P 15 INT C WORLD WID
   Maynard D, 2008, FRONT ARTIF INTEL AP, V167, P107
   Motik B., 2009, OWL WEB ONTOLOGY LAN
   Navigli R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459355
   Nenov Y, 2015, SEM WEB ISWC 2015 2
   Perez-Urbina H, 2009, SEM WEB ISWC 2009 8, V5823
   Petasis G, 2011, LECT NOTES ARTIF INT, V6050, P134, DOI 10.1007/978-3-642-20795-2_6
   Poibeau T, 2013, MULTISOURCE MULTILIN, DOI [10.1007/978-3-642-28569-1, DOI 10.1007/978-3-642-28569-1]
   Rosati  R., 2010, P 12 INT C PRINC KNO
   Schmid H., 1994, P INT C NEWMETHODS L
   Staab Steffen., 2010, HDB ONTOLOGIES
   Venetis T, 2014, J DATA SEMANT, V3, P1, DOI 10.1007/s13740-012-0017-6
   Witte R, MULTILINGUAL NOUN PH
   Witte R, 2014, OWLEXPORTER GUIDE US
   Witte R, 2010, P INT C LANG RES EV
   Zhao H, 2013, J ARTIF INTELL RES, V46, P203, DOI 10.1613/jair.3717
NR 37
TC 11
Z9 14
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2302
EP 2330
DI 10.1002/spe.2640
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700009
DA 2024-07-18
ER

PT J
AU Ziafat, H
   Babamir, SM
AF Ziafat, Hassan
   Babamir, Seyed Morteza
TI Optimal selection of VMs for resource task scheduling in geographically
   distributed clouds using fuzzy c-mean and MOLP
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE clustering; fuzzy c-means (FCM) algorithm; geographically distributed
   data centers; multiobjective linear programming (MOLP); service-level
   agreement (SLA); virtual machine
AB Because of widespread distribution of resources in the geographically distributed cloud environment, optimal selection of virtual machines (VMs) is one of the most important challenges for the structure of the network. This is due to the high number of data centers and VMs with different qualities of service parameters. Because of redundancy in the VMs and the high number of service parameters, optimal selection of VMs is an NP-hard problem. Therefore, a method is required, which can suggest the best VMs on the basis of the user's request and on the service-level agreements (SLAs). This study focuses on four important factors in SLAs: cost, response time, availability, and reliability. In this paper, we propose a four-tier structure, Observe, Orient, Decide, and Act, where (1) Observe is responsible for continuous monitoring users' requests and characteristics of data centers and VMs, (2) Orient is responsible for clustering data centers using fuzzy c-means and based of the four quality of services (SLA's factors) and then the selection of the most suitable data center cluster for the VM selection, (3) Decide is responsible for making decision on the most suitable VMs using multiobjective linear programming, and (4) Act is responsible for the execution of the decision. The proposed structure was implemented, and its effectiveness was evaluated through considering the number of SLA violations.
C1 [Ziafat, Hassan; Babamir, Seyed Morteza] Univ Kashan, Dept Comp Engn, Kashan, Iran.
C3 University Kashan
RP Babamir, SM (corresponding author), Univ Kashan, Dept Comp Engn, Kashan, Iran.
EM babamir@kashanu.ac.ir
RI Babamir, Seyed Morteza/F-5497-2011; Ziafat, Hasan/AAN-4240-2021
OI Babamir, Seyed Morteza/0000-0002-1645-4002; Ziafat,
   Hasan/0000-0001-6078-8088
FU University of Kashan [577242]
FX University of Kashan, Grant/Award Number: 577242
CR Alicherry M, 2012, 32 IEEE INT C COMP C
   Amazon, AM GLOB INFR
   Amazon, Amazon EC2 pricing
   [Anonymous], INTRO MATH PROGRAMMI
   BEZDEK JC, 1984, COMPUT GEOSCI, V10, P191, DOI 10.1016/0098-3004(84)90020-7
   Bolhuis M, 2013, 19 20 STUD C IT ENSC
   Chen K, 2013, INT C COMM ICC BUD H
   Cooper B, DATA CTR MAP
   Frincu ME, 2011, 2011 4 IEEE INT C UT
   Kuo J-J, 2014, 34 IEEE INT C COMP C
   Lago D, 2017, IEEE T PARALLEL DIST
   Liu C, 2017, IEEE T CLOUD COMPUT
   Luc DT., 2016, MULTIOBJECTIVE LINEA
   Mahendiran A., 2012, Journal of Applied Sciences, Engineering and Technology, V4, P1391
   Malekimajd M, 2015, J SUPERCOMPUT, V71, P4423, DOI 10.1007/s11227-015-1538-1
   Miller R., Google data center faq
   Noyes J, LINEAR PROGRAMMING
   V E Solutions, IP LAT STAT
   Veness Chris., Calculate distance, bearing and more between latitude/longitude points
   Yao Y, 2013, LECT NOTES COMPUT SC, V8147, P71, DOI 10.1007/978-3-642-40820-5_7
   Yuan D, 2010, FUTURE GENER COMP SY, V26, P1200, DOI 10.1016/j.future.2010.02.004
   Zhang L, 2017, IEEE T SUSTAIN COMPU
   Ziafat H, 2017, J SUPERCOMPUT, V73, P4042, DOI 10.1007/s11227-017-1999-5
NR 23
TC 7
Z9 7
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2018
VL 48
IS 10
SI SI
BP 1820
EP 1846
DI 10.1002/spe.2601
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GS4EA
UT WOS:000443587100006
DA 2024-07-18
ER

PT J
AU Neelofar, N
   Naish, L
   Lee, J
   Ramamohanarao, K
AF Neelofar, Neelofar
   Naish, Lee
   Lee, Jason
   Ramamohanarao, Kotagiri
TI Improving spectral-based fault localization using static analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE spectral debugging; static analysis; dynamic analysis; fault
   localization metrics
ID MUTATION
AB Debugging is crucial for producing reliable software. One of the effective bug localization techniques is spectral-based fault localization (SBFL). It helps to locate a buggy statement by applying an evaluation metric to program spectra and ranking program components on the basis of the score it computes. SBFL is an example of a dynamic analysis - an analysis of computer program that is performed by executing it with sufficient number of test cases. Static analysis, on the other hand, is performed in a non-runtime environment. We introduce a weighting technique by combining these two kinds of program analysis. Static analysis is performed to categorize program statements into different classes and giving them weights based on the likelihood of being buggy statement. Statements are finally ranked on the basis of the weights computed by statements' categorization (static analysis) and scores computed by SBFL metrics (dynamic analysis). We evaluate the performance of our technique on Siemens test suite and Flex (having seeded bugs seeded by expert developers), Sed (having mixture of real and seeded bugs), and Space (having real bugs). In our evaluation, proposed weighting technique improves the performance of a wide variety of fault localization metrics up to 20% on single bug datasets and up to 42% on multi-bug datasets. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Neelofar, Neelofar; Naish, Lee; Lee, Jason; Ramamohanarao, Kotagiri] Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic, Australia.
C3 University of Melbourne
RP Neelofar, N (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic, Australia.
EM neelofar.eme@gmail.com
OI KOTAGIRI, RAMAMOHANARAO/0000-0003-3304-9268
CR Abreu R, 2009, P 2009 ACM S APPL CO, P409, DOI DOI 10.1145/1529282.1529374
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   [Anonymous], THESIS
   [Anonymous], 2008, RAPID IDENTIFYING BU
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Chekam T.T., 2016, ARXIV160705512
   COLLOFELLO JS, 1989, J SYST SOFTWARE, V9, P191, DOI 10.1016/0164-1212(89)90039-3
   Dallmeier V., 2005, P 6 INT S AUT AN DRI, P99, DOI DOI 10.1145/1085130.1085143
   Debroy V, 2014, J SYST SOFTWARE, V90, P45, DOI 10.1016/j.jss.2013.10.042
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Gonzalez A. F., 2007, THESIS
   Groce A., 2006, International Journal on Software Tools for Technology Transfer, V8, P229, DOI 10.1007/s10009-005-0202-0
   HOFER B, 2012, ECAI MONTPELLIER, V242, P420, DOI DOI 10.3233/978-1-61499-098-7-420
   Hua Jie Lee, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P218, DOI 10.1109/COMPSAC.2010.26
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   JONES JA, 2007, P INT S SOFTW TEST A, P16, DOI DOI 10.1145/1273463.1273468
   Landsberg D, 2015, LECT NOTES COMPUT SC, V9033, P115, DOI 10.1007/978-3-662-46675-9_8
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lee H., 2011, The Influence of Sociotropic Judgment on Public Perceptions of Trade Liberalization: Distributional Judgment and Institutional Factors'
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Mayer Wolfgang, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P128, DOI 10.1109/ASE.2008.23
   Mayer W, 2007, ELECTRON NOTES THEOR, V174, P61, DOI 10.1016/j.entcs.2006.12.030
   Mayer Wolfgang., 2008, PROC 19 INT WORKSH P, P127
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2012, 35 AUSTR COMP SCI C, V122
   Naish L., 2008, J FUNCTIONAL LOGIC P, V2008
   Naish L, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P11, DOI 10.1109/ASWEC.2015.12
   Naish L, 2013, IEEE AUS SOFT ENGR, P51, DOI 10.1109/ASWEC.2013.16
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   OCHIAI AKIRA, 1957, BULL JAPANESE SOC SCI FISH, V22, P526
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Papadakis M., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1293
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Vipindeep V, 2005, ELECTRONIC
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Walter D., OVERFITTING REGULARI
   Wen WZ, 2012, PROC INT CONF SOFTW, P1511, DOI 10.1109/ICSE.2012.6227049
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wogerer W., 2005, A survey of static program analysis techniques
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Wotawa Franz, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P161, DOI 10.1109/QSIC.2010.51
   Wotawa F, 2002, ARTIF INTELL, V135, P125, DOI 10.1016/S0004-3702(01)00161-8
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Yu Kai., 2011, SAC, P1404
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
NR 56
TC 10
Z9 15
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1633
EP 1655
DI 10.1002/spe.2490
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500008
OA Green Published
DA 2024-07-18
ER

PT J
AU Portillo-Dominguez, AO
   Perry, P
   Magoni, D
   Wang, M
   Murphy, J
AF Portillo-Dominguez, A. Omar
   Perry, Philip
   Magoni, Damien
   Wang, Miao
   Murphy, John
TI TRINI: an adaptive load balancing strategy based on garbage collection
   for clustered Java systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE load balancing; cluster computing; garbage collection; Java; system
   performance
ID MIDDLEWARE; SERVICE
AB Nowadays, clustered environments are commonly used in high-performance computing and enterprise-level applications to achieve faster response time and higher throughput than single machine environments. Nevertheless, how to effectively manage the workloads in these clusters has become a new challenge. As a load balancer is typically used to distribute the workload among the cluster's nodes, multiple research efforts have concentrated on enhancing the capabilities of load balancers. Our previous work presented a novel adaptive load balancing strategy (TRINI) that improves the performance of a clustered Java system by avoiding the performance impacts of major garbage collection, which is an important cause of performance degradation in Java. The aim of this paper is to strengthen the validation of TRINI by extending its experimental evaluation in terms of generality, scalability and reliability. Our results have shown that TRINI can achieve significant performance improvements, as well as a consistent behaviour, when it is applied to a set of commonly used load balancing algorithms, demonstrating its generality. TRINI also proved to be scalable across different cluster sizes, as its performance improvements did not noticeably degrade when increasing the cluster size. Finally, TRINI exhibited reliable behaviour over extended time periods, introducing only a small overhead to the cluster in such conditions. These results offer practitioners a valuable reference regarding the benefits that a load balancing strategy, based on garbage collection, can bring to a clustered Java system. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Portillo-Dominguez, A. Omar; Perry, Philip; Wang, Miao; Murphy, John] Univ Coll Dublin, Sch Comp Sci & Informat, Lero, Dublin, Ireland.
   [Magoni, Damien] Univ Bordeaux, LaBRI, Bordeaux, France.
C3 University College Dublin; Universite de Bordeaux; Centre National de la
   Recherche Scientifique (CNRS)
RP Portillo-Dominguez, AO (corresponding author), Univ Coll Dublin, Sch Comp Sci & Informat, Dublin D4, Belfield, Ireland.
EM andres.portillo-dominguez@ucdconnect.ie
RI Magoni, Damien/M-1117-2013
OI Magoni, Damien/0000-0003-2578-1803; Portillo-Dominguez, A.
   Omar/0000-0003-3009-985X
FU Science Foundation Ireland [10/CE/I1855]
FX This work was supported, in part, by Science Foundation Ireland grant
   10/CE/I1855 to Lero - the Irish Software Engineering Research Centre
   (www.lero.ie). The authors thank the editor and the anonymous reviewers
   for their helpful comments and suggestions. Likewise, the authors
   appreciate the many discussions about this paper with Vanessa
   Ayala-Rivera.
CR Aghdaie N, 2009, J SYST SOFTWARE, V82, P131, DOI 10.1016/j.jss.2008.06.036
   Altman E, 2010, ACM SIGPLAN NOTICES, V45, P739, DOI 10.1145/1932682.1869519
   [Anonymous], 2006, MEM MAN JAV HOTSPOT, P1
   [Anonymous], 2012, JUDG ARM CONFL DESKB, P1
   [Anonymous], 2004, P JOINT INT C MEAS M
   Bahi J, 2005, J PARALLEL DISTR COM, V65, P1397, DOI 10.1016/j.jpdc.2005.05.007
   Belmonte-Carmona A., 2011, 2011 7th International Conference on Next Generation Web Services Practices, P61, DOI 10.1109/NWeSP.2011.6088154
   Beniwal P., 2014, INT J ADV RES COMPUT, V2, P1
   Boone B, 2010, J SYST SOFTWARE, V83, P446, DOI 10.1016/j.jss.2009.09.033
   Chae HS, 2010, SOFTWARE PRACT EXPER, V40, P485, DOI 10.1002/spe.967
   Ho KS, 2002, SOFTWARE PRACT EXPER, V32, P417, DOI 10.1002/spe.443
   Hui CC, 1997, SOFTWARE PRACT EXPER, V27, P1283, DOI 10.1002/(SICI)1097-024X(199711)27:11<1283::AID-SPE132>3.0.CO;2-L
   Kalibera T., 2009, INT WORKSH JAV TECHN, P100
   Kalogeraki V, 2008, J SYST SOFTWARE, V81, P1144, DOI 10.1016/j.jss.2007.08.035
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Lee WY, 2003, J PARALLEL DISTR COM, V63, P286, DOI 10.1016/S0743-7315(03)00032-7
   Lengauer P., 2014, INT C PERFORMANCE EN, P111
   Liu Y, 2008, 2008 3RD INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEM AND KNOWLEDGE ENGINEERING, VOLS 1 AND 2, P1388, DOI 10.1109/ISKE.2008.4731149
   Manning W, 2009, SCJP SUN CERTIFIED P, P254
   MAO F., 2009, Proceedings of the International Conference on Virtual Execution Environments (VEE), P91
   Mateos C, 2010, SOFTWARE PRACT EXPER, V40, P331, DOI 10.1002/spe.961
   Mohamed N, 2015, SOFTWARE PRACT EXPER, V45, P343, DOI 10.1002/spe.2235
   Phipps G, 1999, SOFTWARE PRACT EXPER, V29, P345, DOI 10.1002/(SICI)1097-024X(19990410)29:4<345::AID-SPE238>3.0.CO;2-C
   Pizlo F, 2008, ACM SIGPLAN NOTICES, V43, P33, DOI 10.1145/1379022.1375587
   Portillo-Dominguez AO, 2015, IEEE HI ASS SYS ENGR, P68, DOI 10.1109/HASE.2015.19
   Portillo-Dominguez AO, 2014, INT SYMP PARA DISTR, P127, DOI 10.1109/ISPDC.2014.20
   Rupprecht L., 2012, Proceedings of the 2012 11th International Symposium on Parallel and Distributed Computing (ISPDC 2012), P243, DOI 10.1109/ISPDC.2012.40
   Sanghi D, 2004, SOFTWARE PRACT EXPER, V34, P339, DOI 10.1002/spe.567
   Siebert F, 2008, ISMM'08: PROCEEDINGS OF THE 2008 INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P21
   Singer J, 2010, ACM SIGPLAN NOTICES, V45, P103
   Snatzke RG, 2009, PERFORMANCE SURVEY, P1
   Wegiel M, 2009, ACM SIGPLAN NOTICES, V44, P289, DOI 10.1145/1508284.1508278
   Weyns D, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P3, DOI 10.1109/SEAMS.2013.6595487
   WILLEBEEKLEMAIR MH, 1993, IEEE T PARALL DISTR, V4, P979, DOI 10.1109/71.243526
   WILSON PR, 1992, LECT NOTES COMPUT SC, V637, P1
   Xian F, 2005, OBJECT ORIENTED PROG, P246
   Xian F, 2008, SCI COMPUT PROGRAM, V70, P89, DOI 10.1016/j.scico.2007.07.008
   Xian F, 2007, LECT NOTES COMPUT SC, V4609, P126
NR 38
TC 4
Z9 4
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2016
VL 46
IS 12
BP 1705
EP 1733
DI 10.1002/spe.2391
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB4TV
UT WOS:000387367600005
OA Green Published
DA 2024-07-18
ER

PT J
AU Burroughs, N
AF Burroughs, Neil
TI Register allocation and spilling using the expected distance heuristic
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE register allocation; Belady MIN algorithm; spilling; minimum-cut; graph
   contraction
AB The primary goal of the register allocation phase in a compiler is to minimize register spills to memory. Spill decisions by the allocator are often made based on the costs of spilling a virtual register and, therefore, on an assumed placement of spill instructions. However, because most allocators make these decisions incrementally, placement opportunities can change as allocation proceeds, calling into question the basis for the original spill decision. An alternative heuristic to placement costs for spill decisions focuses on where program execution will lead. Spilling the virtual register with the Furthest Next Use is known to lead to the minimum number of loads under certain conditions in straight-line code. While it has been implemented in register allocation in different forms, none of these implementations fully exploits profiling information. We present a register allocator that can adapt to improved profiling information, using branch probabilities to compute an Expected Distance to Next Use for making spill decisions and block frequency information to optimize post-allocation spill instruction placement. Spill placement is optimized after allocation using a novel method for minimizing spill instruction costs on the control flow graph. Our evaluation of the allocator compared with LLVM recognizes more than 36% and 50% reductions, on average, in the number of dynamically executed store and load instructions, respectively, when using statically derived profiling information. When using dynamically gathered profiling, these improvements increase to 50% and 60% reductions, on average, for stores and loads, respectively. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Burroughs, Neil] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
C3 University of Victoria
RP Burroughs, N (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
EM inb@uvic.ca
CR Appel AW, 2001, ACM SIGPLAN NOTICES, V36, P243, DOI 10.1145/381694.378854
   Backus J., 1981, HIST PROGRAMMING LAN, P25, DOI DOI 10.1145/800025.1198345
   BELADY LA, 1966, IBM SYST J, V5, P78, DOI 10.1147/sj.52.0078
   Bell T. C., 1990, TEXT COMPRESSION
   Bergner P, 1997, ACM SIGPLAN NOTICES, V32, P287, DOI 10.1145/258916.258941
   Braun M, 2009, P 18 INT C COMP CONS
   BRIGGS P, 1992, SIGPLAN NOTICES, V27, P311, DOI 10.1145/143103.143143
   BRIGGS P, 1994, ACM T PROGR LANG SYS, V16, P428, DOI 10.1145/177492.177575
   Cai Q, 2003, INT SYM CODE GENER, P91, DOI 10.1109/CGO.2003.1191536
   CALLAHAN D, 1991, SIGPLAN NOTICES, V26, P192, DOI 10.1145/113446.113462
   Chaitin G. J., 1982, SIGPLAN Notices, V17, P98, DOI 10.1145/872726.806984
   CHAITIN GJ, 1981, COMPUT LANG, V6, P47, DOI 10.1016/0096-0551(81)90048-5
   Chekuri CS, 1997, PROCEEDINGS OF THE EIGHTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P324
   CHOW F, 1984, SIGPLAN NOTICES, V19, P222, DOI 10.1145/502949.502896
   Ebner D., 2009, P 2009 INT C COMPILE, P77, DOI DOI 10.1145/1629395.1629408
   Farach Martin., 1998, SODA '98: Proceedings of the ninth annual ACM-SIAM symposium on Discrete algorithms, P564
   Fu CQ, 2002, INT SYMP MICROARCH, P245, DOI 10.1109/MICRO.2002.1176254
   Guattery S., 1992, SPAA '92. 4th Annual ACM Symposium on Parallel Algorithms and Architectures, P431, DOI 10.1145/140901.141935
   Guo J., 2003, P 16TH INT WORKSHOP, P374
   Hack S, 2006, LECT NOTES COMPUT SC, V3923, P247
   HSU WC, 1989, IEEE T SOFTWARE ENG, V15, P1252, DOI 10.1109/TSE.1989.559775
   Karger DR, 1996, J ACM, V43, P601, DOI 10.1145/234533.234534
   KARGER DR, 1993, PROCEEDINGS OF THE FOURTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P21
   Khedker U., 2009, Data Flow Analysis: Theory and Practice, V1st
   Koes David Ryan, 2009, P TH 12 INT WORKSH S, P210, DOI [10.1145/1543820.1543824, DOI 10.1145/1543820.1543824]
   Leighton T, 1999, J ACM, V46, P787, DOI 10.1145/331524.331526
   Muchnick S., 1997, ADV COMPILER DESIGN
   Pereira FMQ, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P216
   Poletto M, 1999, ACM T PROGR LANG SYS, V21, P895, DOI 10.1145/330249.330250
   Proebsting TA, 1996, ACM T PROGR LANG SYS, V18, P683, DOI 10.1145/236114.236117
   Sarkar V, 2007, LECT NOTES COMPUT SC, V4420, P141
   Standard Performance Evaluation Corporation, 2000, SPEC CPU2000 BENCHM
   Stoer M, 1997, J ACM, V44, P585, DOI 10.1145/263867.263872
   Traub O, 1998, ACM SIGPLAN NOTICES, V33, P142, DOI 10.1145/277652.277714
   West D.B., 1996, Introduction to Graph Theory, V2
   Wimmer Christian., 2005, P ACMUSENIX INT C VI, P132
   Xue J., 2006, ACM Trans. on Architecture and Code Optimization (TACO), V3, P115, DOI 10.1145/1138035.1138036
NR 37
TC 0
Z9 0
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2016
VL 46
IS 11
BP 1499
EP 1523
DI 10.1002/spe.2393
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DZ8VK
UT WOS:000386150000004
DA 2024-07-18
ER

PT J
AU Lamperti, G
   Scandale, M
   Zanella, M
AF Lamperti, Gianfranco
   Scandale, Michele
   Zanella, Marina
TI Determinization and minimization of finite acyclic automata by
   incremental techniques
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE acyclic finite automata; determinization; minimization; incremental
   techniques
ID MODEL-BASED DIAGNOSIS; DETERMINISTIC AUTOMATA; ACTIVE SYSTEMS;
   CONSTRUCTION; GENERATION
AB The determinization of a nondeterministic finite automaton (FA) N is the process of generating a deterministic FA (DFA) D equivalent to (sharing the same regular language of) N. The minimization of D is the process of generating the minimal DFA M equivalent to D. Classical algorithms for determinization and minimization are available in the literature for several decades. However, they operate monolithically, assuming that the FA to be either determinized or minimized is given once and for all. By contrast, we consider determinization and minimization in a dynamic context, where N augments over time: after each augmentation, determinization and minimization of N into M is required. Using classical monolithic algorithms to solve this problem is bound to poor performance. An algorithm for incremental determinization and minimization of acyclic finite automata, called IDMA, is proposed. Despite being conceived within the narrow domain of model-based diagnosis and monitoring of active systems, the algorithm is general-purpose in nature. Experimental evidence indicates that IDMA is far more efficient than classical algorithms in solving incremental determinization and minimization problems. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Lamperti, Gianfranco; Zanella, Marina] Univ Brescia, Dipartimento Ingn Informaz, Brescia, Italy.
   [Scandale, Michele] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, Italy.
C3 University of Brescia; Polytechnic University of Milan
RP Lamperti, G (corresponding author), Univ Brescia, Dipartimento Ingn Informaz, Brescia, Italy.
EM gianfranco.lamperti@unibs.it
OI ZANELLA, Marina/0000-0003-3896-3913; LAMPERTI, Gian
   Franco/0000-0002-1915-6932
CR [Anonymous], 12 INT JOINT C ART I
   [Anonymous], 7 IFAC S FAULT DET S
   [Anonymous], 1971, Theory of Machines and Computations, DOI DOI 10.1016/B978-0-12-417750-5.50022-1
   [Anonymous], FOMA FINITE STATE TO
   [Anonymous], THESIS U GDANSK POLA
   [Anonymous], 1991, THESIS I BLAISE PASC
   [Anonymous], THESIS EINDHOVEN U T
   [Anonymous], LNCS
   [Anonymous], SOFTWARE PACKAGES FI
   [Anonymous], 11 INT JOINT C ART I
   [Anonymous], 2006, COMPILERS PRINCIPLES
   [Anonymous], THESIS U PRETORIA S
   Bairoch A, 2000, NUCLEIC ACIDS RES, V28, P45, DOI 10.1093/nar/28.1.45
   Baroni P, 1999, ARTIF INTELL, V110, P135, DOI 10.1016/S0004-3702(99)00019-3
   BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   Brzozowski J.A., 1962, Microwave Research Institute Symposia Series, V12, P529
   Bubenzer J, 2011, PROCEEDINGS OF THE PRAGUE STRINGOLOGY CONFERENCE 2011, P132
   Carrasco RC, 2002, COMPUT LINGUIST, V28, P207, DOI 10.1162/089120102760173652
   Cassandras C. G., 2008, INTRO TODISCRETE EVE
   Cerutti S, 2007, SOFTWARE PRACT EXPER, V37, P365, DOI 10.1002/spe.773
   Champarnaud JM, 2005, INT J FOUND COMPUT S, V16, P441, DOI 10.1142/S012905410500308X
   Daciuk J, 2004, ADV SOFT COMP, P201
   Daciuk J, 2000, COMPUT LINGUIST, V26, P3, DOI 10.1162/089120100561601
   Daciuk J., 1998, Proceedings of the International Workshop on Finite State Methods in Natural Language Processing, P48
   Friedl J.E.F., 2006, Mastering Regular Expressions, V3rd Edn.
   GHEZZI C, 1980, J ACM, V27, P564, DOI 10.1145/322203.322215
   Green TJ, 2004, ACM T DATABASE SYST, V29, P752, DOI 10.1145/1042046.1042051
   Hamscher W., 1992, READINGS MODEL BASED
   HEERING J, 1990, IEEE T SOFTWARE ENG, V16, P1344, DOI 10.1109/32.62443
   HEERING J, 1992, ACM T PROGR LANG SYS, V14, P490, DOI 10.1145/133233.133240
   HEERING J, 1994, ACM T PROGR LANG SYS, V16, P1010, DOI 10.1145/177492.177750
   Hopcroft J. E., 2006, INTRO AUTOMATA THEOR
   Lamperti, 2003, KLUWER INT SERIES EN, V741
   Lamperti G, 2004, IEEE T SYST MAN CY B, V34, P2222, DOI 10.1109/TSMCB.2004.835008
   Lamperti G, 2002, ARTIF INTELL, V137, P91, DOI 10.1016/S0004-3702(02)00123-6
   Lamperti G, 2008, LECT NOTES ARTIF INT, V5177, P362, DOI 10.1007/978-3-540-85563-7_48
   Lamperti G, 2007, AI COMMUN, V20, P27
   Lamperti G, 2013, IEEE SYS MAN CYBERN, P2250, DOI 10.1109/SMC.2013.385
   Lamperti G, 2013, AI COMMUN, V26, P373, DOI 10.3233/AIC-130574
   Lamperti G, 2011, IEEE T SYST MAN CY A, V41, P356, DOI 10.1109/TSMCA.2010.2069096
   Moore E.F., 1956, Automata studies, P129
   RABIN MO, 1959, IBM J RES DEV, V3, P114, DOI 10.1147/rd.32.0114
   REVUZ D, 1992, THEOR COMPUT SCI, V92, P181, DOI 10.1016/0304-3975(92)90142-3
   Stroustrup Bjarne, 2013, The C++ programming language
   Struss P, 1997, INT JOINT CONF ARTIF, P480
   Wagner TA, 1998, ACM T PROGR LANG SYS, V20, P980, DOI 10.1145/293677.293678
   Watson B. W., 2003, Natural Language Engineering, V9, P49, DOI 10.1017/S1351324903003127
   Watson Bruce W., 2003, Grammars and Automata for String Processing: From Mathematics and Computer Science to Biology, and Back, P189
   WU S, 1992, COMMUN ACM, V35, P83, DOI 10.1145/135239.135244
NR 49
TC 8
Z9 9
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2016
VL 46
IS 4
BP 513
EP 549
DI 10.1002/spe.2309
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DG8HR
UT WOS:000372324600004
DA 2024-07-18
ER

PT J
AU Go, K
   Kang, S
   Baik, J
   Kim, M
AF Go, Kyungmin
   Kang, Sungwon
   Baik, Jongmoon
   Kim, Myungchul
TI Pairwise testing for systems with data derived from real-valued variable
   inputs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE combinatorial testing; pairwise testing; real-valued variable inputs;
   INS; GPS system
ID DESIGN
AB Pairwise testing is an effective combinatorial test case generation approach in which test cases are developed to execute all possible pairwise combinations of system inputs. It can help reduce the number of test cases and save testing time yet still effective in finding defects. However, it is very difficult for practitioners to effectively apply pairwise testing in the real world because of the lack of suitable techniques and guidelines. To redress this situation, this paper conducts a case study of applying pairwise testing to system data derived from real-valued variable inputs. In order to apply pairwise testing to this case study, this paper develops a test procedure and a novel partitioning method to test derived data as a naive application of the conventional pairwise testing that would produce a huge number of test cases. A comparative evaluation shows that the pairwise testing of the proposed approach is more effective than the random testing with a 12-20% higher fault detection ratio. Based on our experience, guidelines for applying pairwise testing in practice are also presented. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Go, Kyungmin; Kang, Sungwon; Baik, Jongmoon; Kim, Myungchul] Korea Adv Inst Sci & Technol, Dept Comp Sci, Daejeon, South Korea.
   [Kim, Myungchul] Korea Adv Inst Sci & Technol, Grad Sch Informat Secur, Daejeon, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Korea Advanced
   Institute of Science & Technology (KAIST)
RP Kim, M (corresponding author), Korea Adv Inst Sci & Technol, Grad Sch Informat Secur, Daejeon, South Korea.
EM mck@kaist.ac.kr
RI Kim, Myungchul/C-1730-2011; Baik, Jongmoon/C-1780-2011
OI Go, Kyungmin/0000-0002-8410-5971
FU National Research Foundation of Korea - Korean Government
   [NRF-2012R1A2A2A01008244]; MSIP (Ministry of Science, ICT & Future
   Planning), Korea, under the ITRC (Information Technology Research
   Center) support program [NIPA-2014-H0301-14-1020]
FX We would like to thank the anonymous referees for insightful reviews.
   Their reviews have significantly contributed to improving upon the
   initial version of this paper. This research was supported by the
   National Research Foundation of Korea Grant funded by the Korean
   Government (NRF-2012R1A2A2A01008244). This research was also supported
   by the MSIP (Ministry of Science, ICT & Future Planning), Korea, under
   the ITRC (Information Technology Research Center) support program
   (NIPA-2014-H0301-14-1020) supervised by the NIPA (National IT Industry
   Promotion Agency).
CR [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], 2007, GLOBAL POSITIONING S
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Bach J., 2004, P 22 PACIFIC NW SOFT, P180
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   Borazjany M. N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P591, DOI 10.1109/ICST.2012.146
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Cho A, 2011, IEEE T AERO ELEC SYS, V47, P109, DOI 10.1109/TAES.2011.5705663
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Cohen M.B., 2006, P ISSTA 2006 WORKSHO, P53, DOI DOI 10.1145/1147249.1147257
   Czerwonka J., 2006, PROC 24 PACIFIC NW S, P419
   Fouche S, 2007, 6 JOINT M EUR SOFTW, P556
   Goel PK, 2011, IEEE T IND ELECTRON, V58, P1141, DOI 10.1109/TIE.2009.2037646
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Hamlet R., 1994, Encyclopedia of Software Engineering
   Huller J, 2000, 2000 INT COUNC SYST
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Krishnan R., 2007, ACM SIGSOFT Software Engineering Notes, V32, P1
   Kuhn Rick, 2008, IT Professional, V10, P19, DOI 10.1109/MITP.2008.54
   McBain J, 2009, J SOUND VIB, V327, P623, DOI 10.1016/j.jsv.2009.07.025
   Naik S., 2008, Software Testing and Quality Assurance: Theory and Practice
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Reid SC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P64, DOI 10.1109/METRIC.1997.637166
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Sangiovanni-Vincentelli A, 2001, IEEE DES TEST COMPUT, V18, P23, DOI 10.1109/54.970421
   Veth M., 2008, TIGHTLY COUPLED INS
   Wang Jinling., 2008, IAPRSSIS, V37, P963
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Yun X, 1999, IEEE J OCEANIC ENG, V24, P396, DOI 10.1109/48.775301
NR 30
TC 5
Z9 6
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2016
VL 46
IS 3
BP 381
EP 403
DI 10.1002/spe.2295
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DD2RH
UT WOS:000369769400005
DA 2024-07-18
ER

PT J
AU Ciancarini, P
   Di Iorio, A
   Marchetti, C
   Schirinzi, M
   Vitali, F
AF Ciancarini, Paolo
   Di Iorio, Angelo
   Marchetti, Carlo
   Schirinzi, Michele
   Vitali, Fabio
TI Bridging the gap between tracking and detecting changes in XML
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE change detection; change-tracking; diff algorithms; XML diff; edit
   operations; high-level changes
ID CHANGE DETECTION ALGORITHM; DIFF
AB There are two main approaches to manage changes in XML documents, change-tracking and diff. Change-tracking tools, which record edit actions while they are performed on the source document, are able to capture the exact editing process. That is much more difficult for diff algorithms, which have to reconstruct it by comparing two different versions. Interestingly, these algorithms process both text-centric and data-centric XML documents the same way. In this paper, we show that more accurate, clear, and human-readable results can be achieved on text-centric resources, by employing specific models and algorithms. We describe and discuss a specialized diff algorithm for such a class of documents. We also compare a Java implementation of the algorithm, named JNDiff, with other general-purpose or data-oriented diff tools, focusing on the quality of their output. Copyright (c) 2014 Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Ciancarini, Paolo; Di Iorio, Angelo; Vitali, Fabio] Univ Bologna, Dept Comp Sci & Engn, I-40127 Bologna, Italy.
   [Marchetti, Carlo] Univ Roma La Sapienza, Rome, Italy.
   [Marchetti, Carlo] Senato Repubbl Italiana, Rome, Italy.
   [Schirinzi, Michele] CINI, Rome, Italy.
C3 University of Bologna; Sapienza University Rome
RP Di Iorio, A (corresponding author), Univ Bologna, Dept Comp Sci & Engn, Mura Anteo Zamboni 7, I-40127 Bologna, Italy.
EM angelo.diiorio@unibo.it
RI Ciancarini, Paolo/ABA-8413-2020; Vitali, Fabio/E-9368-2012
OI Ciancarini, Paolo/0000-0002-7958-9924; Vitali, Fabio/0000-0002-7562-5203
FU CINI (Consorzio Interuniversitario Nazionale per l'Informatica); CINI
FX This work was partially supported by CINI (Consorzio Interuniversitario
   Nazionale per l'Informatica). The authors would like to thank CINI for
   their interest and financial support.
CR Adrian Mouat, 2009, DIFFXML PATCHXML TOO
   [Anonymous], 1976, 41 BELL LAB
   Barabucci G, 2014, ACM S DOC ENG 2014 D, P207
   Bergroth L, 2000, SPIRE 2000: SEVENTH INTERNATIONAL SYMPOSIUM ON STRING PROCESSING AND INFORMATION RETRIEVAL - PROCEEDINGS, P39, DOI 10.1109/SPIRE.2000.878178
   Brooke PJ, 2010, SOFTWARE PRACT EXPER, V40, P655, DOI 10.1002/spe.974
   Buneman P, 2004, ACM T DATABASE SYST, V29, P2, DOI 10.1145/974750.974752
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   Chien S.-Y., 2006, ACM Transactions on Internet Technology, V6, P53, DOI 10.1145/1125274.1125277
   Cobéna G, 2002, PROC INT CONF DATA, P41, DOI 10.1109/ICDE.2002.994696
   Di Iorio A, 2011, J AM SOC INF SCI TEC, V62, P1696, DOI 10.1002/asi.21591
   FONTAINE RL, 2002, P XML EUR 2002
   Gioele Barabucci, 2013, ACM S DOC ENG 2013 D, P281
   Jacob J, 2005, DATA KNOWL ENG, V52, P209, DOI 10.1016/j.datak.2004.05.006
   John Boyer, 2001, CANONICAL XML
   Lanna M, 2011, SOFTWARE PRACT EXPER, V41, P607, DOI 10.1002/spe.1013
   Lee KH, 2004, IEEE T KNOWL DATA EN, V16, P965, DOI 10.1109/TKDE.2004.19
   Leonardi E, 2006, DATA KNOWL ENG, V59, P476, DOI 10.1016/j.datak.2005.06.006
   Lindholm T., 2006, Proceedings of the 2006 ACM symposium on Document engineering (DocEng06), P75
   Marian A., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P581
   MILLER W, 1985, SOFTWARE PRACT EXPER, V15, P1025, DOI 10.1002/spe.4380151102
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Rivest R., 1992, MD5 MESSAGE DIGEST A
   Robin La Fontaine, 2013, XML CHANGE TRACKING
   Rönnau S, 2009, DOCENG'09: PROCEEDINGS OF THE 2009 ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P3
   Rönnau S, 2009, MULTIMED TOOLS APPL, V43, P253, DOI 10.1007/s11042-009-0271-2
   Ronnau S., 2005, Proceedings of the 2005 ACM symposium on Document engineering, New York, NY, USA, P10, DOI 10.1145/1096601.1096606
   Ronnau S, 2008, DOCENG'08: PROCEEDINGS OF THE EIGHTH ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P52
   SELKOW SM, 1977, INFORM PROCESS LETT, V6, P184, DOI 10.1016/0020-0190(77)90064-3
   Sylvain Thenault, 2009, XMLDIFF PYTHON TOOL
   TAI KC, 1979, J ACM, V26, P422, DOI 10.1145/322139.322143
   WAGNER RA, 1974, J ACM, V21, P168, DOI 10.1145/321796.321811
   Wang Y, 2003, PROC INT CONF DATA, P519, DOI 10.1109/ICDE.2003.1260818
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   ZHANG KZ, 1989, SIAM J COMPUT, V18, P1245, DOI 10.1137/0218082
NR 34
TC 4
Z9 4
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2016
VL 46
IS 2
BP 227
EP 250
DI 10.1002/spe.2305
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA6HP
UT WOS:000367904000004
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Kim, JW
   Seo, J
   Hong, J
   Park, K
   Kim, SR
AF Kim, Jung Woo
   Seo, Jungjoo
   Hong, Jin
   Park, Kunsoo
   Kim, Sung-Ryul
TI High-speed parallel implementations of the rainbow method based on
   perfect tables in a heterogeneous system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE GPGPU; CUDA; heterogeneous computing; cryptanalysis; cryptanalytic
   time-memory trade-off; rainbow method
AB The computing power of graphics processing units (GPU) has increased rapidly, and there has been extensive research on general-purpose computing on GPU (GPGPU) for cryptographic algorithms such as RSA, Elliptic Curve Cryptosystem (ECC), NTRU, and Advanced Encryption Standard. With the rise of GPGPU, commodity computers have become complex heterogeneous GPU+CPU systems. This new architecture poses new challenges and opportunities in high-performance computing. In this paper, we present high-speed parallel implementations of the rainbow method based on perfect tables, which is known as the most efficient time-memory trade-off, in the heterogeneous GPU+CPU system. We give a complete analysis of the effect of multiple checkpoints on reducing the cost of false alarms and take advantage of it for load balancing between GPU and CPU. For GTX460, our implementation is about 1.86 and 3.25 times faster than other GPU-accelerated implementations, RainbowCrack and Cryptohaze, respectively, and for GTX580, 1.53 and 2.40 times faster. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Kim, Jung Woo; Seo, Jungjoo; Park, Kunsoo] Seoul Natl Univ, Dept Comp Sci & Engn, Seoul 151747, South Korea.
   [Kim, Jung Woo; Seo, Jungjoo; Park, Kunsoo] Seoul Natl Univ, Inst Comp Technol, Seoul 151747, South Korea.
   [Hong, Jin] Seoul Natl Univ, Dept Math Sci, Seoul 151747, South Korea.
   [Hong, Jin] Seoul Natl Univ, ISaC, Seoul 151747, South Korea.
   [Kim, Sung-Ryul] Konkuk Univ, Div Internet & Media, Seoul 143701, South Korea.
C3 Seoul National University (SNU); Seoul National University (SNU); Seoul
   National University (SNU); Seoul National University (SNU); Konkuk
   University
RP Park, K (corresponding author), Seoul Natl Univ, Dept Comp Sci & Engn, Seoul 151747, South Korea.
EM kpark@theory.snu.ac.kr
RI Hong, Jin/A-4879-2009
OI Hong, Jin/0000-0002-9235-9824
FU Next-Generation Information Computing Development Program through the
   National Research Foundation of Korea (NRF) - Ministry of Science, ICT &
   Future Planning [2011-0029924]; Basic Science Research Program through
   NRF - MEST [2012R1A1B4003379]
FX This research was supported by Next-Generation Information Computing
   Development Program through the National Research Foundation of Korea
   (NRF) funded by the Ministry of Science, ICT & Future Planning
   (2011-0029924) and the Basic Science Research Program through NRF funded
   by MEST (2012R1A1B4003379).
CR Avoine G, 2008, ACM T INFORM SYST SE, V11, DOI 10.1145/1380564.1380565
   Barkan E, 2006, LECT NOTES COMPUT SC, V4117, P1
   Bernstein DJ, 2009, LECT NOTES COMPUT SC, V5479, P483, DOI 10.1007/978-3-642-01001-9_28
   Biryukov A, 2005, SELECTED AREAS CRYPT, P110
   Borst Johan., 1998, P 19 S INFORM THEORY, P111
   Brodtkorb AR, 2010, SCI PROGRAMMING-NETH, V18, P1, DOI 10.3233/SPR-2009-0296
   Denning D.E., 1982, CRYPTOGRAPHY DATA SE, P100
   Fiat A, 2000, SIAM J COMPUT, V29, P790, DOI 10.1137/S0097539795280512
   HELLMAN ME, 1980, IEEE T INFORM THEORY, V26, P401, DOI 10.1109/TIT.1980.1056220
   Hermans J, 2010, LECT NOTES COMPUT SC, V5985, P73, DOI 10.1007/978-3-642-11925-5_6
   Hong J, 2005, LECT NOTES COMPUT SC, V3788, P353
   Hong J, 2013, J CRYPTOL, V26, P559, DOI 10.1007/s00145-012-9128-3
   Hong J, 2011, LECT NOTES COMPUT SC, V7107, P161
   Hong J, 2010, DESIGN CODE CRYPTOGR, V57, P293, DOI 10.1007/s10623-010-9368-x
   Kim Jung Woo, 2012, INT C CRYPTOLOGY IND, P303, DOI 10.1007/978-3-642-34931-7_18
   Kusuda K, 1996, IEICE T FUND ELECTR, VE79A, P35
   Lee GW, 2012, TECHNICAL REPORT
   Manavski SA, 2007, ICSPC: 2007 IEEE INTERNATIONAL CONFERENCE ON SIGNAL PROCESSING AND COMMUNICATIONS, VOLS 1-3, PROCEEDINGS, P65
   Maplesoft, 2007, MAPL 12 US MAN 2007
   Mukhopadhyay S, 2006, LECT NOTES COMPUT SC, V3786, P25
   Nickolls J, 2010, IEEE MICRO, V30, P56, DOI 10.1109/MM.2010.41
   Nvidia, 2012, CUDA C PROGR GUID 20
   Nvidia, 2012, CUDA BEST PRACT GUID
   Nvidia, 2009, NVID NEXT GEN CUDA C
   Oechslin P, 2003, LECT NOTES COMPUT SC, V2729, P617
   Standaert FX, 2002, LECT NOTES COMPUT SC, V2523, P593
   Szerwinski R, 2008, LECT NOTES COMPUT SC, V5154, P79, DOI 10.1007/978-3-540-85053-3_6
   Wang WH, 2011, LECT NOTES COMPUT SC, V7043, P282, DOI 10.1007/978-3-642-25243-3_23
   Warren H. S, 2003, Hacker's Delight
NR 29
TC 5
Z9 6
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2015
VL 45
IS 6
BP 837
EP 855
DI 10.1002/spe.2257
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG1LA
UT WOS:000353032900005
DA 2024-07-18
ER

PT J
AU Tchana, A
   De Palma, N
   Dillenseger, B
   Etchevers, X
AF Tchana, Alain
   De Palma, Noel
   Dillenseger, Bruno
   Etchevers, Xavier
TI A self-scalable load injection service
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE benchmarking as a service; cloud; resource allocation
ID GENERATION; STRESS
AB Load testing of applications is an important and costly activity for software provider companies. Classical solutions are very difficult to set up statically, and their cost is prohibitive in terms of both human and hardware resources. Virtualized cloud computing platforms provide new opportunities for stressing an application's scalability, by providing a large range of flexible and less expensive (pay-per-use model) computation units. On the basis of these advantages, load testing solutions could be provided on demand in the cloud. This paper describes a Benchmark-as-a-Service solution that automatically scales the load injection platform and facilitates its setup according to load profiles. Our approach is based on: (i) virtualization of the benchmarking platform to create self-scaling injectors; (ii) online calibration to characterize the injector's capacity and impact on the benched application; and (iii) a provisioning solution to appropriately scale the load injection platform ahead of time. We also report experiments on a benchmark illustrating the benefits of this system in terms of cost and resource reductions. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Tchana, Alain; De Palma, Noel] Univ Grenoble 1, F-38041 Grenoble 9, France.
   [Dillenseger, Bruno; Etchevers, Xavier] Orange Labs, F-38243 Meylan, France.
C3 Communaute Universite Grenoble Alpes; Universite Grenoble Alpes (UGA);
   Orange SA
RP Tchana, A (corresponding author), Univ Grenoble 1, LIG 621,Ave Cent St Martin dHeres,BP 53, F-38041 Grenoble 9, France.
EM alain.tchana@inria.fr
FU French Fonds National pour la Societe Numerique (FSN); Poles Minalogic,
   Systematic and SCS, through the FSN Open Cloudware project
FX This work is supported by the French Fonds National pour la Societe
   Numerique (FSN) and Poles Minalogic, Systematic and SCS, through the FSN
   Open Cloudware project.
CR Almeida R., 2011, P 6 INT S SOFTW ENG, P190, DOI DOI 10.1145/1988008.1988035
   Amazon Web Services, AM EC2 AUT FUNCT
   Amza C, 2002, I S WORKL CHAR PROC, P3, DOI 10.1109/WWC.2002.1226489
   [Anonymous], AP JMETER
   Barna C, 2011, P INT C AUT COMP KAR, P910
   Bayan MS, 2006, P INT COMP SOFTW APP, P229
   Blake R, 1995, MSRTR9510
   Bolze R, 2006, INT J HIGH PERFORM C, V20, P481, DOI 10.1177/1094342006070078
   Bruneton E, 2004, LECT NOTES COMPUT SC, V3054, P7
   Chung I.-H., 2008, 2008 IEEE International Symposium on Parallel and Distributed Processing, P1
   CURNOW HJ, 1976, COMPUT J, V19, P43, DOI 10.1093/comjnl/19.1.43
   Dependability Benchmarking Project, 200025425 IST DEP BE
   Dillenseger B, 2009, ANN TELECOMMUN, V64, P101, DOI 10.1007/s12243-008-0067-9
   Dutta S., 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P221, DOI 10.1109/CLOUD.2012.12
   El-Refaey MA, 2010, IEEE ENABL TECHNOL, P66, DOI 10.1109/WETICE.2010.17
   Harbaoui A, 2010, SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS: ICAS 2010, PROCEEDINGS, P7, DOI 10.1109/ICAS.2010.9
   Herndon B., 2006, Technical Report TR 2006-002, VMware, Tech. Rep.
   Jain RK, 1991, ACM SIGMETRICS PERFO, V19, P5
   Jamal MH, 2009, NAS: 2009 IEEE INTERNATIONAL CONFERENCE ON NETWORKING, ARCHITECTURE, AND STORAGE, P90, DOI 10.1109/NAS.2009.20
   Jayasinghe D., 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P115, DOI 10.1109/CLOUD.2012.98
   Jayasinghe D., 2011, Proceedings of the 2011 IEEE 4th International Conference on Cloud Computing (CLOUD 2011), P73, DOI 10.1109/CLOUD.2011.43
   Jin H., 2008, P 1 INT FOR NEXT GEN, P1
   Kant K, 2002, LECT NOTES COMPUT SC, V2324, P227
   Koehler S, 2011, ACM T RECONFIG TECHN, V4, DOI 10.1145/2000832.2000842
   Manley S., 1998, Performance Evaluation Review, V26, P270, DOI 10.1145/277858.277945
   Marshall Paul, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P43, DOI 10.1109/CCGRID.2010.80
   Mi NF, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P149
   Neotys, NEOLOAD LOAD TEST AL
   Rolls Daniel, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P50, DOI 10.1109/ICPC.2010.36
   Tchana A, 2010, 3 INT C UT CLOUD COM
   Vaquero LM, 2011, ACM SIGCOMM COMP COM, V41, P45, DOI 10.1145/1925861.1925869
   Zhang J, 2002, SOFTWARE PRACT EXPER, V32, P1411, DOI 10.1002/spe.487
NR 32
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2015
VL 45
IS 5
BP 613
EP 632
DI 10.1002/spe.2236
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF4OC
UT WOS:000352528200002
DA 2024-07-18
ER

PT J
AU van der Ploeg, A
AF van der Ploeg, Atze
TI Drawing non-layered tidy trees in linear time
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE tree drawing; complexity proof; Reingold-Tilford algorithm
ID ALGORITHM; LAYOUT
AB The well-known Reingold-Tilford algorithm produces tidy-layered drawings of trees: drawings where all nodes at the same depth are vertically aligned. However, when nodes have varying heights, layered drawing may use more vertical space than necessary. A non-layered drawing of a tree places children at a fixed distance from the parent, thereby giving a more vertically compact drawing. Moreover, non-layered drawings can also be used to draw trees where the vertical position of each node is given, by adding dummy nodes. In this paper, we present the first linear-time algorithm for producing non-layered drawings. Our algorithm is a modification of the Reingold-Tilford algorithm, but the original complexity proof of the Reingold-Tilford algorithm uses an invariant that does not hold for the non-layered case. We give an alternative proof of the algorithm and its extension to non-layered drawings. To improve drawings of trees of unbounded degree, extensions to the Reingold-Tilford algorithm have been proposed. These extensions also work in the non-layered case, but we show that they then cause a O(n(2)) run-time. We then propose a modification to these extensions that restores the O(n) run-time. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [van der Ploeg, Atze] Ctr Wiskunde & Informat, NL-1098 XG Amsterdam, Netherlands.
RP van der Ploeg, A (corresponding author), POB 94079, NL-1090 GB Amsterdam, Netherlands.
EM ploeg@cwi.nl
OI van der Ploeg, Atze/0000-0001-9535-5282
CR BLOESCH A, 1993, SOFTWARE PRACT EXPER, V23, P817, DOI 10.1002/spe.4380230802
   Buchheim C, 2006, SOFTWARE PRACT EXPER, V36, P651, DOI 10.1002/spe.713
   Gibbons J., 1996, Journal of Functional Programming, V6, P535, DOI 10.1017/S0956796800001842
   Hasan M, 2003, NETWORKS, V42, P160, DOI 10.1002/net.10092
   Johnson B., 1991, Proceedings Visualization '91 (Cat. No.91CH3046-0), P284, DOI 10.1109/VISUAL.1991.175815
   Kaplan H, 1999, J ACM, V46, P577, DOI 10.1145/324133.324139
   Katifori A, 2007, ACM COMPUT SURV, V39, DOI 10.1145/1287620.1287621
   KENNEDY AJ, 1996, J FUNCTIONAL PROGRAM, V6, P527
   Kleiberg E, 2001, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2001, PROCEEDINGS, P87, DOI 10.1109/INFVIS.2001.963285
   Knuth D. E., 1971, Acta Informatica, V1, P14, DOI 10.1007/BF00264289
   Lamping J., 1995, PROCCEEDINGS SIGCHI, P401, DOI DOI 10.1145/223904.223956
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Marriott K, 2011, IEEE T VIS COMPUT GR, V17, P290, DOI 10.1109/TVCG.2010.45
   Marriott Kim., 2007, P AUSTRALASIAN C COM, P7
   Miyadera Y, 1998, INFORM PROCESS LETT, V66, P187, DOI 10.1016/S0020-0190(98)00068-4
   MOEN S, 1990, IEEE SOFTWARE, V7, P21, DOI 10.1109/52.56447
   Nguyen QV, 2002, INFOVIS 2002: IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2002, P85, DOI 10.1109/INFVIS.2002.1173152
   REINGOLD EM, 1981, IEEE T SOFTWARE ENG, V7, P223, DOI 10.1109/TSE.1981.234519
   ROBERTSON G.G., 1991, CHI 91, P189, DOI DOI 10.1145/108844.108883
   SCHIEBER B, 1988, SIAM J COMPUT, V17, P1253, DOI 10.1137/0217079
   Steins B, 2007, P I KNOW 07
   SUPOWIT KJ, 1983, ACTA INFORM, V18, P377, DOI 10.1007/BF00289576
   Tolliss IG, 1998, GRAPH DRAWING ALGORI
   VAUCHER JG, 1980, SOFTWARE PRACT EXPER, V10, P553, DOI 10.1002/spe.4380100706
   WALKER JQ, 1990, SOFTWARE PRACT EXPER, V20, P685, DOI 10.1002/spe.4380200705
   WETHERELL C, 1979, IEEE T SOFTWARE ENG, V5, P514, DOI 10.1109/TSE.1979.234212
   Xiaohongs L, 2010, P 2 INT AS C INF CON, V2, P163
NR 27
TC 4
Z9 4
U1 0
U2 5
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2014
VL 44
IS 12
BP 1467
EP 1484
DI 10.1002/spe.2213
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AT2AR
UT WOS:000344733600003
DA 2024-07-18
ER

PT J
AU Padhye, V
   Tripathi, A
AF Padhye, Vinit
   Tripathi, Anand
TI Mechanisms for building autonomically scalable services on cooperatively
   shared computing platforms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed systems; replication management; autonomic systems;
   resilient services; load balancing
ID PERFORMANCE; PREDICTION
AB We present here a system architecture and its underlying mechanisms for building autonomically scalable and resilient services on cooperatively shared computing platforms. Specifically, our focus is on utilizing computing platforms exhibiting the following characteristics. The resources at a node in such platforms are allocated to competing users on fair-share basis, without any reserved resource capacities for any user. There is no platform-wide resource manager for the placement of users on different nodes. The users independently select nodes for their applications. Moreover, a node can become unavailable at any time due to crashes or shutdowns. Building scalable services in such environments poses unique challenges due to node-level fluctuations in the available resource capacities and node crashes. The service load may surge in a short time due to flash crowds. Autonomic scaling of service capacity is performed by dynamic control of the degree of service replication based on the estimated service capacity and the observed load. We present here models for estimating the service capacity at a node under fluctuating operating conditions. Furthermore, we develop adaptive and agile load distribution mechanisms for distributing load among replicas based on their time-varying service capacities. We present the results of our evaluations of these mechanisms on PlanetLab, which exemplifies the platform level characteristics considered here.Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Padhye, Vinit; Tripathi, Anand] Univ Minnesota, Dept Comp Sci, Minneapolis, MN 55455 USA.
C3 University of Minnesota System; University of Minnesota Twin Cities
RP Tripathi, A (corresponding author), Univ Minnesota, Dept Comp Sci, Minneapolis, MN 55455 USA.
EM tripathi@cs.umn.edu
CR Abdelzaher TF, 2002, IEEE T PARALL DISTR, V13, P80, DOI 10.1109/71.980028
   Aron M, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 2000 USENIX ANNUAL TECHNICAL CONFERENCE, P323
   Aron M, 2000, PERF E R SI, V28, P90, DOI 10.1145/345063.339383
   Aversa L., 2000, Conference Proceedings of the 2000 IEEE International Performance, Computing, and Communications Conference (Cat. No.00CH37086), P24, DOI 10.1109/PCCC.2000.830297
   Avetisyan AI, 2010, COMPUTER, V43, P35, DOI 10.1109/MC.2010.111
   Bavier A, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FIRST SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI'04), P253
   BIRMAN KP, 1987, ACM T COMPUT SYST, V5, P47, DOI 10.1145/7351.7478
   Bodik P., 2010, PROC SOCC, P241
   Budhiraja N., 1993, DISTRIBUTED SYSTEMS, V2, P199
   Burrows M, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P335
   Cardellini V, 1999, INT CON DISTR COMP S, P528, DOI 10.1109/ICDCS.1999.776555
   Colajanni M, 1998, INT CON DISTR COMP S, P295, DOI 10.1109/ICDCS.1998.679729
   Dinda PA, 2006, IEEE T PARALL DISTR, V17, P160, DOI 10.1109/TPDS.2006.24
   Douglis F, 2003, IEEE INTERNET COMPUT, V7, P24, DOI 10.1109/MIC.2003.1215656
   Doyle RP, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS (USITS'03), P57
   Fox A, 1997, P 16 ACM S OP SYST P, V31, P78, DOI DOI 10.1145/269005266662
   Freedland MR., 2006, The Personal Employment Contract, P10
   Genova Z, 2000, 2000 INTERNATIONAL WORKSHOPS ON PARALLEL PROCESSING, PROCEEDINGS, P89, DOI 10.1109/ICPPW.2000.869091
   Gong LG, 2002, IEEE T COMPUT, V51, P1041, DOI 10.1109/TC.2002.1032624
   Gray J., 1996, SIGMOD Record, V25, P173, DOI 10.1145/235968.233330
   Hunt Patrick, 2010, P 2010 USENIX ANN TE, P11, DOI DOI 10.5555/1855840.1855851
   Lamport L, 1998, ACM T COMPUT SYST, V16, P133, DOI 10.1145/279227.279229
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Marwah M, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P373, DOI 10.1109/DSN.2003.1209948
   MUTKA MW, 1992, IEEE T SOFTWARE ENG, V18, P319, DOI 10.1109/32.129220
   Oki B. M., 1988, Proceedings of the Seventh Annual ACM Symposium on Principles of Distributed Computing, P8, DOI 10.1145/62546.62549
   Oppenheimer D, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 2006 USENIX ANNUAL TECHNICAL CONFERENCE, P273
   Padhye V., 2011, Proceedings of the 2011 IEEE 10th International Symposium on Network Computing and Applications (NCA 2011), P314, DOI 10.1109/NCA.2011.54
   Padhye V, 2012, TECHNICAL REPORT
   Padhye V, 2011, THESIS U MINNESOTA
   Pai VS, 1998, ACM SIGPLAN NOTICES, V33, P205, DOI 10.1145/291006.291048
   Paxson V., 1998, Performance Evaluation Review, V26, P11, DOI 10.1145/277858.277865
   Plattner C, 2004, LECT NOTES COMPUT SC, V3231, P155
   Ren X., 2006, Proceedings of the 15th IEEE International Symposium on High Performance Distributed Computing (IEEE Cat. No.06TH8878), P93
   Roussopoulos M, 2006, DISTRIB COMPUT, V18, P421, DOI 10.1007/s00446-005-0150-7
   Shaikh A, 2001, IEEE INFOCOM SER, P1801, DOI 10.1109/INFCOM.2001.916678
   Shen K, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P225
   Shen K, 2002, 16 INT PAR DISTR PRO, P93
   Shenoy G., 2000, Proceedings 20th IEEE International Conference on Distributed Computing Systems, P699, DOI 10.1109/ICDCS.2000.840987
   SHIVARATRI NG, 1992, COMPUTER, V25, P33, DOI 10.1109/2.179115
   Sultan F, 2003, SYM REL DIST SYST, P177, DOI 10.1109/RELDIS.2003.1238067
   Tripathi AR, 1999, INT CON DISTR COMP S, P190, DOI 10.1109/ICDCS.1999.776520
   Urgaonkar H, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P239, DOI 10.1145/1060289.1060312
   Warns T, 2008, SYM REL DIST SYST, P279, DOI 10.1109/SRDS.2008.9
   Wolski R., 2000, Cluster Computing, V3, P293, DOI 10.1023/A:1019052825453
   Wolski R., 1998, Cluster Computing, V1, P119, DOI 10.1023/A:1019025230054
   Wolski R, 1999, FUTURE GENER COMP SY, V15, P757, DOI 10.1016/S0167-739X(99)00025-4
   Wu CJ, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P193
   Zegura EW, 2000, IEEE ACM T NETWORK, V8, P455, DOI 10.1109/90.865074
   Zhou J, 2006, 15 INT C WORLD WID W, P605
   Zhu HC, 1998, SEVENTH INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING - PROCEEDINGS, P235, DOI 10.1109/HPDC.1998.709977
NR 51
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2014
VL 44
IS 10
BP 1251
EP 1276
DI 10.1002/spe.2206
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP2AR
UT WOS:000341875200005
DA 2024-07-18
ER

PT J
AU Romero, JC
   García-Valls, M
AF Cano Romero, Julio
   Garcia-Valls, Marisol
TI Scheduling component replacement for timely execution in dynamic systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE component frameworks; real-time; dynamic systems; component replacement;
   reconfiguration
ID REAL-TIME; FRAMEWORK
AB Timely run-time software replacement techniques are a corner stone for reconciling real-time systems development and dynamic behavior. Typical real-time systems do not consider dynamic behavior because it deeply challenges predictability and timeliness. Current efforts are starting to merge the safe and predictable execution with a controllable level of dynamicity by imposing a set of bounds and limitations to the system dynamic behavior. One of the obstacles for this is how to time-bound the different operations required to effectively implement component replacement. In this paper, the main challenges for this problem are identified, and a model to ensure that components can be replaced at run time preserving the temporal properties of the system is provided that also avoids failures in replacements. A real example and simulations of our replacement model are provided that validate the presented ideas. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Cano Romero, Julio; Garcia-Valls, Marisol] Univ Carlos III Madrid, Dept Ingn Telemat, Leganes, Spain.
C3 Universidad Carlos III de Madrid
RP Romero, JC (corresponding author), Univ Carlos III Madrid, Dept Ingn Telemat, Leganes, Spain.
EM julioangel.cano@uc3m.es; marisol.garcia.valls@uc3m.es
RI Garcia-Valls, Marisol/D-6064-2013
OI Garcia-Valls, Marisol/0000-0003-2383-5310
CR Almeida JPA, 2001, DOA'01: 3RD INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS & APPLICATIONS, PROCEEDINGS, P197, DOI 10.1109/DOA.2001.954085
   [Anonymous], TRCS200019 U VIRG
   [Anonymous], JTRES 10 PRAG CZECH
   [Anonymous], 17 IFIP IEEE INT C V
   [Anonymous], CORBA COMP MOD SPEC
   [Anonymous], FUTURE GENER COMPUT
   [Anonymous], 2012, OSGI COR REL 5
   [Anonymous], 2006, SIGBED REV, DOI DOI 10.1145/1164050.1164052
   [Anonymous], INT MIDDL DOCT S TOR
   [Anonymous], OSGI SERV PLATF REL
   [Anonymous], UML PROF MARTE MOD A
   Bini E, 2005, REAL-TIME SYST, V30, P129, DOI 10.1007/s11241-005-0507-9
   Bini E, 2009, IEEE T COMPUT, V58, P279, DOI 10.1109/TC.2008.167
   Bollella G, 2000, COMPUTER, V33, P47, DOI 10.1109/2.846318
   Buttazzo GC, 2005, REAL-TIME SYST, V29, P5, DOI 10.1023/B:TIME.0000048932.30002.d9
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Davis R.I., 1995, On exploiting spare capacity in hard real-time systems
   Estévez-Ayres I, 2009, IEEE T IND INFORM, V5, P278, DOI 10.1109/TII.2009.2026422
   Valls MG, 2009, IEEE I C EMBED SOFTW, P221, DOI 10.1109/ICESS.2009.93
   García-Benjume ML, 2012, INT J PHOTOENERGY, V2012, DOI 10.1155/2012/609561
   García-Valls M, 2011, IEEE T CONSUM ELECTR, V57, P1280, DOI 10.1109/TCE.2011.6018885
   Gorinsek J., 2003, Proc. ETAPS 2003 Workshop Unanticipated Software Evolution (USE '03), P57
   Isovic D, 2000, REAL TIM SYST SYMP P, P207, DOI 10.1109/REAL.2000.896010
   JOSEPH M, 1986, COMPUT J, V29, P390, DOI 10.1093/comjnl/29.5.390
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Lehoczky J., 1989, Proceedings. Real Time Systems Symposium (Cat. No.89CH2803-5), P166, DOI 10.1109/REAL.1989.63567
   Li W, 2012, IEEE T SOFTWARE ENG, V38, P658, DOI 10.1109/TSE.2011.37
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Lui S, 1998, REAL TIM SYST SYMP P, P440, DOI 10.1109/REAL.1998.739777
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   Plsek A, 2008, LECT NOTES COMPUT SC, V5346, P124, DOI 10.1007/978-3-540-89856-6_7
   RAMOSTHUEL S, 1993, REAL-TIME SYSTEMS SYMPOSIUM: PROCEEDINGS, P160, DOI 10.1109/REAL.1993.393504
   Rasche A, 2005, WORDS 2005: 10TH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE, PROCEEDINGS, P347, DOI 10.1109/WORDS.2005.31
   Rasche A, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P322, DOI 10.1109/ISORC.2008.44
   Sharma PK, 2004, LECT NOTES COMPUT SC, V3291, P1208
   Tewksbury LA, 2001, PROC IEEE INT CONF S, P488, DOI 10.1109/ICSM.2001.972762
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   Wahler M., 2011, Proceedings 2011 27th IEEE International Conference on Data Engineering Workshops (ICDEW 2011), P174, DOI 10.1109/ICDEW.2011.5767631
NR 38
TC 12
Z9 12
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2014
VL 44
IS 8
BP 889
EP 910
DI 10.1002/spe.2181
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AL9RW
UT WOS:000339479400002
DA 2024-07-18
ER

PT J
AU Belli, F
   Endo, AT
   Linschulte, M
   Simao, A
AF Belli, Fevzi
   Endo, Andre Takeshi
   Linschulte, Michael
   Simao, Adenilso
TI A holistic approach to model-based testing of Web service compositions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE enterprise service bus; event sequence graphs; model-based testing;
   service composition testing; test case generation
AB The behavior of composed Web services depends on the results of the invoked services; unexpected behavior of one of the invoked services can threat the correct execution of an entire composition. This paper proposes an event-based approach to black-box testing of Web service compositions based on event sequence graphs, which are extended by facilities to deal not only with service behavior under regular circumstances (i.e.,where cooperating services are working as expected) but also with their behavior in undesirable situations (i.e., where cooperating services are not working as expected). Furthermore, the approach can be used independently of artifacts (e.g., Business Process Execution Language) or type of composition (orchestration/choreography). A large case study, based on a commercial Web application, demonstrates the feasibility of the approach and analyzes its characteristics. Test generation and execution are supported by dedicated tools. Especially, the use of an enterprise service bus for test execution is noteworthy and differs from other approaches. The results of the case study encourage to suggest that the new approach has the power to detect faults systematically, performing properly even with complex and large compositions. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Belli, Fevzi; Linschulte, Michael] Univ Paderborn, Paderborn, Germany.
   [Endo, Andre Takeshi; Simao, Adenilso] Univ Sao Paulo, Inst Ciencias Matemat & Comp, BR-05508 Sao Paulo, Brazil.
C3 University of Paderborn; Universidade de Sao Paulo
RP Endo, AT (corresponding author), Univ Sao Paulo, Inst Ciencias Matemat & Comp, BR-05508 Sao Paulo, Brazil.
EM aendo@icmc.usp.br
RI Endo, Andre Takeshi/I-1861-2012; Simao, Adenilso S/E-9620-2011
OI Endo, Andre Takeshi/0000-0002-8737-1749; Simao,
   Adenilso/0000-0002-1454-2607
FU FAPESP/Brazil [2009/01486-9]; CAPES/Brazil [0332-11-9]; CNPq/Brazil
   [474152/2010-3]; Fundacao de Amparo a Pesquisa do Estado de Sao Paulo
   (FAPESP) [09/01486-9] Funding Source: FAPESP
FX Andre Takeshi Endo is financially supported by FAPESP/Brazil (grant
   2009/01486-9) and CAPES/Brazil (grant 0332-11-9). Adenilso Simao is
   financially supported by CNPq/Brazil (grant 474152/2010-3). The authors
   are grateful to the anonymous reviewers for their useful comments and
   suggestions.
CR Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], SOAP VERSION 1 2
   [Anonymous], 2005, Web Services Choreography Description Language Version 1.0
   ARKIN A, 2002, W3C WEB SERVICE CHOR
   Belli F, 2006, SOFTW TEST VERIF REL, V16, P3, DOI 10.1002/stvr.335
   Belli Fevzi, 2010, Proceedings of the 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement Companion (SSIRI-C 2010), P78, DOI 10.1109/SSIRI-C.2010.26
   Belli F, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2001.989456
   BELLI F, 2011, 6 IEEE INT S SERV OR, P181, DOI DOI 10.1109/S0SE.2011.6139107
   BELLI F, 2004, 1 INT C THEOR ASP CO, P220
   BELLI F, 2006, GI JAHRESTAGUNG, P266
   Belli F, 2011, P INT COMP SOFTW APP, P630, DOI 10.1109/COMPSAC.2011.17
   Belli F, 2010, SERV ORIENTED COMPUT, V4, P3, DOI 10.1007/s11761-010-0056-5
   Benharref A, 2006, LECT NOTES COMPUT SC, V3964, P118
   Bentakouk L, 2009, LECT NOTES COMPUT SC, V5826, P16, DOI 10.1007/978-3-642-05031-2_2
   BERGLUND A, 2012, XML PATH LANGUAGE XP
   Bozkurt M., 2010, Testing Web Services: A Survey
   Canfora Gerardo, 2009, Software Engineering. International Summer Schools ISSSE 2006-2008. Revised Tutorial Lectures, P78, DOI 10.1007/978-3-540-95888-8_4
   Cavalli Ana, 2010, 2010 IEEE International Conference on Web Services (ICWS), P377, DOI 10.1109/ICWS.2010.24
   Chan KSM, 2009, LECT NOTES COMPUT SC, V4907, P363, DOI 10.1007/978-3-540-93851-4_36
   ENDO AT, 2010, 4 BRAZ WORKSH SYST A, P89
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Hoare C.A. R., 2004, COMMUNICATING SEQUEN, Velectronic
   Hou SS, 2009, INT CONF QUAL SOFTW, P331, DOI 10.1109/QSIC.2009.50
   Ilieva S., 2011, Proceedings of the 2011 IEEE 6th International Symposium on Service Oriented System Engineering (SOSE 2011), P193, DOI 10.1109/SOSE.2011.6139108
   JORDAN D, 2007, OASIS WEB SERVICES B
   Josuttis N.M., 2007, SOA in Practice: the Art of Distributed System Design
   Lei Y, 2006, IEEE T SOFTWARE ENG, V32, P382, DOI 10.1109/TSE.2006.56
   Mei LJ, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P151, DOI 10.1145/1595696.1595720
   MOUCHAWRAB S, 2007, ESEM, P41, DOI DOI 10.1109/ESEM.2007.24
   *MULESOFT, MUL ESB OP SOURC ESB
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Ni YT, 2013, IEEE T SERV COMPUT, V6, P7, DOI 10.1109/TSC.2011.22
   Papazoglou MP, 2007, VLDB J, V16, P389, DOI 10.1007/s00778-007-0044-3
   Pretschner A, 2005, PROC INT CONF SOFTW, P392
   RUSLI HM, 2011, P 6 INT WORKSH AUT S, DOI DOI 10.1145/1982595.1982602
   RUSSELL S, 2003, ARTIF INTELL, P137
   Schmidt MT, 2005, IBM SYST J, V44, P781, DOI 10.1147/sj.444.0781
   *SOURC, WS CDL ECL EX
   Utting M., 2006, Practical Model-Based Testing
   van der Aalst WMP, 1999, INFORM SOFTWARE TECH, V41, P639, DOI 10.1016/S0950-5849(99)00016-6
   WIECZOREK S, 2010, INT C QUAL INF COMM, P292, DOI DOI 10.1109/QUATIC.2010.49
   Wieczorek S, 2009, LECT NOTES COMPUT SC, V5826, P179, DOI 10.1007/978-3-642-05031-2_12
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 44
TC 23
Z9 24
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2014
VL 44
IS 2
BP 201
EP 234
DI 10.1002/spe.2161
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285BM
UT WOS:000329367700004
DA 2024-07-18
ER

PT J
AU Kakkad, V
   Attar, S
   Santosa, AE
   Fekete, A
   Scholz, B
AF Kakkad, Vasvi
   Attar, Saeed
   Santosa, Andrew E.
   Fekete, Alan
   Scholz, Bernhard
TI Curracurrong : a stream programming environment for wireless sensor
   networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE stream programming; operator placement; query language; wireless sensor
   networks
ID LANGUAGE; SYSTEM
AB The technological advances in wireless sensor network (WSN) enable the development of complex applications including health monitoring, environmental sampling, and disaster area monitoring. WSN applications deploy battery-powered sensors at remote locations for long periods. The development of energy-efficient and complex WSN applications therefore requires in-depth embedded systems programming skills that are normally not found in domain experts. So that this challenge can be overcome, programming environments for WSN need to offer a high degree of productivity, flexibility, and efficiency at the same time. In this work, we present Curracurrong, a development environment for WSNs that is based on expressing queries with stream programming. A query is represented as a stream graph consisting of stream operators and communication channels. Curracurrong provides an extensible stream operator library that adapts to a wide range of applications. It uses a novel placement algorithm that optimizes the energy consumption on sensor nodes. Through a case study, we demonstrate the productivity and flexibility of our system. We conduct experiments that evaluate the energy efficiency of our optimized operator placement algorithm. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Kakkad, Vasvi; Attar, Saeed; Santosa, Andrew E.; Fekete, Alan; Scholz, Bernhard] Univ Sydney, Sch Informat Technol, Sydney, NSW 2006, Australia.
C3 University of Sydney
RP Kakkad, V (corresponding author), Univ Sydney, Sch Informat Technol, Sydney, NSW 2006, Australia.
EM vasvibhatt@gmail.com
FU Australian Research Council (ARC) [DP 102-96-445]
FX This work is supported by Australian Research Council (ARC) grant
   Computing with Nearly Consistent Data no. DP 102-96-445.
CR Abadi D.J., 2005, CIDR, P277
   Abadi DJ, 2003, VLDB J, V12, P120, DOI 10.1007/s00778-003-0095-z
   Amato G, 2010, SOFTWARE PRACT EXPER, V40, P431, DOI 10.1002/spe.965
   [Anonymous], 2007, The Definitive ANTLR Reference: Building Domain-Specific Languages
   [Anonymous], 2001, Algorithms in C, Part 5: Graph Algorithms
   Bachour K, 2005, CITATION NETWORK PAR
   Calinescu G., 1998, Proceedings of the Thirtieth Annual ACM Symposium on Theory of Computing, P48, DOI 10.1145/276698.276711
   Calinescu G, 2000, J COMPUT SYST SCI, V60, P564, DOI 10.1006/jcss.1999.1687
   Cheong E, 2005, DES AUT TEST EUROPE, P1050, DOI 10.1109/DATE.2005.165
   Cherniack M., 2003, CIDR, P257
   DAHLHAUS E, 1994, SIAM J COMPUT, V23, P864, DOI 10.1137/S0097539792225297
   Ford LR., 1956, CAN J MATH, V8, P399, DOI [10.4153/CJM-1956-045-5, DOI 10.4153/CJM-1956-045-5.12R]
   Fourer R., 2003, AMPL-A Modeling Language for Mathematical Programming
   Gay D, 2003, ACM SIGPLAN NOTICES, V38, P1, DOI 10.1145/780822.781133
   Golab L., 2010, SYNTHESIS LECT DATA
   Green TRG, 1992, HUM COMP INT TASKS O
   Gummadi R, 2005, LECT NOTES COMPUT SC, V3560, P126
   Ingelrest F, 2010, ACM T SENSOR NETWORK, V6, DOI 10.1145/1689239.1689247
   Karger D. R., 1999, Proceedings of the Thirty-First Annual ACM Symposium on Theory of Computing, P668, DOI 10.1145/301250.301430
   Labs Sun, 2010, SUN SPOT PROGR MAN R
   Madden S, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P131, DOI 10.1145/1060289.1060303
   Madden SR, 2005, ACM T DATABASE SYST, V30, P122, DOI 10.1145/1061318.1061322
   Mainland G, 2008, ACM SIGPLAN NOTICES, V43, P335, DOI 10.1145/1411203.1411251
   Newton R, 2007, PROCEEDINGS OF THE SIXTH INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING IN SENSOR NETWORKS, P489, DOI 10.1109/IPSN.2007.4379709
   Nikolyenko V., 2011, THESIS U SYDNEY AUST
   Pathak A, 2010, IEEE T COMPUT, V59, P955, DOI 10.1109/TC.2009.168
   Smith RB, 2007, PROCEEDINGS OF THE SIXTH INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING IN SENSOR NETWORKS, P565, DOI 10.1109/IPSN.2007.4379728
   Stephens R, 1997, ACTA INFORM, V34, P491, DOI 10.1007/s002360050095
   STONE HS, 1977, IEEE T SOFTWARE ENG, V3, P85, DOI 10.1109/TSE.1977.233840
   Szewczyk R, 2004, COMMUN ACM, V47, P34, DOI 10.1145/990680.990704
   Thies W, 2002, LECT NOTES COMPUT SC, V2304, P179
   Tian H., 2006, ACM Trans. Sensor Networks, V2, P1, DOI DOI 10.1145/1138127.1138128
   Werner-Allen G, 2006, IEEE INTERNET COMPUT, V10, P18, DOI 10.1109/MIC.2006.26
   Yao Y, 2002, SIGMOD REC, V31, P9, DOI 10.1145/601858.601861
   Yu Y, 2005, MOBILE NETW APPL, V10, P115, DOI 10.1023/B:MONE.0000048550.31717.c5
NR 35
TC 2
Z9 2
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2014
VL 44
IS 2
BP 175
EP 199
DI 10.1002/spe.2165
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285BM
UT WOS:000329367700003
DA 2024-07-18
ER

PT J
AU Liang, QH
   Lee, BS
   Hung, PCK
AF Liang, Qianhui
   Lee, Bu-Sung
   Hung, Patrick C. K.
TI A rule-based approach for availability of service by automated service
   substitution
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
ID WEB SERVICES; REQUIREMENTS
C1 [Liang, Qianhui; Lee, Bu-Sung] Hewlett Packard Labs, Singapore, Singapore.
   [Hung, Patrick C. K.] Univ Ontario, Inst Technol, Fac Business & Informat Technol, Oshawa, ON, Canada.
   [Lee, Bu-Sung] Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
C3 Hewlett-Packard; Ontario Tech University; Nanyang Technological
   University
RP Liang, QH (corresponding author), Hewlett Packard Labs, Singapore, Singapore.
EM althea.liang@hp.com
RI Hung, Patrick C. K./AAI-4261-2020; Liang, Q./IST-9334-2023; Lee, Francis
   BS/G-9323-2014
OI Liang, Q./0000-0002-8108-5602; Lee, Francis BS/0000-0001-7828-7900
CR Agirre E, 2000, ECAI 2000 WORKSH ONT
   Ankolekar A, 2001, P INT SEM WEB WORKSH
   [Anonymous], 2008, WEB SERV REL MESS RE
   Athanasopoulos D, 2009, 24 IEEE ACM INT C AU
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baresi L, 2011, IEEE T SOFTWARE ENG, V37, P247, DOI 10.1109/TSE.2010.37
   Bartlett JF, 1981, 8 SOSP OPERATING SYS, V15
   Ben Mokhtar S, 2008, J SYST SOFTWARE, V81, P785, DOI 10.1016/j.jss.2007.07.030
   Birman K, 2004, P INT C SOFTW ENG
   Birman K.P., 2005, Reliable distributed systems: technologies, web services, and applications
   Bruno M, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON E-TECHNOLOGY, E-COMMERCE AND E-SERVICE, PROCEEDINGS, P138, DOI 10.1109/EEE.2005.31
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Castro M, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P173, DOI 10.1145/571637.571640
   Chan PPW, 2006, LECT NOTES COMPUT SC, V4328, P43
   CHEN HC, 1995, J AM SOC INFORM SCI, V46, P175, DOI 10.1002/(SICI)1097-4571(199504)46:3<175::AID-ASI3>3.0.CO;2-U
   Craven M, 2000, ARTIF INTELL, V118, P69, DOI 10.1016/S0004-3702(00)00004-7
   Dialani V, 2002, LECT NOTES COMPUT SC, V2400, P889
   Dobson G, 2006, P 32 EUROMICRO C SOF
   Dourdas N, 2006, LECT NOTES COMPUT SC, V4001, P239, DOI 10.1007/11767138_17
   Erradi A, 2005, P IEEE INT C WEB SER
   Fang CL, 2007, J SYST ARCHITECT, V53, P21, DOI 10.1016/j.sysarc.2006.06.001
   Fox A, SOSP 97 P 16 ACM S O
   Ghezzi C, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P69, DOI 10.1109/RE.2009.34
   Harwood M, 2010, COMPTIA NETWORK N10
   Iwayama M, 1994, P 4 C APPL NAT LANG, P162
   Liang Q, 2008, IEEE INT C WEB SERV
   Liang Q, 2008, IEEE INT C SERV COMP
   Liang QH, 2009, IEEE T SERV COMPUT, V2, P108, DOI 10.1109/TSC.2009.13
   Looker N, 2005, P INT COMP SOFTW APP, P66
   Merideth MG, 2005, 24TH IEEE SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P131, DOI 10.1109/RELDIS.2005.28
   Moser O, 2008, NONINTRUSIVE MONITOR
   NELSON VP, 1990, COMPUTER, V23, P19, DOI 10.1109/2.56849
   Open Group Research Institute, SCAL HIGH AV WEB SER
   Pallemulle SL, 2006, P IASTED PAR DISTR C, P523
   Paolucci M, 2002, 1 INT SEM WEB C JUN
   Papazoglou MP, 2007, IEEE COMPUT, V40, P8
   Ponnekanti SR, 2004, LECT NOTES COMPUT SC, V3231, P331
   Salton G, 1986, Introduction to Modern Information Retrieval
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   SCHNEIDER FB, 1984, ACM T COMPUT SYST, V2, P145, DOI 10.1145/190.357399
   SHOCH JF, 1982, COMMUN ACM, V25, P172, DOI 10.1145/358453.358455
   Sivashanmugam K, 2003, P 1 INT C WEB SERV
   SYCARA K, 1998, CMURITR9822
   Taher Y, 2006, INT DATABASE ENG APP, P166
   Touseau L, 2008, P IEEE I C SERV COMP, P415, DOI 10.1109/SCC.2008.107
   Yang K, 2007, PROCEEDINGS OF THE IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE, P572, DOI 10.1109/WI.2007.41
   Zachos K, 2008, LECT NOTES COMPUT SC, V5025, P168, DOI 10.1007/978-3-540-69062-7_17
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 48
TC 5
Z9 5
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2014
VL 44
IS 1
BP 47
EP 76
DI 10.1002/spe.2155
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 271VL
UT WOS:000328419600003
DA 2024-07-18
ER

PT J
AU Monzón, A
   Fernández, JL
   de la Puente, JA
AF Monzon, Antonio
   Fernandez, Jose L.
   de la Puente, Juan A.
TI Application of Deadlock Risk Evaluation of Architectural Models
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deadlock; software architecture; MBSE; UML; concurrency
AB Software architectural evaluation is a key discipline used to identify, at early stages of a real-time system (RTS) development, the problems that may arise during its operation. Typical mechanisms supporting concurrency, such as semaphores, mutexes or monitors, usually lead to concurrency problems in execution time that are difficult to be identified, reproduced and solved. For this reason, it is crucial to understand the root causes of these problems and to provide support to identify and mitigate them at early stages of the system lifecycle. This paper aims to present the results of a research work oriented to the development of the tool called Deadlock Risk Evaluation of Architectural Models (DREAM) to assess deadlock risk in architectural models of an RTS. A particular architectural style, Pipelines of Processes in Object-Oriented ArchitecturesUML (PPOOA) was used to represent platform-independent models of an RTS architecture supported by the PPOOA Visio tool. We validated the technique presented here by using several case studies related to RTS development and comparing our results with those from other deadlock detection approaches, supported by different tools. Here we present two of these case studies, one related to avionics and the other to planetary exploration robotics. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Monzon, Antonio] Airbus Mil, Getafe 28906, Spain.
   [Fernandez, Jose L.] Tech Univ Madrid UPM, Sch Ind Engn, Madrid 28006, Spain.
   [de la Puente, Juan A.] Tech Univ Madrid UPM, Telecommun Engn Sch, Madrid 28040, Spain.
C3 Universidad Politecnica de Madrid; Universidad Politecnica de Madrid
RP Monzón, A (corresponding author), Airbus Mil, John Lennon Av, Getafe 28906, Spain.
EM antonio.monzon@military.airbus.com
RI de la Puente, Juan Antonio/J-9741-2014
OI de la Puente, Juan Antonio/0000-0002-7673-9835; FERNANDEZ SANCHEZ, JOSE
   LUIS/0000-0002-4699-9994
CR Adve S, 2010, COMMUN ACM, V53, P84, DOI 10.1145/1839676.1839697
   Agarwal R, 2010, IBM J RES DEV, V54, DOI 10.1147/JRD.2010.2060276
   [Anonymous], M DEADLINES HARD REA
   [Anonymous], 2008, TECHNICAL REPORTS CO
   [Anonymous], 1999, Concurrency-state models and Java programs
   Balarin F, 2003, COMPUTER, V36, P45, DOI 10.1109/MC.2003.1193228
   Bensalem S, 2009, LECT NOTES COMPUT SC, V5643, P614, DOI 10.1007/978-3-642-02658-4_45
   BRESINA JL, 2001, EUR SPAC AG ESA WORK
   CHAKI S, 2006, CMUSEI2006TN028
   Chen X, 2005, DES AUT CON, P260, DOI 10.1109/DAC.2005.193812
   Cheung SC, 1999, ACM T SOFTW ENG METH, V8, P49, DOI 10.1145/295558.295570
   Clarke EM, 1999, MODEL CHECKING, P1
   Coffman E. G.  Jr., 1971, Computing Surveys, V3, P67, DOI 10.1145/356586.356588
   Fernandez JL., 1998, 5 INT C SOFTW REUS
   FERNANDEZ JL, 2001, INT C SOFTW SYST ENG
   Sánchez JLF, 2009, LECT NOTES COMPUT SC, V5570, P164, DOI 10.1007/978-3-642-01924-1_12
   Giannakopoulou D, 2005, ICAPS 05 WORKSH VER
   Monzon A, 2010, THESIS UPM
   MONZON A, 2008, EMB REAL TIM SOFTW I
   Monzon A, 2010, APPL DEADL RISK ASS
   Monzón A, 2009, INT SYM IND EMBED, P181, DOI 10.1109/SIES.2009.5196214
   Ovaska E., 2009, VTT PUBLICATIONS, V705
   SHA L, 1990, IEEE T COMPUT, V39, P1175, DOI 10.1109/12.57058
   Singhoff F., 2004, Ada Letters, V24, P1
   Sutter H, 2008, DR DOBBS J, V33, P53
   VOLPE R, 2001, P 2001 IEEE AER C BI
   Washington R, P 1999 IEEE AER C
NR 27
TC 3
Z9 3
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2012
VL 42
IS 9
BP 1137
EP 1163
DI 10.1002/spe.1118
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 983FC
UT WOS:000307103100004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Khajeh-Hosseini, A
   Greenwood, D
   Smith, JW
   Sommerville, I
AF Khajeh-Hosseini, Ali
   Greenwood, David
   Smith, James W.
   Sommerville, Ian
TI The Cloud Adoption Toolkit: supporting cloud adoption decisions in the
   enterprise
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; organizational change; cloud adoption; decision
   support; system deployment; infrastructure modeling
AB Cloud computing promises a radical shift in the provisioning of computing resources within the enterprise. This paper describes the challenges that decision makers face when assessing the feasibility of the adoption of cloud computing in their organizations, and describes our Cloud Adoption Toolkit, which has been developed to support this process. The toolkit provides a framework to support decision makers in identifying their concerns, and matching these concerns to appropriate tools/techniques that can be used to address them. Cost Modeling is the most mature tool in the toolkit, and this paper shows its effectiveness by demonstrating how practitioners can use it to examine the costs of deploying their IT systems on the cloud. The Cost Modeling tool is evaluated using a case study of an organization that is considering the migration of some of its IT systems to the cloud. The case study shows that running systems on the cloud using a traditional always on approach can be less cost effective, and the elastic nature of the cloud has to be used to reduce costs. Therefore, decision makers have to model the variations in resource usage and their systems' deployment options to obtain accurate cost estimates. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Khajeh-Hosseini, Ali; Greenwood, David; Smith, James W.; Sommerville, Ian] Univ St Andrews, Cloud Comp Colab, Sch Comp Sci, St Andrews KY16 9AJ, Fife, Scotland.
C3 University of St Andrews
RP Khajeh-Hosseini, A (corresponding author), Univ St Andrews, Cloud Comp Colab, Sch Comp Sci, St Andrews KY16 9AJ, Fife, Scotland.
EM akh@cs.st-andrews.ac.uk
FU Scottish Informatics and Computer Science Alliance (SICSA); EPSRC
   [EP/H042644/1, EP/F001096/1]; EPSRC [EP/H042644/1, EP/F001096/1] Funding
   Source: UKRI
FX We thank the Scottish Informatics and Computer Science Alliance (SICSA)
   and the EPSRC (grant numbers EP/H042644/1 and EP/F001096/1) for funding
   this work. We also thank our colleagues at the UK's Large-Scale Complex
   IT Systems Initiative for their comments.
CR Accenture, 2009, ACC CLOUD COMP ACC
   [Anonymous], 2008, P 2008 ACM IEEE C SU, DOI DOI 10.1109/SC.2008.5217932
   [Anonymous], 2009, NIST DEFINITION CLOU
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], NICK CARR WAYS CLOUD
   [Anonymous], 2008, P 2008 GRID COMP ENV, DOI DOI 10.1109/GCE.2008.4738443
   [Anonymous], 2008, Smart 2020: Enabling the Low Carbon Economy in the Information Age
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Brown DJ, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1666420.1666438
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Catteddu Daniele., 2009, Cloud Computing Benefits, risks and recommendations for information security
   Chen G., 2008, NSDI 08 P 5 USENIX S, DOI [10.5555/1387589.1387613, DOI 10.5555/1387589.1387613]
   Clidaras J., 2009, SYNTHESIS LECT COMPU
   Computer Sciences Corporation, 2009, DOING BUS CLOUD
   Creeger M, 2009, COMMUN ACM, V52, P50, DOI 10.1145/1536616.1536633
   de Assunçao MD, 2009, HPDC'09: 18TH ACM INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, P141
   Fellows W, 2008, PARTLY CLOUDY BLUE S
   GLAUTIER Michael., 2001, ACCOUNTING THEORY PR, V7th
   Hanseth O., 2001, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V10, P261, DOI 10.1023/A:1012637309336
   Jaeger P, 2009, 1 MONDAY, P14
   Joint A, 2009, COMPUTER LAW SECURIT, V25, P199
   KEEN PGW, 1981, COMMUN ACM, V24, P24, DOI 10.1145/358527.358543
   Khajeh-Hosseini Ali, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P450, DOI 10.1109/CLOUD.2010.37
   Khajeh-Hosseini Ali., 2010, Research Challenges for Enterprise Cloud Computing
   Kondo D., 2009, PAR DISTR PROC 2009, P1, DOI DOI 10.1109/IPDPS.2009.5160911
   Lapointe L, 2005, MIS QUART, V29, P461
   MARKUS ML, 1983, COMMUN ACM, V26, P430, DOI 10.1145/358141.358148
   Mowbray M, 2009, SCRIPTED J LAW TECHN, V6, P132
   Ristenpart T, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P199
   Sommerville I, 2009, LECT NOTES COMPUT SC, V5565, P515, DOI 10.1007/978-3-642-02144-2_40
   Sriram I., 2010, RES AGENDA CLOUD TEC
   Vaquero LM, 2009, ACM SIGCOMM COMP COM, V39, P50, DOI 10.1145/1496091.1496100
   Varia J., 2010, Architecting for the cloud: Best practices
   Walker E, 2010, COMPUTER, V43, P44, DOI 10.1109/MC.2010.115
   Walker E, 2009, COMPUTER, V42, P35, DOI 10.1109/MC.2009.135
   Yanosky R., 2008, The Tower and The Cloud, P126
   [No title captured]
NR 37
TC 137
Z9 154
U1 1
U2 38
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2012
VL 42
IS 4
SI SI
BP 447
EP 465
DI 10.1002/spe.1072
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902OK
UT WOS:000301047600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Huang, TC
   Chang, DW
AF Huang, Ting-Chang
   Chang, Da-Wei
TI VM aware journaling: improving journaling file system performance in
   virtualization environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE journaling file systems; virtual machines; file system consistency
ID MEMORY
AB Journaling file systems, which are widely used in modern operating systems, guarantee file system consistency and data integrity by logging file system updates to a journal, which is a reserved space on the storage, before the updates are written to the data storage. Such journal writes increase the write traffic to the storage and thus degrade the file system performance, especially in full data journaling, which logs both metadata and data updates. In this paper, a new journaling approach is proposed to eliminate journal writes in server virtualization environments, which are gaining in popularity in server platforms. Based on reliable hardware subsystems and virtual machine monitor (VMM), the proposed approach eliminates journal writes by retaining journal data (i.e. logged file system updates) in the memory of each virtual machine and ensuring the integrity of these journal data through cooperation between the journaling file systems and the VMM. We implement the proposed approach in Linux ext3 in the Xen virtualization environment. According to the performance results, a performance improvement of up to 50.9journaling approach of ext3 due to journal write elimination. In metadata-write dominated workloads, this approach could even outperform the metadata journaling approaches of ext3, which do not guarantee data integrity. These results demonstrate that, on virtual servers with reliable VMM and hardware subsystems, the proposed approach is an effective alternative to traditional journaling approaches. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Chang, Da-Wei] Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 701, Taiwan.
   [Huang, Ting-Chang] Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu 300, Taiwan.
C3 National Cheng Kung University; National Yang Ming Chiao Tung University
RP Chang, DW (corresponding author), Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, 1 Ta Hsueh Rd, Tainan 701, Taiwan.
EM dwchang@mail.ncku.edu.tw
RI huang, ting/GRR-3141-2022
FU National Science Council, Taiwan, Republic of China [NSC
   97-2221-E-006-138-MY3]
FX We thank the anonymous reviewers and the editor for their helpful
   comments on this paper. This research was supported in part by grant NSC
   97-2221-E-006-138-MY3 from the National Science Council, Taiwan,
   Republic of China.
CR AMD Inc, 2010, AMD64 ARCH PROGR MAN
   [Anonymous], VDTS 09
   [Anonymous], SIGMETRICS 09 P 11 I
   [Anonymous], 2003, ACM SIGOPS OPERATING
   [Anonymous], ATEC 05
   [Anonymous], 2009, USENIX ANN TECHN C
   [Anonymous], 2007, P 5 USENIX C FIL STO
   [Anonymous], 2009, P 7 USENIX C FIL 09
   BAKER M, 1992, SIGPLAN NOTICES, V27, P10, DOI 10.1145/143371.143380
   Bateman K, 2009, IDC CHARTS RISE VIRT
   Blackwell Trevor., 1995, P USENIX 1995 TECHNI, P23
   Bonwick J., 2006, Zfs: The last word in file systems
   Brown E, 2009, HYPERVISOR TECHNOLOG
   Bryant R, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK, P259
   Chen PM, 1996, ACM SIGPLAN NOTICES, V31, P74, DOI 10.1145/248209.237154
   Chen PM, 2001, EIGHTH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, PROCEEDINGS, P133
   Chou A., 2001, Operating Systems Review, V35, P73, DOI 10.1145/502059.502042
   Cisco Systems Inc, 2010, DAT SHEET CISC UCS C
   Edel NK, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P596, DOI 10.1109/MASCOT.2004.1348317
   GAIT J, 1990, COMMUN ACM, V33, P81, DOI 10.1145/76372.76378
   Ganger GR, 2000, ACM T COMPUT SYST, V18, P127, DOI 10.1145/350853.350863
   Garfinkel T., 2003, Operating Systems Review, V37, P193, DOI 10.1145/1165389.945464
   Greenan KM, 2007, HOTDEP 07 P 3 WORKSH, P10
   Hagmann R., 1987, Operating Systems Review, V21, P155, DOI 10.1145/37499.37518
   Heiser G, 2010, APSYS 10 P 1 AS PAC, DOI http://doi.acm.org/10.1145/1851276.1851282
   Heiser G, 2005, ACM SIGOPS OPERATING, V40, P95, DOI http://doi.acm.org/10.1145/1113361.1113363
   Heiser G, 2010, STC 10 P 5 WORKSH SC
   Hitz D., 1994, Proceedings of the USENIX Winter 1994 Technical Conference, P19
   Hsu ST, 1999, SOFTWARE PRACT EXPER, V29, P985, DOI 10.1002/(SICI)1097-024X(199909)29:11<985::AID-SPE269>3.0.CO;2-1
   Intel Corporation, 2005, RAS TECHN ENT
   Intel Corporation, Intel 64 and IA-32 Architectures Software Developer's Manuals
   Intel Corporation, 2006, INTEL TECHNOLOGY J, V10, P167
   Intel Corporation, 2002, INT E7500 CHIPS MCH
   Katcher Jeffrey., PostMark: A New File System Benchmark
   Kim JinKyu., 2008, 8th ACM IEEE Conference on Embedded Software (EMSOFT '08), P31
   Klein G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P207
   Kustarz E, FILEBENCH NEW IMPROV
   Lowell D. E., 1997, Operating Systems Review, V31, P92, DOI 10.1145/269005.266665
   Lu C, 2005, SCALABLE DISKLESS CH, P1
   McCune JM, 2010, P IEEE S SECUR PRIV, P143, DOI 10.1109/SP.2010.17
   Microsoft Corporation, 2009, HYP V SERV
   Miller EL, 2001, EIGHTH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, PROCEEDINGS, P95, DOI 10.1109/HOTOS.2001.990067
   Oglesby R, 2005, ADV TECHNICAL DESIGN
   Oracle Corporation, 2008, BTRFS DES
   Pfaff B, 2006, P 3 C NETW SYST DES, P26
   Prabhakaran Vijayan, 2005, P OF THE 20 ACM S ON, V39, P206
   Reuter A, 1992, T PROCESSING CONCEPT
   Rosenblum M., 1991, Operating Systems Review, V25, P1, DOI 10.1145/121133.121137
   Steinberg U, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P209
   Swift M. M., 2003, Operating Systems Review, V37, P207, DOI 10.1145/1165389.945466
   Tessin MV, 2010, VERIFY 10 P 6 INT VE
   Ts'o TY, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK, P235
   Wang A. A., 2006, ACM Transaction on Storage, V2, P309, DOI 10.1145/1168910.1168914
   Wang J, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FAST'02 CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P47
   Williamson M, 2008, XENFS
   Wright CharlesP., 2007, ACM T STORAGE, V3, P4
   WU M, 1994, SIGPLAN NOTICES, V29, P86, DOI 10.1145/195470.195506
   Yunhong J, 2009, XEN SUMM XEN SHANGH
   Zhang ZH, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES (FAST'03), P59
NR 59
TC 6
Z9 6
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2012
VL 42
IS 3
BP 303
EP 330
DI 10.1002/spe.1069
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 887KP
UT WOS:000299926600003
DA 2024-07-18
ER

PT J
AU da Silva, IF
   Neto, PADS
   O'Leary, P
   de Almeida, ES
   Meira, SRD
AF da Silva, Ivonei Freitas
   da Mota Silveira Neto, Paulo Anselmo
   O'Leary, Padraig
   de Almeida, Eduardo Santana
   de Lemos Meira, Silvio Romero
TI Agile software product lines: a systematic mapping study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE systematic mapping study; Agile methods; software product lines; Agile
   principles
AB Background: Software product lines and Agile methods have been an effective solution for dealing with the growing complexity of software and handling competitive needs of software organizations. They also share common goals, such as improving productivity, reducing time-to-market, decreasing development costs and increasing customer satisfaction. There has been growing interest in whether the integration of Agile and SPL could provide further benefits and solve many of the outstanding issues surrounding software development. Objective: This study investigates the state-of-the-art in Agile SPL approaches, while identifying gaps in current research and synthesizing available evidence. It also provides a basis for a deeper understanding of the issues involved in the integration of Agile and SPL. Method: A mapping study was undertaken to analyze the relation between Agile and SPL methods. A set of four research questions were defined in which the 32 primary studies were evaluated. Results: This study provides insights into the integration of Agile and SPL approaches, it identifies the current gaps in the research, synthesize the available evidence and propose specific Agile methods and practices for integration in SPL. Conclusions: In general, few studies describe the underlying Agile principles being adopted by proposed Agile SPL solutions. The most common Agile practices proposed by the studies came from the XP and Scrum methods, particularly in the pro-active SPL strategy. We identify certain Agile methods that are being overlooked by the Agile SPL community, and propose specific SPL practices areas suitable for adoption of Agile practices. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [da Silva, Ivonei Freitas; da Mota Silveira Neto, Paulo Anselmo; de Lemos Meira, Silvio Romero] Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
   [O'Leary, Padraig; de Almeida, Eduardo Santana] Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
   [da Silva, Ivonei Freitas; da Mota Silveira Neto, Paulo Anselmo; O'Leary, Padraig; de Almeida, Eduardo Santana] RiSE, Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco; Universidade Federal da Bahia
RP da Silva, IF (corresponding author), Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
EM ifsse3@gmail.com
RI Meira, Silvio/AAT-9381-2020; Ines, INCT/J-9550-2013; Silveira,
   Paulo/AFR-7826-2022; de Almeida, Eduardo/JJC-2493-2023
CR Ali Babar M., 2009, Conference: Software Product Lines, 13th International Conference, SPLC 2009, San Francisco, California, USA, 24-28 August 2009, P171
   Ambler Scott W., 2004, The Object Primer: Agile Model-Driven Development with UML
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Beck K., 2011, MANIFESTO AGILE SOFT
   Boehm B., 2003, BALANCING AGILITY DI
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BUDGEN D, 2008, P PPIG 2008 LANC U, P195
   CARBON R, 2006, APLE 06 P 1 INT WORK
   Carbon R, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P180, DOI 10.1109/SPLC.2008.21
   Cockburn A., 2002, AGILE SOFTWARE DEV
   CRUZES DS, 2010, EMP SOFTW ENG MEAS E
   Dixon-Woods Mary, 2005, J Health Serv Res Policy, V10, P45, DOI 10.1258/1355819052801804
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Feng K., 2008, THESIS U TEXAS DALLA
   GHANAM Y, 2009, SIGSOFT SOFTWARE ENG, V34, P25
   GHANAM Y, 2010, XP 10 11 INT C AG PR
   GHANAM Y, 2008, 5 SOFTW PROD LIN TES, P151
   GHANAM Y, 2010, SPLC 10 P SOFTW PROD
   GHANAM Y, 2010, AG 10 P INT C AG MET
   GHANAM Y, 2008, SPLC DOCT S 2008 CON
   Ghanam Y, 2009, AGILE 2009 CONFERENCE, P41, DOI 10.1109/AGILE.2009.12
   Gylterud S., 2009, THESIS NORWEGIAN U S
   HANSSEN G, 2010, HICSS 10 P 2010 43 H, P1
   Hanssen GK, 2008, J SYST SOFTWARE, V81, P843, DOI 10.1016/j.jss.2007.10.025
   Jones L. G., 2005, CMUSEI2005TN028
   KAKARONTZAS G, 2008, CIMCA 08 P 2008 INT, P146
   Karam M, 2008, J SYST SOFTWARE, V81, P855, DOI 10.1016/j.jss.2007.10.031
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kurmann R., 2006, APLE 06 P 1 INT WORK
   Larman Craig., 2003, AGILE ITERATIVE DEV
   Linden F. J. van d., 2007, SOFTWARE PRODUCT LIN
   Martinez J, 2009, LECT NOTES BUS INF P, V31, P247
   McGregor JD, 2008, J OBJECT TECHNOL, V7, P7
   Miller JH, 2007, PRINC STUD COMPLEX, P1, DOI 10.1007/1-4020-5602-8_1
   Mohan K, 2010, IEEE SOFTWARE, V27, P48, DOI 10.1109/MS.2010.31
   NAVARRETE F, 2006, APLE 06 P 1 INT WORK
   Neill CJ, 2006, COMPUTER, V39, P131, DOI 10.1109/MC.2006.435
   NOOR MA, 2006, APLE 06 P 1 INT WORK
   Noor MA, 2008, J SYST SOFTWARE, V81, P868, DOI 10.1016/j.jss.2007.10.028
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   O'Leary P, 2012, J SOFTW-EVOL PROC, V24, P561, DOI 10.1002/smr.498
   OLEARY P, 2010, THESIS U LIMERICK LI
   Paige RF, 2006, LECT NOTES COMPUT SC, V4044, P198
   Petersen K., 2008, EASE 08 P 12 INT C E
   Pikkarainen M, 2009, LECT NOTES BUS INF P, V32, P401
   RAATIKAINEN M, 2008, NW MODE 08 NORD WORK, P247
   READ K, 2005, THESIS U CALGARY CAL
   RIEGGER F, 2010, THESIS U CALGARY CAL
   Tian K., 2006, P 1 INT WORKSH AG PR
   TOURRET R, 2006, THESIS U YORK YORK
   Trinidad P, 2008, J SYST SOFTWARE, V81, P883, DOI 10.1016/j.jss.2007.10.030
   TRINIDAD P, 2006, APLE 06 P 1 INT WORK
   WIERINGA R, 2005, REQUIR ENG, V11, P102, DOI DOI 10.1007/S00766-005-0021-6
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 55
TC 26
Z9 27
U1 0
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2011
VL 41
IS 8
SI SI
BP 899
EP 920
DI 10.1002/spe.1078
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 777DW
UT WOS:000291596600004
DA 2024-07-18
ER

PT J
AU Lee, S
   Bae, G
   Chae, HS
   Bae, DH
   Kwon, YR
AF Lee, Sukhee
   Bae, Gigon
   Chae, Heung Seok
   Bae, Doo-Hwan
   Kwon, Yong Rae
TI Automated scheduling for clone-based refactoring using a competent GA
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE refactoring; scheduling; genetic algorithm
ID GENETIC ALGORITHMS; DESIGN QUALITY; CODE
AB Refactoring is a widely accepted technique to improve the software quality by restructuring its design without changing its behavior. In general, a sequence of refactorings needs to be applied until the quality of the code is improved satisfactorily. In this case, the final design after refactoring can vary with the application order of refactorings, thereby producing different quality improvements. Therefore, it is necessary to determine a proper refactoring schedule to obtain as many benefits as possible. However, there is little research on the problem of generating appropriate schedules to maximize quality improvement. In this paper, we propose an approach to automatically determine an appropriate schedule to maximize quality improvement through refactoring. We first detect code clones that are suitable for refactoring and generate the most beneficial refactoring schedule to remove them. It is straightforward to select the best from the exhaustively enumerated schedules. However, such a technique becomes NP-hard, as the number of available refactorings increases. We apply a genetic algorithm (GA) to generate the best refactoring schedule within a reasonable time to cope with this problem. We compare the GA-based approach with manual scheduling, greedy heuristic-based, and exhaustive approaches for four open systems. The results show that the proposed GA-based approach generates more beneficial schedules than the others. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Lee, Sukhee; Bae, Gigon; Bae, Doo-Hwan; Kwon, Yong Rae] Korea Adv Inst Sci & Technol, Dept Comp Sci, Coll Informat Sci & Technol, Taejon 305701, South Korea.
   [Chae, Heung Seok] Pusan Natl Univ, Pusan, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Pusan National
   University
RP Lee, S (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, Coll Informat Sci & Technol, 335 Gwahak Ro, Taejon 305701, South Korea.
EM shlee@se.kaist.ac.kr
RI Kwon, Yong Rae/C-1872-2011; Bae, Doo-Hwan/C-1538-2011
OI Bae, Gigon/0000-0003-0648-9735
FU Defense Acquisition Program Administration; Agency for Defense
   Development
FX This research was partially supported by the Defense Acquisition Program
   Administration and the Agency for Defense Development under the
   contract.
CR [Anonymous], P 11 ANN GEN EV COMP
   [Anonymous], 2009, INT J HYBRID INF TEC
   [Anonymous], 2002, The Design of Innovation: Lessons from and for Competent Genetic Algorithms
   [Anonymous], 2007, P WORKSH REF TOOLS W
   [Anonymous], THESIS KATHOLIEKE U
   [Anonymous], P 11 EUR C ART INT
   [Anonymous], 2000, AUTOMATIC REENGINEER
   Antoniol G, 2005, PROC IEEE INT CONF S, P240
   Antoniol G, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P172, DOI 10.1109/METRIC.2004.1357901
   Apel S., 2006, P ECOOP WORKSH ASP D, P1
   Arthur LJ., 1988, Software Evolution: The Software Maintenance Challenge
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Beck K., 2000, EXTREME PROGRAMMING
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1885
   Cheng RW, 1999, COMPUT IND ENG, V36, P343, DOI 10.1016/S0360-8352(99)00136-9
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Cooper KD, 1999, ACM SIGPLAN NOTICES, V34, P1, DOI 10.1145/315253.314414
   CORY JK, 2008, EMPIR SOFTW ENG, V13, P645
   CORY JK, 2006, J SOFTWARE MAINTENAN, V18, P61
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fatiregun D, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P3
   Fatiregun D, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P65
   Feng CW, 2006, AUTOMAT CONSTR, V15, P186, DOI 10.1016/j.autcon.2005.04.001
   FERNANDO BA, 1998, MOOD2 METRICS SET
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Giesecke S., 2006, P DUPL RED SIM SOFTW
   Harik G.R., 1997, FDN GENETIC ALGORITH, P247
   Harman M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P58, DOI 10.1109/METRIC.2004.1357891
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Ip WH, 2000, COMPUT IND ENG, V38, P283, DOI 10.1016/S0360-8352(00)00044-9
   JOHNSON JH, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P120, DOI 10.1109/ICSM.1994.336783
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Knjazew D., 2002, OmeGA: A competent genetic algorithm for solving permutation and scheduling problems
   Lague B, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P314, DOI 10.1109/ICSM.1997.624264
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Meier C, 2007, J MECH DESIGN, V129, P566, DOI 10.1115/1.2717224
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   PERRY D, 2000, EMPIRICAL STUDIES SO, P345
   PIPKA JU, 2002, P 3 INT C EXTREME PR, P178
   Pongcharoen P, 2004, EUR J OPER RES, V152, P215, DOI 10.1016/S0377-2217(02)00645-8
   Qayum F, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/SSBSE.2009.27
   RYSSELBERGHE FV, 2003, P INT WORKSH EV LARG
   Sahraoui HA, 2000, PROC IEEE INT CONF S, P154, DOI 10.1109/ICSM.2000.883034
   Sastry K., 2001, Intelligent Engineering Systems Through Artificial Neural Networks, V11, P129
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   ZHENMIN L, 2006, IEEE T SOFTWARE ENG, V32, P176
NR 58
TC 31
Z9 35
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2011
VL 41
IS 5
SU SI
BP 521
EP 550
DI 10.1002/spe.1031
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 736RQ
UT WOS:000288512200004
DA 2024-07-18
ER

PT J
AU Ruiz-Martínez, A
   Sánchez-Martínez, D
   Marín-López, CI
   Gil-Pérez, M
   Gómez-Skarmeta, AF
AF Ruiz-Martinez, Antonio
   Sanchez-Martinez, Daniel
   Inmaculada Marin-Lopez, C.
   Gil-Perez, Manuel
   Gomez-Skarmeta, Antonio F.
TI An advanced certificate validation service and architecture based on
   XKMS
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE certificate validation; Advanced Electronic Signatures; service-oriented
   architecture; XKMS; validation data
ID DESIGN
AB The appearance of some laws that make the electronic signature (e-signature) legally equivalent to the handwritten signature (under some circumstances) has favoured its use in different fields, such as e-commerce and e-government. In these fields, the e-signatures associated to some documents have to remain valid over long periods of time. For these kinds of e-signatures, Advanced Electronic Signature (AdES) forms have appeared. These forms specify the information to include along with the e-signature so that it remains valid for a long time after its creation. Basically, this information comprises signers' certificates, a set of certificates up to a trust anchor, certificate validation responses, etc. These data can be gathered by using different Public Key Infrastructure-compliant protocols. However, the support of different protocols is complex for clients. XML Key Management Specification (XKMS) appeared with the aim of simplifying the certificate management, but it only supports a simple validation mechanism that does not provide the information needed for long-term validation. As a solution to this problem, we have extended XKMS by defining an advanced certificate validation service to support the obtaining of validation data needed for different scenarios, such as the building of AdES forms or validation data registries. This extension also defines the different components needed to support this kind of a service. Furthermore, the defined service has been implemented and incorporated into an e-government infrastructure. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Ruiz-Martinez, Antonio; Sanchez-Martinez, Daniel; Inmaculada Marin-Lopez, C.; Gil-Perez, Manuel; Gomez-Skarmeta, Antonio F.] Univ Murcia, Dept Informat & Commun Engn, E-30100 Murcia, Spain.
C3 University of Murcia
RP Ruiz-Martínez, A (corresponding author), Univ Murcia, Dept Informat & Commun Engn, E-30100 Murcia, Spain.
EM arm@um.es
RI Gomez, Antonio/HNB-6290-2023; Perez, Gregorio Martinez/I-7620-2013;
   Skarmeta Gómez, Antonio/K-4537-2014; Ruiz-Martínez, Antonio/B-8921-2008
OI Skarmeta Gómez, Antonio/0000-0002-5525-1259; Ruiz-Martínez,
   Antonio/0000-0002-8433-159X; Gil Perez, Manuel/0000-0002-7768-9665
FU Programa de Ayuda a los Grupos de Excelencia de la Fundacion Seneca
   [04552/GERM/06]; CICYT [TIN2008-06441-C02-02]
FX This work has been partially funded by 'Programa de Ayuda a los Grupos
   de Excelencia de la Fundacion Seneca 04552/GERM/06' and CICYT
   TIN2008-06441-C02-02 project.
CR Adams C., 2001, 3161 IETF RFC
   Calero JMA, 2009, J SYST ARCHITECT, V55, P289, DOI 10.1016/j.sysarc.2008.10.004
   [Anonymous], 1999, 2560 IETF RFC
   [Anonymous], 2008, 5280 IETF RFC
   [Anonymous], 2007, NIST SPECIAL PUBLICA
   BALZIC AJ, 2009, IETF INTERN IN PRESS
   BERBECARU D, 2002, P 2 IEEE INT S SIGN, P277
   Blazic AJ, 2007, COMPUT STAND INTER, V29, P398, DOI 10.1016/j.csi.2006.06.004
   CANTOR S, 2005, ASSERTUIBS POTOCOLS
   *CEN, 2007, CEN WORKSH AGR CWA
   *CONS SUP ADM EL, 2009, ESQ ID FIRM EL ADM P
   COOPER M, 2005, 4158 IETF RFC
   CRUELLAS JC, 2003, XML ADV ELECT SIGNA
   DILLAWAY B, 2002, IMPLEMENTING XML KEY
   *ETSI, 2007, 102734 ETSI TS
   *ETSI, 2007, 102904 ETSI TS
   *ETSI, 2008, 102640 ETSI
   *EUR PARL, 2002, OFFICIAL J L, V15, P24
   FREEMAN T, 2007, 5055 IETF RFC
   GONDROM T, 2007, 4998 IETF RFC
   HALAPPANAVAR M, 2004, P 17 ANN WORK C DAT, P215
   HALLAMBAKER P, 2009, W3C RECOMMENDATION
   Hormann TP, 2006, COMPUT COMMUN, V29, P291, DOI 10.1016/j.comcom.2004.12.008
   HOUSLEY R, 2004, 3852 IETF RFC
   Kim J, 2005, PROC WRLD ACAD SCI E, V8, P136
   LLOYD S, 2002, UNDERSTANDING CERTIF
   *MIN EC HAC, 2007, B OF EST, V90
   Nezhad HRM, 2006, COMPUTER, V39, P24
   *OASIS, 2007, DIG SIGN SERV COR PR
   *OPENXKMS, 2009, OP SOURC IMP XKMS 2
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   PINKAS D, 2008, 5126 IETF RFC
   PINKAS D, 2002, 3379 IETF RFC
   RIVEST R, 1997, LNCS, V1189, P69, DOI DOI 10.1007/3-540-62494-5
   *RSA LAB, 1993, PKCS 7 CRYPT MESS SY
   SANCHEZMARTINEZ D, 2008, EUR U INF SYST EUNIS
   SANCHEZMARTINEZ D, 2008, 3 INT C DIG INF MAN, P813
   *SLOV NAT SEC AUTH, 2006, DEP INF SEC EL SIGN
   *U MURC, 2009, SUMA CAMP VIRT
   *UN, 2002, UNCITRAL MOD LAW EL
   *VERSIGN INC, 2009, XML TRUST SERV XKMS
   *W3C, 2002, XML SIGN SYNT PROC
   WAHL M, 1997, 2251 IETF RFC
   2000, OFFICIAL J EUROPEAN, V13, P12
NR 44
TC 3
Z9 3
U1 0
U2 3
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2011
VL 41
IS 3
BP 209
EP 236
DI 10.1002/spe.996
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 724WZ
UT WOS:000287608400001
DA 2024-07-18
ER

PT J
AU Rosik, J
   Le Gear, A
   Buckley, J
   Babar, MA
   Connolly, D
AF Rosik, Jacek
   Le Gear, Andrew
   Buckley, Jim
   Babar, Muhammad Ali
   Connolly, Dave
TI Assessing architectural drift in commercial software development: a case
   study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software/program verification; architecture consistency; architecture
   degeneration; reflection models
ID REFLECTION MODELS; DESIGN; CHECKING
AB Objectives: Software architecture is perceived as one of the most important artefacts created during a system's design. However, implementations often diverge from their intended architectures: a phenomenon called architectural drift. The objective of this research is to assess the occurrence of architectural drift in the context of de novo software development, to characterize it, and to evaluate whether its detection leads to inconsistency removal. Method: An in vivo, longitudinal case study was performed during the development of a commercial software system, where an approach based on Reflexion Modelling was employed to detect architectural drift. Observation and think-aloud data, captured during the system's development, were assessed for the presence and types of architectural drift. When divergences were identified, the data were further analysed to see if identification led to the removal of these divergences. Results: The analysed system diverged from the intended architecture, during the initial implementation of the system. Surprisingly however, this work showed that Reflexion Modelling served to conceal some of the inconsistencies, a finding that directly contradicts the high regard that this technique enjoys as an architectural evaluation tool. Finally, the analysis illustrated that detection of inconsistencies was insufficient to prompt their removal, in the small, informal team context studied. Conclusions: Although the utility of the approach for detecting inconsistencies was demonstrated in most cases, it also served to hide several inconsistencies and did not act as a trigger for their removal. Hence additional efforts must be taken to lessen architectural drift and several improvements in this regard are suggested. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Rosik, Jacek; Buckley, Jim] Univ Limerick, Limerick, Ireland.
   [Le Gear, Andrew] Nomura Plc, London, England.
   [Babar, Muhammad Ali] IT Univ Copenhagen, Copenhagen, Denmark.
   [Connolly, Dave] IBM Dublin Software Lab, Dublin, Ireland.
C3 University of Limerick; IT University Copenhagen
RP Rosik, J (corresponding author), Univ Limerick, Limerick, Ireland.
EM jacek.rosik@lero.ie
OI Buckley, Jim/0000-0001-6928-6746; Le Gear, Andrew/0000-0002-0886-7683
FU Science Foundation Ireland [03/CE2/I303_1]; IBM; Enterprise Ireland
FX This work was supported, in part, by Science Foundation Ireland grant
   03/CE2/I303_1 to Lero-the Irish Software Engineering Research Centre
   (www.lero.ie).; We also thank the contribution of our funding and
   research partners, IBM and Enterprise Ireland.
CR ADAIR JG, 1984, J APPL PSYCHOL, V69, P334, DOI 10.1037/0021-9010.69.2.334
   [Anonymous], 2007, ECL SOFTW DEV PLATF
   [Anonymous], 2007, JRM TOOL ECLIPSE PLU
   Bass L., 2003, Software Architecture, P19
   Buckley J, 2008, J SOFTW MAINT EVOL-R, V20, P107, DOI 10.1002/smr.364
   Christl A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P89
   Eichberg M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P391, DOI 10.1145/1368088.1368142
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   EXTON C, 2007, P 19 ANN PSYCH PROGR, P173
   Frenzel P, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P160, DOI 10.1109/WCRE.2007.28
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   GLASS RL, 1992, J SYST SOFTWARE, V18, P111, DOI 10.1016/0164-1212(92)90120-9
   Godfrey MW, 2000, P INT S CONSTR SOFTW
   Gwet K., 2001, HDB INTERRATER RELIA
   Hassan AE, 2004, PROG COMPREHEN, P183, DOI 10.1109/WPC.2004.1311060
   Hochstein L, 2004, 28TH ANNUAL NASA GODDARD SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P137
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Knodel J, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P43
   Knodel J, 2006, WORK CONF REVERSE EN, P39
   Knodel J, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P277
   Knodel J, 2008, PROC IEEE INT CONF S, P287, DOI 10.1109/ICSM.2008.4658077
   Knodel Jens, 2007, 2007 WORKING IEEEIFI, P12, DOI 10.1109/wicsa.2007.1
   Kolb R, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P172
   Koschke R., 2003, P 10 WORK C REV ENG
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Layman Lucas, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P176
   Le Gear A., 2006, COMPONENT RECONN EXI
   Le Gear A, 2006, P C CTR ADV STUD COL, P376, DOI [10.1145/1188966.1189016, DOI 10.1145/1188966.1189016]
   Lindvall M, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P77, DOI 10.1109/METRIC.2002.1011327
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Murphy GC, 1997, COMPUTER, V30, P29, DOI 10.1109/2.607045
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   O'Brien MP, 2005, PROC IEEE INT CONF S, P433
   Oates B. J., 2006, Researching information systems and computing
   Perry DE, 1997, PROC INT CONF SOFTW, P657, DOI 10.1145/253228.253796
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Pressman Roger., 2004, SOFTWARE ENG PRACTIT
   Rosik J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P80
   Seaman CB, 2002, PROC IEEE INT CONF S, P141, DOI 10.1109/ICSM.2002.1167761
   Sefika M, 1996, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.1996.493433
   Shaw M, 2006, IEEE SOFTWARE, V23, P31, DOI 10.1109/MS.2006.58
   Singer Janice, 1997, Proceedings of the 1997 Conference of the Centre for Advanced Studies on Collaborative Research. CASCON '97, P21
   STANDISH TA, 1984, IEEE T SOFTWARE ENG, V10, P494, DOI 10.1109/TSE.1984.5010272
   Torbert W., 2001, Handbook of action research: Participative inquiry and practice, P250
   Tran JB, 2000, PROG COMPREHEN, P48, DOI 10.1109/WPC.2000.852479
   Tvedt RT, 2002, PROC IEEE INT CONF S, P393, DOI 10.1109/ICSM.2002.1167796
   Tvedt RT, 2004, ADV COMPUT, V61, P1, DOI 10.1016/S0065-2458(03)61001-6
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 50
TC 24
Z9 25
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2011
VL 41
IS 1
BP 63
EP 86
DI 10.1002/spe.999
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 701UB
UT WOS:000285847800004
DA 2024-07-18
ER

PT J
AU Calheiros, RN
   Buyya, R
   De Rose, CAF
AF Calheiros, Rodrigo N.
   Buyya, Rajkumar
   De Rose, Cesar A. F.
TI Building an automated and self-configurable emulation testbed for grid
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE emulation; virtual machines mapping; virtualization; systems management;
   grid computing
AB Distributed systems, such as grids, are composed of geographically distributed computing elements that belong to multiple administrative domains and are controlled by multiple entities. It is unlikely that testers are able to acquire repeatedly the same resources, for the same amount of time, and under the same network conditions, which are paramount requirements for enabling reproducible and controlled tests in software under development. An alternative to experiments in real testbeds is the use of emulation tools, which allow the software to run in an environment that behaves like a distributed system. Although advances in virtualization technology allowed the development of efficient emulators, few efforts were put in making operation of such emulators easier. This paper presents the design and the development of the Automated Emulation Framework that allows automatic mapping of virtual machines to hosts, virtual machine deployment, network configuration, and proactive management and reconfiguration of the virtual infrastructure. Copyright (c) 2010 John Wiley & Sons, Ltd.
C1 [De Rose, Cesar A. F.] Pontificia Univ Catolica Rio Grande do Sul, Fac Informat, BR-90619900 Porto Alegre, RS, Brazil.
   [Calheiros, Rodrigo N.; Buyya, Rajkumar] Univ Melbourne, Dept Comp Sci & Software Engn, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic 3010, Australia.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul; University of
   Melbourne
RP De Rose, CAF (corresponding author), Pontificia Univ Catolica Rio Grande do Sul, Fac Informat, Av Ipiranga 6681, BR-90619900 Porto Alegre, RS, Brazil.
EM cesar.derose@pucrs.br
RI Buyya, Rajkumar/C-3424-2009; Calheiros, Rodrigo N./B-5155-2008; De Rose,
   Cesar A. F./F-9271-2012
OI Calheiros, Rodrigo N./0000-0001-7435-2445; De Rose, Cesar A.
   F./0000-0003-0070-0157
FU CAPES PDEE [1185-08-0]; Australian Research Council (ARC); Department of
   Innovation, Industry, Science and Research (DIISR)
FX Contract/grant sponsor: CAPES PDEE; contract/grant number: 1185-08-0;
   Contract/grant sponsor: Australian Research Council (ARC);
   Contract/grant sponsor: Department of Innovation, Industry, Science and
   Research (DIISR)
CR [Anonymous], 3 INT S CLUST COMP G
   [Anonymous], 2003, ACM SIGOPS OPERATING
   [Anonymous], 1999, GRID BLUEPRINT NEW C
   APOSTOLOPOULOS G, 2006, P 14 IEEE INT S MOD, P117, DOI DOI 10.1109/MASCOTS.2006.51
   Buyya Rajkumar, 2009, 2009 International Conference on High Performance Computing & Simulation (HPCS), P1, DOI 10.1109/HPCSIM.2009.5192685
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   CALHEIROS RN, 2009, 38 INT C PAR PROC, P518
   Calheiros RN, 2009, IEEE SYMP COMP COMMU, P817
   Calheiros RN, 2009, PARALLEL PROCESS LET, V19, P3, DOI 10.1142/S012962640900002X
   Calheiros RN, 2008, INT SYM COMP ARCHIT, P97, DOI 10.1109/SBAC-PAD.2008.12
   Canonico R, 2009, SIGNALS COMMUN TECHN, P455, DOI 10.1007/978-0-387-09663-6_30
   Childress B, 2006, OSTRICH, V77, P84, DOI 10.2989/00306520609485512
   CHILDS S, 2006, P EXPGRID WORKSH 15
   Cirne W., 2006, Journal of Grid Computing, V4, P225, DOI DOI 10.1007/S10723-006-9040-X
   Devine S. W., 2002, US Patent, Patent No. 6397242
   FRANCIOSI F, 2007, WORKSH VIRT XEN HPC, P195
   Gupta Diwaker., 2008, Proc. of NSDI, P407
   HARNEDY S, 1998, WEB BASED INFORM MAN
   HIBLER M, 2004, FTN200402 U UT FLUX
   JIANG X, 2003, ACM SIGCOMM WORKSH M, P95
   Kamp P., 2000, 2 INT SYST ADM NETW
   Khanna G, 2006, IEEE IFIP NETW OPER, P373, DOI 10.1109/NOMS.2006.1687567
   LIU G, 2001, 20 ANN JOINT C IEEE, P743
   LIU Y, 2005, 6 INT C PAR DISTR CO, P670
   McNett M, 2007, USENIX ASSOCIATION PROCEEDING OF THE 21ST LARGE INSTALLATION SYSTEMS ADMINISTRATION CONFERENCE, P167
   QUETIER B, 2005, 17 IMACS WORLD C SCI
   QUETIER B, 2007, RR6365 I NAT RECH IN
   Ricci R, 2003, ACM SIGCOMM COMP COM, V33, P65, DOI 10.1145/956981.956988
   Singh A., 2008, ACM IEEE C SUP
   Smith J., 2005, VIRTUAL MACHINES VER
   STALLINGS W, 1999, SNMP SWMPV2 SNMPV3 R
   Sulistio A, 2004, SOFTWARE PRACT EXPER, V34, P653, DOI 10.1002/spe.585
   SUNDARARAJ AI, 2005, ACM SIGMETRICS PERFO, V33, P6
NR 33
TC 21
Z9 22
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2010
VL 40
IS 5
BP 405
EP 429
DI 10.1002/spe.964
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 583DB
UT WOS:000276652000002
OA Green Published
DA 2024-07-18
ER

PT J
AU Mateos, C
   Zunmo, A
   Campo, M
AF Mateos, Cristian
   Zunmo, Alejandro
   Campo, Marcelo
TI m-JGRIM: a novel middleware for Gridifying Java applications into mobile
   Grid services
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Grid computing; gridification; Grid middlewares; JGRIM; dependency
   injection; mobile Grid services (MGS); Java
ID AT-HOME; COMPONENT; SECURITY; PARALLEL; WEB; PERFORMANCE; MIGRATION;
   FRAMEWORK; SPACE
AB The benefits of Grids for building massively distributed applications have been broadly acknowledged However, the high complexity of developing Grid applications compromises the widespread adoption of the paradigm In a previous paper (Future Gener Comput Syst 2008, 24(2) 99-118), we have described JGRIM, a method for easily 'gridifying' Java applications, based on non-invasively injecting Grid functionality into ordinary code through Dependency Injection (DI) DI is similar to the Inversion of Control notion of object-oriented frameworks and allows external services providing certain functionality to be injected into application components that require these services without affecting the components' implementation In this paper, we briefly revisit JGRIM and present m-JGRIM, a novel Java middleware that materializes JGRIM concepts by transforming ordinary applications into entities called Mobile Grid Services, i e gridified applications with mobile capabilities that live within a Grid We also provide an evaluation of the performance of m-JGRIM Grid practitioners should find this paper useful in having an assessment of the practical benefits and costs of gridifying applications with the middleware, and a down-to-earth description of JGRIM, whose advantages for Grid-enabling applications from a software engineering perspective have been already evaluated in (Future Gener Comput Syst 2008, 24(2) 99-118) Copyright (C) 2010 John Wiley & Sons, Ltd
C1 [Mateos, Cristian; Zunmo, Alejandro; Campo, Marcelo] UNICEN, ISISTAN Res Inst, Buenos Aires, DF, Argentina.
   [Mateos, Cristian; Zunmo, Alejandro; Campo, Marcelo] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Mateos, C (corresponding author), UNICEN, ISISTAN Res Inst, Campus Univ,Tandil B7001BBO, Buenos Aires, DF, Argentina.
RI Zunino, Alejandro/W-2100-2017
OI Zunino, Alejandro/0000-0002-9537-3541; Campo,
   Marcelo/0000-0002-3555-835X; Mateos, Cristian/0000-0001-5761-1898
FU ANPCyT [PAE-PICT 2007-02311, PAE-PICT 2007-02312]
FX We thank the anonymous reviewers for their helpful comments to improve
   the quality of the paper We acknowledge the financial support provided
   by ANPCyT through grants PAE-PICT 2007-02311 and PAE-PICT 2007-02312
CR Aldinucci M, 2008, EUROMICRO WORKSHOP P, P54, DOI 10.1109/PDP.2008.46
   Allen G, 2005, P IEEE, V93, P534, DOI 10.1109/JPROC.2004.842755
   Alonso JM, 2006, CONCURR COMP-PRACT E, V18, P2021, DOI 10.1002/cpe.1052
   Anderson DP, 2002, COMMUN ACM, V45, P56, DOI 10.1145/581571.581573
   Armstrong R, 2006, CONCURR COMP-PRACT E, V18, P215, DOI 10.1002/cpe.911
   Atkinson M, 2005, CONCURR COMP-PRACT E, V17, P377, DOI 10.1002/cpe.936
   Baduel L, 2006, GRID COMPUTING: SOFTWARE ENVIRONMENTS AND TOOLS, P205, DOI 10.1007/1-84628-339-6_9
   Balis B, 2008, FUTURE GENER COMP SY, V24, P711, DOI 10.1016/j.future.2007.12.001
   Bazinet AL, 2007, FUTURE GENER COMP SY, V23, P517, DOI 10.1016/j.future.2006.07.009
   BELLAVISTA P, 2004, HDB MOBILE COMPUTING, P941
   Birkmeier D, 2009, LECT NOTES COMPUT SC, V5582, P1, DOI 10.1007/978-3-642-02414-6_1
   Brooks RR, 2004, IEEE INTERNET COMPUT, V8, P54, DOI 10.1109/MIC.2004.1297274
   Claessens J., 2003, ACM TRANSINTERNET TE, V3, P28
   CODDINGTON P, 2010, DHPC JAVA BENCHMARKS
   Crasso M, 2008, SCI COMPUT PROGRAM, V71, P144, DOI 10.1016/j.scico.2008.02.002
   Curbera F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.991449
   Czajkowski K, 2001, 10TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P181, DOI 10.1109/HPDC.2001.945188
   Dangelmayr C, 2009, SOFTWARE PRACT EXPER, V39, P807, DOI 10.1002/spe.912
   Dasarathy B. V., 1991, Nearest neighbor (NN) norms, V317
   DOWLING J, 2004, 1 ACM SIGSOFT WORKSH, P39
   Foster I, 2001, INT J HIGH PERFORM C, V15, P200, DOI 10.1177/109434200101500302
   Foster I, 2005, LECT NOTES COMPUT SC, V3779, P2
   Fu S, 2007, FUTURE GENER COMP SY, V23, P804, DOI 10.1016/j.future.2006.12.002
   Gannon D, 2005, CLUSTER COMPUT, V8, P271, DOI 10.1007/s10586-005-4094-2
   Goodale T., 2006, Comput. Methods Sci. Technol., P7, DOI [10.12921/cmst.2006.12.01.07-20, DOI 10.12921/CMST.2006.12.01.07-20]
   Gotthelf P, 2008, J PARALLEL DISTR COM, V68, P1081, DOI 10.1016/j.jpdc.2008.04.002
   Goulas G, 2005, SOFTWARE PRACT EXPER, V35, P1195, DOI 10.1002/spe.668
   Grimshaw A, 2009, COMPUTER, V42, P27, DOI 10.1109/MC.2009.35
   Ho QT, 2004, LECT NOTES COMPUT SC, V3032, P83
   Ho QT, 2006, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P305
   Imade H, 2004, NEW GENERAT COMPUT, V22, P177, DOI 10.1007/BF03040956
   Jansen WA, 2000, COMPUT COMMUN, V23, P1667, DOI 10.1016/S0140-3664(00)00253-X
   Johnson R, 2005, COMPUTER, V38, P107, DOI 10.1109/MC.2005.22
   Jugravu A, 2005, FUTURE GENER COMP SY, V21, P239, DOI 10.1016/j.future.2004.09.030
   Karnik NM, 2001, SOFTWARE PRACT EXPER, V31, P301, DOI 10.1002/spe.364
   Kim SD, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P538
   Koulopoulos D, 2002, SOFTWARE PRACT EXPER, V32, P1035, DOI 10.1002/spe.468
   Loewe L, 2007, SOFTWARE PRACT EXPER, V37, P1289, DOI 10.1002/spe.806
   Lyon D, 2002, CONCURR COMP-PRACT E, V14, P987, DOI 10.1002/cpe.703
   Ma TC, 2006, CONCURR COMP-PRACT E, V18, P1871, DOI 10.1002/cpe.1035
   MATEOS C, 2009, PARALLEL PROGRAMMING
   MATEOS C, 2008, THESIS UNCPBA
   Mateos C, 2008, SOFTWARE PRACT EXPER, V38, P523, DOI 10.1002/spe.847
   Mateos C, 2008, FUTURE GENER COMP SY, V24, P99, DOI 10.1016/j.future.2007.04.011
   Mateos C, 2007, COMPUT LANG SYST STR, V33, P11, DOI 10.1016/j.cl.2006.02.001
   McGough AS, 2008, FUTURE GENER COMP SY, V24, P731, DOI 10.1016/j.future.2008.02.004
   Milanés A, 2008, CONCURR COMP-PRACT E, V20, P1485, DOI 10.1002/cpe.1287
   Mishra SK, 2009, J OBJECT TECHNOL, V8, P133, DOI 10.5381/jot.2009.8.5.a3
   Natrajan A, 2002, FUTURE GENER COMP SY, V18, P1033, DOI 10.1016/S0167-739X(02)00083-3
   PARLAVANTZAS N, 2007, 2007 S COMP FRAM TEC, P31
   Pearce DJ, 2007, SOFTWARE PRACT EXPER, V37, P747, DOI 10.1002/spe.788
   POCH T, 2009, 12 INT S COMP BAS SO, P87
   Rizk P, 2008, FUTURE GENER COMP SY, V24, P442, DOI 10.1016/j.future.2007.07.010
   SOBRAL JL, 2007, 8 IEEE ACM INT C GRI, P113
   Stefanov E, 2009, SOFTWARE PRACT EXPER, V39, P111, DOI 10.1002/spe.888
   Stockinger H, 2007, J SUPERCOMPUT, V42, P3, DOI 10.1007/s11227-006-0037-9
   *SUN MICR, HEAP AN TOOL HAT
   Taffoni G, 2007, FUTURE GENER COMP SY, V23, P189, DOI 10.1016/j.future.2006.04.020
   Thain D., 2003, GRID COMPUTING, P299
   Tschumperlé D, 2003, PROC CVPR IEEE, P651
   van Heiningen W, 2008, CONCURR COMP-PRACT E, V20, P1195, DOI 10.1002/cpe.1264
   van Nieuwpoort RV, 2005, CONCURR COMP-PRACT E, V17, P1079, DOI 10.1002/cpe.860
   Wang B, 2004, LECT NOTES COMPUT SC, V3251, P404
   Wrzesinska G, 2006, INT J HIGH PERFORM C, V20, P103, DOI 10.1177/1094342006062528
   Zhang H, 2008, SOFTWARE PRACT EXPER, V38, P1049, DOI 10.1002/spe.862
NR 65
TC 2
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2010
VL 40
IS 4
BP 331
EP 362
DI 10.1002/spe.961
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 570PQ
UT WOS:000275690600003
OA Bronze
DA 2024-07-18
ER

PT J
AU Robinson, PJ
   Clark, KL
AF Robinson, Peter J.
   Clark, Keith L.
TI Pedro: a publish/subscribe server using Prolog technology
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE publish; subscribe; agent communication; content-based message routing;
   peer-to-peer communication
ID QU-PROLOG; COMMUNICATION
AB Pedro is a TCP/IP publish/subscribe server implemented in C that uses Prolog technology for testing subscriptions against notifications It provides both content- and address-based routing of messages between processes An inter-process message M is a string representation of a Pedro term (usually but not necessarily a variable free term) A subscription is essentially a message template T paired with a Pedro query that is used to restrict the allowed values for variables in T Pedro automatically forwards any notification it receives to all processes that have a current subscription that covers the notification A Pedro connected process can optionally register a name with Pedro giving the process a unique Pedro handle Pedro handles can be used to send peer-to-peer messages between processes In this paper we illustrate the use of Pedro and describe its implementation Copyright (C) 2010 John Wiley & Sons, Ltd
C1 [Robinson, Peter J.] Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld, Australia.
   [Clark, Keith L.] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London, England.
C3 University of Queensland; Imperial College London
RP Robinson, PJ (corresponding author), Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld, Australia.
CR Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   [Anonymous], 1996, PATTERN ORIENTED SOF
   [Anonymous], 2000, Multiagent Systems: AModern Approach to DistributedArtificial Intelligence
   Baldoni R, 2003, LECT NOTES COMPUT SC, V2584, P137
   Clark K, 2001, THEOR PRACT LOG PROG, V1, P283, DOI 10.1017/S147106840100120X
   Clark KL, 2006, LECT NOTES COMPUT SC, V3900, P186
   Finin T., 1997, Software agents, P291
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Huhns M. N., 1997, IEEE Internet Computing, V1, P81, DOI 10.1109/4236.643942
   KUOKKA D, 1995, 1 INT JOINT C MULT A, P239
   Luckham D., 2002, The Power of Events: An Introduction to Complex Event Processing in Distributed Enterprise Systems
   MCCABE FH, 1999, INTERAGENT COMMUNICA
   Muhl G, 2006, Distributed Event-Based Systems
   ROBINSON JA, 1965, J ACM, V12, P23, DOI 10.1145/321250.321253
   SEGALL B, 2000, P AUUG2K CANB AUSTR
   SMITH RG, 1988, READINGS DISTRIBUTED, P357
NR 16
TC 3
Z9 3
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2010
VL 40
IS 4
BP 313
EP 329
DI 10.1002/spe.959
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 570PQ
UT WOS:000275690600002
DA 2024-07-18
ER

PT J
AU Calefato, F
   Lanubile, F
AF Calefato, Fabio
   Lanubile, Filippo
TI Using frameworks to develop a distributed conferencing system: an
   experience report
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software evolution; software reuse; application framework; communication
   framework; collaborative system
ID SUPPORT
AB Application frameworks are a powerful means to reduce software development costs while improving quality. However, at the same time they are difficult to select and understand, as well as hard to learn, use, and debug effectively and efficiently. In this paper we report the story of eConference, a distributed conferencing system that was developed as part of a broader research effort. Here we discuss the lessons learned from the evolution of our conferencing tool over four generations, which have been necessary to find good frameworks and build a flexible distributed tool. Copyright (c) 2009 John Wiley & Sons, Ltd.
C1 [Calefato, Fabio; Lanubile, Filippo] Univ Bari, Dipartimento Informat, Bari, Italy.
C3 Universita degli Studi di Bari Aldo Moro
RP Lanubile, F (corresponding author), Univ Bari, Dipartimento Informat, Bari, Italy.
EM lanubile@di.uniba.it
RI Lanubile, Filippo/AAF-9132-2020; Calefato, Fabio/H-4177-2014
OI Lanubile, Filippo/0000-0003-3373-7589; Calefato,
   Fabio/0000-0003-2654-1588
FU 2006 Eclipse Innovation Award; MiUR-Italy
FX This work has been partially supported by the 2006 Eclipse Innovation
   Award and the MiUR-Italy under grant 2006 'Metamorphos'. We wish to
   thank Mario Scalas and all the other students at University of Bari who
   contributed to the development and evolution of the eConference tool as
   a part of their final year theses.
CR [Anonymous], 1996, PATTERN ORIENTED SOF
   ANTONIU G, 2005, IEEE INT S CLUST COM, V1, P251, DOI DOI 10.1109/CCGRID.2005.1558562
   BASILI V, 2001, LECT NOTES COMPUTER, V2188, P110, DOI DOI 10.1007/3-540-44813-6-13
   BIRSAN D, 2005, QUEUE, V3, P40
   Boehm B, 2001, IEEE SOFTWARE, V18, P46, DOI 10.1109/52.922725
   BROOKSHIER D, 2002, JXTA JAVA P2P PROGRA, P39
   Calefato F., 2004, "Third International Workshop on Global Software Development (GSD 2004)" W12S Workshop - 26th International Conference on Software Engineering, P34, DOI 10.1049/ic:20040310
   CALEFATO F, 2007, P 3 INT C COLL COMP, P427, DOI DOI 10.1109/COLCOM.2007.4553869
   CALEFATO F, 2007, THESIS U BARI, P18
   CALEFATO F, 2005, P 1 INT WORKSH DISTR, P97
   CALEFATO F, 2007, P OOPSLA WORKSH ECL, P46, DOI DOI 10.1145/1328279.1328289
   Calefato F, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Cortellessa V, 2008, COMPUT OPER RES, V35, P3090, DOI 10.1016/j.cor.2007.01.011
   DESOUZA CRB, 2004, INT C COMP SUPP COOP, P63
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   *ECL, 2009, ECL COMM FRAM ECF
   *ECL, 2009, ECL RCP STAT MEM
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   FAYAD ME, 2000, ACM COMPUT SURV
   FOWLER M, 2008, INVERSION CONTROL CO
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GARLAN D, 1995, PROC INT CONF SOFTW, P179, DOI 10.1145/225014.225031
   Gruber O, 2005, IBM SYST J, V44, P289, DOI 10.1147/sj.442.0289
   Halepovic E, 2005, LECT NOTES COMPUT SC, V3761, P1097
   Halepovic E, 2003, THIRD INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING (P2P2003), PROCEEDINGS, P160, DOI 10.1109/PTP.2003.1231516
   Hou DQ, 2005, PROG COMPREHEN, P87
   Johnson RE, 1997, COMMUN ACM, V40, P39, DOI 10.1145/262793.262799
   Mattsson M, 1999, COMMUN ACM, V42, P81
   MCAFFER J., 2005, ECLIPSE RICH CLIENT
   Mohamed A, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P103
   NUNAMAKER JF, 1991, COMMUN ACM, V34, P40, DOI 10.1145/105783.105793
   Rajlich V, 1996, IEEE T SOFTWARE ENG, V22, P153, DOI 10.1109/32.485224
   Ruhe G, 2003, LECT NOTES COMPUT SC, V2593, P34
   SCHMIDT DC, 2004, ACM QUEUE, P66, DOI DOI 10.1145/1016998.1017005
   Seigneur J.-M., 2002, Jxta Pipes Performance'
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   STANDRE P, 2005, INTERNET COMPUTING I, V9, P82
   *XMPP, 2009, XMPP MULT CHAT MUC
   2009, JXTA IETF STANDARDIZ
   JXTA PLATFORM CHANGE
NR 41
TC 7
Z9 8
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2009
VL 39
IS 15
BP 1293
EP 1311
DI 10.1002/spe.937
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 500XQ
UT WOS:000270340100003
DA 2024-07-18
ER

PT J
AU Song, Y
   Kolcz, A
   Giles, CL
AF Song, Yang
   Kolcz, Aleksander
   Giles, C. Lee
TI Better Naive Bayes classification for high-precision spam detection
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE spam filtering; naive Bayes; cascaded models
ID SYSTEM
AB Email spam has become a major problem for Internet users and providers. One major obstacle to its eradication is that the potential solutions need to ensure a very low false-positive rate, which tends to be difficult in practice. We address the problem of low-FPR classification in the context of naive Rayes, which represents one of the most popular machine learning models applied in the spam filtering domain. Drawing from the recent extensions, we propose a new term weight aggregation function, which leads to markedly better results than the standard alternatives. We identify short instances as ones with disproportionally poor performance and counter this behavior with a collaborative filtering-based feature augmentation. Finally, we propose a tree-based classifier cascade for which decision thresholds of the leaf nodes are jointly optimized for the best overall performance. These improvements, both individually and in aggregate, lead to substantially better detection rate of precision when compared with some of the best variants of naive Bayes proposed to date. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Song, Yang] Penn State Univ, Dept Comp Sci & Engn, University Pk, PA 16802 USA.
   [Kolcz, Aleksander] Microsoft Live Labs, Redmond, WA 98052 USA.
   [Giles, C. Lee] Penn State Univ, Coll Informat Sci & Technol, University Pk, PA 16802 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania State University -
   University Park; Microsoft; Pennsylvania Commonwealth System of Higher
   Education (PCSHE); Pennsylvania State University; Pennsylvania State
   University - University Park
RP Song, Y (corresponding author), Penn State Univ, Dept Comp Sci & Engn, University Pk, PA 16802 USA.
EM yasong@cse.psu.edu
RI Song, Yangyi/JBJ-7119-2023; Song, Yangyi/HGU-4953-2022
OI Song, Yangyi/0000-0002-3649-014X; Song, Yangyi/0000-0002-3649-014X;
   Giles, C Lee/0000-0002-1931-585X
CR [Anonymous], 2006, P 15 INT C WORLD WID, DOI [DOI 10.1145/1135777.1135794, 10.1145/1135777.1135794]
   [Anonymous], 1998, AAAI 98 WORKSHOP LEA
   [Anonymous], 2006, P ACMSIGKDD INT C KN
   [Anonymous], 1996, ACL, DOI [10.3115/981863.981904, DOI 10.3115/981863.981904]
   Bach FR, 2006, J MACH LEARN RES, V7, P1713
   Blanzieri E, 2007, FLAIRS C, P441
   Boser B. E., 1992, Proceedings of the Fifth Annual ACM Workshop on Computational Learning Theory, P144, DOI 10.1145/130385.130401
   Breese J., 1998, P 14 C UNC ART INT, P43
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Chawla NiteshV., 2002, SMOTE, P321
   CORMACK G, 2006, VIRUS B, V1
   CORMACK GV, 2005, P TREC 2005 14 TEXT
   CORMACK GV, 2006, C EM ANT SPAM CEAS 2
   DEBOLE F, 2003, SAC 03, P784
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Elkan C., 2001, FDN COST SENSITIVE L, P973
   EYHERAMENDY S, 2003, NAIVE BAYES MODEL TE, P332
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Gama J, 2000, MACH LEARN, V41, P315, DOI 10.1023/A:1007652114878
   García-Pedrajas N, 2005, LECT NOTES COMPUT SC, V3512, P598
   Giusti N, 2002, IEEE T PATTERN ANAL, V24, P893, DOI 10.1109/TPAMI.2002.1017617
   Hall M. A., 2000, P 17 INT C MACH LEAR, P359, DOI DOI 10.5555/645529.657793
   Heisele B, 2003, PATTERN RECOGN, V36, P2007, DOI 10.1016/S0031-3203(03)00062-1
   Hoashi K., 2001, SIGIR Forum, P414
   IMAN RL, 1980, COMMUN STAT A-THEOR, V9, P571, DOI 10.1080/03610928008827904
   Kim SB, 2006, IEEE T KNOWL DATA EN, V18, P1457, DOI 10.1109/TKDE.2006.180
   KOICZ A, 2005, KDD 05 P 11 ACM SIGK, P128
   Kolcz A., 2001, P WORKSH TEXT MIN TE
   Kolcz A, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P400
   Lewis D.D., 1998, LECT NOTES COMPUTER, V1398, P4
   LIU B, 2000, CIKM 00 P 9 INT C IN, P20
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Metsis Vangelis, 2006, P 3 C EM ANT SPAM CE
   Opitz D., 1999, J ARTIF INTELL RES, V11, P169, DOI DOI 10.1613/JAIR.614
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Raftery AE, 1997, J AM STAT ASSOC, V92, P179, DOI 10.2307/2291462
   RENNIE J, 2001, IMPROVING MULTI CLAS
   Rennie J.D., 2003, Proceedings of the 20th International Conference on Machine Learning, P616
   ROBINSON G, 2003, LINUX J, P3
   Salton G, 1986, Introduction to Modern Information Retrieval
   Schapire R.E., 1997, P 14 INT C MACHINE L, P322
   Sculley D., 2007, SIGIR 07 P 30 ANN IN, P415
   Song Y, 2006, IEEE DATA MINING, P1064
   Tang L, 2005, FIFTH IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P781
   Trefethen L.N., 1997, NUMERICAL LINEAR ALG
   WU H, 2002, KDD 02 P 8 ACM SIGKD, P207
   YIH W, 2006, P 3 C EM ANT SPAM CE
   Zhang P, 2007, PATTERN RECOGN, V40, P3415, DOI 10.1016/j.patcog.2007.03.022
NR 52
TC 25
Z9 28
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG 10
PY 2009
VL 39
IS 11
BP 1003
EP 1024
DI 10.1002/spe.925
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 476DP
UT WOS:000268418300003
DA 2024-07-18
ER

PT J
AU Gómez-Rodríguez, C
   Vilares, J
   Alonso, MA
AF Gomez-Rodriguez, C.
   Vilares, J.
   Alonso, M. A.
TI A compiler for parsing schemata
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE parsing; declarative programming; natural-language processing; parsing
   schemata
AB We present a compiler that can be used to automatically obtain efficient Java implementations of parsing algorithms from formal specifications expressed as parsing schemata. The system performs an analysis of the inference rules in the input schemata in order to determine the best data structures and indexes to use, and to ensure that the generated implementations are efficient. The system described is general enough to he able to handle all kinds of schemata for different grammar formalisms, such as context-free grammars and tree-adjoining grammars, and it provides an extensibility mechanism allowing the user to define custom notational elements. This compiler has proven very useful for analyzing, prototyping and comparing natural-language parsers in real domains, as can be seen in the empirical examples provided at the end of the paper. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Gomez-Rodriguez, C.; Vilares, J.; Alonso, M. A.] Univ A Coruna, Dept Computac, Fac Informat, Coruna 15071 A, Spain.
C3 Universidade da Coruna
RP Gómez-Rodríguez, C (corresponding author), Univ A Coruna, Dept Computac, Fac Informat, Campus Elvina S-N, Coruna 15071 A, Spain.
EM cgomezr@udc.es
RI Vilares, Jesus/A-8863-2013; Gómez-Rodríguez, Carlos/A-5935-2011; Alonso,
   Miguel/A-5903-2011
OI Vilares, Jesus/0000-0003-2941-1834; Gómez-Rodríguez,
   Carlos/0000-0003-0752-8812; Alonso, Miguel/0000-0001-9254-4934
FU MEC and FEDER [TIN2004-07246-C03, HUM2007-66607-1704]; Xunta de Galicia
   [PGIDIT07SIN005206PR, PGIDIT05PXIC-10501PN, PGIDIT05PXIC30501PN,
   INCITE08XIB302179PR]; Rede Galega Lie Procesamento da Linguaxe e
   Rectiperacion de Informacion; Axudas para a Consolidacion c
   Estruturacion Lie Unidades de Investigacion (Xunta de Galicia)
FX Contract/grant sponsor MEC and FEDER: contract/grant numbers:
   TIN2004-07246-C03. HUM2007-66607-1704; Contract/grant sponsor: Xunta de
   Galicia; contract/grant numbers: PGIDIT07SIN005206PR,
   PGIDIT05PXIC-10501PN, PGIDIT05PXIC30501PN, INCITE08XIB302179PR;
   Contract/grant sponsor: Rede Galega Lie Procesamento da Linguaxe e
   Rectiperacion de Informacion; Contract/grant sponsor: Axudas para a
   Consolidacion c Estruturacion Lie Unidades de Investigacion (Xunta de
   Galicia)
CR Alonso MA, 1999, NINTH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS, P150
   Alonso MA, 2004, TEXT SPEECH LANG TEC, P157
   [Anonymous], AFCRL65758
   [Anonymous], 1992, The logic of typed feature structures
   BILLOT S, 1990, 27TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P143
   CARROLL J, 1993, 314 U CAMBR COMP LAB
   Carroll J., 2003, Oxford Handbook of Computational Linguistics, P233
   CLERGERIC EV, 2005, P 2 INT WORKSH CONST, P18
   EARLEY J, 1970, COMMUN ACM, V13, P94, DOI 10.1145/362007.362035
   Eisner J., 2004, Proceedings of the 42nd Annual Meeting of the Association for Computational Linguistics (ACL 2004), Companion Volume, P218
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gómez-Rodríguez C, 2007, LECT NOTES COMPUT SC, V4653, P529
   Gomez-Rodriguez Carlos, 2008, P ACL 08 HLT, P968
   GOMEZRODRIGUEZ C, 2006, P TAG 8 8 INT WORKSH
   GOMEZRODRIGUEZ C, 2006, FG 2006 11 C FORM GR, P61
   Johnson Stephen C., 1975, 32 AT T BELL LAB
   KAY M, 1980, CSL8012 PARC
   McAllester D, 1999, LECT NOTES COMPUT SC, V1694, P312
   Nivre J, 2006, TEXT SPEECH LANG TEC, V34, pVII
   ROSENKRANTZ DJ, 1970, C REC 1970 11 ANN M, P139
   SAMPSON G, 1994, SUSANNE CORPUS
   SARKAR A, 2000, P 5 INT WORKSH TREE, P193
   SCHOORL JJ, 1990, WTMTT9009
   SHIEBER SM, 1995, J LOGIC PROGRAM, V24, P3, DOI 10.1016/0743-1066(95)00035-I
   Sikkel Klaas, 1997, TEXTS THEORETICAL CO
   The XTAG Research Group, 2001, IRCS0103 U PENNS XTA
   Vijay-Shankar K., 1985, 23rd Annual Meeting of the Association for Computational Linguistics. Proceedings of the Conference, P82
   VISWANADHA S, 2008, JAVA COMPILER JAVACC
   YOUNGER DH, 1967, INFORM CONTROL, V10, P189, DOI 10.1016/S0019-9958(67)80007-X
   Yue L, 2003, P SOC PHOTO-OPT INS, V4756, P172, DOI 10.1117/12.497774
NR 30
TC 4
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2009
VL 39
IS 5
BP 441
EP 470
DI 10.1002/spe.904
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425NU
UT WOS:000264645200001
DA 2024-07-18
ER

PT J
AU Lobato, C
   Garcia, A
   Romanovsky, A
   Lucena, C
AF Lobato, Cidiane
   Garcia, Alessandro
   Romanovsky, Alexander
   Lucena, Carlos
TI An aspect-oriented software architecture for code mobility
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile agents; aspect-oriented software development; reuse
AB Mobile agents have come forward as a technique for tackling the complexity of open distributed applications. However. the pervasive nature of code mobility implies that it cannot be modularized using only object-oriented (00) concepts. In fact, developers frequently evidence the presence of mobility scattering in their system's modules. Despite these problems, they usually rely on 00 application programming interfaces (APIs) offered by the mobility platforms. Such classical API-oriented designs suffer a number of architectural restrictions, and there is a pressing need for empowering developers with an architectural frame-work supporting a flexible incorporation of code mobility in the agent applications. This work presents an aspect-oriented software architecture, called ArchM, ensuring that code mobility has an enhanced modularization and variability in agent systems, and is straightforwardly introduced in otherwise stationary agents. It addresses OO APIs' restrictions and is independent of specific platforms and applications. An ArchM implementation also overcomes fine-grained problems related to mobility tangling and scattering at the implementation level. The usefulness and usability of ArchM are assessed within the context of two case studies and through its composition with two mobility platforms. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Lobato, Cidiane; Lucena, Carlos] Pontificia Univ Catolica Rio de Janeiro, Dept Comp Sci, Rio de Janeiro, Brazil.
   [Garcia, Alessandro] Univ Lancaster, Dept Comp, Lancaster, England.
   [Romanovsky, Alexander] Newcastle Univ, Sch Comp Sci, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
C3 Pontificia Universidade Catolica do Rio de Janeiro; Lancaster
   University; Newcastle University - UK
RP Lobato, C (corresponding author), Pontificia Univ Catolica Rio de Janeiro, Dept Comp Sci, Rio de Janeiro, Brazil.
EM cidiane@inf.puc-rio.br
RI Lucena, Carlos/GQP-2277-2022
OI Romanovsky, Alexander/0000-0002-4076-3331
FU European Commission [IST-2-004349]; ICT/EC RODIN; EPSRC/UK TrAmS;
   CNPq/ESSMA [552068/2002-0]
FX This work is partially supported by European Commission as part of the
   grant IST-2-004349: European Network of Excellence on AOSD
   (AOSID-Europe), 2004-2008. Alexander Romanovsky is supported by the
   ICT/EC RODIN and EPSRC/UK TrAmS projects. Cidiane Lobato and Carlos
   Lucena are supported by CNPq/ESSMA 552068/2002-0 project.
CR [Anonymous], LECT NOTES COMPUTER
   BARBOSA R, 2005, P MATA 05, P147
   BOURAQADISAADAN.NM, 2001, P INT WORKSH EXP REF
   CACHO N, 2006, P 5 INT C AOSD BONN
   FIGUEIREDO E, 2006, P ECOOP 06 DEM SESS
   FILHO F, 2006, LECT NOTES COMPUTER, V4119
   FILHO F, 2004, P 14 INT C FDN SOFTW
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   Garcia A, 2006, LECT NOTES COMPUT SC, V3880, P36
   GARCIA A, 2004, THESIS PUC RIO
   GARCIA A, 2004, SOFTWARE ENG MULTIAG, V2
   GARCIA A, 2005, COMMUNICATIONS ACM
   Garcia AF, 2004, SOFTWARE PRACT EXPER, V34, P489, DOI 10.1002/spe.578
   Goldchleger A, 2004, CONCURR COMP-PRACT E, V16, P449, DOI 10.1002/cpe.824
   HOLDER O, 1999, P 21 ICSE
   Keeney J, 2003, IEEE 4TH INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P3, DOI 10.1109/POLICY.2003.1206953
   KICZALES G, 2001, P ECOOP 2001 BUD HUN
   Kiniry J., 1997, IEEE Internet Computing, V1, P21, DOI 10.1109/4236.612210
   KLLLESZ U, 2006, P 8 ICSM PHIL US SEP
   Lange D. B., 1998, PROGRAMMING DEPLOYIN
   LOBATO C, 2007, ASPECT ORIENTED SOFT, P57
   LOBATO C, 2000, 3 IEE MOB C 2006 BAN
   LOBATO C, 2004, P WASP SBES 04 BRAS
   Montanari R, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P82, DOI 10.1109/CMPSAC.2003.1245325
   RASHID A, 2003, P 2 INT C AOSD
   Rimassa G., 1999, P PRACT APPL INT AG
   SANTANNA C, 2006, P NETOBJECTDAYS GERM
   SOARES S, 2002, P ACM C OOPSLA SEATT
   TAMAI T, 2005, ADAPTIVE OBJECT MODE, P166
   UBAYASHI N, 2001, LNCS, V2192, P89
NR 30
TC 3
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2008
VL 38
IS 13
BP 1365
EP 1392
DI 10.1002/spe.873
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 364OY
UT WOS:000260346200002
DA 2024-07-18
ER

PT J
AU Jann, J
   Dubey, N
   Pattnaik, P
   Burugula, RS
AF Jann, Joefon
   Dubey, Niteesh
   Pattnaik, Pratap
   Burugula, R. Sarma
TI Effectiveness of multiple pageable page sizes for commercial
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE operating system; pageable; page sizes; AIX; Web; commercial workload
AB This paper investigates the computational characteristics of the software applications that are developed to support typical modern e-commerce applications. These applications have a significant impact on global commerce, and their influence is expected to continue. We show that the micro-architectural features of the memory subsystem, assisted by the operating system (such as the use of concurrent pageable page sizes), can significantly improve the performance of these applications. In particular, we show that using 64 kB page size in addition to the default 4 kB page size provides substantial throughput improvements for a typical commercial application (Trade6) without adding any complexity for the application developer or the system administrator. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Jann, Joefon; Dubey, Niteesh; Pattnaik, Pratap; Burugula, R. Sarma] IBM Corp, TJ Watson Res Ctr, Yorktown Hts, NY 10598 USA.
C3 International Business Machines (IBM)
RP Jann, J (corresponding author), IBM Corp, TJ Watson Res Ctr, POB 218,Route 134, Yorktown Hts, NY 10598 USA.
EM joefon@us.ibm.com
CR Ganek AG, 2003, IBM SYST J, V42, P5, DOI 10.1147/sj.421.0005
   HEPKIN D, 2007, GUIDE MULTIPLE PAGE
   *IBM, 2007, IBM WEBSPH PERF TRAD
   Jann J, 2004, SOFTWARE PRACT EXPER, V34, P1257, DOI 10.1002/spe.612
   Kalla R, 2004, IEEE MICRO, V24, P40, DOI 10.1109/MM.2004.1289290
   KAMATH S, 2007, IBM DB2 ENTERPRISE 9
   May C., 1994, POWERPC ARCHITECTURE, V2nd
   Sinharoy B, 2005, IBM J RES DEV, V49, P505, DOI 10.1147/rd.494.0505
   WULF W, 2007, HITTING MEMORY WALL
   2007, POWER ISA VERSION 2
   2007, WEBSPHERE APPL SERVE
NR 11
TC 1
Z9 1
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2008
VL 38
IS 12
BP 1261
EP 1272
DI 10.1002/spe.866
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 369LC
UT WOS:000260695000003
DA 2024-07-18
ER

PT J
AU Armstrong, CW
   Ford, RW
   Freeman, TL
   Riley, GD
AF Armstrong, C. W.
   Ford, R. W.
   Freeman, T. L.
   Riley, G. D.
TI NOAH: A CSP-based language for describing the behaviour of coupled
   models
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CSP; deadlock; coupled modelling; automatic code generation; FCA
ID STOKES-FLOW; FRAMEWORK; SIMULATION
AB Scientists in many fields rely on computational simulations that are built from a collection of separate, inter-communicating single models (e.g. Earth System Models often consist of single models of the ocean, atmosphere and land processes); these simulations are called coupled models. Coupled models allow scientists to simulate richer scientific phenomena than is possible by running single models alone. Scientific interest is typically focused on the investigation served by a coupled model, rather than the complex and inadequately supported software engineering activity of constructing it. In response to this lack of support, a coupling methodology called the Flexible Coupling Approach (FCA) has been developed at the University of Manchester together with a tool that implements this approach, the Bespoke Framework Generator (BFG). Whilst being adequate for a large class of coupled models (e.g., many Earth System Models), the BFG is unable to handle coupled models with complex behavioural requirements (in terms of the scheduling and inter-communication of single models). To capture these more complex expressions of behaviour, this paper introduces NOAH, a domain-specific language that is implemented in the formalism Communicating Sequential Processes (CSP), and which is used by a new implementation of the FCA, called the CSP-based Framework Generator (CFG). NOAH is introduced through two example coupled models which have complex behavioural requirements. NOAH represents the first attempt to bring the advantages of using formal descriptions of coupled models to application scientists, providing a language in which to specify coupled model behaviour precisely and the ability to check that a coupled model is deadlock free using tools such as the Failures-Divergence Refinement (FDR) model checker. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Armstrong, C. W.; Ford, R. W.; Freeman, T. L.; Riley, G. D.] Univ Manchester, Sch Comp Sci, Manchester M13 9PL, Lancs, England.
C3 University of Manchester
RP Armstrong, CW (corresponding author), Univ Manchester, Sch Comp Sci, Oxford Rd, Manchester M13 9PL, Lancs, England.
EM armstroc@cs.man.ac.uk
FU NERC [NE/C515904/1] Funding Source: UKRI
CR [Anonymous], 1989, PRENTICE HALL INT SE
   [Anonymous], 1999, XSL TRANSF XSLT VERS
   [Anonymous], 1985, Compilers principles, techniques, and tools
   [Anonymous], 2000, Introduction to Process Algebra
   ARMSTRONG CW, 2006, THESIS U MANCHESTER
   Armstrong R, 1999, P 8 IEEE INT S HIGH
   BERGER M, 2003, COMMUNICATION    SEP
   Delgado-Buscalioni R, 2005, PHILOS T R SOC A, V363, P1975, DOI 10.1098/rsta.2005.1623
   Facchi A, 2004, ENVIRON MODELL SOFTW, V19, P1053, DOI 10.1016/j.envsoft.2003.11.008
   Ford RW, 2006, CONCURR COMP-PRACT E, V18, P163, DOI 10.1002/cpe.910
   *FORM SYST EUR LTD, 2003, FAIL DIV REF US MAN
   *FORM SYST EUR LTD, 2003, PROC BEH EXPL US MAN
   Foster I, 1997, INT J SUPERCOMPUT AP, V11, P115, DOI 10.1177/109434209701100205
   Furmento N., 2002, P 2002 ACM IEEE C SU, P1
   Gordon C, 2000, CLIM DYNAM, V16, P147, DOI 10.1007/s003820050010
   Heil M, 1998, INT J NUMER METH FL, V28, P243, DOI 10.1002/(SICI)1097-0363(19980815)28:2<243::AID-FLD711>3.0.CO;2-U
   Heil M, 1997, J FLUID MECH, V353, P285, DOI 10.1017/S0022112097007490
   Hill C, 2004, COMPUT SCI ENG, V6, P18, DOI 10.1109/MCISE.2004.1255817
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   HOARE CAR, 1986, PRENTICE HALL INT SE
   LINSTEAD C, TYPED DATA TRANSFER
   Milner R., 1999, Communication and Mobile Systems: the -calculus
   *MPI, 1994, UTCS94230 MPI
   Piacentini A, 2003, LECT NOTES COMPUT SC, V2565, P479
   Pnueli Amir., 1977, P 18 ANN S FDN COMPU, P46, DOI DOI 10.1109/SFCS.1977.32
   Roscoe A.W., 1998, THEORY PRACTICE CONC
   SCATTERGOOD JB, 1998, THESIS OXFORD U COMP
   VALCKE S, 2004, OCEAN ATMOSPHERE SEA
   van der Aalst W, 2003, IEEE INTELL SYST, V18, P72
   W3C, 2004, XML SCH 0
   WELCH P, JCSP COMMUNICATING S
   Yu J, 2005, SIGMOD REC, V34, P44, DOI 10.1145/1084805.1084814
NR 32
TC 1
Z9 2
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2008
VL 38
IS 2
BP 135
EP 159
DI 10.1002/spe.822
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 268SU
UT WOS:000253600500002
DA 2024-07-18
ER

PT J
AU Chen, SQ
   Zhang, XD
AF Chen, SQ
   Zhang, XD
TI Enforcing direct communications between clients and Web servers to
   improve proxy performance and security
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE browser; dynamic contents; proxy caching; secured transactions
AB The amount of dynamic Web contents and secured e-commerce transactions has been dramatically increasing on the Internet, where proxy servers between clients and Web servers are commonly used for the purpose of sharing commonly accessed data and reducing Internet traffic. A significant and unnecessary Web access delay is caused by the overhead in proxy servers to process two types of accesses, namely dynamic Web contents and secured transactions, not only increasing response time, but also raising some security concerns. Conducting experiments on Squid proxy 2.3STABLE4, we have quantified the unnecessary processing overhead to show its significant impact on increased client access response times. We have also analyzed the technical difficulties in eliminating or reducing the processing overhead and the security loopholes based on the existing proxy structure. In order to address these performance and security concerns, we propose a simple but effective technique from the client side that adds a detector interfacing with a browser. With this detector, a standard browser, such as the Netscape/Mozilla, will have simple detective and scheduling functions, called a detective browser. Upon an Internet request from a user, the detective browser can immediately determine whether the requested content is dynamic or secured. If so, the browser will bypass the proxy and forward the request directly to the Web server; otherwise, the request will be processed through the proxy. We implemented a detective browser prototype in Mozilla version 0.9.7, and tested its functionality and effectiveness. Since we have simply moved the necessary detective functions from a proxy server to a browser, the detective browser introduces little overhead to Internet accessing, and our software can be patched to existing browsers easily. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23187 USA.
   George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 William & Mary; George Mason University
RP Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23187 USA.
EM zhang@cs.wm.edu
CR CAHLLENGER J, 1999, P INFOCOM NEW YORK M
   CANDAN KS, 2001, P ACM SIGMOD SANT BA
   CHEN SQ, 2002, P 7 INT WORKSH WEB C
   DOUGLIS F, 1997, P USENIX S INT TECHN
   HOLMEDAHL V, 1998, P 7 IEEE INT S HIGH
   Iyengar A., 1997, P USENIX S INT TECHN
   LUO Q, 2000, P 3 INT WORKSH WEB D
   SMITH B, 1999, P 2 USENIX S INT TEC
   YIN J, 2001, P WWW HONG KONG MAY
   YOSHIKAWA C, 1997, P USENIX ANN TECHN C
   ZHU H, 2001, P INFOCOM ANCH AK AP
   [No title captured]
NR 12
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2004
VL 34
IS 14
BP 1381
EP 1395
DI 10.1002/spe.617
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 869QG
UT WOS:000224998500003
DA 2024-07-18
ER

PT J
AU Bernardeschi, C
   De Francesco, N
   Lettieri, G
   Martini, L
AF Bernardeschi, C
   De Francesco, N
   Lettieri, G
   Martini, L
TI Checking secure information flow in Java bytecode by code transformation
   and standard bytecode verification
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE security; information flow; Java bytecode; bytecode verifier
ID SEMANTICS; MODEL
AB A method is presented for checking secure information flow in Java bytecode, assuming a multilevel security policy that assigns security levels to the objects. The method exploits the type-level abstract interpretation of standard bytecode verification to detect illegal information flows. We define an algorithm transforming the original code into another code in such a way that a typing error detected by the Verifier on the transformed code corresponds to a possible illicit information How in the original code. We present a prototype tool that implements the method and we show an example of application. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Pisa, Dipartimento Ingn Informaz, I-56100 Pisa, Italy.
C3 University of Pisa
RP Univ Pisa, Dipartimento Ingn Informaz, Via Diotisalvi 2, I-56100 Pisa, Italy.
EM g.lettieri@iet.unipi.it
RI Martinelli, Luca/JGD-3837-2023; Lettieri, Giuseppe/ABI-8376-2020;
   Bernardeschi, Cinzia/AAG-8272-2019
OI Martinelli, Luca/0000-0002-4466-3864; Lettieri,
   Giuseppe/0000-0003-1005-7441; Bernardeschi, Cinzia/0000-0003-1604-4465
CR Abadi Martin., 1999, POPL, P147, DOI [10.1145/292540.292555, DOI 10.1145/292540.292555]
   Andrews G. R., 1980, ACM Transactions on Programming Languages and Systems, V2, P56, DOI 10.1145/357084.357088
   [Anonymous], 1999, P 26 ACM SIGPLAN SIG
   *AP FDN, 2004, JAK PROJ
   Ball T., 1993, ACM Letters on Programming Languages and Systems, V2, P1, DOI 10.1145/176454.176456
   Banatre J.-P., 1994, LECT NOTES COMPUTER, V875, P55
   Barbuti R, 2002, INFORM PROCESS LETT, V83, P101, DOI 10.1016/S0020-0190(02)00219-3
   BARBUTI R, 2002, 17 ACM S APPL COMP S, P229
   Bell D.E., 1973, Technical report
   Bernardeschi C, 2002, MICROPROCESS MICROSY, V26, P391, DOI 10.1016/S0141-9331(02)00064-9
   BERNARDESCHI C, 2002, 26 ANN INT COMP SOFT
   BERNARDESCHI C, 2002, 3 INT WORKSH VER MOD, P1
   BIEBER P, 2000, P 6 EUR S RES COMP S
   CAZIN J, 2000, JAV CARD WORKSH P CA
   DENNING DE, 1976, COMMUN ACM, V19, P236, DOI 10.1145/360051.360056
   DENNING DE, 1977, COMMUN ACM, V20, P504, DOI 10.1145/359636.359712
   Goguen J. A., 1982, Proceedings of the 1982 Symposium on Security and Privacy, P11
   Heintze Nevin., 1998, P 25 ACM SIGPLAN SIG, P365, DOI [DOI 10.1145/268946.268976, 10.1145/268946.268976]
   Joshi R, 2000, SCI COMPUT PROGRAM, V37, P113, DOI 10.1016/S0167-6423(99)00024-6
   Leroy X, 2001, LECT NOTES COMPUT SC, V2102, P265
   LINDHOLM T, 1996, JAVA VIRTUAL MACHINE
   MEYER J, 1996, JASMIN
   Mizuno M., 1992, Formal Aspects of Computing, V4, P727, DOI 10.1007/BF03180570
   MYERS AC, 2004, JAVA INFORMATION FLO
   MYERS AC, 2002, HIGHER ORDER SYMBOLI, V15, P209
   NAUMANN DA, 2002, 29 SIGPLAN SIGACT S, P166
   POSSEGGA J, 1998, P 5 EUR S RES COMP S
   POTTIER F, 2002, 29 S PRINC PROGR LAN, P319
   ROSE E, 1998, WORKSHOP FORMAL UNDE
   Rushby John., 1992, NONINTERFERENCE TRAN
   Sabelfeld A, 1999, LECT NOTES COMPUT SC, V1576, P40
   Smith C, 1998, IMECHE SEM, V1998, P1
   Volpano D., 1996, Journal of Computer Security, V4, P167
NR 33
TC 10
Z9 12
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2004
VL 34
IS 13
BP 1225
EP 1255
DI 10.1002/spe.611
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 867VD
UT WOS:000224869700002
DA 2024-07-18
ER

PT J
AU Schwanke, RW
   Lutz, RR
AF Schwanke, RW
   Lutz, RR
TI Experience with the architectural design of a modest product family
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software product family; software architecture; software product line;
   medical image analysis; modest product family; product line architecture
AB Many product families are modest in the sense that they consist of a sequence of incremental products with, at any point in time, only a few distinct products available and minimal variations among the products. Such product families, nevertheless, are often large, complex systems, widely deployed, and possessing stringent safety and performance requirements. This paper describes a case study that tends to confirm the value of using a product-line approach for the architectural design of a modest product family. The paper describes the process, design alternatives, and lessons learned, both positive and negative, from the architectural design of one such family of medical image analysis products. Realized benefits included identifying previously unrecognized common behavior and sets of features that were likely to change together, aligning the architecture with specific market needs and with the organization, and reducing unplanned dependencies. Most interesting were the unanticipated benefits, including decoupling the product-family architecture from the order of implementation of features, and using the product-family architecture as a 'guiding star' with subsequent releases moving toward, rather than away from, the planned architecture. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Iowa State Univ Sci & Technol, Dept Comp Sci, Ames, IA 50011 USA.
   Siemens Corp Res Inst, Princeton, NJ 08540 USA.
   CALTECH, Jet Prop Lab, Pasadena, CA 91109 USA.
C3 Iowa State University; Siemens AG; National Aeronautics & Space
   Administration (NASA); NASA Jet Propulsion Laboratory (JPL); California
   Institute of Technology
RP Iowa State Univ Sci & Technol, Dept Comp Sci, 226 Atanasoff Hall, Ames, IA 50011 USA.
EM rlutz@cs.iastate.edu
OI Lutz, Robyn/0000-0001-5390-7982
CR Ardis M, 2000, SOFTWARE PRACT EXPER, V30, P825, DOI 10.1002/(SICI)1097-024X(200006)30:7<825::AID-SPE322>3.0.CO;2-1
   BACHMANN F, 1998, CMUSE2000TR001 SOFTW
   Bass Len, 2012, SEI S SOFTW
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   DAPENA PR, 1999, IEEE SOFTWARE, V16, P1631
   DEBAND JM, 2001, SOFTWARE ENG NOTES, V26, P103
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   KAZMAN R, 1998, CMUSEI98TR008 SOFTW
   Knauber P, 2000, IEEE SOFTWARE, V17, P88, DOI 10.1109/52.877873
   Lam W, 1998, ANN SOFTW ENG, V5, P253, DOI 10.1023/A:1018912105115
   Lutz RR, 2003, J SYST SOFTWARE, V66, P253, DOI 10.1016/S0164-1212(02)00081-X
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Paulish D., 2002, ARCHITECTURE CENTRIC
   PERRY DE, 1998, ARES II SOFTWARE ARC, P51
   Pree W., 1994, DESIGN PATTERNS OBJE
   Pronk BJ, 2000, KLUWER INT SER ENG C, V576, P331
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   SCHWANKE RW, 2003, SOFTWARE REQUIREMENT
   SCHWANKE RW, 2001, P WORK IEEE IFIP C S
   Thiel S, 2000, KLUWER INT SER ENG C, V576, P495
   van Gurp J, 2001, SOFTWARE PRACT EXPER, V31, P277, DOI 10.1002/spe.366
   Voget S., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P60
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   WIJNSTRA JG, 2000, P INT C SOFTW ENG IC, P50
NR 25
TC 6
Z9 7
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2004
VL 34
IS 13
BP 1273
EP 1296
DI 10.1002/spe.613
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 867VD
UT WOS:000224869700004
DA 2024-07-18
ER

PT J
AU de Kretser, O
   Moffat, A
AF de Kretser, O
   Moffat, A
TI SEFT: a search engine for text
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 23rd Australasian Computer Science Conference
CY 2000
CL Canberra, AUSTRALIA
DE information retrieval; text retrieval; string searching
ID ALGORITHM
AB We present a software tool called seft which balances the convenience of search tools such as grep with the functionality of full-text index-based information retrieval. Based on a novel retrieval heuristic which uses term locality as a guide to relevance, seft combines the freedom of natural language queries with the benefits of a ranked answer list and easy inspection of retrieval results. While not as fast as grep-style tools, seft provides a valuable facility for impromptu personal information retrieval tasks. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
EM alistair@cs.mu.oz.au
OI Moffat, Alistair/0000-0002-6638-0232
CR Bentley JL, 1997, PROCEEDINGS OF THE EIGHTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P360
   BOYER RS, 1977, COMMUN ACM, V20, P762, DOI 10.1145/359842.359859
   CALLAN JP, 1992, P 3 INT C DAT EXP SY, P78
   DEKRETSER O, 2000, THESIS U MELBOURNE
   DEKRETSER O, 1999, P 22 ANN INT ACM SIG, P131
   Dumais S., 2003, P 26 ANN INT ACM SIG, P72, DOI [DOI 10.1145/860435.860451, 10.1145/860435, DOI 10.1145/860435]
   HARMAN D, 1995, INFORM PROCESS MANAG, V31, P271, DOI 10.1016/0306-4573(94)00047-7
   Heaps HS, 1978, INFORMATION RETRIEVA
   HUME A, 1988, SOFTWARE PRACT EXPER, V18, P1063, DOI 10.1002/spe.4380181105
   LOVINS JB, 1968, MECH TRANSL, V11, P22
   *MG SOFTW, 1999, MG PUBL DOM SOFTW IN
   Salton G., 1971, SMART RETRIEVAL SYST
   SPARCK JK, 1995, INFORMATION PROCESSI, V31, P291
   TURTLE HR, 1992, COMPUT J, V35, P279, DOI 10.1093/comjnl/35.3.279
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   WU S, 1992, COMMUN ACM, V35, P83, DOI 10.1145/135239.135244
   Wu Sun., 1992, Usenix Winter 1992, P153
   Zobel J., 1998, SIGIR Forum, V32, P18, DOI 10.1145/281250.281256
NR 18
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2004
VL 34
IS 10
BP 1011
EP 1023
DI 10.1002/spe.601
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 844AN
UT WOS:000223129300004
DA 2024-07-18
ER

PT J
AU Savidis, A
AF Savidis, A
TI The implementation of generic smart pointers for advanced defensive
   programming
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE smart pointers; defensive programming; garbage collection; memory
   management; recursive meta-programming
AB Smart pointers denote a well-known technique for collective resource ownership, e.g. sharing dynamic object instances, while usually supporting automatic garbage collection based on reference counting. The original method has been retargeted to serve as a generic defensive programming method for 'exhaustive tracking' of erroneous pointer use in C++. Automatic bug tracking is supported in a unified manner both for pointers to heap memory, i.e. free storage, as well as for pointers to stack or global memory, i.e. auto or static storage. Overall, the presented technique (a) offers a simple contract for memory allocation and use; (b) supports type and indirection depth genericity; (c) implements most operators supported for built-in pointers with embedded bug defense; (d) offers an alternative way of employing a garbage collection facility for memory leak detection; and (e) provides an appropriate collection of utility macros, through which defensive pointers should be used, with an alternative version re-targeted to normal native pointers. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Fdn Res & Technol Hellas, Inst Comp Sci, GR-71110 Iraklion, Greece.
C3 Foundation for Research & Technology - Hellas (FORTH)
RP Fdn Res & Technol Hellas, Inst Comp Sci, GR-71110 Iraklion, Greece.
EM as@ics.forth.gr
CR ALEXANDRESCU A, 2001, MODER C DESIGN, P157
   [Anonymous], C GEMS
   DIJKSTRA EW, 1976, LECT NOTES COMPUTER, V46
   HIXON B, 2002, GAMASUTRA LINE MAGAZ
   KARLSSON B, 2002, USERS J, V20
   MEYERS S, 1999, DR DOBBS J, V12
   PIRINEN P, 1998, ACM ISMM 98, P20
   SHARON Y, 1999, SMART POINTERW WHAT
   2002, MEMORY MANAGEMENT RE
   1998, TEMPLATE DECLARATION, pCH145
NR 10
TC 5
Z9 6
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2004
VL 34
IS 10
BP 977
EP 1009
DI 10.1002/spe.600
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 844AN
UT WOS:000223129300003
DA 2024-07-18
ER

PT J
AU Dunkel, J
   Bruns, R
   Holitschke, A
AF Dunkel, J
   Bruns, R
   Holitschke, A
TI Comparison of JavaServer Pages and XSLT: a software engineering
   perspective
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software architecture; Web page generation; JavaServer pages; XML/XSLT
AB Professional Web applications present their content and services by means of dynamically generated Web pages to the user-normally HTML pages. Basically, there are two different technologies available for dynamic Web page generation-JavaServer Pages and XML/XSLT. In this paper the alternative technologies are compared from a software engineering perspective.
   The basic concepts of JavaServer Pages and XML/XSLT are briefly explained with respect to Web page generation. A universal software architecture of the server side presentation tier is introduced and it is shown how both technologies fit into the universal architecture. Its fundamental idea is the clear separation of concerns according to the well-established model-view-controller design pattern. The proposed architecture has proven its applicability in several enterprise applications. The main part of the paper deals with the comparison of JavaServer Pages and XML/XSLT. Quality criteria well-established in software engineering practice are discussed with respect to JavaServer Pages and XML/XSLT, e.g. maintainability, extensibility, reusability, efficiency, portability, integration of methods and tools. The main emphasis is laid on the support of the model-view-controller pattern, since it is the most established design principle for user interface design. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Appl Sci & Arts Hannover, Dept Comp Sci, D-30459 Hannover, Germany.
C3 Hochschule Hannover-University of Applied Sciences & Arts
RP Univ Appl Sci & Arts Hannover, Dept Comp Sci, Ricklinger Stadtweg 120, D-30459 Hannover, Germany.
EM ralf.bruns@inform.fh-hannover.de
OI Bruns, Ralf/0000-0001-5842-4218
CR ALUR D, 2001, CORE J2EEE PATTERNS
   [Anonymous], 1984, Smalltalk-80: The Interactive Programming Environment
   *AP SOFTW FDN, 2003, AP JAK PROJ STRUTS
   *AP SOFTW FDN, 2003, AP JAK PROJ AP TOMC
   *AP SOFTW FDN, 2003, AP XML PROJ
   Bergsten Hans., 2001, JavaServer Pages, V3rd
   BOOCH G, 1998, UNIFIED MODELING LAN
   Bruns R, 2003, P 5 INT C ENT INF SY
   Burke E., 2001, JAVA XSLT
   Conallen J, 1999, COMMUN ACM, V42, P63, DOI 10.1145/317665.317677
   HORSTMANN CS, 2002, CORE JAVA 2 ADV FEAT
   Krasner G. E., 1988, J OBJECT ORIENTED PR, V1, P26
   KUZNETSOV E, 2001, XSLT PERFORMANCE BEN
   Linnemann V., 2002, Informatik Spektrum, V25, P349, DOI 10.1007/s002870200252
   Sommerville I, 2001, Software Engineering
   *SUN MICR, 2003, SIMPL GUID J2EE PLAT
   TIDWELL D, 2001, XSLT MASTERING XML T
   *WORLD WID WEB CON, 2001, XML SCHEM 0
   *WORLD WID WEB CON, 2003, EXT STYL LANG XSL VE
NR 19
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2004
VL 34
IS 1
BP 1
EP 13
DI 10.1002/spe.555
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 763TV
UT WOS:000188117300001
DA 2024-07-18
ER

PT J
AU Lhee, KS
   Chapin, SJ
AF Lhee, KS
   Chapin, SJ
TI Buffer overflow and format string overflow vulnerabilities
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE buffer overflow; format string overflow; array and pointer range
   checking; Linux; ELF
AB Buffer overflow vulnerabilities are among the most widespread of security problems. Numerous incidents of buffer overflow attacks have been reported and many solutions have been proposed, but a solution that is both complete and highly practical is yet to be found. Another kind of vulnerability called format string overflow has recently been found and although not as widespread as buffer overflow, format string overflow attacks are no less dangerous.
   This article surveys representative techniques of exploiting buffer overflow and format string overflow vulnerabilities and their currently available defensive measures. We also describe our buffer overflow detection technique that range checks the referenced buffers at run-time. We augment executable files with the type information of automatic buffers (local variables and parameters of functions) and static buffers (global variables in the data/bss section) and maintain the sizes of allocated heap buffers in order to detect an actual occurrence of buffer overflow. We describe a simple implementation with which we currently protect vulnerable copy functions in the C library. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Syracuse Univ, Ctr Syst Assurance, Syracuse, NY 13210 USA.
C3 Syracuse University
RP Syracuse Univ, Ctr Syst Assurance, Syracuse, NY 13210 USA.
EM chapin@ecs.syr.edu
CR Aleph One, 1996, ALEPH ONE SMASHING S, VSeven
   AUSTIN TM, 1994, ACM C PROGR LANG DES, P290
   Baratloo A, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 2000 USENIX ANNUAL TECHNICAL CONFERENCE, P251
   Cowan C, 1998, PROCEEDINGS OF THE SEVENTH USENIX SECURITY SYMPOSIUM, P63
   COWAN C, 2001, P 10 USENIX SEC S US
   EVANS D, 1994, SIGSOFT S FDN SOFTW, P87
   Forrest S, 1996, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1996.502675
   Hastings Reed., 1992, WINTER USENIX C, P125
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   JIM T, 2002, USENIX ANN TECHN C U
   Jones Richard WM, 1997, AADEBUG, V97, P13
   Larochelle D, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 10TH USENIX SECURITY SYMPOSIUM, P177
   Lhee KS, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P81
   Necula GC, 2002, ACM SIGPLAN NOTICES, V37, P128, DOI 10.1145/565816.503286
   Nergal, 2001, PHRACK, V10
   SEKAR R, 1996, P 2001 IEEE S SEC PR, P144
   Shankar U, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 10TH USENIX SECURITY SYMPOSIUM, P201
   STALLMAN RM, 1999, USING PORTING GNU CC
   THUEMMEL A, 2001, ANAL FORMAT STRING B
   Wagner D., 2000, IN NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM, P3
   WAGNER D, 1996, P 2001 IEEE S SEC PR, P156
   Walpole J., 2000, Proceedings DARPA Information Survivability Conference and Exposition. DIS-CEX'00, P119
   Wojtczuk Rafel., DEFEATING SOLAR DESI
   2001, PHRACK, V10
   1999, KLOG FRAME POINTER O, V9
   2000, PHRACK, V10
NR 26
TC 41
Z9 62
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2003
VL 33
IS 5
BP 423
EP 460
DI 10.1002/spe.515
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 668VE
UT WOS:000182313200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ren, XQ
AF Ren, Xiquan
TI Python shared atomic data types
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE concurrent programming structures; parallel programming languages;
   Python atomicity
ID ARRAY
AB Although atomicity plays a key role in data operations of shared variables in parallel computation, researchers haven't treated atomicity in Python in much detail. This study provides a novel approach to integrate the CPU-based atomic C APIs into Python shared variables by C Foreign Function Interface for Python (CFFI) on all major platforms and utilises Cython to optimise calculation in CPython. Evidence shows that the resulting product, Shared Atomic Enterprise (SAE), could accelerate data operations on shared data types to a large extent. These findings provide a solid evidence base for the massive utilisation of Python atomic operations in parallel computation and concurrent programming.
C1 [Ren, Xiquan] Anlianwanjia Dept Store, Software Dev, Jinan, Peoples R China.
RP Ren, XQ (corresponding author), Anlianwanjia Dept Store, Software Dev, Jinan, Peoples R China.
EM xiquanren@yandex.com
OI , Xiquan/0000-0002-6214-6692
FU The author extends sincere thanks to the University of Birmingham for
   their excellent education in Computer Science, Fudan University for
   training in scientific research, the anonymous tester for the
   constructive advice, Wenjuan An for her sponsorship of t
FX The author extends sincere thanks to the University of Birmingham for
   their excellent education in Computer Science, Fudan University for
   training in scientific research, the anonymous tester for the
   constructive advice, Wenjuan An for her sponsorship of the place to
   conduct scientific experiments, and Anlianwanjia Department Store as a
   financial sponsor of the project.
CR Abadi M, 2016, ACM SIGPLAN NOTICES, V51, P1, DOI [10.1145/3022670.2976746, 10.1145/2951913.2976746]
   Anaconda, NUMB MAK PYTH COD FA
   Behnel S., PORTING CYTHON CODE
   Behnel S, 2011, COMPUT SCI ENG, V13, P31, DOI 10.1109/MCSE.2010.118
   CPython Team, IN FIN THREADS
   CPython Team, MULT PROC BAS PAR PY
   CPython Team, PYTHON LANGUAGE REFE
   CPython Team, AS ASYNCHR I O PYTH
   CPython Team, PYTHON TUTORIAL
   Django Software Foundation, WEB FRAM PERF DEADL
   GCC Team, BUILT IN FUNCT AT ME
   Harris CR, 2020, NATURE, V585, P357, DOI 10.1038/s41586-020-2649-2
   Intel Corporation, 2022, INT 64 IA 32 ARCHI S, V3S
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Li S, 2020, PROC VLDB ENDOW, V13, P3005, DOI 10.14778/3415478.3415530
   Microsoft, DEV C C APPL MICR VI
   Microsoft, SYNCHR MULT ISS
   NET Foundation, PYTHON PROGRAMMING L
   Peignier T., ATOMIC ATOMIC CLASS
   Preferred Networks Incorporated, NUMPY SCIPY COMP ARR
   Python Software Foundation, WHAT IS JYTH JYTH
   Ramirez S., FASTAPI FRAMEWORK HI
   Rigo A., CFFI DOCUMENTATION
   Rigo A., OVERVIEW CFFI DOCUME
   Rigo A., GOALS CFFI DOCUMENTA
   Ronacher A., FLASK PALLETS
   The Pandas Development Team, PAND IS FAST POW FLE
   The PyPy Team, PYPY FEAT PYPY
   The PyPy Team, FAST
   van der Walt S, 2011, COMPUT SCI ENG, V13, P22, DOI 10.1109/MCSE.2011.37
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
NR 31
TC 0
Z9 0
U1 4
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2023
VL 53
IS 12
SI SI
BP 2393
EP 2407
DI 10.1002/spe.3259
EA AUG 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X8MK4
UT WOS:001080481200001
DA 2024-07-18
ER

PT J
AU Panda, S
   Sahoo, S
   Halder, R
   Mondal, S
AF Panda, Suryakanta
   Sahoo, Swagatika
   Halder, Raju
   Mondal, Samrat
TI Contextual attribute-based access control scheme for cloud storage using
   blockchain technology
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE access revocation; attribute based encryption; blockchain; cloud
   storage; contextual access control
AB Access control of data that are outsourced to cloud storage is a challenging problem because data owners lose direct control over outsourced data. Attribute-based encryption (ABE) is a potential cryptographic solution to provide confidentiality and flexible sharing of these outsourced data. However, the traditional ABE schemes do not meet the need of the current dynamic environment where data access not only considers the user's static and inherent attributes but also takes the user's contextual information such as location and time of access. This paper presents an improved ABE scheme using blockchain technology that can handle the frequently changing location and time attributes of data users efficiently, leading to support for fine-grained access control of cloud storage embedding contextual information in the access policy of ABE. A prototype implementation of the proposed ABE scheme using solidity on the Ethereum platform and the experimental evaluation in terms of performance and execution cost shows a promising result.
C1 [Panda, Suryakanta; Sahoo, Swagatika; Halder, Raju; Mondal, Samrat] Indian Inst Technol Patna, Dept Comp Sci & Engn, Bihta, India.
   [Panda, Suryakanta] SOA Univ, Dept Comp Sci & Engn, ITER, Bhubaneswar, India.
   [Sahoo, Swagatika] KIIT Univ, Sch Comp Engn, Bhubaneswar, Bhubaneswar, India.
   [Panda, Suryakanta] Indian Inst Technol Patna, Dept Comp Sci & Engn, Bihta 801106, India.
C3 Indian Institute of Technology (IIT) - Patna; Siksha 'O' Anusandhan
   University; Kalinga Institute of Industrial Technology (KIIT); Indian
   Institute of Technology (IIT) - Patna
RP Panda, S (corresponding author), Indian Inst Technol Patna, Dept Comp Sci & Engn, Bihta 801106, India.
EM skpandacs@gmail.com
OI Halder, Raju/0000-0002-8873-8258; Panda, Suryakanta/0000-0001-7937-183X
CR Abid A, 2022, SOFTWARE PRACT EXPER, V52, P841, DOI 10.1002/spe.2983
   Agbo CC, 2019, HEALTHCARE-BASEL, V7, DOI 10.3390/healthcare7020056
   Al-Jaroodi J, 2019, IEEE ACCESS, V7, P36500, DOI 10.1109/ACCESS.2019.2903554
   Amoretti M, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P146, DOI 10.1109/QRS-C.2018.00038
   Arfaoui A, 2020, IEEE INTERNET THINGS, V7, P786, DOI 10.1109/JIOT.2019.2953144
   Beimel A., 1996, Tech. Rep.
   Bethencourt J, 2007, P IEEE S SECUR PRIV, P321, DOI 10.1109/sp.2007.11
   Bussard L, 2005, INT FED INFO PROC, V181, P223
   Cao K, 2021, IEEE T IND INFORM, V17, P7806, DOI 10.1109/TII.2021.3073066
   Clulow J, 2006, LECT NOTES COMPUT SC, V4357, P83
   Ding S, 2018, IEEE ACCESS, V6, DOI 10.1109/ACCESS.2018.2836350
   Domingo-Ferrer J, 2019, COMPUT COMMUN, V140, P38, DOI 10.1016/j.comcom.2019.04.011
   Fan YK, 2022, SOFTWARE PRACT EXPER, V52, P115, DOI 10.1002/spe.2753
   Goyal V., 2006, P 2006 INT C PRIVACY, P1
   Hong J., 2017, IEEE T SERV COMPUT, V13, P158
   Katz J., 2014, INTRO MODERN CRYPTOG
   Li J, 2018, COMPUT SECUR, V72, P1, DOI 10.1016/j.cose.2017.08.007
   Liu J, 2019, IEEE ACCESS, V7, P77894, DOI 10.1109/ACCESS.2019.2921624
   Liu ZC, 2018, IEEE TRUST BIG, P614, DOI 10.1109/TrustCom/BigDataSE.2018.00092
   Liu ZC, 2016, IEEE TRUST BIG, P129, DOI [10.1109/TrustCom.2016.0055, 10.1109/TrustCom.2016.54]
   Nosouhi MR, 2020, J PARALLEL DISTR COM, V136, P40, DOI 10.1016/j.jpdc.2019.10.007
   Panda S., 2022, COMPUT COMMUN, V189, P36
   Panda S, 2022, I C NETWORK PROTOCOL, DOI 10.1109/ICNP55882.2022.9940261
   Puthal D, 2021, IEEE CONSUM ELECTR M, V10, P68, DOI 10.1109/MCE.2021.3051813
   Puthal D, 2018, IEEE CONSUM ELECTR M, V7, P6, DOI 10.1109/MCE.2018.2816299
   Rogaway P., 2011, EVALUATION SOME BLOC
   Sahai A, 2005, LECT NOTES COMPUT SC, V3494, P457, DOI 10.1007/11426639_27
   Sahoo Swagatika, 2020, Future Data and Security Engineering. 7th International Conference, FDSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12466), P201, DOI 10.1007/978-3-030-63924-2_12
   Sahoo S, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9112343
   Sahoo Swagatika, 2020, INTELLIGENT INFORM D, V12, P71
   Shao J, 2014, IEEE INFOCOM SER, P244, DOI 10.1109/INFOCOM.2014.6847945
   Shi PC, 2021, SOFTWARE PRACT EXPER, V51, P2051, DOI 10.1002/spe.2739
   SIMMONS GJ, 1979, COMPUT SURV, V11, P305, DOI 10.1145/356789.356793
   Wu WC, 2023, IEEE T NEUR NET LEAR, V34, P1681, DOI 10.1109/TNNLS.2020.3004626
   Xue Y., 2016, IEEE Global Commun Conf, P1
   Yang K, 2017, IEEE INTERNET THINGS, V4, P563, DOI 10.1109/JIOT.2016.2571718
NR 36
TC 2
Z9 2
U1 4
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 AUG 9
PY 2023
DI 10.1002/spe.3250
EA AUG 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O6FI4
UT WOS:001044740100001
DA 2024-07-18
ER

PT J
AU Jiang, XT
   Dou, RH
   He, Q
   Zhang, XY
   Dou, WC
AF Jiang, Xutong
   Dou, Ruihan
   He, Qiang
   Zhang, Xuyun
   Dou, Wanchun
TI EdgeAuth: An intelligent token-based collaborative authentication scheme
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE authentication; cloud; edge computing; security; token
ID INTEGRITY; PROTOCOL
AB Edge computing is regarded as an extension of cloud computing that brings computing and storage resources to the network edge. For some Industrial Internet of Things (IIoT) applications such as supply-chain supervision and collaboration, Internet of Vehicles, real-time video analysis and so forth, users should be authenticated before visiting the geographically distributed edge servers. Limited by the considerable latency between the cloud and edge servers, and the limited capacity of edge servers, it is infeasible to copy the authentication method from cloud servers when users are authenticated in edge servers. In view of this challenge, this paper proposes a novel token-based authentication scheme, named EdgeAuth, that enables fast edge user authentication through collaboration among cloud servers and edge servers. Under the EdgeAuth scheme, edge servers can rapidly verify the credentials of users who have been authenticated by the cloud server. EdgeAuth can also protect users from a series of authentication attacks, for example, the replay attack, DoS attack and man-in-the-middle attack. The results of experiments conducted on a simulated edge computing environment validate the usefulness of EdgeAuth through a comparison in latency and throughput against two baseline schemes.
C1 [Jiang, Xutong; Dou, Wanchun] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Dou, Ruihan] Univ Waterloo, Fac Math, Waterloo, ON, Canada.
   [He, Qiang] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Melbourne, Vic, Australia.
   [Zhang, Xuyun] Macquarie Univ, Dept Comp, Sydney, NSW, Australia.
   [Dou, Wanchun] Southwest Forestry Univ, Coll Big Data & Intelligent Engn, Kunming, Peoples R China.
C3 Nanjing University; University of Waterloo; Swinburne University of
   Technology; Macquarie University; Southwest Forestry University - China
RP Dou, WC (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
EM douwc@nju.edu.cn
RI zhang, xu/GYE-3558-2022; ZHANG, XUCHEN/KBB-7989-2024
OI Zhang, Xuyun/0000-0001-7353-4159; Jiang, Xutong/0000-0001-6950-0247
FU National Key Research and Development Program of China [2020YFB1707600];
   National Natural Science Foundation of China [92267104]; Dou Wanchun
   Expert Workstation of Yunnan Province [202105AF150013]
FX National Key Research and DevelopmentProgram of China, Grant/Award
   Number:2020YFB1707600; Dou Wanchun Expert Workstation of Yunnan
   Province,Grant/Award Number: 202105AF150013;National Natural Science
   Foundation ofChina, Grant/Award Number: 92267104
CR Ardagna CA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2767005
   Bilal M, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17050979
   Bo L., 2020, IEEE T SERV COMPUT, V15, P1746
   Chen LX, 2021, IEEE T MOBILE COMPUT, V20, P377, DOI 10.1109/TMC.2019.2945956
   Choudhury A. J., 2011, Proceedings of the 2011 IEEE Asia-Pacific Services Computing Conference (APSCC), P110, DOI 10.1109/APSCC.2011.14
   Farhadi V, 2021, IEEE ACM T NETWORK, V29, P779, DOI 10.1109/TNET.2020.3048613
   Guo SY, 2020, IEEE T IND INFORM, V16, P1972, DOI 10.1109/TII.2019.2938001
   He Q, 2020, IEEE T PARALL DISTR, V31, P515, DOI 10.1109/TPDS.2019.2938944
   Jesudoss A., 2014, Indian J. Comput. Sci. Eng., V5, P71
   Lai P, 2018, LECT NOTES COMPUT SC, V11236, P230, DOI 10.1007/978-3-030-03596-9_15
   Li B, 2021, IEEE T PARALL DISTR, V32, P1210, DOI 10.1109/TPDS.2020.3043755
   Li FY, 2022, BIG DATA MIN ANAL, V5, P1, DOI 10.26599/BDMA.2020.9020028
   Li J, 2021, TSINGHUA SCI TECHNOL, V26, P219, DOI 10.26599/TST.2019.9010060
   Liu H, 2015, IEEE T PARALL DISTR, V26, P241, DOI 10.1109/TPDS.2014.2308218
   Longo F, 2011, I C DEPEND SYS NETWO, P335, DOI 10.1109/DSN.2011.5958247
   Ma X, 2020, IEEE INFOCOM SER, P2076, DOI [10.1109/infocom41043.2020.9155455, 10.1109/INFOCOM41043.2020.9155455]
   Mabrouki J, 2021, BIG DATA MIN ANAL, V4, P25, DOI 10.26599/BDMA.2020.9020018
   Martin V., 2018, J DIGIT FORENSIC SEC, V13, P9
   Mohammad A-R., 2016, IEEE T INF FOREN SEC, V11, P2648
   Muhammad B., 2017, INT J COMMUN SYST, V30
   Muhammad B., 2019, IEEE SYST J, V14, P1921
   Odelu V, 2015, IEEE T INF FOREN SEC, V10, P1953, DOI 10.1109/TIFS.2015.2439964
   Pearson S, 2009, LECT NOTES COMPUT SC, V5931, P90, DOI 10.1007/978-3-642-10665-1_9
   Puthal D, 2019, J PARALLEL DISTR COM, V124, P60, DOI 10.1016/j.jpdc.2018.10.007
   Qi L, 2021, ACM T MULTIM COMPUT, V17, DOI 10.1145/3419439
   Qi LY, 2023, IEEE T KNOWL DATA EN, V35, P5444, DOI 10.1109/TKDE.2022.3168611
   Qi LY, 2021, IEEE T IND INFORM, V17, P4159, DOI 10.1109/TII.2020.3012157
   Qiang H., 2021, IEEE T DEPEND SECURE, V19, P2333
   Ren JY, 2022, TSINGHUA SCI TECHNOL, V27, P760, DOI 10.26599/TST.2021.9010046
   Ruj S, 2014, IEEE T PARALL DISTR, V25, P384, DOI 10.1109/TPDS.2013.38
   Sandhu AK, 2022, BIG DATA MIN ANAL, V5, P32, DOI 10.26599/BDMA.2021.9020016
   Sun HM, 2012, IEEE T INF FOREN SEC, V7, P651, DOI 10.1109/TIFS.2011.2169958
   Tong Z, 2021, BIG DATA MIN ANAL, V4, P155, DOI 10.26599/BDMA.2020.9020029
   Vamshi Krishna P., 2011, IEEE INT VACUUM ELEC, P1, DOI [10.1109/ivec.2011.5746991, DOI 10.1109/IVEC.2011.5746991]
   Wang FX, 2020, IEEE INFOCOM SER, P2499, DOI [10.1109/infocom41043.2020.9155373, 10.1109/INFOCOM41043.2020.9155373]
   Wang L, 2018, IEEE INFOCOM SER, P468, DOI 10.1109/INFOCOM.2018.8486411
   Xia XY, 2021, IEEE T PARALL DISTR, V32, P281, DOI 10.1109/TPDS.2020.3016344
   Xiaolong X., 2022, IEEE T SERV COMPUT, V15, P1206
   Xu SY, 2021, TSINGHUA SCI TECHNOL, V26, P845, DOI 10.26599/TST.2020.9010043
   Xu XL, 2022, IEEE T FUZZY SYST, V30, P4593, DOI 10.1109/TFUZZ.2022.3158000
   Xu XL, 2022, TSINGHUA SCI TECHNOL, V27, P270, DOI 10.26599/TST.2020.9010025
   Xu XL, 2021, ACM T SENSOR NETWORK, V17, DOI 10.1145/3447032
   Xu XL, 2021, ACM T MULTIM COMPUT, V17, DOI 10.1145/3401979
   Yang YJ, 2006, IEEE T DEPEND SECURE, V3, P105, DOI 10.1109/TDSC.2006.16
   Yuan JW, 2014, IEEE INFOCOM SER, P2121, DOI 10.1109/INFOCOM.2014.6848154
   Yuan L, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P2245, DOI 10.1145/3442381.3449994
   Zhou L, 2015, IEEE T INF FOREN SEC, V10, P2381, DOI 10.1109/TIFS.2015.2455952
   Zulfiqar A., 2018, FUTURE GENER COMP SY, V85, P76
NR 48
TC 1
Z9 1
U1 4
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 APR 8
PY 2023
DI 10.1002/spe.3206
EA APR 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C8EE1
UT WOS:000964177200001
DA 2024-07-18
ER

PT J
AU Khanahmadi, M
   Shameli-Sendi, A
   Jabbarifar, M
   Fournier, Q
   Dagenais, M
AF Khanahmadi, Mohammad
   Shameli-Sendi, Alireza
   Jabbarifar, Masoume
   Fournier, Quentin
   Dagenais, Michel
TI Detection of microservice-based software anomalies based on OpenTracing
   in cloud
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE anomaly detection; microservice; machine learning; OpenTracing
AB Today, the noticeable tendency of the software industry to break large software projects into loosely coupled modules through a microservice-based architecture is more than ever. This is because of advantages such as scalability, independence, smaller and faster deployments, improved fault isolation, and flexibility. On the other hand, it should be noted that with the growth of microservice architecture, new complexities have emerged. We need to have a mature DevOps team to handle the complexity involved in maintaining and supporting systems, namely functional and non-functional monitoring (anomaly monitoring and detection). This challenge can lead to a lot of software development time being spent monitoring and identifying anomalies. Existing approaches are not accurate enough to identify anomalies, and if they are able to identify them, they are unable to identify the category of the anomaly. Our approach in this research is to use distributed tracing with the help of machine learning algorithms to identify performance anomalies, the exact location of each anomaly, and predict its category. In this research, we implemented a software based on microservice architecture and then created a variety of anomalies over time (e.g., physical resources, virtual resources, database, application) to be able to evaluate the proposed model. The resulting dataset is publicly available. Our simulation results show that the proposed model is able to accurately identify the anomalies with 98% accuracy and their category with 99% accuracy.
C1 [Khanahmadi, Mohammad; Shameli-Sendi, Alireza] Shahid Beheshti Univ SBU, Fac Comp Sci & Engn, Tehran, Iran.
   [Jabbarifar, Masoume] Kharazmi Univ, Fac Financial Sci, Tehran, Iran.
   [Fournier, Quentin; Dagenais, Michel] Ecole Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ, Canada.
C3 Shahid Beheshti University; Kharazmi University; Universite de Montreal;
   Polytechnique Montreal
RP Shameli-Sendi, A (corresponding author), Shahid Beheshti Univ SBU, Fac Comp Sci & Engn, Tehran, Iran.
EM a_shameli@sbu.ac.ir
RI Jabbarifar, M/KIL-6214-2024; Fournier, Quentin/JQV-9593-2023
OI Fournier, Quentin/0000-0002-1036-0777
CR Aceto G, 2013, COMPUT NETW, V57, P2093, DOI 10.1016/j.comnet.2013.04.001
   Ahmed TM., 2016, 13 WORKING C MINING
   Bento AP., 2019, THESIS U COIMBRA
   Bruneliere H., 2018, FED INT C SOFTW TECH
   Cai LR, 2020, IEEE ACCESS, V8, P22686, DOI 10.1109/ACCESS.2020.2970250
   Campos GO, 2016, DATA MIN KNOWL DISC, V30, P891, DOI 10.1007/s10618-015-0444-8
   Chang CC, 2017, IEEE GLOB COMM CONF
   Chen BY, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3448976
   Chen L., 2018, MICROSERVICES ARCHIT
   Cherkasova L, 2009, ACM T COMPUT SYST, V27, DOI 10.1145/1629087.1629089
   Correia J., 2018, 2018 IEEE 17 INT S N
   Dean DJ, 2016, IEEE T PARALL DISTR, V27, P1742, DOI 10.1109/TPDS.2015.2444392
   Di Pompeo D., 2019, STAF COL EV
   Diaz J., 2019, IEEE ACCESS
   Engel T., 2018, INT C ADV INF SYST E
   Esposito C, 2016, IEEE CLOUD COMPUT, V3, P10, DOI 10.1109/MCC.2016.105
   Fazio M, 2016, IEEE CLOUD COMPUT, V3, P81, DOI 10.1109/MCC.2016.112
   Gorige D., 2020, 2020 IEEE EUR C IOT
   Gow R., 2013, 2013 IEEE 21 INT S M
   Gow R, 2018, IEEE T NETW SERV MAN, V15, P83, DOI 10.1109/TNSM.2017.2771403
   He ZL, 2023, IEEE T NEUR NET LEAR, V34, P1705, DOI 10.1109/TNNLS.2020.3027736
   Ibidunmoye O, 2018, IEEE T NETW SERV MAN, V15, P217, DOI 10.1109/TNSM.2017.2750906
   Jabbarifar M, 2019, J NETW COMPUT APPL, V133, P1, DOI 10.1016/j.jnca.2019.02.006
   Jaeger, 2021, ABOUT US
   Jayathilaka H, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P469, DOI 10.1145/3038912.3052649
   Kang R., 2018, INT C CLOUD COMP SEC
   Kitajima S., 2017, INT C SERV OR COMP
   Larrucea X, 2018, IEEE SOFTWARE, V35, P96, DOI 10.1109/MS.2018.2141030
   Las-Casas P., 2018, P ACM S CLOUD COMP
   Leitner P, 2012, IEEE INT CONF SERV
   López-Peña MA, 2020, IEEE INTERNET THINGS, V7, P10695, DOI 10.1109/JIOT.2020.3012763
   Mace J, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190526
   Mengistu D.M., 2020, THESIS JAMK U APPL S
   Microsoft, 2017, Common objects in context dataset
   Nandi A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P215, DOI 10.1145/2939672.2939712
   Natu M, 2016, IEEE CLOUD COMPUT, V3, P72, DOI 10.1109/MCC.2016.13
   Okanovic D., 2016, EUR WORKSH PERF ENG
   Picoreti R., 2018, 2018 IEEE 16 INT C D
   Pina F, 2018, 2018 IEEE 17TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA)
   Potdar Amit M., 2020, Procedia Computer Science, V171, P1419, DOI 10.1016/j.procs.2020.04.152
   Qu L, 2013, INT CONF HIGH PERFOR, DOI 10.1145/2503210.2503287
   Rodrigues G. Da Cunha, 2016, P 31 ANN ACM S APPL
   Sambasivan RR, 2016, PROCEEDINGS OF THE SEVENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC 2016), P401, DOI 10.1145/2987550.2987568
   Schmid H, 2017, IEEE SOI3DSUB MICRO
   Shao J., 2011, PERFORMANCE GUARANTE
   Soldani J, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3501297
   Sousa M, 2018, IEEE CONF NANOTECH
   Syed HJ, 2017, J NETW COMPUT APPL, V98, P11, DOI 10.1016/j.jnca.2017.08.021
   Wang T, 2020, IEEE T NETW SERV MAN, V17, P2350, DOI 10.1109/TNSM.2020.3022028
   Waseem M, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110798
   Weng JP, 2018, IEEE ACM T NETWORK, V26, P1646, DOI 10.1109/TNET.2018.2843805
   Zareian S., 2016, P 2 INT WORKSH BIG D
   ZHOU X, 2019, JOINT CONF IEEE INT, pNI536
NR 53
TC 0
Z9 0
U1 5
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2023
VL 53
IS 8
BP 1681
EP 1699
DI 10.1002/spe.3208
EA APR 2023
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L1MX2
UT WOS:000964140600001
DA 2024-07-18
ER

PT J
AU Pacheco-Lorenzo, M
   Fernandez-Iglesias, MJ
   Valladares-Rodriguez, S
   Anido-Rifon, LE
AF Pacheco-Lorenzo, Moises
   Fernandez-Iglesias, Manuel J.
   Valladares-Rodriguez, Sonia
   Anido-Rifon, Luis E.
TI Implementing scripted conversations by means of smart assistants
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; conversational agent; human-computer interaction;
   Montreal cognitive assessment test; scripted conversation; smart
   assistant
ID SPEECH
AB Smart assistants are among the most popular technological devices at home. With a built-in voice-based user interface, they provide access to a broad portfolio of online services and information, and constitute the central element of state-of-the-art home automation systems. This work discusses the challenges addressed and the solutions adopted for the design and implementation of scripted conversations by means of off-the-shelf smart assistants. Scripted conversations play a fundamental role in many application fields, such as call center facilities, retail customer services, rapid prototyping, role-based training or the management of neuropsychiatric disorders. To illustrate this proposal, an actual implementation of the phone version of the Montreal cognitive assessment test as an Amazon's Alexa skill is described as a proof-of-concept.
C1 [Pacheco-Lorenzo, Moises; Fernandez-Iglesias, Manuel J.; Anido-Rifon, Luis E.] Univ Vigo, AtlanTTic, Vigo, Spain.
   [Valladares-Rodriguez, Sonia] UNED, Artificial Intelligence Dept, Madrid, Spain.
C3 Universidade de Vigo; atlanTTic; Universidad Nacional de Educacion a
   Distancia (UNED)
RP Fernandez-Iglesias, MJ (corresponding author), Univ Vigo, AtlanTTic, Vigo, Spain.
EM manolo@uvigo.gal
RI Anido-Rifón, Luis/D-4597-2018; Fernandez Iglesias, Manuel
   Jose/I-1695-2013
OI Anido-Rifón, Luis/0000-0003-2780-2727; Fernandez Iglesias, Manuel
   Jose/0000-0003-4462-8724
FU Ministerio de Economia y Competitividad [PID2020-115137RB-I00]; Ministry
   of Science, Innovation and Universities [FPU19/01981]; University of
   Vigo/CISUG
FX Ministerio de Economia y Competitividad, Grant/Award Number:
   PID2020-115137RB-I00; Ministry of Science, Innovation and Universities,
   Grant/Award Number: FPU19/01981;University of Vigo/CISUG, Grant/Award
   Number: open access charges
CR Adamopoulou E, 2020, IFIP Advances in Information and Communication Technology, P373, DOI [10.1007/978-3-030-49186-4_31, DOI 10.1007/978-3-030-49186-4_31]
   Albayrak N., 2018, P 26 SIGNAL PROCESSI, P1130
   [Anonymous], 2012, P 2012 ACM SIGMOD IN, DOI 10.1145/2213836.2213945
   Baldini I., 2017, RES ADV CLOUD COMPUT, P1, DOI DOI 10.1007/978-981-10-5026-8_1
   Bentley Frank, 2018, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V2, DOI 10.1145/3264901
   Daubman BR, 2020, PALLIAT MED REP, V1, P135, DOI 10.1089/pmr.2020.0066
   Fleiss J.L., 2003, The Measurement of Interrater Agreement. Statistical Methods for Rates and Proportions
   Grosberg D, 2017, J APPL BEHAV ANAL, V50, P789, DOI 10.1002/jaba.403
   Jimenez Clara, 2021, IEEE Potentials, V40, P31, DOI 10.1109/MPOT.2020.3002526
   Katz MJ, 2021, ALZH DEMENT-DADM, V13, DOI 10.1002/dad2.12144
   Kexel CA., 2020, FACETTEN DIGITALISIE, P31, DOI DOI 10.1007/978-3-658-29870-8_2
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Loukis E, 2019, DECIS SUPPORT SYST, V117, P38, DOI 10.1016/j.dss.2018.12.005
   Noda K, 2018, DISABIL REHABIL-ASSI, V13, P674, DOI 10.1080/17483107.2017.1369589
   Pacheco-Lorenzo MR, 2021, J BIOMED INFORM, V113, DOI 10.1016/j.jbi.2020.103632
   Pinto TCC, 2019, INT PSYCHOGERIATR, V31, P491, DOI 10.1017/S1041610218001370
   Rehman UU, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10072216
   Schneider BA, 2005, PSYCHOL AGING, V20, P261, DOI 10.1037/0882-7974.20.2.261
   Sheehan B, 2020, J BUS RES, V115, P14, DOI 10.1016/j.jbusres.2020.04.030
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Szymanski M. H., 2020, Women, consumption and paradox, P78
   Walker M. A., 1997, arXiv
   Wyatt D., 2007, INTERSPEECH, P586
   Yoonseo Choi, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3432924
NR 24
TC 4
Z9 4
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2023
VL 53
IS 5
BP 1271
EP 1283
DI 10.1002/spe.3182
EA DEC 2022
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C0ZX8
UT WOS:000900429300001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Risco-Martín, JL
   Mittal, S
   Henares, K
   Cardenas, R
   Arroba, P
AF Risco-Martin, Jose L.
   Mittal, Saurabh
   Henares, Kevin
   Cardenas, Roman
   Arroba, Patricia
TI xDEVS: A toolkit for interoperable modeling and simulation of formal
   discrete event systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE DEVS formalism; discrete events; modeling and simulation tools; parallel
   simulation; simulation performance
AB Employing Modeling and Simulation (M&S) extensively to analyze and develop complex systems is the norm today. The use of robust M&S formalisms and rigorous methodologies is essential to deal with complexity. Among them, the Discrete Event System Specification (DEVS) provides a solid framework for modeling structural, behavior and information aspects of any complex system. This gives several advantages to analyze and design complex systems: completeness, verifiability, extensibility, and maintainability. DEVS formalism has been implemented in many programming languages and executable on multiple platforms. In this paper, we describe the features of an M&S framework called xDEVS that builds upon the prevalent DEVS Application Programming Interface (API) for both modeling and simulation layers, promoting interoperability between the existing platform-specific (C++, Java, Python) DEVS implementations. Additionally, the framework can simulate the same model using sequential, parallel, or distributed architectures. The M&S engine has been reinforced with several strategies to improve performance, as well as tools to perform model analysis and verification. Finally, xDEVS also facilitates systems engineers to apply the vision of model-based systems engineering (MBSE), model-driven engineering (MDE), and model-driven systems engineering (MDSE) paradigms. We highlight the features of the proposed xDEVS framework with multiple examples and case studies illustrating the rigor and diversity of application domains it can support.
C1 [Risco-Martin, Jose L.; Henares, Kevin] Univ Complutense Madrid, Dept Comp Sci & Automat, Madrid, Spain.
   [Risco-Martin, Jose L.; Arroba, Patricia] Univ Politecn Madrid, Ctr Computat Simulat, Madrid, Spain.
   [Mittal, Saurabh] Mitre Corp, Mclean, VA USA.
   [Cardenas, Roman; Arroba, Patricia] Univ Politecn Madrid, Integrated Syst Lab, Madrid, Spain.
   [Cardenas, Roman] Carleton Univ, Adv Real Time Simulat Lab, Ottawa, ON, Canada.
C3 Complutense University of Madrid; Universidad Politecnica de Madrid;
   MITRE Corporation; Universidad Politecnica de Madrid; Carleton
   University
RP Risco-Martín, JL (corresponding author), Univ Complutense Madrid, Dept Comp Sci & Automat, Madrid, Spain.
EM jlrisco@ucm.es
RI Cárdenas, Román/ACN-1155-2022; Martín, José Luis Risco/B-6940-2008
OI Cárdenas, Román/0000-0003-0762-4425; Martín, José Luis
   Risco/0000-0002-3127-6507; Henares Vilaboa, Kevin/0000-0002-2637-5316
CR Bolduc J. -S., 2002, MODELING SIMULATION
   Cárdenas R, 2022, ACM T MODEL COMPUT S, V32, DOI 10.1145/3543849
   Cárdenas R, 2020, WINT SIMUL C PROC, P2184, DOI 10.1109/WSC48552.2020.9383948
   Cárdenas R, 2020, SIMUL MODEL PRACT TH, V101, DOI 10.1016/j.simpat.2019.102037
   Chow A. C., 1994, Proceedings of the Fifth Annual Conference on AI, Simulation, and Planning in High Autonomy Systems. Distributed Interactive Simulation Environments, P157, DOI 10.1109/AIHAS.1994.390488
   C┬u├rdenas R., 2020, P 2020 SUMMER SIMULA
   Franceschini R., 2014, 2014 IMP COLL COMP S
   Glinsky E, 2005, Ninth IEEE International Symposium on Distributed Simulation and Real-Time Applications, Proceedings, P265, DOI 10.1109/DISTRA.2005.18
   Henares K., 2019, P 2019 SUMMER SIMULA, P48
   Henares K., 2018, P 2018 SUMMER SIMULA
   Henares K., 2020, P 2020 SUMMER SIMULA, P1
   Henares K., 2019, COMPLEXITY CHALLENGE, P223
   Henares K, 2019, 2019 SPRING SIMULATION CONFERENCE (SPRINGSIM), DOI 10.23919/springsim.2019.8732847
   Martin A, 2018, SOFTWARE PRACT EXPER, V48, P1195, DOI 10.1002/spe.2570
   Mittal S., 2013, Netcentric system of systems engineering with DEVS unified process
   Mittal S., 2016, P 2016 SUMMER SIMULA
   Mittal S., 2007, "Proceedings of the 2007 Summer Computer Simulation Conference", SCSC '07, P357
   Mittal S., 2017, P S THEOR MOD SIM SO
   Mittal S, 2013, COGN SYST RES, V21, P22, DOI 10.1016/j.cogsys.2012.06.003
   Moreno A, 2009, IEEE ACM DIS SIM, P144, DOI 10.1109/DS-RT.2009.18
   Nutaro, 1999, ARIZONA CTR INTEGRAT
   Olkoz K., 2022, SIMULAT MODELL PRACT, V118
   Pag┬u├n J., 2017, P SUMMER SIMULATION, P24
   Penas I., 2017, P SUMMER SIMULATION, P1
   P┬u┬rez-Vilarelle L., 2018, P S MODELING SIMULAT, P2
   Quesnel G, 2009, SIMUL MODEL PRACT TH, V17, P641, DOI 10.1016/j.simpat.2008.11.003
   Risco-Martín JL, 2017, SIMUL-T SOC MOD SIM, V93, P459, DOI 10.1177/0037549717690447
   Risco-Mart┬u┬in, 2014, XDEVS CROSS PLATFORM
   Risco-Mart┬u┬in JL., 2020, CLOUD BASED M S CYBE, P3
   Sarjoughian H., 1998, P INT C WEB BASED MO, P29
   Seo C., 2013, Proceedings of the Symposium on Theory of Modeling Simulation-DEVS Integrative MS Symposium, P33
   Srba J, 2008, LECT NOTES COMPUT SC, V5215, P15, DOI 10.1007/978-3-540-85778-5_3
   Van Tendeloo Y., 2014, P 2014 S THEOR MOD S, P387
   Wainer G, 2002, SOFTWARE PRACT EXPER, V32, P1261, DOI 10.1002/spe.482
   Xie KY, 2022, INT J MODEL SIMUL SC, V13, DOI 10.1142/S1793962322430012
   Zeigler B. P., 2018, Theory of modeling and simulation: discrete event & iterative system computational foundations
   Zeigler BP, 2018, SYSTEMS, V6, DOI 10.3390/systems6040040
   Zeigler BP., 2018, P 4 ACM INT C COMP E, P1
NR 38
TC 8
Z9 8
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 748
EP 789
DI 10.1002/spe.3168
EA NOV 2022
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000890984300001
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Plesinger, F
   Nejedly, P
   Koscova, Z
   Rohr, M
   Viscor, I
   Smisek, R
   Ivora, A
   Leinveber, P
   Curila, K
   Antink, CH
AF Plesinger, Filip
   Nejedly, Petr
   Koscova, Zuzana
   Rohr, Maurice
   Viscor, Ivo
   Smisek, Radovan
   Ivora, Adam
   Leinveber, Pavel
   Curila, Karol
   Antink, Christoph Hoog
TI DeepPlayer: An open-source SignalPlant plugin for deep learning
   inference
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE artificial intelligence; deep learning; signal processing; SignalPlant;
   software
ID BUNDLE
AB Background and Objective Machine learning has become a powerful tool in several computation domains. The most progressive way of machine learning, deep learning, has already surpassed several algorithms designed by human experts. It also applies to the field of biomedical signal processing. However, while many experts produce deep learning models, there is no software platform for signal processing, allowing the convenient use of pre-trained deep learning models and evaluating them using any inspected signal. This may also hinder understanding, interpretation, and explanation of results. For these reasons, we designed DeepPlayer. It is a plugin for the free signal processing software SignalPlant. The plugin allows loading deep learning models saved in the Open Neural Network Exchange (ONNX) file format and evaluating them on any given signal. Methods The DeepPlayer plugin and its graphical user interface were designed in C# programming language and the .NET framework. We used the inference library OnnxRuntime, which supports graphics card acceleration. The inference is executed in asynchronous tasks for a live preview and evaluation of the signals. Model outputs can be exported back to SignalPlant for further processing, such as peak detection or thresholding. Results We developed the DeepPlayer plugin to evaluate deep learning models in SignalPlant. The plugin keeps with SignalPlant's interactive work with signals, such as live preview or easy selection of associated signals. The plugin can load classification or regression models and allows standard pre-processing and post-processing methods. We prepared several deep learning models to test the plugin. Additionally, we provide a tutorial training script that outputs an ONNX format model with correctly set metadata information. These, and the source code of the DeepPlayer plugin, are publicly accessible via GitHub and Google Colab service. Conclusion The DeepPlayer plugin allows running deep learning models easily and interactively. Therefore, experts and non-AI experts alike can explore and apply deep learning models for (biomedical) signal processing. Its ease of use and interactivity might also contribute to a better understanding and acceptance of AI methods in biomedicine.
C1 [Plesinger, Filip; Nejedly, Petr; Koscova, Zuzana; Viscor, Ivo; Smisek, Radovan; Ivora, Adam] Czech Acad Sci, Inst Sci Instruments, Brno, Czech Republic.
   [Rohr, Maurice; Antink, Christoph Hoog] Tech Univ Darmstadt, KIS MED AI Syst Med, Darmstadt, Germany.
   [Smisek, Radovan] Brno Univ Technol, Fac Elect Engn & Commun, Dept Biomed Engn, Brno, Czech Republic.
   [Leinveber, Pavel] St Annes Univ Hosp, Int Clin Res Ctr, Brno, Czech Republic.
   [Curila, Karol] Charles Univ Prague, Fac Med 3, Cardioctr, Prague, Czech Republic.
   [Curila, Karol] Univ Hosp Kralovske Vinohrady, Prague, Czech Republic.
C3 Czech Academy of Sciences; Institute of Scientific Instruments of the
   Czech Academy of Sciences; Technical University of Darmstadt; Brno
   University of Technology; St Anne's University Hospital Brno
   (FNUSA-ICRC); Charles University Prague; University Hospital Vinohrady
RP Plesinger, F (corresponding author), Czech Acad Sci, Inst Sci Instruments, Brno, Czech Republic.
EM fplesinger@isibrno.cz
RI Rohr, Maurice/JHT-0660-2023; Leinveber, Pavel/I-3347-2016; Viscor,
   Ivo/D-3904-2012; Smíšek, Radovan/F-5329-2017; Nejedly, Petr/H-1903-2017;
   Plesinger, Filip/G-1449-2014; Curila, Karol/R-7741-2016
OI Leinveber, Pavel/0000-0001-7267-4408; Viscor, Ivo/0000-0002-4298-3610;
   Smíšek, Radovan/0000-0003-0413-3604; Plesinger,
   Filip/0000-0003-2875-3541; Curila, Karol/0000-0003-3523-6358; Rohr,
   Maurice/0000-0002-6053-6558; Hoog Antink, Christoph/0000-0001-7948-8181
FU Czech Academy of Sciences [RVO 68081731]; Strategy AV21
FX Czech Academy of Sciences, Grant/Award Numbers: RVO 68081731, Strategy
   AV21
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   [Anonymous], 2022, KISMED EASY PULSE
   Biswas D, 2019, IEEE T BIOMED CIRC S, V13, P282, DOI 10.1109/TBCAS.2019.2892297
   Bocková M, 2020, J NEURAL TRANSM, V127, P1579, DOI 10.1007/s00702-020-02254-3
   Chen ZY, 2022, SOFTWARE PRACT EXPER, V52, P1319, DOI 10.1002/spe.3066
   Clifford GD, 2015, COMPUT CARDIOL CONF, V42, P273, DOI 10.1109/CIC.2015.7408639
   Curila K, 2021, HEART RHYTHM, V18, P1281, DOI 10.1016/j.hrthm.2021.04.025
   Curila K, 2020, HEART RHYTHM, V17, P607, DOI 10.1016/j.hrthm.2019.11.016
   Das Chakladar D, 2018, BIOL INSPIR COGN ARC, V24, P98, DOI 10.1016/j.bica.2018.04.012
   Fil'o P, 2022, THEOR ISS ERGON SCI, V23, P38, DOI 10.1080/1463922X.2021.1913535
   Goldberger AL, 2000, CIRCULATION, V101, pE215, DOI 10.1161/01.CIR.101.23.e215
   Gulli A., 2017, Deep learning with Keras
   Gunning D, 2019, AI MAG, V40, P44, DOI 10.1609/aimag.v40i2.2850
   Iyengar N, 1996, AM J PHYSIOL-REG I, V271, pR1078, DOI 10.1152/ajpregu.1996.271.4.R1078
   Jurak P, 2017, J INTERV CARD ELECTR, V49, P245, DOI 10.1007/s10840-017-0268-0
   LeNail Alexander, 2019, Journal of Open Source Software, V4, P747, DOI [DOI 10.21105/JOSS.00747, 10.21105/joss.00747]
   Marsánová L, 2019, SCI REP-UK, V9, DOI 10.1038/s41598-019-55323-3
   Muders T, 2021, J CLIN MED, V10, DOI 10.3390/jcm10132933
   Nejedly P, 2021, COMPUT CARDIOL CONF, DOI [10.23919/CinC53138.2021.9662723, 10.22489/CinC.2021.014]
   Nejedly P, 2020, SCI DATA, V7, DOI 10.1038/s41597-020-0532-5
   Nejedly P, 2019, J NEURAL ENG, V16, DOI 10.1088/1741-2552/ab172d
   Nejedly P, 2019, NEUROINFORMATICS, V17, P225, DOI 10.1007/s12021-018-9397-6
   Paszke A, 2019, ADV NEUR IN, V32
   Plesinger F, 2016, PHYSIOL MEAS, V37, pN38, DOI 10.1088/0967-3334/37/7/N38
   Plesinger F., 2022, DEEP PLAYER A NEW PL
   Reyna MA, 2021, COMPUT CARDIOL CONF, DOI [10.22489/CinC.2021.134, 10.23919/CinC53138.2021.9662687]
   Shyam A, 2019, IEEE ENG MED BIO, P1899, DOI [10.1109/embc.2019.8856989, 10.1109/EMBC.2019.8856989]
   Sondej T, 2019, BIOCYBERN BIOMED ENG, V39, P488, DOI 10.1016/j.bbe.2019.01.001
   Uguz DU, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20216288
NR 29
TC 0
Z9 0
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 455
EP 464
DI 10.1002/spe.3159
EA NOV 2022
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000877357800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhang, WZ
   Gu, WC
   Gao, CY
   Lyu, MR
AF Zhang, Weizhe
   Gu, Wenchao
   Gao, Cuiyun
   Lyu, Michael R.
TI A transformer-based approach for improving app review response
   generation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE app reviews; review response generation; transformer
AB Mobile apps are becoming an integral part of people's daily life by providing various functionalities, such as messaging and gaming. App developers try their best to ensure user experience during app development and maintenance to improve the rating of their apps on app platforms and attract more user downloads. Previous studies indicated that responding to users' reviews tends to change their attitude towards the apps positively. Users who have been replied are more likely to update the given ratings. However, reading and responding to every user review is not an easy task for developers since it is common for popular apps to receive tons of reviews every day. Thus, automation tools for review replying are needed. To address the need above, the paper introduces a Transformer-based approach, named TRRGen, to automatically generate responses to given user reviews. TRRGen extracts apps' categories, rating, and review text as the input features. By adapting a Transformer-based model, TRRGen can generate appropriate replies for new reviews. Comprehensive experiments and analysis on the real-world datasets indicate that the proposed approach can generate high-quality replies for users' reviews and significantly outperform current state-of-art approaches on the task. The manual validation results on the generated replies further demonstrate the effectiveness of the proposed approach.
C1 [Zhang, Weizhe; Gao, Cuiyun] Harbin Inst Technol, Sch Comp Sci & Technol, Shenzhen, Peoples R China.
   [Gu, Wenchao; Lyu, Michael R.] Chinese Univ Hong Kong, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Gao, Cuiyun] Guangdong Prov Key Lab Novel Secur Intelligence T, Shenzhen, Peoples R China.
   [Gao, Cuiyun] Peng Cheng Lab, Shenzhen, Peoples R China.
C3 Harbin Institute of Technology; Chinese University of Hong Kong; Peng
   Cheng Laboratory
RP Gao, CY (corresponding author), Harbin Inst Technol, Sch Comp Sci & Technol, Shenzhen, Peoples R China.
EM gaocuiyun@hit.edu.cn
OI GU, Wenchao/0000-0003-3503-8845
FU National Natural Science Foundation of China [62002084]; Stable Support
   Plan for Colleges and Universities in Shenzhen
   [GXWD20201230155427003-202007301018 39009]; Major Key Project of PCL
   [PCL2022A03, PCL2021A02, PCL2021A09]; Guangdong Provincial Key
   Laboratory of Novel Security Intelligence Technologies
   [2022B1212010005]; Research Grants Council of the Hong Kong Special
   Administrative Region, China [CUHK 14210920]
FX National Natural Science Foundation of China, Grant/Award Number:
   62002084; Stable Support Plan for Colleges and Universities in Shenzhen,
   Grant/Award Number: GXWD20201230155427003-202007301018 39009; Major Key
   Project of PCL, Grant/Award Numbers: PCL2022A03, PCL2021A02, PCL2021A09;
   Guangdong Provincial Key Laboratory of Novel Security Intelligence
   Technologies, Grant/Award Number: 2022B1212010005; Research Grants
   Council of the Hong Kong Special Administrative Region, China,
   Grant/Award Number: CUHK 14210920
CR [Anonymous], 2016, Learning end-to-end goal-oriented dialog
   Ba J. L., 2016, LAYER NORMALIZATION, DOI DOI 10.48550/ARXIV.1607.06450
   Bharti S. K., 2017, AUTOMATIC KEYWORD EX
   Chen G., 2011, P 24 INT FLAIRS C
   Cho K., 2014, ARXIV14061078
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Gao CY, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3464969
   Gao CY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P163, DOI 10.1109/ASE.2019.00025
   Gao CY, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P279, DOI 10.1109/ICSE-SEIP.2019.00040
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hassan S, 2018, EMPIR SOFTW ENG, V23, P1275, DOI 10.1007/s10664-017-9538-9
   He Kaiming, 2016, EUR C COMP VIS ECCV, DOI [DOI 10.1109/CVPR.2016.90, DOI 10.1007/978-3-319-46493-0_38]
   Huang Zhiheng., 2015, Bidirectional LSTM-CRF models for sequence tagging
   Inaba Michimasa, 2016, P 17 ANN M SPEC INT, P393
   Li J., 2018, SYNTACTICALLY CONSTR
   Li J., 2016, P 2016 C N AM CHAPT, P110, DOI [10.18653/v1/N16-1014, DOI 10.18653/V1/N16-1014]
   Li J., 2016, EMNLP, DOI [DOI 10.18653/V1/D16-1127.URL, 10.18653/v1/D16-1127, DOI 10.18653/V1/D16-1127]
   Liang H, 2017, EURASIP J WIREL COMM, DOI 10.1186/s13638-017-0993-1
   Lowe Ryan, 2015, P 16 ANN M SPECIAL I, V3, P285
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McIlroy S, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2015.149
   Luong MT, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P11
   Oh Jeungmin, 2013, Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems, CHI'13, P1809
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Puduppully R, 2019, AAAI CONF ARTIF INTE, P6908
   Raffel C, 2020, J MACH LEARN RES, V21
   Serban I, 2016, GENERATIVE DEEP NEUR
   Serban I., 2017, P AAAI C ARTIFICIAL
   Tang D., 2016, 26 INT C COMPUTATION, P3298, DOI DOI 10.48550/ARXIV.1512.01100
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Vaswani Ashish, 2017, Advances in Neural Information Processing Systems (NeurIPS), V17, P6000, DOI DOI 10.48550/ARXIV.1706.03762
   Wang D., 2017, STEERING OUTPUT STYL
   Zhou L, 2020, COMPUT LINGUIST, V46, P53, DOI [10.1162/coli_a_00368, 10.1162/COLI_a_00368]
NR 38
TC 1
Z9 1
U1 2
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 438
EP 454
DI 10.1002/spe.3158
EA OCT 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000866379100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sharma, PN
   Savarimuthu, BTR
   Stanger, N
AF Sharma, Pankajeshwara Nand
   Savarimuthu, Bastin Tony Roy
   Stanger, Nigel
TI Unearthing open source decision-making processes: A case study of python
   enhancement proposals
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE consensus; decision-making; decisions; open source software development;
   PEPs; Python
ID DESIGN SCIENCE RESEARCH
AB Good governance practices are pivotal to the success of Open Source Software (OSS) projects. However, the decision-making processes that are made available to stakeholders are at times incomplete and may remain buried and hidden in large amounts of software repository data. This work bridges this gap by unearthing enacted decision-making processes available for Python Enhancement Proposals (PEPs) from 1.54 million email messages that embody decisions made during the evolution of the Python language. This work employs a design science approach in operationalizing a framework called DeMaP miner that is used to discover hidden processes using information retrieval and information extraction techniques. It also uses process mining techniques to visualize the processes, and comparative structural analysis techniques to compare different decision processes. The work identifies a richer set of decision-making activities than those reported on the Python website and in prior research work (48 new decision activities, 199 new pathways and 6 new stages). The extracted decision process has been positively evaluated by a prominent member of the Python steering council. The extracted process can be used for process compliance checking and process improvement in OSS communities. Additionally, the DeMaP Miner framework can be extended and customized to suit other OSS projects, such as the OpenJDK project.
C1 [Sharma, Pankajeshwara Nand; Savarimuthu, Bastin Tony Roy; Stanger, Nigel] Univ Otago, Dept Informat Sci, 60 Clyde St, Dunedin, New Zealand.
C3 University of Otago
RP Sharma, PN (corresponding author), Univ Otago, Dept Informat Sci, 60 Clyde St, Dunedin, New Zealand.
EM pankaj.sharma@postgrad.otago.ac.n7
RI Sharma, Pankajeshwara/KEJ-5298-2024; Nigel, Stanger/A-2192-2008
OI Nigel, Stanger/0000-0003-3450-7443; Sharma,
   Pankajeshwara/0000-0001-9159-8332
FU Russell Education Trust; Otago Business School; University of Otago
FX The first author would like to thank Russell Education Trust for the
   scholarship he received. Also, part of this work was supported by the
   Otago Business School research grant awarded to Dr Nigel Stanger and Dr
   Tony Savarimuthu. The first author also thanks the University of Otago
   for the post graduate publishing scholarship to develop the paper. Open
   access publishing facilitated by University of Otago, as part of the
   Wiley -University of Otago agreement via the Council of Australian
   University Librarians.
CR Aahz M., PYTHON DEV FILE VS O
   [Anonymous], 2008, GOVERNANCE OPEN SOUR
   [Anonymous], 2017, P 21 INT C EV ASS, DOI DOI 10.1145/3084226.3084271
   Antoine P., 428 PEP
   Barry W., 2000, PEP 1--PEP Purpose and Guidelines
   Baskerville R, 2018, J ASSOC INF SYST, V19, P358, DOI 10.17705/1jais.00495
   Bast H, 2013, IEEE INT C SEMANT CO, P154, DOI 10.1109/ICSC.2013.36
   Bitcoin, BITC BIPS
   Brett C., 488 PEP
   Dam HK, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P627, DOI 10.1109/ICSE.2015.209
   Dave B, PEP 308 VOTE TYPE WA
   Debain, DEP DEB ENH PROP
   Del Corro Luciano, 2013, P 22 INT C WORLD WID, P355, DOI DOI 10.1145/2488388.2488420
   Duffy M., FEDORA CASE STUDY DE
   Fader A., 2011, P C EMP METH NAT LAN, P1535, DOI DOI 10.1234/12345678
   Faulkner Sandra L., 2012, DATA SATURATION INT, P1
   Fitzgerald Brian, 2009, International Journal of Open Source Software & Processes, V1, P1, DOI 10.4018/jossp.2009010101
   Fleiss J.L., 2004, Statistical Methods for Rates and Proportions, VThird, P1, DOI [10.1002/0471445428, DOI 10.1002/0471445428]
   Fogel Karl, 2005, Producing Open Source Software: How to Run a Successful Free Software Project, V1st
   Fredrik L, PYTHON DEV PLEASE VO
   Gnther CW., 2012, BPM, V940, P40
   Guido R., 255 PEP
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Hallgren Kevin A, 2012, Tutor Quant Methods Psychol, V8, P23
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P9, DOI 10.1007/978-1-4419-5653-8_2
   Jake E., PANEL NEW PYTHON STE
   Jonathan C., PYTHON PACKAGING PLA
   Josiah C., 318 PEP
   Josiah C, 326 PEP
   Keerativittayanun S., 2016, 2016 IEEE INT C COMP, P1
   Licorish S, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P66, DOI 10.1109/CHASE.2009.5071413
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mark L., CASE STATEMENTS
   Michael C., 308 PEP
   Mieliestronk, MIEL LIST MOR 58000
   Miesbauer Cornelia, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P130, DOI 10.1007/978-3-642-39031-9_12
   Mr??wka R., 2015, BUSINESS SYSTEMS EC, V2, P39
   Norman P, RESULTS COMPLEMENTAR
   Norman P, REVISED ANN RE COMPL
   O'Mahony S, 2007, ACAD MANAGE J, V50, P1079
   OpenJDK, 1 OPENJDK JEP
   OpenJDK, OPENJDK
   Oren E., US Patent Application, Patent No. 140833422014
   Pankajeshwara S., 2017, BOUNDARY SPANNERS OP, P308
   Paul S., RATIONALISING DIVISI
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Popularity of Programming Language Index, PYPL POP PROGR LANG
   Python, PYTH DIST SIG INTR
   python, 428 PEP
   Python, PYTH SPEC INT GROUPS
   Python, 1 PEP
   Raymond H, PYTHON CHECKINS PYTH
   Riaz M, 2010, IEEE INT C SEMANT CO, P361, DOI 10.1109/ICSC.2010.19
   Rodríguez JM, 2016, LECT NOTES ARTIF INT, V9799, P16, DOI 10.1007/978-3-319-42007-3_2
   Ron G., 2005, INNOVATION HAPPENS E
   Runeson Per, 2020, Contemporary Empirical Methods in Software Engineering, P127, DOI [DOI 10.1007/978-3-030-32489-6_5, DOI 10.1007/978-3-030-32489-65]
   Savarimuthu BTR., 2016, EUROPEAN C INFORM SY, P48
   Sharma Pankajeshwara, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P200, DOI 10.1145/3383219.3383240
   Tarek Z., DISTUTILS PROPOSING
   Thapa R., 2020, P 28 EUROPEAN C INFO
   Vinay S, 391 PEP
   Wang J, 2015, INFORM SOFTWARE TECH, V67, P1, DOI 10.1016/j.infsof.2015.06.002
   Warsaw BarryA., PYTHON DEV SUGGESTED
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Xueying Li, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P51, DOI 10.1145/3383219.3383225
   Yeliz EU., 2020, COMMUN ASSOC INF SYS, V46, P20
NR 66
TC 2
Z9 2
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2312
EP 2346
DI 10.1002/spe.3128
EA AUG 2022
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000839592200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zou, XM
   Wang, F
   Feng, D
   Yang, FY
   Lei, MY
   Liu, CJ
AF Zou, Xiaomin
   Wang, Fang
   Feng, Dan
   Yang, Feiyu
   Lei, Mengya
   Liu, Chaojie
TI SPHT: A scalable and high-performance hashing scheme for persistent
   memory
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE concurrent index structure; dynamic hashing structure; high scalability;
   persistent memory
AB The evolution of persistent memory (PM) has significantly affected the design of today's indexing structures. Hashing-based structures are widely used in storage systems to achieve fast query responses. Recently, several concurrent and failure-atomic hashing schemes for PM have been proposed to improve the scalability. However, these works still suffer from limited scalability, especially under write-intensive workloads or at a high number of threads. Our empirical study concludes three issues harm the scalability of PM hashing schemes: the NUMA effects, the resizing operations, and the inter-thread interference overhead in PM. Based on the above scalability issues, we present SPHT, a scalable and persistent hashing scheme for hybrid DRAM-PM memory. To eliminate the NUMA effects, SPHT maintains a hash subtable for every NUMA node and stores the key-value items in the designated nodes. By doing so, all operations can be executed in the local memory without cross-node communication. The hash subtable consists of two components: the search layer in DRAM for fast accesses and the data layer in PM for efficient persistence. The data layer is organized in a log-structured way and its log chunks own separate PM space, thus avoiding the resizing operations in PM. Meanwhile, the compacted log structure also supports batching multiple small items, which effectively reduces the persistence overhead. Furthermore, to maximize concurrency, we assign threads to different partitions in the data layer to reduce the inter-thread interference overhead. On Intel Optane DCPMM, our evaluations show that SPHT scales well and achieves up to 2.7x higher performance than state-of-the-art PM hashing schemes under YCSB workloads.
C1 [Zou, Xiaomin; Wang, Fang; Feng, Dan; Yang, Feiyu; Lei, Mengya; Liu, Chaojie] Huazhong Univ Sci & Technol, Wuhan Natl Lab Optoelect, Engn Res Ctr Data Storage Syst & Technol, Sch Comp Sci & Technol, Wuhan 430074, Hubei, Peoples R China.
C3 Huazhong University of Science & Technology
RP Wang, F (corresponding author), Huazhong Univ Sci & Technol, Wuhan Natl Lab Optoelect, Engn Res Ctr Data Storage Syst & Technol, Sch Comp Sci & Technol, Wuhan 430074, Hubei, Peoples R China.; Wang, F (corresponding author), Shenzhen Huazhong Univ Sci & Technol Res Inst, Shenzhen 518063, Peoples R China.
EM wangfang@hust.edu.cn
RI wang, fang/GYD-4295-2022; yang, fei/HPF-9658-2023; Wang,
   Fang/HPC-5174-2023; Yang, Fei/JLM-3367-2023
OI Zou, Xiaomin/0000-0001-5867-847X
FU National Key R&D Program of China [2018YFB1003305]; National Natural
   Science Foundation of China [61832020]; Natural Science Foundation of
   Shandong Province [ZR2019LZH012]; Project of Shenzhen Technology Scheme
   [JCYJ20210324141601005]
FX National Key R&D Program of China, Grant/Award Number:
   NO.2018YFB1003305; National Natural Science Foundation of China,
   Grant/Award Number: No.61832020; Natural Science Foundation of Shandong
   Province, Grant/Award Number: No. ZR2019LZH012; Project of Shenzhen
   Technology Scheme, Grant/Award Number: JCYJ20210324141601005
CR Benson L, 2021, PROC VLDB ENDOW, V14, P1544, DOI 10.14778/3461535.3461543
   Brown T., 2016, P 28 ACM S PAR ALG A
   Calciu I, 2017, TWENTY-SECOND INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXII), P206, DOI 10.1145/3037697.3037721
   Chen RH, 2016, SOFTWARE PRACT EXPER, V46, P1263, DOI 10.1002/spe.2378
   Chen YM, 2020, TWENTY-FIFTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXV), P1077, DOI 10.1145/3373376.3378515
   Chen ZY, 2020, PROCEEDINGS OF THE 2020 USENIX ANNUAL TECHNICAL CONFERENCE, P799
   Cooper Brian F., 2010, P 1 ACM S CLOUD COMP, P143, DOI [DOI 10.1145/1807128.1807152, 10.1145/1807128.1807152]
   Daly H., 2018, P 32 INT S DISTR COM
   David T, 2015, ACM SIGPLAN NOTICES, V50, P631, DOI [10.1145/2775054.2694359, 10.1145/2694344.2694359]
   Debnath Biplob, 2015, P 3 WORKSH INT NVM F
   Dulloor Subramanya R., 2014, P EUR C COMP SYST EU, P1, DOI [10.1145/2592798.2592814, DOI 10.1145/2592798.2592814]
   Fagin R., 1979, ACM Transactions on Database Systems, V4, P315, DOI 10.1145/320083.320092
   GARCIAMOLINA H, 1992, IEEE T KNOWL DATA EN, V4, P509, DOI 10.1109/69.180602
   Google, 2019, LEVELDB
   Huang TC, 2016, SOFTWARE PRACT EXPER, V46, P291, DOI 10.1002/spe.2299
   Intel, 2019, PERS MEM DEV KIT
   Intel, 2015, Intel and Micron Produce Breakthrough Memory Technology
   Intel, 2019, Intel Optane DC persistent memory
   Intel Corporation, 2016, Intel 64 and IA-32 Architectures Software Developer Manuals
   Johnson R, 2012, VLDB J, V21, P239, DOI 10.1007/s00778-011-0260-8
   Kawahara T, 2011, IEEE DES TEST COMPUT, V28, P52, DOI 10.1109/MDT.2010.97
   Ko?berber YO., 2013, P 46 ANN IEEE ACM IN
   Kung H. T., 1980, ACM Transactions on Database Systems, V5, P354, DOI 10.1145/320613.320619
   Lameter Christoph, 2013, Queue, V11, P40, DOI [10.1145/2508834.2513149, DOI 10.1145/2508834.2513149]
   Lee SK, 2019, PROCEEDINGS OF THE TWENTY-SEVENTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '19), P462, DOI 10.1145/3341301.3359635
   Li S, 2015, 2015 ACM/IEEE 42ND ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA), P476, DOI 10.1145/2749469.2750416
   Lim H, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P21, DOI 10.1145/3035918.3064015
   Lim Hyeontaek, 2014, 11 USENIX S NETW SYS, P429
   Lu BT, 2020, PROC VLDB ENDOW, V13, P1147, DOI 10.14778/3389133.3389134
   Majo Z., 2011, P 10 INT S MEM MAN I
   Nam M, 2019, PROCEEDINGS OF THE 17TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P31
   Pagh R, 2004, J ALGORITHMS, V51, P122, DOI 10.1016/j.jalgor.2003.12.002
   Perez TD, 2020, SOFTWARE PRACT EXPER, V50, P368, DOI 10.1002/spe.2781
   Psaroudakis I, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190514
   Raoux S, 2008, IBM J RES DEV, V52, P465, DOI 10.1147/rd.524.0465
   Shavit N, 2011, COMMUN ACM, V54, P76, DOI 10.1145/1897852.1897873
   Volos Haris, 2011, SIGPLAN Notices, V46, P91, DOI 10.1145/1961296.1950379
   Weil SA, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P307
   Xia F, 2017, 2017 USENIX ANNUAL TECHNICAL CONFERENCE (USENIX ATC '17), P349
   Yang J, 2020, PROCEEDINGS OF THE 18TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P169
   Zhang W., 2021, P 16 EUR C COMP SYST
   Zhang XF, 2018, AEBMR ADV ECON, V56, P87
   Zou Xiaomin, 2020, P 36 INT C MASS STOR
   Zuo PF, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P461
   Zuo PF, 2018, IEEE T PARALL DISTR, V29, P985, DOI 10.1109/TPDS.2017.2782251
NR 45
TC 2
Z9 2
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2022
VL 52
IS 7
BP 1679
EP 1697
DI 10.1002/spe.3083
EA MAR 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1X8ZE
UT WOS:000771159800001
DA 2024-07-18
ER

PT J
AU Lu, SB
   Wu, J
   Wang, N
   Duan, YB
   Liu, HM
   Zhang, JY
   Fang, J
AF Lu, Shuaibing
   Wu, Jie
   Wang, Ning
   Duan, Yubin
   Liu, Haiming
   Zhang, Jiayue
   Fang, Juan
TI Resource provisioning in collaborative fog computing for multiple
   delay-sensitive users
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE collaborative fog computing; cost-efficiency; delay-sensitive users;
   resource provisioning
ID ALLOCATION
AB Fog computing is an emerging paradigm that supplies storage, computation, and networking resources between traditional cloud data centers and end devices. This article focuses on the resource provisioning problem in collaborative fog computing for multiple delay-sensitive users. Our goal is to implement a resource provisioning strategy for network operators to minimize the total monetary cost by considering the deadline and capacity constraints. Two scenarios are considered: unlimited-processor fog nodes (UPFN) and limited-processor fog nodes (LPFN). In either scenario, we prove that the resource provisioning problem is NP-hard. First, we consider the UPFN scenario that the processors of fog nodes are unlimited and users' requests can be ideally processed in parallel. Two algorithms are proposed which greedily delete fog nodes based on the local or global collaborative influences until there is no feasible provisioning to guarantee the deadline of users. Then we extend the resource provisioning problem to a more realistic and complicated scenario LPFN in which the scheduling delay cannot be ignored. Two types of tasks are considered. One is the arbitrarily divided tasks, and a near-optimal solution bounded by 83OPT+epsilon 28m alpha has been found. m is the number of fog nodes, and alpha is the upper bound on the Lipschitz constant of the delay function. Another one is the application-driven tasks, and we propose a heuristic algorithm. Extensive experiments validate the efficiency of the proposed algorithms.
C1 [Lu, Shuaibing; Zhang, Jiayue; Fang, Juan] Beijing Univ Technol, Fac Informat Technol, 100 Pingleyuan, Beijing 100124, Peoples R China.
   [Wu, Jie; Duan, Yubin] Temple Univ, Ctr Networked Comp, Philadelphia, PA 19122 USA.
   [Wang, Ning] Rowan Univ, Dept Comp Sci, Glassboro, NJ USA.
   [Liu, Haiming] Beijing Jiaotong Univ, Sch Software Engn, Beijing, Peoples R China.
C3 Beijing University of Technology; Pennsylvania Commonwealth System of
   Higher Education (PCSHE); Temple University; Rowan University; Beijing
   Jiaotong University
RP Fang, J (corresponding author), Beijing Univ Technol, Fac Informat Technol, 100 Pingleyuan, Beijing 100124, Peoples R China.
EM fangjuan@bjut.edu.cn
RI Duan, Yubin/GYJ-6080-2022; Wang, Ning/JEO-4770-2023
FU National Natural Science Foundation of China [61202076]; Beijing Natural
   Science Foundation [4192007]; Beijing Municipal Postdoc Science
   Foundation [Q6007011202001]; Chaoyang District Postdoc Science
   Foundation; NSF [CNS 1757533, CNS 1629746, CNS 1564128, CNS 1449860, CNS
   1461932, CNS 1460971, IIP 1439672]
FX This research was supported in part by National Natural Science
   Foundation of China 61202076, Beijing Natural Science Foundation
   4192007, Beijing Municipal Postdoc Science Foundation Q6007011202001,
   Chaoyang District Postdoc Science Foundation, and NSF grants CNS
   1757533, CNS 1629746, CNS 1564128, CNS 1449860, CNS 1461932, CNS
   1460971, and IIP 1439672.
CR Agarwal Swati, 2016, International Journal of Information Engineering and Electronic Business, V8, P48, DOI 10.5815/ijieeb.2016.01.06
   [Anonymous], 2018, MTA INFORM AVERAGE W
   [Anonymous], 2018, NY CITY OPEN DATA EN
   [Anonymous], 2016, IEEE 24 INT C NETWOR, DOI DOI 10.1109/ICNP.2016.7785317
   Badidi E., 2020, J. Ubiquitous Syst. Pervasive Netw., V13, P11, DOI [10.5383/JUSPN.13.01.002, DOI 10.5383/JUSPN.13.01.002]
   Bierzynski K, 2017, 2017 SECOND INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P62, DOI 10.1109/FMEC.2017.7946409
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Brogi A, 2017, IEEE INTERNET THINGS, V4, P1185, DOI 10.1109/JIOT.2017.2701408
   Chang W, 2015, IEEE T PARALL DISTR, V26, P2020, DOI 10.1109/TPDS.2014.2330298
   Cisco, INTERNET THINGS EXTE
   Cormen T.H., 2009, INTRO ALGORITHMS
   Fabrikant A., 2004, STOC 04, P604
   Gu B, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18082423
   Huang XG, 2020, IEEE INTERNET THINGS, V7, P8502, DOI 10.1109/JIOT.2020.2991481
   Jazayeri F, 2021, J AMB INTEL HUM COMP, V12, P8265, DOI 10.1007/s12652-020-02561-3
   Li LZ, 2018, IEEE T IND INFORM, V14, P4665, DOI 10.1109/TII.2018.2842821
   Lu SB, 2018, INT C PAR DISTRIB SY, P706, DOI [10.1109/ICPADS.2018.00097, 10.1109/PADSW.2018.8644626]
   Ma XB, 2020, IEEE T DEPEND SECURE, V17, P795, DOI 10.1109/TDSC.2019.2892370
   Naha RK, 2020, FUTURE GENER COMP SY, V104, P131, DOI 10.1016/j.future.2019.10.018
   NINGNING S, 2016, CHINA COMMUN, V13, P156, DOI DOI 10.1109/CC.2016.7445510
   Nisan N, 2007, ALGORITHMIC GAME THEORY, P1, DOI 10.1017/CBO9780511800481
   Rosenthal R. W., 1973, International Journal of Game Theory, V2, P65, DOI 10.1007/BF01737559
   Roughgarden T, 2002, J ACM, V49, P236, DOI 10.1145/506147.506153
   Santos J, 2019, PROCEEDINGS OF THE 2019 IEEE CONFERENCE ON NETWORK SOFTWARIZATION (NETSOFT 2019), P351, DOI [10.1109/NETSOFT.2019.8806671, 10.1109/netsoft.2019.8806671]
   Sheng ZG, 2018, IEEE T CLOUD COMPUT, V6, P114, DOI 10.1109/TCC.2015.2458272
   Torrance G W, 1989, Int J Technol Assess Health Care, V5, P559
   Wang D., 2018, P IEEE INFCOM 2018 I, P114
   Wang L, 2018, IEEE INFOCOM SER, P468, DOI 10.1109/INFOCOM.2018.8486411
   Wu J, 2015, OPPORTUNISTIC MOBILE SOCIAL NETWORKS, P1
   XIAO Y, 2017, INT C PAR DISTRIB SY
   Pham XQ, 2016, ASIA-PAC NETW OPER M
   Yi S., 2015, P 2015 WORKSH MOB BI, P37, DOI [DOI 10.1145/2757384.2757397, 10.1145/2757384.2757397]
   Yin LX, 2018, IEEE T IND INFORM, V14, P4712, DOI 10.1109/TII.2018.2851241
   Yu RZ, 2018, IEEE INFOCOM SER, P783, DOI 10.1109/INFOCOM.2018.8486269
   Zhang HQ, 2017, IEEE INTERNET THINGS, V4, P1204, DOI 10.1109/JIOT.2017.2688925
NR 35
TC 3
Z9 3
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 243
EP 262
DI 10.1002/spe.3000
EA JUN 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000656436900001
DA 2024-07-18
ER

PT J
AU Roy, DG
   Srirama, SN
AF Guha Roy, Deepsubhra
   Srirama, Satish Narayana
TI A Blockchain-based Cyber Attack Detection Scheme for Decentralized
   Internet of Things using Software-Defined Network
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Blockchain; Early cyber&#8208; attack detection; Edge computing; Fog
   computing; Internet of Things; Software&#8208; Defined Network
ID IOT; FOG
AB Due to using less secured and movable devices in Internet of Things (IoT) platform, cyber-attacks have been a major issue nowadays. Different researches have been conducted to detect the probable security attacks, but faced constraints like storage, computation cost, system failure and high latency. Existing systems require continuous monitoring, controlling, and collecting the data in entire network for delivering services with the maximum security and defense mechanism against cyber-attacks. In this context, a decentralized mechanism of security has been presented in this article using a software-defined network (SDN) integrated with blockchain for IoT in mobile edge and fog computing. The SDN continuously monitors and analyzes the system traffic for providing an attack identification model. The blockchain has been used to overcome the failure issues addressed in the existing models by delivering decentralized attack identification scheme which detects attacks in fog and reduces it in the edge node.
C1 [Guha Roy, Deepsubhra] Univ Tartu, Inst Comp Sci, Mobile & Cloud Lab, Ulikooli 17-324, EE-50090 Tartu, Estonia.
   [Srirama, Satish Narayana] Univ Hyderabad, Sch Comp & Informat Sci, Hyderabad, India.
C3 University of Tartu; University of Hyderabad
RP Roy, DG (corresponding author), Univ Tartu, Inst Comp Sci, Mobile & Cloud Lab, Ulikooli 17-324, EE-50090 Tartu, Estonia.
EM roysubhraguha@gmail.com
RI Srirama, Satish Narayana/H-2729-2015; Guha Roy, Dr.
   Deepsubhra/J-6561-2016
OI Srirama, Satish Narayana/0000-0002-7600-7124; Guha Roy, Dr.
   Deepsubhra/0000-0001-7194-6950
CR Ali MS, 2019, IEEE COMMUN SURV TUT, V21, P1676, DOI 10.1109/COMST.2018.2886932
   Bera S, 2019, IEEE J SEL AREA COMM, V37, P530, DOI 10.1109/JSAC.2019.2894239
   Bera S, 2018, IEEE SYST J, V12, P2074, DOI 10.1109/JSYST.2016.2615761
   Buterin V., 2013, GitHub repository, P22
   Chang C, 2017, COMPUTER, V50, P92, DOI 10.1109/MC.2017.3571049
   Dharminder D, 2022, SOFTWARE PRACT EXPER, V52, P744, DOI 10.1002/spe.2826
   Diro AA, 2018, FUTURE GENER COMP SY, V82, P761, DOI 10.1016/j.future.2017.08.043
   Dorri Ali, 2017, 2017 IEEE/ACM Second International Conference on Internet-of-Things Design and Implementation (IoTDI), P173, DOI 10.1145/3054977.3055003
   Dorri A., 2016, CORRABS160805187
   Fan SP, 2019, LECT NOTES COMPUT SC, V11911, P1, DOI 10.1007/978-3-030-34083-4_1
   Feichtenhofer C, 2016, PROC CVPR IEEE, P1933, DOI 10.1109/CVPR.2016.213
   Hang L, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19102228
   HIROSE Y, 1991, NEURAL NETWORKS, V4, P61, DOI 10.1016/0893-6080(91)90032-Z
   Khrais LT, 2020, INT J ADV COMPUT SC, V11, P153
   Kolluri A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P363, DOI 10.1145/3293882.3330560
   Li WJ, 2020, IEICE T INF SYST, VE103D, P196, DOI 10.1587/transinf.2019INI0002
   Malik SUR., 2020, SOFTW PRACT EXPER
   Misra S, 2017, IEEE SYST J, V11, P1084, DOI 10.1109/JSYST.2014.2362617
   Misra S, 2019, IEEE J SEL AREA COMM, V37, P1159, DOI 10.1109/JSAC.2019.2906793
   Mohanty D., 2018, Ethereum for Architects and Developers, P151
   Neverova N, 2016, IEEE T PATTERN ANAL, V38, P1692, DOI 10.1109/TPAMI.2015.2461544
   Pitroda V., 2020, INTRO BLOCKCHAIN CRY
   Prusty N., 2017, BUILDING BLOCKCHAIN, P266
   Rathore S, 2018, APPL SOFT COMPUT, V72, P79, DOI 10.1016/j.asoc.2018.05.049
   Rathore S, 2017, J INF PROCESS SYST, V13, P1014, DOI 10.3745/JIPS.03.0079
   Restuccia F., 2018, IEEE Internet of Things Journal, V1, P1
   Roy DG, 2019, J NETW COMPUT APPL, V144, P59, DOI 10.1016/j.jnca.2019.06.014
   Roy DG, 2017, J SUPERCOMPUT, V73, P1672, DOI 10.1007/s11227-016-1872-y
   Ruder S., 2016, ARXIV16090474
   de Oliveira RLS, 2014, 2014 IEEE COLOMBIAN CONFERENCE ON COMMUNICATIONS AND COMPUTING (COLCOM)
   Shafi Q, 2019, INT BHURBAN C APPL S, P624, DOI 10.1109/IBCAST.2019.8667147
   Shahidinejad A., 2020, SOFTW PRACT EXPER
   Shakarami A, 2020, SOFTWARE PRACT EXPER, V50, P1719, DOI 10.1002/spe.2839
   Sharma PK, 2017, IEEE COMMUN MAG, V55, P78, DOI 10.1109/MCOM.2017.1700041
   Stiller B, 2017, SECURITY NETWORKS SE, P16
   Sultan A, 2019, 2019 INTERNATIONAL CONFERENCE ON BLOCKCHAIN TECHNOLOGY (ICBCT 2019), P60, DOI 10.1145/3320154.3320163
   Tavallaee M., 2009, 2 IEEE S COMP UNPUB, P1
   Vielzeuf V., 2017, TEMPORAL MULTIMODAL
   Zhang J, 2021, SOFTWARE PRACT EXPER, V51, P2540, DOI 10.1002/spe.2847
NR 39
TC 20
Z9 21
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2021
VL 51
IS 7
BP 1540
EP 1556
DI 10.1002/spe.2972
EA MAY 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO3PJ
UT WOS:000648102200001
DA 2024-07-18
ER

PT J
AU Chen, FW
   Zhang, L
   Lian, XL
AF Chen, Fangwei
   Zhang, Li
   Lian, Xiaoli
TI A systematic gray literature review: The technologies and concerns of
   microservice application programming interfaces
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE microservice; the microservice APIs; systematic gray literature review
AB The microservice application programming interface (API) becomes a growing concern in the IT industry, as a result of the increasing usage of microservice architecture style. There exist many successful practices among companies, communities, and so on. In contrast, the related academic research is still at an early stage, where lacks an overview of technologies for the design, implementation and operation of microservice APIs, as well as a general picture of concerns. In this article, we try to fill this gap by eliciting the technologies and concerns on microservice APIs and establishing a microservice API description model, with the intention of aiding researchers to gain an overview of this field and find possible research directions, and helping practitioners to better understand microservice APIs and be aware of the existing approaches for daily work. Twelve academic papers and 38 gray literatures are selected and analyzed following the systematic literature review approach. Besides, we give our observations from this study. For researchers, our findings show the most cared concerns of practitioners, and our description model can be used as a reference for new theories, experiments, and future research dimensions. For practitioners, our study can be used as a guideline for microservices experimentation and a starting point for practice.
C1 [Chen, Fangwei; Zhang, Li; Lian, Xiaoli] Beihang Univ, Sch Comp Sci & Engn, Beijing 100191, Peoples R China.
C3 Beihang University
RP Lian, XL (corresponding author), Beihang Univ, Sch Comp Sci & Engn, Beijing 100191, Peoples R China.
EM lianxiaoli@buaa.edu.cn
RI 陈, 方伟/JXM-6814-2024
FU Innovation Fund of Beijing Huaxing Tai Chi Information Technology Co.,
   Ltd. [19010201]; National Natural Science Foundation of China [61732019]
FX Innovation Fund of Beijing Huaxing Tai Chi Information Technology Co.,
   Ltd., Grant/Award Number: 19010201; National Natural Science Foundation
   of China, Grant/Award Number: 61732019
CR Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   [Anonymous], 2016, P 20 INT C EV ASS SO
   [Anonymous], 2008, 12 INT C EV ASS SOFT
   Arcuri A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P9, DOI 10.1109/QRS.2017.11
   Bakshi K, 2017, AEROSP CONF PROC
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Campinhos Joao, 2017, 2017 IEEE/ACM 2nd International Workshop on Variability and Complexity in Software Design (VACE). Proceedings, P20, DOI 10.1109/VACE.2017.6
   Chen Yinong., 2018, SERVICE ORIENTED COM, V6th
   Chramouli R., 2019, SPECIAL PUBLICATION
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Farace D., 2010, GREY LIT LIB INFORM
   Fielding R., 2000, ARCHITECTURAL STYLES, P76
   Fowler Martin, 2014, Microservices a definition of this new architectural term, P22
   Gabbrielli M, 2018, LANGUAGE BASED APPRO
   Gadea C, 2016, 3RD WORKSHOP ON CROSSCLOUD INFRASTRUCTURES & PLATFORMS (CROSSCLOUD 2016), DOI 10.1145/2904111.2904115
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Haselb?ck S., 2018, P 2018 IEEE 11 C SER
   Ivanchikj A, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P129, DOI 10.1007/978-3-030-31646-4_6
   Jones M., 2015, JSON WEB TOKEN JWT
   Jones M., 2015, RFC 7519, DOI [10.17487/RFC7519, DOI 10.17487/RFC7519]
   Khan, 2021, SUSTAIN DEV, P1
   Li Ying, 2017, Computer Integrated Manufacturing Systems, V23, P1020, DOI 10.13196/j.cims.2017.05.013
   Merson P., 2014, P 2014 IEEE IFIP C S
   Montesi F., 2016, ARXIV PREPRINT ARXIV
   Montesi F, 2016, SCI COMPUT PROGRAM, V130, P69, DOI 10.1016/j.scico.2016.05.002
   Montesi Fabrizio, 2014, Web Services Foundations, P81, DOI [DOI 10.1007/978-1-4614-7518-7_4, 10.1007/978-1-4614-7518-7_4, 10.1007/978-1-4614-7518-7\_4]
   Morris B., 2016, REST APIS DONT NEED
   OpenAPI Initiative, 2017, OPENAPI SPEC
   Pahl C, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P137, DOI 10.5220/0005785501370146
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pautasso C, 2017, IEEE SOFTWARE, V34, P91, DOI 10.1109/MS.2017.24
   Polak M., 2015, P 3 INT WORKSH DOC C, DOI [10.1145/2881631.2881635, DOI 10.1145/2881631.2881635]
   Rademacher F, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P147, DOI 10.1007/978-3-030-31646-4_7
   Salibindla J., 2018, INT J ENG RES TECHNO, V7, P277, DOI DOI 10.17577/IJERTV7IS010137
   Schaer P, 2008, P INT C GREY LIT ANT
   Segura S, 2018, IEEE T SOFTWARE ENG, V44, P1083, DOI 10.1109/TSE.2017.2764464
   Singh MunindarP., 2005, SERVICE ORIENTED COM
   Sohan SM, 2015, IEEE WORLD CONGR SER, P245, DOI 10.1109/SERVICES.2015.43
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Taibi Davide., 2018, Architectural patterns for microservices: A systematic mapping study, DOI DOI 10.5220/0006798302210232
   Thönes J, 2015, IEEE SOFTWARE, V32, P116, DOI 10.1109/MS.2015.11
   Vural H., 2017, P INT C COMP SCI ITS
   Wei Y, 2010, IEEE INTERNET COMPUT, V14, P72, DOI 10.1109/MIC.2010.147
   Wohlin C., 2012, Experimentation in Software Engineering
   Wolff Eberhard, 2016, Microservices: Flexible Software Architecture
   Zhou X., 2018, IEEE T SOFTWARE ENG, P1
   Zimmermann O., 2017, P 22  EUR C PATT LAN
   Zimmermann O., 2019, Introduction to microservice api patterns (map)
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 52
TC 5
Z9 6
U1 4
U2 47
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2021
VL 51
IS 7
BP 1483
EP 1508
DI 10.1002/spe.2967
EA MAR 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO3PJ
UT WOS:000629203300001
DA 2024-07-18
ER

PT J
AU Bishop, J
   Cooper, KML
AF Bishop, Judith
   Cooper, Kendra M. L.
TI Introduction to the Special Issue on Software Engineering in Practice
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
C1 [Bishop, Judith] Univ Stellenbosch, Dept Comp Sci, Stellenbosch, South Africa.
C3 Stellenbosch University
RP Cooper, KML (corresponding author), 255 Aurora Crescent, Kelowna, BC V1X 7L8, Canada.
EM kendra.m.cooper@gmail.com
CR Bishop J, 2020, SOFTWARE PRACT EXPER, V50, P187, DOI 10.1002/spe.2780
   Bosch J, 2019, SOFTWARE PRACT EXPER, V49, P151, DOI 10.1002/spe.2662
NR 2
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2021
VL 51
IS 4
SI SI
BP 689
EP 690
DI 10.1002/spe.2932
EA NOV 2020
PG 2
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR8DY
UT WOS:000592119900001
DA 2024-07-18
ER

PT J
AU Kang, J
   Ryu, D
   Baik, J
AF Kang, Jonggu
   Ryu, Duksan
   Baik, Jongmoon
TI Predicting just-in-time software defects to reduce post-release quality
   costs in the maritime industry
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE industrial application; just&#8208; in&#8208; time prediction;
   maintenance; maritime transportation; software defect prediction;
   software quality assurance
AB Background The importance of software in maritime transportation is rapidly increasing as the industry seeks to develop and utilize innovative future ships, which can be realized using software technology. Due to the safety-critical nature of ships, software quality assurance (SQA) has become an essential prerequisite for such development.
   Objective Based on the unique characteristics of the maritime domain, the purpose of this study was to achieve effective SQA resource allocation to reduce post-release quality costs.
   Method Software defect prediction (SDP) is employed to predict defects in newly developed software based on models trained with past software defects and to update information using machine learning. This study demonstrated that just-in-time SDP is applicable to maritime domain practice and can reduce post-release quality costs via combination with an estimation model, qCOPLIMO.
   Results Using real-world datasets collected from the maritime industry, performance and cost-benefit analyses of SDP were performed. A successful model was obtained that meets the performance criterion of 0.75 in within-project defect prediction (WPDP) but not cross-project defect prediction (CPDP). In addition, the cost-benefit analysis results showed that 20% effort enables the detection of 56% of defects on average and that the post-release quality cost can be reduced by 37.3% in the maritime domain.
   Conclusion SDP can be successfully applied to the maritime domain. Further, it is desirable to utilize WPDP instead of CPDP once minimum high-quality commits are available that can be identified as defective or not. Finally, SDP can help reduce review effort and post-release quality costs.
C1 [Kang, Jonggu; Baik, Jongmoon] Korea Adv Inst Sci & Technol, Sch Comp, Daejeon, South Korea.
   [Ryu, Duksan] Jeonbuk Natl Univ, Dept Software Engn, 567 Baekje Daero, Jeonju Si 54896, Jeollabuk Do, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Jeonbuk
   National University; Jeonbuk National University Hospital
RP Ryu, D (corresponding author), Jeonbuk Natl Univ, Dept Software Engn, 567 Baekje Daero, Jeonju Si 54896, Jeollabuk Do, South Korea.
EM duksan.ryu@jbnu.ac.kr
RI Ryu, Duksan/AAY-6819-2020; Baik, Jongmoon/C-1780-2011
OI Ryu, Duksan/0000-0002-9556-0873; 
FU Jeonbuk National University; National Research Foundation of Korea
   [NRF-2017M3C4A7066212, NRF-2019R1G1A1005047]
FX Jeonbuk National University, Grant/Award Number: research funds for
   newly appointed professors; National Research Foundation of Korea,
   Grant/Award Numbers: NRF-2017M3C4A7066212, NRF-2019R1G1A1005047
CR Altinger H, 2015, IFIP INT C TEST SOFT
   Altinger H., 2019, Automotive Systems and Software Engineering, P59, DOI [10.1007/978-3-030-12157-0_4, DOI 10.1007/978-3-030-12157-0_4]
   Altinger H, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P526, DOI 10.1109/SANER.2017.7884667
   Altinger H, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P494, DOI 10.1109/MSR.2015.72
   [Anonymous], 1995, NASA SYST ENG HDB
   [Anonymous], 2019, DNVGLRUSHIPPT4CH9
   [Anonymous], 2020, Review of Maritime Transport 2020
   [Anonymous], 2017, DNVGLOSD203
   Bertram V, 2017, 16 INT C COMP IT APP
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P156
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Borg M, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P7, DOI 10.1145/3340482.3342742
   Borg M, 2017, IEEE T SOFTWARE ENG, V43, P675, DOI 10.1109/TSE.2016.2620458
   Brinkmann M., 2017, 16 INT C COMP IT APP
   Brinkmann M, 2017, OCEANS-IEEE
   Broy M., 2006, 28th International Conference on Software Engineering Proceedings, P33, DOI 10.1145/1134285.1134292
   Capilla R., 2013, Concepts Tools and Experiences
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Dam HK, 2019, 16 IEEE ACM INT C MI
   Dodd I, 2012, RELIAB ENG SYST SAFE, V98, P7, DOI 10.1016/j.ress.2011.09.007
   FALESSI D, 2020, EMPIR SOFTW ENG 0831
   Farooq S.U., 2011, INT J ENG SCI TECHNO, V3, P671
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hoang T, 2019, 16 IEEE ACM INT C MI
   Honour E., 1998, J INT COUNCIL SYST E, V1, P4, DOI DOI 10.1002/(SICI)1520-6858(1998)1:13.0.CO;2-M
   Höyhtyä M, 2017, I C INF COMM TECH CO, P345, DOI 10.1109/ICTC.2017.8191000
   In HP, 2006, COMMUN ACM, V49, P85, DOI 10.1145/1183236.1183273
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kang J, 2010, ICCAS 2010 GYEONGG D
   Kim M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P990, DOI 10.1145/2786805.2804429
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Koroglu Y, 2016, IEEE-ACM INT WKSP CO, P14, DOI [10.1145/2896839.2896843, 10.1109/CESI.2016.013]
   Kotsiantis SB, 2006, PROC WRLD ACAD SCI E, V12, P278
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   de la Vara JL, 2016, IEEE T SOFTWARE ENG, V42, P1095, DOI 10.1109/TSE.2016.2553032
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mockus A, 2010, P 18 ACM SIGSOFT INT
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam Jaechang., 2014, SURVEY SOFTWARE DEFE
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Rahman F, 2013, P 2013 9 JOINT M FDN
   Rana R., 2014, P IEEE INT C SOFTW E, P1
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Taipale T, 2013, ACM IEEE INT S EMP S
   The Society of Naval Architects of Korea, 2011, SHIPB TECHN, V2011, P67
   Tosun Aye, 2009, P 5 INT C PRED MOD S
   Tosun A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P318
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Turhan B, 2009, EXPERT SYST APPL, V36, P9986, DOI 10.1016/j.eswa.2008.12.028
   Van Lierde B, 2017, 16 INT C COMP IT APP
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zhou M., 2010, P 18 ACM SIGSOFT INT
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann M, 2004, PL S REHAB HEALTH, P1
NR 61
TC 8
Z9 8
U1 1
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2021
VL 51
IS 4
SI SI
BP 748
EP 771
DI 10.1002/spe.2927
EA NOV 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR8DY
UT WOS:000585664000001
DA 2024-07-18
ER

PT J
AU Bhardwaj, AK
   Gajpal, Y
   Surti, C
   Gill, SS
AF Bhardwaj, Amit Kumar
   Gajpal, Yuvraj
   Surti, Chirag
   Gill, Sukhpal Singh
TI HEART: Unrelated parallel machines problem with precedence constraints
   for task scheduling in cloud computing using heuristic
   andmeta-heuristicalgorithms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; heuristics; metaheuristic; resource optimization;
   scheduling
ID COLONY OPTIMIZATION ALGORITHM; DEPENDENT SETUP-TIMES; SEARCH ALGORITHM;
   SEQUENCE; FRAMEWORK; SYSTEM; ENVIRONMENT; MAKESPAN; MINIMIZE; ACO
AB Cloud computing is becoming a profitable technology because of it offers cost-effective IT solutions globally. A well-designed task scheduling algorithm ensures the optimal utilization of clouds resources and reducing execution time dynamically. This research article deals with the task scheduling of inter-dependent subtasks on unrelated parallel computing machines in a cloud computing environment. This article considers two variants of the problem-based on two different objective function values. The first variant considers the minimization of the total completion time objective function while the second variant considers the minimization of the makespan objective function. Heuristic and meta-heuristic (HEART) based algorithms are proposed to solve the task scheduling problems. These algorithms utilize the property of list scheduling algorithm of unrelated parallel machine scheduling problem. A mixed integer linear programming (MILP) formulation has been provided for the two variants of the problem. The optimal solution is obtained by solving MILP formulation usingA Mathematical Programming Language(AMPL) software. Extensive numerical experiments have been performed to evaluate the performance of proposed algorithms. The solutions obtained by the proposed algorithms are found to out-perform the existing algorithms. The proposed algorithms can be used by cloud computing service providers (CCSPs) for enhancing their resources utilization to reduce their operating cost.
C1 [Bhardwaj, Amit Kumar] LM Thapar Sch Management Thapar Inst Engn & Techn, Dera Bassi Campus, Mohali, India.
   [Bhardwaj, Amit Kumar; Gajpal, Yuvraj] Univ Manitoba, Asper Sch Business, Supply Chain Management, Winnipeg, MB, Canada.
   [Surti, Chirag] Rider Univ, Dept Informat Syst Analyt & Supply Chain Manageme, Lawrenceville, NJ 08648 USA.
   [Gill, Sukhpal Singh] Queen Mary Univ London, Sch Elect Engn & Comp Sci, London, England.
C3 University of Manitoba; Rider University; University of London; Queen
   Mary University London
RP Gill, SS (corresponding author), Queen Mary Univ London, Sch Elect Engn & Comp Sci, London, England.
EM s.s.gill@qmul.ac.uk
RI Gill, Sukhpal Singh/J-5930-2014; Surti, Chirag/AAE-3795-2022; Gajpal,
   Yuvraj/AAN-3471-2020
OI Gill, Sukhpal Singh/0000-0002-3913-0369; Gajpal,
   Yuvraj/0000-0002-7105-8926; Kumar Bhardwaj, Amit/0000-0002-0713-8016; ,
   Chirag/0000-0001-9080-9732
FU NSERC [318689]
FX We thank Prof. Satish N. Srirama (Editor) and anonymous reviewers for
   their valuable comments and suggestions for improving our research
   paper. This research is partially supported by NSERC discovery Grant
   318689.
CR Afzalirad M, 2016, COMPUT IND ENG, V98, P40, DOI 10.1016/j.cie.2016.05.020
   [Anonymous], 2013, INT J COMPUTER SCI I
   Arnaout JP, 2010, J INTELL MANUF, V21, P693, DOI 10.1007/s10845-009-0246-1
   Behnamian J, 2009, EXPERT SYST APPL, V36, P9637, DOI 10.1016/j.eswa.2008.10.007
   Bhatt A, 2020, SOFTWARE PRACT EXPER, V50, P1381, DOI 10.1002/spe.2819
   Buyya R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241737
   Casini D, 2020, SOFTWARE PRACT EXPER, V50, P1760, DOI 10.1002/spe.2840
   Cheng CY, 2017, J MANUF SYST, V42, P1, DOI 10.1016/j.jmsy.2016.10.005
   Chunfeng Liu, 2011, Journal of Software, V6, P1146, DOI 10.4304/jsw.6.6.1146-1153
   Cook Stephen A, 1971, P 3 ANN ACM S THEOR, DOI 10.1145/800157.805047
   Deng RZ, 2020, 2020 5TH ASIA CONFERENCE ON POWER AND ELECTRICAL ENGINEERING (ACPEE 2020), P771, DOI 10.1109/ACPEE48638.2020.9136343
   Dutta D, 2011, P INT C WORKSH EM TR
   Ezugwu AE, 2019, KNOWL-BASED SYST, V172, P15, DOI 10.1016/j.knosys.2019.02.005
   Fang YQ, 2010, LECT NOTES COMPUT SC, V6318, P271, DOI 10.1007/978-3-642-16515-3_34
   Fanjul-Peyro L, 2017, EUR J OPER RES, V260, P482, DOI 10.1016/j.ejor.2017.01.002
   Fanjul-Peyro L, 2010, EUR J OPER RES, V207, P55, DOI 10.1016/j.ejor.2010.03.030
   Gacias B, 2010, COMPUT OPER RES, V37, P2141, DOI 10.1016/j.cor.2010.03.003
   Gajpal Y, 2006, INT J PROD ECON, V101, P259, DOI 10.1016/j.ijpe.2005.01.003
   Gao YQ, 2013, J COMPUT SYST SCI, V79, P1230, DOI 10.1016/j.jcss.2013.02.004
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Germain-Renaud C, 2009, IEEE INTERNET COMPUT, V13, P9, DOI 10.1109/MIC.2009.137
   Gill SS, 2020, J SYST SOFTWARE, V166, DOI 10.1016/j.jss.2020.110596
   Gill SS, 2019, INTERNET THINGS-NETH, V8, DOI 10.1016/j.iot.2019.100118
   Gill SS, 2019, J GRID COMPUT, V17, P385, DOI 10.1007/s10723-017-9424-0
   Herrmann J, 1997, EUR J OPER RES, V102, P528, DOI 10.1016/S0377-2217(96)00247-0
   Hong JT, 2018, INT J PROD ECON, V204, P214, DOI 10.1016/j.ijpe.2018.07.019
   [华夏渝 HUA Xia-yu], 2010, [华东师范大学学报. 自然科学版, Journal of East China Normal University. Natural Science], P127
   Hunkeler U, 2008, 2008 3RD INTERNATIONAL CONFERENCE ON COMMUNICATION SYSTEM SOFTWARE AND MIDDLEWARE AND WORKSHOPS, VOLS 1 AND 2, P791, DOI 10.1109/COMSWA.2008.4554519
   Hurink J, 2001, OPER RES LETT, V29, P231, DOI 10.1016/S0167-6377(01)00104-3
   Islam MT, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110515
   Jang S., 2012, Int. J. Control Autom, V5, P157
   Joo CM, 2015, COMPUT IND ENG, V85, P102, DOI 10.1016/j.cie.2015.02.029
   Jose EC, 2017, COMPUT OPER RES, V78, P117
   Kaur A, 2019, 2018 2 INT C I SMAC, P213
   Khiat A, 2020, SOFTWARE PRACT EXPER, V50, P1463, DOI 10.1002/spe.2827
   Kochan CG, 2018, INT J PROD ECON, V195, P168, DOI 10.1016/j.ijpe.2017.10.008
   Lei DM, 2020, COMPUT IND ENG, V141, DOI 10.1016/j.cie.2020.106320
   Li Jian-feng, 2011, Journal of Computer Applications, V31, P184, DOI 10.3724/SP.J.1087.2011.00184
   Li JY, 2012, J PARALLEL DISTR COM, V72, P666, DOI 10.1016/j.jpdc.2012.02.002
   Lin YK, 2011, COMPUT OPER RES, V38, P901, DOI 10.1016/j.cor.2010.08.018
   Lin YK, 2013, EUR J OPER RES, V227, P239, DOI 10.1016/j.ejor.2012.10.008
   MALIK SUR, 2020, SOFTWARE PRACT 0531
   Mancini R., 2019, P INT C INT CLOUD CO
   Diana ROM, 2015, NEUROCOMPUTING, V163, P94, DOI 10.1016/j.neucom.2014.06.091
   Pandey S, 2010, INT CON ADV INFO NET, P400, DOI 10.1109/AINA.2010.31
   Shahvari O, 2017, COMPUT OPER RES, V77, P154, DOI 10.1016/j.cor.2016.07.021
   Sobeyko O, 2016, COMPUT OPER RES, V68, P97, DOI 10.1016/j.cor.2015.11.004
   Srirama Satish Narayana, 2018, International Journal of Cloud Computing, V7, P129
   Stützle T, 2000, FUTURE GENER COMP SY, V16, P889, DOI 10.1016/S0167-739X(00)00043-1
   Thepphakorn T, 2014, INT J PROD ECON, V149, P131, DOI 10.1016/j.ijpe.2013.04.026
   Thiruvady D, 2013, INT J PROD ECON, V141, P230, DOI 10.1016/j.ijpe.2012.06.012
   Ting CJ, 2013, INT J PROD ECON, V141, P34, DOI 10.1016/j.ijpe.2012.06.011
   Tsai JT, 2013, COMPUT OPER RES, V40, P3045, DOI 10.1016/j.cor.2013.06.012
   Tuli S., 2020, IEEE INT SYMP CIRC S, DOI DOI 10.1109/iscas45731.2020.9180670
   Tuli S, 2022, IEEE T MOBILE COMPUT, V21, P940, DOI 10.1109/TMC.2020.3017079
   Tuli S, 2020, FUTURE GENER COMP SY, V104, P187, DOI 10.1016/j.future.2019.10.043
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
   Vallada E, 2019, COMPUT OPER RES, V111, P415, DOI 10.1016/j.cor.2019.07.016
   Wainer G, 2020, SOFTWARE PRACT EXPER, V50, P1327, DOI 10.1002/spe.2831
   Wang W, 2020, 2020 5TH ASIA CONFERENCE ON POWER AND ELECTRICAL ENGINEERING (ACPEE 2020), P1150, DOI 10.1109/ACPEE48638.2020.9136545
   Zhang S, 2018, INT J PROD ECON, V203, P404, DOI 10.1016/j.ijpe.2018.07.016
   Zhou BW, 2017, IEEE T SERV COMPUT, V10, P797, DOI 10.1109/TSC.2015.2511002
NR 62
TC 10
Z9 11
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2020
VL 50
IS 12
BP 2231
EP 2251
DI 10.1002/spe.2890
EA SEP 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OO7CG
UT WOS:000566485200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Andrade, R
   Borba, P
AF Andrade, Rodrigo
   Borba, Paulo
TI Privacy and security constraints for code contributions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE collaborative software development; information flow control; policy
   language; privacy; security
ID TAINT ANALYSIS
AB In collaborative software development, developers submit their contributions to repositories that are used to integrate code from various collaborators. To avoid privacy and security issues, code contributions are often reviewed before integration. Although careful manual code review can detect such issues, it might be time-consuming, expensive, and error-prone. Automatic analysis tools can also detect privacy and security issues, but they often demand significant developer effort, or are domain specific, considering fixed framework specific vulnerability sources and sinks. To reduce these problems, in this paper we propose the Salvum policy language to support the specification of constraints that help to protect sensitive information from being inadvertently accessed by specific code contributions. We implement a tool that automatically checks Salvum policies for systems of different technical domains. We also investigate whether Salvum can find policy violations for a number of open-source projects. We find evidence that Salvum helps to detect violations even for well-supported and highly active projects. Moreover, our tool helps to find 80 violations in benchmark projects.
C1 [Andrade, Rodrigo] Univ Fed Rural Pernambuco, Unidade Acad Garanhuns, Ave Bom Pastor S-N, Pernambuco, Brazil.
   [Borba, Paulo] Univ Fed Pernambuco, Informat Ctr, Pernambuco, Brazil.
C3 Universidade Federal Rural de Pernambuco (UFRPE); Universidade Federal
   de Pernambuco
RP Andrade, R (corresponding author), Univ Fed Rural Pernambuco, Unidade Acad Garanhuns, Ave Bom Pastor S-N, Pernambuco, Brazil.
EM rodrigo.caandrade@ufrpe.br
RI Borba, Paulo/C-5617-2013
OI Borba, Paulo/0000-0002-0381-2843
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [141590/2013-0]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Number: 141590/2013-0
CR Andrade R. M. D., 2018, THESIS
   [Anonymous], 1999, P ACM S PRINC PROGR
   [Anonymous], WALA: T.J. Watson libraries for analysis
   [Anonymous], 2013, TUDCS20130114 U DARM
   Apel S, 2009, P INT C SOFTW ENG
   Apel S, 2010, SCI COMPUT PROGRAM, V77, P174
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Biba K. J, 1977, ESDTR76372 USAF EL S, P76
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   DENNING DE, 1977, COMMUN ACM, V20, P504, DOI 10.1145/359636.359712
   Enck W., 2011, P USENIX SEC S P USENIX SEC S
   Enck William, 2010, P USENIX S OP SYST D
   Ernst MD, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1092, DOI 10.1145/2660267.2660343
   Fuchs AP, 2010, P IEEE S SEC PRIV
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Graf J, 2013, P WORK C PROGR LANG
   Graf J, 1982, P IEEE S SEC PRIV
   Hammer C, 2009, INT J INF SECUR, V8, P399, DOI 10.1007/s10207-009-0086-1
   Hardt D., 2012, OAUTH 20 AUTHORIZATI
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Johnson A, 2015, ACM SIGPLAN NOTICES, V50, P291, DOI [10.1145/2813885.2737957, 10.1145/2737924.2737957]
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kang K.C., 1990, SEI90TR21 CARN MELL
   KICZALES G, 2001, P EUR C OBJ OR PROGR
   Lientz PB, 1980, SOFTWARE MAINTENANCE
   Livshits V. B., 2005, FINDING SECURITY VUL
   McGraw G, 2008, COMPUTER, V41, P107, DOI 10.1109/MC.2008.514
   Meneely A, 2013, P ACM IEEE INT S EMP
   Mettler Adrian, 2010, NETWORK DISTRIBUTED
   Miller M. S., NTR
   Myers A.C., 2001, Jif: Java information flow. software release
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Prehofer C, 1997, P EUR C OBJ OR PROGR
   Rastogi V, 2013, P C DAT APPL SEC PRI, P209
   Saghafi S, 2012, P 11 ANN INT C ASP S
   SALTZER JH, 1974, COMMUN ACM, V17, P388, DOI 10.1145/361011.361067
   Snelting G, 2015, SCI COMPUT PROGRAM, V97, P122, DOI 10.1016/j.scico.2013.11.008
   Sridharan M, 2011, ACM SIGPLAN NOTICES, V46, P1053, DOI 10.1145/2076021.2048145
   Sufatrio, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2733306
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   Tripp O, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P175
   Tripp O, 2013, LECT NOTES COMPUT SC, V7793, P210, DOI 10.1007/978-3-642-37057-1_15
   Tripp O, 2009, ACM SIGPLAN NOTICES, V44, P87, DOI 10.1145/1543135.1542486
   Wohlin C., 2012, Experimentation in Software Engineering
   Yan K, 2012, P USENIX SEC S, P569
   Yang J, 2012, P S PRINC PROGR LANG
NR 47
TC 1
Z9 1
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2020
VL 50
IS 10
BP 1905
EP 1929
DI 10.1002/spe.2872
EA AUG 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ8HF
UT WOS:000555450300001
OA Green Published
DA 2024-07-18
ER

PT J
AU Li, JY
   Liu, L
   Zhang, P
AF Li, Jingyao
   Liu, Lei
   Zhang, Peng
TI Tabular-expression-based method for constructing metamorphic relations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE metamorphic relation; metamorphic testing; tabular expression
ID SOFTWARE
AB Metamorphic testing (MT) is proposed to overcome the oracle problem in software testing, and metamorphic relations (MRs) are the core of MT. There is a lack of guidelines for constructing effective MRs, and it is difficult to reuse MRs mainly because most MRs are closely related to the domain knowledge. In this article, we propose a method for constructing MRs from specifications in tabular expression format. Our method constructs MRs according to the characteristics of tabular expressions, especially the relationships between the header grids and the main grid, namely, our method is domain-independent and the construction process is simplified. In addition, the derived MRs can be applied to specifications with the same tabular expression structure. For specifications with different tabular expression structures, MRs can still be used after slight adjustments. To evaluate the performance of our method in practice, we apply the method to five applications. The experimental results demonstrate that our method is effective for a program with the oracle problem, and that it is applicable to tabular expressions in various formats. Compared with representative testing methods, our method identifies errors that are not detected by the compared methods. Hence, our method and existing methods can complement each other. The MR proposed in this article outperforms MRs constructed based on program properties.
C1 [Li, Jingyao; Liu, Lei; Zhang, Peng] Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Peoples R China.
   [Li, Jingyao; Zhang, Peng] Jilin Univ, Key Lab Symbol Computat & Knowledge Engn, Minist Educ, Changchun, Peoples R China.
   [Liu, Lei] Jilin Univ, Coll Software, Changchun, Peoples R China.
   [Zhang, Peng] Jilin Univ, Coll Math, Changchun, Peoples R China.
C3 Jilin University; Jilin University; Jilin University; Jilin University
RP Zhang, P (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Peoples R China.
EM zhangpengccst@jlu.edu.cn
RI lei, liu/HTR-5486-2023; Li, Jingyao/HGU-7197-2022
CR [Anonymous], 610121990 IEEE
   Baber RL, 2005, ITCC 2005: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: CODING AND COMPUTING, VOL 2, P428, DOI 10.1109/ITCC.2005.132
   Barus AC, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P5, DOI [10.1109/MET.2016.010, 10.1145/2896971.2896977]
   Bourguiba I, 2012, FUND INFORM, V119, P121, DOI 10.3233/FI-2012-730
   Chen LL, 2012, 2012 6TH INTERNATIONAL CONFERENCE ON NEW TRENDS IN INFORMATION SCIENCE, SERVICE SCIENCE AND DATA MINING (ISSDM2012), P439
   Chen T. Y., 1998, Technical Report hkust-cs98-01
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, J SYST SOFTWARE, V116, P177, DOI 10.1016/j.jss.2015.07.037
   Donaldson AF, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P44, DOI [10.1109/MET.2016.016, 10.1145/2896971.2896978]
   Feng X, 2011, IEEE T SOFTWARE ENG, V37, P616, DOI 10.1109/TSE.2011.78
   Hardin B, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P14, DOI 10.1145/3193977.3193985
   HENINGER KL, 1980, IEEE T SOFTWARE ENG, V6, P2, DOI 10.1109/TSE.1980.230208
   Hierons RM, 2012, IEEE T SOFTWARE ENG, V38, P629, DOI 10.1109/TSE.2011.45
   Janicki R, 2001, SCI COMPUT PROGRAM, V39, P189, DOI 10.1016/S0167-6423(00)00004-6
   Janicki R, 1997, ADV COMP SCI, P184
   Jarman DC, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P21, DOI 10.1109/MET.2017.1
   Jin Y, 2010, SCI COMPUT PROGRAM, V75, P980, DOI 10.1016/j.scico.2009.12.009
   Kanewala U, 2016, SOFTW TEST VERIF REL, V26, P245, DOI 10.1002/stvr.1594
   Kaur M, 2015, 2015 SECOND INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING AND COMMUNICATION ENGINEERING ICACCE 2015, P312, DOI 10.1109/ICACCE.2015.136
   Lawford M, 2000, LECT NOTES COMPUT SC, V1816, P73
   Li TB, 2008, ADVANCES IN MATRIX THEORY AND ITS APPLICATIONS, VOL II, P180
   Lin XY, 2020, COMPUT SCI ENG, V22, P78, DOI 10.1109/MCSE.2018.2880577
   Newell J, 2016, LECT NOTES COMPUT SC, V9690, P206, DOI 10.1007/978-3-319-40648-0_16
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Pang L, 2013, FORMAL TECHNIQUES SA, P125
   Pang LN, 2015, SCI COMPUT PROGRAM, V113, P149, DOI 10.1016/j.scico.2015.10.005
   Parnas DL, 2012, FRONT COMPUT SCI-CHI, V6, P3, DOI 10.1007/s11704-012-2904-2
   Parnas DL, 2009, KNOWL-BASED SYST, V22, P132, DOI 10.1016/j.knosys.2008.11.001
   PARNAS DL, 1991, NUCL SAFETY, V32, P189
   PARNAS DL, 1994, IEEE T SOFTWARE ENG, V20, P948, DOI 10.1109/32.368133
   Parnas DL, 1992, TECHNICAL REPORT
   PARNAS DL, 2003, ELECT NOTES THEORETI, V44, P1
   Quinn C, 2006, IEEE ACM INT C SOFTW
   Rahman K, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P10, DOI 10.1145/3193977.3193983
   RANI S, 2015, 2015 4 INT C REL
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Singh NK, 2017, LECT NOTES COMPUT SC, V10563, P167, DOI 10.1007/978-3-319-66854-3_13
   Sun CA, 2021, IEEE T SOFTWARE ENG, V47, P1764, DOI 10.1109/TSE.2019.2934848
   Sun CA, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P12, DOI [10.1109/MET.2016.011, 10.1145/2896971.2896974]
   Trancon y Widemann Baltasar, 2014, Trends in Functional Programming. 14th International Symposium, TFP 2013. Revised Selected Papers: LNCS 8322, P1, DOI 10.1007/978-3-642-45340-3_1
   Troya J, 2018, J SYST SOFTWARE, V136, P188, DOI 10.1016/j.jss.2017.05.043
   Wassyng A, 2003, IEEE INT C SOFTW SYS
   Zhang PC, 2017, IEEE ACCESS, V5, P21791, DOI 10.1109/ACCESS.2017.2758790
   Zhang XL, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P399, DOI 10.1109/SNPD.2016.7515931
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
   Zhu XN, 2014, INT REQUIR ENG CONF, P327, DOI 10.1109/RE.2014.6912280
NR 47
TC 2
Z9 2
U1 2
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2020
VL 50
IS 8
BP 1345
EP 1380
DI 10.1002/spe.2818
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MG0MA
UT WOS:000545728200002
DA 2024-07-18
ER

PT J
AU Moreno, J
   Gómez, J
   Serrano, MA
   Fernandez, EB
   Fernández-Medina, E
AF Moreno, Julio
   Gomez, Javier
   Serrano, Manuel A.
   Fernandez, Eduardo B.
   Fernandez-Medina, Eduardo
TI Application of security reference architecture to Big Data ecosystems in
   an industrial scenario
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Big Data; case study; security patterns; security reference architecture
ID DATA ANALYTICS
AB Big Data environments are typically very complex ecosystems; this means that implementing them is complicated. One possible technique with which to address this complexity is the use of abstraction. Reference architecture (RA) can be useful for an improved understanding of the main components of Big Data. Herein, we propose a security RA that includes the management of security concerns and provides the main elements of a Big Data ecosystem. Application of this architecture to real-world scenarios facilitates its refinement and improves its usefulness. In this article, we present a case study of a real-world Big Data ecosystem implemented in a banking environment. This ecosystem was developed by everis, an NTT company with which we collaborated for this study. To conduct this validation case study, a map was established between the elements of the Big Data ecosystem implemented and our proposal. Consequently, a series of valuable lessons that can improve both our architecture and the security of the Big Data environment were obtained. These include recommendations for a set of best practices such as the use of security patterns.
C1 [Moreno, Julio; Fernandez-Medina, Eduardo] Univ Castilla La Mancha, GSyA Res Grp, Ciudad Real, Spain.
   [Gomez, Javier] Everis NTT Data Co, Madrid, Spain.
   [Serrano, Manuel A.] Univ Castilla La Mancha, Alarcos Res Grp, Ciudad Real, Spain.
   [Fernandez, Eduardo B.] Florida Atlantic Univ, Comp & Elect Engn & Comp Sci, Boca Raton, FL 33431 USA.
C3 Universidad de Castilla-La Mancha; Universidad de Castilla-La Mancha;
   State University System of Florida; Florida Atlantic University
RP Moreno, J (corresponding author), Univ Castilla La Mancha, GSyA Res Grp, Ciudad Real, Spain.
EM julio.moreno@uclm.es
RI Serrano, Manuel/N-8266-2013; Fernandez, Eduardo Buglioni/AFR-8834-2022;
   Moreno, Julio/R-6183-2017
OI Serrano, Manuel/0000-0003-0962-5659; Fernandez, Eduardo
   Buglioni/0000-0002-5109-4591; Moreno, Julio/0000-0001-9974-1199
FU Consejeria de Educacion, Cultura y Deportes de la Direccion General de
   Universidades, Investigacion e Innovacion de la JCCM
   [SBPLY-17-180501-000202]; Ministerio de Economia y Competitividad
   [RTI2018-094283-B-C31]
FX Consejeria de Educacion, Cultura y Deportes de la Direccion General de
   Universidades, Investigacion e Innovacion de la JCCM, Grant/Award
   Number: SBPLY-17-180501-000202; Ministerio de Economia y Competitividad,
   Grant/Award Number: RTI2018-094283-B-C31
CR Akoka J, 2017, COMPUT STAND INTER, V54, P105, DOI 10.1016/j.csi.2017.01.004
   Alic AS, 2019, FUTURE GENER COMP SY, V96, P243, DOI 10.1016/j.future.2019.02.011
   [Anonymous], 2019, 205473 ISOIEC CD
   Avgeriou P., 2003, ENTERPRISE ARCHITECT, V24, P1
   Bhuiyan M. Z. A., 2018, P INT C DAT PROC APP, P62
   Casola V, 2016, PROCEDIA COMPUT SCI, V97, P53, DOI 10.1016/j.procs.2016.08.280
   Coghlan D., 2019, Doing an Action Research in Your own Organization
   Columbus Louis., 2019, 10 Charts That Will Change Your Perspective Of AI
   Darwish TSJ, 2018, IEEE ACCESS, V6, P15679, DOI 10.1109/ACCESS.2018.2815989
   Demchenko Y, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON COLLABORATION TECHNOLOGIES AND SYSTEMS (CTS), P104, DOI 10.1109/CTS.2014.6867550
   Fernandez E.B., 2013, SECURITY PATTERNS PR
   Fernandez EB, 2016, REQUIR ENG, V21, P225, DOI 10.1007/s00766-014-0218-7
   Garlan David, 2010, DOCUMENTING SOFTWARE
   Klein J, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING (BIGDSE 2016), P51, DOI [10.1145/2896825.2896834, 10.1109/BIGDSE.2016.017]
   Kock N., 2001, INFORM TECHNOLOGY PE, V14, P6, DOI DOI 10.1108/ITP.2001.16114AAA.001
   Marz N., 2015, Big Data: Principles and Best Practices of Scalable Realtime Data Systems
   Mistrik I, 2017, SOFTWARE ARCHITECTURE FOR BIG DATA AND THE CLOUD, pXXXI
   Moreno J, 2018, DOLAP WORKSH COL EDB
   Moreno J, 2019, IEEE ACCESS, V7, P96604, DOI 10.1109/ACCESS.2019.2929330
   Nadal S, 2017, INFORM SOFTWARE TECH, V90, P75, DOI 10.1016/j.infsof.2017.06.001
   NBD-WG, 2019, NIST NIST BIG DAT RE
   NIST Big Data Public Working Group, NIST BIG DAT INT FRA, V4
   Pääkkönen P, 2015, BIG DATA RES, V2, P166, DOI 10.1016/j.bdr.2015.01.001
   Psomakelis E, 2020, FUTURE GENER COMP SY, V110, P531, DOI 10.1016/j.future.2019.09.046
   Rehman MHU, 2019, FUTURE GENER COMP SY, V99, P247, DOI 10.1016/j.future.2019.04.020
   Steel C., 2005, CORE SECURITY PATTER
   Zhang XY, 2019, INT J ADV MANUF TECH, V105, P1949, DOI 10.1007/s00170-019-04374-x
NR 27
TC 1
Z9 2
U1 2
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2020
VL 50
IS 8
BP 1520
EP 1538
DI 10.1002/spe.2829
EA MAR 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MG0MA
UT WOS:000522528500001
OA Green Published
DA 2024-07-18
ER

PT J
AU Ayadi, MG
   Bouslimi, R
   Akaichi, J
AF Ayadi, Mouhamed Gaith
   Bouslimi, Riadh
   Akaichi, Jalel
TI Medical social network content analysis for medical image retrieval
   purpose
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE content analysis; content-based medical image retrieval; information
   retrieval; medical social network
ID TEXTURE; WAVELET; MODEL
AB Background and objective: Medical social networking platforms provide virtual spaces ensuring the interaction between different healthcare participants. As a part of the exchange, these spaces allow subscribers to upload medical images, describing different medical cases for an analysis or an interpretation proposal. Facing this expected huge amount of uploaded images generated daily, it is needed to engage new mechanisms to effectively deal with this circumstance, for enhancing the search function process of medical images, based on what is uploaded. To overcome this issue, setting up of images visual searching based on a content-based medical image retrieval scheme is the solution. More clearly, such mechanism will help and motivate medical social networking subscribers to find visually similar stored images. Methods: To ensure this task, the development of this mechanism, technically, is based mainly on a fusion of three visual features, which offers a flexible and more precision. It is reinforced by a weighted distance approach through attributing weights for feature vectors to scale up the performance. Indeed, the displayed results of this system can be updated based on user's intention by a user interactive feedback mechanism to indicate the truly relevant images. Results: We provide the theoretical performance of our scheme. Extensive experiments were conducted on a categorically classified collection containing 500 images. We conduct a practical evaluation on this dataset classes, putting returned results in a comparative study with other models results, existing in the literature. Conclusions: The proposed scheme preserves the efficiency of the search task. As theoretically and experimentally established, our scheme offers an effective image retrieval model that can support different subscribers' expectations. The relevance feedback mechanism can keep the dynamism of the system, thus offering a continuous searching result evolution. Experimentation outcomes indicate better findings compared with the other models.
C1 [Ayadi, Mouhamed Gaith; Bouslimi, Riadh] ISG, Dept Comp Sci, Tunis 2000, Tunisia.
   [Akaichi, Jalel] Univ Bisha, Coll Comp Sci, Bisha, Saudi Arabia.
C3 Universite de Tunis; University of Bisha
RP Ayadi, MG (corresponding author), ISG, Dept Comp Sci, Tunis 2000, Tunisia.
EM mouhamed.gaith.ayadi@gmail.com
OI Akaichi, Jalel/0000-0001-8849-8664; gaith, ayadi/0000-0002-9157-9788
CR [Anonymous], 2013, Social Media Retrieval
   Ayadi MG, 2016, SOC NETW ANAL MIN, V6, DOI 10.1007/s13278-016-0362-9
   Ayadi MG, 2016, NETW MODEL ANAL HLTH, V5, DOI 10.1007/s13721-016-0130-9
   Ayyachamy S, 2013, INT J IMAG SYST TECH, V23, P9, DOI 10.1002/ima.22031
   Baâzaoui A, 2018, EXPERT SYST APPL, V94, P11, DOI 10.1016/j.eswa.2017.10.034
   Bhattacharjee N, 2011, P 2011 INT C COMM CO
   Bueno R, 2010, 2010 IEEE 23 INT S C
   Bugatti PH, 2011, 2011 IEEE 1 INT C HE
   Cadogan M, 2014, EMERG MED J, V31, pE76, DOI 10.1136/emermed-2013-203502
   Collins John, 2012, COMP STUDY SIMILARIT
   de Oliveira JEE, 2010, COMPUT METH PROG BIO, V99, P289, DOI 10.1016/j.cmpb.2010.01.005
   Directorate-General for Health and Consumers European Commission, 2015, SPEC EUR 411, DOI [10.2772/33467, DOI 10.2772/33467]
   Dosemagen S, 2016, HUFFINGTON POST
   Doulamis N, 2006, SIGNAL PROCESS-IMAGE, V21, P334, DOI 10.1016/j.image.2005.11.006
   Galiatsatos P, 2016, MED EDUC ONLINE, V21, DOI 10.3402/meo.v21.29332
   George DR, 2013, CLIN OBSTET GYNECOL, V56, P453, DOI 10.1097/GRF.0b013e318297dc38
   Glover M, 2015, J AM COLL RADIOL, V12, P513, DOI 10.1016/j.jacr.2014.11.005
   Goeuriot L, 2016, INFORM RETRIEVAL, V19, P1, DOI 10.1007/s10791-015-9277-8
   Hebbar H, 2014, INT J ENG RES DEV, V9, P30
   Jaganathan Yogapriya, 2013, American Journal of Applied Sciences, V10, P1398, DOI 10.3844/ajassp.2013.1398.1412
   Jyothi B, 2016, ADV INTELL SYST, V434, P573, DOI 10.1007/978-81-322-2752-6_56
   Kind T, 2014, MED TEACH, V36, P284, DOI 10.3109/0142159X.2013.852167
   Kordzadeh N, 2016, HEALTHC DELIV INFORM, P101, DOI 10.1007/978-3-319-25973-4_6
   Kumar M, 2018, COMMUNICATIONS COM 2, V828, P663, DOI [10.1007/978-981-10-8660-1_50, DOI 10.1007/978-981-10-8660-1_50]
   Kumar P, 2016, INT J PHARM SCI RES, V7, P4222, DOI 10.13040/IJPSR.0975-8232.7(10).4222-29
   Kundu MK, 2017, COMPUT METH PROG BIO, V139, P209, DOI 10.1016/j.cmpb.2016.10.023
   Li WB, 2017, SIGNAL PROCESS-IMAGE, V59, P131, DOI 10.1016/j.image.2017.06.013
   Liu S, 2010, 2010 IEEE 23 INT S C
   Ma L, 2017, J BIOMED INFORM, V66, P148, DOI 10.1016/j.jbi.2017.01.002
   McGowan BS, 2012, J MED INTERNET RES, V14, DOI 10.2196/jmir.2138
   McLawhorn AS, 2016, CURR REV MUSCULOSKE, V9, P487, DOI 10.1007/s12178-016-9376-1
   OBEROI A, 2012, IJCSI INT J COMPUTER, V9, P300
   Perrin A., 2015, Social networking usage: 2005-2015
   Rajakumar K, 2013, J ELECTR ENG TECHNOL, V8, P1188, DOI 10.5370/JEET.2013.8.5.1188
   Ramamurthy B, 2015, INT J COMPUT COMMUN, V10, P382, DOI 10.15837/ijccc.2015.3.409
   Ramamurthy B., 2012, Journal of Computer Science, V8, P1070, DOI 10.3844/jcssp.2012.1070.1076
   Ramamurthy B, 2012, COMM COM INF SC, V305, P125
   Rocchio J. J., 1971, SMART RETRIEVAL SYST, P313
   Satish B, 2017, 2017 INT C EL EL COM, DOI [10.1109/ICEECCOT.2017.8284542, DOI 10.1109/ICEECCOT.2017.8284542]
   Seetharaman K, 2014, INT J MULTIMED INF R, V3, P53, DOI 10.1007/s13735-013-0048-2
   Seetharaman K, 2016, J KING SAUD UNIV-COM, V28, P110, DOI 10.1016/j.jksuci.2014.10.006
   Sharma R., 2012, INT J COMPUT DISTRIB, V1, P76
   Srinivas M, 2015, NEUROCOMPUTING, V168, P880, DOI 10.1016/j.neucom.2015.05.036
   Sudhakar MS, 2014, APPL SOFT COMPUT, V22, P492, DOI 10.1016/j.asoc.2014.04.029
   Suryavanshi Tanishq, 2016, Instr Course Lect, V65, P645
   Tang QL, 2017, ARTIF INTELL MED, V79, P71, DOI 10.1016/j.artmed.2017.06.009
   Younus ZS, 2015, ARAB J GEOSCI, V8, P6211, DOI 10.1007/s12517-014-1584-7
   Zember WF, 2015, J AM COLL RADIOL, V12, P620, DOI 10.1016/j.jacr.2014.07.030
   Zhang DS, 2012, PATTERN RECOGN, V45, P346, DOI 10.1016/j.patcog.2011.05.013
NR 49
TC 1
Z9 1
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2020
VL 50
IS 1
BP 65
EP 86
DI 10.1002/spe.2763
EA NOV 2019
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JR9RB
UT WOS:000496597600001
DA 2024-07-18
ER

PT J
AU Rodrigues, LR
   Cardoso, E
   Alves, OC
   Redigolo, FF
   Pillon, MA
   Miers, CC
   Koslovski, GP
AF Rodrigues, Leonardo R.
   Cardoso, Euclides
   Alves, Omir C.
   Redigolo, Fernando F.
   Pillon, Mauricio A.
   Miers, Charles C.
   Koslovski, Guilherme P.
TI Cloud broker proposal based on multicriteria decision-making and virtual
   infrastructure migration
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE broker; container; IaaS; migration; multicriteria; network; virtual
   infrastructure; virtualization
ID FRAMEWORK; TAXONOMY; AWARE
AB The adoption of infrastructure as a Service (IaaS) is a reality for academic, industrial, and governmental institutions. Cloud tenants request dynamically provisioned virtual infrastructures (VIs) tailored to their application requirements, detailing not only the virtual compute/storage resources but also the network components, topology, and services. The creation of a large number of cloud providers came along with the widespread use of VIs. The selection of an appropriate provider is a challenging task due to the diversity of the IaaS market and formally is a multicriteria analysis (NP-hard). Notwithstanding the provider selection complexity, the mobility of VI-hosted applications is limited due to the optimization anchors introduced by providers. Although the existing IaaS cloud brokers can indicate a hosting provider, they lack on conceptual and technical skills to migrate a VI and all its internal components between providers. This work enhances the state-of-the-art on IaaS cloud brokerage by proposing virtual infrastructure multicriteria allocation and migration-based broker (VIMAM), which performs a multicriteria analysis of providers and VI migration. VIMAM is driven by an analytic hierarchy process (AHP) to select an IaaS provider, offering a set of predefined weighting schemas to represent distinct tenant perspectives. Moreover, to migrate a VI, VIMAM takes into account the virtual machines, containers, switches, and other topology elements. In addition to discussing the AHP ranking weights and frequency of providers selection, the experimental analysis details the implementation of an OpenStack and Docker-based prototype for VI migration.
C1 [Rodrigues, Leonardo R.; Cardoso, Euclides; Pillon, Mauricio A.; Miers, Charles C.; Koslovski, Guilherme P.] Santa Catarina State Univ, Grad Program Appl Comp, BR-89219710 Joinville, SC, Brazil.
   [Alves, Omir C.] Univ Sao Paulo, Lab Comp Networks & Architecture, Sao Paulo, Brazil.
   [Redigolo, Fernando F.] Santa Catarina State Univ, Dept Comp Sci, Joinville, Brazil.
   [Koslovski, Guilherme P.] Univ Estado Santa Catarina, Rua Paulo Malschitzki,200 Zona Ind Norte, BR-89219710 Joinville, SC, Brazil.
C3 Universidade do Estado de Santa Catarina; Universidade de Sao Paulo;
   Universidade do Estado de Santa Catarina; Universidade do Estado de
   Santa Catarina
RP Koslovski, GP (corresponding author), Santa Catarina State Univ, Grad Program Appl Comp, BR-89219710 Joinville, SC, Brazil.
EM guilherme.koslovski@udesc.br
RI Koslovski, Guilherme Piegas/JFJ-2245-2023; Redigolo, Fernando
   F/E-9013-2013; Koslovski, Guilherme Piegas/AAG-5859-2020; Miers, Charles
   C./E-1876-2012
OI Koslovski, Guilherme/0000-0003-4936-1619; Miers, Charles
   Christian/0000-0002-1976-0478
CR Akoush Sherif, 2010, Proceedings 18th IEEE/ACM International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2010), P37, DOI 10.1109/MASCOTS.2010.13
   Ali H, 2017, FUTURE COMPUT INFORM, V1, P27
   Anhalt F, 2010, INT J NETW MANAG, V20, P129, DOI 10.1002/nem.732
   [Anonymous], 2010, International Journal of Engineering
   [Anonymous], 2012, INT SERIES OPERATION
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Carrasco J, 2017, CLOSER: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P259, DOI 10.5220/0006372302870297
   Clark S, 2005, LIT COMPASS, V2, DOI 10.1111/j.1741-4113.2005.00154.x
   CloudSquare, 2017, RES COMP CLOUD PROV
   Coles C., 2017, AWS VS AZURE VS GOOG
   Dastjerdi AV, 2015, SOFTWARE PRACT EXPER, V45, P197, DOI 10.1002/spe.2288
   de Assunçao MD, 2018, J NETW COMPUT APPL, V103, P1, DOI [10.1016/j.jnca.2017.12.001, 10.1016/j.jnea.2017.12.001]
   de Oliveira R, 2017, INT J NETW MANAG, V27, DOI 10.1002/nem.1958
   de Souza FR, 2019, J GRID COMPUT, V17, P447, DOI 10.1007/s10723-019-09479-x
   de Souza FR, 2017, IEEE ACM INT SYMP, P120, DOI 10.1109/CCGRID.2017.57
   Deshpande U, 2017, FUTURE GENER COMP SY, V72, P118, DOI 10.1016/j.future.2016.05.003
   Docker, 2017, DOCK BUILD SHIP RUN
   Duggan M, 2017, CLUSTER COMPUT, V20, P2083, DOI 10.1007/s10586-017-0948-7
   Ergu DJ, 2013, J SUPERCOMPUT, V64, P835, DOI 10.1007/s11227-011-0625-1
   Fischer A, 2013, IEEE COMMUN SURV TUT, V15, P1888, DOI 10.1109/SURV.2013.013013.00155
   Force DMT, 2017, COMM INF MOD
   Garg SK, 2013, FUTURE GENER COMP SY, V29, P1012, DOI 10.1016/j.future.2012.06.006
   Grozev N, 2014, SOFTWARE PRACT EXPER, V44, P369, DOI 10.1002/spe.2168
   Hall C, 2017, MICROSOFTS CLOUD MAR
   Hines Michael R., 2009, Operating Systems Review, V43, P14, DOI 10.1145/1618525.1618528
   Hinz M, 2018, J GRID COMPUT, V16, P493, DOI 10.1007/s10723-018-9440-8
   Hofmann P, 2010, IEEE INTERNET COMPUT, V14, P90, DOI 10.1109/MIC.2010.136
   Hong CY, 2018, PROCEEDINGS OF THE 2018 CONFERENCE OF THE ACM SPECIAL INTEREST GROUP ON DATA COMMUNICATION (SIGCOMM '18), P74, DOI 10.1145/3230543.3230545
   Inc G, 2018, PROD SERV GOOGL CLOU
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Kang D, 2014, INT J COMPUT ELECT A, V8, P2134
   Karmel A., 2016, NIST SPECIAL PUBLICA
   Kaur K, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092698
   Li W, 2011, P 2011 IEEE 3 INT C
   Liu F., 2012, SPECIAL PUBLICATION, V500-292
   García AL, 2016, COMPUT STAND INTER, V47, P19, DOI 10.1016/j.csi.2016.02.002
   Mansour I., 2016, PROC INT C INTERNET, P62
   Martens B, 2012, INFORM SYST FRONT, V14, P871, DOI 10.1007/s10796-011-9317-x
   Mashtizadeh A. J., 2014, 2014 USENIX ANN TECH, P97
   Medina V, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2492705
   Mell P. M., 2011, 800145 SP NAT I STAN
   Menzel M, 2013, SOFTWARE PRACT EXPER, V43, P1283, DOI 10.1002/spe.1110
   Microsoft, 2017, MICROSOFT AZURE
   Nair SK, 2010, P 2010 8 IEEE EUR C
   OASIS Standard, 2013, Topology and orchestration specification for cloud applications version 1.0
   Pettey C., 2009, Gartner Says Cloud Consumers Need Brokerages to Unlock the Potential of Cloud Services
   Pfitscher Ricardo J., 2014, ACM SIGOPS Operating Systems Review, V48, P2, DOI 10.1109/SBESC.2013.18
   Rajagopalan S, 2012, ACM SIGPLAN NOTICES, V47, P97, DOI 10.1145/2365864.2151039
   Raugust AS, 2018, IEEE 32 INT C ADV IN
   Razavi M, 2011, KNOWL INF SYST, V28, P449, DOI 10.1007/s10115-010-0312-1
   Ristov S, 2014, IEEE INT CONF CL NET, P261, DOI 10.1109/CloudNet.2014.6969002
   Rodriguez MA, 2019, SOFTWARE PRACT EXPER, V49, P698, DOI 10.1002/spe.2660
   Ruck DB, 2017, 2017 VII BRAZILIAN SYMPOSIUM ON COMPUTING SYSTEMS ENGINEERING (SBESC), P39, DOI 10.1109/SBESC.2017.12
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Synergy Research Group, 2017, MICR GOOGL IBM PUBL
   Tanoumand N, 2017, IEEE INT CONF FUZZY, DOI 10.1109/FUZZ-IEEE.2017.8015681
   Toosi AN, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2593512
   Tordsson J, 2012, FUTURE GENER COMP SY, V28, P358, DOI 10.1016/j.future.2011.07.003
   Tsakalozos K, 2017, IEEE T PARALL DISTR, V28, P2285, DOI 10.1109/TPDS.2017.2658572
   Whaiduzzaman M, 2014, SCI WORLD J, DOI 10.1155/2014/459375
   Wood T, 2011, ACM SIGPLAN NOTICES, V46, P121, DOI 10.1145/2007477.1952699
   Yazir Yagiz Onat, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P91, DOI 10.1109/CLOUD.2010.66
   Yousafzai A, 2017, KNOWL INF SYST, V50, P347, DOI 10.1007/s10115-016-0951-y
   Zhang F, 2017, IEEE ACM INT SYMP, P284, DOI 10.1109/CCGRID.2017.26
   Zhao JF, 2014, INT J AUTOM COMPUT, V11, P143, DOI 10.1007/s11633-014-0776-7
   Zhao YM, 2017, IEEE CONF COMPUT, P265, DOI 10.1109/INFCOMW.2017.8116387
   Zhizhong Zhang, 2013, Performance Evaluation Review, V40, P13
NR 67
TC 5
Z9 5
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2019
VL 49
IS 9
BP 1331
EP 1351
DI 10.1002/spe.2723
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IP8HI
UT WOS:000480287100001
DA 2024-07-18
ER

PT J
AU Duggan, M
   Shaw, R
   Duggan, J
   Howley, E
   Barrett, E
AF Duggan, M.
   Shaw, R.
   Duggan, J.
   Howley, E.
   Barrett, E.
TI A multitime-steps-ahead prediction approach for scheduling live
   migration in cloud data centers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; CPU; network bandwidth; neural network; prediction
   algorithms
ID NEURAL-NETWORKS; ENVIRONMENTS; MANAGEMENT; PLACEMENT; ENERGY; POWER;
   COST
AB One of the major challenges facing cloud computing is to accurately predict future resource usage to provision data centers for future demands. Cloud resources are constantly in a state of flux, making it difficult for forecasting algorithms to produce accurate predictions for short times scales (ie, 5 minutes to 1 hour). This motivates the research presented in this paper, which compares nonlinear and linear forecasting methods with a sequence prediction algorithm known as a recurrent neural network to predict CPU utilization and network bandwidth usage for live migration. Experimental results demonstrate that a multitime-ahead prediction algorithm reduces bandwidth consumption during critical times and improves overall efficiency of a data center.
C1 [Duggan, M.; Shaw, R.; Duggan, J.; Howley, E.; Barrett, E.] Natl Univ Ireland Galway, Informat Technol, Galway H91 TK33, Ireland.
RP Duggan, M (corresponding author), Natl Univ Ireland Galway, Informat Technol, Galway H91 TK33, Ireland.
EM m.duggan1@nuigalway.ie
RI Howley, Enda/AAM-3581-2020
OI Howley, Enda/0000-0003-2687-4630; Barrett, Enda/0000-0002-9876-8717
FU Irish Research Council for Science, Engineering and Technology
FX Irish Research Council for Science, Engineering and Technology
CR Akoush S., 2010, IEEE INT S MOD AN SI
   [Anonymous], 2014, White paper
   [Anonymous], P 2009 ICSE WORKSH S
   [Anonymous], 10 IFIP IEEE INT S I
   [Anonymous], IEEE T CLOUD COMPUT
   [Anonymous], 2010, IEEE INT S PAR DISTR
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Barrett E, 2011, 9 IEEE EUR C WEB SER
   Barrett E, 2013, CONCURR COMP-PRACT E, V25, P1656, DOI 10.1002/cpe.2864
   Barroso LA, 2007, COMPUTER, V40, P33, DOI 10.1109/MC.2007.443
   Beloglazov Anton, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P577, DOI 10.1109/CCGRID.2010.45
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Benson Theophilus, 2011, P 7 C EM NETW EXP TE, DOI DOI 10.1145/2079296.2079304
   Bey KB, 2009, 8 INT S PAR DISTR CO
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Box G.E., 2015, TIME SERIES ANAL FOR
   Calheiros RN, 2015, IEEE T CLOUD COMPUT, V3, P449, DOI 10.1109/TCC.2014.2350475
   Cao J, 2014, SOFTWARE PRACT EXPER, V44, P793, DOI 10.1002/spe.2231
   Chen H, COORDINATING VIRTUAL
   Chen J, 2012, 3 INT C CLOUD COMP C
   Chen T, 2018, MOBILE NETW APPL, V23, P227, DOI 10.1007/s11036-017-0925-7
   Chujai Pasapitch, 2013, IMECS 2013 Proceedings of International Multiconference of Engineers and Computer Scientists, P295
   Cisco, 2016, CISC VIS NETW IND GL
   Clark C., 2005, P 2 C S NETW SYST DE
   Cui Y, 2013, ADV INTELL SYST RES
   Dabbagh M, 2015, IEEE NETWORK, V29, P56, DOI 10.1109/MNET.2015.7064904
   Dinda P. A., 2000, Cluster Computing, V3, P265, DOI 10.1023/A:1019048724544
   Duggan M, 2016, INT C CLOUD AUT COMP
   Duggan M, 2017, 12 INT C INT TECHN S
   Duggan M, 2016, 6 INT C INN COMP TEC
   Duggan M, 2017, MEMET COMPUT, V9, P283, DOI 10.1007/s12293-016-0218-x
   Duggan M, 2017, CLUSTER COMPUT, V20, P2083, DOI 10.1007/s10586-017-0948-7
   Enke D, 2005, EXPERT SYST APPL, V29, P927, DOI 10.1016/j.eswa.2005.06.024
   Fan XB, 2007, CONF PROC INT SYMP C, P13, DOI 10.1145/1273440.1250665
   Gai K, 2015, IEEE 2 INT C CYB SEC
   Garg S.K, 2011, 4 INT C UT CLOUD COM
   Gartner Inc, 2007, GARTNER ESTIMATES IC
   Genez T. A., 2015, IEEE T CLOUD COMPUT
   Gers FA, 2002, PERSP NEURAL COMP, P193
   Ghorbani S, 2012, P 1 WORKSH HOT TOP S
   Hu Kejia, 2013, Machine Learning and Data Mining in Pattern Recognition. 9th International Conference, MLDM 2013. Proceedings: LNCS 7988, P601, DOI 10.1007/978-3-642-39712-7_46
   Hyndman RJ., 2014, FORECASTING PRINCIPL
   Islam S, 2012, FUTURE GENER COMP SY, V28, P155, DOI 10.1016/j.future.2011.05.027
   Janardhanan D, 2017, 12 INT C INT TECHN S
   Joshi B, 2012, INT C COMP COMM INF
   Koomey J.G., 2007, ESTIMATING TOTAL POW
   Kusic D, 2009, CLUSTER COMPUT, V12, P1, DOI 10.1007/s10586-008-0070-y
   Mandal U, 2014, 2014 OPTICAL FIBER COMMUNICATIONS CONFERENCE AND EXHIBITION (OFC)
   Mason K, 2017, P GEN EV COMP C COMP
   Mason K, 2018, FUTURE GENER COMP SY, V86, P162, DOI 10.1016/j.future.2018.03.040
   Mason K, 2018, APPL SOFT COMPUT, V62, P148, DOI 10.1016/j.asoc.2017.10.018
   Minas L., 2009, Energy Efficiency for Information Technology: How to Reduce Power Consumption in Servers and Data Centers
   Nguyen TH, 2017, IEEE T SERV COMPUT
   Piao JT, 2010, 9 INT C GRID CLOUD C
   Prevost JJ, 2011, 6 INT C SYST SYST EN
   Reiss C., 2011, Technical report
   Sanghrajka S, 2011, TECHNICAL REPORT
   Shaw R, 2017, 12 INT C INT TECHN S
   Shaw R, 2017, LECT NOTES COMPUT SC, V10601, P221, DOI 10.1007/978-3-319-69035-3_15
   Tang MD, 2015, CONCURR COMP-PRACT E, V27, P5826, DOI 10.1002/cpe.3639
   Tilman D, 2001, SCIENCE, V292, P281, DOI 10.1126/science.1057544
   Verma A, 2008, LECT NOTES COMPUT SC, V5346, P243, DOI 10.1007/978-3-540-89856-6_13
   Vieira K, 2010, IT PROF, V12, P38, DOI 10.1109/MITP.2009.89
   Voorsluys W, 2009, LECT NOTES COMPUT SC, V5931, P254, DOI 10.1007/978-3-642-10665-1_23
   Wang J, 2013, 10 IEEE C EMB UB COM
   WERBOS PJ, 1990, P IEEE, V78, P1550, DOI 10.1109/5.58337
   Wood T, 2015, IEEE ACM T NETWORK, V23, P1568, DOI 10.1109/TNET.2014.2343945
   Wu Y, 2011, IEEE 4 INT C CLOUD C
   Xie JY, 2017, IEEE ICC
   Zhang GQ, 1998, INT J FORECASTING, V14, P35, DOI 10.1016/S0169-2070(97)00044-7
   Zhang W, 2016, INT C ID INF KNOWL I
   Zhang WS, 2017, SOFTWARE PRACT EXPER, V47, P473, DOI 10.1002/spe.2426
   Zhang Y, 2008, FUTURE GENER COMP SY, V24, P489, DOI 10.1016/j.future.2007.07.003
   Zhang YY, 2007, IEICE T INF SYST, VE90D, P40, DOI [10.1093/ietisy/e90-1.1.40, 10.1093/ietisy/e90-d.1.40]
NR 74
TC 32
Z9 33
U1 0
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2019
VL 49
IS 4
SI SI
BP 617
EP 639
DI 10.1002/spe.2635
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN5AE
UT WOS:000460194000004
DA 2024-07-18
ER

PT J
AU Fu, SY
   Hong, DY
   Liu, YP
   Wu, JJ
   Hsu, WC
AF Fu, Sheng-Yu
   Hong, Ding-Yong
   Liu, Yu-Ping
   Wu, Jan-Jan
   Hsu, Wei-Chung
TI Efficient and retargetable SIMD translation in a dynamic binary
   translator
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE AVX; dynamic binary translation; helper function; LLVM; NEON; QEMU;
   single instruction multiple data
ID CODE GENERATION
AB The single-instruction multiple-data (SIMD) computing capability of modern processors is continually improved to deliver ever better performance and power efficiency. For example, Intel has increased SIMD register lengths from 128 bits in streaming SIMD extension to 512 bits in AVX-512. The ARM scalable vector extension supports SIMD register length up to 2048 bits and includes predicated instructions. However, SIMD instruction translation in dynamic binary translation has not received similar attention. For example, the widely used QEMU emulates guest SIMD instructions with a sequence of scalar instructions, even when the host machines have relevant SIMD instructions. This leaves significant potential for performance enhancement. We propose a newly designed SIMD translation framework for dynamic binary translation, which takes advantage of the host's SIMD capabilities. The proposed framework has been built in HQEMU, an enhanced QEMU with a separate thread for applying LLVM optimizations. The current prototype supports ARMv7, ARMv8, and IA32 guests on the X86-64 AVX-2 host. Compared with the scalar-translation version HQEMU, our framework runs up to 1.84 times faster on Standard Performance Evaluation Corporation 2006 CFP benchmarks and up to 6.81 times faster on selected real applications.
C1 [Fu, Sheng-Yu; Liu, Yu-Ping; Hsu, Wei-Chung] Natl Taiwan Univ, Taipei 10617, Taiwan.
   [Hong, Ding-Yong; Wu, Jan-Jan] Acad Sinica, Taipei, Taiwan.
C3 National Taiwan University; Academia Sinica - Taiwan
RP Fu, SY (corresponding author), Natl Taiwan Univ, Taipei 10617, Taiwan.
EM d03922013@csie.ntu.edu.tw
RI Li, Jiaai/JCO-0168-2023; Hong, Ding-Yong/ABA-8713-2020
OI Hong, Ding-Yong/0000-0002-7649-7581
FU Ministry of Science and Technology, Taiwan [MOST 105-2622-8-002-002,
   MOST-106-2218-E-002-040]
FX Ministry of Science and Technology, Taiwan, Grant/Award Number: MOST
   105-2622-8-002-002 and MOST-106-2218-E-002-040
CR Anderson A, 2016, ACM T ARCHIT CODE OP, V12, DOI 10.1145/2838735
   [Anonymous], 2014, ARM Architecture Reference Manual: ARMv7-A and ARMv7-R Edition
   ARM Ltd, 2017, ARM ARCH REF MAN S, P3
   Baghsorkhi S.S., 2016, P 37 ACM SIGPLAN C P, P697, DOI [10.1145/2908080.2908111, DOI 10.1145/2908080.2908111]
   Baraz L, 2003, P 36 ANN INT S MICR, DOI [10. 1109/MICRO. 2003. 1253195, DOI 10.1109/MICR0.2003.1253195]
   Bellard F., 2005, 2005 USENIX ANN TECH
   Callahan D, 1988, P 1988 ACM IEEE C SU, DOI 10. 1109/SUPERC. 1988. 44642
   Choi J, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS-ASIA (ICCE-ASIA)
   Chow F, 2013, ACM QUEUE, V11, P30, DOI [10. 1145/2542661. 2544374, DOI 10.1145/2542661.2544374]
   Click C., 1995, P ACM SIGPLAN WORKSH
   Duboscq G, 2013, P 7 ACM WORKSH VIRT
   Ebcioglu K, 2001, IEEE T COMPUT, V50, P529, DOI 10.1109/12.931892
   Eichenberger AE, 2004, ACM SIGPLAN NOTICES, V39, P82, DOI 10.1145/996893.996853
   Fu S, 2015, P 2015 DES AUT TEST
   Fu SY, 2015, INT C PAR DISTRIB SY, P507, DOI 10.1109/ICPADS.2015.70
   Fuller S, 1998, MOTOROLAS ALTIVEC TC, V6
   Guo Y-C, 2016, SOFTW PRACT EXP
   Hallou N, 2017, INT J PARALLEL PROG, V45, P1536, DOI 10.1007/s10766-016-0480-z
   Hong D.-Y., 2012, P 10 INT S CODE GENE, P104, DOI [10.1145/2259016.2259030, DOI 10.1145/2259016.2259030]
   Jang M., 2011, S RES APPL COMPUTATI, P104, DOI [10.1145/2103380.2103401, DOI 10.1145/2103380.2103401]
   Karrenberg R, 2011, P 9 INT S COD GEN OP, DOI [10. 1109/CGO. 2011. 5764682, DOI 10.1109/CG0.2011.5764682]
   Kim S, 2012, ACM SIGPLAN NOTICES, V47, P55, DOI 10.1145/2370036.2145824
   Kotha A, 2010, 43 ANN IEEE ACM INT, DOI [10. 1109/MICRO. 2010. 27, DOI 10.1109/MICR0.2010.27]
   Larsen S., 2000, SIGPLAN Notices, V35, P145, DOI 10.1145/358438.349320
   Li J, 2006, 4 IEEE ACM INT S COD, DOI [10. 1109/CGO. 2006. 27, DOI 10.1109/CG0.2006.27]
   Lomont C., 2011, Intel White Paper
   Merrill J., 2003, P GCC SUMM
   Nguyen H., 1999, ICS 99, P11
   Nuzman D, 2011, P 9 INT S COD GEN OP, DOI [10. 1109/CGO. 2011. 5764683, DOI 10.1109/CG0.2011.5764683]
   Nuzman D, 2006, 4 IEEE ACM INT S COD, DOI [10. 1109/CGO. 2006. 25, DOI 10.1109/CG0.2006.25]
   Nuzman D, 2008, 17 INT C PAR ARCH CO, DOI [DOI 10.1145/1454115.1454119, 10. 1145/1454115. 1454119]
   Nuzman D, 2006, ACM SIGPLAN NOTICES, V41, P132, DOI 10.1145/1133981.1133997
   Porpodas V, 2015, P 13 ANN IEEE ACM IN, DOI [10. 1109/CGO. 2015. 7054199, DOI 10.1109/CG0.2015.7054199]
   Püschel M, 2005, P IEEE, V93, P232, DOI 10.1109/JPROC.2004.840306
   Reddy VenuGopal., 2008, Neon technology introduction
   REN G, 2006, P 2006 ACM SIGPLAN C, P118, DOI DOI 10.1145/1133981.1133996
   Rosen Ira, 2007, GCC DEV SUMMIT
   Shuja J, 2017, T EMERG TEL TECH
   Smith J., 2005, VIRTUAL MACHINES VER
   Smith J, FUTURE SUPERSCALAR P
   Sui Y, 2016, P 17 ACM SIGPLAN SIG
   Trifunovic K, 2009, INT CONFER PARA, P327, DOI 10.1109/PACT.2009.18
   Wu P, 2005, 3 IEEE ACM INT S COD, DOI [10. 1109/CGO. 2005. 18, DOI 10.1109/CG0.2005.18]
   Zekri Ahmed Sherif, 2014, International Journal of Computer Science & Information Technology, V6, P67, DOI 10.5121/ijcsit.2014.6305
   Zheng C, 2000, COMPUTER, V33, P47, DOI 10.1109/2.825695
   Zhou H, 2016, INT SYM CODE GENER, P59, DOI 10.1145/2854038.2854054
   Zhou H, 2016, ACM T ARCHIT CODE OP, V13, DOI 10.1145/2886101
NR 47
TC 6
Z9 6
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2018
VL 48
IS 6
BP 1312
EP 1330
DI 10.1002/spe.2573
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF5UQ
UT WOS:000432033700007
DA 2024-07-18
ER

PT J
AU Liu, J
   Yu, XA
   Xu, Z
   Choo, KKR
   Hong, LA
   Cui, XH
AF Liu, Jin
   Yu, Xiao
   Xu, Zheng
   Choo, Kim-Kwang Raymond
   Hong, Liang
   Cui, Xiaohui
TI A cloud-based taxi trace mining framework for smart city
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data application; smart city; distributed trajectory pattern mining;
   distributed trajectory clustering; Spark
ID BIG DATA; SIMULATION
AB As a well-known field of big data applications, smart city takes advantage of massive data analysis to achieve efficient management and sustainable development in the current worldwide urbanization process. An important problem in smart city is how to discover frequent trajectory sequence pattern and cluster trajectory. To solve this problem, this paper proposes a cloud-based taxi trajectory pattern mining and trajectory clustering framework for smart city. Our work mainly includes (1) preprocessing raw Global Positioning System trace by calling the Baidu API Geocoding; (2) proposing a distributed trajectory pattern mining (DTPM) algorithm based on Spark; and (3) proposing a distributed trajectory clustering (DTC) algorithm based on Spark. The proposed DTPM algorithm and DTC algorithm can overcome the high input/output overhead and communication overhead by adopting in-memory computation. In addition, the proposed DTPM algorithm can avoid generating redundant local trajectory patterns to significantly improve the overall performance. The proposed DTC algorithm can enhance the performance of trajectory similarity computation by transforming the trajectory similarity calculation into AND and OR operators. Experimental results indicate that DTPM algorithm and DTC algorithm can significantly improve the overall performance and scalability of trajectory pattern mining and trajectory clustering on massive taxi trace data. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Liu, Jin; Yu, Xiao; Hong, Liang] Wuhan Univ, Comp Sch, State Key Lab Software Engn, Wuhan, Peoples R China.
   [Xu, Zheng] Minist Publ Secur, Res Inst 3, Shanghai, Peoples R China.
   [Choo, Kim-Kwang Raymond] Univ Texas San Antonio, Dept Informat Syst & Cyber Secur, San Antonio, TX USA.
   [Choo, Kim-Kwang Raymond] Univ South Australia, Sch Informat Technol & Math Sci, Adelaide, SA, Australia.
   [Hong, Liang] Wuhan Univ, Sch Informat Management, Wuhan, Peoples R China.
   [Cui, Xiaohui] Wuhan Univ, Int Sch Software, Wuhan, Peoples R China.
C3 Wuhan University; Ministry of Public Security (China); University of
   Texas System; University of Texas at San Antonio (UTSA); University of
   South Australia; Wuhan University; Wuhan University
RP Xu, Z (corresponding author), Minist Publ Secur, Res Inst 3, Shanghai, Peoples R China.
EM xuzheng@shu.edu.cn
RI Choo, Kim-Kwang Raymond/A-3634-2009
OI Choo, Kim-Kwang Raymond/0000-0001-9208-5336; cui,
   xiaohui/0000-0001-6079-009X
FU National Natural Science Foundation of China [61572374, U1135005,
   61303025, 61363030, 61440054]
FX This work is partly supported by the grants of National Natural Science
   Foundation of China (61572374, U1135005, 61303025, 61363030, 61440054).
CR Anchalia PP, 2013, INT C INFO SCI APPL
   [Anonymous], P VLDB ENDOWMENT, DOI DOI 10.1371/J0URNAL.P0NE.0103456
   Han B, 2015, IEEE T MOBILE COMPUT, V14, P416, DOI 10.1109/TMC.2013.119
   Castro Pablo Samuel, 2012, Pervasive Computing. Proceedings of the 10th International Conference, Pervasive 2012, P57, DOI 10.1007/978-3-642-31205-2_4
   Castro PS, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2543581.2543584
   Ceikuté V, 2015, IEEE INT CONF MOB DA, P14, DOI 10.1109/MDM.2015.29
   Chen D, 2015, IEEE T PARALL DISTR, V26, P847, DOI 10.1109/TPDS.2014.2311805
   Chen D, 2015, IEEE T COMPUT, V64, P707, DOI 10.1109/TC.2013.2295806
   Chen D, 2013, FUTURE GENER COMP SY, V29, P1309, DOI 10.1016/j.future.2012.03.006
   Chen ZB, 2011, PROC INT CONF DATA, P900, DOI 10.1109/ICDE.2011.5767890
   Giannotti F, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P330
   Guande Qi, 2011, 2011 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops 2011). PerCom-Workshops 2011: 2011 IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops 2011), P384, DOI 10.1109/PERCOMW.2011.5766912
   Han B, 2012, INT CON DISTR COMP S, P142, DOI 10.1109/ICDCS.2012.31
   Jara AJ, 2015, SOFTWARE PRACT EXPER, V45, P1145, DOI 10.1002/spe.2274
   Jiang R, P IEEE REG 10 C TENC, P1
   Kharrat A., 2008, Headway in Spatial Data Handling, P631
   Lee J G, 2007, SIGMOD C, P593, DOI DOI 10.1145/1247480.1247546
   Lee JG, 2008, PROC VLDB ENDOW, V1, P1081, DOI 10.14778/1453856.1453972
   Li XL, 2012, FRONT COMPUT SCI-CHI, V6, P111, DOI 10.1007/s11704-011-1192-6
   Li ZH, 2010, LECT NOTES COMPUT SC, V5982, P32
   Luo Wuman, 2013, SIGMOD, P713
   Mohan P, 2008, SENSYS'08: PROCEEDINGS OF THE 6TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P323
   Mohebi A, 2016, SOFTWARE PRACT EXPER, V46, P107, DOI 10.1002/spe.2341
   Morzy M, 2007, LECT NOTES ARTIF INT, V4571, P667
   Nanni M, 2006, J INTELL INF SYST, V27, P267, DOI 10.1007/s10844-006-9953-7
   Qiao SJ, 2015, IEEE T INTELL TRANSP, V16, P1188, DOI 10.1109/TITS.2014.2353302
   Qiao SJ, 2010, INT J COMPUT INT SYS, V3, P343
   Roh GP, 2010, LECT NOTES COMPUT SC, V5982, P47
   Song CM, 2010, SCIENCE, V327, P1018, DOI 10.1126/science.1177170
   Srikant R., 1996, MINING SEQUENTIAL PA, DOI [10.1007/BFb0014140, DOI 10.1007/BFB0014140]
   Wang LZ, 2016, CLUSTER COMPUT, V19, P793, DOI 10.1007/s10586-016-0569-6
   Wang LZ, 2015, KNOWL-BASED SYST, V79, P43, DOI 10.1016/j.knosys.2014.10.004
   Wang LZ, 2014, COMPUT SCI ENG, V16, P41, DOI 10.1109/MCSE.2014.52
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P739, DOI 10.1016/j.future.2012.09.001
   Wei L., 2012, P 18 ACM SIGKDD INT, P195, DOI [10.1145/2339530.2339562, DOI 10.1145/2339530.2339562]
   Won JI, 2009, 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING, P299, DOI 10.1109/CIDM.2009.4938663
   Yang J, 2006, LECT NOTES COMPUT SC, V3896, P664
   Yuan D, 2013, IEEE T PARALL DISTR, V24, P1234, DOI 10.1109/TPDS.2013.20
   Yuan J., 2010, P 18 SIGSPATIAL INT, P99, DOI DOI 10.1145/1869790.1869807
   Zhao WZ, 2009, LECT NOTES COMPUT SC, V5931, P674, DOI 10.1007/978-3-642-10665-1_71
   Zheng Y, 2011, UBICOMP'11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P89, DOI 10.1145/2030112.2030126
NR 41
TC 22
Z9 25
U1 2
U2 64
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2017
VL 47
IS 8
SI SI
BP 1081
EP 1094
DI 10.1002/spe.2435
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FA1LW
UT WOS:000405202100004
OA Bronze
DA 2024-07-18
ER

PT J
AU Jayaraman, S
   Jayaraman, B
   Lessa, D
AF Jayaraman, S.
   Jayaraman, B.
   Lessa, D.
TI Compact visualization of Java program execution
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE visualization of Java program execution; sequence diagrams; horizontal
   and vertical compaction; regular-expression labels; tandem repeats;
   exclusion filters; out-of-model calls; multi-threaded execution;
   experimental results
AB The context of this work is a practical, open-source visualization system, called JIVE, that supports two forms of runtime visualizations of Java programs - object diagrams and sequence diagrams. They capture, respectively, the current execution state and execution history of a Java program. These diagrams are similar to those found in the UML for specifying design-time decisions. In our work, we construct these diagrams at execution time, thereby ensuring continuity of notation from design to execution. In so doing, a few extensions to the UML notation are proposed in order to better represent runtime behavior. As sequence diagrams can become long and unwieldy, we present techniques for their compact representation. A key result in this paper is a novel labeling scheme based upon regular expressions to compactly represent long sequences and an O(r(2)) algorithm for computing these labels, where r is the length of the input sequence, based upon the concept of tandem repeats' in a sequence. Horizontal compaction greatly helps minimize the extent of white space in sequence diagrams by the elimination of object lifelines and also by grouping lifelines together. We propose a novel extension to the sequence diagram to deal with out-of-model calls when the lifelines of certain classes of objects are filtered out of the visualization, but method calls may occur between in-model and out-of-model calls. The paper also presents compaction techniques for multi-threaded Java execution with different forms of synchronization. Finally, we present experimental results from compacting the runtime visualizations of a variety of Java programs and execution trace sizes in order to demonstrate the practicality and efficacy of our techniques. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Jayaraman, S.; Jayaraman, B.; Lessa, D.] Amrita Univ, Dept Comp Sci & Engn, Amrita Vishwa Vidyapeetham, Amritapuri, India.
   [Jayaraman, S.; Jayaraman, B.; Lessa, D.] SUNY Buffalo, Dept Comp Sci & Engn, Buffalo, NY USA.
C3 Amrita Vishwa Vidyapeetham; Amrita Vishwa Vidyapeetham Amritapuri; State
   University of New York (SUNY) System; State University of New York
   (SUNY) Buffalo
RP Jayaraman, S (corresponding author), Amrita Univ, Dept Comp Sci & Engn, Amrita Vishwa Vidyapeetham, Amritapuri, India.
EM swaminathanj@am.amrita.edu
RI J, Swaminathan/AFZ-7856-2022
OI J, Swaminathan/0000-0001-5646-3213
CR [Anonymous], THESIS
   [Anonymous], P 11 EUR C SOFTW MAI
   [Anonymous], 2008, PROGRAM COMPREHENSIO
   [Anonymous], 13 INT S DAT PROGR L
   [Anonymous], P 12 IEEE INT WORKSH
   [Anonymous], P ACM SIGCSE RAL NC
   Bennett C, 2008, J SOFTW MAINT EVOL-R, V20, P291, DOI 10.1002/smr.372
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   Cornelissen B, 2007, INT C PROGRAM COMPRE, P49
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   CZYZ J.K., 2007, Proceedings of the 2007 OOPSLA Workshop on Eclipse Technology Exchange (Montreal, Quebec, Canada, October 21 - 21, P31, DOI [10.1145/1328279.1328286, DOI 10.1145/1328279.1328286]
   De Pauw W, 2002, LECT NOTES COMPUT SC, V2269, P151
   De Pauw W, 1998, PROCEEDINGS OF THE FOURTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS, P219
   Gestwicki P., 2005, P 2005 ACM S SOFTWAR, P95
   Grati H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P87, DOI 10.1109/WCRE.2010.18
   Jerding DF, 1997, PROC INT CONF SOFTW, P360, DOI 10.1145/253228.253356
   Lange DB, 1997, COMPUTER, V30, P63, DOI 10.1109/2.589912
   Myers D, 2010, EUR CON SFTWR MTNCE, P41, DOI 10.1109/CSMR.2010.19
   Noda K., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P167, DOI 10.1109/WCRE.2012.26
   Noda K, 2012, IEICE T INF SYST, VE95D, P959, DOI 10.1587/transinf.E95.D.959
   Sharp R, 2005, P 3 IEEE INT WORKSHO, P1
   Shneiderman B, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P336, DOI 10.1109/VL.1996.545307
   Stoye J, 2002, THEOR COMPUT SCI, V270, P843, DOI 10.1016/S0304-3975(01)00121-9
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
   Taniguchi K, 2005, Eighth International Workshop on Principles of Software Evolution, Proceedings, P148, DOI 10.1109/IWPSE.2005.19
   Toda T, 2013, ASIA PAC SOFWR ENG, P25, DOI 10.1109/APSEC.2013.107
   Trümper J, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P133
NR 27
TC 14
Z9 14
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2017
VL 47
IS 2
BP 163
EP 191
DI 10.1002/spe.2411
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EK2RP
UT WOS:000393774700001
DA 2024-07-18
ER

PT J
AU Quinton, C
   Romero, D
   Duchien, L
AF Quinton, Clement
   Romero, Daniel
   Duchien, Laurence
TI SALOON: a platform for selecting and configuring cloud environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software product line; cloud computing; feature modeling; model driven
   engineering
ID FEATURE MODELS
AB Migrating legacy systems or deploying a new application to a cloud environment has recently become very trendy, because the number of cloud providers available is still increasing. These cloud environments provide a wide range of resources at different levels of functionality, which must be appropriately configured by stakeholders for the application to run properly. Handling this variability during the configuration and deployment stages is known as a complex and error-prone process, usually made in an ad hoc manner. In this paper, we propose SALOON, a software product lines-based platform to face these issues. We describe the architecture of the SALOON platform, which relies on feature models combined with a domain model used to select among cloud environments a well-suited one. SALOON supports stakeholders while configuring the selected cloud environment in a consistent way and automates the deployment of such configurations through the generation of executable configuration scripts. This paper also reports on some experiments, showing that using SALOON significantly reduces time to configure a cloud environment compared with a manual approach and provides a reliable way to find a correct and suitable configuration. Moreover, our empirical evaluation shows that our approach is effective and scalable to properly deal with a significant number of cloud environments. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Quinton, Clement; Romero, Daniel; Duchien, Laurence] Univ Lille 1, Inria Lille Nord Europe, LIFL UMR CNRS 8022, F-59655 Villeneuve Dascq, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite de Lille
RP Quinton, C (corresponding author), Univ Lille 1, Inria Lille Nord Europe, LIFL UMR CNRS 8022, F-59655 Villeneuve Dascq, France.
EM clement.quinton@inria.fr
FU EU
FX This work was supported by the EU under project FP7 IP PaaSage.
CR [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2009, DEP ELECT ENG COMPUT
   [Anonymous], 2009, TECHNICAL REPORT
   [Anonymous], 2013, MOD BAS CLOUD PLATF
   [Anonymous], 2005, INT WORKSH SOFTW FAC
   Bak K, 2011, LECT NOTES COMPUT SC, V6563, P102, DOI 10.1007/978-3-642-19440-5_7
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2006, LECT NOTES COMPUT SC, V4143, P399
   Benlachgar A, 2013, 2013 ACS INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS (AICCSA)
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2487, P156
   Czarnecki K, 2007, SOFTWARE PROCESS IMP, V10, P143
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Den Haan J, 2014, TECHNICAL REPORT
   Di Cosmo Roberto, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P156, DOI 10.1007/978-3-642-33826-7_11
   Dougherty B, 2012, FUTURE GENER COMP SY, V28, P371, DOI 10.1016/j.future.2011.05.009
   Eichelberger H, 2012, P 10 INT C SERV OR C, P516, DOI [10.1007/978-3-642-34321-6_35, DOI 10.1007/978-3-642-34321-6_35]
   Eichelberger Holger., 2013, Proceedings of the 17th International Software Product Line Conference (SPLC'13), P12
   Garcia-Galan Jesus, 2013, CLOSER 2013. 3rd International Conference on Cloud Computing and Service Science. Proceedings, P416
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Gomez A, 2010, VAMOS, V37, P61
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Jussien Narendra., 2008, Open-Source Software for Integer and Contraint Programming, OSSICP'08, P1
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Mazo R, 2011, ENASE 2011: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P188
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Paraiso F., 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P392, DOI 10.1109/CLOUD.2012.79
   Pleuss A, 2012, J SYST SOFTWARE, V85, P2261, DOI 10.1016/j.jss.2011.08.008
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Quinton C, 2014, IEEE INT CONF CLOUD, P144, DOI 10.1109/CLOUD.2014.29
   Quinton Clement., 2013, P 17 INT SOFTWARE PR, P162
   Riebisch M, 2002, 6 WORLD C INT DES PR, P2
   Rosenmuller M, 2011, P 5 INT WORKSH VAR M, P11, DOI DOI 10.1145/1944892.1944894
   Ruiz-Alvarez Arkaitz., 2011, Proceedings of the 2nd international workshop on Scientific cloud computing, ScienceCloud '11, P39, DOI DOI 10.1145/1996109.1996117
   Schmid K, 2013, J UNIVERS COMPUT SCI, V19, P233
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   van der Aalst WMP, 2010, LECT NOTES COMPUT SC, V6426, P8
   Wittern E., 2012, SERVICE ORIENTED COM, P127, DOI 10.1007/978-3- 642-34321-6_9
   Zhang W, 2008, LECT NOTES COMPUT SC, V5030, P186, DOI 10.1007/978-3-540-68073-4_18
NR 44
TC 21
Z9 21
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2016
VL 46
IS 1
SI SI
BP 55
EP 78
DI 10.1002/spe.2311
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA6HI
UT WOS:000367903200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kumar, M
   Sharma, A
   Kumar, R
AF Kumar, Manoj
   Sharma, Arun
   Kumar, Rajesh
TI An empirical evaluation of a three-tier conduit framework for
   multifaceted test case classification and selection using fuzzy-ant
   colony optimisation approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ambiguity; fuzzy entropy; fitness evaluation index; multidimensional
   fitness search space; multifaceted classification; test cases; test case
   fitness
AB The test case optimisation is an NP-complete, knowledge-driven, data-driven, and multidimensional search space partitioning and dimension reduction problem. In the multifaceted test case classification, partitioning and reducing the multidimensional test case fitness search space is the critical problem. The vague nature of fitness parameters, conflicting nature objectives, and ambiguity in the test case fitness evaluation have created and increased the uncertainty, the imprecision, and the incompleteness in the test case classification and selection. Because of the increasing ambiguity, the complexity, and the cost of software testing, automated test case classification and selection has emerged as an appropriate tool to classify test cases into predefined categories using the multifaceted concept. Most of the test cases affecting the performance of the classifier are irrelevant and redundant. A strong need therefore exists to devise an intelligent technique to identify and remove test cases affecting the performance of the classifier. For increasing the performance of classifier, multifaceted test case selection is used to reduce fitness search space to be searched. In this paper, a three-tier sequential framework is proposed for a multifaceted test case classification and selection. The first stage of the proposed framework is the fuzzy synthesis-based filtration approach for multifaceted test case fitness evaluation and classification. The second stage of the proposed framework is the fuzzy entropy-based filtration technique with a backward search strategy, used for estimating and reducing the ambiguity in test case fitness evaluation, classification, and selection. The third stage of the proposed framework is the ant colony optimisation-based wrapper technique with a forward search strategy, employed to select test cases from the output (reduced) test suite by the second stage. The proposed framework is tested on artefacts of benchmark applications. The results of the empirical study clearly show that the third stage of our proposed method outperforms the second and first stages, and the performance of the algorithms used in all three stages increases on average as the stages are escalating. The classification accuracy is enhanced by reducing the ambiguity in fitness and the classification of test cases, increasing the number of test cases accurately classified, and reducing the number in the test case pool to be exercised. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Kumar, Manoj] Galgotias Univ, Dept Comp Applicat, Greater Noida, India.
   [Sharma, Arun] Krishna Inst Engn & Technol, Dept CSE, Ghaziabad, India.
   [Kumar, Rajesh] Thapar Univ, Sch Math & Comp Applicat, Patiala 147004, Punjab, India.
C3 Galgotias University; KIET Group of Institutions; KIET School of
   Engineering & Technology; Thapar Institute of Engineering & Technology
RP Kumar, M (corresponding author), Galgotias Univ, Dept Comp Applicat, Greater Noida, India.
EM m_pachariya1@yahoo.com
RI Sharma, Arun/ABC-7356-2020; Pachariya, Manoj/A-9646-2016
OI Sharma, Arun/0000-0002-9404-4519; 
CR Aghdam MH, 2009, EXPERT SYST APPL, V36, P6843, DOI 10.1016/j.eswa.2008.08.022
   Al-Ani A, 2005, PROC WRLD ACAD SCI E, V4, P35
   Arvinder K., 2011, INT J COMPUTERS APPL, V32, P30
   Causevic Adnan, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P223, DOI 10.1049/ic.2012.0029
   Chittimalli PK, 2009, IEEE T SOFTWARE ENG, V35, P452, DOI 10.1109/TSE.2009.4
   de Souza LS, 2011, PROC INT C TOOLS ART, P245, DOI 10.1109/ICTAI.2011.45
   DELUCA A, 1972, INFORM CONTROL, V20, P301, DOI 10.1016/S0019-9958(72)90199-4
   Dorigo M., 1997, IEEE Transactions on Evolutionary Computation, V1, P53, DOI 10.1109/4235.585892
   Dorigo M, 1996, IEEE T SYST MAN CY B, V26, P29, DOI 10.1109/3477.484436
   Dudas R, 1973, PATTERN CLASSIFICATI
   Haidry SEZ, 2013, IEEE T SOFTWARE ENG, V39, P258, DOI 10.1109/TSE.2012.26
   Kumar Manoj, 2011, WSEAS Transactions on Information Science and Applications, V8, P440
   Kumar M., 2011, J SOFTWARE ENG APPL, V4, P550, DOI [10.4236/jsea.2011.49064, DOI 10.4236/JSEA.2011.49064]
   Kumar M, 2012, CHIANG MAI J SCI, V39, P486
   Kumars M, 2013, P INT C COMP SCI WIL, P298
   Kumars M, 2014, FUZY ENTROP IN PRESS
   Maias CLB, 2012, P 3 BRAZ WORKSH SEAR
   Mala D.J., 2010, ACM SIGSOFT SOFTW EN, V35, P1, DOI DOI 10.1145/1764810.1764824
   Mala D.J., 2009, INT J SOFTWARE ENG, V2, P15
   Mirarab S, 2012, IEEE T SOFTWARE ENG, V38, P936, DOI 10.1109/TSE.2011.56
   Ray M, 2013, IET SOFTW, V7, P29, DOI 10.1049/iet-sen.2011.0081
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Sharma Manoj, 2011, Int. Rev. Comput. Softw., V6, P512
   Singh Y., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI [DOI 10.1145/1668862.1668869, 10.1145/1811226.1811238]
   Uguz H, 2011, KNOWL-BASED SYST, V24, P1024, DOI 10.1016/j.knosys.2011.04.014
   Vans Rijsbergen CL, 1979, INFORM RETRIEVAL
   Vieira SM, 2010, EXPERT SYST APPL, V37, P2714, DOI 10.1016/j.eswa.2009.08.026
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zielinskis K, 2005, P 3 INT C COMP INT R
NR 30
TC 7
Z9 7
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2015
VL 45
IS 7
BP 949
EP 971
DI 10.1002/spe.2263
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8EW
UT WOS:000355733900005
DA 2024-07-18
ER

PT J
AU Lilis, Y
   Savidis, A
AF Lilis, Yannis
   Savidis, Anthony
TI An integrated implementation framework for compile-time metaprogramming
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compile-time metaprograms; multi-stage languages; staged compilation;
   metaprogramming model
ID JAVA
AB Compile-time metaprograms are programs executed during the compilation of a source file, usually targeting to update its source code. Even though metaprograms are essentially programs, they are typically treated as exceptional cases without sharing common practices and development tools. Toward this direction, we identify a set of primary requirements related to language implementation, metaprogramming features, software engineering support, and programming environments and elaborate on addressing these requirements in the implementation of a metaprogramming language. In particular, we introduce the notion of integrated compile-time metaprograms, as coherent programs assembled from specific metacode fragments present in the source code. We show the expressiveness of this programming model and illustrate its advantages through various metaprogram scenarios. Additionally, we present an integrated tool chain, supporting full-scale build features and compile-time metaprogram debugging. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Lilis, Yannis; Savidis, Anthony] Fdn Res & Technol Hellas, Inst Comp Sci, Iraklion, Crete, Greece.
   [Savidis, Anthony] Univ Crete, Dept Comp Sci, Iraklion, Crete, Greece.
C3 Foundation for Research & Technology - Hellas (FORTH); University of
   Crete
RP Lilis, Y (corresponding author), Fdn Res & Technol Hellas, Inst Comp Sci, Iraklion, Crete, Greece.
EM lilis@ics.forth.gr
CR Abrahams D, 2004, C++ template metaprogramming: concepts, tools, and techniques from Boost and beyond
   [Anonymous], DELTA PROGRAMMING LA
   [Anonymous], 2000, The C++ Programming Language
   [Anonymous], TECHNICAL REPORT
   Bawden Alan., 1999, P WORKSHOP PARTIAL E, P88
   Calcagno C., 2001, BYTECODE COMPILED TY
   Czarnecki K, 2003, LECT NOTES COMPUT SC, V3016, P51
   Dybvig RK, 1992, TECHNICAL REPORT
   Dybvig RK, 2009, The scheme programming language
   Fabien Fleutot, 2007, METALUA MANUAL
   Gamma Erich., 1994, DESIGN PATTERNS
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   JetBrains, INT GROOV GRAILS
   Kernighan B.W., 1988, The C Programming Language
   Kohlbecker Eugene., 1986, P 1986 ACM C LISP FU, P151
   Lilis Y, 2012, LNCS, V7527, P1, DOI DOI 10.1007/978-3-642-33176-3_1
   Lilis Y, 2012, LECT NOTES COMPUT SC, V7304, P155, DOI 10.1007/978-3-642-30561-0_12
   Microsoft Corporation, US INTELLISENSE
   Moore JS, 1976, 765 CSL
   Nicklisch-Franken J, 2010, LEKSAH INTEGRATED DE
   Palmer Z, 2011, ACM SIGPLAN NOTICES, V46, P939, DOI 10.1145/2076021.2048137
   Porkolab Z., 2006, 5 INT C GEN PROGR CO, P255, DOI DOI 10.1145/1173706.1173746
   Savidis A, 2007, RISE 2007, P99
   Savidis A, 2005, RISE 2005, V3943, P113, DOI DOI 10.1007/11751113_9
   Seibel P., 2006, Practical common lisp
   Sheard T, 2002, ACM SIGPLAN NOTICES, V37, P60, DOI 10.1145/636517.636528
   Sheard T., 2001, Semantics, Applications, and Implementation of Program Generation. Second International Workshop, SAIG 2001. Proceedings (Lecture Notes in Computer Science Vol.2196), P2
   Sheard T, 1999, LECT NOTES COMPUT SC, V1608, P207
   Sheard T., 2000, Introduction to Multistage Programming using MetaML. Revision
   Skalski Kamil., 2004, META PROGRAMMING NEM
   Subramaniam V., 2013, PROGRAMMING GROOVY 2
   Taha W, 2003, LECT NOTES COMPUT SC, V3016, P30
   Taha W, 1997, ACM SIGPLAN NOTICES, V32, P203, DOI 10.1145/258994.259019
   Tratt L, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1391956.1391958
   Tratt Laurence., 2005, DLS 05, P49, DOI DOI 10.1145/1146841.1146846
   Veldhuizen T., 1995, C++ Report, V7, P36
   WEISE D, 1993, SIGPLAN NOTICES, V28, P156, DOI 10.1145/173262.155105
   Westbrook E, 2010, ACM SIGPLAN NOTICES, V45, P400, DOI 10.1145/1809028.1806642
NR 38
TC 3
Z9 3
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2015
VL 45
IS 6
BP 727
EP 763
DI 10.1002/spe.2241
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG1LA
UT WOS:000353032900001
DA 2024-07-18
ER

PT J
AU Zhu, JL
   Huang, J
   Zhou, DC
   Carminati, F
   Zhang, GP
   He, Q
AF Zhu, Jianlin
   Huang, Jin
   Zhou, Daicui
   Carminati, Federico
   Zhang, Guoping
   He, Qiang
TI Identifying composite crosscutting concerns through semi-supervised
   learning
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE aspect mining; composite crosscutting concerns; link analysis;
   semi-supervised learning
AB Aspect mining improves the modularity of legacy software systems through identifying their underlying crosscutting concerns (CCs). However, a realistic CC is a composite one that consists of CC seeds and relative program elements, which makes it a great challenge to identify a composite CC. In this paper, inspired by the state-of-the-art information retrieval techniques, we model this problem as a semi-supervised learning problem. First, the link analysis technique is adopted to generate CC seeds. Second, we construct a coupling graph, which indicates the relationship between CC seeds. Then, we adopt community detection technique to generate groups of CC seeds as constraints for semi-supervised learning, which can guide the clustering process. Furthermore, we propose a semi-supervised graph clustering approach named constrained authority-shift clustering to identify composite CCs. Two measurements, namely, similarity and connectivity, are defined and seeded graph is generated for clustering program elements. We evaluate constrained authority-shift clustering on numerous software systems including large-scale distributed software system. The experimental results demonstrate that our semi-supervised learning is more effective in detecting composite CCs. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Zhu, Jianlin] South Cent Univ Nationalities, Coll Comp Sci, Wuhan 430074, Peoples R China.
   [Huang, Jin] China Shipbldg Ind Corp, Res Inst 709, Wuhan 430074, Peoples R China.
   [Zhou, Daicui] Cent China Normal Univ, Key Lab Quark & Lepton Phys, Minist Educ, Wuhan 430079, Peoples R China.
   [Carminati, Federico] CERN, CH-1211 Geneva 23, Switzerland.
   [Zhang, Guoping] Cent China Normal Univ, Coll Phys Sci & Technol, Wuhan 430079, Peoples R China.
   [He, Qiang] Swinburne Univ Technol, Fac Informat & Commun Technol, Melbourne, Vic 3122, Australia.
C3 South Central Minzu University; China Shipbuilding Industry Corporation;
   Central China Normal University; European Organization for Nuclear
   Research (CERN); Central China Normal University; Swinburne University
   of Technology
RP Huang, J (corresponding author), China Shipbldg Ind Corp, Res Inst 709, Wuhan 430074, Peoples R China.
EM derick0320@gmail.com
RI Zhang, Guoping/K-6356-2013
OI Zhang, Guoping/0000-0002-8119-2731; huang, jin/0000-0001-6214-9781
FU ALICE Collaboration
FX We thank the ALICE Collaboration and ALICE DAQ team for supporting this
   work. We would like to thank Sylvain Chapeland for providing us DAQ
   system's source codes, documents, and technique support.
CR Altini V, 2009, 2009 16TH IEEE-NPSS REAL TIME CONFERENCE, P236, DOI 10.1109/RTC.2009.5321750
   [Anonymous], 2002, P 19 INT C MACHINE L
   [Anonymous], 2002, ADV NEURAL INF PROCE
   [Anonymous], 2003, P 18 INT JOINT C ART
   [Anonymous], 2003, P ICML2003 WORKSHOP
   Arthur D., 2006, Proceedings of the Twenty-Second Annual Symposium on Computational Geometry (SCG'06), P144, DOI 10.1145/1137856.1137880
   Basu S, 2002, ICML
   Breu S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/ASE.2004.1342754
   Cardie C., 2000, P 17 INT C MACH LEAR, P1103
   Cho M, 2010, PROC CVPR IEEE, P3193, DOI 10.1109/CVPR.2010.5540081
   Comaniciu D, 2002, IEEE T PATTERN ANAL, V24, P603, DOI 10.1109/34.1000236
   Demiriz A., 1999, Artificial Neural Networks in Engineering ANNIE-99, P809
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   He LL, 2006, INT J COMPUT SCI NET, V6, P247
   HUANG J, 2010, P 5 INT C FRONT COMP
   Huang JY, 2006, LECT NOTES ARTIF INT, V4213, P187
   JAVA AJA, 2008, KDD WORKSH WEB MIN W
   Jeh G., 2002, P 8 ACM SIGKDD INT C, P538, DOI DOI 10.1145/775047.775126
   KESSLER MM, 1963, AM DOC, V14, P10, DOI 10.1002/asi.5090140103
   Klein D., 2002, Tech. rep., P307
   KLEINBERG J, 1998, P 9 ACM SIAM S DISCR, P688
   Liu XH, 2008, PROCEEDINGS OF THE 2008 IEEE INTERNATIONAL CONFERENCE ON NETWORKING, ARCHITECTURE, AND STORAGE, P278, DOI 10.1109/NAS.2008.58
   Marin M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/WCRE.2004.23
   Marin M, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P101, DOI 10.1109/SCAM.2007.25
   Meila M, 2007, PROCEEDINGS OF THE SEVENTH SIAM INTERNATIONAL CONFERENCE ON DATA MINING, P135
   MOLDOVAN GS, 2006, STUDIA UNIVERSITATIS, P53
   MOLDOVAN GS, 2006, P LINK ASP TECHN EV
   Monteiro M., 2005, Proceedings of the 4th international conference on Aspect-oriented software development, P111
   MORALES OAM, 2004, THESIS DELFT U TECHN
   Newman MEJ, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.026113
   Ng AY, 2002, ADV NEUR IN, V14, P849
   Olson DL., 2008, Advanced data mining techniques, V1st, P138, DOI [10.1007/978-3-540-76917-0, DOI 10.1007/978-3-540-76917-0]
   Page L, 1998, P 7 INT WORLD WID WE, DOI DOI 10.1007/978-3-319-08789-4_10
   Satuluri V, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P737
   Satuluri Venu, 2011, P 14 INT C EXT DAT T, P343
   STORZER M, 2006, P 20 EUR C OBJ OR PR, P17
   Tonella P, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P112, DOI 10.1109/WCRE.2004.13
   Wagstaff K., 2001, P 18 INT C MACH LEAR, P577, DOI DOI 10.1109/TPAMI.2002.1017616
   Yoon S.-H., 2010, WWW'10: Proceedings of the 19th international conference on World Wide Web, P1213
   Zhang C., 2007, P 6 INT C ASPECT ORI, P226
   ZHANG C, 2011, IEEE T SOFTWARE ENG, V8, P1
   Zhou D., 2005, P 22 INT C MACH LEAR, P1036, DOI DOI 10.1145/1102351.1102482
   Zhou Y., 2009, PROC VLDB ENDOW, V2, P718, DOI DOI 10.14778/1687627.1687709
   Zhu JL, 2013, INT J SOFTW ENG KNOW, V23, P559, DOI 10.1142/S0218194013500162
NR 44
TC 1
Z9 1
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2014
VL 44
IS 12
BP 1525
EP 1545
DI 10.1002/spe.2234
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AT2AR
UT WOS:000344733600006
DA 2024-07-18
ER

PT J
AU Chen, GBA
   Qi, ZW
   Huang, SQ
   Ni, KQ
   Zheng, YD
   Binder, W
   Guan, HB
AF Chen, Gengbiao
   Qi, Zhengwei
   Huang, Shiqiu
   Ni, Kangqi
   Zheng, Yudi
   Binder, Walter
   Guan, Haibing
TI A refined decompiler to generate C code with high readability
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE reverse engineering; decompilation; C language
ID RECONSTRUCTION
AB As a key part of reverse engineering, decompilation plays a very important role in software security and maintenance. A number of tools, such as Boomerang and IDA Hex_rays, have been developed to translate executable programs into source code in a relatively high-level language. Unfortunately, most existing decompilation tools suffer from low accuracy in identifying variables, functions, and composite structures, resulting in poor readability. To address these limitations, we present a practical decompiler called C-Decompiler for Windows C programs that (i) uses a shadow stack to perform refined data flow analysis, (ii) adopts inter-basic-block register propagation to reduce redundant variables, and (iii) recognizes library (i.e., Standard Template Library) functions by signatures. We evaluate and compare the decompilation quality of C-Decompiler with two existing tools, Boomerang and IDA Hex_rays, considering four aspects: function analysis, variable expansion rate, total percentage reduction, and cyclomatic complexity. Our experimental results show that on average, C-Decompiler has the highest total percentage reduction of 55.91%, lowest variable expansion rate of 55.79%, and the same cyclomatic complexityastheoriginal source code for each considered application. Furthermore, in our experiments, C-Decompiler is able to recognize functions with a lower false positive and false negative rate than the other decompilers. A case study and our evaluation results confirm that C-Decompiler is a practical tool to produce highly readable C-style code. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Chen, Gengbiao; Qi, Zhengwei; Huang, Shiqiu; Ni, Kangqi; Zheng, Yudi; Guan, Haibing] Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Sch Software, Shanghai Key Lab Scalable Comp & Syst, Shanghai 200030, Peoples R China.
   [Binder, Walter] Univ Lugano, Fac Informat, Lugano, Switzerland.
C3 Shanghai Jiao Tong University; Universita della Svizzera Italiana
RP Guan, HB (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai 200030, Peoples R China.
EM hbguan@sjtu.edu.cn
RI guan, haibing/G-8142-2011
OI guan, haibing/0000-0002-4714-7400; Binder, Walter/0000-0002-2477-2182
FU Program for PCSIRT and NCET of MOE; National Natural Science Foundation
   of China [61073151]; 863 Program [2011AA01A202, 2012AA010905]; 973
   Program [2012CB723401]; International Cooperation Program of China
   [2011DFA10850]; Sino-Swiss Science and Technology Cooperation (SSSTC)
   [EG26-032010, IP04-092010];  [MOE-INTEL-11-05]
FX This work is built on previous work with the contributions of Zhuo Wang,
   Ruoyu Zhang, and KanZhou. Also, this work is supported by the Program
   for PCSIRT and NCET of MOE, National Natural Science Foundation of China
   (grant no. 61073151), 863 Program (grant nos. 2011AA01A202 and
   2012AA010905), 973 Program (grant no. 2012CB723401), the International
   Cooperation Program of China (grant no. 2011DFA10850), MOE-INTEL-11-05,
   and the Sino-Swiss Science and Technology Cooperation (SSSTC) grants
   EG26-032010 and IP04-092010.
CR [Anonymous], 2006, P 2006 INT S SOFTWAR
   Appel A.W., 2002, MODERN COMPILER IMPL, V2nd
   Cifuentes C., 1996, Compiler Construction. 6th International Conference, CC'96. Proceedings, P91
   Cifuentes C, 1998, PROC IEEE INT CONF S, P228, DOI 10.1109/ICSM.1998.738514
   Cifuentes C, 1996, J PROGRAM LANG, V4, P77
   CIFUENTES C, 1995, SOFTWARE PRACT EXPER, V25, P811, DOI 10.1002/spe.4380250706
   Cifuentes C, 2001, SCI COMPUT PROGRAM, V40, P171, DOI 10.1016/S0167-6423(01)00014-4
   Cifuentes Cristina., 1994, Reverse Compilation Techniques
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Dolgova K, 2008, WORK CONF REVERSE EN, P202, DOI 10.1109/WCRE.2008.20
   Elkarablieh B, 2007, ACM SIGPLAN NOTICES, V42, P387, DOI 10.1145/1297105.1297056
   Emmerik MV, 1994, TECHNICAL REPORT
   Gengbiao Chen, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P150, DOI 10.1109/WCRE.2010.24
   Guo PhilipJ., 2006, P 2006 INT S SOFTWAR, P255
   Katsumata S, 2001, LECT NOTES COMPUT SC, V2028, P352
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Miecznikowski J, 2002, LECT NOTES COMPUT SC, V2304, P111
   Mycroft A, 1999, LECT NOTES COMPUT SC, V1576, P208
   Mycroft A, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P362, DOI 10.1109/WCRE.2001.957844
   Naeem NA, 2006, INT C PROGRAM COMPRE, P327, DOI 10.1109/ICPC.2006.40
   Sæbjornsen A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P117
   SASSAMAN WA, 1966, P SJCC, P235
   SPECTOR A, 1984, COMMUN ACM, V27, P874, DOI 10.1145/358234.358246
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tröger J, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P65, DOI 10.1109/WCRE.2002.1173065
   van Emmerik Michael James, 2007, THESIS U QUEENSLAND
   Vinciguerra L, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P14, DOI 10.1109/WCRE.2003.1287233
   Costa HAX, 2009, WORK CONF REVERSE EN, P311, DOI 10.1109/WCRE.2009.48
NR 28
TC 6
Z9 9
U1 0
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2013
VL 43
IS 11
SI SI
BP 1337
EP 1358
DI 10.1002/spe.2138
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 233IF
UT WOS:000325561000006
DA 2024-07-18
ER

PT J
AU Tsai, WT
   Wu, BD
   Jin, Z
   Huang, Y
   Li, W
AF Tsai, Wei-Tek
   Wu, Budan
   Jin, Zhi
   Huang, Yu
   Li, Wu
TI Ontology patterns for service-oriented software development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ontology; design pattern; SOA software development
ID INFORMATION; DESIGN; WEB; CYC
AB Modern software often uses ontologies as its key component to store data and their relationships. This is different from using an ontology as a stand-alone tool for knowledge sharing and representation. The ontology component needs to work with other software components and needs to evolve as the software evolves. Ontology design has been a research topic for years; however, most of these studies focus on using ontologies as stand-alone applications. This paper studies ontology patterns that can be applied to design ontologies as an integral part of a service-oriented application. The paper first briefly reviews various ontology design issues including a brief survey of existing ontology design patterns. The paper then outlines general principles for using ontologies in software applications, including the needs to incorporate ontology design process as a part of software development processes, design ontologies as a component of an overall software architecture, and use ontologies to enhance software evolution and the role that ontologies can play in software validation. The paper then proposes some common ontology patterns that can be used to design ontologies in service-oriented applications. This is followed by examining two international projects, SENSEI and FCINT, where ontologies are used in service-oriented applications and several ontology design patterns are used. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Tsai, Wei-Tek] Tsinghua Univ, Dept Comp Sci & Technol, Beijing 100084, Peoples R China.
   [Wu, Budan] Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, Beijing 100876, Peoples R China.
   [Jin, Zhi] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
   [Tsai, Wei-Tek; Huang, Yu; Li, Wu] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85287 USA.
C3 Tsinghua University; Beijing University of Posts & Telecommunications;
   Peking University; Arizona State University; Arizona State
   University-Tempe
RP Huang, Y (corresponding author), Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85287 USA.
EM yu.huang.1@asu.edu
FU U.S. Department of Education FIPSE [P116B060433]; U.S. National Science
   Foundation [DUE 0942453]; European Regional Development Fund; Government
   of Romania [181]
FX This project is sponsored by U.S. Department of Education FIPSE project
   P116B060433, U.S. National Science Foundation project DUE 0942453. The
   research is also partly sponsored by the European Regional Development
   Fund and the Government of Romania under the grant no. 181 of
   18.06.2010.
CR [Anonymous], 2005, GENOME BIOL
   [Anonymous], 2009, SIMPL KNOWL ORG SYST
   [Anonymous], P WORKSH BAS ONT ISS
   [Anonymous], 2003, P 2 INT C KNOWLEDGE
   [Anonymous], 2001, TECH REP SMI 2001 08
   [Anonymous], 1992, KNOWLEDGE INTERCHANG
   [Anonymous], 2005, OBO REL ONT
   Apostolou D, 2005, LECT NOTES COMPUT SC, V3416, P157
   Auer S, 2007, LECT NOTES COMPUT SC, V4825, P722, DOI 10.1007/978-3-540-76298-0_52
   Bateman J, 2005, GEN UPPER MODEL 2 0, P1
   Blomqvist E, 2009, K-CAP'09: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON KNOWLEDGE CAPTURE, P41
   Bossche M. V., 2007, 3 INT WORKSH SEM WEB
   Calero C., 2006, Ontologies for software engineering and software technology
   Dahlgren K, 1995, INT J HUM-COMPUT ST, V43, P809, DOI 10.1006/ijhc.1995.1075
   Dahlgren K.G., 1988, NAIVE SEMANTICS NATU
   Davis I., 2004, Relationship: A vocabulary for describing relationships between people
   de Cesare S, ONTOLOGY DRIVEN SOFT
   Der P. V., 1994, P ECAI94 S WORKSH CO, P8
   Elston J, 2011, P 18 INT C CONTR SYS
   Fonseca F, 2002, ANN MATH ARTIF INTEL, V36, P121, DOI 10.1023/A:1015808104769
   Fonseca F, 1999, P 7 ACM INT S ADV GE, P19
   Gamma Erich., 1995, DESIGN PATTERNS ELEM, V206
   Gangemi A, 2005, LECT NOTES COMPUT SC, V3729, P262, DOI 10.1007/11574620_21
   Gangemi A., 2009, Handbook on ontologies, P221, DOI DOI 10.1007/978-3-540-92673-3
   Guha R, 1990, REPRESENTATION INFER
   Guha R. V., 1994, Communications of the ACM, V37, P126, DOI 10.1145/176789.176804
   Holsapple CW, 2002, COMMUN ACM, V45, P42, DOI 10.1145/503124.503147
   HUMPHREYS BL, 1993, B MED LIBR ASSOC, V81, P170
   KARP PD, 1993, ARTIF INTELL, P289
   Katasonov Artem, 2010, 2010 8th IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops), P696, DOI 10.1109/PERCOMW.2010.5470523
   Lee Young Jean, 2010, The Shipment; LEAR, P1
   Lefort Laurent., 2006, Proceedings of the second Australasian workshop on Advances in ontologies-Volume, V72, P31
   LENAT DB, 1995, COMMUN ACM, V38, P33, DOI 10.1145/219717.219745
   LENAT DB, 1990, COMMUN ACM, V33, P30, DOI 10.1145/79173.79176
   Miller G.A., 1990, Wordnet: An on-Line Lexical Database
   Noy NF, 1997, AI MAG, V18, P53
   Sowa J, 2000, KNOWLEDGE REPRESENTA, V594
   Tsai W.T., 2005, IASTED 9, P160
   Tsai W. T., 2010, P 2010 SPRING SIM MU, P176
   Tsai Wei-Tek., 2010, OIC: Ontology-based Intelligent Customization
   van der Vet P, 1994, TECHNICAL REPORT
   VANDERVET PE, 1993, J CHEM INF COMP SCI, V33, P564, DOI 10.1021/ci00014a007
   W3C, 2004, RDF RDF SCHEM
   W3C, 2004, Web Ontology Language
   W3C, ONT DRIV ARCH POT US
   W3C, 2009, WEB ONT LANG 2
   Wang X, 2008, WWW
   Wikipedia, 2010, ONT COMP SCI INF SCI
   World Wide Web Consortium (W3C), 2010, RUL INT FORM
   Xiaoying Bai, 2008, 2008 IEEE International Conference on Web Services (ICWS), P465, DOI 10.1109/ICWS.2008.111
NR 52
TC 1
Z9 1
U1 2
U2 32
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2013
VL 43
IS 7
SI SI
BP 867
EP 883
DI 10.1002/spe.1132
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 158TW
UT WOS:000319997100008
DA 2024-07-18
ER

PT J
AU Qasem, A
   Magee, J
AF Qasem, Apan
   Magee, Josh
TI Improving TLB performance on current chip multiprocessor architectures
   through demand-driven superpaging
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler; superpages; optimization
AB Translation Lookaside Buffers (TLBs) can play a critical role in improving the performance of emerging parallel workloads. Most current chip multiprocessor systems include multilevel TLBs and provide support for superpages both at the hardware and software level. Judicious use of superpages can significantly cut down the number of TLB misses and improve overall system performance. However, indiscriminate superpage allocation results in page fragmentation and increased application footprint, which often outweigh the benefits of reduced TLB misses. Previous research has explored policies for smart allocation of superpages from an operating system perspective. This paper presents a compiler-based strategy for automatic and profitable memory allocation via superpages. A significant advantage of a compiler-based approach is the availability of data-reuse information within an application. Our strategy employs data-locality analysis to estimate the TLB demands for both single-threaded and multi-threaded programs and uses this metric to apply selective superpage allocation. Apart from its obvious utility in improving TLB performance, this strategy can be used to improve the effectiveness of certain data-layout transformations and can be a useful tool in benchmarking and automatic performance tuning. We demonstrate the effectiveness of this strategy with experiments on three multicore platforms on a workload that contains both sequential and parallel applications. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Qasem, Apan; Magee, Josh] Texas State Univ, Dept Comp Sci, San Marcos, TX 78666 USA.
C3 Texas State University System; Texas State University San Marcos
RP Qasem, A (corresponding author), Texas State Univ, Dept Comp Sci, San Marcos, TX 78666 USA.
EM apan@txstate.edu
FU Texas State Research Enhancement Program; Department of Energy
   [DE-SC001770]
FX This research is funded by the Texas State Research Enhancement Program
   and by the Department of Energy under Grant No. DE-SC001770.
CR Adhianto L, 2010, CONCURR COMP-PRACT E, V22, P685, DOI 10.1002/cpe.1553
   [Anonymous], THESIS RICE U
   [Anonymous], 2004, P 2004 INT S COD GEN
   [Anonymous], 2008, P 17 INT C PAR ARCH
   Bahadur S, 1998, ACM SE 36, P241
   Bhattacharjee A, 2009, P 18 INT C PAR ARCH
   Browne S, 2000, INT J HIGH PERFORM C, V14, P189, DOI 10.1177/109434200001400303
   Bugnion E, 1996, ACM SIGPLAN NOTICES, V31, P244, DOI 10.1145/248209.237195
   Ding C., 2003, P SIGPLAN 03 C PROGR
   Fang Z, 2001, HPCA: SEVENTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTING ARCHITECTURE, PROCEEDINGS, P63, DOI 10.1109/HPCA.2001.903252
   Gibson D, 2011, LIBHUGETLBFS 2011
   Gorman M, 2008, ISMM'08: PROCEEDINGS OF THE 2008 INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P41
   HILL MD, 1989, IEEE T COMPUT, V38, P1612, DOI 10.1109/12.40842
   Jann J, 2008, SOFTWARE PRACT EXPER, V38, P1261, DOI 10.1002/spe.866
   Kennedy Ken, 2002, Optimizing Compilers for Modern Architectures
   LATTNER C., 2009, LLVM COMPILER INFRAS
   Lu HJ, 2006, P OTT LIN S OTT CAN
   Lynch William L., 1992, P 25 ANN INT S MICR
   Magee J, 2009, P 47 ACM SE REG C AC
   Marin G., 2008, P 2008 IEEE INT S PE
   McCurdy C, 2008, P ISPASS 2008 IEEE I
   Mitchell N, 1998, INT J PARALLEL PROG, V26, P641, DOI 10.1023/A:1018782528453
   Netlib, SOFTW REP U TENNSS O
   Rivera G, 1998, ACM SIGPLAN NOTICES, V33, P38, DOI 10.1145/277652.277661
   ScottSchneider CDA, 2006, P INT S MEM MAN OTT
   Shimizu N., 2003, Computer Architecture News, V31, P75, DOI 10.1145/773365.773374
   TALLURI M, 1994, SIGPLAN NOTICES, V29, P171, DOI 10.1145/195470.195531
   Wicker L.J., NSSL COLLABORATIVE M
   Wildman T, 2008, LINUX SUPERPAGE PROJ
   Wolf M.E., 1991, P SIGPLAN 91 C PROGR
   [No title captured]
NR 31
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2013
VL 43
IS 6
BP 705
EP 729
DI 10.1002/spe.2128
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 140MD
UT WOS:000318657300005
DA 2024-07-18
ER

PT J
AU Malohlava, M
   Plasil, F
   Bures, T
   Hnetynka, P
AF Malohlava, Michal
   Plasil, Frantisek
   Bures, Tomas
   Hnetynka, Petr
TI Interoperable domain-specific languages families for code generation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code generation; domain specific languages; models reuse; extensible
   languages; specification; program synthesis
ID MODEL
AB This paper has been motivated by experience gained with specification and code generation of control elements for a software component platform and general-purpose programming language like Java and C. The problem to be addressed is two-fold: first, several domain-specific languages (DSL) are to be employed to express different element concerns (architecture, deployment context, code pattern) and second, porting to another general-purpose language should avoid modification of the specification and related code generation process as much as possible. In both respects, the classical template-based code generation technique proved to be inflexible, requiring the code generator to be blurred with ad hoc encoded DSL facets. The paper addresses the problem by introducing the concept of interoperable DSL family. Each member of the family is built around its core language, which can be further specialized by embedding into a target programming language. Interoperability of these DSLs is achieved at the level of abstract syntax trees (ASTs) with help of queries. As a proof of the concept, we have implemented the queries via the AST transformation rules of the Stratego/XT framework. In the evaluation, we provide a comparison with the original template-based implementation, which clearly indicates the DSL family and AST transformation benefits. We also provide examples of application areas where the concept of interoperable DSL family can be employed (and also indicate how this can be accomplished). Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Malohlava, Michal; Plasil, Frantisek; Bures, Tomas; Hnetynka, Petr] Charles Univ Prague, Fac Math & Phys, Dept Distributed & Dependable Syst, CR-11800 Prague 1, Czech Republic.
   [Plasil, Frantisek; Bures, Tomas] Acad Sci Czech Republ, Inst Comp Sci, Prague 18207 8, Czech Republic.
C3 Czech Academy of Sciences; Institute of Computer Science of the Czech
   Academy of Sciences
RP Plasil, F (corresponding author), Charles Univ Prague, Malostranske Namesti 25, CR-11800 Prague 1, Czech Republic.
EM plasil@d3s.mff.cuni.cz
RI Hnětynka, Petr/J-1892-2017; Bures, Tomas/G-1821-2014
OI Hnětynka, Petr/0000-0002-1008-6886; Bures, Tomas/0000-0003-3622-9918
FU Grant Agency of the Czech Republic [P103/11/1489]; EU [ASCENS 257414];
   Czech Science Foundation [201/09/H057]
FX This work was partially supported by the Grant Agency of the Czech
   Republic project P103/11/1489, EU project ASCENS 257414, and by the
   Czech Science Foundation grant 201/09/H057.
CR [Anonymous], STRAT XT TOOLK
   Apache Software Foundation, AP VEL PROJ
   Baxter ID, 2004, PROC INT CONF SOFTW, P625, DOI 10.1109/ICSE.2004.1317484
   Bravenboer M, 2005, SUMMER SCH GENERATIV, DOI [10.1007/11877028_10, DOI 10.1007/11877028_10]
   Bravenboer M, 2008, LECT NOTES COMPUT SC, V5002, P34
   Brunelière H, 2010, LECT NOTES COMPUT SC, V6138, P32, DOI 10.1007/978-3-642-13595-8_5
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Bures T, 2006, P 4 INT C SOFTW ENG, DOI [10.1109/SERA.2006.62, DOI 10.1109/SERA.2006.62]
   Bures T., 2006, THESIS CHARLES U PRA
   Bures T, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P337, DOI 10.1109/SERA.2007.18
   Bures T, 2008, SEVENTH INTERNATIONAL CONFERENCE ON COMPOSITION-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P138, DOI 10.1109/ICCBSS.2008.17
   Cordy J. R., 1988, Proceedings 1988 International Conference on Computer Languages (IEEE Cat. No.88CH2647-6), P280, DOI 10.1109/ICCL.1988.13075
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Damianou N, 2001, POL DISTR SYST NETW, DOI [10.1007/3-540-44569-2, DOI 10.1007/3-540-44569-2]
   Eclipse Foundation, EMF EC
   Eclipse Foundation, JAV EM TEMPL JET
   Evans E., 2003, Domain-Driven Design
   Groenewegen Danny, 2008, 2008 8th International Conference on Web Engineering (ICWE), P175, DOI 10.1109/ICWE.2008.15
   HEERING J, 1989, SIGPLAN NOTICES, V24, P43, DOI 10.1145/71605.71607
   Hemel Z, 2011, ACM SIGPLAN NOTICES, V46, P695, DOI 10.1145/2076021.2048121
   Jonge M, 2001, ELECT NOTES THEORETI, V44, P79, DOI [10.1016/S1571-0661(04)80921-6, DOI 10.1016/S1571-0661(04)80921-6]
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F., 2010, P 2010 ACM S APPL CO, P2011, DOI DOI 10.1145/1774088.1774511
   Kelly S., 2008, Domain-Specific Modeling
   Malohlava M, 2011, 20114 CHARL U PRAG
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Object Management Group, 2008, MET FAC MOF 2 0 QUER
   Object Management Group, 2008, UML PROF MARTE MOD A
   Object Management Group, 2003, MDA GUID V1 0 1
   Radermacher A., 2009, P INT C GEN PROGR CO, P127
   Sun Microsystems Inc., JAV SERV PAG SPEC
   Visser E, 2005, J SYMB COMPUT, V40, P831, DOI 10.1016/j.jsc.2004.12.011
   Visser E, 2008, LECT NOTES COMPUT SC, V5235, P291, DOI 10.1007/978-3-540-88643-3_7
NR 34
TC 0
Z9 0
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2013
VL 43
IS 5
BP 479
EP 499
DI 10.1002/spe.2118
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 127HW
UT WOS:000317690100001
DA 2024-07-18
ER

PT J
AU Baca, D
   Carlsson, B
   Petersen, K
   Lundberg, L
AF Baca, Dejan
   Carlsson, Bengt
   Petersen, Kai
   Lundberg, Lars
TI Improving software security with static automated code analysis in an
   industry setting
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE static analysis; vulnerabilities; software security; static code
   analysis
ID AGILE
AB Software security can be improved by identifying and correcting vulnerabilities. In order to reduce the cost of rework, vulnerabilities should be detected as early and efficiently as possible. Static automated code analysis is an approach for early detection. So far, only few empirical studies have been conducted in an industrial context to evaluate static automated code analysis. A case study was conducted to evaluate static code analysis in industry focusing on defect detection capability, deployment, and usage of static automated code analysis with a focus on software security. We identified that the tool was capable of detecting memory related vulnerabilities, but few vulnerabilities of other types. The deployment of the tool played an important role in its success as an early vulnerability detector, but also the developers perception of the tools merit. Classifying the warnings from the tool was harder for the developers than to correct them. The correction of false positives in some cases created new vulnerabilities in previously safe code. With regard to defect detection ability, we conclude that static code analysis is able to identify vulnerabilities in different categories. In terms of deployment, we conclude that the tool should be integrated with bug reporting systems, and developers need to share the responsibility for classifying and reporting warnings. With regard to tool usage by developers, we propose to use multiple persons (at least two) in classifying a warning. The same goes for making the decision of how to act based on the warning. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Baca, Dejan; Carlsson, Bengt; Petersen, Kai; Lundberg, Lars] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Baca, D (corresponding author), Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
EM dejan.baca@bth.se
OI Petersen, Kai/0000-0002-1532-8223
FU Ericsson AB
FX The authors want to thank Martin Hylerstedt for proofreading the text.
   We would also like to thank Ericsson AB for the opportunity and partial
   funding to perform this study.
CR Almossawi A., 2006, ANAL TOOL EVALUATION
   [Anonymous], [No title captured]
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Baca D, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P804, DOI 10.1109/ARES.2009.163
   Baca D, 2008, PLAS'08: PROCEEDINGS OF THE ACM SIGPLAN THIRD WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY, P79, DOI 10.1145/1375696.1375707
   Boehm B. W., 2002, SOFTWARE ENG EC, P641
   Carlsson B, 2005, EUROMICRO-SEAA 2005: 31ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P240
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   Cowan C., 2000, DARPA INFORM SURVIVA, V16, p119~129
   De Win B, 2009, INFORM SOFTWARE TECH, V51, P1152, DOI 10.1016/j.infsof.2008.01.010
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Evans D, 2002, IEEE SOFTWARE, V19, P42, DOI 10.1109/52.976940
   Guo P. J., 2009, P 2009 C USENIX ANN, P22
   Kitchenham B., 2004, TRSE0401 STS 5BG KEE
   Krsul IV, 1998, THESIS PURDUE U LAFA
   Lipner SB, 2005, GI JAHRESTAGUNG, P21
   Livshits V Benjamin, 2005, USENIX SEC S, V14, P18
   McGraw G., 2006, Software security: building security in
   Myllyaho M, 2004, 17 INT C SOFTW SYST, P11
   Nielson F., 1999, Principles of Program Analysis
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Robson C., 2002, Real World Research, V2nd
   Sortirov AI, 2005, THESIS U ALABAMA TUS
   TOMASZEWSKI P, 2008, SOFTWARE PROCESS IMP, V13, P195, DOI DOI 10.1002/SPIP.355
   Tsipenyuk K, 2005, IEEE SECUR PRIV, V3, P81, DOI 10.1109/MSP.2005.159
   Vaughan-Nichols SJ, 2003, COMPUTER, V36, P21, DOI 10.1109/MC.2003.1250860
   Viega J, 2000, 16TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P257, DOI 10.1109/ACSAC.2000.898880
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R.K., 2003, CASE STUDY RES DESIG
   Zitser M., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1041685.1029911
NR 32
TC 24
Z9 31
U1 0
U2 28
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2013
VL 43
IS 3
BP 259
EP 279
DI 10.1002/spe.2109
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 089RE
UT WOS:000314926900001
DA 2024-07-18
ER

PT J
AU Escolar, S
   Carretero, J
AF Escolar, Soledad
   Carretero, Jesus
TI An open framework for translating portable applications into operating
   system-specific wireless sensor networks applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE efficient applications programming; programming abstractions;
   portability; operating systems; wireless sensor networks
AB Wireless sensor networks (WSNs) are distributed systems integrated by tiny devices, called sensor nodes, with capabilities to monitor the environment and forward their measurements to a special node, the sink, where the results can be collected and further processed. The trend in WSN is moving towards heterogeneous networks that will contain different sensor nodes running different instances of custom operating systems. Given the growing demand of new hardware platforms and operating systems specifically designed for sensor nodes, the applications programming for sensor nodes is becoming a challenging process that needs to be alleviated. Currently, application programming for sensor nodes is a complex, ad hoc, and error-prone process where the portability among different platforms has been sacrificed. In this paper, we propose an open framework aimed to achieve application portability in heterogeneous sensor networks. Our approach provides the programming abstractions needed to support the application development process for sensor nodes. We have implemented an open framework that provides a set of tools on top of the most popular WSN operating systems to translate portable applications to the native operating system in an automatic, simple, and transparent way for developers. We have also evaluated the applications thus generated in terms of productivity and overhead, by comparing their footprint to those originally developed in each specific operating system. The results show that the overhead is minimal4% in the worst caseand in some cases, it was even possible to reduce the footprint by using code optimizations. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Escolar, Soledad; Carretero, Jesus] Univ Carlos III Madrid, Dept Comp Sci, Madrid 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Escolar, S (corresponding author), Univ Carlos III Madrid, Dept Comp Sci, Avda Univ 30, Madrid 28911, Spain.
EM mariasoledad.escolar@uc3m.es
RI Carretero, Jesus/AAF-7996-2019; Escolar, Soledad/M-6107-2015
OI Carretero, Jesus/0000-0002-1413-4793; Escolar,
   Soledad/0000-0002-8019-9640
FU Spanish Ministry of Science Research [TIN2010-16497]
FX This research was partially supported under Spanish Ministry of Science
   Research Grant TIN2010-16497, 2010, entitled 'Tecnicas Escalables De
   Entrada/Salida En Entornos Distribuidos Y De Computacion De Altas
   Prestaciones'.
CR Amato G, 2010, SOFTWARE PRACT EXPER, V40, P431, DOI 10.1002/spe.965
   [Anonymous], SENSYS 06
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   Bakshi AB, 2008, WILEY SERIES PARALLE
   Bellifemine F, 2011, SOFTWARE PRACT EXPER, V41, P237, DOI 10.1002/spe.998
   Bhatti S, 2005, MOBILE NETW APPL, V10, P563, DOI 10.1007/s11036-005-1567-8
   CAO Q, 2008, INFORM PROCESSING SE
   Dunkels A, 2004, CONF LOCAL COMPUT NE, P455
   Escolar S, 2006, SIES 06 IEEE 1 S IND
   Escolar S, 2007, SIES 2007 IEEE 2 S I
   Greenstein B, 2004, P 2 ACM C EMB NETW S, P200
   Hill J L, 2003, THESIS U CALIFORNIA
   IEEE, 1996, 10031 IEEE ANSI
   Institute of Electrical and Electronics, 2000, AUTH DICT IEEE STAND
   Levis P., 2006, TINYOS PROGRAMMING
   Madden SR, 2005, ACM T DATABASE SYST, V30, P122, DOI 10.1145/1061318.1061322
   Marron PJ, 2005, MIDDLEWARE APPROACHE
   NASA, OP SYST ABSTR LAYER
   Niedermayer M, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS (IPSN 2009), P313
   Nierstrasz O, 2002, CD 02 P IFIP ACM WOR
   Oliver RS, 2010, SAC 10 P 2010 ACM S, P742
   Römer K, 2004, IEEE WIREL COMMUN, V11, P54, DOI 10.1109/MWC.2004.1368897
   Romer Kay., 2002, SIGMOBILE, V6, P59
   Sugihara R, 2008, ACM T SENSOR NETWORK, V4, DOI 10.1145/1340771.1340774
   VOLGYESI P, 2002, 28 EUR C COMP BAS SO
NR 25
TC 0
Z9 0
U1 0
U2 2
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2013
VL 43
IS 3
BP 333
EP 357
DI 10.1002/spe.2114
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 089RE
UT WOS:000314926900004
DA 2024-07-18
ER

PT J
AU Nagarajan, V
   Jeffrey, D
   Gupta, R
   Gupta, N
AF Nagarajan, Vijay
   Jeffrey, Dennis
   Gupta, Rajiv
   Gupta, Neelam
TI A system for debugging via online tracing and dynamic slicing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic slicing; debugger; dynamic dependence graph; tracing
AB Dynamic slicing is a promising trace based technique that helps programmers in the process of debugging. In order to debug a failed run, dynamic slicing requires the dynamic dependence graph (DDG) information for that particular run. The two major challenges involved in utilizing dynamic slicing as a debugging technique are the efficient computation of the DDG and the efficient computation of the dynamic slice, given the DDG. In this paper, we present an efficient debugger, which first computes the DDG efficiently while the program is executing; dynamic slicing is later performed efficiently on the computed DDG, on demand. To minimize program slowdown during the online computation of DDG, we make the design decision of not outputting the computed dependencies to a file, instead, storing them in memory in a specially allocated fixed size circular buffer. The size of the buffer limits the length of the execution history that can be stored. To maximize the execution history that can be maintained, we introduce optimizations to eliminate the storage of most of the generated dependencies, at the same time ensuring that those that are stored are sufficient to capture the bug. Experiments conducted on CPU-intensive programs show that our optimizations are able to reduce the trace rate from 16 to 0.8?bytes per executed instruction. This enables us to store the dependence trace history for a window of 20 million executed instructions in a 16-MB buffer. Our debugger is also very efficient, yielding slicing times of around a second, and only slowing down the execution of the program by a factor of 19 during the online tracing step. Using recently proposed architectural support for monitoring, we are also able to handle multithreaded programs running on multicore processors. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Nagarajan, Vijay] Univ Edinburgh, Sch Informat, Edinburgh EH8 9AB, Midlothian, Scotland.
   [Jeffrey, Dennis] Google Inc, Mountain View, CA 94043 USA.
   [Gupta, Rajiv] Univ Calif Riverside, CSE Dept, Riverside, CA 92521 USA.
C3 University of Edinburgh; Google Incorporated; University of California
   System; University of California Riverside
RP Nagarajan, V (corresponding author), Univ Edinburgh, Sch Informat, Edinburgh EH8 9AB, Midlothian, Scotland.
EM vijay.nagarajan@ed.ac.uk
OI Gupta, Rajiv/0000-0002-9348-3974
FU NSF [CCF-0963996, CCF-0905509, CNS-0751961, CNS-0810906]; Centre for
   Numerical Algorithms and Intelligent Software; EPSRC [EP/G036136/1];
   Scottish Funding Council; EPSRC [EP/G036136/1] Funding Source: UKRI;
   Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [0810906] Funding Source: National Science Foundation
FX This work is supported by NSF grants CCF-0963996, CCF-0905509,
   CNS-0751961, and CNS-0810906 to the University of California, Riverside,
   and by the Centre for Numerical Algorithms and Intelligent Software,
   funded by EPSRC grant EP/G036136/1 and the Scottish Funding Council.
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   [Anonymous], 2005, P 6 INT S AUTOMATED
   Bhansali S., 2006, VEE 2006. Proceedings of the Second International Conference on Virtual Execution Environments, P154
   Bruening D, 2003, INT SYM CODE GENER, P265, DOI 10.1109/CGO.2003.1191551
   De Bus B, 2004, ACM SIGPLAN NOTICES, V39, P211, DOI 10.1145/998300.997194
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Nagarajan Vijay, 2009, Operating Systems Review, V43, P15, DOI 10.1145/1531793.1531798
   Nagarajan V., 2009, PROC ACM INT C VIRTU, P1
   Narayanasamy S, 2006, IEEE MICRO, V26, P100, DOI 10.1109/MM.2006.7
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Nethercote N, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P65
   Renau J., 2005, SESC Simulator
   Tallam S, 2007, ACM T ARCHIT CODE OP, V4, P19
   Tallam S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, ISSTA '07, P207, DOI DOI 10.1145/1273463.1273491
   Tallam S, 2008, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2008.4658058
   WOO SC, 1995, ACM COMP AR, P24, DOI 10.1109/ISCA.1995.524546
   Xin B., 2007, ISSTA 07 P INT S SOF, P185, DOI 10.1145/1273463.1273489
   Yang J, 2000, PROC INT CONF PARAL, P61, DOI 10.1109/ICPP.2000.876075
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zhang Xiangyu., 2006, SIGSOFT 06FSE 14, P81, DOI DOI 10.1145/1181775.1181786
   Zhang XY, 2004, ACM SIGPLAN NOTICES, V39, P94, DOI 10.1145/996893.996855
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
   Zhao Q., 2006, 15 INT C PARALLEL AR, P154, DOI DOI 10.1145/1152154.1152180
NR 26
TC 5
Z9 7
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2012
VL 42
IS 8
BP 995
EP 1014
DI 10.1002/spe.1105
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 970MG
UT WOS:000306133400003
DA 2024-07-18
ER

PT J
AU Parkin, SE
   Morgan, G
AF Parkin, Simon E.
   Morgan, Graham
TI Toward reusable SLA monitoring capabilities
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE service level agreements; SLA monitoring; E-Commerce
ID MIDDLEWARE
AB Within Internet-based service environments, distributed monitoring mechanisms face challenges with respect to the diverse communication protocols, application languages, and monitoring requirements that exist. Creation of monitoring solutions on a per-service basis becomes time-consuming and misses opportunities to reuse existing logic. Ideally the deployment of monitoring solutions would be simple. Simplicity could be achieved by freeing monitoring solutions from domain dependencies, promoting the ability to use automatically generated monitoring code and support for the automated deployment of monitoring components. Work is presented here that progresses these ambitions by providing a generic, distributed monitoring and evaluation framework based on Metric Collector (MeCo) components. MeCo components form part of a unified monitoring framework which can interpret Service Level Agreements to automatically provide tailored service monitoring. Once deployed, these components can gather measurement data across a range of service technologies as used within E-Commerce services, with minimal impact upon observed service environments. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Parkin, Simon E.; Morgan, Graham] Newcastle Univ, Sch Comp Sci, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
C3 Newcastle University - UK
RP Parkin, SE (corresponding author), Newcastle Univ, Sch Comp Sci, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
EM s.e.parkin@newcastle.ac.uk
RI Morgan, Graham/AAF-9579-2020
OI Morgan, Graham/0000-0002-0089-0395
FU EPSRC [GR/S63199/01]; TAPAS EU [IST-2001-34069]
FX This work was supported by the EPSRC under the grant number GR/S63199/01
   and TAPAS EU Framework Project under the IST-2001-34069.
CR [Anonymous], WORKSH SERV MON AD M
   [Anonymous], ELECT COMMERCE RES
   Apache Software Foundation, 2006, AP AX TOOLK
   Asgari A. H., 2003, Journal of Network and Systems Management, V11, P399, DOI 10.1023/B:JONS.0000005471.24268.d5
   Christensen E., WEB SERVICES DESCRIP
   EU Framework Project, 2005, TRUST QOS AW PROV AP
   He J, 2001, P IFIP ACM INT C DIS
   Keller A, 2002, WSLA FRAMEWORK SPECI, P1
   Koller B, 2007, MULTIAGENT GRID SYST, V3, P313, DOI 10.3233/MGS-2007-3304
   Koster R, 2000, P IFIP ACM MIDDL C M
   Leymann F., WEB SERVICES FLOW LA
   Mason J, 2006, ECLIPSE PROFILER PLU
   Molina-Jimenez C, 2004, P IEEE C EL COMM CEC
   Morgan G, 2005, INT FED INFO PROC, V189, P79
   Nahrstedt K, 2001, IEEE COMMUN MAG, V39, P140, DOI 10.1109/35.965372
   Object Refinery Limited, 2006, JFREECHART
   Pruyne J, 2000, IIPL200029, P1
   Rosenberg I, 2010, SERVICE ORIENTED INFRASTRUCTURES AND CLOUD SERVICE PLATFORMS FOR THE ENTERPRISE, P103, DOI 10.1007/978-3-642-04086-3_5
   Sahai A, 2002, P 13 IFIP IEEE INT W
   Schantz R, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P223, DOI 10.1109/ISORC.1999.776381
   Skene J, 2004, P EDOC 2004 WORKSH C
   SKENE J, 2004, P 26 INT C SOFTW ENG
   Sun Microsystems Inc, 2006, JAV REM METH INV RMI
   Sun Microsystems Inc, 2006, JAV MESS SERV
   Sun Microsystems Inc, 2006, JAV 2 ENT ED
NR 25
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2012
VL 42
IS 3
BP 261
EP 280
DI 10.1002/spe.1060
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 887KP
UT WOS:000299926600001
DA 2024-07-18
ER

PT J
AU Gary, K
   Enquobahrie, A
   Ibanez, L
   Cheng, P
   Yaniv, Z
   Cleary, K
   Kokoori, S
   Muffih, B
   Heidenreich, J
AF Gary, Kevin
   Enquobahrie, Andinet
   Ibanez, Luis
   Cheng, Patrick
   Yaniv, Ziv
   Cleary, Kevin
   Kokoori, Shylaja
   Muffih, Benjamin
   Heidenreich, John
TI Agile methods for open source safety-critical software
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agile methods; software process; open source; safety
AB The introduction of software technology in a life-dependent environment requires the development team to execute a process that ensures a high level of software reliability and correctness. Despite their popularity, agile methods are generally assumed to be inappropriate as a process family in these environments due to their lack of emphasis on documentation, traceability, and other formal techniques. Agile methods, notably Scrum, favor empirical process control, or small constant adjustments in a tight feedback loop. This paper challenges the assumption that agile methods are inappropriate for safety-critical software development. Agile methods are flexible enough to encourage the right amount of ceremony; therefore if safety-critical systems require greater emphasis on activities, such as formal specification and requirements management, then an agile process will include these as necessary activities. Furthermore, agile methods focus more on continuous process management and code-level quality than classic software engineering process models. We present our experiences on the image-guided surgical toolkit (IGSTK) project as a backdrop. IGSTK is an open source software project employing agile practices since 2004. We started with the assumption that a lighter process is better, focused on evolving code, and only adding process elements as the need arose. IGSTK has been adopted by teaching hospitals and research labs, and used for clinical trials. Agile methods have matured since the academic community suggested almost a decade ago that they were not suitable for safety-critical systems; we present our experiences as a case study for renewing the discussion. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Gary, Kevin; Kokoori, Shylaja; Muffih, Benjamin; Heidenreich, John] Arizona State Univ, Dept Engn, Mesa, AZ 85212 USA.
   [Enquobahrie, Andinet; Ibanez, Luis] Kitware Inc, Clifton Pk, NY 12065 USA.
   [Cheng, Patrick; Yaniv, Ziv] Georgetown Univ, Med Ctr, Dept Radiol, Imaging Sci & Informat Syst Ctr, Washington, DC 20007 USA.
   [Cleary, Kevin] Childrens Natl Med Ctr, Sheikh Zayed Inst Pediat Surg Innovat, Washington, DC 20010 USA.
C3 Arizona State University; Kitware, Inc.; Georgetown University;
   Children's National Health System
RP Gary, K (corresponding author), Arizona State Univ, Dept Engn, Mesa, AZ 85212 USA.
EM kgary@asu.edu
RI Yaniv, Ziv/AAB-3658-2021; Yaniv, Ziv/O-3097-2019
OI Yaniv, Ziv/0000-0003-0315-7727
FU NIBIB/NIH [R01 EB007195]
FX This work was funded by NIBIB/NIH grant R01 EB007195. This paper does
   not necessarily reflect the position or policy of the U.S. Government.
CR [Anonymous], 1996, Safety-critical computer systems
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   [Anonymous], 2000, P C FUTURE SOFTWARE, DOI DOI 10.1145/336512.336556
   Beck K., 2011, MANIFESTO AGILE SOFT
   BENGTSSON J, 1996, P HYBRID SYSTEMS, V3
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   BOWEN J, 1993, SOFTWARE ENG J, V8, P189, DOI 10.1049/sej.1993.0025
   Bowen J, 2000, COMMUN ACM, V43, P91, DOI 10.1145/332051.332078
   Bowers J., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P100
   Broy M., 2005, Lecture Notes in Computer Science, V3472
   Cleary K., 2009, IGSTK: The Book
   COCKBURN A, 2000, 4 INT MULTICONFERENC
   Gary K, 2006, COMPUTER, V39, P46, DOI 10.1109/MC.2006.130
   GARY K, 2007, P 3 WORKSH ROL SOFTW
   GELOWITZ C, 2003, LECT NOTES COMPUTER, V2675
   Grenning J, 2001, IEEE SOFTWARE, V18, P27, DOI 10.1109/52.965799
   Harris IG, 2003, IEEE DES TEST COMPUT, V20, P40, DOI 10.1109/MDT.2003.1214351
   Holzmann Gerard J., 2003, The SPIN Model Checker
   HUNE TS, 2001, THESIS U AARHUS DENM
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   LEVESON NG, 1993, COMPUTER, V26, P18, DOI 10.1109/MC.1993.274940
   LEVESON NG, 1986, COMPUT SURV, V18, P125, DOI 10.1145/7474.7528
   LINDVALL M, 2002, P EXTR PROGR AG METH, P197
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Manhart P, 2004, PROC INT CONF SOFTW, P378, DOI 10.1109/ICSE.2004.1317460
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   PARNAS DL, 1990, COMMUN ACM, V33, P636, DOI 10.1145/78973.78974
   Raheja Dev, 1991, Assurance Technologies: Principles and Practices
   ROYCE WW, 1970, P IEEE WESTCON LOS A
   Schwaber K., 2001, Agile software development with scrum
   Spence JW, 2005, AGILE 2005, PROCEEDINGS, P272, DOI 10.1109/ADC.2005.47
   VANSCHOOENDERWO.N, 2004, EMB SYST C BOST
   VANSCHOOWNDERWO.N, 2004, AG DEV C SALT LAK CI
   *W3C, 2005, CHART XML SCXML STAT
   Watson A.H., 1996, NIST Special Publication
   Yaniv Z, 2010, IEEE T BIO-MED ENG, V57, P922, DOI 10.1109/TBME.2009.2035688
NR 36
TC 38
Z9 41
U1 2
U2 50
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2011
VL 41
IS 9
SI SI
BP 945
EP 962
DI 10.1002/spe.1075
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 792IR
UT WOS:000292737400002
PM 21799545
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Kang, D
   Jung, J
   Bae, DH
AF Kang, Dongwon
   Jung, Jinhwan
   Bae, Doo-Hwan
TI Constraint-based human resource allocation in software projects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE human resource allocation; constraints; productivity estimation; task
   allocation
ID OPTIMIZATION; MANAGEMENT
AB Resource allocation in a software project is crucial for successful software development. Among various types of resources, human resource is the most important as software development is a human-intensive activity. Human resource allocation is very complex owing to the human characteristics of developers. The human characteristics affecting allocation can be grouped into individual-level characteristics and team-level characteristics. At the individual level, familiarity with tasks needs to be taken into account as it affects the performance of developers. In addition, developers have different levels of productivity, depending on their capability and experience; the productivity of developers also varies according to tasks. At the team level, characteristics such as team cohesion, communication overhead, and collaboration and management also affect human resource allocation. As these characteristics affect the efficiency of project execution, we treat them as constraints of human resource allocation in our approach. We identify individual-level constraints and team-level constraints based on the literature and interviews with experts in the industry. With these constraints, our approach optimizes the scheduling of human resource allocations, resulting in more realistic and efficient allocations. We also provide a guideline supporting various factors, with respect to roles and module characteristics, to estimate the productivity of developers based on COCOMO II. As productivity data are hard to obtain and manage, our guideline can provide a useful direction for human resource allocation in case of software projects. To validate our proposed approach, we document a case study using real project data. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Kang, Dongwon; Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Dept Comp Sci, Coll Informat Sci & Technol, Taejon 305701, South Korea.
   [Jung, Jinhwan] Def Agcy Technol & Qual, Seoul 130650, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Kang, D (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, Coll IT, Taejon, South Korea.
EM dwkang@se.kaist.ac.kr
RI Bae, Doo-Hwan/C-1538-2011
FU Defense Acquisition Program Administration; Agency for Defense
   Development; Ministry of Public Safety & Security (MPSS), Republic of
   Korea [C1080-1101-0001] Funding Source: Korea Institute of Science &
   Technology Information (KISTI), National Science & Technology
   Information Service (NTIS)
FX This research was partially supported by the Defense Acquisition Program
   Administration and the Agency for Defense Development under the
   contract.
CR Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   ANAGNOSTOPOULOS GC, 2002, P 5 BIENN WORLD AUT, P115
   [Anonymous], 1997, APPROXIMATION ALGORI
   [Anonymous], 1989, Simulated annealing and Boltzmann machines: A stochastic approach to combinatorial optimization and neural computing
   Antoniol G, 2004, IEEE T SOFTWARE ENG, V30, P43, DOI 10.1109/TSE.2004.1265735
   Baker K. R., 1974, INTRO SEQUENCING SCH
   Barreto A, 2008, COMPUT OPER RES, V35, P3073, DOI 10.1016/j.cor.2007.01.010
   Begel A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P1, DOI 10.1109/CHASE.2009.5071401
   Berry M., 2000, Empirical Software Engineering, V5, P183, DOI 10.1023/A:1026534430984
   BERTSIMAS D, 1993, STAT SCI, V8, P10, DOI 10.1214/ss/1177011077
   Bohem B.W., 2000, SOFTWARE COST ESTIMA
   Chang CK, 2008, INFORM SOFTWARE TECH, V50, P1142, DOI 10.1016/j.infsof.2008.03.002
   Chang CK, 2001, ANN SOFTW ENG, V11, P11, DOI 10.1023/A:1012579501037
   Choi K, 2009, INFORM SOFTWARE TECH, V51, P162, DOI 10.1016/j.infsof.2008.03.001
   Dai YS, 2003, J SYST SOFTWARE, V66, P47, DOI 10.1016/S0164-1212(02)00062-6
   DERORE L, 2008, P 5 SOFTW MEAS EUR F, P163
   DERORE L, 2008, 0829 FBE KBI, P1
   Duggan J, 2004, IEEE SOFTWARE, V21, P76, DOI 10.1109/MS.2004.1293077
   Fenton N, 2004, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2004.1317462
   GLASS CA, 1994, MATH COMPUT MODEL, V20, P41, DOI 10.1016/0895-7177(94)90205-4
   Herrmann J, 1997, EUR J OPER RES, V102, P528, DOI 10.1016/S0377-2217(96)00247-0
   Hou RH, 1996, IEEE T RELIAB, V45, P541, DOI 10.1109/24.556577
   Humphrey W.S., 1999, INTRO TEAM SOFTWARE
   Ibaraki T., 1988, RESOURCE ALLOCATION
   Jiménez Antonio, 2002, Pesqui. Oper., V22, P265, DOI 10.1590/S0101-74382002000200011
   JOHNSON DS, 1989, OPER RES, V37, P865, DOI 10.1287/opre.37.6.865
   Jones C., 1994, Assessment and control of software risks
   Kim DW, 2002, ROBOT CIM-INT MANUF, V18, P223, DOI 10.1016/S0736-5845(02)00013-3
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Laarhoven P., 1989, SIMULATED ANNEALING
   LAWLER EL, 1978, J ACM, V25, P612, DOI 10.1145/322092.322101
   Lee B, 2004, SOFTWARE QUAL J, V12, P59, DOI 10.1023/B:SQJO.0000013359.71560.47
   LENSTRA JK, 1990, MATH PROGRAM, V46, P259, DOI 10.1007/BF01585745
   Leung YW, 1997, J SYST SOFTWARE, V37, P129, DOI 10.1016/S0164-1212(96)00109-4
   METROPOLIS N, 1953, J CHEM PHYS, V21, P1087, DOI 10.1063/1.1699114
   Ngo-The A, 2009, IEEE T SOFTWARE ENG, V35, P109, DOI 10.1109/TSE.2008.80
   OHTERA H, 1990, IEEE T RELIAB, V39, P171, DOI 10.1109/24.55878
   Padberg F., 2006, Software Process Improvement and Practice, V11, P77, DOI 10.1002/spip.254
   Padberg F, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P187
   Smith RK, 2001, IEEE T SOFTWARE ENG, V27, P264, DOI 10.1109/32.910861
   Stellman A., 2006, APPL SOFTWARE PROJEC
   Tsai HT, 2003, EUR J OPER RES, V151, P167, DOI 10.1016/S0377-2217(02)00600-8
   Xiao JC, 2009, LECT NOTES COMPUT SC, V5543, P50, DOI 10.1007/978-3-642-01680-6_7
   YAMADA S, 1995, MATH COMPUT MODEL, V22, P295, DOI 10.1016/0895-7177(95)00207-I
   Yoon B. S., 1996, J KOREAN OPERATIONS, V21, P125
   YUN S, 2004, P 28 ANN INT COMP SO, P44
NR 46
TC 32
Z9 33
U1 7
U2 37
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2011
VL 41
IS 5
SU SI
BP 551
EP 577
DI 10.1002/spe.1030
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 736RQ
UT WOS:000288512200005
DA 2024-07-18
ER

PT J
AU Knudsen, SE
AF Knudsen, Svend E.
TI Using independence to enable parallelism on multicore computers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE independence; parallel programming language; multicore processing
ID EXPERIENCE; MESA
AB A simple programming abstraction based on the notion of independence is introduced as a means for mapping the independence inherent in an algorithm explicitly into its programmed solution. This enables a compiler and runtime system to exploit the independence and achieve efficient parallelism of execution on multicore processors. The constructs needed to express mutual independence among statements are proposed and their implementation in iOberon, an extension of the Active Oberon programming language, is defined. The programming language extensions, runtime support, and performance measurements are described in detail. We believe that this concept of specifying local disjoint program fragments can be applied to other programming languages. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Knudsen, Svend E.] Swiss Fed Inst Technol, Dept Comp Sci, Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Knudsen, SE (corresponding author), ETH Zentrum, Dept Comp Sci, CH-8092 Zurich, Switzerland.
EM knudsen@id.ethz.ch
CR Amdahl G., 1967, Proceedings of AFIPS Spring Join Computer Conference, P483, DOI DOI 10.1145/1465482.1465560
   [Anonymous], OPENMP TUTORIAL
   [Anonymous], 1963, P NOV 12 14 1963 FAL
   ARMSTRONG J, 1997, P 2 ACM SIGPLAN INT, P196
   BenAsher Y, 1996, SOFTWARE PRACT EXPER, V26, P581, DOI 10.1002/(SICI)1097-024X(199605)26:5<581::AID-SPE53>3.0.CO;2-P
   Benton N, 2004, ACM T PROGR LANG SYS, V26, P769, DOI 10.1145/1018203.1018205
   BERNSTEIN AJ, 1966, IEEE TRANS ELECTRON, VEC15, P757, DOI 10.1109/PGEC.1966.264565
   Blumofe RD, 1999, J ACM, V46, P720, DOI 10.1145/324133.324234
   Dijkstra E.W., 1965, COOPERATING SEQUENTI
   DIJKSTRA EW, 1982, SELECTED WRITINGS CO, P147
   Friedrich F, 2006, LECT NOTES COMPUT SC, V4228, P195
   GESCHKE CM, 1977, COMMUN ACM, V20, P540, DOI 10.1145/359763.359771
   Gosling James, 1996, The Java Language Specification
   GUSTAFSON JL, 1988, COMMUN ACM, V31, P532, DOI 10.1145/42411.42415
   HANSEN B, 1972, CACM, V15, P574
   Hansen P. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P199, DOI 10.1109/TSE.1975.6312840
   Hansen P.B., 2002, ORIGIN CONCURRENT PR
   HANSEN PB, 1996, SPECIAL INTEREST GRO, V30, P9
   Hejlsberg Anders., 2000, C LANGUAGE REFERENCE
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   HOARE CAR, 1971, INT SEMINAR OPERATIN, P61
   HOARE CAR, 1988, OCCAM 2 REFERENCE MA
   HOARE CAR, 1969, COMMUN ACM, V12, P10
   KNUDSEN SE, 1996, LECT NOTES COMPUTER, V1127, P23
   Lampl O, 2006, LECT NOTES COMPUT SC, V4228, P23
   LAMPSON BW, 1980, COMMUN ACM, V23, P105, DOI 10.1145/358818.358824
   RANDALL KH, 1998, THESIS MIT CAMBRIDE
   REALI PRC, 2004, ACTIVE OBERON LANGUA
   TICHY WF, 1989, 8934 NASA AM RES CTR
   van Wijngaarden A., 1975, Acta Informatica, V5, P1, DOI 10.1007/BF00265077
   WIRTH N, 1976, ALGORITHMS DATA STRU, P76
   WIRTH N, 1988, REPORT PROGRAMMING L
   WIRTH N, 1989, 111 ETH DEP COMP SCI
NR 33
TC 1
Z9 1
U1 0
U2 1
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2011
VL 41
IS 4
BP 393
EP 402
DI 10.1002/spe.1010
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 731BH
UT WOS:000288080800003
DA 2024-07-18
ER

PT J
AU Diwan, A
   Hauswirth, M
   Mytkowicz, T
   Sweeney, PF
AF Diwan, Amer
   Hauswirth, Matthias
   Mytkowicz, Todd
   Sweeney, Peter F.
TI TraceAnalyzer: a system for processing performance traces
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance analysis; traces; data processing; statistics
AB The performance of a program often varies significantly over the course of the program's run. Thus, to understand the performance of a program it is valuable to look not just at end-to-end metrics (e.g. total number of cache misses) but also the time-varying performance of the program. Unfortunately, analyzing time-varying performance is both cumbersome and difficult. This paper makes three contributions, all geared toward helping others in working with traces. First, it describes a system, the TraceAnalyzer, designed specifically for working with performance traces; a performance trace captures the time-varying performance of a program run. Second, it describes lessons that we have learned from many years of working with these traces. Finally, it uses a case study to demonstrate how we have used the Trace Analyzer to understand a performance anomaly. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Diwan, Amer] Univ Colorado, Dept Comp Sci, Boulder, CO 80309 USA.
   [Hauswirth, Matthias] Univ Lugano, Lugano, Switzerland.
   [Sweeney, Peter F.] IBM Res, Yorktown Hts, NY USA.
C3 University of Colorado System; University of Colorado Boulder;
   Universita della Svizzera Italiana; International Business Machines
   (IBM)
RP Diwan, A (corresponding author), Univ Colorado, Dept Comp Sci, Boulder, CO 80309 USA.
EM diwan@cs.colorado.edu
FU NSF [NSF CSE-0509521]
FX To help with these issues, we have developed the TRACEANALYZER, a system
   for working with traces. This paper describes how to use and extend the
   TRACEANALYZER. It also reports the valuable lessons we learned about
   working with traces. This work was supported by NSF grant NSF
   CSE-0509521.
CR AHO AV, 1979, SOFTWARE PRACT EXPER, V9, P267, DOI 10.1002/spe.4380090403
   Alpern B, 2005, IBM SYST J, V44, P399, DOI 10.1147/sj.442.0399
   [Anonymous], 2005, Sci. Program
   [Anonymous], 2010, R PROJECT STAT COMPU
   BACON D, 2010, IBM TUNINGFORK VISUA
   Duesterwald E, 2003, 12TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P220
   Garlan D., 1993, Advances in software engineering and knowledge engineering, P1
   Gosling J., 2005, Java Language Specification, Vthird
   Hauswirth M., 2004, OOPSLA 04 P 19 ANN A, P251
   LEVINTHAL D, 2010, CYCLE ACCOUNTING ANA
   Mytkowicz T, 2007, INT SYMP MICROARCH, P286, DOI 10.1109/MICRO.2007.27
   Olston C., 2008, Proceedings of the 2008 ACM SIGMOD International Conference on Manage- ment of Data, P1099
   SALVADOR S, 2004, KDD WORKSH MIN TEMP, P561
   Sherwood T, 2001, 2001 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P3, DOI 10.1109/PACT.2001.953283
   SHERWOOD T, 2002, ASPLOS, P45
   SHERWOOD T, 2003, SIGARCH COMPUT ARCHI, V31, P336
   SWEENEY P, 2004, P 3 VIRT MACH RES TE, P57
   Thies W, 2002, LECT NOTES COMPUT SC, V2304, P179
   TRACE ANAL
NR 19
TC 5
Z9 8
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2011
VL 41
IS 3
BP 267
EP 282
DI 10.1002/spe.1000
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 724WZ
UT WOS:000287608400003
DA 2024-07-18
ER

PT J
AU Kuperman, BA
   Spafford, EH
AF Kuperman, Benjamin A.
   Spafford, Eugene H.
TI Audlib: a configurable, high-fidelity application audit mechanism
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE audit systems; computer security monitoring; attack detection; intrusion
   detection; misuse detection
AB In this paper, we introduce Audlib, an extendable tool for generating security-relevant information on Unix systems. Audlib is a wrapper environment that generates application level audit information from existing executable programs. Audlib is not a detection system, instead it is designed to supplement existing audit systems and work transparently with them. Audlib records information that is not presently available from existing kernel-level audit sources. Here, we describe the design of the Audlib framework and the information it provides. We compare auditing the actions of a web server with Audlib to existing kernel audit sources and show that we have 2-4 times the throughput of Linux auditd and less than half the performance overhead of Solaris BSM while collecting detailed information about the server's execution. Although Audlib is focused on recording security information, this technique can be used to collect data for a wide variety of purposes including profiling, dependency analysis, and debugging. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Kuperman, Benjamin A.] Oberlin Coll, Oberlin, OH 44074 USA.
   [Spafford, Eugene H.] Purdue Univ, CERIAS, W Lafayette, IN 47907 USA.
C3 University System of Ohio; Oberlin College; Purdue University System;
   Purdue University
RP Kuperman, BA (corresponding author), Oberlin Coll, Oberlin, OH 44074 USA.
EM Benjamin.Kuperman@oberlin.edu
RI Spafford, Eugene/Q-1244-2015
OI Spafford, Eugene/0000-0002-5555-8330
FU Booth Ferris Foundation; National Science Foundation [EIA-9903545];
   CERIAS at Purdue University
FX Our thanks to the Booth Ferris Foundation, The National Science
   Foundation, and partners of CERIAS at Purdue University for their
   financial support of this project. This material is based upon work
   supported by the National Science Foundation under Grant No.
   EIA-9903545.
CR *AL ONE, 1997, PHRAKC MAGAZIEN, V7
   [Anonymous], 1999, CONTR ACC PROT PROF
   *APPL COMP INC, 2008, COMM CRIT CONF ADM G
   Barse E. L., 2004, Proceedings. 20th Annual Computer Security Applications Conference, P158
   Bishop M, 1996, COMPUT SYST, V9, P131
   Crosta DS, 2006, LISA 06: USENIX ASSOCIATION PROCEEDINGS OF THE 20TH LARGE INSTALLATION SYSTEM ADMINISTRATION CONFERENCE, P287
   CURRY TW, 1994, PROCEEDINGS OF THE SUMMER 1994 USENIX CONFERENCE, P267
   DENNING DE, 1987, IEEE T SOFTWARE ENG, V13, P222, DOI 10.1109/TSE.1987.232894
   GOLDBERG I, 2008, 6 USENIX SEC S FOC A
   GRUBB S, 2007, AUDITD8 LINUX AUDIT
   GRUBB S, 2008, LINUX AUDIT SYSTEM
   *INTSECT ALL, 2008, SNARE LIN
   JONES M., 1993, P 14 ACM S OP SYST P
   KUPERMAN BA, 2008, 199911 CERIAS TR PUR
   Lane T., 1999, ACM Transactions on Information and System Security, V2, P295
   Lunt T, 1993, P 1993 C AUD COMP TE
   Maxion RA, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P5, DOI 10.1109/DSN.2003.1209911
   NAKHIMOVSKY G, 2004, UNIX INSIDER     JUL
   *NAT SEC AG, 2004, LAB SEC PROT PROF
   NIEMI DC, 2008, BYTE UNIX BENCHMARKS
   PRICE KE, 1997, THESIS PURDUE U WEST
   ROESCH M, 2008, SNORT DEV
   SCUT, 2004, EXPLOITING FORMAT ST
   *SOL DES, 2008, GETT NONEX STACK FIX
   *SUN MICR INC, 2004, SUNSHIELD BAS SEC MO
   *SUN MICR INC, 1996, SHAR LIB INT SLI US
   Tsai T, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P541, DOI 10.1109/DSN.2002.1028963
   TSAI T, 2001, ALR2001019 AV INC
   *US DEP DEF, 1988, NCSCTG001 US DEP DEF
   *US DEP DEF, 1985, 520028STD DOD COMP S
   WAGNER DA, 1999, UCBCSD991056 EECS DE
   Wagner David, 2002, P 9 ACM C COMP COMM, P255, DOI DOI 10.1145/586110.586145
   Wang K, 2004, LECT NOTES COMPUT SC, V3224, P203
   WATSON R, 2008, OPENBSM OPEN SOURCE
   WOLFE W, 2008, SECURE AUDITING LINU
   WU Y, 2005, P 21 ANN COMP SEC AP, P95
NR 36
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2010
VL 40
IS 11
BP 989
EP 1005
DI 10.1002/spe.983
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 663SU
UT WOS:000282911000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wolforth, I
   Walker, M
   Grunske, L
   Papadopoulos, Y
AF Wolforth, Ian
   Walker, Martin
   Grunske, Lars
   Papadopoulos, Yiannis
TI Generalizable safety annotations for specification of failure patterns
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE failure patterns; compositional safety evaluation; dependability;
   generalizable safety annotations
ID MODEL CHECKING; BEHAVIOR; DESIGN; SYSTEMS; TREES
AB Components in programmable systems often exhibit patterns of failure that are independent of function or system context. In this paper, we show that it is possible to capture, and reuse where appropriate, such patterns for the purposes of system safety analysis. We describe a language that enables abstract specification of failure behaviour and define the syntax and semantics of this language. The language extends concepts originally defined in HiP-HOPS, a technique that enables a largely automated form of compositional system safety analysis. The paper describes how this language can be used to describe component failure patterns and demonstrates how it can be applied using a simple fuel system example. The approach is evaluated on a set of retrospective industrial case studies, where data-mining and reverse engineering techniques are applied in order to identify hidden patterns in legacy safety analyses. Results show clear potential for practical use of patterns in HiP-HOPS. We argue that careful specification and reuse of failure patterns in conjunction with a tool that automates Fault Tree and Failure Modes and Effects Analysis can help to simplify complex safety assessments. Copyright (c) 2010 John Wiley & Sons, Ltd.
C1 [Grunske, Lars] Swinburne Univ Technol, Fac ICT, Melbourne, Vic, Australia.
   [Wolforth, Ian; Walker, Martin; Papadopoulos, Yiannis] Univ Hull, Dept Comp Sci, Kingston Upon Hull HU6 7RX, N Humberside, England.
C3 Swinburne University of Technology; University of Hull
RP Grunske, L (corresponding author), Swinburne Univ Technol, Fac ICT, CS3, Melbourne, Vic, Australia.
EM lars.grunske@gmail.com; Y.I.Papadopoulos@hull.ac.uk
RI Grunske, Lars/AAH-4550-2019
OI Grunske, Lars/0000-0002-8747-3745; Walker, Martin/0000-0002-6793-3775;
   Papadopoulos, Yiannis/0000-0001-7007-5153
FU EU [1P-516278]; ATESST-2 [224442]
FX Contract/grant sponsor: EU Projects SAFEDOR; contract/grant number:
   1P-516278; Contract/grant sponsor: ATESST-2; contract/grant number:
   224442
CR [Anonymous], 61025 IEC
   Bieber P, 2002, LECT NOTES COMPUT SC, V2485, P19
   Birolini A., 2013, RELIABILITY ENG THEO
   Bozzano M, 2003, LECT NOTES COMPUT SC, V2788, P49
   Bozzano M, 2003, LECT NOTES COMPUT SC, V2805, P208
   Chen DJ, 2008, LECT NOTES COMPUT SC, V5219, P72, DOI 10.1007/978-3-540-87698-4_9
   CICHOCKI T, 2001, COMP SAF REL SEC 20, P190
   Colvin R, 2008, J SYST SOFTWARE, V81, P2163, DOI 10.1016/j.jss.2008.04.035
   Elmqvist J, 2007, ELECTRON NOTES THEOR, V182, P57, DOI 10.1016/j.entcs.2006.09.031
   Elmqvist J, 2008, IEEE HI ASS SYS ENGR, P154, DOI 10.1109/HASE.2008.59
   FEDER PH, 2007, CMUSEI2007TN043
   Feiler P.H., 2006, The Architecture Analysis Design Language (AADL): An Introduction
   FENELON P, 1993, J SYST SOFTWARE, V21, P279, DOI 10.1016/0164-1212(93)90029-W
   Ferguson Susan A, 2007, Traffic Inj Prev, V8, P329, DOI 10.1080/15389580701588949
   Ge XC, 2009, LECT NOTES COMPUT SC, V5775, P215
   Giese H, 2006, LECT NOTES COMPUT SC, V4166, P156
   Grunske L, 2005, LECT NOTES COMPUT SC, V3771, P129
   Grunske L, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P117
   Grunske L, 2005, LECT NOTES COMPUT SC, V3489, P33
   GRUNSKE L, 2008, 13 INT C SOFTW ENG I, P31
   Grunske L, 2006, LECT NOTES COMPUT SC, V4214, P199
   Grunske L, 2007, INT CONF QUANT EVAL, P119, DOI 10.1109/QEST.2007.18
   GUDEMANN M, 2008, P S FORM METH AUT SA, P1
   Güdemann M, 2007, LECT NOTES COMPUT SC, V4680, P465
   HAMANN R, 2008, 27 INT C OFFSH MECH
   Heilmann R, 2007, LECT NOTES COMPUT SC, V4680, P100
   Heimdahl M. P. E., 2005, Automated Software Engineering, V12, P321, DOI 10.1007/s10515-005-2642-x
   Heitmeyer C, 1998, IEEE T SOFTWARE ENG, V24, P927, DOI 10.1109/32.730543
   *IEC, 1991, 60812 IEC
   JOSHI A, 2007, BEHAV FAULT MODELING, P199
   JOSHI A, 2007, LECT NOTES COMPUTER
   Kaiser B., 2003, P 8 AUSTR WORKSHOP S, VVolume 33, P37
   Kaiser B, 2007, RELIAB ENG SYST SAFE, V92, P1521, DOI 10.1016/j.ress.2006.10.010
   KOPETZ H, 1994, COMPUTER, V27, P14, DOI 10.1109/2.248873
   Leveson N.G., 1995, Safeware: System Safety and Computers
   LISAGOR O, 2006, P ISSC 2006 ALB NM S
   LUTZ RR, 2000, SOFTWARE ENG SAFETY, P213
   MAURI G, 2001, THESIS U YORK
   MERLE G, 2009, P 2 IFAC WORKSH DEP, P129
   Mohamed A, 2008, INT CONF QUAL SOFTW, P402, DOI 10.1109/QSIC.2008.46
   Papadopoulos Y, 2005, J SYST SOFTWARE, V76, P77, DOI 10.1016/j.jss.2004.06.027
   Papadopoulos Y, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/HASE.2004.1281774
   Papadopoulos Y, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P77, DOI 10.1109/DSN.2001.941393
   Papadopoulos Y, 2001, RELIAB ENG SYST SAFE, V71, P229, DOI 10.1016/S0951-8320(00)00076-4
   Papadopoulos Y, 1999, LECT NOTES COMPUT SC, V1698, P139
   PAPADOPOULOS Y, 2003, COMB SHIP MACH SYST, P415
   Rauzy A, 2002, RELIAB ENG SYST SAFE, V78, P1, DOI 10.1016/S0951-8320(02)00042-X
   Reese JD, 1997, PROC INT CONF SOFTW, P250, DOI 10.1145/253228.253281
   Rugina AE, 2007, LECT NOTES COMPUT SC, V4615, P14
   Smith SP, 2005, RELIAB ENG SYST SAFE, V89, P93, DOI 10.1016/j.ress.2004.08.010
   UHLIG A, 2007, TAG TECHN ZUV ANN VD
   VESELY WE, 1996, FAULT TREE HDB
   Walker M, 2007, LECT NOTES COMPUT SC, V4680, P106
   Wallace J, 2005, LASER FOCUS WORLD, V41, P71
   YE F, 2004, 22 INT SYST SAF C IS
NR 55
TC 8
Z9 9
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2010
VL 40
IS 5
BP 453
EP 483
DI 10.1002/spe.966
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 583DB
UT WOS:000276652000004
DA 2024-07-18
ER

PT J
AU van Gurp, J
   Prehofer, C
   Bosch, J
AF van Gurp, Jilles
   Prehofer, Christian
   Bosch, Jan
TI Comparing practices for reuse in integration-oriented software product
   lines and large open source software projects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE open source, software product lines; software development practice
AB This article compares the organization and practices for software reuse in integration-oriented software product lines (SPLs) and open source software projects The main observation is that both approaches are successful regarding large variability and reuse, but differ widely in their practices, and organization To capture practices in large open source projects, we describe an open compositional model, which reflects their more decentralized organization of software development We capture key practices and organizational forms for this and validate these by comparing four case studies of this model Two of these studies are based on published SPL case studies, for the other two we analyze the practices in two large and successful open source projects based on their published developer documentation Our analysis highlights key differences between the practices in the two open source organizations and the more integrational practices used in the other two cases Finally, we discuss which practices are successful in which environment and how the current practices can move towards more open, widely scoped and distributed software development Copyright (C) 2010 John Wiley & Sons, Ltd
C1 [van Gurp, Jilles] Nokia Gates5 Serv, Berlin, Germany.
   [Prehofer, Christian] Nokia Res Ctr, Smart Space Lab, Helsinki, Finland.
   [Bosch, Jan] Intuit, Mountain View, CA USA.
C3 Nokia Corporation; Nokia Corporation; Siemens AG; Nokia Siemens
   Networks; Nokia Finland; Intuit Inc.
RP van Gurp, J (corresponding author), Nokia Gates5 Serv, Berlin, Germany.
CR Amor J. J., 2005, UPGRADE EUROPEAN J I, VVI, P13
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1999, CATHEDRAL BAZAAR
   [Anonymous], 1997, COMPONENT SOFTWARE O
   [Anonymous], 2000, SOFTWARE ARCHITECTUR
   [Anonymous], APPL DOMAIN DRIVEN D
   BARTH A, 2006, DEBIAN DEV GUIDE
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Batory D, 2000, LECT NOTES COMPUT SC, V1844, P117
   BECK K, 2009, ESTREME PROGRAMMING
   Beck K., 2002, TEST DRIVEN DEV
   BERMEJO J, 2008, DAGST SEM
   BOEHM BW, 2000, ACM P C FUT SOFTW EN, P319
   Boehm BW., 1981, Software Engineering Economics
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Bosch J, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1183236.1183263
   BROWN AW, 1999, P AS PAC SOFTW ENG C, P632
   Clements P., 2001, CONTROL CHANNEL TOOL
   CLEMENTS PC, 2003, CMUSEI2002TR038
   Cockburn A., 2002, AGILE SOFTWARE DEV
   *ECL FDN, 2006, ECL PLATF OV
   *ECL FDN, 2003, DEV PROC REV 1 0
   Hotz L., 2006, Configuration in Industrial Product Families - The ConIPF Methodology
   JARRAD S, 2006, 2006 SOFTW PROD LIN, P498
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang Kyo C, 1990, Technical Report
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Krueger CW, 2006, SPLC 2006: 10th International Software Product Line Conference, Proceedings, P95, DOI 10.1109/SPLINE.2006.1691581
   LAI CTR, 1999, SOFTWARE PRODUCT LIN
   LANG B, 2001, SEI, V4
   Meyer MH, 1998, SLOAN MANAGE REV, V40, P61
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   MUCCINI H, 2003, ELSEVIER ELECT NOTES, V82, P1
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   O'Reilly T, 1999, COMMUN ACM, V42, P32, DOI 10.1145/299157.299164
   OESCHGER I, 2010, GETTING YOUR WORK MO
   *OHL, 2009, DEB GNU LIN
   *OHL, 2009, ECL PLATF PROJ
   Prehofer C, 2008, EMERGING METHODS TEC, P21
   Schwaber Ken, 1995, OOPSLA 95 WORKSH BUS
   SHUTTLEWORTH M, 2008, ART RELEASE
   *SOFTW ENG I, 2006, PROD LIN HALL FAM
   Svahnberg M., 2005, SOFTWARE PRACTICE EX, V35, P1
   van Gurp J, 2005, J SOFTW MAINT EVOL-R, V17, P277, DOI 10.1002/smr.313
   van Ommering R., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P328
   van Ommering R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255, DOI 10.1109/ICSE.2002.1007973
   VANGURP J, 2007, P SOFTW SERV VAR MAN, P81
   VANGURP J, 2006, 1 INT WORKSH OP SOUR, P367
   VANOMMERING R, 2004, THESIS U GRONINGEN
   Wallnau K., 2002, Building systems from commercial components
   West J, 2003, RES POLICY, V32, P1259, DOI 10.1016/S0048-7333(03)00052-0
   WHEELER D, 2002, MORE COUNTING SOURCE
NR 52
TC 7
Z9 8
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2010
VL 40
IS 4
BP 285
EP 312
DI 10.1002/spe.955
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 570PQ
UT WOS:000275690600001
DA 2024-07-18
ER

PT J
AU Binder, W
   Schoeberl, M
   Moret, P
   Villazón, A
AF Binder, Walter
   Schoeberl, Martin
   Moret, Philippe
   Villazon, Alex
TI Cross-profiling for Java processors
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cross-profiling; embedded Java processors; bytecode instrumentation;
   platform-independent dynamic metrics; processor architecture design
   space exploration
ID ARCHITECTURE
AB Performance evaluation of embedded software is essential in an early development phase so as to ensure that the software will run on the embedded device's limited computing resources. The prevailing approaches either require the deployment of the software on the embedded target, which can be tedious and may be impossible in an early development phase, or rely on simulation, which can be very slow. In this article, we introduce a customizable cross-profiling framework for embedded Java processors, including processors featuring a method cache. The developer profiles the embedded software in the host environment, completely decoupled from the target system, on any standard Java virtual machine, but the generated profiles represent the execution time metric of the target system. Our cross-profiling framework is based on bytecode instrumentation. We identify several pointcuts in the execution of bytecode that need to be instrumented in order to estimate the CPU cycle consumption on the target system. An evaluation using the JOP embedded Java processor as target confirms that our approach reconciles high profile accuracy with moderate overhead. Our cross-profiling framework also enables the performance evaluation of new processor architectures before they are implemented. As a case study, we explore the performance impact of various processor design choices and optimizations, such as different cache sizes or pipeline organizations, and come up with an improved processor design that yields speedups of up to 40% on standard Java benchmarks. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Binder, Walter; Moret, Philippe; Villazon, Alex] Univ Lugano, Fac Informat, CH-6900 Lugano, Switzerland.
   [Schoeberl, Martin] Vienna Univ Technol, Inst Comp Engn, Vienna, Austria.
C3 Universita della Svizzera Italiana; Technische Universitat Wien
RP Binder, W (corresponding author), Univ Lugano, Fac Informat, CH-6900 Lugano, Switzerland.
EM walter.binder@usi.ch
RI Villazon, Alex/AAK-3937-2020; Villazón, Alex/AGR-6972-2022
OI Villazón, Alex/0000-0001-8428-3420; Binder, Walter/0000-0002-2477-2182;
   Schoeberl, Martin/0000-0003-2366-382X
FU Swiss National Science Foundation
FX Contract/grant sponsor: Swiss National Science Foundation
CR Akai S, 2009, ACP4IS'09: 8TH WORKSHOP ON ASPECTS, COMPONENTS AND PATTERNS FOR INFRASTRUCTURE SOFTWARE, P43
   Alpern B, 2000, IBM SYST J, V39, P211, DOI 10.1147/sj.391.0211
   Ammons Glenn, 1997, P ACM SIGPLAN 97 C P, P85, DOI [10.1145/258915, DOI 10.1145/258915]
   [Anonymous], P 6 INT WORKSH JAV T
   Arnold M, 2005, INT SYM CODE GENER, P51, DOI 10.1109/CGO.2005.9
   ARNOLD M, 2001, SIGPLAN C PROGR LANG, P168
   ARNOLD M, 2000, APPROXIMATING CALLIN, P1
   Austin T, 2002, COMPUTER, V35, P59, DOI 10.1109/2.982917
   AVGUSTINOV P, 2005, PLDI 05, P117
   Bate I, 2000, SEVENTH INTERNATIONAL CONFERENCE ON REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P39, DOI 10.1109/RTCSA.2000.896369
   BECK AC, 2003, P 12 IFIP INT C VER, P213
   Binder W, 2005, LECT NOTES COMPUT SC, V3780, P178
   Binder W, 2001, ACM SIGPLAN NOTICES, V36, P139, DOI 10.1145/504311.504293
   Binder W., 2007, P 5 INT S PRINC PRAC, DOI DOI 10.1145/1294325.1294344
   BINDER W, 2008, INT C COMP ARCH SYNT, P127
   Binder W, 2008, INT CONF QUANT EVAL, P287, DOI 10.1109/QEST.2008.39
   Binder W, 2006, SOFTWARE PRACT EXPER, V36, P615, DOI 10.1002/spe.712
   Binder W, 2009, SOFTWARE PRACT EXPER, V39, P47, DOI 10.1002/spe.890
   Bodden E., 2008, ISSTA 08, P155
   Bollella Greg., 2000, REAL TIME SPECIFICAT
   Bond MD, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P97
   CHOI JD, 1999, P ACM SIGPLAN SIGSOF, P21
   COVINGTON RG, 1991, INT J COMPUTER SIMUL, V1, P31
   De Fraine Bruno., 2008, P 7 INT C ASPECT ORI, P60, DOI [10.1145/1353482.1353491, DOI 10.1145/1353482.1353491]
   Dyer Robert., 2008, Proceedings of the 7th international conference on A sped-oriented software development, P191, DOI 10.1145/1353482.1353505
   Feeley M., 1993, FPCA '93. Conference on Functional Programming Languages and Computer Architecture, P179, DOI 10.1145/165180.165205
   Gosling J., 2005, Java Language Specification, Vthird
   Gregg D, 2005, CONCURR COMP-PRACT E, V17, P757, DOI 10.1002/cpe.846
   GRUIAN F, 2007, 5 INT WORKSH JAV TEC, P222
   Harbulot Bruno., 2006, AOSD 06, P63, DOI DOI 10.1145/1119655.1119666
   Hardin DS, 2001, FOURTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P53, DOI 10.1109/ISORC.2001.922817
   HARMON T, 2009, THESIS U CALIFORNIA
   Hennessy J.L., 2006, Computer Architecture: A Quantitative Approach'', V4th
   HENTIES T, 2009, 2 INT WORKSH CERT SA
   HUBER B, 2009, P 9 INT WORKSH WORST, P23
   HUBER B, 2009, THESIS VIENNA U TECH
   *IMS, 2004, IM1101C CJIP TECHN R
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   Kozyrakis CE, 1998, COMPUTER, V31, P24, DOI 10.1109/2.730733
   Kreuzinger J, 2003, MICROPROCESS MICROSY, V27, P19, DOI 10.1016/S0141-9331(02)00082-0
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   *MENT GRAPH INC, MODELSIM
   Metzlaff S., 2008, MEDEA 08 P 9 WORKSHO, P38, DOI DOI 10.1145/1509084.1509090
   MORET P, 2009, PEPM 09, P151
   OConnor JM, 1997, IEEE MICRO, V17, P45, DOI 10.1109/40.592314
   Pearce DJ, 2007, SOFTWARE PRACT EXPER, V37, P747, DOI 10.1002/spe.788
   PREUSSER TB, 2007, P 5 INT WORKSH JAV T, P206
   *PROSYST, 2009, JPROFILER
   RAJAN H, 2007, VMIL 07 P 1 WORKSH V, P4
   Rajan Hridesh., 2005, Proceedings of the 4th international conference on Aspectoriented software development, P181, DOI [10.1145/1052898.1052914, DOI 10.1145/1052898.1052914]
   Schoeberl M, 2004, LECT NOTES COMPUT SC, V3292, P371
   Schoeberl M., 2006, JTRES 06, P202, DOI DOI 10.1145/1167999.1168033]
   SCHOEBERL M, 2008, P 17 IFAC WORLD C SE, P9230
   SCHOEBERL M, 2008, JOP REFERENCE HDB BU
   SCHOEBERL M, 2007, P 5 INT WORKSH JAV T, P57
   Schoeberl M, 2008, J SYST ARCHITECT, V54, P265, DOI 10.1016/j.sysarc.2007.06.001
   Schoeberl M, 2009, INT CONF QUANT EVAL, P109, DOI 10.1109/QEST.2009.15
   Skadron K, 2003, COMPUTER, V36, P30, DOI 10.1109/MC.2003.1220579
   *SPEC, 1998, SPEC JVM98 BENCHM SU, V5
   Spivey JM, 2004, SOFTWARE PRACT EXPER, V34, P249, DOI 10.1002/spe.562
   *SUN MICR INC, 2000, JAV VIRT MACH PROF I
   *SUN MICR INC, 2006, JVM TOOL INT JVMTI V
   TALLAM S, 2004, 18 INT PAR DISTR PRO, pB156
   Uhrig Sascha., 2007, Proceedings of the 5th international workshop on Java technologies for real-time and embedded systems, JTRES '07, P230
   VILLAZON A., 2008, P 6 INT S PRINCIPLES, P159
   Villazón A, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P63
   Whaley John., 2000, JAVA 00, P78
   Yi JJ, 2006, COMPUTER, V39, P22, DOI 10.1109/MC.2006.404
   Zabel M, 2007, DSD 2007: 10TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN ARCHITECTURES, METHODS AND TOOLS, PROCEEDINGS, P59, DOI 10.1109/DSD.2007.4341450
   Zhuang X, 2006, ACM SIGPLAN NOTICES, V41, P263, DOI 10.1145/1133981.1134012
NR 71
TC 0
Z9 0
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC 25
PY 2009
VL 39
IS 18
BP 1439
EP 1465
DI 10.1002/spe.940
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 532HC
UT WOS:000272736100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sendín-Raña, P
   González-Castaño, FJ
   Pérez-Barros, E
   Rodríguez-Hernández, PS
   Gil-Castiñeira, F
   Pousada-Carballo, JM
AF Sendin-Rana, Pablo
   Gonzalez-Castano, Francisco J.
   Perez-Barros, Enrique
   Rodriguez-Hernandez, Pedro S.
   Gil-Castineira, Felipe
   Pousada-Carballo, Jose M.
TI Improving the performance and functionality of Mondrian open-source OLAP
   systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE OLAP; data warehouses; XML/A
AB For a long time, the design of relational databases has focused on the optimization of atomic transactions (insert, select, update or delete). Currently, relational databases store tactical information of data warehouses, mainly for select-like operations. However, the database paradigm has evolved, and nowadays on-line analytical processing (OLAP) systems handle strategic information for further analysis. These systems enable fast, interactive and consistent information analysis of data warehouses, including shared calculations and allocations. OLAP and data warehouses jointly allow multidimensional data views, turning raw data into knowledge. OLAP allows 'slice and dice' navigation and a top-down perspective of data hierarchies. In this paper, we describe our experience in the migration from a large relational database management system to an OLAP system on top of a relational layer (the data warehouse), and the resulting contributions in open-source ROLAP optimization. Existing open-source ROLAP technologies rely on summarized tables with materialized aggregate views to improve system performance (in terms of response time). The design and maintenance of those tables are cumbersome. Instead, we intensively exploit cache memory, where key data reside, yielding low response times. A cold start process brings summarized data from the relational database to cache memory, subsequently reducing the response time. We ensure concurrent access to the summarized data, as well as consistency when the relational database updates data. We also improve the OLAP functionality, by providing new features for automating the creation of calculated members. This makes it possible to define new measures on the fly using virtual dimensions, without re-designing the multidimensional cube. We have chosen the XML/A de facto standard for service provision. Copyright (c) 2008 John Wiley & Sons, Ltd.
C1 [Sendin-Rana, Pablo; Gonzalez-Castano, Francisco J.; Rodriguez-Hernandez, Pedro S.; Gil-Castineira, Felipe; Pousada-Carballo, Jose M.] Univ Vigo, Dept Ingn Telemat, Vigo 36310, Spain.
   [Perez-Barros, Enrique] SAEC DATA SA, Vigo 36203, Spain.
C3 Universidade de Vigo
RP González-Castaño, FJ (corresponding author), Univ Vigo, Dept Ingn Telemat, Vigo 36310, Spain.
EM javier@det.uvigo.es
RI Gil-Castiñeira, Felipe/ABE-6411-2020; González-Castaño, Francisco
   J./D-2637-2018; Rodríguez-Hernández, Pedro S/E-8468-2016
OI Gil-Castiñeira, Felipe/0000-0002-5164-0855; Rodríguez-Hernández, Pedro
   S/0000-0003-3610-6125
CR AGARWAL S, 1996, P 22 INT C VER LARG, P361
   [Anonymous], P ACM SIGMOD INT C M
   Chaudhuri S, 2001, COMPUTER, V34, P48, DOI 10.1109/2.970575
   Chaudhuri S., 1997, SIGMOD Record, V26, P65, DOI 10.1145/248603.248616
   CHU R, 2004, P 10 ACM SIGKDD INT, P31
   Codd EF, 1993, PROVIDING OLAP ON LI
   DASILVA J, 2006, P 2006 ACM S APPL CO, P63
   Fidalgo RDN, 2002, XXII INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P167, DOI 10.1109/SCCC.2002.1173190
   Fiser B, 2004, 15TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P556, DOI 10.1109/DEXA.2004.1333533
   Gupta A., 1995, VLDB 95, P358
   GUPTA A, 1999, MAT VIEWS TECHNIQUES
   *JAV SPEC REQ, 2008, JAV OLAP INT JOLAP
   Madeira H, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P86, DOI 10.1109/DSN.2003.1209920
   *MICR CORP, 2008, OLE DB
   *MICR CORP HYP SOL, 2002, XML AN SPEC VERS 1 0
   MOORMAN M, 1999, P 1999 24 ANN SAS US
   *OLAP COUNC, 1998, MDAPI SPEC VERS 2 0
   OLIVEIRA R, 2006, P IADIS VIRT MULT
   Spofford G., 2006, MDX SOLUTIONS MICROS
   Thalhammer T, 2002, SOFTWARE PRACT EXPER, V32, P1193, DOI 10.1002/spe.479
   Thomsen E., 1999, MICROSOFT OLAP SOLUT
   ZAMAN KA, 2005, P 2005 ACM SIGMOD IN, P822
   ZHUGE Y, 1995, P ACM SIGMOD 1995 IN, P506
   OPEN OLAP
   2008, XML SPECIFICATION
   MULTIDIMENSIONAL EXP
   2008, SOAP VERSION 1 2
NR 27
TC 1
Z9 1
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR 10
PY 2009
VL 39
IS 3
BP 279
EP 298
DI 10.1002/spe.899
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 412EF
UT WOS:000263705700003
DA 2024-07-18
ER

PT J
AU Hafiz, M
   Johnson, RE
AF Hafiz, Munawar
   Johnson, Ralph E.
TI Evolution of the MTA architecture: the impact of security
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mail transfer agent (MTA); security patterns; software architecture
AB As the Internet matured, security became more important and formerly adequate designs became inadequate. One of the victims of the increased need for security was sendmail. This paper shows how its competitors improved on its design in response to the increased need for security. The designers of qmail and Postfix used well-known patterns to achieve better security without affecting performance; these patterns can be used by the designers of other systems with an increased need for security. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Hafiz, Munawar; Johnson, Ralph E.] Univ Illinois, Dept Comp Sci, Urbana, IL 61801 USA.
C3 University of Illinois System; University of Illinois Urbana-Champaign
RP Hafiz, M (corresponding author), Univ Illinois, Dept Comp Sci, 201 N Goodwin Ave, Urbana, IL 61801 USA.
EM mhafiz@uiuc.edu
FU Microsoft [2005-3326-00]
FX The authors would like to thank all the reviewers who have provided
   their valuable feedback at different points of the paper-writing
   process. Special thanks go to Daniel J. Bernstein, Wietse Z. Veneiria.
   and Claus Assmann for reviewing the paper and providing valuable insight
   about their products. The list of people the authors would like to thank
   includes but are not limited to Paul Adamczyk, Raja Afandi, Federico
   Balaguer, Grady Booch, Larry Brader, John Brant, Ward Cunningham, Brian
   Foote, Richard P. Gabriel, Farhana Hafiz, Jason Hogg, 1mranul Hoque,
   Nigel Horspool, Sonia Jahid, Brian Marick, Jefferey Overbey, Linda
   Rising, David Trowbridge, Joe Yoder, and the two anonymous reviewers.
   Finally, the authors would like to thank Microsoft for their financial
   support under the grant number Microsoft 2005-3326-00.
CR ANDREE M, 2006, MTA BENCHMARK
   [Anonymous], 2001, 2821 RFC
   [Anonymous], 2000, ATAM: Method for Architecture Evaluation
   [Anonymous], P 4 C PATT LANG PROG
   ASSMAN C, 2007, META1 README
   ASSMAN C, 2004, SENDMAIL 10 REQUIREM
   Beck K, 1994, LECT NOTES COMPUTER, V821, P139
   Bernstein Daniel J., 1997, QUICK MAIL TRANSFER
   BERNSTEIN DJ, 1997, TIME REALITY CHECK
   BERNSTEIN DJ, 1997, QMQP QUICK MAIL QUEU
   BERNSTEIN DJ, 1997, RELIABILITY
   Blakley B., 2004, Security design patterns
   COSTALES B, 2003, SENDMAIL
   EICHIN MW, 1988, IEEE S RES SECURITY, P326
   FRIEDL S, 2002, LINUX MAGAZINE   DEC
   Grone Bernhard., 2004, The Apache modeling project
   HAFIZ M, 2004, P 11 C PATT LANG PRO
   HAFIZ M, 2005, OOPSLA 05 COMP 20 AN, P142
   HAFIZ M, 2005, P 12 C PATT LANG PRO
   HAFIZ M, 2005, SECURITY ARCHITECTUR
   HAZEL P, 2000, PCRE PERL COMPATIBLE
   KLENSIN J, 1994, 1651 RFC
   *MAAWG, 2007, EM METR PROGR NETW O
   McKusick MK, 1999, PROCEEDINGS OF THE FREENIX TRACK, P1
   MYERS J, 1996, 2033 RFC
   PARNAS DL, 1985, P INT JOINT C THEOR, V2, P80
   PEEK J, 1995, 7H XMH EMAIL USERS P
   Postel Jonathan B., 1982, 821 RFC
   SHEARER D, 2001, MTAS CHOOSE TOOL JOB
   SILL D, 2006, LIFE
   SIMPSON K, 2007, OREALLY SYSADMIN JAN
   Swiderski F., 2004, Threat modeling
   VENEMA WZ, 1997, DANIAL SERVICE
   VERYARD R, 2001, TRUSTING COMPONENTS
   Viega J., 2001, BUILDING SECURE SOFT
   Zhong Q, 1998, COMPUTER, V31, P67, DOI 10.1109/2.683010
   1996, PHRACK MAGAZINE, V7
NR 37
TC 6
Z9 6
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2008
VL 38
IS 15
BP 1569
EP 1599
DI 10.1002/spe.880
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 385JR
UT WOS:000261811000001
DA 2024-07-18
ER

PT J
AU Blanco-Fernández, Y
   Pazos-Arias, JJ
   Gil-Solla, A
   Ramos-Cabrer, M
   López-Nores, M
   García-Duque, J
   Fernández-Vilas, A
   Díaz-Redondo, RP
   Bermejo-Muñoz, J
AF Blanco-Fernandez, Yolanda
   Pazos-Arias, Jose J.
   Gil-Solla, Alberto
   Ramos-Cabrer, Manuel
   Lopez-Nores, Martin
   Garcia-Duque, Jorge
   Fernandez-Vilas, Ana
   Diaz-Redondo, Rebeca P.
   Bermejo-Munoz, Jesus
TI An MHP framework to provide intelligent personalized recommendations
   about digital TV contents
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE digital TV; automatic content recommenders; MHP; Semantic web
AB Digital Television will bring a significant increase in the amount of channels and programs available to end users, with many more difficulties to find contents appealing to them among a myriad of irrelevant information. Thus, automatic content recommenders should receive special attention in the following years to improve their assistance to users. The current content recommenders have important deficiencies that hamper their wide acceptance. In this paper, we present a new approach for automatic content recommendation that significantly reduces those deficiencies. This approach, based on Semantic Web technologies, has been implemented in the AdVAnced Telematic search of Audiovisual contents by semantic Reasoning tool, a hybrid content recommender that makes extensive use of well-known standards, such as Multimedia Home Platform, TV-Anytime and OWL. Also, we have carried out an experimental evaluation, the results of which show that our proposal performs better than other existing approaches. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Blanco-Fernandez, Yolanda; Pazos-Arias, Jose J.; Gil-Solla, Alberto; Ramos-Cabrer, Manuel; Lopez-Nores, Martin; Garcia-Duque, Jorge; Fernandez-Vilas, Ana; Diaz-Redondo, Rebeca P.] Univ Vigo, Dept Telemat Engn, Vigo, Spain.
   [Bermejo-Munoz, Jesus] Telvent, Ronda Tamarguillo, Seville 29, Spain.
C3 Universidade de Vigo; Schneider Electric
RP Blanco-Fernández, Y (corresponding author), ETSE Telecomunicac, Campus Univ S-N, Vigo 36310, Spain.
EM yolanda@det.uvigo.es
RI Arias, José/ITR-8005-2023; Nores, Martín López/AAG-8636-2020; Díaz
   Redondo, Rebeca P./L-3108-2014; José, Pazos Arias/F-6788-2016; Nores,
   Martín López/F-9378-2016; Vilas, Ana Fernández/L-2055-2014; Gil,
   Alberto/F-6827-2016; Ramos Cabrer, Manuel/F-5339-2016
OI Nores, Martín López/0000-0002-4802-607X; Díaz Redondo, Rebeca
   P./0000-0002-2367-2219; José, Pazos Arias/0000-0002-0424-5481; Vilas,
   Ana Fernández/0000-0003-1047-2143; Gil, Alberto/0000-0002-9641-4149;
   Ramos Cabrer, Manuel/0000-0002-1684-2160
CR Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   Ali Kamal., 2004, ACM SIGKDD INT C KNO, P394, DOI DOI 10.1145/1014052.1014097
   Antoniou Grigoris, 2004, A Semantic Web Primer
   Ardissono L, 2004, HUM-COMPUT INT-SPRIN, P3
   Basu C, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P714
   BAUDISCH P, 2001, P 1 WORKSH PERS FUT, P151
   Berry MW, 1995, SIAM REV, V37, P573, DOI 10.1137/1037127
   BLANCOFERNANDEZ Y, 2005, P 3 EUR C INT TEL EU, P173
   BLANCOFERNANDEZ Y, 2005, P WORKSH WEB PERS RE, P69
   Burke R, 2002, USER MODEL USER-ADAP, V12, P331, DOI 10.1023/A:1021240730564
   CLARK J, 1999, EXTENSIBLE STYLESHEE
   DAS D, 2001, WS9808 AM ASS ART IN, P151
   *DIG VID BROADC CO, 2003, 102812V121 DIG VID B
   DIMITROVA N, 2003, P 3 WORKSH PERS FUT, P42
   *ETSI, 2006, 102323V121 ETSI TS
   Ganesan P, 2003, ACM T INFORM SYST, V21, P64, DOI 10.1145/635484.635487
   Hill W., 1995, Proceedings of CHI'95, P194
   Hobbs J.R., 2004, ACM TALIP, V3, P66, DOI DOI 10.1145/1017068.1017073
   Kornfeld Michael., 2005, EBU Technical Review
   Lin D, 1998, P 15 INT C MACH LEAR, V98, P296
   McGuinness D.L., 2004, W3C RECOMMENDATION, V10
   Melville P, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P187
   Middleton S., 2003, THESIS U SOUTHAMPTON
   Miller BM, 2003, IFAC WORK S, P263, DOI 10.1145/604045.604094
   Mobasher B, 2004, LECT NOTES COMPUT SC, V3209, P57, DOI 10.1007/978-3-540-30123-3_4
   Napoli P.M., 2003, AUDIENCE EC MEDIA I
   O'Sullivan D, 2004, USER MODEL USER-ADAP, V14, P5, DOI 10.1023/B:USER.0000010131.72217.12
   Pazos-Arias JJ, 2008, COMPUT EDUC, V50, P927, DOI 10.1016/j.compedu.2006.09.008
   Pazos-Arias JJ, 2006, SOFTWARE PRACT EXPER, V36, P845, DOI 10.1002/spc.719
   Pazzani MJ, 1999, ARTIF INTELL REV, V13, P393, DOI 10.1023/A:1006544522159
   PRATA A, 2004, P 4 WORKSH PERS FUT, P274
   Rast RM, 2005, IEEE SPECTRUM, V42, P26, DOI 10.1109/MSPEC.2005.1515956
   Resnik P, 1999, J ARTIF INTELL RES, V11, P95, DOI 10.1613/jair.514
   Schafer J. Ben, 1999, P 1 ACM C EL COMM, P158, DOI [DOI 10.1145/336992.337035, 10.1145/33699 2.337035]
   SCIADAS G, 2002, TECHNICAL REPORT CON, V7
   SONERA T, 2006, MBMS WHITE PAPER
   *TV AN FOR, 2006, EUR STAND ETSI TS 10
   Webster J., 2000, RATING ANAL THEORY P
   ZIEGLER C, 2004, P 2 ACM SIGIR SEM WE, P22
   Zimmerman J, 2004, HUM-COMPUT INT-SPRIN, P27
NR 40
TC 8
Z9 9
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2008
VL 38
IS 9
BP 925
EP 960
DI 10.1002/spe.855
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 331KC
UT WOS:000258010100002
DA 2024-07-18
ER

PT J
AU Cooper, J
   McKeever, S
AF Cooper, Jonathan
   McKeever, Steve
TI A model-driven approach to automatic conversion of physical units
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE physical dimensions; units of measurement; CellML; model driven
AB When physical quantities are used in programs they are typically represented as raw numbers, with the units in which they were measured only being given in comments, if at all. This can lead to errors from the use of dimensionally inconsistent expressions, or the comparison of two quantities of the same dimension but measured in different units, which are not discovered until run time. Any program working with the physical world has this issue, with scientific modelling being a major application. Implementors of models have the time-consuming and error-prone task of adding in dynamic units checks and conversions manually. Most existing programming languages do not provide support for representing units explicitly (although extensions to some have been proposed). With the advent of domain-specific modelling languages, incorporating code generation techniques, we propose checking physical units at the level of the modelling language, removing the need for such a support in the underlying implementation language. We present our work in the context of one such modelling language: CellML, developed at the University of Auckland with a focus on modelling biological systems. We have developed an intuitive algorithm for performing automatic conversions between quantities measured in different units. It both requires fewer conversion operations than current approaches and makes more sensible choices about which quantities to convert. Uniquely, by using partial evaluation techniques it is also capable of dealing robustly with quantities raised to arbitrary powers, even where the exponent is given by an expression. We demonstrate our algorithm on various examples. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Cooper, Jonathan; McKeever, Steve] Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
C3 University of Oxford
RP Cooper, J (corresponding author), Univ Oxford, Comp Lab, Wolfson Bldg,Parks Rd, Oxford OX1 3QD, England.
EM jonathan.cooper@comlab.ox.ac.uk
RI Cooper, Jonathan/F-8529-2010
OI Cooper, Jonathan/0000-0001-6009-3542
CR Allen E., 2006, The Fortress Language Specification
   [Anonymous], OOPSLA 04
   BALDWIN G, 1987, SIGPLAN NOTICES, V22, P45, DOI 10.1145/35596.35601
   Cooper S., 2006, ACM SIGPLAN S PARTIA, P12, DOI [10.1145/1111542.1111546, DOI 10.1145/1111542.1111546]
   DREIHELLER A, 1986, SIGPLAN NOTICES, V21, P114, DOI 10.1145/15042.15048
   Garny A, 2003, INT J BIFURCAT CHAOS, V13, P3579, DOI 10.1142/S021812740300882X
   GEHANI N, 1977, COMPUT LANG, V2, P93, DOI 10.1016/0096-0551(77)90010-8
   GEHANI NH, 1985, SOFTWARE PRACT EXPER, V15, P555, DOI 10.1002/spe.4380150604
   HEDLEY W. J., 2001, CELLML SPECIFICATION
   HEDLEYWJ, 2001, PHILOS T MATH PHYS E, V359, P1073
   HOUSE RT, 1983, COMPUT J, V26, P366, DOI 10.1093/comjnl/26.4.366
   KARR M, 1978, COMMUN ACM, V21, P385, DOI 10.1145/359488.359501
   KENNEDY A, 1994, LNCS, V788, P348
   Lloyd CM, 2004, PROG BIOPHYS MOL BIO, V85, P433, DOI 10.1016/j.pbiomolbio.2004.01.004
   MANNER R, 1986, SIGPLAN NOTICES, V21, P11, DOI 10.1145/382280.382281
   NEUMANN P, 1985, ACM SOFTWARE ENG NOT, V10, P5
   NOVAK GS, 1995, IEEE T SOFTWARE ENG, V21, P651, DOI 10.1109/32.403789
   S ND, 1993, PARTIAL EVALUATION A
   van Delft A, 1999, SOFTWARE PRACT EXPER, V29, P605, DOI 10.1002/(SICI)1097-024X(199906)29:7<605::AID-SPE249>3.0.CO;2-W
   Wilkinson D, 2005, PSYCHOL HEALTH, V20, P292
NR 20
TC 17
Z9 18
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2008
VL 38
IS 4
BP 337
EP 359
DI 10.1002/spe.828
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 286OD
UT WOS:000254854300001
DA 2024-07-18
ER

PT J
AU Xue, JL
   Cai, Q
   Gao, L
AF Xue, Jingling
   Cai, Qiong
   Gao, Lin
TI Partial dead code elimination on predicated code regions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code optimization; partial dead code elimination; predicated code;
   predication; predicate partition graphs; hyperblocks; regions;
   performance evaluation
AB This paper presents the design, implementation and experimental evaluation of a practical region-based partial dead code elimination (PDE) algorithm on predicated code in the Open Research Compiler framework. Existing PDE algorithms are not applicable on predicated code due to the existence of if-converted branches in the program. The proposed algorithm processes all PDE candidates in a worklist and considers their partial deadness using predicate partition graphs. Our algorithm operates uniformly on individual hyperblocks as well as regions comprising of basic blocks and hyperblocks. The result of applying our algorithm to a single-entry multiple-exit (SEME) region is optimal: partially dead code cannot be removed without changing the branching structure of the program or potentially introducing new predicate defining instructions. We present statistical evidence about the PDE opportunities in the 17 SPEC95 and SPEC00 integer benchmarks. Our algorithm achieves performance improvements in 12 out of the 17 benchmarks on an Itanium machine at small compilation overheads. Our results indicate that our algorithm can be used as a practical pass before instruction scheduling. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ New S Wales, Sch Engn & Comp Sci, Programming Languages & Compilers Grp, Sydney, NSW 2052, Australia.
C3 University of New South Wales Sydney
RP Xue, JL (corresponding author), Univ New S Wales, Sch Engn & Comp Sci, Programming Languages & Compilers Grp, Sydney, NSW 2052, Australia.
EM jxue@cse.unsw.edu.au
RI Gao, Lin/JNF-0375-2023; Xue, Jingling/AAE-1991-2020
OI Xue, Jingling/0000-0003-0380-3506
CR Allen J.R., 1983, Proc. of the Symposium on Principles of Programming Languages. POPL, P177
   August DI, 1997, INT SYMP MICROARCH, P92, DOI 10.1109/MICRO.1997.645801
   AUGUST DI, 2002, THESIS U ILLINOIS UR
   Bharadwaj J, 1999, INT SYMP MICROARCH, P262, DOI 10.1109/MICRO.1999.809464
   Bodik R, 1998, ACM SIGPLAN NOTICES, V33, P1, DOI 10.1145/277652.277653
   BODIK R, 1997, P ACM SIGPLAN 97 C P, P159, DOI DOI 10.1145/258915.258930
   Butts JA, 2002, ACM SIGPLAN NOTICES, V37, P199, DOI 10.1145/605432.605419
   Cai Q, 2003, INT SYM CODE GENER, P91, DOI 10.1109/CGO.2003.1191536
   CHANG PP, 1991, P 18 INT S COMP ARCH, P266
   COLLARD JF, 2000, 200002 PRISM
   Fisher J. A., 1981, IEEE T COMPUTERS, V30
   Gillies DM, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P114, DOI 10.1109/MICRO.1996.566455
   Gupta R, 1997, 1997 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P102, DOI 10.1109/PACT.1997.644007
   Hank R. E., 1995, Proceedings of the 28th Annual International Symposium on Microarchitecture (Cat. No.95TB100012), P158, DOI 10.1109/MICRO.1995.476823
   HWU WMW, 1993, J SUPERCOMPUT, V7, P229, DOI 10.1007/BF01205185
   *INT, 2001, INT IT PROC REF MAN
   Johnson R, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P100, DOI 10.1109/MICRO.1996.566454
   Kennedy R, 1999, ACM T PROGR LANG SYS, V21, P627, DOI 10.1145/319301.319348
   Knoop J., 1994, SIGPLAN Notices, V29, P147, DOI 10.1145/773473.178256
   KNOOP J, 1994, ACM T PROGR LANG SYS, V16, P1117, DOI 10.1145/183432.183443
   KNOOP J, 2000, P 7 INT STAT AN S
   Mahlke S.A., 1992, Proceedings of the 25th Annual International Symposium on Microarchitecture, MICRO 25, P45, DOI [10.1109/MICRO.1992.696999, DOI 10.1109/MICRO.1992.696999]
   Muchnick S., 1997, ADV COMPILER DESIGN
   Sias JW, 2000, INT SYMP MICROARCH, P112, DOI 10.1109/MICRO.2000.898063
   SUGANUMA T, 2003, P ACM SIGPLAN 2003 C, P312
   Yang Liu, 2003, Proceedings Seventh Workshop on Interaction between Compilers and Computer Architectures. INTERACT-7 2003, P75, DOI 10.1109/INTERA.2003.1192358
   YOAZ A, 2001, P WORK IN PROGR WORK
   2005, OPEN RES COMPILER IT
NR 28
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2006
VL 36
IS 15
BP 1655
EP 1685
DI 10.1002/spe.739
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 114XW
UT WOS:000242699900002
DA 2024-07-18
ER

PT J
AU Vidakovic, J
   Rackovic, M
AF Vidakovic, J
   Rackovic, M
TI Generating content and display of library catalogue cards using XML
   technology
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XML; XML Schema language; catalogue cards; concepts; display
AB This paper presents the use of XML technology in modelling library documents, i.e. catalogue cards (and the type of reports) found in a library information system. The method of schema formation for content of various types of library catalogue cards is also described. The display of catalogue cards has been done based on described schemas. The display process has been performed in two steps. The first one extracts the content from a bibliographical record based on the schema describing catalogue card concepts. The result is an XML document containing all catalogue card concepts filled in with the corresponding content from the bibliographical record. Its display is being performed in the second step, resulting in an HTML document. As well as adequate representation of data obtained by searching bibliographical material databases, reporting is of prime importance in a library information system. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Fac Sci, Dept Math & Comp Sci, Novi Sad 21000, Serbia Monteneg.
RP Vidakovic, J (corresponding author), Fac Sci, Dept Math & Comp Sci, Trg Dositeja Obradovica 4, Novi Sad 21000, Serbia Monteneg.
EM jovana@im.ns.ac.yu
RI Racković, Miloš/IQT-3885-2023
OI Racković, Miloš/0000-0002-0111-5059
CR CLARKE KS, 2005, MEDLANE XMLMARC UPDA
   Jaksic M, 2004, SOFTWARE PRACT EXPER, V34, P1051, DOI 10.1002/spe.603
   LUDWIG M, 2003, BREAKING INVISIBLE W
   PETERS B, 2005, MARC4J
   SAVIC N, 1998, THESIS BELGRADE
   SURLA D, 2004, DISTRIBUTED LIB INFO
   VIDAKOVIC J, 2003, NOVI SAD J MATH, V33, P95
   VIDAKOVIC J, 2003, THESIS NOVI SAD
   VULIC T, 1997, THESIS NOVI SAD
   ZEREMSKI M, 2002, THESIS NOVI SAD
   2005, FAMILY ISBDS
   2005, MARX XML MARC 21 XML
NR 12
TC 5
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2006
VL 36
IS 5
BP 513
EP 524
DI 10.1002/spe.707
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 040WB
UT WOS:000237410500004
DA 2024-07-18
ER

PT J
AU Fraser, CW
AF Fraser, CW
TI An instruction for direct interpretation of LZ77-compressed programs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bytecode; compression; interpreters
AB A new instruction adapts LZ77 compression for use inside running programs. The instruction economically references and reuses code fragments that are too small to package as conventional subroutines. The compressed code is interpreted directly, with neither prior nor on-the-fly decompression. Hardware implementations seem plausible and could benefit both memory-constrained and more conventional systems. The method is extremely simple. It has been added to a pre-existing, bytecoded instruction set, and it added only 10 lines of C to the bytecode interpreter. It typically cuts code size by a third; that is, typical compression ratios are roughly 0.67 x. More ambitious compressors are available, but they are more complex, which retards adoption. The current method offers a useful trade-off to these more complex systems. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Microsoft Res, Redmond, WA 98052 USA.
C3 Microsoft
RP Fraser, CW (corresponding author), Microsoft Res, 1 Microsoft Way, Redmond, WA 98052 USA.
EM ewfraser@microsoft.com
CR ABALI B, 2000, RC217999 IBM TJ WATS
   Bell T. C., 1990, TEXT COMPRESSION
   BENVENISTE C, 2000, RC21662 IBM TJ WATS
   BIRD PL, 1996, CSETR31996 U MICH EE
   BRISK P, 2004, P 8 INT WORKSH SOFTW
   Burger D., 1997, Computer Architecture News, V25, P13, DOI 10.1145/268806.268810
   COOPER K, 1999, P ACM SIGPLAN C PROG, P139
   CORLISS M, 2003, LCTES            JUN, P232
   Debray SK, 2000, ACM T PROGR LANG SYS, V22, P378, DOI 10.1145/349214.349233
   Ditzel D. R., 1987, P INT S COMP ARCH PI, P309
   EVANS WS, 2001, PLDI 01 P ACM SIGPLA, P148
   FENWICK PM, 1993, P IEEE DAT COMPR C S, P138
   FRASER C, 1995, RETAGETABLE C COMPIL
   FRASER CW, 2002, MSRTR200290 MICR RES
   FRASER CW, 1984, P SIGPLAN 84 S COMP, P117
   Game M, 2000, CODEPACK CODE COMPRE
   HUFFMAN DA, 1952, P IRE, V40, P1098, DOI 10.1109/JRPROC.1952.273898
   Klaiber A., 2000, The technology behind the crusoe processor whitepaper
   KUNCHITHAPADAM K, 1999, 1390 U WISC MAD
   Larin SY, 1999, INT SYMP MICROARCH, P82, DOI 10.1109/MICRO.1999.809446
   LATENDRESSE M, 2003, P WORKSH INT VIRT MA
   LAU J, 2003, P 2003 INT C COMP AR, P84
   Lefurgy C, 1997, INT SYMP MICROARCH, P194, DOI 10.1109/MICRO.1997.645810
   Lefurgy C, 1999, INT SYMP MICROARCH, P93, DOI 10.1109/MICRO.1999.809447
   Lefurgy C., 2000, Proceedings ofthe International Symposium on High-Performance Computer Architecture (HPCA), P218
   Liao S., 1999, ACM Transactions on Design Automation of Electronic Systems, V4, P12, DOI 10.1145/298865.298867
   LIAO SYH, 1996, THESIS MIT CAMBRIDGE
   LUCCO S, 2000, P ACM SIGPLAN 00 C P, P27
   PROEBSTING TA, 1995, PRINCIPLES PROGRAMMI, P322
   Tunstall B. P., 1967, PhD diss
   VANDEWIEL R, 2005, CODE COMPACTION BIBL
   WU Y, 2004, P WORKSH COMP TOOLS
   ZIV J, 1977, IEEE T INFORM THEORY, V23, P337, DOI 10.1109/TIT.1977.1055714
   [No title captured]
NR 34
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2006
VL 36
IS 4
BP 397
EP 411
DI 10.1002/spe.702
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 031MK
UT WOS:000236708500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Canfora, G
   García, F
   Piattini, M
   Ruiz, F
   Visaggio, CA
AF Canfora, G
   García, F
   Piattini, M
   Ruiz, F
   Visaggio, CA
TI Applying a framework for the improvement of software process maturity
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software process modelling; measurement; improvement
ID EMPIRICAL VALIDATION; MAINTENANCE; METRICS; MODELS
AB This article presents the results and lessons learned in the application of the Framework for the Modelling and Measurement of Software Processes (FMESP) in a software company dedicated to the development and maintenance of software for information systems. The aim of FMESP is to provide companies with a conceptual and technological framework for the management of their process models and measurement models in an integrated way. Modelling and measurement are two key factors to promote continuous process improvement. As a result, important benefits were obtained. The company improved the maturity of its processes which allowed it to obtain the ISO 9000 certification. From a research point of view, Action-Research was successfully applied and as a result the framework was improved and important feedback was obtained, bringing to light new important issues which will be tacked in future work. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Castilla La Mancha, Alarcos Res Grp, E-13071 Ciudad Real, Spain.
   Univ Sannio, Dept Engn, RCOST, I-82100 Benevento, Italy.
C3 Universidad de Castilla-La Mancha; University of Sannio
RP Univ Castilla La Mancha, Alarcos Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM felix.garcia@uclin.es
RI Ruiz, Francisco/D-4295-2011; Piattini, Mario/F-6271-2013; Garcia,
   Felix/D-4299-2011
OI Ruiz, Francisco/0000-0002-4923-7848; Piattini,
   Mario/0000-0002-7212-8279; visaggio, Corrado Aaron/0000-0002-0558-4450;
   Canfora, Gerardo/0000-0003-0049-1279; Garcia, Felix/0000-0001-6460-0353
CR Aurum A., 2003, Managing Software Engineering Knowledge
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   BEZIVIN J, 2004, UPGRADE EUROPEAN J I, V5, P27
   Calero C, 2001, INFORM SOFTWARE TECH, V43, P949, DOI 10.1016/S0950-5849(01)00202-6
   *CARN MELL U SOFTW, 1995, CAP MAT MOD GUID IMP
   *CARN MELL U SOFTW, 2002, CAP MAT MOD INT CMMI
   FLORAC WA, 1999, SEI S SOFTW, P1
   García F, 2004, LECT NOTES COMPUT SC, V3009, P146
   García F, 2002, ENTERPRISE INFORMATION SYSTEMS IV, P219
   García F, 2003, LECT NOTES COMPUT SC, V2786, P94
   GARCIA F, 2004, DIAB04022 UCLM COMP
   GARCIA F, 2004, THESIS U CASTILLA LA
   GARCIA F, UNPUB INFORM SOFTWAR
   Genero M, 2005, METRICS FOR SOFTWARE CONCEPTUAL MODELS, P1, DOI 10.1142/9781860946066
   Genero M, 2000, LECT NOTES COMPUT SC, V1920, P513
   Goldenson D., 2003, CROSSTALK J DEFENSE, V6, P20
   *INT ORG STAND, 1998, 15504 ISO IEC
   *INT ORG STAND, 2000, 90002000 ISOIEC
   International Organization for Standardization, 2002, 15939 ISOIEC
   JONES C, 2003, CROSSTALK J DEFENSE, V16, P15
   MANSO E, 2003, P 15 INT C ADV INF S, P127
   *MIN ADM PUBL, 2000, METRICA VERS 3 0 MET
   Mutafelija B., 2003, SYSTEMATIC PROCESS I
   *OBJ MAN GROUP, 2002, MET OBJ FAC MOE SPEC
   *OBJ MAN GROUP, 2002, XML MET INT XMI SPEC
   Object Management Group, 2002, SOFTW PROC ENG MET S
   PAULK MC, 1994, CMUSEI94TR12
   Piattini M, 2001, INT J SOFTW ENG KNOW, V11, P703, DOI 10.1142/S0218194001000736
   Polo M, 2002, SOFTWARE PRACT EXPER, V32, P1239, DOI 10.1002/spe.481
   Ruiz F, 2002, LECT NOTES COMPUT SC, V2559, P546
   Serrano M, 2004, BIOMED SCI INSTRUM, V3084, P506
   Vizcaino A, 2003, LECT NOTES ARTIF INT, V2663, P307
NR 32
TC 10
Z9 11
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2006
VL 36
IS 3
BP 283
EP 304
DI 10.1002/spe.697
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 020MW
UT WOS:000235914600003
DA 2024-07-18
ER

PT J
AU Vander Zanden, BT
   Halterman, R
   Myers, BA
   Miller, R
   Szekely, P
   Giuse, DA
   Kosbie, D
   McDaniel, R
AF Vander Zanden, BT
   Halterman, R
   Myers, BA
   Miller, R
   Szekely, P
   Giuse, DA
   Kosbie, D
   McDaniel, R
TI Lessons learned from programmers' experiences with one-way constraints
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE one-way constraints; constraint experience; constraint usage; graphical
   interfaces; interface toolkits
ID LANGUAGE; OBJECT; INTERFACES; MODEL
AB One-way constraints have been incorporated in many graphical user interface toolkits because they are simple to learn, easy to write, and can express many types of useful graphical relationships. This paper is an evaluative paper that examines users' experience with one-way constraints in two user interface development toolkits, Garnet and Amulet, over a 15-year time span. The lessons gained from this examination can help guide the design of future constraint systems. The most important lessons are that (1) constraints should be allowed to contain arbitrary code that is written in the underlying toolkit language and does not require any annotations, such as parameter declarations, (2) constraints are difficult to debug and better debugging tools are needed, and (3) programmers will readily use one-way constraints to specify the graphical layout of an application, but must be carefully and time-consumingly trained to use them for other purposes. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Tennessee, Dept Comp Sci, Knoxville, TN 37996 USA.
   So Adventist Univ, Sch Comp, Collegedale, TN 37315 USA.
   Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   MIT, CSAIL, Cambridge, MA 02139 USA.
   Univ So Calif, Inst Informat Sci, Marina Del Rey, CA 90292 USA.
   Vanderbilt Univ, Med Ctr, Nashville, TN 37232 USA.
   Siemens Technol Business Ctr, Berkeley, CA 94704 USA.
C3 University of Tennessee System; University of Tennessee Knoxville;
   Southern Adventist University; Carnegie Mellon University; Massachusetts
   Institute of Technology (MIT); University of Southern California;
   Vanderbilt University; Siemens AG
RP Univ Tennessee, Dept Comp Sci, Knoxville, TN 37996 USA.
EM bvz@cs.utk.edu
CR ALPERN B, 1990, PROCEEDINGS OF THE FIRST ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P32
   BARTH PS, 1986, ACM T GRAPHIC, V5, P142, DOI 10.1145/22949.22951
   BORNING A, 1981, ACM T PROGR LANG SYS, V3, P353, DOI 10.1145/357146.357147
   BORNING A, 1986, P ACM IEEE FALL JOIN
   BROWN PS, 1987, ACM T INFORM SYST, V5, P258, DOI 10.1145/27641.28058
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Henry T. R., 1988, Proceedings of the ACM SIGGRAPH Symposium on User Interface Software, P167, DOI 10.1145/62402.62429
   HILL RD, 1994, ACM T COMPUT-HUM INT, V1, P81, DOI DOI 10.1145/180171.180172
   HOOVER R, 1987, THESIS CORNELL U ITH
   Hudson S.E., 1996, Proceedings of the 9th annual ACM symposium on User Interface Software and Technology, P147, DOI DOI 10.1145/237091.237112
   HUDSON SE, 1988, IEEE T SOFTWARE ENG, V14, P1188, DOI 10.1109/32.7628
   HUDSON SE, 1991, ACM T PROGR LANG SYS, V13, P315, DOI 10.1145/117009.117012
   HUDSON SE, 1994, ACM T GRAPHIC, V13, P209, DOI 10.1145/195784.195787
   HUDSON SE, 1993, 9315 COLL COMP GEORG
   HUDSON SE, 1997, SUBARCTIC USER INTEF
   LIEBERMAN H, 1986, SIGPLAN NOTICES, V21, P214, DOI 10.1145/960112.28718
   Myers B., 2000, ACM Transactions on Computer-Human Interaction, V7, P3, DOI 10.1145/344949.344959
   MYERS BA, 1990, ACM T PROGR LANG SYS, V12, P143, DOI 10.1145/78942.78943
   MYERS BA, 1990, ACM T INFORM SYST, V8, P289, DOI 10.1145/98188.98204
   Myers BA, 1997, IEEE T SOFTWARE ENG, V23, P347, DOI 10.1109/32.601073
   MYERS BA, 1990, IEEE COMPUT, V23, P71
   REPS T, 1983, ACM T PROGR LANG SYS, V5, P449, DOI 10.1145/2166.357218
   ROSENER WJ, 1994, THESIS U TENNESSEE K
   Steele Jr Guy L., 1990, COMMON LISP LANGUAGE
   SUSSMAN GJ, 1980, ARTIF INTELL, V14, P1, DOI 10.1016/0004-3702(80)90032-6
   UNGAR D, 1992, COMPUTER, V25, P53, DOI 10.1109/2.161280
   VANDERZANDEN B, 2001, ACM T COMPUTER HUMAN, V8, P323
   VANDERZANDEN B, 1994, ACM T COMPUT-HUM INT, V1, P161
   VLISSIDES JM, 1989, IEEE COMPUT, V22, P8
   Zanden BTV, 2001, ACM T PROGR LANG SYS, V23, P776, DOI 10.1145/506315.506318
   [No title captured]
NR 31
TC 2
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2005
VL 35
IS 13
BP 1275
EP 1298
DI 10.1002/spe.671
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 979FH
UT WOS:000232927300003
DA 2024-07-18
ER

PT J
AU Myles, G
   Collberg, C
   Heidepriem, Z
   Navabi, A
AF Myles, G
   Collberg, C
   Heidepriem, Z
   Navabi, A
TI The evaluation of two software watermarking algorithms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software watermarking; copyright protection; software piracy
AB In this paper we analyze the effectiveness of two different software watermarking algorithms. The first is an algorithm proposed by Akito Monden et al. and the second an algorithm proposed by Robert L. Davidson and Nathan Myhrvold of the Microsoft Corporation. We have implemented these techniques within the SANDMARK framework, a system designed to study the effectiveness of software protection algorithms on Java bytecode. To the best of our knowledge this is the first implementation and empirical evaluation of these algorithms with respect to a set of properties such as bit-rate, stealth, and resilience to attack. We demonstrate through the use of the SANDMARK framework that both of these algorithms have a high bit-rate but are unstealthy and easy to attack. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
C3 University of Arizona
RP Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
EM mylesg@cs.arizona.edu
CR [Anonymous], 1998, P 25 ACM SIGPLAN SIG
   [Anonymous], 8 ANN BSA GLOB SOFTW
   Arboit G., 2002, P 5 INT C EL COMM RE
   Collberg C, 2004, ACM SIGPLAN NOTICES, V39, P107, DOI 10.1145/996893.996856
   Collberg C., 2003, IEEE Security & Privacy, V1, P40, DOI 10.1109/MSECP.2003.1219058
   COLLBERG C, 2004, SANDMARK TOOL STUDY
   Collberg C., 1997, TAXONOMY OBFUSCATING
   Collberg C., 1999, P 26 ACM SIGPLAN SIG
   COLLBERG C, 1998, P 1998 INT C COMP LA
   Cousot Patrick., 2004, P 31 ACM SIGPLAN SIG
   Davidson R.L., 1996, US Patent, Patent No. [5,559,884, 5559884]
   Hachez G., 2003, Ph.D. Thesis
   Knuth D. E., ART COMPUTER PROGRAM, V2
   MONDEN A, 2000, P 24 INT COMP SOFTW
   MYLES G, 2004, P 7 INT C EL COMM RE
   MYLES G, 2004, LECT NOTES COMPUTER, V2971
   Palsberg J, 2000, 16TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P308, DOI 10.1109/ACSAC.2000.898885
   Qu G, 2000, LECT NOTES COMPUT SC, V1768, P348
   Stern JP, 2000, LECT NOTES COMPUT SC, V1768, P368
   VENKATESAN R, 2001, LECT NOTES COMPUTER, V2137
NR 20
TC 10
Z9 12
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2005
VL 35
IS 10
BP 923
EP 938
DI 10.1002/spe.657
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 952AV
UT WOS:000230974500002
DA 2024-07-18
ER

PT J
AU Fox, C
   Danicic, S
   Harman, M
   Hierons, RM
AF Fox, C
   Danicic, S
   Harman, M
   Hierons, RM
TI CONSIT: a fully automated conditioned program slicer
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE conditioned slicing; program conditioning; slicing; symbolic execution;
   path analysis
ID SYMBOLIC EXECUTION; SPECIALIZATION; ASSERTIONS
AB Conditioned slicing is a source code extraction technique. The extraction is performed with respect to a slicing criterion which contains a set of variables and conditions of interest. Conditioned slicing removes the parts of the original program which cannot affect the variables at the point of interest, when the conditions are satisfied. This produces a conditioned slice, which preserves the behaviour of the original with respect to the slicing criterion.
   Conditioned slicing has applications in source code comprehension, reuse, restructuring and testing. Unfortunately, implementation is not straightforward because the full exploitation of conditions requires the combination of symbolic execution, theorem proving and traditional static slicing. Hitherto, this difficultly has hindered development of fully automated conditioning slicing tools.
   This paper describes the first fully automated conditioned slicing system, CONSIT, detailing the theory that underlies it, its architecture and the way it combines symbolic execution, theorem proving and slicing technologies. The use of CONSIT is illustrated with respect to the applications of testing and comprehension. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Essex, Dept Comp Sci, Colchester CO4 3SQ, Essex, England.
   Univ London Goldsmiths Coll, Dept Comp, London SE14 6NW, England.
   Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
C3 University of Essex; University of London; Goldsmiths University London;
   Brunel University
RP Univ Essex, Dept Comp Sci, Wivenhoe Pk, Colchester CO4 3SQ, Essex, England.
EM foxcj@essex.ac.uk
OI Hierons, Robert/0000-0002-4771-1446; Harman, Mark/0000-0002-5864-4488
CR AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   AGRAWAL H, 1990, ACM SIGPLAN C PROGR, V25
   [Anonymous], 1949, REPORT C HIGH SPEED
   Barrett C, 1996, LECT NOTES COMPUT SC, V1166, P187, DOI 10.1007/BFb0031808
   Binkley D., 1996, Advances in Computers, V43, P1
   Bjorner N, 1997, THEOR COMPUT SCI, V173, P49, DOI 10.1016/S0304-3975(96)00191-0
   CANFORA G, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P424, DOI 10.1109/ICSM.1994.336752
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   Cimitile A, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P124, DOI 10.1109/ICSM.1995.526534
   CIMITILE A, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P178, DOI 10.1109/WCRE.1995.514706
   CLARKE LA, 1982, IEEE T SOFTWARE ENG, V8, P380, DOI 10.1109/TSE.1982.235572
   COENPORISINI A, 1991, IEEE T SOFTWARE ENG, V17, P884, DOI 10.1109/32.92907
   COWARD PD, 1988, SOFTWARE ENG J, V3, P229, DOI 10.1049/sej.1988.0029
   Danicic S, 2000, PROC IEEE INT CONF S, P216, DOI 10.1109/ICSM.2000.883049
   Danicic S, 1995, INFORM PROCESS LETT, V56, P307, DOI 10.1016/0020-0190(95)00170-0
   DANICIC S, 2000, ACM S APPL COMP SAC, P831
   De Lucia A, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P142, DOI 10.1109/SCAM.2001.972675
   DeLucia A, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P9, DOI 10.1109/WPC.1996.501116
   DELUCIA A, 1996, COMMUNICATION
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Ershov A. P., 1978, ESSENCE COMPUTATION, P391
   FIELD J, 1995, P 22 ACM S PRINC PRO, P379
   Fischer B, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P74, DOI 10.1023/A:1008766409590
   FLATER DW, 1993, SOFTWARE PRACT EXPER, V23, P617, DOI 10.1002/spe.4380230604
   Floyd R.W., 1967, P S APPL MATH, V19, P19
   Fox C, 2001, PROG COMPREHEN, P89, DOI 10.1109/WPC.2001.921717
   FUTAMURA Y, 1987, IFIP TC2 WORKSH PART, P133
   Futamura Y., 1971, Systems, Computers, Controls, V54-C, P721
   Goldberg A., 1994, P 1994 INT S SOFTW T, P80
   Harman M, 2001, PROC IEEE INT CONF S, P138, DOI 10.1109/ICSM.2001.972724
   HARMAN M, 2001, SOFTWARE FOCUS, V2, P85
   Hierons R, 2002, SOFTW TEST VERIF REL, V12, P23, DOI 10.1002/stvr.232
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   HORWITZ S, WISCONSIN PROGRAM SL
   JAOUA A, 1990, J SYST SOFTWARE, V12, P15, DOI 10.1016/0164-1212(90)90063-R
   Kamkar M, 1993, THESIS LINKOPING U S
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B, 1998, INFORM SOFTWARE TECH, V40, P647, DOI 10.1016/S0950-5849(98)00089-5
   Lee WK, 2001, J SYST ARCHITECT, V47, P427, DOI 10.1016/S1383-7621(01)00003-0
   LEVITT JL, 1998, THESIS STANFORD U
   LYLE JR, UNRAVEL PROJET
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   RICHARDSON DJ, 1985, IEEE T SOFTWARE ENG, V11, P1477, DOI 10.1109/TSE.1985.231892
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   TIP F, 1995, J PROGRAM LANG, V3, P121
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser MD., 1979, PROGRAM SLICES FORMA
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   [No title captured]
   [No title captured]
NR 51
TC 16
Z9 17
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2004
VL 34
IS 1
BP 15
EP 46
DI 10.1002/spe.556
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 763TV
UT WOS:000188117300002
DA 2024-07-18
ER

PT J
AU Watson, D
   Malan, GR
   Jahanian, F
AF Watson, D
   Malan, GR
   Jahanian, F
TI An extensible probe architecture for network protocol performance
   measurement
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE passive measurement; packet classification; packet filter; network
   protocols; Windmill
AB This paper describes the architecture, implementation, and application of Windmill, a passive network protocol performance measurement tool. Windmill enables experimenters to measure a broad range of protocol performance metrics both by reconstructing application-level network protocols and by exposing the underlying protocol layers' events. Windmill is split into three functional components: a dynamically compiled Windmill Protocol Filter (WPF), a set of abstract protocol modules, and an extensible experiment engine. To demonstrate Windmill's utility, we present the results from several experiments. The first set of experiments validates a possible cause for the correlation between Internet routing instability and network bandwidth usage. The second set of experiments highlights Windmill's ability to act as a driver for a complementary active Internet measurement infrastructure, its ability to perform online data reduction, and the non-intrusive measurement of a closed system. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Michigan, Dept Elect Engn & Comp Sci, Ann Arbor, MI 48109 USA.
   Arbor Networks, Ann Arbor, MI 48104 USA.
C3 University of Michigan System; University of Michigan
RP Watson, D (corresponding author), Univ Michigan, Dept Elect Engn & Comp Sci, 1301 Beal Ave, Ann Arbor, MI 48109 USA.
EM dwatson@umich.edu
CR ALMES G, 1997, METRICS INFRASTRUCTU
   ANAGNOSTAKIS KG, 2002, P 8 IEEE NETW OP MAN
   ANDERSON JM, 1997, P 16 ACM S OP SYST P
   [Anonymous], 1995, ROUTING INTERNET
   APISDORF J, 1997, P INET 97 KUAL LUMP
   BAILEY ML, 1994, P 1 USENIX S OP SYST
   Cassandras C. G., 2009, Introduction to Discrete Event Systems
   ENGLER D, 1996, P ACM SIGCOMM 96 AUG
   Feldmann A, 2000, COMPUT NETW, V33, P321, DOI 10.1016/S1389-1286(00)00077-3
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   KEYS K, 2001, PAM 2001 WORKSH APR
   LABOVITZ C, 1997, P ACM SIGCOMM 97 CAN
   LOUGHEED K, 1990, 1163 RFC
   MAHDAVI J, 1997, INTERNET STAT METRIC
   Malan GR, 1998, J HIGH SPEED NETW, V7, P319
   MCCANNE S, 1993, P 1993 WINT USENIX T
   Mogul J., 1987, SOSP 87, P39
   PAXSON V, 1996, P ACM SIGCOMM 96 AUG
   ROSENBLUM M, 1995, IEEE PARALL DISTRIB, V3, P34, DOI 10.1109/88.473612
   Shannon C, 2002, IEEE ACM T NETWORK, V10, P709, DOI 10.1109/TNET.2002.805028
   Subramanian S, 1999, IEEE INTERNET COMPUT, V3, P46, DOI 10.1109/4236.761653
   Wright Gary R., 1995, TCP/IP Illustrated, Volume 2: The Implementation, V2
   YUHARA M, 1994, P 1994 WINT USENIX T
   Zhang C.X., 1997, S OPERATING SYSTEMS, P15
   ZHANG Y, 2002, P ACM SIGCOMM AUG 20
NR 25
TC 3
Z9 3
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2004
VL 34
IS 1
BP 47
EP 67
DI 10.1002/spe.557
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 763TV
UT WOS:000188117300003
OA Green Published
DA 2024-07-18
ER

PT J
AU Ruddle, A
   Allison, C
   Nicoll, R
AF Ruddle, A
   Allison, C
   Nicoll, R
TI Analysing the latency of world wide web applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Computer Communications and Networks
CY OCT 15-17, 2001
CL PHOENIX, AZ
SP Army Res Lab, IBM, Telcordia, Nokia, Avaya, IEEE Communicat Soc
DE Web; congestion; latency
ID CONGESTION CONTROL
AB As the Web becomes increasingly used for routine social and economic interactions, the issue of interactive delay, as experienced by end-users, has become an ongoing cause for concern. This paper reports on an approach of identifying and analysing the factors that contribute towards that delay. The evolution of a structured timing model is described, which forms the basis for decomposing delay into its constituent parts. The four high-level components identified are the server, network, protocol and client. Methodologies for determining the contribution of each element are presented and their use is illustrated in a case study of the traffic associated with an operational distributed learning environment (DLE) serving six universities over a period of several months. Quality of service (QoS) is key to the success of DLEs and this includes an understanding of their relationship with the underlying networks and systems upon which they are built and deployed. Delay, as experienced by the end user, is one of the key QoS parameters for a DLE. The importance of developing an understanding of the nature of delay in a DLE is twofold: it informs decisions about where to target effort and resources in order to achieve improvements; and it provides techniques that can be used as the basis for an early-warning and advisory system for QoS aware applications. The latter functionality is illustrated by a novel solution that modifies TCP's congestion avoidance algorithm for the benefit of interactive Web traffic. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ St Andrews, Sch Comp Sci, St Andrews, Fife, Scotland.
C3 University of St Andrews
RP Univ St Andrews, Sch Comp Sci, St Andrews, Fife, Scotland.
EM alanr@dcs.st-and.ac.uk
OI Miller, Alan Henry David/0000-0003-1209-9063
CR Allison C, 1998, EUROMICRO CONF PROC, P932, DOI 10.1109/EURMIC.1998.708124
   Allison C, 1999, ADV CONCURRENT ENGN, V99, P345
   ALLISON C, 2000, WEB BASED LEARNING E, P10
   ALLISON C, 2001, ADV LEARNING TECHNOL, P29
   ALLMAN M, 1998, 2414 RFC
   ALLMAN M, 1998, INTERNET DRAFT DRAFT
   [Anonymous], LEARNING TEACHING BU
   [Anonymous], 1997, An Engineering Approach to Computer Networking: ATM Networks, the Internet, and other Telephone Network
   [Anonymous], 1988, ACM SIGCOMM COMPUTER
   BALAKRISHNAN H, 1998, P IEEE INF
   BOUCH A, 1999, P 4 INT DISTR C IDC, P78
   CHIU DM, 1989, COMPUT NETWORKS ISDN, V17, P1, DOI 10.1016/0169-7552(89)90019-6
   Floyd S, 1999, IEEE ACM T NETWORK, V7, P458, DOI 10.1109/90.793002
   Floyd S., 1999, 2582 RFC
   Floyd S, 1993, IEEE ACM T NETWORK, V1, P397, DOI 10.1109/90.251892
   LIN D, 1998, INFOCOM 98
   Mahdavi J, 1997, NOTE SENT END2END IN
   Mathis M., 1997, Computer Communication Review, V27, P67, DOI 10.1145/263932.264023
   Mathis M., 1996, TCP Selective Acknowledgment Options," RFC 2018
   NICOLL T, 2002, 3 ANN POSTGR S CONV, P287
   Padhye Jitendra, 1999, STOCHASTIC MODEL TCP
   POWER DM, 1998, CTI AFM C P, P119
   RAMAKRISHNAN K, 1999, 2481 RFC
   Ramsay J, 1998, INTERACT COMPUT, V10, P77, DOI 10.1016/S0953-5438(97)00019-2
   Ruddle A, 2002, EUR T TELECOMMUN, V13, P53, DOI 10.1002/ett.4460130106
   RUDDLE A, 2000, P 9 IEEE INT C COMP
   STEVENS W, 2001 RFC
   WANG Z, 1991, ACM COMPUTER COMMUNI, V21, P32
NR 28
TC 4
Z9 4
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2003
VL 33
IS 14
BP 1301
EP 1322
DI 10.1002/spe.549
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 741JJ
UT WOS:000186454700002
DA 2024-07-18
ER

PT J
AU Wang, R
   Wang, FY
   Byrd, GT
AF Wang, R
   Wang, FY
   Byrd, GT
TI Design and implementation of Acceptance Monitor for building intrusion
   tolerant systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Computer Communications and Networks
CY OCT 15-17, 2001
CL PHOENIX, ARIZONA
SP Army Res Lab, IBM, Telcordia, Nokia, Avaya, IEEE Communicat Soc
DE fault tolerance; intrusion tolerance; acceptance testing
AB Intrusion detection research has so far concentrated on techniques that effectively identify the malicious behaviors. No assurance can be assumed once the system is compromised. Intrusion tolerance, however, focuses on providing minimal level of services, even when some components have been partially compromised. The challenges here are how to take advantage of fault tolerant techniques in the intrusion tolerant system context and how to deal with possible unknown attacks and compromised components so as to continue providing the service. This paper presents our work on applying one important fault tolerance technique, acceptance testing, for building scalable intrusion tolerant systems. First, we propose a general methodology for designing acceptance testing. An Acceptance Monitor architecture is proposed to apply various tests for detecting the compromises based on the impact of the attacks. Second, we make a comprehensive vulnerability analysis on typical commercial-off-the-shelf (COTS) Web servers. Various acceptance testing modules are implemented to show the effectiveness of the proposed approach. By utilizing the fault tolerance techniques on intrusion tolerance system, we provide a mechanism for building reliable distributed services that are more resistant to both known and unknown attacks. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 MCNC, Inst Res & Dev, Adv Networking Res, Durham, NC 27709 USA.
   N Carolina State Univ, Dept ECE, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Wang, FY (corresponding author), MCNC, Inst Res & Dev, Adv Networking Res, Durham, NC 27709 USA.
RI Byrd, Greg/X-4321-2019
OI Byrd, Greg/0000-0003-3647-8738
CR Amoroso Edward., 1999, Intrusion Detection: An Introduction to Internet Surveillance, Correlation, Trace Back, Traps, and Response
   [Anonymous], 1992, RFC1321
   [Anonymous], 1995, SEC HASH STAND
   Bace Rebecca Gurley, 2000, Intrusion Detection
   BYRD GT, 2001, IEEE 2 SMC INF ASS W
   *CERT COORD CTR, 2001, DEN SER ATT
   *CISC SYST INC, 1999, CISC SCAL INFR
   DARP LAB, 2002, DARPA OASIS PI M PRE
   DAVIS UC, HACQIT HIERARCHICAL
   *EEY DIG SEC, 2001, COD WORM
   *EEY DIG SEC ADV, 2001, WIND 2000 NT4 IIS AS
   Fenwick JB, 1997, SOFTWARE PRACT EXPER, V27, P1199, DOI 10.1002/(SICI)1097-024X(199710)27:10<1199::AID-SPE127>3.0.CO;2-U
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   KAUFMAN C, 1995, COMMUNICATIN
   Kumar S., 1995, The 18th National Information Security Conference, P194
   Lee P. A., 1990, Fault Tolerance: Principles and Practice, V2nd
   Lippmann RP, 2000, Em: Proceedings-DARPA Information Survivability Conference and Exposition, DISCEX 2000, V2, P12, DOI DOI 10.1109/DISCEX.2000.821506
   Lunt TeresaF., 1992, REAL TIME INTRUSION
   Marton A. B., 1971, Honeywell Computer Journal, V5, P140
   *MICR TECHN, 2001, WIND WEB SERV
   *SEC COMP CORP, 2002, DARPA OASIS PI M PRE
   *SEC FOC, 2001, BUGTR ARCH
   STALLINGS W, 1999, PRINCIPLES PRACTICE
   WANG F, 2001, P IEEE 2 SMC INF ASS
   WANG R, 2001, THESIS NC STAT U
NR 25
TC 2
Z9 3
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2003
VL 33
IS 14
BP 1399
EP 1417
DI 10.1002/spe.554
PG 19
WC Computer Science, Software Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 741JJ
UT WOS:000186454700007
DA 2024-07-18
ER

PT J
AU Guo, JC
   Liu, J
   Liu, X
   Wan, Y
   Zhao, YJ
   Li, L
   Liu, K
   Klein, J
   Bissyande, TF
AF Guo, Juncai
   Liu, Jin
   Liu, Xiao
   Wan, Yao
   Zhao, Yanjie
   Li, Li
   Liu, Kui
   Klein, Jacques
   Bissyande, Tegawende
TI PyScribe-Learning to describe python code
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code comprehension; code documentation; code embedding; code
   summarization; deep learning; representation learning
AB Code comment generation, which attempts to summarize the functionality of source code in textual descriptions, plays an important role in automatic software development research. Currently, several structural neural networks have been exploited to preserve the syntax structure of source code based on abstract syntax trees (ASTs). However, they can not well capture both the long-distance and local relations between nodes while retaining the overall structural information of AST. To mitigate this problem, we present a pro-to type tool titled PyScribe, which extends the Transformer model to a new encoder-decoder-based framework. Particularly, the triplet position is designed and integrated into the node-level and edge-level structural features of AST for producing Python code comments automatically. This paper, to the best of our knowledge, makes the first effort to model the edges of AST as an explicit component for improved code representation. By specifying triplet positions for each node and edge, the overall structural information can be well preserved in the learning process. Moreover, the captured node and edge features go through a two-stage decoding process to yield higher qualified comments. To evaluate the effectiveness of PyScribe, we resort to a large dataset of code-comment pairsby mining Jupyter Notebooks from GitHub, for which we have made it publicly available to support further studies. The experimental results reveal that PyScribe is indeed effective, outperforming the state-of the-art by achieving an average BLEU score (i.e., av-BLEU) of approximate to 0.28.
C1 [Guo, Juncai; Liu, Jin] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Liu, Jin] Chinese Acad Sci, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing, Peoples R China.
   [Liu, Xiao] Deakin Univ, Sch Informat Technol, Melbourne, Australia.
   [Wan, Yao] Huazhong Univ Sci & Technol, Sch Comp Sci & Technol, Wuhan, Peoples R China.
   [Zhao, Yanjie] Monash Univ, Fac Informat Technol, Clayton, Vic, Australia.
   [Li, Li] Beihang Univ, Sch Software, Beijing, Peoples R China.
   [Liu, Kui] Huawei Software Engn Applicat Technol LabHangzhou, Hangzhou, Peoples R China.
   [Klein, Jacques; Bissyande, Tegawende] Univ Luxembourg, SnT Ctr, Esch Sur Alzette, Luxembourg.
C3 Wuhan University; Chinese Academy of Sciences; Institute of Information
   Engineering, CAS; Deakin University; Huazhong University of Science &
   Technology; Monash University; Beihang University; University of
   Luxembourg
RP Liu, J (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.; Liu, X (corresponding author), Deakin Univ, Sch Informat Technol, Melbourne, Australia.
EM jinliu@whu.edu.cn; xiao.liu@deakin.edu.au
RI Liu, Xiao/AAG-1593-2020
OI Liu, Xiao/0000-0001-8400-5754; Klein, Jacques/0000-0003-4052-475X
FU China Scholarship Council; National Natural Science Foundation of China
   [61972290]; Open Fund of Key Laboratory of Network Assessment Technology
   from Chinese Academy of Sciences; Deakin University, as part of the
   Wiley - Deakin University agreement via the Council of Australian
   University Librarians;  [201906270158]
FX This research is supported by the National Natural Science Foundation of
   China (Grant No.61972290), the Open Fund of Key Laboratory of Network
   Assessment Technology from Chinese Academy of Sciences, and the China
   Scholarship Council (Grant No.201906270158). Open access publishing
   facilitated by Deakin University, as part of the Wiley - Deakin
   University agreement via the Council of Australian University
   Librarians.
CR Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U., 2019, PROC 7 INT C LEARN R
   Ba J. L., 2016, LAYER NORMALIZATION, DOI DOI 10.48550/ARXIV.1607.06450
   Banerjee S., 2005, P WORKSHOP INTRINSIC, P65
   Barone AVM., 2017, P 8 INT JOINT C NAT, P314
   Bird S., 2006, P COLING ACL INT PRE, P69, DOI DOI 10.3115/1118108.1118117
   Chen M., 2021, arXiv
   Cho K., 2014, ARXIV14061078
   Choi Y., 2021, FINDINGS ASS COMPUTA, P2842
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Eriguchi A, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P823
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gehring J., 2017, P MACHINE LEARNING R, P1243
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Kingma D. P., 2014, arXiv
   Kipf TN, 2017, INT C LEARN REPR
   LeClair A, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P3931
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Liang YD, 2018, AAAI CONF ARTIF INTE, P5229
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Liu K, 2019, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2019.00019
   Liu S., 2020, CORR
   Liu YH, 2019, INFORM SYST RES, DOI 10.48550/arXiv.1907.11692
   Maskeri G., 2008, ISEC 08, P113, DOI 10.1145/1342211.1342234
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Ohba Masaru., 2005, MSR 05 P 2005 INT WO, P1, DOI [10.1145/1083142.1083151, DOI 10.1145/1082983.1083151]
   OpenAI, 2023, ChatGPT
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Raffel C, 2020, J MACH LEARN RES, V21
   Raskin J., 2005, ACM QUEUE, V3, P64, DOI 10.1145/1053331.1053354
   Repplinger J., 2019, INTRO MODERN INFORM
   ROBILLARD PN, 1986, COMMUN ACM, V29, P1072, DOI 10.1145/7538.7541
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Shido Y, 2019, IEEE IJCNN
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Stueben M., 2018, SELF DOCUMENTING COD
   Sun Z., 2022, 44 INT C SOFTW ENG I
   Tao W, 2021, PROC IEEE INT CONF S, P126, DOI 10.1109/ICSME52107.2021.00018
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang WH, 2022, IEEE T SOFTWARE ENG, V48, P102, DOI 10.1109/TSE.2020.2979701
   Wang X., 2021, SYNCOBERT SYNTAX GUI
   Wang Y., 2022, P 30 IEEEACM INT C P
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei BL, 2019, ADV NEUR IN, V32
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Wu HQ, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL-IJCNLP 2021, P1078
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao YJ, 2023, IEEE T SOFTWARE ENG, V49, P113, DOI [10.1109/TSE.2022.3146831, 10.1109/IECON49645.2022.9968601]
   Zhao YJ, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106619
   Zhao YJ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3446905
   Zhou ZY, 2020, SOFTWARE PRACT EXPER, V50, P2313, DOI 10.1002/spe.2893
NR 69
TC 0
Z9 0
U1 3
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2024
VL 54
IS 3
BP 501
EP 527
DI 10.1002/spe.3291
EA DEC 2023
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HI4X1
UT WOS:001117942500001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Zhu, K
   Zhang, NN
   Jiang, CJ
   Zhu, DD
AF Zhu, Kun
   Zhang, Nana
   Jiang, Changjun
   Zhu, Dandan
TI IMDAC: A robust intelligent software defect prediction model via
   multi-objective optimization and end-to-end hybrid deep learning
   networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE convolutional neural network; deep learning; denoising autoencoder;
   multi-objective optimization; software defect prediction
ID FEATURE-SELECTION
AB Software defect prediction (SDP) aims to build an effective prediction model for historical defect data from software repositories by some specialized techniques or algorithms, and predict the defect proneness of new software modules. Nevertheless, the complex internal intrinsic structure hidden behind the defect data makes it challenging for the built prediction model to capture the most expressive defect feature representations, and largely limits the SDP performance. Fortunately, artificial intelligence is interacting closely with humans and provides powerful intelligent technical support for addressing these SDP issues. In this article, we propose a robust intelligent SDP model called IMDAC based on deep learning and soft computing techniques. This model has three main advantages: (1) an effective deep generative network-InfoGAN (information maximizing GANs) is employed to conduct data augmentation, namely generating sufficient defect instances and achieving defect class balance simultaneously. (2) Select the fewest representative feature subset for the minimum error via an advanced multi-objective optimization approach-MSEA (multi-stage evolutionary algorithm). (3) Build a powerful end-to-end deep defect predictor by hybrid deep learning techniques-DAE (Denoising AutoEncoder) and CNN (convolutional neural network), which can not only reconstruct a clean "repaired" input with strong robustness and generalization capabilities via DAE, but also learn the abstract deep semantic features with strong discriminating capability via CNN. Experimental results verify the superiority and robustness of the IMDAC model across 15 software projects.
C1 [Zhu, Kun; Jiang, Changjun] Tongji Univ, Minist Educ, Key Lab Embedded Syst & Serv Comp, Shanghai, Peoples R China.
   [Zhu, Kun; Jiang, Changjun] Tongji Univ, Natl Prov Minist Joint Collaborat Innovat Ctr Fina, Shanghai, Peoples R China.
   [Zhang, Nana] Donghua Univ, Sch Comp Sci & Technol, Shanghai, Peoples R China.
   [Zhu, Dandan] East China Normal Univ, Inst AI Educ, Shanghai, Peoples R China.
   [Zhang, Nana] Donghua Univ, Sch Comp Sci & Technol, 2999,Renmin North Rd, Shanghai 201620, Peoples R China.
C3 Tongji University; Tongji University; Donghua University; East China
   Normal University; Donghua University
RP Zhang, NN (corresponding author), Donghua Univ, Sch Comp Sci & Technol, 2999,Renmin North Rd, Shanghai 201620, Peoples R China.
EM nnzhang@dhu.edu.cn
FU The authors would like to express their sincere appreciation to the
   anonymous reviewers for their insightful comments. This work is
   supported in part by the National Key Research and Development Program
   of China under Grant 2022YFB4501700, in part by the N [2022YFB4501700];
   National Key Research and Development Program of China [62302337,
   62001289]; National Natural Science Foundation of China; Shanghai Super
   Doctoral Incentive Program [ESSCFK 2023-03]; foundation of Key
   Laboratory of Embedded System and Service Computing (Tongji University),
   Ministry of Education; Shanghai Science and Technology Commission
   Project, China; Fundamental Research Funds for the Central Universities
FX The authors would like to express their sincere appreciation to the
   anonymous reviewers for their insightful comments. This work is
   supported in part by the National Key Research and Development Program
   of China under Grant 2022YFB4501700, in part by the National Natural
   Science Foundation of China under Grant 62302337, 62001289, in part by
   the Shanghai Super Doctoral Incentive Program, in part by the foundation
   of Key Laboratory of Embedded System and Service Computing (Tongji
   University), Ministry of Education, under Grant ESSCFK 2023-03, in part
   by the Shanghai Science and Technology Commission Project, China under
   Grant 19511101300, in part by the Fundamental Research Funds for the
   Central Universities, and in part by the foundation of Key Laboratory of
   Artificial Intelligence, Ministry of Education, People's Republic of
   China.
CR Arar ÖF, 2017, APPL SOFT COMPUT, V59, P197, DOI 10.1016/j.asoc.2017.05.043
   Chen Xi, 2016, Advances in Neural Information Processing Systems (NIPS), V29
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Fan GS, 2019, ASIA PAC SOFWR ENG, P244, DOI 10.1109/APSEC48747.2019.00041
   Farias LRC, 2019, IEEE SYS MAN CYBERN, P3746, DOI 10.1109/SMC.2019.8914005
   Fu, ABS171107907 CORR
   Gee SB, 2015, IEEE T EVOLUT COMPUT, V19, P542, DOI 10.1109/TEVC.2014.2353672
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   He ZN, 2017, IEEE T EVOLUT COMPUT, V21, P220, DOI 10.1109/TEVC.2016.2598687
   Huanjing Wang, 2010, 2010 Ninth International Conference on Machine Learning and Applications (ICMLA 2010), P135, DOI 10.1109/ICMLA.2010.27
   Jain H, 2014, IEEE T EVOLUT COMPUT, V18, P602, DOI 10.1109/TEVC.2013.2281534
   Jiarpakdee J, 2016, IEEE INT SYMP SOFTW, P51, DOI 10.1109/ISSREW.2016.30
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Knowles JD, 2000, IEEE C EVOL COMPUTAT, P325, DOI 10.1109/CEC.2000.870313
   Li FY, 2023, IET SOFTW, V17, P168, DOI 10.1049/sfw2.12099
   Li MQ, 2015, ARTIF INTELL, V228, P45, DOI 10.1016/j.artint.2015.06.007
   Li WW, 2016, KNOWL-BASED SYST, V91, P263, DOI 10.1016/j.knosys.2015.09.035
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Liu MX, 2014, IEEE T RELIAB, V63, P676, DOI 10.1109/TR.2014.2316951
   Liu YT, 2020, IET COMPUT VIS, V14, P407, DOI 10.1049/iet-cvi.2018.5839
   Malhotra R, 2016, APPL SOFT COMPUT, V49, P1034, DOI 10.1016/j.asoc.2016.04.032
   Mori T, 2019, EMPIR SOFTW ENG, V24, P779, DOI 10.1007/s10664-018-9638-1
   Muthukumaran K., 2015, P 8 INDIA SOFTWARE E, P120
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Ni C, 2019, J SYST SOFTWARE, V152, P215, DOI 10.1016/j.jss.2019.03.012
   Ren YZ, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2641
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Sun ZB, 2021, APPL SOFT COMPUT, V99, DOI 10.1016/j.asoc.2020.106940
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Tian Y, 2021, IEEE T SYST MAN CY-S, V51, P5880, DOI 10.1109/TSMC.2019.2956288
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   van de Wolfshaar J, 2015, 2015 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (IEEE SSCI), P188, DOI 10.1109/SSCI.2015.37
   Vincent Pascal, 2008, P 25 INT C MACHINE L, DOI DOI 10.1145/1390156.1390294
   Wang KC, 2021, NEURAL COMPUT APPL, V33, P8249, DOI 10.1007/s00521-020-04960-1
   Wei H, 2019, INFORM SCIENCES, V477, P399, DOI 10.1016/j.ins.2018.10.056
   Wu YN, 2018, KNOWL-BASED SYST, V144, P1, DOI 10.1016/j.knosys.2017.12.015
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yu Q, 2017, FRONT INFORM TECH EL, V18, P1744, DOI 10.1631/FITEE.1601322
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Yu SJ, 2020, J INTELL FUZZY SYST, V39, P333, DOI 10.3233/JIFS-191171
   Yu X, 2023, INFORM SOFTWARE TECH, V157, DOI 10.1016/j.infsof.2023.107165
   Yu X, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106847
   Yu X, 2020, IEEE T RELIAB, V69, P139, DOI 10.1109/TR.2019.2931559
   Yu X, 2018, SOFT COMPUT, V22, P3461, DOI 10.1007/s00500-018-3093-1
   Zhang NN, 2021, INFORM SCIENCES, V570, P545, DOI 10.1016/j.ins.2021.05.008
   Zhang NN, 2022, IET SOFTW, V16, P29, DOI 10.1049/sfw2.12029
   Zhang SQ, 2020, NEURAL PROCESS LETT, V51, P2089, DOI 10.1007/s11063-019-10017-9
   Zhang T, 2020, EXPERT SYST APPL, V143, DOI 10.1016/j.eswa.2019.113067
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
   Zhu K, 2022, INFORM SCIENCES, V583, P332, DOI 10.1016/j.ins.2021.11.029
   Zhu K, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111026
   Zhu K, 2020, IET SOFTW, V14, P185, DOI 10.1049/iet-sen.2019.0278
NR 58
TC 1
Z9 1
U1 4
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2024
VL 54
IS 2
BP 308
EP 333
DI 10.1002/spe.3274
EA SEP 2023
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL7E2
UT WOS:001072827500001
DA 2024-07-18
ER

PT J
AU Al-Mahfoudh, MS
   Stutsman, R
   Gopalakrishnan, G
AF Al-Mahfoudh, Mohammed S.
   Stutsman, Ryan
   Gopalakrishnan, Ganesh
TI Efficient linearizability checking for actor-based systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE actor model; distributed systems; fault tolerance; model checking
ID CONCURRENT; VERIFICATION; REDUCTION
AB Recent demand for distributed software had led to a surge in popularity in actor-based frameworks. However, even with the stylized message passing model of actors, writing correct distributed software is still difficult. We present our work on linearizability checking in DS2, an integrated framework for specifying, synthesizing, and testing distributed actor systems. The key insight of our approach is that often subcomponents of distributed actor systems represent common algorithms or data structures (e.g., a distributed hash table or tree) that can be validated against a simple sequential model of the system. This makes it easy for developers to validate their concurrent actor systems without complex specifications. DS2 automatically explores the concurrent schedules that system could arrive at, and it compares observed output of the system to ensure it is equivalent to what the sequential implementation could have produced. We describe DS2's linearizability checking and test it on several concurrent replication algorithms from the literature. We explore in detail how different algorithms for enumerating the model schedule space fare in finding bugs in actor systems, and we present our own refinements on algorithms for exploring actor system schedules that we show are effective in finding bugs.
C1 [Al-Mahfoudh, Mohammed S.; Stutsman, Ryan; Gopalakrishnan, Ganesh] Univ Utah, Sch Comp, Salt Lake City, UT 84112 USA.
C3 Utah System of Higher Education; University of Utah
RP Al-Mahfoudh, MS; Stutsman, R (corresponding author), Univ Utah, Sch Comp, Salt Lake City, UT 84112 USA.
EM mahfoudh@cs.utah.edu; stutsman@cs.utah.edu
OI Al-Mahfoudh, Mohammed/0000-0001-9446-8832
FU National Science Foundation [CCF 1302449, CCF 1956106, CSR 1421726]
FX National Science Foundation, Grant/Award Numbers: CCF 1302449,CCF
   1956106, CSR 1421726
CR Adhikari Kiran, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P24, DOI 10.1007/978-3-642-39176-7_3
   Agha G., 1986, Actors: a model of concurrent computation in distributed systems
   Akka, 2016, US
   Al-Mahfoudh M, 2016, FME WORKS FORM, P42, DOI [10.1109/FormaliSE.2016.015, 10.1145/2897667.2897674]
   Al-Mahfoudh MS, 2018, ADV INTELL SYST, V561, P209, DOI 10.1007/978-3-319-56157-8_10
   Alvaro P., 2013, P 4 ANN S CLOUD COMP, p23:1
   Alvaro P, 2016, PROCEEDINGS OF THE SEVENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC 2016), P17, DOI 10.1145/2987550.2987555
   Alvaro P, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P331, DOI 10.1145/2723372.2723711
   [Anonymous], 2020, WHO IS US ORL
   [Anonymous], 2018, AKK IMPL JAV SCAL
   [Anonymous], 2018, PAX AKK IMPL
   [Anonymous], 2014, MSR-TR-2014-41
   [Anonymous], 2022, SATISFIABILITY MODUL
   [Anonymous], 2020, DISTRIBUTED SYSTEMS
   [Anonymous], 2021, SCAL LIB READ AN TRA
   [Anonymous], 2022, CONC TEST
   [Anonymous], 2022, REB MOD LANG
   [Anonymous], 2021, DS2 DECL SPEC DISTR
   [Anonymous], 2020, INS FORTN MASS DAT A
   [Anonymous], The Apache Software Foundation
   aphyr.com, 2018, JEPS
   Bashari B, 2021, PROCEEDINGS OF THE 2021 ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING (PODC '21), P545, DOI 10.1145/3465084.3467939
   Bouajjani A., 2017, ABS170700639 CORR
   Burckhardt S, 2010, ACM SIGPLAN NOTICES, V45, P330, DOI 10.1145/1809028.1806634
   Chandra T, 2007, PODC'07: PROCEEDINGS OF THE 26TH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P398
   Charm++, 2022, US
   Chong N, 2021, SOFTWARE PRACT EXPER, V51, P772, DOI 10.1002/spe.2949
   Çirisci B, 2020, LECT NOTES COMPUT SC, V12224, P350, DOI 10.1007/978-3-030-53288-8_17
   Coq, 2016, INR
   CVC5, 2022, US
   Dabaghchian Maryam, 2017, ACM SIGSOFT Software Engineering Notes, V42, DOI 10.1145/3149485.3149493
   DeCandia Giuseppe, 2007, Operating Systems Review, V41, P205, DOI 10.1145/1323293.1294281
   Doherty S, 2016, LECT NOTES COMPUT SC, V9763, P45, DOI 10.1007/978-3-319-41591-8_4
   Doolan P, 2017, LECT NOTES COMPUT SC, V10610, P105, DOI 10.1007/978-3-319-68690-5_7
   Elle KK., 2021, P 2021 ACM S PRINC D, P7
   Emmi M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158113
   Emmi M, 2018, LECT NOTES COMPUT SC, V10981, P487, DOI 10.1007/978-3-319-96145-3_26
   Emmi M, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P411, DOI 10.1145/1926385.1926432
   en.wikipedia.org, 2020, ACT MOD WIK
   en.wikipedia.org, 2022, SYMB EX
   erlang.org, 2018, ERL PROGR LANG
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   formalverification, 2016, DS2 OFF WEBS
   Gifford D. K., 1979, Proceedings of the Seventh Symposium on Operating Systems Principles, P150, DOI 10.1145/800215.806583
   github, 2018, Z3 SMT SOVL
   github, 2018, LIN CHECK
   github, 2018, JEPS
   github, 2018, PORCUPINE
   Graphviz, 2022, about us
   Hadzilacos V, 2021, PROCEEDINGS OF THE 2021 ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING (PODC '21), P521, DOI 10.1145/3465084.3467925
   Henzinger Thomas A., 2013, CONCUR 2013 - Concurrency Theory. 24th International Conference, CONCUR 2013. Proceedings: LNCS 8052, P242, DOI 10.1007/978-3-642-40184-8_18
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   Hewitt C., 1973, PROC 3 INT JOINT C A, P235, DOI 10.1145/359545.359563
   Holzmann GJ, 2000, LECT NOTES COMPUT SC, V1885, P131
   Horn A., 2015, FASTER LINEARIZABILI
   Huang SY, 2016, ACM SIGPLAN NOTICES, V51, P447, DOI 10.1145/3022671.2984025
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   Junqueira FP, 2011, I C DEPEND SYS NETWO, P245, DOI 10.1109/DSN.2011.5958223
   Knossos, 2018, VER LIN EXP ACC HIST
   L??pez C., 2017, STUDY CONCURRENCY BU
   Lamport L, 2009, LECT NOTES COMPUT SC, V5684, P36, DOI 10.1007/978-3-642-03466-4_2
   Lauterburg S., 2010, SIGSOFT FSE, P363
   Leesatapornwongsa Tanakorn, 2014, P 11 USENIX S OPERAT, P399
   Li P., PRACTICAL SYMBOLIC R
   Li S., 2018, LEIBNIZ INT P INFORM
   Liang HJ, 2013, ACM SIGPLAN NOTICES, V48, P459, DOI 10.1145/2499370.2462189
   Liskov Barbara, 2012, Viewstamped Replication Revisited
   Liu P, 2014, ACM SIGPLAN NOTICES, V49, P543, DOI [10.1145/2714064.2660217, 10.1145/2660193.2660217]
   Lowe G, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3928
   Marcén AC, 2022, SOFTWARE PRACT EXPER, V52, P2439, DOI 10.1002/spe.3133
   Meiklejohn CS, 2019, PROCEEDINGS OF THE 2019 USENIX ANNUAL TECHNICAL CONFERENCE, P63
   Mukherjee S, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428298
   Nielsen B., 2010, P 4 INT WORKSHOP PAR
   Ongaro D., 2014, 2014 USENIX ANN TECH, P305
   OpenChord, 2018, AKK IMPL SCAL ONL
   OpenMP, 2022, US
   Ozkan BK, 2019, PROCEEDINGS OF THE 24TH SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING (PPOPP '19), P366, DOI 10.1145/3293883.3295726
   Pavlo A, 2011, PROC VLDB ENDOW, V5, P85, DOI 10.14778/2078324.2078325
   Paxos LL., 2001, SIGACT NEWS, V32, P51
   Plyukhin D., 2022, LOG METHODS COMPUT S, V18, DOI [10.46298/lmcs-18(1:39)2022, DOI 10.46298/LMCS]
   Plyukhin D., 2020, 171 31 INT C CONCURR, P111
   Santana A, 2021, SOFTWARE PRACT EXPER, V51, P1622, DOI 10.1002/spe.2977
   SAT4J, 2018, US
   scala-graph.org, 2016, GRAPH SCAL
   Sela G, 2021, PROCEEDINGS OF THE 2021 ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING (PODC '21), P561, DOI 10.1145/3465084.3467944
   Sen K, 2006, LECT NOTES COMPUT SC, V3922, P339
   Sergey I, 2016, ACM SIGPLAN NOTICES, V51, P92, DOI 10.1145/3022671.2983999
   Shapiro M., 2018, JUST RIGHT CONSISTEN
   Singh V, 2016, PROC INT SYMP SOFTW, P230, DOI 10.1109/ISSRE.2016.31
   SPIN, 2016, US
   Stoica I, 2001, ACM SIGCOMM COMP COM, V31, P149, DOI 10.1145/964723.383071
   Tasharofi Samira, 2012, Formal Techniques for Distributed Systems. Joint 14th IFIP WG 6.1 International Conference, FMOODS 2012 and 32nd IFIP WG 6.1 International Conference, FORTE 2012, P219, DOI 10.1007/978-3-642-30793-5_14
   Tasharofi S, 2013, IEEE INT CONF AUTOM, P114, DOI 10.1109/ASE.2013.6693072
   The LL., 1998, ACM T COMPUT SYST, V16, P2
   van Renesse R, 2015, IEEE T DEPEND SECURE, V12, P472, DOI 10.1109/TDSC.2014.2355848
   Vechev M, 2009, LECT NOTES COMPUT SC, V5578, P261, DOI 10.1007/978-3-642-02652-2_21
   Wilcox JR, 2015, ACM SIGPLAN NOTICES, V50, P357, DOI [10.1145/2737924.2737958, 10.1145/2813885.2737958]
   WING JM, 1993, J PARALLEL DISTR COM, V17, P164, DOI 10.1006/jpdc.1993.1015
   Winter K, 2018, PROCEEDINGS 2018 12TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2018), P100, DOI 10.1109/TASE.2018.00021
   Yang Chen, 2018, Dependable Software Engineering. Theories, Tools, and Applications. 4th International Symposium, SETTA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 10998), P108, DOI 10.1007/978-3-319-99933-3_7
   Yang Junfeng, 2009, Proceedings of the 6th USENIX Symposium on Networked Systems Design and Implementation, P213
   Zave P., 2015, ARXIV
   Zhang L, 2013, IEEE INT CONF AUTOM, P4, DOI 10.1109/ASE.2013.6693061
   Zhang SJ, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1185, DOI 10.1145/1985793.1986037
   Zhang ZY, 2017, INT J SOFTW ENG KNOW, V27, P1483, DOI 10.1142/S0218194017400071
NR 105
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2023
VL 53
IS 11
BP 2163
EP 2199
DI 10.1002/spe.3251
EA AUG 2023
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U0UL3
UT WOS:001052542800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gomez, MJ
   Ruipérez-Valiente, JA
   Clemente, FJG
AF Gomez, Manuel J.
   Ruiperez-Valiente, Jose A.
   Clemente, Felix J. Garcia
TI A framework to support interoperable Game-based Assessments as a Service
   (GBAaaS): Design, development, and use cases
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; data mining; educational technology; Game-based Assessment;
   interoperability; ontologies
ID LEARNING ANALYTICS; SERIOUS GAMES; RDF; CHALLENGES
AB During the last few years, there has been increasing attention paid to serious games (SGs), which are games used for non-entertainment purposes. SGs offer the potential for more valid and reliable assessments compared to traditional methods such as paper-and-pencil tests. However, the incorporation of assessment features into SGs is still in its early stages, requiring specific design efforts for each game and adding significant time to the design of Game-based Assessments (GBAs). In this research, we present a completely novel framework that aims to perform interoperable GBAs by: (a) integrating a common GBA ontology model to process RDF data; (b) developing in-game metrics to infer useful information and assess learners; (c) integrating a service API to provide an easy way to interact with the framework. We then validate our approach through performance evaluation and two use cases, demonstrating its effectiveness in real-world scenarios with large-scale datasets. Our results show that the developed framework achieves excellent performance, replicating metrics from previous literature. We anticipate that our work will help alleviate current limitations in the field and facilitate the deployment of GBAs as a Service.
C1 [Gomez, Manuel J.; Ruiperez-Valiente, Jose A.; Clemente, Felix J. Garcia] Univ Murcia, Fac Comp Sci, Calle Campus Univ 32, Murcia 30100, Spain.
C3 University of Murcia
RP Gomez, MJ (corresponding author), Univ Murcia, Fac Comp Sci, Calle Campus Univ 32, Murcia 30100, Spain.
EM manueljesus.gomezm@um.es
RI Gomez Moratilla, Manuel Jesus/HMW-0780-2023; Ruiperez-Valiente, Jose
   A./U-8795-2018
OI Ruiperez-Valiente, Jose A./0000-0002-2304-6365; Garcia Clemente, Felix
   Jesus/0000-0001-6181-5033; Gomez, Manuel J./0000-0003-0571-2923
FU Fundacion Seneca [21795/FPI/22]; Generate New Scientific Leadership
   [21948/JLI/22]
FX Fundacion Seneca, Grant/Award Number: 21795/FPI/22; Call for Projects to
   Generate New Scientific Leadership, Grant/Award Number: 21948/JLI/22
CR Abbes H, 2016, PROCEDIA COMPUT SCI, V96, P455, DOI 10.1016/j.procs.2016.08.099
   Al-Chalabi HKM., 2020, P 2020 12 INT C EL C, P1
   Albaladejo-Gonz?lez M., 2021, 6 JORN NAC INV CIB J
   Alonso-Fernández C, 2019, COMPUT EDUC, V141, DOI 10.1016/j.compedu.2019.103612
   Alonso-Fernández C, 2019, COMPUT HUM BEHAV, V99, P301, DOI 10.1016/j.chb.2019.05.036
   Analytics SD., SPARKL 2021
   Andrews-Todd J, 2019, INT J TEST, V19, P172, DOI 10.1080/15305058.2019.1573823
   Bienkowski M., 2012, Enhancing teaching and learning through educational data mining and learning analytics: An issue brief
   Bischof S, 2012, J DATA SEMANT, V1, P147, DOI 10.1007/s13740-012-0008-7
   Botoeva E, 2018, LECT NOTES ARTIF INT, V11298, P166, DOI 10.1007/978-3-030-03840-3_13
   Boyle EA, 2016, COMPUT EDUC, V94, P178, DOI 10.1016/j.compedu.2015.11.003
   Crytek U., 2011, CRYSIS 2
   Daniel M., 2018, Video games as culture: considering the role and importance of video games in contemporary society
   Day F., WERE FIELD DAY
   De B., 2017, API Management, P59
   de Klerk S., 2017, Journal of Applied Testing Technology, V18, P32
   Dehainsala H, 2007, LECT NOTES COMPUT SC, V4443, P497
   Del Blanco A., 2012, IEEE GLOB ENG ED C E, DOI [10.1109/EDUCON.2012.6201154, DOI 10.1109/EDUCON.2012.6201154]
   DiCerbo KE, 2014, EDUC TECHNOL SOC, V17, P17
   Dziedzic D, 2018, INT J HUM-COMPUT INT, V34, P707, DOI 10.1080/10447318.2018.1461764
   Fathy Naglaa, 2019, 2019 Ninth International Conference on Intelligent Computing and Information Systems (ICICIS), P387, DOI 10.1109/ICICIS46948.2019.9014856
   Fernandez M., 1997, Methontology: From ontological art towards ontological engineering, P33
   Freire M., 2016, Learning, Design, and Technology, P1, DOI DOI 10.1007/978-3-319-17727-4_21-1
   Gandon F., RDF XML SOURCE DECLA
   Gill SS, 2022, INTERNET THINGS-NETH, V19, DOI 10.1016/j.iot.2022.100514
   Gomez M. J., 2022, IEEE Transactions on Learning Technologies
   Gomez MJ, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21041025
   Gomez MJ., 2022, SUPPLEMENTARY MAT FR
   Gomez MJ., DEV VALIDATING INTER
   Gomez-Perez A., 2004, Ontological Engineering, V2nd, P1
   Grobe M., 2009, P 37 ANN ACM SIGUCCS, P131
   Gros B, 2007, J RES TECHNOL EDUC, V40, P23, DOI 10.1080/15391523.2007.10782494
   Gursoy ME, 2017, IEEE T LEARN TECHNOL, V10, P68, DOI 10.1109/TLT.2016.2607747
   Harpstead E., 2015, P 2015 ANN S COMP HU, P369
   Hruska M., P INT IND TRAIN SIM
   Hunt J., 2018, BEGINNERS GUIDE SCAL, P431
   Ifenthaler D., 2012, Assessment in game-based learning, P1, DOI [10.1007/978-1-4614-3546-4_1, DOI 10.1007/978-1-4614-3546-4_1]
   Jackson DJR, 2016, COMPUT HUM BEHAV, V55, P796, DOI 10.1016/j.chb.2015.10.031
   Jaffal Y, 2015, J E-LEARN KNOWL SOC, V11, P101
   Junaidi J., 2018, TELKOMNIKA, V16, P1324, DOI DOI 10.12928/TELKOMNIKA.V16I3.7209
   Kato P.M., 2017, J APPL TEST TECH, V18, P1
   Kiili K, 2018, COMPUT EDUC, V120, P13, DOI 10.1016/j.compedu.2018.01.012
   Kim H, 2017, IT PROF, V19, P27, DOI 10.1109/MITP.2017.3680960
   Kim JM, 2015, INT CONF BIG DATA, P79, DOI 10.1109/35021BIGCOMP.2015.7072815
   Kim Y.J., 2019, Game-Based Assessment Revisited, P3, DOI [DOI 10.1007/978-3-030-15569-8_1, 10.1007/978-3-030-15569-81, DOI 10.1007/978-3-030-15569-81, 10.1007/978-3-030-15569-8_1]
   Kim YJ., 2021, EXPANDING TEACHER AS, P399
   Kim YJ, 2015, COMPUT EDUC, V87, P340, DOI 10.1016/j.compedu.2015.07.009
   Laamarti F, 2014, INT J COMPUT GAMES T, V2014, DOI 10.1155/2014/358152
   Lehmann J, 2017, LECT NOTES COMPUT SC, V10588, P147, DOI 10.1007/978-3-319-68204-4_15
   Lindenmayer JP, 2020, SCHIZOPHR RES, V223, P166, DOI 10.1016/j.schres.2020.07.001
   Loh ChristianSebastian., 2015, SERIOUS GAMES ANAL, P101, DOI [DOI 10.1007/978-3-319-05834-45, 10.1007/978-3-319-05834-4_5, DOI 10.1007/978-3-319-05834-4_5]
   Mami MN, 2019, LECT NOTES COMPUT SC, V11779, P229, DOI 10.1007/978-3-030-30796-7_15
   Markovic B., 2014, 2014 IEEE Nuclear Science Symposium and Medical Imaging Conference (NSS/MIC), P1, DOI 10.1109/NSSMIC.2014.7431230
   Mountasser I, 2021, DISTRIB PARALLEL DAT, V39, P891, DOI 10.1007/s10619-021-07321-6
   Pérez J, 2006, LECT NOTES COMPUT SC, V4273, P30
   Pérez-Berenguer D, 2018, SOFTWARE PRACT EXPER, V48, P1238, DOI 10.1002/spe.2572
   Petri G, 2017, COMPUT EDUC, V107, P68, DOI 10.1016/j.compedu.2017.01.004
   Proença JP, 2018, DISABIL REHABIL-ASSI, V13, P95, DOI 10.1080/17483107.2017.1290702
   Reyes-Alvarez L, 2019, SOFTWARE PRACT EXPER, V49, P100, DOI 10.1002/spe.2645
   Rocha OR., ISWC 2015 WORKS LINK
   Ruipérez-Valiente JA, 2021, IEEE ACCESS, V9, P83467, DOI 10.1109/ACCESS.2021.3086703
   Ruipérez-Valiente JA, 2020, IEEE T LEARN TECHNOL, V13, P648, DOI 10.1109/TLT.2020.2968234
   Ruipérez-Valiente JA, 2020, COMPUT EDUC, V159, DOI 10.1016/j.compedu.2020.104008
   Said B, 2019, 2019 IEEE SECOND INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND KNOWLEDGE ENGINEERING (AIKE), P148, DOI 10.1109/AIKE.2019.00035
   Samcovic A., 2018, Vojnotehnicki glasnik, V66, P597, DOI DOI 10.5937/VOJTEHG66-16367
   Sejdiu G, 2019, LECT NOTES COMPUT SC, V11779, P261, DOI 10.1007/978-3-030-30796-7_17
   Serrano-Laguna A, 2017, COMPUT STAND INTER, V50, P116, DOI 10.1016/j.csi.2016.09.014
   Shute VJ, 2011, COMPUTER GAMES AND INSTRUCTION, P503
   Software S., API DEV EVERYONE 202
   Staab Steffen., 2010, HDB ONTOLOGIES
   Stadler C, 2019, LECT NOTES COMPUT SC, V11779, P293, DOI 10.1007/978-3-030-30796-7_19
   Susi T., 2007, Serious games - an overview
   Takabi H, 2010, IEEE SECUR PRIV, V8, P24, DOI 10.1109/MSP.2010.186
   Verma V., 2019, GAME BASED ASSESSMEN, P327, DOI 10.1007/978-3-030-15569-8_16
   Wang R, 2016, SIMUL HEALTHC, V11, P41, DOI 10.1097/SIH.0000000000000118
   Zada I, 2023, SOFTWARE PRACT EXPER, V53, P283, DOI 10.1002/spe.3149
   Zhou J, 2006, LECT NOTES COMPUT SC, V4185, P429
NR 77
TC 1
Z9 1
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2023
VL 53
IS 11
BP 2222
EP 2240
DI 10.1002/spe.3254
EA AUG 2023
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U0UL3
UT WOS:001052556200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Wu, JT
   Zhang, JY
   Zhang, YW
   Wen, YP
AF Wu, Jintao
   Zhang, Jingyi
   Zhang, Yiwen
   Wen, Yiping
TI Constraint-aware and multi-objective optimization for micro-service
   composition in mobile edge computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE micro-service composition; micro-services; mobile edge computing;
   multi-objective optimization
ID QUALITY PREDICTION; INTERNET
AB As a new paradigm of distributed computing, mobile edge computing (MEC) has gained increasing attention due to its ability to expand the capabilities of centralized cloud computing. In MEC environments, a software application typically consists of multiple micro-services, which can be composed together in a flexible manner to achieve various user requests. However, the composition of micro-services in MEC is still a challenging research issue arising from three aspects. Firstly, composite micro-services constructed by ignoring the processing capabilities of different micro-services may cause waste of edge resources. Secondly, edge servers' limitations in terms of computational power can easily cause service occupancy between composite micro-services, severely affecting the user experience. Thirdly, in dynamic and unstable mobile environments, different edge users have different sensitivities to request latency, which increases the complexity of micro-service composition. In order to improve edge resource utilization and user experience on micro-service invocations, in this paper, we comprehensively consider the above three factors, and we first model the micro-services composition problem in MEC as a constrained multi-objective optimization problem. Then, a micro-service composition optimization method M3C combining graph search and branch-and-bound strategy is proposed to find a composition solution set with low energy consumption and high success rate for multiple edge users. Finally, we perform a series of experiments on two widely used datasets. Experimental results show that our proposed approach significantly outperforms the four competing baseline approaches, and that it is sufficiently efficient for practical deployment.
C1 [Wu, Jintao; Zhang, Jingyi] Nanjing Univ Informat Sci & Technol, Sch Software, Nanjing, Peoples R China.
   [Zhang, Yiwen] Anhui Univ, Sch Comp Sci & Technol, Hefei, Anhui, Peoples R China.
   [Wen, Yiping] Hunan Univ Sci & Technol, Hunan Key Lab Serv Comp & Novel Software Technol, Xiangtan, Hunan, Peoples R China.
C3 Nanjing University of Information Science & Technology; Anhui
   University; Hunan University of Science & Technology
RP Zhang, YW (corresponding author), Anhui Univ, Sch Comp Sci & Technol, Hefei, Anhui, Peoples R China.
EM zhangyiwen@ahu.edu.cn
RI Tan, Wei/KBB-7333-2024; he, xi/JXN-3817-2024; zhang, ly/JMB-7214-2023;
   Liu, Yuxuan/JVO-7759-2024; wang, xiaoxuan/JMP-6531-2023; chen,
   si/JPK-4258-2023; Chen, Xiao/KBD-1464-2024; wang, mengyi/KEI-9461-2024;
   chen, yue/JXW-9556-2024; WANG, Bin/JGM-2639-2023; Chen,
   Liang/JXX-7887-2024; zhang, xu/JEO-4879-2023; zhang, hao/JOJ-7093-2023;
   Zhang, Jingyi/JDD-3221-2023; cheng, chen/JHS-9462-2023; Cheng,
   Lin/KFQ-3111-2024; li, wl/JJC-0768-2023; Zhang, Yun/JCN-7026-2023
OI Wu, Jintao/0000-0003-4257-2288
FU Financial and Science Technology Plan Project of Xinjiang Production and
   Construction Corps [2020DB005]; National Natural Science Foundation of
   China [62177014]; Natural Science Foundation of Jiangsu Province of
   China [BK20211284]; Research Foundation of Hunan Provincial Education
   Department of China [20B222]
FX Financial and Science Technology Plan Project of Xinjiang Production and
   Construction Corps, Grant/Award Number: 2020DB005; National Natural
   Science Foundation of China, Grant/Award Number: 62177014; Natural
   Science Foundation of Jiangsu Province of China, Grant/Award Number:
   BK20211284; Research Foundation of Hunan Provincial Education Department
   of China, Grant/Award Number: 20B222
CR Chen WW, 2019, IEEE T SERV COMPUT, V12, P726, DOI 10.1109/TSC.2018.2826544
   Cui GM, 2023, IEEE T SERV COMPUT, V16, P412, DOI 10.1109/TSC.2021.3112659
   Cui GM, 2023, IEEE T MOBILE COMPUT, V22, P2295, DOI 10.1109/TMC.2021.3112941
   Cui GM, 2023, IEEE T MOBILE COMPUT, V22, P1449, DOI 10.1109/TMC.2021.3108581
   Cui GM, 2022, IEEE T SERV COMPUT, V15, P1980, DOI 10.1109/TSC.2020.3028760
   Debauche O., 2020, Procedia Comput. Sci., V175, P534, DOI [10.1016/J.PROCS.2020.07.076, 10.1016/j.procs.2020.07.076, DOI 10.1016/J.PROCS.2020.07.076]
   Deng J., 2021 IEEE INT C WEB
   Deng SG, 2021, IEEE T MOBILE COMPUT, V20, P1907, DOI 10.1109/TMC.2020.2970698
   Deng SG, 2017, IEEE T AUTOM SCI ENG, V14, P1478, DOI 10.1109/TASE.2015.2438020
   El Kafhali S, 2019, IET NETW, V8, P48, DOI 10.1049/iet-net.2018.5067
   Gao HH, 2021, ACM T INTERNET TECHN, V21, DOI 10.1145/3391198
   Guo FY, 2022, WORLD WIDE WEB, V25, P2019, DOI 10.1007/s11280-022-01017-2
   Guo Y, 2020, SOFTWARE PRACT EXPER, V50, P489, DOI 10.1002/spe.2685
   He Q, 2020, IEEE T PARALL DISTR, V31, P515, DOI 10.1109/TPDS.2019.2938944
   Kedi, 2012, MATH PROBLENG, V2012, P1
   Kong LZ, 2022, WORLD WIDE WEB, V25, P1793, DOI 10.1007/s11280-021-00941-z
   Lai P., SERV OR COMP 16 INT
   Li B, 2021, IEEE T PARALL DISTR, V32, P1210, DOI 10.1109/TPDS.2020.3043755
   Li YZ, 2022, IEEE INTERNET THINGS, V9, P55, DOI 10.1109/JIOT.2021.3082898
   Li Y, 2022, IEEE T CLOUD COMPUT, V10, P491, DOI 10.1109/TCC.2019.2938504
   Li Y, 2018, IEEE T MULTIMEDIA, V20, P2427, DOI 10.1109/TMM.2018.2796246
   Mukherjee A, 2020, COMPUT COMMUN, V152, P93, DOI 10.1016/j.comcom.2020.01.039
   Ning ZL, 2019, IEEE VEH TECHNOL MAG, V14, P54, DOI 10.1109/MVT.2018.2882873
   Tian H, 2022, WORLD WIDE WEB, V25, P1769, DOI 10.1007/s11280-021-00939-7
   Wang F, 2022, WORLD WIDE WEB, V25, P1809, DOI 10.1007/s11280-021-00943-x
   Wang FY, 2022, AUTOPHAGY, V18, P1982, DOI 10.1080/15548627.2022.2050663
   Wang HB, 2020, FUTURE GENER COMP SY, V107, P551, DOI 10.1016/j.future.2020.02.030
   Wang SG, 2021, IEEE T MOBILE COMPUT, V20, P939, DOI 10.1109/TMC.2019.2957804
   Wu H., 2018 IEEE INT C WEB
   Wu JT, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110569
   Xia XY, 2021, IEEE T PARALL DISTR, V32, P281, DOI 10.1109/TPDS.2020.3016344
   Xia XY, 2021, IEEE T PARALL DISTR, V32, P31, DOI 10.1109/TPDS.2020.3010521
   Xu XL, 2022, IEEE T INTELL TRANSP, V23, P20757, DOI 10.1109/TITS.2022.3190669
   Xu XL, 2022, IEEE T FUZZY SYST, V30, P4593, DOI 10.1109/TFUZZ.2022.3158000
   Xu XL, 2022, IEEE T IND INFORM, V18, P1414, DOI 10.1109/TII.2020.3040180
   Yuan HT, 2021, IEEE T SERV COMPUT, V14, P1558, DOI 10.1109/TSC.2018.2878561
   Yuan L., WWW 21 WEB C 2021 VI
   Yuan L, 2022, IEEE T PARALL DISTR, V33, P1873, DOI 10.1109/TPDS.2021.3131680
   Zhang YW, 2021, IEEE T SERV COMPUT, V14, P1333, DOI 10.1109/TSC.2019.2891517
   Zhang YW, 2021, FUTURE GENER COMP SY, V114, P336, DOI 10.1016/j.future.2020.08.014
   Zhang YW, 2021, IEEE T SERV COMPUT, V14, P695, DOI 10.1109/TSC.2018.2830773
   Zhao HL, 2022, IEEE T SERV COMPUT, V15, P1732, DOI 10.1109/TSC.2020.3013600
   Zhao HL, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P193, DOI 10.1109/ICWS.2019.00041
   Zhou A, 2020, NEURAL COMPUT APPL, V32, P15411, DOI 10.1007/s00521-019-04693-w
   Zhou XK, 2022, IEEE INTERNET THINGS, V9, P14988, DOI 10.1109/JIOT.2021.3077937
   Zhou XK, 2021, IEEE INTERNET THINGS, V8, P12588, DOI 10.1109/JIOT.2021.3077449
   Zhou XK, 2021, IEEE ACM T COMPUT BI, V18, P912, DOI 10.1109/TCBB.2020.2994780
   Zou GB, 2021, KNOWL-BASED SYST, V217, DOI 10.1016/j.knosys.2021.106831
NR 48
TC 7
Z9 7
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 MAY 10
PY 2023
DI 10.1002/spe.3217
EA MAY 2023
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F9AW4
UT WOS:000985210800001
DA 2024-07-18
ER

PT J
AU Constantino, K
   Belém, F
   Figueiredo, E
AF Constantino, Kattiana
   Belem, Fabiano
   Figueiredo, Eduardo
TI Dual analysis for helping developers to find collaborators based on
   co-changed files: An empirical study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE collaboration in software development; collaborative software
   development; developer recommendation; distributed collaboration
ID SOFTWARE; RECOMMENDATION; MOTIVATION
AB Software developers must collaborate at all stages of the software life-cycle to create successful complex software systems. To enable this collaboration, social coding platforms, for example, GitHub, include an increasing number of tools to support collaboration. However, for large projects with hundreds of dynamic developers, such as several successful open-source projects, it can be complex to find developers with the same interest and familiarity and thus, gain suitable collaborations and new insights. In this context, resources and efforts may be wasted, discouraging many developers from contributing. Moreover, it can be costly to manage many contributions, which is another challenge for the maintainer who wants to take advantage of this small, timid, but valuable contribution made by a volunteer developer in a short time. In this context, this paper presents an empirical study aiming to evaluate two strategies to recommend collaborators based on co-changed files. Inspired in the TF-IDF (Term Frequency-Inverse Document Frequency) weighting scheme established in the Information Retrieval field, these strategies first estimate the importance of relevant files modified by developers and use these estimates to represent each developer "profile". As a second step, they estimate the similarity between developers using the Cosine metric, providing top-ranked developers according to this measure as recommendations. We evaluated these strategies based on an extensive survey with 102 real-world developers. We observed that developers have interest and familiarity with the co-changed files for all strategies evaluated. These considerations are of relevance because many opportunities for contributions to the project are linked to coding. Thus, theses results may indicate one less barrier for improving collaboration among developers. Overall, the strategies present an acceptance rate of up to 81%, contributing to the discovery of further collaborators.
C1 [Constantino, Kattiana; Belem, Fabiano; Figueiredo, Eduardo] Univ Fed Minas Gerais, Comp Sci Dept, Belo Horizonte, Brazil.
C3 Universidade Federal de Minas Gerais
RP Constantino, K (corresponding author), Univ Fed Minas Gerais, Comp Sci Dept, Belo Horizonte, MG, Brazil.
EM kattiana@dcc.ufmg.br
RI Constantino, Kattiana/ABB-5575-2021
OI Constantino, Kattiana/0000-0003-4511-7504; Figueiredo,
   Eduardo/0000-0002-6004-2718; Muniz Belem, Fabiano/0000-0003-1076-2052
FU CAPES [88881.189537/2018-01]; FAPEMIG [PPM-00651-17]
FX ACKNOWLEDGMENTS Many thanks to participants of our survey and reviewers.
   This research was partially supported by Brazilian funding agencies:
   CAPES (88881.189537/2018-01) and FAPEMIG (Grant PPM-00651-17).
CR Abbattista F., 2008, P 23 INT C AUT SOFTW, P46
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Baeza-Yates R., 1999, MODERN INFORM RETRIE, V463
   Barcomb Ann, 2022, IEEE Transactions on Software Engineering, V48, P260, DOI 10.1109/TSE.2020.2985093
   Barcomb A, 2020, IEEE T SOFTWARE ENG, V46, P962, DOI 10.1109/TSE.2018.2872713
   Barcomb A, 2019, PROC INT CONF SOFTW, P948, DOI 10.1109/ICSE.2019.00100
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Begel Andrew, 2008, P 4 INT WORKSH COMP, P3, DOI [DOI 10.1145/RESEARCH(ICER'1404520.1404522, 10.1145/Research(ICER'1404520.1404522]
   Belém FM, 2016, ACM T INTEL SYST TEC, V7, DOI 10.1145/2801130
   Berkani L, 2020, SOFTWARE PRACT EXPER, V50, P1498, DOI 10.1002/spe.2828
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Constantino K., 2022, P IEEE S VIS LANG HU, P1
   Constantino K, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2393
   Constantino K, 2020, INT CONF GLOBAL SOFT, P55, DOI 10.1145/3372787.3390442
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Costa C, 2021, IEEE T SOFTWARE ENG, V47, P1198, DOI 10.1109/TSE.2019.2917191
   Crowston K, 2018, INT J HUM-COMPUT ST, V109, P89, DOI 10.1016/j.ijhcs.2017.08.005
   Dey T, 2021, PROC INT CONF SOFTW, P995, DOI 10.1109/ICSE43902.2021.00094
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Ferreira M, 2017, INT C PROGRAM COMPRE, P207, DOI 10.1109/ICPC.2017.35
   Franchi M, 2020, MINIM INVASIV THER, V29, P232, DOI 10.1080/13645706.2019.1624576
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   GitHub, 2022, REPLICATION PACKAGE
   Gong WW, 2021, SOFTWARE PRACT EXPER, V51, P2337, DOI 10.1002/spe.2902
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Goyal R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1893
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Hu L, 2019, AAAI CONF ARTIF INTE, P3830
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Jiang JY, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P1173, DOI 10.1145/3077136.3080753
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kagdi H, 2009, INT C PROGRAM COMPRE, P273, DOI 10.1109/ICPC.2009.5090056
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Krüger J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P764, DOI 10.1145/3180155.3180215
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Lee A, 2017, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2017.7
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Liu C, 2020, SOFTWARE PRACT EXPER, V50, P1778, DOI 10.1002/spe.2845
   Mendenhall William, 2012, INTRO PROBABILITY ST
   Miller C, 2019, IFIP ADV INF COMM TE, V556, P116, DOI 10.1007/978-3-030-20883-7_11
   MILLER R, 1982, BIOMETRICS, V38, P1011, DOI 10.2307/2529881
   Minto Shawn, 2007, 4 INT WORKSH MIN SOF, P5
   Mouzhi Ge, 2010, P 4 ACM C REC SYST B, P257, DOI [10.1145/1864708.1864761, DOI 10.1145/1864708.1864761]
   Oliveira Johnatan, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P386, DOI 10.1145/3422392.3422500
   Oliveira J, 2019, SBQS: PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, P49, DOI 10.1145/3364641.3364648
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Ponzanelli L, 2017, PROC INT CONF SOFTW, P94, DOI 10.1109/ICSE.2017.17
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Rahman MM, 2018, SOFTWARE PRACT EXPER, V48, P1560, DOI 10.1002/spe.2591
   Rahman MM, 2016, IEEE INT CONF AUTOM, P792, DOI 10.1145/2970276.2970283
   RAYNER JCW, 1990, INT STAT REV, V58, P9, DOI 10.2307/1403470
   Ricci F, 2011, RECOMMENDER SYSTEMS HANDBOOK, P1, DOI 10.1007/978-0-387-85820-3_1
   Robbins N., 2011, P 2011 JOINT STAT M, DOI DOI 10.1002/LT.25677
   Sajedi-Badashian A, 2020, SOFTWARE PRACT EXPER, V50, P1539, DOI 10.1002/spe.2830
   Salton Gerard, 1989, Automatic Text Processing: the Transformation, Analysis, and Retrieval of, P169
   Shah SK, 2006, MANAGE SCI, V52, P1000, DOI 10.1287/mnsc.1060.0553
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Surian D., 2011, P 2011 18 WORKING C, P379
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Terra R, 2015, SOFTWARE PRACT EXPER, V45, P315, DOI 10.1002/spe.2228
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Xu WY, 2017, PROC IEEE INT CONF S, P648, DOI 10.1109/ICSME.2017.20
   Yamashita K, 2015, 14TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE 2015), P46, DOI 10.1145/2804360.2804366
   YU CT, 1976, J ACM, V23, P76, DOI 10.1145/321921.321930
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 73
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2023
VL 53
IS 6
BP 1438
EP 1464
DI 10.1002/spe.3194
EA FEB 2023
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E8MO0
UT WOS:000940144200001
DA 2024-07-18
ER

PT J
AU Liu, HY
   Li, Z
   Wang, HF
   Liu, Y
   Chen, X
AF Liu, Hengyuan
   Li, Zheng
   Wang, Haifeng
   Liu, Yong
   Chen, Xiang
TI CRMF: A fault localization approach based on class reduction and method
   call frequency
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE class reduction; fault localization; information retrieval; method call
   frequency; program debugging
ID STRATEGY
AB Identifying the location of faults in real-world programs is one of the costly processes during software debugging. To reduce the debugging effort, various fault localization techniques have been proposed in recent years. Spectrum-based fault localization (SBFL) is one kind of widely investigated fault localization technique. Most SBFL techniques first calculate the suspiciousness of program elements (such as statements, methods) to be faulty using the coverage information and execution results of tests. Then a rank list of program elements is generated according to their suspiciousness. However, some SBFL techniques only consider the binary coverage information (i.e., whether the program element is covered) but ignore some of the tests' running behaviors, such as the execution frequency when faults occur in the iteration entities or loop bodies, which are more likely to be faulty followed the propagation-infection-execution model. The execution frequency based techniques only replace the feature items of the existing formula limiting their effectiveness in fault localization. In this article, we propose a fault localization technique, class reduction and method call frequency (CRMF), which utilizes mutation analysis and information retrieval techniques. In particular, CRMF first uses mutation analysis to identify and reduce the classes, in which the program elements with a low probability of being faulty. Then we propose a new suspiciousness formula that applies information retrieval and considers method call frequency. To evaluate the effectiveness of CRMF, we conduct empirical studies on 264 real-world programs from the Defects4J benchmark. Final results show that CRMF outperforms the statement frequency based technique FLSF and SBFL techniques (i.e., Ochiai, OP2, Tarantula, and Dstar) in both single-fault programs and multiple-fault programs. Specifically, CRMF can rank 29, 74, and 112 faults at the top 1, 3, 5 ranks and achieve a higher mean reciprocal rank for single-fault programs and multiple-fault programs. Finally, we discuss the essence of CRMF and analyze its effectiveness on multi-fault programs in detail.
C1 [Liu, Hengyuan; Li, Zheng; Wang, Haifeng; Liu, Yong] Beijing Univ Chem Technol, Coll Informat Sci & Technol, North Third Ring Rd 15, Beijing 100029, Peoples R China.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong, Jiangsu, Peoples R China.
C3 Beijing University of Chemical Technology; Nantong University
RP Wang, HF; Liu, Y (corresponding author), Beijing Univ Chem Technol, Coll Informat Sci & Technol, North Third Ring Rd 15, Beijing 100029, Peoples R China.
EM h.f.wang@hotmail.com; lyong@mail.buct.edu.cn
RI Chen, Xiang/AAG-3663-2019; Li, Zheng/L-8594-2015
OI Chen, Xiang/0000-0002-1180-3891; Wang, Haifeng/0000-0003-2482-375X; Liu,
   Hengyuan/0000-0002-5884-2089
FU National Natural Science Foundation of China;  [61902015];  [61872026]; 
   [61672085]
FX ACKNOWLEDGMENT The work described in this article is supported by the
   National Natural Science Foundation of China (Grant nos. 61902015,
   61872026, and 61672085).
CR Abreu R., 2010, EXPLOITING COUNT SPE, P1
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Aizawa A, 2003, INFORM PROCESS MANAG, V39, P45, DOI 10.1016/S0306-4573(02)00021-3
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   Arrieta A, 2018, INFORM SOFTWARE TECH, V100, P18, DOI 10.1016/j.infsof.2018.03.008
   Burges C. J., 2007, ADV NEURAL INFORM PR, P193, DOI DOI 10.1007/S10994-010-5185-8
   Chernick M., 2011, The Essentials of Biostatistics for Physicians, Nurses, and Clinicians
   Chiba S., 1998, Proceedings of OOPSLA98 Workshop on Reflective Programming in C++ and Java, V174, P21
   Conover W.J., 1999, Practical Nonparametric Statistics, V350
   Dao T, 2017, INT C PROGRAM COMPRE, P241, DOI 10.1109/ICPC.2017.29
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Dutta A, 2021, J COMPUT LANG, V66, DOI 10.1016/j.cola.2021.101064
   Eva B, 2019, J PHILOS, V116, P390, DOI 10.5840/jphil2019116724
   Fang CR, 2012, SCI CHINA INFORM SCI, V55, P2826, DOI 10.1007/s11432-012-4746-9
   Gong P, 2015, IEEE INT ULTRA SYM, DOI 10.1109/ULTSYM.2015.0197
   Harrold MJ, 1998, ACM SIGPLAN NOTICES, V33, P83, DOI 10.1145/277633.277647
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   Ho Chung Wu, 2008, ACM Transactions on Information Systems, V26
   HOWDEN WE, 1978, IEEE T SOFTWARE ENG, V4, P293, DOI 10.1109/TSE.1978.231514
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Keller F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P114, DOI 10.1109/QRS.2017.22
   Kim Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3345628
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Kvanli A., 2005, Concise managerial statistics
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Li Z, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110661
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Liu Y, 2018, INFORM SCIENCES, V422, P572, DOI 10.1016/j.ins.2017.09.006
   de Oliveira AAL, 2018, PROC INT SYMP SOFTW, P155, DOI 10.1109/ISSRE.2018.00026
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Masri W, 2010, SOFTW TEST VERIF REL, V20, P121, DOI 10.1002/stvr.409
   Moffat A, 2009, ACM T INFORM SYST, V27, DOI 10.1145/1416950.1416952
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Papadakis M., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1293
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Pearson S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1115, DOI 10.1145/2950290.2983967
   Perez A, 2017, IEEE INT CONF SOFTW, P12, DOI 10.1109/ICST.2017.9
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Qi YH, 2013, P INT COMP SOFTW APP, P828, DOI 10.1109/COMPSAC.2013.139
   Qiu HT, 2011, INT C COMP AID IND D, P340
   Ramos J, 2003, P 1 INSTRUCTIONAL C, V242, P29
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sarhan QI, 2021, IEEE INT WORK C SO, P103, DOI 10.1109/SCAM52516.2021.00021
   Shi Y., 2012, P 6 ACM C RECOMMENDE, P139, DOI [10.1145/2365952.2365981, DOI 10.1145/2365952.2365981]
   Shin D, 2016, IEEE INT CONF SOFTW, P299, DOI 10.1109/ICST.2016.22
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Shu T, 2016, INFORM SCIENCES, V360, P43, DOI 10.1016/j.ins.2016.04.023
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Voorhees Ellen M., 2001, Trec, V7, P361, DOI DOI 10.1017/S1351324901002789
   Wang HF, 2020, IEEE ACCESS, V8, P124297, DOI 10.1109/ACCESS.2020.3004145
   Wasylkowski Andrzej, 2007, P 6 JOINT M EUROPEAN, P35, DOI [10.1145/1287624.1287632, DOI 10.1145/1287624.1287632]
   Wilcoxon F., 1992, Individual comparisons by ranking methods
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Yoo S, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078840
   Zakari A, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106312
   Zhang LM, 2013, ACM SIGPLAN NOTICES, V48, P765, DOI [10.1145/2544173.2509551, 10.1145/2509136.2509551]
   Zhang L, 2020, IEEE T RELIAB, V69, P1021, DOI 10.1109/TR.2020.2982975
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
   Zhang Z, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2312
   Zheng Li, 2021, 2021 8th International Conference on Dependable Systems and Their Applications (DSA), P66, DOI 10.1109/DSA52907.2021.00016
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 77
TC 1
Z9 1
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2023
VL 53
IS 4
BP 1061
EP 1090
DI 10.1002/spe.3178
EA DEC 2022
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9M3GK
UT WOS:000899023800001
DA 2024-07-18
ER

PT J
AU Santos, GL
   Endo, PT
   Sadok, D
   Kelner, J
AF Santos, Guto Leoni
   Endo, Patricia Takako
   Sadok, Djamel
   Kelner, Judith
TI SPIDER: An availability-aware framework for the service function chain
   placement in distributed scenarios
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE intrastructure monitoring; Kubernetes; network function virtualization;
   service function chain
ID ORCHESTRATION; EFFICIENT
AB The network function virtualization (NFV) paradigm replaces hardware-dependent network functions by virtual network functions (VNFs) that can be deployed in commodity hardware, including legacy servers. Consequently, the use of NFV is expected to reduce operating and capital expenses, as well as improve service deployment operation and management flexibility. For many use cases, the VNFs must be visited and invoked following a specific order of execution in order to compose a complete network service, named service function chain (SFC). Nonetheless, despite the benefits from NFV and SFC virtualization technologies, their introduction must not harm network performance and service availability. On the one hand, redundancy is seen by network service planners as a mechanism well established to combat availability issues. At same time, there is a goal to optimize resource utilization in order to reduce operational expenditure. In this article, we share our experience in the design use of a framework, named SPIDER, focused on SFC placement that considers the network infrastructure condition and the required SFC availability to define the placement strategy. The SPIDER monitors the status of infrastructure nodes and links and defines which servers the VNFs should be placed on and the number of redundant replicas needed. We present a proof-of-concept of SPIDER using Kubernetes to launch the VNFs as containers. We also use Kubernetes to forward the traffic between the VNFs, composing the service chain. We perform experiments to evaluate the runtime of SPIDER and the SFC delay under different network conditions.
C1 [Santos, Guto Leoni; Sadok, Djamel; Kelner, Judith] Univ Fed Pernambuco, Recife, PE, Brazil.
   [Endo, Patricia Takako] Univ Pernambuco, Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco; Universidade de Pernambuco (UPE)
RP Santos, GL (corresponding author), Univ Fed Pernambuco, Recife, PE, Brazil.
EM gls4@cin.ufpe.br
RI Sadok, Djamel F Hadj/M-9814-2015; Kelner, Judith/C-6746-2009
FU Fundacao de Amparo a Ciencia e Tecnologia de Pernambuco (FACEPE)
   [IBPG-0059-1.03/19]; Conselho Nacional de Desenvolvimento Cientifico e
   Tecnologico (CNPq); Coordenacao de Aperfeicoamento de Pessoal de Nivel
   Superior (CAPES); Universidade de Pernambuco (UPE)
FX Fundacao de Amparo a Ciencia e Tecnologia de Pernambuco (FACEPE),
   Grant/Award Number: IBPG-0059-1.03/19; Conselho Nacional de
   Desenvolvimento Cientifico e Tecnologico (CNPq); Coordenacao de
   Aperfeicoamento de Pessoal de Nivel Superior (CAPES); Universidade de
   Pernambuco (UPE)
CR Bhamare D, 2016, J NETW COMPUT APPL, V75, P138, DOI 10.1016/j.jnca.2016.09.001
   Binz T., 2014, Advanced Web Services, P527
   Burns B., 2018, Kubernetes
   Cai J, 2020, J NETW COMPUT APPL, V163, DOI 10.1016/j.jnca.2020.102637
   Chen J, 2022, IEEE SYST J, V16, P3817, DOI 10.1109/JSYST.2021.3111972
   Endo PT, 2016, J CLOUD COMPUT-ADV S, V5, DOI 10.1186/s13677-016-0066-8
   Endo PT, 2017, COMPUTER, V50, P86, DOI 10.1109/MC.2017.4041358
   Guo SY, 2020, IEEE INTERNET THINGS, V7, P6010, DOI 10.1109/JIOT.2019.2951593
   Gyorodi Cornelia., 2015, 2015 13th International Conference on Engineering of Modern Electric Systems, EMES 2015, P0
   He L, 2021, PSYCHOL MARKET, V38, P1161, DOI 10.1002/mar.21478
   He TZ, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110943
   Hua Chai, 2019, 2019 IEEE 5th International Conference on Computer and Communications (ICCC), P2123, DOI 10.1109/ICCC47050.2019.9064448
   Kayedpour F, 2017, RELIAB ENG SYST SAFE, V160, P11, DOI 10.1016/j.ress.2016.10.009
   Khezri HR, 2019, IEEE GLOB COMM CONF, DOI 10.1109/globecom38437.2019.9013214
   Kumar A, 2019, ARTIF INTELL REV, V52, P927, DOI 10.1007/s10462-018-9650-2
   Lange S, 2021, IEEE T NETW SERV MAN, V18, P1476, DOI 10.1109/TNSM.2020.3015244
   Lira V, 2019, COMPUTING, V101, P937, DOI 10.1007/s00607-018-0620-y
   Luo ZY, 2019, IEEE J SEL AREA COMM, V37, P1838, DOI 10.1109/JSAC.2019.2927068
   Mirjalily G, 2018, CHINESE J ELECTRON, V27, P704, DOI 10.1049/cje.2018.05.008
   Moualla G., 2018, 2018 IEEE International Conference on Cloud Networking (CloudNet), P1
   Palkar S, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P121, DOI 10.1145/2815400.2815423
   Pei JN, 2018, IEEE INT CONF COMM
   Santos GL., 2022, REINFORCEMENT LEARNI
   Santos GL, 2022, FUTURE GENER COMP SY, V136, P93, DOI 10.1016/j.future.2022.05.021
   Santos GL, 2022, J NETW SYST MANAG, V30, DOI 10.1007/s10922-021-09626-4
   Santos GL, 2021, J SUPERCOMPUT, V77, P12711, DOI 10.1007/s11227-021-03784-7
   Santos GL, 2018, J CLOUD COMPUT-ADV S, V7, DOI 10.1186/s13677-018-0118-3
   Santos J, 2020, IEEE IFIP NETW OPER, DOI 10.1109/noms47738.2020.9110376
   Shah J, 2019, 2019 IEEE 9TH ANNUAL COMPUTING AND COMMUNICATION WORKSHOP AND CONFERENCE (CCWC), P184, DOI 10.1109/CCWC.2019.8666479
   Sharifi M, 2020, Int J Ind Math, V12, P59
   Skorin-Kapov L, 2010, INT J TELEMED APPL, V2010, DOI 10.1155/2010/628086
   Souza R, 2020, IEEE ACCESS, V8, P51713, DOI 10.1109/ACCESS.2020.2973568
   Sun G, 2019, FUTURE GENER COMP SY, V91, P347, DOI 10.1016/j.future.2018.09.037
   Sun PH, 2021, IEEE COMMUN LETT, V25, P176, DOI 10.1109/LCOMM.2020.3025298
   Tavakoli-Someh S, 2019, J SUPERCOMPUT, V75, P6451, DOI 10.1007/s11227-019-02849-y
   Viola P, 2001, PROC CVPR IEEE, P511, DOI 10.1109/cvpr.2001.990517
   Wang L, 2021, IEEE T NETW SERV MAN, V18, P118, DOI 10.1109/TNSM.2021.3049298
   Xu ZC, 2018, IEEE ICC
   Zhang XN, 2022, IEEE T CLOUD COMPUT, V10, P553, DOI 10.1109/TCC.2019.2947554
   Zhong ZH, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3510415
NR 40
TC 2
Z9 2
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 413
EP 437
DI 10.1002/spe.3154
EA OCT 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000864284400001
DA 2024-07-18
ER

PT J
AU Jin, Y
   Xu, J
   Xu, LJ
   Liu, LF
   Xiao, F
AF Jin, Yong
   Xu, Jia
   Xu, Lijie
   Liu, Linfeng
   Xiao, Fu
TI Customized scheduling for shared bus with deadlines
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE capacitated orienteering problem; scheduling; shared bus; vehicle
   routing problem
AB Public transportation system is one of the most effective ways to conserve energy and reduce carbon emissions. However, the traditional public transportation system does not provide customized service and cannot guarantee the arrival time to destination. To address these issues, we formulate the minimum shared bus scheduling problem to minimize the number of shared buses such that all orders can be completed under constraints of deadlines and capacity of shared bus. We propose the approximation algorithms, S-MBSA for the shared bus with strong endurance and E-MBSA for the large-scale order scenario, to solve the minimum shared bus scheduling problem. We further formulate the constrained maximum revenue shared bus scheduling problem to maximize the revenue under the limited number of shared buses, and propose an approximation algorithm, CMRBSA, to find the shared bus route schedules. Through the extensive simulations, we demonstrate the significant superiority of S-MBSA and E-MBSA in terms of number of shared buses. Furthermore, CMRBSA outperforms the benchmark algorithms significantly in terms of revenue.
C1 [Jin, Yong; Xu, Jia; Xu, Lijie; Liu, Linfeng; Xiao, Fu] Nanjing Univ Posts & Telecommun, Jiangsu Key Lab Big Data Secur & Intelligent Proc, Nanjing 210023, Jiangsu, Peoples R China.
   [Jin, Yong] Changshu Inst Technol, Sch Comp Sci & Engn, Changshu, Jiangsu, Peoples R China.
C3 Nanjing University of Posts & Telecommunications; Changshu Institute of
   Technology
RP Xu, J (corresponding author), Nanjing Univ Posts & Telecommun, Jiangsu Key Lab Big Data Secur & Intelligent Proc, Nanjing 210023, Jiangsu, Peoples R China.
EM xujia@njupt.edu.cn
RI Xu, Lijie/J-5190-2016
OI Liu, Linfeng/0000-0002-0824-6203
FU Suzhou Social Development Science and Technology Innovation Project
   [SS202155]; National Natural Science Foundation of China [61872193,
   61872191, 62072254]; Postgraduate Research and Practice Innovation
   Program of Jiangsu Province [SJKY19_0760]
FX Suzhou Social Development Science and Technology Innovation Project,
   Grant/Award Number: SS202155; National Natural Science Foundation of
   China, Grant/Award Numbers: 61872193, 61872191, 62072254; Postgraduate
   Research and Practice Innovation Program of Jiangsu Province,
   Grant/Award Number: SJKY19_0760
CR Akincilar A, 2022, IEEE INTEL TRANSP SY, V14, P105, DOI 10.1109/MITS.2021.3049359
   Aliyun ECS., 2022, CLOUD SERVER
   [Anonymous], 2022, NEW YORK CITY BUS DA
   [Anonymous], 2022, SPEEDY COMFORTABLE C
   [Anonymous], 2022, United States Environmental Protection Agency
   [Anonymous], 2022, GASOLINE PRICES
   [Anonymous], 2022, ENV BENEFITS PUBLIC
   [Anonymous], 2022, Google Map
   [Anonymous], 2022, Intergovernmental Panel on Climate Change
   [Anonymous], 2022, WELCOME PICKUPS
   [Anonymous], 2022, BUDAPEST SHARED AIRP
   [Anonymous], 2022, UN FRAMEWORK CONVENT
   [Anonymous], 2022, MACAU SHARED BUS TRA
   [Anonymous], 2022, DAILY DOOR TO DOOR S
   Arkin EM, 2006, J ALGORITHMS, V59, P1, DOI 10.1016/j.jalgor.2005.01.007
   Bansal N., 2004, P 36 ANN ACM ASS COM
   Bock A, 2015, DISCRETE APPL MATH, V195, P31, DOI 10.1016/j.dam.2014.10.001
   Cao ZC, 2019, TRANSPORT RES C-EMER, V102, P370, DOI 10.1016/j.trc.2019.03.018
   Hochbaum DS, 1998, NAV RES LOG, V45, P615, DOI 10.1002/(SICI)1520-6750(199809)45:6<615::AID-NAV5>3.0.CO;2-5
   HOFRI M, 1984, J ALGORITHM, V5, P547, DOI 10.1016/0196-6774(84)90007-5
   Jin Y, 2021, J SYST ARCHITECT, V116, DOI 10.1016/j.sysarc.2021.102059
   Jin Y, 2021, IEEE T INTELL TRANSP, V22, P1827, DOI 10.1109/TITS.2020.3023695
   Kong XJ, 2020, IEEE T IND INFORM, V16, P1436, DOI 10.1109/TII.2019.2947063
   Kong XJ, 2018, IEEE T AUTOM SCI ENG, V15, P1507, DOI 10.1109/TASE.2018.2865494
   LAPORTE G, 1984, NETWORKS, V14, P161, DOI 10.1002/net.3230140113
   LI CL, 1992, OPER RES, V40, P790, DOI 10.1287/opre.40.4.790
   Liu LF, 2022, IEEE T INTELL TRANSP, V23, P17212, DOI 10.1109/TITS.2022.3154444
   Liu QQ, 2020, 2020 IEEE VISUALIZATION CONFERENCE - SHORT PAPERS (VIS 2020), P76, DOI 10.1109/VIS47514.2020.00022
   Nagarajan V, 2012, NETWORKS, V59, P209, DOI 10.1002/net.20435
   Ning ZL, 2022, IEEE T INTELL TRANSP, V23, P3430, DOI 10.1109/TITS.2020.3036396
   Peng J., 2021, P 40 CHINESE CONTROL, P6040
NR 31
TC 0
Z9 0
U1 2
U2 25
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2022 AUG 31
PY 2022
DI 10.1002/spe.3145
EA AUG 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4E3CQ
UT WOS:000847707100001
DA 2024-07-18
ER

PT J
AU Kaur, A
   Auluck, N
AF Kaur, Amanjot
   Auluck, Nitin
TI Scheduling algorithms for truly heterogeneous hierarchical fog networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; fog computing; fog device hierarchy
ID INTERNET; THINGS; EDGE; ALLOCATION; ASSIGNMENT; CLOUDLETS; SYSTEMS;
   TASKS
AB Fog computing has emerged as a viable framework for processing delay sensitive applications. Modern applications consist of latency- sensitive and latency-tolerant jobs, leading to fog architectures that are often multi-tiered/hierarchical. FiFSA (hierarchical first fog scheduling algorithm) and EFSA (hierarchical elected fog scheduling algorithm) are capable of scheduling both online and batch jobs on hierarchical fog-cloud architectures. We consider heterogeneity in computing capacity-both among fog devices in separate layers, and among fog devices in the same layers. In general, online jobs with modest cpu requirements are scheduled on lower tier fog devices, and batch jobs with significant cpu requirements are scheduled on higher tier-fog nodes, or the cloud data center (cdc). FiFSA assigns jobs to the first fog device with sufficient spare capacity. EFSA employs a MinMin heuristic that assigns jobs to the fog device that results in minimum completion time, while considering fog load. The performance of the proposed algorithms has been evaluated on a real-life workload trace, using both simulation scenarios and a prototype testbed. FiFSA and EFSA offer an improvement of 19% to 70% in completion times and an improvement of 42% to 72% in system cost over other comparable algorithms.
C1 [Kaur, Amanjot; Auluck, Nitin] Indian Inst Technol, Dept Comp Sci & Engn, Ropar, Punjab, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Ropar
RP Kaur, A (corresponding author), Indian Inst Technol, Dept Comp Sci & Engn, Ropar, Punjab, India.
EM 2017csz0014@iitrpr.ac.in
RI Kaur, Amanjot/JOK-0787-2023
OI Kaur, Amanjot/0000-0001-6191-5878
CR Aburukba RO, 2020, FUTURE GENER COMP SY, V111, P539, DOI 10.1016/j.future.2019.09.039
   Akyildiz IF, 2015, IEEE COMMUN MAG, V53, P32, DOI 10.1109/MCOM.2015.7060516
   Alghamdi I, 2019, INFORMATION, V10, DOI 10.3390/info10100312
   Alibaba Inc, 2017, CLUST DAT COLL PROD
   Aljabre A., 2012, INT J BUS SOCIAL SCI, V3
   Andò B, 2015, IEEE T INSTRUM MEAS, V64, P2188, DOI 10.1109/TIM.2014.2386931
   [Anonymous], 2015, McKinsey Global Institute
   Anousha Soheil, 2013, Grid and Pervasive Computing. 8th International Conference, GPC 2013 and Colocated Workshops. Proceedings, P103, DOI 10.1007/978-3-642-38027-3_11
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Bittencourt L, 2018, INTERNET THINGS-NETH, V3-4, P134, DOI 10.1016/j.iot.2018.09.005
   Bittencourt LF, 2017, IEEE CLOUD COMPUT, V4, P26, DOI 10.1109/MCC.2017.27
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Braunt TD., 2000, COMP STUDY 11 STATIC, P19
   Catarinucci L, 2015, IEEE INTERNET THINGS, V2, P515, DOI 10.1109/JIOT.2015.2417684
   Chekired DA, 2018, IEEE T IND INFORM, V14, P4590, DOI 10.1109/TII.2018.2843802
   cisco, CISC VIS NETW IND GL
   Cui H, 2016, AER ADV ENG RES, V73, P822
   Dar BK., 2018, FOG COMPUTING BASED, P1
   Dastjerdi Amir Vahid, 2016, Internet of Things, P61, DOI [10.1016/B978 -0-12-805395-9.00004-6. arXiv: 1601.02752, DOI 10.1016/B978-0-12-805395-9.00004-6.ARXIV:1601.02752]
   Demirkan H, 2013, IT PROF, V15, P38, DOI 10.1109/MITP.2013.35
   El Haber E, 2019, IEEE T COMMUN, V67, P3407, DOI 10.1109/TCOMM.2019.2895040
   Fan Q, 2018, IEEE COMMUN LETT, V22, P820, DOI 10.1109/LCOMM.2018.2801866
   Fernando N, 2013, FUTURE GENER COMP SY, V29, P84, DOI 10.1016/j.future.2012.05.023
   Grover J, 2018, IEEE SENSOR, P609
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   He DB, 2015, IEEE INTERNET THINGS, V2, P72, DOI 10.1109/JIOT.2014.2360121
   Hridita BA., 2016, INT J COMPUT APPL, V137, P35
   Hu Y., 2015, MOBILE EDGE COMPUTIN, P1
   IBARRA OH, 1977, J ACM, V24, P280, DOI 10.1145/322003.322011
   Jin J, 2014, IEEE INTERNET THINGS, V1, P112, DOI 10.1109/JIOT.2013.2296516
   Kiani A, 2019, IEEE ACM T NETWORK, V27, P962, DOI 10.1109/TNET.2019.2906638
   Kumar K, 2010, COMPUTER, V43, P51, DOI 10.1109/MC.2010.98
   Lima J., 2015, US
   Lin YH, 2015, PROC INT CONF PARAL, P500, DOI 10.1109/ICPP.2015.59
   Liu J., 2000, Real-Time Systems
   Liu TT, 2018, IEEE CONF COMPUT, P499
   Liu YM, 2018, IEEE CONF COMPUT, P154
   Liu ZW, 2019, INT J PROD RES, V57, P7104, DOI 10.1080/00207543.2019.1577566
   Munir A, 2017, IEEE CONSUM ELECTR M, V6, P74, DOI 10.1109/MCE.2017.2684981
   Naas MI, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P97, DOI 10.1109/ICFEC.2017.15
   Nordrum A., 2016, IEEE Spectrum
   Olmsted J., 2020, FOGWEAVER TASK ALLOC, P156
   OpenFog Consortium Architecture Working Group, 2017, Openfog reference architecture for fog computing
   Peixoto M., 2021, IEEE T SERVICES COMP
   Perera C, 2014, IEEE ACCESS, V2, P1660, DOI 10.1109/ACCESS.2015.2389854
   Preden J, 2015, 2015 IEEE INTERNATIONAL MULTI-DISCIPLINARY CONFERENCE ON COGNITIVE METHODS IN SITUATION AWARENESS AND DECISION SUPPORT (COGSIMA), P158, DOI 10.1109/COGSIMA.2015.7108192
   Sarkar S, 2018, IEEE T CLOUD COMPUT, V6, P46, DOI 10.1109/TCC.2015.2485206
   Satyanarayanan M, 2015, IEEE COMMUN MAG, V53, P63, DOI 10.1109/MCOM.2015.7060484
   Satyanarayanan M, 2013, IEEE PERVAS COMPUT, V12, P40, DOI 10.1109/MPRV.2013.77
   Satyanarayanan M, 2009, IEEE PERVAS COMPUT, V8, P14, DOI 10.1109/MPRV.2009.82
   Shah-Mansouri H, 2018, IEEE INTERNET THINGS, V5, P3246, DOI 10.1109/JIOT.2018.2838022
   Skarlat O, 2017, SERV ORIENTED COMPUT, V11, P427, DOI 10.1007/s11761-017-0219-8
   Skarlat O, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P89, DOI 10.1109/ICFEC.2017.12
   Sonmez C, 2017, IEEE INT CONF COMM, P302, DOI 10.1109/ICCW.2017.7962674
   Tong L, 2016, 35 IEEE ANN INT C CO
   Tran NH, 2015, IEEE J SEL AREA COMM, V33, P2892, DOI 10.1109/JSAC.2015.2483420
   Vilela PH., 2018, CRITICAL ANAL HEALTH, P1
   Voorsluys W., 2011, Cloud Computing: Principles and Paradigms, P1, DOI DOI 10.1002/9780470940105.CH1
   Wang PF, 2019, IEEE T WIREL COMMUN, V18, P4942, DOI 10.1109/TWC.2019.2931315
   Wu HY., 2018, P IEEE 42 ANN COMP S, P555, DOI DOI 10.1109/COMPSAC.2018.00085
   Yang Y, 2019, IEEE INTERNET THINGS, V6, P8658, DOI 10.1109/JIOT.2019.2922324
   Yannuzzi M, 2014, IEEE INT WORKSH COMP, P325, DOI 10.1109/CAMAD.2014.7033259
   Zhang G., 2018, 2018 IEEE international conference on communications (ICC), P1, DOI DOI 10.1109/ICC.2018.8422316
   Zhao S, 2018, IEEE INTERNET THINGS, V5, P1169, DOI 10.1109/JIOT.2018.2808280
NR 65
TC 1
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2022
VL 52
IS 11
BP 2411
EP 2438
DI 10.1002/spe.3132
EA AUG 2022
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5C7YI
UT WOS:000835845800001
DA 2024-07-18
ER

PT J
AU Passini, WF
   Lana, CA
   Pfeifer, V
   Affonso, FJ
AF Filisbino Passini, William
   Aparecida Lana, Cristiane
   Pfeifer, Vinicius
   Affonso, Frank Jose
TI Design of frameworks for self-adaptive service-oriented applications: A
   systematic analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE framework; self-adaptive service; self-apps; systematic mapping
ID MOBILE APPLICATIONS; ARCHITECTURE; ADAPTATION
AB Self-adaptive service-oriented Applications (Self-Apps) must be able to understand themselves or the environment in which they are executed, and propose solutions to meet changing conditions. The development of these applications is not a trivial task, since it encompasses issues from different research areas. Despite the importance of frameworks for Self-Apps, there is a lack of comprehensive analysis of how the design of such applications is performed, and regarding the standardization of concepts and coverage of minimum requirements for Self-Apps. The main contribution of this article is to present this comprehensive analysis, providing the state of the art for this subject. This analysis was built through a Systematic Mapping Study, based on a total of 65 studies, from which we identify the main attributes for Quality of Service (QoS), search strategies, and service management strategies employed in the design of frameworks for Self-Apps. The main aspects of requirements involved in the design of Self-Apps were pointed out to stakeholders. For example, these applications must implement a method for evaluation of QoS based on metrics. We also put forward the S-Frame, a modular solution that brings together the main features for the design of Self-Apps, and describe the main challenges concerning these applications.
C1 [Filisbino Passini, William; Pfeifer, Vinicius; Affonso, Frank Jose] Sao Paulo State Univ UNESP, Dept Stat Appl Math & Computat, BR-13506900 Sao Paulo, SP, Brazil.
   [Aparecida Lana, Cristiane] Univ Sao Paulo, Inst Math & Comp Sci, Sao Carlos, Brazil.
C3 Universidade Estadual Paulista; Universidade de Sao Paulo
RP Passini, WF (corresponding author), Sao Paulo State Univ UNESP, Dept Stat Appl Math & Computat, BR-13506900 Sao Paulo, SP, Brazil.
EM william.passini@unesp.br
RI Lana, Cristiane Aparecida A./A-2095-2015
OI Affonso, Frank/0000-0002-5784-6248
FU Coordination for the Improvement of Higher Education Personnel (CAPES)
   Brazil [PROEX-9259572/D]; LINEAS Project (UNESP/Petrobras/FUNDUNESP
   Cooperation) - Brazil [2017/00502-7]; Sao Paulo Research Foundation
   (FAPESP) - Brazil [2015/06195-3]; UNESP's Pro-Rectory of Research
   (PROPe/UNESP)
FX Coordination for the Improvement of Higher Education Personnel (CAPES)
   Brazil, Grant/Award Number: PROEX-9259572/D; LINEAS Project
   (UNESP/Petrobras/FUNDUNESP Cooperation) - Brazil, Grant/Award Number:
   2017/00502-7; Sao Paulo Research Foundation (FAPESP) - Brazil,
   Grant/Award Number: 2015/06195-3; UNESP's Pro-Rectory of Research
   (PROPe/UNESP)
CR Affonso F. J., 2015, 27 INT C SOFTW ENG K, P24
   Affonso FJ, 2019, PERVASIVE MOB COMPUT, V53, P33, DOI 10.1016/j.pmcj.2019.01.001
   Alhosban Amal, 2014, 2014 22nd Annual IEEE International Symposium on Modeling, Analysis and Simulation of Computer and Telecommunication Systems (MASCOTS). Proceedings, P174, DOI 10.1109/MASCOTS.2014.30
   Angarita R, 2016, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON MANAGEMENT OF DIGITAL ECOSYSTEMS (MEDES 2016), P1, DOI 10.1145/3012071.3012100
   [Anonymous], 2017, INT C EM TECHN DEV C, DOI DOI 10.1007/978-3-319-67837-5_6
   [Anonymous], 2020, W3C OWL S SEMANTIC M
   Ardissono L, 2004, COMPUT INTELL-US, V20, P693, DOI 10.1111/j.0824-7935.2004.00261.x
   Badawy MM, 2020, CLUSTER COMPUT, V23, P575, DOI 10.1007/s10586-019-02945-x
   Barry DK., 2003, WEB SERVICES SERVICE, P61
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Bonabeau E., 1999, NATURAL ARTIFICIAL S
   Caeiro RM., 2008, TR0162
   Cardellini Valeria, 2017, Software Engineering for Self-Adaptive Systems III. Assurances. International Seminar. Revised Selected and Invited Papers: LNCS 9640, P409, DOI 10.1007/978-3-319-74183-3_14
   Chainbi W, 2012, MULTIAGENT GRID SYST, V8, P45, DOI 10.3233/MGS-2012-0185
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cubo Javier, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P326, DOI 10.1007/978-3-642-38977-1_25
   Cugola G, 2014, J SYST SOFTWARE, V92, P32, DOI 10.1016/j.jss.2013.10.057
   Daigneau R., 2012, Addison-Wesley Signature Series (Fowler)
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   DUTTA S, 1993, INT J APPROX REASON, V8, P163, DOI 10.1016/0888-613X(93)90001-T
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Erl T, 2005, SERVICE ORIENTED ARC
   Fabra J, 2011, CONCURR COMP-PRACT E, V23, P2421, DOI 10.1002/cpe.1795
   Faniyi F, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2843890
   Ghosh D, 2007, DECIS SUPPORT SYST, V42, P2164, DOI 10.1016/j.dss.2006.06.011
   Giustozzi F, 2018, PROCEDIA COMPUT SCI, V126, P675, DOI 10.1016/j.procs.2018.08.001
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Guoqiang Li, 2013, Web Technologies and Applications. 15th Asia-Pacific Web Conference, APWeb 2013. Proceedings, P654, DOI 10.1007/978-3-642-37401-2_64
   Gupta Reena, 2018, International Journal of Information Technology, V10, P71, DOI 10.1007/s41870-017-0066-z
   Hamid RA, 2021, COMPUT SCI REV, V39, DOI 10.1016/j.cosrev.2020.100337
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hielscher J, 2008, LECT NOTES COMPUT SC, V5377, P122, DOI 10.1007/978-3-540-89897-9_11
   IBM, 2005, An architectural blueprint for autonomic computing
   IEEE, 2020, COMP SOC SOFTW SYST
   ISO Central Secretary, 2011, 250102011 ISOIEC TR
   JabRef Team, 2020, JABREF REF MAN
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Joia P, 2011, IEEE T VIS COMPUT GR, V17, P2563, DOI 10.1109/TVCG.2011.220
   Kennedy J., 2001, Swarm Intelligence
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Kudo TN, 2020, IET SOFTW, V14, P18, DOI 10.1049/iet-sen.2019.0016
   Kumar VRS, 2019, KNOWL ENG REV, V34, DOI 10.1017/S0269888919000109
   Lee E, 2018, INFORM SOFTWARE TECH, V93, P200, DOI 10.1016/j.infsof.2017.09.008
   Leite LAF, 2013, SERV ORIENTED COMPUT, V7, P199, DOI 10.1007/s11761-012-0125-z
   Lemos AL, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2831270
   Mahdavi-Hezavehi S, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P45, DOI 10.1016/B978-0-12-802855-1.00003-4
   Menascé DA, 2011, IEEE SOFTWARE, V28, P78, DOI 10.1109/MS.2011.22
   Mizouni R, 2014, EXPERT SYST APPL, V41, P7549, DOI 10.1016/j.eswa.2014.05.049
   Mohsin A, 2018, SERV ORIENTED COMPUT, V12, P183, DOI 10.1007/s11761-018-0245-1
   Moisan Sabine, 2011, Computer Vision Systems. Proceedings 8th International Conference (ICVS 2011), P203, DOI 10.1007/978-3-642-23968-7_21
   Nascimento AS., 2014, J SOFTW ENG RES DEV, V2, P1, DOI [10.1186/s40411-014-0013-7, DOI 10.1186/S40411-014-0013-7]
   Neto BFD, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P245
   OASIS, 2012, REFERENCE ARCHITECTU
   Padhy N, 2019, CLUSTER COMPUT, V22, P14559, DOI 10.1007/s10586-018-2359-9
   Passini WF., 2020, SYSTEMATIC MAPPING P
   Passini WF., 2018, P 30 INT C SOFTW ENG
   Passini WF, 2018, INT J SOFTW ENG KNOW, V28, P1537, DOI 10.1142/S0218194018400168
   Pegoraro R, 2008, ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL ISAS-2, P201
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Psaier H, 2011, COMPUTING, V91, P43, DOI 10.1007/s00607-010-0107-y
   Quinn C, 2021, ADV ENG INFORM, V47, DOI 10.1016/j.aei.2020.101233
   Ridley D., 2012, LIT REV STEP BY STEP, VSecond
   Rogers M., 2020, DATA EXCH METH CONS
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Sanchez L. E., 2015, Journal of Software Engineering Research and Development, V3, P10, DOI DOI 10.1186/S40411-015-0022-1
   Schmerl Bradley, 2017, Software Engineering for Self-Adaptive Systems III. Assurances. International Seminar. Revised Selected and Invited Papers: LNCS 9640, P64, DOI 10.1007/978-3-319-74183-3_3
   Shen YH, 2011, J ZHEJIANG U-SCI C, V12, P221, DOI 10.1631/jzus.C1000031
   Sheng QZ, 2014, INFORM SCIENCES, V280, P218, DOI 10.1016/j.ins.2014.04.054
   Shiu S., 2004, FDN SOFT CASE BASED
   Singh S, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2843889
   Souza E, 2018, IET SOFTW, V12, P49, DOI 10.1049/iet-sen.2016.0226
   Stuart J., 2016, ARTIFICIAL INTELLIGE
   The Document Foundation, 2020, LIBR FREE OFF SUIT
   Wedyan F, 2020, IET SOFTW, V14, P1, DOI 10.1049/iet-sen.2018.5446
   Weyns D., 2019, Software Engineering of Self-adaptive Systems, P399, DOI [DOI 10.1007/978-3-030-00262-611, DOI 10.1007/978-3-030-00262-6_11]
   Ye DY, 2018, J PARALLEL DISTR COM, V122, P11, DOI 10.1016/j.jpdc.2018.07.006
   Ye DY, 2018, J PARALLEL DISTR COM, V119, P36, DOI 10.1016/j.jpdc.2018.03.005
   Zangeneh P, 2020, ADV ENG INFORM, V46, DOI 10.1016/j.aei.2020.101164
   Zavala E, 2019, INFORM SOFTWARE TECH, V105, P161, DOI 10.1016/j.infsof.2018.08.013
NR 84
TC 5
Z9 5
U1 3
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 5
EP 38
DI 10.1002/spe.3013
EA JUN 2021
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000668361000001
DA 2024-07-18
ER

PT J
AU Bracke, V
   Sebrechts, M
   Moons, B
   Hoebeke, J
   De Turck, F
   Volckaert, B
AF Bracke, Vincent
   Sebrechts, Merlijn
   Moons, Bart
   Hoebeke, Jeroen
   De Turck, Filip
   Volckaert, Bruno
TI Design and evaluation of a scalable Internet of Things backend for smart
   ports
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud&#8208; based integration; IoT; IoT data hub; IoT platform; smart
   port
AB Internet of Things (IoT) technologies, when adequately integrated, cater for logistics optimisation and operations' environmental impact monitoring, both key aspects for today's EU ports management. This article presents Obelisk, a scalable and multi-tenant cloud-based IoT integration platform used in the EU H2020 PortForward project. The landscape of IoT protocols being particularly fragmented, the first role of Obelisk is to provide uniform access to data originating from a myriad of devices and protocols. Interoperability is achieved through adapters that provide flexibility and evolvability in protocol and format mapping. Additionally, due to ports operating in a hub model with various interacting actors, a second role of Obelisk is to secure access to data. This is achieved through encryption and isolation for data transport and processing, respectively, while user access control is ensured through authentication and authorisation standards. Finally, as ports IoTisation will further evolve, a third need for Obelisk is to scale with the data volumes it must ingest and process. Platform scalability is achieved by means of a reactive micro-services based design. Those three essential characteristics are detailed in this article with a specific focus on how to achieve IoT data platform scalability. By means of an air quality monitoring use-case deployed in the city of Antwerp, the scalability of the platform is evaluated. The evaluation shows that the proposed reactive micro-service based design allows for horizontal scaling of the platform as well as for logarithmic time complexity of its service time.
C1 [Bracke, Vincent; Sebrechts, Merlijn; Moons, Bart; Hoebeke, Jeroen; De Turck, Filip; Volckaert, Bruno] Univ Ghent, Dept Informat Technol, IDLAB, Ghent, Belgium.
C3 Ghent University
RP Bracke, V (corresponding author), Univ Ghent, Dept Informat Technol, IDLAB, Ghent, Belgium.
EM vincent.bracke@ugent.be
RI Sebrechts, Merlijn/ADZ-1632-2022; Volckaert, Bruno/G-6288-2015
OI Sebrechts, Merlijn/0000-0002-4093-7338; Hoebeke,
   Jeroen/0000-0003-2039-007X; Bracke, Vincent/0000-0003-0913-6433; Moons,
   Bart/0000-0003-4977-8916; De Turck, Filip/0000-0003-4824-1199;
   Volckaert, Bruno/0000-0003-0575-5894
FU European Union [769267]; H2020 Societal Challenges Programme [769267]
   Funding Source: H2020 Societal Challenges Programme
FX The authors are particularly grateful for the assistance provided by the
   development team of the Obelisk platform (Thomas Dupont, Wannes
   Kerckhove, Sarah Kerkhove, Joachim Nielandt and Jasper Vaneessen) during
   the realisation of this research. The project PortForward has received
   funding from the European Union's Horizon 2020 research and innovation
   programme under grant agreement No. 769267. -
   https://www.portforward-project.eu.
CR Alonso A, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18072226
   [Anonymous], 2016, P IEEE INT SMART CIT
   [Anonymous], 2019, FLEXERA RIGHTSCALE 2
   Araujo V, 2019, J PARALLEL DISTR COM, V132, P250, DOI 10.1016/j.jpdc.2018.12.010
   Atlam HF, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON INTERNET OF THINGS (ITHINGS) AND IEEE GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) AND IEEE CYBER, PHYSICAL AND SOCIAL COMPUTING (CPSCOM) AND IEEE SMART DATA (SMARTDATA), P670, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData.2017.105
   Autoridad Portuaria de Baleares, 2019, PLAN EMPRESA 2020 AU
   Autorit? di Sistema Portuale del Mar Tirreno Settentrionale, 2019, REL ANN ATT SVOLT NE
   Basu SS., 2020, SENSORS-BASEL, V20, P17
   Botti A., 2017, RECONCEPTUALIZATION, V5
   da Silva VG, 2018, APPL COMPUT SYST, V23, P21, DOI 10.2478/acss-2018-0003
   Dhirani LL, 2018, I CONF SENS TECHNOL, P65, DOI 10.1109/ICSensT.2018.8603570
   Divyashree M., 2018, 2018 INT C NETWORKIN, P1
   Dooms M., 2017, EUROPEAN PORT IND SU
   European Sea Ports Organization (ESPO), 2016, TRENDS EU PORTS GOV
   Farhan L, 2017, I CONF SENS TECHNOL, P37
   Fernández P, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16030417
   Guth J., 2018, Internet of Everything, P81, DOI [DOI 10.1007/978-981-10-5861-5_4, 10.1007/978-981-10-5861-5_4]
   Heilig L, 2017, INFORM TECHNOL MANAG, V18, P179, DOI 10.1007/s10799-016-0269-1
   HOEBEKE J, 2018, SENSORS-BASEL, P1
   Hofmann W, 2019, IFAC PAPERSONLINE, V52, P2104, DOI 10.1016/j.ifacol.2019.11.516
   Irannezhad E, 2020, DECIS SUPPORT SYST, V130, DOI 10.1016/j.dss.2019.113227
   Ishaq I, 2013, J SENS ACTUAT NETW, V2, P235, DOI 10.3390/jsan2020235
   Ismail AA, 2018, 2018 IEEE GLOBAL CONFERENCE ON INTERNET OF THINGS (GCIOT), P27
   Krylovskiy A, 2015, 2015 3RD INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD) AND INTERNATIONAL CONFERENCE ON OPEN AND BIG (OBD), P25, DOI 10.1109/FiCloud.2015.55
   Latre S., 2016, Smart Cities Conference (ISC2), P1
   Maenhaut PJ, 2020, J NETW SYST MANAG, V28, P197, DOI 10.1007/s10922-019-09504-0
   Moens P, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20154308
   Molavi A, 2020, INT J SUSTAIN TRANSP, V14, P686, DOI 10.1080/15568318.2019.1610919
   Narkhede N., 2017, Kafka The Definitive Guide-Realtime data and stream processing at scale
   Nelis J, 2012, C LOCAL COMPUT NETW, P192, DOI 10.1109/LCN.2012.6423604
   Opara-Martins J, 2014, 2014 INTERNATIONAL CONFERENCE ON INFORMATION SOCIETY (I-SOCIETY 2014), P92, DOI 10.1109/i-Society.2014.7009018
   Pasqua E., 2018, IOT ANAL IOT CONNECT
   Patel K. K., 2016, INT J ENG SCI COMPUT, V6, P6122, DOI [DOI 10.4010/2016.1482, 10.4010/2016.1482]
   Pierleoni P, 2020, IEEE ACCESS, V8, P5455, DOI 10.1109/ACCESS.2019.2961511
   Santos J, 2018, IEEE COMMUN MAG, V56, P177, DOI 10.1109/MCOM.2018.1701322
   Santos J, 2018, ENTROPY-SWITZ, V20, DOI 10.3390/e20010004
   Suárez JP, 2015, 2015 1ST INTERNATIONAL CONFERENCE ON GEOGRAPHICAL INFORMATION SYSTEMS THEORY, APPLICATIONS AND MANAGEMENT (GISTAM), P72
   Tijtgat N, 2017, IEEE INT CONF COMP V, P2110, DOI 10.1109/ICCVW.2017.247
   Udoh IS, 2018, IET CYBER PHYS SYST, V3, P65, DOI 10.1049/iet-cps.2017.0068
   Vandaele H, 2016, L N INST COMP SCI SO, V170, P450, DOI 10.1007/978-3-319-47075-7_49
   Verhoeven P., 2010, EUROPEAN PORT GOVERN
   Yang YS, 2018, IEEE INSTRU MEAS MAG, V21, P34, DOI 10.1109/MIM.2018.8278808
   Yau KLA, 2020, IEEE ACCESS, V8, P83387, DOI 10.1109/ACCESS.2020.2990961
NR 43
TC 22
Z9 22
U1 1
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2021
VL 51
IS 7
BP 1557
EP 1579
DI 10.1002/spe.2973
EA APR 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO3PJ
UT WOS:000637679900001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Mohan, S
   John, A
   Abugabah, A
   Adimoolam, M
   Singh, SK
   Bashir, AK
   Sanzogni, L
AF Mohan, Senthilkumar
   John, A.
   Abugabah, Ahed
   Adimoolam, M.
   Kumar Singh, Shubham
   Kashif Bashir, Ali
   Sanzogni, Louis
TI An approach to forecast impact of Covid-19 using supervised machine
   learning model
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Covid-19; ensemble learning; healthcare; machine learning; prediction
AB The Covid-19 pandemic has emerged as one of the most disquieting worldwide public health emergencies of the 21st century and has thrown into sharp relief, among other factors, the dire need for robust forecasting techniques for disease detection, alleviation as well as prevention. Forecasting has been one of the most powerful statistical methods employed the world over in various disciplines for detecting and analyzing trends and predicting future outcomes based on which timely and mitigating actions can be undertaken. To that end, several statistical methods and machine learning techniques have been harnessed depending upon the analysis desired and the availability of data. Historically speaking, most predictions thus arrived at have been short term and country-specific in nature. In this work, multimodel machine learning technique is called EAMA for forecasting Covid-19 related parameters in the long-term both within India and on a global scale have been proposed. This proposed EAMA hybrid model is well-suited to predictions based on past and present data. For this study, two datasets from the Ministry of Health & Family Welfare of India and Worldometers, respectively, have been exploited. Using these two datasets, long-term data predictions for both India and the world have been outlined, and observed that predicted data being very similar to real-time values. The experiment also conducted for statewise predictions of India and the countrywise predictions across the world and it has been included in the Appendix.
C1 [Mohan, Senthilkumar] Vellore Inst Technol, Sch Informat Technol & Engn, Vellore 632014, Tamil Nadu, India.
   [John, A.] Galgotias Univ, Sch Comp Sci & Engn, Noida, India.
   [Abugabah, Ahed] Zayed Univ, Coll Technol Innovat, Abu Dhabi, U Arab Emirates.
   [Adimoolam, M.] Saveetha Univ, Sch Comp Sci & Engn, Chennai 602105, Tamil Nadu, India.
   [Kumar Singh, Shubham] Indiana Univ, Luddy Sch Informat & Engn, Bloomington, IN USA.
   [Kashif Bashir, Ali] Manchester Metropolitan Univ, Dept Comp & Math, Manchester, Lancs, England.
   [Kashif Bashir, Ali] Natl Univ Sci & Technol NUST, Sch Elect Engn & Comp Sci, Islamabad, Pakistan.
   [Sanzogni, Louis] Griffith Univ, Dept Business Strategy & Innovat, Brisbane, Qld, Australia.
C3 Vellore Institute of Technology (VIT); VIT Vellore; Galgotias
   University; Zayed University; Saveetha Institute of Medical & Technical
   Science; Indiana University System; Indiana University Bloomington;
   Manchester Metropolitan University; National University of Sciences &
   Technology - Pakistan; Griffith University
RP Mohan, S (corresponding author), Vellore Inst Technol, Sch Informat Technol & Engn, Vellore 632014, Tamil Nadu, India.
EM senthilkumar.mohan@vit.ac.in
RI A, Dr. John/ABT-3184-2022; Bashir, Ali Kashif/R-4015-2019; ,
   m.senthilkumar/L-5551-2015; M, Adimoolam/AAM-1510-2021
OI A, Dr. John/0000-0002-3889-0112; Bashir, Ali Kashif/0000-0003-2601-9327;
   , m.senthilkumar/0000-0002-8114-3147; M, Adimoolam/0000-0002-7293-9020
FU Zayed University [R18088]
FX Zayed University, Grant/Award Number: R18088
CR Al-qaness MAA, 2020, J CLIN MED, V9, DOI 10.3390/jcm9030674
   Alamo T, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9050827
   Alimadadi A, 2020, PHYSIOL GENOMICS, V52, P200, DOI 10.1152/physiolgenomics.00029.2020
   Aliou M. A., 2020, BMJ, DOI DOI 10.1101/2020.04.26.20081042
   Altieri N., 2020, ARXIV PREPRINT ARXIV
   Ardabili SF, 2020, ALGORITHMS, V13, DOI 10.3390/a13100249
   Azarafza M., 2020, medRxiv, DOI [10.1101/2020.05.16.201 04182, DOI 10.1101/2020.05.16.20104182]
   Car Z, 2020, COMPUT MATH METHOD M, V2020, DOI 10.1155/2020/5714714
   Chakraborty T, 2020, CHAOS SOLITON FRACT, V135, DOI 10.1016/j.chaos.2020.109850
   Chen, 2020, PREDICTION DEV COVID, DOI [10.1101/2020.03.10.20033670, DOI 10.1101/2020.03.10.20033670]
   Chimmula VKR, 2020, CHAOS SOLITON FRACT, V135, DOI 10.1016/j.chaos.2020.109864
   Dandekar R., 2020, QUANTIFYING EFFECT Q, DOI DOI 10.1101/2020.04.03.20052084
   Dhanwant JN, 2020, ARXIV PREPRINT ARXIV
   Grasselli G, 2020, JAMA-J AM MED ASSOC, V323, P1545, DOI 10.1001/jama.2020.4031
   Hu Z., 2020, ARXIV PREPRINT ARXIV
   Huang C.J., 2020, Millimeterwave leakywave antenna for 5G mobile phone, DOI DOI 10.1109/IWEM49354.2020.9237418
   Iwendi C, 2020, FRONT PUBLIC HEALTH, V8, DOI 10.3389/fpubh.2020.00357
   Khan S., 2020, APPL SOFT COMPUT
   Kumar A, 2021, FUTURE GENER COMP SY, V115, P1, DOI 10.1016/j.future.2020.08.046
   Kumar P., 2020, MedRxiv, P1154, DOI DOI 10.1101/2020.03.30.20046227
   Liu D, 2020, INT J MACH LEARN CYB, V11, P989, DOI 10.1007/s13042-020-01095-6
   Masum AM, 2020, PROCEDIA COMPUT SCI, V178, P291, DOI 10.1016/j.procs.2020.11.031
   Papastefanopoulos V, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10113880
   Pey G., 2020, ARXIV PREPRINT ARXIV
   Pinter G, 2020, MATHEMATICS-BASEL, V8, DOI 10.3390/math8060890
   Punn N.S., 2020, COVID 19 EPIDEMIC AN, DOI [10.1101/2020.04.08.20057679, DOI 10.1101/2020.04.08.20057679]
   Rustam F, 2020, IEEE ACCESS, V8, P101489, DOI 10.1109/ACCESS.2020.2997311
   Sengupta S., 2020, COVID 19 PANDEMIC DA, DOI [10.1101/2020.06.25.20140004, DOI 10.1101/2020.06.25.20140004]
   Shahid F, 2020, CHAOS SOLITON FRACT, V140, DOI 10.1016/j.chaos.2020.110212
   Sharma N., 2020, SPATIAL NETWORK BASE, DOI [10.1101/2020.05.06.20092858, DOI 10.1101/2020.05.06.20092858]
   Shinde Gitanjali R, 2020, SN Comput Sci, V1, P197, DOI 10.1007/s42979-020-00209-9
   Srivastava A., 2020, ARXIV PREPRINT ARXIV
   Tuli S., 2020, MEDRXIV, DOI [10.1101/2020.06.18.20134874, DOI 10.1101/2020.06.18.20134874]
   Tuli S., 2020, INT THINGS, P11, DOI DOI 10.1101/2020.05.06.20091900
   Wynants L, 2020, BMJ-BRIT MED J, V369, DOI 10.1136/bmj.m1328
   Xiao, 2020, PREDICTION CRITICALI, DOI [10.1101/2020.02.27.20028027, DOI 10.1080/10426507.2020.1854755]
   Yan L, 2020, NAT MACH INTELL, V2, P283, DOI 10.1038/s42256-020-0180-7
NR 37
TC 3
Z9 3
U1 1
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 824
EP 840
DI 10.1002/spe.2969
EA APR 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000635711900001
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Martin, JP
   Kandasamy, A
   Chandrasekaran, K
AF Paul Martin, John
   Kandasamy, A.
   Chandrasekaran, K.
TI CREW: Cost and Reliability aware Eagle-Whale optimiser for service
   placement in Fog
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cloud computing; Fog computing; Fogonomics; monetary cost; multi-Whale
   optimisation algorithm; NSGA-II; reliability; resource management;
   service placement
AB Integration of Internet of Things (IoT) with industries revamps the traditional ways in which industries work. Fog computing extends Cloud services to the vicinity of end users. Fog reduces delays induced by communication with the distant clouds in IoT environments. The resource constrained nature of Fog computing nodes demands an efficient placement policy for deploying applications, or their services. The distributed and heterogeneous features of Fog environments deem it imperative to consider the reliability performance parameter in placement decisions to provide services without interruptions. Increasing reliability leads to an increase in the cost. In this article, we propose a service placement policy which addresses the conflicting criteria of service reliability and monetary cost. A multiobjective optimisation problem is formulated and a novel placement policy, Cost and Reliability-aware Eagle-Whale (CREW), is proposed to provide placement decisions ensuring timely service responses. Considering the exponentially large solution space, CREW adopts Eagle strategy based multi-Whale optimisation for taking placement decisions. We have considered real time microservice applications for validating our approaches, and CREW has been experimentally shown to outperform the existing popular multiobjective meta-heuristics such as NSGA-II and MOWOA based placement strategies.
C1 [Paul Martin, John; Kandasamy, A.] Natl Inst Technol Karnataka Surathkal, Dept MACS, Mangalore, India.
   [Chandrasekaran, K.] Natl Inst Technol Karnataka Surathkal, Dept CSE, Mangalore, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Karnataka; National Institute of Technology (NIT System);
   National Institute of Technology Karnataka
RP Martin, JP (corresponding author), Natl Inst Technol Karnataka Surathkal, Dept MACS, Mangalore, India.
EM johnpm12@gmail.com
FU Ministry of Electronics & Information Technology, Government of India
   [VISPHD-MEITY-1661]
FX Ministry of Electronics & Information Technology, Government of India,
   Grant/Award Number: VISPHD-MEITY-1661
CR Bao L, 2019, IEEE T PARALL DISTR, V30, P2101, DOI 10.1109/TPDS.2019.2901467
   Birke R, 2014, I C DEPEND SYS NETWO, P1, DOI 10.1109/DSN.2014.18
   Brogi AIA, 2019, P 2019 INT C CLOUD C, P68
   Brogi A, 2017, IEEE INTERNET THINGS, V4, P1185, DOI 10.1109/JIOT.2017.2701408
   Cisco V., 2018, Cisco visual networking index: Forecast and trends, 2017-2022, V1
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deng RL, 2016, IEEE INTERNET THINGS, V3, P1171, DOI 10.1109/JIOT.2016.2565516
   Eismann S, 2019, 2019 IEEE 4TH INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W 2019), P263, DOI 10.1109/FAS-W.2019.00073
   Gavvala SK, 2019, FUTURE GENER COMP SY, V90, P273, DOI 10.1016/j.future.2018.07.062
   Goldsmith Simon F., 2007, P 6 JOINT M EUR SOFT, P395, DOI 10.1145/1287624.1287681
   Gross D., 2009, Fundamentals of Queueing Theory, V4th
   Guerrero C, 2019, J AMB INTEL HUM COMP, V10, P2447, DOI 10.1007/s12652-018-0914-0
   Guestrin C., 2016, KDD16 P 22 ACM, P785, DOI DOI 10.1145/2939672.2939785
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   He JH, 2018, IEEE INTERNET THINGS, V5, P677, DOI 10.1109/JIOT.2017.2724845
   Hong H.-J., 2016, Network Operations and Management Symposium (APNOMS), 2016 18th Asia-Pacific, P1
   Lera I, 2018, IEEE IOT J, V6, P3641
   Liu LQ, 2018, IEEE INTERNET THINGS, V5, P283, DOI 10.1109/JIOT.2017.2780236
   Mahmud R, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3186592
   Martin JP, 2019, INT J COMMUN SYST, V32, DOI 10.1002/dac.3926
   Mirjalili S, 2016, ADV ENG SOFTW, V95, P51, DOI 10.1016/j.advengsoft.2016.01.008
   Natesha BV, 2018, INT CONF UTIL CLOUD, P24, DOI 10.1109/UCC-Companion.2018.00027
   Ni LN, 2017, IEEE INTERNET THINGS, V4, P1216, DOI 10.1109/JIOT.2017.2709814
   Pallewatta S., 2019, P 12 IEEE ACM INT C
   Sharma Y, 2016, J NETW COMPUT APPL, V74, P66, DOI 10.1016/j.jnca.2016.08.010
   Skarlat O, 2017, SERV ORIENTED COMPUT, V11, P427, DOI 10.1007/s11761-017-0219-8
   Tan B., 2018, IEEE T SERV COMPUT
   Thiebaut R, 2019, ENTREPRENEURSHIP DEV, P191
   Tran M.-Q., 2019, WIREL COMMUN MOB COM, V2019, P1, DOI DOI 10.1155/2019/
   Urgaonkar B, 2007, INT J FOUND COMPUT S, V18, P1023, DOI 10.1142/S012905410700511X
   Velasquez K, 2017, ANN TELECOMMUN, V72, P105, DOI 10.1007/s12243-016-0524-9
   Venticinque S, 2019, J AMB INTEL HUM COMP, V10, P1955, DOI 10.1007/s12652-018-0785-4
   Wen Z, 2017, IEEE INTERNET COMPUT, V21, P16, DOI 10.1109/MIC.2017.36
   Yang XS, 2010, STUD COMPUT INTELL, V284, P101
   Zeng DZ, 2016, IEEE T COMPUT, V65, P3702, DOI 10.1109/TC.2016.2536019
   Zhang HQ, 2017, IEEE INTERNET THINGS, V4, P1204, DOI 10.1109/JIOT.2017.2688925
NR 36
TC 15
Z9 15
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2020
VL 50
IS 12
BP 2337
EP 2360
DI 10.1002/spe.2896
EA SEP 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OO7CG
UT WOS:000569390000001
DA 2024-07-18
ER

PT J
AU Gómez, ALP
   Maimó, LF
   Celdrán, AH
   Clemente, FJG
   Pérez, MG
   Pérez, GM
AF Perales Gomez, Angel Luis
   Fernandez Maimo, Lorenzo
   Huertas Celdran, Alberto
   Garcia Clemente, Felix J.
   Gil Perez, Manuel
   Martinez Perez, Gregorio
TI SafeMan: A unified framework to manage cybersecurity and safety in
   manufacturing industry
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE anomaly detection; cybersecurity; deep learning; industrial control
   system; machine learning; safety
ID CHALLENGES
AB Industrial control systems (ICS) are considered cyber-physical systems that join both cyber and physical worlds. Due to their tight interaction, where humans and robots co-work and co-inhabit in the same workspaces and production lines, cyber-attacks targeting ICS can alter production processes and even bypass safety procedures. As an example, these cyber-attacks could interrupt physical industrial processes and cause potential injuries to workers. In this article, we present SafeMan, a unified management framework based on the Edge Computing paradigm that provides high-performance applications for the detection and mitigation of both cyber-attacks and safety threats in industrial scenarios. Three use cases show specific threats in manufacturing as well as the SafeMan actions carried out to detect and mitigate them. In order to validate our proposal, a pool of experiments was performed with Electra, an industrial dataset with normal network traffic and different cyber-attacks by using a given number of Modbus TCP and S7Comm devices. The experiments measured the runtime performance of anomaly detection techniques based on machine learning and deep learning to detect cyber-attacks in control networks. The experimental results show that Neural Networks report the best performance, being able to examine2(17)feature vectors per second over Electra, and therefore demonstrating that it can be used as detection model for SafeMan in real scenarios.
C1 [Perales Gomez, Angel Luis; Fernandez Maimo, Lorenzo; Garcia Clemente, Felix J.] Univ Murcia, Dept Ingn & Tecnol Comp, Murcia, Spain.
   [Huertas Celdran, Alberto] Waterford Inst Technol, Telecommun Software & Syst Grp, Waterford, Ireland.
   [Gil Perez, Manuel; Martinez Perez, Gregorio] Univ Murcia, Dept Ingn Informac & Comunicac, Murcia, Spain.
C3 University of Murcia; South East Technological University (SETU);
   University of Murcia
RP Gómez, ALP (corresponding author), Univ Murcia, Dept Ingn & Tecnol Comp, Murcia, Spain.
EM angelluis.perales@um.es
RI Clemente, Félix Jesús Garcia/AAM-8396-2020; Perez, Gregorio
   Martinez/I-7620-2013
OI Clemente, Félix Jesús Garcia/0000-0001-6181-5033; Perales Gomez, Angel
   Luis/0000-0003-1004-881X; Huertas Celdran, Alberto/0000-0001-7125-1710;
   Gil Perez, Manuel/0000-0002-7768-9665
FU Government of Ireland [GOIPD/2018/466]; Spanish Ministry of Science,
   Innovation and Universities [RTI2018-095855-B-I00]
FX Government of Ireland, Grant/Award Number: GOIPD/2018/466; Spanish
   Ministry of Science, Innovation and Universities, Grant/Award Number:
   RTI2018-095855-B-I00
CR Al-khafajiy M, 2020, J PARALLEL DISTR COM, V137, P1, DOI 10.1016/j.jpdc.2019.10.006
   [Anonymous], 2015, PROC ACM WORKSHOP CP, DOI 10.1145/2732198.2732200
   [Anonymous], 2017, NY TIMES
   [Anonymous], 2017, TECHNICAL REPORT
   [Anonymous], [No title captured]
   Bdiwi M, 2017, CIRP ANN-MANUF TECHN, V66, P453, DOI 10.1016/j.cirp.2017.04.009
   Celdrán AH, 2017, IEEE COMMUN MAG, V55, P108, DOI 10.1109/MCOM.2017.1600117CM
   Cherdantseva Y, 2016, COMPUT SECUR, V56, P1, DOI 10.1016/j.cose.2015.09.009
   Ding DR, 2018, NEUROCOMPUTING, V275, P1674, DOI 10.1016/j.neucom.2017.10.009
   Elnour M, 2020, IEEE ACCESS, V8, P36639, DOI 10.1109/ACCESS.2020.2975066
   Feng C, 2017, I C DEPEND SYS NETWO, P261, DOI 10.1109/DSN.2017.34
   Frost L., 2017, REUTERS
   Gnoni MG, 2020, PROCEDIA MANUF, V42, P511, DOI 10.1016/j.promfg.2020.02.040
   Greenberg A., 2017, REAPER IOT BOTNET HA
   Guiochet J, 2017, ROBOT AUTON SYST, V94, P43, DOI 10.1016/j.robot.2017.04.004
   Celdrán AH, 2019, MOBILE NETW APPL, V24, P657, DOI 10.1007/s11036-016-0783-8
   In H, 2017, IEEE-ASME T MECH, V22, P59, DOI 10.1109/TMECH.2016.2606574
   Jardine W, 2016, CPS-SPC'16: PROCEEDINGS OF THE 2ND ACM WORKSHOP ON CYBER-PHYSICAL SYSTEMS SECURITY & PRIVACY, P23, DOI 10.1145/2994487.2994496
   Khalid A, 2017, P 39 INT MAT C ADV M, P0035
   Khalid A, 2018, COMPUT IND, V97, P132, DOI 10.1016/j.compind.2018.02.009
   Khan ZH, 2018, INNOV FOOD SCI EMERG, V48, P11, DOI 10.1016/j.ifset.2018.05.011
   Koroniotis N, 2019, IEEE ACCESS, V7, P61764, DOI 10.1109/ACCESS.2019.2916717
   Kure HI, 2019, IET CYBER PHYS SYST, V4, P332, DOI 10.1049/iet-cps.2018.5079
   Langner R, 2011, IEEE SECUR PRIV, V9, P49, DOI 10.1109/MSP.2011.67
   Li BC, 2019, IEEE T SIGNAL PROCES, V67, P5922, DOI 10.1109/TSP.2019.2949504
   Li D, 2019, LECT NOTES COMPUT SC, V11730, P703, DOI 10.1007/978-3-030-30490-4_56
   Lien J, 2017, EMBEDDING RADARS ROB
   Liu CL, 2016, IEEE INT CONF ROBOT, P3095, DOI 10.1109/ICRA.2016.7487476
   Lopez F, 2017, IEEE ROBOT AUTOM LET, V2, P1885, DOI 10.1109/LRA.2017.2714135
   Lopez-de-Teruel PE, 2020, FUTURE GENER COMP SY, V107, P692, DOI 10.1016/j.future.2017.09.022
   Lyu XR, 2019, IET CYBER PHYS SYST, V4, P221, DOI 10.1049/iet-cps.2018.5068
   Mohurle S., 2017, International journal of advanced research in computer science, V8, P1938
   Park JW, 2019, NUCL ENG TECHNOL, V51, P138, DOI 10.1016/j.net.2018.09.009
   Paryanto,, 2015, INT J ADV MANUF TECH, V78, P1315, DOI 10.1007/s00170-014-6737-z
   Perales GAL, DATASET CYBERSECURIT
   Gómez ALP, 2019, IEEE ACCESS, V7, P177460, DOI 10.1109/ACCESS.2019.2958284
   Pereira A, 2015, IEEE INT CONF ROBOT, P331, DOI 10.1109/ICRA.2015.7139020
   Riel A, 2017, CIRP ANN-MANUF TECHN, V66, P177, DOI 10.1016/j.cirp.2017.04.037
   Sadeghi AR, 2015, DES AUT CON, DOI 10.1145/2744769.2747942
   Sitton-Candanedo I., 2019, EDGE COMPUTING ARCHI, P121
   US ICS-CERT, 2014, ICSA1009001 US ICS C
   VIGNALI G, 2019, INT ICE CONF ENG
   Yousef KMA, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18051643
   Zhang CM, 2006, IEEE RADIO WIRELESS, P515
   Zhu Bonnie, 2011, Proceedings of the 2011 IEEE International Conference on Internet of Things and 4th IEEE International Conference on Cyber, Physical and Social Computing (iThings/CPSCom 2011), P380, DOI 10.1109/iThings/CPSCom.2011.34
   Zhuang Y, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16050596
NR 46
TC 13
Z9 13
U1 3
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2021
VL 51
IS 3
SI SI
BP 607
EP 627
DI 10.1002/spe.2879
EA AUG 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QH1RQ
UT WOS:000556195900001
DA 2024-07-18
ER

PT J
AU Pattipati, DK
   Nasre, R
   Puligundla, SK
AF Pattipati, Dileep Kumar
   Nasre, Rupesh
   Puligundla, Sreenivasa Kumar
TI OPAL: An extensible framework for ontology-based program analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE program analysis using ontology; program knowledge bases; program
   triples; semantic triples; SPARQL analysis specification
ID ANALYZER
AB The syntactic information of a program can be represented as resource description framework (RDF) triples calledprogram triples. We propose an extensible static analysis framework, called OPAL-Ontology-based Program AnaLysis. The framework enables formal representation of external knowledge, such as usage knowledge of libraries and domain knowledge. Utilizing this knowledge and the program triples, we compute the semantic information, calledstatic traceof the program. It is generated through path-sensitive intraprocedural traversal of the program. We approximate information in case of loops by unrolling them a fixed number of times. The main contribution of the framework is to store the static trace as RDF triples calledsemantic triples. They are described using the Program Analysis ontology proposed in this article. The program triples and the semantic triples are together calledconsolidated program triples. These triples are stored and used to accelerate the execution of client-analyses specified by the end user. In the framework, a client-analysis is specified by a set of conjunctive expressions that use SPARQL (W3C RDF query language) queries. The framework is effective for the client-analyses that warrant sound and approximate information. The effectiveness is assessed first, using two source-code-analyses that require only the program triples, and then 10 intraprocedural path-sensitive analyses that require the consolidated program triples. Using NPB and SPEC 2006 benchmarks, we achieve an improvement in the conciseness of analysis specifications. Also, the execution time using OPAL is competitive to LLVM'sclangfor individual analysis and outperformsclangover a series of analyses because of the reuse of consolidated program triples.
C1 [Pattipati, Dileep Kumar; Nasre, Rupesh; Puligundla, Sreenivasa Kumar] IIT Madras, Comp Sci & Engn, Chennai, Tamil Nadu, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Madras
RP Pattipati, DK (corresponding author), IIT Madras, AIDB Lab, BSB 365, Chennai 600036, Tamil Nadu, India.
EM dileepkp@cse.iitm.ac.in
OI Pattipati, Dileep kumar/0000-0001-9073-8524
CR [Anonymous], 2015, PROC 29 AAAI C ARTIF
   Antoniou G., 2004, Handbook on ontologies, DOI [DOI 10.1007/978-3-540-24750-0_4, 10.1007/978-3-540-24750-0_4]
   Ashburner M, 2000, NAT GENET, V25, P25, DOI 10.1038/75556
   Atzeni Mattia, 2017, 2017 INT SEM WEB C
   Baader F., 2003, DESCRIPTION LOGIC HD
   BAILEY DH, 1991, INT J SUPERCOMPUT AP, V5, P63, DOI 10.1177/109434209100500306
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Bishop B, 2011, SEMANT WEB, V2, P33, DOI 10.3233/SW-2011-0026
   Bizer C, 2009, INT J SEMANT WEB INF, V5, P1, DOI 10.4018/jswis.2009081901
   Blanchet B, 2002, LECT NOTES COMPUT SC, V2566, P85
   Boley H, 2018, RIF BASIC LOGIC DIAL
   Bravenboer M, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P243
   Brickley D., 2004, RDF VOCABULARY DESCR
   Bush WR, 2000, SOFTWARE PRACT EXPER, V30, P775, DOI 10.1002/(SICI)1097-024X(200006)30:7<775::AID-SPE309>3.0.CO;2-H
   Carroll Jeremy J., 2004, P 13 INT WORLD WID W, P74, DOI [10.1145/, DOI 10.1145/1013367.1013381]
   Das M, 2002, ACM SIGPLAN NOTICES, V37, P57, DOI 10.1145/543552.512538
   Dawson S, 1996, ACM SIGPLAN NOTICES, V31, P117, DOI 10.1145/249069.231399
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dean M., 2004, SWRL: a semantic web Rule Language combining OWL and RuleML
   DEVANBU P, 1990, 12TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P249, DOI 10.1109/ICSE.1990.63631
   Devanbu P. T., 1992, International Conference on Software Engineering, P307, DOI 10.1145/143062.143148
   Eberhart A., 2004, P MOD
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ganapathi G, 2011, P WCE, V2011, P3
   Gavrilova S.S. T., 2006, International Journal "Information Theories Applications, V13, P303
   Glimm B, 2014, J AUTOM REASONING, V53, P245, DOI 10.1007/s10817-014-9305-1
   Hajiyev E, 2006, LECT NOTES COMPUT SC, V4067, P2
   Henning J. L., 2006, SIGARCH COMPUT ARCHI, V34, P1, DOI [DOI 10.1145/1186736.1186737, 10.1145/1186736.1186737]
   Horrocks I, 2005, J WEB SEMANT, V3, P23, DOI 10.1016/j.websem.2005.05.003
   Horwitz S., 1995, SIGSOFT Software Engineering Notes, V20, P104, DOI 10.1145/222132.222146
   Malone J, 2014, J BIOMED SEMANT, V5, DOI 10.1186/2041-1480-5-25
   Matheus CJ, 2006, RuleML 2006: Second International Conference on Rules and Rule Markup Languages for the Semantic Web, Proceedings, P67
   Musen Mark A, 2015, AI Matters, V1, P4
   Neumann T, 2010, VLDB J, V19, P91, DOI 10.1007/s00778-009-0165-y
   Nielson F., 1999, Principles of Program Analysis
   NIST, NAT I STAND TECHN SA
   OpenMP Architecture Review-Board, 2013, OPENMP APPL PROGRAM
   Seaborne A., 2008, SPARQL Query Language for RDF
   Seedorf S, 2006, P 2 SWESE HELD 5 INT
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Tenorth M, 2009, 2009 IEEE-RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS, P4261, DOI 10.1109/IROS.2009.5354602
   Tsarkov D, 2006, LECT NOTES ARTIF INT, V4130, P292
   Verbaere M., 2006, 28th International Conference on Software Engineering Proceedings, P172, DOI 10.1145/1134285.1134311
   Verbaere Mathieu., 2007, 22nd ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, P880
   Wang R, 2011, 2011 IET 4TH INTERNATIONAL CONFERENCE ON WIRELESS, MOBILE & MULTIMEDIA NETWORKS (ICWMMN 2011), P321, DOI 10.1049/cp.2011.1015
   Welty CA, 2003, DESCRIPTION LOGIC HD
   Whaley J, 2005, LECT NOTES COMPUT SC, V3780, P97
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Wielemaker Jan, SWI PROLOG SEMANTIC
   Xie YC, 2005, ACM SIGPLAN NOTICES, V40, P351, DOI 10.1145/1047659.1040334
   Zhao Y, 2016, P 30 ECOOP, V56, P26
NR 52
TC 6
Z9 7
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2020
VL 50
IS 8
BP 1425
EP 1462
DI 10.1002/spe.2821
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MG0MA
UT WOS:000545728200005
DA 2024-07-18
ER

PT J
AU Lai, YH
   Chang, YC
   Tsai, CW
   Lin, CH
   Chen, MY
AF Lai, Ying Hsun
   Chang, Yao Chung
   Tsai, Chia Wei
   Lin, Chih Hsun
   Chen, Mu Yen
TI Data fusion analysis for attention-deficit hyperactivity disorder
   emotion recognition with thermal image and Internet of Things devices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE attention-deficit hyperactivity disorder; data fusion; emotion
   recognition
ID CHILDREN
AB Attention-deficit hyperactivity disorder (ADHD) is a symptom of behavioral or emotional problems as these problems affect children's learning and social integration. With the advancements in the Internet of Things (IoTs), emotions can be detected through image and physiological data. However, some critical ADHD children are often accompanied by the inability to control their body and even facial expressions, making emotion recognition technologies difficult to develop successfully. This study aims to predict the emotions of ADHD children and to address their emotional problems with related IoT robotic devices. Data fusion analysis technology for facial expressions was used to combine thermal images and recognition data, while deep reinforcement learning technology was used to periodically stream information for ADHD students, in alignment with intervention strategies that were designed to address behavioral problems.
C1 [Lai, Ying Hsun; Chang, Yao Chung; Tsai, Chia Wei] Natl Taitung Univ, Dept Comp Sci & Informat Engn, Taitung, Taiwan.
   [Lin, Chih Hsun] Taipei Vet Gen Hosp, Taitung Branch, Taitung, Taiwan.
   [Chen, Mu Yen] Natl Taichung Univ Sci & Technol, Dept Informat Management, 129,Sec 3,Sanmin Rd, Taichung 40401, Taiwan.
C3 Taipei Veterans General Hospital; National Taichung University of
   Science & Technology
RP Chen, MY (corresponding author), Natl Taichung Univ Sci & Technol, Dept Informat Management, 129,Sec 3,Sanmin Rd, Taichung 40401, Taiwan.
EM mychen@nutc.edu.tw
RI Tsai, Chia-Wei/HKF-3874-2023; Tsai, Chia-Wei/AAW-6682-2021; Chen,
   Mu-Yen/AAO-6568-2021
OI Tsai, Chia-Wei/0000-0002-8075-6558; lai, Ying-Hsin/0000-0003-0458-6435;
   Chen, Mu-Yen/0000-0002-3945-4363
FU Ministry of Science and Technology of the Republic of China [MOST
   107-2511-H-143-004-, 108-2511-H-143-001-]
FX This study is supported in part by the Ministry of Science and
   Technology of the Republic of China under contract number MOST
   107-2511-H-143-004- and 108-2511-H-143-001-.
CR Anjomshoa F, 2017, IEEE ACCESS, V5, P12199, DOI 10.1109/ACCESS.2017.2719706
   [Anonymous], 2017, ARXIV170204280
   [Anonymous], 2006, Attention-Deficit Hyperactivity Disorder-A Handbook for Diagnosis and Treatment
   Baird III, 1999, REINFORCEMENT LEARNI
   Bellemare MG, 2016, P 13 AAAI C ART INT
   Bikic A, 2015, TRIALS, V16, DOI 10.1186/s13063-015-0975-8
   Brodeur DA, 2001, J ABNORM CHILD PSYCH, V29, P229, DOI 10.1023/A:1010381731658
   Chowdhury GG, 2003, ANNU REV INFORM SCI, V37, P51, DOI 10.1002/aris.1440370103
   CRAWFORD J, 1992, J ASSOC PERS SEVERE, V17, P77, DOI 10.1177/154079699201700202
   Daroczy Gabriella., 2010, Proceedings of the 8th International Conference on Applied Informatics, Eger, Hungary, V1, P61
   Deebak BD, 2020, FUTURE GENER COMP SY, V109, P368, DOI 10.1016/j.future.2020.03.050
   Fettig A, 2015, J POSIT BEHAV INTERV, V17, P170, DOI 10.1177/1098300714564164
   Kahou SE, 2016, J MULTIMODAL USER IN, V10, P99, DOI 10.1007/s12193-015-0195-2
   Kim TH, 2018, ELECTRON LETT, V54, P1326, DOI 10.1049/el.2018.6932
   Kumar GAR, 2017, PROCEEDINGS OF 2017 IEEE INTERNATIONAL CONFERENCE ON SIGNAL PROCESSING AND COMMUNICATION (ICSPC'17), P369, DOI 10.1109/CSPC.2017.8305872
   Mansour R, 2017, RES DEV DISABIL, V60, P52, DOI 10.1016/j.ridd.2016.11.009
   Martínez F, 2016, EDUC TECHNOL SOC, V19, P18
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Posner J, 2005, DEV PSYCHOPATHOL, V17, P715, DOI 10.1017/S0954579405050340
   Richey JA, 2015, J AUTISM DEV DISORD, V45, P3409, DOI 10.1007/s10803-015-2359-z
   Russell JA, 1999, J PERS SOC PSYCHOL, V76, P805, DOI 10.1037/0022-3514.76.5.805
   Salunke VV, 2017, 2017 INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION, CONTROL AND AUTOMATION (ICCUBEA)
   Pham TTD, 2019, IEEE ACCESS, V7, P77816, DOI 10.1109/ACCESS.2019.2921241
   Yeasin M, 2006, IEEE T MULTIMEDIA, V8, P500, DOI 10.1109/TMM.2006.870737
   Yu ZD, 2015, ICMI'15: PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON MULTIMODAL INTERACTION, P435
   Zafar S, 2019, COMPUT COMMUN, V148, P86, DOI 10.1016/j.comcom.2019.09.010
   Zhang SQ, 2019, IEEE ACCESS, V7, P32297, DOI 10.1109/ACCESS.2019.2901521
NR 27
TC 6
Z9 6
U1 5
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2021
VL 51
IS 3
SI SI
BP 595
EP 606
DI 10.1002/spe.2866
EA JUN 2020
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QH1RQ
UT WOS:000543975400001
DA 2024-07-18
ER

PT J
AU Naz, A
   Asif, HM
   Umer, T
   Ayub, S
   Al-Turjman, F
AF Naz, Ayesha
   Asif, Hafiz M.
   Umer, Tariq
   Ayub, Shahid
   Al-Turjman, Fadi
TI Trilateration-based indoor localization engineering technique for
   visible light communication system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE indoor positioning; multiphotodiodes; Newton Raphson method; received
   signal strength; relative positions; time difference of arrival;
   variable phase; visible light communication
ID RATIO
AB This article is aimed at designing positioning system using visible light communication technology by incorporating three different diversity schemes, namely, transmit diversity (TD), receive diversity (RD), and angle diversity. For the TD, multiple transmitters with single receiver (MISO) is used to obtain the target location using frequency division multiplexing (FDM) and variable phase approach. To deploy RD, the proposed system comprises multiple receivers and single transmitter (SIMO). Only one transmitter's absolute coordinates are required to obtain the location coordinates of optical receivers. FDM and time division multiplexing access schemes have been utilized to transmit the unique signals by light-emitting diodes (LEDs). To implement angle diversity, orientation of transmitter and receiver is considered for positioning purposes. Under this environment, there is no constraint for the LEDs to be installed on ceiling; they can be at any point within the room or at different heights. The information regarding spherical coordinates (representing the orientation) of LEDs (single or multiple) is used to determine the coordinates or the orientation of receiver having multiple or single photodiodes, respectively. Under multiple orientations, this system is analyzed with both scenarios, that is, MISO and SIMO.
C1 [Naz, Ayesha; Umer, Tariq] COMSATS Univ Islamabad, Lahore Campus, Lahore, Pakistan.
   [Asif, Hafiz M.] Sultan Qaboos Univ, Dept Elect & Comp Engn, Muscat 123, Oman.
   [Ayub, Shahid] Cranfield Univ, Sch Aerosp Transport & Mfg, Cranfield, Beds, England.
   [Al-Turjman, Fadi] Near East Univ, Res Ctr AI & IoT, Artificial Intelligence Engn Dept, Nicosia, Mersin, Turkey.
C3 COMSATS University Islamabad (CUI); Sultan Qaboos University; Cranfield
   University; Near East University
RP Asif, HM (corresponding author), Sultan Qaboos Univ, Dept Elect & Comp Engn, Muscat 123, Oman.
EM h.asif@squ.edu.om
RI Al-Turjman, Fadi/L-2998-2019; Al-Turjman, Fadi/C-7891-2019; Umer, Dr
   Tariq/AAZ-1887-2020
OI Al-Turjman, Fadi/0000-0001-5418-873X; Al-Turjman,
   Fadi/0000-0001-6375-4123; Umer, Dr Tariq/0000-0002-3333-8142; Ayub,
   Shahid/0000-0002-9601-8429; asif, hafiz/0000-0001-5312-8575
CR Abbas N, 2019, J SENS ACTUAR NETW, V8, DOI 10.3390/jsan8010016
   Ahsan M, 2017, INT J COMMUN SYST, V30, DOI 10.1002/dac.3175
   Al-khafajiy M, 2019, MULTIMED TOOLS APPL, V78, P24681, DOI 10.1007/s11042-018-7134-7
   Al-Turjman F, 2019, SUSTAIN CITIES SOC, V49, DOI 10.1016/j.scs.2019.101608
   Al-Turjman F, 2022, T EMERG TELECOMMUN T, V33, DOI 10.1002/ett.3603
   Alzahrani SM, 2017, 2017 5TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD WORKSHOPS (FICLOUDW) 2017, P88, DOI 10.1109/FiCloudW.2017.94
   Arafa A, 2013, I NAVIG SAT DIV INT, P1020
   Arafa A, 2012, I NAVIG SAT DIV INT, P2450
   Armstrong J, 2013, IEEE COMMUN MAG, V51, P68, DOI 10.1109/MCOM.2013.6685759
   Baker T, 2013, LECT NOTES COMPUTER, V8193
   Baker T, 2013, COMPUT ELECTR ENG, V39, P2400, DOI 10.1016/j.compeleceng.2013.04.019
   Baniukevic A., 2011, 2011 12th IEEE International Conference on Mobile Data Management (MDM 2011), P246, DOI 10.1109/MDM.2011.50
   Deebak D, 2019, IEEE ACCESS, V7, P151203
   Ding JP, 2012, IET OPTOELECTRON, V6, P307, DOI 10.1049/iet-opt.2012.0044
   Do TH, 2013, INT CONF UBIQ FUTUR, P456, DOI 10.1109/ICUFN.2013.6614860
   Fahim M, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18030874
   Ghassemlooy Z, 2015, RAJBHANDARI
   HASSAN NU, 2015, ACM COMPUT SURV, V48, p20:1
   Jiang LS, 2019, PROCEEDINGS OF THE 2019 INTERNATIONAL CONFERENCE ON INTERNET OF THINGS DESIGN AND IMPLEMENTATION (IOTDI '19), P70, DOI 10.1145/3302505.3310070
   Jiao ZZ, 2017, IEEE NETWORK, V31, P115, DOI 10.1109/MNET.2017.1600264
   Jung SY, 2013, IEEE ICCE, P63, DOI 10.1109/ICCE.2013.6486796
   Jung SY, 2012, MICROW OPT TECHN LET, V54, P1622, DOI 10.1002/mop.26880
   Jung SY, 2011, IEEE T CONSUM ELECTR, V57, P1592, DOI 10.1109/TCE.2011.6131130
   Khalid A, 2018, PHOTONIC NETW COMMUN, V35, P97, DOI 10.1007/s11107-017-0722-z
   Khalid A, 2017, PROCEEDINGS OF THE 2017 2ND WORKSHOP ON RECENT TRENDS IN TELECOMMUNICATIONS RESEARCH (RTTR), P54
   Kim HS, 2013, J LIGHTWAVE TECHNOL, V31, P134, DOI 10.1109/JLT.2012.2225826
   Li Y, 2016, INT C COMP COMM ICCC
   Maamar Z, 2019, COGN SYST RES, V56, P233, DOI 10.1016/j.cogsys.2019.04.001
   Nadeem U, 2014, ELECTRON LETT, V50, P828, DOI 10.1049/el.2014.0353
   Naz A, 2018, 2018 IEEE 4TH WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P682, DOI 10.1109/WF-IoT.2018.8355186
   Naz A, 2018, IEEE ACCESS, V6, P7557, DOI 10.1109/ACCESS.2018.2796623
   Ozsoy K, 2013, MICROW OPT TECHN LET, V55, P1091, DOI 10.1002/mop.27520
   Panta K, 2012, ELECTRON LETT, V48, P228, DOI 10.1049/el.2011.3759
   Rahman S, 2011, INT J UNCERTAIN QUAN, V1, P163, DOI 10.1615/IntJUncertaintyQuantification.v1.i2.40
   Saab SS, 2016, IEEE PHOTONICS J, V8, DOI 10.1109/JPHOT.2016.2611441
   Ulusar U, 2018, P IEEE INT C INF SCI
   Waldmann B., 2012, P LOCALIZATION GNSS, P1
   Wang JY, 2011, PROCEEDINGS OF 2011 INTERNATIONAL CONFERENCE ON COMMUNICATION TECHNOLOGY AND APPLICATION, ICCTA2011, P934, DOI 10.1049/cp.2011.0807
   Wang SJ, 2016, TELLUS B, V68, DOI 10.3402/tellusb.v68.26206
   Wang YP, 2013, 2013 IEEE CONSUMER COMMUNICATIONS AND NETWORKING CONFERENCE (CCNC), P837, DOI 10.1109/CCNC.2013.6488558
   Yang SH, 2014, ELECTRON LETT, V50, P49, DOI 10.1049/el.2013.2944
   Yang SH, 2013, ELECTRON LETT, V49, P54, DOI 10.1049/el.2012.3167
   Yang SH, 2014, J LIGHTWAVE TECHNOL, V32, P2480, DOI 10.1109/JLT.2014.2327623
   Yang SH, 2013, IEEE COMMUN LETT, V17, P1834, DOI 10.1109/LCOMM.2013.070913.131120
   Yucel H, 2012, P INT S INISTA
   Zhang WZ, 2014, OPT ENG, V53, DOI 10.1117/1.OE.53.4.045105
NR 46
TC 3
Z9 4
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2021
VL 51
IS 3
SI SI
BP 503
EP 516
DI 10.1002/spe.2823
EA APR 2020
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QH1RQ
UT WOS:000557907400001
DA 2024-07-18
ER

PT J
AU Alsghaier, H
   Akour, M
AF Alsghaier, Hiba
   Akour, Mohammed
TI Software fault prediction using particle swarm algorithm with genetic
   algorithm and support vector machine classifier
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fault prediction; genetic algorithm; machine learning; particle swarm
   algorithm
ID SYSTEM; NUMBER
AB Software fault prediction is a process of developing modules that are used by developers in order to help them to detect faulty classes or faulty modules in early phases of the development life cycle and to determine the modules that need more refactoring in the maintenance phase. Software reliability means the probability of failure has occurred during a period of time, so when we describe a system as not reliable, it means that it contains many errors, and these errors can be accepted in some systems, but it may lead to crucial problems in critical systems like aircraft, space shuttle, and medical systems. Therefore, locating faulty software modules is an essential step because it helps defining the modules that need more refactoring or more testing. In this article, an approach is developed by integrating genetics algorithm (GA) with support vector machine (SVM) classifier and particle swarm algorithm for software fault prediction as a stand though for better software fault prediction technique. The developed approach is applied into 24 datasets (12-NASA MDP and 12-Java open-source projects), where NASA MDP is considered as a large-scale dataset and Java open-source projects are considered as a small-scale dataset. Results indicate that integrating GA with SVM and particle swarm algorithm improves the performance of the software fault prediction process when it is applied into large-scale and small-scale datasets and overcome the limitations in the previous studies.
C1 [Alsghaier, Hiba; Akour, Mohammed] Yarmouk Univ, Dept Informat Syst, Irbid, Jordan.
   [Akour, Mohammed] Al Yamamah Univ, Comp Engn Dept, Riyadh, Saudi Arabia.
C3 Yarmouk University; Al-Yamamah University
RP Akour, M (corresponding author), Al Yamamah Univ, Comp Engn Dept, Riyadh, Saudi Arabia.
EM mohammed.akour@yu.edu.jo
OI Akour, Mohammed/0000-0002-5858-8957
CR Afzal W, 2011, EXPERT SYST APPL, V38, P11984, DOI 10.1016/j.eswa.2011.03.041
   [Anonymous], 2013, ARXIV13036310
   Bashir MB, 2017, IEEE ACCESS, V5, P3657, DOI 10.1109/ACCESS.2017.2678200
   Chandrashekar G, 2014, COMPUT ELECTR ENG, V40, P16, DOI 10.1016/j.compeleceng.2013.11.024
   Chatterjee S, 2017, NEURAL COMPUT APPL, V28, pS1221, DOI 10.1007/s00521-016-2437-y
   Chen Guo-chu, 2005, Information and Control, V34, P318
   Erturk E, 2015, EXPERT SYST APPL, V42, P1872, DOI 10.1016/j.eswa.2014.10.025
   Fazel FS., 2016, B SOC R SCI LIEGE, V85, P187, DOI 10.25518/0037-9565.5275
   Feixiang Li, 2016, International Journal of Wireless and Mobile Computing, V10, P191
   Goh CK, 2010, EUR J OPER RES, V202, P42, DOI 10.1016/j.ejor.2009.05.005
   Gorunescu F, 2011, INTEL SYST REF LIBR, P1, DOI 10.1007/978-3-642-19721-5
   Gray D, 2011, DURH IET C P
   Jones KH, 2005, PROCEEDINGS OF THE 2005 INTELLIGENT SENSORS, SENSOR NETWORKS & INFORMATION PROCESSING CONFERENCE, P1
   Kang D, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1295, DOI 10.1145/3071178.3071263
   Kudjo PK, 2017, INT J COMPUT APPL, V160, P1, DOI DOI 10.5120/IJCA2017912965
   Kumar S, 2017, INDIAN J ECON DEV, V13, P65, DOI 10.5958/2322-0430.2017.00009.9
   Maleki I., 2014, INT J INNOVATION APP, V5, P72
   Milidiu RL, 2007, J BRAZ COMPUT SOC, V13, P39
   Mirjalili S, 2016, ADV ENG SOFTW, V95, P51, DOI 10.1016/j.advengsoft.2016.01.008
   Nickabadi A, 2011, APPL SOFT COMPUT, V11, P3658, DOI 10.1016/j.asoc.2011.01.037
   Niknam T, 2010, APPL ENERG, V87, P327, DOI 10.1016/j.apenergy.2009.05.016
   Onwunalu JE, 2010, COMPUTAT GEOSCI, V14, P183, DOI 10.1007/s10596-009-9142-1
   Puri A., 2014, INT J COMPUTER SCI E, V5, P29
   Purohit GN., 2013, INT J COMPUT APPL, V61, P1
   Raj A, 2017, INT J SCI TECH RES, V6
   Rathore SS, 2015, PROCEDIA COMPUT SCI, V62, P303, DOI 10.1016/j.procs.2015.08.454
   Rathore SS, 2017, EXPERT SYST APPL, V82, P357, DOI 10.1016/j.eswa.2017.04.014
   Rosli M. M., 2011, INT C COMP SOFTW MOD, P71
   Shatnawi Raed, 2017, International Journal of Information Systems and Change Management, V9, P3
   Tewari P. C., 2012, J. Ind. Eng. Int, V8, P1, DOI [10.1186/2251-712X-8-1, DOI 10.1186/2251-712X-8-1]
   Trelea IC, 2003, INFORM PROCESS LETT, V85, P317, DOI 10.1016/S0020-0190(02)00447-7
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Wahono R.S., 2013, International Journal of Software Engineering and Its Applications, V7, P153, DOI DOI 10.14257/IJSEIA.2013.7.5.16
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Zhang D., 2007, ADV MACHINE LEARNING, P52
NR 35
TC 21
Z9 22
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2020
VL 50
IS 4
BP 407
EP 427
DI 10.1002/spe.2784
EA JAN 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS7QQ
UT WOS:000509422800001
DA 2024-07-18
ER

PT J
AU Magableh, B
   Almiani, M
AF Magableh, Basel
   Almiani, Muder
TI A deep recurrent Q network towards self-adapting distributed
   microservice architecture
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deep Q-learning networks; multiagent environment; policy approximation;
   Q-learning algorithms; recurrent Q-learning networks; reinforcement
   learning; self-adaptive architectures; service-oriented architecture
ID NEURAL-NETWORKS; REINFORCEMENT; SYSTEMS; STATE
AB One desired aspect of microservice architecture is the ability to self-adapt its own architecture and behavior in response to changes in the operational environment. To achieve the desired high levels of self-adaptability, this research implements distributed microservice architecture model running a swarm cluster, as informed by the Monitor, Analyze, Plan, and Execute over a shared Knowledge (MAPE-K) model. The proposed architecture employs multiadaptation agents supported by a centralized controller, which can observe the environment and execute a suitable adaptation action. The adaptation planning is managed by a deep recurrent Q-learning network (DRQN). It is argued that such integration between DRQN and Markov decision process (MDP) agents in a MAPE-K model offers distributed microservice architecture with self-adaptability and high levels of availability and scalability. Integrating DRQN into the adaptation process improves the effectiveness of the adaptation and reduces any adaptation risks, including resource overprovisioning and thrashing. The performance of DRQN is evaluated against deep Q-learning and policy gradient algorithms, including (1) a deep Q-learning network (DQN), (2) a dueling DQN (DDQN), (3) a policy gradient neural network, and (4) deep deterministic policy gradient. The DRQN implementation in this paper manages to outperform the aforementioned algorithms in terms of total reward, less adaptation time, lower error rates, plus faster convergence and training time. We strongly believe that DRQN is more suitable for driving the adaptation in distributed services-oriented architecture and offers better performance than other dynamic decision-making algorithms.
C1 [Magableh, Basel] Technol Univ Dublin, Dublin, Ireland.
   [Almiani, Muder] Al Hussein Bin Talal Univ, Maan, Jordan.
C3 Al-Hussein Bin Talal University
RP Magableh, B (corresponding author), Technol Univ, Sch Comp Sci, Dublin, Ireland.; Almiani, M (corresponding author), Al Hussein Bin Talal Univ, Sch Comp Sci, Maan 71111, Jordan.
EM basel.magableh@tudublin.ie; malmiani@my.bridgeport.edu
OI Magableh, Basel/0000-0003-2337-637X; almiani, muder/0000-0003-0021-2364
CR AMOUI M, 2008, P 4 INT C AUT AUT SY
   [Anonymous], 2001, Autonomic computing: IBM's perspective on the state of information technology
   [Anonymous], P INT C MACH LEARN
   Babaoglu O., 2005, Self-star Properties in Complex Information Systems
   Bailey C, 2011, IEEE I SYMP SUST SYS
   BARBACCI M, 2004, SOFTWARE QUALITY ATT
   BELLMAN R, 1957, J MATH MECH, V6, P679, DOI 10.1512/iumj.1957.6.56038
   BENCOMO N, 2010, P 32 ACM IEEE INT C
   Busoniu L, 2008, IEEE T SYST MAN CY C, V38, P156, DOI 10.1109/TSMCC.2007.913919
   Caicedo JC, 2015, IEEE I CONF COMP VIS, P2488, DOI 10.1109/ICCV.2015.286
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   CHENG BHC, 2008, DAGST SEM P
   CHENG SW, 2009, P ICSE WORKSH SOFTW
   CHEUNGFOOWO D, 2007, P 5 INT WORKSH MIDDL
   Chung JY, 2015, PR MACH LEARN RES, V37, P2067
   DAPRATO G, 1995, J FUNCT ANAL, V131, P94, DOI 10.1006/jfan.1995.1084
   DOWLING J, 2004, P 1 ACM SIGSOFT WORK
   Dutreilh X, 2011, PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS (ICAS 2011), P67
   Gupta Janesh K, 2017, Cochrane Database Syst Rev, V5, pCD002006, DOI 10.1002/14651858.CD002006.pub4
   Hausknecht M., 2015, 2015 AAAI FALL S SER, P1
   Hirschfeld R, 2008, J OBJECT TECHNOL, V7, P125, DOI 10.5381/jot.2008.7.3.a4
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   IBM, 2006, IBM White Pap., V36, P34
   JAMSHIDI P, 2016, P 12 INT ACM SIGSOFT
   Jayaraman D, 2016, LECT NOTES COMPUT SC, V9909, P489, DOI 10.1007/978-3-319-46454-1_30
   Kakousis K, 2008, LECT NOTES COMPUT SC, V5331, P657
   KIM D, 2009, P ICSE WORKSH SOFTW
   Kiss T, 2019, FUTURE GENER COMP SY, V94, P937, DOI 10.1016/j.future.2017.09.050
   Lample G, 2017, AAAI CONF ARTIF INTE, P2140
   Lillicrap, 2015, ARXIV150902971, P1
   Lowe R, 2017, ADV NEUR IN, V30
   MEDVIDOVIC N, 1996, P 4 ACM SIGSOFT S FD
   MENASCE DA, 2007, P IEEE INT C WEB SER
   MIKALSEN M, 2006, P 2006 ACM S APPL CO
   Mnih V, 2016, PR MACH LEARN RES, V48
   MONAHAN GE, 1982, MANAGE SCI, V28, P1, DOI 10.1287/mnsc.28.1.1
   Mou LC, 2017, IEEE T GEOSCI REMOTE, V55, P3639, DOI 10.1109/TGRS.2016.2636241
   Murad A, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17112556
   Nair V., 2010, P 27 INT C MACHINE L, P807
   Omidshafiei S, 2017, PR MACH LEARN RES, V70
   ONGARO D, 2014, P USENIX ANN TECHN C
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   PASPALLIS N, 2009, MIDDLEWARE BASED DEV
   Plappert M, 2016, keras-rl
   SALEHIE M, 2005, P 13 IEEE INT WORKSH
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   SAMA M, 2008, P 16 ACM SIGSOFT INT
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Silver David., 2014, Proceedings of the 31st International Conference on International Conference on Machine Learning - Volume 32, ICML'14, pI
   STRANG T., 2004, WORKSHOP ADV CONTEXT
   Sutton R. S., 1998, Adaptive Computation and Machine Learning
   Sutton RS, 2000, ADV NEUR IN, V12, P1057
   Tesauro G, 2007, IEEE INTERNET COMPUT, V11, P22, DOI 10.1109/MIC.2007.21
   van Hasselt H, 2016, AAAI CONF ARTIF INTE, P2094
   van Hasselt H, 2012, ADAPT LEARN OPTIM, V12, P207
   Wai H.-T., 2018, P ADV NEURAL INFORM
   Wang ZY, 2016, PR MACH LEARN RES, V48
   Wei W, 2018, IEEE T SERV COMPUT, V11, P78, DOI 10.1109/TSC.2016.2528246
   WILLIAMS RJ, 1992, MACH LEARN, V8, P229, DOI 10.1007/BF00992696
   Wu T, 2018, LECT NOTES COMPUT SC, V11176, P387, DOI 10.1007/978-3-030-04771-9_28
   Yun S, 2017, PROC CVPR IEEE, P1349, DOI 10.1109/CVPR.2017.148
NR 61
TC 8
Z9 9
U1 1
U2 26
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2020
VL 50
IS 2
BP 116
EP 135
DI 10.1002/spe.2778
EA NOV 2019
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KA5NF
UT WOS:000499643900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Briola, D
   Micucci, D
   Mariani, L
AF Briola, Daniela
   Micucci, Daniela
   Mariani, Leonardo
TI A platform for P2P agent-based collaborative applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agent-based paradigm; diagnosis; distributed multiagent system; JADE;
   MAS; peer-to-peer systems
AB The operational environment can be a valuable source of information about the behavior of software applications and their usage context. Although a single instance of an application has limited evidence of the range of the possible behaviors and situations that might be experienced in the field, the collective knowledge composed by the evidence gathered by the many instances of a same application running in several diverse user environments (eg, a browser) might be an invaluable source of information. This information can be exploited by applications able to autonomously analyze how they behave in the field and adjust their behavior accordingly. Augmenting applications with the capability to collaborate and directly share information about their behavior is challenging because it requires the definition of a fully decentralized and dependable networked infrastructure whose nodes are the user machines. The nodes of the infrastructure must be collaborative, to share information, and autonomous, to exploit the available information to change their behavior, for instance, to better accommodate the needs of the users to prevent known problems. This paper describes the initial results that we obtained with the design and the development of an infrastructure that can enable the execution of collaborative scenarios in a fully decentralized way. Our idea is to combine the agent-based paradigm, which is well suited to design collaborative and autonomous nodes, and the peer-to-peer paradigm, which is well suited to design distributed and dynamic network infrastructures. To demonstrate our idea, we augmented the popular JADE agent-based platform with a software layer that supports both the creation of a fully decentralized peer-to-peer network of JADE platforms and the execution of services within that network, thus enabling JADE multiagent systems (MASs) to behave as peer-to-peer networks. The resulting platform can be used to study the design of collaborative applications running in the field.
C1 [Briola, Daniela; Micucci, Daniela; Mariani, Leonardo] Univ Milano Bicocca, Dept Informat Syst & Commun, Milan, Italy.
C3 University of Milano-Bicocca
RP Briola, D (corresponding author), Univ Milano Bicocca, Dept Informat Syst & Commun, Milan, Italy.
EM daniela.briola@unimib.it
RI MICUCCI, DANIELA/AAB-6066-2020; Briola, Daniela/AAG-5079-2019
OI MICUCCI, DANIELA/0000-0003-1261-2234; Briola,
   Daniela/0000-0003-1994-8929
FU EU H2020; ERC [ERC 646867]
FX EU H2020; ERC Consolidator, Grant/Award Number: ERC 646867
CR Androutsellis-Theotokis S, 2004, ACM COMPUT SURV, V36, P335, DOI 10.1145/1041680.1041681
   [Anonymous], 2007, Developing Multi-Agent Systems with JADE
   Bordini R., 2007, PROGRAMMING MULTIAGE
   Briola D, 2014, P 29 IT C COMP LOG C
   Briola D, 2017, SOFTWARE PRACT EXPER, V47, P1773, DOI 10.1002/spe.2494
   DePaoli F, 2004, IEEE INTERNET COMPUT, V8, P54, DOI 10.1109/MIC.2004.9
   Idreos S, 2004, 3 HELL C ART INT SET, DOI [10.1007/978-3-540-24674-9_4, DOI 10.1007/978-3-540-24674-9_4]
   IDREOS S, 2004, P ACM SIGMOD 04, P933
   Liblit Ben., 2003, P ACM SIGPLAN C PROG
   Mascardi V, 2013, INT C IT ASS ART INT, DOI [10.1007/978-3-319-03524-6_26, DOI 10.1007/978-3-319-03524-6_26]
   Ohmann P, 2016, P IEEE ACM INT C AUT
   Poggi A, 2010, STUD COMPUT INTELL, V324, P93
   Riganelli O, 2017, P 17 INT C RUNT VER
   Riganelli O, 2017, P 12 IEEE ACM INT S
   Sycara K, 2003, AUTON AGENT MULTI-AG, V7, P29, DOI 10.1023/A:1024172719965
   Wang B, 2013, P INT SOFTW PROD LIN
   WOOLDRIDGE M, 1995, KNOWL ENG REV, V10, P115, DOI 10.1017/S0269888900008122
NR 17
TC 6
Z9 7
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2019
VL 49
IS 3
BP 549
EP 558
DI 10.1002/spe.2657
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0HU
UT WOS:000459868900011
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Fornaro, C
   Cafagna, FS
   Osteria, G
   Scotti, V
   Perfetto, F
   Conti, L
AF Fornaro, Claudio
   Cafagna, Francesco Saverio
   Osteria, Giuseppe
   Scotti, Valentina
   Perfetto, Francesco
   Conti, Livio
TI The onboard software of the EUSO-SPB pathfinder experiment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cosmic rays; EUSO; flight software; SPB; stratospheric balloon; UHECR
AB In this paper, the flight software architecture of the EUSO-SPB mission is described. The JEM-EUSO program aims at developing an advanced large space-borne UV telescope designed to detect ultra high energy cosmic rays. In this framework, the EUSO-SPB experiment is the third pathfinder mission of the JEM-EUSO program, the second that has been launched on a stratospheric balloon to test the technological readiness of the detectors and to carry out some preliminary scientific observations. The EUSO-SPB software has a modular structure conceived to control all the instruments and the ancillary subsystems, to acquire data, and to manage data transfer to ground. System programming in C and C++ languages and Bash scripts have been used to implement and run the modules. The software runs on the data processor, an onboard computer that communicates with several payload blocks, the UV sensor, and the synchronization and time tagging board. The control software module controls all the subsystems, provides communication to ground through the NASA telemetry or the Internet, runs the acquisition control and download software, and manages the execution of the acquisition software. The acquisition software module directly operates the subsystems for the data acquisition activity. The acquisition control and download software module runs the acquisition software upon request of the control software and transfers scientific data to ground. The software system performed as expected during the flight on April 2017.
C1 [Fornaro, Claudio; Conti, Livio] Uninettuno Univ, Rome, Italy.
   [Fornaro, Claudio; Conti, Livio] INFN, Sez Roma Tor Vergata, Rome, Italy.
   [Cafagna, Francesco Saverio] INFN, Sez Bari, Bari, Italy.
   [Osteria, Giuseppe; Scotti, Valentina; Perfetto, Francesco] INFN, Sez Napoli, Naples, Italy.
C3 UNINETTUNO; Istituto Nazionale di Fisica Nucleare (INFN); Istituto
   Nazionale di Fisica Nucleare (INFN); Istituto Nazionale di Fisica
   Nucleare (INFN)
RP Fornaro, C (corresponding author), Uninettuno Univ, Rome, Italy.; Fornaro, C (corresponding author), INFN, Sez Roma Tor Vergata, Rome, Italy.
EM c.fornaro@uninettunouniversity.net
RI Osteria, Giuseppe/AAS-2038-2020; Cafagna, Francesco/A-9299-2010; Conti,
   Livio/JVP-0538-2024; Conti, Livio/E-4660-2018; Fornaro,
   Claudio/D-7255-2018; Scotti, Valentina/U-3238-2018; Osteria,
   Giuseppe/ABH-3196-2020
OI Osteria, Giuseppe/0000-0002-9871-8103; Cafagna,
   Francesco/0000-0002-7450-4784; Conti, Livio/0000-0003-2966-2000;
   Fornaro, Claudio/0000-0001-5542-8280; Scotti,
   Valentina/0000-0001-8868-3990; Osteria, Giuseppe/0000-0002-9871-8103
FU Agenzia Spaziale Italiana [2017-8-H.0]
FX Agenzia Spaziale Italiana, Grant/Award Number: 2017-8-H.0 (partial)
CR Abdellaoui G, 2018, J INSTRUM, V13, DOI 10.1088/1748-0221/13/05/P05023
   Adams J.H., 2015, Exp. Astron, V40, P301
   Adams JH Jr, 2015, EXP ASTRON, V40, P3, DOI 10.1007/s10686-015-9482-x
   Adams JH Jr, 2015, EXP ASTRON, V40, P281, DOI 10.1007/s10686-015-9467-9
   Adams JH Jr, 2015, EXP ASTRON, V40, P45, DOI 10.1007/s10686-014-9378-1
   Allen L, 2017, 35 INT COSM RAY C IC
   [Anonymous], 1994, TECHNICAL REPORT
   Barrillon P, 2016, J INSTRUM, V11, DOI 10.1088/1748-0221/11/01/C01075
   Bayer J, 2011, 32 INT COSM RAY C IC
   Bertaina M, 2015, EXP ASTRON, V40, P253, DOI 10.1007/s10686-014-9375-4
   Casolino M, 2015, EXP ASTRON, V40, P19, DOI 10.1007/s10686-014-9418-x
   Ebisuzaki T, 2015, ACTA ASTRONAUT, V112, P102, DOI 10.1016/j.actaastro.2015.03.004
   Kawasaki Y, 2011, AIP CONF PROC, V1367, P201, DOI 10.1063/1.3628745
   LDB support for science groups, 2016, TECHNICAL REPORT
   Medina-Tanco G, 2011, 32 INT COSM RAY C IC
   Nouvellon S, 2014, 13 INT C SPAC OP SPA
   Olinto AV, 2017, POEMMA PROBE EXTREME
   Osteria G, 2017, P 35 INT COSM RAY C
   Painter W, 2017, 35 INT COSM RAY C IC
   Piotrowski LW, 2015, NUCL INSTRUM METH A, V773, P164, DOI 10.1016/j.nima.2014.08.045
   Ricci M, 2018, P 2016 INT C ULTR EN
   Scotti V, 2017, NUCL INSTRUM METH A, V845, P408, DOI 10.1016/j.nima.2016.06.042
   Scotti V, 2013, NUCL INSTRUM METH A, V718, P248, DOI 10.1016/j.nima.2012.10.121
   von Ballmoos P, 2014, ADV SPACE RES, V53, P1544, DOI 10.1016/j.asr.2013.11.049
   Wiencke L, 2017, 35 INT COSM RAY C
   Winstein K, 2012, 2012 USENIX ANN TECH
NR 26
TC 6
Z9 6
U1 2
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2019
VL 49
IS 3
BP 524
EP 539
DI 10.1002/spe.2655
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0HU
UT WOS:000459868900009
DA 2024-07-18
ER

PT J
AU Marijan, D
   Gotlieb, A
   Liaaen, M
AF Marijan, Dusica
   Gotlieb, Arnaud
   Liaaen, Marius
TI A learning algorithm for optimizing continuous integration development
   and testing practice
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE continuous integration; continuous integration testing; highly
   configurable software; highly interleaved test predictive algorithm;
   regression testing; regression trees; test optimization; test redundancy
AB Continuous integration, at its core, includes a set of practices that aim to prevent and reduce the cost of software integration issues by merging working software copies often. Regression testing is considered a good practice in software development with continuous integration, which ensures that code changes are not negatively affecting software functionality. As, nowadays, software development is carried out iteratively, with small code increments continuously developed and regression tested, it is of critical importance that continuous regression testing is time efficient. However, in practice, regression testing is often long lasting and faces scalability problems as software grows larger or as software changes are made more frequently. One contributing factor to these issues is test redundancy, which causes the same software functionality being tested multiple times across a test suite. In large-scale software, especially highly configurable software, redundancy in continuous regression testing can significantly grow the size of test suites and negatively affect the cost effectiveness of continuous integration. This paper presents a practical learning algorithm for optimizing continuous integration testing by reducing ineffective test redundancy in regression suites. The novelty of the algorithm lies in learning and predicting the fault-detection effectiveness of continuous integration tests using historical test records and combining this information with coverage-based redundancy metrics. The goal is to identify ineffective redundancy, which is maximally reduced in the resulting regression test suite, thus reducing test time and improving the performance of continuous integration. We apply and evaluate the algorithm in two industrial projects of continuous integration. The results show that the proposed algorithm can improve the efficiency of continuous integration practice in terms of decreasing test execution time by 38% on average compared to the industry practice of our case study and by 40% on average compared to the retest-all approach. The results further demonstrate no significant reduction in fault-detection effectiveness of continuous regression testing. This suggests that the proposed algorithm contributes to the state of the practice in the continuous integration development and testing of highly configurable systems.
C1 [Marijan, Dusica; Gotlieb, Arnaud] Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
   [Liaaen, Marius] Cisco Syst, Lysaker, Norway.
RP Marijan, D (corresponding author), Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM dusica@simula.no
FU Research Council of Norway
FX The Research Council of Norway, Grant/Award Number: Certus SFI
CR Andrews A, 2015, P 2015 IEEE INT C SO
   [Anonymous], P 31 INT C SOFTW ENG
   [Anonymous], 1998, P INT C SOFTW MAINT
   [Anonymous], P 22 ACM SIGSOFT INT
   Baller H, 2014, 2014 IEEE 7 INT C SO
   Bell KZ, 2005, 2005 INT C INF COMM
   Celik A, 2017, P 2017 11 JOINT M FD
   Chen Y, 2002, P 2002 C CTR ADV STU
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Engström E, 2013, INFORM SOFTWARE TECH, V55, P581, DOI 10.1016/j.infsof.2012.04.009
   Fraser G, 2007, LECT NOTES COMPUT SC, V4422, P291
   Gligoric M, 2015, P 37 INT C SOFTW ENG, V2
   Gligoric M, 2015, P 2015 INT S SOFTW T
   Gokhale SS, 1997, P 3 ISSAT INT C REL
   Gotlieb A, 2014, P 2014 INT S SOFTW T
   Gupta R., 1996, Software Testing, Verification and Reliability, V6, P83, DOI 10.1002/(SICI)1099-1689(199606)6:2<83::AID-STVR112>3.0.CO;2-9
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Heimdahl MPE, 2004, P 19 IEEE INT C AUT
   Hervieu A, 2016, INFORM SOFTWARE TECH, V71, P129, DOI 10.1016/j.infsof.2015.11.007
   Herzig K, 2015, P 37 INT C SOFTW ENG, V1
   Jeffrey D, 2005, P 21 IEEE INT C SOFT
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Kang K. C., 1990, Technical Report
   Kim J.-M., 2002, P 24 INT C SOFTW ENG
   Koochakzadeh N, 2010, ADV SOFT ENG
   Koochakzadeh N, 2009, 2009 INT C SOFTW TES
   Korel B, 2002, P INT C SOFTW MAINT
   Legunsen O, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P583, DOI 10.1145/295029.2950361
   Li H, 2010, EXPERT SYST APPL, V37, P5895, DOI 10.1016/j.eswa.2010.02.016
   Mao C, 2005, P 12 AS PAC SOFTW EN
   Marijan D, 2018, P 40 INT C SOFTW ENG
   Marijan D, 2013, 2013 IEEE INT S SOFT
   Marijan D, 2016, 2016 IEEE INT C SOFT
   Masri W, 2007, IEEE T SOFTWARE ENG, V33, P454, DOI 10.1109/TSE.2007.1020
   Offutt J., 1995, P 12 INT C TEST COMP
   Orso A, 2003, P 9 EUR SOFTW ENG C
   Qu X, 2011, P 2011 IEEE 22 INT S
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Ren X, 2004, P 19 ANN ACM SIGPLAN
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Sajeev ASM, 2003, P 10 AS PAC SOFTW EN
   Schwartz A, 2016, J SYST SOFTWARE, V115, P61, DOI 10.1016/j.jss.2016.01.018
   SELBY RW, 1988, IEEE T SOFTWARE ENG, V14, P1743, DOI 10.1109/32.9061
   Spieker H, 2017, P 26 ACM SIGSOFT INT
   Witten IH, 2011, MOR KAUF D, P1
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Zhang L, 2018, 2018 IEEE ACM 40 INT
   Zhang L, 2011, P 2011 IEEE 22 INT S
NR 50
TC 27
Z9 27
U1 2
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2019
VL 49
IS 2
SI SI
BP 192
EP 213
DI 10.1002/spe.2661
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0GK
UT WOS:000459864300004
DA 2024-07-18
ER

PT J
AU Steinhauser, A
   Tuma, P
AF Steinhauser, Antonin
   Tuma, Petr
TI DjangoChecker: Applying extended taint tracking and server side parsing
   for detection of context-sensitive XSS flaws
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE context-sensitive XSS; security; web application
AB Cross-site scripting (XSS) flaws are a class of security flaws that permit the injection of malicious code into a web application. In simple situations, these flaws can be caused by missing input sanitizations. Sometimes, however, all application inputs are sanitized, but the sanitizations are not appropriate for the browser contexts of the sanitized values. Using an incorrect sanitizer can make the application look protected, when it is in fact vulnerable as if no sanitization was used, creating a context-sensitive XSS flaw. To discover context-sensitive XSS flaws, we introduce DjangoChecker. DjangoChecker combines extended dynamic taint tracking with a model browser for context analysis. We demonstrate the practical application of DjangoChecker on eight mature web applications based on Django, discovering previously unknown flaws in seven of the eight applications, including highly severe flaws that allow arbitrary JavaScript execution in the seven flawed applications.
C1 [Steinhauser, Antonin; Tuma, Petr] Charles Univ Prague, Fac Math & Phys, Dept Distributed & Dependable Syst, Prague, Czech Republic.
C3 Charles University Prague
RP Steinhauser, A (corresponding author), Charles Univ Prague, Fac Math & Phys, Malostranske Namesti 25, CR-18000 Prague, Czech Republic.
EM steinhauser@d3s.mff.cuni.cz
RI Steinhauser, Antonín/J-4758-2017; Tuma, Petr/A-3094-2009
OI Tuma, Petr/0000-0002-7035-2322; Steinhauser, Antonin/0000-0003-0301-1840
FU Charles University [SVV 260451]; TA CR project TRUST 4.0 [TF04000064]
FX Charles University institutional funding, Grant/Award Number: SVV
   260451; TA CR project TRUST 4.0, Grant/Award Number: TF04000064
CR [Anonymous], 2006 IEEE S SEC PRIV
   [Anonymous], 2012, DYNAMIC TAINT TRACKI
   [Anonymous], 2006, JAVASCRIPT THE DEFIN
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   BALZAROTTI D, 2008, IEEE S SEC PRIV OAKL
   Bisht P, 2008, INT C DET INTR MALW
   Conti JJ, 2012, P 15 NORD C INF SEC
   Gruss D, 2016, P 13 INT C DET INTR
   Gupta BB, 2017, INT J CLOUD APPL COM, V7, P1, DOI 10.4018/IJCAC.2017010101
   Haldar V., 2005, 21 ANN COMP SEC APPL 21 ANN COMP SEC APPL
   Heyes G, 2015, XSS HIDDEN INPUT FIE
   Hooimeijer P, 2011, P 20 USENIX C SEC SA
   Huang W., 2015, P 2015 INT S SOFTWAR, P106, DOI 10.1145/2771783.2771803
   Huang Y-W, 2004, P 13 INT C WORLD WID
   Kocher P., 2018, P IEEE S SEC PRIV SP
   Lam MS, 2008, P 2008 ACM SIGPLAN S
   Lipp M, 2017, EUR S RES COMP SEC O
   Livshits B, 2007, P 2007 WORKSH PROGR
   Livshits VB, 2013, P C USENIX SEC S 201
   Luo Z, 2011, JOINT WORKSH THEOR S
   Parameshwaran I, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P946, DOI 10.1145/2786805.2803191
   Prokhorenko V, 2016, J NETW COMPUT APPL, V60, P95, DOI 10.1016/j.jnca.2015.11.017
   Robertson W., 2009, P 18 C USENIX SEC S
   Samuel M, 2011, P 18 ACM C COMP COMM, DOI [10. 1145/2046775, DOI 10.1145/2046775]
   Saxena P, 2011, P 18 ACM C COMP COMM
   Steinhauser A, 2016, P 2016 ACM WORKSH PR
   Stock B, 2014, 23 USENIX SEC S 2014
   Symantec, 2016, INT SEC THREAT REP 2
   Tripp O, 2009, ACM SIGPLAN NOTICES, V44, P87, DOI 10.1145/1543135.1542486
   Vogt P, 2007, INT S NETW DISTR SYS
   Wassermann G., 2008, ACM IEEE 30 INT C SO
   Weinberger J, 2011, P 16 EUR C RES COMP
NR 32
TC 4
Z9 4
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2019
VL 49
IS 1
BP 130
EP 148
DI 10.1002/spe.2649
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC7ZF
UT WOS:000452020000006
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Cappellari, P
   Roantree, M
   Chun, SA
AF Cappellari, Paolo
   Roantree, Mark
   Chun, Soon Ae
TI Optimizing data stream processing for large-scale applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE continuous queries; data stream processing; distributed systems;
   optimization
ID LANGUAGE; MODEL
AB Stream processing systems are designed to analyze data arriving in real time and using continuous queries and respond when a specific event or sequence of events are detected. An important aspect of these systems is Streaming Analytics, which facilitates statistical calculations on continuous data within the stream. These systems must be designed to handle high volumes of data, be scalable, and accommodate a multitude of long-lived concurrently running analytics. The challenges involved in the development of stream processing include on-the-fly transformation of data streams to match the query needs of users and the ability to model stream transformations to detect overlaps and possibilities for optimizations and to specify a methodology to deliver optimizations. In particular, this work focuses on exposing data stream application internals in order to detect reusable parts and then consolidate applications to optimize computational resource usage. The Streaming Data Analytics Model presented in this paper adopts a declarative approach that enables processing and manipulation of data streams in a simple manner while facilitating powerful optimizations necessary for managing high volumes of streaming data in real time. An evaluation is provided to demonstrate in both theoretical and quantitative aspects the high performance offered by our approach.
C1 [Cappellari, Paolo; Chun, Soon Ae] CUNY, New York, NY 10017 USA.
   [Roantree, Mark] Dublin City Univ, Sch Comp, Insight Ctr Data Analyt, Dublin, Ireland.
C3 City University of New York (CUNY) System; Dublin City University
RP Cappellari, P (corresponding author), CUNY, New York, NY 10017 USA.
EM paolo.cappellari@csi.cuny.edu
RI Chun, Soon Ae/AAG-8315-2020
OI Chun, Soon Ae/0000-0001-9360-4679; Roantree, Mark/0000-0002-1329-2570
FU Cross Commerce Media, Inc. [RF-7M617-00-01]; National Science Foundation
   [CNS-0958379, CNS-0855217, ACI-1126113, CNS-1624503]; City University of
   New York High Performance Computing Center at the College of Staten
   Island
FX Cross Commerce Media, Inc., Grant/Award Number: RF-7M617-00-01; National
   Science Foundation, Grant/Award Number: CNS-0958379, CNS-0855217,
   ACI-1126113 and CNS-1624503; City University of New York High
   Performance Computing Center at the College of Staten Island
CR Abadi DJ, 2003, VLDB J, V12, P120, DOI 10.1007/s00778-003-0095-z
   Abadi DJ, 2005, 2 BIRNN C INN DAT SY
   AHMAD Y, 2004, P 30 INT C VER LARG
   Akidau T, 2013, PROC VLDB ENDOW, V6, P1033, DOI 10.14778/2536222.2536229
   [Anonymous], 2005, SIGMOD, DOI DOI 10.1145/1066157.1066193
   [Anonymous], 2003, P 3 ACM SIGCOMM INTE, DOI [DOI 10.1145/948205.948227, 10.1145/948205.948227]
   [Anonymous], 2015, INFOSPHERE STREAMS
   [Anonymous], 2015, The Streaming APIs
   [Anonymous], 2018, KIN
   [Anonymous], 2018, STREAM AN
   Arasu A, 2006, VLDB J, V15, P121, DOI 10.1007/s00778-004-0147-z
   Balazinska M, 2008, ACM T DATABASE SYST, V33, DOI 10.1145/1331904.1331907
   Bernardo Nicoletti., 2017, The Future of FinTech - Integrating Finance and Technology in Financial Services
   Cappellari P, 2016, P 5 INT C DAT MAN TE
   Cappellari P, 2017, COMM COM INF SC, V737, P1, DOI 10.1007/978-3-319-62911-7_1
   CARNEY D, 2002, P 28 INT C VER LARG
   CHANDRASEKARAN S, 2002, P 28 INT C VER LARG
   Chandrasekaran Sirish, 2003, ACM SIGMOD INT C MAN, P668, DOI 10.1145/872757.872857
   Cherniack M., 2003, CIDR, P257
   Duller M, 2011, P 12 INT MIDDL C MID
   Gedik B., 2007, P 33 INT C VER LARG
   Gedik B, 2014, SOFTWARE PRACT EXPER, V44, P1105, DOI 10.1002/spe.2194
   Gedik B, 2012, SOFTWARE PRACT EXPER, V42, P1363, DOI 10.1002/spe.1139
   Gehrke J, 2001, SIGMOD REC, V30, P13, DOI 10.1145/376284.375665
   Kalyvianaki E, 2011, P 2011 IEEE 27 INT C, DOI [10. 1109/ICDE. 2011. 5767851, DOI 10.1109/ICDE.2011.5767851]
   Kang J, 2003, PROC INT CONF DATA, P341, DOI 10.1109/ICDE.2003.1260804
   Lim Harold, 2013, P INT C MAN DAT SIGM, P1069
   Madden S, 2002, FOURTH IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P49, DOI 10.1109/MCSA.2002.1017485
   MADDEN S, 2002, P 2002 ACM SIGMOD IN
   Maier D, 2005, LECT NOTES COMPUT SC, V3363, P37
   Melnik S, 2004, LECT NOTES COMPUTER, V2967, DOI [10.1007/b97859, DOI 10.1007/B97859]
   Mistry H, 2001, SIGMOD REC, V30, P307, DOI 10.1145/376284.375703
   Motwani R, 2003, 1 BIENN C INN DAT SY
   Pietzuch P.R., 2006, P IEEE ICDE 2006
   Roy P., 2000, SIGMOD Record, V29, P249, DOI 10.1145/335191.335419
   SELLIS TK, 1988, ACM T DATABASE SYST, V13, P23, DOI 10.1145/42201.42203
   Teubner J., 2011, Proceedings of the ACM SIGMOD International Conference on Management of Data, P625, DOI [10.1145/1989323.1989389, DOI 10.1145/1989323.1989389]
   Toshniwa A, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P147, DOI 10.1145/2588555.2595641
   Zaharia M., 2012, 4 USENIX WORKSH HOT
   Zhou Y, 2008, 9 ACM IFIP USENIX IN
NR 40
TC 4
Z9 4
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2018
VL 48
IS 9
BP 1607
EP 1641
DI 10.1002/spe.2596
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GP5RZ
UT WOS:000440932300005
DA 2024-07-18
ER

PT J
AU Daoud, H
   Dagenais, MR
AF Daoud, Houssem
   Dagenais, Michel R.
TI Recovering disk storage metrics from low-level trace events
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE block device; performance metrics; storage; tracing
AB Block devices such as magnetic disks are nonvolatile data storage devices that transfer data in fixed-size chunks. They are the main nonvolatile memory that holds the file system, and they are also used in virtual memory mechanisms such swapping and page fault handling. Investigating storage performance issues requires a full insight into the operating system internals. Kernel tracing offers an efficient mechanism to gather information about the storage subsystem at runtime. Still, the tracing output is often huge and difficult to analyze manually. In this paper, we introduce a framework to compute meaningful storage performance metrics from low-level trace events generated by LTTng. A stateful approach is used to model the state of the storage subsystem. Efficient data structures and algorithms are proposed to offer a reasonable response time, allowing the user to navigate throughout the trace and to retrieve metrics from any time range. The framework includes a visualization system that provides different graphical views that represent the collected information in a convenient way. These views are synchronized together, forming a comprehensive perspective that makes storage performance investigation a much more comfortable task. Different use cases are presented to show the usefulness of the framework in real-world applications.
C1 [Daoud, Houssem; Dagenais, Michel R.] Ecole Polytech Montreal, 2900 Blvd Edouard Montpetit, Montreal, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Daoud, H (corresponding author), Ecole Polytech Montreal, 2900 Blvd Edouard Montpetit, Montreal, PQ H3T 1J4, Canada.
EM houssem.daoud@polymtl.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Prompt; Ericsson; EfficiOS
FX Natural Sciences and Engineering Research Council of Canada (NSERC);
   Prompt; Ericsson; EfficiOS
CR [Anonymous], 2016, TAU PERFORMANCE SYST
   [Anonymous], 2016, NTR
   [Anonymous], 2018, COMMON TRACE FORMAT
   [Anonymous], 2011, DTRACE DYNAMIC TRACI
   Desnoyers Mathieu, 2012, Operating Systems Review, V46, P65
   Desnoyers M., 2009, LIN FDN COLL SUMM 20
   Domingo D, 2010, RED HAT ENTERPRISE L
   Eigler FC, 2006, P OTT LIN S CIT
   EZZATI-JIVAN N., 2012, Advances in Software Engineering, V2012, P6
   Fagan SE, 1998, DR DOBBS J, V23, P38
   Goldshtein S, 2012, PRO NET PERFORMANCE, P7
   Gregg B, 2011, DTRACE PID PROVIDER
   Gregg B, 2016, RADIX TREE
   Gregg B, 2014, STRACE WOW MUCH SYSC
   Gregg B., 2013, SYSTEMS PERFORMANCE, V1st, DOI DOI 10.5555/2568162
   Gregg B, 2010, COMMUN ACM, V53, P48, DOI 10.1145/1785414.1785435
   Iyer S., 2001, Operating Systems Review, V35, P117, DOI 10.1145/502059.502046
   Kopytov Alexey., 2012, SYSBENCH MANUAL
   Krishnakumar R., 2005, Linux Journal, V2005, P11
   Love Robert, 2010, Linux Kernel Development
   Lumb CR, 2000, P 4 C S OP SYST DES
   Mason C, 2016, SEEKWATCHER
   Matni G.N., 2011, The Open Cybernetics and Systemics Journal, V5, P45
   Montplaisir A, 2013, LECT NOTES COMPUT SC, V8174, P219, DOI 10.1007/978-3-642-40787-1_13
   Montplaisir-Goncalves A, 2013, 2013 INT C SOC COMP
   Pratt S, 2004, P LIN S OTT CAN, V2
   Seltzer M, 1990, P WINT 1990 USENIX T
   Tarasov Vasily, 2011, P HOTOS 13 13 USENIX
   Toupin D, 2011, IEEE SOFTWARE, V28, P87, DOI 10.1109/MS.2011.20
   Traeger Avishay, 2008, ACM Transaction on Storage, V4, DOI 10.1145/1367829.1367831
   Waly H, 2011, 2011 24 CAN C EL COM
   Worthington BL, 1994, P 1994 ACM SIGMETRIC
NR 32
TC 5
Z9 6
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2018
VL 48
IS 5
BP 1019
EP 1041
DI 10.1002/spe.2566
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC4BJ
UT WOS:000429727600002
DA 2024-07-18
ER

PT J
AU Do, Q
   Martini, B
   Choo, KKR
AF Do, Quang
   Martini, Ben
   Choo, Kim-Kwang Raymond
TI Is the data on your wearable device secure? An Android Wear smartwatch
   case study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Android Wear; Cloud of Things security; smartwatch; wearable
   technologies
AB The increasing convergence of wearable technologies and cloud services in applications, such as health care, could result in new attack vectors for the Cloud of Things', which could in turn be exploited to exfiltrate sensitive user data. In this paper, we analyze the types of sensitive user data that may be present on a wearable device and develop a method to demonstrate that they can be exfiltrated by an adversary. To undertake this study, we select the Android Wear smartwatch operating system as a case study and, specifically, the Samsung Gear Live smartwatch. We present a technique that allows an adversary to exfiltrate data from smartwatches. Using this technique, we determine that the smartwatch stores a relatively large amount of sensitive user data, including SMS messages, contact information, and biomedical data, and does not effectively protect this user data from physical exfiltration. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Do, Quang; Martini, Ben; Choo, Kim-Kwang Raymond] Univ South Australia, Informat Assurance Res Grp, Adelaide, SA, Australia.
C3 University of South Australia
RP Choo, KKR (corresponding author), Univ South Australia, GPO Box 2471,Adelaide Internal Mail Code MLK 06, Adelaide, SA 5001, Australia.
EM raymond.choo@fulbrightmail.org
RI Choo, Kim-Kwang Raymond/A-3634-2009
OI Choo, Kim-Kwang Raymond/0000-0001-9208-5336
CR [Anonymous], ALMOST EVERY MAJOR C
   [Anonymous], SHARING WHATS OUR SL
   [Anonymous], ANDROID USERS FREEDO
   [Anonymous], WEARABLE PLAIN TEXT
   [Anonymous], GOOGLE GLASS IS IT T
   [Anonymous], GEAR LIVE STOCK FIRM
   Bouhenguel R, 2008, 2008 INTERNATIONAL SYMPOSIUM ON HIGH CAPACITY OPTICAL NETWORKS AND ENABLING TECHNOLOGIES, P168
   Dey S., 2014, P NETW DISTR SYST SE, P1, DOI [DOI 10.1109/PCCC.2014.7017041, DOI 10.14722/NDSS.2014.23059]
   Do Q, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0138449
   Do Q, 2015, COMPUT SECUR, V48, P74, DOI 10.1016/j.cose.2014.10.016
   Hager CT, 2003, IEEE WCNC, P1825
   Martin T, 2000, FOURTH INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS, DIGEST OF PAPERS, P43, DOI 10.1109/ISWC.2000.888463
   Michalevsky Y, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P1053
   Pasluosta CF, 2015, IEEE J BIOMED HEALTH, V19, P1873, DOI 10.1109/JBHI.2015.2461555
   Sandhya S, 2012, P 2012 INT C COMPUTI, P1
   Thorp EO, 1998, SECOND INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS - DIGEST OF PAPERS, P4, DOI 10.1109/ISWC.1998.729523
   Wei J, 2014, IEEE CONSUM ELECTR M, V3, P53, DOI 10.1109/MCE.2014.2317895
NR 17
TC 48
Z9 53
U1 1
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2017
VL 47
IS 3
SI SI
BP 391
EP 403
DI 10.1002/spe.2414
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL9RK
UT WOS:000394957500005
DA 2024-07-18
ER

PT J
AU Zhao, JQ
   Xue, CL
   Tao, XL
   Zhang, SG
   Tao, J
AF Zhao, Jiaqi
   Xue, Changlong
   Tao, Xinlin
   Zhang, Shugong
   Tao, Jie
TI Using adaptive resource allocation to implement an elastic MapReduce
   framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive resource management; elastic computing; cluster computing; big
   data; Hadoop MapReduce framework
ID CLOUD; CORE
AB Today, we are observing a transition of science paradigms from the computational science to data-intensive science. With the exponential increase of input and intermediate data, more applications are developed using the MapReduce programming model, which is regarded as an appropriate programming model for analysing large data sets. A MapReduce framework runs its applications on a cluster, where the computing capacity allocated to the applications is limited and may not fill their runtime resource demand. In this case, the Map/Reduce tasks have to wait in a queues, and the applications suffer from a poor performance. This work develops an autonomic resource manager within the Hadoop MapReduce framework. The manager is capable of getting aware of the overloading or under-loading situations with the resources allocated to its user community. For the former, it takes an action of requesting more resources from, for example, the batch system of a High Performance Computing (HPC) cluster or Computing Clouds and integrates the additional resources, in case of acquisition, into the Hadoop MapReduce runtime. For the latter, the manager gives the free resources back to its source. We extended the existing Hadoop MapReduce resource manager to implement the proposed strategy and validated the concept on an HPC cluster with standard benchmark applications. Experimental results show a significant performance gain, for example, an up to 45% improvement in execution time for running multiple applications. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Zhao, Jiaqi; Zhang, Shugong] Jilin Univ, Sch Math, Changchun 130012, Peoples R China.
   [Zhao, Jiaqi] Changchun Univ Technol, Sch Basic Sci, Changchun 130012, Peoples R China.
   [Xue, Changlong] Jilin Prov High Class Highway Construct Bur, Changchun 130033, Peoples R China.
   [Tao, Xinlin] Nankai Univ, Dept Math Stat, Tianjin 300071, Peoples R China.
   [Tao, Jie] Karlsruhe Inst Technol, Steinbuch Ctr Comp, Karlsruhe, Germany.
C3 Jilin University; Changchun University of Technology; Nankai University;
   Helmholtz Association; Karlsruhe Institute of Technology
RP Tao, J (corresponding author), Karlsruhe Inst Technol, Steinbuch Ctr Comp, Karlsruhe, Germany.
EM taojie66@gmail.com
CR Ahmad F., 2012, TECHNICAL REPORT
   [Anonymous], 2009, Hadoop: The definitive guide
   Chen D, 2015, IEEE T PARALL DISTR, V26, P847, DOI 10.1109/TPDS.2014.2311805
   Chen D, 2015, IEEE T COMPUT, V64, P707, DOI 10.1109/TC.2013.2295806
   Chen D, 2013, MOBILE NETW APPL, V18, P651, DOI 10.1007/s11036-013-0456-9
   Chen D, 2011, COMPUT SCI ENG, V13, P42, DOI 10.1109/MCSE.2011.20
   Costa F., 2011, 2011 IEEE International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum, P1855, DOI 10.1109/IPDPS.2011.345
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dou Adam, 2010, Proceedings of the 3rd international conference on pervasive technologies related to assistive environments p, P32, DOI DOI 10.1145/1839294.1839332
   Gentzsch W, 2001, FIRST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P35, DOI 10.1109/CCGRID.2001.923173
   He BS, 2008, PACT'08: PROCEEDINGS OF THE SEVENTEENTH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P260, DOI 10.1145/1454115.1454152
   Hey T., 2009, Microsoft Research
   Huan Liu, 2011, 2011 Proceedings of 11th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2011), P464, DOI 10.1109/CCGrid.2011.25
   Ibrahim S, 2009, HPDC'09: 18TH ACM INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, P65
   Liu ZH, 2015, PROCEEDINGS OF THE 2015 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM), P18, DOI 10.1109/INM.2015.7140272
   Qi L, 2015, LECT NOTES ARTIF INT, V9403, P651, DOI 10.1007/978-3-319-25159-2_59
   Rajic H, 2015, DISTR RES MAN APPL A
   Ranger C, 2007, INT S HIGH PERF COMP, P13
   Shan Y, 2010, FPGA 10, P93
   Shvachko K., 2010, 2010 IEEE 26th Symposium on Mass Storage Systems and Technologies (MSST), P1
   Zhang WF, 2013, CONCURR COMP-PRACT E, V25, P1798, DOI 10.1002/cpe.2966
   Zhao JQ, 2016, COMPUTING, V98, P55, DOI 10.1007/s00607-014-0390-0
   Zhao JQ, 2014, J COMPUT SYST SCI, V80, P994, DOI 10.1016/j.jcss.2014.02.006
NR 23
TC 1
Z9 1
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2017
VL 47
IS 3
SI SI
BP 349
EP 360
DI 10.1002/spe.2398
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL9RK
UT WOS:000394957500002
DA 2024-07-18
ER

PT J
AU Iribarne, L
   Asensio, JA
   Padilla, N
   Criado, J
AF Iribarne, Luis
   Asensio, Jose-Andres
   Padilla, Nicolas
   Criado, Javier
TI Modeling Big data-based systems through ontological trading
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE information systems; trading services; ontologies; model-driven
   engineering (MDE); ontology-driven engineering (ODE); multi-agent
   systems
ID UML
AB One of the great challenges the information society faces is dealing with the huge amount of information generated and handled daily on the Internet. Today, progress in Big data proposals attempt to solve this problem, but there are certain limitations to information search and retrieval due basically to the large volumes handled, the heterogeneity of the information, and its dispersion among a multitude of sources. In this article, a formal framework is defined to facilitate the design and development of an environmental management information system, which works with a heterogeneous and large amount of data. Nevertheless, this framework can be applied to other information systems that work with Big data, because it does not depend on the type of data and can be utilized in other domains. The framework is based on an ontological web-trading model (OntoTrader), which follows model-driven engineering and ontology-driven engineering guidelines to separate the system architecture from its implementation. The proposal is accompanied by a case study, SOLERES-KRS, an environmental knowledge representation system designed and developed using software agents and multi-agent systems. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Iribarne, Luis; Asensio, Jose-Andres; Padilla, Nicolas; Criado, Javier] Univ Almeria, Dept Informat, Appl Comp Grp, Almeria, Spain.
C3 Universidad de Almeria
RP Iribarne, L (corresponding author), Univ Almeria, Dept Informat, Appl Comp Grp, Almeria, Spain.
EM luis.iribarne@ual.es
RI Iribarne, Luis/A-2811-2008; Padilla, Nicolas/K-3523-2017; Criado,
   Javier/K-1723-2017
OI Iribarne, Luis/0000-0003-1815-4721; Criado, Javier/0000-0002-8035-5260;
   Asensio Cortes, Jose Andres/0000-0001-7930-5891; Padilla Soriano,
   Nicolas/0000-0002-8851-6751
FU EU ERDF; Spanish Ministry of Economy and Competitiveness (MINECO)
   [TIN2013-41576-R]; Andalusian Regional Government (Spain) [P10-TIC-6114]
FX This work was funded by the EU ERDF and the Spanish Ministry of Economy
   and Competitiveness (MINECO) under Project TIN2013-41576-R and the
   Andalusian Regional Government (Spain) under Project P10-TIC-6114
   (ENIA).
CR An Y, 2007, FOURTH INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY, VOL 4, PROCEEDINGS, P608, DOI 10.1109/FSKD.2007.344
   Asensio JA, 2008, ICE-B 2008: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON E-BUSINESS, P259
   [Anonymous], ORBACUS TRAD ORBACUS
   [Anonymous], P GEOINF 2007 GEOSP
   [Anonymous], 2006, WUHAN UNIV J NAT SCI
   [Anonymous], 2012, INFORM SYSTEMS E LEA
   [Anonymous], 2007, GEOGR MARK LANG GML
   [Anonymous], 2004, WEB INFORM SYSTEMS
   [Anonymous], P 2 INT JOINT C AUT
   [Anonymous], P 5 AGILE C MALL SPA
   [Anonymous], 2004, ONTOMET ONTOLOGY MET
   [Anonymous], 2003, KI KUNSTLICHE INTELL, DOI DOI 10.1016/J.AEI.2005.11.003
   [Anonymous], INTRO BIG DATA CHALL
   [Anonymous], COMPUTING SCI ENG
   [Anonymous], P WORKSH INT INF INT
   [Anonymous], INF AG SYST
   [Anonymous], OPENFUSION TRAD SERV
   [Anonymous], INF TECHN OP DISTR P
   [Anonymous], GEOINT STRUCT IMPL P
   [Anonymous], 8 INT WWW C WWW8 TOR
   [Anonymous], 2004, P 10 EC GI GIS WORKS
   [Anonymous], 2003, ETHAN
   [Anonymous], 1997, TUTORIAL ODP TRADING
   [Anonymous], ACEORB
   [Anonymous], WEB GIS HYDR MOD OP
   [Anonymous], 2010, KNOWLEDGE MANAGEMENT
   Asensio JA, 2011, LECT NOTES COMPUT SC, V7046, P180
   Bakshi K, 2012, AEROSP CONF PROC
   Beitz A., 1994, Proceedings. First International Workshop on Services in Distributed and Networked Environments (Cat. No.94TH0627-0), P42, DOI 10.1109/SDNE.1994.337779
   Brilhante V, 2004, LECT NOTES ARTIF INT, V3171, P144
   Ceccaroni L, 2004, ENVIRON MODELL SOFTW, V19, P785, DOI 10.1016/j.envsoft.2003.03.006
   Craske G., 1999, Proceedings of the International Symposium on Distributed Objects and Applications, P230, DOI 10.1109/DOA.1999.794035
   Criado J, 2010, ADV INTEL SOFT COMPU, V71, P321
   Cushing JB, 2013, COMPUT SCI ENG, V15, P4, DOI 10.1109/MCSE.2013.102
   Di Lecce V, 2004, 2004 IEEE INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MEASUREMENT SYSTEMS AND APPLICATIONS, P45, DOI 10.1109/CIMSA.2004.1397228
   Djuric D, 2005, LECT NOTES COMPUT SC, V3599, P204
   Falkovych K, 2003, FR ART INT, V95, P92
   Gasevic D., 2004, 13-th international World Wide Web conference (WWW 2004), P488, DOI [DOI 10.1145/1013367.1013539, 10.1145/ 1013367.1013539]
   Huang MJ, 2008, 2008 PROCEEDINGS OF INFORMATION TECHNOLOGY AND ENVIRONMENTAL SYSTEM SCIENCES: ITESS 2008, VOL 3, P417
   Iribarne Luis, 2011, International Journal of Knowledge Society Research, V2, P61, DOI 10.4018/jksr.2011070106
   Iribarne L, 2010, ICAART 2010: PROCEEDINGS OF THE 2ND INTERNATIONAL CONFERENCE ON AGENTS AND ARTIFICIAL INTELLIGENCE, VOL 2: AGENTS, P268
   Iribarne L, 2008, COMM COM INF SC, V19, P320
   Iribarne L, 2014, SCI WORLD J, DOI 10.1155/2014/560296
   Iribarne L, 2010, INFORM SYST MANAGE, V27, P207, DOI 10.1080/10580530.2010.493816
   Kogut P, 2002, KNOWL ENG REV, V17, P61, DOI 10.1017/S0269888902000358
   Kune R, 2016, SOFTWARE PRACT EXPER, V46, P79, DOI 10.1002/spe.2374
   Kutvonen L, 1996, DISTRIBUTED PLATFORMS, P314
   Lamparter S., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1679, DOI 10.1145/1141277.1141674
   Madden S, 2012, IEEE INTERNET COMPUT, V16, P4, DOI 10.1109/MIC.2012.50
   MERZ M, 1994, INT CON DISTR COMP S, P450, DOI 10.1109/ICDCS.1994.302452
   Muller-Jones K., 1995, Open Distributed Processing Experiences with Distributed Environments. Proceedings of the Third IFIP TC 6/WG 6.1 International Conference on Open Distributed Processing, P476
   Quilitz B, 2008, LECT NOTES COMPUT SC, V5021, P524
   Shen J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P562, DOI 10.1109/ASWEC.2008.5
   Sheth A, 2014, PROC INT CONF DATA, P2
   Song J, 2007, DCABES 2007 PROCEEDINGS, VOLS I AND II, P1029
   Tripathi A, 2008, COMPUT GEOSCI-UK, V34, P1022, DOI 10.1016/j.cageo.2007.08.009
   Tsai WT, 2007, IEEE INTERNATIONAL CONFERENCE ON SERVICE-ORIENTED COMPUTING AND APPLICATIONS, PROCEEDINGS, P39, DOI 10.1109/SOCA.2007.35
   World Wide Web Consortium (W3C), 2004, OWL WEB ONTOLOGY LAN
NR 58
TC 2
Z9 2
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1561
EP 1596
DI 10.1002/spe.2488
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500006
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Tijero, H
   Rivas, M
   Ortega, D
AF Perez Tijero, Hector
   Aldea Rivas, Mario
   Medina Ortega, Daniel
TI Multiprocessor platform for partitioned real-time systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE partitioned systems; multiprocessors; real-time; operating systems;
   communications; POSIX; Ada
AB Two current trends in the real-time and embedded systems are the multiprocessor architectures and the partitioning technology that enables several isolated applications with different criticality levels to share the same computer. This paper presents a real-time platform for multiprocessor and partitioned systems, in which communication requirements are also considered. The paper describes the adaptation of MaRTE OS (a monoprocessor real-time operating system) to the XtratuM hypervisor for the multiprocessor Intel x86 architecture. This adaptation makes two contributions to ease the development process of future mixed-criticality applications: firstly, it integrates the hypervisor technology and the fully partitioned scheduling in a multiprocessor environment, and secondly, it provides the basis to interconnect partitioned and non-partitioned applications via a homogeneous communication subsystem. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Perez Tijero, Hector; Aldea Rivas, Mario] Univ Cantabria, Software Engn & Real Time Grp, Santander, Spain.
   [Medina Ortega, Daniel] Equipos Nucl SA, Unidad Automat & Robot, Maliano, Spain.
C3 Universidad de Cantabria
RP Tijero, H (corresponding author), Univ Cantabria, Software Engn & Real Time Grp, Santander, Spain.
EM perezh@unican.es
RI Tijero, Hector Perez/AAH-3192-2020
OI Tijero, Hector Perez/0000-0001-6231-461X; Aldea-Rivas,
   Mario/0000-0002-0430-5472
FU Spanish Government; FEDER [TIN2011-28567-C03-02, TIN2014-56158-C4-2-P]
FX This work has been funded in part by the Spanish Government and FEDER
   funds under grants number TIN2011-28567-C03-02 (HIPARTES) and
   TIN2014-56158-C4-2-P (M2C2).
CR Aguiar A, 2012, SOFTWARE PRACT EXPER, V42, P917, DOI 10.1002/spe.1156
   Aldea Rivas Mario, 2013, Ada User Journal, V34, P49
   [Anonymous], LNCS
   [Anonymous], ACM INT C EMB SOFTW
   [Anonymous], P 6 EMB REAL TIM SOF
   [Anonymous], LNCS
   [Anonymous], P INT C EMB REAL TIM
   [Anonymous], 2009, P 11 REAL TIM LIN WO
   [Anonymous], REDUCED CERTIFICATIO
   [Anonymous], OPEN COST EFFECTIVE
   [Anonymous], P DATA SYST AER C DA
   [Anonymous], IEEE T PARA IN PRESS
   [Anonymous], LNCS
   [Anonymous], ARINC SPEC
   [Anonymous], P 10 INT FOR EMB MPS
   [Anonymous], MULTICORE EXECUTION
   [Anonymous], TECHN STAND FUT AIRB
   [Anonymous], P 26 DIG AV SYST C T
   [Anonymous], P 12 REAL TIM LIN WO
   [Anonymous], 2014, ACM SIGBED REV
   [Anonymous], P 14 REAL TIM LIN WO
   [Anonymous], MULTICORES PARTITION
   [Anonymous], TIME PREDICTABLE MUL
   [Anonymous], REAL TIM EMB SYST WO
   [Anonymous], DISTRIBUTED REAL TIM
   [Anonymous], DESIGN EMBEDDED MIXE
   [Anonymous], P 14 REAL TIM LIN WO
   [Anonymous], P 27 EUROMICRO C REA
   [Anonymous], 1003132003 POSIX IEE
   [Anonymous], SOFTWARE PRACTICE EX
   [Anonymous], LNCS
   [Anonymous], OPEN VEHICULAR SECUR
   [Anonymous], CERTIFICATION REAL T
   [Anonymous], 86522012E ISOIEC
   [Anonymous], LNCS
   [Anonymous], P 2 INT WORKSH MIX C
   Baruah S, 2014, REAL-TIME SYST, V50, P142, DOI 10.1007/s11241-013-9184-2
   Baumann C, 2009, LECT NOTES COMPUT SC, V5775, P187, DOI 10.1007/978-3-642-04468-7_16
   Davis RI, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978814
   Dubey A, 2012, AEROSP CONF PROC
   Dubey A, 2011, SOFTWARE PRACT EXPER, V41, P1517, DOI 10.1002/spe.1083
   Eklund U, 2014, J SYST SOFTWARE, V92, P128, DOI 10.1016/j.jss.2014.01.009
   Ghaisas S, 2010, LECT NOTES COMPUT SC, V6462, P159
   Gracioli G, 2013, REAL-TIME SYST, V49, P669, DOI 10.1007/s11241-013-9183-3
   Gu Z., 2012, J. Softw. Eng. Appl, V5, P277, DOI [10.4236/jsea.2012.54033, DOI 10.4236/JSEA.2012.54033]
   Mancuso R, 2015, EUROMICRO, P174, DOI 10.1109/ECRTS.2015.23
   Mistry J, 2014, SOFTWARE PRACT EXPER, V44, P1129, DOI 10.1002/spe.2188
   Sommer Stephan., 2013, 2013 IEEE INT ELECT, P1
NR 48
TC 3
Z9 3
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2017
VL 47
IS 1
BP 61
EP 78
DI 10.1002/spe.2404
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI5DO
UT WOS:000392514400003
DA 2024-07-18
ER

PT J
AU Mahmud, MR
   Afrin, M
   Razzaque, MA
   Hassan, MM
   Alelaiwi, A
   Alrubaian, M
AF Mahmud, Md. Redowan
   Afrin, Mahbuba
   Razzaque, Md. Abdur
   Hassan, Mohammad Mehedi
   Alelaiwi, Abdulhameed
   Alrubaian, Majed
TI Maximizing quality of experience through context-aware mobile
   application scheduling in cloudlet infrastructure
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE context-aware scheduling; mobile application software; mobile cloud
   computing; quality of experience
ID ALGORITHM
AB Application software execution requests, from mobile devices to cloud service providers, are often heterogeneous in terms of device, network, and application runtime contexts. These heterogeneous contexts include the remaining battery level of a mobile device, network signal strength it receives and quality-of-service (QoS) requirement of an application software submitted from that device. Scheduling such application software execution requests (from many mobile devices) on competent virtual machines to enhance user quality of experience (QoE) is a multi-constrained optimization problem. However, existing solutions in the literature either address utility maximization problem for service providers or optimize the application QoS levels, bypassing device-level and network-level contextual information. In this paper, a multi-objective nonlinear programming solution to the context-aware application software scheduling problem has been developed, namely, QoE and context-aware scheduling (QCASH) method, which minimizes the application execution times (i.e., maximizes the QoE) and maximizes the application execution success rate. To the best of our knowledge, QCASH is the first work in this domain that inscribes the optimal scheduling problem for mobile application software execution requests with three-dimensional context parameters. In QCASH, the context priority of each application is measured by applying min-max normalization and multiple linear regression models on three context parametersbattery level, network signal strength, and application QoS. Experimental results, found from simulation runs on CloudSim toolkit, demonstrate that the QCASH outperforms the state-of-the-art works well across the success rate, waiting time, and QoE. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Mahmud, Md. Redowan; Afrin, Mahbuba; Razzaque, Md. Abdur] Univ Dhaka, Dept Comp Sci & Engn, Green Networking Res GNR Grp, Dhaka, Bangladesh.
   [Hassan, Mohammad Mehedi; Alelaiwi, Abdulhameed; Alrubaian, Majed] King Saud Univ, Coll Comp & Informat Sci, Chair Pervas & Mobile Comp, Riyadh 11543, Saudi Arabia.
C3 University of Dhaka; King Saud University
RP Razzaque, MA (corresponding author), Univ Dhaka, Fac Engn & Technol, Dept Comp Sci & Engn, Dhaka 1000, Bangladesh.
EM razzaque@du.ac.bd
RI Alelaiwi, Abdulhameed A/D-8729-2015; Afrin, Mahbuba/AAQ-1846-2020;
   Mahmud, Redowan/AAG-2219-2021; Hassan, Mohammad/GZA-7507-2022; Hassan,
   Mohammad/KDM-9524-2024; Hassan, Mohammad Mehedi/D-4946-2016
OI Afrin, Mahbuba/0000-0001-9145-171X; Mahmud, Redowan/0000-0003-0785-0457;
   Hassan, Mohammad/0000-0002-1712-0004; Razzaque, Md.
   Abdur/0000-0002-2542-1923
FU Deanship of Scientific Research at King Saud University [RGP-VPP-281]
FX The authors would like to extend their sincere appreciation to the
   Deanship of Scientific Research at King Saud University for its funding
   of this research through the research group project no. RGP-VPP-281.
CR Adhikary T, 2013, 2013 IEEE 15TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS & 2013 IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND UBIQUITOUS COMPUTING (HPCC_EUC), P1715, DOI 10.1109/HPCC.and.EUC.2013.244
   [Anonymous], ADV MULTIVARIATE STA
   [Anonymous], CONTEXT INFORM RETRI
   [Anonymous], TECHNOLOGIES CONTEXT
   [Anonymous], TECHNOLOGIES PROTOCO
   [Anonymous], SOFT COMPUTING
   Assunçao MD, 2012, INT CONF UTIL CLOUD, P255, DOI 10.1109/UCC.2012.33
   Beloglazov Anton, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P577, DOI 10.1109/CCGRID.2010.45
   Berg F, 2014, IEEE INT CONF MO, P76, DOI 10.1109/MobServ.2014.20
   Bose A., 2007, 2007 6 INT C INFORM, P1
   Broch J., 1998, MobiCom'98. Proceedings of Fourth Annual ACM/IEEE International Conference on Mobile Computing and Networking, P85, DOI 10.1145/288235.288256
   Brooks P, 2010, IEEE NETWORK, V24, P8, DOI 10.1109/MNET.2010.5430138
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Cardonha C, 2013, LECT NOTES COMPUT SC, V8274, P550, DOI 10.1007/978-3-642-45005-1_45
   Ching-Chi Lin, 2011, Proceedings of the 2011 IEEE 4th International Conference on Utility and Cloud Computing (UCC 2011), P81, DOI 10.1109/UCC.2011.21
   Dakshayini D. M., 2011, INT J COMPUTER APPL, V32, P23
   Das AK, 2013, 2013 INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN)
   Devaraju A., 2007, Mobility '07, P39
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Fernando N, 2013, FUTURE GENER COMP SY, V29, P84, DOI 10.1016/j.future.2012.05.023
   Ghanbari S, 2012, PROCEDIA ENGINEER, V50, P778, DOI 10.1016/j.proeng.2012.10.086
   Hai Zhong, 2010, Proceedings of the Fifth ChinaGrid Annual Conference (ChinaGrid 2010), P124, DOI 10.1109/ChinaGrid.2010.37
   Hyun Jung La, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P466, DOI 10.1109/CLOUD.2010.78
   Jararweh Y, 2013, 2013 IEEE NINTH INTERNATIONAL CONFERENCE ON MOBILE AD-HOC AND SENSOR NETWORKS (MSN 2013), P373, DOI 10.1109/MSN.2013.75
   Lin WW, 2014, SOFTWARE PRACT EXPER, V44, P163, DOI 10.1002/spe.2163
   Musumba George Wamamu., 2013, International Journal of Machine Learning and Applications, V2, P5, DOI [10.4102/ijmla.v2i1.5, DOI 10.4102/IJMLA.V2I1.5]
   Sarneva M., 2001, Problemy na Tekhnicheskata Kibernetika i Robotikata, V52, P26
   Schmohl Robert, 2008, Fourth International Conference on Wireless and Mobile Communications. ICWMC 2008, P118, DOI 10.1109/ICWMC.2008.59
   Sheikhalishahi M, 2015, SOFTWARE PRACT EXPER, V45, P161, DOI 10.1002/spe.2223
   Smelcerz Katarzyna, 2013, Journal of Telecommunications and Information Technology, V4, P51
   Tolga Soyata., 2014, Proceedings of Communi- cation Infrastructures for Cloud Computing, P175
   Wu XN, 2013, PROCEDIA COMPUT SCI, V17, P1162, DOI 10.1016/j.procs.2013.05.148
   Xiufen Fu, 2010, Proceedings 2010 5th International Conference on Pervasive Computing and Applications (ICPCA 2010), P277, DOI 10.1109/ICPCA.2010.5704112
   Zhu CS, 2014, INT CONF CLOUD COMP, P62, DOI 10.1109/CloudCom.2014.106
NR 34
TC 23
Z9 25
U1 0
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2016
VL 46
IS 11
BP 1525
EP 1545
DI 10.1002/spe.2392
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DZ8VK
UT WOS:000386150000005
DA 2024-07-18
ER

PT J
AU Chen, RH
   Shen, ZY
   Ma, CL
   Shao, ZL
   Guan, Y
AF Chen, Renhai
   Shen, Zhaoyan
   Ma, Chenlin
   Shao, Zili
   Guan, Yong
TI NVMRA: utilizing NVM to improve the random write operations for
   NAND-flash-based mobile devices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile devices; applications; random write operations; I/O behaviors;
   NVMRA; flash memory; NVM
ID STORAGE-SYSTEMS; FILE-SYSTEM; MEMORY; AWARE; DESIGN; ARCHITECTURE;
   PERFORMANCE; FRAMEWORK; AREA; IMPLEMENTATION
AB NAND flash memory has become the major storage media in mobile devices, such as smartphones. However, the random write operations of NAND flash memory heavily affect the I/O performance, thus seriously degrading the application performance in mobile devices. The main reason for slow random write operations is the out-of-place update feature of NAND flash memory. Newly emerged non-volatile memory, such as phase-change memory, spin transfer torque, supports in-place updates and presents much better I/O performance than that of flash memory. All these good features make non-volatile memory (NVM) as a promising solution to improve the random write performance for NAND flash memory. In this paper, we propose a non-volatile memory for random access (NVMRA) scheme to utilize NVM to improve the I/O performance in mobile devices. NVMRA exploits the I/O behaviors of applications to improve the random write performance for each application. Based on different I/O behaviors, such as random write-dominant I/O behavior, NVMRA adopts different storing decisions. The scheme is evaluated on a real Android 4.2 platform. The experimental results show that the proposed scheme can effectively improve the I/O performance and reduce the I/O energy consumption for mobile devices. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Chen, Renhai; Shen, Zhaoyan; Ma, Chenlin; Shao, Zili] Hong Kong Polytech Univ, Dept Comp, Embedded Syst & CPS Lab, Kowloon, Hong Kong, Peoples R China.
   [Guan, Yong] Capital Normal Univ, Coll Comp & Informat Management, Beijing, Peoples R China.
C3 Hong Kong Polytechnic University; Capital Normal University
RP Shao, ZL (corresponding author), Hong Kong Polytech Univ, Dept Comp, Embedded Syst & CPS Lab, Kowloon, Hong Kong, Peoples R China.
EM cszlshao@comp.polyu.edu.hk
RI Shao, Zili/AAX-3339-2020; Shen, Zhaoyan/T-3711-2019
OI Shao, Zili/0000-0002-2173-2847; 
FU Hong Kong Special Administrative Region, China [GRF 152138/14E, GRF
   15222315/15E]; National Natural Science Foundation of China [61272103,
   61373049, 61309004]; National 863 Program [2013AA01 3202]; Research Fund
   for the Doctoral Program of Higher Education of China, Chongqing
   [20130191120030, cstc2012ggC40005, cstc2013jcyjA40025]; Fundamental
   Research Funds for the Central Universities [CDJZR14185 501]; Chongqing
   University [2012T0006]; Hong Kong Polytechnic University [4-ZZD7,
   G-YK24, G-YM10, G-YN36]; Beijing Advanced Innovation Center for Imaging
   Technology
FX The work described in this paper is partially supported by the grants
   from the Hong Kong Special Administrative Region, China (GRF 152138/14E
   and GRF 15222315/15E), National Natural Science Foundation of China
   (Project 61272103, 61373049 and 61309004), National 863 Program 2013AA01
   3202, Research Fund for the Doctoral Program of Higher Education of
   China (20130191120030), Chongqing cstc2012ggC40005 and
   cstc2013jcyjA40025, Fundamental Research Funds for the Central
   Universities (CDJZR14185 501) and Chongqing University (2012T0006), and
   the Hong Kong Polytechnic University (4-ZZD7,G-YK24, G-YM10 and G-YN36),
   and Beijing Advanced Innovation Center for Imaging Technology.
CR Andrus J, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P173
   [Anonymous], 2015, INT J HYDROGEN ENERG
   [Anonymous], SOFTWARE PRACTICE EX
   [Anonymous], 10 EUR C COMP SYST
   [Anonymous], 2008, COMP AID DES 2008 IC
   [Anonymous], P 52 ANN DES AUT C D
   [Anonymous], COMPUTING
   [Anonymous], 2014, ACM SIGBED REV
   [Anonymous], 2014, MATH PROB ENG, DOI DOI 10.1145/2593069.2593172
   [Anonymous], P 9 IEEE ACM IFIP IN
   [Anonymous], 2010, 2010 IEEE 16 INT S H, DOI DOI 10.1109/HPCA.2010.5416650
   [Anonymous], 2011 48 ACM EDAC IEE
   [Anonymous], 2010, P LIN S JUL
   [Anonymous], P 51 ANN DES AUT C D
   [Anonymous], P 51 ANN DES AUT C D
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Barr Ken, 2010, Operating Systems Review, V44, P124, DOI 10.1145/1899928.1899945
   Boukhobza J, 2014, COMPUTERS, V3, P36, DOI 10.3390/computers3010036
   Chang HS, 2015, ACM T DES AUTOMAT EL, V20, DOI 10.1145/2699831
   Chang YH, 2013, IEEE T COMPUT, V62, P2503, DOI 10.1109/TC.2012.131
   Chang YH, 2012, ACM T EMBED COMPUT S, V11, DOI 10.1145/2146417.2146426
   Chen R., 2014, PES GEN M C EXP 2014, P1
   Chen RH, 2015, ASIA S PACIF DES AUT, P340, DOI 10.1109/ASPDAC.2015.7059028
   Chen RH, 2015, IEEE T COMPUT, V64, P1729, DOI 10.1109/TC.2014.2329680
   Dastjerdi AV, 2015, SOFTWARE PRACT EXPER, V45, P197, DOI 10.1002/spe.2288
   Dvinsky A, 2015, SOFTWARE PRACT EXPER, V45, P1429, DOI 10.1002/spe.2277
   Fan Z, 2014, INT CONF NANO MICRO, P6, DOI 10.1109/NEMS.2014.6908748
   Fu CC, 2014, I SYMPOS LOW POWER E, P75, DOI 10.1145/2627369.2627616
   Grozev N, 2014, SOFTWARE PRACT EXPER, V44, P369, DOI 10.1002/spe.2168
   Guo J, 2013, DES AUT TEST EUROPE, P859
   Hu JT, 2010, DES AUT CON, P350
   Huang M, 2015, ASIA S PACIF DES AUT, P334, DOI 10.1109/ASPDAC.2015.7059027
   Huang M, 2014, SENSORS-BASEL, V14, P18851, DOI 10.3390/s141018851
   Hung SH, 2015, SOFTWARE PRACT EXPER, V45, P1087, DOI 10.1002/spe.2265
   Jia ZP, 2015, ACM T EMBED COMPUT S, V14, DOI 10.1145/2629650
   Jiang L, 2014, CONF PROC INT SYMP C, P397, DOI 10.1109/ISCA.2014.6853194
   Jingtong Hu, 2010, 2010 IEEE 8th Symposium on Application Specific Processors (SASP 2010), P101, DOI 10.1109/SASP.2010.5521139
   Kim H, 2008, P USENIX C FILE STOR, P1
   Kim H, 2012, ACM T STORAGE, V8, DOI 10.1145/2385603.2385607
   Kim JM, 2012, ADV INTEL SOFT COMPU, V133, P667
   Lee E, 2015, IEEE T COMPUT, V64, P1349, DOI 10.1109/TC.2014.2329674
   Lee K, 2014, I SYMPOS LOW POWER E, P131, DOI [10.1145/2627369.2631641, 10.5729/abf.vol1.131]
   Li HH, 2015, DES AUT TEST EUROPE, P7
   Li QG, 2013, ACM SIGPLAN NOTICES, V48, P101, DOI 10.1145/2499369.2465564
   Lin WW, 2014, SOFTWARE PRACT EXPER, V44, P163, DOI 10.1002/spe.2163
   Lu YY, 2015, IEEE T COMPUT, V64, P2819, DOI 10.1109/TC.2015.2389828
   Ma KS, 2015, INT S HIGH PERF COMP, P526, DOI 10.1109/HPCA.2015.7056060
   Mao M., 2014, Design Automation Conference (DAC), 2014 51st ACM/EDAC/IEEE, P1
   Mesnier M, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P57
   Mohamed N, 2015, SOFTWARE PRACT EXPER, V45, P343, DOI 10.1002/spe.2235
   Namba K, 2015, IEEE T COMPUT, V64, P2092, DOI 10.1109/TC.2014.2346182
   Olivier P, 2013, 2013 11TH INTERNATIONAL SYMPOSIUM ON PROGRAMMING AND SYSTEMS (ISPS), P143, DOI 10.1109/ISPS.2013.6581480
   Oshin TO, 2015, IEEE T COMPUT, V64, P1680, DOI 10.1109/TC.2014.2339846
   Ranjan R, 2014, SOFTWARE PRACT EXPER, V44, P771, DOI 10.1002/spe.2266
   Scott MJ, 2013, IEEE POWER ENERG CON, P1, DOI 10.1109/PECI.2013.6506025
   Shao ZL, 2012, 2012 IEEE COMPUTER SOCIETY ANNUAL SYMPOSIUM ON VLSI (ISVLSI), P398, DOI 10.1109/ISVLSI.2012.81
   Tsao CW, 2015, IEEE T COMPUT, V64, P3444, DOI 10.1109/TC.2015.2409850
   Wang CW, 2012, IEEE ASME INT C ADV, P1, DOI 10.1109/AIM.2012.6265897
   Wang CD, 2012, DES AUT CON, P235
   Wang JT, 2015, IEEE T COMPUT, V64, P925, DOI 10.1109/TC.2014.2308213
   Wang TZ, 2015, ACM T EMBED COMPUT S, V14, DOI 10.1145/2697394
   Wang Y, 2014, IEEE T COMPUT AID D, V33, P1623, DOI 10.1109/TCAD.2014.2347929
   Wang YQ, 2012, DES AUT TEST EUROPE, P1519
   Wang YQ, 2014, IEEE T VLSI SYST, V22, P1491, DOI 10.1109/TVLSI.2013.2275740
   Wu PL, 2009, DES AUT TEST EUROPE, P393
   Xue C. J., 2011, 2011 IEEE/ACM/IFIP International Conference on Hardware/Software Codesign and System Synthesis (CODES+ISSS), P325
   Yao DZ, 2014, FUTURE GENER COMP SY, V39, P44, DOI 10.1016/j.future.2013.12.032
   Yiqun Wang, 2012, ESSCIRC 2012 - 38th European Solid State Circuits Conference, P149, DOI 10.1109/ESSCIRC.2012.6341281
   Zhang C, 2015, ASIA S PACIF DES AUT, P100, DOI 10.1109/ASPDAC.2015.7058988
   Zhang C, 2015, 2015 ACM/IEEE 42ND ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA), P694, DOI 10.1145/2749469.2750388
   Zhang DQ, 2015, IEEE T COMPUT, V64, P452, DOI 10.1109/TC.2013.223
   Zhang Q, 2015, ACM T DES AUTOMAT EL, V20, DOI 10.1145/2746236
   Zhong K, 2014, I SYMPOS LOW POWER E, P81, DOI 10.1145/2627369.2627647
   Zhong K, 2014, 2014 INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT), DOI 10.1145/2656045.2656049
   Zhu CS, 2015, IEEE T COMPUT, V64, P1844, DOI 10.1109/TC.2014.2349524
   Zou DQ, 2013, FUTURE GENER COMP SY, V29, P2092, DOI 10.1016/j.future.2012.12.020
NR 76
TC 2
Z9 2
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2016
VL 46
IS 9
BP 1263
EP 1284
DI 10.1002/spe.2378
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DS8KO
UT WOS:000381032300006
DA 2024-07-18
ER

PT J
AU Richard, A
   Nguyen, L
   Shipton, P
   Kent, KB
   Bierbrauer, A
   Nasartschuk, K
   Dombrowski, M
AF Richard, Adam
   Lai Nguyen
   Shipton, Peter
   Kent, Kenneth B.
   Bierbrauer, Azden
   Nasartschuk, Konstantin
   Dombrowski, Marcel
TI Inter-JVM Sharing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE string; shared memory; garbage collection; java; string deduplication;
   footprint reduction
AB Some Java programs lend themselves to being run many times and create the same fixed objects every time. Many of these common objects are Strings. To exploit this trend, we have modified IBM's J9 Java virtual machine (JVM) to allow the same String objects to share (reuse) their internal char[] (character) arrays in each JVM. The first instance of the Java program runs to completion and then sets up the Strings for sharing, so that subsequent instances of the same program can use the char[] arrays that it created instead of recreating them. String sharing will not provide benefit in all applications, but for those that fit the pattern, as exemplified by the Eclipse and H2 benchmarks, we were able to achieve significant heap saving with negligible impact on performance. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Richard, Adam; Kent, Kenneth B.; Bierbrauer, Azden; Nasartschuk, Konstantin; Dombrowski, Marcel] Univ New Brunswick, Ctr Adv Studies Atlantic, Fac Comp Sci, Fredericton, NB, Canada.
   [Lai Nguyen; Shipton, Peter] IBM Canada, Ottawa, ON, Canada.
C3 University of New Brunswick; International Business Machines (IBM)
RP Kent, KB (corresponding author), Univ New Brunswick, Fac Comp Sci, 540 Windsor St, Fredericton, NB E3B 5A3, Canada.
EM ken@unb.ca
OI Kent, Kenneth B/0000-0003-2764-823X
FU Atlantic Canada Opportunities Agency (ACOA) through the Atlantic
   Innovation Fund (AIF) program
FX The authors would like to acknowledge the funding support provided by
   the Atlantic Canada Opportunities Agency (ACOA) through the Atlantic
   Innovation Fund (AIF) program. Furthermore, we would also like to thank
   the New Brunswick Innovation Foundation for contributing to this
   project. Finally, we would like to thank the Centre for Advanced
   Studies-Atlantic for access to the resources for conducting our
   research.
CR Abuaiadh D, 2004, ACM SIGPLAN NOTICES, V39, P224, DOI 10.1145/1035292.1028995
   Bhatkar S, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P105
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Gosling J, 2011, JAVA TM LANGUAGE SPE
   Jones R., 2011, GARBAGE COLLECTION H
   Kawachiya K, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P385
   Marinov D, 2003, ACM SIGPLAN NOTICES, V38, P313, DOI 10.1145/949343.949333
   Pagh R., 2001, Algorithms - ESA 2001. 9th Annual European Symposium. Proceedings (Lecture Notes in Computer Science Vol.2161), P121
   Wegiel M, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P327, DOI 10.1145/1375581.1375621
NR 9
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2016
VL 46
IS 9
BP 1285
EP 1296
DI 10.1002/spe.2379
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DS8KO
UT WOS:000381032300007
DA 2024-07-18
ER

PT J
AU Lelli, J
   Scordino, C
   Abeni, L
   Faggioli, D
AF Lelli, Juri
   Scordino, Claudio
   Abeni, Luca
   Faggioli, Dario
TI Deadline scheduling in the Linux kernel
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE real-time; resource-reservation; scheduling; operating system; Linux
ID BANDWIDTH; ALGORITHM
AB During the last decade, there has been a considerable interest in using Linux in real-time systems, especially for industrial control. The simple and elegant design of Linux guarantees reliability and very good performance, while its open-source license allows to modify and change the source code according to the user needs. However, Linux has been designed to be a general-purpose operating system. Therefore, it presents some issues like unpredictable latencies and limited support for real-time scheduling. In this paper, we present our experience in the design and implementation of the real-time scheduler that has been recently included in the Linux kernel. The scheduler is based on the Resource Reservation paradigm, which allows to enforce temporal isolation between the running tasks. We describe the genesis of the project, the challenges we have encountered, the implementation details and the API offered to the programmers. Then, we show the experimental results measured on a real hardware. Copyright (c) 2015John Wiley & Sons, Ltd.
C1 [Lelli, Juri; Faggioli, Dario] Scuola S Anna, ReTiS Lab, Pzza Martiri Liberta 33, I-56127 Pisa, Italy.
   [Scordino, Claudio] Evidence Srl, Via Carducci 56, I-56010 Pisa, Italy.
   [Abeni, Luca] Univ Trento, Via Sommarive 9, I-38123 Povo, Trento, Italy.
C3 University of Trento
RP Scordino, C (corresponding author), Evidence Srl, Via Carducci 56, I-56010 Pisa, Italy.
EM claudio@evidence.eu.com
RI Abeni, Luca/AAF-8220-2020
OI Abeni, Luca/0000-0002-7080-9601; Scordino, Claudio/0000-0003-3378-3307
FU ACTORS FP7 project, JUNIPER FP7 project [216586, 318763]
FX ACTORS FP7 project, JUNIPER FP7 project: 216586, 318763.
CR Abeni L, 1998, REAL TIM SYST SYMP P, P4, DOI 10.1109/REAL.1998.739726
   Abeni L, 2002, EIGHTH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P133, DOI 10.1109/RTTAS.2002.1137388
   Abeni L, 2013, SOFTWARE PRACTICE EX, V45, P455
   Abeni L, 2013, P IEEE ICC 2013 IEEE, P2396
   Abeni L., 2002, REAL TIM LIN WORKSH
   Asberg M., 2012, 2012 IEEE 18th International Conference on Embedded and Real-Time Computing Systems and Applications (RTCSA 2012), P240, DOI 10.1109/RTCSA.2012.9
   Barbalace A, 2007, RTAI XEN HARD REAL T, V15, P1
   Bastoni A, 2010, REAL TIM SYST SYMP P, P14, DOI 10.1109/RTSS.2010.23
   Calandrino JM, 2006, REAL TIM SYST SYMP P, P111, DOI 10.1109/RTSS.2006.27
   Cerqueira F, 2014, IEEE REAL TIME, P263, DOI 10.1109/RTAS.2014.6926008
   Checconi F., 2009, P 5 INT WORKSH OP SY, P15
   Checconi F, 2013, IEEE ACM T NETWORK, V21, P802, DOI 10.1109/TNET.2012.2215881
   Davis RI, 2009, P 30 IEEE REAL TIM S, P348
   Devi UC, 2008, REAL-TIME SYST, V38, P133, DOI 10.1007/s11241-007-9042-1
   Dozio L, 2003, ISORC 2003: SIXTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P11
   Emberson P., 2010, P 1 INT WORKSH AN TO, P1
   FAGGIOLI D, 2008, P 10 REAL TIM LIN WO
   Faggioli D., 2009, 11 REAL TIM LIN WORK
   Faggioli D, 2012, REAL-TIME SYST, V48, P789, DOI 10.1007/s11241-012-9162-0
   GHAZALIE TM, 1995, REAL-TIME SYST, V9, P31, DOI 10.1007/BF01094172
   Gujarati A, 2013, EUROMICRO, P69, DOI 10.1109/ECRTS.2013.18
   Jansen P. G., 2003, LIGHTWEIGHT EDF SCHE
   JOSEPH M, 1986, COMPUT J, V29, P390, DOI 10.1093/comjnl/29.5.390
   Karim Yaghmour, 2001, ADAPTIVE DOMAIN ENV
   Kato S, 2011, REAL-TIME SYST, V47, P454, DOI 10.1007/s11241-011-9127-8
   Kenna C. J., 2011, Proceedings of the 2011 IEEE 32nd Real-Time Systems Symposium (RTSS 2011), P93, DOI 10.1109/RTSS.2011.16
   Kivity A., 2007, P LIN S DTTAW DNTOR, V1, P225
   Kolivas C., ISOCHRONOUS CLASS UN
   Lelli J, 2012, J SYST SOFTWARE, V85, P2405, DOI 10.1016/j.jss.2012.05.048
   Lelli Juri., 2011, PROC 7 INT WORKSHOP, P6
   Lipari G, 2004, IEEE T COMPUT, V53, P1591, DOI 10.1109/TC.2004.120
   Lipari G, 2000, EUROMICRO, P193, DOI 10.1109/EMRTS.2000.854007
   Lipari G., 2006, IEEE INT C ANIPLA 06
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Love Robert, 2010, Linux Kernel Development
   Marzario L, 2004, RTAS 2004: 10TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P211, DOI 10.1109/RTTAS.2004.1317266
   Oikawa S, 1999, PROCEEDINGS OF THE FIFTH IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, P111, DOI 10.1109/RTTAS.1999.777666
   Palopoli L, 2009, SOFTWARE PRACT EXPER, V39, P1, DOI 10.1002/spe.883
   Ripoll I, 2002, TECHNICAL REPORT
   Rostedt Steven., 2007, proc. of the Linux Symposium OLS'07, P161
   Scordino C, 2007, THESIS U PISA
   Scordino C, 2006, IEEE T COMPUT, V55, P1509, DOI 10.1109/TC.2006.190
   SHA L, 1990, IEEE T COMPUT, V39, P1175, DOI 10.1109/12.57058
   Spuri M, 1996, REAL-TIME SYST, V10, P179, DOI 10.1007/BF00360340
   SPURI M, 1994, P IEEE REAL TIM SYST
   Stanovich Mark, 2010, Proceedings of the 16th IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS 2010), P35, DOI 10.1109/RTAS.2010.34
   STROSNIDER JK, 1995, IEEE T COMPUT, V44, P73, DOI 10.1109/12.368008
   Tokuda H., 1993, WORKSH ROL REAL TIM
   Valente P., 2013, P 22 INT C COMP COMM
   Valente P, 2010, IEEE T COMPUT, V59, P1172, DOI 10.1109/TC.2010.105
   Williams C., 2002, LINUX SCHEDULER LATE
   Yan Y, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P273, DOI 10.1145/2594368.2594381
   YODAIKEN V, 1999, P 5 LIN EXP RAL N CA
NR 53
TC 57
Z9 58
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2016
VL 46
IS 6
BP 821
EP 839
DI 10.1002/spe.2335
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK1WU
UT WOS:000374706600005
DA 2024-07-18
ER

PT J
AU Huang, TC
   Chang, DW
AF Huang, Ting-Chang
   Chang, Da-Wei
TI TridentFS: a hybrid file system for non-volatile RAM, flash memory and
   magnetic disk
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE hybrid file systems; non-volatile memory; flash memory; magnetic disk;
   file distribution
AB A hybrid file system with high flexibility and performance, called Trident file system (TridentFS), is proposed to manage three types of storage with different performance characteristics, that is, Non-Volatile RAM (NVRAM), flash memory and magnetic disk. Unlike previous NVRAM-based hybrid file systems, novel techniques are used in TridentFS to improve the flexibility and performance. TridentFS is flexible by the support of various forms of flash memory and a wide range of NVRAM size. The former is achieved on the basis of the concept of stackable file systems, and the latter is achieved by allowing data eviction from the NVRAM. TridentFS achieves high performance by keeping hot data in the NVRAM and allowing data evicted from the NVRAM to be parallel distributed to the flash memory and disk. A data eviction policy is proposed to determine the data to be evicted from the NVRAM. Moreover, a data distribution algorithm is proposed to effectively leverage the parallelism between flash memory and disk during data distribution. TridentFS is implemented as a loadable module on Linux 2.6.29. The performance results show that it works well for both small-sized and large-sized NVRAM, and the proposed eviction policy outperforms LRU by 27%. Moreover, by effectively leveraging the parallelism between flash memory and disk, the proposed data distribution algorithm outperforms the RAID-0 and a size-based distribution method by up to 471.6% and 82.6%, respectively. By considering the data size and performance characteristics of the storage, the proposed data distribution algorithm outperforms the greedy algorithm by up to 15.5%. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Huang, Ting-Chang] Natl Chiao Tung Univ, Dept Comp Sci, 1001 Univ Rd, Hsinchu 300, Taiwan.
   [Chang, Da-Wei] Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, 1 Univ Rd, Tainan 701, Taiwan.
C3 National Yang Ming Chiao Tung University; National Cheng Kung University
RP Chang, DW (corresponding author), Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, 1 Univ Rd, Tainan 701, Taiwan.
EM dwchang@mail.ncku.edu.tw
RI huang, ting/GRR-3141-2022; Huang, Shu Huan/AFR-4893-2022
OI Huang, Shu Huan/0000-0003-2673-9850
FU National Science Council, Taiwan, Republic of China [NSC
   101-2221-E-006-098-MY3, NSC 101-2221-E-006-150-MY3]
FX We would like to thank the anonymous reviewers for their helpful
   comments on this paper. This research was supported in part by grants
   NSC 101-2221-E-006-098-MY3 and NSC 101-2221-E-006-150-MY3 from the
   National Science Council, Taiwan, Republic of China.
CR [Anonymous], 2011, FAST
   [Anonymous], SIGOPS OPERATING SYS
   [Anonymous], ATEC 05
   Aranya A, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 3RD USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P129
   BAKER M, 1992, SIGPLAN NOTICES, V27, P10, DOI 10.1145/143371.143380
   Bolosky W.J., 2000, Proceedings of the 4th Conference on USENIX Windows Systems Symposium - Volume 4, WSS'00, USENIX Association, Berkeley, CA, USA, P2
   Bowden T, THE PROC FILE SYSTEM
   Brunelle A.D., 2007, blktrace User Guide
   Chen JJ, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/768756
   Chen PM, 1996, ACM SIGPLAN NOTICES, V31, P74, DOI 10.1145/248209.237154
   Condit J, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P133
   Doh InHwan., 2007, 7th ACM IEEE Conference on Embedded Software (EMSOFT '07), P164
   Edel NK, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P596, DOI 10.1109/MASCOT.2004.1348317
   Fisher N, 2012, COMPUTING, V94, P21, DOI 10.1007/s00607-011-0163-y
   Garrison John A., 2009, ACM Transaction on Storage, V5, DOI 10.1145/1502777.1502780
   Gill BS, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P129
   GRAHAM RL, 1969, SIAM J APPL MATH, V17, P416, DOI 10.1137/0117039
   Greenan KM, 2007, HOTDEP 07 P 3 WORKSH, P10
   Gupta A, 2009, ACM SIGPLAN NOTICES, V44, P229, DOI 10.1145/1508284.1508271
   HEIDEMANN JS, 1994, ACM T COMPUT SYST, V12, P58, DOI 10.1145/174613.174616
   Huang TC, 2013, IEEE T CONSUM ELECTR, V59, P122, DOI 10.1109/TCE.2013.6490250
   Huang TC, 2012, SOFTWARE PRACT EXPER, V42, P303, DOI 10.1002/spe.1069
   Jiang S, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P101
   Jung J, 2010, ACM T STORAGE, V6, DOI 10.1145/1714454.1714457
   Jung M., 2013, Proceedings of the International ACM Conference on International Conference on Supercomputing, ICS '13, P103
   Katcher J, POSTMARK NEW FILE SY
   Kleiman S. R., 1986, USENIX Association Summer Conference Proceedings, Atlanta 1986, P238
   Konishi R., 2006, Operating Systems Review, V40, P102, DOI 10.1145/1151374.1151375
   Kustarz E, FILEBENCH NEW IMPROV
   Lai X, 2010, 2010 IEEE INTERNATIONAL CONFERENCE ON WIRELESS COMMUNICATIONS, NETWORKING AND INFORMATION SECURITY (WCNIS), VOL 1, P223, DOI 10.1109/WCINS.2010.5541730
   Lawrence Livermore National Laboratory, ZFS ON LIN
   Lee LW, 2000, IEEE T COMPUT, V49, P127, DOI 10.1109/12.833109
   Manning C, HOW YAFFS WORKS
   Mathur Avantika, 2007, P LINUX S, V2, P21
   Megiddo N, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES (FAST'03), P115
   Miller EL, 2001, EIGHTH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, PROCEEDINGS, P95, DOI 10.1109/HOTOS.2001.990067
   Park Y, 2007, SAC 08 P ACM S APPL, P1498, DOI [10.1145/1363686.1364038, DOI 10.1145/1363686.1364038]
   Qiu S, 2013, PROC ASME 2013 7 INT, P1
   Scott W, 1998, SOLARIS 10 ZFS ESSEN, P1
   Snyder P., 1990, Proceedings of the Autumn 1990 EUUG Conference, P241
   Tao Xie, 2009, ACM Transaction on Storage, V5, DOI 10.1145/1629075.1629079
   Wang A. A., 2006, ACM Transaction on Storage, V2, P309, DOI 10.1145/1168910.1168914
   Wolf SA, 2010, P IEEE, V98, P2155, DOI 10.1109/JPROC.2010.2064150
   WU M, 1994, SIGPLAN NOTICES, V29, P86, DOI 10.1145/195470.195506
   Wu XJ, 2013, ACM T STORAGE, V9, DOI 10.1145/2501620.2501621
   Zhang H, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND NATURAL COMPUTING, VOL I, P262, DOI 10.1109/CINC.2009.108
   Zhao Weisheng., 2011, Proceedings of the 21st edition of the great lakes symposium on Great lakes symposium on VLSI, P431
NR 47
TC 9
Z9 9
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2016
VL 46
IS 3
BP 291
EP 318
DI 10.1002/spe.2299
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DD2RH
UT WOS:000369769400001
DA 2024-07-18
ER

PT J
AU Hussain, I
   Csallner, C
   Grechanik, M
   Xie, Q
   Park, S
   Taneja, K
   Hossain, BMM
AF Hussain, Ishtiaque
   Csallner, Christoph
   Grechanik, Mark
   Xie, Qing
   Park, Sangmin
   Taneja, Kunal
   Hossain, B. M. Mainul
TI RUGRAT: Evaluating program analysis and testing tools and compilers with
   large generated random benchmark applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE benchmark applications; benchmark application generator; stochastic
   parse tree
ID COVERAGE
AB Benchmarks are heavily used in different areas of computer science to evaluate algorithms and tools. In program analysis and testing, open-source and commercial programs are routinely used as benchmarks to evaluate different aspects of algorithms and tools. Unfortunately, many of these programs are written by programmers who introduce different biases, not to mention that it is very difficult to find programs that can serve as benchmarks with high reproducibility of results. We propose a novel approach for generating random benchmarks for evaluating program analysis and testing tools and compilers. Our approach uses stochastic parse trees, where language grammar production rules are assigned probabilities that specify the frequencies with which instantiations of these rules will appear in the generated programs. We implemented our tool for Java and applied it to generate a set of large benchmark programs of up to 5Mlines of code each with which we evaluated different program analysis and testing tools and compilers. The generated benchmarks let us independently rediscover several issues in the evaluated tools. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Hussain, Ishtiaque; Csallner, Christoph] Univ Texas Arlington, Arlington, TX 76019 USA.
   [Grechanik, Mark; Hossain, B. M. Mainul] Univ Illinois, Chicago, IL 60607 USA.
   [Xie, Qing; Taneja, Kunal] Accenture Technol Labs, San Jose, CA 95113 USA.
   [Park, Sangmin] Georgia Inst Technol, Atlanta, GA 30332 USA.
C3 University of Texas System; University of Texas Arlington; University of
   Illinois System; University of Illinois Chicago; University of Illinois
   Chicago Hospital; Accenture; University System of Georgia; Georgia
   Institute of Technology
RP Csallner, C (corresponding author), Univ Texas Arlington, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
EM csallner@uta.edu
RI Hossain, B M Mainul/AEU-3681-2022; Grechanik, Mark/IZD-6018-2023
OI Hossain, B M Mainul/0000-0002-0447-4217; Grechanik,
   Mark/0000-0002-8364-595X
FU National Science Foundation [0916139, 1017633, 1217928, 1017305,
   1117369]; Microsoft Research; Accenture; Direct For Computer & Info Scie
   & Enginr; Division of Computing and Communication Foundations [0916139,
   1217928, 1117369, 1017305, 1017633] Funding Source: National Science
   Foundation
FX We thank Balamurugan Prabakaran, Nischit Rangapan, and Arthi Vijayakumar
   from the University of Illinois for their contribution as part of their
   MS work. This material is based upon work supported by the National
   Science Foundation under Grants No. 0916139, 1017633, 1217928, 1017305,
   and 1117369, as well as Microsoft Research and Accenture.
CR [Anonymous], P ACM SIGSOFT INT S
   [Anonymous], 2005, PMD applied
   [Anonymous], P 9 ACM SIGPLAN SIGS
   [Anonymous], P 13 INT C DAT THEOR
   [Anonymous], P MATH FDN COMP SCI
   [Anonymous], P WORKSH SOFTW MOD C
   [Anonymous], 2008, WILEY ONLINE LIB
   [Anonymous], INFORM TECHNOLOGY BU
   [Anonymous], P 4 INT S EMP SOFTW
   [Anonymous], 2011, Revised Selected Papers, ser. Lecture Notes in Computer Science, DOI DOI 10.1007/978-3-642-28830-218
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2004, INT C VERY LARGE DAT
   [Anonymous], P INT C SOFTW TEST R
   Artho C, 2004, LECT NOTES COMPUT SC, V2937, P297
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Blackburn SM, 2008, COMMUN ACM, V51, P83, DOI 10.1145/1378704.1378723
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Boujarwah AS, 1999, INFORM SOFTWARE TECH, V41, P15, DOI 10.1016/S0950-5849(98)00075-5
   Boujarwah AS, 1997, INFORM SOFTWARE TECH, V39, P617, DOI 10.1016/S0950-5849(97)00017-7
   Burgess C. J., 1994, Software Testing, Verification and Reliability, V4, P81, DOI 10.1002/stvr.4370040204
   CELENTANO A, 1980, SOFTWARE PRACT EXPER, V10, P897, DOI 10.1002/spe.4380101104
   Collberg C, 2007, SOFTWARE PRACT EXPER, V37, P581, DOI 10.1002/spe.776
   Coppit David., PROC 20 IEEEACM INT, DOI [10.1145/1101908.1101969, DOI 10.1145/1101908.1101969]
   Cuoq Pascal, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P120, DOI 10.1007/978-3-642-28891-3_12
   d'Amorim M, 2006, IEEE INT CONF AUTOM, P59
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Dufour B, 2003, ACM SIGPLAN NOTICES, V38, P149, DOI 10.1145/949343.949320
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Evans BenjaminJ., 2012, The well-grounded Java developer: Vital techniques of Java 7 and polyglot programming
   Fraser G, 2012, PROC INT CONF SOFTW, P178, DOI 10.1109/ICSE.2012.6227195
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   Harm J., 2000, Informatica, V24, P355
   Hennessy M, 2008, EMPIR SOFTW ENG, V13, P343, DOI 10.1007/s10664-008-9067-7
   Hoffman DM, 2011, SOFTWARE PRACT EXPER, V41, P427, DOI 10.1002/spe.1017
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Hussain I., 2012, Proceedings of the 2012 Workshop on Dynamic Analysis, P1
   Joshi A, 2008, ACM T ARCHIT CODE OP, V5, DOI 10.1145/1400112.1400115
   Khalek Shadi Abdul, 2010, Proceedings of the 25th IEEE/ACM International Conference on Automated Software Engineering, ASE'10, page, P329
   Lämmel R, 2006, LECT NOTES COMPUT SC, V3964, P19
   Majumdar Rupak, 2007, 22 IEEE ACM INT C AU, P134
   Mantere T, 2000, P SOC PHOTO-OPT INS, V4197, P297, DOI 10.1117/12.403775
   Marri MR, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P149, DOI 10.1109/IWAST.2009.5069054
   Martin B, 2004, 2004 IEEE COMPUTATIONAL SYSTEMS BIOINFORMATICS CONFERENCE, PROCEEDINGS, P564
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   McDaniel G., 1994, IBM DICT COMPUTING
   MURALI V, 1983, SOFTWARE PRACT EXPER, V13, P857, DOI 10.1002/spe.4380130911
   Cardona PAN, 2015, CUAD ACT, P154
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   Reghbati H.K., 1988, Computer graphics hardware - image generation and display: tutorial
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Saavedra RH, 1996, ACM T COMPUT SYST, V14, P344, DOI 10.1145/235543.235545
   Schwab M, 2000, COMPUT SCI ENG, V2, P61, DOI 10.1109/5992.881708
   Sewe A, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P657
   Sirer EG, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P1
   Slutz D., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P618
   SREENIVASAN K, 1974, COMMUN ACM, V17, P127, DOI 10.1145/360860.360863
   Wagner S, 2005, LECT NOTES COMPUT SC, V3502, P40
   Wang S, 2009, IEEE ICST WORKSHOP, P210, DOI 10.1109/ICSTW.2009.36
   Ward WilliamA., 2005, Role of application benchmarks in the DoD HPC acquisition process. U.S. Army Engineer Research and Development Center
   WARE M.S., 2008, P 2008 WORKSHOP STAT, P12, DOI DOI 10.1145/1394504.1394506
   Wedyan F, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P141, DOI 10.1109/ICST.2009.21
   Xiao XS, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P611, DOI 10.1145/1985793.1985876
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Yoshikawa T, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P20, DOI 10.1109/QSIC.2003.1319081
   Zhang HY, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P230, DOI 10.1109/ASPEC.2007.64
   Zhang J, 2012, LECT NOTES COMPUT SC, V7664, P316, DOI 10.1007/978-3-642-34481-7_39
   Zhao C, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P36, DOI 10.1109/IWAST.2009.5069039
   Zitser M., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1041685.1029911
NR 72
TC 10
Z9 12
U1 2
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2016
VL 46
IS 3
BP 405
EP 431
DI 10.1002/spe.2290
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DD2RH
UT WOS:000369769400006
DA 2024-07-18
ER

PT J
AU Maenhaut, PJ
   Moens, H
   Ongenae, V
   De Turck, F
AF Maenhaut, Pieter-Jan
   Moens, Hendrik
   Ongenae, Veerle
   De Turck, Filip
TI Migrating legacy software to the cloud: approach and verification by
   means of two medical software use cases
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; software-as-a-service; multi-tenancy; migration;
   medical software
AB Cloud computing is a technology that enables elastic, on-demand resource provisioning, allowing application developers to build highly scalable systems. Multi-tenancy, the hosting of multiple customers by a single application instance, leads to improved efficiency, improved scalability, and less costs. While these technologies make it possible to create many new applications, legacy applications can also benefit from the added flexibility and cost savings of cloud computing and multi-tenancy. In this article, we describe the steps required to migrate existing applications to a public cloud environment, and the steps required to add multi-tenancy to these applications. We present a generic approach and verify this approach by means of two case studies, a commercial medical communications software package mainly used within hospitals for nurse call systems and a schedule planner for managing medical appointments. Both case studies are subject to stringent security and performance constraints, which need to be taken into account during the migration. In our evaluation, we estimate the required investment costs and compare them to the long-term benefits of the migration. Copyright (c) 2015 John Wiley & Sons Ltd.
C1 [Maenhaut, Pieter-Jan; Ongenae, Veerle] Univ Ghent, Dept Ind Technol & Construct, Fac Engn & Architecture, B-9000 Ghent, Belgium.
   [Maenhaut, Pieter-Jan; Moens, Hendrik; De Turck, Filip] Univ Ghent, Dept Informat Technol, iMinds IBCN, B-9050 Ghent, Belgium.
C3 Ghent University; Ghent University; IMEC
RP Maenhaut, PJ (corresponding author), Univ Ghent, Dept Ind Technol & Construct, iMinds IBCN, Valentin Vaerwyckweg 1, B-9000 Ghent, Belgium.
EM pieterjan.maenhaut@intec.ugent.be
OI Maenhaut, Pieter-Jan/0000-0002-9385-8000; De Turck,
   Filip/0000-0003-4824-1199
CR [Anonymous], 2009, TECHNICAL REPORT
   Betts D., 2010, MOVING APPL CLOUD MI
   Guo CJ, 2007, 9TH IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE TECHNOLOGY/4TH IEEE INTERNATIONAL CONFERENCE ON ENTERPRISE COMPUTING, E-COMMERCE AND E-SERVICES, P551, DOI 10.1109/CEC-EEE.2007.4
   Hajjat M, 2010, ACM SIGCOMM COMP COM, V40, P243, DOI 10.1145/1851275.1851212
   Khajeh-Hosseini Ali, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P450, DOI 10.1109/CLOUD.2010.37
   Li A, 2011, IEEE INTERNET COMPUT, V15, P50, DOI 10.1109/MIC.2011.36
   Maenhaut P J, 2014, P 14 NETW OP MAN S N, P1
   Maenhaut PJ, 2014, INT CONF NETW SER, P268, DOI 10.1109/CNSM.2014.7014171
   Maenhaut PJ, 2013, 2013 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2013), P900
   Moens H., 2012, 2012 8th International Conference on Network and Service Management (CNSM 2012), P28
   MOENS H, 2013, J NETW SYST MANAG, V22, P517
   Moens H, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P72, DOI 10.1145/2648511.2648519
   Moens H, 2012, IEEE IFIP NETW OPER, P1295, DOI 10.1109/NOMS.2012.6212066
   Moens H, 2012, IEEE IFIP NETW OPER, P17, DOI 10.1109/NOMS.2012.6211878
   Ongenae F., 2012, 2012 6th International Conference on Pervasive Computing Technologies for Healthcare, P205, DOI 10.4108/icst.pervasivehealth.2012.248699
   Ongenae F, 2013, 10 INT C INF SYST CR, P1
   Ongenae F, 2013, EXPERT SYST APPL, V40, P7629, DOI 10.1016/j.eswa.2013.07.038
   da Costa PJP, 2012, PROC TECH, V5, P93, DOI 10.1016/j.protcy.2012.09.011
   Quang Hieu Vu, 2012, 2012 IEEE Eighth World Congress on Services, P270, DOI 10.1109/SERVICES.2012.47
   Schabus D., 2011, P 73 IEEE C VEH TECH, P1
   Walraven S, 2014, COMPUTING, V96, P669, DOI 10.1007/s00607-013-0346-9
   Walraven S, 2011, LECT NOTES COMPUT SC, V7049, P370
NR 22
TC 8
Z9 9
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2016
VL 46
IS 1
SI SI
BP 31
EP 54
DI 10.1002/spe.2320
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA6HI
UT WOS:000367903200002
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Sui, YL
   Ye, S
   Xue, JL
   Zhang, J
AF Sui, Yulei
   Ye, Sen
   Xue, Jingling
   Zhang, Jie
TI Making context-sensitive inclusion-based pointer analysis practical for
   compilers using parameterised summarisation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE pointer analysis; inclusion-based analysis; context-sensitive analysis
AB Because of its high precision as a flow-insensitive pointer analysis, Andersen's analysis has been deployed in some modern optimising compilers. To obtain improved precision, we describe how to add context sensitivity on top of Andersen's analysis. The resulting analysis, called ICON, is efficient to analyse large programs while being sufficiently precise to drive compiler optimisations. Its novelty lies in summarising the side effects of a procedure by using one transfer function on virtual variables that represent fully parameterised locations accessed via its formal parameters. As a result, a good balance between efficiency and precision is made, resulting in ICON that is more powerful than a 1-callsite-sensitive analysis and less so than a call-path-sensitive analysis (when the recursion cycles in a program are collapsed in all cases). We have compared ICON with FULCRA, a state of the art Andersen's analysis that is context sensitive by acyclic call paths, in Open64 (with recursion cycles collapsed in both cases) using the 16 C/C++ benchmarks in SPEC2000 (totalling 600KLOC) and 5 C applications (totalling 2.1MLOC). Our results demonstrate scalability of ICON and lack of scalability of FULCRA. FULCRA spends over 2h in analysing SPEC2000 and fails to run to completion within 5h for two of the five applications tested. In contrast, ICON spends just under 7min on the 16 benchmarks in SPEC2000 and just under 26min on the same two applications. For the 19 benchmarks analysable by FULCRA, ICON is nearly as accurate as FULCRA in terms of the quality of the built Static Single Assignment (SSA) form and the precision of the discovered alias information. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Sui, Yulei; Ye, Sen; Xue, Jingling] Univ New S Wales, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
   [Zhang, Jie] Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing 100029, Peoples R China.
C3 University of New South Wales Sydney; Beijing University of Chemical
   Technology
RP Xue, JL (corresponding author), Univ New S Wales, Sch Comp Sci & Engn, Programming Languages & Compilers Grp, Sydney, NSW 2052, Australia.
EM jingling@cse.unsw.edu.au
RI Sui, Yulei/AAL-5915-2020; Xue, Jingling/AAE-1991-2020
OI Sui, Yulei/0000-0002-9510-6574; Xue, Jingling/0000-0003-0380-3506
FU Australian Research Council (ARC) [DP0987236, DP130101970];
   International Science and Technology Cooperation Program of China
   [2011DFG13000]; Australian Research Council [DP0987236] Funding Source:
   Australian Research Council
FX We thank the anonymous reviewers for their helpful comments and
   suggestions to the earlier versions of this paper This research is
   supported by the Australian Research Council (ARC) grants (DP0987236 and
   DP130101970) and an International Science and Technology Cooperation
   Program of China (2011DFG13000).
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   Andersens LO, 1994, 9419 DIKU
   [Anonymous], 1982, SIGPLAN Not, DOI DOI 10.1145/872726.806984
   Cai Q, 2003, INT SYM CODE GENER, P91, DOI 10.1109/CGO.2003.1191536
   Chatterjees R, 1999, ACM SIGPLAN SIGACT S, P146
   Cherem S., 2007, ACM SIGPLAN Conference on Program- ming Language Design and Implementation (PLDI), P480
   Chow F., 1996, Compiler Construction. 6th International Conference, CC'96. Proceedings, P253
   Das M, 2001, LECT NOTES COMPUT SC, V2126, P260
   Dilligs I, 2011, ACM SIGPLAN C PROGR, P567
   Du ZH, 2004, ACM SIGPLAN NOTICES, V39, P71, DOI 10.1145/996893.996852
   EMAMI M, 1994, SIGPLAN NOTICES, V29, P242, DOI 10.1145/773473.178264
   Foster JS, 2000, LECT NOTES COMPUT SC, V1824, P175
   Gao L, 2013, IEEE T COMPUT, V62, P1004, DOI 10.1109/TC.2012.41
   Hackett Brian., 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering, SIGSOFT '06/FSE-14, P69
   HARDEKOPF B, 2007, ACM SIGPLAN C PROGR, P290
   Hardekopf B, 2011, INT SYM CODE GENER, P289, DOI 10.1109/CGO.2011.5764696
   Heintzes N, 2001, ACM SIGPLAN C PROGR, P263
   KAHLON V, 2008, ACM SIGPLAN C PROGR, P249
   KNOOP J, 1992, SIGPLAN NOTICES, V27, P224, DOI 10.1145/143103.143136
   Landis W, 1992, ACM SIGPLAN C PROGR, P27
   Lhoták O, 2006, LECT NOTES COMPUT SC, V3923, P47
   Li L, 2005, PACT 2005: 14TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P329
   Li L, 2011, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE IN SPORT (IACSS2011), P343
   Liang DL, 2001, LECT NOTES COMPUT SC, V2126, P279
   Liang DL, 1999, LECT NOTES COMPUT SC, V1687, P199, DOI 10.1145/318774.318943
   Lis L, 2009, ACM T ARCHITECTURE C, V6
   Lis L, 2013, INT S MEM MAN, P85
   Lu Y, 2013, LECT NOTES COMPUT SC, V7791, P61, DOI 10.1007/978-3-642-37051-9_4
   Nasre R, 2011, INT SYM CODE GENER, P267, DOI 10.1109/CGO.2011.5764694
   Nguyen P.H., 2005, AUSTRALASIAN C COMPU, P9
   Nystrom EM, 2004, LECT NOTES COMPUT SC, V3148, P165
   Nystroms E, 2006, THESIS U ILLINOIS UR
   Pearce DJ, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1290520.1290524
   Pereira FMQ, 2009, INT SYM CODE GENER, P126, DOI 10.1109/CGO.2009.9
   Quiñones CG, 2005, ACM SIGPLAN NOTICES, V40, P269, DOI 10.1145/1064978.1065043
   Rau B R., 1994, Proceedings of MICRO-27. The 27th Annual IEEE/ACM International Symposium on Microarchitecture, P63
   Shang L, 2012, IEEE INT CONF AUTOM, P270
   Shang Lei, 2012, P 10 INT S CODE GENE, P264
   Smaragdakis Y, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P17, DOI 10.1145/1926385.1926390
   Sridharan M, 2006, ACM SIGPLAN NOTICES, V41, P387, DOI 10.1145/1133981.1134027
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   Sui YL, 2013, INT SYM CODE GENER, P1
   Sui Yulei, 2011, P 9 AS S PROGR LANG, P155, DOI DOI 10.1007/978-3-642-25318-8
   Sui Yulei, 2012, P INT S SOFTW TEST A, P254, DOI [DOI 10.1145/2338965.2336784, DOI 10.1145/04000800.2336784]
   Sun Q, 2011, LECT NOTES COMPUT SC, V6601, P62, DOI 10.1007/978-3-642-19861-8_5
   Udayakumaran S., 2003, CASES '03: Proceedings of the 2003 international conference on Compilers, architecture and synthesis for embedded systems, P276
   Vachharajani Neil, 2007, 2007 16th International Conference on Parallel Architectures and Compilation Techniques, P49
   Whaley J, 2004, ACM SIGPLAN NOTICES, V39, P131, DOI 10.1145/996893.996859
   Whaley J, 1999, ACM SIGPLAN NOTICES, V34, P187, DOI 10.1145/320385.320400
   Xiao X., 2011, P INT S SOFTW TEST A, P188
   Xu G., 2008, ISSTA'08, P225, DOI DOI 10.1145/1390630.1390658
   Xue JL, 2007, J SYST SOFTWARE, V80, P92, DOI 10.1016/j.jss.2006.06.015
   Xue JL, 2005, LECT NOTES COMPUT SC, V3443, P271
   Xues J, 2006, INT C COMP CONSTR, V26
   Yang XJ, 2009, ACM SIGPLAN NOTICES, V44, P111, DOI 10.1145/1594835.1504195
   Yu HT, 2010, INT SYM CODE GENER, P218
   ZHENG X, 2008, ACM SIGPLAN SIGACT S, P197
   Zhus J, 2004, ACM SIGPLAN C PROGR, P157
NR 58
TC 11
Z9 12
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2014
VL 44
IS 12
BP 1485
EP 1510
DI 10.1002/spe.2214
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AT2AR
UT WOS:000344733600004
DA 2024-07-18
ER

PT J
AU Salehi, MA
   Toosi, AN
   Buyya, R
AF Salehi, Mohsen Amini
   Toosi, Adel Nadjaran
   Buyya, Rajkumar
TI Contention management in federated virtualized distributed systems:
   implementation and evaluation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE resource contention; preemption mechanism; lease-based resource
   provisioning; virtual machine (VM)
ID PREEMPTION
AB The paper describes creation of a contention-aware environment in a large-scale distributed system where the contention occurs to access resources between external and local requests. To resolve the contention, we propose and implement a preemption mechanism in the InterGrid platform, which is a platform for large-scale distributed system and uses virtual machines for resource provisioning. The implemented mechanism enables the resource providers to increase their resource utilization through contributing resources to the InterGrid platform without delaying their local users. The paper also evaluates the impact of applying various policies for preempting user requests. These policies affect resource contention, average waiting time, and imposed overhead to the system. Experiments conducted in real settings demonstrate efficacy of the preemption mechanism in resolving resource contention and the influence of preemption policies on the amount of imposed overhead and average waiting time. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Salehi, Mohsen Amini] Colorado State Univ, Dept Elect & Comp Engn, Ft Collins, CO 80523 USA.
   [Salehi, Mohsen Amini; Toosi, Adel Nadjaran; Buyya, Rajkumar] Univ Melbourne, Dept Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic 3010, Australia.
C3 Colorado State University; University of Melbourne
RP Salehi, MA (corresponding author), Colorado State Univ, Dept Elect & Comp Engn, Ft Collins, CO 80523 USA.
EM amini@engr.colostate.edu
RI Buyya, Rajkumar/C-3424-2009; Toosi, Adel N./H-7411-2019
OI Toosi, Adel N./0000-0001-5655-5337
CR Amar L, 2008, LECT NOTES COMPUT SC, V5206, P41, DOI 10.1007/978-3-540-85485-2_4
   [Anonymous], 2007, P 2 INT WORKSH VIRT
   Buyya R, 2005, SOFTWARE PRACT EXPER, V35, P491, DOI 10.1002/spe.646
   Chase JS, 2003, 12TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P90
   Coti C, 2006, P ACM IEEE C SUP US, P17
   de Assunçao MD, 2008, CONCURR COMP-PRACT E, V20, P997, DOI 10.1002/cpe.1249
   de Assunçao MD, 2008, LECT NOTES COMPUT SC, V5374, P157, DOI 10.1007/978-3-540-89894-8_17
   de Assuncao MD, 2009, INFORM SOFTWARE TECH, V51, P42, DOI 10.1016/j.infsof.2008.09.013
   Fontan J., 2008, OP SOURC GRID CLUST
   Hermenier F., 2010, P 19 ACM INT S HIGH, P658
   Iosup A., 2007, P 18 ACM IEEE C SUP, P13, DOI [10.1145/1362622.1362640, DOI 10.1145/1362622.1362640]
   Kivity A., 2007, P LIN S DTTAW DNTOR, V1, P225
   Lawson B. G., 2002, SIGMETRICS PERFORM E, V29, P40, DOI [DOI 10.1145/512840.512846, 10.1007/3-540-36180-4_5]
   MOORE J, 2002, MANAGING MIXED USE C
   Noronha Ranjit, 2008, 2008 37th International Conference on Parallel Processing (ICPP), P462, DOI 10.1109/ICPP.2008.84
   Novaes R, 2001, SCALABLE COMPUTING P, V6, P107
   Nurmi D, 2009, CCGRID: 2009 9TH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P124, DOI 10.1109/CCGRID.2009.93
   Ruth P., 2005, Proceedings of the IEEE International Conference on Cluster Computing, P1
   Salehi M. A., 2012, P 5 INT C CLOUD COMP
   Salehi M. Amini, 2011, P 34 AUSTR COMP SCI, P25
   SALEHI MA, 2012, P 26 INT C ADV INF N, P854
   SALEHI MA, 2011, P 11 INT C ALG ARCH, V7916, P419
   Salehi MA, 2012, J PARALLEL DISTR COM, V72, P231, DOI 10.1016/j.jpdc.2011.10.008
   Sandholm T, 2008, IEEE ACM INT SYMP, P277, DOI 10.1109/CCGRID.2008.82
   Snell QO, 2002, LECT NOTES COMPUT SC, V2537, P24
   Sodan A., 2010, J CLUSTER COMPUTING, V14, P1
   Sotomayor B., 2008, Proceedings of the 17th international symposium on High performance distributed computing, P87, DOI DOI 10.1145/1383422.1383434
   Sotomayor B, 2008, WORKSH CLOUD COMP IT, P3
   Sotomayor B, 2009, HPCC: 2009 11TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, P59, DOI 10.1109/HPCC.2009.17
NR 29
TC 8
Z9 9
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2014
VL 44
IS 3
SI SI
BP 353
EP 368
DI 10.1002/spe.2221
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA7KI
UT WOS:000331275900007
DA 2024-07-18
ER

PT J
AU Tajalli, H
   Medvidovic, N
AF Tajalli, Hossein
   Medvidovic, Nenad
TI iDARE-a reference architecture for integrated software environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE reference architecture; development environment; run-time environment;
   run-time tool; self-adaptation
AB Traditionally, software development environments have tended to treat a system's development-time activities separately from its run-time. After a system is in operation, it frequently needs to be maintained and evolved. In traditional environments, this results in frequent relocations of a system between the disjoint development and run-time environments, which is undesirable for several reasons. A more effective solution is to couple the development and run-time environments to directly monitor and adapt running systems. Given the growing need for interaction between development-time and run-time aspects of modern software systems, it is important to understand development and run-time environments, and their relationship. To this end, we study and classify a wide range of software development environments on the basis of their level of interaction with the corresponding run-time environments. Particularly, we identify, study, and characterize Self-Adaptive Life-cycle Environments (SALEs), an emerging class of modern development environments that are tightly integrated with run-time environments. We reify our study of the development environments into a novel reference architecture, iDARE, that captures and differentiates the architectures of software environments - from those, such as traditional development environments, that have no interaction with the run-time environments, to the ones, such as SALEs, that are tightly integrated with the run-time environments. We use iDARE to highlight several shortcomings of existing SALEs. Adherence to iDARE has the potential to improve certain quality properties of the integrated development and run-time environments, such as adaptability, fault-tolerance, robustness, availability, and resource consumption. We identify a number of opportunities for future research. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Tajalli, Hossein; Medvidovic, Nenad] Univ So Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
C3 University of Southern California
RP Tajalli, H (corresponding author), Univ So Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
EM tajalli@usc.edu
RI Tajalli, Habib/AAX-3028-2021
OI Tajalli, Habib/0000-0002-0660-5911
CR Archer Jr JE, 1986, 1 INT C ADA R PROGR, V12, P08
   Bellifemine Fabio., 2001, Intelligent Agents VII Agent Theories Architectures and Languages, volume 1986 of Lecture Notes in Computer Science, V1986, P42, DOI DOI 10.1007/3-540-44631-1_7
   BLOOM T, 1993, SOFTWARE ENG J, V8, P102, DOI 10.1049/sej.1993.0014
   Cheng S.-W, 2008, CMUISR08113
   COOK RP, 1983, SIGPLAN NOTICES, V18, P201, DOI 10.1145/1006142.1006188
   Dart SusanA., 1992, Overview of software development environments
   Dashofy E. M., 2007, THESIS U CALIFORNIA
   Dolotta T.A., 1984, Interactive Programming Environments, P353
   Dong MG, 2009, LECT NOTES ARTIF INT, V5925, P516, DOI 10.1007/978-3-642-11161-7_37
   DOWSON M, 1987, SIGPLAN NOTICES, V22, P27, DOI 10.1145/390012.24212
   Edwards G, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P142, DOI 10.1109/SEAMS.2009.5069083
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Georgas JC, 2008, THESIS U CALIFORNIA
   Georgas JohnC., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-Managed Systems, WOSS2004, P59, DOI DOI 10.1145/1075405.1075417
   Goldberg Adele., 1983, Proceedings of the 1983 computer science conference, CSC-83, P35
   High Rob., 2005, IBM SOA foundation: An architectural introduction and overview
   HOFMEISTER C, 1993, THESIS U MARYLAND CO
   Kaariainen J, 2011, THESIS U OULU
   Khare R, 2001, P 34 ANN HAW INT MAU, DOI 10.1109/HICSS.2001.927248
   MAGEE J, 1989, IEEE T SOFTWARE ENG, V15, P663, DOI 10.1109/32.24720
   Mancoridis Spiros., 1993, Proceedings of the 1993 ACM conference on Computer science,Indianapolis, Indiana, USA, CSC '93, P74, DOI DOI 10.1145/170791.170806
   Muller H. A., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P80, DOI 10.1109/ICSE.1988.93690
   *RET SYST, 1999, AG INT TOOLK CONSTR
   Ricordel P.-M., 2000, Engineering Societies in the Agents World. First International Workshop, ESAW 2000. Revised Papers (Lecture Notes in Artificial Intelligence Vol.1972), P93
   ROSS G, 1987, SIGPLAN NOTICES, V22, P42, DOI 10.1145/390012.24214
   Shi Zhongzhi., 2004, Proceedings of the 3rd IEEE International Conference on Cognitive Informatics, ICCI 2004, Victoria, Canada, P250
   SWINEHART DC, 1985, SIGPLAN NOTICES, V20, P230, DOI 10.1145/17919.806844
   Tajalli H., 2012, Proceedings 2012 2nd International Workshop on Developing Tools as Plug-ins (TOPI 2012), P19, DOI 10.1109/TOPI.2012.6229804
   Tajalli H., 2010, P IEEE ACM INT C AUT, P467, DOI DOI 10.1145/1858996.1859092
   TEITELMAN W, 1981, COMPUTER, V14, P25, DOI 10.1109/C-M.1981.220410
   THOMAS I, 1992, IEEE SOFTWARE, V9, P29, DOI 10.1109/52.120599
   Wei-Tek Tsai, 2006, Journal of Software, V17, P1470, DOI 10.1360/jos171470
NR 32
TC 2
Z9 2
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2014
VL 44
IS 3
SI SI
BP 299
EP 316
DI 10.1002/spe.2207
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA7KI
UT WOS:000331275900004
DA 2024-07-18
ER

PT J
AU Berbecaru, D
   Casalino, MM
   Lioy, A
AF Berbecaru, Diana
   Casalino, Matteo M.
   Lioy, Antonio
TI FcgiOCSP: a scalable OCSP-based certificate validation system exploiting
   the FastCGI interface
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE security; X; 509 certificate validation; scalable OCSP architecture; PKI
ID REVOCATION
AB Certificate validation, one of the most important and complex tasks in Public Key Infrastructures, is still a challenging topic nowadays because of the scalability and complexity issues related to this process. Validation of an X.509 certificate requires checking its revocation status, either by consulting the so-called Certificate Revocation Lists or by contacting a specific server via the Online Certificate Status Protocol (OCSP). Because more and more entities extensively need to validate the certificates used for various purposes (such as digital signature, server authentication, and secure e-mail), the OCSP servers become overloaded. Thus, an increasing effort is currently dedicated to the creation and management of scalable certificate validation architectures. In this work, we discuss scalability challenges in OCSP-based certificate validation, and we propose a method to evaluate the OCSP server performance in stress conditions. Next, we experimentally measure the performance, expressed in terms of response time and throughput, ofsome open-source OCSP implementations. Finally, we propose and evaluate our own scalable OCSP-based certificate validation system, named FcgiOCSP, as it exploits the FastCGI interface. Experimental results demonstrate the high performance of FcgiOCSP with respect to other OCSP implementations evaluated in this work. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Berbecaru, Diana; Casalino, Matteo M.; Lioy, Antonio] Politecn Torino, Dip Automat & Informat, I-10129 Turin, Italy.
C3 Polytechnic University of Turin
RP Berbecaru, D (corresponding author), Politecn Torino, Dip Automat & Informat, Cso Duca Abruzzi 24, I-10129 Turin, Italy.
EM diana.berbecaru@polito.it
RI Lioy, Antonio/AAA-5168-2019; Berbecaru, Diana/AAO-6554-2020
OI Lioy, Antonio/0000-0002-5669-9338; Berbecaru, Diana/0000-0003-1930-9473
CR Aiello W, 1998, LECT NOTES COMPUT SC, V1462, P137, DOI 10.1007/BFb0055725
   [Anonymous], 1994, ASN1 ITUT
   [Anonymous], 1998, RFC 2401
   [Anonymous], 2008, RFC5280
   [Anonymous], 2006, CORESTREET WHIT PAP
   [Anonymous], 2006, DISTR CERT VAL
   [Anonymous], MITLCSTM542B
   [Anonymous], P 1 ANN PKI RES WORK
   [Anonymous], 1998, LECT NOTES COMPUTER
   BERNERSLEE T, 1996, RFC1945
   DIERKS T., 2006, RFC4346
   FastCGI, 1996, TECHNICAL REPORT
   Fielding R., 1999, Tech. Rep
   Fujishiro T, 2010, P INT C ADV COMM TEC, V2, P1549
   Kabir MJ, APACHE SERVER 2 BIBL, V909
   Kikuchi H., 1999, Proceedings of the 1999 ICPP Workshops on Collaboration and Mobile Computing (CMC'99). Group Communications (IWGC). Internet '99 (IWI'99). Industrial Applications on Network Computing (INDAP). Multimedia Network Systems (MMNS). Security (IWSEC). Parallel Computing '99 (IWPC'99). Parallel Execution on Reconfigurable Hardware (PERH), P204, DOI 10.1109/ICPPW.1999.800063
   Mozilla Foundation, OCSP STAPL
   MUNOZ JL, 2004, INT J INF SECUR, V2, P110, DOI DOI 10.1007/S10207-003-0026-4
   Myers M., 1999, RFC2560
   Myers M, 2007, RFC4806
   Naor M, 2000, IEEE J SEL AREA COMM, V18, P561, DOI 10.1109/49.839932
   Robinson D, 2004, RFC3875
   Secure Hash Standard, FED REG, V59, P35211
   Secure Hash Standard, FED REG, V59, P39937
   Smith JE, 2005, COMPUTER, V38, P32, DOI 10.1109/MC.2005.173
   Tong-Lee L, 2008, LNCS, V5037, P392, DOI [10.1007/978-3-540-68914-0_24, DOI 10.1007/978-3-540-68914-0_]
NR 26
TC 4
Z9 4
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2013
VL 43
IS 12
SI SI
BP 1489
EP 1518
DI 10.1002/spe.2148
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 248JD
UT WOS:000326694500006
DA 2024-07-18
ER

PT J
AU Garg, SK
   Buyya, R
AF Garg, Saurabh Kumar
   Buyya, Rajkumar
TI An environment for modeling and simulation of message-passing parallel
   applications for cloud computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cloud computing; simulation and modeling; message-passing applications
ID TOOLKIT
AB As Cloud computing is becoming a mainstream platform, it has also become important to understand the implications on customers' applications or systems when deployed on Clouds. Therefore, simulation tools become a critical requirement that not only evaluate the performance of Clouds but also help in developing Cloud computing further. However, current simulation solutions for Clouds do not support many important application paradigms such as message-passing parallel applications. This limits the usage of these solutions to study the deployment of many scientific applications on Clouds. In this paper, after recognizing the needs and requirements of the Cloud research and development community, we propose a Cloud simulation environment with a scalable network and message-passing application model that allows accurate evaluation of scheduling and resource provisioning policies and thus helps in optimizing the performance of a Cloud infrastructure. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Garg, Saurabh Kumar] IBM Res Australia, Melbourne, Vic, Australia.
   [Buyya, Rajkumar] Univ Melbourne, Dept Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic, Australia.
C3 IBM Research - Australia; University of Melbourne
RP Buyya, R (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic, Australia.
EM raj@csse.unimelb.edu.au
RI Garg, Saurabh/J-7802-2014; Buyya, Rajkumar/C-3424-2009
OI Garg, Saurabh Kumar/0000-0001-8719-284X
FU Australian Research Council (ARC)
FX The authors would like to thank Anton Beloglazov, Rodrigo Calheiros,
   Ruppa Thulasiram, and Parimala Thulasiraman for their guidance during
   the development of NetworkCloudSim reported in this paper, which is a
   substantially extended version of our earlier conference paper [25].
   This work is carried out as part of a project funded by the Australian
   Research Council (ARC).
CR Al-Fares M, 2008, ACM SIGCOMM COMP COM, V38, P63, DOI 10.1145/1402946.1402967
   [Anonymous], FUTURE GENERATION CO
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Broberg J, 2009, GRID COMPUTING INFRA
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1175, DOI 10.1002/cpe.710
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Casanova H, 2005, INT J FOUND COMPUT S, V16, P145, DOI 10.1142/S0129054105002929
   Casanova H, 2001, FIRST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P430, DOI 10.1109/CCGRID.2001.923223
   Ekanayake Jaliya., 2009, INT C CLOUD COMPUTIN, P20
   Evangelinos Constantinos, 2008, CCA- 08, V2, P2
   Garg S. K., 2011, Proceedings of the 2011 IEEE 4th International Conference on Utility and Cloud Computing (UCC 2011), P105, DOI 10.1109/UCC.2011.24
   Greenberg A, 2009, ACM SIGCOMM COMP COM, V39, P51, DOI 10.1145/1594977.1592576
   Kandalla K. C., 2010, 10 WORKSH COMM ARCH
   Kliazovich D, 2012, J SUPERCOMPUT, V62, P1263, DOI 10.1007/s11227-010-0504-1
   Lim S., 2009, ICIS 2009 P, V91, P1
   Liu HK, 2009, HPDC'09: 18TH ACM INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, P101
   Miguel-Alonso J, 2009, INT J PARALLEL PROG, V37, P153, DOI 10.1007/s10766-008-0089-y
   Napper J, 2009, UCHPC-MAW09: UNCONVENTIONAL HIGH PERFORMANCE COMPUTING/MEMORY ACCESS: IS THE MEMORY FIT FOR MANYCORE?, P17
   Nuñez A, 2011, LECT NOTES COMPUT SC, V6784, P582
   Núñez A, 2010, J SUPERCOMPUT, V51, P40, DOI 10.1007/s11227-009-0279-4
   Shainer G., 2009, Cluster Computing and Workshops, P1
   Varga A., 2001, P EUR SIM MULT SIM M
   Varia J., 2011, Cloud Computing Principles and Paradigms, P459, DOI 10.1002/9780470940105.ch18
   White T., 2010, Hadoop: The definitive guide
NR 25
TC 8
Z9 9
U1 0
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2013
VL 43
IS 11
SI SI
BP 1359
EP 1375
DI 10.1002/spe.2156
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 233IF
UT WOS:000325561000007
DA 2024-07-18
ER

PT J
AU Bedi, P
   Gandotra, V
   Singhal, A
   Narang, H
   Sharma, S
AF Bedi, Punam
   Gandotra, Vandana
   Singhal, Archana
   Narang, Himanshi
   Sharma, Sumit
TI Threat-oriented security framework in risk management using multiagent
   system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE threat-oriented security model; research honeytokens; statistical model;
   proactive risk management; multiagent system planning; meta-agents;
   fuzzy logic
AB Present day sophisticated and innovative attacks have resulted in exponentially increasing security problems. This paper therefore presents a three-phased threat-oriented security model to meet the above security challenges as a part of proactive risk management. This model is based on a spiral process for software development because it is a risk driven approach and provides an incremental method for a progressively growing system with decreasing risk. Integration of threat management during the development process in the proposed work provides necessary security cover against both unforeseen and known threats. Identification of these threats has been made possible by fusion of a threat modeling process and research honeytokens in conjunction with a statistical model in the first phase. Necessary security measures to mitigate the above identified threats have been adopted in the second phase using multiagent system planning. Risk reduction as a result of adoption of countermeasures has been evaluated in the third phase using meta-agents in association with fuzzy logic in a multiagent environment. The proposed proactive measures of this model have been demonstrated with a case study on 'Online Banking' to show its feasibility and has been implemented using Java Agent Development Environment, Apache Tomcat Server, with MySQL Server at the backend. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Bedi, Punam; Gandotra, Vandana; Singhal, Archana; Narang, Himanshi; Sharma, Sumit] Univ Delhi, Dept Comp Sci, Delhi 110007, India.
C3 University of Delhi
RP Gandotra, V (corresponding author), Univ Delhi, Dept Comp Sci, Delhi 110007, India.
EM vandanarla@yahoo.co.in
RI Bedi, Punam/GSN-6167-2022; BEDI, PUNAM/A-9474-2010
OI BEDI, PUNAM/0000-0002-6007-7961; Singhal, Prof.
   Archana/0000-0003-2702-5518
CR [Anonymous], FUZZY SETS FUZZY LOG
   [Anonymous], P IEEE 2 INT C COMP
   [Anonymous], INFORM SYSTEMS SECUR
   [Anonymous], REPORT FINANCIAL FRA
   [Anonymous], THESIS GEORGIA I TEC
   [Anonymous], 2006, Fundamentals of Database Systems
   [Anonymous], 2010, SYMANTEC GLOBAL INTE, VXV
   [Anonymous], WINDOW SYNDER THREAT
   [Anonymous], INFORM SECURITY J GL
   [Anonymous], ACM COMPUTER J
   [Anonymous], P REC ADV INTR DET R
   [Anonymous], THESIS SWEDEN
   [Anonymous], SEM MULT SYST ACT MA
   [Anonymous], WHIT PAP ONL BANK TH
   Bedi P, 2009, LECT NOTES ARTIF INT, V5796, P709
   Butler ShawnA., 2002, ICSE 2002 P 24 INT C, P232, DOI DOI 10.1145/581339.581370
   Dasgupta Dipankar, 2007, Information Security Technical Report, V12, P235, DOI 10.1016/j.istr.2007.10.002
   Davis Noopur, 2005, Secure Software Development Life Cycle Processes: A Technology Scouting Report
   Essafi Mehrez, 2007, 2007 International Conference on Emerging Security Information, Systems and Technologies, P181
   Essafi M., 2007, International Conference on Software Engineering Advances (ICSEA 2007), P24
   Futcher L., 2008, Proceedings of the 2008 Annual Research Conference of the South African Institute of computer Scientists and Information Technologists, V338, P56, DOI DOI 10.1145/1456659.1456667
   Gandotra V., 2011, ACM SIGSOFT SOFTWARE, V36, P1
   Gandotra V, 2009, 2009 INTERNATIONAL CONFERENCE ON ADVANCES IN RECENT TECHNOLOGIES IN COMMUNICATION AND COMPUTING (ARTCOM 2009), P719, DOI 10.1109/ARTCom.2009.38
   Gandotra V, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P407, DOI 10.1109/ICSEA.2009.65
   Hein D, 2009, INF SECUR J, V18, P8, DOI 10.1080/19393550802623206
   Howard M., 2003, Writing Secure Code
   Lipner S., 2004, Proceedings. 20th Annual Computer Security Applications Conference, P2
   McGraw G., 2006, ADDISON WESLEY SOFTW
   Moradian E, 2008, LECT NOTES ARTIF INT, V4953, P122, DOI 10.1007/978-3-540-78582-8_13
   Moradian E, 2010, LECT NOTES ARTIF INT, V6279, P98, DOI 10.1007/978-3-642-15384-6_11
   Myagmar S., 2005, THREAT MODELING BASI
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Schneier B, 1999, DR DOBBS J, V24, P21
   Sindre G, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P120, DOI 10.1109/TOOLS.2000.891363
   Spitzner L., 2003, P 19 ANN COMP SEC AP, P170, DOI DOI 10.1109/CSAC.2003.1254322
   Spitzner L., 2002, Honeypots, "Tracking Hackers,"
   Wang Y., 2008, STAT TECHNIQUES NETW
   White J, 2010, INNOVATIONS AND ADVANCES IN COMPUTER SCIENCES AND ENGINEERING, P227, DOI 10.1007/978-90-481-3658-2_39
   Xu DX, 2006, IEEE T SOFTWARE ENG, V32, P265, DOI 10.1109/TSE.2006.40
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
NR 40
TC 11
Z9 11
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2013
VL 43
IS 9
SI SI
BP 1013
EP 1038
DI 10.1002/spe.2133
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 195OH
UT WOS:000322712200001
OA Bronze
DA 2024-07-18
ER

PT J
AU Liu, YP
   Zhu, H
AF Liu, Yongpeng
   Zhu, Hong
TI A survey of the research on power management techniques for
   high-performance systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE high-performance systems; commercial clusters; power management; metrics
   of power consumption efficiency; energy consumption profiling;
   high-performance computing; virtual machine
AB This paper surveys the research on power management techniques for high-performance systems. These include both commercial high-performance clusters and scientific high-performance computing (HPC) systems. Power consumption has rapidly risen to an intolerable scale. This results in both high operating costs and high failure rates so it is now a major cause for concern. It has imposed new challenges to the development of high-performance systems. In this paper, we first review the basic mechanisms that underlie power management techniques. Then we survey two fundamental techniques for power management: metrics and profiling. After that, we review the research for the two major types of high-performance systems: commercial clusters and supercomputers. Based on this, we discuss the new opportunities and problems presented by the recent adoption of virtualization techniques, and again we present the most recent research on this. Finally, we summarize and discuss the future research directions. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Zhu, Hong] Oxford Brookes Univ, Sch Technol, Oxford OX3 0BP, England.
   [Liu, Yongpeng] Natl Univ Def Technol, Sch Comp, Changsha, Peoples R China.
C3 Oxford Brookes University; National University of Defense Technology -
   China
RP Zhu, H (corresponding author), Oxford Brookes Univ, Sch Technol, Oxford OX3 0BP, England.
EM hzhu@brookes.ac.uk
RI Zhu, Hong/B-3231-2011
OI Zhu, Hong/0000-0001-9393-5005
CR [Anonymous], HPL200759
   [Anonymous], 2007, PUBLIC LAW
   [Anonymous], P 21 ACM SIGOPS S OP
   [Anonymous], DCSTR440 RUTG U
   [Anonymous], 2005, P ACM SIGPLAN S PRIN
   [Anonymous], P 19 IEEE INT PAR DI
   [Anonymous], 2007, CALC MEM SYST POW DD
   [Anonymous], DCSTR528 RUTG U
   APC (American Power Conversion), 2003, DET TOT COST OWN DAT
   BELADY C, 2007, 6 PUE DCIE
   BELLOSA F, 2003, P 4 WORKSH COMP OP S
   BELLOSA F, 2000, P 9 WORKSH ACM SIGOP, P37, DOI DOI 10.1145/566726.566736
   BELLOSA F, 2001, TR140107 U ERL DEP C
   BIRCHER W, 2004, TR04110401 U TEX
   BRILL K, 2007, TUI3004D UPT I
   Brockmeyer E, 2003, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, PROCEEDINGS, P1070
   Brooks D, 2000, PROCEEDING OF THE 27TH INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE, P83, DOI [10.1145/342001.339657, 10.1109/ISCA.2000.854380]
   Carrera E.V., 2003, Proceedings of the 17th annual international conference on Supercomputing, ICS '03, P86
   CHANG F, 2002, P WORKSH POW AW COMP, P110
   CHASE J.S., 2001, P 19 ACM S OPERATING, P103
   Chen Y, 2005, IN C IND ENG ENG MAN, P303, DOI 10.1145/1064212.1064253
   Choi K, 2004, ISLPED '04: PROCEEDINGS OF THE 2004 INTERNATIONAL SYMPOSIUM ON LOW POWER ELECTRONICS AND DESIGN, P174, DOI 10.1145/1013235.1013282
   Clark C, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI '05), P273
   Colarelli Dennis., 2002, SUPERCOMPUTING 02, P1, DOI DOI 10.1109/SC.2002.10058
   DASH R, 2008, P 7 INT JOINT C AUT, P107
   ENGELMANN C, 2007, P 1 WORKSH SYST LEV
   Fan XB, 2007, CONF PROC INT SYMP C, P13, DOI 10.1145/1273440.1250665
   Femal ME, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P250
   FENG W, 2003, ACM QUEUE, V1, P54
   FIGUEIREDO R, 2003, P 23 INT C DISTR COM, P550, DOI DOI 10.1109/ICDCS.2003.1203506
   Flinn J, 1999, WMCSA '99, SECOND IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P2, DOI 10.1109/MCSA.1999.749272
   Ge R., 2005, P ACMIEEE SC C SUPER, P34
   Ge R, 2007, INT CONF PARA PROC, P147
   Gurumurthi S, 2003, CONF PROC INT SYMP C, P169, DOI 10.1109/ISCA.2003.1206998
   Gurumurthi S, 2002, EIGHTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE, PROCEEDINGS, P141
   Heath T., 2005, P 10 ACM SIGPLAN S P, P186, DOI [DOI 10.1145/1065944.1065969.(AVAILABLE, 10.1145/1065944.1065969]
   HEATH T., 2006, P 12 INT C ARCHITECT, P106
   *HEWL PACK INT MIC, 2009, ADV CONF POW INT SPE
   Horvath T, 2007, IEEE T COMPUT, V56, P444, DOI 10.1109/tc.2007.1003
   Horvath T, 2008, PACT'08: PROCEEDINGS OF THE SEVENTEENTH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P270, DOI 10.1145/1454115.1454153
   HSU C, 2005, P 19 IEEE INT PAR DI, V12
   Hsu Chung-Hsing., 2005, CLUSTER, P1, DOI DOI 10.1109/SC.2005.3
   Hu CL, 2007, LECT NOTES COMPUT SC, V4367, P183
   Huang Wei., 2006, Proceedings of the 20th annual international conference on Supercomputing, ICS '06, P125, DOI DOI 10.1145/1183401.1183421
   *INT, 2009, WHAT DIFF DEEP DEEP
   *INT, 2009, INT 64 IA 32 ARCH A, V3
   Isci C, 2003, 36TH INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, PROCEEDINGS, P93
   Isci C, 2006, INT S HIGH PERF COMP, P122, DOI 10.1109/HPCA.2006.1598119
   Joseph R, 2001, WORKSH COMPL EFF DES
   Kappiah N., 2005, PROC INT C HIGH PERF, P33, DOI DOI 10.1109/SC.2005.39
   KOCH K, 2006, CELL WORKSH U TENN 2
   Lefurgy C, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1250880
   Lefurgy Charles., 2007, ICAC 07 P 4 INT C AU, P4
   Lim K, 2008, CONF PROC INT SYMP C, P315, DOI 10.1109/ISCA.2008.37
   Lim M. Y., 2006, SC 2006 Proceedings Supercomputing 2006
   *LLNL HP BULL, 2009, SIMPL LIN UT RES MAN
   Lu K, 2009, LECT NOTES COMPUT SC, V5737, P205
   MALKOWSKI K, 2007, P INT S LOW POW EL D, P403
   MARTONOSI M, 2001, P JOINT INT C MEAS M
   Mergen M. F., 2006, Operating Systems Review, V40, P8, DOI 10.1145/1131322.1131328
   MEUER H, 2009, TOP500 LIST
   Milojicic DS, 2000, ACM COMPUT SURV, V32, P241, DOI 10.1145/367701.367728
   Moore J., 2005, P ANN C USENIX ANN T, P5
   Najm F. N., 1994, IEEE Transactions on Very Large Scale Integration (VLSI) Systems, V2, P446, DOI 10.1109/92.335013
   *OPENVZ, 2009, PAR
   Pandey V, 2006, INT S HIGH PERF COMP, P134, DOI 10.1109/HPCA.2006.1598120
   *PCI SIG, 2004, PCI BUS POW MAN INT
   Penzes P. I., 2002, GLSVLSI '02. Proceedings of the 12th ACM Great Lakes Symposium on VLSI, P104, DOI 10.1145/505306.505330
   Petrini F, 2004, 12TH ANNUAL IEEE SYMPOSIUM ON HIGH PERFORMANCE INTERCONNECTS, PROCEEDINGS, P3
   Pinheiro E., 2004, INT C SUPERCOMPUTING, P68, DOI DOI 10.1145/1006209.1006220
   PINHEIRO E, 2006, P JOINT INT C MEAS M, P15, DOI DOI 10.1145/1140277.1140281
   Pratt I., 2005, LINUX S, V2, P65
   RAJAMONY R, 2002, P 16 ANN ACM INT C S, P165
   Ranganathan P, 2006, CONF PROC INT SYMP C, P66, DOI 10.1145/1150019.1136492
   Rosenblum M, 2005, COMPUTER, V38, P39, DOI 10.1109/MC.2005.176
   Rountree B, 2009, ICS'09: PROCEEDINGS OF THE 2009 ACM SIGARCH INTERNATIONAL CONFERENCE ON SUPERCOMPUTING, P460, DOI 10.1145/1542275.1542340
   Sharma S., 2006, Proceedings of 20th IEEE International Parallel and Distributed Processing Symposium, P343
   Skadron K, 2002, EIGHTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE, PROCEEDINGS, P17
   Skadron K., 2004, ACM Trans. Archit. Code Optim, V1, P94
   Smith JE, 2005, COMPUTER, V38, P32, DOI 10.1109/MC.2005.173
   SNOWDON D, 2005, P 1 WORKSH OP SYST P
   Soltesz Stephen, 2007, P 2 ACM SIGOPS EUROS, P275, DOI [10.1145/1272996.1273025, DOI 10.1145/1272996.1273025]
   STOESS J, 2007, P GI ITG FACHGR BETR, P3
   Stoess J, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 2007 USENIX ANNUAL TECHNICAL CONFERENCE, P1
   *SUN, 2004, SOL CONT SERV VIRT M
   The Message Passing Interface Forum, 2008, MPI MESS PASS INT ST
   Venkatachalam V, 2005, ACM COMPUT SURV, V37, P195, DOI 10.1145/1108956.1108957
   VERMA A, 2008, P 22 ANN INT C SUP I, P175
   Verma A, 2008, LECT NOTES COMPUT SC, V5346, P243, DOI 10.1007/978-3-540-89856-6_13
   *VMWARE, 2007, WP028PRD0101 VMWARE
   Wang AH, 2008, J SOC INF DISPLAY, V16, P101, DOI 10.1889/1.2835014
   Weissel A., 2002, P 2002 INT C COMPILE, P238
   Zong ZL, 2007, INT CONF PARA PROC, P155
   2008, LINUX
NR 94
TC 43
Z9 52
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2010
VL 40
IS 11
BP 943
EP 964
DI 10.1002/spe.952
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 663SU
UT WOS:000282911000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Campanoni, S
   Agosta, G
   Reghizzi, SC
   Di Biagio, A
AF Campanoni, Simone
   Agosta, Giovanni
   Reghizzi, Stefano Crespi
   Di Biagio, Andrea
TI A highly flexible, parallel virtual machine: design and experience of
   ILDJIT
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic adaptation; CIL dynamic compiler; parallel virtual machine
ID COMPILER
AB ILDJIT, a new-generation dynamic compiler and Virtual machine designed to support parallel compilation, is introduced here. Our dynamic compiler targets the increasingly popular ECMA-335 specification. The goal of this project is twofold: oil one hand, it aims at exploiting the parallelism exposed by multi-core architectures to hide the dynamic compilation latencies by pipelining compilation and execution tasks; on the other hand, it provides a flexible, modular and adaptive framework for dynamic code optimization. The ILDJIT organization and the compiler design choices are presented and discussed highlighting how adaptability and extensibility can be achieved. Thanks to the compilation latency masking effect of the pipeline organization, Our dynamic compiler is able to mask most of the compilation delay, when the underlying hardware exposes sufficient parallelism. Even when running oil a single core, the ILDJIT adaptive optimization framework manacles to speedup the computation with respect to other open-source implementations of ECMA-335. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Campanoni, Simone; Agosta, Giovanni; Reghizzi, Stefano Crespi; Di Biagio, Andrea] Politecn Milan, I-20133 Milan, Italy.
C3 Polytechnic University of Milan
RP Campanoni, S (corresponding author), Politecn Milan, Piazza Leonardo da Vinci 32, I-20133 Milan, Italy.
EM campanoni@elet.polimi.it
RI Campanoni, Simone/I-2259-2015
OI Agosta, Giovanni/0000-0002-0255-4475; Campanoni,
   Simone/0000-0001-9806-7016
FU European Commission
FX This is a large multiyear project and several individuals have
   contributed or are working on it, within the Formal Language and
   Compiler Group. In particular we Would like to credit Michele Tartara
   for the ARM support, and Ettore Speziale for his contribution to the
   support of the CIL delegates. Marco Comero and Erven Rohou and the whole
   compiler team of ST Microelectronics, have stimulated our commitment to
   free software development of dynamic compilation platforms. Finally, we
   acknowledge the contributions of the students of Politeenico di Milano,
   too many to be individually remembered. Supported in part by the
   European Commission under Framework Programme 7. OpenMedia Platform
   project.
CR ADAMS K, 2006, ASPLOS 12, P2
   AGOSTA G, 2006, P 4 INT WORKSH JAV T, P170
   Anderson K. R., 1994, ACM SIGPLAN LISP POI, V7, P2
   [Anonymous], P INT WORKSH MEM MAN
   ARNOLD M, 2000, OOPSLA, P47, DOI DOI 10.1145/353171.353175.ISBN:I-58113-200-X
   Aycock J, 2003, ACM COMPUT SURV, V35, P97, DOI 10.1145/857076.857077
   BACON D.F., 1998, PLDI 98, P258
   BACON DF, 1994, ACM COMPUT SURV, V26, P345, DOI 10.1145/197405.197406
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   Bull M., 2000, Proceedings of the Second International Conference on the Practical Application of Java, P63
   Campanoni S, 2008, ACM SIGPLAN NOTICES, V43, P11, DOI 10.1145/1374752.1374754
   Campanoni S, 2009, LECT NOTES COMPUT SC, V5501, P220, DOI 10.1007/978-3-642-00722-4_16
   Cierniak M, 2005, CONCURR COMP-PRACT E, V17, P617, DOI 10.1002/cpe.852
   COSTA R, 2007, GCC4NET
   Dehnert JC, 2003, INT SYM CODE GENER, P15
   DELCAZA M, 2008, MONODOCUMENLATION
   DEVANEY RL, 1997, CHAOS FRACTALS MATH
   Duesterwald E, 2003, COMPILER DESIGN HANDBOOK, P739
   DUSSAUD E, 2002, HUNDRED DIGIT CHALLE
   Ebcioglu K, 2001, IEEE T COMPUT, V50, P529, DOI 10.1109/12.931892
   *ECMA, 2006, ECMA335, P556
   FURSIN G, 2009, P GCC DEV SUMM MONTR, P41
   Gamma E., 1995, DESIGN PATTERNS ELEM, P416
   GOETZ B, 2006, AWP011010 AZ SYST IN, P12
   Guthaus MR, 2001, WWC-4: IEEE INTERNATIONAL WORKSHOP ON WORKLOAD CHARACTERIZATION, P3, DOI 10.1109/WWC.2001.990739
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Krintz CJ, 2001, SOFTWARE PRACT EXPER, V31, P717, DOI 10.1002/spe.384
   Kulkarni P, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P94
   LEE PA, 1983, SOFTWARE PRACT EXPER, V13, P389, DOI 10.1002/spe.4380130502
   Paleczny M, 2001, USENIX ASSOCIATION PROCEEDINGS JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P1
   Pereira FMQ, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P216
   Proebsting TA, 1997, PROCEEDINGS OF THE THIRD USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS), P41
   Reddi VJ, 2009, DES AUT CON, P788
   REDDI VJ, 2009, SELSE09, P4
   STEVENS WR, 2003, UNIX NETWORK PROGRAM, V1, P1009
   Suganuma T, 2006, ACM T PROGR LANG SYS, V28, P134, DOI 10.1145/1111596.1111600
   Sundaresan V, 2006, INT SYM CODE GENER, P87
   TARTARA M, 2009, ICOOOLPS 09 P 4 WORK, P70
   Thomas G, 2008, SOFTWARE PRACT EXPER, V38, P1643, DOI 10.1002/spe.887
   2006, BEA JIOCKIT JAVA ENT
   2008, COMPUTER LANGUAGE BE
NR 41
TC 6
Z9 9
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2010
VL 40
IS 2
BP 177
EP 207
DI 10.1002/spe.950
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 561AE
UT WOS:000274946400004
DA 2024-07-18
ER

PT J
AU Pervez, S
   Gopalakrishnan, G
   Kirby, RM
   Thakur, R
   Gropp, W
AF Pervez, Salman
   Gopalakrishnan, Ganesh
   Kirby, Robert M.
   Thakur, Rajeev
   Gropp, William
TI Formal methods applied to high-performance computing software design: a
   case study of MPI one-sided communication-based locking
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE concurrent programming; formal verification; model checking; race
   condition; SPIN; dynamic analysis; high-performance computing (HPC);
   Message Passing Interface (MPI); one-sided communication
ID VERIFICATION; CORRECTNESS; PROGRAMS; CHECKING
AB There is a growing need to address the complexity of verifying the numerous concurrent protocols employed in the high-performance Computing software. Today's approaches for verification consist of testing detailed implementations of these protocols. Unfortunately, this approach can seldom show the absence of bugs, and often results in serious bugs escaping into the deployed software. An approach called Model Checking has been demonstrated to be eminently helpful in debugging these protocols early in the software life cycle by offering the ability to represent and exhaustively analyze simplified formal protocol models. The effectiveness of model checking has yet to be adequately demonstrated in high-performance computing. This paper presents a case study of a concurrent protocol that was thought to be sufficiently well tested, but proved to contain two very non-obvious deadlocks in them. These bugs were automatically detected through model checking. The protocol models in which these bugs were detected were also easy to create. Recent work in Our group demonstrates that even this tedium of model creation can be eliminated by employing dynamic source-code-level analysis methods. Our case study comes from the important domain of Message Passing Interface (MPI)-based programming, which is universally employed for simulating and predicting anything from the structural integrity of combustion chambers to the path of hurricanes. We argue that model checking must be taught as well as used widely within HPC, given this and similar success stories. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Gopalakrishnan, Ganesh; Kirby, Robert M.] Univ Utah, Sch Comp, Salt Lake City, UT 84112 USA.
   [Pervez, Salman] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
   [Thakur, Rajeev] Argonne Natl Lab, Div Math & Comp Sci, Argonne, IL 60439 USA.
   [Gropp, William] Univ Illinois, Dept Comp Sci, Urbana, IL 61801 USA.
C3 Utah System of Higher Education; University of Utah; Purdue University
   System; Purdue University; United States Department of Energy (DOE);
   Argonne National Laboratory; University of Illinois System; University
   of Illinois Urbana-Champaign
RP Gopalakrishnan, G (corresponding author), Univ Utah, Sch Comp, Salt Lake City, UT 84112 USA.
EM ganesh@cs.utah.edu
RI Gropp, William/AGG-8399-2022
OI Gropp, William/0000-0003-2905-3029; Thakur, Rajeev/0000-0002-5532-3048
FU NSF [CNS-0509379, CCF-0811429]; Office of Advanced Scientific Computing;
   Office of Science; U.S. Department of Energy [DE-FG02-08ER25835]
FX Contract/grant sponsor: NSF; contract/grant numbers: CNS-0509379,
   CCF-0811429; Contract/grant sponsor: Office of Advanced Scientific
   Computing; Contract/grant sponsor: Office of Science; Contract/grant
   sponsor: U.S. Department of Energy; contract/grant number:
   DE-FG02-08ER25835
CR Ahamad M., 1993, Proceedings of the fifth annual ACM Symposium on Parallel Algorithms and Architectures, P251
   [Anonymous], ICPP
   [Anonymous], 2006, Proceedings of the 2006 International Symposium on Software Testing and Analysis (ISSTA), DOI [10.1145/1146238.1146256, DOI 10.1145/1146238.1146256]
   [Anonymous], P PAR COMP C DRESD S
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Ball S, 2004, ADV GEOM, V4, P1, DOI 10.1515/advg.2004.004
   Chou CT, 2004, LECT NOTES COMPUT SC, V3312, P382
   Clarke EM, 1999, MODEL CHECKING, P1
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   Gropp W., 1999, Using MPI-2: Advanced Features of the Message Passing Interface, Vsecond
   Hill JMD, 1998, FUTURE GENER COMP SY, V13, P327, DOI 10.1016/S0167-739X(97)00034-4
   Krammer B, 2006, LECT NOTES COMPUT SC, V4192, P105
   Li GD, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P283, DOI 10.1145/1345206.1345257
   Matlin OS, 2002, LECT NOTES COMPUT SC, V2318, P213
   *MESS PASS INT FOR, 1998, INT J HIGH PERFORM C, V12, P1
   MPI Forum, 2009, Tech. Rep.
   Musuvathi M., 2002, P 5 S OP SYST DES IM
   Musuvathi M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P446, DOI 10.1145/1250734.1250785
   PALMER R., 2007, ACM workshop on Parallel and Distributed Dystems, P43
   Palmer R, 2008, LECT NOTES COMPUT SC, V4916, P164
   Pervez S, 2007, LECT NOTES COMPUT SC, V4757, P344
   Pervez S, 2006, LECT NOTES COMPUT SC, V4192, P30
   PETERSON GL, 1981, INFORM PROCESS LETT, V12, P115, DOI 10.1016/0020-0190(81)90106-X
   Queille J.-P., 1982, ser. Lecture Notes in Computer Science, P337, DOI [DOI 10.1007/3-540-11494-722, DOI 10.1007/3-540-11494-7_22, 10 . 1007 / 3 - 540 - 11494-7_22]
   Quinlan D.J., 2007, PADTAD '07: Proceedings of the 2007 ACMWorkshop on Parallel and Distributed Systems, P27
   Sharma S, 2008, LECT NOTES COMPUT SC, V5205, P265, DOI 10.1007/978-3-540-87475-1_36
   Siegel SF, 2004, LECT NOTES COMPUT SC, V2989, P286
   Siegel SF, 2007, LECT NOTES COMPUT SC, V4349, P44
   Siegel SF, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348256
   Thakur R, 2005, LECT NOTES COMPUT SC, V3666, P119
   Vakkalanka S, 2008, LECT NOTES COMPUT SC, V5205, P248, DOI 10.1007/978-3-540-87475-1_34
   Vakkalanka S, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P285, DOI 10.1145/1345206.1345258
   Vakkalanka S, 2008, LECT NOTES COMPUT SC, V5123, P66
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   Vo A, 2009, ACM SIGPLAN NOTICES, V44, P261, DOI 10.1145/1594835.1504214
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 54
TC 2
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2010
VL 40
IS 1
BP 23
EP 43
DI 10.1002/spe.946
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 544OA
UT WOS:000273666300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hammouda, I
   Ruokonen, A
   Slikarla, M
   Santos, AL
   Koskimies, K
   Systä, T
AF Hammouda, Imed
   Ruokonen, Anna
   Slikarla, Mika
   Santos, Andre L.
   Koskimies, Kai
   Systa, Tarja
TI Design profiles: toward unified tool support for design patterns and UML
   profiles
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE UML profiles; software patterns; model generation and validation; tool
   support
AB In the current trend of software engineering, patterns and profiles lend themselves as two powerful complementary mechanisms for documenting and enforcing design rules. In this paper, we study how unified tool support can be achieved for patterns and profiles by interpreting them as role-based structural descriptions and exploiting existing tool support for role modeling. The approach is realized using so-called design profiles, which allow both validation and generation of models according to rules expressed in the patterns and profiles. A prototypical tool environment supporting the approach has been developed. The practical applicability of the approach is demonstrated by specifying design rules of the enterprise Java beans (EJB) platform and by producing an environment for designing EJB-based applications. We also discuss possible usage scenarios in the context of this case study. Copyright (c) 2008 John Wiley & Sons, Ltd.
C1 [Hammouda, Imed; Ruokonen, Anna; Slikarla, Mika; Santos, Andre L.; Koskimies, Kai; Systa, Tarja] Tampere Univ Technol, Dept Software Syst, FI-33101 Tampere, Finland.
C3 Tampere University
RP Hammouda, I (corresponding author), Tampere Univ Technol, Dept Software Syst, POB 553, FI-33101 Tampere, Finland.
EM imed.hammouda@tut.fi
RI L. Santos, Andre/B-3479-2012
OI L. Santos, Andre/0000-0002-8247-7413
CR Alur D., 2001, Core J2EE patterns: Best practices and design strategies, V1st
   [Anonymous], 2004, Software Factories
   BACK RJR, 1989, DISTRIB COMPUT, V3, P73, DOI 10.1007/BF01558665
   COPLIEN JO, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P183
   CORNILS A, 2001, THESIS U AARHUS
   Dong J, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P123
   Florijn G, 1997, LECT NOTES COMPUT SC, V1241, P472, DOI 10.1007/BFb0053391
   Fowler M., 1997, ANAL PATTERNS
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Hammouda I., 2002, Nordic Journal of Computing, V9, P248
   Hammouda I, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P78, DOI 10.1109/ASE.2004.1342726
   HAMMOUDA I, 2007, P ICALT 2007 JUL 200, P335
   HAMMOUDA I, 2005, P FASE 2005 BERL, P145
   HAMMOUDA I, 2007, P SC 2007 BRAG PORT
   *I LOG, 2008, RHAPS
   *I SOFTW INT SYST, 2008, GME GEN MOD ENV
   *IBM RAT SOFTW, 2008, RAT XDE
   *INARI, 2008, INARI GUID
   Koskinen J, 2006, INT C PROGRAM COMPRE, P212, DOI 10.1109/ICPC.2006.37
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   LEPUS EA, 2002, P IDPT 2002 PAS CA U
   Marinescu F., 2002, EJB DESIGN PATTERNS
   MEIJLER TD, 1997, P ESEC FSE, P94
   *METACASE CONS, 2008, DOM SPEC MOD METAEDI
   MEUNIER JN, 2003, P SVERTS 2003 COL UM
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   MOWBRAY T, 1997, CORBA DEISGN PATTERN
   Ober I., 2006, International Journal on Software Tools for Technology Transfer, V8, P128, DOI 10.1007/s10009-005-0205-x
   OBER I, 2006, DAGST WORKSH MBEES 2
   *OMG, 2008, MDA GUID VERS 1 0 1
   *OMG, 2008, REQ UML PROF
   *OMG, 2008, UML TEST PROF
   *OMG, 2008, UML PROF CORBA V1 0
   *OMG, 2008, UML SUP SPEC V2 1 2
   Ortigosa A, 1999, TOOLS, V29, P131, DOI 10.1109/TOOLS.1999.779006
   *PRACTISE RES GROU, 2008, INARI INT ARCH ENV
   *RAT SOFTW, 2008, RAT SOFTW ARCH
   *RAT SOFTW CORP, 2008, EJB MAPP SPEC UML PR
   Riehle D., 2000, THESIS U HAMBURG
   Selonen P., 2004, Nordic Journal of Computing, V11, P235
   SELONEN P, 2003, P 9 EUR SOFTW ENG C, P58
   *SUN MICROSYSTEMS, 2005, ENT JAVABEANS TM SPE
   VANHATUPA JM, 2007, P NW MODE 2007 RONN
   WENZEL S, 2005, NORDIC J COMPUTING, V12, P361
NR 44
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR 25
PY 2009
VL 39
IS 4
BP 331
EP 354
DI 10.1002/spe.893
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 421JC
UT WOS:000264354200001
DA 2024-07-18
ER

PT J
AU Dementiev, R
   Kettner, L
   Sanders, P
AF Dementiev, R.
   Kettner, L.
   Sanders, P.
TI STXXL: standard template library for XXL data sets
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE very large data sets; software library; C plus plus standard template
   library; algorithm engineering
ID BREADTH-1ST SEARCH; ALGORITHMS; MEMORY
AB We present the software library STXXL that is an implementation of the C++ standard template library (STL) for processing huge data sets that can fit only on hard disks. It supports parallel disks, overlapping between disk I/O and computation and it is the first I/O-efficient algorithm library that supports the pipelining technique that can save more than half of the I/Os. STXXL has been applied both in academic and industrial environments for a range of problems including text processing, graph algorithms, computational geometry, Gaussian elimination, visualization, and analysis of microscopic images, differential cryptographic analysis, etc. The performance of STXXL and its applications are evaluated on synthetic and real-world inputs. We present the design of the library, how its performance features are supported, and demonstrate how the library integrates with STL. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Dementiev, R.; Sanders, P.] Univ Karlsruhe, Fak Informat, Karlsruhe, Germany.
   [Kettner, L.] Max Planck Inst Informat, Saarbrucken, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology; Max Planck
   Society
RP Dementiev, R (corresponding author), Univ Karlsruhe, Fak Informat, Karlsruhe, Germany.
EM dementiev@ira.uka.de
RI Dementiev, Roman/K-7201-2012
CR AGGARWAL A, 1988, COMMUN ACM, V31, P1116, DOI 10.1145/48529.48535
   Albers S., 1998, Proceedings of the Thirtieth Annual ACM Symposium on Theory of Computing, P454, DOI 10.1145/276698.276858
   [Anonymous], 8 INT S ADV SPAT TEM
   [Anonymous], ACM J EXPT ALGORITHM
   [Anonymous], 2002, STOC '02
   Arge L, 2002, LECT NOTES COMPUT SC, V2461, P88
   Arge L, 1999, LECT NOTES COMPUT SC, V1619, P328
   Arge L, 1995, LECT NOTES COMPUT SC, V955, P334
   Barve RD, 1997, PARALLEL COMPUT, V23, P601, DOI 10.1016/S0167-8191(97)00015-X
   Bayer R., 1972, Acta Informatica, V1, P173, DOI 10.1007/BF00288683
   Brodal GS, 2004, LECT NOTES COMPUT SC, V3111, P480
   Cao P, 1996, ACM T COMPUT SYST, V14, P311, DOI 10.1145/235543.235544
   Chaudhry G, 2002, LECT NOTES COMPUT SC, V2409, P143
   Crauser A, 2002, ALGORITHMICA, V32, P1, DOI 10.1007/s00453-001-0051-5
   Crauser A, 1999, LECT NOTES COMPUT SC, V1668, P228
   Dementiev R, 2005, LECT NOTES COMPUT SC, V3669, P640
   Donato D., 2006, J GRAPH ALGORITHMS A, V10, P219
   Fabri A, 2000, SOFTWARE PRACT EXPER, V30, P1167, DOI 10.1002/1097-024X(200009)30:11<1167::AID-SPE337>3.0.CO;2-B
   Fadel R., 1997, Australian Computer Science Communications, V19, P72
   Farias R, 2001, IEEE COMPUT GRAPH, V21, P42, DOI 10.1109/38.933523
   HARARY F, 1979, J MATH SOCIOL, V6, P199, DOI 10.1080/0022250X.1979.9989889
   HUTCHINSON DA, 2001, LNCS, V2161, P62
   Kimbrel T, 2000, SIAM J COMPUT, V29, P1051, DOI 10.1137/S0097539797326976
   Mehlhorn K, 2002, LECT NOTES COMPUT SC, V2461, P723
   Patterson DA, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1022594.1022596
   VITTER JS, 1994, ALGORITHMICA, V12, P110, DOI 10.1007/BF01185207
   Vitter JS, 2001, ACM COMPUT SURV, V33, P209, DOI 10.1145/384192.384193
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 51
TC 50
Z9 54
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2008
VL 38
IS 6
BP 589
EP 637
DI 10.1002/spe.844
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 298ZR
UT WOS:000255726100003
OA Green Published
DA 2024-07-18
ER

PT J
AU Kemball, AJ
   Crutcher, RM
   Hasan, R
AF Kemball, A. J.
   Crutcher, R. M.
   Hasan, R.
TI A component-based framework for radio-astronomical imaging software
   systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE component-based software engineering; software re-use; domain analysis;
   scientific computing
AB This paper describes a component-based framework for radio-astronomical imaging software systems. We consider optimal re-use strategies for packages of disparate architectures brought together within a modern component framework. In this practical case study, the legacy codes include both procedural and object-oriented architectures. We consider also the special requirements on scientific component middleware, with a specific focus on high-performance computing. We present an example application in this component architecture and outline future development planned for this project. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Kemball, A. J.; Crutcher, R. M.; Hasan, R.] Univ Illinois, Natl Ctr Supercomp Applicat, Urbana, IL 61801 USA.
C3 University of Illinois System; University of Illinois Urbana-Champaign
RP Kemball, AJ (corresponding author), Univ Illinois, Natl Ctr Supercomp Applicat, 1205 W Clark St, Urbana, IL 61801 USA.
EM akemball@uiuc.edu
RI Hasan, Ragib/F-4976-2013
OI Hasan, Ragib/0000-0001-5248-8341; Kemball, Athol/0000-0001-6233-8347
CR [Anonymous], 2001, Strategic Management: Concepts and Cases
   APPERLY H, 2001, COMPONENT BASED SOFT, P21
   ATKINS DE, 2005, REVOLUTIONIZING SCI
   BERNHOLDT DE, 2002, P WORKSH PERF OPT HI
   Boehm BW., 1981, Software Engineering Economics
   Bosch J, 1999, INFORM SOFTWARE TECH, V41, P257, DOI 10.1016/S0950-5849(99)00007-5
   Colomer F, 2000, ASTRON ASTROPHYS, V355, P979
   Djorgovski SG, 2005, CAMP 2005: SEVENTH INTERNATIONAL WORKSHOP ON COMPUTER ARCHITECTURE FOR MACHINE PERCEPTION , PROCEEDINGS, P125
   Emmerich W, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P537, DOI 10.1109/ICSE.2002.1007997
   Glendenning BE, 1996, ASTR SOC P, V101, P271
   Goedicke M, 2002, J SOFTW MAINT EVOL-R, V14, P1, DOI 10.1002/smr.243
   Gorden M, 1965, Electronics, V38, P114, DOI [DOI 10.1109/N-SSC.2006.4785860, DOI 10.1109/JPROC.1998.658762]
   GREISEN EW, 2000, RADIO INTERFEROMETRY, P57
   Hamaker JP, 1996, ASTRON ASTROPHYS SUP, V117, P137, DOI 10.1051/aas:1996146
   HARRINGTON S, 2006, ASP C SERIES, V351, P259
   Heineman G.T., 2001, Putting the pieces together, addison-westley, P5
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   Kendall RA, 2000, COMPUT PHYS COMMUN, V128, P260, DOI 10.1016/S0010-4655(00)00065-5
   Kettenis M, 2006, Astronomical Data Analysis Software and Systems XV, volume 351 of Astronomical Society of the Pacific Conference Series, page, P497
   KOHN S, 2001, P 10 SIAM C PAR PROC
   MAURER J, 2005, ACM QUEUE, V3, P16
   McMullin J. P., 2006, ASP C SER, V351, P319
   Mili H., 2001, Reuse-based Software Engineering: Techniques, Organization, and Controls
   MUSSER DR, 1989, LECT NOTES COMPUT SC, V358, P13
   MUSSER DR, 1987, P 1987 ANN ACM SIGAD, P216
   Ponnekanti SR, 2004, LECT NOTES COMPUT SC, V3231, P331
   RAKIC M, 2001, P 2001 S SOFTW REUS, P11
   RASMUSSEN CE, 2001, P 2 ANN LOS AL COMP
   Sault RJ, 1995, ASTR SOC P, V77, P433
   Schiebel DR, 2000, ASTR SOC P, V216, P39
   Sessions R., 2005, ACM Queue, V2, P40, DOI 10.1145/1039511.1039533
   SULLIVAN KJ, 2001, COMPONENT BASED SOFT, P341
   Szyperski C., 1997, Component Software
   VAUGHAN G.V., 2000, GNU AUTOCONF AUTOMAK
   Wells D. C., 1981, Astronomy & Astrophysics Supplement Series, V44, P363
   WILLIAMS JP, 1994, ASTROPHYS J, V428, P693, DOI 10.1086/174279
   ZDUN U, 2004, P 9 EUR C PATT LANG, P1
NR 37
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2008
VL 38
IS 5
BP 493
EP 507
DI 10.1002/spe.838
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 289YR
UT WOS:000255090300003
DA 2024-07-18
ER

PT J
AU Zhang, XY
   Gupta, N
   Gupta, R
AF Zhang, Xiangyu
   Gupta, Neelam
   Gupta, Rajiv
TI Locating faulty code by multiple points slicing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fault location; dynamic dependence graph; dynamic backward slice;
   forward dynamic slice; bidirectional dynamic slice; multiple points
   dynamic slice
ID VISUALIZATION; LOCALIZATION
AB Dynamic slicing has long been considered as a useful tool for debugging programs as it effectively identifies a reduced fault candidate set which captures the faulty code in the program. Traditionally, a backward dynamic slice is computed starting from an incorrect value observed by the programmer during a failed program run. This incorrect value is either an incorrect output value or an incorrect address whose dereferencing causes the program to crash. Recently we proposed two additional types of dynamic slices, a forward dynamic slice of a minimal failure inducing input difference and a bidirectional dynamic slice of a critical predicate. We have built a dynamic slicing tool that computes dynamic slices by instrumenting program binaries and executing them to build dynamic dependence graphs. In this paper, through experiments, we demonstrate that supporting three different types of dynamic slices has the following advantages. First, we observe that for each type of dynamic slice there are distinct situations in which it is not applicable. Therefore, we should support multiple types of slices to handle a wide range of situations. Second, supporting multiple types of dynamic slices enables us to compute a multiple points dynamic slice which is the intersection of different type of available slices. Our experiments show that multiple points dynamic slices are significantly smaller than any of the three kinds of individual dynamic slices. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Arizona, Dept Comp Sci, Tucson, AZ 85737 USA.
C3 University of Arizona
RP Gupta, R (corresponding author), Univ Arizona, Dept Comp Sci, 1040 E 4th St,Gould Simpson Bldg,Room 746, Tucson, AZ 85721 USA.
EM gupta@cs.arizona.edu
RI Zhang, Xiangyu/H-9255-2013
OI Zhang, Xiangyu/0000-0003-0876-6783; Gupta, Rajiv/0000-0002-9348-3974
FU Direct For Computer & Info Scie & Enginr [0810906] Funding Source:
   National Science Foundation; Division Of Computer and Network Systems
   [0810906] Funding Source: National Science Foundation
CR AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Agrawal H., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P348, DOI 10.1109/ICSM.1993.366927
   Agrawal Hiralal, 1990, PLDI, P246, DOI 10.1145/93542.93576
   [Anonymous], PLDI 04 P ACM SIGPLA
   Beszédes A, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P105, DOI 10.1109/CSMR.2001.914974
   Chen T. Y., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P378, DOI 10.1109/ICSM.1993.366925
   Christian H., 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Partial Evaluation and Semantics-based Program Manipulation, P58
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   GUPTA N, 2005, P 20 IEEE ACM INT C, P263
   Harrold MJ, 1998, ACM SIGPLAN NOTICES, V33, P83, DOI 10.1145/277633.277647
   HILDEBRANDT R, 2000, P INT S SOFTW TEST A, P135
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jones JA, 2004, PROC INT CONF SOFTW, P54, DOI 10.1109/ICSE.2004.1317420
   KAMKAR M, 1999, THESIS LINKOPING U
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel Bogdan., 1997, P 3 INT WORKSHOP AUT, P43
   Krinke J, 2004, PROC IEEE INT CONF S, P168, DOI 10.1109/ICSM.2004.1357801
   LIBLIT B, 2003, P ACM SIGPLAN 2003 C, P141
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   PAN H, 1992, SERCTR116P PURD U
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Ruthruff JR, 2005, PROC INT CONF SOFTW, P352
   Wang T, 2004, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE.2004.1317473
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
   Zeller Andreas., 2002, Proceedings of the 10th ACM SIGSOFT Symposium on Foundations of Software Engineering, SIGSOFT '02/FSE-10, P1, DOI DOI 10.1145/587051.587053
   Zhang X., 2005, ACM T ARCHIT CODE OP, V2, P301, DOI DOI 10.1145/1089008.1089012
   ZHANG X., 2005, AADEBUG 05 P INT S A, P33
   ZHANG X, 2006, P INT C SOFTW ENG SH
   Zhang XG, 2004, PROC INT CONF SOFTW, P502, DOI 10.1109/ICSE.2004.1317472
   Zhang X, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1133981.1134002
   Zhang X, 2005, Proceedings of the 24th Chinese Control Conference, Vols 1 and 2, P197, DOI 10.1145/1081706.1081738
   Zhou P, 2004, INT SYMP MICROARCH, P269
NR 36
TC 25
Z9 38
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2007
VL 37
IS 9
BP 935
EP 961
DI 10.1002/spe.795
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 194CN
UT WOS:000248321700002
DA 2024-07-18
ER

PT J
AU Zhao, P
   Amaral, JN
AF Zhao, Peng
   Amaral, Jose Nelson
TI <i>Ablego</i>:: a function outlining and partial inlining framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler optimization; inlining; partial inlining; outlining; function
   splitting; code locality; Itanium
ID CASE STATEMENT; FLOW DIAGRAMS; EFFICIENT; ALGORITHM
AB Frequently invoked large functions are common in non-numeric applications. These large functions present challenges to modern compilers not only because they require more time and resources at compilation time, but also because they may prevent optimizations such as function inlining. Often large portions of the code in a hot function integral host are executed much less frequently than integral host itself. Partial inlining is a natural solution to the problems caused by including cold code segments that are seldom executed into hot functions that are frequently invoked. When applying partial inlining, a compiler outlines cold statements from a hot function integral host. After outlining,integral host becomes smaller and thus can be easily inlined. This paper presents Ablego, a framework for function outlining and partial inlining that includes several innovations: (1) an abstract-syntax-tree-based analysis and transformation to form cold regions for outlining; (2) a set of flexible heuristics to control the aggressiveness of function outlining; (3) several possible function outlining strategies; (4) explicit variable spilling, a new technique that overcomes negative side-effects of function outlining. With the proper strategy, partial inlining improves performance by up to 5.75%. A performance study also suggests that partial inlining's effect on enabling more aggressive inlining is limited. The performance improvement from partial inlining actually comes from better code placement and better code generation. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
   IBM Corp, Toronto Lab, Markham, ON, Canada.
C3 University of Alberta; International Business Machines (IBM)
RP Amaral, JN (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM amaral@cs.ualberta.ca
CR Allen J.R., 1983, Proc. of the Symposium on Principles of Programming Languages. POPL, P177
   AMMARGUELLAT Z, 1992, IEEE T SOFTWARE ENG, V18, P237, DOI 10.1109/32.126773
   ATKINSON LV, 1982, SOFTWARE PRACT EXPER, V12, P571, DOI 10.1002/spe.4380120608
   BAKER BS, 1977, J ACM, V24, P98, DOI 10.1145/321992.321999
   BERNSTEIN RL, 1985, SOFTWARE PRACT EXPER, V15, P1021, DOI 10.1002/spe.4380151009
   Bumbulis P., 1993, ACM Letters on Programming Languages and Systems, V2, P70, DOI 10.1145/176454.176487
   CALDER B, 1994, P 21 ACM SIGPLAN SIG, P397
   CASTELLUCCIA C, 1996, P ACM SIGCOMM 1996 C, P60
   CHANG PP, 1988, P 21 INT WORKSH MICR, P188
   DAVIDSON JW, 1992, IEEE T SOFTWARE ENG, V18, P89, DOI 10.1109/32.121752
   DAVIDSON JW, 1989, TR8904 U VIRG DEP CO
   DAVIDSON JW, 1989, SOFTWARE PRACTICE EX, V18, P775
   Erlingsson U, 1996, INFORM PROCESS LETT, V60, P115, DOI 10.1016/S0020-0190(96)00151-2
   ERLINGSSON U, 1995, TR9514 RENSS POL I D
   EROSA AM, 1994, PROCEEDINGS OF THE 1994 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, P229, DOI 10.1109/ICCL.1994.288377
   Hank R. E., 1995, Proceedings of the 28th Annual International Symposium on Microarchitecture (Cat. No.95TB100012), P158, DOI 10.1109/MICRO.1995.476823
   HENNESSY JL, 1982, SOFTWARE PRACT EXPER, V12, P879, DOI 10.1002/spe.4380120907
   KANNAN S, 1994, SOFTWARE PRACTICE EX, V24, P233
   Komondoor R, 2003, PROG COMPREHEN, P33
   Komondoor R., PROC 27 ACM SIGPLAN, DOI [10.1145/325694.325713, DOI 10.1145/325694.325713]
   LEFESSANT F, 2001, P 6 ACM SIGPLAN INT, P26
   MOSBERGER D, 1995, TR9502 U AR DEP COMP
   Muth R., 1997, PARTIAL INLINING
   PETERSON WW, 1973, COMMUN ACM, V16, P503, DOI 10.1145/355609.362337
   Pettis K., 1990, SIGPLAN Notices, V25, P16, DOI 10.1145/93548.93550
   RAMSHAW L, 1988, J ACM, V35, P893, DOI 10.1145/48014.48021
   SALE A, 1981, SOFTWARE PRACT EXPER, V11, P929, DOI 10.1002/spe.4380110905
   SUGANUMA T, 2003, P ACM SIGPLAN 2003 C, P312
   UH GR, 1997, THESIS FLORIDA STATE
   Way T, 2000, 2000 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P24, DOI 10.1109/PACT.2000.888257
   Way Tom., 2002, P C PARALLEL DISTRIB, P552
   WAY TP, 2002, THESIS U DELAWARE
   WILLIAMS MH, 1978, COMPUT J, V21, P161, DOI 10.1093/comjnl/21.2.161
   WILLIAMS MH, 1977, COMPUT J, V20, P45, DOI 10.1093/comjnl/20.1.45
   Yang MH, 2002, ACM T PROGR LANG SYS, V24, P667, DOI 10.1145/586088.586091
   Zhao P, 2005, INT CONF PARA PROC, P295
   ZHAO P, 2003, P 4 WORKSH LANG COMP, P405
   ZHAO P, 2004, TR0418 U ALB DEP COM
   [No title captured]
NR 39
TC 9
Z9 12
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2007
VL 37
IS 5
BP 465
EP 491
DI 10.1002/spe.774
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 157FK
UT WOS:000245703800002
DA 2024-07-18
ER

PT J
AU Cerutti, S
   Lamperti, G
   Scaroni, M
   Zanella, M
   Zanni, D
AF Cerutti, S.
   Lamperti, G.
   Scaroni, M.
   Zanella, M.
   Zanni, D.
TI A diagnostic environment for automaton networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE diagnosis; model-based reasoning; communicating automata; knowledge
   compilation; reuse
ID DISCRETE-EVENT SYSTEMS; FAILURE DIAGNOSIS
AB Automated diagnosis of communicating-automaton networks (CANS) is a complex task, which is typically faced by model-based reasoning, where the behavior of the network is reconstructed based on its observation. This task may take advantage of knowledge-compilation techniques, where a large amount of reasoning is anticipated off-line (when the diagnostic process is not active), by simulating the behavior of the network and by constructing suitable data structures embedding diagnostic information. This (general-purpose) compiled knowledge is exploited on-line (when the diagnostic process becomes active), so as to generate the solution to the problem. Additional reusable (special-purpose) compiled knowledge is generated on-line when solving new problems. A software environment for the diagnosis of CANS has been developed in the C programming language with the support of the PostgreSQL relational database management system, under the Linux operating system. It supports the modeling and preprocessing of CANS as well as the solution of diagnostic problems, including on-line knowledge compilation. The environment has been tested through a variety of experiments. Results are encouraging and provide a valuable feedback for further work. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Brescia, Dipartimento Elettron Automaz, I-25123 Brescia, Italy.
   IMI Srl, Bergamo, Italy.
   ONION SpA, Brescia, Italy.
   S4WIN Srl, Brescia, Italy.
C3 University of Brescia
RP Lamperti, G (corresponding author), Univ Brescia, Dipartimento Elettron Automaz, Via Branze 38, I-25123 Brescia, Italy.
EM lamperti@ing.unibs.it
RI Cerutti, Sergio/A-3155-2009
OI CERUTTI, Sergio/0000-0002-9607-8755; LAMPERTI, Gian
   Franco/0000-0002-1915-6932; ZANELLA, Marina/0000-0003-3896-3913
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], KLUWER INT SERIES DI
   Baroni P, 1999, ARTIF INTELL, V110, P135, DOI 10.1016/S0004-3702(99)00019-3
   BARRAL C, 2000, P 7 INT C KNOWL REPR, P311
   BOCHMANN GV, 1978, COMPUT NETWORKS ISDN, V2, P361, DOI 10.1016/0376-5075(78)90015-6
   BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   Brusoni V, 1998, ARTIF INTELL, V102, P39, DOI 10.1016/S0004-3702(98)00044-7
   Console L, 2002, ARTIF INTELL, V142, P19, DOI 10.1016/S0004-3702(02)00292-8
   Console L, 2000, FR ART INT, V54, P131
   Debouk R, 2000, DISCRETE EVENT DYN S, V10, P33, DOI 10.1023/A:1008335115538
   GRASTIEN A, 2005, P 16 INT WORKSH PRIN, P119
   KURIEN J, 2000, P 11 INT WORKSH PRIN, P92
   Lamperti, 2003, KLUWER INT SERIES EN, V741
   Lamperti G, 2006, ARTIF INTELL, V170, P232, DOI 10.1016/j.artint.2005.08.002
   Lamperti G, 2004, IEEE T SYST MAN CY B, V34, P2222, DOI 10.1109/TSMCB.2004.835008
   Lamperti G, 2002, ARTIF INTELL, V137, P91, DOI 10.1016/S0004-3702(02)00123-6
   Lamperti G, 1997, INT JOINT CONF ARTIF, P446
   LAMPERTI G, 2005, P 2 MONET WORKSH MOD, P42
   LAMPERTI G, 2005, P 19 INT WORKSH QUAL, P97
   Lunze J, 2000, IEEE T SYST MAN CY A, V30, P322, DOI 10.1109/3468.844356
   McIlraith S., 1998, KR 98, P167
   Pencolé Y, 2005, ARTIF INTELL, V164, P121, DOI 10.1016/j.artint.2005.01.002
   Pencole Y, 2000, P 11 INT WORKSH PRIN, P185
   Rozé L, 2002, DISCRETE EVENT DYN S, V12, P43, DOI 10.1023/A:1013335803945
   ROZE L, 1997, P 8 INT WORKSH PRINC, P103
   Sampath M, 1998, IEEE T AUTOMAT CONTR, V43, P908, DOI 10.1109/9.701089
   Sampath M, 1996, IEEE T CONTR SYST T, V4, P105, DOI 10.1109/87.486338
   SAMPATH M, 1995, IEEE T AUTOMAT CONTR, V40, P1555, DOI 10.1109/9.412626
   Schullerus G, 2001, P 12 INT WORKSH PRIN, P189
   Struss P, 1997, INT JOINT CONF ARTIF, P480
   ZAD SH, 1999, P 38 IEEE C DEC CONT, P1756
NR 31
TC 16
Z9 18
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2007
VL 37
IS 4
BP 365
EP 415
DI 10.1002/spe.773
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 151VK
UT WOS:000245318700002
DA 2024-07-18
ER

PT J
AU Nikora, AP
   Munson, JC
AF Nikora, Allen P.
   Munson, John C.
TI Building high-quality software fault predictors
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 28th Annual International Computer Software and Applications Conference
CY SEP 28-30, 2004
CL Hong Kong, PEOPLES R CHINA
DE software measurement; software fault modeling
AB Over the past several years, we have been developing software fault predictors based on a system's measured structural evolution. We have previously shown significant linear relationships between code churn, a set of synthesized metrics, and the rate at which faults are inserted into the system in terms of number of faults per unit change in code churn. A limiting factor in this and other such investigations has been the absence of a quantitative, consistent and repeatable definition of what constitutes a fault. The rules for fault definition were not sufficiently rigorous to provide unambiguous, repeatable fault counts. Within the framework of a space mission software development effort at the Jet Propulsion Laboratory we have developed a standard for the precise enumeration of faults. This new standard permits software faults to be measured directly from configuration control documents. We compared the new method of counting faults with two existing techniques to determine whether the fault-counting technique has an effect on the quality of the fault models constructed from those counts. The new fault definition provides higher quality fault models than those obtained using the other definitions of fault. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 CALTECH, Jet Prop Lab, Pasadena, CA 91109 USA.
   Univ Idaho, Dept Comp Sci, Moscow, ID 83844 USA.
C3 California Institute of Technology; National Aeronautics & Space
   Administration (NASA); NASA Jet Propulsion Laboratory (JPL); Idaho;
   University of Idaho
RP Nikora, AP (corresponding author), CALTECH, Jet Prop Lab, 4800 Oak Grove Dr,Mail Stop 125-233, Pasadena, CA 91109 USA.
EM allen.p.nikora@jpl.nasa.gov
CR [Anonymous], P ANN OR WORKSH SOFT
   Boehm BW., 1981, Software Engineering Economics
   Brants T, 2000, 6TH APPLIED NATURAL LANGUAGE PROCESSING CONFERENCE/1ST MEETING OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE AND PROCEEDINGS OF THE ANLP-NAACL 2000 STUDENT RESEARCH WORKSHOP, P224
   *CYL TECHN, 2000, DARW SOFTW ENG MEAS
   Dillon W.R., 1984, MULTIVARIATE ANAL ME
   DVORAK D, 1999, AIAA SPACE TECHN C E
   Gokhale S.S., 1997, PROC 3 ISSAT INT C R, P31
   Hall GA, 2000, J SYST SOFTWARE, V54, P111, DOI 10.1016/S0164-1212(00)00031-5
   *IEEE STAND GLOSS, 1983, 7291983 IEEE STD GLO
   *IEEE STD, 1989, 98211988 IEEE STD
   KHOSHGOFTAAR T, 2001, LECT NOTES COMPUTER, V1845, P247
   Khoshgoftaar TM, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P66, DOI 10.1109/ISSRE.2001.989459
   MUNSON J, 1998, P 4 ISSAT INT C REL, P263
   Munson J. C., 2002, SOFTWARE ENG MEASURE
   Munson JC, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P388, DOI 10.1109/ISSRE.2002.1173299
   MUNSON JC, 1990, INFORM SOFTWARE TECH, V32, P106, DOI 10.1016/0950-5849(90)90109-5
   Nikora AP, 2003, PROC IEEE INT CONF S, P83, DOI 10.1109/ICSM.2003.1235409
   Nikora AP, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P338, DOI 10.1109/METRIC.2003.1232479
   NIKORA AP, 1988, P INT S SOFTW REL EN, P306
   *SANTORINI B, 1995, PART OF SPEECH TAGGI
   Schneidewind NF, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P402, DOI 10.1109/ISSRE.1997.630888
   Schneidewind NF, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P328, DOI 10.1109/METRIC.2001.915540
NR 22
TC 7
Z9 7
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2006
VL 36
IS 9
BP 949
EP 969
DI 10.1002/spe.737
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 068GR
UT WOS:000239361500004
OA Bronze
DA 2024-07-18
ER

PT J
AU Goulas, G
   Alefragis, P
   Housos, E
AF Goulas, G
   Alefragis, P
   Housos, E
TI SchedSP: a grid-based application service provider of scheduling
   solutions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE application service provision; Grid computing; XML; scheduling
ID OPTIMIZATION
AB In this paper, SchedSP, a middleware framework for providing scheduling solutions as services over the Internet, is presented. Emphasis is given on creating a reusable framework that facilitates the development of specialized clients for the input, output and control interfaces of the various scheduling applications. SchedSP manages the task of preparing and running the required processes and allows the application interface developer to focus on the functionality and efficiency of the interface. The Internet-based scheduling applications created are competitive in all aspects with traditional locally executed applications. In this paper, detailed architecture and implementation details of the SchedSP framework prototype are presented. In addition, the methodology for creating specific case studies based on the SchedSP middleware framework is presented. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Patras, Dept Elect & Comp Engn, Comp Syst Lab, GR-26500 Patras, Greece.
C3 University of Patras
RP Univ Patras, Dept Elect & Comp Engn, Comp Syst Lab, GR-26500 Patras, Greece.
EM goulas@ee.upatras.gr
RI Alefragis, Panayiotis/AAO-5092-2021; Alefragis, Panayiotis/AAM-8281-2021
OI Alefragis, Panayiotis/0000-0002-1313-1750; 
CR Agrawal R, 2002, COMPUT NETW, V39, P523, DOI 10.1016/S1389-1286(02)00222-0
   Alefragis P, 2000, ANN OPER RES, V99, P141, DOI 10.1023/A:1019293017474
   ALEFRAGIS P, 2003, IN PRESS PARALLEL CO
   Andersson E., 1998, Operations Research in the Airline Industry, P228
   [Anonymous], 1998, GRID BLUEPRINT NEW C
   BASNEY R, 1999, HIGH PERFORMANCE CLU, V1, pCH5
   Bennett K.P., 2000, SIGKDD EXPLOR NEWSL, V2, P1, DOI [10.1145/380995.380999, DOI 10.1145/380995.380999]
   Birbas T, 1997, J OPER RES SOC, V48, P1191
   Ernst AT, 2004, ANN OPER RES, V127, P21, DOI 10.1023/B:ANOR.0000019087.46656.e2
   Ferraiolo DF, 2003, ARTECH H COMP SEC LI
   GOULAS G, 2002, P EUR 2002 C EUR 200
   Goumopoulos C, 1998, PROC INT CONF PARAL, P70, DOI 10.1109/ICPP.1998.708465
   Goumopoulos C, 1998, THIRD IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATIONS, PROCEEDINGS, P286, DOI 10.1109/ISCC.1998.702520
   GOUMOPOULOS C, 1998, P 2 EUR IASTED INT C, P237
   Gunther O., 1997, IEEE Internet Computing, V1, P59, DOI 10.1109/4236.589196
   *ILOG, 2000, ILOG CPLEX US MAN
   Jacobsen H.-A., 2000, Netnomics, V2, P191, DOI 10.1023/A:1019190830481
   JACOBSEN HA, 1999, ACM C EL COMM ACM EC, P87
   Koulopoulos D, 2002, SOFTWARE PRACT EXPER, V32, P1035, DOI 10.1002/spe.468
   KOULOPOULOS D, P 4 CSIT WORKSH PATR
   Livny M., 1997, SPEEDUP, V11, P36
   MAVROMMATIS M, 2003, THESIS U PATRAS
   NTANOS E, 2002, THESIS U PATRAS
   Papoutsis K, 2003, J OPER RES SOC, V54, P230, DOI 10.1057/palgrave.jors.2601495
   PAPOUTSIS K, 2004, IN PRESS J SCHEDULIN
   Thrampoulidis K, 1997, SOFTWARE PRACT EXPER, V27, P1135, DOI 10.1002/(SICI)1097-024X(199710)27:10<1135::AID-SPE121>3.0.CO;2-T
   Thrampoulidis KX, 1997, INFORM SOFTWARE TECH, V39, P185, DOI 10.1016/S0950-5849(97)83774-3
   Valouxis C, 2000, ARTIF INTELL MED, V20, P155, DOI 10.1016/S0933-3657(00)00062-2
   Valouxis C, 2002, COMPUT OPER RES, V29, P243, DOI 10.1016/S0305-0548(00)00067-8
   VALOUXIS C, 2002, COMPUTERS OPERATIONS, V30, P1555
   *XML RPC, 2003, XML RPC SPEC
NR 31
TC 3
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2005
VL 35
IS 12
BP 1195
EP 1216
DI 10.1002/spe.668
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 971NZ
UT WOS:000232392500004
DA 2024-07-18
ER

PT J
AU Rousskov, A
   Wessels, D
AF Rousskov, A
   Wessels, D
TI High-performance benchmarking with Web Polygraph
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance; benchmarking; HTTP; proxies; intermediaries
AB This paper presents the design and implementation of Web Polygraph, a tool for benchmarking HTTP intermediaries. We discuss various challenges involved in simulating Web traffic and in developing a portable, high-performance tool for generating such traffic. Polygraph's simulation models, as well as our experiences with developing and running the benchmark, may be useful for Web proxy developers, performance analysts, and researchers interested in Web traffic simulation. Copyright (C) 2004 John Wiley Sons,Ltd.
C1 Measurement Factory Inc, Boulder, CO 80306 USA.
RP Rousskov, A (corresponding author), Measurement Factory Inc, POB 380, Boulder, CO 80306 USA.
EM rousskov@measurement-factory.com
CR ALMEIDA J, 1998, P 3 INT WEB CACH WOR
   [Anonymous], 1999, P IEEE INFOCOM
   apache, AP HTTP SERV PROJ
   Barford P., 1998, Performance Evaluation Review, V26, P151, DOI 10.1145/277858.277897
   CAO P, 1998, WEB CHAR WORKSH NOV
   CROVELLA ME, 1996, P ACM SIGMETRICS C M
   DAVISON BD, 1999, P 4 INT WEB CACH WOR
   Fielding R., 1999, Tech. Rep
   GRIBBLE S, 1997, P USENIX S INT TECHN
   LEE J, 2001, P 6 INT WEB CACH CON
   MOSBERGER D, 1998, WORKSH INT SERV PERF
   PITKOW JE, 1998, P 7 INT WWW C BRISB
   Rizzo Luigi., 1997, ACM COMPUTER COMMUNI, V27, P31, DOI DOI 10.1145/251007.251012
   ROUSSKOV A, 2003, WEB POLYGRAPH A PROX
   VOCKLER JS, BLAST PROJECT
   WANG Z, 1998, PERSISTENT CONNECTIO
   WESSELS D, 2003, DISTRIBUTED TESTBED
   YERXA G, 1999, NETWORK COMPUTIN MAY
NR 18
TC 23
Z9 25
U1 1
U2 3
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2004
VL 34
IS 2
BP 187
EP 211
DI 10.1002/spe.576
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 770XQ
UT WOS:000188757000005
DA 2024-07-18
ER

PT J
AU Nidd, M
   Husemann, D
AF Nidd, M
   Husemann, D
TI CA-PK: conditional access for broadcast networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE conditional access; broadcast encryption; DAB; Eureka-147
AB This paper presents a conditional access solution suitable for broadcast networks (e.g. Eureka-147 DAB, XM Radio's SDARS, etc.). This solution, called CA-PK (Conditional Access through Public Keys), can only be implemented in software, although it can utilize external crypto processors and allows a content provider to operate a conditional access system independently of third parties (i.e. DAB or GSM network operators). Furthermore, it integrates the consumer into the protection chain, creating a social environment that discourages illegal redistribution of access keys. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 IBM Res Corp, Zurich Res Lab, CH-8803 Ruschlikon, Switzerland.
C3 International Business Machines (IBM)
RP Nidd, M (corresponding author), IBM Res Corp, Zurich Res Lab, CH-8803 Ruschlikon, Switzerland.
CR [Anonymous], 2001, LECT NOTES COMPUTER
   Baentsch M, 1999, IEEE CONCURR, V7, P36, DOI 10.1109/4434.806977
   BLUETOOTH SIG, 1999, IEEE CONCURRENCY, V4
   *CENELEC, 1995, ACC CONTR SYST MAC P
   Daemen J, 2001, DR DOBBS J, V26, P137
   DWORK C, 1996, P 28 ANN ACM S THEOR
   *ETSI, 2000, RAD BROADC SYST DIG
   Halevy D., 2002, LSD BROADCAST ENCRYP
   NYBERG A, 2002, WORLDDABS WORLD VIEW
   [No title captured]
   2002, ECONOMIST        APR, P17
NR 11
TC 0
Z9 0
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2003
VL 33
IS 5
BP 481
EP 496
DI 10.1002/spe.514
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 668VE
UT WOS:000182313200005
DA 2024-07-18
ER

PT J
AU Houston, I
   Little, MC
   Robinson, I
   Shrivastava, SK
   Wheater, SM
AF Houston, I
   Little, MC
   Robinson, I
   Shrivastava, SK
   Wheater, SM
TI The CORBA Activity Service Framework for supporting extended
   transactions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CORBA; transaction; extended transactions; Web services; workflow
AB Although it has long been realized that ACID (atomicity, consistency, isolation, durability) transactions by themselves are not adequate for structuring long-lived applications and much research work has been done on developing specific extended transaction models, no middleware support for building extended transactions is currently available and the situation remains that a programmer often has to develop application specific mechanisms. The CORBA Activity Service Framework described in this paper is a way out of this situation. The design of the service is based on the insight that the various extended transaction models can be supported by providing a general purpose event signalling mechanism that can be programmed to enable activities-application specific units of computations-to coordinate each other in a manner prescribed by the model under consideration. The different extended transaction models can be mapped onto specific implementations of this framework, permitting such transactions to span a network of systems connected indirectly by some distribution infrastructure. The framework described in this paper is an overview of the OMG's (Object Management Group) Additional Structuring Mechanisms for the OTS standard. Through a number of examples the paper shows that the framework has the flexibility to support a wide variety of extended transaction models. Although the framework is presented here in CORBA specific terms, the main ideas are sufficiently general, so,that it should be possible to use them in conjunction with other middleware. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Newcastle, Sch Comp Sci, Newcastle Upon Tyne, Tyne & Wear, England.
   Arjuna Technol Ltd, Newcastle Upon Tyne, Tyne & Wear, England.
C3 Newcastle University - UK
RP Shrivastava, SK (corresponding author), Univ Newcastle, Sch Comp Sci, Newcastle Upon Tyne, Tyne & Wear, England.
EM santosh.shrivastava@ncl.ac.uk
CR ALONSO G, 1996, P 12 INT C DAT ENG N
   [Anonymous], 2001, Java Message Service Specification
   Bennett B, 2000, LECT NOTES COMPUT SC, V1795, P331
   DAVIES CT, 1978, IBM SYST J, V17, P179, DOI 10.1147/sj.172.0179
   Elmagarmid A., 1992, T MODELS ADV DATABAS
   Garcia-Molina H., 1987, ACM SIGMOD Record, P249, DOI DOI 10.1145/38714.38742
   Gray J., 1981, Proceedings of the Seventh International Conference on Very Large Data Bases, P144
   LITTLE M, 2000, FRAMEWORK IMPLEMENTI
   Little M. C., 1993, Proceedings the 13th International Conference on Distributed Computing Systems (Cat. No.93CH3282-1), P491, DOI 10.1109/ICDCS.1993.287675
   *OMG, 2000, 20000619 OMG
   *OMG, 1997, 970704 OMG
   *OMG, 1999, 990517 OMG
   Shrivastava S. K., 1990, Proceedings. The 10th International Conference on Distributed Computing Systems (Cat. No.90CH2878-7), P203, DOI 10.1109/ICDCS.1990.89273
   Taylor D. J., 1986, Proceedings Fifth Symposium on Reliability in Distributed Software and Database Systems (Cat. No.86CH2260-8), P121
   Weikum G., 1992, DATABASE TRANSACTION, P515
   Wheater SM, 1998, MIDDLEWARE'98: IFIP INTERNATIONAL CONFERENCE ON DISTRIBUTED SYSTEMS PLATFORMS AND OPEN DISTRIBUTED PROCESSING, P3
   Xu J, 2000, IEEE T PARALL DISTR, V11, P1019, DOI 10.1109/71.888642
   2001, JAVA T API 1 0 1
   2001, J2EE ACTIVITY SERVIC
   2000, WORK SERVICE AREA J2
   2002, OASIS BTP 1 0 SPECIF
NR 21
TC 7
Z9 7
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2003
VL 33
IS 4
BP 351
EP 373
DI 10.1002/spe.512
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 660QF
UT WOS:000181843300004
DA 2024-07-18
ER

PT J
AU Saiedian, H
   Hill, S
AF Saiedian, H
   Hill, S
TI A comparative evaluation of generic programming in Java and C++
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE generic programming; Java; JDK; C plus; STL
AB Generic programming has been defined as 'programming with concepts' where a concept refers to a family of abstractions. The criteria for generic programming include independence of collections from data types, independence of algorithms that operate on the collection, and the adaptability of the collections. This paper examines and evaluates the support for generic programming in the Java Development Kit (JDK) in comparison to C++'s Standard Template Library (STL). The evaluation will consider both the 'qualitative' factors as well as certain 'quantitative' factors (i.e. factors that can be measured). The qualitative factors that are considered include: 1.a comparison of the structure and APIs; 2. homogeneity versus heterogeneity; and 3. ease of use (including ease of converting to collection classes, ease of changing collection type, and ease of error handling).
   The quantitative factors include: 1. compiled size; 2. runtime memory usage; and 3. performance. The results of our evaluative comparisons based on the above factors and certain other criteria are presented at the end. Based on the results, we conclude that the support provided for generic programming in C++'s STL is superior to that provided by JDK. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Kansas, Dept Elect Engn & Comp Sci, Lawrence, KS 66045 USA.
C3 University of Kansas
RP Saiedian, H (corresponding author), Univ Kansas, Dept Elect Engn & Comp Sci, Lawrence, KS 66045 USA.
RI Saiedian, Hossein/ACP-6828-2022; Saiedian, Hossein/C-5608-2014
OI Saiedian, Hossein/0000-0001-5060-6332
CR BRACHA G, 1998, P ACM S OBJ OR PROGR, P183
   GOSLIN J, 1996, JAVA LANGUAGE ENV WH
   HAMILTON S, 1998, IEEE COMPUT, V31, P110
   *MIT, POLYJ JAV PAR TYP
   Musser D., 2003, GENERIC PROGRAMMING
   Musser D.R., 1996, STL tutorial and reference guide
   STROUSTRUP B, 1997, C PLUS PLUS PROGRAMM
   *SUN MICR INC, JAV STAND ED PLATF D
   *SUN MICR INC, JRS 000014 ADD GEN T
   [No title captured]
NR 10
TC 1
Z9 1
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2003
VL 33
IS 2
BP 121
EP 142
DI 10.1002/spe.499
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 644PX
UT WOS:000180928300002
DA 2024-07-18
ER

PT J
AU Zhu, WJ
   Goudarzi, M
   Buyya, R
AF Zhu, Wuji
   Goudarzi, Mohammad
   Buyya, Rajkumar
TI FLight: A lightweight federated learning framework in edge and fog
   computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE edge/fog/cloud computing; federated learning; Internet of Things;
   resource management framework
AB The number of Internet of Things (IoT) applications, especially latency-sensitive ones, have been significantly increased. So, cloud computing, as one of the main enablers of the IoT that offers centralized services, cannot solely satisfy the requirements of IoT applications. Edge/fog computing, as a distributed computing paradigm, processes, and stores IoT data at the edge of the network, offering low latency, reduced network traffic, and higher bandwidth. The edge/fog resources are often less powerful compared to cloud, and IoT data is dispersed among many geo-distributed servers. Hence, Federated Learning (FL), which is a machine learning approach that enables multiple distributed servers to collaborate on building models without exchanging the raw data, is well-suited to edge/fog computing environments, where data privacy is of paramount importance. Besides, to manage different FL tasks on edge/fog computing environments, a lightweight resource management framework is required to manage different incoming FL tasks while does not incur significant overhead on the system. Accordingly, in this article, we propose a lightweight FL framework, called FLight, to be deployed on a diverse range of devices, ranging from resource-limited edge/fog devices to powerful cloud servers. FLight is implemented based on the FogBus2 framework, which is a containerized distributed resource management framework. Moreover, FLight integrates both synchronous and asynchronous models of FL. Besides, we propose a lightweight heuristic-based worker selection algorithm to select a suitable set of available workers to participate in the training step to obtain higher training time efficiency. The obtained results demonstrate the efficiency of the FLight. The worker selection technique reduces the training time of reaching 80% accuracy by 34% compared to sequential training, while asynchronous one helps to improve synchronous FL training time by 64%.
C1 [Zhu, Wuji; Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic, Australia.
   [Goudarzi, Mohammad] Univ New South Wales UNSW, Sch Comp Sci & Engn, Sydney, NSW, Australia.
C3 University of Melbourne; University of New South Wales Sydney
RP Goudarzi, M (corresponding author), Univ New South Wales UNSW, Sch Comp Sci & Engn, Sydney, NSW, Australia.
EM m.goudarzi@unsw.edu.au
RI Goudarzi, Mohammd/AAK-8299-2020; Buyya, Rajkumar/C-3424-2009
OI Goudarzi, Mohammad/0000-0002-7178-3386; Buyya,
   Rajkumar/0000-0001-9754-6496
CR Al-Rubaie M, 2019, IEEE SECUR PRIV, V17, P49, DOI 10.1109/MSEC.2018.2888775
   [Anonymous], 2019, ARXIV190111173
   Bonawitz Kallista A., 2019, Towards Federated Learning at Scale: System Design, P374
   Bukaty P., 2019, The California Consumer Privacy Act (CCPA): An implementation guide
   Chen MZ, 2021, IEEE T WIREL COMMUN, V20, P269, DOI 10.1109/TWC.2020.3024629
   Cheng Y., 2019, Synth. Lectures Artif. Intell. Mach. Learn., V13, P1, DOI 10.2200/S00960ED2V01Y201910AIM043
   Cho Y. J., 2020, CLIENT SELECTION FED
   Deng Q., 2021, P INT WORKSH BIG DAT, V96, P406, DOI DOI 10.1080/0161956X.2021.1965413
   Deng YH, 2022, PEER PEER NETW APPL, V15, P1214, DOI 10.1007/s12083-021-01284-2
   Furui S, 2012, IEEE SIGNAL PROC MAG, V29, P16, DOI 10.1109/MSP.2012.2209906
   Goudarzi M., 2022, NEW FRONTIERS CLOUD, P3, DOI [DOI 10.1007/978-3-031-05528, DOI 10.1007/978-3-031-05528-7_1]
   Goudarzi M., 2021, RESOURCE MANAGEMENT
   Goudarzi M, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3544836
   Goudarzi M, 2023, IEEE T MOBILE COMPUT, V22, P2491, DOI 10.1109/TMC.2021.3123165
   Goudarzi M, 2021, IEEE T MOBILE COMPUT, V20, P1298, DOI 10.1109/TMC.2020.2967041
   Hatcher WG, 2018, IEEE ACCESS, V6, P24411, DOI 10.1109/ACCESS.2018.2830661
   Kececi C., 2022, CLUSTERED SCHEDULING
   Krizhevsky Alex, Cifar-10 canadian institute for advanced research
   Li D., 2019, FEDMD HETEROGENOUS F
   Li Qinbin, 2023, IEEE Transactions on Knowledge and Data Engineering, P3347, DOI 10.1109/TKDE.2021.3124599
   Mammen P. M., 2021, FEDERATED LEARNING O
   Nishio T, 2019, IEEE ICC
   Shen S, 2022, CONCURR COMP-PRACT E, V34, DOI 10.1002/cpe.6002
   Starchon P, 2019, PROCEDIA COMPUT SCI, V151, P303, DOI 10.1016/j.procs.2019.04.043
   Sultana A, 2022, IEEE T PARALL DISTR, V33, P4282, DOI 10.1109/TPDS.2022.3187365
   Ticao Zhang, 2022, GetMobile: Mobile Computing and Communications, V25, P18, DOI 10.1145/3511285.3511291
   Wang G, 2022, FUTURE GENER COMP SY, V129, P199, DOI 10.1016/j.future.2021.11.020
   Wang SQ, 2019, IEEE J SEL AREA COMM, V37, P1205, DOI 10.1109/JSAC.2019.2904348
   Wen DZ, 2022, IEEE WIREL COMMUN LE, V11, P923, DOI 10.1109/LWC.2022.3149783
   Wu D, 2022, IEEE INTERNET THINGS, V9, P20889, DOI 10.1109/JIOT.2022.3176469
   Xu Chenhao, 2021, Asynchronous federated learning on heterogeneous devices: a survey
   Xu XL, 2019, FUTURE GENER COMP SY, V95, P522, DOI 10.1016/j.future.2018.12.055
   Yang HL, 2021, IEEE J SEL AREA COMM, V39, P3144, DOI 10.1109/JSAC.2021.3088655
   Yu F., 2020, HETEROGENEOUS FEDERA
   Yu LK, 2022, IEEE INTERNET THINGS, V9, P4385, DOI 10.1109/JIOT.2021.3103715
NR 35
TC 0
Z9 0
U1 3
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2024
VL 54
IS 5
BP 813
EP 841
DI 10.1002/spe.3300
EA DEC 2023
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NB0V3
UT WOS:001121836400001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Hewage, TB
   Ilager, S
   Rodriguez, MA
   Buyya, R
AF Hewage, Tharindu B.
   Ilager, Shashikant
   Rodriguez, Maria A.
   Buyya, Rajkumar
TI CloudSim express: A novel framework for rapid low code simulation of
   cloud computing environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud Computing; CloudSim; modelling and simulation; programming
   productivity
AB Cloud computing environment simulators enable cost-effective experimentation of novel infrastructure designs and management approaches by avoiding significant costs incurred from repetitive deployments in real Cloud platforms. However, widely used Cloud environment simulators compromise on usability due to complexities in design and configuration, along with the added overhead of programming language expertise. Existing approaches attempting to reduce this overhead, such as script-based simulators and graphical user interface (GUI) based simulators, often compromise on the extensibility of the simulator. Simulator extensibility allows for customization at a fine-grained level, thus reducing it significantly affects flexibility in creating simulations. To address these challenges, we propose an architectural framework to enable human-readable script-based simulations in existing Cloud environment simulators while minimizing the impact on simulator extensibility. We implement the proposed framework for the widely used Cloud environment simulator, the CloudSim toolkit, and compare it against state-of-the-art baselines using a practical use case. The resulting framework, called CloudSim Express, achieves extensible simulations while surpassing baselines with over a 71.43$$ 71.43 $$% reduction in code complexity and an 89.42% reduction in lines of code.
C1 [Hewage, Tharindu B.; Rodriguez, Maria A.; Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic, Australia.
   [Ilager, Shashikant] Vienna Univ Technol, TU Wien, Vienna, Austria.
C3 University of Melbourne; Technische Universitat Wien
RP Hewage, TB (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic, Australia.
EM tsaryakarahe@student.unimelb.edu.au
RI Buyya, Rajkumar/C-3424-2009
OI Buyya, Rajkumar/0000-0001-9754-6496; Rodriguez Read,
   Maria/0000-0002-2831-8526; Saryakara Hewage, Tharindu
   Bandara/0000-0001-6348-4602
CR [Anonymous], 2023, JACOCO COVERAGE COUN
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Campos M., 2023, CLOUDSIM PLUS AUTOMA
   Elahi B, 2020, SOFTWARE PRACT EXPER, V50, P827, DOI 10.1002/spe.2769
   Fernández-Cerero D, 2018, SIMUL MODEL PRACT TH, V82, P160, DOI 10.1016/j.simpat.2018.01.004
   Fittkau F., 2012, 2012 IEEE 6th International Workshop on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA 2012), P37, DOI 10.1109/MESOCA.2012.6392599
   Garg S. K., 2011, Proceedings of the 2011 IEEE 4th International Conference on Utility and Cloud Computing (UCC 2011), P105, DOI 10.1109/UCC.2011.24
   Grozev N., 2023, CLOUDSIMEX SET EXTEN
   Issariyakul T., 2009, INTRO NETWORK SIMULA, DOI 10.1007%2F978-0-387- 71760-9_2
   Jammal M, 2019, SOFTWARE PRACT EXPER, V49, P720, DOI 10.1002/spe.2674
   Junior T. J. T., 2020, Proceedings of the Anais Estendidos do XXI Simposio em Sistemas Computacionais de Alto Desempenho, P46
   Kathiravelu Pradeeban, 2014, 2014 22nd Annual IEEE International Symposium on Modeling, Analysis and Simulation of Computer and Telecommunication Systems (MASCOTS). Proceedings, P490, DOI 10.1109/MASCOTS.2014.70
   Kliazovich D, 2010, GLOB TELECOMM CONF
   Lei Wei-Cheng, 2022, 2022 13th International Conference on Information and Communication Technology Convergence (ICTC), P105, DOI 10.1109/ICTC55196.2022.9952434
   Li X, 2012, INT CONF CLOUD COMPU, P392, DOI 10.1109/CCIS.2012.6664434
   Louis B, 2015, INT CONF UTIL CLOUD, P11, DOI 10.1109/UCC.2015.15
   Mahmud R, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111351
   Malik AW, 2014, 2014 11TH ANNUAL HIGH CAPACITY OPTICAL NETWORKS AND EMERGING/ENABLING TECHNOLOGIES (PHOTONICS FOR ENERGY), P104, DOI 10.1109/HONET.2014.7029371
   Mampage A., 2023, P 25 IEEE INT C HIGH
   Mansouri N, 2020, SIMUL MODEL PRACT TH, V104, DOI 10.1016/j.simpat.2020.102144
   Mastenbroek F, 2021, 21ST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2021), P455, DOI 10.1109/CCGrid51090.2021.00055
   Nguyen HT., 2023, P 2 IEEE INT C QUANT
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   Prathanrat P, 2018, INT CONF INTEL INFOR, P157, DOI 10.1109/ICIIBMS.2018.8550030
   ROMEROALVAREZ J, 2023, LECT NOTES COMPUT SC, P364
   Sa T.T., 2014, CloudReports: An Extensible Simulation Tool for Energy-Aware Cloud Computing Environments. Cloud Computing. Z. Mahmood, P127, DOI [DOI 10.1007/978-3-319-10530-76., DOI 10.1007/978-3-319-10530-7_6]
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Silva Filho Manoel C., 2017, 2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), P400, DOI 10.23919/INM.2017.7987304
   Silva Filho Manoel C., 2014, Internet of Vehicles - Technologies and Services. First International Conference (IOV). Proceedings: LNCS 8662, P345, DOI 10.1007/978-3-319-11167-4_34
   Smith D., 2023, FUTURE CLOUD COMPUTI
   Son JM, 2015, IEEE ACM INT SYMP, P475, DOI 10.1109/CCGrid.2015.87
   Souza PS, 2023, FUTURE GENER COMP SY, V148, P446, DOI 10.1016/j.future.2023.06.013
   spec.openapis.org, 2023, OPENAPI SPECIFICATIO
   Su X., 2023, IEEE INTERNET THINGS
   Tsakanikas V, 2022, IEEE GLOB COMM CONF, P2644, DOI 10.1109/GLOBECOM48099.2022.10001543
   Wickremasinghe B, 2010, INT CON ADV INFO NET, P446, DOI 10.1109/AINA.2010.32
   yaml.org, 2023, YAML AINT MARKUP LAN
   Yang Q, 2012, IEEE SYS MAN CYBERN, P1, DOI 10.1109/ICSMC.2012.6377667
NR 38
TC 1
Z9 1
U1 7
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2024
VL 54
IS 3
BP 483
EP 500
DI 10.1002/spe.3290
EA NOV 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HI4X1
UT WOS:001109479400001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Akbar, MA
   Khan, AA
   Mahmood, S
   Rafi, S
   Demi, S
AF Akbar, Muhammad Azeem
   Khan, Arif Ali
   Mahmood, Sajjad
   Rafi, Saima
   Demi, Selina
TI Trustworthy artificial intelligence: A decision-making taxonomy of
   potential challenges
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE challenges; multi-vocal literature review; questionnaire; SPI manifesto;
   trustworthy AI software
ID CRITICAL SUCCESS FACTORS; SYSTEMATIC LITERATURE; PROCESS IMPROVEMENT;
   SOFTWARE; MANAGEMENT; REVIEWS
AB The significance of artificial intelligence (AI) trustworthiness lies in its potential impacts on society. AI revolutionizes various industries and improves social life, but it also brings ethical harm. However, the challenging factors of AI trustworthiness are still being debated. This research explores the challenging factors and their priorities to be considered in the software process improvement (SPI) manifesto for developing a trustworthy AI system. The multivocal literature review (MLR) and questionnaire-based survey approaches are used to identify the challenging factors from state-of-the-art literature and industry. Prioritization based taxonomy of the challenges is developed, which reveals that lack of responsible and accountable ethical AI leaders, lack of ethics audits, moral deskilling & debility, lack of inclusivity in AI multistakeholder governance, and lack of scale training programs to sensitize the workforce on ethical issues are the top-ranked challenging factors to be considered in SPI manifesto. This study's findings suggest revising AI-based development techniques and strategies, particularly focusing on trustworthiness. In addition, the results of this study encourage further research to support the development and quality assessment of ethics-aware AI systems.
C1 [Akbar, Muhammad Azeem] Lappeenranta Lahti Univ Technol, Software Engn Dept, Lappeenranta 53851, Finland.
   [Khan, Arif Ali] Univ Oulu, M3S Empir Software Engn Res Unit, Oulu, Finland.
   [Mahmood, Sajjad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
   [Rafi, Saima] Univ Murcia, Dept Informat & Syst, Murcia, Spain.
   [Demi, Selina] Ostfold Univ Coll, Fac Comp Sci, Halden, Norway.
C3 Lappeenranta-Lahti University of Technology LUT; University of Oulu;
   King Fahd University of Petroleum & Minerals; University of Murcia;
   Ostfold University College
RP Akbar, MA (corresponding author), Lappeenranta Lahti Univ Technol, Software Engn Dept, Lappeenranta 53851, Finland.
EM azeem.akbar@lut.fi
RI Demi, Selina/GSI-9056-2022; Khan, Arif Ali/ABG-2862-2020
OI Demi, Selina/0000-0001-5988-4697; Khan, Arif Ali/0000-0002-8479-1481
FU Software Engineering group of LUT University, Finland
FX The work is supported by Software Engineering group of LUT University,
   Finland.
CR Adams RJ, 2017, INT J MANAG REV, V19, P432, DOI 10.1111/ijmr.12102
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Akbar MA, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106894
   Akbar MA, 2023, INFORM TECHNOL MANAG, V24, P115, DOI 10.1007/s10799-021-00355-3
   Akbar MA, 2020, APPL SOFT COMPUT, V95, DOI 10.1016/j.asoc.2020.106557
   Akbar MA, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2292
   Akbar MA, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2275
   Akbar MA, 2018, IEEE ACCESS, V6, P8066, DOI 10.1109/ACCESS.2018.2805702
   Akkiraju R., 2020, INT C BUS PROC MAN
   Albayrak E, 2004, J INTELL MANUF, V15, P491, DOI 10.1023/B:JIMS.0000034112.00652.4c
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2010, The SAGE handbook of grounded theory
   [Anonymous], 1998, Computer analysis and qualitative research
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 1978, THEORETICAL SENSITIV
   Axinn WG, 2011, DEMOGRAPHY, V48, P1127, DOI 10.1007/s13524-011-0044-1
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Baltar F, 2012, INTERNET RES, V22, P57, DOI 10.1108/10662241211199960
   Briggs D.C., 2004, MEAS-INTERDISCIP RES, V2, P171, DOI DOI 10.1207/S15366359MEA0203_2
   Bundy A, 2017, AI SOC, V32, P285, DOI 10.1007/s00146-016-0685-0
   Burr Christopher, 2022, AI ETHICS, V3, P73, DOI [10.1007/s43681-022-00178-0, DOI 10.1007/S43681-022-00178-0]
   Chatila Raja, 2018, Technical Report
   Cheng EWL, 2002, J MANAGE ENG, V18, P194, DOI 10.1061/(ASCE)0742-597X(2002)18:4(194)
   Dignum Virginia, 2020, OXFORD HDB ETHICS AI, P215
   Eisenbeiss SA, 2012, J PERS PSYCHOL, V11, P7, DOI 10.1027/1866-5888/a000055
   European Commission, 2019, Ethics Guidelines for Trustworthy AI, DOI DOI 10.2759/346720
   Garousi V, 2019, SOFTWARE QUAL J, V27, P429, DOI 10.1007/s11219-018-9419-5
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Greene D, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P2122
   Hagendorff, 2021, BLIND SPOTS ETHICS E, DOI DOI 10.1007/S43681-021-00122-8
   Hagendorff T, 2020, MIND MACH, V30, P99, DOI 10.1007/s11023-020-09517-8
   Holmes W., 2020, Artificial Intelligence in Education
   ISO/IEC, 2021, ISO IEC JTC 1 SC 42
   Jalali S, 2012, IEEE INT SYMP INFO
   Jobin A, 2019, NAT MACH INTELL, V1, P389, DOI 10.1038/s42256-019-0088-2
   Keshta I, 2017, IEEE ACCESS, V5, P24162, DOI 10.1109/ACCESS.2017.2764490
   Khan AA., 2022, IEEE T COMPUT SOC SY
   Khan AA., 2023, IEEE T COMPUT SOC SY
   Khan AA, 2021, APPL SOFT COMPUT, V102, DOI 10.1016/j.asoc.2021.107090
   Khan AA, 2018, IET SOFTW, V12, P333, DOI 10.1049/iet-sen.2018.0010
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Kuziemski M, 2020, TELECOMMUN POLICY, V44, DOI 10.1016/j.telpol.2020.101976
   Leikas Jaana, 2019, Journal of Open Innovation: Technology, Market, and Complexity, V5, P18, DOI DOI 10.3390/JOITMC5010018
   Lwakatare LE, 2019, LECT NOTES BUS INF P, V355, P227, DOI 10.1007/978-3-030-19034-7_14
   Mahmood S, 2017, INFORM SOFTWARE TECH, V91, P102, DOI 10.1016/j.infsof.2017.06.009
   Molléri JS, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106240
   Muller V.C., 2020, Ethics of artificial intelligence and robotics
   Nguyen-Duc A., 2020, MULTIPLE CASE STUDY
   Niazi M, 2016, INT J PROJ MANAG, V34, P1553, DOI 10.1016/j.ijproman.2016.08.008
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Ong DC., 2021, 2021 9 INT C AFF COM
   Pekka A., 2018, EUROPEAN COMMISSIONS
   Pries-Heje J., 2010, SPI MANIFESTO VERSIO
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Rafi S, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2448
   Rodríguez P, 2022, IEEE T SOFTWARE ENG, V48, P466, DOI 10.1109/TSE.2020.2989666
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schiff D, 2020, PROCEEDINGS OF THE 3RD AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY AIES 2020, P153, DOI 10.1145/3375627.3375804
   Shaikh DA, 2022, 2022 SECOND INTERNATIONAL CONFERENCE ON ADVANCES IN ELECTRICAL, COMPUTING, COMMUNICATION AND SUSTAINABLE TECHNOLOGIES (ICAECT), DOI 10.1109/ICAECT54875.2022.9807998
   Shameem M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1979
   Shameem M, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P17, DOI 10.1109/APSECW.2017.22
   Stahl BC, 2022, INT J INFORM MANAGE, V62, DOI 10.1016/j.ijinfomgt.2021.102441
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Vakkuri V., 2019, INT C PROD FOC SOFTW
   Vakkuri V., 2020, INT C AG SOFTW DEV
   Vakkuri V., 2019, COMPUT SCI
   Vakkuri V, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111067
   White VJ, 2001, J INFORM SCI, V27, P357, DOI 10.1177/016555150102700601
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Yin R. K., 2009, CASE STUDY RES DESIG, V4th ed.
   Youssef M., 2022, MULTI CRITERIA DECIS
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhongming Z., 2020, BEIJING ACAD ARTIFIC
   Zinda N., 2022, 2021 YB DIGITAL ETHI, P183
NR 77
TC 1
Z9 1
U1 11
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 MAY 31
PY 2023
DI 10.1002/spe.3216
EA MAY 2023
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I0ZY8
UT WOS:001000156500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Savary-Leblanc, M
   Burgueño, L
   Cabot, J
   Le Pallec, X
   Gérard, S
AF Savary-Leblanc, Maxime
   Burgueno, Lola
   Cabot, Jordi
   Le Pallec, Xavier
   Gerard, Sebastien
TI Software assistants in software engineering: A systematic mapping study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software assistants; software construction; software design; software
   maintenance; systematic mapping study
ID KNOWLEDGE; DEVELOPERS; WORK
AB The increasing essential complexity of software systems makes current software engineering methods and practices fall short in many occasions. Software assistants have the ability to help humans achieve a variety of tasks, including the development of software. Such assistants, which show human-like competences such as autonomy and intelligence, help software engineers do their job by empowering them with new knowledge. This article investigates the research efforts that have been conducted on the creation of assistants for software design, construction and maintenance paying special attention to the user-assistant interactions. To this end, we followed the standard systematic mapping study method to identify and classify relevant works in the state of the art. Out of the 7580 articles resulting from the automatic search, we identified 112 primary studies that present works which qualify as software assistants. We provide all the resources needed to reproduce our study. We report on the trends and goals of the assistants, the tasks they perform, how they interact with users, the technologies and mechanisms they exploit to embed intelligence and provide knowledge, and their level of automation. We propose a classification of software assistants based on interactions and present an analysis of the different automation patterns. As outcomes of our study, we provide a classification of software assistants dealing with the design, construction and maintenance phases of software development, we discuss the results, identify open lines of work and challenges and call for new innovative and rigorous research efforts in this field.
C1 [Savary-Leblanc, Maxime; Le Pallec, Xavier] Univ Lille, Cent Lille, INRIA, CNRS,UMR CRIStAL 9189, F-59000 Lille, France.
   [Burgueno, Lola; Cabot, Jordi] Open Univ Catalonia, SOM Res Lab, Barcelona, Spain.
   [Burgueno, Lola] Univ Malaga, Dept Comp Sci & Programming Languages, Malaga, Spain.
   [Cabot, Jordi] ICREA, Internet Interdisciplinary Inst, Barcelona, Spain.
   [Gerard, Sebastien] Univ Paris Saclay, CEA List, Palaiseau, France.
C3 Centre National de la Recherche Scientifique (CNRS); Inria; Universite
   de Lille; Centrale Lille; UOC Universitat Oberta de Catalunya;
   Universidad de Malaga; ICREA; Universite Paris Saclay; CEA; Universite
   Paris Cite
RP Savary-Leblanc, M (corresponding author), Univ Lille, Cent Lille, INRIA, CNRS,UMR CRIStAL 9189, F-59000 Lille, France.
EM maxime.savary-leblanc@univ-lille.fr
RI Cabot, Jordi/P-7723-2015
OI Gerard, Sebastien/0000-0003-0295-0520; Savary-Leblanc,
   Maxime/0000-0002-7327-5676
FU Spanish Government [PID2020-114615RB-I00, PID2021-125527NB-I00]; ECSEL
   Joint Undertaking (JU) [101007260, 101007350]
FX Spanish Government, Grant/Award Numbers: PID2020-114615RB-I00,
   PID2021-125527NB-I00; ECSEL Joint Undertaking (JU), Grant/Award Numbers:
   101007260, 101007350
CR Ackerman P., 2005, Handbook of understanding and measuring intelligence pp, P125
   Ackoff R. L., 1989, Journal of applied system analysis, V16, P3, DOI DOI 10.5840/DU2005155/629
   Almonte L, 2022, SOFTW SYST MODEL, V21, P249, DOI 10.1007/s10270-021-00905-x
   [Anonymous], SLR DATA TABLES RESO
   Bahmanziari T, 2003, J COMPUT INFORM SYST, V43, P46
   Bailey BP, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P593
   Barricelli BR, 2019, J SYST SOFTWARE, V149, P101, DOI 10.1016/j.jss.2018.11.041
   Belisle C., 2006, LITERACY DIGITAL KNO, P51
   Bernard D, 2017, IEEE SYS MAN CYBERN, P210, DOI 10.1109/SMC.2017.8122604
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Boehm B.A., 2006, Proceedings of ICSE'06 Conference, P12, DOI DOI 10.1145/1134285.1134288
   Borges OT, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 2, P306, DOI 10.5220/0009417703060313
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brunschwig L, 2022, SOFTW SYST MODEL, V21, P179, DOI 10.1007/s10270-021-00897-8
   Bryndin Evgeniy., 2019, International Journal on Data Science and Technology, V5, P66, DOI [DOI 10.11648/J.IJDST.20190504.11, 10.11648/j.ijdst.20190504.11]
   Burnett M, 2009, LECT NOTES COMPUT SC, V5435, P15
   Chopra K., 2003, P 36 HAWAII INT C SY
   Erlenhov L, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P7, DOI 10.1109/BotSE.2019.00009
   Feldt R, 2018, INT WORK REAL ARTIF, P35, DOI 10.1145/3194104.3194109
   Ferrara E, 2016, COMMUN ACM, V59, P96, DOI 10.1145/2818717
   Fiore S.M., 2010, Macrocognition in teams: Theories and methodologies, P179
   Gasparic M, 2016, J SYST SOFTWARE, V113, P101, DOI 10.1016/j.jss.2015.11.036
   Girgensohn A., 1994, Proceedings. The Ninth Knowledge-Based Software Engineering Conference (Cat. No.94TH0664-3), P22, DOI 10.1109/KBSE.1994.342681
   Graziotin D., 2017, P 21 INT C EVALUATIO
   Graziotin D, 2018, J SYST SOFTWARE, V140, P32, DOI 10.1016/j.jss.2018.02.041
   GRUDIN J, 1994, COMPUTER, V27, P19, DOI 10.1109/2.291294
   Hall RJ, 1996, PROCEEDINGS OF THE 11TH KNOWLEDGE-BASED SOFTWARE ENGINEERING CONFERENCE, P42, DOI 10.1109/KBSE.1996.552822
   HARRISON W., 2000, Proceedings of the Conference on the Future of Software Engineering (Limerick, Ireland, June 04 - 11, P261, DOI DOI 10.1145/336512.336569.ACM
   Hertzum M., 2002, Information and Organization, V12, P1, DOI 10.1016/S1471-7727(01)00007-0
   Huo QN, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P210
   Iung A, 2020, EMPIR SOFTW ENG, V25, P4205, DOI 10.1007/s10664-020-09872-1
   Jennings N, 1996, IEE REVIEW, V42, P17, DOI 10.1049/ir:19960101
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Koo TK, 2016, J CHIROPR MED, V15, P155, DOI 10.1016/j.jcm.2016.02.012
   Lethbridge TC, 2000, COMPUTER, V33, P44, DOI 10.1109/2.841783
   LEVARY RR, 1991, SOFTWARE PRACT EXPER, V21, P133, DOI 10.1002/spe.4380210203
   Maedche A, 2019, BUS INFORM SYST ENG+, V61, P535, DOI 10.1007/s12599-019-00600-8
   Maedche A, 2016, BUS INFORM SYST ENG+, V58, P367, DOI 10.1007/s12599-016-0444-2
   Malone, 2020, FUTURE MANAGEMENT WO, P165
   Mens Kim., 2014, Recommendation Systems in Software Engineering, P93
   Mens T, 2012, COMPUTER, V45, P79, DOI 10.1109/MC.2012.273
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Miguel RS, 2002, ONLINE INFORM REV, V26, P239, DOI 10.1108/14684520210438688
   Murphy GC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P73, DOI 10.1109/ICSE-NIER.2019.00027
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Nielsen J., 2000, End of Web Design
   ODonovan John, 2005, P 10 INT C INTELLIGE, P167, DOI [10.1145/1040830.1040870, DOI 10.1145/1040830.1040870]
   Parasuraman R, 2000, IEEE T SYST MAN CY A, V30, P286, DOI 10.1109/3468.844354
   Parnin C, 2009, INT C PROGRAM COMPRE, P80, DOI 10.1109/ICPC.2009.5090030
   Pearlson K.E., 2006, Managing and using information systems: A strategic approach, V3rd
   Pérez-Soler S, 2018, IEEE SOFTWARE, V35, P48, DOI 10.1109/MS.2018.290101511
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Portillo-Rodríguez J, 2012, INFORM SOFTWARE TECH, V54, P663, DOI 10.1016/j.infsof.2012.02.006
   Pu P., 2006, 2006 International Conference on Intelligent User Interfaces, P93, DOI 10.1145/1111449.1111475
   RAMSAY A, 1983, SOFTWARE PRACT EXPER, V13, P983, DOI 10.1002/spe.4380131102
   Rech J, 2007, IEEE SOFTWARE, V24, P72, DOI 10.1109/MS.2007.110
   Robillard MartinP., 2014, An Introduction to Recommendation Systems in Software Engineering, P1, DOI [10.1007/978-3-642-45135-5_1, DOI 10.1007/978-3-642-45135-5_1]
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Rowley J, 2007, J INF SCI, V33, P163, DOI 10.1177/0165551506070706
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Sanctorum Audrey, 2021, End-User Development. 8th International Symposium, IS-EUD 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12724), P204, DOI 10.1007/978-3-030-79840-6_14
   Savchenko D, 2019, 2019 42ND INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1509, DOI [10.23919/MIPRO.2019.8756975, 10.23919/mipro.2019.8756975]
   Sebastián G, 2020, J COMPUT LANG, V56, DOI 10.1016/j.cola.2019.100935
   SHADBOLT N, 1993, IEEE SOFTWARE, V10, P34, DOI 10.1109/52.241964
   Shafiq S., MACHINE LEARNING SOF
   Spahn M, 2008, 16 EUR C INF SYST EC, P303
   Storey MA., 2020, DAGSTUHL REPORTS, V9, P84, DOI [DOI 10.4230/DAGREP.9.11.84, 10.4230/DagRep.9.11.84]
   Storey MA, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P928, DOI 10.1145/2950290.2983989
   Vagia M, 2016, APPL ERGON, V53, P190, DOI 10.1016/j.apergo.2015.09.013
   Wooldridge M, 2002, LECT NOTES ARTIF INT, V2322, P3
   Yu S., 2010, 2010 2 IEEE INT C IN, P352, DOI [10.1109/ICIME.2010.5477581, DOI 10.1109/ICIME.2010.5477581]
NR 72
TC 6
Z9 6
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 856
EP 892
DI 10.1002/spe.3170
EA DEC 2022
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000894952500001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Wang, RY
   Sun, D
   Wong, R
   Ranjan, R
AF Wang, Ruoyu
   Sun, Daniel
   Wong, Raymond
   Ranjan, Rajiv
TI Horn rule discovery with batched caching and rule identifier for
   proficient compressor of knowledge data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE caching; Horn rules; knowledge bases; pruning; relational databases;
   semantic compressor
ID SYSTEM
AB Knowledge data has been widely applied to artificial intelligence applications for interpretable and complex reasoning. Modern knowledge bases are constructed via automatic knowledge extraction from open-accessible sources. Thus the sizes of KBs are continuously growing, heavily burdening the maintenance and application of the knowledge data. Besides the grammatical redundancies, semantically repeated information also frequently appears in knowledge bases but is still under-explored. Existing semantic compressors fail to efficiently discover expressive patterns and thus perform unsatisfyingly on knowledge data. This article proposes SInC, a semantic inductive compressor, to efficiently induce first-order Horn rules and semantically compress knowledge bases. SInC improves the scalability of top-down rule mining by batching correlated records in the cache and further optimizes the pruning of duplication and specialization via an identifier structure of Horn rules. SInC was evaluated on real-world and synthetic datasets and compared against the state-of-the-art. The results show that the batched caching speed up the rule mining procedure by more than two orders while consuming fewer than three times memory space. The identifier technique speeds up the duplication and specialization pruning by orders of magnitude with less than 5 & PTSTHOUSND; and 15% error rates, respectively. SInC outperforms the state-of-the-art from the perspective of overall compression on both scalability and compression effect.
C1 [Wang, Ruoyu; Sun, Daniel; Wong, Raymond] Shanghai Jiao Tong Univ, Sch Software, Shanghai, Peoples R China.
   [Wang, Ruoyu] Univ New South Wales, Sch Comp Sci & Engn, Sydney, NSW, Australia.
   [Sun, Daniel] Enhitech LLC, 951 Jianchuan Rd, Shanghai, Peoples R China.
   [Ranjan, Rajiv] Newcastle Univ, Newcastle Upon Tyne, Tyne & Wear, England.
C3 Shanghai Jiao Tong University; University of New South Wales Sydney;
   Newcastle University - UK
RP Sun, D (corresponding author), Enhitech LLC, 951 Jianchuan Rd, Shanghai, Peoples R China.
EM danielwsun@gmail.com
RI Wang, Ruoyu/ISU-3815-2023
OI Wang, Ruoyu/0000-0002-7091-0291
CR Babu S, 2001, SIGMOD RECORD, V30, P283, DOI 10.1145/376284.375693
   Belth C, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P1115, DOI 10.1145/3366423.3380189
   Chen J, 2008, ACM S THEORY COMPUT, P177
   Chklovski T., 2004, Proceedings of the Conference on Empirical Methods in Natural Language Processing, P33
   Clocksin W. F., 2003, Programming in PROLOG
   Cropper A, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4833
   Diefenbach D, 2018, KNOWL INF SYST, V55, P529, DOI 10.1007/s10115-017-1100-y
   Fernández JD, 2013, J WEB SEMANT, V19, P22, DOI 10.1016/j.websem.2013.01.002
   Fonseca NA, 2009, MACH LEARN, V74, P257, DOI 10.1007/s10994-008-5094-2
   Fournier-Viger P, 2019, STUD BIG DATA, V51, P1, DOI 10.1007/978-3-030-04921-8_1
   Fournier-Viger P, 2017, WIRES DATA MIN KNOWL, V7, DOI 10.1002/widm.1207
   Galárraga L, 2015, VLDB J, V24, P707, DOI 10.1007/s00778-015-0394-1
   Gan WS, 2021, IEEE T KNOWL DATA EN, V33, P1306, DOI 10.1109/TKDE.2019.2942594
   Gan WS, 2019, ACM T KNOWL DISCOV D, V13, DOI 10.1145/3314107
   Gan WS, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1242
   Gupta N., 2022, FUZZY LOGIC BASED SY, P1058, DOI [10.1109/ICESC54411.2022.9885338, DOI 10.1109/ICESC54411.2022.9885338]
   Hu S, 2018, IEEE T KNOWL DATA EN, V30, P824, DOI 10.1109/TKDE.2017.2766634
   Ilkhechi A, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1733, DOI 10.1145/3318464.3389734
   Jagadish HV, 2004, PROC INT CONF DATA, P646, DOI 10.1109/ICDE.2004.1320034
   Jagadish HV, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P186
   Jiawei Han, 2000, SIGMOD Record, V29, P1, DOI 10.1145/335191.335372
   Joshi Amit Krishna, 2013, Semantic Web: Semantics and Big Data. Proceedings of 10th International Conference (ESWC 2013): LNCS 7882, P170
   Lehmann J, 2015, SEMANT WEB, V6, P167, DOI 10.3233/SW-140134
   Manola F, 2004, RDF PRIMER W3C RECOM, V10, P6
   Meier M, 2008, LECT NOTES COMPUT SC, V5341, P89, DOI 10.1007/978-3-540-88737-9_8
   Muggleton S, 2010, LECT NOTES ARTIF INT, V5989, P131, DOI 10.1007/978-3-642-13840-9_13
   Muggleton SH, 2014, MACH LEARN, V94, P25, DOI 10.1007/s10994-013-5358-3
   Pan JZ, 2015, LECT NOTES COMPUT SC, V8943, P239, DOI 10.1007/978-3-319-15615-6_18
   Qiao LT, 2021, AAAI CONF ARTIF INTE, V35, P4303
   QUINLAN JR, 1990, MACH LEARN, V5, P239, DOI 10.1007/BF00117105
   Sachan M, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P2681
   Srinivasan A, 2012, MACH LEARN, V86, P141, DOI 10.1007/s10994-011-5245-8
   Tanon TP, 2020, LECT NOTES COMPUT SC, V12123, P583, DOI 10.1007/978-3-030-49461-2_34
   Urbani J, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P1761, DOI 10.1145/3366423.3380246
   Wang R., 2022, RDF KNOWLEDGE BASE S
   Xu L, 2019, AAAI CONF ARTIF INTE, P7346
   Yin XX, 2004, LECT NOTES ARTIF INT, V3848, P172
   Zeng Q, 2014, PROC VLDB ENDOW, V8, P197, DOI 10.14778/2735508.2735510
   Zneika M., 2016, P 19 INT C EXTENDING
NR 39
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 682
EP 703
DI 10.1002/spe.3165
EA NOV 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000889458200001
DA 2024-07-18
ER

PT J
AU Ritschel, N
   Sawant, AA
   Weintrop, D
   Holmes, R
   Bacchelli, A
   Garcia, R
   Chandrika, KR
   Mandal, A
   Francis, P
   Shepherd, DC
AF Ritschel, Nico
   Sawant, Anand Ashok
   Weintrop, David
   Holmes, Reid
   Bacchelli, Alberto
   Garcia, Ronald
   Chandrika, K. R.
   Mandal, Avijit
   Francis, Patrick
   Shepherd, David C.
TI Training industrial end-user programmers with interactive tutorials
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE end-user programming; programming support; robotics; tutorials; user
   study
AB Newly released robot programming tools have made it feasible for end-users to program industrial robots by combining block-based languages and lead-through programming. To use these systems effectively, end-users, who usually have limited or no programming experience, require training. To train users, tutoring systems are often used for block-based programming-some even for lead-through programming-but no tutorial system combines these two types of programming. We present CoBlox Interactive Tutorials (CITs), a novel tutoring approach that teaches how to use both the hardware and software components that comprise a typical end-user robot programming environment. As users switch between the two programming styles, CITs provide them with extensive scaffolding, give users immediate feedback on missteps, and provide guidance on next steps. To evaluate CITs, we conducted a study with 79 industrial end-users using a programming environment released by ABB Robotics that compares our approach to training with training videos, the most commonly used training in industry. This study, one of the largest to date on training professional end-users, found that CIT-trained users authored more correct programs in less time than video-trained users. This shows that a tight integration of hardware and software concepts is crucial to training end-users to program industrial robots.
C1 [Ritschel, Nico; Holmes, Reid; Garcia, Ronald] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
   [Sawant, Anand Ashok] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
   [Weintrop, David] Univ Maryland, Coll Educ, College Pk, MD USA.
   [Bacchelli, Alberto] Univ Zurich, Dept Informat, Zurich, Switzerland.
   [Chandrika, K. R.; Mandal, Avijit] ABB Corp Res, Bangalore, Karnataka, India.
   [Francis, Patrick] UserVoice Inc, Raleigh, NC USA.
   [Shepherd, David C.] Virginia Commonwealth Univ, Dept Comp Sci, Richmond, VA USA.
C3 University of British Columbia; University of California System;
   University of California Davis; University System of Maryland;
   University of Maryland College Park; University of Zurich; ABB; Virginia
   Commonwealth University
RP Ritschel, N (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
EM ritschel@cs.ubc.ca
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; K R,
   Chandrika/0000-0003-3032-3030; Ritschel, Nico/0000-0001-5600-2978;
   Sawant, Anand/0000-0002-5816-8020
FU ABB Corporate Research; National Science Foundation [2024561]; Natural
   Sciences and Engineering Research Council of Canada; Div Of Information
   & Intelligent Systems; Direct For Computer & Info Scie & Enginr
   [2024561] Funding Source: National Science Foundation
FX ABB Corporate Research; National Science Foundation, Grant/Award Number:
   2024561; Natural Sciences and Engineering Research Council of Canada
CR Ajaykumar G., 2021, SURVEY END USER ROBO
   ANDERSON JR, 1985, SCIENCE, V228, P456, DOI 10.1126/science.228.4698.456
   [Anonymous], 2005, Proc. SIGCHI
   Ashenfelter, 2017, GIFT CHILD TODAY, V40, P220
   Bangor A, 2008, INT J HUM-COMPUT INT, V24, P574, DOI 10.1080/10447310802205776
   Bangor A, 2009, J USABILITY STUD, V4, P114
   Barobo Inc, 2020, ROBOBLOCKLY
   Bergman L., 2005, Proc. ACM UIST, DOI [10.1145/1095034.1095067, DOI 10.1145/1095034.1095067]
   Biggs G., 2003, Proceedings of the Australasian conference on robotics and automation, P27, DOI DOI 10.1109/ROBOT.2001.932554
   Bischoff R, 2002, IEEE ROMAN 2002, PROCEEDINGS, P482, DOI 10.1109/ROMAN.2002.1045668
   BLOOM BS, 1984, EDUC LEADERSHIP, V41, P4
   Bottani E, 2019, IISE TRANS, V51, P284, DOI 10.1080/24725854.2018.1493244
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Cao YZ, 2019, PROCEEDINGS OF THE 32ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY (UIST 2019), P521, DOI 10.1145/3332165.3347902
   Carroll J.M., 1987, Paradox of the active user
   Code Inc, 2020, HOUR COD CODESIGN
   Cooper L., 2010, WORK INTEGRATED LEAR
   Cooper S., 2000, CONSORTIUM COMPUTING, V15, P107, DOI DOI 10.5555/364133.364161
   Corbett A., 2001, USER MODELING
   Davis JU, 2019, PROCEEDINGS OF THE 32ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY (UIST 2019), P109, DOI 10.1145/3332165.3347920
   Dorn B, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P703
   Duin S.V., 2010, P ISR 2010 41 INT S, P1
   Fernquist Jennifer, 2011, P 24 ANN ACM S USER, P373, DOI 10.1145/2047196.2047245
   Grossman T, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1515
   Grossman T, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P649
   Guo PJ, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P7070, DOI 10.1145/3025453.3025945
   Hägele M, 2016, IEEE ROBOT AUTOM MAG, V23, P117, DOI 10.1109/MRA.2015.2512741
   Huang J, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P203
   Kim AS, 2017, PROCEEDINGS OF THE 2017 ACM SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'17), P321, DOI 10.1145/3017680.3017728
   Knabe K., 1995, Conference companion on Human factors in computing systems, P286, DOI DOI 10.1145/223355.223677
   Kock S., 2011, Assembly and Manufacturing (ISAM), 2011 IEEE International Symposium on, P1, DOI 10.1109/ISAM.2011.5942358
   Kushida D., 2001, Artificial Life and Robotics, V5, P26, DOI 10.1007/BF02481317
   Lego Systems Inc, 2008, LEG MINDST NXT G INV
   Lewis JR, 2009, LECT NOTES COMPUT SC, V5619, P94, DOI 10.1007/978-3-642-02806-9_12
   Li W, 2012, UIST'12: PROCEEDINGS OF THE 25TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P103
   Metcalfe J, 2017, ANNU REV PSYCHOL, V68, P465, DOI 10.1146/annurev-psych-010416-044022
   NI Learning Center, 2022, LABVIEW TUT GETT STA
   Resnick M, 2009, COMMUN ACM, V52, P60, DOI 10.1145/1592761.1592779
   Ritschel N, 2022, IEEE T SOFTWARE ENG, V48, P1630, DOI 10.1109/TSE.2020.3027255
   Sefidgar YS, 2016, SUI'18: PROCEEDINGS OF THE 2018 SYMPOSIUM ON SPATIAL USER INTERACTION, P141, DOI 10.1145/3267782.3267921
   Soloway E., 1994, Interactions, V1, P36, DOI 10.1145/174809.174813
   van der Meij H, 2014, COMPUT EDUC, V78, P150, DOI 10.1016/j.compedu.2014.06.003
   VanLehn K, 2011, EDUC PSYCHOL-US, V46, P197, DOI 10.1080/00461520.2011.611369
   Wang CY, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P4027, DOI 10.1145/2556288.2557407
   Warner J, 2018, UIST 2018: PROCEEDINGS OF THE 31ST ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P435, DOI 10.1145/3242587.3242591
   Weintrop D, 2018, CHI 2018: EXTENDED ABSTRACTS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3170427.3186599
   Weintrop D, 2017, 2017 IEEE BLOCKS AND BEYOND WORKSHOP (B&B), P29, DOI 10.1109/BLOCKS.2017.8120406
   Yoonji Kim, 2019, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V3, DOI 10.1145/3369838
NR 48
TC 0
Z9 0
U1 3
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 729
EP 747
DI 10.1002/spe.3167
EA NOV 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000881831100001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Malhotra, S
   Singh, W
AF Malhotra, Sheenam
   Singh, Williamjeet
TI A secure neural network-based ranking approach for document searching in
   cloud data center
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE artificial neural network; cloud computing; inverse document frequency;
   ranking; symmetric searchable encryption
ID KEYWORD RANKED SEARCH; ENCRYPTED DATA; EFFICIENT
AB Cloud computing has gained attention due to its sophisticated processing architecture and data storage capabilities in the last couple of years. Due to high volume data and the endless number of possible users, the security of the account holder's stored data and privacy becomes essential for this paradigm. This article focuses on the encryption architecture of data storage and retrieval by creating an encrypted searchable index, which is inspired by symmetric searchable encryption. Ranking becomes a need for providing the best out of the search results to the user. This research article proposes an efficient and flexible artificial neural network (ANN) based ranking scheme to search for documents from the cloud server. The proposed algorithm architecture is segmented into three parts. The first part is the generation of the encryption index over the uploaded data, the second part is query analysis, and the third part is ranking. To consolidate the encryption mechanism, RSA, NTRU, and AES were used based on the requirement of the data. To orient the retrieval part, the degree of the top keyword in the server is determined by using term frequency with inverse document frequency schemes. The retrieved documents are further ranked using ANNs. The simulation setup was done on MATLAB 2016b having datasets from Kaggle (Twitter data) and FIRE dataset.
C1 [Malhotra, Sheenam; Singh, Williamjeet] Punjabi Univ, Fac Engn & Technol, Dept Comp Sci & Engn, Patiala, Punjab, India.
C3 Punjabi University
RP Malhotra, S (corresponding author), Punjabi Univ, Fac Engn & Technol, Dept Comp Sci & Engn, Patiala, Punjab, India.
EM sheenam.malhotra@gmail.com
CR AMATO NM, 1994, FTCS-24 - THE TWENTY-FOURTH INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING, P164
   [Anonymous], 2010, P INFOCOM, DOI DOI 10.1109/INFCOM.2010.5462196
   [Anonymous], ABOUT AS
   Baek J., 2019, J WIREL MOB NETW UBI, V10, P75
   Boneh D, 2004, LECT NOTES COMPUT SC, V3027, P506
   Cao N, 2014, IEEE T PARALL DISTR, V25, P222, DOI 10.1109/TPDS.2013.45
   Chang YC, 2005, LECT NOTES COMPUT SC, V3531, P442
   Chen Y, 2022, IEEE T SERV COMPUT, V15, P724, DOI 10.1109/TSC.2019.2959306
   Cui YB, 2020, IEEE ACCESS, V8, P99024, DOI 10.1109/ACCESS.2020.2996940
   Curtmola R, 2011, J COMPUT SECUR, V19, P895, DOI 10.3233/JCS-2011-0426
   Devanbu PT, 2002, IEEE T SOFTWARE ENG, V28, P100, DOI 10.1109/32.979991
   Dhumal AA, 2016, PROCEDIA COMPUT SCI, V79, P845, DOI 10.1016/j.procs.2016.03.105
   Fu ZJ, 2015, J INTERNET TECHNOL, V16, P453, DOI 10.6138/JIT.2015.16.3.20140918
   Fu ZJ, 2015, IEICE T COMMUN, VE98B, P190, DOI 10.1587/transcom.E98.B.190
   Fu ZJ, 2014, IEEE T CONSUM ELECTR, V60, P164, DOI 10.1109/TCE.2014.6780939
   GANGULI MA, 2017, ADV COMPUTING, V7, P58
   Goh EJ, 2003, Cryptology ePrint Archive, Report 2003/216
   Golle P, 2004, LECT NOTES COMPUT SC, V3089, P31, DOI 10.1007/978-3-540-24852-1_3
   Guo ZQ, 2018, J SYST SOFTWARE, V137, P380, DOI 10.1016/j.jss.2017.12.008
   Jiang XX, 2017, INFORM SCIENCES, V403, P22, DOI 10.1016/j.ins.2017.03.037
   Kaur A., 2012, J ENG SCI TECHNOLOGY, V2, P737
   Khan SA, 2019, INT CONF ADVAN COMPU, P395, DOI [10.1109/ICACCS.2019.8728427, 10.1109/icaccs.2019.8728427]
   Li HW, 2015, IEEE WIREL COMMUN, V22, P74, DOI 10.1109/MWC.2015.7224730
   Li P, 2018, CLUSTER COMPUT, V21, P277, DOI 10.1007/s10586-017-0849-9
   Li RX, 2014, FUTURE GENER COMP SY, V30, P179, DOI 10.1016/j.future.2013.06.029
   Liu L, 2019, IEEE INTERNET THINGS, V6, P9841, DOI 10.1109/JIOT.2019.2932444
   Malhotra S., 2019, INT J INNOVAT TECHNO, V8, P4132
   Mashauri D., 2015, P INT C COLL COMP NE, P3
   Miao YB, 2018, INFORM SCIENCES, V465, P21, DOI 10.1016/j.ins.2018.06.066
   Negi A., 2015, INT J COMPUT APPL, V129, P17
   Netinti RR., 2016, INT J SCI ENG ADV TE, V3, P1370
   Orencik C, 2013, IEEE INT CONF CLOUD, P390, DOI 10.1109/CLOUD.2013.18
   Peng TY, 2018, IEEE ACCESS, V6, P21924, DOI 10.1109/ACCESS.2018.2828404
   Saini V, 2016, ADV INTELL SYST, V452, P433, DOI 10.1007/978-981-10-1023-1_43
   Song DXD, 2000, P IEEE S SECUR PRIV, P44, DOI 10.1109/SECPRI.2000.848445
   Sun JF, 2020, IEEE SYST J, V14, P1728, DOI 10.1109/JSYST.2019.2933346
   Sun X., 2013, P ADV SCI TECHNOLOGY, V31, P271
   Wang C, 2010, INT CON DISTR COMP S, DOI 10.1109/ICDCS.2010.34
   Waters B. R., 2004, NDSS, V4, P5
   Xia ZH, 2016, IEEE T PARALL DISTR, V27, P340, DOI 10.1109/TPDS.2015.2401003
   Xiao TT, 2021, CONNECT SCI, V33, P95, DOI 10.1080/09540091.2020.1753175
   Xu ZY, 2012, INT C PAR DISTRIB SY, P244, DOI 10.1109/ICPADS.2012.42
   Yang Y., 2017, IEEE T DEPEND SEC CO, V17, p320
   Yao YQ, 2019, IEEE ACCESS, V7, P164544, DOI 10.1109/ACCESS.2019.2952163
   Ying Ren, 2020, Advances in 3D Image and Graphics Representation, Analysis, Computing and Information Technology. Methods and Algorithms. Proceedings of IC3DIT 2019. Smart Innovation, Systems and Technologies (SIST 179), P385, DOI 10.1007/978-981-15-3863-6_43
   Yu JD, 2013, IEEE T DEPEND SECURE, V10, P239, DOI 10.1109/TDSC.2013.9
   Zhang W., 2015, IEEE T COMPUT, V65, p1566
   Zhang W, 2014, I C DEPEND SYS NETWO, P276, DOI 10.1109/DSN.2014.36
   Zissis D, 2012, FUTURE GENER COMP SY, V28, P583, DOI 10.1016/j.future.2010.12.006
   Zou Y, 2020, SECUR COMMUN NETW, V2020, DOI 10.1155/2020/1238505
NR 50
TC 1
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2022
VL 52
IS 9
BP 1927
EP 1946
DI 10.1002/spe.3097
EA MAY 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3T7YW
UT WOS:000796756400001
DA 2024-07-18
ER

PT J
AU Araujo, G
   Griebler, D
   Rockenbach, DA
   Danelutto, M
   Fernandes, LG
AF Araujo, Gabriell
   Griebler, Dalvan
   Rockenbach, Dinei A.
   Danelutto, Marco
   Fernandes, Luiz G.
TI NAS Parallel Benchmarks with CUDA and beyond
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE graphics processing units; high-performance computing; NPB; parallel
   applications; parallel programming; performance analysis
AB NAS Parallel Benchmarks (NPB) is a standard benchmark suite used in the evaluation of parallel hardware and software. Several research efforts from academia have made these benchmarks available with different parallel programming models beyond the original versions with OpenMP and MPI. This work joins these research efforts by providing a new CUDA implementation for NPB. Our contribution covers different aspects beyond the implementation. First, we define design principles based on the best programming practices for GPUs and apply them to each benchmark using CUDA. Second, we provide ease of use parametrization support for configuring the number of threads per block in our version. Third, we conduct a broad study on the impact of the number of threads per block in the benchmarks. Fourth, we propose and evaluate five strategies for helping to find a better number of threads per block configuration. The results have revealed relevant performance improvement solely by changing the number of threads per block, showing performance improvements from 8% up to 717% among the benchmarks. Fifth, we conduct a comparative analysis with the literature, evaluating performance, memory consumption, code refactoring required, and parallelism implementations. The performance results have shown up to 267% improvements over the best benchmarks versions available. We also observe the best and worst design choices, concerning code size and the performance trade-off. Lastly, we highlight the challenges of implementing parallel CFD applications for GPUs and how the computations impact the GPU's behavior.
C1 [Araujo, Gabriell; Griebler, Dalvan; Rockenbach, Dinei A.; Fernandes, Luiz G.] Pontifical Catholic Univ Rio Grande do Sul PUCRS, Sch Technol, BR-90619900 Porto Alegre, RS, Brazil.
   [Griebler, Dalvan; Rockenbach, Dinei A.] Tres de Maio Educ Soc Setrem, Lab Adv Res Cloud Comp LARCC, Tres De Maio, Brazil.
   [Danelutto, Marco] Univ Pisa, Dept Comp Sci, Pisa, Italy.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul; University of
   Pisa
RP Araujo, G; Griebler, D (corresponding author), Pontifical Catholic Univ Rio Grande do Sul PUCRS, Sch Technol, BR-90619900 Porto Alegre, RS, Brazil.
EM gabriell.araujo@edu.pucrs.br; dalvan.griebler@pucrs.br
RI Griebler, Dalvan/C-2041-2017; Fernandes, Luiz Gustavo/N-1988-2018
OI Griebler, Dalvan/0000-0002-4690-3964; Rockenbach, Dinei
   Andre/0000-0002-2091-9626; Araujo, Gabriell/0000-0001-8179-2318;
   Fernandes, Luiz Gustavo/0000-0002-7506-3685
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [437693/2018-0]; Coordenacao de Aperfeicoamento de Pessoal de Nivel
   Superior [001]; Fundacao de Amparo a Pesquisa do Estado do Rio Grande do
   Sul [19/2551-0001895-9, 21/2551-0000725-7]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Number: 437693/2018-0; Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior, Grant/Award Number: 001; Fundacao de Amparo a
   Pesquisa do Estado do Rio Grande do Sul, Grant/Award Numbers:
   19/2551-0001895-9, 21/2551-0000725-7
CR Bailey DavidH., 1995, NAS PARALLEL BENCHMA
   Bailey DH., 1994, RNR94007 NASA ADV SU
   CHENG J., 2014, Professional CUDA c Programming
   de Araujo GA, 2020, EUROMICRO WORKSHOP P, P9, DOI 10.1109/PDP50117.2020.00009
   Do Y, 2019, I S WORKL CHAR PROC, P93, DOI 10.1109/IISWC47752.2019.9041954
   Gong C., 2010, P 2010 2 INT C ED TE, V4
   Hwu W.-m, 2016, Programming Massively Parallel Processors: A Hands-On Approach
   Jin H.-Q., 1999, The openmp implementation of nas parallel benchmarks and its performance
   Jin Haoqiang., 2012, IWOMP, P154
   Löff J, 2021, FUTURE GENER COMP SY, V125, P743, DOI 10.1016/j.future.2021.07.021
   Malik M, 2012, CONCURR COMP-PRACT E, V24, P179, DOI 10.1002/cpe.1860
   MATTSON T. G., 2004, Patterns for parallel programming
   McCool Michael, 2012, STRUCTURED PARALLEL, V1st
   NASA Advanced Supercomputing Division, 2021, NAS PAR BENCHM
   NVIDIA, 2021, CUDA C++ Best Practices Guide
   NVIDIA, 2019, CUDA C PROGR GUID
   Seo S, 2011, I S WORKL CHAR PROC, P137, DOI 10.1109/IISWC.2011.6114174
   Sundin P., 2013, THESIS IDA LINKOPING, P581
   Tian XN, 2016, CONCURR COMP-PRACT E, V28, P537, DOI 10.1002/cpe.3648
   Vollmer M, 2015, FHPC'15 PROCEEDINGS OF THE 4TH ACM SIGPLAN WORKSHOP ON FUNCTIONAL HIGH-PERFORMANCE COMPUTING, P1, DOI 10.1145/2808091.2808092
   Wheeler D. A, 2016, SLOCCOUNT
   Wijngaart RVD., NAS02005 NASA ADV SU
   Wijngaart RVD., 2003, NAS03010 NASA ADV SU
   Woolley C., 2013, GPU optimization fundamentals
   Xu R., 2014, LANGUAGES COMPILERS, P67, DOI 10.1007/978-3-319-3-0_5
NR 25
TC 10
Z9 10
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2023
VL 53
IS 1
SI SI
BP 53
EP 80
DI 10.1002/spe.3056
EA NOV 2021
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7B2CV
UT WOS:000723058800001
DA 2024-07-18
ER

PT J
AU Zhu, XY
   Yan, CY
   Whitehead, EJ
   Niu, BB
   Zhu, L
   Pan, L
AF Zhu, Xiaoyan
   Yan, Chenyu
   Whitehead, E. James, Jr.
   Niu, Binbin
   Zhu, Lei
   Pan, Long
TI Just-in-time defect prediction for software hunks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cost effectiveness; hunk change; imbalanced learning; JIT defect
   prediction
ID STATIC CODE ATTRIBUTES; CLASSIFICATION
AB Just-in-time defect prediction can remind software developers and managers to verify and fix bugs at the moment they appeared, thus improving the effectiveness and validity of bug fixing. Existing studies mainly focus on just-in-time prediction for software files (JIT-F). JIT-F is a binary classification problem, which classifies (hence predicts) a file change as buggy or clean. This article provides a detailed analysis of just-in-time defect prediction for software hunks (JIT-H), which predicts bugs at a finer level of granularity, and hence further improves the efficiency of bug fixing. Classification is performed using the ensemble technique of bagging-aggregated combinations of random under sampling plus multiple classifiers (J48 and Random Forest). An empirical study with 10 open source projects was conducted to validate the effectiveness of JIT-H. Experimental results show that JIT-H is effective at predicting defects in software hunk changes. Compared with JIT-F, JIT-H is more cost effective. Additionally, analysis on the change features indicates that Text Vector features and hunk change level features are of more importance than features in other groups and levels.
C1 [Zhu, Xiaoyan; Yan, Chenyu] Xi An Jiao Tong Univ, Sch Comp Sci & Technol, Xian, Peoples R China.
   [Whitehead, E. James, Jr.] Univ Calif Santa Cruz, Dept Computat Media, Santa Cruz, CA 95064 USA.
   [Niu, Binbin] Beijing Millet Technol Co Ltd, Beijing, Peoples R China.
   [Zhu, Lei] Xian Univ Technol, Sch Comp Sci & Engn, Xian, Peoples R China.
   [Pan, Long] Shenzhen Tencent Comp Syst Co Ltd, Shenzhen, Peoples R China.
C3 Xi'an Jiaotong University; University of California System; University
   of California Santa Cruz; Xi'an University of Technology; Tencent
RP Zhu, XY (corresponding author), Xi An Jiao Tong Univ, Sch Comp Sci & Technol, Xian, Peoples R China.
EM zhu.xy@xjtu.edu.cn
RI zhu, xin/JXN-3188-2024; 朱, 欣妍/JZD-6639-2024
FU National Natural Science Foundation of China [92046009]
FX the National Natural Science Foundation of China, Grant/Award Number:
   92046009
CR [Anonymous], 2014, UNDERSTAND STATIC CO
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Ferzund J, 2009, PROC IEEE INT CONF S, P471, DOI 10.1109/ICSM.2009.5306274
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   GUO YC, 2018, PROC IEEE ACM INT C, P325, DOI DOI 10.1145/3183440.3194992
   Hall M. A., 1999, Correlation-based feature subset selection for machine learning
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P1
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zhu XY, 2018, SOFTWARE PRACT EXPER, V48, P1968, DOI 10.1002/spe.2606
NR 38
TC 1
Z9 1
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 130
EP 153
DI 10.1002/spe.3001
EA JUN 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000662064400001
DA 2024-07-18
ER

PT J
AU Grabowski, S
   Kowalski, TM
AF Grabowski, Szymon
   Kowalski, Tomasz M.
TI Algorithms for all-pairs Hamming distance based similarity
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE algorithms; computational biology; Hamming distance; phylogenetics;
   similarity search
AB All-pairs distance computation for a collection of strings is a computation-intensive task with important applications in bioinformatics, in particular, in distance-based phylogenetic analysis techniques. Even if the computationally efficient Hamming distance is used for this purpose, the quadratic number of sequence pairs may be challenging. We propose a number of practical algorithms for efficient pairwise Hamming distance computation under a given distance threshold. The techniques are based on such concepts as pivot-based similarity search in metric spaces, pigeonhole principle for approximate string matching, cache-friendly data arrangement, bit-parallelism, and others. We experimentally show that our solutions are often about an order of magnitude faster than the average-case linear-time LCP based clusters method proposed recently, both in real and synthetic benchmarks.
C1 [Grabowski, Szymon; Kowalski, Tomasz M.] Lodz Univ Technol, Inst Appl Comp Sci, Lodz, Poland.
C3 Lodz University of Technology
RP Grabowski, S (corresponding author), Al Politech 11, PL-90924 Lodz, Poland.
EM sgrabow@kis.p.lodz.pl
RI Grabowski, Szymon/AAJ-2398-2021; Kowalski, Tomasz M/V-1500-2017
OI Grabowski, Szymon/0000-0003-1714-1224; Kowalski, Tomasz
   M/0000-0003-0953-3762
FU Faculty of Electrical, Electronic, Computer, and Control Engineering,
   Lodz University of Technology
FX This work was supported by the Faculty of Electrical, Electronic,
   Computer, and Control Engineering, Lodz University of Technology, as a
   statutory activity. The authors thank Alexandre P. Francisco for kindly
   providing uswith the datasets and source codes used in the experiments
   in Carrico et al.4 They also thank the Reviewers for their constructive
   comments, helping us improve the preliminary version of the manuscript.
CR Carriço JA, 2018, ALGORITHM MOL BIOL, V13, DOI 10.1186/s13015-017-0119-7
   Feil EJ, 2004, J BACTERIOL, V186, P1518, DOI 10.1128/JB.186.5.1518-1530.2004
   Figueroa K, 2007, LECT NOTES COMPUT SC, V4525, P229
   Mäkinen V, 2019, INFORM PROCESS LETT, V146, P17, DOI 10.1016/j.ipl.2019.02.003
   MICO ML, 1994, PATTERN RECOGN LETT, V15, P9, DOI 10.1016/0167-8655(94)90095-7
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   RAMASUBRAMANIAN V, 1992, PATTERN RECOGN LETT, V13, P471, DOI 10.1016/0167-8655(92)90064-7
   RUIZ EV, 1986, PATTERN RECOGN LETT, V4, P145
   SAITOU N, 1987, MOL BIOL EVOL, V4, P406, DOI 10.1093/oxfordjournals.molbev.a040454
   Shi F., 1996, Proceedings of the Third South American Workshop on String Processing. WSP 1996, P257
   Sutinen E., 1995, Algorithms - ESA '95. Third Annual European Symposium. Proceedings, P327
   Vaz C., 2020, BRIEF BIOINFORM, DOI [10.1093/bib/bbaa147, DOI 10.1093/BIB/BBAA147]
NR 12
TC 4
Z9 4
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2021
VL 51
IS 7
BP 1580
EP 1590
DI 10.1002/spe.2978
EA APR 2021
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO3PJ
UT WOS:000641130700001
DA 2024-07-18
ER

PT J
AU Shoyari, MF
   Ataie, E
   Entezari-Maleki, R
   Movaghar, A
AF Faraji Shoyari, Mahsa
   Ataie, Ehsan
   Entezari-Maleki, Reza
   Movaghar, Ali
TI Availability modeling in redundant OpenStack private clouds
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE availability modeling; cloud computing; continuous time Markov chains;
   hierarchical models; reliability block diagrams
AB In cloud computing services, high availability is one of the quality of service requirements which is necessary to maintain customer confidence. High availability systems can be built by applying redundant nodes and multiple clusters in order to cope with software and hardware failures. Due to cloud computing complexity, dependability analysis of the cloud may require combining state-based and nonstate-based modeling techniques. This article proposes a hierarchical model combining reliability block diagrams and continuous time Markov chains to evaluate the availability of OpenStack private clouds, by considering different scenarios. The steady-state availability, downtime, and cost are used as measures to compare different scenarios studied in the article. The heterogeneous workloads are considered in the proposed models by varying the number of CPUs requested by each customer. Both hardware and software failure rates of OpenStack components used in the model are collected via setting up a real OpenStack environment applying redundancy techniques. Results obtained from the proposed models emphasize the positive impact of redundancy on availability and downtime. Considering the tradeoff between availability and cost, system providers can choose an appropriate scenario for a specific purpose.
C1 [Faraji Shoyari, Mahsa; Movaghar, Ali] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
   [Ataie, Ehsan] Univ Mazandaran, Dept Technol & Engn, Babolsar, Iran.
   [Entezari-Maleki, Reza] Iran Univ Sci & Technol, Sch Comp Engn, Tehran, Iran.
   [Entezari-Maleki, Reza] Inst Res Fundamental Sci IPM, Sch Comp Sci, Tehran, Iran.
C3 Sharif University of Technology; University of Mazandaran; Iran
   University Science & Technology
RP Ataie, E (corresponding author), Univ Mazandaran, Dept Technol & Engn, Babolsar, Iran.
EM ataie@umz.ac.ir
RI Movaghar, Ali/B-3980-2011; Ataie, Ehsan/AGR-7019-2022; Entezari-Maleki,
   Reza/U-1598-2018
OI Movaghar, Ali/0000-0002-6803-6750; Ataie, Ehsan/0000-0002-3424-579X; 
FU Iran National Science Foundation
FX This work was partially supported by the Iran National Science
   Foundation.
CR Ahmed J, 2019, COMPUTING, V101, P989, DOI 10.1007/s00607-018-0626-5
   [Anonymous], 2017, IEEE T SERV COMPUT
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Ataie E, 2019, IEEE T CLOUD COMPUT, V7, P1039, DOI 10.1109/TCC.2017.2760836
   Bauer E., 2012, RELIABILITY AVAILABI
   Birolini A, 2013, RELIABILITY ENG THEO
   Bruneo D, 2014, IEEE T PARALL DISTR, V25, P560, DOI 10.1109/TPDS.2013.67
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chang XL, 2016, IEEE T SERV COMPUT, V9, P408, DOI 10.1109/TSC.2014.2376563
   Chuob S., 2011, Proceedings of the 2011 Fifth International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS), P289, DOI 10.1109/IMIS.2011.135
   Dantas J, 2015, COMPUTING, V97, P1121, DOI 10.1007/s00607-015-0447-8
   Dantas J, 2012, IEEE SYS MAN CYBERN, P1664, DOI 10.1109/ICSMC.2012.6377976
   Fakhrolmobasheri S, 2018, ALGORITHMS, V11, DOI 10.3390/a11100160
   Fricks RB, 2017, P REL MAINT S
   Ghosh R, 2013, FUTURE GENER COMP SY, V29, P1216, DOI 10.1016/j.future.2012.06.005
   Gokhale SS, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P47, DOI 10.1109/SEW.2005.43
   Harchol-Balter Mor, 2013, Performance modeling and design of computer systems: queueing theory in action
   Ibn Faiz T, 2019, SOCIO-ECON PLAN SCI, V66, P119, DOI 10.1016/j.seps.2018.07.008
   Jadeja Y., 2012, 2012 International Conference on Computing, Electronics and Electrical Technologies (ICCEET 2012), P877, DOI 10.1109/ICCEET.2012.6203873
   Jones M, 2011, IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS (ICCE 2011), P785, DOI 10.1109/ICCE.2011.5722863
   Khazaei H, 2013, IEEE INT CON DIS, P232, DOI 10.1109/ICDCSW.2013.18
   Khorshed MT, 2012, FUTURE GENER COMP SY, V28, P833, DOI 10.1016/j.future.2012.01.006
   Lienig J., 2017, Fundamentals of electronic systems design
   Liu, 2016, IEEE T CLOUD COMPUT, V6, P991
   Liu B, 2018, FUTURE GENER COMP SY, V83, P1, DOI 10.1016/j.future.2017.12.062
   Maciel P, 2011, PERFORMANCE DEPENDAB
   Matos R, 2017, J GRID COMPUT, V15, P1, DOI 10.1007/s10723-016-9381-z
   Matos R, 2015, SIMUL MODEL PRACT TH, V50, P151, DOI 10.1016/j.simpat.2014.04.003
   Moreira A, 2019, SOFTWARE PRACT EXPER, V49, P1573, DOI 10.1002/spe.2743
   Movaghar A., 2021, SOFTWARE PRACT EXPER, P1
   Nabi M, 2016, J NETW COMPUT APPL, V60, P54, DOI 10.1016/j.jnca.2015.11.014
   Rimal BP, 2011, J GRID COMPUT, V9, P3, DOI 10.1007/s10723-010-9171-y
   Rosendo D, 2020, SOFTWARE PRACT EXPER, V50, P805, DOI 10.1002/spe.2833
   Rosendo D, 2019, J SUPERCOMPUT, V75, P6361, DOI 10.1007/s11227-019-02852-3
   Santos GL., 2019, P INT C ADV INF NETW, P1011
   Sharma Y, 2016, J NETW COMPUT APPL, V74, P66, DOI 10.1016/j.jnca.2016.08.010
   Son J, 2019, SOFTWARE PRACT EXPER, V49, P1748, DOI 10.1002/spe.2755
   Tan CB, 2018, J NETW COMPUT APPL, V110, P75, DOI 10.1016/j.jnca.2018.03.017
   Tan Sheldon., 2019, LONG TERM RELIABILIT
   Torres E, 2018, COMPUTING, V100, P621, DOI 10.1007/s00607-018-0588-7
   Wang B, 2015, IEEE COMMUN LETT, V19, P537, DOI 10.1109/LCOMM.2015.2403832
   Wang JV, 2019, SOFTWARE PRACT EXPER, V49, P906, DOI 10.1002/spe.2680
NR 42
TC 4
Z9 4
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1218
EP 1241
DI 10.1002/spe.2953
EA JAN 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000608436600001
DA 2024-07-18
ER

PT J
AU Liu, RC
   Wen, XD
   Jiang, M
   Yang, G
   Zhang, CY
   Chen, XJ
AF Liu, Richen
   Wen, Xiaodong
   Jiang, Meng
   Yang, Guang
   Zhang, Chuyu
   Chen, Xiaojian
TI Multiuser collaborative illustration and visualization for volumetric
   scientific data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE collaborative visualization; scientific data visualization;
   visualization software
ID INTERACTIVE VISUALIZATION
AB Multiuser can collaboratively complete complex visualization tasks that cannot be completed by a single user. Although multiuser collaboration system has made great progress, there are many challenges in the collaborative visualization of 3D volumetric scientific data due to the difficulties in multiuser collaboration, and collaborative slice analysis. This article proposes a client-server based collaborative visualization system, which consists of a 3D volume explorer and a 2D slice analyzer, to help domain experts to fully utilize their background domain knowledge to illustrate different parts of the data. For example, the brain surgeon expert, pulmonologist, and cardiologist can visualize and analyze the different subsets of the volumetric scientific data, that is, the corresponding subvolumes of the brain, heart, lungs, and blood vessels. It also allows taking full advantage of the hardware resources, because all the computation intensive tasks especially for the whole data rendering can be allocated to the powerful server while the light-weight tasks can be allocated to the portable clients. Besides, we design a seed point tracing algorithm based on flood fill algorithm to illustrate the slice more efficiently. We evaluate the system by collecting the feedback from domain experts and the people who are unfamiliar with data computation or visualization. The evaluation shows that the 3D volume explorer and the 2D slice analyzer are capable of supporting peer-expert discussion and medical case teaching, respectively.
C1 [Liu, Richen; Wen, Xiaodong; Jiang, Meng; Yang, Guang; Zhang, Chuyu; Chen, Xiaojian] Nanjing Normal Univ, Sch Comp & Elect Informat, Sch Artificial Intelligence, 1 Wenyuan Rd, Nanjing 210023, Peoples R China.
C3 Nanjing Normal University
RP Liu, RC (corresponding author), Nanjing Normal Univ, Sch Comp & Elect Informat, Sch Artificial Intelligence, 1 Wenyuan Rd, Nanjing 210023, Peoples R China.
EM richen@pku.edu.cn
RI Liu, Richen/AAB-2890-2022
OI Liu, Richen/0000-0002-5321-098X; chen, xiao jian/0009-0004-0260-7778
FU National Natural Science Foundation of China [61702271]; Postgraduate
   Research AMP; Practice Innovation Program of Jiangsu Province
   [SJCX20_0445]
FX National Natural Science Foundation of China, Grant/Award Number:
   61702271; Postgraduate Research & Practice Innovation Program of Jiangsu
   Province, Grant/Award Number: SJCX20_0445
CR Alma MG, 2009, P 13 IEEE ACM INT S
   Blazona B, 2007, ITI, P673, DOI 10.1109/ITI.2007.4283852
   Brennan SE, 2006, IEEE VISUALIZATION V
   Chen XY, 2019, VIS INFORM, V3, P129, DOI 10.1016/j.visinf.2019.08.002
   Chheang V, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND VIRTUAL REALITY (AIVR), P1, DOI 10.1109/AIVR46125.2019.00011
   Congote J., 2011, P 16 INT C 3D WEB TE, P137, DOI [DOI 10.1145/2010425.2010449, 10.1145/2010425.2010449]
   Deng ZF, 2016, 2016 9TH INTERNATIONAL CONGRESS ON IMAGE AND SIGNAL PROCESSING, BIOMEDICAL ENGINEERING AND INFORMATICS (CISP-BMEI 2016), P829, DOI 10.1109/CISP-BMEI.2016.7852825
   Diepenbrock S, 2011, P 32 ANN C EUR ASS C
   Donalek C, 2014, IEEE INT CONF BIG DA, P609, DOI 10.1109/BigData.2014.7004282
   Dostal J, 2014, P INT C INT US INT H
   Estrada JG, 2015, 2015 IEEE SECOND VR INTERNATIONAL WORKSHOP ON COLLABORATIVE VIRTUAL ENVIRONMENTS (3DCVE), P1, DOI 10.1109/3DCVE.2015.7153590
   Faraklioti M, 2004, MACH VISION APPL, V15, P216, DOI 10.1007/s00138-004-0151-8
   Gao M, 2019, LECT NOTES COMPUTER
   Guchev V, 2017, P 21 INT C INF VIS L
   Guo HQ, 2011, IEEE T VIS COMPUT GR, V17, P2106, DOI 10.1109/TVCG.2011.261
   Ham FV, 1997, IEEE COMPUT GRAPH, V29, P20
   Hedayati N, 2014, 2014 4TH INTERNATIONAL CONFERENCE ON COMPUTER AND KNOWLEDGE ENGINEERING (ICCKE), P123, DOI 10.1109/ICCKE.2014.6993404
   Höllt T, 2012, IEEE T VIS COMPUT GR, V18, P2226, DOI 10.1109/TVCG.2012.259
   Hollt T, 2011, IEEE PACIF VIS
   Isenberg P, 2007, IEEE T VIS COMPUT GR, V13, P1232, DOI 10.1109/TVCG.2007.70568
   Isenberg P, 2011, INFORM VISUAL, V10, P310, DOI 10.1177/1473871611412817
   JACQUEMIN P., 2005, SEG EXP ABSTR, V24, P755
   Jeong WK, 2010, IEEE COMPUT GRAPH, V30, P58, DOI 10.1109/MCG.2010.56
   Jing W, 2004, P INT C COMP SUPP CO
   Jung MR, 1998, PACIFIC GRAPHICS '98, PROCEEDINGS, P79, DOI 10.1109/PCCGA.1998.732031
   Lavric P, 2017, 2017 40TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P259, DOI 10.23919/MIPRO.2017.7973430
   Li ZW, 2010, INT CONF COMP SCI, P157, DOI 10.1109/ICCSIT.2010.5564768
   Liu R, 2015, P ACM SIGGRAPH AS 20
   Liu RC, 2019, J IMAGING SCI TECHN, V63, DOI 10.2352/J.ImagingSci.Technol.2019.63.6.060505
   Liu RC, 2020, SOFTWARE PRACT EXPER, V50, P98, DOI 10.1002/spe.2768
   Liu RC, 2018, J VISUAL LANG COMPUT, V48, P81, DOI 10.1016/j.jvlc.2018.07.004
   Liu RC, 2017, J VISUAL-JAPAN, V20, P217, DOI 10.1007/s12650-016-0388-0
   Luo XF, 2009, P 6 INT C COMP GRAPH
   Mahmood T, 2019, INT SYM MIX AUGMENT, P236, DOI 10.1109/ISMAR.2019.00021
   McClymont AF, 2008, GEOPHYSICS, V73, pB11, DOI 10.1190/1.2825408
   Mehaboobathunnisa R, 2016, 2016 INTERNATIONAL CONFERENCE ON COMPUTING TECHNOLOGIES AND INTELLIGENT DATA ENGINEERING (ICCTIDE'16)
   Meiguins BS, 2004, IEEE INFOR VIS, P925, DOI 10.1109/IV.2004.1320252
   Muigg P, 2011, IEEE T VIS COMPUT GR, V17, P2115, DOI 10.1109/TVCG.2011.216
   Natali M, 2012, P C GRAPH PATT IM OU
   Natali M, 2014, COMPUT GEOSCI-UK, V67, P40, DOI 10.1016/j.cageo.2014.02.010
   Parker S, 1999, IEEE T VIS COMPUT GR, V5, P238, DOI 10.1109/2945.795215
   Puel A, 2014, P IEEE 27 INT S COMP
   Salama CR, 2006, IEEE T VIS COMPUT GR, V12, P1021, DOI 10.1109/TVCG.2006.148
   Schroeder D., 2010, Proceedings of ACM SIGGRAPH/Eurographics Sketch-Based Interfaces and Modeling, P49
   Shen EY, 2014, J VISUAL-JAPAN, V17, P275, DOI 10.1007/s12650-014-0225-2
   Shen L, 2020, ARCH COMPUT METHODS, V28, P1
   Shneiderman B, 2013, COMPUTER, V46, P58, DOI 10.1109/MC.2013.38
   Suter SK, 2013, COMPUT GRAPH FORUM, V32, P151, DOI 10.1111/cgf.12102
   Suter SK, 2011, IEEE T VIS COMPUT GR, V17, P2135, DOI 10.1109/TVCG.2011.214
   Tao Ling, 2011, 2011 4th International Conference on Biomedical Engineering and Informatics, P109, DOI 10.1109/BMEI.2011.6098239
   Wei JS, 2010, IEEE PAC VIS SYMP, P129, DOI 10.1109/PACIFICVIS.2010.5429603
   Weiskopf D, 2003, IEEE T VIS COMPUT GR, V9, P298, DOI 10.1109/TVCG.2003.1207438
   Wu F, 2014, P INT C VIRT REAL VI
   Wu F, 2015, P INT C VIRT REAL VI
   Xiao JH, 2011, PROCEEDINGS OF 2011 INTERNATIONAL SYMPOSIUM - GEOSPATIAL INFORMATION TECHNOLOGY & DISASTER PREVENTION AND REDUCTION, P28
   Yu Shicai, 2011, 2011 International Conference on Consumer Electronics, Communications and Networks (CECNet), P1027, DOI 10.1109/CECNET.2011.5768256
   Zhao Y., 2007, P 2 INT C INTERNET W, P62
   Zhu B, 2011, ACM T GRAPHIC, V30, DOI 10.1145/2024156.2024168
   Zou Q, 2001, P INT WORKSH MED IM
NR 59
TC 7
Z9 7
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 1080
EP 1096
DI 10.1002/spe.2935
EA NOV 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000591289200001
DA 2024-07-18
ER

PT J
AU McKeever, S
   Bennich-Björkman, O
   Salah, OA
AF McKeever, Steve
   Bennich-Bjorkman, Oscar
   Salah, Omar-Alfred
TI Unit of measurement libraries, their popularity and suitability
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE quantity pattern; units checking; units libraries; units of measurement;
   units survey
AB In scientific applications, physical quantities, and units of measurement are used regularly. If the inherent incompatibility between these units is not handled properly it can lead to potentially catastrophic problems. Although the risk of a miscalculation is high and the cost equally so, almost none of the major programming languages has support for physical quantities. We employed a systematic approach to examine and analyse available units of measurement (UoM) libraries. The search results were condensed into 38 libraries. These were the most comprehensive and well-developed, open-source libraries, chosen from approximately 3700 search results across seven repository hosting sites. Most libraries are implemented in a similar manner, but with varying features and evaluation strategies. Three developers and a scientist were interviewed and 91 practitioners of varying experiences from on-line forums were surveyed to explain their impressions of UoM libraries and their suitability. Our findings show several reasons for nonadoption, including insufficient awareness of UoM libraries, cumbersome in practice, specific performance concerns, and usage of development processes that exclude unit information We conclude with recommendations to UoM library creators derived from these observations. We also argue that so long as units are not part of the language, or not supported through an IDE extension, their use will be limited. Native language support allows for efficient unit conversion and static checking. While lightweight methods provide many benefits of UoM libraries with minimal overheads. Libraries are perhaps best suited to applications in which unit of measurement checking is desirable at run-time.
C1 [McKeever, Steve; Bennich-Bjorkman, Oscar; Salah, Omar-Alfred] Uppsala Univ, Dept Informat & Media, Uppsala, Sweden.
C3 Uppsala University
RP McKeever, S (corresponding author), Uppsala Univ, Dept Informat & Media, Uppsala, Sweden.
EM steve.mckeever@im.uu.se
OI McKeever, Steve/0000-0002-1970-2884
FU University of Western Australia Department of Computer Science and
   Software Engineering, Matariki exchange fellowship
FX The University of Western Australia Department of Computer Science and
   Software Engineering for providing a warm escape, as part of a Matariki
   exchange fellowship, while this article was drafted. Dr Duggan for
   suggesting the Helen UoM, and the reviewers for their insightful remarks
   and constructive suggestions.
CR ALLEN E, 2004, P C OBJ OR PROGR SYS, P384
   [Anonymous], 2001, TECHNICAL REPORT
   [Anonymous], 2020, WIKIPEDIA FLOATING P
   [Anonymous], 2015, National Institute of Standards and Technology
   [Anonymous], 2012, UNIT CONVERSION SHOO
   [Anonymous], 2020, COMMON CORE PACKAGE
   [Anonymous], 2020, COMP SOURCE CODE HOS
   [Anonymous], 2018, NEMERLE PROGRAMMING
   [Anonymous], 2016, JAVA COMMUNITY PROCE
   Antoniu T, 2004, PROC INT CONF SOFTW, P439, DOI 10.1109/ICSE.2004.1317466
   Apple, 2020, SWIFT OP SOURC
   Baumann T, 2017, QUANTITIES LIB OTHER
   Bekolay T, 2013, SCI COMPUT PYTHON
   Bennich-Björkman O, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P121, DOI 10.1145/3276604.3276613
   Bureau International des Poids et Mesures, 2020, DIM QUANT
   Cai HM, 2006, ISDA 2006: SIXTH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS DESIGN AND APPLICATIONS, VOL 1, P1026
   CMELIK RF, 1988, IEEE SOFTWARE, V5, P21, DOI 10.1109/52.2021
   Cooper J, 2008, SOFTWARE PRACT EXPER, V38, P337, DOI 10.1002/spe.828
   Damevski Kostadin., 2009, Proceedings of the 2009 Workshop on Component-Based High Performance Computing. CBHPC '09, p13:1, DOI DOI 10.1145/1687774.1687787
   Dieterichs H, 2012, UNITS MEASURE VALIDA
   DREIHELLER A, 1986, SIGPLAN NOTICES, V21, P114, DOI 10.1145/15042.15048
   Eliasen A, 2020, FRINK PROGRAMMING LA
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Garny A, 2008, PHILOS T R SOC A, V366, P3017, DOI 10.1098/rsta.2008.0094
   GEHANI N, 1977, COMPUT LANG, V2, P93, DOI 10.1016/0096-0551(77)90010-8
   Gibson JG, 2017, MCG QUEENS STUD ETHN, P64
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   HILFINGER PN, 1988, ACM T PROGR LANG SYS, V10, P189, DOI 10.1145/42190.42346
   Hong NC, 2018, CHOOSING REPOSITORY
   Jacob B, 2018, EIGEN C TEMPLATE LIB
   JCGM, 2012, International Vocabulary of Metrology-Basic and general concepts and associated terms(VIM)
   KARR M, 1978, COMMUN ACM, V21, P385, DOI 10.1145/359488.359501
   Keil W, 2020, ECLIPSE UOMO PROJECT
   Kennedy A., 1994, Programming Languages and Systems - ESOP '94. 5th European Symposium on Programming. Proceedings, P348
   Kennedy A., 2009, Central European Functional Programming School, P268, DOI [DOI 10.1007/978-3-642-17685-2_8, DOI 10.1007/978-3-642-17685-2_8(SPRINGER]
   KRISPER M, 2017, P 22 EUR C PATT
   Mayerhofer T, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P118, DOI 10.1145/2997364.2997376
   McKeever S, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P441, DOI 10.5220/0007524704410447
   MILNER R, 1978, J COMPUT SYST SCI, V17, P348, DOI 10.1016/0022-0000(78)90014-4
   Moene M, 2013, PHYS UNITS
   Neumann Peter G., 1992, SIGSOFT SOFTW ENG NO, V17, P23, DOI [10.1145/134292.134293, DOI 10.1145/134292.134293]
   Oates B. J., 2006, Researching information systems and computing
   Olson M, 1977, LOGIC COLLECTIVE ACT
   Ore JP, 2018, IEEE INT CONF AUTOM, P190, DOI [10.1145/3238147.3238173, 10.1145/3238147-3238173]
   Ore JP, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P341, DOI 10.1145/3092703.3092722
   Ore JP, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P352, DOI 10.1145/3092703.3098219
   Ore JP, 2017, IEEE INT C INT ROBOT, P712, DOI 10.1109/IROS.2017.8202229
   Physikal, 2020, UN MEAS EXT LIB
   SALAH OA, 2020, INT C SOFTW ENG SOFT
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Schabel M, 2020, BOOST C LIB
   Squants, 2020, SCAL API QUANT UN ME
   Stackify, 2017, TOP SOURC COD REP HO
   Stephenson A.G., 1999, Mars climate orbiter mishap investigation board phase 1 report
   TIOBE, 2020, IMP BEING EARN IND
   Vallecillo A, 2016, PROCEEDINGS 2016 10TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P15, DOI [10.1109/QUATIC.2016.013, 10.1109/QUATIC.2016.11]
   Wand Mitchell., 1991, ComputationalLogic: Essays in Honor ofAlan Robinson, P479
   Zaghi S, 2020, FURY LIB COMP
NR 58
TC 5
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2021
VL 51
IS 4
SI SI
BP 711
EP 734
DI 10.1002/spe.2926
EA NOV 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR8DY
UT WOS:000588182600001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Kausar, S
   Habib, M
   Shabir, MY
   Ullah, A
   Xu, HH
   Mehmood, R
   Bie, RF
   Iqbal, MS
AF Kausar, Samina
   Habib, Muhammad
   Shabir, Muhammad Yasir
   Ullah, Ata
   Xu, Huahu
   Mehmood, Rashid
   Bie, Rongfang
   Iqbal, Muhammad Shahid
TI Secure and efficient data transfer using spreading and assimilation in
   MANET
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compression; data spreading; decryption; encryption; MANET
AB Mobile ad hoc Network (MANET) is a cluster of moveable devices connected through a wireless medium to design network with rapidly changing topologies due to mobility. MANETs are applicable in variety of innovative application scenarios where smart devices exchange data among each other. In this case, security of data is the major concern to provide dependable solution to users. This article presents a secure mechanism for data transfer where sender splits the data into fragments and receiver gets the actual data by assimilating the data fragments. We have presented an Enhanced Secured Lempel-Ziv-Welch (ES-LZW) algorithm that provides cryptographic operations for secure data transfer. In proposed model, we have utilized the disjoint paths to transfer the data fragments from sender side and assimilate these fragments at receiver to get the original data. The messages containing data fragments are compressed and encrypted as well. Our scheme ensures confidentiality, integrity, efficient memory utilization, and resilience against node compromising attacks. We have validated our work through extensive simulations in NS-2.35 using TCL and C language. Results prove that our scheme reduces memory consumption along with less encryption and decryption cost as compared to blowfish especially when plaintext has more repetitive data. We have also analyzed the impact of creating data fragments, fraction of communication compromised, and probability to compromise the data fragments by subverting intermediaries.
C1 [Kausar, Samina; Xu, Huahu] Shanghai Univ, Sch Comp Engn & Sci, Shanghai, Peoples R China.
   [Kausar, Samina; Habib, Muhammad; Shabir, Muhammad Yasir; Mehmood, Rashid] Univ Kotli Azad Jammu & Kashmir, Dept CS & IT, Kotli 11100, Azad Kashmir, Pakistan.
   [Ullah, Ata] Natl Univ Modern Languages NUML, Dept Comp Sci, Islamabad, Pakistan.
   [Bie, Rongfang] Beijing Normal Univ, Coll Informat Sci & Technol, Beijing, Peoples R China.
   [Iqbal, Muhammad Shahid] Anhui Univ, Sch Comp Sci & Technol, Hefei, Peoples R China.
   [Iqbal, Muhammad Shahid] Air Univ, Dept Comp Sci, Islamabad, Pakistan.
C3 Shanghai University; Beijing Normal University; Anhui University; Air
   University Islamabad
RP Shabir, MY; Mehmood, R (corresponding author), Univ Kotli Azad Jammu & Kashmir, Dept CS & IT, Kotli 11100, Azad Kashmir, Pakistan.
EM yasir.shabir14@gmail.com; gulkhan007@gmail.com
RI Ullah, Ata/ABE-6416-2022; Shabir, Muhammad Yasir/E-2783-2016; iqbal,
   muhammad shahid/AAQ-4575-2020; Mehmood, Rashid/GLV-4450-2022
OI Shabir, Muhammad Yasir/0000-0002-2729-9247; iqbal, muhammad
   shahid/0000-0003-4766-0439; Mehmood, Rashid/0000-0002-3488-9413; Ullah,
   Ata/0000-0003-3603-1709
CR Abdel-Fattah F, 2019, 2019 IEEE JORDAN INTERNATIONAL JOINT CONFERENCE ON ELECTRICAL ENGINEERING AND INFORMATION TECHNOLOGY (JEEIT), P28, DOI 10.1109/JEEIT.2019.8717449
   Akhtar N, 2019, IEEE ACCESS, V7, P71459, DOI 10.1109/ACCESS.2019.2918990
   Anbarasan M, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.4984
   Anuradha M, 2017, WIREL NETW, V23, P1373, DOI 10.1007/s11276-016-1211-5
   Christina L., 2014, INT J INNOV RES COMP, V2, P5009
   Dorri A., 2015, International Journal on Computer Science and Engineering, V6, P15, DOI DOI 10.5121/IJCSES.2015.6102
   Ferrer AJ, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3243929
   Han N.D., 2019, J COMMUN, V14, P110, DOI [10.12720/jcm.14.2.110-120, DOI 10.12720/JCM.14.2.110-120]
   Jahir Y, 2019, AD HOC NETW, V82, P1, DOI 10.1016/j.adhoc.2018.08.005
   Khan A, 2017, J ELECTR COMPUT ENG, V2017, DOI 10.1155/2017/4657831
   Kusyk J, 2018, EVOL INTELL, V10, P95, DOI 10.1007/s12065-018-0154-4
   Lin J, 2017, IEEE INTERNET THINGS, V4, P1125, DOI 10.1109/JIOT.2017.2683200
   Liu G, 2018, J NETW COMPUT APPL, V105, P105, DOI 10.1016/j.jnca.2018.01.004
   Lou WJ, 2009, WIREL NETW, V15, P279, DOI 10.1007/s11276-007-0039-4
   Lou WJ, 2004, IEEE INFOCOM SER, P2404
   Maragatharajan M, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5047
   Meitei MG, 2019, LECT NOTES NETWORKS, V31
   Mohammed AAW., 2019, J ADV RES APPL MECH, V54, P1
   More RS, 2016, INT J RECENT INNOV T, V4, P98
   Othman JB, 2010, J PARALLEL DISTR COM, V70, P309, DOI 10.1016/j.jpdc.2009.02.010
   Pavithra S., 2012, J GLOBAL RES COMPUTE, V3, P43
   Raghavendar R.L., 2019, INT J ELECT COMPUT E, V6, P5340
   Rao AR, 2019, SENSOR REV, V39, P218, DOI 10.1108/SR-08-2017-0170
   Rao TS, 2015, INT J COMPUT APPL, V116
   Ruxanayasmin B., 2014, International Journal of Computer Network and Information Security, V6, P38, DOI 10.5815/ijcnis.2014.02.06
   Saudi NurAmirahMohd, 2019, P 3 INT C COMP MATH
   Soma GS, 2014, INT J COMPUTER NETWO, V2, P456
   Soms N, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.4734
   Ullah A, 2015, INT J DISTRIB SENS N, V11, P1
   Vadivel R, 2017, WIREL NETW, V23, P819, DOI 10.1007/s11276-015-1137-3
   Vegda H, 2018, INT J COMPUT APPL, V179
   Venu VS, 2018, INT J COMMUN SYST, V31, DOI 10.1002/dac.3518
   Walikar GA, 2017, J NETW COMPUT APPL, V77, P48, DOI 10.1016/j.jnca.2016.10.014
NR 33
TC 6
Z9 6
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2020
VL 50
IS 11
SI SI
BP 2095
EP 2109
DI 10.1002/spe.2782
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NW3WG
UT WOS:000574940300007
DA 2024-07-18
ER

PT J
AU Huang, Y
   Jia, N
   Shu, JH
   Hu, XY
   Chen, XP
   Zhou, Q
AF Huang, Yuan
   Jia, Nan
   Shu, Junhuai
   Hu, Xinyu
   Chen, Xiangping
   Zhou, Qiang
TI Does your code need comment?
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code comment analysis; commenting necessity; comment density analysis;
   header comment
AB Code comments convey information about the programmers' intention in a more explicit but less rigorous manner than source code. This information can assist programmers in various tasks, such as code comprehension, reuse, and maintenance. To better understand the properties of the comments existing in the source code, we analyzed more than 450 000 comments across 136 popular open-source software systems coming different domains. We found that the methods involving header comments and internal comments were shown low percentages in software systems, ie, 4.4% and 10.27%, respectively. As an application of our findings, we propose an automatic approach to determine whether a method needs a header comment, known as commenting necessity identification. Specifically, we identify the important factors for determining the commenting necessity of a method and extract them as structural features, syntactic features, and textual features. Then, by applying machine learning techniques and noise-handling techniques, we achieve a precision of 88.5% on eight open-source software from GitHub. The encouraging experimental results demonstrate the feasibility and effectiveness of our approach.
C1 [Huang, Yuan; Shu, Junhuai; Hu, Xinyu; Chen, Xiangping; Zhou, Qiang] Sun Yat Sen Univ, Sch Data & Comp Sci, Guangzhou 510006, Guangdong, Peoples R China.
   [Jia, Nan] Hebei GEO Univ, Sch Management Sci & Engn, Shijiazhuang, Hebei, Peoples R China.
C3 Sun Yat Sen University; Hebei GEO University
RP Chen, XP (corresponding author), Sun Yat Sen Univ, Sch Data & Comp Sci, Guangzhou 510006, Guangdong, Peoples R China.
EM chenxp8@mail.sysu.edu.cn
OI chen, xiang ping/0000-0001-8234-3186; xinyu, hu/0000-0002-6725-6241
FU National Key R&D Program of China [2018YFB1004804]; National Natural
   Science Foundation of China [61902441, 61902105, 61672545]; China
   Postdoctoral Science Foundation [2018M640855]
FX National Key R&D Program of China, Grant/Award Number: 2018YFB1004804;
   National Natural Science Foundation of China, Grant/Award Number:
   61902441, 61902105 and 61672545; China Postdoctoral Science Foundation,
   Grant/Award Number: 2018M640855
CR Ajami S, 2017, P IEEE ACM 25 INT C
   Allamanis M, 2016, PR MACH LEARN RES, V48
   [Anonymous], P 18 ACM SIGSOFT INT
   Arafat O, 2010, P 2009 31 INT C SOFT
   Arafat O, 2009, P 24 ACM SIGPLAN C C
   Bassett B, 2013, P 21 INT C PROGR COM
   Beniamini G, 2017, P IEEE ACM 25 INT C
   Brandtner M, 2013, P 35 INT C SOFTW ENG
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Elish MO, 2002, P 6 IASTED INT C SOF
   Fluri B, 2007, P 14 WORK C REV ENG
   Garcia MJB, 1996, P 1996 INT C SOFTW M
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   Haiduc S, 2010, P 2010 17 WORK C REV
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Haouari D, 2011, P 2011 INT S EMP SOF
   Hirata Y, 2011, P 8 WORK C MIN SOFTW
   Hu X, 2018, P 26 IEEE INT C PROG
   Hu Xing, 2018, Summarizing source code with transferred api knowledge
   Huang Y, 2018, P 40 INT C SOFTW ENG
   Huang Y, 2017, P 11 ACM IEEE INT S
   Huang Y, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1859
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jiang ZM, 2006, P 2006 INT WORKSH MI
   Khamis N, 2010, P INT C APPL NAT LAN
   Kim S, 2011, P 2011 33 INT C SOFT
   Lavallee M, 2015, P 37 INT C SOFTW ENG
   Malik H, 2008, P IEEE INT C SOFTW M
   Mitchell Tom M., 1997, Burr Ridge, Illinois: McGraw Hill, V45, P870
   Moreno L, 2013, P 2013 21 INT C PROG
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Oman P, 1992, P C SOFTW MAINT 1992
   Pascarella L, 2017, P 14 INT C MIN SOFTW
   Pascarella L, 2019, EMPIR SOFTW ENG, V24, P1499, DOI 10.1007/s10664-019-09694-w
   Pawelka T, 2015, P IEEE INT C SOFTW M
   QUINLAN JR, 1987, INT J MAN MACH STUD, V27, P221, DOI 10.1016/S0020-7373(87)80053-6
   Rahman MM, 2017, P 2017 IEEE ACM 14 I
   Salviulo F, 2014, P INT C EV ASS SOFTW
   Shahriar H, 2011, P IEEE 35 ANN COMP S
   Siy H, 2001, P IEEE INT C SOFTW M
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Steidl D, 2013, P 21 INT C PROGR COM
   Storey M-A, 2007, P 2007 IEEE INT C SO
   Tan L, 2011, P 33 INT C SOFTW ENG
   Tan SH, 2012, P IEEE 5 INT C SOFTW
   Vinz BL, 2008, KNOWL-BASED SYST, V21, P813, DOI 10.1016/j.knosys.2008.03.033
   Witten IH, 2011, MOR KAUF D, P1
   Wong E, 2015, P IEEE INT C SOFTW A
   Wong E, 2014, P IEEE ACM INT C AUT
   Xiong Y, 2017, P IEEE ACM 39 INT C
   Zheng W, 2011, P 19 ACM SIGSOFT S 1
   Zhu J, 2015, P 37 INT C SOFTW ENG
NR 52
TC 12
Z9 14
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2020
VL 50
IS 3
SI SI
BP 227
EP 245
DI 10.1002/spe.2772
EA NOV 2019
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KH3BI
UT WOS:000499026300001
DA 2024-07-18
ER

PT J
AU Ji, C
   Zou, XN
   Liu, SJ
   Pan, L
AF Ji, Cun
   Zou, Xiunan
   Liu, Shijun
   Pan, Li
TI ADARC: An anomaly detection algorithm based on relative outlier distance
   and biseries correlation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE anomaly detection; biseries correlation; time series; relative outlier
   distance
ID SHAPELET SELECTION ALGORITHM; TIME-SERIES DATA; POINTS
AB The application of anomaly detection to data monitoring is a fundamental requirement of the public service systems of a smart city. Many detection methods have been proposed for identifying anomalous situations, including methods based on periodicity or biseries correlations. However, the detection results of these methods are not ideal. Thus, we present a new anomaly detection algorithm for time series based on the relative outlier distance (ROD) and biseries correlations. The proposed algorithm detects outliers based on the ROD and identifies abnormal points and change points based on biseries correlations. Experimental results show that our method achieves better recall and F1-measure scores than various time series-based techniques while maintaining a high level of precision.
C1 [Ji, Cun; Zou, Xiunan] Shandong Normal Univ, Sch Informat Sci & Engn, Jinan, Shandong, Peoples R China.
   [Ji, Cun; Liu, Shijun; Pan, Li] Shandong Univ, Sch Software, Jinan 250100, Shandong, Peoples R China.
   [Ji, Cun] Shandong Univ, Shandong Prov Key Lab Software Engn, Jinan, Shandong, Peoples R China.
C3 Shandong Normal University; Shandong University; Shandong University
RP Liu, SJ; Pan, L (corresponding author), Shandong Univ, Sch Software, Jinan 250100, Shandong, Peoples R China.
EM lsj@sdu.edu.cn; panli@sdu.edu.cn
RI Li, PAN/KLD-7192-2024; Ji, Cun/T-2736-2019
OI Ji, Cun/0000-0002-3326-6572
FU National Natural Science Foundation of China [61872222]; Key Research
   and Development Program of Shandong Province [2017CXGC0604,
   2017CXGC0605, 2018GGX101019]; Young Scholars Program of Shandong
   University
FX National Natural Science Foundation of China, Grant/Award Number:
   61872222; Key Research and Development Program of Shandong Province,
   Grant/Award Number: 2017CXGC0604, 2017CXGC0605 and 2018GGX101019; Young
   Scholars Program of Shandong University
CR Aloise D, 2009, MACH LEARN, V75, P245, DOI 10.1007/s10994-009-5103-0
   [Anonymous], 2019, CONCISE GUIDE MARKET
   [Anonymous], 1977, J MARKETING RES
   [Anonymous], 2007, 18 ANN ACM SIAM S DI
   BEZDEK JC, 1984, COMPUT GEOSCI, V10, P191, DOI 10.1016/0098-3004(84)90020-7
   Chan PK, 2005, 5 IEEE INT C DAT MIN
   Chandola V., 2008, 8 IEEE INT C DAT MIN
   Chandola V, 2012, IEEE T KNOWL DATA EN, V24, P823, DOI 10.1109/TKDE.2010.235
   Chao L, 2019, APPL SOFT COMPUT, V78, P150, DOI 10.1016/j.asoc.2019.02.032
   D Gauss C.H., 1809, THEORY MOTION HEAVEN
   Dasgupta S, 2009, IEEE T INFORM THEORY, V55, P3229, DOI 10.1109/TIT.2009.2021326
   Dunn J. C., 1973, Journal of Cybernetics, V3, P32, DOI 10.1080/01969727308546046
   Esling P, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379788
   Fu TC, 2011, ENG APPL ARTIF INTEL, V24, P164, DOI 10.1016/j.engappai.2010.09.007
   Fujimaki R, 2005, 2005 PAC AS C KNOWL
   Gronlund A., 2017, ARXIV170107204
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   Hyndman RJ, 2015, 2015 INT C DAT MIN W
   Ide T, 2007, 7 IEEE INT C DAT MIN
   Izakian H, 2013, 2013 JOINT IFSA WORL
   Izakian H, 2014, IEEE T FUZZY SYST, V22, P1612, DOI 10.1109/TFUZZ.2014.2302456
   Ji C, 2019, COMPUT NETW, V157, P89, DOI 10.1016/j.comnet.2019.04.020
   Ji C, 2019, COMPUT NETW, V148, P231, DOI 10.1016/j.comnet.2018.11.031
   Ji C, 2018, PROCEDIA COMPUT SCI, V129, P461, DOI 10.1016/j.procs.2018.03.025
   Ji C, 2017, INT J WEB SERV RES, V14, P67, DOI 10.4018/IJWSR.2017040104
   Ji C, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16030279
   KEOGH E., 2002, P 8 ACM SIGKDD INT C
   KEOGH E, 2004, P 10 ACM SIGKDD INT
   Keogh E, 2005, 5 INT C DAT MIN HOUS
   Khatkhate A, 2006, IEEE-ASME T MECH, V11, P439, DOI 10.1109/TMECH.2006.878544
   Knorr EM, 2000, VLDB J, V8, P237, DOI 10.1007/s007780050006
   Laptev Nikolay, 2015, P 21 ACM SIGKDD INT
   Li Y, 2017, PHYSICA A, V473, P319, DOI 10.1016/j.physa.2017.01.008
   LLOYD SP, 1982, IEEE T INFORM THEORY, V28, P129, DOI 10.1109/TIT.1982.1056489
   Lytras MD, 2018, SUSTAINABILITY-BASEL, V10, DOI 10.3390/su10061998
   Mahajan M, 2009, P 3 INT WORKSH ALG C
   Martins H, 2015, ASIA CONTROL CONF AS
   Miao SF, 2016, INFORM SCIENCES, V329, P950, DOI 10.1016/j.ins.2015.04.018
   Moon Y-S, 2001, 17 INT C DAT ENG HEI
   Oskarsson M, 2015, 19 SCAND C IM AN COP
   Ostrovsky R, 2012, J ACM, V59, DOI 10.1145/2395116.2395117
   Pandit D, 2016, 12 INT C NAT COMP FU
   Park HS, 2009, EXPERT SYST APPL, V36, P3336, DOI 10.1016/j.eswa.2008.01.039
   Pearson K, 1901, PHILOS MAG, V2, P559, DOI 10.1080/14786440109462720
   Protopapas P, 2006, MON NOT R ASTRON SOC, V369, P677, DOI 10.1111/j.1365-2966.2006.10327.x
   Sun YC, 2014, PERS UBIQUIT COMPUT, V18, P1821, DOI 10.1007/s00779-014-0786-z
   Sun YC, 2014, MOB INF SYST, V10, P105, DOI 10.1155/2014/517486
   Takeuchi J, 2006, IEEE T KNOWL DATA EN, V18, P482, DOI 10.1109/TKDE.2006.1599387
   Visvizi A, 2018, J SCI TECHNOL POLICY, V9, P134, DOI 10.1108/JSTPM-02-2018-0020
   Vlachos M, 2005, P 2005 SIAM INT C DA
   Wang HZ, 2011, R J, V3, P29, DOI 10.32614/rj-2011-015
   Wu J, 2018, NEUROCOMPUTING, V273, P535, DOI 10.1016/j.neucom.2017.08.026
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Yang C-L, 2017, 2017 IEEE SICE INT S
   Yang K, 2005, 5 IEEE INT C DAT MIN
   Zhu H, 2015, 2015 7 INT C ADV COM
   Zimek A., 2017, Encyclopedia of Database Systems, P1, DOI [DOI 10.1007/978-1-4899-7993-380719-1, DOI 10.1007/978-1-4899-7993-3_80719-1]
NR 57
TC 11
Z9 12
U1 0
U2 27
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2020
VL 50
IS 11
SI SI
BP 2065
EP 2081
DI 10.1002/spe.2756
EA OCT 2019
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NW3WG
UT WOS:000494127700001
DA 2024-07-18
ER

PT J
AU Sousa, BL
   Bigonha, MAS
   Ferreira, KAM
AF Sousa, Bruno L.
   Bigonha, Mariza A. S.
   Ferreira, Kecia A. M.
TI An exploratory study on cooccurrence of design patterns and bad smells
   using software metrics
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bad smell; cooccurrence; design pattern; software metrics
ID CODE SMELLS
AB A design pattern is a general reusable solution to commonly recurring problems in software projects. Bad smells are symptoms existing in the source code that possibly indicate the presence of a structural problem that requires code refactoring. Although design pattern and bad smells be different concepts, literature has shown that they may be related and cooccur during the evolution of a software system. This paper presents an empirical study that investigates cooccurrences of design patterns and bad smells as well as identifies the main factors that contribute to the emergence of the relationship between them. We carried out a case study with five Java systems to: (1) investigate if the use of design pattern reduces bad smell occurrence, (2) identify cooccurrences of design patterns and bad smells, and (3) identify situations that contribute for the cooccurrence emergence. As the main result, we found that the application of design pattern not necessarily avoid bad smell occurrences. The results also show that some design patterns such as composite, factory method, and singleton, are intrinsically modular and might be useful in creating high-quality systems. However, other design patterns such as adapter-command, proxy, and state-strategy, have presented high cooccurrence frequency with bad smells; therefore, they require attention in their implementation. Finally, via manual inspection in the components with cooccurrence, we found that the identified cooccurrences appeared due to poor planning and inadequate application of design patterns.
C1 [Sousa, Bruno L.; Bigonha, Mariza A. S.] Univ Fed Minas Gerais, Dept Comp Sci, BR-31270901 Belo Horizonte, MG, Brazil.
   [Ferreira, Kecia A. M.] Fed Ctr Technol Educ Minas Gerais CEFET MG, Dept Comp, Belo Horizonte, MG, Brazil.
C3 Universidade Federal de Minas Gerais
RP Sousa, BL (corresponding author), Univ Fed Minas Gerais, Dept Comp Sci, BR-31270901 Belo Horizonte, MG, Brazil.
EM bruno.luan.sousa@dcc.ufmg.br
RI Bigonha, Mariza/AAK-5829-2020; Bigonha, Mariza/ABE-3200-2020
OI Bigonha, Mariza/0000-0002-3471-0452; Sousa, Bruno/0000-0002-8217-3524
FU CAPES; UFMG Programming Language Research Group; UFMG Graduate Programin
   Computer Science; CEFET-MG
FX CAPES; UFMG Programming Language Research Group; UFMG Graduate Programin
   Computer Science; CEFET-MG
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   [Anonymous], AUTOM SOFTW ENG
   [Anonymous], THESIS
   Bhardwaj S, 2016, IEEE C ANTENNA MEAS
   Brin S., 1997, SIGMOD Record, V26, P255, DOI [10.1145/253262.253327, 10.1145/253262.253325]
   Cardoso B, 2015, P ANN C BRAZ S INF S
   Christopoulou A, 2012, INFORM SOFTWARE TECH, V54, P1202, DOI 10.1016/j.infsof.2012.05.004
   Eclipse, 2016, ECL 4
   Fernandes E, 2016, P 20 INT C EV ASS SO
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Filo T. G. S., 2015, P 1 INT C ADV TRENDS
   Filo TGS, 2014, P 10 WORKSH AN MPS W
   Filo TGS, 2014, THESIS
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Izurieta C, 2013, SOFTWARE QUAL J, V21, P289, DOI 10.1007/s11219-012-9175-x
   Jaafar F, 2013, ELECT COMMUN EASST, V59
   Jaafar F, 2016, EMPIR SOFTW ENG, V21, P896, DOI 10.1007/s10664-015-9361-0
   Kerievsky J., 2004, REFACTORING PATTERNS
   Khomh F., 2008, P 2008 12 EUR C SOFT
   Liu W, 2014, J CENT SOUTH UNIV, V21, P1935, DOI 10.1007/s11771-014-2140-z
   McNatt WB, 2001, P 25 ANN INT COMP SO
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nahar N, 2015, 3 INT WORKSH QUANT A
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Sousa B, 2017, DESIGN PATTERN SMELL
   Sousa B. L., 2018, P 33 ANN ACM S APPL
   Sousa BL, 2017, P 13 BRAZ S INF SYST
   Sousa BL, 2017, TECHNICAL REPORT
   Souza Pedro Herculano Guimaraes Ferreira, 2016, Phd thesis
   Speicher D., 2013, INT JOINT C KNOWL DI, P334
   Tempero E, 2010, 2010 AS PAC SOFTW EN
   Terra R., 2013, SIGSOFT Softw. Eng. Not., V38, P1, DOI [10.1145/2507288.2507314, DOI 10.1145/2507288.2507314]
   Tsantalis N, 2008, 2008 12 EUR C SOFTW
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Wagey BC, 2015, 2015 INT C DAT SOFTW
   Walter B, 2016, INFORM SOFTWARE TECH, V74, P127, DOI 10.1016/j.infsof.2016.02.003
   Wendorff P, 2001, P 5 EUR C SOFTW MAIN
   Wohlin C., 2012, Experimentation in Software Engineering
   Yamashita A, 2013, P 2013 INT C SOFTW E
   Zafeiris VE, 2017, INFORM SOFTWARE TECH, V82, P19, DOI 10.1016/j.infsof.2016.09.008
NR 42
TC 11
Z9 13
U1 2
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2019
VL 49
IS 7
BP 1079
EP 1113
DI 10.1002/spe.2697
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IC6BJ
UT WOS:000471053400002
DA 2024-07-18
ER

PT J
AU Martens, A
   Book, M
   Gruhn, V
AF Martens, Andreas
   Book, Matthias
   Gruhn, Volker
TI A data decomposition method for stepwise migration of complex legacy
   data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data decomposition; data migration tranches; incremental data migration;
   units of migration
AB Sooner or later, in almost every company, the maintenance and further development of large enterprise information technology (IT) applications reaches its limit. From the point of view of cost as well as technical capability, legacy applications must eventually be replaced by new enterprise IT applications. Data migration is an inevitable part of making this switch. While different data migration strategies can be applied, incremental data migration is one of the most popular strategies, due to its low level of risk: the entire data volume is split into several data tranches, which are then migrated in individual migration steps. The key to a successful migration is the strategy for decomposing the data into suitable tranches. This paper presents a method for data decomposition where the entire data volume of a monolithic enterprise IT application is split into independent data migration tranches. Each tranche comprises the data to be migrated in one migration step, which is usually executed during the application's downtime window. Unlike other methods, which describe data migration in a highly abstract way, we propose specific heuristics for data decomposition into independent data packages (tranches). The data migration approach described here is being applied in one of the largest migration projects currently underway in the European health care sector, comprising millions of customer records.
C1 [Martens, Andreas] Adesso AG, LoB Hlth, D-44269 Dortmund, Germany.
   [Book, Matthias] Univ Iceland, Sch Engn & Nat Sci, Reykjavik, Iceland.
   [Gruhn, Volker] Univ Duisburg Essen, Paluno Ruhr Inst Software Technol, Essen, Germany.
C3 University of Iceland; University of Duisburg Essen
RP Martens, A (corresponding author), Adesso AG, LoB Hlth, D-44269 Dortmund, Germany.
EM post@amartens.net
RI Book, Matthias/Z-6218-2019
OI Book, Matthias/0000-0003-2472-5201; Martens, Andreas/0000-0003-4757-061X
CR [Anonymous], TECHNICAL REPORT
   Aversano L, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P148, DOI 10.1109/CSMR.2001.914979
   Bisbal J, 1999, IEEE SOFTWARE, V16, P103, DOI 10.1109/52.795108
   Book M, 2014, LECT NOTES BUS INF P, V166, P115
   Brodie M.L., 1995, LEGACY INFORM SYSTEM
   Haller K, 2009, LECT NOTES COMPUT SC, V5565, P63, DOI 10.1007/978-3-642-02144-2_10
   Morris Johny, 2012, Practical data migration
   Ruping Andreas, 2013, Transactions on Pattern Languages of Programming III, P1, DOI 10.1007/978-3-642-38676-3_1
   Russom Philip, 2006, BEST PRACTICES DATA
   Sadalage PJ, 2012, NOSQL DISTILLED BRIE
   Sneed Harry M, 2016, SOFTWAREMIGRATION PR
   Wachter Sabine, 2015, SYSTEMKONSOLIDIERUNG
   Wagner Martin, 2010, 15 EUR C PATT LANG P
   Zahari NM, 2015, COMM COM INF SC, V545, P33, DOI 10.1007/978-981-287-936-3_4
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 19
TC 0
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2019
VL 49
IS 2
SI SI
BP 214
EP 232
DI 10.1002/spe.2647
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0GK
UT WOS:000459864300005
DA 2024-07-18
ER

PT J
AU Gholamshahi, S
   Hasheminejad, SMH
AF Gholamshahi, Shabnam
   Hasheminejad, Seyed Mohammad Hossein
TI Software component identification and selection: A research review
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE component identification; component selection; software component
ID AUTOMATED SELECTION; SYSTEMATIC METHOD; LEGACY SYSTEM; ALGORITHMS;
   SUPPORT; QUALITY; MODELS; COST
AB Nowadays, with the development of software reuse, software developers are paying more attention to component-related technologies, which have been mostly applied in the development of large-scale complex applications to enhance the productivity of software development and accelerate time to market. Component-based software development is well acknowledged as a methodology, which establishes the reusability of software and reduces the development cost effectively. Two crucial problems in component-based software development are component identification and component selection. The main purpose of this paper is to provide a reference point for future research by categorizing and classifying different component identification and component selection methods and emphasizing their respective strengths and weaknesses. We hope that it can help researchers find the current status of this issue and serve as a basis for future activities.
C1 [Gholamshahi, Shabnam; Hasheminejad, Seyed Mohammad Hossein] Alzahra Univ, Dept Comp Engn, Tehran 1993893973, Iran.
C3 Alzahra University
RP Hasheminejad, SMH (corresponding author), Alzahra Univ, Dept Comp Engn, Tehran 1993893973, Iran.
EM SMH.Hasheminejad@Alzahra.ac.ir
RI Hasheminejad, Seyed Mohammad Hossein/AAK-5957-2020
OI Hasheminejad, Seyed Mohammad Hossein/0000-0002-7357-7906
CR Ahmadzadeh M, 2016, ANDRIAS J, V40, P642
   Albani A, 2008, LECT NOTES COMPUT SC, V5282, P262, DOI 10.1007/978-3-540-87891-9_17
   Allier S, 2009, P 2009 C CTR ADV STU, P136
   Alves C, 2005, LECT NOTES COMPUT SC, V3412, P146
   ALVES C, 2001, P 15 BRAZ S SOFTW EN
   Amarjeet, 2017, COMPUT LANG SYST STR, V47, P153, DOI 10.1016/j.cl.2016.09.003
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2000, MULTICRITERIA DECISI
   [Anonymous], 2009, HDB ONTOLOGIES, DOI [10.1007/978-3-540-92673-3, DOI 10.1007/978-3-540-92673-3_]
   [Anonymous], P 14 INT C SOFTW ENG
   [Anonymous], ANDRIAS J
   [Anonymous], 2005, UN MOD LANG SPEC VER
   Armstrong E., 2005, J2EE 1 4 TUTORIAL
   Bartholet RG, 2005, P 37 C WINT SIM 2005
   Baster G, 2001, COMMUN ACM, V44, P92, DOI 10.1145/374308.374364
   BENNETT K, 1995, IEEE SOFTWARE, V12, P19, DOI 10.1109/52.363157
   Boonsiri S, 2002, INT J INF TECHNOL, V8, P40
   Boufaida Z., 2011, INT J SOFT COMPUTING, V2, P16, DOI [10.5121/ijsc.2011.2302, DOI 10.5121/IJSC.2011.2302]
   Boussaïd I, 2013, INFORM SCIENCES, V237, P82, DOI 10.1016/j.ins.2013.02.041
   Cai ZG, 2011, J ZHEJIANG U-SCI C, V12, P707, DOI 10.1631/jzus.C1000337
   Capretz LF, 2001, 27 ANN C IEEE IND EL, V3
   Cechich A, 2004, LECT NOTES COMPUT SC, V3009, P553
   Cechich A, 2004, P 26 INT C SOFTW ENG
   Cechich A, 2003, P INT C ENT INF SYST
   Choi M, 2006, J INF SCI ENG, V22, P247
   Constantinou E, 2015, INFORM PROCESS LETT, V115, P414, DOI 10.1016/j.ipl.2014.11.007
   Cortellessa V, 2008, J UNIVERS COMPUT SCI, V14, P1228
   Cortellessa V, 2006, LECT NOTES COMPUT SC, V4344, P66
   Cortellessa Vittorio., 2007, Proceedings of the twenty-second IEEEACM international conference on Automated software engineering ASE 07, P413
   Cui JF, 2011, INFORM SOFTWARE TECH, V53, P601, DOI 10.1016/j.infsof.2011.01.006
   Falamarzi A, 2016, C MAN ICT INF COMM T
   Fan-Chao M, 2005, P IEEE INT C E BUS E
   Fanchao M, 2007, INT C E MAN BUS INT
   Ganesan R, 2001, P 39 INT C EXH TECHN
   Garg RM, 2011, COMM COM INF SC, V181, P502
   Gill N., 2006, ACM SIGSOFT Software Engineering Notes, V31, P1, DOI [10.1145/1108768.1108771, DOI 10.1145/1108768.1108771]
   GODIN R, 1995, COMPUT INTELL-US, V11, P246, DOI 10.1111/j.1467-8640.1995.tb00031.x
   Gupta P, 2012, OPTIM LETT, V6, P273, DOI 10.1007/s11590-010-0243-5
   Ham DH, 2004, ETRI J, V26, P167, DOI 10.4218/etrij.04.0103.0041
   Hamza HS, 2009, P 2009 6 INT C INF T
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Hasheminejad SMH, 2015, INFORM SOFTWARE TECH, V57, P329, DOI 10.1016/j.infsof.2014.05.013
   Hasheminejad SMH, 2013, J OBJECT TECHNOL, V12, DOI 10.5381/jot.2013.12.2.a3
   Hasheminejad SMH, 2014, J SYST SOFTWARE, V96, P24, DOI 10.1016/j.jss.2014.05.033
   Hasheminejad SMH, 2018, J INTELL SYST
   Iribarne L, 2002, P 28 EUR C DORTM GER
   Jain HK, 2001, P 5 IEEE INT C ENT D
   Jang YJ, 2003, LECT NOTES COMPUT SC, V2817, P317
   Jha PC, 2010, INT J RELIAB QUAL SA, V17, P209, DOI 10.1142/S0218539310003767
   Jha PC, 2014, J COMPUT SCI-NETH, V5, P233, DOI 10.1016/j.jocs.2013.07.003
   Jha PC, 2014, INT J RELIAB QUAL SA, V20, P273
   Jung HW, 1999, EUR J OPER RES, V112, P613, DOI 10.1016/S0377-2217(98)00169-6
   Kaur R, 2015, PROCEDIA COMPUT SCI, V45, P842, DOI 10.1016/j.procs.2015.03.169
   Kebir S, 2012, P 2012 JOINT WORK IE
   Kebir S, 2012, P 5 INT C C COMP SCI
   Khan MA, 2010, INNOVATIONS IN COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P467, DOI 10.1007/978-90-481-9112-3_79
   Kim HK, 2006, LECT NOTES COMPUT SC, V3982, P198
   Kim SD, 2004, 11 AS PAC SOFTW ENG
   김태연, 2009, [The KIPS Transactions : Part D, 정보처리학회논문지D], V16, P407
   Kitchenham B., 2007, Joint Report
   Kontio J, 1996, PROC INT CONF SOFTW, P201, DOI 10.1109/ICSE.1996.493416
   Kontio J, 1995, REMAP EVALUATION CRI
   Kumar D., 2012, INT J COMPUTER APPL, V47, P9, DOI [10.5120/7174-9814, DOI 10.5120/7174-9814]
   Kumar S, 2012, COMM COM INF SC, V270, P57
   Lee E, 2004, LECT NOTES COMPUT SC, V3026, P87
   Lee JK, 2001, P 8 AS PAC SOFTW ENG
   Lee SD, 1999, P 6 AS PAC SOFTW ENG
   Lee WJ, 2003, ETRI J, V25, P121, DOI 10.4218/etrij.03.0102.0213
   Mahmood S, 2007, IET SOFTW, V1, P57, DOI 10.1049/iet-sen:20060045
   Martinez MA, 2008, 7 INT C COMP BAS SOF
   Maxville V., 2004, P 28 ANN INT COMP SO
   McIlroy M. D., 1968, P NATO C SOFTW ENG G
   Mishra SK, 2009, J OBJECT TECHNOL, V8, P133, DOI 10.5381/jot.2009.8.5.a3
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Neubauer T, 2007, 2007 40 ANN HAW INT
   Nourine L, 1999, INFORM PROCESS LETT, V71, P199, DOI 10.1016/S0020-0190(99)00108-8
   Pande J., 2013, SIGSOFT Softw. Eng. Notes, V38, P1, DOI [10.1145/2413038.2413044, DOI 10.1145/2413038.2413044]
   Park JG, 2007, INT CONF E BUS ENG, P337, DOI 10.1109/ICEBE.2007.17
   Peng L, 2008, P 2003 3 INT C INT S
   Perkins C., 2010, IP MOBILITY SUPPORT
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Ramírez A, 2015, INFORM SCIENCES, V305, P234, DOI 10.1016/j.ins.2015.01.017
   Ramirez Aurora, 2013, 15 ANN C COMP GEN EV, P209, DOI [10.1145/2464576.2464679, DOI 10.1145/2464576.2464679]
   Rodrigues NF, 2006, ELECTRON NOTES THEOR, V160, P291, DOI 10.1016/j.entcs.2006.05.029
   Serban C, 2009, LECT NOTES ARTIF INT, V5572, P621, DOI 10.1007/978-3-642-02319-4_75
   Shahmohammadi GR, 2010, J OBJECT TECHNOL, V9, P77, DOI 10.5381/jot.2010.9.6.a4
   Szyperski C, 1998, SOFTWARE-CONC TOOL, V19, P2, DOI 10.1007/s003780050002
   Tang JF, 2011, EUR J OPER RES, V212, P301, DOI 10.1016/j.ejor.2011.01.045
   Tilley T, 2005, LECT NOTES ARTIF INT, V3626, P250
   Toval A., 2001, Requirements Engineering, V6, P205, DOI 10.1007/PL00010360
   Verma S, 2017, OPTIMIZATION, V66, P1879, DOI 10.1080/02331934.2017.1316502
   Vescan A, 2008, P 2008 2 UKSIN EUR S
   Vescan A, 2009, P UKSIM 2009 11 INT
   Vescan A, 2008, 2008 8 INT C INT SYS
   Vescan A., 2010, STUD U BABES BOLYAI, VLV, P18
   Vescan A, 2008, LECT NOTES ARTIF INT, V5271, P164, DOI 10.1007/978-3-540-87656-4_21
   Vescan A, 2016, LECT NOTES COMPUT SC, V9586, P130, DOI 10.1007/978-3-662-50539-7_11
   Vescan A, 2016, LECT NOTES COMPUT SC, V9586, P193, DOI 10.1007/978-3-662-50539-7_16
   Vescan A, 2016, LECT NOTES ARTIF INT, V9648, P463, DOI 10.1007/978-3-319-32034-2_39
   Vitharana P, 2003, COMMUN ACM, V46, P97, DOI 10.1145/948383.948387
   Whitley D, 2001, INFORM SOFTWARE TECH, V43, P817, DOI 10.1016/S0950-5849(01)00188-4
   Wu ZQ, 2012, COMPUT OPER RES, V39, P3376, DOI 10.1016/j.cor.2012.04.020
   Xanthakis S, 1992, P 5 INT C SOFTW ENG
   Zapfel G, 2010, METAHEURISTIC SEARCH CONCEPTS, P1, DOI 10.1007/978-3-642-11343-7
NR 104
TC 5
Z9 5
U1 0
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2019
VL 49
IS 1
BP 40
EP 69
DI 10.1002/spe.2656
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC7ZF
UT WOS:000452020000002
OA Bronze
DA 2024-07-18
ER

PT J
AU Kowalski, TM
   Grabowski, S
AF Kowalski, Tomasz M.
   Grabowski, Szymon
TI Faster range minimum queries
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bulk queries; range minimum query; string algorithms
AB y Range minimum query is an important building brick of many compressed data structures and string matching algorithms. Although this problem is essentially solved in theory, with sophisticated data structures allowing for constant time queries, practical performance and construction time also matter. Additionally, there are offline scenarios in which the number of queries, ie, q, is rather small and given beforehand, which encourages to use a simpler approach. In this work, we present a simple data structure, with very fast construction, which allows to handle queries in constant time on average. This algorithm, however, requires access to the input data during queries (which is not the case of sophisticated range minimum query solutions). We subsequently refine our technique, combining it with one of the existing succinct solutions with O(1) worst-case time queries and no access to the input array. The resulting hybrid is still a memory frugal data structure, spending usually up to about 3n bits and providing competitive query times, especially for wide ranges. We also show how to make our baseline data structure more compact. Experimental results demonstrate that the proposed block-based sparse table (BbST) variants are competitive to existing solutions, also in the offline scenario.
C1 [Kowalski, Tomasz M.; Grabowski, Szymon] Lodz Univ Technol, Inst Appl Comp Sci, Al Politech 11, PL-90924 Lodz, Poland.
C3 Lodz University of Technology
RP Kowalski, TM (corresponding author), Lodz Univ Technol, Inst Appl Comp Sci, Al Politech 11, PL-90924 Lodz, Poland.
EM tkowals@kis.p.lodz.pl
RI Grabowski, Szymon/AAJ-2398-2021; Kowalski, Tomasz M/V-1500-2017
OI Grabowski, Szymon/0000-0003-1714-1224; Kowalski, Tomasz
   M/0000-0003-0953-3762
FU Polish National Science Centre [DEC-2013/09/B/ST6/03117]
FX Polish National Science Centre, Grant/Award Number:
   DEC-2013/09/B/ST6/03117
CR Afshani P, 2014, P 14 SCAND S WORKSH
   Alzamel M, 2017, CORRABS170504589
   Baumstark N, 2017, P 16 INT S EXP ALG S
   BENDER M., 2000, P 4 LAT AM S THEOR I
   Ferrada H, 2017, J DISCRET ALGORITHMS, V43, P72, DOI 10.1016/j.jda.2016.09.002
   Fischer J, 2008, 8 IEEE INT C DAT MIN
   Fischer J, 2011, SIAM J COMPUT, V40, P465, DOI 10.1137/090779759
   Gabow Harold N., 1984, P 16 ANN ACM S THEOR
   Gog S, 2014, P 13 INT S EXP ALG S
   Grabowski Sz, 2017, PRAG STRING C 2017 P
   Grossi R, 2013, P 12 INT S EXP ALG S
   HAREL D, 1984, SIAM J COMPUT, V13, P338, DOI 10.1137/0213024
   Jacobson G, 1989, 30 ANN S FDN COMP SC
   Katajainen J., 2003, Nordic Journal of Computing, V10, P238
   Sadakane K, 2007, THEOR COMPUT SYST, V41, P589, DOI 10.1007/s00224-006-1198-x
   Singler J, 2007, 13 INT EUR C BERL HE
NR 16
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2018
VL 48
IS 11
BP 2043
EP 2060
DI 10.1002/spe.2597
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GW3WX
UT WOS:000446841000006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Faragardi, HR
   Dehnavi, S
   Nolte, T
   Kargahi, M
   Fahringer, T
AF Faragardi, Hamid Reza
   Dehnavi, Saeid
   Nolte, Thomas
   Kargahi, Mehdi
   Fahringer, Thomas
TI An energy-aware resource provisioning scheme for real-time applications
   in a cloud data center
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ant colony optimization; energy-aware allocation; real-time Cloud;
   simulated annealing; virtualization; VM placement
ID OPTIMIZATION; ALLOCATION
AB Based on a pay-as-you-go model, cloud computing provides the possibility of hosting pervasive applications from both academic and business domains. However, data centers hosting cloud applications consume huge amounts of electrical energy, contributing to high operational costs and large carbon footprints to the environment. Energy-aware resource provisioning is an effective solution to diminish the energy consumption of cloud data centers. Recently, a growing trend has emerged, where cloud technology is used to run periodic real-time applications such as multimedia, telecommunication, video gaming, and industrial applications. In order for a real-time application to be able to use cloud services, cloud providers have to be able to provide timing guarantees. In this paper, we introduce an energy-aware resource provisioning mechanism for cloud data centers, which are capable of serving real-time periodic tasks following the Software as a Service model. The proposed method is compared against an energy-aware version of the RT-OpenStack. RT-OpenStack is a recently proposed approach to provide a time-predictable version of OpenStack. The experimental results manifest that our proposed resource provisioning method outperforms energy-aware version of the RT-OpenStack by 16.01%, 25.45%, and 25.45% in terms of energy consumption, number of used servers, and average utilization of used servers, respectively. Moreover, from the scalability perspective, the preference of the proposed method for large-scale data centers is more considerable.
C1 [Faragardi, Hamid Reza; Nolte, Thomas] Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
   [Faragardi, Hamid Reza; Fahringer, Thomas] Univ Innsbruck, Inst Comp Sci, Distributed & Parallel Syst Grp, Innsbruck, Austria.
   [Dehnavi, Saeid; Kargahi, Mehdi] Univ Tehran, Sch Elect & Comp Engn, Coll Engn, Tehran, Iran.
   [Kargahi, Mehdi] Inst Res Fundamental Sci IPM, Sch Comp Sci, Tehran, Iran.
C3 Malardalen University; University of Innsbruck; University of Tehran
RP Faragardi, HR (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
EM hamid.faragardi@mdh.se
RI Kargahi, Mehdi/Y-6352-2019; Faragardi, Hamid Reza/AAL-4056-2020
OI Kargahi, Mehdi/0000-0001-9300-4665; Faragardi, Hamid
   Reza/0000-0002-1384-5323; Fahringer, Thomas/0000-0003-4293-1228
FU Future factories in the Cloud (FiC) project
FX Future factories in the Cloud (FiC) project
CR [Anonymous], 2016, SCHEDULING THEORY AL, DOI DOI 10.1007/978-3-319-26580-3
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Burmyakov A, 2014, REAL-TIME SYST, V50, P342, DOI 10.1007/s11241-013-9199-8
   Checconi F., 2009, P 5 INT WORKSH OP SY
   Coutinho RD, 2015, FUTURE GENER COMP SY, V46, P51, DOI 10.1016/j.future.2014.10.009
   Cucinotta T, 2013, 2 INT WORKSH REAL TI
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dehnavi S, 2017, SIMULATION ENERGY CO
   Duan HC, 2017, FUTURE GENER COMP SY, V74, P142, DOI 10.1016/j.future.2016.02.016
   Easwaran A, 2009, REAL-TIME SYST, V43, P25, DOI 10.1007/s11241-009-9073-x
   Fan XB, 2007, CONF PROC INT SYMP C, P13, DOI 10.1145/1273440.1250665
   Faragardi H, 2018, INT S REAL TIM EMB S
   Faragardi HR, 2017, IEEE 19 INT C HIGH P
   Faragardi HR, 2012, IEEE 14 INT C HIGH P
   Faragardi HR, 2014, INT WORKSH DES SPAC
   Faragardi HR, 2013, IEEE 10 INT C HIGH P
   Faragardi HR, 2014, CSI J COMPUT SCI ENG, V2, P28
   Faragardi HR, 2018, J SYST SOFTW, V64
   Gao Y, 2013, INT C HARDW SOFTW CO
   García-Valls M, 2014, J SYST ARCHITECT, V60, P726, DOI 10.1016/j.sysarc.2014.07.004
   Gendreau M, 2010, HDB METAHEURISTICS, V2
   Gill SS, 2019, J GRID COMPUT, V17, P385, DOI 10.1007/s10723-017-9424-0
   Heilig L, 2016, COMPUT IND ENG, V95, P16, DOI 10.1016/j.cie.2016.02.015
   Kansal NJ, 2015, CONCURR COMP-PRACT E, V27, P1207, DOI 10.1002/cpe.3295
   Khalilzad NM, 2012, 5 INT WORKSH COMP TH
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kliazovich D, 2015, CLOUD SERVICES, NETWORKING, AND MANAGEMENT, P193
   Koomey J.G., 2007, ESTIMATING TOTAL POW
   Lackorzyski A, 2012, P 10 ACM INT C EMB S
   Leontyev H, 2008, 2008 EUR REAL TIM SY
   Lipari G, 2010, 31 IEEE REAL TIM SYS
   Luckow KS, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3828
   Moreira O, 2016, SCHEDULING REAL TIME
   Orgerie A-C, 2010, INT C GREEN COMP CHI
   Pascual JA, 2015, J GRID COMPUT, V13, P375, DOI 10.1007/s10723-014-9312-9
   Pendharkar PC, 2015, J COMPUT SCI-NETH, V7, P37, DOI 10.1016/j.jocs.2015.01.001
   Pietri I, 2013, 3 INT C CLOUD GREEN
   Poola D, 2016, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2815624
   Rajabi A, 2013, 17 CSI INT S COMP AR
   Sha L, 2004, REAL-TIME SYST, V28, P101, DOI 10.1023/B:TIME.0000045315.61234.1e
   Shin I, 2003, 24 IEEE REAL TIM SYS
   Simopoulos DN, 2006, IEEE T POWER SYST, V21, P68, DOI 10.1109/TPWRS.2005.860922
   STANKOVIC JA, 1990, REAL-TIME SYST, V2, P247, DOI 10.1007/BF01995673
   Stoyenko AD, 2012, CONSTRUCTING PREDICT, V146
   Stützle T, 2000, FUTURE GENER COMP SY, V16, P889, DOI 10.1016/S0167-739X(00)00043-1
   Talbi E.-G., 2009, METAHEURISTICS DESIG, V74
   Toma A, 2013, 11 IEEE S EMB SYST R
   Xi S, 2015, 2015 IEEE 8 INT C CL
   Xi S, 2014, P 14 ACM INT C EMB S
   Zhu X, 2016, IEEE 18 INT C HIGH P
NR 50
TC 9
Z9 9
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2018
VL 48
IS 10
SI SI
BP 1734
EP 1757
DI 10.1002/spe.2592
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GS4EA
UT WOS:000443587100002
DA 2024-07-18
ER

PT J
AU Tiberkak, A
   Lemlouma, T
   Belkhir, A
   Bouabdallah, A
   Hentout, A
AF Tiberkak, Allal
   Lemlouma, Tayeb
   Belkhir, Abdelkader
   Bouabdallah, Ahmed
   Hentout, Abdelfetah
TI A novel approach for generic home emergency management and remote
   monitoring
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE contextual role-based access control; extended finite-state machine;
   home emergency management system; remote patient monitoring; smart home
   security and privacy; web real-time communication
ID CONTEXT-AWARE; INTERNET; ACCESS; THINGS; WEB
AB This paper presents a novel home emergency management system (HEMS) for managing home emergency situations. The proposed solution is a generic and based on normalized technologies. First, we have identified a set of requirements that a robust HEMS should satisfy (interoperability, security, mobility, etc). Then, we have opted for an extended finite-state machine to detect and manage emergency situations. We also adopted WebRTC to enable communication in an interoperable manner. For securing our HEMS, we have used HTTPS, password, contextual role-based access control, and we have finally installed all the public servers into a protected area. The result obtained from the test-bed demonstrates that the proposed HEMS fills all the listed requirements. Furthermore, it gives very interesting results in terms of round-trip delay time and scalability.
C1 [Tiberkak, Allal] Univ Dr Yahia Fares, Dept Math & Comp Sci, Fac Sci, Medea, Algeria.
   [Tiberkak, Allal] Univ Sci & Technol Houari Boumediene, Fac Elect & Comp Sci, Comp Syst Lab, Algiers, Algeria.
   [Lemlouma, Tayeb] IRISA Lab, Telecommun & Serv Dept, Networks D2, Lannion, France.
   [Belkhir, Abdelkader] Univ Sci & Technol Houari Boumediene, Fac Elect & Comp Sci, Dept Comp Sci, Algiers, Algeria.
   [Bouabdallah, Ahmed] UBL, IMT Atlantique, IRISA, F-35576 Cesson Sevigne, France.
   [Hentout, Abdelfetah] Ctr Dev Adv Technol, Div Comp Integrated Mfg & Robot DPR, Algiers, Algeria.
C3 Universite Yahia Fares Medea; University Science & Technology Houari
   Boumediene; University Science & Technology Houari Boumediene; IMT -
   Institut Mines-Telecom; IMT Atlantique
RP Tiberkak, A (corresponding author), Univ Dr Yahia Fares, Dept Math & Comp Sci, Fac Sci, Medea, Algeria.; Tiberkak, A (corresponding author), Univ Sci & Technol Houari Boumediene, Fac Elect & Comp Sci, Comp Syst Lab, Algiers, Algeria.
EM tiberkak.allal@univ-medea.dz
RI Lemlouma, Tayeb/H-2483-2015; abdelkader, belkhir/P-6367-2016
OI Hentout, Abdelfetah/0000-0003-3851-7745; abdelkader,
   belkhir/0000-0002-1813-3384
CR Abdallah IB, 2016, 2016 4 INT C CONTR E
   Ahn GJ, 2009, IEEE T SYST MAN CY C, V39, P562, DOI 10.1109/TSMCC.2009.2020437
   Alahmadi A., 2011, 2011 INT C RES INN I
   Benson K, 2015, IEEE COMMUN MAG, V53, P27, DOI 10.1109/MCOM.2015.7355581
   Berns K, 2010, ADV TECHN ENH QUAL L
   Bose J, 2012, 2012 ANN IEEE IND C
   Bureau of Labor Statistics, 2015, AM TIM US SURV CHART
   El Jaouhari S, 2017, ADV INTELLIGENT SYST, V571
   Forkan ARM, 2017, COMPUT METH PROG BIO, V139, P1, DOI 10.1016/j.cmpb.2016.10.018
   Galiano A, 2016, IEEE INT SYM MED MEA, P358
   Garripoli C, 2015, IEEE J BIOMED HEALTH, V19, P92, DOI 10.1109/JBHI.2014.2361252
   Gill K, 2013, IET INFORM SECUR, V7, P118, DOI 10.1049/iet-ifs.2011.0303
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Holmberg C, 2015, RFC7478 IETF
   Jin ZP, 2015, IEEE PERVAS COMPUT, V14, P54, DOI 10.1109/MPRV.2015.19
   Leotta F, 2015, SOFTWARE PRACT EXPER, V45, P801, DOI 10.1002/spe.2262
   MEALY GH, 1955, AT&T TECH J, V34, P1045, DOI 10.1002/j.1538-7305.1955.tb03788.x
   Meng Z, 2016, IEEE T MOBILE COMPUT, V15, P558, DOI 10.1109/TMC.2015.2424427
   Meyer J, 2014, IEEE PERVAS COMPUT, V13, P10, DOI 10.1109/MPRV.2014.25
   Minutolo A, 2010, 2010 IEEE EMBS C BIO
   Motta GHMB, 2003, IEEE T INF TECHNOL B, V7, P202, DOI 10.1109/TITB.2003.816562
   Nations U., 2016, 2015 REV WORLD POP P
   Ni Q, 2009, IEEE SECUR PRIV, V7, P35, DOI 10.1109/MSP.2009.102
   OMG: OMG Unified Modeling Language (OMG UML), 2009, OMG UN MOD LANG OMG
   Pavón-Pulido N, 2015, IEEE INT CONF AUTON, P198, DOI 10.1109/ICARSC.2015.40
   Perera C, 2014, IEEE COMMUN SURV TUT, V16, P414, DOI 10.1109/SURV.2013.042313.00197
   Pierleoni P, 2016, 2016 IEEE 18 INT C E
   Prandini M, 2010, IEEE SECUR PRIV, V8, P80, DOI 10.1109/MSP.2010.190
   Raggett D, 2015, COMPUTER, V48, P26, DOI 10.1109/MC.2015.149
   Rawashdeh M, 2016, IEEE INT CONF MULTI
   Reeder RW, 2011, IEEE SECUR PRIV, V9, P43, DOI 10.1109/MSP.2011.1
   Romero D, 2013, SOFTWARE PRACT EXPER, V43, P1205, DOI 10.1002/spe.1125
   Rosenberg J., 2010, RFC5245 IETF
   Roy S, 2016, 2016 INTERNATIONAL CONFERENCE ON INNOVATIONS IN SCIENCE, ENGINEERING AND TECHNOLOGY (ICISET 2016)
   Solana J, 2015, IEEE J BIOMED HEALTH, V19, P124, DOI 10.1109/JBHI.2014.2354537
NR 35
TC 7
Z9 7
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2018
VL 48
IS 4
BP 761
EP 774
DI 10.1002/spe.2553
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FY3VV
UT WOS:000426749900001
DA 2024-07-18
ER

PT J
AU Celesti, A
   Mulfari, D
   Fazio, M
   Puliafito, A
   Villari, M
AF Celesti, Antonio
   Mulfari, Davide
   Fazio, Maria
   Puliafito, Antonio
   Villari, Massimo
TI Evaluating alternative DaaS solutions in private and public OpenStack
   Clouds
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; OpenStack; DaaS; remote desktop
ID SYSTEM
AB Nowadays, remote desktop technologies are widely used to control remote computers. In this context, more and more Desktop as a Service (DaaS) solutions that allow users to directly control Virtual Machines through HTML5 web applications are emerging. However, currently, DaaS is at an early stage because several issues have to be addressed. In this paper, we aim to provide software architects a 360-degree study on the major web-based remote desktop client systems for the development of next generation DaaS solutions in both OpenStack-based private and public Clouds. In particular, we compare and test different native and customized web-based remote desktop solutions, specifically focusing on audio and video redirection performances in both Cloud environments. Exhaustive experiments highlight, from an objective point of view, the behavior of different DaaS solutions, providing useful hints to software architects and developers. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Celesti, Antonio] Univ Messina, Sci Res Op U, Via Consolato Mare 41, I-98122 Messina, Italy.
   [Mulfari, Davide; Fazio, Maria; Puliafito, Antonio; Villari, Massimo] Univ Messina, Dept Engn, I-98166 Messina, Italy.
   [Villari, Massimo] IRCCS, Ctr Neurolesi Bonino Pulejo, Messina, Italy.
C3 University of Messina; University of Messina; IRCCS Bonino Pulejo
RP Celesti, A; Mulfari, D; Fazio, M; Puliafito, A; Villari, M (corresponding author), Univ Messina, Dept Engn, I-98166 Messina, Italy.
EM acelesti@unime.it
RI Mulfari, Davide/HJH-7208-2023; Puliafito, Antonio/H-7823-2016; CELESTI,
   ANTONIO/C-6121-2016
OI Puliafito, Antonio/0000-0003-0385-2711; Fazio,
   Maria/0000-0003-3574-1848; CELESTI, ANTONIO/0000-0001-9003-6194;
   Mulfari, Davide/0000-0002-8334-7311; VILLARI,
   Massimo/0000-0001-9457-0677
FU European Unions Horizon Research and Innovation Programme Project BEACON
   [644048]; H2020 - Industrial Leadership [644048] Funding Source: H2020 -
   Industrial Leadership
FX This research was supported by the European Unions Horizon 2020 Research
   and Innovation Programme Project BEACON under Grant Agreement No.
   644048.
CR Astsatryan H, 2016, EARTH SCI INFORM, V9, P401, DOI 10.1007/s12145-016-0254-6
   Berryman A., 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P480, DOI 10.1109/CloudCom.2010.106
   Celesti A, 2016, 2016 IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATION (ISCC), P281, DOI 10.1109/ISCC.2016.7543755
   Kibe S., 2012, 2012 15th International Conference on Network-Based Information Systems (NBiS 2012), P621, DOI 10.1109/NBiS.2012.43
   Litvinski O, 2013, PROCEDIA COMPUT SCI, V19, P116, DOI 10.1016/j.procs.2013.06.020
   Mulfari D., 2013, W4A 13, P1
   Mulfari D, 2015, COMM COM INF SC, V508, P106, DOI 10.1007/978-3-319-14886-1_11
   Mulfari D, 2015, J SYST SOFTWARE, V100, P129, DOI 10.1016/j.jss.2014.10.035
   Mulfari D, 2014, SYMP NETW CLOUD, P125, DOI 10.1109/NCCA.2014.28
   Mulfari D, 2013, 2013 IEEE 10TH INTERNATIONAL CONFERENCE ON AND 10TH INTERNATIONAL CONFERENCE ON AUTONOMIC AND TRUSTED COMPUTING (UIC/ATC) UBIQUITOUS INTELLIGENCE AND COMPUTING, P72, DOI 10.1109/UIC-ATC.2013.42
   Ryabinin K, 2013, PROCEDIA COMPUT SCI, V18, P722, DOI 10.1016/j.procs.2013.05.236
   Shi Shu, 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P702, DOI 10.1109/CLOUD.2012.121
NR 12
TC 2
Z9 2
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2017
VL 47
IS 9
SI SI
BP 1185
EP 1200
DI 10.1002/spe.2498
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD0BH
UT WOS:000407204300002
DA 2024-07-18
ER

PT J
AU Xu, XL
   Dou, WC
   Zhang, XY
   Hu, CH
   Chen, JJ
AF Xu, Xiaolong
   Dou, Wanchun
   Zhang, Xuyun
   Hu, Chunhua
   Chen, Jinjun
TI A traffic hotline discovery method over cloud of things using big taxi
   GPS data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE traffic hotline discovery; big taxi GPS data; transportation planning;
   CoT
ID LAND-USE; TRANSPORT
AB Traffic hotline discovery is necessary for rational and scientific urban transportation planning in the new living quarters and economic zones. Cloud of Things (CoT) is a newly emerging concept, involving with two advanced technologies, that is, Cloud Computing and Internet of Things (IoT). CoT provides promising opportunities for traffic hotline discovery. However, it is still a challenge to discover the traffic hotlines over CoT. In view of this challenge, a hotline discovery method over CoT by using big taxi GPS data is proposed in this paper. Specifically, a traffic hotline discovery principle is presented to provide a reference standard for the generalized traffic spots that need planning, and a corresponding hotline discovery method is proposed for traffic hotspot identification and hotline selection. To improve the scalability and efficiency of the proposed method in Big Data environment, the SAP HANA cloud is applied to implement the proposed method under two application scenarios. Finally, the experimental results demonstrate that the proposed method is both effective and efficient. SoftwarePractice and Experience. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Xu, Xiaolong; Dou, Wanchun] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Xu, Xiaolong; Chen, Jinjun] Univ Technol Sydney, Fac Engn & IT, Sydney, NSW 2007, Australia.
   [Dou, Wanchun] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Zhang, Xuyun] NICTA Victoria, Machine Learning Res Grp, Sydney, NSW, Australia.
   [Hu, Chunhua] Hunan Univ Commerce, Sch Comp & Informat Engn, Changsha, Hunan, Peoples R China.
C3 Nanjing University; University of Technology Sydney; Nanjing University;
   Hunan University of Technology & Business
RP Dou, WC (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Jiangsu, Peoples R China.
EM douwc@nju.edu.cn
RI Xu, Xiaolong/U-2547-2019; Chen, Jinjun/AAP-2361-2020; zhang,
   xu/GYE-3558-2022; ZHANG, XUCHEN/KBB-7989-2024
OI Xu, Xiaolong/0000-0003-4879-9803; Chen, Jinjun/0000-0003-1677-9525;
   Zhang, Xuyun/0000-0001-7353-4159
FU National Science Foundation of China [91318301, 61273232, 41275116,
   61321491]; Key Research and Development Project of Jiangsu Province
   [BE2015154]; Collaborative Innovation Center of Novel Software
   Technology and Industrialization, Nanjing University; Program for New
   Century Excellent Talents in University [NCET-13-0785]
FX This research is partially supported by the National Science Foundation
   of China under Grant No. 91318301, No. 61273232, No. 41275116 and No.
   61321491, the Key Research and Development Project of Jiangsu Province
   under Grant No. BE2015154, the Collaborative Innovation Center of Novel
   Software Technology and Industrialization, Nanjing University. Besides
   the research is also partly supported by the Program for New Century
   Excellent Talents in University under NCET-13-0785.
CR [Anonymous], LNCS
   Appert-Rolland C., 2014, PEDESTRIAN EVACUATIO, P575
   Ballantyne EEF, 2013, J TRANSP GEOGR, V32, P93, DOI 10.1016/j.jtrangeo.2013.08.013
   Carson Q, 2015, P TRANSP RES BOARD 9, P5556
   Castillo E, 2010, IEEE T INTELL TRANSP, V11, P380, DOI 10.1109/TITS.2010.2042958
   Castro Pablo Samuel, 2012, Pervasive Computing. Proceedings of the 10th International Conference, Pervasive 2012, P57, DOI 10.1007/978-3-642-31205-2_4
   Ceder A, 2015, TRANSPORT RES B-METH, V74, P40, DOI 10.1016/j.trb.2015.01.006
   Chen C, 2014, IEEE T INTELL TRANSP, V15, P575
   Chen C, 2013, INT CONF PERVAS COMP, P225, DOI 10.1109/PerCom.2013.6526736
   Dong MX, 2016, IEEE T PARALL DISTR, V27, P225, DOI 10.1109/TPDS.2015.2388482
   Falcocchio J.C., 2013, Traveler-Oriented Traffic Performance Metrics Using Real Time Traffic Data from the Midtown-in-Motion (MIM) Project in Manhattan, NY
   Frber F, 2011, P ACM SIGMOD REC NEW, V40, P45
   Fu XW, 2011, 2011 INTERNATIONAL CONFERENCE ON ELECTRONICS, COMMUNICATIONS AND CONTROL (ICECC), P902, DOI 10.1109/ICECC.2011.6066424
   Herrera JC, 2010, TRANSPORT RES C-EMER, V18, P568, DOI 10.1016/j.trc.2009.10.006
   Larcom JA, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON TECHNOLOGIES FOR HOMELAND SECURITY (HST), P729, DOI 10.1109/THS.2013.6699094
   Lawson C.T., 2011, Compression and mining of GPS trace data: new techniques and applications
   Murphy E, 2012, TRANSPORT RES A-POL, V46, P91, DOI 10.1016/j.tra.2011.09.017
   Niu XG, 2014, IEEE GLOB COMM CONF, P2745, DOI 10.1109/GLOCOM.2014.7037223
   Noureldin A, 2013, SPRINGER SCI BUSINES, P65
   Ota K, 2011, 2011 IEEE WIRELESS COMMUNICATIONS AND NETWORKING CONFERENCE (WCNC), P1021, DOI 10.1109/WCNC.2011.5779275
   Pan G, 2013, IEEE T INTELL TRANSP, V14, P113, DOI 10.1109/TITS.2012.2209201
   Redman L, 2013, TRANSPORT POLICY, V25, P119, DOI 10.1016/j.tranpol.2012.11.005
   Seto KC, 2011, PLOS ONE, V6, DOI 10.1371/journal.pone.0023777
   Silveira PAM, 2013, J NAVIGATION, V66, P879, DOI 10.1017/S0373463313000519
   Song Y, 2012, PROCEEDING OF THE IEEE INTERNATIONAL CONFERENCE ON INFORMATION AND AUTOMATION, P981, DOI 10.1109/ICInfA.2012.6246959
   Tung LP, 2011, INT C PAR DISTRIB SY, P877, DOI 10.1109/ICPADS.2011.14
   Xu XL, 2017, SOFTWARE PRACT EXPER, V47, P361, DOI 10.1002/spe.2412
   Yin L, 2014, 2014 IEEE 17TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P2162, DOI 10.1109/ITSC.2014.6958023
   Yu JB, 2012, 2012 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE AND INTELLIGENT AGENT TECHNOLOGY (WI-IAT 2012), VOL 2, P478, DOI 10.1109/WI-IAT.2012.216
   Yu RJ, 2014, ACCIDENT ANAL PREV, V62, P161, DOI 10.1016/j.aap.2013.08.009
NR 30
TC 16
Z9 20
U1 0
U2 28
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2017
VL 47
IS 3
SI SI
BP 361
EP 377
DI 10.1002/spe.2412
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL9RK
UT WOS:000394957500003
DA 2024-07-18
ER

PT J
AU Soulé, R
   Hirzel, M
   Gedik, B
   Grimm, R
AF Soule, Robert
   Hirzel, Martin
   Gedik, Bugra
   Grimm, Robert
TI River: an intermediate language for stream processing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE stream processing; optimizations
ID JAVA; CALCULUS; COMPILER; QUERIES; SYSTEM
AB This paper presents both a calculus for stream processing, named Brooklet, and its realization as an intermediate language, named River. Because River is based on Brooklet, it has a formal semantics that enables reasoning about the correctness of source translations and optimizations. River builds on Brooklet by addressing the real-world details that the calculus elides. We evaluated our system by implementing front-ends for three streaming languages, and three important optimizations, and a back-end for the System S distributed streaming runtime. Overall, we significantly lower the barrier to entry for new stream-processing languages and thus grow the ecosystem of this crucial style of programming. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Soule, Robert] Univ Svizzera Italiana, Fac Informat, Via Giuseppe Buffi 13, CH-6904 Lugano, Switzerland.
   [Hirzel, Martin] IBM Watson Res Ctr, POB 218, Yorktown Hts, NY 10598 USA.
   [Gedik, Bugra] Bilkent Univ, Dept Comp Engn, TR-06800 Ankara, Turkey.
   [Grimm, Robert] NYU, Dept Comp Sci, 715 Broadway Room 711, New York, NY 10003 USA.
C3 Universita della Svizzera Italiana; International Business Machines
   (IBM); Ihsan Dogramaci Bilkent University; New York University
RP Soulé, R (corresponding author), Univ Svizzera Italiana, Fac Informat, Via Giuseppe Buffi 13, CH-6904 Lugano, Switzerland.
EM robert.soule@usi.ch
OI Soule, Robert/0000-0002-2825-6660; Grimm, Robert/0000-0002-8300-2153
CR Adi A, 2004, VLDB J, V13, P177, DOI 10.1007/s00778-003-0108-y
   Amini Lisa., 2006, Proceedings of the 4th inter- national workshop on Data mining standards, services and platforms, DMSSP '06, P27
   [Anonymous], 2005, Sci. Program
   [Anonymous], 2013, Proceedings of the 8th ACM European Conference on Computer Systems
   [Anonymous], 2008, Proceedings of the 2008 ACM SIGMOD international conference on Management of data, SIGMOD'08, ACM
   [Anonymous], 2006, SIGMOD C
   [Anonymous], REV SCI COMPUTER PRO
   [Anonymous], 1992, Semantics with applications: a formal introduction
   [Anonymous], 2011, P 8 USENIX C NETWORK
   [Anonymous], 1974, PROC IFIP C 74
   Arasu A, 2006, VLDB J, V15, P121, DOI 10.1007/s00778-004-0147-z
   Arasu A, 2004, SIGMOD REC, V33, P6, DOI 10.1145/1031570.1031572
   Auerbach J, 2010, ACM SIGPLAN NOTICES, V45, P89, DOI 10.1145/1932682.1869469
   Avnur R, 2000, SIGMOD REC, V29, P261, DOI 10.1145/335191.335420
   Barga R.S., 2007, CIDR 2007 3 BIENNIAL, P363
   Bravenboer M, 2004, ACM SIGPLAN NOTICES, V39, P365, DOI 10.1145/1035292.1029007
   Brenna L., 2009, Proceedings of the Third ACM International Conference on Distributed Event-Based Systems, P3, DOI [10.1145/1619258, DOI 10.1145/1619258]
   Chambers C, 2010, ACM SIGPLAN NOTICES, V45, P363, DOI 10.1145/1809028.1806638
   Chen JJ, 2000, SIGMOD REC, V29, P379, DOI 10.1145/335191.335432
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   DEWITT D, 1992, COMMUN ACM, V35, P85, DOI 10.1145/129888.129894
   Drake M, 2006, P 20 IEEE INT PAR DI, P86
   Fegaras L, 1999, J INTELL INF SYST, V12, P219, DOI 10.1023/A:1008757010516
   Garcia-Molina Hector, 2008, DATABASE SYSTEMS COM
   Ghelli Giorgio., 2008, SIGMOD C, P339
   Gordon MI, 2002, ACM SIGPLAN NOTICES, V37, P291, DOI 10.1145/605432.605428
   Gordon MI, 2006, ACM SIGPLAN NOTICES, V41, P151, DOI 10.1145/1168919.1168877
   Grimm R, 2004, ACM T COMPUT SYST, V22, P421, DOI 10.1145/1035582.1035584
   Grimm R, 2006, ACM SIGPLAN NOTICES, V41, P38, DOI 10.1145/1133981.1133987
   Gurevich Y, 2007, LECT NOTES COMPUT SC, V4797, P153, DOI 10.1007/978-3-540-75987-4_11
   Hirzel M, 2013, IBM J RES DEV, V57, DOI 10.1147/JRD.2013.2243535
   Hirzel M, 2007, ACM SIGPLAN NOTICES, V42, P19, DOI 10.1145/1297105.1297030
   Hirzel M, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2528412
   Hirzel Martin., 2012, Proceedings of the 6th ACM International Conference on Distributed Event-Based Systems, DEBS'12, P191, DOI 10.1145/2335484.2335506
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Hormati AH, 2009, INT CONFER PARA, P214, DOI 10.1109/PACT.2009.39
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Isard M., 2007, Operating Systems Review, V41, P59, DOI 10.1145/1272998.1273005
   Khandekar R, 2009, LECT NOTES COMPUT SC, V5896, P308, DOI 10.1007/978-3-642-10445-9_16
   Labonte F, 2004, 13TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURE AND COMPILATION TECHNIQUES, PROCEEDINGS, P267, DOI 10.1109/PACT.2004.1342560
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   LEE EA, 1987, P IEEE, V75, P1235, DOI 10.1109/PROC.1987.13876
   Miranda C, 2010, PROCEEDINGS OF THE 2010 INTERNATIONAL CONFERENCE ON COMPILERS, ARCHITECTURES AND SYNTHESIS FOR EMBEDDED SYSTEMS (CASES '10), P11, DOI 10.1145/1878921.1878924
   Mogul JC, 1997, ACM T COMPUT SYST, V15, P217, DOI 10.1145/263326.263335
   Murray DG, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P439, DOI 10.1145/2517349.2522738
   Nathan S, 2013, USING INFOSPHERE STR
   Nystrom N, 2003, LECT NOTES COMPUT SC, V2622, P138
   Olston C., 2008, Proceedings of the 2008 ACM SIGMOD International Conference on Manage- ment of Data, P1099
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Pietzuch P., 2006, 22 INT C DAT ENG ICD, P49, DOI [10.1109/ICDE.2006, 10.1109/ICDE.2006.105, DOI 10.1109/ICDE.2006.105]
   Soule R., 2013, P 7 ACM INT C DISTR, P159
   Soule R, 2010, NYUCSTR2010924
   Soulé R, 2010, LECT NOTES COMPUT SC, V6012, P507, DOI 10.1007/978-3-642-11957-6_27
   Soule Robert, 2012, C DISTR EV BAS SYST, P20
   Stephens R, 1997, ACTA INFORM, V34, P491, DOI 10.1007/s002360050095
   Tang Y, 2012, IEEE T PARALL DISTR, V10, P2344
   Terry D, 1992, Proceedings of the 1992 ACM SIGMOD International Conference on Management of Data, V21, P321
   Thies W, 2002, LECT NOTES COMPUT SC, V2304, P179
   Thies W, 2001, MITLCSTM622
   Wolf J, 2008, LECT NOTES COMPUT SC, V5346, P306, DOI 10.1007/978-3-540-89856-6_16
   Wu E., 2006, P ASS COMP MACH ACM, P407
   Xu ZH, 2013, I S WORKL CHAR PROC, P87, DOI 10.1109/IISWC.2013.6704673
   Xu ZH, 2013, IEEE INT CONF AUTOM, P103, DOI 10.1109/ASE.2013.6693071
   Yu Y., 2008, OSDI, V8, P1
   Zaharia M, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P423, DOI 10.1145/2517349.2522737
   Zhang David, 2008, Computer Architecture News, V36, P18, DOI 10.1145/1399972.1399978
   Zou Q, 2010, PROC VLDB ENDOW, V3, P1394, DOI 10.14778/1920841.1921012
NR 67
TC 5
Z9 5
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2016
VL 46
IS 7
BP 891
EP 929
DI 10.1002/spe.2338
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN7OL
UT WOS:000377266200002
DA 2024-07-18
ER

PT J
AU Cardoso, JMP
   Coutinho, JGF
   Carvalho, T
   Diniz, PC
   Petrov, Z
   Luk, W
   Gonçalves, F
AF Cardoso, Joao M. P.
   Coutinho, Jose G. F.
   Carvalho, Tiago
   Diniz, Pedro C.
   Petrov, Zlatko
   Luk, Wayne
   Goncalves, Fernando
TI Performance-driven instrumentation and mapping strategies using the LARA
   aspect-oriented programming approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE aspect-oriented programming; compilers; hardware; software systems;
   embedded systems; domain-specific languages; monitoring; instrumenting
   and profiling
ID LANGUAGE
AB The development of applications for high-performance embedded systems is a long and error-prone process because in addition to the required functionality, developers must consider various and often conflicting nonfunctional requirements such as performance and/or energy efficiency. The complexity of this process is further exacerbated by the multitude of target architectures and mapping tools. This article describes LARA, an aspect-oriented programming language that allows programmers to convey domain-specific knowledge and nonfunctional requirements to a toolchain composed of source-to-source transformers, compiler optimizers, and mapping/synthesis tools. LARA is sufficiently flexible to target different tools and host languages while also allowing the specification of compilation strategies to enable efficient generation of software code and hardware cores (using hardware description languages) for hybrid target architectures - a unique feature to the best of our knowledge not found in any other aspect-oriented programming language. A key feature of LARA is its ability to deal with different models of join points, actions, and attributes. In this article, we describe the LARA approach and evaluate its impact on code instrumentation and analysis and on selecting critical code sections to be migrated to hardware accelerators for two embedded applications from industry. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Cardoso, Joao M. P.; Carvalho, Tiago] Univ Porto, Dept Informat Engn, Fac Engn FEUP, P-4200465 Oporto, Portugal.
   [Coutinho, Jose G. F.; Luk, Wayne] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2BZ, England.
   [Diniz, Pedro C.] Univ So Calif, Inst Informat Sci, Los Angeles, CA 90089 USA.
   [Petrov, Zlatko] Honeywell Int Sro, Brno 62700, Czech Republic.
   [Goncalves, Fernando] Coreworks SA, P-1000029 Lisbon, Portugal.
C3 Universidade do Porto; Imperial College London; University of Southern
   California; Honeywell
RP Cardoso, JMP (corresponding author), Univ Porto, Dept Informat Engn, Fac Engn FEUP, Rua Dr Roberto Frias S-N, P-4200465 Oporto, Portugal.
EM jmpc@acm.org
RI Cardoso, Joao MP/C-5552-2008; Diniz, Pedro/ABC-5599-2020; Diniz,
   Pedro/HMO-7655-2023; Goncalves, Fernando/L-9991-2015
OI Cardoso, Joao MP/0000-0002-7353-1799; Carvalho,
   Tiago/0000-0002-5826-7643; Diniz, Pedro/0000-0003-3131-9367; Goncalves,
   Fernando/0000-0002-0559-1888
FU European Community's Framework Program 7 (FP7) [248976]; Portuguese
   Science Foundation (FCT) [SFRH/BD/90507/2012]; UK EPSRC; FP7 projects
   [257906, 287804, 318521]; Fundação para a Ciência e a Tecnologia
   [SFRH/BD/90507/2012] Funding Source: FCT
FX This work was partially supported by the European Community's Framework
   Program 7 (FP7) under contract no. 248976. Any opinions, findings, and
   conclusions or recommendations expressed in this material are those of
   the author(s) and do not necessarily reflect the views of the European
   Community. The authors are grateful to the members of the REFLECT
   project for their support. T. Carvalho also acknowledges the Portuguese
   Science Foundation (FCT) support through PhD grant SFRH/BD/90507/2012.
   J. G. F. Coutinho and W. Luk acknowledge the partial support by the UK
   EPSRC and by FP7 projects nos. 257906, 287804, and 318521.
CR Adams B, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P243
   Alves V, 2006, ASP OR PROD LIN ENG
   Alves V, 2007, LECT NOTES COMPUT SC, V4640, P117
   [Anonymous], SER MORGAN KAUFMANN
   [Anonymous], 2011, JAVASCRIPT DEFINITIV
   Asher YB, 2013, ACM T EMBED COMPUT S, V12, P21
   Bispo J, 2013, IEEE INTL CONF IND I, P602, DOI 10.1109/INDIN.2013.6622952
   Cardoso J.M.P., 2010, DOM SPEC ASP LANG WO
   Cardoso JMP, 2012, LARA PROGRAMMING LAN
   Cardoso JMP, 2006, SPLAT 2006 SOFTWARE
   Cardoso JMP, P 11 ANN INT C ASP O, P179
   Cardoso JMP, 2013, MICROPROCESS MICROSY, V37, P1073, DOI 10.1016/j.micpro.2013.06.001
   Cardoso JMP, 2012, ANN IEEE SYM FIELD P, P192, DOI 10.1109/FCCM.2012.41
   Cardoso JMP, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1749603.1749604
   Cardoso Joao M. P., 2013, Compilation and Synthesis for Embedded Reconfigurable Systems: An Aspect-Oriented Approach
   Christen M., 2011, Proceedings of the 25th IEEE International Parallel & Distributed Processing Symposium (IPDPS 2011), P676, DOI 10.1109/IPDPS.2011.70
   deSousa J. T., 2012, US Patent, Patent No. [8,276,120, 8276120]
   Ecma International, 2011, ECMA262, V5.1
   Eichberg M, 2004, LECT NOTES COMPUT SC, V3302, P366
   Ferrer R, 2011, LECT NOTES COMPUT SC, V6548, P215, DOI 10.1007/978-3-642-19595-2_15
   Figueiredo E, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P183
   Firman R.E., 2004, Aspect Oriented Software Development, P21
   Gradecki J.D., 2003, MASTERING ASPECTJ AS
   Guthaus MR, 2001, WWC-4: IEEE INTERNATIONAL WORKSHOP ON WORKLOAD CHARACTERIZATION, P3, DOI 10.1109/WWC.2001.990739
   Hall M, 2010, LECT NOTES COMPUT SC, V5898, P50, DOI 10.1007/978-3-642-13374-9_4
   Harbulot Bruno., 2006, AOSD 06, P63, DOI DOI 10.1145/1119655.1119666
   Holewinski J, 2012, ACM SIGPLAN NOTICES, V47, P371, DOI 10.1145/2345156.2254108
   Jackson A, 2004, LECT NOTES COMPUT SC, V3286, P115
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G, 2003, AFRLIFRSTR2003173 PA
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Lafferty D., 2003, Proceedings of the 18th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA '03), P1
   Lazarescu M. T., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P126, DOI 10.1109/SCAM.2012.15
   Liu Q, 2009, I C FIELD PROG LOGIC, P308, DOI 10.1109/FPL.2009.5272283
   Lohmann D, 2007, 6 INT C ASP OR SOFTW
   Lopes C.V., 1997, THESIS
   Luk W, 2009, IEEE INT SOC CONF, P9, DOI 10.1109/SOCCON.2009.5398108
   Masuhara H, P 12 INT C COMP CONS, P46
   Myers CG, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P231
   Ohashi A, 2012, P WORKSH MOD SYST SO, P39
   Poggi M, 2009, THESIS
   Rajan H., 2003, Software Engineering Notes, V28, P297, DOI 10.1145/949952.940111
   Rajan Hridesh., 2005, Proceedings of the 4th international conference on Aspectoriented software development, P181, DOI [10.1145/1052898.1052914, DOI 10.1145/1052898.1052914]
   Spinczyk O., 2002, Proceedings of the Fortieth International Conference on Tools Pacific: Objects for Internet, Mobile and Embedded Applications (CRPIT '02), P53
   Toheed Aslam AntonDubrau., 2010, AOSD 10 P 9 INT C AS, P181
   Wand M, 2004, ACM T PROGR LANG SYS, V26, P890, DOI 10.1145/1018203.1018208
   Yi Q, 2012, SOFTWARE PRACT EXPER, V42, P675, DOI 10.1002/spe.1089
NR 47
TC 17
Z9 18
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2016
VL 46
IS 2
BP 251
EP 287
DI 10.1002/spe.2301
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA6HP
UT WOS:000367904000005
DA 2024-07-18
ER

PT J
AU Paredes-Valverde, MA
   Alor-Hernández, G
   Rodríguez-González, A
   Valencia-García, R
   Jiménez-Domingo, E
AF Andres Paredes-Valverde, Mario
   Alor-Hernandez, Giner
   Rodriguez-Gonzalez, Alejandro
   Valencia-Garcia, Rafael
   Jimenez-Domingo, Enrique
TI A systematic review of tools, languages, and methodologies for mashup
   development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mashup language; mashup tool; software development methodology
ID INTEGRATION; ENTERPRISE; SERVICES
AB Web 2.0 has become a powerful means of transmitting information in a number of fields, such as communication, e-commerce, and entertainment. Nowadays, companies and organizations transmit specific information through different mechanisms, such as Web feeds and Web services. These data sources enable third parties to incorporate data from service providers into their own applications. On the basis of this understanding, mashups have emerged as a new approach to develop applications and which combine data and resources from heterogeneous sourcessuch as internal data sources, Web feeds, screen scraping, and Web serviceswith the aim of solving specific needs. Mashup development involves activities such as accessing heterogeneous sources, combining data from different data sources, and building graphical interfaces. These activities restrict the development of these kinds of applications only to experienced computer users. Today, a number of tools and programming languages are used to help carry out some of the aforementioned activities. These tools and programming languages have features enabling the integration of different technologies in order to solve problems such as data management from different data sources and content publication. If this is taken into account, there is a growing need to learn about the features, advantages, and disadvantages of these tools and programming languages in order to select the tool or language that best fits a specific need and a specific level of knowledge and experience in terms of software development. This paper presents a systematic review and analysis of the tools, programming languages, and software development methodologies involved in mashup development in order to learn more about the features and services provided by mashups. Furthermore, this research also explains the qualitative and quantitative evaluation used for the mashup development tools. The evaluation was performed in order to measure not only the usability of these tools but also the support that they provide for standardized features of Web development that they provide. Finally, new trends in the development of mashups are discussed. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Andres Paredes-Valverde, Mario; Alor-Hernandez, Giner] Inst Tecnol Orizaba, Veracruz, Mexico.
   [Rodriguez-Gonzalez, Alejandro] Ctr Plant Biotechnol & Genom UPM INIA, Malaga, Spain.
   [Valencia-Garcia, Rafael] Univ Murcia, Dept Informat & Syst, E-30001 Murcia, Spain.
   [Jimenez-Domingo, Enrique] Univ Carlos III Madrid, E-28903 Getafe, Spain.
C3 Universidad Politecnica de Madrid; Centro de Investigacion en
   Biotecnologia Genomica de Plantas (CBGP); University of Murcia;
   Universidad Carlos III de Madrid
RP Alor-Hernández, G (corresponding author), Inst Tecnol Orizaba, Veracruz, Mexico.
EM galor@itorizaba.edu.mx
RI Valencia-García, Rafael/I-7610-2019; Valencia-Garci­a,
   Rafael/L-4759-2014; González, Alejandro Rodríguez/AAT-2369-2020;
   Alor-Hernandez, Giner/U-9203-2017
OI Paredes-Valverde, Mario Andres/0000-0001-9508-9818; Alor-Hernandez,
   Giner/0000-0003-3296-0981
FU General Council of Superior Technological Education of Mexico (DGEST);
   National Council of Science and Technology (CONACYT); Department of
   Education (SEP) through PROMEP; Ministry of Industry, Energy and Tourism
   through project OPEN-IDEA [TSI-020603-2012-219]; Spanish Ministry of
   Economy and Competitiveness; European Commission (FEDER / ERDF) through
   project SeCloud [TIN2010-18650]
FX Our work is supported by the General Council of Superior Technological
   Education of Mexico (DGEST). This paper was also sponsored by the
   National Council of Science and Technology (CONACYT) and the Department
   of Education (SEP) through PROMEP. Also, this work has been supported by
   the Ministry of Industry, Energy and Tourism through project OPEN-IDEA
   (TSI-020603-2012-219) and by the Spanish Ministry of Economy and
   Competitiveness and the European Commission (FEDER / ERDF) through
   project SeCloud (TIN2010-18650).
CR Altinel M., 2007, En Proceedings of the 33rd international conference on Very large data bases, P1370
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], END USER MASHUP PROG
   [Anonymous], DERI PIPES VISUAL TO
   [Anonymous], 2009, P INT WORKSH KNOWL S
   [Anonymous], SIWN INT C AD BUS SY
   [Anonymous], 2009, P 14 INT C INT US IN
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], SMART INTERNET
   [Anonymous], P VLDB ENDOWMENT
   [Anonymous], P 2 WORKSH MASH ENT
   [Anonymous], 2001, SOFTW ENG PROD QUA 1
   [Anonymous], 18 INT WORLD WID WEB
   [Anonymous], 2000, Dissertation
   [Anonymous], 2010, P 14 INT AC MINDTR C
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Bizer C, 2011, SEMANTIC SERVICES, INTEROPERABILITY AND WEB APPLICATIONS: EMERGING CONCEPTS, P205, DOI 10.4018/978-1-60960-593-3.ch008
   Booth D., 2004, WEB SERVICES ARCHITE
   Chatti MA, 2011, INT J TECHNOL ENHANC, V3, P21, DOI 10.1504/IJTEL.2011.039062
   Cheung KH, 2008, J BIOMED INFORM, V41, P694, DOI 10.1016/j.jbi.2008.04.001
   Daniel F, 2007, IEEE INTERNET COMPUT, V11, P59, DOI 10.1109/MIC.2007.74
   Di Lorenzo G, 2009, SIGMOD REC, V38, P59, DOI 10.1145/1558334.1558343
   Galitz W. O., 2007, The essential guide to user interface design: An introduction to gui design principles and techniques, V3rd ed.
   Ginzburg J, 2009, J WEB ENG, V8, P25
   Huang Angus F. M., 2008, 2008 IEEE International Symposium on Service-Oriented System Engineering, P62, DOI 10.1109/SOSE.2008.56
   Ikeda S., 2008, International Conference on Information Integration and Web-based Applications and Services, P33
   Jarrar M, 2010, IEEE INTERNET COMPUT, V14, P58, DOI 10.1109/MIC.2010.75
   Jung H, 2011, J INF SCI ENG, V27, P761
   Ketter Wolfgang, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P293, DOI 10.1109/CEC.2009.40
   Kitchenham B., 1996, DESMET: A method for evaluating Software Engineering methods and tools
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   López J, 2009, LECT NOTES COMPUT SC, V5648, P30, DOI 10.1007/978-3-642-02818-2_3
   Maraikar Z, 2008, LECT NOTES COMPUT SC, V5364, P70, DOI 10.1007/978-3-540-89652-4_9
   Maximilien EM, 2007, LECT NOTES COMPUT SC, V4749, P13
   Minhas S. S., 2012, 2012 IEEE International Conference on Services Computing (SCC), P431, DOI 10.1109/SCC.2012.19
   Ngu AHH, 2010, IEEE T SERV COMPUT, V3, P2, DOI 10.1109/TSC.2010.8
   Patel Ahmed, 2010, Journal of Computer Sciences, V6, P1406, DOI 10.3844/jcssp.2010.1406.1415
   Pietschmann S, 2009, LECT NOTES COMPUT SC, V5648, P473, DOI 10.1007/978-3-642-02818-2_41
   Qi Zhao, 2008, 2008 IEEE International Symposium on Service-Oriented System Engineering, P32, DOI 10.1109/SOSE.2008.9
   Riabov A., 2008, Proceeding of the 17th international con- ference on World Wide Web, P775
   Rosenberg F, 2008, IEEE INTERNET COMPUT, V12, P24, DOI 10.1109/MIC.2008.98
   Sabbouh M., 2007, International World Wide Web Conference, P1305
   Schilling MA, 2000, ACAD MANAGE REV, V25, P312, DOI 10.2307/259016
   Seung-Jun Cha, 2010, 2010 IEEE/ACIS 9th International Conference on Computer and Information Science (ICIS 2010), P912, DOI 10.1109/ICIS.2010.112
   Sutcliffe AG, 1998, IEEE T SOFTWARE ENG, V24, P1072, DOI 10.1109/32.738340
   Tuchinda Rattapoom, 2008, 13th International Conference on Intelligent User Interfaces. IUI 2008, P139, DOI 10.1145/1378773.1378792
   Wong J, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1435
   Wu D, 2007, IEEE COMP SOC ANN, P325, DOI 10.1109/ISVLSI.2007.45
   Yu J, 2008, IEEE INTERNET COMPUT, V12, P44, DOI 10.1109/MIC.2008.114
   Zahoor E, 2009, L N INST COMP SCI SO, V10, P632
   Zhao HB, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P189, DOI 10.1109/ICWS.2009.111
NR 51
TC 13
Z9 15
U1 1
U2 29
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2015
VL 45
IS 3
BP 365
EP 397
DI 10.1002/spe.2233
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AZ7XW
UT WOS:000348429500004
DA 2024-07-18
ER

PT J
AU Dastjerdi, AV
   Garg, SK
   Rana, OF
   Buyya, R
AF Dastjerdi, Amir Vahid
   Garg, Saurabh Kumar
   Rana, Omer F.
   Buyya, Rajkumar
TI CloudPick: a framework for QoS-aware and ontology-based service
   deployment across clouds
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; cloud service composition; quality of service;
   multi-clouds
AB The cloud computing paradigm allows on-demand access to computing and storage services over the Internet. Multiple providers are offering a variety of software solutions in the form of virtual appliances and computing units in the form of virtual machines with different pricing and QoS in the market. Thus, it is important to exploit the benefit of hosting virtual appliances on multiple providers to not only reduce the cost and provide better QoS but also achieve failure-resistant deployment. This paper presents a framework called CloudPick to simplify cross-cloud deployment and particularly focuses on QoS modeling and deployment optimization. For QoS modeling, cloud services have been automatically enriched with semantic descriptions using our translator component to increase precision and recall in discovery and benefit from descriptive QoS from multiple domains. In addition, an optimization approach for deploying networks of appliances is required to guarantee minimum cost, low latency, and high reliability. We propose and compare two different deployment optimization approaches: genetic-based and forward-checking-based backtracking. They take into account QoS criteria such as reliability, data communication cost, and latency between multiple clouds to select the most appropriate combination of virtual machines and appliances. We evaluate our approach using a real case study and different request types. Experimental results suggest that both algorithms reach near-optimal solution. Further, we investigate the effects of factors such as latency, reliability requirements, and data communication between appliances on the performance of the algorithms and placement of appliances across multiple clouds. The results show the efficiency of optimization algorithms depends on the data transfer rate between appliances. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Dastjerdi, Amir Vahid; Buyya, Rajkumar] Univ Melbourne, Cloud Comp & Distributed Syst CLOUDS Lab, Dept Comp & Informat Syst, Parkville, Vic 3052, Australia.
   [Garg, Saurabh Kumar] Univ Tasmania, Fac Engn & ICT, Dept Comp & Informat Syst, Hobart, Tas 7005, Australia.
   [Rana, Omer F.] Cardiff Univ, Sch Comp Sci, Cardiff, S Glam, Wales.
C3 University of Melbourne; University of Tasmania; Cardiff University
RP Dastjerdi, AV (corresponding author), Univ Melbourne, Cloud Comp & Distributed Syst CLOUDS Lab, Dept Comp & Informat Syst, Parkville, Vic 3052, Australia.
EM amir.vahid@unimelb.edu.au
RI Garg, Saurabh/J-7802-2014; Rana, Omer/AAP-8523-2020; Buyya,
   Rajkumar/C-3424-2009
OI Rana, Omer/0000-0003-3597-2646; Garg, Saurabh Kumar/0000-0001-8719-284X
CR [Anonymous], 2002, P 15 BLED EL COMM C
   [Anonymous], 2000, THESIS
   Arlitt M, 2000, IEEE NETWORK, V14, P30, DOI 10.1109/65.844498
   Carlini E, 2012, LECT NOTES COMPUT SC, V7155, P159, DOI 10.1007/978-3-642-29737-3_19
   Cecchet E, 2002, ACM SIGPLAN NOTICES, V37, P246, DOI 10.1145/583854.582443
   Chieu Trieu C., 2010, 2010 IEEE International Conference on Service Operations and Logistics and Informatics (SOLI 2010), P282, DOI 10.1109/SOLI.2010.5551565
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Coello Coello C., 1999, KNOWL INF SYST, V1, P269, DOI DOI 10.1007/BF03325101
   Dastjerdi A. V., 2012, Proceedings of the 2012 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2012), P284, DOI 10.1109/CCGrid.2012.101
   Dastjerdi A. V., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P415, DOI 10.1109/CloudCom.2011.62
   Dastjerdi Amir Vahid, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P104, DOI 10.1109/CCGRID.2010.87
   Dastjerdi AV, 2012, SOFTWARE PRACT EXPER, V42, P501, DOI 10.1002/spe.1104
   DE BRUIJN J, 2006, P 3 EUROPEAN C SEM
   Di Martino B, 2011, LECT NOTES COMPUT SC, V6586, P571, DOI 10.1007/978-3-642-21878-1_70
   Ersoz D., 2007, PROC IEEE INT C DIST, P59
   Fensel D, 2011, SEMANTIC WEB SERVICES, P107, DOI 10.1007/978-3-642-19193-0_7
   Fielding R. T, 2002, ACM Transactions on Internet Technology (TOIT), V2, P115, DOI [DOI 10.1145/514183.514185, 10.1145/514183.514185]
   Foster I., 2008, GRID COMPUTING ENV W, P1
   García JM, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P384, DOI 10.1109/SERVICES-1.2008.81
   Guha T, 2008, PROC INT C TOOLS ART, P172, DOI 10.1109/ICTAI.2008.16
   HALLER A, 2005, P IEEE INT C WEB SE, V32, P1
   Jaeger MC, 2006, LECT NOTES COMPUT SC, V3811, P84
   Keahey Katarzyna, 2008, 2008 IEEE Fourth International Conference on eScience, P301, DOI 10.1109/eScience.2008.82
   KELLER U, 2004, WSMO DISCOVERY ENGI
   Kiran M., 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P449, DOI 10.1109/DASC.2011.89
   Konstantinou AV, 2009, THIRD INTERNATIONAL WORKSHOP ON VIRTUALIZATION TECHNOLOGIES IN DISTRIBUTED COMPUTING (VTDC-09), P9
   KOPECKY J, 2005, WSMO WORKING DRAFT
   LAMBERT D, 2010, 1 INT FUTURE ENTER
   Ludwig S. A., 2007, HPCS 07, P13, DOI DOI 10.1109/HPCS.2007.28
   MEFFERT K, 2008, JGAP JAVA GENET ALG
   Menzel M., 2012, Proceedings of the 21st international conference on World Wide Web, New York, P979
   METSCH T, 2010, OPEN CLOUD COMP INTE
   MICHALEWICZ Z, 1996, GENET ALGORITHM DAT
   Narasimhan B, 2011, COMPUTER, V44, P24, DOI 10.1109/MC.2011.66
   Rao JH, 2005, LECT NOTES COMPUT SC, V3387, P43
   Sapuntzakis C, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE SEVENTEENTH LARGE INSTALLATION SYSTEMS ADMINISTRATION CONFERENCE, P181
   Sun CH, 2008, P IEEE I C SERV COMP, P265, DOI 10.1109/SCC.2008.53
   Tran VX, 2009, SIMUL MODEL PRACT TH, V17, P1378, DOI 10.1016/j.simpat.2009.06.010
   VALDES M, 2004, BONITA WORKFLOW COP
   VARIA J, CLOUD COMP PRINCIPL, P459
   Wang X, 2004, PROGRESS OF MACHINING TECHNOLOGY, P376
   Wang XY, 2008, CLUSTER COMPUT, V11, P229, DOI 10.1007/s10586-008-0053-z
   [No title captured]
NR 43
TC 25
Z9 25
U1 0
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2015
VL 45
IS 2
BP 197
EP 231
DI 10.1002/spe.2288
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY4FJ
UT WOS:000347533400004
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Rama, GM
   Kak, A
AF Rama, Girish Maskeri
   Kak, Avinash
TI Some structural measures of API usability
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE application programming interface; API usability; metrics
ID METRICS; QUALITY
AB In this age of collaborative software development, the importance of usable APIs is well recognized. There already exists a rich body of literature that addresses issues ranging from how to design usable APIs to assessing qualitatively the usability of a given API. However, there does not yet exist a set of general-purpose metrics that can be pressed into service for a more quantitative assessment of API usability. The goal of this paper is to remedy this shortcoming in the literature. Our work presents a set of formulas that examine the API method declarations from the perspective of several commonly held beliefs regarding what makes APIs difficult to use. We validate the numerical characterizations of API usability as produced by our metrics through the APIs of several software systems. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Rama, Girish Maskeri] Infosys Ltd, Elect City, Bangalore, Karnataka, India.
   [Kak, Avinash] Purdue Univ, W Lafayette, IN 47907 USA.
C3 Infosys Limited; Purdue University System; Purdue University
RP Rama, GM (corresponding author), Infosys Ltd, Elect City, Bangalore, Karnataka, India.
EM girish_rama@infosys.com
CR Abrams B, 2005, SHOULD YOU CHANGE RE
   [Anonymous], 2007, EVOLVING JAVA BASED
   [Anonymous], 2002, EXPT QUASIEXPERIMENT
   [Anonymous], 2012, MULTITHREADING JAVA
   [Anonymous], 2008, Practical API design: Confessions of a Java framework architect
   Apache Commons Bug Database, 2007, FASTDATEFORMAT THREA
   Barham C, 2009, LIFERAY BUG IPS 2908
   Beaton J, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P193, DOI 10.1109/VLHCC.2008.4639084
   Blanchette J., 2008, LITTLE MANUAL API DE
   Bloch J., 2006, 21 ACM SIGPLAN S OBJ, P506, DOI DOI 10.1145/1176617.1176622
   BLOCH J, 2001, JAVA SERIES
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Clarke S, 2004, DR DOBBS J, V29, pS6
   Conway M., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P486, DOI 10.1145/332040.332481
   Cowan N, 2001, BEHAV BRAIN SCI, V24, P87, DOI 10.1017/S0140525X01003922
   Cwalina K, 2005, GEN API DESIGN
   Cwalina K., 2005, Framework design guidelines: Conventions, idioms, and patterns for reusable
   Daughtry J, 2012, API US WEBS
   de Souza CRB, 2009, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE-COMPANION.2009.5071006
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Doucette A., 2008, CMPT816 SOFTW ENG SA
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   Fleiter S, 2008, SPRING FRAMEWORK THR
   Fowler M, 2012, TOO MANY PARAMETERS
   Goetz B, 2006, JAVA CONCURRENCY PRA
   Goetz B., 2002, IBM DEVELOPERWORKS
   Henning M., 2007, ACM Queue, V5, P25, DOI 10.1145/1255421.1255422
   Hou D, 2011, CONF PROC INT SYMP C, P91, DOI 10.1109/ICPC.2011.21
   Kak A. C., 2003, PROGRAMMING OBJECTS
   Kak Avinash C, 2008, SCRIPTING OBJECTS CO
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Luehe J, 2008, CHANGES SERVLET FILT
   McLellan SG, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.676963
   Osdircom Mailing List Archive, 2012, CONF AP
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Rupakheti Chandan R., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P241
   Sarkar S, 2008, IEEE T SOFTWARE ENG, V34, P700, DOI 10.1109/TSE.2008.43
   Sarkar S, 2007, IEEE T SOFTWARE ENG, V33, P14, DOI 10.1109/TSE.2007.256942
   Stack Overflow Mailing List, 2008, MAN PAR AR TOO MANY
   Stylos J, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P50, DOI 10.1109/VLHCC.2007.44
   Stylos J, 2007, PROC INT CONF SOFTW, P529
   Sun Developer Network Bug Database, 1999, FORM CLASS AR NOT TH
   Sun Java Forum, 2010, DOCUMENTLISTENER THR
   Sun Microsystems, 2008, LEARN JAV LANG OV ME
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
NR 50
TC 19
Z9 21
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2015
VL 45
IS 1
BP 75
EP 110
DI 10.1002/spe.2215
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY4FC
UT WOS:000347532700004
DA 2024-07-18
ER

PT J
AU Allevato, A
   Edwards, SH
AF Allevato, Anthony
   Edwards, Stephen H.
TI Dereferee: instrumenting C plus plus pointers with meaningful runtime
   diagnostics
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C plus; memory management; pointers; debugging; testing
AB Proper memory management and pointer usage often prove to be the most difficult concepts for students learning C++ to grasp. Compounding this problem is the fact that the compilers and runtime environments traditionally used to introduce these concepts leave much to be desired with regard to generating meaningful diagnostics to assist students in tracking down and fixing memory-related logical errors. To alleviate this, we have developed Dereferee, an advanced yet thin wrapper around C++ pointers that greatly increases the quality of these runtime diagnostics, but with only a small amount of intrusion into the development process. With regard to performance, memory-intensive programs will experience execution times approximately 20-30 times slower when using Dereferee, which is comparable with other similar tools. Furthermore, the library has been designed to be customizable and easily disabled to transition codes from development to production. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Allevato, Anthony; Edwards, Stephen H.] Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.
C3 Virginia Polytechnic Institute & State University
RP Allevato, A (corresponding author), Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.
EM allevato@vt.edu
FU National Science Foundation [DUE-0618663]
FX We also gratefully acknowledge the support provided by our sponsors.
   This work is supported in part by the National Science Foundation under
   Grant No. DUE-0618663. Any opinions, findings, conclusions, or
   recommendations expressed in this material are those of the authors and
   do not necessarily reflect the views of the National Science Foundation.
CR Ahmadzadeh M., 2005, SIGCSE Bulletin, V37, P84, DOI 10.1145/1151954.1067472
   Allevato A, 2009, P 40 ANN SIGCSE TECH
   *ANSI ISO IEC, 1998, 148821998 ANSIISOIEC
   ANSI-ISO-IEC, 2011, 148822011 ANSIISOIEC
   Gugerty L., 1986, P CHI 1986 BOST MASS, P171, DOI DOI 10.1145/22627.22367
   HASTINGS R, 1991, PROCEEDINGS OF THE WINTER 1992 USENIX CONFERENCE, P125
   Necula GC, 2002, ACM SIGPLAN NOTICES, V37, P128, DOI 10.1145/565816.503286
   Nethercote N, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P65
   Oiwa Y, 2009, ACM SIGPLAN NOTICES, V44, P259, DOI 10.1145/1543135.1542505
   Pike SM, 2000, SIGCSE BULL, V32, P352, DOI 10.1145/331795.331884
   Simpson MS, 2013, SOFTWARE PRACT EXPER, V43, P93, DOI 10.1002/spe.2105
   Younan Yves., 2010, P 5 ACM S INFORM COM, P145
NR 12
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2014
VL 44
IS 8
BP 973
EP 997
DI 10.1002/spe.2184
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AL9RW
UT WOS:000339479400006
DA 2024-07-18
ER

PT J
AU Wang, Y
   Jia, ZP
   Chen, RH
   Wang, M
   Liu, D
   Shao, ZL
AF Wang, Yi
   Jia, Zhiping
   Chen, Renhai
   Wang, Meng
   Liu, Duo
   Shao, Zili
TI Loop scheduling with memory access reduction subject to register
   constraints for DSP applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE DSP applications; loop optimization; memory optimization; instruction
   scheduling
ID PERFORMANCE OPTIMIZATION; METHODOLOGIES; ARCHITECTURES; GENERATION;
   ALLOCATION; DESIGN
AB Memory accesses introduce big-time overhead and power consumption because of the performance gap between processors and main memory. This paper describes and evaluates a technique, loop scheduling with memory access reduction (LSMAR), that replaces hidden redundant load operations with register operations in loop kernels and performs partial scheduling for newly generated register operations subject to register constraints. By exploiting data dependence of memory access operations, the LSMAR technique can effectively reduce the number of memory accesses of loop kernels, thereby improving timing performance. The technique has been implemented into the Trimaran compiler and evaluated using a set of benchmarks from DSPstone and MiBench on the cycle-accurate simulator of the Trimaran infrastructure. The experimental results show that when the LSMAR technique is applied, the number of memory accesses can be reduced by 18.47% on average over the benchmarks when it is not applied. The measurements also indicate that the optimizations only lead to an average 1.41% increase in code size. With such small code size expansion, the technique is more suitable for embedded systems compared with prior work. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Wang, Yi; Chen, Renhai; Wang, Meng; Liu, Duo; Shao, Zili] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
   [Jia, Zhiping] Shandong Univ, Sch Comp Sci & Technol, Jinan 250100, Peoples R China.
C3 Hong Kong Polytechnic University; Shandong University
RP Shao, ZL (corresponding author), Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
EM cszlshao@comp.polyu.edu.hk
RI Shao, Zili/AAX-3339-2020
OI Shao, Zili/0000-0002-2173-2847
FU Innovation and Technology Support Programme of Innovation and Technology
   Fund of the Hong Kong Special Administrative Region, China [ITS/082/10];
   Germany/Hong Kong Joint Research Scheme - Research Grants Council of
   Hong Kong; Germany Academic Exchange Service of Germany [G_HK021/12];
   National Natural Science Foundation of China [61272103]; Hong Kong
   Polytechnic University [4-ZZD7, G-YK24, G-YM10]
FX The work described in this paper is partially supported by grants from
   the Innovation and Technology Support Programme of Innovation and
   Technology Fund of the Hong Kong Special Administrative Region, China
   (ITS/082/10), the Germany/Hong Kong Joint Research Scheme sponsored by
   the Research Grants Council of Hong Kong and the Germany Academic
   Exchange Service of Germany (reference no. G_HK021/12), the National
   Natural Science Foundation of China (project 61272103), and the Hong
   Kong Polytechnic University (4-ZZD7, G-YK24, and G-YM10).
CR ACHTEREN T, 2002, P 5 ACM IEEE DES TES, P428
   [Anonymous], P WORKSH SOFTW COMP
   [Anonymous], 2001, OPTIMIZING COMPILERS
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Balasa F, 2008, J SIGNAL PROCESS SYS, V53, P51, DOI 10.1007/s11265-008-0244-0
   Balasa F, 2006, IEEE INT CONF ASAP, P205, DOI 10.1109/ASAP.2006.42
   Bonelli A, 2006, LECT NOTES COMPUT SC, V4330, P818
   CALLAHAN D, 1990, SIGPLAN NOTICES, V25, P53, DOI 10.1145/93548.93553
   CHANG PP, 1991, ACM COMP AR, V19, P266, DOI 10.1145/115953.115979
   Chen F, 1998, 1998 IEEE WORKSHOP ON SIGNAL PROCESSING SYSTEMS-SIPS 98, P579, DOI 10.1109/SIPS.1998.715820
   Davidson J. W., 1995, Proceedings of the 28th Annual International Symposium on Microarchitecture (Cat. No.95TB100012), P125, DOI 10.1109/MICRO.1995.476820
   Ding Y., 2004, P 2004 ANN IEEEACM I, P279
   FEAUTRIER P, 1995, MICROPROC MICROPROG, V41, P425, DOI 10.1016/0165-6074(95)00025-J
   Franchetti F., 2006, Proceedings of the ACM/IEEE SC2006 Conference on High Performance Networking and Computing, November 11-17, 2006, Tampa, FL, USA, P115, DOI DOI 10.1145/1188455.1188575
   GAO GR, 1986, J PARALLEL DISTR COM, V3, P215, DOI 10.1016/0743-7315(86)90005-5
   Govindarajan R., 1994, Proceedings of the 27th Annual International Symposium on Microarchitecture. MICRO 27, P85
   Guthaus MR, 2001, WWC-4: IEEE INTERNATIONAL WORKSHOP ON WORKLOAD CHARACTERIZATION, P3, DOI 10.1109/WWC.2001.990739
   Hu J., 2005, ACM Trans. on Embedded Computing Systems (TECS), V4, P851
   Huang C, 2005, IEEE CUST INTEGR CIR, P239
   Huang C, 2007, IEEE T VLSI SYST, V15, P1191, DOI 10.1109/TVLSI.2007.904096
   Issenin I, 2004, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, VOLS 1 AND 2, PROCEEDINGS, P202, DOI 10.1109/DATE.2004.1268849
   Jun Y, 2007, LECT NOTES COMPUT SC, V4367, P57
   Kandemir M, 2002, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, 2002 PROCEEDINGS, P984, DOI 10.1109/DATE.2002.998419
   Khouri KS, 2005, IEEE T VLSI SYST, V13, P513, DOI 10.1109/TVLSI.2005.844292
   Kjeldsberg PG, 2008, J SIGNAL PROCESS SYS, V53, P301, DOI 10.1007/s11265-008-0178-6
   Ko MY, 2008, J SIGNAL PROCESS SYS, V50, P163, DOI 10.1007/s11265-007-0114-1
   Kolson DJ, 1996, IEEE T COMPUT AID D, V15, P1354, DOI 10.1109/43.543768
   Lefebvre V., 1997, Euro-Par '97 Parallel Processing. Third International Euro-Par Conference. Proceedings, P356
   Liu LX, 2008, ICS'08: PROCEEDINGS OF THE 2008 ACM INTERNATIONAL CONFERENCE ON SUPERCOMPUTING, P359
   Mamidipaka M, 2000, 2000 GREAT LAK S VLS, P207
   Mamidipaka MN, 2003, IEEE T VLSI SYST, V11, P827, DOI 10.1109/TVLSI.2003.814325
   Murthy PK, 2004, ACM T DES AUTOMAT EL, V9, P212, DOI 10.1145/989995.989999
   Nykänen M, 2002, J ALGORITHMS, V42, P41, DOI 10.1006/jagm.2001.1201
   Panda PR, 2001, ACM T DES AUTOMAT EL, V6, P149, DOI 10.1145/375977.375978
   Püschel M, 2005, P IEEE, V93, P232, DOI 10.1109/JPROC.2004.840306
   Raghavan P, 2007, DES AUT TEST EUROPE, P1066
   Rau B.R., 1994, P 27 ANN INT S MICRO, P63
   Rong H, 2005, ACM SIGPLAN NOTICES, V40, P154, DOI 10.1145/1064978.1065030
   Salmela Perttu, 2007, 2007 15th European Signal Processing Conference (EUSIPCO), P831
   Salmela P, 2006, 2006 INTERNATIONAL SYMPOSIUM ON SYSTEM-ON-CHIP PROCEEDINGS, P137
   Sarkar V., 1991, Conference Proceedings. 1991 International Conference on Supercomputing, P194, DOI 10.1145/109025.109077
   SMUCHNICK SS, 1997, ADV COMPILER DESIGN
   Song YH, 2004, PROC INT CONF PARAL, P46
   Song Yonghong., 2001, Proceedings of the 15th ACM International Conference on Supercomputing, P50
   Texas Instruments Inc., 2001, GUIDE
   TMS320C6000 CPU and Instruction Set Reference Guide, 2000, TMS320C6000 CPU INST
   Wang M, 2011, IEEE T VLSI SYST, V19, P997, DOI 10.1109/TVLSI.2010.2043963
   Wang YK, 2007, IEEE T SIGNAL PROCES, V55, P2338, DOI 10.1109/TSP.2007.892722
   Wang Z, 2002, EURASIP J APPL SIG P, V2002, P926, DOI 10.1155/S1110865702205041
   Wang Z, 2001, IEEE T SIGNAL PROCES, V49, P2853, DOI 10.1109/78.960433
   Wang Z., 2001, P 2001 INT C COMPILE, P67
   Weinhardt M, 2001, IEE P-COMPUT DIG T, V148, P105, DOI 10.1049/ip-cdt:20010514
   Xue J., 2006, ACM Trans. on Architecture and Code Optimization (TACO), V3, P115, DOI 10.1145/1138035.1138036
   Yan J, 2008, ACM T ARCHIT CODE OP, V4, P3
   Zhang YM, 2002, ACM SIGPLAN NOTICES, V37, P42, DOI 10.1145/510857.510867
   Zhang YT, 2003, 2003 INTERNATIONAL CONFERENCE ON PARALLEL PROCESSING, PROCEEDINGS, P21
   Zivojnovic V, 1996, 9TH INTERNATIONAL SYMPOSIUM ON SYSTEMS SYNTHESIS, PROCEEDINGS, P108, DOI 10.1109/ISSS.1996.565890
NR 57
TC 1
Z9 1
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2014
VL 44
IS 8
BP 999
EP 1026
DI 10.1002/spe.2186
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AL9RW
UT WOS:000339479400007
DA 2024-07-18
ER

PT J
AU Balland, E
   Moreau, PE
   Reilles, A
AF Balland, Emilie
   Moreau, Pierre-Etienne
   Reilles, Antoine
TI Effective strategic programming for Java developers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE generic programming; term rewriting; tree traversal; strategies;
   object-oriented programming
ID TRANSFORMATION; LANGUAGE; PATTERN; BOILERPLATE; HASKELL; SCRAP
AB In object programming languages, the Visitor design pattern allows separation of algorithms and data structures. When applying this pattern to tree-like structures, programmers are always confronted with the difficulty of making their code evolve. One reason is that the code implementing the algorithm is interwound with the code implementing the traversal inside the visitor. When implementing algorithms such as data analyses or transformations, encoding the traversal directly into the algorithm turns out to be cumbersome as this type of algorithm only focuses on a small part of the data-structure model (e.g., program optimization). Unfortunately, typed programming languages like Java do not offer simple solutions for expressing generic traversals. Rewrite-based languages like ELAN or Stratego have introduced the notion of strategies to express both generic traversal and rule application control in a declarative way. Starting from this approach, our goal was to make the notion of strategic programming available in a widely used language such as Java and thus to offer generic traversals in typed Java structures. In this paper, we present the strategy language SL that provides programming support for strategies in Java. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Balland, Emilie] INRIA, Bordeaux, France.
   [Moreau, Pierre-Etienne] Univ Lorraine, F-54600 Loria, Villers Les Nan, France.
   [Moreau, Pierre-Etienne] Inria, F-54600 Villers Les Nancy, France.
   [Reilles, Antoine] Dassault Syst, Paris, France.
C3 Inria; Universite de Lorraine; Inria; Dassault Systemes
RP Balland, E (corresponding author), INRIA, Bordeaux, France.
EM emilie.balland@inria.fr
CR Andrei O, 2011, ELECTRON P THEOR COM, P54, DOI 10.4204/EPTCS.48.7
   [Anonymous], 1984, Studies in Logic
   [Anonymous], PRO EJB 3 JAVA PERSI
   Baader Franz, 1998, TERM REWRITING ALL
   Balland E, 2008, TOM MANUAL VERSION 2
   Balland E, 2006, SETRA 06
   Balland E, 2008, LECT NOTES COMPUT SC, V5117, P32, DOI 10.1007/978-3-540-70590-1_3
   Balland E, 2007, LECT NOTES COMPUT SC, V4533, P36
   Balland E, 2007, ELECTRON NOTES THEOR, V190, P19, DOI 10.1016/j.entcs.2007.02.058
   Balland E, 2008, ELECTRON NOTES THEOR, V219, P97, DOI 10.1016/j.entcs.2008.10.037
   Borovansky P., 1996, ELECTRONIC NOTES IN, V4, P169
   Borovansky Peter, 1996, Electronic Notes in Theoretical Computer Science, V4, P35, DOI [DOI 10.1016/S1571-0661(04)00032-5.FIRSTINTERNATIONALWORKSHOPONREWRITINGLOGICANDITSAPPLICATIONS(RWLW96, 10.1016/S1571-0661(04)00032-5]
   Bruneton Eric, 2002, ADAPTABLE EXTENSIBLE
   Bruni R, 2012, LECT NOTES COMPUTER, V7571
   Cirstea H, 2009, LECT NOTES COMPUT SC, V5858, P262, DOI 10.1007/978-3-642-04985-9_24
   CLAVEL M, 1998, THESIS U NAVARRE SPA
   Clavel M, 2000, ELECT NOTES THEORETI, V4, P126
   Fernández M, 1999, LECT NOTES COMPUT SC, V1702, P170
   Fernández M, 2010, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.44.1
   Feuillade G, 2004, J AUTOM REASONING, V33, P341, DOI 10.1007/s10817-004-6246-0
   FRISCH A, 2006, PLAN X BRICS, P36
   FUTATSUGI K, 1985, P 12 ACM SIGACT SIGP, V12, P52, DOI DOI 10.1145/318593.318610
   Gamma E., 1995, Design Patterns: Abstractions and Reuse of Object-Oriented Designs
   Gill A, 2009, LECT NOTES COMPUT SC, V5658, P285, DOI 10.1007/978-3-642-03034-5_14
   Hinze R, 2003, LECT NOTES COMPUT SC, V2793, P1
   Hinze R, 2007, LECT NOTES COMPUT SC, V4719, P72
   Kopetz R, 2008, LECT NOTES COMPUT SC, V4961, P296, DOI 10.1007/978-3-540-78743-3_22
   Kuipers T, 2000, TECHNICAL REPORT
   Lacey D., 2001, Compiler Construction. 10th International Conference, CC 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2027), P52
   Lämmel R, 2009, ELECTRON NOTES THEOR, V238, P135, DOI 10.1016/j.entcs.2009.09.045
   Lämmel R, 2003, ACM SIGPLAN NOTICES, V38, P26, DOI 10.1145/640136.604179
   Lammel R, 2007, ACM SIGPLAN NOTICES, V42, P137, DOI 10.1145/1190215.1190240
   Moreau P.-E., 1998, Principles of Declarative Programming. 10th International Symposium, PLILP'98. Held Jointly with the 6th International Conference, ALP'98. Proceedings, P230, DOI 10.1007/BFb0056617
   Moreau PE, 2003, LECT NOTES COMPUT SC, V2622, P61
   Odersky M., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P146, DOI 10.1145/263699.263715
   Plasmeijer M. J., 1993, FUNCTIONAL PROGRAMMI
   Reilles A, 2007, ELECTRON NOTES THEOR, V176, P165, DOI 10.1016/j.entcs.2007.06.014
   Rodriguez A, 2008, HASKELL'08: PROCEEDINGS OF THE ACM SIGPLAN 2008 HASKELL SYMPOSIUM, P111
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sloane AM, 2011, LECT NOTES COMPUT SC, V6491, P408, DOI 10.1007/978-3-642-18023-1_12
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Tavernier Bertrand., 2004, ELECT NOTES COMPUTER, V110, P169
   Van den Brand MGJ, 2003, ACM T SOFTW ENG METH, V12, P152, DOI 10.1145/941566.941568
   Van den Brand MGJ, 2002, ACM T PROGR LANG SYS, V24, P334, DOI 10.1145/567097.567099
   Visser E, 1999, ACM SIGPLAN NOTICES, V34, P13, DOI 10.1145/291251.289425
   Visser J, 2001, ACM SIGPLAN NOTICES, V36, P270, DOI 10.1145/504311.504302
   Wadler P., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P307, DOI 10.1145/41625.41653
   Wadler Philip, 1998, The Expression Problem
NR 48
TC 2
Z9 2
U1 1
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2014
VL 44
IS 2
BP 129
EP 162
DI 10.1002/spe.2159
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285BM
UT WOS:000329367700001
OA Green Published
DA 2024-07-18
ER

PT J
AU Kabanov, J
   Vene, V
AF Kabanov, Jevgeni
   Vene, Varmo
TI A thousand years of productivity: the JRebel story
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
C1 [Kabanov, Jevgeni; Vene, Varmo] Univ Tartu, Inst Comp Sci, EE-50409 Tartu, Estonia.
C3 University of Tartu
RP Kabanov, J (corresponding author), Univ Tartu, Inst Comp Sci, J Liivi 2, EE-50409 Tartu, Estonia.
EM ekabanov@gmail.com
RI Vene, Varmo/AAE-3870-2020; Vene, Varmo/H-2705-2015
OI Vene, Varmo/0000-0002-4874-7555
FU Estonian Science Foundation [8421]; Software Technology and Applications
   Competence Center (STACC)
FX All copyrights and other forms of intellectual property related to the
   JRebel and LiveRebel products are the sole property of ZeroTurnaround
   OU. The authors were partially supported by the Estonian Science
   Foundation grant No. 8421 and the Software Technology and Applications
   Competence Center (STACC).
CR Andersson J, P ICSE00 WORKSH SOFT
   [Anonymous], P 1 WORKSH ENG COMPL
   [Anonymous], 2005, Eclipse IDE Pocket Guide
   Atkinson M., 2000, A review of the rationale and architectures of PJama: a durable, flexible, evolvable and scalable orthogonally persistent programming platform
   Berners-Lee T, 1992, P SOFTW ENG ART INT
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Dmitriev M, 1999, ADV PERSISTENT OBJEC, P279
   Dmitriev M., 2001, TECHNICAL REPORT
   Gregersen A, 2008, SOFTW MAINT REENG 20, P23
   Gregersen A.R., 2009, P WORKSH AOP MET SOF, P2
   Hillion S, 2012, Dynamicjava, Patent No. 8261297
   Kabanov J, JAVA EE PRODUCTIVITY
   Liang S, 1998, ACM SIGPLAN NOTICES, V33, P36, DOI 10.1145/286942.286945
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Malabarba S, 2000, LECT NOTES COMPUT SC, V1850, P337
   Oracle, 2003, TUN GARB COLL 5 0 JA
   Pukall M, 2008, ASIA PAC SOFWR ENG, P85, DOI 10.1109/APSEC.2008.66
   Shannon B, 2006, JAVATM PLATFORM ENTE
   Wurthinger Thomas., 2010, P 8 INT C PRINC PRAC, P10, DOI [DOI 10.1145/1852761.1852764, 10.1145/1852761.1852764]
NR 19
TC 6
Z9 6
U1 0
U2 3
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2014
VL 44
IS 1
BP 105
EP 127
DI 10.1002/spe.2158
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 271VL
UT WOS:000328419600005
DA 2024-07-18
ER

PT J
AU Walraven, S
   Lagaisse, B
   Truyen, E
   Joosen, W
AF Walraven, Stefan
   Lagaisse, Bert
   Truyen, Eddy
   Joosen, Wouter
TI Policy-driven customization of cross-organizational features in
   distributed service systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cross-organizational; feature-oriented; service engineering; dynamic
   composition
ID MIDDLEWARE; WEB; FORM
AB In a cross-organizational context, software services are provided and consumed by different organizations. Ensuring that the non-functional requirements of all the involved organizations are satisfied is hard to achieve in such a distributed and heterogeneous environment: the implementation of features, for example, security, is scattered across the services of multiple organizations. In this paper, we present a coordination architecture for flexible and policy-driven composition of cross-organizational features in distributed service systems. The underlying approach of this architecture is to specify the features and their composition at a higher level that abstracts the internal implementation mechanisms of the organizations involved. By means of feature composition policies, the organizations specify at a fine-grained level which features are required and when they have to apply. Driven by these policies, our coordination middleware dynamically integrates the appropriate features throughout the cross-organizational service composition in a consistent and efficient way. We have validated our architecture in a proof of concept showing limited performance overhead. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Walraven, Stefan; Lagaisse, Bert; Truyen, Eddy; Joosen, Wouter] Katholieke Univ Leuven, Dept Comp Sci, DistriNet, B-3001 Louvain, Belgium.
C3 KU Leuven
RP Walraven, S (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, DistriNet, Celestijnenlaan 200A, B-3001 Louvain, Belgium.
EM stefan.walraven@cs.kuleuven.be
OI Lagaisse, Bert/0000-0002-2543-6658
FU Research Foundation-Flanders (FWO)
FX We thank the anonymous reviewers for their helpful comments to improve
   this paper. This research is partially funded by the Research
   Foundation-Flanders (FWO) in the context of the RECOCO project.
CR [Anonymous], 1989, 749821989 ISO
   [Anonymous], ASP OR PROGR SPRING
   Apel S., 2008, P 2 INT WORKSHOP SYS, P53, DOI DOI 10.1145/1370916.1370930
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Ben Mabrouk N, 2009, LECT NOTES COMPUT SC, V5896, P123, DOI 10.1007/978-3-642-10445-9_7
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Beznosov K., 2000, THESIS FLORIDA INT U
   Bilgin AS, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P368
   Clarke M., 2001, P IFIPACM INT C DIST, P160
   Cohen S, 2008, P 1 WORKSH SERV OR A
   Colyer A., 2004, P 3 INT C ASPECT ORI, P56, DOI DOI 10.1145/976270.976279
   Damianou N, 2001, LECT NOTES COMPUT SC, V1995, P18
   Demarey C, 2004, CPM 2004, P7
   Dustdar S., 2005, International Journal of Web and Grid Services, V1, P1, DOI 10.1504/IJWGS.2005.007545
   Filman R., 2004, ASPECT ORIENTED SOFT
   Hoffner Y, 2001, COMPUT NETW, V37, P111, DOI 10.1016/S1389-1286(01)00210-9
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang KC, 1990, 21 CARN MELL U SOFTW
   Kon F, 2000, LECT NOTES COMPUT SC, V1795, P121
   Kulesza U, 2007, LECT NOTES COMPUT SC, V4765, P155
   Lagaisse B, 2006, LECT NOTES COMPUT SC, V4290, P42
   Lee J, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P275, DOI 10.1109/SPLC.2008.34
   Lee K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P103
   Loughran N, 2004, LECT NOTES COMPUT SC, V3107, P127
   Mezini M., 2004, Software Engineering Notes, V29, P127, DOI 10.1145/1041685.1029915
   Milosevic Z, 2004, INT FED INFO PROC, V146, P413
   Minsky NH, 2000, ACM T SOFTW ENG METH, V9, P273, DOI 10.1145/352591.352592
   Narayanan S., 2002, Proceedings of the 11th International Conference on World Wide Web, P77, DOI DOI 10.1145/511446.511457
   Nicoara Angela., 2005, Proc. of 1st International Workshop on Adaptive and Self-Managing Enterprise Applications, P125
   OMG, 2002, CORBA SEC SERV SPEC
   *OWL S, 2004, OWL S SEM MARK WEB S
   Paolucci M, 2002, LECT NOTES COMPUT SC, V2342, P333
   Pawlak Renaud., 2001, LECT NOTES COMPUTER, V2192, P1, DOI DOI 10.1007/3-540-45429-2_1
   Rouvoy R., 2009, P 2009 ACM S APPL CO, P1021
   Skene J, 2004, PROC INT CONF SOFTW, P179, DOI 10.1109/ICSE.2004.1317440
   Söldner G, 2008, LECT NOTES COMPUT SC, V5331, P535
   Sycara Katia., 2003, WEB SEMANTICS SCI SE, V1, P27
   Tai S, 2004, DATA KNOWL ENG, V51, P59, DOI 10.1016/j.datak.2003.03.001
   Trastour D, 2001, P INT SEM WEB WORK S
   Truyen E, 2001, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2001.919097
   Truyen E, 2008, EDOCW 08, P252, DOI [10.1109/EDOCW.2008.10, DOI 10.1109/ED0CW.2008.10]
   Truyen E., 2008, Proceedings of the 7th International Conference on Aspect-Oriented Software Development, P120, DOI DOI 10.1145/1353482.1353497
   Walraven S, 2010, LECT NOTES COMPUT SC, V6115, P183, DOI 10.1007/978-3-642-13645-0_14
   Wohlstadter E, 2004, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2004.1317441
   Wohlstadter E, 2003, PROC INT CONF SOFTW, P174, DOI 10.1109/ICSE.2003.1201198
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 46
TC 3
Z9 3
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2013
VL 43
IS 10
SI SI
BP 1145
EP 1163
DI 10.1002/spe.1128
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 212YJ
UT WOS:000324018600002
DA 2024-07-18
ER

PT J
AU Soares, LFG
   Moreno, MF
   Marinho, RS
AF Soares, Luiz Fernando G.
   Moreno, Marcio F.
   Marinho, Rafael S.
TI Ginga-NCL architecture for plug-ins
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE NCL; Ginga-NCL; digital TV; plug-in; middleware; multimedia systems
AB Ginga is the middleware of the Japanese-Brazilian terrestrial digital TV (DTV) system, ISDB-T B, and also the ITU Telecommunication Standardization Sector (ITU-T) Recommendation for Internet Protocol television services. Ginga supports NCL (Nested Context Language) applications in its declarative environment (Ginga-NCL) for which we devise an architecture for plug-in integration. This paper focuses on this plug-in architecture and its innovative solutions, detailing the plug-in API, life-cycle and control model, besides discussing how the architecture can be extended to other software systems, in particular to other DTV middleware systems. In the paper, we show how Ginga-NCL can embed other declarative language engines. On the other hand, we also extend an HTML browser to allow it to embed Ginga-NCL. This proof-of- concept is important because NCL and HTML players are not only the most common players found in DTV middleware systems but also because they are ITU Telecommunication Standardization Sector Recommendations for terrestrial and Internet Protocol television services (NCL and Broadcast Markup Language (BML)/Lightweight Interactive Multimedia Environment (LIME)). Therefore, this proof-of-concept also provides a contribution to DTV middleware interoperability. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Soares, Luiz Fernando G.; Moreno, Marcio F.; Marinho, Rafael S.] Pontificia Univ Catolica Rio de Janeiro, Dept Informat, BR-22453900 Rio de Janeiro, RJ, Brazil.
C3 Pontificia Universidade Catolica do Rio de Janeiro
RP Soares, LFG (corresponding author), Pontificia Univ Catolica Rio de Janeiro, Dept Informat, Rua Marques de Sao Vicente 225, BR-22453900 Rio de Janeiro, RJ, Brazil.
EM lfgs@inf.puc-rio.br
FU Brazilian Ministry of Science and Technology; CNPq
FX This work has been partially funded by the Brazilian Ministry of Science
   and Technology. Luiz Fernando G. Soares and Marcio F. Moreno also thank
   CNPq for their grant.
CR [Anonymous], 2011, 156062 ABNT NBR
   [Anonymous], 2046 RFC
   [Anonymous], 2009, LIGHTW INT MULT ENV
   [Anonymous], 2010, HTML 5
   [Anonymous], NEST CONT LANG NCL G
   [Anonymous], 2008, STDB24 ARIB, V3
   Benden D, 2004, ACM MM 04 NEW YORK N
   Boyer J., 2007, XFORMS 1 0
   Ettrich Mathias., 2002, XEmbed Protocol Speci cation
   Soares LFG, 2010, IEEE COMMUN MAG, V48, P74
   Jansen J, 2008, DOCENG'08: PROCEEDINGS OF THE EIGHTH ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P18
   Moreno MF, 2011, P 1 WORKSH DEV TOOLS, P12, DOI [10.1145/1984708.1984713, DOI 10.1145/1984708.1984713]
   Morris S., 2005, Interactive TV Standards: A Guide to MHP, OCAP
   PerezLuque MJ, 1996, IEEE J SEL AREA COMM, V14, P36, DOI 10.1109/49.481692
   Reis C, 2009, EUROSYS'09: PROCEEDINGS OF THE FOURTH EUROSYS CONFERENCE, P219
   Rodrigues RF, 2006, 3506 MCC INF DEP PUC
   Rutledge L W, 2009, SMIL 3 0 FLEXIBLE MU
   Soares LF, 2009, ACM INT C MULT ACM M, P281
NR 18
TC 3
Z9 3
U1 0
U2 9
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2013
VL 43
IS 4
SI SI
BP 449
EP 463
DI 10.1002/spe.2144
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 112UL
UT WOS:000316619200006
DA 2024-07-18
ER

PT J
AU Ismail, L
   Barua, R
AF Ismail, Leila
   Barua, Rajeev
TI Implementation and performance evaluation of a distributed conjugate
   gradient method in a cloud computing environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed computing; conjugate gradient (CG) method; performance
ID COMMUNICATION INTENSIVE APPLICATION
AB Cloud computing is an emerging technology where information technology resources are provisioned to users in a set of a unified computing resources on a pay per use basis. The resources are dynamically chosen to satisfy a user service level agreement and a required level of performance. A cloud is seen as a computing platform for heavy load applications. Conjugate gradient (CG) method is an iterative linear solver that is used by many scientific and engineering applications to solve a linear system of algebraic equations. CG generates a heavy load of computation, and therefore, it slows the performance of the applications usingit. Distributing CG is considered as a way to increase its performance. However, running a distributed CG, based on a standard API, such as Message Passing Interface, in a cloud face many challenges, such as the cloud processing and networking capabilities. In this work, we present an in-depth analysis of the CG algorithm and its complexity to develop adequate distributed algorithms. The implementation of these algorithms and their evaluation in our cloud environment reveal the gains and losses achieved by distributing the CG. The performance results show that despite the complexity of the CG processing and communication, a speedup gain of at least 1157.7 is obtained using 128 cores compared with National Aeronautics and Space Administration Advanced Supercomputing sequential execution. Given the emergence of clouds, the results in this paper analyzes performance issues when a generic public cloud, along with a standard development library, such as Message Passing Interface, is used for high-performance applications, without the need of some specialized hardware and software. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Ismail, Leila] United Arab Emirates Univ, Fac Informat Technol, Comp Sci & Software Engn Dept, Al Ain 17551, U Arab Emirates.
   [Barua, Rajeev] Univ Maryland, Dept Elect & Comp Engn, College Pk, MD 20742 USA.
C3 United Arab Emirates University; University System of Maryland;
   University of Maryland College Park
RP Ismail, L (corresponding author), United Arab Emirates Univ, Fac Informat Technol, Comp Sci & Software Engn Dept, Al Ain 17551, U Arab Emirates.
EM leila@uaeu.ac.ae
RI Ismail, Leila/Y-4172-2019
OI Ismail, Leila/0000-0003-0946-1818
FU UAE University
FX The authors would like thank the UAE University for supporting this
   research work. The research is part of funded project by the UAE
   University. The project has been ranked Highly Competitive by
   international peer reviewers following a UAE national competition
   organized by the UAE National Research Foundation and won by the first
   author. Special thanks to Dr. Eyad Abed, the Dean of the Faculty of
   Information Technology of the UAE University for his support and
   encouragement. The authors would like also to thank the anonymous
   reviewers for their feedbacks which have contributed to the paper.
CR [Anonymous], 1 EUR WORKSH OPENMP
   [Anonymous], 2009, DEP ELECT ENG COMPUT
   [Anonymous], SPECIAL PUBLICATION
   [Anonymous], 2010, Communication-avoiding Krylov subspace methods
   Bailey D., 1994, RNR94007
   Buyya R, 2008, HPCC 2008: 10TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P5, DOI 10.1109/HPCC.2008.172
   Bycul RP, 2002, PAR ELEC 2002: INTERNATIONAL CONFERENCE ON PARALLEL COMPUTING IN ELECTRICAL ENGINEERING, P318, DOI 10.1109/PCEE.2002.1115282
   Chen F, 2004, 2004 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, P459, DOI 10.1109/CLUSTR.2004.1392645
   Field MR, 1998, SIAM J SCI COMPUT, V19, P27, DOI 10.1137/S1064827596302205
   Gropp W, 1998, MPI COMPLETE REFEREN, V2
   Ismail Leila, 2010, Asia Modelling Symposium. Proceedings 4th Asia International Conference on Mathematical Modelling and Computer Simulation (AMS 2010), P498, DOI 10.1109/AMS.2010.101
   Ismail L., 2010, P 2010 INT C COMP AP
   Jordan A, 2001, P NATO ADV RES WORKS, V2326, P156
   Kim Y., 2006, COMPUTATIONAL MECH
   Kloos P, 2001, P 3 EUR WORKSH OPENM
   Kwon HD, 2003, APPL MATH COMPUT, V145, P869, DOI 10.1016/S0096-3003(03)00279-0
   Lewis J. G., 1993, Proceedings SUPERCOMPUTING '93, P484, DOI 10.1145/169627.169788
   LEWIS JG, 1994, PROCEEDINGS OF THE SCALABLE HIGH-PERFORMANCE COMPUTING CONFERENCE, P542, DOI 10.1109/SHPCC.1994.296689
   OLEARY DP, 1980, LINEAR ALGEBRA APPL, V29, P293, DOI 10.1016/0024-3795(80)90247-5
   OLEARY DP, 1987, PARALLEL COMPUT, V5, P127, DOI 10.1016/0167-8191(87)90013-5
   Papadopoulos P., 2011, EXTENDED CLUSTERS AM
   Shewchuk J. R., 1994, INTRO CONJUGATE GRAD
   Theobald KB, 2000, LECT NOTES COMPUT SC, V1900, P625
   Theobald KB, 2002, CONCURR COMP-PRACT E, V14, P183, DOI 10.1002/cpe.604
   Theobald KevinB., 2000, P 2000 ACMIEEE C SUP, P4
   Vecchiola C, 2009, P 10 INT S PERV SYST, P6
NR 26
TC 12
Z9 12
U1 0
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2013
VL 43
IS 3
BP 281
EP 304
DI 10.1002/spe.2112
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 089RE
UT WOS:000314926900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bouchebaba, Y
   Ozcan, AE
   Paulin, P
   Nicolescu, G
AF Bouchebaba, Youcef
   Ozcan, Ali-Erdem
   Paulin, Pierre
   Nicolescu, Gabriela
TI MpAssign: a framework for solving the many-core platform mapping problem
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE many cores; MPSoC; mapping; evolutionary algorithm
AB Many-core platforms, providing large numbers of parallel execution resources, emerge as a response to the increasing computation needs of embedded applications. A major challenge raised by this trend is the efficient mapping of applications on parallel resources. This is a nontrivial problem because of the number of parameters to be considered for characterizing both the applications and the underlying platform architectures. Recently, several authors have proposed to use multi-objective evolutionary algorithm to solve this problem within the context of mapping applications on network-on-chips. However, these proposals have several limitations: (1) only few metaheuristics are explored (mainly Nondominated Sorting Genetic Algorithm?II and Strength Pareto Evolutionary Algorithm?2), (2) only few objective functions are provided, and (3) they only deal with a small number of the application and architecture constraints. In this paper, we propose a new framework that avoids all of the problems cited previously. Our framework is implemented on top of the jMetal framework, which offers an extensible environment. Our framework allows designers to (1) explore several new metaheuristics, (2) easily add a new objective function (or to use an existing one), and (3) take into account any number of architecture and application constraints. The paper also presents experiments illustrating how our framework is applied to the problem of mapping streaming applications on an NoC-based many-core platform. Our results show that several new metaheuristics outperform the classical multi-objective metaheuristics such as Nondominated Sorting Genetic Algorithm?II and Strength Pareto Evolutionary Algorithm?2. Moreover, a parallel multi-objective evolutionary algorithm is implemented in our framework in order to increase the explored space of solutions by simultaneously running several metaheuristics. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Bouchebaba, Youcef; Ozcan, Ali-Erdem; Paulin, Pierre] STMicroelectronics, Ottawa, ON, Canada.
   [Nicolescu, Gabriela] Ecole Polytech, Montreal, PQ H3C 3A7, Canada.
C3 STMicroelectronics; Universite de Montreal; Polytechnique Montreal
RP Bouchebaba, Y (corresponding author), John Wiley & Sons Ltd, Journals Prod Dept, Chichester PO19 8SQ, W Sussex, England.
EM youcef.bouchebaba@st.com
CR [Anonymous], 1997, THESIS RICE U HOUSTO
   [Anonymous], MPI MESS PASS INT ST
   [Anonymous], WORKSH HARDW SOFTW C
   ASCIA G, 2005, INT J COMPUTATIONAL, V1, P109
   Bouchebaba Y, 2007, ACM T DES AUTOMAT EL, V12, P579
   Bourduas S, 2007, MWSCAS NEWCAS 2007 M
   Branke J, 2004, P 2004 C EV COMP POR
   Coello C.A., 2007, Evolutionary algorithms for solving multi-objective problems, V5
   Coppola M, 2004, P 2004 INT C SYST ON
   CORNE DW, 2001, P GEN EV COMP C SAN
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Erbas C, 2006, IEEE T EVOLUT COMPUT, V10, P358, DOI 10.1109/TEVC.2005.860766
   Eskandari H, 2007, 4 INT C EV MULT OPT
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Hu J, 2004, DATE 2004 PAR FRANC
   Hu J, 2003, ASP DAC 2003 KIT JAP
   Jena Rabindra Kumar, 2007, International Innovative Computing and Applications, V1, P121, DOI 10.1504/IJICA.2007.016793
   Kukkonen S, 2005, IEEE C EV COMP CEC20
   Lei ST, 2003, DSD 2003 BEL ANT TUR
   Li Y, 1999, ART EV 4 EUR C AE 99, P3
   Marcon C, 2005, DATE 2005 MUN GERM
   Munshi A., 2009, OPENCL SPECIFICATION
   Murali S, 2006, DATE 2006 MUN GERM
   Murali S, 2006, ASP DAC 2006 YOK JAP
   Nebro A. J., 2009, 2009 IEEE S COMP INT
   Nebro AJ, 2009, INT J INTELL SYST, V24, P726, DOI 10.1002/int.20358
   Sierra MR, 2005, EMO 2005 GUAN MEX
   Thiele Lothar, 2007, INT C APPL CONC SYST
   Thies W., 2002, 11 INT C COMP CONSTR
   Vrenios A, 2004, DISTRIBUTED SYSTEMS, V5, P71
   Ye TT, 2003, DATE 2003 MUN GERM
   Zhou W, 2006, CIRC SYST APCCAS 200
   Zitzler E., 2001, TIK-Rep. 103
NR 33
TC 0
Z9 0
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2012
VL 42
IS 7
SI SI
BP 891
EP 915
DI 10.1002/spe.1157
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 952UX
UT WOS:000304819600007
DA 2024-07-18
ER

PT J
AU Hillenbrand, M
   Heinz, M
   Matheis, J
   Müller-Glaser, KD
AF Hillenbrand, M.
   Heinz, M.
   Matheis, J.
   Mueller-Glaser, K. D.
TI Development of electric/electronic architectures for safety-related
   vehicle functions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ISO 26262; safety life cycle; architecture development; meta-modeling;
   FMEA
AB The development of software-based systems for vehicles in compliance with the new standard ISO 26262 functional safety for road vehicles requires a common understanding between the two domains. In this paper, we consider the impact of the ISO 26262 to the concept phase of the vehicle development, especially the model-based development of electric/electronic architectures. To found a formal basis for the electric/electronic architecture modeling, located in the development process and addressed by ISO 26262, we introduce a meta-model, combining the major concepts and relations of electric/electronic architectures and ISO 26262. Safety analysis can be supported by data available in the electric/electronic architecture model. In this paper, we present a methodology to facilitate and accumulate context-based information from electric/electronic architecture models to use them as input information for safety analysis. We also demonstrate how to perform the safety analysis method, that is, failure mode and effect analysis, based on the same architecture description language as the electric/electronic architecture model and also within the same modeling tool. We also present a methodology for the modeling and consideration of safety aspects and requirements crossing different system perimeters. This facilitates the consistent description and analysis of systems of systems, such as contemporary vehicles. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Hillenbrand, M.; Heinz, M.; Mueller-Glaser, K. D.] Karlsruhe Inst Technol, Inst Informat Proc Technol, D-76131 Karlsruhe, Germany.
   [Matheis, J.] Aquintos GmbH, D-76137 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Hillenbrand, M (corresponding author), Karlsruhe Inst Technol, Inst Informat Proc Technol, Vincenz PrieSSnitz Str 1, D-76131 Karlsruhe, Germany.
EM hillenbrand@kit.edu
CR [Anonymous], 1996, ARP4754 SAE
   [Anonymous], 1997, IEC61508
   [Anonymous], 2003, TECHNOMETRICS
   [Anonymous], DO178B
   APIS, 2010, APIS IQ FMEA
   aquintos, 2009, EE ARCH PREEVISION
   ATTEST, 2010, ADV TRAFF EFF SAF SO
   AUTOSAR, 2008, SPEC VIRT FUNCT BUS
   AUTOSAR, 2008, TECHN OV DOC VERS 2
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   Benveniste A., 2008, MULTIPLE VIEWPOINT C
   Benz S., 2004, THESIS
   Blomqvist E., 2010, ONTOLOGY PATTERNS TY
   BOSCH R, 2006, SAFETY COMFORT CONVE
   Broy M., 2006, 28th International Conference on Software Engineering Proceedings, P33, DOI 10.1145/1134285.1134292
   Chen D, 2008, MODELLING SUPPORT DE
   Chen L, 1995, 25 INT S JUN 1995, P113
   Damm W, 2009, SAE WORLD C EXH
   DATO-SOFT, 2010, DATO SOFT FMEA
   DcMermott RE, 1996, BASICS FMEA
   EAST-ADL, 2010, DOM MOD SPEC DEL D4
   Echtle K, 1998, FEHLERTOLERANZVERFAH
   Gacnik Jan, 2010, Proceedings of the 2010 13th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing Workshops (ISORCW Workshops 2010). Volume II: Workshops, P130, DOI 10.1109/ISORCW.2010.29
   Gasevic D., 2009, Model Driven Engineering and Ontology Development, V2nd ed
   Gebauer D, 2008, EBENENUBERTREIFENDE, P142
   Heinz M, 2010, IFAC S ADV AUT CONTR
   Heinz M, 2009, P IEEE RAP SYST PROT, P173, DOI 10.1109/RSP.2009.13
   Hillenbrand M, 2010, P INT WORKSH RAP SYS, DOI [10.1109/RSP.2010.5656351, DOI 10.1109/RSP.2010.5656351]
   Hillenbrand M, 2010, ISO DIS 26262 CONTEX
   Hillenbrand M, 2009, P IEEE RAP SYST PROT, P188, DOI 10.1109/RSP.2009.14
   International Organization for Standardization, 2010, 26262 ISODIS
   Lanza G, 2009, QUALITY MANAGEMENT
   LYONS RE, 1962, IBM J RES DEV, V6, P200, DOI 10.1147/rd.62.0200
   Markov A.A., 1971, EXTENSION LIMIT THEO
   Matheis J, 2008, SYST ENG INFR CONF S
   Matheis J., 2009, THESIS
   Papadopoulos Y, 2001, RELIAB ENG SYST SAFE, V71, P229, DOI 10.1016/S0951-8320(00)00076-4
   Papadopoulos Y, 2010, CARS 10 P 1 WORKSH C, P7
   Papadopoulos Y., 2010, ATESST2 FIN WORKSH
   Papyrus, PAP EAST ADL
   Pasquini A, 1999, HIERARCHICALLY PERFO, DOI [10.1007/3-540-48249-0_13, DOI 10.1007/3-540-48249-0_13]
   PETERSON WW, 1961, P IRE, V49, P228, DOI 10.1109/JRPROC.1961.287814
   Reichmann C., 2005, THESIS
   SAE International, 1996, ARP4761: Guidelines And Methods For Conducting The Safety Assessment Process On Civil Airborne Systems And Equipment
   Seidewitz E, 2003, IEEE SOFTWARE, V20, P26, DOI 10.1109/MS.2003.1231147
   U.S. Department of Defense, 1998, EL REL DES HDB B
   Verband der Automobilindustrie, 2009, PROD PROZ FMEA
NR 47
TC 2
Z9 2
U1 0
U2 28
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2012
VL 42
IS 7
SI SI
BP 817
EP 851
DI 10.1002/spe.1154
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 952UX
UT WOS:000304819600004
OA Bronze
DA 2024-07-18
ER

PT J
AU Ciancarini, P
   Di Iorio, A
   Furini, L
   Vitali, F
AF Ciancarini, Paolo
   Di Iorio, Angelo
   Furini, Luca
   Vitali, Fabio
TI High-quality pagination for publishing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE line breaking; page breaking; widows; orphans; keeps; pagination; XML
   publishing
ID CONCAVE; CONVEX
AB The problem of line breaking consists of finding the best way to split paragraphs into lines. It has been cleverly addressed by the total-fit algorithm exposed by Knuth and Plass in a well-known paper. Similarly, page-breaking algorithms break the content flow of a document into page units. Formatting languagessuch as the World Wide Web Consortium standard Extensible Stylesheet Language Formatting Objects (XSL-FO)allow users to set which content should be kept in the same page and how many isolated lines are acceptable at the beginning/end of each page. The strategies most formatters adopt to meet these requirements, however, are not satisfactory for many publishing contexts as they very often generate unpleasant empty areas. In that case, typographers are required to manually craft the results in order to completely fill pages. This paper presents a page-breaking algorithm that extends the original Knuth and Plass line-breaking approach and produces high-quality documents without unwanted empty areas. The basic idea consists of delaying the definitive choice of breaks in the line-breaking process in order to provide a larger set of alternatives to the actual pagination step. The algorithm also allows users to decide the set of properties to be adjusted for pagination and their variation ranges. An application of the algorithm to XSL-FO is also presented, with an extension of the language that allows users to drive the pagination process. The tool, named FOP+, is a customized version of the open-source Apache Formatting Objects Processor formatter. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Ciancarini, Paolo; Di Iorio, Angelo; Furini, Luca; Vitali, Fabio] Univ Bologna, Dept Comp Sci, I-40127 Bologna, Italy.
C3 University of Bologna
RP Di Iorio, A (corresponding author), Univ Bologna, Dept Comp Sci, Mura Anteo Zamboni 7, I-40127 Bologna, Italy.
EM diiorio@cs.unibo.it
RI Ciancarini, Paolo/ABA-8413-2020; Vitali, Fabio/E-9368-2012
OI Ciancarini, Paolo/0000-0002-7958-9924; Vitali,
   Fabio/0000-0002-7562-5203; Di Iorio, Angelo/0000-0002-6893-7452
FU CINI (Consorzio Interuniversitario Nazionale per l'Informatica); 'Il
   Mulino'
FX The authors would like to thank CINI (Consorzio Interuniversitario
   Nazionale per l'Informatica) and 'Il Mulino' for their interest and
   financial support to this research. Special thanks to the anonymous
   reviewers and, in particular, to Peter Moulder who was so kind as to
   disclose his name on our request. He gave us the longest and most
   constructive review we have ever received.
CR [Anonymous], CHIC MAN STYL
   Antenna House, XSL FORM
   Asmus F, 2005, LINE BREAKING PROPER
   BERGLUND A, EXTENSIBLE STYLESHEE
   Brüggemann-Klein A, 2003, LECT NOTES COMPUT SC, V2598, P49
   Bruggemann-Klein A., 1995, Electronic Publishing: Origination, Dissemination and Design, V8, P139
   da Silva ACB, 2005, DOC 05 P 2005 ACM S, P64, DOI [10.1145/1096601.1096622, DOI 10.1145/1096601.1096622]
   Di Iorio A, 2007, UBLCS200705 DEP COMP
   EPPSTEIN D, 1990, J ALGORITHM, V11, P85, DOI 10.1016/0196-6774(90)90031-9
   EPPSTEIN D, 1992, J ACM, V39, P546, DOI 10.1145/146637.146656
   Feiner S., 1988, Proceedings of Graphics Interface '88, P192
   Fine J, 2000, TUGBOAT, V21, P210
   GALIL Z, 1989, THEOR COMPUT SCI, V64, P107, DOI 10.1016/0304-3975(89)90101-1
   Harrington S.J., 2004, P 2004 ACM S DOC ENG, P109, DOI [10.1145/1030397.1030419, DOI 10.1145/1030397.1030419]
   HIRSCHBERG DS, 1987, J ACM, V34, P616, DOI 10.1145/28869.28875
   HIRSCHBERG DS, 1987, SIAM J COMPUT, V16, P628, DOI 10.1137/0216043
   Holkner A, 2006, THESIS RMIT U MELBOU
   Jacobs C, 2003, 2 INT WORKSH WEB DOC
   Kingston JH, 2006, FUTURE DOCUMENT FORM
   KNUTH DE, 1981, SOFTWARE PRACT EXPER, V11, P1119, DOI 10.1002/spe.4380111102
   Knuth DE, 1986, TEXBOOK COMPUTERS TY, VA
   Loureiro G, 2005, DOCENG 05, P95, DOI [10.1145/1096601.1096626, DOI 10.1145/1096601.1096626]
   Marriott K, 2007, DOCENG'07: PROCEEDINGS OF THE 2007 ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P125
   MILLER W, 1988, B MATH BIOL, V50, P97, DOI 10.1016/S0092-8240(88)80016-8
   Mittelbach F, 1990, TUGBOAT, V11, P337
   Mittelbach F, 1992, EP92 P EL PUBL, P261
   Plass MF, 1981, THESIS STANFORD U ST
   RenderX, XEP
   WILBER R, 1988, J ALGORITHM, V9, P418, DOI 10.1016/0196-6774(88)90032-6
NR 29
TC 5
Z9 5
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2012
VL 42
IS 6
BP 733
EP 751
DI 10.1002/spe.1096
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 936NP
UT WOS:000303597500004
DA 2024-07-18
ER

PT J
AU Inoue, H
   Moriyama, T
   Komatsu, H
   Nakatani, T
AF Inoue, Hiroshi
   Moriyama, Takao
   Komatsu, Hideaki
   Nakatani, Toshio
TI A high-performance sorting algorithm for multicore single-instruction
   multiple-data processors
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE sorting; merging; SIMD; VMX; parallel algorithms
AB Many sorting algorithms have been studied in the past, but there are only a few algorithms that can effectively exploit both single-instruction multiple-data (SIMD) instructions and thread-level parallelism. In this paper, we propose a new high-performance sorting algorithm, called aligned-access sort (AA-sort), that exploits both the SIMD instructions and thread-level parallelism available on today's multicore processors. Our algorithm consists of two phases, an in-core sorting phase and an out-of-core merging phase. The in-core sorting phase uses our new sorting algorithm that extends combsort to exploit SIMD instructions. The out-of-core algorithm is based on mergesort with our novel vectorized merging algorithm. Both phases can take advantage of SIMD instructions. The key to high performance is eliminating unaligned memory accesses that would reduce the effectiveness of SIMD instructions in both phases. We implemented and evaluated the AA-sort on PowerPC 970MP and Cell Broadband Engine platforms. In summary, a sequential version of the AA-sort using SIMD instructions outperformed IBM's optimized sequential sorting library by 1.8 times and bitonic mergesort using SIMD instructions by 3.3 times on PowerPC 970MP when sorting 32 million random 32-bit integers. Also, a parallel version of AA-sort demonstrated better scalability with increasing numbers of cores than a parallel version of bitonic mergesort on both platforms. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Inoue, Hiroshi; Moriyama, Takao; Komatsu, Hideaki; Nakatani, Toshio] IBM Res Corp, Tokyo, Japan.
C3 International Business Machines (IBM)
RP Inoue, H (corresponding author), IBM Res Corp, Tokyo, Japan.
EM inouehrs@jp.ibm.com
CR [Anonymous], THESIS U ALBERTA
   [Anonymous], EUR 2008 WORKSH PAR
   [Anonymous], BYTE MAGAZINE APR
   [Anonymous], IBM POWERPC 970MP RI
   [Anonymous], IA 32 INT ARCH SOFTW
   [Anonymous], ALTIVEC TECHN PROGR
   [Anonymous], POWERPC MICR FAM VEC
   [Anonymous], 1973, The art of computer programming
   Batcher K. E., 1968, P AFIPS SPRING JOINT, P307, DOI [DOI 10.1145/1468075.1468121, 10.1145/1468075. 1468121]
   Cederman D, 2008, LECT NOTES COMPUT SC, V5193, P246, DOI 10.1007/978-3-540-87744-8_21
   Chhugani J, 2008, PROC VLDB ENDOW, V1, P1313
   FRANCIS RS, 1988, IEEE T COMPUT, V37, P1619, DOI 10.1109/12.9738
   Furtak T, 2007, SPAA'07: PROCEEDINGS OF THE NINETEENTH ANNUAL SYMPOSIUM ON PARALLELISM IN ALGORITHMS AND ARCHITECTURES, P348
   Gedik Bugra., 2007, VLDB 07, P1286
   Govindaraju N., 2006, P 2006 ACM SIGMOD IN, P325, DOI DOI 10.1145/1142473.1142511
   Govindaraju NagaK., 2005, SIGMOD 05, P611
   Graefe G, 2006, ACM COMPUT SURV, V38, DOI 10.1145/1132960.1132964
   Inoue Hiroshi., 2007, Proceedings of the 16th International Conference on Parallel Architecture and Compilation Techniques, PACT '07, P189, DOI DOI 10.1109/PACT.2007.12
   Martin W. A., 1971, Computing Surveys, V3, P147, DOI 10.1145/356593.356594
   Musser DR, 1997, SOFTWARE PRACT EXPER, V27, P983, DOI 10.1002/(SICI)1097-024X(199708)27:8<983::AID-SPE117>3.0.CO;2-#
   Nickolls John, 2008, ACM Queue, V6, DOI 10.1145/1365490.1365500
   Pham D., 2005, 2005 IEEE International Solid-State Circuits Conference (IEEE Cat. No. 05CH37636), P184
   Purcell T., 2003, SIGGRAPHEUROGRAPHICS, P41
   Sanders P, 2004, LECT NOTES COMPUT SC, V3221, P784
   Satish N, 2009, INT PARALL DISTRIB P, P257
   Satish Nadathur, 2010, P 2010 ACM SIGMOD IN, P351, DOI DOI 10.1145/1807167.1807207
   Sintorn E, 2008, J PARALLEL DISTR COM, V68, P1381, DOI 10.1016/j.jpdc.2008.05.012
   Zhou Jingren, 2002, P 2002 ACM SIGMOD IN, P145, DOI DOI 10.1145/564691.564709
NR 28
TC 8
Z9 8
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2012
VL 42
IS 6
BP 753
EP 777
DI 10.1002/spe.1102
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 936NP
UT WOS:000303597500005
DA 2024-07-18
ER

PT J
AU Adachi, M
   Papadopoulos, Y
   Sharvia, S
   Parker, D
   Tohdo, T
AF Adachi, Masakazu
   Papadopoulos, Yiannis
   Sharvia, Septavera
   Parker, David
   Tohdo, Tetsuya
TI An approach to optimization of fault tolerant architectures using
   HiP-HOPS
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dependability analysis; fault tolerance; active safety; multi-objective
   optimization; genetic algorithms
ID COMPLEX-SYSTEMS; SAFETY ANALYSIS; SUPPORT
AB New processes for the design of dependable systems must address both cost and dependability concerns. They should also maximize the potential for automation to address the problem of increasing technological complexity and the potentially immense design spaces that need to be explored. In this paper we show a design process that integrates system modelling, automated dependability analysis and evolutionary optimization techniques to achieve the optimization of designs with respect to dependability and cost from the early stages. Computerized support is provided for difficult aspects of fault tolerant design, such as decision making on the type and location of fault detection and fault tolerant strategies. The process is supported by HiP-HOPS, a scalable automated dependability analysis and optimization tool. The process was applied to a Pre-collision system for vehicles at an early stage of its design. The study shows that HiP-HOPS can overcome the limitations of earlier work based on Reliability Block Diagrams by enabling dependability analysis and optimization of architectures that may have a network topology and exhibit multiple failure modes. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Papadopoulos, Yiannis; Sharvia, Septavera; Parker, David] Univ Hull, Kingston Upon Hull HU6 7RX, N Humberside, England.
   [Adachi, Masakazu] Toyota Cent Res & Dev Labs Inc, Aichi, Japan.
   [Tohdo, Tetsuya] Denso Corp, Aichi, Japan.
C3 University of Hull; Toyota Central R&D Labs Inc; DENSO
RP Papadopoulos, Y (corresponding author), Univ Hull, Kingston Upon Hull HU6 7RX, N Humberside, England.
EM Y.I.Papadopoulos@hull.ac.uk
RI Sharvia, Septavera/KRP-7609-2024; som, nie/JFK-6681-2023
OI Papadopoulos, Yiannis/0000-0001-7007-5153
FU DENSO CORPORATION in Japan; European Commission [224442, 260057]
FX This study was funded by the DENSO CORPORATION in Japan. The development
   of new features of the HiP-HOPS tool that supported this work was funded
   by the European Commission in the FP7 projects ATESST-2 (Grant 224442)
   and MAENAD (Grant 260057).
CR [Anonymous], 2007, DSN WORKSH ARCH DEP
   [Anonymous], INTERNATIONAL
   Arnold A., 1999, Fundamenta Informaticae, V40, P109
   Avizienis A, 1987, CSD870060 UCLA
   Bieber Pierre., 2004, BUILDING INFORM SOC, P505
   Bondavalli A, 1990, FAILURE CLASSIFICATI
   Bozzano M, 2003, LECT NOTES COMPUT SC, V2805, P208
   Bozzano M, 2006, ECAI RIVA GARD IT
   Chen DJ, 2008, LECT NOTES COMPUT SC, V5219, P72, DOI 10.1007/978-3-540-87698-4_9
   Cuenot P, 2007, LECT NOTES COMPUT SC, V4615, P39
   Di Natale M, 2010, P IEEE, V98, P603, DOI 10.1109/JPROC.2009.2039550
   Feiler P.H., 2006, The Architecture Analysis Design Language (AADL): An Introduction
   Feiler PH, 2007, CMUSEI2007TN043
   Fenelon P., 1994, ACM SIGAPP Applied Computing Review, V2, P21, DOI DOI 10.1145/381766.381770
   Goddard PL, 2000, P A REL MAI, P118, DOI 10.1109/RAMS.2000.816294
   Grunske L., 2006, 28th International Conference on Software Engineering Proceedings, P849, DOI 10.1145/1134285.1134431
   Grunske L, 2005, LECT NOTES COMPUT SC, V3489, P33
   Grunske L, 2006, INCOM 2006, P247
   Grunske L, 2007, LECT NOTES COMPUT SC, V4615, P188
   Grunske L, 2007, J SYST SOFTWARE, V80, P678, DOI 10.1016/j.jss.2006.08.014
   Grunske L, 2007, INT CONF QUANT EVAL, P119, DOI 10.1109/QEST.2007.18
   Güdemann M, 2007, LECT NOTES COMPUT SC, V4680, P465
   Haapanen P, 2002, 190 STUKYTOTR RAD NU
   Hamann R, 2008, ASME 27 INT C OFFSH
   Heimdahl M. P. E., 2005, Automated Software Engineering, V12, P321, DOI 10.1007/s10515-005-2642-x
   Johston BD, 1983, NONCOHERENT STRUCTUR, P16
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   Konak A, 2006, RELIAB ENG SYST SAFE, V91, P992, DOI 10.1016/j.ress.2005.11.018
   Kwiatkowska M, 2007, CONTROL ENG PRACT, V15, P1427
   Liming C, 1995, 25 INT S FAULT TOL C, P113
   Littlefield LJ, 2007, 26 DIG AV SYST C DAS, p2B1
   Littlewood B., 1973, Applied Statistics, V22, P332, DOI 10.2307/2346781
   Lutz R. R., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P42, DOI 10.1109/ISSRE.1999.809309
   Lyu MichaelR., 1995, Software Fault Tolerance
   Papadopoulos Y, 2005, J SYST SOFTWARE, V76, P77, DOI 10.1016/j.jss.2004.06.027
   Papadopoulos Y, 2001, IEE CONF PUBL, P53, DOI 10.1049/cp:20010498
   Papadopoulos Y, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P77, DOI 10.1109/DSN.2001.941393
   Papadopoulos Y, 2001, RELIAB ENG SYST SAFE, V71, P229, DOI 10.1016/S0951-8320(00)00076-4
   Papadopoulos Y, 1999, LECT NOTES COMPUT SC, V1698, P139
   Pumfrey DJ., 1986, THESIS U YORK
   Rauzy A, 2002, RELIAB ENG SYST SAFE, V78, P1, DOI 10.1016/S0951-8320(02)00042-X
   Reese JD, 1997, PROC INT CONF SOFTW, P250, DOI 10.1145/253228.253281
   Ristord L, 2002, CNRA CSNI WORKSH LIC, P37
   Romanovsky A, 2002, COMPUT SYST SCI ENG, V17, P159
   Sharvia S, 2008, P 17 WORLD C INT FED, P4138
   Torres-Pomales W., 2000, NASATM2000210616
   Walker M, 2009, SAE INT J PASSEN CAR, V2, P791, DOI 10.4271/2009-01-0738
   Walker M, 2009, CONTROL ENG PRACT, V17, P1115, DOI 10.1016/j.conengprac.2008.10.003
   Wallace M, 2005, ELECTRON NOTES THEOR, V141, P53, DOI 10.1016/j.entcs.2005.02.051
   Zeng W, 2007, J MIND COMPUTATION, V4, P403
NR 50
TC 20
Z9 22
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2011
VL 41
IS 11
BP 1303
EP 1327
DI 10.1002/spe.1044
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827RZ
UT WOS:000295446900007
DA 2024-07-18
ER

PT J
AU Schoofs, A
   Stanley-Marbell, P
AF Schoofs, Anthony
   Stanley-Marbell, Phillip
TI Portability in MAC protocol and transceiver software implementations for
   LR-WPAN platforms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE portability; medium access control (MAC) protocol; device driver;
   hardware abstraction; IEEE 802.15.4; LR-WPAN; wireless sensor networks
ID OPERATING SYSTEM; WIRELESS
AB In a variety of emerging networked computing system domains over the years, there have been bursts of activity on new medium access control (MAC) protocols, as new communication transceiver technologies with greater data-movement performance or lower power dissipation have been introduced. To enable implementations flexible to evolving standards and improving application-domain insight, such MAC protocols are typically initially implemented in software, and interface between applications or system software, typically executing on an embedded processor or microcontroller, and the evolving radio transceiver hardware. Many challenges exist in implementing MAC protocols across evolving or competing transceiver hardware implementations and processor architectures. Some of these challenges are peculiar to the requirements of MAC protocols, and others are a result of the plethora of system and processor architectures in the embedded systems domain. This article studies the challenges facing software implementations of MAC protocols running on embedded microcontrollers, and interfacing with radio transceiver hardware. Experience with an implementation of the IEEE 802.15.4 MAC across three hardware platforms with different processor, system, and systems software architectures is presented, focusing on implementation approach and interfaces. Pitfalls are pointed out, and guidelines are provided for ensuring that new MAC implementations are easily portable across processor architectures and transceiver hardware. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Schoofs, Anthony] Univ Coll Dublin, CLARITY Ctr Sensor Web Technol, Dublin 2, Ireland.
   [Stanley-Marbell, Phillip] IBM Res, Zurich, Switzerland.
C3 University College Dublin; International Business Machines (IBM)
RP Schoofs, A (corresponding author), Univ Coll Dublin, CLARITY Ctr Sensor Web Technol, Dublin 2, Ireland.
EM anthony.schoofs@ucd.ie
RI Stanley-Marbell, Phillip/AAH-9261-2020
OI Stanley-Marbell, Phillip/0000-0001-7752-2083
FU EU [IST-034963]; Science Foundation Ireland [WASP 07/CE/I1147]
FX We are grateful to Peter van der Stok for his contribution to the design
   of the task-based MAC implementation. Albert Rietema, Peter van der
   Meer, Elmahi Adam, and Tao Xu were instrumental in realizing the
   software implementation of the MAC. This work was supported by the EU
   IST program WASP IST-034963 and by Science Foundation Ireland under
   grant 07/CE/I1147.
CR [Anonymous], 2003, IEEE STD 802152 2003, P1, DOI [10.1109/IEEESTD.2003.94282, DOI 10.1109/IEEESTD.2003.94389]
   [Anonymous], CROSSBOW TELOSB MOTE
   AOUN M, 2009, EWSN 09 P 6 EUR C WI, P150
   Aoun M, 2008, SENSYS'08: PROCEEDINGS OF THE 6TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P419
   *ATM CORP, ATMEGA 128 8 BIT MIC
   *ATM CORP, AT86RF230 LOW POW 2
   Bhatti S, 2005, MOBILE NETW APPL, V10, P563, DOI 10.1007/s11036-005-1567-8
   Burgy L, 2007, SYM REL DIST SYST, P149, DOI 10.1109/SRDS.2007.26
   CONWAY CL, 2004, LCTES 04, P30
   Dunkels A, 2004, CONF LOCAL COMPUT NE, P455
   EIORGANICK, 1972, MULTICS SYSTEM EXAMI
   EL-HOIYDI A., 2003, P ACM SENSYS, P302
   *FREESC SEM, 2008, 802 15 4 MAC PHY SOF
   Hill JL, 2002, IEEE MICRO, V22, P12, DOI 10.1109/MM.2002.1134340
   Jamieson K, 2006, LECT NOTES COMPUT SC, V3868, P260
   *JENN CORP, 2006, CALC 802 15 4 DATA R
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Kohler E, 2000, ACM T COMPUT SYST, V18, P263, DOI 10.1145/354871.354874
   Kohler E, 1999, COMP COMM R, V29, P3, DOI 10.1145/316194.316200
   Levis P, 2005, AMBIENT INTELLIGENCE, P115
   McKusick Marshall Kirk, 1996, DESIGN IMPLEMENTATIO
   MERILLON F, 2000, OSDI 00 P 4 C S OP S, P2
   MIN R, 2003, SIGMOBILE MOBILE COM, V7, P65
   *NXP SEM, 2005, COOLFLUX DSP C PROGR
   OSTERLING F, 2008, P 5 ACM WORKSH EMB N
   OUWERKERK NEM, 2006, P BOD SENS NETW C BS
   PIKE R, 1995, COMPUT SYST, V8, P221
   Polastre J., 2004, SenSys '04, P95, DOI [DOI 10.1145/1031495.1031508, 10.1145/1031495.1031508]
   RHEE I, 2005, SENSYS 05, P90
   RITCHIE DM, 1974, COMMUN ACM, V17, P365, DOI 10.1145/361011.361061
   ROEVEN H, 2004, P GLOB SIGN PROC EXP
   SCHOOFS A, 2009, P 8 ACM IEEE INT C I
   Schoofs A, 2009, IEEE EMBED SYST LETT, V1, P24, DOI 10.1109/LES.2009.2028040
   Sooriyabandara M, 2008, COMPUT COMMUN, V31, P962, DOI 10.1016/j.comcom.2007.12.025
   *TEX INSTR INC, CC2430 TRUE SYST ON
   *TEX INSTR INC, CC2420 2 4 GHZ IEEE
   *TEX INSTR INC, MSP430 MIX SIGN MICR
   Van der Linden P., 1994, EXPERT C PROGRAMMING
   WESTERINK JHD, 2008, PHILIPS RES BOOK SER, V8
   Willmann R.D., 2007, P 29 ANN INT C IEEE
   WINTERBOTTOM P, 1997, BELL LABS TECH J, V2, P5
   Ye W, 2004, IEEE ACM T NETWORK, V12, P493, DOI 10.1109/TNET.2004.828953
   MOTEIV TMOTE SKY ULT
NR 43
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2011
VL 41
IS 4
BP 339
EP 361
DI 10.1002/spe.1008
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 731BH
UT WOS:000288080800001
OA Green Published
DA 2024-07-18
ER

PT J
AU Kvalnes, Å
   Johansen, D
   Halvorsen, P
   Griwodz, C
AF Kvalnes, Age
   Johansen, Dag
   Halvorsen, Pal
   Griwodz, Carsten
TI Support for enterprise consolidation of I/O bound services
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE service consolidation; hypervisor overheads; I/O performance rate
   limitations
AB In this article, we evaluate the performance effects of I/O bound workloads on a specific virtual machine, an important component of an enterprise cloud computing infrastructure. In particular, we demonstrate that (1) the I/O workload of one guest system may adversely affect the I/O performance of another for the XEN hypervisor and (2) the general I/O performance is degraded due to various overheads. Next, we have devised a light-weight, complementary, backwards-compatible alternative to hypervisor-based virtualization techniques called BONSAI. Our software provides low-overhead I/O performance isolation by transparently applying traffic shaping to system calls in a cost-effective manner. Using this system, I/O resource consumption can be controlled at a very fine granularity. Furthermore, using video streaming experiments, where we limit the I/O bandwidth available to each service, we show that we are able to achieve the required level of resource isolation on a per process basis with only a negligible CPU overhead and without reducing the I/O performance. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Kvalnes, Age; Johansen, Dag] Univ Tromso, Dept Comp Sci, N-9037 Tromso, Norway.
   [Kvalnes, Age; Johansen, Dag] Cornell Univ, Ithaca, NY USA.
   [Halvorsen, Pal; Griwodz, Carsten] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
   [Halvorsen, Pal; Griwodz, Carsten] Simula Res Lab, Sandvika, Norway.
C3 UiT The Arctic University of Tromso; Cornell University; University of
   Oslo
RP Kvalnes, Å (corresponding author), Univ Tromso, Dept Comp Sci, N-9037 Tromso, Norway.
EM aage@cs.uit.no
OI Halvorsen, Pal/0000-0003-2073-7029
CR ALMEIDA J, 1998, P ACM SIGMETRICS WOR, P91
   Barham P., 2003, Operating Systems Review, V37, P164, DOI 10.1145/1165389.945462
   BENAMEUR N, 2001, P 2 INT WORKSH QUAL, P69
   Bhatti N, 1999, IEEE NETWORK, V13, P64, DOI 10.1109/65.793694
   BHOJ P, 2000, HPL200061, P1
   BOEHM HJ, 1995, SOFTWARE PRACT EXPER, V25, P1315, DOI 10.1002/spe.4380251203
   Bruno J, 1998, PROCEEDINGS OF THE USENIX 1998 ANNUAL TECHNICAL CONFERENCE, P235
   Cheriton D. R., 1994, Proceedings of the First USENIX Symposium on Operating Systems Design and Implementation (OSDI), P179
   CHESS DM, 1981, IBM SYST J, V20, P424, DOI 10.1147/sj.204.0424
   Craciunas Silviu S., 2008, Operating Systems Review, V42, P44, DOI 10.1145/1400097.1400103
   Devin S., 1998, US Patent, Patent No. 6397242
   Engler D.R., 1995, S OPERATING SYSTEMS, P251
   Gopalan K, 2006, ACM T MULTIM COMPUT, V2, P258, DOI 10.1145/1201730.1201732
   Gupta D, 2006, LECT NOTES COMPUT SC, V4290, P342
   *HP UX, HP UX WORL MAN
   HYDEN E, 1994, THESIS U CAMBRIDGE C
   *IBM, 2007, IBM Z OS WORKL MAN
   JAMJOOM H, 2000, CSETR42700 U MICH, P1
   Johansen D., 2009, P 17 ACM INT C MULTI, P989
   JOHNSEN FT, 2007, P IEEE INT PERF COMP
   Jones MichaelB., 1997, P 16 ACM S OPERATING, P198, DOI DOI 10.1145/269005.266689
   KAPPNER T, 1994, IWACA 94, P34
   KIM K, 1997, P 5 INT IFIP WORKSH, P359
   Matthews J.N., 2007, Proceedings of the 2007 Workshop on Experimental Computer Science (ExpCS 2007), P6
   Menon Aravind., 2005, Proceedings of the 1st ACM/USENIX international conference on Virtual execution environments, VEE '05, P13
   Mercer C. W., 1994, Proceedings of the International Conference on Multimedia Computing and Systems (Cat. No.94TH0631-2), P90, DOI 10.1109/MMCS.1994.292439
   NURMI D, 2008, 200810 U CAL DEP COM, P1
   PERILLI A, AMAZON LAUNCHES XEN
   Rajagopalan M, 2005, I C DEPEND SYS NETWO, P358, DOI 10.1109/DSN.2005.23
   Rajkumar R., 1998, Proceedings of the SPIE/ACM Conference on Multimedia Computing and Networking, P150
   Seelam SR, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P105
   Soltesz Stephen, 2007, P 2 ACM SIGOPS EUROS, P275, DOI [10.1145/1272996.1273025, DOI 10.1145/1272996.1273025]
   VENKATRAMANT M, 1999, P IEEE INT C COMM IC, P1357
   Vin H. M., 1994, Proceedings ACM Multimedia '94, P33, DOI 10.1145/192593.192616
   Voigt T, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 2001 USENIX ANNUAL TECHNICAL CONFERENCE, P189
   Yu H., 2006, P 1 ACM SIGOPS EUROS, P333
   ZIMMERMAN R, 2003, P ACM MULT C, P75
   Zink M, 2001, IEEE SYMP COMP COMMU, P370, DOI 10.1109/ISCC.2001.935401
   SOLARIS RESOURCE MAN
NR 39
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2010
VL 40
IS 12
SI SI
BP 1035
EP 1051
DI 10.1002/spe.990
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677TZ
UT WOS:000284016000001
DA 2024-07-18
ER

PT J
AU Hong, S
   Kim, JC
   Moon, SM
   Shin, JW
   Lee, J
   Oh, HS
   Choi, HK
AF Hong, Sunghyun
   Kim, Jin-Chul
   Moon, Soo-Mook
   Shin, Jin Woo
   Lee, Jaemok
   Oh, Hyeong-Seok
   Choi, Hyung-Kyu
TI Client ahead-of-time compiler for embedded Java platforms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java ahead-of-time compiler; just-in-time compiler; relocation; early
   binding; Java virtual machine; J2ME CDC
AB Many embedded Java platforms execute two types of Java classes: those installed statically on the client device and those downloaded dynamically from service providers at run time. For achieving higher performance, the static Java classes can be compiled into machine code by ahead-of-time compiler (AOTC) in the server, and the translated machine code can be installed on the client device. Unfortunately, AOTC cannot be applicable to the dynamically downloaded classes. This paper proposes client-AOTC (c-AOTC), which performs AOTC on the client device using the just-in-time compiler (JITC) module installed on the device, obviating the JITC overhead and complementing the server-AOTC. The machine code of a method translated by JITC is cached on a persistent memory of the device, and when the method is invoked again in a later run of the program, the machine code is loaded and executed directly without any translation overhead. A major issue in c-AOTC is relocation because sonic of the address constants embedded in the cached machine code are not correct when the machine code is loaded and used in a different run; those addresses should be corrected before they are used. Constant pool resolution and inlining complicate the relocation problem, and we propose our solutions. The persistent memory overhead for saving the relocation information is also an issue, and we propose a technique to encode the relocation information and compress the machine code efficiently. We developed a c-AOTC on Sun's CDC VM reference implementation, and our evaluation results indicate that c-AOTC can improve the performance significantly, as much as an average of 12% for EEMBC and 4% for SpecJVM98, with a persistent memory overhead of 1% on average. Copyright (c) 2008 John Wiley & Sons, Ltd.
C1 [Hong, Sunghyun; Kim, Jin-Chul; Moon, Soo-Mook; Shin, Jin Woo; Lee, Jaemok; Oh, Hyeong-Seok; Choi, Hyung-Kyu] Seoul Natl Univ, Sch Elect Engn & Comp Sci, Seoul 151742, South Korea.
C3 Seoul National University (SNU)
RP Moon, SM (corresponding author), Seoul Natl Univ, Sch Elect Engn & Comp Sci, Seoul 151742, South Korea.
EM smoon@snu.ac.kr
FU Korean Government [KRF-2006-311-D00757]
FX Contract/grant sponsor Korean Government; contract/grant number
   KRF-2006-311-D00757
CR ADLTABATABAI A, 1998, P ACM SIGPLAN 1998 C
   [Anonymous], BD J BAS APPL LOG MO
   [Anonymous], P 12 WORKSH INT COMP
   Arnold M, 2005, ACM SIGPLAN NOTICES, V40, P297, DOI 10.1145/1103845.1094835
   Arnold M., 2000, P ACM SIGPLAN C OBJ
   AYCOCK J, 2003, ACM COMPUTING SURVEY, V35
   BAK L, Patent No. 6738969
   FULTON M, 2007, P 2007 INT S COD GEN
   *GNU, 2008, GNU COMP JAV PROGR L
   Gosling James, 1996, The Java Language Specification
   Grant B., 1999, P ACM SIGPLAN 1999 C
   Hong S, 2007, LCTES'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN-SIGBED CONFERENCE ON LANGUAGES, COMPILERS, AND TOOLS FOR EMBEDDED SYSTEMS, P63
   JOISHA P, 2001, P 15 INT C SUP SORR
   KIM JH, 2008, THESIS SEOUL NATL U
   Kim S., 2008, THESIS SEOUL NATL U
   KRALL A, 1998, P 1998 INT C PAR ARC
   KRINTZ C, 2003, P INT S COD GEN OPT
   MULLER G, 1997, P 3 USENIX C OBJ OR
   PROEBSTING TA, 1997, P 3 USENIX C OBJ OR
   Sandya SM, 2004, ACM SIGPLAN NOTICES, V39, P72, DOI 10.1145/1026474.1026485
   SERRANO M, 2000, P ACM C OBJ OR PROGR
   *STAND PERF EV COR, 2008, SPECJVM98
   STOODLEY M, 2008, REAL TIME JAVA 2
   *SUN MICR, 2008, JAVA ME TECHN MOB SE
   *SUN MICR, 2008, JAVA ME CONN DEV CON
   *SUN MICR, 2008, JAVA ME MOB INF DEV
   *SUN MICR, 2008, 185 JSR SUN MICR
   *SUN MICR, CDC APPL FRAM PERS M
   Sun Microsystems, 2002, PORT GUID CONN DEV C
   WEISS M, 1999, P ACM SIGPLAN WORKSH
   WILKES R, 2008, NGEN REVS YOUR PERFO
   ZHANG L, 2004, ACM SIGPLAN C LANG C
   2008, WIRELESS INTERNET PL
   2008, INTERACTIVE TV WEB
NR 34
TC 2
Z9 2
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR 10
PY 2009
VL 39
IS 3
BP 259
EP 278
DI 10.1002/spe.897
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 412EF
UT WOS:000263705700002
DA 2024-07-18
ER

PT J
AU Bovet, J
   Parr, T
AF Bovet, Jean
   Parr, Terence
TI ANTLRWorks: an ANTLR grammar development environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE parser; debugger; grammar development; GUI; rapid prototyping
ID LANGUAGES
AB Programmers tend to avoid using language tools, resorting to ad hoc methods, because tools can be hard to use, their parsing strategies can be difficult to understand and debug, and their generated parsers can be opaque black-boxes. In particular, there are two very common difficulties encountered by grammar developers: understanding why a grammar fragment results in a parser non-determinism and determining why a generated parser incorrectly interprets an input sentence. This paper describes ANTLRWorks, a complete development environment for ANTLR grammars that attempts to resolve these difficulties and, in general, make grammar development more accessible to the average programmer. The main components are a grammar editor with refactoring and navigation features, a grammar interpreter, and a domain-specific grammar debugger. ANTLRWorks' primary contributions are a parser non-determinism visualizer based on syntax diagrams and a time-traveling debugger that pays special attention to parser decision-making by visualizing lookahead usage and speculative parsing during backtracking. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Bovet, Jean] BEA Syst Inc, San Francisco, CA 94111 USA.
   [Parr, Terence] Univ San Francisco, Dept Comp Sci, San Francisco, CA 94117 USA.
C3 University of San Francisco
RP Bovet, J (corresponding author), BEA Syst Inc, 475 Sansome St, San Francisco, CA 94111 USA.
EM jbovet@bea.com
CR Aho A.V., 1986, COMPILERS
   Allman Tod, 2004, INT J TRANSLATION, V16
   [Anonymous], 2007, The Definitive ANTLR Reference: Building Domain-Specific Languages
   ATTALI I, 2001, ELECT NOTES THEORETI, V44, P225
   BERMUDEZ ME, 1990, J COMPUT SYST SCI, V41, P230, DOI 10.1016/0022-0000(90)90037-L
   Bhansali S., 2006, VEE 2006. Proceedings of the Second International Conference on Virtual Execution Environments, P154
   BRAVENBOER M, 2007, SCI COMPUTE IN PRESS
   CORDY J, 2006, TXL SOURCE TRANSFORM
   DALY M, 2006, SIGMOD C CHIC ILL, P727
   DEVA P, 2007, ANTLRSTUDIO
   EARLEY J, 1970, COMMUN ACM, V13, P94, DOI 10.1145/362007.362035
   Ellis MargaretA., 1990, The annotated C++ reference manual
   Ford B., 2002, SIGPLAN Notices, V37, P36, DOI 10.1145/583852.581483
   Ford Bryan., 2004, 31 ACM SIGPLAN SIGAC, P111, DOI DOI 10.1145/964001.964011
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   FRASER CW, 1992, LETT PROGRAMMING LAN, V1, P213
   Gagnon EM, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P140, DOI 10.1109/TOOLS.1998.711009
   GRIMM R, 2006, BETTER EXTENSIBILITY, P38
   Henriques PR, 2005, IEE P-SOFTW, V152, P54, DOI 10.1049/ip-sen:20041317
   JOHNSON SC, 1975, 32 A T BELL LAB
   Johnstone A, 2006, SCI COMPUT PROGRAM, V61, P228, DOI 10.1016/j.scico.2006.04.004
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   McPeak S, 2004, LECT NOTES COMPUT SC, V2985, P73
   MEYERELTZ D, TEXTTRANSFORMER
   Moreau PE, 2003, LECT NOTES COMPUT SC, V2622, P61
   Nederhof MJ, 2000, COMPUT LINGUIST, V26, P17, DOI 10.1162/089120100561610
   *NORKEN TECHN INC, 2007, PROGRAMMAR IDE
   OLIVIER P, 2000, FRAMEWORK DEBUGGING
   PARR T, 2007, STRINGTEMPLATE TEMPL
   PARR TJ, 1994, P INT C COMP CONSTR
   PARR TJ, 1993, THESIS PURDUE U W LA, P50
   Reps T.W., 1989, SYNTHESIZER GENERATO
   *SANDSTONE, 2007, VIS
   SLOANE AM, 1999, COMPILER CONSTRUCTIO
   VANDENBRAND M, 2001, LECT NOTES COMPUTER
   WOODS WA, 1970, COMMUN ACM, V13, P591, DOI 10.1145/355598.362773
   WU H, 2005, SAC 05, P1370
NR 37
TC 27
Z9 30
U1 0
U2 8
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2008
VL 38
IS 12
BP 1305
EP 1332
DI 10.1002/spe.872
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 369LC
UT WOS:000260695000005
DA 2024-07-18
ER

PT J
AU Skibinski, P
   Grabowski, S
   Swacha, J
AF Skibinski, Przemyslaw
   Grabowski, Szymon
   Swacha, Jakub
TI Effective asymmetric XML compression
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE extensible markup language; XML compression; XML encoding; text
   transform
AB The innate verbosity of the extensible markup language (XML) remains one of its main weaknesses, especially when large documents are concerned. This problem can be solved with the aid of dedicated XML compression algorithms.
   In this work, we describe XML word-replacing transform (XMI-WRT), a fast and fully reversible XML transform, which, when combined with generally used LZ77-style compression algorithms, allows to attain high compression ratios, comparable to those achieved by the current state-of-the-art XML compressors. The resulting compression scheme is asymmetric in the sense that its decoder is much faster than the coder. This is a desirable practical property, as in many XML applications data are read much more often than written. The key features of the transform are dictionary-based encoding of both document structure and content, separation of different content types into multiple streams, and dedicated encoding of specific patterns, including numbers and dates. T e test results show that the proposed transform improves the XML compression efficiency of general-purpose compressors on average by 35% in case of gzip, and 17% in case of LZMA. Compared with the current state-of-the-art SCMPPM algorithm, XML-WRT with LZMA attains over 2% better compression ratio, while being 55% faster. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Swacha, Jakub] Tech Univ Szczecin, Inst Informat Technol Management, PL-71101 Szczecin, Poland.
   [Skibinski, Przemyslaw] Univ Wroclaw, Inst Comp Sci, PL-50383 Wroclaw, Poland.
   [Grabowski, Szymon] Tech Univ Lodz, Dept Comp Engn, PL-90924 Lodz, Poland.
C3 West Pomeranian University of Technology; University of Wroclaw; Lodz
   University of Technology
RP Swacha, J (corresponding author), Tech Univ Szczecin, Inst Informat Technol Management, Mickiewicza 64, PL-71101 Szczecin, Poland.
EM jakubs@uoo.univ.szczecin.pl
RI Swacha, Jakub/AAC-8790-2020; Grabowski, Szymon/AAJ-2398-2021
OI Swacha, Jakub/0000-0002-2214-6989; Grabowski, Szymon/0000-0003-1714-1224
CR Adiego J, 2007, INFORM PROCESS MANAG, V43, P769, DOI 10.1016/j.ipm.2006.07.001
   Bray T., 2006, Extensible Markup Language (XML) 1.1 Specification, V2nd
   Cheney J, 2001, IEEE DATA COMPR CONF, P163, DOI 10.1109/DCC.2001.917147
   Cheney J, 2006, IEEE DATA COMPR CONF, P392
   CLEARY JG, 1984, IEEE T COMMUN, V32, P396, DOI 10.1109/TCOM.1984.1096090
   de Moura E., 1997, 4th South American Workshop on String Processing, P95
   Fallside D.C., 2004, XML SCHEMA 0, VSecond
   Ferragina P., 2006, WWW '06, P751, DOI DOI 10.1145/1135777.1135891
   *INT COMPR TECHN, 2000, XML XPRESS
   LEIGHTON G, 2005, THESIS ACADIA U WOLF
   Liefke Hartmut., 2000, P 2000 ACM SIGMOD IN, P153
   MIKLAU G, 2004, XML DATA REPOSITORY
   Ng W, 2006, WORLD WIDE WEB, V9, P5, DOI 10.1007/s11280-005-1435-2
   Ng W, 2006, KNOWL INF SYST, V10, P421, DOI 10.1007/s10115-006-0012-z
   Schindler M., 1997, Proceedings DCC '97. Data Compression Conference (Cat. No.97TB100108), DOI 10.1109/DCC.1997.582137
   Shkarin D, 2002, IEEE DATA COMPR CONF, P202, DOI 10.1109/DCC.2002.999958
   Skibinski P, 2005, SOFTWARE PRACT EXPER, V35, P1455, DOI 10.1002/spe.678
   SKIBINSKI P, 2007, XWRT PROGRAM VERSION
   SKIBINSKI P, 2007, P 9 INT C CADSM 2007, P323
   STORER JA, 1982, J ACM, V29, P928, DOI 10.1145/322344.322346
   Tolani PM, 2002, PROC INT CONF DATA, P225, DOI 10.1109/ICDE.2002.994712
   ZIV J, 1977, IEEE T INFORM THEORY, V23, P337, DOI 10.1109/TIT.1977.1055714
   2006, WIKIPEDIA DATABASES
NR 23
TC 8
Z9 10
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2008
VL 38
IS 10
BP 1027
EP 1047
DI 10.1002/spe.859
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 340DA
UT WOS:000258625100002
DA 2024-07-18
ER

PT J
AU Nishikimi, M
   Handa, K
   Takahashi, N
   Tomura, S
AF Nishikimi, M.
   Handa, K.
   Takahashi, N.
   Tomura, S.
TI When fonts do not know everything: an extensible system for multilingual
   text rendering
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multilingual text processing; computer typography; complex text layout;
   font; rendering
AB We have been developing a general-purpose multilingual text-processing library, which is designed to be extensible. The font layout table is a newly introduced resource that enables users to add support for drawing new scripts and languages. Font layout tables complement fonts; the knowledge required for complex text layout is stored in fonts and/or font layout tables. If a font contains, for example, ligature information, the corresponding font layout table describes the knowledge other than ligatures. A font layout table is used to convert a character code sequence into a glyph string to be displayed. It consists of rules, structured as cascaded stages, that may contain regular expressions and character categories. This combination enables flexible code sequence manipulation. In our multilingual text-processing library, the drawing module is script- and language-independent. It reads the necessary fonts and font layout tables on demand. Since font layout tables conceal the differences between font formats, the drawing module can handle fonts of different formats in a unified manner. This paper describes the problems in drawing multilingual text, several existing solutions to the problems and their drawbacks, and our solutions in detail. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Nishikimi, M.; Handa, K.; Takahashi, N.; Tomura, S.] Natl Inst Adv Ind Sci & Technol, Tsukuba, Ibaraki 3058568, Japan.
C3 National Institute of Advanced Industrial Science & Technology (AIST)
RP Nishikimi, M (corresponding author), Natl Inst Adv Ind Sci & Technol, 1-1-1 Umezono, Tsukuba, Ibaraki 3058568, Japan.
EM nisikimi@m17n.org
RI NISHIKIMI, MIKIKO/M-5452-2016; Takahashi, Naoto/Q-5387-2016; Handa,
   Kenichi/M-6348-2016
OI Takahashi, Naoto/0000-0002-3644-395X; Handa, Kenichi/0000-0002-2717-8971
CR *AD SYST INC, 2007, INTR OPENTYPE
   *APPL COMP INC, 2007, TRUE REF MAN
   *APPL COMP INC, 2007, REND UN TEXT ATSUI
   *APPL COMP INC, 2007, APPL ADV TYP FONTS
   *FREETYPE PROJ, 2007, FREE HIGH QUAL PORT
   GRAPHITE CS, 2000, P 17 INT UN C
   Kakugawa H, 2001, SOFTWARE PRACT EXPER, V31, P1487, DOI 10.1002/spe.424
   *MICR CORP, 2007, IND SHAP ENG WORKS
   *MICR CORP, 2007, WHAT IS TRUE TYP
   *MICR CORP, 2007, OPENTYPE SPEC
   *MICR CORP, 2007, OPENTYPE LAYOUT COMM
   *MICR CORP, 2007, UN
   NISHIKIMI M, 2004, P AS S NAT LANG PROC
   *UN CONS, 2003, UN STAND VERS 4 0
   2007, LIBOTF LIB HANDLING
NR 15
TC 0
Z9 0
U1 0
U2 6
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2008
VL 38
IS 1
BP 1
EP 31
DI 10.1002/spe.819
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 259JA
UT WOS:000252934400001
DA 2024-07-18
ER

PT J
AU Rönnblom, J
AF Ronnblom, Johan
TI High-error approximate dictionary search using estimate hash comparisons
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE edit distance; approximate; string matching; dictionary; hash
AB A method for finding all matches in a pre-processed dictionary for a query string q and with at most k differences is presented. A very fast constant-time estimate using hashes is presented. A tree structure is used to minimize the number of estimates made. Practical tests are performed, showing that the estimate can filter out 99% of the full comparisons for 40% error rates and dictionaries of up to four million words. The tree is found to be efficient up to a 50% error rate. Copyright (c) 2006 John Wiley & Sons, Ltd.
RP Rönnblom, J (corresponding author), Senapsgatan 12,Angered 424 43, Gothenburg, Sweden.
EM johan@ronnblom.net
CR *AMD CORP, 2002, AMD ATHL PROC X86 CO, P136
   Atkinson Kevin., 2005, GNU ASPELL
   Baeza-Yates R, 1998, STRING PROCESSING AND INFORMATION RETRIEVAL - PROCEEDINGS, P14, DOI 10.1109/SPIRE.1998.712978
   Chávez E, 2001, ACM COMPUT SURV, V33, P273, DOI 10.1145/502807.502808
   DIMOV DT, 1994, FRONTIERS HANDWRITIN, P323
   FALOUTSOS C, 1990, IEEE DATA ENG, V13, P25
   Fredriksson K, 2004, LECT NOTES COMPUT SC, V3246, P212
   GROSSI R, 1989, INFORM PROCESS LETT, V33, P113, DOI 10.1016/0020-0190(89)90188-9
   Hyyrö H, 2005, ALGORITHMICA, V41, P203, DOI 10.1007/s00453-004-1108-z
   Hyyro H, 2003, NORDIC J COMPUTING, V10, P1
   JOKINEN P, 1991, LECT NOTES COMPUT SC, V520, P240
   Jokinen P, 1996, SOFTWARE PRACT EXPER, V26, P1439, DOI 10.1002/(SICI)1097-024X(199612)26:12<1439::AID-SPE71>3.0.CO;2-1
   Myers G, 1999, J ACM, V46, P395, DOI 10.1145/316542.316550
   SHANG H, 1996, IEEE T KNOWL DATA EN, V8, P4
   [No title captured]
NR 15
TC 0
Z9 0
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2007
VL 37
IS 10
BP 1047
EP 1059
DI 10.1002/spe.797
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 198JW
UT WOS:000248625400002
OA Green Published
DA 2024-07-18
ER

PT J
AU Nieminen, J
   Kilpeläinen, P
AF Nieminen, Janne
   Kilpelainen, Pekka
TI Efficient implementation of Aho-Corasick pattern matching automata using
   Unicode
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE string pattern matching; Aho-Corasick; implementation; transition
   function
ID HASH FUNCTIONS; SPARSE TABLE; MACHINES; TIME
AB We study different efficient implementations of an Aho-Corasick pattern matching automaton when searching for patterns in Unicode text. Much of the previous research has been based on the assumption of a relatively small alphabet, for example the 7-bit ASCII. Our aim is to examine the differences in performance arising from the use of a large alphabet, such as Unicode that is widely used today. The main concern is the representation of the transition function of the pattern matching automaton. We examine and compare array, linked list, hashing, balanced tree, perfect hashing, hybrid, triple-array, and doublearray representations. For perfect hashing, we present an algorithm that constructs the hash tables in expected linear time and linear space. We implement the Aho-Corasick automaton in Java using the different transition function representations, and we evaluate their performance. Triple-array and doublearray performed best in our experiments, with perfect hashing, hashing, and balanced tree coming next. We discovered that the array implementation has a slow preprocessing time when using the Unicode alphabet. It seems that the use of a large alphabet can slow down the preprocessing time of the automaton considerably depending on the transition function representation used. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Kuopio, Dept Comp Sci, FI-70211 Kuopio, Finland.
C3 University of Eastern Finland
RP Nieminen, J (corresponding author), Univ Kuopio, Dept Comp Sci, POB 1627, FI-70211 Kuopio, Finland.
EM janne.nieminen@uku.fi
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   AHO AV, 1975, COMMUN ACM, V18, P333, DOI 10.1145/360825.360855
   ALLAUZEN C, 1999, 9911 U MARN VALL I G
   [Anonymous], LECT NOTES COMPUT SC
   AOE JI, 1992, INFORM SCIENCES, V64, P95, DOI 10.1016/0020-0255(92)90113-M
   ARIKAWA S, 1984, NEW GENERAT COMPUT, V2, P171, DOI 10.1007/BF03037101
   *B MCGINN MIN, 2002, KING JAM BIBL
   BOYER R, 1977, COMMUN ACM, V10, P62
   CARTER JL, 1979, J COMPUT SYST SCI, V18, P143, DOI 10.1016/0022-0000(79)90044-8
   CICHELLI RJ, 1980, COMMUN ACM, V23, P17, DOI 10.1145/358808.358813
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   DIETZFELBINGER M, 1988, P 29 IEEE S FDN COMP, P524
   FREDMAN ML, 1984, J ACM, V31, P538, DOI 10.1145/828.1884
   Gusfield Dan, 1997, Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology, DOI DOI 10.1017/CBO9780511574931
   Iglewicz B., 1993, DETECT HANDLE OUTLIE
   Knuth D. E., 1977, SIAM Journal on Computing, V6, P323, DOI 10.1137/0206024
   Lecroq T, 1998, SOFTWARE PRACT EXPER, V28, P561, DOI 10.1002/(SICI)1097-024X(19980425)28:5<561::AID-SPE170>3.0.CO;2-W
   MAOSONG S, 2003, P 20 INT C COMP PROC
   Motwani Rajeev, 1995, RANDOMIZED ALGORITHM
   Navarro G., 2002, FLEXIBLE PATTERN MAT
   Ngassam EK, 2005, INT J FOUND COMPUT S, V16, P1193, DOI 10.1142/S0129054105003753
   SPRUGNOLI R, 1977, COMMUN ACM, V20, P841, DOI 10.1145/359863.359887
   TARJAN RE, 1979, COMMUN ACM, V22, P606, DOI 10.1145/359168.359175
   *UN CONS MASS US, 2003, UN STAND VERS 4 0
   Wu S., 1994, FAST ALGORITHM MULTI
   2002, SUN DEV NETWORK BUG
NR 26
TC 6
Z9 10
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2007
VL 37
IS 6
BP 669
EP 690
DI 10.1002/spe.785
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 167CC
UT WOS:000246427300003
DA 2024-07-18
ER

PT J
AU Yang, JM
   Zhang, DF
   Yang, XD
   Li, WW
AF Yang, Jin-Min
   Zhang, Da-Fang
   Yang, Xue-Dong
   Li, Wen-Wei
TI Reliable user-level rollback recovery implementation for multithreaded
   processes on windows
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE rollback recovery; checkpointing scheme; multithread
AB The existing user-level checkpointing schemes support only a limited portion of multithreaded programs because they are derived from the schemes for single-threaded applications. This paper addresses the impact of thread suspension point on rollback recovery, and presents a checkpointing scheme for multithreaded processes. Unlike the existing schemes in which the checkpointer suspends every working thread, our scheme employs a distinctive strategy that every working thread suspends itself. This technique manages to avoid the suspension point in the API code or kernel code, ensuring correct rollback recovery. Our scheme supports inter-thread synchronization and thread lifetime. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Hunan Univ, Software Sch, Changsha 410082, Hunan Province, Peoples R China.
   Univ Regina, Dept Comp Sci, Regina, SK S4S 0A2, Canada.
C3 Hunan University; University of Regina
RP Yang, JM (corresponding author), Hunan Univ, Software Sch, Changsha 410082, Hunan Province, Peoples R China.
EM rj_jmyang@hnu.cn
RI Yang, Jie/JCD-9867-2023; YANG, Xue/HPI-0953-2023
CR BORG A, 1989, ACM T COMPUT SYST, V7, P1, DOI 10.1145/58564.58565
   CHEN YK, 2002, P 2002 IEEE INT C PA
   Chung PE, 1999, DIG PAP INT SYMP FAU, P220, DOI 10.1109/FTCS.1999.781053
   DIETER WR, 2001, P 2001 USENIX ANN TE
   DIETER WR, 1999, P 29 ANN S FAULT TOL
   Elnozahy EN, 2002, ACM COMPUT SURV, V34, P375, DOI 10.1145/568522.568525
   Friedman R, 2003, SYM REL DIST SYST, P319, DOI 10.1109/RELDIS.2003.1238083
   HUANG Y, 1993, P 23 INT S FAULT TOL, P2
   Huang YN, 1998, PROCEEDINGS OF THE 2ND USENIX WINDOWS NT SYMPOSIUM, P47
   Hunt Galen, 1999, P 3 USENIX WIND NT S
   Litzkow M., 1997, 1346 U WISC
   Napper J, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P425, DOI 10.1109/DSN.2003.1209953
   Nasika R., 2000, P 13 ISCA INT C PAR
   Pietrek M, 2002, MSDN MAG, V17, P80
   PLANK JS, 1995, PROCEEDINGS OF THE 1995 USENIX TECHNICAL CONFERENCE, P213
   Rao S, 1999, DIG PAP INT SYMP FAU, P48, DOI 10.1109/FTCS.1999.781033
   Srouji J, 1998, PROCEEDINGS OF THE 2ND USENIX WINDOWS NT SYMPOSIUM, P77
   ZHANG HY, 2001, J COMPUTER RES DEV, V38, P50
   ZHANG YH, 2001, INT WORKSH ADV PAR P, P19
   [No title captured]
   2003, INTERNET PARALLEL CO
NR 21
TC 3
Z9 4
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2007
VL 37
IS 3
BP 331
EP 346
DI 10.1002/spe.771
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 145ZS
UT WOS:000244904900005
DA 2024-07-18
ER

PT J
AU Starosolski, R
AF Starosolski, Roman
TI Simple fast and adaptive lossless image compression algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE lossless image compression; predictive coding; adaptive modeling;
   medical imaging; Golomb-Rice codes
AB In this paper we present a new lossless image compression algorithm. To achieve the high compression speed we use a linear prediction, modified Golomb-Rice code family, and a very fast prediction error modeling method. We compare the algorithm experimentally with others for medical and natural continuous tone grayscale images of depths of up to 16 bits. Its results are especially good for large images, for natural images of high bit depths, and for noisy images. The average compression speed on Intel Xeon 3.06 GHz CPU is 47 MB/s. For large images the speed is over 60 MB/s, i.e. the algorithm needs less than 50 CPU cycles per byte of image. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Silesian Tech Univ, Inst Comp Sci, PL-44100 Gliwice, Poland.
C3 Silesian University of Technology
RP Starosolski, R (corresponding author), Silesian Tech Univ, Inst Comp Sci, Akad 16, PL-44100 Gliwice, Poland.
EM roman.starosolski@polsl.pl
RI Starosolski, Roman/AAF-6974-2019
OI Starosolski, Roman/0000-0003-1322-3345
CR [Anonymous], 1997, 1210B1 CCSDS
   Carpentieri B, 2000, P IEEE, V88, P1797, DOI 10.1109/5.892715
   Christopoulos C, 2000, IEEE T CONSUM ELECTR, V46, P1103, DOI 10.1109/30.920468
   Clunie DA, 2000, PROC SPIE, V3980, P74, DOI 10.1117/12.386389
   Deng G., 1999, P IEEE INT C IM PROC, V4, P63
   GOLOMB SW, 1966, IEEE T INFORM THEORY, V12, P399, DOI 10.1109/TIT.1966.1053907
   HOWARD P, 1993, P DAT COMPR C, P351
   HUFFMAN DA, 1952, P IRE, V40, P1098, DOI 10.1109/JRPROC.1952.273898
   Langdon G., 1992, DCC '92. Data Compression Conference (Cat. No.92TH0436-6), P172, DOI 10.1109/DCC.1992.227464
   Li X, 2001, IEEE T IMAGE PROCESS, V10, P813, DOI 10.1109/83.923277
   Memon N, 1997, COMPUT J, V40, P127, DOI 10.1093/comjnl/40.2_and_3.127
   MEMON ND, 1995, P SOC PHOTO-OPT INS, V2418, P8, DOI 10.1117/12.204127
   Merhav N, 2000, IEEE T INFORM THEORY, V46, P121, DOI 10.1109/18.817513
   Moffat A, 1998, ACM T INFORM SYST, V16, P256, DOI 10.1145/290159.290162
   Pinho AJ, 2002, 2002 INTERNATIONAL CONFERENCE ON IMAGE PROCESSING, VOL II, PROCEEDINGS, P673
   PINHO AJ, 2002, P IEEE INT C MULT EX
   Rice R. F., 1979, JPL7922
   SANTACRUZ D, 2000, P 10 EUR SIGN PROC C, V2, P673
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Starosolski R., 1999, Machine Graphics & Vision, V8, P95
   Starosolski R., 2002, Studia Informatica, V23, P7
   Starosolski Roman, 2005, Proceedings of the SPIE - The International Society for Optical Engineering, V5959, p59590L, DOI 10.1117/12.624136
   Starosolski R., 2003, P INT C E HLTH COMM, P423
   STAROSOLSKI R, 2005, P SPIE MED IMAGING, V5959, P209
   *U BRIT COL SIGN P, 2004, SPMG JPEG LS IMPL VE
   *U NEW MEX MICR RE, 2004, SZIP SCI DAT LOSSL C
   Weinberger MJ, 2000, IEEE T IMAGE PROCESS, V9, P1309, DOI 10.1109/83.855427
   Weinberger MJ, 1996, DCC '96 - DATA COMPRESSION CONFERENCE, PROCEEDINGS, P140, DOI 10.1109/DCC.1996.488319
   WU X, 1998, IMPLEMENTATION CONTE
   Wu XL, 1997, IEEE T IMAGE PROCESS, V6, P656, DOI 10.1109/83.568923
   Wu XL, 1997, IEEE T COMMUN, V45, P437, DOI 10.1109/26.585919
NR 31
TC 36
Z9 39
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2007
VL 37
IS 1
BP 65
EP 91
DI 10.1002/spe.746
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 126KH
UT WOS:000243511300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Aldana, JF
   Roldán-Castro, M
   Navas, I
   Roldán-García, MM
   Hidalgo-Conde, M
   Trelles, O
AF Aldana, J. F.
   Roldan-Castro, M.
   Navas, I.
   Roldan-Garcia, M. M.
   Hidalgo-Conde, M.
   Trelles, O.
TI Bio-Broker:: a tool for integration of biological data sources and data
   analysis tools
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE biological mediation; biological dataflow; data analysis tools; XML
ID BIOINFORMATICS INFORMATION-SOURCES; PROTEIN; GENOMES
AB In this work we present an architecture for XML-based mediator systems and a framework for helping systems developers in the construction of mediator-services for the integration of heterogeneous data sources. A unique feature of our architecture is its capability to manage (proprietary) user's software tools and algorithms, modelled as Extended Value Added Services (EVASs), and integrated in the data flow. The mediator offers a view of the system as a single data source where EVASs are readily available for enhancing query processing. A Web-based graphic interface has been developed to allow dynamic and flexible EVASs inter-connection, thus creating complex distributed bioinformatics machines. The feasibility and usefulness of our ideas has been validated by the development of a mediator system (Bio-Broker) and by a diverse set of applications aimed at combining gene expression data with genomic, sequence-based and structural information, so as to provide a general, transparent and powerful solution that integrates data analysis tools and algorithms. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Malaga, ETSI Informat, Dept Arquitectura Comp, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Trelles, O (corresponding author), Univ Malaga, ETSI Informat, Dept Arquitectura Comp, Campus Teatinos, E-29071 Malaga, Spain.
EM ots@ac.uma.es
RI Navas-Delgado, Ismael/L-2838-2014; Roldán Castro, Manuel/L-6149-2014;
   Navas-Delgado, Ismael/HZH-9635-2023; Roldan-Garcia, Maria del
   Mar/L-8163-2014
OI Navas-Delgado, Ismael/0000-0001-7819-5416; Roldán Castro,
   Manuel/0000-0003-2869-4828; Navas-Delgado, Ismael/0000-0001-7819-5416;
   Roldan-Garcia, Maria del Mar/0000-0002-1470-2017; Trelles Salazar,
   Oswaldo/0000-0003-1554-8987
CR Abiteboul S., 1999, DATA WEB RELATIONS S
   ALDANA JF, 2002, P 7 INT C INT SOC KN
   ALDANA JF, 2001, MEM JORN IB ING REQ, P65
   Altschul SF, 1997, NUCLEIC ACIDS RES, V25, P3389, DOI 10.1093/nar/25.17.3389
   Bader GD, 2003, NUCLEIC ACIDS RES, V31, P248, DOI 10.1093/nar/gkg056
   Bairoch A, 2000, NUCLEIC ACIDS RES, V28, P45, DOI 10.1093/nar/28.1.45
   BARU C, 1998, P SPEC INT GROUP MAN, P597
   Berman HM, 2000, NUCLEIC ACIDS RES, V28, P235, DOI 10.1093/nar/28.1.235
   Biaudet V, 1997, COMPUT APPL BIOSCI, V13, P431
   BOURNE PE, 2003, STRUCTURAL BIOINFORM, P181
   Buttler D, 2002, SIGMOD REC, V31, P59, DOI 10.1145/637411.637421
   Dandekar T, 1998, BIOINFORMATICS, V14, P271, DOI 10.1093/bioinformatics/14.3.271
   Davidson S. B., 1997, International Journal on Digital Libraries, V1, P36
   de la Nava JG, 2003, BIOINFORMATICS, V19, P657, DOI 10.1093/bioinformatics/btg028
   FAHL G, 1993, P INT WORKSH NEXT GE, P47
   Garcia-Molina H., 1997, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V8, P117, DOI 10.1023/A:1008683107812
   GUPTA A, 2000, P 12 INT C SCI STAT
   Haas LM, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P276
   Kobayashi K, 2001, J BACTERIOL, V183, P7365, DOI 10.1128/JB.183.24.7365-7370.2001
   LANGE M, 2001, GERM C BIOINF
   LIU L, 2003, P 3 IEEE S BIOINF BI
   Pérez AJ, 2002, COMP FUNCT GENOM, V3, P423, DOI 10.1002/cfg.208
   *RDF SCHEM, 2000, RES DESCR FRAM SCHEM
   Rechenmann F, 2000, BIOINFORMATICS, V16, P411, DOI 10.1093/bioinformatics/16.5.411
   RODGRIGUEZMARTI.M, 2000, P ACM SIGMOD C MAN D, P213
   Rodríguez A, 2005, J AM SOC INF SCI TEC, V56, P493, DOI 10.1002/asi.20138
   Roth MT, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P266
   Sahuguet A, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P738
   SAMSON F, 2000, FUNCTIONAL ANAL BACT
   Stevens R, 2000, BIOINFORMATICS, V16, P184, DOI 10.1093/bioinformatics/16.2.184
   Tamames J, 1997, J MOL EVOL, V44, P66, DOI 10.1007/PL00006122
   Tomasic A, 1996, INT CON DISTR COMP S, P449, DOI 10.1109/ICDCS.1996.507993
   Wang LC, 2002, BIOINFORMATICS, V18, P1147, DOI 10.1093/bioinformatics/18.8.1147
   Xenarios I, 2002, NUCLEIC ACIDS RES, V30, P303, DOI 10.1093/nar/30.1.303
   *XML SCHEM, 2001, W3C REC
NR 35
TC 7
Z9 7
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2006
VL 36
IS 14
BP 1585
EP 1604
DI 10.1002/spe.733
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 103SA
UT WOS:000241905800004
DA 2024-07-18
ER

PT J
AU Gomez, JC
   Ramos, JR
   Rego, V
AF Gomez, JC
   Ramos, JR
   Rego, V
TI Signals, timers, and continuations for multithreaded user-level
   protocols
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE timers; continuations; multithreading; parallel protocols; user-level
   protocols; asynchronous
ID THREADS
AB Precise timing and asynchronous I/O are appealing features for many applications. Unix kernels provide such features on a per-process basis, using signals to communicate asynchronous events to applications. Per-process signals and timers are grossly inadequate for complex multithreaded applications that require per-thread signals and timers that operate at finer granularity. To respond to this need, we present a scheme that integrates asynchronous (Unix) signals with user-level threads, using the ARIADNE system as a platform. This is done with a view towards support for portable, multithreaded, and multiprotocol distributed applications, namely the CLAM (connectionless, lightweight, and multiway) communications library. In the same context, we propose the use of continuations as an efficient mechanism for reducing thread context-switching and busy-wait overheads in multithreaded protocols. Our proposal for integrating timers and signal-handling mechanisms not only solves problems related to race conditions, but also offers an efficient and flexible interface for timing and signalling threads. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
   IBM Res, San Jose, CA 95119 USA.
C3 Purdue University System; Purdue University; International Business
   Machines (IBM)
RP Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
EM rego@cs.purdue.edu
CR ANDERSON TE, 1992, ACM T COMPUT SYST, V10, P53, DOI 10.1145/146941.146944
   Buskens RW, 1997, BELL LABS TECH J, V2, P151, DOI 10.1002/bltj.2053
   DEAN RW, 1993, PROCEEDINGS OF THE USENIX MACH III SYMPOSIUM, P137
   DRAVES RP, 1991, P 13 ACM S OP SYST P, P122
   GOMEZ J, 1997, LECT NOTES COMPUTER, V1119, P227
   Gomez JC, 1997, J PARALLEL DISTR COM, V40, P103, DOI 10.1006/jpdc.1996.1269
   Gomez JC, 1998, IEEE T PARALL DISTR, V9, P36, DOI 10.1109/71.655241
   HOLBROOK H, 1995, COMPUT COMMUN REV, V25, P328
   Jacobson V., 1988, Computer Communication Review, V18, P314, DOI 10.1145/52325.52356
   JACOBSON V, 1997, P IEEE INFOCOM 97
   Jain R., 1990, IEEE Network, V4, P24, DOI 10.1109/65.56532
   Karn P., 1987, Computer Communication Review, V17, P2, DOI 10.1145/55483.55484
   Kleiman S, 1996, PROGRAMMING THREADS
   Mascarenhas E, 1998, CONCURRENCY-PRACT EX, V10, P673, DOI 10.1002/(SICI)1096-9128(19980810)10:9<673::AID-CPE362>3.0.CO;2-5
   Mascarenhas E, 1996, SOFTWARE PRACT EXPER, V26, P327, DOI 10.1002/(SICI)1097-024X(199603)26:3<327::AID-SPE12>3.0.CO;2-H
   Nahum E. M., 1994, Proceedings of the First USENIX Symposium on Operating Systems Design and Implementation (OSDI), P125
   PAUL S, 1996, P IEEE INFOCOM 96
   Sanghi D., 1990, Internetworking: Research and Experience, V1, P77
   VARGHESE G, 1987, ACM SIGOPS OPER SYST, V21, P25
   Wallach D.A., 1995, P 5 ACM SIGPLAN S PR, P217
   YATES D, 1996, P ACM SIGMETRICS 199
   ZHANG L, 1986, COMPUT COMMUN, V16, P397
NR 22
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2006
VL 36
IS 5
BP 449
EP 471
DI 10.1002/spe.700
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 040WB
UT WOS:000237410500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pereira, FAQ
   Valente, ATO
   Bigonha, RS
   Bigonha, MAS
AF Pereira, FAQ
   Valente, ATO
   Bigonha, RS
   Bigonha, MAS
TI Arcademis: a framework for object-oriented communication middleware
   development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE frameworks; communication middleware; distributed systems
AB This paper presents Arcademis, a Java-based framework for communication middleware development. Arcademis consists of a set of abstract classes, interfaces and concrete components that define the general architecture of middleware systems. Its main objective is to support the implementation of non-monolithic and easily configurable middleware platforms. Areademis can be used by middleware developers to deploy systems that meet the requirements of a particular network or technology. Instances of Arcademis can also be customized by distributed systems engineers to meet the requirements of a particular application. For example, new transport protocols, connection management policies, authentication algorithms or invocation semantics can be easily configured in middleware platforms derived from Areademis. In order to illustrate the use of the framework, the paper describes the RME system, a middleware derived from Arcademis that adds a remote method invocation service to the CLDC configuration of Java 2 Micro Edition (J2ME). Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Catholic Univ Minas Gerais PUC Minas, Dept Comp Sci, BR-30535610 Belo Horizonte, MG, Brazil.
   Univ Fed Minas Gerais, Dept Comp Sci, BR-31270010 Belo Horizonte, MG, Brazil.
C3 Pontificia Universidade Catolica de Minas Gerais; Universidade Federal
   de Minas Gerais
RP Catholic Univ Minas Gerais PUC Minas, Dept Comp Sci, BR-30535610 Belo Horizonte, MG, Brazil.
EM mtov@pucminas.br
RI Bigonha, Mariza/ABE-3200-2020; Bigonha, Mariza/AAK-5829-2020
OI Bigonha, Mariza/0000-0002-3471-0452; Valente, Marco
   Tulio/0000-0002-8180-7548
CR [Anonymous], 2000, PATTERN ORIENTED SOF
   [Anonymous], MICROSOFT NET REMOTI
   Blair G., 2001, IEEE DISTRIBUTED SYS, V2
   Campadello S, 2000, FOURTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE - PROCEEDINGS, P114, DOI 10.1109/EDOC.2000.882351
   Champion M., 2002, WEB SERVICES ARCHITE
   COULOURIS G, 1996, DISTRIBUTED SYSTEMS, V1
   Coulson G, 2002, DISTRIB COMPUT, V15, P109, DOI 10.1007/s004460100064
   EMMERICH W., 2000, P C FUTURE SOFTWARE, P117, DOI DOI 10.1145/336512.336542
   Gamma Erich., 1994, DESIGN PATTERNS
   Geihs K, 2001, COMPUTER, V34, P24, DOI 10.1109/2.928618
   Gribble SD, 2001, COMPUT NETW, V35, P473, DOI 10.1016/S1389-1286(00)00179-1
   Johnson RE, 1997, COMMUN ACM, V40, P39, DOI 10.1145/262793.262799
   Kon F, 2002, COMMUN ACM, V45, P33, DOI 10.1145/508448.508470
   Kon F, 2000, P IFIP ACM INT C DIS
   LEDOUX T, 1999, LECT NOTES COMPUTER, V1616, P197
   *OMG, 1999, 991007 OMG
   Perelstein M, 2004, J HIGH ENERGY PHYS
   Riggs R., 2001, Programming for wireless devices with the java platform
   ROMAN M, 2000, P IFIP ACM MIDDL 200, P1
   Roman M, 2001, IEEE DISTRIBUTED SYS, V2
   ROMAN M, 2004, P 5 ACM IFIP USENIX, P372
   Schantz R.E., 2001, MIDDLEWARE DISTRIBUT
   SCHMIDT D, 1999, IEEE COMMUNICATIONS, V16, P54, DOI DOI 10.1109/35.755450
   Singhai A, 1998, INT CON DISTR COMP S, P192, DOI 10.1109/ICDCS.1998.679502
   *SUN MICR, 2003, JAV REM METH INV SPE
   *SUN MICR INC, 2003, RMI OPT PACK SPEC VE
   Wollrath A, 1996, PROCEEDINGS OF THE SECOND USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS), P219
NR 27
TC 7
Z9 7
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2006
VL 36
IS 5
BP 495
EP 512
DI 10.1002/spe.706
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 040WB
UT WOS:000237410500003
DA 2024-07-18
ER

PT J
AU Milne, I
   Rowe, G
AF Milne, I
   Rowe, G
TI Interpreting computer code in a computer-based learning system for
   novice programmers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE interpretation; Java; C plus; software visualization; novices
AB Although the principles of writing compilers and interpreters are well known, we have found that the ideas needed to develop an interpreter for the express purpose of allowing direct interaction with the running code do not yet appear to have been published in an academic context. We describe a programming method that can be used for the production of an interpreter for common object-oriented languages such as C++, Java and C#. The main purpose of the interpreter is to parse short, relatively simple programs and allow direct interaction between the user and the running code. Such a system is useful for projects such as OGRE, which is an educational tool allowing students to visualize in three-dimensional graphics the state of a program as it runs. The interpreter works by first parsing the source code and building up a data structure capable of representing the program's source code in a form that can be used to both run the program and extract detailed information from the running program. This extraction allows for novel uses of the interpreter, such as forming the basis for a visualization system that must display and provide such information to the user as they watch their executing program. This paper considers the construction of such an interpreter specifically for C++, but the principles should be the same for other similar languages such as Java and C#. We cover the main tasks required of the programmer to create and use the data structure, highlighting areas such as its design, initial construction during parsing, and techniques required to use it for interpretation. These include the ability for the data structure to intelligently clone subsets of itself when multiple copies of one of its elements are required by the running program, how it handles C++'s complicated function overloading and overriding rules, and how inheritance and polymorphism can be supported. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Dundee, Dept Appl Comp, Dundee DD1 4HN, Scotland.
C3 University of Dundee
RP Milne, I (corresponding author), Univ Dundee, Dept Appl Comp, Dundee DD1 4HN, Scotland.
EM imilne@computing.dundee.ac.uk
RI Milne, Iain/A-3614-2010
OI Milne, Iain/0000-0002-4126-0859
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], ED INFORM TECHNOLOGI
   Anton Ertl M., 2003, The Journal of Instruction-Level Parallelism, V5, P1
   BROWN MH, 1988, COMPUTER, V21, P14, DOI 10.1109/2.56
   De Pauw W, 1998, LECT NOTES COMPUT SC, V1543, P541
   DOMINGUE J, 1997, P 8 WORLD C ART INT
   Eckel B., 2000, THINKING C
   Ertl MA, 2002, SOFTWARE PRACT EXPER, V32, P265, DOI 10.1002/spe.434
   HOLUB AI, 1990, COMPILER DESIGN C
   Mak Ronald., 1996, Writing Compilers and Interpreters, An Applied Approach Using C++, VSecond
   Milne I., 2002, Education and Information Technologies, V7, P55, DOI 10.1023/A:1015362608943
   STROUSTROP B, 1997, C PROGRAMMING LANGUA
   Ungar D, 1997, COMMUN ACM, V40, P38, DOI 10.1145/248448.248457
NR 13
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2005
VL 35
IS 15
BP 1477
EP 1493
DI 10.1002/spe.680
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 991UU
UT WOS:000233840400004
DA 2024-07-18
ER

PT J
AU Svahnberg, M
   van Gurp, J
   Bosch, J
AF Svahnberg, M
   van Gurp, J
   Bosch, J
TI A taxonomy of variability realization techniques
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE variability; software product families; development process; software
   architecture; variability realization techniques
ID SOFTWARE
AB Development of software product families relies heavily on the use of variability to manage the differences between products by delaying design decisions to later stages of the development and usage of the constructed software systems. Implementation of variability is not a trivial task, and is governed by a number of factors. In this paper, we describe the factors that are relevant in determining how to implement variability, and present a taxonomy of variability realization techniques. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Blekinge Inst Technol, Dept Syst & Software Engn, SE-37225 Ronneby, Sweden.
   GX Creat Online Dev BV, NL-6538 SW Nijmegen, Netherlands.
   Univ Groningen, Dept Math & Comp Sci, NL-9700 AV Groningen, Netherlands.
C3 Blekinge Institute Technology; University of Groningen
RP Blekinge Inst Technol, Dept Syst & Software Engn, Box 520, SE-37225 Ronneby, Sweden.
EM mikael.svahnberg@bth.se
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1997, COMPONENT SOFTWARE O
   [Anonymous], 2000, SOFTWARE ARCHITECTUR
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   BACHMANN F, 2001, P 2001 S SOFTW REUS, P126
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Becker M, 2002, LECT NOTES COMPUT SC, V2290, P294
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   Bosch J, 1999, INFORM SOFTWARE TECH, V41, P257, DOI 10.1016/S0950-5849(99)00007-5
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Capilla R, 2002, LECT NOTES COMPUT SC, V2290, P319
   Clements P., 2002, Software product lines
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   DIJKSTRA EW, 1970, SOFTWARE ENG TECHNIQ, P84
   DIKEL D, 1997, IEEE COMPUTER    AUG, P49
   DONOHOE P, 2000, P 1 SOFTW PROD LIN C
   Feare T., 2001, Modern Materials Handling, V56, P55
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   GRISS ML, 2000, LECT NOTES COMPUTER, V1844
   *IEEE, 14712000 IEEE
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   JARING M, 2002, LECT NOTES COMPUTER, V2379
   Jarzabek S, 2003, PROC INT CONF SOFTW, P810, DOI 10.1109/ICSE.2003.1201298
   KANG KC, 1998, ANN SOFTW ENG, V5, P345
   KANG KC, 1990, CMUSEI90TR21 SOFTW E
   KAPLAN M, 1996, P INT C OBJ OR PROGR
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   LAI CTR, 1999, SOFTWARE PRODUCT LIN
   LIEBERMAN H, 1986, SIGPLAN NOTICES, V21, P214, DOI 10.1145/960112.28718
   Mattsson M., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P139, DOI 10.1109/ICSM.1999.792597
   Mattsson M, 1999, TOOLS, V29, P118, DOI 10.1109/TOOLS.1999.779005
   MATTSSON M, 2000, THESIS BLEKINGE I TE
   McIlroy M.D., 1969, Software Engineering Concepts and Techniques, P88
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   OESCHGER I, XULNOTES XUL BESTIAL
   OUSTERHOUT JK, 1998, IEEE COMPUT, V31, P23
   Parnas D. L., 1978, 3rd International Conference on Software Engineering, P264
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   PREHOFER C, 1997, LECT NOTES COMPUTER, V1241
   Rine DC, 2000, INFORM SOFTWARE TECH, V42, P47, DOI 10.1016/S0950-5849(99)00055-5
   Rine DC, 1998, J SYST SOFTWARE, V41, P17, DOI 10.1016/S0164-1212(97)10003-6
   Salicki S, 2002, LECT NOTES COMPUT SC, V2290, P304
   Svahnberg M., 1999, Proceedings of the 3rd Annual IASTED International Conference Software Engineering and Applications (SEA'99), P92
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   SVAHNBERG M, 2002, LECT NOTES COMPUTER, V2290
   SVAHNBERG M, 2001, BTHRES0201SE
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   VANGURP J, 2001, P WORK IEEE IFIP C S
   VANOMMERING R, 2002, BUILDING RELIABLE CO
   Wallnau K., 2002, Building systems from commercial components
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 54
TC 184
Z9 199
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2005
VL 35
IS 8
BP 705
EP 754
DI 10.1002/spe.652
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 941NP
UT WOS:000230221800001
DA 2024-07-18
ER

PT J
AU Chen, JC
AF Chen, JC
TI Building a new sort function for a C library
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Proportion Extend Sort; sorting algorithms performance tuning; algorithm
   design and implementation
AB Up to now, the most efficient sort function for a C library was a variant of Hoare's Quicksort (qsort, for short), which was proposed by Bentley and McIlroy in the early 1990s. Here we call this library function BM qsort. This paper introduces a library function which is based on Chen's Proportion Extend Sort (psort). This work is inspired by the fact that psort is generally faster than qsort, and in the worst case, qsort requires O(n(2)) comparisons, while psort requires O(n log n). In our library function, many tricks used in BM qsort have been adopted, such as sorting a small array by an insertion sort and the handling of equal elements. Some new tricks are also proposed, however, such as the adaptive partitioning scheme. To assess more effectively the behavior of our function, the test cases are enhanced. The empirical results show that our function is robust and faster than BM qsort. On particular classes of inputs, such as 'already sorted', it is linear time. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 DongHua Univ, Dept Commun, Shanghai 200051, Peoples R China.
C3 Donghua University
RP Chen, JC (corresponding author), DongHua Univ, Dept Commun, 1882 Yan An W Rd, Shanghai 200051, Peoples R China.
EM chen-jc@dhu.edu.cn
CR BENTLEY JL, 1993, SOFTWARE PRACT EXPER, V23, P1249, DOI 10.1002/spe.4380231105
   Chen JC, 2001, SIAM J COMPUT, V31, P323, DOI 10.1137/S0097539798342903
   CHEN JC, 1996, NORDIC J COMPUTING, V3, P271
   HOARE CAR, 1962, COMPUT J, V5, P10, DOI 10.1093/comjnl/5.1.10
   Knuth D.E., 1975, SORTING SEARCHING, V3
   MANNILA H, 1985, IEEE T COMPUT, V34, P318, DOI 10.1109/TC.1985.5009382
   McIlroy MD, 1999, SOFTWARE PRACT EXPER, V29, P341, DOI 10.1002/(SICI)1097-024X(19990410)29:4<341::AID-SPE237>3.0.CO;2-R
   MCILROY P, 1993, PROCEEDINGS OF THE FOURTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P467
   Moffat A, 1996, SOFTWARE PRACT EXPER, V26, P781, DOI 10.1002/(SICI)1097-024X(199607)26:7<781::AID-SPE35>3.0.CO;2-B
   PETERSSON O, 1995, DISCRETE APPL MATH, V59, P153, DOI 10.1016/0166-218X(93)E0160-Z
NR 10
TC 4
Z9 4
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2004
VL 34
IS 8
BP 777
EP 795
DI 10.1002/spe.593
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 834SS
UT WOS:000222431700004
DA 2024-07-18
ER

PT J
AU Huedo, E
   Montero, RS
   Llorente, IM
AF Huedo, E
   Montero, RS
   Llorente, IM
TI A framework for adaptive execution in grids
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Grid technology; adaptive execution; job migration; Globus
AB Grids offer a dramatic increase in the number of available processing and storing resources that can be delivered to applications. However, efficient job submission and management continue being far from accessible to ordinary scientists and engineers due to their dynamic and complex nature. This paper describes a new Globus based framework that allows an easier and more efficient execution of jobs in a 'submit and forget' fashion. The framework automatically performs the steps involved in job submission and also watches over its efficient execution. In order to obtain a reasonable degree of performance, job execution is adapted to dynamic resource conditions and application demands. Adaptation is achieved by supporting automatic application migration following performance degradation, 'better' resource discovery, requirement change, owner decision or remote resource failure. The framework is currently functional on any Grid testbed based on Globus because it does not require new system software to be installed in the resources. The paper also includes practical experiences of the behavior of our framework on the TRGP and UCM-CAB testbeds. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Complutense, Fac Informat, Dept Arquitectura Comp, E-28040 Madrid, Spain.
   CSIC, Ctr Astrobiol, INTA, NASA Astrobiol Inst, Torrejon de Ardoz 28850, Spain.
C3 Complutense University of Madrid; Consejo Superior de Investigaciones
   Cientificas (CSIC); CSIC - Centro de Astrobiologia (INTA)
RP Univ Complutense, Fac Informat, Dept Arquitectura Comp, Avd Complutense S-N, E-28040 Madrid, Spain.
EM rubensm@dacya.ucm.es
RI Huedo, Eduardo/B-6894-2008; Martin Llorente, Ignacio/B-2093-2009;
   Montero, Ruben/C-5346-2008
OI Huedo, Eduardo/0000-0002-2227-2491; Martin Llorente,
   Ignacio/0000-0001-6230-8180; Montero, Ruben/0000-0003-2591-1719
CR Abramson D, 2002, FUTURE GENER COMP SY, V18, P1061, DOI 10.1016/S0167-739X(02)00085-7
   Allen G, 2001, FIRST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P130, DOI 10.1109/CCGRID.2001.923185
   ALLEN G, 2001, 9 IEEE INT S HIGH PE
   ALLEN G, 2002, BYTE, V24, P24
   ALLEN G, 2001, P SUP 2001 SC2001 DE
   ALLEN G, 2001, LECT NOTES COMPUTER
   [Anonymous], 1999, GRID BLUEPRINT NEW C
   Baker M, 2002, SOFTWARE PRACT EXPER, V32, P1437, DOI 10.1002/spe.488
   Berman F, 2001, INT J HIGH PERFORM C, V15, P327, DOI 10.1177/109434200101500401
   BUYYA R, 2000, P 4 IEEE INT C HIGH
   Casanova H., 2000, Proceedings 9th Heterogeneous Computing Workshop (HCW 2000) (Cat. No.PR00556), P349, DOI 10.1109/HCW.2000.843757
   CASANOVA H, 2000, P SUP 2000 SC2000 DA
   Cirne W, 2003, IEEE T PARALL DISTR, V14, P181, DOI 10.1109/TPDS.2003.1178881
   Dail H, 2003, J PARALLEL DISTR COM, V63, P505, DOI 10.1016/S0743-7315(03)00011-X
   Dail Holly., 2002, SUPERCOMPUTING 02, P1
   EVERS X, 1993, DUTTWI93104
   Foster I, 1997, INT J SUPERCOMPUT AP, V11, P115, DOI 10.1177/109434209701100205
   Frey J., 2002, Cluster Computing, V5, P237, DOI 10.1023/A:1015617019423
   HUEDO E, IN PRESS LECT NOTES
   KENNEDY K, 2002, P NSF NEXT GEN SYST
   Krauter K, 2002, SOFTWARE PRACT EXPER, V32, P135, DOI 10.1002/spe.432
   LANFERMANN G., 2001, P 10 S HIGH PERF DIS
   Liu C, 2002, 11TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P63, DOI 10.1109/HPDC.2002.1029904
   Montero RS, 2001, J COMPUT PHYS, V173, P412, DOI 10.1006/jcph.2001.6863
   Petitet A, 2001, INT J HIGH PERFORM C, V15, P359, DOI 10.1177/109434200101500403
   PRIETO M, 2001, J PARALLEL DISTRIBUT, V199, P543
   RIBLER RL, 1998, P 7 IEEE INT S HIGH
   SCHOPF JM, SCI PROGRAMMING GRID, V10, P103
   SCHOPF JM, 2003, GRID RESOURCE MANAGE, pCH2
   Vadhiyar SS, 2003, CCGRID 2003: 3RD IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P130, DOI 10.1109/CCGRID.2003.1199361
   Vadhiyar SS, 2002, 11TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P343, DOI 10.1109/HPDC.2002.1029934
   VRAALSEN F, 2001, LECT NOTES COMPUTER, V2242, P154
   Wolski R, 1999, FUTURE GENER COMP SY, V15, P757, DOI 10.1016/S0167-739X(99)00025-4
   WOLSKI R, 1999, P SUP SC99 PORTL OR
   Yarrow M, 2001, LECT NOTES COMPUT SC, V1971, P146
NR 35
TC 139
Z9 151
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2004
VL 34
IS 7
BP 631
EP 651
DI 10.1002/spe.584
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825SB
UT WOS:000221777500002
DA 2024-07-18
ER

PT J
AU Milenkovic, M
   Milenkovic, A
   Kulick, J
AF Milenkovic, M
   Milenkovic, A
   Kulick, J
TI Microbenchmarks for determining branch predictor organization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler optimizations; microbenchmarks; branch predictor; performance
   monitoring
AB In order to achieve an optimum performance of a given application on a given computer platform, a program developer or compiler must be aware of computer architecture parameters, including those related to branch predictors. Although dynamic branch predictors are designed with the aim of automatically adapting to changes in branch behavior during program execution, code optimizations based on the information about predictor structure can greatly increase overall program performance. Yet, exact predictor implementations are seldom made public, even though processor manuals provide valuable optimization tips.
   This paper presents an experimental flow with a series of microbenchmarks that determine the organization and size of a branch predictor using on-chip performance monitoring registers. Such knowledge can be used either for manual code optimization or for design of new, more architecture-aware compilers. Three examples illustrate how insight into exact branch predictor organization can be directly applied to code optimization. The proposed experimental flow is illustrated with microbenchmarks tuned for Intel Pentium III and Pentium 4 processors, although they can easily be adapted for other architectures. The described approach can also be used during processor design for performance evaluation of various branch predictor organizations and for testing and validation during implementation. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Alabama, Dept Elect & Comp Engn, Huntsville, AL 35899 USA.
C3 University of Alabama System; University of Alabama Huntsville
RP Univ Alabama, Dept Elect & Comp Engn, 301 Sparkman Dr, Huntsville, AL 35899 USA.
EM milenka@ece.uah.edu
RI Milenkovic, Aleksandar/C-5593-2011; Milenkovic, Melita/KUD-3372-2024
OI Milenkovic, Aleksandar/0000-0002-9359-4594; 
CR Aleksandar MilenaMilenkovic., 2002, WORKSHOP DUPLICATING, P52
   [Anonymous], 2003, Computer Architecture
   Coleman CL, 2001, INT SYM PERFORM ANAL, P103, DOI 10.1109/ISPASS.2001.990684
   Evers M, 1996, 23RD ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE, PROCEEDINGS, P3, DOI 10.1145/232974.232975
   HINTON G, INT TECHNOLOGY J
   LONDON K, 2001, P ISCA 4 INT C PAR D
   Nair R., 1995, Proceedings of the 28th Annual International Symposium on Microarchitecture (Cat. No.95TB100012), P15, DOI 10.1109/MICRO.1995.476809
   PAN ST, 1992, P 5 INT C ARCH SUPP, P76
   SAAVEDRABARRERA R, 1992, THESIS COMPUTER SCI
   Smith GR, 1998, CONT CANC RES, P135
   Sprangle E, 2002, CONF PROC INT SYMP C, P25, DOI 10.1109/ISCA.2002.1003559
   *SUN MICR, ULTRASPARC USERS MAN
   Yeh T.-Y., 1991, Proceedings of the 24th Annual International Symposium on Microarchitecture, MICRO 24, P51
   2002, INTELVTUNE PERFORMAN
NR 14
TC 8
Z9 13
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2004
VL 34
IS 5
BP 465
EP 487
DI 10.1002/spe.572
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 810TU
UT WOS:000220727400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Faust, D
   Verhoef, C
AF Faust, D
   Verhoef, C
TI Software product line migration and deployment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE proactive/reactive product line; Software mitosis; configuration
   oscillation; grow-and-prune model; federated architecture; genericity
   layer; relativistic effects of software engineering; release indigestion
AB We describe a method to migrate multiple instances of a successful single information system to a product line. The deployed product line is able to deal with the variants evolved over time in a cost-effective manner. We proposed and used federated architectures that partition the software into so-called genericity layers. We argue that federated architectures are at the heart of product lines, and we provide compelling arguments as to why federated architectures are a sound weapon in today's corporate strategy: they enable smooth enterprise integration and rapid change. We support our arguments with a real-world case: we successfully migrated a large global transaction and settlement system with many site-specific variations to a product line with a federated architecture. Moreover, we measured the success rate of this architectural modification effort by showing that the annual direct cost savings are of the order of millions of dollars during the deployment of the product line. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Free Univ Amsterdam, Dept Math & Comp Sci, NL-1081 HV Amsterdam, Netherlands.
   Deutsche Bank AG, New York, NY 10020 USA.
C3 Vrije Universiteit Amsterdam; Deutsche Bank
RP Free Univ Amsterdam, Dept Math & Comp Sci, De Boelelaan 1081A, NL-1081 HV Amsterdam, Netherlands.
EM x@cs.vu.nl
CR BASILI VR, 2002, CSTR2956 U MAR DEP C
   Bass Len, 2012, SEI S SOFTW
   Blaha M., 1998, Object-Oriented Modeling and Design for Database Applications
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Brooks Frederick P., 1995, The mythical man-month
   *BUR LAB STAT, 2002, OCC OUTL HDB, P166
   Clements P., 2002, Software product lines
   Feijs L, 1998, SOFTWARE PRACT EXPER, V28, P371, DOI 10.1002/(SICI)1097-024X(19980410)28:4<371::AID-SPE154>3.0.CO;2-1
   *FIBR CHANN IND AS, 2000, BUS CONT DIS STRIK
   Fisher ML, 1997, HARVARD BUS REV, V75, P105
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   JACOBSON I, 1999, OBJECT TECHNOLOGY SE
   JONES C, 2000, INFORMATION TECHNOLO
   KAZMAN R, 2001, CMUSEI2001TR026
   Krikhaar R., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P371, DOI 10.1109/ICSM.1999.792635
   Krikhaar RL, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P4, DOI 10.1109/ICSM.1997.624225
   KRIKHAAR RL, 1999, THESIS U AMSTERDAM
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   O'Brien L, 2002, CMUSEI2002TR024
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Sellink A, 2002, SCI COMPUT PROGRAM, V45, P193, DOI 10.1016/S0167-6423(02)00061-8
   SHETH AP, 1990, COMPUT SURV, V22, P183, DOI 10.1145/96602.96604
   SNEED HM, 2001, ENCY SOFTWARE ENG, P83
   *STAND GROUP, 1999, 5 TS DAT AV
   STRASSMANN PA, 1993, P 4 ARM FORC COMM EL, P1
   Terekhov AA, 2000, IEEE SOFTWARE, V17, P111, DOI 10.1109/52.895180
   van den Brand M, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P11, DOI 10.1109/CSMR.1998.665727
NR 28
TC 48
Z9 50
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2003
VL 33
IS 10
BP 933
EP 955
DI 10.1002/spe.530
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715CV
UT WOS:000184953700003
DA 2024-07-18
ER

PT J
AU Guo, Y
   Chai, Y
   Zhang, LH
   Li, H
   Luo, MZ
   Guo, SK
AF Guo, Yi
   Chai, Yu
   Zhang, Lehuan
   Li, Hui
   Luo, Mengzhi
   Guo, Shikai
TI Context-based transfer learning for low resource code summarization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code summary; neural networks; transfer learning
AB Source code summaries improve the readability and intelligibility of code, help developers understand programs, and improve the efficiency of software maintenance and upgrade processes. Unfortunately, these code comments are often mismatched, missing, or outdated in software projects, resulting in developers needing to infer functionality from source code, affecting the efficiency of software maintenance and evolution. Various methods based on neuronal networks are proposed to solve the problem of synthesis of source code. However, the current work is being carried out on resource-rich programming languages such as Java and Python, and some low-resource languages may not perform well. In order to solve the above challenges, we propose a context-based transfer learning model for low resource code summarization (LRCS), which learns the common information from the language with rich resources, and then transfers it to the target language model for further learning. It consists of two components: the summary generation component is used to learn the syntactic and semantic information of the code, and the learning transfer component is used to improve the generalization ability of the model in the learning process of cross-language code summarization. Experimental results show that LRCS outperforms baseline methods in code summarization in terms of sentence-level BLEU, corpus-level BLEU and METEOR. For example, LRCS improves corpus-level BLEU scores by 52.90%, 41.10%, and 14.97%, respectively, compared to baseline methods.
C1 [Guo, Yi; Chai, Yu; Zhang, Lehuan; Li, Hui; Luo, Mengzhi; Guo, Shikai] Dalian Maritime Univ, Coll Informat Sci & Technol, Dalian, Peoples R China.
   [Guo, Shikai] Dalian Key Lab Artificial Intelligence, Dalian, Peoples R China.
   [Li, Hui] Dalian Maritime Univ, Coll Informat Sci & Technol, Dalian 116026, Peoples R China.
C3 Dalian Maritime University; Dalian Maritime University
RP Li, H (corresponding author), Dalian Maritime Univ, Coll Informat Sci & Technol, Dalian 116026, Peoples R China.
EM li_hui@dlmu.edu.cn
FU National Natural Science Foundation of China [62032004, 61902050];
   Dalian Excellent Young Project [2022RY35]; Postgraduate Education Reform
   Project of Liaoning Province [385-151]; Dalian Maritime University
   Teacher Development Project [JF2023Y05]; China Higher Education
   Association 2023 Higher Education Scientific Research [23LK0408];
   Natural Science Foundation of Liaoning Province [2021-MS-136];
   Fundamental Research Funds for the Central Universities [3132019355]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   62032004 ,61902050; Dalian Excellent Young Project, Grant/Award Number:
   2022RY35;Postgraduate Education Reform Project of Liaoning Province,
   Grant/Award Number: LiaoJiaoTong[2023]No.385-151; Dalian Maritime
   University Teacher Development Project, Grant/Award Number: JF2023Y05;
   China Higher Education Association 2023 Higher Education Scientific
   Research, Grant/Award Number: 23LK0408; Natural Science Foundation of
   Liaoning Province, Grant/Award Number: 2021-MS-136;Fundamental Research
   Funds for the Central Universities, Grant/Award Number: 3132019355This
   work was supported by the National Natural Science Foundation of China
   (Nos. 62032004, 61902050), the Dalian Excellent Young Project
   (2022RY35), the Postgraduate Education Reform Project of Liaoning
   Province (Liao Jiao Tong[2023] No. 385-151), the Dalian Maritime
   University Teacher Development Project (JF2023Y05), and the China Higher
   Education Association 2023 Higher Education Scientific Research
   (23LK0408).
CR Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, PR MACH LEARN RES, V37, P2123
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Buse Raymond P. L., 2010, P 25 IEEE ACM INT C, P33, DOI DOI 10.1145/1858996.1859005
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Edmund W., 2014, MINING QUESTION ANSW
   Flanagan D.Y. Matsumoto., 2008, The Ruby Programming Language
   Guo SK, 2023, SOFTWARE PRACT EXPER, V53, P347, DOI 10.1002/spe.3151
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haije T., 2016, INF SOFTW TECHNOL, V55, P258
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Husain H., CodeSearchNet Challenge Evaluating the State of Semantic Code Search
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Junczys-Dowmunt M, 2018, ARXIV
   Klyuchnikov N, 2022, IEEE ACCESS, V10, P45736, DOI 10.1109/ACCESS.2022.3169897
   Liu Y., RoBERTa: A Robustly Optimized BERT Pretraining Approach
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Movshovitz-Attias Dana, 2013, ACL
   Radford A., 2019, LANGUAGE MODELS ARE
   Ruby S., 2020, AGILE WEB DEV RAILS
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Shaw P., 2018, P 2018 NAACL, V2, P464, DOI [DOI 10.18653/V1/N18-2074, 10.18653/v1/N18-2074]
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wei BL, 2019, ADV NEUR IN, V32
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Xiong Y, 2018, INT C DIGITAL HOME, P82, DOI 10.1109/ICDH.2018.00023
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
NR 36
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2024
VL 54
IS 3
BP 465
EP 482
DI 10.1002/spe.3288
EA NOV 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HI4X1
UT WOS:001107406700001
DA 2024-07-18
ER

PT J
AU Zhu, LL
   Tamburri, DA
   Casale, G
AF Zhu, Lulai
   Tamburri, Damian Andrew
   Casale, Giuliano
TI RADF: Architecture decomposition for function as a service
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architecture decomposition; DevOps; function as a service; microservices
AB As the most successful realization of serverless, function as a service (FaaS) brings in a novel cloud computing paradigm that can save operating costs, reduce management effort, enable seamless scalability, and augment development productivity. Migration of an existing application to the serverless architecture is, however, an intricate task as a great number of decisions need to be made along the way. We propose in this paper RADF, a semi-automatic approach that decomposes a monolith into serverless functions by analyzing the business logic inherent in the interface of the application. The proposed approach adopts a two-stage refactoring strategy, where a coarse-grained decomposition is performed at first, followed by a fine-grained one. As such, the decomposition process is simplified into smaller steps and adaptable to generate a solution at either microservice or function level. We have implemented RADF in a holistic DevOps methodology and evaluated its capability for microservice identification and feasibility for code refactoring. In the evaluation experiments, RADF achieves lower coupling and relatively balanced cohesion, compared to previous decomposition approaches.
C1 [Zhu, Lulai; Casale, Giuliano] Imperial Coll London, Dept Comp, London, England.
   [Tamburri, Damian Andrew] Eindhoven Univ Technol, Jheronimus Acad Data Sci, sHertogenbosch, Netherlands.
   [Zhu, Lulai] Imperial Coll London, Dept Comp, Exhibit Rd, London SW7 2AZ, England.
C3 Imperial College London; Eindhoven University of Technology; Imperial
   College London
RP Zhu, LL (corresponding author), Imperial Coll London, Dept Comp, Exhibit Rd, London SW7 2AZ, England.
EM lulai.zhu15@imperial.ac.uk
RI Zhu, Lulai/GZA-7300-2022
OI Zhu, Lulai/0000-0003-2086-8467; Tamburri, Damian
   Andrew/0000-0003-1230-8961; Casale, Giuliano/0000-0003-4548-7951
FU The authors would like to thank the reviewers for carefully reading the
   manuscript. Their comments have been of great help in improving its
   quality and clarity.
FX The authors would like to thank the reviewers for carefully reading the
   manuscript. Their comments have been of great help in improving its
   quality and clarity.
CR Abdellatif M, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110868
   Al-Debagy O., 2019, PERIOD POLYTECH, V63, P274, DOI 10.3311/PPee.13925
   [Anonymous], 1999, P 5 ACM SIGKDD INT C, DOI [10.1145/312129.312186, DOI 10.1145/312129.312186]
   BAKER FB, 1975, J AM STAT ASSOC, V70, P31, DOI 10.2307/2285371
   Baresi L, 2017, LECT NOTES COMPUT SC, V10465, P19, DOI 10.1007/978-3-319-67262-5_2
   Binz T., 2014, Advanced Web Services, P527
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Buyya R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241737
   Calinski T., 1974, Communications in Statistics-Simulation and Computation, V3, P1, DOI [10.1080/03610927408827101, DOI 10.1080/03610927408827101]
   Casale G, 2020, SICS SOFTWARE, V35, P77, DOI 10.1007/s00450-019-00413-w
   Daoud M, 2021, J SYST ARCHITECT, V118, DOI 10.1016/j.sysarc.2021.102200
   DAVIES DL, 1979, IEEE T PATTERN ANAL, V1, P224, DOI 10.1109/TPAMI.1979.4766909
   De Alwis AAC, 2018, LECT NOTES COMPUT SC, V11236, P37, DOI 10.1007/978-3-030-03596-9_3
   de Carvalho LR, 2019, CLOSER: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P271, DOI 10.5220/0007677902710278
   Desai U, 2021, AAAI CONF ARTIF INTE, V35, P72
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dunn J. C., 1974, Journal of Cybernetics, V4, P95, DOI 10.1080/01969727408546059
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Evans E., 2003, Domain-Driven Design
   Firoozeh N, 2020, NAT LANG ENG, V26, P259, DOI 10.1017/S1351324919000457
   Freire AFAA, 2021, SOFTWARE PRACT EXPER, V51, P1280, DOI 10.1002/spe.2956
   Frey BJ, 2007, SCIENCE, V315, P972, DOI 10.1126/science.1136800
   Ghemawat S, 2023, PROCEEDINGS OF THE 19TH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, HOTOS 2023, P110, DOI 10.1145/3593856.3595909
   Goli A, 2020, ICPE'20: COMPANION OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P20, DOI 10.1145/3375555.3384380
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Halkidi M, 2008, PATTERN RECOGN LETT, V29, P773, DOI 10.1016/j.patrec.2007.12.011
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   James M., 1967, PROC BERKELEY S MATH, V1, P281, DOI DOI 10.1007/S11665-016-2173-6
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   JOHNSON SC, 1967, PSYCHOMETRIKA, V32, P241, DOI 10.1007/BF02289588
   Jonas Eric, 2019, Cloud Programming Simplified: A Berkeley View on Serverless Computing
   Jurafsky D., 2009, SPEECH LANGUAGE PROC
   Kalia AK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1214, DOI 10.1145/3468264.3473915
   Kaufman L., 1990, Finding Groups in Data: An Introduction to Cluster Analysis
   Kratzke N, 2018, APPL SCI-BASEL, V8, DOI 10.3390/app8081368
   KRUSKAL JB, 1964, PSYCHOMETRIKA, V29, P1, DOI 10.1007/BF02289565
   KRZANOWSKI WJ, 1988, BIOMETRICS, V44, P23, DOI 10.2307/2531893
   LANCE GN, 1967, COMPUT J, V9, P373, DOI 10.1093/comjnl/9.4.373
   Larman C., 2012, Applying UML and Patterns: An Introduction to Object Oriented Analysis and Design and Interative Development
   Li SS, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.008
   Lichtenthäler R, 2020, SICS SOFTWARE, V35, P89, DOI 10.1007/s00450-019-00414-9
   Lilleberg J, 2015, PROCEEDINGS OF 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS & COGNITIVE COMPUTING (ICCI*CC), P136, DOI 10.1109/ICCI-CC.2015.7259377
   Loukis E, 2017, INF SYST E-BUS MANAG, V15, P963, DOI 10.1007/s10257-017-0338-y
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Mikolov Tomas, 2013, EFFICIENT ESTIMATION
   Newman MEJ, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.026113
   Newman S., 2015, BUILDING MICROSERVIC
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Raghavan UN, 2007, PHYS REV E, V76, DOI 10.1103/PhysRevE.76.036106
   Raj V, 2022, SOFTWARE PRACT EXPER, V52, P1661, DOI 10.1002/spe.3081
   Richter D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P608, DOI 10.5220/0006791006080615
   Roberts M., 2017, WHAT IS SERVERLESS
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Shi JB, 2000, IEEE T PATTERN ANAL, V22, P888, DOI 10.1109/34.868688
   Spillner J., 2017, TRANSFORMATION PYTHO
   Spillner J., 2017, JAVA CODE ANAL TRANS
   Stafford A., 2021, COMPANION 15 EUROPEA
   Sun XX, 2024, EXPERT SYST, V41, DOI 10.1111/exsy.13158
   von Luxburg U, 2007, STAT COMPUT, V17, P395, DOI 10.1007/s11222-007-9033-z
   Xu D., 2015, Annals of Data Science, V2, P165, DOI [DOI 10.1007/S40745-015-0040-1, 10.1007/s40745-015-0040-1]
   Yussupov V, 2019, IEEE INT ENTERP DIST, P226, DOI 10.1109/EDOC.2019.00035
   Zhao ZM, 2023, PROCEEDINGS OF THE 28TH ACM INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, VOL 2, ASPLOS 2023, P74, DOI 10.1145/3575693.3575752
NR 65
TC 1
Z9 1
U1 2
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2024
VL 54
IS 4
SI SI
BP 566
EP 594
DI 10.1002/spe.3276
EA SEP 2023
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KD1F8
UT WOS:001072841500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Benítez-Hidalgo, A
   Navas-Delgado, I
   Roldán-García, MD
AF Benitez-Hidalgo, Antonio
   Navas-Delgado, Ismael
   Roldan-Garcia, Maria del Mar
TI NORA: Scalable OWL reasoner based on NoSQL databases and Apache Spark
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Apache Spark; knowledge base; NoSQL; OWL; reasoner
AB Reasoning is the process of inferring new knowledge and identifying inconsistencies within ontologies. Traditional techniques often prove inadequate when reasoning over large Knowledge Bases containing millions or billions of facts. This article introduces NORA, a persistent and scalable OWL reasoner built on top of Apache Spark, designed to address the challenges of reasoning over extensive and complex ontologies. NORA exploits the scalability of NoSQL databases to effectively apply inference rules to Big Data ontologies with large ABoxes. To facilitate scalable reasoning, OWL data, including class and property hierarchies and instances, are materialized in the Apache Cassandra database. Spark programs are then evaluated iteratively, uncovering new implicit knowledge from the dataset and leading to enhanced performance and more efficient reasoning over large-scale ontologies. NORA has undergone a thorough evaluation with different benchmarking ontologies of varying sizes to assess the scalability of the developed solution.
C1 [Benitez-Hidalgo, Antonio; Navas-Delgado, Ismael; Roldan-Garcia, Maria del Mar] Univ Malaga, KHAOS Res, ITIS Software, Malaga, Spain.
C3 Universidad de Malaga
RP Benítez-Hidalgo, A (corresponding author), Univ Malaga, KHAOS Res, ITIS Software, Malaga, Spain.
EM antonio.b@uma.es
RI Navas-Delgado, Ismael/L-2838-2014; Navas-Delgado, Ismael/HZH-9635-2023;
   Roldan-Garcia, Maria del Mar/L-8163-2014
OI Navas-Delgado, Ismael/0000-0001-7819-5416; Navas-Delgado,
   Ismael/0000-0001-7819-5416; Benitez-Hidalgo,
   Antonio/0000-0002-4396-8359; Roldan-Garcia, Maria del
   Mar/0000-0002-1470-2017
FU AETHER-UMA [PID2020-112540RB-C41]; Spanish Ministry of Science,
   Innovation and Universities [PRE2018-084280]; Universidad de Malaga /
   CBUA
FX AETHER-UMA, Grant/Award Number: PID2020-112540RB-C41; Spanish Ministry
   of Science, Innovation and Universities, Grant/Award Number:
   PRE2018-084280; Universidad de Malaga / CBUA
CR Abburu Sunitha., 2012, International Journal of Computer Applications, V57, P33, DOI DOI 10.5120/9208-3748
   Antoniou G, 2018, KNOWL ENG REV, V33, DOI 10.1017/S0269888918000255
   Bellomarini L, 2019, PROC INT CONF DATA, P26, DOI 10.1109/ICDE.2019.00011
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Cure O., 2012, 2012 Third International Conference on Emerging Intelligent Data and Web Technologies (EIDWT 2012), P166, DOI 10.1109/EIDWT.2012.27
   del Mar Roldan-Garcia M., 2006, Proceedings of the 22nd Inter- national Conference on Data Engineering Workshops. IEEE Computer Society, P58
   Roldan-Garcia MD, 2008, 2008 3RD INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES (ICIW 2008), P174, DOI 10.1109/ICIW.2008.122
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Gu R, 2015, INT PARALL DISTRIB P, P700, DOI 10.1109/IPDPS.2015.14
   Guo YB, 2005, J WEB SEMANT, V3, P158, DOI 10.1016/j.websem.2005.06.005
   Haarslev V., 2012, SEMANT WEB, P3, DOI [10.3233/SW-2011-0032, DOI 10.3233/SW]
   Harris S, 2013, SPARQL 1.1 Query Language
   He Q., 2016, LINKEDIN BLOG
   Hitzler P., 2012, OWL 2 web ontology language primer, Vsecond
   Khadilkar V., 2012, INT SEMANTIC WEB C, V2012
   Krishnan A., 2018, Making search easier: How amazon's product graph is helping customers find products more easily. amazon blog
   Ladwig G., 2011, P 7 INT WORKSH SCAL
   Lakshman Avinash, 2010, Operating Systems Review, V44, P35, DOI 10.1145/1773912.1773922
   Liu Y., 2017, SPOWL SPARK BASED OW
   Ma L, 2006, LECT NOTES COMPUT SC, V4011, P125
   Maier F., 2010, DISTRIBUTED REASONIN
   Matentzoglu Nicolas., 2015, INFORMAL P 4 INT WOR, P68
   Michel F, 2019, LECT NOTES COMPUT SC, V11360, P125, DOI 10.1007/978-3-662-58664-8_5
   Mohamed H, 2021, PROCEEDINGS OF THE 13TH INTERNATIONAL JOINT CONFERENCE ON KNOWLEDGE DISCOVERY, KNOWLEDGE ENGINEERING AND KNOWLEDGE MANAGEMENT (KEOD), VOL 2, P51, DOI 10.5220/0010656800003064
   Mutharaju Raghava, 2012, The Semantic Web. 11th International Semantic Web Conference (ISWC 2012). Proceedings, P407, DOI 10.1007/978-3-642-35173-0_30
   Papailiou Nikolaos, 2012, P 21 INT C WORLD WID, P397, DOI DOI 10.1145/2187980.2188058
   Reyes-Alvarez L, 2019, SOFTWARE PRACT EXPER, V49, P100, DOI 10.1002/spe.2645
   Shearer R., 2008, Hermit: A highly-efficient owl reasoner
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Urbani J, 2009, LECT NOTES COMPUT SC, V5823, P634, DOI 10.1007/978-3-642-04930-9_40
   Wu K., 2012, DESCRIPTION LOGICS
   Zaharia Matei, 2012, Proceedings of the 9th USENIX Conference on Networked Systems Design and Implementation, NSDI'12, P1, DOI DOI 10.1111/J.1095-8649.2005.00662.X
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
NR 33
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2023
VL 53
IS 12
SI SI
BP 2377
EP 2392
DI 10.1002/spe.3258
EA SEP 2023
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X8MK4
UT WOS:001061753300001
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Ghedass, F
   Ben Charrada, F
AF Ghedass, Fedia
   Ben Charrada, Faouzi
TI Autonomic computing and incremental learning for the management of big
   services
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomic computing; big data-centric service; big service management;
   incremental embedding; knowledge graph; multi-view learning
ID FRAMEWORK
AB Recent years have witnessed the emergence of big services, as a large-scale big data-centric service model, that resulted from the synergy between powerful computing paradigms (big data processing, service and cloud computing, Internet of Things, etc.). Big services are seen as a heterogeneous combination of physical and virtualized domain-specific resources, with a huge volume of data and complex functionalities, all encapsulated and offered as services. This complexity of big services (composition units' heterogeneity, cross-domain orientation, data massiveness), coupled with other environmental factors (cloud dynamicity, providers' policies, customer requirements) makes their management tasks beyond humans' capability. Therefore, endowing big service ecosystems with self-adaptive behavior is a natural solution. To achieve this goal, this article models big services as autonomic computing systems, and structures their behavioral aspects (functional behavior, quality of service/data levels, management policies) as a multi-view knowledge graph. To infer useful knowledge (e.g., conflicts between policies) for the autonomic big service's management tasks, we process the big service's knowledge graph (BSKG) via a graph neural network-based graph embedding model. This latter is reinforced by an incremental learning method, that helps capturing the big services' frequent changes (e.g., QoS deviations, service failures, new policies), and drives autonomic managers to continuously update and enrich their knowledge w.r.t. the managed big service's current state. Finally, a flexible decision mechanism explores the BSKG structure and the latent knowledge, to locate and trigger the appropriate management policies, according to the big service's produced events.
C1 [Ghedass, Fedia; Ben Charrada, Faouzi] Univ Tunis El Manar, Dept Comp Sci, Tunis, Tunisia.
C3 Universite de Tunis-El-Manar
RP Ghedass, F (corresponding author), Univ Tunis El Manar, Dept Comp Sci, Tunis, Tunisia.
EM ghedass.fedia87@gmail.com
CR Aggarwal R., P IEEE I C SERV COMP
   Araújo-de-Oliveira P, 2021, SOFTWARE PRACT EXPER, V51, P1387, DOI 10.1002/spe.2962
   Ardagna B, 2007, IEEE SOFTWARE, V24, P39, DOI 10.1109/MS.2007.174
   Bhaskar B, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5351
   Brand M, 2002, LECT NOTES COMPUT SC, V2350, P707
   Bruning S., P 10 IEEE HIGH ASS S
   Cao YW, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P3383, DOI 10.1145/3442381.3449834
   Castellanos C, 2021, SMART CITIES DATA AN, P161
   Chen XJ, 2020, EXPERT SYST APPL, V141, DOI 10.1016/j.eswa.2019.112948
   Choudhury S, 2017, PROC INT CONF DATA, P1563, DOI 10.1109/ICDE.2017.228
   Console L., P INT E CHALL C HAG
   Ding JH, 2016, P IEEE I C SERV COMP, P82, DOI 10.1109/SCC.2016.18
   Dong YX, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P135, DOI 10.1145/3097983.3098036
   Passini WF, 2022, SOFTWARE PRACT EXPER, V52, P5, DOI 10.1002/spe.3013
   Gharbi M, 2020, INT J WEB GRID SERV, V16, P393, DOI 10.1504/IJWGS.2020.110946
   Ghedass F., P INT C WEB INF SYST
   Hamilton W., Inductive Representation Learning on Large Graphs
   Haq IU, 2011, DATA KNOWL ENG, V70, P435, DOI 10.1016/j.datak.2011.01.006
   Hashem IAT, 2015, INFORM SYST, V47, P98, DOI 10.1016/j.is.2014.07.006
   Huang L, 2017, INFORM SYST FRONT, V19, P1273, DOI 10.1007/s10796-017-9767-x
   Inoubli W, 2018, FUTURE GENER COMP SY, V86, P546, DOI 10.1016/j.future.2018.04.032
   Jatoth C, 2018, FUTURE GENER COMP SY, V86, P1008, DOI 10.1016/j.future.2017.07.042
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kim B, 2016, I C INF COMM TECH CO, P579, DOI 10.1109/ICTC.2016.7763537
   Kim D, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P2257, DOI 10.1145/2983323.2983677
   Lee S, 2012, COMM COM INF SC, V310, P799
   Li BT, 2020, NEURAL COMPUT APPL, V32, P16647, DOI 10.1007/s00521-020-04908-5
   Li D., P 2017 IEEE INT C CO
   Li Z, 2021, FUTURE GENER COMP SY, V116, P145, DOI 10.1016/j.future.2020.10.018
   Li ZJ, 2020, PROC INT CONF DATA, P589, DOI 10.1109/ICDE48307.2020.00057
   Liang HL, 2021, FUTURE GENER COMP SY, V125, P496, DOI 10.1016/j.future.2021.06.048
   Lin Zhouhan, STRUCTURED SELF ATTE
   Liu M., DATA DRIVEN APPROACH
   Longo A, 2015, 2015 IEEE 12TH INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2015), P499, DOI 10.1109/SCC.2015.74
   Luo X, 2012, KNOWL-BASED SYST, V27, P271, DOI 10.1016/j.knosys.2011.09.006
   Ma WZ, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P1210, DOI 10.1145/3308558.3313607
   Maamar Z., 2006, IT Professional, V8, P47, DOI 10.1109/MITP.2006.124
   Mezni H, 2023, COMPUT SCI REV, V48, DOI 10.1016/j.cosrev.2023.100535
   Mezni H, 2021, COMPUTING, V103, P2479, DOI 10.1007/s00607-021-00999-7
   Mezni H, 2014, J UNIVERS COMPUT SCI, V20, P1130
   Min XY, 2018, IEEE ACCESS, V6, P39895, DOI 10.1109/ACCESS.2018.2855807
   Mohan A, 2019, SN APPL SCI, V1, DOI 10.1007/s42452-019-1044-9
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Park J, 2019, J GRID COMPUT, V17, P137, DOI 10.1007/s10723-017-9422-2
   Paulheim H, 2017, SEMANT WEB, V8, P489, DOI 10.3233/SW-160218
   Peng H, 2022, IEEE T COMPUT, V71, P628, DOI 10.1109/TC.2021.3057082
   Piao GY, 2018, LECT NOTES COMPUT SC, V10843, P496, DOI 10.1007/978-3-319-93417-4_32
   Popescu R., P 2010 4 IEEE INT C
   Schmid Sanny, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P102, DOI 10.1109/SEAMS.2017.20
   Sellami M, 2020, J NETW COMPUT APPL, V166, DOI 10.1016/j.jnca.2020.102732
   Shi HM, 2022, LECT NOTES COMPUT SC, P517, DOI 10.1007/978-3-031-07472-1_30
   Siddiqa A, 2016, J NETW COMPUT APPL, V71, P151, DOI 10.1016/j.jnca.2016.04.008
   Stamou K., P 5 INT WORKSH CLOUD
   Stamou K, 2014, P ANN HICSS, P5038, DOI 10.1109/HICSS.2014.618
   Sun SL, 2013, NEURAL COMPUT APPL, V23, P2031, DOI 10.1007/s00521-013-1362-6
   Taherkordi A., P S APPL COMP
   Taleb I., P 2016 INT IEEE C UB
   Thota S., 2017, BIG DATA QUALITY, P1, DOI [10.1007/978-3-319-32001-4_240-1, DOI 10.1007/978-3-319-32001-4_240-1]
   Wang HB, 2019, IEEE T SERV COMPUT, V12, P398, DOI 10.1109/TSC.2016.2633264
   Wang Q, 2017, IEEE T KNOWL DATA EN, V29, P2724, DOI 10.1109/TKDE.2017.2754499
   Wang SG, 2013, INT J WEB GRID SERV, V9, P18, DOI 10.1504/IJWGS.2013.052846
   Wang XK, 2020, IEEE T BIG DATA, V6, P666, DOI 10.1109/TBDATA.2018.2824303
   Wang XK, 2016, IEEE CLOUD COMPUT, V3, P36, DOI 10.1109/MCC.2016.130
   Xinhua E, 2013, 2013 15TH IEEE INTERNATIONAL CONFERENCE ON COMMUNICATION TECHNOLOGY (ICCT), P738, DOI 10.1109/ICCT.2013.6820472
   Xu XF, 2018, COMPUTING, V100, P353, DOI 10.1007/s00607-018-0602-0
   Xu XF, 2015, COMPUTER, V48, P80, DOI 10.1109/MC.2015.182
   Yang YF, 2020, IEEE INTERNET THINGS, V7, P5533, DOI 10.1109/JIOT.2020.2980046
   Yu Cheng, 2008, IEEE Communications Magazine, V46, P138
   Zeginis Chrysostomos, 2012, 9th International Conference on Service-Oriented Computing - ICSOC 2011 Workshops, P147, DOI 10.1007/978-3-642-31875-7_15
   Zhang DK, 2020, IEEE T BIG DATA, V6, P3, DOI 10.1109/TBDATA.2018.2850013
   Zhang F., P 2006 INT C MACH LE
   Zheng Z., P 2013 IEEE INT C BI
   Zhou J., GRAPH NEURAL NETWORK
   Zulkernine FH., 2009, Autonomic Computing and Networking, P333
NR 74
TC 0
Z9 0
U1 2
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2023
VL 53
IS 7
BP 1594
EP 1628
DI 10.1002/spe.3204
EA MAR 2023
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H9FS7
UT WOS:000957846300001
DA 2024-07-18
ER

PT J
AU Xi, R
   Pattabiraman, K
AF Xi, Rui
   Pattabiraman, Karthik
TI A large-scale empirical study of low-level function use in Ethereum
   smart contracts and automated replacement
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Ethereum blockchain; smart contract; source-to-source transformation;
   static analysis
AB The Ethereum blockchain stores and executes complex logic via smart contracts written in Solidity, a high-level programming language. The Solidity language (in its early versions) provides features to exercise fine-grained control over smart contracts, whose usage is discouraged by later-released Solidity documentation, but nonetheless supported in later versions for backward compatibility. We define these features as low-level functions. However, the high-volume of transactions and the improper use of low-level functions lead to security exploits with heavy financial loss. Consequently, the documentation suggests secure alternatives to the use of low-level functions. In this article, we first perform an empirical study on the use of low-level functions in Ethereum smart contracts. We study a smart contract dataset consisting of over 2,100,000 real-world smart contracts. We find that low-level functions are widely used and that the majority of these uses are gratuitous. We then propose GoHigh, a source-to-source transformation tool to eliminate low-level function-related vulnerabilities, by replacing low-level functions with secure alternatives. Our experimental evaluation on the dataset shows that GoHigh successfully replaces all low-level functions with 4.9% fewer compiler warnings. Further, no unintended side-effects are introduced in 80% of the contracts, and the remaining 20% are not verifiable due to their external dependency. GoHigh saves more than 5% of the gas cost of the contract. Finally, GoHigh takes 7 s on average per contract.
C1 [Xi, Rui; Pattabiraman, Karthik] Univ British Columbia UBC, Dept Elect & Comp Engn, Rm 4048,Fred Kaiser Bldg,2332 Main Mall, Vancouver, BC V6T 1Z4, Canada.
C3 University of British Columbia
RP Pattabiraman, K (corresponding author), Univ British Columbia UBC, Dept Elect & Comp Engn, Rm 4048,Fred Kaiser Bldg,2332 Main Mall, Vancouver, BC V6T 1Z4, Canada.
EM karthikp@ece.ubc.ca
OI Xi, Rui/0000-0003-0626-494X
FU Natural Sciences and Engineering Research Council of Canada
FX Natural Sciences and Engineering Research Council of Canada
CR Albert E, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428277
   Alt Leonardo, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P376, DOI 10.1007/978-3-030-03427-6_28
   [Anonymous], 2022, ETHER MARKET CAPITAL
   [Anonymous], 2022, SWC 101 INTEGER OVER
   [Anonymous], 2022, SWC 136 UNENCRYPTED
   [Anonymous], 2022, SWC 128 DOS BLOCK GA
   [Anonymous], 2017, The parity wallet hack explained
   [Anonymous], 2022, SWC 107 REENTRANCY
   [Anonymous], 2018, ETHEREUM BIGQUERY PU
   Ashizawa N., 2021, P 3 ACM INT S BLOCKC, P47
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Avijit K, 2006, SOFTWARE PRACT EXPER, V36, P971, DOI 10.1002/spe.720
   Ayoade G, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2019), P384, DOI 10.1109/Blockchain.2019.00059
   Beillahi SM., AUTOMATED AUDITING P
   Bertoni G., 2011, The KECCAK SHA-3 Submission
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Bose P, 2021, Arxiv, DOI arXiv:2104.08638
   Buterin V., 2016, EIP 150 GAS COST CHA
   Cadar C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P765, DOI 10.1145/2889160.2889206
   Chen JC, 2021, IEEE T SOFTWARE ENG, V48, P2189, DOI 10.1109/TSE.2021.3054928
   Chen XP, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P470, DOI 10.1109/SANER50967.2021.00050
   Chinen Y, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2020), P327, DOI 10.1109/Blockchain50366.2020.00048
   ConsenSys, 2018, MYTHR GITHUB REP
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Feng Y, 2020, IEEE INT CONF AUTOM, P1141, DOI 10.1145/3324884.3416646
   Frank J, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2757
   Gao JB, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P23, DOI 10.1109/ICSE-Companion.2019.00029
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   Giesen J. R., 2022, arXiv, DOI [10.48550/arXiv.2203.00364, DOI 10.48550/ARXIV.2203.00364]
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Grieco Gustavo, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P557, DOI 10.1145/3395363.3404366
   Groce A, 2021, IEEE INT C S Q R S, P207, DOI 10.1109/QRS54544.2021.00032
   Hara K, 2021, IEEE I C SQRS-C, P652, DOI [10.1109/QRS-C55045.2021.00099, 10.1109/QRS-055045.2021.00099]
   Hefele A, 2019, LECT NOTES COMPUT SC, V11877, P310, DOI 10.1007/978-3-030-33246-4_20
   Hofmann F, 2017, 2017 ITU KALEIDOSCOPE: CHALLENGES FOR A DATA-DRIVEN SOCIETY (ITU K)
   Holkner A., P 32 AUSTRALASIAN C, V91, P19
   Hwang S, 2020, PROC INT CONF SOFTW, P542, DOI 10.1145/3377811.3380424
   Jeon S., 2021, SMARTCONDETECT HIGHL
   Ji SY, 2021, IEEE INT C S Q R S, P243, DOI 10.1109/QRS54544.2021.00035
   Jiang B, 2021, IEEE INT C S Q R S, P926, DOI 10.1109/QRS54544.2021.00102
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Lai EM, 2020, 2020 4TH INTERNATIONAL CONFERENCE ON CRYPTOGRAPHY, SECURITY AND PRIVACY (ICCSP 2020), P110, DOI 10.1145/3377644.3377650
   Li A, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P438, DOI 10.1145/3385412.3385982
   Liao Z, 2023, IEEE T SOFTWARE ENG, V49, P777, DOI 10.1109/TSE.2022.3163614
   Liu C, 2018, PROC IEEE ACM INT C, P65, DOI 10.1145/3183440.3183495
   Liu ZG, 2023, IEEE T KNOWL DATA EN, V35, P1296, DOI 10.1109/TKDE.2021.3095196
   Liu ZG, 2021, Arxiv, DOI arXiv:2106.09282
   Livshits B, 2005, LECT NOTES COMPUT SC, V3780, P139
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Marchesi L., 2020, arXiv
   Mavridou A, 2019, LECT NOTES COMPUT SC, V11598, P446, DOI 10.1007/978-3-030-32101-7_27
   Mavridou A, 2018, LECT NOTES COMPUT SC, V10804, P270, DOI 10.1007/978-3-319-89722-6_11
   Mehar MI, 2019, J CASES INF TECHNOL, V21, P19, DOI 10.4018/JCIT.2019010102
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Nakamoto Satoshi., BITCOIN WHITEPAPER
   Nguyen Tai D., 2021, 2021 IEEE Symposium on Security and Privacy (SP), P1215, DOI 10.1109/SP40001.2021.00057
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   OpenZeppelin, 2022, OPENZEPPELIN SAFEMAT
   OpenZeppelin, 2018, PROX PATT
   Pan ZY, 2021, IEEE INT C S Q R S, P915, DOI 10.1109/QRS54544.2021.00101
   Paradigm, 2021, FOUNDRY
   Park D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P912, DOI 10.1145/3236024.3264591
   Peng C, 2019, ASIA PAC SOFWR ENG, P466, DOI 10.1109/APSEC48747.2019.00069
   Permenev A, 2020, P IEEE S SECUR PRIV, P1661, DOI 10.1109/SP40000.2020.00024
   Ribeiro M., 2020, Logic, Language, and Security, V12300, P71, DOI [10.1007/978-3-030-62077-67, DOI 10.1007/978-3-030-62077-67]
   Richards G, 2011, LECT NOTES COMPUT SC, V6813, P52, DOI 10.1007/978-3-642-22655-7_4
   Richards G, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1806596.1806598
   Rodler M., 2021, P 30 BIG USENIX BIG
   So S, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1361
   Srikant S., 2020, THESIS MIT
   Sun TY, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9020255
   Tan B, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3498665
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF., ARXIV
   Torres CF, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1591
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Vogelsteller F., 2015, EIP20
   Wan ZY, 2021, PROC INT CONF SOFTW, P1410, DOI 10.1109/ICSE43902.2021.00127
   Wang W, 2021, IEEE T NETW SCI ENG, V8, P1133, DOI 10.1109/TNSE.2020.2968505
   Wang ZY, 2021, IEEE I C SQRS-C, P698, DOI 10.1109/QRS-C55045.2021.00105
   Wu HJ, 2021, PROC INT SYMP SOFTW, P378, DOI 10.1109/ISSRE52982.2021.00047
   Xi R., 2022, GOHIGHS DATASET
   Xi R., 2022, P 2022 IEEE INT C SO
   Xing CP, 2020, WIREL NETW, DOI 10.1007/s11276-020-02379-z
   Xu YJ, 2021, SECUR COMMUN NETW, V2021, DOI 10.1155/2021/5798033
   Xue YX, 2020, IEEE INT CONF AUTOM, P1029, DOI 10.1145/3324884.3416553
   Yu RT, 2021, 2021 17TH INTERNATIONAL CONFERENCE ON MOBILITY, SENSING AND NETWORKING (MSN 2021), P412, DOI 10.1109/MSN53354.2021.00069
   Zhang YY, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P23, DOI [10.1109/saner48275.2020.9054825, 10.1109/SANER48275.2020.9054825]
NR 91
TC 3
Z9 3
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 631
EP 664
DI 10.1002/spe.3163
EA NOV 2022
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000880496600001
DA 2024-07-18
ER

PT J
AU Deng, FY
   Fu, C
   Qian, YK
   Yang, J
   He, S
   Xu, H
AF Deng, Fengyang
   Fu, Cai
   Qian, Yekui
   Yang, Jia
   He, Shuai
   Xu, Hao
TI Federated learning based multi-task feature fusion framework for code
   expressive semantic extraction
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code completion; cross-language code analysis; feature fusion; federated
   learning; graph neural network; multi-task; variable misuse
AB Using multi-task learning to extract code features can effectively increase the information of the features. However, the existing multi-task learning methods mainly have two limitations: (1) They cannot extract enough code-related information or only extract similar semantic features. Similar multi-task makes the information in the features increased insufficiently. However, the high difference multi-task is challenging to converge. (2) They cannot train multi-task on heterogeneous datasets. In standard multi-task training, we need to label all tasks for all data, which consumes enormous labor. To solve the above limitations, we select two high difference tasks, the cross-language code completion task and variable misuse task, to extract expressive semantic code features. We propose an attention-based feature fusion module to merge information among high difference tasks, avoiding the convergence dilemma of standard multi-task learning. We propose a federated learning framework, extracting semantic information and using the feature fusion module to integrate multi-task information among single labeled datasets. We experiment on C# and Python datasets for the code completion and variable misuse tasks. The results show that the performance of fusion features by FedMTFF improved by up to 22.6% and 15.1% compared to single tasks. We use FedMTFF to perform four cross-language multi-task features fusion, exceeding the current best baseline by 24.1%.
C1 [Deng, Fengyang; Fu, Cai; Yang, Jia; He, Shuai] Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Wuhan, Hubei, Peoples R China.
   [Qian, Yekui] Air Def Forces Acad PLA, Dept Command & Control, Zhengzhou, Henan, Peoples R China.
   [Xu, Hao] Hunan Engn Res Ctr, Space Informat & Secur, Xiangtan, Hunan, Peoples R China.
C3 Huazhong University of Science & Technology
RP Fu, C (corresponding author), Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Wuhan, Hubei, Peoples R China.; Qian, YK (corresponding author), Air Def Forces Acad PLA, Dept Command & Control, Zhengzhou, Henan, Peoples R China.
EM fucai@hust.edu.cn; qyk1129@163.com
OI Deng, Fengyang/0000-0003-3352-4065
FU National Natural Science Foundation of China [62072200, 6217071437]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   62072200, 6217071437
CR Akram J, 2021, SOFTWARE PRACT EXPER, V51, P294, DOI 10.1002/spe.2905
   Allamanis B., 2017, ARXIV PREPRINT ARXIV
   Ba J.L., Layer normalization
   Brockschmidt M, 2019, 25TH AMERICAS CONFERENCE ON INFORMATION SYSTEMS (AMCIS 2019)
   Chang XJ, 2016, IEEE T NEUR NET LEAR, V27, P1502, DOI 10.1109/TNNLS.2015.2441735
   Chen YC, 2020, IEEE T NETW SCI ENG, V7, P3279, DOI 10.1109/TNSE.2020.3024723
   Dai Z., 2019, ARXIV PREPRINT ARXIV
   Deng L, 2013, IEEE INT NEW CIRC
   Dong DX, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1723
   Fang Liu, 2020, 2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE), P473, DOI 10.1145/3324884.3416591
   Guo KH, 2021, SOFTWARE PRACT EXPER, V51, P2274, DOI 10.1002/spe.2894
   He K., 2016, PROC CVPR IEEE, P770, DOI [10.1109/CVPR.2016.90, DOI 10.1109/CVPR.2016.90]
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   King DB, 2015, ACS SYM SER, V1214, P1
   Konen J., FEDERATED OPTIMIZATI
   Li J, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4159
   Li Y., 2016, P 4 INT C LEARNING R
   Lin Y, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P799
   Liu F, 2020, INT C PROGRAM COMPRE, P37, DOI 10.1145/3387904.3389261
   Lu YX, 2017, PROC CVPR IEEE, P1131, DOI 10.1109/CVPR.2017.126
   Luong M.-T., 2015, ARXIV PREPRINT ARXIV
   Ma YK, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P5257
   Peng N, 2016, ARXIV PREPRINT ARXIV
   Ruder S., 2016, ARXIV
   Saifan AA, 2021, SOFTWARE PRACT EXPER, V51, P235, DOI 10.1002/spe.2900
   Song Dawn, 2016, Neural code completion
   Thompson NC., COMPUTATIONAL LIMITS
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Vaswani A, 2017, ADV NEUR IN, V30
   Velikovic P., Graph attention networks
   Wang YL, 2021, AAAI CONF ARTIF INTE, V35, P14015
   Wang Y, 2019, ACM T GRAPHIC, V38, DOI 10.1145/3326362
   Yang J., 2021, IEEE T SOFTW ENG
   Yang J, 2021, INFORM SCIENCES, V564, P103, DOI 10.1016/j.ins.2021.02.028
   Zaremoodi P, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P656
   Zhou RW, 2020, IEEE T NEUR NET LEAR, V31, P1592, DOI 10.1109/TNNLS.2019.2920905
   Zhou YY, 2019, IEEE I CONF COMP VIS, P10671, DOI [10.1109/ICCV.2019.01077, 10.1109/SDPC.2019.00126]
NR 39
TC 3
Z9 3
U1 5
U2 25
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2022
VL 52
IS 8
BP 1849
EP 1866
DI 10.1002/spe.3094
EA MAY 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2R3HL
UT WOS:000796267800001
DA 2024-07-18
ER

PT J
AU Aksakalli, IK
   Çelik, T
   Can, AB
   Tekinerdogan, B
AF Aksakalli, Isil Karabey
   Celik, Turgay
   Can, Ahmet Burak
   Tekinerdogan, Bedir
TI Micro-IDE: A tool platform for generating efficient deployment
   alternatives based on microservices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automated deployment of microservices; cloud computing; microservice
   architectures; optimization algorithms; tool platform for deploying
   microservices
AB Microservice architecture (MSA) is a paradigm to design and develop scalable distributed applications using loosely coupled, highly cohesive components that can be deployed independently. The applications that realize the MSA may contain thousands of services that together form the overall system. Microservices interact with each other by producing and consuming data. Deploying frequently communicating services to the same physical resource would reduce network utilization, which is vital for reducing costs and improving scalability. Since the physical resources have limited capacity, it is not always possible to deploy communicating services to the same resource. Therefore, automated efficient deployment alternatives need to be generated for MSA in the design phase. To address this problem, we proposed an algorithmic approach to generate efficient microservice deployment configurations to available cloud resources in our previous study. In this study, a tool (Micro-IDE) has been proposed to realize and evaluate this approach. The Micro-IDE tool has been validated using a case study inspired by the Spotify application.
C1 [Aksakalli, Isil Karabey] Erzurum Tech Univ, Dept Comp Engn, Erzurum, Turkey.
   [Celik, Turgay] BITES Def & Aerosp, Ankara, Turkey.
   [Can, Ahmet Burak] Hacettepe Univ, Dept Comp Engn, Ankara, Turkey.
   [Tekinerdogan, Bedir] Wageningen Univ & Res, Informat Technol Grp, Wageningen, Netherlands.
C3 Erzurum Technical University; Hacettepe University; Wageningen
   University & Research
RP Aksakalli, IK (corresponding author), Erzurum Tech Univ, Dept Comp Engn, Erzurum, Turkey.
EM isil.karabey@erzurum.edu.tr
RI AKSAKALLI, Isil KARABEY/ADT-5616-2022; Celik, Turgay/AAY-2950-2020;
   Tekinerdogan, Bedir/K-3639-2019; Can, Ahmet B/M-8712-2018
OI AKSAKALLI, Isil KARABEY/0000-0002-4156-9098; Celik,
   Turgay/0000-0001-9449-2402; Tekinerdogan, Bedir/0000-0002-8538-7261; 
CR Aksakalli IK, 2021, IEEE ACCESS, V9, P29505, DOI 10.1109/ACCESS.2021.3057582
   Apache, DOCK SWARM
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Bravetti M., 2019, P INT C FUND APPR SO
   Brown AW., 2004, MDA MANIFESTO MDA J
   Budinsky F., 2004, Eclipse modeling framework: a developer's guide
   Carvalho J, 2019, EUROMICRO WORKSHOP P, P93, DOI 10.1109/EMPDP.2019.8671608
   Chawla H., 2019, BUILDING MICROSERVIC
   de Guzmán PC, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P379, DOI 10.1109/ICWS.2018.00066
   Computing A., 2006, IBM White Paper, 31, V31, P1
   Daly Chris., 2004, EMFATIC LANGUAGE REF
   Dllmann TF., 2017, P 8 ACM SPEC INT C P
   docker, Docker Swarm
   Ek D. L., SOA VS MICROSERVICES
   Goldsmith K., Microservices @ Spotify
   Granchelli G., 2017, P 2017 IEEE INT C SO
   gRPC, LANGUAGE GUIDE PROTO
   Guo D., 2016, P 2016 IEEE S SERVIC
   Johnsen E.B., 2011, Lecture Notes in Computer Science, V6957, P142, DOI [10.1007/978- 3- 642-25271-6 8, DOI 10.1007/978-3-642-25271-6]
   Kalske M., 2018, TRANSFORMING MONOLIT
   Karris Steven T., 2006, Introduction to Simulink with engineering applications
   Kolovos Dimitris, 2018, CEUR WORKSHOP P, V2245, P223
   Kolovos DS., 2010, P INT C MODEL DRIVEN, p211
   Kubernetes, KUBERNETES OFFICIAL
   Mehra A, 2009, 2009 INTERNATIONAL CONFERENCE ON ADVANCES IN RECENT TECHNOLOGIES IN COMMUNICATION AND COMPUTING (ARTCOM 2009), P115, DOI 10.1109/ARTCom.2009.169
   Molina F, 2009, ADV ENG SOFTW, V40, P1306, DOI 10.1016/j.advengsoft.2009.01.018
   Moore B., 2004, Eclipse Development using the Graphical Editing Framework i the Eclipse Modeling Framework
   Musset J., 2006, ACCELEO USER GUIDE, V2, P157
   Partanen A., 2018, MICROSERVICES VS SER
   Pech V., 2013, P 2013 INT C PRINC P, P165, DOI [DOI 10.1145/2500828.2500846, 10.1145/2500828.2500846]
   Profeta D, 2019, EUROMICRO CONF PROC, P182, DOI 10.1109/SEAA.2019.00037
   Rubel D., 2011, ECLIPSE GRAPHICAL ED
   Saadatmand M., 2008, THESIS MASTER COMPUT
   Sampaio AR, 2019, J INTERNET SERV APPL, V10, DOI 10.1186/s13174-019-0104-0
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Villamizar M, 2015, COMPUT COLOMB CONF, P583, DOI 10.1109/ColumbianCC.2015.7333476
   Voelter M., 2006, From Front End To Code - MDSD in Practice
   Wohlin C., 2014, INT C EVALUATION ASS, P1
NR 38
TC 2
Z9 2
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2022
VL 52
IS 7
BP 1756
EP 1782
DI 10.1002/spe.3088
EA APR 2022
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1X8ZE
UT WOS:000787120100001
DA 2024-07-18
ER

PT J
AU Jayasekara, S
   Karunasekera, S
   Harwood, A
AF Jayasekara, Sachini
   Karunasekera, Shanika
   Harwood, Aaron
TI Optimizing checkpoint-based fault-tolerance in distributed stream
   processing systems: Theory to practice
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE checkpointing; fault-tolerance; optimization; stream processing
ID STATE MANAGEMENT; PERFORMANCE; INTERVAL; MODEL
AB Fault-tolerance is an essential part of a stream processing system that guarantees data analysis could continue even after failures. State-of-the-art distributed stream processing systems use checkpointing to support fault-tolerance for stateful computations where the state of the computations is periodically persisted. However, the frequency of performing checkpoints impacts the performance (utilization, latency, and throughput) of the system as the checkpointing process consumes resources and time that can be used for actual computations. In practice, systems are often configured to perform checkpoints based on crude values ignoring factors such as checkpoint and restart costs, leading to suboptimal performance. In our previous work, we proposed a theoretical optimal checkpoint interval that maximizes the system utilization for stream processing systems to minimize the impact of checkpointing on system performance. In this article, we investigate the practical benefits of our proposed theoretical optimal by conducting experiments in a real-world cloud setting using different streaming applications; we use Apache Flink, a well-known stream processing system for our experiments. The experiment results demonstrate that an optimal interval can achieve better utilization, confirming the practicality of the theoretical model when applied to real-world applications. We observed utilization improvements from 10% to 200% for a range of failure rates from 0.3 failures per hour to 0.075 failures per minute. Moreover, we explore how performance measures: latency and throughput are affected by the optimal interval. Our observations demonstrate that significant improvements can be achieved using the optimal interval for both latency and throughput.
C1 [Jayasekara, Sachini; Karunasekera, Shanika; Harwood, Aaron] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Jayasekara, S (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic 3010, Australia.
EM wjayasekara@student.unimelb.edu.au
FU Defence Science and Technology Group, Edinburgh, South Australia
   [MyIP:6104]; National Collaborative Research Infrastructure Strategy
   (NCRIS)
FX This research is funded in part by the Defence Science and Technology
   Group, Edinburgh, South Australia, under contract MyIP:6104, and was
   supported by use of the Nectar Research Cloud, a collaborative
   Australian research platform supported by the National Collaborative
   Research Infrastructure Strategy (NCRIS).
CR [Anonymous], 2020, APACHE FLINK DOCUMEN
   Cangialosi FJ., 2005, P 2 BIENN C INN DAT
   Cappellari P, 2018, SOFTWARE PRACT EXPER, V48, P1607, DOI 10.1002/spe.2596
   Carbone P., 2015, IEEE DATA ENG B, V36, P28, DOI DOI 10.1109/IC2EW.2016.56
   Carbone P, 2017, PROC VLDB ENDOW, V10, P1718, DOI 10.14778/3137765.3137777
   Cheng ZN, 2019, VLDB J, V28, P821, DOI 10.1007/s00778-019-00565-w
   Daly J, 2003, LECT NOTES COMPUT SC, V2660, P3
   Daly JT, 2006, FUTURE GENER COMP SY, V22, P303, DOI 10.1016/j.future.2004.11.016
   Di S, 2017, IEEE T PARALL DISTR, V28, P244, DOI 10.1109/TPDS.2016.2546248
   El-Sayed N, 2014, IEEE INT C CL COMP, P84, DOI 10.1109/CLUSTER.2014.6968777
   Fang JH, 2019, WORLD WIDE WEB, V22, P2471, DOI 10.1007/s11280-018-0656-0
   Fernandez RC., 2014, MAKING STATE EXPLICI, P49
   Fialho L, 2011, INT CON DISTR COMP S, P322, DOI 10.1109/ICDCS.2011.12
   Fu MS, 2017, PROC INT CONF DATA, P1165, DOI 10.1109/ICDE.2017.161
   Grulich PM, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P2487, DOI 10.1145/3318464.3389739
   Huang Q, 2016, PROC VLDB ENDOW, V10, P73
   Hui Jin, 2010, Proceedings 39th International Conference on Parallel Processing (ICPP 2010), P525, DOI 10.1109/ICPP.2010.80
   Jacques-Silva G, 2009, I C DEPEND SYS NETWO, P145, DOI 10.1109/DSN.2009.5270344
   Jayasekara S, 2020, FUTURE GENER COMP SY, V110, P68, DOI 10.1016/j.future.2020.04.019
   Johnston CT, 2008, DELTA 2008: FOURTH IEEE INTERNATIONAL SYMPOSIUM ON ELECTRONIC DESIGN, TEST AND APPLICATIONS, PROCEEDINGS, P228, DOI 10.1109/DELTA.2008.21
   Kumbhare A, 2015, INT CON DISTR COMP S, P328, DOI 10.1109/ICDCS.2015.41
   Kwon Y, 2008, PROC VLDB ENDOW, V1, P574
   Laosooksathit S., 2010, COMPUTING HPC SYSTEM, V12, P13
   Lei Zhu, 2013, Advanced Parallel Processing Technologies. 10th International Symposium, APPT 2013. Revised Selected Papers: LNCS 8299, P367, DOI 10.1007/978-3-642-45293-2_28
   Leskovec J., 2014, SNAP Datasets: Stanford large network dataset collection
   Lin CF, 2018, I C NETWORK PROTOCOL, P176, DOI 10.1109/ICNP.2018.00027
   Ling YB, 2001, IEEE T COMPUT, V50, P699, DOI 10.1109/12.936236
   Liu YD, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, P452, DOI 10.1109/CLUSTR.2007.4629264
   Loesing Simon., 2012, Proceedings of the 2012 Joint EDBT/ICDT Workshops, P55, DOI DOI 10.1145/2320765.2320789
   Mohror K, 2014, IEEE T PARALL DISTR, V25, P2255, DOI 10.1109/TPDS.2013.100
   Moody A., 2010, P 2010 ACM IEEE INT, P1, DOI [DOI 10.1109/SC.2010.18, 10.1109/SC.2010.18]
   Naksinehaboon N, 2009, INT J COMPUT COMMUN, V4, P386, DOI 10.15837/ijccc.2009.4.2455
   Naksinehaboon N, 2008, IEEE ACM INT SYMP, P783, DOI 10.1109/CCGRID.2008.109
   Nasir MAU, 2015, PROC INT CONF DATA, P137, DOI 10.1109/ICDE.2015.7113279
   Ozaki T, 2006, IEEE T DEPEND SECURE, V3, P130, DOI 10.1109/TDSC.2006.22
   Paun M, 2010, INT J FOUND COMPUT S, V21, P329, DOI 10.1142/S0129054110007283
   Petrini F., 2004, SYSTEM LEVEL FAULT T
   Qadeer A, 2021, SOFTWARE PRACT EXPER, V51, P385, DOI 10.1002/spe.2909
   To QC, 2018, VLDB J, V27, P847, DOI 10.1007/s00778-018-0514-9
   Rahman MT, 2016, IEEE ACM INT SYMP, P331, DOI 10.1109/CCGrid.2016.78
   Riaz F., 2011, Proceedings of the 2011 3rd International Conference on Computational Intelligence, Communication Systems and Networks (CICSyN 2011), P142, DOI 10.1109/CICSyN.2011.40
   Shastry M., 2011, INT J COMPUT SCI INF, V2, P2025
   Sheng Di, 2014, 2014 IEEE International Parallel & Distributed Processing Symposium (IPDPS), P1181, DOI 10.1109/IPDPS.2014.122
   Toshniwa A, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P147, DOI 10.1145/2588555.2595641
   Wang HY, 2012, INT PARALL DISTRIB P, P1180, DOI 10.1109/IPDPS.2012.108
   YOUNG JW, 1974, COMMUN ACM, V17, P530, DOI 10.1145/361147.361115
   Yudan L., 2008, OPTIMAL CHECKPOINTRE, P1
   Zaharia M, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P423, DOI 10.1145/2517349.2522737
   Zhang SH, 2019, INT CONF MANAGE DATA, P705, DOI 10.1145/3299869.3300067
   Zhuang Y, 2018, 2018 27 INT C COMP, P1
NR 50
TC 6
Z9 7
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 296
EP 315
DI 10.1002/spe.3021
EA SEP 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000698939800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tamburri, DA
   Blincoe, K
   Palomba, F
   Kazman, R
AF Tamburri, Damian Andrew
   Blincoe, Kelly
   Palomba, Fabio
   Kazman, Rick
TI <i>"The Canary in the Coal Mine ... "</i>A cautionary tale from the
   decline of SourceForge
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automated architecture analysis; community analysis; forge design;
   software failure
ID OPEN SOURCE SOFTWARE; COMMUNITY
AB Forges are online collaborative platforms to support the development of distributed open source software. While once mighty keepers of open source vitality, software forges are rapidly becoming less and less relevant. For example, of the top 10 forges in 2011, only one survives today-SourceForge-the biggest of them all, but its numbers are dropping and its community is tenuous at best. Through mixed-methods research, this article chronicles and analyze the software practice and experiences of the project's history-in particular its architectural and community/organizational decisions. We discovered a number of suboptimal social and architectural decisions and circumstances that, may have led toSourceForge's demise. In addition, we found evidence suggesting that the impact of such decisions could have been monitored, reduced, and possibly avoided altogether. The use of sociotechnical insights needs to become a basic set of design and software/organization monitoring principles that tell a cautionary tale on what to measure and what not to do in the context of large-scale software forge and community design and management.
C1 [Tamburri, Damian Andrew] Jheronimus Acad Data Sci, Data & Engn Lab, sHertogenbosch, Netherlands.
   [Blincoe, Kelly] Univ Auckland, Dept Elect Comp & Software Engn, Auckland, New Zealand.
   [Palomba, Fabio] Univ Salerno, Dept Comp Sci, Fisciano, Italy.
   [Kazman, Rick] Univ Hawaii, Dept Informat Technol Management, Honolulu, HI 96822 USA.
C3 University of Auckland; University of Salerno; University of Hawaii
   System
RP Tamburri, DA (corresponding author), Jheronimus Acad Data Sci, sHertogenbosch, Netherlands.
EM d.a.tamburri@tue.nl
RI Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Blincoe,
   Kelly/0000-0003-4092-9706
FU H2020 European Institute of Innovation and Technology [825040, 825480];
   H2020 - Industrial Leadership [825480] Funding Source: H2020 -
   Industrial Leadership
FX H2020 European Institute of Innovation and Technology, Grant/Award
   Numbers: 825040, 825480
CR AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   [Anonymous], 2017, EMPIRICAL SOFTWARE E
   [Anonymous], 1994, STRUCTURAL ANAL SOCI
   [Anonymous], 2018, IEEE T SOFTW ENG
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cai Y, 2014, P 38 INT C SOFTW ENG
   Capiluppi A, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P317, DOI 10.1109/CSMR.2003.1192440
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Chen ZF, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P18, DOI 10.1109/SATE.2016.10
   Ckantsidis C, 2003, SIAM PROC S, P16
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Cosentino V, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P499, DOI 10.1109/SANER.2015.7081864
   Crandall DavidJ., 2008, KDD, P160, DOI DOI 10.1145/1401890.1401914
   David PA, 2008, IND CORP CHANGE, V17, P647, DOI 10.1093/icc/dtn026
   Dutta R, 2018, J ECON THEORY, V177, P101, DOI 10.1016/j.jet.2018.05.016
   Feng Q, 2016, P P 15 INT C SOFTW A
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fitzgerald B, 2002, INFORM SYST J, V12, P3
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Galoppini R, 2013, TODAY WE OFFER DEVSH
   GRANGER CWJ, 1969, ECONOMETRICA, V37, P424, DOI 10.2307/1912791
   Hogan B, 2007, FIELD METHOD, V19, P116, DOI 10.1177/1525822X06298589
   Hoos F., 2014, The effects of serving two masters and using the internal audit function as a management training ground on internal auditors' objectivity
   Huang Q, 2013, INFORM TECHNOL PEOPL, V26, P191, DOI 10.1108/ITP-04-2013-0068
   Humphrey W., 2005, Why big software projects fail: the 12 key questions
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Khondhu Jymit., 2013, Open Source Software: Quality Verification, volume 404 of IFIP Advances in Information and Communication Technology, V404, P61
   Kock N, 1999, ICIS, P582
   Lee SYT, 2009, OMEGA-INT J MANAGE S, V37, P426, DOI 10.1016/j.omega.2007.05.005
   Lehman MM, 1998, EVIDENCE SUPPORTING
   Liu Y, 2005, P 1 INT C OP SOURC S, P154
   Magnoni, 2016, APPROACH MEASURE COM
   Mens T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P403, DOI 10.1109/CSMR-WCRE.2014.6747205
   Mo R, 2015, P 15 INT C SOFTW ARC
   Newman MEJ, 2003, PHYS REV E, V69, P66
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Palomba Fabio, 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P244, DOI 10.1109/ICSME.2016.27
   Pinzger M, 2008, P 16 ACM SIGS INT S
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Prokoudine A, 2015, ANATOMY SOURCEFORGE
   Tamburri DA, 2016, IEEE SOFTWARE, V33, P70, DOI 10.1109/MS.2016.144
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P61, DOI 10.1109/WICSA.2015.16
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Tamburri DA, 2013, IEEE SOFTWARE, V30, P29, DOI 10.1109/MS.2012.170
   Tamburri Damian Andrew Andrew, 2019, IEEE T SOFTW ENG
   The Apache Software Foundation Blog, 2014, APACHE SOFTWARE FDN
   Tourani P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P24, DOI 10.1109/SANER.2017.7884606
   Valetto G., 2007, 4 INT WORKSHOP MININ, P25, DOI DOI 10.1109/MSR.2007.33
   Van Antwerp M, 2008, P WORKSH PUBL DAT SO
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xiao L., 2016, P 38 INT C SOFTW ENG P 38 INT C SOFTW ENG
   Xu J., 2006, The economics of open source software development, P247
   Ye YW, 2003, PROC INT CONF SOFTW, P419
NR 57
TC 4
Z9 4
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2020
VL 50
IS 10
BP 1930
EP 1951
DI 10.1002/spe.2874
EA JUL 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ8HF
UT WOS:000548308500001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Hu, CY
   Shu, X
   Yan, XS
   Zeng, DZ
   Gong, WY
   Wang, L
AF Hu, Chengyu
   Shu, Xin
   Yan, Xuesong
   Zeng, Deze
   Gong, Wenyin
   Wang, Lei
TI Inline wireless mobile sensors and fog nodes placement for leakage
   detection in water distribution systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fog node; mobile sensor placement; water distribution system
ID MANAGEMENT
AB Burst or leakage in drinkable water distribution system has occurred frequently in recent years, causing severe damages, economic loss, and long-lasting society impact. A viable solution is to use agile inline mobile sensors to detect and so as to mitigate the burst or leakage. Distinguishing from online fixed sensors, mobile sensors can swim freely along the piles in water distribution network, thus giving a more precise detection. To combat the low power, low computation, and low communication capability of mobile sensors, the newly emerged fog computing provides a promising means to gather and preprocess the sensing data. In practice, due to the budget limitation, we can deploy a limited number of sensors and fog nodes in the system. This introduces a challenging problem on how to deploy them in the system, ie, sensor and fog node placement. We first formulate mobile sensor placement (MSP) as a path cover problem and prove it as NP-complete, and then we propose a customized genetic algorithm and a mixed greedy algorithm to solve MSP and fog node placement, respectively. The correctness and efficiency of the proposed algorithm are illustrated by a comprehensive experiment. Moreover, some critical factors, eg, sensor battery lifetime and movement pattern, are all extensively investigated and the results show the coverage ratio is sensitive to these factors.
C1 [Hu, Chengyu; Shu, Xin; Yan, Xuesong; Zeng, Deze; Gong, Wenyin; Wang, Lei] China Univ Geosci, Sch Comp Sci, 388 Lumo Rd, Wuhan 430074, Peoples R China.
C3 China University of Geosciences
RP Yan, XS (corresponding author), China Univ Geosci, Sch Comp Sci, 388 Lumo Rd, Wuhan 430074, Peoples R China.
EM yanxs1999@126.com
RI Gong, Wenyin/A-5916-2009
OI Hu, Chengyu/0000-0001-8226-5747
CR [Anonymous], 2017, GLOBAL RISKS REPORT
   Banks PS, 2012, R834868 EPA
   Cartwright I, 2017, J HYDROL, V555, P797, DOI 10.1016/j.jhydrol.2017.10.053
   Dabaghchian M, 2016, IEEE CONF COMM NETW, P100, DOI 10.1109/CNS.2016.7860475
   Gong WJ, 2016, ENVIRON MODELL SOFTW, V80, P306, DOI 10.1016/j.envsoft.2016.02.001
   Kang D, 2014, J WATER RES PLAN MAN, V140, P121, DOI 10.1061/(ASCE)WR.1943-5452.0000264
   Knobloch A, 2014, PROCEDIA ENGINEER, V89, P428, DOI 10.1016/j.proeng.2014.11.208
   Lai TT-T, 2012, P 11 INT C INF PROC
   Lambrou TP, 2014, IEEE SENS J, V14, DOI 10.1109/JSEN.2014.2316414
   Li R, 2015, WATER SCI TECH-W SUP, V15, P429, DOI 10.2166/ws.2014.131
   Oliker N, 2016, J WATER RES PLAN MAN, V142, DOI 10.1061/(ASCE)WR.1943-5452.0000569
   Palau CV, 2012, J WATER RES PLAN MAN, V138, P47, DOI 10.1061/(ASCE)WR.1943-5452.0000147
   Perelman L, 2012, P WORLD ENV WAT RES, V05
   Perelman L, 2013, WATER RES, V47, P4217, DOI 10.1016/j.watres.2013.04.048
   Pure Technologies, 2017, ACC LEAK GAS POCK DE
   Rasekh A, 2014, WORLD ENV WAT RES C, DOI 10.1061/9780784413548.038
   Suresh MA, 2014, 2014 IEEE 28 INT C A
   Suresh MA, 2015, ACM T SENSOR NETWORK, V11, DOI 10.1145/2700256
   Venkatachalam AS, 2014, IEEE J-STARS, V7, P753, DOI 10.1109/JSTARS.2013.2280995
   Wang LZ, 2018, FUTURE GENER COMP SY, V78, P353, DOI 10.1016/j.future.2016.06.009
   Wang LZ, 2016, CLUSTER COMPUT, V19, P793, DOI 10.1007/s10586-016-0569-6
   Wang LZ, 2014, COMPUT SCI ENG, V16, P8, DOI 10.1109/MCSE.2012.89
   Water Supply and Water Resources Division of the U.S. Environmental Protection Agency's National Risk Management Research Laboratory, 2012, EPANET 2 PROGR TOOLK, P45268
   Xu JH, 2010, EUR J OPER RES, V202, P707, DOI 10.1016/j.ejor.2009.06.010
NR 24
TC 8
Z9 9
U1 1
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1152
EP 1167
DI 10.1002/spe.2631
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT6RF
UT WOS:000537195200005
DA 2024-07-18
ER

PT J
AU Benuwa, BB
   Ghansah, B
   Ansah, EK
AF Benuwa, Ben-Bright
   Ghansah, Benjamin
   Ansah, Ernest K.
TI Deep locality-sensitive discriminative dictionary learning for semantic
   video analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deep learning; dictionary learning; kernel density estimator; locality
   information; sparse representation; video semantic analysis
ID KERNEL DENSITY-ESTIMATION; SPARSE REPRESENTATION; FEATURE-SELECTION;
   ALGORITHM
AB Video semantic analysis (VSA) has received significant attention in the area of Machine Learning for some time now, particularly video surveillance applications with sparse representation and dictionary learning. Studies have shown that the duo has significantly impacted on the classification performance of video detection analysis. In VSA, the locality structure of video semantic data containing more discriminative information is very essential for classification. However, there has been modest feat by the current SR-based approaches to fully utilize the discriminative information for high performance. Furthermore, similar coding outcomes are missing from current video features with the same video category. To handle these issues, we first propose an improved deep learning algorithm-locality deep convolutional neural network algorithm (LDCNN) to better extract salient features and obtain local information from semantic video. Second, we propose a novel DL method, called deep locality-sensitive discriminative dictionary learning (DLSDDL) for VSA. In the proposed DLSDDL, a discriminant loss function for the video category based on sparse coding of sparse coefficients is introduced into the structure of the locality-sensitive dictionary learning (LSDL) method. After solving the optimized dictionary, the sparse coefficients for the testing video feature samples are obtained, and then the classification result for video semantic is realized by reducing the error existing between the original and recreated samples. The experiment results show that the proposed DLSDDL technique considerably increases the efficiency of video semantic detection as against competing methods used in our experiment.
C1 [Benuwa, Ben-Bright; Ghansah, Benjamin; Ansah, Ernest K.] Data Link Inst, Sch Comp Sci, POB 2481, Tema, Ghana.
RP Ghansah, B (corresponding author), Data Link Inst, Sch Comp Sci, POB 2481, Tema, Ghana.
EM ben@datalink.edu.gh
RI Benuwa, Ben-Bright/J-6198-2019
OI Benuwa, Ben-Bright/0000-0002-3085-706X
CR Aharon M, 2006, IEEE T SIGNAL PROCES, V54, P4311, DOI 10.1109/TSP.2006.881199
   [Anonymous], 2010, Computer Vision and Pattern Recognition (CVPR), 2010 IEEE Conference on, IEEE, DOI [DOI 10.1109/CVPR.2010.5540018, 10.1109/CVPR.2010.5540018]
   [Anonymous], 2015, ARXIV150801084
   [Anonymous], 2009, P ADV NEUR INF PROC
   [Anonymous], 2009, ANN PHARMACOTHER
   [Anonymous], CVPR2009
   Botev ZI, 2010, ANN STAT, V38, P2916, DOI 10.1214/10-AOS799
   Cai S., 2014, LECT NOTES COMPUT SC, P624, DOI DOI 10.1007/978-3-319-10593-2_41
   Chang HY, 2016, NEUROCOMPUTING, V190, P124, DOI 10.1016/j.neucom.2016.01.026
   Chang J, 2013, PROC CVPR IEEE, P2051, DOI 10.1109/CVPR.2013.267
   Cheng YH, 2017, PROC CVPR IEEE, P1475, DOI 10.1109/CVPR.2017.161
   Chiang CC, 2015, MULTIMED TOOLS APPL, V74, P2861, DOI 10.1007/s11042-013-1750-z
   Engan K, 1999, INT CONF ACOUST SPEE, P2443, DOI 10.1109/ICASSP.1999.760624
   Feng ZZ, 2013, PATTERN RECOGN, V46, P2134, DOI 10.1016/j.patcog.2013.01.016
   FUKUSHIMA K, 1980, BIOL CYBERN, V36, P193, DOI 10.1007/BF00344251
   Geng XL, 2012, BIOMED SIGNAL PROCES, V7, P112, DOI 10.1016/j.bspc.2011.03.002
   Gritti T, 2014, COMPUT VIS IMAGE UND, V122, P172, DOI 10.1016/j.cviu.2014.02.008
   Harandi M., 2015, CVPR
   Jiang ZL, 2011, PROC CVPR IEEE, P1697, DOI 10.1109/CVPR.2011.5995354
   LAN X, IJCAI 2016
   LECUN Y, 1994, P 12 IAPR INT C PATT, V3
   Li GB, 2016, PROC CVPR IEEE, P478, DOI 10.1109/CVPR.2016.58
   Li L, 2013, INT CONF ASIC
   Long J, 2015, PROC CVPR IEEE, P3431, DOI 10.1109/CVPR.2015.7298965
   Lucey P., 2010, IEEE COMP SOC C COMP, P94, DOI 10.1109/CVPRW.2010.5543262
   Masood A, 2015, LECT NOTES COMPUT SC, V9489, P401, DOI 10.1007/978-3-319-26532-2_44
   Noh H, 2015, IEEE I CONF COMP VIS, P1520, DOI 10.1109/ICCV.2015.178
   Semwal VB, 2017, NEURAL COMPUT APPL, V28, P565, DOI 10.1007/s00521-015-2089-3
   Shan CF, 2009, IMAGE VISION COMPUT, V27, P803, DOI 10.1016/j.imavis.2008.08.005
   Song I, 2014, IEEE MTT S INT MICR
   Sun C, 2015, MM'15: PROCEEDINGS OF THE 2015 ACM MULTIMEDIA CONFERENCE, P371, DOI 10.1145/2733373.2806226
   Sun YB, 2014, IEEE T IMAGE PROCESS, V23, P3816, DOI 10.1109/TIP.2014.2331760
   Wang KY, 2012, COMM COM INF SC, V321, P137
   Wei CP, 2013, PATTERN RECOGN, V46, P1277, DOI 10.1016/j.patcog.2012.11.014
   WEI WL, 2017, IEEE INT C AC SPEECH
   Xu D., 2015, arXiv preprint arXiv:1510.01553
   Yan ZC, 2016, ACM T GRAPHIC, V35, DOI 10.1145/2790296
   Yang M, 2011, IEEE I CONF COMP VIS, P543, DOI 10.1109/ICCV.2011.6126286
   Zhan YZ, 2016, J VIS COMMUN IMAGE R, V41, P65, DOI 10.1016/j.jvcir.2016.09.006
   Zhang P, 2005, PATTERN RECOGN LETT, V26, P909, DOI 10.1016/j.patrec.2004.09.053
   Zhang Q.Z.Q., 2010, PROC CVPR IEEE, DOI [10.1109/CVPR.2010.5539989, DOI 10.1109/CVPR.2010.5539989]
   ZHANG T, 2017, IEEE T APPL SUPERCON, V99, P1
   Zhang Z, 2018, IEEE T NEUR NET LEAR, V29, P3798, DOI 10.1109/TNNLS.2017.2740224
   Zhang Z, 2016, IEEE T SIGNAL PROCES, V64, P3790, DOI 10.1109/TSP.2016.2550016
   Zhu FD, 2017, IEEE T IMAGE PROCESS, V26, P3542, DOI 10.1109/TIP.2017.2703099
   Zou H, 2005, J R STAT SOC B, V67, P301, DOI 10.1111/j.1467-9868.2005.00503.x
NR 46
TC 3
Z9 3
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2020
VL 50
IS 4
BP 388
EP 406
DI 10.1002/spe.2783
EA JAN 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS7QQ
UT WOS:000509825300001
DA 2024-07-18
ER

PT J
AU Ghazouani, S
   Mezni, H
   Slimani, Y
AF Ghazouani, Souad
   Mezni, Haithem
   Slimani, Yahya
TI Bringing semantics to multicloud service compositions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; cloud service description; multicloud; ontology;
   semantic service composition; SWRL
ID CLOUD; OPTIMIZATION
AB Over the last decade, cloud computing has emerged as a new paradigm for delivering various on-demand virtualized resources as services. Cloud services have inherited not only the major characteristics of web services but also their classical issues, in particular, the interoperability issues and the heterogeneous nature of their hosting environments. This latter problem must be taken into account when composing various cloud services, in order to answer users' complex requirements. Moreover, leading cloud providers started to offer their services across multiple clouds. This adds a new factor of heterogeneity, as composition engines must take into consideration the heterogeneity not only at the service level (eg, service descriptions) but also at the cloud level (eg, pricing models, security policies). In this context, the semantics of multicloud actors must be incorporated into the multicloud service composition (MCSC) process. However, most existing approaches have treated the semantic service composition in traditional single-cloud environments. The few works in multicloud settings have ignored the semantics of cloud zones and resources. Moreover, they often focus on the general aspect of MCSC (eg, horizontal or vertical compositions). Even the few researchers who have addressed both vertical and horizontal service compositions, conducted their research studies in the context of single- cloud environments, which were proven to be unrealistic and offer limited quality of service (QoS) and security support. To ensure a high interoperability when composing services from multiple heterogeneous clouds and to enable a horizontal/vertical semantic service compositions, we take advantage of a standardized and semantically enriched generic service description, including all aspects (technical, operational, business, semantic, contextual) and supporting different cloud service models (SaaS, PaaS, IaaS, etc). We also incorporate Semantic Web Rule Language into the MCSC process to enable not only rule-based reasoning about various composition constraints (eg, QoS constraints, cloud zones constraints) but also to provide accurate semantic matching of cloud services' capabilities. Conducted experiments have proven the ability of our approach to combine high-quality services from the optimal number of clouds.
C1 [Ghazouani, Souad; Slimani, Yahya] Univ Manouba, ISAMM, Campus Univ Manouba, Manouba 2010, Tunisia.
   [Ghazouani, Souad; Slimani, Yahya] Carthage Univ, LISI Lab Comp Sci Ind Syst, Tunis, Tunisia.
   [Mezni, Haithem] Taibah Univ, Community Coll, CIS Dept, Medina, Saudi Arabia.
   [Mezni, Haithem] Univ Tunis, Higher Inst Management, SMART Lab, Tunis, Tunisia.
C3 Universite de la Manouba; Universite de Carthage; Taibah University;
   Universite de Tunis
RP Ghazouani, S (corresponding author), Univ Manouba, ISAMM, Campus Univ Manouba, Manouba 2010, Tunisia.
EM souad.ghazouani1987@gmail.com
OI GHAZOUANI, Souad/0000-0002-7832-6436
CR [Anonymous], 2005, Proceedings of the 1st International Association for the Advancement of Artificial Intelligence (AAAI) Fall Symposium on Agents and the Semantic Web, Technical Report FS-05-01
   [Anonymous], P 12 INT C INF INT W
   [Anonymous], 2008, P 2008 GRID COMP ENV, DOI DOI 10.1109/GCE.2008.4738443
   [Anonymous], 2014, International Journal of Computer Applications
   [Anonymous], 2014, HDB RES ARCHITECTURA
   [Anonymous], 2015, INTELLIGENT COMPUTIN
   Bu Sung Lee, 2011, 2011 Annual SRII Global Conference (SRII), P335, DOI 10.1109/SRII.2011.44
   Cardoso J., 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P602, DOI 10.1109/SCC.2010.93
   Cretella G, 2015, SOFTWARE PRACT EXPER, V45, P1619, DOI 10.1002/spe.2304
   Dastjerdi AV, 2015, SOFTWARE PRACT EXPER, V45, P197, DOI 10.1002/spe.2288
   Dean M., 2004, SWRL: a semantic web Rule Language combining OWL and RuleML
   Di Martino B, 2014, 2014 INTERNATIONAL CONFERENCE ON INTELLIGENT NETWORKING AND COLLABORATIVE SYSTEMS (INCOS), P647, DOI 10.1109/INCoS.2014.76
   Gabrel V, 2015, DISCRETE APPL MATH, V196, P100, DOI 10.1016/j.dam.2014.10.020
   Galan F, 2009, P 4 INT ICST C COMM, P19
   Ghazouani S, 2017, J SYST SOFTWARE, V132, P1, DOI 10.1016/j.jss.2017.06.067
   Ghazouani S, 2017, J NETW COMPUT APPL, V91, P61, DOI 10.1016/j.jnca.2017.04.013
   Goncalves G., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P399, DOI 10.1109/CloudCom.2011.60
   Gutierrez-Garcia JO, 2010, COMM COM INF SC, V121, P1
   Jula A, 2014, EXPERT SYST APPL, V41, P3809, DOI 10.1016/j.eswa.2013.12.017
   Jula A, 2013, 2013 IEEE WORKSHOP ON MEMETIC COMPUTING (MC), P37, DOI 10.1109/MC.2013.6608205
   Junker F., 2012, 2012 IEEE 10th International Symposium on Parallel and Distributed Processing with Applications (ISPA), P479, DOI 10.1109/ISPA.2012.70
   Karim R., 2015, 2015 IEEE 8 INT C CL
   Klusch M., 2006, Proceedings of the fifth international joint conference on Autonomous agents and multiagent systems, P915
   Kurdi H, 2015, COMPUT ELECTR ENG, V42, P107, DOI 10.1016/j.compeleceng.2014.11.002
   Lahmar F, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1947
   Le Sun, 2012, 2012 Eighth International Conference on Semantics, Knowledge and Grids (SKG 2012), P128, DOI 10.1109/SKG.2012.49
   Mezni H, 2017, J SYST SOFTWARE, V134, P138, DOI 10.1016/j.jss.2017.08.016
   Moscato F., 2011, 2011 Federated Conference on Computer Science and Information Systems (FedCSIS), P973
   Gutierrez-Garcia JO, 2013, APPL INTELL, V38, P436, DOI 10.1007/s10489-012-0380-x
   Petcu D, 2013, J CLOUD COMPUT-ADV S, V2, DOI 10.1186/2192-113X-2-12
   Rauber T, 2010, PARALLEL PROGRAMMING: FOR MULTICORE AND CLUSTER SYSTEMS, P93, DOI 10.1007/978-3-642-04818-0_3
   Torkashvan M, 2012, 2012 SIXTH INTERNATIONAL SYMPOSIUM ON TELECOMMUNICATIONS (IST), P929, DOI 10.1109/ISTEL.2012.6483119
   Vakili A, 2017, J NETW COMPUT APPL, V81, P24, DOI 10.1016/j.jnca.2017.01.005
   Wang DD, 2015, COMPUT ELECTR ENG, V43, P129, DOI 10.1016/j.compeleceng.2014.10.008
   Wang SG, 2013, MOBILE NETW APPL, V18, P116, DOI 10.1007/s11036-012-0373-3
   Yang Y., 2012, ADV INFORM SCI SERVI, V4, P238
   Yu Q, 2015, COMPUT ELECTR ENG, V41, P18, DOI 10.1016/j.compeleceng.2014.12.004
   Zeng C, 2009, LECT NOTES COMPUT SC, V5931, P290, DOI 10.1007/978-3-642-10665-1_26
   Zhang L., 2014, 4 INT C CLOUD COMP S
   Zou G., 2010, P INT C CLOUD COMP V, P1, DOI DOI 10.5176/978-981-08-5837-7_166
NR 40
TC 3
Z9 3
U1 4
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2020
VL 50
IS 4
BP 447
EP 469
DI 10.1002/spe.2789
EA JAN 2020
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS7QQ
UT WOS:000507116400001
DA 2024-07-18
ER

PT J
AU Fu, X
   Wang, HM
   Shi, PC
   Ouyang, X
   Zhang, XH
AF Fu Xiang
   Wang Huaimin
   Shi Peichang
   Ouyang Xue
   Zhang Xunhui
TI Jointgraph: A DAG-based efficient consensus algorithm for consortium
   blockchains
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE blockchain; byzantine fault-tolerant; consensus algorithm; DAG;
   supervisory
AB The blockchain is a distributed ledger that records all transactions and operations in a shared manner. Public blockchains such as Bitcoin realize decentralization at the cost of mining overhead, which is not suitable for real-life scenarios requiring high throughput. Techniques such as the consortium blockchain improve efficiency through partial decentralization. However, the consensus algorithms used in the existing state-of-the-art consortium blockchains face many challenges when dealing with commercial applications. For example, the high communication overhead hinders the scalability of PBFT-based consensus algorithms even though they are efficient at small scale. Hashgraph, one of the most popular Directed Acyclic Graph-based (DAG-based) consensus algorithms, achieves good performance in scalability; however, it does not allow users' dynamic participation. To deal with these challenges, we propose Jointgraph, a Byzantine fault-tolerance consensus algorithm for consortium blockchains based on DAG. In Jointgraph, transactions are packed into events and validated by no less than 2/3 of all members. A supervisor is introduced in our design, who monitors member behaviors and improves consensus efficiency. Simulation results demonstrate that Jointgraph outperforms Hashgraph in both throughput and latency.
C1 [Fu Xiang; Wang Huaimin; Shi Peichang; Ouyang Xue; Zhang Xunhui] Natl Univ Def Technol, Sch Comp, Changsha 410073, Hunan, Peoples R China.
   [Fu Xiang; Wang Huaimin; Shi Peichang; Zhang Xunhui] Key Lab Software Engn Complex Syst, Changsha, Hunan, Peoples R China.
C3 National University of Defense Technology - China
RP Shi, PC (corresponding author), Natl Univ Def Technol, Sch Comp, Changsha 410073, Hunan, Peoples R China.
EM shipeichang@kylinos.cn
RI Zhang, Xunhui/AAW-7324-2021
OI Zhang, Xunhui/0000-0002-4027-9443
FU National Key RAMP;D Program of China [2016YFB1000100]; National Natural
   Science Foundation of China [61772030]; GF Innovative Research Program
FX National Key R&D Program of China, Grant/Award Number: 2016YFB1000100;
   National Natural Science Foundation of China, Grant/Award Number:
   61772030; GF Innovative Research Program
CR Alibaba, 2017, AL GROUP GEN US 25 3
   Androulaki E, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190538
   [Anonymous], 2018, Int J Trans Innov Syst
   Baird L, 2016, Swirlds, Inc.Technical Report SWIRLDS-TR-2016
   Beni FM, 2018, P 2018 IEEE 38 INT C
   Bessani A., 2017, P 1 WORKSH SCAL RES, P1
   BROWN RG, 2016, R3 CEV, V1, P15
   Buchman E, 2016, THESIS U GUELPH
   Castro M, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P173, DOI 10.1145/571637.571640
   Chen Q, 2017, ARXIV170908753
   Chen  Z., 2017, J INFORM SECURITY RE, V3, P227
   Churyumov A., 2016, Byteball: A Decentralized System for Storage and Transfer of Value
   Crain T., 2017, arXiv
   Douceur J., 2002, PEER TO PEER SYSTEMS
   Gervais A., 2016, P 2016 ACMSIGSAC C C, P3
   Gilad Y, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P51, DOI 10.1145/3132747.3132757
   Gramoli V, 2020, FUTURE GENER COMP SY, V107, P760, DOI 10.1016/j.future.2017.09.023
   Hope-Bailie A, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P281, DOI 10.1145/2872518.2889307
   Karame G., 2012, IACR Cryptology ePrint Archive, V2012
   Kermarrec Anne-Marie, 2007, Operating Systems Review, V41, P2, DOI 10.1145/1317379.1317381
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Li C., 2018, ARXIV180503870
   Li XQ, 2020, FUTURE GENER COMP SY, V107, P841, DOI 10.1016/j.future.2017.08.020
   Nakamoto S, 2008, BITCOIN PEER TO PEER, DOI DOI 10.1007/S10838-008-9062-0
   Pilkington M, 2016, RESEARCH HANDBOOK ON DIGITAL TRANSFORMATIONS, P225
   Pongnumkul S, 2017, 2017 26TH INTERNATIONAL CONFERENCE ON COMPUTER COMMUNICATION AND NETWORKS (ICCCN 2017)
   Popov K, 2016, ALLERGY, ASTHMA & IMMUNOPHYSIOLOGY: INNOVATIVE TECHNOLOGIES, P131
   Rocket T., 2018, Snowflake to Avalanche: A Novel Metastable Consensus Protocol Family for Cryptocurrencies
   Schultz P.D., 2017, Theories of personality, P1, DOI [https://doi.org/10.2139/ssrn.3144241, DOI 10.2139/SSRN.3144241]
   Singh A, 2006, IEEE INFOCOM SER, P1725
   Sixt E, 2017, BITCOINS ANDERE DEZE, P189
   Sompolinsky Y., 2018, IACR Cryptol. ePrint Arch, V2018, P104
   Dinh TTA, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1085, DOI 10.1145/3035918.3064033
   Vukoli M, 2015, OPEN PROBLEMS NETWOR, P112
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Yoo S, 2017, ASIA PAC J INNOV ENT, V11, P312, DOI 10.1108/APJIE-12-2017-036
   [袁勇 Yuan Yong], 2016, [自动化学报, Acta Automatica Sinica], V42, P481
   Zheng ZB, 2017, IEEE INT CONGR BIG, P557, DOI 10.1109/BigDataCongress.2017.85
NR 38
TC 15
Z9 18
U1 2
U2 83
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2021
VL 51
IS 10
SI SI
BP 1987
EP 1999
DI 10.1002/spe.2748
EA SEP 2019
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UN1VW
UT WOS:000485339400001
DA 2024-07-18
ER

PT J
AU Decaroli, G
   Gagie, T
   Manzini, G
AF Decaroli, Gianni
   Gagie, Travis
   Manzini, Giovanni
TI A compact index for order-preserving pattern matching
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compressed indices; data compression; order-preserving matching
ID ALGORITHM
AB Order-preserving pattern matching has been introduced recently, but it has already attracted much attention. Given a reference sequence and a pattern, we want to locate all substrings of the reference sequence whose elements have the same relative order as the pattern elements. For this problem, we consider the offline version in which we build an index for the reference sequence so that subsequent searches can be completed very efficiently. We propose a space-efficient index that works well in practice despite its lack of good worst-case time bounds. Our solution is based on the new approach of decomposing the indexed sequence into an order component, containing ordering information, and a delta component, containing information on the absolute values. Experiments show that this approach is viable, is faster than the available alternatives, and is the first one offering simultaneously small space usage and fast retrieval.
C1 [Decaroli, Gianni; Manzini, Giovanni] Univ Eastern Piedmont Amedeo Avogadro, Dept Sci & Technol Innovat, Comp Sci Inst, Viale Teresa Michel 11, I-15121 Alessandria, AL, Italy.
   [Gagie, Travis] Diego Portales Univ, Santiago, Chile.
   [Manzini, Giovanni] CNR, Ist Informat & Telemat, Via Giuseppe Moruzzi 1, I-56124 Pisa, Italy.
C3 University of Eastern Piedmont Amedeo Avogadro; Consiglio Nazionale
   delle Ricerche (CNR); Istituto di Informatica e Telematica (IIT-CNR)
RP Manzini, G (corresponding author), Univ Eastern Piedmont Amedeo Avogadro, Dept Sci & Technol Innovat, Comp Sci Inst, Viale Teresa Michel 11, I-15121 Alessandria, AL, Italy.; Manzini, G (corresponding author), CNR, Ist Informat & Telemat, Via Giuseppe Moruzzi 1, I-56124 Pisa, Italy.
EM giovanni.manzini@uniupo.it
RI Gagie, Travis/F-8422-2012; MANZINI, Giovanni/ABF-1910-2020
OI Gagie, Travis/0000-0003-3689-327X; MANZINI, Giovanni/0000-0002-5047-0196
CR [Anonymous], 1997, ACM SIGACT NEWS
   Belazzougui D, 2013, LECT NOTES COMPUT SC, V8283, P66, DOI 10.1007/978-3-642-45030-3_7
   Cantone D, 2015, P PRAG STRING C PRAG
   Chhabra T, 2015, P PRAG STRING C PRAG
   Chhabra T, 2017, SOFTWARE PRACT EXPER, V47, P731, DOI 10.1002/spe.2433
   Chhabra T, 2016, INFORM PROCESS LETT, V116, P71, DOI 10.1016/j.ipl.2015.10.005
   Chhabra T, 2015, LECT NOTES COMPUT SC, V9309, P177, DOI 10.1007/978-3-319-23826-5_18
   Chhabra T, 2014, LECT NOTES COMPUT SC, V8504, P307, DOI 10.1007/978-3-319-07959-2_26
   Cho S, 2015, INFORM PROCESS LETT, V115, P397, DOI 10.1016/j.ipl.2014.10.018
   Crochemore M, 2016, THEOR COMPUT SCI, V638, P122, DOI 10.1016/j.tcs.2015.06.050
   Crochemore M, 2013, LECT NOTES COMPUT SC, V8214, P84, DOI 10.1007/978-3-319-02432-5_13
   FARO F, 2016, LECTURE NOTES IN COM, V2016, P185, DOI DOI 10.1007/978-3-319-41168-2_16
   Ferragina P, 2005, J ACM, V52, P552, DOI 10.1145/1082036.1082039
   Ferragina P, 2001, INFORM SCIENCES, V135, P13, DOI 10.1016/S0020-0255(01)00098-6
   Gagie T, 2017, 25 ANN EUR S ALG VIE
   Gawrychowski P, 2014, LECT NOTES COMPUT SC, V8486, P130, DOI 10.1007/978-3-319-07566-2_14
   Gianni D, 2017, 2017 DAT COMPR C SNO
   Gog S, 2014, LECT NOTES COMPUT SC, V8504, P326, DOI 10.1007/978-3-319-07959-2_28
   Kim J, 2014, THEOR COMPUT SCI, V525, P68, DOI 10.1016/j.tcs.2013.10.006
   Kubica M, 2013, INFORM PROCESS LETT, V113, P430, DOI 10.1016/j.ipl.2013.03.015
   Manzini G, 2004, SOFTWARE PRACT EXPER, V34, P1397, DOI 10.1002/spe.619
   Navarro G, 2007, ACM COMPUT SURV, V39, DOI 10.1145/1216370.1216372
   Travis G, 2018, P 29 ANN ACM SIAM S
NR 23
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2019
VL 49
IS 6
BP 1041
EP 1051
DI 10.1002/spe.2694
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW3GY
UT WOS:000466579600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Uzun, B
   Tekinerdogan, B
AF Uzun, Burak
   Tekinerdogan, Bedir
TI Architecture conformance analysis using model-based testing: A case
   study approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architecture conformance analysis; case study; model-based testing;
   software architecture
ID SOFTWARE ARCHITECTURE; SYSTEM
AB Context: The architectural drift problem defines the discrepancy between the architecture description and the code. Deviations of the code from the architecture can occur if architectural constraints as defined in the architectural models are not implemented in the code. For large-scale systems, manually checking the consistency of the architecture with the code is not trivial and cumbersome.Objective: The overall objective of this paper is to propose and analyze the effectiveness and practicality of an architecture conformance analysis approach using model-based testing (ACAMBT) approach for checking the consistency between architectural models and the code. Hereby, we consider the case whereby the architecture is assumed correct, and the code needs to align with the architecture.Method: We propose a model-based testing that uses architectural views to automatically derive test cases for checking the architectural constraints in the code. We have evaluated the approach and the corresponding toolset for a real industrial case study using a systematic case study protocol. Further, we have adopted exhaustive fault-injection techniques to detect the constraint violations.Results: The evaluation of the approach on real code showed that deviations with the architectural constraints could be easily detected in the code.Conclusion: We can conclude that ACAMBT is effective for identifying inconsistencies between the architecture views and the code for the defined view constraints. Our survey study with practitioners showed that adopting the ACAMBT approach is practical and easy to use. The approach as such can be considered as a complimentary tool to the existing testing and reflexion modeling approaches.
C1 [Uzun, Burak; Tekinerdogan, Bedir] Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
C3 Wageningen University & Research
RP Tekinerdogan, B (corresponding author), Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
EM bedir.tekinerdogan@wur.nl
RI Tekinerdogan, Bedir/K-3639-2019
OI Tekinerdogan, Bedir/0000-0002-8538-7261
CR Ali N, 2018, EMPIR SOFTW ENG, V23, P224, DOI 10.1007/s10664-017-9515-3
   [Anonymous], 2011, 420102007 ISOIEC
   [Anonymous], 2014, 10591993 ANSIIEEE
   [Anonymous], P 7 INT WORKSH AUT S
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2011, Documenting Software Architectures: Views and Beyond
   [Anonymous], 2020, EMPIR SOFTW ENG
   Antoniol G, 2001, SOFTWARE PRACT EXPER, V31, P331, DOI 10.1002/spe.374
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barbosa R., 2007, P 6 INT IEEE C COMM
   Bertolino A, 2000, P 22 INT C SOFTW ENG
   Clarke EM, 1999, MODEL CHECKING, P1
   Demirli E, 2011, LECT NOTES COMPUT SC, V6903, P336, DOI 10.1007/978-3-642-23798-0_36
   Díaz-Pace JA, 2012, INFORM SOFTWARE TECH, V54, P448, DOI 10.1016/j.infsof.2011.12.005
   Gurbuz HG, 2018, SOFTWARE QUAL J, V26, P1327, DOI 10.1007/s11219-017-9386-2
   Javed AZ, 2007, P 2 INT WORKSH AUT S
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Johnsen A, 2011, LECT NOTES COMPUT SC, V6903, P105, DOI 10.1007/978-3-642-23798-0_11
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B., 2003, ACM SIGSOFT SOFTW EN, V28, P24, DOI DOI 10.1145/638750.638758
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Knodel J, 2007, P 6 WORK IEEE IFIP C
   Koschke R., 2003, P 10 WORK C REV ENG
   Mellor StephenJ., 2004, MDA Distilled: Principles of Model-Driven Architecture
   Mistrik I., 2015, Software quality assurance: In large scale and complex software-intensive systems, V1st
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Offutt J., 2001, P 12 INT S SOFTW REL
   Reza H, 2010, 2010 7 INT C INF TEC
   Rosik J, 2011, SOFTWARE PRACT EXPER, V41, P63, DOI 10.1002/spe.999
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Tekinerdogan B, 2005, LECT NOTES COMPUT SC, V3599, P159
   Tekinerdogan B, 2014, COMPUTING HDB COMPUT, V1, P91
   Tekinerdogan B, 2013, P 9 INT ACM SIGS C Q
   Tekinerdogan B, 2016, SOFTWARE QUALITY ASSURANCE: IN LARGE SCALE AND COMPLEX SOFTWARE-INTENSIVE SYSTEMS, P221, DOI 10.1016/B978-0-12-802301-3.00010-7
   Tekinerdogan B, 2012, INT J SOFTW ENG KNOW, V22, P945, DOI 10.1142/S021819401250026X
   Terra R, 2015, SOFTWARE PRACT EXPER, V45, P315, DOI 10.1002/spe.2228
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Uzun B, 2018, INFORM SOFTWARE TECH, V102, P30, DOI 10.1016/j.infsof.2018.05.004
   Voas J.M., 1997, SOFTWARE FAULT INJEC
   Young M., 2008, SOFTWARE TESTING ANA
   Zhang PC, 2010, J SYST SOFTWARE, V83, P723, DOI 10.1016/j.jss.2009.11.709
NR 43
TC 7
Z9 8
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2019
VL 49
IS 3
BP 423
EP 448
DI 10.1002/spe.2667
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0HU
UT WOS:000459868900005
DA 2024-07-18
ER

PT J
AU Karna, H
   Vickovic, L
   Gotovac, S
AF Karna, Hrvoje
   Vickovic, Linda
   Gotovac, Sven
TI Application of data mining methods for effort estimation of software
   projects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE clustering; data mining; decision-making; effort estimation; software
   development process; softwareengineering
ID PREDICTION
AB Information technology companies currently use data mining techniques in different areas with the goal of increasing the quality of decision-making and to improve their business performance. The study described in this paper uses a data mining approach to produce an effort estimation of a software development process. It is based on data collected in a Croatian information technology company. The study examined 27 software projects with a total effort exceeding 42000 work hours. The presented model employs a modified Cross-Industry Standard Process for Data Mining, where prior to model creation, additional clustering of projects is performed. The results generated by the proposed approach generally had a smaller effort estimation error than the results of human experts. The applied approach has proved that sound results can be gained through the use of data mining within the studied area. As a result, it would be wise to use such estimates as additional input in the decision-making process.
C1 [Karna, Hrvoje; Vickovic, Linda; Gotovac, Sven] Univ Split, Dept Elect & Comp, Fac Elect Engn Mech Engn & Naval Architecture, Split 21000, Croatia.
C3 University of Split
RP Karna, H (corresponding author), Univ Split, Dept Elect & Comp, Fac Elect Engn Mech Engn & Naval Architecture, Split 21000, Croatia.
EM hrvoje.karna@fesb.hr
RI Karna, Hrvoje/AAA-8741-2020
OI Karna, Hrvoje/0000-0003-4299-3963
CR Agrawal P, 2016, INT J ENG TRENDS TEC, V35, P250
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2013, INT J COMPUT APPL
   [Anonymous], P 36 INT C SOFTW ENG
   [Anonymous], P 1 INT WORKSH REAL
   Bardsiri VK, 2014, EMPIR SOFTW ENG, V19, P857, DOI 10.1007/s10664-013-9241-4
   Bener A, 2016, ART SCI ANAL SOFTWAR, P453
   Boehm BW., 1981, Software Engineering Economics
   Boetticher G., 2006, 2 INT PRED MOD SOFTW
   Boetticher GD, 2007, P 3 INT WORKSH PRED
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Dave VS, 2014, ARTIF INTELL REV, V42, P295, DOI 10.1007/s10462-012-9339-x
   Dhamija A., 2017, International Journal Of Computational Intelligence Research (IJCIR), V13, P559
   Ferrucci F, 2012, P 8 INT C PRED MOD S
   Gencel C, 2016, 2016 JOINT C INT WOR
   Haapio T, 2011, INT J SOFTW ENG KNOW, V21, P725, DOI 10.1142/S0218194011005438
   Hassan A. E., 2010, P FSE SDP WORKSH FUT
   Husain W, 2011, P 2011 5 INT C INF T
   Jorgensen M., 2000, BEG BORR STEAL WORKS
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2016, J SYST SOFTWARE, V117, P274, DOI 10.1016/j.jss.2016.03.048
   Jorgensen M, 2014, IEEE SOFTWARE, V31, P37, DOI 10.1109/MS.2014.49
   Karna H, 2014, 2014 9 INT C SOFTW E
   Karna H, 2016, THESIS
   Kaufman L., 2009, FINDING GROUPS DATA
   Keung J., 2011, Automated Software Engineering
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Krishna R, 2017, 32 IEEE ACM INT C AU
   Kuan S., 2017, Int. J. Softw. Eng. Appl., V8, P23
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Layman L, 2008, P 2008 INT WORK C MI
   Mendes E., 2009, P 13 INT C EV ASS SO
   Menzies T., 2002, HDB SOFTWARE ENG KNO, V1, P837
   Menzies T, 2002, P 27 ANN NASA GODD S
   Menzies T, 2011, P 2011 26 IEEE ACM I
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P2658, DOI 10.1007/s10664-016-9472-2
   Menzies T, 2013, IEEE SOFTWARE, V30, P31, DOI 10.1109/MS.2013.86
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Minku LL, 2016, PROG ARTIF INTELL, V5, P307, DOI 10.1007/s13748-016-0092-2
   Nisbet R., 2009, HDB STAT ANAL DATA M
   Prabhakar MD., 2013, INT J ADV RES COMPUT, V3, P40
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Radlinski L., 2010, International Journal of Software Engineering and Computing, V2, P123
   Sarro F, 2016, P 2018 IEEE ACM 38 I
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sigweni B, 2016, P 20 INT C EV ASS SO
   Song LM, 2013, SCI WORLD J, DOI 10.1155/2013/917506
   Suri P.K., 2012, INT J COMPUTER APPL, V48, P12, DOI [DOI 10.5120/7479-0540, 10.5120/7479-0540]
   Taylor Quinn, 2010, International Journal of Data Analysis Techniques and Strategies, V2, P243
   Turhan B., 2014, 40 EUROMICRO C SOFTW
   Vicinanza SS, 1991, INFORM SYST RES, V2, P243, DOI 10.1287/isre.2.4.243
   Xia T, 2018, WHY SOFTWARE EFFORT
   Xie T, 2013, P 2013 2 INT WORKSH, DOI [10.1109/RAISE.2013.6615197, DOI 10.1109/RAISE.2013.6615197]
   Xie T, 2018, ISEC'18: PROCEEDINGS OF THE 11TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3172871.3172891
   Xie T, 2009, COMPUTER, V42, P55, DOI 10.1109/MC.2009.256
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Zhang D., 2011, P INT WORKSH MACH LE
NR 61
TC 7
Z9 7
U1 1
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2019
VL 49
IS 2
SI SI
BP 171
EP 191
DI 10.1002/spe.2651
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0GK
UT WOS:000459864300003
DA 2024-07-18
ER

PT J
AU Reyes-Alvarez, L
   Roldán-García, MD
   Aldana-Montes, JF
AF Reyes-Alvarez, Liudmila
   del Mar Roldan-Garcia, Maria
   Aldana-Montes, Jose F.
TI Tool for materializing OWL ontologies in a column-oriented database
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Linked Data; MapReduce framework; NoSQL databases; OWL ontologies;
   scalable reasoning
ID LARGE-SCALE; WEB
AB Big data technologies enable people to store, analyze, and utilize large amounts of complex data effectively. In this context, NoSQL (Not only Structured Query Language) databases have emerged as the most commonly used infrastructure for handling big Resource Description Framework data. In this paper, we present our proposal to materialize classified OWL (Web Ontology Language) ontologies in a NoSQL database. This materialization process enables the distributed storage of Resource Description Framework data by exploiting the inherent distribution of the NoSQL database nodes. Furthermore, this approach supposes the first step toward a novel approach to scalable OWL reasoning, which enables scalable Linked Data reasoning. To validate our proposal, we developed a prototype for a tool that stores an OWL ontology in a Cassandra database following our approach. Finally, we introduce our reasoning strategy to compute the ontology closure using this Cassandra database.
C1 [Reyes-Alvarez, Liudmila; del Mar Roldan-Garcia, Maria; Aldana-Montes, Jose F.] Univ Malaga, Edificio Invest Ada Byron, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Roldán-García, MD (corresponding author), Univ Malaga, Edificio Invest Ada Byron, E-29071 Malaga, Spain.
EM mmar@lcc.uma.es
RI Aldana-Montes, José F./L-5686-2014; Roldan-Garcia, Maria del
   Mar/L-8163-2014
OI Roldan-Garcia, Maria del Mar/0000-0002-1470-2017
FU Ministerio de Economia y Competitividad [TIN2014-58304-R]; Plan Andaluz
   de Investigacion, Desarrollo e Innovacion [P11-TIC-7529, P12-TIC-1519]
FX Ministerio de Economia y Competitividad, Grant/Award Number:
   TIN2014-58304-R; Plan Andaluz de Investigacion, Desarrollo e Innovacion,
   Grant/Award Number: P11-TIC-7529 and P12-TIC-1519
CR Abbes H, 2016, INTELLIGENT SYSTEMS
   [Anonymous], ARXIV13072603
   [Anonymous], NON TRADITIONAL REF
   Baader F., 2003, DESCRIPTION LOGIC HD
   Banerjee Shreya, 2016, International Journal of Software Engineering and Its Applications, V10, P41
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Borst P, 1997, INT J HUM-COMPUT ST, V46, P365, DOI 10.1006/ijhc.1996.0096
   Cudré-Mauroux P, 2013, LECT NOTES COMPUT SC, V8219, P310, DOI 10.1007/978-3-642-41338-4_20
   Dean M., 2004, SWRL: a semantic web Rule Language combining OWL and RuleML
   Drias Y, 2014, MODEL STORAGE ORIENT
   Gandini Andrea, 2014, Computer Performance Engineering. 11th European Workshop, EPEW 2014. Proceedings: LNCS 8721, P16, DOI 10.1007/978-3-319-10885-8_2
   George L., 2011, HBASE DEFINITIVE GUI
   Glimm B, 2012, J WEB SEMANT, V14, P84, DOI 10.1016/j.websem.2011.12.007
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Gundla NK, 2016, PROCEDIA COMPUT SCI, V91, P460, DOI 10.1016/j.procs.2016.07.120
   Harris S., 2009, P 5 INT WORKSH SCAL
   Hecht R, 2011, INT C CLOUD SERV COM
   Heflin J., 2007, An Introduction to the OWL Web Ontology Language
   Horridge Matthew., 2009, OWL 2 WEB ONTOLOGY L
   Horrocks I, 2003, LECT NOTES COMPUT SC, V2870, P17
   Horrocks I, 2007, ELECTRON NOTES THEOR, V174, P3, DOI 10.1016/j.entcs.2006.11.022
   Hu B, 2012, P 14 INT C INF INT W
   Jakub M, 2013, THESIS
   Jean S, 2007, LECT NOTES COMPUT SC, V4443, P1119
   Jentzsch A., 2017, LINKING OPEN DATA CL
   Kaoudi Z, 2015, VLDB J, V24, P67, DOI 10.1007/s00778-014-0364-z
   Khadilkar V, 2012, P 2012 INT C POST DE
   Kiran VK, 2014, 9 INT C IND INF SYST
   Ladwig G., 2011, 7 INT WORKSH SCAL SE
   Lehmann J, 2015, SEMANT WEB, V6, P167, DOI 10.3233/SW-140134
   Liu B, 2015, IEEE T CYBERNETICS, V45, P53, DOI 10.1109/TCYB.2014.2318898
   Mutharaju R, 2010, P 23 INT WORKSH DESC
   Noy N. F., 2001, Ontology development 101: A guide to creating your first ontology
   Papailiou Nikolaos, 2012, P 21 INT C WORLD WID, P397, DOI DOI 10.1145/2187980.2188058
   Pérez J, 2006, LECT NOTES COMPUT SC, V4273, P30
   Rabl T, 2012, ARXIV12084167 CORR
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Urbani J, 2012, J WEB SEMANT, V10, P59, DOI 10.1016/j.websem.2011.05.004
   W3C OWL Working Group, 2009, OWL2 WEB ONT LANG DO
NR 39
TC 5
Z9 5
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2019
VL 49
IS 1
BP 100
EP 119
DI 10.1002/spe.2645
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC7ZF
UT WOS:000452020000004
OA Bronze
DA 2024-07-18
ER

PT J
AU Frías, BV
   Palopoli, L
   Abeni, L
   Fontanelli, D
AF Frias, Bernardo Villalba
   Palopoli, Luigi
   Abeni, Luca
   Fontanelli, Daniele
TI The PROSIT tool: Toward the optimal design of probabilistic soft
   real-time systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE probabilistic guarantees; real-time systems; soft real-time scheduling
ID GUARANTEES; TASKS
AB In recent years, series of important achievements have paved the way for the introduction of probabilistic analysis in the area of soft real-time systems design. In this article, we present an extensible design tool, called PROSIT, which facilitates the access to this technology for a potentially large number of researchers and industrial practitioners. The tool enables the probabilistic analysis of the temporal performance of a real-time task under fixed-priority and resource reservations scheduling algorithms. For resource reservations, the tool also offers an automatic procedure for the synthesis of scheduling parameters that optimize a quality metric related to the probabilistic behavior of the tasks.
C1 [Frias, Bernardo Villalba; Palopoli, Luigi; Fontanelli, Daniele] Univ Trento, Via Sommar 9, I-38123 Povo, Trento, Italy.
   [Abeni, Luca] Scuola S Anna, ReTiS Lab, Pzza Martiri Liberta 33, I-56127 Pisa, Italy.
C3 University of Trento
RP Palopoli, L (corresponding author), Univ Trento, Via Sommar 9, I-38123 Povo, Trento, Italy.
EM luigi.palopoli@unitn.it
RI Abeni, Luca/AAF-8220-2020
OI Abeni, Luca/0000-0002-7080-9601; Palopoli, Luigi/0000-0001-8813-8685;
   Fontanelli, Daniele/0000-0002-5486-9989
FU European Union [643644]
FX This project has received funding from the European Union's Horizon 2020
   Research and Innovation Programme-Societal Challenge 1 (DG CONNECT/H)
   under grant agreement no. 643644 "ACANTO - A CyberphysicAl social
   NeTwOrk using robot friends".
CR Abeni L, 1999, P 11 EUR C REAL TIM
   Abeni L, 2001, P 9 INT PAR DISTR PR
   Abeni L, 2012, 3 INT WORKSH AN TOOL
   Abeni L, 2017, P INSTR MEAS TECHN C
   ABENI L, 1998, P 19 IEEE REAL TIM S
   Abeni L, 2012, J SYST SOFTWARE, V85, P1147, DOI 10.1016/j.jss.2011.12.042
   Allen AO., 2014, PROBABILITY STAT QUE, V2nd
   [Anonymous], P 8 INT WORKSH AN TO
   Atlas A, 1998, P 19 IEEE REAL TIM S
   Baum LE, 1972, P 3 S IN LOS ANG CA
   Bernat G, 2003, TECHNICAL REPORT
   Bini D, 1995, COMPUTATIONS WITH MARKOV CHAINS, P21
   Bini D. A., 2005, Numerical Methods for Structured Markov Chains, Numerical Mathematics and Scientific Computation
   Chandarli Y, 2012, P 3 INT WORKSH AN TO
   Cheramy M., 2014, P WATERS, P6
   Cucinotta T, 2010, P 5 EUR C COMP SYST
   Cucu L., 2006, ACM SIGBED REV, V3, P7
   Cucu-Grosjean L, 2012, EUROMICRO, P91, DOI 10.1109/ECRTS.2012.31
   Diaz JL, 2004, P 25 IEEE REAL TIM S
   Diaz JL, 2002, P 23 IEEE REAL TIM S
   Eddy SR, 1996, CURR OPIN STRUC BIOL, V6, P361, DOI 10.1016/S0959-440X(96)80056-X
   EU Project, 2015, ACANTO CYB SOC NETWO
   FISCHER W, 1993, PERFORM EVALUATION, V18, P149, DOI 10.1016/0166-5316(93)90035-S
   Fontanelli D, 2011, P IEEE REAL TIM EMB
   Fontanelli D, 2013, AUTOMATICA, V49, P2330, DOI 10.1016/j.automatica.2013.04.036
   FORNEY GD, 1973, P IEEE, V61, P268, DOI 10.1109/PROC.1973.9030
   Frias BV, 2017, P IEEE REAL TIM EMB
   Gardner MK, 1999, THESIS
   Gardner MK, 1999, TOOLS ALGORITHMS CON
   Guennebaud G., 2010, Eigen
   Guet F, 2016, P 8 EUR C EMB REAL I
   Harbour MG, 2001, P 13 EUR C REAL TIM
   JOSEPH M, 1986, COMPUT J, V29, P390, DOI 10.1093/comjnl/29.5.390
   Kaczynski GA, 2007, P IEEE C EM TECHN FA
   Kim K, 2005, IEEE T COMPUT, V54, P1460, DOI 10.1109/TC.2005.174
   Kiraly C, 2010, 1 P IEEE INT C COMM
   Klaue Jirka, 2003, COMPUTER PERFORMANCE
   LATOUCHE G, 1993, J APPL PROBAB, V30, P650, DOI 10.2307/3214773
   Lelli J, 2016, SOFTWARE PRACT EXPER, V46, P821, DOI 10.1002/spe.2335
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Manica N, 2008, P IEEE REAL TIM EMB
   Manica Nicola., 2012, IEEE Int. Conf, P1
   Maxim D, 2011, P 19 INT C REAL TIM
   Maxim D, 2013, REAL TIM SYST SYMP P, P224, DOI 10.1109/RTSS.2013.30
   Mills AF, 2010, P 16 IEEE REAL TIM E
   Palopoli L, 2002, SOFTWARE PRACT EXPER, V32, P907, DOI 10.1002/spe.467
   Palopoli L, 2012, P 24 EUR C REAL TIM
   Palopoli L, 2016, IEEE T PARALL DISTR, V27, P640, DOI 10.1109/TPDS.2015.2416732
   Rajkumar R, 1998, P SPIE ACM C MULT CO
   Rajkumar R, 1997, P REAL TIM SYST SAN
   Santinelli L, 2017, P IEEE REAL TIM EMB
   Santinelli L, 2015, ACM T EMBED COMPUT S, V14, DOI 10.1145/2717113
   Singhoff F., 2004, Ada Letters, V24, P1
   Tia TS, 1995, P REAL TIM TECHN APP
   Urunuela R, 2010, P IEEE C EM TECHN FA
NR 55
TC 2
Z9 2
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2018
VL 48
IS 11
BP 1940
EP 1967
DI 10.1002/spe.2604
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GW3WX
UT WOS:000446841000002
DA 2024-07-18
ER

PT J
AU Yousefipour, A
   Rahmani, AM
   Jahanshahi, M
AF Yousefipour, Amin
   Rahmani, Amir Masoud
   Jahanshahi, Mohsen
TI Energy and cost-aware virtual machine consolidation in cloud computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cost; cloud computing; power consumption; virtual machine; VM
   consolidation; VM placement
ID PERFORMANCE; ALGORITHMS; EFFICIENCY; PLACEMENT
AB Cloud computing has become an essential part of the computational world, offering a variety of server capabilities as scalable virtualized services. Big data centers that deliver cloud computing services contain thousands of computational nodes that consume a significant amount of energy. By introducing the virtual machine (VM), virtualization technology is trying to overcome this problem. One impressive technique for minimizing the total number of active physical servers that lead to improved energy consumption is VM consolidation. To optimize the consolidation process, effective VM placement can be used. In this paper, we first present a mathematical model aimed at reducing power consumption and costs by employing an effective VM consolidation in the cloud data center. Subsequently, we propose a genetic algorithm-based meta-heuristic algorithm, namely, energy and cost-aware VM consolidation for resolving the problem. Finally, we compare our proposed model with the well-known first fit, first fit decreasing, and permutation pack algorithms. The experimental results show that our proposed model reduced power consumption and costs when compared with the three demonstrated algorithms.
C1 [Yousefipour, Amin; Rahmani, Amir Masoud] Islamic Azad Univ, Sci & Res Branch, Dept Comp Engn, Tehran, Iran.
   [Rahmani, Amir Masoud] Univ Human Dev, Comp Sci, Sulaymaniyah, Iraq.
   [Jahanshahi, Mohsen] Islamic Azad Univ, Cent Tehran Branch, Dept Comp Engn, Tehran, Iran.
C3 Islamic Azad University; Islamic Azad University
RP Rahmani, AM (corresponding author), Islamic Azad Univ, Sci & Res Branch, Dept Comp Engn, Tehran, Iran.; Rahmani, AM (corresponding author), Univ Human Dev, Comp Sci, Sulaymaniyah, Iraq.
EM rahmani@srbiau.ac.ir
RI Jahanshahi, Mohsen/AAD-7931-2021; Jahanshahi, Mohsen/ABF-5476-2021;
   Rahmani, Amir Masoud/K-2702-2013
OI Jahanshahi, Mohsen/0000-0002-5854-1112; Rahmani, Amir
   Masoud/0000-0001-8641-6119; Yousefipour, Amin/0000-0002-7210-6870
CR Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Barroso LA, 2007, COMPUTER, V40, P33, DOI 10.1109/MC.2007.443
   Beloglazov Anton, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P826, DOI 10.1109/CCGRID.2010.46
   Beloglazov A, 2013, THESIS
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Corradi A, 2014, FUTURE GENER COMP SY, V32, P118, DOI 10.1016/j.future.2012.05.012
   Dashti SE, 2016, J EXP THEOR ARTIF IN, V28, P97, DOI 10.1080/0952813X.2015.1020519
   Fan XB, 2007, CONF PROC INT SYMP C, P13, DOI 10.1145/1273440.1250665
   Ferreto TC, 2011, FUTURE GENER COMP SY, V27, P1027, DOI 10.1016/j.future.2011.04.016
   Garg SK, 2011, J PARALLEL DISTR COM, V71, P732, DOI 10.1016/j.jpdc.2010.04.004
   Ghasemi S, 2017, CLUSTER COMPUT
   Greenberg A, 2009, ACM SIGCOMM COMP COM, V39, P68, DOI 10.1145/1496091.1496103
   Hallawi H, 2017, FUTURE GENER COMP SY, V69, P1, DOI 10.1016/j.future.2016.10.025
   Hanani A, 2017, J SUPERCOMPUT, V73, P4796, DOI 10.1007/s11227-017-2050-6
   Horri A, 2014, J SUPERCOMPUT, V69, P1445, DOI 10.1007/s11227-014-1224-8
   Kim KH, 2007, P 7 IEEE INT S CLUST
   Lee YC, 2012, J SUPERCOMPUT, V60, P268, DOI 10.1007/s11227-010-0421-3
   Lublin Uri., 2007, Kvm: the linux virtual machine monitor
   Lucas-Simarro JL, 2015, CONCURR COMP-PRACT E, V27, P2260, DOI 10.1002/cpe.2972
   Lucas-Simarro JL, 2013, FUTURE GENER COMP SY, V29, P1431, DOI 10.1016/j.future.2012.01.007
   MARUYAMA K, 1977, INT J COMPUT INF SCI, V6, P131, DOI 10.1007/BF00999302
   Poess M, 2008, PROC VLDB ENDOW, V1, P1229, DOI 10.14778/1454159.1454162
   Salimi H, 2013, FUTURE GENER COMP SY, V29, P2057, DOI 10.1016/j.future.2013.02.005
   Sharifi M, 2012, J SUPERCOMPUT, V61, P46, DOI 10.1007/s11227-011-0658-5
   Stillwell M, 2010, J PARALLEL DISTR COM, V70, P962, DOI 10.1016/j.jpdc.2010.05.006
   Tordsson J, 2012, FUTURE GENER COMP SY, V28, P358, DOI 10.1016/j.future.2011.07.003
   Von Laszewski G, 2009, IEEE INT C CLUST COM
   Yesodha R, 2012, INT J FOUND COMPUT S, V2, P37, DOI DOI 10.5121/IJFCST.2012.2603
NR 29
TC 19
Z9 20
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2018
VL 48
IS 10
SI SI
BP 1758
EP 1774
DI 10.1002/spe.2585
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GS4EA
UT WOS:000443587100003
DA 2024-07-18
ER

PT J
AU Tiwari, N
   Bellur, U
   Sarkar, S
   Indrawan, M
AF Tiwari, Nidhi
   Bellur, Umesh
   Sarkar, Santonu
   Indrawan, Maria
TI Optimizing MapReduce for energy efficiency
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed computing; energy efficiency; energy model; MapReduce
   systems; optimal configuration; performance model
AB The efficient use of energy is essential to address concerns of cost and sustainability. Many data centers contain MapReduce clusters to process Big Data applications. A large number of machines and fault tolerance capabilities make MapReduce clusters energy inefficient. In this paper, we present a Configurator based on performance and energy models to improve the energy efficiency of MapReduce systems. Our solution is novel as it takes into account the dependence of the performance and energy consumption of a cluster on MapReduce parameters. While this dependence is known, we are the first to model it and design a Configurator to optimize these parameter settings for maximizing the energy efficiency of MapReduce systems. Our empirical evaluations show that the Configurator can result in up to 50% improvement in the energy efficiency of typical MapReduce applications in two architecturally different clusters.
C1 [Tiwari, Nidhi] Infosys Ltd, Bangalore 560100, Karnataka, India.
   [Tiwari, Nidhi] Monash Res Acad, IITB, Bombay, Maharashtra, India.
   [Bellur, Umesh] Indian Inst Technol, Bombay, Maharashtra, India.
   [Sarkar, Santonu] ABB Corp Res Ctr, Bangalore, Karnataka, India.
   [Indrawan, Maria] Monash Univ, Melbourne, Vic, Australia.
C3 Infosys Limited; Indian Institute of Technology System (IIT System);
   Indian Institute of Technology (IIT) - Bombay; Indian Institute of
   Technology System (IIT System); Indian Institute of Technology (IIT) -
   Bombay; ABB; Monash University
RP Tiwari, N (corresponding author), Infosys Ltd, Bangalore 560100, Karnataka, India.
EM nidhi_tiwari@infosys.com
CR [Anonymous], MODERN REGRESSION ME
   [Anonymous], P 7 ACM EUR C COMP S
   Babu S., 2010, P 1 ACM S CLOUD COMP
   Barroso LA, 2007, COMPUTER, V40, P33, DOI 10.1109/MC.2007.443
   Basaran C, 2013, J PARALLEL DISTR COM, V73, P522, DOI 10.1016/j.jpdc.2013.01.004
   Chen R., 2010, P 19 INT C PAR ARCH
   Chen Y, 2010, P 1 ACM SIGCOMM WORK
   El-Helw I., 2014, P 23 INT S HIGH PERF
   Feng YZB, 2012, P 23 AUSTR DAT C ADC
   Ge Rong, 2005, 19 IEEE INT PAR DIST
   Hamarash I., 2005, INT C EL EL ENG, V12
   Herodotou H., 2011, CS201105 DUK U
   Holmbacka S, 2017, LECT NOTES COMPUT SC, V10393, P3, DOI 10.1007/978-3-319-65482-9_1
   Intel, 2010, OPT HAD DEPL
   Kambatla K., 2009, P USENIX HOTCLOUD
   Kumar S, 2017, IEEE INT CONF CLOUD, P375, DOI 10.1109/CLOUD.2017.55
   Lang W, 2010, PROC VLDB ENDOW, V3, P129, DOI 10.14778/1920841.1920862
   Leverich J., 2010, ACM SIGOPS OPERATING, V44, P61
   Li M, 2014, PROCEEDINGS OF THE 10TH EURO-ASIA CONFERENCE ON ENVIRONMENT AND CORPORATE SOCIAL RESPONSIBILITY: TOURISM, SOCIETY AND EDUCATION SESSION, PT III, P165
   Li S, 2011, 2011 INT GREEN COMP
   Li W, 2011, 2011 IEEE 9 INT C DE
   Li Y, 2011, 2011 IEEE 9 INT C DE
   Malik M, 2017, DES AUT TEST EUR C E
   Orgerie A-C, 2010, INT C GREEN COMP CHI
   Orgerie AC, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2532637
   Paraskevopoulos P, 2011, 2011 15 PANH C INF K
   Ranger C, 2007, INT S HIGH PERF COMP, P13
   Sabne Amit, 2015, P 24 INT S HIGH PERF
   Shi B, 2010, INT C GREEN COMP CHI
   SIDIROPOULOS S, 1994, 1994 SYMPOSIUM ON VLSI CIRCUITS, P43
   Tan YS, 2013, SOFTWARE PRACT EXPER, V43, P1241, DOI 10.1002/spe.1082
   Tiwari N, 2014, INT C DISTR COMP NET
   Tiwari N, 2016, 2016 IEEE 22 INT C P
   Tiwari N, 2016, 2016 IEEEINT PAR DIS
   Tiwari N, 2012, SCHEDULING ENERGY EF
   Tiwari N, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2693315
   Tiwari N, 2014, PROCEDIA COMPUT SCI, V29, P62, DOI 10.1016/j.procs.2014.05.006
   Travers M., 2015, CPU power consumption experiments and results analysis of Intel i7-4820K
   Turner Vernon., 2014, IDC REPORT
   Wirtz T, 2011, 2011 INT GREEN COMP
   Yang X, 2011, INT CONF CLOUD COMPU, P306, DOI 10.1109/CCIS.2011.6045080
   Yigitbasi Nezih, 2011, 2 INT WORKSH GREEN C
   Zaharia M., 2008, P 8 USENIX C OP SYST, P29
   Zaharia M, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P265
NR 44
TC 2
Z9 2
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2018
VL 48
IS 9
BP 1660
EP 1687
DI 10.1002/spe.2599
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GP5RZ
UT WOS:000440932300007
DA 2024-07-18
ER

PT J
AU Park, C
   Lee, H
   Ryu, S
AF Park, Changhee
   Lee, Hongki
   Ryu, Sukyoung
TI Static analysis of JavaScript libraries in a scalable and precise way
   using loop sensitivity
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE abstract interpretation; context-sensitive analysis; JavaScript;
   libraries; loop-sensitive analysis; static analysis
AB Statically analyzing JavaScript applications often requires an analysis of JavaScript libraries because many JavaScript applications use libraries. However, static analysis techniques for JavaScript are not yet ready for analyzing libraries in a scalable and precise manner. Simply loading JavaScript libraries uses various dynamic features of JavaScript, which cause static analyzers to suffer from mutually intermingled problems of scalability and imprecision. In this paper, we present a loop-sensitive analysis (LSA) technique, which can improve the analysis scalability when analyzing JavaScript libraries by enhancing the analysis precision of loops. The LSA technique distinguishes loop iterations when loop conditions can be determined to be either true or false precisely. We formalize LSA in the abstract interpretation framework in the presence of tricky language features such as exceptions and prove its soundness and precision theorems using Coq. We evaluate our LSA implementation with the analysis results of programs that use 5 JavaScript libraries and show that LSA significantly improves the analysis scalability and precision of an existing JavaScript static analyzer when analyzing JavaScript libraries. In addition, using the configurability of LSA, we experimentally show the correlation between scalability and precision in the analysis of JavaScript libraries. We found that even the analysis of simple programs that just load jQuery, which is the most popular JavaScript library, in a scalable way requires distinguishing not only the last 4 functions being called but also 40 iterations in each loop with 2-level nested loops at least. Both the mechanization and implementation of LSA are publicly available.
C1 [Park, Changhee; Lee, Hongki; Ryu, Sukyoung] Korea Adv Inst Sci & Technol, Daejeon, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Park, C (corresponding author), Korea Adv Inst Sci & Technol, Sch Comp, 291 Daehak Ro, Daejeon 34141, South Korea.
EM changhee.park@kaist.ac.kr
RI Ryu, Sukyoung/C-2080-2011; Ryu, Sukyoung/A-8543-2015
OI Ryu, Sukyoung/0000-0002-0019-9772
FU National Research Foundation of Korea [NRF-2017R1A2B3012020]; Samsung
   Electronics
FX National Research Foundation of Korea, Grant/Award Number:
   NRF-2017R1A2B3012020; Samsung Electronics
CR Andreasen E, 2014, P 2014 ACM INT C OBJ
   [Anonymous], 2006, JQUERY TUTORIAL
   [Anonymous], 2006, CLOC COUNT LINES COD
   [Anonymous], P 26 EUR C OBJ OR PR
   [Anonymous], 2008, COQ PROOF ASSISTANT
   Austin TH, 2009, P ACM SIGPLAN 4 WORK
   Bae S, 2014, P 22 ACM SIGSOFT S 1
   Balakrishnan G, 2006, 13 INT C STAT AN SAS
   Cho J, 2014, P 13 INT C MOD MOD 1
   Cousot P., 1981, Program flow analysis. Theory and applications, P303
   Cousot P, 1977, P 4 ACM SIGACT SIGPL
   Cousot P, 1979, P 4 ACM SIGACT SIGPL
   ECMA, 2011, ECMA262
   Handjieva M, 1998, P 5 INT S STAT AN SA
   Heidegger P, 2010, 24 EUR C OBJ OR PROG
   IBM Research, 2006, TJ WATS LIB AN WALA
   Jensen SH, 2009, P 16 INT S STAT AN S
   Jensen SH, 2011, P 19 ACM SIGSOFT S 1
   KAIST PLRG, 2012, SAFE SCAL AN FRAM EC
   KAIST PLRG, 2010, RES MAT
   Kashyap V, 2014, 22 ACM SIGSOFT INT S
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Lattner C, 2007, P 28 ACM SIGPLAN C P
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Madsen M, 2015, P 2015 ACM SIGPLAN I
   Mangal R, 2014, P 23 EUR S PROGR ESO
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   MOller A, 2009, TAJS TYPE ANAL JAVAS
   Oh H, 2014, ACM SIGPLAN NOTICES, V49, P475, DOI [10.1145/2594291.2594318, 10.1145/2666356.2594318]
   Park C, 2015, P 30 IEEE ACM INT C
   Park C, 2015, P 29 EUR C OBJ OR PR
   Park C, 2016, P 12 S DYN LANG DLS
   Park J, 2017, P 6 ACM SIGPLAN INT
   Rival X, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275501
   Ryu S., 2012, FOOL 12
   Schafer M, 2013, P 34 ACM SIGPLAN C P
   Sharir M, 1981, 2 APPROACHES INTERPO
   Shivers O, 1988, P ACM SIGPLAN 1988 C
   Smaragdakis Y, 2011, P 38 ANN ACM SIGPLAN, DOI DOI 10.1145/1926385.1926390
   Smaragdakis Y, 2014, ACM SIGPLAN NOTICES, V49, P485, DOI [10.1145/2666356.2594320, 10.1145/2594291.2594320]
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Van Horn D, 2007, P 12 ACM SIGPLAN INT
   W3Techs, 2009, US JAVASCRIPT LIB WE
   Wei S, 2015, P 29 EUR C OBJ OR PR
   Wei S, 2016, P 2016 24 ACM SIGSOF
NR 45
TC 4
Z9 4
U1 1
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2018
VL 48
IS 4
BP 911
EP 944
DI 10.1002/spe.2552
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FY3VV
UT WOS:000426749900008
DA 2024-07-18
ER

PT J
AU Xie, GQ
   Chen, YK
   Liu, Y
   Fan, CN
   Li, RF
   Li, KQ
AF Xie, Guoqi
   Chen, Yuekun
   Liu, Yan
   Fan, Chunnian
   Li, Renfa
   Li, Keqin
TI JDAS: a software development framework for multidatabases
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design methods; development framework; Java; multidatabases;
   object-oriented programming
ID DESIGN; PATTERN
AB Modern software development for services computing and cloud computing software systems is no longer based on a single database but on existing multidatabases and this convergence needs new software architecture and framework design. Most current popular frameworks are not designed for multidatabases, and many practical problems in development arise. This study designs and implements a software development framework called Java data access service (JDAS) for multidatabases using the object-oriented programming language Java. The JDAS framework solves related problems that arise when other frameworks are employed in practical software development with multidatabases by presenting and introducing design methods. JDAS consists of the modules of the database abstract, object relational mapping, connection pools management, configuration management, data access service, and inversion of control. Results and case study reveal that the JDAS framework effectively reduces development complexity and improves development efficiency of the software systems with multidatabases. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [Xie, Guoqi; Chen, Yuekun; Liu, Yan; Li, Renfa; Li, Keqin] Hunan Univ, Coll Comp Sci & Elect Engn, Changsha 410082, Hunan, Peoples R China.
   [Xie, Guoqi; Chen, Yuekun; Liu, Yan; Li, Renfa] Key Lab Embedded & Network Comp Hunan Prov, Changsha, Hunan, Peoples R China.
   [Fan, Chunnian] Nanjing Univ Informat Sci & Technol, Nanjing, Jiangsu, Peoples R China.
   [Li, Keqin] SUNY Coll New Paltz, Dept Comp Sci, New Paltz, NY USA.
C3 Hunan University; Nanjing University of Information Science &
   Technology; State University of New York (SUNY) System; SUNY New Paltz
RP Xie, GQ (corresponding author), Hunan Univ, Coll Comp Sci & Elect Engn, Changsha 410082, Hunan, Peoples R China.
EM xgqman@hnu.edu.cn
FU National Key Research and Development Plan of China [2016YFB0200405,
   2012AA01A301-01]; Natural Science Foundation of China [61672217,
   61173036, 61432005, 61370095, 61300037, 61370097, 61502405, 61502162];
   China Postdoctoral Science Foundation [2016M592422]; Priority Academic
   Program Development of Jiangsu Higer Education Institutions (PAPD);
   Jiangsu Collaborative Innovation Center on Atmospheric Environment and
   Equipment Technology (CICAEET)
FX The authors would like to express their gratitude to the anonymous
   reviewers for their constructive comments which have helped to improve
   the quality of the paper. This work was partially supported by the
   National Key Research and Development Plan of China under Grant No.
   2016YFB0200405 and 2012AA01A301-01, the Natural Science Foundation of
   China under Grant Nos. 61672217, 61173036, 61432005, 61370095, 61300037,
   61370097, 61502405, and 61502162, the China Postdoctoral Science
   Foundation under Grant No. 2016M592422, the Priority Academic Program
   Development of Jiangsu Higer Education Institutions (PAPD), and the
   Jiangsu Collaborative Innovation Center on Atmospheric Environment and
   Equipment Technology (CICAEET).
CR [Anonymous], 2016, IEEE T CIRC SYST VID, DOI [10.1109/TIFS.2016.2590944, DOI 10.1109/TIFS.2016.2590944]
   Arthur J, 2005, Sixth International Conference on Software Engineerng, Artificial Intelligence, Networking and Parallel/Distributed Computing and First AICS International Workshop on Self-Assembling Wireless Networks, Proceedings, P90, DOI 10.1109/SNPD-SAWN.2005.74
   Balland E, 2014, SOFTWARE PRACT EXPER, V44, P129, DOI 10.1002/spe.2159
   Basanta-Val P, 2011, IEEE T IND INFORM, V7, P750, DOI 10.1109/TII.2011.2166796
   Bauer C, 2004, HIBERNATE ACTION ACT, P137
   Bernstein PA, 2008, COMMUN ACM, V51, P72, DOI 10.1145/1378727.1378745
   Cao Y., 2010, 2010 International Conference on Computational Intelligence and Software Engineering, P1, DOI DOI 10.1109/WICOM.2010.5600842
   Dastjerdi AV, 2015, SOFTWARE PRACT EXPER, V45, P197, DOI 10.1002/spe.2288
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   Fowler M, 2004, INVERSION CONTROL CO
   Fu ZJ, 2015, IEICE T COMMUN, VE98B, P190, DOI 10.1587/transcom.E98.B.190
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   He W, 2014, IEEE T IND INFORM, V10, P35, DOI 10.1109/TII.2012.2189221
   Hohenstein U, 2009, INTENSIVE: 2009 FIRST INTERNATIONAL CONFERENCE ON INTENSIVE APPLICATIONS AND SERVICES, P71, DOI 10.1109/INTENSIVE.2009.18
   Johnson R, 2007, PROFESSIONAL JAVA DE, P195
   Linskey P. C., 2007, SIGMOD, P889
   Maenhaut PJ, 2016, SOFTWARE PRACTICE EX, V46, p31C54
   Portillo-Dominguez AO, 2016, SOFTWARE PRACT EXPER, V46, P1705, DOI 10.1002/spe.2391
   Quinton C, 2016, SOFTWARE PRACT EXPER, V46, P55, DOI 10.1002/spe.2311
   Ren YJ, 2015, J INTERNET TECHNOL, V16, P317, DOI 10.6138/JIT.2015.16.2.20140918
   Reyes-Delgado PY, 2016, COMPUT STAND INTER, V47, P24, DOI 10.1016/j.csi.2016.02.005
   Rui HRP, 2016, SOFTWARE PRACTICE EX, DOI [10. 1002/spe. 2415., DOI 10.1002/SPE.2415]
   Stencel K, 2008, ASIA PAC SOFWR ENG, P25, DOI 10.1109/APSEC.2008.67
   Torres Alexandre, 2009, Proceedings of the 2009 23rd Brazilian Symposium on Software Engineering. SBES 2009, P94, DOI 10.1109/SBES.2009.22
   Xia ZH, 2016, IEEE T PARALL DISTR, V27, P340, DOI 10.1109/TPDS.2015.2401003
   Zeng LF, 2017, SOFTWARE PRACT EXPER, V47, P813, DOI 10.1002/spe.2441
   Zhu Y, 2017, SOFTWARE PRACT EXPER, V47, P709, DOI 10.1002/spe.2434
NR 27
TC 4
Z9 5
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2018
VL 48
IS 2
SI SI
BP 366
EP 382
DI 10.1002/spe.2472
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FS0OE
UT WOS:000419472700006
DA 2024-07-18
ER

PT J
AU Nejedly, P
   Plesinger, F
   Halamek, J
   Jurak, P
AF Nejedly, Petr
   Plesinger, Filip
   Halamek, Josef
   Jurak, Pavel
TI CudaFilters: A SignalPlant library for GPU-accelerated FFT and FIR
   filtering
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CUDA; FFT filter; FIR filter; GPU acceleration; SignalPlant
AB Signal filtering is one of the essential tasks in signal processing. It may become an extremely time-consuming process, as in the case of intracranial electroencephalogram recordings (eg, 30-min records) with a large number of channels (up to 256) and high sampling frequencies (up to 5kHz in research related to ultra-high-frequency oscillations). The usual way of dealing with time consumption is process parallelization. Moreover, parallelization using graphic processing unit (GPU) allows further shortening of computing times thanks to the large number of GPU cores. This paper describes a library for GPU-accelerated finite impulse response (FIR) and fast Fourier transform (FFT) filteringCudaFilters. This library is designed for SignalPlant softwarea free tool for signal analysis. The resultant acceleration in computing times was 5x to 40x depending on the task, data, and hardware configuration. The results were also compared to computing speeds in Matlab.
C1 [Nejedly, Petr; Plesinger, Filip; Halamek, Josef; Jurak, Pavel] Czech Acad Sci, Inst Sci Instruments, Prague, Czech Republic.
C3 Czech Academy of Sciences; Institute of Scientific Instruments of the
   Czech Academy of Sciences
RP Nejedly, P (corresponding author), Czech Acad Sci, Inst Sci Instruments, Prague, Czech Republic.
EM nejedly@isibrno.cz
RI Jurak, Pavel/AAO-3084-2020; Halamek, Josef/M-3836-2019; Plesinger,
   Filip/G-1449-2014; Nejedly, Petr/H-1903-2017
OI Jurak, Pavel/0000-0002-3793-5075; Halamek, Josef/0000-0001-8986-796X;
   Plesinger, Filip/0000-0003-2875-3541; Nejedly, Petr/0000-0002-5382-2134
FU Ministry of Education, Youth and Sports, Czech Republic; European
   Commission [CZ.1.05/2.1.00/01.0017]; Ministry of Education, Youth and
   Sports, Czech Republic [LO1212]; Grant Agency of the Czech Republic
   [GACR 17-13830S]; Czech Academy of Sciences [RVO:68081731]
FX The Ministry of Education, Youth and Sports, Czech Republic and European
   Commission, Grant/Award Number: CZ.1.05/2.1.00/01.0017; The Ministry of
   Education, Youth and Sports, Czech Republic, Grant/Award Number: LO1212;
   Grant Agency of the Czech Republic, Grant/Award Number: GACR 17-13830S;
   Czech Academy of Sciences, Grant/Award Number: RVO:68081731
CR Jan J, 2000, IEE TELECOMMUNICATIO, V44
   Mauro DA, 2012, ACOUSTICS
   NVIDIA, OVERVIEW
   NVIDIA, PAR PROGR COMP PLATF
   Olkkonen H., 2010, J. Signal Inf. Process, V1, P18
   Plesinger F, 2016, PHYSIOL MEAS, V37, pN38, DOI 10.1088/0967-3334/37/7/N38
   Schneider R, 2004, P ANN INT IEEE EMBS, V26, P3254
   Whitehead N., Precision Performance: Floating Point and IEEE 754 Compliance for NVIDIA GPUs
NR 8
TC 6
Z9 6
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2018
VL 48
IS 1
BP 3
EP 9
DI 10.1002/spe.2507
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FP4WK
UT WOS:000417617500001
DA 2024-07-18
ER

PT J
AU Brucker, AD
   Zhou, B
   Malmignati, F
   Shi, Q
   Merabti, M
AF Brucker, Achim D.
   Zhou, Bo
   Malmignati, Francesco
   Shi, Qi
   Merabti, Madjid
TI Modelling, validating, and ranking of secure service compositions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE human-centred service compositions; SecureBPMN; secure service
   composition; service availability; service deployment; service ranking;
   Service design; service modelling
ID SEMANTICS
AB In the world of large-scale applications, software as a service (SaaS) in general and use of microservices, in particular, is bringing service-oriented architectures to a new level: Systems in general and systems that interact with human users (eg, sociotechnical systems) in particular are built by composing microservices that are developed independently and operated by different parties. At the same time, SaaS applications are used more and more widely by enterprises as well as public services for providing critical services, including those processing security or privacy of relevant data. Therefore, providing secure and reliable service compositions is increasingly needed to ensure the success of SaaS solutions. Building such service compositions securely is still an unsolved problem.
   In this paper, we present a framework for modelling, validating, and ranking secure service compositions that integrate both automated services as well as services that interact with humans. As a unique feature, our approach for ranking services integrates validated properties (eg, based on the result of formally analysing the source code of a service implementation) as well as contractual properties that are part of the service level agreement and, thus, not necessarily ensured on a technical level.
C1 [Brucker, Achim D.] Univ Sheffield, Sheffield, S Yorkshire, England.
   [Zhou, Bo; Shi, Qi] Liverpool John Moores Univ, Liverpool, Merseyside, England.
   [Malmignati, Francesco] Selex ES SpA, Rome, Italy.
   [Merabti, Madjid] Univ Sharjah, Coll Sci, Sharjah, U Arab Emirates.
C3 University of Sheffield; Liverpool John Moores University; Leonardo;
   University of Sharjah
RP Brucker, AD (corresponding author), Univ Sheffield, Sheffield, S Yorkshire, England.
EM a.brucker@sheffield.ac.uk
RI Brucker, Achim D./J-7083-2013
OI Brucker, Achim D./0000-0002-6355-1200; Shi, Qi/0000-0002-3766-7808
CR Akkiraju IR, 2005, WEB SERVICE SEMANTIC
   Aktug I, 2008, ELECTRON NOTES THEOR, V197, P45, DOI 10.1016/j.entcs.2007.10.013
   Andrieux A., 2007, TECH REP
   [Anonymous], 2000, ARCHITECTURAL STYLES
   [Anonymous], 2005, Enterprise SOA: service-oriented architecture best practices
   [Anonymous], EDBT
   [Anonymous], 2014, DATENSCHUTZ DATENSIC
   [Anonymous], 2014, TECH REP
   Arsac W, 2011, LECT NOTES COMPUT SC, V6542, P29, DOI 10.1007/978-3-642-19125-1_3
   Asim M, 2014, LECT NOTES COMPUT SC, V8900, P192, DOI 10.1007/978-3-319-13518-2_13
   Autotask Corporation, 2014, METR MATT 2014
   Basin D, 2009, INFORM SOFTWARE TECH, V51, P815, DOI 10.1016/j.infsof.2008.05.011
   Bonatti PA, 2010, IEEE T KNOWL DATA EN, V22, P1507, DOI 10.1109/TKDE.2010.83
   Brucker A.D., 2012, Proceedings of the 17th ACM symposium on access control models and technologies (SACMAT '12), P123, DOI [DOI 10.1145/2295136.2295160, 10.1145/2295136.2295160]
   Brucker A.D., 2012, LNBIP, V132, P662
   Brucker AD, 2006, LECT NOTES COMPUT SC, V4199, P306
   Brucker AD, 2013, IT-INF TECHNOL, V55, P239, DOI 10.1515/itit.2013.2004
   Brucker AD, 2009, SACMAT'09: PROCEEDINGS OF THE 14TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P197, DOI 10.1145/1542207.1542239
   Brucker AD, 2007, METAMODEL BASED UML
   Brucker AD, 2014, LNCS
   Casola V., 2009, 2009 International Conference on Computational Science and Engineering (CSE), P405, DOI 10.1109/CSE.2009.391
   CHAN H, 2008, ICWS, P661
   Chan SW., 2006, SECURITY ANNOTATIONS
   Cherdantseva Y., 2014, THESIS
   Christensen E, 2001, TECH REP
   Compagna L, 2013, TESTING TOOLS TRACK
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Elshaafi H, 2012, 2012 IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATIONS (ISCC), P580, DOI 10.1109/ISCC.2012.6249359
   Erl T, 2005, SERVICE ORIENTED ARC
   Felderer M, 2016, ADV COMPUT, V101, P1, DOI 10.1016/bs.adcom.2015.11.003
   Gromoff A, 2013, ICEIS: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P326, DOI 10.5220/0004446403260332
   Hale Matthew L., 2012, 2012 IEEE Eighth World Congress on Services, P133, DOI 10.1109/SERVICES.2012.31
   Hale ML, 2012, IEEE GLOBE WORK, P730, DOI 10.1109/GLOCOMW.2012.6477665
   Henning R, 2009, NSPW, P54
   Howard M., 2006, SECURITY DEV LIFECYC
   Irvine C., 2001, Proceedings New Security Paradigm Workshop, P91
   Jaeger MC, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON E-TECHNOLOGY, E-COMMERCE AND E-SERVICE, PROCEEDINGS, P181, DOI 10.1109/EEE.2005.110
   Jorstad N, 1997, INT SYST SEC C BALT
   Jürjens J, 2008, METHOD INFORM MED, V47, P409, DOI 10.3414/ME9122
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Marienfeld F, 2012, HDB SERVICE DESCRIPT, P295
   Mauw S, 2006, LECT NOTES COMPUT SC, V3935, P186
   Modica G. D., 2012, 2012 Eighth International Conference on Semantics, Knowledge and Grids (SKG 2012), P96, DOI 10.1109/SKG.2012.1
   Mulle J, 2011, TECH REP
   *OASIS, 2005, EXTENSIBLE ACC CONTR
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Organization for the Advancement of Structured Information Standards, 2007, WEB SERV BUS PROC EX
   Paja E., 2012, CAISE FORUM, V855, P155
   Salnitri M, 2015, SOFTW SYST MODEL
   Sohr K, 2005, LECT NOTES COMPUT SC, V3679, P64
   van der Aalst WMP, 2008, LECT NOTES COMPUT SC, V4961, P46, DOI 10.1007/978-3-540-78743-3_4
   Vedamuthu AS, 2007, UMIT YALCINALP WEB S
   Wolter C, 2010, REQUIR ENG, V15, P359, DOI 10.1007/s00766-010-0103-y
   Zhou B, 2010, SOSE
   Zhou B, 2008, ACSF, P8
   Zhou Bo, 2012, 6 LAY ASS WORKSH, P49
NR 56
TC 7
Z9 7
U1 3
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2017
VL 47
IS 12
BP 1923
EP 1943
DI 10.1002/spe.2513
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM0FF
UT WOS:000414636600004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Gupta, H
   Dastjerdi, AV
   Ghosh, SK
   Buyya, R
AF Gupta, Harshit
   Dastjerdi, Amir Vahid
   Ghosh, Soumya K.
   Buyya, Rajkumar
TI iFogSim: A toolkit for modeling and simulation of resource management
   techniques in the Internet of Things, Edge and Fog computing
   environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Edge computing; Fog computing; Internet of Things (IoT); modeling and
   simulation
ID IOT
AB Internet of Things (IoT) aims to bring every object (eg, smart cameras, wearable, environmental sensors, home appliances, and vehicles) online, hence generating massive volume of data that can overwhelm storage systems and data analytics applications. Cloud computing offers services at the infrastructure level that can scale to IoT storage and processing requirements. However, there are applications such as health monitoring and emergency response that require low latency, and delay that is caused by transferring data to the cloud and then back to the application can seriously impact their performances. To overcome this limitation, Fog computing paradigm has been proposed, where cloud services are extended to the edge of the network to decrease the latency and network congestion. To realize the full potential of Fog and IoT paradigms for real-time analytics, several challenges need to be addressed. The first and most critical problem is designing resource management techniques that determine which modules of analytics applications are pushed to each edge device to minimize the latency and maximize the throughput. To this end, we need an evaluation platform that enables the quantification of performance of resource management policies on an IoT or Fog computing infrastructure in a repeatable manner. In this paper we propose a simulator, called iFogSim, to model IoT and Fog environments and measure the impact of resource management techniques in latency, network congestion, energy consumption, and cost. We describe two case studies to demonstrate modeling of an IoT environment and comparison of resource management policies. Moreover, scalability of the simulation toolkit of RAM consumption and execution time is verified under different circumstances.
C1 [Gupta, Harshit; Dastjerdi, Amir Vahid; Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Parkville, Vic, Australia.
   [Gupta, Harshit] Georgia Inst Technol, Sch Comp Sci, Atlanta, GA 30332 USA.
   [Ghosh, Soumya K.] Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur, W Bengal, India.
C3 University of Melbourne; University System of Georgia; Georgia Institute
   of Technology; Indian Institute of Technology System (IIT System);
   Indian Institute of Technology (IIT) - Kharagpur
RP Gupta, H (corresponding author), Georgia Inst Technol, Sch Comp Sci, Atlanta, GA 30332 USA.
EM harshitg@gatech.edu
RI Buyya, Rajkumar/C-3424-2009
FU Melbourne-Chindia Cloud Computing Research Network; CLOUDS Lab at the
   University of Melbourne; ARC
FX This work is (i) supported by Melbourne-Chindia Cloud Computing Research
   Network and (ii) initiated as part of the first author's visit to CLOUDS
   Lab at the University of Melbourne. It is also partially supported by
   the ARC Future Fellowship. We thank Redowan Mahmud for his contributions
   towards improving both the iFogSim simulator and this paper. We also
   thank other external users of our iFogSim for their feedback and
   reviewers for their comments on improving the quality of our work.
CR Adjih C, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P459, DOI 10.1109/WF-IoT.2015.7389098
   Bittencourt L., 2017, IEEE CLOUD COMPUT, P34
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Brambilla G., 2014, Proceedings of the First International Conference on IoT in Urban Space, P50, DOI DOI 10.4108/ICST.URB-IOT.2014.257268
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chang C, 2015, 2015 IEEE 12TH INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2015), P130, DOI 10.1109/SCC.2015.27
   Chelius G., 2006, WSNET MODULAR EVENT
   Di S, 2015, SOFTWARE PRACT EXPER, V45, P1571, DOI 10.1002/spe.2303
   Giang NK, 2015, PROCEEDINGS 2015 5TH INTERNATIONAL CONFERENCE ON THE INTERNET OF THINGS (IOT), P155, DOI 10.1109/IOT.2015.7356560
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guérout T, 2013, SIMUL MODEL PRACT TH, V39, P76, DOI 10.1016/j.simpat.2013.04.007
   Han SN, 2014, 2014 IEEE WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P544, DOI 10.1109/WF-IoT.2014.6803226
   Hong K, 2013, P 2 ACM SIGCOMM WORK, P15, DOI DOI 10.1145/2491266.2491270
   Institute MG, UNL POT INT THINGS
   Institute MG, GARTN SAYS 2018 MOR
   Ostermann S, 2011, LECT NOTES COMPUT SC, V6586, P305, DOI 10.1007/978-3-642-21878-1_38
   Ottenwälder B, 2014, ACM T INTERNET TECHN, V14, DOI 10.1145/2633688
   Sanchez L, 2014, COMPUT NETW, V61, P217, DOI 10.1016/j.bjp.2013.12.020
   Sarkar S, 2015, ASSESSMENT SUITABILI
   SEWARD J., 2004, VALGRIND OPEN SOURCE
   Stojmenovic I, 2016, CONCURR COMP-PRACT E, V28, P2991, DOI 10.1002/cpe.3485
   Tighe M., 2012, 2012 8th International Conference on Network and Service Management (CNSM 2012), P385
   Yousfi A, 2016, INFORM SOFTWARE TECH, V74, P55, DOI 10.1016/j.infsof.2016.02.002
   Zao JK, 2014, 2014 INTERNATIONAL CONFERENCE ON INTELLIGENT ENVIRONMENTS (IE), P374, DOI 10.1109/IE.2014.54
NR 24
TC 840
Z9 865
U1 5
U2 147
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2017
VL 47
IS 9
SI SI
BP 1275
EP 1296
DI 10.1002/spe.2509
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD0BH
UT WOS:000407204300006
OA Green Submitted, Green Published
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Zeng, LF
   Wang, Y
   Kent, KB
   Xiao, ZL
AF Zeng, Lingfang
   Wang, Yang
   Kent, Kenneth B.
   Xiao, Ziliang
TI Naplus: a software distributed shared memory for virtual clusters in the
   cloud
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE virtual cluster; software distributed shared memory; inter-VM shared
   memory; cloud computing; cluster computing
ID COMMUNICATION
AB Virtual clusters (VCs) have exhibited various advantages over traditional cluster computing platforms by virtue of their extensibility, reconfigurability, and maintainability. As such, they have become a major execution environment for cloud-based cluster applications. However, compared with traditional clusters, their distributed-memory programming paradigm still remains largely unchanged, which implies that cluster applications cannot be efficiently deployed in VCs, especially when virtual machines (VMs) are running in different physical hosts. Recently, some efforts have been made to improve inter-VM communication, resulting in many studies on how cluster applications could take advantages of VCs. However, most of them mainly focus on the situation that the VMs are all coresident on the same physical machine where the message passing mechanism is usually optimized away by exploiting the host's shared memory. In this paper, we present a design and implementation of Naplus, a kernel-based virtual machine approach to the inter-VM communications that are across different physical hosts. Naplus is based on Nahanni, a mechanism for shared-memory communication in virtual environments. As such, it not only inherits the major merits of Nahanni with respect to flexible data structures and efficient synchronization but also achieves a shared-memory paradigm among VMs. With Naplus, we enable the size of shared space to be maximized as large as the sum of each machine's local memory to accommodate cluster applications with large memory footprints. We prototype Naplus in a dual-host system where an empirical study is conducted to show the effectiveness of the Naplus approach in achieving distributed shared memory for VCs in data centers. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Zeng, Lingfang; Xiao, Ziliang] Huazhong Univ Sci & Technol, Wuhan Natl Lab Optoelect, Sch Comp, Wuhan, Hubei, Peoples R China.
   [Wang, Yang] Chinese Acad Sci, Shenzhen Inst Adv Technol, Shenzhen, Peoples R China.
   [Kent, Kenneth B.] Univ New Brunswick, IBM Ctr Adv Studies Atlantic, Fredericton, NB, Canada.
C3 Huazhong University of Science & Technology; Chinese Academy of
   Sciences; Shenzhen Institute of Advanced Technology, CAS; University of
   New Brunswick
RP Wang, Y (corresponding author), Shenzhen Univ Town, Xueyuan Blvd 1068, Shenzhen 518055, Peoples R China.
EM yang.wang1@siat.ac.cn
RI lin, lin/KCZ-0185-2024
OI Zeng, Lingfang/0000-0003-3130-3015; Wang, Yang/0000-0001-9438-6060;
   Kent, Kenneth B/0000-0003-2764-823X
FU NSFC [61672513, 61472153, 6160337]; Science and Technology Planning
   Project of Guangdong Province [2015B010129011, 2016A030313183]; Hubei
   Natural Science Foundation [2015CFB192]; IBM; Atlantic Canada
   Opportunities Agency through Atlantic Innovation Fund; New Brunswick
   Innovation Foundation; Natural Sciences and Engineering Research Council
   of Canada; Fulbright Canada
FX This research is jointly sponsored in part by NSFC no. 61672513, no.
   61472153 and no. 6160337, the Science and Technology Planning Project of
   Guangdong Province (2015B010129011 and 2016A030313183), the Hubei
   Natural Science Foundation (2015CFB192), granting from Fulbright Canada
   to the second author (2014-2015), and in part by funding to the third
   author provided to the Centre for Advanced Studies-Atlantic from IBM,
   the Atlantic Canada Opportunities Agency through the Atlantic Innovation
   Fund, the New Brunswick Innovation Foundation, and the Natural Sciences
   and Engineering Research Council of Canada. Finally, we would also like
   to thank Cam Macdonell for his many fruitful explanations on Nahanni
   that contributed to the evolution of Naplus, Stephen MacKay at the
   University of New Brunswick for his careful proofreading and editing of
   the paper to improve its quality, and Xing Liu at Shenzhen Institutes of
   Advanced Technology who helped draw figures to improve the readability
   of this paper.
CR [Anonymous], HPCA-16 2010 The Sixteenth International Symposium on High-Performance Computer Architecture. 2010 IEEE 16th International Symposium on High Performance Computer Architecture (HPCA), DOI DOI 10.1109/HPCA.2010.5416637
   [Anonymous], THESIS
   [Anonymous], P C USENIX ANN TECHN
   [Anonymous], P USENIX WINT TECHN
   [Anonymous], P XEN SUMM BOST MA
   [Anonymous], P 22 INT S COMP INF
   [Anonymous], P ACM IEEE C SUP SC
   [Anonymous], P IEEE 6 INT C CLOUD
   [Anonymous], P USENIX ANN TECHN C
   [Anonymous], 2003, ACM SIGOPS OPERATING
   [Anonymous], PCI I O VIRTUALIZATI
   [Anonymous], 2016, NAS Parallel Benchmarks
   Cerroni W, 2014, IEEE CONF COMPUT, P25, DOI 10.1109/INFCOMW.2014.6849163
   Chapman M, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK: 2005 UNENIX ANNUAL TECHNICAL CONFERENCE, P383
   Diakhaté F, 2009, LECT NOTES COMPUT SC, V5415, P53
   Govindan S, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P126
   Hu WW, 1999, LECT NOTES COMPUT SC, V1593, P463
   Hwang J, 2015, IEEE T NETW SERV MAN, V12, P34, DOI 10.1109/TNSM.2015.2401568
   Kim K, 2008, VEE'08: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P11
   Kivity A., 2006, Proceedings of the Linux Symposium, P37
   LI K, 1989, ACM T COMPUT SYST, V7, P321, DOI 10.1145/75104.75105
   Liao XF, 2013, COMPUT ELECTR ENG, V39, P2332, DOI 10.1016/j.compeleceng.2012.12.005
   Lu P, 2001, J PARALLEL DISTR COM, V61, P1609, DOI 10.1006/jpdc.2001.1758
   Mergen M. F., 2006, Operating Systems Review, V40, P8, DOI 10.1145/1131322.1131328
   Mohebbi H.R., 2011, Computer and Information Science, V4, P18
   Ren Y, 2016, ACM COMPUT SURV, V48, DOI 10.1145/2847562
   Shapiro JS, 1996, PROCEEDINGS OF THE FIFTH INTERNATIONAL WORKSHOP ON OBJECT-ORIENTATION IN OPERATING SYSTEMS, P89, DOI 10.1109/IWOOOS.1996.557882
   STONE HS, 1978, COMPUTER, V11, P97, DOI 10.1109/C-M.1978.218272
   STONE HS, 1977, IEEE T SOFTWARE ENG, V3, P85, DOI 10.1109/TSE.1977.233840
   Wang Jian., 2008, Proceedings of the 17th International Symposium on High Performance Distributed Computing, HPDC '08, P109
   Zhang Q, 2013, IEEE INT CONF CLOUD, P204, DOI 10.1109/CLOUD.2013.116
   Zhang XL, 2007, LECT NOTES COMPUT SC, V4834, P184
   Zhang ZN, 2014, IEEE T PARALL DISTR, V25, P3328, DOI 10.1109/TPDS.2014.7
   Zhu J, 2011, IEEE T COMPUT, V60, P1718, DOI 10.1109/TC.2010.224
NR 34
TC 3
Z9 4
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2017
VL 47
IS 9
SI SI
BP 1201
EP 1220
DI 10.1002/spe.2486
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD0BH
UT WOS:000407204300003
DA 2024-07-18
ER

PT J
AU Quick, D
   Choo, KKR
AF Quick, Darren
   Choo, Kim-Kwang Raymond
TI Big forensic data management in heterogeneous distributed systems: quick
   analysis of multimedia forensic data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big forensic data management; big forensic data reduction; digital
   forensic resource management; heterogeneous distributed system
   forensics; smart city forensic readiness
AB The growth in the data volume and number of evidential data from heterogeneous distributed systems in smart cities, such as cloud and fog computing systems and Internet-of-Things devices (e.g. IP-based CCTVs), has led to increased collection, processing and analysis times, potentially resulting in vulnerable persons (e.g. victims of terrorism incidents) being at risk. A process of Digital Forensic Data Reduction of source multimedia and forensic images has provided a method to reduce the collection time and volume of data. In this paper, a methodology of Digital Forensic Quick Analysis is outlined, which describes a method to review Digital Forensic Data Reduction subsets to pinpoint relevant evidence and intelligence from heterogeneous distributed systems in a timely manner. Applying the proposed methodology to real-world data from an Australian police agency highlighted the timeliness of the process, resulting in significant improvements in processing times in comparison with processing a full forensic image. The Quick Analysis methodology, combined with Digital Forensic Data Reduction, has potential to locate evidence and intelligence in a timely manner. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Quick, Darren; Choo, Kim-Kwang Raymond] Univ South Australia, Informat Assurance Res Grp, Adv Comp Res Ctr, Adelaide, SA 5095, Australia.
   [Choo, Kim-Kwang Raymond] Univ Texas San Antonio, Dept Informat Syst & Cyber Secur, San Antonio, TX 78249 USA.
C3 University of South Australia; University of Texas System; University of
   Texas at San Antonio (UTSA)
RP Choo, KKR (corresponding author), Univ Texas San Antonio, Dept Informat Syst & Cyber Secur, San Antonio, TX 78249 USA.
EM Raymond.Choo@fulbrightmail.org
RI Choo, Kim-Kwang Raymond/A-3634-2009
OI Choo, Kim-Kwang Raymond/0000-0001-9208-5336
CR [Anonymous], GOOD PRACT GUID COMP
   Boyd C., 2004, Digital Investigation, V1, P18, DOI DOI 10.1016/J.DIIN.2004.01.002
   Bunting S., 2012, EnCase Computer Forensics: The Omicronfficial EnCase Certified Examiner study guide, Vthird
   Cahyani NDW, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3855
   Carroll O, 2008, B COMPUTER FORENSICS, P56
   Carroll O, 2007, DIGITAL FORENSIC ANA
   Chen D, 2015, IEEE T COMPUT, V64, P707, DOI 10.1109/TC.2013.2295806
   Chen D, 2014, IEEE T NEUR SYS REH, V22, P33, DOI 10.1109/TNSRE.2013.2258939
   Do Q, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0138449
   Fewster S, 2015, BERNARD FINNIGAN GUI
   Inzinger C, 2014, SOFTWARE PRACT EXPER, V44, P805, DOI 10.1002/spe.2254
   Jara AJ, 2015, SOFTWARE PRACT EXPER, V45, P1145, DOI 10.1002/spe.2274
   Martini B, 2014, DIGIT INVEST, V11, P295, DOI 10.1016/j.diin.2014.08.002
   NIJ, 2004, FOR EXAM DIG EV GUID
   Parsonage H., 2009, Computer Forensics Case Assessment and Triage
   Quick D., 2014, 20 AM C INF SYST AMC
   Quick D, 2014, TRENDS ISS CRIME CRI, P1
   Quick D, 2016, CLUSTER COMPUT, V19, P723, DOI 10.1007/s10586-016-0553-1
   Quick D, 2014, DIGIT INVEST, V11, P273, DOI 10.1016/j.diin.2014.09.002
   Quick D, 2013, FUTURE GENER COMP SY, V29, P1378, DOI 10.1016/j.future.2013.02.001
   Quick Darren., 2013, Cloud storage forensics
NR 21
TC 22
Z9 24
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2017
VL 47
IS 8
SI SI
BP 1095
EP 1109
DI 10.1002/spe.2429
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FA1LW
UT WOS:000405202100005
DA 2024-07-18
ER

PT J
AU Liu, Y
   Simpson, A
AF Liu, Yang
   Simpson, Andrew
TI Privacy-preserving targeted mobile advertising: requirements, design and
   a prototype implementation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE targeted advertising; privacy; mobile devices; Android
ID ONLINE; ATTITUDES; PARADOX; PAY
AB With the continued proliferation of mobile devices, the collection of information associated with such devices and their userssuch as location, installed applications and cookies associated with built-in browsershas become increasingly straightforward. By analysing such information, organisations are often able to deliver more relevant and better focused advertisements. Of course, such targeted mobile advertising gives rise to a number of concerns, with privacy-related concerns being prominent. In this paper, we discuss the necessary balance that needs to be struck between privacy and utility in this emerging area and propose privacy-preserving targeted mobile advertising as a solution that tries to achieve that balance. Our aim is to develop a solution that can be deployed by users but is also palatable to businesses that operate in this space. This paper focuses on the requirements and design of privacy-preserving targeted mobile advertising and also describes an initial prototype. We also discuss how more detailed technical aspects and a complete evaluation will underpin our future work in this area. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Liu, Yang; Simpson, Andrew] Univ Oxford, Dept Comp Sci, Wolfson Bldg,Parks Rd, Oxford OX1 3QD, England.
C3 University of Oxford
RP Liu, Y (corresponding author), Univ Oxford, Dept Comp Sci, Wolfson Bldg,Parks Rd, Oxford OX1 3QD, England.
EM yang.liu@cs.ox.ac.uk
RI yang, liu/HTN-9175-2023; liu, yang/HIU-0559-2022; Liu,
   Yang/HNJ-6693-2023; Jia, Chuanchang/AAA-5513-2020; yang,
   liu/GVU-8760-2022; Liu, Yang/D-2306-2013; liu, yang/HQY-7531-2023; LIU,
   YANG/HWQ-4615-2023; liu, yang/HHY-8583-2022
OI Liu, Yang/0000-0001-7300-9215; Liu, Yang/0000-0003-2486-5765; Simpson,
   Andrew/0000-0003-3597-2232
FU China Scholarship Council [201508060193]
FX The authors thank the reviewers for their helpful feedback. Yang Liu
   acknowledges the scholarship from China Scholarship Council (file no.
   201508060193).
CR [Anonymous], IM LOT MORE INTEREST
   [Anonymous], 2007, J INTERACT ADVERT
   [Anonymous], 2011, 8 USENIX S NETW SYST
   Awad NF, 2006, MIS QUART, V30, P13
   Barnes S. B., 2006, 1 MONDAY, V11, DOI DOI 10.5210/FM.V11I9.1394
   Barutcu S., 2007, J TARGETING MEASUREM, V16, P26, DOI DOI 10.1057/PALGRAVE.JT.5750061
   Beresford A. R., 2011, P 12 WORKSH MOB COMP, V11, DOI [10.1145/2184489.2184500, DOI 10.1145/2184489.2184500]
   Beresford AR, 2012, ECON LETT, V117, P25, DOI 10.1016/j.econlet.2012.04.077
   Burguera I., 2011, P 1 ACM WORKSH SEC P, P15, DOI DOI 10.1145/2046614.2046619
   Calo MR, 2012, NOTRE DAME LAW REV, V87, P1027
   Cavoukian A., 2009, Privacy by design: The 7 foundational principles, V5
   Chen J., 2008, INTRO ANDROID
   Cole AgathaM., 2012, CARDOZO ARTS ENT. L. J, V30, P283
   Debatin B, 2009, J COMPUT-MEDIAT COMM, V15, P83, DOI 10.1111/j.1083-6101.2009.01494.x
   Desnos Anthony., DroidBox: An Android Application Sandbox for Dynamic Analysis
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Felt AP, 2012, P 8 S USABLE PRIVACY, P1, DOI DOI 10.1145/2335356.2335360
   Fredrikson M, 2011, P IEEE S SECUR PRIV, P131, DOI 10.1109/SP.2011.37
   Gotz M, 2011, MSRTR201192
   Guha S, 2009, P 8 ACM WORKSH HOT T
   Haddadi H., 2015, CORR
   Haddadi H., 2010, P 5 ACM INT WORKSHOP, P33
   Holavanalli S, 2013, IEEE INT CONF AUTOM, P652, DOI 10.1109/ASE.2013.6693128
   Hwang WH, 2015, P INT COMP SOFTW APP, P29, DOI 10.1109/COMPSAC.2015.202
   Jang JW, 2014, WWW'14 COMPANION: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P737, DOI 10.1145/2567948.2579366
   Jesdanun A, 2008, AD TARGETING BASED I
   Kern M., 2012, P 6 INT C MOB UB COM, P148
   Madden M., 2013, Teens, social media, and privacy
   Martin K, 2015, J PUBLIC POLICY MARK, V34, P210, DOI 10.1509/jppm.14.139
   Milne GR, 2004, J INTERACT MARK, V18, P15, DOI 10.1002/dir.20009
   Muller J., 2011, Pervasive Advertising, P119
   Myslewski R., APPLE ADS TARGET YOU
   Nauman M., 2010, P 5 ACM S INF COMP C, V10, P328, DOI [10.1145/1755688.1755732, DOI 10.1145/1755688.1755732]
   Norberg PA, 2007, J CONSUM AFF, V41, P100, DOI 10.1111/j.1745-6606.2006.00070.x
   Paverd A, 2014, INT CONF SMART GRID, P872, DOI 10.1109/SmartGridComm.2014.7007758
   Samu S, 1999, J MARKETING, V63, P57, DOI 10.2307/1252001
   Spreitzenbarth M., 2013, P 28 ANN ACM S APPL, DOI [DOI 10.1145/2480362.2480701, 10.1145/2480362.2480701]
   Toubiana Vincent, 2010, P 17 ANN NETW DISTR
   Tsang MM, 2004, INT J ELECTRON COMM, V8, P65, DOI 10.1080/10864415.2004.11044301
   Tucker CE, 2014, J MARKETING RES, V51, P546, DOI 10.1509/jmr.10.0355
   Tucker CE, 2012, INT J IND ORGAN, V30, P326, DOI 10.1016/j.ijindorg.2011.11.004
   Tufekci Z., 2008, B SCI TECHNOL SOC, V28, P20, DOI DOI 10.1177/0270467607311484
   Ullah I., 2014, P 13 WORKSH PRIV EL, P83, DOI DOI 10.1145/2665943.2665961
   Utz S., 2009, CYBERPSYCHOLOGY, V3, P2
   Wang Kai., 2008, Journal of Informatics Electronics, V13, P27
   Yan L.K., 2012, P 21 USENIX C SECURI
   Zhang LF, 2008, INT CON DISTR COMP S, P77, DOI 10.1109/ICDCS.2008.98
   Zhou YJ, 2011, LECT NOTES COMPUT SC, V6740, P93, DOI 10.1007/978-3-642-21599-5_7
NR 48
TC 20
Z9 23
U1 0
U2 33
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2016
VL 46
IS 12
BP 1657
EP 1684
DI 10.1002/spe.2403
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EB4TV
UT WOS:000387367600003
OA Green Published
DA 2024-07-18
ER

PT J
AU Liu, F
   Li, BX
   Nasre, R
AF Liu, Fei
   Li, Bixin
   Nasre, Rupesh
TI Efficient online cycle detection technique combining with Steensgaard
   points-to information
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE online cycle detection; inclusion-based pointer analysis; Steensgaard
   analysis; cycle effect; constraint graph
ID FLOW
AB Pointer analysis is a key static analysis during compilation. Several client analyses and transformations rely on precise pointer information to optimize programs. Therefore, it is paramount to improve the efficiency of pointer analysis. A critical piece of an inclusion-based pointer analysis is online cycle detection. The efficiency of pointer analysis is significantly influenced by the efficacy of detecting cycles. Existing approaches perform poorly when they guess cycle formation in the constraint graph. Thus, the number of false cycle-detection triggers of the state-of-the-art methods is considerably high (over 99% on Standard Performance Evaluation Corporation (SPEC) benchmarks). In this paper, we propose bootstrapping as a way to improve cycle detection predictability of pointer analysis. The main idea is to run a sequence of increasingly precise analyses to feed into the next more precise analysis to improve the efficiency of the latter analysis. In this process, we develop a new notion of pointer equivalence called constraint equivalence. Using Steensgaard's fast unification algorithm as the bootstrap, we devise a new cycle detection method for Andersen's inclusion-based analysis. We measure the effectiveness of our approach using a suite of programs including SPEC 2000 benchmarks and two open-source programs, and find that our method can reduce the number of false cycle detections by almost 22x compared with a state-of-the-art method. This leads to an overall analysis time improvement of 18% on an average. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Liu, Fei; Li, Bixin] SE Univ, Sch Comp Sci & Engn, Nanjing 210018, Jiangsu, Peoples R China.
   [Nasre, Rupesh] IIT, Comp Sci & Engn, Madras, Tamil Nadu, India.
C3 Southeast University - China; Indian Institute of Technology System (IIT
   System); Indian Institute of Technology (IIT) - Madras
RP Li, BX (corresponding author), SE Univ, Sch Comp Sci & Engn, Nanjing 210018, Jiangsu, Peoples R China.
EM bx.li@seu.edu.cn
OI Nasre., Rupesh/0000-0001-7490-625X
FU Huawei Innovation Research Program [YB2014010021]; National Natural
   Science Foundation of China [61402103]; natural science foundation of
   Jiangsu Province [BK20130633]; IIT Madras [CSE/13-14/812/NFIG/RUPS,
   CSE/13-14/636/NFSC/RUPS]
FX We thank anonymous reviewers for helpful comments that significantly
   improved the write-up. This work is partially sponsored by Huawei
   Innovation Research Program under Grant No. YB2014010021, and by the
   National Natural Science Foundation of China under Grant No. 61402103,
   and by the natural science foundation of Jiangsu Province under Grant
   No. BK20130633. The third author is partially supported by IIT Madras
   Grants CSE/13-14/812/NFIG/RUPS and CSE/13-14/636/NFSC/RUPS.
CR [Anonymous], 1994, Program Analysis and Specialization for the C Programming Language
   Berndl M, 2003, ACM SIGPLAN NOTICES, V38, P103, DOI 10.1145/780822.781144
   Blackshear S, 2011, LECT NOTES COMPUT SC, V6887, P60, DOI 10.1007/978-3-642-23702-7_9
   Choi W, 2011, INFORM SOFTWARE TECH, V53, P818, DOI 10.1016/j.infsof.2011.03.003
   Fahndrich M, 1998, ACM SIGPLAN NOTICES, V33, P85, DOI 10.1145/277652.277667
   Fähndrich M, 2000, ACM SIGPLAN NOTICES, V35, P253, DOI 10.1145/358438.349332
   Hardekopf B, 2007, LECT NOTES COMPUT SC, V4634, P265
   Hardekopf B, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P290, DOI 10.1145/1250734.1250767
   Hardekopf B, 2011, INT SYM CODE GENER, P289, DOI 10.1109/CGO.2011.5764696
   Hardekopf B, 2009, ACM SIGPLAN NOTICES, V44, P226, DOI 10.1145/1594834.1480911
   Heintze N, 2001, ACM SIGPLAN NOTICES, V36, P254, DOI 10.1145/381694.378855
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   Kahlon V, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P249, DOI 10.1145/1375581.1375613
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lattner C, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P278, DOI 10.1145/1250734.1250766
   Lhoták O, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P3, DOI 10.1145/1926385.1926389
   Nasre R, 2012, ACM SIGPLAN NOTICES, V47, P121, DOI 10.1145/2426642.2259013
   Nasre R, 2011, INT SYM CODE GENER, P267, DOI 10.1109/CGO.2011.5764694
   Pearce DJ, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1290520.1290524
   Pearce DJ, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P3, DOI 10.1109/SCAM.2003.1238026
   Pereira FMQ, 2009, INT SYM CODE GENER, P126, DOI 10.1109/CGO.2009.9
   Rountev A, 2000, ACM SIGPLAN NOTICES, V35, P47, DOI 10.1145/358438.349310
   Shapiro M., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P1, DOI 10.1145/263699.263703
   Smaragdakis Y, 2013, ACM SIGPLAN NOTICES, V48, P253, DOI [10.1145/2509136.2509524, 10.1145/2544173.2509524]
   Sridharan M, 2005, ACM SIGPLAN NOTICES, V40, P59, DOI 10.1145/1103845.1094817
   Sridharan M, 2006, ACM SIGPLAN NOTICES, V41, P387, DOI 10.1145/1133981.1134027
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   Sui YL, 2014, SOFTWARE PRACT EXPER, V44, P1485, DOI 10.1002/spe.2214
   Sui Yulei, 2011, P 9 AS S PROGR LANG, P155, DOI DOI 10.1007/978-3-642-25318-8
   Sui Yulei, 2012, P INT S SOFTW TEST A, P254, DOI [DOI 10.1145/2338965.2336784, DOI 10.1145/04000800.2336784]
   Sun Q, 2011, LECT NOTES COMPUT SC, V6601, P62, DOI 10.1007/978-3-642-19861-8_5
   Whaley J, 2004, ACM SIGPLAN NOTICES, V39, P131, DOI 10.1145/996893.996859
   Whaley J, 2002, LECT NOTES COMPUT SC, V2477, P180
   WILSON RP, 1995, SIGPLAN NOTICES, V30, P1, DOI 10.1145/223428.207111
   Xu G., 2008, ISSTA'08, P225, DOI DOI 10.1145/1390630.1390658
   Yu Hong, 2010, Proceedings of the Fifth ChinaGrid Annual Conference (ChinaGrid 2010), P218, DOI 10.1109/ChinaGrid.2010.30
   Zhu JW, 2005, DES AUT CON, P831, DOI 10.1109/DAC.2005.193930
   Zhu JW, 2004, ACM SIGPLAN NOTICES, V39, P145, DOI 10.1145/996893.996860
NR 38
TC 0
Z9 0
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2016
VL 46
IS 5
BP 601
EP 623
DI 10.1002/spe.2329
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ3YV
UT WOS:000374143500003
DA 2024-07-18
ER

PT J
AU Purdila, V
   Pentiuc, SG
AF Purdila, Vasile
   Pentiuc, Stefan-Gheorghe
TI Single-scan: a fast star-join query processing algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE algorithm; data warehouse; dimension table; fact table; Hadoop;
   MapReduce; parallel processing; Bloom filter; star-join
ID MAPREDUCE; SCALABILITY; CLUSTER
AB A data warehouse can store very large amounts of data that should be processed in parallel in order to achieve reasonable query execution times. The MapReduce programming model is a very convenient way to process large amounts of data in parallel on commodity hardware clusters. A very popular query used in data warehouses is star-join. In this paper, we present a fast and efficient star-join query execution algorithm built on top of a MapReduce framework called Hadoop. By using dynamic filters against dimension tables, the algorithm needs a single scan of the fact table, which means a significant reduction of input/output operations and computational complexity. Also, the algorithm requires only two MapReduce iterations in total-one to build the filters against dimension tables and one to scan the fact table. Our experiments show that the proposed algorithm performs much better than the existing solutions in terms of execution time and input/output. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Purdila, Vasile; Pentiuc, Stefan-Gheorghe] Stefan Cel Mare Univ Suceava, Suceava 720229, Romania.
C3 Stefan cel Mare University of Suceava
RP Pentiuc, SG (corresponding author), Stefan Cel Mare Univ Suceava, Suceava 720229, Romania.
EM pentiuc@eed.usv.ro
RI Pentiuc, Stefan-Gheorghe/AAQ-7043-2021
OI Pentiuc, Stefan-Gheorghe/0000-0002-5239-9493
FU project 'Improvement of the doctoral studies quality in engineering
   science for development of the knowledge based society-QDOC'
   [POSDRU/107/1.5/S/78534]; European Social Fund through the Sectorial
   Operational Program Human Resources
FX This work was supported by the project 'Improvement of the doctoral
   studies quality in engineering science for development of the knowledge
   based society-QDOC' contract no. POSDRU/107/1.5/S/78534, project
   co-funded by the European Social Fund through the Sectorial Operational
   Program Human Resources 2007-2013.
CR Aguilar-Saborit J, 2007, DATA KNOWL ENG, V63, P997, DOI 10.1016/j.datak.2007.06.008
   [Anonymous], 1998, ART COMPUTER PROGRAM
   [Anonymous], 2014, ELECTRUM SSB DBGEN
   [Anonymous], 2014, HOW TO SELECT RIGHT
   [Anonymous], 2014, Apache hive
   [Anonymous], 2014, TERADATA APPLIANCE H
   [Anonymous], 2014, OPENBITSET
   [Anonymous], 2014, CLOUDBASE
   [Anonymous], 2014, AMAZON EMR
   Bajda-Pawlikowski Kamil., 2011, Proceedings of the 2011 ACM SIGMOD International Conference on Management of Data, SIGMOD '11, P1165, DOI DOI 10.1145/1989323.1989447
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Carretero J, 2009, J SUPERCOMPUT, V47, P253, DOI 10.1007/s11227-008-0213-1
   Cui Y, 2012, IEICE T INF SYST, VE95D, P2810, DOI 10.1587/transinf.E95.D.2810
   Datta A, 2002, IEEE T KNOWL DATA EN, V14, P1299, DOI 10.1109/TKDE.2002.1047769
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dehuri S, 2007, INT J INF TECH DECIS, V6, P279, DOI 10.1142/S0219622007002484
   Elteir M, 2011, INT C PAR DISTRIB SY, P364, DOI 10.1109/ICPADS.2011.131
   Germann U., P NAACL HLT WORKSH S, P31
   Grossman Robert., 2008, Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD), P920, DOI DOI 10.1145/1401890.1402000
   Han H, 2011, CLUSTER COMPUT, V14, P183, DOI 10.1007/s10586-010-0144-5
   Inmon WH, 2002, BUILDING DATA WAREHO, P34
   Isard M., 2007, Operating Systems Review, V41, P59, DOI 10.1145/1272998.1273005
   Liang WF, 2000, VLDB J, V8, P319, DOI 10.1007/s007780050011
   Siqueira TLL, 2012, GEOINFORMATICA, V16, P165, DOI 10.1007/s10707-011-0128-5
   Märtens H, 2003, CONCURR COMP-PRACT E, V15, P1169, DOI 10.1002/cpe.786
   Miner Donald., 2012, MapReduce Design Patterns: Building Effective Algorithms and Analytics for Hadoop and Other Systems
   Mohamed H., 2012, 2012 41st International Conference on Parallel Processing Workshops (ICPPW 2012), P11, DOI 10.1109/ICPPW.2012.6
   O'Neil P, 2014, STAR SCHEMA BENCHMAR
   Rosenberg A, 2006, BUSINESS INTELLIGENC, V11, P7
   Sangwon Seo, 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P721, DOI 10.1109/CloudCom.2010.17
   Stonebraker M, 2010, COMMUN ACM, V53, P64, DOI 10.1145/1629175.1629197
   Tan RBN, 2003, LECT NOTES COMPUT SC, V2690, P709
   White T., 2012, HADOOP DEFINITIVE GU
NR 33
TC 4
Z9 4
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2016
VL 46
IS 3
BP 319
EP 339
DI 10.1002/spe.2308
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DD2RH
UT WOS:000369769400002
DA 2024-07-18
ER

PT J
AU Shobaki, G
   Sakka, L
   Abu Rmaileh, NE
   Al-Hamash, H
AF Shobaki, Ghassan
   Sakka, Laith
   Abu Rmaileh, Najm Eldeen
   Al-Hamash, Hasan
TI Experimental evaluation of various register-pressure-reduction
   heuristics
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler optimizations; instruction scheduling; register pressure
   reduction; spill code minimization; performance optimization;
   combinatorial optimization; NP-complete problems; experimental
   algorithms
AB Minimizing the amount of spill code is still an open problem in code generation and optimization. The amount of spill code depends on both the register allocation algorithm and the pre-allocation instruction scheduling algorithm that controls the register pressure. In this paper, we focus on the impact of pre-allocation instruction scheduling on the amount of spill code. Many heuristic techniques have been proposed to do instruction scheduling with the objective of minimizing register pressure and consequently the amount of spill code. However, the performance of these heuristic techniques has not been studied relative to optimality on real large-scale programs. In this paper, we present an experimental study that evaluates the performance of several pre-allocation scheduling heuristics. The evaluation involves computing an experimental lower bound on the size of gap between each heuristic's performance and optimal performance. We also propose a simple heuristic technique based on a specific permutation of two basic priority schemes and experimentally evaluate the performance of this technique compared with other heuristics, including the heuristics implemented in the LLVM open-source Compiler. The evaluation is carried out by running SPEC CPU2006 on real x86-64 hardware and measuring both the amount of spill code and the execution time. The results of our study show that the proposed heuristic technique gives better overall performance than LLVM's best heuristic on x86-64, although it produces slightly more spilling. The proposed heuristic has better overall performance, because it achieves a better balance between register pressure and instruction-level parallelism (ILP). This result shows the importance of ILP in pre-allocation scheduling even on out-of-order machines. Furthermore, the results of the study show that there is a large gap between the performance of any of the studied heuristics and optimal performance; even the best heuristic in the study produces significantly more spill code than the optimal amount. This experimental result quantifies the intuitive belief that it is unlikely to find a heuristic that works well in all cases, thus showing the need for more rigorous solutions using combinatorial approaches. The paper discusses the challenges and complexities that are involved in developing such rigorous solutions. Copyright (C) 2014 John Wiley & Sons, Ltd.
C1 [Shobaki, Ghassan; Sakka, Laith; Abu Rmaileh, Najm Eldeen; Al-Hamash, Hasan] Princess Sumaya Univ Technol, Amman, Jordan.
C3 Princess Sumaya University for Technology
RP Shobaki, G (corresponding author), Princess Sumaya Univ Technol, Comp Sci, Amman, Jordan.
EM g.shobaki@psut.edu.jo
RI Shobaki, Ghassan/HGC-7510-2022
OI Shobaki, Ghassan/0000-0001-8727-671X
CR Barany Gergo, 2013, P INT C COMP CONSTR
   Berson D.A., 1993, P IFIP WG103, P243
   Cooper KeithD., 2004, Engineering a Compiler
   Faraboschi P, 2001, P IEEE, V89, P1638, DOI 10.1109/5.964443
   Goodman James R., 1988, P INT C SUP
   Govindarajan R, 2003, IEEE T COMPUT, V52, P4, DOI 10.1109/TC.2003.1159750
   Kessler C, 1998, SCHEDULING EXPRESSIO
   Malik A., 2008, Ph.D. dissertation
   SETHI R, 1970, J ACM, V17, P715, DOI 10.1145/321607.321620
   Shobaki G, 2013, ACM T ARCHIT CODE OP, V10, DOI 10.1145/2512432
   Shobaki Ghassan, 2006, THESIS UC DAVIS
   Touati SAA, 2005, INT J PARALLEL PROG, V33, P393, DOI 10.1007/s10766-005-6466-x
   Weicker R, 2007, ACM SIGARCH COMPUTER
NR 13
TC 4
Z9 5
U1 0
U2 3
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2015
VL 45
IS 11
BP 1497
EP 1517
DI 10.1002/spe.2297
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LI
UT WOS:000363500900003
OA Bronze
DA 2024-07-18
ER

PT J
AU Ristov, S
   Korencic, D
AF Ristov, Strahil
   Korencic, Damir
TI Fast construction of space-optimized recursive automaton
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE finite-state automata; recursive automaton; lexicon implementation;
   compressed data structures
ID COMPRESSION
AB Finite-state automata are important components in information retrieval and natural language processing software. A recursive automaton is the most compact representation of the acyclic deterministic finite-state automata. It is based on merging not only the equivalent states but also the identical substructures in an automaton. The LZ trie variant is the state-of-the-art in automata compression regarding space, but the time needed for its construction was, until now, quadratic, which has made it impractical for large inputs. In this paper, we present the first algorithm for LZ trie construction that runs in effectively linear time thereby making it an attractive choice for finite-state automata implementation. We achieve this goal by adding a new functionality to the enhanced suffix array data structure. We present two variants of the construction procedure - an optimal method regarding the final size and a method that sacrifices some compression for low intermediate memory usage. We have made the implementation of our algorithms available in an open source software package LzLex.Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Ristov, Strahil; Korencic, Damir] Rudjer Boskovic Inst, Dept Elect, Zagreb 10000, Croatia.
C3 Rudjer Boskovic Institute
RP Ristov, S (corresponding author), Rudjer Boskovic Inst, Dept Elect, Bijenicka 54, Zagreb 10000, Croatia.
EM ristov@irb.hr
CR Abouelhoda M. I., 2004, Journal of Discrete Algorithms, V2, P53, DOI 10.1016/S1570-8667(03)00065-0
   [Anonymous], 1997, ACM SIGACT NEWS
   Budiscak I, 2009, PREPR 8 INT WORKSH F
   Ciura MG, 2001, SOFTWARE PRACT EXPER, V31, P1077, DOI 10.1002/spe.402
   Daciuk J, 2000, COMPUT LINGUIST, V26, P3, DOI 10.1162/089120100561601
   Daciuk J, 2001, LECT NOTES COMPUT SC, V2088, P105
   Daciuk J, FINITE STATE UTILITI
   Daciuk J., 2010, MATH COMPUTING LANGU, V2, P133
   Daciuk J, 2006, ADV SOFT COMP, P87
   Daciuk J, 2011, LECT NOTES COMPUT SC, V6807, P118, DOI 10.1007/978-3-642-22256-6_12
   Gawrychowski P, 2011, LECT NOTES COMPUT SC, V6907, P327, DOI 10.1007/978-3-642-22993-0_31
   Georgiev K., 2007, P WORKSHOP FINITE ST, P7
   Kasai T., 2001, Combinatorial Pattern Matching. 12th Annual Symposium, CPM 2001. Proceedings (Lecture Notes in Computer Science Vol. 2089), P181
   Nakamura R, 2009, ALGORITHMS, V2, P1429, DOI 10.3390/a2041429
   Nederhof MJ, 2000, COMPUT LINGUIST, V26, P17, DOI 10.1162/089120100561610
   Nong G, 2011, IEEE T COMPUT, V60, P1471, DOI 10.1109/TC.2010.188
   REVUZ D, 1992, THEOR COMPUT SCI, V92, P181, DOI 10.1016/0304-3975(92)90142-3
   Ristov S, 2005, SOFTWARE PRACT EXPER, V35, P445, DOI 10.1002/spe.643
   Ristov S, 1999, LECT NOTES COMPUTER, V1645, P196
   STORER JA, 1982, J ACM, V29, P928, DOI 10.1145/322344.322346
   Tounsi L, 2009, FRONT ARTIF INTEL AP, V191, P146, DOI 10.3233/978-1-58603-975-2-146
   Watson Bruce, 2010, THESIS U PRETORIA
   ZIV J, 1977, IEEE T INFORM THEORY, V23, P337, DOI 10.1109/TIT.1977.1055714
   [No title captured]
NR 24
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2015
VL 45
IS 6
BP 783
EP 799
DI 10.1002/spe.2261
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG1LA
UT WOS:000353032900003
DA 2024-07-18
ER

PT J
AU Costantini, G
   Ferrara, P
   Cortesi, A
AF Costantini, Giulia
   Ferrara, Pietro
   Cortesi, Agostino
TI A suite of abstract domains for static analysis of string values
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE static analysis; abstract interpretation; abstract domains; strings
AB Strings are widely used in modern programming languages in various scenarios. For instance, strings are used to build up Structured Query Language (SQL) queries that are then executed. Malformed strings may lead to subtle bugs, as well as non-sanitized strings may raise security issues in an application. For these reasons, the application of static analysis to compute safety properties over string values at compile time is particularly appealing. In this article, we propose a generic approach for the static analysis of string values based on abstract interpretation. In particular, we design a suite of abstract semantics for strings, where each abstract domain tracks a different kind of information. We discuss the trade-off between efficiency and accuracy when using such domains to catch the properties of interest. In this way, the analysis can be tuned at different levels of precision and efficiency, and it can address specific properties.Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Costantini, Giulia; Cortesi, Agostino] Ca Foscari Univ, I-30172 Venice, Italy.
   [Ferrara, Pietro] ETH, Zurich, Switzerland.
   [Ferrara, Pietro] IBM Thomas J Watson Res Ctr, Yorktown Hts, NY USA.
C3 Universita Ca Foscari Venezia; Swiss Federal Institutes of Technology
   Domain; ETH Zurich; International Business Machines (IBM)
RP Costantini, G (corresponding author), Ca Foscari Univ, Via Torino 172, I-30172 Venice, Italy.
EM costantini@dsi.unive.it
RI FERRARA, Pietro/ABF-9761-2021; Cortesi, Agostino/F-9637-2011; Cortesi,
   Agostino/AAQ-2996-2020
OI FERRARA, Pietro/0000-0002-4678-933X; Cortesi,
   Agostino/0000-0002-0946-5440; 
FU SNF; MIUR PRIN
FX This work is partially supported by SNF project "Verification-Driven
   Inference of Contracts" and by the MIUR PRIN Project "Security
   Horizons".
NR 0
TC 28
Z9 29
U1 0
U2 2
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2015
VL 45
IS 2
BP 245
EP 287
DI 10.1002/spe.2218
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY4FJ
UT WOS:000347533400006
DA 2024-07-18
ER

PT J
AU Bruneau, J
   Consel, C
AF Bruneau, Julien
   Consel, Charles
TI DiaSim: a simulator for pervasive computing applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE simulation; testing; pervasive computing; hybrid simulation
ID FRAMEWORK
AB Pervasive computing applications involve both software concerns, such as any software system, and integration concerns, for the constituent networked devices of the pervasive computing environment. This situation is problematic for testing because it requires acquiring, testing, and interfacing a variety of software and hardware entities. This process can rapidly become costly and time-consuming when the target environment involves many entities.This paper introduces DiaSim, a simulator for pervasive computing applications. To cope with widely heterogeneous entities, DiaSim is parameterized with respect to a description of a target pervasive computing environment. This description is used to generate both a programming framework to develop the simulation logic and an emulation layer to execute applications. Furthermore, a simulation renderer is coupled to DiaSim to allow a simulated pervasive system to be visually monitored and debugged.DiaSim has been implemented and used to simulate various pervasive computing systems in different application areas, demonstrating the generality of our parameterized approach. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 Univ Bordeaux, Inria, F-33400 Talence, France.
C3 Inria; Universite de Bordeaux
RP Consel, C (corresponding author), INRIA Bordeaux, Phoenix Res Grp, 351 Cours Liberat, F-33400 Talence, France.
EM charles.consel@inria.fr
RI Pettré, Julien/AAB-2590-2022
CR [Anonymous], TECHNICAL REPORT
   Broens T., 2006, ICAS 06 P INT C AUT, P45
   Bruneau J, 2011, DESIGN DRIVEN DEV SA
   Bruneau J, 2010, MOB 10 P 7 INT C MOB
   Cassou D, 2011, IEEE T SOFTWARE ENG
   Cassou D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P431, DOI 10.1145/1985793.1985852
   Cassou Damien., 2009, GPCE '09: Proceedings of the 8th International Conference on Generative Programming and Component Engineering, P137
   Chen Guanling., 2002, 4 IEEE WORKSHOP MOBI, P105, DOI DOI 10.1109/MCSA.2002.1017490
   D'Aprano F, 2007, MOB 07 P 1 INT WORKS, P35
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Frechette R., 2008, CTBUH P COUNCIL TALL, P7
   Gatti S, 2011, LECT NOTES COMPUT SC, V6603, P217, DOI 10.1007/978-3-642-19811-3_16
   Grimm R, 2004, IEEE PERVAS COMPUT, V3, P22, DOI 10.1109/MPRV.2004.1321024
   Jakob H, 2011, LECT NOTES COMPUT SC, V6723, P92, DOI 10.1007/978-3-642-21387-8_8
   Jouve W., 2009, Pervasive Computing and Communications, P1
   JOUVE W, 2009, PERCOM 09, P1
   Jouve W, 2008, LECT NOTES COMPUT SC, V5310, P1
   Kuehn T., 2005, FUNDAMENTALS 2005 AS
   Levis P., 2003, SENSYS 03, P126, DOI DOI 10.1145/958491.958506
   Luke S, 2005, SIMUL-T SOC MOD SIM, V81, P517, DOI 10.1177/0037549705058073
   Martynova Marina., 2006, Mergers Acquisitions in Europe, P1
   Mercadal J, 2010, ACM SIGPLAN NOTICES, V45, P47, DOI 10.1145/1932682.1869465
   Morla R, 2004, IEEE PERVAS COMPUT, V3, P48, DOI 10.1109/MPRV.2004.1321028
   Nishikawa H, 2006, LECT NOTES COMPUT SC, V4206, P459
   O'Neill E, 2004, FIRST INTERNATIONAL CONFERENCE ON TESTBEDS AND RESEARCH INFRASTRUCTURES FOR THE DEVELOPMENT OF NETWORKS AND COMMUNITIES, PROCEEDINGS, P60
   Polley J, 2004, 2004 FIRST ANNUAL IEEE COMMUNICATIONS SOCIETY CONFERENCE ON SENSOR AND AD HOC COMMUNICATIONS AND NETWORKS, P145, DOI 10.1109/SAHCN.2004.1381912
   Ranganathan A, 2005, Third IEEE International Conference on Pervasive Computing and Communications, Proceedings, P7, DOI 10.1109/PERCOM.2005.26
   Reynolds V, 2006, INT 06 P 1 INT C INT
   Riederer P., 2005, BUILD SIM 2005 P 9 I
   Roman M., 2002, IEEE Pervasive Computing, V1, P74, DOI 10.1109/MPRV.2002.1158281
   Sanmugalingan K., 2002, UbiComp 2002: Ubiquitous Computing. 4th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2498), P308
   Sundresh S, 2004, PROC ANNU SIMUL SYMP, P221, DOI 10.1109/SIMSYM.2004.1299486
   Titzer BL, 2005, 2005 Fourth International Symposium on Information Processing in Sensor Networks, P477
   Wireshark, 2012, NETW PROT AN
   Zhu Y, 2010, INT CONF COMP SCI, P1, DOI 10.1109/ICCSIT.2010.5563994
NR 36
TC 7
Z9 7
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2013
VL 43
IS 8
SI SI
BP 885
EP 909
DI 10.1002/spe.2130
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 279UM
UT WOS:000328984900001
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Zhao, D
   Choudhary, SR
   Orso, A
AF Zhao, Dan
   Choudhary, Shauvik Roy
   Orso, Alessandro
TI Developing analysis and testing plug-ins for modern IDEs: an experience
   report
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Integrated Development Environments; plug-ins; software testing; program
   analysis
AB Plug-ins have become an important part of today's Integrated Development Environments (IDEs). They are useful not only for extending the IDEs' functionality but also for customizing the IDEs for different types of projects. In this paper, we discuss some features that IDEs should provide to support the development of a specific kind of plug-insplug-ins that implement program analysis and software testing techniques. To guide the discussion, we first provide a survey of existing testing and analysis plug-ins and, for each of these plug-ins, discuss the details of the IDE support they use. We then present a case study based on our personal experience with building a regression-testing plug-in for two different IDEs. Finally, we use our findings to make a generalized discussion on the kind of capabilities a platform should provide to better support the development of program analysis and software testing plug-ins.Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Zhao, Dan] Hunan Univ, Coll Informat Sci & Engn, Changsha 410082, Hunan, Peoples R China.
   [Zhao, Dan; Choudhary, Shauvik Roy; Orso, Alessandro] Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
C3 Hunan University; University System of Georgia; Georgia Institute of
   Technology
RP Choudhary, SR (corresponding author), Georgia Tech, Coll Comp, Atlanta, GA 30332 USA.
EM shauvik@cc.gatech.edu
FU IBM; Microsoft Research through a Software Engineering Innovation
   Foundation; National Science Foundation [CCF-0916605, CCF-1161821]
FX IBM Research supported the development of BERT for Eclipse through an
   IBM Faculty Award to Georgia Tech. Microsoft Research supported the
   development of BERT for Visual Studio through a Software Engineering
   Innovation Foundation award to Georgia Tech. This work was also
   supported in part by National Science Foundation awards CCF-0916605 and
   CCF-1161821 to Georgia Tech. The participants in the TOPI 2011 workshop,
   where we presented an early version of this paper [1], provided helpful
   feedback on the work. The reviewers of both this paper and its early
   version provided insightful comments that helped us improve the paper.
   Finally, our colleagues and collaborators Jeremy Duvall, Wei Jin, and
   Tao Xie contributed to the initial work on Ecl-BERT and VS-BERT that we
   discuss in this paper.
CR [Anonymous], 2011, PEX MOLES ISOLATION
   Beck Kent L., 2003, Test Driven Development By Example
   CLARK M, JDEPEND
   Clayberg E., 2006, ECLIPSE BUILDING COM, V2nd
   CodePlex M, NUNITFORVS N UNIT IN
   Find Bugs Development Team, FINDB FIND BUGS JAV
   Hoffmann MR, ECCLEMMAJAVA CODE CO
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Hrast A, FXCOP RUNNER
   JetBrains, NET COD COV TOOL
   Jin W, 2011, P 1 WORKSH DEV TOOLS, P16
   Loskutov A, JDEPEND4ECLIPSE
   Mentor O, 2011, RESOURCES TEST DRIVE
   Microsoft Corporation, 2011, MICR VIS STUD 2010 O
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Smacchia. Com, MAK YOUR
   SubMain, COD RIGHT
   The Eclipse Foundation, 2011, ECL ECL FDN OP SOURC
   The PMD Team, PMD DONT SHOOT MESS
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Wei Jin, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P137, DOI 10.1109/ICST.2010.64
   Wei Jin A. O., 2010, FSE 10 P 18 ACM SIGS, P361, DOI [10.1145/1882291.1882348, DOI 10.1145/1882291.1882348]
NR 23
TC 3
Z9 3
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2013
VL 43
IS 4
SI SI
BP 465
EP 478
DI 10.1002/spe.2157
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 112UL
UT WOS:000316619200007
DA 2024-07-18
ER

PT J
AU Simpson, MS
   Barua, RK
AF Simpson, Matthew S.
   Barua, Rajeev K.
TI MemSafe: ensuring the spatial and temporal memory safety of C?at runtime
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE memory safety; reliability; verification; programming languages
ID COST
AB Memory access violations are a leading source of unreliability in C programs. As evidence of this problem, a variety of methods exist that retrofit C with software checks to detect memory errors at runtime. However, these methods generally suffer from one or more drawbacks including the inability to detect all errors, the use of incompatible metadata, the need for manual code modifications, and high runtime overheads. This paper presents a compiler analysis and transformation for ensuring the memory safety of C called MemSafe. MemSafe makes several novel contributions that improve upon previous work and lower the cost of safety. These include (i) a method for modeling temporal errors as spatial errors, (ii) a metadata representation that combines features of both object-based and pointer-based approaches, and (iii) a dataflow representation that simplifies optimizations for removing unneeded checks. MemSafe is capable of detecting real errors with lower overheads than previous efforts. Experimental results show that MemSafe detects all memory errors in six programs with known violations as well as two large and widely used open source applications. Finally, MemSafe ensures complete safety with an average overhead of 88% on 30 programs commonly used for evaluating the performance of error detection tools. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Simpson, Matthew S.; Barua, Rajeev K.] Univ Maryland, Dept Elect & Comp Engn, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Simpson, MS (corresponding author), Univ Maryland, Dept Elect & Comp Engn, 1431 AV Williams Bldg, College Pk, MD 20742 USA.
EM simpsom@umd.edu
CR Abadi M, 2005, P 12 ACM C COMP COMM, DOI [10.1145/1102120.1102165, DOI 10.1145/1102120.1102165]
   Akritidis P, 2008, P IEEE S SECUR PRIV, P263, DOI 10.1109/SP.2008.30
   Akritidis Periklis, 2009, 18 USENIX SECURITY S
   Andersen L. O., 1994, Ph.D. thesis
   ANDERSON J.P., 1972, ESDTR7351 US AIR FOR, VII
   Apache Software Foundation, AP HTTP SERV
   AUSTIN TM, 1994, SIGPLAN NOTICES, V29, P290, DOI 10.1145/773473.178446
   Bacon DavidF., 2004, 4th ACM International Conference on Embedded Software, P125
   Ball T, 2002, ACM SIGPLAN NOTICES, V37, P1, DOI 10.1145/565816.503274
   BALLANCE RA, 1990, SIGPLAN NOTICES, V25, P257, DOI 10.1145/93548.93578
   Berger ED, 2006, ACM SIGPLAN NOTICES, V41, P158, DOI 10.1145/1133981.1134000
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Biswas S., 2006, ACM Transactions on Embedded Computing Systems (TECS), V5, P719, DOI DOI 10.1145/1196636.1196637
   Bodik R, 2000, ACM SIGPLAN NOTICES, V35, P321, DOI 10.1145/358438.349342
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   Castro M, 2006, Usenix Association 7th Usenix Symposium on Operating Systems Design and Implementation, P147
   Chandra S., 1999, Software Engineering Notes, V24, P66, DOI 10.1145/381788.316183
   Chow F., 1996, Compiler Construction. 6th International Conference, CC'96. Proceedings, P253
   Clause James., 2007, P IEEEACM INT C AUTO, P284
   Condit JP, 2007, THESIS U CALIFORNIA
   Criswell John, 2007, Operating Systems Review, V41, P351, DOI 10.1145/1323293.1294295
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   CYTRON R, 1993, SIGPLAN NOTICES, V28, P36, DOI 10.1145/173262.155094
   Das M, 2002, ACM SIGPLAN NOTICES, V37, P57, DOI 10.1145/543552.512538
   Devietti J, 2008, ACM SIGPLAN NOTICES, V43, P103, DOI 10.1145/1353536.1346295
   Dhurjati D., 2006, 28th International Conference on Software Engineering Proceedings, P162, DOI 10.1145/1134285.1134309
   Dhurjati D, 2006, I C DEPEND SYS NETWO, P269, DOI 10.1109/DSN.2006.31
   Dhurjati D, 2006, ACM SIGPLAN NOTICES, V41, P144, DOI 10.1145/1133981.1133999
   Dillig I, 2007, ACM SIGPLAN NOTICES, V42, P435, DOI 10.1145/1273442.1250784
   Eigler FrankCh., 2003, GCC DEV SUMMIT
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   *GNU PROJ, GNU COMP COLL
   GNU Project, GNU COR UT
   Hastings Reed., 1992, WINTER USENIX C, P125
   International Organization for Standardization, 1999, 9899 ISOIEC
   Jim T, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P275
   Jones Richard WM, 1997, AADEBUG, V97, P13
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lattner C., 2005, THESIS U ILLINOIS UR
   Livshits V. B., 2003, Software Engineering Notes, V28, P317, DOI 10.1145/949952.940114
   Lu Shan, 2005, P WORKSH EV SOFTW DE
   Middha B, 2008, ACM T EMBED COMPUT S, V7, P46
   Nagarakatte S, 2010, ACM SIGPLAN NOTICES, V45, P31
   Nagarakatte S, 2009, ACM SIGPLAN NOTICES, V44, P245, DOI 10.1145/1543135.1542504
   Necula GC, 2005, ACM T PROGR LANG SYS, V27, P477, DOI 10.1145/1065887.1065892
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Oiwa Y, 2009, ACM SIGPLAN NOTICES, V44, P259, DOI 10.1145/1543135.1542505
   Patil H, 1997, SOFTWARE PRACT EXPER, V27, P87, DOI 10.1002/(SICI)1097-024X(199701)27:1<87::AID-SPE78>3.0.CO;2-P
   Perens Bruce, ELECT FENCE MALLOC D
   ROGERS A, 1995, ACM T PROGR LANG SYS, V17, P233, DOI 10.1145/201059.201065
   Ruwase Olatunji, 2004, NDSS, P159
   Seward J, 2005, USENIX Association Proceedings of the General Track: 2005 UNENIX Annual Technical Conference, P17
   Simpson Matthew., 2005, P INT C COMPILERS AR, P66
   Simpson MS, 2010, IEEE INT WORK C SO, P199, DOI 10.1109/SCAM.2010.15
   *STAND PERF EV COR, SPEC CPU BENCHM
   Suan Hsi Yong, 2003, Software Engineering Notes, V28, P307, DOI 10.1145/949952.940113
   U.S. Computer Emergency Readiness Team, US CERT VULN NOT DAT
   Wei Xu, 2004, Software Engineering Notes, V29, P117, DOI 10.1145/1041685.1029913
   ZORN B, 1993, SOFTWARE PRACT EXPER, V23, P733, DOI 10.1002/spe.4380230704
NR 59
TC 41
Z9 52
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2013
VL 43
IS 1
BP 93
EP 128
DI 10.1002/spe.2105
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 058SC
UT WOS:000312653300004
DA 2024-07-18
ER

PT J
AU Park, YS
   Koo, HM
   Ko, IY
AF Park, Yu-Sik
   Koo, Hyung-Min
   Ko, In-Young
TI A task-based and resource-aware approach to dynamically generate optimal
   software architecture for intelligent service robots
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE task-oriented computing; resource-aware computing; software
   architecture; resource optimization; dynamic software configuration;
   intelligent service robot
AB Intelligent service robots provide various services to users by understanding the context and goals of a user task. In order to provide more reliable services, intelligent service robots need to consider various factors, such as their surrounding environments, users' changing needs, and constrained resources. To handle these factors, most of the intelligent service robots are controlled by a task-based control system, which generates a task plan that represents a sequence of actions, and executes those actions by invoking the corresponding functions. However, the traditional task-based control systems lack the consideration of resource factors even though intelligent service robots have limited resources (limited computational power, memory space, and network bandwidth). Moreover, system-specific concerns such as the relationships among functional modules are not considered during the task generation phase. Without considering both the resource conditions and interdependencies among software modules as a whole, it will be difficult to efficiently manage the functionalities that are essential to provide core services to users. In this paper, we propose a mechanism for intelligent service robots to efficiently use their resources on-demand by separating system-specific information from task generation. We have defined a sub-architecture that corresponds to each action of a task plan, and provides a way of using the limited resources by minimizing redundant software components and maintaining essential components for the current action. To support the optimization of resource consumption, we have developed a two-phase optimization process, which is composed of the topological and temporal optimization steps. We have conducted an experiment with these mechanisms for an infotainment robot, and simulated the optimization process. Results show that our approach contributed to increase the utilization rate by 20% of the robot resources. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Park, Yu-Sik; Koo, Hyung-Min; Ko, In-Young] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Koo, HM (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
EM hmkoo@kaist.ac.kr
RI Ko, In-Young/C-1777-2011
OI Ko, In-Young/0000-0002-3843-263X
FU Defense Acquisition Program Administration; Agency for Defense
   Development [UD060048AD]
FX This work was partially supported by Defense Acquisition Program
   Administration and Agency for Defense Development under the contract
   (UD060048AD).
CR Alami R, 1998, INT J ROBOT RES, V17, P315, DOI 10.1177/027836499801700402
   CHEN CX, 1995, IEEE T SYST MAN CYB, V25, P569, DOI 10.1109/21.370189
   de Lara E, 2005, IEEE T PARALL DISTR, V16, P966, DOI 10.1109/TPDS.2005.124
   Flinn J, 1999, OPERATING SYSTEMS REVIEW, VOL 33, NO 5, DECEMBER 1999, P48, DOI 10.1145/319344.319155
   Garlan D., 2002, IEEE Pervasive Computing, V1, P22, DOI 10.1109/MPRV.2002.1012334
   Garlan D., 1997, P C CTR ADV STUD COL
   Gat E, 1998, ARTIFICIAL INTELLIGENCE AND MOBILE ROBOTS, P195
   Kim D., 2006, P INT WORKSH SELF AD
   Noble B. D., 1997, Operating Systems Review, V31, P276, DOI 10.1145/269005.266708
   Park YS, 2007, 16 IEEE INT S ROB HU
   Powers Shelley., 2003, Practical RDF, P16
   Ranganathan A, 2004, P ANN INT C MOB UB S
   Rigole P, 2004, P WORKSH MIDDL PERV
   Rigole P, 2007, PERVASIVE MOB COMPUT, V3, P276, DOI 10.1016/j.pmcj.2007.01.001
   Roman M., 2002, IEEE Pervasive Computing, V1, P74, DOI 10.1109/MPRV.2002.1158281
   Wallach DS, 2001, P 3 USENIX S INT TEC, P26
NR 16
TC 3
Z9 3
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2012
VL 42
IS 5
BP 519
EP 541
DI 10.1002/spe.1074
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 919AN
UT WOS:000302293100001
OA Bronze
DA 2024-07-18
ER

PT J
AU Yu, ZW
   Wang, CK
   Thomborson, C
   Wang, JM
   Lian, SG
   Vasilakos, AV
AF Yu, Zhiwei
   Wang, Chaokun
   Thomborson, Clark
   Wang, Jianmin
   Lian, Shiguo
   Vasilakos, Athanasios V.
TI A novel watermarking method for software protection in the cloud
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; software protection; watermarking
AB With the rapid development of cloud computing, software applications are shifting onto cloud storage rather than remaining within local networks. Software distributions within the cloud are subject to security breaches, privacy abuses, and access control violations. In this paper, we identify an insider threat to access control which is not completely eliminated by the usual techniques of encryption, cryptographic hashes, and access-control labels. We address this threat using software watermarking. We evaluate our access-control scheme within the context of a Collaboration-oriented Architecture, as defined by The Jericho Forum. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Yu, Zhiwei; Wang, Chaokun; Wang, Jianmin] Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
   [Yu, Zhiwei] Tsinghua Univ, Dept Comp Sci & Technol, Beijing 100084, Peoples R China.
   [Wang, Chaokun; Wang, Jianmin] Minist Educ, Key Lab Informat Syst Secur, Beijing, Peoples R China.
   [Wang, Chaokun; Wang, Jianmin] Tsinghua Natl Lab Informat Sci & Technol, Beijing, Peoples R China.
   [Thomborson, Clark] Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
   [Lian, Shiguo] France Telecom R&D Orange Labs, Beijing, Peoples R China.
   [Vasilakos, Athanasios V.] Univ Western Macedonia, Thessaloniki, Greece.
C3 Tsinghua University; Tsinghua University; Tsinghua University;
   University of Auckland; University of Western Macedonia
RP Wang, CK (corresponding author), Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
EM chaokun@tsinghua.edu.cn
RI Wang, Chao/GXF-8353-2022; wang, jian/GVS-0711-2022; vasilakos,
   athanasios/J-2824-2017; Thomborson, Clark/A-1055-2009
OI Vasilakos, Athanasios/0000-0003-1902-9877; Thomborson,
   Clark/0000-0002-4147-7898; Wang, Jianmin/0000-0001-6841-7943
FU National Basic Research Program of China [2009CB320706]; National
   Natural Science Foundation of China [61073005, 90718010, 60803016];
   National HeGaoJi Key Project [2010ZX01042-002-002-01]; Tsinghua National
   Laboratory for Information Science and Technology (TNLIST)
   Cross-discipline Foundation
FX This work is partially supported by the National Basic Research Program
   of China (No. 2009CB320706), the National Natural Science Foundation of
   China (Nos. 61073005, 90718010, 60803016), the National HeGaoJi Key
   Project (No. 2010ZX01042-002-002-01), and Tsinghua National Laboratory
   for Information Science and Technology (TNLIST) Cross-discipline
   Foundation.
CR Amazon, 2009, INTR EL MAPR
   [Anonymous], IT CLOUD SERVICES 2
   [Anonymous], 2002, ICECR 5
   [Anonymous], 2009, SEC GUID CRIT AR FOC
   [Anonymous], 2009, DEP ELECT ENG COMPUT
   [Anonymous], 2009, Surreptitious Software: Obfuscation, Watermarking, and Tamperproofing for Software Protection: Obfuscation, Watermarking, and Tamperproofing for Software Protection
   *BUS SOFTW ALL, 2009, 6 ANN BSA IDC GLOB S
   Business Software Alliance, 2010, 7 ANN BSA IDC GLOB S
   Collberg C., 1999, P 26 ACM SIGPLAN SIG, P311, DOI DOI 10.1145/292540.292569
   Collberg CS, 2002, IEEE T SOFTWARE ENG, V28, P735, DOI 10.1109/TSE.2002.1027797
   Hwang K, 2010, IEEE INTERNET COMPUT, V14, P14, DOI 10.1109/MIC.2010.86
   Hwang K, 2009, EIGHTH IEEE INTERNATIONAL CONFERENCE ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, PROCEEDINGS, P717, DOI 10.1109/DASC.2009.149
   Identity Theft Resource Center, 2007, DAT BREACH
   Jericho Forum, 2008, POS PAP COLL OR ARCH
   Jericho Forum, 2008, POS PAP COA FRAM
   Jericho Forum Collaboration Oriented Architecture, 2008, COLL OR ARCH VERS 2
   Lian S, 2009, INFORM SCI REFERENCE, DOI [10.4018/978-1-60566-262-6, DOI 10.4018/978-1-60566-262-6]
   LIAN S, 2009, INFORMATICA, V33, P3
   Liu L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P151
   Myles G., 2006, Electronic Commerce Research, V6, P155, DOI 10.1007/s10660-006-6955-z
   Paterson Ken., 2008, CREDIT CARD ISSUER F
   Rindfleisch T.C., 1997, Communications of the Association of Computing Machinery, V40, P93
   Tharaud J, 2010, 6 INT C INT INF HID, P510, DOI [10.1109/IIHMSP.2010.130, DOI 10.1109/IIHMSP.2010.130]
   Thomborson C, 2010, HANDBOOK OF INFORMATION AND COMMUNICATION SECURITY, P3, DOI 10.1007/978-3-642-04117-4_1
   WAIBEL G., 2010, Collaboration contexts: Framing local, group and global solutions
   Yu ZW, 2009, MINES 2009: FIRST INTERNATIONAL CONFERENCE ON MULTIMEDIA INFORMATION NETWORKING AND SECURITY, VOL 1, PROCEEDINGS, P35, DOI 10.1109/MINES.2009.227
   Zhu W, 2005, LECT NOTES COMPUT SC, V3495, P454
   ZHU W, 2006, 1 ACM WORKSH MULT CO, P29
NR 28
TC 11
Z9 11
U1 1
U2 32
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2012
VL 42
IS 4
SI SI
BP 409
EP 430
DI 10.1002/spe.1088
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902OK
UT WOS:000301047600003
DA 2024-07-18
ER

PT J
AU Jimenez-Diaz, G
   Gonzalez-Calero, PA
   Gomez-Albarran, M
AF Jimenez-Diaz, Guillermo
   Gonzalez-Calero, Pedro A.
   Gomez-Albarran, Mercedes
TI Role-play virtual worlds for teaching object-oriented design: the
   ViRPlay development experience
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE virtual learning environments; role-play; software usability;
   object-oriented design
AB The use of game technology for building virtual learning environments is intended to improve the motivation and engagement of the student, borrowing such properties from their entertaining counterparts. Nevertheless, wrapping pedagogical contents in a virtual environment is no simple achievement, and requires a rigorous process of designing and validating the metaphors and mechanics included in the virtual learning system. In this paper we describe such design process exemplified in the construction of consecutive versions of ViRPlay, a 3D role play virtual environment for teaching object-oriented design. We show how main mechanics were transferred from experiments in the real world and how such mechanics were evolved based on empirical evaluations. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Jimenez-Diaz, Guillermo] Univ Complutense Madrid, Fac Informat, Dept Ingn Software & Inteligencia Artificial, E-28040 Madrid, Spain.
C3 Complutense University of Madrid
RP Jimenez-Diaz, G (corresponding author), Univ Complutense Madrid, Fac Informat, Dept Ingn Software & Inteligencia Artificial, C Prof Jose Garcia Santesmases S-N, E-28040 Madrid, Spain.
EM gjimenez@fdi.ucm.es
RI Jimenez-Diaz, Guillermo/K-6604-2014; Gomez-Albarran,
   Mercedes/J-9946-2014; Gonzalez-Calero, Pedro A./B-2935-2009
OI Jimenez-Diaz, Guillermo/0000-0003-4070-825X; Gonzalez-Calero, Pedro
   A./0000-0002-9151-5573
FU Spanish Committee of Education and Science [TIN2009-13692-C03-03]
FX This work is supported by the Spanish Committee of Education and Science
   project under grant TIN2009-13692-C03-03. We also thank all the
   instructors and students involved in the evaluations.
CR Andrianoff S. K., 2002, SIGCSE Bulletin, V34, P121, DOI 10.1145/563517.563386
   [Anonymous], 2010, GAMA AUTOMATIC ANIMA
   BECK K, 1989, SIGPLAN NOTICES, V24, P1, DOI 10.1145/74878.74879
   BECKER BW, 2006, JAVA LEARNING PROGRA
   Bergin J., 1997, Karel++ A Gentle Introduction to the Art of Object Oriented Programming
   Bergin J., 2005, KJ ROBOT GENTLE INTR
   Bergin J, 2001, 8 C PATT LANG PROGR
   Bierre K.J., 2004, P 5 C INFORM TECHNOL, P122
   BORSTLER J, 2005, COMP 20 ANN ACM SIGP, P356
   CALLAGHAN M, 2009, ITALICS INNOVATION T, V8, P1
   Clancy MJ, 1999, PROCEEDINGS OF THE THIRTIETH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P37, DOI 10.1145/384266.299673
   Cross JH, 2007, SIGCSE 2007: PROCEEDINGS OF THE THIRTY-EIGHTH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P4, DOI 10.1145/1227504.1227316
   Dann W., 2005, LEARNING PROGRAM ALI
   Depradine C, 2007, COMPUT EDUC, V49, P1081, DOI 10.1016/j.compedu.2006.01.002
   Enet library, 2010, ENET LIB
   Esteves M, 2008, LECT NOTES COMPUT SC, V5411, P99, DOI 10.1007/978-3-540-92831-7_9
   Jiménez-Díaz G, 2008, LECT NOTES COMPUT SC, V5192, P27
   Jiménez-Díaz G, 2008, INT J ENG EDUC, V24, P717
   Jiménez-Díaz G, 2007, LECT NOTES COMPUT SC, V4740, P49
   Kluge Stacy, 2008, Journal of Issues in Informing Science and Information Technology Journal, V5, P127
   Kolling M., 2005, SIGCSE Bulletin, V37, P59, DOI 10.1145/1151954.1067465
   Kolling M., 2003, Computer Science Education, V13, P249
   Livingstone D., 2008, ALT-J, V16, P139, DOI [DOI 10.3402/RLT.V16I3.10893, DOI 10.1080/09687760802526707, 10.1080/09687760802526707]
   Lönnroth L, 2009, PROCEEDINGS OF THE 3RD EUROPEAN CONFERENCE ON GAMES BASED LEARNING, P242
   McShaffry M., 2009, GAME CODING COMPLETE, V3rd
   Moreno Andres., 2004, AVI '04: Proceeding of the working conference on Advanced visual interfaces, P373
   Naps T.L., 2002, ACM SIGCSE Bulletin, Volume, V35, P131, DOI DOI 10.1145/960568.782998
   Navarro Emily, 2009, SIGCSE Bulletin, V41, P326, DOI 10.1145/1539024.1508981
   Navarro EO, 2007, CONF SOFTW ENG EDUC, P195, DOI 10.1109/CSEET.2007.14
   Nebula 2, 2010, NEBULA 2
   Pattis R.E, 1981, KAREL ROBOT GENTLE I
   Robertson J., 2003, Journal of Interactive Learning Research, V14, P5
   Sancho-Thomas P, 2009, COMPUT EDUC, V53, P517, DOI 10.1016/j.compedu.2009.03.010
NR 33
TC 9
Z9 9
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2012
VL 42
IS 2
BP 235
EP 253
DI 10.1002/spe.1071
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 880OQ
UT WOS:000299417200005
DA 2024-07-18
ER

PT J
AU Malik, P
AF Malik, Petra
TI A retrospective on CZT
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE open-source; tools; formal methods; Z notation
ID SUPPORT; CIRCUS; TRANSLATION; FRAMEWORK
AB Community Z Tools (CZT) is an open-source Java framework for building formal methods tools for the specification language Z and extensions of Z. This paper gives an overview of CZT: its history, architecture, and development process. Extensibility is core to CZT and the main aims of this paper are to encourage and enable formal methods tool developers to utilize, extend, and contribute to CZT. The paper is also of value to people interested in open-source or formal methods software in general since many of the techniques and practices described are not specific to CZT and could be applied to other frameworks. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 Victoria Univ Wellington, Sch Engn & Comp Sci, Wellington, New Zealand.
C3 Victoria University Wellington
RP Malik, P (corresponding author), Victoria Univ Wellington, Sch Engn & Comp Sci, Wellington, New Zealand.
EM petra.malik@ecs.vuw.ac.nz
CR [Anonymous], 1999, CATHEDRAL BAZAAR
   [Anonymous], 2002, 13568 ISOIEC
   AYDAL EG, 2009, TAIC PART 09 P 2009, P63
   Cristia M, 2009, LECT NOTES COMPUT SC, V5885, P167, DOI 10.1007/978-3-642-10373-5_9
   Freitas A, 2006, LECT NOTES COMPUT SC, V4085, P115
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gurgel AC, 2008, LECT NOTES COMPUT SC, V5238, P349
   Hudson Scott., CUP LALR PARSER GENE
   *JEDIT, PROGR TEXT ED
   Kim SK, 2009, FORM ASP COMPUT, V21, P397, DOI 10.1007/s00165-008-0090-7
   Klein G., 2009, JFlex - The Fast Scanner Generator for Java
   Malik P, 2005, LECT NOTES COMPUT SC, V3455, P65
   Malik P, 2010, LECT NOTES COMPUT SC, V5977, P377, DOI 10.1007/978-3-642-11811-1_28
   MARTIN A, PROPOSAL COMMUNITY Z
   MARTIN A, COMMUNITY Z TOOLS IN
   Miller T, 2005, LECT NOTES COMPUT SC, V3771, P227
   Smith G., 2000, ADV FORMAL METHODS
   Utting M, 2003, LECT NOTES COMPUT SC, V2651, P437
   UTTING M, 2009, 15 COMP AUSTR THEOR, V94, P71
   Utting M, 2008, LECT NOTES COMPUT SC, V5238, P309
   Van Zyl J., 2008, MAVEN DEFINITIVE GUI
   WILLIAMS JR, 2010, LECT NOTES COMPUTER, V5977, P414
   WOODCOCK JCP, 2002, LECT NOTES COMPUTER, V2272
   Zeyda F, 2009, LECT NOTES COMPUT SC, V5423, P151
   COMMUNITY Z TOOLS
NR 25
TC 2
Z9 2
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2011
VL 41
IS 2
SI SI
BP 179
EP 188
DI 10.1002/spe.1015
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718FH
UT WOS:000287106000006
OA Bronze
DA 2024-07-18
ER

PT J
AU Berdajs, J
   Bosnic, Z
AF Berdajs, J.
   Bosnic, Z.
TI Extending applications using an advanced approach to DLL injection and
   API hooking
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE application extensions; programming; DLL injection; API hooking; detours
AB When programmers need to modify third-party applications, they frequently do not have access to their source code. In such cases, DLL injection and API hooking are techniques that can be used to modify applications without intervening into their source code. The commonly used varieties of injection and hooking approaches have many practical limitations: they are inconvenient for a programmer to implement, do not work reliably in conjunction with all applications and with certain low-level machine instructions. In this paper we present two novel approaches to DLL injection and API hooking, which we call Debugger-aided DLL injection and Single Instruction Hooking. Our approaches overcome the limitations of the state-of-the art approaches. Despite incurring greater execution times, our approach allows extending of the applications in situations where the comparable approaches fail. As such, it has a notable practical value for beneficial practical applications of injection and hooking approaches, which are present in malware detection programs and computer security tools. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Berdajs, J.; Bosnic, Z.] Univ Ljubljana, Fac Comp & Informat Sci, Ljubljana 1000, Slovenia.
C3 University of Ljubljana
RP Berdajs, J (corresponding author), Univ Ljubljana, Fac Comp & Informat Sci, Trzaska Cesta 25, Ljubljana 1000, Slovenia.
EM mrbrdo@gmail.com
FU Publishing Arts Research Council [98-1846389]
FX Contract/grant sponsor: Publishing Arts Research Council; contract/grant
   number: 98-1846389
CR ALPAYDIN A, 1992, UNDOCUMENTED WINDOWS
   Andersson S, 2005, 21st Annual Computer Security Applications Conference, Proceedings, P41
   [Anonymous], MSDN MAGAZINE
   CUSTER H, 1998, INSIDE WINDOWS NT
   FEWER S, REFLECTIVE DLL INJEC
   GOMEZ ID, INTELLIGENT DEBUGGIN
   Howard M., 2002, Writing secure code
   Hunt G, 1999, PROCEEDINGS OF THE 3RD USENIX WINDOWS NT SYMPOSIUM, P135
   IMMUNITY I, IMMUNITY DEBUGGER
   Ivanov Ivo., API HOOKING REVEALED
   KATH R, 2010, WIN32 DEBUGGING APPL
   KEONG C, APPL PROGRAMMING INT
   KEONG C, DEFEATING KERNEL NAT
   KOCH M, INTERCEPT CALLS DIRE
   Kuster Robert., 3 WAYS INJECT YOUR C
   LAM LC, 2006, 20 LARG INST SYST AD, P5
   *MICR, MICR HELP SUPP WORK
   *MICR, TOOL HELP LIBR
   *MICR, PROC THREADS
   *MICR, MEM MAN
   Moonsu Jang, 2007, 2007 International Conference on Convergence Information Technology - ICCIT '07, P1059, DOI 10.1109/ICCIT.2007.320
   NEBBETT G, 2000, WINDOWS NT 2000 NATI
   NETWORK MD, OVERVIEW WINDOWS API
   NEWCOMER JM, HOOKS DLLS
   *NTCORE, EXPL SUIT
   PIETREK M, 1994, MICROSOFT SYSTEM J, V9, P1
   PIETREK M, 1994, MICROSOFT SYSTEMS J, V9, P15
   PULLEY R, EXTENDING TASK MANAG
   RICHTER J, 1994, MICROSOFT SYSTEMS J, V9, P1
   ROWHANI NR, DII INJECTION FUNCTI
   Sathyanarayan VS, 2008, LECT NOTES COMPUT SC, V5107, P336, DOI 10.1007/978-3-540-70500-0_25
   Shewmaker J., ANAL DLL INJECTION
   Sun HM, 2006, LECT NOTES COMPUT SC, V4058, P159
   Willems C, 2007, IEEE SECUR PRIV, V5, P32, DOI 10.1109/MSP.2007.45
   [No title captured]
NR 35
TC 15
Z9 30
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2010
VL 40
IS 7
BP 567
EP 584
DI 10.1002/spe.973
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 599HL
UT WOS:000277901900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Janik, A
   Zielinski, K
AF Janik, Arkadiusz
   Zielinski, Krzysztof
TI Adaptability mechanisms for autonomic system implementation with AAOP
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomic computing, adaptable resource management; multitasking virtual
   machine, aspects
AB This paper presents a new approach to implementing an adaptability loop in Autonomic Computing (AC) systems, which is based on adaptable aspects. The approach utilizes the concept of adaptable aspect-oriented programming (AAOP) in which a set a of AOP aspects is used to run an application in the manner specified by its adaptability strategy. We present a model execution environment based on this concept, enabling the execution of applications with applied adaptability strategies. In the AAOP-based AC system, the application is instrumented with aspects selected by the system from a set of all available aspects (sensors, effectors, and goal aspects) in such a way that the system can monitor and manage the application This model can be used to implement systems that are able to monitor an application and its execution environment, and perform action such as changing the current set of non-functional constraints in response to changes in the application or its environment The model can be used for various types of non-functional goals, in various programming languages, both in centralized and distributed environments. This paper describes its a Java-based implementation and non-functional goals referring to resources management. As a consequence, the application uses resources in a way specified in its adaptability strategy. Resource consumption management logic is transparent for the application, meaning that no modifications in the application source code are needed Copyright (C) 2010 John Wiley & Sons, Ltd
C1 [Janik, Arkadiusz; Zielinski, Krzysztof] Univ Sci & Technol, Inst Comp Sci, Krakow, Poland.
C3 AGH University of Krakow
RP Janik, A (corresponding author), Akad Gorniczo Hutnicza, Katedra Informatyki, Al Mickiewicza 30, PL-30059 Krakow, Poland.
CR CZAJKOWSKI G, 2001, ALUFFITAKING COMPION
   CZAJKOWSKI G, 2001, RESOURCE MANAGELLICI
   *IBM, 2005, IBM TIV GROUP AUT CO
   IMCKINLEV P, 2004, COMPUTER, V37, P56
   JANIK A, 1999, THESIS KRAKOW, P104
   JANIK A, 2009, AAOP BASED NAMICALLY, P3
   *JAV COMM PROC, JSR121 JAV COMM PROC
   *JAV COMM PROC, 1984, JSR284
   KEPHART JO, 2003, VISION AUTOMONIC COM
   MCKINLEY P, 2003, MSUCSE0322, P74
   MCKINLEY R, 2002, PRO2RANIMING LANPLAI
   MICHELSON S, 2002, EV DRIV ARCH OV DRIV
   MUGGE H, 2007, WORKSH MIDDLW APPL I
   NICOAM A, 2007, 569 DEP COMP SCI, P233
   RASCHE A, 2005, ARM 05 P 4 WORKSH RE
   RHO T, 2006, 141TR20044 U BONN CO
   RUTHERTORD MJ, 2002, P 1 IFIP ACM WORK C
   SADACH S, 2004, P INT S DISTR OBJ AP, P13
   SURVE D, 2003, AOSD 03 P 2 INT C AS, P21
NR 19
TC 3
Z9 4
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2010
VL 40
IS 3
BP 209
EP 223
DI 10.1002/spe.953
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 562ES
UT WOS:000275033100001
DA 2024-07-18
ER

PT J
AU Jump, M
   McKinley, KS
AF Jump, Maria
   McKinley, Kathryn S.
TI Detecting memory leaks in managed languages with Cork
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE memory leaks; runtime analysis; dynamic; garbage collection
AB A memory leak in a managed language occurs when the program inadvertently maintains references to objects that it no longer needs. Memory leaks cause systematic heap growth that degrade performance and can result in program crashes after perhaps days or weeks of execution. Prior approaches for detecting memory leaks rely on heap differencing or detailed object statistics which store state proportional to the number of objects in the heap. These overheads preclude their use on the same processor for deployed long-running applications. This paper introduces Cork as a toot that accurately identifies heap growth caused by leaks. It is space efficient (adding less than 1% to the heap) and time efficient (adding 2.3% on average to total execution time). We implement this approach of examining and summarizing the class of live objects during garbage collection in a class points-In graph (CPFG). Each node in the CPFG represents a class and edges between nodes represent references between objects of the specific classes. Cork annotates nodes and edges with the corresponding volume of live objects. Cork identifies growing data structures across multiple collections and computes a class slice to identify leaks for the user. We experiment with two functions for identifying growth and show that Cork is accurate: it identifies systematic heap growth with no false positives in 4 of 15 benchmarks we tested. Cork's slice report enabled us to quickly identify and eliminate growing data structures in large and unfamiliar programs, something their developers had not previously done. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Jump, Maria] Kings Coll London, Dept Math & Comp Sci, Wilkes Barre, PA 18711 USA.
   [McKinley, Kathryn S.] Univ Texas Austin, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Jump, M (corresponding author), Kings Coll London, Dept Math & Comp Sci, 133 N River St, Wilkes Barre, PA 18711 USA.
EM mariajump@kings.edu
FU NSF [SHF-0910818, CCF-0811524, CNS-0719966, CCF-0429859]; IBM; CISCO;
   Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [0811524, 0910818] Funding Source: National
   Science Foundation
FX Contract/grant sponsor: NSF; contract/grant numbers: SHF-0910818,
   CCF-0811524, CNS-0719966, CCF-0429859; Contract/grant sponsor: IBM;
   Contract/grant sponsor: CISCO
CR ALPERN B, 1999, ACM C OBJ OR PROGR S, P314
   *AP XML PROJ, US FOP DOC REL 0 20
   ARNOLD MATTHEW., 2000, ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages, and Applications, P47
   Blackburn SM, 2004, PROC INT CONF SOFTW, P137, DOI 10.1109/ICSE.2004.1317436
   BLACKBURN SM, 2006, DACAPO BENCHMARKS JA
   BLACKBURN SM, 2004, INT C MEAS MOD COMP, P25
   BOND MD, 2008, ACM C OBJ OR PROGR S, P109
   Bond MD, 2006, ACM SIGPLAN NOTICES, V41, P61, DOI 10.1145/1168918.1168866
   Bond MD, 2009, ACM SIGPLAN NOTICES, V44, P277, DOI 10.1145/1508284.1508277
   CAMPAN J, 2002, PERFORMANCE TUNING E
   CHILIMBI TM, 2004, INT C ARCH SUPP PROG, P156
   De Pauw W, 2000, CONCURRENCY-PRACT EX, V12, P1431, DOI 10.1002/1096-9128(20001210)12:14<1431::AID-CPE542>3.0.CO;2-2
   De Pauw W, 1998, PROCEEDINGS OF THE FOURTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS, P219
   EECKHOUT L, 2003, ACM C OBJ OR PROGR S, P244
   Gupta SatishChandra., 2005, JAVA MEMORY LEAKS CA
   Hastings Reed., 1992, WINTER USENIX C, P125
   HEINE DL, 2003, ACM C PROGR LANG DES, P168
   HERTZ M, 2002, ACM C MEAS MOD COMP, P140
   Huang XL, 2004, ACM SIGPLAN NOTICES, V39, P69, DOI 10.1145/1035292.1028983
   Jump Maria., 2007, ACM S PRINCIPLES PRO, P31
   Mitchell N, 2003, LECT NOTES COMPUT SC, V2743, P351
   MITCHELL N, 2006, COMMUNICATION    MAY
   Nguyen HH, 2007, ISMM'07: PROCEEDINGS OF THE 2007 INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P15
   QIN F, 2002, S HIGH PERF COMP ARC, P291
   *QUESTSOFTWARE, 2006, JPROBE MEM DEB EL ME
   ROJEMO N, 1996, ACM INT C FUNCT PROG, P34
   ROJEMO N, 1995, INT WORKSH MEM MAN K, P145
   Runciman C., 1996, Advanced Functional Programming. Second International School. Tutorial Text, P159
   SERRANO M, 2000, ACM INT C FUNCT PROG, P245
   SHAHAM R, 2000, LECT NOTES COMPUTER, V1781, P245
   *STAND PERF EV COR, 2001, SPECJBB2000 JAV BUS
   *STAND PERF EV COR, 1999, SPECJVM98 DOC REL 1
   Stefanovic Darko, 1999, THESIS U MASSACHUSET
   *SUN MICR, 2006, HPROF PROF AG
   *SUN MICR, HEAP AN TOOL
   Tang Yan., 2008, USENIX ANN TECHNICAL, P307
NR 36
TC 13
Z9 15
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2010
VL 40
IS 1
BP 1
EP 22
DI 10.1002/spe.945
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 544OA
UT WOS:000273666300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Laracy, JR
AF Laracy, Joseph R.
TI Random variate generator
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE modeling and simulation; patterns; object-oriented design methods
AB As the use of computer simulation grows in a variety of science and engineering fields, the quality of random variate generators becomes increasingly important. Unfortunately, a number of standard implementations are grossly inadequate and exhibit poor statistical properties. This paper presents a software pattern For efficiently implementing an extensible, high-quality random variate generator. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 Seton Hall Univ, S Orange, NJ 07079 USA.
C3 Seton Hall University
RP Laracy, JR (corresponding author), Seton Hall Univ, Lewis Hall,400 S Orange Ave, S Orange, NJ 07079 USA.
EM laracyjo@shu.edu
CR Kircher M, 2007, IEEE SOFTWARE, V24, P28, DOI 10.1109/MS.2007.109
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P3, DOI 10.1145/272991.272995
   PARK SK, 1988, COMMUN ACM, V31, P1192, DOI 10.1145/63039.63042
NR 3
TC 0
Z9 0
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2009
VL 39
IS 1
BP 105
EP 110
DI 10.1002/spe.889
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 388RA
UT WOS:000262035700005
DA 2024-07-18
ER

PT J
AU Palopoli, L
   Clicinotta, T
   Marzario, L
   Lipari, G
AF Palopoli, L.
   Clicinotta, T.
   Marzario, L.
   Lipari, G.
TI AQuoSA-adaptive quality of service architecture
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE resource reservations; adaptive QoS control; soft real time; embedded
   systems; operating systems
ID QOS MANAGEMENT; REAL-TIME; RESOURCE-ALLOCATION
AB This paper presents an architecture for quality of service (QoS) control of time-sensitive applications in multi-programmed embedded systems. In such systems, tasks must receive appropriate timeliness guarantees from the operating system independently from one another; otherwise, the QoS experienced by the users may decrease. Moreover, fluctuations in time of the workloads make a static partitioning of the central processing unit (CPU) that is neither appropriate nor convenient, whereas an adaptive allocation based on an on-line monitoring of the application behaviour leads to an optimum design. By combining a resource reservation scheduler and a feedback-based mechanism, we allow applications to meet their QoS requirements with the minimum possible impact on CPU occupation. We implemented the framework in AQuoSA (Adaptive Quality of Service Architecture (AQuoSA). http://aquosa.sourceforge.net), a software architecture that runs on top of the Linux kernel. We provide extensive experimental validation of our results and offer an evaluation of the introduced overhead, which is perfectly sustainable in the class of addressed applications. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Clicinotta, T.; Marzario, L.; Lipari, G.] Scuola Super Sant Anna, ReTiS Lab, I-56124 Pisa, Italy.
   [Palopoli, L.] Univ Trent, DIT, I-38100 Trento, Italy.
C3 Scuola Superiore Sant'Anna; University of Trento
RP Clicinotta, T (corresponding author), Scuola Super Sant Anna, ReTiS Lab, Via Moruzzi 1, I-56124 Pisa, Italy.
EM cucinotta@sssup.it
RI Lipari, Giuseppe/E-7761-2010
OI Cucinotta, Tommaso/0000-0002-0362-0657; Lipari,
   Giuseppe/0000-0002-7544-5309
FU FRESCOR European project [FP6/2005/IST/5-034026]
FX Contract/grant sponsor: FRESCOR European project: contract/grant number:
   FP6/2005/IST/5-034026
CR Abdelwahed S., 2004, P 10 IEEE REAL TIM E
   Abeni L, 2005, REAL-TIME SYST, V29, P131, DOI 10.1007/s11241-005-6882-0
   ABENI L, 2002, P REAL TIM SYST S AU
   Abeni L., 2002, REAL TIM LIN WORKSH
   ABENI L, 1998, P IEEE REAL TIM SYST
   ABENI L, 2004, P REAL TIM APPL S RT
   ABENI L, 1999, P IEEE REAL TIM COMP
   [Anonymous], P 6 INT WORKSH QUAL
   Baruah SK, 1996, ALGORITHMICA, V15, P600, DOI 10.1007/BF01940883
   Brandt SA, 2002, REAL-TIME SYST, V22, P77, DOI 10.1023/A:1013433504150
   Cervin A, 2002, REAL-TIME SYST, V23, P25, DOI 10.1023/A:1015394302429
   CORBATO FJ, 1962, P AFIPS JOINT COMP C
   EIDE E, 2004, P 10 IEEE REAL TIM E
   Ghosh S, 2004, REAL TIM SYST SYMP P, P12, DOI 10.1109/REAL.2004.25
   Gill CD, 2005, REAL-TIME SYST, V29, P101, DOI 10.1007/s11241-005-6881-1
   Goel A, 2004, RTAS 2004: 10TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P434, DOI 10.1109/RTTAS.2004.1317290
   Harada F, 2007, IEEE T COMPUT, V56, P344, DOI 10.1109/TC.2007.39
   Jeffay K., 1999, P IEEE REAL TIM SYST
   Krishnamurthy Y., 2001, INTEGRATION QOS ENAB, P230
   Lipari G., 2000, IEEE P 12 EUR C REAL
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   LU C, 2002, SPECIAL ISSUE REAL T, V23, P85
   MARZARIO L, 2004, REAL TIM APPL S RTAS
   NAKAJIMA T, 1998, 6 INT WORKSH PAR DIS
   PALOPOLI L, 2003, HYBRID SYSTEMS COMPU
   PALOPOLI L, 2003, P IEEE 2003 C DEC CO
   PALOPOLI L, 2007, DIT07003 U TRENT DEP, P3
   Rajkumar R, 1998, REAL TIM SYST SYMP P, P296, DOI 10.1109/REAL.1998.739755
   RAJKUMAR R, 1998, KP SPIE ACM C MULT C
   REED D, 1997, NEMESIS KERNEL OVERV
   REGEHR J, 2001, P IEEE REAL TIM TECH
   Roitzsch M, 2006, REAL TIM SYST SYMP P, P271, DOI 10.1109/RTSS.2006.36
   Shankaran N, 2006, EUROMICRO, P151, DOI 10.1109/ECRTS.2006.11
   STEERE D, 1999, P 3 US OSD PUB US NE
   STOICA I, 1996, P IEEE REAL TIM SYST
   TOKUDA H, 1993, NOSSDAV 93, P114
   Wüst CC, 2004, EUROMICRO, P3, DOI 10.1109/EMRTS.2004.1310990
   Zhang R., 2002, P INT C DISTR COMP S
NR 38
TC 56
Z9 61
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2009
VL 39
IS 1
BP 1
EP 31
DI 10.1002/spe.883
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 388RA
UT WOS:000262035700001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Francese, R
   Scanniello, G
   Tortora, G
AF De Lucia, Andrea
   Francese, Rita
   Scanniello, Giuseppe
   Tortora, Genoveffa
TI Developing legacy system migration methods and tools for technology
   transfer
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE legacy systems; migration to the Web; reengineering; technology transfer
ID SOFTWARE APPLICATIONS
AB \ This paper presents the research results of in ongoing technology transfer project carried out in cooperation between the University of Salerno and a small software company. The project is aimed at developing and transferring migration technology to the industrial partner. The partner should be enabled to migrate monolithic multi-user COBOL legacy systems to a multi-tier Web-based architecture. The assessment of the legacy systems of the partner company revealed that these systems had a very low level of decompos-ability with spaghetti-like code and embedded control flow and database accesses within the user interface descriptions. For this reason, it was decided to adopt an incremental migration strategy based on the reengineering of the user interface using Web technology, on the transformation of interactive legacy programs into batch programs, and the wrapping of the legacy programs. A middleware framework links the new Web-based user interface with the Wrapped Legacy System. An Eclipse plug-in, named MELIS (migration environment for legacy information systems), was also developed to support the migration process. Both the migration strategy and the tool have been applied to two essential subsystems of the most business critical legacy system of the partner company. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [De Lucia, Andrea; Francese, Rita; Tortora, Genoveffa] Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, SA, Italy.
   [Scanniello, Giuseppe] Univ Basilicata, Dipartimento Matemat & Informat, I-85100 Potenza, Italy.
C3 University of Salerno; University of Basilicata
RP De Lucia, A (corresponding author), Univ Salerno, Dipartimento Matemat & Informat, Via Ponte Don Melillo, I-84084 Fisciano, SA, Italy.
EM adclucia@unisa.it
RI De Lucia, Andrea/AAG-6781-2020
OI Scanniello, Giuseppe/0000-0003-0024-7508; De Lucia,
   Andrea/0000-0002-4238-1425
FU METAMORPHOS (MEthods and Tools for migrAting software systeMs towards
   Web and service Oriented aRchitectures: exPerimental evaluation,
   usability, and technology transfer); MiUR (Ministero dell'Universita e
   della Ricerca) [PRIN-2006-2006098097]; TOCAI (Techologie Orientate alla
   Conoscenza per Aggregazioni di Impresa in internet) [FIRB 2005]
FX The work described ill this paper is supported by the project
   METAMORPHOS (MEthods and Tools for migrAting software systeMs towards
   Web and service Oriented aRchitectures: exPerimental evaluation,
   usability, and technology transfer), funded by MiUR (Ministero
   dell'Universita e della Ricerca) Under grant PRIN-2006-2006098097. The
   work described ill this paper is also supported by the project TOCAI
   (Techologie Orientate alla Conoscenza per Aggregazioni di Impresa in
   internet) Under grant FIRB 2005.
CR AERSANO L, 2001, P 5 EUR C SOFTW MAIN, P148
   AVERSANO L, 2003, ADV SOFTWARE MAINTEN, P151
   Bennett K. H., 1999, IEE Proceedings-Software, V146, P153, DOI 10.1049/ip-sen:19990617
   Bodhuin T, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P165, DOI 10.1109/WCRE.2003.1287247
   Bodhuin T, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P329, DOI 10.1109/WCRE.2002.1173090
   Bovenzi D, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P73, DOI 10.1109/CSMR.2003.1192412
   Brodie M., 1995, MIGRATING LEGACY SYS
   BUTLER JG, 1996, MAINFRAME CLIENT SER
   Canfora G, 1999, INT J SOFTW ENG KNOW, V9, P5, DOI 10.1142/S0218194099000036
   Canfora G, 2000, J SYST SOFTWARE, V54, P99, DOI 10.1016/S0164-1212(00)00030-3
   Canfora G, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P23
   Chiang CC, 2001, INFORM SOFTWARE TECH, V43, P497, DOI 10.1016/S0950-5849(01)00160-4
   COLOSIMO M, 2007, P 23 IEEE INT C SOFT, P365
   De Lucia A, 2001, PROC IEEE INT CONF S, P642, DOI 10.1109/ICSM.2001.972781
   Goedicke M, 2002, J SOFTW MAINT EVOL-R, V14, P1, DOI 10.1002/smr.243
   Hong ZW, 2006, INFORM SOFTWARE TECH, V48, P619, DOI 10.1016/j.infsof.2005.06.005
   *IBM, 2002, IBM WEBSPHERE SOFTW
   Lewis MA, 2006, SOIL SEDIMENT CONTAM, V15, P1, DOI 10.1080/15320380500363087
   Lin JM, 2007, SOFTWARE PRACT EXPER, V37, P417, DOI 10.1002/spe.775
   Lin JM, 2004, INFORM SOFTWARE TECH, V46, P403, DOI 10.1016/j.infsof.2003.08.003
   Litoiu M, 2004, J SOFTW MAINT EVOL-R, V16, P51, DOI 10.1002/smr.285
   MERLO E, 1995, IEEE SOFTWARE, V12, P64, DOI 10.1109/52.363164
   MOORE M, 1998, THESIS COLL COMPUTIN
   Moore MM, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P52, DOI 10.1109/WCRE.2000.891452
   Orfali Robert., 1996, The Essential Distributed Objects Survival Guide
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Pigoski ThomasM., 1997, PRACTICAL SOFTWARE M
   RAGHAVAN SA, 1989, IEEE SOFTWARE, V6, P81, DOI 10.1109/52.31655
   Rahaozar M, 2003, J SOFTW MAINT EVOL-R, V15, P325, DOI 10.1002/smr.278
   Redwine S. T.  Jr., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P189
   Rogers E. M., 1995, Diffusion of Innovation Theory, P25, DOI https://doi.org/10.1007/978-3-642-79868-92
   Serrano MA, 2002, J SYST SOFTWARE, V64, P37, DOI 10.1016/S0164-1212(02)00020-1
   Sneed HM, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P3
   SNEED HM, 1995, IEEE SOFTWARE, V12, P24, DOI 10.1109/52.363168
   Sneed HM, 2000, ANN SOFTW ENG, V9, P293, DOI 10.1023/A:1018989111417
   Sneed HM, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P59, DOI 10.1109/WSE.2003.1234009
   Sneed HM, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P189, DOI 10.1109/WCRE.2001.957823
   Sneed HM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P104, DOI 10.1109/WCRE.1996.558885
   SNEED HM, 1999, P 6 IEEE WORK C REV, P204
   SNEED HM, 1994, J SOFTWARE MAINTENAN, V6, P105
   Stroulia E., 2003, Automated Software Engineering, V10, P271, DOI 10.1023/A:1024460315173
   Visaggio G, 2000, ANN SOFTW ENG, V9, P215, DOI 10.1023/A:1018980809600
   WEIDERMAN N, 2007, IMPLICATIONS DISTRIB
   Wu B, 1997, THIRD IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS, PROCEEDINGS, P200, DOI 10.1109/ICECCS.1997.622311
   ZDUN U, 2002, P 6 EUR C SOFTW MAIN, P211
   Zhang Q, 2006, PROC IEEE INT CONF S, P428
NR 46
TC 41
Z9 44
U1 0
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2008
VL 38
IS 13
BP 1333
EP 1364
DI 10.1002/spe.870
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 364OY
UT WOS:000260346200001
OA Green Published
DA 2024-07-18
ER

PT J
AU Sendin-Raña, P
   Otero-Alonso, N
   de Miguel, VG
   González-Castaño, FJ
   Rodíguez-Hernández, PS
   Gil-Castineira, F
   Costa-Montenegro, E
AF Sendin-Rana, Pablo
   Otero-Alonso, Nicolas
   de Miguel, Vicente Goyanes
   Gonzalez-Castano, Francisco J.
   Rodiguez-Hernandez, Pedro S.
   Gil-Castineira, Felipe
   Costa-Montenegro, Enrique
TI Emulating Access Grid features at Web endpoints: a developer's view
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 6th International Conferernce on Grid and Cooperative Computing
CY AUG 16-18, 2007
CL Urumchi, PEOPLES R CHINA
SP IEEE Comp Soc, IEEE, Xin Jiang Univ, Platform
DE Access Grid; multimedia distribution systems; SMIL; streaming;
   transcoding; videoconferencing
AB This paper presents the development experience and the evaluation of a system to emulate interactive features of Access Grid virtual rooms (venues) at Web endpoints. The system includes a toolset to demultiplex Access Grid sources, transcode them to adequate formats for Internet distribution and store the resulting multimedia streams in repositories in real time. A specialized server asynchronously delivers those streams to standard Web browsers, which synchronize them and emulate typical Access Grid interactive features such as multiple windows or dynamic video selection. Web browsers can compose multiple independent streams. We call the resulting paradigm Presentations on Demand. From the point of view of software practice, the system relies on a combination of SMIL scripts, CSS and Javascript. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Sendin-Rana, Pablo; Otero-Alonso, Nicolas; de Miguel, Vicente Goyanes; Gonzalez-Castano, Francisco J.; Rodiguez-Hernandez, Pedro S.; Gil-Castineira, Felipe; Costa-Montenegro, Enrique] Univ Vigo, Dept Ingn Telemat, Vigo, Spain.
C3 Universidade de Vigo
RP González-Castaño, FJ (corresponding author), ETSI Telecomunicac, Vigo 36310, Spain.
EM javier@det.uvigo.es
RI Gil-Castiñeira, Felipe/ABE-6411-2020; González-Castaño, Francisco
   J./D-2637-2018; Costa-Montenegro, Enrique/ABE-6778-2020;
   Rodríguez-Hernández, Pedro S/E-8468-2016
OI Gil-Castiñeira, Felipe/0000-0002-5164-0855; Costa-Montenegro,
   Enrique/0000-0002-4674-1897; Rodríguez-Hernández, Pedro
   S/0000-0003-3610-6125; Gonzalez-Castano, Francisco
   Javier/0000-0001-5225-8378
CR ADAMCZYK D, 2003, P COMP HIGH EN NUCL
   *ADODB, 2008, DAT ABSTR LIB
   [Anonymous], 2002, 3261 RFC INT ENG TAS
   Beavers Jay., 2004, The Learning Experience Project: Enabling Collaborative Learning with ConferenceXP
   BULUT H, 2004, P 5 INT C INT COMP L
   CHILDERS L, 2000, P IMMERSIVE PROJECTI
   Fox G, 2004, CONCURR COMP-PRACT E, V16, P441, DOI 10.1002/cpe.823
   FOX G, 2005, P 4 INT C GRID COOP
   HAN S, 2005, P SOC PHOTO-OPT INS, V6015, P265
   NEEDHAM T, 2006, P INT S COLL TECHN S
NR 10
TC 0
Z9 0
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2008
VL 38
IS 13
BP 1393
EP 1410
DI 10.1002/spe.875
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 364OY
UT WOS:000260346200003
DA 2024-07-18
ER

PT J
AU Mahmood, S
   Lai, R
AF Mahmood, Sajad
   Lai, Richard
TI A complexity measure for UML component-based system specification
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE component-based system; component-based system specification; UML;
   complexity; software metrics
ID SOFTWARE COMPLEXITY; METRICS SUITE
AB A component-based system (CBS) is integration centric with a focus on assembling individual components to build a software system. In CBS, component source code information is usually unavailable. Each component also introduces added properties such as constraints associated with its use, interactions with other components and customizability properties. Recent research suggests that most faults are found in only a few system components. A complexity measure at a specification phase can identify these components. However, traditional complexity metrics are not adequate for a CBS as they focus mainly on either lines of code (LOC) or information based on object and class properties. There is therefore a need to develop a new technique for measuring the complexity of a CBS specification (CBSS). This paper describes a structural complexity measure for a CBSS written in Unified Modelling Language (UML) from a system analyst's point of view. A CBSS consists of individual component descriptions characterized by its syntactic, semantic and interaction properties. We identify three factors, interface, constraints and interaction, as primary contributors to the complexity of a CBSS. We also present an application of our technique to a university course registration system. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 [Mahmood, Sajad; Lai, Richard] La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
C3 La Trobe University
RP Lai, R (corresponding author), La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
EM lai@cs.latrobe.edu.au
RI Mahmood, Sajjad/B-2295-2010
OI Mahmood, Sajjad/0000-0001-5786-5118
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   BOURQUE P, 1991, J SYST SOFTWARE, V15, P159, DOI 10.1016/0164-1212(91)90053-9
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Cheesman J., 2001, UML Components A Simple Process for Specifying Component Based Software
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cho ES, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P419
   CHURCHER NI, 1995, IEEE T SOFTWARE ENG, V21, P263, DOI 10.1109/32.372153
   COTE V, 1988, J SYST SOFTWARE, V8, P121, DOI 10.1016/0164-1212(88)90005-2
   CRNKOVIC I, 2002, BUILDING COMPONENT R
   DAVIS JS, 1988, IEEE T SOFTWARE ENG, V14, P1366, DOI 10.1109/32.6179
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Gill NasibS., 2004, ACM SIGSOFT Software Engineering Notes, V29, P4
   Goseva-Popstojanova K, 2003, IEEE T SOFTWARE ENG, V29, P946, DOI 10.1109/TSE.2003.1237174
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Han J, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P110, DOI 10.1109/APSEC.1998.733601
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Huang SJ, 2003, IEEE T SOFTWARE ENG, V29, P327, DOI 10.1109/TSE.2003.1191797
   Huang SJ, 1998, SOFTWARE PRACT EXPER, V28, P1465, DOI 10.1002/(SICI)1097-024X(19981210)28:14<1465::AID-SPE187>3.0.CO;2-H
   *IFPUG, 2000, FUNCT POINT COUNT PR
   LEW KS, 1988, IEEE T SOFTWARE ENG, V14, P1645, DOI 10.1109/32.9052
   LIU Y, 2004, P 4I ANN SE REG C, P177
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Misic VB, 1998, J SYST SOFTWARE, V41, P133, DOI 10.1016/S0164-1212(97)10014-0
   NARASIMHAN VL, 2004, 1 INT WORKSH OBJ SYS
   Sedigh-Ali S, 2001, COMPUTER, V34, P44, DOI 10.1109/2.920611
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   TIAN J, 1995, IEEE T SOFTWARE ENG, V21, P641, DOI 10.1109/32.403788
   Uemura T, 2001, J SOFTW MAINT EVOL-R, V13, P223, DOI 10.1002/smr.231
   VERNER J, 1988, IEEE SOFTWARE, V5, P15, DOI 10.1109/52.17798
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
NR 30
TC 15
Z9 19
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2008
VL 38
IS 2
BP 117
EP 134
DI 10.1002/spe.769
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 268SU
UT WOS:000253600500001
DA 2024-07-18
ER

PT J
AU Cotroneo, D
   Migliaccio, A
   Russo, S
AF Cotroneo, Domenico
   Migliaccio, Armando
   Russo, Stefano
TI The Esperanto Broker: a communication platform for nomadic computing
   systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobility management; distributed object computing model; communication
   paradigms; nomadic computing
AB There is an increasing demand for middleware for nomadic computing applications. Owing to the inherent characteristics of such environments, these platforms have to address two fundamental issues: (i) device disconnections and the limitations of wireless networks may force users to experience short periods of service unavailability; and (ii) the complexity to design and develop next-generation mobile computing applications. This paper proposes the Esperanto Broker (EB), a communication platform that addresses mobility issues via an integrated approach, i.e. at data-link, network, and middleware levels. Decoupling interactions are achieved via a tuple-space underlying infrastructure. To support developers with advanced services, the EB enhances the distributed objects computing model providing the abstraction for the communication paradigms standardized by the W3C. Esperanto applications can be modeled as sets of objects that are distributed over mobile devices, which communicate via remote method invocations (RMIs). RMIs natively implement pull and push models, in both one-to-one and one-to-many multiplicity. The paper focuses on the EB design issues, essential aspects of the implementation, and performance evaluations of the implemented prototype. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Naples Federico II, Dipartimento Informat & Sistemist, I-80125 Naples, Italy.
   ITEM, Lab Nazl Informat & Telemat Multimedia, Consorzio Interuniv Nazl Informat, I-80126 Naples, Italy.
C3 University of Naples Federico II
RP Cotroneo, D (corresponding author), Univ Naples Federico II, Dipartimento Informat & Sistemist, Via Claudio 21, I-80125 Naples, Italy.
EM cotroneo@unina.it
RI Russo, Stefano/H-7723-2013
OI Russo, Stefano/0000-0002-8747-3446
CR ADWANKAR S, 2001, P 3 IEEE INT S DISTR, P17
   [Anonymous], SURVEY MIDDLEWARE PA
   [Anonymous], COMM OBJ REQ BROK AR
   Bagrodia R, 1995, IEEE PERS COMMUN, V2, P14, DOI 10.1109/98.475985
   BAKRE A, 1995, P 1 ACM C MOB COMP N, P97
   BALDONI R, 2003, LECT NOTES COMPUTER, V2584
   CAHILL V, 2001, P 3 IEEE INT C MOBL, P41
   CAMPADELLO S, 2000, P 4 INT ENT DISTR OB
   CINQUE M, 2005, ACM SIGMOBILE MOBL C, V9, P29
   CUGOLA G, 2002, ACM SIGMOBILE MOBILE, V6, P25
   Davidse K., 1998, DATIVE, V2, P143
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Gaddah A, 2004, 8TH WORLD MULTI-CONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL V, PROCEEDINGS, P493
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   Grace P., 2003, P INT S DISTR OBJ AP
   HAAHR M, 1999, P 5 ANN ACM IEEE INT
   Joseph AD, 1997, IEEE T COMPUT, V46, P337, DOI 10.1109/12.580429
   KANGASHARJU J, 2002, THESIS U HELSINKI CO
   Kleinrock L, 2000, IEEE INTERNET COMPUT, V4, P52, DOI 10.1109/4236.815852
   KLEINROCK L, 2000, IEEE COMMUNICATIONS, V38
   LILJEBERG M, 1997, P TINA 97 C GLOB CON, P59
   Mascolo C, 2002, LECT NOTES COMPUT SC, V2497, P20
   MASCOLO C, 2001, P INT C PEER TO PEER, P69
   *MICR, 2004, DCOM TECHN
   Murphy AL, 2001, INT CON DISTR COMP S, P524, DOI 10.1109/ICDSC.2001.918983
   *OMG, 2001, WIR ACC TERM MOB COR
   PIETUCH PR, 2002, P 22 IEEE INT C DIST
   RAATIKAINEN K, 1997, OMG TECHN MU HELS
   Ruggaber R., 2000, Proceeding of the Nineteenth Annual ACM Symposium on Principles of Distributed Computing, P191, DOI 10.1145/343477.343615
   Schmidt DC, 1998, COMPUT COMMUN, V21, P294, DOI 10.1016/S0140-3664(97)00165-5
   *W3C, 2004, WEB SERV DESCR LANG
   YAU S, 2003, P 6 IEEE INT S OBJ O, P14
   2004, SUN MICROSYSTEMS HOM
NR 33
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2007
VL 37
IS 10
BP 1017
EP 1046
DI 10.1002/spe.794
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 198JW
UT WOS:000248625400001
DA 2024-07-18
ER

PT J
AU Zdun, U
AF Zdun, Uwe
TI Systematic pattern selection using pattern language grammars and design
   space analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software patterns; pattern languages; pattern selection; design space
   analysis; software design
ID IMPLEMENTATION
AB Software patterns provide reusable solutions to recurring design problems in a particular context. The software architect or designer must find the relevant patterns and pattern languages that need to be considered, and select the appropriate patterns, as well as the best order to apply them. If the patterns and pattern languages are written by multiple pattern authors, it might be necessary to identify interdependencies and overlaps between these patterns and pattern languages first. Out of the possible multitude of patterns and pattern combinations that might provide a solution to a particular design problem, one fitting solution must be selected. This can only be mastered with a sufficient expertise for both the relevant patterns and the domain in which they are applied. To remedy these issues we provide an approach to support the selection of patterns based on desired quality attributes and systematic design decisions based on patterns. We propose to formalize the pattern relationships in a pattern language grammar and to annotate the grammar with effects on quality goals. In a second step, complex design decisions are analyzed further using the design spaces covered by a set of related software patterns. This approach helps to systematically find and categorize the appropriate software patterns-possibly even from different sources. As a case study of our approach, we analyze patterns from a pattern language for distributed object middleware. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Vienna Univ Technol, Inst Informat Syst, Distributed Syst Grp, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Zdun, U (corresponding author), Vienna Univ Technol, Inst Informat Syst, Distributed Syst Grp, Argentinierstr 8-184-1, A-1040 Vienna, Austria.
EM zdun@infosys.tuwien.ac.at
RI Zdun, Uwe/AFR-2161-2022
CR Abowd G. D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P319, DOI 10.1145/226241.226244
   Alexander C., 2004, NATURE ORDER
   ALEXANDER C, 2001, PATTERNLANGUAGE COM
   Alexander C., 1979, The Timeless Way of Building
   Alexander C., 1977, PATTERN LANGUAGE TOW
   [Anonymous], 1995, SCENARIO BASED DESIG
   [Anonymous], 1995, Design patterns for object-oriented software development
   [Anonymous], P EUROPLOP 2003
   AVGERIOUS P, 2005, P 10 EUR C PATT LANG
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Baum L, 2000, 4TH INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P159, DOI 10.1109/ICRE.2000.855606
   Bosch J, 1998, J OBJECT-ORIENT PROG, V11, P18
   Braga R. T., 2004, J OBJECT TECHNOLOGY, V3, P123
   Buschmann F., 1996, SYSTEM PATTERNS PATT, V1
   CHUNG L, 1999, NON FUNCTIONAL REQUI
   Coplien J., 1996, SIGS Management Briefings Series
   COPLIEN JO, 2000, LECT NOTES COMPUTER, V2177
   DEBRUIN H, 2002, P IFIP 17 WORLD COMP, P127
   Dix A.J., 1998, HUMAN COMPUTER INTER, V2nd
   DYSON P, 1996, P 1 EUR C PATT LANG
   EDEN A, 1999, P 2 NORD WORKSH SOFT
   *ETSI, 2001, TS101812 ETSI MHP SP
   Fowler M., 1997, ANAL PATTERNS
   GAMMA E, 1994, DESIGN PATTERN ELEME
   Goedicke M, 2004, SCI COMPUT PROGRAM, V53, P353, DOI 10.1016/j.scico.2003.04.006
   Goedicke M, 2002, LECT NOTES COMPUT SC, V2425, P384
   Goedicke M, 2002, J SOFTW MAINT EVOL-R, V14, P1, DOI 10.1002/smr.243
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   HENNEY K, 2005, P 10 EUR C PATT LANG
   *HILLS GROUP, 2004, PATT DEF
   HIRSCHFELD R, 2003, P 3 GERM GI WORKSH A
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   *INT STAND ISO, 1991, 8126 ISO IEC
   KANG KC, 1990, CMUSEI90TR21 SOFTW E
   KIRCHER M, 2004, PATTERN RESOURCE MAN, V3
   LEE J, 1991, HUMAN COMPUTER INTER, V6, P251
   MacLean A., 1991, Human-Computer Interaction, V6, P201, DOI 10.1207/s15327051hci0603&4_2
   Mak JKH, 2004, PROC INT CONF SOFTW, P252, DOI 10.1109/ICSE.2004.1317447
   MEHTA NR, 2003, P 9 EUR SOFTW ENG C, P347
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   NEUMANN G, 2002, P 16 EUR C OBJ OR PR, V2374, P392
   NEUMANN G, 1999, P 5 C OBJ OR TECHN S
   PORTER R, 2005, SCI COMPUTER PROGRAM, V56
   Schmidt D, 2000, PATTERNS CONCURRENT, V2
   Schmidt DC, 2003, PROC INT CONF SOFTW, P694, DOI 10.1109/ICSE.2003.1201256
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Soundarajan N, 2004, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2004.1317488
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   VOELTER M, 2004, REMOTING PATTERNS
   Volter M., 2002, SERVER COMPONENT PAT
   Zdun U., 2004, International Journal of Web Services Research, V1, P42, DOI 10.4018/jwsr.2004070103
   Zdun U, 2006, COMPUT LANG SYST STR, V32, P56, DOI 10.1016/j.cl.2005.04.001
   Zdun U, 2004, LECT NOTES COMPUT SC, V3140, P118
   Zdun U, 2003, LECT NOTES COMPUT SC, V2853, P64
   Zdun U., 2004, IEE Proceedings-Software, V151, P67, DOI 10.1049/ip-sen:20040082
   ZDUN U, 2004, P 9 EUR C PATT LANG
   ZDUN U, 2004, SIMPLE ASYNCHRONOUS
   ZDUN U, 2005, FRAG
   ZDUN U, 2005, LEELA
   ZDUN U, 2004, P 8 EUR C SOFTW MAIN, P105
   ZIEGLER J, 2004, P CHI 2004 WORKSH HU
NR 61
TC 43
Z9 45
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2007
VL 37
IS 9
BP 983
EP 1016
DI 10.1002/spe.799
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 194CN
UT WOS:000248321700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yata, S
   Oono, M
   Morita, K
   Fuketa, M
   Aoe, J
AF Yata, Susumu
   Oono, Masaki
   Morita, Kazuhiro
   Fuketa, Masao
   Aoe, Jun-ichi
TI An efficient deletion method for a minimal prefix double array
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE trie search; dictionary; information retrieval
ID SEARCH
AB A minimal prefix (MP) double array is an efficient data structure for a trie. The MP double array only requires a small amount of space and enables fast retrieval. However, the space efficiency of the MP double array is degraded by deletion. This paper presents a fast and compact adaptive deletion method for the MP double array. The presented method is implemented with C. Simulation results for English and Japanese keys show that the adaptive method is faster than the conventional method and maintains higher space efficiency. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Tokushima, Fac Engn, Dept Informat Sci & Intelligent Syst, Tokushima 7708506, Japan.
C3 Tokushima University
RP Yata, S (corresponding author), Univ Tokushima, Fac Engn, Dept Informat Sci & Intelligent Syst, 2-1 Minamijosanjima, Tokushima 7708506, Japan.
EM yata@is.tokushima-u.ac.jp
CR AHO AV, 1975, COMMUN ACM, V18, P333, DOI 10.1145/360825.360855
   AOE J, 1987, P 2 INT C SUP SANT C, P361
   AOE JI, 1989, IEEE T SOFTWARE ENG, V15, P1066, DOI 10.1109/32.31365
   FREDKIN E, 1960, COMMUN ACM, V3, P490, DOI 10.1145/367390.367400
   MORITA K, 2001, P 2001 IEEE INT C SY, P494
   Oono M, 2003, SOFTWARE PRACT EXPER, V33, P1229, DOI 10.1002/spe.545
   PETERSON JL, 1980, LECT NOTES COMPUTER, V96
NR 7
TC 7
Z9 7
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2007
VL 37
IS 5
BP 523
EP 534
DI 10.1002/spe.778
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 157FK
UT WOS:000245703800004
DA 2024-07-18
ER

PT J
AU Shaalan, KF
AF Shaalan, KF
TI Arabic GramCheck: a grammar checker for arabic
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Arabic natural language processing; grammatical checking; common Arabic
   grammar errors; grammar checkers
AB Arabic is a Semitic language that is rich in its morphology and syntax. The very numerous and complex grammar rules of the language may be confusing for the average user of a word processor. In this paper, we report our attempt at developing a grammar checker program for Modern Standard Arabic, called Arabic GramCheck. Arabic GramCheck can help the average user by checking his/her writing for certain common grammatical errors; it describes the problem for him/her and offers suggestions for improvement. The use of the Arabic grammatical checker can increase productivity and improve the quality of the text for anyone who writes Arabic. Arabic GramCheck has been successfully implemented using SICStus Prolog on an IBM PC. The current implementation covers a well-formed subset of Arabic and focuses on people trying to write in a formal style. Successful tests have been performed using a set of Arabic sentences. It is concluded that the approach is promising by observing the results as compared to the output of a commercially available Arabic grammar checker. Copyright (C) 2005 John Wiley & Sons, Ltd.
C1 BUID, Inst Informat, Dubai, U Arab Emirates.
RP Shaalan, KF (corresponding author), BUID, Inst Informat, POB 502216, Dubai, U Arab Emirates.
EM khaled.shaalan@buid.ac.ae
RI Shaalan, Khaled/E-7377-2016
OI Shaalan, Khaled/0000-0003-0823-8390
CR ABNEY S, 1996, WORKSH ROB PARS EUR
   ALLEN J, 1995, NATURAL LANGUAGE UND
   [Anonymous], 2000, P 12 NORD C COMP LIN
   [Anonymous], P STUD WORKSH 2 M N
   [Anonymous], 1992, INTRO MACHINE TRANSL
   ARNOLD DJ, 1995, EVALUATING MT SYSTEM
   Atwell E., 1987, DEALING ILL FORMED E
   BIRN J, 2000, 12 NORD C COMP LING, P28
   BUSTAMANTE F, 1996, P 1 INT WORKSH CONTR, P216
   BUSTAMANTE F, 1999, P 3 INT WORKSH CONTR
   BUSTAMANTE FR, 1996, P INT C COMP LING CO, P175
   Cachia Pierre., 1973, The Monitor: A Dictionary of Arabic Grammatical Terms
   DOMEIJ R, 1998, IPLAB146 ROYAL I TEC
   ELTATAWEY A, 2002, AL SIHA AL LUGAWIYA
   HAHNE H, 1999, WRITING TOOLS USING
   HARRIEHAUSEN B, 1991, LIT LINGUSTIC COMPUT, V6, P47
   HARTIGAN S, 1998, GRAMMAR CHECKER USEF
   HOLAN T, 1997, P 5 C APPL NAT LANG
   Jassem AliJ., 2000, Study on Second language learners of Arabic: An Error analysis Approach
   JENSEN K, 1993, NATURAL LANGUAGE PRO
   Johannessen J., 2002, P INT C COMP LING CO
   JOHNSON E, 1992, TEXT TECHNOLOGY, P3
   KHAYAT M, 1996, P 1 KFUPM WORKSH INF
   *MICR OFF, 2003, AR PROOF TOOLS OFF 2
   Mokhtar H., 2000, THESIS CAIRO U
   NYBERG EH, 1993, EVALUATION METRICS K
   Oliva K., 1997, P 5 C APPL NAT LANG
   Othman E., 2004, INT C AR LANG RES TO, P118
   Othman E., 2003, P MT SUMM 9 WORKSH M
   POVLSEN C, 1999, FINAL PROJECT REPORT
   RAFEA AA, 1993, SOFTWARE PRACT EXPER, V23, P567, DOI 10.1002/spe.4380230602
   SANCHEZLEON F, 1999, P VEXT C, P1
   Shaalan K., 2000, P 8 INT C ARTIFICIAL, P473
   Shaalan K., 1999, P 2 C LANGUAGE ENG E, P103
   Wehr H., 1980, DICT MODERN WRITTEN, V3rd
   WOODS WA, 1970, COMMUN ACM, V10, P591
NR 36
TC 24
Z9 27
U1 0
U2 6
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2005
VL 35
IS 7
BP 643
EP 665
DI 10.1002/spe.653
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 931VF
UT WOS:000229512900002
DA 2024-07-18
ER

PT J
AU Cheon, Y
   Leavens, G
   Sitaraman, M
   Edwards, S
AF Cheon, Y
   Leavens, G
   Sitaraman, M
   Edwards, S
TI Model variables: cleanly supporting abstraction in design by contract
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE assertions; model variables; runtime assertion checking; design by
   contract; Java language; JML language; specifications
ID SPECIFICATIONS; VERIFICATION; JML
AB In design by contract (DBC), assertions are typically written using program variables and query methods. The lack of separation between program code and assertions is confusing, because readers do not know what code is intended for use in the program and what code is only intended for specification purposes. This lack of separation also creates a potential runtime performance penalty, even when runtime assertion checks are disabled, due to both the increased memory footprint of the program and the execution of code maintaining that part of the program's state intended for use in specifications. To solve these problems, we present a new way of writing and checking DBC assertions without directly referring to concrete program states, using 'model', i.e. specification-only, variables and methods. The use of model variables and methods does not incur the problems mentioned above, but it also allow one to write more easily assertions that are abstract, concise, and independent of representation details, and hence more readable and maintainable. We implemented these features in the runtime assertion checker for the Java Modeling Language (JML), but the approach could also be implemented in other DBC tools. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Texas, Dept Comp Sci, El Paso, TX 79902 USA.
   Iowa State Univ, Dept Comp Sci, Ames, IA 50010 USA.
   Clemson Univ, Dept Comp Sci, Clemson, SC 29634 USA.
   Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.
C3 University of Texas System; University of Texas El Paso; Iowa State
   University; Clemson University; Virginia Polytechnic Institute & State
   University
RP Univ Texas, Dept Comp Sci, 500 W Univ Ave, El Paso, TX 79902 USA.
EM cheon@cs.utep.edu
CR [Anonymous], 1997, Object-oriented software construction
   Barnett M., 2001, Informatica, V25, P517
   Barnett M, 2003, J SYST SOFTWARE, V65, P199, DOI 10.1016/S0164-1212(02)00041-9
   BARTETZKO D, 2001, ELECT NOTES THEORETI, V55
   BORGIDA A, 1995, IEEE T SOFTWARE ENG, V21, P785, DOI 10.1109/32.469460
   Cheon Yoonsik, 2003, Ph.D. Dissertation
   Edwards SH, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P46, DOI 10.1109/ICSR.1998.685729
   Guttag JohnV., 1993, LARCH LANGUAGES TOOL
   GUTTAG JV, 1978, ACTA INFORM, V10, P27, DOI 10.1007/BF00260922
   HEGAZY WA, 1989, THESIS OHIO STATE U
   Hoare C.A.R., 1972, Structured Programming, P83
   Kramer R, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P295, DOI 10.1109/TOOLS.1998.711021
   Leavens Gary T., 1999, Behavioral Specifications of Businesses and Systems, P175
   Leavens GT, 2003, LECT NOTES COMPUT SC, V2852, P262
   Leavens GT, 1999, LECT NOTES COMPUT SC, V1709, P1087
   Leino KRM, 2002, ACM T PROGR LANG SYS, V24, P491, DOI 10.1145/570886.570888
   Leino KRM, 1998, ACM SIGPLAN NOTICES, V33, P144, DOI 10.1145/286942.286953
   Liskov B., 2001, PROGRAM DEV JAVA
   Luckham D.C., 1990, PROGRAMMING SPECIFIC
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MEYER B, 1992, EIFFEL LANGUAGE OBJE
   MITCHELL R., 2002, DESIGN CONTRACT EXAM
   Ogden WilliamF., 1994, ACM SIGSOFT Software Engineering Notes, V19, P23
   Poll E, 2001, COMPUT NETW, V36, P407, DOI 10.1016/S1389-1286(01)00163-3
   SCHOELLER B, 2003, P WORKSH FORM ASP CO, P143
   [No title captured]
NR 26
TC 40
Z9 48
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2005
VL 35
IS 6
BP 583
EP 599
DI 10.1002/spe.649
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 923JN
UT WOS:000228906300004
OA Green Published
DA 2024-07-18
ER

PT J
AU Eggert, PR
   Parker, DS
AF Eggert, PR
   Parker, DS
TI Perturbing and evaluating numerical programs without recompilation - the
   wonglediff way
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE diff; numerical instability checking; sensitivity analysis; random
   rounding; IEEE-754 floating point arithmetic; rounding modes
ID FLOATING-POINT
AB wonglediff is a program that tests the sensitivity of arbitrary program executables or processes to changes that are introduced by a process that runs in parallel. On Unix and Linux kernels, wonglediff creates a supervisor process that runs applications and, on the fly, introduces desired changes to their process state. When execution terminates, it then summarizes the resulting changes in the output files. The technique employed has a variety of uses. This paper describes an implementation of wonglediff that checks the sensitivity of programs to random changes in the floating-point rounding modes. It runs a program several times, 'wongling' it each time: randomly toggling the IEEE-754 rounding mode of the program as it executes. By comparing the resulting output, one gets a poor man's numerical stability analysis for the program. Although the analysis does not give any kind of guarantee about a program's stability, it can reveal genuine instability, and it does serve as a particularly useful and revealing idiot light. In our implementation, differences among the output files from the program's multiple runs are summarized in a report. This report is in fact an HTML version of the output file, with inline mark-up summarizing individual differences among the multiple instances. When viewed with a browser, the differences can be highlighted or rendered in many different ways. Copyright (c) 2004 John Wiley & Sons, Ltd.
C1 Univ Calif Los Angeles, Dept Comp Sci, Los Angeles, CA 90095 USA.
C3 University of California System; University of California Los Angeles
RP Univ Calif Los Angeles, Dept Comp Sci, Los Angeles, CA 90095 USA.
EM stott@cs.ucla.edu
CR [Anonymous], 1996, Accuracy and Stability of Numerical Algorithms
   [Anonymous], 1976, 41 BELL LAB
   [Anonymous], 1994, PROJECTS SCI COMPUTA
   [Anonymous], 1985, 7541985 ANSIIEEE
   [Anonymous], 1987, SIGPLAN Notices, V22, P9
   BARNETT VD, 1962, J R STAT SOC SER A-G, V125, P642, DOI 10.2307/2982636
   CHAWATHE SS, 1996, P 1996 ACM SIGMOD SI, V25, P493
   EGGERT PR, 2002, GNU DIFF VERSION 2 8
   GOLDBERG D, 1991, COMPUT SURV, V23, P5, DOI 10.1145/103162.103163
   Gusfield Dan, 1997, Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology, DOI DOI 10.1017/CBO9780511574931
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   KAHAN W, 1996, UC BERK STAT C 28 FE
   Kahan W., 1996, Lect. Not. Status IEEE 754 (94720-1776), V754, P94720
   Neuwirth C. M., 1992, CSCW '92. Sharing Perspectives. Proceedings of the Conference on Computer-Supported Cooperative Work, P147, DOI 10.1145/143457.143473
   Parker DS, 2000, COMPUT SCI ENG, V2, P58, DOI 10.1109/5992.852391
   Parker DS, 1997, Monte Carlo arithmetic: exploiting randomness in floating-point arithmetic
   PIERCE BA, 1996, THESIS UCLA
   WILKINSON JH, 1971, SIAM REV, V13, P548, DOI 10.1137/1013095
   Yoshida A., 1997, Transactions of the Information Processing Society of Japan, V38, P1163
NR 19
TC 3
Z9 6
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2005
VL 35
IS 4
BP 313
EP 322
DI 10.1002/spe.637
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 911UA
UT WOS:000228029500001
DA 2024-07-18
ER

PT J
AU Krissinel, EB
   Henrick, K
AF Krissinel, EB
   Henrick, K
TI Common subgraph isomorphism detection by backtracking search
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE common subgraphs; backtracking algorithm
ID ALGORITHM; IDENTIFICATION; REPRESENTATION; RETRIEVAL
AB Graph theory offers a convenient and highly attractive approach to various tasks of pattern recognition. Provided there is a graph representation of the object in question (e.g. a chemical structure or protein fold), the recognition procedure is reduced to the problem of common subgraph isomorphism (CSI). Complexity of this problem shows combinatorial dependence on the size of input graphs, which in many practical cases makes the approach computationally intractable. Among the optimal algorithms for CSI, the leading place in practice belongs to algorithms based on maximal clique detection in the association graph. Backtracking algorithms for CSI, first developed two decades ago, are rarely used. We propose an improved backtracking algorithm for CSI, which differs from its predecessors by better search strategy and is therefore more efficient. We found that the new algorithm outperforms the traditional maximal clique approach by orders of magnitude in computational time. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Europena Bioinformat Inst, Cambridge CB10 1SD, England.
RP Europena Bioinformat Inst, Genome Campus, Cambridge CB10 1SD, England.
EM keb@ebi.ac.uk
CR Arita M., 2000, Journal of Japanese Society for Artificial Intelligence, V15, P703
   BAILEY S, 1994, ACTA CRYSTALLOGR D, V50, P760, DOI 10.1107/s0907444994003112
   Berman HM, 2000, NUCLEIC ACIDS RES, V28, P235, DOI 10.1093/nar/28.1.235
   Boutselakis H, 2003, NUCLEIC ACIDS RES, V31, P458, DOI 10.1093/nar/gkg065
   BRON C, 1973, COMMUN ACM, V16, P575, DOI 10.1145/362342.362367
   Bruno IJ, 1997, CARBOHYD RES, V304, P61, DOI 10.1016/S0008-6215(97)00196-1
   BUNKE H, 2002, LECT NOTES COMPUTER, V2396, P123, DOI DOI 10.1007/3-540-70659-3_12
   BUNKE H, 2001, LNCS, V2059, P11
   CHEN LG, 1994, J CHEM INF COMP SCI, V34, P934, DOI 10.1021/ci00020a030
   CONE MM, 1977, J AM CHEM SOC, V99, P7668, DOI 10.1021/ja00465a041
   Edgar SJ, 2000, J MOL GRAPH MODEL, V18, P343, DOI 10.1016/S1093-3263(00)00061-9
   Gardiner EJ, 2000, J CHEM INF COMP SCI, V40, P273, DOI 10.1021/ci990262o
   Gifford E., 1996, NETW SCI, V2, P1
   GRINDLEY HM, 1993, J MOL BIOL, V229, P707, DOI 10.1006/jmbi.1993.1074
   HORAUD R, 1989, IEEE T PATTERN ANAL, V11, P1168, DOI 10.1109/34.42855
   KUHL FS, 1984, J COMPUT CHEM, V5, P24, DOI 10.1002/jcc.540050105
   Levi G., 1973, Calcolo, V9, P341, DOI DOI 10.1007/BF02575586
   MCGREGOR JJ, 1981, J CHEM INF COMP SCI, V21, P137, DOI 10.1021/ci00031a005
   MCGREGOR JJ, 1982, SOFTWARE PRACT EXPER, V12, P23, DOI 10.1002/spe.4380120103
   Messmer BT, 1998, INT J PATTERN RECOGN, V12, P721, DOI 10.1142/S0218001498000415
   Messmer BT, 1998, IEEE T PATTERN ANAL, V20, P493, DOI 10.1109/34.682179
   Messmer BT, 2000, IEEE T KNOWL DATA EN, V12, P307, DOI 10.1109/69.842269
   MITCHELL EM, 1990, J MOL BIOL, V212, P151, DOI 10.1016/0022-2836(90)90312-A
   Pelillo M, 1999, IEEE T PATTERN ANAL, V21, P1105, DOI 10.1109/34.809105
   Pietro Cordella Luigi, 2001, 3 IAPR TC15 WORKSH G, P149, DOI [10.1016/S0167-8655(02)00248-9, DOI 10.1016/S0167-8655(02)00248-9]
   Pla F, 1997, COMPUT VIS IMAGE UND, V66, P271, DOI 10.1006/cviu.1996.0512
   Potterton E, 2002, ACTA CRYSTALLOGR D, V58, P1955, DOI 10.1107/S0907444902015391
   Raymond JW, 2002, J COMPUT AID MOL DES, V16, P521, DOI 10.1023/A:1021271615909
   Raymond JW, 2002, J COMPUT AID MOL DES, V16, P59, DOI 10.1023/A:1016387816342
   Rouvray D.H., 1979, APPL GRAPH THEORY, P177
   Shearer K, 2001, PATTERN RECOGN, V34, P1075, DOI 10.1016/S0031-3203(00)00048-0
   Thorner DA, 1997, J COMPUT AID MOL DES, V11, P163, DOI 10.1023/A:1008034527445
   ULLMANN JR, 1976, J ACM, V23, P31, DOI 10.1145/321921.321925
   YANG B, 1989, IMAGE VISION COMPUT, V7, P135, DOI 10.1016/0262-8856(89)90008-5
NR 34
TC 67
Z9 77
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2004
VL 34
IS 6
BP 591
EP 607
DI 10.1002/spe.588
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 817WC
UT WOS:000221206600004
DA 2024-07-18
ER

PT J
AU Lu, EJL
   Wu, CC
AF Lu, EJL
   Wu, CC
TI A ReScUE XML/EDI model
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE EDI; XML/EDI; electronic commerce; metadata
ID INFORMATION-SYSTEMS; EDI
AB Since electronic data interchange (EDI) is one of the most important components in electronic commerce and since Extensible Markup Language (XML) provides Internet developers with a powerful vehicle for exchanging messages, XML/EDI has received much attention from almost all well-known international enterprises and is believed to be the next generation EDI. However, since XML allows developers to design their own elements and attributes, it is almost certain businesses will receive XML documents with unknown elements. Generally, human intervention is required to solve the problem. Therefore, it is indispensable to design an efficient scheme to resolve the unknown elements. In this paper, we propose a ReScUE XML/EDI model such that transformation templates will be generated automatically for documents with unknown elements, and the documents will be converted into expected format. This model increases the flexibility of XML/EDI systems and reduces human intervention. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Chaoyang Univ Technol, Dept Informat Management, Wufeng 413, Tauchung County, Taiwan.
C3 Chaoyang University of Technology
EM jlu@mail.cyut.edu.tw
CR Adam N, 1996, ACM COMPUT SURV, V28, P818, DOI 10.1145/242223.246871
   Adam NR, 1998, P ANN HICSS, P354, DOI 10.1109/HICSS.1998.649230
   Bourret R, 2000, WECWIS 2000: SECOND INTERNATIONAL WORKSHOP ON ADVANCED ISSUES OF E-COMMERCE AND WEB-BASED INFORMATION SYSTEMS, PROCEEDING, P134, DOI 10.1109/WECWIS.2000.853868
   DOHENY S, INTRO EDI
   DUBRAY JJ, 2000, WHITE PAPER ENHANCED
   FELLNER KJ, 1999, 3 INT ENT DISTR OBJ, P164
   Ferber J, 1999, Multi-agent systems: An introduction to distributed artificial intelligence, V1
   FU S, 1999, P 19 IEEE INT C DIST, P53
   Goldfarb C., 1998, The XML Handbook
   GREGORY AT, 2000, GRAPH COMM ASS XML C
   Hernández MA, 2001, SIGMOD RECORD, V30, P607
   Iacovou CL, 1995, MIS QUART, V19, P465, DOI 10.2307/249629
   Kalakota R., 1996, FRONTIERS ELECT COMM
   KOTOK A, 1999, WHITE PAPER GLOBAL X
   LABROU Y, 1997, PROPOSAL NEW KQML SE
   LEE MR, 2000, 2 INT WORKSH ADV ISS, P41
   LEHMANN F, 1996, ELECT COMMERCE CURRE, P27
   Lu EJL, 2001, J SYST SOFTWARE, V56, P1, DOI 10.1016/S0164-1212(00)00081-9
   LU EJL, 2000, J CHAOYANG U TECHNOL, V5, P201
   LU EJL, 2001, J SYST SOFTWARE, V58, P269
   LU EJL, 2001, CYUTIMTR2001014 DEP
   MELTZER B, 1998, SIGMOD REC, V27, P21
   OGBUJI U, 1999, SUN WORLD        FEB
   RAWLINS MC, 1998, J ELECT COMMERCE
   Saleh K, 1999, J SYST SOFTWARE, V47, P125, DOI 10.1016/S0164-1212(99)00032-1
   SCIORE E, 1994, ACM T DATABASE SYST, V19, P254, DOI 10.1145/176567.176570
   Shanmugasundaram J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P302
   SPRINKLE J, 2000, IEEE INT C, V1, P454
   STEEL K, 1994, ELECT MARKETS, P9
   STEEL K, 1996, JTC1SC30 INT STAND O
   STEEL K, 1996, ELECT COMMERCE CURRE, P13
   *TMWG, 1998, SETT UN REP XML EDI
   Tuunainen VK, 1998, INFORM MANAGE, V34, P361, DOI 10.1016/S0378-7206(98)00070-6
   WEBBER D, 1998, ELECTRON MARK, V8, P38
NR 34
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2004
VL 34
IS 3
BP 315
EP 338
DI 10.1002/spe.566
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 800DQ
UT WOS:000220009500005
DA 2024-07-18
ER

PT J
AU Arlitt, M
   Williamson, C
AF Arlitt, M
   Williamson, C
TI Understanding Web server configuration issues
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web servers; Web performance; benchmarking; validation; performance
   methodology
AB This paper proposes a methodological approach to the evaluation of Web server performance in a simple local area network test environment. The paper examines how different system and application configuration parameters can, over a range of workloads, impact the performance of a Web server. Our approach relies on relatively fine-grain reporting of performance data for a broad set of system-level metrics. Graphical visualization of these performance indices helps to identify the primary system bottleneck in each configuration studied.
   The Apache Web server is used as a case study to demonstrate the methodology. Our experiments quantify the performance implications of several configuration decisions common to any Web server implementation, and also serve to illustrate several performance anomalies specific to the Apache Web server (if misconfigured). Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Univ Calgary, Dept Comp Sci, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM arlitt@cpsc.ucalgary.ca
CR ABBOTT M, 2003, MAKING APACHE 10 TIM
   [Anonymous], 1998, HTTPERF TOOL MEASURI, DOI DOI 10.1145/306225.306235
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   ARON M, 1999, TR99335 RIC U
   Balakrishnan H, 1998, IEEE INFOCOM SER, P252, DOI 10.1109/INFCOM.1998.659661
   Bansal N., 2001, SIGMETRICSPERFORMANC, P279
   Barford P, 2001, IMW 2001: PROCEEDINGS OF THE FIRST ACM SIGCOMM INTERNET MEASUREMENT WORKSHOP, P69
   BARFORD P, 1999, ACM PERFORMANCE EVAL, V27, P35
   FIELDING R, 1999, 2616 RFC HTTP WORK G
   GAUDET D, 2003, APACHE PERFORMANCE N
   GODARD S, 2003, SYSTAT
   *HEWL PACK CO INF, 2003, NETPERF NETW PERF BE
   Hu JC, 1998, IEEE INFOCOM SER, P1222, DOI 10.1109/INFCOM.1998.662936
   HU Y, 1997, 10970001 U RHOD ISL
   Nahum E, 2002, IEEE ACM T NETWORK, V10, P2, DOI 10.1109/90.986497
   NAHUM E, 2001, P ACM SIGMETRICS C C, P257
   NIELSEN M, 2003, USE RAMDISK LINUX
   Pai VS, 1999, PROCEEDINGS OF THE 1999 USENIX ANNUAL TECHNICAL CONFERENCE, P199
   *REDHAT, 2003, REDHAT LIN 8 0 OFF R
   *REDHAT, 2003, TUX WEB SERV REDHAT
   ROUSSKOV A, 2003, SOFTWARE PRACTICE EX
   WILLIAMSON C, 2002, P IFIP PERF 2002 ROM, P111
   2003, APACHE HTTP SERVER P
NR 23
TC 5
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2004
VL 34
IS 2
BP 163
EP 186
DI 10.1002/spe.575
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 770XQ
UT WOS:000188757000004
DA 2024-07-18
ER

PT J
AU Fetterly, D
   Manasse, M
   Najork, M
   Wiener, JL
AF Fetterly, D
   Manasse, M
   Najork, M
   Wiener, JL
TI A large-scale study of the evolution of Web pages
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web characterization; Web evolution; Web pages; rate of change; degree
   of change
AB How fast does the Web change? Does most of the content remain unchanged once it has been authored, or are the documents continuously updated? Do pages change a little or a lot? Is the extent of change correlated to any other property of the page? All of these questions are of interest to those who mine the Web, including all the popular search engines, but few studies have been performed to date to answer them.
   One notable exception is a study by Cho and Garcia-Molina, who crawled a set of 720000 pages on a daily basis over 4 months, and counted pages as having changed if their MD5 checksum changed. They found that 40% of all Web pages in their set changed within a week, and 23% of those pages that fell into the .com domain changed daily.
   This paper expands on Cho and Garcia-Molina's study, both in terms of coverage and in terms of sensitivity to change. We crawled a set of 150836209 HTML pages once every week, over a span of 11 weeks. For each page, we recorded a checksum of the page, and a feature vector of the words on the page, plus various other data such as the page length, the HTTP status code, etc. Moreover, we pseudo-randomly selected 0.1% of all of our URLs, and saved the full text of each download of the corresponding pages.
   After completion of the crawl, we analyzed the degree of change of each page, and investigated which factors are correlated with change intensity. We found that the average degree of change varies widely across top-level domains, and that larger pages change more often and more severely than smaller ones.
   This paper describes the crawl and the data transformations we performed on the logs, and presents some statistical observations on the degree of change of different classes of pages. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Microsoft Res, Mountain View, CA 94043 USA.
   Hewlett Packard Labs, Mountain View, CA 94043 USA.
C3 Microsoft; Hewlett-Packard
RP Microsoft Res, 1065 La Ave, Mountain View, CA 94043 USA.
EM fetterly@microsoft.com
OI Najork, Marc/0000-0003-1423-0854
CR [Anonymous], 2003, WWW, DOI DOI 10.1145/775152.775246
   [Anonymous], 173 SRC COMP SYST RE
   Bharat K, 1999, COMPUT NETW, V31, P1579, DOI 10.1016/S1389-1286(99)00021-3
   BREWINGTON B, 2000, P 9 INT WORLD WID WE, P257
   Broder A. Z., 1993, PROC SEQUENCES 2 MET, P143
   Broder Andrei Z., 1997, P 6 INT WORLD WID WE, p1157 , DOI [10.1016/S0169-7552(97)00031-7, DOI 10.1016/S0169-7552(97)00031-7]
   CHO J, 2000, P 26 INT C VER LARG, P200
   Douglis F, 1997, PROCEEDINGS OF THE USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS, P147
   Najork M., 2001, P 10 INT C WORLD WID, P114
   PAGE L, 1998, 199966 STANF U DAT G
   RABIN MO, 1981, TR1581 HARV U CTR RE
   Sun QX, 2002, P IEEE S SECUR PRIV, P19, DOI 10.1109/SECPRI.2002.1004359
   2003, GOOGLE INFORMATION W
NR 13
TC 63
Z9 74
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2004
VL 34
IS 2
BP 213
EP U3
DI 10.1002/spe.577
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 770XQ
UT WOS:000188757000006
OA Bronze
DA 2024-07-18
ER

PT J
AU Xu, BW
   Zhou, YM
AF Xu, BW
   Zhou, YM
TI More comments on 'A cohesion measure for object-oriented classes' by
   Heung-Seok!Chae, Yong-Rae!Kwon and Doo-Hwan!Bae (<i>Softw</i>.
   <i>Pract</i>. <i>Exper</i>. 2000; 30:1405-1431)
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE class; object-orientation; cohesion; metric; interaction patterns
AB Chae et al. believe that the improved CBMC measures class cohesion from the viewpoint of the usage criteria of instance variables and that it cannot allow meaningful interpretations about classes. This paper exemplifies that it characterizes the interaction patterns better than the original one does and that it could also be used as a guideline for quality evaluation so as to enable the restructuring of poorly designed classes. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Southeast Univ, Dept Comp Sci & Engn, Nanjing 210096, Peoples R China.
C3 Southeast University - China
RP Southeast Univ, Dept Comp Sci & Engn, Nanjing 210096, Peoples R China.
EM bwxu@seu.edu.cn
RI Xu, Baowen/IXW-4882-2023
OI Xu, Baowen/0000-0001-7743-1296
CR Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Chae HS, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P158, DOI 10.1109/METRIC.1998.731241
   Chae HS, 2001, SOFTWARE PRACT EXPER, V31, P1389, DOI 10.1002/spe.414
   CHAE HS, 1996, P AS PAC SOFTW ENG C, P76
   Xu BW, 2001, SOFTWARE PRACT EXPER, V31, P1381, DOI 10.1002/spe.413
NR 5
TC 10
Z9 11
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2003
VL 33
IS 6
BP 583
EP 588
DI 10.1002/spe.505
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 675MH
UT WOS:000182698700005
DA 2024-07-18
ER

PT J
AU Chen, JY
   Gao, ML
   Guo, XY
   Zhai, WZ
   Li, QL
   Jeon, G
AF Chen, Jinyong
   Gao, Mingliang
   Guo, Xiangyu
   Zhai, Wenzhe
   Li, Qilei
   Jeon, Gwanggil
TI Object counting in remote sensing via selective spatial-frequency
   pyramid network
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE attention mechanism; background clutter; edge computing; object
   counting; remote sensing; scale variation
ID SCALE
AB The integration of remote sensing object counting in the Mobile Edge Computing (MEC) environment is of crucial significance and practical value. However, the presence of significant background interference in remote sensing images poses a challenge to accurate object counting, as the results are easily affected by background noise. Additionally, scale variation within remote sensing images presents a further difficulty, as traditional counting methods face challenges in adapting to objects of different scales. To address these challenges, we propose a selective spatial-frequency pyramid network (SSFPNet). Specifically, the SSFPNet consists of two core modules, namely the pyramid attention (PA) module and the hybrid feature pyramid (HFP) module. The PA module accurately extracts target regions and eliminates background interference by operating on four parallel branches. This enables more precise object counting. The HFP module is introduced to fuse spatial and frequency domain information, leveraging scale information from different domains for object counting, so as to improve the accuracy and robustness of counting. Experimental results on RSOC, CARPK, and PUCPR+ benchmark datasets demonstrate that the SSFPNet achieves state-of-the-art performance in terms of accuracy and robustness.
C1 [Chen, Jinyong; Gao, Mingliang; Guo, Xiangyu; Zhai, Wenzhe] Shandong Univ Technol, Sch Elect & Elect Engn, Zibo, Peoples R China.
   [Li, Qilei] Queen Mary Univ London, Sch Elect Engn & Comp Sci, London, England.
   [Jeon, Gwanggil] Incheon Natl Univ, Dept Embedded Syst Engn, Incheon, South Korea.
C3 Shandong University of Technology; University of London; Queen Mary
   University London; Incheon National University
RP Gao, ML (corresponding author), Shandong Univ Technol, Sch Elect & Elect Engn, Zibo, Peoples R China.; Jeon, G (corresponding author), Incheon Natl Univ, Dept Embedded Syst Engn, Incheon, South Korea.
EM mlgao@sdut.edu.cn; gjeon@inu.ac.kr
RI Chen, Jinyong/JWP-5406-2024; Zhai, Wenzhe/KEE-6745-2024
OI Zhai, Wenzhe/0000-0003-0996-6832; Chen, Jinyong/0009-0003-9807-2458;
   Guo, Xiangyu/0000-0001-9405-3792
CR Aghazadeh R, 2023, SOFTWARE PRACT EXPER, V53, P811, DOI 10.1002/spe.3033
   Boski M, 2017, 2017 10TH INTERNATIONAL WORKSHOP ON MULTIDIMENSIONAL (ND) SYSTEMS (NDS)
   Candal-Ventureira D, 2023, SOFTWARE PRACT EXPER, V53, P579, DOI 10.1002/spe.3161
   Cao XK, 2018, LECT NOTES COMPUT SC, V11209, P757, DOI 10.1007/978-3-030-01228-1_45
   Chan AB, 2009, IEEE I CONF COMP VIS, P545, DOI 10.1109/ICCV.2009.5459191
   Chen XY, 2019, IEEE WINT CONF APPL, P1941, DOI 10.1109/WACV.2019.00211
   Chen ZY, 2022, INT J APPL EARTH OBS, V112, DOI 10.1016/j.jag.2022.102833
   Cholakkal H, 2019, PROC CVPR IEEE, P12389, DOI 10.1109/CVPR.2019.01268
   Dijkstra K, 2021, NEUROCOMPUTING, V423, P490, DOI 10.1016/j.neucom.2020.10.075
   Dollár P, 2012, IEEE T PATTERN ANAL, V34, P743, DOI 10.1109/TPAMI.2011.155
   Dinh DL, 2021, J ADV TRANSPORT, V2021, DOI 10.1155/2021/5551976
   Ehrlich M, 2019, IEEE I CONF COMP VIS, P3483, DOI 10.1109/ICCV.2019.00358
   Gao GS, 2020, Arxiv, DOI [arXiv:2003.12783, DOI 10.48550/ARXIV.2003.12783]
   Gao GS, 2022, IEEE T GEOSCI REMOTE, V60, DOI 10.1109/TGRS.2022.3153946
   Gao GS, 2021, IEEE T GEOSCI REMOTE, V59, P3642, DOI 10.1109/TGRS.2020.3020555
   Gao GS, 2020, INT CONF ACOUST SPEE, P4137, DOI [10.1109/ICASSP40776.2020.9053690, 10.1109/icassp40776.2020.9053690]
   Gao JY, 2022, REMOTE SENS-BASEL, V14, DOI 10.3390/rs14164026
   Gao JY, 2019, NEUROCOMPUTING, V363, P1, DOI 10.1016/j.neucom.2019.08.018
   Gao ML, 2024, CLUSTER COMPUT, V27, P859, DOI 10.1007/s10586-023-03987-y
   Girshick R, 2015, IEEE I CONF COMP VIS, P1440, DOI 10.1109/ICCV.2015.169
   Guo X., 2023, Futur Gener Comput Syst
   Guo X., 2022, Multimed Tools Appl
   Guo XY, 2023, MOBILE NETW APPL, V28, P359, DOI 10.1007/s11036-023-02090-1
   Guo XY, 2022, REMOTE SENS-BASEL, V14, DOI 10.3390/rs14246363
   Guo XY, 2022, BIG DATA-US, V10, P453, DOI 10.1089/big.2022.0039
   Hsieh MR, 2017, IEEE I CONF COMP VIS, P4165, DOI 10.1109/ICCV.2017.446
   Idrees H, 2013, PROC CVPR IEEE, P2547, DOI 10.1109/CVPR.2013.329
   Jiang XH, 2020, PROC CVPR IEEE, P4705, DOI 10.1109/CVPR42600.2020.00476
   Kilic E, 2021, J AMB INTEL HUM COMP, DOI 10.1007/s12652-021-03377-5
   Li WJ, 2017, REMOTE SENS-BASEL, V9, DOI 10.3390/rs9010022
   Li YH, 2018, PROC CVPR IEEE, P1091, DOI 10.1109/CVPR.2018.00120
   Lian Z., Softw Pract Exp
   Lin TY, 2020, IEEE T PATTERN ANAL, V42, P318, DOI 10.1109/TPAMI.2018.2858826
   Liu W, 2016, LECT NOTES COMPUT SC, V9905, P21, DOI 10.1007/978-3-319-46448-0_2
   Liu WZ, 2019, PROC CVPR IEEE, P5094, DOI 10.1109/CVPR.2019.00524
   Loh D, 2021, COMPUT MED IMAG GRAP, V88, DOI 10.1016/j.compmedimag.2020.101845
   Ma ZH, 2019, IEEE I CONF COMP VIS, P6141, DOI 10.1109/ICCV.2019.00624
   Mao YY, 2017, IEEE COMMUN SURV TUT, V19, P2322, DOI 10.1109/COMST.2017.2745201
   Mundhenk TN., 2016, Proceedings of the European Conference on Computer Vision (ECCV)
   Qin ZQ, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P763, DOI 10.1109/ICCV48922.2021.00082
   Rathore MM, 2016, COMPUT NETW, V101, P63, DOI 10.1016/j.comnet.2015.12.023
   Redmon J, 2016, PROC CVPR IEEE, P779, DOI 10.1109/CVPR.2016.91
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Rong LZ, 2021, IEEE WINT CONF APPL, P3674, DOI 10.1109/WACV48630.2021.00372
   Shu Weibo, 2022, IEEECVF C COMPUT VIS, P19618
   Sindagi VA, 2017, 2017 14TH IEEE INTERNATIONAL CONFERENCE ON ADVANCED VIDEO AND SIGNAL BASED SURVEILLANCE (AVSS)
   Stahl T, 2019, IEEE T IMAGE PROCESS, V28, P1035, DOI 10.1109/TIP.2018.2875353
   Pham VQ, 2015, IEEE I CONF COMP VIS, P3253, DOI 10.1109/ICCV.2015.372
   Wang Q, 2019, PROC CVPR IEEE, P8190, DOI 10.1109/CVPR.2019.00839
   Xu JY, 2023, Arxiv, DOI arXiv:2307.07677
   Xu K, 2020, PROC CVPR IEEE, P1737, DOI 10.1109/CVPR42600.2020.00181
   Yu X., 2022, IEEE Transactions on Intelligent Transportation Systems
   Zhai W., 2021, 2021 China Automation Congress (CAC), P4048
   Zhai W., 2023, IEEE Internet Things J
   Zhai WZ, 2023, APPL INTELL, V53, P19199, DOI 10.1007/s10489-023-04499-3
   Zhai WZ, 2023, CLUSTER COMPUT, V26, P1099, DOI 10.1007/s10586-022-03749-2
   Zhai WZ, 2023, MULTIMEDIA SYST, V29, P3027, DOI 10.1007/s00530-021-00877-4
   Zhang YY, 2016, PROC CVPR IEEE, P589, DOI 10.1109/CVPR.2016.70
   Zhu L., 2019, arXiv, DOI DOI 10.48550/ARXIV.1902.01115
NR 59
TC 1
Z9 1
U1 5
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 NOV 21
PY 2023
DI 10.1002/spe.3287
EA NOV 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y8XD3
UT WOS:001108027700001
DA 2024-07-18
ER

PT J
AU Munshi, M
   Gupta, R
   Jadav, NK
   Polkowski, Z
   Tanwar, S
   Alqahtani, F
   Said, W
AF Munshi, Manushi
   Gupta, Rajesh
   Jadav, Nilesh Kumar
   Polkowski, Zdzislaw
   Tanwar, Sudeep
   Alqahtani, Fayez
   Said, Wael
TI Quantum machine learning-based framework to detect heart failures in
   Healthcare 4.0
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Healthcare 4.0; heart failure; quantum computing; quantum machine
   learning; quantum support vector classifiers; variational quantum
   classifier
AB Quantum machine learning (QML) is an emerging field that combines the power of quantum computing with machine learning (ML) techniques to solve complex problems. In recent years, QML algorithms have shown tremendous potential in various applications such as image recognition, natural language processing, health care, finance, and drug discovery. QML algorithms aim to reduce computation costs and solve complex problems beyond the scope of classical machine learning algorithms. In this article, we study the performance of two QML algorithms, that is, quantum support vector classifiers (QSVC) and variational quantum classifiers (VQC), for chronic heart disease prediction in Healthcare 4.0. The performance of the two classifiers is assessed using different evaluation metrics like accuracy, precision, recall, and F1 score. The authors concluded the superior performance of QSVC over VQC with an accuracy of 82%.
C1 [Munshi, Manushi; Gupta, Rajesh; Jadav, Nilesh Kumar; Tanwar, Sudeep] Nirma Univ, Inst Technol, Dept Comp Sci & Engn, Ahmadabad, Gujarat, India.
   [Polkowski, Zdzislaw] Karkonosze Univ Appl Sci Jelen Gora, Dept Humanities & Social Sci, Jelenia Gora, Poland.
   [Alqahtani, Fayez] King Saud Univ, Coll Comp & Informat Sci, Software Engn Dept, Riyadh, Saudi Arabia.
   [Said, Wael] Zagazig Univ, Fac Comp & Informat, Comp Sci Dept, Zagazig, Egypt.
   [Gupta, Rajesh; Tanwar, Sudeep] Nirma Univ, Inst Technol, Dept Comp Sci & Engn, Ahmadabad 382481, Gujarat, India.
C3 Nirma University; King Saud University; Egyptian Knowledge Bank (EKB);
   Zagazig University; Nirma University
RP Gupta, R; Tanwar, S (corresponding author), Nirma Univ, Inst Technol, Dept Comp Sci & Engn, Ahmadabad 382481, Gujarat, India.
EM rajesh.gupta@nirmauni.ac.in; sudeep.tanwar@nirmauni.ac.in
RI Jadav, Nilesh/AAC-9758-2021; Tanwar, Sudeep/AAI-6709-2020; Said,
   wael/HZK-3491-2023; Gupta, Dr. Rajesh/AAC-8353-2020
OI Jadav, Nilesh/0000-0002-0717-8907; Tanwar, Sudeep/0000-0002-1776-4651;
   Gupta, Dr. Rajesh/0000-0003-3298-4238
FU King Saud University [RSP2023R509]
FX King Saud University, Grant/Award Number: RSP2023R509
CR Ahalya RK, 2023, J THERM BIOL, V111, DOI 10.1016/j.jtherbio.2022.103404
   [Anonymous], QISK
   [Anonymous], Dataset
   [Anonymous], Google Colab
   [Anonymous], Kaggle
   [Anonymous], IBM
   [Anonymous], PIM DIAB DAT
   Avramouli M., 2022, PCI 2021 25 PAN HELL, P397
   Ciliberto C, 2018, P ROY SOC A-MATH PHY, V474, DOI 10.1098/rspa.2017.0551
   Ferri C, 2009, PATTERN RECOGN LETT, V30, P27, DOI 10.1016/j.patrec.2008.08.010
   Gill SS, 2022, SOFTWARE PRACT EXPER, V52, P66, DOI 10.1002/spe.3039
   Hammad D., 2017, USING DATA MINING TE
   Hancco-Quispe J., 2022, ARXIV
   Hoque Md Rakibul, 2020, ICCDA 2020: Proceedings of the 2020 4th International Conference on Compute and Data Analysis, P97, DOI 10.1145/3388142.3388174
   Inamdar AA, 2016, J CLIN MED, V5, DOI 10.3390/jcm5070062
   Infante T, 2017, AM J TRANSL RES, V9, P3148
   Jolliffe I.T., 1986, Principal component analysis, DOI DOI 10.1016/0169-7439(87)80084-9
   Jui T., 2021, NEURIPS 2021 WORKSH
   Kamaraj K., 2016, INT J RES APPL SCI E, V4, P60
   Li WK, 2022, SCI CHINA PHYS MECH, V65, DOI 10.1007/s11433-021-1793-6
   Loresco P. J. M., 2018, Journal of Telecommunication, Electronic and Computer Engineering (JTEC), V10, P15
   Maheshwari D, 2022, IEEE ACCESS, V10, P80463, DOI 10.1109/ACCESS.2022.3195044
   Martín-Guerrero JD, 2022, NEUROCOMPUTING, V470, P457, DOI 10.1016/j.neucom.2021.02.102
   Mishra N., 2019, QUANTUM MACHINE LEAR
   Patel K, 2022, ARTIF INTELL REV, V55, P3747, DOI 10.1007/s10462-021-10084-2
   Patro S. K., 2015, ARXIV
   Pouriyeh S, 2017, IEEE SYMP COMP COMMU, P204, DOI 10.1109/ISCC.2017.8024530
   Ralegankar VK, 2022, IEEE ACCESS, V10, P1475, DOI 10.1109/ACCESS.2021.3138753
   Rani S., 2023, QUANTUM MACHINE LEAR
   Schuld M, 2015, CONTEMP PHYS, V56, P172, DOI 10.1080/00107514.2014.964942
   Tanwar Sudeep, 2018, Future Internet Technologies and Trends. First International Conference, ICFITT 2017. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 220), P116, DOI 10.1007/978-3-319-73712-6_12
   Wong R., 2022, QUANTUM MACHINE LEAR, V5, P79
   Yao Zhang, 2020, Quantum Engineering, V2, DOI 10.1002/que2.34
NR 33
TC 2
Z9 2
U1 5
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2024
VL 54
IS 2
BP 168
EP 185
DI 10.1002/spe.3264
EA SEP 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL7E2
UT WOS:001058804600001
DA 2024-07-18
ER

PT J
AU Sas, C
   Capiluppi, A
   Di Sipio, C
   Rocco, JD
   Di Ruscio, D
AF Sas, Cezar
   Capiluppi, Andrea
   Di Sipio, Claudio
   Rocco, Juri Di
   Di Ruscio, Davide
TI GitRanking: A ranking of GitHub topics for software classification using
   active sampling
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE active sampling; GitHub; software classification; taxonomy
ID CATEGORIZATION
AB ContextGitHub is the world's most prominent host of source code, with more than 327M repositories. However, most of these repositories are not labelled or inadequately, making it harder for users to find relevant projects. Various proposals for software application domain classification over the past years have been proposed. However, these several of those approaches suffer from multiple issues, called antipatterns of software classification, that reduce their usability. ObjectiveIn this paper, we propose a new taxonomy in the GitHub ecosystem, called GitRanking, starting from a well-structured data set, composed of curated repositories annotated with topics. The main objective is to create a baseline methodology for software classification that is expandable, hierarchical, grounded in a knowledge base, and free of antipatterns. MethodWe collected 121K topics from GitHub and used GitRanking to create a taxonomy of 301 ranked application domains. GitRanking (1) uses active sampling to ensure a minimal number of annotations to create the ranking; and (2) links each topic to Wikidata, reducing ambiguities and improving the reusability of the taxonomy. Furthermore, we adopt the conceived taxonomy in a classification task by considering a state-of-the-art classifier. ResultsOur results show that GitRanking can effectively rank terms in a hierarchy according to how general or specific their meaning is. Furthermore, we show that GitRanking is a dynamically extensible method: it can currently accept further terms to be ranked, and with a minimum number of annotations (& AP;15$$ \approx 15 $$). Concerning the classification task, we show that the model achieves an F1-score of 34%, with a precision of 54%. ConclusionThis paper is the first collective attempt at building a ground-up taxonomy of software domains. Our vision is that our taxonomy, and its extensibility, can be used to better and more precisely label software projects.
C1 [Sas, Cezar; Capiluppi, Andrea] Univ Groningen, Bernulli Inst, Groningen, Netherlands.
   [Di Sipio, Claudio; Rocco, Juri Di; Di Ruscio, Davide] Univ Aquila, Dept Informat Engn Comp Sci & Math, Laquila, Italy.
   [Sas, Cezar] Univ Groningen, Bernulli Inst, Nijenborgh 9, NL-9747AG Groningen, Netherlands.
C3 University of Groningen; University of L'Aquila; University of Groningen
RP Sas, C (corresponding author), Univ Groningen, Bernulli Inst, Nijenborgh 9, NL-9747AG Groningen, Netherlands.
EM c.a.sas@rug.nl
RI Capiluppi, Andrea/AGO-2961-2022; Sas, Cezar/JMQ-9798-2023; Di Sipio,
   Claudio/JYQ-5925-2024
OI Capiluppi, Andrea/0000-0001-9469-6050; Sas, Cezar/0000-0002-3018-0140;
   Di Sipio, Claudio/0000-0001-9872-9542
CR Altarawy D, 2018, J SYST SOFTWARE, V142, P21, DOI 10.1016/j.jss.2018.04.018
   [Anonymous], 2011, Advances in Neural Information Processing Systems
   [Anonymous], 2017, P 21 INT C EVALUATIO, DOI [DOI 10.1145/3084226, 10.1145/3084226.3084287, DOI 10.1145/3084226.3084287]
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Chen C, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P4687
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Di Rocco Juri, 2020, ESEM ' 20, DOI DOI 10.1145/3382494.3410690
   Di Sipio Claudio, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P71, DOI 10.1145/3383219.3383227
   Glickman ME, 1999, J ROY STAT SOC C-APP, V48, P377, DOI 10.1111/1467-9876.00159
   Herbrich R., 2006, P 19 INT C NEUR INF, P569
   Huang JX, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P1928, DOI 10.1145/3394486.3403244
   Izadi M, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10272-w
   Izadi M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09976-2
   Kawaguchi S, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P184, DOI 10.1109/APSEC.2004.69
   Kibriya AM, 2004, LECT NOTES ARTIF INT, V3339, P488
   Kohavi R., 1995, STUDY CROSS VALIDATI, DOI DOI 10.1067/MOD.2000.109031
   Krippendorff K, 2004, HUM COMMUN RES, V30, P411, DOI 10.1093/hcr/30.3.411
   LeClair A, 2018, PROC IEEE INT CONF S, P461, DOI 10.1109/ICSME.2018.00056
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Marutho Dhendra, 2018, 2018 3rd International Seminar on Application for Technology of Information and Communication. Proceedings, P533, DOI 10.1109/ISEMANTIC.2018.8549751
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   Mikhailiuk A., 25 INT C PATT REC IC, DOI [10.1109/ICPR48806.2021.9412676, DOI 10.1109/ICPR48806.2021.9412676]
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Ohashi H., CONVOLUTIONAL NEURAL, DOI [10.1109/MCSoC.2019.00035, DOI 10.1109/MCSOC.2019.00035]
   Osborne F, 2015, LECT NOTES COMPUT SC, V9366, P408, DOI 10.1007/978-3-319-25007-6_24
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Perez-Ortiz Maria, 2017, arXiv preprint arXiv:1712.03686
   Rennie J.D., 2003, Proceedings of the 20th International Conference on Machine Learning, P616
   Rubei R., 2021, P 11 ITALIAN INFORM, V2947
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Salatino AA, 2018, LECT NOTES COMPUT SC, V11137, P187, DOI 10.1007/978-3-030-00668-6_12
   Sas C, 2023, Soft Anal Evol Reeng, P698, DOI 10.1109/SANER56733.2023.00074
   Sas C, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111343
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Shang C., P 58 ANN M ASS COMP, DOI [10.18653/v1/2020.acl-main.199, DOI 10.18653/V1/2020.ACL]
   Shang JB, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P1908, DOI 10.1145/3366423.3380259
   Soll M, 2017, LECT NOTES ARTIF INT, V10505, P373, DOI 10.1007/978-3-319-67190-1_34
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Ugurel S, 2002, P 8 ACM SIGKDD INT C, P632, DOI DOI 10.1145/775047.775141
   Vargas-Baldrich S, 2015, IEEE INT CONF AUTOM, P289, DOI 10.1109/ASE.2015.38
   Vrandecic D, 2012, P 21 INT C WORLD WID, P1063, DOI DOI 10.1145/2187980.2188242
   Wang C., P 2017 C EMP METH NA, DOI [10.18653/v1/D17-1123, DOI 10.18653/V1/D17]
   Ye P, 2014, PROC CVPR IEEE, P4249, DOI 10.1109/CVPR.2014.541
   Yu C., P 2020 C EMP METH NA, DOI [10.18653/v1/2020.emnlp-main.502, DOI 10.18653/V1/2020.EMNLP]
   Zhang C, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2701, DOI 10.1145/3219819.3220064
   Zhang Y, 2019, IEEE DATA MINING, P876, DOI 10.1109/ICDM.2019.00098
   Zhou Chunting, 2015, ARXIV
   Zhou YQ, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, ICWS 2021, P314, DOI 10.1109/ICWS53863.2021.00049
NR 48
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2023
VL 53
IS 10
BP 1982
EP 2006
DI 10.1002/spe.3238
EA JUL 2023
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R6FK9
UT WOS:001030737700001
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Naghdipour, A
   Hasheminejad, SMH
   Barmaki, RL
AF Naghdipour, Ameneh
   Hasheminejad, Seyed Mohammad Hossein
   Barmaki, Roghayeh Leila
TI Software design pattern selection approaches: A systematic literature
   review
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE software design; design pattern selection; design problem; systematic
   review
ID OF-THE-ART
AB Software design patterns have a considerable impact on the software development life cycle. Design pattern (DP) is a reliable and reusable solution provided by software experts to obtain quality software design. However, due to the large number of design patterns, selecting the appropriate one is quite difficult. To overcome this difficulty, several approaches with different methods have been presented to suggest the appropriate DP. Despite conducting a number of studies that have explored some aspects of this field, such as design pattern selection tools and techniques, there is a need for a deeper understanding, analysis, classification, and thorough review of the design pattern selection process. So far, no systematic review of design pattern selection approaches is available. This paper aims to classify existing approaches, provide several criteria for comparing approaches, analyze each one, and identify and analyze the most important elements in this field, including open issues, data sets, and so on. The present investigation paper will help future research to employ the existing approaches taking into account the specification of each one and it also raises awareness about the approaches used in previous research and their potential limitations.
C1 [Naghdipour, Ameneh; Hasheminejad, Seyed Mohammad Hossein] Alzahra Univ, Fac Engn, Dept Comp Engn, Tehran, Iran.
   [Barmaki, Roghayeh Leila] Univ Delaware, Data Sci Inst, Comp & Informat Sci, Delaware, OH USA.
C3 Alzahra University; University of Delaware
RP Hasheminejad, SMH (corresponding author), Alzahra Univ, Dept Comp Engn, Tehran 1993893973, Iran.
EM smh.hasheminejad@alzahra.ac.ir
OI Naghdipour, Ameneh/0000-0001-9961-4819
CR Abdul Jalil M., 2020, P 9 INT C ED INFORM, P108
   Ampatzoglou A, 2013, J SYST SOFTWARE, V86, P1945, DOI 10.1016/j.jss.2013.03.063
   [Anonymous], 2010, DESIGN PATTERN EXPLA
   [Anonymous], 2001, DESIGN PATTERN EXPLA
   [Anonymous], 2005, SYSTEMATIC REV SOCIA
   Asghar Muhammad Zeeshan, 2019, 2019 International Conference on Frontiers of Information Technology (FIT), P167, DOI 10.1109/FIT47737.2019.00040
   Avramenko U., 2002, EUROPEAN S COMPUTER
   Baraki H., 2015, PROCEEDING 37 INT C
   Birukou A., 2010, P ACM WORKSH 15 EUR
   Blomqvist E, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P2248
   Booch G., 2006, SOFTWARE IEEE, V23, P16
   Bou CH., 2018, DESIGN PATTERN RANKI, P25
   Bouassida N., 2011, Proceedings 2011 IEEE 2nd International Conference on Software Engineering and Service Science (ICSESS 2011), P590, DOI 10.1109/ICSESS.2011.5982389
   Bouassida N, 2015, J UNIVERS COMPUT SCI, V21, P1746
   Bouhours C, 2015, SOFTWARE QUAL J, V23, P661, DOI 10.1007/s11219-014-9249-z
   Celikkan U, 2019, 2019 4TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND ENGINEERING (UBMK), P355, DOI [10.1109/UBMK.2019.8907215, 10.1109/ubmk.2019.8907215]
   Cooper J.W., 2000, JAVA DESIGN PATTERNS
   Di Noia T, 2014, LECT NOTES COMPUT SC, V8627, P82, DOI 10.1007/978-3-319-09970-5_8
   Diaz Paloma, 2011, End-User Development. Proceedings Third International Symposium, IS-EUD 2011, P331, DOI 10.1007/978-3-642-21530-8_35
   Diaz P., 2010, Advanced Visual Interfaces, P67
   Douglass B.P., 2002, REAL TIME DESIGN PAT
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   El Khoury P, 2008, INT WORKSHOP DATABAS, P297, DOI 10.1109/DEXA.2008.110
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Gomes P, 2002, LECT NOTES ARTIF INT, V2416, P534
   Graves AR, 2000, IEEE T SYST MAN CY A, V30, P36, DOI 10.1109/3468.823479
   Gu?h?neuc Y., 2007, PROCEEDING 1 EUROPLO
   Hamdy Abeer, 2018, Journal of Software, V13, P260, DOI 10.17706/jsw.13.4.260-268
   Hamdy A., 2018, J THEOR APPL INF TEC, V96, P5069
   Hasheminejad SMH, 2012, J SYST SOFTWARE, V85, P408, DOI 10.1016/j.jss.2011.08.031
   Hsueh NL, 2009, SOFTW SYST MODEL, V8, P67, DOI 10.1007/s10270-007-0063-y
   Hussain S, 2019, APPL SOFT COMPUT, V75, P1, DOI 10.1016/j.asoc.2018.10.049
   Hussain S, 2018, J PARALLEL DISTR COM, V117, P256, DOI 10.1016/j.jpdc.2017.06.022
   Hussain S, 2018, ADV INTELL SYST, V611, P205, DOI 10.1007/978-3-319-61566-0_20
   Hussain S, 2017, APPL SOFT COMPUT, V58, P225, DOI 10.1016/j.asoc.2017.04.043
   Hussain S, 2016, P INT COMP SOFTW APP, P161, DOI 10.1109/COMPSAC.2016.226
   Issaoui Imene, 2015, Lecture Notes on Software Engineering, V3, P173, DOI 10.7763/LNSE.2015.V3.185
   Kampffmeyer H, 2007, LECT NOTES COMPUT SC, V4735, P211
   Kim DK, 2008, SOFTWARE QUAL J, V16, P329, DOI 10.1007/s11219-008-9048-5
   Kim DK, 2007, J VISUAL LANG COMPUT, V18, P560, DOI 10.1016/j.jvlc.2007.02.009
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   KOLODNER JL, 1992, ARTIF INTELL REV, V6, P3, DOI 10.1007/BF00155578
   Kuchana P., 2004, Software architecture design patterns in Java
   Laosen N, 2020, INT J INNOV COMPUT I, V16, P1147, DOI 10.24507/ijicic.16.04.1147
   Lasater CG., 2010, DESIGN PATTERNS
   Mayvan BB, 2017, J SYST SOFTWARE, V125, P93, DOI 10.1016/j.jss.2016.11.030
   Muangon W., 2013, INT J COMPUTER APPL, V70, P16, DOI DOI 10.5120/12231-8433
   Muangon W, 2009, ICCIT: 2009 FOURTH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCES AND CONVERGENCE INFORMATION TECHNOLOGY, VOLS 1 AND 2, P1196, DOI 10.1109/ICCIT.2009.190
   Muangon W, 2009, 2009 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY, VOL 4, P424, DOI 10.1109/ICCSIT.2009.5234534
   Naghdipour A., 2021, P 2021 26 INT COMPUT, P1
   Nahar N., 2015, CEUR WORKSH P, P9
   Nahar N, 2016, 2016 5TH INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS AND VISION (ICIEV), P35, DOI 10.1109/ICIEV.2016.7760115
   Nahar N, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 4, P4, DOI 10.1109/SANER.2016.44
   Navarro Ignacio, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P269, DOI 10.1109/VLHCC.2010.53
   Palma F., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P1, DOI 10.1109/RSSE.2012.6233399
   Pavlic L, 2014, COMPUT SCI INF SYST, V11, P645, DOI 10.2298/CSIS130824025P
   Pearson S, 2010, LECT NOTES COMPUT SC, V6264, P69, DOI 10.1007/978-3-642-15152-1_7
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Qureshi M. Rizwan Jameel, 2017, International Journal of Modern Education and Computer Science, V9, P43, DOI 10.5815/ijmecs.2017.05.06
   Rahmati R., 2019, PROCEEDING 9 INT C C, P24
   Sahly EM, 2012, 2012 INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND INDUSTRIAL INFORMATICS (ICCSII)
   Sanyawong Nuttapon, 2014, 2014 International Computer Science and Engineering Conference (ICSEC), P134, DOI 10.1109/ICSEC.2014.6978183
   Sarun I., 2007, ECTI T COMPUTER INFO, V3, P51
   Schumacher M., 2005, Security Patterns: Integrating Security and Systems Engineering, V1st
   Sielis George A., 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0036-y
   Silberschatz Abraham., 2002, OPERATING SYSTEM CON, VSixth
   Smith S., 2012, P 24 INT C SOFTW ENG, P499
   Tanenbaum A.S, 2001, Modern Operating Systems
   Tanenbaum A. S., 2015, Modern operating systems, V4th
   Thabasum S. S., 2012, INT J COMPUT SCI NET, V2, P496
   Tidwell J., 2010, DESIGNING INTERFACES, P578
   Velasco-Elizondo P, 2016, SCI COMPUT PROGRAM, V121, P176, DOI 10.1016/j.scico.2015.12.007
   Zdun U, 2007, SOFTWARE PRACT EXPER, V37, P983, DOI 10.1002/spe.799
   ZIMMER W, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P345
NR 75
TC 1
Z9 1
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2023
VL 53
IS 4
BP 1091
EP 1122
DI 10.1002/spe.3176
EA JAN 2023
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9M3GK
UT WOS:000906049200001
DA 2024-07-18
ER

PT J
AU Neri, C
   Schneider, L
AF Neri, Cassio
   Schneider, Lorenz
TI Euclidean affine functions and their application to calendar algorithms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Euclidean affine functions; integer division; calendar algorithms
ID JULIAN DAY NUMBERS; DIVISION
AB In everyday life, dates are specified in terms of year, month and day, but this is not how digital devices represent them. Such devices continuously count elapsed days since a certain reference date, usually 1 January 1970. Accordingly, the date exactly one year after this reference is 1 January 1971 and digital devices represent it as 365. Conversions between machine and human formats are, arguably, amongst the most common operations performed by digital devices and constitute the subject of this article. We introduce Euclidean affine functions (EAFs) and study their properties. EAFs are of the form f(n)=(a center dot n+b)/d$$ f(n)=\left(a\cdotp n+b\right)/d $$, where n$$ n $$, a$$ a $$, b$$ b $$, and d$$ d $$ are integers and where /$$ / $$ denotes the quotient of Euclidean division. We derive algebraic relations and numerical approximations that are important for the efficient evaluation of these expressions in modern CPUs. Since division is a particular case of an EAF (when a=1$$ a=1 $$ and b=0$$ b=0 $$), the optimisations proposed in this article can also be applied to division. The main application presented in this article is the derivation of conversion algorithms for the Gregorian calendar. We will show that they can be implemented substantially more efficiently than is currently the case in widely used C, C++, C#, and Java open source libraries. Gains in speed of a factor of two or more are common. These algorithms have been implemented in GCC, the Linux Kernel and .NET.
C1 [Schneider, Lorenz] EMLYON Business Sch, Lyon, France.
C3 emlyon business school
RP Schneider, L (corresponding author), EMLYON Business Sch, Lyon, France.
EM schneider@em-lyon.com
OI Schneider, Lorenz/0000-0001-5278-8184
CR Albert, 1998, MATH SCI HUMAINES, V141, P11, DOI [10.4000/msh.2760, DOI 10.4000/MSH.2760]
   ALVERSON R, 1991, 10TH IEEE SYMPOSIUM ON COMPUTER ARITHMETIC, P186, DOI 10.1109/ARITH.1991.145558
   [Anonymous], 2018, Calendrical Calculations
   [Anonymous], 2011, ANDROID
   [Anonymous], BOOST C LIB
   [Anonymous], LLVM PROJECT
   Cassio, SUPPLEMENTARY MAT EU
   Cavagnino D, 2008, COMPUT J, V51, P470, DOI 10.1093/comjnl/bxm082
   Christian Z., 1882, W RTT VIERTELJAHRSH, P313
   Duncan S., 2000, MARKING TIME EPIC QU
   Ewing Duncan David, 1998, CALENDAR 5000 YEAR S
   FLIEGEL HF, 1968, COMMUN ACM, V11, P657, DOI 10.1145/364096.364097
   GNU C Library, US
   GNU Compiler Collection, GCC 11 RELEASE SERIE
   Google, BENCHMARK V152
   Graham Richards Edward, 1998, MAPPING TIME CALENDA
   GRANLUND T, 1994, SIGPLAN NOTICES, V29, P61
   HATCHER DA, 1984, Q J ROY ASTRON SOC, V25, P53
   HATCHER DA, 1985, Q J ROY ASTRON SOC, V26, P151
   Lemire D, 2019, SOFTWARE PRACT EXPER, V49, P953, DOI 10.1002/spe.2689
   Linux Kernel, DRIVERS RTC LIB C
   Linux Kernel, KERNELTIMETIMECONVC
   MAGENHEIMER DJ, 1988, IEEE T COMPUT, V37, P980, DOI 10.1109/12.2248
   Microsoft.NET, 2020, DAT TIME CS
   OpenJDK, 2019, LOCALDATE JAVA
   Peter, DATE ALGORITHMS
   Robison AD, 2005, P S COMP ARITHM, P131, DOI 10.1109/ARITH.2005.31
   WARREN H.S.Jr., 2013, Hacker's Delight, V2nd
NR 28
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2023
VL 53
IS 4
BP 937
EP 970
DI 10.1002/spe.3172
EA DEC 2022
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9M3GK
UT WOS:000914184500001
DA 2024-07-18
ER

PT J
AU Nirumand, A
   Zamani, B
   Tork-Ladani, B
   Klein, J
   Bissyandé, TF
AF Nirumand, Atefeh
   Zamani, Bahman
   Tork-Ladani, Behrouz
   Klein, Jacques
   Bissyande, Tegawende F.
TI A model-based framework for inter-app Vulnerability analysis of Android
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE android; inter-app communication; inter-component communication;
   model-driven reverse engineering; security analysis
AB Android users install various apps, such as banking apps, on their smart devices dealing with user-sensitive information. The Android framework, via Inter-Component Communication (ICC) mechanism, ensures that app components (inside the same app or on different apps) can communicate. The literature works have shown that this mechanism can cause security issues, such as app security policy violations, especially in the case of Inter-App Communication (IAC). Despite the plethora of research on detecting security issues in IAC, detection techniques face fundamental ICC challenges for improving the precision of static analysis. Challenges include providing comprehensive and scalable modeling of app specification, capturing all potential ICC paths, and enabling more effective IAC analysis. To overcome such challenges, in this paper, we propose a framework called VAnDroid2, as an extension of our previous work, to address the security issues in multiple components at both intra- and inter-app analysis levels. VAnDroid2, based on Model-Driven Reverse Engineering, has extended our previous work as per following: (1) providing a comprehensive Intermediate Representation (IR) of the app which supports extracting all the ICC information from the app, (2) extracting high-level representations of the apps and their interactions by omitting the details that are not relevant to inter-app security analysis, and (3) enabling more effective IAC security analysis. This framework is implemented as an Eclipse-based tool. The results of evaluating VAnDroid2 w.r.t. correctness, scalability, and run-time performance, and comparing with state-of-the-art analysis tools well indicate that VAnDroid2 is a promising framework in the field of Android inter-app security analysis.
C1 [Nirumand, Atefeh; Zamani, Bahman; Tork-Ladani, Behrouz] Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
   [Klein, Jacques; Bissyande, Tegawende F.] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Esch Sur Alzette, Luxembourg.
C3 University of Isfahan; University of Luxembourg
RP Zamani, B (corresponding author), Univ Isfahan, Dept Software Engn, Model Driven Software Engn Res Grp, Esfahan, Iran.
EM zamani@eng.ui.ac.ir
RI Ladani, Behrouz Tork/U-5040-2019
OI Zamani, Bahman/0000-0001-6424-1442; Tork Ladani,
   Behrouz/0000-0003-2280-8839; Klein, Jacques/0000-0003-4052-475X
CR Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Android Developers, INTENTSENDER
   Android Developers, INT INT FILT
   Android Developers, CONTEXT
   Android Developers, PEND
   [Anonymous], WHAT ARE MOST CRITIC
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Bagheri H, 2018, PROC IEEE INT CONF S, P357, DOI 10.1109/ICSME.2018.00044
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Bhat P, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3301285
   Biswas S, 2017, LECT NOTES COMPUT SC, V10251, P445, DOI 10.1007/978-3-319-60033-8_39
   Biswas S, 2016, INT J SECUR APPL, V10, P223, DOI 10.14257/ijsia.2016.10.3.21
   Bitbucket, ANDR APP VULN BENCHM
   Bondi A. B., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P195, DOI 10.1145/350391.350432
   Bosu AS, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P71, DOI 10.1145/3052973.3053004
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Bruneliere H., 2018, THESIS NANTES U
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Clements PC., 2002, DISSERTATION
   Eclipse Foundation, ECL ACC PROJ
   Github, JADX DEX JAV DEC
   GitHub, SEC SOFTW ENG DROIDB
   GitHub, 2021, FGW ICC BENCH
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Hammad M., 2018, Self-protection of android systems from inter-component communication attacks
   Hammad M, 2019, J SYST SOFTWARE, V149, P83, DOI 10.1016/j.jss.2018.11.049
   Hurier, 2019, THESIS U LUXEMBOURG
   Jha AK, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P113, DOI 10.1109/MobileSoft.2015.24
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   KLIEBER W., 2014, Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis, P1
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Ma C, 2019, TSINGHUA SCI TECHNOL, V24, P596, DOI 10.26599/TST.2018.9010133
   Nirumand A., 2022, ATL RULES OCL QUERIE
   Nirumand A, 2019, SOFTWARE PRACT EXPER, V49, P70, DOI 10.1002/spe.2643
   Octeau D., 2013, LA UR 13 26794
   Octeau D, 2012, P ACM SIGSOFT 20 INT, P1
   Octeau D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P77, DOI 10.1109/ICSE.2015.30
   OWASP, OWASP TOP 10 2021
   Pauck F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P331, DOI 10.1145/3236024.3236029
   Peck M., 2016, ANAL EFFECTIVENESS A
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Qiu LN, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P176, DOI 10.1145/3213846.3213873
   Raibulet C, 2017, IEEE ACCESS, V5, P14516, DOI 10.1109/ACCESS.2017.2733518
   Ranganath VP, 2020, EMPIR SOFTW ENG, V25, P178, DOI 10.1007/s10664-019-09749-y
   Reaves B, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2996358
   Sabir U, 2019, IEEE ACCESS, V7, P158931, DOI 10.1109/ACCESS.2019.2950884
   Sadeghi A., 2017, THESIS U CALIFORNIA
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Samhi, 2021, P 2021 IEEE ACM 43 I
   Six Jeff., 2011, APPL SECURITY ANDROI
   Statista, 2021, GOOGL PLAY STOR NUMB
   Statista, 2021, MOBIL OS MARK SHAR 2
   Statista, Most popular Google Play app categories as of 1st quarter 2022 2022
   Statistics, 55 JAW DROPP APP US
   Statistics, MOB APP DOWNL US STA
   Tiwari A, 2019, L N INST COMP SCI SO, V305, P335, DOI 10.1007/978-3-030-37231-6_19
   Wei FS, 2018, ANALYTICAL METHODS FOR FOOD SAFETY BY MASS SPECTROMETRY, VOL II VETERINARY DRUGS, P1, DOI [10.1016/B978-0-12-814165-6.00001-4, 10.1145/3183575]
   Wu TY, 2019, FRONT COMPUT SCI-CHI, V13, P1210, DOI 10.1007/s11704-018-7008-1
NR 61
TC 3
Z9 3
U1 2
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2023
VL 53
IS 4
BP 895
EP 936
DI 10.1002/spe.3171
EA NOV 2022
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9M3GK
UT WOS:000889915000001
OA Green Published
DA 2024-07-18
ER

PT J
AU Guo, SK
   Wang, JH
   Xu, ZH
   Huang, L
   Li, H
   Chen, R
AF Guo, Shikai
   Wang, Jiahui
   Xu, Zhihao
   Huang, Lin
   Li, Hui
   Chen, Rong
TI Feature transfer learning by reinforcement learning for detecting
   software defect
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE feature learning; software defect prediction; software maintenance
AB Software defects, produced inevitably in software projects, seriously affect the efficiency of software testing and maintenance. An appealing solution is the software defect prediction (SDP) that has achieved good performance in many software projects. However, the difference between features and the difference of the same feature between training data and test data may degrade defect prediction performance if such differences violate the model's assumption. To address this issue, we propose a SDP method based on feature transfer learning (FTL), which performs a transformation sequence for each feature in order to map the original features to another feature space. Specifically, FTL first uses the reinforcement learning scheme that automatically learns a strategy for transferring the potential feature knowledge from the training data. Then, we use the learned feature knowledge to inspire the transformation of the test data. The classifier is trained by the transformed training data and predicts defects for transformed test data. We evaluate the validity of FTL on 43 projects from PROMISE and NASA MDP using three classifiers, logistic regression, random forest, and Naive Bayes (NB). Experimental results indicate that FTL is better than the original classifiers and has the best performance on the NB classifier. For PROMISE, after using FTL, the average results of F1-score, AUC, MCC are 0.601, 0.757, and 0.350 respectively, which are 24.9%, 2.6%, and 16.7% higher than the original NB classifier results. The number of projects with improved performance accounts for 83.87%, 83.87%, and 64.52%. Similarly, FTL performs well on NASA MDP. Besides, compared with four feature engineering (FE) methods, FTL achieves an excellent improvement on most projects and the average performance is also better than or close to the FE methods.
C1 [Guo, Shikai; Wang, Jiahui; Xu, Zhihao; Huang, Lin; Li, Hui; Chen, Rong] Dalian Maritime Univ, Coll Informat Sci & Technol, Dalian 116026, Peoples R China.
C3 Dalian Maritime University
RP Chen, R (corresponding author), Dalian Maritime Univ, Coll Informat Sci & Technol, Dalian 116026, Peoples R China.
EM rchen@dlmu.edu.cn
RI Zhao, Yi/JFA-7988-2023; wang, jiahui/IXD-1197-2023; WANG,
   YILUN/KFB-0627-2024
FU National Natural Science Foundation of China [61902050]; Natural Science
   Foundation of Liaoning Province [2021-MS-136]; Fundamental Research
   Funds for the Central Universities [3132019355]; China Postdoctoral
   Science Foundation [2020M670736]
FX National Natural Science Foundation of China, Grant/Award Number:
   61902050; Natural Science Foundation of Liaoning Province, Grant/Award
   Number: 2021-MS-136; Fundamental Research Funds for the Central
   Universities, Grant/Award Number: 3132019355; China Postdoctoral Science
   Foundation, Grant/Award Number: 2020M670736
CR Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   Anwar S, 2011, INT J INNOV COMPUT I, V7, P3193
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Chen R, 2019, IEEE T FUZZY SYST, V27, P2406, DOI 10.1109/TFUZZ.2019.2899809
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jin C, 2021, EXPERT SYST APPL, V171, DOI 10.1016/j.eswa.2021.114637
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kalousis A., 2002, Algorithm Selection via Meta-learning
   Kanter JM, 2015, PROCEEDINGS OF THE 2015 IEEE INTERNATIONAL CONFERENCE ON DATA SCIENCE AND ADVANCED ANALYTICS (IEEE DSAA 2015), P717
   Katz G, 2016, IEEE DATA MINING, P979, DOI [10.1109/ICDM.2016.0123, 10.1109/ICDM.2016.176]
   Khurana U, 2018, AAAI CONF ARTIF INTE, P3407
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Lam HT., ONE BUTTON MACHINE A
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Liang J., 2019, IEEE ICC, P1, DOI DOI 10.1109/icc.2019.8761610
   Lientz B P., 1980, Software Maintenance Management
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Liu SL, 2014, P INT COMP SOFTW APP, P426, DOI 10.1109/COMPSAC.2014.66
   Ma Y., 2007, Advances in Machine Learning Applications in Software Engineering, P237
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Michie D., 1994, MACHINE LEARNING NEU
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nargesian F, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2529
   Ni C, 2017, J COMPUT SCI TECH-CH, V32, P1090, DOI 10.1007/s11390-017-1785-0
   Pandey SK, 2020, EXPERT SYST APPL, V144, DOI 10.1016/j.eswa.2019.113085
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Ramzan M, 2012, TELECOMMUN SYST, V51, P167, DOI 10.1007/s11235-011-9426-3
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shi Hongbo, 2007, Zhongbei Daxue Xuebao (Ziran Kexue Ban)/ Journal of North University of China (Natural Science Edition), V28, P662
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Shuai B, 2013, 2013 9TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY (CIS), P260, DOI 10.1109/CIS.2013.61
   van Hasselt H, 2016, AAAI CONF ARTIF INTE, P2094
   Weinberger K., 2009, P 26 ANN INT C MACH, P1113, DOI DOI 10.1145/1553374.1553516
   Witten I., 2002, ACM Sigmod Rec., V31, P76, DOI [10.1145/507338.507355, DOI 10.1145/507338.507355]
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Zhang JY, 2018, LECT NOTES COMPUT SC, V11234, P312, DOI 10.1007/978-3-030-02925-8_22
   Zhang ZQ, 2020, AAAI CONF ARTIF INTE, V34, P1210
NR 46
TC 0
Z9 0
U1 2
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 366
EP 389
DI 10.1002/spe.3152
EA SEP 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000855976600001
OA Bronze
DA 2024-07-18
ER

PT J
AU Ghosh, S
   Mukherjee, A
   Ghosh, SK
   Buyya, R
AF Ghosh, Shreya
   Mukherjee, Anwesha
   Ghosh, Soumya K.
   Buyya, Rajkumar
TI STOPPAGE: Spatio-temporal data driven cloud-fog-edge computing framework
   for pandemic monitoring and management
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE COVID-19; deep learning; healthcare; Internet of Spatial Things (IoST);
   knowledge graph; pandemic; spatio-temporal data
ID MOBILE
AB Several global health incidents and evidences show the increasing likelihood of pandemics (large-scale outbreaks of infectious disease), which has adversely affected all aspects of human lives. It is essential to develop an analytics framework by extracting and incorporating the knowledge of heterogeneous data-sources to deliver insights for enhancing preparedness to combat the pandemic. Specifically, human mobility, travel history, and other transport statistics have significantly impact on the spread of any infectious disease. This article proposes a spatio-temporal knowledge mining framework, named STOPPAGE, to model the impact of human mobility and other contextual information over the large geographic areas in different temporal scales. The framework has two key modules: (i) spatio-temporal data and computing infrastructure using fog/edge based architecture; and (ii) spatio-temporal data analytics module to efficiently extract knowledge from heterogeneous data sources. We created a pandemic-knowledge graph to discover correlations among mobility information and disease spread, a deep learning architecture to predict the next hotspot zones. Further, we provide necessary support in home-health monitoring utilizing Femtolet and fog/edge based solutions. The experimental evaluations on real-life datasets related to COVID-19 in India illustrate the efficacy of the proposed methods. STOPPAGE outperforms the existing works and baseline methods in terms of accuracy by approximate to$$ \approx $$(18-21)% in predicting hotspots and reduces the power consumption of the smartphone significantly. The scalability study yields that the STOPPAGE framework is flexible enough to analyze a huge amount of spatio-temporal datasets and reduces the delay in predicting health status compared to the existing studies.
C1 [Ghosh, Shreya] Penn State Univ, Coll Informat Sci & Technol, State Coll, PA 16802 USA.
   [Mukherjee, Anwesha] Mahishadal Raj Coll, Dept Comp Sci, Mahishadal, W Bengal, India.
   [Ghosh, Soumya K.] Indian Inst Technol Kharagpur, Dept Comp Sci & Engn, Kharagpur, W Bengal, India.
   [Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Victoria, Australia.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Indian Institute of Technology System
   (IIT System); Indian Institute of Technology (IIT) - Kharagpur;
   University of Melbourne
RP Ghosh, S (corresponding author), Penn State Univ, Coll Informat Sci & Technol, State Coll, PA 16802 USA.
EM spg5897@psu.edu
RI Mukherjee, Anwesha/J-1409-2018; Buyya, Rajkumar/C-3424-2009
OI Mukherjee, Anwesha/0000-0001-9110-8591; Ghosh,
   Shreya/0000-0002-6970-8889; Buyya, Rajkumar/0000-0001-9754-6496
FU Department of Science and Technology, Government of India
FX Department of Science and Technology, Government of India
CR Abid A, 2022, SOFTWARE PRACT EXPER, V52, P841, DOI 10.1002/spe.2983
   Aman AHM, 2021, J NETW COMPUT APPL, V174, DOI 10.1016/j.jnca.2020.102886
   Badr HS, 2020, LANCET INFECT DIS, V20, P1247, DOI 10.1016/S1473-3099(20)30553-3
   da Costa CA, 2018, ARTIF INTELL MED, V89, P61, DOI 10.1016/j.artmed.2018.05.005
   Das J., 2021, IEEE T SERV COMPUT, P1
   Das J, 2022, SOFTWARE PRACT EXPER, V52, P1615, DOI 10.1002/spe.3078
   Domingo-Fernández D, 2021, BIOINFORMATICS, V37, P1332, DOI 10.1093/bioinformatics/btaa834
   Eldrandaly KA, 2019, IEEE ACCESS, V7, P19653, DOI 10.1109/ACCESS.2019.2897012
   Esteva A, 2021, NPJ DIGIT MED, V4, DOI 10.1038/s41746-021-00437-0
   Ghahramani M, 2021, SUSTAIN CITIES SOC, V69, DOI 10.1016/j.scs.2021.102848
   Ghosh Shreya, 2022, Proceedings of International Conference on Advanced Computing Applications: ICACA 2021. Advances in Intelligent Systems and Computing (1406), P247, DOI 10.1007/978-981-16-5207-3_22
   Ghosh S, 2022, INNOV SYST SOFTW ENG, DOI 10.1007/s11334-022-00458-2
   Ghosh S, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P810, DOI 10.1109/CCGrid49817.2020.000-5
   Ghosh S, 2020, J NETW COMPUT APPL, V164, DOI 10.1016/j.jnca.2020.102692
   Ghosh S, 2020, INT CONF COMMUN SYST, DOI [10.1109/COMSNETS48256.2020.9027345, 10.1109/comsnets48256.2020.9027345]
   Ghosh S, 2020, IEEE T NETW SCI ENG, V7, P2271, DOI 10.1109/TNSE.2019.2941754
   Ghosh S, 2018, IEEE SYS MAN CYBERN, P693, DOI 10.1109/SMC.2018.00126
   Goodchild MF, 2007, INT J SPAT DATA INFR, V2, P24
   He HJ, 2020, Arxiv, DOI arXiv:2004.06653
   Heiler G, 2020, IEEE INT CONF BIG DA, P3123, DOI 10.1109/BigData50022.2020.9378374
   Huang X, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P105, DOI 10.1145/3289600.3290956
   Ienca M, 2020, NAT MED, V26, P463, DOI 10.1038/s41591-020-0832-5
   Kallel A, 2021, SOFTWARE PRACT EXPER, V51, P91, DOI 10.1002/spe.2924
   Kapoor A, 2020, Arxiv, DOI arXiv:2007.03113
   Karatzoglou A, 2018, LECT NOTES COMPUT SC, V11139, P61, DOI 10.1007/978-3-030-01418-6_7
   Kraemer MUG, 2020, SCIENCE, V368, P493, DOI 10.1126/science.abb4218
   Kumar A, 2021, FUTURE GENER COMP SY, V115, P1, DOI 10.1016/j.future.2020.08.046
   Liu Q, 2016, AAAI CONF ARTIF INTE, P194
   Luz Eduardo, 2022, Research on Biomedical Engineering, V38, P149, DOI 10.1007/s42600-021-00151-6
   Mahmud R, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3403955
   Mohan Senthilkumar, 2022, Softw Pract Exp, V52, P824, DOI 10.1002/spe.2969
   MORAN PAP, 1950, BIOMETRIKA, V37, P17, DOI 10.1093/biomet/37.1-2.17
   Mukherjee A, 2021, J AMB INTEL HUM COMP, V12, P943, DOI 10.1007/s12652-020-02113-9
   Mukherjee A, 2016, SIMUL MODEL PRACT TH, V62, P68, DOI 10.1016/j.simpat.2016.01.014
   Neiderud Carl-Johan, 2015, Infection Ecology & Epidemiology, V5, P27060, DOI 10.3402/iee.v5.27060
   Parvin F, 2021, SPAT INF RES, V29, P479, DOI 10.1007/s41324-020-00375-1
   Pepe E, 2020, SCI DATA, V7, DOI 10.1038/s41597-020-00575-2
   Poonia A, 2021, INTERNET THINGS-NETH, V16, DOI 10.1016/j.iot.2021.100459
   Rahman MA, 2020, IEEE NETWORK, V34, P98, DOI 10.1109/MNET.011.2000353
   Reese JT, 2021, PATTERNS, V2, DOI 10.1016/j.patter.2020.100155
   Santos MAG, 2020, INFORM FUSION, V53, P222, DOI 10.1016/j.inffus.2019.06.004
   Singh A, 2022, SOFTWARE PRACT EXPER, V52, P868, DOI 10.1002/spe.3011
   Smith M., 2022, SCI REP-UK, V12, P1
   Song Q., 2022, IEEE T CYBERN, P1
   Sood SK, 2021, J PARALLEL DISTR COM, V150, P46, DOI 10.1016/j.jpdc.2020.12.002
   Trivedi R, 2017, PR MACH LEARN RES, V70
   Tuli S, 2020, INTERNET THINGS-NETH, V11, DOI 10.1016/j.iot.2020.100222
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
   Vedam N, 2023, IEEE T COMPUT SOC SY, V10, P2291, DOI 10.1109/TCSS.2022.3185371
   Verschuur J, 2021, PLOS ONE, V16, DOI 10.1371/journal.pone.0248818
   Vinten-Johansen Peter., 2003, CHOLERA CHLOROFORM S
   Wang PF, 2021, IEEE INTERNET THINGS, V8, P15863, DOI 10.1109/JIOT.2020.3049024
   Wang QY, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES: DEMONSTRATIONS (NAACL-HLT 2021), P66
   Whaiduzzaman M, 2020, IEEE J BIOMED HEALTH, V24, P3564, DOI 10.1109/JBHI.2020.3026060
   Xu J, 2020, SCI DATA, V7, DOI 10.1038/s41597-020-0543-2
   Yang ZM, 2021, IEEE INTERNET THINGS, V8, P16779, DOI 10.1109/JIOT.2021.3052778
NR 56
TC 5
Z9 6
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2022
VL 52
IS 12
BP 2700
EP 2726
DI 10.1002/spe.3144
EA AUG 2022
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A1NL
UT WOS:000849844800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Khan, JA
   Yasin, A
   Fatima, R
   Vasan, D
   Khan, AA
   Khan, AW
AF Khan, Javed Ali
   Yasin, Affan
   Fatima, Rubia
   Vasan, Danish
   Khan, Arif Ali
   Khan, Abdul Wahid
TI Valuating requirements arguments in the online user's forum for
   requirements decision-making: The CrowdRE-VArg framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE argumentation; machine learning; natural language processing; new
   features; Reddit forum; requirements
ID SOFTWARE; ACCEPTABILITY; SYSTEMS
AB User forums enable a large population of crowd-users to publicly share their experience, useful thoughts, and concerns about the software applications in the form of user reviews. Recent research studies have revealed that end-user reviews contain rich and pivotal sources of information for the software vendors and developers that can help undertake software evolution and maintenance tasks. However, such user-generated information is often fragmented, with multiple viewpoints from various stakeholders involved in the ongoing discussions in the Reddit forum. In this article, we proposed a crowd-based requirements engineering by valuation argumentation (CrowdRE-VArg) approach that analyzes the end-users discussion in the Reddit forum and identifies conflict-free new features, design alternatives, or issues, and reach a rationale-based requirements decision by gradually valuating the relative strength of their supporting and attacking arguments. The proposed approach helps to negotiate the conflict over the new features or issues between the different crowd-users on the run by finding a settlement that satisfies the involved crowd-users in the ongoing discussion in the Reddit forum using argumentation theory. For this purpose, we adopted the bipolar gradual valuation argumentation framework, extended from the abstract argumentation framework and abstract valuation framework. The automated CrowdRE-VArg approach is illustrated through a sample crowd-users conversation topic adopted from the Reddit forum about Google Map mobile application. Finally, we applied natural language processing and different machine learning algorithms to support the automated execution of the CrowdRE-VArg approach. The results demonstrate that the proposed CrowdRE-VArg approach works as a proof-of-concept and automatically identifies prioritized requirements-related information for software engineers.
C1 [Khan, Javed Ali] Univ Sci & Technol, Dept Software Engn, Bannu, Pakistan.
   [Yasin, Affan; Fatima, Rubia; Vasan, Danish] Tsinghua Univ, Sch Software, Beijing, Peoples R China.
   [Khan, Arif Ali] Univ Oulu, Empir Software Engn Res Unit M3S, Oulu, Finland.
   [Khan, Abdul Wahid] Univ Sci & Technol, Dept Comp Sci, Bannu, Pakistan.
C3 University of Science & Technology Bannu; Tsinghua University;
   University of Oulu; University of Science & Technology Bannu
RP Khan, JA (corresponding author), Univ Sci & Technol, Dept Software Engn, Bannu, Pakistan.
EM engr_javed501@yahoo.com
RI khan, Arif/HMV-3165-2023; Khan, Javed Ali/ISS-4923-2023; Vasan,
   Danish/ABF-4204-2020; Yasin, Affan/GON-8035-2022
OI Khan, Javed Ali/0000-0003-3306-1195; Yasin, Affan/0000-0002-0166-2239
CR Achananuparp P, 2012, IEEE INT CONF AUTOM, P334, DOI 10.1145/2351676.2351740
   Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Al-Alshaikh HA, 2020, IEEE ACCESS, V8, P60801, DOI 10.1109/ACCESS.2020.2982837
   Alkadhi R, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P357, DOI 10.1109/SANER.2018.8330223
   Bagheri E, 2011, P 2011 ACM S APPL CO, P659, DOI DOI 10.1145/1982185.1982332
   Bakiu E, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P182, DOI 10.1109/REW.2017.76
   Baroni P, 2015, ARGUM COMPUT, V6, P24, DOI 10.1080/19462166.2014.1001791
   Baroni P, 2013, LECT NOTES ARTIF INT, V8143, P340, DOI 10.1007/978-3-642-40624-9_21
   Batista G. E., 2004, ACM SIGKDD EXPL NEWS, V6, P20, DOI DOI 10.1145/1007730.1007735
   Bhat M, 2017, LECT NOTES COMPUT SC, V10475, P138, DOI 10.1007/978-3-319-65831-5_10
   Binkhonain M., 2019, EXPERT SYST APPL X, V1, DOI DOI 10.1016/J.ESWAX.2019.100001
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bosc T, 2016, FRONT ARTIF INTEL AP, V287, P21, DOI 10.3233/978-1-61499-686-6-21
   Burge JE, 2008, J SYST SOFTWARE, V81, P395, DOI 10.1016/j.jss.2007.05.004
   Carstens L., 2017, ACM T INTERNET TECHN, V17, P30, DOI DOI 10.1145/3017679
   Carstens Lucas., 2015, P 2 WORKSHOP ARGUMEN, P29, DOI 10.3115/v1/W15-0504
   Cayrol C, 2005, LECT NOTES COMPUT SC, V3571, P378
   Cayrol C, 2005, LECT NOTES COMPUT SC, V3571, P366
   Cayrol C, 2005, J ARTIF INTELL RES, V23, P245, DOI 10.1613/jair.1411
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cocarascu O, 2017, MINING BIPOLAR ARGUM
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Corbin J., 2015, BASICS QUALITATIVE R
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Dunne PE, 2011, ARTIF INTELL-AMST, V175, P457, DOI 10.1016/j.artint.2010.09.005
   Dutoit A. H., 2002, Requirements Engineering, V7, P3, DOI 10.1007/s007660200001
   Dutoit AH., 2001, HDB SOFTWARE ENG KNO, P787
   Elrakaiby Y, 2018, INT REQUIR ENG CONF, P364, DOI 10.1109/RE.2018.00-24
   Elrakaiby Y, 2017, INT REQUIR ENG CONF, P51, DOI 10.1109/RE.2017.27
   Evripidou Valentinos, 2012, Web Reasoning and Rule Systems. Proceedings of the 6th International Conference (RR 2012), P209, DOI 10.1007/978-3-642-33203-6_16
   Ferilli S, 2018, COMM COM INF SC, V806, P57, DOI 10.1007/978-3-319-73165-0_6
   Franqueira VNL, 2011, INT REQUIR ENG CONF, P239, DOI 10.1109/RE.2011.6051659
   Haley CB., 2005, P 3 S RE IS 13 INT R
   Hartmann J, 2019, INT J RES MARK, V36, P20, DOI 10.1016/j.ijresmar.2018.09.009
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   Ionita D, 2014, 2014 IEEE 1ST WORKSHOP ON EVOLVING SECURITY AND PRIVACY REQUIREMENTS ENGINEERING (ESPRE), P7, DOI 10.1109/ESPRE.2014.6890521
   Jarczyk A., 1992, System Sciences, 1992, V2,, P577, DOI [10.1109/HICSS.1992.183309, DOI 10.1109/HICSS.1992.183309]
   Jureta IJ, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P57, DOI 10.1109/RE.2009.8
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Kasauli R, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110851
   Khan AA, 2021, APPL SOFT COMPUT, V102, DOI 10.1016/j.asoc.2021.107090
   Khan FM, 2022, IEEE ACCESS, V10, P30982, DOI 10.1109/ACCESS.2022.3152073
   Khan JA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2309
   Khan JA, 2020, IET SOFTW, V14, P242, DOI 10.1049/iet-sen.2019.0262
   Khan JA, 2019, INT REQUIR ENG CONF, P63, DOI 10.1109/RE.2019.00018
   Khan JA, 2019, LECT NOTES COMPUT SC, V11412, P245, DOI 10.1007/978-3-030-15538-4_18
   Khan JA, 2018, IEEE INT WORKS EMPIR, P24, DOI 10.1109/EmpiRE.2018.00010
   Khan JA, 2016, INT J ADV COMPUT SC, V7, P419
   Kolcz A., 2004, ACM SIGKDD EXPLORATI, V6, P1, DOI [10.2973/odp.proc.ir.207.2004, DOI 10.1145/1007730.1007733]
   Kotsiantis S., 2006, GESTS INT T COMPUTER, V30, P25
   Kovacs A, 2014, 2014 IEEE INTERNATIONAL CONFERENCE (ITHINGS) - 2014 IEEE INTERNATIONAL CONFERENCE ON GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) - 2014 IEEE INTERNATIONAL CONFERENCE ON CYBER-PHYSICAL-SOCIAL COMPUTING (CPS), P408, DOI 10.1109/iThings.2014.74
   Kurtanovic Z, 2018, REQUIR ENG, V23, P357, DOI 10.1007/s00766-018-0293-2
   Leite J., 2011, P 32 INT JOINT C ART
   Liang Y, 2012, COMPUT AIDED DESIGN, V44, P916, DOI 10.1016/j.cad.2011.08.002
   Lippi M, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2850417
   Liu C, 2020, SOFTWARE PRACT EXPER, V50, P1778, DOI 10.1002/spe.2845
   Liu H., 2021, SOFTW PRACT EXP, V51
   López C, 2012, SCI COMPUT PROGRAM, V77, P66, DOI 10.1016/j.scico.2010.06.009
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Modgil S, 2014, ARGUM COMPUT, V5, P31, DOI 10.1080/19462166.2013.869766
   Morales-Ramirez Itzel, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P232, DOI 10.1007/978-3-319-05843-6_17
   More A., 2016, SURVEY RESAMPLING TE
   Nicole, REDDITS 2019 YEAR RE
   Nielsen RD, 2009, NAT LANG ENG, V15, P479, DOI 10.1017/S135132490999012X
   Pagano D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P953, DOI 10.1109/ICSE.2013.6606645
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Rago A, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P63
   Rogers B, 2017, DESIGN COMPUTING AND COGNITION '16, P633, DOI 10.1007/978-3-319-44989-0_34
   Santos R., 2019, P REFSQ WORKSHOPS
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Thein Than Tun, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P131, DOI 10.1109/RE.2012.6345797
   Thilmany J, 2003, MECH ENG, V125, P44
   Villata S, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5729
   Wang WT, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376218
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Zhang SY, 2022, SOFTWARE PRACT EXPER, V52, P1402, DOI 10.1002/spe.3071
NR 77
TC 14
Z9 14
U1 0
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2022
VL 52
IS 12
BP 2537
EP 2573
DI 10.1002/spe.3137
EA AUG 2022
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A1NL
UT WOS:000840376700001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Camacho, C
   Cañizares, PC
   Llana, L
   Núñez, A
AF Camacho, Carlos
   Canizares, Pablo C.
   Llana, Luis
   Nunez, Alberto
TI Chaos as a Software Product Line-A platform for improving open
   hybrid-cloud systems resiliency
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; fault injection; Pystol; chaos engineering; software
   product lines; systems resiliency
ID FAULT INJECTION; DEPENDABILITY ANALYSIS; FRAMEWORK
AB Nowadays, cloud-native software architectures have a significant relevance due to the speed and agility they provide. These properties lead relevant organizations in different industries, like video streaming (Netflix), car-sharing (Uber, Cabify), banking (BBVA, HSBC), and governmental agencies (NASA, FBI, CERN, ESA) to heavily rely on cloud-native software to run their business-critical applications. Additionally, including fault injection actions in the production infrastructure allows companies to have consistent environments, to improve applications dependability against unexpected failures, to provide better user experience, and to improve the overall system quality. Thus, cloud computing technologies allow development teams to rapidly create complex systems and to continuously deploy them, at a global scale. This work describes Pystol, a novel fault injection platform-represented as a Software Product Line-to analyze the effects caused by a wide spectrum of adverse conditions. Pystol is designed to be executed on top of cloud-native environments, either in private or public clouds. The proposed architecture shows a way for representing feature models based on Unified Model Language (in short, UML) component diagrams. Furthermore, we present a thorough empirical study carried out in real-world environments, providing promising results.
C1 [Camacho, Carlos] Red Hat, R&D OpenStack Platform Dept, Prod & Technol Div, Madrid, Spain.
   [Canizares, Pablo C.] Autonomous Univ Madrid, Comp Sci Dept, Madrid, Spain.
   [Llana, Luis; Nunez, Alberto] Univ Complutense Madrid, Software Syst & Computat Dept, Madrid, Spain.
C3 Autonomous University of Madrid; Complutense University of Madrid
RP Camacho, C (corresponding author), Red Hat, R&D OpenStack Platform Dept, Prod & Technol Div, Madrid, Spain.
EM ccamacho@redhat.com
RI Cañizares, Pablo Cerro/Q-6082-2018; Nunez Covarrubias,
   Alberto/G-8259-2015
OI Cañizares, Pablo Cerro/0000-0002-2084-1558; Camacho Gonzalez,
   Carlos/0000-0003-2829-6387; Nunez Covarrubias,
   Alberto/0000-0001-8613-746X; LLANA DIAZ, LUIS
   FERNANDO/0000-0003-1962-1504
FU Comunidad de Madrid - Universidad Complutense [PR65/19-22452];
   MINECO/FEDER project [RTI2018-093608-B- C31, RTI2018-095255-B-I00,
   TIN2015-65845- C3-1-R]; Comunidad de Madrid [S2018/TCS-4339,
   S2018/TCS-4314]
FX Comunidad de Madrid - Universidad Complutense : PR65/19-22452;
   MINECO/FEDER project, Grant/Award Numbers: RTI2018-093608-B- C31,
   RTI2018-095255-B-I00, TIN2015-65845- C3-1-R; Comunidad de Madrid,
   Grant/Award Numbers: (BLOQUES-CM) S2018/TCS-4339, S2018/TCS-4314
CR Abu-Rgheff M.A., 2019, 5G PHYS LAYER TECHNO
   Andrés C, 2013, INFORM SOFTWARE TECH, V55, P1925, DOI 10.1016/j.infsof.2013.05.005
   [Anonymous], 2002, P WORKSH SELF HEAL A
   Balco P, 2017, PROCEDIA COMPUT SCI, V109, P1022, DOI 10.1016/j.procs.2017.05.375
   Barenco M, 2004, DYNAM SYST, V19, P61, DOI 10.1080/14689360310001649405
   Basiri A, 2016, IEEE SOFTWARE, V33, P35, DOI 10.1109/MS.2016.60
   Bessani A.N., 2011, bft-smart - high-performance byzantine-fault-tolerant state machine replication
   Buyval A, 2018, IEEE INT CONF ROBOT, P2064
   Camacho C, 2019, J LOG ALGEBR METHODS, V107, P54, DOI 10.1016/j.jlamp.2019.05.007
   Camacho C, 2016, J LOG ALGEBR METHODS, V85, P227, DOI 10.1016/j.jlamp.2015.09.009
   Cerin C., 2013, DOWNTIME STAT CURREN, P2
   Chang V, 2016, INT J INFORM MANAGE, V36, P155, DOI 10.1016/j.ijinfomgt.2015.09.008
   Chaos L., LITMUS
   CLARK JA, 1995, COMPUTER, V28, P47, DOI 10.1109/2.386985
   Dawson S, 1996, DIG PAP INT SYMP FAU, P404, DOI 10.1109/FTCS.1996.534626
   DeLong TA, 2005, IEEE T RELIAB, V54, P498, DOI 10.1109/TR.2005.853567
   Erradi A, 2021, IEEE T SERV COMPUT, V14, P1638, DOI 10.1109/TSC.2019.2918776
   FINELLI GB, 1987, IEEE T RELIAB, V36, P164, DOI 10.1109/TR.1987.5222333
   Grohmann J, 2019, MIDDLEWARE'19: PROCEEDINGS OF THE 2019 MIDDLEWARE'19: 20TH INTERNATIONAL MIDDLEWARE CONFERENCE, P149, DOI 10.1145/3361525.3361543
   Gunawi H., 2011, P NSDI 11 8 USENIX S, P239
   Heorhiadi V, 2016, INT CON DISTR COMP S, P57, DOI 10.1109/ICDCS.2016.11
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   Joshi P., 2013, P 1 ACM SIGOPS C TIM, P1
   Juszczyk L, 2010, LECT NOTES COMPUT SC, V6470, P411, DOI 10.1007/978-3-642-17358-5_28
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kapitsaki GM., 2016, P 2016 23 AS PAC SOF
   Keller Lorenzo., 2008, AFEX AUTOMATED FAULT
   Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001
   Ledenev A., KUBE MONKEY
   Linkhorst M., 2018, CHAOSKUBE
   Looker N, 2004, P INT COMP SOFTW APP, P120
   Madanapalli SC, 2019, PROCEEDINGS OF THE 3RD NETWORK TRAFFIC MEASUREMENT AND ANALYSIS CONFERENCE (TMA 2019), P41, DOI 10.23919/TMA.2019.8784609
   Moltó G, 2017, EUROMICRO WORKSHOP P, P486, DOI 10.1109/PDP.2017.29
   Nabi M, 2016, J NETW COMPUT APPL, V60, P54, DOI 10.1016/j.jnca.2015.11.014
   Naik VK, 2013, IEEE INT CONF CLOUD, P816, DOI 10.1109/CLOUD.2013.145
   Natella R, 2013, IEEE T SOFTWARE ENG, V39, P80, DOI 10.1109/TSE.2011.124
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Piraghaj SF, 2015, IEEE WORLD CONGR SER, P31, DOI 10.1109/SERVICES.2015.14
   PowerfulSeal, 2017, POW TEST TOOL KUB CL
   Segall Z., 1988, DIGEST OF PAPERS
   SHIN KG, 1991, COMPUTER, V24, P25, DOI 10.1109/2.76284
   Singh HK, 2015, 2015 IEEE 2ND INTERNATIONAL CONFERENCE ON RECENT TRENDS IN INFORMATION SYSTEMS (RETIS), P157, DOI 10.1109/ReTIS.2015.7232870
   Singh LK, 2018, IEEE T CONTR SYST T, V26, P415, DOI 10.1109/TCST.2017.2669147
   Singh NK, 2015, 2015 1ST INTERNATIONAL CONFERENCE ON NEXT GENERATION COMPUTING TECHNOLOGIES (NGCT), P81, DOI 10.1109/NGCT.2015.7375087
   Sochos P., 2004, OBJECT ORIENTED INTE
   Sturrus E, 2014, COMPUTER, V47, P85, DOI 10.1109/MC.2014.159
   Torkura KA, 2020, IEEE ACCESS, V8, P123044, DOI 10.1109/ACCESS.2020.3007338
   Valiev M., 2018, P 2018 26 ACM JOINT
   van de Storm T., 2004, SOFTWARE REUSE METHO
   White J, 2014, J SYST SOFTWARE, V87, P119, DOI 10.1016/j.jss.2013.10.010
   Yaqub E, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2014), P59, DOI 10.1109/SCC.2014.17
   Zhang J, 2018, IEEE COMMUN SURV TUT, V20, P2324, DOI 10.1109/COMST.2018.2816042
   Zhang L, 2021, IEEE T SOFTWARE ENG, V47, P2534, DOI 10.1109/TSE.2019.2954871
   Ziadi Tewfik., 2006, SOFTWARE PRODUCT LIN, P557, DOI DOI 10.1007/978-3-540-33253-4_15
NR 54
TC 4
Z9 4
U1 4
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2022
VL 52
IS 7
BP 1581
EP 1614
DI 10.1002/spe.3076
EA FEB 2022
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1X8ZE
UT WOS:000755351700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Goenawan, IH
   Du, ZH
   Wu, C
   Sun, YK
   Wei, JY
   Bader, DA
AF Goenawan, Ivan Hendy
   Du, Zhihui
   Wu, Chao
   Sun, Yankui
   Wei, Jianyan
   Bader, David A.
TI Dynamics signature based anomaly detection
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE anomaly detection; dynamics features; gravitational microlensing;
   periodic variable stars; time series
ID PLANET
AB Identifying anomalies, especially weak anomalies in constantly changing targets, is more difficult than in stable targets. In this article, we borrow the dynamics metrics and propose the concept of dynamics signature (DS) in multi-dimensional feature space to efficiently distinguish the abnormal event from the normal behaviors of a variable star. The corresponding dynamics criterion is proposed to check whether a star's current state is an anomaly. Based on the proposed concept of DS, we develop a highly optimized DS algorithm that can automatically detect anomalies from millions of stars' high cadence sky survey data in real-time. Microlensing, which is a typical anomaly in astronomical observation, is used to evaluate the proposed DS algorithm. Two datasets, parameterized sinusoidal dataset containing 262,440 light curves and real variable stars based dataset containing 462,996 light curves are used to evaluate the practical performance of the proposed DS algorithm. Experimental results show that our DS algorithm is highly accurate, sensitive to detecting weak microlensing events at very early stages, and fast enough to process 176,000 stars in less than 1 s on a commodity computer.
C1 [Goenawan, Ivan Hendy; Sun, Yankui] Tsinghua Univ, Dept Comp Sci & Technol, Beijing, Peoples R China.
   [Du, Zhihui; Bader, David A.] New Jersey Inst Technol, Dept Data Sci, Newark, NJ 07102 USA.
   [Wu, Chao; Wei, Jianyan] Chinese Acad Sci, Natl Astron Observ, Beijing 100012, Peoples R China.
C3 Tsinghua University; New Jersey Institute of Technology; Chinese Academy
   of Sciences; National Astronomical Observatory, CAS
RP Du, ZH (corresponding author), New Jersey Inst Technol, Dept Data Sci, Newark, NJ 07102 USA.; Wu, C (corresponding author), Chinese Acad Sci, Natl Astron Observ, Beijing 100012, Peoples R China.
EM zhihuidu@gmail.com; cwu@nao.cas.cn
RI Sun, Yankui/AAD-2524-2019; Liu, Yujie/IWU-6535-2023; Yang,
   Tian/JFB-1008-2023; Du, Zhihui/AAB-6115-2019; Bader,
   David/AAI-4029-2021; Zhang, Yunxuan/IXD-9283-2023; fang,
   li/JNS-8415-2023; zhang, yuyang/IVV-5089-2023; yang, xu/JMP-5558-2023
OI Liu, Yujie/0000-0002-1153-6156; Du, Zhihui/0000-0002-8435-1611; Bader,
   David/0000-0002-7380-5876; Sun, Yankui/0000-0001-7155-8261
FU Key Research and Development Program of China [2016YFB1000602]; National
   Science foundation [2109988]; MOE Research Center for Online Education
   Foundation [2016ZD302]; National Natural Science Foundation of China
   [11690023, 61762074, 61073008, 61272087, 61440057]; Direct For Computer
   & Info Scie & Enginr; Division of Computing and Communication
   Foundations [2109988] Funding Source: National Science Foundation
FX Key Research and Development Program of China, Grant/Award Number:
   2016YFB1000602; National Science foundation, Grant/Award Number:
   2109988; MOE Research Center for Online Education Foundation,
   Grant/Award Number: 2016ZD302; National Natural Science Foundation of
   China, Grant/Award Numbers: 11690023, 61762074, 61073008, 61272087,
   61440057
CR Afonso C., 2003, ASTROPH0303647 ARXIV
   Ahmad S., 2016, NEURONS OPERATE SPAR
   Albrow M, 1998, ASTROPHYS J, V509, P687, DOI 10.1086/306513
   Alcock C, 2000, ASTROPHYS J, V541, P734, DOI 10.1086/309484
   Beaulieu JP, 2006, NATURE, V439, P437, DOI 10.1038/nature04441
   Bhardwaj N, 2021, BIG DATA MIN ANAL, V4, P94, DOI 10.26599/BDMA.2020.9020020
   Bozza V, 2012, MON NOT R ASTRON SOC, V424, P902, DOI 10.1111/j.1365-2966.2012.21233.x
   Burgdorf MJ, 2007, PLANET SPACE SCI, V55, P582, DOI 10.1016/j.pss.2006.04.036
   Chen H., 2018, ANOMALY DETECTION ST
   Cordier B., 2015, ARXIV PREPRINT ARXIV
   Feng TZ, 2017, IEEE INT CONGR BIG, P224, DOI 10.1109/BigDataCongress.2017.38
   Gaudi BS, 2012, ANNU REV ASTRON ASTR, V50, P411, DOI 10.1146/annurev-astro-081811-125518
   Godines D, 2019, ASTRON COMPUT, V28, DOI 10.1016/j.ascom.2019.100298
   Heinze AN, 2018, ASTRON J, V156, DOI 10.3847/1538-3881/aae47f
   Huijse P, 2014, IEEE COMPUT INTELL M, V9, P27, DOI 10.1109/MCI.2014.2326100
   Ji C, 2020, SOFTWARE PRACT EXPER, V50, P2065, DOI 10.1002/spe.2756
   Kim H, 2018, ACM T GRAPHIC, V37, DOI 10.1145/3197517.3201283
   Lu RJ, 2021, TSINGHUA SCI TECHNOL, V26, P48, DOI 10.26599/TST.2019.9010047
   Malhotra P., 2015, ESANN, V89, P89
   Mao SD, 2012, RES ASTRON ASTROPHYS, V12, P947, DOI 10.1088/1674-4527/12/8/005
   McGhee M., 2018, DETECTING PRIMORDIAL
   Moniez M, 2010, GEN RELAT GRAVIT, V42, P2047, DOI 10.1007/s10714-009-0925-4
   Morgan SM, 2003, PUBL ASTRON SOC PAC, V115, P1250, DOI 10.1086/377372
   Motch C, 2017, ASTRON NACHR, V338, P978, DOI 10.1002/asna.201713415
   Nun I, 2016, ASTRON J, V152, DOI 10.3847/0004-6256/152/3/71
   Poleski R, 2019, ASTRON COMPUT, V26, P35, DOI 10.1016/j.ascom.2018.11.001
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   Price-Whelan AM, 2014, ASTROPHYS J, V781, DOI 10.1088/0004-637X/781/1/35
   Qiu JM, 2018, PUBL ASTRON SOC PAC, V130, DOI 10.1088/1538-3873/aada6f
   Rajpaul V., 2012, THESIS U CAPE TOWN
   Rebbapragada U, 2009, ASTR SOC P, V411, P264
   Sackett PD., 1997, ASTROPH9709269 ARXIV
   Safaei M, 2020, SOFTWARE PRACT EXPER, V50, P428, DOI 10.1002/spe.2785
   Solaimani M, 2016, SOFTWARE PRACT EXPER, V46, P1479, DOI 10.1002/spe.2390
   Sumi T, 2011, NATURE, V473, P349, DOI 10.1038/nature10092
   Tsapras Y, 2016, MON NOT R ASTRON SOC, V457, P1320, DOI 10.1093/mnras/stw023
   Udalski A., 2004, ASTROPH0401123 ARXIV
   Udalski A., 1994, ASTROPH9408026 ARXIV
   Wei J., 2016, ARXIV PREPRINT ARXIV
   Wyrzykowski L, 2015, ASTROPHYS J SUPPL S, V216, DOI 10.1088/0067-0049/216/1/12
NR 40
TC 2
Z9 2
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2023
VL 53
IS 1
SI SI
BP 160
EP 175
DI 10.1002/spe.3052
EA NOV 2021
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7B2CV
UT WOS:000718341100001
DA 2024-07-18
ER

PT J
AU Jammalamadaka, K
   Parveen, N
AF Jammalamadaka, Kiran
   Parveen, Nikhat
TI Equivalent mutant identification using hybrid wavelet convolutional rain
   optimization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE classification; equivalent mutants; mutation testing; optimization; RIPR
   model; wavelet function
AB Mutation testing is a significant software testing approach that identifies the faults present in the source codes and the potentiality of the test cases in detecting the mutated codes. In this testing approach, equivalent mutant detection is complicated as the test cases will not identify the mutated codes from the source program. To overcome this problem, the article proposes a novel hybrid strategy known as the hybrid wavelet convolutional rain optimization (HWCRO) to classify the equivalent mutants present in the source codes accurately. The proposed technique considers three different classes of equivalent mutants based on the RIPR model and exactly identifies the mutated code. Initially, the features such as the semantic similarity and the information entropy are extracted, and these features are given as the input to the wavelet convolutional neural network (wCNN) classifier. The dimensions of the features are reduced in the convolutional layers using the wavelet function, which enhances the classifier's performance. To improve the classification accuracy, the loss function is minimized with an adaptive rain optimization algorithm (ROA) that iteratively tunes the parameter of wCNN. The proposed approach is compared with the existing classification techniques based on the parameters such as precision, recall, f1-score, and accuracy, and the simulation results yielded 85.17% accuracy value for the proposed approach.
C1 [Jammalamadaka, Kiran; Parveen, Nikhat] Koneru Lakshmaiah Educ Fdn, Dept Comp Sci & Engn, Guntur, Andhra Pradesh, India.
C3 Koneru Lakshmaiah Education Foundation (K L Deemed to be University)
RP Jammalamadaka, K (corresponding author), Koneru Lakshmaiah Educ Fdn, Dept Comp Sci & Engn, Guntur, Andhra Pradesh, India.
EM jvskkiran@yahoo.com
RI Parveen, Nikhat/IUM-8961-2023
OI Parveen, Nikhat/0000-0003-2939-0025
CR Al Kontar K., 2019, P 2019 IEEE CHILEAN, P1
   Bashir MB, 2017, IEEE ACCESS, V5, P3657, DOI 10.1109/ACCESS.2017.2678200
   Carvalho L, 2017, ACM INT CONF PR SER, P11, DOI 10.1145/3168365.3168379
   Neto FGD, 2020, IEEE ICST WORKSHOP, P254, DOI 10.1109/ICSTW50294.2020.00051
   Foltynek T., 2020, P ACM IEEE JOINT C D, P523, DOI DOI 10.1145/3383583.3398594
   Ghiduk AS, 2019, IEEE ACCESS, V7, P163767, DOI 10.1109/ACCESS.2019.2952246
   Gómez-Abajo P, 2021, SOFTW SYST MODEL, V20, P767, DOI 10.1007/s10270-020-00827-0
   Houshmand M, 2017, PROCEEDINGS OF THE 2017 7TH INTERNATIONAL CONFERENCE ON COMPUTER AND KNOWLEDGE ENGINEERING (ICCKE), P326, DOI 10.1109/ICCKE.2017.8167900
   Jain N, 2019, ADV INTELL SYST, V731, P699, DOI 10.1007/978-981-10-8848-3_68
   Jatana N, 2020, J KING SAUD UNIV-COM, V32, P514, DOI 10.1016/j.jksuci.2019.05.004
   Kintis Marinos, 2018, IEEE Transactions on Software Engineering, V44, P308, DOI 10.1109/TSE.2017.2684805
   Kintis M, 2018, EMPIR SOFTW ENG, V23, P2426, DOI 10.1007/s10664-017-9582-5
   Li N, 2017, IEEE T SOFTWARE ENG, V43, P372, DOI 10.1109/TSE.2016.2597136
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Mao DY, 2019, IEEE INT CONF SOFTW, P160, DOI 10.1109/ICST.2019.00025
   Marsit I., 2018, SOFTW TECHN 15 INT C, P55
   Naeem MR, 2019, IEEE ACCESS, V7, P158264, DOI 10.1109/ACCESS.2019.2950171
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Qiang Hu, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P1158, DOI 10.1109/ASE.2019.00126
   Shin D, 2018, IEEE T SOFTWARE ENG, V44, P914, DOI 10.1109/TSE.2017.2732347
   Siqueira BR, 2020, IEEE ICST WORKSHOP, P284, DOI 10.1109/ICSTW50294.2020.00054
   Sun CA, 2017, INFORM SOFTWARE TECH, V81, P65, DOI 10.1016/j.infsof.2016.02.006
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Tufano M, 2020, PROC INT CONF SOFTW, P29, DOI 10.1145/3377812.3382146
   Xiao L, 2020, DISTRIB PARALLEL DAT, V38, P687, DOI 10.1007/s10619-020-07291-1
   Yao Y, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P536, DOI 10.1109/QRS-C.2019.00112
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
NR 27
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 576
EP 593
DI 10.1002/spe.3038
EA OCT 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000703317600001
DA 2024-07-18
ER

PT J
AU Zhan, JY
   Zhou, XZ
   Jiang, W
AF Zhan, Jinyu
   Zhou, Xingzhi
   Jiang, Wei
TI Field programmable gate array-based all-layer accelerator with
   quantization neural networks for sustainable cyber-physical systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cyber&#8208; physical systems; FPGA&#8208; based accelerator; low&#8208;
   bit neural network; quantization
AB Low-Bit Neural Network (LBNN) is a promising technique to enrich intelligent applications running on sustainable Cyber-Physical Systems (CPS). Although LBNN has the advantages of low memory usage, fast inference and low power consumption, Low-bit design requires additional computation units and may cause large accuracy drop. In this paper, we approach to design Field Programmable Gate Array (FPGA)-based LBNN accelerator to support sustainable CPS. First, we propose a method to quantize the neural networks into 2-bit weights, 8-bit activations and 8-bit biases with few accuracy loss. The mapping function is presented to approximate discrete space of weights gradually and quantize the activations and biases through the improved straight-through estimator. Second, we design the bitwise FPGA-based accelerator to speed up the LBNN. Different from traditional accelerating techniques (mainly focused on convolution layer), the dataflows of fully connected layer, pooling layer and convolution layer are considered to accelerate all layers of neural networks. The 2x8 bitwise multiplier implemented by AND/XOR operation is devised to replace 32x32-bit multiplication unit, which can bring faster inference and lower power consumption. We conduct extensive experiments on benchmarks of MNIST, CIFAR-10, CIFAR-100 and ImageNet to evaluate the efficiency of our approach. The LBNN obtained by our quantization method can save 93.75% memory with 2.26% accuracy loss on average compared with original networks. The FPGA-based accelerator achieves a peak performance of 427.71 GOPS under 100 MHz working frequency, which outperforms previous approaches significantly.
C1 [Zhan, Jinyu; Zhou, Xingzhi; Jiang, Wei] Univ Elect Sci & Technol China, Sch Informat & Software Engn, Chengdu, Sichuan, Peoples R China.
C3 University of Electronic Science & Technology of China
RP Zhan, JY (corresponding author), Univ Elect Sci & Technol China, Sch Informat & Software Engn, Chengdu, Sichuan, Peoples R China.
EM zhanjy@uestc.edu.cn
OI Zhou, Xingzhi/0009-0001-9496-0285; Jiang, Wei/0000-0001-6181-3900
FU Fundamental Research Funds for the Central Universities of China
   [ZYGX2019J078]; National Key laboratory of Computer Architecture of
   China [CARCH201811]; National Natural Science Foundation of China
   [62072076]
FX Fundamental Research Funds for the Central Universities of China,
   Grant/Award Number: ZYGX2019J078; National Key laboratory of Computer
   Architecture of China, Grant/Award Number: CARCH201811; National Natural
   Science Foundation of China, Grant/Award Number: 62072076
CR [Anonymous], 2016, P INT C LEARNING REP
   Bengio Y., 2013, ARXIV
   Bulat Adrian, 2019, BMVC
   Chen WL, 2015, PR MACH LEARN RES, V37, P2285
   Courbariaux M, 2015, ADV NEUR IN, V28
   Esser SK, 2016, P NATL ACAD SCI USA, V113, P11441, DOI 10.1073/pnas.1604850113
   Guan YJ, 2017, ANN IEEE SYM FIELD P, P152, DOI 10.1109/FCCM.2017.25
   Guo KY, 2018, IEEE T COMPUT AID D, V37, P35, DOI 10.1109/TCAD.2017.2705069
   Gysel PM., 2016, Ristretto: Hardware-oriented approximation of convolutional neural networks
   Han S, 2017, FPGA'17: PROCEEDINGS OF THE 2017 ACM/SIGDA INTERNATIONAL SYMPOSIUM ON FIELD-PROGRAMMABLE GATE ARRAYS, P75, DOI 10.1145/3020078.3021745
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hu QM, 2018, AAAI CONF ARTIF INTE, P3255
   Hubara I, 2016, ADV NEUR IN, V29
   Jiang W, 2020, J SYST ARCHITECT, V110, DOI 10.1016/j.sysarc.2020.101775
   Jiang WW, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358192
   Jiang WW, 2019, PROCEEDINGS OF THE 2019 56TH ACM/EDAC/IEEE DESIGN AUTOMATION CONFERENCE (DAC), DOI 10.1145/3316781.3317757
   Jiao Li., 2017, Field Programmable Logic and Applications (FPL), 2017 27th International Conference on, P1
   Krizhevsky A., 2009, LEARNING MULTIPLE LA, DOI DOI 10.1145/3065386
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   [李凡杰 Li Fanjie], 2016, [低温工程, Cryogenics], P1
   Li LY, 2020, INTERACT LEARN ENVIR, V28, P948, DOI 10.1080/10494820.2019.1707693
   Li Y, 2020, ASIA S PACIF DES AUT, P556, DOI 10.1109/ASP-DAC47756.2020.9045372
   Lin SH, 2019, IEEE T PATTERN ANAL, V41, P2889, DOI 10.1109/TPAMI.2018.2873305
   Lin XF, 2017, ADV NEUR IN, V30
   Liu W, 2016, LECT NOTES COMPUT SC, V9905, P21, DOI 10.1007/978-3-319-46448-0_2
   Liu Z, 2017, P NEUROMORPHIC COMPU
   Liu ZQ, 2016, 2016 INTERNATIONAL CONFERENCE ON FIELD-PROGRAMMABLE TECHNOLOGY (FPT), P61, DOI 10.1109/FPT.2016.7929190
   Micikevicius Paulius, 2018, 6 INT C LEARNING REP
   Nakahara H, 2017, 2017 INTERNATIONAL CONFERENCE ON FIELD PROGRAMMABLE TECHNOLOGY (ICFPT), P168, DOI 10.1109/FPT.2017.8280135
   Rastegari M, 2016, LECT NOTES COMPUT SC, V9908, P525, DOI 10.1007/978-3-319-46493-0_32
   Redmon J, 2016, PROC CVPR IEEE, P779, DOI 10.1109/CVPR.2016.91
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Suda N, 2016, PROCEEDINGS OF THE 2016 ACM/SIGDA INTERNATIONAL SYMPOSIUM ON FIELD-PROGRAMMABLE GATE ARRAYS (FPGA'16), P16, DOI 10.1145/2847263.2847276
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Wang PS, 2018, PROC CVPR IEEE, P4376, DOI 10.1109/CVPR.2018.00460
   Wang Y H, 2016, SUSTAINABILITY, V9, P1, DOI DOI 10.14257/IJSIP.2016.9.1.32
   Wu JX, 2016, PROC CVPR IEEE, P4820, DOI 10.1109/CVPR.2016.521
   Xilinx, 2018, XILINX XFDNN
   Xilinx, 2018, XILINX CHAIDNN
   Zhang C, 2015, P 2015 ACM SIGDA INT, P61
   Zhou JL, 2020, IEEE T SERV COMPUT, V13, P745, DOI 10.1109/TSC.2019.2963301
   Zhou Shuchang, 2016, ARXIV160606160
NR 42
TC 2
Z9 2
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2203
EP 2224
DI 10.1002/spe.2938
EA DEC 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000595324200001
DA 2024-07-18
ER

PT J
AU Saifan, AA
   Obeidat, L
AF Saifan, Ahmad A.
   Obeidat, Lana
TI Feature location enhancement based on source code augmentation with
   synonyms of terms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE augmentation with synonyms; feature location; latent semantic indexing;
   software documentation; software engineering
ID PROGRAM COMPREHENSION; SOFTWARE MAINTENANCE
AB In software maintenance the developers may add new feature to program, improve existing function, and remove bugs. In this case the developer should identify the location in the source code that corresponds to a specific functionality; this is known as feature location. This presents a new approach for enhancing the process of feature location using Information Retrieval (IR) and Natural Language Processing. The approach presented augments the source code with additional semantic information that was extracted and derived from the synonyms of source code terms. This approach works in a pipeline structure, starting by augmenting the source code corpus with synonyms of the original terms and ending by inferring the source code with a particular user query. More specifically, the WordNet platform is used for extracting the synonyms of terms. Moreover, the approach uses an advanced IR technique, namely the Latent Semantic Indexing, for searching and inferring the source code. The used approach was tested and evaluated on two open source systems, namely the Qt and Hippodraw. Four experiments were conducted on each system using 21 features and the results showed that enriching the source code with synonyms of terms clearly and significantly improved the process of feature location efficiently. The experimental results showed that the approach presented obtained higher levels of Recall and Precision. For that reason, it has been shown to improve the state-of-the-art techniques for feature location process.
C1 [Saifan, Ahmad A.; Obeidat, Lana] Yarmouk Univ, Fac IT, Informat Syst Dept, Irbid, Jordan.
C3 Yarmouk University
RP Saifan, AA (corresponding author), Yarmouk Univ, Fac IT, Informat Syst Dept, Irbid, Jordan.
EM ahmads@yu.edu.jo; lana_obd@yahoo.com
OI Saifan, Ahmad/0000-0002-4974-8939
CR Al-Anzi FS, 2017, J KING SAUD UNIV-COM, V29, P189, DOI 10.1016/j.jksuci.2016.04.001
   Alhindawi N, 2013, PROC IEEE INT CONF S, P300, DOI 10.1109/ICSM.2013.41
   Andam Berima, 2017, P 11 INT WORKSH VAR, P100, DOI DOI 10.1145/3023956.3023967
   [Anonymous], 2010, Search engines: Information retrieval in practice
   Antoniol G, 2003, EMPIR SOFTW ENG, V8, P225, DOI 10.1023/A:1024472727275
   Bassett B, 2013, CONF PROC INT SYMP C, P133, DOI 10.1109/ICPC.2013.6613841
   BENDIFALLAH S, 1987, IEEE T SOFTWARE ENG, V13, P311, DOI 10.1109/TSE.1987.233162
   Bigelow JL, 2016, CYBERSAFETY 2016 WORKSHOP, P11, DOI 10.1145/3002137.3002144
   Binkley David., 2010, Encyclopedia of Software Engineering, P454
   Candès EJ, 2011, J ACM, V58, DOI 10.1145/1970392.1970395
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   Corley CS, 2015, PROC IEEE INT CONF S, P556, DOI 10.1109/ICSM.2015.7332513
   Dirgahayu T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON CYBERNETICS AND COMPUTATIONAL INTELLIGENCE (CYBERNETICSCOM), P122, DOI 10.1109/CYBERNETICSCOM.2017.8311696
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Eddy BP, 2014, PROC IEEE INT CONF S, P431, DOI 10.1109/ICSME.2014.68
   Egyed A, 2007, PROC INT CONF SOFTW, P41, DOI 10.1109/ICSECOMPANION.2007.70
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   Farrell J, 2012, JUST ENOUGH PROGRAMM
   Font J, 2016, LECT NOTES COMPUT SC, V9679, P39, DOI 10.1007/978-3-319-35122-3_3
   GOLUB GH, 1970, NUMER MATH, V14, P403, DOI 10.1007/BF02163027
   Gupta M, 2017, PROC IEEE INT CONF S, P681, DOI 10.1109/ICSME.2017.39
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1307, DOI 10.1109/ICSE.2013.6606704
   Hanandeh Feras, 2017, International Journal of Open Source Software and Processes, V8, P1, DOI 10.4018/IJOSSP.2017010101
   Hofmann Thomas, 2017, ACM SIGIR Forum, V51, P211, DOI 10.1145/3130348.3130370
   Huo X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1909
   Khatiwada S., 2016, International Conference on Program Comprehension, P1
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lientz B P., 1980, Software Maintenance Management
   Liu D, 2007, P 22 IEEE ACM INT C, P234
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Mirzal Andri, 2016, International Journal of Information and Decision Sciences, V8, P53
   Niu L, 2009, STUD COMPUT INTELL, V238, P1, DOI 10.1007/978-3-642-03208-0
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Papadimitriou CH, 2001, LECT NOTES COMPUT SC, V2076, P1
   Peng X, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-015-0860-9
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Saifan AA, 2017, 8 INT C INF TECHN IC
   Sari D., 2018, INT J ENG TECHNOLOGY, V7, P73
   Schröter I, 2017, INT C PROGRAM COMPRE, P308, DOI 10.1109/ICPC.2017.9
   Shao P, 2009, P 47 ANN SE REG C MA, P70
   Turver R. J., 1994, Journal of Software Maintenance: Research and Practice, V6, P35, DOI 10.1002/smr.4360060104
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Wilde N, 2003, J SYST SOFTWARE, V65, P105, DOI [10.1016/S0164-1212(02)00052-3, 10.1016/s0164-1212(02)00052-3]
   Willett P, 2006, PROGRAM-ELECTRON LIB, V40, P219, DOI 10.1108/00330330610681295
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
NR 53
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 235
EP 259
DI 10.1002/spe.2900
EA SEP 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000569917800001
DA 2024-07-18
ER

PT J
AU Cheng, W
   Guo, T
   Zeng, LF
   Wang, Y
   Nagel, L
   Süss, T
   Brinkmann, A
AF Cheng, Wen
   Guo, Tao
   Zeng, Lingfang
   Wang, Yang
   Nagel, Lars
   Suess, Tim
   Brinkmann, Andre
TI Improving LSM-trie performance by parallel search
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE key-value storage; LSM-tree; parallel search
AB LSM-trie-based key-value (KV) store is often used to manage an ultralarge dataset in reality by introducing a number of sublevels at each level, its linear growth pattern can fairly reduce the write amplification in store operations. Although this design is effective for the write operation, the last level holds a large proportion of KV items, leading to the extreme imbalance of data distribution. Therefore, to support efficient read, we need to carefully consider this imbalance. On the other hand, to ensure that acquired data is latest, the LSM-trie needs to search the dataset at different levels one by one, and this search method may take a lot of unnecessary time. When the number of items is ultralarge, the random lookup performance may be poor due to the imbalance data distribution. To address this issue, we improve the read performance of the LSM-trie by changing itsserial searchtoparallel search, using two threads to simultaneously search at the last level and other levels, respectively. Our experiment results show that the read performance of the LSM-trie can be improved up to98.35%and on average71.55%.
C1 [Cheng, Wen; Guo, Tao; Zeng, Lingfang] Huazhong Univ Sci & Technol, Wuhan Natl Lab Optoelect, Wuhan, Peoples R China.
   [Wang, Yang] Chinese Acad Sci, Shenzhen Inst Adv Technol, 1068 Xueyuan Blvd, Shenzhen 518055, Guangdong, Peoples R China.
   [Nagel, Lars] Loughborough Univ, Dept Comp Sci, Loughborough, Leics, England.
   [Suess, Tim; Brinkmann, Andre] Johannes Gutenberg Univ Mainz, Dept Comp Sci, Mainz, Germany.
C3 Huazhong University of Science & Technology; Chinese Academy of
   Sciences; Shenzhen Institute of Advanced Technology, CAS; Loughborough
   University; Johannes Gutenberg University of Mainz
RP Wang, Y (corresponding author), Chinese Acad Sci, Shenzhen Inst Adv Technol, 1068 Xueyuan Blvd, Shenzhen 518055, Guangdong, Peoples R China.
EM yang.wang1@siat.ac.cn
RI Brinkmann, André/H-9888-2016; lin, lin/KCZ-0185-2024; Nagel,
   Lars/B-7013-2018
OI Wang, Yang/0000-0001-9438-6060; Zeng, Lingfang/0000-0003-3130-3015;
   Nagel, Lars/0000-0002-1444-9541
FU National Natural Science Foundation of China [61472153, 61672513,
   61572377]; National Science Foundation of Hubei Province [2015CFB192];
   Science and Technology Planning Project of Guangdong Province
   [2019B010137002]; Key-Area Research and Development Program of Guangdong
   Province [2020B010164002]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   61472153, 61672513, 61572377; National Science Foundation of Hubei
   Province, Grant/Award Number: 2015CFB192; Science and Technology
   Planning Project of Guangdong Province, Grant/Award Number:
   2019B010137002; the Key-Area Research and Development Program of
   Guangdong Province, Grant/Award Number: 2020B010164002
CR Ahn JS, 2016, IEEE T COMPUT, V65, P902, DOI 10.1109/TC.2015.2435779
   Anand A, 2010, P 7 S NETW SYST DES
   Andersen DG, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P1
   [Anonymous], CUCKOO HASHING
   [Anonymous], 2011, Airways (Pty) Ltd v Aviation Union of South Africa Others 2011 (3) SA 148 (SCA) paras 25-26, P25, DOI DOI 10.1145/1989323.1989327
   Balmau O, 2017, PROCEEDINGS OF THE TWELFTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS 2017), P80, DOI 10.1145/3064176.3064193
   Bender MA, 2007, SPAA'07: PROCEEDINGS OF THE NINETEENTH ANNUAL SYMPOSIUM ON PARALLELISM IN ALGORITHMS AND ARCHITECTURES, P81
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Borthakur Dhruba, 2013, HOOD BUILDING OPEN S
   Buchsbaum AL, 2000, PROCEEDINGS OF THE ELEVENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P859
   Callaghan M., 2013, P 2013 ACM SIGMOD IN, P1185, DOI DOI 10.1145/2463676.2465296
   Chang M, 2006, P REL MAINT S, P7
   Cooper NE, 2010, UNDER CONTROL: GOVERNANCE ACROSS THE ENTERPRISE, P143, DOI 10.1007/978-1-4302-1593-6_10
   Dean Jeff, 2013, LEVELDB FAST LIGHTWE
   Debnath B, 2010, PROC VLDB ENDOW, V3, P1414, DOI 10.14778/1920841.1921015
   DeCandia Giuseppe, 2007, Operating Systems Review, V41, P205, DOI 10.1145/1323293.1294281
   Golan-Gueta Guy, 2015, P 10 EUR C COMP SYST
   HyperLevelDB, 2014, FORK LEV INT MEET NE
   Lai CB, 2015, IEEE S MASS STOR SYS
   Lim H, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P1
   Lu LY, 2016, 14TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES (FAST '16), P133
   Luo LB, 2017, IEEE T COMP INTEL AI, V9, P213, DOI 10.1109/TCIAIG.2016.2541168
   Memarzia P, 2019, IEEE INT CONF MOB DA, P118, DOI 10.1109/MDM.2019.00-66
   ONeil P, 1996, ACTA INFORM, V33, P351, DOI 10.1007/s002360050048
   Patrou M, 2018, 26TH ACM SIGSPATIAL INTERNATIONAL CONFERENCE ON ADVANCES IN GEOGRAPHIC INFORMATION SYSTEMS (ACM SIGSPATIAL GIS 2018), P496, DOI 10.1145/3274895.3274961
   Plugge E., 2010, DEFINITIVE GUIDE MON, V1st
   Sears Russell, 2012, P ACM SIGMOD INT C M, P217
   Shen ZY, 2017, PROCEEDINGS OF FAST '17: 15TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P391
   Shetty P.J., 2013, P PART 11 USENIX C F
   WU X., 2015, P USENIX ANN TECHN C
NR 30
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2020
VL 50
IS 10
BP 1952
EP 1965
DI 10.1002/spe.2875
EA AUG 2020
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ8HF
UT WOS:000554912900001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Xu, XH
   Liu, LQ
   Zhang, LJ
   Li, P
   Chen, JJ
AF Xu, Xianghua
   Liu, LiQiming
   Zhang, Lingjun
   Li, Ping
   Chen, Jinjun
TI Abnormal visual event detection based on multi-instance learning and
   autoregressive integrated moving average model in edge-based Smart City
   surveillance
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE abnormal visual event detection; autoregressive integrated moving
   average model; crowded scene; multi-instance learning; Smart City
ID ANOMALY DETECTION
AB The abnormal visual event detection is an important subject in Smart City surveillance where a lot of data can be processed locally in edge computing environment. Real-time and detection effectiveness are critical in such an edge environment. In this paper, we propose an abnormal event detection approach based on multi-instance learning and autoregressive integrated moving average model for video surveillance of crowded scenes in urban public places, focusing on real-time and detection effectiveness. We propose an unsupervised method for abnormal event detection by combining multi-instance visual feature selection and the autoregressive integrated moving average model. In the proposed method, each video clip is modeled as a visual feature bag containing several subvideo clips, each of which is regarded as an instance. The time-transform characteristics of the optical flow characteristics within each subvideo clip are considered as a visual feature instance, and time-series modeling is carried out for multiple visual feature instances related to all subvideo clips in a surveillance video clip. The abnormal events in each surveillance video clip are detected using the multi-instance fusion method. This approach is verified on publically available urban surveillance video datasets and compared with state-of-the-art alternatives. Experimental results demonstrate that the proposed method has better abnormal event detection performance for crowded scene of urban public places with an edge environment.
C1 [Xu, Xianghua; Liu, LiQiming; Zhang, Lingjun; Li, Ping] Hangzhou Dianzi Univ, Sch Comp Sci & Technol, Hangzhou 310037, Peoples R China.
   [Xu, Xianghua; Liu, LiQiming; Zhang, Lingjun; Li, Ping] Zhejiang Prov Key Lab Data Storage & Transmiss Te, Hangzhou 310037, Peoples R China.
   [Chen, Jinjun] Swinburne Univ Technol, Sch Software & Elect Engn, Hawthorn, Vic, Australia.
C3 Hangzhou Dianzi University; Swinburne University of Technology
RP Zhang, LJ (corresponding author), Hangzhou Dianzi Univ, Sch Comp Sci & Technol, Hangzhou 310037, Peoples R China.; Zhang, LJ (corresponding author), Zhejiang Prov Key Lab Data Storage & Transmiss Te, Hangzhou 310037, Peoples R China.
EM zhanglingjun@hdu.edu.cn
RI Chen, Jinjun/AAP-2361-2020
CR Adam A, 2008, IEEE T PATTERN ANAL, V30, P555, DOI 10.1109/TPAMI.2007.70825
   Benezeth Y, 2009, 2009 IEEE C COMP VIS
   Calavia L, 2012, SENSORS-BASEL, V12, P10407, DOI 10.3390/s120810407
   Cong Y, 2011, PROC CVPR IEEE, P1807, DOI 10.1109/CVPR.2011.5995434
   Davy M, 2006, SIGNAL PROCESS, V86, P2009, DOI 10.1016/j.sigpro.2005.09.027
   FARNEBACK G, 2003, 13 SCAND C IM AN HAL
   GEURTS M, 1977, J MARKETING RES, V14, P269, DOI 10.2307/3150485
   Huo J, 2014, INT J NEURAL SYST, V24, DOI 10.1142/S0129065714300101
   Khoshkbarforoushha A, 2017, J COMPUT SYST SCI, V89, P24, DOI 10.1016/j.jcss.2016.11.002
   Khoshkbarforoushha A, 2017, IEEE T EMERG TOP COM, V5, P120, DOI 10.1109/TETC.2016.2597546
   Kim Jaechul, 2009, 2009 IEEE C COMP VIS
   Li C, 2013, NEUROCOMPUTING, V119, P94, DOI 10.1016/j.neucom.2012.03.040
   Li F, 2015, IEEE COMPUT SOC CONF
   Lippi M, 2013, IEEE T INTELL TRANSP, V14, P871, DOI 10.1109/TITS.2013.2247040
   Mehran R, 2009, 2009 IEEE C COMP VIS
   Morris BT, 2011, IEEE T PATTERN ANAL, V33, P2287, DOI 10.1109/TPAMI.2011.64
   Piciarelli C, 2006, PATTERN RECOGN LETT, V27, P1835, DOI 10.1016/j.patrec.2006.02.004
   Qin MJ, 2017, KNOWL-BASED SYST, V125, P39, DOI 10.1016/j.knosys.2017.03.027
   Reddy V, 2013, IEEE COMP SOC C COMP
   Sabokrou M, 2015, IEEE COMPUT SOC CONF
   Singh D, 2016, IEEE WINT CONF APPL
   Tsay R. S., 2005, ANAL FINANCIAL TIME, DOI DOI 10.1002/0471746193
   Wang H, 2013, IEEE I CONF COMP VIS, P3551, DOI 10.1109/ICCV.2013.441
   Wang H, 2013, INT J COMPUT VISION, V103, P60, DOI 10.1007/s11263-012-0594-8
   Wang L., 2012, 2012 19 IEEE INT C I
   Wang LZ, 2015, KNOWL-BASED SYST, V79, P43, DOI 10.1016/j.knosys.2014.10.004
   Wolf T, 2010, IEEE ICC
   Wong KTM, 2009, HARMFUL ALGAE, V8, P407, DOI 10.1016/j.hal.2008.09.001
   Wu SD, 2010, PROC CVPR IEEE, P2054, DOI 10.1109/CVPR.2010.5539882
   Xu D, 2014, NEUROCOMPUTING, V143, P144, DOI 10.1016/j.neucom.2014.06.011
   Yang WQ, 2013, COMPUT VIS IMAGE UND, V117, P1273, DOI 10.1016/j.cviu.2012.08.010
   Yogameena B, 2015, 2015 8 INT C ADV PAT
   Yuan Y, 2015, IEEE T CYBERNETICS, V45, P562, DOI 10.1109/TCYB.2014.2330853
   Zhang GP, 2003, NEUROCOMPUTING, V50, P159, DOI 10.1016/S0925-2312(01)00702-0
   Zhang ML, 2004, INT C INT INF PROC
   Zhou Z., 2006, Advances in Neural Information Processing Systems, P1609
   Zingoni A, 2017, REMOTE SENS-BASEL, V9, DOI 10.3390/rs9111128
NR 37
TC 6
Z9 6
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 476
EP 488
DI 10.1002/spe.2701
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000526578200002
DA 2024-07-18
ER

PT J
AU Nasar, N
   Ray, S
   Umer, S
   Pandey, HM
AF Nasar, Nasreen
   Ray, Sumati
   Umer, Saiyed
   Mohan Pandey, Hari
TI Design and data analytics of electronic human resource management
   activities through Internet of Things in an organization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE activities; data analytics; electronic human resource management; IoT
ID E-HRM
AB A novel design and data analytics for an electronic human resource management (e-HRM) system has been proposed in this article. E-HRM software is being widely used in big industries and institutions. This e-HRM is very cost-effective, competence, congruence, and commitment for the organization. At present, Internet of Things (IoT) have great impact on e-HRM, which gives various facilities and supports to e-HRM functionalities such as securities, standards, privacy, and regulations. The combination of e-HRM with IoT has wide applications for implementing policies, strategies, and practices within the organization. An e-HRM has mainly five activities: e-Selection, e-Recruitment, e-Performance, e-Compensation, and e-Learning. In this work, the proposed system has two parts. In the first part, the various e-HRM activities have been discussed and elaborated with examples. In the second part, the description of data analytics based on IoT for each e-HRM activity has been discussed and demonstrated. Here the data analytics part is divided into four components: (a) data preprocessing; (b) feature selection; (c) data classification; and (d) performance evaluation. Extensive experimentation has been performed for each e-HRM activity using four HR analytic datasets from Kaggle site, and finally, the performance with proper justifications has been exquisitely done using each dataset respect to each e-HRM activity.
C1 [Nasar, Nasreen] Aliah Univ, Dept Management & Business Adm, Kolkata, India.
   [Ray, Sumati] Indian Inst Social Welf & Business Management, Kolkata, India.
   [Umer, Saiyed] Aliah Univ, Dept Comp Sci & Engn, Kolkata, India.
   [Mohan Pandey, Hari] Edge Hill Univ, Dept Comp Sci, Ormskirk, Lancs, England.
C3 Aliah University; Aliah University; Edge Hill University
RP Pandey, HM (corresponding author), Edge Hill Univ, Dept Comp Sci, Ormskirk, Lancs, England.
EM hari.pandey@edgehill.ac.uk
RI umer, saiyed/ABD-1070-2021; Pandey, Hari Mohan/M-9658-2015
OI umer, saiyed/0000-0002-1476-041X; Pandey, Hari Mohan/0000-0002-9128-068X
CR Alghafri A., 2015, American Journal of Economics, V5, P51, DOI DOI 10.5923/C.ECONOMICS.201501.02
   [Anonymous], RES WORLD J ARTS SCI
   Arjomandy D, 2016, CAN J ADM SCI, V33, P108, DOI 10.1002/cjas.1380
   Aswathappa K., 2005, Human Resource and Personnel Management. Text and Cases, VFourth
   Barman A., 2018, INT C
   Berwick R., 2003, An idiots guide to support vector machines (svms), V21, P2011
   Bondarouk TV, 2009, INT J HUM RESOUR MAN, V20, P505, DOI 10.1080/09585190802707235
   Bondarouk T, 2016, CAN J ADM SCI, V33, P124, DOI 10.1002/cjas.1376
   Bondarouk T, 2013, INT J HUM RESOUR MAN, V24, P391, DOI 10.1080/09585192.2012.675142
   Cai D., 2010, KDD, P333
   Chao W.-L., 2011, Digital Image and Signal Processing
   Chen HC, 2012, MIS QUART, V36, P1165
   COOK DS, 1986, HUM RESOURCE MANAGE, V25, P441, DOI 10.1002/hrm.3930250308
   Cunningham P., 2007, MULTIPLE CLASSIFIER, V34, P1, DOI DOI 10.1145/3459665
   Daume H., 2012, Publisher, V5, P69
   Dhar V, 2013, COMMUN ACM, V56, P64, DOI 10.1145/2500499
   Famili A., 1997, Intelligent Data Analysis, V1
   GIRARD A, 2009, E RECRUITMENT NEW PR, P39
   Han J, 2012, MOR KAUF D, P1
   Hooi L.W., 2006, ASIA PAC BUS REV, V12, P465
   Inda SS, 2016, INT J MULTIDISCIP RE, V3, P103
   Inuwa M., 2016, The Millennium University Journal, V1, P90, DOI DOI 10.58908/TMUJ.V1I1.10
   ITIKA J, 2011, AFRICAN PUBLIC ADM M
   Kotsiantis SB, 2006, PROC WRLD ACAD SCI E, V12, P278
   Leal B, 2010, INTERNET OF THINGS-BOOK, P3, DOI 10.1007/978-1-4419-1674-7_1
   MCGILL ME, 1992, ORGAN DYN, V21, P5, DOI 10.1016/0090-2616(92)90082-X
   Mohammed M., 2016, Machine Learning: Algorithms and Applications., DOI DOI 10.1201/9781315371658
   Noe R.A., 2017, HUMAN RESOURCE MANAG
   Panayotopoulou L, 2007, PERS REV, V36, P277, DOI 10.1108/00483480710726145
   Parry E, 2011, HUM RESOUR MANAG J, V21, P335, DOI 10.1111/j.1748-8583.2010.00149.x
   Ramsay JO., 2004, ENCY STAT SCI, V4, P147
   Rokach L, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P981, DOI 10.1007/978-0-387-09823-4_51
   Ruel Huub J. M., 2007, Employee Relations, V29, P280, DOI 10.1108/01425450710741757
   SANAYEI A., 2012, International Journal of Information Science and Management (IJISM), V6, P79
   Shalev-Shwartz S., 2014, UNDERSTANDING MACHIN, DOI 10.1017/CBO9781107298019
   Stone D. L., 2006, Human Resources Management Review, V16, P229, DOI 10.1016/j.hrmr.2006.03.010
   Stone DL, 2013, HUM RESOUR MANAGE R, V23, P50, DOI 10.1016/j.hrmr.2012.06.006
   Stone DL, 2009, HUM RESOUR MANAGE R, V19, P134, DOI 10.1016/j.hrmr.2008.11.003
   Strohmeier S., 2007, Human Resources Management Review, V17, P19, DOI 10.1016/j.hrmr.2006.11.002
   Suri K, 2017, 2017 IEEE 26TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES - INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P214, DOI 10.1109/WETICE.2017.54
   Tang J, 2014, I C NETWORK PROTOCOL, P374, DOI 10.1109/ICNP.2014.61
   Tansley C, 2001, PERS REV, V30, P351, DOI 10.1108/00483480110385870
   Voermans M, 2007, PERS REV, V36, P887, DOI 10.1108/00483480710822418
   Wiblen S, 2016, CAN J ADM SCI, V33, P95, DOI 10.1002/cjas.1378
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Yoon CY, 2009, IEEE 15TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P385, DOI 10.1109/PRDC.2009.67
   2017, EXPANDED HR ANAL DAT
   2017, JOB CLASSIFICATION D
   2018, HRTRAININ
   2018, HR ANAL PREDICTIVE A
NR 50
TC 6
Z9 6
U1 4
U2 64
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2411
EP 2427
DI 10.1002/spe.2817
EA MAR 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000518439600001
DA 2024-07-18
ER

PT J
AU Jha, DN
   Alwasel, K
   Alshoshan, A
   Huang, XH
   Naha, RK
   Battula, SK
   Garg, S
   Puthal, D
   James, P
   Zomaya, A
   Dustdar, S
   Ranjan, R
AF Jha, Devki Nandan
   Alwasel, Khaled
   Alshoshan, Areeb
   Huang, Xianghua
   Naha, Ranesh Kumar
   Battula, Sudheer Kumar
   Garg, Saurabh
   Puthal, Deepak
   James, Philip
   Zomaya, Albert
   Dustdar, Schahram
   Ranjan, Rajiv
TI IoTSim-Edge: A simulation framework for modeling the behavior of
   Internet of Things and edge computing environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE edge computing; Internet of Things; simulation; software
ID CLOUD; TOOLKIT
AB With the proliferation of Internet of Things (IoT) and edge computing paradigms, billions of IoT devices are being networked to support data-driven and real-time decision making across numerous application domains, including smart homes, smart transport, and smart buildings. These ubiquitously distributed IoT devices send the raw data to their respective edge device (eg, IoT gateways) or the cloud directly. The wide spectrum of possible application use cases make the design and networking of IoT and edge computing layers a very tedious process due to the: (i) complexity and heterogeneity of end-point networks (eg, Wi-Fi, 4G, and Bluetooth); (ii) heterogeneity of edge and IoT hardware resources and software stack; (iv) mobility of IoT devices; and (iii) the complex interplay between the IoT and edge layers. Unlike cloud computing, where researchers and developers seeking to test capacity planning, resource selection, network configuration, computation placement, and security management strategies had access to public cloud infrastructure (eg, Amazon and Azure), establishing an IoT and edge computing testbed that offers a high degree of verisimilitude is not only complex, costly, and resource-intensive but also time-intensive. Moreover, testing in real IoT and edge computing environments is not feasible due to the high cost and diverse domain knowledge required in order to reason about their diversity, scalability, and usability. To support performance testing and validation of IoT and edge computing configurations and algorithms at scale, simulation frameworks should be developed. Hence, this article proposes a novel simulator IoTSim-Edge, which captures the behavior of heterogeneous IoT and edge computing infrastructure and allows users to test their infrastructure and framework in an easy and configurable manner. IoTSim-Edge extends the capability of CloudSim to incorporate the different features of edge and IoT devices. The effectiveness of IoTSim-Edge is described using three test cases. Results show the varying capability of IoTSim-Edge in terms of application composition, battery-oriented modeling, heterogeneous protocols modeling, and mobility modeling along with the resources provisioning for IoT applications.
C1 [Jha, Devki Nandan; Alwasel, Khaled; Alshoshan, Areeb; Huang, Xianghua; Puthal, Deepak; James, Philip; Ranjan, Rajiv] Newcastle Univ, Newcastle Upon Tyne, Tyne & Wear, England.
   [Naha, Ranesh Kumar; Battula, Sudheer Kumar; Garg, Saurabh] Univ Tasmania, Hobart, Tas, Australia.
   [Zomaya, Albert] Univ Sydney, Sydney, NSW, Australia.
   [Dustdar, Schahram] TU Wien, Vienna, Austria.
C3 Newcastle University - UK; University of Tasmania; University of Sydney;
   Technische Universitat Wien
RP Jha, DN (corresponding author), Newcastle Univ, Newcastle Upon Tyne, Tyne & Wear, England.
EM D.N.Jha2@newcastle.ac.uk
RI Jha, Devki Nandan/L-3529-2019; Garg, Saurabh/J-7802-2014; Zomaya, Albert
   Y./G-9697-2017; Ranjan, Rajiv/F-4700-2011; Battula, Sudheer
   Kumar/AAH-1952-2020; Puthal, Deepak/V-6529-2019; Dustdar,
   Schahram/G-9877-2015; Naha (Dr.), Ranesh/C-9104-2014
OI Zomaya, Albert Y./0000-0002-3090-1059; Battula, Sudheer
   Kumar/0000-0001-6597-252X; Dustdar, Schahram/0000-0001-6872-8821; Naha
   (Dr.), Ranesh/0000-0003-4165-9349; James, Phil/0000-0001-9248-0280;
   Alwasel, Khaled/0000-0002-2530-1163; Garg, Saurabh
   Kumar/0000-0001-8719-284X
FU Engineering and Physical Sciences Research Council, Privacy aware cloud
   ecosystems (PACE); Sustainable urban power supply through intelligent
   control and enhanced restoration of AC/DC networks (SUPER)
   [EP/R033293/1, EP/T021985/1]; EPSRC [EP/P016782/1, EP/R013411/1] Funding
   Source: UKRI; NERC [NE/P017134/1] Funding Source: UKRI
FX Engineering and Physical Sciences Research Council, Privacy aware cloud
   ecosystems (PACE) and Sustainable urban power supply through intelligent
   control and enhanced restoration of AC/DC networks (SUPER),
   EP/R033293/1, EP/T021985/1
CR Al-Fuqaha A, 2015, IEEE COMMUN SURV TUT, V17, P2347, DOI 10.1109/COMST.2015.2444095
   Alshurafa N, 2014, IEEE J BIOMED HEALTH, V18, P1636, DOI 10.1109/JBHI.2013.2287504
   [Anonymous], 2008, "SIGCOMM Demon-stration
   BALANI R, 2007, TRUCLANESL20071201
   Benedetti D., 2013, P 1 ACM INT WORKSH E
   BOULIS A, 2013, CASTALIA SIMULATOR W
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Carnevale L, 2018, 2018 32ND INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P419, DOI 10.1109/WAINA.2018.00122
   Dolui K, 2017, 2017 GLOBAL INTERNET OF THINGS SUMMIT (GIOTS 2017), P19
   Garg S. K., 2011, Proceedings of the 2011 IEEE 4th International Conference on Utility and Cloud Computing (UCC 2011), P105, DOI 10.1109/UCC.2011.24
   Ghasemzadeh H, 2011, IEEE T IND INFORM, V7, P66, DOI 10.1109/TII.2010.2089990
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Härri J, 2011, SIMUL-T SOC MOD SIM, V87, P275, DOI 10.1177/0037549709345997
   Hornig R., 2008, P 1 INT ICST C SIM T, P60, DOI [10.4108/ICST.SIMUTOOLS2008.3027, DOI 10.4108/ICST.SIMUTOOLS2008.3027]
   Kalantarian H, 2017, IEEE T BIO-MED ENG, V64, P621, DOI 10.1109/TBME.2016.2570210
   Karagiannis V., 2015, T IOT CLOUD COMPUT, V3, P11, DOI [DOI 10.5281/ZENODO.51613, DOI 10.5281/ZEN0D0.51613]
   Kecskemeti G, 2017, IEEE CLOUD COMPUT, V4, P62, DOI 10.1109/MCC.2017.18
   Kecskemeti G, 2015, SIMUL MODEL PRACT TH, V58, P188, DOI 10.1016/j.simpat.2015.05.009
   Kliazovich D, 2010, GLOB TELECOMM CONF
   Levis P., 2003, SENSYS 03, P126, DOI DOI 10.1145/958491.958506
   Michalak P, 2017, INT CONF CLOUD COMP, P25, DOI 10.1109/CloudCom.2017.35
   Munir F, 2018, 2018 INTERNATIONAL CONFERENCE ON SENSORS, SIGNAL AND IMAGE PROCESSING (SSIP 2018), P1, DOI 10.1145/3290589.3290599
   Nasser N, 2006, IEEE COMMUN MAG, V44, P96, DOI 10.1109/MCOM.2006.1710420
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   Österlind F, 2006, C LOCAL COMPUT NETW, P641
   Perla E, 2008, PM2HW2N'08: PROCEEDINGS OF THE THIRD ACM INTERNATIONAL WORKSHOP ON PERFORMANCE MONITORING, MEASUREMENT, AND EVALUATION OF HETEROGENEOUS WIRELESS AND WIRED NETWORKS, P35, DOI 10.1145/1454630.1454636
   Rocha P, 2015, ENERG BUILDINGS, V88, P203, DOI 10.1016/j.enbuild.2014.11.077
   Shi WS, 2016, COMPUTER, V49, P78, DOI 10.1109/MC.2016.145
   Sonmez C, 2018, T EMERG TELECOMMUN T, V29, DOI 10.1002/ett.3493
   Sotiriadis S, 2014, 2014 28TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P444, DOI 10.1109/WAINA.2014.74
   Thomas BL, 2016, ENERGIES, V9, DOI 10.3390/en9080624
   Tighe M., 2012, 2012 8th International Conference on Network and Service Management (CNSM 2012), P385
   Tonguz OK, 2013, IEEE COMMUN MAG, V51, P112, DOI 10.1109/MCOM.2013.6685766
   Villari M, 2019, COMPUTER, V52, P14, DOI 10.1109/MC.2018.2888767
   Yannuzzi M, 2014, IEEE INT WORKSH COMP, P325, DOI 10.1109/CAMAD.2014.7033259
   Yazici M.T., 2018, Big Data Cognit. Comput., V2, P26, DOI [10.3390/bdcc2030026, DOI 10.3390/BDCC2030026]
   Zeng XZ, 2017, J SYST ARCHITECT, V72, P93, DOI 10.1016/j.sysarc.2016.06.008
NR 37
TC 61
Z9 63
U1 1
U2 25
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2020
VL 50
IS 6
BP 844
EP 867
DI 10.1002/spe.2787
EA JAN 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK4IJ
UT WOS:000505893700001
DA 2024-07-18
ER

PT J
AU Sicari, S
   Rizzardi, A
   Coen-Porisini, A
AF Sicari, Sabrina
   Rizzardi, Alessandra
   Coen-Porisini, Alberto
TI How to evaluate an Internet of Things system: Models, case studies, and
   real developments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE application case study; Internet of Things; flow-based programming;
   Node-RED
ID SMART-CITY; CITIES; DESIGN
AB The paper proposes the use of Node-RED, a flow-based programming tool targeted to Internet of Things (IoT), along with a series of case studies related to different IoT contexts, which demonstrate Node-RED's potentialities and outcomings toward the realization of well-structured IoT environments. The analyzed applications potentially include a wide range of domains, ranging from smart cities, smart buildings, smart homes/offices, smart retailing, to smart transportation, smart logistics, smart agriculture, smart health, military scenarios, and so on. The motivations behind the presented work are related to the fact that IoT application fields usually involve the same technologies and communication protocols, which are frequently adopted for totally different purposes. Issues such as systems' interoperabiliy, scalability, security and privacy naturally emerge, due to the huge amount of heterogeneous devices acting in the IoT environment itself and to the wireless nature of information transmissions. As a consequence, it is fundamental to dispose of adequate tools for supporting developers in design the network architecture and messages' exchange, in order to realize efficient and effective IoT network infrastructures.
C1 [Sicari, Sabrina; Rizzardi, Alessandra; Coen-Porisini, Alberto] Univ Insubria, Dipartimento Sci Teoriche & Applicate, Via Mazzini 5, I-21100 Varese, Italy.
C3 University of Insubria
RP Sicari, S (corresponding author), Univ Insubria, Dipartimento Sci Teoriche & Applicate, Via Mazzini 5, I-21100 Varese, Italy.
EM sabrina.sicari@uninsubria.it
RI Porisini, Alberto Coen/AAG-1542-2021; Sicari, Sabrina/AAT-2358-2020
OI Porisini, Alberto Coen/0000-0002-3788-8926; Sicari, Sabrina
   Sophy/0000-0002-6824-8075
CR Al-Fuqaha A, 2015, IEEE COMMUN SURV TUT, V17, P2347, DOI 10.1109/COMST.2015.2444095
   [Anonymous], MQTT V3 1 PROT SPEC
   [Anonymous], 2014, P 5 INT WORKSH WEB T
   [Anonymous], 3 INT C FUT INT THIN
   Apsara S, 2017, INT J ADV RES IDEAS, V3, P1163
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Bolici R, 2016, FUTURE CITY COMBININ
   Bresciani S, 2018, TECHNOL FORECAST SOC, V136, P331, DOI 10.1016/j.techfore.2017.03.002
   Brizzi P, 2013, 18 C EM TECHN FACT A
   Cardoso RL, 2013, 22 INT C MECH ENG CO
   Castellani AP, 2010, 8 IEEE INT C PERV CO
   Chen SL, 2014, SENSORS-BASEL, V14, P6144, DOI 10.3390/s140406144
   Costantino D, 2018, IEEE INT CONF COMM
   Davidson PC, 2018, US patent, Patent No. [9,872,890, 9872890]
   Ferraris A, 2018, FUTURES, V103, P51, DOI 10.1016/j.futures.2018.03.012
   Gia T.N., 2015, IEEE INT C COMP INF
   Jazdi N, 2014, IEEE INT CONF AUTO
   Jiang YZ, 2016, LECT NOTES ELECTR EN, V348, P473, DOI 10.1007/978-81-322-2580-5_43
   Jin J, 2014, IEEE INTERNET THINGS, V1, P112, DOI 10.1109/JIOT.2013.2296516
   Khan M, 2016, IEEE ACCESS, V4, P7556, DOI 10.1109/ACCESS.2016.2621752
   La Marra A, 2017, IEEE TRUSTC BIGD ICE
   Lee Eun-Kyu, 2014, IEEE WORLD FOR INT T
   Lei SP, 2015, 2 INT PHYS INT C PAR
   Liu JQ, 2015, IEEE COMMUN MAG, V53, P55, DOI 10.1109/MCOM.2015.7263373
   Minakov I, 2016, ACM T SENSOR NETWORK, V12, DOI 10.1145/2903144
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Mobius onem2m, ONEM2M COMP SERV PLA
   Mora L., 2015, Smart and Sustainable Planning for Cities and Regions
   Mora L, 2017, J URBAN TECHNOL, V24, P3, DOI 10.1080/10630732.2017.1285123
   Ostas BK, 2013, PROCEDIA COMPUT SCI, V19, P594, DOI 10.1016/j.procs.2013.06.079
   Pariyumbud Piyush, 2018, J. Embedded Syst. Appl., V5, P1
   Rahmani A-M, 2015, 12 ANN IEEE CONS COM
   Rahmani AM, 2018, FUTURE GENER COMP SY, V78, P641, DOI 10.1016/j.future.2017.02.014
   Ryu M, 2015, SENSORS-BASEL, V15, P2137, DOI 10.3390/s150102137
   Sanchez L, 2011, FUT NETW MOB SUMM WA
   Santos A, 2014, PROC TECH, V16, P1351, DOI 10.1016/j.protcy.2014.10.152
   Scuotto V, 2016, BUS PROCESS MANAG J, V22, P357, DOI 10.1108/BPMJ-05-2015-0074
   Sicari S., 2017, Smart Health, V3-4, P39, DOI 10.1016/j.smhl.2017.06.001
   Sicari S, 2015, COMPUT NETW, V76, P146, DOI 10.1016/j.comnet.2014.11.008
   Sicari S, 2018, INTERNET TECHNOL LET, V1, DOI 10.1002/itl2.22
   Sicari S, 2016, INFORM SYST, V58, P43, DOI 10.1016/j.is.2016.02.003
   Soliman M, 2013, IEEE 5 INT C CLOUD C
   Ullah K, 2016, INT C INT SYST ENG I
   Verdouw CN, 2016, J FOOD ENG, V176, P128, DOI 10.1016/j.jfoodeng.2015.11.009
   Vlacheas P, 2013, IEEE COMMUN MAG, V51, P102, DOI 10.1109/MCOM.2013.6525602
   Xiang P., 2012, RES J APPL SCI ENG T, V4, P2236
   Zanella A, 2014, IEEE INTERNET THINGS, V1, P22, DOI 10.1109/JIOT.2014.2306328
   Zhong R, 2017, MAN DES FUT 2017 NAT
NR 48
TC 10
Z9 10
U1 0
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2019
VL 49
IS 11
BP 1663
EP 1685
DI 10.1002/spe.2740
EA AUG 2019
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA JG7JQ
UT WOS:000484101300001
DA 2024-07-18
ER

PT J
AU Ceraolo, M
   Lutzemberger, G
AF Ceraolo, M.
   Lutzemberger, G.
TI Use of Modelica language to simulate electrified railway lines and
   trains
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Modelica; modeling; railway; simulation; software; trains
AB Simulation of multi-engineering systems typically requires many issues to be solved, which are to be addressed by developing appropriate modeling and simulation programming techniques. In the last years, the authors have participated in several studies in which they analyzed in detail electrified railway systems and simulated them using Modelica language. After a few years of study, despite the huge complexity of these systems, it has appeared evident that Modelica language is very well suited and able to effectively solve the typical issues they present. While specific railway system simulations have already been discussed in specific papers, whose focus was on application and actual results, in this paper, the authors show how to use Modelica language to solve specific modeling issues through suitable programming techniques. Moreover, the issues to be solved and the conceived techniques may be interpreted in a general way and to be applied also in different engineering domains. Finally, this paper briefly recalls the principal results obtained in previous specific papers, in which these techniques were fully implemented.
C1 [Ceraolo, M.; Lutzemberger, G.] Univ Pisa, Dept Energy Syst Terr & Construct Engn, Largo Lucio Lazzarino 1, I-56122 Pisa, Italy.
C3 University of Pisa
RP Lutzemberger, G (corresponding author), Univ Pisa, Dept Energy Syst Terr & Construct Engn, Largo Lucio Lazzarino 1, I-56122 Pisa, Italy.
EM lutzemberger@dsea.unipi.it
OI LUTZEMBERGER, GIOVANNI/0000-0002-9165-2797; Ceraolo,
   Massimo/0000-0002-8379-1789
CR Barsali S, 2014, 2 INT C RAILW TECHN
   Bolognesi P, 2017, 17 IEEE INT C ENV EL
   Capasso A, 2016, 2016 IEEE 16 INT C E
   Capasso A., 2014, INGEGNERIA FERROVIAR, V69, P329
   Capasso A, 2017, 2017 AEIT INTERNATIONAL ANNUAL CONFERENCE
   Ceraolo M, 2014, 2014 IEEE INTERNATIONAL ELECTRIC VEHICLE CONFERENCE (IEVC)
   Ceraolo M., 2018, 2018 AEIT INT ANN C, P1
   Ceraolo M, 2016, 2016 IEEE 16TH INTERNATIONAL CONFERENCE ON ENVIRONMENT AND ELECTRICAL ENGINEERING (EEEIC)
   Dolara A, 2012, 2012 IEEE 15 INT C H
   Fritzson P., 2006, 2006 IEEE C COMP AID
   Fritzson P, 2002, P 35 ANN SIM S SS SA
   Fritzson P., 2011, Introduction to modeling and simulation of technical and physical systems with Modelica
   LMS Imagine, LAB AM
   MathWorks, MATLAB SIM
   MathWorks, MATLAB SIMSC
   OpenModelica, ROAD MAP
   Tiller M., MODELICA EXAMPLE
   [No title captured]
NR 18
TC 3
Z9 3
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2019
VL 49
IS 7
BP 1114
EP 1130
DI 10.1002/spe.2700
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IC6BJ
UT WOS:000471053400003
DA 2024-07-18
ER

PT J
AU Brogi, A
   Rinaldi, L
   Soldani, J
AF Brogi, Antonio
   Rinaldi, Luca
   Soldani, Jacopo
TI TosKer: A synergy between TOSCA and Docker for orchestrating
   multicomponent applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE application orchestration; cloud; Docker; TOSCA
ID MANAGEMENT PROTOCOLS; CLOUD
AB How to flexibly manage complex applications across heterogeneous cloud platforms is one of the main concerns in today's IT enterprise. The OASIS standard TOSCA (Topology and Orchestration Specification for Cloud Applications) and the Docker ecosystem are two emerging solutions trying to address this problem from different perspectives. In this paper, we propose a solution that tries to synergically combine the pros of both TOSCA and of Docker. More precisely, we propose a TOSCA-based representation for specifying the software components and the Docker containers forming an application. We also present TosKer, an engine for orchestrating the management of multicomponent applications based on the proposed TOSCA representation and on Docker. Finally, we illustrate how TosKer was fruitfully exploited in a concrete case study based on a third-party application.
C1 [Brogi, Antonio; Rinaldi, Luca; Soldani, Jacopo] Univ Pisa, Dept Comp Sci, Largo B Pontecorvo 3, I-56127 Pisa, PI, Italy.
C3 University of Pisa
RP Soldani, J (corresponding author), Univ Pisa, Dept Comp Sci, Largo B Pontecorvo 3, I-56127 Pisa, PI, Italy.
EM soldani@di.unipi.it
RI Soldani, Jacopo/O-5057-2019; Brogi, Antonio/HLQ-2040-2023
OI Soldani, Jacopo/0000-0002-2435-3543; Brogi, Antonio/0000-0003-2048-2468
CR Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Binz T, 2013, LECT NOTES COMPUT SC, V8274, P692, DOI 10.1007/978-3-642-45005-1_62
   Brogi A, 2014, P 4 INT C CLOUD COMP
   Brogi A, 2017, ADV SERVICE ORIENTED, V824
   Brogi A, 2017, P 5 INT C MOD DRIV E
   Brogi A, 2018, SCI COMPUT PROGRAM, V166, P194, DOI 10.1016/j.scico.2018.07.005
   Brogi A, 2018, SOFTWARE PRACT EXPER, V48, P1461, DOI 10.1002/spe.2583
   Brogi A, 2018, J SYST SOFTWARE, V139, P189, DOI 10.1016/j.jss.2018.02.005
   Brogi A, 2016, LECT NOTES COMPUT SC, V9846, P219, DOI 10.1007/978-3-319-44482-6_14
   Brogi A, 2015, LECT NOTES COMPUT SC, V9306, P19, DOI 10.1007/978-3-319-24072-5_2
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Carrasco J, 2016, 9 IEEE INT C CLOUD C
   Chauhan MA, 2017, SOFTWARE PRACT EXPER, V47, P599, DOI 10.1002/spe.2409
   Di Cosmo R, 2014, INFORM COMPUT, V239, P100, DOI 10.1016/j.ic.2014.11.002
   Endres C, 2017, P 9 INT C PERV PATT
   Fehling C., 2014, Cloud Computing Patterns: Fundamentals to Design, Build, and Manage Cloud Applications, DOI DOI 10.1007/978-3-7091-1568-8
   Jamshidi P, 2017, SOFTWARE PRACT EXPER, V47, P1159, DOI 10.1002/spe.2442
   Kehrer S, 2018, COMPUT SCI-RES DEV, V33, P305, DOI 10.1007/s00450-017-0385-0
   Matthias K., 2015, Docker: Up & Running: Shipping Reliable Containers in Production
   OASIS, 2016, CLOUD APPL MAN PLATF
   OASIS, 2013, Topology and Orchestration Specification for Cloud Applications Version 1.0 OASIS Standard
   OASIS. Topology and Orchestration Specification for Cloud Applications (TOSCA), 2016, SIMPL PROF YAML VERS
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Pahl C, 2015, IEEE CLOUD COMPUT, V2, P24, DOI 10.1109/MCC.2015.51
   Piraghaj SF, 2017, SOFTWARE PRACT EXPER, V47, P505, DOI 10.1002/spe.2422
   Smith R., 2017, Docker orchestration
   Soltesz S., 2007, Operating Systems Review, V41, P275, DOI 10.1145/1272998.1273025
NR 27
TC 29
Z9 29
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2018
VL 48
IS 11
BP 2061
EP 2079
DI 10.1002/spe.2625
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GW3WX
UT WOS:000446841000007
OA Bronze
DA 2024-07-18
ER

PT J
AU Mili, H
   Valtchev, P
   Szathmary, L
   Boubaker, A
   Leshob, A
   Charif, Y
   Martin, L
AF Mili, Hafedh
   Valtchev, Petko
   Szathmary, Laszlo
   Boubaker, Anis
   Leshob, Abderrahmane
   Charif, Yasmine
   Martin, Louis
TI Ontology-based model-driven development of a destination management
   portal: Experience and lessons learned
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE destination management portal; experience report; model-driven
   engineering (MDE); ontology development; web application engineering
ID SOFTWARE-DEVELOPMENT; DESIGN; MAINTENANCE; INDUSTRY
AB We present a case study in model-driven development of an e-tourism portal that we chose to develop through generation from a domain model encoded as an ontology. We present (1) the requirements of e-tourism portal, which dictated its high-level design; (2) the principles behind our implementation strategy, including the use of a domain ontology as a starting model within the context of a model-driven transformational approach; (3) the ontology development process and the code generation strategy used; and (4) the lessons learned. In particular, we compare our experiences to those reported in the model-driven engineering (MDE) literature along 3 dimensions, ie, (1) the impact of MDE on the development process, (2) the choice of the modeling approach, and (3) the impact of code generation on design and code quality and testing. Overall, our experiences corroborated some of the theoretical claims and many of the practical experiences with MDE. Key findings include (1) model-driven development makes maintenance, not development, more efficient; (2) it does require a higher skill level than traditional development; (3) clients and managers need to be educated into what incrementality means in a generative approach; (4) UML is neither necessary nor sufficient to handle the required representational flexibility; (5) it is difficult to build models that are good for both human consumption and code generation; and (6) it is difficult to generate code that is, simultaneously, efficient, pretty, and easy to maintain. We conclude by summarizing the findings of the paper.
C1 [Mili, Hafedh; Valtchev, Petko; Szathmary, Laszlo; Boubaker, Anis; Leshob, Abderrahmane; Charif, Yasmine; Martin, Louis] Univ Quebec, LATECE Lab, Montreal, PQ H2X 3Y7, Canada.
C3 University of Quebec; University of Quebec Montreal
RP Mili, H (corresponding author), Univ Quebec, LATECE Lab, Montreal, PQ H2X 3Y7, Canada.
EM hafedh.mili@uqam.ca
RI Mili, Hafedh/JAO-1456-2023; Leshob, Abderrahmane/R-4675-2017
OI Boubaker, Anis/0000-0002-8954-6717; Valtchev, Petko/0000-0001-5026-3915
FU United Nations Conference on Trade And Development (UNCTAD)
FX United Nations Conference on Trade And Development (UNCTAD)
CR Acerbis R, 2007, P 7 INT C WEB ENG IC
   Alencar PSC, 1997, 4 INT S FORM METH EU
   [Anonymous], INT WORKSH SEM WEB E
   [Anonymous], 2001, KNOWLEDGE SYSTEMS LA
   [Anonymous], 2016, UNWTO Tourism Highlights
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   ARANGO G, 1986, IEEE SOFTWARE, V3, P27, DOI 10.1109/MS.1986.233411
   Arango GF, 1988, THESIS
   BARSTOW DR, 1985, IEEE T SOFTWARE ENG, V11, P1321, DOI 10.1109/TSE.1985.231881
   BAXTER ID, 1992, COMMUN ACM, V35, P73, DOI 10.1145/129852.129859
   Boaye Belle A, 2015, SOFTW ARCH 9 EUR C E
   Bossche M. V., 2007, 3 INT WORKSH SEM WEB
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Burden H., 2014, ESEM
   Cabot J, 2016, 35 INT C CONC MOD GI
   Czarnecki K, 2006, 10 INT SOFTW PROD LI
   El Boussaidi G, 2012, SOFTWARE PRACT EXPER, V42, P1495, DOI 10.1002/spe.1145
   Evers M, 1999, 9914 U TWENT
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Hutchinson J., 2011, P 33 INT C SOFTW ENG
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Krogmann K., 2007, LECT NOTES INFORM, V106, P169
   LEVY LS, 1986, IEEE T SOFTWARE ENG, V12, P272, DOI 10.1109/TSE.1986.6312943
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Mili H, 2011, E TECHN TRANSF CONN
   Mili H., 2001, Reuse-based Software Engineering: Techniques, Organization, and Controls
   Mohagheghi P, 2008, 4 EUR C MOD DRIV ARC
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Mussbacher G, 2014, 17 INT C MOD DRIV EN
   Nyulas CI, 2009, 5 INT WORKSH SEM WEB
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   Pareto L, 2012, SOFTW SYST MODEL, V11, P409, DOI 10.1007/s10270-010-0188-2
   Pollock A, 2001, REPORTED TRAVEL DAIL
   PRIETODIAZ R, 1987, IEEE SOFTWARE, V4, P6, DOI 10.1109/MS.1987.229789
   RICH C, 1988, COMPUTER, V21, P11
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   United Nations Conference on Trade and Development, 2006, TECHNICAL REPORT
   United Nations World Tourism Organization, 2001, THES TOUR LEIS ACT
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
NR 41
TC 4
Z9 4
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2018
VL 48
IS 8
BP 1438
EP 1460
DI 10.1002/spe.2581
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GL9XH
UT WOS:000437696200002
DA 2024-07-18
ER

PT J
AU Singh, J
   Mohapatra, DP
AF Singh, Jagannath
   Mohapatra, Durga Prasad
TI Dynamic slicing of concurrent AspectJ programs: An explicit
   context-sensitive approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Aspect-oriented programming; concurrent aspect; concurrent programming;
   context-sensitive slicing; dynamic slicing; program slicing
AB This paper presents a context-sensitive dynamic slicing technique for the concurrent and aspectized programs. To effectively represent the concurrent aspect-oriented programs, we propose an intermediate graph called the multithreaded aspect-oriented dependence graph (MAODG). The MAODG is a dynamic graph generated from the execution trace of a given program with respect to a particular set of values given as an input. Interference dependencies between the statements are shown by a distinguished edge called the interference dependence edge in the MAODG. Based on this intermediate representation, we propose a precise and accurate dynamic slicing algorithm for the concurrent aspect-oriented programs implemented using AspectJ. The proposed dynamic slicing algorithm is implemented in a slicing tool developed using the ASM framework. Several open source programs are studied and evaluated using the proposed technique along with some existing techniques. The experimentation shows that our proposed slicing algorithm generates slices of the same or smaller size, as compared with the existing algorithms. Furthermore, we found that the slice computation time is significantly less in our proposed algorithm, as compared with the existing algorithms.
C1 [Singh, Jagannath] KIIT Univ, Sch Comp Engn, Bhubaneswar, Orissa, India.
   [Mohapatra, Durga Prasad] Natl Inst Technol, Dept Comp Sci & Engn, Rourkela, India.
C3 Kalinga Institute of Industrial Technology (KIIT); National Institute of
   Technology (NIT System); National Institute of Technology Rourkela
RP Singh, J (corresponding author), KIIT Univ, Sch Comp Engn, Bhubaneswar, Orissa, India.
EM jagannath.singh@gmail.com
RI Mohapatra, Durga Prasad/B-2722-2017
OI Mohapatra, Durga Prasad/0000-0002-4824-7091
FU Science and Engineering Research Board, Department of Science and
   Technology, Government of India [SERB/F/1308/2011-12]
FX Science and Engineering Research Board, Department of Science and
   Technology, Government of India, Grant/Award Number: SERB/F/1308/2011-12
CR AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   Andrews J.H., 2001, Reflection, P187
   [Anonymous], ELEMENTS DISCRETE MA
   [Anonymous], INT C COMP SCI SOFTW
   [Anonymous], P INT C SOFTW MAINT
   [Anonymous], P 15 INT C SOFTW ENG
   [Anonymous], CONCURRENCY COMPUTAT
   [Anonymous], INFOCOMP J COMPUT SC
   [Anonymous], P 5 INT C GEN PROGR
   [Anonymous], 24 ANN INT COMP SOFT
   [Anonymous], P 10 INT WORKSH PROG
   [Anonymous], 2013, INT J SOFTWARE ENG I
   [Anonymous], AS PAC SOFTW ENG C A
   [Anonymous], 25 STUD C IT 2006 EN
   [Anonymous], INTRO SLICEBASED COH
   [Anonymous], P 7 INT WORKSH PROGR
   [Anonymous], AUSTRALAS J INF SYST
   [Anonymous], P 21 AS PAC SOFTW EN
   [Anonymous], P 25 INT C SOFTW ENG
   [Anonymous], 10 INT C INF TECHN I
   [Anonymous], P 3 INT C ASP SOFTW
   [Anonymous], INT C ADV COMP COMM
   [Anonymous], INFORMATICA
   [Anonymous], FORMALIZATION OF UML
   Beszédes A, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P105, DOI 10.1109/CSMR.2001.914974
   Binkley D., 1996, Advances in Computers, V43, P1
   GAIT J, 1986, SOFTWARE PRACT EXPER, V16, P225, DOI 10.1002/spe.4380160304
   Garg M, 2011, IET SOFTW, V5, P263, DOI 10.1049/iet-sen.2010.0007
   Giffhorn D, 2009, AUTOMAT SOFTW ENG, V16, P197, DOI 10.1007/s10515-009-0048-x
   Goswami D, 2004, CONCURR COMP-PRACT E, V16, P751, DOI 10.1002/cpe.789
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Kiczales G., 1997, ASPECT ORIENTED PROG
   Krinke J., 2003, Software Engineering Notes, V28, P178, DOI 10.1145/949952.940096
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   LARUS JR, 1990, SOFTWARE PRACT EXPER, V20, P1241, DOI 10.1002/spe.4380201205
   Lu Shan, 2008
   Mall Rajib., 2014, Fundamentals of Software Engineering
   Mohapatra DP, 2005, INFORM SOFTWARE TECH, V47, P805, DOI 10.1016/j.infsof.2005.02.002
   Mukherjee D, 2016, ADV INTELL SYST, V396, P93, DOI 10.1007/978-81-322-2653-6_7
   Mund GB, 2002, INFORM SOFTWARE TECH, V44, P123, DOI 10.1016/S0950-5849(01)00224-5
   Nanda M. G., 2000, Software Engineering Notes, V25, P180, DOI 10.1145/347636.349121
   Philip S., 2009, ACM SIGSOFT SOFTWARE, V34, P1, DOI DOI 10.1145/1640162.1666579
   Silva J, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187674
   Singh J, 2017, COMPUT STAND INTER, V52, P71, DOI 10.1016/j.csi.2017.01.007
   Swain S.K., 2010, International Journal of Software Engineering, V3, P21
   Weiser M., 1981, P 5 INT C SOFTW ENG
   Zhang XY, 2007, SOFTWARE PRACT EXPER, V37, P935, DOI 10.1002/spe.795
NR 49
TC 7
Z9 7
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2018
VL 48
IS 1
BP 233
EP 260
DI 10.1002/spe.2520
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FP4WK
UT WOS:000417617500011
DA 2024-07-18
ER

PT J
AU Chen, YL
   Li, FY
   Deng, Z
   Chen, XD
   He, JJ
AF Chen, Yunliang
   Li, Fangyuan
   Deng, Ze
   Chen, Xiaodao
   He, Jijun
TI <i>PM</i><sub>2.5</sub> forecasting with hybrid LSE model-based approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE PM2.5 forecasting; local mean decomposition; SVR; Elman
ID FINE PARTICULATE MATTER; UNITED-STATES; NEURAL-NETWORKS; AIR-POLLUTION;
   DECOMPOSITION; PM10; TEMPERATURE; CANCER
AB PM2.5 time series have the features of non-stationary and nonlinear. Existing forecasting methods for PM2.5 cannot achieve high accuracy for they have ignored the potential characteristics of PM2.5 time series. Aiming at this problem, a hybrid approach using local mean decomposition and Support Vector Regression (SVR)-Elman (LSE) is firstly proposed in this paper to analyse 5days ahead PM2.5 concentrations for forecasting in Wuhan, China: (1) the meaningful PF1-PF5 components are extracted from original PM2.5 time series by local mean decomposition; (2) the first high-frequency product function is managed by using the SVR model, such that the relationship between PM2.5 and other air quality data can be revealed accurately; (3) the other components are trained by Elman model with the sliding window method. Experimental results show that, compared with multiple linear regression, autoregressive integrated moving average, BP neural network, and SVR models, the proposed hybrid LSE model-based approach exhibits the best performance in terms of R-2, MAE, MAPE, RMSE, while it is applied for forecasting in real datasets. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Chen, Yunliang; Li, Fangyuan; Deng, Ze; Chen, Xiaodao; He, Jijun] China Univ Geosci, Sch Comp Sci, Wuhan 430074, Peoples R China.
   [Chen, Yunliang; Li, Fangyuan; Deng, Ze; Chen, Xiaodao; He, Jijun] China Univ Geosci, Hubei Key Lab Intelligent Geoinformat Proc, Wuhan 430074, Peoples R China.
C3 China University of Geosciences; China University of Geosciences
RP Li, FY; Deng, Z (corresponding author), China Univ Geosci, Sch Comp Sci, Wuhan 430074, Peoples R China.
EM lfy_cug@hotmail.com; deng_ze@163.com
FU National Natural Science Foundation of China (Key Program) [U1405254];
   National Natural Science Foundation of China [61440018, 61501411,
   61472092, 61271392]; Hubei Natural Science Foundation [2014CFB904];
   China Postdoctoral Science Foundation [2014M552112]; Fundamental
   Research Funds for the National University; China University of
   Geosciences (Wuhan) [1610491B24]
FX This work was supported in part by the National Natural Science
   Foundation of China (Key Program; No. U1405254), National Natural
   Science Foundation of China (Nos. 61440018, 61501411, 61472092,
   61271392), the Hubei Natural Science Foundation (No. 2014CFB904), the
   China Postdoctoral Science Foundation (2014M552112), the Fundamental
   Research Funds for the National University, and China University of
   Geosciences (Wuhan) (No. 1610491B24).
CR Alhamazani K, 2019, IEEE T CLOUD COMPUT, V7, P48, DOI 10.1109/TCC.2015.2441715
   [Anonymous], ADV NEURAL INFORM PR
   Antanasijevic DZ, 2013, SCI TOTAL ENVIRON, V443, P511, DOI 10.1016/j.scitotenv.2012.10.110
   Bandowe BAM, 2014, SCI TOTAL ENVIRON, V473, P77, DOI 10.1016/j.scitotenv.2013.11.108
   Box GEP, 2016, J AM STAT ASSOC, V68, P343
   Cai C, 2012, ADV INTEL SOFT COMPU, V148, P607
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Chaudhuri S, 2014, ENVIRON MONIT ASSESS, V186, P4719, DOI 10.1007/s10661-014-3733-6
   Chen TF, 2014, ATMOS ENVIRON, V89, P1, DOI 10.1016/j.atmosenv.2014.01.065
   Chudnovsky AA, 2014, ATMOS ENVIRON, V89, P189, DOI 10.1016/j.atmosenv.2014.02.019
   Cobourn WG, 2010, ATMOS ENVIRON, V44, P3015, DOI 10.1016/j.atmosenv.2010.05.009
   Dimitriou K, 2014, ATMOS ENVIRON, V98, P648, DOI 10.1016/j.atmosenv.2014.09.047
   Eeftens M, 2015, ATMOS ENVIRON, V111, P60, DOI 10.1016/j.atmosenv.2015.03.031
   ELMAN JL, 1990, COGNITIVE SCI, V14, P179, DOI 10.1207/s15516709cog1402_1
   Fang GC, 2000, CHEMOSPHERE, V41, P1727, DOI 10.1016/S0045-6535(00)00055-2
   Fu YB, 2013, INT J COMPUT ASS RAD, V8, P135, DOI 10.1007/s11548-012-0689-2
   GOH ATC, 1995, ARTIF INTELL ENG, V9, P143, DOI 10.1016/0954-1810(94)00011-S
   Hagan MT, 1997, WSEAS INT C CIRC
   Hecht-Nielsen R., 1989, IJCNN: International Joint Conference on Neural Networks (Cat. No.89CH2765-6), P593, DOI 10.1109/IJCNN.1989.118638
   Hu XF, 2014, REMOTE SENS ENVIRON, V140, P220, DOI 10.1016/j.rse.2013.08.032
   Kappaganthu K, 2011, J VIB ACOUST, V133, P467
   Kassomenos PA, 2014, ATMOS ENVIRON, V87, P153, DOI 10.1016/j.atmosenv.2014.01.004
   Kolodziej J, 2014, FUTURE GENER COMP SY, V37, P282, DOI 10.1016/j.future.2014.02.006
   Koskela T, 1997, P WORLD C NEUR NETW, P491
   Li YB, 2015, DIGIT SIGNAL PROCESS, V46, P201, DOI 10.1016/j.dsp.2015.07.001
   Ma Y, 2014, IEEE T PARALL DISTR, V25, P2126, DOI 10.1109/TPDS.2013.272
   Menzel M, 2015, IEEE T COMPUT, V64, P1336, DOI 10.1109/TC.2014.2317188
   Mokdad AH, 2004, JAMA-J AM MED ASSOC, V291, P1238, DOI 10.1001/jama.291.10.1238
   Priestley MB., RED REPUBLICAN FRIEN, P161
   Ranjan R, 2016, COMPUTING, V98, P1, DOI 10.1007/s00607-015-0471-8
   Rückerl R, 2011, INHAL TOXICOL, V23, P555, DOI 10.3109/08958378.2011.593587
   Scapellato ML, 2009, INT J HYG ENVIR HEAL, V212, P626, DOI 10.1016/j.ijheh.2009.06.001
   Shumway RH., 2010, TIME SERIES ANAL ITS
   Smith JS, 2005, J ROY SOC INTERFACE, V2, P443, DOI 10.1098/rsif.2005.0058
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Tai APK, 2010, ATMOS ENVIRON, V44, P3976, DOI 10.1016/j.atmosenv.2010.06.060
   Turner MC, 2011, AM J RESP CRIT CARE, V184, P1374, DOI 10.1164/rccm.201106-1011OC
   Vapnik V., 1998, STAT LEARNING THEORY, V3
   Vlachogianni A, 2011, SCI TOTAL ENVIRON, V409, P1559, DOI 10.1016/j.scitotenv.2010.12.040
   von Laszewski G, 2011, CONCURR COMP-PRACT E, V23, P1857, DOI 10.1002/cpe.1745
   Wang JJ, 2014, APPL SOFT COMPUT, V23, P452, DOI 10.1016/j.asoc.2014.06.027
   Wang LZ, 2016, IEEE T COMPUT, V65, P1337, DOI 10.1109/TC.2016.2538059
   Wang LZ, 2014, COMPUT SCI ENG, V16, P41, DOI 10.1109/MCSE.2014.52
   Wei Y, 2012, TRANSPORT RES C-EMER, V21, P148, DOI 10.1016/j.trc.2011.06.009
   Wu SW, 2014, CHEMOSPHERE, V108, P168, DOI 10.1016/j.chemosphere.2014.01.032
   Xia F, 2012, INT J COMMUN SYST, V25, P1101, DOI 10.1002/dac.2417
   Ying E., 2012, Proceedings of the 2012 International Conference on Computer Science and Electronics Engineering (ICCSEE 2012), P173, DOI 10.1109/ICCSEE.2012.456
   Yu L, 2007, LECT NOTES COMPUT SC, V4489, P925
   Zhou QP, 2014, SCI TOTAL ENVIRON, V496, P264, DOI 10.1016/j.scitotenv.2014.07.051
NR 49
TC 8
Z9 9
U1 0
U2 34
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2017
VL 47
IS 3
SI SI
BP 379
EP 390
DI 10.1002/spe.2413
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL9RK
UT WOS:000394957500004
DA 2024-07-18
ER

PT J
AU Oliver, H
   McSharry, P
AF Oliver, Helen
   McSharry, Patrick
TI A design proto-pattern for continuously evaluated forecasting in
   IBM<SUP>®</SUP> InfoSphere<SUP>®</SUP> Streams
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design patterns; forecasting; stream computing; IBM (R) InfoSphere (R)
   Streams; forecast performance evaluation; near real time
AB Design patterns relieve much of the difficulty of developing software solutions. As sources and volumes of generated data have increased in recent times, stream computing has emerged as a new paradigm for acquiring and harnessing the data's rich potential to provide insight in near real time. One prominent platform for processing streaming data is IBM (R) InfoSphere (R) Streams, but design patterns for the platform are relatively scarce. This article proposes a prototypical application design pattern for continuously evaluated forecasting on the IBM InfoSphere Streams platform. Towards demonstrating the prototypical pattern, the application was implemented in three real-world scenarios: wind power, sentiment analysis, and stock market data. The purpose of this article is to specify the design proto-pattern and describe its variants in each different implementation. We believe that the proto-pattern will be applicable in IBM InfoSphere Streams to any data stream where forecasts over multiple forecast horizons are required. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Oliver, Helen; McSharry, Patrick] Univ Oxford, Smith Sch Enterprise & Environm, Oxford OX1 3QY, England.
   [Oliver, Helen] Univ Cambridge, Comp Lab, Cambridge CB3 0FD, England.
C3 University of Oxford; University of Cambridge
RP Oliver, H (corresponding author), Univ Cambridge, Comp Lab, William Gates Bldg,15 JJ Thomson Ave, Cambridge CB3 0FD, England.
EM helen.oliver@cl.cam.ac.uk
RI MCSHARRY, PATRICK/AGJ-2462-2022
OI Oliver, Helen/0000-0003-1467-8165; McSharry, Patrick/0000-0003-4663-970X
FU Her Majesty's Government
FX Grateful thanks are extended to Paul Jones, who provided assistance
   above and beyond the call of duty with the deployment process, and
   without whom this work could not have been completed. Thanks also to
   Sasha Rousseau and John Leavitt for invaluable editorial feedback. The
   Ingest pattern is based on the work of an anonymous contributor. The
   overwriteSink operator in Ingest is based on an answer to a question on
   the IBM developerWorks discussion forum:
   (https://www.ibm.com/developerworks/community/forums/html/topic?id=77777
   777-0000-0000-0000-000014689671, accessed January 16, 2015). In this
   paper, the design pattern is based on work completed during an
   investigation funded by Her Majesty's Government. Completion of the
   design as a pattern was unfunded.
CR Anastasiades G, 2013, ENERGIES, V5, P552, DOI [10.3390/en5020552, DOI 10.3390/EN5020552]
   [Anonymous], 2015, OP SYST PERF DAT WIN
   [Anonymous], 2011, J COMPUT SCI-NETH, DOI DOI 10.1016/j.jocs.2010.12.007
   Appleton Brad., 1997, Object Magazine Online, V3, P20
   Ballard C, 2013, IBM INFOSPHERE STREA
   Ballard C., 2014, IBM INFOSPHERE STREA
   Ballard Chuck., 2010, IBM INFOSPHERE STREA
   Boyle G., 2007, Renewable electricity and the grid: the challenge of variability
   Ebbers M., 2013, Addressing Data Volume, Velocity
   Gamma Erich., 1994, DESIGN PATTERNS
   Hirzel M, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2528412
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Knuth DE, 1981, ART COMPUTER PROGRAM, V2, P215
   Lau A, 2010, ANN APPL STAT, V4, P1311, DOI 10.1214/09-AOAS320
   Nielsen F., 2011, Afinn
   Rising L, 1999, IEEE COMMUN MAG, V37, P34, DOI 10.1109/35.755446
   Russell N, 2005, BPM0522, DOI 10.1.1.93.5974
   Sow DM, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2197952
   Turaga D, 2010, SOFTWARE PRACT EXPER, V40, P1073, DOI 10.1002/spe.993
NR 19
TC 0
Z9 0
U1 2
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2016
VL 46
IS 5
BP 645
EP 684
DI 10.1002/spe.2316
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ3YV
UT WOS:000374143500005
DA 2024-07-18
ER

PT J
AU Olsson, RA
   Williamson, T
AF Olsson, Ronald A.
   Williamson, Todd
TI RJ: a Java package providing JR-like concurrent programming
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE concurrency; concurrent programming languages; concurrent programming
   packages; package design; package implementation; JR programming
   language
ID INTER-ENTRY SELECTION
AB The JR concurrent programming language extends Java with a richer concurrency model, by adding several new types and statements. JR provides dynamic remote virtual machine creation, dynamic remote object creation, remote method invocation, dynamic process creation, rendezvous, asynchronous message passing, semaphores, concurrent invocation, and shared variables. This paper presents RJ, a package for Java that provides JR-like features. The paper gives an overview of RJ and its key features; describes the implications of RJ's design, including how RJ provides additional, useful flexibility; discusses the implementation of RJ; and gives qualitative and quantitative evaluations of our work with respect to feasibility and usability, experimentation, migration, and performance. RJ has been successful in meeting these goals and in providing insight into the trade-offs between using a concurrent programming language versus using the equivalent concurrent package. Our work has yielded a few surprises in dealing with some concurrent programming language features, in understanding the run-time performances of JR versus RJ programs, and in obtaining some additional, useful flexibility for concurrent programming applications. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Olsson, Ronald A.; Williamson, Todd] Univ Calif Davis, Dept Comp Sci, One Shields Ave, Davis, CA 95616 USA.
C3 University of California System; University of California Davis
RP Olsson, RA (corresponding author), Univ Calif Davis, Dept Comp Sci, One Shields Ave, Davis, CA 95616 USA.
EM olsson@cs.ucdavis.edu
CR Andrews G.R., 2000, Foundations of Multithreaded, Parallel, and Distributed Programming
   Andrews G. R., 1991, Concurrent Programming: Principles and Practice
   ANDREWS GR, 1988, ACM T PROGR LANG SYS, V10, P51, DOI 10.1145/42192.42324
   Andrews Gregory R., 1993, SR PROGRAMMING LANGU
   Burns A, 1988, PROGRAMMING IN OCCAM
   Cave V., 2010, EVALUATION USABILITY, P9
   Chan HN, 2009, COMPUT LANG SYST STR, V35, P293, DOI 10.1016/j.cl.2008.05.002
   Chan HN, 2005, LECT NOTES COMPUT SC, V3648, P699
   COURTOIS PJ, 1971, COMMUN ACM, V14, P667, DOI 10.1145/362759.362813
   Dijkstra E. W., 1968, Programming languages, P43
   Elrad T., 1986, Proceedings of the 1986 International Conference on Parallel Processing (Cat. No.86CH2355-6), P176
   Elrad T, 1988, P 6 ANN NAT C AD TEC, P176
   GENTLEMAN WM, 1981, SOFTWARE PRACT EXPER, V11, P435, DOI 10.1002/spe.4380110504
   Hartley SJ, JAVA CONCURRENT PROG
   Keen AW, 2004, ACM T PROGR LANG SYS, V26, P578, DOI 10.1145/982158.982162
   Liskov B, 1986, P 13 ACM S PRINC PRO, P150
   McNamee CM, 1996, COMPUT LANG, V22, P259, DOI 10.1016/S0096-0551(97)00003-9
   Olsson RA, 2002, COMPUT LANG SYST STR, V28, P327, DOI 10.1016/S1477-8424(03)00002-2
   OLSSON RA, 1992, COMPUT LANG, V17, P269, DOI 10.1016/0096-0551(92)90016-G
   Olsson RA, 2015, CONCURR COMP-PRACT E, V27, P4645, DOI 10.1002/cpe.3448
   Olsson RonaldA., 2004, JR PROGRAMMING LANGU
   Williamson T., 2012, THESIS U CALIFORNIA
   Williamson T, 2014, CONCURR COMP-PRACT E, V26, P309, DOI 10.1002/cpe.2981
NR 23
TC 2
Z9 2
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2016
VL 46
IS 5
BP 685
EP 708
DI 10.1002/spe.2330
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ3YV
UT WOS:000374143500006
DA 2024-07-18
ER

PT J
AU Min, B
   Varadharajan, V
AF Min, Byungho
   Varadharajan, Vijay
TI A novel malware for subversion of self-protection in anti-virus
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE security; anti-virus; self-protection; malware; vulnerability
AB Major anti-virus solutions have introduced a feature known as self-protection' so that malware (and even users) cannot modify or disable the core functionality of their products. In this paper, we have investigated 12 anti-virus products from four vendors (AVG, Avira, McAfee and Symantec) and have discovered that they have certain security weaknesses that can be exploited by malware. We have then designed a novel malware, which makes use of the weaknesses in anti-virus software and embeds itself to become a part of the vulnerable anti-virus solution. It subverts the self-protection features of several anti-virus software solutions. This malware integrated anti-virus enjoys several advantages such as longevity (anti-virus is active while the system is running), improved stealthy behaviour, highest privilege and capability to bypass security measures. Then we propose an effective defence against such malware. We have also implemented the defensive measure and evaluated its effectiveness. Finally, we show how the proposed defence can be applied to the current versions of vulnerable anti-virus solutions without requiring signficant modifications. Copyright (c) 2015John Wiley & Sons, Ltd.
C1 [Min, Byungho; Varadharajan, Vijay] Macquarie Univ, Dept Comp, Adv Cyber Secur Res Ctr, Sydney, NSW 2109, Australia.
C3 Macquarie University
RP Varadharajan, V (corresponding author), Macquarie Univ, Dept Comp, Adv Cyber Secur Res Ctr, Sydney, NSW 2109, Australia.
EM vijay.varadharajan@mq.edu.au
OI Varadharajan, Vijay/0000-0002-3621-9114
CR AhnLab Analysis Team, 2012, MALW AN CIT
   Alvarez S., 2008, DEATH AV DEFENSE DEP
   Alvarez S., 2007, ANTIVIRUS IN SECURIT
   [Anonymous], 2009, Technical Report
   [Anonymous], 2013, Technical report
   [Anonymous], 2014, TECHNICAL REPORT
   Bassov A., 2004, KERNEL MODE API SPYI
   Bassov A., 2004, PROCESS WIDE API SPY
   Bellissimo A., 2006, HOTSEC, P37
   Berdajs J, 2010, SOFTWARE PRACT EXPER, V40, P567, DOI 10.1002/spe.973
   Bilge L., 2012, CCS 12, P833, DOI [10.1145/2382196.2382284, DOI 10.1145/2382196.2382284]
   Chien E., 2011, TECHNICAL REPORT
   Falliere N, 2011, TECHNICAL REPORT
   GPy, 2012, Technical Report
   Jana S, 2012, P IEEE S SECUR PRIV, P80, DOI 10.1109/SP.2012.15
   Kwon T., 2010, P 19 INT S SOFTW TES, P107
   Lee  J., 2010, P 2010 ACM S APPL CO, DOI DOI 10.1145/1774088.1774505
   LIAN S, 2009, HDB RES SECURE MULTI
   Lin D, 2011, J COMPUT VIROL HACKI, V7, P201, DOI 10.1007/s11416-010-0148-y
   McAfee, 2013, TECHNICAL REPORT
   McCarty Bill., 2004, SELINUX NSAS OPEN SO
   Microsoft SWI, 2014, MS14 019 FIX BIN HIJ
   Min B, 2014, SOFTWARE PRACT EXPER, V44, P1201, DOI 10.1002/spe.2197
   MSDN, 2012, EARL LAUNCH ANT
   MSDN.microsoft, 2013, WIND MAN INSTR
   MSDN.microsoft, 2012, FIL SYST FIL SYST FI
   Murad K, 2010, LECT NOTES COMPUT SC, V6485, P394, DOI 10.1007/978-3-642-17569-5_39
   Newsome J, 2005, P IEEE S SECUR PRIV, P226, DOI 10.1109/SP.2005.15
   O'Kane P, 2011, IEEE SECUR PRIV, V9, P41, DOI 10.1109/MSP.2011.98
   Oberheide J., 2009, P 3 USENIX C OFF TEC, P1
   OPSWAT, 2013, TECHNICAL REPORT
   PCI Security Standards Council, 2010, TECHNICAL REPORT
   Porst S., 2010, REALLY OBFUSCATE YOU
   Protalinski E., 2012, SOPHOS ANTIMALWARE S
   Rad BB, 2012, INT J COMPUT SCI NET, V12, P74
   Stewart A., 2014, TECHNICAL REPORT
   Sukwong O, 2011, COMPUTER, V44, P63, DOI 10.1109/MC.2010.187
   Szor P., 2001, VIRUS B C, P123
   US-CERT, 2005, TECHNICAL REPORT
   WHEELER A., 2005, BLACK HAT EUR C AMST
   Wong W, 2006, J COMPUT VIROL HACKI, V2, P211, DOI 10.1007/s11416-006-0028-7
   Xu JY, 2007, J RES PRACT INF TECH, V39, P181
   Xue F., 2008, PROC BLACK HAT EUROP, P1
   Zdziarski J., 2012, HACKING SECURING IOS
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 45
TC 7
Z9 8
U1 1
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2016
VL 46
IS 3
BP 361
EP 379
DI 10.1002/spe.2317
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DD2RH
UT WOS:000369769400004
DA 2024-07-18
ER

PT J
AU Wu, J
   Yue, T
   Ali, S
   Zhang, HH
AF Wu, Ji
   Yue, Tao
   Ali, Shaukat
   Zhang, Huihui
TI A modeling methodology to facilitate safety-oriented architecture design
   of industrial avionics software
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE avionics software; safety; component-based architecture design; UML
   profile; DO-178B; C
ID UML; SYSTEMS
AB Ensuring that avionics software meets safety requirements at each development stage is very important to warrant the safe operation of an avionics system. Many safety requirements are imposed by various standards and industrial regulations that must be met by avionics software. One of such standards is DO-178B/C, which provides guidelines (e.g., development process and objectives to satisfy in development activities) for meeting safety requirements. This paper presents a modeling methodology including a UML profile for specifying safety requirements on a component-based architecture model and a set of design guidelines on avionics software. These safety requirements were identified from both standards (mainly DO-178B/C) and current engineering practices in the domain of avionics systems. The methodology automatically enforces these safety requirements. We have applied the methodology on an industrial autopilot system, and several previously uncaught faults were revealed. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Wu, Ji; Zhang, Huihui] Beihang Univ, Sch Comp Sci & Engn, State Key Lab Software Dev Environm, Beijing 100191, Peoples R China.
   [Yue, Tao; Ali, Shaukat] Simula Res Lab, Certus Software Verificat & Validat Ctr, Lysaker, Norway.
C3 Beihang University
RP Wu, J (corresponding author), Beihang Univ, Sch Comp Sci & Engn, Beijing 100191, Peoples R China.
EM wuji@buaa.edu.cn
RI yue, tao/H-6783-2013
OI Yue, Tao/0000-0003-3262-5577; Ali, Shaukat/0000-0002-9979-3519
FU State Key Laboratory of Software Development Environment
   [SKLSDE-2013ZX-12]; Aeronautics Science Foundation of China
   [20121951021]; Research Council of Norway under the Certus SFI project;
   Ministry of Industry and Trade of Norway; Ministry of Education of China
   under the Triple-One Program [B12025]
FX This paper is the extended version of the conference paper published in
   the 13th International Conference on Quality Software (QSIC 2013) [27].
   This paper is sponsored jointly by State Key Laboratory of Software
   Development Environment (SKLSDE-2013ZX-12), Aeronautics Science
   Foundation of China (20121951021), Research Council of Norway under the
   Certus SFI project, and the Ministry of Industry and Trade of Norway,
   Ministry of Education of China under the Triple-One Program (grant
   number: B12025).
CR [Anonymous], AV FULL DUPL SWITCH
   [Anonymous], 9 INT WORKSH COMP OR
   [Anonymous], 1978, Military Standard MIL-STD-1553B
   [Anonymous], 1982, DO178BC
   [Anonymous], 2000, IEC61508
   [Anonymous], UML PROF SCHED PERF
   [Anonymous], 2010, 653 ARINC
   [Anonymous], 1996, ARP4761 SAE
   Bagnato A., 2010, P HOPES WORKSH ECMFA
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Behjati R, 2011, LECT NOTES COMPUT SC, V6698, P236, DOI 10.1007/978-3-642-21470-7_17
   Berkenkötter K, 2006, LECT NOTES COMPUT SC, V4166, P398
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Biere A, 2003, ADV COMPUT, V58, P117
   CLARKE E, 1996, LNCS, V1102, P419
   Clarke EdmundM., 1981, LECT NOTES COMPUTER, V131
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   CURIC A, 2005, THESIS U J FOURIER G
   DeFlorio F, 2011, AIRWORTHINESS: AN INTRODUCTION TO AIRCRAFT CERTIFICATION, 2ND EDITION, P1
   Grunske L, 2005, LECT NOTES COMPUT SC, V3778, P249
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Hooman J, 2008, SOFTW SYST MODEL, V7, P131, DOI 10.1007/s10270-006-0043-7
   Huhn M, 2010, LECT NOTES COMPUT SC, V6100, P201, DOI 10.1007/978-3-642-16277-0_8
   HUNGAR H, 2007, P FORMS FORMAT 2007, P467
   Iqbal Muhammad Zohaib, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P642, DOI 10.1007/978-3-642-33666-9_41
   MCDERMID JA, 2001, 19 INT SYST SAF C SY
   *OBJ MAN GROUP, 2007, UML PROF MOD AN REAL
   Panesar-Walawege RK, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P30, DOI 10.1109/ISSRE.2011.11
   Pataricza A., 2002, P UML 2002 WORKSH, P163
   PETER H, 2006, CMUSEI2006TN011
   QUIELLE J, 1981, P 5 INT S PROGR
   Spitzer C.R., 2006, Avionics: Elements, Software and Functions
   Wiklander J, 2009, J COMPUTERS, V4, P1
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wu J, 2013, INT CONF QUAL SOFTW, P55, DOI 10.1109/QSIC.2013.41
   Zoughbi G, 2007, LECT NOTES COMPUT SC, V4735, P574
NR 36
TC 7
Z9 9
U1 2
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2015
VL 45
IS 7
BP 893
EP 924
DI 10.1002/spe.2281
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8EW
UT WOS:000355733900003
DA 2024-07-18
ER

PT J
AU Abeni, L
   Kiraly, C
AF Abeni, Luca
   Kiraly, Csaba
TI Running repeatable and controlled virtual routing experiments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE virtual routing; software tools; virtualisation; KVM; software router
ID PERFORMANCE; ROUTERS
AB This paper describes an approach to perform reproducible performance tests on virtual routers, comparing different virtual routing architectures, different software versions and configurations. The presented approach is based on VRKit, a software tool that allows to build pre-configured bootable virtual router images with the desired characteristics. Design decisions are described, and some usage examples are presented, showing how the tool can be used for research on virtual routing, facilitating performance comparison of various virtual router implementations. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Abeni, Luca; Kiraly, Csaba] Univ Trento, DISI, I-38123 Trento, Italy.
C3 University of Trento
RP Kiraly, C (corresponding author), Univ Trento, DISI, Via Sommar 5, I-38123 Trento, Italy.
EM kiraly@disi.unitn.it
RI Abeni, Luca/H-1561-2016; Kiraly, Csaba/E-2952-2016
OI Abeni, Luca/0000-0002-7080-9601; Kiraly, Csaba/0000-0002-6839-5024
FU Italian Ministry of Research and Education through the PRIN SFINGI
   (SoFtware routers to Improve Next Generation Internet) project; European
   Union through the KIC EIT ICT Labs Project Smart Ubiquitous Contents
   ('SmartUC')
FX This research work is funded by the Italian Ministry of Research and
   Education through the PRIN SFINGI (SoFtware routers to Improve Next
   Generation Internet) project and by the European Union through the KIC
   EIT ICT Labs Project Smart Ubiquitous Contents ('SmartUC').
CR Abeni L, 2013, P IEEE ICC 2013 IEEE, P2396
   ANHALT F, 2009, NETW SERV 2009 ICNS, P198
   [Anonymous], P ACM CONEXT C NEW Y
   [Anonymous], P 2008 ACM CONEXT C
   [Anonymous], 2003, ACM SIGOPS OPERATING
   BELLARD F, 2005, P 2005 USENIX ANN TE
   Bianco A., 2010, P IEEE GLOB TEL C GL
   Bonelli Nicola, 2012, Traffic Monitoring and Analysis. Proceedings 4th International Workshop (TMA 2012), P157, DOI 10.1007/978-3-642-28534-9_17
   Bonelli Nicola., 2012, P 13 INT C PASSIVE A, P64
   Bourogaoui M., 2011, P 8 INT MULT SYST SI, P1
   Egi N, 2007, IEEE IC COMP COM NET, P1256
   Egi N, 2010, ACM SIGCOMM COMP COM, V40, P127, DOI 10.1145/1672308.1672332
   Fall Kevin, 2011, Operating Systems Review, V45, P112, DOI 10.1145/1945023.1945037
   Kohler E, 2000, ACM T COMPUT SYST, V18, P263, DOI 10.1145/354871.354874
   Rathore MS, 2010, IEEE GLOBE WORK, P288, DOI 10.1109/GLOCOMW.2010.5700328
   Rathore MS, 2011, LECT NOTES COMPUT SC, V6640, P379, DOI 10.1007/978-3-642-20757-0_30
   Rizzo L, 2012, COMMUN ACM, V55, P45, DOI [10.1145/2090147.2103536, 10.1145/2093548.2093565]
   Russell Rusty, 2008, Operating Systems Review, V42, P95, DOI 10.1145/1400097.1400108
   Song HY, 2012, IEEE ACM T NETWORK, V20, P1489, DOI 10.1109/TNET.2011.2181412
   Wang Y, 2008, ACM SIGCOMM COMP COM, V38, P231, DOI 10.1145/1402946.1402985
NR 20
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2015
VL 45
IS 4
BP 455
EP 471
DI 10.1002/spe.2232
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD0HU
UT WOS:000350752200002
DA 2024-07-18
ER

PT J
AU Bissyandé, TF
   Réveillère, L
   Lawall, JL
   Bromberg, YD
   Muller, G
AF Bissyande, Tegawende F.
   Reveillere, Laurent
   Lawall, Julia L.
   Bromberg, Yerom-David
   Muller, Gilles
TI Implementing an embedded compiler using program transformation rules
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE DSL; compiler construction; internal (embedded) languages; embedded
   compilers; program transformation
AB Domain-specific languages (DSLs) are well-recognized to ease programming and improve robustness for a specific domain, by providing high-level domain-specific notations and checks of domain-specific properties. The compiler of a DSL, however, is often difficult to develop and maintain, because of the need to define a specific treatment for a large and potentially increasing number of language constructs. To address this issue, we propose an approach for specifying a DSL compiler using control-flow sensitive concrete-syntax based matching rules. These rules either collect information about the source code to carry out checks or perform transformations to carry out compilation. Because rules only mention the relevant constructs, using their concrete syntax, and hide the complexity of control-flow graph traversal, it is easy to understand the purpose of each rule. Furthermore, new compilation steps can be added using only a small number of lines of code. We explore this approach in the context of the z2z DSL for network gateway development and show that it is beneficial to implement the core of its compiler in this manner.Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Bissyande, Tegawende F.] Univ Luxembourg, SnT, Luxembourg, Luxembourg.
   [Reveillere, Laurent; Bromberg, Yerom-David] Univ Bordeaux, LaBRI, F-33402 Talence, France.
   [Lawall, Julia L.; Muller, Gilles] Inria Paris Rocquencourt, Paris, France.
C3 University of Luxembourg; Universite de Bordeaux; Centre National de la
   Recherche Scientifique (CNRS)
RP Réveillère, L (corresponding author), Univ Bordeaux, LaBRI, F-33402 Talence, France.
CR [Anonymous], P 9 ACM SIGPLAN INT
   [Anonymous], RATC V3 0 DOMAIN SPE
   [Anonymous], P 24 EUR C OBJ OR PR
   [Anonymous], 2006, P 1 WORKSH DOM SPEC
   [Anonymous], DEV SYSTEMES DISTRIB
   [Anonymous], P 10 ACM IFIP USENIX
   [Anonymous], 2004, P 2004 ACM SIGPLAN W
   [Anonymous], 4 INT C GEN PROGR CO
   [Anonymous], 2008, COMP 23 ACM SIGPLAN
   [Anonymous], 2008, PROCEEDINGS OF THE 3
   [Anonymous], P 4 INT WORKSH TYP L
   Baars AI, 2004, J FUNCT PROGRAM, V14, P635, DOI 10.1017/S0956796804005143
   Baars AI, 2002, ACM SIGPLAN NOTICES, V37, P157, DOI 10.1145/583852.581494
   Baars A, 2010, ELECTRON NOTES THEOR, V253, P51, DOI 10.1016/j.entcs.2010.08.031
   Batory D, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P143, DOI 10.1109/ICSR.1998.685739
   Baxter ID, 2004, PROC INT CONF SOFTW, P625, DOI 10.1109/ICSE.2004.1317484
   Bissyandé TF, 2010, LECT NOTES COMPUT SC, V6452, P273, DOI 10.1007/978-3-642-16955-7_14
   Burgy L, 2007, SYM REL DIST SYST, P149, DOI 10.1109/SRDS.2007.26
   Consel C, 2003, LECT NOTES COMPUT SC, V2830, P1
   Cunningham H C., 2008, Proceedings of the 46th Annual Southeast Regional Conference on XX, P282
   Di Pietro DA, 2009, COMPUT VIS SCI, V12, P421, DOI 10.1007/s00791-008-0117-x
   Fowler M., 2010, Domain-specific languages
   Guyer SZ, 2005, P IEEE, V93, P342, DOI 10.1109/JPROC.2004.840489
   Hemel Z, 2008, LECT NOTES COMPUT SC, V5063, P183, DOI 10.1007/978-3-540-69927-9_13
   Hofer C, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P137
   Hudak P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P134, DOI 10.1109/ICSR.1998.685738
   Jones SLP, 1998, SCI COMPUT PROGRAM, V32, P3, DOI 10.1016/S0167-6423(97)00029-4
   Kieburtz RB, 1996, PROC INT CONF SOFTW, P542, DOI 10.1109/ICSE.1996.493448
   Kosar T, 2008, INFORM SOFTWARE TECH, V50, P390, DOI 10.1016/j.infsof.2007.04.002
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   Krishnamurthi Shriram, 2007, Higher-Order and Symbolic Computation, V20, P431, DOI 10.1007/s10990-007-9008-y
   Lacey D, 2002, ACM SIGPLAN NOTICES, V37, P283, DOI 10.1145/565816.503299
   Leijen D, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P109, DOI 10.1145/331963.331977
   Liu A, 2008, 2008 INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS, PROCEEDINGS, P245, DOI 10.1109/IPSN.2008.47
   Mérillon F, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE FOURTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P17
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mernik M, 2005, COMPUT LANG SYST STR, V31, P1, DOI 10.1016/j.cl.2004.02.001
   Muller G, 2005, NINTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH-ASSURANCE SYSTEMS ENGINEERING, P56, DOI 10.1109/HASE.2005.1
   Cardona PAN, 2015, CUAD ACT, P154
   Odersky M., 2008, PROGRAMMING SCALA CO
   Perrig A, 2002, WIREL NETW, V8, P521, DOI 10.1023/A:1016598314198
   Prud'homme C., 2006, Scientific Programming, V14, P81
   Rhiger M, 2003, ACM T PROGR LANG SYS, V25, P291, DOI 10.1145/641909.641910
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Tate B., 2006, Ruby on Rails: Up and running
   Thekkath CA, 1993, IEEE ACM T NETWORK, V1, P547, DOI 10.1109/90.251914
   Tratt L, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1391956.1391958
   van den Brand M. G. J., 2001, Compiler Construction. 10th International Conference, CC 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2027), P365
   Visser E., 2001, Rewriting Techniques and Applications. 12th International Conference, RTA 2001. Proceedings (Lecture Notes in Computer Science Vol.2051), P357
   Wand Mitchell., 1980, LISP FUNCTIONAL PROG, P19, DOI DOI 10.1145/800087.802786
NR 51
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2015
VL 45
IS 2
BP 177
EP 196
DI 10.1002/spe.2225
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY4FJ
UT WOS:000347533400003
OA Green Published
DA 2024-07-18
ER

PT J
AU Rodríguez-Silva, DA
   Rodríguez-Cruz, I
   González-Castaño, FJ
AF Rodriguez-Silva, Daniel A.
   Rodriguez-Cruz, Iria
   Gonzalez-Castano, Francisco J.
TI A software architecture for virtualized educational multimedia games in
   IPTV environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE t-Learning; IPTV; educational games; set-top-box; remote desktop; RFB;
   streaming; cloud computing
ID TELEVISION
AB T-Learning makes it possible to deliver educational content to home TVs. TV operators, which manage huge populations of devices such as set-top-boxes (STBs) in user homes, are considering t-Learning as an interesting option for expanding the service they offer. However, typical STB hardware configurations are limited in terms of satisfying operator needs and do not easily support all types of applications or content. In this work, we consider graphic <e-Adventure> educational games, which are not directly executable on typical STBs. To cover this gap and guarantee an enjoyable user experience, we present an architecture based on a combination of streaming and remote desktop protocols that relies on virtualized servers deployed in a cloud computing infrastructure. It features an original image-encoding signalling mechanism that identifies multimedia content in educational games and permits seamless protocol switching at the client side. This architecture is a complete technological solution to virtualize heavy educational games and execute them smoothly on STB light clients over Internet Protocol Television networks. We present performance results that show that our proposal is an efficient scalable solution to deliver t-Learning to home environments. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Rodriguez-Silva, Daniel A.; Rodriguez-Cruz, Iria; Gonzalez-Castano, Francisco J.] Gradiant, Virgo 36310, Spain.
   [Gonzalez-Castano, Francisco J.] Univ Vigo, Escuela Ingn Telecomunicac, AtlantTIC, Virgo 36310, Spain.
C3 Universidade de Vigo; atlanTTic
RP González-Castaño, FJ (corresponding author), ETSI Telecomunicac, Vigo 36310, Spain.
EM javier@det.uvigo.es
RI González-Castaño, Francisco J./D-2637-2018; Rodriguez Silva, Daniel
   Amos/M-4674-2015
OI Rodriguez Silva, Daniel Amos/0000-0003-0493-1876; Gonzalez-Castano,
   Francisco Javier/0000-0001-5225-8378
FU project SECANI [10SEC001CT]; project Xunta de Galicia, Spain; project
   VIMAIN, Mineco, Spain [IPT-2011-1224-430000]
FX This research was supported by projects SECANI (10SEC001CT), Xunta de
   Galicia, Spain and VIMAIN (IPT-2011-1224-430000), Mineco, Spain.
CR AARRENIEMIJOKIP.P, 2005, P 16 EAEEIE ANN C IN, P1
   ADAM M, 2008, AUSLAUFMODELL FERNSE
   CESAR P, 2008, COMPUTERS ENTERTAINM
   COLACE F, 2008, P 3 INT C INF COMM T, P1
   DELBLANCO A, 2010, P INT J DISTANCE ED, V8, P1
   Dong B, 2009, ICALT: 2009 IEEE INTERNATIONAL CONFERENCE ON ADVANCED LEARNING TECHNOLOGIES, P125, DOI 10.1109/ICALT.2009.21
   DOSSANTOS D, 2006, P 36 ASEE IEEE FRONT, P28
   Feng XZ, 2009, FIRST IITA INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P723, DOI 10.1109/JCAI.2009.85
   Janardhan V., 2007, Proceedings of the 2007 workshop on Peer-to-peer streaming and IP-TV, P335
   Jensen JF, 2008, LECT NOTES COMPUT SC, V5066, P1, DOI 10.1007/978-3-540-69478-6_1
   Liu KG, 2010, INT REV NEUROBIOL, V94, P1, DOI 10.1016/B978-0-12-384976-2.00001-0
   LYTRAS M, 2002, EUR C E LEARN ECEL 2, P211
   Rajam Sidhant, 2010, Proceedings of the 2010 IEEE/ACM International Conference on Web Intelligence-Intelligent Agent Technology - Workshops (WI-IAT 2010), P350, DOI 10.1109/WI-IAT.2010.294
   Richardson T, 1998, IEEE INTERNET COMPUT, V2, P33, DOI 10.1109/4236.656066
   Richardson T., RFB PROTOCOL VERSION
   Richardson T., 2011, 6143 IETF RFC, V6143
   SANGHO Y, 2010, P 3 IEEE INT C CLOUD, P236
   SCHEIFLER R, 1990, SOFTWARE PRACTICE EX, V20, pS5
   Schulzrinne H., 1998, 2326 RFC
   SHI W, 2010, P IEEE 3 INT C CLOUD, P346
   SQUIRE K, 2003, P INT J INTELLIGENT, V2, P49
   SU J, 2012, TELECOMMUNICATIONS S, V28, P90
   Thompson G, 2009, IEEE INTERNET COMPUT, V13, P11, DOI 10.1109/MIC.2009.63
   Torrente Javier, 2010, 2010 IEEE Education Engineering 2010 - The Future of Global Learning Engineering Education (EDUCON 2010), P1121, DOI 10.1109/EDUCON.2010.5493056
   Torrente J, 2009, EDUC TECHNOL SOC, V12, P359
   UDEN L, 2007, P 1 IEEE INT C DIG E, P113
   Wey JS, 2009, IEEE INTERNET COMPUT, V13, P32, DOI 10.1109/MIC.2009.69
   ZAJC M, 2007, ZBORN 16 MEDN EL RAC
   Zeadally S, 2011, IEEE SYST J, V5, P518, DOI 10.1109/JSYST.2011.2165601
NR 29
TC 2
Z9 2
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2015
VL 45
IS 2
BP 143
EP 160
DI 10.1002/spe.2219
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY4FJ
UT WOS:000347533400001
DA 2024-07-18
ER

PT J
AU Lemire, D
   Boytsov, L
AF Lemire, D.
   Boytsov, L.
TI Decoding billions of integers per second through vectorization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance; measurement; index compression; vector processing
ID COMPRESSION; PERFORMANCE; INTERSECTION; ALGORITHM
AB In many important applications-such as search engines and relational database systems-data are stored in the form of arrays of integers. Encoding and, most importantly, decoding of these arrays consumes considerable CPU time. Therefore, substantial effort has been made to reduce costs associated with compression and decompression. In particular, researchers have exploited the superscalar nature of modern processors and single-instruction, multiple-data (SIMD) instructions. Nevertheless, we introduce a novel vectorized scheme called SIMD-BP128(star) that improves over previously proposed vectorized approaches. It is nearly twice as fast as the previously fastest schemes on desktop processors (varint-G8IU and PFOR). At the same time, SIMD-BP128(star) saves up to 2 bits/int. For even better compression, we propose another new vectorized scheme (SIMD-FastPFOR) that has a compression ratio within 10% of a state-of-the-art scheme (Simple-8b) while being two times faster during decoding. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Lemire, D.] TELUQ, LICEF Res Ctr, Montreal, PQ, Canada.
   [Boytsov, L.] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 University of Quebec; Universite TELUQ; Carnegie Mellon University
RP Lemire, D (corresponding author), Univ Quebec, TELUQ, LICEF Res Ctr, 5800 St Denis, Montreal, PQ H2S 3L5, Canada.
EM lemire@gmail.com
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922
FU Natural Sciences and Engineering Research Council of Canada [261437]
FX Contract/grant sponsor: Natural Sciences and Engineering Research
   Council of Canada; contract/grant number: 261437.
CR Abadi D.J., 2006, P SIGMOD 06, P671, DOI [10.1145/1142473.1142548, DOI 10.1145/1142473.1142548]
   Anh VN, 2005, INFORM RETRIEVAL, V8, P151, DOI 10.1023/B:INRT.0000048490.99518.5c
   Anh VN, 2010, SOFTWARE PRACT EXPER, V40, P131, DOI 10.1002/spe.948
   [Anonymous], 2011, INTRO SEARCH SPHINX
   [Anonymous], 2006, Proceedings of the 32Nd International Conference on Very Large Data Bases, VLDB'06
   [Anonymous], 1999, Compressing and Indexing Documents and Images
   Ao NY, 2011, PROC VLDB ENDOW, V4, P470
   Baeza-Yates Ricardo, 2012, Advances in Information Retrieval. Proceedings of the 34th European Conference on IR Research (ECIR 2012), P436, DOI 10.1007/978-3-642-28997-2_37
   Baeza-Yates R, 2005, LECT NOTES COMPUT SC, V3772, P13
   Binnig C, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P283
   Bjorklund T. A., 2009, CIKM, P1509, DOI DOI 10.1145/1645953.1646158
   Boystov L., 2012, CLUEWEB03 POSTING LI
   Brenes DJ, 2009, INFORM SCIENCES, V179, P1844, DOI 10.1016/j.ins.2009.01.027
   Buttcher S., 2010, Information Retrieval-Implementing and Evaluating Search Engines
   Buttcher Stefan, 2007, P 16 ACM C INF KNOWL, P761, DOI DOI 10.1145/1321440.1321546
   Cutting D., 1990, P 13 ANN INT ACM SIG, P405, DOI [10.1145/96749.98245, DOI 10.1145/96749.98245]
   Dean J., 2009, WSDM 09 P 2 ACM INT, V10, DOI [10.1145/1498759.1498761.No.1498759.1498761, DOI 10.1145/1498759.1498761, 10.1145/1498759.1498761]
   Delbru R, 2012, J WEB SEMANT, V10, P33, DOI 10.1016/j.websem.2011.04.004
   Deveaux JP, 2007, LECT NOTES COMPUT SC, V4653, P109
   Ding B, 2011, PROC VLDB ENDOW, V4, P255, DOI 10.14778/1938545.1938550
   Drepper Ulrich, 2007, What Every Programmer Should Know About Memory
   ELIAS P, 1975, IEEE T INFORM THEORY, V21, P194, DOI 10.1109/TIT.1975.1055349
   Fusco F, 2010, PROC VLDB ENDOW, V3, P1382, DOI 10.14778/1920841.1921011
   Goldstein J, 1998, PROC INT CONF DATA, P370, DOI 10.1109/ICDE.1998.655800
   Hall A, 2012, PROC VLDB ENDOW, V5, P1436, DOI 10.14778/2350229.2350259
   Holloway AL, 2008, PROC VLDB ENDOW, V1, P502, DOI 10.14778/1453856.1453912
   Holloway Allison L., 2007, P 2007 ACM SIGMOD IN, P389
   Inoue H, 2012, SOFTWARE PRACT EXPER, V42, P753, DOI 10.1002/spe.1102
   Jonassen Simon, 2012, Advances in Information Retrieval. Proceedings of the 34th European Conference on IR Research (ECIR 2012), P413, DOI 10.1007/978-3-642-28997-2_35
   Jones Derek M., 2003, NEW C STANDARD CULTU
   Lemire D, 2011, INFORM SCIENCES, V181, P2550, DOI 10.1016/j.ins.2011.02.002
   Lemke C, 2010, LECT NOTES COMPUT SC, V6263, P117, DOI 10.1007/978-3-642-15105-7_10
   Manegold S, 2009, PROC VLDB ENDOW, V2, P1648, DOI 10.14778/1687553.1687618
   Moffat A, 2000, INFORM RETRIEVAL, V3, P25, DOI 10.1023/A:1013002601898
   Ng WK, 1997, IEEE T KNOWL DATA EN, V9, P314, DOI 10.1109/69.591455
   Pass G., 2006, ser. ACM International Conference Proceeding Series, V152, P1, DOI DOI 10.1145/1146847.1146848
   Poess M., 2003, VLDB, P937
   Popov P., 2010, COMMUNICATION
   Raman V., 2006, P 32 INT C VERY LARG, P858
   RICE RF, 1971, IEEE T COMMUN TECHN, VCO19, P889, DOI 10.1109/TCOM.1971.1090789
   Schlegel B, 2011, ADMS WORKSH SEATTL W
   Schlegel Benjamin, 2010, P 6 INT WORKSHOP DAT, DOI [DOI 10.1145/1869389.1869394, 10.1145/1869389.1869394]
   Sebot J., 2001, Euro-Par 2001 Parallel Processing. 7th International Euro-Par Conference. Proceedings (Lecture Notes in Computer Science Vol.2150), P439
   Silvestri Fabrizio, 2010, P 19 ACM INT C INF K, P1219, DOI DOI 10.1145/1871437.1871592
   Stepanov Alexander A., 2011, Proceedings of the 20th ACM International Conference on Information and Knowledge Management, CIKM '11, P317
   THIEL LH, 1972, INFORM STORAGE RET, V8, P1, DOI 10.1016/0020-0271(72)90024-1
   Transier F, 2010, ACM T INFORM SYST, V29, DOI 10.1145/1877766.1877768
   Vigna Sebastiano, 2013, P 6 ACM INT C WEB SE, P83
   Walder J, 2012, INFORM SCIENCES, V183, P66, DOI 10.1016/j.ins.2011.06.019
   Wassenberg J, 2012, SOFTWARE PRACT EXPER, V42, P1095, DOI 10.1002/spe.1109
   Westmann T, 2000, SIGMOD REC, V29, P55, DOI 10.1145/362084.362137
   Willhalm T., 2009, P VLDB ENDOW, V2, P385, DOI DOI 10.14778/1687627.1687671
   Williams HE, 1999, COMPUT J, V42, P193, DOI 10.1093/comjnl/42.3.193
   Williams R. N., 1991, DCC '91. Data Compression Conference (Cat. No.91TH0373-1), P362, DOI 10.1109/DCC.1991.213344
   Yan Hao, 2009, P INT C WORLD WID WE, P401, DOI [DOI 10.1145/1526709.1526764, 10.1145/1526709.1526764]
   Zhang J., 2008, P 17 INT C WORLD WID, P387, DOI [DOI 10.1145/1367497.1367550, 10.1145/ 1367497.1367550]
   Zhou Jingren, 2002, P 2002 ACM SIGMOD IN, P145, DOI DOI 10.1145/564691.564709
   Zukowski M., 2009, THESIS U VAN AMSTERD
   Zukowski Marcin, 2006, ICDE 59, DOI DOI 10.1109/ICDE.2006.150
NR 59
TC 52
Z9 76
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2015
VL 45
IS 1
BP 1
EP 29
DI 10.1002/spe.2203
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY4FC
UT WOS:000347532700001
OA Green Submitted, Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU French, GW
   Kennaway, JR
   Day, AM
AF French, G. W.
   Kennaway, J. R.
   Day, A. M.
TI Programs as visual, interactive documents
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; Python; environment; visual programming; interactive;
   visualization; implementation
AB We present a novel approach to combined textual and visual programming by allowing visual, interactive objects to be embedded within textual source code and segments of source code to be further embedded within those objects. We retain the strengths of text-based source code, while enabling visual programming where it is beneficial. Additionally, embedded objects and code provide a simple object-oriented approach to adding a visual form of LISP-style macros to a language. The ability to freely combine source code and visual, interactive objects with one another allows for the construction of interactive programming tools and experimentation with novel programming language extensions. Our visual programming system is supported by a type coercion-based presentation protocol that displays normal Java and Python objects in a visual, interactive form. We have implemented our system within a prototype interactive programming environment called 'The Larch Environment'. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [French, G. W.; Kennaway, J. R.; Day, A. M.] Univ E Anglia, Sch Comp Sci, Norwich NR4 7TJ, Norfolk, England.
C3 University of East Anglia
RP French, GW (corresponding author), Univ E Anglia, Sch Comp Sci, Norwich NR4 7TJ, Norfolk, England.
EM gfrench@cmp.uea.ac.uk
RI Kennaway, Richard/F-8190-2013
FU Jython project [41]
FX We would like to thank the contributors to the open source Jython
   project [41], the Java-based Python implementation, as Larch relies on
   it heavily. Our system utilizes Martin Jericho's 'Jericho' HTML parsing
   library and Mark McKay's 'svgSalamander' library. Our thanks go to Dr.
   Joost Noppen, for his advice, and Dr. Gregory V. Wilson, whose ACM Queue
   article [42] provided the initial inspiration for our project.
CR [Anonymous], 2005, Proceedings of the SIGCHI conference on Human factors in computing systems
   Birnbaum BE, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P259, DOI 10.1109/VLHCC.2005.15
   Blackwell AF, 2001, SWYN VISUAL REPRESEN, P245
   Bragdon A, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2503
   Burbeck S., 1992, Applications Programming in Smalltalk-80(TM):How to use Model-View-Controller (MVC)
   BURNETT MM, 1995, COMPUTER, V28, P45, DOI 10.1109/2.366157
   Bykov V, 2008, TECHNICAL REPORT
   DeLine R., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P207, DOI 10.1145/1810295.1810331
   Desmond M, 2009, PSYCHOL PROGRAMMING
   Django Software Foundation, 2012, DJANG TEMPL LANG
   Eisenberg AD, 2008, THESIS U BRIT COLUMB
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Green TRG, 1992, HUM COMP INT TASKS O
   Hanna K, 2006, LECT NOTES COMPUT SC, V4015, P196
   Heckmann R, 1997, J FUNCTIONAL PROGRAM, V7, P451
   Helminen J, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P153
   Intentional Software Microsoft Corporation, 2009, INT SOFTW DSL DEVC 2
   Jetbrains, 2009, JETBR MET PROGR SYST
   Knuth Donald Ervin, 1984, TEXBOOK
   Ko A. J., 2005, S US INT SOFTW TECHN, P3, DOI [DOI 10.1145/1095034.1095037, 10.1145/1095034, DOI 10.1145/1095034]
   Ko Amy J., 2006, P SIGCHI C HUM FACT, P387, DOI DOI 10.1145/1124772.1124831
   Maloney J., 2010, ACM T COMPUT EDUC, V10, P16, DOI DOI 10.1145/1868358.1868363
   McDirmid S., 2011, P 10 SIGPLAN S NEW I, P61
   Microsoft Inc, 2008, XAML OV WPF
   Myers B. A., 1990, Journal of Visual Languages and Computing, V1, P97, DOI 10.1016/S1045-926X(05)80036-9
   Pérez F, 2007, COMPUT SCI ENG, V9, P21, DOI 10.1109/MCSE.2007.53
   Peyton-Jones S, 2002, HASKELL 98 NONSTRICT
   Schrage MM, 2003, TECHNICAL REPORT
   Schrage MM, 2004, THESIS U UTRECHT UTR
   Stasko J.T., 1998, SOFTWARE VISUALIZATI
   Sun Microsystems Inc, 2006, SWING JAV FDN CLASS
   The Python Software Foundation, 2005, JYTH PROJ
   Tillmann N., 2011, P 10 SIGPLAN S NEW I, P49, DOI DOI 10.1145/2048237.2048245
   Victor B, 2012, LEARNABLE PRORGRAMMI
   Whitley KN, 1997, J VISUAL LANG COMPUT, V8, P109, DOI 10.1006/jvlc.1996.0030
   Wilson GV, 2004, ACM QUEUE, V2, P48
   Wolfram Research Inc, 2008, Dynamic Interactivity-Wolfram Mathematica Tutorial Collection
   Wolfram Research Inc, 2008, NOT DOC WOLFR MATH T
NR 39
TC 2
Z9 3
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2014
VL 44
IS 8
BP 911
EP 930
DI 10.1002/spe.2182
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AL9RW
UT WOS:000339479400003
DA 2024-07-18
ER

PT J
AU Cao, J
   Fu, JW
   Li, ML
   Chen, JJ
AF Cao, Jian
   Fu, Jiwen
   Li, Minglu
   Chen, Jinjun
TI CPU load prediction for cloud environment based on a dynamic ensemble
   model
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CPU load prediction; cloud computing environment; ensemble model;
   predictor optimization
ID PERFORMANCE
AB Resource performance prediction is becoming more and more important in cloud environment, and CPU load prediction is helpful for system maintenance and application schedule. However, the best predictor often varies from one resource to another. At the same time, CPU load in cloud environment has a wide range of dynamics so that the best predictor for any particular CPU load time series may change over time. Ensemble method, which can use multiple models to obtain better performances, is investigated to support CPU load prediction in this paper. The novel ensemble model proposed consists of two layers. The predictor optimization layer can continuously incorporate new predictor instances and remove those ones with a poor performance. The ensemble layer is responsible for producing the final prediction based on the results of multiple predictor instances. In addition, the ensemble layer can also provide feedbacks to the predictor optimization layer, which helps it to adopt appropriate optimization strategies. Extensive experiments have been performed on CPU load traces collected from an in-production private cloud environment, and it shows this ensemble model has a better performance than any individual model. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Cao, Jian; Fu, Jiwen; Li, Minglu] Shanghai Jiao Tong Univ, Shanghai, Peoples R China.
   [Chen, Jinjun] Univ Technol Sydney, Sydney, NSW 2007, Australia.
C3 Shanghai Jiao Tong University; University of Technology Sydney
RP Cao, J (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.
EM cao-jian@sjtu.edu.cn
RI Chen, Jinjun/AAP-2361-2020
OI Chen, Jinjun/0000-0003-1677-9525
FU China National Science Foundation [61073021, 61272438]; Research Funds
   of Science and Technology Commission of Shanghai Municipality
   [11511500102, 12511502704]; Cross Research Fund of Biomedical
   Engineering of Shanghai Jiaotong University [YG2011MS38]
FX The work described in this paper was supported by Morgan Stanley. Morgan
   Stanley and Shanghai Jiao Tong University Innovation Center of Computing
   in Financial Services have entered into Collaboration Agreement No.
   CIP-A20110324-2. This work was also partially supported by China
   National Science Foundation (granted numbers 61073021 and 61272438),
   Research Funds of Science and Technology Commission of Shanghai
   Municipality (granted numbers 11511500102 and 12511502704), Cross
   Research Fund of Biomedical Engineering of Shanghai Jiaotong University
   (YG2011MS38).
CR Adhikari Ratnadip, 2012, Advances in Knowledge Discovery and Data Mining. Proceedings 16th Pacific-Asia Conference (PAKDD 2012), P38, DOI 10.1007/978-3-642-30217-6_4
   [Anonymous], 2003, P 17 INT PAR DISTR P
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Barr D, 2010, IAMSLIC C S, P1, DOI 10.1109/IJCNN.2010.5596686
   Bey KB, 2009, EIGHTH INTERNATIONAL SYMPOSIUM ON PARALLEL AND DISTRIBUTED COMPUTING, PROCEEDINGS, P39, DOI 10.1109/ISPDC.2009.8
   Bey KB, 2011, NEUROCOMPUTING, V74, P1606, DOI 10.1016/j.neucom.2011.01.009
   Bouchachia A, 2008, 1 INT WORKSH NONL DY
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Brockwell PJ, INTRO TIME SERIES FO, VXIV
   De Gooijer JG, 2006, INT J FORECASTING, V22, P443, DOI 10.1016/j.ijforecast.2006.01.001
   Dinda P. A., 1998, Languages, Compilers, and Run-Time Systems for Scalable Computers. 4th International Workshop, LCR '98. Selected Papers, P319
   Dinda PA, 2006, IEEE T PARALL DISTR, V17, P160, DOI 10.1109/TPDS.2006.24
   Gheyas IA, 2011, NEUROCOMPUTING, V74, P3855, DOI 10.1016/j.neucom.2011.08.005
   Gidon E, YULE WALKER EQUATION
   HANSEN LK, 1990, IEEE T PATTERN ANAL, V12, P993, DOI 10.1109/34.58871
   Jianhuang Liang, 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P23, DOI 10.1109/DASC.2011.28
   Khashei M, 2012, EXPERT SYST APPL, V39, P4344, DOI 10.1016/j.eswa.2011.09.157
   Liang J, 2004, 2004 IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID - CCGRID 2004, P293
   Lora A.T., 2003, C TECHN TRANSF, P577
   Massie ML, 2004, PARALLEL COMPUT, V30, P817, DOI 10.1016/j.parco.2004.04.001
   Ranjan R, 2013, J INTERNET SERV APPL, V4, DOI 10.1186/1869-0238-4-2
   RASTRIGIN LA, 1964, AUTOMAT REM CONTR+, V24, P1337
   Schapire RE, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P1401
   SCHRACK G, 1976, MATH PROGRAM, V10, P230, DOI 10.1007/BF01580669
   Schumer M., 1968, IEEE T AUTOMAT CONTR, V13, P270, DOI DOI 10.1109/TAC.1968.1098903
   Lora AT, 2007, IEEE T POWER SYST, V22, P1294, DOI 10.1109/TPWRS.2007.901670
   Valenzuela O, 2008, FUZZY SET SYST, V159, P821, DOI 10.1016/j.fss.2007.11.003
   Wang LH, 2008, CONCURR COMP-PRACT E, V20, P1759, DOI 10.1002/cpe.1328
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P1661, DOI 10.1016/j.future.2013.02.010
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P739, DOI 10.1016/j.future.2012.09.001
   White Jr RC, SURVEY RANDOM METHOD
   Wolski R., 1999, Proceedings. The Eighth International Symposium on High Performance Distributed Computing (Cat. No.99TH8469), P105, DOI 10.1109/HPDC.1999.805288
   Wolski R., 1998, Cluster Computing, V1, P119, DOI 10.1023/A:1019025230054
   Wu YW, 2010, IEEE T PARALL DISTR, V21, P925, DOI 10.1109/TPDS.2009.137
   Yankov D, 2006, LECT NOTES COMPUT SC, V4212, P545
   Yuan YL, 2008, IEEE ACM INT SYMP, P340
   Zhang J, 2007, 21 INT PAR DISTR PRO, P1
NR 37
TC 38
Z9 45
U1 1
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2014
VL 44
IS 7
SI SI
BP 793
EP 804
DI 10.1002/spe.2231
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ5NN
UT WOS:000337731000003
DA 2024-07-18
ER

PT J
AU Fabry, J
   Galdames, D
AF Fabry, Johan
   Galdames, Daniel
TI PHANtom: a modern aspect language for Pharo Smalltalk
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE PHANtom; Aspect-Oriented Programming; Smalltalk
AB In the context of our research on Aspect-Oriented Programming, we have a need for a modern and powerful aspect language for Smalltalk. Current aspect languages for Smalltalk however fall short on various points. To address this deficit, we elected to design and build PHANtom: a modern aspect language for Pharo Smalltalk. PHANtom is designed to be an aspect language in the spirit of Smalltalk: dynamic, simple, and powerful. PHANtom is a modern aspect language because it incorporates the best features of languages that precede it, includes recent research results in aspect interactions and reentrancy control, and is designed from the onset to be optimized and compiled where possible. In this paper, we present the latest version of the language and give examples and patterns of use. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Fabry, Johan; Galdames, Daniel] Univ Chile, Comp Sci Dept DCC, PLEIAD Lab, Santiago, Chile.
C3 Universidad de Chile
RP Fabry, J (corresponding author), DCC Univ Chile, Blanco Encalada 2120, Santiago, Chile.
EM jfabry@dcc.uchile.cl
FU FONDECYT [1090083]
FX Johan Fabry is partially funded by FONDECYT, grant number: 1090083.
CR [Anonymous], SMALLTALK BEST PRACT
   Assaf A, 2008, P 2008 S DYN LANG DL
   Bergel A, 2012, COMPUT LANG SYST STR, V38, P16, DOI 10.1016/j.cl.2011.10.002
   BRANT J, 1998, LNCS, V1445, P396
   Chitchyan R, 2009, LECT NOTES COMPUT SC, V5490, P133
   Cleenewerck T, 2009, P 4 WORKSH DOM SPEC
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   DUCASSE S, 2005, TOOLS SOFTWARE MAINT, P55
   Fabry J, 2011, P IWST2011 IN PRESS
   Fabry J, 2011, CONF PROC INT SYMP C, P121, DOI 10.1109/ICPC.2011.11
   Hilsdale E., 2004, INT C ASPECT ORIENTE, P26
   Hirschfeld R, 2003, LECT NOTES COMPUT SC, V2591, P216
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   Lienhard A, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P67, DOI 10.1109/VISSOF.2007.4290702
   Marot A., 2011, THESIS U LIBRE BRUXE
   Rajan H, 2005, PROC INT CONF SOFTW, P59
   Renggli Lukas, 2010, 4 WORKSH DYN LANG AP
   Tanter E, 2012, P 11 WORKSH FDN ASP
   Tanter Eric, 2010, P 9 ACM INT C ASP OR, P37, DOI DOI 10.1145/1739230.1739236
NR 19
TC 0
Z9 0
U1 0
U2 4
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2014
VL 44
IS 4
SI SI
BP 393
EP 412
DI 10.1002/spe.2117
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1IH
UT WOS:000332987100002
DA 2024-07-18
ER

PT J
AU Tan, YS
   Tan, JQ
   Chng, ES
   Lee, BS
   Li, JM
   Date, S
   Chak, HP
   Xiao, X
   Narishige, A
AF Tan, Yu Shyang
   Tan, Jiaqi
   Chng, Eng Siong
   Lee, Bu-Sung
   Li, Jiaming
   Date, Susumu
   Chak, Hui Ping
   Xiao, Xiong
   Narishige, Atsushi
TI Hadoop framework: impact of data organization on performance
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mapreduce; hadoop; performance tuning; distributed computing
AB Hadoop, based on the popular MapReduce framework, is an open-source distributed computing framework that has been gaining much popularity and usage. It aims to allow programmers to focus on building applications that deals with processing large amount of data, without having to handle other issues when performing parallel computations. However, tuning the performance of Hadoop applications is not an easy task due to the level of abstraction of the framework. In this paper, we present three case studies and some of the challenges and issues that are to be considered in performance tuning when running applications in Hadoop. The focus is mainly on the impact of input data on Hadoop's performance and how they can be tuned. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Tan, Yu Shyang; Chng, Eng Siong; Lee, Bu-Sung; Li, Jiaming; Chak, Hui Ping; Xiao, Xiong] Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
   [Tan, Jiaqi] DSO Natl Labs, Singapore, Singapore.
   [Date, Susumu; Narishige, Atsushi] Osaka Univ, Osaka, Japan.
C3 Nanyang Technological University; Osaka University
RP Tan, YS (corresponding author), Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
EM tanys@ntu.edu.sg
RI Xiao, Xiong/KOD-4332-2024; Eng-Siong, CHNG/ABH-6779-2020; Lee, Francis
   BS/G-9323-2014
OI Eng-Siong, CHNG/0000-0001-6257-7399; Lee, Francis
   BS/0000-0001-7828-7900; Tan, Yu Shyang/0000-0001-7282-8980; Date,
   Susumu/0000-0001-7159-289X
FU project Scalable High Performance Computing using Cloud Computing; NTU;
   A*STAR User and Domain Driven Data Analytic Service [102 1580034];
   Infocomm Development Authority, IDA, Singapore
FX This Manuscript is supported under the project Scalable High Performance
   Computing using Cloud Computing, funded by the NTU grant and A*STAR User
   and Domain Driven Data Analytic Service Framework under the Serc grant,
   grant number: 102 1580034.The authors thank the Gulliver project and its
   administrators for providing the necessary data logs and support
   rendering in the root DNS log file analysis project. The authors also
   thank researchers at the Institute of High Performance Computing (IHPC)
   at A*STAR research institute for sharing their valuable insights and for
   providing the cluster log files used in the Cluster log file analysis
   project. Finally, the authors also thank Infocomm Development Authority,
   IDA, Singapore for providing funding for resource usage of the Open
   Cirrus for the project on the Parallel Speech Recognition Model
   Training.
CR [Anonymous], 2009, HAD PERF TEST
   [Anonymous], 2010, HDFS USER GUIDE
   Chu C, 2006, NIPS 06 VANC
   Dean Jeffrey, 2004, OSDI 04, P10
   Gaggero M, 2008, CCA 08 GLEACH CTR
   Kavulya S, 2010, CCGRID10 MELB VIC AU, P94
   Lea W., OPTIMIZING HADOOP DE
   Lee B, 2010, CCV10 SING
   Lee BS, 2010, IEEE IFIP NETW OPER, P862, DOI 10.1109/NOMS.2010.5488355
   Liu X, 2009, INT CONF NANO MICRO, P1000, DOI 10.1109/NEMS.2009.5068742
   Olston C, 2008, USENIX 2008 ANN TECH
   Sandholm T, 2009, PERF E R SI, V37, P299
   Tan J, 2009, HOTCLOUD 09 SAN DIEG
   Xiao XO, 2010, IEEE T AUDIO SPEECH, V18, P1158, DOI 10.1109/TASL.2009.2031236
   Young S, 2010, HVITE
   Zaharia M., 2008, P 8 USENIX C OP SYST, P29
NR 16
TC 7
Z9 11
U1 0
U2 43
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2013
VL 43
IS 11
SI SI
BP 1241
EP 1260
DI 10.1002/spe.1082
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 233IF
UT WOS:000325561000001
DA 2024-07-18
ER

PT J
AU Wibisono, A
   Koning, R
   Grosso, P
   Belloum, A
   Bubak, M
   de Laat, C
AF Wibisono, Adianto
   Koning, Ralph
   Grosso, Paola
   Belloum, Adam
   Bubak, Marian
   de Laat, Cees
TI OINTED: online ontology instance editor enabling a new approach to
   ontology development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ontology development; ontology instantiation; adaptive software; online
   editor; virtualized infrastructure
ID EVOLUTION
AB Ontology development involves people with different background knowledge and expertise. It is an elaborate process, where sophisticated tools for experienced knowledge engineers are available. However, domain experts need simple tools that they can use to focus on ontology instantiation. In this paper, we propose a methodology with a separation of concern between domain experts and knowledge engineers. This separation allows domain experts to focus on information processing and ontology instantiation while providing immediate feedback to the knowledge engineers on usability of the ontology being developed. We have designed and implemented OINTED, an adaptive online ontology instance editor that supports this methodology. We present usage examples of OINTED that highlight three main features: the intuitive visualization of concepts, instances, and relationships within an ontology; the seamless integration in pre-existing problem solving environment; and the assistance in ontology evolution. OINTED complements existing tools suited for knowledge engineers by enabling immediate feedback and a shorter ontology development life cycle. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Wibisono, Adianto; Koning, Ralph; Grosso, Paola; Belloum, Adam; Bubak, Marian; de Laat, Cees] Univ Amsterdam, Inst Informat, Amsterdam, Netherlands.
C3 University of Amsterdam
RP Wibisono, A (corresponding author), Univ Amsterdam, Inst Informat, Sci Pk 904, Amsterdam, Netherlands.
EM a.wibisono@uva.nl
OI Belloum, Adam/0000-0001-6306-6937; Grosso, Paola/0000-0003-4600-9812;
   Bubak, Marian/0000-0001-6083-0549
FU European Commission [257867 - NOVI]; Dutch national program COMMIT
   Application of Information and Communication Technology; Gigaport Next
   Generation Network
FX This work was partially supported by the European Commission, 7th
   Framework Programme for Research and Technological Development,
   Capacities, Grant No. 257867 - NOVI. Furthermore, this publication was
   supported by the Dutch national program COMMIT Application of
   Information and Communication Technology and Gigaport Next Generation
   Network.
CR [Anonymous], P FNMS
   [Anonymous], 2011, PREL LICL SOFTW REL
   [Anonymous], FEDERICA FED E INFR
   Baader F., 2003, BASIC DESCRIPTION LO, V1st
   Bechhofer S., 2004, W3C recommendation
   Belloum A, 2011, IEEE INTERNET COMPUT, V15, P39, DOI 10.1109/MIC.2011.87
   Bizer C, 2009, INT J SEMANT WEB INF, V5, P1, DOI 10.4018/jswis.2009081901
   Boose J. H., 1989, Knowledge Acquisition, V1, P3, DOI 10.1016/S1042-8143(89)80003-2
   Brickley D., 2004, RDF VOCABULARY DESCR
   Campanella M, 2011, DELIVERABLE 2 2 1 IN
   Dijkstra F, 2009, FUTURE GENER COMP SY, V25, P142, DOI 10.1016/j.future.2008.07.002
   Fielding R. T, 2002, ACM Transactions on Internet Technology (TOIT), V2, P115, DOI [DOI 10.1145/514183.514185, 10.1145/514183.514185]
   Figuerola S., 2010, OPT INT COIN 2010 9, P1
   Gennari JH, 2003, INT J HUM-COMPUT ST, V58, P89, DOI 10.1016/S1071-5819(02)00127-1
   Geysers, 2011, GEN ARCH DYN INFR SE
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Haarslev V, 2004, IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2004), PROCEEDINGS, P624, DOI 10.1109/WI.2004.10022
   Han LX, 2008, FUTURE GENER COMP SY, V24, P806, DOI 10.1016/j.future.2008.04.005
   Hayes-Roth F, 1983, Building Expert Systems
   Jones D, 1998, METHODOLOGIES ONTOLO
   Katifori A, 2007, ACM COMPUT SURV, V39, DOI 10.1145/1287620.1287621
   Knublauch H, 2004, P 2004 IEEE WIC ACM, P624, DOI [10.1109/WI.2004.111, DOI 10.1109/WI.2004.111]
   Koning R, 2011, FUTURE GENER COMP SY, V27, P960, DOI 10.1016/j.future.2010.11.027
   Lymberopoulos L, 2011, 3 IEEE IFIP INT WORK
   Motik B, 2009, OWM 2 WEB ONTOLOGY L
   Noy N., 2000, KNOWLEDGE ENG KNOWLE, V1937, P69, DOI [10.1007/3-540-39967-4_2, DOI 10.1007/3-540-39967-4_]
   Patel C, 2003, HUMAN LANGUAGE TECHN, P1
   Pinto HS, 2004, KNOWL INF SYST, V6, P441, DOI 10.1007/s10115-003-0138-1
   PlanetLab, PLANETLAB OP PLATF D
   SALTZER JH, 1984, ACM T COMPUT SYST, V2, P277, DOI 10.1145/357401.357402
   Schneider M., 2009, OWL 2 WEB ONTOLOGY L
   Smith B, 2007, NAT BIOTECHNOL, V25, P1251, DOI 10.1038/nbt1346
   Staab S, 2001, IEEE INTELL SYST APP, V16, P26, DOI 10.1109/5254.912382
   Thoméré J, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P927
   Tudorache T, 2008, CEUR WORKSHOP P, V432
   Van der Ham J, 2006, TECHNICAL REPORT
   van der Ham JJ, 2006, FUTURE GENER COMP SY, V22, P862, DOI 10.1016/j.future.2006.03.022
   Wibisono A, 2010, SEM WEB APPL TOOLS L, P1
   Zhiming Zhao, 2010, Proceedings 2010 International Multiconference on Computer Science and Information Technology (IMCSIT 2010), P231
NR 39
TC 3
Z9 4
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2013
VL 43
IS 11
SI SI
BP 1319
EP 1335
DI 10.1002/spe.2141
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 233IF
UT WOS:000325561000005
DA 2024-07-18
ER

PT J
AU Psiuk, M
   Zmuda, D
   Zielinski, K
AF Psiuk, Marek
   Zmuda, Daniel
   Zielinski, Krzysztof
TI Distributed OSGi built over message-oriented middleware
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE OSGi; Remote Service Admin; dynamic service groups; message-oriented
   middleware; network of brokers
AB This paper describes key aspects of remote service invocation in federations of OSGi containers. It refers to the OSGi Remote Service Admin specification and describes its efficient implementation over message-oriented middleware. Scalability problems of several different approaches to implementation are identified, and a solution in a form of innovative Remote Service Admin model extension is proposed. The extension, named On-demand Remote Service Admin, is analyzed and validated in the context of a motivating scenario. Validation includes performance and scalability evaluation, which confirms that all assumed requirements have been satisfied by the constructed prototype. Finally, the presented research is compared with related works. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Psiuk, Marek; Zmuda, Daniel; Zielinski, Krzysztof] AGH Univ Sci & Technol, Fac Elect Engn Automat Comp Sci & Elect, Dept Comp Sci, PL-30059 Krakow, Poland.
C3 AGH University of Krakow
RP Psiuk, M (corresponding author), AGH Univ Sci & Technol, Fac Elect Engn Automat Comp Sci & Elect, Dept Comp Sci, Al A Mickiewicza 30, PL-30059 Krakow, Poland.
EM marek.psiuk@agh.edu.pl
FU European Union [POIG.01.03.01-00-008/08, UDA-POKL.04.01.01-00-367/08-00]
FX The research presented in this paper was partially supported by the
   European Union in the scope of the European Regional Development Fund
   program no. POIG.01.03.01-00-008/08 and UDA-POKL.04.01.01-00-367/08-00.
CR Ahn S, 2006, LECT NOTES COMPUT SC, V4096, P945
   [Anonymous], COMM 1991 ICC 91 IEE
   [Anonymous], J MED BIOL ENG
   [Anonymous], MIDDLEWARE 2003 LECT
   [Anonymous], COMM OBJ REQ BROK AR
   [Anonymous], P 2009 INT C ADV INF
   [Anonymous], JAV REM METH INV SPE
   [Anonymous], OSGI SERV PLATF COMP
   [Anonymous], J MED BIOL ENG
   [Anonymous], ADV COMM TECHN 9 INT
   [Anonymous], DISTR COMP SYST WORK
   [Anonymous], P 10 WORKSH ACM SIGO
   [Anonymous], P 12 INT WORKSH NETW
   [Anonymous], DISTR COMP SYST WORK
   [Anonymous], INFOCOM 2006 25 IEEE
   [Anonymous], INT J HYBRID INFORM
   [Anonymous], 2000, P 4 C S OP SYST DES
   [Anonymous], ECL COMM FRAM PROJ
   [Anonymous], 21 IEEE INT S COMP B
   [Anonymous], REL DISTR SYST 1996
   [Anonymous], 2009, OSGI SERVICE PLATFOR
   [Anonymous], AP CXF DISTR OSGI
   [Anonymous], DISTR DIAGN HOM HEAL
   [Anonymous], P 3 C REC OBJ OR TRE
   [Anonymous], OSGI REMOTE SERVICES
   [Anonymous], SERV SCI ICSS 2010 I
   [Anonymous], CALLING YOUR CAKE SE
   [Anonymous], OSGI SERV PLATF
   [Anonymous], SERV COMP SCC 2010 I
   [Anonymous], ULTR TEL WORKSH 2009
   [Anonymous], OSGI SERV PLATF ENT
   [Anonymous], IADIS INT J WWW INTE
   [Anonymous], CLUST COMP 1999 P 1
   [Anonymous], 1992, DISTRIBUTED WHITEBOA
   Arnold K., 1999, JINI SPECIFICATION
   Banavar G, 1999, INT CON DISTR COMP S, P262, DOI 10.1109/ICDCS.1999.776528
   Birman K, 2010, LECT NOTES COMPUT SC, V5959, P91, DOI 10.1007/978-3-642-11294-2_6
   Chen IY, 2008, INT CONF PERVAS COMP, P704, DOI 10.1109/PERCOM.2008.93
   Chih-Jen H, 2008, 2008 10TH IEEE INTERNATIONAL CONFERENCE ON E-HEALTH NETWORKING, APPLICATIONS AND SERVICES, P48, DOI 10.1109/HEALTH.2008.4600108
   Duan ZH, 2003, IEEE ACM T NETWORK, V11, P870, DOI 10.1109/TNET.2003.820436
   Erl T, 2005, SERVICE ORIENTED ARC
   Gumbold M, 1996, CONF LOCAL COMPUT NE, P222, DOI 10.1109/LCN.1996.558150
   Hall RS, 2004, IEEE COMMUN MAG, V42, P144, DOI 10.1109/MCOM.2004.1299359
   Huang HY, 2009, IEEE SYS MAN CYBERN, P4467, DOI 10.1109/ICSMC.2009.5346916
   Lopes D, 2008, Advances in Computer and Informatiom Sciences and Engineering, P119, DOI 10.1007/978-1-4020-8741-7_22
   Mishra S, 2001, IEEE T PARALL DISTR, V12, P193, DOI 10.1109/71.910873
   Montresor A, 1999, INT FED INFO PROC, V15, P389
   Nee O, 2008, IET COMMUN, V2, P192, DOI 10.1049/iet-com:20060699
   Nitzsche J, 2008, 2008 3RD INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES (ICIW 2008), P168, DOI 10.1109/ICIW.2008.80
   Pietzuch PeterR., 2003, Proceedings of the 2Nd International Workshop on Distributed Event-based Systems, DEBS '03, P1
   Pyarali I, 2001, ACM SIGPLAN NOTICES, V36, P214, DOI 10.1145/384196.384226
   Rellermeyer JS, 2007, LECT NOTES COMPUT SC, V4834, P1
   Shah R, 2002, IEEE INFOCOM SER, P930, DOI 10.1109/INFCOM.2002.1019340
   Shaikh A, 2009, CISIS: 2009 INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT AND SOFTWARE INTENSIVE SYSTEMS, VOLS 1 AND 2, P208, DOI 10.1109/CISIS.2009.181
   Wang F, 2006, PERVASIVE HLTH C WOR, P1
   Zhang JG, 2000, IEEE T INF TECHNOL B, V4, P178, DOI 10.1109/4233.845212
NR 56
TC 2
Z9 2
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2013
VL 43
IS 1
BP 1
EP 31
DI 10.1002/spe.1148
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 058SC
UT WOS:000312653300001
DA 2024-07-18
ER

PT J
AU Kretz, M
   Lindenstruth, V
AF Kretz, Matthias
   Lindenstruth, Volker
TI Vc: A C++ library for explicit vectorization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE SIMD; C plus; data-parallel; AVX; LRBni; SSE; optimization; Vc;
   vectorization
AB It is an established trend that CPU development takes advantage of Moore's Law to improve in parallelism much more than in scalar execution speed. This results in higher hardware thread counts (MIMD) and improved vector units (SIMD), of which the MIMD developments have received the focus of library research and development in recent years. To make use of the latest hardware improvements, SIMD must receive a stronger focus of API research and development because the computational power can no longer be neglected and often auto-vectorizing compilers cannot generate the necessary SIMD code, as will be shown in this paper. Nowadays, the SIMD capabilities are sufficiently significant to warrant vectorization of algorithms requiring more conditional execution than was originally expected for Streaming SIMD Extension to handle. The Vc library (http://compeng.uni-frankfurt.de/?vc) was designed to support developers in the creation of portable vectorized code. Its capabilities and performance have been thoroughly tested. Vc provides portability of the source code, allowing full utilization of the hardware's SIMD capabilities, without introducing any overhead. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Kretz, Matthias] Goethe Univ Frankfurt, Frankfurt Inst Adv Studies, D-60438 Frankfurt, Germany.
   Goethe Univ Frankfurt, Inst Comp Sci, D-60438 Frankfurt, Germany.
C3 Goethe University Frankfurt; Goethe University Frankfurt
RP Kretz, M (corresponding author), Goethe Univ Frankfurt, Frankfurt Inst Adv Studies, Ruth Moufang Str 1, D-60438 Frankfurt, Germany.
EM kretz@compeng.uni-frankfurt.de
OI Kretz, Matthias/0000-0002-0867-243X
FU GSI Helmholtzzentrum fur Schwerionenforschung; Hessian LOEWE initiative
   through the Helmholtz International Center for FAIR (HIC for FAIR)
FX This work was supported by GSI Helmholtzzentrum fur Schwerionenforschung
   and the Hessian LOEWE initiative through the Helmholtz International
   Center for FAIR (HIC for FAIR). We thank the anonymous referees for
   their helpful comments to improve the paper. We would like to thank the
   GCC team for the helpful responses to questions and bug reports, and our
   colleagues for many fruitful discussions. We thank Jan de Cuveland,
   Kristine Eschedor, and David Rohr for their thorough review of this
   paper.
CR Advanced Micro Devices, 2011, AMD COR MATH LIB ACM
   Advanced Micro Devices, 2009, SOFTW OPT GUID AMD F
   ALICE Collaboration, 1995, UNDERSTANDING HUMAN
   [Anonymous], 2011, INTEL THREADING BUIL
   [Anonymous], 2008, SEEPLUS PROJ DOC
   [Anonymous], 2011, NVIDIA CUDA
   [Anonymous], 2011, OpenMP Application Program Interface
   ARM, 2009, INTRO NEON DEV ART A
   Ateji, 2011, JAV PAR PROGR PORTF
   Falcou J, 2007, NT2 NUMERICAL TEMPLA
   Falcou J, 2005, SCALABLE COMPUT-PRAC, V6, P31
   Franchetti F, 2005, P IEEE, V93, P409, DOI 10.1109/JPROC.2004.840491
   Gorbunov S, 2008, COMPUT PHYS COMMUN, V178, P374, DOI 10.1016/j.cpc.2007.10.001
   Gorbunov S, 2009, FAST CELLULAR AUTOMA
   Guennebaud G., 2010, Eigen
   IBM, 2006, POW ISA VERS 2 03
   Intel Corporation, 2009, C LARR PROT LIB
   Intel Corporation, C CLASS SIMD OP
   Intel Corporation, 2011, INT PERF PRIM INT
   Intel Corporation, 2011, INT ADV VECT EXT PRO
   Intel Corporation, 2011, INT 64 IA 32 ARCH OP
   Kernighan BW, 1988, C PROGRAMMING LANGUA, V37
   Khronos OpenCL Working Group, 2011, OPENCL SPEC
   Kisel I, 2009, SCALABILITY SIMD KAL
   Kretz M, 2009, THESIS U HEIDELBERG
   Kunzman DM, 2009, PROCEEDINGS OF THE CONFERENCE ON HIGH PERFORMANCE COMPUTING NETWORKING, STORAGE AND ANALYSIS
   Kunzman DM, 2011, SCI PROGRAMMING-NETH, V19, P47, DOI [10.3233/SPR-2010-0303, 10.1155/2011/525717]
   Microsoft&REG;;Corporation, COMP SHAD OV WIND
   Mono Project, MON SIMD NAM
   Moshier SL., 1989, METHODS PROGRAMS MAT
   Pixelglow Software, 2005, MACSTL
   Veldhuizen T., 1995, C++ Report, V7, P26
   Viry P., 2010, Ateji PX for Java: Parallel Programming made Simple
NR 33
TC 64
Z9 68
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2012
VL 42
IS 11
BP 1409
EP 1430
DI 10.1002/spe.1149
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015OV
UT WOS:000309456700005
DA 2024-07-18
ER

PT J
AU Glück, R
AF Gluck, Robert
TI A self-applicable online partial evaluator for recursive flowchart
   languages
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE partial evaluation; self-application; Futamura projections; Ershov
   generating extensions; compiler generators; bootstrapping
ID OFFLINE PARTIAL EVALUATION; PARTIAL COMPUTATION; GENERATION
AB This paper describes a self-applicable online partial evaluator for a flowchart language with recursive calls. Self-application of the partial evaluator yields generating extensions that are as efficient as those reported in the literature for offline partial evaluation. This result is remarkable because it has been assumed that online partial evaluation techniques unavoidably lead to inefficient and overgeneralized generating extensions. The purpose of this paper is not to determine which kind of partial evaluation is better, but to show how the problem can be solved by recursive polyvariant specialization. The design of the self-applicable online partial evaluator is based on a number of known techniques, but by combining them in a new way this result can be produced. The partial evaluator, its techniques, and its implementation are presented in full. Self-application according to all three Futamura projections is demonstrated. The complete bootstrap of a compiler generator from a partial evaluator is also reported. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Gluck, Robert] Univ Copenhagen, Dept Comp Sci, DIKU, DK-2100 Copenhagen, Denmark.
C3 University of Copenhagen
RP Glück, R (corresponding author), Univ Copenhagen, Dept Comp Sci, DIKU, DK-2100 Copenhagen, Denmark.
EM glueck@acm.org
RI Gluck, Robert/N-3127-2016
OI Gluck, Robert/0000-0001-6990-3935
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   Asai K., 2001, Semantics, Applications, and Implementation of Program Generation. Second International Workshop, SAIG 2001. Proceedings (Lecture Notes in Computer Science Vol.2196), P126
   BONDORF A, 1989, LECT NOTES COMPUT SC, V352, P81
   BONDORF A, 1991, SCI COMPUT PROGRAM, V16, P151, DOI 10.1016/0167-6423(91)90002-F
   BULYONKOV MA, 1984, ACTA INFORM, V21, P473, DOI 10.1007/BF00271642
   Christensen NH, 2004, ACM T PROGR LANG SYS, V26, P191, DOI 10.1145/963778.963784
   CONSEL C, 1988, LECT NOTES COMPUT SC, V300, P236
   Debois Soren, 2008, Higher-Order and Symbolic Computation, V21, P37, DOI 10.1007/s10990-008-9027-3
   ERSHOV AP, 1977, INFORM PROCESS LETT, V6, P38, DOI 10.1016/0020-0190(77)90078-3
   Ershov AP, 1978, ACTA CYBERNET, V4, P19
   FUTAMURA Y, 1983, LECT NOTES COMPUT SC, V147, P1
   Futamura Y., 1999, Higher-Order and Symbolic Computation, V12, P381, DOI 10.1023/A:1010095604496
   Gade J, 2006, LECT NOTES COMPUT SC, V4279, P406
   Gluck R., 1994, Journal of Functional Programming, V4, P499, DOI 10.1017/S0956796800001167
   GLUCK R, 1994, PROCEEDINGS OF THE 1994 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, P183, DOI 10.1109/ICCL.1994.288382
   Gluck R., 1996, Partial Evaluation. International Seminar. Selected Papers, P137
   GLUCK R, 1991, SIGPLAN NOTICES, V26, P309, DOI 10.1145/115866.115900
   Gluck R., 2009, Proceedings of the 2009 ACM SIGPLAN Symposium on Partial Evaluation and Semantics-based Program Manipulation, PEPM 2009, Savannah, GA, USA, January 19-20, 2009, P51, DOI [10.1145/1480945.1480954, DOI 10.1145/1480945.1480954]
   Gluck R, 2003, P ACM SIGPLAN WORKSH, P10, DOI DOI 10.1145/777388.777391
   Glück R, 2010, LECT NOTES COMPUT SC, V5947, P135, DOI 10.1007/978-3-642-11486-1_12
   GOMARD CK, 1991, STRUCT PROGRAM, V12, P123
   Hatcliff J, 1999, LECT NOTES COMPUT SC, V1706, P20
   Jones N. D., 1989, LISP and Symbolic Computation, V2, P9, DOI 10.1007/BF01806312
   Jones N. D., 1995, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics- Based Program Manipulation. PEPM'95, P24, DOI 10.1145/215465.215468
   JONES ND, 1985, LECT NOTES COMPUT SC, V202, P124
   Jones ND, 1988, PARTIAL EVALUATION M, P1
   Jones Neil D., 1988, Partial evaluation and mixed computation, P225
   KLEINRUBATSCHER P, 1995, SIGPLAN NOTICES, V30, P61, DOI 10.1145/202176.202184
   Mogensen T., 1988, PARTIAL EVALUATION M, P325
   Morgensen T. E., 1995, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics- Based Program Manipulation. PEPM'95, P39, DOI 10.1145/215465.215469
   Romanenko SA, 1988, PARTIAL EVALUATION M, P445
   Romanenko SA, 1990, SPECIALIZER UNMIX
   Ruf E., 1993, Journal of Functional Programming, V3, P251, DOI 10.1017/S0956796800000745
   SESTOFT P, 1986, LECT NOTES COMPUT SC, V217, P236
   Sperber M., 1996, Partial Evaluation. International Seminar. Selected Papers, P465
   Sumii E., 2001, Higher-Order and Symbolic Computation, V14, P101, DOI 10.1023/A:1012984529382
NR 37
TC 4
Z9 6
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2012
VL 42
IS 6
BP 649
EP 673
DI 10.1002/spe.1086
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 936NP
UT WOS:000303597500001
DA 2024-07-18
ER

PT J
AU Caymes-Scutari, P
   Morajko, A
   Margalef, T
   Luque, E
AF Caymes-Scutari, P.
   Morajko, A.
   Margalef, T.
   Luque, E.
TI A methodology for transparent knowledge specification in a dynamic
   tuning environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE specification; automatic development; performance model; parallel;
   distributed computing; automatic performance analysis; dynamic tuning
AB The increasing use of parallel/distributed applications demands a continuous support to take significant advantages from parallel power. This includes the evolution of performance analysis and tuning tools which automatically allows for obtaining a better behavior of the applications. Different approaches and tools have been proposed and they are continuously evolving to cover the requirements and expectations of users. One such tool is MATE (Monitoring Analysis and Tuning Environment), which provides automatic and dynamic tuning for parallel/distributed applications. The knowledge used by MATE to analyze and take decisions is based on performance models which include a set of performance parameters and a set of mathematical expressions modeling the solution of the performance problem. These elements are used by the tuning environment to conduct the monitoring and analysis steps, respectively. The tuning phase depends on the results of the performance analysis. This paper presents a methodology to specify performance models. Each performance model specification can be automatically and transparently translated into a piece of software code encapsulating the knowledge to be straightforwardly included in MATE. Applying this methodology, the user does not have to be involved in the implementation details of MATE, which makes the usage of the tool more transparent. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Caymes-Scutari, P.] Univ Tecnol Nacl, Lab Invest Computo Paralelo Distribuido, Dept Ingn Sistemas Informac, Fac Reg Mendoza, Mendoza, Argentina.
   [Caymes-Scutari, P.] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
   [Morajko, A.; Margalef, T.; Luque, E.] Univ Autonoma Barcelona, Comp Architecture & Operating Syst Dept, E-08193 Barcelona, Spain.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET);
   Autonomous University of Barcelona
RP Caymes-Scutari, P (corresponding author), Univ Tecnol Nacl, Lab Invest Computo Paralelo Distribuido, Dept Ingn Sistemas Informac, Fac Reg Mendoza, Rodriguez 273,M5502AJE, Mendoza, Argentina.
EM pcaymesscutari@frm.utn.edu.ar
RI Margalef, Tomas/J-6277-2014; Sikora, Anna/J-8084-2014; luque,
   Emilio/B-6638-2014
OI Margalef, Tomas/0000-0001-6384-7389; Sikora, Anna/0000-0003-0090-4109;
   luque, Emilio/0000-0002-2884-3232
FU MICINN-Spain [TIN2007-64974]; CONICET-Argentina [PIP11220090100709]
FX This research has been supported by the MICINN-Spain under contract
   TIN2007-64974 and by the CONICET-Argentina under contract
   PIP11220090100709.
CR [Anonymous], XSL TRANSFORMATIONS
   [Anonymous], 2002, Proceedings of the 2002 ACM/IEEE Conference on Supercomputing
   [Anonymous], 2003, Introduction to parallel computing
   [Anonymous], Extensible Markup Language (XML) - World Wide Web Consortium
   [Anonymous], DOCUMENT OBJECT MODE
   [Anonymous], OBSTET GYNECOL, V139, P350, DOI [10.1097/AOG.0000000000004659, DOI 10.1097/AOG.0000000000004659]
   [Anonymous], 2005, FLEX FAST SCANNER GE
   Buck B, 2000, INT J HIGH PERFORM C, V14, P317, DOI 10.1177/109434200001400404
   Caymes-Scutari P, 2010, J PARALLEL DISTR COM, V70, P330, DOI 10.1016/j.jpdc.2009.08.008
   Caymes-Scutari P, 2007, THESIS U AUTONOMA BA, P1
   Caymes-Scutari P, 2007, LECT NOTES COMPUT SC, V4641, P13
   Cesar E, 2006, PARALLEL COMPUT, V32, P568, DOI 10.1016/j.parco.2006.06.005
   César E, 2005, LECT NOTES COMPUT SC, V3648, P83
   Cesar E, 2004, NINTH INTERNATIONAL WORKSHOP ON HIGH-LEVEL PARALLEL PROGRAMMING MODELS AND SUPPORTIVE ENVIRONMENTS, PROCEEDINGS, P22, DOI 10.1109/HIPS.2004.1299187
   Espinosa A, 1999, LECT NOTES COMPUT SC, V1573, P365
   Geist A, 1990, TM11616 TR OAK RIDG
   HEATH MT, 1991, IEEE SOFTWARE, V8, P29, DOI 10.1109/52.84214
   Maillet E, 1995, TAPE PVM EFFICIENT P
   MATTSON T. G., 2004, Patterns for parallel programming
   Mayes KR, 2005, PHILOS T R SOC A, V363, P1793, DOI 10.1098/rsta.2005.1607
   Mesa JG, 2004, THESIS U AUTONOMA BA, P1
   MILLER BP, 1995, COMPUTER, V28, P37, DOI 10.1109/2.471178
   Morajko A, 2007, CONCURR COMP-PRACT E, V19, P1517, DOI 10.1002/cpe.1126
   Morajko A, 2005, LECT NOTES COMPUT SC, V3648, P95
   Morajko A, 2005, J COMPUT SCI TECHNOL, V5, P115
   Nagel WE, 1996, SUPERCOMPUTER, V12, P69
   Ribler RL, 1998, SEVENTH INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING - PROCEEDINGS, P172, DOI 10.1109/HPDC.1998.709970
   Yan JC, 1996, PARALLEL COMPUT, V22, P1215, DOI 10.1016/S0167-8191(96)00032-4
NR 28
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2012
VL 42
IS 3
BP 281
EP 302
DI 10.1002/spe.1061
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 887KP
UT WOS:000299926600002
DA 2024-07-18
ER

PT J
AU Desnoyers, M
   Dagenais, MR
AF Desnoyers, Mathieu
   Dagenais, Michel R.
TI Synchronization for fast and reentrant operating system kernel tracing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE tracing; operating system; synchronization; wait-free algorithms; low
   overhead; clock
AB To effectively trace an operating system, a performance monitoring and debugging infrastructure needs the ability to trace various execution contexts. These contexts range from kernel running as a thread to Non-Maskable Interrupt (NMI) contexts. Given that any part of the kernel infrastructure used by a kernel tracer could lead to infinite recursion if traced, and because most kernel primitives require synchronization unsuitable for some execution contexts, all interactions of the tracing code with the existing kernel infrastructure must be considered in order to correctly inter-operate with the existing operating system kernel. This paper presents a new low overhead tracing mechanism and motivates the choice of synchronization sequences suitable for operating system kernel tracing, namely local atomic instructions as main buffer synchronization primitive and the Read-Copy Update (RCU) mechanism to control tracing. It also proposes a wait-free algorithm extending the time-base needed by the tracer to 64-bit on architectures that lack hardware 64-bit time-base support. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Desnoyers, Mathieu; Dagenais, Michel R.] Ecole Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ H3C 3A4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Desnoyers, M (corresponding author), Ecole Polytech Montreal, Dept Comp & Software Engn, CP 6079,Succ Ctr Ville, Montreal, PQ H3C 3A4, Canada.
EM mathieu.desnoyers@efficios.com
FU NSERC; Google; IBM Research; Autodesk
FX We would like to thank the LTT, Linux Kernel and SystemTAP communities
   for their feedback, as well as NSERC, Google, IBM Research and Autodesk
   for funding parts of this work.
CR *ARM LTD TECHN STA, 2006, CORT A8 TECHN REF MA
   BLIGH M, 2007, P LIN S OTT ONT CAN, V1, P29
   CANTRILL BM, 2010, USENIX 2004 ANN TECH
   CORBET J, 2007, LINUX WEEKLY NEW AUG
   DESNOYERS M, 2006, ELC EMB LIN C SAN JO
   Desnoyers M., 2007, CODEBREAKERS J, V4
   DESNOYERS M, 2006, P OTT LIN S OTT CAN, V1, P209
   Heinrich Joe., 1994, MIPS R4000 MICROPROC, Vsecond
   Herlihy M, 2002, INT CON DISTR COMP S, P522
   *INT CORP, 2010, IA PC HPET HIGH PREC
   *INT CORP TECHN ST, 2006, INT 64 IA 32 ARCH SO
   Krieger O., 2006, Operating Systems Review, V40, P133, DOI 10.1145/1218063.1217949
   Mavinakayanahalli A., 2006, P LIN S, V2, P109
   McKenney Paul E., 2004, PhD thesis
   Michael M. M., 1996, Proceedings of the Fifteenth Annual ACM Symposium on Principles of Distributed Computing, P267, DOI 10.1145/248052.248106
   Natali A.N., 2006, IEEE RAS EMBS INT C, P1
   PRASAD V, 2010, P LIN S OTT ONT CAN, V2, P49
   WETZEL J, 2009, POWERPC VIRTUAL ENV
   WISNIEWSKI RW, 2010, SUP ACM IEEE C PHOEN, P3
   WISNIEWSKI RW, 2007, LECT NOTES COMPUTER, V4641
   YAGHMOUR K, 2010, LINUX J         0626
   2010, OPROFILE SYSTEM WIDE
NR 22
TC 2
Z9 3
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2010
VL 40
IS 12
SI SI
BP 1053
EP 1072
DI 10.1002/spe.991
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677TZ
UT WOS:000284016000002
DA 2024-07-18
ER

PT J
AU Blaich, A
   Thain, D
   Striegel, A
AF Blaich, Andrew
   Thain, Douglas
   Striegel, Aaron
TI Reflections on the virtues of modularity: a case study in linux security
   modules
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE security modules; LSM; modularity; linux
AB Developing a modular system that properly supports a range of security models is challenging. The work presented here details our experiences with the modular Linux security framework called Linux Security Modules, or LSMs. Throughout our experiences we discovered that the developers of the LSM framework made certain tradeoffs for speed and simplicity during implementation, and consequently leaving the framework incomplete. Our experiences show at which points the theory of the LSM differs from reality, and details how these differences play out when developing and using a custom LSM. Copyright (c) 2009 John Wiley & Sons, Ltd.
C1 [Blaich, Andrew; Thain, Douglas; Striegel, Aaron] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
C3 University of Notre Dame
RP Striegel, A (corresponding author), Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
EM striegel@cse.nd.edu
RI Striegel, Aaron/A-3201-2008; Thain, Douglas/I-4666-2014
OI Striegel, Aaron/0000-0002-3157-2859; Thain, Douglas/0000-0001-5218-1956
FU NSF [CNS-05-49087, CNS-03-47392]
FX Contract/grant sponsor: NSF contract/grant numbers: CNS-05-49087,
   CNS-03-47392
CR [Anonymous], 2005, LINUX KERNEL MAILING
   BLAICH A, 2007, LOCKDOWN SIMPLIFYING
   CORBATO F, 1992, IEEE ANN HIST COMPUT, V14, P31, DOI 10.1109/85.145324
   GARFINKEL T, 2003, P S NETW DISTR SYST, P163
   HALLYN S, 2008, LINUX LSM STACKER
   Huang CC, 1998, IEEE T SYST MAN CY A, V28, P66, DOI 10.1109/3468.650323
   Jaeger T, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P59
   KARGER PA, 2002, 30 YEARS LATER LESSO, P119
   LEITNER A, 2006, LINUX MAGAZINE, V69, P40
   Liao Q., 2008, LISA, P59
   MORRIS J, 2005, LINUX J
   *ND CORPORATION, 2008, TOM LIN
   NOVELL A, 2008, APPARMOR APPL SECURI, P3
   QUARITSCH M, 2004, SECURE INFORM COMMUN, P7
   Salzman P.J., 2007, The Linux Kernel Module Programming Guide
   Schaufler C., 2008, The Simplified Mandatory Access Control Kernel
   Smalley S., 2001, 01043 NAI LABS
   WRIGHT C, 2002, P 11 USENIX SEC S SA, P213
   WRIGHT C, 2002, OTT LIN S OTT CAN
   WRIGHT C, 2003, LSM BITKEEPER REPOSI
NR 20
TC 0
Z9 0
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2009
VL 39
IS 15
BP 1235
EP 1251
DI 10.1002/spe.933
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 500XQ
UT WOS:000270340100001
DA 2024-07-18
ER

PT J
AU Lhoták, O
   Curial, S
   Amaral, JN
AF Lhotak, Ondrej
   Curial, Stephen
   Amaral, Jose Nelson
TI Using XBDDs and ZBDDs in points-to analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE points-to analysis; model checking; binary decision diagrams
AB Binary decision diagrams (BDDs) have recently become widely accepted as a space-efficient method of representing relations in points-to or reference analyses. When BDDs are used to represent relations, each element of a domain is assigned a bit pattern to represent it, but not every bit pattern represents an element. The circuit design, model checking, and verification communities have achieved significant reductions in BDD sizes using several techniques to reduce the overhead of these don't-care bit patterns. We adapt these techniques to BDD-based program analysis, and we study their effect on the BDD size in this context. Specifically, we compare the effectiveness of Coudert and Madre's restrict operation and the use of zero-suppressed BDDs (ZBDDs) to represent relations. Using don't-care BDDs (XBDDs) and ZBDDs to reduce the size of the relations allows a compiler or other software analysis tools to analyze larger programs with greater precision. Our experimental evaluation considers both context-insensitive and context-sensitive program analyses. We also provide a metric that can be used to estimate whether ZBDDs will be more compact than BDDs for a given analysis. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Curial, Stephen; Amaral, Jose Nelson] Univ Alberta, Dept Comp Sci, Alta, AB, Canada.
   [Lhotak, Ondrej] Univ Waterloo, DR Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Alberta; University of Waterloo
RP Amaral, JN (corresponding author), Univ Alberta, Dept Comp Sci, Alta, AB, Canada.
EM amaral@cs.ualberta.ca
FU IBM Faculty Award; National Sciences and Engineering Council of Canada
   (NSERC)
FX Contract/grant sponsor: IBM Faculty Award; Contract/grant sponsor:
   National Sciences and Engineering Council of Canada (NSERC)
CR ANDERSEN LO, 1994, 9419 DIKU
   [Anonymous], PLDI 03
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   COUDERT M, 1990, IEEE INT C COMP AID, P126
   COUDERT S, 1997, EDTC 97 P 1997 EUR C, P224
   *DACAPO PROJ, 2008, DACAPO BENCHM SUIT
   EMAMI M, 1994, P ACM SIGPLAN 94 C P, P242
   Hardekopf B, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P290, DOI 10.1145/1250734.1250767
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   Hong YP, 2000, IEEE T COMPUT AID D, V19, P44, DOI 10.1109/43.822619
   Lhoták O, 2006, LECT NOTES COMPUT SC, V3923, P47
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   LHOTAK O, 2004, P ACM SIGPLAN 2004 C, P103
   Lhotak O., 2006, THESIS MCGILL U
   Lhotak O., 2003, Spark: A Flexible Points-to Analysis Framework for Java
   LINDNIELSEN J, 2008, BINARY DECISION DIAG
   Meinel C., 1998, ALGORITHMS DATA STRU
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   MILANOVA A, 2003, THESIS RUTGERS U
   MINATO S, 1994, ACM IEEE D, P420
   MINATO S, 1993, ACM IEEE D, P272
   Minato S., 1996, BINARY DECISION DIAG, DOI DOI 10.1007/978-1-4613-1303-8
   Minato S.-I., 2001, International Journal on Software Tools for Technology Transfer, V3, P156, DOI 10.1007/s100090100038
   Mishchenko Alan., 2001, An introduction to zero-suppressed binary decision diagrams
   Okuno H. G., 1994, Transactions of the Information Processing Society of Japan, V35, P739
   Oliveira AL, 1998, IEEE T COMPUT, V47, P1282, DOI 10.1109/12.736442
   Ryder BG, 2003, LECT NOTES COMPUT SC, V2622, P126
   Sauerhoff M, 1996, IEEE T COMPUT AID D, V15, P1435, DOI 10.1109/43.543775
   SHIPLE TR, 1994, ACM IEEE D, P225
   *STAND PERF EV COR, 2008, SPEC JVM98 BENCHM
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Whaley John., 2004, PROGRAMMING LANGUAGE, P131
   Yoneda T, 1996, LECT NOTES COMPUT SC, V1166, P435, DOI 10.1007/BFb0031826
   ZHU J, 2004, P ACM SIGPLAN C PROG, P145
   Zhu JW, 2002, IEEE/ACM INTERNATIONAL CONFERENCE ON CAD-02, DIGEST OF TECHNICAL PAPERS, P150, DOI 10.1109/ICCAD.2002.1167527
   [No title captured]
NR 36
TC 2
Z9 3
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2009
VL 39
IS 2
BP 163
EP 188
DI 10.1002/spe.895
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 394NO
UT WOS:000262453600003
DA 2024-07-18
ER

PT J
AU Cutcutache, I
   Wong, WF
AF Cutcutache, Ioana
   Wong, Weng-Fai
TI Fast, frequency-based, integrated register allocation and instruction
   scheduling
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compilers; optimization; register allocation; instruction scheduling;
   code generation
ID IMPROVEMENTS
AB Instruction scheduling and register allocation are two of the most important optimization phases in modern compilers as they have a significant impact on the quality of the generated code. Unfortunately, the objectives of these two optimizations are in conflict with one another. The instruction scheduler attempts to exploit instruction-level parallelism and requires many operands to be available in registers. On the other hand, the register allocator wants register pressure to be kept low so that the amount of spill code can be minimized. Currently these two phases are done separately typically in three passes: prepass scheduling, register allocation and postpass scheduling. But this separation can lead to poor results. Previous works attempted to solve the phase-ordering problem by combining the instruction scheduler with graph-coloring-based register allocators. The latter tend to be computationally expensive. Linear-scan register allocators, on the other hand, are simple, fast and efficient. In this paper, we describe our effort to integrate instruction scheduling with a linear-scan allocator. Furthermore, our integrated optimizer is able to take advantage of execution frequencies obtained through profiling. Our integrated register allocator and instruction scheduler achieved good code quality with significantly reduced compilation times. On the SPEC2000 benchmarks running on a 900 MHz ItaniumII, compared with OpenIMPACT, we halved the time spent in instruction scheduling and register allocation with negligible impact on execution times. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Cutcutache, Ioana] Natl Univ Singapore, Sch Comp, Grad Div, Dept Comp Sci, Singapore 117590, Singapore.
C3 National University of Singapore
RP Cutcutache, I (corresponding author), Natl Univ Singapore, Sch Comp, Grad Div, Dept Comp Sci, Comp 1 03-68 Law Link, Singapore 117590, Singapore.
EM ioana@comp.nus.edu.sg
OI Wong, Weng-Fai/0000-0002-4281-2053
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Berson DA, 1999, LECT NOTES COMPUT SC, V1656, P247, DOI 10.1007/3-540-48319-5_16
   BERSON DA, 1996, THESIS U PITTSBURGH
   BRADLEE DG, 1991, 4 INT C ARCH SUPP PR, P122
   BRIGGS P, 1994, ACM T PROGR LANG SYS, V16, P428, DOI 10.1145/177492.177575
   CHAITIN GJ, 1981, COMPUT LANG, V6, P47, DOI 10.1016/0096-0551(81)90048-5
   CHEN G, 2001, THESIS HARVARD U
   CHOW F, 1984, ACM SIGPLAN S COMPL, P222
   George L, 1996, ACM T PROGR LANG SYS, V18, P300, DOI 10.1145/229542.229546
   Goodman J. R., 1988, Conference Proceedings. 1988 International Conference on Supercomputing, P442, DOI 10.1145/55364.55407
   Johansson E., 2000, Proceedings of the 2nd International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP '00), P32, DOI 10.1145/351268.351273
   LOWNEY PG, 1993, J SUPERCOMPUT, V7, P51, DOI 10.1007/BF01205182
   MOSSENBOCK H, 2002, P 11 INT C COMP CONS, P229
   MOTWANI R, 1995, CSTN9522
   Muchnick S., 1997, ADV COMPILER DESIGN
   NORRIS C, 1993, SUPERCOMP PROC, P804
   NORRIS C, 1995, 28 ANN INT S MICR AN, P169
   PINTER SS, 1993, SIGPLAN C PROGR LANG, P248
   Poletto M, 1999, ACM T PROGR LANG SYS, V21, P895, DOI 10.1145/330249.330250
   POLETTO M, 1997, SIGPLAN C PROGR LANG, P109
   Sagonas K, 2003, SOFTWARE PRACT EXPER, V33, P1003, DOI 10.1002/spe.533
   Wimmer Christian., 2005, P ACMUSENIX INT C VI, P132
   WIN KKK, 2005, COOPERATIVE INSTRUCT, P528
   [No title captured]
NR 24
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2008
VL 38
IS 11
BP 1105
EP 1126
DI 10.1002/spe.860
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 364OR
UT WOS:000260345500001
DA 2024-07-18
ER

PT J
AU Kim, H
   Cha, H
   Ha, R
AF Kim, Hyoseung
   Cha, Hojung
   Ha, Rhan
TI Dynamic refresh-rate scaling via frame buffer monitoring for power-aware
   LCD management
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE LCD power management; frame buffer monitoring; dynamic refresh-rate
   scaling
AB In recent years, there has been wide-spread use of large and high-resolution liquid-crystal displays (LCDs) on handheld devices. The portion of LCD power consumption in the overall system has gradually increased. While most of the previous research on LCD power management has focused on the hardware level, practical mechanisms at the software level are hardly known. This paper presents a power-aware LCD management mechanism, based on dynamic refresh-rate scaling and frame buffer monitoring. The proposed mechanism guarantees the display quality of service, which is inherently specified by content types. The mechanism does not require additional hardware or modifications to applications. The experiment results-on a commercial PDA with a 320 x 240 resolution-show that the proposed mechanisms effectively reduce the power consumption by up to 10%, while satisfying the display quality requirements for the LCD screen. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Yonsei Univ, Dept Comp Sci, Seoul 120749, South Korea.
   Hongik Univ, Dept Comp Engn, Seoul 121791, South Korea.
C3 Yonsei University; Hongik University
RP Cha, H (corresponding author), Yonsei Univ, Dept Comp Sci, Shinchon Dong 134, Seoul 120749, South Korea.
EM hjcha@cs.yonsei.ac.kr
RI Cha, Hojung/G-8084-2012
OI Kim, Hyoseung/0000-0002-8553-732X
CR Bloom L, 2004, LECT NOTES COMPUT SC, V3160, P13
   Brakmo LawrenceS., 2004, MOBISYS 04, P12
   Cheng WC, 2004, IEEE T CONSUM ELECTR, V50, P25, DOI 10.1109/TCE.2004.1277837
   Cheng WC, 2002, ASP-DAC/VLSI DESIGN 2002: 7TH ASIA AND SOUTH PACIFIC DESIGN AUTOMATION CONFERENCE AND 15TH INTERNATIONAL CONFERENCE ON VLSI DESIGN, PROCEEDINGS, P126, DOI 10.1109/ASPDAC.2002.994898
   Choi I, 2002, ISLPED'02: PROCEEDINGS OF THE 2002 INTERNATIONAL SYMPOSIUM ON LOW POWER ELECTRONICS AND DESIGN, P112, DOI 10.1109/LPE.2002.1029567
   DALTON AB, 2003, P 9 WORKSH HOT TOP O, P151
   Flinn J, 1999, OPERATING SYSTEMS REVIEW, VOL 33, NO 5, DECEMBER 1999, P48, DOI 10.1145/319344.319155
   Gatti F., 2002, CASES '02, P218
   Govil Kinshuk., 1995, Proceedings of the 1st annual international conference on Mobile computing and networking, P13, DOI DOI 10.1145/215530.215546
   Harter T., 2004, Proceedings of the SIGCHI conference on Human factors in computing systems, P199, DOI DOI 10.1145/985692.985718
   Iyer S, 2003, PROCEEDINGS OF MOBISYS 2003, P245, DOI 10.1145/1066116.1189045
   Kamijoh N, 2001, FIFTH INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS, PROCEEDINGS, P133, DOI 10.1109/ISWC.2001.962115
   Lu YH, 2002, IEEE T VLSI SYST, V10, P119, DOI 10.1109/92.994989
   Narayanaswami C, 2000, FOURTH INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS, DIGEST OF PAPERS, P7, DOI 10.1109/ISWC.2000.888452
   Shim H, 2004, IEEE DES TEST COMPUT, V21, P388, DOI 10.1109/MDT.2004.43
   Shneiderman B., 2010, DESIGNING USER INTER
   UDANI S, 1996, MSCIS9612 U PENNS DE
   Zhong L., 2003, P INT C COMP ARCH SY, P232
NR 18
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2007
VL 37
IS 2
BP 193
EP 206
DI 10.1002/spe.753
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 136GY
UT WOS:000244211800004
DA 2024-07-18
ER

PT J
AU Ishikawa, N
   Suzuki, H
   Ueno, H
   Gotoh, T
AF Ishikawa, N
   Suzuki, H
   Ueno, H
   Gotoh, T
TI Experiment on and analysis of mobile content transformation using XSLT
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE i-mode; compact HTML; WAP 2.0; XHTML; XSLT; content transformation
AB Much attention is being paid to the services that are accessed via the Internet from mobile phones and PDAs. For such mobile Internet services, the WAP Forum issued the WAP 2.0 standard based on IETF/W3C standards. WAP 2.0 adopted the subset of eXtensible HyperText Markup Language (XHTML) and Cascading Style Sheets (CSS) standardized by World Wide Web Consortium (W3C), as its markup language. The i-mode service in Japan was launched in February 1999, and has acquired over 40 million users, as of January 2004. The markup language adopted in the i-mode service is called i-mode HTML, and was designed around Compact HTML. To ease the migration from i-mode HTML to the WAP 2.0 markup language, the functional compatibility of the languages should be assured. To this end, we proposed functions unique to i-mode HTML to the WAP Forum. The WAP Forum accepted all of our proposals. For making the migration more cost-effective, software tools that support the transformation of i-mode HTML content to the WAP 2.0 equivalents must be established. There are two approaches to content transformation: software-based and rule-based. Since the software-based approach has some drawbacks such as a lack of extensibility and a lack of accountability, we have taken the rule-based approach. We focused on eXtensible Stylesheet Language Transformation (XSLT) as the content transformation technique, because XSLT has been standardized by W3C for rule-based transformation between XML contents. To technically verify the applicability of XSLT for content transformation from i-mode HTML to the WAP 2.0 markup language, we performed an extensive XSLT transformation experiment using existing i-mode service contents. In this paper, we describe content transformation using XSLT, overview the content transformation system, and analyze the results of the content transformation experiment. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 NTT DoCoMo, Network Management Dev Dept, Yokosuka, Kanagawa 2398536, Japan.
C3 NTT Docomo
RP Ishikawa, N (corresponding author), NTT DoCoMo, Network Management Dev Dept, 3-5 Hikari No Oka, Yokosuka, Kanagawa 2398536, Japan.
EM ishikawanor@nttdocomo.co.jp
RI Ishikawa, Norihiro/G-7577-2018
OI Ishikawa, Norihiro/0000-0001-7934-5949
CR Baker Mark, 2000, XHTML Basic
   Bos B., 1998, CASCADING STYLE SHEE
   CLARK J, 1999, XML TRANSFORMATIONS
   Clark J., 1999, XML Path Language (XPath) Version 1.0
   EASTLAKE D, 2002, XML SIGNATURE SYNTAX
   HWANG G, 2002, IEEE T MOBILE COMPUT, V1, P82
   KAMATA T, 1998, COMPACT HTML SMALL I
   METTER M, 2000, P 1 AUSTR US INT C C, P49
   OUAHID H, 1999, P IEEE INT C COMM IC, P676
   SUZUKI H, 2003, P 12 INT WWW C IND T
   *WAP FOR, 2001, XHTML MOB PROJ SPEC
   *WAP FOR, 2001, WIR PROF CASC STYL S
NR 12
TC 2
Z9 2
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2006
VL 36
IS 7
BP 761
EP 783
DI 10.1002/spe.716
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 053TP
UT WOS:000238328500004
DA 2024-07-18
ER

PT J
AU Gorschek, T
   Wohlin, C
AF Gorschek, T
   Wohlin, C
TI Packaging software process improvement issues: a method and a case study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software process improvement; prioritization; dependency mapping;
   packaging; decision support; industrial case study
AB Software process improvement is a challenge in general and in particular for small- and medium-sized companies. Assessment is one important step in improvement. However, given that a list of improvement issues has been derived, it is often very important to be able to prioritize the improvement proposals and also look at the potential dependencies between them. This paper comes from an industrial need to enable prioritization of improvement proposals and to identify their dependencies. The need was identified in a small- and medium-sized software development company. Based on the need, a method for prioritization and identification of dependencies of improvement proposals was developed. The prioritization part of the method is based on a multi-decision criteria method and the dependencies are identified using a dependency graph. The developed method has been successfully applied in the company, where people with different roles applied the method. The paper presents both the method as such and the successful application of it. It is concluded that the method worked as a means for prioritization and identification of dependencies. Moreover, the method also allowed the employees to discuss and reason about the improvement actions to be taken in a structured and systematic way. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Blekinge Inst Technol, Sch Engn, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Blekinge Inst Technol, Sch Engn, POB 520, S-37225 Ronneby, Sweden.
EM tony.gorschek@bth.se
RI Gorschek, Tony/E-3445-2013
OI Wohlin, Claes/0000-0003-0460-5253
CR [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 15504 ISOIEC TR
   [Anonymous], 2001, International series in operations research & management science, DOI DOI 10.1007/978-1-4615-1665-1
   [Anonymous], 2000, Kluwer international series in software engineering
   [Anonymous], EUR SOFTW PROC IMPR
   Apostolou B, 2002, MATH COMPUT MODEL, V35, P1081, DOI 10.1016/S0895-7177(02)00071-7
   Basili V.R., 1985, QUANTITATIVE EVALUAT
   Beck K., 2001, Planning extreme programming
   Chu P, 2002, MATH COMPUT MODEL, V35, P1077, DOI 10.1016/S0895-7177(02)00072-9
   *CMMI PROD DEV TEA, 2002, CAP MAT MOD INT CMMI
   Conradi R, 2002, IEEE SOFTWARE, V19, P92, DOI 10.1109/MS.2002.1020295
   Deming W.E., 1986, Cambridge, Vxiii, P507
   El-Emam K., 2001, Empirical Software Engineering, V6, P207, DOI 10.1023/A:1011487332587
   Herbsleb J, 1997, COMMUN ACM, V40, P30, DOI 10.1145/255656.255692
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Kautz K., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P626, DOI 10.1109/ICSE.2000.870456
   Kuilboer JP, 2000, INFORM SOFTWARE TECH, V42, P27, DOI 10.1016/S0950-5849(99)00054-3
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   MCFEELEY B, 1991, CMUSEI92TR004
   Rainer A, 2003, J SYST SOFTWARE, V66, P7, DOI 10.1016/S0164-1212(02)00059-6
   Reifer DJ, 2000, J SYST SOFTWARE, V50, P97, DOI 10.1016/S0164-1212(99)00119-3
   Robson C., 2002, Real World Research, V2nd
   Saaty T.L, 1980, Advanced Optimization and Decision-Making Techniques in Textile Manufacturing, DOI DOI 10.1201/9780429504419-2
   Scott L, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P182, DOI 10.1109/ASWEC.2001.948512
   Sommerville I, 2001, Software Engineering
   Villalón JACM, 2002, SOFTWARE QUAL J, V10, P261, DOI 10.1023/A:1021638523413
   Wiegers KE, 2000, IEEE SOFTWARE, V17, P62, DOI 10.1109/52.819970
NR 28
TC 33
Z9 35
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2004
VL 34
IS 14
BP 1311
EP 1344
DI 10.1002/spe.615
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 869QG
UT WOS:000224998500001
DA 2024-07-18
ER

PT J
AU Hanson, DR
   Proebsting, TA
AF Hanson, DR
   Proebsting, TA
TI A research C# compiler
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler architecture; abstract syntax trees; .NET; C# programming
   language; visitor pattern; object-oriented programming
AB C# is the new flagship language in the Microsoft NET platform. C# is an attractive vehicle for language design research not only because it shares many characteristics with Java, the current language of choice for such research, but also because it is likely to see wide use. Language research needs a large investment in infrastructure, even for relatively small studies. This paper describes a new C# compiler designed specifically to provide that infrastructure. The overall design is deceptively simple. The parser is generated automatically from a possibly ambiguous grammar, accepts C# source, perhaps with new features, and produces an abstract syntax tree, or AST. Subsequent phases-dubbed visitors-traverse the AST, perhaps modifying it, annotating it or emitting output, and pass it along to the next visitor. Visitors are specified entirely at compilation time and are loaded dynamically as needed. There is no fixed set of visitors, and visitors are completely unconstrained. Some visitors perform traditional compilation phases, but the more interesting ones do code analysis, emit non-traditional data such as XML, and display data structures for debugging. Indeed, most usage to date has been for tools, not for language design experiments. Such experiments use source-to-source transformations or extend existing visitors to handle new language features. These approaches are illustrated by adding a statement that switches on a type instead of a value, which can be implemented in a few hundred lines. The compiler also exemplifies the value of dynamic loading and of type reflection. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Microsoft Res, Redmond, WA 98052 USA.
C3 Microsoft
RP Hanson, DR (corresponding author), Microsoft Res, 1 Microsoft Way, Redmond, WA 98052 USA.
EM drh@microsoft.com
CR [Anonymous], JFLEX FAST SCANNER G
   Appel A.W., 2002, MODERN COMPILER IMPL, V2nd
   BRACHA G, 1998, P C OBJ OR PROGR SYS
   *ECMA INT, 2001, ECMA334
   Fraser C. W., 1992, ACM Letters on Programming Languages and Systems, V1, P213, DOI 10.1145/151640.151642
   Fraser Christopher W., 1995, A retargetable C compiler: Design and implementation
   Gagnon EM, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P140, DOI 10.1109/TOOLS.1998.711009
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GRISWOLD RE, 1997, ICON PROGRAMMING LAN
   Gunnerson Eric., 2001, PROGRAMMERS INTRO C, V2nd
   Hanson DR, 1999, SOFTWARE PRACT EXPER, V29, P417, DOI 10.1002/(SICI)1097-024X(19990425)29:5<417::AID-SPE241>3.0.CO;2-F
   HANSON DR, 2001, P SIGPLAN 01 C PROGR, V264
   HUDSON S, 2004, CUP PARSER GENERATOR
   KENNEDY A, 2001, P SIGPLAN 01 C PROGR
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Nelson Greg., 1991, SYSTEMS PROGRAMMING
   Nystrom N, 2003, LECT NOTES COMPUT SC, V2622, P138
   Object Technology International Incorporation, 2003, ECL PLATF TECHN OV
   Platt D.S., 2002, INTRO MICROSOFT NET, VSecond
   PROEBSTING TA, 2000, MSRTR200054
   Stutz D., 2003, SHARED SOURCE CLI ES
   van den Brand MGJ, 2002, LECT NOTES COMPUT SC, V2304, P143
   Visser Eelco., 1997, Scannerless Generalized-LR Parsing
   Visser Eelco, 1997, Syntax Definition for Language Prototyping
   Visser J, 2001, ACM SIGPLAN NOTICES, V36, P270, DOI 10.1145/504311.504302
NR 25
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2004
VL 34
IS 13
BP 1211
EP 1224
DI 10.1002/spe.610
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 867VD
UT WOS:000224869700001
OA Bronze
DA 2024-07-18
ER

PT J
AU Blake, MB
AF Blake, MB
TI A specification language and service-oriented architecture to support
   distributed data management
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented software engineering; Web technologies; database access
   technologies; XML; XSLT
AB In some research analysis organizations, effort is duplicated when disseminating raw information to multiple research groups. Although the various groups work on different problems, many times, the initial raw information used is the same. A solution to this problem is creating a centralized process for storing and disseminating common information using database technologies. In this paper, the requirements that must be met to create this distributed database management architecture are described. To support these requirements, a specification language, Specialized Format Markup Language (SFML), and supporting service-oriented architecture, Specialized Format Generation (SFG), are introduced. These implementations and technologies support the translation of data from relational database formats into user-specified legacy formats. In addition, this implementation supports the presentation of the resulting data across a Web-based, distributed medium. SFML and SFG incorporate current technologies such as the eXtensible Markup Language (XML), Java Servlets, the eXtensible Stylesheet Language (XSL), and other relational database approaches. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Mitre Corp, CAASD, Mclean, VA 22102 USA.
   Georgetown Univ, Dept Comp Sci, Washington, DC 20057 USA.
C3 MITRE Corporation; Center for Advanced Aviation System Development;
   Georgetown University
RP Blake, MB (corresponding author), Mitre Corp, CAASD, 7515 Colshire Dr N420, Mclean, VA 22102 USA.
EM bblake@mitre.org
OI Blake, M. Brian/0000-0002-3631-5261
CR Allen R, 1998, LECT NOTES COMPUT SC, V1382, P21, DOI 10.1007/BFb0053581
   Blake MB, 2002, ANN SOFTW ENG, V13, P13, DOI 10.1023/A:1016537224754
   Blake MB, 2001, IEICE T INF SYST, VE84D, P1394
   BLAKE MB, 2003, P 2003 INT S APPL CO
   BOOCH G, 1998, UNIFIED MODELING LAN
   COOPER BF, 2002, P 12 2NT WORKSH RES
   Fernandez M, 2001, LECT NOTES COMPUT SC, V1973, P263
   Fernandez MaryF., 2001, IEEE DATA ENG B, V24, P12
   Haas LM, 2001, IBM SYST J, V40, P489, DOI 10.1147/sj.402.0489
   HAMMER J, 1995, P ACM SIGMOD INT C M, P483
   HU J, 1996, P 7 INT C WORKSH DAT
   Kuhlins S, 2003, LECT NOTES COMPUT SC, V2591, P184
   Liu L., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P611, DOI 10.1109/ICDE.2000.839475
   Shrivastava SK, 1998, FOURTH INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P10, DOI 10.1109/CDS.1998.675753
   VARELA C, 1994, P 1 INT C WORLD WID
   Weiss A., 1999, Networker, V3, P36, DOI 10.1145/315129.315142
   WEKA, MACH LEARN SOFTW JAV
   WIELAND F, 1997, P DIG AV SYST C IRV, V2
   XML LIGHT WEIGHT EXT
NR 19
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2004
VL 34
IS 11
BP 1091
EP 1117
DI 10.1002/spe.608
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 850ZH
UT WOS:000223652400004
DA 2024-07-18
ER

PT J
AU Whitehead, EJ
   Goland, YY
AF Whitehead, EJ
   Goland, YY
TI The WebDAV property design
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE metadata storage and retrieval; metadata design; WebDAV; Web authoring;
   document management
ID VERSION CONTROL
AB This paper provides a detailed description of the general design space for metadata storage capabilities. The design space considers issues of metadata identification, typing and representation, dynamic behavior, predefined and user-defined metadata, schema discovery/update, operations, API packaging/marshalling, searching, and versioning. The design space is used to structure a retrospective analysis of the three major alternative metadata designs considered during the design of the WebDAV distributed authoring protocol. Deployment experience with WebDAV properties is also discussed, with the most successful use occurring in custom client/server pairs and in protocol extensions. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Calif Santa Cruz, Dept Comp Sci, Santa Cruz, CA 95064 USA.
C3 University of California System; University of California Santa Cruz
RP Whitehead, EJ (corresponding author), Univ Calif Santa Cruz, Dept Comp Sci, Santa Cruz, CA 95064 USA.
EM ejw@cs.ucsc.edu
CR BERNERSLEE T, 1998, 2396 MITLCS RFC UC I
   Bowman C. M., 1994, P INT C INT INF MAN
   CLEMM G, 2003, IN PRESS WEBDAV ACCE
   CLEMM G, 2002, 3253 RFC
   DELISLE N, 1986, P ACM SIGMOD 86 WASH, P132
   *DMA TECHN COMM, 1998, DMA 1 0 SPEC
   Dourish P, 2000, ACM T INFORM SYST, V18, P140, DOI 10.1145/348751.348758
   *ECMA, 1997, ECMA149
   ESTUBLIER J, 1994, CONFIGURATION MANAGE, P99
   FEIJSE J, 2003, WEBDAV EXPLORER
   Fielding R., 1999, Tech. Rep
   GIFFORD DK, 1991, P 13 ACM S OP SYST P, P16
   GOLAND Y, 1999, 2518 RFC
   GORDON D, 2002, P MET S 2002 MIS 02
   Hicks DL, 1998, ACM T INFORM SYST, V16, P127, DOI 10.1145/279339.279341
   James Whitehead J.E., 2001, HYPERTEXT'01: Proceedings of the Twelfth ACM Conference on Hypertext and Hypermedia, P195
   *KCURA, 2003, KSTORE EXPL
   LEACH PJ, 1998, UUIDS GUIDS INTERNET
   Masinter L., 1998, 2397 RFC
   PARNAS DL, 1986, IEEE T SOFTWARE ENG, V12, P251, DOI 10.1109/TSE.1986.6312940
   RESCHKE J, 2002, IN PRESS DATATYPES W
   RESCHKE J, 2003, IN PRESS WEBDAV SEAR
   SCHUCHARDT K, 2001, P HIGH PERF DISTR CO
   *SEAS SOFTW, 2003, HIPEREXCHANGE TECHN
   SHAGDAR B, 2002, P IADIS INT C WWW IN, P827
   Shepler S., 2000, 3010 RFC
   SLEIN JA, 1998, 2291 RFC XER U BOL U
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   van der Hoek A, 2002, IEEE T SOFTWARE ENG, V28, P79, DOI 10.1109/32.979990
   *WEBDAV WORK GROUP, 1999, WEBDAV DISTR AUTH PR
   WHITEHEAD EJ, 1999, P 6 EUR C COMP SUPP, P291
   WHITEHEAD EJ, 2002, P HYP 2002 13 ACM C
   WIEBEL S, 1998, 2413 RFC
   Yang C. C., 2000, P 33 HAW INT C SYST
   [No title captured]
NR 35
TC 2
Z9 2
U1 0
U2 5
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2004
VL 34
IS 2
BP 135
EP 161
DI 10.1002/spe.574
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 770XQ
UT WOS:000188757000003
DA 2024-07-18
ER

PT J
AU Schmidt, C
   Kastens, U
AF Schmidt, C
   Kastens, U
TI Implementation of visual languages using pattern-based specifications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE visual programming; graphical environments; visual patterns; reusable
   libraries
ID ELI
AB The implementation of visual languages requires a wide range of conceptual and technical knowledge from issues of user interface design and graphical implementation to aspects of analysis and transformation for languages in general. We present a powerful toolset that incorporates such knowledge. Our toolset generates editors from high-level specifications. A language is specified by identifying certain patterns in the language structure and selecting a visual representation from a set of precoined solutions. Visual programs are represented by attributed abstract trees. Therefore, further phases of processing visual programs can be generated by state-of-the-art tools for language implementation. We demonstrate that even challenging visual languages can be implemented with reasonably little effort and with rather limited technical knowledge. The approach is suitable for a large variety of visual language styles. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Paderborn, D-33102 Paderborn, Germany.
C3 University of Paderborn
RP Univ Paderborn, Furstenallee 11, D-33102 Paderborn, Germany.
EM uwe@uni-paderborn.de
CR AKEHURST DH, 2000, IEEE S VIS LANG SEAT
   Backlund B., 1990, Journal of Visual Languages and Computing, V1, P333, DOI 10.1016/S1045-926X(05)80019-9
   Bardohl R, 1998, 1998 IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P48
   CITRIN WV, 1993, IEEE S VISUAL LANGUA, P142
   Costagliola G., 1999, Proceedings 1999 IEEE Symposium on Visual Languages, P236, DOI 10.1109/VL.1999.795909
   COSTAGLIOLA G, 1997, IEEE S VIS LANG ISL
   CRIMI C, 1990, IEEE T SOFTWARE ENG, V16, P1122, DOI 10.1109/32.60293
   DANGBERG A, 1999, IEEE S VIS LANG TOK, P178
   DERANSART P, 1988, LECTURE NOTES COMPUT, V323
   Franchi-Zannettacci P., 1989, Information Processing 89. Proceedings of the IFIP 11th World Computer Congress, P149
   GLINERT EP, 1990, P IEEE COMP SOC WORK, P61
   Grant CAM, 1998, J VISUAL LANG COMPUT, V9, P351, DOI 10.1006/jvlc.1997.0059
   GRAY RW, 1992, COMMUN ACM, V35, P121, DOI 10.1145/129630.129637
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Griebel P, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P12, DOI 10.1109/VL.1996.545262
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   *IEEE, IEE S HUM CENTR COMP
   JUNG M, 2000, THESIS U PADERBOM
   JUNG M, 2001, LECTURE NOTES COMPUT, V2027, P361
   KAHN K, 1990, IEEE WORKSH VIS LANG
   KASTENS U, 1991, LECT NOTES COMPUT SC, V545, P380
   Kastens U, 1998, LECT NOTES COMPUT SC, V1383, P294, DOI 10.1007/BFb0026439
   KASTENS U, 1991, ACTA INFORM, V28, P539, DOI 10.1007/BF01463944
   KASTENS U, 1994, ACTA INFORM, V31, P601, DOI 10.1007/BF01177548
   KASTENS U, 1991, LECTURE NOTES COMPUT, V545
   KASTENS U, 1998, STREETS ABSCHUSSBERI
   KOTH O, 2000, JOINT APPLIGRAPH GET
   MARRIOTT K, 1998, 9807 MON U SCH COMP
   McWhirter J. D., 1994, Proceedings. IEEE Symposium on Visual Languages (Cat. No.94TH8010), P15, DOI 10.1109/VL.1994.363645
   MINOR S, 1992, INT J MAN MACH STUD, V37, P399, DOI 10.1016/0020-7373(92)90002-3
   NASSI I, 1973, P SIGPLAN 73, P12
   Nielson J., 1993, USABILITY ENG
   Norman D.A., 1986, USER CTR SYSTEM DESI, DOI 10.1201/b15703
   *OBJ MAN GROUP, OMG UN MOD MOD LANG
   Ousterhout J. K., 1990, Proceedings of the Winter 1990 USENIX Conference, P133
   PETRI CA, 1962, THESIS U MUNSTER
   REDMONDPYLE D, 1995, GRAPHICAL USER INTER
   Rekers J, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P148, DOI 10.1109/VL.1996.545281
   SCHMIDT C, 2000, THESIS U PADERBORN G
   SCHMIDT C, 2002, P 2 WORKSH DOM SPEC
   Sitt Sen Chok, 1998, 11th Annual Symposium on User Interface Software and Technology. UIST. Proceedings of the ACM Symposium, P185, DOI 10.1145/288392.288603
   VOSE GM, 1986, BYTE
   WAITE WM, 1984, COMPILER CONSTRUCTIO
   ZARMER CL, 1982, P ACM S US INT SOFT, P33
   [No title captured]
NR 45
TC 6
Z9 7
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2003
VL 33
IS 15
BP 1471
EP 1505
DI 10.1002/spe.560
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 752MF
UT WOS:000187164100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Calvert, K
   Griffioen, J
   Mullins, B
   Natarajan, S
   Poutievski, L
   Sehgal, A
   Wen, S
AF Calvert, K
   Griffioen, J
   Mullins, B
   Natarajan, S
   Poutievski, L
   Sehgal, A
   Wen, S
TI Leveraging emerging network services to scale multimedia applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Computer Communications and Networks
CY OCT 15-17, 2001
CL PHOENIX, ARIZONA
SP Army Res Lab, IBM, Telcordia, Nokia, Avaya, IEEE Communicat Soc
DE multicast; real time protocol; concast; audio and video merging;
   feedback aggregation
AB Multicast services have been used to transmit multimedia data to large receiver groups. Only recently have counterpart network services been introduced to provide similar scalability and anonymity in the opposite direction (i.e. messages from a group of senders destined for a common receiver).
   In this paper, we explore how these many-to-one services, specifically the concast service, can be used to improve the scalability and performance of multimedia applications. In particular, we show how such services can be used in both the control and data planes to overcome well-known scalability problems (e.g. with Real Time Protocol) that are difficult to solve effectively with end-system approaches alone. We validate our solutions by presenting experimental results taken from prototype video and audio applications we designed and implemented. Our initial results show substantial reductions in congestion-induced loss using these generic services. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 University of Kentucky
RP Calvert, K (corresponding author), Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
CR AMIR E, 1995, P ACM MULT C NOV 199
   AMIR E, 1998, P ACM SIGCOMM C SEPT
   BOLOT JC, 1994, P ACM SIGCOMM C SEPT
   CAIN B, 1999, 9974 CMPSCI TR
   CAIN B, UNPUB INTERNET DRAFT
   CALVERT K, 1999, P INT C NETW PROT NO
   Calvert KL, 2001, IEEE J SEL AREA COMM, V19, P426, DOI 10.1109/49.917704
   GOPALAKRISHNAN R, 1999, P NOSSDAV C JUN 1999
   Griffioen J., 1995, PROC ACM MULTIMEDIA, P333
   KASERA KS, 2000, IEEE NETW MAGAZINE, P48
   KATZ D, 1997, 2113 RFC
   KOUVELAS I, 1998, P NETW OP SYST SUPPF
   LEHMAN L, 1998, P INFOCOM C MARCH 19
   MANKIN A, 2000, P NETW OP SYST SUPP
   MCCANNE S, 1996, P ACM SIGCOMM C OCT
   Paul S, 1997, IEEE J SEL AREA COMM, V15, P407, DOI 10.1109/49.564138
   ROSENBERG J, 2000, 2762 RFC
   ROSENBERG J, 1998, P IEEE INFOCOM C MAR
   SCHULZRINNE H, 1996, 1889 RFC
   SPEAKMAN T, 1998, PGM RELIABLE TRANSPO
   *UTG, 2003, UCL TRANSC GAT
   [No title captured]
NR 22
TC 1
Z9 1
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2003
VL 33
IS 14
BP 1377
EP 1397
DI 10.1002/spe.553
PG 21
WC Computer Science, Software Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 741JJ
UT WOS:000186454700006
DA 2024-07-18
ER

PT J
AU Sagonas, K
   Stenman, E
AF Sagonas, K
   Stenman, E
TI Experimental evaluation and improvements to linear scan register
   allocation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE global register allocation; just-in-time compilation; code generation;
   Erlang
AB We report our experience from implementing and experimentally evaluating the performance of various register allocation schemes, focusing on the recently proposed linear scan register allocator. In particular, we describe in detail our implementation of linear scan and report on its behavior both on register-rich and on register-poor computer architectures. We also extensively investigate how different options to the basic algorithm and to the compilation process as a whole affect compilation times and quality of the produced code.
   In a nutshell, our experience is that a well-tuned linear scan register allocator is a good choice on register-rich architectures. It performs competitively with graph coloring based allocation schemes and results in significantly lower compilation times. When compilation time is a concern, such as in just-in-time compilers, it can also be a viable option on register-poor architectures. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Uppsala Univ, Dept Informat Technol, SE-75105 Uppsala, Sweden.
   Swiss Fed Inst Technol, Sch Comp & Commun Sci, CH-1015 Lausanne, Switzerland.
C3 Uppsala University; Swiss Federal Institutes of Technology Domain; Ecole
   Polytechnique Federale de Lausanne
RP Uppsala Univ, Dept Informat Technol, POB 337, SE-75105 Uppsala, Sweden.
EM kostis@it.uu.se
RI Sagonas, Konstantinos/IZD-8641-2023
OI Sagonas, Konstantinos/0000-0001-9657-0179
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 1982, SIGPLAN Not, DOI DOI 10.1145/872726.806984
   Appel AW, 2001, IEEE S LOG, P247, DOI 10.1109/LICS.2001.932501
   Armstrong Joe, 1996, Concurrent Programming in Erlang
   BRIGGS P, 1994, ACM T PROGR LANG SYS, V16, P428, DOI 10.1145/177492.177575
   CHAITIN GJ, 1981, COMPUT LANG, V6, P47, DOI 10.1016/0096-0551(81)90048-5
   CHOW FC, 1990, ACM T PROGR LANG SYS, V12, P501, DOI 10.1145/88616.88621
   Cooper KD, 1998, LECT NOTES COMPUT SC, V1383, P174
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   George L, 1996, ACM T PROGR LANG SYS, V18, P300, DOI 10.1145/229542.229546
   HENDERSON LW, 1992, BLOOD PURIFICAT, V10, P1, DOI 10.1159/000170030
   Johansson E., 2000, Proceedings of the 2nd International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP '00), P32, DOI 10.1145/351268.351273
   JOHANSSON E, 2002, LECT NOTES COMPUTER, V2257, P299
   Jones R.E., 1996, Garbage Collection: Algorithms for Automatic Dynamic Memory Management
   Muchnick S., 1997, ADV COMPILER DESIGN
   Park JY, 1998, 1998 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P196, DOI 10.1109/PACT.1998.727246
   Poletto M, 1999, ACM T PROGR LANG SYS, V21, P895, DOI 10.1145/330249.330250
   Poletto M, 1999, ACM T PROGR LANG SYS, V21, P324, DOI 10.1145/316686.316697
   Sethi R., 1975, SIAM Journal on Computing, V4, P226, DOI 10.1137/0204020
   Traub O., 1998, P ACM SIGPLAN C PROG, P142
NR 20
TC 4
Z9 7
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2003
VL 33
IS 11
BP 1003
EP 1034
DI 10.1002/spe.533
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715LU
UT WOS:000184974300001
DA 2024-07-18
ER

PT J
AU Zhao, ZY
   Zhang, L
   Lian, XL
   Lv, HY
AF Zhao, Ziyan
   Zhang, Li
   Lian, Xiaoli
   Lv, Heyang
TI DRIP: Segmenting individual requirements from software requirement
   documents
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deep learning; requirement items; software requirements; text
   segmentation
ID AGREEMENT; MODELS; KAPPA
AB Numerous academic research projects and industrial tasks related to software engineering require individual requirements as input. Unfortunately, according to our observation, several requirements may be packed in one paragraph without explicit boundaries in specification documents. To understand this problem's prevalence, we performed a preliminary study on the open requirement documents widely used in the academic community over the last 10 years, and found that 26% of them include this phenomenon. Several text segmentation approaches have been reported; however, they tend to identify topically coherent units which may contain more than one requirement. What is more, they do not take the constitutions of semantic units of requirements into consideration. Here we report a two-phase learning-based approach named DRIP to segment individual requirements from paragraphs. To be specific, we first propose a Requirement Segmentation Siamese framework, which models the similarity of sentences and their conjunction relations, and then detects the initial boundaries between individual requirements. Then, we optimize the boundaries heuristically based on the semantic completeness validation of the segments. Experiments with 1132 paragraphs and 6826 sentences show that DRIP outperforms the popular unsupervised and supervised text segmentation algorithms with respect to processing different documents (with accuracy gains of 57.65%-187.53%) and processing paragraphs of different complexity (with average accuracy gains of 54.46%-158.68%). We also show the importance of each component of DRIP to the segmentation.
C1 [Zhao, Ziyan; Zhang, Li; Lian, Xiaoli; Lv, Heyang] Beihang Univ, State Key Lab Software Dev Environm SKLSDE, Beijing, Peoples R China.
   [Lian, Xiaoli] Beihang Univ, Beijing, Peoples R China.
C3 Beihang University; Beihang University
RP Lian, XL (corresponding author), Beihang Univ, Beijing, Peoples R China.
EM lianxiaoli@buaa.edu.cn
RI Zhao, Ziyan/AAK-2065-2020
OI Zhao, Ziyan/0000-0002-5858-4489
FU National Natural Science Foundation of China [62102014, 62177003];
   National Science Foundation of China [SKLSDE-2021ZX-10]; State Key
   Laboratory of Software Development Environment
FX Funding for this work has been provided by the National Science
   Foundation of China Grant numbers 62102014 and 62177003. It is also
   partially supported by State Key Laboratory of Software Development
   Environment number SKLSDE-2021ZX-10.
CR 7esl.com, 2021, LINK WORDS CONN WORD
   Abualhaija S, 2019, INT REQUIR ENG CONF, P51, DOI 10.1109/RE.2019.00017
   Allen Institute, 2021, ABOUT US
   [Anonymous], 2018, ISO/IEC/IEEE 29148:2018(E), P1, DOI 10.1109/IEEESTD.2018.8559686
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   Arora C, 2019, EMPIR SOFTW ENG, V24, P2509, DOI 10.1007/s10664-019-09693-x
   Arora C, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293454
   Arora C, 2017, IEEE T SOFTWARE ENG, V43, P918, DOI 10.1109/TSE.2016.2635134
   Aumiller Dennis, 2021, ICAIL '21: Proceedings of the Eighteenth International Conference on Artificial Intelligence and Law, P2, DOI 10.1145/3462757.3466085
   Azmeh Z., 2013, HIGHLIGHTING STAKEHO, P190
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bromley J., 1993, International Journal of Pattern Recognition and Artificial Intelligence, V7, P669, DOI 10.1142/S0218001493000339
   Cai J, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P1665, DOI 10.1145/3397271.3401195
   CESUR OUK, 2018, DICT LINK WORDS GUID
   Chattopadhyay A., 2021, JOINT P REFSQ 2021 W
   Chi Mai Nguyen, 2018, Requirements Engineering, V23, P189, DOI 10.1007/s00766-016-0263-5
   Choi FYY, 2000, 6TH APPLIED NATURAL LANGUAGE PROCESSING CONFERENCE/1ST MEETING OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE AND PROCEEDINGS OF THE ANLP-NAACL 2000 STUDENT RESEARCH WORKSHOP, pA26
   Cleland-Huang J., 2006, DETECTION CLASSIFICA, P36
   CoEST, 2002, COEST CTR EXC SOFTW
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Dahlstedt ÅG, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P95, DOI 10.1007/3-540-28244-0_5
   Deshpande G, 2020, INT REQUIR ENG CONF, P78, DOI 10.1109/RE48521.2020.00020
   Devlin J., 2018, BERT PRE TRAINING DE
   Dey S., 2017, Pattern Recognition Letters
   Du L, 2015, AAAI CONF ARTIF INTE, P2232
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Ezzini S., 2021, 2021 IEEE ACM 43 INT
   Falkner A, 2019, LECT NOTES COMPUT SC, V11412, P176, DOI 10.1007/978-3-030-15538-4_13
   Feng ZG, 2020, CPEM DIGEST, DOI 10.1109/cpem49742.2020.9191721
   Ferrari Alessio, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P34, DOI 10.1007/978-3-642-37422-7_3
   Ferrari A, 2017, I S WORLD WIREL MOBI
   Fillmore CJ, 2003, INT J LEXICOGR, V16, P235, DOI 10.1093/ijl/16.3.235
   Glavas Goran., 2016, Unsupervised Text Segmentation Using Semantic Relatedness Graphs
   Guha V., 2021, SEMANTIC SEGMENTATIO
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hayes JH, 2018, REQUIR ENG, V23, P119, DOI 10.1007/s00766-016-0260-8
   Hearst MA, 1997, COMPUT LINGUIST, V23, P33
   Hey T, 2020, INT REQUIR ENG CONF, P169, DOI 10.1109/RE48521.2020.00028
   Horkoff J, 2016, REQUIR ENG, V21, P29, DOI 10.1007/s00766-014-0209-8
   Hou SL, 2020, EXPERT SYST APPL, V157, DOI 10.1016/j.eswa.2020.113421
   Hsueh PY., 2006, 2006 IEEE SPOK LANG
   Jiang Z., 2021, P 30 INT JOINT C ART, P3822
   Kaufmann A, 2019, REQUIR ENG, V24, P85, DOI 10.1007/s00766-017-0284-8
   Koshorek O., 2018, NAACL HLT 2018-2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies-Proceedings of the Conference, V2, P469, DOI [10.18653/v1/n18-2075, DOI 10.18653/V1/N18-2075]
   Li MY, 2020, IEEE INT CONF AUTOM, P336, DOI 10.1145/3324884.3416627
   Li W., REQUIREMENTS ENG FDN, V2014, P168
   Li Y, 2015, PROCEDIA COMPUT SCI, V51, P582, DOI 10.1016/j.procs.2015.05.326
   Lian XL, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106196
   Lian XL, 2017, INT REQUIR ENG CONF, P292, DOI 10.1109/RE.2017.68
   Lian XL, 2016, INT REQUIR ENG CONF, P156, DOI 10.1109/RE.2016.50
   Lucassen G, 2017, REQUIR ENG, V22, P339, DOI 10.1007/s00766-017-0270-1
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Mann W., 1987, THEORY TEXT ORG RHET
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Mich L., 2004, REQUIR ENG, V9
   Misra H., 2009, P 18 ACM C INF KNOWL, P1553
   Moitra A, 2019, REQUIR ENG, V24, P341, DOI 10.1007/s00766-019-00316-x
   O'Brien E., 2021, LIST CONJUNCTIONS
   Carvallo JP, 2019, REQUIR ENG, V24, P27, DOI 10.1007/s00766-018-0300-7
   Palmer M, 2005, COMPUT LINGUIST, V31, P71, DOI 10.1162/0891201053630264
   Pasquale L, 2016, REQUIR ENG, V21, P481, DOI 10.1007/s00766-015-0229-z
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Pohl K., 1996, Requirements engineering: An overview
   PROMISE, PROMISE INT WORKSH P
   Rahimi A, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON REBOOTING COMPUTING (ICRC)
   Rahimi M, 2018, EMPIR SOFTW ENG, V23, P2198, DOI 10.1007/s10664-017-9561-x
   Rana M, 2014, 2014 INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION (ICIEV)
   Reddivari S., 2019, 2019 IEEE 20 INT C I
   Reddivari S., 2012, 2012 20 IEEE INT REQ
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Reinhartz-Berger I, 2020, REQUIR ENG, V25, P47, DOI 10.1007/s00766-018-0307-0
   Riedl Martin, 2012, P ACL 2012 STUD RES, P37
   Robinson M, 2021, REQUIR ENG, V26, P509, DOI 10.1007/s00766-021-00353-5
   RTCA I, 2011, SOFTW CONS AIRB SYST
   Sadi MH, 2017, LECT NOTES COMPUT SC, V10153, P33, DOI 10.1007/978-3-319-54045-0_3
   Sakata W, 2019, PROCEEDINGS OF THE 42ND INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '19), P1113, DOI 10.1145/3331184.3331326
   Salay R, 2013, REQUIR ENG, V18, P107, DOI 10.1007/s00766-013-0170-y
   Schlutter A., 2020, ICSEW 20 P IEEE ACM
   Shi L, 2021, REQUIR ENG, V26, P255, DOI 10.1007/s00766-020-00344-y
   Shi L, 2020, PROC INT CONF SOFTW, P641, DOI 10.1145/3377811.3380356
   Slankas J, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON NATURAL LANGUAGE ANALYSIS IN SOFTWARE ENGINEERING (NATURALISE), P9, DOI 10.1109/NAturaLiSE.2013.6611715
   Sun Q., 2008, TEXT SEGMENTATION LD
   Tenbergen B, 2018, REQUIR ENG, V23, P291, DOI 10.1007/s00766-017-0267-9
   Thompson SA., 1987, RHETORICAL STRUCTURE
   Utiyama M, 2001, 39TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P491
   Van-Linh Pham, 2020, 2020 International Conference on Advanced Computing and Applications (ACOMP), P135, DOI 10.1109/ACOMP50827.2020.00027
   Veizaga A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09956-6
   Venters CC, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE-SEIS.2017.2
   Viera AJ, 2005, FAM MED, V37, P360
   Villamizar H, 2020, REQUIR ENG, V25, P439, DOI 10.1007/s00766-020-00338-w
   Wang LD, 2021, IEEE INT SYMP CIRC S, DOI 10.1109/ISCAS51556.2021.9401724
   Wang M., LECT NOTES COMPUTE 1, V2021, P517
   Wang YD, 2021, REQUIR ENG, V26, P301, DOI 10.1007/s00766-021-00346-4
   Wiegers Karl, 2013, Software Requirements
   Winkler J, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P39, DOI [10.1109/REW.2016.16, 10.1109/REW.2016.021]
   Yan S, 2014, IEEE-ACM T AUDIO SPE, V22, P2048, DOI 10.1109/TASLP.2014.2360461
NR 98
TC 0
Z9 0
U1 4
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2024
VL 54
IS 5
BP 842
EP 874
DI 10.1002/spe.3303
EA DEC 2023
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NB0V3
UT WOS:001128779300001
DA 2024-07-18
ER

PT J
AU Mao, CY
   Song, Y
   Chen, JF
AF Mao, Chengying
   Song, Yue
   Chen, Jifu
TI A lightweight adaptive random testing method for deep learning systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive random testing; cluster analysis; deep learning systems;
   efficiency; failure detection
ID REDUCTION
AB In recent years, deep learning (DL) systems are increasingly used in the safety-critical fields such as autonomous driving, medical diagnosis, and financial service. Although these systems have demonstrated an outstanding performance in enhancing the accuracy of decision-making, they pose significant challenges to the trustworthiness due to their limited interpretability and inherent uncertainty. Adaptive random testing (ART) has been proved as an effective approach for ensuring the reliability of DL systems. However, existing ART methods for DL systems incur a heavy overhead in test case selection due to the computation of distances. To address this issue, we propose a lightweight adaptive random testing (Lw-ARTDL) method for DL systems. In our improved algorithm, we employ the K-Means technique to divide the entire test suite into several subsets. Then, for a candidate test case, we only calculate distances between it and the test cases within the category to which it belongs. This partition strategy ensures that the selected test cases are more representative while significantly reducing the computational cost. To validate the proposed algorithm, the comparison experiments between Lw-ARTDL and the original ARTDL algorithm are conducted on two typical DL systems. The experimental results show that Lw-ARTDL significantly reduces the overhead of failure detection, and exhibits stronger failure detection capability compared to ARTDL in most similarity metrics.
C1 [Mao, Chengying; Song, Yue; Chen, Jifu] Jiangxi Univ Finance & Econ, Sch Software & IoT Engn, Nanchang, Peoples R China.
C3 Jiangxi University of Finance & Economics
RP Mao, CY (corresponding author), Jiangxi Univ Finance & Econ, Sch Software & IoT Engn, Nanchang 330013, Peoples R China.
EM maochy@yeah.net
RI ying, mao cheng/JCN-7448-2023
OI Mao, Chengying/0000-0001-8178-1205
FU National Natural Science Foundation of China [62172195]; Jiangxi Social
   Science Research Project [15TQ10]; Educational Science Research Project
   of Jiangxi Province [JXJG-21-4-26]
FX National Natural Science Foundation of China, Grant/Award Number:
   62172195; Jiangxi Social Science Research Project, Grant/Award Number:
   15TQ10; Educational Science Research Project of Jiangxi Province,
   Grant/Award Number: JXJG-21-4-26
CR Aghababaeyan Z., 2021, ABS211212591 CORR
   Ahuja M, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3559501
   Aldas NDT, 2020, 22ND INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY (ASSETS '20), DOI 10.1145/3373625.3417028
   Almaghairbe R., 2015, P 10 INT WORKSH AUT
   Arcuri A., 2011, P 2011 INT S SOFTW T
   Barus AC, 2016, IEEE T COMPUT, V65, P3509, DOI 10.1109/TC.2016.2547380
   Boudette Neal E., 2017, Tesla's self-driving system cleared in deadly crash
   Chen J., 2019, ABS190910879 CORR
   Chen JF, 2022, IEEE TETCI, V6, P969, DOI 10.1109/TETCI.2021.3122511
   Chen JF, 2017, IEEE T RELIAB, V66, P373, DOI 10.1109/TR.2016.2628759
   Chen JY, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-9704-7
   Chen T., 2006, P 11 AD EUR INT C RE
   Chen TY, 2006, J SYST SOFTWARE, V79, P591, DOI 10.1016/j.jss.2005.05.029
   Chen TY, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5314-x
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P79
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   Chen TY., 2004, P 9 AS COMP SCI C AS
   Chen TY., 2010, P 2 INT C SOFTW ENG
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Deng Yinlin, 2022, P 30 ACM JOINT EUR S
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Dickinson W., 2001, P 8 EUR SOFTW ENG C
   DiGiuseppe N., 2012, P IEEE 5 INT C SOFTW
   Gao X., 2022, P 44 INT C SOFTW ENG
   Gerlich R., 2007, P 2 INT WORKSH RAND
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Grigorescu S, 2020, J FIELD ROBOT, V37, P362, DOI 10.1002/rob.21918
   Guo J., 2018, P 26 ACM JOINT EUR S
   He K., 2016, PROC CVPR IEEE, P770, DOI [10.1109/CVPR.2016.90, DOI 10.1109/CVPR.2016.90]
   Hollander M., 2013, Nonparametric statistical methods
   Hu Q, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511598
   Huang R., 2022, SCI COMPUT PROGRAM, V214, P1
   Huang RB, 2021, IEEE T SOFTWARE ENG, V47, P2052, DOI 10.1109/TSE.2019.2942921
   Huang R, 2023, IEEE T NEUR NET LEAR, V34, P8430, DOI 10.1109/TNNLS.2022.3151127
   Kang HJ., 2022, ABS221204038 CORR
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lenz AR, 2013, ENG APPL ARTIF INTEL, V26, P1631, DOI 10.1016/j.engappai.2013.01.008
   Li Deng, 2012, IEEE Signal Processing Magazine, V29, P141, DOI [10.1109/MSP.2012.2211477, DOI 10.1109/MSP.2012.2211477]
   Liu H, 2012, SOFTWARE PRACT EXPER, V42, P1055, DOI 10.1002/spe.1113
   Liu H, 2011, SOFTWARE PRACT EXPER, V41, P1131, DOI 10.1002/spe.1067
   Ma L., 2019, P 26 IEEE INT C SOFT
   Ma L., 2018, P 33 ACM IEEE INT C
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Mao C., 2017, P 24 AS PAC SOFTW EN
   Mao C., 2005, P 1 INT C ADV DAT MI
   Mao CY, 2019, IEEE T RELIAB, V68, P1444, DOI 10.1109/TR.2019.2892230
   Mao CY, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-016-0087-0
   Martinez-Fernandez S., 2022, ACM T SOFTW ENG METH, V31, P37
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Odena A, 2019, PR MACH LEARN RES, V97
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pang Y., 2013, IDENTIFYING EFFECTIV
   Pei KX, 2018, GETMOBILE-MOB COMPU, V22, P36, DOI 10.1145/3308755.3308767
   Podgurski A, 1999, ACM T SOFTW ENG METH, V8, P263, DOI 10.1145/310663.310667
   Rogstad E, 2016, IEEE T RELIAB, V65, P4, DOI 10.1109/TR.2015.2437840
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Salahirad A., 2023, J SYST SOFTW, V195, P1
   Sangwan RS, 2022, COMPUTER, V55, P101, DOI 10.1109/MC.2021.3132710
   Santhanavijayan A., 2021, Intelligent System Design. Proceedings of Intelligent System Design: INDIA 2019. Advances in Intelligent Systems and Computing (AISC 1171), P247, DOI 10.1007/978-981-15-5400-1_25
   Schneckenburger C., 2007, P 4 INT WORKSH SOFTW
   Shahbazi A, 2016, IEEE T SOFTWARE ENG, V42, P361, DOI 10.1109/TSE.2015.2487958
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Song Y., 2022, J SYST SOFTW, V193, P1
   Sun CA, 2022, IEEE T SERV COMPUT, V15, P736, DOI 10.1109/TSC.2019.2960496
   Takanezawa S., 2022, P 2022 IEEE INT C SO
   van der Meulen MJP, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P101, DOI 10.1109/ISSRE.2004.7
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia CY, 2021, IEEE ACCESS, V9, P28111, DOI 10.1109/ACCESS.2021.3058301
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yan M, 2020, IEEE ACCESS, V8, P3055, DOI 10.1109/ACCESS.2019.2962695
   Yang Y., 2022, INFORM SOFTW TECHNOL, V151, P1
   Zeiler MD, 2014, LECT NOTES COMPUT SC, V8689, P818, DOI 10.1007/978-3-319-10590-1_53
   Zhang C., 2010, P 10 INT C QUAL SOFT
   Zhang XF, 2021, IEEE T RELIAB, V70, P1671, DOI 10.1109/TR.2021.3107165
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhang ZY, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106701
   Zhang ZG, 2018, DESTECH TRANS ENVIR
   Zhao C., 2022, INFORM SOFTW TECHNOL, V150, P1
   Zhu XG, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3512345
NR 82
TC 0
Z9 0
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2023
VL 53
IS 11
BP 2271
EP 2295
DI 10.1002/spe.3256
EA AUG 2023
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U0UL3
UT WOS:001065074600001
DA 2024-07-18
ER

PT J
AU Wang, SX
   Huang, C
   Yu, DJ
   Chen, X
AF Wang, Sixuan
   Huang, Chen
   Yu, Dongjin
   Chen, Xin
TI VulGraB: Graph-embedding-based code vulnerability detection with
   bi-directional gated graph neural network
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bi-directional gated neural network; code vulnerability detection; deep
   learning; graph embedding; node2vec
AB Code vulnerabilities can have serious consequences such as system attacks and data leakage, making it crucial to perform code vulnerability detection during the software development phase. Deep learning is an emerging approach for vulnerability detection tasks. Existing deep learning-based code vulnerability detection methods are usually based on word2vec embedding of linear sequences of source code, followed by code vulnerability detection through RNNs network. However, such methods can only capture the superficial structural or syntactic information of the source code text, which is not suitable for modeling the complex control flow and data flow and miss edge information in the graph structure constructed by the source code, with limited effect of neural network model. To solve the above problems, this article proposes a code vulnerability detection method, named VulGraB, which is based on graph embedding and bidirectional gated graph neural networks. VulGraB uses node2vec to convert the program-dependent graphs into graph embeddings of the code, which contain rich structure information of the source code, improving the ability of features to express nonlinear information to a certain extent. Then the BiGGNN is used for training, and finally the accuracy of the detection results is evaluated using target program. The bi-directional gated neural network utilizes a bi-directional recurrent structure, which is beneficial to global information aggregation. The experimental results show that the accuracy of VulGraB is significantly improved over the baseline models on two datasets, with F1 scores of 85.89% and 97.24% being the highest, demonstrating that VulGraB consistently outperforms other effective vulnerability detection models.
C1 [Wang, Sixuan; Huang, Chen; Yu, Dongjin; Chen, Xin] Hangzhou Dianzi Univ, Sch Comp Sci & Technol, Hangzhou 310018, Peoples R China.
C3 Hangzhou Dianzi University
RP Yu, DJ (corresponding author), Hangzhou Dianzi Univ, Sch Comp Sci & Technol, Hangzhou 310018, Peoples R China.
EM yudj@hdu.edu.cn
OI Wang, Sixuan/0000-0002-1389-2488
FU Natural Science Foundation of Zhejiang Province [LY23F020016,
   LY21F020020]; National Natural Science Foundation of China [61902096];
   Key Research and Development Program of Zhejiang Province [2023C03200]
FX ACKNOWLEDGMENTS The work was supported in part by the Natural Science
   Foundation of Zhejiang Province under Grant LY23F020016 and Grant
   LY21F020020, in part by the National Natural Science Foundation of China
   under Grant 61902096, in part by the Key Research and Development
   Program of Zhejiang Province under Grant 2023C03200.
CR Akram J, 2021, SOFTWARE PRACT EXPER, V51, P294, DOI 10.1002/spe.2905
   Alexander L., THESIS U NOTRE DAME
   [Anonymous], 2020, COMMON WEAKNESS ENUM
   Bilgin Z, 2020, IEEE ACCESS, V8, P150672, DOI 10.1109/ACCESS.2020.3016774
   Bowman B, 2020, 2020 5TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2020), P53, DOI 10.1109/EuroSP48549.2020.00012
   Buch L., P 2019 IEEE 26 INT C
   Chen Y., REINFORCEMENT LEARNI
   Cheng X., P 31 ACM SIGSOFT INT
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Cheng X, 2019, IEEE INT C ENG COMP, P41, DOI 10.1109/ICECCS.2019.00012
   Cheng Xiao, 2022, IEEE Transactions on Dependable and Secure Computing, P1
   Choi M., P 26 INT JOINT C ART
   CVE, About us
   Duan X, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4665
   Feng Q., P 2020 IEEE INT C SO
   Gao H., P 2 C AS PAC CHAPT A
   Ghaffarian SM, 2021, INFORM SCIENCES, V553, P189, DOI 10.1016/j.ins.2020.11.053
   GitHub, US
   Gong X, 2019, IEEE INT C ENG COMP, P31, DOI 10.1109/ICECCS.2019.00011
   Grieco G., P 6 ACM C DAT APPL S
   Grover A., node2vec: scalable feature learning for networks. CoRR abs/1607.00653
   Guo JJ, 2023, SOFT COMPUT, V27, P1131, DOI 10.1007/s00500-021-05994-w
   Heartbleed, US
   Kim S., P 2017 IEEE S SEC PR
   Lee YJ., P 9 INT C INT ICONI
   Letychevskyi O., IEEE INT CONF BIG DA
   Li Z., P NETW DISTR SYST SE
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Lin GJ, 2021, IEEE T DEPEND SECURE, V18, P2469, DOI 10.1109/TDSC.2019.2954088
   Liu S., ABS211102671 CORR
   Liu SG, 2022, IEEE T DEPEND SECURE, V19, P438, DOI 10.1109/TDSC.2020.2984505
   Maiorca D, 2019, IEEE SECUR PRIV, V17, P63, DOI 10.1109/MSEC.2018.2875879
   Mikolov T., Distributed representations of words and phrases and their compositionality. Proc. 26th Int. Conf. Neural Inf. Process. Syst.-Vol. 2, NIPS'13, Curran Associates Inc., Red Hook, NY, USA, 2013
   Mikolov T, 2013, P WORKSHOP ICLR 2013
   OpenSSL, ABOUT US
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Chakravarthy SRS, 2021, INT J IMAG SYST TECH, V31, P1861, DOI 10.1002/ima.22570
   Shar LK, 2012, IEEE INT CONF AUTOM, P310, DOI 10.1145/2351676.2351733
   Shen ZD, 2020, SECUR COMMUN NETW, V2020, DOI 10.1155/2020/8858010
   Standards N, NATL VULNERABILITY D
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Sui YL, 2020, IEEE T SOFTWARE ENG, V46, P812, DOI 10.1109/TSE.2018.2869336
   Tian JF, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106289
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Wang Z., P 2022 INT C ALG DAT
   wannier, About us
   Woo S., P 31 USENIX SEC S
   Wu B., 2022, CANCER CELL
   Wu F, 2017, PROCEEDINGS OF 2017 3RD IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATIONS (ICCC), P1298, DOI 10.1109/CompComm.2017.8322752
   Wu J., ABS210411230 CORR
   Xiao Y., P 29 USENIX SEC S
   Yang W., ABS210315543 CORR
   Yichi Li, 2021, 2021 IEEE Asia-Pacific Conference on Image Processing, Electronics and Computers (IPEC), P292, DOI 10.1109/IPEC51340.2021.9421251
   Yin XH, 2022, SOFTWARE PRACT EXPER, V52, P1114, DOI 10.1002/spe.3057
   Zhang MY, 2019, IEEE T INF FOREN SEC, V14, P2315, DOI 10.1109/TIFS.2019.2895963
   Zhou Y., P 33 INT C NEUR INF
   Zhuang Y., ABS210903341 CORR
NR 57
TC 1
Z9 1
U1 8
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2023
VL 53
IS 8
BP 1631
EP 1658
DI 10.1002/spe.3205
EA APR 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L1MX2
UT WOS:000965508300001
DA 2024-07-18
ER

PT J
AU Park, H
   Kim, S
   Bae, B
AF Park, Hyukwoo
   Kim, Seonghyun
   Bae, Boram
TI Dynamic code compression for JavaScript engine
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code compression; JavaScript; memory optimization; web engine
AB Web applications created using web languages such as HTML, CSS, and JavaScript are widely used regardless of execution environments, owing to their portability and popularity. Since JavaScript language is conventionally used for complex computations in large-scale web apps, many optimization techniques have been proposed to accelerate the JavaScript performance. However, most of these optimizations speed up JavaScript engines at the expense of consuming more memory. Hence, memory consumption becomes an additional concern in the JavaScript field. Based on the research on memory status, we unearthed that a substantial portion of the heap memory is allocated for JavaScript source code, particularly in lightweight JavaScript engines, which may range from 13.2% to a maximal 52.5% of the entire heap. To resolve this memory issue, this article suggests a new memory optimization method, called dynamic code compression that dynamically compresses the source code and keeps its compressed form instead of the source string. A novel heuristic is proposed to timely compress the source code. We also re-design the internal structure of the JavaScript engine to efficiently compress the source code without incurring any conflict. Using our code compression method, we could reduce the entire heap memory by up to 43.3% and consistently downsize the overall heap size. From an evaluation of standard benchmarks, our approach showed just 2.7% degradation in performance with negligible compression overhead, proving the feasibility of the code compression technique.
C1 [Park, Hyukwoo; Kim, Seonghyun; Bae, Boram] Samsung Res, Samsung Elect, Seoul, South Korea.
C3 Samsung Electronics; Samsung
RP Park, H (corresponding author), Samsung Res, Samsung Elect, Seoul, South Korea.
EM hyukwoo.park@samsung.com
RI Park, Hyukwoo/HWS-2235-2023
OI Park, Hyukwoo/0000-0002-8525-0652
FU Samsung Research, Samsung Electronics Co., Ltd.
FX Samsung Research, Samsung Electronics Co., Ltd.
CR Angular, about us
   [Anonymous], WEBOS OPEN SOURCE ED
   [Anonymous], V8 JavaScript engine
   [Anonymous], BOEHM DEMERS WEISER
   [Anonymous], SpiderMonkey (JavaScript-C) Engine
   [Anonymous], LZBENCH MEMORY BENCH
   [Anonymous], Silesia compression corpus
   [Anonymous], SUNSPIDER 1 0 2 JAVA
   [Anonymous], LZ4 EXTREMELY FAST C
   [Anonymous], ESCARGOT JAVASCRIPT
   [Anonymous], Javascriptcore
   [Anonymous], ECMA262
   [Anonymous], JERRYSCRIPT JAVASCRI
   [Anonymous], TIZEN PROJECT
   [Anonymous], SQUIRRELFISHEXTREME
   Biorn-Hansen A, 2017, WEBIST: PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES, P344, DOI 10.5220/0006353703440351
   BOEHM HJ, 1993, SIGPLAN NOTICES, V28, P197, DOI 10.1145/173262.155109
   Burtscher M., 2010, JSZAP COMPRESSING JA
   Choi JD., 2012, P CASES 12, P5
   Debray S, 2002, ACM SIGPLAN NOTICES, V37, P95, DOI 10.1145/543552.512542
   Deutsch PeterL., 1984, Proceedings of the 11th ACM SIGACT-SIGPLAN symposium on Principles of Programming Languages, POPL '84, P297, DOI [10.1145/800017.800542, DOI 10.1145/800017.800542]
   Franz M., 2003, P FDN INTRUSION TOLE, P337
   Gal A, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P465, DOI 10.1145/1542476.1542528
   Gavrin Evgeny., 2015, Companion Proceedings of the 2015 ACM SIG-PLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity, SPLASH Companion 2015, P19
   Google, OCT 2 0 JAVASCRIPT B
   Haas A, 2017, ACM SIGPLAN NOTICES, V52, P185, DOI [10.1145/3062341.3062363, 10.1145/3140587.3062363]
   Lee SW., 2010, P 2010 WORKSHOP INTE
   Malavolta I, 2016, MOBILE!'16: PROCEEDINGS OF THE 1ST INTERNATIONAL WORKSHOP ON MOBILE DEVELOPMENT, P1, DOI 10.1145/3001854.3001863
   Mozilla, KRAK JAVASCRIPT BENC
   Node.js, About us
   Pugh W, 1999, ACM SIGPLAN NOTICES, V34, P247, DOI 10.1145/301631.301676
   Ratanaworabhan P., 2010, P USENIX C WEB APPL
   Richards G, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1806596.1806598
   Stork CH., 2000, GENERIC ADAPTIVE SYN
   V8 Blog, CUST START SNAPSH
   Vue.js, About us
   Weiss A., 2005, Networker, V9, P18, DOI 10.1145/1050831.1050832
NR 37
TC 0
Z9 0
U1 5
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2023
VL 53
IS 5
BP 1196
EP 1217
DI 10.1002/spe.3186
EA FEB 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C0ZX8
UT WOS:000932616200001
DA 2024-07-18
ER

PT J
AU Arts, T
   Svensson, H
   Earle, CB
   Fredlund, LA
AF Arts, Thomas
   Svensson, Hans
   Earle, Clara Benac
   Fredlund, Lars-Ake
TI Testing feature-rich blockchains
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE blockchain; property-based testing
ID QUICKCHECK
AB Blockchain implementations have become more and more advanced, combining many different features in the same framework (e.g., oracles, names, and state channels). Since the cost of errors in reputation and represented value is high in the blockchain world, software quality is of the utmost importance. One of the main methods used to assure such high software quality is careful testing. However, the number of tests needed to achieve a high level of assurance grows quadratic with the pairs of features of the blockchain, and when testing triples features the growth is cubic. To manually craft the required large number of tests is an almost impossible undertaking in practice. In this article, we describe how property-based testing (PBT) techniques have been used to automate testing of the core part of the Aeternity blockchain, ensuring the high software quality of the blockchain. Even though PBT is a powerful testing technique, applying it to the task of testing a complex system such as a blockchain, is far from trivial. The structure of the Aeternity property-based test model follows the structure of the blockchain, that is, it cleanly separates different blockchain features (e.g., oracles, smart contracts) into different model parts, and moreover, reduces the amount of boilerplate test model code by focusing on the identification of valid blockchain transactions. The test model is evaluated through a careful instrumentation of test code which permits observations of which combinations of features have been tested during a test run, and with which frequency. This article documents the details of how these issues were addressed in the development of the Aeternity test model, providing insights into both the testing of other blockchains as well as the testing of other complex feature based systems.
C1 [Arts, Thomas; Svensson, Hans] Quviq AB, Gothenburg, Sweden.
   [Earle, Clara Benac; Fredlund, Lars-Ake] Univ Politecn Madrid, Babel Res Grp, Boadilla Del Monte 28660, Spain.
   [Earle, Clara Benac] Univ Politecn Madrid, UPM Campus Montegancedo S-N, Boadilla Del Monte 28660, Spain.
C3 Universidad Politecnica de Madrid; Universidad Politecnica de Madrid
RP Earle, CB (corresponding author), Univ Politecn Madrid, UPM Campus Montegancedo S-N, Boadilla Del Monte 28660, Spain.
EM cbenac@fi.upm.es
RI Fredlund, Lars-Åke/AAA-9117-2019; Benac-Earle, Clara/A-8678-2017
OI Fredlund, Lars-Åke/0000-0002-8296-4609; Benac-Earle,
   Clara/0000-0002-8629-5289
FU European Union [S2018/TCS-4339]; Comunidad de Madrid [S2018/TCS-4339];
   Ministerio de Ciencia e Innovacion [PID2019-104735RB-C44]
FX EIE Funds of the European Union and Comunidad de Madrid and, Grant/Award
   Number: S2018/TCS-4339; Ministerio de Ciencia e Innovacion, Grant/Award
   Number: PID2019-104735RB-C44
CR Albert Elvira, 2018, arXiv
   Ali M, 2016, PROCEEDINGS OF USENIX ATC '16: 2016 USENIX ANNUAL TECHNICAL CONFERENCE, P181
   Amani S, 2018, P 7 INT C CERT PROGR, P66, DOI DOI 10.1145/3167084
   Annenkov D., 2020, VERIFYING TESTING RU
   Annenkov D, 2020, CPP '20: PROCEEDINGS OF THE 9TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON CERTIFIED PROGRAMS AND PROOFS, P215, DOI 10.1145/3372885.3373829
   [Anonymous], 2006, P 2006 ACM SIGPLAN W
   [Anonymous], 2022, OVERVIEW TESTING TEZ
   [Anonymous], 1990, Software testing techniques {
   Armstrong J, 2010, COMMUN ACM, V53, P68, DOI 10.1145/1810891.1810910
   Arts T, 2015, TESTING AUTOSAR SOFT, P1
   Arts T, 2016, IEEE INT CONF SOFTW, P244, DOI 10.1109/ICST.2016.23
   Ballesteros I., 2022, AUTOMATIC GENERATION
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Bitcoin Project, 2021, WHO CREAT BITC
   Buterin V., 2014, CISC VIS NETW IND GL, V3, P1, DOI DOI 10.1145/2939672.2939785
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Chepurnoy A., 2019, SCOREX MODULAR BLOCK
   Chepurnoy A, 2018, 2018 IEEE 1ST INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE), P40, DOI 10.1109/IWBOSE.2018.8327570
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Duan ZB, 2017, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON COMPUTER MODELING AND SIMULATION (ICCMS 2018), P231, DOI 10.1145/3177457.3177485
   Eyal I, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P45
   Gay G., 2015, IEEE T SOFTW ENG
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Goodman L., 2014, Tezos-a self-amending crypto-ledger white paper
   Grieco Gustavo, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P557, DOI 10.1145/3395363.3404366
   Groce A., 2012, P INT S SOFTW TEST A, P78, DOI DOI 10.1145/2338965.2336763
   Hoang T, 2022, ICFP 22
   Hughes J., 2021, TALK CRAFT C
   Hughes J, 2011, ERLANG 11: PROCEEDINGS OF THE 2011 ACM SIGPLAN ERLANG WORKSHOP, P72
   Ivanov D., 2018, COMMUNICATION
   Keys R, 2020, US
   King S., 2012, Self-Published Paper
   Lal C, 2021, Arxiv, DOI arXiv:2103.10074
   Lu N, 2021, SOFTWARE PRACT EXPER, V51, P2065, DOI 10.1002/spe.2745
   MERKLE RC, 1988, LECT NOTES COMPUT SC, V293, P369
   Midtgaard J, 2018, LECT NOTES COMPUT SC, V10788, P59, DOI 10.1007/978-3-319-89719-6_4
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Mista A, 2018, ACM SIGPLAN NOTICES, V53, P1, DOI [10.1145/3242744.3242747, 10.1145/3299711.3242747]
   Satoshi N., 2009, Bitcoin: a peer-to-peerelectronic cash system
   Service EN, 2020, US
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   Syverson P., 1994, Proceedings. The Computer Security Foundations Workshop VII, CSFW 7 (Cat. No.94TH0686-6), P187, DOI 10.1109/CSFW.1994.315935
   Takanen A, 2018, ADV TOP SCI TECH CHI, P1
   Team TA, 2019, AETERNITY
   Tolmach P, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3464421
   Tromp J, 2015, LECT NOTES COMPUT SC, V8976, P49, DOI 10.1007/978-3-662-48051-9_4
   Walker M.A., 2017, Platibart: a platform for transactive iot blockchain applications with repeatable testing, P17, DOI DOI 10.1145/3152141.3152392
   Wiger U., 2018, BUILDING BLOCKCHAIN
   Winkler D., 2022, WHAT DO WE KNOW READ, P1167
   Zalewski M., 2017, American fuzzy lop
NR 51
TC 0
Z9 0
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2023
VL 53
IS 5
BP 1144
EP 1173
DI 10.1002/spe.3183
EA JAN 2023
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C0ZX8
UT WOS:000916800600001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Guo, SK
   Liu, ZY
   Song, ZX
   Li, H
   Chen, R
AF Guo, Shikai
   Liu, Zhongyan
   Song, Zixuan
   Li, Hui
   Chen, Rong
TI Code samples summarization for knowledge exchange in developer community
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code summary; multi-head attention; position encoding; transformer
AB A question title's function is to generate readable titles and describe a problem encountered by the code. Previous studies often used an end-to-end sequence-to-sequence system to generate question title's from source code. However, long-term dependencies are often difficult to capture, and this may result in an incomplete source code representation. To address this issue, we propose a Transformer for Generating Code Title (hereinafter referred to as TGCT) model. Specifically, the TGCT model uses the position coding mechanism to model paired relationships between source terms by applying relative position representations. Multiple self-attention mechanism components are also used to capture long-term dependencies of the code. Comprehensive experiments on datasets from five coding languages, namely Python, Java, JavaScript, C#, and SQL, are conducted, and the results show that TGCT outperforms state-of-the-art models based on the measurements of BLEU and ROUGE in general. In addition, a cross-sectional comparison experiment was conducted to verify the effects of different model parameters, different data set sizes, position coding mechanism, and self-attention mechanism on model results.
C1 [Guo, Shikai; Liu, Zhongyan; Song, Zixuan; Li, Hui; Chen, Rong] Dalian Maritime Univ, Coll Informat Sci & Technol, Dalian 116026, Peoples R China.
C3 Dalian Maritime University
RP Chen, R (corresponding author), Dalian Maritime Univ, Coll Informat Sci & Technol, Dalian 116026, Peoples R China.
EM rchen@dlmu.edu.cn
RI Wang, YUJIE/JXY-8442-2024; Cheng, Yuan/JKJ-0794-2023
FU National Natural Science Foundation of China [61902050]; Fundamental
   Research Funds for the Central Universities [3132019355]
FX This research was supported by the National Natural Science Foundation
   of China (NO. 61902050), The Fundamental Research Funds for the Central
   Universities (No. 3132019355).
CR Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 1994, Proceedings of ACM SIGIR 94
   [Anonymous], 2007, P 45 ANN M ASS COMPU
   Arora P, 2015, PROCEEDINGS OF THE 2015 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2015), P1232, DOI 10.1145/2808797.2809318
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Correa D., 2013, P 1 ACM C ONLINE SOC, P201, DOI DOI 10.1145/2512938.2512954
   Correa D, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P631, DOI 10.1145/2566486.2568036
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   Gao ZP, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3401026
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Harer J., 2019, ARXIV
   Heafield K., 2011, P 6 WORKSH STAT MACH, P187
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li B., 2012, Proceedings of the 21st International Conference Companion on World Wide Web, P775, DOI DOI 10.1145/2187980.2188200
   Li YZ, 2019, PR MACH LEARN RES, V97
   Liang YD, 2018, AAAI CONF ARTIF INTE, P5229
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Liu J., 2013, Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, P85, DOI DOI 10.1109/ISCID.2013.28
   Luong T., 2015, P 2015 C EMP METH NA, DOI [DOI 10.18653/V1/D15-1166, 10.18653/v1/D15-1166]
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Mikolov Tomas, 2013, EFFICIENT ESTIMATION
   Nie LQ, 2017, IEEE T KNOWL DATA EN, V29, P1186, DOI 10.1109/TKDE.2017.2669982
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Seljan S, 2012, LREC 2012 - EIGHTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P2143
   Shaw P., 2018, P 2018 NAACL, V2, P464, DOI [DOI 10.18653/V1/N18-2074, 10.18653/v1/N18-2074]
   Shido Y, 2019, IEEE IJCNN
   Shuai J, 2020, INT C PROGRAM COMPRE, P196, DOI 10.1145/3387904.3389269
   Sutskever I, 2014, ADV NEUR IN, V27
   Trienes Jan, 2019, Advances in Information Retrieval. 41st European Conference on IR Research, ECIR 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11437), P276, DOI 10.1007/978-3-030-15712-8_18
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wei BL, 2019, ADV NEUR IN, V32
   Xianhao Jin, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P225, DOI 10.1109/MSR.2019.00045
   Yang J, 2014, P 25 ACM C HYP SOC M, P179
   Yao S., 2020, P 58 ANN M ASS COMPU, P7145, DOI DOI 10.18653/V1/2020.ACL-MAIN.640
   Yao Y., 2013, ARXIV
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
NR 43
TC 2
Z9 2
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 347
EP 365
DI 10.1002/spe.3151
EA SEP 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000855750300001
DA 2024-07-18
ER

PT J
AU Ahmadi, J
   Haghighat, AT
   Rahmani, AM
   Ravanmehr, R
AF Ahmadi, Javad
   Haghighat, Abolfazl Toroghi
   Rahmani, Amir Masoud
   Ravanmehr, Reza
TI Confidence interval-based overload avoidance algorithm for virtual
   machine placement
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Green cloud; cloud computing; virtualization; dynamic consolidation;
   virtual machine placement; Overload avoidance
ID ENERGY-EFFICIENT; DYNAMIC CONSOLIDATION; VM CONSOLIDATION; DATA CENTERS;
   CLOUD; QUALITY; ENVIRONMENTS; CONSUMPTION; PREDICTION; SERVICE
AB Virtualization plays an essential role in decreasing energy consumption and optimizing resource utilization by enabling the creation of virtual machines (VM) and their consolidation through live migration. Excessive migrations and a lack of required VMs are two critical factors in QoS degradation. The current consolidation approaches impose an intensive time complexity and cannot be used in large data centers with hundreds of hosts. This article proposes a framework for dynamic consolidation divided into a QoS-aware algorithm for overload avoidance and a power-aware algorithm for VM placement. To compute a safe zone criterion for any VM, relations were suggested by applying an interval estimate with a confidence level. By employing this criterion, the offered algorithm could guarantee the quality of service (QoS), particularly for specific VMs, while avoiding overhead. The VM placement algorithm is developed based on the maximum utilization of active hosts. It provides the capability to control the number of active hosts for the data center manager. The simulation results with real workloads revealed that the proposed framework could decline the amount of service level agreement violations by 78% and the number of migrations by 74%, and energy consumption by up to 13% in comparison with the best results of the benchmark algorithms. Hence, the application of this framework upgrades the QoS of data centers and declines their energy costs.
C1 [Ahmadi, Javad; Ravanmehr, Reza] Islamic Azad Univ, Dept Comp Engn, Cent Tehran Branch, Tehran, Iran.
   [Haghighat, Abolfazl Toroghi] Islamic Azad Univ, Fac Comp & Informat Technol Engn, Qazvin Branch, Qazvin, Iran.
   [Rahmani, Amir Masoud] Natl Yunlin Univ Sci & Technol, Future Technol Res Ctr, Touliu, Taiwan.
C3 Islamic Azad University; Islamic Azad University; National Yunlin
   University Science & Technology
RP Haghighat, AT (corresponding author), Islamic Azad Univ, Fac Comp & Informat Technol Engn, Qazvin Branch, Qazvin, Iran.
EM at_haghighat@yahoo.com
RI ahmadi, javad/IWU-7098-2023; Rahmani, Amir Masoud/K-2702-2013;
   Ravanmehr, Reza/S-4106-2019
OI Rahmani, Amir Masoud/0000-0001-8641-6119; Ravanmehr,
   Reza/0000-0001-9605-5839
CR Abadi RMB, 2018, SOFTWARE PRACT EXPER, V48, P1688, DOI 10.1002/spe.2582
   Addya SK, 2019, IEEE SYST J, V13, P2877, DOI 10.1109/JSYST.2018.2872580
   Ahmadi J, 2022, SOFTWARE PRACT EXPER, V52, P1216, DOI 10.1002/spe.3062
   Azizi S, 2020, CLUSTER COMPUT, V23, P3421, DOI 10.1007/s10586-020-03096-0
   Beloglazov A, 2013, IEEE T PARALL DISTR, V24, P1366, DOI 10.1109/TPDS.2012.240
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Beloglazov A, 2011, ADV COMPUT, V82, P47, DOI 10.1016/B978-0-12-385512-1.00003-7
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chaurasia N, 2021, J SUPERCOMPUT, V77, P11682, DOI 10.1007/s11227-021-03760-1
   Dabbagh M, 2018, IEEE T CLOUD COMPUT, V6, P955, DOI 10.1109/TCC.2016.2564403
   Dayarathna M, 2016, IEEE COMMUN SURV TUT, V18, P732, DOI 10.1109/COMST.2015.2481183
   Ding WC, 2020, FUTURE GENER COMP SY, V111, P254, DOI 10.1016/j.future.2020.05.004
   Erl T., 2013, Cloud Computing: Concepts, Technology, & Architecture
   Fan XB, 2007, CONF PROC INT SYMP C, P13, DOI 10.1145/1273440.1250665
   Farahnakian F, 2015, IEEE T SERV COMPUT, V8, P187, DOI 10.1109/TSC.2014.2382555
   Feng H, 2021, J SYST ARCHITECT, V116, DOI 10.1016/j.sysarc.2021.102048
   Ferdaus MH, 2014, LECT NOTES COMPUT SC, V8632, P306, DOI 10.1007/978-3-319-09873-9_26
   Gholipour N, 2020, SIMUL MODEL PRACT TH, V104, DOI 10.1016/j.simpat.2020.102127
   Gruber M.H.J., 2014, Regression Estimators: A Comparative Study
   Hieu NT, 2020, IEEE T SERV COMPUT, V13, P186, DOI 10.1109/TSC.2017.2648791
   Ilager S, 2021, IEEE T PARALL DISTR, V32, P1044, DOI 10.1109/TPDS.2020.3040800
   Kashyap R, 2014, 2014 INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED AND GRID COMPUTING (PDGC), P214, DOI 10.1109/PDGC.2014.7030744
   Khan AA, 2020, J NETW COMPUT APPL, V150, DOI 10.1016/j.jnca.2019.102497
   KyoungSoo Park, 2006, Operating Systems Review, V40, P65, DOI 10.1145/1113361.1113374
   Li X, 2018, IEEE T PARALL DISTR, V29, P1317, DOI 10.1109/TPDS.2017.2688445
   Li ZH, 2020, FUTURE GENER COMP SY, V102, P789, DOI 10.1016/j.future.2019.08.004
   Mandal R, 2020, J SUPERCOMPUT, V76, P7374, DOI 10.1007/s11227-020-03165-6
   Mastroianni C, 2013, IEEE T CLOUD COMPUT, V1, P215, DOI 10.1109/TCC.2013.17
   Mc Donnell N, 2020, FUTURE GENER COMP SY, V108, P288, DOI 10.1016/j.future.2020.02.036
   Thi MT, 2020, FUTURE GENER COMP SY, V110, P1116, DOI 10.1016/j.future.2019.11.018
   Moghaddam SM, 2021, FUTURE GENER COMP SY, V123, P142, DOI 10.1016/j.future.2021.04.010
   Moghaddam SM, 2020, FUTURE GENER COMP SY, V106, P221, DOI 10.1016/j.future.2020.01.008
   Naeen HM, 2020, SOFTWARE PRACT EXPER, V50, P161, DOI 10.1002/spe.2764
   Naeen HM, 2020, J SUPERCOMPUT, V76, P1903, DOI 10.1007/s11227-018-2431-5
   Najafizadegan N, 2021, SOFTWARE PRACT EXPER, V51, P1352, DOI 10.1002/spe.2960
   Rahmani S, 2020, J NETW COMPUT APPL, V170, DOI 10.1016/j.jnca.2020.102789
   Rahmani S, 2020, J SUPERCOMPUT, V76, P362, DOI 10.1007/s11227-019-03037-8
   Shaw R, 2019, LECT NOTES COMPUT SC, V11895, P251, DOI 10.1007/978-3-030-33702-5_20
   Singh AK, 2021, IEEE T PARALL DISTR, V32, P2893, DOI 10.1109/TPDS.2021.3079341
   Tian WH, 2018, J NETW COMPUT APPL, V113, P64, DOI 10.1016/j.jnca.2018.03.033
   Vahed ND, 2019, INT J COMMUN SYST, V32, DOI 10.1002/dac.4068
   Wajid U, 2016, IEEE T CLOUD COMPUT, V4, P138, DOI 10.1109/TCC.2015.2453988
   Wang SG, 2013, INT C PAR DISTRIB SY, P102, DOI 10.1109/ICPADS.2013.26
   Xu HZ, 2019, J PARALLEL DISTR COM, V127, P44, DOI 10.1016/j.jpdc.2019.01.006
   Xu MX, 2021, IEEE T SUST COMPUT, V6, P544, DOI 10.1109/TSUSC.2020.3014943
   Yavari M, 2019, J CLOUD COMPUT-ADV S, V8, DOI 10.1186/s13677-019-0136-9
   Zhang W, 2021, TSINGHUA SCI TECHNOL, V26, P95, DOI 10.26599/TST.2019.9010044
   Zhao J, 2021, IEEE INT CONF CLOUD, P240, DOI 10.1109/CLOUD53861.2021.00037
   Zhou QH, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P489, DOI 10.1109/CCGrid49817.2020.00-44
   Zolfaghari R, 2022, SOFTWARE PRACT EXPER, V52, P194, DOI 10.1002/spe.3010
   Zolfaghari R, 2021, SUSTAIN COMPUT-INFOR, V30, DOI 10.1016/j.suscom.2021.100524
NR 53
TC 1
Z9 1
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2288
EP 2311
DI 10.1002/spe.3127
EA JUL 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000832824100001
DA 2024-07-18
ER

PT J
AU Schuts, MTW
   Aarssen, RTA
   Tielemans, PM
   Vinju, JJ
AF Schuts, Mathijs T. W.
   Aarssen, Rodin T. A.
   Tielemans, Paul M.
   Vinju, Jurgen J.
TI Large-scale semi-automated migration of legacy C/C plus plus test code
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE parsers; pattern matching; program analysis; refactoring; source code
   generation
AB This is an industrial experience report on a large semi-automated migration of legacy test code in C and C++. The particular migration was enabled by automating most of the maintenance steps. Without automation this particular large-scale migration would not have been conducted, due to the risks involved in manual maintenance (risk of introducing errors, risk of unexpected rework, and loss of productivity). We describe and evaluate the method of automation we used on this real-world case. The benefits were that by automating analysis, we could make sure that we understand all the relevant details for the envisioned maintenance, without having to manually read and check our theories. Furthermore, by automating transformations we could reiterate and improve over complex and large scale source code updates, until they were "just right." The drawbacks were that, first, we have had to learn new metaprogramming skills. Second, our automation scripts are not readily reusable for other contexts; they were necessarily developed for this ad-hoc maintenance task. Our analysis shows that automated software maintenance as compared to the (hypothetical) manual alternative method seems to be better both in terms of avoiding mistakes and avoiding rework because of such mistakes. It seems that necessary and beneficial source code maintenance need not to be avoided, if software engineers are enabled to create bespoke (and ad-hoc) analysis and transformation tools to support it.
C1 [Schuts, Mathijs T. W.; Tielemans, Paul M.] Philips, Best, Netherlands.
   [Schuts, Mathijs T. W.] Radboud Univ Nijmegen, Software Sci, Nijmegen, Netherlands.
   [Aarssen, Rodin T. A.; Vinju, Jurgen J.] Ctr Wiskunde & Informat, Software Anal & Transformat, Amsterdam, Netherlands.
   [Aarssen, Rodin T. A.; Vinju, Jurgen J.] Eindhoven Univ Technol, Software Engn & Technol, Eindhoven, Netherlands.
C3 Philips; Radboud University Nijmegen; Eindhoven University of Technology
RP Schuts, MTW (corresponding author), Philips, Best, Netherlands.
EM Mathijs.Schuts@philips.com
OI Aarssen, Rodin/0000-0002-9077-5517
FU Nederlandse Organisatie voor Wetenschappelijk Onderzoek [BISO.10.04];
   MERITS
FX Nederlandse Organisatie voor Wetenschappelijk Onderzoek, Grant/Award
   Numbers: BISO.10.04, MERITS
CR Aarssen RTA, 2020, PROCEEDINGS OF THE 2020 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION (PEPM '20), P27, DOI 10.1145/3372884.3373162
   Aarssen RTA., 2019, ART SCI ENG PROGRAM, V3, DOI 10.22152/programming-journal.org/2019/3/15
   Aigner G., 1996, ECOOP '96 - Object-Oriented Programming. 10th European Conference. Proceedings, P142, DOI 10.1007/BFb0053060
   Bagge OS, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P65, DOI 10.1109/SCAM.2003.1238032
   Baxter ID, 2004, PROC INT CONF SOFTW, P625, DOI 10.1109/ICSE.2004.1317484
   Borghi A., 2006, CROSSROADS, V12, P3, DOI [10.1145/1144366.1144369, DOI 10.1145/1144366.1144369]
   Breivold HP, 2012, INFORM SOFTWARE TECH, V54, P16, DOI 10.1016/j.infsof.2011.06.002
   Brinksma E., 2008, P 2008 C DES AUT TES, P1226
   Collard M.L., 2010, IEEE International Conference on Software Maintenance, IEEE Computer Society, P1
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   Cordy JR, 2002, INFORM SOFTWARE TECH, V44, P827, DOI 10.1016/S0950-5849(02)00104-0
   Dang, 2008, P 1 INT WORKSH INFR
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   FOWLER P, 1993, CMUSEI93TR031
   Fuhrer R. M., 2007, P 1 WORKSH REF TOOLS, P30
   HEERING J, 1985, ACM T PROGR LANG SYS, V7, P183, DOI 10.1145/3318.3321
   Klint P, 2011, LECT NOTES COMPUT SC, V6491, P222, DOI 10.1007/978-3-642-18023-1_6
   Klint P, 2009, IEEE INT WORK C SO, P168, DOI 10.1109/SCAM.2009.28
   Li H., 2003, Proceedings of the 2003 ACM SIGPLAN workshop on Haskell, ACM, P27
   Mooij AJ, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P617, DOI [10.1109/saner48275.2020.9054823, 10.1109/SANER48275.2020.9054823]
   Steimann F, 2018, ACM T PROGR LANG SYS, V40, DOI 10.1145/3156016
   Tip F, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1961204.1961205
   van den Brand M, 2000, SCI COMPUT PROGRAM, V36, P209, DOI 10.1016/S0167-6423(99)00037-4
   van den Brand M. G. J., 2001, Electronic Notes in Theoretical Computer Science, V44, DOI 10.1016/S1571-0661(04)80917-4
   Van den Brand MGJ., 2000, P 1 INT WORKSH RUL B
   Veerman N, 2004, J SOFTW MAINT EVOL-R, V16, P219, DOI 10.1002/smr.295
   Veerman N, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P353
   Vinju JJ., 2005, P 2 INT WORKSH RAP I, P97
   Visser Eelco, 2004, Domain-Specific Program Generation: International Seminar, Dagstuhl Castle, Germany, March 23-28, 2003, P216, DOI DOI 10.1007/978-3-540-25935-0_13
   Waddington DG, 2005, ELECTRON NOTES THEOR, V141, P35, DOI 10.1016/j.entcs.2005.04.037
   Wright HK, 2013, PROC IEEE INT CONF S, P548, DOI 10.1109/ICSM.2013.93
NR 31
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2022
VL 52
IS 7
BP 1543
EP 1580
DI 10.1002/spe.3082
EA MAR 2022
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1X8ZE
UT WOS:000771771700001
OA Green Published
DA 2024-07-18
ER

PT J
AU Bian, HD
   Huang, JQ
   Tang, JH
   Dong, RT
   Wu, L
   Wang, XY
AF Bian, Haodong
   Huang, Jianqiang
   Tang, Jiahao
   Dong, Runting
   Wu, Li
   Wang, Xiaoying
TI PAS: A new powerful and simple quantum computing simulator
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CPU; PAS; quantum computing simulator; quantum Fourier transform; QuEST;
   random quantum circuits
ID PERFORMANCE; SPMV
AB In recent years, many researchers have been using CPU for quantum computing simulation. However, in reality, the simulation efficiency of the large-scale simulator is low on a single node. Therefore, striving to improve the simulator efficiency on a single node has become a serious challenge that many researchers need to solve. After many experiments, we found that much computational redundancy and frequent memory access are important factors that hinder the efficient operation of the CPU. This paper proposes a new powerful and simple quantum computing simulator: PAS (power and simple). Compared with existing simulators, PAS introduces four novel optimization methods: efficient hybrid vectorization, fast bitwise operation, memory access filtering, and quantum tracking. In the experiment, we tested the QFT (quantum Fourier transform) and RQC (random quantum circuits) of 21 to 30 qubits and selected the state-of-the-art simulator QuEST (quantum exact simulation toolkit) as the benchmark. After experiments, we have concluded that PAS compared with QuEST can achieve a mean speedup of 8.69x (QFT), 2.62x (RQC) (up to 10.76x, 4.87x) on the Intel Xeon E5-2670 v3 CPU.
C1 [Bian, Haodong; Huang, Jianqiang; Tang, Jiahao; Dong, Runting; Wu, Li; Wang, Xiaoying] Qinghai Univ, Dept Comp Technol & Applicat HDACP, Xining, Peoples R China.
   [Bian, Haodong] TheWake Syst Ltd, Beijing, Peoples R China.
   [Huang, Jianqiang] Qinghai Univ, Informat Technol Ctr, Xining, Peoples R China.
   [Huang, Jianqiang] Tsinghua Univ, Dept Comp Sci & Technol PACMAN, Beijing, Peoples R China.
C3 Qinghai University; Qinghai University; Tsinghua University
RP Huang, JQ (corresponding author), Qinghai Univ, Dept Comp Technol & Applicat HDACP, Xining, Peoples R China.
EM hjqxaly@163.com
RI Bian, Haodong/AAD-4078-2021; Wang, Xiaoying/HQZ-5659-2023
OI Bian, Haodong/0000-0003-0907-288X; Wang, Xiaoying/0000-0003-1029-0358
FU National Natural Science Foundation of China [62062059, 61762074,
   61962051]; National Natural Science Foundation of Qinghai Province
   [2019-ZJ-7034, 2020-ZJ-943Q]; Youth Foundation Program of Qinghai
   University [2021-QGY-13]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   No.62062059, No.61762074, No.61962051; National Natural Science
   Foundation of Qinghai Province, Grant/Award Numbers: No.2019-ZJ-7034,
   No.2020-ZJ-943Q; Youth Foundation Program of Qinghai University,
   Grant/Award Number: No.2021-QGY-13
CR Ablayev F, 2020, BIG DATA MIN ANAL, V3, P41, DOI 10.26599/BDMA.2019.9020016
   Ablayev F, 2020, BIG DATA MIN ANAL, V3, P56, DOI 10.26599/BDMA.2019.9020018
   Avila Anderson, 2014, 29 ANN ACM S APPL, P860, DOI DOI 10.1145/2554850.2554892
   Bartolucci S., 2021, ARXIV PREPRINT ARXIV
   Bian HD, 2021, FUTURE GENER COMP SY, V116, P371, DOI 10.1016/j.future.2020.10.036
   Bian HD, 2020, LECT NOTES COMPUT SC, V12453, P111, DOI 10.1007/978-3-030-60239-0_8
   Bo Wu, 2011, Proceedings 2011 International Conference on Parallel Architectures and Compilation Techniques (PACT), P243, DOI 10.1109/PACT.2011.56
   Boncz P, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P54
   Chen TS, 2014, ACM SIGPLAN NOTICES, V49, P269, DOI 10.1145/2541940.2541967
   Chen TT, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9448-7
   Cleve R, 2000, ANN IEEE SYMP FOUND, P526, DOI 10.1109/SFCS.2000.892140
   Ding XN, 2011, ACM SIGPLAN NOTICES, V46, P103, DOI 10.1145/2038037.1941568
   Fujishima M, 2003, 2003 IEEE INTERNATIONAL CONFERENCE ON FIELD-PROGRAMMABLE TECHNOLOGY (FPT), PROCEEDINGS, P21, DOI 10.1109/FPT.2003.1275727
   Google Al Quantum Collaborators, 2020, SCIENCE, V369, P1084, DOI 10.1126/science.abb9811
   Guo C, 2019, PHYS REV LETT, V123, DOI 10.1103/PhysRevLett.123.190501
   Häner T, 2017, SC'17: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/3126908.3126947
   Häner T, 2016, SC '16: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, P866, DOI 10.1109/SC.2016.73
   Hu YW, 2018, INT PARALL DISTRIB P, P244, DOI 10.1109/IPDPS.2018.00034
   Huang JQ, 2021, TSINGHUA SCI TECHNOL, V26, P335, DOI 10.26599/TST.2019.9010057
   Huang JQ, 2020, TSINGHUA SCI TECHNOL, V25, P56, DOI 10.26599/TST.2018.9010112
   Jiang Y, 2021, TSINGHUA SCI TECHNOL, V26, P266, DOI 10.26599/TST.2019.9010034
   Jin X, 2016, SIGIR'16: PROCEEDINGS OF THE 39TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P629, DOI 10.1145/2911451.2911520
   Jones T, 2019, SCI REP-UK, V9, DOI 10.1038/s41598-019-47174-9
   Khalid AU, 2004, PR IEEE COMP DESIGN, P310, DOI 10.1109/ICCD.2004.1347938
   Khammassi N, 2017, DES AUT TEST EUROPE, P464, DOI 10.23919/DATE.2017.7927034
   Li A, 2020, PROCEEDINGS OF SC20: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SC20), DOI 10.1109/SC41405.2020.00017
   Li JJ, 2021, TSINGHUA SCI TECHNOL, V26, P296, DOI 10.26599/TST.2019.9010074
   Li RL, 2020, IEEE T PARALL DISTR, V31, P805, DOI 10.1109/TPDS.2019.2947511
   Liang Y, 2021, TSINGHUA SCI TECHNOL, V26, P251, DOI 10.26599/TST.2019.9010032
   Liu WF, 2015, PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON SUPERCOMPUTING (ICS'15), P339, DOI 10.1145/2751205.2751209
   Lu RJ, 2021, TSINGHUA SCI TECHNOL, V26, P48, DOI 10.26599/TST.2019.9010047
   Maron A, 2013, IEEE ACM INT SYMP, P474, DOI 10.1109/CCGrid.2013.50
   Ren ZX, 2021, BIG DATA MIN ANAL, V4, P208, DOI 10.26599/BDMA.2021.9020004
   Shi TH, 2020, PROCEEDINGS OF SC20: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SC20), DOI 10.1109/SC41405.2020.00104
   Smelyanskiy Mikhail, 2016, ARXIV160107195
   Steiger DS, 2018, QUANTUM-AUSTRIA, V2, DOI 10.22331/q-2018-01-31-49
   Sun G., 2020, P 34 ACM INT C SUP I
   Wecker D., 2014, ARXIV PREPRINT ARXIV
   Wu XC, 2019, PROCEEDINGS OF SC19: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/3295500.3356155
   Xie BW, 2018, INT SYM CODE GENER, P149, DOI 10.1145/3168818
   Zhang C, 2021, PROCEEDINGS OF THE 2021 ACM INTERNATIONAL CONFERENCE ON SUPERCOMPUTING, ICS 2021, P443, DOI 10.1145/3447818.3460357
   Zhong HS, 2020, SCIENCE, V370, P1460, DOI 10.1126/science.abe8770
   Zhu XW, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P301
   Zhu Xiaowei, 2015, P USENIX ANN TECH C, P375
NR 44
TC 4
Z9 4
U1 3
U2 48
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2023
VL 53
IS 1
SI SI
BP 142
EP 159
DI 10.1002/spe.3049
EA OCT 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7B2CV
UT WOS:000712292600001
DA 2024-07-18
ER

PT J
AU Ünlü, H
   Yesilada, Y
AF Unlu, Huseyin
   Yesilada, Yeliz
TI Transcoding web pages via stylesheets and scripts for saving energy on
   the client
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE browsing; energy-saving; software implementation; software tools;
   transcoding; web
AB Mobile devices and accessing the web have become essential in our daily lives. However, their limitations in terms of both hardware such as the battery, and software capabilities can affect the user experience such as battery drain. There are some best practices for the web page design that are shown to affect the downloading time of web pages. In this study, we report our experience in applying these practices to see their effect on energy saving. We propose two techniques: (1) concatenating external script and stylesheet files and (2) minifying external script and stylesheets that can be used to transcode web pages to improve energy consumption on the client-side and therefore improve the battery life. We present our experimental architecture, implementation, and a systematic evaluation of these two techniques. The evaluation results show that the proposed techniques can achieve approximately 12% processor energy-saving and 4% power saving in two different client types, 13% improvement in a typical laptop battery life, and 4% improvement in a typical mobile phone battery life.
C1 [Unlu, Huseyin; Yesilada, Yeliz] Middle East Tech Univ, Comp Engn Program, Northern Cyprus Campus, Mersin, Turkey.
   [Unlu, Huseyin] Izmir Inst Technol, Comp Engn Dept, Izmir, Turkey.
C3 Middle East Technical University; Izmir Institute of Technology
RP Ünlü, H (corresponding author), Izmir Inst Technol, Comp Engn Dept, Izmir, Turkey.
EM huseyinunlu@iyte.edu.tr
RI Unlu, Huseyin/D-9261-2016
OI Unlu, Huseyin/0000-0002-3079-4417; Unlu, Huseyin/0000-0001-9906-6066
CR Ahmadi Hamed., 2008, P WORKING C ADV VISU, P23, DOI 10.1145/1385569.1385576
   Aly H, 2014, IEEE INT CONF SENS, P546, DOI 10.1109/SAHCN.2014.6990394
   [Anonymous], 2018, JAWR
   [Anonymous], CSSO
   [Anonymous], MAKE WEB FASTER
   [Anonymous], 2016, Mobile and tablet internet usage surpasses desktop for first time
   [Anonymous], MINQUEUE
   [Anonymous], Best Practices for Speeding Up YourWeb Site
   [Anonymous], MOBIFY JAZZCAT
   [Anonymous], CONCATENATION JS CSS
   [Anonymous], 2020, UNCSS
   [Anonymous], MERGE MINIFY REFRESH
   [Anonymous], UNIQJS
   [Anonymous], 2015, AJAXMIN
   [Anonymous], 2012, COMBINE MINIFY
   [Anonymous], 2019, MINCSS
   [Anonymous], 2019, USES DOCUMENTWRITE
   [Anonymous], ASSET PIPELINE
   [Anonymous], LIGHTHOUSE REMOVE UN
   [Anonymous], WHATS NEW DEVTOOLS C
   [Anonymous], GRUNT CONTRIB CONCAT
   Asakawa Chieko, 2019, Web Accessibility, P569
   Azmoodeh A, 2018, J AMB INTEL HUM COMP, V9, P1141, DOI 10.1007/s12652-017-0558-5
   Balasubramanian N, 2009, IMC'09: PROCEEDINGS OF THE 2009 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P280
   Banerjee N, 2007, LECT NOTES COMPUT SC, V4717, P217
   Barr KC, 2006, ACM T COMPUT SYST, V24, P250, DOI 10.1145/1151690.1151692
   Ben Abdesslem F, 2009, MOBIHELD 09, P61
   Bunse C, 2018, PROGR IS, P239, DOI 10.1007/978-3-319-65687-8_21
   Cameron C., 2016, CHROME FASTER MORE B
   Cao Y, 2015, PROCEEDINGS OF THE 2015 IEEE INTERNATIONAL CONFERENCE ON NETWORKING, ARCHITECTURE AND STORAGE (NAS), P2, DOI 10.1109/NAS.2015.7255196
   Chen J., 2001, INT C WORLD WIDE WEB, P587
   CHI C, 1999, P USENIX S INTERNET
   Choi YH, 2020, ENG OPTIMIZ, V52, P1974, DOI 10.1080/0305215X.2019.1688798
   Crockford D., 2019, JSMIN JAVASCRIPT MIN
   Cui Y., 2008, 17 INT C WORLD WIDE, P905, DOI DOI 10.1145/1367497.1367619
   Dagon D, 2004, IEEE PERVAS COMPUT, V3, P11, DOI 10.1109/MPRV.2004.21
   de Haan E, 2018, J MARKETING, V82, P1, DOI 10.1509/jm.17.0113
   Bui DH, 2015, MOBICOM '15: PROCEEDINGS OF THE 21ST ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P14, DOI 10.1145/2789168.2790103
   Etoh Minoru, 2008, 2008 International Symposium on Applications and the Internet, P365, DOI 10.1109/SAINT.2008.84
   Everts T., 2017, AVERAGE WEB PAGE IS
   Everts T, 2013, COMMUN ACM, V56, P52, DOI 10.1145/2492007.2492024
   Fainberg L., 2011, US PatentApp, Patent No. [12/848,559, 12848559]
   FIRTMAN M., 2010, Programming the Mobile Web
   Flinn J, 1999, OPERATING SYSTEMS REVIEW, VOL 33, NO 5, DECEMBER 1999, P48, DOI 10.1145/319344.319155
   FRAIN B., 2012, Responsive Web Design with HTML5 and CSS3
   Gochman S., 2006, INTEL TECHNOLOGY J, V10, P89
   Hung-Ching Chang, 2011, 2011 International Conference on Energy Aware Computing (ICEAC 2011), P1, DOI 10.1109/ICEAC.2011.6403625
   Huy N. P., 2012, P 10 INT C ADV MOB C, P25, DOI DOI 10.1145/2428955.2428968
   Iaccarino Gennaro., 2006, P 2006 INT CROSS DIS, P23
   Information and Communication Technology (ICT), 2013, US HOUS IND
   Jobe William, 2013, International Journal of Interactive Mobile Technologies, V7, P27, DOI 10.3991/ijim.v7i4.3226
   Kamierczak B., 2016, OPERA BLOGS
   Köksal E, 2017, LECT NOTES COMPUT SC, V10360, P225, DOI 10.1007/978-3-319-60131-1_13
   Kotelnytskyi Y., 2016, JSCSS SCRIPT OPTIMIZ
   Lai PPY., 2013, P 10 INT CROSS DISC
   Lam Heidi., 2005, P SIGCHI C HUMAN FAC, P681
   Looper J., 2015, WHAT IS WEBVIEW TELE
   Matsudaira K, 2013, COMMUN ACM, V56, P56, DOI 10.1145/2428556.2428572
   McArthur S., 2014, CSS REMOVE COMBINE
   Miettinen AP., 2010, MOBILE LIGHTWEIGHT W, P124
   Muhtaroglu A, 2008, J POWER SOURCES, V177, P239, DOI 10.1016/j.jpowsour.2007.11.016
   Noureddine A, 2013, SOFTWARE PRACT EXPER, V43, P1071, DOI 10.1002/spe.2139
   O'Dea S., 2020, FORECAST NUMBER MOBI
   Oliveira W, 2017, IEEE WORK CONF MIN S, P42, DOI 10.1109/MSR.2017.66
   Pallant J., 2015, SPSS survival manual: A step by step guide to data analysis using IBM SPSS
   Paul Kolin, 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P2421, DOI 10.1109/CIT.2010.416
   Pentikousis K, 2010, IEEE COMMUN MAG, V48, P95, DOI 10.1109/MCOM.2010.5394036
   Perez-Castillo R, 2014, IEEE SOFTWARE, V31, P48, DOI 10.1109/MS.2014.23
   Perrucci Gian Paolo, 2009, 2009 European Wireless Conference (EW 2009), P255, DOI 10.1109/EW.2009.5357972
   Pew: U.S. Adult Gadget Ownership Statistics, RIT CROSS MED INN CT
   Rizk H, 2019, 27TH ACM SIGSPATIAL INTERNATIONAL CONFERENCE ON ADVANCES IN GEOGRAPHIC INFORMATION SYSTEMS (ACM SIGSPATIAL GIS 2019), P109, DOI 10.1145/3347146.3359065
   Rodriguez A, 2017, SOFTWARE PRACT EXPER, V47, P763, DOI 10.1002/spe.2419
   Saccomani P., NATIVE WEB HYBRID AP
   Sahin C, 2016, J SOFTW-EVOL PROC, V28, P565, DOI 10.1002/smr.1762
   Sailhan F, 2002, 22ND INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOP, PROCEEDINGS, P820, DOI 10.1109/ICDCSW.2002.1030869
   Sin D, 2012, C HUM SYST INTERACT, P8, DOI 10.1109/HSI.2012.11
   Slack RJ, 2004, CRIT REV ENV SCI TEC, V34, P419, DOI 10.1080/10643380490443272
   Song Ruihua., 2004, WWW 04, P203, DOI DOI 10.1145/988672.988700
   Sorber J, 2005, Proceedings of the Third International Conference on Mobile Systems, Applications, and Services (MobiSys 2005), P261, DOI 10.1145/1067170.1067198
   Souders S., 2009, EVEN FASTER WEB SITE
   Souders S, 2008, COMMUN ACM, V51, P36, DOI 10.1145/1409360.1409374
   Thiagarajan Narendran., 2012, P 21 INT C WORLD WID, P41, DOI DOI 10.1145/2187836.2187843
   Uzair A, 2019, SUSTAIN COMPUT-INFOR, V22, P230, DOI 10.1016/j.suscom.2018.08.005
   Vasilomanolakis Emmanouil, 2013, P 3 ACM WORKSH SEC P, P43
   Walsh J., 2012, GRANULE
   Weber J., GET MORE OUT YOUR BA
   Wu HM, 2019, IEEE T PARALL DISTR, V30, P1464, DOI 10.1109/TPDS.2019.2891695
   X-Team, 2014, DEP MIN
   Yesilada Yeliz, 2013, P 10 INT CROSS DISC
   Yin X., 2004, PROC INT WORLD WIDE, P338, DOI DOI 10.1145/988672.988718
   Zakas NC, 2013, COMMUN ACM, V56, P42, DOI [10.1145/2436256.2436266, 10.1145/2436256.2436269]
   Zhang WW, 2014, IEEE NETWORK, V28, P67, DOI 10.1109/MNET.2014.6963807
   Zhu YH, 2015, IEEE MICRO, V35, P26, DOI 10.1109/MM.2015.8
NR 93
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 984
EP 1003
DI 10.1002/spe.3046
EA OCT 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000709081500001
OA Green Published
DA 2024-07-18
ER

PT J
AU Adhikari, M
   Srirama, SN
   Amgoth, T
AF Adhikari, Mainak
   Srirama, Satish Narayana
   Amgoth, Tarachand
TI A comprehensive survey on nature-inspired algorithms and their
   applications in edge computing: Challenges and future directions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE communication; edge computing; edge controlling; mobility; NIMH
   algorithms; resource placement
ID ONLINE RESOURCE-ALLOCATION; WIRELESS SENSOR NETWORKS; SERVICE
   DEPLOYMENT; IOT APPLICATIONS; FUZZY-LOGIC; OPTIMIZATION; CLOUD;
   FRAMEWORK; ARCHITECTURE; PLACEMENT
AB Driven by the vision of real-time applications and smart communication, recent years have witnessed a paradigm shift from centralized cloud computing toward distributed edge computing. The main features of edge computing are to drag the cloud services toward the network edge with dramatic reductions of latency while increasing the resource utilization of the network and computing devices. Being the natural extension of cloud computing, edge computing inherits a variety of research challenges and brings forth different new issues to solve. These challenges are dealing with solving complex optimization problems including scheduling and processing real-time applications. Nature-inspired meta-heuristic (NIMH) algorithm is an overarching term in the field of an optimization problem that provides robust solutions to the NP-complete problems, from computationally tractable approximate solutions to real-time optimization strategies. Nowadays, different NIMH algorithms have been applied in the field of edge computing for solving various research challenges including resource placement and scheduling, communication, mobility, and edge controlling with higher efficiency. In this survey, we classify the existing NIMH into three categories based on their nature of works and included fuzzy logic and systems in the field of edge networks along with different research challenges. Further, we introduce different challenges and future directions to identify promising research works in edge computing.
C1 [Adhikari, Mainak] Indian Inst Informat Technol Lucknow, Dept Comp Sci, Lucknow, Uttar Pradesh, India.
   [Srirama, Satish Narayana] Univ Hyderabad, Sch Comp & Informat Sci, Hyderabad, Telangana, India.
   [Amgoth, Tarachand] Indian Inst Technol, Indian Sch Mines, Comp Sci & Engn, Dhanbad, Jharkhand, India.
C3 University of Hyderabad; Indian Institute of Technology System (IIT
   System); Indian Institute of Technology (Indian School of Mines) Dhanbad
RP Srirama, SN (corresponding author), Univ Hyderabad, Sch Comp & Informat Sci, Hyderabad, Telangana, India.
EM satish.srirama@uohyd.ac.in
RI Srirama, Satish Narayana/H-2729-2015
OI Srirama, Satish Narayana/0000-0002-7600-7124
FU Ministry of Human Resource Development, India [UoH-IoE F11/9/2019-U3(A)]
FX Ministry of Human Resource Development, India, Grant/Award Number:
   UoH-IoE F11/9/2019-U3(A)
CR Abbas N, 2018, IEEE INTERNET THINGS, V5, P450, DOI 10.1109/JIOT.2017.2750180
   Abbasi M, 2023, IETE J RES, V69, P1842, DOI 10.1080/03772063.2021.1875891
   Adhikari M, 2020, APPL SOFT COMPUT, V93, DOI 10.1016/j.asoc.2020.106411
   Adhikari M, 2020, IEEE INTERNET THINGS, V7, P5773, DOI 10.1109/JIOT.2019.2946426
   Adhikari M, 2020, IEEE INTERNET THINGS, V7, P4317, DOI 10.1109/JIOT.2019.2958400
   Adhikari M, 2019, INTERNET THINGS-NETH, V6, DOI 10.1016/j.iot.2019.100053
   Adhikari M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3325097
   Adhikari M, 2019, APPL SOFT COMPUT, V77, P547, DOI 10.1016/j.asoc.2019.02.004
   Adhikari M, 2019, J NETW COMPUT APPL, V128, P64, DOI 10.1016/j.jnca.2018.12.010
   Agrawal, 2000, LECT NOTES COMPUTER, P849, DOI [10.1007/3-540-45356-383, DOI 10.1007/3-540-45356-3_83, DOI 10.1007/3-540-45356-3]
   Ahn S, 2018, IEEE ACCESS, V6, P899, DOI 10.1109/ACCESS.2017.2776323
   Anagnostopoulos C, 2020, J NETW COMPUT APPL, V164, DOI 10.1016/j.jnca.2020.102696
   [Anonymous], 2006, Intelligent Production Machines and Systems
   Aryal RG, 2018, 2018 THIRD INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P147, DOI 10.1109/FMEC.2018.8364057
   Baccour E, 2020, J NETW COMPUT APPL, V172, DOI 10.1016/j.jnca.2020.102801
   Basic F, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2019), P87, DOI 10.1109/ICFC.2019.00020
   Bendouda D, 2017, INT WIREL COMMUN, P951, DOI 10.1109/IWCMC.2017.7986414
   Bishoyi PK, 2021, IEEE T GREEN COMMUN, V5, P1623, DOI 10.1109/TGCN.2021.3075903
   Bozorgchenani A., 2017, Globecom 2017-2017 ieee global communications conference, P1, DOI DOI 10.1109/GLOCOM.2017.8254703
   Buyya R., 2019, Fog and Edge Computing: Principles and Paradigms
   Buyya R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241737
   Cao SG, 2001, FUZZY SET SYST, V123, P359, DOI 10.1016/S0165-0114(01)00015-X
   Cao XF, 2020, IEEE ACM T NETWORK, V28, P1116, DOI 10.1109/TNET.2020.2979361
   Cao X, 2019, INT J DIGIT EARTH, V12, P625, DOI 10.1080/17538947.2018.1478004
   Chai R, 2019, IEEE SYST J, V13, P4110, DOI 10.1109/JSYST.2019.2921115
   Chao Li, 2018, ACM Computing Surveys, V51, DOI 10.1145/3154815
   Chekired DA, 2018, 2018 IEEE INT C COMM, P1, DOI DOI 10.1109/ICC.2018.8422605
   Chen MH, 2018, IEEE T WIREL COMMUN, V17, P6790, DOI 10.1109/TWC.2018.2864559
   Chiti F, 2018, IEEE INTERNET THINGS, V5, P5089, DOI 10.1109/JIOT.2018.2871251
   Chuangen Gao, 2015, Algorithms and Architectures for Parallel Processing. 15th International Conference, ICA3PP 2015. Proceedings: LNCS 9530, P44, DOI 10.1007/978-3-319-27137-8_4
   Chuangqin Li GaoweiYan., 2011, Journal of Computational Information Systems, V7, P3309
   Cui QM, 2020, IEEE T WIREL COMMUN, V19, P4519, DOI 10.1109/TWC.2020.2984599
   De Rango F, 2018, SOFT COMPUT, V22, P4251, DOI 10.1007/s00500-017-2819-9
   De Turck, 2020, J NETW COMPUT APPL, V174, P1
   DEJONG KA, 1993, FOUNDATIONS OF GENETIC ALGORITHMS 2, P5
   Diao X., 2018, P 10 INT C WIR COMM, P1
   Dorigo M, 2005, THEOR COMPUT SCI, V344, P243, DOI 10.1016/j.tcs.2005.05.020
   Dressler F, 2010, COMPUT NETW, V54, P881, DOI 10.1016/j.comnet.2009.10.024
   Eiben A.E., 2015, NAT COMP SER, P223, DOI 10.1007/978-3-662-44874-8_15
   El Ghmary M., 2019, INT J EL COMP ENG SY, V9, P1
   Fei ZS, 2017, IEEE COMMUN SURV TUT, V19, P550, DOI 10.1109/COMST.2016.2610578
   Feng JY, 2019, IEEE VEH TECHNOL MAG, V14, P28, DOI 10.1109/MVT.2018.2879647
   Feng JY, 2017, IEEE T VEH TECHNOL, V66, P10660, DOI 10.1109/TVT.2017.2714704
   Fister Iztok  Jr., 2013, International Journal of Mathematical Modelling and Numerical Optimisation, V4, P387, DOI 10.1504/IJMMNO.2013.059205
   Gandomi AH, 2013, ENG COMPUT-GERMANY, V29, P17, DOI 10.1007/s00366-011-0241-y
   Goldberg D. E., 1990, Complex Systems, V4, P445
   Goudarzi M, 2021, IEEE T MOBILE COMPUT, V20, P1298, DOI 10.1109/TMC.2020.2967041
   Hamdan M., 2020, J NETW COMPUT APPL, V174, P1
   Han ZH, 2019, IEEE ACM T NETWORK, V27, P2472, DOI 10.1109/TNET.2019.2953806
   Hazra A., 2020, IEEE INTERNET THINGS, V8, P1
   Hazra A, 2021, IEEE INTERNET THINGS, V8, P5185, DOI 10.1109/JIOT.2020.3041102
   Hazra A, 2020, IEEE T NETW SCI ENG, V7, P3266, DOI 10.1109/TNSE.2020.3021792
   He Q, 2020, IEEE T PARALL DISTR, V31, P515, DOI 10.1109/TPDS.2019.2938944
   He XL, 2016, CHINA COMMUN, V13, P140, DOI 10.1109/CC.2016.7833468
   Homoliak I, 2021, IEEE COMMUN SURV TUT, V23, P341, DOI 10.1109/COMST.2020.3033665
   Hong CH, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3326066
   Hou XW, 2020, IEEE INTERNET THINGS, V7, P7097, DOI 10.1109/JIOT.2020.2982292
   Hu PF, 2017, J NETW COMPUT APPL, V98, P27, DOI 10.1016/j.jnca.2017.09.002
   Hu YF, 2015, INFORM SCIENCES, V300, P100, DOI 10.1016/j.ins.2014.11.052
   Index CGC Index CCVN, 2017, CISC VIS NETW IND GL, V1, P1
   Jia MK, 2014, IEEE CONF COMPUT, P352, DOI 10.1109/INFCOMW.2014.6849257
   Jianhua Fan, 2018, 2018 IEEE 4th International Conference on Computer and Communications (ICCC). Proceedings, P857, DOI 10.1109/CompComm.2018.8780904
   Jiaojiao Ren, 2019, International Journal of Control, V92, P755, DOI 10.1080/00207179.2017.1369573
   Jutila M, 2016, IEEE INTERNET THINGS, V3, P1061, DOI 10.1109/JIOT.2016.2550561
   Kacprzyk J, 2015, SPRINGER HANDBOOK OF COMPUTATIONAL INTELLIGENCE, P1, DOI 10.1007/978-3-662-43505-2
   Karaboga D, 2007, J GLOBAL OPTIM, V39, P459, DOI 10.1007/s10898-007-9149-x
   Karaboga D, 2009, ARTIF INTELL REV, V31, P61, DOI 10.1007/s10462-009-9127-4
   Karakus M, 2017, J NETW COMPUT APPL, V80, P200, DOI 10.1016/j.jnca.2016.12.019
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Khaluf Y, 2019, J COMPUT SCI-NETH, V31, P33, DOI 10.1016/j.jocs.2018.12.012
   Khan AA, 2019, IEEE T VEH TECHNOL, V68, P6964, DOI 10.1109/TVT.2019.2915194
   Konak A, 2011, IEEE T RELIAB, V60, P381, DOI 10.1109/TR.2011.2136530
   Kuang ZF, 2019, IEEE INTERNET THINGS, V6, P6774, DOI 10.1109/JIOT.2019.2911455
   Tan LT, 2019, IEEE T VEH TECHNOL, V68, P3086, DOI 10.1109/TVT.2019.2893898
   Lee S, 2019, PROCEEDINGS OF THE 10TH AUGMENTED HUMAN INTERNATIONAL CONFERENCE 2019 (AH2019), DOI 10.1145/3311823.3311869
   Li GS, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19092122
   Liu D, 2019, IEEE INTERNET THINGS, V6, P4946, DOI 10.1109/JIOT.2019.2897619
   Liu H, 2018, IEEE SYST J, V12, P2495, DOI 10.1109/JSYST.2017.2654119
   Liu ZZ, 2019, P IEEE I C SERV COMP, P72, DOI 10.1109/SCC.2019.00024
   Long NK, 2020, IEEE TETCI, V4, P523, DOI 10.1109/TETCI.2020.2992778
   Mach P, 2017, IEEE COMMUN SURV TUT, V19, P1628, DOI 10.1109/COMST.2017.2682318
   Mahmoodi SE, 2019, IEEE T CLOUD COMPUT, V7, P301, DOI 10.1109/TCC.2016.2560808
   Mahmoud MME, 2018, COMPUT ELECTR ENG, V67, P58, DOI 10.1016/j.compeleceng.2018.02.047
   Mahmud R, 2020, J PARALLEL DISTR COM, V135, P177, DOI 10.1016/j.jpdc.2019.10.001
   Mahmud R, 2019, J PARALLEL DISTR COM, V132, P190, DOI 10.1016/j.jpdc.2018.03.004
   Mansouri N, 2020, J NETW COMPUT APPL, V171, DOI 10.1016/j.jnca.2020.102811
   Mao YJ, 2017, INT GEOL REV, V59, P1276, DOI [10.1109/COMST.2017.2745201, 10.1080/00206814.2016.1209435]
   Mavromatis A, 2020, IEEE INTERNET THINGS, V7, P1718, DOI 10.1109/JIOT.2019.2949629
   Mebrek A, 2017, 2017 IEEE 16TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), P231
   Mekki T, 2018, IEEE GLOB COMM CONF
   Melnik E., 2018, P IOP C SERIES MAT S, V327, P1
   Mishra SK, 2018, IEEE T IND INFORM, V14, P4497, DOI 10.1109/TII.2018.2791619
   Mukherjee M, 2018, IEEE COMMUN SURV TUT, V20, P1826, DOI 10.1109/COMST.2018.2814571
   Munusamy A, 2023, IEEE INTERNET THINGS, V10, P2131, DOI 10.1109/JIOT.2021.3078148
   Ning ZL, 2019, IEEE INTERNET THINGS, V6, P4804, DOI 10.1109/JIOT.2018.2868616
   Omoniwa B, 2019, IEEE INTERNET THINGS, V6, P4118, DOI 10.1109/JIOT.2018.2875544
   Pan JL, 2018, IEEE INTERNET THINGS, V5, P439, DOI 10.1109/JIOT.2017.2767608
   Park GS, 2017, IEEE T MOBILE COMPUT, V16, P2639, DOI 10.1109/TMC.2016.2626434
   Pham C, 2018, IEEE T NETW SERV MAN, V15, P1076, DOI 10.1109/TNSM.2018.2831197
   Porambage P, 2018, IEEE COMMUN SURV TUT, V20, P2961, DOI 10.1109/COMST.2018.2849509
   Pu LJ, 2018, IEEE J SEL AREA COMM, V36, P1751, DOI 10.1109/JSAC.2018.2844624
   Qin AK, 2009, IEEE T EVOLUT COMPUT, V13, P398, DOI 10.1109/TEVC.2008.927706
   Queiroz W, 2019, J NETW COMPUT APPL, V131, P28, DOI 10.1016/j.jnca.2019.01.016
   Rafique W, 2020, IEEE COMMUN SURV TUT, V22, P1761, DOI 10.1109/COMST.2020.2997475
   Rajeswaran J, 2013, ELSEV INSIGHT, P1
   Rui LL, 2019, IEEE INTERNET THINGS, V6, P10546, DOI 10.1109/JIOT.2019.2939874
   Sadri AA, 2021, J NETW COMPUT APPL, V174, DOI 10.1016/j.jnca.2020.102882
   Sahoo K. S., 2017, P 8 INT C DAT COMM N, V1, P15
   Saleem U, 2020, IEEE T VEH TECHNOL, V69, P4472, DOI 10.1109/TVT.2020.2978027
   Shah-Hosseini H, 2007, IEEE C EVOL COMPUTAT, P3226
   Sheng ZG, 2018, IEEE T CLOUD COMPUT, V6, P114, DOI 10.1109/TCC.2015.2458272
   Shi Y, 2018, IEEE INTERNET THINGS, V5, P164, DOI 10.1109/JIOT.2017.2776252
   Simons CL, 2013, SOFT COMPUT, V17, P2147, DOI 10.1007/s00500-013-1039-1
   Skarlat O, 2017, SERV ORIENTED COMPUT, V11, P427, DOI 10.1007/s11761-017-0219-8
   Soleymani SA, 2017, IEEE ACCESS, V5, P15619, DOI 10.1109/ACCESS.2017.2733225
   Song S, 2020, IEEE T MOBILE COMPUT, V19, P1072, DOI 10.1109/TMC.2019.2907593
   Srirama SN, 2021, FUTURE GENER COMP SY, V117, P439, DOI 10.1016/j.future.2020.12.011
   TAKAGI T, 1985, IEEE T SYST MAN CYB, V15, P116, DOI 10.1109/TSMC.1985.6313399
   Taleb T, 2017, IEEE COMMUN SURV TUT, V19, P1657, DOI 10.1109/COMST.2017.2705720
   Tang GM, 2020, IEEE T VEH TECHNOL, V69, P5889, DOI 10.1109/TVT.2020.2987839
   Tang Q, 2020, NEURAL COMPUT APPL, V32, P15383, DOI 10.1007/s00521-019-04401-8
   Thai MT, 2020, IEEE T NETW SERV MAN, V17, P227, DOI 10.1109/TNSM.2019.2937342
   Thananjeyan S, 2020, IEEE OPEN J COMM SOC, V1, P1056, DOI 10.1109/OJCOMS.2020.3008485
   Trivedi H., 2018, INT C FUT TRENDS NET, P325
   Verbelen T, 2013, IEEE PERVAS COMPUT, V12, P30, DOI 10.1109/MPRV.2013.66
   Wan JF, 2018, IEEE T IND INFORM, V14, P4548, DOI 10.1109/TII.2018.2818932
   Wang L, 2019, IEEE T MOBILE COMPUT, V18, P1843, DOI 10.1109/TMC.2018.2867520
   Wang YT, 2016, IEEE T COMMUN, V64, P4268, DOI 10.1109/TCOMM.2016.2599530
   Wang YX, 2019, IEEE T IND INFORM, V15, P976, DOI 10.1109/TII.2018.2883991
   Wang Y, 2019, IEEE T COMMUN, V67, P6221, DOI 10.1109/TCOMM.2019.2920835
   Xiao KL, 2020, IEEE INTERNET THINGS, V7, P9291, DOI 10.1109/JIOT.2020.2984553
   Xiao Y, 2019, 2019 IEEE CONFERENCE ON DEPENDABLE AND SECURE COMPUTING (DSC), P203, DOI [10.1109/JPROC.2019.2918437, 10.1109/dsc47296.2019.8937659]
   Xin-She Yang, 2012, Unconventional Computation and Natural Computation. Proceedings of the 11th International Conference, UCNC 2012, P240, DOI 10.1007/978-3-642-32894-7_27
   Xue GL, 2007, IEEE ACM T NETWORK, V15, P201, DOI 10.1109/TNET.2006.890089
   Yang J, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16071081
   Yang X.-S., 2013, Studies in Computational Intelligence
   Yang X-S, 2010, Nature-Inspired Metaheuristic Algorithms, V2
   Yang XL, 2019, IEEE T VEH TECHNOL, V68, P11018, DOI 10.1109/TVT.2019.2942334
   Yang XS, 2016, COMPUTER, V49, P52, DOI 10.1109/MC.2016.292
   Yang XS, 2014, NATURE-INSPIRED OPTIMIZATION ALGORITHMS, P1, DOI 10.1016/B978-0-12-416743-8.00001-4
   Yang XS, 2010, STUD COMPUT INTELL, V284, P65, DOI 10.1007/978-3-642-12538-6_6
   Yang XS, 2009, LECT NOTES COMPUT SC, V5792, P169, DOI 10.1007/978-3-642-04944-6_14
   Yang Y, 2019, IEEE INTERNET THINGS, V6, P8658, DOI 10.1109/JIOT.2019.2922324
   Yi CY, 2020, IEEE T MOBILE COMPUT, V19, P29, DOI 10.1109/TMC.2019.2891736
   Yu FXQ, 2018, FUTURE GENER COMP SY, V89, P722, DOI 10.1016/j.future.2018.07.032
   Yu Z, 2020, IEEE INTERNET THINGS, V7, P3147, DOI 10.1109/JIOT.2020.2965898
   Zadeh Lotfi A., 1999, COMPUTING WORDS INFO, P3, DOI DOI 10.1007/978-3-7908-1873-4_1
   Zahoor S, 2018, INT WIREL COMMUN, P1154, DOI 10.1109/IWCMC.2018.8450506
   Zhan WH, 2020, IEEE T VEH TECHNOL, V69, P3341, DOI 10.1109/TVT.2020.2966500
   Zhang LJ, 2021, IEEE T FUZZY SYST, V29, P46, DOI 10.1109/TFUZZ.2020.3021713
   Zhu C, 2019, IEEE T VEH TECHNOL, V68, P9038, DOI 10.1109/TVT.2019.2924911
NR 151
TC 6
Z9 6
U1 4
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 1004
EP 1034
DI 10.1002/spe.3025
EA SEP 2021
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000697202900001
DA 2024-07-18
ER

PT J
AU Little, MC
   Shrivastava, SK
AF Little, Mark C.
   Shrivastava, Santosh K.
TI The evolution of the Arjuna transaction processing system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE client-server architectures; cloud computing; object oriented systems;
   transaction processing
AB The Arjuna transaction processing system began life in the mid-1980s as an academic research project to examine the use of object-oriented techniques in the development of fault-tolerant distributed systems. Thirty-five years later, and available in open source form, it forms an integral part of various middleware products from Red Hat where it is used to provide ACID as well as non-ACID transaction services. This journey from an academic to a commercial environment has been neither easy nor smooth but it has been interesting from many different perspectives. This article gives an overview of this journey, discusses the features of Arjuna that enables it to support a wide variety of transaction services and concludes by presenting lessons learned.
C1 [Little, Mark C.] Red Hat Ltd, Newcastle Upon Tyne, Tyne & Wear, England.
   [Shrivastava, Santosh K.] Newcastle Univ, Sch Comp, Urban Sci Bldg,1 Sci Sq, Newcastle Upon Tyne NE4 5TG, Tyne & Wear, England.
C3 Newcastle University - UK
RP Shrivastava, SK (corresponding author), Newcastle Univ, Sch Comp, Urban Sci Bldg,1 Sci Sq, Newcastle Upon Tyne NE4 5TG, Tyne & Wear, England.
EM santosh.shrivastava@ncl.ac.uk
OI Shrivastava, Santosh/0000-0001-6105-2785
FU UK Engineering and Physical Sciences Research Council (EPSRC); European
   Union (EU); Marconi; Nortel; IBM; HP
FX As the references indicate, the Arjuna system is the product of a
   diverse and varying team over many years. We would particularly like to
   mention the efforts of Steve Caughey who managed the transition process
   from academic project to industrial product, Dave Ingham for his work on
   the JMS, Stuart Wheater for the QA and testing work and Jim Webber for
   his work on the BTP implementation. The research work at the University
   was funded by many grants from the UK Engineering and Physical Sciences
   Research Council (EPSRC), the European Union (EU) and industrial
   sponsors including Marconi, Nortel, IBM and HP.
CR Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   ANDERSON T, 1978, IEEE T SOFTWARE ENG, V4, P486, DOI 10.1109/TSE.1978.233872
   [Anonymous], 2010, REST PRACTICE HYPERM
   [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   Ban B, 2020, JGROUPS TOOLKIT RELI
   Bernstein P. A., 2009, Principles of Transaction Processing, V2nd
   Birman K. P., 1985, Operating Systems Review, V19, P79, DOI 10.1145/323627.323636
   BIRMAN KP, 1993, COMMUN ACM, V36, P37, DOI 10.1145/163298.163303
   Birrell A, 1995, SOFTWARE PRACT EXPER, V25, P87, DOI 10.1002/spe.4380251305
   Burns B., 2019, KUBERNETES RUNNING
   Calsavara A., 1992, P 5 INT WORKSH PERS, P354
   Caughey SJ, 1998, FIRST INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC '98), P222, DOI 10.1109/ISORC.1998.666792
   Dixon G. N., 1987, Proceedings of the Sixth Symposium on Reliability in Distributed Software and Database Systems (Cat. No.87CH2411-7), P107
   Dixon GN., 1988, THESIS NEWCASTLE U
   Eclipse, 2020, MICR PROJ
   Eclipse, 2020, ECL MICR LRA
   Edwards, 1990, HPL90170 HP LAB
   Emmerich W, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487692
   EYRE DM, 1990, ESPRIT 90, P683
   Fielding R. T, 2002, ACM Transactions on Internet Technology (TOIT), V2, P115, DOI [DOI 10.1145/514183.514185, 10.1145/514183.514185]
   Garcia-Molina H., 1987, ACM SIGMOD Record, P249, DOI DOI 10.1145/38714.38742
   Gray J., 1981, Proceedings of the Seventh International Conference on Very Large Data Bases, P144
   Gray J. N., 1978, Operating Systems. An Advanced Course, P393
   HAERDER T, 1983, COMPUT SURV, V15, P287, DOI 10.1145/289.291
   Harris T., 2010, T MEMORY
   Houston I, 2003, SOFTWARE PRACT EXPER, V33, P351, DOI 10.1002/spe.512
   JCP, 2006, JSR 95 J2EE ACT SERV
   JTA, 2000, JSR 907 JAV T API JT
   Kistijantoro AI, 2008, IEEE T SOFTWARE ENG, V34, P531, DOI 10.1109/TSE.2008.38
   Lamport L, 2006, DISTRIB COMPUT, V19, P79, DOI 10.1007/s00446-006-0005-x
   Little, NARAYANA PROJECT DOC
   Little M. C., 2011, Dependable and Historic Computing. Essays Dedicated to Brian Randell on the Occasion of his 75th Birthday, P323, DOI 10.1007/978-3-642-24541-1_25
   Little M, 2007, LECT NOTES COMPUT SC, V4803, P439
   Little MC, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND WORKSHOP ON INDUSTRIAL EXPERIENCES WITH SYSTEMS SOFTWARE (WIESS 02), P41
   Little MC, 2000, LECT NOTES COMPUT SC, V1752, P453
   Lomet D. B., 1977, SIGPLAN Notices, V12, P128, DOI 10.1145/390017.808319
   Mohan C., 1983, Proceedings of the Second Annual ACM Symposium on Principles of Distributed Computing, PODC '83, P76
   Monson-Haefel Richard., 2001, Enterprise Java Beans, V3
   Nortel and University of Newcastle upon Tyne, 1998, BOM980301 OMG
   OASIS, 2004, BUS T PROT
   OASIS, 2009, OASIS WSTX STAND
   Object Management Group (OMG), 1991, COMM OBJ REQ BROK AR
   OMG, 2003, OBJ T SERV
   OMG, 2005, ADD STRUCT MECH OTS
   PANZIERI F, 1988, IEEE T SOFTWARE ENG, V14, P30, DOI 10.1109/32.4620
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PARRINGTON GD, 1995, COMPUT SYST, V8, P255
   Reuter A., 1993, T P CONCEPTS TECHNIQ
   Schmidt MT, 1999, IEEE CONCURR, V7, P44, DOI 10.1109/4434.788778
   Shavit N., 1995, Proceedings of the Fourteenth Annual ACM Symposium on Principles of Distributed Computing, P204, DOI 10.1145/224964.224987
   SHRIVASTAVA SK, 1979, SOFTWARE PRACT EXPER, V9, P1001, DOI 10.1002/spe.4380091204
   SHRIVASTAVA SK, 1994, IEEE T PARALL DISTR, V5, P421, DOI 10.1109/71.273048
   SHRIVASTAVA SK, 1991, IEEE SOFTWARE, V8, P66, DOI 10.1109/52.62934
   Shrivastava SK, 1995, LECT NOTES COMPUT SC, V938, P17
   SVOBODOVA L, 1984, IEEE T SOFTWARE ENG, V10, P257, DOI 10.1109/TSE.1984.5010234
   Taylor D. J., 1986, Proceedings Fifth Symposium on Reliability in Distributed Software and Database Systems (Cat. No.86CH2260-8), P121
   The Open Group, 1991, DISTR T P XA SPEC
   Wang T, 2008, DISTRIB PARALLEL DAT, V23, P235, DOI 10.1007/s10619-008-7028-1
   Wheater SM, 1998, MIDDLEWARE'98: IFIP INTERNATIONAL CONFERENCE ON DISTRIBUTED SYSTEMS PLATFORMS AND OPEN DISTRIBUTED PROCESSING, P3
NR 59
TC 0
Z9 0
U1 2
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 1035
EP 1064
DI 10.1002/spe.3026
EA SEP 2021
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000695197100001
DA 2024-07-18
ER

PT J
AU Poulos, A
   McKee, SA
   Calhoun, JC
AF Poulos, Alexandra
   McKee, Sally A.
   Calhoun, Jon C.
TI Posits and the state of numerical representations in the age of exascale
   and edge computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE floating-point representations; heterogeneous computing; mixed-precision
   computing; posits; reconfigurable computing
AB Growing constraints on memory utilization, power consumption, and I/O throughput have increasingly become limiting factors to the advancement of high performance computing (HPC) and edge computing applications. IEEE-754 floating-point types have been the de facto standard for floating-point number systems for decades, but the drawbacks of this numerical representation leave much to be desired. Alternative representations are gaining traction, both in HPC and machine learning environments. Posits have recently been proposed as a drop-in replacement for the IEEE-754 floating-point representation. We survey the state-of-the-art and state-of-the-practice in the development and use of posits in edge computing and HPC. The current literature supports posits as a promising alternative to traditional floating-point systems, both as a stand-alone replacement and in a mixed-precision environment. Development and standardization of the posit type is ongoing, and much research remains to explore the application of posits in different domains, how to best implement them in hardware, and where they fit with other numerical representations.
C1 [Poulos, Alexandra; McKee, Sally A.; Calhoun, Jon C.] Clemson Univ, Holcombe Dept Elect & Comp Engn, Clemson, SC USA.
C3 Clemson University
RP Poulos, A (corresponding author), 433 Calhoun Dr Riggs Hall Room 221-C, Clemson, SC 29634 USA.
EM alpoulo@clemson.edu
OI Poulos, Alexandra/0000-0003-2890-3570; Calhoun, Jon/0000-0001-7191-4422
FU National Science Foundation [SHF-1910197, SHF-1943114]
FX National Science Foundation, Grant/Award Numbers: SHF-1910197,
   SHF-1943114
CR Alouani I, 2021, I CONF VLSI DESIGN, P276, DOI 10.1109/VLSID51830.2021.00052
   [Anonymous], WHAT EVERY COMPUTER
   [Anonymous], TRAINING MIXED PRECI
   [Anonymous], 2020, POSIT STANDARD DOCUM
   [Anonymous], AUTOMATIC MIXED PREC
   [Anonymous], 2018, MIXED PRECISION TRAINING
   [Anonymous], The GNU C Library Reference Manual
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bernhardsson E., ERIKBERN ANN BENCHMA
   Calhoun J, 2017, HPDC'17: PROCEEDINGS OF THE 26TH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE PARALLEL AND DISTRIBUTED COMPUTING, P131, DOI 10.1145/3078597.3078617
   Cappello F, 2019, INT J HIGH PERFORM C, V33, P1201, DOI 10.1177/1094342019853336
   Cappello Franck, 2014, [Supercomputing Frontiers and Innovations, Supercomputing Frontiers and Innovations], V1, P5
   Carmichael Z, 2019, CONFERENCE FOR NEXT GENERATION ARITHMETIC 2019 (CONGA), DOI 10.1145/3316279.3316282
   Carmichael Z, 2019, DES AUT TEST EUROPE, P1421, DOI [10.23919/date.2019.8715262, 10.23919/DATE.2019.8715262]
   Chaurasiya R, 2018, PR IEEE COMP DESIGN, P334, DOI 10.1109/ICCD.2018.00057
   Cococcioni M., FAST APPROXIMATION H, DOI 10.1007/978-3-030-37277-4_25
   Cococcioni M, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20051515
   Cococcioni M, 2019, IEEE I C ELECT CIRC, P779, DOI [10.1109/icecs46596.2019.8965031, 10.1109/ICECS46596.2019.8965031]
   Cococcioni M, 2018, 2018 INTERNATIONAL CONFERENCE OF ELECTRICAL AND ELECTRONIC TECHNOLOGIES FOR AUTOMOTIVE
   DEDINECHIN F, 2019, C NEXT GENERATION AR
   Defour D., 2021, P IEEE 28 S COMPUTER
   Di S, 2016, INT PARALL DISTRIB P, P730, DOI 10.1109/IPDPS.2016.11
   Elliott J., 2013, TECH REPORT
   Esmaeilzadeh H, 2011, ISCA 2011: PROCEEDINGS OF THE 38TH ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE, P365, DOI 10.1145/2024723.2000108
   Fang B, 2019, INTERNATIONAL CONFERENCE ON SUPERCOMPUTING (ICS 2019), P484, DOI 10.1145/3330345.3330388
   Fang B, 2017, HPDC'17: PROCEEDINGS OF THE 26TH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE PARALLEL AND DISTRIBUTED COMPUTING, P117, DOI 10.1145/3078597.3078609
   Gottscho M, 2016, I C DEPENDABLE SYST, P276, DOI 10.1109/DSN-W.2016.67
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Gupta Geetika., 2019, What's the Difference Between Single-, Double-
   Gupta S, 2017, SC'17: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/3126908.3126937
   Gustafson J., STANFORD SEMINAR FLO
   Gustafson J. L., 2018, RISC V PROPOSED EXTE
   Gustafson JL, 2017, Mathematica Notebook Describing the Posit Number System, V30
   Gustafson John L., 2017, [Supercomputing Frontiers and Innovations, Supercomputing Frontiers and Innovations], V4, P71
   Guurin C., BFP FLOATING POINT
   Gysel P., 2016, ABS160403168
   Harrington P., 2017, SUPERCOMPUTING 2017
   Hauser JR, 1996, ACM T PROGR LANG SYS, V18, P139, DOI 10.1145/227699.227701
   Heath Michael T, 2018, Scientific Computing: An Introductory Survey
   Henry G, 2019, P S COMP ARITHM, P69, DOI 10.1109/ARITH.2019.00019
   HUANG KH, 1984, IEEE T COMPUT, V33, P518, DOI 10.1109/TC.1984.1676475
   Hubara I, 2018, J MACH LEARN RES, V18
   Jain R., CLARINET RISC V BASE
   Jaiswal MK, 2019, IEEE ACCESS, V7, P74586, DOI 10.1109/ACCESS.2019.2920936
   Jaiswal MK, 2018, IEEE INT SYMP CIRC S, DOI 10.1109/ISCAS.2018.8351142
   Jaiswal MK, 2018, DES AUT TEST EUROPE, P1159, DOI 10.23919/DATE.2018.8342187
   Johnson Je., 2018, Making floating point math highly e cient for ai hardware
   Johnson JA, 2018, AMBIX, V65, P193, DOI 10.1080/00026980.2018.1469306
   Judd P., 2016, P 2016 INT C SUPERCO, p23:1
   Kharya P., WHAT TENSOR FLOAT 32
   Klöwer M, 2020, J ADV MODEL EARTH SY, V12, DOI 10.1029/2020MS002246
   Klöwer M, 2019, CONFERENCE FOR NEXT GENERATION ARITHMETIC 2019 (CONGA), DOI 10.1145/3316279.3316281
   Langroudi HF, 2020, IEEE COMPUT SOC CONF, P3123, DOI 10.1109/CVPRW50498.2020.00371
   Langroudi HF, 2019, 2019 IEEE SPACE COMPUTING CONFERENCE (SCC), P53, DOI 10.1109/SpaceComp.2019.00011
   Langroudi SHF, 2018, 2018 1ST WORKSHOP ON ENERGY EFFICIENT MACHINE LEARNING AND COGNITIVE COMPUTING FOR EMBEDDED APPLICATIONS (EMC2), P19, DOI 10.1109/EMC2.2018.00012
   Liang X, 2019, IEEE INT C CL COMP, P340, DOI 10.1109/cluster.2019.8891037
   Liang X, 2018, IEEE INT CONF BIG DA, P438, DOI 10.1109/BigData.2018.8622520
   Lim JP, 2020, 17TH ACM INTERNATIONAL CONFERENCE ON COMPUTING FRONTIERS 2020 (CF 2020), P19, DOI 10.1145/3387902.3392632
   Lindstrom P, 2014, IEEE T VIS COMPUT GR, V20, P2674, DOI 10.1109/TVCG.2014.2346458
   Lu JM, 2021, IEEE T COMPUT, V70, P174, DOI 10.1109/TC.2020.2985971
   Mishra A., 2018, INT C LEARN REPR ICL, P1
   Muller Jean-Michel, 2018, Handbook of Floating-Point Arithmetic, V2nd
   Muller Jean-Michel, 2005, Elementary Functions: Algorithms and Implementation
   Murillo R, 2020, DIGIT SIGNAL PROCESS, V102, DOI 10.1016/j.dsp.2020.102762
   NVIDIA, AMPERE ARCHITECTURE
   Omtzigt ETL., 2020, ARXIV201211011
   Poulos A, 2018, PROCEEDINGS OF FTXS 2018: IEEE/ACM 8TH WORKSHOP ON FAULT TOLERANCE FOR HPC AT EXTREME SCALE (FTXS), P19, DOI 10.1109/FTXS.2018.00006
   Ruffaldi E., CPPPOSIT
   Sampson A, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P164
   Severance C., 2010, HIGH PERFORMANCE COM
   Severance C., 1998, COMMUNICATION
   Snir M, 2014, INT J HIGH PERFORM C, V28, P129, DOI 10.1177/1094342014522573
   So Hayden., 2006, Introduction to fixed point number representation
   Sridharan V, 2015, ACM SIGPLAN NOTICES, V50, P297, DOI [10.1145/2775054.2694348, 10.1145/2694344.2694348]
   Theis TN, 2017, COMPUT SCI ENG, V19, P41, DOI 10.1109/MCSE.2017.29
   Tiwari S., 2019, ARXIV190801466
   Tiwari S, 2021, ACM T ARCHIT CODE OP, V18, DOI 10.1145/3446210
   Uguen Y, 2019, I C FIELD PROG LOGIC, P106, DOI 10.1109/FPL.2019.00026
   Wallace DD, 2021, PUBLIC HEALTH NUTR, V24, P3018, DOI 10.1017/S1368980020002694
   Waterman A., 2014, 201454 UCBEECS
   XIAO F, 2020, ELECTRONICS, V9
   Zuras D., 2008, 7542008 IEEE, V754-2008, P1, DOI [DOI 10.1109/IEEESTD.2008.4610935, DOI 10.1109/IEEESTD.2008.5976968]
NR 82
TC 4
Z9 4
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 619
EP 635
DI 10.1002/spe.3022
EA SEP 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000695623900001
DA 2024-07-18
ER

PT J
AU Zolfaghari, R
   Sahafi, A
   Rahmani, AM
   Rezaei, R
AF Zolfaghari, Rahmat
   Sahafi, Amir
   Rahmani, Amir Masoud
   Rezaei, Reza
TI An energy-aware virtual machines consolidation method for cloud
   computing: Simulation and verification
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing systems (CCSs); data center; energy consumption; formal
   verification; virtual machines consolidation (VMC)
ID ADAPTIVE HEURISTICS; VM CONSOLIDATION; EFFICIENT; PERFORMANCE;
   MANAGEMENT; PLACEMENT; ALGORITHM; ALLOCATION; MIGRATION; TOPOLOGY
AB Cloud systems have become an essential part of our daily lives owing to various Internet-based services. Consequently, their energy utilization has also become a necessary concern in cloud computing systems increasingly. Live migration, including several virtual machines (VMs) packed on in minimal physical machines (PMs) as virtual machines consolidation (VMC) technique, is an approach to optimize power consumption. In this article, we have proposed an energy-aware method for the VMC problem, which is called energy-aware virtual machines consolidation (EVMC), to optimize the energy consumption regarding the quality of service guarantee, which comprises: (1) the support vector machine classification method based on the utilization rate of all resource of PMs that is used for PM detection in terms of the amount' load; (2) the modified minimization of migration approach which is used for VM selection; (3) the modified particle swarm optimization which is implemented for VM placement. Also, the evaluation of the functional requirements of the method is presented by the formal method and the non-functional requirements by simulation. Finally, in contrast to the standard greedy algorithms such as modified best fit decreasing, the EVMC decreases the active PMs and migration of VMs, respectively, 30%, 50% on average. Also, it is more efficient for the energy 30% on average, resources and the balance degree 15% on average in the cloud.
C1 [Zolfaghari, Rahmat] Islamic Azad Univ, Sci & Res Branch, Dept Comp Engn, Tehran, Iran.
   [Sahafi, Amir] Islamic Azad Univ, South Tehran Branch, Dept Comp Engn, Tehran, Iran.
   [Rahmani, Amir Masoud] Natl Yunlin Univ Sci & Technol, Future Technol Res Ctr, Touliu, Taiwan.
   [Rezaei, Reza] Islamic Azad Univ, Saveh Branch, Dept Comp Engn, Saveh, Iran.
C3 Islamic Azad University; Islamic Azad University; National Yunlin
   University Science & Technology; Islamic Azad University
RP Sahafi, A (corresponding author), Islamic Azad Univ, South Tehran Branch, Dept Comp Engn, Tehran, Iran.
EM sahafi@iau.ac.ir
RI Rezaei, Reza/AGE-6611-2022; Rezaei, Reza/AEM-1771-2022; Rezaei,
   Reza/JNE-9302-2023; Rahmani, Amir Masoud/K-2702-2013
OI Rahmani, Amir Masoud/0000-0001-8641-6119; Sahafi,
   Amir/0000-0002-6555-670X; zolfaghari, rahmat/0000-0002-1678-8870
CR Al-Dulaimy A, 2018, SUSTAIN COMPUT-INFOR, V19, P185, DOI 10.1016/j.suscom.2018.05.012
   Al-Moalmi A, 2019, ELECTRONICS-SWITZ, V8, DOI 10.3390/electronics8030283
   Aryania A, 2018, J GRID COMPUT, V16, P477, DOI 10.1007/s10723-018-9428-4
   Asad Z, 2017, IEEE SYST J, V11, P784, DOI 10.1109/JSYST.2015.2498639
   Babu KRR, 2019, SOFTWARE PRACT EXPER, V49, P995, DOI 10.1002/spe.2692
   Bala A, 2016, ENG COMPUT-GERMANY, V32, P581, DOI 10.1007/s00366-016-0434-5
   Beloglazov Anton, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P577, DOI 10.1109/CCGRID.2010.45
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Bodík P, 2012, ACM SIGCOMM COMP COM, V42, P431, DOI 10.1145/2377677.2377760
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Chang K, 2018, SUSTAIN COMPUT-INFOR, V20, P34, DOI 10.1016/j.suscom.2018.10.003
   Delforge P., 2014, Natural Resources Defense Council (NRDC), IB:14-08-A, P1
   Eberhart R.C., 1995, Proc Int Symp Micro Mach Hum Sci, P39, DOI [DOI 10.1109/MHS.1995.494215, 10.1109/mhs.1995.494215]
   El-Sayed N., 2012, P 12 ACM METRICS PER
   Ferdaus MH, 2014, LECT NOTES COMPUT SC, V8632, P306, DOI 10.1007/978-3-319-09873-9_26
   Ghobaei-Arani M, 2018, SOFTWARE PRACT EXPER, V48, P1865, DOI 10.1002/spe.2598
   Gholipour N, 2020, SIMUL MODEL PRACT TH, V104, DOI 10.1016/j.simpat.2020.102127
   Gill SS, 2019, INTERNET THINGS-NETH, V8, DOI 10.1016/j.iot.2019.100118
   Gu L, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTING, NETWORKING AND COMMUNICATIONS (ICNC), P717, DOI 10.1109/ICCNC.2015.7069434
   Guenter B, 2011, IEEE INFOCOM SER, P1332, DOI 10.1109/INFCOM.2011.5934917
   GUPTA P, 2014, J COMPUT APPL, V103, P24
   Halder K., 2012, P 2012 IEEE 5 INT C
   Kansal A., 2010, 1 ACM S CLOUD COMP, P39
   Kansal NJ, 2016, J GRID COMPUT, V14, P327, DOI 10.1007/s10723-016-9364-0
   Khalil MIK, 2020, SUSTAIN CITIES SOC, V63, DOI 10.1016/j.scs.2020.102440
   Khan AA, 2019, SIMUL MODEL PRACT TH, V92, P82, DOI 10.1016/j.simpat.2018.12.001
   Khattar N, 2020, WIRELESS PERS COMMUN, V113, P349, DOI 10.1007/s11277-020-07204-6
   Khorsand R, 2019, SOFTWARE PRACT EXPER, V49, P1618, DOI 10.1002/spe.2737
   Kumar MRV, 2016, J COMPUT SYST SCI, V82, P191, DOI 10.1016/j.jcss.2015.07.005
   Li HJ, 2016, COMPUTING, V98, P303, DOI 10.1007/s00607-015-0467-4
   Li ZH, 2017, FUTURE GENER COMP SY, V69, P75, DOI 10.1016/j.future.2016.12.008
   Malekloo MH, 2018, SUSTAIN COMPUT-INFOR, V17, P9, DOI 10.1016/j.suscom.2018.02.001
   Mazumdar S, 2017, FUTURE GENER COMP SY, V70, P4, DOI 10.1016/j.future.2016.12.022
   Mishra SK, 2018, SUSTAIN COMPUT-INFOR, V20, P48, DOI 10.1016/j.suscom.2018.01.002
   Moges FF, 2019, J CLOUD COMPUT-ADV S, V8, DOI 10.1186/s13677-019-0126-y
   Naeen HM, 2020, SOFTWARE PRACT EXPER, V50, P161, DOI 10.1002/spe.2764
   Rajabzadeh M, 2020, J SUPERCOMPUT, V76, P7438, DOI 10.1007/s11227-020-03169-2
   RAJYASHREE VR, 2015, INT J ENG COMPUT SCI, V4, P9966
   Rezaee A, 2014, J SUPERCOMPUT, V67, P345, DOI 10.1007/s11227-013-1005-9
   Roytman A., 2013, P 10 INT C AUT COMP
   Sedaghat M, 2016, FUTURE GENER COMP SY, V56, P51, DOI 10.1016/j.future.2015.09.023
   Sharma O, 2016, PROCEDIA COMPUT SCI, V89, P27, DOI 10.1016/j.procs.2016.06.005
   Shekhar Srikantaiah., 2008, HOTPOWER 08 P 2008 C, P1
   Sindelar M, 2011, SPAA 11: PROCEEDINGS OF THE TWENTY-THIRD ANNUAL SYMPOSIUM ON PARALLELISM IN ALGORITHMS AND ARCHITECTURES, P367
   Sonklin C., 2017, P INT C NEUR INF PRO
   Terra-Neves M, 2019, J HEURISTICS, V25, P339, DOI 10.1007/s10732-018-9400-2
   Theja PR, 2016, CYBERN INF TECHNOL, V16, P97, DOI 10.1515/cait-2016-0023
   Tighe M, 2017, J GRID COMPUT, V15, P273, DOI 10.1007/s10723-017-9397-z
   Usmani Z, 2016, PROCEDIA COMPUT SCI, V78, P491, DOI 10.1016/j.procs.2016.02.093
   Xiong AP, 2014, MATH PROBL ENG, V2014, DOI 10.1155/2014/816518
   Xu HY, 2019, INT J PARALLEL PROG, V47, P481, DOI 10.1007/s10766-018-00622-x
   Zhang XQ, 2019, J SYST SOFTWARE, V147, P147, DOI 10.1016/j.jss.2018.09.084
   Zhao DM, 2019, IEEE ACCESS, V7, P55659, DOI 10.1109/ACCESS.2019.2913175
   Zolfaghari R, 2021, SUSTAIN COMPUT-INFOR, V30, DOI 10.1016/j.suscom.2021.100524
   Zolfaghari R, 2020, WIRELESS PERS COMMUN, V115, P2289, DOI 10.1007/s11277-020-07682-8
NR 56
TC 13
Z9 13
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 194
EP 235
DI 10.1002/spe.3010
EA JUN 2021
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000667467100001
DA 2024-07-18
ER

PT J
AU Ahn, M
   Kim, D
   Nam, T
   Jeong, J
AF Ahn, Minwoo
   Kim, Donghyun
   Nam, Taekeun
   Jeong, Jinkyu
TI SCOZ: A system-wide causal profiler for multicore systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE causal profiler; Linux perf subsystem; multicore system; virtual speedup
AB The increased complexity of hardware and software makes it difficult to analyze programs with conventional profilers. The causal profiling technique is introduced to solve the problem of conventional profilers. The causal profiling technique finds the bottleneck of the program and shows the effect of optimizing it. COZ, the newest causal profiler, exploits a technique called virtual speedup to perform causal profiling without actually optimizing program codes. However, it can only profile multithreaded applications, and cannot profile multiprogram applications and operating system (OS) kernel codes, thereby limiting the use of causal profiling. This article introduces SCOZ, a system-wide causal profiler that addresses these limitations. The proposed profiler changes the target of virtual speedup from threads to CPU cores, thereby expanding the profiling coverage to diverse applications as well as OS kernel codes. To verify our profiler, we profiled multithreaded and OS kernel-intensive applications. For multithread applications, our profiler shows identical results to what COZ provides. For the OS kernel-intensive applications, our profiler identifies identical bottlenecks that previous OS scalability studies have pinpointed. Finally, we verified the profiling capability of the proposed profiler by profiling and optimizing multiprocess applications in the NAS parallel benchmark suite.
C1 [Ahn, Minwoo; Jeong, Jinkyu] Sungkyunkwan Univ, Coll Informat & Commun Engn, Suwon 16419, South Korea.
   [Kim, Donghyun] Samsung Elect, Suwon, South Korea.
   [Nam, Taekeun] Apposha, Seoul, South Korea.
C3 Sungkyunkwan University (SKKU); Samsung; Samsung Electronics
RP Jeong, J (corresponding author), Sungkyunkwan Univ, Coll Informat & Commun Engn, Suwon 16419, South Korea.
EM jinkyu@skku.edu
RI Jeong, Jinkyu/KQU-1902-2024
OI Jeong, Jinkyu/0000-0002-4905-9244
FU Korea Institute for Advancement of Technology (KIAT), Korea Government
   (MOTIE), The Competency Development Program for Industry Specialist
   [N0001883]; Samsung Electronics; National Research Foundation of Korea
   (NRF) [NRF-2020R1A2C2102406]
FX Korea Institute for Advancement of Technology (KIAT), Korea Government
   (MOTIE), The Competency Development Program for Industry Specialist,
   Grant/Award Number: N0001883; Samsung Electronics; National Research
   Foundation of Korea (NRF), Grant/Award Number: NRF-2020R1A2C2102406
CR BAILEY DH, 1991, INT J SUPERCOMPUT AP, V5, P63, DOI 10.1177/109434209100500306
   Benavides Z, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360582
   Bezemer CP, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P535, DOI 10.1109/SANER.2015.7081872
   Bienia C, 2008, PACT'08: PROCEEDINGS OF THE SEVENTEENTH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P72, DOI 10.1145/1454115.1454128
   Boushehrinejadmoradi N, 2018, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE, AND ANALYSIS (SC'18)
   BOYDWICKIZER S, 2010, OSDI, V10, P86
   Curtsinger C, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P184, DOI 10.1145/2815400.2815409
   De Melo AC, 2010, 17 INT LIN SYST TECH
   de Melo AC., 2009, P LIN PLUMB C PORTL, V118
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   GREGG B., 2011, DTRACE DYNAMIC TRACI
   Gregg B, 2016, COMMUN ACM, V59, P48, DOI 10.1145/2909476
   Hill JMD, 1998, PROCEEDINGS OF THE SIXTH EUROMICRO WORKSHOP ON PARALLEL AND DISTRIBUTED PROCESSING - PDP '98, P286, DOI 10.1109/EMPDP.1998.647211
   Jiménez V, 2010, PACT 2010: PROCEEDINGS OF THE NINETEENTH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P7, DOI 10.1145/1854273.1854281
   Levon John, 2020, Oprofile
   Miller B. P., 1987, 7th International Conference on Distributed Computing Systems (Cat. No.87CH2439-8), P482
   Miller BP, 1988, IPS 2 2 GENERATION P
   Min C, 2016, PROCEEDINGS OF USENIX ATC '16: 2016 USENIX ANNUAL TECHNICAL CONFERENCE, P71
   Pourghassemi B, 2019, P ACM MEAS ANAL COMP, V3, DOI [10.1145/3341617.3326142, 10.1145/3326142]
   Szebenyi Z, 2009, PROCEEDINGS OF THE CONFERENCE ON HIGH PERFORMANCE COMPUTING NETWORKING, STORAGE AND ANALYSIS
   Yoga A, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P485, DOI 10.1145/3314221.3314621
   Yoga A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P15, DOI 10.1145/3106237.3106254
   Yu LL, 2017, DESTECH TRANS COMP, P290
   Yu T., 2016, P 25 INT S SOFTW TES, P389
   Zhou F, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P527
NR 25
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 1043
EP 1058
DI 10.1002/spe.2930
EA NOV 2020
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000587011200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Borsotti, A
   Trofimovich, U
AF Borsotti, Angelo
   Trofimovich, Ulya
TI Efficient POSIX submatch extraction on nondeterministic finite automata
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE finite-state automata; parsing; POSIX; regular expressions; submatch
   extraction
AB In this paper we study the performance of POSIX submatch extraction algorithms based on nondeterministic finite automata (NFA). We propose an algorithm that combines Laurikari tagged NFA and extended Okui-Suzuki disambiguation. The algorithm works in worst-caseO(n m(2) t)time andO(m(2))space (including preprocessing), wherenis the length of input,mis the size of the regular expression with bounded repetition expanded andtis the number of capturing groups and subexpressions that contain them. On real-world benchmarks our algorithm performs close to theO(n m t)complexity of leftmost-greedy matching, although on artificial benchmarks it can be significantly slower. We propose a lazy version of the algorithm that runs much faster, but requiresO(n m(2))space. We show that the Kuklewicz algorithm is slower in practice, and the backward matching algorithm proposed by Cox is incorrect.
C1 [Borsotti, Angelo] Polytech Univ Milan, Dept Elect Informat & Bioengn, Milan, Italy.
   [Trofimovich, Ulya] Belarusian State Univ, Dept Discrete Math & Algorithm, Minsk, BELARUS.
C3 Polytechnic University of Milan; Belarusian State University
RP Borsotti, A (corresponding author), Polytech Univ Milan, Dept Elect Informat & Bioengn, Milan, Italy.; Trofimovich, U (corresponding author), Belarusian State Univ, Dept Discrete Math & Algorithm, Minsk, BELARUS.
EM angelo.borsotti@mail.polimi.it; skvadrik@gmail.com
OI Trofimovich, Ulya/0000-0003-4265-1285
CR Aho AV, 1986, COMPILERS PRINCIPLES, P157
   Ausaf F, 2016, P INT C INT THEOR PR, P69
   Borsotti Angelo, 2015, Implementation and Application of Automata. 20th International Conference, CIAA 2015. Proceedings: LNCS 9223, P35, DOI 10.1007/978-3-319-22360-5_4
   Cherkassky BV, 1996, MATH PROGRAM, V73, P129, DOI 10.1007/BF02592101
   CHERKASSKY BV, 2009, J EXP ALGORITHMICS J, V14, P7
   Cormen T.H., 2009, INTRO ALGORITHMS
   Cox R, 2009, BACKW POSIX MATCH AL
   Fowler G, 2003, INTERPRETATION POSIX
   GOLDBERG AV, 1993, APPL MATH LETT, V6, P3, DOI 10.1016/0893-9659(93)90022-F
   Karper A, 2014, THESIS
   Kuklewicz C, 2007, REGULAR EXPRESSIONS
   Laurikari Ville., 2001, EFFICIENT SUBMATCH A
   Mohri M., 2002, Journal of Automata, Languages and Combinatorics, V7, P321
   Okui S, 2013, P INT C IMPLEMENTATI, P231
   Sulzmann M., 2013, Correct and efficient posix submatch extraction with regular expression derivatives
   Sulzmann M, 2014, LECT NOTES COMPUT SC, V8475, P203, DOI 10.1007/978-3-319-07151-0_13
   THOMPSON K, 1968, COMMUN ACM, V11, P419, DOI 10.1145/363347.363387
   Trofimovich U, 2017, ARXIV190708837CSFL
NR 18
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 159
EP 192
DI 10.1002/spe.2881
EA OCT 2020
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000579819700001
DA 2024-07-18
ER

PT J
AU Larsson, L
   Tärneberg, W
   Klein, C
   Elmroth, E
   Kihl, M
AF Larsson, Lars
   Tarneberg, William
   Klein, Cristian
   Elmroth, Erik
   Kihl, Maria
TI Impact of etcd deployment on Kubernetes, Istio, and application
   performance
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; distributed systems; etcd; Kubernetes; performance
ID CLOUD; SIMULATION
AB This experience article describes lessons learned as we conducted experiments in a Kubernetes-based environment, the most notable of which was that the performance of both the Kubernetes control plane and the deployed application depends strongly and in unexpected ways on the performance of the etcd database. The article contains (a) detailed descriptions of how networking with and without Istio works in Kubernetes, based on the Flannel Container Networking Interface (CNI) provider in VXLAN mode with IP Virtual Server (IPVS)-backed Kubernetes Services, (b) a comprehensive discussion about how to conduct load and performance testing using a closed-loop workload generator, and (c) an open source experiment framework useful for executing experiments in a shared cloud environment and exploring the resulting data. It also shows that statistical analysis may reveal the data resulting from such experiments to be misleading even when careful preparations are made, and that nondeterministic behavior stemming from etcd can affect both the platform as a whole and the deployed application. Finally, it is demonstrated that using high-performance backing storage for etcd can reduce the occurrence of such nondeterministic behaviors by a statistically significant (P < .05) margin. The implication of this experience article is that systems researchers studying the performance of applications deployed on Kubernetes cannot simply consider their specific application to be under test. Instead, the particularities of the underlying Kubernetes and cloud platform must be taken into account, in particular because their performance can impact that of etcd.
C1 [Larsson, Lars; Klein, Cristian; Elmroth, Erik] Umea Univ, Dept Comp Sci, S-90187 Umea, Sweden.
   [Tarneberg, William; Kihl, Maria] Lund Univ, Fac Engn, Dept Elect & Informat Technol, Lund, Sweden.
C3 Umea University; Lund University
RP Larsson, L (corresponding author), Umea Univ, Dept Comp Sci, S-90187 Umea, Sweden.
EM larsson@cs.umu.se
OI Kihl, Maria/0000-0003-3396-1652; Klein, Cristian/0000-0003-0106-3049;
   Tarneberg, William/0000-0003-1316-8059; Larsson,
   Lars/0000-0001-5860-6695; Elmroth, Erik/0000-0002-2633-6798
FU Excellence Center Linkoping - Lund in Information Technology; Knut och
   Alice Wallenbergs Stiftelse; Stiftelsen for Strategisk Forskning;
   Vetenskapsradet; VINNOVA
FX Excellence Center Linkoping - Lund in Information Technology,
   Grant/Award Number: ELLIIT; Knut och Alice Wallenbergs Stiftelse,
   Grant/Award Number: Wallenberg AI, Autonomous Systems and Software
   Program; Stiftelsen for Strategisk Forskning, Grant/Award Number:
   SEC4FACTORY; Vetenskapsradet, Grant/Award Number: eSSENCE; VINNOVA,
   Grant/Award Number: 5G-PERFECTA Celtic Next
CR Alam B, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS AND COMPUTER NETWORKS (ISCON), P11, DOI 10.1109/ICISCON.2014.6965209
   [Anonymous], 2010, INTERNET MEASUREMENT, DOI DOI 10.1145/1879141.1879143
   BRABAND J, 1995, QUEUEING SYST, V19, P331, DOI 10.1007/BF01150417
   CASALICCHIO E, 2017, 8 ACM SPEC INT C PER, P11
   Chen L, 2018, Identification of Incompatible Co-tenant Pairs in Cloud Computing Patent, Patent No. [US20180241811A1, 20180241811]
   Edwards Sarah, 2015, ACM SIGOPS Operating Systems Review, V49, P90
   El-Refaey MA, 2010, IEEE ENABL TECHNOL, P66, DOI 10.1109/WETICE.2010.17
   Ericson J, 2017, 2017 IEEE 18TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IEEE IRI 2017), P308, DOI 10.1109/IRI.2017.47
   Feitelson Dror G., 2015, ACM SIGOPS Operating Systems Review, V49, P3
   Gartner Inc, 2019, BEST PRACT RUNN CONT
   Gartner Inc, 2018, INN INS SERV MESH MA
   Gartner Inc, 2018, MARK SHAR AN IAAS IU
   Ghosh R, 2016, Reducing the Impact of Noisy Neighbors via Pro-Active Log Offloading in Shared Storage Environment Patent, Patent No. [US20160164962A1, 20160164962]
   Grossmann M, 2018, 2018 INTERNATIONAL CONFERENCE ON INTERNET OF THINGS, EMBEDDED SYSTEMS AND COMMUNICATIONS (IINTEC), P85, DOI 10.1109/IINTEC.2018.8695277
   Healy M, 2020, DOES INTEL OPTANE PE
   Iosup A., 2011, 2011 Proceedings of 11th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2011), P104, DOI 10.1109/CCGrid.2011.22
   Iosup A, 2011, IEEE T PARALL DISTR, V22, P931, DOI 10.1109/TPDS.2011.66
   Kalmanek CR, 2010, COMPUT COMMUN NETW S, P3, DOI 10.1007/978-1-84882-828-5_1
   Kandalintsev A, 2017, SOFTWARE PRACT EXPER, V47, P831, DOI 10.1002/spe.2456
   Kleinrock L., 1975, Queueing Systems-Volume 1: Theory, V1
   Leitner P, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2885497
   Lloyd W, 2017, INT CONF CLOUD ENG, P159, DOI 10.1109/IC2E.2017.29
   Lorido-Botran T, 2017, EXPERT SYST APPL, V89, P188, DOI 10.1016/j.eswa.2017.07.038
   Maenhaut PJ, 2019, SOFTWARE PRACT EXPER, V49, P449, DOI 10.1002/spe.2669
   Medel V, 2016, INT CONF UTIL CLOUD, P426, DOI 10.1145/2996890.3007889
   Medel V, 2016, INT CONF UTIL CLOUD, P257, DOI 10.1145/2996890.3007869
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Natella R, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2841425
   Nathuji R, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P237
   Olivi M, 2019, USING FIO TELL WHETH
   Papadopoulos AV, 2021, IEEE T SOFTWARE ENG, V47, P1528, DOI 10.1109/TSE.2019.2927908
   Piraghaj SF, 2017, SOFTWARE PRACT EXPER, V47, P505, DOI 10.1002/spe.2422
   Schroeder B, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 3RD SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI 06), P239
   Schroeder B, 2010, IEEE T DEPEND SECURE, V7, P337, DOI 10.1109/TDSC.2009.4
   Silva M, 2013, PROCEEDINGS OF THE 2013 IEEE INTERNATIONAL CONFERENCE ON CLOUD ENGINEERING (IC2E 2013), P302, DOI 10.1109/IC2E.2013.33
   Silva M, 2012, IEEE SYM PARA DISTR, P1144, DOI 10.1109/IPDPSW.2012.140
   Tan YM, 2012, INT CON DISTR COMP S, P285, DOI 10.1109/ICDCS.2012.65
   Tomás L, 2015, 2015 INTERNATIONAL CONFERENCE ON CLOUD AND AUTONOMIC COMPUTING (ICCAC), P33, DOI 10.1109/ICCAC.2015.14
   Varshney P, 2020, SOFTWARE PRACT EXPER, V50, P558, DOI 10.1002/spe.2699
   WEI T, 2017, IEEE PAC RIM CONF CO
   Yabandeh M., 2009, Symposium on Networked Systems Design and Implementation, P229
   Yigitbasi N, 2009, CCGRID: 2009 9TH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P472, DOI 10.1109/CCGRID.2009.40
   Zhou H, 2019, SOFTWARE PRACT EXPER, V49, P1421, DOI 10.1002/spe.2741
NR 43
TC 17
Z9 20
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2020
VL 50
IS 10
BP 1986
EP 2007
DI 10.1002/spe.2885
EA AUG 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ8HF
UT WOS:000556599500001
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Malik, SUR
   Akram, H
   Gill, SS
   Pervaiz, H
   Malik, H
AF Malik, Saif U. R.
   Akram, Hina
   Gill, Sukhpal Singh
   Pervaiz, Haris
   Malik, Hassan
TI EFFORT: Energy efficient framework for offload communication in mobile
   cloud computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; cloud service providers; energy consumption; IoT;
   Internet spoofing; offload communication
AB There is an abundant expansion in the race of technology, specifically in the production of data, because of the smart devices, such as mobile phones, smart cards, sensors, and Internet of Things (IoT). Smart phones and devices have undergone an enormous evolution in a way that they can be used. More and more new applications, such as face recognition, augmented reality, online interactive gaming, and natural language processing are emerging and attracting the users. Such applications are generally data intensive or compute intensive, which demands high resource and energy consumption. Mobile devices are known for the resource scarcity, having limited computational power and battery life. The tension between compute/data intensive application and resource constrained mobile devices hinders the successful adaption of emerging paradigms. In the said perspective, the objective of this article is to study the role of computation offloading in mobile cloud computing to supplement mobile platforms ability in executing complex applications. This article proposes a systematic approach (EFFORT) for offload communication in the cloud. The proposed approach provides a promising solution to partially solve energy consumption issue for communication-intensive applications in a smartphone. The experimental study shows that our proposed approach outperforms its counterparts in terms of energy consumption and fast processing of smartphone devices. The battery consumption was reduced to 19% and the data usage was reduced to 16%.
C1 [Malik, Saif U. R.] Cybernet AS, Tallinn, Estonia.
   [Malik, Saif U. R.] COMSATS Univ, Dept Comp Sci, Islamabad, Pakistan.
   [Akram, Hina] COMSATS Inst Informat Technol, Islamabad, Pakistan.
   [Gill, Sukhpal Singh] Queen Mary Univ London, Sch Elect Engn & Comp Sci, London, England.
   [Pervaiz, Haris] Univ Lancaster, Sch Comp & Commun, Lancaster, England.
   [Malik, Hassan] Edge Hill Univ, Dept Comp Sci, Ormskirk, England.
C3 Cybernetica; COMSATS University Islamabad (CUI); COMSATS University
   Islamabad (CUI); University of London; Queen Mary University London;
   Lancaster University; Edge Hill University
RP Pervaiz, H (corresponding author), Univ Lancaster, Sch Comp & Commun, Lancaster, England.
EM h.b.pervaiz@lancaster.ac.uk
RI Malik, Hassan/S-2765-2018; Gill, Sukhpal Singh/J-5930-2014; Malik, Saif
   Ur Rehman/M-3948-2019
OI Malik, Hassan/0000-0002-8564-3683; Gill, Sukhpal
   Singh/0000-0002-3913-0369; Malik, Saif Ur Rehman/0000-0001-8195-1630;
   Pervaiz, Haris/0000-0002-8364-4682
CR Ahmed E, 2015, J NETW COMPUT APPL, V52, P154, DOI 10.1016/j.jnca.2015.03.001
   Akherfi K, 2017, APPL COMPUT INFORM, V14, P1
   [Anonymous], 2010, PROC 8 INT C MOBILE, DOI [DOI 10.1145/1814433, 10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   [Anonymous], 2012, Cuckoo: A computation offloading framework for smartphones, DOI DOI 10.1007/978-3-642-29336-84
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Chen X, 2015, IEEE T PARALL DISTR, V26, P974, DOI 10.1109/TPDS.2014.2316834
   Chun B.-G., 2010, ARXIV10093088
   Das M, 2016, RES J PHARM BIOL CHE, V7, P144
   Gill SS, 2019, INTERNET THINGS-NETH, V8, DOI 10.1016/j.iot.2019.100118
   Gill SS, 2019, J SYST SOFTWARE, V155, P104, DOI 10.1016/j.jss.2019.05.025
   Han B, 2012, IEEE T MOBILE COMPUT, V11, P821, DOI 10.1109/TMC.2011.101
   Khalid O., 2019, EURASIP J WIREL COMM, V2019, P1
   Khan AUR, 2015, J GRID COMPUT, V13, P605, DOI 10.1007/s10723-015-9335-x
   Khan AUR, 2014, IEEE COMMUN SURV TUT, V16, P393, DOI 10.1109/SURV.2013.062613.00160
   Kosta S., 2011, ARXIV11053232
   Ma R. K. K., 2011, Proceedings of the 2011 International Conference on Cloud and Service Computing (CSC 2011), P103, DOI 10.1109/CSC.2011.6138505
   Mach P, 2017, IEEE COMMUN SURV TUT, V19, P1628, DOI 10.1109/COMST.2017.2682318
   Mollah MB, 2017, J NETW COMPUT APPL, V84, P38, DOI 10.1016/j.jnca.2017.02.001
   MUKHERJEE M, 2019, IEEE ICC
   Reichl P, 2010, ANN TELECOMMUN, V65, P189, DOI 10.1007/s12243-009-0144-8
   Ristenpart T, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P199
   Roy DG, 2017, J SUPERCOMPUT, V73, P1672, DOI 10.1007/s11227-016-1872-y
   Satyanarayanan M, 2005, PERVASIVE MOB COMPUT, V1, P157, DOI 10.1016/j.pmcj.2005.03.005
   Standaert FX, 2010, INTEGR CIRCUIT SYST, P27, DOI 10.1007/978-0-387-71829-3_2
   van Nieuwpoort RV, 2005, CONCURR COMP-PRACT E, V17, P1079, DOI 10.1002/cpe.860
   Wu J, 2018, PROCEEDINGS OF THE 2018 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING AND PROCEEDINGS OF THE 2018 ACM INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS (UBICOMP/ISWC'18 ADJUNCT), P852, DOI 10.1145/3267305.3274173
   Zhou BW, 2017, IEEE T SERV COMPUT, V10, P797, DOI 10.1109/TSC.2015.2511002
   Zhou BW, 2019, J SYST SOFTWARE, V152, P151, DOI 10.1016/j.jss.2019.03.003
   Zhou QM, 2020, ELECTRON J QUAL THEO, P1, DOI 10.14232/ejqtde.2020.1.10
NR 29
TC 17
Z9 17
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2021
VL 51
IS 9
SI SI
BP 1896
EP 1909
DI 10.1002/spe.2850
EA MAY 2020
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT9JV
UT WOS:000536392200001
OA Green Accepted, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Dharminder, D
   Mishra, D
   Rodrigues, JJPC
   Rabelo, RDL
   Saleem, K
AF Dharminder, Dharminder
   Mishra, Dheerendra
   Rodrigues, Joel J. P. C.
   Rabelo, Ricardo de A. L.
   Saleem, Kashif
TI PSSCC: Provably secure communication framework for crowdsourced
   industrial Internet of Things environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; industrial crowdsourcing; Industry 4; 0; Internet of things
   (IoT); security; signcryption technique
ID IDENTITY-BASED SIGNCRYPTION
AB Internet of things environment is adopted widely in different industries and business organizations with varying capacity. It provides a favorable environment to outsource the crowdsourced data in the cloud to minimize the cost of computation, which is called crowdsourcing. Crowdsourcing is a technique where individuals or organizations obtain goods and services. A professional or industry outsource the crowdsourced data in the cloud, where confidentiality and authenticity of data become essential. Signcryption is the cryptographic technique that serves both the authenticity and the privacy of transmitted messages. This technique ensures secure authentic data transmission and storage. Therefore, this paper proposes an identity-based signcryption scheme. In the proposed PSSCC framework, the user does pairing free computation during signcryption, which makes efficient calculation on user-side. Moreover, PSSCC framework is proved secure under modified bilinear Diffie-Hellman inversion and modified bilinear strong Diffie-Hellman problems. The performance analysis of PSSCC with related schemes indicates that the proposed system supports efficient communication along with less computation cost.
C1 [Dharminder, Dharminder; Mishra, Dheerendra] LNM Inst Informat Technol, Jaipur, Rajasthan, India.
   [Rodrigues, Joel J. P. C.; Rabelo, Ricardo de A. L.] Fed Univ Piaui UFPI, Teresina, PI, Brazil.
   [Rodrigues, Joel J. P. C.] Inst Telecomunicacoes, Aveiro, Portugal.
   [Rodrigues, Joel J. P. C.; Saleem, Kashif] King Saud Univ, CoEIA, Riyadh, Saudi Arabia.
C3 LNM Institute of Information Technology; Universidade Federal do Piaui;
   Universidade de Aveiro; King Saud University
RP Rodrigues, JJPC (corresponding author), Fed Univ Piaui UFPI, Teresina, PI, Brazil.
EM joeljr@ieee.org
RI Rodrigues, Joel J. P. C./A-8103-2013; Mishra, Dheerendra/C-4208-2017; de
   Andrade Lira Rabelo, Ricardo/AAN-3551-2020; Dharminder,
   Dharminder/AIA-7732-2022; Saleem, Kashif/K-1140-2012
OI Rodrigues, Joel J. P. C./0000-0001-8657-3800; Mishra,
   Dheerendra/0000-0001-8115-6397; de Andrade Lira Rabelo,
   Ricardo/0000-0003-1482-6404; Saleem, Kashif/0000-0001-8062-3301
FU FCT/MCTES; EU funds [UIDB/EEA/50008/2020]; Brazilian National Council
   for Scientific and Technological Development (CNPq) [309335/2017-5];
   King Saud University [RG-439-022]
FX This work was partially supported by FCT/MCTES through national funds
   and when applicable co-funded YEU funds under the Project
   UIDB/EEA/50008/2020; by Brazilian National Council for Scientific and
   Technological Development (CNPq) via Grant No. 309335/2017-5. The
   authors extend their appreciation to the Deanship of Scientific Research
   at King Saud University for funding this work through research group no
   (RG-439-022).
CR Alonso Omar, 2008, SIGIR Forum, V42, P9, DOI 10.1145/1480506.1480508
   Alonso O, 2013, INFORM RETRIEVAL, V16, P101, DOI 10.1007/s10791-012-9204-1
   [Anonymous], 2015, P ACM INT WORKSH MOB
   [Anonymous], 2002, IACR Cryptol. ePrintArch.
   Aris H, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATION WORKSHOPS (PERCOM WORKSHOPS)
   Aris H, 2015, IEEE ST CONF RES DEV, P659, DOI 10.1109/SCORED.2015.7449420
   Bellare M, 2004, LECT NOTES COMPUT SC, V3027, P171
   Brabham DC, 2013, MIT PRESS ESSENT, P1
   Canetti R, 2004, J ACM, V51, P557, DOI 10.1145/1008731.1008734
   Carter S., 2012, 2012 Third International Conference on Emerging Intelligent Data and Web Technologies (EIDWT 2012), P302, DOI 10.1109/EIDWT.2012.17
   Castiglione A, 2016, IEEE T INF FOREN SEC, V11, P2349, DOI 10.1109/TIFS.2016.2581147
   Chatzimilioudis G, 2012, IEEE INTERNET COMPUT, V16, P36, DOI 10.1109/MIC.2012.70
   Chaudhary R, 2019, IEEE INTERNET THINGS, V6, P4897, DOI 10.1109/JIOT.2018.2878707
   Chaudhary R, 2018, IEEE COMMUN MAG, V56, P24, DOI 10.1109/MCOM.2018.1700787
   Dharminder D, 2020, T EMERG TELECOMMUN T, V31, DOI 10.1002/ett.3810
   Doan A, 2011, COMMUN ACM, V54, P86, DOI 10.1145/1924421.1924442
   Dominguez-Sal D, 2012, ADV DATA MIN DATABAS, P1, DOI 10.4018/978-1-61350-053-8.ch001
   Estellés-Arolas E, 2012, J INF SCI, V38, P189, DOI 10.1177/0165551512437638
   Howe J, 2006, WIRED, V14, P1, DOI DOI 10.1086/599595
   Hussain A, 2015, US Patent App, Patent No. [9,124,569, 9124569]
   Jin ZP, 2010, COMPUT ELECTR ENG, V36, P545, DOI 10.1016/j.compeleceng.2009.12.009
   Jobanputra A, 2015, US Patent, Patent No. [9,032,091, 9032091]
   Karati A, 2018, IEEE INTERNET THINGS, V5, P2904, DOI 10.1109/JIOT.2017.2741580
   Kohler T, 2019, R&D MANAGE, V49, P356, DOI 10.1111/radm.12372
   KURTZ SA, 1983, INFORM CONTROL, V57, P40, DOI 10.1016/S0019-9958(83)80023-0
   Li FG, 2013, MATH COMPUT MODEL, V57, P2685, DOI 10.1016/j.mcm.2011.06.043
   Libert B, 2003, 2003 IEEE INFORMATION THEORY WORKSHOP, PROCEEDINGS, P155, DOI 10.1109/ITW.2003.1216718
   Luo M, 2018, WIRELESS PERS COMMUN, V98, P2693, DOI 10.1007/s11277-017-4995-4
   Merkle M, 2019, US Patent App, Patent No. [10,268,566, 10268566]
   Musa E, 2019, IGI GLOBAL, P83, DOI [10.4018/978-1-5225-8182-6.ch005, DOI 10.4018/978-1-5225-8182-6.CH005]
   Nalla D., 2003, IACR CRYPTOLOGY EPRI, V2003, P66
   Nitu C, 2018, US Patent, Patent No. [10,096,183, 10096183]
   Paterson KG, 2002, ELECTRON LETT, V38, P1025, DOI 10.1049/el:20026682
   Poetz MK, 2012, J PROD INNOVAT MANAG, V29, P245, DOI 10.1111/j.1540-5885.2011.00893.x
   Selvi S. Sharmila Deva, 2012, Provable Security. Proceedings of the 6th International Conference (ProvSec 2012), P35, DOI 10.1007/978-3-642-33272-2_4
   Shamir A., 1985, Advances in Cryptology, V84 4, P47, DOI 10.1007/3-540-39568-7_5
   Simperl Elena, 2015, LIBER Quarterly, V25, P18
   Simula H, 2014, IND MARKET MANAG, V43, P400, DOI 10.1016/j.indmarman.2013.12.008
   Soares J, 2015, IEEE COMMUN MAG, V53, P98, DOI 10.1109/MCOM.2015.7045397
   Spero YE, 2016, US Patent App, Patent No. [14/591,909, 14591909]
   Suendermann D, 2013, CROWDSOURCING SPEECH, P280
   Vukovic M, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P686, DOI 10.1109/SERVICES-I.2009.56
   Wang C, 2012, IEEE INFOCOM SER, P451, DOI 10.1109/INFCOM.2012.6195784
   Wang DH, 2010, IEEE PEDG 2010: THE 2ND INTERNATIONAL SYMPOSIUM ON POWER ELECTRONICS FOR DISTRIBUTED GENERATION SYSTEMS, P1, DOI 10.1109/PEDG.2010.5545769
   Waters B, 2005, LECT NOTES COMPUT SC, V3494, P114
   Wei GY, 2015, INFORM SCIENCES, V318, P111, DOI 10.1016/j.ins.2014.05.034
   Yu Y, 2009, COMPUT STAND INTER, V31, P56, DOI 10.1016/j.csi.2007.10.014
   Zhang Q, 2018, IEEE T IND INFORM, V14, P3023, DOI [10.1109/TII.2017.2766095, 10.1109/TII.2018.2791424]
   Zheng YL, 1997, LECT NOTES COMPUT SC, V1294, P165
   Zhou CX, 2017, WIRELESS PERS COMMUN, V92, P495, DOI 10.1007/s11277-016-3554-8
NR 50
TC 9
Z9 9
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2022
VL 52
IS 3
SI SI
BP 744
EP 755
DI 10.1002/spe.2826
EA MAR 2020
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA YS2YA
UT WOS:000522498200001
DA 2024-07-18
ER

PT J
AU Ghazvini, GA
   Mohsenzadeh, M
   Nasiri, R
   Rahmani, AM
AF Ghazvini, Golnaz Aghaee
   Mohsenzadeh, Mehran
   Nasiri, Ramin
   Rahmani, Amir Masoud
TI MMLT: A mutual multilevel trust framework based on trusted third parties
   in multicloud environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fuzzy logic; multicloud environment; mutual trust management; ranking
   trusted services
ID MANAGEMENT FRAMEWORK; CLOUD; TRUSTWORTHINESS
AB In this article, a mutual multilevel trust framework is proposed, which involves managing trust from the perspective of cloud users (CUs) and cloud service providers (CSPs) in a multicloud environment based on a set of trusted third parties (TTPs). These independent agents are trusted by CUs and CSPs and distributed on different clouds. The TTPs evaluate the CUs' trustworthiness based on the accuracy of feedback ratings and assess the CSPs' trustworthiness based on the quality of service monitoring information. They are connected themselves through the trusted release network, which enables a TTP to obtain trust information about CSPs and CUs from other clouds. With the objective of developing an effective trust management framework, a new approach has been provided to improve trust-based interactions, that is, able to rank the trusted cloud services (CSs) based on CU's priorities via fuzzy logic. Fuzzy logic is applied to manage the different priorities of CUs, all the CUs do not have the same priorities to use trusted CSs. Customizing service ranking allows CUs to apply trusted CSs based on their priorities. Experiments on real datasets well matched the analytical results, indicating that our proposed approach is effective and outperforms the existing approaches.
C1 [Ghazvini, Golnaz Aghaee; Mohsenzadeh, Mehran; Rahmani, Amir Masoud] Islamic Azad Univ, Dept Comp Engn, Sci & Res Branch, Tehran, Iran.
   [Nasiri, Ramin] Islamic Azad Univ, Cent Tehran Branch, Dept Comp Engn, Tehran, Iran.
C3 Islamic Azad University; Islamic Azad University
RP Mohsenzadeh, M (corresponding author), Islamic Azad Univ, Dept Comp Engn, Sci & Res Branch, Tehran, Iran.
EM mohsenzadeh@srbiau.ac.ir
RI Mohsenzadeh, Mehran/AAA-4884-2022; Rahmani, Amir Masoud/K-2702-2013;
   aghaee, golnaz/AAO-2582-2021; Nassiri, Ramin/AFA-6222-2022
OI Mohsenzadeh, Mehran/0000-0001-6835-409X; Rahmani, Amir
   Masoud/0000-0001-8641-6119; 
CR Abadi RMB, 2018, SOFTWARE PRACT EXPER, V48, P1688, DOI 10.1002/spe.2582
   Agheli N, 2014, 2014 4TH INTERNATIONAL CONFERENCE ON COMPUTER AND KNOWLEDGE ENGINEERING (ICCKE), P251, DOI 10.1109/ICCKE.2014.6993418
   Alhamad Mohammed, 2010, Proceedings of the 13th International Conference on Network-Based Information Systems (NBiS 2010), P321, DOI 10.1109/NBiS.2010.67
   Alhanahnah M, 2018, FUTURE GENER COMP SY, V79, P488, DOI 10.1016/j.future.2017.09.071
   Alhanahnah M, 2017, IEEE CLOUD COMPUT, V4, P44, DOI 10.1109/MCC.2017.20
   [Anonymous], J SOFTWARE ENG APPL
   Chakraborty S., 2012, 2012 IEEE 11th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom), P937, DOI 10.1109/TrustCom.2012.84
   Chiregi Matin, 2018, Journal of Electrical Systems and Information Technology, V5, P608, DOI 10.1016/j.jesit.2017.09.001
   Chiregi M, 2016, COMPUT HUM BEHAV, V60, P280, DOI 10.1016/j.chb.2016.02.029
   Contractor Dipen, 2017, International Journal of Network Security, V19, P251, DOI 10.6633/IJNS.201703.19(2).10
   Du ZH, 2017, FUTURE GENER COMP SY, V74, P337, DOI 10.1016/j.future.2016.01.002
   Fan WJ, 2015, INT J AUTOM COMPUT, V12, P208, DOI 10.1007/s11633-014-0840-3
   Fan WJ, 2014, KNOWL-BASED SYST, V70, P392, DOI 10.1016/j.knosys.2014.07.018
   Ibrahim FAM, 2019, COMPUT SECUR, V82, P196, DOI 10.1016/j.cose.2018.12.014
   Jayaraman PP, 2018, J SOFTW PRACT EXP, V47, P1139
   Ko R. K. L., 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P584, DOI 10.1109/SERVICES.2011.91
   Mao CY, 2017, IEEE ACCESS, V5, P2187, DOI 10.1109/ACCESS.2017.2654378
   Matthew Kiran Mary, 2017, International Journal of Computer Network and Information Security, V9, P36, DOI 10.5815/ijcnis.2017.02.05
   Muchahari MK, 2012, 2012 INTERNATIONAL SYMPOSIUM ON CLOUD AND SERVICES COMPUTING (ISCOS 2012), P136, DOI 10.1109/ISCOS.2012.30
   Papadakis-Vlachopapadopoulos K, 2019, FUTURE GENER COMP SY, V100, P498, DOI 10.1016/j.future.2019.05.030
   Prasad V.K., 2018, P 3 INT C INTERNET T, P26
   Rizvi S, 2015, PROCEDIA COMPUT SCI, V61, P191, DOI 10.1016/j.procs.2015.09.192
   Ruan YF, 2019, COMPUT COMMUN, V144, P124, DOI 10.1016/j.comcom.2019.05.018
   Singh S, 2017, FUTURE GENER COMP SY, V67, P109, DOI 10.1016/j.future.2016.07.013
   Su K, 2017, KNOWL-BASED SYST, V115, P55, DOI 10.1016/j.knosys.2016.09.033
   Tang CL, 2015, COMPUT SECUR, V50, P60, DOI 10.1016/j.cose.2015.02.001
   Tang MD, 2017, FUTURE GENER COMP SY, V74, P302, DOI 10.1016/j.future.2016.01.009
   Varalakshmi P, 2017, COMPUT ELECTR ENG, V59, P110, DOI 10.1016/j.compeleceng.2016.10.002
   Vu LH, 2005, LECT NOTES COMPUT SC, V3760, P466
   Wang YZ, 2015, COMPUT SECUR, V52, P106, DOI 10.1016/j.cose.2015.04.005
   Yau SS, 2010, LECT NOTES COMPUT SC, V6407, P208, DOI 10.1007/978-3-642-16576-4_15
NR 31
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1203
EP 1227
DI 10.1002/spe.2798
EA FEB 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT6RF
UT WOS:000513249600001
DA 2024-07-18
ER

PT J
AU Guo, JQ
   Shen, GC
   Su, YC
   Zhao, J
   Wu, H
   Zhu, ZL
AF Guo, Junqi
   Shen, Guicheng
   Su, Yichen
   Zhao, Jin
   Wu, Hao
   Zhu, Zhilin
TI Field of experts optimization-based noisy image retrieval
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE FoE; multioption filters; noisy image retrieval; sparse coding
ID FEATURES; MODEL
AB The value of image retrieval has become more and more prominent in the era of big data. However, large numbers of images are missed from current method since the image retrieval precision largely depends on the high quality of images. By common methodology, when the quality of images decreases a little, the accuracy of retrieval would decrease significantly. In particular, it is difficult to retrieve noisy images effectively by conventional approach. Yet large number of the noisy images could not be ignored at the age of data explosion. Aiming at the problem above, we proposed noisy image retrieval model based on field of experts (FoE) optimization. High-quality learning images could be selected by sparse coding, which is based on similarity calculation model, and the multioption filter combination model enhances the power of FoE model. We set up a database containing a large numbers of noisy images. Over this database, adequate groups of experiments are conducted. The verification of the method concluded its effectiveness and superiority.
C1 [Guo, Junqi; Su, Yichen; Wu, Hao] Beijing Normal Univ, Sch Artificial Intelligence, Beijing, Peoples R China.
   [Guo, Junqi; Wu, Hao] Minist Educ, Engn Res Ctr Intelligent Technol & Educ Applicat, Beijing, Peoples R China.
   [Shen, Guicheng] Beijing Wuzi Univ, Sch Informat, Beijing, Peoples R China.
   [Zhao, Jin] Beijing Normal Univ, Sch Math Sci, Beijing, Peoples R China.
   [Zhu, Zhilin] Shandong Technol & Business Univ, Sch Informat & Elect Engn, Yantai, Shandong, Peoples R China.
C3 Beijing Normal University; Beijing Wuzi University; Beijing Normal
   University; Shandong Technology & Business University
RP Zhu, ZL (corresponding author), Shandong Technol & Business Univ, Sch Informat & Elect Engn, Yantai, Shandong, Peoples R China.
EM zzlytsd@163.com
RI Zhu, Zhilin/L-7658-2019
FU Co-innovation Center of Shandong Colleges and Universities: Future
   Intelligent Computing; Educational Big Data R&D and its Application,
   Major Big Data Engineering Project of National Dev; National Natural
   Science Foundation of China [61977006, 61601033]; Shandong Natural
   Science Foundation of China [ZR2019MF069]; Yantai science and technology
   plan project [2017ZH063]
FX Co-innovation Center of Shandong Colleges and Universities: Future
   Intelligent Computing; Educational Big Data R&D and its Application,
   Major Big Data Engineering Project of National Dev; National Natural
   Science Foundation of China, 61977006, 61601033; Shandong Natural
   Science Foundation of China, ZR2019MF069; Yantai science and technology
   plan project, 2017ZH063
CR [Anonymous], COMP VIS PATT REC 20
   [Anonymous], 2007, Scholarpedia, DOI [DOI 10.4249/SCHOLARPEDIA.3879, 10.4249/SCHOLARPEDIA.3879, 10.4249/scholarpedia.3879, DOI 10.4249/SCHOLARPEDIA.3879.REVISION#137078]
   [Anonymous], 2011, IMAGE CLASSIFICATION
   [Anonymous], P ACM INT C IM VID R
   [Anonymous], COMP VIS PATT REC 20
   Arora S., 2015, C LEARNING THEORY, P113
   Berens J, 2000, IEE P-VIS IMAGE SIGN, V147, P349, DOI 10.1049/ip-vis:20000630
   Bi XH, 2019, OPTIK, V182, P793, DOI 10.1016/j.ijleo.2019.01.033
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Eakins J., 1999, Content based image retrieval: A report to the JISC technology applications programme
   Farhadi A, 2009, PROC CVPR IEEE, P1778, DOI 10.1109/CVPRW.2009.5206772
   Getoor, 2011, P 28 INT C MACH LEAR, P833
   GIRSHICK R, 2015, 2014 IEEE INT C COMP
   Girshick R, 2014, PROC CVPR IEEE, P580, DOI 10.1109/CVPR.2014.81
   Guo YM, 2016, NEUROCOMPUTING, V187, P27, DOI 10.1016/j.neucom.2015.09.116
   Hays J, 2007, ACM T GRAPHIC, V26, DOI 10.1145/1239451.1239455
   He KM, 2014, LECT NOTES COMPUT SC, V8691, P346, DOI [arXiv:1406.4729, 10.1007/978-3-319-10578-9_23]
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   HOROWITZ E, 1981, IEEE T COMPUT, V30, P247, DOI 10.1109/TC.1981.1675772
   Jain AK, 2010, PATTERN RECOGN LETT, V31, P651, DOI 10.1016/j.patrec.2009.09.011
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Li YL, 2017, OPTIK, V142, P174, DOI 10.1016/j.ijleo.2017.05.077
   Li Z., 2017, CORR
   Liu W, 2016, LECT NOTES COMPUT SC, V9905, P21, DOI 10.1007/978-3-319-46448-0_2
   Lowe DG, 2004, INT J COMPUT VISION, V60, P91, DOI 10.1023/B:VISI.0000029664.99615.94
   Ngiam J., 2011, P 28 INT C MACHINE L, P1105, DOI 10.5555/3104482.3104621
   Nowak E, 2006, LECT NOTES COMPUT SC, V3954, P490
   Peng XJ, 2016, LECT NOTES COMPUT SC, V9908, P744, DOI 10.1007/978-3-319-46493-0_45
   Raftery AE, 1995, SOCIOL METHODOL, V25, P111, DOI 10.2307/271063
   Ranzato M., 2006, ADV NEURAL INFORM PR, V19, P1137, DOI DOI 10.7551/MITPRESS/7503.003.0147
   Redmon J, 2018, Arxiv, DOI [arXiv:1804.02767, DOI 10.1109/CVPR.2017.690, DOI 10.48550/ARXIV.1804.02767]
   Redmon J, 2016, PROC CVPR IEEE, P779, DOI 10.1109/CVPR.2016.91
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Rui Y, 1999, J VIS COMMUN IMAGE R, V10, P39, DOI 10.1006/jvci.1999.0413
   Salakhutdinov R., 2009, AISTATS
   Uijlings JRR, 2013, IJCV, DOI DOI 10.1007/S11263-013-0620-5
   van de Sande KEA, 2008, PROC CVPR IEEE, P2463
   Van Ginneken B, 1999, INT J COMPUT VISION, V31, P169, DOI 10.1023/A:1008018015948
   Vincent Pascal, 2008, P 25 INT C MACHINE L, DOI DOI 10.1145/1390156.1390294
   Wu H, 2018, J VIS COMMUN IMAGE R, V55, P415, DOI 10.1016/j.jvcir.2018.06.021
   Wu H, 2015, VISUAL COMPUT, V31, P367, DOI 10.1007/s00371-014-0931-8
   Wu HC, 2018, MATER CORROS, V69, P1572, DOI 10.1002/maco.201810201
   Yu J, 2015, IEEE T CYBERNETICS, V45, P767, DOI 10.1109/TCYB.2014.2336697
   Zeiler MD, 2014, LECT NOTES COMPUT SC, V8689, P818, DOI 10.1007/978-3-319-10590-1_53
   Zheng YT, 2009, VISUAL COMPUT, V25, P13, DOI 10.1007/s00371-008-0294-0
NR 45
TC 0
Z9 0
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2020
VL 50
IS 11
SI SI
BP 2110
EP 2118
DI 10.1002/spe.2788
EA FEB 2020
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NW3WG
UT WOS:000510766700001
DA 2024-07-18
ER

PT J
AU Bouzerzour, NE
   Ghazouani, S
   Slimani, Y
AF Bouzerzour, Nour El Houda
   Ghazouani, Souad
   Slimani, Yahya
TI A survey on the service interoperability in cloud computing:
   Client-centric and provider-centric perspectives
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE client-centric perspective; cloud computing; cloud services;
   interoperability environments; interoperability levels; provider-centric
   perspective
ID HYBRID CLOUD; ARCHITECTURE; FRAMEWORK; PROTOCOL
AB The vendor lock-in is a prominent issue in cloud computing. It is caused by cloud providers who offer proprietary services, which hinders the cloud interoperability. Client-centric interoperability enables the migration of the data and applications across clouds; it gives the clients control over their workloads and a wider range of service choices. Whereas, provider-centric interoperability allows the providers to collaborate. Thus, providers, who have spare resources, can lend them to other providers who lack computational or storage capabilities to overcome the limitations of their local resources. In this article, we conduct a survey to differentiate between client- and provider-centric interoperability solutions. We aim to provide an up-to-date analysis of the current tendencies and the neglected areas of the cloud interoperability field. Thus, we study the cloud service interoperability evolution through the years. Furthermore, we propose definitions for the intra-cloud and inter-cloud interoperability. Moreover, we propose a taxonomy to classify the cloud interoperability approaches into client-centric and provider-centric categories. Then, for each category, we classify the approaches based on their interoperability environment into single cloud or interconnected clouds. Finally, we analyze and compare the approaches based on multiple criteria. The study reveals the focus on the client-centric solutions and the interoperability in interconnected clouds. We notice more interest in the data and application levels interoperability, mainly, in infrastructure as a service model. We also find that client-centric solutions are, mostly, semantic technologies and brokers. However, provider-centric solutions are middleware, protocols, and standards. We conclude that a generic cloud service interoperability model is needed.
C1 [Bouzerzour, Nour El Houda; Ghazouani, Souad; Slimani, Yahya] Carthage Univ, LISI Lab Comp Sci Ind Syst, Tunis, Tunisia.
   [Bouzerzour, Nour El Houda; Ghazouani, Souad] Univ Manouba, ENSI Natl Sch Comp Sci, ENSI, Campus Univ Manouba, Manouba, Tunisia.
   [Slimani, Yahya] Univ Manouba, ISAMM Higher Inst Multimedia Art Manouba, ISAMM, Campus Univ Manouba, Manouba, Tunisia.
C3 Universite de Carthage; Universite de la Manouba; Universite de la
   Manouba
RP Bouzerzour, NE (corresponding author), Univ Manouba, ENSI, Campus Univ Manouba, Manouba 2010, Tunisia.
EM nourelhouda.bouzerzour@ensi-uma.tn
OI GHAZOUANI, Souad/0000-0002-7832-6436; BOUZERZOUR, Nour El
   Houda/0000-0002-8785-6631
CR Aazam M, 2014, 2014 INTERNATIONAL CONFERENCE ON CLOUD AND AUTONOMIC COMPUTING (ICCAC 2014), P206, DOI 10.1109/ICCAC.2014.30
   Afsari K, 2017, INT J ARCHIT COMPUT, V15, P187, DOI 10.1177/1478077117731174
   Alhumud MA, 2016, IEEE INT CONF MULTI
   Ali H, 2016, PROCEEDINGS OF 2016 IEEE INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA ANALYSIS (ICCCBDA 2016), P250, DOI 10.1109/ICCCBDA.2016.7529566
   Alipour H, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2018), P93, DOI 10.1109/ICSA-C.2018.00033
   Alomari E, 2014, 16TH INTERNATIONAL CONFERENCE ON INFORMATION INTEGRATION AND WEB-BASED APPLICATIONS & SERVICES (IIWAS 2014), P126
   Androcec D, 2016, CYBERN INF TECHNOL, V16, P29, DOI 10.1515/cait-2016-0065
   Androcec D, 2015, IEEE WORLD CONGR SER, P349, DOI 10.1109/SERVICES.2015.60
   [Anonymous], 2009, Infosys Technol. Limited/SETLabs Briefings
   [Anonymous], P 4 INT C CLOUD COMP
   [Anonymous], 2012, 7 S E EUR DOCT STUD
   Ardagna D., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P50, DOI 10.1109/MISE.2012.6226014
   Arunkumar G, 2015, PROCEDIA COMPUT SCI, V50, P554, DOI 10.1016/j.procs.2015.04.083
   Assis MRM, 2016, J NETW COMPUT APPL, V72, P51, DOI 10.1016/j.jnca.2016.06.014
   Bahga A, 2013, IEEE J BIOMED HEALTH, V17, P894, DOI 10.1109/JBHI.2013.2257818
   Barlaskar E, 2017, CLOSER: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P560, DOI 10.5220/0006355905880595
   Bassiliades N, 2018, DATA KNOWL ENG, V113, P81, DOI 10.1016/j.datak.2017.11.001
   Beibei Pang, 2019, 2019 IEEE 21st International Conference on High Performance Computing and Communications; IEEE 17th International Conference on Smart City; IEEE 5th International Conference on Data Science and Systems (HPCC/SmartCity/DSS). Proceedings, P2659, DOI 10.1109/HPCC/SmartCity/DSS.2019.00373
   BEISIEGEL M, 2005, BEA IBM INT IONA OR
   Bernstein D, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES, P328, DOI 10.1109/ICIW.2009.55
   Brasileiro F, 2016, IEEE 30TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA 2016), P165, DOI 10.1109/WAINA.2016.128
   BROGI A, 2014, SIGSOFT SOFTW ENG NO, V39, P1, DOI DOI 10.1145/2557833.2557844
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Cardoso Jorge, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P1, DOI 10.1007/978-3-642-38709-8_1
   Cardoso J., 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P602, DOI 10.1109/SCC.2010.93
   Cardoso J, 2015, LECT NOTES BUS INF P, V201, P50, DOI 10.1007/978-3-319-14980-6_5
   Carrasco J, 2018, COMPUT STAND INTER, V58, P167, DOI 10.1016/j.csi.2018.01.005
   Carrasco J, 2016, IEEE INT CONF CLOUD, P951, DOI 10.1109/CLOUD.2016.0143
   Celesti A, 2013, IEEE SYMP COMP COMMU
   CHALLITA S, 2018, P CLOUD 2018 11 IEEE
   Challita S, 2017, IEEE INT CONF CLOUD, P710, DOI 10.1109/CLOUD.2017.98
   CHETAL A, 2011, INTEROPERABILITY POR
   *CIMI, 2012, CLOUD INFR MAN INT 1
   CROSBY S, 2010, OPEN VIRTUALIZATION
   de Carvalho JO, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P448, DOI 10.5220/0006705604480455
   Demchenko Y, 2012, CLOUD COMPUTING, P174
   Di Martino B, 2016, PROCEDIA COMPUT SCI, V97, P104, DOI 10.1016/j.procs.2016.08.285
   Díaz-Sánchez F, 2014, INT CONF CLOUD ENG, P397, DOI 10.1109/IC2E.2014.62
   Dillon T, 2010, INT CON ADV INFO NET, P27, DOI 10.1109/AINA.2010.187
   Dowell S., 2011, Proceedings of the 2011 6th International Conference on System of Systems Engineering (SoSE), P258, DOI 10.1109/SYSOSE.2011.5966607
   Dreibholz T, 2019, EUROMICRO WORKSHOP P, P59, DOI 10.1109/EMPDP.2019.8671599
   Duan YC, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P621, DOI 10.1109/CLOUD.2015.88
   Edmonds A, 2012, IEEE INTERNET COMPUT, V16, P15, DOI 10.1109/MIC.2012.65
   ELANGO DM, 2017, P EUR C SERV OR CLOU, P86
   Elliott D, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P958, DOI 10.1109/CLOUD.2018.00145
   EMEAKAROHA VC, 2013, P EUR PAR 2013 PAR P, P65
   Emeakaroha VC, 2016, IEEE INT CONF CL NET, P158, DOI 10.1109/CloudNet.2016.37
   Fazio M, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON CLOUD ENGINEERING (IC2E 2015), P480, DOI 10.1109/IC2E.2015.80
   Ferry N, 2014, INT CONF UTIL CLOUD, P269, DOI 10.1109/UCC.2014.36
   Ferry N, 2013, IEEE INT CONF CLOUD, P887, DOI 10.1109/CLOUD.2013.133
   Ferry Nicolas., 2013, P 2 NORDIC S CLOUD C, P38, DOI [10.1145/2513534.2513542, DOI 10.1145/2513534.2513542]
   FISHMAN A, 2013, P 5 USENIX WORKSH HO
   Goonasekera N, 2016, PROCEEDINGS OF XSEDE16: DIVERSITY, BIG DATA, AND SCIENCE AT SCALE, DOI 10.1145/2949550.2949648
   Gracia-Tinedo R, 2018, FUTURE GENER COMP SY, V78, P1055, DOI 10.1016/j.future.2017.01.027
   Grozev N, 2014, SOFTWARE PRACT EXPER, V44, P369, DOI 10.1002/spe.2168
   Hoare S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915971
   Hoare S, 2016, 2016 INT IEEE CONFERENCES ON UBIQUITOUS INTELLIGENCE & COMPUTING, ADVANCED & TRUSTED COMPUTING, SCALABLE COMPUTING AND COMMUNICATIONS, CLOUD AND BIG DATA COMPUTING, INTERNET OF PEOPLE, AND SMART WORLD CONGRESS (UIC/ATC/SCALCOM/CBDCOM/IOP/SMARTWORLD), P788, DOI [10.1109/UIC-ATC-ScalCom-CBDCom-IoP-SmartWorld.2016.70, 10.1109/UIC-ATC-ScalCom-CBDCom-IoP-SmartWorld.2016.0126]
   Javanmardi S, 2014, ADV INTELL SYST, V303, P43, DOI 10.1007/978-3-319-08156-4_5
   JIA Q, 2015, ACM SIGOPS OPERATING, V49, P137
   Jimenez JM, 2019, IEEE NETWORK, V33, P106, DOI 10.1109/MNET.2018.1300246
   Jrad Foued, 2012, Proceedings of the 2nd International Conference on Cloud Computing and Services Science (CLOSER 2012), P76
   Ferrer AJ, 2016, PROCEDIA COMPUT SCI, V97, P63, DOI 10.1016/j.procs.2016.08.281
   Kamateri Eleni, 2013, Service-Oriented and Cloud Computing. Second European Conference (ESOCC 2013). Proceedings: LNCS 8135, P64, DOI 10.1007/978-3-642-40651-5_6
   KANT C, 2013, INT J COMPUT SCI COM, V4, P73
   KATARZYNA M, 2016, MELODIC MULTICLOUD M
   Kaur G., 2017, International Journal of Advanced Research in Computer Science, V8, P939, DOI DOI 10.26483/IJARCS.V8I5.3499
   Kaur K, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092698
   Kim Hyunjoo., 2011, COMETCLOUD AUTONOMIC, P275
   Kirthica S, 2017, J NETW COMPUT APPL, V85, P32, DOI 10.1016/j.jnca.2016.12.009
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Ko RKL, 2011, IEEE INT CONF TRUST, P765, DOI 10.1109/TrustCom.2011.100
   KOSTOSKA M, 2014, P TOSCA PORTABILITY
   Kostoska M, 2016, ACSIS-ANN COMPUT SCI, V8, P873, DOI 10.15439/2016F463
   Kostoska Magdalena., 2012, CEUR Workshop Proceedings, V920, P30
   Kreps Jay, 2011, P NETDB, P1, DOI DOI 10.1007/BF00640482
   Lenk A, 2014, INT CONF CLOUD ENG, P245, DOI 10.1109/IC2E.2014.21
   Levin A, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P1021, DOI 10.1109/CLOUD.2015.141
   Lewis GA, 2013, P ANN HICSS, P1652, DOI 10.1109/HICSS.2013.470
   LIU D, 2017, P 50 ANN SIM S VIRG
   LIU F, 2011, NATL I STANDARDTEC
   Lloret J, 2014, INFORM SCIENCES, V258, P434, DOI 10.1016/j.ins.2013.05.003
   Longo A, 2016, IEEE 30TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA 2016), P153, DOI 10.1109/WAINA.2016.66
   Loutas E., 2011, IEEE 3 INT C CLOUDCO, P752
   Loutas N., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P280, DOI 10.1109/CloudCom.2011.45
   Loutas Nikolaos, 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P143, DOI 10.1109/CloudCom.2010.38
   MACHADO GS, 2009, P 27 OP GRID FOR OGF
   MANSOUR I, 2016, P INT C INT THINGS C
   MARINHO T, 2016, P 12 BRAZ S INF SYST
   Mell P, 2010, COMMUN ACM, V53, P50
   Mezgár I, 2014, COMPUT IND, V65, P657, DOI 10.1016/j.compind.2014.01.017
   Mîndruta C, 2011, INT SYMP SYMB NUMERI, P301, DOI 10.1109/SYNASC.2010.47
   Moreno-Vozmediano R., 2015, Revised Selected Papers, V4, P325
   Moreno-Vozmediano R, 2012, COMPUTER, V45, P65, DOI 10.1109/MC.2012.76
   Mostajeran E, 2015, 2015 SECOND INTERNATIONAL CONFERENCE ON COMPUTING TECHNOLOGY AND INFORMATION MANAGEMENT (ICCTIM), P25, DOI 10.1109/ICCTIM.2015.7224588
   Mukherjee S, 2014, PROC INT CONF EMERG, P119, DOI 10.1109/EAIT.2014.44
   Nithya S, 2014, 2014 INTERNATIONAL CONFERENCE ON INFORMATION COMMUNICATION AND EMBEDDED SYSTEMS (ICICES)
   NITHYASANTHI G, 2017, INT J ADV MULTIDISCI, V4, P21
   Nogueira Elias, 2016, Journal of Software Engineering Research and Development, V4, DOI 10.1186/s40411-016-0033-6
   Noy N., 2001, ONTOLOGY DEV
   *OASIS COMM, 2014, CLOUD APPL MAN PLATF
   OASIS Standard, 2013, Topology and orchestration specification for cloud applications version 1.0
   Opara-Martins J, 2014, 2014 INTERNATIONAL CONFERENCE ON INFORMATION SOCIETY (I-SOCIETY 2014), P92, DOI 10.1109/i-Society.2014.7009018
   Ouardi A., 2016, Int. J. Comput, V1, P47
   OUARDI A, 2017, INT SYM NETWO COMP, pNIL90
   Pahl Claus, 2013, CLOSER 2013. 3rd International Conference on Cloud Computing and Service Science. Proceedings, P123
   PARAISO F, 2012, 2012 IEEE 5 INT C CL, P392, DOI DOI 10.1109/CLOUD.2012.79
   Pedrinaci Carlos, 2014, The Semantic Web: Trends and Challenges. 11th International Conference (ESWC 2014). Proceedings: LNCS 8465, P68, DOI 10.1007/978-3-319-07443-6_6
   Peoples C., 2013, 2013 Science and Information Conference (SAI), P902
   Petcu D, 2013, Proceedings of the 2013 international workshop on Multi-cloud applications and federated clouds, P1, DOI [10.1145/2462326.2462328, DOI 10.1145/2462326.2462328]
   Petcu D, 2014, J GRID COMPUT, V12, P321, DOI [10.1007/s10723-013-9290-3, 10.1109/INFCOMW.2014.6849159]
   Petcu D, 2011, LECT NOTES COMPUT SC, V6994, P62, DOI 10.1007/978-3-642-24755-2_6
   PRADHAN K, 2012, SEMANTIC INTEROPERAB
   QUEIROZ SD, 2018, P CLOUD COMP 2018 9, P139
   Rafique A, 2014, IEEE CONF COMPUT, P7, DOI 10.1109/INFCOMW.2014.6849160
   Ranjan R, 2014, IEEE CLOUD COMPUT, V1, P20, DOI 10.1109/MCC.2014.41
   Rashidi Bahman, 2013, International Journal of Modern Education and Computer Science, V5, P17, DOI 10.5815/ijmecs.2013.06.03
   Razavi K, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON CLOUD ENGINEERING (IC2E 2015), P106, DOI 10.1109/IC2E.2015.19
   Rezaei R, 2014, EXPERT SYST APPL, V41, P5751, DOI 10.1016/j.eswa.2014.03.020
   Rochwerger B, 2009, IBM J RES DEV, V53, DOI 10.1147/JRD.2009.5429058
   Rosado T, 2014, PROCEEDINGS OF THE 18TH INTERNATIONAL DATABASE ENGINEERING AND APPLICATIONS SYMPOSIUM (IDEAS14), P366, DOI 10.1145/2628194.2628195
   Sahni S, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON CLOUD COMPUTING IN EMERGING MARKETS (CCEM), P128
   Saint-Andre P., 2011, EXTENSIBLE MESSAGING
   Sajid M., 2013, P INT C CLOUD BIG DA, V20, P13, DOI 10.1201/b16318-3
   Sakr S, 2011, IEEE COMMUN SURV TUT, V13, P311, DOI 10.1109/SURV.2011.032211.00087
   Sampaio A., 2011, P 2 INT WORKSHOP SOF, P15, DOI [10.1145/1985500.1985504, DOI 10.1145/1985500.1985504]
   Saravanakumar C, 2014, 2014 INTERNATIONAL CONFERENCE ON CONTEMPORARY COMPUTING AND INFORMATICS (IC3I), P977, DOI 10.1109/IC3I.2014.7019735
   Saravanan I, 2018, 2018 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P300, DOI 10.1109/ICACCI.2018.8554608
   Satyanarayanan M, 2017, COMPUTER, V50, P30, DOI 10.1109/MC.2017.9
   Sefraoui O., 2012, Int. J. Comput. Appl., V55, P38, DOI DOI 10.5120/8738-2991
   Senturk IF, 2018, FUTURE GENER COMP SY, V78, P379, DOI 10.1016/j.future.2016.06.008
   Shi T, 2019, P IEEE I C SERV COMP, P146, DOI 10.1109/SCC.2019.00034
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Shuai Zhang, 2010, 2010 International Conference on Computer Application and System Modeling (ICCASM 2010), P72, DOI 10.1109/ICCASM.2010.5623257
   Shvachko K, 2010, IEEE S MASS STOR SYS
   Srinivasan A, 2015, PROCEDIA COMPUT SCI, V50, P42, DOI 10.1016/j.procs.2015.04.059
   Stanik A., 2012, Proceedings of the 2012 8th International Conference on Computing Technology and Information Management (NCM and ICNIT), P830
   Stanik A, 2012, INT CONF CLOUD COMP
   STANSBERRY B, 2008, JBOSS APPL SERVER CL
   *STOR NETW IND ASS, 2015, CLOUD DAT MAN INT VE
   Stravoskoufos Kostas, 2014, 4th International Conference on Cloud Computing and Services Science (CLOSER 2014). Proceedings, P112
   SUJA TL, 2017, INT J INNOV ADV COMP, V6, P202
   Teckelmann R., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P522, DOI 10.1109/CloudCom.2011.78
   Thabet M, 2014, INT J SPACE-BASED SI, V4, P88, DOI 10.1504/IJSSC.2014.062469
   Thakur P, 2015, INT CONF COMPUT INTE, P908, DOI 10.1109/CICN.2015.179
   Toosi AN, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2593512
   TOOSI AN, 2017, VIRTUAL NETWORKING A, P93
   Tusa F., 2011, Proceedings of the 2011 IEEE 4th International Conference on Utility and Cloud Computing (UCC 2011), P390, DOI 10.1109/UCC.2011.65
   van Renesse R, 2018, IEEE INTERNET COMPUT, V22, P82, DOI 10.1109/MIC.2018.011581521
   Veloudis S, 2014, IFIP ADV INF COMM TE, V434, P621
   VIJAYAKUMAR S, 2014, INT J INNOVAT RES CO, V2, P38
   Walraven S, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-014-0017-x
   WILLIAMS D, 2012, P 4 ACM EUR C COMP S
   YAHYAPOUR R, 2010, P EUR C PAR PROC BER, P257
   Yang YL, 2018, IEEE ACCESS, V6, P46949, DOI 10.1109/ACCESS.2018.2865535
   Yasrab R, 2016, 2016 3RD INTERNATIONAL CONFERENCE ON INFORMATION SCIENCE AND CONTROL ENGINEERING (ICISCE), P473, DOI 10.1109/ICISCE.2016.108
   Yongsiriwit K, 2016, IEEE INT CONF CLOUD, P585, DOI [10.1109/CLOUD.2016.0083, 10.1109/CLOUD.2016.81]
   Zahara S, 2015, PROCEEDING OF 2015 1ST INTERNATIONAL CONFERENCE ON WIRELESS AND TELEMATICS (ICWT)
   Zamani AR, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5256
   ZARKO IP, 2019, P 2019 GLOB IOT SUMM, P1
   Zeginis D, 2013, SCALABLE COMPUT-PRAC, V14, P17, DOI 10.12694/scpe.v14i1.824
   Zhang Z., 2013, ACM SIGMETRICS Performance Evaluation Review, Association for Computing Machinery, V40, P13
   2010, CLOUD COMPUTING LARG
   2016, IEEE STANDARD GLOSSA
NR 163
TC 11
Z9 12
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1025
EP 1060
DI 10.1002/spe.2794
EA JAN 2020
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT6RF
UT WOS:000510317700001
DA 2024-07-18
ER

PT J
AU Koziolek, H
   Burger, A
   Platenius-Mohr, M
   Rückert, J
   Mendoza, F
   Braun, R
AF Koziolek, Heiko
   Burger, Andreas
   Platenius-Mohr, Marie
   Rueckert, Julius
   Mendoza, Francisco
   Braun, Roland
TI Automated industrial IoT-device integration using the OpenPnP reference
   architecture
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE client-server systems; control engineering; Internet of Things;
   real-time systems; software architecture
ID INTERNET; PLUG
AB Distributed control systems are currently evolving towards industrial Internet of Things (IoT) systems communicating fully using Internet protocols. This creates opportunities for streamlining costly commissioning processes, which today require substantial manual work for installing, configuring, and integrating thousands of actuators and sensors. The vision of "plug-and-produce" control systems has been pursued for more than 15 years, but existing approaches fell short regarding configuration tasks and vendor neutrality. This paper introduces the standards-based IoT reference architecture OpenPnP, which allows largely automating the configuration and integration tasks of industrial commissioning processes. The architecture includes a number of design and technology decisions and the required implementation can be scaled down to resource-constrained industrial devices. This paper demonstrates how OpenPnP can reduce configuration and integration efforts up to 90% in typical settings, while potentially scaling well up to tens of thousands of communicated signals. Practitioners can orient their implementations towards OpenPnP, therefore potentially enabling "plug-and-produce" in many thousands of control systems.
C1 [Koziolek, Heiko; Burger, Andreas; Platenius-Mohr, Marie; Rueckert, Julius; Mendoza, Francisco; Braun, Roland] ABB Corp Res Ctr Ladenburg, D-68526 Ladenburg, Germany.
RP Koziolek, H (corresponding author), ABB Corp Res Ctr Ladenburg, D-68526 Ladenburg, Germany.
EM heiko.koziolek@de.abb.com
RI Koziolek, Heiko/AAF-5917-2020
OI Koziolek, Heiko/0000-0002-8805-6206
CR ABB, 2016, DAT SHEET DS LLT100
   ABB, 2017, MULT TRANSM OV MULT
   ABB, 2016, DSTTH300EN ABB
   ABB, 2017, DAT SHEET DS 266DSH
   Alkhabbas F, 2017, P IEEE INT C SOFTW A
   [Anonymous], 2016, PLCOPEN OPC UA CLIEN
   [Anonymous], 2009, 61987102009 IEC
   [Anonymous], 2017, NE131
   [Anonymous], 2015, 6276912015 IEC
   [Anonymous], 2014, NE150
   [Anonymous], 2011, 2934111 ISOIEC
   Arai T, 2001, COMPUT IND, V46, P289, DOI 10.1016/S0166-3615(01)00111-7
   Bartelt T.L.M., 2010, IND AUTOMATED SYSTEM
   Bramsiepe C, 2012, CHEM-ING-TECH, V84, P581, DOI 10.1002/cite.201100250
   Bruckner D., 2018, OPC UA TSN A NEW SOL
   Burger Andreas, 2019, P ACM SPEC INT C PER
   Burzlaff F, 2018, P 2018 IEEE INT C SO
   Burzlaff F, 2017, P 2017 IEEE INT C SO
   Cenelec, 2013, 6113132013 IEC
   Cheng C-H, 2015, P 2015 10 JOINT M FD
   Clayton D, SUPPLIER AUTOMATION
   Dürkop L, 2015, IEEE INT C EMERG
   Durkop L, 2013, P 11 IEEE INT C IND
   Emerson, 2016, PROD DAT SHEET ROS P
   Emerson, 2017, PROD DAT SHEET ROS 3
   Emerson, 2016, PROD DAT SHEET ROS 5
   Endress+Hauser, 2015, TI01104D06EN04157130
   Endress+Hauser, 2017, TI01000F00EN20167134
   Endress+Hauser, 2016, TI01000F00EN20167134
   Endress+Hauser, 2016, TECHN INF TI00382P 0
   FieldComm Group, HART TECHN DET SECT
   Forbes H., 2017, DISTRIBUTED CONTROL
   Garlan D, 2014, P FUT SOFTW ENG HYD
   Grangel-Gonzalez I, 2016, P 2016 IEEE 10 INT C
   Grossmann D., 2015, FDI FIELD DEVICE INT
   Grossmann D, 2014, 2014 IEEE EMERGING TECHNOLOGY AND FACTORY AUTOMATION (ETFA)
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Hahniche J, 2017, P ODVA 2017 IND C 18
   Hammerstingl V, 2015, P IEEE INT C IND TEC
   Hanssen DH, 2015, PROGRAMMABLE LOGIC CONTROLLERS: A PRACTICAL APPROACH TO IEC 61131-3 USING CODESYS, P1, DOI 10.1002/9781118949214
   Iatrou CP, 2016, 2016 IEEE WORLD CONFERENCE ON FACTORY COMMUNICATION SYSTEMS (WFCS)
   IEC, 2015, 625411002015 IEC
   Imtiaz J, 2013, P 2013 11 IEEE INT C
   International Electrotechnical Commission, 2016, 6254112016 IEC TR
   International Electrotechnical Commission (IEC), 2018, International Standard, Rev. 2.0, IEC 62714-1:2018
   Jasperneite J., 2015, INFORM SPEKTRUM, V38, P183
   Jazayeri B, 2017, P IEEE INT C SOFTW A
   Kainz G., 2013, ATP MAG, V55, P42
   Koziolek H, 2018, P 2 IEEE INT C SOFTW
   Koziolek H, 2019, P 41 ACM IEEE INT C
   Kruning K., 2013, ATP EDITION, V11, P50
   Liptak BG, 2002, INSTRUMENT ENG HDB, VThree
   Lydon B, 2016, EXXONMOBIL BUILD NEX
   Mahnke W, 2009, OPC unified architecture
   Muccini H., 2016, P 11 INT S SOFTW ENG
   Muccini H, 2017, P IEEE INT C SOFTW A
   Naedele Martin, 2012, ABB REV, V3
   NAMUR ProcessNet VDMA ZVEI, 2019, PROC IND 4 0 AG MOD
   OMG, 2015, DDS DAT DISTR SERV V
   OPC Foundation, 2018, PRACT SEC REC BUILD
   Pfrommer J, 2015, AT-AUTOM, V63, P790, DOI 10.1515/auto-2014-1157
   PlattformIndustrie 4.0, 2018, DET ASS ADM SHELL
   Profanter S., 2019, P IEEE INT C IND TEC
   Siemens AG, 2013, DAT SHEETS GUID WAV
   Siemens AG, 2014, A5E0101868803 SIEM A
   Siemens AG, 2012, BETR DRUCKM SITRANS
   STRASSER T, 2008, P 6 IEEE INT C IND I
   The Open Group, 2018, OP PROC AUT BUS GUID
   Thoma M, 2014, IEEE IFIP NETW OPER
   Unified Automation GmbH, UAEXPERT V1 4 4
   Veichtlbauer A, 2017, P 2017 IEEE IES 15 I
   Weyrich M, 2016, IEEE SOFTWARE, V33, P112, DOI 10.1109/MS.2016.20
NR 72
TC 8
Z9 8
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2020
VL 50
IS 3
SI SI
BP 246
EP 274
DI 10.1002/spe.2765
EA NOV 2019
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KH3BI
UT WOS:000498299200001
DA 2024-07-18
ER

PT J
AU Jammal, M
   Hawilo, H
   Kanso, A
   Shami, A
AF Jammal, Manar
   Hawilo, Hassan
   Kanso, Ali
   Shami, Abdallah
TI Generic input template for cloud simulators: A case study of CloudSim
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CloudSim; cloud applications; cloud management; cloud simulators;
   component-based architecture; domain-specific language; failures; GMF;
   Heat; high availability; JSON; OpenStack; orchestration; recovery;
   redundancy; software components; XML
ID SERVICES; PERFORMANCE; ENVIRONMENT; CHALLENGES; TOOLKIT
AB Cloud computing and its service models, such as Platform as a Service (PaaS), have changed the way that computing resources are allocated to Information and Communications Technology enterprises and users. Although multiple cloud providers support dynamic service provisioning, it is necessary to facilitate the management of the cloud infrastructure and applications in order to allow the continuous refinement of cloud models. Therefore, issues are raised regarding the cloud orchestration, including the flexible portability and interoperability of cloud applications among multiple cloud providers. Having said that, there is a need for a standardized design and management of the cloud use cases (during the creation of scenarios, application's deployment, and patching) to ensure efficient applications' migration between different providers. This paper proposes an artifact, GITS, a generic input template for CloudSim and other cloud simulators. GITS can be provided by PaaS offering to manage the creation, monitoring, administration, and patching of infrastructure and applications in the cloud. GITS defines the cloud schema that can be used with conforming cloud models and independent cloud providers; thus, portability and interoperability can be enabled in PaaS cloud models. GITS focuses on the architecture-based modeling for cloud infrastructure and application not only in terms of computational resources but also in terms of high availability properties associated with infrastructure and applications. The main objective of the GITS template is to provide the cloud user with a modular, simple, readable, and reusable model that still supports the essential components and provide them with the ability to control the applications' execution, deployment, and other management needs in addition to the allocation environment. This paper describes GITS usage, specifically as an input template for CloudSim.
C1 [Jammal, Manar; Hawilo, Hassan; Shami, Abdallah] Western Univ, Dept Elect & Comp Engn, London, ON N6A 3K7, Canada.
   [Kanso, Ali] IBM Res, Thomas J Watson Res Ctr, Yorktown Hts, NY USA.
C3 Western University (University of Western Ontario); International
   Business Machines (IBM)
RP Jammal, M (corresponding author), Western Univ, Dept Elect & Comp Engn, London, ON N6A 3K7, Canada.
EM mjammal@uwo.ca
RI Shami, Abdallah/HTT-3720-2023
OI Shami, Abdallah/0000-0003-2887-0350; Jammal, Manar/0000-0002-4833-7644
FU Natural Sciences and Engineering Research Council of Canada [NSERC-STPGP
   447230]; Ericsson Research
FX Natural Sciences and Engineering Research Council of Canada, Grant/Award
   Number: NSERC-STPGP 447230; Ericsson Research
CR Altevogt P., 2013, Cloud Modeling and Simulations
   Amazon, 2017, AWS CLOUDFORMATION T
   Amazon Web Services, 2010, AWS TEMPL FORM
   [Anonymous], 2011, IEEE INT C SERV COMP
   [Anonymous], 2004, EUR INT FRAM PAN EUR
   [Anonymous], THESIS
   [Anonymous], 2015 IEEE INT C COMM
   [Anonymous], 2009, TECHNICAL REPORT
   [Anonymous], 2015, WALL STREET J
   [Anonymous], 2013, HEAT ORCHESTRATION T
   [Anonymous], 24 IEEE INT C ADV IN
   Antonescu A-F, 2012, 2 S NETW CLOUD COMP
   APC, 2003, AV REL THEOR
   Ayoubi S, 2016, IEEE ACM T NETWORK, V24, P3218, DOI 10.1109/TNET.2015.2510864
   Ayoubi S, 2016, IEEE T NETW SERV MAN, V13, P489, DOI 10.1109/TNSM.2016.2581484
   Baeldung, 2011, INTR SPRING CLOUD NE
   Balmer M., 2009, Multi-Agent Systems for Traffic and Transportation Engineering, P57, DOI DOI 10.4018/978-1-60566-226-8.CH003
   Baryannis G, 2013, P INT WORKSH MULT AP
   Behrisch M., 2011, SIMUL 2011 3 INT C A
   Binz T, 2012, IEEE INTERNET COMPUT, V16, P80, DOI 10.1109/MIC.2012.43
   Boteanu A, 2011, UNIV POLIT BUCHAR S, V73, P13
   Bux M, 2013, PROCEEDINGS OF THE 2
   Buyya R, 2009, INT C HIGH PERF COMP
   Caballer M, 2018, J GRID COMPUT, V16, P1, DOI 10.1007/s10723-018-9427-5
   Calheiros RN, 2013, SOFTWARE PRACT EXPER, V43, P595, DOI 10.1002/spe.2124
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Carella GA, 2018, THESIS
   Carlson M., 2012, Cloud Application Management for Platforms Version 1.0
   Chan KY, 2010, IEEE INT CONF FUZZY
   Citron D, 2011, IBM J RES DEV, V55, DOI 10.1147/JRD.2011.2170913
   CORBA, 2017, OMG SPEC
   Daur H, 2013, IBM SMARTCLOUD ORCHE
   De Boer FS, 2012, P EUR C SERV OR CLOU
   Dean J, 2013, COMMUN ACM, V56, P74, DOI 10.1145/2408776.2408794
   DZone, 2017, MICR COMM ZUUL API G
   Eclipse, 2017, GRAPH MOD PROJ GMP
   Eclipse, 2017, ECL WIN
   EventHelix, 2014, SYST REL AV
   Fakhfakh F, 2017, PAPER PRESENTED AT I
   Fernandes S, 2015, IETF 93 PRAG CZECH R
   Garcia AL, 2013, 7 IB GRID INFR C IBE
   Garraghan P, 2014, IEEE 15 INT S HIGH A
   Google, 2017, G SUIT
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Guo S, 2011, IEEE INT C INF REUS
   Gutierrez-Garcia JO, 2010, IEEE 2 INT C CLOUD C
   Hawilo H, 2015, IEEE WORLD C SERV SE
   Hawilo H, 2014, IEEE NETWORK, V28, P18, DOI 10.1109/MNET.2014.6963800
   Herbert N, 2017, STATE ORCHESTRATION
   Hillston J, 2002, SIMJAVA
   IBM, 2015, CISC VIS NETW IND GL
   ITPP, 2014, CISC VIS NETW IND GL
   Jakovits P, 2012, IEEE 14 INT C HIGH P
   Jammal M, 2015, IEEE INT C CLOUD COM
   Jammal M, 2016, IEEE INT C CLOUD ENG
   Jammal M, 2016, IEEE INT C CLOUD COM
   Jammal M, 2018, IEEE T NETW SERV MAN
   Juhnke E, 2011, IEEE 4 INT C CLOUD C
   Juve G, 2011, 2011 IEEE 3 INT C CL
   Kopp O, 2013, 11 INT C SEV OR COMP
   Koski K, 2015, POSITION PAPER
   Kratzke N, 2017, EUROPEAN PROJECT SPA
   Kratzke N, 2018, APPL SCI-BASEL, V8, DOI 10.3390/app8081368
   Kubernetes, 2018, PROD GRAD CONT ORCH
   Lipton P, 2018, OASIS TOPOLOGY ORCHE
   Liu C, 2011, 5 BIENN C INN DAT SY
   García AL, 2016, COMPUT STAND INTER, V47, P19, DOI 10.1016/j.csi.2016.02.002
   Microsoft, 2012, DISTR COMP OBJ MOD
   Microsoft, 2013, CHANG SIZ WIND AZ VI
   OASIS, 2013, Topology and Orchestration Specification for Cloud Applications Version 1.0 OASIS Standard
   OpenTOSCA, 2016, OP SOURC TOSCA EC
   OpenTOSCA, 2013, WIN TOOL
   Oracle, 2017, JAVABEANS SPEC
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Peng D., 2011, J COMPUT INF SYST, V7, P5883
   Petritsch H, 2006, CISC VIS NETW IND GL
   Piraghaj SF, 2017, SOFTWARE PRACT EXPER, V47, P505, DOI 10.1002/spe.2422
   Plante F, 2006, INTRO GMF RUNTIME
   Ponemon Institute, 2016, Cost of Data Center Outages
   Pritzker P, 2013, NIST CLOUD COMPUTING
   Ranjan R, 2012, SEMANTIC SCHOLAR
   Reliability HotWire, 2007, AV DIFF WAYS CALC IT
   Salehi P, 2010, IEEE 12 INT S HIGH A
   Salesforce, 2016, BRING YOUR CRM FUT
   Santos GL, 2017, IEEE S COMP COMM ISC
   SDx Central, 2018, 2018 CLOUD ORCH DEVO
   Silva Filho Manoel C., 2014, Internet of Vehicles - Technologies and Services. First International Conference (IOV). Proceedings: LNCS 8662, P345, DOI 10.1007/978-3-319-11167-4_34
   Snow A, 2017, INT S ADV SOFTW DEF
   Spring Pivotal, 2018, CLIENT SID LOAD BAL
   Srirama S, 2010, 10 IEEE ACM INT C CL
   Strauch Steve, 2013, CLOSER 2013. 3rd International Conference on Cloud Computing and Service Science. Proceedings, P36
   Subashini S, 2011, J NETW COMPUT APPL, V34, P1, DOI 10.1016/j.jnca.2010.07.006
   Tech Crunch, 2017, AM AWS S3 OUT BREAK
   Teckelmann R, 2011, IEEE 3 INT C CLOUD C
   Tian WH, 2015, IEEE T AUTOM SCI ENG, V12, P153, DOI 10.1109/TASE.2013.2266338
   Torres E, 2018, COMPUTING, V100, P621, DOI 10.1007/s00607-018-0588-7
   Truyen E, 2001, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2001.919097
   UK Government Cabinet Office, 2018, OP STAND PRINC
   WANG X, 2012, TAIWAN
   Wang X.Q., 2010, THESIS
   Wei Y, 2010, IEEE INTERNET COMPUT, V14, P72, DOI 10.1109/MIC.2010.147
   Yusoh ZIM, 2012, IEEE 5 INT C CLOUD C
   Zeng C, 2009, IEEE INT C CLOUD COM
   Zeng XZ, 2017, J SYST ARCHITECT, V72, P93, DOI 10.1016/j.sysarc.2016.06.008
   Zhu J, 2013, 2013 IEEE 7 INT S SE
   Zyp K, 2017, DOJOX JSON REF DOJO
NR 106
TC 4
Z9 4
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2019
VL 49
IS 5
BP 720
EP 747
DI 10.1002/spe.2674
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HR3KH
UT WOS:000463035200002
DA 2024-07-18
ER

PT J
AU Ko, Y
   Rival, X
   Ryu, S
AF Ko, Yoonseok
   Rival, Xavier
   Ryu, Sukyoung
TI Weakly sensitive analysis for JavaScript object-manipulating programs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE abstract interpretation; JavaScript; object abstraction; static
   analysis; string abstraction; trace partitioning abstraction
AB While JavaScript programs have become pervasive in web applications, they remain hard to reason about. In this context, most static analyses for JavaScript programs require precise call graph information, since the presence of large numbers of spurious callees significantly deteriorates precision. One of the most challenging JavaScript features that complicate the inference of precise static call graph information is read/write accesses to object fields, the names of which are computed at runtime. JavaScript framework libraries often exploit this facility to build objects from other objects, as a way to simulate sophisticated high-level programming constructions. Such code patterns are difficult to analyze precisely, due to weak updates and limitations of unrolling techniques. In this paper, we observe that precise field origination relations can be inferred by locally reasoning about object copies, both regarding to the object and to the program structure, and we propose an abstraction that allows to separately reason about field read/write access patterns working on different fields and to carefully handle the sets of JavaScript object fields. We formalize and implement an analysis based on this technique. We evaluate the performance and precision of the analysis on the computation of call graph information for examples from jQuery tutorials.
C1 [Ko, Yoonseok; Ryu, Sukyoung] Korea Adv Inst Sci & Technol, Sch Comp, Daejeon 34141, South Korea.
   [Rival, Xavier] PSL Res Univ, CNRS, Ecole Normale Super, DIENS, Paris, France.
   [Rival, Xavier] INRIA, Paris, France.
C3 Korea Advanced Institute of Science & Technology (KAIST); Universite
   PSL; Ecole Normale Superieure (ENS); Centre National de la Recherche
   Scientifique (CNRS); Inria
RP Ko, Y (corresponding author), Korea Adv Inst Sci & Technol, Sch Comp, Daejeon 34141, South Korea.
EM mir597@kaist.ac.kr
RI ; Ryu, Sukyoung/A-8543-2015
OI Ko, Yoonseok/0000-0002-3309-6497; Ryu, Sukyoung/0000-0002-0019-9772
FU Ministry of Education, Science and Technology of Korea
   [2017M3C4A7068177, NRF-2017R1A2B3012020, NRF-2014R1A2A2A01003235];
   National Research Foundation of Korea [2017M3C4A7068177,
   NRF-2017R1A2B3012020, NRF-2014R1A2A2A01003235]; Samsung Electronics;
   European Research Council through the European Union's Seventh Framework
   Programme (FP7) [278673]; European Research Council (ERC) [278673]
   Funding Source: European Research Council (ERC)
FX Ministry of Education, Science and Technology of Korea and National
   Research Foundation of Korea, Grant/Award Number: 2017M3C4A7068177,
   NRF-2017R1A2B3012020, and NRF-2014R1A2A2A01003235; Samsung Electronics;
   European Research Council through the European Union's Seventh Framework
   Programme (FP7), Grant/Award Number: Project MemCAD with grant agreement
   ID 278673
CR Andreasen E, 2014, P 2014 ACM INT S OBJ
   [Anonymous], P 19 ACM SIGSOFT S 1
   Balakrishnan G, 2006, P 13 INT S STAT AN S
   Chase D. R., 1990, P ACM SIGPLAN 1990 C
   Cousot P, 1977, P 4 ACM SIGACT SIGPL
   Cox A, 2014, P 21 INT S STAT AN M
   Cox A, 2013, P 27 EUR C OBJ OR PR
   European Association for Standardizing Information and Communication Systems (ECMA), 2011, ECMA 262 ED 5 1 ECMA
   Feldthaus A, 2013, P 35 INT C SOFTW ENG
   Hackett B., 2012, P 33 ACM SIGPLAN C P
   Hardekopf B, 2014, P 15 INT C VER MOD C
   IBM Research, TJ WATS LIB AN WALA
   Jensen SH, 2009, P 16 INT S STAT AN L
   Jensen SH, 2010, P 17 INT S STAT AN P
   Jensen SH, 2012, P 2012 INT S SOFTW T
   Jones ND, 1982, P 9 ACM SIGPLAN SIGA
   Kashyap V, 2014, P 22 ACM SIGSOFT INT
   Kenney J. F., 1962, MATH STAT 1, P252
   Ko Y., 2014, STRUCTURE, V40, P99
   Ko Y, 2017, P 15 AS S PROGR LANG
   Lee H, 2012, 19 INT WORKSH FDN OB
   Mauborgne L, 2005, P 14 EUR S PROGR ED
   Oh H, 2009, P 7 AS S PROGR LANG
   Oh H., 2012, P 33 ACM SIGPLAN C P
   Oh H, 2011, P 12 INT C VER MOD C
   Park C, 2015, P 30 IEEE ACM INT C
   Park C, 2015, P 29 EUR C OBJ OR PR
   Rival X, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275501
   Schafer M, 2013, P 34 ACM SIGPLAN C P
   Sridharan M., 2012, P 26 EUR C OBJ OR PR
   Wei S, 2016, P 2016 24 ACM SIGSOF
   Wei S, 2013, P 2013 INT S SOFTW T
NR 32
TC 5
Z9 5
U1 1
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2019
VL 49
IS 5
BP 840
EP 884
DI 10.1002/spe.2676
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HR3KH
UT WOS:000463035200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gonçalves, RG
   Sampaio, A
   Rolim, T
   Mendonça, NC
AF Goncalves Junior, Ronaldo
   Sampaio, Americo
   Rolim, Tiago
   Mendonca, Nabor C.
TI Cloud application architecture appraiser (CA3): A multicriteria approach
   and tool for assessing cloud deployment options based on nonfunctional
   requirements
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE AHP; architectural assessment; cloud deployment option; multicriteria
   optimization
ID SIMULATION; QUALITY
AB Cloud computing is an emerging computing paradigm that is changing software engineering. It offers scalable virtual compute resources at low prices, thus attracting many software developers interested in reducing their infrastructure and operational costs. Even though acquiring and using cloud solutions can be simple, a common difficulty developers face is how to best configure their applications at the architectural level, given a myriad of cloud services and resource types available, specially when considering different attributes such as cost, scalability, and performance. An inappropriate architectural decision can lead to a significant cost increase or a deployment option that does not meet the minimum required performance. This paper focuses on the problem of finding the best cloud deployment options for a given application that meet a given set of well-known nonfunctional requirements. To address this problem, the paper presents Cloud Application Architecture Appraiser (CA3), a multicriteria optimization approach and tool that relies on nonfunctional requirements as key drivers for assessing and selecting the best architectural options for deploying applications in the cloud. Results from the assessment of a real web application (WordPress), deployed using several different architectural options in a popular cloud provider (Amazon), are also presented to illustrate the use and benefits of the proposed method and tool.
C1 [Goncalves Junior, Ronaldo; Sampaio, Americo; Rolim, Tiago; Mendonca, Nabor C.] Univ Fortaleza, Programa Posgrad Informat Aplicada, Av Washington Soares 1321, BR-60811905 Fortaleza, Ceara, Brazil.
C3 Universidade Fortaleza
RP Sampaio, A (corresponding author), Univ Fortaleza, Programa Posgrad Informat Aplicada, Av Washington Soares 1321, BR-60811905 Fortaleza, Ceara, Brazil.
EM americo.sampaio@unifor.br
RI Mendonça, Nabor C/O-8453-2015; Sampaio, Americo/C-7057-2016
OI Sampaio, Americo/0000-0003-0267-268X
FU CNPq [313553/2017-3, 207853/2017-7]
FX CNPq, Grant/Award Number: 313553/2017-3 and 207853/2017-7
CR Ameller D, 2013, IEEE SOFTWARE, V30, P61, DOI 10.1109/MS.2012.176
   [Anonymous], 2018, IS THERE OPTIMAL CPU
   [Anonymous], 2016, SERVERLESS ARCHITECT
   [Anonymous], 912622003 ISOIEC TR
   [Anonymous], 2010, INTERNET MEASUREMENT, DOI DOI 10.1145/1879141.1879143
   [Anonymous], 2012, INT SER OPER RES MAN, DOI DOI 10.1007/978-1-4614-3597-6
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Babar MA, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P600, DOI 10.1109/APSEC.2004.38
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Borhani AH, 2014, IEEE 18 INT ENT DIST
   Burns B, 2016, P 8 USENIX C HOT TOP
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chung L., 2012, NONFUNCTIONAL REQUIR, V5
   Chung L, 2013, J SYST SOFTWARE, V86, P2242, DOI 10.1016/j.jss.2012.10.028
   CSMIC SMI, 2017, SEL CLOUD PROV DEF W
   Cunha M, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3825
   Cunha M, 2013, IEEE 6 INT C CLOUD C
   Etemaadi R, 2013, J SYST SOFTWARE, V86, P2559, DOI 10.1016/j.jss.2013.05.109
   Fittkau F., 2012, IEEE 6 INT WORKSH MA
   Frey S, 2013, INT C SOFTW ENG ICSE
   Garg SK, 2011, 4 IEEE INT C UT CLOU
   Goncalves Junior R, 2015, P 30 ANN ACM S APPL
   Gunther NJ, 2007, GUERRILLA CAPACITY P, V1
   IN H, 2002, P 26 ANN INT COMP SO
   ISO/IEC, 2001, 912612001 ISOIEC TR
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Jamshidi P, 2017, SOFTWARE PRACT EXPER, V47, P1159, DOI 10.1002/spe.2442
   Jayasinghe D, 2014, IEEE T SERV COMPUT, V7, P293, DOI 10.1109/TSC.2013.46
   Jung G, 2013, PAPER PRESENTED IEEE
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   KAZMAN R, 1998, P 4 IEEE INT C ENG C
   Leong L, 2017, MAGIC QUADRANT LOUD
   Lewis J., 2014, MICROSERVICES
   Lloyd W, 2012, P 2012 IEEE ACM 5 IN
   Lloyd WJ, 2017, IEEE T CLOUD COMPUT, V5, P667, DOI 10.1109/TCC.2015.2430339
   Malkowski S, 2010, P 2010 ACM S APPL CO, DOI 10. 1145/1774088. 1774172
   Mi<ss>bach M, 2005, ADAPTIVE HARDWARE IN, V1
   Saripalli P., 2011, IEEE 4 INT C CLOUD C
   Scheuner J, 2015, P 24 INT C WORLD WID
   Sodhi B, 2012, ASIA PAC SOFWR ENG, P760, DOI 10.1109/APSEC.2012.53
   Sodhi B, 2012, 2012 IEEE ASIA-PACIFIC SERVICES COMPUTING CONFERENCE (APSCC), P329, DOI 10.1109/APSCC.2012.22
   Weinstock C.B., 2006, On system scalability
   Wohlin C., 2000, EXPT SOFTWARE ENG IN, V6
NR 43
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2278
EP 2301
DI 10.1002/spe.2644
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700008
DA 2024-07-18
ER

PT J
AU Ghobaei-Arani, M
   Rahmanian, AA
   Souri, A
   Rahmani, AM
AF Ghobaei-Arani, Mostafa
   Rahmanian, Ali. A.
   Souri, Alireza
   Rahmani, Amir Masoud
TI A moth-flame optimization algorithm for web service composition in cloud
   computing: Simulation and verification
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; formal verification; moth-flame optimization algorithm;
   QoS; web service composition
ID QOS-AWARE; DEPLOYMENT
AB In recent years, users are becoming increasingly accustomed to using the Internet to gain software resources in the form of web services provided by information technology organizations. Cloud computing is a service delivery paradigm that shares services and resources to access the web services to the end users over the Internet. In the cloud environment, based on the user's needs, various types of services with similar functionalities but different quality-of-service (QoS) criteria can be delivered, which often must be combined to meet the users' requests. The optimal selection and composition of these services are realized as an interesting issue. In this paper, we propose a moth-flame optimization (MFO) algorithm, which is a novel nature-inspired metaheuristic paradigm for the web service composition (WSC) problem called MFO-WSC, to improve the QoS criteria in the distributed cloud environment. Also, formal modeling is presented for the QoS-aware MFO-WSC algorithm with the model checking approach that receives the particular benefits to collaborate the correctness of the proposed algorithm. The correctness of the proposed behavior model is examined using some logical problems such as deadlock-free, fairness, and reachability conditions in the new symbolic model verifier model checker. The experimental results indicate the effectiveness of the proposed algorithm in comparison with similar related works.
C1 [Ghobaei-Arani, Mostafa; Souri, Alireza; Rahmani, Amir Masoud] Islamic Azad Univ, Sci & Res Branch, Dept Comp Engn, Tehran, Iran.
   [Rahmanian, Ali. A.] Univ Amsterdam, Informat Inst, Amsterdam, Netherlands.
   [Rahmani, Amir Masoud] Univ Human Dev, Comp Sci, Sulaymaniyah, Iraq.
C3 Islamic Azad University; University of Amsterdam
RP Ghobaei-Arani, M (corresponding author), Islamic Azad Univ, Sci & Res Branch, Dept Comp Engn, Tehran, Iran.
EM m.ghobaei@srbiau.ac.ir
RI Souri, Alireza/Y-4580-2018; Rahmani, Amir Masoud/K-2702-2013;
   Ghobaei-Arani, Mostafa/K-5058-2015
OI Souri, Alireza/0000-0001-8314-9051; Rahmani, Amir
   Masoud/0000-0001-8641-6119; Ghobaei-Arani, Mostafa/0000-0003-2639-0900;
   Rahmanian, Ali/0000-0001-9249-1633
CR Al-Saqqar F, 2015, SIMUL MODEL PRACT TH, V51, P45, DOI 10.1016/j.simpat.2014.11.003
   [Anonymous], 2010, P 19 INT C WORLD WID, DOI DOI 10.1145/1772690.1772693
   [Anonymous], 2012, ACT 8 C EXP MET ALG
   Parejo JA, 2014, EXPERT SYST APPL, V41, P4211, DOI 10.1016/j.eswa.2013.12.036
   Azari MS, 2015, 2015 2 INT C KNOWL B
   Bahrami M, 2018, STUD COMPUT INTELL, V720, P131, DOI 10.1007/978-981-10-5221-7_13
   Bauer E., 2012, RELIABILITY AVAILABI
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chandrasekaran K., 2014, ESSENTIALS CLOUD COM
   Chen FZ, 2016, COMPUT IND ENG, V99, P423, DOI 10.1016/j.cie.2015.12.018
   Clavel M., 2007, ALL MAUDE A HIGH PER, P385, DOI DOI 10.1007/978-3-540-71999-113.
   Dastjerdi AV, 2015, SOFTWARE PRACT EXPER, V45, P197, DOI 10.1002/spe.2288
   Ding Y, 2018, P 2018 2 INT C MAN E
   Drechsler R., 2018, Formal system verification
   Faruk MN, 2016, ADV INTELL SYST, V425, P395, DOI 10.1007/978-3-319-28658-7_34
   Gabrel V, 2018, FUTURE GENER COMP SY, V80, P311, DOI 10.1016/j.future.2017.04.009
   Ghobaei-Arani M, 2018, SOFT COMPUT, V22, P8353, DOI 10.1007/s00500-017-2783-4
   Ghobaei-Arani M, 2017, J EXP THEOR ARTIF IN, V29, P1149, DOI 10.1080/0952813X.2017.1310308
   Ghobaei-Arani M, 2018, FUTURE GENER COMP SY, V78, P191, DOI 10.1016/j.future.2017.02.022
   Ghobaei-Arani M, 2016, CLUSTER COMPUT, V19, P1017, DOI 10.1007/s10586-016-0574-9
   Hafer T., 1987, Automata, Languages and Programming
   Huo Y, 2015, APPL INTELL, V42, P661, DOI 10.1007/s10489-014-0617-y
   Jatoth C, 2017, IEEE T SERV COMPUT, V10, P475, DOI 10.1109/TSC.2015.2473840
   Karimi MB, 2017, J SUPERCOMPUT, V73, P1387, DOI 10.1007/s11227-016-1814-8
   Keshanchi B, 2017, J SYST SOFTWARE, V124, P1, DOI 10.1016/j.jss.2016.07.006
   Eholy WE, 2014, EXPERT SYST APPL, V41, P7478, DOI 10.1016/j.eswa.2014.05.046
   Klein A, 2014, IEEE T SERV COMPUT, V7, P452, DOI 10.1109/TSC.2013.2
   Mirjalili S, 2015, KNOWL-BASED SYST, V89, P228, DOI 10.1016/j.knosys.2015.07.006
   Pop CB, 2011, 2011 IEEE INT C INT
   Qi J, 2017, J AMB INTEL HUM COMP, P1
   Rajeswari M, 2014, J KING SAUD UNIV-COM, V26, P143, DOI 10.1016/j.jksuci.2013.08.003
   Rozier Kristin Y., 2010, International Journal on Software Tools for Technology Transfer, V12, P123, DOI 10.1007/s10009-010-0140-3
   Rozier KY, 2011, COMPUT SCI REV, V5, P163, DOI 10.1016/j.cosrev.2010.06.002
   Souri Alireza, 2017, Journal of Service Science Research, V9, P219, DOI 10.1007/s12927-017-0011-5
   Souri A, 2018, COMPUT STAND INTER, V58, P1, DOI 10.1016/j.csi.2017.11.007
   Souri A, 2015, INT CONF SOFTW ENG, P44, DOI 10.1109/ICSESS.2015.7339003
   Souri A, 2014, EXPERT SYST APPL, V41, P3831, DOI 10.1016/j.eswa.2013.11.042
   Strunk A, 2010, 2010 IEEE 8 EUR C WE
   Vakili A, 2017, J NETW COMPUT APPL, V81, P24, DOI 10.1016/j.jnca.2017.01.005
   Wada H, 2011, SOFTWARE PRACT EXPER, V41, P469, DOI 10.1002/spe.1032
   Wang DD, 2015, COMPUT ELECTR ENG, V43, P129, DOI 10.1016/j.compeleceng.2014.10.008
   Wang HB, 2018, KNOWL-BASED SYST, V140, P64, DOI 10.1016/j.knosys.2017.10.027
   Yu Q, 2015, COMPUT ELECTR ENG, V41, P18, DOI 10.1016/j.compeleceng.2014.12.004
   Zhou JJ, 2017, INT J ADV MANUF TECH, V88, P3371, DOI 10.1007/s00170-016-9034-1
   Ziafat H, 2017, J SUPERCOMPUT, V73, P4042, DOI 10.1007/s11227-017-1999-5
NR 45
TC 67
Z9 67
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2018
VL 48
IS 10
SI SI
BP 1865
EP 1892
DI 10.1002/spe.2598
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GS4EA
UT WOS:000443587100008
OA Bronze
DA 2024-07-18
ER

PT J
AU Tsai, MH
   Lai, KC
   Chang, HY
   Chen, KF
   Huang, KC
AF Tsai, Meng-Han
   Lai, Kuan-Chou
   Chang, Hsi-Ya
   Chen, Kuan Fu
   Huang, Kuo-Chan
TI Pewss: A platform of extensible workflow simulation service for workflow
   scheduling research
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud service; performance evaluation; simulation; Software as a
   Service; workflow scheduling
ID SYSTEMS; TOOLKIT
AB This paper presents a Platform of Extensible Workflow Simulation Service (Pewss), which we have developed to provide a cloud service for aiding research work in workflow scheduling. The simulation has been a major tool for performance evaluation and comparison in workflow scheduling research. However, researchers usually have to develop their own simulation programs with limited functionality, simply outputting summarized performance results. Pewss has been developed for easing and improving current practices in conducting performance simulations during studying of existing workflow scheduling algorithms or designing of new scheduling algorithms. Pewss has been designed based on the Software as a Service (SaaS) model, adopting a multiuser Web-based client/server architecture. Conducting simulation experiments on Pewss, researchers simply have to implement the scheduling algorithm under study instead of a whole simulation environment, allowing them to focus on their research work without spending unnecessary efforts on the simulation implementation details. Pewss provides the visualization of a workflow execution schedule based on simulation results, offering a convenient way for researchers to gain an insight into the effectiveness, characteristics, and performance bottleneck of scheduling algorithms. As a multiuser environment, Pewss also provides functionality for researchers to facilitate comparative performance analysis and collaborative research works effectively. Pewss has been used in our research work on task-parallel workflow scheduling and has been planned to be extended to support other types of workflow scheduling research problems, eg, mixed-parallel workflows.
C1 [Tsai, Meng-Han; Lai, Kuan-Chou; Chen, Kuan Fu; Huang, Kuo-Chan] Natl Taichung Univ Educ, Dept Comp Sci, Taichung, Taiwan.
   [Chang, Hsi-Ya] Natl Ctr High Performance Comp, Natl Appl Res Labs, 7,R&D 6th Rd, Hsinchu 30076, Taiwan.
C3 National Taichung University of Education; National Applied Research
   Laboratories - Taiwan
RP Huang, KC (corresponding author), Natl Taichung Univ Educ, Dept Comp & Informat Sci, 140 Min Sheng Rd, Taichung 40306, Taiwan.
EM kchuang@mail.ntcu.edu.tw
OI Huang, Kuo-Chan/0000-0003-0768-2895
FU Ministry of Science and Technology, Taiwan [MOST 104-2221-E-142-003];
   National Science Foundation [ACI-1440620]; National Aeronautics and
   Space Administration's Earth Science Technology Office, Computation
   Technologies Project [NCC5-626]; NASA; California Institute of
   Technology
FX Ministry of Science and Technology, Taiwan, Grant/Award Number: MOST
   104-2221-E-142-003; National Science Foundation, Grant/Award Number:
   ACI-1440620; National Aeronautics and Space Administration's Earth
   Science Technology Office, Computation Technologies Project, Grant/Award
   Number: NCC5-626; NASA; California Institute of Technology
CR Abbott BP, 2009, REP PROG PHYS, V72, DOI 10.1088/0034-4885/72/7/076901
   [Anonymous], 2017, HIGH PERF COMP HPC
   [Anonymous], 2017, SEQ ARR BAS SOL GEN
   [Anonymous], 2015, THESIS
   [Anonymous], 2017, CHROM V8 GOOGL DEV
   [Anonymous], 2017, MONT US DOC
   Arabnejad H, 2014, IEEE T PARALL DISTR, V25, P682, DOI 10.1109/TPDS.2013.57
   Benoit A, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501664
   Bittencourt LF, 2005, P 3 ACM IFIP USENIX
   Bittencourt LF, 2010, EUROMICRO WORKSHOP P, P27, DOI 10.1109/PDP.2010.56
   Bittencourt LF, 2010, J GRID COMPUT, V8, P419, DOI 10.1007/s10723-009-9144-1
   Bostock M., 2017, D3 JS DATA DRIVEN DO
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chen W, 2012, 2012 IEEE 8 INT C E
   Editor Monaco, 2017, MON ED
   Epigenome. usc. edu, 2017, USC MOL GEN COR
   Facebook. github. io, 2017, REACT JAVASCRIPT LIB
   Fishman George S., 2001, SPRING S OPERAT RES, DOI 10.1007/978-1-4757-3552-9
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hsu CC, 2011, FUTURE GENER COMP SY, V27, P860, DOI 10.1016/j.future.2010.10.015
   Huang K, 2015, INT J ELECT INF ENG, V2, P73
   Huang K, 2016, 2016 INT COMP S ICS
   Huang K. -C., 2017, J. Comput., V28, P43
   Huang KC, 2013, J CONVERG JOC, V4, P14
   Huang KC, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2808-y
   Huang KC, 2015, J SUPERCOMPUT, V71, P217, DOI 10.1007/s11227-014-1294-7
   Jayaraman S, 2017, SOFTWARE PRACT EXPER, V47, P163, DOI 10.1002/spe.2411
   Juve G, 2013, FUTURE GENER COMP SY, V29, P682, DOI 10.1016/j.future.2012.08.015
   Maechling P., 2007, WORKFLOWS E SCI, P143, DOI DOI 10.1007/978-1-84628-757-2_10
   Malawski M, CLOUD WORKFLOW SIMUL
   Pham T. P., 2017, IEEE T CLOUD COMPUT, P1
   Pinedo M., 2012, Scheduling: Theory, algorithms, and systems, V29
   Piraghaj SF, 2017, SOFTWARE PRACT EXPER, V47, P505, DOI 10.1002/spe.2422
   Roy T, 2000, THESIS
   Silva R, 2014, IEEE 10 INT C E SCI
   Stavrinides GL, 2011, SIMUL MODEL PRACT TH, V19, P540, DOI 10.1016/j.simpat.2010.08.010
   Topcuoglu H, 2002, IEEE T PARALL DISTR, V13, P260, DOI 10.1109/71.993206
   Tsai YL, 2015, J SUPERCOMPUT, V71, P3811, DOI 10.1007/s11227-015-1469-x
   Vahi K, 2017, PEGASUS WMS AUTOMATE
   Visjs, VIS JS DYN BROWS BAS
   Vondra T, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3983
   Wang YR, 2016, FUTURE GENER COMP SY, V60, P35, DOI 10.1016/j.future.2016.01.013
NR 42
TC 3
Z9 3
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2018
VL 48
IS 4
BP 796
EP 819
DI 10.1002/spe.2555
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FY3VV
UT WOS:000426749900003
DA 2024-07-18
ER

PT J
AU Basso, T
   Montecchi, L
   Moraes, R
   Jino, M
   Bondavalli, A
AF Basso, Tania
   Montecchi, Leonardo
   Moraes, Regina
   Jino, Mario
   Bondavalli, Andrea
TI PrivAPP: An integrated approach for the design of privacy-aware
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE conceptual model; privacy; reference architecture; UML profile; web
   application
ID REQUIREMENTS; MODEL; UML
AB Nowadays, personal information is collected, stored, and managed through web applications and services. Companies are interested in keeping such information private due to regulation laws and privacy concerns of customers. Furthermore, the reputation of a company can be dependent on privacy protection, ie, the more a company protects the privacy of its customers, the more credibility it gets. This paper proposes an integrated approach that relies on models and design tools to help in the analysis, design, and development of web applications and services with privacy concerns. Using the approach, these applications can be developed consistently with their privacy policies to enforce them, protecting personal information from different sources of privacy violation. The approach is composed of a conceptual model, a reference architecture, and a Unified Modified Language Profile, ie, an extension of the Unified Modified Language for including privacy protection. The idea is to systematize the privacy concepts in the scope of web applications and services, organizing the privacy domain knowledge and providing features and functionalities that must be addressed to protect the privacy of the users in the design and development of web applications. Validation has been performed by analyzing the ability of the approach to model privacy policies from real web applications and by applying it to a simple application example of an online bookstore. Results show that privacy protection can be implemented in a model-based approach, bringing values for the stakeholders and being an important contribution toward improving the process of designing web applications in the privacy domain.
C1 [Basso, Tania; Montecchi, Leonardo; Moraes, Regina; Jino, Mario] Univ Estadual Campinas, Campinas, SP, Brazil.
   [Bondavalli, Andrea] Univ Firenze, Florence, Italy.
C3 Universidade Estadual de Campinas; University of Florence
RP Basso, T (corresponding author), Univ Estadual Campinas, Campinas, SP, Brazil.
EM taniabasso@ft.unicamp.br
RI Montecchi, Leonardo/L-4176-2017; Bondavalli, Andrea/ABC-7825-2020
OI Montecchi, Leonardo/0000-0002-7603-9695; Moraes,
   Regina/0000-0003-0678-4777; Jino, Mario/0000-0002-1914-5790; bondavalli,
   andrea/0000-0001-7366-6530
FU DEVASSES Project [PIRSES-GA-2013-612569]; BIGSEA Project [690116]
FX DEVASSES Project, Grant/Award Number: PIRSES-GA-2013-612569; BIGSEA
   Project, Grant/Award Number: 690116
CR Aldawud O., 2003, P 3 INT WORKSH ASP O
   [Anonymous], INT J SCI ENG RES
   [Anonymous], 1970, PRIVACY FREEDOM
   [Anonymous], 2000, PRIV ONL FAIR INF PR
   [Anonymous], 2011, 29100 ISOIEC
   [Anonymous], 2006, Creation of a global privacy standard
   [Anonymous], 1995, Official Journal of the European Communities
   ASHLEY P, 2003, ENTERPRISE PRIVACY A
   Basso T, 2015, 16 WORKSH TESTS FAUL
   Basso T, 2015, P 30 ACM SIGAPP S AP
   Basso T, 2015, 15 IEEE INT C COMP I
   Bertino E, 2008, ADV DATABASE SYST, V34, P183
   Bucker A, 2003, IBM TIVOLI PRIVACY M
   Cavoukian A., 2002, PRIVACY PAYOFF SUCCE
   Cherdantseva Y, 2013, 2013 8 INT C AV REL
   Cirit C, 2009, P 2 INT C SEC INF NE
   Cranor L, 2006, NOTEP3P1120061113 WW
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Fink T, 2006, ELECTRON NOTES THEOR, V142, P161, DOI 10.1016/j.entcs.2004.12.045
   G1, 2014, BRAZ HAS 2 TOP 50 ON
   García DF, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1178045
   Giunchiglia F, 2002, LECT NOTES COMPUT SC, V2585, P162
   Hsu IC, 2012, SOFTWARE PRACT EXPER, V42, P1211, DOI 10.1002/spe.1124
   ISO/IEC, 2013, 29101 ISOIEC
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kalloniatis C, 2008, REQUIR ENG, V13, P241, DOI 10.1007/s00766-008-0067-3
   Khosrowpour M, 2002, INF RES MAN ASS INT
   Mohammadi Nazila Gol, 2014, Trust and Trustworthy Computing. 7th International Conference, TRUST 2014. Proceedings: LNCS 8564, P206, DOI 10.1007/978-3-319-08593-7_14
   Mont MC, 2011, IFIP ADV INF COMM TE, V352, P258
   Mont MC, 2005, PRIVACY ENFORCEMENT, V10, P1
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Nakagawa EY, 2014, P 2014 IEEE IFIP C S
   Nakagawa EY, 2012, 2012 JOINT WORK IEEE
   OASIS, 2012, PRIV MAN REF MOD MET
   Object Management Group, 2008, UML PROF MOD QUAL SE
   Object Management Group, 2011, OMG UNF MOD LANG OMG
   Object Management Group, 2014, OMG DOC
   Organisation for Economic Co-operation and Development, 2013, OECD GUID PROT PRIV
   SBVC, 2015, RANK SBVC 250 MAJ CO
   Shin YN, 2011, ADV COMMUNICATION NE, P76
   TPC W, 2001, T PROC PERF COUNC
   TRUSTe, 2015, TRUSTE PRIV IND
   Wang HQ, 1998, COMMUN ACM, V41, P63, DOI 10.1145/272287.272299
   WhatIs, 2013, DEF PRIV POL
   Zhu L, 2008, P 12 INT IEEE ENT DI
   Zoughbi G, 2011, SOFTW SYST MODEL, V10, P337, DOI 10.1007/s10270-010-0164-x
NR 46
TC 1
Z9 1
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 499
EP 527
DI 10.1002/spe.2546
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300006
DA 2024-07-18
ER

PT J
AU Constantinou, E
   Stamelos, I
AF Constantinou, Eleni
   Stamelos, Ioannis
TI Identifying evolution patterns: a metrics-based approach for external
   library reuse
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software reuse; evolution patterns; metrics suite
AB Software development highly depends on using functionality of external libraries and frameworks because of the inherent benefits of software reuse. As projects evolve over time, it is a common and beneficial task to upgrade the external libraries to their latest versions because bugs are solved or new functionality is implemented. Nonetheless, external libraries evolve as well and undergo architectural and structural changes and therefore, impact the projects that use them in the case of library upgrades. In this paper, we propose a metrics-based approach in order to identify evolution patterns of candidate reuse libraries and ultimately, assist in selecting new libraries for reuse or upgrading existing libraries. We propose a metrics suite that measures structural and behavioral attributes of software systems' evolution that affect their possible reuse by other projects. The proposed metrics measure the overall stability of software systems in terms of their structural consistency and resilience to introducing new bugs, maintainers' focus on resolving the existing bugs and their focus on preserving the system's structural complexity low. Next, we identify patterns in the metrics' behavior during projects' evolution in order to provide insight about the implications in the case of their reuse. We present our findings of a set of nine popular projects, six of which are maintained by the Apache Software Foundation, and report the results concerning the derived metrics' values and the studied library evolution patterns. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [Constantinou, Eleni; Stamelos, Ioannis] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
   [Constantinou, Eleni] Univ Mons, Dept Comp Sci, B-7000 Mons, Belgium.
C3 Aristotle University of Thessaloniki; University of Mons
RP Constantinou, E (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM econst@csd.auth.gr
RI Stamelos, Ioannis/AAK-7207-2020
OI Constantinou, Eleni/0000-0002-4242-2581
CR Aversano L, 2013, WORK CONF REVERSE EN, P417, DOI 10.1109/WCRE.2013.6671317
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bauer V, 2013, EUR CON SFTWR MTNCE, P431, DOI 10.1109/CSMR.2013.65
   Bavota G, 2014, EMPIR SOFTW ENG, V20, P1
   Constantinou E, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1580, DOI 10.1145/2695664.2695895
   Cossette B.E., 2012, P ACM SIGSOFT 20 INT, p55:1, DOI DOI 10.1145/2393596.2393661
   Dietrich J, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P64, DOI 10.1109/CSMR-WCRE.2014.6747226
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Jazayeri M, 2002, LECT NOTES COMPUT SC, V2361, P13
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kula RG, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P520, DOI 10.1109/SANER.2015.7081869
   Kula RG, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P127, DOI 10.1109/VISSOFT.2014.29
   Lammel R., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1317, DOI 10.1145/1982185.1982471
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P1030, DOI 10.1002/smr.1660
   Wagner S, 2005, LECT NOTES COMPUT SC, V3502, P40
   Wu W, 2016, EMPIR SOFTW ENG, V21, P2366, DOI 10.1007/s10664-015-9411-7
NR 24
TC 6
Z9 6
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2017
VL 47
IS 7
SI SI
BP 1027
EP 1039
DI 10.1002/spe.2484
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EG
UT WOS:000403114200008
DA 2024-07-18
ER

PT J
AU Kulkarni, N
   Varma, V
AF Kulkarni, Naveen
   Varma, Vasudeva
TI Perils of opportunistically reusing software module
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software reuse; software bloat; design decisions; opportunistic
   practices
ID CODE REUSE
AB Opportunistic reuse is a need based sourcing of software modules without a prior reuse plan. It is a common tactical approach in software development. Developers often reuse an external software module opportunistically to improve their productivity. But, studies have shown that this results in extensive refactoring and adds maintenance owes. We assert this problem to the mismatches between the software under development and the reused external module; caused because of their different assumptions and constraints. We highlight the problems of such opportunistic reuse practices with the help of a case study. In our study, we found issues such as unanticipated behavior, violated constraints, conflict in assumption, fragile structure, and software bloat. In this paper, we like to draw attention of the research community to the wide spread opportunistic reuse practices and the lack of methods to pro-actively identify and resolve the mismatches. We propose the need for supporting developers in reasoning before reuse from the perspective of identifying and fixing both local and global mismatches. Furthermore, we identify other opportunistic software development practices where similar issues can be observed and also suggest the research areas where further investigation can benefit developers in improving their productivity. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Kulkarni, Naveen; Varma, Vasudeva] IIIT H, Software Engn Res Ctr, Hyderabad 500032, Telangana, India.
   [Kulkarni, Naveen] Infosys Ltd, Bengaluru, India.
C3 International Institute of Information Technology Hyderabad; Infosys
   Limited
RP Kulkarni, N (corresponding author), IIIT H, Software Engn Res Ctr, Hyderabad 500032, Telangana, India.
EM naveen.kulkarni@research.iiit.ac.in
RI Varma, Vasudeva/AIB-4832-2022
OI Varma, Vasudeva/0000-0003-1923-1725
CR Agresti W., 2010, J. Softw. Eng. Appl., V1, P48
   [Anonymous], THESIS
   Apel S, 2008, LECT NOTES COMPUT SC, V4954, P20
   Bosch J, 2004, LECT NOTES COMPUT SC, V3047, P194
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Capiluppi Andrea, 2011, International Journal of Open Source Software & Processes, V3, P10, DOI 10.4018/jossp.2011070102
   Constantinou E., 2015, International Journal of Open Source Software and Processes (IJOSSP), V5, P1, DOI DOI 10.4018/IJOSSP.2014070101
   Dietrich J, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P64, DOI 10.1109/CSMR-WCRE.2014.6747226
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dufour Bruno, 2007, ACM SIGSOFT Int. Symp. Software Testing and Analysis, DOI [10.1145/1273463.1273480, DOI 10.1145/1273463.1273480]
   Filman RE, 2000, POS PAP ADV SEP CONC
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Gacek C., 1998, THESIS
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Garlan D., 2000, FUTURE SOFTWARE ENG, P91
   Garlan D, 2009, IEEE SOFTWARE, V26, P66, DOI 10.1109/MS.2009.86
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Haefliger S, 2008, MANAGE SCI, V54, P180, DOI 10.1287/mnsc.1070.0748
   Heinemann Lars, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P207, DOI 10.1007/978-3-642-21347-2_16
   Jansen A, 2008, J SYST SOFTWARE, V81, P536, DOI 10.1016/j.jss.2007.08.025
   Janson S, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.155
   Kruchten P., 2004, GRON WORKSH SOFTW VA, P54
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Mitchell N, 2007, ACM SIGPLAN NOTICES, V42, P245, DOI 10.1145/1297105.1297046
   Mockus Audris, 2007, International Workshop on Emerging Trends in FLOSS Research and Development, P7, DOI [10.1109/FLOSS.2007.10, DOI 10.1109/FLOSS.2007.10]
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Regli WC, 2000, ENG COMPUT-GERMANY, V16, P209, DOI 10.1007/PL00013715
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Shankar A, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P127
   Sojer M, 2010, J ASSOC INF SYST, V11, P868
   Stanciulescu S, 2015, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSM.2015.7332461
   Stol KJ, 2011, IFIP ADV INF COMM TE, V365, P142
   Tang A, 2007, J SYST SOFTWARE, V80, P127, DOI 10.1016/j.jss.2006.04.004
   Tang A, 2009, IEEE SOFTWARE, V26, P43, DOI 10.1109/MS.2009.46
   Tomer A, 2004, IEEE T SOFTWARE ENG, V30, P601, DOI 10.1109/TSE.2004.50
   Xu GQ, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P174, DOI 10.1145/1806596.1806617
   Xu GQ, 2009, ACM SIGPLAN NOTICES, V44, P419, DOI 10.1145/1543135.1542523
   Xu Guoqing, 2010, P FSE SDP WORKSH FUT, P421
NR 43
TC 5
Z9 6
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2017
VL 47
IS 7
SI SI
BP 971
EP 984
DI 10.1002/spe.2439
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EG
UT WOS:000403114200004
DA 2024-07-18
ER

PT J
AU Kandalintsev, A
   Kliazovich, D
   Lo Cigno, R
AF Kandalintsev, Alexander
   Kliazovich, Dzmitry
   Lo Cigno, Renato
TI <i>Freeze' nSense</i>: estimation of performance isolation in cloud
   environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance measure; data-center management; cloud services; application
   profiling; resource management; computation interference; hardware
   performance counters; performance isolation
AB Modern computing hardware has a very good task parallelism, but resource contention between tasks remains high. This renders large fractions of CPU time wasted and leads to application interference. Even tasks running on dedicated CPU cores can still incur interference from other tasks, most notably because of the caches and other hardware components shared by more than one core. The level of interference depends on the nature of executed tasks and is difficult to predict. A customer who has been granted that his task will run as if it were alone (e.g., a CPU core dedicated to a virtual machine), indeed suffers from significant performance degradation due to the time spent waiting for resources occupied by other tasks. Measuring actual performance of a task or a virtual machine can be difficult. However, even more challenging is estimating what the performance of the task should be if it were running completely in isolation. In this paper, we present a measurement technique Freeze'nSense. It is based on the hardware performance counters and allows measuring actual performance of a task and estimating performance as if the task were in isolation, all during runtime. To estimate performance in isolation, the proposed technique performs a short-time freezing of the potentially interfering tasks. Freeze'nSense introduces lower than 1% overhead and is confirmed to provide accurate and reliable measurements. In practice, Freeze'nSense becomes a valuable tool helping to automatically identify tasks that suffer the most in a shared environment and move them to a distant core. The observed performance improvement can be as large as 80-100% for individual tasks, and scale up to 15-20% for the computing node. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Kandalintsev, Alexander; Lo Cigno, Renato] Univ Trento, Trento, Italy.
   [Kliazovich, Dzmitry] Univ Luxembourg, Luxembourg, Luxembourg.
C3 University of Trento; University of Luxembourg
RP Lo Cigno, R (corresponding author), Univ Trento, Trento, Italy.
EM locigno@disi.unitn.it
RI Lo Cigno, Renato/E-9777-2011
OI Lo Cigno, Renato/0000-0002-4755-2844
CR Allameldeen AR, 2006, IEEE MICRO, V26, P8, DOI 10.1109/MM.2006.73
   AMD, 2013, BIOS KERN DEV GUID B
   [Anonymous], 2014, SOFTWARE PRACTICE EX, V44, P771
   [Anonymous], 2013, P 8 ACM EUROPEAN C C
   [Anonymous], 2011, SIGMOD 2011
   [Anonymous], 2014, INT 64 IA 32 ARCH OP
   [Anonymous], P 4 ANN INT C SYST S
   Bhatia S., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P103
   Butler M, 2011, IEEE MICRO, V31, P6, DOI 10.1109/MM.2011.23
   Romero JC, 2014, SOFTWARE PRACT EXPER, V44, P889, DOI 10.1002/spe.2181
   Cao J, 2014, SOFTWARE PRACT EXPER, V44, P793, DOI 10.1002/spe.2231
   Dwyer T., 2012, P INT C HIGH PERF CO, P1
   Eyerman S, 2009, ACM SIGPLAN NOTICES, V44, P133, DOI 10.1145/1508284.1508260
   Gupta D, 2006, LECT NOTES COMPUT SC, V4290, P342
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Kandalintsev A, 2014, 2014 INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN 2014), P52, DOI 10.1109/ICOIN.2014.6799664
   Kandalintsev A, 2012, IV INTERNATIONAL CONGRESS ON ULTRA MODERN TELECOMMUNICATIONS AND CONTROL SYSTEMS 2012 (ICUMT), P40, DOI 10.1109/ICUMT.2012.6459701
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kleen A., 2005, TECHNICAL REPORT
   Kumar A., 2006, INFOCOM 2006. 25th IEEE International Conference on Computer Commu-nications. Proceedings, DOI [10.1109/INFOCOM.2006. 326, DOI 10.1109/INFOCOM.2006.326]
   Novakovic D, 2013, USENIX ATC 13, P219
   Rao J, 2013, INT S HIGH PERF COMP, P306, DOI 10.1109/HPCA.2013.6522328
   Saini Subhash., 2011, HIGH PERFORMANCE COM, P1, DOI [10.1109/HiPC.2011.6152743, DOI 10.1109/HIPC.2011.6152743]
   Sandler A, SMP AFFINITY PROPER
   Severyn A, 2011, LECT NOTES ARTIF INT, V6913, P175, DOI 10.1007/978-3-642-23808-6_12
   Stark D, 2008, LECT NOTES COMPUT SC, V4967, P1170
   Tam D, 2007, P 2 ACM SIGOPS EUR C, P47
   Wang W, 2012, ACM SIGPLAN NOTICES, V47, P27, DOI 10.1145/2365864.2151031
   Weaver VM, 2015, INT SYM PERFORM ANAL, P102, DOI 10.1109/ISPASS.2015.7095789
   Weaver VM, 2013, P 2 INT WORKSH PERF
   Wood T., 2007, P 4 USENIX S NETW SY, P229, DOI DOI 10.1109/ICAC.2006.1662416
NR 31
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2017
VL 47
IS 6
BP 831
EP 847
DI 10.1002/spe.2456
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EE
UT WOS:000403114000003
DA 2024-07-18
ER

PT J
AU Katajainen, J
AF Katajainen, Jyrki
TI All-in-one implementation framework for binary heaps
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE customizable software libraries; adaptable component frameworks; data
   structures; binary heaps; generic programming; benchmarking
AB Even a rough literature review reveals that there are many alternative ways of implementing a binary heap, the fundamental priority-queue structure loved by us all. Which one of these alternatives is the best in practice? The opinions of crowd-pullers and textbook authors are aligned: use an array. Of course, the correct answer is it depends'. To get from opinions to facts, a frameworka set of class templateswas written that provides a variety of customization options so it could be used to realize a large part of the proposed variants. Also, some of the derived implementations were performance benchmarked. From this work, three conclusions can be drawn: (i)It is difficult to achieve space efficiency and speed at the same time. If n denotes the current number of values in the data structure, E is a small positive real, E<1, and |V| denotes the size of the values of type V in bytes, space efficiency means (1+E)|V|n bytes of space, and speed means O(lgn) worst-case time per push and pop. (ii) If an array-based solution is sufficient, Williams' original program from 1964 is still to this day hard to beat. (iii)Sometimes a linked structure and clever programming is a viable option. If the binary-heap variant you need is not available at the software library you are using, reading this essay might save you some headaches. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Katajainen, Jyrki] Univ Copenhagen, Dept Comp Sci, Univ Pk 5, DK-2100 Copenhagen East, Denmark.
C3 University of Copenhagen
RP Katajainen, J (corresponding author), Univ Copenhagen, Dept Comp Sci, Univ Pk 5, DK-2100 Copenhagen East, Denmark.
EM jyrki@di.ku.dk
CR [Anonymous], 1973, The art of computer programming
   Austern M., 2001, C C USERS J, V19, P74
   Austern MH, 2003, SOFTWARE PRACT EXPER, V33, P1273, DOI 10.1002/spe.564
   Bentley JL, 2000, PROGRAMMING PEARLS
   Bojesen J, 2000, ACM J EXP ALGORITHMI, V5
   Bojesen J, 1998, HEAP IMPLEMENTATIONS
   Brodal GS, 2013, LECT NOTES COMPUTER, V8066, P150
   Brodnik A, 1999, LECT NOTES COMPUT SC, V1663, P37
   Bruun A, 2010, LECT NOTES COMPUT SC, V6049, P424, DOI 10.1007/978-3-642-13193-6_36
   Clancy MJ, 1977, STANCS77606
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Edelkamp S., 2012, CRPIT, P103
   Edelkamp S, 2012, J DISCRET ALGORITHMS, V16, P187, DOI 10.1016/j.jda.2012.04.010
   Elmasry Amr, 2013, Experimental Algorithms 12th International Symposium, SEA 2013. Proceedings, P127, DOI 10.1007/978-3-642-38527-8_13
   Elmasry A, ARXIV11120993
   FLOYD RW, 1964, COMMUN ACM, V7, P701, DOI 10.1145/355588.365103
   FREDMAN ML, 1987, J ACM, V34, P596, DOI 10.1145/28869.28874
   Goodrich M.T., 2004, Data Structures and Algorithms in C++
   HAYWARD R, 1991, J ALGORITHM, V12, P126, DOI 10.1016/0196-6774(91)90027-V
   Katajainen J., 2001, Algorithm Engineering. 5th International Workshop, WAE 2001. Proceedings (Lecture Notes in Computer Science Vol.2141), P39
   Katajainen J, 2009, 20097 CPH STL U COP
   Katajainen J, 2017, SOFTWARE PRACT EXPER, V47, P523, DOI 10.1002/spe.2423
   Katajainen J, 2016, LECT NOTES COMPUT SC, V9685, P167, DOI 10.1007/978-3-319-38851-9_12
   Katajainen J, 2009, WGP'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN WORKSHOP ON GENERIC PROGRAMMING, P13
   Kolb David A, 2014, EXPERIENTIAL LEARNIN, DOI [10.1002/job.4030080408, DOI 10.1016/B978-0-7506-7223-8.50017-4]
   LaMarca A., 1996, J. Exp. Algorithmics, V1
   Luby MG, 1996, SIAM J DISCRETE MATH, V9, P155, DOI 10.1137/S089548019325647X
   ROBSON JM, 1971, J ACM, V18, P416, DOI 10.1145/321650.321658
   Sanders P., 2000, ACM Journal of Experimental Algorithmics, V5, DOI 10.1145/351827.384249
   Simonsen B., 2009, 20093 CPH STL U COP
   Stack Exchange Inc, 2013, HEAP IMPL US POINT
   Stack Exchange Inc, 2013, POINT BAS BIN HEAP I
   Stepanov A., 2001, STL TUTORIAL REFEREN
   Stroustrup Bjarne, 2013, The C++ programming language
   The C++ Standard Committee, 2014, N4296 ISOIEC
   VUILLEMIN J, 1978, COMMUN ACM, V21, P309, DOI 10.1145/359460.359478
   WEGNER LM, 1989, IEEE T SOFTWARE ENG, V15, P917, DOI 10.1109/32.29490
   WILLIAMS JWJ, 1964, COMMUN ACM, V7, P347
   WOODALL DR, 1974, AM MATH MON, V81, P240, DOI 10.2307/2319522
NR 39
TC 1
Z9 1
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2017
VL 47
IS 4
BP 523
EP 558
DI 10.1002/spe.2423
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM7IR
UT WOS:000395485200002
DA 2024-07-18
ER

PT J
AU Chen, D
   Hu, YY
   Cai, C
   Zeng, K
   Li, XL
AF Chen, Dan
   Hu, Yangyang
   Cai, Chang
   Zeng, Ke
   Li, Xiaoli
TI Brain big data processing with massively parallel computing technology:
   challenges and opportunities
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; brain data; neural signal processing; massively parallel
   computing; generalpurpose computing on the graphics processing unit
   (GPGPU)
ID EMPIRICAL-MODE DECOMPOSITION; IMAGE SEGMENTATION; RECONSTRUCTION;
   SIGNALS; SYSTEM; ALGORITHMS; CLOUD
AB Brain data processing has been embracing the big data era driven by the rapid advances of neuroscience as well as the experimental techniques for recording neuronal activities. Processing of massive brain data has become a constant in neuroscience research and practice, which is vital in revealing the hidden information to better understand the brain functions and malfunctions. Brain data are routinely non-linear and non-stationary in nature, and existing algorithms and approaches to neural data processing are generally complicated in order to characterize the non-linearity and non-stationarity. Brain big data processing has pressing needs for appropriate computing technologies to address three grand challenges: (1) efficiency, (2) scalability and (3) reliability. Recent advances of computing technologies are making non-linear methods viable in sophisticated applications of massive brain data processing. General-purpose Computing on the Graphics Processing Unit (GPGPU) technology fosters an ideal environment for this purpose, which benefits from the tremendous computing power of modern graphics processing units in massively parallel architecture that is frequently an order of magnitude larger than the modern multi-core CPUs. This article first recaps significant speed-ups of existing algorithms aided by GPGPU in neuroimaging and processing electroencephalogram (EEG), functional magnetic resonance imaging (fMRI), magnetoencephalography (MEG) and etc. The article then demonstrates a series of successful approaches to processing EEG data in various dimensions and scales in a massively parallel manner: (1) decomposition: a massively parallel Ensemble Local Mean Decomposition (ELMD) algorithm aided by GPGPU can decompose EEG series, which forms the basis of further time-frequency transformation, in real-time without sacrificing the precision of processing; (2) synchronization measurement: a parallelized Nonlinear Interdependence (NLI) method for global synchronization measurement of multivariate EEG with speed-up of more than 1000 times, and it was successful in localization of epileptic focus; and (3) dimensionality reduction: a large-scale Parallel Factor Analysis which excels in run-time performance and scales far better by hundreds of times than conventional approach does, and it supports fast factorization of EEG with more than 1000 channels. Through these practices, the massively parallel computing technology manifests great potentials in addressing the grand challenges of brain big data processing. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Chen, Dan] Wuhan Univ, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
   [Hu, Yangyang; Cai, Chang] China Univ Geosci, Sch Comp Sci, Wuhan 430074, Peoples R China.
   [Zeng, Ke; Li, Xiaoli] Beijing Normal Univ, Natl Key Lab Cognit Neurosci & Learning, Beijing 100875, Peoples R China.
   [Chen, Dan] Collaborat & Innovat Ctr Educ Technol, Beijing, Peoples R China.
C3 Wuhan University; China University of Geosciences; Beijing Normal
   University
RP Chen, D (corresponding author), Wuhan Univ, Sch Comp, Wuhan 430072, Peoples R China.
EM dan.chen@ieee.org
RI Wang, Lizhe/L-7453-2014; Li, Xiaoli/GYQ-7384-2022; Li,
   Xiaoli/B-6565-2016; Li, Xiaoli/JAC-5560-2023
OI Li, Xiaoli/0000-0003-1359-5130; Li, Xiaoli/0000-0003-1359-5130
FU National Natural Science Foundation of China [61273063, 61272314,
   81230023]; Fundamental Research Funds for the Central Universities
   ((WHU)) [2042015kf1009, 211410100028]; Science & Technology Supporting
   Program in Hubei province [2015BAA113]; Excellent Youth Foundation of
   Hubei Scientific Committee [2012FFA025]; Major Achievements
   Transformation Projects for the Central Universities in Beijing
FX This work was supported in part by the National Natural Science
   Foundation of China (Nos. 61273063, 61272314, 81230023), Fundamental
   Research Funds for the Central Universities ((WHU) Nos. 2042015kf1009,
   211410100028), Science & Technology Supporting Program in Hubei province
   (No. 2015BAA113), the Excellent Youth Foundation of Hubei Scientific
   Committee (No. 2012FFA025), and Major Achievements Transformation
   Projects for the Central Universities in Beijing.
CR Adelino R., 2010, R J, V2, P48
   Alhamazani K., 2012, 2012 IEEE 4th International Conference on Cloud Computing Technology and Science (CloudCom). Proceedings, P765, DOI 10.1109/CloudCom.2012.6427532
   Andersson CA, 1998, CHEMOMETR INTELL LAB, V42, P93, DOI 10.1016/S0169-7439(98)00010-0
   Phan AH, 2011, NEUROCOMPUTING, V74, P1970, DOI 10.1016/j.neucom.2010.06.030
   [Anonymous], INT HUMAN RIGHTS LAW
   [Anonymous], IEEE INT C IM PROC I
   [Anonymous], 2009, NVIDIAS NEXT GEN CUD
   [Anonymous], 2012, Nvidias next generation cuda compute architecture: Kepler gk110
   Bergen RV, 2015, MAGN RESON IMAGING, V33, P134, DOI 10.1016/j.mri.2014.08.019
   Blakely T, 2014, J NEUROSCI METH, V222, P24, DOI 10.1016/j.jneumeth.2013.10.005
   Bücker HM, 2008, SIAM J SCI COMPUT, V30, P2905, DOI 10.1137/07069198X
   Cao Y, 2009, ARXIV E PRINTS
   Carmi E, 2006, MAGN RESON IMAGING, V24, P133, DOI 10.1016/j.mri.2005.09.011
   Chen D, 2015, IEEE T COMPUT, V64, P707, DOI 10.1109/TC.2013.2295806
   Chen D, 2014, IEEE T NEUR SYS REH, V22, P33, DOI 10.1109/TNSRE.2013.2258939
   Chen D, 2013, CLUSTER COMPUT, V16, P39, DOI 10.1007/s10586-011-0175-6
   Chen D, 2011, COMPUT SCI ENG, V13, P42, DOI 10.1109/MCSE.2011.20
   Chen D, 2010, IEEE T INF TECHNOL B, V14, P1417, DOI 10.1109/TITB.2010.2072963
   COMON P, 1994, SIGNAL PROCESS, V36, P287, DOI 10.1016/0165-1684(94)90029-9
   Cong FY, 2015, J NEUROSCI METH, V248, P59, DOI 10.1016/j.jneumeth.2015.03.018
   Cunningham JP, 2014, NAT NEUROSCI, V17, P1500, DOI 10.1038/nn.3776
   Dorgham OM, 2012, IEEE T BIO-MED ENG, V59, P2594, DOI 10.1109/TBME.2012.2207898
   da Silva ARF, 2011, COMPUT METH PROG BIO, V102, P238, DOI 10.1016/j.cmpb.2010.05.003
   Garland M, 2010, COMMUN ACM, V53, P58, DOI 10.1145/1839676.1839694
   Gembris D, 2011, J REAL-TIME IMAGE PR, V6, P275, DOI 10.1007/s11554-010-0162-9
   Gruslys A, 2014, IEEE T MED IMAGING, V33, P2118, DOI 10.1109/TMI.2014.2332370
   HAMALAINEN M, 1993, REV MOD PHYS, V65, P413, DOI 10.1103/RevModPhys.65.413
   Jang B, 2009, I S BIOMED IMAGING, P185, DOI 10.1109/ISBI.2009.5193014
   Kainz B, 2015, IEEE T MED IMAGING, V34, P1901, DOI 10.1109/TMI.2015.2415453
   Kelly RC, 2007, J NEUROSCI, V27, P261, DOI 10.1523/JNEUROSCI.4906-06.2007
   Kinouchi S, 2012, IEEE T NUCL SCI, V59, P1977, DOI 10.1109/TNS.2012.2201953
   Kondratieva P, 2005, IEEE VISUALIZATION 2005, PROCEEDINGS, P73
   Kreuz T, 2007, PHYSICA D, V225, P29, DOI 10.1016/j.physd.2006.09.039
   Kurihara T, 2010, IEICE TECHNICAL REPO, V110, P15
   Li JS, 2014, IEEE ENG MED BIO, P2412, DOI 10.1109/EMBC.2014.6944108
   Li XL, 2007, J NEUROSCI METH, V160, P178, DOI 10.1016/j.jneumeth.2006.08.006
   Linbo L, IEEE T COMPUTATIOAL, P1
   Liu P, 2014, COMPUT INFORM, V33, P197
   Liu W, 2010, LECT NOTES COMPUT SC, V6362, P363
   Luo LB, 2014, COMPUT ANIMAT VIRT W, V25, P395, DOI 10.1002/cav.1588
   Ma Y, 2014, IEEE T PARALL DISTR, V25, P2126, DOI 10.1109/TPDS.2013.272
   Mamin HJ, 2007, NAT NANOTECHNOL, V2, P301, DOI 10.1038/nnano.2007.105
   Matenine D, 2015, MED PHYS, V42, P1505, DOI 10.1118/1.4914143
   McGraw T, 2007, IEEE T VIS COMPUT GR, V13, P1504, DOI 10.1109/TVCG.2007.70597
   Mellanox Technologies, 2014, INF CARDS OV
   Merhof D, 2006, IEEE T VIS COMPUT GR, V12, P1181, DOI 10.1109/TVCG.2006.151
   Mittmann A, 2008, COMPUT MED IMAG GRAP, V32, P521, DOI 10.1016/j.compmedimag.2008.05.006
   Morrison A, 2005, NEURAL COMPUT, V17, P1776, DOI 10.1162/0899766054026648
   Müller A, 2006, J NEUROSCI METH, V152, P190, DOI 10.1016/j.jneumeth.2005.09.002
   NVIDIA, 2015, TUN CUDA APPL MAXW
   NVIDIA, 2015, DEV LIN KERN MOD US
   Pearson K, 1901, PHILOS MAG, V2, P559, DOI 10.1080/14786440109462720
   Peker M, 2015, J MED SYST, V39, DOI 10.1007/s10916-015-0197-3
   Ranjan R, 2015, IEEE T CLOUD COMPUT, V3, P101, DOI 10.1109/TCC.2015.2437231
   Ruiz A, 2008, I S BIOMED IMAGING, P296, DOI 10.1109/ISBI.2008.4540991
   Sanei E, 2007, EEG SIGNAL PROCESSIN
   Scheinost D, 2013, NEUROINFORMATICS, V11, P291, DOI 10.1007/s12021-013-9176-3
   Schiwietz T, 2006, P SOC PHOTO-OPT INS, V6142
   Schreiber T, 2000, PHYSICA D, V142, P346, DOI 10.1016/S0167-2789(00)00043-9
   Shi YL, 2015, J NEUROSCI METH, V239, P1, DOI 10.1016/j.jneumeth.2014.09.022
   Smistad E, 2015, MED IMAGE ANAL, V20, P1, DOI 10.1016/j.media.2014.10.012
   Smith JS, 2005, J ROY SOC INTERFACE, V2, P443, DOI 10.1098/rsif.2005.0058
   Springer P., 2012, STUDY PRODUCTIVITY P
   Stevenson IH, 2011, NAT NEUROSCI, V14, P139, DOI 10.1038/nn.2731
   Wang LZ, 2014, COMPUT SCI ENG, V16, P41, DOI 10.1109/MCSE.2014.52
   Wilson J. A., 2009, FRONTIERS NEUROENGIN, V2
   Wu ZH, 2009, ADV DATA SCI ADAPT, V1, P1, DOI 10.1142/S1793536909000047
   Xue W, 2015, IEEE T COMPUT, V64, P2382, DOI 10.1109/TC.2014.2366754
   Yang Y, 2012, MEASUREMENT, V45, P561, DOI 10.1016/j.measurement.2011.10.010
   Zhang T, 2015, J NEUROSCI METH, V240, P28, DOI 10.1016/j.jneumeth.2014.10.018
   Zhao JQ, 2016, COMPUTING, V98, P55, DOI 10.1007/s00607-014-0390-0
   Zhao JQ, 2014, J COMPUT SYST SCI, V80, P994, DOI 10.1016/j.jcss.2014.02.006
   Zou YL, 2014, FUTURE GENER COMP SY, V37, P378, DOI 10.1016/j.future.2013.12.039
NR 73
TC 17
Z9 18
U1 0
U2 56
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2017
VL 47
IS 3
SI SI
BP 405
EP 420
DI 10.1002/spe.2418
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL9RK
UT WOS:000394957500006
DA 2024-07-18
ER

PT J
AU Gupta, K
   Nandivada, VK
AF Gupta, Kartik
   Nandivada, V. Krishna
TI Lexical state analyzer for JavaCC grammars
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compilers; context-free grammar; lexical states; JavaCC
AB Lexical states in JavaCC provide a powerful mechanism to scan regular expressions in a context sensitive manner. But lexical states also make it hard to reason about the correctness of the grammar. We first categorize the related correctness issues into two classes: errors and warnings. We then extend the traditional context sensitive and a context insensitive analysis to identify errors and warnings in context-free grammars. We have implemented these analyses as a standalone tool (LSA), the first of its kind, to identify errors and warnings in JavaCC grammars. The LSA tool outputs a graph that depicts the grammar and the error transitions. Importantly, it can also generate counter example strings that can be used to establish the errors. We have used LSA to analyze a host of open-source JavaCC grammar files to good effect. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Gupta, Kartik; Nandivada, V. Krishna] IIT, Dept CSE, Madras 600036, Tamil Nadu, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Madras
RP Nandivada, VK (corresponding author), IIT, Dept CSE, Madras 600036, Tamil Nadu, India.
EM nvk@iitm.ac.in
OI Nandivada, V Krishna/0000-0002-5949-0046
FU New Faculty Seed Grant; IIT Madras [CSE/11-12/567/NFSC/NANV]; DAE
   [CSE/13-14/139/BRNS/NANV]; DST [CSE/13-14/140/DSTX/NANV]
FX We thank Supratik Chakraborty at IIT Bombay for his insightful comments
   regarding the possible translation of grammar with lexical states to one
   without and the resulting exponential blow up (Section 2.7). This
   research is partially supported by the New Faculty Seed Grant, funded by
   IIT Madras CSE/11-12/567/NFSC/NANV, DAE research grant
   CSE/13-14/139/BRNS/NANV and DST Fasttrack grant CSE/13-14/140/DSTX/NANV.
CR [Anonymous], ANTLR V4 GRAMMAR PLU
   [Anonymous], 1999, P OBJ OR SYST LANG
   [Anonymous], 1994, Program analysis and specialization for the C programming language
   [Anonymous], ESOP
   [Anonymous], JTB JAVA TREE BUILDE
   [Anonymous], ICCSW
   [Anonymous], DRAWING GRAPHS DOT
   [Anonymous], SCAM
   [Anonymous], ESOP
   Brabrand C, 2010, SCI COMPUT PROGRAM, V75, P176, DOI 10.1016/j.scico.2009.11.002
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   GORN S, 1963, J ACM, V10, P196, DOI 10.1145/321160.321168
   Hopcroft John E., 2003, Introduction to Automata Theory, Languages, and Computation
   Jagannathan Suresh., 1998, POPL, P329
   Muchnick S., 1997, ADV COMPILER DESIGN
   Nandivada V. K., 2006, Higher-Order and Symbolic Computation, V19, P101, DOI 10.1007/s10990-006-8610-8
   Nielson F., 1999, Principles of Program Analysis
   Cardona PAN, 2015, CUAD ACT, P154
   Schroer Friedrich Wilhelm, 2001, AMBER, an ambiguity checker for context-free grammars
NR 19
TC 0
Z9 0
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2016
VL 46
IS 6
BP 751
EP 765
DI 10.1002/spe.2322
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK1WU
UT WOS:000374706600002
DA 2024-07-18
ER

PT J
AU Righi, RD
   Graebin, L
   da Costa, CA
AF Righi, Rodrigo da Rosa
   Graebin, Lucas
   da Costa, Cristiano Andre
TI On the replacement of objects from round-based applications over
   heterogeneous environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE load balancing and task assignment; heterogeneous systems; systems
   analysis and design; Java; distributed systems; scheduling
AB In recent years, there has been growing support for more tightly coupled applications regarding heterogeneous resources. A specific way of obtaining better performance in such applications is to consider the replacement of execution entities by newer resources during the application's lifetime. Therefore, this article describes the rationale for developing jMigBSP, which is a Java programming library that offers object rescheduling for round-based applications. In this context, the proposal addresses Bulk Synchronous Parallel (BSP) applications because BSP represents one of the most often used models for writing tightly coupled parallel programs. jMigBSP's main contribution examines the rescheduling facility in two different ways: (i) using migration directives in the application code directly; and (ii) through automatic load balancing at the middleware level. Specifically, this second idea is feasible because of Java's inheritance feature, which transforms a simple jMigBSP application into a migratable one by changing only a single line of code. In addition to the description of jMigBSP, this article emphasizes the benefits of using migration over heterogeneous environments by executing scientific applications. The results indicate gains of up to 56% with object rescheduling and support the feasibility of using migration as a load balancing technique. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Righi, Rodrigo da Rosa; Graebin, Lucas; da Costa, Cristiano Andre] Univ Vale Rio Sinos UNISINOS, Appl Comp Grad Program PIPCA, Sao Leopoldo, RS, Brazil.
C3 Universidade do Vale do Rio dos Sinos (Unisinos)
RP Righi, RD (corresponding author), Univ Vale Rio dos Sinos, Appl Comp Grad Program PIPCA, Unisinos Ave 950,POB 93-022-000, Sao Leopoldo, RS, Brazil.
EM rrrighi@unisinos.br
RI da Rosa Righi, Rodrigo/T-9430-2019; da Costa, Cristiano
   André/AAV-1894-2020
OI da Rosa Righi, Rodrigo/0000-0001-5080-7660; da Costa, Cristiano
   André/0000-0003-3859-6199
CR Anagnostopoulos I, 2012, DES AUT TEST EUROPE, P111
   [Anonymous], J APPL COMPUTING RES
   [Anonymous], P 8 INT ACM SIGSOFT
   [Anonymous], WILEY PROFESSIONAL C
   [Anonymous], IPDPS 02
   [Anonymous], P 6 WORKSH MIDDL SER
   [Anonymous], ELEMENTARY STATICS
   [Anonymous], 20 ITC SPEC SEM NETW
   [Anonymous], THESIS
   [Anonymous], SC 04
   [Anonymous], PARALLEL SCI COMPUTA
   [Anonymous], 2012 INT C COMP COMM
   [Anonymous], IEEE INT C CLUST COM
   [Anonymous], PARALLEL PROCESSING
   [Anonymous], ED TECHNOLOGY TRAINI
   [Anonymous], 21 INT PAR DISTR PRO
   Pascual JA, 2009, LECT NOTES COMPUT SC, V5798, P138, DOI 10.1007/978-3-642-04633-9_8
   Balaji P, 2011, PARALLEL PROCESS LET, V21, P45, DOI 10.1142/S0129626411000060
   Bhandarkar MA, 2000, LECT NOTES COMPUT SC, V1800, P1152
   Bonorden O, 2006, LECT NOTES COMPUT SC, V3911, P801
   Chao Huang, 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P12, DOI 10.1145/1122971.1122976
   de Camargo R. Y., 2005, Proceedings. 17th International Symposium on Computer Architecture and High Performance Computing, P226
   El Kabbany GF, 2011, INT J PARALLEL PROG, V39, P143, DOI 10.1007/s10766-010-0134-5
   El Maghraoui K, 2006, INT J HIGH PERFORM C, V20, P467, DOI 10.1177/1094342006068411
   Graebin L., 2011, Proceedings of the 2011 12th International Conference on Parallel and Distributed Computing Applications and Technologies (PDCAT 2011), P35, DOI 10.1109/PDCAT.2011.48
   Gu Y, 2001, J PARALLEL DISTR COM, V61, P1126, DOI 10.1006/jpdc.2001.1735
   Guo YJ, 2009, 2009 WRI INTERNATIONAL CONFERENCE ON COMMUNICATIONS AND MOBILE COMPUTING: CMC 2009, VOL 3, P492, DOI 10.1109/CMC.2009.82
   Hendrickson B, 2009, J PHYS CONF SER, V180, DOI 10.1088/1742-6596/180/1/012013
   Hill JMD, 1998, PARALLEL COMPUT, V24, P1947, DOI 10.1016/S0167-8191(98)00093-3
   Kwok YK, 2004, J PARALLEL DISTR COM, V64, P238, DOI 10.1016/j.jpdc.2003.11.002
   Liu H, 2010, CLUSTER COMPUT, V13, P397, DOI 10.1007/s10586-010-0123-x
   Liu H, 2009, HPCC: 2009 11TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, P506, DOI 10.1109/HPCC.2009.48
   Martin JMR, 2004, CONCUR SYST ENGN SER, V62, P219
   Moreno-Vozmediano R, 2005, LECT NOTES COMPUT SC, V3402, P274
   Pontelli E, 2010, COMPUT LANG SYST STR, V36, P158, DOI 10.1016/j.cl.2009.09.001
   Skillicorn D. B., 1997, Scientific Programming, V6, P249
   Sonmez O., 2010, Proceedings of the 19th ACM International Symposium on High Performance Distributed Computing, HPDC'10, P49
   ULLMAN JD, 1975, J COMPUT SYST SCI, V10, P384, DOI 10.1016/S0022-0000(75)80008-0
   Vadhiyar SS, 2005, CONCURR COMP-PRACT E, V17, P235, DOI 10.1002/cpe.927
   VALIANT LG, 1990, COMMUN ACM, V33, P103, DOI 10.1145/79173.79181
   Waraich SS, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P1263
   Williams TL, 2000, LECT NOTES COMPUT SC, V1800, P102
   Xhafa F, 2010, FUTURE GENER COMP SY, V26, P608, DOI 10.1016/j.future.2009.11.005
   Yee-Ming Chen, 2011, Proceedings of the 2011 International Conference on Machine Learning and Cybernetics (ICMLC 2011), P961, DOI 10.1109/ICMLC.2011.6016893
   Yi Tan, 2011, Proceedings of the 2011 9th IEEE International Conference on Industrial Informatics (INDIN 2011), P431, DOI 10.1109/INDIN.2011.6034918
   Yzelman AN, 2014, INT J PARALLEL PROG, V42, P619, DOI 10.1007/s10766-013-0262-9
   Yzelman AN, 2012, CONCURR COMP-PRACT E, V24, P533, DOI 10.1002/cpe.1843
   Zhu JQ, 2006, GCC 2005: FIFTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P17
NR 48
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2015
VL 45
IS 5
BP 633
EP 656
DI 10.1002/spe.2253
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF4OC
UT WOS:000352528200003
DA 2024-07-18
ER

PT J
AU Dinh, MN
   Abramson, D
   Jin, C
   Gontarek, A
   Moench, B
   DeRose, L
AF Minh Ngoc Dinh
   Abramson, David
   Jin, Chao
   Gontarek, Andrew
   Moench, Bob
   DeRose, Luiz
TI A data-centric framework for debugging highly parallel applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software debugging; parallel debugger; assertion
AB Contemporary parallel debuggers allow users to control more than one processing thread while supporting the same examination and visualisation operations of that of sequential debuggers. This approach restricts the use of parallel debuggers when it comes to large scale scientific applications run across hundreds of thousands compute cores. First, manually observing the runtime data to detect error becomes impractical because the data is too big. Second, performing expensive but useful debugging operations becomes infeasible as the computational codes become more complex, involving larger data structures, and as the machines become larger. This study explores the idea of a data-centric debugging approach, which could be used to make parallel debuggers more powerful. It discusses the use of ad hoc debug-time assertions that allow a user to reason about the state of a parallel computation. These assertions support the verification and validation of program state at runtime as a whole rather than focusing on that of only a single process state. Furthermore, the debugger's performance can be improved by exploiting the underlying parallel platform because the available compute cores can execute parallel debugging functions, while a program is idling at a breakpoint. We demonstrate the system with several case studies and evaluate the performance of the tool on a 20000 cores Cray XE6. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Minh Ngoc Dinh; Abramson, David; Jin, Chao] Monash Univ, Clayton, Vic 3800, Australia.
   [Gontarek, Andrew; Moench, Bob; DeRose, Luiz] Cray Inc, St Paul, MN 55101 USA.
C3 Monash University
RP Dinh, MN (corresponding author), Monash Univ, Clayton, Vic 3800, Australia.
EM minh.ngoc.dinh@monash.edu
OI Dinh, Minh Ngoc/0000-0003-4026-6068; Abramson, David/0000-0003-0441-4596
FU Australian Research Council under the Linkage grant scheme; Cray Inc.;
   Defence Advanced Research Projects Agency [HR0011-07-9-0001]
FX This project is supported by the Australian Research Council under the
   Linkage grant scheme and by Cray Inc. This material is based upon work
   supported by the Defence Advanced Research Projects Agency under its
   Agreement No. HR0011-07-9-0001. Any opinions, findings and conclusions
   or recommendations expressed in this material are those of the author(s)
   and do not necessarily reflect the views of the Defence Advanced
   Research Projects Agency.
CR AbdulGhani M., 2012, THESIS DEAKIN U
   ABRAMSON D, 1990, COMPUT J, V33, P230, DOI 10.1093/comjnl/33.3.230
   Abramson D, 1996, COMMUN ACM, V39, P69, DOI 10.1145/240455.240475
   Abramson D, DATA CENTRIC HIGHLY, P119
   Abramson D, 2009, ECLIPSE GUARD RELATI
   Abramson D, RELATIVE DEBUGGING U, P3
   Allinea, 2009, ALL DDT REV DEB
   [Anonymous], 2006, Why programs fail-a guide to systematic debugging
   ASC - Advanced Simulation and Computing, 2011, ASC SEQ BENCHM COD
   Auguston M, FORMAN PROGRAM FORMA
   Auguston M, FRAMEWORK AUTOMATIC, P217
   CACS, 2011, HIGH PERF COMP SIM
   CHAN TF, 1983, AM STAT, V37, P242, DOI 10.2307/2683386
   Chao J, 2012, IEEE ACM INT S CLUST
   Cheng D., 1994, Proceedings Supercomputing '94 (Cat. No.94CH34819), P723, DOI 10.1109/SUPERC.1994.344338
   Cios K., 2007, Data Mining A Knowledge Discovery
   Dean J., 2004, 6 S OP SYST DES IMPL
   Dolphin Interconnect Solutions Inc, 2009, TOTALVIEW DEB COMPR
   DRABENT W, 1989, LOGIC PROGRAMM, P501
   FAIRLEY RE, 1979, IEEE T SOFTWARE ENG, V5, P426, DOI 10.1109/TSE.1979.230176
   Fidge C.J., 1988, PADD 88 P 1988 ACM S, P183
   Foster H. D., 2005, ASSERTION BASED DESI, V2nd
   Frenkel D., 2002, UNDERSTANDING MOL SI
   Frey M, TEMPORAL LOGIC LANGU, P170
   Gao Q, 2007, INT C HIGH PERF COMP
   Gioachin F, 2009, INT S PAR DISTR PROC, P1
   Gunter E, TEMPORAL DEBUGGING C, P431
   Kitware Inc, 2012, VTK VIS TOOLK
   LIU X., 2007, NSDI
   Liu X, 2008, NETW SYST DES IMPL N
   Michalakes J, 2007, HIGH PERFORMANCE NET
   Molina M., 2005, INT TEL C ITC 19
   Nakano A, 2007, COMP MATER SCI, V38, P642, DOI 10.1016/j.commatsci.2006.04.012
   NICOLAS JJ, 1979, MOL PHYS, V37, P1429, DOI 10.1080/00268977900101051
   Ogata S, 2003, COMPUT PHYS COMMUN, V153, P445, DOI 10.1016/S0010-4655(03)00246-7
   Petitet A., 2009, BLOCK CYCLIC DATA DI
   Plewa T., 2005, Adaptive Mesh RefinementTheory and Applications
   Puebla G, 1998, LECT NOTES COMPUT SC, V1520, P472
   Siegel SF, COLLECTIVE ASSERTION
   Viravan C, 1994, ENHANCING DEBUGGING
   Watson G, 2000, IEEE CONCURR, V8, P42, DOI 10.1109/4434.895105
   Watson G. R., 2000, DESIGN IMPLEMENTATIO
   Zhang C., 2007, International Journal of Computational Science, V1, P407
NR 43
TC 0
Z9 0
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2015
VL 45
IS 4
BP 501
EP 526
DI 10.1002/spe.2239
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD0HU
UT WOS:000350752200004
OA Bronze
DA 2024-07-18
ER

PT J
AU Salli, O
   Nevalainen, O
   Leppänen, V
AF Salli, Olli
   Nevalainen, Olli
   Leppanen, Ville
TI Event-driven asynchronous method calls with the D-Bus message system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE asynchronous method call; battery runtime; D-Bus; event-driven;
   inter-process communication; remote procedure call
AB The use of inter-process communication can yield many benefits for event-driven desktop software. However, inter-process communication (IPC) research has traditionally been focused on calculation-oriented distributed computing. This article shows that existing IPC solutions are a poor fit for the constraints imposed by event-driven programming. Our novel solution is built on top of the D-Bus system, which enjoys increased practical usage, but is still scantily researched. We focus on efficient handling of asynchronous D-Bus method calls, in a fashion similar to how Hypertext Transfer Protocol requests are treated in Asynchronous JavaScript and XML Web applications. This is supplemented with two design patterns that simplify processing of results for many kinds of asynchronous operations in event-driven software, besides just D-Bus calls. Our approach is shown to be more appropriate for event-driven applications than traditional remote procedure call systems in aspects as diverse as interactivity, threading complexity and electrical power usage. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Salli, Olli; Nevalainen, Olli; Leppanen, Ville] Univ Turku, Dept Informat Technol, FI-20014 Turku, Finland.
C3 University of Turku
RP Salli, O (corresponding author), Univ Turku, Dept Informat Technol, FI-20014 Turku, Finland.
EM ollisal@gmail.com
OI Leppanen, Ville/0000-0001-5296-677X
FU Collabora Ltd., a Cambridge, United Kingdom
FX The design patterns described in Section 4 have been presented earlier
   in the principal author's Master of Science thesis [36]. The development
   of the thesis was supported financially by Collabora Ltd., a Cambridge,
   United Kingdom based software consultancy specializing in bringing
   companies and the open-source software community together.
CR Ananda A. L., 1992, Operating Systems Review, V26, P92, DOI 10.1145/142111.142121
   [Anonymous], D BUS SPECIFICATION
   [Anonymous], 2002, P 10 WORKSHOP ACM SI, DOI [DOI 10.1145/1133373.1133410, 10.1145/1133373.1133410]
   Bastian W, 2004, DEADLOCK PROTECTION
   BIRRELL AD, 1984, ACM T COMPUT SYST, V2, P39, DOI 10.1145/2080.357392
   d'Andrada T, 2012, TELEPATHY D BUS INTE
   Dabrowski J.R., 2001, P SIGCHI C HUMAN FAC, P317
   Edmundson D, 2012, CLASS PENDINGWALLET
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garrett JJ, 2005, AJAX NEW APPROACH WE
   GNOME project t, 2012, MAIN EV LOOP
   Haller P, 2013, SIP 14 FUT PROM
   Jovic M., 2008, PPPJ 08, P137, DOI DOI 10.1145/1411732.1411751
   KDE project t, 2012, KJOB CLASS REF
   KDE project t, 2012, KIO JOB CLASS REF
   Kulow S, 2012, CLASS KJOBPRIVATE
   LISKOV B, 1988, SIGPLAN NOTICES, V23, P260
   Lyon Douglas A., 2004, J OBJECT TECHNOLOGY, V3, P49
   McVittie S, 2008, TECHNICAL BLOG POST
   Meeks M, ORBIT2 FREQ ASK QUES
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Microsoft, 2012, IASYNCRESULT INT
   Microsoft, 2012, CONTRO INV PROP
   Oracle, 2012, CLASS EV JAV PLATF S
   OUSTERHOUT JK, 1996, 1996 US ANN TECHN C
   Pennington H, 2008, SYNCHRONOUS IO NEVER
   Popov AA, 2007, ASYNCHRONOUS DESIGN
   Qt Project t, 2012, QTDBUS MODULE
   Raje RR, 1997, CONCURRENCY-PRACT EX, V9, P1207, DOI 10.1002/(SICI)1096-9128(199711)9:11<1207::AID-CPE351>3.0.CO;2-C
   Salli O., 2012, THESIS U TURKU DEP I
   SATYANARAYANAN M, 1990, IEEE T COMPUT, V39, P328, DOI 10.1109/12.48864
   Suresh Siddha, 2007, P LIN S
   Taulty M, 2005, WIND FORMS IDL LOOP
   Van De Ven A., 2007, OSCON 2007
   Walker E. F., 1990, Proceedings. The 10th International Conference on Distributed Computing Systems (Cat. No.90CH2878-7), P253, DOI 10.1109/ICDCS.1990.89292
NR 35
TC 0
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2015
VL 45
IS 1
BP 53
EP 74
DI 10.1002/spe.2216
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY4FC
UT WOS:000347532700003
OA Bronze
DA 2024-07-18
ER

PT J
AU Karus, S
AF Karus, S.
TI XML development with plug-ins as a service
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XML; IDE; visual studio; rules; automation; quality assurance; services
AB Extensible Markup Language (XML) has quickly become a mainstream language in software development. Not only is it used for message and document interchange, it is also used to define application logic and interfaces. However, modern general purpose integrated development environments have rather limited support for XML development. The wide variety of XML-based languages makes it a challenge to build tools for comprehensive support of XML development. In this paper, we present extensions to a library exposed as an add-in for Microsoft Visual Studio and a command line tool to improve the development experience by providing access to subscribable service-based pluggable helper tools. The architecture of the solution allows easier publishing and deployment of the tools, minimising the exposure of development data to third parties and providing service providers with much needed tool usage and development process data. The tools offer developers new means to check their files against good and bad practices, automatically fix errors in XML or improve the files' conformance with development guidelines, current state of project with other projects, or run service queries to estimate their projects future progress. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 Univ Tartu, EE-50090 Tartu, Estonia.
C3 University of Tartu
RP Karus, S (corresponding author), Univ Tartu, Ulikooli 18, EE-50090 Tartu, Estonia.
EM siim.karus@ut.ee
FU European Regional Development Fund via the Estonian Centre of Excellence
   in Computer Science
FX This work was partially supported by the European Regional Development
   Fund via the Estonian Centre of Excellence in Computer Science.
CR Balogh A, 2010, LECT NOTES COMPUT SC, V5765, P224, DOI 10.1007/978-3-642-17322-6_11
   Biehl M, SOFTWARE SYSTEMS MOD, V275, P1
   Ecma International, ECMA262 ECM INT
   Erdweg S, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P167
   Karus S, 2012, 2 WORKSH DEV TOOLS P, P25, DOI [10.1109/TOPI.2012.6229806, DOI 10.1109/T0PI.2012.6229806]
   Karus S., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories, P13
   Karus S, 2007, LECT NOTES COMPUT SC, V4832, P154
   Karus S, 2010, EUR CON SFTWR MTNCE, P137, DOI 10.1109/CSMR.2010.24
   Karus S, 2011, SCI COMPUT PROGRAM, V76, P1161, DOI 10.1016/j.scico.2010.12.006
   Karus S, 2012, INFORM SOFTWARE TECH, V54, P203, DOI 10.1016/j.infsof.2011.09.004
   Kosar T, 2008, INFORM SOFTWARE TECH, V50, P390, DOI 10.1016/j.infsof.2007.04.002
   Kurtev I., 2006, P COMP 21 ACM SIGPLA, P602
   Mariani L, 2013, SOFTWARE PRACT EXPER, V43, P419, DOI 10.1002/spe.2129
   Mayer J, 2003, LECT NOTES COMPUT SC, V2591, P87
   Microsoft, 2011, AN APPL QUAL US COD
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   OMG, 2011, BUS PROC MOD NOT VER
   Reiss S. P., 2012, Proceedings 2012 2nd International Workshop on Developing Tools as Plug-ins (TOPI 2012), P55, DOI 10.1109/TOPI.2012.6229811
   Zhao D, 2013, SOFTWARE PRACT EXPER, V43, P465, DOI 10.1002/spe.2157
NR 19
TC 1
Z9 1
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2014
VL 44
IS 3
SI SI
BP 335
EP 352
DI 10.1002/spe.2246
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA7KI
UT WOS:000331275900006
DA 2024-07-18
ER

PT J
AU [Anonymous]
AF [Anonymous]
TI Intelligent Technologies and Applications for Big Data Analytics
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
NR 0
TC 0
Z9 0
U1 1
U2 145
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2013
VL 43
IS 6
BP 731
EP 732
DI 10.1002/spe.2178
PG 2
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 140MD
UT WOS:000318657300006
DA 2024-07-18
ER

PT J
AU Xie, XW
   Xue, JL
   Zhang, J
AF Xie, Xinwei
   Xue, Jingling
   Zhang, Jie
TI ACCULOCK: accurate and efficient detection of data races
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data races; happens before; lockset; dynamic analysis
ID MULTITHREADED PROGRAMS; JAVA
AB This paper introduces a new dynamic data race detector, ACCULOCK, to detect data races in Java programs. ACCULOCK is the first hybrid detector that combines lockset and epoch-based happens-before for race detection. ACCULOCK analyzes a program execution by reasoning about the subset of the happens-before relation observed with lock acquires and releases excluded, thereby making it less sensitive to thread interleaving than pure happens-before detectors. When this relaxed happens-before relation is violated, ACCULOCK applies a new lockset algorithm to verify the locking discipline by distinguishing reads and writes, thereby making it more immune to false positives than pure lockset detectors. In addition, ACCULOCK is designed to achieve these design objectives by maintaining comparable instrumentation overheads (in both time and space) to that of FASTTRACK, the fastest happens-before detector available (at least for Java programs). All these properties of ACCULOCK have been validated and confirmed by comparing it against FASTTRACK and five other (pure happens-before, pure lockset, or hybrid) detectors, which are implemented in the Jikes Research Virtual Machine using a collection of large benchmark programs from a variety of applications. Furthermore, porting ACCULOCK and FASTTRACK to a different platform, RoadRunner, and repeating our experiments yield similar observations in terms of their effectiveness in race detection and instrumentation overheads. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Xie, Xinwei; Xue, Jingling] Univ New S Wales, Sch Comp Sci & Engn, Programming Languages & Compilers Grp, Sydney, NSW 2052, Australia.
   [Xie, Xinwei] Natl Univ Def Technol, Sch Comp Sci, Changsha 410073, Hunan, Peoples R China.
   [Zhang, Jie] Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing 100029, Peoples R China.
C3 University of New South Wales Sydney; National University of Defense
   Technology - China; Beijing University of Chemical Technology
RP Xue, JL (corresponding author), Univ New S Wales, Sch Comp Sci & Engn, Programming Languages & Compilers Grp, Sydney, NSW 2052, Australia.
EM jingling@cse.unsw.edu.au
RI Xue, Jingling/AAE-1991-2020
OI Xue, Jingling/0000-0003-0380-3506
FU Australian Research Council (ARC) [DP0665581, DP0987236]; China
   Scholarship Council (CSC); International Science and Technology
   Cooperation Program of China [2011DFG13000]; Australian Research Council
   [DP0987236, DP0665581] Funding Source: Australian Research Council
FX Thanks to the anonymous reviewers for their feedback on this work. This
   research is supported by the Australian Research Council (ARC) grants
   (DP0665581 and DP0987236), a China Scholarship Council (CSC) grant, and
   an International Science and Technology Cooperation Program of China
   (2011DFG13000).
CR [Anonymous], PROCEED CGO
   [Anonymous], SIGOPS OPER SYST REV
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bond MD, 2010, ACM SIGPLAN NOTICES, V45, P255, DOI 10.1145/1809028.1806626
   Christiaens M., 2001, JVM 01, P15
   DINNING A, 1991, P ACM ONR WORKSH PAR, P85
   Elmas T, 2007, ACM SIGPLAN NOTICES, V42, P245, DOI 10.1145/1273442.1250762
   Flanagan C, 2000, ACM SIGPLAN NOTICES, V35, P219, DOI 10.1145/358438.349328
   Flanagan C, 2008, ACM SIGPLAN NOTICES, V43, P293, DOI 10.1145/1379022.1375618
   Flanagan C, 2010, ACM SIGPLAN NOTICES, V45, P244, DOI 10.1145/1809028.1806625
   Flanagan C, 2009, ACM SIGPLAN NOTICES, V44, P121, DOI 10.1145/1543135.1542490
   Flann C., 2010, Addressing global change: a new agenda for botanic gardens. Fourth Global Botanic Gardens Congress, Dublin, Irish Republic, 13-18 June 2010, P1, DOI 10.1145/1806672.1806674
   Foundation AS, 2009, JCS DISTR CACH SYST
   JavaCoding.net. JSpider, 2003, JSPIDER HIGHL CONF C
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Marino D, 2009, ACM SIGPLAN NOTICES, V44, P134, DOI 10.1145/1543135.1542491
   Min S.L., 1991, P 4 INT C ARCH SUPP, P235
   Naik M, 2006, ACM SIGPLAN NOTICES, V41, P308, DOI 10.1145/1133981.1134018
   Netzer R. H. B., 1992, ACM Letters on Programming Languages and Systems, V1, P74, DOI 10.1145/130616.130623
   OCALLAHAN R, 2003, P 9 ACM SIGPLAN S PR, P167
   Pozniansky E., 2003, Proceedings of the Ninth ACM SIGPLAN Sym- posium on Principles and Practice of Parallel Programming, PPoPP '03, P179, DOI DOI 10.1145/781498.781529
   Pozniansky E, 2007, CONCURR COMP-PRACT E, V19, P327, DOI 10.1002/cpe.1064
   Pratikakis P, 2006, ACM SIGPLAN NOTICES, V41, P320, DOI 10.1145/1133981.1134019
   Sasturkar Amit., 2005, PPOPP 05, P83, DOI DOI 10.1145/1065944.1065956
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Schonberg E, 1998, PLDI 98, P285
   Serebryany Konstantin, 2009, Proceedings of the Workshop on Binary Instrumentation and Applications, WBIA'09, P62, DOI DOI 10.1145/1791194.1791203
   Sheng TW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P401, DOI 10.1145/1985793.1985848
   Stepovoy Y, 2006, CACHEJ CACHE JAVA OB
   von Praun C, 2001, ACM SIGPLAN NOTICES, V36, P70, DOI 10.1145/504311.504288
   Voung J. W., 2007, ESEC FSE 07, P205
   Yu Y., 2005, P 20 ACM S OP SYST P, P221
NR 32
TC 16
Z9 25
U1 0
U2 6
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2013
VL 43
IS 5
BP 543
EP 576
DI 10.1002/spe.2121
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 127HW
UT WOS:000317690100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gedik, B
   Andrade, H
AF Gedik, Bugra
   Andrade, Henrique
TI A model-based framework for building extensible, high performance stream
   processing middleware and programming language for IBM InfoSphere
   Streams
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data stream processing; model-based code generation
AB This work presents an extensive case study on the model-based design of a commercial-grade stream processing middleware (IBM's InfoSphere Streams) its runtime and language (SPL) compiler. The model-based underpinnings are pervasive throughout the whole environment, from describing inter-process communication interfaces and objects to the design of the extensibility mechanism in the runtime and language. In addition to many software engineering advantages such as consistent, uniform, and self-documented integration among the different parts of the system, we show intrinsic performance benefits to the platform derived from this design approach. First, we demonstrate how an incremental compilation strategy employed by the SPL compiler and rooted on the model description of the application, extracted by the compiler as part of the application building process, leads to better compile-time performance. Second, we discuss how the model-based code generation strategy employed by the SPL compiler also leads to increased runtime performance, by specializing the generated code to particular characteristics of the runtime environment. Finally, we show how the extensibility strategy used in the SPL language leads to automatic syntactic and semantic checks at compile time, while enabling behavioral reasoning and specific optimizations at runtime. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Gedik, Bugra; Andrade, Henrique] IBM Res, Hawthorne, NY 10532 USA.
C3 International Business Machines (IBM)
RP Gedik, B (corresponding author), IBM Res, 19 Skyline Dr, Hawthorne, NY 10532 USA.
EM bgedik@us.ibm.com
RI Gedik, Buğra/F-7842-2014
CR Abadi D.J., 2005, CIDR, P277
   Amini Lisa., 2006, Proceedings of the 4th inter- national workshop on Data mining standards, services and platforms, DMSSP '06, P27
   Andrade H, 2011, J PARALLEL DISTR COM, V71, P145, DOI 10.1016/j.jpdc.2010.08.007
   Andrade H, 2009, PROC INT CONF DATA, P1375, DOI 10.1109/ICDE.2009.116
   [Anonymous], IBM INFOSPHERE STREA
   [Anonymous], 2008, Proceedings of the 2008 ACM SIGMOD international conference on Management of data, SIGMOD'08, ACM
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], PROGR APAMA EVENT PR
   [Anonymous], CHALLENGES LARGE APP
   [Anonymous], 2000, Programming Perl
   [Anonymous], WEBSPHERE MQ LOW LAT
   April A, 2009, ELECTRON NOTES THEOR, V233, P73, DOI 10.1016/j.entcs.2009.02.062
   Arasu A, 2006, VLDB J, V15, P121, DOI 10.1007/s00778-004-0147-z
   Arasu A., 2003, IEEE DATA ENG B, V26, P19
   Austern MatthewH., 1999, AW PRO COMP, V1st
   Balakrishnan H, 2004, VLDB J, V13, P370, DOI 10.1007/s00778-004-0133-5
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Booth D, 2004, 2 ORDER METHOD OCCLU
   Bray T, 2008, 2 ORDER METHOD OCCLU
   Cazzola W, 2004, J OBJECT TECHNOLOGY, V3, P117
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Code Synthesis, 2010, 2 ORDER METHOD OCCLU
   De Pauw W, 2010, LECT NOTES COMPUT SC, V6418, P18, DOI 10.1007/978-3-642-16612-9_3
   De Pauw W, 2009, INFORM VISUAL, V8, P87, DOI 10.1057/ivs.2009.5
   DEPAUW W, 2008, P S SOFTW VIS SOFTVI, P125
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Fallside DC, 2004, 2 ORDER METHOD OCCLU
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Gedik B, 2009, SOFTWARE PRACT EXPER, V39, P1347, DOI 10.1002/spe.941
   Gedik Bugra., 2009, PROC 18 INT C INFORM, P847, DOI DOI 10.1145/1645953.1646061
   Grisby D, 2009, FORMAL20080111 AP AT
   Habra A, 2003, APACHE ANT USER MANU
   Hirzel M., 2009, RC24897 IBM RES
   Huayong Wang, 2009, Languages and Compilers for Parallel Computing. 22nd International Workshop, LCPC 2009, Revised Selected Papers, P383
   IBM, IBM MQ
   IBM DB2, DB2 IBM
   JACQUESSILVA G, 2009, P INT C DEP SYST NET, P145
   Khandekar R, 2009, LECT NOTES COMPUT SC, V5896, P308, DOI 10.1007/978-3-642-10445-9_16
   MacKenzie D, 2010, AUTOCONFUCREATING AU
   Meng SC, 2009, INT CON DISTR COMP S, P248, DOI 10.1109/ICDCS.2009.15
   Microsoft, 2010, 2 ORDER METHOD OCCLU
   OMG, 2008, FORMAL20080111 OMG
   OMG, 2008, FORMAL20080109 OMG
   Park Y, 2012, SOFTWARE PRACT EXPER, V42, P37, DOI 10.1002/spe.1047
   Schneider S, 2009, INT PARALL DISTRIB P, P603
   Stallman R, 2010, GNU MAKEUA PROGRAM D
   Stallman RM, 1996, CYGNUSUPPORT DEBUGGI
   StreamSQL, STREAMSQL
   Sun Microsystems, 2002, 2 ORDER METHOD OCCLU
   Sun Microsystems Inc, 1988, 1050 RFC IETF
   Thies W, 2002, LECT NOTES COMPUT SC, V2304, P179
   Turaga D, 2010, SOFTWARE PRACT EXPER, V40, P1073, DOI 10.1002/spe.993
   Wolf J, 2008, LECT NOTES COMPUT SC, V5346, P306, DOI 10.1007/978-3-540-89856-6_16
   Wu K.-L., 2007, Proc. of VLDB, P1185
   Zou Q, 2009, P INT C VER LARG DAT, P1394
   [No title captured]
   [No title captured]
   [No title captured]
NR 58
TC 16
Z9 22
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2012
VL 42
IS 11
BP 1363
EP 1391
DI 10.1002/spe.1139
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015OV
UT WOS:000309456700003
DA 2024-07-18
ER

PT J
AU Claveirole, T
   de Amorim, MD
AF Claveirole, Thomas
   de Amorim, Marcelo Dias
TI Manipulating Wi-Fi packet traces with WiPal: design and experience
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE network; packet trace; pcap; wireless; Wi-Fi; IEEE 802; 11
AB Packet traces are important objects in networking, commonly used in a wide set of applications, including monitoring, troubleshooting, measurements, and validation, to cite a few. Many tools exist to produce and process such traces, but they are often too specific; using them as a basis for creating extended tools is then impractical. Some other tools are generic enough, but exhibit performance issues. This paper reports on our experience designing WiPal, a packet trace manipulation framework with a focus on IEEE 802.11. WiPal is designed for performance and re-usability, while introducing several novel features compared to previous solutions. Besides presenting how WiPal's original design can benefit packet processing programs, we discuss a number of issues a program designer might encounter when writing packet trace processing software. An evaluation of WiPal shows that, albeit generic, it does not impact performance regarding execution speed. WiPal achieves performance levels observed only with specialized code and outperforms some well-known packet processing programs. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Claveirole, Thomas; de Amorim, Marcelo Dias] Univ Sorbonne, UPMC, CNRS, LIP6, F-75005 Paris, France.
C3 Centre National de la Recherche Scientifique (CNRS); Sorbonne Universite
RP Claveirole, T (corresponding author), Univ Sorbonne, UPMC, CNRS, LIP6, 4 Pl Jussieu, F-75005 Paris, France.
EM thomas.claveirole@lip6.fr
RI de Amorim, Marcelo Dias/AAS-8114-2021
OI de Amorim, Marcelo Dias/0000-0003-3710-6805
CR [Anonymous], 1996, PATTERN ORIENTED SOF
   [Anonymous], 2009, N3000090190 ISO
   [Anonymous], Libpcap, packet capture library
   ANR RESCUE Consortium, MOB COORD SUBST NETW
   Ben-El-Kezadri R, 2011, IEEE INFOCOM SHANGH
   Burrus N, 2003, WORKSH MULT PAR OO L
   Cheng YC, 2006, ACM SIGCOMM COMP COM, V36, P39, DOI 10.1145/1151659.1159920
   Claveirole T., 2010, SIGMOBILE MOB COMPUT, P39
   Claveirole T, 2011, WSCOUT LIGHTWEIGHT P
   Claveirole T, 2011, WIPAL IEEE 802 11 TR
   Gamma Erich., 1994, DESIGN PATTERNS
   Johnson StephenC., 1979, YACC YET ANOTHER COM
   Mahajan R, 2011, CRAWDAD TOOL TOOLS A
   Mahajan R, 2006, ACM SIGCOMM COMP COM, V36, P75, DOI 10.1145/1151659.1159923
   Pang R., 2006, IMC, P289
   Rodrig M, 2011, CRAWDAD DAT SET UW S
   Scapy, 2011, SCAPY INTERACTIVE PA
   Tazaki H, 2011, THESIS KEIO U KANAGA
   tcpdump, 2011, PROT PACK CAPT DUMP
   VeriWave, 2011, WAVETEST MULT TRAFF
   *WIR, NETW PROT AN
   Yeo J, 2004, WISE IEEE INT WORKSH
NR 22
TC 3
Z9 3
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2012
VL 42
IS 5
BP 585
EP 599
DI 10.1002/spe.1080
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 919AN
UT WOS:000302293100004
DA 2024-07-18
ER

PT J
AU Hashemian, R
   Krishnamurthy, D
   Arlitt, M
AF Hashemian, Raoufehsadat
   Krishnamurthy, Diwakar
   Arlitt, Martin
TI Web workload generation challenges - an empirical investigation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE workload generator; performance testing; benchmarking tools
ID PERFORMANCE EVALUATION
AB Workload generators are widely used for testing the performance of Web-based systems. Typically, these tools are also used to collect measurements such as throughput and end-user response times that are often used to characterize the QoS provided by a system to its users. However, our study finds that Web workload generation is more difficult than it seems. In examining the popular RUBiS client generator, we found that reported response times could be grossly inaccurate, and that the generated workloads were less realistic than expected, causing server scalability to be incorrectly estimated. Using experimentation, we demonstrate how the Java virtual machine and the Java network library are the root causes of these issues. Our work serves as an example of how to verify the behavior of a Web workload generator. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Hashemian, Raoufehsadat; Krishnamurthy, Diwakar; Arlitt, Martin] Univ Calgary, Calgary, AB T2N 1N4, Canada.
   [Arlitt, Martin] HP Labs, Palo Alto, CA 94304 USA.
C3 University of Calgary; Hewlett-Packard
RP Hashemian, R (corresponding author), Univ Calgary, Calgary, AB T2N 1N4, Canada.
EM rhashem@ucalgary.ca
FU Natural Sciences and Engineering Research Council (NSERC) Canada;
   Hewlett-Packard (HP)
FX This work was financially supported by Natural Sciences and Engineering
   Research Council (NSERC) Canada and Hewlett-Packard (HP). The authors
   would like to thank Jerry Rolia of HP Labs and the anonymous reviewers
   for their helpful suggestions and constructive feedback.
CR Amza C, 2002, I S WORKL CHAR PROC, P3, DOI 10.1109/WWC.2002.1226489
   [Anonymous], HPL200759
   [Anonymous], 2004, P JOINT INT C MEAS M
   [Anonymous], 1 MONDAY
   [Anonymous], 1998, HTTPERF TOOL MEASURI, DOI DOI 10.1145/306225.306235
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Arlitt Martin, 2005, P 5 ACM SIGCOMM C IN, P19
   Banga G., 1999, World Wide Web, V2, P69, DOI 10.1023/A:1019292504731
   Barford P., 1998, Performance Evaluation Review, V26, P151, DOI 10.1145/277858.277897
   Brecht T, 2010, LINUX INCREASING NUM
   Brecht T, 2006, ACM T PROGR LANG SYS, V28, P908, DOI 10.1145/1152649.1152652
   Feitelson DG, 2002, LECT NOTES COMPUT SC, V2400, P49
   Ferrari D., 1984, Performance Evaluation Review, V12, P8, DOI 10.1145/1031382.809309
   Georges Andy, 2007, P 22 ANN ACM SIGPLAN, P57, DOI [10.1145/1297027.1297033, DOI 10.1145/1297027.1297033]
   Guitart J, 2005, 13TH EUROMICRO CONFERENCE ON PARALLEL, DISTRIBUTED AND NETWORK-BASED PROCESSING, PROCEEDINGS, P84, DOI 10.1109/EMPDP.2005.44
   Guitart J, 2004, UPCDAC20043
   Guitart J, 2008, COMPUT NETW, V52, P1390, DOI 10.1016/j.comnet.2007.12.009
   Kant K, 2001, INT SYM PERFORM ANAL, P49
   Krishnamurthy D, 2006, IEEE T SOFTWARE ENG, V32, P868, DOI 10.1109/TSE.2006.106
   Kusic D, 2009, CLUSTER COMPUT, V12, P1, DOI 10.1007/s10586-008-0070-y
   Liu Z, 2001, PERFORM EVALUATION, V46, P77, DOI 10.1016/S0166-5316(01)00046-3
   Mahum E. M., 2001, Performance Evaluation Review, V29, P257, DOI 10.1145/384268.378790
   Malkowski S, 2009, I S WORKL CHAR PROC, P118, DOI 10.1109/IISWC.2009.5306791
   NAHUM E, 2002, 7 INT WORKSH WEB CON
   Paxson V, 1999, COMPUT NETW, V31, P2435, DOI 10.1016/S1389-1286(99)00112-7
   PAXSON V, 1995, IEEE ACM T NETWORK, V3, P226, DOI 10.1109/90.392383
   Ramamurthy P., 2008, USENIX 2008 Annual Technical Conference on Annual Technical Conference, P185
   Rolia J. A., 2010, P WOSPSIPEW INT C PE, P3
   Schroeder Bianca., 2006, NSDI 06, P18
   Sicard S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P101, DOI 10.1145/1368088.1368103
   Tong Liangliang., 2010, Proceedings of the 8th International Conference on the Principles and Practice of Programming in Java, PPPJ'10, P39
   Wood T, 2008, LECT NOTES COMPUT SC, V5346, P366, DOI 10.1007/978-3-540-89856-6_19
NR 32
TC 14
Z9 14
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2012
VL 42
IS 5
BP 629
EP 647
DI 10.1002/spe.1093
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 919AN
UT WOS:000302293100006
DA 2024-07-18
ER

PT J
AU Such, JM
   Alberola, JM
   Espinosa, A
   Garcia-Fornes, A
AF Such, Jose M.
   Alberola, Juan M.
   Espinosa, Agustin
   Garcia-Fornes, Ana
TI A group-oriented secure multiagent platform
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multiagent systems; multiagent platforms; security; privacy
AB Security is becoming a major concern in multiagent systems, since an agent's incorrect or inappropriate behaviour may cause non-desired effects, such as money and data loss. Some multiagent platforms (MAP) are now providing baseline security features, such as authentication, authorization, integrity and confidentiality. However, they fail to support other features related to the sociability skills of agents such as agent groups. What is more, none of the listed MAPs provide a mechanism for preserving the privacy of the users (regarding their identities) that run their agents on such MAPs. In this paper, we present the security infrastructure (SI) of the Magentix MAP, which supports agent groups and preserves user identity privacy. The SI is based on identities that are assigned to all the different entities found in Magentix (users, agents and agent groups). We also provide an evaluation of the SI describing an example application built on top of Magentix and a performance evaluation of it. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Such, Jose M.; Alberola, Juan M.; Espinosa, Agustin; Garcia-Fornes, Ana] Univ Politecn Valencia, Dept Sistemes Informat & Comp, E-46071 Valencia, Spain.
C3 Universitat Politecnica de Valencia
RP Such, JM (corresponding author), Univ Politecn Valencia, Dept Sistemes Informat & Comp, Cami de Vera S-N, E-46071 Valencia, Spain.
EM jsuch@dsic.upv.es
RI Alberola, Juan M./P-7752-2019; Such, Jose/AAH-5257-2020; Espinosa,
   Agustín/ABG-2376-2020; Garcia-Fornes, Ana/C-8260-2014
OI Alberola, Juan M./0000-0002-5486-5638; Such, Jose/0000-0002-6041-178X;
   Espinosa, Agustín/0000-0001-8070-3344; Garcia-Fornes,
   Ana/0000-0003-4482-8793
FU CONSOLIDER-INGENIO [CSD2007-00022, TIN 2008-04446, PROMETEO/2008/051];
   Conselleria d'Empresa, Universitat i Ciencia de la Generalitat
   Valenciana [BFPI06/096]; Ministerio de Ciencia e Innovacion de Espana
   [AP2007-00289]
FX This work has been partially supported by CONSOLIDER-INGENIO 2010 under
   grant CSD2007-00022, and TIN 2008-04446 and PROMETEO/2008/051 projects.
   Jose M. Such is enjoying a grant of Conselleria d'Empresa, Universitat i
   Ciencia de la Generalitat Valenciana (BFPI06/096). Juan M. Alberola is
   enjoying a grant of Ministerio de Ciencia e Innovacion de Espana
   (AP2007-00289).
CR Alberola JM, 2008, FRONT ARTIF INTEL AP, V184, P7, DOI 10.3233/978-1-58603-925-7-7
   [Anonymous], 2006, LINUX J
   [Anonymous], P 5 INT JOINT C AUT
   Baldoni M, 2009, P INT WORKSH PROGR M
   Barella A, 2006, ACE 06, P17
   Dekker M., 1997, FROEHLICHKENT ENCY T, V15, P231
   FIPA, 2001, FIPA ABSTR ARCH SPEC
   Gutknecht O, 2000, P AG WORKSH INFR MUL, V1887, P48
   Horling B, 2004, KNOWL ENG REV, V19, P281, DOI 10.1017/S0269888905000317
   Ismail Leila, 2008, Journal of Communications, V3, P12, DOI 10.4304/jcm.3.2.1-12
   JADE Board, 2010, JAD SEC GUID
   Luck M., 2005, AGENT TECHNOLOGY COM
   Newman AE, 2004, COUGAAR DEV GUIDE
   Recursion Software Inc, 2008, VOYAG SEC GUID
   Roth V, 2001, ISADS DALL TX US
   Such J. M., 2008, 6 INT WORKSH PROGR M, P173
   Such JM, 2009, LECT NOTES COMPUT SC, V5517, P522, DOI 10.1007/978-3-642-02478-8_66
   Ugurlu S., 2005, P 2 INT WORKSH SAF S
   WOOLDRIDGE M, 1995, KNOWL ENG REV, V10, P115, DOI 10.1017/S0269888900008122
   Wooldridge M. J., 2002, INTRO MULTIAGENT SYS
   Xu H., 2003, Automated Software Engineering, V10, P337, DOI 10.1023/A:1025859021913
NR 21
TC 10
Z9 11
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2011
VL 41
IS 11
BP 1289
EP 1302
DI 10.1002/spe.1042
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827RZ
UT WOS:000295446900006
DA 2024-07-18
ER

PT J
AU Petersen, K
   Wohlin, C
AF Petersen, K.
   Wohlin, C.
TI Measuring the flow in lean software development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agile software development; lean software development; development flow;
   goal-question-metric
AB Responsiveness to customer needs is an important goal in agile and lean software development. One major aspect is to have a continuous and smooth flow that quickly delivers value to the customer. In this paper we apply cumulative flow diagrams to visualize the flow of lean software development. The main contribution is the definition of novel measures connected to the diagrams to achieve the following goals: (1) increase throughput and reduce lead-time to achieve high responsiveness to customers' needs and (2) to provide a tracking system that shows the progress/status of software product development. An evaluation of the measures in an industrial case study showed that practitioners found them useful and identify improvements based on the measurements, which were in line with lean and agile principles. Furthermore, the practitioners found the measures useful in seeing the progress of development for complex products where many tasks are executed in parallel. The measures are now an integral part of the improvement work at the studied company. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Petersen, K.; Wohlin, C.] Blekinge Inst Technol, SE-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Petersen, K (corresponding author), Blekinge Inst Technol, Box 520, SE-37225 Ronneby, Sweden.
EM kai.petersen@bth.se
OI Wohlin, Claes/0000-0003-0460-5253; Petersen, Kai/0000-0002-1532-8223
CR Anderson D., 2003, AGILE MANAGEMENT SOF
   [Anonymous], REAL WORLD RES RESOU
   [Anonymous], 2006, Applied Statistics and Probability for Engineers
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], 2004, Agile and Iterative Development
   Cumbo D, 2006, FOREST PROD J, V56, P25
   Damm L.-O., 2006, Software Process Improvement and Practice, V11, P47, DOI 10.1002/spip.253
   Denne Mark, 2003, SOFTWARE NUMBERS LOW
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Gross JohnM., 2003, Kanban Made Simple - Demystifying and Applying Toyota's Legendary Manufacturing Process AMACOM
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Höst M, 2001, J SYST SOFTWARE, V59, P323, DOI 10.1016/S0164-1212(01)00072-3
   KEMAYEL L, 1991, J SYST SOFTWARE, V16, P151, DOI 10.1016/0164-1212(91)90009-U
   Maskell B., 2004, PRACTICAL LEAN ACCOU
   Middleton P, 2001, SOFTWARE QUAL J, V9, P241, DOI 10.1023/A:1013754402981
   Pascale R.T., 1990, MANAGING EDGE SMARTE
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Raffo D., 1993, Proceedings CASCON '93, P290
   Reinertsen D.G., 1997, MANAGING DESIGN FACT
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Somekh Bridget., 2006, Action Research: A Methodology for Change and Development
   WHITE BA, 2000, SOFTWARE CONFIGURATI
   Willcock C., 2005, An Introduction to TTCN-3
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Womack J., 2003, Lean Thinking: Banish Waste and Create Wealth in Your Corporation
   Yin R.K., 2011, Qualitative research from start to finish
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 38
TC 61
Z9 67
U1 4
U2 57
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2011
VL 41
IS 9
SI SI
BP 975
EP 996
DI 10.1002/spe.975
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 792IR
UT WOS:000292737400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Budgen, D
   Burn, AJ
   Brereton, OP
   Kitchenham, BA
   Pretorius, R
AF Budgen, D.
   Burn, A. J.
   Brereton, O. P.
   Kitchenham, B. A.
   Pretorius, R.
TI Empirical evidence about the UML: a systematic literature review
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE UML; systematic literature review
ID COMPREHENSION; MODELS; STEREOTYPES; DIAGRAMS; QUALITY; IMPACT
AB The Unified Modeling Language (UML) was created on the basis of expert opinion and has now become accepted as the 'standard' object-oriented modelling notation. Our objectives were to determine how widely the notations of the UML, and their usefulness, have been studied empirically, and to identify which aspects of it have been studied in most detail. We undertook a mapping study of the literature to identify relevant empirical studies and to classify them in terms of the aspects of the UML that they studied. We then conducted a systematic literature review, covering empirical studies published up to the end of 2008, based on the main categories identified. We identified 49 relevant publications, and report the aggregated results for those categories for which we had enough papers-metrics, comprehension, model quality, methods and tools and adoption. Despite indications that a number of problems exist with UML models, researchers tend to use the UML as a 'given' and seem reluctant to ask questions that might help to make it more effective. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Budgen, D.; Burn, A. J.; Pretorius, R.] Univ Durham, Sch Engn & Comp Sci, Durham, England.
   [Brereton, O. P.; Kitchenham, B. A.] Keele Univ, Sch Comp & Math, Stoke On Trent, Staffs, England.
C3 Durham University; Keele University
RP Budgen, D (corresponding author), Univ Durham, Sch Engn & Comp Sci, Durham, England.
EM david.budgen@durham.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020
OI Kitchenham, Barbara/0000-0002-6134-8460; Budgen,
   David/0000-0001-7143-0241
FU EPSRC [EP/E046983/1]; EPSRC [EP/E046983/1] Funding Source: UKRI
FX We thank the EPSRC for providing support via project EP/E046983/1,
   Evidence-based Practices Informing Computing (EPIC). We also thank the
   anonymous reviewers for their insightful and very helpful suggestions
   concerning the material of this paper and its presentation.
CR Anda B, 2005, EMPIR SOFTW ENG, V10, P285, DOI 10.1007/s10664-005-1289-3
   Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], P 2 ACM IEEE INT S E
   Bolloju N, 2006, COMMUN ACM, V49, P108, DOI 10.1145/1139922.1139926
   Briand LC, 2004, PROC IEEE INT CONF S, P380, DOI 10.1109/ICSM.2004.1357823
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   Britton C, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P31, DOI 10.1109/HCC.2002.1046338
   BUDGEN D, 2008, P PPIG 2008 LANC U, P195
   Budgen D, 2008, EMPIR SOFTW ENG, V13, P435, DOI 10.1007/s10664-008-9075-7
   Budgen David., 2003, SOFTWARE DESIGN
   Bunse C, 2006, EMPIR SOFTW ENG, V11, P227, DOI 10.1007/s10664-006-6403-7
   Chen Y, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P199
   CRUZLEMUS JA, 2005, P 8 ACM IEEE INT C M, P113
   DELUCIA A, 2008, P 12 EUR C SOFTW MAI, P173
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dori D., 2011, OBJECT PROCESS METHO, P1208
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   FIRESMITH D, 1998, OPEN MODELING LANGUA
   Genero M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P207
   Genero M, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P263, DOI 10.1109/METRIC.2003.1232473
   Genero M, 2002, LECT NOTES COMPUT SC, V2425, P372
   Genero M, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P195, DOI 10.1109/ISESE.2002.1166940
   Genero M, 2001, SCCC 2001: XXI INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P95, DOI 10.1109/SCCC.2001.972637
   GENERO M, 2000, OBJET, V6, P489
   Genero M, 2005, J OBJECT TECHNOL, V4, P59, DOI 10.5381/jot.2005.4.9.a1
   Genero M, 2007, EMPIR SOFTW ENG, V12, P517, DOI 10.1007/s10664-007-9038-4
   Genero M, 2008, LECT NOTES COMPUT SC, V5301, P280, DOI 10.1007/978-3-540-87875-9_20
   Glezer C, 2005, INFORM SOFTWARE TECH, V47, P675, DOI 10.1016/j.infsof.2005.01.003
   Goodhue DL, 1998, DECISION SCI, V29, P105, DOI 10.1111/j.1540-5915.1998.tb01346.x
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Kitchenham Barbara, 2007, 2007 Second International Workshop on Realising Evidence-Based Software Engineering, P1, DOI 10.1109/REBSE.2007.1
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   LANGE C, 2006, IEEE SOFTWARE, V23
   LANGE C, P ISCE 2006, P401
   LANGE CFJ, 2004, P 8 INT C EMP ASS SO, P111
   Lange CFJ, 2007, J VISUAL LANG COMPUT, V18, P399, DOI 10.1016/j.jvlc.2007.07.002
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   LYNCH A, 2004, J COMPUTING SCI COLL, V19, P353
   Marchesi M, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P67, DOI 10.1109/CSMR.1998.665739
   Mohagheghi P, 2009, INFORM SOFTWARE TECH, V51, P1646, DOI 10.1016/j.infsof.2009.04.004
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Nugroho A, 2008, LECT NOTES COMPUT SC, V5301, P600, DOI 10.1007/978-3-540-87875-9_42
   Nugroho A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P90
   Otero M. C., 2002, Empirical Software Engineering, V7, P27, DOI 10.1023/A:1014819010099
   Otero MC, 2005, J SYST SOFTWARE, V77, P91, DOI 10.1016/j.jss.2004.11.022
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   PURCHASE HC, 2001, P AUSTR S INF VIS SY, P113
   PURCHASE HC, 2002, 1 INT WORKSH VIS SOF, P13
   Reinhartz-Berger I, 2005, EMPIR SOFTW ENG, V10, P57, DOI 10.1023/B:EMSE.0000048323.40484.e0
   REYNOSO L, 2005, METRICS CONCEPTUAL M
   REYNOSO L, 2005, 11 IEEE INT S SOFTW, P10
   REYNOSO L, 2004, JORNADOS INGENERIA S, P475
   REYNOSO L, 2006, P 21 ANN ACM S APPL, P1721
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Sabaliauskaite G, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P148, DOI 10.1109/ISESE.2002.1166934
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Swan J, 2005, 2005 International Symposium on Empirical Software Engineering (ISESE), Proceedings, P334, DOI 10.1109/ISESE.2005.1541843
   Tilley S., 2003, Proceedings of the 21st Annual International Conference on Documentation, P184
   Torchiano M, 2004, PROG COMPREHEN, P226, DOI 10.1109/WPC.2004.1311064
   Zendler A, 2001, J SYST SOFTWARE, V57, P21, DOI 10.1016/S0164-1212(00)00114-X
   ZHANG C, 2010, IEEE T SOFTW E UNPUB
NR 66
TC 78
Z9 83
U1 0
U2 30
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2011
VL 41
IS 4
BP 363
EP 392
DI 10.1002/spe.1009
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 731BH
UT WOS:000288080800002
DA 2024-07-18
ER

PT J
AU Calheiros, RN
   Ranjan, R
   Beloglazov, A
   De Rose, CAF
   Buyya, R
AF Calheiros, Rodrigo N.
   Ranjan, Rajiv
   Beloglazov, Anton
   De Rose, Cesar A. F.
   Buyya, Rajkumar
TI CloudSim: a toolkit for modeling and simulation of cloud computing
   environments and evaluation of resource provisioning algorithms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cloud computing; modelling and simulation; performance evaluation;
   resource management; application scheduling
AB Cloud computing is a recent advancement wherein IT infrastructure and applications are provided as 'services' to end-users under a usage-based payment model. It can leverage virtualized services even on the fly based on requirements (workload patterns and QoS) varying with time. The application services hosted under Cloud computing model have complex provisioning, composition, configuration, and deployment requirements. Evaluating the performance of Cloud provisioning policies, application workload models, and resources performance models in a repeatable manner under varying system and user configurations and requirements is difficult to achieve. To overcome this challenge, we propose CloudSim: an extensible simulation toolkit that enables modeling and simulation of Cloud computing systems and application provisioning environments. The CloudSim toolkit supports both system and behavior modeling of Cloud system components such as data centers, virtual machines (VMs) and resource provisioning policies. It implements generic application provisioning techniques that can be extended with ease and limited effort. Currently, it supports modeling and simulation of Cloud computing environments consisting of both single and inter-networked clouds (federation of clouds). Moreover, it exposes custom interfaces for implementing policies and provisioning techniques for allocation of VMs under inter-networked Cloud computing scenarios. Several researchers from organizations, such as HP Labs in U. S. A., are using CloudSim in their investigation on Cloud resource provisioning and energy-efficient management of data center resources. The usefulness of CloudSim is demonstrated by a case study involving dynamic provisioning of application services in the hybrid federated clouds environment. The result of this case study proves that the federated Cloud computing model significantly improves the application QoS requirements under fluctuating resource and service demand patterns. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Calheiros, Rodrigo N.; Beloglazov, Anton; Buyya, Rajkumar] Univ Melbourne, Dept Comp Sci & Software Engn, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic 3010, Australia.
   [Ranjan, Rajiv] Univ New S Wales, Sch Engn & Comp Sci, Sydney, NSW, Australia.
   [De Rose, Cesar A. F.] Pontificia Univ Catolica Rio Grande do Sul, Dept Comp Sci, Porto Alegre, RS, Brazil.
C3 University of Melbourne; University of New South Wales Sydney;
   Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Buyya, R (corresponding author), Univ Melbourne, Dept Comp Sci & Software Engn, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic 3010, Australia.
EM raj@csse.unimelb.edu.au
RI Calheiros, Rodrigo N./B-5155-2008; Ranjan, Rajiv/F-4700-2011; Buyya,
   Rajkumar/C-3424-2009; De Rose, Cesar A. F./F-9271-2012
OI Calheiros, Rodrigo N./0000-0001-7435-2445; Ranjan,
   Rajiv/0000-0002-6610-1328; Beloglazov, Anton/0000-0002-0419-3829; De
   Rose, Cesar A. F./0000-0003-0070-0157
FU Australian Department of Innovation, Industry, Science and Research
   (DIISR); Australian Research Council (ARC); CAPES PDEE [1185-08-0]; CRC
   Smart Services
FX We wish to thank Marcos Dias Assuncao for implementing the simulation
   core that has been incorporated into CloudSim. This work is partially
   supported by the Australian Department of Innovation, Industry, Science
   and Research (DIISR) and the Australian Research Council (ARC) through
   the International Science Linkage and the Discovery Projects programs,
   respectively, and by CAPES PDEE research grant 1185-08-0. This work was
   primarily carried out at CLOUDS Lab during Rodrigo Calheiros's visit to
   the University of Melbourne and it now continues as a joint effort
   between Australian and Brazilian researchers. Dr Rajiv Ranjan thanks CRC
   Smart Services for funding his position at the University of New South
   Wales. This paper is a substantially extended version of a keynote paper
   [20], and it focuses on CloudSim.
CR [Anonymous], 2007, PUBLIC LAW
   [Anonymous], 2010, Amazon Elastic Compute Cloud
   [Anonymous], 1999, GRID BLUEPRINT NEW C
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Avetisyan AI, 2010, COMPUTER, V43, P35, DOI 10.1109/MC.2010.111
   Bell WH, 2002, LECT NOTES COMPUT SC, V2536, P46
   Buyya Rajkumar, 2009, 2009 International Conference on High Performance Computing & Simulation (HPCS), P1, DOI 10.1109/HPCSIM.2009.5192685
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1175, DOI 10.1002/cpe.710
   Buyya R., 2010, P 10 INT C ALG ARCH, P328
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Chappell D., 2008, WHITE PAPER      OCT
   Dumitrescu CL, 2005, 2005 IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, VOLS 1 AND 2, P1151
   HOWELL F, 1998, P 1 INT C WEB BAS MO
   Legrand A, 2003, CCGRID 2003: 3RD IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P138, DOI 10.1109/CCGRID.2003.1199362
   Medina A, 2001, NINTH INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS AND SIMULATION OF COMPUTER AND TELECOMMUNICATION SYSTEMS, PROCEEDINGS, P346, DOI 10.1109/MASCOT.2001.948886
   Quiroz Andres, 2009, Proceedings of the 2009 10th IEEE/ACM International Conference on Grid Computing (GRID), P50, DOI 10.1109/GRID.2009.5353066
   Raghavendra R, 2008, ACM SIGPLAN NOTICES, V43, P48, DOI 10.1145/1353536.1346289
   Smith J., 2005, VIRTUAL MACHINES VER
   Vecchiola C., 2009, High speed and large scale scientific computing p, P267, DOI DOI 10.3233/978-1-60750-073-5-267
   Weiss Aaron, 2007, Networker, V11, P16, DOI 10.1145/1327512.1327513
   Wickremasinghe B, 2010, INT CON ADV INFO NET, P446, DOI 10.1109/AINA.2010.32
NR 21
TC 3038
Z9 3335
U1 9
U2 460
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2011
VL 41
IS 1
BP 23
EP 50
DI 10.1002/spe.995
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 701UB
UT WOS:000285847800002
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Barsky, M
   Stege, U
   Thomo, A
AF Barsky, M.
   Stege, U.
   Thomo, A.
TI A survey of practical algorithms for suffix tree construction in
   external memory
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE suffix tree; external memory algorithms; string index
AB The construction of suffix trees in secondary storage was considered impractical due to its excessive I/O cost. Algorithms developed in the last decade show that a suffix tree can efficiently be built in secondary storage for inputs which fit the main memory. In this paper, we analyze the details of algorithmic approaches to the external memory suffix tree construction and compare the performance and scalability of existing state-of-the-art software based on these algorithms. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Barsky, M.; Stege, U.; Thomo, A.] Univ Victoria, STN CSC Victoria, Victoria, BC V8W 3P6, Canada.
C3 University of Victoria
RP Barsky, M (corresponding author), Univ Victoria, STN CSC Victoria, POB 3055, Victoria, BC V8W 3P6, Canada.
EM mgbarsky@cs.uvic.ca
OI Stege, Ulrike/0000-0001-9466-7196; Thomo, Alex/0000-0002-3020-2258
CR Andersson A., 1996, Combinatorial Pattern Matching. 7th Annual Symposium, CPM 96. Proceedings, P102
   [Anonymous], 1973, 14 ANN S SWITCHING A, DOI [DOI 10.1109/SWAT.1973.13, 10.1109/SWAT.1973.13]
   [Anonymous], 1998, ART COMPUTING PROGRA
   APOSTOLICO A, 1992, J ALGORITHM, V13, P446, DOI 10.1016/0196-6774(92)90049-I
   Barsky M., 2008, P 17 ACM C INF KNOWL, P649
   Bedathur SJ, 2004, PROC INT CONF DATA, P720, DOI 10.1109/ICDE.2004.1320040
   Benson DA, 2006, NUCLEIC ACIDS RES, V34, pD16, DOI 10.1093/nar/gkj157
   CHIANG YJ, 1995, P ACM SIAM S DISCR A, V6, P139
   CLIFFORD R, 2003, P 14 ANN S COMB PATT, P70
   Clifford R, 2005, J DISCRET ALGORITHMS, V3, P176, DOI 10.1016/j.jda.2004.08.004
   Crauser A, 2002, ALGORITHMICA, V32, P1, DOI 10.1007/s00453-001-0051-5
   DEMENTIEV R, 2005, P 7 WORKSH ALG ENG E, P1
   Farach-Colton M, 2000, J ACM, V47, P987, DOI 10.1145/355541.355547
   Fischer J, 2008, LECT NOTES COMPUT SC, V5029, P152, DOI 10.1007/978-3-540-69068-9_16
   GARCIAMOLINA H, 1999, DATABASE SYSTEM IMPL, P43
   Giegerich R, 1997, ALGORITHMICA, V19, P331, DOI 10.1007/PL00009177
   Giegerich R, 2003, SOFTWARE PRACT EXPER, V33, P1035, DOI 10.1002/spe.535
   GUSFIELD D, 1997, ALGORITHMS STRINGS T, P122
   Hunt E., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P139
   Kärkkäinen J, 2006, J ACM, V53, P918, DOI 10.1145/1217856.1217858
   Kasai T., 2001, Combinatorial Pattern Matching. 12th Annual Symposium, CPM 2001. Proceedings (Lecture Notes in Computer Science Vol. 2089), P181
   Kurtz S, 2004, GENOME BIOL, V5, DOI 10.1186/gb-2004-5-2-r12
   Kurtz S, 1999, BIOINFORMATICS, V15, P426, DOI 10.1093/bioinformatics/15.5.426
   LARSSON NJ, 1999, LUCSTR99214 DEP COMP
   Manzini G, 2004, LECT NOTES COMPUT SC, V3111, P372
   MCCREIGHT EM, 1976, J ACM, V23, P262, DOI 10.1145/321941.321946
   MORRISON DR, 1968, J ACM, V15, P514, DOI 10.1145/321479.321481
   Navarro G., 2000, Journal of Discrete Algorithms, V1, P205
   *NCBI, 2008, NCBI GEN OV
   NELSON M, 2009, FAST STRING SEARCHIN
   PHOOPHAKDEE B, 2008, PAC S BIOC
   PHOOPHAKDEE B, 2007, ACM SIGMOD INT C MAN, P833
   Russo LMS, 2008, LECT NOTES COMPUT SC, V5029, P191, DOI 10.1007/978-3-540-69068-9_19
   Sadakane K, 2007, THEOR COMPUT SYST, V41, P589, DOI 10.1007/s00224-006-1198-x
   SMYTH W, 2003, COMPUTING PATTERNS S, P136
   Tian YY, 2005, VLDB J, V14, P281, DOI 10.1007/s00778-005-0154-8
   UKKONEN E, 1995, ALGORITHMICA, V14, P249, DOI 10.1007/BF01206331
   Välimäki N, 2007, LECT NOTES COMPUT SC, V4525, P217
   Välimäki N, 2007, BIOINFORMATICS, V23, P629, DOI 10.1093/bioinformatics/btl681
   VITTER JS, 1994, ALGORITHMICA, V12, P110, DOI 10.1007/BF01185207
   Vitter JS, 2001, ACM COMPUT SURV, V33, P209, DOI 10.1145/384192.384193
   [No title captured]
   2009, HOMO SAPIENS CHROMOS
NR 43
TC 5
Z9 6
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2010
VL 40
IS 11
BP 965
EP 988
DI 10.1002/spe.960
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 663SU
UT WOS:000282911000002
DA 2024-07-18
ER

PT J
AU Gao, L
   Xue, JL
   Ngai, TF
AF Gao, Lin
   Xue, Jingling
   Ngai, Tin-Fook
TI Loop recreation for thread-level speculation on multicore processors
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE thread-level speculation; loop parallelization; compiler; optimization
AB Inter-iteration dependences in loops can hinder loop-level parallelism. For some loops, existing thread-level speculation techniques fail to expose their inherent loop-level parallelism, because some inter-iteration dependences are too costly to synchronize, predict, pre-compute and isolate. This paper presents a compiler technique called loop recreation to change the nature of some dependences (by turning some inter-iteration dependences into intra-iteration ones and vice versa) in a loop so that the inter-iteration dependences in the transformed loop are less costly to enforce at runtime than those in the original loop. We present an algorithm for finding an optimal loop recreation transformation with respect to a simple misspeculation cost model and demonstrate the performance advantages of loop recreation over two recent techniques for multicore systems running nine representative irregular applications. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Gao, Lin; Xue, Jingling] Univ New S Wales, Sydney, NSW 2052, Australia.
   [Ngai, Tin-Fook] Intel Corp, Microprocessor Technol Lab, Santa Clara, CA USA.
C3 University of New South Wales Sydney; Intel Corporation
RP Xue, JL (corresponding author), Univ New S Wales, Sydney, NSW 2052, Australia.
EM jingling@cse.unsw.edu.au
RI Gao, Lin/JNF-0375-2023; Xue, Jingling/AAE-1991-2020
OI Xue, Jingling/0000-0003-0380-3506
CR Balakrishnan S, 2006, CONF PROC INT SYMP C, P302, DOI 10.1145/1150019.1136512
   Bhowmik A, 2004, IEEE T PARALL DISTR, V15, P713, DOI 10.1109/TPDS.2004.26
   Bridges MJ, 2008, IEEE MICRO, V28, P12, DOI 10.1109/MM.2008.13
   Chen MK, 2003, CONF PROC INT SYMP C, P434, DOI 10.1109/ISCA.2003.1207020
   Collier Cameron A, 2001, PHYS WORLD, V14, P25
   DU ZH, 2004, P SIGPLAN 04 C PROGR, P71
   Franklin Manoj, 1993, Ph.D. Dissertation
   GAO L, 2007, 2007 INT C PAR DISTR, P1
   GOLDBERG A, 2001, NETWORK OPTIMIZATION
   Han H, 2006, IEEE T PARALL DISTR, V17, P606, DOI 10.1109/TPDS.2006.88
   JOHNSON TA, 2004, P ACM SIGPLAN 2004 C, P59
   Johnson TA, 2007, PROCEEDINGS OF THE 2007 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING PPOPP'07, P205, DOI 10.1145/1229428.1229474
   KRISHNAN V, 1998, P ACM INT C SUP, P85
   LIAO SS, 2002, PLDI, P117
   Liu W., 2006, PPOPP 06 P ACM SIGPL, P158
   Luk CK, 2001, CONF PROC INT SYMP C, P40, DOI 10.1109/ISCA.2001.937430
   Moshovos A, 1997, ACM COMP AR, P181, DOI 10.1145/384286.264189
   Muchnick S., 1997, ADV COMPILER DESIGN
   OPLINGER J, 1997, CSLTR97715
   Oplinger JeffreyT., 1999, P 1999 INT C PARALLE, P303
   Quinones C.G., 2005, PLDI 05, P269
   Raman E, 2008, INT SYM CODE GENER, P114
   Steffan JG, 2002, EIGHTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE, PROCEEDINGS, P65
   TSAI JY, 1999, INT C PAR ARCH COMP, P35
   VACHHARAJANI N, 2007, PACT 07, P49
   Vijaykumar T. N., 1998, THESIS
   WANG SY, 2005, 18 INT WORKSH LANG C, P289
   Zhai A, 2004, INT SYM CODE GENER, P39
   ZHAI A, 2002, ARCH SUPPORT PROG LA, P171
   ZHONG H, 2007, EXTENDING MULTICORE, P25
   Zhong HT, 2008, INT S HIGH PERF COMP, P267
   Zilles C, 2001, CONF PROC INT SYMP C, P2, DOI 10.1109/ISCA.2001.937426
   SPARSEBENCH
NR 33
TC 4
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2010
VL 40
IS 1
BP 45
EP 72
DI 10.1002/spe.947
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 544OA
UT WOS:000273666300003
DA 2024-07-18
ER

PT J
AU Di Stefano, A
   Santoro, C
AF Di Stefano, Antonella
   Santoro, Corrado
TI A<SUP>3</SUP>M: an agent architecture for automated manufacturing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile agents; process control; load balancing
ID SYSTEMS; ENVIRONMENT; DESIGN
AB This paper proposes a software architecture based on mobile agents for distributed process control applications. A set of agents is employed to handle, in a single manufacturing cell, automatic assignment of control tasks to controllers, monitoring of cell functionalities and dynamic cell reconfiguration. The agents operate in a two-layered structure: at the highest level, the planning agents analyse the inputs of the system designer and automatically create the field agents, which operate at the lowest level and embed the control tasks to be executed. Field agents, which are mobile, are able to reach autonomously the controllers of the cell, in order to perform the control activity there. Exploiting the mobility enables a field agent to change its running device when the variation of the design parameters or a system fault requires a new task distribution. A load-balancing algorithm is introduced, with the objective of assigning each field agent to a controller of the manufacturing cell in order to fairly distribute the computation load. The algorithm uses a branch-and-bound technique to explore all possible solutions and applies two heuristics to throw away non-feasible solutions and select the best branch to analyse. The algorithm is designed to run on-line in order to allow a fast task redistribution when a fault condition occurs in the process control environment. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Di Stefano, Antonella; Santoro, Corrado] Univ Catania, Dipartimento Ingn Informat & Telecomunicaz, I-95125 Catania, Italy.
C3 University of Catania
RP Santoro, C (corresponding author), Univ Catania, Dipartimento Ingn Informat & Telecomunicaz, Viale A Doria 6, I-95125 Catania, Italy.
EM csanto@diit.unict.it
RI Di Stefano, Antonella/A-6094-2016
CR AUINGER F, 2004, INT IMS FORUM 2004
   BACON D, 2003, LECT NOTES COMPUTER, V2889
   Bellifemine F, 2001, SOFTWARE PRACT EXPER, V31, P103, DOI 10.1002/1097-024X(200102)31:2<103::AID-SPE358>3.0.CO;2-O
   BENOWITZ E, 2003, LECT NOTES COMPUTER, V2889
   BERGER M, 2002, WORKSH UB AG EMB WEA
   BERGER M, 2003, TELECOM ITALIA LAB J, V3, P32
   BOLLELLA G, 2003, P 18 2003 ACM SIGPLA
   BOLLELLA G, 2006, WORKSH JAV TECHN REA
   Bollella Greg., 2000, REAL TIME SPECIFICAT
   *CAN, 2007, CAN SPEC V 2 0
   CAVALIERI S, 1995, IEEE T SOFTWARE ENG, V21, P865, DOI 10.1109/32.473215
   CHOW R, 1996, DISTRIBUTED OPERATIN
   Cockburn D., 1996, Foundations of Distributed Artificial Intelligence, P319
   Colombo AW, 2004, 2004 2ND IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL INFORMATICS, P27, DOI 10.1109/INDIN.2004.1417297
   Corsaro A, 2004, LECT NOTES COMPUT SC, V3292, P394
   Corsaro A, 2002, LECT NOTES COMPUT SC, V2519, P900
   CORSARO A, 2003, LECT NOTES COMPUTER, V2889
   CORSARO A, 2005, P 10 IEEE INT C EM T
   DECOTIGNIE JD, 1988, IEEE NETWORK, V2, P55
   Deen SayyedM., 2003, AGENT BASED MANUFACT
   Di Stefano A, 2000, IEEE CONCURR, V8, P55, DOI 10.1109/4434.895107
   Dibble P., 2002, REAL TIME JAVA PLATF
   DISTEFANO A, 2002, P 6 IEEE INT C INT E
   DISTEFANO A, 2000, IEEE INT S IND EL PU
   DISTEFANO A, 2000, 2000 INT C INT ENG S
   Dozio L, 2003, ISORC 2003: SIXTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P11
   Foundation for Intelligent Physical Agents, 2002, SC00029H FDN INT PHY
   *FRENCH ASS STAND, 1990, 601607 NF C46 FRENCH
   *FSMLABS, 2007, RTLIN HOM PAG
   *GERMAN I NORM, 1991, DIN19245 GERM I NORM
   Giret A, 2005, LECT NOTES ARTIF INT, V3593, P39
   Giret A, 2004, J INTELL MANUF, V15, P645, DOI 10.1023/B:JIMS.0000037714.56201.a3
   Hall KH, 2005, LECT NOTES ARTIF INT, V3593, P1
   *HMS CONS, 2007, HOL MAN SYST SPEC
   Humphrey M, 1999, IEEE T PARALL DISTR, V10, P281, DOI 10.1109/71.755828
   *IEC, 2001, 611313 IEC TC65WG6
   *ISA SP50, 1997, DIG DAT COMM MEAS CO
   JENNINGS NR, 1992, DISTRIBUTED ARTIFICI, V40, P179
   Knight S., 1998, VIRTUAL ROUTER REDUN
   Koestler A, 1967, GHOST MACHINE
   LEITAO P, 2002, P 13 INT WORKSH DAT
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Liu J., 2000, Real-Time Systems
   NILSEN K, 2003, LECT NOTES COMPUTER, V2889
   *NUXI, 2007, NUXI HOM PAG
   Odell J. J., 2001, Agent-Oriented Software Engineering. First International Workshop, AOSE 2000. Revised Papers (Lecture Notes in Computer Science Vol.1957), P121
   Peng DT, 1997, IEEE T SOFTWARE ENG, V23, P745, DOI 10.1109/32.637388
   PIMENTEL JR, COMMUNICATION NETWOR
   PIZLO F, 2004, 7 IEEE INT S OBJ OR
   REHG J, 2000, COMPUTER INTEGRATED
   SANTORO C, 2002, ENGINEERING
   Shen W., 2001, MULTIAGENT SYSTEMS C
   SIEBERT F, 2003, HARD REALTIME GARBAG
   *SUN MICR INC, 2007, JAV MICR ED DOC
   WOOLDRIDGE NJ, 1999, MULTIAGENT SYSTEMS
   2007, HIGH AVAILABILITY LI
NR 56
TC 7
Z9 8
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2009
VL 39
IS 2
BP 137
EP 162
DI 10.1002/spe.894
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 394NO
UT WOS:000262453600002
DA 2024-07-18
ER

PT J
AU Laramee, RS
AF Laramee, Robert S.
TI Comparing and evaluating computer graphics and visualization software
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE computer graphics software; visualization software; graphics API;
   visualization API
AB When starting a new computer graphics or visualization software project, students, researchers, and businesses alike must decide whether or not to start from scratch or with third-party software. Since computer graphics and visualization applications are typically quite large, developers often build upon existing software libraries in order to take advantage of the tens of thousands of hours worth of development and testing already invested. Thus, developers and managers must face the decision of which library to build on. We present a side-by-side comparison and evaluation of four popular, state-of-the-art visualization and computer graphics libraries, namely the Visualization Toolkit (VTK), Open Inventor, Coin3D, and Hoops 31). The evaluation is based on the feature set, ease of installation, development of a benchmark application, documentation, and technical support for each package. The results of our comparison and evaluation are described and recommendations are given as for whom the libraries are best suited. The VTK prevails on top in many of the aspects we compared and evaluated. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 Univ Coll Swansea, Dept Comp Sci, Visual & Interact Comp Grp, Swansea SA2 8PP, W Glam, Wales.
C3 Swansea University
RP Laramee, RS (corresponding author), Univ Coll Swansea, Dept Comp Sci, Visual & Interact Comp Grp, Swansea SA2 8PP, W Glam, Wales.
EM r.s.laramee@swansea.ac.uk
OI Laramee, Robert S/0000-0002-3874-6145
CR *ADV VIS SYST INC, 2007, OPENVIZ
   [Anonymous], 1999, OpenGL programming guide: the official guide to learning OpenGL
   Arnold K., 2000, The Java Programming Language, V3rd ed
   Avila L., 2003, The VTK User's Guide (VTK 4.2)
   *AVL LIST GMBH, 2007, AVL AST ADV SIM TECH
   BURKARDT J, 2000, IVCON 3D GRAPHICS FI
   *CEI, 2007, ENS
   Corney Jonathan., 2001, 3D MODELING ACIS
   DALHEIMER MK, 1999, PROGRAMMING QT WRITI
   Foley J., 1993, INTRO COMPUTER GRAPH, V1st
   FORESTIER P, 1985, P INT C COMP GRAPH 8, P381
   Foster I, 1997, J PARALLEL DISTR COM, V45, P148, DOI 10.1006/jpdc.1997.1367
   Foulser D., 1995, Computer Graphics, V29, P13, DOI 10.1145/204362.204365
   Goodyer C, 2002, LECT NOTES COMPUT SC, V2329, P523
   Gorlatch S., 1998, Parallel Processing Letters, V8, P447, DOI 10.1142/S0129626498000456
   GOTTHEIL K, 1992, 10 MOTIF
   GREGORY KD, 1992, PROGRAMMING MOTIF
   GRIFFITH A, 2001, KDE QT PROGRAMMING B
   HANDSMAN P, 1993, DR DOBBS J, V18, P74
   HANDSMAN P, 1993, DOBBS J SOFTWARE TOO, V18, P76
   HARRISON M, 1998, TCL TK PROGRAMMING W
   HECK M, 2003, OPEN INVENTOR TGS US
   HELLER M, 1993, ADV WIN32 PROGRAMMIN
   HIBBARD W, 1998, COMPUTER GRAPHICS, V32, P10
   Ibanez L., 2003, ITK SOFTWARE GUIDE I
   Keramidas G. A., 1985, Microsoftware for Engineers, V1, P49
   *KITW INC, 2007, VIS TOOLK
   Laramee RS, 2002, ADVANCES IN MODELLING, ANIMATION AND RENDERING, P215
   LELER W, 1996, 3D HOOPS
   Lorensen William E., 1987, COMPUT GRAPH, P163, DOI DOI 10.1145/37402.37422
   LOVERIA G, 1991, BYTE, V16, P259
   Mark WR, 2003, ACM T GRAPHIC, V22, P896, DOI 10.1145/882262.882362
   MARTIN K, 2003, DOBBS J SOFTWARE TOO, V28, P42
   MARTIN K, 2003, DOBBS J SOFTWARE TOO, V28, P44
   MARTIN K, 2004, MASTERING CMAKE VERS
   MARTIN K, 2003, DOBBS J SOFTWARE TOO, V28, P40
   MARTIN K, 2003, DOBBS J SOFTWARE TOO, V28, P46
   *MERC COMP SYST IN, 2007, OP INV MERC
   *MERC INC, 2004, OP INV MERC REL 5 0
   MOLLER T, 2002, REAL TIME RENDERING
   *OP INV ARCH GROUP, 1994, OP INV C REF MAN OFF
   PAGENDARM HG, 1993, 4 EUROGRAPHICS WORKS
   PARTRIDGE A, 2000, THESIS TEXAS TECH U
   Potter C, 1997, COMPUT GRAPH WORLD, V20, P31
   Ratcliff J, 2002, DR DOBBS J, V27, P40
   RATCLIFF J, 2002, DOBBS J SOFTWARE TOO, V27, P44
   RATCLIFF J, 2002, DOBBS J SOFTWARE TOO, V27, P42
   SANCHEZ J, 2002, JAVA PROGRAMMING ENG
   SCHREINER D, 2000, OPENGL REFERENCE MAN
   SCHROEDER W., 2003, The Visualization Toolkit
   Shoemaker K., 1985, Computer Graphics, V19, P245, DOI 10.1145/325165.325242
   Siegel C. S., 1995, Computer Graphics, V29, P59, DOI 10.1145/204362.204377
   *SIM, 2007, COIN3D
   SLUSALLEK P, 1994, COMPUT GRAPH FORUM, V3, P443
   *TGS INC, 2007, OP INV TGS
   *TGS INC, 2007, AM 3 1 US GUID REF M
   *TGS INC, 2007, CUST SPOTL BROCH
   THOMAS D, 2003, PRAGMATIC VERSION CO
   *TSA, 2007, HOOPS 3D
   Upstill S., 1989, RENDERMAN COMPANION
   VANHEESCH D, 1997, DOXYGEN MANUAL VERSI
   VESPERMAN J, 2003, ESSENTIAL CVS
   Volbracht S, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P192, DOI 10.1109/VL.1996.545287
   Walatka P.P., 1990, PLOT3D Users Manual
   WARD P, 2001, QT PROGRAMMING LINUX
   Welch B.B., 1995, PRACTICAL PROGRAMMIN
   Wernecke J., 1994, The Inventor Mentor: Programming Object-Oriented 3D Graphics with Open Inventor, V2nd
   Wernecke J., 1994, The Inventor Toolmaker: Extending Open Inventor, V2nd
   Yoo T.S., 2004, Insight into images: principles and practice for segmentation, registration, and image analysis
   [No title captured]
NR 70
TC 4
Z9 4
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2008
VL 38
IS 7
BP 735
EP 760
DI 10.1002/spe.850
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 300IN
UT WOS:000255817600003
OA Green Published
DA 2024-07-18
ER

PT J
AU Hague, R
   Robinson, P
AF Hague, Rob
   Robinson, Peter
TI End-user programming of reconfigurable systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE end-user programming; multi-language programming; ubiquitous computing;
   home automation; visual programming
AB There is no ideal programming language. Each is better suited to some tasks rather than others. This is true not only for complete programs, but also for different stages such as architectural design, detailed implementation and maintenance. The situation is even more acute in the case of end-user programming languages, which cater for a much more varied user population. It would therefore be advantageous to allow the same program to be viewed, and edited, in a number of different languages. We have developed a system, Lingua Franca, that provides this facility for end-user programming languages in the setting of ubiquitous computing in the home. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Cambridge, Comp Lab, Cambridge CB3 0FD, England.
C3 University of Cambridge
RP Hague, R (corresponding author), Univ Cambridge, Comp Lab, William Gates Bldg,15 JJ Thomson Ave, Cambridge CB3 0FD, England.
EM rob@rho.org.uk
CR [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 2000, EXTENSIBLE MARKUP LA
   [Anonymous], 1993, A Small Matter of Programming
   [Anonymous], 2000, ASN 1 COMMUNICATION
   [Anonymous], 1993, Watch what I do: programming by demonstration
   ASHDOWN M, 2004, 585 U CAMBR
   Blackwell AF, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P150, DOI 10.1109/HCC.2001.995253
   Bray T., 1999, WORLD WIDE WEB CONSO
   Carlisle D., 2003, Mathematical Markup Language (MathML) Version 2.0, VSecond
   Clark J., 1999, XML Path Language (XPath) Version 1.0
   Clark J., 2001, RELAX NG SPECIFICATI
   Clark James, 1999, Xsl transformations (xslt)
   COHEN J, 2000, IN PRESS GEN EVENT N
   COX R, 1996, THESIS U EDINBURGH
   FALLSIDE DC, 2001, XML SCHEMA
   Fielding R., 1999, Tech. Rep
   Gamma Erich., 1994, DESIGN PATTERNS
   GOLLAND Y, 1999, 2518 RFC
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Gudgin M., 2003, SOAP VERSION 1 2 1
   HAGUE RG, 2005, 651 U CAMBR
   LEHORS A, 2003, DOCUMENT OBJECT MODE
   Lyons John., 1981, LANGUAGE LINGUISTICS
   MEYERS SD, 1993, CS9318 BROWN U
   Murray-Rust P, 2000, CHEM COMMUN, P1471, DOI 10.1039/b002483j
   Norman D.A., 1999, INVISIBLE COMPUTER
   Raskin Jef., 2000, HUMANE INTERFACE
   Simonyi C., 1995, MSRTR9552
   Sutherland I., 1963, PhD Thesis
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   Whitley KN, 1997, J VISUAL LANG COMPUT, V8, P109, DOI 10.1006/jvlc.1996.0030
NR 31
TC 1
Z9 1
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1285
EP 1306
DI 10.1002/spe.758
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 086HN
UT WOS:000240664500011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Turner, KJ
AF Turner, Kenneth J.
TI Validating feature-based specifications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE feature; LOTOS; SDL; service; validation
ID GENERATION
AB It is argued that specifications should be rigorously validated against requirements. This is useful to build confidence in a specification and to check a specification after it or the requirements have changed. The multiple-use scenario test and refusal description (MUSTARD) is introduced as a means of formulating and formalizing validation scenarios. The practical use of MUSTARD on a number of case studies is introduced. The MUSTARD notation is then explained, using examples from Internet telephony to show how validation scenarios are written. The core MUSTARD constructs are augmented by domain-specific vocabularies that adapt it for different kinds of systems. It is demonstrated how MUSTARD can validate specifications written in two standardized formal languages: language of temporal ordering specification (LOTOS) and specification and description language (SDL). Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Stirling, Dept Math & Comp Sci, Stirling FK9 4LA, Scotland.
C3 University of Stirling
RP Turner, KJ (corresponding author), Univ Stirling, Dept Math & Comp Sci, Stirling FK9 4LA, Scotland.
EM kjt@cs.stir-ac.uk
CR Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], 2002, SIP SESSION INITIATI
   Arkin A., 2005, WEB SERVICES BUSINES
   BOLOGNESI T, 1987, COMPUT NETWORKS ISDN, V14, P25, DOI 10.1016/0169-7552(87)90085-7
   BRINKSMA E, 1988, P PROT SPEC TEST VER, P23
   BUSTARD DW, 1994, IEEE T SOFTWARE ENG, V20, P562, DOI 10.1109/32.310666
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   CAMERON EJ, 1993, IEEE COMMUN MAG, V31, P64, DOI 10.1109/35.199613
   DENICOLA R, 1987, ACTA INFORM, V24, P211, DOI 10.1007/BF00264365
   DEVASCONCELOS AML, 1992, P FORM DESCR TECHN 5, P53
   du Bousquet L, 1998, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS V, P262
   *ETSI, 2003, ETSI201873
   ISO, 1989, Technical Report 8807
   *ISO IEC, 1998, 9646 ISOIEC
   *ISO IEC, 1998, 96463 ISOIEC
   *ISO IEC, 1997, 132451 ISOIEC
   *ITU, 2000, Z100 ITUT
   *ITU, 2000, Z120 ITUT
   *ITU, 2000, H323 ITUT
   *ITU, 2000, Q1200 ITUT
   JARD C, 2005, SOFTWARE TOOLS TECHN, V4, P305
   JI H, 2000, P FORM METH DISTR SY, P267
   KELLY B, 1995, P 3 INT WORKSH FEAT, P173
   KUHN DR, 1992, COMPUT J, V35, P574, DOI 10.1093/comjnl/35.6.574
   LI Q, 2004, P SAM 04 OTT CAN JUN, P301
   MANSUROV N, 1999, P SDL 99, P76
   Pavon Gomez S, 1995, LOLA USER MANUAL VER
   Rudolph E, 1996, COMPUT NETWORKS ISDN, V28, P1629, DOI 10.1016/0169-7552(95)00122-0
   SEINDAL R, 1997, GNU M4 VERSION 1 4 T
   Sommerville I., 1996, Software Engineering, V5th
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   Turner K.J., 1993, Using Formal Description Techniques: An Introduction to Estelle, Lotos, V1st
   Turner KJ, 2003, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VII, P123
   Turner KJ, 2004, COMPUT NETW, V45, P665, DOI 10.1016/j.comnet.2004.03.005
   Turner KJ, 2001, FACIT, P165
   Turner KJ, 2000, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VI, P241
   Turner KJ, 1998, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS V, P247
   TURNER KJ, 2005, SOFTWARE TOOLS TECHN, V4, P361
   VEMURI R, 1995, IEEE T VLSI SYST, V3, P201, DOI 10.1109/92.386221
   *VOICEXML FOR, 2003, VOIC EXTENSIBLE MARK
NR 40
TC 8
Z9 8
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2006
VL 36
IS 10
BP 999
EP 1027
DI 10.1002/spe.721
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 072OE
UT WOS:000239681900001
DA 2024-07-18
ER

PT J
AU Pazos-Arias, JJ
   López-Nores, M
   García-Duque, J
   Gil-Solla, A
   Ramos-Cabrer, M
   Blanco-Fernández, Y
   Díaz-Redondo, P
   Fernández-Vilas, A
AF Pazos-Arias, Jose J.
   Lopez-Nores, Martin
   Garcia-Duque, Jorge
   Gil-Solla, Alberto
   Ramos-Cabrer, Manuel
   Blanco-Fernandez, Yolanda
   Diaz-Redondo, P.
   Fernandez-Vilas, Ana
TI ATLAS:: a framework to provide multiuser and distributed t-learning
   services over MHP
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE t-learning; synchronous interaction; peer-to-peer technologies; visual
   development; formal specification
AB The increasing need of the developed countries to carry out effective distance learning strategies has led to a great development of Internet-based learning technologies (e-learning). Despite its evident advantages, the expansion of e-learning has been limited by the difficulty in reaching important social sectors, and also by the absence of mechanisms to fight the feeling of isolation of the users, which often leads them to abandoning the distance learning activities. This paper tackles these problems by introducing ATLAS, a framework for the development and deployment of multiuser t-learning services (i.e. learning services over Interactive Digital TV). This framework is built around three major features: an architecture for the services that exploits the multimedia capabilities of the television, a communications infrastructure that promotes the establishment of virtual learning communities, and a development tool that allows services to be created with minimum programming knowledge. ATLAS has been designed by considering several features that make Interactive Digital TV quite different from the PC, advising against the direct translation of the models developed for the Internet. In particular, ATLAS adheres to the Multimedia Home Platform (MHP) standard, which is gaining worldwide acceptance as one of the technical solutions that will shape the future of Interactive Digital TV. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Vigo, Dept Telematics Engn, Vigo 36310, Spain.
C3 Universidade de Vigo
RP Pazos-Arias, JJ (corresponding author), ETSE Telecomunicac, Campus Univ Vigo, Vigo 36310, Spain.
EM jose@det.uvigo.es
RI Vilas, Ana Fernández/L-2055-2014; Díaz Redondo, Rebeca P./L-3108-2014;
   Nores, Martín López/AAG-8636-2020; Arias, José/ITR-8005-2023; Nores,
   Martín López/F-9378-2016; José, Pazos Arias/F-6788-2016;
   Blanco-Fernandez, Yolanda/F-8111-2016; Gil, Alberto/F-6827-2016; Ramos
   Cabrer, Manuel/F-5339-2016
OI Vilas, Ana Fernández/0000-0003-1047-2143; Díaz Redondo, Rebeca
   P./0000-0002-2367-2219; Nores, Martín López/0000-0002-4802-607X; José,
   Pazos Arias/0000-0002-0424-5481; Blanco-Fernandez,
   Yolanda/0000-0002-1816-1377; Gil, Alberto/0000-0002-9641-4149; Ramos
   Cabrer, Manuel/0000-0002-1684-2160
CR [Anonymous], INF TECHN LEARN ED T
   ATWERE D, 2003, INTERACTIVE TV LEARN
   BCKINGHAM D, 2002, ED ENTERTAINMENT LEA
   Blanco-Fernández Y, 2004, LECT NOTES COMPUT SC, V3306, P415
   BOUDREAU T., 2002, NetBeans: the definitive guide
   Dillenbourg P., 1999, Advances in learning and instruction series
   *ETSI EN, 2003, 301192 ETSI EN
   *ETSI STAND, 2003, TS102812V121 ETSI ST
   Ewing J. M., 1999, Journal of Educational Multimedia and Hypermedia, V8, P3
   GILSOLLA A, 2002, P IADIS INT C WWW IN
   HABER C, 2001, EUROPEAN PERSPECTIVE
   *HAVI, 2005, HOM AUD VID INT
   HEALEY P, 2000, P 4 WORLD MULT SYST, V1
   Hirano S, 1998, CONCURRENCY-PRACT EX, V10, P927, DOI 10.1002/(SICI)1096-9128(199809/11)10:11/13<927::AID-CPE390>3.0.CO;2-G
   IEEE Learning Technology Standards Comitee, 2002, 1484121 IEEE LEARN T
   *ISO, 1998, 138186 ISOIEC
   ISO, 2000, 138181 ISOIEC
   Kayama M., 2004, Advanced Technology for Learning, V1, P139, DOI 10.2316/Journal.208.2004.3.208-0811
   LEKAKOS G, 2001, P 9 EUR C INF SYST M
   LOPEZ PG, 2001, EUROPEAN PERSPECTIVE
   López-Nores M, 2003, LECT NOTES COMPUT SC, V2899, P376
   Lopez-Nores M, 2005, P 3 EUR C INT TEL US
   LYTRAS M, 2002, P EUR C E LEARN AC C
   Morris S., 2005, Interactive TV Standards: A Guide to MHP, OCAP
   NASH JB, 2003, ONLINE COLLABORATIVE
   Oaks S., 2002, JXTA NUTSHELL
   Pazos Arias J. J., 2001, Formal Aspects of Computing, V13, P50, DOI 10.1007/PL00003939
   PUISSOCHET A, 2003, IDATE NEWS, V248
   RODRIGUEZRUBIO RF, 2002, P 4 EURASIP IEEE INT
   STOICA I, 2001, P ACM SIGCOMM 2001 C
   *SUN MICR INC, 2005, JAV REM METH INV
   *SUN MICR INC, 2005, SPEC DVB
   *SUN MICR INC, 2005, JAVABEANS SPEC
   Vinoski S, 1997, IEEE COMMUN MAG, V35, P46, DOI 10.1109/35.565655
NR 34
TC 6
Z9 7
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2006
VL 36
IS 8
BP 845
EP 869
DI 10.1002/spe.719
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056TK
UT WOS:000238547800003
DA 2024-07-18
ER

PT J
AU McIlwain, S
   Miller, BP
AF McIlwain, S
   Miller, BP
TI A tool for converting Linux device drivers into Solaris compatible
   binaries
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE device drivers; Linux; Solaris
AB The Linux operating system is quickly becoming a standard, attracting a wide user community and supporting a broad variety of applications and devices. Other vendors, such as Sun, have provided Linux-compatible system call interfaces to their kernels, but are constrained by the lack of device support. To address this problem, we present a system (called PITS) to build device drivers, in this case for Solaris x86, from Linux source code. To accomplish this goal, we designed tools and Linux kernel emulation code to handle the myriad incompatibilities. These incompatibilities require the ability to resolve symbol conflicts, emulate internal Linux kernel data structures, handle module initialization, and generate module dependencies. With our method, we show that converting Linux device drivers is possible, but has a few technical difficulties. Issues arise with sparse documentation, external user interfaces, and modular driver implementations. There are also fundamental differences between the two operating systems, such as interrupt and DMA handling. We describe each of these issues and their current solutions to build a functional driver in the Solaris environment. Using the IOzone file system benchmark, we also demonstrate comparable performance between our generated SCSI driver set and their corresponding native counterparts. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Wisconsin, Dept Comp Sci, Madison, WI 53706 USA.
C3 University of Wisconsin System; University of Wisconsin Madison
RP McIlwain, S (corresponding author), Univ Wisconsin, Dept Comp Sci, 1210 W Dayton St, Madison, WI 53706 USA.
EM mcilwain@cs.wisc.edu
CR [Anonymous], 2001, Linux device drivers-covers Linux 2.4
   BALLESTEROS F, 1999, LINUX J
   BOVET DP, 2003, UNDERSTANDING LINUX
   BROWN P, 2005, PHILS SOLARIS HINTS
   CORBET J, 2005, PORTING DEVICE DRIVE
   FUCHS P, 2005, NDISWRAPPER 2003
   GINZBURG S, 1997, LXRUN LINUX EMULATOR
   Goel S, 1996, PROCEEDINGS OF THE USENIX 1996 ANNUAL TECHNICAL CONFERENCE, P65
   GOOCH R, 2005, LIN DEVFS DEV FIL SY
   *KERN ORG ORG, 2005, LIN KERN ARCH
   KROAHHARTMAN G, 2003, P LIN S OTT ONT CAN
   Mauro J., 2001, Solaris Internals: Core Kernel Compo- nents
   NORCOTT WD, 2005, IOZONE
   PAUL B, 2005, NDISULATOR FREEBSD S
   *SOFTW PUBL INT IN, 2005, DEB GNU LIN
   Stallman  R., 2004, USING GNU COMPILER C
   Stevens W.R., 1993, Advanced Programming in the UNIX Environment
   *SUN MICR INC, 2001, SOL 8 SYST HEAD FIL
   *SUN MICR INC, 2005, SUN LIN COMP IXR
   *SUN MICR INC, 2003, WRIT DEV DRIV SOL OP
   *SUN MICR INC, 2000, LXRUN TECHN OV
   *SUN MICR INC, 1999, STREAMS PROGR GUID
   *SUN MICR INC, 2000, WRIT DEV DRIV
   Van Maren Kevin Thomas, 1999, Master's thesis
   VEMURI HK, 2002, THESIS INDIAN I TECH
   YANG CW, 1998, P 1998 INT COMP S TA
   YOUNGDALE E, 2005, SCSI DEBUG ADAPTER D
NR 27
TC 0
Z9 0
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2006
VL 36
IS 7
BP 689
EP 710
DI 10.1002/spe.714
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 053TP
UT WOS:000238328500002
DA 2024-07-18
ER

PT J
AU Binder, W
AF Binder, Walter
TI Portable and accurate sampling profiling for Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; JVM; sampling profiling; program transformations; bytecode
   instrumentation
ID FRAMEWORK
AB This article presents a novel framework for the sampling-based profiling of Java programs, which relies on program transformation techniques. We exploit bytecode instruction counting to regularly activate a user-defined profiling agent, which processes the current call stack. This approach has several advantages, such as making the instrumentation entirely portable, generating reproducible profiles, and enabling a fine-grained adjustment of the sampling rate. Our framework offers a flexible API to write portable profiling agents in pure Java. While the overhead due to our profiling scheme is comparable to the overhead caused by prevailing, timing-based profilers, the resulting profiles are much more accurate. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Ecole Polytech Fed Lausanne, IC IIF LIA, INR 241, CH-1015 Lausanne, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; Ecole Polytechnique
   Federale de Lausanne
RP Binder, W (corresponding author), Ecole Polytech Fed Lausanne, IC IIF LIA, INR 241, Batiment IN,Stn 14, CH-1015 Lausanne, Switzerland.
EM walter.binder@epfl.ch
OI Binder, Walter/0000-0002-2477-2182
CR Alpern B, 2000, IBM SYST J, V39, P211, DOI 10.1147/sj.391.0211
   Ammons Glenn, 1997, P ACM SIGPLAN 97 C P, P85, DOI [10.1145/258915, DOI 10.1145/258915]
   Anderson JM, 1997, ACM T COMPUT SYST, V15, P357, DOI 10.1145/265924.265925
   [Anonymous], 2004, VIRT MACH RES TECHN
   Arnold M, 2001, ACM SIGPLAN NOTICES, V36, P168, DOI 10.1145/381694.378832
   BALL T, 1994, ACM T PROGR LANG SYS, V16, P1319, DOI 10.1145/183432.183527
   Binder W, 2004, IEEE INTERNET COMPUT, V8, P74, DOI 10.1109/MIC.2004.28
   Binder W, 2001, ACM SIGPLAN NOTICES, V36, P139, DOI 10.1145/504311.504293
   BINDER W, 2005, EPFLIC2005011 SCH CO
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   CHOI JD, 1999, P ACM SIGPLAN SIGSOF, P21
   Cierniak M, 2000, ACM SIGPLAN NOTICES, V35, P13, DOI 10.1145/358438.349306
   COOPER BF, 1998, CUCS85398 U COL BOUL
   DAHM M, 2005, JAV INF TAG 1999 JIT
   DMITRIEV M, 2004, WOSP 04, P139
   Dufour B, 2003, ACM SIGPLAN NOTICES, V38, P149, DOI 10.1145/949343.949320
   Feller P. T, 1998, THESIS U CALIFORNIA
   GOSLING J, 2000, JAVA SERIES
   Harkema M., 2002, PROC INT WORKSHOP SO, P114
   Hauswirth M., 2004, OOPSLA 04 P 19 ANN A, P251
   HULAAS J, 2004, P PEPM 04 2004 ACM S, P169
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   Krall A, 1998, 1998 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P205, DOI 10.1109/PACT.1998.727250
   LARUS JR, 1994, SOFTWARE PRACT EXPER, V24, P197, DOI 10.1002/spe.4380240204
   Liang S, 1999, PROCEEDINGS OF THE FIFTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS '99), P229
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Ogasawara T, 2001, ACM SIGPLAN NOTICES, V36, P83, DOI 10.1145/504311.504289
   *STAND PERF EV COR, 2005, SPEC JVM98 BENCHM
   *SUN MICR INC, 2005, JVM TOOL INT JVMTI
   *SUN MICR INC, 2005, JAV VIRT MACH PROF I
   TANTER E, 2002, LECT NOTES COMPUTER, V2487
   TURNER JD, 2003, THESIS U WARWICK
   Whaley John., 2000, JAVA 00, P78
NR 33
TC 17
Z9 21
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2006
VL 36
IS 6
BP 615
EP 650
DI 10.1002/spe.712
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 042QV
UT WOS:000237544800003
DA 2024-07-18
ER

PT J
AU Chivers, H
   Fletcher, M
AF Chivers, H
   Fletcher, M
TI Applying security design analysis to a service-based system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT International Workshop on Grid Security
CY JUL, 2004
CL Oxford, ENGLAND
DE security; risk; design; distributed systems; service-based; Grid
ID REQUIREMENTS
AB Risk analysis is the only effective way of making value judgments about the need for security. Established analysis methods apply to whole operational systems, taking a necessarily holistic view of security, but this makes them difficult to integrate into the design process for service-based applications, where design and implementation are independent of operational deployment. However, the most costly mistakes occur early in the development lifecycle, and effective security can be difficult to retrofit, motivating the need for early security analysis. This paper describes SeDAn (Security Design Analysis), a security risk analysis framework that is adapted for use in the design phase of service-based systems, and its application to a significant Grid-based project (Distributed Aircraft Maintenance Environment-DAME). The complete lifecycle of the risk analysis is described, and the effectiveness of the process in identifying design defects validates both the need for, and the effectiveness of, this type of analysis. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 University of York - UK
RP Chivers, H (corresponding author), Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
EM hrchivers@iee.org
CR ALBERTS C, OCTAVE METHOD IMPLEN
   Antn A.I., 2001, Recent Advances in E-Commerce Security and Privacy. A. K. Ghosh, P29
   BASKERVILLE R, 1993, COMPUT SURV, V25, P375, DOI 10.1145/162124.162127
   *BRIT STAND I, 1999, BS77991
   *BRIT STAND I, 1999, BS77992
   CHIVERS H, 2004, P GRID SEC PRACT EXP
   CHIVERS H, 2004, 378 YCS U YORK DEP C
   CHUNG L, 1995, PROC INT CONF SOFTW, P25, DOI 10.1145/225014.225017
   CHUNG L, 1993, LECT NOTES COMPUTER, V685
   Cysneiros L. M, 2001, P 2001 C CTR ADV STU, P202
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   den Braber Folker., 2003, UML UNIFIED PROCESS, P332
   DIMITRAKOS T, 2002, P EUR 2002 ST ANN CO
   Drappa A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P199, DOI 10.1109/ICSE.2000.870411
   Foster I., 2003, GRID 2 BLUEPRINT NEW, Vsecond
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   HOO SK, 2001, SECURE BUSINESS Q, V1
   JACKSON T, 2003, P UK ESC ALL HANDS M
   MOFFETT JD, 2003, YCS2003368 U YORK DE
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   *NIST, 2002, NISTSP
   *NIST, 1995, NIST SP
   SCHNEIER B, 2003, THINKING SENSIBLY AB
   Straub DW, 1998, MIS QUART, V22, P441, DOI 10.2307/249551
   *US GEN ACC OFF, 1999, GAOAIMD0033
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
NR 26
TC 4
Z9 6
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2005
VL 35
IS 9
BP 873
EP 897
DI 10.1002/spe.693
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 943CO
UT WOS:000230329800007
DA 2024-07-18
ER

PT J
AU Niyogi, R
   Nath, A
AF Niyogi, Rajdeep
   Nath, Amar
TI Formal specification and verification of a team formation protocol using
   TLA<SUP>+</SUP>
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE formal specification; multi-agent system; team formation; TLA(+);
   verification
AB Team formation in an environment where some relevant parameters are not known in advance is a challenging problem. Communicating automata and distributed algorithms have been used to describe protocols for team formation. A high-level specification provides a mathematical description of a protocol or a program. TLA(+) is a formal specification language designed to provide high-level specifications of concurrent and distributed systems. The associated model checker known as TLC is capable of model checking the TLA(+) specifications. Recently, formal specification of a team formation protocol is given using TLA(+) when there is a single initiator (an agent or a robot) that initiates the team formation. Using TLA(+), we examine the formal specification for the multiple initiator situation and demonstrate that a composition technique can yield a single monolithic specification for the multiple initiator situation from the single initiator situation specification. We have used models of varying sizes, and the TLC model checker has confirmed that the protocol's specifications meet certain desired characteristics in each case.
C1 [Niyogi, Rajdeep] Indian Inst Technol IIT Roorkee, CSE, Roorkee 247667, India.
   [Nath, Amar] St Longowal Inst Engn & Technol SLIET, CSE, Longowal, Punjab, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Roorkee; Sant Longowal Institute of Engineering &
   Technology (SLIET)
RP Niyogi, R (corresponding author), Indian Inst Technol IIT Roorkee, CSE, Roorkee 247667, India.
EM rajdeep.niyogi@cs.iitr.ac.in
RI Nath, Dr. Amar/JTD-2266-2023
OI Nath, Dr. Amar/0000-0002-9290-4378; Niyogi, Rajdeep/0000-0003-1664-4882
CR Agmon N, 2012, P 11 INT C AUT AG MU, P341
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Batson B., 2002, 1 INT S FORMAL METHO
   Brambilla M., 2012, Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems, V1, P139
   De Nicola R, 1998, IEEE T SOFTWARE ENG, V24, P315, DOI 10.1109/32.685256
   De Nicola R, 2007, THEOR COMPUT SCI, V382, P42, DOI 10.1016/j.tcs.2007.05.008
   Gerkey BP, 2002, IEEE T ROBOTIC AUTOM, V18, P758, DOI 10.1109/TRA.2002.803462
   Gjondrekaj Edmond, 2012, Formal Methods and Software Engineering, P54
   Gunn T, 2015, J COMPUT SYST SCI, V81, P553, DOI 10.1016/j.jcss.2014.11.009
   Gutiérrez JH, 2016, COMPUT OPER RES, V75, P150, DOI 10.1016/j.cor.2016.05.012
   Hemapala M, 2009, IND ROBOT, V36, P146, DOI 10.1108/01439910910932603
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Kong Y, 2016, COMPUT J, V59, P403, DOI 10.1093/comjnl/bxv061
   Konur S, 2012, ROBOT AUTON SYST, V60, P199, DOI 10.1016/j.robot.2011.10.005
   Konur S, 2010, LECT NOTES COMPUT SC, V6234, P440, DOI 10.1007/978-3-642-15461-4_42
   Kwiatkowska M, 2002, LECT NOTES COMPUT SC, V2324, P200
   LAMPORT L, 1989, COMMUN ACM, V32, P32, DOI 10.1145/63238.63240
   LAMPORT L, 1983, ACM T PROGR LANG SYS, V5, P190, DOI 10.1145/69624.357207
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Lamport Leslie., TLA HOME PAGE
   Lappas T, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P467
   Loreti M., SAM STOCHASTIC ANALY
   Luckcuck M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3342355
   Mashkoor A, 2018, SOFTWARE PRACT EXPER, V48, P2350, DOI 10.1002/spe.2634
   Merz Stephan., 2019, Concurrency: the Works of Leslie Lamport, P103
   Nath Amar, 2021, Advanced Information Networking and Applications. Proceedings of the 35th International Conference on Advanced Information Networking and Applications (AINA-2021). Lecture Notes in Networks and Systems (LNNS 225), P370, DOI 10.1007/978-3-030-75100-5_32
   Nath A, 2020, LECT NOTES COMPUT SC, V12253, P120, DOI 10.1007/978-3-030-58814-4_9
   Nath A, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P792, DOI 10.1145/3341105.3373980
   Nath A, 2020, ICAART: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON AGENTS AND ARTIFICIAL INTELLIGENCE, VOL 1, P152, DOI 10.5220/0008914701520160
   Nath A, 2019, INT J INTELL ROBOT, V3, P392, DOI 10.1007/s41315-019-00111-5
   Nath A, 2018, LECT NOTES ARTIF INT, V11320, P71, DOI 10.1007/978-3-030-03991-2_7
   Netzer R. H. B., 1992, ACM Letters on Programming Languages and Systems, V1, P74, DOI 10.1145/130616.130623
   Newcombe C, 2015, COMMUN ACM, V58, P66, DOI 10.1145/2699417
   Niyogi R, 2022, LECT NOTE NETW SYST, V451, P301, DOI 10.1007/978-3-030-99619-2_29
   Spivey M., 1992, THE Z NOTATION
   TADOKORO S., 2000, Proceedings of the IEEE International Conference on Robotics and Automation, V4, P4089, DOI DOI 10.1109/ROBOT.2000.845369
   von Praun C., 2011, ENCY PARALLEL COMPUT
   Webster M., 2014, FORMAL VERIFICATION, P74
   Webster M, 2016, IEEE T HUM-MACH SYST, V46, P186, DOI 10.1109/THMS.2015.2425139
NR 41
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2024
VL 54
IS 6
BP 961
EP 984
DI 10.1002/spe.3307
EA DEC 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PM7O6
UT WOS:001133059900001
DA 2024-07-18
ER

PT J
AU Chen, FW
   Zhang, L
   Lian, XL
AF Chen, Fangwei
   Zhang, Li
   Lian, Xiaoli
TI CDTC: Automatically establishing the trace links between class diagrams
   in design phase and source code
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design documentation; design model completion; design-to-code
   traceability; UML class diagram
ID TRACEABILITY; MODEL; SEMANTICS
AB ContextThe UML class diagram is commonly used to model functional structures and software code structures in both the preliminary and detailed design stages. And the abstraction level of UML class diagrams is usually higher than that of source code. Usually, there is a lack of trace links between these class diagrams and the source code, which may cause difficulties in understanding the source code, and affect the software evolution and maintenance.ObjectiveThe main goal of this article is to establish the trace links between highly abstracted UML class diagrams in the design phase and source code, and eventually help practitioners better understand source code.MethodWe propose an approach for the automated trace link establishment between UML class diagrams in the design phase and source code. To address the problem of abstraction level gap between them, we extend the UML class diagram by mining the synonymous phrases of class names and deducing the latent missing relationships between classes from multiple design documents. Then we build the trace links with a two-phase approach including initial construction with fuzzy matching and further optimization by class relationship inference.ResultsExperiments on five open-source projects show that the recalls of our approach are over 94%, and the F2-scores are over 88%, with the gains of 30% to 60% than the four baselines.ConclusionOur work can be a reference for establishing the initial trace links between highly-abstracted UML class diagrams and source code. Towards the higher abstraction of design diagrams, we extend UML class diagrams with the statistical analysis on multiple design documents. To guarantee the quality of trace links, we design a two-phase approach by obtaining the "full but not good enough" trace links and filtering the "probably wrong" links. Experiments show that the main techniques of our approach behave as important role for tracing between high-level class diagrams and source code.
C1 [Chen, Fangwei; Zhang, Li; Lian, Xiaoli] Beihang Univ, Sch Comp Sci & Engn, Beijing 100191, Peoples R China.
C3 Beihang University
RP Lian, XL (corresponding author), Beihang Univ, Sch Comp Sci & Engn, Beijing 100191, Peoples R China.
EM lianxiaoli@buaa.edu.cn
RI 陈, 方伟/JXM-6814-2024
FU This work is supported by the National Science Foundation of China grant
   nos. 62177003 and 62102014. It is also supported by Key Laboratory of
   Software Development Environment no. SKLSDE-2021ZX-10. [62177003,
   62102014]; National Science Foundation of China [SKLSDE-2021ZX-10]; Key
   Laboratory of Software Development Environment
FX This work is supported by the National Science Foundation of China grant
   nos. 62177003 and 62102014. It is also supported by Key Laboratory of
   Software Development Environment no. SKLSDE-2021ZX-10.
CR Adersberger J., 2011, EUR C SOFTW ARCH
   Aguiar A., 2004, XML APLICACOES TECNO, V2004, P1
   Aitken A., 2013, 2013 46 HAW INT C SY
   Al-Saiyd NA., 2017, 2017 2 INT C COMP CO
   Aljamaan H., 2014, 201
   Amnell T., 2003, INT C FORM MOD AN TI
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, ANN SOFTW ENG, V9, P35, DOI 10.1023/A:1018916522804
   Arora C., 2016, P ACM IEEE 19 INT C
   Arunthavanathan A., 2016, 2016 MOR ENG RES C M
   Asuncion HU., 2010, 2010 ACM IEEE 32 INT
   Aung TWW, 2020, INT C PROGRAM COMPRE, P14, DOI 10.1145/3387904.3389251
   Bavota G., 2012, 2012 28 IEEE INT C S
   BOURDEAU RH, 1995, IEEE T SOFTWARE ENG, V21, P799, DOI 10.1109/32.469459
   Buckley J., 2013, 2013 35 INT C SOFTW
   Caracciolo A., 2015, 2015 12 WORK IEEE IF
   Chavez HM, 2016, IEEE T SOFTWARE ENG, V42, P322, DOI 10.1109/TSE.2015.2488645
   Chen FW, 2021, SOFTWARE PRACT EXPER, V51, P1483, DOI 10.1002/spe.2967
   De Lucia A, 2004, PROC IEEE INT CONF S, P306, DOI 10.1109/ICSM.2004.1357816
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Ding W., 2014, 2014 19 INT C ENG CO
   Dryer MatthewS., 2007, LANGUAGE TYPOLOGY SY, P151, DOI [10.1017/CBO9780511619434.003, DOI 10.1017/CBO9780511619434.003]
   Ferreira J., 2007, INT C EXTR PROGR AG
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Gravino C., 2010, P 2010 ACM S APPL CO
   Hains G, 2015, 2015 SCIENCE AND INFORMATION CONFERENCE (SAI), P84, DOI 10.1109/SAI.2015.7237130
   Hammad M, 2011, SOFTWARE QUAL J, V19, P35, DOI 10.1007/s11219-010-9103-x
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hazem A., 2014, 9 ED LANG RES EV C L
   Hazem A, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P297
   Hebig R., 2016, P ACM IEEE 19 INT C
   Hosseini R., 2013, CEUR WORKSHOP PROC, V1009
   Hutchinson J., 2011, P 33 INT C SOFTW ENG
   Javed MA., 2014, P 18 INT C EV ASS SO
   Kamalabalan K., 2015, 2015 MOR ENG RES C M
   Karasneh B., 2013, Online Img2UML repository: An online repository for UML models
   Ko H., 2021, Proceedings, V74, P13, DOI DOI 10.3390/PROCEEDINGS2021074013
   Kramer ME., 2015, P 18 INT ACM SIG S C
   Lin J, 2020, IEEE ICC, DOI 10.1109/icc40277.2020.9149002
   Losada B, 2013, SCI COMPUT PROGRAM, V78, P2268, DOI 10.1016/j.scico.2012.07.022
   Ludewig Jochen, 2003, Softw Syst Model, V2, P5
   Mader P., 2009, EUR C MOD DRIV ARCH
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   MCCAWLEY JD, 1981, LINGUA, V53, P99, DOI 10.1016/0024-3841(81)90014-0
   Mirakhorli M, 2012, PROC INT CONF SOFTW, P639, DOI 10.1109/ICSE.2012.6227153
   Murta LGP., 2006, 21 IEEE ACM INT C AU
   Niwattanakul Suphakit, 2013, IMECS 2013 Proceedings of International Multiconference of Engineers and Computer Scientists, P380
   Olsson T., 2021, 15 EUR C SOFTW ARCH
   Ou YM, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294606
   Ozkaya M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106275
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Petersen K, 2008, Systematic Mapping Studies in Software Engineering
   Reggio G., 2014, INT C MOD DRIV ENG L
   Sag IA, 1997, J LINGUIST, V33, P431, DOI 10.1017/S002222679700652X
   Scanniello G., 2011, 2011 IEEE 19 INT C P
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B., 2015, OMG Unified Modeling Language (Version 2.5)
   Sharaf M., 2019, INT C SYST AN MOD
   Sinkala ZT., 2021, 2021 IEEE 18 INT C S
   Sokolova M, 2006, LECT NOTES COMPUT SC, V4304, P1015
   Theobald S., 2018, INT C AG SOFTW DEV
   Tomassetti F., 2017, JAVAPARSER
   Unterkalmsteiner M, 2016, EMPIR SOFTW ENG, V21, P2324, DOI 10.1007/s10664-015-9410-8
   van Eck NJ, 2009, J AM SOC INF SCI TEC, V60, P1635, DOI 10.1002/asi.21075
   Wang BC, 2018, J SYST SOFTWARE, V146, P59, DOI 10.1016/j.jss.2018.09.001
   Wang LD, 2021, IEEE INT SYMP CIRC S, DOI 10.1109/ISCAS51556.2021.9401724
   Zhang SY, 2012, I C NETWORK PROTOCOL
   Zhao Z, 2021, IEEE INT SYM BROADB, DOI 10.1109/BMSB53066.2021.9547077
NR 70
TC 0
Z9 0
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2024
VL 54
IS 2
BP 281
EP 307
DI 10.1002/spe.3270
EA OCT 2023
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL7E2
UT WOS:001076178700001
DA 2024-07-18
ER

PT J
AU Wonsil, J
   Boufford, N
   Agrawal, P
   Chen, C
   Cui, TH
   Sivaram, A
   Seltzer, M
AF Wonsil, Joseph
   Boufford, Nichole
   Agrawal, Prakhar
   Chen, Christopher
   Cui, Tianhang
   Sivaram, Akash
   Seltzer, Margo
TI Reproducibility as a service
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE containers; provenance; R; reproducibility; static analysis
AB Recent studies demonstrated that the reproducibility of previously published computational experiments is inadequate. Many of these published computational experiments never recorded or preserved their computational environment, including packages installed in the language, libraries installed on the host system, and file locations. Researchers have created reproducibility tools to help mitigate this problem, but these tools assume the experiment currently executes. Thus, these tools do not facilitate reproducibility of the large number of published experiments. This situation is not improving; researchers continue to publish without using reproducibility tools. We define a framework to distinguish between actions taken by a researcher to facilitate reproducibility in the presence of a computational environment and actions taken by a researcher to enable reproduction of an experiment when that environment has been lost to clarify the gap between what existing reproducibility tools are capable of and what is required to reproduce published experiments. The difference between these approaches lies in the availability of a computational environment. Researchers that provide access to the original computational environment perform proactive reproducibility, while those who do not enable only retroactive reproducibility. We present Reproducibility as a Service (RaaS), which is, to the best of our knowledge, the first reproducibility tool explicitly designed to facilitate retroactive reproducibility. We demonstrate how RaaS fixes many common errors found in R scripts on Harvard's Dataverse and preserves a recreated computational environment. Finally, we discuss how a retroactive reproducibility service such as RaaS is also helpful as an 'artifact evaluation assistant' in a journal's publication pipeline.
C1 [Wonsil, Joseph; Boufford, Nichole; Cui, Tianhang; Seltzer, Margo] Univ British Columbia, Dept Comp Sci, Vancouver, BC, Canada.
   [Agrawal, Prakhar; Sivaram, Akash] Indian Inst Technol Delhi, Dept Comp Sci & Engn, Delhi, India.
   [Chen, Christopher] Harvard Univ, John A Paulson Sch Engn & Appl Sci, Cambridge, MA USA.
C3 University of British Columbia; Indian Institute of Technology System
   (IIT System); Indian Institute of Technology (IIT) - Delhi; Harvard
   University
RP Wonsil, J (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC, Canada.
EM jwonsil@student.ubc.ca
OI Wonsil, Joseph/0000-0003-4024-239X
CR Allen Christopher, 2019, PLoS Biol, V17, pe3000246, DOI 10.1371/journal.pbio.3000246
   Altman M, 2001, SOC SCI COMPUT REV, V19, P458, DOI 10.1177/089443930101900405
   Amorim A, 2019, I SYMP CONSUM ELECTR
   Anaconda Inc, 2020, AN SOFTW DISTR AN DO
   Baker M, 2016, NATURE, V533, P452, DOI 10.1038/533452a
   Bayer M., 2012, The Architecture of Open Source Applications Volume II: Structure, Scale, and a Few More Fearless Hacks
   Bezanson J, 2017, SIAM REV, V59, P65, DOI 10.1137/141000671
   Brinckman A, 2019, FUTURE GENER COMP SY, V94, P854, DOI 10.1016/j.future.2017.12.029
   Chen C., 2018, THESIS HARVARD U
   Chirigati F, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P2085, DOI 10.1145/2882903.2899401
   Clyburne-Sherin A., 2019, METAPSYCHOLOGY, V3, P892
   Denny MJ., 2020, PRETEXT SIMPLE CONSI
   Diethelm K, 2012, COMPUT SCI ENG, V14, P64, DOI 10.1109/MCSE.2011.21
   Dröge B, 2023, SOFTWARE PRACT EXPER, V53, P176, DOI 10.1002/spe.3075
   Ellison AM, 2010, ECOLOGY, V91, P2536, DOI 10.1890/09-0032.1
   GDAL/OGR contributors, 2021, GDAL OGR GEOSP DAT A
   Guo PJ, 2012, COMPUT SCI ENG, V14, P32, DOI 10.1109/MCSE.2012.36
   Guo Philip Jia, 2012, SOFTWARE TOOLS FACIL
   HashiCorp, 2021, ABOUT US
   Hornik K., 2020, R FAQ
   Huber W, 2015, NAT METHODS, V12, P115, DOI [10.1038/NMETH.3252, 10.1038/nmeth.3252]
   Kery MB, 2017, S VIS LANG HUM CEN C, P25, DOI 10.1109/VLHCC.2017.8103446
   Kluyver T, 2016, POSITIONING AND POWER IN ACADEMIC PUBLISHING: PLAYERS, AGENTS AND AGENDAS, P87, DOI 10.3233/978-1-61499-649-1-87
   Kurtzer GM, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177459
   Landau WM., 2021, J OPEN SOURCE SOFTW, V6, P2959, DOI DOI 10.21105/JOSS.02959
   Lau M., 2022, RCLEAN TOOL WRITING
   Lerner B, 2018, INFORMATICS-BASEL, V5, DOI 10.3390/informatics5010012
   Lerner BS., 2014, USENIX WORKSHOP THEO, DOI [10.1007/978-3-319-16462-5_36, DOI 10.1007/978]
   McKiernan EC, 2016, ELIFE, V5, DOI 10.7554/eLife.16800
   McKinney W., 2010, P 9 PYTHON SCI C, P51, DOI DOI 10.25080/MAJORA-92BF1922-00A
   Merkel D., 2014, LINUX J, V2014, P2, DOI DOI 10.5555/2600239.2600241
   Microsoft RCT, 2017, MICR R OP
   Murta L, 2015, LECT NOTES COMPUT SC, V8628, P71, DOI 10.1007/978-3-319-16462-5_6
   National Academies of Sciences Engineering and Medicine, 2019, Reproducibility and Replicability in Science, DOI [DOI 10.17226/25303, 10.17226/25303]
   Netherlands' EU Presidency, OPEN SCI VISION ACTI
   Nust Daniel, 2019, Journal of Open Source Software, V4, P1603, DOI [DOI 10.21105/joss.01603, 10.21105/joss.01603, DOI 10.21105/JOSS.01603]
   Pebesma E, 2018, R J, V10, P439
   Pebesma E, 2016, R J, V8, P486
   Pham Q., 2013, P 5 USENIX C THEOR P, V13, P2
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Project Jupyter, 2020, about us
   Redis Labs, 2020, US
   Reich M, 2006, NAT GENET, V38, P500, DOI 10.1038/ng0506-500
   Richard M., 2020, GNU MAKE
   Ronacher A., 2020, US
   Samuel S., 2020, REPRODUCEMEGIT VISUA
   Solem A., 2020, CELERY
   Stodden V., 2010, The scientific method in practice: reproducibility in the computational sciences, DOI [10.2139/ssrn.1550193, DOI 10.2139/SSRN.1550193]
   That DHT, 2017, P IEEE INT C E-SCI, P374, DOI 10.1109/eScience.2017.51
   Trisovic Ana, 2020, P-RECS '20: Proceedings of the 3rd International Workshop on Practical Reproducible Evaluation of Computer Systems, P15, DOI 10.1145/3391800.3398173
   Trisovic A, 2022, SCI DATA, V9, DOI 10.1038/s41597-022-01143-6
   Van Rossum G., 2009, Python 3 Reference Manual
   Wickham H., 2019, J OPEN SOURCE SOFTW, V4, P1686, DOI [10.21105/joss.01686, DOI 10.21105/JOSS.01686]
   Wilkinson Mark D, 2016, Sci Data, V3, P160018, DOI 10.1038/sdata.2016.18
   Wonsil J., 2022, RAAS EVALUATION DATA
   Wonsil J., 2022, RAAS CODE REPOSITORY
   Zhao ZM, 2022, SOFTWARE PRACT EXPER, V52, P1947, DOI 10.1002/spe.3098
NR 57
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2023
VL 53
IS 7
BP 1543
EP 1571
DI 10.1002/spe.3202
EA MAR 2023
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H9FS7
UT WOS:000951072100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Polyzoidou, E
   Papagiannaki, E
   Nikolaidis, N
   Ampatzoglou, A
   Mittas, N
   Arvanitou, EM
   Chatzigeorgiou, A
   Manolis, G
   Manganopoulou, E
AF Polyzoidou, Eleni
   Papagiannaki, Evangelia
   Nikolaidis, Nikolaos
   Ampatzoglou, Apostolos
   Mittas, Nikolaos
   Arvanitou, Elvira Maria
   Chatzigeorgiou, Alexander
   Manolis, George
   Manganopoulou, Evdoxia
TI SmartCLIDE design pattern assistant: A decision-tree based approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design patterns; empirical study; qualitative study
ID OF-THE-ART
AB Design patterns are well-known solutions to recurring design problems that are widely adopted in the software industry, either as formal means of communication or as a way to improve structural quality, enabling proper software extension. However, the adoption and correct instantiation of patterns is not a trivial task and requires substantial design experience. Some patterns are conceptually close or present similar design alternatives, leading novice developers to improper pattern selection, thereby reducing maintainability. Additionally, the mis-instantiation of a GoF (Gang-of-Four) design pattern, leads to phenomena such as pattern grime or architecture decay. To alleviate this problem, in this work we propose an approach that can help software engineers to more easily and safely select the proper design pattern, for a given design problem. The approach relies on decision trees, which are constructed using domain knowledge, while options are conveyed to software engineers through an Eclipse Theia plugin. To assess the usefulness and the perceived benefits of the approach, as well as the usability of the tool support, we have conducted an industrial validation study, using various data collection methods, such as questionnaires, focus groups, and task analysis. The results of the study suggest that the proposed approach is promising, since it increases the probability of the proper pattern being selected, and various useful future work suggestions have been obtained by the practitioners.
C1 [Polyzoidou, Eleni; Papagiannaki, Evangelia; Nikolaidis, Nikolaos; Ampatzoglou, Apostolos; Arvanitou, Elvira Maria; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Nikolaidis, Nikolaos] Int Hellen Univ, Dept Chem, Kavala, Greece.
   [Manolis, George; Manganopoulou, Evdoxia] SMPC, Onelity, Thessaloniki, Greece.
C3 University of Macedonia
RP Ampatzoglou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM a.ampatzoglou@uom.edu.gr
RI Chatzigeorgiou, Alexandros/AAL-6077-2021
FU European Union's H2020 Research and Innovation Programme [871177]; H2020
   - Industrial Leadership [871177] Funding Source: H2020 - Industrial
   Leadership
FX ACKNOWLEDGEMENTS This work has received funding from the European
   Union's H2020 Research and Innovation Programme, under grant agreement:
   871177 (SmartCLIDE).
CR Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Ampatzoglou A, 2013, J SYST SOFTWARE, V86, P1945, DOI 10.1016/j.jss.2013.03.063
   Ampatzoglou Apostolos., 2013, Proceedings of the 17th Panhellenic Conference on Informatics, PCI, P122
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   Bishop J., 2008, Proceedings of the 2nd international workshop on the role of abstraction in software engineering, P1
   Briand LC, 2006, PROC IEEE INT CONF S, P234
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Charalampidou S, 2018, EUROMICRO CONF PROC, P421, DOI 10.1109/SEAA.2018.00075
   Dumas J.S., 2006, Rev Hum Factors Ergon, V2, P109, DOI [10.1177/1557234x0600200105, DOI 10.1177/1557234X0600200105]
   Eide MelCinn., 2001, IWPSE 01 P 4 INT WOR, P162
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Falessi D., 2007, Software Architecture, P5
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Feitosa D, 2017, LECT NOTES COMPUT SC, V10611, P165, DOI 10.1007/978-3-319-69926-4_13
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Golfarelli M., 2006, P 9 ACM INT WORKSH D, DOI DOI 10.1145/1183512.1183523
   Gupta S., 2015, International Journal of Computer Trends and Technology, V22, P103
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hsueh NL., 2010, P 34 ANN COMPUTER SO, P462
   Ionita MT., 2005, P 38 ANN HAWAII INT, p312b
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Keepence B, 1999, IEEE SOFTWARE, V16, P102, DOI 10.1109/52.776957
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   MacDonald S, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P23, DOI 10.1109/ASE.2002.1114991
   MacDonald S, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1498926.1498927
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Mayvan BB, 2017, J SYST SOFTWARE, V125, P93, DOI 10.1016/j.jss.2016.11.030
   Meyer M, 2006, WORK CONF REVERSE EN, P305
   Naghdipour A., 2021, P 2021 26 INT COMPUT, P1
   Naghdipour A., 2021, P 2021 26 INT COMPUT, P1
   Palma F., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P1, DOI 10.1109/RSSE.2012.6233399
   Pavlic L, 2014, COMPUT SCI INF SYST, V11, P645, DOI 10.2298/CSIS130824025P
   Paz F, 2014, 2014 7TH INTERNATIONAL CONFERENCE ON ADVANCED SOFTWARE ENGINEERING AND ITS APPLICATIONS (ASEA), P11, DOI 10.1109/ASEA.2014.10
   Rahmati R, 2019, 2019 9TH INTERNATIONAL CONFERENCE ON COMPUTER AND KNOWLEDGE ENGINEERING (ICCKE 2019), P345, DOI [10.1109/ICCKE48569.2019.8965221, 10.1109/iccke48569.2019.8965221]
   Riihiaho S., 2018, USABILITY TESTING
   Robson C., 2002, Real World Research, V2nd
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sahly E. M., 2012, P 2012 INT C COMPUTE, P1
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shahin M, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P293, DOI 10.1109/WICSA.2009.5290823
   Shalloway Alan., 2004, Design Patterns Explained: A New Perspective on Object-Oriented Design
   Spencer D., 2009, CARD SORTING DESIGNI
   Tonella P, 2001, J SOFTW MAINT EVOL-R, V13, P309, DOI 10.1002/smr.235
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   van Vliet H, 2016, J SYST SOFTWARE, V117, P638, DOI 10.1016/j.jss.2016.01.017
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Yau SS, 2000, P INT COMP SOFTW APP, V24, P369, DOI 10.1109/CMPSAC.2000.884750
NR 50
TC 1
Z9 1
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2023
VL 53
IS 6
BP 1304
EP 1331
DI 10.1002/spe.3189
EA FEB 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E8MO0
UT WOS:000929962500001
DA 2024-07-18
ER

PT J
AU Dou, WC
   Liu, BW
   Duan, JR
   Dai, F
   Qi, LY
   Xu, XL
AF Dou, Wanchun
   Liu, Bowen
   Duan, Jirun
   Dai, Fei
   Qi, Lianyong
   Xu, Xiaolong
TI SeeMe: An intelligent edge server selection method for location-aware
   business task computing over IIoT
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE communication cost; IIoT; server selection; task computing; transferring
   cost
ID SERVICE MIGRATION; MOBILE
AB In the past few years, latency-sensitive task computing over the industrial internet of things (IIoT) has played a key role in an increasing number of intelligent applications, such as intelligent self-driving vehicles and unmanned aircraft systems. The edge computing paradigm provides a basic functional infrastructure for across-domain business task computing on distributed edge servers. With this observation, a trade-off between the mobile devices and the fixed edge servers is needed to run moving task computing in a low-latency way. Given this challenge, an intelligent server selection method, named SeeMe, is proposed in this paper. Technically speaking, this method aims at minimizing the communication capacity and the transferring capacity in a multiobjective optimization way to find a low-latency edge server. The experiments and comparison analysis verify the availability of our method.
C1 [Dou, Wanchun; Liu, Bowen; Duan, Jirun] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Dou, Wanchun; Dai, Fei; Qi, Lianyong; Xu, Xiaolong] Southwest Forestry Univ, Coll Big Data & Intelligent Engn, Kunming, Peoples R China.
   [Qi, Lianyong] Qufu Normal Univ, Sch Comp Sci, Qufu, Peoples R China.
   [Xu, Xiaolong] Nanjing Univ Informat Sci & Technol, Sch Comp & Software, Nanjing, Peoples R China.
   [Dou, Wanchun] Nanjing Univ, State Key Lab Novel Software Technol, Xianlin Rd 163, Nanjing, Peoples R China.
C3 Nanjing University; Southwest Forestry University - China; Qufu Normal
   University; Nanjing University of Information Science & Technology;
   Nanjing University
RP Dou, WC (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Xianlin Rd 163, Nanjing, Peoples R China.
EM douwc@nju.edu.cn
RI Qi, Lianyong/AAO-2681-2020; Xu, Xiaolong/U-2547-2019
OI Xu, Xiaolong/0000-0003-4879-9803; dai, fei/0000-0001-6469-357X; Liu,
   Bowen/0000-0001-5949-9756
FU National Key Research and Development Program of China [2020YFB1707601];
   Dou Wanchun Expert Workstation of Yunnan Province; Wanchun Expert
   Workstation of Yunnan Province [202105AF150013]
FX National Key Research and Development Program of China, Grant/Award
   Number: 2020YFB1707601; Wanchun Expert Workstation of Yunnan Province,
   Grant/Award Number: 202105AF150013
CR Barbalace Antonio, 2020, VEE '20: Proceedings of the 16th SIGPLAN/SIGOPS International Conference on Virtual Execution Environments, P73, DOI 10.1145/3381052.3381321
   Bhooanusas N, 2021, ASIA-PAC NETW OPER M, P17, DOI 10.23919/APNOMS52696.2021.9562604
   Chang H, 2014, IEEE GLOB COMM CONF, P2276, DOI 10.1109/GLOCOM.2014.7037147
   Chen Z, 2020, WORLD WIDE WEB, V23, P1715, DOI 10.1007/s11280-020-00787-x
   Ding Y, 2019, IEEE INT SYMP PARAL, P176, DOI 10.1109/ISPA-BDCloud-SustainCom-SocialCom48970.2019.00035
   Ho TJH, 2021, PUBLIC HEALTH NUTR, V24, P3087, DOI 10.1017/S1368980021001117
   Juan Fang, 2020, ICCAI '20: Proceedings of the 2020 6th International Conference on Computing and Artificial Intelligence, P140, DOI 10.1145/3404555.3404586
   Ksentini A, 2014, IEEE ICC, P1350, DOI 10.1109/ICC.2014.6883509
   Liu JH, 2021, IEEE INTERNET THINGS, V8, P7546, DOI 10.1109/JIOT.2020.3038554
   Meiren T, 2021, LECT NOTE NETW SYST, V266, P400, DOI 10.1007/978-3-030-80840-2_46
   Qiu YQ, 2019, COMPUT NETW, V164, DOI 10.1016/j.comnet.2019.106900
   Rodrigues N, 2017, IEEE INT CON INF VIS, P1, DOI 10.1109/iV.2017.62
   Saurez E., 2016, P 10 ACM INT C DISTR, P258, DOI [DOI 10.1145/2933267.2933317, 10.1145/2933267, DOI 10.1145/2933267]
   Shen SG, 2018, IEEE INTERNET THINGS, V5, P1043, DOI 10.1109/JIOT.2018.2795549
   Shen YZ, 2022, J INF SECUR APPL, V66, DOI 10.1016/j.jisa.2022.103140
   Shi T, 2020, INT CON DISTR COMP S, P1134, DOI 10.1109/ICDCS47774.2020.00070
   Tang ZQ, 2019, IEEE T SERV COMPUT, V12, P712, DOI 10.1109/TSC.2018.2827070
   Tu H., 2020, P INT C WIRELESS ALG, P432
   Wang F, 2022, WORLD WIDE WEB, V25, P1809, DOI 10.1007/s11280-021-00943-x
   Wang SQ, 2019, IEEE ACM T NETWORK, V27, P1272, DOI 10.1109/TNET.2019.2916577
   Wang SQ, 2014, IEEE MILIT COMMUN C, P835, DOI 10.1109/MILCOM.2014.145
   Wang T, 2020, IEEE INTERNET THINGS, V7, P2679, DOI 10.1109/JIOT.2019.2951687
   Wang XF, 2022, TSINGHUA SCI TECHNOL, V27, P325, DOI 10.26599/TST.2021.9010030
   Wendell P, 2010, ACM SIGCOMM COMP COM, V40, P231, DOI 10.1145/1851275.1851211
   Wu ZD, 2021, WORLD WIDE WEB, V24, P25, DOI 10.1007/s11280-020-00830-x
   Xu MX, 2022, SOFTWARE PRACT EXPER, V52, P394, DOI 10.1002/spe.3014
   Xu XL, 2022, IEEE T FUZZY SYST, V30, P4593, DOI 10.1109/TFUZZ.2022.3158000
   Xu XL, 2021, ACM T SENSOR NETWORK, V17, DOI 10.1145/3447032
   Xu XL, 2021, ACM T MULTIM COMPUT, V17, DOI 10.1145/3401979
   Yan C, 2022, TSINGHUA SCI TECHNOL, V27, P315, DOI 10.26599/TST.2021.9010040
   Yang J, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376427
   Yuan L, 2022, IEEE T PARALL DISTR, V33, P1873, DOI 10.1109/TPDS.2021.3131680
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhang C, 2019, FUTURE GENER COMP SY, V96, P111, DOI 10.1016/j.future.2019.01.059
   Zhang F, 2019, SOFTWARE PRACT EXPER, V49, P673, DOI 10.1002/spe.2642
   Zhao H, 2022, TSINGHUA SCI TECHNOL, V27, P455, DOI 10.26599/TST.2021.9010043
NR 36
TC 0
Z9 0
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2022 DEC 11
PY 2022
DI 10.1002/spe.3179
EA DEC 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6Y4EA
UT WOS:000897048800001
DA 2024-07-18
ER

PT J
AU Baxter, AL
   BenZvi, SY
   Bonivento, W
   Brazier, A
   Clark, M
   Coleiro, A
   Collom, D
   Colomer-Molla, M
   Cousins, B
   Orellana, AD
   Dornic, D
   Ekimtcov, V
   ElSayed, S
   Rosso, AG
   Godwin, P
   Griswold, S
   Habig, A
   Hill, R
   Horiuchi, S
   Howell, DA
   Johnson, MWG
   Kneller, JP
   Kopec, A
   Kopper, C
   Kulikovskiy, V
   Lamoureux, M
   Lang, RF
   Li, SC
   Lincetto, M
   Lindstrom, L
   Linvill, MW
   McCully, C
   Migenda, J
   Milisavljevic, D
   Nelson, S
   Novoseltseva, R
   O'Sullivan, E
   Petravick, D
   Pointon, BW
   Raj, N
   Renshaw, A
   Rumleskie, J
   Sonley, T
   Tapia, R
   Tseng, JCL
   Tunnell, CD
   Vannoye, G
   Vigorito, CF
   Virtue, CJ
   Weaver, C
   Weil, KE
   Winslow, L
   Wolski, R
   Xu, XJ
   Xu, YY
AF Baxter, Amanda L.
   BenZvi, Segev Y.
   Bonivento, Walter
   Brazier, Adam
   Clark, Michael
   Coleiro, Alexis
   Collom, David
   Colomer-Molla, Marta
   Cousins, Bryce
   Orellana, Aliwen Delgado
   Dornic, Damien
   Ekimtcov, Vladislav
   ElSayed, Shereen
   Rosso, Andrea Gallo
   Godwin, Patrick
   Griswold, Spencer
   Habig, Alec
   Hill, Remington
   Horiuchi, Shunsaku
   Howell, D. Andrew
   Johnson, Margaret W. G.
   Kneller, James P.
   Kopec, Abigail
   Kopper, Claudio
   Kulikovskiy, Vladimir
   Lamoureux, Mathieu
   Lang, Rafael F.
   Li, Shengchao
   Lincetto, Massimiliano
   Lindstrom, Lindy
   Linvill, Mark W.
   McCully, Curtis
   Migenda, Jost
   Milisavljevic, Danny
   Nelson, Spencer
   Novoseltseva, Rita
   O'Sullivan, Erin
   Petravick, Donald
   Pointon, Barry W.
   Raj, Nirmal
   Renshaw, Andrew
   Rumleskie, Janet
   Sonley, Tom
   Tapia, Ron
   Tseng, Jeffrey C. L.
   Tunnell, Christopher D.
   Vannoye, Godefroy
   Vigorito, Carlo F.
   Virtue, Clarence J.
   Weaver, Christopher
   Weil, Kathryn E.
   Winslow, Lindley
   Wolski, Rich
   Xu, Xun-Jie
   Xu, Yiyang
CA SCiMMA Collaboration
   SNEWS Collaboration
TI Collaborative experience between scientific software projects using
   Agile Scrum development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Agile; cyberinfrastructure; multimessenger astrophysics; scientific
   computing; software development
ID SCIENCE
AB Developing sustainable software for the scientific community requires expertise in software engineering and domain science. This can be challenging due to the unique needs of scientific software, the insufficient resources for software engineering practices in the scientific community, and the complexity of developing for evolving scientific contexts. While open-source software can partially address these concerns, it can introduce complicating dependencies and delay development. These issues can be reduced if scientists and software developers collaborate. We present a case study wherein scientists from the SuperNova Early Warning System collaborated with software developers from the Scalable Cyberinfrastructure for Multi-Messenger Astrophysics project. The collaboration addressed the difficulties of open-source software development, but presented additional risks to each team. For the scientists, there was a concern of relying on external systems and lacking control in the development process. For the developers, there was a risk in supporting a user-group while maintaining core development. These issues were mitigated by creating a second Agile Scrum framework in parallel with the developers' ongoing Agile Scrum process. This Agile collaboration promoted communication, ensured that the scientists had an active role in development, and allowed the developers to evaluate and implement the scientists' software requirements. The collaboration provided benefits for each group: the scientists actuated their development by using an existing platform, and the developers utilized the scientists' use-case to improve their systems. This case study suggests that scientists and software developers can avoid scientific computing issues by collaborating and that Agile Scrum methods can address emergent concerns.
C1 [Baxter, Amanda L.; Clark, Michael; Kopec, Abigail; Lang, Rafael F.; Li, Shengchao; Linvill, Mark W.; Milisavljevic, Danny; Weil, Kathryn E.] Purdue Univ, Dept Phys & Astron, W Lafayette, IN 47907 USA.
   [BenZvi, Segev Y.; Griswold, Spencer] Univ Rochester, Dept Phys & Astron, Rochester, NY USA.
   [Bonivento, Walter] Complesso Univ Monserrato, Ist Nazl Fis Nucl, Sez Cagliari, Ist Nazl, Cagliari, Italy.
   [Brazier, Adam] Cornell Univ, Ctr Adv Comp, Ithaca, NY USA.
   [Coleiro, Alexis; Colomer-Molla, Marta] Univ Paris, AstroParticule & Cosmol, CNRS, Paris, France.
   [Collom, David; Howell, D. Andrew; Lindstrom, Lindy; McCully, Curtis] Cumbres Observ, Goleta, CA USA.
   [Colomer-Molla, Marta] Univ Valencia, CSIC, Inst Fis Corpuscular, Valencia, Spain.
   [Cousins, Bryce; Tapia, Ron] Penn State Univ, Inst Computat & Data Sci, University Pk, PA 16802 USA.
   [Cousins, Bryce; Godwin, Patrick; Tapia, Ron] Penn State Univ, Dept Phys, 104 Davey Lab, University Pk, PA 16802 USA.
   [Orellana, Aliwen Delgado] Pontificia Univ Catolica Chile, Inst Fis, Santiago, Region Metropol, Chile.
   [Dornic, Damien; Lincetto, Massimiliano; Vannoye, Godefroy] Aix Marseille Univ, CPPM, CNRS IN2P3, Marseille, France.
   [Ekimtcov, Vladislav; Johnson, Margaret W. G.; Petravick, Donald] Univ Illinois, Natl Ctr Supercomp Applicat, Urbana, IL USA.
   [ElSayed, Shereen; Howell, D. Andrew; Wolski, Rich] Univ Calif Santa Barbara, Dept Comp Sci, Santa Barbara, CA 93106 USA.
   [Rosso, Andrea Gallo; Hill, Remington; Rumleskie, Janet; Virtue, Clarence J.] Laurentian Univ, Dept Phys, Sudbury, ON, Canada.
   [Godwin, Patrick] Penn State Univ, Inst Gravitat & Cosmos, University Pk, PA 16802 USA.
   [Habig, Alec] Univ Minnesota, Dept Phys & Astron, Duluth, MN 55812 USA.
   [Horiuchi, Shunsaku] Virginia Tech, Dept Phys, Ctr Neutrino Phys, Blacksburg, VA USA.
   [Nelson, Spencer] Univ Washington, DiRAC Inst, Seattle, WA 98195 USA.
   [Nelson, Spencer] Univ Washington, Dept Astron, Seattle, WA 98195 USA.
   [Kneller, James P.] NC State Univ, Dept Phys, Raleigh, NC USA.
   [Kopec, Abigail] Univ Calif San Diego, Dept Phys, La Jolla, CA 92093 USA.
   [Kopper, Claudio] Michigan State Univ, Dept Phys & Astron, E Lansing, MI 48824 USA.
   [Kulikovskiy, Vladimir] Ist Nazl Fis Nucl, Sez Genova, Genoa, Italy.
   [Lamoureux, Mathieu] Ist Nazl Fis Nucl, Sez Padova, Dipartimento Fis, Padua, Italy.
   [Lamoureux, Mathieu] Univ Padua, Padua, Italy.
   [Migenda, Jost] Kings Coll London, Dept Phys, London, England.
   [Novoseltseva, Rita] Russian Acad Sci, Inst Nucl Res, Baksan Neutrino Observ, Neytrino, Kabardino Balka, Russia.
   [O'Sullivan, Erin] Uppsala Univ, Dept Phys & Astron, Uppsala, Sweden.
   [Pointon, Barry W.] British Columbia Inst Technol, Dept Phys, Burnaby, BC, Canada.
   [Pointon, Barry W.; Raj, Nirmal] TRIUMF, Vancouver, BC, Canada.
   [Renshaw, Andrew] Univ Houston, Dept Phys, Houston, TX USA.
   [Sonley, Tom] SNOLAB, Sudbury, ON, Canada.
   [Tseng, Jeffrey C. L.] Univ Oxford, Dept Phys, Oxford, England.
   [Tunnell, Christopher D.; Xu, Yiyang] Rice Univ, Dept Comp Sci, Houston, TX USA.
   [Tunnell, Christopher D.] Rice Univ, Dept Phys & Astron, Houston, TX USA.
   [Vigorito, Carlo F.] Univ Torino, Dept Phys, Turin, Italy.
   [Vigorito, Carlo F.] Ist Nazl Fis Nucl, Turin, Italy.
   [Weaver, Christopher] Michigan State Univ, Inst Cyber Enabled Res, E Lansing, MI 48824 USA.
   [Winslow, Lindley] MIT, Dept Phys, Cambridge, MA 02139 USA.
   [Xu, Xun-Jie] Univ Libre Bruxelles, Serv Phys Theor, Brussels, Belgium.
C3 Purdue University System; Purdue University; University of Rochester;
   Istituto Nazionale di Fisica Nucleare (INFN); Cornell University;
   Universite PSL; Observatoire de Paris; CEA; Centre National de la
   Recherche Scientifique (CNRS); Universite Paris Cite; University of
   Valencia; Consejo Superior de Investigaciones Cientificas (CSIC); CSIC -
   Instituto de Fisica Corpuscular (IFIC); Pennsylvania Commonwealth System
   of Higher Education (PCSHE); Pennsylvania State University; Pennsylvania
   State University - University Park; Pennsylvania Commonwealth System of
   Higher Education (PCSHE); Pennsylvania State University; Pennsylvania
   State University - University Park; Pontificia Universidad Catolica de
   Chile; Aix-Marseille Universite; Centre National de la Recherche
   Scientifique (CNRS); CNRS - National Institute of Nuclear and Particle
   Physics (IN2P3); University of Illinois System; University of Illinois
   Urbana-Champaign; University of California System; University of
   California Santa Barbara; Laurentian University; Pennsylvania
   Commonwealth System of Higher Education (PCSHE); Pennsylvania State
   University; Pennsylvania State University - University Park; University
   of Minnesota System; University of Minnesota Duluth; Virginia
   Polytechnic Institute & State University; University of Washington;
   University of Washington Seattle; University of Washington; University
   of Washington Seattle; North Carolina State University; University of
   California System; University of California San Diego; Michigan State
   University; Istituto Nazionale di Fisica Nucleare (INFN); Istituto
   Nazionale di Fisica Nucleare (INFN); University of Padua; University of
   London; King's College London; Russian Academy of Sciences; Institute
   for Nuclear Research of the Russian Academy of Sciences; Uppsala
   University; British Columbia Institute of Technology; University of
   British Columbia; University of Houston System; University of Houston;
   University of Oxford; Rice University; Rice University; University of
   Turin; Istituto Nazionale di Fisica Nucleare (INFN); Michigan State
   University; Massachusetts Institute of Technology (MIT); Universite
   Libre de Bruxelles
RP Baxter, AL (corresponding author), Purdue Univ, Dept Phys & Astron, W Lafayette, IN 47907 USA.; Cousins, B (corresponding author), Penn State Univ, Inst Computat & Data Sci, University Pk, PA 16802 USA.; Cousins, B (corresponding author), Penn State Univ, Dept Phys, 104 Davey Lab, University Pk, PA 16802 USA.
EM adepoian@purdue.edu; bfc5288@psu.edu
RI Bonivento, Walter Marcello/IAQ-7237-2023; Howell, Andy/ABE-6446-2020
OI Bonivento, Walter Marcello/0000-0001-6764-6787; Cousins,
   Bryce/0000-0002-7026-1340; Winslow, Lindley/0000-0002-9970-108X;
   Lamoureux, Mathieu/0000-0002-8860-5826; Depoian,
   Amanda/0000-0003-0048-6402; Habig, Alec/0000-0002-1018-9383; Kneller,
   James/0000-0002-3502-3830; Gallo Rosso, Andrea/0000-0002-4664-5504;
   BenZvi, Segev/0000-0001-5537-4710; Migenda, Jost/0000-0002-5350-8049;
   Colomer Molla, Marta/0000-0003-1801-8121; Kopec,
   Abigail/0000-0001-6548-0963
FU Division of Physics [1914409, 1914410, 1914416, 1914418, 1914426,
   1914447, 1914448]; Office of Cyberinfrastructure [1934752, 1940209];
   STFC [ST/M002977/1, Hyper-K, ST/V002872/1, ST/W004917/1] Funding Source:
   UKRI; Direct For Mathematical & Physical Scien [1914447] Funding Source:
   National Science Foundation; Division Of Physics [1914447] Funding
   Source: National Science Foundation; Division Of Physics; Direct For
   Mathematical & Physical Scien [1914426, 1914410, 1914448, 1914418,
   1914416] Funding Source: National Science Foundation; Division Of
   Physics; Direct For Mathematical & Physical Scien [1914409] Funding
   Source: National Science Foundation
FX Division of Physics, Grant/Award Numbers: 1914409, 1914410, 1914416,
   1914418, 1914426, 1914447, 1914448; Office of Cyberinfrastructure,
   Grant/Award Numbers: 1934752, 1940209
CR Aartsen MG, 2017, ASTROPART PHYS, V92, P30, DOI 10.1016/j.astropartphys.2017.05.002
   Aartsen MG, 2017, J INSTRUM, V12, DOI 10.1088/1748-0221/12/03/P03012
   Aasi J, 2015, CLASSICAL QUANT GRAV, V32, DOI 10.1088/0264-9381/32/7/074001
   Abbott BP, 2017, ASTROPHYS J LETT, V848, DOI 10.3847/2041-8213/aa91c9
   Adenowo AdetokunboA.A., 2013, International Journal of Scientific and Engineering Research, V4, P427
   Ageron M, 2012, ASTROPART PHYS, V35, P530, DOI 10.1016/j.astropartphys.2011.11.011
   Al Kharusi S, 2021, NEW J PHYS, V23, DOI 10.1088/1367-2630/abde33
   Allen G., 2018, MULTI MESSENGER ASTR
   [Anonymous], 2021, Zoom Video Communications Inc
   [Anonymous], 2021, US RSE US RES SOFTWA
   Antonioli P, 2004, NEW J PHYS, V6, DOI 10.1088/1367-2630/6/1/114
   Arm Limited, 2020, Arm Architecture Reference Manual: Armv8
   Arzoumanian Z, 2020, ASTROPHYS J LETT, V905, DOI 10.3847/2041-8213/abd401
   Barthelmy SD, 2000, AIP CONF PROC, V526, P731
   Beck K., 2011, MANIFESTO AGILE SOFT
   BENNETT K, 1995, IEEE SOFTWARE, V12, P19, DOI 10.1109/52.363157
   Bertin E., 2006, ASP C SER, V351, P112
   Brenner R, 2015, IEEE ICST WORKSHOP
   Brooks F, 1996, COMMUN ACM, V39, P61, DOI 10.1145/227234.227243
   Chang P., 2019, BAAS, V51, P436
   Collaboration T.C., 2020, Review Manager (RevMan)
   Confluent Inc, 2021, CONFL PYTH CLIENT AP
   Cousins B., 2020, SNEWS 2 0 PROTOTYPIN
   Crabtree CA, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P22, DOI 10.1109/SECSE.2009.5069158
   Easterbrook SM, 2009, COMPUT SCI ENG, V11, P64
   GitHub, 2021, PROJ BOARDS
   Goble C, 2014, IEEE INTERNET COMPUT, V18, P4, DOI 10.1109/MIC.2014.88
   Godwin P., 2020, SCIMMA HOP CLIENT V0, DOI [10.5281/zenodo.4033483, DOI 10.5281/ZENODO.4033483]
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Graham MJ, 2019, PUBL ASTRON SOC PAC, V131, DOI 10.1088/1538-3873/ab006c
   Hannay JE, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P1, DOI 10.1109/SECSE.2009.5069155
   Heroux MA, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P15, DOI 10.1109/SECSE.2009.5069157
   Huerta EA, 2019, NAT REV PHYS, V1, P600, DOI 10.1038/s42254-019-0097-4
   International astronomical union R, 2015, TRANS NAM SERV
   K. I. for Space Studies, 2020, VIRTUAL WORKSHOP NEB
   Kane DW, 2006, BMC BIOINFORMATICS, V7, DOI 10.1186/1471-2105-7-273
   Kelly DF, 2007, IEEE SOFTWARE, V24, P120, DOI 10.1109/MS.2007.155
   Lane PCR, 2012, J EXP THEOR ARTIF IN, V24, P421, DOI 10.1080/0952813X.2012.695443
   Merali Z, 2010, NATURE, V467, P775, DOI 10.1038/467775a
   Nakamura K, 2016, MON NOT R ASTRON SOC, V461, P3296, DOI 10.1093/mnras/stw1453
   National Science Foundation, 2020, HARN DAT REV NSF
   Rutledge RE, 1998, PUBL ASTRON SOC PAC, V110, P754, DOI 10.1086/316184
   Schuh G, 2017, IN C IND ENG ENG MAN, P725, DOI 10.1109/IEEM.2017.8289986
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   SCiMMA Collaboration, 2020, SCIMMA GOOGL GROUPS
   SCiMMA Collaboration, 2020, SCIMMA HOP APP TEMPL
   SCiMMA Collaboration, 2020, SCIMMA INFR REP
   SCiMMA Collaboration, 2021, HOPSKOTCH
   Segal J, 2005, EMPIR SOFTW ENG, V10, P517, DOI 10.1007/s10664-005-3865-y
   Segal J., 2008, SECSE 08 1 INT WORKS
   Segal J., 2012, HDB RES COMPUTATIONA, P177
   Slack J.M. W., 1991, EGG EMBRYO, V2nd, DOI 10.1017/CBO9780511525322
   Sletholt Magnus T., 2011, P 4 INT WORKSH SOFTW, P1
   Smith MWE, 2013, ASTROPART PHYS, V45, P56, DOI 10.1016/j.astropartphys.2013.03.003
   Storer T, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3084225
   Sutherland J, 2005, AGILE 2005, PROCEEDINGS, P90, DOI 10.1109/ADC.2005.28
   Umarji M, 2009, CONF SOFTW ENG EDUC, P216, DOI 10.1109/CSEET.2009.44
   Wilson G, 2014, PLOS BIOL, V12, DOI 10.1371/journal.pbio.1001745
   Yoon M, 2019, ASTROPHYS J, V870, DOI 10.3847/1538-4357/aaf3a9
NR 59
TC 2
Z9 3
U1 14
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2077
EP 2096
DI 10.1002/spe.3120
EA JUL 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000830363800001
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Ahmadi, J
   Haghighat, AT
   Rahmani, AM
   Ravanmehr, R
AF Ahmadi, Javad
   Haghighat, Abolfazl Toroghi
   Rahmani, Amir Masoud
   Ravanmehr, Reza
TI A flexible approach for virtual machine selection in cloud data centers
   with AHP
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE analytic hierarchy process; cloud computing; dynamic consolidation;
   green cloud; MADA; virtualization
ID EFFICIENT RESOURCE-MANAGEMENT; DYNAMIC CONSOLIDATION; ENERGY EFFICIENCY;
   HEURISTICS; PLACEMENT; PERFORMANCE; ALGORITHM; MIGRATION
AB Increasing resource efficiency and reducing the energy consumption of cloud data centers is critical, especially during the global CORONA virus pandemic. Virtual machines' consolidation using live migration maximizes the hosts' and the reduction of energy consumption. An increase in the host's virtual machines in the consolidation process and the dynamic workload of the virtual machines may cause the overloading in the hosts. One approach to overcome this problem is reducing the hosts' virtual machines. One crucial issue to improve the quality of the consolidation process's quality is determining the best virtual machine for the migration process. Although the selection process has lower computational complexity than other challenges (like placement and overload prediction) in the consolidation process, this issue has received less attention. This article aims to present an efficient algorithm for the selection process. We first considered five main criteria for the selection process: migration time, migration risk, virtual machine connectivity, releasable resources, and penalty for SLA violation. Then, we propose an algorithm based on analytic hierarchy process multi-criteria decision-making technique. Next, to determine the weight of the proposed criteria, we simulate thousands of virtual machines of the PlanetLab workloads. These weights are tunable based on the data center preferences. The results of the suggested approach results show 23% reduction in the hosts' energy consumption, 49% reduction in the number of migrations, and 18% reduction in the SLA violation compared with other techniques. So, using the proposed method may significantly reduce the overall cost of the data centers.
C1 [Ahmadi, Javad; Ravanmehr, Reza] Islamic Azad Univ, Dept Comp Engn, Cent Tehran Branch, Tehran, Iran.
   [Haghighat, Abolfazl Toroghi] Islamic Azad Univ, Fac Comp & Informat Technol Engn, Qazvin Branch, Qazvin, Iran.
   [Rahmani, Amir Masoud] Natl Yunlin Univ Sci & Technol, Future Technol Res Ctr, Touliu, Taiwan.
C3 Islamic Azad University; Islamic Azad University; National Yunlin
   University Science & Technology
RP Haghighat, AT (corresponding author), Islamic Azad Univ, Fac Comp & Informat Technol Engn, Qazvin Branch, Qazvin, Iran.
EM haghighat@qiau.ac.ir
RI ahmadi, javad/IWU-7098-2023; Rahmani, Amir Masoud/K-2702-2013;
   Ravanmehr, Reza/S-4106-2019
OI Rahmani, Amir Masoud/0000-0001-8641-6119; Ravanmehr,
   Reza/0000-0001-9605-5839
CR Abadi RMB, 2018, SOFTWARE PRACT EXPER, V48, P1688, DOI 10.1002/spe.2582
   Ajila SA, 2013, P INT COMP SOFTW APP, P134, DOI 10.1109/COMPSAC.2013.21
   Akhter N., 2018, ARXIV PREPRINT ARXIV
   [Anonymous], 2021, P 2009 C USENIX ANN, DOI 10.5555/1855807.1855835
   Arianyan E, 2016, 2016 8TH INTERNATIONAL SYMPOSIUM ON TELECOMMUNICATIONS (IST), P654, DOI 10.1109/ISTEL.2016.7881903
   Arianyan E, 2017, J NETW COMPUT APPL, V78, P43, DOI 10.1016/j.jnca.2016.09.016
   Arianyan E, 2016, J SUPERCOMPUT, V72, P688, DOI 10.1007/s11227-015-1603-9
   Arianyan E, 2015, COMPUT ELECTR ENG, V47, P222, DOI 10.1016/j.compeleceng.2015.05.006
   Avgerinou M, 2017, ENERGIES, V10, DOI 10.3390/en10101470
   Azizi S, 2020, CLUSTER COMPUT, V23, P3421, DOI 10.1007/s10586-020-03096-0
   Beloglazov A., 2010, International Workshop on Middleware for Grids, Clouds and e-Science, P1
   Beloglazov A, 2013, IEEE T PARALL DISTR, V24, P1366, DOI 10.1109/TPDS.2012.240
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Beloglazov A, 2011, ADV COMPUT, V82, P47, DOI 10.1016/B978-0-12-385512-1.00003-7
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Calheiros RN, 2015, IEEE T CLOUD COMPUT, V3, P449, DOI 10.1109/TCC.2014.2350475
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Cao GY, 2019, SUSTAIN COMPUT-INFOR, V21, P179, DOI 10.1016/j.suscom.2019.01.004
   Chen ZY, 2020, IEEE T PARALL DISTR, V31, P923, DOI 10.1109/TPDS.2019.2953745
   Dashti SE, 2016, J EXP THEOR ARTIF IN, V28, P97, DOI 10.1080/0952813X.2015.1020519
   Dayarathna M, 2016, IEEE COMMUN SURV TUT, V18, P732, DOI 10.1109/COMST.2015.2481183
   Erl T., 2013, Cloud Computing: Concepts, Technology, & Architecture
   Fan XB, 2007, CONF PROC INT SYMP C, P13, DOI 10.1145/1273440.1250665
   Farahnakian F, 2019, IEEE T CLOUD COMPUT, V7, P524, DOI 10.1109/TCC.2016.2617374
   Farahnakian F, 2015, IEEE T SERV COMPUT, V8, P187, DOI 10.1109/TSC.2014.2382555
   Ferdaus MH, 2014, LECT NOTES COMPUT SC, V8632, P306, DOI 10.1007/978-3-319-09873-9_26
   Garg SK, 2014, J NETW COMPUT APPL, V45, P108, DOI 10.1016/j.jnca.2014.07.030
   Gupta MK, 2018, J SUPERCOMPUT, V74, P122, DOI 10.1007/s11227-017-2112-9
   Hieu NT, 2020, IEEE T SERV COMPUT, V13, P186, DOI 10.1109/TSC.2017.2648791
   Horri A, 2014, J SUPERCOMPUT, V69, P1445, DOI 10.1007/s11227-014-1224-8
   Ilager S, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5221
   Ismaeel S, 2018, J CLOUD COMPUT-ADV S, V7, DOI 10.1186/s13677-018-0111-x
   Jaureguialzo E, 2011, 2011 IEEE 33RD INTERNATIONAL TELECOMMUNICATIONS ENERGY CONFERENCE (INTELEC)
   Kashyap R, 2014, 2014 INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED AND GRID COMPUTING (PDGC), P214, DOI 10.1109/PDGC.2014.7030744
   KyoungSoo Park, 2006, Operating Systems Review, V40, P65, DOI 10.1145/1113361.1113374
   Liu FG, 2020, IEEE ACCESS, V8, P53, DOI 10.1109/ACCESS.2019.2961786
   Liu XF, 2017, ENERGIES, V10, DOI 10.3390/en10050609
   Mandal R, 2020, J SUPERCOMPUT, V76, P7374, DOI 10.1007/s11227-020-03165-6
   Mekala MS, 2019, COMPUT ELECTR ENG, V73, P227, DOI 10.1016/j.compeleceng.2018.11.021
   Mell P, 2010, COMMUN ACM, V53, P50
   Nadeem HA, 2018, INT J ADV COMPUT SC, V9, P416
   Naeen HM, 2020, SOFTWARE PRACT EXPER, V50, P161, DOI 10.1002/spe.2764
   Najafizadegan N, 2021, SOFTWARE PRACT EXPER, V51, P1352, DOI 10.1002/spe.2960
   Paulraj GJL, 2018, COMPUT ELECTR ENG, V69, P287, DOI 10.1016/j.compeleceng.2018.01.012
   Ponraj A, 2019, FUTURE GENER COMP SY, V93, P338, DOI 10.1016/j.future.2018.10.022
   Rahmani S, 2020, J SUPERCOMPUT, V76, P362, DOI 10.1007/s11227-019-03037-8
   Rajabzadeh M, 2020, J SUPERCOMPUT, V76, P7438, DOI 10.1007/s11227-020-03169-2
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Salimian L, 2016, COMPUTING, V98, P641, DOI 10.1007/s00607-015-0474-5
   Sayadnavard MH, 2019, J SUPERCOMPUT, V75, P2126, DOI 10.1007/s11227-018-2709-7
   Shehabi S.H. N. A. I. B. R. K. J. M. E. S. A., 2016, United States Data Center Energy Usage Report
   Vahed ND, 2019, INT J COMMUN SYST, V32, DOI 10.1002/dac.4068
   Wajid U, 2016, IEEE T CLOUD COMPUT, V4, P138, DOI 10.1109/TCC.2015.2453988
   Wang SG, 2013, INT C PAR DISTRIB SY, P102, DOI 10.1109/ICPADS.2013.26
   Zhang F, 2018, IEEE COMMUN SURV TUT, V20, P1206, DOI 10.1109/COMST.2018.2794881
   Zhou Z, 2018, CONCURR COMP-PRACT E, V30, DOI 10.1002/cpe.4942
   Zolfaghari R, 2022, SOFTWARE PRACT EXPER, V52, P194, DOI 10.1002/spe.3010
NR 57
TC 7
Z9 7
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2022
VL 52
IS 5
BP 1216
EP 1241
DI 10.1002/spe.3062
EA DEC 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0G4IQ
UT WOS:000732710400001
DA 2024-07-18
ER

PT J
AU Grützmacher, T
   Anzt, H
   Quintana-Orti, ES
AF Gruetzmacher, Thomas
   Anzt, Hartwig
   Quintana-Orti, Enrique S.
TI Using Ginkgo's memory accessor for improving the accuracy of
   memory-bound low precision BLAS
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE accessor; floating-point formats; high performance; memory-bound
   algorithms; mixed precision; roofline model
ID LOSSY COMPRESSION; ROOFLINE; MODEL
AB The roofline model not only provides a powerful tool to relate an application's performance with the specific constraints imposed by the target hardware but also offers a graphic representation of the balance between memory access cost and compute throughput. In this work, we present a strategy to break up the tight coupling between the precision format used for arithmetic operations and the storage format employed for memory operations. (At a high level, this idea is equivalent to compressing/decompressing the data in registers before/after invoking store/load memory operations.) In practice, we demonstrate that a "memory accessor" that hides the data compression behind the memory access, can virtually push the bandwidth-induced roofline, yielding higher performance for memory-bound applications using high precision arithmetic that can handle the numerical effects associated with lossy compression. We also demonstrate that memory-bound applications operating on low precision data can increase the accuracy by relying on the memory accessor to perform all arithmetic operations in high precision. In particular, we demonstrate that memory-bound BLAS operations (including the sparse matrix-vector product) can be re-engineered with the memory accessor and that the resulting accessor-enabled BLAS routines achieve lower rounding errors while delivering the same performance as the fast low precision BLAS.
C1 [Gruetzmacher, Thomas; Anzt, Hartwig] Karlsruhe Inst Technol, Steinbuch Ctr Comp, Karlsruhe, Germany.
   [Anzt, Hartwig] Univ Tennessee, Innovat Comp Lab, Knoxville, TN USA.
   [Quintana-Orti, Enrique S.] Univ Politecn Valencia, Dept Informat Sistemas & Comp, Valencia, Spain.
C3 Helmholtz Association; Karlsruhe Institute of Technology; University of
   Tennessee System; University of Tennessee Knoxville; Universitat
   Politecnica de Valencia
RP Anzt, H (corresponding author), Karlsruhe Inst Technol, Steinbuch Ctr Comp, Karlsruhe, Germany.
EM hartwig.anzt@kit.edu
RI Quintana-Orti, Enrique S./ABE-9712-2020
OI Anzt, Hartwig/0000-0003-2177-952X; Grutzmacher,
   Thomas/0000-0001-9346-2981
FU US Exascale Computing Project [17-SC-20-SC]; Helmholtz-Gemeinschaf
   [VH-NG-1241]
FX Helmholtz-Gemeinschaft, Grant/Award Number: VH-NG-1241; US Exascale
   Computing Project, Grant/Award Number: 17-SC-20-SC
CR Abdelfatah A, 2016, ACTA NUMER, V25, P1, DOI 10.1017/S0962492916000015
   Agullo E., 2020, RR9342
   AMD, 2020, AMD CDNA ARCH
   Anzt H., 2020, GINKGO MODERN LINEAR
   Anzt H, 2020, ACM TRANS PARALLEL C, V7, DOI 10.1145/3380930
   Anzt H, 2019, INT J HIGH PERFORM C, V33, P1069, DOI 10.1177/1094342019846547
   Anzt Hartwig, 2020, J Open Source Softw, V5, P2260, DOI DOI 10.21105/JOSS.02260
   Bell N., 2008, Efficient sparse matrix-vector multiplication on CUDA
   Blackford LS, 2002, ACM T MATH SOFTWARE, V28, P135, DOI 10.1145/567806.567807
   Cabezas VC, 2014, I S WORKL CHAR PROC, P222, DOI 10.1109/IISWC.2014.6983061
   Calhoun J, 2019, INT J HIGH PERFORM C, V33, P397, DOI 10.1177/1094342018762036
   Cappello F., 2019, OPTIMIZING LOSSY COM
   Di S, 2016, INT PARALL DISTRIB P, P730, DOI 10.1109/IPDPS.2016.11
   Diamond J, 2011, INT SYM PERFORM ANAL, P32, DOI 10.1109/ISPASS.2011.5762713
   Dongarra J, 2011, INT J HIGH PERFORM C, V25, P3, DOI 10.1177/1094342010391989
   Golub G.H., 2013, Matrix Computations, DOI DOI 10.56021/9781421407944
   Grützmacher T, 2020, ACM TRANS PARALLEL C, V7, DOI 10.1145/3380934
   Higham Nicholas John, 2002, Accuracy and Stability of Numerical Algorithms, V2nd, DOI [10.1137/1.9780898718027, DOI 10.1137/1.9780898718027]
   Hogg JD, 2013, SIAM J SCI COMPUT, V35, pC303, DOI 10.1137/12088358X
   Ilic A, 2014, IEEE COMPUT ARCHIT L, V13, P21, DOI 10.1109/L-CA.2013.6
   International Technology, 2015, ROADM SEM 2 0
   Kurzak J, 2007, CONCURR COMP-PRACT E, V19, P1371, DOI 10.1002/cpe.1164
   Lindstrom P, 2006, IEEE T VIS COMPUT GR, V12, P1245, DOI 10.1109/TVCG.2006.143
   Lindstrom P, 2014, IEEE T VIS COMPUT GR, V20, P2674, DOI 10.1109/TVCG.2014.2346458
   Markidis S, 2018, IEEE SYM PARA DISTR, P522, DOI 10.1109/IPDPSW.2018.00091
   McCalpin JD., 1995, IEEE COMPUTER SOC TE, P19
   McKee Sally A., 2011, Memory Wall, P1110, DOI DOI 10.1007/978-0-387-09766-4_234
   Ofenbeck G, 2014, INT SYM PERFORM ANAL, P76, DOI 10.1109/ISPASS.2014.6844463
   SAAD Y, 1986, SIAM J SCI STAT COMP, V7, P856, DOI 10.1137/0907058
   Saad Yousef., 2003, Iterative Methods for Sparse Linear Systems
   Tao DW, 2017, INT PARALL DISTRIB P, P1129, DOI 10.1109/IPDPS.2017.115
   Venkataramanan R, 2014, IEEE T INFORM THEORY, V60, P3265, DOI 10.1109/TIT.2014.2314676
   Williams S., 2007, P 2007 ACM IEEE C SU, P1, DOI DOI 10.1145/1362622.1362674
   Williams S, 2009, COMMUN ACM, V52, P65, DOI 10.1145/1498765.1498785
   Wulf W. A., 1995, Computer Architecture News, V23, P20, DOI 10.1145/216585.216588
NR 35
TC 4
Z9 4
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2023
VL 53
IS 1
SI SI
BP 81
EP 98
DI 10.1002/spe.3041
EA OCT 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7B2CV
UT WOS:000707789800001
OA Green Published
DA 2024-07-18
ER

PT J
AU Frantz, RZ
   Corchuelo, R
   Basto-Fernandes, V
   Rosa-Sequeira, F
   Roos-Frantz, F
   Arjona, JL
AF Frantz, Rafael Z.
   Corchuelo, Rafael
   Basto-Fernandes, Vitor
   Rosa-Sequeira, Fernando
   Roos-Frantz, Fabricia
   L. Arjona, Jose
TI A cloud-based integration platform for enterprise application
   integration: A Model-Driven Engineering approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE domain&#8208; specific language; enterprise application integration;
   integration framework; integration patterns; integration platform as a
   service; integration systems modeling
ID DOMAIN-SPECIFIC LANGUAGES; SERVICES; SUPPORT; DESIGN
AB This article addresses major information systems integration problems, approaches, technologies, and tools within the context of Model-Driven Software Engineering. The Guarana integration platform is introduced as an innovative platform amongst state-of-the-art technologies available for enterprises to design and implement integration solutions. In this article, we present its domain-specific modeling language and its industrial cloud-based web development platform, which supports the design and implementation of integration solutions. A real-world case study is described and analyzed; then, we delve into its design and implementation, to finally disclose ten measures that empirically help estimating the amount of effort involved in the development of integration solutions.
C1 [Frantz, Rafael Z.; Roos-Frantz, Fabricia] Unijui Univ, Dept Exact Sci & Engn, Ijui, Brazil.
   [Corchuelo, Rafael] Univ Seville, ETSI Informat, Seville, Spain.
   [Basto-Fernandes, Vitor] Univ Inst Lisbon, Dept Informat Sci & Technol, Lisbon, Portugal.
   [Rosa-Sequeira, Fernando] Polytech Inst Leiria, Informat Engn Dept, Leiria, Portugal.
   [L. Arjona, Jose] i2Factory SL, Technol Sci Pk Huelva, Huelva, Spain.
C3 Universidade Regional do Noroeste do Estado do Rio Grande do Sul -
   UNIJUI; University of Sevilla; Instituto Universitario de Lisboa
RP Frantz, RZ (corresponding author), Unijui Univ, Dept Exact Sci & Engn, Ijui, Brazil.
EM rzfrantz@unijui.edu.br
RI Frantz, Rafael Z./J-9521-2012; Basto-Fernandes, Vitor/N-1891-2016;
   Roos-Frantz, Fabricia/Y-6059-2018; Corchuelo, Rafael/G-3149-2016
OI Frantz, Rafael Z./0000-0003-3740-7560; Basto-Fernandes,
   Vitor/0000-0003-4269-5114; Roos-Frantz, Fabricia/0000-0001-9514-6560;
   Corchuelo, Rafael/0000-0003-1563-6979
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior
   [88881.119518/2016-01]; CYTED Ciencia y Tecnologia para el Desarrollo
   [TIN2010-21744-C1, TIN2013-40848-R, TIN2016-75394-R]; Fundacao de Amparo
   a Pesquisa do Estado do Rio Grande do Sul [17/2551-0001206-2]; Fundacao
   para a Ciencia e a Tecnologia [UID/CEC/4524/2016]; Fundação para a
   Ciência e a Tecnologia [UID/CEC/4524/2016] Funding Source: FCT
FX Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior, Grant/Award
   Number: 88881.119518/2016-01; CYTED Ciencia y Tecnologia para el
   Desarrollo, Grant/Award Numbers: TIN2010-21744-C1, TIN2013-40848-R,
   TIN2016-75394-R; Fundacao de Amparo a Pesquisa do Estado do Rio Grande
   do Sul, Grant/Award Number: 17/2551-0001206-2; Fundacao para a Ciencia e
   a Tecnologia, Grant/Award Number: UID/CEC/4524/2016
CR [Anonymous], 2020, BOOMI IPAAS SOLUTION
   Application integration and API management| oracle, 2020, APPL INTEGRATION API
   Asuncion CH, 2010, IEEE INT ENTERP DIST, P184, DOI 10.1109/EDOC.2010.10
   Azure integration services microsoft azure, 2020, AZURE INTEGRATION SE
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Balko S, 2015, IEEE INT ENTERP DIST, P74, DOI 10.1109/EDOC.2015.21
   Beer MI, 2018, SERV ORIENTED COMPUT, V12, P111, DOI 10.1007/s11761-017-0221-1
   Bézivin J, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P58, DOI 10.1109/EDOC.2004.1342505
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Chen C, 2016, INTERNATIONAL CONFERENCE ON ELECTRONIC INFORMATION TECHNOLOGY AND INTELLECTUALIZATION (ICEITI 2016), P365
   Cimino LD, 2019, SOFTWARE PRACT EXPER, V49, P584, DOI 10.1002/spe.2630
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   Data integration cloud | informatica, 2020, DATA INTEGRATION CLO
   Dossot David, 2018, MULE ACTION
   Enterprise integration data integration tools | snaplogic, 2019, ENTERPRISE INTEGRATI
   Estublier J, 2005, LECT NOTES COMPUT SC, V3713, P69, DOI 10.1007/11557432_6
   FCT, 2019, FACT FUND CIENC TECN
   FCT, 2019, EST PORT GLOB REF RE
   Frantz RZ, 2016, J SYST SOFTWARE, V111, P89, DOI 10.1016/j.jss.2015.08.044
   Frantz RZ, 2011, INT J COOP INF SYST, V20, P143, DOI 10.1142/S0218843011002225
   Gutierrez F., 2017, Spring Boot Messaging: Messaging APIs for Enterprise and Integration Solutions, V1st
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   Hanson J, 2015, P CAISE IND TRACK CO, P60
   Harman M, 2013, J SYST SOFTWARE, V86, P2225, DOI 10.1016/j.jss.2012.10.027
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   Huang CW, 2019, BIOMED CIRC SYST C, DOI [10.1109/biocas.2019.8919039, 10.23919/apnoms.2019.8893023]
   Ibsen C., 2018, Camel in action
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Kovanovic Vitomir., 2012, Proceedings of the 5th India Software Engineering Conference, P33
   Kurtev I., 2006, P COMP 21 ACM SIGPLA, P602
   Li Q, 2013, COMPUT IND, V64, P813, DOI 10.1016/j.compind.2013.05.003
   Li Q, 2010, COMPUT IND, V61, P127, DOI 10.1016/j.compind.2009.10.009
   Linington PF, 2005, INT J COOP INF SYST, V14, P77, DOI 10.1142/S0218843005001122
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Miller I., 2003, MDA GUIDE VERSION 1
   MuleSoft integration platform for connecting SaaS and enterprise applications, 2020, MULESOFT INTEGRATION
   National Platform for Science and Technology, 2020, NATL PLATFORM SCI TE
   Oldevik J, 2005, LECT NOTES COMPUT SC, V3748, P239
   Panetto H, 2016, COMPUT IND, V79, P47, DOI 10.1016/j.compind.2015.08.001
   Pinho E, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P366, DOI 10.1109/HPCSim.2014.6903709
   Rubien R, 2015, INT WORKSHOP DATABAS, P286, DOI 10.1109/DEXA.2015.69
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Scopus home, 2020, SCOPUS HOME
   Tadeski I, 2010, LECT NOTES COMPUT SC, V6189, P430
   Thoo E, 2019, MAGIC QUADRANT ENTER
   Tolvanen JP, 2005, LECT NOTES COMPUT SC, V3714, P198
   Unleash the transformative power of APIs and integration | Jitterbit, 2020, UNLEASH TRANSFORMATI
   Van Deursen A, 1998, J SOFTW MAINT-RES PR, V10, P75, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<75::AID-SMR168>3.0.CO;2-5
   Voelter M, 2013, DSL ENG DESIGNING IM
   Wei N., 2015, International Journal of Multimedia and Ubiquitous Engineering, Volume, V10, P165
   Workato app integration & automation-automate everything, 2020, WORKATO APP INTEGRAT
   Xu AP, 2016, 2016 12TH INTERNATIONAL CONFERENCE ON NATURAL COMPUTATION, FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY (ICNC-FSKD), P2210, DOI 10.1109/FSKD.2016.7603524
   Zheng X, 2015, LECT NOTES ELECTR EN, V331, P543, DOI 10.1007/978-94-017-9618-7_55
NR 54
TC 7
Z9 7
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2021
VL 51
IS 4
SI SI
BP 824
EP 847
DI 10.1002/spe.2916
EA OCT 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR8DY
UT WOS:000583319100001
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Thorgeirsson, AT
   Vaillant, M
   Scheubner, S
   Gauterin, F
AF Thorgeirsson, Adam Thor
   Vaillant, Moritz
   Scheubner, Stefan
   Gauterin, Frank
TI Evaluating system architectures for driving range estimation and charge
   planning for electric vehicles
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE connected vehicles; distributed computing; electric vehicles; machine
   learning; modeling and simulation; range anxiety; range estimation;
   system architecture
ID ENERGY-CONSUMPTION; PREDICTION; TECHNOLOGIES; SIMULATION; PLATFORM;
   TOOLKIT; EDGE
AB Due to sparse charging infrastructure and short driving ranges, drivers of battery electric vehicles (BEVs) can experience range anxiety, which is the fear of stranding with an empty battery. To help eliminate range anxiety and make BEVs more attractive for customers, accurate range estimation methods need to be developed. In recent years, many publications have suggested machine learning algorithms as a fitting method to achieve accurate range estimations. However, these algorithms use a large amount of data and have high computational requirements. A traditional placement of the software within a vehicle's electronic control unit could lead to high latencies and thus detrimental to user experience. But since modern vehicles are connected to a backend, where software modules can be implemented, high latencies can be prevented with intelligent distribution of the algorithm parts. On the other hand, communication between vehicle and backend can be slow or expensive. In this article, an intelligent deployment of a range estimation software based on ML is analyzed. We model hardware and software to enable performance evaluation in early stages of the development process. Based on simulations, different system architectures and module placements are then analyzed in terms of latency, network usage, energy usage, and cost. We show that a distributed system with cloud-based module placement reduces the end-to-end latency significantly, when compared with a traditional vehicle-based placement. Furthermore, we show that network usage is significantly reduced. This intelligent system enables the application of complex, but accurate range estimation with low latencies, resulting in an improved user experience, which enhances the practicality and acceptance of BEVs.
C1 [Thorgeirsson, Adam Thor; Vaillant, Moritz; Scheubner, Stefan] Dr Ing Hc F Porsche AG, Porschestr 911, D-71287 Weissach, Germany.
   [Thorgeirsson, Adam Thor; Scheubner, Stefan; Gauterin, Frank] Karlsruhe Inst Technol, Inst Vehicle Technol, Karlsruhe, Germany.
C3 Volkswagen; Porsche; Helmholtz Association; Karlsruhe Institute of
   Technology
RP Thorgeirsson, AT (corresponding author), Dr Ing Hc F Porsche AG, Porschestr 911, D-71287 Weissach, Germany.
EM Adam_Thor.Thorgeirsson1@porsche.de
RI Thorgeirsson, Adam Thor/ABH-8739-2020
OI Thorgeirsson, Adam Thor/0000-0002-7306-8693
FU Projekt DEAL
FX Open access funding enabled and organized by Projekt DEAL.
CR Abboud K, 2016, IEEE T VEH TECHNOL, V65, P9457, DOI 10.1109/TVT.2016.2591558
   Abreu DP, 2020, SIMUL MODEL PRACT TH, V101, DOI 10.1016/j.simpat.2019.102029
   [Anonymous], 2006, 9 DIMACS IMPLEMENTAT
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 1962, FLOWS NETWORKS
   [Anonymous], 2018, Online machine learning in big data streams
   [Anonymous], 2014, KIT ITI ALGORITHMIK
   Ashok A., 2015, 2015 IEEE Power Energy Society Innovative Smart Grid Technologies Conference (ISGT), P1
   Bellman R., 1958, Q APPL MATH, V16, P87
   Bottou L., 2012, Neural networks: Tricks of the trade, P421, DOI DOI 10.1007/978-3-642-35289-8_25
   Bottou U, 2004, ADV NEUR IN, V16, P217
   Brebner P, 2010, P INT C CLOUD COMP V
   Brendan McMahan H., 2016, ABS160205629 CORR
   Brogi A, 2020, SOFTWARE PRACT EXPER, V50, P719, DOI 10.1002/spe.2766
   Buckl C., 2012, EL VEH C IEVC 2012 I, P1, DOI DOI 10.1109/IEVC.2012.6183198
   Calheiros RN, 2012, FUTURE GENER COMP SY, V28, P861, DOI 10.1016/j.future.2011.07.005
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chalapathi GSS, 2019, ABS191200595 CORR, Vabs/1912.00595, P1
   Crankshaw D, 2017, PROCEEDINGS OF NSDI '17: 14TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P613
   De Cauwer C, 2020, IEEE T INTELL TRANSP, V21, P2787, DOI 10.1109/TITS.2019.2918019
   De Cauwer C, 2017, ENERGIES, V10, DOI 10.3390/en10050608
   Delling D, 2009, DIMACS SER DISCRET M, V74, P141
   Dijkstra E., 1959, NUMER MATH, V1, P269, DOI [DOI 10.1007/BF01386390, 10.1007/bf01386390]
   Dizdarevic J, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3292674
   Eisel M, 2016, TRANSPORT RES F-TRAF, V43, P199, DOI 10.1016/j.trf.2016.10.015
   Ferron JB., 2012, CIRCUITS SYSTEMS LAS, P1
   Franke T, 2012, APPL PSYCHOL-INT REV, V61, P368, DOI 10.1111/j.1464-0597.2011.00474.x
   Frostig Roy, 2015, P 28 C LEARNING THEO, P728
   Fukushima A, 2018, IET INTELL TRANSP SY, V12, P1174, DOI 10.1049/iet-its.2018.5169
   Ghosal A, 2010, SAE TECHNICAL PAPER
   Grubwinkler S, 2014, IEEE INT VEH SYM, P1069, DOI 10.1109/IVS.2014.6856501
   Grubwinkler S, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON VEHICULAR ELECTRONICS AND SAFETY (ICVES), P99, DOI 10.1109/ICVES.2013.6619611
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   HART PE, 1968, IEEE T SYST SCI CYB, VSSC4, P100, DOI 10.1109/TSSC.1968.300136
   Hasenburg J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2019), P144, DOI 10.1109/ICFC.2019.00026
   Henrickson K, 2019, MOBILITY PATTERNS, BIG DATA AND TRANSPORT ANALYTICS: TOOLS AND APPLICATIONS FOR MODELING, P73, DOI 10.1016/B978-0-12-812970-8.00005-1
   Jayakumar A, 2014, 2014 IEEE INTERNATIONAL ELECTRIC VEHICLE CONFERENCE (IEVC)
   Jothimurugesan E., 2018, Advances in Neural Information Processing Systems, P9906
   Kapsalis A, 2017, IEEE CLOUD COMPUT, V4, P36, DOI 10.1109/MCC.2017.25
   Konecny J., 2017, STOCHASTIC DISTRIBUT
   Lee CH, 2017, 2017 25TH INTERNATIONAL CONFERENCE ON SYSTEMS ENGINEERING (ICSENG), P405, DOI 10.1109/ICSEng.2017.47
   Lee CH, 2015, IEEE ACCESS, V3, P1980, DOI 10.1109/ACCESS.2015.2492923
   Lin SY, 2020, COMPUT COMMUN, V160, P636, DOI 10.1016/j.comcom.2020.05.044
   LUKASIEWYCZ M, 2013, DES AUT CON
   Mahmud R, 2019, J PARALLEL DISTR COM, V132, P190, DOI 10.1016/j.jpdc.2018.03.004
   Mancini R., 2019, ARXIV191108413
   Milani F, 2018, IEEE VEHIC NETW CONF
   O'Loughlin J., 2014, The Fifth International Conference on Cloud Computing, GRIDs, and Virtualization, P64
   Ozatay E, 2014, IEEE T INTELL TRANSP, V15, P2491, DOI 10.1109/TITS.2014.2319812
   Peng CY, 2009, IEEC 2009: FIRST INTERNATIONAL SYMPOSIUM ON INFORMATION ENGINEERING AND ELECTRONIC COMMERCE, PROCEEDINGS, P135, DOI 10.1109/IEEC.2009.33
   Pesovic U., 2012, 2012 35th International Convention on Information and Communication Technology, Electronics and Microelectronics, P743
   Qi XW, 2018, TRANSPORT RES D-TR E, V64, P36, DOI 10.1016/j.trd.2017.08.008
   Saini M, 2017, MULTIMED TOOLS APPL, V76, P11621, DOI 10.1007/s11042-015-3158-4
   Scheubner S, 2019, IEEE T VEH TECHNOL, V68, P6414, DOI 10.1109/TVT.2019.2918544
   Sedgewick R, 1986, ALGORITHMICA, V1, P31, DOI 10.1007/BF01840435
   Sen Siddhartha, 2019, ABS190403257 CORR
   Siegel J, 2018, IEEE INTEL TRANSP SY, V10, P74, DOI 10.1109/MITS.2017.2776142
   Siegel JE, 2018, IEEE T INTELL TRANSP, V19, P2391, DOI 10.1109/TITS.2017.2749459
   Smuts M., 2019, INTERNET THINGS INFO, P160
   Sun S, 2019, J ADV TRANSPORT, DOI 10.1155/2019/4109148
   Svorobej S, 2019, FUTURE INTERNET, V11, DOI 10.3390/fi11030055
   Thibault L, 2018, IEEE T INTELL VEHICL, V3, P463, DOI 10.1109/TIV.2018.2873922
   Tseng CM, 2017, IEEE T INTELL TRANSP, V18, P3103, DOI 10.1109/TITS.2017.2672880
   Tseng CM, 2015, P 2015 ACM 6 INT C F, V15
   Tuli Shreshth, 2019, 2019 4th International Conference on Information Systems and Computer Networks (ISCON), P496, DOI 10.1109/ISCON47742.2019.9036216
   Tuli S, 2020, FUTURE GENER COMP SY, V104, P187, DOI 10.1016/j.future.2019.10.043
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
   Wang L, 2018, ABS180109212 CORR
   Wilhelm E, 2015, TRANSPORT-VILNIUS, V30, P320, DOI 10.3846/16484142.2015.1079237
   Wu D, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P597, DOI 10.1109/PIC.2014.6972404
   Yaseen MU, 2019, SOFTWARE PRACT EXPER, V49, P565, DOI 10.1002/spe.2636
   Yi ZG, 2017, IEEE T VEH TECHNOL, V66, P10515, DOI 10.1109/TVT.2017.2720587
   Yousefpour A, 2019, J SYST ARCHITECT, V98, P289, DOI 10.1016/j.sysarc.2019.02.009
   Zhang Z, 2016, SAE TECHNICAL PAPER
NR 74
TC 7
Z9 10
U1 3
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2021
VL 51
IS 1
SI SI
BP 72
EP 90
DI 10.1002/spe.2914
EA OCT 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PH6SW
UT WOS:000577428900001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Jaber, AS
   Idrees, AK
AF Jaber, Alaa Shawqi
   Idrees, Ali Kadhum
TI Energy-Saving Multisensor Data Sampling and Fusion with Decision-Making
   for Monitoring Health Risk Using WBSNs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive sampling; decision-making; early warning system; healthcare
   monitoring; multisensor data fusion; patient health assessment; wireless
   body sensor networks (WBSNs)
ID SENSOR NETWORKS; COMPRESSION; SCORE
AB The necessity of developing sufficient systems to monitor health conditions has increased due to the aging of the population and the prevalence of chronic diseases, creating a demand for remote health care systems that make use of biosensors. This article proposes an energy-saving multisensor data sampling and fusion with decision-making for the monitoring of patient health risk in wireless body sensor networks (WBSNs). The work consists of three steps: energy-efficient sampling rate adaptation, multisensor data fusion, and decision-making. The sampling is performed in each biosensor and it adapts its rate based on the local risk and the global risk in which global risk computed at the coordinator, where the data is fused afterward. Finally, decisions are made according to the risk level of the patient. The processing of these functions enables in real-time the adoption of the biosensor sampling rates based on the dynamic risk level of each biosensor, and a corresponding decision is made whenever an emergency is detected. The performance of the suggested approach is evaluated using actual health datasets, and some of its aspects are put into comparison with an existing approach, such as the data reducing and energy-consuming rates. The acquired results illustrate a decrease in the volume of gathered data, thus a significant energy saving has been made while preserving data accuracy and integrity. Moreover, presenting a data fusing model at the coordinator level by means of an early warning score system has assessed the health condition of patients and took an appropriate decision when detecting emergencies.
C1 [Jaber, Alaa Shawqi] Univ Babylon, Informat Networks Dept, Babylon, Iraq.
   [Idrees, Ali Kadhum] Univ Babylon, Dept Comp Sci, Babylon, Iraq.
C3 University of Babylon; University of Babylon
RP Idrees, AK (corresponding author), Univ Babylon, Dept Comp Sci, Babylon, Iraq.
EM ali.idrees@uobabylon.edu.iq
RI Idrees, Ali Kadhum/H-5572-2017; Jaber, Alaa Shawqi/JXX-6935-2024; Jaber,
   Alaa Shawqi/E-5816-2019
OI Idrees, Ali Kadhum/0000-0001-9773-0066; Jaber, Alaa
   Shawqi/0000-0001-6163-6916
CR Al-Nassrawy KK, 2020, PROCEDIA COMPUT SCI, V167, P1240, DOI 10.1016/j.procs.2020.03.439
   Azar J, 2019, FUTURE GENER COMP SY, V96, P168, DOI 10.1016/j.future.2019.02.005
   Azar J, 2018, IEEE CONF WIREL MOB
   Cambrian T, 2017, NATL EARLY WARNING S
   Chen SY, 2015, J MED SYST, V39, DOI 10.1007/s10916-015-0343-y
   Dautov R, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0183-6
   Djelouat H, 2017, WIREL COMMUN MOB COM, DOI 10.1155/2017/9823684
   Farahmand E, 2017, INT J COMPUT INF ENG, V11, P302, DOI [10.5281/zenodo.1130229, DOI 10.5281/ZENODO.1130229]
   Freathy S, 2019, RESUSCITATION, V139, P152, DOI 10.1016/j.resuscitation.2019.04.016
   Ghosh A, 2020, INTERNET THINGS-NETH, V9, DOI 10.1016/j.iot.2020.100166
   Ghosh K, 2018, WIRELESS PERS COMMUN, V98, P1083, DOI 10.1007/s11277-017-4909-5
   Goldberger AL, 2000, CIRCULATION, V101, pE215, DOI 10.1161/01.CIR.101.23.e215
   Gravina R, 2017, INFORM FUSION, V35, P68, DOI 10.1016/j.inffus.2016.09.005
   Caicedo-Ortiz JG, 2018, COMPUT ELECTRON AGR, V145, P275, DOI 10.1016/j.compag.2018.01.004
   Habib C, 2017, P 2017 IEEE 13 INT C, P1
   Habib C, 2019, INFORM FUSION, V47, P10, DOI 10.1016/j.inffus.2018.06.008
   Habib C, 2016, IEEE T IND INFORM, V12, P2342, DOI 10.1109/TII.2016.2575800
   Katsikeas S, 2019, PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS SECURITY AND PRIVACY (ICISSP), P175, DOI 10.5220/0007247901750182
   Khan RA, 2018, INT J DISTRIB SENS N, V14, DOI 10.1177/1550147718768994
   Khan TR, 2017, TENCON IEEE REGION, P2253, DOI 10.1109/TENCON.2017.8228236
   Luo KF, 2018, RESEARCH-CHINA, V2018, DOI 10.1155/2018/6793752
   Magaña-Espinoza P, 2014, SENSORS-BASEL, V14, P7096, DOI 10.3390/s140407096
   Magno M, 2017, MOBILE NETW APPL, V22, P814, DOI 10.1007/s11036-016-0755-z
   Malathy S, 2020, J SUPERCOMPUT, V76, P6010, DOI 10.1007/s11227-019-03107-x
   Masoud MZ, 2019, 2019 IEEE JORDAN INTERNATIONAL JOINT CONFERENCE ON ELECTRICAL ENGINEERING AND INFORMATION TECHNOLOGY (JEEIT), P678, DOI 10.1109/JEEIT.2019.8717524
   Mehrani M, 2020, SIMUL MODEL PRACT TH, V105, DOI 10.1016/j.simpat.2020.102101
   Navarro J, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18082492
   Negra R, 2016, PROCEDIA COMPUT SCI, V83, P1274, DOI 10.1016/j.procs.2016.04.266
   Organization World Health, 2016, ORG WORLD HLTH AG LI
   Pei ZJ, 2017, 2017 4TH INTERNATIONAL CONFERENCE ON INFORMATION SCIENCE AND CONTROL ENGINEERING (ICISCE), P1492, DOI 10.1109/ICISCE.2017.311
   Rendón E, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10041276
   Scirè A, 2019, ALGORITHMS, V12, DOI 10.3390/a12020032
   Shankar A, 2016, PROCEDIA COMPUT SCI, V89, P134, DOI 10.1016/j.procs.2016.06.022
   Silcock DJ, 2015, RESUSCITATION, V89, P31, DOI 10.1016/j.resuscitation.2014.12.029
   ul Huque MTI, 2015, IEEE INTERNET THINGS, V2, P94, DOI 10.1109/JIOT.2014.2366110
   Ullo SL, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ENVIRONMENTAL ENGINEERING (EE)
   Vitabile Salvatore, 2019, High-Performance Modelling and Simulation for Big Data Applications: Selected Results of the COST Action IC1406 cHiPSet. Lecture Notes in Computer Science (LNCS 11400), P186, DOI 10.1007/978-3-030-16272-6_7
   Wang MH, 2020, INFORM FUSION, V54, P61, DOI 10.1016/j.inffus.2019.07.002
NR 38
TC 12
Z9 12
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 271
EP 293
DI 10.1002/spe.2904
EA OCT 2020
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000573913600001
DA 2024-07-18
ER

PT J
AU Ahmad, M
   Ahmad, I
   Bilal, M
   Jolfaei, A
   Mehmood, RM
AF Ahmad, Muneer
   Ahmad, Iftikhar
   Bilal, Muhammad
   Jolfaei, Alireza
   Mehmood, Raja Majid
TI INSWF DNAsignal analysis tool: Intelligent noise suppression window
   filter
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive digital filter; codon usage; digital filter; DNA sequence
   analysis; fixed-length filter; fuzzy rules; signal noise
ID PROTEIN-CODING REGIONS; DNA; PREDICTION; SEQUENCES; IDENTIFICATION;
   GENES
AB DNA signals mainly differ from standard digital signals due to their biological data contents. Owing to unique properties of DNA signals the conventional signal processing techniques, such as digital filters, suffers with spectral leakage and results in insignificant noise suppression in DNA sequence analysis. This article presents an intelligent noise suppression window filter (INSWF) for DNA signal analysis. The filter demises the signal by separating high-level frequency contents and by identifying nucleotides with high fuzzy membership contribution at particular locations. The nucleotide contents of signals are later filtered by application of median filtering employing a combination of s-shaped and z-shaped filters. The fundamental characteristic of codons usage that causes uneven nucleotides segmentation has been tackled by finding the best fit of the curve in biological contents of filter. One of the fuzzy correlations existing between codons and median that nucleotides incorporated to reduce the signal noise to a larger magnitude. TheINSWFfilter outperformed the existing fixed-length digital filters tested over 250 benchmarked and random datasets of various species. A notable enhancement of 45% to 130% was achieved by significantly suppressing signal noise as compared with conventional digital filters in DNA sequence analysis.
C1 [Ahmad, Muneer] Univ Malaya, Fac Comp Sci & Informat Technol, Dept Informat Syst, Kuala Lumpur, Malaysia.
   [Ahmad, Iftikhar] King Abdulaziz Univ, Fac Comp & Informat Technol, Dept Informat Technol, Jeddah, Saudi Arabia.
   [Bilal, Muhammad] Hankuk Univ Foreign Studies, Dept Comp & Elect Syst Engn, Yongin, South Korea.
   [Jolfaei, Alireza] Macquarie Univ, Dept Comp, Sydney, NSW, Australia.
   [Mehmood, Raja Majid] Xiamen Univ Malaysia, Sch Elect & Comp Engn, Informat & Commun Technol Dept, Sepang 43900, Malaysia.
C3 Universiti Malaya; King Abdulaziz University; Hankuk University Foreign
   Studies; Macquarie University; Xiamen University Malaysia Campus
RP Mehmood, RM (corresponding author), Xiamen Univ Malaysia, Sch Elect & Comp Engn, Informat & Commun Technol Dept, Sepang 43900, Malaysia.
EM rmeex07@ieee.org
RI Bilal, Muhammad/F-5225-2019; Mehmood, Raja Majid/H-3643-2012; Ahmad,
   Muneer/HNI-6512-2023; Ahmad, Muneer/CAI-2380-2022; Jolfaei,
   Alireza/GQH-6907-2022; Ahmad, Muneer/CAF-6558-2022
OI Bilal, Muhammad/0000-0003-4221-0877; Mehmood, Raja
   Majid/0000-0002-2284-0479; Ahmad, Muneer/0000-0001-5047-1108; Ahmad,
   Muneer/0000-0001-5047-1108; Ahmad, Muneer/0000-0001-5047-1108; Jolfaei,
   Alireza/0000-0001-7818-459X
FU Xiamen University Malaysia Research Fund (XMUMRF)
   [XMUMRF/2019-C3/IECE/0007]
FX Xiamen University Malaysia Research Fund (XMUMRF), Grant/Award Number:
   XMUMRF/2019-C3/IECE/0007
CR Abbasi O, 2011, BMC BIOINFORMATICS, V12, DOI 10.1186/1471-2105-12-430
   Ahmad M, 2017, COMPUT METH PROG BIO, V149, P11, DOI 10.1016/j.cmpb.2017.06.021
   Ahmad M, 2017, BIOMED SIGNAL PROCES, V34, P44, DOI 10.1016/j.bspc.2017.01.004
   Ahmad M, 2016, COMPUT BIOL MED, V69, P144, DOI 10.1016/j.compbiomed.2015.12.017
   Ahmed M, 2017, J MED IMAG HEALTH IN, V7, P1385, DOI 10.1166/jmihi.2017.2218
   Akhtar M, 2007, IEEE INT WORK GENOM, P54
   Akhtar M, 2008, IEEE J-STSP, V2, P310, DOI 10.1109/JSTSP.2008.923854
   Alberts B., 2008, MOL BIOL CELL
   Anastassiou D, 2001, IEEE SIGNAL PROC MAG, V18, P8, DOI 10.1109/79.939833
   Anastassiou D, 2000, BIOINFORMATICS, V16, P1073, DOI 10.1093/bioinformatics/16.12.1073
   Andreas A., 2006, DIGITAL SIGNAL PROCE
   [Anonymous], 2008, P 2 INT C INF PROC N
   Azhar M, 2019, J AMB INTEL HUM COMP, V10, P3925, DOI 10.1007/s12652-018-1153-0
   Bergen SWA, 2005, IEEE PACIF, P324
   Brueckner F, 2009, ACTA CRYSTALLOGR D, V65, P112, DOI 10.1107/S0907444908039875
   Chavan M., 2006, P 5 WSEAS INT C SIGN, P285
   Coward E, 1997, J MATH BIOL, V36, P64, DOI 10.1007/s002850050090
   Datta S, 2004, CONF REC ASILOMAR C, P45
   Datta S, 2005, P ICASSP 05 IEEE INT, V5, P5
   FICKETT JW, 1982, NUCLEIC ACIDS RES, V10, P5303, DOI 10.1093/nar/10.17.5303
   George TP, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-S1-S50
   Gunawan TS, 2008, 2008 INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATION ENGINEERING, VOLS 1-3, P252, DOI 10.1109/ICCCE.2008.4580606
   Hota M.K., 2010, 2010 International Conference on Power, Control and Embedded Systems, P1, DOI [DOI 10.1109/ICPCES.2010.5698675, 10.1109/ICPCES.2010.5698675]
   Ignatova Zoya., 2008, DNA computing models
   Kakumani R, 2008, IEEE INT SYMP CIRC S, P1918, DOI 10.1109/ISCAS.2008.4541818
   Kotlar D, 2003, GENOME RES, V13, P1930, DOI 10.1101/gr.1261703
   Long M, 2003, NAT REV GENET, V4, P865, DOI 10.1038/nrg1204
   Marhon SA, 2016, IEEE ACM T COMPUT BI, V13, P742, DOI 10.1109/TCBB.2015.2476789
   Mena-Chalco JP, 2008, IEEE ACM T COMPUT BI, V5, P198, DOI 10.1109/TCBB.2007.70259
   Mujiono, 2013, 2013 INTERNATIONAL CONFERENCE OF INFORMATION AND COMMUNICATION TECHNOLOGY (ICOICT), P82, DOI 10.1109/ICoICT.2013.6574554
   Nair AS, 2006, BIOINFORMATION, V1, P197
   Oppenheim A. V., 1999, DISCRETE TIME SIGNAL, DOI DOI 10.1049/EP.1977.0078
   Roy SS, 2017, MICROSYST TECHNOL, V23, P4111, DOI 10.1007/s00542-016-2884-5
   Sahu Sitanshu Sekhar, 2011, Genomics Proteomics & Bioinformatics, V9, P45, DOI 10.1016/S1672-0229(11)60007-7
   Shakya D. K., 2011, INT J ELECT ENG INF, V3, P480
   Siddiqui IF, 2019, WIRELESS PERS COMMUN, V106, P1969, DOI 10.1007/s11277-018-5739-9
   Tiwari S, 1997, COMPUT APPL BIOSCI, V13, P263
   Tuqan J, 2008, IEEE J-STSP, V2, P343, DOI 10.1109/JSTSP.2008.923851
   Turanov AA, 2009, SCIENCE, V323, P259, DOI 10.1126/science.1164748
   Wang Zhuo, 2004, Genomics Proteomics & Bioinformatics, V2, P216
   Yin CC, 2005, J COMPUT BIOL, V12, P1153, DOI 10.1089/cmb.2005.12.1153
   Yin CC, 2007, J THEOR BIOL, V247, P687, DOI 10.1016/j.jtbi.2007.03.038
   Zhang XL, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0163088
NR 43
TC 0
Z9 0
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2021
VL 51
IS 3
SI SI
BP 670
EP 685
DI 10.1002/spe.2880
EA AUG 2020
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QH1RQ
UT WOS:000562459800001
DA 2024-07-18
ER

PT J
AU Ingalls, D
   Miranda, E
   Béra, C
   Boix, EG
AF Ingalls, Daniel
   Miranda, Eliot
   Bera, Clement
   Gonzalez Boix, Elisa
TI Two decades of live coding and debugging of virtual machines through
   simulation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE live development; managed runtime; tools; virtual machine
AB OpenSmalltalk-VM is a virtual machine (VM) for languages in the Smalltalk family (eg, Squeak and Pharo), which is itself written in a subset of Smalltalk that can easily be translated to C. VM development is done in Smalltalk, an activity we call "simulation." The production VM is then derived by translating the core VM code to C. As a result, two execution models coexist: simulation, where the Smalltalk code is executed on top of a Smalltalk VM, and production, where the same code is compiled to an executable through a C compiler. The whole VM execution can be simulated: the heap is represented as a huge byte array, the VM code is executed as Smalltalk, and the native code generated by the just-in-time (JIT) compiler is executed by a processor simulator. All the Smalltalk development tools, such as the debugger, are then available while simulating. In addition, in simulation, it is also possible to use debugging features such as single stepping in the machine code generated by the JIT compiler. The Smalltalk development tools combined with the simulation debugging features provide developers with a productive environment in which to extend and debug the VM. In this article, we detail the VM simulation infrastructure and report our experiences developing and debugging VM features within it such as the garbage collector and the JIT compiler.
C1 [Bera, Clement; Gonzalez Boix, Elisa] Vrije Univ Brussel, Software Languages Lab, Brussels, Belgium.
C3 Vrije Universiteit Brussel
RP Béra, C (corresponding author), Vrije Univ Brussel, Software Languages Lab, Brussels, Belgium.
EM eliot.miranda@gmail.com; bera.clement@gmail.com
OI Gonzalez Boix, Elisa/0000-0002-9966-6421; Miranda,
   Eliot/0009-0004-5604-1116
CR ALPERN B, 1999, P OOPSLA 99
   [Anonymous], 1972, PERSONAL COMPUTER CH
   BERA C, 2017, P MANLANG, V2017
   BERA C, 2014, P IWST 14
   BERA C, 2019, P DLS 19
   BERA C, 2016, P IWST 16
   Black A.P., 2007, Squeak by Example
   Black A.P., 2009, PHARO EXAMPLE
   BRACHA G, 2010, P ECOOP 10
   CHI A, 2014, SOFTWARE LANGUAGE EN
   CHI A, 2015, P 2015 ACM INT S NEW, P40
   Deutsch L. P, 1984, P POPL 84
   DMLV V, 2018, ABS180310201 CORR, V2
   DUBOSCQ G, 2013, P VMIL 13
   Felgentreff T, 2016, PROCEEDINGS OF THE 11TH EDITION OF THE INTERNATIONAL WORKSHOP ON SMALLTALK TECHNOLOGIES, (IWST 2016), DOI 10.1145/2991041.2991062
   Freudenberg B, 2009, SEVENTH INTERNATIONAL CONFERENCE ON CREATING, CONNECTING AND COLLABORATING THROUGH COMPUTING, PROCEEDINGS, P57, DOI 10.1109/C5.2009.9
   GANZ SE, 1999, P ICFP 99
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   HOLZLE U, 1994, P ACM SIGPLAN 94 C P, P326, DOI DOI 10.1145/178243.178478
   HOLZLE U, 1991, P ECOOP 91 AITO LOND
   INGALLS D, 1997, P OOPSLA 97
   Ingalls D. H, 1978, P 5 ACM SIGACT SIGPL, P9
   KELSEY RA, 1997, PRESCHEME SCHEME DIA
   MATHISKE B, 2008, P OOPSLA COMP 08
   Miranda E, 2015, SPAN CONF ELECTRON, P10, DOI 10.1109/CDE.2015.7087449
   MIRANDA E, 2009, COVER CONTEXTS BIG F
   MIRANDA E, 2018, P VMIL 2018 NEW YORK
   Miranda Eliot, 1999, Technical Report
   REED DP, 2005, P OOPSLA 05
   Smith DA, 2004, SECOND INTERNATIONAL CONFERENCE ON CREATING, CONNECTING AND COLLABORATING THROUGH COMPUTING, PROCEEDINGS, P4, DOI 10.1109/C5.2004.1314362
   SMITH DA, 2019, COMMUNICATION NOV
   SPITZ A, 2009, KLEIN SQUEAK VM ARCH
   Ungar D., 1984, SIGPLAN Notices, V19, P157, DOI 10.1145/390011.808261
   Ungar D., 2005, OOPSLA 2005, P11, DOI DOI 10.1145/1094855.1094865
   Wimmer C, 2013, ACM T ARCHIT CODE OP, V9, DOI 10.1145/2400682.2400689
   Wrthinger T., 2013, P 2013 ACM INT S NEW, P187, DOI [10.1145/2509578.2509581, DOI 10.1145/2509578.2509581]
   WURTHINGER T, 2012, P DLS 12
   Würthinger T, 2017, ACM SIGPLAN NOTICES, V52, P662, DOI [10.1145/3062341.3062381, 10.1145/3140587.3062381]
NR 38
TC 1
Z9 1
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2020
VL 50
IS 9
BP 1629
EP 1650
DI 10.1002/spe.2841
EA MAY 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MT2QQ
UT WOS:000530907900001
DA 2024-07-18
ER

PT J
AU Javed, A
   Lakoju, M
   Burnap, P
   Rana, O
AF Javed, Amir
   Lakoju, Mike
   Burnap, Pete
   Rana, Omer
TI Security analytics for real-time forecasting of cyberattacks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cybersecurity; malware; security risk; web security
ID INTRUSION DETECTION; RISK-ASSESSMENT; PREDICTION; MODEL
AB Protection of networked computing infrastructures (such as Internet of Things, Industrial Control Systems, and Edge computing) is dependent on the continuous monitoring of interaction between such devices and network/Cloud-based hosts (especially in Industry 4.0 environments). This real-time monitoring enables an analyst to quantify evolving and emerging threats to such network infrastructures. A framework for identifying patterns in observed cyberthreats and the use of these patterns for forecasting the growth of an emerging threat to network infrastructure is proposed. This framework enables predicting the maximum threat intensity and the time period over which this maximum intensity is likely to occur. The proposed framework integrates: (a) continuous monitoring of device/network activity, (b) forecasting behavior using exponentially weighted moving averages, (c) utilizing Fibonacci retracement for estimating the potential intensity of a cyberattack, and (d) linear regression for predicting response time for high risk thresholds and a machine learning strategy to predict potential risk over a pre-defined time window. Using this approach, we can produce time intervals between the forecast and the actual attacks using real-world network activity data. Our results show an average lead time of around 1.75 hours, providing a window of opportunity to limit the impact of an attack and counter it.
C1 [Javed, Amir; Lakoju, Mike; Burnap, Pete; Rana, Omer] Cardiff Univ, Sch Comp Sci & Informat, 5 Parade, Cardiff, Wales.
C3 Cardiff University
RP Javed, A (corresponding author), Cardiff Univ, Sch Comp Sci & Informat, 5 Parade, Cardiff, Wales.
EM javeda7@cardiff.ac.uk
RI Burnap, Pete/HTN-3478-2023; Rana, Omer/AAP-8523-2020
OI Rana, Omer/0000-0003-3597-2646; javed, Amir/0000-0001-9761-0945
FU Engineering and Physical Sciences Research Council [EP/K03345X/1,
   EP/R021031/1]; EPSRC [EP/R033439/1, EP/K03345X/1, EP/R021031/1,
   EP/S018263/1] Funding Source: UKRI
FX Engineering and Physical Sciences Research Council, Grant/Award Numbers:
   EP/K03345X/1, EP/R021031/1
CR Ahmadian RA, 2017, SEC COMMUN NETW, V9, P6042
   Al-Yaseen WL, 2017, EXPERT SYST APPL, V67, P296, DOI 10.1016/j.eswa.2016.09.041
   Aldmour R., 2019, RISK ASSESSMENT METH, P5
   [Anonymous], 2015, ISC INT J INFORM SEC, DOI [DOI 10.22042/ISECURE.2015.3.2.3.178, 10.22042/isecure.2015.3.2.3.178]
   [Anonymous], 2006, NIST SEMATECH E HDB
   Ashfaq RAR, 2017, INFORM SCIENCES, V378, P484, DOI 10.1016/j.ins.2016.04.019
   Blank RM, 2012, GUIDE CONDUCTING RIS
   Bloom G, 2018, 2018 14TH IEEE INTERNATIONAL WORKSHOP ON FACTORY COMMUNICATION SYSTEMS (WFCS 2018)
   Brockwell PJ, 2016, SPRINGER TEXTS STAT, P1, DOI 10.1007/978-3-319-29854-2
   Cheminod M, 2013, IEEE T IND INFORM, V9, P277, DOI 10.1109/TII.2012.2198666
   Cherdantseva Y, 2016, COMPUT SECUR, V56, P1, DOI 10.1016/j.cose.2015.09.009
   Daneshgar FF, 2016, SECUR COMMUN NETW, V9, P2245, DOI 10.1002/sec.1483
   Elliott Ralph Nelson, 1982, RECONSTRUCTION ELLIO
   Fachkha Claude, 2013, 2013 IEEE 12th International Symposium on Network Computing and Applications (NCA), P110, DOI 10.1109/NCA.2013.13
   Feng L, 2004, COMPUT SECUR, V23, P241, DOI 10.1016/j.cose.2004.01.016
   Garg S, 2019, IEEE CONSUM ELECTR M, V8, P35, DOI 10.1109/MCE.2019.2941345
   GEURTS M, 1977, J MARKETING RES, V14, P269, DOI 10.2307/3150485
   Ghosh AK, 1999, LEARNING PROGRAM BEH, P1
   Hellwig Z., 2014, Linear regression and its application to economics
   Hunzinger R, 2016, INTERNET THINGS DATA, P283
   Ishida C, 2005, IEEE PACIF, P450
   Jayasinghe GK, 2014, J NETW COMPUT APPL, V38, P135, DOI 10.1016/j.jnca.2013.03.009
   Jian P, 2007, PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON IMAGE AND GRAPHICS, P307, DOI 10.1109/ICIG.2007.109
   Jindal A, 2019, E-ENERGY'19: PROCEEDINGS OF THE 10TH ACM INTERNATIONAL CONFERENCE ON FUTURE ENERGY SYSTEMS, P370, DOI 10.1145/3307772.3330154
   Jinyu Wu, 2012, P 2012 IEEE 18 INT C, P730, DOI 10.1109/ICPADS.2012.117
   Kim YH, 2014, MULTIMED TOOLS APPL, V71, P685, DOI 10.1007/s11042-012-1275-x
   Lee Jay, 2015, Manufacturing Letters, V3, P18, DOI 10.1016/j.mfglet.2014.12.001
   Liao Cheng-Bin, 2009, Proceedings of the 2009 Second International Workshop on Computer Science and Engineering (WCSE 2009), P7, DOI 10.1109/WCSE.2009.610
   Man Dapeng, 2009, NETWORK SECURITY SIT, P309
   Meng Y, 2017, P ARCH PROT SEC INF, P282
   MIT, 2017, KERAS DOCUMENTATION
   Modi C, 2013, J NETW COMPUT APPL, V36, P42, DOI 10.1016/j.jnca.2012.05.003
   NCSC, 2017, OP TECHN
   NEFTCI SN, 1991, J BUS, V64, P549, DOI 10.1086/296551
   NIST, 2018, 6 3 2 4 EWMA CONTR C
   PALO Alto Networks, 2015, WILDFIRE DAT
   Park H, 2012, IFIP ADV INF COMM TE, V376, P376
   Pontes E., 2011, 2011 Sixth International Conference on Digital Information Management, P179, DOI 10.1109/ICDIM.2011.6093323
   Prechter RR, 1994, BASICS ELLIOTT WAVE
   Sicari S, 2018, COMPUT COMMUN, V129, P67, DOI 10.1016/j.comcom.2018.07.024
   Subrahmanian VS, 2012, Handbook of computational approaches to counterterrorism
   Wang SY, 2016, COMPUT NETW, V101, P158, DOI 10.1016/j.comnet.2015.12.017
   Watters PA, 2012, J MONEY LAUND CONTRO, V15, P430, DOI 10.1108/13685201211266015
   Xi W, 2016, 2016 2ND INTERNATIONAL CONFERENCE ON INDUSTRIAL INFORMATICS - COMPUTING TECHNOLOGY, INTELLIGENT TECHNOLOGY, INDUSTRIAL INFORMATION INTEGRATION (ICIICII), P259, DOI [10.1109/ICIICII.2016.80, 10.1109/ICIICII.2016.0069]
   Ye N, 2003, IEEE T RELIAB, V52, P75, DOI 10.1109/TR.2002.805796
   Zhong RY, 2017, ENGINEERING-PRC, V3, P616, DOI 10.1016/J.ENG.2017.05.015
NR 46
TC 1
Z9 1
U1 4
U2 26
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2022
VL 52
IS 3
SI SI
BP 788
EP 804
DI 10.1002/spe.2822
EA APR 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YS2YA
UT WOS:000523193600001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Iwendi, C
   Maddikunta, PKR
   Gadekallu, TR
   Lakshmanna, K
   Bashir, AK
   Piran, MJ
AF Iwendi, Celestine
   Maddikunta, Praveen Kumar Reddy
   Gadekallu, Thippa Reddy
   Lakshmanna, Kuruva
   Bashir, Ali Kashif
   Piran, Md Jalil
TI A metaheuristic optimization approach for energy efficiency in the IoT
   networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cluster head; hybrid algorithms; Internet of things; metaheuristic
   algorithms; simulated annealing; whale optimization; wireless sensor
   networks
ID WHALE OPTIMIZATION; ALGORITHM; CLUSTER; INTERNET; SELECTION
AB Recently Internet of Things (IoT) is being used in several fields like smart city, agriculture, weather forecasting, smart grids, waste management, etc. Even though IoT has huge potential in several applications, there are some areas for improvement. In the current work, we have concentrated on minimizing the energy consumption of sensors in the IoT network that will lead to an increase in the network lifetime. In this work, to optimize the energy consumption, most appropriate Cluster Head (CH) is chosen in the IoT network. The proposed work makes use of a hybrid metaheuristic algorithm, namely, Whale Optimization Algorithm (WOA) with Simulated Annealing (SA). To select the optimal CH in the clusters of IoT network, several performance metrics such as the number of alive nodes, load, temperature, residual energy, cost function have been used. The proposed approach is then compared with several state-of-the-art optimization algorithms like Artificial Bee Colony algorithm, Genetic Algorithm, Adaptive Gravitational Search algorithm, WOA. The results prove the superiority of the proposed hybrid approach over existing approaches.
C1 [Iwendi, Celestine] BCC Cent South Univ Forestry & Technol, Dept Elect, Changsha, Peoples R China.
   [Maddikunta, Praveen Kumar Reddy; Gadekallu, Thippa Reddy; Lakshmanna, Kuruva] Vellore Inst Technol, Sch Informat Technol & Engn, Vellore, India.
   [Bashir, Ali Kashif] Manchester Metropolitan Univ Manchester, Dept Comp & Math, Manchester, Lancs, England.
   [Piran, Md Jalil] Sejong Univ, Comp Engn Dept, Seoul, South Korea.
C3 Vellore Institute of Technology (VIT); VIT Vellore; Manchester
   Metropolitan University; Sejong University
RP Maddikunta, PKR; Gadekallu, TR (corresponding author), Vellore Inst Technol, Sch Informat Technol & Engn, Vellore, India.; Bashir, AK (corresponding author), Manchester Metropolitan Univ, Dept Comp & Math, Manchester M15 6H, Lancs, England.
EM praveenkumarreddy@vit.ac.in; thippareddy.g@vit.ac.in;
   dr.alikashif.b@ieee.org
RI Maddikunta, Praveen Kumar Reddy/HSG-8292-2023; Gadekallu, Thippa
   Reddy/T-4254-2019; Bashir, Ali Kashif/R-4015-2019; Reddy, Praveen
   Kumar/AAB-4338-2019; Lakshmanna, Kuruva/T-4814-2019; Iwendi,
   Celestine/I-1989-2018; Jalil Piran, Md./I-2070-2018
OI Maddikunta, Praveen Kumar Reddy/0000-0003-4209-2495; Gadekallu, Thippa
   Reddy/0000-0003-0097-801X; Bashir, Ali Kashif/0000-0003-2601-9327;
   Reddy, Praveen Kumar/0000-0003-4209-2495; Lakshmanna,
   Kuruva/0000-0003-3480-4851; Iwendi, Celestine/0000-0003-4350-3911; Jalil
   Piran, Md./0000-0003-3229-6785
CR Alvi AN, 2019, IEEE ACCESS, V7, P170629, DOI 10.1109/ACCESS.2019.2955544
   [Anonymous], 2015, J WIREL SENS NETW
   Arora R, 2019, ORG PREP PROCED INT, V51, P103, DOI 10.1080/00304948.2019.1569409
   Chaudhary R, 2018, IEEE T IND INFORM, V14, P2629, DOI 10.1109/TII.2018.2789442
   Colakovic A, 2018, COMPUT NETW, V144, P17, DOI 10.1016/j.comnet.2018.07.017
   Dar Z, 2020, J SUPERCOMPUT, V76, P2548, DOI 10.1007/s11227-019-03021-2
   Debiao He, 2018, IEEE Systems Journal, V12, P1621, DOI 10.1109/JSYST.2016.2633809
   Dhumane AV, 2019, WIREL NETW, V25, P399, DOI 10.1007/s11276-017-1566-2
   Ding XF, 2019, IEEE ACCESS, V7, P70574, DOI 10.1109/ACCESS.2019.2919769
   Feng X, 2018, IEEE ACCESS, V6, P33895, DOI 10.1109/ACCESS.2018.2847036
   Gope P, 2018, FUTURE GENER COMP SY, V83, P629, DOI 10.1016/j.future.2017.06.023
   Iwendi C. O., 2012, Enhanced security technique for wireless sensor network nodes, DOI 10.1049/iet-tv.44.14060
   Iwendi C, 2019, ELECTRONICS-SWITZ, V8, DOI 10.3390/electronics8111331
   Iwendi C, 2019, IEEE ACCESS, V7, P82337, DOI 10.1109/ACCESS.2019.2923916
   Iwendi C, 2018, IEEE ACCESS, V6, P47258, DOI 10.1109/ACCESS.2018.2864111
   Jesudurai SA, 2019, COGN SYST RES, V57, P101, DOI 10.1016/j.cogsys.2018.10.021
   Kutia S, 2019, IEEE ACCESS, V7, P90777, DOI 10.1109/ACCESS.2019.2924584
   Lim SJ, 2011, COMM COM INF SC, V150, P120
   Lin K, 2018, IEEE INTERNET THINGS, V5, P2263, DOI 10.1109/JIOT.2017.2728705
   Mafarja MM, 2017, NEUROCOMPUTING, V260, P302, DOI 10.1016/j.neucom.2017.04.053
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Mirjalili S, 2016, ADV ENG SOFTW, V95, P51, DOI 10.1016/j.advengsoft.2016.01.008
   Mittal M, 2019, EAI Endorsed Trans. Energy Web, V6, DOI 10.4108/eai.11-6-2019.160835
   Ni QJ, 2017, IEEE ACM T COMPUT BI, V14, P76, DOI 10.1109/TCBB.2015.2446475
   Preetha SKSL, 2018, WIRELESS PERS COMMUN, V103, P3163, DOI 10.1007/s11277-018-6000-2
   Puschmann D, 2017, IEEE INTERNET THINGS, V4, P64, DOI 10.1109/JIOT.2016.2618909
   Raghavan R, 2017, INT J MECH ENG TECHN, V8, P173
   Rajput D.S., 2019, P INT C SUST COMP SC, P1616
   Reddy G. Thippa, 2014, Journal of Theoretical and Applied Information Technology, V59, P317
   Reddy M. Praveen Kumar, 2017, New Review of Information Networking, V22, P54, DOI 10.1080/13614576.2017.1297734
   Reddy MPK, 2019, CLUSTER COMPUT, V22, P13095, DOI 10.1007/s10586-017-1261-1
   Reddy MPK, 2019, CLUSTER COMPUT, V22, P1361, DOI 10.1007/s10586-017-1628-3
   Sadek Rowayda A., 2018, Future Computing and Informatics Journal, V3, P166, DOI 10.1016/j.fcij.2018.02.003
   Shao XQ, 2018, IEEE T IND INFORM, V14, P4622, DOI 10.1109/TII.2018.2856776
   Smieee CI, 2018, IEEE INT CONF INDUST, P1935, DOI 10.1109/ICIT.2018.8352482
   Song L, 2019, COMPUT NETW, V153, P92, DOI 10.1016/j.comnet.2019.03.003
   Srinidhi N. N., 2019, Ubiquitous Communications and Network Computing. Second EAI International Conference. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 276), P80, DOI 10.1007/978-3-030-20615-4_6
   Tang JN, 2014, J NETW COMPUT APPL, V40, P1, DOI 10.1016/j.jnca.2013.07.009
   Thangaramya K, 2019, COMPUT NETW, V151, P211, DOI 10.1016/j.comnet.2019.01.024
   Verma S, 2017, IEEE COMMUN SURV TUT, V19, P1457, DOI 10.1109/COMST.2017.2694469
   Vincent DR, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19173667
   Wazid M, 2017, IEEE T DEPEND SECURE, V17, P391
   Xiong JB, 2019, IEEE INTERNET THINGS, V6, P1530, DOI 10.1109/JIOT.2018.2842773
   Zhang WP, 2018, ENERGY, V163, P191, DOI 10.1016/j.energy.2018.08.112
NR 44
TC 156
Z9 156
U1 11
U2 48
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2558
EP 2571
DI 10.1002/spe.2797
EA FEB 2020
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000512452700001
OA Green Accepted
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Sauvanaud, C
   Dholakia, A
   Guitart, J
   Kim, C
   Mayes, P
AF Sauvanaud, Carla
   Dholakia, Ajay
   Guitart, Jordi
   Kim, Chulho
   Mayes, Peter
TI Big data deployment in containerized infrastructures through the
   interconnection of network namespaces
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Big Data; Hadoop; namespaces; Singularity containers
AB Big Data applications tackle the challenge of fast handling of large streams of data. Their performance is not only dependent on the data frameworks implementation and the underlying hardware but also on the deployment scheme and its potential for fast scaling. Consequently, several efforts have focused on the ease of deployment of Big Data applications, notably through the use of containerization. This technology was indeed raised to bring multitenancy and multiprocessing out of clusters, providing high deployment flexibility through lightweight container images. Recent studies have focused mostly on Docker containers. Notwithstanding, this article is actually interested in recent Singularity containers as they provide more security and support high-performance computing (HPC) environments and, in this way, they can make Big Data applications benefit from the specialized hardware of HPC. Singularity 2.x, however, does not isolate network resources as required by most Big Data components. Singularity 3.x allows allocating each container with isolated network resources, but their interconnection requires a nontrivial amount of configuration effort. In this context, this article makes a functional contribution in the form of a deployment scheme based on the interconnection of network namespaces, through underlay and overlay networking approaches, to make Big Data applications easily deployable inside Singularity containers. We provide detailed account of our deployment scheme when using both interconnection approaches in the form of a "how-to-do-it" report, and we evaluate it by comparing three Big Data applications based on Hadoop when performing on a bare-metal infrastructure and on scenarios involving Singularity and Docker instances.
C1 [Sauvanaud, Carla; Guitart, Jordi] Spienter Univ Politecn Catalunya UPC, Comp Architecture Dept, Spienter Barcelona, Spain.
   [Dholakia, Ajay; Kim, Chulho; Mayes, Peter] Lenovo, Lenovo Data Ctr Grp, Morrisville, NC USA.
   [Guitart, Jordi] Spienter Barcelona Supercomp Ctr BSC, Dept Comp Sci, Spienter Barcelona, Spain.
C3 Legend Holdings; Lenovo
RP Guitart, J (corresponding author), Barcelona Supercomp Ctr BSC, Jordi Girona 31, Barcelona, Spain.
EM jordi.guitart@bsc.es
RI Guitart, Jordi/F-4147-2011
OI Guitart, Jordi/0000-0003-0751-3100
FU Generalitat de Catalunya [2017-SGR-1414]; Ministerio de Ciencia y
   Tecnologia [TIN2015-65316-P]
FX Generalitat de Catalunya, 2017-SGR-1414; Lenovo-BSC collaboration
   agreement; Ministerio de Ciencia y Tecnologia, TIN2015-65316-P
CR ARANGO C, PERFORMANCE EVALUATI
   Bhimani J, 2017, IEEE HIGH PERF EXTR
   BUELL J, 2015, TECHNICAL REPORT
   Fox Geoffrey, 2016, Big Data Benchmarking. 6th International Workshop, WBDB2015.ca, and 7th International Workshop, WBDB2015.in. Revised Selected Papers: LNCS 10044, P3, DOI 10.1007/978-3-319-49748-8_1
   HANKS S, 1994, 1701 RFC
   JAFFE D, TECHNICAL REPORT
   Kamburugamuve S, 2017, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UTILITY AND CLOUD COMPUTING (UCC' 17), P101, DOI 10.1145/3147213.3147232
   Kurtzer GM, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177459
   Lu XY, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON BIG DATA (BIG DATA), P253, DOI 10.1109/BigData.2016.7840611
   Mahalingam M., 2014, 7348 RFC
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   MEHTA R, 2013, TECHNICAL REPORT
   MIKE P, 2017, TECHNICAL REPORT
   Panda DK, 2017, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UTILITY AND CLOUD COMPUTING (UCC' 17), P189, DOI 10.1145/3147213.3149455
   PRAKASH P, 2013, 1770 PURD U
   Raj A, 2012, 2012 THIRD INTERNATIONAL CONFERENCE ON SERVICES IN EMERGING MARKETS (ICSEM), P50, DOI 10.1109/ICSEM.2012.15
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Trivedi M, 2017, LECT NOTES COMPUT SC, V10080, P121, DOI 10.1007/978-3-319-54334-5_9
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Xavier MG, 2014, EUROMICRO WORKSHOP P, P299, DOI 10.1109/PDP.2014.78
   Ye KJ, 2017, 2017 INTERNATIONAL CONFERENCE ON NETWORKING, ARCHITECTURE, AND STORAGE (NAS), P214
   Zhang R, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON CLOUD ENGINEERING (IC2E 2015), P365, DOI 10.1109/IC2E.2015.101
NR 22
TC 3
Z9 3
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1087
EP 1113
DI 10.1002/spe.2793
EA JAN 2020
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT6RF
UT WOS:000509414400001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zhou, H
   Hu, Y
   Ouyang, X
   Su, JS
   Koulouzis, S
   de Laat, C
   Zhao, ZM
AF Zhou, Huan
   Hu, Yang
   Ouyang, Xue
   Su, Jinshu
   Koulouzis, Spiros
   de Laat, Cees
   Zhao, Zhiming
TI CloudsStorm: A framework for seamlessly programming and controlling
   virtual infrastructure functions during the DevOps lifecycle of cloud
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE DevOps; federated clouds; infrastructure-as-a-service; networked virtual
   infrastructure
ID DEPLOYMENT; AWARE
AB The infrastructure-as-a-service (IaaS) model of cloud computing provides virtual infrastructure functions (VIFs), which allow application developers to flexibly provision suitable virtual machines' (VM) types and locations, and even configure the network connection for each VM. Because of the pay-as-you-go business model, IaaS provides an elastic way to operate applications on demand. However, in current cloud applications DevOps (software development and operations) lifecycle, the VM provisioning steps mainly rely on manually leveraging these VIFs. Moreover, these functions cannot be programmatically embedded into the application logic to control the infrastructure at runtime. Especially, the vendor lock-in issue, which different clouds provide different VIFs, also enlarges this gap between the cloud infrastructure management and application operation. To mitigate this gap, we designed and implemented a framework, CloudsStorm, which enables developers to easily leverage VIFs of different clouds and program them into their cloud applications. To be specific, CloudsStorm empowers applications with infrastructure programmability at design-level, infrastructure-level, and application-level. CloudsStorm also provides two infrastructure controlling modes, ie, active and passive mode, for applications at runtime. Besides, case studies about operating task-based and big data applications on clouds show that the monetary cost is significantly reduced through the seamless and on-demand infrastructure management provided by CloudsStorm. Finally, the scaling and recovery operation evaluations of CloudsStorm are performed to show its controlling performance. Compared with other tools, ie, "jcloud" and "cloudinit.d", the scaling and provisioning performance evaluations demonstrate that CloudsStorm can achieve at least 10% efficiency improvement in our experiment settings.
C1 [Zhou, Huan; Hu, Yang; Koulouzis, Spiros; de Laat, Cees; Zhao, Zhiming] Univ Amsterdam, Informat Inst, Sci Pk, NL-1098 XH Amsterdam, Netherlands.
   [Zhou, Huan; Ouyang, Xue; Su, Jinshu] Natl Univ Def Technol, Sch Comp Sci, Changsha, Hunan, Peoples R China.
   [Zhao, Zhiming] Univ Amsterdam, Inst Informat, Sci Pk 904, NL-1098 XH Amsterdam, Netherlands.
C3 University of Amsterdam; National University of Defense Technology -
   China; University of Amsterdam
RP Zhao, ZM (corresponding author), Univ Amsterdam, Informat Inst, Sci Pk, NL-1098 XH Amsterdam, Netherlands.
EM z.zhao@uva.nl
RI Zhou, Huan/ABF-5463-2021; Zhao, Zhiming/AAW-6752-2020; Su,
   Jinshu/M-1960-2014
OI Zhou, Huan/0000-0003-2319-4103; Zhao, Zhiming/0000-0002-6717-9418;
   Koulouzis, Spiros/0000-0001-8652-315X; Su, Jinshu/0000-0001-9273-616X
FU H2020 European Institute of Innovation and Technology [643963, 654182,
   676247]
FX H2020 European Institute of Innovation and Technology, Grant/Award
   Number: 643963, 654182 and 676247
CR Androulaki E, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190538
   Baldine Ilia., 2012, Thanasis Korakis, Michael Zink, and Maximilian Ott, editors, TRIDENTCOM, volume 44 of Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering, V44, P97
   Brogi A, 2018, SOFTWARE PRACT EXPER, V48, P2061, DOI 10.1002/spe.2625
   Caballer M, 2015, J GRID COMPUT, V13, P53, DOI 10.1007/s10723-014-9296-5
   Caballer M, 2014, J SYST SOFTWARE, V93, P187, DOI 10.1016/j.jss.2014.02.005
   Dastjerdi AV, 2015, SOFTWARE PRACT EXPER, V45, P197, DOI 10.1002/spe.2288
   Diaz-Montes J, 2015, IEEE INTERNET COMPUT, V19, P69, DOI 10.1109/MIC.2015.4
   Faure G, 2009, RES REPORT
   Fu M, 2017, SOFTWARE PRACT EXPER, V47, P223, DOI 10.1002/spe.2427
   Fuerst C, 2016, IEEE INFOCOM SER
   Hu Y, 2018, LECT NOTES COMPUT SC, V11014, P365, DOI 10.1007/978-3-319-96983-1_26
   Ilyushkin A, 2017, P 8 ACM SPEC INT C P
   Kang J-M, 2013, 2013 IFIP IEEE INT S
   Kang Joon-Myung., 2014, International Conference on Testbeds and Research Infrastructures, P3, DOI DOI 10.1007/978-3-319-13326-3_1
   Keahey K, 2008, 2008 IEEE 4 INT C ES
   Koulouzis S, 2016, FUTURE GENER COMP SY, V56, P64, DOI 10.1016/j.future.2015.09.032
   Morris K., 2016, Infrastructure as Code: Managing Servers in the Cloud
   Nastic S, 2014, 2014 INT C FUT INT T
   Petcu D, 2013, J CLOUD COMPUT-ADV S, V2, DOI 10.1186/2192-113X-2-12
   Shi W, 2016, 2016 IEEE INTERNATIONAL WORKSHOP ON ELECTROMAGNETICS: APPLICATIONS AND STUDENT INNOVATION COMPETITION (IWEM)
   Soleymani B., 2017, IEEE Transactions on Services Computing, P1
   Stefanic P, 2019, FUTURE GENER COMP SY, V99, P197, DOI 10.1016/j.future.2019.04.008
   Taherizadeh S, 2018, J SYST SOFTWARE, V136, P19, DOI 10.1016/j.jss.2017.10.033
   Venkateswaran S, 2018, SOFTWARE PRACT EXPER, V48, P345, DOI 10.1002/spe.2496
   Wang JC, 2017, FUTURE GENER COMP SY, V75, P365, DOI 10.1016/j.future.2017.02.001
   Wang XF, 2011, FUTURE GENER COMP SY, V27, P1124, DOI 10.1016/j.future.2011.03.008
   Wettinger J, 2016, FUTURE GENER COMP SY, V56, P317, DOI 10.1016/j.future.2015.07.017
   Zhou H, 2016, 2016 IEEE 9 INT C CL
   Zhou H, 2018, LECT NOTES COMPUT SC, V10861, P644, DOI 10.1007/978-3-319-93701-4_51
   Ziafat H, 2018, SOFTWARE PRACT EXPER, V48, P1820, DOI 10.1002/spe.2601
NR 30
TC 13
Z9 14
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2019
VL 49
IS 10
BP 1421
EP 1447
DI 10.1002/spe.2741
EA AUG 2019
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU8BK
UT WOS:000480358100001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Joseph, CT
   Chandrasekaran, K
AF Joseph, Christina Terese
   Chandrasekaran, K.
TI Straddling the crevasse: A review of microservice software architecture
   foundations and recent advancements
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE cloud computing; containers; microservice architecture; microservices;
   service computing; software engineering; virtualization
ID CLOUD; FUTURE; MANAGEMENT; PATTERN; ISSUES; ACCESS
AB Microservice architecture style has been gaining wide impetus in the software engineering industry. Researchers and practitioners have adopted the microservices concepts into several application domains such as the internet of things, cloud computing, service computing, and healthcare. Applications developed in alignment with the microservices principles require an underlying platform with management capabilities to coordinate the different microservice units and ensure that the application functionalities are delivered to the user. A multitude of approaches has been proposed for the various tasks in microservices-based systems. However, since the field is relatively young, there is a need to organize the different research works. In this study, we present a comprehensive review of the research approaches directed toward microservice architectures and propose a multilevel taxonomy to categorize the existing research. The study also discusses the different distributed computing paradigms employing microservices and identifies the open research challenges in the domain.
C1 [Joseph, Christina Terese; Chandrasekaran, K.] Natl Inst Technol Karnataka, Distributed & Cloud Comp Lab, Dept Comp Sci & Engn, Surathkal 575025, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Karnataka
RP Joseph, CT (corresponding author), Natl Inst Technol Karnataka, Distributed & Cloud Comp Lab, Dept Comp Sci & Engn, Surathkal 575025, India.
EM xtina1232@gmail.com
RI K, C/KGL-6368-2024; Joseph, Christina/AAK-3574-2020; K,
   Chandrasekaran/Y-9958-2019
OI K, Chandrasekaran/0000-0002-8855-3472; Joseph,
   Christina/0000-0001-8439-7487
CR Abeysinghe A, 2016, TECHNICAL REPORT
   Aderaldo C. M., 2017, P 1 INT WORKSH EST C
   Ahmadvand M, 2016, 2016 IEEE 24 INT REQ
   Ahuja RPS, 2017, US Patent, Patent No. [9,716,617, 9716617]
   Almeida Washington Henrique Carvalho, 2017, 12 INT C SOFTW ENG A
   Alshuqayran N, 2016, 2016 IEEE 9 INT C SE
   [Anonymous], 2017, ARXIV170404213
   [Anonymous], 1988, OBJECT ORIENTED SOFT
   [Anonymous], AM J COMPUTER SCI EN
   [Anonymous], 2017, THESIS
   [Anonymous], 2014, TECHNICAL REPORT
   Arndt N, 2015, P 11 INT C SEM SYST
   Asik T, 2017, 15 IEEE INT C SOFTW
   Bakshi K, 2017, AEROSP CONF PROC
   Balalaie A, 2015, ADV SERVICE ORIENTED
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Baskarada S, 2020, J COMPUT INFORM SYST, V60, P428, DOI 10.1080/08874417.2018.1520056
   Baylov K, 2017, INTELLIGENT DISTRIBU, VXI
   Berger C, 2017, 2017 IEEE INT C SOFT
   Bernstein D, 2014, IEEE CLOUD COMPUT, V1, P81, DOI 10.1109/MCC.2014.51
   Bogner J., 2018, P 10 CENTR EUR WORKS
   BOGNER J, 2017, P 11 EUR C SOFTW
   Bogner J, 2016, 2016 IEEE 20 INT ENT
   Boner J, 2014, REACTIVE MANIFESTO
   Borodulin K, 2017, P 10 INT C UT CLOUD
   Brogi A, 2017, SOFTWARE ENG FORMAL
   Butzin B, 2016, IEEE INT C EMERG
   Caporuscio M, 2017, 2017 IEEE INT C SOFT
   Cardozo N, 2016, P 2016 ACM INT S NEW
   Carnevale L, 2017, CLOUD INFRASTRUCTURE
   Cerny T, 2017, APPL COMPUT REV, V17, P29, DOI [10.1145/3129676.3129682, 10.1145/3183628.3183631]
   Cherradi G, 2017, PROCEDIA COMPUT SCI, V109, P982, DOI 10.1016/j.procs.2017.05.457
   Christoforou A, 2017, SERV OR COMP 15 INT
   Ciavotta M, 2017, PROCEDIA MANUF, V11, P931, DOI 10.1016/j.promfg.2017.07.197
   Ciuffoletti A, 2015, PROCEDIA COMPUT SCI, V68, P163, DOI 10.1016/j.procs.2015.09.232
   deCamargo A, 2016, P 18 INT C INF INT W
   deGuzman PC, 2018, ARXIV180210375
   deGuzman PC, 2018, INT J COMPUT INF ENG, V12
   Derakhshanmanesh M, 2016, SOFTW ENG WORKSH WIE
   Diepenbrock A, 2017, INFORM 2017
   DiFrancesco P, 2017, 2017 IEEE INT C SOFT
   Dragoni N., 2016, ARXIV160604036
   Du Q, 2018, ALG ARCH PAR PROC 18
   Dullmann TF, 2017, P 8 ACM SPEC INT C P
   Escobar D, 2016, PROC LAT AM COMPUT C
   Esposito C, 2017, IEEE COMMUN MAG, V55, P102, DOI 10.1109/MCOM.2017.1700089
   Esposito C, 2016, IEEE CLOUD COMPUT, V3, P10, DOI 10.1109/MCC.2016.105
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Familiar B., 2015, MICROSERVICES IOT AZ, P133
   Familiar B., 2015, MICROSERVICES IOT AZ
   Fan C.-Y., 2017, 2017 IEEE INT C AI M
   Fano A, 2002, COMMUN ACM, V45, P83, DOI 10.1145/585597.585620
   Fazio M, 2016, IEEE CLOUD COMPUT, V3, P81, DOI 10.1109/MCC.2016.112
   Fernandez-Villamor J. I, 2010, 2 INT C AG ART INT I
   Fetzer C, 2016, IEEE SECUR PRIV, V14, P86, DOI 10.1109/MSP.2016.129
   Florio L, 2015, P 2015 10 JOINT M FD
   Gabbrielli M, 2016, THEORY PRACTICE FORM
   Gadea C, 2016, 3RD WORKSHOP ON CROSSCLOUD INFRASTRUCTURES & PLATFORMS (CROSSCLOUD 2016), DOI 10.1145/2904111.2904115
   Gan Y, 2019, P 24 INT C ARCH SUPP
   Gao X, 2017, 2017 31 INT C ADV IN
   Garriga M, 2017, SOFTW ENG FORM METH
   Geisriegler M, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P359, DOI 10.1109/SEAA.2017.39
   Giaretta A, 2017, ARXIV170905635
   Granchelli G, 2017, 2017 IEEE INT C SOFT
   Guerrero C, 2018, J GRID COMPUT, V16, P113, DOI 10.1007/s10723-017-9419-x
   Guidi C, 2017, ARXIV170408073
   Guo D, 2016, IEEE S SERV OR SYST
   Gupta A, 2015, REFACTORING YOUR JAV
   Harms H, 2017, P 2017 11 JOINT M FD
   HASELBOCK S, 2017, 2017 IEEE INT C SOFT
   Hassan S, 2017, 2017 IEEE INT C SOFT
   Hassan S, 2016, 2016 IEEE INT C SERV
   Hasselbring W, 2016, P 7 ACM SPEC INT C P
   He XY, 2017, J PHYS CONF SER, V910, DOI 10.1088/1742-6596/910/1/012060
   Heinrich R., 2017, P 8 ACM SPEC INT C P
   Heorhiadi V, 2016, 36 IEEE INT C DISTR
   Hill R, 2017, ARXIV170907037
   Hole K.J., 2016, ANTIFRAGILE ICT SYST
   HoseinyFarahabady M., 2017, C SERVICE ORIENTED C
   Jamshidi P, 2017, SOFTWARE PRACT EXPER, V47, P1159, DOI 10.1002/spe.2442
   Jaramillo D, 2016, IEEE SOUTHEASTCON
   Jarman P, 2015, TECHNICAL REPORT
   Jarwar MA, 2017, 2017 9 INT C UB FUT
   Johanson A, 2016, 6 INT WORKSH CLIM IN
   Kalske M, 2017, CURRENT TRENDS WEB E
   Kampars J, 2017, P 11 INT SCI PRACT C
   Karwowski W, 2017, INFORM SYSTEMS ARCHI
   Kecskemeti G, 2016, 2016 INT C HIGH PERF
   Khan A, 2017, IEEE CLOUD COMPUT, V4, P42
   Khanda K, 2017, 2017 31 INT C ADV IN
   Khazaei H, 2016, 2016 IEEE INT C CLOU
   Khazaei H, 2017, 2017 IEEE CONFERENCE ON NETWORK SOFTWARIZATION (IEEE NETSOFT)
   Killalea T, 2016, COMMUN ACM, V59, P42, DOI 10.1145/2948985
   Kiss T, 2019, FUTURE GENER COMP SY, V94, P937, DOI 10.1016/j.future.2017.09.050
   Kleehaus M, 2018, INFORM SYSTEMS BIG D
   Klock S., 2017, 2017 IEEE INT C SOFT
   Koschmider A, 2017, 8 INT WORKSH ENT MOD
   Kratzke N, 2016, P 6 INT C CLOUD COMP
   Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001
   Krivic P, 2017, AGENT MULTIAGENT SYS
   Krylovskiy A, 2015, 2015 3 INT C FUT INT
   Kukade PP., 2015, INT J SCI RES, V4, P1960
   Lange PD, 2016, LECT NOTES INFORMATI
   Le VD, 2015, 13 IEEE INT C IND IN
   Lee JY, 2016, IEEE ICCE
   LIN J, 2016, P 2016 INT C APPL
   LINTHICUM DS, 2016, IEEE CLOUD COMPUT, V3, P6
   Long KB, 2017, 9 INT C UB FUT NETW
   López M, 2017, COMPAT POW ELECTR, P10, DOI 10.1109/CPE.2017.7915137
   Lu D, 2017, 2017 IEEE S SERV OR
   MacKenzie C., 2006, Public Rev. Draft, V12, P18
   Magableh B, 2019, ADV INFORM NETWORKIN
   Malavalli D, 2015, 11 INT C NETW SERV M
   Mann S, 2017, ESL APPL LINGUIST, P100
   Marru S, 2015, P 1 WORKSH SCI CYB R
   Mayer B, 2017, 2017 IEEE INT C SOFT
   Meinke K, 2015, SOFTWARE ENG FORMAL
   Messina Antonio, 2016, 8 INT C ADV DAT KNOW
   Montesi F., 2016, ARXIV160905830
   Nadareishvili I., 2016, Microservice Architecture: Aligning Principles, Practices, and Culture
   Naily MA, 2017, SOFTWARE ENG FORMAL
   Namiot D., 2014, International Journal of Open Information Technologies, V2, P24
   Nardelli M, 2017, IEEE CLOUD COMPUT, V4, P68, DOI 10.1109/MCC.2017.22
   Newman S., 2015, BUILDING MICROSERVIC
   Nguyen P, 2017, 2017 IEEE INT C AUT
   NyflOtt MS, 2017, THESIS
   O'Connor R, 2016, P INT C SOFTW SYST P
   O'Connor RV, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1866
   OAKES E., 2017, 2017 IEEE 37 INT C D
   Oberhauser R, 2017, P 7 INT S BUS MOD SO
   Otterstad C, 2017, SERVICE ORIENTED CLO
   Pahl C, 2016, P 6 INT C CLOUD COMP
   Pahl C, 2015, IEEE CLOUD COMPUT, V2, P24, DOI 10.1109/MCC.2015.51
   Papazoglou M.P., 2003, P 4 INT C WEB INF SY
   Paschke A, 2016, BUS INFORM SYST ENG+, V58, P329, DOI 10.1007/s12599-016-0447-z
   Peinl R, 2015, P 5 INT C CLOUD COMP
   Petrasch R, 2017, INT JOINT CONF COMP
   Potvin P, 2016, L N INST COMP SCI SO, V166, P263, DOI 10.1007/978-3-319-33681-7_22
   Pozdniakova O, 2017, BALT J MOD COMPUT, V5, P124, DOI 10.22364/bjmc.2017.5.1.08
   Preuveneers D, 2017, FUTURE INTERNET, V9, DOI 10.3390/fi9040058
   Qanbari S, 2016, 2016 IEEE 1 INT C IN
   Rademacher F, 2017, 2017 IEEE INT C SOFT
   Rajagopalan R, 2015, 2015 IEEE GREEN ENERGY AND SYSTEMS CONFERENCE (IGESC), P7, DOI 10.1109/IGESC.2015.7359383
   Rajagopalan S, 2016, 2016 USENIX ANN TECH
   Ramakrishnan R, 2017, P 2017 ACM INT C MAN
   Ranjan, 2018, 2018 IEEE INT C SERV
   Richardson C, 2018, MICROSERVICE PATTERN
   Richter D, 2017, 2017 IEEE INT C SOFT
   Rodriguez MA, 2019, SOFTWARE PRACT EXPER, V49, P698, DOI 10.1002/spe.2660
   Rosenberg D, 2017, P 2017 INT C SOFTW S
   Rotter C, 2017, 20 C INN CLOUDS INT
   Rufino J, 2017, 2017 INTERNATIONAL SMART CITIES CONFERENCE (ISC2)
   Rusek M., 2016, INT C SYST SCI, P142
   Safina L, 2016, 30 IEEE INT C ADV IN
   Salah T, 2016, 2016 11 INT C INT TE
   Santoro D., 2017, 2017 IEEE INT C CLOU
   Savchenko D., 2015, URAL WORKSHOP PARALL
   Savchenko D. I., 2015, 38 INT CONV INF COMM
   Schermann G, 2015, SERVICE ORIENTED COM
   Schermann G, 2016, P 17 INT MIDDL C TRE
   Selimi M., 2017, P 17 IEEE ACM INT S
   Sharma V, 2018, COMPUT COMMUN, V118, P120, DOI 10.1016/j.comcom.2017.10.009
   Sill A, 2016, IEEE CLOUD COMPUT, V3, P76, DOI 10.1109/MCC.2016.111
   Singh S., 2016, 2016 2 INT C APPL TH
   Singleton A, 2016, IEEE CLOUD COMPUT, V3, P16, DOI 10.1109/MCC.2016.109
   Soenen T, 2017, PROCEEDINGS OF 2017 9TH INTERNATIONAL WORKSHOP ON RESILIENT NETWORKS DESIGN AND MODELING (RNDM)
   Soltesz S., 2007, Operating Systems Review, V41, P275, DOI 10.1145/1272998.1273025
   Sousa G, 2016, 9 INT C CLOUD COMP C
   Sriraman A., 2018, 2018 IEEE INT S WORK
   Stroustrup B., 1994, The Design and Evolution of C++
   STUBBS J, 2015, 2015 7 INT WORKSH SC
   Sun L, 2017, CHINA COMMUN, V14, P154, DOI 10.1109/CC.2017.7868163
   Sun Y, 2015, 7 IEEE INT C CLOUD C
   Sundar A, 2018, INSIGHT MICROSERVICE
   Tai S, 2016, ADV SERVICE ORIENTED
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Tellago B, 2016, TECHNICAL REPORT
   Thalheim J., 2017, P 18 ACM IFIP USENIX
   Thanh TQ, 2016, 2016 17 INT TEL NETW
   Thiele T, 2016, 2016 IEEE 4 INT C FU
   Tizzei LP, 2017, P 21 INT SYST SOFTW, VA
   Toffetti G., 2015, INT WORKSHOP AUTOMAT
   Toffetti G, 2017, FUTURE GENER COMP SY, V72, P165, DOI 10.1016/j.future.2016.09.002
   Torkura K. A., 2017, P 10 INT C UT CLOUD
   Torkura KA, 2017, 2017 IEEE INT C SMAR
   Tsai WT, 2005, IEEE INT WORKSH SERV
   Ueda T., 2016, 2016 IEEE INT S WORK
   Ulander D, 2017, THESIS
   Vandikas K, 2016, 2016 CLOUDIFICATION OF THE INTERNET OF THINGS (CIOT)
   Versteden A, 2016, 4 WORKSH SERV APPL L
   Versteden A., 2015, INT USEWOD WORKSH
   Viennot N., 2015, EUR C COMP SYST
   Villamizar M, 2015, 2015 10 COMP COL C 1
   Villamizar M, 2016, 2016 16 IEEE ACM INT
   Villari M, 2017, COMPLEX INTELLIGENT
   Villari M, 2016, IEEE CLOUD COMPUT, V3, P76, DOI 10.1109/MCC.2016.124
   Vresk T, 2016, 2016 39 INT CONV INF
   Vural H, 2017, COMP SCI ITS APPL IC
   WIZENTY P, 2017, P 11 EUR C SOFTW, DOI DOI 10.1145/3129790.3129821
   Xu C, 2016, 2016 IEEE S SERV OR
   Yu Y, 2016, 2016 IEEE ADV INF MA
   Zdun U, 2017, SERV OR COMP 15 INT
   Zheng T, 2017, 5 INT C ADV CLOUD BI
   Zimmermann A, 2017, INTELLIGENT DECISION
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
   Zúñiga-Prieto M, 2017, L N INF SYST ORGAN, V22, P51, DOI 10.1007/978-3-319-52593-8_4
NR 206
TC 22
Z9 26
U1 6
U2 68
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2019
VL 49
IS 10
BP 1448
EP 1484
DI 10.1002/spe.2729
EA JUL 2019
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU8BK
UT WOS:000478118100001
DA 2024-07-18
ER

PT J
AU Khorsand, R
   Ghobaei-Arani, M
   Ramezanpour, M
AF Khorsand, Reihaneh
   Ghobaei-Arani, Mostafa
   Ramezanpour, Mohammadreza
TI FAHP approach for autonomic resource provisioning of multitier
   applications in cloud computing environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomic computing; cloud computing; FAHP; multitier applications;
   resource provisioning; workload prediction
ID AWARE; ELASTICITY; ALGORITHM; ERROR
AB Recent advancements in web-based application, especially in cloud computing environment, allows cloud service providers to deploy and provide web-based services in the form of multitier applications. One of the most suitable infrastructure for the running of multitier applications is a cloud computing infrastructure. Since the arrival rate of users to the multitier applications varies over the time, deciding about the right amount of resources required to handle the each tier of multitier applications is not trivial, and it depends on the current workload of its each tier. Therefore, it is necessary to automatically provision resources to deal with fluctuating demands of the multitier applications. In this paper, we propose a hybrid resource provisioning approach for multitier applications based on a combination of the concept of the autonomic computing and the fuzzy analytical hierarchy process approach. Moreover, we present a framework based on MAPE-k control loop for autonomous resource provisioning of multitier applications in cloud computing environments. The effectiveness of the proposed approach under real and synthetic workloads was evaluated. The experimental results indicate that the proposed solution outperforms in terms of allocated virtual machines, response time, and cost compared with the other approaches.
C1 [Khorsand, Reihaneh] Islamic Azad Univ, Dolatabad Branch, Dept Comp Engn, Esfahan, Iran.
   [Ghobaei-Arani, Mostafa] Islamic Azad Univ, Qom Branch, Dept Comp Engn, Qom, Iran.
   [Ramezanpour, Mohammadreza] Islamic Azad Univ, Mobarakeh Branch, Dept Comp Engn, Mobarakeh, Isfahan, Iran.
C3 Islamic Azad University; Islamic Azad University; Islamic Azad
   University
RP Khorsand, R (corresponding author), Islamic Azad Univ, Dolatabad Branch, Dept Comp Engn, Esfahan, Iran.
EM R.khorsand@iauda.ac.ir
RI Ghobaei-Arani, Mostafa/K-5058-2015; Khorsand, Reihaneh/AAN-5797-2021;
   Ramezanpour, Mohammadreza/AAD-6944-2021
OI Ghobaei-Arani, Mostafa/0000-0003-2639-0900; Ramezanpour,
   Mohammadreza/0000-0002-1588-0982
FU Islamic Azad University of Dolatabad Branch [97-14-425]
FX Islamic Azad University of Dolatabad Branch, Grant/Award Number:
   97-14-425
CR Amiri M, 2017, J NETW COMPUT APPL, V82, P93, DOI 10.1016/j.jnca.2017.01.016
   [Anonymous], 2000, Technical Analysis from A to Z
   Bankole A.A., 2013, 2013 26 IEEE CAN C E, P1
   Bankole AA, 2013, 2013 IEEE 7 INT S SE
   Beltrán M, 2015, J SUPERCOMPUT, V71, P2221, DOI 10.1007/s11227-015-1380-5
   Bi J, 2015, ENTERP INF SYST-UK, V9, P743, DOI 10.1080/17517575.2013.830342
   Biswas A, 2014, 2014 IEEE 6 INT C CL
   BUCKLEY JJ, 1985, FUZZY SET SYST, V17, P233, DOI 10.1016/0165-0114(85)90090-9
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Chang DY, 1996, EUR J OPER RES, V95, P649, DOI 10.1016/0377-2217(95)00300-2
   Ching-Chow Yang, 2004, Journal of the Chinese Institute of Industrial Engineers, V21, P543, DOI 10.1080/10170660409509433
   Chou SW, 2008, DECIS SUPPORT SYST, V46, P149, DOI 10.1016/j.dss.2008.06.003
   Computing A., 2006, IBM White Paper, 31, V31, P1
   Demirel T, 2008, SPRINGER SER OPTIM A, V16, P53
   Ghobaei-Arani M, 2018, SOFT COMPUT, V22, P8353, DOI 10.1007/s00500-017-2783-4
   Ghobaei-Arani M, 2018, FUTURE GENER COMP SY, V78, P191, DOI 10.1016/j.future.2017.02.022
   Ghobaei-Arani M, 2016, CLUSTER COMPUT, V19, P1017, DOI 10.1007/s10586-016-0574-9
   Grozev N, 2015, COMPUT J, V58, P1, DOI 10.1093/comjnl/bxt107
   Grozev N, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2662112
   Gumus AT, 2009, EXPERT SYST APPL, V36, P4067, DOI 10.1016/j.eswa.2008.03.013
   Han R, 2014, FUTURE GENER COMP SY, V32, P82, DOI 10.1016/j.future.2012.05.018
   Howell D.C., 2014, MEDIAN ABSOLUTE DEVI
   Hu RD, 2014, SCI WORLD J, DOI 10.1155/2014/321231
   Huang D, 2014, IEEE COMMUN SURV TUT, V16, P1574, DOI 10.1109/SURV.2014.010814.00060
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Iqbal W, 2011, FUTURE GENER COMP SY, V27, P871, DOI 10.1016/j.future.2010.10.016
   Jamshidi P, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P95, DOI 10.1145/2593929.2593940
   Kaur PD, 2014, FUTURE GENER COMP SY, V37, P14, DOI 10.1016/j.future.2014.02.018
   Kavalionak H, 2015, PEER PEER NETW APPL, V8, P301, DOI 10.1007/s12083-013-0232-4
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Khorsand R, 2017, J SYST SOFTWARE, V132, P253, DOI 10.1016/j.jss.2017.05.017
   Khorsand R, 2017, J SUPERCOMPUT, V73, P2430, DOI 10.1007/s11227-016-1928-z
   Kirschnick J, 2012, SOFTWARE PRACT EXPER, V42, P395, DOI 10.1002/spe.1090
   García AL, 2018, SOFTWARE PRACT EXPER, V48, P486, DOI 10.1002/spe.2544
   Malkowski SJ, 2011, P 8 ACM INT C AUT CO
   Mao WT, 2014, NEUROCOMPUTING, V130, P10, DOI 10.1016/j.neucom.2013.01.058
   Marzolla M, 2012, COMPUT ENTERTAIN, V10, DOI 10.1145/2381876.2381880
   Matsunaga A., 2010, P 2010 10 IEEE ACM I
   POLI AA, 1993, ATMOS ENVIRON A-GEN, V27, P2427, DOI 10.1016/0960-1686(93)90410-Z
   Qu CH, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3148149
   RahimiZadeh K, 2015, J NETW COMPUT APPL, V56, P166, DOI 10.1016/j.jnca.2015.06.020
   Saaty T.L, 1980, Advanced Optimization and Decision-Making Techniques in Textile Manufacturing, DOI DOI 10.1201/9780429504419-2
   Safari M, 2018, SIMUL MODEL PRACT TH, V87, P311, DOI 10.1016/j.simpat.2018.07.006
   Sapankevych NL, 2009, IEEE COMPUT INTELL M, V4, P24, DOI 10.1109/MCI.2009.932254
   Sheikhalishahi M, 2015, SOFTWARE PRACT EXPER, V45, P161, DOI 10.1002/spe.2223
   Smola A.J., 1998, P 8 INT C ART NEUR N
   Urgaonkar B, 2008, ACM T AUTON ADAP SYS, V3, DOI 10.1145/1342171.1342172
   Vapnik VN, 1999, IEEE T NEURAL NETWOR, V10, P988, DOI 10.1109/72.788640
   Wang Z, 2009, IEEE SIGNAL PROC MAG, V26, P98, DOI 10.1109/MSP.2008.930649
   Wu H, 2013, FRONT COMPUT SCI-CHI, V7, P459, DOI 10.1007/s11704-013-2201-8
   Zúñiga-Prieto M, 2018, SOFTWARE PRACT EXPER, V48, P327, DOI 10.1002/spe.2457
NR 52
TC 39
Z9 40
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2147
EP 2173
DI 10.1002/spe.2627
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700002
OA Bronze
DA 2024-07-18
ER

PT J
AU Etchevers, X
   Salaün, G
   Boyer, F
   Coupaye, T
   De Palma, N
AF Etchevers, Xavier
   Salaun, Gwen
   Boyer, Fabienne
   Coupaye, Thierry
   De Palma, Noel
TI Reliable self-deployment of distributed cloud applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed applications; software components; automatic deployment;
   robustness and reliability
ID MODEL
AB Cloud applications consist of a set of interconnected software elements distributed over several virtual machines, themselves hosted on remote physical servers. Most existing solutions for deploying such applications require human intervention to configure parts of the system, do not conform to functional dependencies among elements that must be respected when starting them, and do not handle virtual machine failures that can occur when deploying an application. This paper presents a self-deployment protocol that was designed to automatically configure a set of software elements to be deployed on different virtual machines. This protocol works in a decentralized way, that is, there is no need for a centralized server. It also starts the software elements in a certain order, respecting important architectural invariants. This protocol supports virtual machine and network failures and always succeeds in deploying an application when faced with a finite number of failures. Designing such highly parallel management protocols is difficult; therefore, formal modeling techniques and verification tools were used for validation purposes. The protocol was implemented in Java and was used to deploy industrial applications. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Etchevers, Xavier; Coupaye, Thierry] Orange Labs, Meylan, France.
   [Salaun, Gwen; Boyer, Fabienne; De Palma, Noel] Univ Grenoble Alpes, Grenoble, France.
C3 Orange SA; Communaute Universite Grenoble Alpes; Universite Grenoble
   Alpes (UGA)
RP Etchevers, X (corresponding author), 28 Chemin Vieux Chene, F-38240 Meylan, France.
EM xavier.etchevers@orange.com
RI Coupaye (PhD, HDR), Thierry/AAC-2526-2022; Coupaye,
   Thierry/IWU-7448-2023
FU OpenCloudware project; French Fonds national pour la Societe Numerique
   (FSN); Poles Minalogic, Systematic; Poles Minalogic, Systematic, and SCS
FX This work was supported by the OpenCloudware project (2012-2015), which
   is funded by the French Fonds national pour la Societe Numerique (FSN),
   and is supported by Poles Minalogic, Systematic, and SCS.
CR Abid Rim, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P178, DOI 10.1007/978-3-319-02444-8_14
   [Anonymous], P 19 ACM INT S HIGH
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baduel L, 2006, GRID COMPUTING: SOFTWARE ENVIRONMENTS AND TOOLS, P205, DOI 10.1007/1-84628-339-6_9
   Becker T., 1994, Proceedings Second International Workshop on Configurable Distributed Systems (Cat. No.94TH0651-0), P36, DOI 10.1109/IWCDS.1994.289937
   Bellissard L., 1999, Proceedings of the 18th IEEE Symposium on Reliable Distributed Systems, P294, DOI 10.1109/RELDIS.1999.805107
   Breitenbücher U, 2013, LECT NOTES COMPUT SC, V8185, P130, DOI 10.1007/978-3-642-41030-7_9
   Brogi A, 2015, LECT NOTES COMPUT SC, V9306, P19, DOI 10.1007/978-3-319-24072-5_2
   Broto L, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P1658
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Budhiraja N., 1992, Second Workshop on the Management of Replicated Data (Cat. No.92TH0489-5), P47, DOI 10.1109/MRD.1992.242619
   Champelovier D., 2011, Reference Manual of the LOTOS NT to LOTOS Translator-Version 5.4
   CHANDY KM, 1985, ACM T COMPUT SYST, V3, P63, DOI 10.1145/214451.214456
   CHEREQUE M, 1992, FTCS-22 : THE TWENTY-SECOND INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING, P28
   Chohan N, 2010, L N INST COMP SCI SO, V34, P57
   Di Cosmo R, 2014, INFORM COMPUT, V239, P100, DOI 10.1016/j.ic.2014.11.002
   Dillenseger B, 2009, ANN TELECOMMUN, V64, P101, DOI 10.1007/s12243-008-0067-9
   Durán F, 2016, J SYST SOFTWARE, V122, P524, DOI 10.1016/j.jss.2015.09.020
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Elnozahy EN, 2002, ACM COMPUT SURV, V34, P375, DOI 10.1145/568522.568525
   Etchevers X., 2011, Proceedings of the 2011 IEEE 4th International Conference on Utility and Cloud Computing (UCC 2011), P170, DOI 10.1109/UCC.2011.32
   Etchevers X., 2011, Proceedings of the 2011 IEEE 4th International Conference on Cloud Computing (CLOUD 2011), P668, DOI 10.1109/CLOUD.2011.65
   Etchevers X., 2014, P SAC 2014, P1331
   Etchevers X, 2017, SOFTWARE PRACT EXPER, V47, P3, DOI 10.1002/spe.2400
   Fischer J, 2012, ACM SIGPLAN NOTICES, V47, P263, DOI 10.1145/2345156.2254096
   Garavel H, 2011, LECT NOTES COMPUT SC, V6605, P372, DOI 10.1007/978-3-642-19835-9_33
   Goldsack Patrick, 2009, Operating Systems Review, V43, P16, DOI 10.1145/1496909.1496915
   Hermenier F, 2013, IEEE T DEPEND SECURE, V10, P273, DOI 10.1109/TDSC.2013.5
   Kirschnick J, 2012, SOFTWARE PRACT EXPER, V42, P395, DOI 10.1002/spe.1090
   Kwiatkowski N, 2013, MASTERS DEGREE REPOR
   LAMPORT L, 1978, COMPUT NETWORKS ISDN, V2, P95, DOI 10.1016/0376-5075(78)90045-4
   LETONDEUR L, 2014, P ICCAC14, P172
   Mateescu R, 2008, LECT NOTES COMPUT SC, V5014, P148, DOI 10.1007/978-3-540-68237-0_12
   Milner R., 1989, Communication and concurrency
   Nurmi D, 2009, CCGRID: 2009 9TH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P124, DOI 10.1109/CCGRID.2009.93
   Ren Y, 2002, 2002 PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P125, DOI 10.1109/PRDC.2002.1185628
   Saha GK, 2006, SOFTWARE BASED FAULT
   SALAUN G., 2012, P SAC 12, P1278
   SCHNEIDER FB, 1990, COMPUT SURV, V22, P299, DOI 10.1145/98163.98167
   van Renesse R, 2010, LECT NOTES COMPUT SC, V5959, P19, DOI 10.1007/978-3-642-11294-2_2
   vanRenesse R, 1996, COMMUN ACM, V39, P76, DOI 10.1145/227210.227229
   Yin Q, 2008, P HOTDEP08
   Zamojski W, 2006, DEPCOS-RELCOMEX 2006, P100
NR 43
TC 16
Z9 16
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2017
VL 47
IS 1
BP 3
EP 20
DI 10.1002/spe.2400
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI5DO
UT WOS:000392514400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Youssef, A
   Maheswaran, M
   Youssef, L
AF Youssef, Ahmed
   Maheswaran, Muthucumaru
   Youssef, Lamis
TI Wireless GINI: an educational platform for hosting virtual wireless
   networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE virtualization; computer networks; wireless; experimentation platform
AB We describe Wireless GINI, a wireless platform for hosting virtual networks. Wireless GINI Is Not Internet (GINI) allows each virtual network to define its own topology and network configuration, while amortizing costs by sharing the physical infrastructure. The platform also creates mechanisms to readily integrate physical wireless devices into a deployed network. The platform supports a diverse combination of network elements that are all integrated into one custom Internet. The platform seamlessly integrates process-emulated components running on the user machine, wireless mesh overlays deployed on the wireless platform, and generic wireless devices connected to the user's custom network. Wireless GINI provides a user-friendly interface that makes the physical setup process completely transparent to the user. A centralized server is used to provide this transparency, handle user requests, and automatically provision the shared physical infrastructure. We describe the design and implementation of Wireless GINI. Moreover, we evaluate the performance of the platform and suggest several educational experiments that can be conducted on this new platform. A detailed survey of the existing toolkits and platformsand a comparison with Wireless GINI are also provided. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Youssef, Ahmed; Maheswaran, Muthucumaru] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0E9, Canada.
   [Youssef, Lamis] Dalhousie Univ, Dept Ind Engn, Halifax, NS B3J IB6, Canada.
C3 McGill University; Dalhousie University
RP Maheswaran, M (corresponding author), McGill Univ, Dept Elect & Comp Engn, 3480 Univ St,Room 754, Montreal, PQ H3A 2A7, Canada.
EM maheswar@cs.mcgill.ca
CR Ahrenholz J, 2008, IEEE MILIT COMMUN C, P3856
   Akyildiz IF, 2005, COMPUT NETW, V47, P445, DOI 10.1016/j.comnet.2004.12.001
   [Anonymous], 2009, Technical report
   [Anonymous], NEWSR
   [Anonymous], 2011, 6335 RFC
   [Anonymous], OD17 FGFN
   Berman M, 2014, 2014 IEEE FIFTH INTERNATIONAL CONFERENCE ON COMMUNICATIONS AND ELECTRONICS (ICCE), P156, DOI 10.1109/CCE.2014.6916696
   Bhatia S., 2008, P 2008 ACM CONEXT C, P72
   Cheshire K, 2013, 6762 RFC
   Chowdhury NMMK, 2010, COMPUT NETW, V54, P862, DOI 10.1016/j.comnet.2009.10.017
   Chun B, 2003, ACM SIGCOMM COMP COM, V33, P3, DOI 10.1145/956993.956995
   Coleman D.D., 2012, CWNA CERTIFIED WIREL
   DeHart J., 2006, SIGCSE Bulletin, V38, P107, DOI 10.1145/1124706.1121376
   Dike Jeff., 2006, User mode linux, V2
   Galán F, 2009, ANN TELECOMMUN, V64, P305, DOI 10.1007/s12243-009-0104-3
   Ghein L. D., 2007, MPLS FUNDAMENTALS CO
   Grasa E, 2008, IEEE COMMUN MAG, V46, P126, DOI 10.1109/MCOM.2008.4463783
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Handigol N., 2012, P 8 INT C EM NETW EX, P253, DOI DOI 10.1145/2413176.2413206
   He Y., 2011, COMPUT COMMUN REV, V41, P475
   IEEE, 1997, IEEE Std 802.11-1997, P1, DOI [DOI 10.1109/IEEESTD.2016.7786995, 10.1109/IEEESTD.1997.85951, DOI 10.1109/IEEESTD.1997.85951]
   IEEE standards for local and metropolitan area networks, 2003, IEEE Std 802.1Q, 2003 Edition (Incorporates IEEE Std 802.1Q- 1998, IEEE Std 802.1u-2001, IEEE Std 802.1v-2001, and IEEE Std 802.1s-2002), P1, DOI [10.1109/IEEESTD.2003.94280, DOI 10.1109/IEEESTD.2003.94280]
   Kang JM, 2013, 2013 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2013), P664
   Lantz B., 2010, Proceedings of the 9th ACM SIGCOMM Workshop on Hot Topics in Networks, P19, DOI 10.1145/1868447.1868466
   Liang CC, 2015, IEEE COMMUN SURV TUT, V17, P358, DOI 10.1109/COMST.2014.2352118
   Liebeherr J., 2003, MASTERING NETWORKS I
   Loddo JV, 2008, 1 INT C SIM TOOLS TE
   Mahalingam Mallik, 2014, TECHNICAL REPORT
   Maheswaran Muthucumaru, 2009, SIGCSE Bulletin, V41, P39, DOI 10.1145/1539024.1508880
   McKeown N, 2008, ACM SIGCOMM COMP COM, V38, P69, DOI 10.1145/1355734.1355746
   Pan JP, 2010, SIGCSE 10: PROCEEDINGS OF THE 41ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P133
   Perkins, 2010, 5944 RFC
   Perkins C.E., 1997, MOBILE IP DESIGN PRI
   Perkins CE, 1998, IEEE INTERNET COMPUT, V2, P58, DOI 10.1109/4236.656077
   Peterson L, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P351
   Pizzonia M, 2016, SOFTWARE PRACT EXPER, V46, P133, DOI 10.1002/spe.2273
   Raychaudhuri D, 2005, IEEE WCNC, P1664
   Silberschatz Abraham., 2005, DATABASE SYSTEM CONC, V5th
   Soltesz S., 2007, Operating Systems Review, V41, P275, DOI 10.1145/1272998.1273025
   Technical University of Madrid (UPM), VIRT NETW LIN VNX
   Wang AJ, 2013, J LIGHTWAVE TECHNOL, V31, P523, DOI 10.1109/JLT.2012.2213796
   Yap KK, 2010, ACM SIGCOMM COMP COM, V40, P125, DOI 10.1145/1672308.1672331
   Zec M, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK, P137
NR 43
TC 1
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2017
VL 47
IS 1
BP 21
EP 59
DI 10.1002/spe.2399
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI5DO
UT WOS:000392514400002
DA 2024-07-18
ER

PT J
AU Naish, L
   Schachte, P
   MacNally, AM
AF Naish, Lee
   Schachte, Peter
   MacNally, Aleck M.
TI Adtpp: lightweight efficient safe polymorphic algebraic data types for C
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE algebraic data types; C language extension; generics; polymorphism;
   safety; static checking; open-source
AB Adtpp is an open-source tool that adds support for algebraic data types (ADTs) to the C programming language. ADTs allow more precise description of program types and more robust handling of data structures than are directly supported by C. ADT definitions and other declarations are put in a file that is preprocessed by adtpp to produce a C header (.h') file that can be included in C source files. The generated header file contains C type definitions, macros, and inline functions that support type-safe construction, deconstruction, and pattern matching of ADT values while avoiding unsafe operations such as casts, and avoiding the risk of errors such as dereferencing NULL pointers and accessing inappropriate fields of unions. Values are represented efficiently, using techniques from the implementation of declarative languages. For many simple data types, the memory representation is identical to a direct implementation in C, with no loss of efficiency. For more complex types, the adtpp representation is more efficient than common C representations while preserving type safety and convenience. As an example, we present a new variation of 234-trees that is very compact. Adtpp also supports parametric polymorphism such as defining a type list of t', where t can be any ADT, and generic functions such as length. However, polymorphic code is somewhat more verbose than for typical declarative languages, due to our reliance on the limited type checking available in C. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Naish, Lee; Schachte, Peter; MacNally, Aleck M.] Univ Melbourne, Melbourne Sch Engn, Comp & Informat Syst, Parkville, Vic, Australia.
C3 University of Melbourne
RP Schachte, P (corresponding author), Univ Melbourne, Comp & Informat Syst, Parkville, Vic, Australia.
EM schachte@unimelb.edu.au
RI Schachte, Peter/H-4848-2016
OI Schachte, Peter/0000-0001-5959-3769
CR [Anonymous], 1997, The Definition of Standard ML
   Bayer R., 1972, Acta Informatica, V1, P290, DOI 10.1007/BF00289509
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   Burstall RodM., 1980, Proceedings of the 1980 ACM conference on LISP and Functional Programming, LFP '80, P136, DOI 10.1145/800087.802799
   Guibas LJ., 1978, P 19 ANN S FDN COMPU, P8, DOI DOI 10.1109/SFCS.1978.3
   Hartel PH, 2012, SOFTWARE PRACT EXPER, V42, P191, DOI 10.1002/spe.1058
   Jones S.P., 1999, REPORT PROGRAMMING L
   Naish L, 2015, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.22
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Wright A. K., 1995, LISP and Symbolic Computation, V8, P343, DOI 10.1007/BF01018828
NR 10
TC 0
Z9 0
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2016
VL 46
IS 12
BP 1685
EP 1703
DI 10.1002/spe.2407
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB4TV
UT WOS:000387367600004
OA Green Published
DA 2024-07-18
ER

PT J
AU Sun, CA
   Zhao, Y
   Pan, L
   He, X
   Towey, D
AF Sun, Chang-ai
   Zhao, Yan
   Pan, Lin
   He, Xiao
   Towey, Dave
TI A transformation-based approach to testing concurrent programs using UML
   activity diagrams
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software testing; scenario-oriented testing; concurrent programs; UML
   activity diagrams
ID MUTATION
AB Unified Modeling Language (UML) activity diagrams are widely used to model concurrent interaction among multiple objects. In this paper, we propose a transformation-based approach to generating scenario-oriented test cases for applications modeled by UML activity diagrams. Using a set of transformation rules, the proposed approach first transforms a UML activity diagram specification into an intermediate representation, from which it then constructs test scenarios with respect to the given concurrency coverage criteria. The approach then finally derives a set of test cases for the constructed test scenarios. The approach resolves the difficulties associated with fork and join concurrency in the UML activity diagram and enables control over the number of the resulting test cases. We further implemented a tool to automate the proposed approach and studied its feasibility and effectiveness using a case study. Experimental results show that the approach can generate test cases on demand to satisfy a given concurrency coverage criterion and can detect up to 76.5% of seeded faults when a weak coverage criterion is used. With the approach, testers can not only schedule the software test process earlier, but can also better allocate the testing resources for testing concurrent applications. Copyright (c) 2015John Wiley & Sons, Ltd.
C1 [Sun, Chang-ai; Zhao, Yan; Pan, Lin; He, Xiao] Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing 100083, Peoples R China.
   [Towey, Dave] Univ Nottingham Ningbo China, Sch Comp Sci, Ningbo, Zhejiang, Peoples R China.
C3 University of Science & Technology Beijing; University of Nottingham
   Ningbo China
RP Sun, CA (corresponding author), Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing 100083, Peoples R China.
EM casun@ustb.edu.cn
RI Towey, Dave/K-3160-2014
OI Towey, Dave/0000-0003-0877-4353; he, xiao/0000-0002-3000-0795
FU National Natural Science Foundation of China [61370061, 60903003];
   Beijing Natural Science Foundation of China [4112037]; Fundamental
   Research Funds for the Central Universities [FRF-SD-12-015A]; Beijing
   Municipal Training Program for Excellent Talents [2012D009006000002]
FX This research is supported by the National Natural Science Foundation of
   China (grant nos.: 61370061 and 60903003), the Beijing Natural Science
   Foundation of China (grant no. 4112037), the Fundamental Research Funds
   for the Central Universities (grant no. FRF-SD-12-015A), and the Beijing
   Municipal Training Program for Excellent Talents (grant no.
   2012D009006000002). The authors are grateful to the anonymous reviewers
   who provided useful suggestions on earlier versions of this paper.
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   Aggarwal M, 2012, 2012 THIRD INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATION TECHNOLOGY (ICCCT), P133, DOI 10.1109/ICCCT.2012.34
   Ambysoft Inc, 2007, UML ACT DIAGR GUID
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Briand LC, 2003, LECT NOTES COMPUT SC, V2863, P249
   Chang-ai Sun, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P170, DOI 10.1109/COMPSACW.2012.40
   Chang-ai Sun, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P853, DOI 10.1109/CSE.2009.99
   Chang-ai Sun, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P160, DOI 10.1109/COMPSAC.2008.74
   Chen HY, 2003, IEEE SYS MAN CYBERN, P1064
   Chen MS, 2006, P 2006 INT WORKSH AU, P2
   Chen TY, 2003, IEEE T SOFTWARE ENG, V29, P577, DOI 10.1109/TSE.2003.1214323
   Chevalley P, 2001, P INT COMP SOFTW APP, P205, DOI 10.1109/CMPSAC.2001.960618
   Dai ZR, MODEL DRIVEN TESTING
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DeMillo R.A., 1978, IEEE COMPUT, V1, P31
   Fowler M, ACTIVITY DIAGRAMS, P151
   Gao HM, 2008, J COMPUTER SCI, V35, P263
   Hartmann J., 2000, Software Engineering Notes, V25, P60, DOI 10.1145/347636.348872
   IBM center for software engineering, US CAS BAS TEST
   Kang SW, 2000, COMPUT NETW, V32, P347, DOI 10.1016/S1389-1286(00)00005-0
   Khandai M, 2011, INT J COMPUTER SCI I, V2, P1172
   Kim H, 2007, SNPD 2007: EIGHTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING, AND PARALLEL/DISTRIBUTED COMPUTING, VOL 3, PROCEEDINGS, P556, DOI 10.1109/SNPD.2007.189
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   Kundu D, 2009, J OBJECT TECHNOL, V8, P65, DOI 10.5381/jot.2009.8.3.a1
   Li HZ, 2005, LECT NOTES COMPUT SC, V3502, P69
   Li Liuying, 1999, Proceedings Technology of Object-Oriented Languages and Systems (Cat. No.PR00393), P273, DOI 10.1109/TOOLS.1999.796494
   Liu M, 2002, J COMPUTER ENG APPL, V28, P122
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Object Management Group, 2003, UML SPEC V1 5 MARCH
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Riebisch M, 2003, LECT NOTES COMPUT SC, V2591, P394
   Rozenburg G, 1998, LECT NOTES COMPUTER, V1491
   Scheetz M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P250, DOI 10.1109/ISSRE.1999.809330
   Vieira M, 2000, P 1 WORKSH AUT PROGR, P101
   Wang LZ, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P284, DOI 10.1109/APSEC.2004.55
   Wu Y, 2003, LECT NOTES COMPUT SC, V2580, P251
   Xu D, 2005, 12th Asia-Pacific Software Engineering Conference, Proceedings, P385
   Yan J, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P343, DOI 10.1109/QSIC.2003.1319120
   Yuan Jiesong, 2006, Journal of Computer Research and Development, V43, P46, DOI 10.1360/crad20060108
   Zhang Mei, 2001, Journal of Beijing University of Aeronautics and Astronautics, V27, P433
NR 42
TC 5
Z9 5
U1 4
U2 26
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2016
VL 46
IS 4
BP 551
EP 576
DI 10.1002/spe.2324
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DG8HR
UT WOS:000372324600005
DA 2024-07-18
ER

PT J
AU Kaser, O
   Lemire, D
AF Kaser, Owen
   Lemire, Daniel
TI Compressed bitmap indexes: beyond unions and intersections
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE T-overlap queries; compressed bitmaps; threshold functions; symmetric
   functions; Opt-threshold queries
AB Compressed bitmap indexes are used to speed up simple aggregate queries in databases. Indeed, set operations like intersections, unions and complements can be represented as logical operations (AND, OR and NOT) that are ideally suited for bitmaps. However, it is less obvious how to apply bitmaps to more advanced queries. For example, we might seek products in a store that meet some, but maybe not all, criteria. Such threshold queries generalize intersections and unions; they are often used in information-retrieval and data-mining applications. We introduce new algorithms that are sometimes three orders of magnitude faster than a naive approach. Our work shows that bitmap indexes are more broadly applicable than is commonly believed. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Kaser, Owen] Univ New Brunswick, Dept CSAS, St John, NB E2L 4L5, Canada.
   [Lemire, Daniel] Univ Quebec, TELUQ, LICEF, Montreal, PQ H3C 3P8, Canada.
C3 University of New Brunswick; University of Quebec; Universite TELUQ;
   University of Quebec Montreal
RP Kaser, O (corresponding author), Univ New Brunswick, Dept CSAS, 100 Tucker Pk Rd, St John, NB E2L 4L5, Canada.
EM owen@unbsj.ca
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922; Kaser, Owen/0000-0001-6204-5085
FU Natural Sciences and Engineering Research Council of Canada [261437]
FX This work was supported by the Natural Sciences and Engineering Research
   Council of Canada (261437).
CR [Anonymous], 2004, SIGMOD
   Antoshenkov G., 1995, Proceedings. DCC '95 Data Compression Conference (Cat. No.95TH8037), DOI 10.1109/DCC.1995.515586
   Asuncion A, UCI machine learning repository
   Barbay J, 2003, LECT NOTES COMPUT SC, V2906, P575
   Barbay J, 2002, SIAM PROC S, P390
   Behm A, 2009, PROC INT CONF DATA, P604, DOI 10.1109/ICDE.2009.32
   Beyer K, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P359, DOI 10.1145/304181.304214
   Colantonio A, 2010, INFORM PROCESS LETT, V110, P644, DOI 10.1016/j.ipl.2010.05.018
   Critchley A, 2013, FINDING SIMILAR ROWS
   Culpepper JS, 2010, ACM T INFORM SYST, V29, DOI 10.1145/1877766.1877767
   Deliege F., 2010, EDBT, V426, P228
   Ellingsen E, 2009, BIT TRICKS 3
   Engene JO, 2007, J PEACE RES, V44, P109, DOI 10.1177/0022343307071497
   Ferro A, 2010, LECT NOTES COMPUT SC, V6263, P309, DOI 10.1007/978-3-642-15105-7_25
   Fusco F, 2010, PROC VLDB ENDOW, V3, P1382, DOI 10.14778/1920841.1921011
   Guzun G, 2014, P IEEE 30 INT C DAT
   Hahn C., EDITED SYNOPTIC CLOU
   Hoos HH, 2012, COMMUN ACM, V55, P70, DOI 10.1145/2076450.2076469
   HORVITZ EJ, 1988, P AAAI 88, P111
   Jia LY, 2012, FRONT COMPUT SCI-CHI, V6, P700, DOI 10.1007/s11704-012-1237-5
   Kaser O, 2014, TR14001 U NEW BRUNSW
   Knuth DE, 2011, COMBINATORIAL AL A 1, V4A
   Lagoudakis M.G., 2000, Proceedings of the Seventeenth International Conference on Machine Learning, P511
   Lemire D, 2011, INFORM SCIENCES, V181, P2550, DOI 10.1016/j.ins.2011.02.002
   Lemire D, 2010, DATA KNOWL ENG, V69, P3, DOI 10.1016/j.datak.2009.08.006
   Li C, 2008, PROC INT CONF DATA, P257, DOI 10.1109/ICDE.2008.4497434
   Li MJ, 2015, WORLD WIDE WEB, V18, P281, DOI 10.1007/s11280-013-0232-6
   MacNicol Roger., 2004, Proceedings of the Thirtieth international conference on Very large data bases-, V30, P1227
   Montanari Daniele, 2012, Multidisciplinary Research and Practice for Information Systems. International Cross-Domain Conference and Workshop on Availability, Reliability and Security (CD-ARES 2012). Proceedings, P203, DOI 10.1007/978-3-642-32498-7_16
   Navarro Gonzalo, 2012, Experimental Algorithms. Proceedings 11th International Symposium, SEA 2012, P295, DOI 10.1007/978-3-642-30850-5_26
   O'Neil P., 1997, SIGMOD Record, V26, P38, DOI 10.1145/253262.253268
   O'Neil P., 1995, SIGMOD Record, V24, P8, DOI 10.1145/211990.212001
   ONEIL PE, 1989, LECT NOTES COMPUT SC, V359, P40
   PERRY SA, 1983, J INFORM SCI, V6, P59, DOI 10.1177/016555158300600204
   Rinfret D, 2001, SIGMOD RECORD, V30, P47, DOI 10.1145/376284.375669
   Sharma Vivek., 2005, Bitmap index vs. b-tree index: Which and when
   Stonebraker Mike., 2005, VLDB'05
   Tellez ES, 2013, INFORM SYST, V38, P1019, DOI 10.1016/j.is.2012.06.005
   Thomsen C, 2011, INTEGRATIONS DATA WA, P237, DOI [10.4018/978-1-60960-537-7.ch010., DOI 10.4018/978-1-60960-537-7.CH010]
   Webb H, 2013, DATA KNOWL ENG, V86, P1, DOI 10.1016/j.datak.2013.01.001
   Wu K., 2004, P 30 INT C VERY LARG, P24
   Wu KS, 2008, LECT NOTES COMPUT SC, V5069, P348
   Yang FJ, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P157, DOI 10.1145/2588555.2595631
NR 43
TC 6
Z9 8
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2016
VL 46
IS 2
BP 167
EP 198
DI 10.1002/spe.2289
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA6HP
UT WOS:000367904000002
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Mohebi, A
   Aghabozorgi, S
   Teh Ying Wah
   Herawan, T
   Yahyapour, R
AF Mohebi, Amin
   Aghabozorgi, Saeed
   Teh Ying Wah
   Herawan, Tutut
   Yahyapour, Ramin
TI Iterative big data clustering algorithms: a review
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE big data; large-scale; MapReduce; clustering; Hadoop
ID PARALLEL; MAPREDUCE; FRAMEWORK; MR
AB Enterprises today are dealing with the massive size of data, which have been explosively increasing. The key requirements to address this challenge are to extract, analyze, and process data in a timely manner. Clustering is an essential data mining tool that plays an important role for analyzing big data. However, largescale data clustering has become a challenging task because of the large amount of information that emerges from technological progress in many areas, including finance and business informatics. Accordingly, researchers have dealt with parallel clustering algorithms using parallel programming models to address this issue. MapReduce is one of the most famous frameworks, and it has attracted great attention because of its flexibility, ease of programming, and fault tolerance. However, the framework has evident performance limitations, especially for iterative programs. This study will first review the proposed iterative frameworks that extended MapReduce to support iterative algorithms. We summarize these techniques, discuss their uniqueness and limitations, and explain how they address the challenging issues of iterative programs. We also perform an in-depth review to understand the problems and the solving techniques for parallel clustering algorithms. Hence, we believe that no well-rounded review provides a significant comparison among parallel clustering algorithms using MapReduce. This work aims to serve as a stepping stone for researchers who are studying big data clustering algorithms. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Mohebi, Amin; Aghabozorgi, Saeed; Teh Ying Wah; Herawan, Tutut] Univ Malaya, Fac Comp Sci & Informat Technol, Kuala Lumpur, Malaysia.
   [Yahyapour, Ramin] Gesell Wissensch Datenverarbeitung mbH Gottingen, Gottingen, Germany.
C3 Universiti Malaya
RP Mohebi, A (corresponding author), Univ Malaya, Fac Comp Sci & Informat Technol, Kuala Lumpur, Malaysia.
EM aminmohebbi@siswa.um.edu.my
RI Yahyapour, Ramin/AAM-1875-2020; Yahyapour, Ramin/AAI-9355-2020; TEH,
   YING WAH/B-9938-2010; Herawan, Tutut/AAB-6534-2021; Teh, Ying
   Wah/ABD-6534-2020
OI Yahyapour, Ramin/0000-0002-9057-4395; Yahyapour,
   Ramin/0000-0002-9057-4395; Herawan, Tutut/0000-0001-9262-9137; Teh, Ying
   Wah/0000-0002-3202-7035
FU University of Malaya High Impact Research grant [vote
   UM.C/625/HIR/MOHE/SC/13/2]; University of Malaya Research grant [vote
   RP0061-13ICT]
FX This work is supported by the University of Malaya High Impact Research
   grant no. vote UM.C/625/HIR/MOHE/SC/13/2 and the University of Malaya
   Research grant no. vote RP0061-13ICT.
CR Aiyer A.S., 2012, IEEE DATA ENG B, V35, P4
   Aljarah I, 2012, WOR CONG NAT BIOL, P104, DOI 10.1109/NaBIC.2012.6402247
   Ankerst M., 1999, SIGMOD Record, V28, P49, DOI 10.1145/304181.304187
   [Anonymous], 2010, Proceedings of the 7th USENIX Conference on Networked Systems Design and Implementation, NSDI'10, (USA)
   [Anonymous], 2000, SIGKDD Explorations
   Arthur D, 2007, PROCEEDINGS OF THE EIGHTEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P1027
   Assuncao MD, 2014, J PARALLEL DISTRIBUT, V75, P156
   Bahmani B, 2012, PROC VLDB ENDOW, V5, P622, DOI 10.14778/2180912.2180915
   Bu Y, 2010, 36 INT C VER LARG DA, V3
   Chambers C, 2010, ACM SIGPLAN NOTICES, V45, P363, DOI 10.1145/1809028.1806638
   Chen WY, 2011, IEEE T PATTERN ANAL, V33, P568, DOI 10.1109/TPAMI.2010.88
   Cheng Y, 2000, Proc Int Conf Intell Syst Mol Biol, V8, P93
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Cui X, 2014, J SUPERCOMPUTING
   Nguyen CD, 2013, LECT NOTES COMPUT SC, V7975, P224, DOI 10.1007/978-3-642-39640-3_16
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dhillon IS, 2000, LECT NOTES ARTIF INT, V1759, P245, DOI 10.1007/3-540-46502-2_13
   Dhillon IS, 2001, P 7 ACM SIGKDD INT C, P269, DOI DOI 10.1145/502512.502550
   Doulkeridis C, 2014, VLDB J, V23, P355, DOI 10.1007/s00778-013-0319-9
   Ekanayake J., 2010, Proc. the 19th ACM International Symposium on High Performance Distributed Computing (HDPC'10), P810, DOI DOI 10.1145/1851476.1851593
   Elgohary A, 2014, P SIAM INT IN PRESS, V2013, P1
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Ferreira Cordeiro RobsonLeonardo., 2011, P 17 ACM SPECIAL INT, P690, DOI DOI 10.1145/2020408.2020516
   Fries ST, 2014, INT C EXT DAT TECHN, P49
   Gao Hui., 2010, JDCTA, V4, P95, DOI DOI 10.4156/JDCTA
   Ghuli P, 2015, IETE J RES, V61, P14, DOI 10.1080/03772063.2014.988760
   He YB, 2011, INT C PAR DISTRIB SY, P473, DOI 10.1109/ICPADS.2011.83
   Hellerstein J. M., 1997, SIGMOD Record, V26, P171, DOI 10.1145/253262.253291
   Hyndman RobJ., 1995, PROBLEM STURGESRULE, P1
   Jin WLC, 2013, P 4 INT SC WORKSH DA
   Kang U., 2010, Knowledge and Information Systems, V27, P303
   Kang U., 2011, P 17 ACM SIGKDD INT, P1091
   Kang U., 2012, P 18 ACM SIGKDD INT, P316
   Kaufman L., 1990, Finding Groups in Data: An Introduction to Cluster Analysis
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Kim W., 2009, CSC 8530 PARALLEL AL
   Kim Y, 2014, INFORM SYST, V42, P15, DOI 10.1016/j.is.2013.11.002
   Li C., 2014, Proceedings of the 5th ACM workshop on Scientific cloud computing, P25, DOI DOI 10.1145/2608029.2608033
   Li L, 2011, MODELLING SIMULATION, P325
   Lin C, 2011, ADV INTEL SOFT COMPU, V123, P93
   Liu YY, 2014, BMC BIOINFORMATICS, V15, DOI 10.1186/1471-2105-15-37
   Logothetis Dionysios., 2010, SoCC, P51, DOI DOI 10.1145/1807128.1807138
   Malewicz Grzegorz, 2010, P ACM SIGMOD INT C M, P135, DOI [DOI 10.1145/1807167.1807184, 10.1145/1807167.1807184]
   Maschho K. J., 1996, P COPP MOUNT C IT ME
   Moise G, 2006, IEEE DATA MINING, P414
   Murthy A, 2013, TEZ ACCELERATING PRO
   Nystrom EJ, 1930, ACTA MATH-DJURSHOLM, V54, P185, DOI 10.1007/BF02547521
   Page L., 1999, PAGERANK CITATION RA, DOI DOI 10.1109/IISWC.2012.6402911
   Papadimitriou S, 2008, IEEE DATA MINING, P512, DOI 10.1109/ICDM.2008.142
   Parsons L., 2004, SIGKDD Explor Newsl, V6, P90, DOI 10.1145/1007730.1007731
   Pavlo A, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P165
   Pham DT, 2004, P I MECH ENG C-J MEC, V218, P783, DOI 10.1243/0954406041319509
   Raghavan UN, 2007, PHYS REV E, V76, DOI 10.1103/PhysRevE.76.036106
   Riccomini C, 2013, SAMZA REAL TIME STRE
   Shirkhorshidi AS, 2014, LECT NOTES COMPUT SC, V8583, P707, DOI 10.1007/978-3-319-09156-3_49
   Snir M., 1998, MPI-the complete reference: the MPI core, V1
   Srirama SN, 2012, FUTURE GENER COMP SY, V28, P184, DOI 10.1016/j.future.2011.05.025
   Stonebraker M, 2010, COMMUN ACM, V53, P64, DOI 10.1145/1629175.1629197
   Su S, 2013, IEEE DATA MINING, P1193, DOI 10.1109/ICDM.2013.76
   Sun TY, 2009, 2009 INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED COMPUTING, APPLICATIONS AND TECHNOLOGIES (PDCAT 2009), P494, DOI 10.1109/PDCAT.2009.46
   Sun ZQ, 2014, J SUPERCOMPUT, V69, P452, DOI 10.1007/s11227-014-1174-1
   Thulasiraman K., 1992, Graphs: theory and algorithms
   Tishby N., 2000, ARXIVPHYSICS0004057
   Tsironis S, 2013, ACCURATE SPECTRAL CL, P1
   VALIANT LG, 1990, COMMUN ACM, V33, P103, DOI 10.1145/79173.79181
   White T., 2012, HADOOP DEFINITIVE GU
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Yanfeng Zhang, 2011, 2011 IEEE International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum, P1112, DOI 10.1109/IPDPS.2011.260
   Yu Y., 2008, OSDI, V8, P1
   Zaharia Matei, 2012, Proceedings of the 9th USENIX Conference on Networked Systems Design and Implementation, NSDI'12, P1, DOI DOI 10.1111/J.1095-8649.2005.00662.X
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
   Zhang YF, 2013, IEEE T PARALL DISTR, V24, P1884, DOI 10.1109/TPDS.2012.272
   Zhao WZ, 2013, INT CON ADV INFO NET, P862, DOI 10.1109/AINA.2013.47
   Zhao WZ, 2009, LECT NOTES COMPUT SC, V5931, P674, DOI 10.1007/978-3-642-10665-1_71
   Zhou Ping., 2011, Journal of Computational Information Systems, V7, P5956
   Zikopoulos P.C., 2012, Harness the Power of Big Data: The IBM Big Data Platform
NR 76
TC 42
Z9 50
U1 1
U2 119
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2016
VL 46
IS 1
SI SI
BP 107
EP 129
DI 10.1002/spe.2341
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA6HI
UT WOS:000367903200005
OA Bronze
DA 2024-07-18
ER

PT J
AU Hurault, A
   Baek, K
   Casanova, H
AF Hurault, Aurelie
   Baek, Kyungim
   Casanova, Henri
TI Selecting linear algebra kernel composition using response time
   prediction
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE numerical linear algebra; kernel compositions; performance prediction;
   machine learning
AB Numerical linear algebra libraries provide many kernels that can be composed to perform complex computations. For a given computation, there is typically a large number of functionally equivalent kernel compositions. Some of these compositions achieve better response times than others for particular data and when executed on a particular computer architecture. Previous research provides methods to enumerate (a subset of) these kernel compositions. In this work, we study the problem of determining the composition that yields the lowest response time. Our approach is based on a response time prediction for each candidate combination. While this prediction could in principle be obtained using analytical and/or empirical performance models, developing accurate such models is known to be challenging. Instead, we define a feature space that captures salient properties of kernel combinations and predict response time using supervised machine learning. We experiment with a standard set of machine learning algorithms and identify an effective algorithm for our kernel composition selection problem. Using this algorithm, our approach widely outperforms the strategy that would consist in always using the simplest kernel composition and is often close to the fastest kernel compositions among those evaluated. We quantify the potential benefit of our approach if it were to be implemented as part of an interactive computational tool. We find that although the potential benefit is substantial, a limiting factor is the kernel composition enumeration overhead. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Hurault, Aurelie] Univ Toulouse, IRIT, Toulouse, France.
   [Baek, Kyungim; Casanova, Henri] Univ Hawaii Manoa, Dept Informat & Comp Sci, Honolulu, HI 96822 USA.
C3 Universite de Toulouse; Universite Toulouse III - Paul Sabatier;
   Universite Federale Toulouse Midi-Pyrenees (ComUE); Institut National
   Polytechnique de Toulouse; University of Hawaii System; University of
   Hawaii Manoa
RP Hurault, A (corresponding author), IRIT ENSEEIHT, 2 Rue Camichel,BP 7122, F-31071 Toulouse 7, France.
EM Aurelie.Hurault@enseeiht.fr
CR Agullo E, 2009, J PHYS CONF SER, V180, DOI 10.1088/1742-6596/180/1/012037
   Anderson E., 1999, LAPACK USERSGUIDE, Vthird
   [Anonymous], 2014 IEEE WIC ACM IN
   [Anonymous], 4 INT WORKSH AUT PER
   [Anonymous], BASIC LINEAR ALGEBRA
   [Anonymous], 2005, MORGAN KAUFMANN SERI
   [Anonymous], P WORKSH LEARN IMB D
   [Anonymous], SCIL LOG OP SOURC GR
   [Anonymous], 2006, P 15 INT C PARALLEL
   [Anonymous], P 2007 ACM IEEE C SU
   [Anonymous], 2005, P 10 ACM SIGPLAN S P, DOI DOI 10.1145/1065944.1065981
   [Anonymous], 2010, VERS 7 10 0 R2010A
   [Anonymous], J PHYS C SERIES
   [Anonymous], CORR
   Ansel J, 2014, INT CONFER PARA, P303, DOI 10.1145/2628071.2628092
   Asperti A., 2001, Theorem Proving in Higher Order Logics. 14th International Conference, TPHOLs 2001. Proceedings (Lecture Notes in Computer Science Vol.2152), P59
   Bilmes J., 1997, Conference Proceedings of the 1997 International Conference on Supercompting, P340, DOI 10.1145/263580.263662
   Blackford LS, 2002, ACM T MATH SOFTWARE, V28, P135, DOI 10.1145/567806.567807
   Choi J, 1996, COMPUT PHYS COMMUN, V97, P1, DOI 10.1016/0010-4655(96)00017-3
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   GALLIER JH, 1989, THEOR COMPUT SCI, V67, P203, DOI 10.1016/0304-3975(89)90004-2
   Ganapathi A, 2009, PROC INT CONF DATA, P592, DOI 10.1109/ICDE.2009.130
   GOGUEN JA, 1992, THEOR COMPUT SCI, V105, P217, DOI 10.1016/0304-3975(92)90302-V
   Grigori L, 2007, APPL ALGEBR ENG COMM, V18, P241, DOI 10.1007/s00200-007-0036-y
   Gupta Chetan, 2008, 2008 International Conference on Autonomic Computing (ICAC '08), P13, DOI 10.1109/lCAC.2008.12
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hansen J.S., 2011, GNU Octave: Beginner's Guide: Become a Proficient Octave User by Learning this High-level Scientific Numerical Tool from the Ground Up
   Hartono A., 2009, P 2009 IEEE INT S PA, P1
   Hurault A, 2011, LECT NOTES COMPUT SC, V6449, P340, DOI 10.1007/978-3-642-19328-6_32
   Hurault A, 2009, J SUPERCOMPUT, V49, P64, DOI 10.1007/s11227-008-0234-9
   Iakymchuk Roman, 2012, Performance Evaluation Review, V40, P86
   Ipek E, 2005, LECT NOTES COMPUT SC, V3648, P196
   Johnson TA, 2006, ACM SIGPLAN NOTICES, V41, P181, DOI 10.1145/1133981.1134003
   Li JT, 2009, INT SYM PERFORM ANAL, P89, DOI 10.1109/ISPASS.2009.4919641
   Li YN, 2009, LECT NOTES COMPUT SC, V5544, P884
   Marin G, 2004, SIGMETRICS PERFORM E, P2, DOI DOI 10.1145/1005686.1005691
   Peise E, 2012, 2012 SC COMPANION: HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SCC), P406, DOI 10.1109/SC.Companion.2012.60
   Snavely A., 2002, Proceedings of the 2002 ACM/IEEE conference on Supercomputing, P1
   Stickel M., 1994, Automated Deduction - CADE-12. 12th International Conference on Automated Deduction. Proceedings, P341
   Van Zee FG, 2009, COMPUT SCI ENG, V11, P56
   Whaley RC, 2001, PARALLEL COMPUT, V27, P3, DOI 10.1016/S0167-8191(00)00087-9
NR 41
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2015
VL 45
IS 12
BP 1659
EP 1676
DI 10.1002/spe.2307
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LK
UT WOS:000363501100004
DA 2024-07-18
ER

PT J
AU Willkomm, J
   Bischof, C
   Bücker, HM
AF Willkomm, Johannes
   Bischof, Christian
   Buecker, H. Martin
TI RIOS: efficient I/O in reverse direction
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automatic differentiation; reverse mode; discrete adjoint; stack;
   multithreading; parallel computing; program reversal
ID AUTOMATIC DIFFERENTIATION; MODE
AB The reverse mode of automatic differentiation executes the adjoint statements induced by each statement in the original program in the reverse order of the original program flow. This program flow reversal commonly requires storage of information on the control flow of the original program. In addition, intermediate values of variables that are overwritten have to be recorded, as these values may later be needed to compute the partial derivatives of the corresponding statement. The stored information will be accessed in reverse order of being written. This runs contrary to many assumptions made in standard implementations of file systems, operating systems, and input/output (I/O) libraries. A common buffering strategy aimed at speeding up future read requests is to employ read-ahead. This strategy is useful for accesses in forward direction but is considered to be harmful to the performance of the reverse mode. To increase the performance of the reverse mode, it is also advantageous to interleave computations with the data storage and retrieval operations, which can be achieved using multithreading. To this end, we design and implement a novel software called reverse-mode I/O stream (RIOS) that is adapted to these particular requirements of the reverse mode. We show the advantages of RIOS in two empirical case studies, an artificially constructed example of a typical I/O pattern in the reverse mode and a real-world example arising from fluid mechanics, which is studied in Fortran90 and in Matlab where the reverse mode is generated via the automatic differentiation tools Tapenade and ADiMat, respectively. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Willkomm, Johannes; Bischof, Christian] Tech Univ Darmstadt, Sci Comp, Darmstadt, Germany.
   [Buecker, H. Martin] Univ Jena, Chair Commun & Comp Engn, Jena, Germany.
C3 Technical University of Darmstadt; Friedrich Schiller University of Jena
RP Willkomm, J (corresponding author), Tech Univ Darmstadt, Sci Comp, Darmstadt, Germany.
EM johannes.willkomm@sc.tu-darmstadt.de
RI Bucker, H. Martin/E-2623-2012
OI Bucker, H. Martin/0000-0002-5210-0789
CR [Anonymous], 2008, WHAT IS NETWORKED RO
   [Anonymous], 2008, ADV AUTOMATIC DIFFER, DOI DOI 10.1007/978-3-540-68942-3_18
   Bell B.M., 2008, LECT NOTES COMPUTATI, P67
   Berzs M, 1996, COMPUTATIONAL DIFFER
   Bischof CH, 1996, SIAM PROC S, P83
   Bischof CH, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P65, DOI 10.1109/SCAM.2002.1134106
   Bischofs CH, 2008, LECT NOTES COMPUTATI, V64
   Buckers HM, 2005, LECT NOTES COMPUTATI, V50
   Buckers HM, 2002, HIERARCHICAL ALGORIT
   Chen Y., 2008, Proceedings of the 2008 ACM/IEEE conference on Supercomputing, P1
   Chens Y, 2009, THESIS
   CHRISTIANSON B, 1992, IMA J NUMER ANAL, V12, P135, DOI 10.1093/imanum/12.2.135
   Corlisss G, 2002, AUTOMATIC DIFFERENTI
   Corlisss GF, 1991, AUTOMATIC DIFFERENTI
   Dickens PM, 2009, HPDC'09: 18TH ACM INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, P31
   Ding X., 2007, 2007 USENIX ATC, P1
   Forths S, 2012, LECT NOTES COMPUTATI, V87
   Gibson GA, 1996, ACM COMPUT SURV, V28, P779, DOI 10.1145/242223.242300
   Griewank A, 2000, ACM T MATH SOFTWARE, V26, P19, DOI 10.1145/347837.347846
   Griewank A, 1996, ACM T MATH SOFTWARE, V22, P131, DOI 10.1145/229473.229474
   Griewanks A, 2008, EVALUATING DERIVATIV
   Gropp WD, 2008, LECT NOTES COMPUT SC, V5205, P167, DOI 10.1007/978-3-540-87475-1_25
   Hascoët L, 2005, FUTURE GENER COMP SY, V21, P1401, DOI 10.1016/j.future.2004.11.009
   Hascoet L, 2013, ACM T MATH SOFTWARE, V39, DOI 10.1145/2450153.2450158
   IEEE, 2001, 100312001 IEEE
   JIN S, 1995, COMMUN PUR APPL MATH, V48, P235, DOI 10.1002/cpa.3160480303
   KEDEM G, 1980, ACM T MATH SOFTWARE, V6, P150, DOI 10.1145/355887.355890
   Krefts K, 2000, STANDARD C IOSTREAMS
   Kunkel JM, 2012, COMPUT SCI-RES DEV, V27, P337, DOI 10.1007/s00450-011-0193-x
   Lofstead Jay., 2008, Proceedings of the 6th international workshop on Challenges of large applications in distributed environments, CLADE'08, P15
   MPI Forum, 2009, Tech. Rep.
   NAUMANN U, 2008, LECT NOTES COMPUTATI, V64, P13, DOI DOI 10.1007/978-3-540-68942-3_
   Pascuals V, 2005, LECT NOTES COMPUTATI, V50, P65
   Pascuals V, 2004, 300 INRIA
   Purakayastha A., 1995, Proceedings 9th International Parallel Processing Symposium (Cat. No.95TH8052), P165, DOI 10.1109/IPPS.1995.395928
   Ralls LB, 1981, LECT NOTES COMPUTER, V120
   Schmuck F, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FAST'02 CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P231
   Tadjouddine M, 2003, LECT NOTES COMPUT SC, V2668, P115
   Thakurs R, 2004, ANLMCSTM234
   Vehreschilds A, 2009, THESIS
   Wiedemann MC, 2013, COMPUT SCI-RES DEV, V28, P241, DOI 10.1007/s00450-012-0221-5
   Willkomms J, 2012, LECT NOTES COMPUTATI, V87
NR 42
TC 1
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2015
VL 45
IS 10
BP 1399
EP 1427
DI 10.1002/spe.2252
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7VW
UT WOS:000360814800005
DA 2024-07-18
ER

PT J
AU Buccafurri, F
   Lax, G
   Nocera, A
   Ursino, D
AF Buccafurri, Francesco
   Lax, Gianluca
   Nocera, Antonino
   Ursino, Domenico
TI A system for extracting structural information from Social Network
   accounts
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE social networks; social internetworking scenario; bridge users; FOAF;
   XFN; social network crawling
AB The social network phenomenon involves hundreds of millions of people every day. This enormous volume of activity results in a huge source of information that can be valuable in many fields, for both research and application purposes. The relevance of this information strongly depends on the evolution occurring in the social Web, in which interaction among different social networks and their cross-relationships are becoming progressively more important. This, in fact, represents the basis of an emergent scenario called Social Internetworking Scenario. However, efficiently accessing and fruitfully querying this huge information source is not easy, because no tool to support applications needing a massive utilization of cross-social-network data exists. In this paper, we fill this gap by proposing Social Network Account Knowledge Extractor (SNAKE), a system supporting the extraction of structural data from a social network account. SNAKE is implemented in such a way as to be easily integrated in any social-network-based application. To show the practical relevance of our proposal, we present our experience gained in three possible real-life applications strongly relying on information provided by SNAKE. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Buccafurri, Francesco; Lax, Gianluca; Nocera, Antonino; Ursino, Domenico] Univ Mediterranea Reggio Calabria, DIIES, I-89122 Reggio Di Calabria, Italy.
C3 Universita Mediterranea di Reggio Calabria
RP Buccafurri, F (corresponding author), Univ Mediterranea Reggio Calabria, DIIES, Via Graziella, I-89122 Reggio Di Calabria, Italy.
EM bucca@unirc.it
OI Ursino, Domenico/0000-0003-1360-8499; LAX, Gianluca/0000-0002-5226-0870;
   BUCCAFURRI, Francesco/0000-0003-0448-8464; NOCERA,
   ANTONINO/0000-0003-2120-2341
FU Program 'Programma Operativo Nazionale Ricerca e Competitivita'; project
   BA2Kno (Business Analytics to Know) in 'Laboratorio in Rete di Service
   Innovation' - Italian Ministry of Education, University and Research
   [PON03PE_00001_1]
FX This work has been partially supported by the Program 'Programma
   Operativo Nazionale Ricerca e Competitivita' 2007-2013, project BA2Kno
   (Business Analytics to Know) PON03PE_00001_1, in 'Laboratorio in Rete di
   Service Innovation', funded by the Italian Ministry of Education,
   University and Research.
CR [Anonymous], P INT C ADV SOC AN M
   [Anonymous], ONLINE IDENTITY CONS
   [Anonymous], UCINET 6 WINDOWS SOF
   [Anonymous], FLINK SEMANTIC WEB T
   [Anonymous], 1998, INT ORG STANDARDIZAT
   [Anonymous], POWER
   [Anonymous], P INT C WEBL SOC MED
   [Anonymous], P INT C WEBL SOC MED
   [Anonymous], SOCIAL NETWORK ANAL
   [Anonymous], 2009, P 1 WORKSHOP CONTEXT, DOI DOI 10.1145/1552262.1552269
   [Anonymous], P INT WORKSH MIN COM
   [Anonymous], SOCIAL NETWORKING QU
   [Anonymous], CISTR0801 U OR
   [Anonymous], MODELS METHODS SOCIA
   [Anonymous], TECHNICAL REPORT
   [Anonymous], GOOGLE SOCIAL GRAPH
   Bai Yu, 2009, Proceedings of the 2009 Sixth International Conference on Fuzzy Systems and Knowledge Discovery (FSKD 2009), P566, DOI 10.1109/FSKD.2009.719
   Bröcheler M, 2011, 2011 INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2011), P271, DOI 10.1109/ASONAM.2011.78
   Buccafurri Francesco, 2012, Machine Learning and Knowledge Discovery in Databases. Proceedings of the European Conference (ECML PKDD 2012), P467, DOI 10.1007/978-3-642-33486-3_30
   Buccafurri F, 2014, INFORM SCIENCES, V256, P126, DOI 10.1016/j.ins.2013.08.046
   Buccafurri F, 2013, INFORM SCIENCES, V224, P1, DOI 10.1016/j.ins.2012.10.021
   Carmagnola F, 2009, INFORM SCIENCES, V179, P16, DOI 10.1016/j.ins.2008.08.022
   Celli F, 2010, LECT NOTES COMPUT SC, V6007, P346, DOI 10.1007/978-3-642-12079-4_43
   Cha M, 2009, WWW 09 P 18 INT WORL, DOI DOI 10.1145/1526709.1526806
   Chen W, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P199, DOI 10.1145/1557019.1557047
   Dementiev R, 2008, SOFTWARE PRACT EXPER, V38, P589, DOI 10.1002/spe.844
   Elmagarmid AK, 2007, IEEE T KNOWL DATA EN, V19, P1, DOI 10.1109/TKDE.2007.250581
   Gjokas M, 2010, P INT C COMPUTER COM, P1
   Kempe D, 2003, P 9 ACM SIGKDD INT C, P137, DOI DOI 10.1145/956750.956769
   Krishnamurthy B., 2008, Proceedings of the rst workshop on Online social networks, P19, DOI [DOI 10.1145/1397735.1397741, 10.1145/1397735.1397741]
   Kurata M., 2010, 5th World Conference of Structural Control and Monitoring, P1, DOI DOI 10.1109/ITC.2010.5608727
   Lovasz L., 1993, Combinatorics, Paul Erdos is Eighty, V2, P1
   MacKinnon I, 2007, LECT NOTES COMPUT SC, V4503, P176
   Mislove A., 2008, WOSN
   Mislove A, 2007, IMC'07: PROCEEDINGS OF THE 2007 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P29
   Park Y, 2012, SOFTWARE PRACT EXPER, V42, P37, DOI 10.1002/spe.1047
   Scripps Jerry., 2007, Proceedings of the 9th WebKDD and 1st SNA-KDD 2007 workshop on Web mining and social network analysis. WebKDD/SNA-KDD '07, P26, DOI DOI 10.1145/1348549.1348553
   Shaozhi Ye, 2010, Proceedings of the 12th Asia Pacific Web Conference (APWEB 2010), P236, DOI 10.1109/APWeb.2010.10
   Stutzbach Daniel., 2006, INTERNET MEASUREMENT, P27, DOI DOI 10.1145/1177080.1177084
   Szomszor M, 2008, LECT NOTES COMPUT SC, V5318, P632, DOI 10.1007/978-3-540-88564-1_40
   Vosecky J, 2009, NDT: 2009 FIRST INTERNATIONAL CONFERENCE ON NETWORKED DIGITAL TECHNOLOGIES, P360, DOI 10.1109/NDT.2009.5272173
   Wang Yu, 2010, P 16 ACM SIGKDD INT, P1039
NR 42
TC 9
Z9 10
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2015
VL 45
IS 9
BP 1251
EP 1275
DI 10.1002/spe.2280
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM9FH
UT WOS:000358012100004
DA 2024-07-18
ER

PT J
AU Teodorov, C
   Lagadec, L
AF Teodorov, Ciprian
   Lagadec, Loic
TI Model-driven physical-design automation for FPGAs: fast prototyping and
   legacy reuse
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE FPGA; physical-design; software-evolution; model-driven
ID UML; TCG
AB The current integrated circuit technologies are approaching their physical limits in terms of scaling and power consumption, in this context, the electronic design automation (EDA) industry is pushed towards solving ever more challenging problems in terms of performance, scalability and adaptability. Meeting these constraints needs innovation at both the algorithmic and the methodological level. Amongst academic EDA tools, Madeo toolkit has been targeting field-programmable gate array (FPGA) design-automation at the logic and the physical level since the late 1990s. As many other long-living software, despite embedding valuable legacy, Madeo exhibits unwanted characteristics that penalize evolution and render the automation problems even more difficult. This study presents a methodological approach to physical-design automation relying on model-driven engineering, which is illustrated through the incremental redesign of the Madeo framework. A benefit of this approach is the emergence of a common vocabulary to describe the EDA domain in an FPGA scope. A second advantage is the isolation of the optimization algorithms from the structural domain models. However, the main asset is the possibility to re-inject into the newly designed toolkit most of the legacy code. The redesigned framework is compared with and scored against initial code-base, and demonstrates a regression-free remodeling of the environment with net improvements in terms of size and complexity metrics. As a consequence, the evolution capability is back on stage, and the domain-space exploration widens to the algorithmic axis. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Teodorov, Ciprian] European Univ Brittany, CNRS, Lab STICC MOCS, UMR 6285, Rennes, France.
   [Lagadec, Loic] ENSTA Bretagne, CNRS, Lab STICC MOCS, UMR 6285, F-29806 Brest 09, France.
C3 Universite de Rennes; Centre National de la Recherche Scientifique
   (CNRS); Universite de Bretagne Occidentale; Universite de Bretagne
   Occidentale; ENSTA Bretagne; Centre National de la Recherche
   Scientifique (CNRS)
RP Lagadec, L (corresponding author), ENSTA Bretagne, CNRS, Lab STICC MOCS, UMR 6285, 2 Rue F Verny, F-29806 Brest 09, France.
EM loic.lagadec@ensta-bretagne.fr
OI lagadec, loic/0000-0003-3778-3144
CR [Anonymous], 2006, MET FAC MOF COR SPEC
   [Anonymous], P WORKSH INT INF INT
   [Anonymous], 1991, Technical report
   [Anonymous], 2008, ECLIPSE MODELING FRA
   Atkinson C, 2005, LECT NOTES COMPUT SC, V3713, P398, DOI 10.1007/11557432_30
   Atkinson C, 2009, IEEE T SOFTWARE ENG, V35, P742, DOI 10.1109/TSE.2009.31
   Bary B, 1992, INT C OBJ OR MAN SYS
   Betz V., 1999, Architecture and CAD for Deep-Submicron FPGAs
   Black A.P., 2009, PHARO EXAMPLE
   Brant J, 2011, SMACC SMALLTALK COMP
   Chen DM, 2006, FOUND TRENDS ELECTRO, V1, P195, DOI 10.1561/1000000003
   Chen DM, 2003, IEEE T COMPUT AID D, V22, P1424, DOI 10.1109/TCAD.2003.818120
   Chin SYL, 2009, ACM T RECONFIGURABLE, V1, DOI 10.1145/1462586.1462587.
   COOK WR, 1992, SIGPLAN NOTICES, V27, P1, DOI 10.1145/141937.141938
   Demeyer Serge., 2008, OBJECT ORIENTED REEN
   Dezan C., 1999, Proceedings 1999 IEEE International Conference on Microelectronic Systems Education (MSE'99) `Systems Education in the 21st Century' (Cat. No.99-63794), P51, DOI 10.1109/MSE.1999.787033
   Dezan C, 2009, MICROELECTRON J, V40, P656, DOI 10.1016/j.mejo.2008.07.072
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   Ducasse S, 2006, LECT NOTES COMPUT SC, V4199, P604
   Ducasse S, 2009, SOFTW SYST MODEL, V8, P5, DOI 10.1007/s10270-008-0081-4
   ELMORE WC, 1948, J APPL PHYS, V19, P55, DOI 10.1063/1.1697872
   European Nano Systems ( ENS, 2007, INT C SUP NAN NAN IC
   Gamatie A, 2009, SCALABLE COMPUTING P, P10
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GAUTRIN E, 1993, IFIP TRANS A, V22, P345
   George V., 1999, Proceedings. 1999 International Symposium on Low Power Electronics and Design (Cat. No.99TH8477), P188, DOI 10.1109/LPE.1999.799437
   Hutchings B., 1999, Seventh Annual IEEE Symposium on Field-Programmable Custom Computing Machines (Cat. No.PR00375), P12, DOI 10.1109/FPGA.1999.803663
   Kahng AB, 2011, VLSI PHYSICAL DESIGN: FROM GRAPH PARTITIONING TO TIMING CLOSURE, P1, DOI 10.1007/978-90-481-9591-6
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kuhn A., 2008, WORKSH MOD RUNT, P57
   Kuon I, 2007, FOUND TRENDS ELECTRO, V2, P135, DOI 10.1561/1000000005
   Lagadec L., 2001, Field Programmable Logic and Applications. 11th International Conference, FPL 2001. Proceedings (Lecture Notes in Computer Science Vol.2147), P357
   Lagadec L, 2000, PROC SPIE, V4212, P69, DOI 10.1117/12.402529
   Lagadec L, 2009, DYNAMIC SYSTEM RECON
   Lagadec L., 2009, Parallel Distributed Processing, P1, DOI DOI 10.1109/IPDPS.2009.5161224
   Lagadec L, 2009, MICROELECTRON J, V40, P665, DOI 10.1016/j.mejo.2009.02.001
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Lavagno Luciano., 2006, ELECT DESIGN AUTOMAT
   Lin JM, 2002, DES AUT CON, P842, DOI 10.1109/DAC.2002.1012739
   Lin JM, 2001, DES AUT CON, P764, DOI 10.1109/DAC.2001.935608
   Martin G, 2001, PROCEEDINGS OF THE NINTH INTERNATIONAL SYMPOSIUM ON HARDWARE/SOFTWARE CODESIGN, P23, DOI 10.1109/HSC.2001.924645
   McMurchie L., 1995, FPGA '95. 1995 ACM Third International Symposium on Field-Programmable Gate Arrays, P111, DOI 10.1145/201310.201328
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Moritz CA, 2007, IEEE T CIRCUITS-I, V54, P2422, DOI 10.1109/TCSI.2007.907839
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Oliveira N., 2009, P 3 COMPILERS PROGRA, P35
   Panda PR, 2001, ISSS'01: 14TH INTERNATIONAL SYMPOSIUM ON SYSTEM SYNTHESIS, P75, DOI 10.1109/ISSS.2001.957916
   Picard D, 2010, THESIS U BRETAGNE OC
   Pottier B, 1996, IEEE SYMPOSIUM ON FPGAS FOR CUSTOM COMPUTING MACHINES, PROCEEDINGS, P48, DOI 10.1109/FPGA.1996.564744
   Quadri IR, 2010, INT J EMBED SYST, V4, P204, DOI 10.1504/IJES.2010.039025
   Renggli L., 2010, PhD thesis
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Sentovich E. M., 1992, UCBERLM9241 EECS DEP
   Seokjin Lee, 2002, Proceedings of ISPD'02. 2002 International Symposium on Physical Design, P176
   SHARP A, 1997, SMALLTALK EXAMPLE
   Teodorov C., 2011, 2011 IEEE/ACM International Symposium on Nanoscale Architectures (NANOARCH), P70, DOI 10.1109/NANOARCH.2011.5941486
   Teodorov C, 2011, P 3 INT WORKSH SMALL, P1
   Teodorov C., 2011, 6 INT WORKSH REC COM
   Teodorov C., 2011, PROC 6 INT WORKSHOP, P1
   Vanderperren Y, 2005, DES AUT TEST EUROPE, P716, DOI 10.1109/DATE.2005.319
   Vidal J, 2009, DES AUT TEST EUROPE, P226
   Vuillemin JE, 1996, IEEE T VLSI SYST, V4, P56, DOI 10.1109/92.486081
   *XIL INC, 2006, UG191 VIRT 5 CONF US
   [No title captured]
NR 64
TC 0
Z9 0
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2014
VL 44
IS 4
SI SI
BP 455
EP 482
DI 10.1002/spe.2190
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1IH
UT WOS:000332987100005
DA 2024-07-18
ER

PT J
AU Felber, P
   Kropf, P
   Leonini, L
   Luu, T
   Rajman, M
   Rivière, E
   Schiavoni, V
   Valerio, J
AF Felber, Pascal
   Kropf, Peter
   Leonini, Lorenzo
   Luu, Toan
   Rajman, Martin
   Riviere, Etienne
   Schiavoni, Valerio
   Valerio, Jose
TI CoFeed: privacy-preserving Web search recommendation based on
   collaborative aggregation of interest feedback
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web search; collaborative ranking; decentralized storage; anonymity
AB Search engines essentially rely on the structure of the graph of hyperlinks. Although accurate for the main trend, this is not effective when some query is ambiguous. Leveraging semantic information by the mean of interest matching allows proposing complementary results that are tailored to the user's expectations. This paper proposes a collaborative search companion system, CoFeed, that collects user search queries and that considers feedback to build user-centric and document-centric profiling information. Over time, the system constructs ranked collections of elements that maintain the required information diversity and enhance the user search experience by presenting additional results tailored to the user's interest space. This collaborative search companion requires a supporting architecture adapted to large user populations generating high request loads. To that end, it integrates mechanisms for ensuring scalability and load balancing of the service under varying loads and user interest distributions. Moreover, collecting the recommendation data poses the problem of users' privacy, and the bias one peer can induce to the system by sending fake recommendations. To that end, CoFeed ensures both publisher anonymity and rate limitation. With the former, the origin of the data is never known by the server that processes it, even if several servers collude to spy on some user. The latter, combined with decoupled authentication, allows to minimize the influence of cheating peers sending fake recommendations. Experiments with a deployed prototype highlight the efficiency of the system by analyzing improvement in search relevance, computational cost, scalability and load balancing. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Felber, Pascal; Kropf, Peter; Leonini, Lorenzo; Riviere, Etienne; Schiavoni, Valerio; Valerio, Jose] Univ Neuchatel, Inst Informat, CH-2009 Neuchatel, Switzerland.
   [Luu, Toan; Rajman, Martin] Ecole Polytech Fed Lausanne, CH-1015 Lausanne, Switzerland.
C3 University of Neuchatel; Swiss Federal Institutes of Technology Domain;
   Ecole Polytechnique Federale de Lausanne
RP Rivière, E (corresponding author), Univ Neuchatel, Inst Informat, Emile Argand 11, CH-2009 Neuchatel, Switzerland.
EM etienne.riviere@unine.ch
RI SCHIAVONI, Valerio/AAQ-8777-2020
OI SCHIAVONI, Valerio/0000-0003-1493-6603; Felber,
   Pascal/0000-0003-1574-6721; Kropf, Peter/0000-0001-6187-1510; Rajman,
   Martin/0000-0002-1521-4920
FU Hasler fundation Swiss FNS [102819, 200021-127271/1]; Swiss National
   Science Foundation (SNF) [200021_127271] Funding Source: Swiss National
   Science Foundation (SNF)
FX This work was supported by Hasler fundation & Swiss FNS; 102819 and
   200021-127271/1.
CR Akavipat R, 2006, P WORKSH INF RETR PE
   Bao S, 2007, P 16 INT WORLD WID W
   Bender A, 2009, IEEE INFOCOM SER, P1755, DOI 10.1109/INFCOM.2009.5062095
   Bender M., 2005, DATENBANKSYSTEME BUS, V65, P125
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   CHAUM DL, 1981, COMMUN ACM, V24, P84, DOI 10.1145/358549.358563
   Cheng K., 2005, P 15 INT WORKSH RES
   Dabek F., 2003, P 2 INT WORKSH PEER
   Dingledine R, 2004, P 13 USENIX SEC S SE
   Felber P, 2010, P 10 IEEE INT C PEER
   Felber P, 2010, P DAIS 10 10 IFIP IN
   Freedman MJ, 2002, P 6 ACM COMP COMM SE
   Gummadi KrishnaP., 2006, 5 WORKSHOP HOT TOPIC, P79
   Gylfason H, 2006, P 5 INT JOINT C AUT
   Klemm F, 2005, P 3 INT WORKSH DAT I
   Klonowski M., 2004, PROC CENTRAL EUR C C, V4, P1
   Kondo M, 2009, 2009 INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED COMPUTING, APPLICATIONS AND TECHNOLOGIES (PDCAT 2009), P324, DOI 10.1109/PDCAT.2009.35
   Leonini L, 2009, P 6 USENIX S NETW SY
   LI J, 2003, P 2 INT WORKSH PEER
   Lopes N, 2007, P 1 WORKSH LARG SCAL
   Luu T, 2006, P WORKSH INF RETR PE
   Maymounkov P, 2002, LECT NOTES COMPUT SC, V2429, P53
   McLachlan J, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P590
   MISLOVE A, 2004, P 11 WORKSH ACM SIGO
   Pass G., 2006, ser. ACM International Conference Proceeding Series, V152, P1, DOI DOI 10.1145/1146847.1146848
   Pitkow J, 2002, COMMUN ACM, V45, P50, DOI 10.1145/567498.567526
   Ramasubramanian V, 2004, P 1 USENIX S NETW SY
   ROWSTRON A, 2001, P 18 ACM S OP SYST P
   Rowstron A, 2003, IFIPACM INT C DISTRI
   Schenkel R, 2008, P 31 ANN INT ACM SIG
   Serbu S, 2007, IEEE INTERNET COMPUT, V11, P53, DOI 10.1109/MIC.2007.81
   SUEL T, 2003, P 6 INT WORKSH WEB D
   Tan B., 2006, P 12 ACM SIGKDD INT
   Teevan J., 2005, SIGIR 2005. Proceedings of the Twenty-Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P449, DOI 10.1145/1076034.1076111
   Walfish M, 2006, P 3 USENIX S NETW SY, P21
   Zhuang L, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI '05), P301
NR 37
TC 1
Z9 1
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2013
VL 43
IS 10
SI SI
BP 1165
EP 1184
DI 10.1002/spe.1127
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 212YJ
UT WOS:000324018600003
DA 2024-07-18
ER

PT J
AU Chan, WK
   Cai, Y
AF Chan, W. K.
   Cai, Yan
TI In quest of the science in statistical fault localization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE statistical fault localization; mistakes; review; statistics
ID PROGRAM; MODEL
AB Many researchers employ various statistical methods to locate faults in faulty programs. Like other researchers, we sometimes have made mistakes in the quest of making statistical fault localization both practical and scientific. In this experience report, we reflect on our work conducted on this topic, organize our isolated experiences in the format of models and errors, and cast them in the context of statistics. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Chan, W. K.; Cai, Yan] City Univ Hong Kong, Kowloon Tong, Hong Kong, Peoples R China.
C3 City University of Hong Kong
RP Chan, WK (corresponding author), City Univ Hong Kong, Tat Chee Ave, Kowloon Tong, Hong Kong, Peoples R China.
EM wkchan@cs.cityu.edu.hk
RI Chan, Wah Kheong/AGA-6636-2022
OI Chan, Wah Kheong/0000-0002-9105-5837; Chan, Wing
   Kwong/0000-0001-7726-6235
FU General Research Grant of Research Grants Council of HKSAR [111410]
FX This work was supported in part by General Research Grant of Research
   Grants Council of HKSAR (project no. 111410).
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   [Anonymous], 2010, ISSTA
   [Anonymous], 2001, STAT INFERENCE
   [Anonymous], 2012, DATA PREPROCESSING
   [Anonymous], 2008, ISSTA
   Artho Cyrille, 2011, International Journal on Software Tools for Technology Transfer, V13, P223, DOI 10.1007/s10009-010-0139-9
   Baah GeorgeK., 2008, P 2008 INT S SOFTWAR, P189, DOI DOI 10.1145/1390630.1390654
   BERA AK, 1981, ECON LETT, V7, P313, DOI 10.1016/0165-1765(81)90035-5
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Cellier P, 2008, LECT NOTES ARTIF INT, V4933, P273, DOI 10.1007/978-3-540-78137-0_20
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   Debroy V., 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P506, DOI 10.1109/COMPSACW.2011.92
   Denmat T., 2005, 20 IEEE ACM INT C AU, P396
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Eagan J, 2001, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2001, PROCEEDINGS, P33, DOI 10.1109/INFVIS.2001.963277
   Harrold MJ, 1998, ACM SIGPLAN NOTICES, V33, P83, DOI 10.1145/277633.277647
   Hovemeyer D., 2005, ACM SIGSOFT Software Engineering Notes, P13
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Hu PF, 2008, INT CONF QUAL SOFTW, P385, DOI 10.1109/QSIC.2008.44
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Jackson A. A., 1989, AM NAT, V133, P436
   Jian Xu, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P11, DOI 10.1109/QSIC.2011.32
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Masri W, 2010, SOFTW TEST VERIF REL, V20, P121, DOI 10.1002/stvr.409
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   RICHARDSON DJ, 1993, IEEE T SOFTWARE ENG, V19, P533, DOI 10.1109/32.232020
   Santoro R, 2009, IEEE COMP SOC ANN, P55, DOI 10.1109/ISVLSI.2009.33
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Sumner W.N., 2011, Proceedings of ACM International Symposium on Software Testing and Analysis, P309
   Vaziri M, 2006, ACM SIGPLAN NOTICES, V41, P334, DOI 10.1145/1111320.1111067
   VESSEY I, 1986, IEEE T SYST MAN CYB, V16, P621, DOI 10.1109/TSMC.1986.289308
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wilkinson J. H., 1988, Monographs on numerical analysis
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Yates F., 1934, JR STATIST SOC     S, V1, P217, DOI [https://doi.org/10.2307/2983604, DOI 10.2307/2983604]
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang X, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1133981.1134002
   Zhang ZY, 2011, P INT COMP SOFTW APP, P58, DOI [10.1109/COMPSAC.2011.16, 10.1109/IMCCC.2011.24]
   Zhang ZY, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P43, DOI 10.1145/1595696.1595705
   Zhang ZY, 2011, J SYST SOFTWARE, V84, P885, DOI 10.1016/j.jss.2010.12.048
   Zhang ZY, 2010, J SYST SOFTWARE, V83, P174, DOI 10.1016/j.jss.2009.09.041
   Zhang ZY, 2009, INFORM SOFTWARE TECH, V51, P1573, DOI 10.1016/j.infsof.2009.06.013
   Zhao Q., 2006, 15 INT C PARALLEL AR, P154, DOI DOI 10.1145/1152154.1152180
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 57
TC 3
Z9 3
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2013
VL 43
IS 8
SI SI
BP 971
EP 987
DI 10.1002/spe.1147
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 279UM
UT WOS:000328984900005
DA 2024-07-18
ER

PT J
AU Brandner, F
   Pavlu, V
   Krall, A
AF Brandner, Florian
   Pavlu, Viktor
   Krall, Andreas
TI Automatic generation of compiler backends
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE processor description languages; compiler; instruction selection;
   completeness
ID CODE GENERATION; SELECTION
AB Application-specific instruction set processors have proven successful in meeting the various design constraints of modern embedded systems and often provide the only viable trade-off between computing power and opposing metrics such as power consumption. A promising approach to facilitate the exploration of processor design alternatives are processor description languages, which capture the instruction set and hardware organization of a processor. With the use of those processor models, various design tasks, for example, the adaption of software development tools, the generation of hardware models, and various verification tasks, can be automatized. These languages thus allow effective shortening of development turnaround times. In this work, the novel xADL language is presented, which, in contrast to most contemporary processor description languages, focuses on a structural modeling of the processor's hardware organization. However, a behavioral model of the instruction set is automatically derived using instruction set extraction. This provides a tight coupling between the structural hardware view and the instruction set view of the processor and reduces the complexity of processor models in comparison with existing languages. The feasibility of our approach is demonstrated by a compiler backend generator based on tree pattern matching. An important property of our generator is its ability to automatically verify whether the resulting compiler is complete, that is, it can process all possible input programs. The generated compilers are competitive to handcrafted production compilers, showing speedups of up to 20% for certain benchmarks. On average, moderate slowdowns between 3% and 15% have been observed for several processor models while considerable reductions in code size have been measured. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Brandner, Florian] INRIA, UCB Lyon, ENS Lyon, COMPSYS,LIP,UMR CNRS 5668, Lyon, France.
   [Pavlu, Viktor; Krall, Andreas] Vienna Univ Technol, Programming Languages Grp, A-1040 Vienna, Austria.
C3 Ecole Normale Superieure de Lyon (ENS de LYON); Universite Claude
   Bernard Lyon 1; Inria; Technische Universitat Wien
RP Brandner, F (corresponding author), INRIA, UCB Lyon, ENS Lyon, COMPSYS,LIP,UMR CNRS 5668, Lyon, France.
EM florian.brandner@ens-lyon.fr
OI Brandner, Florian/0000-0002-2493-7864
FU Christian Doppler Laboratory 'Compilation Techniques for Embedded
   Systems'; OnDemand Microelectronics
FX This work is partially supported by the Christian Doppler Laboratory
   'Compilation Techniques for Embedded Systems' and OnDemand
   Microelectronics.
CR AHO AV, 1976, J ACM, V23, P488, DOI 10.1145/321958.321970
   AHO AV, 1989, ACM T PROGR LANG SYS, V11, P491, DOI 10.1145/69558.75700
   Akaboshi H, 1994, APCHDL 94 P AS PAC C, P67
   Allen J.R., 1983, Proc. of the Symposium on Principles of Programming Languages. POPL, P177
   [Anonymous], P 12 INT WORKSH SOFT
   Azevedo R, 2005, INT J PARALLEL PROG, V33, P453, DOI 10.1007/s10766-005-7301-0
   Bondy J. A., 2007, GRADUATE TEXTS MATH, V244
   Branca F, 2007, The challenge of obesity in the WHO European Region and the strategies for response, P13
   Brandner F., 2010, Proceedings of the 21st IEEE International Conference on Application-Specific Systems, Architectures and Processors (ASAP 2010), P175, DOI 10.1109/ASAP.2010.5540994
   Brandner F, 2009, RAPIDO 09 WORKSH RAP
   Brandner F, 2009, THESIS TECHNISCHE U
   Buchwald S, 2008, THESIS U KARLSRUHE
   Ceng JJ, 2005, DES AUT TEST EUROPE, P1150, DOI 10.1109/DATE.2005.88
   Comon H., 2007, TREE AUTOMATA TECHNI
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Delvai M, 2003, 15TH EUROMICRO CONFERENCE ON REAL-TIME SYSTEMS, PROCEEDINGS, P169, DOI 10.1109/EMRTS.2003.1212740
   Ebner D, 2008, ACM SIGPLAN NOTICES, V43, P31, DOI 10.1145/1379023.1375663
   Eckstein E, 2003, LECT NOTES COMPUT SC, V2826, P49
   Emmelmann H., 1992, Compiler Construction. 4th International Conference CC'92 Proceedings, P163
   EMMELMANN H, 1989, SIGPLAN NOTICES, V24, P227, DOI 10.1145/74818.74838
   FAUTH A, 1995, EUR CONF DESIG AUTOM, P503, DOI 10.1109/EDTC.1995.470354
   Fisher J.A., 2005, Embedded Computing: A VLIW Approach to Architecture, Compilers, and Tools
   Fraser C. W., 1992, ACM Letters on Programming Languages and Systems, V1, P213, DOI 10.1145/151640.151642
   GIEGERICH R, 1988, LECT NOTES COMPUT SC, V300, P247
   Glesner S, 2002, ELECT NOTES THEORETI, V65, P19, DOI [10.1016/S1571-0661(04)80394-3, DOI 10.1016/S1571-0661(04)80394-3]
   Guthaus MR, 2001, P WORKSH WORKL CHAR
   Halambi A, 1999, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION 1999, PROCEEDINGS, P485, DOI 10.1109/DATE.1999.761170
   HOFFMANN CM, 1982, J ACM, V29, P68, DOI 10.1145/322290.322295
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lee CH, 1997, INT SYMP MICROARCH, P330, DOI 10.1109/MICRO.1997.645830
   Leroy X, 2006, ACM SIGPLAN NOTICES, V41, P42, DOI 10.1145/1111320.1111042
   Leupers R, 1997, EUR CONF DESIG AUTOM, P140
   Leupers R., 1998, DESIGN AUTOMATION EM, P1
   Marwedel P., 1984, Proc. Design Automation Conf, P587
   Necula GC, 1998, ACM SIGPLAN NOTICES, V33, P333, DOI 10.1145/277652.277752
   ON DEMAND Microelectronics, 2006, ODM CHILI PROGR GUID
   PATTERSON DA, 2007, COMPUTER ORG DESIGN
   Pees S., 1999, Proceedings 1999 Design Automation Conference (Cat. No. 99CH36361), P933, DOI 10.1109/DAC.1999.782231
   Pnueli A, 1998, LECT NOTES COMPUT SC, V1384, P151, DOI 10.1007/BFb0054170
   Van Praet J, 2001, ACM T DES AUTOMAT EL, V6, P277, DOI 10.1145/383251.383252
   Wallace K, 2008, BIOCHEM J, V411, P1, DOI 10.1042/BJ20071570
   Zimmermann W, 2006, LECT NOTES COMPUT SC, V4313, P74, DOI 10.1007/11925040_6
NR 42
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2013
VL 43
IS 2
BP 207
EP 240
DI 10.1002/spe.2106
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 071SP
UT WOS:000313614800004
DA 2024-07-18
ER

PT J
AU Stanimirovic, A
   Bogdanovic, M
   Stoimenov, L
AF Stanimirovic, Aleksandar
   Bogdanovic, Milos
   Stoimenov, Leonid
TI Methodology and intermediate layer for the automatic creation of
   ontology instances stored in relational databases
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data integration; hybrid ontology approach; intermediate layer; mapping
   language; translator; wrapper components
AB In this paper, we introduce our solution for mapping local ontologies to relational and object-oriented representations. This solution is part of the GeoNis framework for the interoperability of geo-information systems applications in a local community environment. The GeoNis framework is based on a hybrid ontology approach for data integration. Therefore, a very important subject in our research on semantic data integration is the creation of mapping between a spatial information source and its local ontology. We developed the OWL2RDB mapping language to create an intermediate layer between a relational database and the OWL ontology. This intermediate layer contains rules (expressed in the OWL2RDB language) for mapping between the structural elements of a relational database and the concepts of OWL ontologies. We also present a system that uses the OWL2RDB intermediate layer to create classes that can handle ontology instances stored in relational databases. We have developed a prototype for a tool that uses this proposed approach for the automatic generation of translator/wrapper components in the GeoNis interoperability environment. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Stanimirovic, Aleksandar; Bogdanovic, Milos; Stoimenov, Leonid] Univ Nis, Fac Elect Engn, Nish 18000, Serbia.
C3 University of Nis
RP Stanimirovic, A (corresponding author), Univ Nis, Fac Elect Engn, Aleksandra Medvedeva 14, Nish 18000, Serbia.
EM aleksandar.stanimirovic@elfak.ni.ac.rs
RI Bogdanovic, Milos/KBQ-4642-2024; Stanimirovic, Aleksandar/AIB-9324-2022
OI Stanimirovic, Aleksandar/0000-0001-8772-4930; Bogdanovic,
   Milos/0000-0002-9262-2821; Stoimenov, Leonid/0000-0003-1097-9833
FU Ministry of Science of the Republic of Serbia; ED Jugoistok Nis [13003,
   III 47003]
FX The present research was supported in part by the Ministry of Science of
   the Republic of Serbia and ED Jugoistok Nis within the project
   frameworks in the field of technological development 'Intelligent
   integration of geo-, business and technical information on the company
   level' ev. No 13003 and 'Technology Enhanced Learning' ev. No III 47003.
CR Ambler SW, 2002, OBJECT RELATIONAL IM
   [Anonymous], 2008, SPARQL Query Language for RDF
   [Anonymous], RDF VOC DESCR LANG 1
   Baglioni M, 2007, LECT NOTES COMPUT SC, V4853, P195
   BARRASA J, 2004, P 2 WORKSH SEM WEB D
   Bartalos P., 2007, P 2 IFIP CENTR E EUR
   Berners-Lee T., 1998, Relational Databases on the Semantic Web
   Bizer C., 2007, W3C WORKSH RDF ACC R
   Bizer C., 2003, D2r map-a database to rdf mapping language
   Blakeley C., 2007, RDF views of SQL data (declarative SQL schema to RDF mapping)
   Buccella A, 2009, COMPUT GEOSCI-UK, V35, P710, DOI 10.1016/j.cageo.2008.02.033
   Cullot Nadine, 2007, SEBD, P491
   de Laborda C.P., 2006, DATA ENG WORKSHOPS, P55
   Fonseca F, 1999, P 7 ACM INT S ADV GE
   Fonseca FredericoT., 1999, ACM GIS 99 P 7 INT S, P14
   GeoNames, 2011, GEONAMES OWL ONT
   GeoVise, 2011, HIB SPAT
   Guarino N, 1998, FR ART INT, V46, P3
   Konstantinou N, 2006, INT CAISE WORKSH WEB
   NHibernate, 2011, NHIB FORG
   Nock C, 2003, DATA ACCESS PATTERNS
   Open geospatial consortium, 2011, OPNGIS SIMPL FEAT SP
   Open Geospatial Consortium, OPENGIS WEB FEAT SER
   Stanimirovic A, 2006, P 41 INT SCI C INF C, P232
   Stoimenov L, 2005, COMPUT GEOSCI-UK, V31, P211, DOI 10.1016/j.cageo.2004.09.017
   Stoimenov L, 2000, IEEE MEDITERR ELECT, P334
   STOIMENOV L., 2005, AGILE 2005, 8th AGILE Conference on GIScience, Estoril, Portugal, P261
   Stoimenov L, 2004, ACTA ELECTROTECHNICA, V4, P25
   Stojanovic L., 2002, SAC '02: Proceedings of the 2002 ACM symposium on applied computing, P1100, DOI DOI 10.1145/508791.509008
   Vckovski A, 1998, INT J GEOGR INF SCI, V12, P297
   W3C RDB2RDF Incubator Group, 2009, SURV CURR APPR MAPP
   Wache H., 2001, P IJCAI 01 WORKSH ON, P108
   World Wide Web Consortium, 2011, RDF XML SYNT SPEC
   World Wide Web Consortium, 2011, OWL WEB ONT LANG
   World Wide Web Consortium, 2011, BAS GEO WGS84 LAT LO
   Wu Z., 2006, SEMANTIC WEB CHALLEN
   Xiaomeng Su, 2002, Advanced Information Systems Engineering. 14th International Conference, CAiSE 2002. Proceedings (Lecture Notes in Computer Science Vol.2348), P761
NR 37
TC 5
Z9 6
U1 0
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2013
VL 43
IS 2
BP 129
EP 152
DI 10.1002/spe.2103
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 071SP
UT WOS:000313614800001
DA 2024-07-18
ER

PT J
AU Kardas, G
   Challenger, M
   Yildirim, S
   Yamuc, A
AF Kardas, Geylani
   Challenger, Moharram
   Yildirim, Suleyman
   Yamuc, Ali
TI Design and implementation of a multiagent stock trading system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software agents; agent-oriented software engineering; stock trading;
   belief-desire-intention
ID AGENTS; TROPOS
AB Stock trading is one of the key items in an economy and estimating its behavior and taking the best decision in it are among the most challenging issues. Solutions based on intelligent agent systems are proposed to cope with those challenges. Agents in a multiagent system (MAS) can share a common goal or they can pursue their own interests. That nature of MASs exactly fits the requirements of a free market economy. Although existing studies include noteworthy proposals on agent-based market simulation and researchers discuss theoretical design issues of agent-based stock exchange systems, unfortunately only a very few of the studies consider exact development and implementation of multiagent stock trading systems within the software engineering perspective and guides to the software engineers for constructing such software systems starting from scratch. To fill this gap, in this paper, we discuss the development of a multiagent-based stock trading system by taking into consideration software design according to a well-defined agent oriented software engineering methodology and implementation with a widely-used MAS software development framework. Each participant in the system is first designed as beliefdesireintention agents with their facts, goals, and plans, and then beliefdesireintention reasoning and behavioral structure of the designed agents are implemented. Lessons learned during design and development within the software engineering perspective and evaluation of the implemented multiagent stock exchange system are also reported. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Kardas, Geylani; Challenger, Moharram; Yildirim, Suleyman; Yamuc, Ali] Ege Univ, Int Comp Inst, TR-35100 Izmir, Turkey.
C3 Ege University
RP Kardas, G (corresponding author), Ege Univ, Int Comp Inst, TR-35100 Izmir, Turkey.
EM geylani.kardas@ege.edu.tr
RI Kardas, Geylani/AAG-5355-2019; Challenger, Moharram/E-2164-2014
OI Kardas, Geylani/0000-0001-6975-305X; Challenger,
   Moharram/0000-0002-5436-6070
CR [Anonymous], 1995, THESIS U TORONTO TOR
   Bellifemine F., SOFTWARE PRACTIVE EX, V31, P103, DOI [10.1002/1097-024X(200102)31:2&LT;103::AID-SPE358&GT;3.0.CO;2-O, DOI 10.1002/1097-024X(200102)31:2<LESS]
   BJURSELL J, 2004, INT J ED INFORM TECH, V1, P28
   Bratman Michael., 1987, Intention, Plans, and
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   El-Sawi K., 1998, 1998 INT C IND ENG M
   Foundation for Intelligent Physical Agents (FIPA), 2011, COMM ACT LIB SPEC
   Giorgini P., 2005, AGENT ORIENTED METHO, P20, DOI DOI 10.4018/978-1-59140-581-8.CH002
   Kendall G, 2003, IEEE C EVOL COMPUTAT, P2298
   KENDALL G, 2003, P 2003 INT C MACH LE, P200
   Kucukkocaoglu G., 2004, ISE REV, V8, P66
   Luo Y, 2002, IEEE NETWORK, V16, P20, DOI 10.1109/65.980541
   Object Management Group, 2011, MOD DRIV ARCH
   Object Management Group, 2011, OBJ QUER LANG
   Penserini L, 2007, ACM T AUTON ADAP SYS, V2, DOI 10.1145/1293731.1293736
   Perini A, 2006, LECT NOTES COMPUT SC, V3950, P167
   Pokahr A, 2005, MU S ART SOC SIM ORG, V15, P149, DOI 10.1007/0-387-26350-0_6
   Pokahr A., 2007, DEV MULTIAGENT SYSTE, P254
   Posada M, 2006, LECT NOTES COMPUT SC, V4224, P1223
   Rahimi Shahram, 2009, International Journal of Intelligent Information and Database Systems, V3, P203, DOI 10.1504/IJIIDS.2009.025163
   RAO AS, 1995, 1 INT C MULT SYST IC, P312
   RUST J, 1993, SFI S SCI C, V14, P155
   Sycara KP, 1998, AI MAG, V19, P79
   WOOLDRIDGE M, 1995, KNOWL ENG REV, V10, P115, DOI 10.1017/S0269888900008122
   Zou Y., 2004, THESIS U MARYLAND BA
NR 26
TC 15
Z9 17
U1 8
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2012
VL 42
IS 10
BP 1247
EP 1273
DI 10.1002/spe.1137
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000QM
UT WOS:000308402000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, GF
   Yang, Y
   Yuan, D
   Chen, JJ
AF Zhang, Gaofeng
   Yang, Yun
   Yuan, Dong
   Chen, Jinjun
TI A trust-based noise injection strategy for privacy protection in cloud
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud; privacy protection; noise injection strategy; trust
AB Cloud promises users that they can present and deploy IT services in a pay-as-you-go fashion in an open and virtualized cloud environment while saving huge capital investment in their own IT infrastructure. In this sense, protection of users' privacy is critical and has become one of the most concerned issues as otherwise users may eventually lose the confidence and passion of deploying cloud in practice. Under some special cloud circumstances, some users' privacy, such as plans or habits, could be induced from their service requests by service providers without permissions from users. In this regard, obfuscation strategy can protect this kind of privacy by injecting noise service requests to confuse potential immoral service providers. However, existing noise obfuscation strategies focus on single noise injection whereas investigation of noise injection architecture has been neglected. Especially, a common service pattern in inter-clouds environment, the cooperative service process including different service providers, makes the risk of privacy serious and uncontrollable by the spread of users' privacy. To address this, we present a novel trust-based noise injection strategy for privacy protection in cloud. To support the strategy, we describe our noise injection architecture in cloud which specializes in the relations between various service roles in inter-clouds based on our trust model. The simulation can demonstrate that our noise injection strategy could significantly improve the effectiveness of privacy protection. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Zhang, Gaofeng; Yang, Yun; Yuan, Dong; Chen, Jinjun] Swinburne Univ Technol, Fac Informat & Commun Technol, Melbourne, Vic 3122, Australia.
C3 Swinburne University of Technology
RP Zhang, GF (corresponding author), Swinburne Univ Technol, Fac Informat & Commun Technol, Melbourne, Vic 3122, Australia.
EM gzhang@swin.edu.au
RI Jiang, Jiaojiao/AAF-7525-2020; Zhang, Gaofeng/JXL-4324-2024; Chen,
   Jinjun/AAP-2361-2020
OI Jiang, Jiaojiao/0000-0001-7307-8114; Zhang, Gaofeng/0000-0003-0536-7226;
   Chen, Jinjun/0000-0003-1677-9525; Yuan, Dong/0000-0003-1130-0888
CR Agrawal R, 2000, SIGMOD REC, V29, P439, DOI 10.1145/335191.335438
   Ardagna C, 2009, IEEE T DEPENDABLE SE
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Bacon J, 2003, SOFTWARE PRACT EXPER, V33, P375, DOI 10.1002/spe.511
   Beimel A, 2005, J COMPUT SYST SCI, V71, P213, DOI 10.1016/j.jcss.2005.03.002
   Beimel A, 2002, ANN IEEE SYMP FOUND, P261, DOI 10.1109/SFCS.2002.1181949
   Boursas Latifa, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P684, DOI 10.1109/CSE.2009.40
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Cachin C, 1999, ADV CRYPTOLOGY, P402
   Chor B, 1998, J ACM, V45, P965, DOI 10.1145/293347.293350
   Dingledine R., 2004, P 13 C USENIX SEC S, V13, P21, DOI DOI 10.1186/1476-0711-3-21
   Etalle S, 2009, ACM T INFORM SYST SE, V13, DOI 10.1145/1609956.1609961
   Evfimievski A., 2003, ACM S PRINCIPLES DAT, P211, DOI DOI 10.1145/773153.773174
   Ficco M, 2009, SOFTWARE PRACT EXPER, V39, P1095, DOI 10.1002/spe.919
   Goldberg I, 2007, P IEEE S SECUR PRIV, P131, DOI 10.1109/SP.2007.23
   Goldschlag D, 1999, COMMUN ACM, V42, P39, DOI 10.1145/293411.293443
   Golle P, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455521
   Gray J. W.  III, 1993, Proceedings 1993 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.93CH3290-4), P90, DOI 10.1109/RISP.1993.287640
   Hawkey Kirstie, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P990, DOI 10.1109/CSE.2009.434
   IBM Cloud Labs, 2009, IBM PERSP CLOUD COMP
   Li WJ, 2009, LECT NOTES COMPUT SC, V5931, P69
   Lin C, 2004, P IEEE I C SERV COMP, P303
   Liu K, 2007, PRIVACY PRESERVING D
   Liu L, 2008, DATA KNOWL ENG, V65, P5, DOI 10.1016/j.datak.2007.06.011
   Liu X, 2010, HANDBOOK OF CLOUD COMPUTING, P309, DOI 10.1007/978-1-4419-6524-0_13
   Luo XF, 2009, CONCURR COMP-PRACT E, V21, P2018, DOI 10.1002/cpe.1460
   Narayanan A, 2009, P IEEE S SECUR PRIV, P173, DOI 10.1109/SP.2009.22
   Olivier MS, 2005, P ANN RES C S AFR I, P104
   Pearson S, 2009, CLOUD: 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING CHALLENGES OF CLOUD COMPUTING, P44, DOI 10.1109/CLOUD.2009.5071532
   Pearson S, 2009, LECT NOTES COMPUT SC, V5931, P90, DOI 10.1007/978-3-642-10665-1_9
   Shan Yinan, 2009, 2009 IEEE 6th International Conference on Mobile Adhoc and Sensor Systems. MASS 2009, P702, DOI 10.1109/MOBHOC.2009.5336932
   Shaozhi Ye, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P1, DOI 10.1109/CSE.2009.77
   Squicciarini A, 2007, ACM T INFORM SYST SE, V10, DOI 10.1145/1266977.1266981
   SwinDeW-G Team, 2008, SYST ARCH SWINDEW G
   Weiss Aaron, 2007, Networker, V11, P16, DOI 10.1145/1327512.1327513
   Yan LA, 2009, LECT NOTES COMPUT SC, V5931, P167
NR 36
TC 11
Z9 13
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2012
VL 42
IS 4
SI SI
BP 431
EP 445
DI 10.1002/spe.1052
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902OK
UT WOS:000301047600004
DA 2024-07-18
ER

PT J
AU Huang, CM
   Ku, HH
   Chao, YC
   Lin, CW
   Chen, YW
AF Huang, Chung-Ming
   Ku, Hao-Hsiang
   Chao, Yu-Chang
   Lin, Cheng-Wei
   Chen, Yen-Wen
TI Design and implementation of an adaptive Web2.0 QoS-based home appliance
   control service platform
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Devices Profile for Web Services (DPWS); Open Services Gateway
   initiative (OSGi); Web QoS; Web2; 0; web services
ID ARCHITECTURE; OSGI
AB The rapid progress of information techniques enables people to have a relatively convenient environment and life. This study designs and develops the Web2.0-based Home Appliances controL sErvice platform (WHALE) for users to easily control home appliances. WHALE is a three-tier architecture, which consists of Device Detection and Registration Service Platform (DDRSP), Web2.0 Service Platform (WSP), and Common Service Platform (CSP). WHALE is based on the standards of Devices Profile for Web Services (DPWS), Open Services Gateway initiative (OSGi), and Web2.0 techniques. Users can use many kinds of handheld devices to get services from WSP. When DDRSP finds a new home appliance, this home appliance will be registered into CSP. CSP records the related information and services which are provided by this home appliance. WSP not only integrates and shows the related services of all home appliances but also provides controlling interfaces to control the actions of all home appliances. All delivered messages are based on Simple Object Access Protocol (SOAP) and Web Services Description Language (WSDL). Furthermore, for the Web QoS (Quality of Service) strategy, this study designs and proposes an Intelligent Web qualIty of Service-aware maTching (iWIST) model to satisfy different characteristics of the user's requirements. iWIST consists of Components Classifier, Admission Controller, and Dynamic Content Adaptor. Component Classifier can classify users' requesting components with different QoS constraints. Admission Controller determines the maximum available components for the user. Dynamic Content Adaptor dynamically delivers component information to users. Experiment results illustrate that WHALE can provide appropriate contents with low response time to users. Finally, WHALE has integrity, scalability, operability, adaptivity, and extensibility functions. It can be a reference model for developing home appliance controllers in the future. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Ku, Hao-Hsiang] Hwa Hsia Inst Technol, Dept Comp Sci & Informat Engn, Taipei, Taipei County, Taiwan.
   [Huang, Chung-Ming; Chao, Yu-Chang; Lin, Cheng-Wei; Chen, Yen-Wen] Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 70101, Taiwan.
C3 National Cheng Kung University
RP Ku, HH (corresponding author), Hwa Hsia Inst Technol, Dept Comp Sci & Informat Engn, Taipei, Taipei County, Taiwan.
EM kuhh@cc.hwh.edu.tw
FU National Science Council of the Republic of China, Taiwan [NSC
   99-2219-E-006-008, NSC 99-2218-E-146-003-MY2]
FX This research is supported by the National Science Council of the
   Republic of China, Taiwan under the contract numbers are NSC
   99-2219-E-006-008 and NSC 99-2218-E-146-003-MY2.
CR [Anonymous], 2008, INT INT WEB 2 0 TECH
   [Anonymous], 2009, OSGI ALL OSGI SERV P
   [Anonymous], 2007, INT DEV GUID INT WEB
   Bobek Andreas, 2008, 2008 6th IEEE International Conference on Industrial Informatics (INDIN), P797, DOI 10.1109/INDIN.2008.4618210
   Bottaro Andre, 2008, 2008 22nd International Conference on Advanced Information Networking and Applications - Workshops, P378, DOI 10.1109/AINA.2008.14
   Bourcier J, 2006, P IEEE I C SERV COMP, P463, DOI 10.1109/SCC.2006.5
   Duan F., 2008, P 4 INT C WIR COMM N, P1
   Franklin R, 2006, UBIQUITOUS WEB UPNP
   Harumoto K., 2005, ACM Transactions on Internet Technology, V5, P571, DOI 10.1145/1111627.1111628
   Hyung-Jun Yim, 2007, 2007 International Conference on Convergence Information Technology - ICCIT '07, P1032
   Kim HS, 2007, 2007 INTERNATIONAL SYMPOSIUM ON INFORMATION TECHNOLOGY CONVERGENCE, PROCEEDINGS, P86
   Kirkham T., 2008, 2008 6th IEEE International Conference on Industrial Informatics (INDIN), P1419, DOI 10.1109/INDIN.2008.4618326
   Kwon W, 2008, IEEE INT S COMP EL I, P1
   Lee S. C. M., 2002, Performance Evaluation Review, V30, P172, DOI 10.1145/511399.511356
   Lin RT, 2008, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON SENSING TECHNOLOGY, P527, DOI 10.1109/ICSENST.2008.4757162
   Microsoft Corporation, 2006, WIND RALL TECHN OV
   Moeller R, 2008, P 7 INT CAR C DEV CI, P1
   OASIS Standard, 2009, OASIS DEV PROF WEB S
   OSGi Alliance, DYN MOD SYST JAV
   Pan WP, 2008, HPCC 2008: 10TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P328, DOI 10.1109/HPCC.2008.106
   Perumal T, 2008, IEEE T CONSUM ELECTR, V54, P453, DOI 10.1109/TCE.2008.4560114
   Ribeiro L, 2008, IEEE INTL CONF IND I, P728
   UPnP&TRADE; Forum, 2006, UPNP TECHN SIMPL SEA
   Valtchev D, 2002, IEEE COMMUN MAG, V40, P126, DOI 10.1109/35.995862
   Wang Cong, 2008, 2008 6th IEEE International Conference on Industrial Informatics (INDIN), P1459, DOI 10.1109/INDIN.2008.4618334
   Wu CL, 2007, IEEE T SYST MAN CY C, V37, P193, DOI 10.1109/TSMCC.2006.886997
   Wu JK, 2008, IEEE T CONSUM ELECTR, V54, P1166, DOI 10.1109/TCE.2008.4637602
   Xiao P, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P413, DOI 10.1109/ICACTE.2008.80
   Yeoh CM, 2008, THIRD 2008 INTERNATIONAL CONFERENCE ON CONVERGENCE AND HYBRID INFORMATION TECHNOLOGY, VOL 1, PROCEEDINGS, P82, DOI 10.1109/ICCIT.2008.191
   Zeeb Elmar, 2007, 2007 Inaugural IEEE International Conference on Digital Ecosystems and Technologies, P229, DOI 10.1109/DEST.2007.371975
NR 30
TC 1
Z9 2
U1 0
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2012
VL 42
IS 1
BP 57
EP 87
DI 10.1002/spe.1049
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 869KG
UT WOS:000298596200005
DA 2024-07-18
ER

PT J
AU Dembitz, S
   Randic, M
   Gledec, G
AF Dembitz, Sandor
   Randic, Mirko
   Gledec, Gordan
TI Advantages of online spellchecking: a Croatian example
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE language corpus; spellchecker traffic; supervised learning; mathematical
   modeling of spellchecking parameters; Heaps' law; workload anticipation
ID COMPUTER DETECTION
AB Online spellchecking is commonly regarded as an auxiliary way of performing spellchecking. However, it offers a unique opportunity to constantly improve spellchecker linguistic functionality through interaction with the community of spellchecker users. Such a possibility is crucial for spellchecking in non-central and under-resourced languages, in order to overcome gaps in NLP tools between them and central languages. The paper describes Hascheck, a Croatian online spellchecker able to learn words from texts it receives. It started as the first Croatian spellchecker, hence as a basic NLP tool for an under-resourced language, but due to its learning ability it demonstrates linguistic functionality comparable to that of conventional central-language spellcheckers. Based on these experiences we also discuss the future of online spellchecking in the context of global NLP tasks. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Dembitz, Sandor; Randic, Mirko; Gledec, Gordan] Univ Zagreb, Fac Elect Engn & Comp, Zagreb 10000, Croatia.
C3 University of Zagreb
RP Dembitz, S (corresponding author), Univ Zagreb, Fac Elect Engn & Comp, Unska 3, Zagreb 10000, Croatia.
EM sandor.dembitz@fer.hr
RI Randic, Mirko/HPF-4660-2023; Gledec, Gordan/T-6233-2019
OI Randic, Mirko/0000-0002-1844-0317; Gledec, Gordan/0000-0003-4188-6357
CR ANIC V, 2001, ORTHOGRAPHY MANUAL C
   ANIC V, 2003, COMPREHENSIVE DICT C, P1881
   [Anonymous], 1949, Human behaviour and the principle of least-effort
   ARPPE A, 2005, INQUIRIES WORDS CONS
   BABIC S, 2006, CROATIAN ORTHOGRAPHY
   BADURINA L, 2007, MANUAL CROATIAN ORTH
   Baeza-Yates R, 2004, STUD FUZZ SOFT COMP, V148, P565
   Beesley K. R., 2003, Finite-State Morphology: Xerox Tools and Techniques
   BRATANIC M, 1975, B I LINGUISTICS ZAGR, V1, P71
   DAMERAU FJ, 1964, COMMUN ACM, V7, P171, DOI 10.1145/363958.363994
   DAMERAU FJ, 1989, INFORM PROCESS MANAG, V25, P659, DOI 10.1016/0306-4573(89)90099-X
   DEMBITZ S, 1999, P SOFTCOM 99, P299
   DEMBITZ S, 1997, P SOFTCOM 1997 SPLIT, P191
   DEMBITZ S, 1996, P SOFTCOM 1996 SPLIT, P219
   DEMBITZ S, 1993, ACTA GRAPHICA, V5, P29
   DEMBITZ S, 1982, P INT ZUR SEM DIG CO, P59
   DEMBITZ S, 2009, WILEY ENCY COMPUTER, V5, P2793
   DEMBITZ S, 1999, APPL INNOVATIONS EXP, V6, P184
   DOLGOPOLOV AS, 1986, CYBERNETICS+, V22, P332
   *GNU, 2009, GNU ASP
   Goldsmith J, 2001, COMPUT LINGUIST, V27, P153, DOI 10.1162/089120101750300490
   GORE A, 1998, 15 INT ITU PLEN C MI
   Heaps H. S., 1978, Information retrieval: Computational and theoretical aspects
   *I CROAT LANG LING, 2009, CROAT LANG REP
   ISO, ISO-International Organization for Standardization 3166
   JOJIC LJ, 2003, CROATIAN ENCY DICT
   Kornai A., 2002, Glottometrics, V4, P61
   KOSKENNIEMI K, 1983, THESIS U HELSINKI HE
   KUKICH K, 1992, COMPUT SURV, V24, P377
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   *MAXMIND, ALL IP ADDR COUNTR
   MCILROY MD, 1982, IEEE T COMMUN, V30, P91, DOI 10.1109/TCOM.1982.1095395
   MORRIS R, 1975, IEEE T PROF COMMUN, VPC18, P54, DOI 10.1109/TPC.1975.6593963
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Navarro G, 2001, SOFTWARE PRACT EXPER, V31, P1265, DOI 10.1002/spe.411
   Nemeth L., 2004, First Steps in Language Documentation for Minority Languages: Computational Linguistic Tools for Morphology, Lexicon and Corpus Compilation, Proceedings of the SALTMIL Workshop at LREC, P56
   PAVLEK J, 2008, 10 INT PHD WORKSH OW, V25, P29
   PETERSON JL, 1986, COMMUN ACM, V29, P633, DOI 10.1145/6138.6146
   PETERSON JL, 1980, LECT NOTES COMPUTER, V96
   Philips L., 2000, C/C++ Users Journal, V18, P38
   Philips L., 1990, Computer Language Magazine, V7, P38
   REYNAERT MWC, 2005, THESIS TILBURG U NET
   Scannell Kevin P., 2007, CAHIERS CENTAL, V4, P5
   STREITER O, 2005, P C LESS US LANG COM, P189
   Streiter O, 2006, MACH TRANSL, V20, P267, DOI 10.1007/s10590-007-9026-x
   THOMPSON H, 1994, P LANG ENG CONV, P47
   Tron Viktor., 2005, Proceedings of the ACL Workshop on Software, P77
   TURBA TN, 1981, ACM SIGPLAN NOTICES, V16, P51
   VUJIC A, 1996, CROATIAN LEXICON
   2009, INT ISPELL
NR 50
TC 6
Z9 6
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2011
VL 41
IS 11
BP 1203
EP 1231
DI 10.1002/spe.1037
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827RZ
UT WOS:000295446900003
DA 2024-07-18
ER

PT J
AU Hnetynka, P
   Plásil, F
AF Hnetynka, Petr
   Plasil, Frantisek
TI Using meta-modeling in design and implementation of component-based
   systems: the SOFA case study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software architectures; software components; model-driven development;
   meta-models; model transformation
AB To allow efficient and user-friendly development of a component-based application, component systems have to provide a rather complex development infrastructure, including a tool for component composition, component repository, and a run-time infrastructure. In this paper, we present and evaluate benefits of using meta-modeling during the process of defining a component system and also during creation of the development and run-time infrastructures. Most of the presented arguments are based on a broad practical experience with designing the component systems SOFA and SOFA 2; the former designed in a classical ad hoc 'manual' way, whereas the latter with the help of meta-modeling. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Plasil, Frantisek] Acad Sci Czech Republ, Inst Comp Sci, Prague 18000 8, Czech Republic.
   [Hnetynka, Petr; Plasil, Frantisek] Charles Univ Prague, Dept Distributed & Dependable Syst, CR-11800 Prague 1, Czech Republic.
C3 Czech Academy of Sciences; Institute of Computer Science of the Czech
   Academy of Sciences; Charles University Prague
RP Plásil, F (corresponding author), Acad Sci Czech Republ, Inst Comp Sci, Pod Vodarenskou Vez, Prague 18000 8, Czech Republic.
EM plasil@d3s.mff.cuni.cz
RI Hnětynka, Petr/J-1892-2017
OI Hnětynka, Petr/0000-0002-1008-6886
FU Grant Agency of the Czech Republic [201/08/0266];  [SVV-2010-261312]
FX This work was partially supported by the grant SVV-2010-261312 and by
   the Grant Agency of the Czech Republic project 201/08/0266. We also
   thank Michal Malohlava and Vladimir Mencl for their valuable comments
   and suggestions.
CR Allen R.J., 1997, A Formal Approach to Software Architecture
   [Anonymous], 2010, CORDET
   [Anonymous], 2010, GRAPHICAL MODELING F
   [Anonymous], 2008, ECLIPSE MODELING FRA
   Atkinson C, 2010, LECT NOTES COMPUTER, DOI [10.1007/978-3-642-13595-8_1, DOI 10.1007/978-3-642-13595-8_1]
   Becker Koziolek., 2007, P 6 INT WORKSHOP SOF, P54
   Brunneton E, 2002, P WCOP 02 MAL SPAIN
   Bulej L, 2008, LECT NOTES COMPUTER, V5153, DOI [10.1007/978-3-540-85289-6_14, DOI 10.1007/978-3-540-85289-6_14]
   Bures T., 2006, 4 INT C SOFTWARE ENG, DOI DOI 10.1109/SERA.2006.62
   Bures T, 2008, LECT NOTES COMPUTER, V5153, DOI [10.1007/978-3-540-85289-6_15, DOI 10.1007/978-3-540-85289-6_15]
   Crnkovic I., 2005, Journal of Computing and Information Technology - CIT, V13, P321, DOI 10.2498/cit.2005.04.10
   Fassino JP, 2002, P 2002 USENIX ANN TE
   GARLAN D, 2000, FDN COMPONENT BASED
   Hnetynka P, 2004, P ECBS 2004 BRNO CZE, DOI [10.1109/ECBS.2004.1316716, DOI 10.1109/ECBS.2004.1316716]
   Hnetynka P, 2008, COMMUN COMPUT PHYS, V30, DOI [10.1007/978-3-642-10242-4_4, DOI 10.1007/978-3-642-10242-4_4]
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1188, DOI 10.1145/1141277.1141561
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Mencl V, 2005, P APSEC 2005 TAIP TA, DOI [10.1109/APSEC.2005.78, DOI 10.1109/APSEC.2005.78]
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Object Management Group Inc. (OMG), 2006, DEPL CONF COMP BAS D
   OMG, 2006, CORBA COMP MOD SPEC
   OMG, 2007, MOF QVT OMG DOC PTC
   OMG, 2006, MOF 2 0 COR OMG DOC
   OSOA, 2007, SERV COMP ARCH ASS M
   Perez J, 2006, P CBSE 06 VAST SWED, DOI [10.1007/11783565_9, DOI 10.1007/11783565_9]
   Plasil F, 1998, FOURTH INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P43, DOI 10.1109/CDS.1998.675757
   Prochazka M, 2008, P DASIA 2008 DATA SY
   Seinturier L, 2006, P CBSE 06 VAST SWED, DOI [10.1007/11783565_10, DOI 10.1007/11783565_10]
   Sentilles S, 2008, LECT NOTES COMPUT SC, V5282, P310, DOI 10.1007/978-3-540-87891-9_21
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
NR 32
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2011
VL 41
IS 11
BP 1185
EP 1201
DI 10.1002/spe.1036
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827RZ
UT WOS:000295446900002
DA 2024-07-18
ER

PT J
AU de Albuquerque, JP
   Krumm, H
   de Geus, PL
   Jeruschkat, R
AF de Albuquerque, Joao Porto
   Krumm, Heiko
   de Geus, Paulo Licio
   Jeruschkat, Rene
TI Scalable model-based configuration management of security services in
   complex enterprise networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE network security policy; policy-based management; automated policy
   refinement
ID FIREWALL; SYSTEMS
AB Security administrators face the challenge of designing, deploying and maintaining a variety of configuration files related to security systems, especially in large-scale networks. These files have heterogeneous syntaxes and follow differing semantic concepts. Nevertheless, they are interdependent due to security services having to cooperate and their configuration to be consistent with each other, so that global security policies are completely and correctly enforced. To tackle this problem, our approach supports a comfortable definition of an abstract high-level security policy and provides an automated derivation of the desired configuration files. It is an extension of policy-based management and policy hierarchies, combining model-based management (MBM) with system modularization. MBM employs an object-oriented model of the managed system to obtain the details needed for automated policy refinement. The modularization into abstract subsystems (ASs) segment the system-and the model-into units which more closely encapsulate related system components and provide focused abstract views. As a result, scalability is achieved and even comprehensive IT systems can be modelled in a unified manner. The associated tool MoBaSeC (Model-Based-Service-Configuration) supports interactive graphical modelling, automated model analysis and policy refinement with the derivation of configuration files. We describe the MBM and AS approaches, outline the tool functions and exemplify their applications and results obtained. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [de Geus, Paulo Licio] Univ Estadual Campinas, Inst Comp, BR-13083852 Campinas, SP, Brazil.
   [de Albuquerque, Joao Porto] Univ Sao Paulo, ICMC, Sao Paulo, Brazil.
   [Krumm, Heiko; Jeruschkat, Rene] Tech Univ Dortmund, Dept Comp Sci, Dortmund, Germany.
C3 Universidade Estadual de Campinas; Universidade de Sao Paulo; Dortmund
   University of Technology
RP de Geus, PL (corresponding author), Univ Estadual Campinas, Inst Comp, Av Albert Einstein 1251, BR-13083852 Campinas, SP, Brazil.
EM paulo@las.ic.unicamp.br
RI de Geus, Paulo Lício/K-1088-2013; de Albuquerque, Joao
   Porto/O-2972-2019; Albuquerque, Joao/E-6374-2011
OI de Geus, Paulo Lício/0000-0002-6540-8686; de Albuquerque, Joao
   Porto/0000-0002-3160-3168; Albuquerque, Joao/0000-0002-3160-3168
FU CAPES; DAAD; FAPESP
FX Porto de Albuquerque was supported by a scholarship from CAPES and his
   stay in Dortmund was supported by CAPES and DAAD. De Geus was supported
   by FAPESP during his stay at UCSB. We thank Richard Kemmerer for his
   helpful comments and suggestions with an earlier draft of this text.
   Also, a thankful acknowledgement is due to the anonymous reviewers for
   their helpful comments.
CR Abbes T, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P2122
   ABRAMS M, 1994, INFOR SECURITY AN IN, P126
   [Anonymous], 2004, IEEE Transactions on Network and Service Management, DOI [DOI 10.1109/TNSM.2004.4623689, 10.1109/TNSM.2004.4623689]
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Bartal Y, 2004, ACM T COMPUT SYST, V22, P381, DOI 10.1145/1035582.1035583
   BURNS J, 2001, DARPA INF SURVIVABIL, V2
   Capretta V, 2007, FMSE'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON FORMAL METHODS IN SECURITY ENGINEERING, P22
   CAREY K, 2008, IEEE NETW OP MAN S W, P239
   Charalambides Marinos, 2009, IEEE Transactions on Network and Service Management, V6, P15, DOI 10.1109/TNSM.2009.090302
   *CHECK POINT SOFTW, 2000, CHECK POINT SOFTW RE
   COVINGTON MJ, 2000, 23 NAT INF SYST SEC
   CUPPENS F, 2004, FORMAL ASPECTS SECUR
   DAMIANOU N, 2002, IEEE IFIP NETW OP MA, P213
   de Albuquerque JP, 2010, INT J INF SECUR, V9, P99, DOI 10.1007/s10207-010-0101-6
   de Albuquerque JP, 2005, LECT NOTES COMPUT SC, V3775, P36
   de Albuquerque JP, 2005, SIXTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P24, DOI 10.1109/POLICY.2005.24
   de Albuquerque JP, 2005, LECT NOTES COMPUT SC, V3679, P287
   *ENT MAN ASS, 2000, SOLS NP PUTT SEC POL
   Ferraiolo DavidF., 1999, ACM T INFORM SYST SE, V2, P34, DOI DOI 10.1145/300830.300834
   Furnas G. W., 1986, ACM Sigchi Bull., V17, P16, DOI DOI 10.1145/22339.22342
   GEIST G, 2003, THESIS U DORTMUND GE
   GUTTMAN JD, 1997, SP 97 P 1997 IEEE S
   HINRICHS S, 1999, P 15 ANN COMP SEC AP
   Horowitz E, 2009, INT CON ADV INFO NET, P691, DOI 10.1109/AINA.2009.116
   Illner S, 2004, 2004 2ND IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL INFORMATICS, P457, DOI 10.1109/INDIN.2004.1417387
   ILLNER S, 2006, P 20 IEEE C ADV INF, V2, P519
   Jeffrey A, 2009, 2009 IEEE INTERNATIONAL SYMPOSIUM ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, P60, DOI 10.1109/POLICY.2009.32
   KOTH O, 2002, LECT NOTES COMPUTER, V2317
   KROPIWIEC CD, 2008, DSOM 08 P 19 IFIP IE, P123
   Lück I, 2002, NOMS 2002: IEEE/IFIP NETWORK OPERATIONS AND MANAGEMENT SYMPOSIUM, P589, DOI 10.1109/NOMS.2002.1015610
   Lück I, 2001, LECT NOTES COMPUT SC, V1995, P120
   LUCK I, 2007, THESIS U DORTMUND GE
   LUCK I, 1999, LNCS, V1700, P243
   LYMBEROPOULOS L, 2004, IFIP IEEE NETW OP MA
   Mirkovic J, 2004, ACM SIGCOMM COMP COM, V34, P39, DOI 10.1145/997150.997156
   MOFFETT JD, 1993, IEEE J SEL AREA COMM, V11, P1404, DOI 10.1109/49.257932
   MONT M, 2000, P IEEE IFIP NETW OP, P789
   MUSIAL B, 2003, C RES PRACTICE INFOR, V24, P75
   Oppenheimer D, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS (USITS'03), P1
   Park J., 2004, ACM Transactions on Information and Systems Security, V7, P128, DOI 10.1145/984334.984339
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Sarkar Manojit., 1992, Pro- ceedings of the SIGCHI Conference on Human Factors in Computing Systems, CHI '92, P83, DOI DOI 10.1145/142750.142763
   SCHUBA CL, 1997, 1997 IEEE S SEC PRIV
   Sloman M, 2002, IEEE NETWORK, V16, P10, DOI 10.1109/65.993218
   Sloman M., 1994, Journal of Network and Systems Management, V2, P333, DOI 10.1007/BF02283186
   Teo L, 2007, EIGHTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS - PROCEEDINGS, P241, DOI 10.1109/POLICY.2007.44
   THANASEGARAN S, 2009, IEEE INT PAR DISTR P, P1
   Trastour D, 2009, 2009 IEEE INTERNATIONAL SYMPOSIUM ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, P68, DOI 10.1109/POLICY.2009.9
   TWIDLE K, 2008, IEEE INT WORKSH POL, P45
   Uribe TE, 2007, J COMPUT SECUR, V15, P691, DOI 10.3233/JCS-2007-15605
   Wies R., 1994, Journal of Network and Systems Management, V2, P63, DOI 10.1007/BF02141605
   Wool A, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 10TH USENIX SECURITY SYMPOSIUM, P85
   Yuan LH, 2006, P IEEE S SECUR PRIV, P199
   YURCIK W, 2003, ACM CHI WORKSH HUM C
NR 55
TC 1
Z9 1
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2011
VL 41
IS 3
BP 307
EP 338
DI 10.1002/spe.1014
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 724WZ
UT WOS:000287608400005
DA 2024-07-18
ER

PT J
AU Malik, NS
   Ko, D
   Cheng, HH
AF Malik, Najmus Saqib
   Ko, David
   Cheng, Harry H.
TI A secure migration process for mobile agents
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile agent; SSH protocol; secure migration process; authentication;
   integrity; confidentiality; mechatronic and embedded system
ID NETWORK; FRAMEWORK; PLATFORM; SYSTEMS
AB This article describes a decentralized secure migration process of mobile agents between Mobile-C agencies. Mobile-C is an IEEE Foundation for Intelligent Physical Agents (FIPA) standard compliant multi-agent platform for supporting C/C++ mobile and stationary agents. Mobile-C is specially designed for mechatronic and factory automation systems where malicious agents may cause physical damage to machinery and personnel. As a mobile agent migrates from one agency to another in an open network, the security concern of mobile agent systems should not be neglected. Security breaches can be minimized considerably if an agency only accepts mobile agents from agencies known and trusted by the system administrator. In Mobile-C, a strong authentication process is used by sender and receiver agencies to authenticate each other before agent migration. The security framework also aims to guarantee the integrity and confidentiality of the mobile agent while it is in transit. This assures that all agents within an agency framework were introduced to that framework under the supervision and permission of a trusted administrator. The Mobile-C Security protocol is inspired from the Secure Shell (SSH) protocol, which avoids a single point of failure since it does not rely on a singular remote third party for the security process. In this protocol, both agencies must authenticate each other using public key authentication, before a secure migration process. After successful authentication, an encrypted mobile agent is transferred and its integrity is verified by the receiver agency. This article describes the Mobile-C secure migration process and presents a comparison study with the SSH protocol. The performance analysis of the secure migration process is performed by comparing the turnaround time of mobile agent with and without security options in a homogeneous environment. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Malik, Najmus Saqib; Ko, David; Cheng, Harry H.] Univ Calif Davis, Dept Mech & Aerosp Engn, Integrat Engn Lab, Comp Sci Grad Grp,Elect & Comp Engn Grad Grp, Davis, CA 95616 USA.
C3 University of California System; University of California Davis
RP Cheng, HH (corresponding author), Univ Calif Davis, Dept Mech & Aerosp Engn, Integrat Engn Lab, Comp Sci Grad Grp,Elect & Comp Engn Grad Grp, Davis, CA 95616 USA.
EM hhcheng@ucdavis.edu
CR Al-Kasassbeh M, 2008, J NETW COMPUT APPL, V31, P699, DOI 10.1016/j.jnca.2007.11.005
   [Anonymous], 2009, EMB CH
   [Anonymous], 2008, EMBEDDED CH C C EMBE
   [Anonymous], 2009, MICR SEC ADV 961509
   [Anonymous], 2010, OP SOURC TOOLK SSL T
   [Anonymous], 2010, MULT PLATF MOB C C C
   [Anonymous], 2008, MOB AG BAS APPL
   [Anonymous], 2009, PC MAGAZINE     0326
   Barrett D.J., 2005, SSH, The Secure Shell: The Definitive Guide, VSecond
   Baumann J, 2002, SOFTWARE PRACT EXPER, V32, P575, DOI 10.1002/spe.450
   Bellifemine F, 2008, INFORM SOFTWARE TECH, V50, P10, DOI 10.1016/j.infsof.2007.10.008
   Chen B, 2008, J SYST SOFTWARE, V81, P1364, DOI 10.1016/j.jss.2007.10.026
   Chen B, 2006, SOFTWARE PRACT EXPER, V36, P1711, DOI 10.1002/spe.742
   Chen H, 2007, IEEE T SYST MAN CY C, V37, P1174, DOI 10.1109/TSMCC.2007.900653
   Cheng CB, 2008, COMPUT IND ENG, V55, P406, DOI 10.1016/j.cie.2008.01.003
   Cheng HH., 2009, C ENG SCI INTERPRETI
   Chmiel K., 2005, Scientific Programming, V13, P159
   Chou PH, 2006, LECT NOTES ARTIF INT, V4251, P300
   Chou YC, 2010, INFORM SOFTWARE TECH, V52, P185, DOI 10.1016/j.infsof.2009.09.002
   Chou YC, 2009, CONCURR COMP-PRACT E, V21, P2377, DOI 10.1002/cpe.1458
   Czajkowski G, 1998, ACM SIGPLAN NOTICES, V33, P21, DOI 10.1145/286942.286944
   Di Stefano A, 2009, SOFTWARE PRACT EXPER, V39, P137, DOI 10.1002/spe.894
   Endsuleit R, 2005, P NORDSEC TART EST
   Gavalas D, 2009, J SYST SOFTWARE, V82, P355, DOI 10.1016/j.jss.2008.06.034
   Gosling J, 1998, SCI AM, V279, P109, DOI 10.1038/scientificamerican1098-109
   Huang CY, 2007, INT J ADV MANUF TECH, V32, P822, DOI 10.1007/s00170-005-0378-1
   Jansen W., 1999, NIST SPECIAL PUBLICA
   Jennings NR, 2001, COMMUN ACM, V44, P35, DOI 10.1145/367211.367250
   Johansen D, 2002, SOFTWARE PRACT EXPER, V32, P605, DOI 10.1002/spe.451
   Lange DB, 1999, COMMUN ACM, V42, P88, DOI 10.1145/295685.298136
   Lüder A, 2005, IEEE T IND INFORM, V1, P31, DOI 10.1109/TII.2005.843825
   Milojicic D, 1999, IEEE CONCURR, V7, P80, DOI 10.1109/MCC.1999.788786
   Nestinger S, IEEE ROBOTI IN PRESS
   Nestinger SS, 2010, IEEE-ASME T MECH, V15, P942, DOI 10.1109/TMECH.2009.2036169
   Peine H, 2002, SOFTWARE PRACT EXPER, V32, P515, DOI 10.1002/spe.448
   Peine H, 1998, SEVENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WET ICE '98), P236, DOI 10.1109/ENABL.1998.725699
   Plosch R, 1999, INTERNET APPL, V1749, P447
   Seznec A, 2003, ACM T MODEL COMPUT S, V13, P346
   van't Noordende GJ, 2004, 2004 IEEE 1ST SYMPOSIUM ON MULTI-AGENT SECURITY & SURVIVABILITY, P35
   Varadharajan V., 2008, P 7 ACM C COMP COMM, P200
   Verma VK, 2008, COMPUT NETW, V52, P3218, DOI 10.1016/j.comnet.2008.08.017
   Wang Y, 2008, MOB INF SYST, V4, P51, DOI 10.1155/2008/402519
   Weaver AC, 2006, COMPUTER, V39, P88, DOI 10.1109/MC.2006.138
   Wong D, 1997, LECT NOTES COMPUT SC, V1219, P86
   Wooldridge M., 2001, Agent-Oriented Software Engineering. First International Workshop, AOSE 2000. Revised Papers (Lecture Notes in Computer Science Vol.1957), P1
NR 45
TC 0
Z9 0
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2011
VL 41
IS 1
BP 87
EP 101
DI 10.1002/spe.1003
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 701UB
UT WOS:000285847800005
DA 2024-07-18
ER

PT J
AU Terra, R
   Valente, MT
AF Terra, Ricardo
   Valente, Marco Tulio
TI A dependency constraint language to manage object-oriented software
   architectures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software architecture; architecture erosion; architecture conformance
ID DISCOVERING ARCHITECTURES; DESIGN
AB This paper presents a domain-specific dependency constraint language that allows software architects to restrict the spectrum of structural dependencies, which can be established in object-oriented systems. The ultimate goal is to provide architects with means to define acceptable and unacceptable dependencies according to the planned architecture of their systems. Once defined, such restrictions are statically enforced by a tool, thus avoiding silent erosions in the architecture. The paper also presents results from applying the proposed approach to different versions of a real-world human resource management system. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Terra, Ricardo; Valente, Marco Tulio] Pontificia Univ Catolica Minas Gerais, Inst Informat, BR-31980110 Belo Horizonte, MG, Brazil.
C3 Pontificia Universidade Catolica de Minas Gerais
RP Valente, MT (corresponding author), Pontificia Univ Catolica Minas Gerais, Inst Informat, Rua Walter Ianni 255, BR-31980110 Belo Horizonte, MG, Brazil.
EM mtov@pucminas.br
OI Valente, Marco Tulio/0000-0002-8180-7548
FU FAPEMIG; CAPES; CNPq
FX Contract/grant sponsor: FAPEMIG; Contract/grant sponsor: CAPES;
   Contract/grant sponsor: CNPq
CR Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Eden Amnon H., 2001, INT C MULT DES ENG, P256
   Eichberg M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P391, DOI 10.1145/1368088.1368142
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Garlan D., 1996, Software Architecture: Perspectives on an Emerging Discipline
   Gasparis Epameinondas, 2008, LECT NOTES COMPUTER, V5223, P19, DOI [10.1007/978-3-540-87730-1_37, DOI 10.1007/978-3-540-87730-1_37]
   Hou D., 2004, Proceedings of the 2004 Conference of the Centre for Advanced Studies on Collaborative Research, P96
   Hou DQ, 2006, IEEE T SOFTWARE ENG, V32, P404, DOI 10.1109/TSE.2006.60
   Kazman R., 1999, Automated Software Engineering, V6, P107, DOI 10.1023/A:1008781513258
   KNODEL J, 2007, IEEE IFIP WORK C SOF, P12
   Knodel J, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P277
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mens K, 2006, COMPUT LANG SYST STR, V32, P140, DOI 10.1016/j.cl.2005.09.002
   Mens K, 2002, EXPERT SYST APPL, V23, P405, DOI 10.1016/S0957-4174(02)00076-3
   MENS K, P 10 EUR C SOFTW MAI, V20, P239
   Muller H. A., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P80, DOI 10.1109/ICSE.1988.93690
   Murphy G.C., 1995, Proceedings of the 3rd ACM SIGSOFT symposium on Foundations of software engineering, P18
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Sangal Neeraj, 2005, P 20 ANN ACM SIGPLAN, P167, DOI DOI 10.1145/1103845.1094824
   Schmerl B, 2006, IEEE T SOFTWARE ENG, V32, P454, DOI 10.1109/TSE.2006.66
   Terra R, 2008, LECT NOTES COMPUT SC, V5292, P256, DOI 10.1007/978-3-540-88030-1_19
   Yan H, 2004, PROC INT CONF SOFTW, P470, DOI 10.1109/ICSE.2004.1317469
NR 24
TC 57
Z9 61
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG 25
PY 2009
VL 39
IS 12
BP 1073
EP 1094
DI 10.1002/spe.931
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 482CF
UT WOS:000268860600003
DA 2024-07-18
ER

PT J
AU Whaley, RC
   Castaldo, AM
AF Whaley, R. Clint
   Castaldo, Anthony M.
TI Achieving accurate and context-sensitive timing for code optimization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE timers; timing; benchmarking; cache flushing; kernel optimization; ATLAS
AB Key computational kernels must run near their peak efficiency for most high-performance computing (HPC) applications. Getting this level of efficiency has always required extensive tuning of the kernel on a particular platform of interest. The success or failure of an optimization is usually measured by invoking a timer. Understanding how to build reliable and context-sensitive timers is one of the most neglected areas in HPC, and this results in a host of UPC software that looks good when reported in the papers, but delivers only a fraction of the reported performance when used by actual UPC applications. In this paper, we motivate the importance of timer design and then discuss the techniques and methodologies we have developed in order to accurately time UPC kernel routines for our well-known empirical tuning framework, ATLAS. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Whaley, R. Clint; Castaldo, Anthony M.] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
C3 University of Texas System; University of Texas at San Antonio (UTSA)
RP Whaley, RC (corresponding author), Univ Texas San Antonio, Dept Comp Sci, 6900 N Loop 1604 W, San Antonio, TX 78249 USA.
EM whaley@cs.utsa.edu
RI Whaley, R. C/G-4234-2011
CR [Anonymous], UTCS97366
   [Anonymous], 1999, 9 SIAM C PAR PROC SC
   BILMES JK, 1997, P ACM SIGARC INT C S
   FRANCHETTI F, 2005, P IEEE SPECIAL ISSUE, V93
   Frigo M, 1998, INT CONF ACOUST SPEE, P1381, DOI 10.1109/ICASSP.1998.681704
   Frigo M., 1997, FASTEST FOURIER TRAN
   Hennessy John L, 2011, Computer Architecture: A Quantitative Approach
   Kisuki T., 2000, P CPC 10 COMP PAR CO, P35
   MCVOY L, 1996, ATEC 96 P ANN TECHN, P279
   MOURA J, 2000, P C HIGH PERF EMB CO
   PUSHEL M, 2005, P IEEE SPECIAL ISSUE, V93
   SAAVEDRA RH, 1995, IEEE T COMPUT, V44, P1223, DOI 10.1109/12.467697
   van der Mark P., 1999, USING ITERATIVE COMP
   VANDERMARK P, 1999, THESIS LEIDEN I ADV
   VUDUR R, 2005, J PHYS C SERIES
   Walpole R.E., 2012, PROBABILITY STAT ENG, V9th
   Whaley RC, 2005, PROC INT CONF PARAL, P89, DOI 10.1109/ICPP.2005.77
   Whaley RC, 2001, PARALLEL COMPUT, V27, P3, DOI 10.1016/S0167-8191(00)00087-9
   WHALEY RC, 1998, CD RO0M P WINN BEST
   YOTOV K, 2005, SIGMETRICS 05, P181
NR 20
TC 14
Z9 17
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2008
VL 38
IS 15
BP 1621
EP 1642
DI 10.1002/spe.884
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 385JR
UT WOS:000261811000003
DA 2024-07-18
ER

PT J
AU Huang, CM
   Lin, MS
   Wong, HL
AF Huang, Chung-Ming
   Lin, Ming-Sian
   Wong, Hon-Long
TI A ubiquitous IAs access platform (UIAP) over UPnP
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE UPnP; home network; remote control; information appliance; inter-IA
   interaction
AB The radical development in information technology makes the information appliances (IAs) able to interact and share information using the universal plug and play (UPnP) protocol. Inter-IA interactions that involve more than one IA do exist in the future digital home network. Nowadays, inter-IA interactions are developed by system and service providers and are fixed. It is difficult for users to customize their inter-IA interactions. In this paper, we propose the service interaction script (SIS) language, which is a How control language for users to customize their own inter-IA interactions through the Web interfaces in the UPnP home network. Domain-specific statements for the development of the inter-IA interactions in SIS are (i) IA access statement, (ii) parallel statement and (iii) interaction event handling statement. On the other hand, the ubiquitous IAs access platform (UIAP) that allows users to use handheld devices to access the IA base on the UPnP protocol is also developed. UIAP provides the Web interfaces, i.e. (i) control panel and (ii) interaction customization panel, for users to access IAs remotely using handheld devices with or without the UPnP capability. The interaction customization panel contains (i) an easy mode and (ii) an advanced mode for users to customize inter-IA interactions defined by themselves through the Web interfaces using SIS. In the easy mode, inter-IA interaction customizations are achieved through the Web graphical user interface components and translated into SIS programs; in the advanced mode, users can write SIS programs directly. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Huang, Chung-Ming; Lin, Ming-Sian; Wong, Hon-Long] Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Lab Multimedia Mobile Networking, Tainan 70101, Taiwan.
C3 National Cheng Kung University
RP Huang, CM (corresponding author), Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Lab Multimedia Mobile Networking, Tainan 70101, Taiwan.
EM huangcm@locust.csie.ncku.edu.tw
CR Aho A. V., 2003, COMPILERS PRINCIPLES, V2/e
   [Anonymous], REMOTE DESKTOP PROTO
   [Anonymous], LINUX SDK UPNP DEVIC
   Bobek A, 2005, 2005 3rd IEEE International Conference on Industrial Informatics (INDIN), P166
   CHEN WY, 1997, P 4 INT WKSHP COMM N, P7
   *EUR INST BUS ASS, 2007, EIB HDB SER
   HEER DN, 1995, IEEE T CONSUM ELECTR, V41, P869, DOI 10.1109/30.468072
   Koskela T, 2004, PERS UBIQUIT COMPUT, V8, P234, DOI 10.1007/s00779-004-0283-x
   Miller BA, 2001, IEEE COMMUN MAG, V39, P104, DOI 10.1109/35.968819
   Nylander S, 2005, PERS UBIQUIT COMPUT, V9, P123, DOI 10.1007/s00779-004-0317-4
   RIGOLE P, 2003, P IASTED INT C COMP, P253
   RIGOLE P, 2003, P 37 ANN HAW INT C S, V9
   RYAN JL, 1989, ELECTRON COMMUN ENG, V1, P185, DOI 10.1049/ecej:19890038
   Saito T, 2001, 21ST INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P175, DOI 10.1109/CDCS.2001.918702
   VANDERHEIDEN G, 1998, P 1998 TIDE C HELS F
   *X10, 2007, X10 SMART MACRO
   EXTENDED REMOTE TECH
NR 17
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2008
VL 38
IS 11
BP 1127
EP 1147
DI 10.1002/spe.865
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 364OR
UT WOS:000260345500002
DA 2024-07-18
ER

PT J
AU Lukovic, I
   Mogin, P
   Pavicevic, J
   Ristic, S
AF Lukovic, Ivan
   Mogin, Pavle
   Pavicevic, Jelena
   Ristic, Sonja
TI An approach to developing complex database schemas using form types
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE database schema design and integration; subschema; form type; CASE tool;
   formal consistency; IIS*Case; agile software development
AB In this paper we consider an approach to developing complex database schemas. Apart from the theoretical model of the approach, we also developed a CASE tool named Integrated Information Systems*Case, R.6.2 (IIS*Case) that supports the practical application of the approach. In this paper the basis of our approach to the design and integration of database schemas and ways of using IIS*Case is outlined. The main features of a new version of IIS*Case, developed in Java, are described. IIS*Case is based on the concept of 'form type' and supports the conceptual modelling of a database schema, generating subschemas and integrating them into a relational database schema in 3NF. IIS*Case provides an intelligent support for complex and highly formalized design and programming tasks. Having an advanced knowledge of information systems and database design is not a compulsory prerequisite for using IIS*Case. IIS*Case is based on a methodology of gradual integration of independently designed subschemas into a database schema. The process of independent subschema design may lead to collisions in expressing real-world constraints. IIS*Case uses specialized algorithms for checking the consistency of constraints embedded in a database schema and its subschemas. This paper briefly outlines the application of the process of detecting collisions, and actions the designer may take to resolve them. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Lukovic, Ivan; Ristic, Sonja] Univ Novi Sad, Fac Tech Sci, Novi Sad 21000, Serbia.
   [Mogin, Pavle] Victoria Univ Wellington, Wellington, New Zealand.
   [Pavicevic, Jelena] Univ Montenegro, Crnogorski Telekom, Podgorica 81000, Montenegro.
C3 University of Novi Sad; Victoria University Wellington; University of
   Montenegro
RP Lukovic, I (corresponding author), Univ Novi Sad, Fac Tech Sci, Trg D Obradovica 6, Novi Sad 21000, Serbia.
EM ivan@uns.ns.ac.yu
RI Ristić, Sonja/AAE-9824-2022; Ristić, Sonja/AFF-2147-2022; Lukovic,
   Ivan/ABF-3880-2021
OI Ristić, Sonja/0000-0003-0059-6062; Ristić, Sonja/0000-0003-0059-6062;
   Lukovic, Ivan/0000-0003-1319-488X
CR Alagic S, 2002, INFORM SOFTWARE TECH, V44, P207, DOI 10.1016/S0950-5849(02)00010-1
   *ARTECH, 2006, DEKLARIT MOD DRIV TO
   Beeri C., 1979, ACM Transactions on Database Systems, V4, P30, DOI 10.1145/320064.320066
   CASANOVA MA, 1984, J COMPUT SYST SCI, V28, P29, DOI 10.1016/0022-0000(84)90075-8
   CHOOBINEH J, 1988, IEEE T SOFTWARE ENG, V14, P242, DOI 10.1109/32.4641
   Date C.J., 2000, FDN FUTURE DATABASE
   DATE CJ, 1992, COMPOSITE FOREIGN KE
   DIEDERICH J, 1988, ACM T DATABASE SYST, V13, P339, DOI 10.1145/44498.44499
   DIET J, 1990, P 8 INT C ENT REL AP, P171
   GALVEZ S, 2004, COLLABORATION TECHNI
   GOVEDARICA M, 2004, COMPUTER SCI INFORM, V1, P117
   HONEYMAN P, 1983, P ACM SIGMOD, P92
   Lawrence R., 2001, PROC AC M S APPL COM, P225
   LAWRENCE R, TR0015
   Lukovic I., 2002, Zbornik Radova, Journal of Information and Organizational Sciences, V26, P69
   LUKOVIC I, 2003, O 1 SERB HUNG JOINT, P125
   LUKOVIC I, 2003, P IEEE INT C COMP CY
   Mogin P., 2004, DATABASE DESIGN PRIN
   Mogin P, 2000, NOVI SAD J MATH FORM, V30, P111
   MOGIN P, 1995, P DED C RAP PROT AUT, P261
   MOGIN P, 1994, P INT C TECHN INF TI, V5, P49
   PAVICEVIC J, 2005, THESIS U MONTENEGRO
   PAVICEVIC J, 2006, P INSTICC I INT C SO, P157
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   RISTIC S, 2006, P 17 INT C INF INT S, P43
   Ristic Sonja., 2003, Proceedings of the 7th IEEE International Conference on Intelligent Engineering Systems, P203
   Schmalz MS, 2003, LECT NOTES COMPUT SC, V2813, P461
NR 27
TC 30
Z9 33
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2007
VL 37
IS 15
BP 1621
EP 1656
DI 10.1002/spe.820
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 243BT
UT WOS:000251770600003
DA 2024-07-18
ER

PT J
AU Brisaboa, NR
   Cotelo-Lema, JA
   Fariña, A
   Luaces, MR
   Parama, JR
   Viqueira, JRR
AF Brisaboa, N. R.
   Cotelo-Lema, J. A.
   Farina, A.
   Luaces, M. R.
   Parama, J. R.
   Viqueira, J. R. R.
TI Collecting and publishing large multiscale geographic datasets
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE geographic information system; multiscale map; workflow; GIS Web Service
AB In this paper we present our experience in the development of a geographic information system that includes a large database (over 7 GB) with information about the infrastructure and facilities of the municipalities in the province of A Coruna (northwestern Spain). Three interesting aspects of the whole project are described in some detail due to their intrinsic interest for the development of this kind of system. These aspects are: (1) the design of the data model and the system architecture, which is oriented to support some advanced features such as multiscale active maps; (2) the problem of designing appropriate workflows to populate the database; and (3) the design of a Web-based application to exploit the geographic database through a user-friendly interface. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 Univ A Coruna, Dept Comp Sci, Databases Lab, Fac Informat, La Coruna 15071, Spain.
   Univ Santiago de Compostela, Inst Invest Tecnol, Dept Elect & Comp Sci, Syst Lab, Santiago De Compostela 15782, Spain.
C3 Universidade da Coruna; Universidade de Santiago de Compostela
RP Luaces, MR (corresponding author), Univ A Coruna, Dept Comp Sci, Databases Lab, Fac Informat, Campus Elvina, La Coruna 15071, Spain.
EM luaces@udc.es
RI Fariña, Antonio/C-6243-2017; Viqueira, Jose R/L-5728-2014; Luaces,
   Miguel R./HTP-5849-2023; Brisaboa, Nieves R./S-4744-2016; Parama, Jose
   R./L-4793-2014
OI Fariña, Antonio/0000-0001-8263-3298; Luaces, Miguel
   R./0000-0003-0549-2000; Brisaboa, Nieves R./0000-0001-8025-3048;
   Viqueira, Jose R.R./0000-0002-1539-3746; Parama, Jose
   R./0000-0002-8727-0980
CR [Anonymous], 1993, Temporal Databases: Theory, Design, and Implementation
   [Anonymous], 2002, 02112 OGC
   Brisaboa NR, 2005, Sixteenth International Workshop on Database and Expert Systems Applications, Proceedings, P490, DOI 10.1109/DEXA.2005.111
   *CGAL, 2005, ARCINFO ONLINE
   Clement Y, 1996, J PHYSIOL-PARIS, V90, P1, DOI 10.1016/0928-4257(96)87164-6
   Craglia M., 2002, URISA Journal, V14, P43
   Date C.J., 2003, TEMPORAL DATA RELATI, V1st
   Davis C.A., 1999, Proceedings of the 7th International Symposium on Advances in Geographic Information Systems (ACM GIS'99), P60, DOI [10.1145/320134.320151, DOI 10.1145/320134.320151]
   Davis Judith R., 1998, IBMS DB2 SPATIAL EXT
   Douglas D.H., 1973, Cartographica: The International Journal for Geographic Information and Geovisualization, V10, P112, DOI [https://doi.org/10.3138/FM57-6770-U75U-7727, DOI 10.1002/9780470669488.CH2]
   Egenhofer M.J., 1994, Categorizing binary topological relations between regions, lines, and points in geographic databases
   *ESRI, 2005, ARCINFO ONLINE
   *EUR UN, 2004, PROP DIR INSPIRE
   Güting RH, 2000, ACM T DATABASE SYST, V25, P1, DOI 10.1145/352958.352963
   *IBM, 2004, IBM DB2 SPAT GEOD EX
   *INSPIRE, 2006, INSPIRE INFR SPAT IN
   *INT CORP, 2005, WORK GEOM PROF
   *ISO, 2003, 19107 ISO IEC
   *ISO, 2002, ISC32WG4 ISO IEC JTC
   ISO 19101, 2002, GEOGR INF REF MOD
   *JUMP PROJ, 2005, ARCINFO ONLINE
   Lachman B., 2002, Lessons for the Global Spatial Data Infrastructure
   Longley P., 1999, GEOGRAPHICAL INFORM
   Maguire D. J., 2005, Computers, Environment and Urban Systems, V29, P3, DOI 10.1016/j.compenvurbsys.2004.05.012
   *MAPINFO CORP, 2005, MAPINFO PROF US GUID
   Mapping Science Committee, 1993, Toward a coordinated spatial data infrastructure for the nation
   Masser I, 1999, INT J GEOGR INF SCI, V13, P67, DOI 10.1080/136588199241463
   McMaster R.B., 1992, GEN DIGITAL CARTOGRA
   MULLER JC, 1995, GIS GEN METHODOLOGY
   OGC, 2002, 02070 OGC
   OGC, 1999, 99049 OGC
   *OGC, 2005, OGC04024 OGC
   *OGC, 2003, 02023R4 OGC
   OGC, 2005, 04095 OGC
   *OGC, 2002, 02058 OGC
   *OGC, 2003, 03065R6 OGC
   *OP GIS CONS INC, 2005, OPENGIS REF MOD
   *OR CORP, 2000, OR SPAT US GUID REF
   PASCUAL AR, 2006, AVANCES INFRASESTRUC, P15
   Plesums C., 2002, Workflow handbook, 2002, P19
   *POSTGIS, 2005, OBJ POSTGRESQL
   RODDICK JF, 1995, INFORM SOFTWARE TECH, V37, P383, DOI 10.1016/0950-5849(95)91494-K
   TAIT MG, 2005, ENV URBAN SYSTEMS, V29, P33
   Van Loenen B., 2004, SPATIAL DATA INFRAST
   VIQUEIRA JRR, 2003, THESIS U CORUNA SPAI
   *W3C, 2001, WEBCGM 1 2 REL
   *W3C, 2005, SCAL VECT GRAPH 1 1
NR 47
TC 9
Z9 10
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2007
VL 37
IS 12
BP 1319
EP 1348
DI 10.1002/spe.807
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 224BF
UT WOS:000250419600005
DA 2024-07-18
ER

PT J
AU Ma, H
   Risch, T
AF Ma, Haoxue
   Risch, Tore
TI A database approach for information communication in a peer-to-peer
   collaborative CAD environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE peer-to-peer systems; peer databases; propagation meta-table; active
   databases; dynamic rule generation; object-orientation; information
   communication; propagation control interface
ID INTEGRATION; TECHNOLOGY
AB Timely and efficient information communication is a key factor in ensuring successful collaboration in engineering collaborative design. This work proposes a database approach to support information communication between distributed and autonomous CAD systems. It provides the designer with an easy and flexible way, a project-based propagation meta-table, to specify what parts of a CAD information model should be communicated to other collaborating designers. A CAD peer manager, containing a peer database that stores information to be exchanged with the other collaborators, wraps each participating CAD system. The peer manager identifies changes made to the CAD model by using stored procedures and active rules in the peer database that are automatically generated based on the propagation meta-table. The identified updates are propagated in a timely manner to other peers via inter-database message passing, thereby minimizing the volume of necessary information to be exchanged. Furthermore, remote peer designers can flexibly incorporate, filter, or delete received updates by using a propagation control interface, which is also used to issue user's commands to download the data from the CAD system to the peer database and lookup the received messages in the peer database. The approach is applicable on any CAD system having a CORBA interface and can also be applied to other kinds of object-oriented interfaces. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 Uppsala Univ, Dept Informat Technol, SE-75105 Uppsala, Sweden.
   Lulea Univ Technol, Dept Appl Phys & Mech Engn, SE-97187 Lulea, Sweden.
C3 Uppsala University; Lulea University of Technology
RP Risch, T (corresponding author), Uppsala Univ, Dept Informat Technol, Box 337, SE-75105 Uppsala, Sweden.
EM tore.risch@it.uu.se
CR ABERE K, 2002, P WORKSH DISTR DAT S
   [Anonymous], 1999, Information technology - Database languages - SQL, ISO
   BAILEY J, 1995, P 6 AUSTR DAT C GLEN, P27
   BARKAI D, 2001, DEVELOPRER UPDATE MA
   Begole J, 2001, IEEE ACM T NETWORK, V9, P833, DOI 10.1109/90.974535
   BIDARRA R, 2002, J COMPUTER INFOM SCI, V2, P74
   Halevy AY, 2004, IEEE T KNOWL DATA EN, V16, P787, DOI 10.1109/TKDE.2004.1318562
   Han SH, 2002, CONCURRENT ENG-RES A, V10, P239, DOI 10.1106/106329302030370
   Katchaounov T, 2003, EIGHTH INTERNATIONAL CONFERENCE ON DATABASE SYSTEMS FOR ADVANCED APPLICATIONS, PROCEEDINGS, P107, DOI 10.1109/DASFAA.2003.1192374
   KRASNER H, 1991, IEEE T SYST MAN CYB, V21, P704, DOI 10.1109/21.108288
   Lee JY, 2001, CONCURRENT ENG-RES A, V9, P74, DOI 10.1106/XQHL-T6A7-G99M-4438
   Nyström M, 2004, SOFTWARE PRACT EXPER, V34, P949, DOI 10.1002/spe.599
   Parameswaran M, 2001, COMPUTER, V34, P31, DOI 10.1109/2.933501
   RAMANI K, 2003, J COMPUTING INFORM S, V3, P170
   Risch T, 2001, CONCURR COMP-PRACT E, V13, P933, DOI 10.1002/cpe.607
   Skold M, 1996, PROC INT CONF DATA, P392, DOI 10.1109/ICDE.1996.492188
   Tay FEH, 2003, COMPUT IND, V52, P127, DOI 10.1016/S0166-3615(03)00100-3
   Urban SD, 1999, INT J COMP INTEG M, V12, P525, DOI 10.1080/095119299130100
   Urban SD, 2003, IEEE T KNOWL DATA EN, V15, P597, DOI 10.1109/TKDE.2003.1198393
   Widom J., 1996, ACTIVE DATABASE SYST
NR 20
TC 1
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2007
VL 37
IS 11
BP 1193
EP 1213
DI 10.1002/spe.804
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 204JW
UT WOS:000249040900003
DA 2024-07-18
ER

PT J
AU Zunino, C
   Pompili, I
   Sanna, A
   Ciminiera, L
AF Zunino, C.
   Pompili, I.
   Sanna, A.
   Ciminiera, L.
TI A brokerage system for solar data archives
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed systems; data brokerage; service composition; large archives
   mana-gement
AB Scientific research and practical applications of solar physics require data and computational services to be integrated seamlessly and efficiently. The European Grid for Solar Observations (EGSO) leverages Grid-oriented concepts and technology to provide a high-performance infrastructure for solar applications. In this paper, an architecture for a data brokerage service is proposed. Brokers interact with providers and consumers in order to build a profile of both parties. In particular, a broker interacts with providers in order to gather information on the data potentially available to consumers, and with the consumers in order to identify the set of providers that are most likely to satisfy specific data needs. The brokerage technique is based on a multi-tier management of metadata. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 IEIIT CNR, I-10129 Turin, Italy.
   Politecn Torino, Dipartimento Automat & Informat, I-10129 Turin, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Elettronica e di
   Ingegneria dell'Informazione e delle Telecomunicazioni (IEIIT-CNR);
   Polytechnic University of Turin
RP Zunino, C (corresponding author), IEIIT CNR, CSo Duca Abruzzi 24, I-10129 Turin, Italy.
EM claudio.zunino@polito.it
RI ZUNINO, CLAUDIO/AAW-5427-2020; Pompili, Maurizio/AAC-1011-2019; Sanna,
   Andrea/AAQ-4730-2020
OI ZUNINO, CLAUDIO/0000-0001-7619-5412; Pompili,
   Maurizio/0000-0003-1886-4977; SANNA, Andrea/0000-0001-7916-1699
CR Abramson D, 2002, FUTURE GENER COMP SY, V18, P1061, DOI 10.1016/S0167-739X(02)00085-7
   Aloisio G, 2003, ITCC 2003: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: COMPUTERS AND COMMUNICATIONS, PROCEEDINGS, P432, DOI 10.1109/ITCC.2003.1197568
   ANDROUTSELLISTH.SA, 2002, WHITE PAPER
   [Anonymous], P SIGCOMM 01, DOI DOI 10.1145/383059.383071
   Antony I., 2001, LECT NOTES COMPUTER, P329, DOI DOI 10.1007/3-540-45518-3_18
   Baker M, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.124
   BARU C, 1998, P 1998 IBM CTR ADV S
   BUYYA R, 2000, P 4 INT C HIGH PERF
   Clarke I., 2000, P WORKSH DES ISS AN
   Curbera F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.991449
   Foster I, 2002, 14TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT, PROCEEDINGS, P37, DOI 10.1109/SSDM.2002.1029704
   FOSTER I, 2001, LECT NOTES COMPUTER, V2150
   Frey J, 2001, 10TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P55, DOI 10.1109/HPDC.2001.945176
   Ratnasamy S., 2001, Proceedings of the 2001 conference on applications, technologies, architectures, and protocols for computer communications, P161
   Roy J., 2001, IT Professional, V3, P69, DOI 10.1109/6294.977775
   Sanna A, 2005, FUTURE GENER COMP SY, V21, P349, DOI 10.1016/j.future.2004.04.014
   Saroiu S, 2003, MULTIMEDIA SYST, V9, P170, DOI 10.1007/s00530-003-0088-1
   Steele R, 2003, ITCC 2003: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: COMPUTERS AND COMMUNICATIONS, PROCEEDINGS, P248, DOI 10.1109/ITCC.2003.1197535
   STOCKINGER H, 2003, P 2003 C COMP HIGH E
   Venugopai S., 2004, P 2 WORKSHOP MIDDLEW, P75
   VENUGOPAL S, 2006, ACM COMPUTING SURVEY, V38
   Wan M, 2003, IEEE S MASS STOR SYS, P20, DOI 10.1109/MASS.2003.1194832
NR 22
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2007
VL 37
IS 8
BP 881
EP 896
DI 10.1002/spe.791
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 187HB
UT WOS:000247837100004
DA 2024-07-18
ER

PT J
AU Hirschfeld, R
   Kawarnura, K
AF Hirschfeld, Robert
   Kawarnura, Katsuya
TI Dynamic service adaptation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT DARES Workshop on Distributed Auto-Adaptive and Reconfigurable Systems
CY 2004
CL Tokyo, JAPAN
DE dynamic service adaptation; DSA; aspect-oriented programming; dynamic
   AOP
AB Change can be observed in our environment and in the technology we build. While changes in the environment happen continuously and implicitly, our technology has to be kept in sync with the changing world around it. Although we can prepare for some of the changes for most of them we cannot. This is especially true for next-generation mobile communication systems that are expected to support the creation of a ubiquitous society where virtually everything is connected and made available within an organic information network. Resources will frequently join or leave the network, new types of media or new combinations of existing types will be used to interact and cooperate, and services will be tailored to preferences and needs of individual customers to better meet their needs. This paper outlines our research in the area of dynamic service adaptation to provide concepts and technologies allowing for such environments. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 DoCoMo Euro Labs Europe, D-80687 Munich, Germany.
   Univ Potsdam, Hasso Plattner Inst, D-14482 Potsdam, Germany.
C3 NTT Docomo; University of Potsdam
RP Hirschfeld, R (corresponding author), DoCoMo Euro Labs Europe, Landsberger Str 312, D-80687 Munich, Germany.
EM hirschfeld@acm.org
CR ALMAJALI S, 2006, WORKSH SOFTW ENG PRO
   [Anonymous], 1995, Design patterns for object-oriented software development
   [Anonymous], P WORKSH ADV SEP CON
   BRANT J, 1998, LNCS, V1445, P396
   Czarnecki K., 1998, THESIS TU ILMENAU
   Ernst E., 2003, P AOSD 2003 WORKSH S
   FABRY J, 2005, THESIS VRIJE U BRUSS
   FILMAN RE, 2001, P WORKSH ADV SEP CON
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Gosling J., 2000, The Java Language Specification
   Hirschfeld R, 2003, LECT NOTES COMPUT SC, V2591, P216
   HIRSCHFELD R, 2002, P OOPSLA 2002 WORKSH
   Ingalls Dan., 1997, OOPSLA '97, P318, DOI DOI 10.1145/263698.263754
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   KAY A, 2002, IS SOFTWARE ENG OXYM
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 1991, The Art of the Metaobject Protocol
   KNIESEL G, 2001, P 1 IEEE INT WORKSH
   LOPES CV, 1997, THESIS NE U BOSTON
   LOPES CV, 2002, UCIISR025
   MAES P, 1987, THESIS U BRUSSELS
   Mendhekar A., 1997, SPL97009P9710044 XER
   Parnas D.L., 1972, COMMUN ACM, V15, P12
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Smith DA, 2003, FIRST CONFERENCE ON CREATING, CONNECTING AND COLLABORATING THROUGH COMPUTING, PROCEEDINGS, P2, DOI 10.1109/C5.2003.1222325
   Tanter É, 2005, LECT NOTES COMPUT SC, V3676, P173
NR 26
TC 6
Z9 6
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1115
EP 1131
DI 10.1002/spe.766
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 086HN
UT WOS:000240664500002
DA 2024-07-18
ER

PT J
AU Becucci, M
   Fantechi, A
   Giromini, M
   Spinicci, E
AF Becucci, M
   Fantechi, A
   Giromini, M
   Spinicci, E
TI A comparison between handwritten and automatic generation of C code and
   SDL using static analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automatic code generation; SDL; software metrics; static analysis
AB The experience reported in this paper relates to an evaluation of the automatic generation of C code from the Specification and Description Language (SDL) specification of embedded applications. The evaluation has been carried out by comparing the automatically generated code with the manually implemented code, both compliant to the same SDL specification: this comparison is based on a selection of metrics measured on both codes by means of commercial static analysis tools. Notwithstanding the different structure of the two codes, we appropriately selected and aggregated the obtained results in order to use them as indicators of code size, control flow complexity and integration flow complexity. For a better comparison of the two codes, we have also introduced a novel complexity metric, which compares the control flow complexity with the integration flow of the two different software architectures. The aim of the paper is not merely to evaluate the code generator used, but rather to propose a set of techniques that can be used to conduct similar evaluations. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Florence, Dipartimento Sistemi & Informat, I-50139 Florence, Italy.
   MBDA Italia SpA, I-19136 La Spezia, Italy.
C3 University of Florence
RP Univ Florence, Dipartimento Sistemi & Informat, Via S Marta,3, I-50139 Florence, Italy.
EM fantechi@dsi.unifi.it
CR [Anonymous], 1997, Software metrics: A rigorous and practical approach
   BACHERINI S, 2003, P FORMS 2003 S FORM, P107
   Bert D, 2003, LECT NOTES COMPUT SC, V2805, P94
   DAHL OJ, 1973, STRUCTURED PROGRAMMI
   DASILVA C, 1993, FORMAL DESCRIPTION T
   DEBHONEI B, 1994, LECT NOTES COMPUTER, V873, P26
   Drake T, 1996, COMPUTER, V29, P78, DOI 10.1109/2.544241
   Dunlop J., 1999, DIGITAL MOBILE COMMU
   FANTECHI A, 2003, ELECT NOTES THEORETI, V82, P75
   Hännikäinen M, 2000, INTERNATIONAL SYMPOSIUM ON MULTIMEDIA SOFTWARE ENGINEERING, PROCEEDINGS, P229, DOI 10.1109/MMSE.2000.897216
   *IEEE GUID US IEEE, 1988, 98222 IEEE GUID US I
   LANCON E, 1995, CHEP 95 COMPUTING NE
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McCabe T. J., 1989, COMMUNICATIONS ACM, V32
   Muth A, 2000, P IEEE RAP SYST PROT, P134, DOI 10.1109/IWRSP.2000.855210
   ODONNELL R, 1999, AUTOMATIC CODE EMBED
   Pressman R.S., 1992, Software Engineering: A Practitioner's Approach, Vthird
   *TEL AB, 1999, TEL TAU US MAN TECHN
   *TETRA, 2000, 3003964 TETRA ETSI E
   Watson A.H., 1996, NIST Special Publication
NR 20
TC 3
Z9 4
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2005
VL 35
IS 14
BP 1317
EP 1347
DI 10.1002/spe.673
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 980MB
UT WOS:000233021500001
DA 2024-07-18
ER

PT J
AU Kounavis, ME
   Campbell, AT
   Chou, ST
   Vicente, J
AF Kounavis, ME
   Campbell, AT
   Chou, ST
   Vicente, J
TI Programming the data path in network processor-based routers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE network processors; programmable networks; service creation; binding;
   code morphing
ID DESIGN
AB There is growing interest in network processor technologies capable of processing packets at line rates. Network processors are likely to be an integral part of next generation high-speed router and switch architectures, replacing the application-specific integrated circuits (ASICs) that are used in routers today. In this paper, we present the design, implementation and evaluation of NetBind, a high-performance, flexible and scalable binding tool for dynamically constructing data paths in network processor-based routers. The methodology that underpins NetBind balances the flexibility of network programmability against the need to process and forward packets at line speeds. To support the dynamic binding of components with the minimum addition of instructions in the critical path, NetBind modifies the machine language code of components at run time. To support fast data path composition, NetBind reduces the number of binding operations required for constructing data paths to a minimum set so that binding latencies are comparable with packet forwarding times. Data paths constructed using NetBind seamlessly share the resources of the same network processor. Resources are assigned during the binding process. We compare the performance of NetBind to the MicroACE system developed by Intel and show that NetBind provides better performance in comparison to MicroACE with smaller binding overhead. The NetBind source code described and evaluated in this paper is freely available on the Web (http://www.comet.columbia.edu/genesis/netbind) for experimentation. Copyright (C) 2005 John Wiley & Sons,Ltd.
C1 Intel Corp, Intel Res & Dev, Hillsboro, OR 97124 USA.
   Columbia Univ, Dept Elect Engn, New York, NY 10025 USA.
   Columbia Univ, Dept Comp Sci, New York, NY 10027 USA.
   Intel Corp, Folsom, CA USA.
C3 Intel Corporation; Columbia University; Columbia University; Intel
   Corporation
RP Intel Corp, Intel Res & Dev, Hillsboro, OR 97124 USA.
EM michael.e.kounavis@intel.com
CR Bennett JCR, 1997, IEEE ACM T NETWORK, V5, P675, DOI 10.1109/90.649568
   Campbell AT, 2000, IEEE PERS COMMUN, V7, P42, DOI 10.1109/98.863995
   Demers A., 1990, Internetworking: Research and Experience, V1, P3
   Goyal P, 1997, IEEE ACM T NETWORK, V5, P690, DOI 10.1109/90.649569
   GUPTA P, 1999, P ACM SIGCOMM 99 HAR
   *IBM CORP, 2005, IBM POW ARCH
   *INT CORP, 2000, IXP 1200 NETW PROC P
   *INT CORP, 2000, IXP1200 NETW PROC DE
   *INT CORP, 2000, WHIT PAP
   *INT CORP, 2001, INT IXA SDK ACE PROG
   *INT CORP, 2000, IXP1200 NETW PROC DA
   JOHNSON EJ, 2002, IXP 1200 PROGRAMMING, pCH13
   Karlin S, 2001, 2001 IEEE OPEN ARCHITECTURES AND NETWORK PROGRAMMING PROCEEDINGS, P3, DOI 10.1109/OPNARC.2001.916834
   Kohler E, 2000, ACM T COMPUT SYST, V18, P263, DOI 10.1145/354871.354874
   Kounavis ME, 2001, IEEE J SEL AREA COMM, V19, P511, DOI 10.1109/49.917711
   KOUNAVIS ME, 2003, P 2 WORKSH NETW PROC
   Lakshmanamurthy S., 2002, INTEL TECHNOLOGY J, V6, P19
   MONTZ A, 1994, OPEATING SYSTEM DESI
   PAPPU P, 2002, P 21 IEEE C COMP COM
   Postel J. B., 1981, REQUEST COMMENTS 791
   PU C, 1988, SYNTHESIS KERNEL
   Rexford JL, 1996, IEEE INFOCOM SER, P638, DOI 10.1109/INFCOM.1996.493359
   Schmidt DC, 1999, IEEE COMMUN MAG, V37, P54, DOI 10.1109/35.755450
   SHREEDHAR M, 1995, P SIGCOMM 95
   SPALINK T, 2001, P 18 ACM S OP SYST P, P216
   SPALINK T, 2000, TR62600 PRINC U
   TAYLOR DE, 2001, P 4 IEEE INT C OP AR
   Vinoski S, 1997, IEEE COMMUN MAG, V35, P46, DOI 10.1109/35.565655
   Wolf T, 2001, IEEE J SEL AREA COMM, V19, P404, DOI 10.1109/49.917702
NR 29
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2005
VL 35
IS 11
BP 1041
EP 1078
DI 10.1002/spe.662
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 963EF
UT WOS:000231785500003
OA Bronze
DA 2024-07-18
ER

PT J
AU Whaley, RC
   Petitet, A
AF Whaley, RC
   Petitet, A
TI Minimizing development and maintenance costs in supporting persistently
   optimized BLAS
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ATLAS; BLAS; kernel optimization; recursive optimization; linear algebra
ID LEVEL 3 BLAS; EXTENDED SET; ALGEBRA; IMPLEMENTATION; RECURSION; LEADS
AB The Basic Linear Algebra Subprograms (BLAS) define one of the most heavily used performance-critical APIs in scientific computing today. It has long been understood that the most important of these routines the dense Level 3 BLAS, may be written efficiently given a highly optimized general matrix multiply routine. In this paper, however, we show that an even larger set of operations can be efficiently maintained using a much simpler matrix multiply kernel. Indeed, this is how our own project, ATLAS (which provides one of the most widely used BLAS implementations in use today), supports a large variety of performance-critical routines. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Florida State Univ, Dept Comp Sci, Tallahassee, FL 32306 USA.
   Sun Microsyst Inc, F-75016 Paris, France.
C3 State University System of Florida; Florida State University
RP Florida State Univ, Dept Comp Sci, 167 Love Bldg, Tallahassee, FL 32306 USA.
EM whaley@cs.fsu.edu
RI Whaley, R. C/G-4234-2011
CR ANDERSEN BS, 2000, CS00448 UT
   Anderson E., 1999, LAPACK USERSGUIDE, Vthird
   [Anonymous], UTCS97366
   [Anonymous], SUPERCOMPUTING 1998
   [Anonymous], 1999, 9 SIAM C PAR PROC SC
   BACON DF, 1994, ACM COMPUT SURV, V26, P345, DOI 10.1145/197405.197406
   BILMES JK, 1997, P ACM SIGARC INT C S
   DAYDE MJ, 1994, ACM T MATH SOFTWARE, V20, P178, DOI 10.1145/178365.174413
   DONGARRA JJ, 1988, ACM T MATH SOFTWARE, V14, P1, DOI 10.1145/42288.42291
   DONGARRA JJ, 1988, ACM T MATH SOFTWARE, V14, P18, DOI 10.1145/42288.42292
   DONGARRA JJ, 1990, ACM T MATH SOFTWARE, V16, P1, DOI 10.1145/77626.79170
   Elmroth E, 2000, IBM J RES DEV, V44, P605, DOI 10.1147/rd.444.0605
   Elmroth E, 2004, SIAM REV, V46, P3, DOI 10.1137/S0036144503428693
   Frigo M, 1998, INT CONF ACOUST SPEE, P1381, DOI 10.1109/ICASSP.1998.681704
   Frigo M., 1997, FASTEST FOURIER TRAN
   Gustavson F, 1998, LECT NOTES COMPUT SC, V1541, P207
   Gustavson F, 1998, LECT NOTES COMPUT SC, V1541, P195
   GUSTAVSON F, 2001, IFIP C P, V188, P211
   Gustavson FG, 1997, IBM J RES DEV, V41, P737, DOI 10.1147/rd.416.0737
   HANSON R, 1973, ACM SIGNUM NEWSLETTE, V8
   Hennessy John L, 2011, Computer Architecture: A Quantitative Approach
   Kågström B, 1998, ACM T MATH SOFTWARE, V24, P268, DOI 10.1145/292395.292412
   KAGSTROM B, 1995, UMINF9518 DEP COMP S
   *LAPACK U TENN, 147UTCS00448 LAPACK
   Lawson C. L., 1979, ACM Transactions on Mathematical Software, V5, P324, DOI [10.1145/355841.355847, 10.1145/355841.355848]
   MOURA J, 2000, P C HIGH PERF EMB CO
   Toledo S, 1997, SIAM J MATRIX ANAL A, V18, P1065, DOI 10.1137/S0895479896297744
   Whaley RC, 2001, PARALLEL COMPUT, V27, P3, DOI 10.1016/S0167-8191(00)00087-9
NR 28
TC 166
Z9 195
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2005
VL 35
IS 2
BP 101
EP 121
DI 10.1002/spe.626
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893SF
UT WOS:000226738800001
DA 2024-07-18
ER

PT J
AU Manzini, G
   Rastero, M
AF Manzini, G
   Rastero, M
TI A simple and fast DNA compressor
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data compression; DNA sequences; space economical algorithms;
   approximate repeats encoding
ID ALGORITHMS
AB In this paper we consider the problem of DNA compression. It is well known that one of the main features of DNA sequences is that they contain substrings which are duplicated except for a few random mutations. For this reason most DNA compressors work by searching and encoding approximate repeats. We depart from this strategy by searching and encoding only exact repeats. However, we use an encoding designed to take advantage of the possible presence of approximate repeats. Our approach leads to an algorithm which is an order of magnitude faster than any other algorithm and achieves a compression ratio very close to the best DNA compressors. Another important feature of our algorithm is its small space occupancy which makes it possible to compress sequences hundreds of megabytes long, well beyond the range of any previous DNA compressor. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Piemonte Orientale, Dipartimento Informat, Alessandria, Italy.
   Univ Piemonte Orientale, Dipartimento Sci & Tecnol Avanzate, Alessandria, Italy.
C3 University of Eastern Piedmont Amedeo Avogadro; University of Eastern
   Piedmont Amedeo Avogadro
RP Manzini, G (corresponding author), Univ Piemonte Orientale, Dipartimento Informat, Spalto Marengo 33, Alessandria, Italy.
EM manzini@mfn.unipmn.it
RI MANZINI, Giovanni/ABF-1910-2020
OI MANZINI, Giovanni/0000-0002-5047-0196
CR Allison L, 2000, COMPUT CHEM, V24, P43, DOI 10.1016/S0097-8485(99)00046-7
   Apostolico A., 2000, Proceedings DCC 2000. Data Compression Conference, P143, DOI 10.1109/DCC.2000.838154
   Apostolico A, 2000, P IEEE, V88, P1733, DOI 10.1109/5.892709
   BENNET C, 2003, SCI AM, P32
   Bentley J, 2001, INFORM SCIENCES, V135, P1, DOI 10.1016/S0020-0255(01)00097-4
   Chen X, 2002, BIOINFORMATICS, V18, P1696, DOI 10.1093/bioinformatics/18.12.1696
   CHEN X, 2003, COMMUNICATION
   Chen X., 2000, P 4 ANN INT C COMP M
   GRUMBACH S, 1994, INFORM PROCESS MANAG, V30, P875, DOI 10.1016/0306-4573(94)90014-0
   KARP RM, 1987, IBM J RES DEV, V31, P249, DOI 10.1147/rd.312.0249
   Lanctot JK, 2000, PROCEEDINGS OF THE ELEVENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P409
   Li M, 2001, BIOINFORMATICS, V17, P149, DOI 10.1093/bioinformatics/17.2.149
   Ma B, 2002, BIOINFORMATICS, V18, P440, DOI 10.1093/bioinformatics/18.3.440
   MATSUMOTO T, 2000, P GEN INF WORKSH, P43
   MILOSAVJEVIC A, 1993, MACH LEARN, V12, P68
   Williams HE, 1999, COMPUT J, V42, P193, DOI 10.1093/comjnl/42.3.193
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   WITTEN IH, 1987, COMMUN ACM, V30, P520, DOI 10.1145/214762.214771
NR 18
TC 47
Z9 56
U1 0
U2 2
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2004
VL 34
IS 14
BP 1397
EP 1411
DI 10.1002/spe.619
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 869QG
UT WOS:000224998500004
DA 2024-07-18
ER

PT J
AU Kaâniche, M
   Kanoun, K
   Rabah, M
AF Kaâniche, M
   Kanoun, K
   Rabah, M
TI Multi-level modeling approach for the availability assessment of
   e-business applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Computer Communications and Networks
CY OCT 15-17, 2001
CL PHOENIX, AZ
SP Army Res Lab, IBM, Telcordia, Nokia, Avaya, IEEE Communicat Soc
DE e-business; Internet; dependability; availability; hierarchical modeling
AB This paper defines a multi-level modeling approach for availability assessment of e-business applications, based on two main steps: (1) hierarchical description of the system and its interactions with the users, from the functional and structural points of view, and (2) hierarchical construction and solution of the availability models based on information from the first step. Four modeling abstraction levels are considered. The highest level (user level) describes the availability of the e-business application as perceived by the users. Intermediate levels describe the availability of functions and services provided to the users. The lowest level describes the availability of the component systems on which functions and services are implemented. The availability measures of a given level are computed based on the measures provided by the immediately lower level. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 CNRS, LAAS, F-31077 Toulouse 4, France.
C3 Centre National de la Recherche Scientifique (CNRS)
EM mohamed.kaaniche@laas.fr
RI Rabah, Mourad/AAC-9942-2019
OI Rabah, Mourad/0000-0001-8136-5949
CR Arlat J., 2000, Proceedings IEEE International Computer Performance and Dependability Symposium. IPDS 2000, P147, DOI 10.1109/IPDS.2000.839474
   Bakos Y, 1998, COMMUN ACM, V41, P35, DOI 10.1145/280324.280330
   BALAKRISHNAN M, 1995, DIG PAP INT SYMP FAU, P259, DOI 10.1109/FTCS.1995.466972
   BALBO G, 1988, IEEE T COMPUT, V37, P1251, DOI 10.1109/12.5986
   BEOUNES C, 1993, P 23 INT S FAULT TOL, P668
   BETOUSALMEIDA C, 2001, P 20 INT C COMP SAF, P227
   BONDAVALLI A, 1999, P 3 EUR DEP COMP C E, P7
   Bowen N, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P559, DOI 10.1109/ICDSN.2000.857590
   Campos J, 1999, IEEE T SOFTWARE ENG, V25, P147, DOI 10.1109/32.761442
   CASWELL D, 1999, HPL199943
   Ciardo G., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P22, DOI 10.1109/PNPM.1999.796529
   Donatelli S., 1994, P 15 INT C APPL THEO, P258
   ENSEL C, 1999, P WORKSH OP U ASS OV
   Fota N, 1999, PERFORM EVALUATION, V35, P253, DOI 10.1016/S0166-5316(99)00011-5
   Ingham DB, 2000, IEEE INTERNET COMPUT, V4, P25, DOI 10.1109/4236.815846
   Iyengar A, 2000, IEEE INTERNET COMPUT, V4, P17, DOI 10.1109/4236.832942
   Kaâniche M, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P709
   Kaâniche M, 2001, IEEE IC COMP COM NET, P40, DOI 10.1109/ICCCN.2001.956217
   Kalyanakrishnan M, 1999, COMPUT NETW, V31, P47, DOI 10.1016/S0169-7552(98)00229-3
   Kanoun K, 2000, IEEE T RELIAB, V49, P363, DOI 10.1109/24.922489
   Kanoun K, 1999, IEEE T COMPUT, V48, P528, DOI 10.1109/12.769435
   LONG D, 1995, 14TH SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P2, DOI 10.1109/RELDIS.1995.518718
   MACHIRAJU V, 2000, HPL200060
   Maes P, 1999, COMMUN ACM, V42, P81, DOI 10.1145/295685.295716
   Menasce D.A., 2000, SCALING E BUSINESS T
   MEYER JF, 1993, P INT WORKSH PERF MO, P1
   MUSA J.D., 1998, SOFTWARE RELIABILITY
   Rabah M, 2003, IEEE T COMPUT, V52, P223, DOI 10.1109/TC.2003.1176988
   REIBMAN AL, 1991, COMPUTER, V24, P49, DOI 10.1109/2.76262
   RODOSEK GD, 1997, P 5 IFIP IEEE INT S, P207
   Rojas I, 1995, COMPUT J, V38, P612, DOI 10.1093/comjnl/38.7.612
   Shim SSY, 2000, COMPUTER, V33, P40, DOI 10.1109/2.876291
   TRIVEDI KS, 1994, P 7 INT C MOD TECHN, P1
NR 33
TC 2
Z9 2
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2003
VL 33
IS 14
BP 1323
EP 1341
DI 10.1002/spe.550
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 741JJ
UT WOS:000186454700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bacon, J
   Moody, K
   Yao, W
AF Bacon, J
   Moody, K
   Yao, W
TI Access control and trust in the use of widely distributed services
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE security; role-based access control; policy; trust; certificates
ID POLICY
AB OASIS is a role-based access control (RRAC) architecture for achieving secure interoperation of independently managed services in an open, distributed environment. OASIS differs from other RBAC schemes in a number of ways: role management is decentralized, roles are parametrized, roles are activated within sessions and privileges are not delegated. OASIS depends on an active middleware platform to notify services of any relevant changes in their environment..
   Services define roles and establish formally specified policy for role activation and service use (authorization); users must present the required credentials and satisfy specified constraints in order to activate a role or invoke a service. The membership rule of a role indicates which of the role activation conditions must remain true while the role is active. A role is deactivated immediately if any of the conditions of the membership rule associated with its activation become false.
   OASIS introduces the notion of appointment, whereby being active in certain roles carries the privilege of issuing appointment certificates to other users. Appointment certificates capture the notion of long-lived credentials such as academic and professional qualification or membership of an organization.
   The role activation conditions of a service may include appointment certificates, prerequisite roles and environmental constraints. The role activation and authorization policies of services within an administrative domain need not embody role hierarchies nor enforce privilege delegation. But OASIS is sufficiently flexible to capture such notions, through prerequisite roles and appointments, if they are required within an application domain. We define the model and architecture and discuss engineering details, including security issues. We illustrate how an OASIS session can span multiple domains and we propose a minimal infrastructure to enable widely distributed, independently developed services to enter into agreements to respect each other's credentials. In a multi-domain system access control policy may come from multiple sources and must be expressed, enforced and managed. In order to respond to changing relationships between organizations it should be easy to allow role holders in one domain to obtain privileges in another. Our approach to policy and meta-policy management is described.
   We speculate on a further extension to mutually unknown, and therefore untrusted, parties. Each party will accumulate audit certificates which embody its interaction history and which may form the basis of a web of trust Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Cambridge, Comp Lab, Cambridge CB3 0FD, England.
C3 University of Cambridge
RP Univ Cambridge, Comp Lab, William Gates Bldg,JJ Thomson Ave, Cambridge CB3 0FD, England.
EM jean.bacon@cl.cam.ac.uk
CR [Anonymous], P 7 ACM S ACC CONTR
   Bacon J, 2002, COMMUN ACM, V45, P59, DOI 10.1145/508448.508475
   Bacon J., 2002, ACM Transactions on Information and Systems Security, V5, P492, DOI 10.1145/581271.581276
   Bacon J., 1995, Proceedings. Second International Workshop on Services in Distributed and Networked Environments (Cat. No.95TH8091), P148, DOI 10.1109/SDNE.1995.470451
   Bacon J, 2000, COMPUTER, V33, P68, DOI 10.1109/2.825698
   Bacon J, 2001, LECT NOTES COMPUT SC, V1995, P107
   Barka E, 2000, 16TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P168, DOI 10.1109/ACSAC.2000.898870
   BARKA E, 2000, P 23 NAT INF SYST SE
   Belokosztolszki A, 2002, THIRD INTERNATION WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P106, DOI 10.1109/POLICY.2002.1011298
   BELOKOSZTOLSZKI A, 2002, P 16 IFIP WG3 ANN WO
   COVINGTON MJ, 2000, P 23 NAT INF SYST SE
   DANIANOU N, 2001, LECT NOTES COMPUTER, V1995, P10
   Ferraiolo DavidF., 1999, ACM T INFORM SYST SE, V2, P34, DOI DOI 10.1145/300830.300834
   Giuri Luigi., 1997, Proceedings of the Second ACM Workshop on Role-Based Access Control, P153
   GOH C, 1998, P 3 ACM WORKSH ROL B, P55
   Hayton RJ, 1998, 1998 IEEE SYMPOSIUM ON SECURITY AND PRIVACY - PROCEEDINGS, P3, DOI 10.1109/SECPRI.1998.674819
   Hine JH, 2000, LECT NOTES COMPUT SC, V1795, P104
   Koch M., 2001, PROC 6 ACM S ACCESS, P121, DOI [10.1145/373256.373280, DOI 10.1145/373256.373280]
   Lupu EC, 1999, IEEE T SOFTWARE ENG, V25, P852, DOI 10.1109/32.824414
   Moffett JD, 1999, FOURTH ACM WORKSHOP ON ROLE-BASED ACCESS CONTROL, PROCEEDINGS, P153, DOI 10.1145/319171.319186
   MOFFETT JD, 1994, SPECIFICATION MANAGE, P455
   MONJIAN B, 2000, POSTGRESQL INTRO CON
   NYANCHAMA M, 1995, DATABASE SECURITY, V8
   Nyanchama M., 1999, ACM T INFORM SYSTEMS, V2, P3, DOI DOI 10.1145/300830.300832
   Sandhu R., 1998, P 3 ACM WORKSHOP ROL, P33, DOI DOI 10.1145/286884.286891
   SANDHU R, 1999, IEEE T INFORMATION S, V2, P105
   Sandhu R., 2000, RBAC 00, P111, DOI DOI 10.1145/344287.344309
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Shand B, 2002, THIRD INTERNATION WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P80, DOI 10.1109/POLICY.2002.1011296
   Simon RT, 1997, P IEEE CSFW, P183, DOI 10.1109/CSFW.1997.596811
   YAO W, 2001, P 6 ACM S ACC CONTR, P171
NR 31
TC 9
Z9 9
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2003
VL 33
IS 4
BP 375
EP 394
DI 10.1002/spe.511
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 660QF
UT WOS:000181843300005
DA 2024-07-18
ER

PT J
AU Depradine, C
   Chaudhuri, P
AF Depradine, C
   Chaudhuri, P
TI P<SUP>3</SUP>:: a code and design conventions preprocessor for Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code conventions; design conventions; object-oriented programming; Java
AB One of the techniques employed by programmers during the development process is the use of code and design conventions. These are rules-of-thumb or best practices that improve the maintainability of software applications. In general, these conventions are maintained manually by the programmer since automated support is usually restricted to the automatic generation of code. However, the late discovery of convention errors can result in significant costs due to the effort required to correct them. In order to facilitate the early detection of these errors, the Practical Preprocessor for Programming Conventions system, P-3 (pronounced P3), is proposed. This tool acts as a preprocessor to the Java compiler by providing facilities for the maintenance of specific object-oriented code conventions and design principles during the creation of Java programs. This paper presents the design and implementation of the P-3 system and also the practical experience of using this facility in a University programming environment. Copyright (C) 2002 John Wiley Sons, Ltd.
C1 Univ W Indies, Dept Comp Sci Math & Phys, Bridgetown, Barbados.
C3 University West Indies Mona Jamaica; University of the West Indies Open
   Campus
RP Depradine, C (corresponding author), Univ W Indies, Dept Comp Sci Math & Phys, Cave Hill Campus,POB 64, Bridgetown, Barbados.
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 2000, Evolutionary computation
   BARKER HA, 1993, IEE COMPUTER CONTROL, V4, P10
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   CAMPIONE M, 1998, JAVA TUTORIAL 2 EDIT
   Fausett L., 1994, FUNDAMENTALS NEURAL
   Fogel DB, 2000, IEEE SPECTRUM, V37, P26, DOI 10.1109/6.819926
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   *FREE SOFTW FDN, 2000, IND COD FORM SOFTW
   *FREE SOFTW FDN, 2002, GCC COMP SUIT
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Jarzabek S, 1998, IEEE T SOFTWARE ENG, V24, P197, DOI 10.1109/32.667879
   Joy B., 2000, JAVA LANGUAGE SPECIF, V2nd
   MEYER B, 1997, OBJECT ORIENTED APPL
   Muchnick S., 1997, ADV COMPILER DESIGN
   PORTO VW, 1995, IEEE EXPERT, V10, P16, DOI 10.1109/64.393138
   *SUN MICR INC, JAV SDK API
   Sun Microsystems Inc., 1999, COD CONV JAV PROGR L
NR 18
TC 2
Z9 2
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2003
VL 33
IS 1
BP 61
EP 76
DI 10.1002/spe.495
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 631QE
UT WOS:000180177800004
DA 2024-07-18
ER

PT J
AU Malloy, BA
   Gibbs, TH
   Power, JF
AF Malloy, BA
   Gibbs, TH
   Power, JF
TI Decorating tokens to facilitate recognition of ambiguous language
   constructs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE grammar; symbol table; parser; Unified Modeling Language; design
   pattern; the Facade and Decorator design patterns
AB Software tools are fundamental to the comprehension, analysis, testing and debugging of application systems. A necessary first step in the development of many tools is the construction of a parser front-end that can recognize the implementation language of the system under development. In this paper, we describe our use of token decoration to facilitate recognition of ambiguous language constructs. We apply our approach to the C++ language since its grammar is replete with ambiguous derivations such as the declaration/expression and template-declaration/expression ambiguity. We describe our implementation of a parser front-end for C++, keystone, and we describe our results in decorating tokens for our test suite including the examples from Clause Three of the C++ standard. We are currently exploiting the keystone front-end to develop a taxonomy for implementation-based class testing and to reverse-engineer Unified Modeling Language (UML) class diagrams. Copyright (C) 2002 John Wiley Sons, Ltd.
C1 Clemson Univ, Dept Comp Sci, Clemson, SC 29634 USA.
   Natl Univ Ireland, Dept Comp Sci, Maynooth, Kildare, Ireland.
C3 Clemson University; Maynooth University
RP Malloy, BA (corresponding author), Clemson Univ, Dept Comp Sci, Clemson, SC 29634 USA.
EM malloy@cs.clemson.edu
OI Power, James/0000-0002-6770-3910
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   ALEXANDER S, 2001, C PLUS PLUS RESOURCE
   *AM NAT STAND I, 1998, 148821998E ISOIEC JT
   Aycock J, 2001, ACTA INFORM, V37, P633, DOI 10.1007/PL00013319
   BODIN F, 1994, 2 ANN OBJ OR NUM C O, P122
   BOOCH G, 1999, OBJECT TECHNOLOGY SE
   CAVALIER FJ, 2002, DR DOBBS J       MAR, P42
   CLARKE P, 2002, P INT C COMP INF SYS, P631
   CLARKE P, 2001, P 1 ANN INT C COMP I
   COHEN SF, 1997, COMMUN ACM, V41, P81
   DEWHURST SC, 1987, SOFTWARE PRACT EXPER, V17, P503, DOI 10.1002/spe.4380170803
   *ED DES GROUP, 2000, C PLUS PLUS FRONT EN
   ELLIS MA, 1990, ANNOTATED C PLUS PLU
   GAMMA E, 2001, TEST INFECTED PROGRA
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Kernighan B.W., 1988, The C Programming Language
   KISELYOV O, 2002, FAST FOURIER TRANSFO
   KNAPEN G, 1999, 7 INT WORKSH PROGR C
   LILLEY J, 1997, PCCTS BASED LL 1 C P
   Malloy BA, 2002, DR DOBBS J, V27, P71
   MATZKO S, 2002, 40 INT C TECHN OBJ O
   Muchnick S., 1997, ADV COMPILER DESIGN
   Power JF, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P57
   POWER JF, 2000, ACM S APPL COMP COM
   POWER JF, 2000, P 8 INT WORKSH PROGR
   PURCELL S, 2002, PYTHON UNIT TESTING
   REISS SP, 1995, EXPERIENCES WRITING
   REKKERS J, 1992, THESIS U AMSTERDAM
   ROSKIND JA, 1989, YACC ABLE C PLUS PLU
   Rumbaugh James, 1999, The unified modeling language reference manual
   Shoup V, 2002, Number theory library
   Singhal S, 1998, COMMUN ACM, V41, P34, DOI 10.1145/276609.276616
   SUTTER H, 2001, USERS J, V19, P3
   SWAN T, 2000, GNU C PLUS PLUS LINU
   Tomita Masaru., 1985, EFFICIENT PARSING NA
   Tyma P, 1998, COMMUN ACM, V41, P38, DOI 10.1145/276609.276617
   VANDENBRAND MGJ, 1998, INT WORKSH PROGR COM
   VANROSSUM G, 2001, PYTHON LIB REFERENCE
   Visser Eelco, 1997, Syntax Definition for Language Prototyping
   VLISSIDES JM, 1988, P USENIX C PLUS PLUS
   VLISSIDES JM, 2002, IV TOOLS
   WAGNER TA, 1997, C PROGR LANG DES IMP, P31
   WAMPLER B, 2001, V C PLUS PLUS GUI FR
   WILLINK ED, 2001, THESIS U SURREY
NR 44
TC 10
Z9 11
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2003
VL 33
IS 1
BP 19
EP 39
DI 10.1002/spe.493
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 631QE
UT WOS:000180177800002
OA Green Accepted, Bronze
DA 2024-07-18
ER

PT J
AU Yang, YT
   Ye, HB
   Li, YS
   Jiau, HC
AF Yang, Yun-Tai
   Ye, Hong-Bao
   Li, Yi-Shan
   Jiau, Hewijin Christine
TI A noise blocking methodology for effective collaboration
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE collaboration; distributed environment; message prioritization;
   methodology; noise blocking; post epidemic
AB Collaboration relies on efficient communication among developers. Many development teams use instant messaging owing to its synchronous and real-time nature. Despite the convenience provided by instant messaging, developers spend a great amount of time on handling information and task interruption. Consequently, productivity of developers and effectiveness of collaboration are declined. To address the issue, this work introduces an aggressive methodology of noise blocking. The methodology appropriately prioritizes messages based on collaboration requirements. A message which is not urgent for developers to collaborate with others is defined as noise, and such message is blocked to stop unnecessary interruption. To evaluate the proposed methodology, this work conducts experiments on datasets collected from real-world projects. Then, a noise analysis tool-message analyzer for instant notification of information (MINI)-is implemented. The evaluation results show that noise hinders collaboration significantly because almost half of messages are noise. When MINI is applied, more than 80% of noise is identified, and at most 91.6% of time wasted in noise for the whole team is saved. The proposed noise blocking methodology shows promising results.
C1 [Yang, Yun-Tai; Ye, Hong-Bao; Li, Yi-Shan; Jiau, Hewijin Christine] Natl Cheng Kung Univ, Dept Elect Engn, Tainan, Taiwan.
C3 National Cheng Kung University
RP Ye, HB (corresponding author), Natl Cheng Kung Univ, Dept Elect Engn, Tainan, Taiwan.
EM hongbao@nature.ee.ncku.edu.tw
OI Yang, Yun-Tai/0009-0009-4530-7683; Ye, Hong-Bao/0009-0007-3071-7095; Li,
   Yi-Shan/0000-0001-8173-8047
FU None.
FX No Statement Available
CR Abad ZSH, 2017, INT REQUIR ENG CONF, P342, DOI 10.1109/RE.2017.75
   Abad ZSH., 2018, TASK INTERRUPTION SO, P122
   Abarca VMG, 2020, IEEE ACCESS, V8, P168923, DOI 10.1109/ACCESS.2020.3023546
   Alkadhi R, 2017, IEEE WORK CONF MIN S, P436, DOI 10.1109/MSR.2017.43
   Bailey BP, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P593
   Cataldo M., 2006, IDENTIFICATION COORD, P353
   Chong J., 2006, INTERRUPTIONS SOFTWA, P29
   Czerwinski M., 2000, OZCHI 2000 conference proceedings, V356, P361
   Czerwinski Mary, 2004, P SIGCHI C HUM FACT, P175, DOI [10.1145/985692.985715, DOI 10.1145/985692.985715]
   Das Swain V, 2020, 2020 IEEE SECOND INTERNATIONAL CONFERENCE ON COGNITIVE MACHINE INTELLIGENCE (COGMI 2020), P121, DOI 10.1109/CogMI50398.2020.00025
   de Souza CRB, 2011, IEEE T SOFTWARE ENG, V37, P325, DOI 10.1109/TSE.2011.19
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dittrich Y., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P103, DOI 10.1109/ICGSE.2011.21
   Dullemond K, 2014, IEEE SOFTWARE, V31, P47, DOI 10.1109/MS.2014.105
   Grant S., 2009, Conference Papers -- International Communication Association, P1
   Guan ZY, 2015, IEEE T KNOWL DATA EN, V27, P2163, DOI 10.1109/TKDE.2015.2411283
   Gupta A, 2013, DECIS SUPPORT SYST, V55, P135, DOI 10.1016/j.dss.2012.12.035
   Handel M., 2002, WHAT IS CHAT DOING W, P1
   Hudson JM., 2002, ID BE OVERWHELMED IT, P97
   Iqbal S., 2007, CHI, P677, DOI DOI 10.1145/1240624.1240730
   Johnson B, 2021, IEEE T SOFTWARE ENG, V47, P736, DOI 10.1109/TSE.2019.2903053
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Lin B, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P333, DOI 10.1145/2818052.2869117
   Ma WY., 2003, INTRO CKIP CHINESE W, P168
   MARK G, 2008, P SIGCHI C HUM FACT, P107, DOI DOI 10.1145/1357054.1357072
   Mattermost, 2023, MATTERMOST
   Mayr-Dorn C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P397, DOI 10.1145/3180155.3180185
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Prajapati S., 2016, SCIS IS 16, P631
   Robinson PT, 2019, INT CONF GLOBAL SOFT, P100, DOI 10.1109/ICGSE.2019.00015
   Slack, 2023, SLACK
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   WHITEHEAD J, 2007, P S FUT SOFTW ENG FO, DOI DOI 10.1109/FOSE.2007.4
NR 34
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2024
VL 54
IS 5
BP 875
EP 895
DI 10.1002/spe.3304
EA DEC 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NB0V3
UT WOS:001128445400001
DA 2024-07-18
ER

PT J
AU Buhr, PA
   Parsons, CA
   Delisle, T
   Li, HN
AF Buhr, Peter A.
   Parsons, Colby A.
   Delisle, Thierry
   Li, He Nan
TI High-performance extended actors
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE actors; coroutine; executor implementation; message trace; promise;
   storage management
ID LANGUAGE
AB Actors are a popularmechanism for indirectly expressing concurrency. This article examines an implementation in the concurrent dialect of C++,mu C++, which runs actors on shared-memory multi-processor computers. The mu C++ actor system targets 32-256+ multi-core shared-memory computers that form the backbone of high-performance computing, rather than distributed actor communication or robust execution via parentage fallback used by other actor systems. Five new mechanisms are presented to achieve expressibility, robustness, high performance, and scalability of actor applications across multiple cores: explicit life time (storage management) of actors andmessages, combining actors and coroutines, a forward message-trace and backward message-return for debugging and failures, a new promise call-back for ask sends, and an actor implementation that inverts the actor execution-model by decoupling actor mailboxes with high levels of sharding. Microbenchmarks compare the new actor features with CAF, Protoactor, and classic and typed Akka.
C1 [Buhr, Peter A.; Parsons, Colby A.; Delisle, Thierry; Li, He Nan] Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON, Canada.
   [Buhr, Peter A.] Univ Waterloo, Cheriton Sch Comp Sci, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo; University of Waterloo
RP Buhr, PA (corresponding author), Univ Waterloo, Cheriton Sch Comp Sci, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
EM pabuhr@uwaterloo.ca
FU The authors recognize the help of Richard Bilson in generating Akka
   benchmark programs, and Dave Dice in generating Akka performance
   results. This research is funded by the NSERC/Waterloo-Huawei () Joint
   Innovation Lab.
FX The authors recognize the help of Richard Bilson in generating Akka
   benchmark programs, and Dave Dice in generating Akka performance
   results. This research is funded by the NSERC/Waterloo-Huawei () Joint
   Innovation Lab.
CR Adya A, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P289
   Agha G., 1986, Actors: a model of concurrent computation in distributed systems
   Agrawal K, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1394441.1394443
   [Anonymous], 2022, CPPREFERENCE COM COR
   Asynkron, 2022, DISTRIBUTED TRACING
   Asynkron AB., 2023, PROTO ACTOR
   Bacon DF, 2003, ACM SIGPLAN NOTICES, V38, P285, DOI 10.1145/640128.604155
   Barbara L., 1981, LECT NOTES COMPUTER, V114
   Barghi S, 2018, INT PARALL DISTRIB P, P484, DOI 10.1109/IPDPS.2018.00058
   Blumofe R. D., 1999, Journal of the ACM, V46, P720, DOI [10.1109/SFCS.1994.365680, 10.1145/324133.324234]
   Blumofe R.D., 1998, Proceedings of the 1998 ACM SIGMETRICS International Conference on Measurement and Modeling of Computer Systems, Poster Session, P266
   BUHR PA, 1992, SOFTWARE PRACT EXPER, V22, P137, DOI 10.1002/spe.4380220204
   Buhr PA., 2022, ACTOR BENCHMARKS
   Buhr Peter A., 2020, ANNOTATED REFERENCE
   Campbell RH., 1974, SPECIFICATION PROCES, V16
   CARRIERO N, 1989, COMMUN ACM, V32, P444, DOI 10.1145/63334.63337
   Charousset D., 2014, P 4 INT WORKSH PROGR, P15
   CONWAY ME, 1963, COMMUN ACM, V6, P396, DOI 10.1145/366663.366704
   Dahl O-J., 1970, SIMULA67 COMMON BASE
   Daniel N., 2009, BENEFITS WORK STEALI
   De Koster J, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL WORKSHOP ON PROGRAMMING BASED ON ACTORS, AGENTS, AND DECENTRALIZED CONTROL (AGERE'16), P31, DOI 10.1145/3001886.3001890
   ECAM International Rue du Rhone 114, 2023, 114 ECAM INT RU RHON
   ECMA International Standardizing Information and Communication SystemsGeneva, 2006, SWITZERLANDC LANG SP
   Elvira A., 2018, SOFTW TEST VERIF REL, V28
   Erik J., 2002, P 3 INT S MEM MAN, P88
   erlang.org, OTP SYST DOC 8 12016
   GENTLEMAN WM, 1981, SOFTWARE PRACT EXPER, V11, P435, DOI 10.1002/spe.4380110504
   Gianfranco L., 2019, FUTURE INT, V11
   Gilles K., 1974, SEMANTICS SIMPLE LAN
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   HALSTEAD RH, 1985, ACM T PROGR LANG SYS, V7, P501, DOI 10.1145/4472.4478
   Hamidreza S., 2016, ERLANG SCHEDULER DET
   Hewitt C., 1973, PROC 3 INT JOINT C A, P235, DOI 10.1145/359545.359563
   Hoare C. A. R., 1978, Communications of the ACM, V21, P666, DOI 10.1145/359576.359585
   Imam S.M., 2014, P 4 INT WORKSH PROGR, P67, DOI [10.1145/2687357.2687368, DOI 10.1145/2687357.2687368]
   Knuth DE, 1997, ART COMPUTER PROGRAM, V2, P145
   Lightbend, 2022, AKK FUT
   Lightbend, 2022, AKK TYP ACT
   Lightbend, 2023, AKK CLASS ACT
   Lightbend Inc, AKK SCAL DOC REL 2 4
   Liskov B., 1988, SIGPLAN Notices, V23, P260, DOI 10.1145/960116.54016
   Lua, 2020, LUA 5 4 REF MAN
   Marlin CD., 1980, LECT NOTES COMPUTER, V95
   Message Passing Interface ForumUniversity of Tennessee, MESS PASS INT STAND
   Nigro L, 2021, SIMUL MODEL PRACT TH, V106, DOI 10.1016/j.simpat.2020.102189
   Philipp H., 2007, 171 190 COORDINATION
   Python. Python Language Reference, 2018, PYTH LANG REF REL 3
   Robert Griesemer Rob Pike Ken Thompson., 2009, The Go programming language
   Ruby, 2018, RUB DOC REL 2 6 0
   Srinivasan S, 2008, LECT NOTES COMPUT SC, V5142, P104, DOI 10.1007/978-3-540-70592-5_6
   Swift MM, 2005, ACM T COMPUT SYST, V23, P77, DOI 10.1145/1047915.1047919
   Varela C, 2001, ACM SIGPLAN NOTICES, V36, P20, DOI 10.1145/583960.583964
   Wimmer M, 2013, ACM SIGPLAN NOTICES, V48, P315, DOI 10.1145/2517327.2442562
   Xiao GP, 2019, IEEE T RELIAB, V68, P1356, DOI 10.1109/TR.2019.2916204
   Yizhou Z., 2019, P ACM PROGRAM LANG, V3, p5:1
NR 55
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2023
VL 53
IS 12
SI SI
BP 2463
EP 2500
DI 10.1002/spe.3262
EA SEP 2023
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X8MK4
UT WOS:001067715400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Xu, MX
   Yang, L
   Wang, Y
   Gao, CX
   Wen, LF
   Xu, GY
   Zhang, LP
   Ye, KJ
   Xu, CZ
AF Xu, Minxian
   Yang, Lei
   Wang, Yang
   Gao, Chengxi
   Wen, Linfeng
   Xu, Guoyao
   Zhang, Liping
   Ye, Kejiang
   Xu, Chengzhong
TI Practice of Alibaba cloud on elastic resource provisioning for
   large-scale microservices cluster
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE alibaba; cloud-native; latency; microservice; resource provisioning
AB Cloud-native architecture is becoming increasingly crucial for today's cloud computing environments due to the need for speed and flexibility in developing applications. It utilizes microservice technology to break down traditional monolithic applications into light-weight and self-contained microservice components. However, as microservices grow in scale and have dynamic inter-dependencies, they also pose new challenges in resource provisioning that cannot be fully addressed by traditional resource scheduling approaches. The various microservices with different resource demands and latency requirements can create complex calling chains, making it difficult to provide fine-grained and accurate resource allocation to each component while maintaining the overall quality of service in the chain. Alibaba Cloud has fully embraced cloud-native and microservice technologies to drive its key business and scenarios, including Double 11 Shopping Festival. In this work, we aim to address the research problem on how to efficiently provision resources for the growing scale of microservice platform and ensure the performance of latency-critical microservices. To address the problem, we present in-depth analyses of Alibaba's microservice cluster and propose optimized resource provisioning algorithms to enhance resource utilization while ensuring the latency requirement. First, we analyze the distinct features of microservices in Alibaba's cluster compared to traditional applications. Then we present Alibaba's resource capacity provisioning workflow and framework to address challenges in resource provisioning for large-scale and latency-critical microservice clusters. Finally, we propose enhanced resource provisioning algorithms over Alibaba's current practice by making both proactive and reactive scheduling decisions based on different workloads patterns, which can improve resource usage by 10%-15% in Alibaba's clusters, while maintaining the necessary latency for microservices.
C1 [Xu, Minxian; Yang, Lei; Wang, Yang; Gao, Chengxi; Wen, Linfeng; Ye, Kejiang] Chinese Acad Sci, Shenzhen Inst Adv Technol, Shenzhen, Peoples R China.
   [Xu, Guoyao; Zhang, Liping] Alibaba Grp, Hangzhou, Peoples R China.
   [Xu, Chengzhong] Univ Macau, Dept Comp Sci, State Key Lab IOTSC, Macau, Peoples R China.
C3 Chinese Academy of Sciences; Shenzhen Institute of Advanced Technology,
   CAS; Alibaba Group; University of Macau
RP Ye, KJ (corresponding author), Chinese Acad Sci, Shenzhen Inst Adv Technol, Shenzhen, Peoples R China.; Xu, CZ (corresponding author), Univ Macau, Dept Comp Sci, State Key Lab IOTSC, Macau, Peoples R China.
EM kj.ye@siat.ac.cn; czxu@um.edu.mo
RI XU, CHENGZHONG/AAX-1707-2020
OI XU, CHENGZHONG/0000-0001-9480-0356
FU National Key R amp;amp; D Program of China [62102408,
   CJGJZD20210408091600002]; National Natural Science Foundation of China
   [RCBS20210609104609044]; Shenzhen Industrial Application Projects of
   undertaking the National key R amp;amp; D Program of China; Shenzhen
   Science and Technology Program; Alibaba Innovative Research Program; 
   [2021YFB3300200]
FX This work is supported by National Key R & D Program of China (No.
   2021YFB3300200), the National Natural Science Foundation of China (Nos.
   62072451, 62102408), Shenzhen Industrial Application Projects of
   undertaking the National key R & D Program of China (No.
   CJGJZD20210408091600002), Shenzhen Science and Technology Program (No.
   RCBS20210609104609044) and Alibaba Innovative Research Program.
CR Abdullah M, 2022, IEEE T SERV COMPUT, V15, P1448, DOI 10.1109/TSC.2020.2995937
   Aslanpour MS, 2018, J SUPERCOMPUT, V74, P6470, DOI 10.1007/s11227-017-2156-x
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Burns B., 2019, Kubernetes Up and Running Dive into the Future of Infrastructure
   Chen WY, 2018, INT C PAR DISTRIB SY, P102, DOI [10.1109/ICPADS.2018.00024, 10.1109/PADSW.2018.8644579]
   Herbst Nikolas., 2016, Ready for rain? a view from spec research on the future of cloud metrics
   Hou X., 2020, ANT MAN AGILE POWER
   Inc A., 2019, POUCHCONTAINER AN EF
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Ke GL, 2017, ADV NEUR IN, V30
   Kiani A, 2019, IEEE ACM T NETWORK, V27, P962, DOI 10.1109/TNET.2019.2906638
   Laszewski T., 2018, CLOUD NATIVE ARCHITE
   Li FF, 2019, PROC VLDB ENDOW, V12, P2263, DOI 10.14778/3352063.3352141
   Luo ST, 2022, IEEE T PARALL DISTR, V33, P3901, DOI 10.1109/TPDS.2022.3174631
   Ma X, 2021, IEEE T CLOUD COMPUT, V9, P968, DOI 10.1109/TCC.2019.2903240
   Newell A., 2021, RAS CONTINUOUSLY OPT
   Newman S., 2015, BUILDING MICROSERVIC
   Siami-Namini S, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P1394, DOI 10.1109/ICMLA.2018.00227
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   van Erven T, 2014, IEEE T INFORM THEORY, V60, P3797, DOI 10.1109/TIT.2014.2320500
   Vettor R., 2022, ARCHITECTING CLOUD N
   Wang B, 2020, CLUSTER COMPUT, V23, P2809, DOI 10.1007/s10586-020-03048-8
   Wang Z., 2022, DEEPSCALING MICROSER
   Wong J, 2019, INT CON DISTR COMP S, P80, DOI 10.1109/ICDCS.2019.00017
   Xu MX, 2022, IEEE T NETW SERV MAN, V19, P3995, DOI 10.1109/TNSM.2022.3210211
   Xu MX, 2022, ACM T INTERNET TECHN, V22, DOI 10.1145/3524114
   Xu XL, 2020, IEEE T IND INFORM, V16, P6172, DOI 10.1109/TII.2019.2959258
   Yanqi Z., 2021, SINAN ML BASED QOS A
   Yu G., 2021, MICRORANK END TO END
   Yu GB, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P68, DOI 10.1109/ICWS.2019.00023
   Zhong ZH, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3510415
   Zhou H., 2018, OVERLOAD CONTROL SCA
NR 32
TC 1
Z9 1
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2024
VL 54
IS 1
BP 39
EP 57
DI 10.1002/spe.3271
EA SEP 2023
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF0T2
UT WOS:001066008200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, WG
   Wu, QW
   Zhang, ZY
   Zeng, J
   Zhang, X
   Zhou, MQ
AF Wang, Weiguo
   Wu, Quanwang
   Zhang, Zhiyong
   Zeng, Jie
   Zhang, Xiang
   Zhou, Mingqiang
TI A probabilistic modeling and evolutionary optimization approach for
   serverless workflow configuration
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE constrained optimization; evolutionary algorithm; modeling; serverless
   computing; workflow
ID COST; PERFORMANCE
AB Serverless computing has nowadays become a mainstream paradigm to develop cloud-native applications owing to its high scalability, ease of usage and cost-effectiveness. Nevertheless, because of its poor infrastructure transparency, two main challenges emerge when users migrate their applications to a serverless platform: the lack of an effective analytical model for performance and billing, and the trade-off problem between them. In this paper, we formally define a serverless workflow and introduce the concept of execution instances. Based on them, a probabilistic performance and cost evaluation model is built to obtain their expected values for an input serverless workflow. Then, we design a tailored evolutionary optimization algorithm called EASW to tackle budget-constrained performance optimization and performance-constrained cost optimization problems. Extensive experiments were carried out to test the proposed model and optimization algorithm on AWS Lambda. Results reveal that our model can achieve an accuracy over 98% and EASW can yield a better memory configuration solution than existing methods for constrained optimization.
C1 [Wang, Weiguo; Wu, Quanwang; Zhang, Zhiyong; Zhou, Mingqiang] Chongqing Univ, Coll Comp Sci, Chongqing 400044, Peoples R China.
   [Zhang, Zhiyong; Zhang, Xiang] China Merchants Testing Vehicle Technol Res Inst C, Chongqing, Peoples R China.
   [Zeng, Jie] Chongqing Univ, Natl Expt Teaching Demonstrat Ctr, Chongqing, Peoples R China.
C3 Chongqing University; Chongqing University
RP Wu, QW (corresponding author), Chongqing Univ, Coll Comp Sci, Chongqing 400044, Peoples R China.
EM wqw@cqu.edu.cn
RI Zhang, Zhiyong/KPY-6346-2024
FU National Natural Science Foundation of China [61702060, 61672117]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   61702060, 61672117
CR Anand S, 2019, INT CONF COMMUN SYST, P576, DOI [10.1109/COMSNETS.2019.8711273, 10.1109/comsnets.2019.8711273]
   Bermbach D, 2022, SOFTWARE PRACT EXPER, V52, P1143, DOI 10.1002/spe.3058
   Cao E., 2022, IEEE Trans Cloud Comput, V11
   Cordingly R., 2020, Predicting performance and cost of serverless computing functions with SAAF. Paper presented at: IEEE DASC/PiCom/CBDCom/CyberSciTech
   Cormen T.H., 2022, Introduction to algorithms, Vfourth
   Deb K, 2008, EUR J OPER RES, V185, P1062, DOI 10.1016/j.ejor.2006.06.042
   Eismann S., 2020, Predicting the costs of serverless workflows. Paper presented at: Proceedings of the ACM/SPEC International Conference on Performance Engineering
   Elgamal T., 2018, Costless: optimizing cost of serverless computing through function fusion and placement. Paper presented at: 2018 IEEE/ACM Symposium on Edge Computing (SEC)
   Feng L, 2018, INT EL DEVICES MEET
   Figiela K, 2018, CONCURR COMP-PRACT E, V30, DOI 10.1002/cpe.4792
   Grzesik P, 2022, BRIEF BIOINFORM, V23, DOI 10.1093/bib/bbab349
   He Q, 2014, IEEE T SOFTWARE ENG, V40, P192, DOI 10.1109/TSE.2013.2297911
   Jonas Eric, 2019, Cloud Programming Simplified: A Berkeley View on Serverless Computing
   Li L., 2022, ACM COMPUT SURV, V54, P1
   Li ZP, 2022, CONCURR COMP-PRACT E, V34, DOI 10.1002/cpe.7308
   Lin CY, 2023, IEEE T PARALL DISTR, V34, P180, DOI 10.1109/TPDS.2022.3214783
   Lin CY, 2021, IEEE T PARALL DISTR, V32, P615, DOI 10.1109/TPDS.2020.3028841
   Mahmoudi N, 2022, IEEE T CLOUD COMPUT, V10, P2834, DOI 10.1109/TCC.2020.3033373
   Malawski M, 2020, FUTURE GENER COMP SY, V110, P502, DOI 10.1016/j.future.2017.10.029
   Mathew A., 2021, P 14 IEEE ACM INT C, P1
   Saint-Andre P, 2018, Serverless messaging
   Shafiei H, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3510611
   Shankar Vaishaal., 2018, CORR
   Simon D., 2013, EVOLUTIONARY OPTIMIZ
   Versluis L, 2021, FUTURE GENER COMP SY, V123, P156, DOI 10.1016/j.future.2021.04.009
   Wang L, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P133
   Wu QW, 2020, IEEE T AUTOM SCI ENG, V17, P166, DOI 10.1109/TASE.2019.2918691
   Wu QW, 2017, IEEE T PARALL DISTR, V28, P3401, DOI 10.1109/TPDS.2017.2735400
   Xu F, 2022, IEEE T COMPUT, V71, P450, DOI 10.1109/TC.2021.3054656
   Yussupov V, 2022, SOFTWARE PRACT EXPER, V52, P1454, DOI 10.1002/spe.3073
   Zhou JH, 2023, IEEE T CYBERNETICS, V53, P6858, DOI 10.1109/TCYB.2022.3163577
NR 31
TC 2
Z9 2
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 SEP 15
PY 2023
DI 10.1002/spe.3268
EA SEP 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R8YR8
UT WOS:001067161000001
DA 2024-07-18
ER

PT J
AU Zeng, T
   Xu, ZC
   Wu, D
   Li, XL
   Liu, BY
   Hu, HC
   Tan, S
   Tan, YS
   Xu, CR
   Stewart, C
   Zhou, QH
   Cao, Y
AF Zeng, Tao
   Xu, Zichen
   Wu, Dan
   Li, Xiaoling
   Liu, Biyong
   Hu, Haichuan
   Tan, Shuang
   Tan, Yusong
   Xu, Chenren
   Stewart, Christopher
   Zhou, Qihe
   Cao, Ye
TI Exploring nonintrusive measurements of spatio-temporal portrait of
   microservices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE fast fourier transform; nonintrusive measurement; performance analysis
   and evaluation
AB As cloud native technology advances, the scale and complexity of applications built on microservice architecture continue to expand, leading to increasingly intricate differences between software within the same application. Microservice applications, offering high flexibility, are deployed in data centers as black boxes from the users' perspective, leaving them with no insight into the orchestration of cloud service providers. Consequently, users face challenges in promptly recognizing performance imbalances within their deployed applications. Meanwhile, cloud service providers may cut costs by offering a mix of qualified and unqualified services, potentially deceiving users. To enhance the understanding of microservice application organization, we propose a non-intrusive measurement framework, termed NMPI. NMPI facilitates rapid identification of microservice application defects, offering insights into cloud services and detecting fraudulent behavior in microservice-based applications. We model microservice applications using a queue analysis-based approach and filter the dominant frequency components of average response time signals by employing k-means on the fast fourier transform (FFT). Our model constructs a library of performance portraits for various software, with these portraits resembling human fingerprints that carry and mark the software's internal information. Utilizing a two-tier microservices-based application incorporating a database as a case study allows us to demonstrate the effectiveness of NMPI. Our experimental results show that NMPI can produce differentiable profiles of data service performance portraits across a diverse and extensive range of workloads, enabling the identification of software types and the analysis of performance conditions.
C1 [Zeng, Tao; Xu, Zichen; Wu, Dan; Liu, Biyong; Hu, Haichuan; Cao, Ye] Nanchang Univ, Sch Math & Comp Sci, Nanchang, Peoples R China.
   [Li, Xiaoling; Tan, Shuang; Tan, Yusong] Natl Univ Def Technol, Coll Comp, Changsha, Hunan, Peoples R China.
   [Xu, Chenren] Peking Univ, Sch Comp Sci, Beijing, Peoples R China.
   [Stewart, Christopher] Ohio State Univ, Comp Sci & Engn, Columbus, OH USA.
   [Zhou, Qihe] City Univ Macau, Fac Data Sci, Macau, Peoples R China.
   [Xu, Zichen; Wu, Dan] Nanchang Univ, Sch Math & Comp Sci, 999 Xuefu BLVD, Nanchang 330000, Jiangxi, Peoples R China.
C3 Nanchang University; National University of Defense Technology - China;
   Peking University; University System of Ohio; Ohio State University;
   City University of Macau; Nanchang University
RP Li, XL (corresponding author), Natl Univ Def Technol, Coll Comp, Changsha, Hunan, Peoples R China.; Xu, ZC; Wu, D (corresponding author), Nanchang Univ, Sch Math & Comp Sci, 999 Xuefu BLVD, Nanchang 330000, Jiangxi, Peoples R China.
EM xuz@ncu.edu.cn; wudan@ncu.edu.cn; lixiaoling@nudt.edu.cn
RI Xi, Yang/KEH-5204-2024; lin, lin/KCZ-0185-2024; Wang,
   Jiawei/KHC-8971-2024; lin, lin/KFB-9548-2024; LI, LIXIN/KFS-0074-2024;
   zhou, chen/KHW-8121-2024; han, yang/KHX-8947-2024; yang,
   le/KFB-5420-2024
OI Xu, Zichen/0000-0001-9293-8028
FU National Key Ramp;D Program of China [2022YFB4501703]; National Natural
   Science Foundation of China [KY0402022036]; Provincial Key Research and
   Development Program of Jiangxi [012031379055]
FX ACKNOWLEDGEMENTS This work was supported by the National Key R&D Program
   of China, no. 2022YFB4501703, the National Natural Science Foundation of
   China (KY0402022036), and the Provincial Key Research and Development
   Program of Jiangxi (012031379055).
CR Bholowalia P., 2014, International Journal of Computer Application, V105
   Cooper Brian F., 2010, P 1 ACM S CLOUD COMP, P143, DOI [DOI 10.1145/1807128.1807152, 10.1145/1807128.1807152]
   Deng N, 2015, 2015 SIXTH INTERNATIONAL GREEN COMPUTING CONFERENCE AND SUSTAINABLE COMPUTING CONFERENCE (IGSC)
   Docker Inc, EMP APP DEV DEV DOCK
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Fazio M, 2016, IEEE CLOUD COMPUT, V3, P81, DOI 10.1109/MCC.2016.112
   Figiela K, 2018, CONCURR COMP-PRACT E, V30, DOI 10.1002/cpe.4792
   Ganti RK, 2010, IEEE ICC
   He S., 2019, P 2019 27 ACM JOINT
   Jindal A, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P25, DOI 10.1145/3297663.3310309
   Kakivaya G, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190546
   Lama F, 2018, PROCEEDINGS OF THE 2018 IEEE 25TH INTERNATIONAL CONFERENCE ON ELECTRONICS, ELECTRICAL ENGINEERING AND COMPUTING (INTERCON 2018)
   Lewis James, 2014, Microservices
   Li Jialin, 2014, P ACM S CLOUD COMP, P1
   Likas A, 2003, PATTERN RECOGN, V36, P451, DOI 10.1016/S0031-3203(02)00060-2
   Masouros D, 2021, IEEE T PARALL DISTR, V32, P184, DOI 10.1109/TPDS.2020.3013948
   Nussbaumer HJ, 1981, FAST FOURIER TRANSFO, P80, DOI DOI 10.1007/978-3-662-00551-4_4
   Pina F, 2018, 2018 IEEE 17TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA)
   Rahman J, 2019, INT CONF CLOUD ENG, P200, DOI 10.1109/IC2E.2019.00034
   Ranjan S, 2002, INT WORKSH QUAL SERV, P3, DOI 10.1109/IWQoS.2002.1006569
   Singh R., 2010, P 7 INT C AUT COMP
   Syed HJ, 2018, IEEE ACCESS, V6, P44591, DOI 10.1109/ACCESS.2018.2864573
   Thalheim J, 2017, PROCEEDINGS OF THE 2017 INTERNATIONAL MIDDLEWARE CONFERENCE (MIDDLEWARE'17), P14, DOI 10.1145/3135974.3135977
   The AWS Official, REDIS
   The Kubernetes Authors, Kubernetes
   The Memcached Authors, MEMC
   Urgaonkar B., 2005, SIGMETRICS Perform. Eval. Rev, V33, P291, DOI [10.1145/1071690.1064252, DOI 10.1145/1071690.1064252]
   Villela D, 2007, ACM T INTERNET TECHN, V7, DOI 10.1145/1189740.1189747
   Wang X., 2022, INT PAR DISTR PROC S
   Xu MX, 2022, IEEE T NETW SERV MAN, V19, P3995, DOI 10.1109/TNSM.2022.3210211
   Yang Dawei, 2021, Journal of Physics: Conference Series, V1738, DOI 10.1088/1742-6596/1738/1/012046
   Yu XH, 2007, ADV INTEL SYS RES, DOI 10.2991/iske.2007.224
   Zhong ZH, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3510415
NR 33
TC 0
Z9 0
U1 3
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 JUN 27
PY 2023
DI 10.1002/spe.3234
EA JUN 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA K3GF3
UT WOS:001015348400001
DA 2024-07-18
ER

PT J
AU Piantadosi, V
   Rosa, G
   Placella, D
   Scalabrino, S
   Oliveto, R
AF Piantadosi, Valentina
   Rosa, Giovanni
   Placella, Davide
   Scalabrino, Simone
   Oliveto, Rocco
TI Detecting functional and security-related issues in smart contracts: A
   systematic literature review
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE blockchain; smart contracts
ID VERIFICATION
AB Blockchain is a platform of distributed elaboration, which allows users to provide software for a huge range of next-generation decentralized applications without involving reliable third parties. Smart contracts (SCs) are an important component in blockchain applications: they are programmatic agreements among two or more parties that cannot be rescinded. Furthermore, SCs have an important characteristic: they allow users to implement reliable transactions without involving third parties. However, the advantages of SCs have a price. Like any program, SCs can contain bugs, some of which may also constitute security threats. Writing correct and secure SCs can be extremely difficult because, once deployed, they cannot be modified. Although SCs have been recently introduced, a large number of approaches have been proposed to find bugs and vulnerabilities in SCs. In this article, we present a systematic literature review on the approaches for the automated detection of bugs and vulnerabilities in SCs. We survey 68 papers published between 2015 and 2020, and we annotate each paper according to our classification framework to provide quantitative results and find possible areas not explored yet. Finally, we identify the open problems in this research field to provide possible directions to future researchers.
C1 [Piantadosi, Valentina; Rosa, Giovanni; Placella, Davide; Scalabrino, Simone; Oliveto, Rocco] Univ Molise, Dept Biosci & Terr, Molise, Italy.
C3 University of Molise
RP Piantadosi, V (corresponding author), Univ Molise, Dept Biosci & Terr, Molise, Italy.
EM valentina.piantadosi@unimol.it
OI Piantadosi, Valentina/0000-0003-0666-6121
CR ACM Digital Library, About us
   Akca S, 2019, ASIA PAC SOFWR ENG, P482, DOI 10.1109/APSEC48747.2019.00071
   Albert E, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P386, DOI 10.1145/3293882.3338999
   Alharby M., BLOCKCHAIN BASED SMA
   Alharby M, 2018, 2018 INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, BIG DATA AND BLOCKCHAIN (ICCBB 2018), P96
   Alt Leonardo, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P376, DOI 10.1007/978-3-030-03427-6_28
   Amani S, 2018, P 7 INT C CERT PROGR, P66, DOI DOI 10.1145/3167084
   Ashouri M, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P353, DOI 10.1145/3341105.3374226
   Azzopardi S, 2018, LECT NOTES COMPUT SC, V11237, P113, DOI 10.1007/978-3-030-03769-7_8
   Bai XM, 2018, PROCEEDINGS OF 2018 7TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2018), P322, DOI 10.1145/3185089.3185138
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Bigi G, 2015, LECT NOTES COMPUT SC, V9465, P142, DOI 10.1007/978-3-319-25527-9_11
   Boxler Dan, 2018, P INT C SOFTW ENG RE, P46
   Buterin V., 2014, ETHEREUM NEXT GENERA, V3, P2
   Buterin V., 2015, On public and private blockchains
   Casino F, 2019, TELEMAT INFORM, V36, P55, DOI 10.1016/j.tele.2018.11.006
   Chapman P, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2019), P319, DOI 10.1109/Blockchain.2019.00050
   Chatterjee Krishnendu, 2019, SAC '19: Proceedings of the 34th ACM/SIGAPP Symposium on Applied Computing, P400, DOI 10.1145/3297280.3297322
   Chen C, 2018, LECT NOTES COMPUT SC, V10699, P289, DOI 10.1007/978-3-319-73830-7_29
   Chen HS, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3391195
   Chen T, 2017, LECT NOTES COMPUT SC, V10701, P3, DOI 10.1007/978-3-319-72359-4_1
   Conoscenti M, 2016, I C COMP SYST APPLIC
   cwe.mitre.org, SWC REGISTRY
   cwe.mitre.org, CWE REGISTRY
   dasp.co, DENIAL SERVICE
   dasp.co, SHORT ADDRESS ATTACK
   di Angelo M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON DECENTRALIZED APPLICATIONS AND INFRASTRUCTURES (DAPPCON), P69, DOI 10.1109/DAPPCON.2019.00018
   Docker, About us
   Dong C., 2019, P CCF CHINA BLOCKCHA, P83
   El-Dosuky Mohamed A., 2019, New Knowledge in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 930), P538, DOI 10.1007/978-3-030-16181-1_51
   everyspec, US
   Falkon, TUHE STORY DAO ITS H
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Feng X., BUG SEARCHING SMART
   Fu ML, 2019, IEEE ACCESS, V7, P147327, DOI 10.1109/ACCESS.2019.2947146
   Gallagher T., 2006, Hunting Security Bugs
   Gao J., 2019, P 41 INT C SOFTWARE, P138, DOI [10.1109/ICSE-Companion.2019.00059, DOI 10.1109/ICSE]
   Gao JB, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P23, DOI 10.1109/ICSE-Companion.2019.00029
   Gao JB, 2019, INT C PROGRAM COMPRE, P294, DOI 10.1109/ICPC.2019.00048
   GERHART S, 1993, PROC INT CONF SOFTW, P24, DOI 10.1109/ICSE.1993.346058
   git.io, EXTERNAL CONTRACT RE
   github.com, BAMBOO LANGUAGE MORP
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10804, P243, DOI 10.1007/978-3-319-89722-6_10
   Grossman S, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158136
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Hildenbrandt E, 2018, P IEEE COMPUT SECUR, P204, DOI 10.1109/CSF.2018.00022
   Hirai Yoichi, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P520, DOI 10.1007/978-3-319-70278-0_33
   Honig JJ, 2019, LECT NOTES COMPUT SC, V11737, P289, DOI 10.1007/978-3-030-31500-9_19
   Hyperledger Foundation, ABOUT US
   ieeexplore.ieee.org, IEEE EXPLORE
   ink.springer.com, SPRINGER LINK
   Jialiang Chang, 2019, Formal Methods and Software Engineering. 21st International Conference on Formal Engineering Methods, ICFEM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11852), P286, DOI 10.1007/978-3-030-32409-4_18
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Jiao J, 2020, LECT NOTES COMPUT SC, V12076, P75, DOI 10.1007/978-3-030-45234-6_4
   Junzhou Xu, 2020, 2020 IEEE 3rd International Conference on Information Systems and Computer Aided Education (ICISCAE), P94, DOI 10.1109/ICISCAE51034.2020.9236931
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kasampalis Theodoros, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P593, DOI 10.1007/978-3-030-30942-8_35
   King J. C., 1975, Programming Methodology, P278, DOI 10.1145/390016.808444
   Klomp R, 2018, LECT NOTES COMPUT SC, V11025, P38, DOI 10.1007/978-3-030-00305-0_3
   Kolluri A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P363, DOI 10.1145/3293882.3330560
   Krupp J, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1317
   kubernetes, about us
   Lahbib Asma, 2020, Advanced Information Networking and Applications. Proceedings of the 34th International Conference on Advanced Information Networking and Applications (AINA-2020). Advances in Intelligent Systems and Computing (AISC 1151), P1303, DOI 10.1007/978-3-030-44041-1_111
   Lai EM, 2020, 2020 4TH INTERNATIONAL CONFERENCE ON CRYPTOGRAPHY, SECURITY AND PRIVACY (ICCSP 2020), P110, DOI 10.1145/3377644.3377650
   Lewis A., 2016, GENTLE INTRO SMART C
   Li ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1198, DOI 10.1109/ASE.2019.00136
   Liao JW, 2019, 2019 SIXTH INTERNATIONAL CONFERENCE ON INTERNET OF THINGS: SYSTEMS, MANAGEMENT AND SECURITY (IOTSMS), P458, DOI 10.1109/iotsms48152.2019.8939256
   Liu C, 2018, PROC IEEE ACM INT C, P65, DOI 10.1145/3183440.3183495
   Liu H, 2018, IEEE INT CONF AUTOM, P814, DOI 10.1145/3238147.3240728
   Liu J, 2019, IEEE ACCESS, V7, P77894, DOI 10.1109/ACCESS.2019.2921624
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Ma FC, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P554, DOI [10.1109/SANER.2019.8668038, 10.1109/saner.2019.8668038]
   Medeiros H., 2019, P 29 ANN INT C COMPU, P264
   Mitchell TM, 1997, AI MAG, V18, P11
   Momeni P, 2019, ANN CONF PRIV SECUR, P272, DOI 10.1109/pst47121.2019.8949045
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Murray Y, 2019, INT CONF NEW TECHNOL, DOI 10.1109/ntms.2019.8763832
   Myers Glenford J., 2011, The Art of Software Testing
   Nakamoto S., 2008, DECENT BUS REV, V21260, DOI https://bitcoin.org/bitcoin.pdf
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   NXT, US
   Park D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P912, DOI 10.1145/3236024.3264591
   Peng C, 2019, ASIA PAC SOFWR ENG, P466, DOI 10.1109/APSEC48747.2019.00069
   Nguyen QB, 2019, LECT NOTES COMPUT SC, V11814, P485, DOI 10.1007/978-3-030-35653-8_32
   Ripple, About Us
   Rosa Righi, 2020, BLOCKCHAIN TECHNOLOG, P73, DOI DOI 10.1007/978-981-15-1137-0_4
   sciencedirect.com, SCI DIRECT
   Sergey I, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360611
   Shen C, 2018, IEEE ACCESS, V6, P76787, DOI 10.1109/ACCESS.2018.2880744
   Shishkin E, 2019, PROGRAM COMPUT SOFT+, V45, P590, DOI 10.1134/S0361768819080164
   Song JJ, 2019, LECT NOTES COMPUT SC, V11928, P433, DOI 10.1007/978-3-030-36938-5_26
   Staffs Keele, 2007, Tech. Rep.
   Szabo N., 1997, First Monday, V2
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov Petar, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P316, DOI 10.1007/978-3-030-03427-6_24
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Vacca A, 2021, J SYST SOFTWARE, V174, DOI 10.1016/j.jss.2020.110891
   Wang HJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P1, DOI 10.1109/ICSE-NIER.2019.00009
   Wang S, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360615
   Wang YP, 2020, LECT NOTES COMPUT SC, V12031, P87, DOI 10.1007/978-3-030-41600-3_7
   Wang ZL, 2020, J NETW COMPUT APPL, V154, DOI 10.1016/j.jnca.2020.102530
   WICHMANN BA, 1995, SOFTWARE ENG J, V10, P69, DOI 10.1049/sej.1995.0010
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Xu GQ, 2020, COMPUT SECUR, V88, DOI 10.1016/j.cose.2019.101604
   Ye JM, 2020, STUD COMPUT INTELL, V851, P69, DOI 10.1007/978-3-030-26574-8_6
   Yu W, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND MACHINE INTELLIGENCE (MLMI 2018), P72, DOI 10.1145/3278312.3278321
   Zakrzewski J, 2018, LECT NOTES COMPUT SC, V11294, P229, DOI 10.1007/978-3-030-03592-1_13
   Zemin Tian, 2019, 2019 3rd International Conference on Circuits, System and Simulation (ICCSS), P127, DOI 10.1109/CIRSYSSIM.2019.8935603
   Zhang QZ, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P116, DOI [10.1109/saner48275.2020.9054822, 10.1109/SANER48275.2020.9054822]
   Zhang W, 2019, PROC INT SYMP SOFTW, P456, DOI 10.1109/ISSRE.2019.00052
   Zhang YY, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P23, DOI [10.1109/saner48275.2020.9054825, 10.1109/SANER48275.2020.9054825]
NR 114
TC 4
Z9 4
U1 3
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 465
EP 495
DI 10.1002/spe.3156
EA OCT 2022
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000869717300001
DA 2024-07-18
ER

PT J
AU Amato, D
   Lo Bosco, G
   Giancarlo, R
AF Amato, Domenico
   Lo Bosco, Giosue
   Giancarlo, Raffaele
TI Standard versus uniform binary search and their variants in learned
   static indexing: The case of the searching on sorted data benchmarking
   software platform
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE algorithms with prediction; binary search variants; learned index
   structures; search on sorted data platform
AB Learned Indexes use a model to restrict the search of a sorted table to a smaller interval. Typically, a final binary search is done using the lower_bound routine of the Standard C++ library. Recent studies have shown that on current processors other search approaches (such as k-ary search) can be more efficient in some applications. Using the SOSD learned indexing benchmarking software, we extend these results to show that k-ary search is indeed a better choice when using learned indexes. We highlight how such a choice may be dependent on the computer architecture used, for example, Intel I7 or Apple M1, and provide guidelines for the selection of the Search routine within the learned indexing framework.
C1 [Amato, Domenico; Lo Bosco, Giosue; Giancarlo, Raffaele] Univ Palermo, Dipartimento Matemat & Informat, Via Archirafi 34, I-90123 Palermo, Italy.
C3 University of Palermo
RP Lo Bosco, G (corresponding author), Univ Palermo, Dipartimento Matemat & Informat, Via Archirafi 34, I-90123 Palermo, Italy.
EM giosue.lobosco@unipa.it
RI Lo Bosco, Giosuè/C-7644-2011
OI Lo Bosco, Giosuè/0000-0002-1602-0693
FU Italian MUR PRIN [2017WR7SHH]; INdAM-GNCS [2022]
FX Italian MUR PRIN, Grant/Award Number: 2017WR7SHH; INdAM-GNCS 2022
CR Amato D., 2022, ARTIF INTELL, P462
   Amato D., 2021, CORR
   [Anonymous], 2009, DaMoN'09
   Ao NY, 2011, PROC VLDB ENDOW, V4, P470
   Awasthi Pranjal, 2021, Personal communication
   COMER D, 1979, COMPUT SURV, V11, P121, DOI 10.1145/356770.356776
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Ding JL, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P969, DOI 10.1145/3318464.3389711
   Ferragina P, 2021, THEOR COMPUT SCI, V871, P107, DOI 10.1016/j.tcs.2021.04.015
   Ferragina P, 2020, PROC VLDB ENDOW, V13, P1162, DOI 10.14778/3389133.3389135
   Ferragina Paolo, 2019, Studies in Computational Intelligence, V896, P5, DOI [DOI 10.1007/978-3-030-43883-8_2, DOI 10.1007/978-3-030-43883-82]
   Freedman D. A, 2005, STAT MODELS THEORY P, DOI DOI 10.1017/CBO9781139165495
   Khuong P-V., 2017, ACM J EXPT ALGORITHM, V22, P1, DOI 10.1145/3053370
   Kipf Andreas, 2020, aiDM '20: Proceedings of the Third International Workshop on Exploiting Artificial Intelligence Techniques for Data Management, DOI 10.1145/3401071.3401659
   Kipf A., 2019, NEURIPS WORKSHOP MAC
   Knuth D. E., 2011, The art of computer programming (second ed.) vol. 1 fundamental algorithms, V4A
   Kraska T, 2018, INT CONF MANAGE DATA, P489, DOI 10.1145/3183713.3196909
   Maltry M, 2022, PROC VLDB ENDOW, V15, P1079, DOI 10.14778/3510397.3510405
   Marcus R, 2020, PROC VLDB ENDOW, V14, P1, DOI 10.14778/3421424.3421425
   Rao J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P78
   Schulz LC, 2018, PROC VLDB ENDOW, V11, P1550, DOI 10.14778/3236187.3236205
   US
NR 22
TC 4
Z9 4
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 318
EP 346
DI 10.1002/spe.3150
EA SEP 2022
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000850240100001
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Odoom, J
   Huang, XF
   Danso, SA
AF Odoom, Justice
   Huang, Xiaofang
   Danso, Samuel Akwasi
TI COVID-19 and future pandemics: A blockchain-based privacy-aware secure
   borderless travel solution from electronic health records
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE blockchain; coronavirus; decentralized application; electronic health
   records; smart contract; travel
AB COVID-19 pandemic undoubtedly lingers on and has brought unprecedented changes globally including travel arrangements. Blockchain-based solutions have been proposed to aid travel amid the pandemic hap. Presently, extant solutions are country or regional-based, downplay privacy, non-responsive, often impractical, and come with blockchain-related complexities presenting technological hurdle for travelers. We therefore propose a solution namely, Borderless to foster global travel allowing travelers and countries collaboratively engage in a secure adaptive proof protocol dubbed Proof-of-COVID-19 status a number of arbitrary statements to ascertain the fact that the traveler poses no danger irrespective of the country located. As far as we know, this is first of its kind. Borderless is implemented as a decentralized application leveraging blockchain as a trust anchor and decentralized storage technology. Security analysis and evaluation are performed proving security, privacy-preservation, and cost-effectiveness along with implementation envisioning it as a blueprint to facilitate cross-border travel during the present and future pandemics. Our experimental results show it takes less than 60 and 3 s to onboard users and perform proof verification respectively attesting to real usability scenarios along with the traits of arbitrary proofs to aid responsiveness to the dynamics of pandemics and blockchain abstraction from travelers.
C1 [Odoom, Justice; Huang, Xiaofang] Southwest Univ Sci & Technol, Dept Comp Sci & Technol, Mianyang 621010, Sichuan, Peoples R China.
   [Danso, Samuel Akwasi] Ghana Commun Technol Univ, Dept Comp Sci, Accra, Ghana.
C3 Southwest University of Science & Technology - China
RP Odoom, J (corresponding author), Southwest Univ Sci & Technol, Dept Comp Sci & Technol, Mianyang 621010, Sichuan, Peoples R China.
EM odoom.justice@ieee.org
RI Odoom, Justice/AEE-5083-2022; Danso, Samuel Akwasi/GVU-9101-2022; Danso,
   Samuel Akwasi/AAO-4557-2021
OI Odoom, Justice/0000-0003-2765-6977; Danso, Samuel
   Akwasi/0000-0002-9757-9527
FU National Natural Science Foundation of China (Youth); Image Source
   Forensics Security Research [61702429]; Sichuan Provincial Department of
   Science and Technology, A trusted basic service platform for
   universities based on independent and controllable blockchain technology
   [2021YFG0311]
FX National Natural Science Foundation of China (Youth); Image Source
   Forensics Security Research, Grant/Award Number: 61702429; Sichuan
   Provincial Department of Science and Technology, A trusted basic service
   platform for universities based on independent and controllable
   blockchain technology, Grant/Award Number: 2021YFG0311
CR ABDELBASSET M, 2020, TECHNOL FORECAST SOC
   Abid A, 2022, SOFTWARE PRACT EXPER, V52, P841, DOI 10.1002/spe.2983
   Act A, 1996, PUBLIC LAW, V104, P191, DOI 10.4135/9781452234243.n359
   AfricanUnion A., 2021, TRUSTED TRAVEL
   Akbari-Nodehi H, 2021, IEEE T INFORM THEORY, V67, P2379, DOI 10.1109/TIT.2021.3050853
   Al-Breiki H, 2020, IEEE ACCESS, V8, P85675, DOI 10.1109/ACCESS.2020.2992698
   Alabdulkarim Y, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11188767
   Alsamhi SH, 2021, IEEE ACCESS, V9, P44173, DOI 10.1109/ACCESS.2020.3032450
   Androulaki E, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190538
   [Anonymous], 2021, Euronews. _
   [Anonymous], 2014, Storj a peer-to-peer cloud storage network
   Antonopoulos Andreas M, 2018, Mastering Ethereum: Building Smart Contracts and DApps
   Attaran M., 2019, ARCHITECTURE BLOCKCH, P21, DOI DOI 10.1007/978-3-030-03035-3
   Bansal A, 2020, J MED SYST, V44, DOI 10.1007/s10916-020-01616-4
   Benet Juan, IPFS-Content Addressed, Versioned, P2P File System
   Biswas S, 2021, IEEE CONSUM ELECTR M, V10, P64, DOI 10.1109/MCE.2021.3074688
   Butler D., 2020, ARXIV 2020 ABS200614
   Cadwalladr C., 2021, GHE CAMBRIDGE ANALYT
   Cao S, 2019, INFORM SCIENCES, V485, P427, DOI 10.1016/j.ins.2019.02.038
   CAPECE G, 2021, SUSTAINABILITY-BASEL, V13
   Chamola V, 2020, IEEE ACCESS, V8, P90225, DOI 10.1109/ACCESS.2020.2992341
   Chatterjee K, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (ICBC), P403, DOI [10.1109/bloc.2019.8751326, 10.1109/BLOC.2019.8751326]
   Chaudhari Sarang, 2021, Intelligent Computing. Proceedings of the 2021 Computing Conference. Lecture Notes in Networks and Systems (LNNS 285), P108, DOI 10.1007/978-3-030-80129-8_9
   Choong YYC, 2020, NAT REV MATER, V5, P637, DOI 10.1038/s41578-020-00234-3
   Concourse, 2021, ETH Gas Station
   Di Ciccio C, 2022, SOFTW SYST MODEL, V21, P915, DOI 10.1007/s10270-021-00959-x
   Eisenstadt M, 2020, IEEE OPEN J ENG MED, V1, P148, DOI 10.1109/OJEMB.2020.2999214
   Erbguth J, 2018, INT CONF SOFTW ENG, P46, DOI 10.1109/ICSESS.2018.8663721
   Ethereum, 2021, REMIX IDE
   Ethereum, 2022, WEB3JS ETHEREUM JAVA
   Ethereum, 2021, UPGRADING ETHEREUM R
   Ethereum, 2022, ETHEREUM UPGRADES
   Etherscan, 2021, ETHEREUM DAILY T CHA
   Etherscan, 2021, Ethereum Node Tracker
   Euronews, 2021, EUS DIGITAL COVID CE
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Ferrag MA, 2021, IEEE INTERNET THINGS, V8, P17236, DOI 10.1109/JIOT.2021.3078072
   Ferrag MA, 2021, IEEE-CAA J AUTOMATIC, V8, P1477, DOI 10.1109/JAS.2021.1004087
   Fusco A, 2020, INT J ENV RES PUB HE, V17, DOI 10.3390/ijerph17197167
   Garg C, 2020, J MED SYST, V44, DOI 10.1007/s10916-020-01628-0
   Hafid A, 2020, IEEE ACCESS, V8, P125244, DOI 10.1109/ACCESS.2020.3007251
   Haque AB, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11136132
   Hasan Haya R, 2020, IEEE Access, V8, P222093, DOI 10.1109/ACCESS.2020.3043350
   Hernández-Ramos JL, 2021, WIREL COMMUN MOB COM, V2021, DOI 10.1155/2021/2427896
   Hersh William R, 2015, JMIR Med Inform, V3, pe39, DOI 10.2196/medinform.5215
   Hicks C., ARXIV 2020 ABS200511
   IDREES S, 2020, JMIR MED INFORM
   ImmuPass, 2020, COVID 19 IMM CERT
   Kalla Anshuman, 2020, IEEE Engineering Management Review, V48, P85, DOI 10.1109/EMR.2020.3014052
   Karnouskos S, 2021, IEEE OPEN J IND ELEC, V2, P556, DOI 10.1109/OJIES.2021.3121549
   Karopoulos G, 2021, IEEE ACCESS, V9, P138003, DOI 10.1109/ACCESS.2021.3117781
   Marbouh D, 2020, ARAB J SCI ENG, V45, P9895, DOI 10.1007/s13369-020-04950-4
   Marios Angelopoulos C., DHP FRAMEWORK DIGITA
   MASHAMBATHOMPSO.T, 2020, DIAGNOSTICS
   Metamask, 2021, MET A CRYPT WALL GAT
   Multiformats, 2021, SELF DESCRIBING HASH
   Musamih A, 2021, IEEE ACCESS, V9, P71372, DOI 10.1109/ACCESS.2021.3079197
   Nakamoto I, 2020, JMIR MHEALTH UHEALTH, V8, DOI 10.2196/22321
   Nakamoto S., 2008, DECENT BUS REV, V21260, DOI https://bitcoin.org/bitcoin.pdf
   NHS, NHS COVID PASS 2021
   Odoom J, 2019, PRIVACY PRESERVING C, DOI [10.1109/ICMRSISIIT46373.2020.9405872, DOI 10.1109/ICMRSISIIT46373.2020.9405872]
   Project C., 2021, ETHERSCAN
   Project E, FAST ETHEREUM RPC CL
   Resiere D, 2020, J MED SYST, V44, DOI 10.1007/s10916-020-01589-4
   Singh A., 2020, ARXIV 2020 ABS201202
   Tene O, 2019, IEEE SECUR PRIV, V17, P7, DOI 10.1109/MSEC.2019.2938196
   Verizon, 2021, 2020 DAT BREACH INV
   Vorick D., 2014, SIA: Simple decentralized storage, V8, P2018
   Wagner E, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (ICBC), P422, DOI [10.1109/bloc.2019.8751312, 10.1109/BLOC.2019.8751312]
   Wang G, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2019), P166, DOI 10.1109/Blockchain.2019.00030
   WHO, 2021, COR DIS COVID 19 POS
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   World Health Organization, 2021, The effects of virus variants on COVID-19 vaccines
   Wu HY, 2020, IEEE ACCESS, V8, P154848, DOI 10.1109/ACCESS.2020.3017654
   Xiong XX, 2020, SECUR COMMUN NETW, V2020, DOI 10.1155/2020/8829523
   YANG G, SCI ROBOT
   You E., 2021, PROGRESSIVE JAVASCRI
   Yu L, 2020, INT J INFORM MANAGE, V51, DOI 10.1016/j.ijinfomgt.2019.09.011
NR 78
TC 2
Z9 2
U1 1
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2263
EP 2287
DI 10.1002/spe.3126
EA JUL 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000828895700001
PM 35942331
OA Green Published
DA 2024-07-18
ER

PT J
AU Su, MF
   Wang, GJ
   Chen, JE
AF Su, Mingfeng
   Wang, Guojun
   Chen, Jianer
TI Efficient task offloading with swarm intelligence evolution for
   edge-cloud collaboration in vehicular edge computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE edge computing; edge-cloud collaboration; heuristic algorithm; task
   offloading; vehicular edge computing
ID RESOURCE-ALLOCATION
AB In vehicular edge computing, both edge and cloud can provide computing services (i.e., tasks). The edge can reduce vehicular task delay by processing data nearby, but is resource-constrained and cannot handle too many tasks simultaneously. The resource-rich cloud can handle massive tasks, but is far from users and has low quality of service and energy efficiency. Currently, some work has been done on task offloading for edge-cloud collaboration. However, either the collaboration among multiple devices is not considered and the load is easily imbalanced; or edge-cloud collaboration is required for offloading decisions with too many parameters, affecting tasks to be processed efficiently. To address these issues, we learn from the swarm intelligence evolution of sparrow foraging, improve a sparrow search algorithm by integrating three strategies of flyer refine producer update, sin/cos perturbation follower update, and adaptive adjustment agitator update, to optimize the vehicular task offloading location for edge-cloud collaboration. Furthermore, we combine delay relaxation variables and delay-energy penalty operator to design a lightweight heuristic task offloading algorithm, and greedily compare the task preoffload location sets with different delay constraints based on the improved sparrow search algorithm, to obtain the optimal task offloading with integrated delay and energy. Simulation experiments verify that our approach can improve the algorithm's optimization accuracy, convergence speed, and robustness. Moreover, the average task delay, total task energy consumption, and load balance degree of our approach outperform the five benchmark algorithms, and can comprehensively optimize task delay and energy consumption, and achieve edge devices load balancing.
C1 [Su, Mingfeng] Cent South Univ, Sch Comp Sci & Engn, Changsha, Peoples R China.
   [Su, Mingfeng] Hunan Vocat Coll Commerce, Sch Business Informat Technol, Changsha, Peoples R China.
   [Wang, Guojun; Chen, Jianer] Guangzhou Univ, Sch Comp Sci & Cyber Engn, Gongdong, Peoples R China.
C3 Central South University; Guangzhou University
RP Wang, GJ (corresponding author), Guangzhou Univ, Sch Comp Sci & Cyber Engn, Guangzhou Higher Educ Mega Ctr, 230 West Outer Ring Rd, Guangzhou 510006, Guangdong, Peoples R China.
EM csgjwang@gzhu.edu.cn
FU Key Project of the National Natural Science Foundation of China
   [61632009]; Natural Science Foundation of Hunan Province [2019JJ70057];
   Natural Science Foundation of Guangdong Province [2017A030308006];
   National Key Research and Development Program of China [2020YFB1005804];
   Fundamental Research Funds for the Central Universities of Central South
   University [2018zzts180]; Open Fund of Science and Technology on
   Parallel and Distributed Processing Laboratory [WDZC20215250116]
FX Key Project of the National Natural Science Foundation of China
   (61632009), the Natural Science Foundation of Hunan Province
   (2019JJ70057), the Natural Science Foundation of Guangdong Province
   (2017A030308006), the National Key Research and Development Program of
   China (2020YFB1005804), and the Fundamental Research Funds for the
   Central Universities of Central South University (2018zzts180); Open
   Fund of Science and Technology on Parallel and Distributed Processing
   Laboratory, Grant/Award Number: WDZC20215250116
CR Boukerche A, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3392064
   Chen WW, 2019, IEEE T SERV COMPUT, V12, P726, DOI 10.1109/TSC.2018.2826544
   Feng JY, 2019, IEEE VEH TECHNOL MAG, V14, P28, DOI 10.1109/MVT.2018.2879647
   Gong XW, 2020, IEEE INFOCOM SER, P2629, DOI [10.1109/infocom41043.2020.9155272, 10.1109/INFOCOM41043.2020.9155272]
   Gu XH, 2021, COMPUT COMMUN, V166, P244, DOI 10.1016/j.comcom.2020.12.010
   Harandizadeh H, 2021, ENG COMPUT-GERMANY, V37, P685, DOI 10.1007/s00366-019-00849-3
   He ZL, 2021, SOFTWARE PRACT EXPER, V51, P1868, DOI 10.1002/spe.2951
   Huang XM, 2021, IEEE T VEH TECHNOL, V70, P3773, DOI 10.1109/TVT.2021.3064426
   Ku YJ, 2021, IEEE T VEH TECHNOL, V70, P13221, DOI 10.1109/TVT.2021.3119585
   Kuang ZF, 2021, J SYST ARCHITECT, V118, DOI 10.1016/j.sysarc.2021.102167
   Li MS, 2020, IEEE T COGN COMMUN, V6, P1122, DOI 10.1109/TCCN.2020.3003036
   Liu L, 2021, MOBILE NETW APPL, V26, P1145, DOI 10.1007/s11036-020-01624-1
   Luo J, 2019, J SYST ARCHITECT, V97, P34, DOI 10.1016/j.sysarc.2019.01.019
   Luo QY, 2020, IEEE INTERNET THINGS, V7, P9637, DOI 10.1109/JIOT.2020.2983660
   Ning ZL, 2019, IEEE INTERNET THINGS, V6, P4804, DOI 10.1109/JIOT.2018.2868616
   Ouyang T, 2019, IEEE INFOCOM SER, P1468, DOI [10.1109/infocom.2019.8737560, 10.1109/INFOCOM.2019.8737560]
   Ren JK, 2019, IEEE T VEH TECHNOL, V68, P5031, DOI 10.1109/TVT.2019.2904244
   Shahidinejad A, 2020, SOFTWARE PRACT EXPER, V50, P2212, DOI 10.1002/spe.2888
   Sharma S, 2019, VEH COMMUN, V20, DOI 10.1016/j.vehcom.2019.100182
   Song FH, 2022, FUTURE GENER COMP SY, V128, P333, DOI 10.1016/j.future.2021.10.013
   Sonmez C, 2021, IEEE T INTELL TRANSP, V22, P2239, DOI 10.1109/TITS.2020.3024233
   Sorkhoh I, 2019, IEEE T VEH TECHNOL, V68, P8472, DOI 10.1109/TVT.2019.2927634
   Tang LJ, 2021, J CLOUD COMPUT-ADV S, V10, DOI 10.1186/s13677-021-00240-y
   Wan KZ, 2019, IEEE T VEH TECHNOL, V68, P8159, DOI 10.1109/TVT.2019.2926513
   Wang HX, 2020, IEEE INFOCOM SER, P1379, DOI [10.1109/infocom41043.2020.9155517, 10.1109/INFOCOM41043.2020.9155517]
   Wang K, 2018, IEEE NETWORK, V32, P112, DOI 10.1109/MNET.2018.1700364
   Wang SG, 2021, IEEE T MOBILE COMPUT, V20, P939, DOI 10.1109/TMC.2019.2957804
   Wang T, 2021, IEEE T COMPUT, V70, P1285, DOI 10.1109/TC.2021.3060484
   Wang T, 2020, IEEE T IND INFORM, V16, P6663, DOI 10.1109/TII.2019.2962844
   Wang T, 2020, IEEE INTERNET THINGS, V7, P2679, DOI 10.1109/JIOT.2019.2951687
   Wang T, 2020, IEEE T IND INFORM, V16, P6083, DOI 10.1109/TII.2019.2955152
   Wang Z, 2021, IEEE T VEH TECHNOL, V70, P768, DOI 10.1109/TVT.2020.3043296
   Xu Y, 2021, IEEE T NETW SCI ENG, V8, P2946, DOI 10.1109/TNSE.2021.3055762
   Xu Y, 2021, IEEE T EMERG TOP COM, V9, P1421, DOI 10.1109/TETC.2020.3005610
   Xu Y, 2021, IEEE T NETW SCI ENG, V8, P1202, DOI 10.1109/TNSE.2020.2976697
   Xu Y, 2020, IEEE T SERV COMPUT, V13, P289, DOI 10.1109/TSC.2019.2953033
   Xu Y, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5556
   Xue JK, 2020, SYST SCI CONTROL ENG, V8, P22, DOI 10.1080/21642583.2019.1708830
   Zhang CL, 2021, KNOWL-BASED SYST, V220, DOI 10.1016/j.knosys.2021.106924
   Zhang R, 2020, IEEE WIREL COMMUN LE, V9, P928, DOI 10.1109/LWC.2020.2973985
   Zhao H., 2020, SOFTW PRACT EXP, V51, P2501
   Zhao JH, 2019, IEEE T VEH TECHNOL, V68, P7944, DOI 10.1109/TVT.2019.2917890
   Zhu XG, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3512345
   Zhu XY, 2022, IEEE T INTELL TRANSP, V23, P2422, DOI 10.1109/TITS.2021.3114295
   Zhu XY, 2021, IEEE INTERNET THINGS, V8, P9763, DOI 10.1109/JIOT.2020.3040768
   Zhu XY, 2021, IEEE T INTELL TRANSP, V22, P4648, DOI 10.1109/TITS.2020.3023446
NR 46
TC 2
Z9 2
U1 3
U2 32
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2022 JUL 19
PY 2022
DI 10.1002/spe.3125
EA JUL 2022
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2Z7XR
UT WOS:000826786300001
DA 2024-07-18
ER

PT J
AU Chen, SL
   Fu, XL
   Si, HC
   Wang, Y
   Gao, SF
   Wang, CY
AF Chen, Songling
   Fu, Xiangling
   Si, Hongchao
   Wang, Yi
   Gao, Songfeng
   Wang, Chunyuan
TI Blockchain for Health IoT: A privacy-preserving data sharing system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE blockchain; data sharing; healthcare; Internet of Things (IoT);
   privacy-preserving; Raft algorithm
AB Health Internet of Things (Health IoT) has been limited by isolated information and a lack of security. As the combination of blockchain and Health IoT could potentially address these two limitations, it has attracted significant interest. However, blockchain-based systems often fail to balance data sharing and privacy protection. Therefore, we proposed a Health IoT-based privacy-preserving data sharing blockchain system. We designed a privacy-preserving method based on the content extraction signature scheme to enable patients to establish fine-grained privacy protection. We designed a Byzantine fault-tolerant leader election mechanism that enhances the security of the Raft algorithm while providing efficiency in the data sharing. Furthermore, we designed a summary contract to ensure efficient data retrieval. The proposed mechanism was evaluated in terms of the efficiency and security. The simulation and analysis results demonstrate that our scheme offers a secure and effective technique for achieving privacy-preserving and efficient sharing of IoT medical data.
C1 [Chen, Songling; Fu, Xiangling; Si, Hongchao; Wang, Yi] Beijing Univ Posts & Telecommun, Sch Comp Sci, Natl Pilot Software Engn Sch, Beijing 100876, Peoples R China.
   [Chen, Songling; Fu, Xiangling; Si, Hongchao; Wang, Yi] Beijing Univ Posts & Telecommun, Key Lab Trustworthy Distributed Corn Puting & Ser, Minist Educ, Beijing, Peoples R China.
   [Gao, Songfeng; Wang, Chunyuan] Huarong Rongtong Beijing Technol Co Ltd, Beijing, Peoples R China.
C3 Beijing University of Posts & Telecommunications; Beijing University of
   Posts & Telecommunications
RP Fu, XL (corresponding author), Beijing Univ Posts & Telecommun, Sch Comp Sci, Natl Pilot Software Engn Sch, Beijing 100876, Peoples R China.
EM fuxiangling@bupt.edu.cn
RI Chen, Songling/GVU-8198-2022; fu, xiang/HJH-8919-2023; fu,
   xiang/JCE-2186-2023
OI Chen, Songling/0000-0002-4801-5231; 
FU Beijing Municipal Natural Science Foundation
FX This work is supported by Beijing Municipal Natural Science Foundation
   (No. M22012).
CR [Anonymous], 2017, EHEALTH MEETS INTERN
   Azaria A, 2016, PROCEEDINGS 2016 2ND INTERNATIONAL CONFERENCE ON OPEN AND BIG DATA - OBD 2016, P25, DOI 10.1109/OBD.2016.11
   Baird L., 2016, The Swirlds Hashgraph Consensus Algorithm: Fast, Fair, Byzantine Fault Tolerance
   Balasubramanian V, 2021, SOFTWARE PRACT EXPER, V51, P2457, DOI 10.1002/spe.2849
   Bano S, 2019, AFT'19: PROCEEDINGS OF THE 1ST ACM CONFERENCE ON ADVANCES IN FINANCIAL TECHNOLOGIES, P183, DOI 10.1145/3318041.3355458
   Bellekens X. J., 2016, Int. J. Cyber Situational Aware, V1, P74, DOI [10.22619/IJCSA.2016.100104, DOI 10.22619/IJCSA.2016.100104]
   Bodkhe U, 2021, SOFTWARE PRACT EXPER, V51, P2469, DOI 10.1002/spe.2811
   Castro M, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P173, DOI 10.1145/571637.571640
   Copeland Christopher., 2016, Tangaroa: a byzantine fault tolerant raft
   Ebad SA, 2020, SOFTWARE PRACT EXPER, V50, P1258, DOI 10.1002/spe.2807
   Feng L., 2020, J E CHINA NORM U NAT, V213, P53
   Fu X, 2021, SOFTWARE PRACT EXPER, V51, P1987, DOI 10.1002/spe.2748
   Fujisaki E, 2013, J CRYPTOL, V26, P80, DOI 10.1007/s00145-011-9114-1
   Gilad Y, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P51, DOI 10.1145/3132747.3132757
   Roy DG, 2021, SOFTWARE PRACT EXPER, V51, P1540, DOI 10.1002/spe.2972
   Hellani H., 2021, TANGLE BLOCKCHAIN CO, P63
   Huang DY, 2020, IEEE T SYST MAN CY-S, V50, P172, DOI 10.1109/TSMC.2019.2895471
   Huang JQ, 2019, IEEE T IND INFORM, V15, P3680, DOI 10.1109/TII.2019.2903342
   Junqueira FP, 2011, I C DEPEND SYS NETWO, P245, DOI 10.1109/DSN.2011.5958223
   Kiayias A, 2017, LECT NOTES COMPUT SC, V10401, P357, DOI 10.1007/978-3-319-63688-7_12
   King S., 2012, Self-Published Paper
   Lamport L, 1998, ACM T COMPUT SYST, V16, P133, DOI 10.1145/279227.279229
   Li K.W., 2011, THESIS S CHINA U TEC
   [刘峰 Liu Feng], 2021, [信息网络安全, Netinfo Security], P19
   [刘峰 Liu Feng], 2021, [计算机研究与发展, Journal of Computer Research and Development], V58, P281
   Liu J., 2018, BPDS BLOCKCHAIN BASE, V1-6
   Lu YL, 2020, IEEE T IND INFORM, V16, P4177, DOI 10.1109/TII.2019.2942190
   Ma JH, 2020, IEEE T EMERG TOP COM, V8, P291, DOI 10.1109/TETC.2017.2754646
   Nakahara Shinichi, 2019, European Journal of Taxonomy, P1, DOI 10.5852/ejt.2019.551
   Newsome J, 2004, IPSN '04: THIRD INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING IN SENSOR NETWORKS, P259
   ONGARO D, 2014, P USENIX ANN TECHN C
   Popov S, 2018, White Paper, V1
   Rabah K., 2017, MARA RES J MED HLTH, V1, P45
   Rajput AR, 2021, HEALTHCARE-BASEL, V9, DOI 10.3390/healthcare9020206
   Ritzdorf H., 2017, CRYPTOL EPRINT ARCH
   Rivero-García A, 2021, SOFTWARE PRACT EXPER, V51, P2000, DOI 10.1002/spe.2779
   Shi PC, 2021, SOFTWARE PRACT EXPER, V51, P2051, DOI 10.1002/spe.2739
   Tama BA, 2017, 2017 INTERNATIONAL CONFERENCE ON ELECTRICAL ENGINEERING AND COMPUTER SCIENCE (ICECOS), P109, DOI 10.1109/ICECOS.2017.8167115
   Tanwar S, 2020, J INF SECUR APPL, V50, DOI 10.1016/j.jisa.2019.102407
   Wang M, 2020, INT J COMPUT SCI ENG, V21, P49, DOI 10.1504/IJCSE.2020.105212
   Wu JH, 2018, NAT COMMUN, V9, DOI 10.1038/s41467-018-02917-6
   Wu KD, 2021, SOFTWARE PRACT EXPER, V51, P2033, DOI 10.1002/spe.2751
   Xia Q, 2017, INFORMATION, V8, DOI 10.3390/info8020044
NR 43
TC 4
Z9 4
U1 3
U2 47
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2022
VL 52
IS 9
BP 2026
EP 2044
DI 10.1002/spe.3114
EA JUN 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3T7YW
UT WOS:000811427600001
DA 2024-07-18
ER

PT J
AU Zhang, SY
   Wen, L
   Anwer, S
   Liu, BX
AF Zhang, Shaoyang
   Wen, Lian
   Anwer, Sajid
   Liu, Baoxing
TI Using composition trees to matching software requirements-An external
   agency's approach to support software acquisition
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE behaviour engineering; composition tree; external agency; requirement
   engineering; software acquisition; virtual brokerage
ID FRAMEWORK; BUY
AB To improve their competitiveness, companies should acquire the latest software systems. However, many small or medium-sized companies might not be able to afford a proper software acquisition process without the resource and technical support essential for acquiring the right software system. This article proposes a meta-process, software acquisition with an external agent (SAEA), that includes a new industry role, external agent, to substitute for that support. SAEA will significantly reduce the cost of the software acquisition process. For implementing SAEA, the authors also introduce composition trees as a modelling language to collect, integrate, and compare all software requirements from different stakeholders and to identify issues during the software acquisition process. Finally, a real industry case study, for which this process has been successfully implemented, has been provided to illustrate our approach.
C1 [Zhang, Shaoyang] Changan Univ, Sch Informat Engn, Xian, Peoples R China.
   [Wen, Lian] Griffith Univ, Sch ICT, Inst Integrated & Intelligent Syst 11IS, Brisbane, Qld, Australia.
   [Anwer, Sajid] Griffith Univ, Sch ICT, Brisbane, Qld 4111, Australia.
   [Liu, Baoxing] Xian Xiangnan Wulian Technol Co Ltd, Xian, Peoples R China.
C3 Chang'an University; Griffith University; Griffith University
RP Anwer, S (corresponding author), Griffith Univ, Sch ICT, Brisbane, Qld 4111, Australia.
EM sajid.anwer@griffithuni.edu.au
OI Anwer, Sajid/0000-0002-7049-3870
CR Adewumi A, 2019, SOFTWARE PRACT EXPER, V49, P780, DOI 10.1002/spe.2682
   Ahmed Kushal, 2013, International Journal of Soft Computing and Software Engineering, V3, P187, DOI 10.7321/jscse.v3.n3.29
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   [Anonymous], S FACING ALLIANCE
   [Anonymous], 2012, P 14 IFAC S INF CONT
   [Anonymous], 2013, SOFTWARE REQUIREMENT
   Anwer S., 2018, COMMUN COMPUT PHYS, V918, P185
   BERENBACH B, 2009, SOFTWARE SYSTEMS REQ
   Boden A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P8, DOI 10.1109/CHASE.2009.5071402
   Borg M, 2019, INFORM SOFTWARE TECH, V112, P18, DOI 10.1016/j.infsof.2019.03.015
   Cheah W., 2017, INT J INTERACT MOB T, V11, P17
   Choi SJ, 2001, J SYST SOFTWARE, V59, P343, DOI 10.1016/S0164-1212(01)00102-9
   Daneshgar F, 2013, INFORM SOFTWARE TECH, V55, P1741, DOI 10.1016/j.infsof.2013.03.009
   Deliallisi B., 2015, SOFTWARE ACQUISITION
   Dromey R. G., 2001, PROC IEEE WORK C COM, P251
   Ercolani, P INT C CLOUD COMP G
   Finkelstein A., 2004, J INF TECHNOL-UK, V6, P54
   Glass RL, 2004, COMMUN ACM, V47, P23, DOI 10.1145/1029496.1029514
   Godse M, 2009, IEEE INT CONF CLOUD, P155, DOI 10.1109/CLOUD.2009.74
   Gomez O., 2016, P IINT C HUM COMP IN, P23
   Grunske L, 2011, SOFTWARE PRACT EXPER, V41, P1233, DOI 10.1002/spe.1039
   Haimes YY., 1997, ACQUISITION REV Q, P55
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   Harnisch S, 2014, P ANN HICSS, P4690, DOI 10.1109/HICSS.2014.574
   Heaven W., 2004, IEE Proceedings-Software, V151, P10, DOI 10.1049/ip-sen:20040297
   IEEE, 2019, 410622019 ISOIECIEEE
   Jones C., 1998, APPL SOFTWARE MEASUR
   Kandjani H, 2014, CONCURRENT ENG-RES A, V22, P320, DOI 10.1177/1063293X14550105
   Kuorelahti, 2018, THESIS
   Kusumo DS., 2011, AUSTR C INF SYST
   Kusumo DS., 2012, P 16 INT C EVAL ASS
   Liu H., 2021, SOFTWARE PRACT EXPER, V52, P1
   Luo Xin-xing, 2010, Application Research of Computers, V27, P3617, DOI 10.3969/j.issn.1001-3695.2010.10.004
   Mital M, 2014, COMPUT IND, V65, P821, DOI 10.1016/j.compind.2014.03.002
   Novak, 2005, SOFTWARE ACQUISITION
   Palanisamy R, 2010, J ENTERP INF MANAG, V23, P610, DOI 10.1108/17410391011083065
   Paredes, 2020, THESIS
   Raghavan S, 2002, NAV RES LOG, V49, P574, DOI 10.1002/nav.10031
   Raghavan RS, 2020, J BUS IND MARK, V35, P757, DOI 10.1108/JBIM-12-2018-0382
   Rahardjo E., INFORM SYSTEM ANAL I
   Rouhani S, 2017, INTELL AUTOM SOFT CO, V23, P459, DOI 10.1080/10798587.2016.1251017
   Scherrer-Rathje Maike, 2009, PICMET '09 - 2009 Portland International Conference on Management of Engineering & Technology, P271, DOI 10.1109/PICMET.2009.5262237
   SEPMP (Software Engineering Process Management Program), 2010, CMUSEI2010TR032 SEPM
   Shahzad B, 2017, IEEE ACCESS, V5, P24262, DOI 10.1109/ACCESS.2017.2762729
   Silva Glessia, 2016, BAR, Braz. Adm. Rev., V13, P1
   Wen L, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P104, DOI 10.1109/SEFM.2004.1347509
   Wen L., 2012, USING COMPOSITION TR
   Wen L., 2013, P 24 AUSTR C INF SYS
   Wen L., 2012, BEHAV ENG WORLD RESO
   Wen L, 2014, INNOV SYST SOFTW ENG, V10, P181, DOI 10.1007/s11334-014-0230-6
   Wen L, 2011, COMM COM INF SC, V155, P1
   Yang YHE, 2013, IEEE INT CONF HIGH, P156, DOI 10.1109/HPSR.2013.6602306
NR 52
TC 1
Z9 1
U1 1
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2022
VL 52
IS 6
BP 1402
EP 1425
DI 10.1002/spe.3071
EA JAN 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1A1RT
UT WOS:000745859200001
DA 2024-07-18
ER

PT J
AU Zhang, J
   Liu, J
   Zhou, NC
   Tang, J
   He, X
   Chen, JQ
AF Zhang, Jian
   Liu, Jie
   Zhou, Naichun
   Tang, Jing
   He, Xie
   Chen, Jianqiang
TI ParTransgrid: A scalable parallel preprocessing tool for
   unstructured-grid cell-centered computational fluid dynamics
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CFD; CGNS; parallel computing; preprocessing; unstructured grid
ID SCHEME
AB The development of a basic scalable preprocessing tool is the key routine to accelerate the entire computational fluid dynamics (CFD) workflow toward the exascale computing era. In this work, a parallel preprocessing tool, called ParTransgrid, is developed to translate the general grid format like CFD General Notation System into an efficient distributed mesh data format for large-scale parallel computing. Through ParTransgrid, a flexible face-based parallel unstructured mesh data structure designed in Hierarchical Data Format can be obtained to support various cell-centered unstructured CFD solvers. The whole parallel preprocessing operations include parallel grid I/O, parallel mesh partition, and parallel mesh migration, which are linked together to resolve the run-time and memory consumption bottlenecks for increasingly large grid size problems. An inverted index search strategy combined with a multi-master-slave communication paradigm is proposed to improve the pairwise face matching efficiency and reduce the communication overhead when constructing the distributed sparse graph in the phase of parallel mesh partition. And we present a simplified owner update rule to fast the procedure of raw partition boundaries migration and the building of shared faces/nodes communication mapping list between new sub-meshes with an order of magnitude of speed-up. Experiment results reveal that ParTransgrid can be easily scaled to billion-level grid CFD applications, the preparation time for parallel computing with hundreds of thousands of cores is reduced to a few minutes.
C1 [Zhang, Jian; Liu, Jie] Natl Univ Def Technol, Sci & Technol Parallel & Distributed Proc Lab, Changsha, Peoples R China.
   [Zhang, Jian; Zhou, Naichun; Tang, Jing; He, Xie; Chen, Jianqiang] China Aerodynam Res & Dev Ctr, Computat Aerodynam Inst, Mianyang, Sichuan, Peoples R China.
C3 National University of Defense Technology - China
RP Chen, JQ (corresponding author), China Aerodynam Res & Dev Ctr, Computat Aerodynam Inst, Mianyang, Sichuan, Peoples R China.
EM chenjq@cardc.cn
OI Zhang, Jian/0000-0002-7676-7609
FU National Numerical Wind-tunnel (NNW) project of China
FX This work was supported by the National Numerical Wind-tunnel (NNW)
   project of China. And the authors would like to thank Chengdu
   Supercomputing Center Operation & Management Co., Ltd. for providing
   computation resources for large-scale validation tests.
CR [Anonymous], 2009, P 47 AIAA AER SCI M, DOI DOI 10.2514/6.2009-759
   [Anonymous], 2017, HIGH LIFT PRED WORKS
   [Anonymous], MESHSIM
   Benson N., EFFICIENT FLEXIBLE P
   Blazek J., 2015, Computational Fluid Dynamics: Principles and Applications
   Chevalier C, 2008, PARALLEL COMPUT, V34, P318, DOI 10.1016/j.parco.2007.12.001
   Duffy AC, 2012, NASATM2012217770
   Flaherty, 1995, PARALLEL AUTOMATED A
   Gargiulo C, 2013, IEEE INTL CONF IND I, P352, DOI 10.1109/INDIN.2013.6622909
   Hauser, 2005, BENCHMARKING PARALLE
   Ibanez DA, 2016, ACM T MATH SOFTWARE, V42, DOI 10.1145/2814935
   Karypis G, 1998, SIAM J SCI COMPUT, V20, P359, DOI 10.1137/S1064827595287997
   Karypis G, 1999, SIAM REV, V41, P278, DOI 10.1137/S0036144598334138
   Lawlor OS, 2006, ENG COMPUT-GERMANY, V22, P215, DOI 10.1007/s00366-006-0039-5
   Mavriplis DJ, 2007, INT J HIGH PERFORM C, V21, P106, DOI 10.1177/1094342006074872
   Palacios, 2021, SUSTAINABLE HIGH PER
   Slotnick JP, 2014, NASA/CR-2014-218178
   Soner, 2020, PARALLEL MESH GENERA
   Tang J, 2020, GRAPH MODELS, V111, DOI 10.1016/j.gmod.2020.101084
   Thakur R, 2005, INT J HIGH PERFORM C, V19, P49, DOI 10.1177/1094342005051521
   THOMADAKIS P, 2018, AIAA AV FOR 2018 ATL, DOI DOI 10.2514/6.2018-2888
   [王运涛 Wang Yuntao], 2019, [空气动力学学报, Acta Aerodynamica Sinica], V37, P247
   White, 2020, FACE AND CELL AVERAG
NR 23
TC 1
Z9 1
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2023
VL 53
IS 1
SI SI
BP 6
EP 26
DI 10.1002/spe.3042
EA OCT 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7B2CV
UT WOS:000707373000001
DA 2024-07-18
ER

PT J
AU Safaei, M
   Driss, M
   Boulila, W
   Sundararajan, EA
   Safaei, M
AF Safaei, Mahmood
   Driss, Maha
   Boulila, Wadii
   Sundararajan, Elankovan A.
   Safaei, Mitra
TI Global outliers detection in wireless sensor networks: A novel approach
   integrating time-series analysis, entropy, and random forest-based
   classification.
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE anomaly detection; entropy; outlier detection; random forest; time
   series analysis; wireless sensor network
ID DIAGNOSIS
AB Wireless sensor networks (WSNs) have recently attracted greater attention worldwide due to their practicality in monitoring, communicating, and reporting specific physical phenomena. The data collected by WSNs is often inaccurate as a result of unavoidable environmental factors, which may include noise, signal weakness, or intrusion attacks depending on the specific situation. Sending high-noise data has negative effects not just on data accuracy and network reliability, but also regarding the decision-making processes in the base station. Anomaly detection, or outlier detection, is the process of detecting noisy data amidst the contexts thus described. The literature contains relatively few noise detection techniques in the context of WSNs, particularly for outlier-detection algorithms applying time series analysis, which considers the effective neighbors to ensure a global-collaborative detection. Hence, the research presented in this article is intended to design and implement a global outlier-detection approach, which allows us to find and select appropriate neighbors to ensure an adaptive collaborative detection based on time-series analysis and entropy techniques. The proposed approach applies a random forest algorithm for identifying the best results. To measure the effectiveness and efficiency of the proposed approach, a comprehensive and real scenario provided by the Intel Berkeley Research Laboratory has been simulated. Noisy data have been injected into the collected data randomly. The results obtained from the experiment then conducted experimentation demonstrate that our approach can detect anomalies with up to 99% accuracy.
C1 [Safaei, Mahmood] Univ Surrey, 6G Innovat Ctr, Guildford, Surrey, England.
   [Driss, Maha] Prince Sultan Univ, Secur Engn Lab, Riyadh, Saudi Arabia.
   [Driss, Maha; Boulila, Wadii] Univ Manouba, RIADI Lab, Manouba, Tunisia.
   [Boulila, Wadii] Prince Sultan Univ, Robot & Internet Things Lab, Selangor, Saudi Arabia.
   [Sundararajan, Elankovan A.] Univ Kebangsaan Malaysia, Fac Informat Sci & Technol, Ctr Software Technol & Management, Hannover, Malaysia.
   [Safaei, Mitra] Gottfried Wilhelm Leibniz Univ, Fak Elect & Informat, Hannover, Germany.
C3 University of Surrey; Prince Sultan University; Universite de la
   Manouba; Prince Sultan University; Universiti Kebangsaan Malaysia;
   Leibniz University Hannover
RP Boulila, W (corresponding author), Univ Manouba, RIADI Lab, Manouba, Tunisia.
EM wadii.boulila@riadi.rnu.tn
RI Boulila, Wadii/AGY-5718-2022
OI Boulila, Wadii/0000-0003-2133-0757; Driss, Maha/0000-0001-8236-8746
FU Prince Sultan University
FX The authors would like to thank Prince Sultan University for their
   support.
CR Abid A, 2017, WIRELESS PERS COMMUN, V97, P1503, DOI 10.1007/s11277-017-4583-7
   Akyildiz IF, 2002, COMPUT NETW, V38, P393, DOI 10.1016/S1389-1286(01)00302-4
   Almeida FR, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17061317
   Angiulli F, 2020, EXPERT SYST APPL, V147, DOI 10.1016/j.eswa.2020.113215
   [Anonymous], 2005, P 1 ACM INT WORKSHOP
   [Anonymous], 2006, VLDB'06
   [Anonymous], 1980, IDENTIFICATION OUTLI
   Ayadi A, 2017, COMPUT NETW, V129, P319, DOI 10.1016/j.comnet.2017.10.007
   Bhuse V, 2006, J HIGH SPEED NETW, V15, P33
   Boulila W., 2009, World Academy of Science, Engineering and Technology, V9, P222
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breuniq M., ARXIV342009335388, DOI 10.1145/335191.335388
   Carvalho C, 2011, SENSORS-BASEL, V11, P10010, DOI 10.3390/s111110010
   Chebbi I, 2018, 2018 4TH INTERNATIONAL CONFERENCE ON ADVANCED TECHNOLOGIES FOR SIGNAL AND IMAGE PROCESSING (ATSIP)
   Chebbi I, 2016, 2016 2ND INTERNATIONAL CONFERENCE ON ADVANCED TECHNOLOGIES FOR SIGNAL AND IMAGE PROCESSING (ATSIP), P31, DOI 10.1109/ATSIP.2016.7523046
   Chen Jinran, 2006, P WORKSH DEP ISS WIR, P65, DOI [10.1145/1160972.1160985, DOI 10.1145/1160972.1160985]
   Chen QQ, 2005, IEEE T COMPUT, V54, P1182, DOI 10.1109/TC.2005.140
   Ding M, 2005, IEEE INFOCOM SER, P902
   Farouq MW, 2019, IEEE ACCESS, V7, P37141, DOI 10.1109/ACCESS.2019.2898897
   Ghalem SK, 2019, J NETW COMPUT APPL, V127, P9, DOI 10.1016/j.jnca.2018.11.009
   Guenterberg E., 2007, DISTRIBUTED COMPUTIN, DOI 10.1007/978-3-540-73090-3_15
   Gupta M, 2014, IEEE T KNOWL DATA EN, V26, P2250, DOI 10.1109/TKDE.2013.184
   Gupta U, 2021, WIRELESS PERS COMMUN, V116, P443, DOI 10.1007/s11277-020-07722-3
   Han J., 2006, ARXIVARXIV10111669V3, V54, DOI 10.1007/978-3-642-19721-5
   Janakiram D, 2006, 2006 1ST INTERNATIONAL CONFERENCE ON COMMUNICATION SYSTEMS SOFTWARE & MIDDLEWARE, VOLS 1 AND 2, P552
   Jiang LS, 2015, COMPUT ELECTR ENG, V41, P191, DOI 10.1016/j.compeleceng.2014.04.001
   Li Y, 2019, J INTELL FUZZY SYST, V37, P4639, DOI 10.3233/JIFS-179298
   Luo XW, 2006, IEEE T COMPUT, V55, P58, DOI 10.1109/TC.2006.13
   Madden S., 2014, INTEL LAB DATA
   Martincic F., 2006, 2006 International Conference on Systems and Networks Communications (ICSNC'06), P43
   Nisha UB, 2017, INT J FUZZY SYST, V19, P1528, DOI 10.1007/s40815-016-0253-2
   Ord K, 1996, INT J FORECASTING, V12, P175, DOI 10.1016/0169-2070(95)00625-7
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   Qiao Y, 2020, INT J DISTRIB SENS N, V16, DOI 10.1177/1550147720963835
   Rajasegarar S., 2006, P 2006 IEEE SING INT, DOI 10.1109/ICCS.2006.301508
   Rajesh G, 2019, COMPUT NETW, V164, DOI 10.1016/j.comnet.2019.106902
   Safaei M, 2020, SYMMETRY-BASEL, V12, DOI 10.3390/sym12030328
   Safaei M, 2020, SOFTWARE PRACT EXPER, V50, P428, DOI 10.1002/spe.2785
   Saneja B, 2017, INT J COMMUN SYST, V30, DOI 10.1002/dac.3352
   Shahid N, 2015, ARTIF INTELL REV, V43, P515, DOI 10.1007/s10462-013-9395-x
   Sheng B, 2007, MOBIHOC'07: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL SYMPOSIUM ON MOBILE AD HOC NETWORKING AND COMPUTING, P219
   Tan Pang-Ning., 2005, Journal of School Psychology, V19, P51
   Vuran MC, 2004, COMPUT NETW, V45, P245, DOI 10.1016/j.comnet.2004.03.007
   Wang FJ, 2021, WIREL COMMUN MOB COM, V2021, DOI 10.1155/2021/6656498
   Wu WL, 2007, IEEE T KNOWL DATA EN, V19, P1145, DOI [10.1109/TKDE.2007.1062, 10.1109/TKDE.2007.1067]
   Xie M, 2015, IEEE T PARALL DISTR, V26, P574, DOI 10.1109/TPDS.2014.2308198
   Yang P, 2009, J COMPUT, V4, P755
   Yick J, 2008, COMPUT NETW, V52, P2292, DOI 10.1016/j.comnet.2008.04.002
   Zhang Y, 2012, INT J GEOGR INF SCI, V26, P1373, DOI 10.1080/13658816.2012.654493
   Zhang Y, 2013, AD HOC NETW, V11, P1062, DOI 10.1016/j.adhoc.2012.11.001
   Zhang Y, 2010, IEEE COMMUN SURV TUT, V12, P159, DOI 10.1109/SURV.2010.021510.00088
   Zhuang Y., P WORKSH VLDB
NR 52
TC 9
Z9 9
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 277
EP 295
DI 10.1002/spe.3020
EA SEP 2021
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000695808000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tiburski, RT
   Moratelli, CR
   Johann, SF
   de Matos, E
   Hessel, F
AF Tiburski, Ramao T.
   Moratelli, Carlos R.
   Johann, Sergio F.
   de Matos, Everton
   Hessel, Fabiano
TI A lightweight virtualization model to enable edge computing in deeply
   embedded systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deeply embedded systems; edge computing; hypervisor; Internet of Things;
   virtualization
AB Edge computing paradigm enables moving Internet of Things (IoT) applications from the Cloud to the edge of the network. Modern software engineering approaches are adhering to microservices to enable the deployment of such applications on edge devices. Microservices consist of the disaggregation of an application into smaller pieces that operate independently. Recent works have explored microservices packaged into containers and advocate that containers result in a reduced footprint and avoid the unwanted overhead caused by traditional virtualization. However, containers cannot be used in many deeply embedded systems (DES) due to an underlying operating system's (OSs) requirement. DES are edge devices with minimal resources regarding storage, memory, and processing power. Thus, they cannot afford large and sophisticated OSs. This article presents the Hellfire hypervisor, a lightweight virtualization implementation that enables separation and improves security in IoT applications on DES. Our proposal simplifies the traditional hypervisor approach and reaches devices where the existing techniques fail. The results show that the proposed model has a small footprint of 23 KB while keeping a low average virtualization overhead of 0.62% for multiple virtual machines execution.
C1 [Tiburski, Ramao T.; Johann, Sergio F.; Hessel, Fabiano] Pontifical Catholic Univ Rio Grande Sul PUCRS, Polytech Sch, Porto Alegre, RS, Brazil.
   [Tiburski, Ramao T.] Fed Inst Educ Sci & Technol Santa Catarina IFSC, Dept Educ Res & Extens, Florianopolis, SC, Brazil.
   [Moratelli, Carlos R.] Univ Fed Santa Catarina, Dept Control Automat & Comp, Florianopolis, SC, Brazil.
   [de Matos, Everton] Technol Innovat Inst, Secure Syst Res Ctr, Abu Dhabi, U Arab Emirates.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul; Instituto Federal
   de Santa Catarina (IFSC); Universidade Federal de Santa Catarina (UFSC);
   Technology Innovation Institute
RP Tiburski, RT (corresponding author), Pontificia Univ Catolica Rio Grande do Sul, Polytech Sch, BR-90619900 Porto Alegre, RS, Brazil.
EM ramao.tiburski@ifsc.edu.br
RI Tiburski, Ramão Tiago/N-5499-2017; de Matos, Everton/N-6497-2017;
   Moratelli, Carlos Roberto/E-8870-2017
OI de Matos, Everton/0000-0001-5888-0969; Moratelli, Carlos
   Roberto/0000-0002-0739-0430
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior [001]
FX Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior, Grant/Award
   Number: Finance Code 001.
CR Ahmed E, 2017, IEEE COMMUN MAG, V55, P138, DOI 10.1109/MCOM.2017.1700120
   Alam M, 2018, IEEE COMMUN MAG, V56, P118, DOI 10.1109/MCOM.2018.1701233
   [Anonymous], 2012, Architecture reference manual. ARMv7-A and ARMv7-R edition, P406
   Barham P., 2003, Operating Systems Review, V37, P164, DOI 10.1145/1165389.945462
   Dall C, 2014, ACM SIGPLAN NOTICES, V49, P333, DOI 10.1145/2541940.2541946
   de Matos E, 2020, COMPUT NETW, V166, DOI 10.1016/j.comnet.2019.106988
   Guthaus MR, 2001, WWC-4: IEEE INTERNATIONAL WORKSHOP ON WORKLOAD CHARACTERIZATION, P3, DOI 10.1109/WWC.2001.990739
   Imagination Technologies Ltd, 2013, VIRT MOD MIPS32 ARCH
   Kivity A., 2007, P LIN S DTTAW DNTOR, V1, P225
   Klein G, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2560537
   Klein G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P207
   Mahmoudi C., 2018, NIST
   Martins J., 2020, OpenAccess Series in Informatics (OASIcs), V77, DOI [10.4230/OASIcs.NG-RES.2020.3, DOI 10.4230/OASICS.NG-RES.2020.3]
   Morabito R, 2018, IEEE NETWORK, V32, P102, DOI 10.1109/MNET.2018.1700175
   Morabito R, 2018, FUTURE GENER COMP SY, V81, P1, DOI 10.1016/j.future.2017.10.011
   Morabito R, 2017, IEEE ACCESS, V5, P8835, DOI 10.1109/ACCESS.2017.2704444
   Moratelli C, 2016, P IEEE RAP SYST PROT, P2, DOI 10.1145/2990299.2990301
   Naha RK, 2018, IEEE ACCESS, V6, P47980, DOI 10.1109/ACCESS.2018.2866491
   Patel A, 2015, 23RD EUROMICRO INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED, AND NETWORK-BASED PROCESSING (PDP 2015), P682, DOI 10.1109/PDP.2015.108
   Pinto S, 2017, IEEE INTERNET COMPUT, V21, P40, DOI 10.1109/MIC.2017.17
   Rueegsegger AK., 2013, MUEN X86 64 SEP KERN
   Russell Rusty, 2008, Operating Systems Review, V42, P95, DOI 10.1145/1400097.1400108
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Silberschatz Abraham., 2002, OPERATING SYSTEM CON, VSixth
   Singh S, 2016, PROCEEDINGS OF THE 2016 2ND INTERNATIONAL CONFERENCE ON APPLIED AND THEORETICAL COMPUTING AND COMMUNICATION TECHNOLOGY (ICATCCT), P804, DOI 10.1109/ICATCCT.2016.7912109
   Sisu Xi, 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P39
   Soltesz S., 2007, Operating Systems Review, V41, P275, DOI 10.1145/1272998.1273025
   Souza A, 2018, IEEE 20TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS / IEEE 16TH INTERNATIONAL CONFERENCE ON SMART CITY / IEEE 4TH INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (HPCC/SMARTCITY/DSS), P758, DOI 10.1109/HPCC/SmartCity/DSS.2018.00129
   Sunyaev A, 2020, Internet Computing: Principles of Distributed Systems and Emerging Internet-Based Technologies, P339
   Taherizadeh S, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18092938
   Tanenbaum A. S., 2011, World Wide Web Internet And Web Information Systems, V5th, DOI [10.1016/j.comnet.2008.04.002, DOI 10.1016/J.COMNET.2008.04.002]
   Tiburski RT, 2021, SOFTWARE PRACT EXPER, V51, P1964, DOI 10.1002/spe.2968
   Tiburski RT, 2019, IEEE COMMUN MAG, V57, P67, DOI 10.1109/MCOM.2018.1701047
   Vayghan LA, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P970, DOI 10.1109/CLOUD.2018.00148
NR 34
TC 6
Z9 6
U1 2
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2021
VL 51
IS 9
SI SI
BP 1964
EP 1981
DI 10.1002/spe.2968
EA MAR 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT9JV
UT WOS:000630217100001
OA Green Published
DA 2024-07-18
ER

PT J
AU Chong, N
   Cook, B
   Eidelman, J
   Kallas, K
   Khazem, K
   Monteiro, FR
   Schwartz-Narbonne, D
   Tasiran, S
   Tautschnig, M
   Tuttle, MR
AF Chong, Nathan
   Cook, Byron
   Eidelman, Jonathan
   Kallas, Konstantinos
   Khazem, Kareem
   Monteiro, Felipe R.
   Schwartz-Narbonne, Daniel
   Tasiran, Serdar
   Tautschnig, Michael
   Tuttle, Mark R.
TI Code-level model checking in the software development workflow at Amazon
   Web Services
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE continuous integration; model checking; memory safety
AB This article describes a style of applying symbolic model checking developed over the course of four years at Amazon Web Services (AWS). Lessons learned are drawn from proving properties of numerous C-based systems, for example, custom hypervisors, encryption code, boot loaders, and an IoT operating system. Using our methodology, we find that we can prove the correctness of industrial low-level C-based systems with reasonable effort and predictability. Furthermore, AWS developers are increasingly writing their own formal specifications. As part of this effort, we have developed a CI system that allows integration of the proofs into standard development workflows and extended the proof tools to provide better feedback to users. All proofs discussed in this article are publicly available on GitHub.
C1 [Chong, Nathan; Cook, Byron; Eidelman, Jonathan; Khazem, Kareem; Monteiro, Felipe R.; Schwartz-Narbonne, Daniel; Tasiran, Serdar; Tautschnig, Michael; Tuttle, Mark R.] Amazon, New York, NY 10001 USA.
   [Cook, Byron] UCL, London, England.
   [Kallas, Konstantinos] Univ Penn, Philadelphia, PA 19104 USA.
   [Tautschnig, Michael] Queen Mary Univ London, London, England.
C3 Amazon.com; University of London; University College London; University
   of Pennsylvania; University of London; Queen Mary University London
RP Schwartz-Narbonne, D (corresponding author), Amazon, New York, NY 10001 USA.
EM dsn@amazon.com
OI Rodrigues Monteiro Sousa, Felipe/0000-0001-9420-9056
FU EPSRC [EP/R006865/1] Funding Source: UKRI
CR Aagaard Mark D., 2000, FORMAL METHODS COMPU, P300
   Anand S., 2018, DANIEL SCHWARTZ NARB
   [Anonymous], 2012, INT C SOFTWARE ENG F
   Athanasiou K, 2018, LECT NOTES COMPUT SC, V11294, P215, DOI 10.1007/978-3-030-03592-1_12
   Backes J., 2018, 2018 FORMAL METHODS, P1, DOI DOI 10.23919/FMCAD.2018.8602994
   Backes J, 2019, LECT NOTES COMPUT SC, V11562, P231, DOI 10.1007/978-3-030-25543-5_14
   Ball T, 2004, LECT NOTES COMPUT SC, V2999, P1
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Beyer D, 2019, LECT NOTES COMPUT SC, V11429, P133, DOI 10.1007/978-3-030-17502-3_9
   Calcagno C, 2015, LECT NOTES COMPUT SC, V9058, P3, DOI 10.1007/978-3-319-17524-9_1
   Calcagno C, 2011, LECT NOTES COMPUT SC, V6617, P459, DOI 10.1007/978-3-642-20398-5_33
   Chong N., 2020, **DATA OBJECT**, DOI [10.5281/zenodo.4090155, DOI 10.5281/ZENODO.4090155]
   Chong N., 2020, ENSURING MEMORY SAFE
   Chong N, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P11, DOI 10.1145/3377813.3381347
   Chong N, 2021, SOFTWARE PRACT EXPER, V51, P772, DOI 10.1002/spe.2949
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Chudnov A, 2018, LECT NOTES COMPUT SC, V10982, P430, DOI 10.1007/978-3-319-96142-2_26
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke E.M., 2018, Handbook of Model Checking, DOI [DOI 10.1007/978-3-319-10575-8_1, 10.1007/978-3-319-10575-8_1]
   Cook B., 2017, P 2017 FORM METH COM, V7, DOI [10.23919/FMCAD.2017.8102231, DOI 10.23919/FMCAD.2017.8102231]
   Cook B, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P9, DOI 10.1145/3092282.3092315
   Cook B, 2018, LECT NOTES COMPUT SC, V10982, P467, DOI 10.1007/978-3-319-96142-2_28
   Cook B, 2018, LECT NOTES COMPUT SC, V10981, P38, DOI 10.1007/978-3-319-96145-3_3
   Cordeiro Lucas, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P160, DOI 10.1109/ECBS.2010.24
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   Distefano D, 2019, COMMUN ACM, V62, P62, DOI 10.1145/3338112
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Fonseca P, 2017, PROCEEDINGS OF THE TWELFTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS 2017), P328, DOI 10.1145/3064176.3064163
   Gadelha MR, 2018, IEEE INT CONF AUTOM, P888, DOI 10.1145/3238147.3240481
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Harrison J., 1998, Types for Proofs and Programs. International Workshop TYPES'96. Selected Papers, P154
   Hathhorn C, 2019, IEEE SOFTWARE, V36, P24, DOI 10.1109/MS.2019.2921226
   Hawblitzel C, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P1, DOI 10.1145/2815400.2815428
   Klein G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P207
   Krishnamurthi Shriram, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P3, DOI 10.1007/978-3-030-30942-8_1
   Miller Matt, 2019, Trends and challenges in the vulnerability mitigation landscape
   Moy Y, 2013, IEEE SOFTWARE, V30, P50, DOI 10.1109/MS.2013.43
   O'Hearn P, 2018, LICS'18: PROCEEDINGS OF THE 33RD ANNUAL ACM/IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P13, DOI 10.1145/3209108.3209109
   Post H, 2007, LECT NOTES COMPUT SC, V4591, P518
   Rakamaric Z, 2014, LECT NOTES COMPUT SC, V8559, P106, DOI 10.1007/978-3-319-08867-9_7
   Robertson C, 2016, USING SAL ANNOTATION
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Szekeres L, 2013, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2013.13
   The MITRE Corporation, 2019, EN COMM WEAK CWE TOP
   Tillmann Nikolai., 2005, SIGSOFT Softw. Eng. Notes, V30, P253
   van der Veen Victor, 2012, Research in Attacks, Intrusions, and Defenses. Proceedings of the 15th International Symposium, RAID 2012, P86, DOI 10.1007/978-3-642-33338-5_5
   Vogels F, 2015, LOG METH COMPUT SCI, V11, DOI 10.2168/LMCS-11(3:19)2015
NR 49
TC 10
Z9 11
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2021
VL 51
IS 4
SI SI
BP 772
EP 797
DI 10.1002/spe.2949
EA JAN 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR8DY
UT WOS:000609024500001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Delisle, T
   Buhr, PA
AF Delisle, Thierry
   Buhr, Peter A.
TI Advanced control-flow and concurrency in C∀
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C; C&#8704; (Cforall); coroutine; concurrency; generator; monitor;
   parallelism; runtime; thread
ID LANGUAGE; SYSTEM; C++
AB C for all is a polymorphic, nonobject-oriented, concurrent, backwards compatible extension of the C programming language. This paper discusses the design philosophy and implementation of its advanced control-flow and concurrent/parallel features, along with the supporting runtime written in C for all. These features are created from scratch as ISO C has only low-level and/or unimplemented concurrency, so C programmers continue to rely on library approaches like pthreads. C for all introduces modern language-level control-flow mechanisms, like generators, coroutines, user-level threading, and monitors for mutual exclusion and synchronization. The runtime provides significant programmer simplification and safety by eliminating spurious wakeup and monitor barging. The runtime also ensures multiple monitors can be safely acquired in a deadlock-free way, and this feature is fully integrated with all monitor synchronization mechanisms. All control-flow features integrate with the C for all polymorphic type-system and exception handling, while respecting the expectations and style of C programmers. Experimental results show comparable performance of the new features with similar mechanisms in other concurrent programming languages.
C1 [Delisle, Thierry; Buhr, Peter A.] Univ Waterloo, Cheriton Sch Comp Sci, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Buhr, PA (corresponding author), Univ Waterloo, Cheriton Sch Comp Sci, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
EM pabuhr@uwaterloo.ca
FU Natural Sciences and Engineering Research Council of Canada
FX Natural Sciences and Engineering Research Council of Canada
CR Adya A, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P289
   Alex Cornejo, 2019, LIBDILL THREAD LIB
   ANDREWS GR, 1989, SCI COMPUT PROGRAM, V13, P1, DOI 10.1016/0167-6423(89)90013-0
   ANDREWS GR, 1988, ACM T PROGR LANG SYS, V10, P51, DOI 10.1145/42192.42324
   [Anonymous], 2010, BANK ACCOUNT TRANSFE
   [Anonymous], 2015, 198412015 ISOIEC TS
   [Anonymous], 2015, MESS PASS INT FOR U
   [Anonymous], 2015, RUST PROGRAMMING LAN
   [Anonymous], 2016, SCAL LANG SPEC VERS
   [Anonymous], 2018, CS343
   [Anonymous], 1999, C PROGR LANG ISO IEC
   [Anonymous], 2012, C PROGR LANG ISO IEC
   Birrell A, 1991, SYSTEMS PROGRAMMING
   Boehm HJ, 2012, COMMUN ACM, V55, P48, DOI 10.1145/2076450.2076465
   Boehm Hans-J, 2009, P 1 USENIX C HOT TOP
   Boehm HJ, 2005, ACM SIGPLAN NOTICES, V40, P261, DOI 10.1145/1064978.1065042
   Bright W, 2016, D PROGRAMMING LANGUA
   Brinch HP, 1973, OPERATING SYSTEM PRI
   BUHR PA, 1995, COMMUN ACM, V38, P117
   BUHR PA, 1992, SOFTWARE PRACT EXPER, V22, P137, DOI 10.1002/spe.4380220204
   BUHR PA, 1990, SOFTWARE PRACT EXPER, V20, P929, DOI 10.1002/spe.4380200906
   Buhr PA, 2005, CONCURR COMP-PRACT E, V17, P1133, DOI 10.1002/cpe.885
   Buhr PA, 2000, ACM SIGPLAN NOTICES, V35, P29, DOI 10.1145/354222.353174
   BUHR PA, 1995, ACM COMPUT SURV, V27, P63, DOI 10.1145/214037.214100
   Buhr PA, 2016, UNDERSTANDING CONTRO
   Buhr Peter A, 2018, C ANNOTATED REFERENC
   Butenhof David R., 1997, Programming with POSIX threads
   Campbell RH, 1974, LECT NOTES COMPUTER, V16
   Cascaval Calin, 2008, QUEUE, V6, P40
   CHERITON DR, 1988, COMMUN ACM, V31, P314, DOI 10.1145/42392.42400
   Cheriton DR, 1982, THOTH SYSTEM MULTIPR
   CONWAY ME, 1963, COMMUN ACM, V6, P396, DOI 10.1145/366663.366704
   COURTOIS PJ, 1971, COMMUN ACM, V14, P667, DOI 10.1145/362759.362813
   cppreference.com, 2019, COR C 20
   Dahl O-J., 1970, SIMULA67 COMMON BASE
   Dice D, 2010, SPAA '10: PROCEEDINGS OF THE TWENTY-SECOND ANNUAL SYMPOSIUM ON PARALLELISM IN ALGORITHMS AND ARCHITECTURES, P325
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P341, DOI 10.1145/363095.363143
   Dijkstra EW, 1965, COOPERATING SEQUENTI, P43
   Drepper U., 2003, The Native POSIX Thread Library for Linux
   Duan YC, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P621, DOI 10.1109/CLOUD.2015.88
   ECAM International, 2015, ECMASCRIPT 2015 LANG
   ECMA International Standardizing Information and Communication Systems, 2006, C LANGUAGE SPECIFICA, P334
   Erlang AB., 2016, ERLANG OTP SYSTEM DO
   Gabriel Antoniu, 2011, MARCEL THREAD LIB
   gcc Extension, LAB VAL
   GEHANI NH, 1988, SOFTWARE PRACT EXPER, V18, P1157, DOI 10.1002/spe.4380181205
   GENTLEMAN WM, 1981, SOFTWARE PRACT EXPER, V11, P435, DOI 10.1002/spe.4380110504
   Gentleman WM, 1985, USING HARMONY OPERAT, V24685
   Genuys F., 1968, PROGRAMMING LANGUAGE
   Gosling J., 1989, NEWS BOOK
   Gosling J., 2000, The Java Language Specification
   Griesemer Robert., 2009, The Go programming language
   HALSTEAD RH, 1985, ACM T PROGR LANG SYS, V7, P501, DOI 10.1145/4472.4478
   Hansen P. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P199, DOI 10.1109/TSE.1975.6312840
   Herlihy M., 1993, INT S COMPUTER ARCHI, DOI DOI 10.1145/165123.165164
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   HOARE CAR, 1974, COMMUN ACM, V17, P549, DOI 10.1145/355620.361161
   Hochstein L., 2005, SC 05, P35
   HOLT RC, 1988, COMMUN ACM, V31, P1410, DOI 10.1145/53580.53581
   HUDAK P, 1992, SIGPLAN NOTICES, V27, pT1
   Joung YJ, 2000, DISTRIB COMPUT, V13, P189, DOI 10.1007/PL00008918
   Knuth Donald E, 1973, FUNDAMENTAL ALGORITH, V1
   Lightbend I, 2016, AKKA SCALA DOCUMENTA
   LISKOV B, 1988, SIGPLAN NOTICES, V23, P260
   Liskov B., 1981, Lecture Notes in Computer Science, V114
   Lister A., 1977, Operating Systems Review, V11, P5, DOI 10.1145/850644.850645
   Lua, 2018, LUA 5 3 REF MAN
   Marlin CD, 1980, COROUTINES PROGRAMMI, V95
   Mitchell JG, 1979, CSL793 XER PAL ALT R
   Moss A, 2018, SOFTWARE PRACT EXPER, V48, P2111, DOI 10.1002/spe.2624
   Multithreading models, 2010, MULTITHREADING MODEL
   Nakaike T, 2015, 2015 ACM/IEEE 42ND ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA), P144, DOI 10.1145/2749469.2750403
   Nishanov G., 2019, MERGE COROUTINES TS
   Objective-C, 2014, OBJECTIVE C
   Perache M, 2008, LECT NOTES COMPUTER, V5168, P329
   Python, 2018, PYTH LANG REF REL 3
   Quasar, 2018, QUAS DOC REL 0 8 0
   RAJ RK, 1991, SOFTWARE PRACT EXPER, V21, P91, DOI 10.1002/spe.4380210107
   Ruby, 2018, RUB DOC REL 2 6 0 PY
   Strom RE, 1990, HERMES LANGUAGE DIST, P10598
   Swift MM, 2005, ACM T COMPUT SYST, V23, P77, DOI 10.1145/1047915.1047919
   The Open Group, 2018, 100312017 IEEE OP GR
   Vech S, 2012, PERFORMANCE ANAL 64
   von Behren R., 2003, HOTOS'03: Proceedings of the 9th conference on Hot Topics in Operating Systems, P4
   Wheeler KB, 2008, P INT S PAR DISTR PR
   Wirth N, 1988, TEXTS MONOGRAPHS COM
   Xiao GP, 2019, IEEE T RELIAB, V68, P1356, DOI 10.1109/TR.2019.2916204
   Zhang Y, 2019, P ACM PROGRAM LANG, V3, P5
NR 88
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 1005
EP 1042
DI 10.1002/spe.2925
EA DEC 2020
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000594691100001
DA 2024-07-18
ER

PT J
AU Lu, QH
   Tran, AB
   Weber, I
   O'Connor, H
   Rimba, P
   Xu, XW
   Staples, M
   Zhu, LM
   Jeffery, R
AF Lu, Qinghua
   Binh Tran, An
   Weber, Ingo
   O'Connor, Hugo
   Rimba, Paul
   Xu, Xiwei
   Staples, Mark
   Zhu, Liming
   Jeffery, Ross
TI Integrated model-driven engineering of blockchain applications for
   business processes and asset management
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE asset; blockchain; business process; model&#8208; driven engineering;
   registry; smart contract
AB Blockchain has attracted broad interests to build decentralised applications. A typical class of applications uses blockchain for the management of cross-organisational business processes as well as assets. However, developing such applications without introducing vulnerabilities is hard for developers, not the least because the deployed code is immutable and can be called by anyone with access to the network. Model-driven engineering (MDE) helps to reduce those risks, by combining proven code snippets as per the model specification, which is easier to understand than source code. Therefore, in this article, we present an approach for integrated MDE across business processes and asset management (e.g., for settlement). Our approach includes methods for fungible/non-fungible asset registration, escrow for conditional payment, and asset swap. The proposed MDE approach is implemented in a smart contract generation tool called Lorikeet, and evaluated in terms of feasibility, functional correctness, and cost effectiveness.
C1 [Lu, Qinghua; O'Connor, Hugo; Xu, Xiwei; Staples, Mark; Zhu, Liming; Jeffery, Ross] CSIRO, Data61, Sydney, NSW, Australia.
   [Binh Tran, An; Rimba, Paul] Deputy, Sydney, NSW, Australia.
   [Weber, Ingo] Tech Univ Berlin, Berlin, Germany.
C3 Commonwealth Scientific & Industrial Research Organisation (CSIRO);
   Technical University of Berlin
RP Lu, QH (corresponding author), CSIRO, Data61, Sydney, NSW, Australia.
EM qinghua.lu@data61.csiro.au
RI Xu, Xiwei/AAD-6098-2020; Zhu, Li/GXH-9801-2022; Lu,
   Qinghua/AAG-3378-2021; Weber, Ingo/C-9166-2011
OI Weber, Ingo/0000-0002-4833-5921; Zhu, Liming/0000-0001-5839-3765; XU,
   XIWEI/0000-0002-2273-1862; Lu, Qinghua/0000-0002-7783-5183; Lu,
   Qinghua/0000-0002-9466-1672
CR Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   [Anonymous], 2017, CAISEFORUM 600
   Bratanova A., 2019, BLOCKCHAIN 2030 LOOK
   Carminati B, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P137, DOI 10.1109/ICWS.2014.31
   Chen S, 2017, 49412017 SNT GEN ADM
   Di Ciccio C., 2019, InformatikSpektrum, V42, P182, DOI DOI 10.1007/S00287-019-01178-X
   Downey P., 2016, CHARACTERISTICS REGI
   Evans E., 2003, Domain-Driven Design
   Fowler M., 2010, Domain-specific languages
   García-Bañuelos L, 2017, LECT NOTES COMPUT SC, V10445, P130, DOI 10.1007/978-3-319-65000-5_8
   Gottesdiener E., 2012, DISCOVER DELIVER AGI
   Li GL, 2010, ACM T WEB, V4, DOI 10.1145/1658373.1658375
   Lopez-Pintado O., 2017, BPM (Demos), V172, P1
   López-Pintado O, 2019, IEEE INT ENTERP DIST, P206, DOI 10.1109/EDOC.2019.00033
   Lu Q, 2018, IEEE VTS VEH TECHNOL
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mont MC, 2001, EIGHTH IEEE WORKSHOP ON FUTURE TRENDS OF DISTRIBUTED COMPUTING SYSTEMS, PROCEEDINGS, P89, DOI 10.1109/FTDCS.2001.969627
   Nakamoto S, 2008, BITCOIN PEER TO PEER, DOI DOI 10.1007/S10838-008-9062-0
   Nakamura H, 2018, LECT NOTES COMPUT SC, V11233, P3, DOI 10.1007/978-3-030-02922-7_1
   Omohundro Steve., 2014, AI MATTERS, V1, P19, DOI [10.1145/2685328.2685334, DOI 10.1145/2685328.2685334]
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Squicciarini Anna, 2008, 2008 IEEE 24th International Conference on Data Engineering Workshop (ICDE Workshop), P454, DOI 10.1109/ICDEW.2008.4498360
   Staples M, 2017, Data61, DOI DOI 10.4225/08/596E5AB7917BC
   Subramanian Sattanathan, 2008, 2008 International Symposium on Applications and the Internet, P33, DOI 10.1109/SAINT.2008.12
   Tran AB, 2018, LORIKEET MODEL DRIVE
   Tschorsch F, 2016, IEEE COMMUN SURV TUT, V18, P2084, DOI 10.1109/COMST.2016.2535718
   van der Aalst WMP, 2008, ACM T INTERNET TECHN, V8, DOI 10.1145/1361186.1361189
   Viriyasitavat W, 2011, COMM COM INF SC, V251, P492
   Weber I, 2016, USING BLOCKCHAIN ENA
   Weber I, 2016, LECT NOTES COMPUT SC, V9850, P329, DOI 10.1007/978-3-319-45348-4_19
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 33
TC 36
Z9 37
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 1059
EP 1079
DI 10.1002/spe.2931
EA NOV 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000587512600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kallel, A
   Rekik, M
   Khemakhem, M
AF Kallel, Ameni
   Rekik, Molka
   Khemakhem, Mahdi
TI IoT-fog-cloud based architecture for smart systems: Prototypes of autism
   and COVID-19 monitoring systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business process modeling; cloud computing; fog computing; hybrid fog;
   cloud federation; IoT; smart autistic child monitoring system; smart
   COVID-19 disease monitoring system
ID BUSINESS; HEALTH
AB Making resources closer to the user might facilitate the integration of new technologies such as edge, fog, cloud computing, and big data. However, this brings many challenges shall be overridden when distributing a real-time stream processing, executing multiapplication in a safe multitenant environment, and orchestrating and managing the services and resources into a hybrid fog/cloud federation. In this article, first, we propose a business process model and notation (BPMN) extension to enable the Internet of Things (IoT)-aware business process (BP) modeling. The proposed extension takes into consideration the heterogeneous IoT and non-IoT resources, resource capacities, quality of service constraints, and so forth. Second, we present a new IoT-fog-cloud based architecture, which (i) supports the distributed inter and intralayer communication as well as the real-time stream processing in order to treat immediately IoT data and improve the entire system reliability, (ii) enables the multiapplication execution within a multitenancy architecture using the single sign-on technique to guarantee the data integrity within a multitenancy environment, and (iii) relies on the orchestration and federation management services for deploying BP into the appropriate fog and/or cloud resources. Third, we model, by using the proposed BPMN 2.0 extension, smart autistic child and coronavirus disease 2019 monitoring systems. Then we propose the prototypes for these two smart systems in order to carry out a set of extensive experiments illustrating the efficiency and effectiveness of our work.
C1 [Kallel, Ameni; Khemakhem, Mahdi] Univ Sfax, Ecole Natl Elect & Telcommun, Lab OLID, LR19ES21, Sfax, Tunisia.
   [Kallel, Ameni] Inst Sup Etud Technol ISET Sidi Bouzid, Dept Technol Informat, Sidi Bouzid, Tunisia.
   [Rekik, Molka; Khemakhem, Mahdi] Prince Sattam Bin Abdulaziz Univ, Coll Comp Engn & Sci, Alkharj 11942, Saudi Arabia.
   [Rekik, Molka] Univ Sfax, Multimedia InfoRmat Syst & Adv Comp Lab, Sfax, Tunisia.
C3 Universite de Sfax; Prince Sattam Bin Abdulaziz University; Universite
   de Sfax; Multimedia, InfoRmation Systems & Advancing Computing
   Laboratory (MIRACL)
RP Rekik, M (corresponding author), Prince Sattam Bin Abdulaziz Univ, Coll Comp Engn & Sci, Alkharj 11942, Saudi Arabia.
EM molka.rekik@gmail.com
RI Rekik, Molka/AAR-4563-2021; Khemakhem, Mahdi/C-7227-2018
OI Rekik, Molka/0000-0002-8639-4922; Khemakhem, Mahdi/0000-0001-5603-1947
CR [Anonymous], 2016, IEEE INT WORKS LOCAL
   [Anonymous], 2013, BUS PROC MOD NOT BPM
   Brouns N, 2018, ARXIV181100652
   Chen YT, 2017, DESTECH TRANS ECON, P179
   Chii Chang, 2017, ACM Computing Surveys, V49, DOI 10.1145/3012000
   Debauche O, 2019, PROCEDIA COMPUT SCI, V160, P289, DOI 10.1016/j.procs.2019.11.087
   Di Modica G, 2019, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON THE INTERNET OF THINGS ( IOT 2019), DOI 10.1145/3365871.3365882
   Fadila L, 2018, P 8 INT S DAT DRIV P, P18
   Gao F, 2011, IEEE ENABL TECHNOL, P297, DOI 10.1109/WETICE.2011.50
   Gill SS, 2019, LECT NOTE DATA ENG, V26, P1376, DOI 10.1007/978-3-030-03146-6_161
   Graja I, 2016, 2016 IEEE 25TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P152, DOI 10.1109/WETICE.2016.41
   Hachicha E, 2015, INT CON ADV INFO NET, P761, DOI 10.1109/AINA.2015.265
   Kapsalis A, 2017, IEEE CLOUD COMPUT, V4, P36, DOI 10.1109/MCC.2017.25
   Luthra M., 2019, Proceedings of the 2nd International Workshop on Distributed Fog Services Design, P7
   Mahmud R, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3186592
   Meyer Sonja, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P84, DOI 10.1007/978-3-642-38709-8_6
   Meyer S., 2011, 2011 IEEE 8th International Conference on Mobile Ad-Hoc and Sensor Systems, P843, DOI 10.1109/MASS.2011.98
   Moreno-Vozmediano R, 2017, IEEE CLOUD COMPUT, V4, P46, DOI 10.1109/MCC.2017.28
   Omar A, 2019, 2019 3RD INTERNATIONAL CONFERENCE ON APPLIED AUTOMATION AND INDUSTRIAL DIAGNOSTICS (ICAAID 2019), DOI 10.1109/icaaid.2019.8934949
   Otoom M, 2020, BIOMED SIGNAL PROCES, V62, DOI 10.1016/j.bspc.2020.102149
   Petrasch R., 2015, P 2 MAN INN TECHN IN, P168
   Petrasch R, 2016, INT JOINT CONF COMP, P275
   Pramanik PKD., 2018, APPL SECURITY MOBILE, P124, DOI DOI 10.4018/978-1-5225-4044-1.CH007
   Ratnayake KP., 2018, THESIS
   Recker J, 2009, J ASSOC INF SYST, V10, P333, DOI 10.17705/1jais.00193
   Rekik M, 2016, P IEEE I C SERV COMP, P179, DOI 10.1109/SCC.2016.30
   Ruppen A, 2013, LECT NOTES BUS INF P, V153, P42
   Sherlekar R, 2019, PROCEDIA MANUF, V34, P893, DOI 10.1016/j.promfg.2019.06.158
   Sperner K, 2011, LECT NOTES BUS INF P, V95, P166
   Stantchev V., 2015, SENSORS TRANSDUCERS, V185, P121
   Stroppi L.J.R., 2012, CIBSE, P56
   Sungur C. Timurhan, 2013, 2013 IEEE 15th Conference on Business Informatics (CBI), P109, DOI 10.1109/CBI.2013.24
   Suri K, 2017, 2017 IEEE 26TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES - INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P214, DOI 10.1109/WETICE.2017.54
   Tellez N, 2019, SEC'19: PROCEEDINGS OF THE 4TH ACM/IEEE SYMPOSIUM ON EDGE COMPUTING, P301, DOI 10.1145/3318216.3363323
   Tranquillini S, 2012, LECT NOTES COMPUT SC, V7481, P134, DOI 10.1007/978-3-642-32885-5_10
   Gia TN, 2017, INT WIREL COMMUN, P1765, DOI 10.1109/IWCMC.2017.7986551
   Gia TN, 2015, CIT/IUCC/DASC/PICOM 2015 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY - UBIQUITOUS COMPUTING AND COMMUNICATIONS - DEPENDABLE, AUTONOMIC AND SECURE COMPUTING - PERVASIVE INTELLIGENCE AND COMPUTING, P356, DOI 10.1109/CIT/IUCC/DASC/PICOM.2015.51
   Tuli S, 2020, FUTURE GENER COMP SY, V104, P187, DOI 10.1016/j.future.2019.10.043
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
   van Rensburg SJ, 2015, LECT N MECH ENG, P285, DOI 10.1007/978-3-319-15536-4_24
   Verba N, 2017, ADV ENG INFORM, V33, P243, DOI 10.1016/j.aei.2016.11.003
   Webster J, 2002, MIS QUART, V26, pXIII
   Whaiduzzaman M., 2020, ARXIV200613364
   Yousfi A, 2016, INFORM SOFTWARE TECH, V74, P55, DOI 10.1016/j.infsof.2016.02.002
NR 44
TC 27
Z9 27
U1 0
U2 26
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2021
VL 51
IS 1
SI SI
BP 91
EP 116
DI 10.1002/spe.2924
EA NOV 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA PH6SW
UT WOS:000583808700001
DA 2024-07-18
ER

PT J
AU Ahmed, GE
   Gil-Castineira, F
   Costa-Montenegro, E
AF Ahmed, Ghofrane El Haj
   Gil-Castineira, Felipe
   Costa-Montenegro, Enrique
TI KubCG: A dynamic Kubernetes scheduler for heterogeneous clusters
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; CPU; Docker; GPU; Kubernetes
ID TIME
AB Container platforms are increasingly being used to deploy cloud-based services. Nevertheless, many cloud services are also demanding graphics processing units (GPUs) to accelerate different applications that make use of their parallel architecture, such as deep learning or just video processing. Thus, different container technologies, such as Docker and Kubernetes, are implementing GPU support. Some effort is being devoted to design algorithms to schedule applications into heterogeneous computing systems that use CPUs and GPUs together. This article is part of this effort, and we describe how to build a dynamic scheduling platform for Kubernetes that is able to manage the deployment of Docker containers in a heterogeneous cluster, which we call KubCG. This platform implements a new scheduler that optimizes the deployment of new containers by taking into account the Kubernetes Pod timeline and the historical information about the execution of the containers. We have performed different tests to validate this new algorithm, and KubCG was able to reduce the time to complete different tasks down to a 64% of the original time in our different experiments.
C1 [Ahmed, Ghofrane El Haj; Gil-Castineira, Felipe; Costa-Montenegro, Enrique] Univ Vigo, AtlanTTic Res Ctr Telecommun Technol, Vigo, Spain.
C3 Universidade de Vigo; atlanTTic
RP Gil-Castineira, F (corresponding author), Univ Vigo, AtlanTTic Res Ctr Telecommun Technol, Vigo, Spain.
EM xil@gti.uvigo.es
RI Gil-Castiñeira, Felipe/ABE-6411-2020; Costa-Montenegro,
   Enrique/ABE-6778-2020
OI Gil-Castiñeira, Felipe/0000-0002-5164-0855; Costa-Montenegro,
   Enrique/0000-0002-4674-1897
FU European Commission under the Erasmus Mundus E-GOV-TN project (E-GOV-TN
   Erasmus Mundus Action 2 Lot 6 Project) [2013-2434]
FX This work was funded by the European Commission under the Erasmus Mundus
   E-GOV-TN project (E-GOV-TN Erasmus Mundus Action 2 Lot 6 Project no.
   2013-2434).
CR Ananthanarayanan G, 2017, COMPUTER, V50, P58, DOI 10.1109/MC.2017.3641638
   Bernstein D, 2014, IEEE CLOUD COMPUT, V1, P81, DOI 10.1109/MCC.2014.51
   Cérin C, 2017, 2017 IEEE 7TH INTERNATIONAL SYMPOSIUM ON CLOUD AND SERVICE COMPUTING (SC2 2017), P112, DOI 10.1109/SC2.2017.24
   Choi HJ, 2013, J SUPERCOMPUT, V65, P886, DOI 10.1007/s11227-013-0870-6
   Civolani L., 2019, P IEEE ACM INT C UT, P51
   Diab Khaled M., 2013, 2013 IEEE International Symposium on Parallel and Distributed Processing, Workshops and PhD Forum (IPDPSW), P947, DOI 10.1109/IPDPSW.2013.102
   Duato Jose, 2010, 2010 International Conference on High Performance Computing & Simulation (HPCS 2010), P224, DOI 10.1109/HPCS.2010.5547126
   Felter W, 2015, INT SYM PERFORM ANAL, P171, DOI 10.1109/ISPASS.2015.7095802
   Gregg C, 2011, P WORKSH APPL MULT M
   Gupta V., 2009, Proc. of the 3rd ACM Workshop on System-level Virtualization for High Performance Computing, P17, DOI DOI 10.1145/1519138.1519141
   Hong CH, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3068281
   Jiménez VJ, 2009, LECT NOTES COMPUT SC, V5409, P19
   Joseph CT, 2019, SOFTWARE PRACT EXPER, V49, P1448, DOI 10.1002/spe.2729
   Kämäräinen T, 2015, ANN WORK NETW
   Mach P, 2017, IEEE COMMUN SURV TUT, V19, P1628, DOI 10.1109/COMST.2017.2682318
   Medel V., 2017, PROC INT C EC GRIDS, P162
   Medel V, 2016, INT CONF UTIL CLOUD, P257, DOI 10.1145/2996890.3007869
   Nvidia, 2019, NVID MULT SERV VR418
   Rafique MM, 2011, IEEE INT C CL COMP, P353, DOI 10.1109/CLUSTER.2011.46
   Rodriguez MA, 2019, SOFTWARE PRACT EXPER, V49, P698, DOI 10.1002/spe.2660
   Sandlin JA, 2010, STUD CURRIC THEORY, P1
   Shi L, 2012, IEEE T COMPUT, V61, P804, DOI 10.1109/TC.2011.112
   Shulga DA, 2016, IEEE NW RUSS YOUNG, P345, DOI 10.1109/EIConRusNW.2016.7448189
   Trejo-Sánchez JA, 2018, INT J COMB OPTIM PRO, V9, P12
   Wen Y, 2014, INT C HIGH PERFORM
   Xingfang Zhao, 2015, Algorithms and Architectures for Parallel Processing. 15th International Conference, ICA3PP 2015. Proceedings: LNCS 9529, P509, DOI 10.1007/978-3-319-27122-4_35
NR 26
TC 10
Z9 11
U1 2
U2 48
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 213
EP 234
DI 10.1002/spe.2898
EA SEP 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000570599700001
DA 2024-07-18
ER

PT J
AU Shahidinejad, A
   Ghobaei-Arani, M
AF Shahidinejad, Ali
   Ghobaei-Arani, Mostafa
TI Joint computation offloading and resource provisioning for
   edge-cloudcomputing environment: A machine learning-based approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE edge computing; learning automata; long short-term memory; offloading;
   reinforcement learning; resource provisioning
ID MANAGEMENT; INTERNET; THINGS; IOT
AB In recent years, the usage of smart mobile applications to facilitate day-to-day activities in various domains for enhancing the quality of human life has increased widely. With rapid developments of smart mobile applications, the edge computing paradigm has emerged as a distributed computing solution to support serving these applications closer to mobile devices. Since the submitted workloads to the smart mobile applications changes over the time, decision making about offloading and edge server provisioning to handle the dynamic workloads of mobile applications is one of the challenging issues into the resource management scope. In this work, we utilized learning automata as a decision-maker to offload the incoming dynamic workloads into the edge or cloud servers. In addition, we propose an edge server provisioning approach using long short-term memory model to estimate the future workload and reinforcement learning technique to make an appropriate scaling decision. The simulation results obtained under real and synthetic workloads demonstrate that the proposed solution increases the CPU utilization and reduces the execution time and energy consumption, compared with the other algorithms.
C1 [Shahidinejad, Ali; Ghobaei-Arani, Mostafa] Islamic Azad Univ, Dept Comp Engn, Qom Branch, Qom, Iran.
C3 Islamic Azad University
RP Shahidinejad, A (corresponding author), Islamic Azad Univ, Dept Comp Engn, Qom Branch, Qom, Iran.
EM a.shahidinejad@qom-iau.ac.ir
RI Shahidinejad, Ali/V-5523-2019; Ghobaei-Arani, Mostafa/K-5058-2015
OI Shahidinejad, Ali/0000-0003-4856-9119; Ghobaei-Arani,
   Mostafa/0000-0003-2639-0900
CR [Anonymous], 2018, ADV CONDENS MATTER P, DOI DOI 10.1109/ISCAS.2018.8351098
   [Anonymous], STEM CELLS INT, DOI DOI 10.1007/s10706-018-0733-2
   Baghban H, 2020, COMPUT COMMUN, V158, P39, DOI 10.1016/j.comcom.2020.04.009
   Botvinick M, 2019, TRENDS COGN SCI, V23, P408, DOI 10.1016/j.tics.2019.02.006
   Buyya Rajkumar, 2009, 2009 International Conference on High Performance Computing & Simulation (HPCS), P1, DOI 10.1109/HPCSIM.2009.5192685
   De Maio V, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P127, DOI 10.1145/3297663.3310301
   Flores H., 2013, MCS '13A Proceeding of the fourth ACM workshop on Mobile cloud computing and services, ACM, Taipei, Taiwan, P9, DOI [10.1145/2482981.2482984, DOI 10.1145/2482981.2482984]
   Frumusanu A., 2018, The Samsung Galaxy S9 and S9+ Review: Exynos and Snapdragon at 960fps
   Ghobaei-Arani M, 2021, J SUPERCOMPUT, V77, P711, DOI 10.1007/s11227-020-03296-w
   Ghobaei-Arani M, 2020, T EMERG TELECOMMUN T, V31, DOI 10.1002/ett.3770
   Ghobaei-Arani M, 2019, J SUPERCOMPUT, V75, P2603, DOI 10.1007/s11227-018-2656-3
   Ghobaei-Arani M, 2018, INT J COMMUN SYST, V31, DOI 10.1002/dac.3537
   Ghobaei-Arani M, 2017, J EXP THEOR ARTIF IN, V29, P1149, DOI 10.1080/0952813X.2017.1310308
   Gill SS, 2019, J SYST SOFTWARE, V155, P104, DOI 10.1016/j.jss.2019.05.025
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hassija V, 2021, SOFTWARE PRACT EXPER, V51, P2428, DOI 10.1002/spe.2786
   Huang L, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19061446
   Hung SH, 2015, SOFTWARE PRACT EXPER, V45, P1087, DOI 10.1002/spe.2265
   Jeong HJ, 2018, PROCEEDINGS OF THE 2018 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '18), P401, DOI 10.1145/3267809.3267828
   Jie Zhang, 2019, Artificial Intelligence for Communications and Networks. First EAI International Conference, AICON 2019. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 287), P438, DOI 10.1007/978-3-030-22971-9_38
   Karimiafshar A, 2020, IEEE INTERNET THINGS, V13, P1
   Li H, 2018, IEEE NETWORK, V32, P96, DOI 10.1109/MNET.2018.1700202
   Liu JH, 2019, IEEE ACCESS, V7, P11222, DOI 10.1109/ACCESS.2019.2891113
   Miettinen A. P., 2010, P 2 USENIX C HOT TOP, V10, P4
   Narendra KS, 2019, P AMER CONTR CONF, P916, DOI 10.23919/acc.2019.8814751
   Rezvanian A, 2019, STUD COMPUT INTELL, V820, P1, DOI 10.1007/978-3-030-10767-3_1
   SHAHIDINEJAD A, 2019, CLUSTER COMPUT, V23, P1
   Shahidinejad A, 2021, CLUSTER COMPUT, V24, P319, DOI 10.1007/s10586-020-03107-0
   Shakarami A, 2020, SOFTWARE PRACT EXPER, V50, P1719, DOI 10.1002/spe.2839
   Sharif A, 2020, IET COMMUN, V14, P2646, DOI 10.1049/iet-com.2020.0080
   Sheng JF, 2019, INFORMATION, V10, DOI 10.3390/info10060191
   Smagulova K, 2019, EUR PHYS J-SPEC TOP, V228, P2313, DOI 10.1140/epjst/e2019-900046-x
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tadakamalla U, 2019, LECT NOTES COMPUT SC, V11520, P1, DOI 10.1007/978-3-030-23374-7_1
   Taherizadeh S, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18092938
   Wang JY, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3284387
   Wang N, 2020, FUTURE GENER COMP SY, V108, P598, DOI 10.1016/j.future.2020.02.043
   Wu S., 2018, 2018 IEEE MTT-S International Wireless Symposium (IWS), P1, DOI [10.1109/EI2.2018.8582548, DOI 10.1109/EI2.2018.8582548]
   Xu J, 2017, IEEE T COGN COMMUN, V3, P361, DOI 10.1109/TCCN.2017.2725277
   Xu X, 2021, SINGAP ECON REV, V66, P323, DOI 10.1142/S021759081943001X
   Yu Z, 2020, IEEE INTERNET THINGS, V7, P3147, DOI 10.1109/JIOT.2020.2965898
   Zhang Q, 2020, IEEE INTERNET THINGS, V7, P3282, DOI 10.1109/JIOT.2020.2967502
   Zhang WY, 2020, IEEE J SEL AREA COMM, V38, P1118, DOI 10.1109/JSAC.2020.2986614
   Zhang YF, 2019, LECT NOTES COMPUT SC, V11764, P360, DOI 10.1007/978-3-030-32239-7_40
NR 44
TC 63
Z9 63
U1 0
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2020
VL 50
IS 12
BP 2212
EP 2230
DI 10.1002/spe.2888
EA SEP 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OO7CG
UT WOS:000565449500001
DA 2024-07-18
ER

PT J
AU Srivastava, A
   Aggarwal, S
   Apon, A
   Duffy, E
   Kennedy, K
   Luckow, A
   Posey, B
   Ziolkowski, M
AF Srivastava, Aishwarya
   Aggarwal, Siddhant
   Apon, Amy
   Duffy, Edward
   Kennedy, Ken
   Luckow, Andre
   Posey, Brandon
   Ziolkowski, Marcin
TI Deployment of a cloud pipeline for real-time visual inspection using
   fast streaming high-definition images
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud; end-to-end pipeline; latency; real-time system; visual inspection
ID FEATURES
AB We investigate the challenges of building an end-to-end cloud pipeline for real-time intelligent visual inspection system for use in automotive manufacturing. Current methods of visual detection in automotive assembly are highly labor intensive, and thus prone to errors. An automated process is sought that can operate within the real-time constraints of the assembly line and can reduce errors. Components of the cloud pipeline include capture of a large set of high-definition images from a camera setup at the assembly location, transfer and storage of the images as needed, execution of object detection, and notification to a human operator when a fault is detected. The end-to-end execution must complete within a fixed time frame before the next car arrives in the assembly line. In this article, we report the design, development, and experimental evaluation of the tradeoffs of performance, accuracy, and scalability for a cloud system.
C1 [Srivastava, Aishwarya; Aggarwal, Siddhant; Apon, Amy; Duffy, Edward; Kennedy, Ken; Luckow, Andre; Posey, Brandon; Ziolkowski, Marcin] Clemson Univ, Sch Comp, Clemson, SC 29634 USA.
C3 Clemson University
RP Srivastava, A (corresponding author), Clemson Univ, Sch Comp, Clemson, SC 29634 USA.
EM aishwas@g.clemson.edu
RI Luckow, Andre/KIB-8352-2024
OI Luckow, Andre/0000-0002-1225-4062
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   [Anonymous], 2018, P 26 AIAI IR C ART I
   [Anonymous], ARXIV19051192
   [Anonymous], 2018, 11 INT C MACHINE VIS
   [Anonymous], P INT C INT FUZZ SYS
   [Anonymous], ARXIV190410489
   [Anonymous], AWS SDK PYTHON BOTO3
   [Anonymous], 2017, Mobilenets: Efficient Convolutional Neural Networks for Mobile Vision Applications
   [Anonymous], AUTOMATIC DIFFERENTI
   Cheng T, 2016, AIDS BEHAV, V20, P377, DOI 10.1007/s10461-015-1101-3
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Dai J, 2016, PROCEEDINGS 2016 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY (ICIT), P1796, DOI 10.1109/ICIT.2016.7475036
   Dalal N, 2005, PROC CVPR IEEE, P886, DOI 10.1109/cvpr.2005.177
   Du YH, 2018, IEEE T INTELL TRANSP, V19, P787, DOI 10.1109/TITS.2017.2701799
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Girshick R, 2015, IEEE I CONF COMP VIS, P1440, DOI 10.1109/ICCV.2015.169
   Girshick R, 2014, PROC CVPR IEEE, P580, DOI 10.1109/CVPR.2014.81
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Huang J, 2017, PROC CVPR IEEE, P3296, DOI 10.1109/CVPR.2017.351
   Ioffe S, 2015, P INT C MACH LEARN, V2015, P1
   Lienhart R, 2002, IEEE IMAGE PROC, P900
   Lin TY, 2014, LECT NOTES COMPUT SC, V8693, P740, DOI 10.1007/978-3-319-10602-1_48
   Liu W, 2016, LECT NOTES COMPUT SC, V9905, P21, DOI 10.1007/978-3-319-46448-0_2
   Lowe DG, 2004, INT J COMPUT VISION, V60, P91, DOI 10.1023/B:VISI.0000029664.99615.94
   Luckow A, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON BIG DATA (BIG DATA), P3759, DOI 10.1109/BigData.2016.7841045
   Luckow A, 2015, PROCEEDINGS 2015 IEEE INTERNATIONAL CONFERENCE ON BIG DATA, P1201, DOI 10.1109/BigData.2015.7363874
   Orti O, 2019, LECT NOTES COMPUT SC, V11507, P125, DOI 10.1007/978-3-030-20518-8_11
   Posey Brandon., 2018, Transportation Cyber-Physical Systems, P153
   Redmon J, 2018, Arxiv, DOI [arXiv:1804.02767, DOI 10.1109/CVPR.2017.690, DOI 10.48550/ARXIV.1804.02767]
   Sandler M, 2018, PROC CVPR IEEE, P4510, DOI 10.1109/CVPR.2018.00474
   Srivastava A, 2018, IEEE INT CONF BIG DA, P3915, DOI 10.1109/BigData.2018.8622389
   Szegedy C, 2017, AAAI CONF ARTIF INTE, P4278
   Zhang YN, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON CYBERNETICS AND INTELLIGENT SYSTEMS (CIS) AND IEEE CONFERENCE ON ROBOTICS, AUTOMATION AND MECHATRONICS (RAM), P171, DOI 10.1109/ICCIS.2017.8274769
   Zoph B, 2018, PROC CVPR IEEE, P8697, DOI 10.1109/CVPR.2018.00907
NR 34
TC 2
Z9 2
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2020
VL 50
IS 6
BP 868
EP 898
DI 10.1002/spe.2816
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK4IJ
UT WOS:000530823800005
DA 2024-07-18
ER

EF