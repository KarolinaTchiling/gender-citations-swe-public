FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Hirsch, M
   Mateos, C
   Rodriguez, JM
   Zunino, A
AF Hirsch, Matias
   Mateos, Cristian
   Manuel Rodriguez, Juan
   Zunino, Alejandro
TI DewSim: A trace-driven toolkit for simulating mobile device clusters in
   Dew computing environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE android; battery-aware resource management policy; discrete event
   simulation; edge computing; mobile devices; trace-based
ID RESOURCE-MANAGEMENT; EDGE; INTERNET
AB Dew computing is an emerging computing paradigm, which aims at minimizing the dependency over existing internetwork back-haul, ie, being dependent on processing resources offered by remote servers. Smartphones and tablets ubiquity and powerful computing hardware motivated researchers to investigate the way of providing Dew computing services by exploiting the aggregated capabilities of devices in a vicinity, a smart device cluster. Consequently, research on resource management is necessary to learn how to scavenge resources from such a cluster, deal with devices heterogeneity, limitations, and dynamic resource availability. Simulation is commonly practiced for studying resource management in other distributed computing research fields, specially due to the complexity involved in the set up of experiments. However, a free-to-use purpose specific toolkit for studying smart device clusters do not exist or have been documented. Current simulation efforts do not allow researchers to faithfully represent key singularities of such environment, which are energy depletion and nondedicated nature of computing resources. We propose a trace-based toolkit built on modular software artifacts to speed up research in resource management techniques in Dew environments. A trace-driven methodology is adopted to assure practical value of simulated scenarios. The toolkit comprises a device profiler application for Android to capture generic battery and CPU traces from real devices, a profile mixer to create user interaction baseline traces through generic ones, and an extensible engine to simulate the execution of workloads configurable via text files. Verification and validation tests were run to show correctness and reliability of our simulation approach.
C1 [Hirsch, Matias; Mateos, Cristian; Manuel Rodriguez, Juan; Zunino, Alejandro] UNCPBA, CONICET, ISISTAN, Campus Univ, Tandil, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Hirsch, M (corresponding author), UNCPBA, CONICET, ISISTAN, Campus Univ, Tandil, Argentina.
EM matias.hirsch@isistan.unicen.edu.ar
RI Hirsch, Matías/AAG-7269-2021; Hirsch, Matías/AAA-4066-2022; Rodriguez,
   Juan Manuel/V-9039-2019; Zunino, Alejandro/W-2100-2017
OI Hirsch, Matías/0000-0001-7021-3501; Hirsch, Matías/0000-0001-7021-3501;
   Rodriguez, Juan Manuel/0000-0002-1130-8065; Mateos,
   Cristian/0000-0001-5761-1898; Zunino, Alejandro/0000-0002-9537-3541
CR Balasubramanian Niranjan, 2009, P 9 ACM SIGCOMM C IN
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1175, DOI 10.1002/cpe.710
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Curiel M, 2018, OPEN ENG, V8, P87, DOI 10.1515/eng-2018-0012
   Falaki H., 2010, P 8 INT C MOBILE SYS, P179, DOI [DOI 10.1145/1814433.1814453, 10.1145/1814433.1814453]
   Fernando N, 2019, IEEE T CLOUD COMPUT, V7, P329, DOI 10.1109/TCC.2016.2560163
   Fernando N, 2013, FUTURE GENER COMP SY, V29, P84, DOI 10.1016/j.future.2012.05.023
   Furthmüller J, 2012, COMPUT NETW, V56, P1920, DOI 10.1016/j.comnet.2012.02.007
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Habak K, 2017, PROCEEDINGS OF THE S
   Harwood ARG, 2017, ADV ENG SOFTW, V104, P38, DOI 10.1016/j.advengsoft.2016.11.005
   Hirsch M, 2018, FUTURE GENER COMP SY, V88, P644, DOI 10.1016/j.future.2018.06.005
   Hirsch M, 2017, J GRID COMPUT, V15, P55, DOI 10.1007/s10723-016-9387-6
   Hirsch M, 2016, PERVASIVE MOB COMPUT, V29, P73, DOI 10.1016/j.pmcj.2015.08.003
   Hoque MA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2840723
   Khan AUR, 2015, IEEE CLOUD COMPUT, V2, P42, DOI 10.1109/MCC.2015.62
   Kliazovich D, 2010, GLOB TELECOMM CONF
   Lee J, 2014, FRONT COMPUT SCI-CHI, V8, P847, DOI 10.1007/s11704-014-3223-6
   Li B, 2015, J SUPERCOMPUT, V71, P3009, DOI 10.1007/s11227-015-1425-9
   Li CL, 2014, INFORM SCIENCES, V279, P654, DOI 10.1016/j.ins.2014.04.018
   Mach P, 2017, IEEE COMMUN SURV TUT, V19, P1628, DOI 10.1109/COMST.2017.2682318
   Mahmud R, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3186592
   Marinelli E.E., 2009, Tech. Rep.
   Mednieks Z.R., 2012, PROGRAMMING ANDROID
   Mustafa S, 2015, COMPUT ELECTR ENG, V47, P186, DOI 10.1016/j.compeleceng.2015.07.021
   Ning Ding, 2013, Performance Evaluation Review, V41, P29
   Rice A, 2010, PERVASIVE MOB COMPUT, V6, P593, DOI 10.1016/j.pmcj.2010.07.005
   Robinson S., 2014, SIMULATION PRACTICE
   Saha S., 2017, MULTIMEDIA SYSTEMS, P1
   Sahni Y, 2017, IEEE ACCESS, V5, P16441, DOI 10.1109/ACCESS.2017.2739804
   Shah SC, 2015, CONCURR COMP-PRACT E, V27, P1226, DOI 10.1002/cpe.3297
   Shi T, 2016, PERVASIVE MOB COMPUT, V27, P90, DOI 10.1016/j.pmcj.2015.07.005
   Singh KV, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4103
   Sokolowski J.A., 2010, MODELING SIMULATION, DOI 10.1002/9780470590621
   Sonmez C., 2017, 2017 2 INT C FOG MOB
   Takeno K, 2005, J POWER SOURCES, V142, P298, DOI 10.1016/j.jpowsour.2004.10.007
   Viswanathan H, 2015, IEEE T PARALL DISTR, V26, P2363, DOI 10.1109/TPDS.2014.2345057
   Wan M, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1635
NR 38
TC 15
Z9 15
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 688
EP 718
DI 10.1002/spe.2696
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000526578200014
DA 2024-07-18
ER

PT J
AU Krishnaraj, N
   Elhoseny, M
   Lydia, EL
   Shankar, K
   ALDabbas, O
AF Krishnaraj, N.
   Elhoseny, Mohamed
   Lydia, E. Laxmi
   Shankar, K.
   ALDabbas, Omar
TI An efficient radix trie-based semantic visual indexing model for
   large-scale image retrieval in cloud environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; indexing; large-scale image retrieval; platform as a
   service; radix trie; semantic data
ID BIG DATA
AB In recent years, massive growth in the number of images on the web has raised the requirement of developing an effective indexing model to search digital images from a large-scale database. Though cloud service offers effective indexing of compressed images, it remains a major issue due to the semantic gap between the user query and diverse semantics of large-scale database. This article presents a radix trie indexing (RTI) model based on semantic visual indexing for retrieving the images from cloud platforms. Initially, an interactive optimization model is applied to identify the joint semantic and visual descriptor space. Next, an RTI model is applied to integrate the semantic visual joint space model for finding an effective solution for searching large-scale sized dataset. Finally, a Spark distributed model is applied for deploying the online image retrieval service. The performance of the proposed method is validated on two standard dataset, namely, Holidays 1 M and Oxford 5 K in terms of mean average precision (mAP) and processing time under varying dataset sizes. During experimentation, the presented RTI model shows the maximum mAP value of 0.83 under the dataset size of 1000. Similarly, under the sample count of 1000, it is noted that the standalone server requires a maximum of 118 minutes to complete the process, whereas the spark cluster requires a minimum of around only 19 minutes to finish the process. The experimental outcome showed improvement in terms of various measures over the best rivals in the literature.
C1 [Krishnaraj, N.] SASI Inst Technol & Engn, Dept Comp Sci & Engn, Tadepalligudem, India.
   [Elhoseny, Mohamed] Mansoura Univ, Fac Comp & Informat, Mansoura, Egypt.
   [Lydia, E. Laxmi] Vignans Inst Informat Technol, Comp Sci & Engn, Visakhapatnam, Andhra Pradesh, India.
   [Shankar, K.] Alagappa Univ, Dept Comp Applict, Karaikkudi, Tamil Nadu, India.
   [ALDabbas, Omar] Al Balqa Appl Univ, Fac Engn, Dept Comp Engn, Salt, Jordan.
C3 Egyptian Knowledge Bank (EKB); Mansoura University; Alagappa University;
   Al-Balqa Applied University
RP Shankar, K (corresponding author), Alagappa Univ, Dept Comp Applict, Karaikkudi, Tamil Nadu, India.
EM shankarcrypto@gmail.com
RI Kathiresan, Shankar/Y-9178-2018; Elhoseny, Mohamed/Q-5591-2017; N,
   Krishnaraj/ABE-6556-2021; lydia, Laxmi/D-7931-2017; Technology, Vignan's
   Institute of Information/AAR-9004-2020
OI Kathiresan, Shankar/0000-0002-2803-3846; Elhoseny,
   Mohamed/0000-0001-6347-8368; N, Krishnaraj/0000-0002-6961-8883; lydia,
   Laxmi/0000-0003-1751-481X; Technology, Vignan's Institute of
   Information/0000-0001-5024-4976
FU  [F. 24-51/2014-U]
FX RUSA-Phase 2.0, Grant/Award Number: F. 24-51/2014-U
CR Abbas N, 2019, J SENS ACTUAR NETW, V8, DOI 10.3390/jsan8010016
   Andoni A, 2006, ANN IEEE SYMP FOUND, P459
   [Anonymous], 2009, NIPS
   Baker T, 2013, COMPUT ELECTR ENG, V39, P2400, DOI 10.1016/j.compeleceng.2013.04.019
   Boveiri HR, 2019, J AMB INTEL HUM COMP, V10, P3469, DOI 10.1007/s12652-018-1071-1
   Cai JJ, 2015, IEEE INT CON MULTI
   Chum O, 2007, IEEE I CONF COMP VIS, P496, DOI 10.1109/cvpr.2007.383172
   Dighriri M, 2017, 2017 31ST IEEE INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (IEEE WAINA 2017), P492, DOI 10.1109/WAINA.2017.106
   Dighriri M, 2016, I C DEV ESYST ENG, P239, DOI 10.1109/DeSE.2016.54
   Elhoseny M, 2018, FUTURE GENER COMP SY, V86, P1383, DOI 10.1016/j.future.2018.03.005
   Gong YC, 2011, PROC CVPR IEEE, P817, DOI 10.1109/CVPR.2011.5995432
   Hammoudeh M, 2015, INFORM FUSION, V22, P39, DOI 10.1016/j.inffus.2013.07.001
   Hammoudeh M, 2013, WIREL COMMUN MOB COM, V13, P809, DOI 10.1002/wcm.1139
   Hashem IAT, 2015, INFORM SYST, V47, P98, DOI 10.1016/j.is.2014.07.006
   Hong RC, 2017, IEEE T IMAGE PROCESS, V26, P4128, DOI 10.1109/TIP.2017.2710635
   Jégou H, 2011, IEEE T PATTERN ANAL, V33, P117, DOI 10.1109/TPAMI.2010.57
   Ji JQ, 2014, IEEE T PATTERN ANAL, V36, P1963, DOI 10.1109/TPAMI.2014.2315806
   KARTHIKEYAN K, 2018, J SUPERCOMPUT, P1
   Kotb Y, 2019, J GRID COMPUT, V17, P625, DOI 10.1007/s10723-019-09485-z
   Kulis B, 2012, IEEE T PATTERN ANAL, V34, P1092, DOI 10.1109/TPAMI.2011.219
   Kulis B, 2009, IEEE T PATTERN ANAL, V31, P2143, DOI 10.1109/TPAMI.2009.151
   LYDIA EL, 2019, INT J RECENT TECHNOL, V8, P3272
   Mu YD, 2010, PROC CVPR IEEE, P3344, DOI 10.1109/CVPR.2010.5540024
   Nister D., 2006, IEEE COMP SOC C COMP, P2161, DOI [10.1109/cvpr.2006.264, DOI 10.1109/CVPR.2006.264, 10.1109/CVPR]
   Sathesh Kumar K., 2017, Journal of Advanced Research in Dynamical and Control Systems, V9, P2888
   Su Z, 2016, IEEE T MULTIMEDIA, V18, P1650, DOI 10.1109/TMM.2016.2566584
   Wang J, 2012, IEEE T PATTERN ANAL, V34, P2393, DOI 10.1109/TPAMI.2012.48
   Weiss Y, 2012, LECT NOTES COMPUT SC, V7576, P340, DOI 10.1007/978-3-642-33715-4_25
   Wettinger J, 2016, FUTURE GENER COMP SY, V56, P317, DOI 10.1016/j.future.2015.07.017
   Zhang CY, 2016, NEUROCOMPUTING, V198, P4, DOI 10.1016/j.neucom.2015.09.129
NR 30
TC 51
Z9 52
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2021
VL 51
IS 3
SI SI
BP 489
EP 502
DI 10.1002/spe.2834
EA APR 2020
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QH1RQ
UT WOS:000525942000001
DA 2024-07-18
ER

PT J
AU Sinha, A
   Shrivastava, G
   Kumar, P
   Gupta, D
AF Sinha, Akash
   Shrivastava, Gulshan
   Kumar, Prabhat
   Gupta, Deepak
TI A community-based hierarchical user authentication scheme for Industry
   4.0
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Industrial Internet of Things; Industry 4; 0; multilevel distributed
   systems; security; social network of things; user authentication
ID INTERNET
AB The vision of Industry 4.0 is characterized by the amalgamation of cyber-physical systems and industrial Internet of Things. Such a complex ecosystem urges for the requirement of novel security protocol and mechanisms for access control so as to allow the smart devices to authorize external entities and granting them access rights without depending on centralized authentication entities. The work proposed in this article aims to utilize a community-based hierarchical approach to define the procedure for obtaining access rights in the Industry 4.0 ecosystem. The proposed scheme considers a hierarchy of authorizing devices that work in collaboration for providing access control of the smart end devices to the users. The adoption of hierarchical structure ensures that the access rights are eventually given to only those users that have passed multiple levels of successful authorization. The proposed scheme also combats any infringement of users identity since the authorizing entities involved in the proposed system work in close collaboration for user authentication. The proposed user authentication scheme has been validated using burrows-abadi-needham (BAN)-logic and is proved to be secure against a variety of security attacks.
C1 [Sinha, Akash; Shrivastava, Gulshan; Kumar, Prabhat] Natl Inst Technol Patna, Comp Sci & Engn, Patna, Bihar, India.
   [Gupta, Deepak] MAIT, Comp Sci & Engn, Delhi, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Patna; Maharaja Agrasen Institute of Technology
RP Shrivastava, G (corresponding author), Natl Inst Technol Patna, Comp Sci & Engn, Patna, Bihar, India.
EM gulshanstv@gmail.com
RI Shrivastava, Gulshan/AAH-7765-2021; Sinha, Akash/HLQ-0356-2023; Kumar,
   Prabhat/HGC-8304-2022; Gupta, Deepak/AAV-2728-2020; Kumar,
   Prabhat/AAA-9743-2019
OI Shrivastava, Gulshan/0000-0003-3671-4921; Sinha,
   Akash/0000-0002-4577-6123; Gupta, Deepak/0000-0002-3019-7161; Kumar,
   Prabhat/0000-0001-9945-7702
CR Anggorojati B., 2012, 2012 15th International Symposium on Wireless Personal Multimedia Communications (WPMC 2012), P604
   Berbecaru D, 2019, SOFTWARE PRACT EXPER, V49, P1643, DOI 10.1002/spe.2738
   Buttyan L, 1998, 11TH IEEE COMPUTER SECURITY FOUNDATIONS WORKSHOP - PROCEEDINGS, P153, DOI 10.1109/CSFW.1998.683165
   Butun I, 2015, IEEE INT CONF COMM, P2610, DOI 10.1109/ICCW.2015.7247572
   Cerf VG, 2015, IEEE INTERNET COMPUT, V19, P96, DOI 10.1109/MIC.2015.108
   Chaudhary R, 2019, COMPUT SECUR, V85, P288, DOI 10.1016/j.cose.2019.05.006
   Chaudhary R, 2019, IEEE INTERNET THINGS, V6, P4897, DOI 10.1109/JIOT.2018.2878707
   Chaudhary R, 2018, IEEE T IND INFORM, V14, P2629, DOI 10.1109/TII.2018.2789442
   Dhillon PK, 2017, J INF SECUR APPL, V34, P255, DOI 10.1016/j.jisa.2017.01.003
   Gulati A, 2021, IEEE T DEPEND SECURE, V18, P2520, DOI 10.1109/TDSC.2019.2953841
   Gurses S., 2006, Workshop on Ubiquitous Knowledge Discovery for users, P51
   Gusmeroli S, 2013, MATH COMPUT MODEL, V58, P1189, DOI 10.1016/j.mcm.2013.02.006
   Hernndez R., 2013, J INTERNET SERV INF, V3, P1, DOI DOI 10.22667/JISIS.2013.11.31.001
   Hussein D, 2017, IEEE COMMUN MAG, V55, P145, DOI 10.1109/MCOM.2017.1600611CM
   JENA MC, 2020, ENVIRON PROG SUSTAIN, V39
   Jindal A, 2019, COMPUT NETW, V153, P36, DOI 10.1016/j.comnet.2019.02.002
   Koziolek H, 2020, SOFTWARE PRACT EXPER, V50, P246, DOI 10.1002/spe.2765
   Kumar N, 2019, IEEE T IND INFORM, V15, P6572, DOI 10.1109/TII.2019.2922697
   Kumar P., 2020, IOT SECURITY ADV AUT, P133
   Kwon H, 2019, T EMERG TELECOMMUN T, V30, DOI 10.1002/ett.3740
   Lago-Fernández J, 2014, SOFTWARE PRACT EXPER, V44, P593, DOI 10.1002/spe.2175
   Lv ZH, 2021, SOFTWARE PRACT EXPER, V51, P2446, DOI 10.1002/spe.2806
   Malekhosseini R, 2018, SOFTWARE PRACT EXPER, V48, P1143, DOI 10.1002/spe.2565
   Narayanan ME, 2019, SOFTWARE PRACT EXPER, V49, P1728, DOI 10.1002/spe.2754
   Pankhuri, 2019, SCALABLE COMPUT-PRAC, V20, P101, DOI 10.12694/scpe.v20i1.1460
   Roman R, 2013, COMPUT NETW, V57, P2266, DOI 10.1016/j.comnet.2012.12.018
   Roman R, 2011, COMPUTER, V44, P51, DOI 10.1109/MC.2011.291
   Shi C, 2017, Protocol for the examination of specimens from patients with carcinoma of the esophagus, version 4.0. 0.0, P1
   Singh G, 2019, IEEE T IND INFORM, V15, P469, DOI 10.1109/TII.2018.2866917
   Sinha A, 2019, SUSTAIN COMPUT-INFOR, V23, P88, DOI 10.1016/j.suscom.2019.07.001
   Sinha A, 2019, ANN OPER RES, V283, P759, DOI 10.1007/s10479-017-2658-1
   STRAUB T, 2008, SECURITY UBIQUITOUS, P337
   Summerville D.H., 2015, 2015 IEEE 34 INT PER, P1, DOI DOI 10.1109/PCCC.2015.7410342
   Taneja M, 2019, SOFTWARE PRACT EXPER, V49, P1055, DOI 10.1002/spe.2704
   Weber Rolf H., 2010, Computer Law and Security Report, V26, P23, DOI 10.1016/j.clsr.2009.11.008
NR 35
TC 7
Z9 7
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2022
VL 52
IS 3
SI SI
BP 729
EP 743
DI 10.1002/spe.2832
EA APR 2020
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YS2YA
UT WOS:000525925500001
DA 2024-07-18
ER

PT J
AU Hassija, V
   Saxena, V
   Chamola, V
AF Hassija, Vikas
   Saxena, Vikas
   Chamola, Vinay
TI A mobile data offloading framework based on a combination of blockchain
   and virtual voting
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big-data; blockchain; consensus finality; directed acyclic graph;
   distributed applications; mobile offloading
AB The emergence of mobile cloud computing enables mobile users to offload computation tasks to other resource-rich mobile devices to reduce energy consumption and enhance performance. A direct peer-to-peer connection among mobile devices to offload computation tasks can be a highly promising solution to provide a fast mechanism, especially for deadline-sensitive offloading tasks. The generic blockchain-based system might fail in such a scenario due to it being a heavyweight mechanism requiring high power consumption in the mining process. To address these issues, in this article, we propose a directed acyclic graph-enabled mobile offloading (DAGMO) algorithm. DAGMO model is empowered by traditional blockchain features and provides additional advantages to overcome the fundamental limitations of generic blockchain. A game-theoretic approach is used to model the interactions between mobile devices. The numerical analysis proves the proposed model to enhance the overall welfare of the participating nodes in terms of computation cost and time.
C1 [Hassija, Vikas; Saxena, Vikas] JIIT, Dept CSE & IT, Noida, India.
   [Chamola, Vinay] BITS Pilani, Dept Elect & Elect Engn, Pilani, Rajasthan, India.
C3 Jaypee Institute of Information Technology (JIIT); Birla Institute of
   Technology & Science Pilani (BITS Pilani)
RP Chamola, V (corresponding author), BITS Pilani, Dept Elect & Elect Engn, Pilani, Rajasthan, India.
EM vinay.chamola@pilani.bits-pilani.ac.in
RI Hassija, Vikas/AAY-3020-2021
OI Chamola, Vinay/0000-0002-6730-3060
FU NVIDIA Corporation
FX The authors acknowledge the support of NVIDIA Corporation with the
   donation of the Titan Xp GPU used for this research. They also thank D.
   N. G. Krishna for his support in the completion of the project as an
   intern at BITS, Pilani.
CR Aijaz A, 2013, IEEE WIREL COMMUN, V20, P104, DOI 10.1109/MWC.2013.6507401
   Alladi T, 2019, IEEE ACCESS, V7, P176935, DOI 10.1109/ACCESS.2019.2956748
   Alladi T, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19224862
   [Anonymous], 2019, IEEE GLOB COMM CONF
   Baccarelli E, 2016, IEEE NETWORK, V30, P54, DOI 10.1109/MNET.2016.7437025
   Chalapathi GSS, 2020, FUTURE GENER COMP SY, V102, P862, DOI 10.1016/j.future.2019.09.003
   Chamola Vinay, 2017, 2017 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops), P587, DOI 10.1109/PERCOMW.2017.7917628
   Chamola V, 2019, IEEE NETW
   Cheon HR, 2019, IEEE ACCESS, V7, P39030, DOI 10.1109/ACCESS.2019.2906071
   Cho H, 2018, IEEE ACCESS, V6, P66210, DOI 10.1109/ACCESS.2018.2878895
   cisco, CISC VIS NETW IND GL
   Dunphy P, 2018, IEEE SECUR PRIV, V16, P20, DOI 10.1109/MSP.2018.3111247
   Flores H, 2018, IEEE T MOBILE COMPUT, V17, P1834, DOI 10.1109/TMC.2017.2777491
   Gao GJ, 2017, IEEE T PARALL DISTR, V28, P3584, DOI 10.1109/TPDS.2017.2720741
   Hassija V, 2020, IEEE T VEH TECHNOL, V69, P5799, DOI 10.1109/TVT.2020.2967052
   Hassija V, 2020, COMPUT COMMUN, V149, P51, DOI 10.1016/j.comcom.2019.09.021
   Hassija V, 2019, IEEE INT CONF COMM, DOI 10.1109/iccw.2019.8756808
   Hassija V, 2019, IEEE ACCESS, V7, P82721, DOI 10.1109/ACCESS.2019.2924045
   Hu ZQ, 2017, IEEE ACCESS, V5, P23060, DOI 10.1109/ACCESS.2017.2764104
   Khalilov MCK, 2018, IEEE COMMUN SURV TUT, V20, P2543, DOI 10.1109/COMST.2018.2818623
   Leemon Baird MH, HEDERA PUBLIC HASHGR
   Li M, 2019, IEEE T MOBILE COMPUT, V18, P348, DOI 10.1109/TMC.2018.2832638
   Li Y., 2017, IEEE T VEH TECHNOL, V67, P2514
   Liu DQ, 2018, IEEE T WIREL COMMUN, V17, P4660, DOI 10.1109/TWC.2018.2829513
   Mehmeti F, 2017, IEEE ACM T NETWORK, V25, P550, DOI 10.1109/TNET.2016.2590320
   Miglani A, 2019, COMP COMMUN
   Mohanta BK, 2018, INT CONF COMPUT
   Neto JLD, 2018, IEEE T MOBILE COMPUT, V17, P2660, DOI 10.1109/TMC.2018.2815015
   O'Neill M, 2010, IET COMPUT DIGIT TEC, V4, P14, DOI 10.1049/iet-cdt.2008.0165
   Rimal BP, 2017, J OPT COMMUN NETW, V9, P601, DOI 10.1364/JOCN.9.000601
   Rosa Raphael Vicente, 2018, IEEE Communications Standards Magazine, V2, P29, DOI 10.1109/MCOMSTD.2018.1800015
   Shah-Mansouri H, 2017, IEEE T MOBILE COMPUT, V16, P2983, DOI 10.1109/TMC.2017.2688402
   Tang WD, 2018, IEEE INT SYMP PARAL, P308, DOI 10.1109/BDCloud.2018.00056
   Wang KH, 2016, IEEE T WIREL COMMUN, V15, P913, DOI 10.1109/TWC.2015.2480394
   Wang S, 2019, IEEE T SYST MAN CY-S, V49, P2266, DOI 10.1109/TSMC.2019.2895123
   Xu D, 2019, IEEE COMMUN LETT, V23, P704, DOI 10.1109/LCOMM.2019.2897630
   Yang Z., 2005, Tsinghua Science and Technology, V10, P328
   Yu HR, 2017, IEEE WIREL COMMUN, V24, P31, DOI 10.1109/MWC.2017.1600323
   Yu S, 2018, IEEE T VEH TECHNOL, V67, P11098, DOI 10.1109/TVT.2018.2869144
   Zhang X, 2017, J MED IMAG HEALTH IN, V7, P1624, DOI 10.1166/jmihi.2017.2176
   Zhao N, 2019, IEEE INTERNET THINGS, V6, P5
   Zhou H, 2018, IEEE ACCESS, V6, P5101, DOI 10.1109/ACCESS.2018.2799546
   Zou J, 2019, IEEE T SERV COMPUT, V12, P429, DOI 10.1109/TSC.2018.2823705
NR 43
TC 29
Z9 29
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2428
EP 2445
DI 10.1002/spe.2786
EA JAN 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000508092800001
DA 2024-07-18
ER

PT J
AU Kim, T
   Kim, S
   Park, S
   Park, Y
AF Kim, Taeyoung
   Kim, Suntae
   Park, Sooyong
   Park, YoungBeom
TI Automatic recommendation to appropriate log levels
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE log level; log message; log statement; machine Learning; semantic &
   syntactic feature vector
AB A log statement is one of the key tactics for a developer to record and monitor important run-time behaviors of our system in a development phase and a maintenance phase. It composes of a message for stating log contents, and a log level (eg, debug or warn) to denote the severity of a message and controlling its visibility at run time. In spite of its usefulness, a developer does not tend to deeply consider which log level is appropriate in writing source code, which causes the system to be unmaintainable. To address this issue, this paper proposes an automatic approach to validating the appropriateness of the log level in consideration of the semantic and syntactic features and recommending a proper alternative log level. We first build the semantic feature vector to quantify the semantic similarity among application log messages using the word vector space, and the syntactic feature vector to capture the application context that surrounds the log statement. Based on the feature vectors and machine learning techniques, the log level is automatically validated, and an alternative log level is recommended if the log level is invalid. For the evaluation, we collected 22 open-source projects from three application domains, and obtained the 77% of precision and 75% of recall in validating the log levels. Also, our approach showed 6% higher accuracy than that of the developer group who has 7 to 8 years of work experience, and 72% of the developers accepted our recommendation.
C1 [Kim, Taeyoung; Kim, Suntae] Chonbuk Natl Univ, Dept Software Engn, Jeonju Si, Jeollabuk Do, South Korea.
   [Park, Sooyong] Sogang Univ, Dept Comp Sci & Engn, Seoul, South Korea.
   [Park, YoungBeom] Dankook Univ, Dept Software, Yongin, Gyeonggi Do, South Korea.
C3 Jeonbuk National University; Sogang University; Dankook University
RP Park, S (corresponding author), Sogang Univ, Dept Comp Sci & Engn, Seoul, South Korea.; Kim, S (corresponding author), Chonbuk Natl Univ, CAIIT, Dept Software Engn, 567 Baekje Daero, Jeonju Si 54896, Jeollabuk Do, South Korea.
EM stkim@jbnu.ac.kr; sypark@sogang.ac.kr
FU Ministry of Science and ICT, Korea, under the Information Technology
   Research Center support program [IITP-2019-2016-0-00313]
FX This research was supported by the Ministry of Science and ICT, Korea,
   under the Information Technology Research Center support program
   (IITP-2019-2016-0-00313) supervised by the Institute for Information &
   communications Technology Planning & Evaluation.
CR ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   [Anonymous], 2012, P 34 INT C SOFTW ENG
   [Anonymous], 1995, IJCAI
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Fu Q, 2014, DO DEV LOG EMPIRICAL, DOI 10.1145/2591062.2591175
   Fu Q, 2013, P 10 WORK C MIN SOFT
   Fu Q., 2009, P 2009 9 IEEE INT C
   Goldberg Y., 2014, ARXIV PREPRINT ARXIV, V1402, P3722
   Gupta S, 2005, PROAPACHE LOG4J
   Hassani M, 2018, EMPIR SOFTW ENG, V23, P3248, DOI 10.1007/s10664-018-9603-z
   Ho T.K., 1995, P 3 INT C DOC AN REC
   Kabinna S, 2016, P 2016 IEEE 23 INT C
   Kaminski B, 2018, CENT EUR J OPER RES, V26, P135, DOI 10.1007/s10100-017-0479-6
   Kim TW, 2018, ADV MATER SCI ENG, V2018, DOI 10.1155/2018/5734172
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Lou J.G., 2010, USENIX ANN TECHN C, P1
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Shang W, 2014, P 2014 IEEE INT C SO
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Yuan Ding, 2012, 10 USENIX S OP SYST
   Zhu J, 2015, P 37 INT C SOFTW ENG, V1
NR 23
TC 3
Z9 3
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2020
VL 50
IS 3
SI SI
BP 189
EP 209
DI 10.1002/spe.2771
EA NOV 2019
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KH3BI
UT WOS:000499286500001
DA 2024-07-18
ER

PT J
AU Brogi, A
   Forti, S
   Guerrero, C
   Lera, I
AF Brogi, Antonio
   Forti, Stefano
   Guerrero, Carlos
   Lera, Isaac
TI How to place your apps in the fog: State of the art and open challenges
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE application deployment; application placement; fog computing;
   optimization algorithms; service placement
ID RESOURCE-MANAGEMENT; SDN; OPTIMIZATION; SIMULATION; INTERNET; TOOLKIT;
   THINGS; EDGE
AB Fog computing aims at extending the cloud towards the Internet of things so to achieve improved quality of service and to empower latency-sensitive and bandwidth-hungry applications. The fog calls for novel models and algorithms to distribute multiservice applications in such a way that data processing occurs wherever it is best placed, based on both functional and nonfunctional requirements. This survey reviews the existing methodologies to solve the application placement problem in the fog, while pursuing three main objectives. First, it offers a comprehensive overview on the currently employed algorithms, on the availability of open-source prototypes and on the size of test use cases. Second, it classifies the literature based on the application and fog infrastructure characteristics that are captured by available models, with a focus on the considered constraints and the optimized metrics. Finally, it identifies some open challenges in application placement in the fog.
C1 [Brogi, Antonio; Forti, Stefano] Univ Pisa, Dept Comp Sci, I-56127 Pisa, Italy.
   [Guerrero, Carlos; Lera, Isaac] Univ Balearic Isl, Dept Comp Sci, Palma De Mallorca, Balearic Island, Spain.
C3 University of Pisa; Universitat de les Illes Balears
RP Forti, S (corresponding author), Univ Pisa, Dept Comp Sci, I-56127 Pisa, Italy.
EM stefano.forti@di.unipi.it
RI Lera, Isaac ILC/E-5467-2011; Brogi, Antonio/HLQ-2040-2023; Guerrero,
   Carlos/E-9221-2012; Forti, Stefano/I-3083-2018
OI Lera, Isaac ILC/0000-0002-2826-5970; Guerrero,
   Carlos/0000-0003-2969-0597; Forti, Stefano/0000-0002-4159-8761; Brogi,
   Antonio/0000-0003-2048-2468
FU University of Pisa [PRA_2018_66]; Department of Computer Science,
   University of Pisa; Spanish Government (Agencia Estatal de
   Investigacion) [TIN2017-88547-P]; European Commission (Fondo Europeo de
   Desarrollo Regional) [TIN2017-88547-P]
FX University of Pisa project "DECLWARE: Declarative methodologies of
   application design and deployment", Grant/Award Number: PRA_2018_66;
   Department of Computer Science, University of Pisa, project "Gio: a Fog
   computing testbed for research & education"; Spanish Government (Agencia
   Estatal de Investigacion) and the European Commission (Fondo Europeo de
   Desarrollo Regional), Grant/Award Number: TIN2017-88547-P
   (MINECO/AEI/FEDER, UE)
CR Aazam M, 2018, FUTURE GENER COMP SY, V87, P278, DOI 10.1016/j.future.2018.04.057
   [Anonymous], 2010, IBM ILOG CPLEX OPT
   [Anonymous], 2013, GAME THEORY INTRO
   [Anonymous], 2015, FOG COMP INT THINGS
   [Anonymous], 2018, NIST
   [Anonymous], 2018, IEEE 1934-2018
   [Anonymous], 2016, ADV SOLUTIONS POWER
   Arkian HR, 2017, J NETW COMPUT APPL, V82, P152, DOI 10.1016/j.jnca.2017.01.012
   Assefa BG, 2019, J NETW COMPUT APPL, V137, P127, DOI 10.1016/j.jnca.2019.04.001
   Astuti G, 2019, P 5 IEEE INT WORKSH
   Barabasi A L, 2016, Network Science
   Souza VB, 2016, IEEE GLOB COMM CONF
   Barcelo M, 2016, IEEE J SEL AREA COMM, V34, P4077, DOI 10.1109/JSAC.2016.2621398
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Brogi A, 2018, P 2018 3 INT C FOG M
   Brogi A., 2017, P 1 IEEE INT C FOG E
   Brogi A, 2019, WILEY SER PARA DIST, P191
   Brogi A, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P68, DOI 10.5220/0006676100680077
   Brogi A, 2017, IEEE INTERNET THINGS, V4, P1185, DOI 10.1109/JIOT.2017.2701408
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Cardellini V, 2015, P 2015 IEEE S COMP C
   Cardellini V, 2015, P 9 ACM INT C DISTR
   Cardellini V, 2016, P 10 ACM INT C DISTR
   Chowdhury M, 2012, IEEE ACM T NETWORK, V20, P206, DOI 10.1109/TNET.2011.2159308
   Cisco, 2018, CISC GLOB CLOUD IND
   Consortium OpenFog, 2017, OPENFOG REF ARCH FOG
   Cormen T.H., 2009, INTRO ALGORITHMS
   Cox J, 2017, IEEE ACCESS, V5, P25487, DOI 10.1109/ACCESS.2017.2762291
   Dastjerdi AV, 2016, COMPUTER, V49, P112, DOI 10.1109/MC.2016.245
   De Maio V, 2018, P 18 IEEE ACM INT S
   Deng R, 2015, P 2015 IEEE INT C CO
   Dunning I., 2011, PULP LINEAR PROGRAMM
   Filiposka S, 2018, IEEE WCNC
   Forti S, 2019, SICS SOFTWARE, V34, P151, DOI 10.1007/s00450-019-00403-y
   Lopez PG, 2015, ACM SIGCOMM COMP COM, V45, P37, DOI 10.1145/2831347.2831354
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gu L, 2017, IEEE T EMERG TOP COM, V5, P108, DOI 10.1109/TETC.2015.2508382
   Gueret C., 2002, APPL OPTIMIZATION XP
   Guerrero C, 2019, CONCURR COMP-PRACT E
   Guerrero C, 2018, J AMB INTEL HUM COMP, V10, P2435
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Gurobi Optimization LLC, 2023, Gurobi optimizer reference manual
   Hashem IAT, 2015, INFORM SYST, V47, P98, DOI 10.1016/j.is.2014.07.006
   Hong HJ, 2016, ASIA-PAC NETW OPER M
   Hornig R., 2008, P 1 INT ICST C SIM T, P60, DOI [10.4108/ICST.SIMUTOOLS2008.3027, DOI 10.4108/ICST.SIMUTOOLS2008.3027]
   Huang Z., 2014, Journal of Innovation in Digital Ecosystems, V1, P47, DOI 10.1016/j.jides.2015.02.005
   Jiang S, 2016, P 2016 SAI COMP C SA
   Karakus M, 2017, J NETW COMPUT APPL, V80, P200, DOI 10.1016/j.jnca.2016.12.019
   Letondeur L, 2017, P 2017 IEEE FOG WORL
   Mahmud R, 2018, FOG EDGE COMPUTING P
   Mahmud R, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3186592
   Mahmud R, 2019, J PARALLEL DISTR COM, V132, P190, DOI 10.1016/j.jpdc.2018.03.004
   Mann Za, 2019, FOG EDGE COMPUTING P
   Manyika J., 2014, BIG DATA NEXT FRONTI
   MATLAB, MATLAB
   Mayer R., 2017, P 2017 IEEE FOG WORL, P1
   Mennes R, 2016, P 2016 5 IEEE INT C
   MOYSIADIS V, 2018, WIREL COMMUN MOB COM, V2018, P14
   Ottenwalder B, 2013, P ACM INT C DISTR EV
   Palma D, 2016, TOSCA SIMPLE PROFILE
   Rahbari D, 2017, P 2017 21 C OP INN A
   Russell S., 2016, Artificial intelligence a modern approach
   Salman O, 2018, COMPUT NETW, V143, P221, DOI 10.1016/j.comnet.2018.07.020
   Shi WS, 2016, COMPUTER, V49, P78, DOI 10.1109/MC.2016.145
   Sinha S. M., 2005, MATH PROGRAMMING THE
   Skarlat O, 2017, P 2017 IEEE 1 INT C
   Skarlat O, 2016, P 2016 IEEE 9 INT C
   Skarlat O, 2017, SERV ORIENTED COMPUT, V11, P427, DOI 10.1007/s11761-017-0219-8
   Souza VBC, 2016, IEEE ICC, DOI 10.1109/ICC.2016.7511465
   Taneja M, 2017, P IFIP IEEE S INT NE
   Tang ZQ, 2019, IEEE T SERV COMPUT, V12, P712, DOI 10.1109/TSC.2018.2827070
   Velasquez K, 2017, ANN TELECOMMUN, V72, P105, DOI 10.1007/s12243-016-0524-9
   Venticinque S, 2019, J AMB INTEL HUM COMP, V10, P1955, DOI 10.1007/s12652-018-0785-4
   Villari M, 2016, IEEE CLOUD COMPUT, V3, P76, DOI 10.1109/MCC.2016.124
   Wang SQ, 2017, IEEE ACCESS, V5, P2514, DOI 10.1109/ACCESS.2017.2665971
   Weaveworks  ContainerSolutions, 2016, SOCKS SHOP MICR DEM
   Wen Z, 2017, IEEE INTERNET COMPUT, V21, P16, DOI 10.1109/MIC.2017.36
   Xia Y., 2018, P 33 ANN ACM S APPL
   Xu DL, 2018, IEEE COMMUN SURV TUT, V20, P2198, DOI 10.1109/COMST.2018.2808242
   Xu J, 2014, P 2014 IEEE 34 INT C
   Yang L, 2016, IEEE T COMPUT, V65, P1440, DOI 10.1109/TC.2015.2435781
   Zeng DZ, 2016, IEEE T COMPUT, V65, P3702, DOI 10.1109/TC.2016.2536019
   Zhang HQ, 2017, IEEE INTERNET THINGS, V4, P1204, DOI 10.1109/JIOT.2017.2688925
   Zhang HQ, 2017, IEEE COMMUN MAG, V55, P52, DOI 10.1109/MCOM.2017.1600896
NR 84
TC 92
Z9 92
U1 2
U2 31
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 719
EP 740
DI 10.1002/spe.2766
EA NOV 2019
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000498749500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Huang, Q
   Yang, Y
   Cheng, M
AF Huang, Qing
   Yang, Yang
   Cheng, Ming
TI Deep learning the semantics of change sequences for query expansion
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE change sequence; code search; deep learning; query expansion; semantics
AB The overexpansion problem negatively affects the quality of query expansion. To improve the quality of queries for searching code, this paper proposed a DBN-based algorithm for effective query expansion. The deep belief network (DBN) model is trained on the code sequences and their change sequences, which aims to capture the meaningful terms during the evolution of source code. In contrast to previous studies, the proposed model not only extracts relevant terms to expand a query but also excludes irrelevant terms from the query. It addresses two problems in query expansion, including the overexpansion of the original query and the negative influence of the changed terms in the target source code. Experiments on both artificial queries and real queries show that the proposed algorithm outperforms several query expansion algorithms for code search.
C1 [Huang, Qing] Jiangxi Normal Univ, Sch Comp & Informat Engn, Nanchang, Jiangxi, Peoples R China.
   [Yang, Yang] Zhongnan Univ Econ & Law, Sch Informat & Secur Engn, Wuhan 430073, Hubei, Peoples R China.
   [Cheng, Ming] Zhengzhou Univ, Affiliated Hosp 1, Zhengzhou, Henan, Peoples R China.
C3 Jiangxi Normal University; Zhongnan University of Economics & Law;
   Zhengzhou University
RP Yang, Y (corresponding author), Zhongnan Univ Econ & Law, Sch Informat & Secur Engn, Wuhan 430073, Hubei, Peoples R China.
EM yaoyuandepiaoxue@126.com
FU National Natural Science Foundation of China [61902162, 61762049,
   61872272, 61877031, 61802350, 61862033, 61772246, 61562042, 61672470]
FX National Natural Science Foundation of China, Grant/Award Number:
   61902162, 61762049, 61872272, 61877031, 61802350, 61862033, 61772246,
   61562042, and 61672470
CR Amann S, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   [Anonymous], 2016, P 2016 24 ACM SIGSOF
   Ciresan DC, 2012, IEEE IJCNN
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   FISCHER G, 1991, P 13 INT C SOFTW ENG
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   HAIDUC S, 2013, P 2013 INT C SOFTW E
   HELLENDOORN V, 2017, P 2017 11 JOINT M FD
   Hinton GE, 2006, SCIENCE, V313, P504, DOI 10.1126/science.1127647
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Huang Q, 2018, SOFTWARE PRACT EXPER, V48, P1333, DOI 10.1002/spe.2574
   Huang Q, 2017, INT J SOFTW ENG KNOW, V27, P1591, DOI 10.1142/S0218194017400137
   Kojima T, 2016, IEEE INT CONF MULTI
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   LI X, 2018, P 26 C PROGR COMPR G
   LV F, 2015, P 30 IEEE ACM INT C
   Mohamed AR, 2012, IEEE T AUDIO SPEECH, V20, P14, DOI 10.1109/TASL.2011.2109382
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   RAYCHEV V, 2014, P 35 ACM SIGPLAN C P
   RYU H, 2016, P 38 INT C SOFTW ENG
   SRIDHARA G, 2008, P 16 IEEE INT C PROG
   SUN X, 2014, P 3 INT WORKSH EV AS
   White MA, 2015, POSITIVE EDUCATION, P1, DOI 10.1007/978-94-017-9667-5_1
   Witten I. H., 2005, DATA MINING PRACTICA
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
NR 27
TC 16
Z9 16
U1 0
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2019
VL 49
IS 11
BP 1600
EP 1617
DI 10.1002/spe.2736
EA AUG 2019
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JG7JQ
UT WOS:000483082100001
DA 2024-07-18
ER

PT J
AU Xue, G
   Liu, D
   Liu, JS
   Yao, SW
AF Xue, Gang
   Liu, Di
   Liu, Junsong
   Yao, Shaowen
TI A process partitioning technique for constructing decentralized web
   service compositions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE decentralized web service compositions; process partitioning; QoS; web
   service compositions
AB Web service compositions have been widely applied in different applications. A service composition is usually implemented in either a centralized or decentralized manner. Compared with the centralized service composition, the decentralized composition has no central control component, and components interact with each other directly, thereby achieving better performance. Process partitioning is a technique to divide a process into multiple parts and has been shown that it can be successfully applied to decentralizing process-driven service compositions. This paper proposes a new process partitioning technique for constructing decentralized service compositions. The proposed technique, which is based on typed digraphs and a graph transformation technique, is used for exploring available process partitioning solutions. For applications, this paper discusses the topology and interaction features about the partitioning solutions and summarizes a ranking method for them. Three experiments are conducted to evaluate the proposed methods in this paper. Experimental results show that the proposed methods can be applied in constructing decentralized service compositions effectively. In addition, the results also show that the decentralized compositions can have lower average response times and higher throughputs than the corresponding centralized compositions in the experiments.
C1 [Xue, Gang; Liu, Di; Liu, Junsong; Yao, Shaowen] Yunnan Univ, Sch Software, Kunming, Yunnan, Peoples R China.
C3 Yunnan University
RP Liu, D (corresponding author), Yunnan Univ, Sch Software, Kunming, Yunnan, Peoples R China.
EM dliu@ynu.edu.cn
RI 迪, 刘/ABU-9202-2022; 迪, 刘/ITU-7887-2023
OI 迪, 刘/0000-0002-4365-2768; 迪, 刘/0000-0002-4365-2768
FU Open Foundation of Key Laboratory in Software Engineering of Yunnan
   Province [2015SE101]
FX Open Foundation of Key Laboratory in Software Engineering of Yunnan
   Province, Grant/Award Number: 2015SE101
CR Alrifai M, 2012, ACM T WEB, V6, DOI 10.1145/2180861.2180864
   [Anonymous], 2007, WEB SERVICES BUSINES
   Apache, AP JMETER
   Atluri V, 2007, DISTRIB PARALLEL DAT, V22, P55, DOI 10.1007/s10619-007-7012-1
   Barker A, 2009, P 7 INT WORKSH CHALL
   Bellido J, 2013, ACM T WEB, V8, DOI 10.1145/2535911
   Binder W, 2006, P 2006 IEEE INT C WE
   Brucker AD, 2017, SOFTWARE PRACT EXPER, V47, P1923, DOI 10.1002/spe.2513
   CruzTorres MH, 2015, THESIS
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Fdhila W, 2014, SOFTW SYST MODEL, V13, P599, DOI 10.1007/s10270-012-0262-z
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Johnson R, 1994, P ACM SIGPLAN 1994 C
   Kiepuszewski B, 2000, P 12 INT C ADV INF S
   Kratzke N, 2016, P 6 INT C CLOUD COMP
   Kratzke N, 2018, APPL SCI-BASEL, V8, DOI 10.3390/app8081368
   Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001
   Li J, 2018, IEEE T SERV COMPUT, V11, P521, DOI 10.1109/TSC.2016.2578924
   LOWE M, 1993, THEOR COMPUT SCI, V109, P181, DOI 10.1016/0304-3975(93)90068-5
   Maximilien EM, 2004, IEEE INTERNET COMPUT, V8, P84, DOI 10.1109/MIC.2004.27
   Mezni H, 2018, SOFTWARE PRACT EXPER, V48, P1285, DOI 10.1002/spe.2575
   Muller J, 1996, 9638 TU BERL
   Nanda M. Gowri, 2004, P 19 ANN ACM SIGPLAN
   Nanda MG, 2003, P 2003 ACM S APPL CO
   Pantazoglou M, 2014, IEEE T SERV COMPUT, V7, P184, DOI 10.1109/TSC.2013.6
   Polyvyanyy A., 2012, THESIS
   Siebert JI, 2010, P 6 INT WIR COMM MOB
   Wang Hongbing., 2004, Journal of web semantics, V1, P309
   Xue G, 2018, J WEB ENG, V17, P121
NR 29
TC 2
Z9 2
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2019
VL 49
IS 10
BP 1550
EP 1570
DI 10.1002/spe.2735
EA AUG 2019
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU8BK
UT WOS:000481162200001
DA 2024-07-18
ER

PT J
AU Wang, JV
   Cheng, CT
   Tse, CK
AF Wang, Jing V.
   Cheng, Chi-Tsun
   Tse, Chi K.
TI A thermal-aware VM consolidation mechanism with outage avoidance
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; energy saving; outage avoidance; thermal-aware; VM
   consolidation
ID RESOURCE-ALLOCATION; VIRTUAL MACHINES; CLOUD; MANAGEMENT; ENERGY;
   HEURISTICS; MIGRATION
AB Efficient energy and temperature management techniques are essential elements for operators of cloud data centers. Dynamic virtual machine (VM) consolidation using live migration techniques presents a great opportunity for cloud service providers to adaptively reduce energy consumption and optimize their resource utilization. In recent studies, power consumption readings of individual physical hosts were chosen as the main monitoring parameters in their allocation policies, whereas very few have considered host temperature, which has shown to have a negative impact on server reliability, as a migration criterion. In this work, a thermal-aware VM consolidation mechanism is proposed for resource allocation optimization and server reliability assurance. We consider the variability in host temperature as a migration criterion to avoid outage incidents via having better VM consolidations. Extensive simulation results obtained from CloudSim show the promising performance of the proposed mechanism in energy saving while reducing the number of server outage incidents due to fluctuations in host temperature.
C1 [Wang, Jing V.] Wuhan Univ Technol, Sch Automat, Wuhan 430070, Hubei, Peoples R China.
   [Wang, Jing V.; Tse, Chi K.] Hong Kong Polytech Univ, Dept Elect & Informat Engn, Kowloon, Hong Kong, Peoples R China.
   [Cheng, Chi-Tsun] RMIT Univ, Dept Mfg Mat & Mechatron, Melbourne, Vic, Australia.
C3 Wuhan University of Technology; Hong Kong Polytechnic University; Royal
   Melbourne Institute of Technology (RMIT)
RP Wang, JV (corresponding author), Wuhan Univ Technol, Sch Automat, Wuhan 430070, Hubei, Peoples R China.
EM jing.v.wang@ieee.org
RI Cheng, Chi-Tsun/D-1280-2011
OI Cheng, Chi-Tsun/0000-0003-3306-6148; Wang, Jing V./0000-0002-1804-519X;
   Tse, Chi K./0000-0002-0462-3999
FU National Natural Science Foundation of China [51777146]; Department of
   Electronic and Information Engineering; Hong Kong Polytechnic University
FX National Natural Science Foundation of China, Grant/Award Number:
   51777146; Department of Electronic and Information Engineering; The Hong
   Kong Polytechnic University, Grant/Award Number: RTMR
CR Abu Sharkh M, 2013, IEEE COMMUN MAG, V51, P46, DOI 10.1109/MCOM.2013.6658651
   Arroba P, 2018, SOFTWARE PRACT EXPER, V48, P1775, DOI 10.1002/spe.2603
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Beneventi F, 2014, IEEE T COMPUT, V63, P1097, DOI 10.1109/TC.2012.293
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chen L, 2014, P IEEE INFOCOM IEEE
   Chen YJ, 2017, WIRELESS PERS COMMUN, V97, P1475, DOI 10.1007/s11277-017-4582-8
   El-Sayed Nosayba, 2012, Performance Evaluation Review, V40, P163, DOI 10.1145/2318857.2254778
   Ergu DJ, 2013, J SUPERCOMPUT, V64, P835, DOI 10.1007/s11227-011-0625-1
   Farahnakian F, 2015, IEEE T SERV COMPUT, V8, P187, DOI 10.1109/TSC.2014.2382555
   Gani Md Osman, 2009, Journal of Networks, V4, P976, DOI 10.4304/jnw.4.10.976-984
   Garg SK, 2014, J NETW COMPUT APPL, V45, P108, DOI 10.1016/j.jnca.2014.07.030
   Howard RA, 2012, DOVER BOOKS MATH, V1
   Huang W, 2006, IEEE T VLSI SYST, V14, P501, DOI 10.1109/TVLSI.2006.876103
   Kaur A, 2013, 2013 INT C ADV COMP
   Kursun E, 2006, 3 WORKSH TEMP AW COM
   KyoungSoo Park, 2006, Operating Systems Review, V40, P65, DOI 10.1145/1113361.1113374
   LEE EK, 2012, INDIA
   Li X, 2018, FUTURE GENER COMP SY, V78, P887, DOI 10.1016/j.future.2017.07.044
   Lin WW, 2014, SOFTWARE PRACT EXPER, V44, P163, DOI 10.1002/spe.2163
   García AL, 2018, SOFTWARE PRACT EXPER, V48, P486, DOI 10.1002/spe.2544
   Mhedheb Yousri, 2013, Algorithms and Architectures for Parallel Processing. 13th International Conference, ICA3PP 2013. Proceedings: LNCS 8285, P101, DOI 10.1007/978-3-319-03859-9_8
   Pertet S., 2005, CMUPDL05109
   Qavami HR, 2013, INT C CLOUD COMP WUH
   Skadron K., 2002, P 8 INT S HIGH PERF
   Song WJ, 2014, IEEE T COMPUT, V63, P2647, DOI 10.1109/TC.2013.148
   Wang J, 2015, IEEE INT CONF COMPUT
   Wood T, 2015, IEEE ACM T NETWORK, V23, P1568, DOI 10.1109/TNET.2014.2343945
   Xiao Z, 2013, IEEE T PARALL DISTR, V24, P1107, DOI 10.1109/TPDS.2012.283
   Xu F, 2014, IEEE T COMPUT, V63, P3012, DOI 10.1109/TC.2013.185
   Ye X, 2017, IEEE ACCESS, V5, P16006, DOI 10.1109/ACCESS.2017.2733723
   Zhao L, 2015, IEEE T SERV COMPUT, V8, P534, DOI 10.1109/TSC.2013.5
   Zheng J, 2013, IEEE T NETW SERV MAN, V10, P369, DOI 10.1109/TNSM.2013.111013.130522
NR 33
TC 7
Z9 7
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2019
VL 49
IS 5
BP 906
EP 920
DI 10.1002/spe.2680
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HR3KH
UT WOS:000463035200008
DA 2024-07-18
ER

PT J
AU Wang, R
   Ying, S
AF Wang, Rui
   Ying, Shi
TI SaaS software performance issue identification using HMRF-MAP framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; HMRF-MAP; performance issue identification; performance
   metrics; SaaS software
ID SEGMENTATION
AB The performance of the software-as-a-service (SaaS) software is often characterized by combinations of performance metrics monitored in a cloud computing platform. Due to the complexity of the application software and the dynamic nature of the deployment environment, manual diagnosis for performance issues based on metric data is typically expensive and laborious. In order to solve the above problems, we propose an automatic performance issue identification method. This approach constructs the hidden Markov random field maximum a posteriori (HMRF-MAP) model based on the monitored metric values. The model calculates the current performance state of the system by analyzing the historical states of the system. In this paper, we evaluate our approach in a case study of a production system deployed on the cloud computing platform. The evaluation results show that our approach (1) has small system overhead, (2) is accurate in identifying the time frame during which a performance issue occurs, (3) is indeed useful and assists an operation and maintenance manager in recovering the service capability of SaaS software, and (4) is better than other approaches for identifying the performance issues in the system.
C1 [Wang, Rui; Ying, Shi] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Hubei, Peoples R China.
C3 Wuhan University
RP Ying, S (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan 430072, Hubei, Peoples R China.
EM yingshi@whu.edu.cn
FU National Natural Science Foundation of China [61672392, 61373038];
   National Key Research and Development Program of China [2016YFC1202204]
FX National Natural Science Foundation of China, Grant/Award Number:
   61672392 and 61373038; National Key Research and Development Program of
   China, Grant/Award Number: 2016YFC1202204
CR [Anonymous], 2001, J UNIVERS COMPUT SCI
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Bammann K, 2006, BIOMETRICS, V62, P943, DOI 10.1111/j.1541-0420.2006.00588_4.x
   Bare K, 2010, LECT NOTES COMPUT SC, V6420, P201
   Berrendorf R, 1998, PCL THE PERFORMANCE
   Bezemer CP, 2014, J SYST SOFTWARE, V87, P87, DOI 10.1016/j.jss.2013.09.013
   BOCK RD, 1981, PSYCHOMETRIKA, V46, P443, DOI 10.1007/BF02293801
   [陈林 Chen Lin], 2017, [计算机科学, Computer Science], V44, P7
   Cohen I., 2004, P 6 C S OP SYST DES
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Duda R.O., 2003, IEEE T AUTOMAT CONTR, V19, P462
   Fox A, 2004, P 1 ACM SIGSOFT WORK
   GHOSH A, 1991, BIOL CYBERN, V66, P151, DOI 10.1007/BF00243290
   Hearst MA, 1998, IEEE INTELL SYST APP, V13, P18, DOI 10.1109/5254.708428
   Hoti F., 2003, ANN MATH STAT, V33, P1065
   Lan ZL, 2010, IEEE T PARALL DISTR, V21, P174, DOI 10.1109/TPDS.2009.52
   Larose Daniel T., 2014, Discovering Knowledge in Data: An Introduction to Data Mining, P149, DOI [10.1002/9781118874059.ch7, DOI 10.1002/9781118874059.CH7, 10.1002/9781118874059.CH7, DOI 10.1002/0471687545.CH5]
   Li S. Z., 2009, Markov random field modeling in image analysis
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Nigrin A., 1993, NEURAL NETWORKS PATT
   Peiris M, 2014, 2014 IEEE 7 INT C CL
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Radke RJ, 2005, IEEE T IMAGE PROCESS, V14, P294, DOI 10.1109/TIP.2004.838698
   Sanchez-Riera J, 2014, IEEE INT CON MULTI
   Shapiro L.G, 2001, COMPUTER VISION
   Stauffer C, 2000, IEEE T PATTERN ANAL, V22, P747, DOI 10.1109/34.868677
   STAUFFER C, 1999, P 1999 IEEE COMP SOC
   Stehman SV, 1997, REMOTE SENS ENVIRON, V62, P77, DOI 10.1016/S0034-4257(97)00083-7
   Subudhi BN, 2015, SOFT COMPUT, V19, P2769, DOI 10.1007/s00500-014-1440-4
   Wang R, 2017, 29 INT C SOFTW ENG K
   Wang R, INT C SOFTW ENG KNOW
   [王焘 Wang Tao], 2017, [计算机学报, Chinese Journal of Computers], V40, P397
   Yu L, 2016, IEEE T PARALL DISTR, V27, P1902, DOI 10.1109/TPDS.2015.2475741
   Zhang Jian-Hua, 2014, Journal of Software, V25, P2702, DOI 10.13328/j.cnki.jos.004548
   Zhang YY, 2001, IEEE T MED IMAGING, V20, P45, DOI 10.1109/42.906424
NR 35
TC 4
Z9 4
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2018
VL 48
IS 11
BP 2000
EP 2018
DI 10.1002/spe.2607
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GW3WX
UT WOS:000446841000004
DA 2024-07-18
ER

PT J
AU Momeni, B
   Kharrazi, M
AF Momeni, Behnam
   Kharrazi, Mehdi
TI LDMBL: An architecture for reducing code duplication in heavyweight
   binary instrumentations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic binary instrumentation; heavyweight instrumentation; Pin-based
   architecture; Z language specification
AB Emergence of instrumentation frameworks has vastly contributed to the software engineering practices. As the instrumentation use cases become more complex, complexity of instrumenting programs also increases, leading to a higher risk of software defects, increased development time, and decreased maintainability. In security applications such as symbolic execution and taint analysis, which need to instrument a large number of instruction types, this complexity is prominent. This paper presents an architecture based on the Pin binary instrumentation framework to abstract the low-level OS and hardware-dependent implementation details, facilitate code reuse in heavyweight instrumentation use cases, and improve instrumenting program development time. Instructions of x86 and x86-64 hardware architectures are formally categorized using the Z language based on the Pin framework API. This categorization is used to automate the instrumentation phase on the basis of a configuration list. Furthermore, instrumentation context data such as register data are modeled in an object-oriented scheme. This makes it possible to focus the instrumenting program development time on writing the essential analysis logics while access to low-level OS and hardware dependencies are streamlined. The proposed architecture is evaluated by instrumenting 135 instruction types in a concrete symbolic execution engine, resulting in a reduction of the instrumenting program size by 59.7%. Furthermore, performance overhead measure against the SPEC CINT2006 programs is limited to 8.7%.
C1 [Momeni, Behnam; Kharrazi, Mehdi] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
C3 Sharif University of Technology
RP Kharrazi, M (corresponding author), Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
EM kharrazi@sharif.edu
RI Momeni, Behnam/ABC-9413-2020; Kharrazi, Mehdi/ABC-7683-2020
OI Kharrazi, Mehdi/0000-0002-1773-8314; Momeni, Behnam/0000-0003-4988-5949
CR [Anonymous], 2007, P 14 ACM C COMP COMM
   [Anonymous], P 26 INT C SOFTW ENG
   [Anonymous], P 6 ACM S INF COMP C
   Bernat AR, 2011, P 10 ACM SIGPLAN SIG
   Cadar Cristian, 2008, USENIX OSDI
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   Hazelwood K., 2006, P 2006 INT C COMP AR
   Heitlager I., 2007, PRACTICAL MODEL MEAS
   Kleckner R, 2010, THESIS
   Laurenzano M. A., 2010, 2010 IEEE INT S PERF
   Le Cam L., 1986, Stat Sci, V1, P78, DOI DOI 10.1214/SS/1177013818
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Meng Xiaozhu., 2016, P 25 INT S SOFTW TES
   MILLER BP, 1995, COMPUTER, V28, P37, DOI 10.1109/2.471178
   MING J., 2016, P 31 IEEE ACM INT C
   Momeni B, 2017, SYMBOLIC EXECUTION E
   Moseley T, 2007, INT S COD GEN OPT CG
   NAWROCKI J, 2001, EUR SOFTW CONTR METR
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Norton J, 2000, LINUX J, V2000, P38
   Page-Jones M., 1988, PRACTICAL GUIDE STRU
   Patil H., 2010, P 8 ANN IEEE ACM INT
   Quinn A, 2016, 12 USENIX S OP SYST
   Saebjoernsen A, 2011, TECHNICAL REPORT
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Seward J, 2005, 2005 USENIX ANN TECH
   Spivey JMichael., 1992, international series in computer science
   Spivey M, 2008, THE FUZZ MANUAL
   Standard Performance Evaluation Corporation (SPEC), 2006, SPEC CINT2006 BENCHM
   Stein C., 2005, Journal of Computer Sciences, V1, P137, DOI 10.3844/jcssp.2005.137.144
   Yin J, 2016, SOFTWARE PRACT EXPER, V46, P341, DOI 10.1002/spe.2313
   Zhao Q, 2008, INT C COMP CONSTR
NR 34
TC 1
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2018
VL 48
IS 9
BP 1642
EP 1659
DI 10.1002/spe.2602
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GP5RZ
UT WOS:000440932300006
DA 2024-07-18
ER

PT J
AU Neelofar, N
   Naish, L
   Ramamohanarao, K
AF Neelofar, N.
   Naish, Lee
   Ramamohanarao, Kotagiri
TI Spectral-based fault localization using hyperbolic function
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deterministic bugs; dynamic analysis; fault localization;
   nondeterministic bugs; optimization methods; spectral debugging
AB Debugging is crucial for producing reliable software. One of the effective bug localization techniques is spectral-based fault localization. It tries to locate a buggy statement by applying an evaluation metric to program spectra and ranking program components on the basis of the score it computes. Here, we propose a restricted class of "hyperbolic" metrics, with a small number of numeric parameters. This class of functions is based on past theoretical and empirical results. We show that optimization methods such as genetic programming and simulated annealing can reliably discover effective metrics over a wide range of data sets of program spectra. We evaluate the performance for both real programs and model programs with single bugs, multiple bugs, "deterministic" bugs, and nondeterministic bugs and find that the proposed class of metrics performs as well as or better than the previous best-performing metrics over a broad range of data.
C1 [Neelofar, N.; Naish, Lee; Ramamohanarao, Kotagiri] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
C3 University of Melbourne
RP Neelofar, N (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
EM neelofar.eme@gmail.com
OI KOTAGIRI, RAMAMOHANARAO/0000-0003-3304-9268
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   [Anonymous], THESIS
   Briand LC, 2007, 18 IEEE INT S SOFTW
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   COLLOFELLO JS, 1989, J SYST SOFTWARE, V9, P191, DOI 10.1016/0164-1212(89)90039-3
   Dallmeier V., 2005, P 6 INT S AUT AN DRI, P99, DOI DOI 10.1145/1085130.1085143
   Debroy V, 2014, J SYST SOFTWARE, V90, P45, DOI 10.1016/j.jss.2013.10.042
   Di Fatta G, 2006, P 3 INT WORKSH SOFTW
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Gonzalez A. F., 2007, THESIS
   Hsu H, 2008, 23 IEEE ACM INT C AU
   Jiang L, 2010, PROC IEEE INT CONF S
   Jiang L, 2005, CSE200532 U CAL
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   JONES JA, 2007, P INT S SOFTW TEST A, P16, DOI DOI 10.1145/1273463.1273468
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Landsberg D, 2015, LECT NOTES COMPUT SC, V9033, P115, DOI 10.1007/978-3-662-46675-9_8
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le TDB, 2015, PROC IEEE INT CONF S, P501
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Le TDB, 2015, EMPIR SOFTW ENG, V20, P1237, DOI 10.1007/s10664-014-9349-1
   Lee H., 2011, The Influence of Sociotropic Judgment on Public Perceptions of Trade Liberalization: Distributional Judgment and Institutional Factors'
   Liblit BenjaminR., 2004, Cooperative Bug Isolation
   Lo D., 2014, P 29 ACM IEEE INT C, P127
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2012, 35 AUSTR COMP SCI C, V122
   Naish L, 2013, ASWEC 2013 MELB AUST
   Naish L, 2016, SIMILARITY SINGLE SE
   Naish L, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P11, DOI 10.1109/ASWEC.2015.12
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Neelofar N, 2017, SOFTWARE PRACT EXPER, V47, P1633, DOI 10.1002/spe.2490
   OCHIAI AKIRA, 1957, BULL JAPANESE SOC SCI FISH, V22, P526
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Papadakis Mike, 2014, P 29 ANN ACM S APPL
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Shaowei Wang, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P556, DOI 10.1109/ASE.2011.6100124
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xia X, 2016, AUTOMAT SOFTW ENG, V23, P43, DOI 10.1007/s10515-014-0165-z
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
NR 53
TC 11
Z9 13
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 641
EP 664
DI 10.1002/spe.2527
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300012
OA Green Published
DA 2024-07-18
ER

PT J
AU Chen, HF
   Jiang, JM
   Hong, Z
   Lin, L
AF Chen, Huifeng
   Jiang, Jian-min
   Hong, Zhong
   Lin, Ling
TI Decomposition of UML activity diagrams
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE decomposition; dependency structure; UML activity diagram
AB In software engineering, UML activity diagrams in general can be useful for a modeling system functional behavior, ranging from the sequences of activities/actions from business processes within an organization or among organizations down to the detail of an algorithm. The stepwise refinement process makes activity diagrams more and more complex. To guarantee the behavior consistency and correctness under refinement, the activity diagrams must be decomposed according to the divide-and-conquer strategy. Traditional decomposition methods adopt manual techniques and cannot ensure the independence and completeness of the obtained subdiagrams. In this paper, a novel decomposition approach is proposed, which can automatically divide an activity diagram into atomic and correct subdiagrams (subdiagrams without abnormal behavioral problems) at the same level. When such an activity diagram specifies the whole functional behavior of a software system, the approach can in fact decompose a system into multiple atomic subsystems. Every atomic subsystem is a completely independent system. It may be independently developed, independently tested, and independently deployed. The method facilitates the management, development, and maintenance of a software system. With the help of a prototype tool, a case study demonstrates the decomposition method.
C1 [Chen, Huifeng; Jiang, Jian-min; Hong, Zhong; Lin, Ling] Fujian Normal Univ, Dept Comp Sci, Fuzhou 350007, Fujian, Peoples R China.
C3 Fujian Normal University
RP Jiang, JM (corresponding author), Fujian Normal Univ, Dept Comp Sci, Fuzhou 350007, Fujian, Peoples R China.
EM jjm@fjnu.edu.cn
RI Ling, Lin/AAB-6198-2019
FU National Natural Science Foundation of China [61305079, 61672157];
   Shanghai Key Laboratory of Trustworthy Computing [07dz22304201401]; NSF
   of Fujian province [2014J01221]
FX National Natural Science Foundation of China, Grant/Award Number:
   61305079 and 61672157; Open Project of Shanghai Key Laboratory of
   Trustworthy Computing, Grant/Award Number: 07dz22304201401; The NSF of
   Fujian province, Grant/Award Number: 2014J01221
CR Abdelhalim I, 2012, P INT C SOFTW ENG FO
   Altisen K, 2002, REAL-TIME SYST, V23, P55, DOI 10.1023/A:1015346419267
   [Anonymous], FN19 DAIMI
   BOLOGNESI T, 1987, COMPUT NETWORKS ISDN, V14, P25, DOI 10.1016/0169-7552(87)90085-7
   Borger E, 2000, P INT C ALG METH SOF
   Chen MS, 2010, DES AUTOM EMBED SYST, V14, P105, DOI 10.1007/s10617-010-9052-4
   Daw Z, 2015, P 13 INT C SOFTW ENG
   DeMarco T., 1978, STRUCTURED ANAL SYST
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   Eshuis R, 2004, IEEE T SOFTWARE ENG, V30, P437, DOI 10.1109/TSE.2004.33
   Grönniger H, 2010, LECT NOTES COMPUT SC, V6394, P331
   Hoare C. A. R., 1983, Communications of the ACM, V26, P100, DOI 10.1145/357980.358021
   Huan Neng Chiu, 1995, International Journal of Physical Distribution & Logistics Management, V25, P4, DOI 10.1108/09600039510093249
   Jiang J, 2011, P AS PAC SERV COMP C
   Jiang J, 2014, P THEOR ASP SOFTW EN
   Jiang JM, 2015, ACM T EMBED COMPUT S, V14, DOI 10.1145/2783438
   Jiang Jian-Min, 2013, ACM SIGSOFT SOFTWARE, V38, P1, DOI DOI 10.1145/2492248.2492267
   Jiang JM, 2012, SCI CHINA INFORM SCI, V55, P2738, DOI 10.1007/s11432-012-4744-y
   Kiczales G, 2005, P 11 EUR C OBJ PROGR
   Knieke C, 2012, TECH REP
   Kuster J, 2006, TECHNICAL REPORT
   Lieberman Ben., 2001, UML ACTIVITY DIAGRAM
   Liskov B., 1974, SIGPLAN Notices, V9, P50, DOI 10.1145/942572.807045
   LUCKHAM DC, 1993, J SYST SOFTWARE, V21, P253, DOI 10.1016/0164-1212(93)90027-U
   Marechal O, 2004, P OTM CONF INT C MOV
   Meyer B., 1986, TREI12CO
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Milner R, 1980, LECT NOTES COMPUTER, V92, DOI [10.1007/3-540-10235-3, DOI 10.1007/3-540-10235-3]
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Nayak A, 2011, SOFTW SYST MODEL, V10, P63, DOI 10.1007/s10270-009-0133-4
   NIELSEN M, 1992, THEOR COMPUT SCI, V96, P3, DOI 10.1016/0304-3975(92)90180-N
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Staines T, 2008, P INT C WORKSH ENG C
   Storrle H., 2004, Nordic Journal of Computing, V11, P279
   van Glabbeek RJ, 2009, THEOR COMPUT SCI, V410, P4111, DOI 10.1016/j.tcs.2009.06.014
   vansGlabbeek RJ, 1995, P 10 ANN IEEE S LOG
   WINSKEL G, 1995, HDB LOG COMP SCI, V4, P1
   [No title captured]
NR 39
TC 4
Z9 6
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2018
VL 48
IS 1
BP 105
EP 122
DI 10.1002/spe.2519
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FP4WK
UT WOS:000417617500006
DA 2024-07-18
ER

PT J
AU Rouhi, A
   Zamani, B
AF Rouhi, Alireza
   Zamani, Bahman
TI A model-based framework for automatic generation of a pattern language
   verifier
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design patterns; Epsilon; metamodeling; pattern languages; pattern
   language verifier
ID DESIGN PATTERNS; METAMODELING APPROACH
AB Design patterns solve recurring design problems. One of the best practices, to solve a whole problem in a specific context, is to apply patterns in the form of a collection of related patterns, ie, a pattern language (PL). However, with the rapid growth of the number of patterns and their interrelationships in PLs and because manual verification of the applied PLs is a tedious and error-prone task, when designing in PL-based fashion, there is a need for tool support to verify the applied PLs. In our previous work, aimed at automating the development process of PL verification tools, a PL formalism was presented. This paper, based on the presented formalism, describes a framework called Pattern Language Verifier Generator (PLVGen) that automatically generates a pattern language verifier (PLV) for any given PL assuming its constituent patterns are represented in the Unified Modeling Language (UML). Using a modelware approach, two metamodels named pattern language specification language (PLSL) and pattern specification language (PSL) are developed to model the given PL and its patterns, respectively. By getting the models of a PL and its patterns, PLVGen automatically generates an epsilon validation language (EVL) module representing the expected PLV. By launching PLV, the applied PL on a UML model will be verified. To evaluate the applicability of PLVGen in practice, we automatically generated three PLVs. The statistics regarding the generated PLVs, as case studies, illustrate the scalability of PLVGen. Compared with similar tools, the generated PLVs are more portable, transparent, and free of ambiguities.
C1 [Rouhi, Alireza; Zamani, Bahman] Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
C3 University of Isfahan
RP Zamani, B (corresponding author), Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
EM zamani@eng.ui.ac.ir
RI Rouhi, Alireza/L-2209-2018; Zamani, Bahman/X-6918-2019
OI Rouhi, Alireza/0000-0003-1494-3467; Zamani, Bahman/0000-0001-6424-1442
CR Alexander Christopher., 1978, A Pattern Language: Towns, Buildings, Construction
   Alnusair A, 2014, INT J SOFTW TOOLS TE, V16, P315, DOI 10.1007/s10009-013-0292-z
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2007, PATTERN ORIENTED SOF
   Bayley I, 2010, J SYST SOFTWARE, V83, P209, DOI 10.1016/j.jss.2009.09.039
   Bergmayr Alexander, 2013, CEUR WORKSHOP PROC, V1104, P22
   Buschmann F., 2007, PATTERN ORIENTED SOF, V4
   Bushmann F., 1996, PATTERN ORIENTED SOF, V1
   Cornils A., 2000, P WORKSH ATTR GRAMM, P21
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   Di Martino B, 2016, SOFTWARE PRACT EXPER, V46, P983, DOI 10.1002/spe.2336
   El Boussaidi G, 2012, SOFTWARE PRACT EXPER, V42, P1495, DOI 10.1002/spe.1145
   Elaasar M, 2006, LECT NOTES COMPUT SC, V4199, P484
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   Fernandez EB, 2001, P PLOP, V1, P307
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   France R, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1231152
   Gamma Erich., 1994, DESIGN PATTERNS
   Gueheneuc Y.G., 2007, P 1 EUROPLOP FOC GRO
   Hafiz M., 2012, PROC ACM INT S NEW I, P139
   Hafiz M, 2013, SOFTWARE PRACT EXPER, V43, P769, DOI 10.1002/spe.1131
   Hentrich Carsten, 2009, Transactions on Pattern Languages of Programming. I, P136, DOI 10.1007/978-3-642-10832-7_6
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Khwaja S, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2926966
   Kim D-K, 2003, P 2 WORKSH SOFTW MOD
   Kim DK, 2015, SOFTWARE PRACT EXPER, V45, P473, DOI 10.1002/spe.2238
   Kim SK, 2009, FORM ASP COMPUT, V21, P397, DOI 10.1007/s00165-008-0090-7
   Kolovos D., 2016, THE EPSILON BOOK
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kurtev I, 2008, LECT NOTES COMPUT SC, V5088, P377
   Le Guennec A, 2000, LECT NOTES COMPUT SC, V1939, P482
   Lovatt Howard C., 2005, Conferences in Research and Practice in Information Technology Series, V43, P69
   Lu LJ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2523108
   Mak JKH, 2004, PROC INT CONF SOFTW, P252, DOI 10.1109/ICSE.2004.1317447
   Noble J, 1998, TOOLS, V28, P2, DOI 10.1109/TOOLS.1998.750020
   ObjectManagement G., 2015, OMG UN MOD LANG OMG
   Paige RF, 2014, SCI COMPUT PROGRAM, V96, P396, DOI 10.1016/j.scico.2014.05.007
   Paige RichardF., 2013, SOFTWARE LANGUAGE EN, V7745, P64
   Rose L, 2013, SOFTW SYST MODEL, V12, P201, DOI 10.1007/s10270-011-0203-2
   Rouhi A, 2016, UISEMDSERG201608
   Rouhi A, 2016, UISEMDSERG201606
   Rouhi A, 2016, INFORM SOFTWARE TECH, V79, P1, DOI 10.1016/j.infsof.2016.06.002
   Rouhi Alireza, 2016, DESIGN PATTERNS CURR, DOI [10.13140/RG.2.2.23108.12162, DOI 10.13140/RG.2.2.23108.12162]
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schmidt DC, 1999, IEEE COMMUN MAG, V37, P54, DOI 10.1109/35.755450
   Stevenson A, 2014, SCI COMPUT PROGRAM, V96, P444, DOI 10.1016/j.scico.2014.05.008
   von Detten M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P299, DOI 10.1145/1810295.1810360
   vonsDetten M, 2010, INTRRI10312 U PED
   Williams JR, 2013, Eessmod@ Models, V1078, P55
   Wimmer M., 2005, Satellite Events at the MoDELS 2005 Conference. MoDELS 2005 International Workshops. Doctoral Symposium, Educators Symposium. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3844), P159
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   Yu DJ, 2015, J SYST SOFTWARE, V103, P1, DOI 10.1016/j.jss.2015.01.019
   Zamani B., 2009, THESIS
   Zamani B, 2013, INFORM SCIENCES, V237, P343, DOI 10.1016/j.ins.2013.02.038
   Zdun U, 2007, SOFTWARE PRACT EXPER, V37, P983, DOI 10.1002/spe.799
   Zhu H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491517
   Zhu H, 2012, FRONT COMPUT SCI-CHI, V6, P40, DOI 10.1007/s11704-012-2902-4
   ZIMMER W, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P345
NR 60
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2017
VL 47
IS 12
BP 1945
EP 1980
DI 10.1002/spe.2514
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM0FF
UT WOS:000414636600005
DA 2024-07-18
ER

PT J
AU Bombonatti, D
   Goulao, M
   Moreira, A
AF Bombonatti, Denise
   Goulao, Miguel
   Moreira, Ana
TI Synergies and tradeoffs in software reuse - a systematic mapping study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE reusability; non-functional requirements; systematic mapping study
ID REUSABLE SOFTWARE; QUALITY; PRODUCTIVITY; REUSABILITY; FRAMEWORK;
   BENEFITS; ADOPTION; SUCCESS
AB Software reuse is a broadly accepted practice to improve software development quality and productivity. Although an object of study in software engineering since the late sixties, achieving effective reuse remains challenging for many software development organizations. This paper reports a systematic mapping study on how reusability relates to other non-functional requirements and how different contextual factors influence the success of a reuse initiative. The conclusion is that the relationships are discussed rather informally, and that human, organizational, and technological domain factors are extremely relevant to a particular reuse context. This mapping study highlights the need for further research to better understand how exactly the different non-functional requirements and context factors affect reusability. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Bombonatti, Denise] IBM Brazil, Rua Tutoa 1157, BR-04007900 Sao Paulo, Brazil.
   [Goulao, Miguel; Moreira, Ana] Univ Nova Lisboa, Dept Informat, NOVA LINCS, P-2829516 Caparica, Portugal.
C3 Universidade Nova de Lisboa
RP Goulao, M (corresponding author), Univ Nova Lisboa, Dept Informat, NOVA LINCS, P-2829516 Caparica, Portugal.
EM mgoul@fct.unl.pt
RI Goulão, Miguel/AAB-8223-2020; Moreira, Ana/F-4770-2011
OI Goulão, Miguel/0000-0002-5356-5203; Moreira, Ana/0000-0003-2046-2766
FU CAPES - MEC [BEX 9202/13-7]
FX We thank the Automated Software Engineering research group of the
   research laboratory NOVA LINCS Ref. UID/CEC/04516/2013 at FCT-UNL for
   their valuable feedback during the conduction of this SMS, as well as
   the anonymous reviewers and the editors for their constructive comments.
   Finally, we thank CAPES - MEC Process BEX 9202/13-7 for partially
   funding this research.
CR Alvaro A., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI DOI 10.1145/1668862.1668863
   Anguswamy R, 2012, INT SYMP EMP SOFTWAR, P161, DOI 10.1145/2372251.2372280
   [Anonymous], THESIS
   [Anonymous], 2011, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/1921532.1921548
   [Anonymous], 1988, ACM SIGSOFT SOFTWARE, DOI DOI 10.1145/43857.43859
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], CMUSEI2010TR033 CARN
   [Anonymous], 1999, P 20 INT C INF SYST
   [Anonymous], 10 EUR C INF SYST EC
   [Anonymous], INT J COMPUTERS
   [Anonymous], IBM SYSTEMS J
   [Anonymous], 7 INT DOCT S EMP SOF
   [Anonymous], P 1997 ACM S APPL CO
   [Anonymous], P 16 INT ACM SIGS SY
   Babenko LP, 1999, CYBERN SYST ANAL+, V35, P314, DOI 10.1007/BF02733479
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   Belli Fevzi, 2013, 2013 IEEE Seventh International Conference on Software Security and Reliability Companion (SERE-C), P145, DOI 10.1109/SERE-C.2013.39
   CALDIERA G, 1991, COMPUTER, V24, P61, DOI 10.1109/2.67210
   CARD D, 1994, IEEE SOFTWARE, V11, P114, DOI 10.1109/52.311078
   Cardino G., 1997, SIGAPP APPL COMPUT R, V5, P21
   Chung L., 1999, NONFUNCTIONAL REQUIR
   Dandashi F., 2002, Proceedings of the 2002 ACM Symposium on Applied Computing, P997
   Doublait S., 1997, Standard View, V5, P84, DOI 10.1145/260558.260565
   ENDRES A, 1993, IEEE SOFTWARE, V10, P58, DOI 10.1109/52.232401
   Etzkorn LH, 2001, INFORM SOFTWARE TECH, V43, P295, DOI 10.1016/S0950-5849(00)00169-5
   Favaro J., 1991, Ada Letters, V11, P115
   Fichman RG, 2001, J SYST SOFTWARE, V57, P45, DOI 10.1016/S0164-1212(00)00116-3
   Fortune J, 2013, SYSTEMS ENG, V16, P304, DOI 10.1002/sys.21232
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   FRAKES WB, 1995, COMMUN ACM, V38, P75, DOI 10.1145/203241.203260
   Frakes WB, 1996, IEEE T SOFTWARE ENG, V22, P274, DOI 10.1109/32.491652
   FRAKES WB, 1994, IEEE SOFTWARE, V11, P15
   Ghiotto P, 2006, IRI 2006: PROCEEDINGS OF THE 2006 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P533
   Glass RL, 1998, IEEE SOFTWARE, V15, P57, DOI 10.1109/52.663785
   Her JS, 2007, INFORM SOFTWARE TECH, V49, P740, DOI 10.1016/j.infsof.2006.08.008
   Hyun Jung La, 2013, 2013 5th International Workshop on Principles of Engineering Service-Oriented Systems (PESOS), P41, DOI 10.1109/PESOS.2013.6635976
   IEEE Standards Association, 2010, 247652010 ISOIECIEEE
   Isoda S., 1992, International Conference on Software Engineering, P320, DOI 10.1109/ICSE.1992.753509
   JOOS R, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.311058
   Kamalraj R., 2009, 2009 IEEE International Advance Computing Conference. IACC 2009, P1624, DOI 10.1109/IADCC.2009.4809260
   Khan RA, 2007, J KING SAUD UNIV-COM, V19, P1
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lee NY, 1997, IEEE T SOFTWARE ENG, V23, P537, DOI 10.1109/32.629492
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Lucrédio D, 2008, J SYST SOFTWARE, V81, P996, DOI 10.1016/j.jss.2007.08.036
   Margono J., 1992, International Conference on Software Engineering, P338, DOI 10.1145/143062.143151
   Martini A., 2012, P 16 INT SOFTWARE PR, V1, P116
   Mascena JCCP, 2005, PROCEEDINGS OF THE 2005 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P72
   Mcilroy D. M., 1968, 1 INT C SOFTW ENG, P88
   Meena Jha, 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P313, DOI 10.1109/MySEC.2011.6140690
   Mellarkod V, 2007, INFORM MANAGE-AMSTER, V44, P613, DOI 10.1016/j.im.2007.03.006
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Mohagheghi P, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363104
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   Nerurkar NW., 2010, ACM SIGSOFT Softw. Eng. Notes, V35, P5, DOI [10.1145/1838687.1838706, DOI 10.1145/1838687.1838706]
   Paul R. A., 1996, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V5, P155, DOI 10.1142/S0218213096000110
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pfleeger SL, 1996, IEEE SOFTWARE, V13, P118, DOI 10.1109/52.526839
   Poulin JS, 1999, COMMUN ACM, V42, P98, DOI 10.1145/301353.301440
   POULIN JS, 1993, IBM SYST J, V32, P567, DOI 10.1147/sj.324.0567
   Powell A., 1998, Software Process Improvement and Practice, V4, P173, DOI 10.1002/(SICI)1099-1670(199809)4:3<173::AID-SPIP101>3.0.CO;2-3
   Rine DC, 1998, J SYST SOFTWARE, V41, P17, DOI 10.1016/S0164-1212(97)10003-6
   Rine DC, 2000, SOFTWARE PRACT EXPER, V30, P685, DOI 10.1002/(SICI)1097-024X(200005)30:6<685::AID-SPE316>3.0.CO;2-V
   Rothenberger MA, 2003, IEEE T SOFTWARE ENG, V29, P825, DOI 10.1109/TSE.2003.1232287
   Rothenberger MA, 2003, DECISION SCI, V34, P83, DOI 10.1111/1540-5915.02252
   Rothenberger MA, 1999, DECISION SCI, V30, P1131, DOI 10.1111/j.1540-5915.1999.tb00921.x
   Sant'Anna C., 2003, P BRAZILIAN S SOFTWA, P19
   Sanz-Rodriguez J, 2011, SOFTWARE QUAL J, V19, P121, DOI 10.1007/s11219-010-9108-5
   Sharma A., 2009, ACM SIGSOFT Software Engineering Notes, V34, P1, DOI DOI 10.1145/1507195.1507215
   Sherif K, 2003, INFORM MANAGE-AMSTER, V41, P159, DOI 10.1016/S0378-7206(03)00045-4
   SINDRE G, 1995, J SYST SOFTWARE, V30, P201, DOI 10.1016/0164-1212(94)00134-9
   Singaravel G, 2010, 2010 INTERNATIONAL CONFERENCE ON INNOVATIVE COMPUTING TECHNOLOGIES (ICICT)
   Slyngstad O.P.N., 2006, P 2006 ACM IEEE INT, P242
   Smolarova M., 1997, Journal of Computing and Information Technology - CIT, V5, P33
   Sommerville I., 2010, SOFTWARE ENG
   Trauter R, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P176, DOI 10.1109/ICSR.1998.685742
   Wartik S, 1999, J SYST SOFTWARE, V46, P13, DOI 10.1016/S0164-1212(98)10085-7
   Washizaki H, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P211, DOI 10.1109/METRIC.2003.1232469
   Wehrmeister MA, 2008, MOMPES 2008: PROCEEDINGS OF THE FIFTH INTERNATIONAL WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P44, DOI 10.1109/MOMPES.2008.9
   Wing Lam, 1996, Software Engineering Notes, V21, P72, DOI 10.1145/235969.235992
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Yongbeom Kim, 1998, Journal of Management Information Systems, V14, P113
   Zhang Juan, 2010, 2nd International Conference on Computer Technology and Development (ICCTD 2010), P294, DOI 10.1109/ICCTD.2010.5645869
NR 87
TC 10
Z9 12
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2017
VL 47
IS 7
SI SI
BP 943
EP 957
DI 10.1002/spe.2416
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EG
UT WOS:000403114200002
DA 2024-07-18
ER

PT J
AU Piraghaj, SF
   Dastjerdi, AV
   Calheiros, RN
   Buyya, R
AF Piraghaj, Sareh Fotuhi
   Dastjerdi, Amir Vahid
   Calheiros, Rodrigo N.
   Buyya, Rajkumar
TI ContainerCloudSim: An environment for modeling and simulation of
   containers in cloud data centers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; simulation; container as a service (CaaS);
   containerized clouds
ID PERFORMANCE
AB Containers are increasingly gaining popularity and becoming one of the major deployment models in cloud environments. To evaluate the performance of scheduling and allocation policies in containerized cloud data centers, there is a need for evaluation environments that support scalable and repeatable experiments. Simulation techniques provide repeatable and controllable environments, and hence, they serve as a powerful tool for such purpose. This paper introduces ContainerCloudSim, which provides support for modeling and simulation of containerized cloud computing environments. We developed a simulation architecture for containerized clouds and implemented it as an extension of CloudSim. We described a number of use cases to demonstrate how one can plug in and compare their container scheduling and provisioning policies in terms of energy efficiency and SLA compliance. Our system is highly scalable as it supports simulation of large number of containers, given that there are more containers than virtual machines in a data center. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Piraghaj, Sareh Fotuhi; Dastjerdi, Amir Vahid; Calheiros, Rodrigo N.; Buyya, Rajkumar] Univ Melbourne, Dept Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic, Australia.
C3 University of Melbourne
RP Piraghaj, SF (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic, Australia.
EM sarehfotuhi@gmail.com
RI Buyya, Rajkumar/C-3424-2009; Calheiros, Rodrigo N./B-5155-2008
OI Calheiros, Rodrigo N./0000-0001-7435-2445
CR Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Blackburn M., 2008, Five Ways to Reduce Data Center Power Consumption
   Calheiros RN, 2013, SOFTWARE PRACT EXPER, V43, P595, DOI 10.1002/spe.2124
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Di S, 2015, SOFTWARE PRACT EXPER, V45, P1571, DOI 10.1002/spe.2303
   Ettikyala K, 2015, INT J COMPUTER APPL, V115, P18
   Fittkau F., 2012, 2012 IEEE 6th International Workshop on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA 2012), P37, DOI 10.1109/MESOCA.2012.6392599
   Frey S., 2010, SOFTWARETECHNIK TREN, V30, P84
   Garg S. K., 2011, Proceedings of the 2011 IEEE 4th International Conference on Utility and Cloud Computing (UCC 2011), P105, DOI 10.1109/UCC.2011.24
   Gupta SKS, 2014, ACM T MODEL COMPUT S, V24, DOI 10.1145/2553083
   Jararweh Yaser, 2013, International Journal of Cloud Computing, V2, P237
   Kliazovich D, 2012, J SUPERCOMPUT, V62, P1263, DOI 10.1007/s11227-010-0504-1
   KyoungSoo Park, 2006, Operating Systems Review, V40, P65, DOI 10.1145/1113361.1113374
   Lim S., 2009, ICIS 2009 P, V91, P1
   Ming Mao, 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P423, DOI 10.1109/CLOUD.2012.103
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   Ostermann S, 2011, LECT NOTES COMPUT SC, V6586, P305, DOI 10.1007/978-3-642-21878-1_38
   Pérez-Castillo R, 2011, COMPUT STAND INTER, V33, P519, DOI 10.1016/j.csi.2011.02.007
   Sriram I, 2009, LECT NOTES COMPUT SC, V5931, P381, DOI 10.1007/978-3-642-10665-1_35
   Stojmenovic I, 2008, IEEE COMMUN MAG, V46, P102, DOI 10.1109/MCOM.2008.4689215
   Tighe M., 2012, 2012 8th International Conference on Network and Service Management (CNSM 2012), P385
   Tomás L, 2014, 2014 INTERNATIONAL CONFERENCE ON CLOUD AND AUTONOMIC COMPUTING (ICCAC 2014), P151, DOI 10.1109/ICCAC.2014.10
   Wickremasinghe B, 2010, INT CON ADV INFO NET, P446, DOI 10.1109/AINA.2010.32
   Zhao W, 2012, IEEE ASIA PACIFIC CLOUD COMPUTING CONGRESS 2012, P20, DOI 10.1109/APCloudCC.2012.6486505
NR 24
TC 96
Z9 106
U1 4
U2 45
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2017
VL 47
IS 4
BP 505
EP 521
DI 10.1002/spe.2422
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM7IR
UT WOS:000395485200001
OA Green Published
DA 2024-07-18
ER

PT J
AU Fu, M
   Zhu, LM
   Sun, D
   Liu, AN
   Bass, L
   Lu, QH
AF Fu, Min
   Zhu, Liming
   Sun, Daniel
   Liu, Anna
   Bass, Len
   Lu, Qinghua
TI Runtime recovery actions selection for sporadic operations on public
   cloud
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE recovery oriented computing; infrastructure operations and automation;
   dependable cloud computing
AB Sporadic operations such as rolling upgrade or machine instance redeployment are prone to unpredictable failures in the public cloud largely because of the inherent high variability nature of public cloud. Previous dependability research has established several recovery methods for cloud failures. In this paper, we first propose eight recovery patterns for sporadic operations on public cloud. We then present the filtering process which filters applicable recovery patterns. We propose an automation mechanism to automatically generate recovery actions for those applicable recovery patterns based on our resource state transition algorithm. We also propose a methodology to evaluate the recovery actions generated for the applicable recovery patterns based on the recovery evaluation metrics of Recovery Time, Recovery Cost, and Recovery Impact. This quantitative evaluation will lead to selection of the acceptable recovery actions. We propose two recovery actions selection mechanisms: one is based on user constraints of the recovery evaluation metrics, and the other one is based on Pareto set searching algorithm. We implement a recovery service and illustrate its applicability by recovering from errors occurring in the rolling upgrade operation on AWS cloud.
C1 [Fu, Min; Zhu, Liming; Sun, Daniel; Liu, Anna; Bass, Len; Lu, Qinghua] CSIRO, Software Syst Res Grp, NICTA, Data 61, Sydney, NSW, Australia.
   [Fu, Min; Zhu, Liming; Sun, Daniel; Liu, Anna; Bass, Len] Univ New South Wales, Sch Comp Sci & Engn, Sydney, NSW, Australia.
   [Lu, Qinghua] China Univ Petr, Coll Comp & Commun Engn, Qingdao, Peoples R China.
C3 Commonwealth Scientific & Industrial Research Organisation (CSIRO);
   Australian National University; University of New South Wales Sydney;
   China University of Petroleum
RP Sun, D (corresponding author), CSIRO, Software Syst Res Grp, NICTA, Data 61, Sydney, NSW, Australia.
EM daniel.sun@data61.csiro.au
RI Zhu, Li/GXH-9801-2022; Lu, Qinghua/AAG-3378-2021
OI Zhu, Liming/0000-0001-5839-3765
FU Australian Government through the Department of Communications;
   Australian Research Council through the ICT Centre of Excellence Program
FX NICTA (Data 61, CSIRO) is funded by the Australian Government through
   the Department of Communications and the Australian Research Council
   through the ICT Centre of Excellence Program.
CR Branke J., 2008, MULTIOBJECTIVE OPTIM
   Colombo C, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480745
   Dumitras T, 2009, LECT NOTES COMPUT SC, V5896, P349, DOI 10.1007/978-3-642-10445-9_18
   Elnozahy EN, 2002, ACM COMPUT SURV, V34, P375, DOI 10.1145/568522.568525
   Fu M, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P185, DOI 10.1109/ASWEC.2015.33
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Huang A.C., 2005, ACM Transactions on Storage (TOS), V1, P38, DOI DOI 10.1145/1044956.1044959
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Juhnke E, 2009, SEAA
   Lin Geng, 2008, 2008 IEEE International Conference on Web Services (ICWS), DOI 10.1109/ICWS.2008.144
   Lu Q, 2013, P 9 ACM SIGSOFT C
   Lu Q, 2014, P HOTCLOUD
   Nelson-Smith S., 2011, Test-Driven Infrastructure with Chef
   Roush E. T., 2001, Proceedings 2001 IEEE International Conference on Cluster Computing, P63, DOI 10.1109/CLUSTR.2001.959952
   Simmonds J., 2010, ASE, P345
   Traverso P., 2005, AUTOMATED PLANNING T
   Velte T., 2010, CLOUD COMPUTING PRAC
   Wang LZ, 2010, NEW GENERAT COMPUT, V28, P137, DOI 10.1007/s00354-008-0081-5
   Wang T, 2014, J SYST SOFTWARE, V89, P19, DOI 10.1016/j.jss.2013.03.060
   Weber Ingo, 2013, LISA 2013 NOV, P75
   Wood T., 2010, HOTCLOUD
   Xu XW, 2014, I C DEPEND SYS NETWO, P252, DOI 10.1109/DSN.2014.94
   Yi S, 2012, IEEE T SERV COMPUT, V5, P512, DOI 10.1109/TSC.2011.44
   Zhao X, 2013, P ICSSP
NR 24
TC 4
Z9 5
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2017
VL 47
IS 2
BP 223
EP 248
DI 10.1002/spe.2427
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EK2RP
UT WOS:000393774700003
DA 2024-07-18
ER

PT J
AU Mirachi, S
   Guerra, VD
   da Cunha, AM
   Dias, LAV
   Villani, E
AF Mirachi, Samoel
   Guerra, Valdir da Costa
   da Cunha, Adilson Marques
   Vieira Dias, Luiz Alberto
   Villani, Emilia
TI Applying agile methods to aircraft embedded software: an experimental
   analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agile methods; aircraft software; DO-178C; model-based development;
   embedded system
ID SYSTEMS
AB This paper discusses the applicability of agile methods to aircraft embedded software development. It presents the main results of an experiment that combines agile practices from Scrum with model-based development and distributed development. The experiment consists of the development of an aircraft cockpit display system divided in five distributed teams. Three features are analysed and quantified, using the output artefacts of each team: the artefacts' quality, the adherence to agile methods, and the adherence to standard DO-178C. The main conclusion of the experiment is that there is a high correlation between the adherence to agile methods and the artefacts' quality, motivating the use of agile methods in aircraft industry. Also, the experiment evinced that agile methods does not specifically address the integration of distributed teams and the hardware/software integration. This lacuna affects the artefacts' quality. The results of the experiment emphasize the importance of concentrating future work in the proposal of specific agile practices for these activities. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Mirachi, Samoel; Guerra, Valdir da Costa; da Cunha, Adilson Marques; Vieira Dias, Luiz Alberto; Villani, Emilia] Inst Tecnol Aeronaut, Praca Marechal Eduardo Gomes 50, BR-12228900 Sao Jose Dos Campos, SP, Brazil.
C3 Comando-Geral de Tecnologia Aeroespacial (CTA); Instituto Tecnologico de
   Aeronautica (ITA)
RP Villani, E (corresponding author), Inst Tecnol Aeronaut, Praca Marechal Eduardo Gomes 50, BR-12228900 Sao Jose Dos Campos, SP, Brazil.
EM evillani@ita.br
RI Dias, Luis Alberto Pereira/L-2554-2017; Mirachi, Samoel/V-9242-2019;
   Villani, Emilia/AAK-6051-2021; Marques da Cunha, Adilson/F-9547-2014
OI Villani, Emilia/0000-0002-6804-1453; Marques da Cunha,
   Adilson/0000-0003-2399-5066
CR Albuquerque CO, 2012, LECT NOTES COMPUT SC, V7335, P576, DOI 10.1007/978-3-642-31137-6_44
   [Anonymous], 2010, 661 ARINC
   Bartley G., 2008, P 27 DIG AV SYST C D
   Bradford R., 2010, P 29 DIG AV SYST C D
   Broy M, 2010, P IEEE, V98, P526, DOI 10.1109/JPROC.2009.2037771
   Chisholm R. A., 2007, THESIS
   Eklund U, 2012, LECT NOTES BUS INF P, V111, P31
   Gumm DC, 2006, IEEE SOFTWARE, V23, P45, DOI 10.1109/MS.2006.122
   Kaisti M, 2013, EURASIP J EMBED SYST, DOI 10.1186/1687-3963-2013-15
   Losada B, 2013, SCI COMPUT PROGRAM, V78, P2268, DOI 10.1016/j.scico.2012.07.022
   Motogna S, 2009, ELECTRON NOTES THEOR, V253, P95, DOI 10.1016/j.entcs.2009.09.030
   Nunes C. L., 2012, P SAE 2012 AER EL AV
   Rubin KS, 2015, M COHN SIGNATURE BOO
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sharp DC, 2010, P IEEE, V98, P621, DOI 10.1109/JPROC.2009.2039631
   Shatil Amir, 2010, Proceedings of the IEEE International Conference on Software, Science, Technology and Engineering (SWSTE 2010), P47, DOI 10.1109/SwSTE.2010.18
   Siqueira F. L., 2005, DISTRIBUTED SOFTWARE
   Smith M, 2009, IEEE SOFTWARE, V26, P50, DOI 10.1109/MS.2009.57
   Stalhane T., 2012, P EUR SAF REL ESREL
NR 19
TC 6
Z9 7
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1465
EP 1484
DI 10.1002/spe.2477
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500001
DA 2024-07-18
ER

PT J
AU Buttazzo, G
   Di Franco, C
   Marinoni, M
AF Buttazzo, Giorgio
   Di Franco, Carmelo
   Marinoni, Mauro
TI Design and analysis of target-sensitive real-time systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE target-sensitive applications; real-time computing; embedded systems
ID SCHEDULING ALGORITHM; TASKS; EDF
AB A significant number of real-time control applications include computational activities where the results have to be delivered at precise instants, rather than within a deadline. The performance of such systems significantly degrades if outputs are generated before or after the desired target time. This work presents a general methodology that can be used to design and analyze target-sensitive applications in which the timing parameters of the computational activities are tightly coupled with the physical characteristics of the system to be controlled. For the sake of clarity, the proposed methodology is illustrated through a sample case study used to show how to derive and verify real-time constraints from the mission requirements. Software implementation issues necessary to map the computational activities into tasks running on a real-time kernel are also discussed to identify the kernel mechanisms necessary to enforce timing constraints and analyze the feasibility of the application. A set of experiments are finally presented with the purpose of validating the proposed methodology. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Buttazzo, Giorgio; Di Franco, Carmelo; Marinoni, Mauro] Scuola Super Sant Anna, Pisa, Italy.
C3 Scuola Superiore Sant'Anna
RP Buttazzo, G (corresponding author), Scuola Super Sant Anna, Pisa, Italy.
EM g.buttazzo@sssup.it
RI Marinoni, Mauro/E-6275-2017
OI Marinoni, Mauro/0000-0002-7041-9777; Di Franco,
   Carmelo/0000-0003-3518-8050
CR ALLEN PK, 1992, 1992 IEEE INTERNATIONAL CONF ON ROBOTICS AND AUTOMATION : PROCEEDINGS, VOLS 1-3, P1850, DOI 10.1109/ROBOT.1992.219958
   BARUAH SK, 1990, REAL-TIME SYST, V2, P301, DOI 10.1007/BF01995675
   Bertogna M, 2010, IEEE T IND INFORM, V6, P579, DOI 10.1109/TII.2010.2049654
   Brandt E., 1998, P INT COMP MUS C SAN, P137
   Buttazzo GC, 2005, REAL-TIME SYST, V29, P5, DOI 10.1023/B:TIME.0000048932.30002.d9
   BUTTAZZO GC, 1994, IEEE CONTR SYST MAG, V14, P49, DOI 10.1109/37.257894
   Buttazzo GC, 2012, P 17 IEEE C EM TECHN, P1
   Chen K, 1996, REAL-TIME SYST, V10, P293, DOI 10.1007/BF00383389
   DANNENBERG RB, 1993, REAL-TIME SYSTEMS SYMPOSIUM: PROCEEDINGS, P258, DOI 10.1109/REAL.1993.393491
   Facchinetti T., 2003, P 5 IFAC INT S INT C, P251
   Farzinvash L, 2009, IEEE INT CONF EMBED, P511, DOI 10.1109/RTCSA.2009.61
   Gai P, 2000, P 2 REAL TIM LIN WOR, P1
   Guerra R, 2008, ECRTS 2008: PROCEEDINGS OF THE 20TH EUROMICRO CONFERENCE ON REAL-TIME SYSTEMS, P309, DOI 10.1109/ECRTS.2008.25
   Guerra R, 2009, EUROMICRO, P97, DOI 10.1109/ECRTS.2009.11
   Houshangi N., 1990, Proceedings 1990 IEEE International Conference on Robotics and Automation (Cat. No.90CH2876-1), P604, DOI 10.1109/ROBOT.1990.126048
   Iyer V., 1997, Proceedings of the 23rd International Computer Music Conference. Thessaloniki, P97
   JENSEN D, 1985, P REAL TIME SYST S I, P112
   Lehoczky J., 1989, Proceedings. Real Time Systems Symposium (Cat. No.89CH2803-5), P166, DOI 10.1109/REAL.1989.63567
   Linderoth M., 2009, P 9 IFAC INT S ROB C, P883
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   LUNNEY HWM, 1974, NATURE, V249, P592, DOI 10.1038/249592a0
   *OSEK GROUP, 2003, OSEK VDX OP SYST SPE
   Tidwell T, 2010, REAL TIM SYST SYMP P, P193, DOI 10.1109/RTSS.2010.28
   Yao G, 2011, REAL-TIME SYST, V47, P198, DOI 10.1007/s11241-010-9113-6
NR 24
TC 3
Z9 3
U1 0
U2 4
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2016
VL 46
IS 9
BP 1181
EP 1200
DI 10.1002/spe.2373
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DS8KO
UT WOS:000381032300002
OA Green Published
DA 2024-07-18
ER

PT J
AU Zhu, XY
   Whitehead, EJ
   Sadowski, C
   Song, QB
AF Zhu, Xiaoyan
   Whitehead, E. James
   Sadowski, Caitlin
   Song, Qinbao
TI An analysis of programming language statement frequency in C, C plus
   plus , and Java source code
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE statement frequency; metrics; source code
ID EMPIRICAL-ANALYSIS; C++
AB Statement frequency data can inform programming language research and provide a solid basis for frequency-based code analysis. This paper presents an analysis of programming language statement frequency in a large corpus of C, C++, and Java source code, comprised of more than 54 million lines of code. Across these languages, the top four work-performing statement types are Method/Function Call, Assignment, If, and Return. As compared to studies of Formula Translating System, Common Business Oriented Language and Programming Language One in the 1970s, the main change is the prevalence of method/function calls. Statement use frequency across languages is remarkably similar, and within each individual language, most statement types have a frequency distribution that occupies a small range. A more detailed examination of assignment and looping statement types shows that many assignments simply involve copying of data and that C++/Java use for statements more than C. Copyright (C) 2014 John Wiley & Sons, Ltd.
C1 [Zhu, Xiaoyan; Song, Qinbao] Xi An Jiao Tong Univ, Xian 710049, Shaanxi, Peoples R China.
   [Whitehead, E. James; Sadowski, Caitlin] Univ Calif Santa Cruz, Santa Cruz, CA 95064 USA.
C3 Xi'an Jiaotong University; University of California System; University
   of California Santa Cruz
RP Zhu, XY (corresponding author), Xi An Jiao Tong Univ, Xian 710049, Shaanxi, Peoples R China.
EM zhu.xy@mail.xjtu.edu.cn
RI zhu, xin/JXN-3188-2024; 朱, 欣妍/JZD-6639-2024
FU National Natural Science Foundation of China [61402355, 61373046]
FX This work is supported by the National Natural Science Foundation of
   China under grant 61402355 and 61373046. We would like to thank
   Professor Lutz Prechelt and reviewers of the paper for their patience
   and their detailed comments and feedback, which have improved the paper
   in many ways. We also acknowledge Jonathan Finger whose preliminary work
   on a class project at UC Santa Cruz inspired this paper.
CR Abebe SL, 2009, EUR CON SFTWR MTNCE, P189, DOI 10.1109/CSMR.2009.61
   ALJARRAH MM, 1979, SOFTWARE PRACT EXPER, V9, P341, DOI 10.1002/spe.4380090502
   Bhattacharya P, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P171, DOI 10.1145/1985793.1985817
   CALDER B, 1994, J PROGRAM LANG, V2, P313
   Collard ML, 2003, PROG COMPREHEN, P134
   Collberg C, 2007, SOFTWARE PRACT EXPER, V37, P581, DOI 10.1002/spe.776
   COOK RP, 1982, SOFTWARE PRACT EXPER, V12, P195, DOI 10.1002/spe.4380120209
   Counsell S, 2000, J SYST SOFTWARE, V53, P15, DOI 10.1016/S0164-1212(00)00004-2
   Dyer R, 2014, ICSE 14 IN PRESS
   Elshoff J. L., 1976, Software - Practice and Experience, V6, P505, DOI 10.1002/spe.4380060407
   Fyfe R., 1997, THESIS J COOK U N QU
   Grechanik M, 2010, IEEE INT S EMP SOFTW
   Harrison R, 1996, SOFTWARE ENG J, V11, P247, DOI 10.1049/sej.1996.0030
   Herraiz I, 2011, ICSOFT 2011: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATABASE TECHNOLOGIES, VOL 2, P5
   Knuth D. E., 1971, Software - Practice and Experience, V1, P105, DOI 10.1002/spe.4380010203
   LangPopGroup, TECHNICAL REPORT
   Maletic J, 2002, P 10 IEEE INT WORKSH, P3
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Parnin C., 2011, P 8 WORK C MIN SOFTW, P3, DOI [10.1145/1985441.1985446, DOI 10.1145/1985441.1985446]
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   ROBINSON SK, 1976, COMPUT J, V19, P56, DOI 10.1093/comjnl/19.1.56
   Rocha M. T., 2011, 23 INT C SOFTW ENG K, P426
   SAAL HJ, 1977, COMPUT LANG, V2, P47, DOI 10.1016/0096-0551(77)90007-8
   Sewe A, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P657
   Sutton A, 2007, INFORM SOFTWARE TECH, V49, P212, DOI 10.1016/j.infsof.2006.10.011
   Tempero E, 2008, LECT NOTES COMPUT SC, V5142, P667, DOI 10.1007/978-3-540-70592-5_28
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Tempero E, 2009, IEEE AUS SOFT ENGR, P91, DOI 10.1109/ASWEC.2009.19
   Zhang HY, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P230, DOI 10.1109/ASPEC.2007.64
NR 30
TC 3
Z9 3
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2015
VL 45
IS 11
BP 1479
EP 1495
DI 10.1002/spe.2298
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LI
UT WOS:000363500900002
DA 2024-07-18
ER

PT J
AU Rehman, ASU
   de Oliveira, AB
   Tripunitara, M
   Fischmeister, S
AF Rehman, Ahmad Saif Ur
   de Oliveira, Augusto Born
   Tripunitara, Mahesh
   Fischmeister, Sebastian
TI The use of mTags for mandatory security: a case study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE security; research; microkernels
ID INTEGRITY PROTECTION
AB mTags is an efficient mechanism that augments inter-thread messages with lightweight metadata. We introduce and discuss a case study that we have conducted in the use of mTags for realizing a kind of mandatory security. Although mTags can be implemented for any message passing thread-based system, we consider an implementation of it in the POSIX-compliant QNX Neutrino, a commercial microkernel-based system. The approach to mandatory security that we adopt is Usable Mandatory Integrity Protection, which has been proposed in recent research. We call our adaptation of Usable Mandatory Integrity Protection using mTags, MIP. We discuss the challenges we faced, and our design and implementation that overcomes these challenges. We discuss the performance of our implementation for well-established benchmarks. We conclude with the observation that mTags can be useful and practical to realize mandatory security in realistic systems. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Rehman, Ahmad Saif Ur; de Oliveira, Augusto Born; Tripunitara, Mahesh; Fischmeister, Sebastian] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Tripunitara, M (corresponding author), Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
EM tripunit@uwaterloo.ca
CR Accetta M., 1986, USENIX Association Summer Conference Proceedings, Atlanta 1986, P93
   [Anonymous], 2010, P 9 USENIX C OP SYST
   Badger L, 1996, P 5 USENIX UNIX SEC, P127
   Biba, 1977, 76372 ESDTR MITRE CO
   Clark D. D., 1987, Proceedings of the 1987 IEEE Symposium on Security and Privacy (Cat. No.87CH2416-6), P184
   de Oliveira Augusto Born, 2012, Operating Systems Review, V46, P67, DOI 10.1145/2331576.2331587
   Efstathopoulos P., 2005, P 20 ACM S OP SYST P, P17, DOI DOI 10.1145/1095810.1095813
   Fraser T, 2000, P IEEE S SECUR PRIV, P230, DOI 10.1109/SECPRI.2000.848460
   Goldberg I., 1996, P 6 C USENIX SEC S F, V6
   Heiser G, 1998, SOFTWARE PRACT EXPER, V28, P901, DOI 10.1002/(SICI)1097-024X(19980725)28:9<901::AID-SPE181>3.0.CO;2-7
   HILDEBRAND D, 1992, PROCEEDINGS OF THE USENIX WORKSHOP ON MICRO-KERNELS AND OTHER KERNEL ARCHITECTURES, P113
   Li NH, 2007, P IEEE S SECUR PRIV, P164, DOI 10.1109/SP.2007.37
   MCILROY MD, 1992, SOFTWARE PRACT EXPER, V22, P673, DOI 10.1002/spe.4380220805
   Mysore S, 2008, ACM SIGPLAN NOTICES, V43, P211, DOI 10.1145/1353536.1346308
   National Security Agency, SEC ENH LIN
   Norcott WD, FILESYSTEM BENCHMARK
   Patil S, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE EIGHTEENTH LARGE INSTALLATION SYSTEM ADMINISTRATION CONFERENCE, P67
   Provos N, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P231
   QNX, EMB T FIL SYST
   Spencer R, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE EIGHTH USENIX SECURITY SYMPOSIUM (SECURITY '99), P123
   WEINHOLD C, 2008, P 3 ACM SIGOPS EUROS, P81
   Wichers D. R., 1990, 13th National Computer Security Conference. Proceedings. Information Systems Security. Standards - the Key to the Future, P340
   Zeldovich N., 2008, OSDI, V8, P225
   Zeldovich N, 2006, P 7 USENIX S OP SYST, V7, P19
NR 24
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2014
VL 44
IS 12
BP 1511
EP 1523
DI 10.1002/spe.2222
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AT2AR
UT WOS:000344733600005
DA 2024-07-18
ER

PT J
AU Ding, WL
   Han, YB
   Wang, J
   Zhao, ZF
AF Ding, Weilong
   Han, Yanbo
   Wang, Jing
   Zhao, Zhuofeng
TI Feature-based high-availability mechanism for quantile tasks in
   real-time data stream processing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cloud Computing; data stream; quantile feature; high availability;
   histogram
ID ALGORITHMS; STATISTICS
AB Under distributed Cloud environment, the real-time and continuous data stream makes the availability during processing essential but expensive. For aggregation tasks of data stream processing systems, traditional replica-based high-availability mechanisms require large overheads at run-time and long recovery latency at fail-time, because of specific nature of aggregations. In this paper, we focus on the typical quantile tasks and propose a feature-based high-availability mechanism to reduce related overhead and the latency. With the help of monitor module, quantile feature is maintained incrementally through histogram synopsis over time-based sliding window, and the failed quantile tasks can be recovered precisely with high probability in an efficient way. The effectiveness has been analyzed theoretically, and meanwhile, the acceptable tradeoff between overheads and performance has been demonstrated by comprehensive experiments on both synthetic and real data. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Ding, Weilong; Han, Yanbo; Wang, Jing; Zhao, Zhuofeng] North China Univ Technol, Res Ctr Cloud Comp, Beijing, Peoples R China.
   [Ding, Weilong] Chinese Acad Sci, Inst Comp Technol, Beijing, Peoples R China.
   [Ding, Weilong] Chinese Acad Sci, Grad Univ, Beijing, Peoples R China.
C3 North China University of Technology; Chinese Academy of Sciences;
   Institute of Computing Technology, CAS; Chinese Academy of Sciences;
   University of Chinese Academy of Sciences, CAS
RP Ding, WL (corresponding author), North China Univ Technol, Res Ctr Cloud Comp, Beijing, Peoples R China.
EM dingweilong@software.ict.ac.cn
OI Ding, Weilong/0000-0002-9982-5488
FU State Key Program of National Natural Science of China [61033006]; Key
   Program of Natural Science Foundation of Beijing [4131001, 4133083];
   Project of Construction of Innovative Teams and Teacher Career
   Development for Universities and Colleges under Beijing Municipality
   [IDHT20130502]
FX The authors would like to acknowledge the valuable contributions made by
   the anonymous reviewers of this article. This work is financially
   supported by the State Key Program of National Natural Science of China
   (Grant No. 61033006), the Key Program of Natural Science Foundation of
   Beijing (Grant No. 4131001 and 4133083) and the Project of Construction
   of Innovative Teams and Teacher Career Development for Universities and
   Colleges under Beijing Municipality (Grant No. IDHT20130502).
CR Abadi D.J., 2005, CIDR, P277
   Ahmad Yanif., 2005, Proceedings of the 2005 ACM SIGMOD international conference on Management of data, SIGMOD '05, P882, DOI DOI 10.1145/1066157.1066274
   Amini Lisa., 2006, Proceedings of the 4th inter- national workshop on Data mining standards, services and platforms, DMSSP '06, P27
   [Anonymous], 2010, Proceedings of the 7th USENIX Conference on Networked Systems Design and Implementation, NSDI'10, (USA)
   [Anonymous], 2007, Data streams: models and algorithms, DOI [10.1007/978-0-387-47534-9_9, DOI 10.1007/978-0-387-47534-9_9]
   Arasu A., 2004, P 23 ACM SIGMOD SIGA, P286, DOI [DOI 10.1145/1055558.1055598>, 10.1145/1055558.1055598]
   Babcock B., 2003, P 22 ACM SIGMOD SIGA, P234, DOI DOI 10.1145/773153.773176
   Balazinska M, 2005, P 2005 ACM SIGMOD IN, P13
   Balazinska M, 2008, ACM T DATABASE SYST, V33, DOI 10.1145/1331904.1331907
   Chaudhuri S., 1998, SIGMOD Record, V27, P436, DOI 10.1145/276305.276343
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Cugola G, 2010, PROCESSING FLOWS INF
   Datar M, 2002, SIAM PROC S, P635
   Ding WL, 2012, IEEE INT ENTERP, P196, DOI 10.1109/EDOCW.2012.34
   Ding WL, 2012, 2012 INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICE COMPUTING (CSC), P212, DOI 10.1109/CSC.2012.40
   EsperTech, 2011, ESPERHA DROP HIGH AV
   Fu C, 2010, COMPUTER DESIGN APPL
   Gibbons PB, 2002, ACM T DATABASE SYST, V27, P261, DOI 10.1145/581751.581753
   Gu YZ, 2009, PROCEEDINGS OF 2009 INTERNATIONAL SYMPOSIUM ON AIRCRAFT AIRWORTHINESS, P1, DOI 10.1145/1646468.1646471
   Guha S., 2006, PODS, P273, DOI DOI 10.1145/1142351.1142390
   Guha S., 2001, STOC, P471, DOI DOI 10.1145/380752.380841
   Guha S, 2006, ACM T DATABASE SYST, V31, P396, DOI 10.1145/1132863.1132873
   Guha S, 2009, SIAM J COMPUT, V38, P2044, DOI 10.1137/07069328X
   Hunt Patrick, 2010, P 2010 USENIX ANN TE, P11, DOI DOI 10.5555/1855840.1855851
   Hwang J-H, 2003, COMPARISON STREAM OR
   Hwang JH, 2007, PROC INT CONF DATA, P151
   Hwang JH, 2005, PROC INT CONF DATA, P779
   libevent, 2011, LIB EV NOT LIB
   Liu Z., 2005, Proceedings of the 2004 ACM Symposium on Applied Computing, P634
   Madden S, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P131, DOI 10.1145/1060289.1060303
   Manku G. S., 1998, SIGMOD Record, V27, P426, DOI 10.1145/276305.276342
   Menzel M., 2012, Proceedings of the 21st international conference on World Wide Web, New York, P979
   Neumeyer L., 2010, Proceedings 2010 10th IEEE International Conference on Data Mining Workshops (ICDMW 2010), P170, DOI 10.1109/ICDMW.2010.172
   Oracle, 2011, OR COMP EV PROC 11G
   Palpanas T., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P802
   Peng XM, 2008, 2008 WORKSHOP ON POWER ELECTRONICS AND INTELLIGENT TRANSPORTATION SYSTEM, PROCEEDINGS, P181, DOI 10.1109/PEITS.2008.77
   Piatetsky-Shapiro G., 1984, SIGMOD Record, V14, P256, DOI 10.1145/971697.602294
   Rajaraman Anand., 2011, Mining of Massive Datasets, DOI DOI 10.1017/CBO9781139058452
   Repantis T., 2008, P 2 INT C DISTRIBUTE, P181
   Shah MA, 2003, PROC INT CONF DATA, P25, DOI 10.1109/ICDE.2003.1260779
   Shah MehulA., 2004, SIGMOD 04, P827
   VITTER JS, 1985, ACM T MATH SOFTWARE, V11, P37, DOI 10.1145/3147.3165
   Wang HL, 2012, INT CONF CLOUD COMP, DOI 10.1109/CloudCom.2012.6427595
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P739, DOI 10.1016/j.future.2012.09.001
   Yang B, 2007, 2007 SECOND INTERNATIONAL CONFERENCE ON BIO-INSPIRED COMPUTING: THEORIES AND APPLICATIONS, P136, DOI 10.1109/BICTA.2007.4806436
   [杨蓓 Yang Bei], 2008, [计算机研究与发展, Journal of Computer Research and Development], V45, P287
   Zhang Qi, 2007, P 16 ACM C C INF KNO, P1023
   Zhe Zhang, 2010, Proceedings of the 2010 IEEE 30th International Conference on Distributed Computing Systems. ICDCS 2010, P138, DOI 10.1109/ICDCS.2010.81
NR 48
TC 9
Z9 9
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2014
VL 44
IS 7
SI SI
BP 855
EP 871
DI 10.1002/spe.2244
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ5NN
UT WOS:000337731000007
DA 2024-07-18
ER

PT J
AU Grozev, N
   Buyya, R
AF Grozev, Nikolay
   Buyya, Rajkumar
TI Inter-Cloud architectures and application brokering: taxonomy and survey
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cloud computing; Inter-Cloud; Multi-Cloud; Federation; Application
   brokering
AB Although Cloud computing itself has many open problems, researchers in the field have already made the leap to envision Inter-Cloud computing. Their goal is to achieve better overall Quality of Service (QoS), reliability and cost efficiency by utilizing multiple clouds. Inter-Cloud research is still in its infancy, and the body of knowledge in the area has not been well defined yet. In this work, we propose and motivate taxonomies for Inter-Cloud architectures and application brokering mechanisms. We present a detailed survey of the state of the art in terms of both academic and industry developments (20 projects), and we fit each project onto the discussed taxonomies. We discuss how the current Inter-Cloud environments facilitate brokering of distributed applications across clouds considering their nonfunctional requirements. Finally, we analyse the existing works and identify open challenges and trends in the area of Inter-Cloud application brokering. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Grozev, Nikolay; Buyya, Rajkumar] Univ Melbourne, Dept Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Grozev, N (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic 3010, Australia.
EM ngrozev@student.unimelb.edu.au
RI Buyya, Rajkumar/C-3424-2009
CR [Anonymous], 2006, TECHNICAL REPORT
   [Anonymous], TECHNIUM CLOUDBOOK C
   [Anonymous], POLYGLOT PERSISTENCE
   [Anonymous], P IEEE INT C CLOUD C
   [Anonymous], TECHNICAL REPORT
   [Anonymous], TECHNICAL REPORT
   [Anonymous], TECHNICAL REPORT
   [Anonymous], TECHNICAL REPORT
   [Anonymous], P C HOT TOP CLOUD CO
   [Anonymous], 2009, TECHNICAL REPORT
   [Anonymous], P INT C INT COMP
   [Anonymous], SPECIAL PUBLICATION
   Avetisyan AI, 2010, COMPUTER, V43, P35, DOI 10.1109/MC.2010.111
   Barker A, 2008, LECT NOTES COMPUT SC, V4967, P746
   Beloglazov A, 2011, ADV COMPUT, V82, P47, DOI 10.1016/B978-0-12-385512-1.00003-7
   Bernstein D., 2011, 2011 Annual SRII Global Conference (SRII), P293, DOI 10.1109/SRII.2011.40
   Bernstein David, 2010, Proceedings of the 2010 IEEE Congress on Services (SERVICES-1), P431, DOI 10.1109/SERVICES.2010.131
   Bernstein D, 2010, EMERGING 2010: THE SECOND INTERNATIONAL CONFERENCE ON EMERGING NETWORK INTELLIGENCE, P30
   Bernstein D, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES, P328, DOI 10.1109/ICIW.2009.55
   BREWER EA, 2000, PODC, V7, DOI [10.1145/343477.343502, DOI 10.1145/343477.343502]
   Brewer E, 2012, COMPUTER, V45, P23, DOI 10.1109/MC.2012.37
   Buyya R, 2010, LECT NOTES COMPUT SC, V6081, P13
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Calheiros RN, 2012, FUTURE GENER COMP SY, V28, P1350, DOI 10.1016/j.future.2012.03.010
   Carlini E, 2012, LECT NOTES COMPUT SC, V7155, P159, DOI 10.1007/978-3-642-29737-3_19
   Cattell R, 2010, SIGMOD REC, V39, P12, DOI 10.1145/1978915.1978919
   Celesti Antonio, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P337, DOI 10.1109/CLOUD.2010.46
   di Costanzo A, 2009, IEEE INTERNET COMPUT, V13, P24, DOI 10.1109/MIC.2009.108
   Ferrer AJ, 2012, FUTURE GENER COMP SY, V28, P66, DOI 10.1016/j.future.2011.05.022
   Foster I., 2008, GRID COMPUTING ENV W, P1
   Fowler M., Polyglot persistence
   Hassan MM, 2010, ANN TELECOMMUN, V65, P669, DOI 10.1007/s12243-010-0184-0
   Hassan MM, 2009, 2009 WORLD CONFERENCE ON SERVICES PART, P9, DOI 10.1109/SERVICES-2.2009.20
   Jackson K. R., 2010, CLOUD COMP TECHN SCI, P159, DOI [10.1109/cloudcom.2010.69, DOI 10.1109/CLOUDCOM.2010.69]
   Kang X, 2011, IEEE ICC
   Keahey K, 2009, IEEE INTERNET COMPUT, V13, P43, DOI 10.1109/MIC.2009.94
   Kecskemeti G., 2012, Proceedings of the 2012 20th Euromicro International Conference on Parallel, Distributed and Network-Based Processing (PDP 2012), P575, DOI 10.1109/PDP.2012.41
   Kozuch MA, 2009, FIRST WORKSHOP ON AUTOMATED CONTROL FOR DATACENTERS AND CLOUDS (ACDC '09), P43
   Lewis G., 2010, Basics About cloud computing
   Lucas Simarro Jose Luis, 2011, 2011 International Conference on High Performance Computing & Simulation, P1
   Marosi AC, 2011, CLOUD COMPUTING 2011: THE SECOND INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, GRIDS, AND VIRTUALIZATION, P7
   McGough A. S., 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P364, DOI 10.1109/DASC.2011.78
   McGough A. S., 2010, Proceedings of the 2010 IEEE/ACM Int'l Conference on Green Computing and Communications (GreenCom) and Int'l Conference on Cyber, Physical and Social Computing (CPSCom), P88, DOI 10.1109/GreenCom-CPSCom.2010.131
   Petcu D, 2011, LECT NOTES COMPUT SC, V6569, P1
   Raicu I, 2008, P WORKSHOP MANYTASK, P1
   Rochwerger B, 2009, IBM J RES DEV, V53, DOI 10.1147/JRD.2009.5429058
   Rochwerger B, 2011, COMPUTER, V44, P44, DOI 10.1109/MC.2011.64
   Rodero-Merino L, 2010, FUTURE GENER COMP SY, V26, P1226, DOI 10.1016/j.future.2010.02.013
   Sakashita Y, 2012, FUJITSU SCI TECH J, V48, P143
   Zachos K., 2011, 2011 Workshop on Requirements Engineering for Systems, Services and Systems-of-Systems (RES^4), P16, DOI 10.1109/RESS.2011.6043932
NR 50
TC 275
Z9 296
U1 0
U2 28
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2014
VL 44
IS 3
SI SI
BP 369
EP 390
DI 10.1002/spe.2168
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA7KI
UT WOS:000331275900008
OA Bronze
DA 2024-07-18
ER

PT J
AU Nica, M
   Nica, S
   Wotawa, F
AF Nica, Mihai
   Nica, Simona
   Wotawa, Franz
TI On the use of mutations and testing for debugging
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automated debugging; distinguishing test cases; test case generation
ID DIAGNOSIS; PROGRAMS
AB Tools for automated fault localization usually generate too many bug candidates depending on the underlying technique. Hence, more information is required in order to further restrict the number of bug candidates. Approaches that rely on specific knowledge of the program to be debugged, such as variable values at specific positions in the source code, are not easily accessible for users especially in the case of software maintenance. In order to avoid this problem, we suggest integrating testing to restrict the number of bug candidates. In particular, we propose computing possible corrections of the program and from this distinguishing test cases. A distinguishing test case is a test that reveals different output values for two program variants given the same input values. Besides the formal definitions and algorithms, we extend the first empirical results of our approach in this paper. The obtained empirical results show that the use of mutations and distinguishing test cases reduces the number of bug candidates by more than 90% on average. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Nica, Mihai; Nica, Simona; Wotawa, Franz] Graz Univ Technol, Inst Software Technol, A-8010 Graz, Austria.
C3 Graz University of Technology
RP Wotawa, F (corresponding author), Graz Univ Technol, Inst Software Technol, Inffeldgasse 16B-2, A-8010 Graz, Austria.
EM wotawa@ist.tugraz.at
OI Wotawa, Franz/0000-0002-0462-2283
FU Austrian Federal Ministry of Economics (bm:wa); province of Styria;
   Steirische Wirtschaftsforderungsgesellschaft mbH. (SFG); city of Vienna
   in terms of the center for innovation and technology (ZIT); Austrian
   Science Fund (FWF) [P20199-N15]; Austrian Science Fund (FWF) [P20199]
   Funding Source: Austrian Science Fund (FWF)
FX The research herein is partially conducted within the competence network
   Softnet Austria (www.soft-net.at) and funded by the Austrian Federal
   Ministry of Economics (bm:wa), the province of Styria, the Steirische
   Wirtschaftsforderungsgesellschaft mbH. (SFG), and the city of Vienna in
   terms of the center for innovation and technology (ZIT) and the Austrian
   Science Fund (FWF), grant number P20199-N15.
CR Abreu R., 2007, On the Accuracy of Spectrum-based Fault Localization, P89
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   [Anonymous], 2009, C SPAN ASS ART INT
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Bond G., 1994, CRITICAL ANAL MODEL
   BOND GW, 1994, LOGIC PROGRAMS CONSI
   Budd DeMillo R, 1980, P 7 ACM S PRINC PROG, P220
   Ceballos R, 2006, LECT NOTES ARTIF INT, V4177, P200
   Collavizza H, 2007, LECT NOTES COMPUT SC, V4741, P49
   CONSOLE L, 1993, IJCAI-93, VOLS 1 AND 2, P1494
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Debroy V, 2010, USING MUTATION AUTOM, P65
   DEKLEER J, 1987, ARTIF INTELL, V32, P97, DOI 10.1016/0004-3702(87)90063-4
   DeMillo R. A., 1996, SIGSOFT Software Engineering Notes, V21, P121, DOI [10.1145/229000.226310, 10.1145/226295.226310]
   Esser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P342
   Felfernig A, 2000, FR ART INT, V54, P146
   Felfernig A, 2000, ARTIFICIAL INTELLIGENCE IN DESIGN '00, P169
   Friedrich G, 1999, ARTIF INTELL, V111, P3, DOI 10.1016/S0004-3702(99)00034-X
   Gent IP, 2006, FRONT ARTIF INTEL AP, V141, P98
   Gotlieb A., 1998, Software Engineering Notes, V23, P53, DOI 10.1145/271775.271790
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel Bogdan., 1997, P 3 INT WORKSHOP AUT, P43
   Kusumoto S., 2002, Empirical Software Engineering, V7, P49, DOI 10.1023/A:1014823126938
   Liver B., 1994, P 5 INT WORKSH PRINC, P179
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mayer W, 2002, FRONT ARTIF INTEL AP, V77, P422
   Mayer W, 2002, FRONT ARTIF INTEL AP, V77, P417
   Mayer W., 2007, STATIC HYBRID ANAL M
   Mayer W., 2003, Proceedings of the 2003 International Workshop on Automated and Analysis-Driven Debugging, AADEBUG'03, P55
   Mayer Wolfgang., 2008, PROC 19 INT WORKSH P, P127
   MCILRAITH S, 1994, MOR KAUF R, P449
   Nica M, 2008, 19 INT WORKSH PRINC, P135
   Nica M, 2010, LECT NOTES COMPUT SC, V6303, P88, DOI 10.1007/978-3-642-15585-7_9
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Peischl B, 2006, IEEE DES TEST COMPUT, V23, P8, DOI 10.1109/MDT.2006.5
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Schuler David, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P45, DOI 10.1109/ICST.2010.30
   Shapiro EY., 1983, Algorithmic Program Debugging
   Shirley MH, 1983, IEEE INT C COMP DES, P341
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wotawa Franz, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P325, DOI 10.1109/ICSTW.2010.11
   Wotawa Franz, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P836
   Wotawa F, 2002, ARTIF INTELL, V135, P125, DOI 10.1016/S0004-3702(01)00161-8
   Wotawa F, 2001, APPL INTELL, V16, P71, DOI 10.1023/A:1012821511498
   Wotawa F, 2008, INFORM-J COMPUT INFO, V32, P359
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang X., 2005, 6 INT S AUT AN DRIV, P33
NR 55
TC 7
Z9 9
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2013
VL 43
IS 9
SI SI
BP 1121
EP 1142
DI 10.1002/spe.1142
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 195OH
UT WOS:000322712200006
DA 2024-07-18
ER

PT J
AU Park, J
   Lee, SW
   Rine, DC
AF Park, Jaeyong
   Lee, Seok-Won
   Rine, David C.
TI UML design pattern metamodel-level constraints for the maintenance of
   software evolution
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design pattern; UML; software maintenance
ID CONFORMANCE; STABILITY; MODELS
AB Software maintenance including design is difficult because it is usually performed on someone else's work over a period of time. Maintaining a pattern-based design is especially much more difficult when the information on specific patterns that have been used are not available in the corresponding design documents. Also, finding a maintainer who has a similar level of knowledge on specific patterns that the initial designer had is not easy. Pattern-based design, the use of design patterns during the software design process, has become widely used in the object-oriented community because of its many benefits such as its reuse. However, the defects in pattern-based design can be introduced during the design maintenance phase when the changes are made to the requirements and the initial design, but the conformance to the original patterns is neglected. This conformance process is laborious and time consuming; no systematic process exists to guide the defects discovery and maintenance. Also, deep and correct knowledge of design patterns and their characteristics are required because this process is conducted by human experts. Failure to follow this conformance process and to maintain correct designs during software design evolution may cause serious problems in later software development and maintenance stages by not providing the benefits of pattern-based design that would have been possible if followed correctly. There is a strong need of a systematic design and maintenance method for preventing defects in design patterns introduced during the evolution of pattern-based software design and its maintenance. Because conventional UML design methods do not provide such systematic ways of assessing pattern-based design conformance to the evolutionary changes, we have developed the pattern instance changes with UML profiles (PICUP) design method, which is an improved design method for perfective and corrective UML pattern-based design maintenance and assessment. Design pattern in UML profiles (DPUP) is developed for the use of instantiation, maintenance, and assessment of UML pattern-based designs to support the formal specification of a design pattern. DPUPs, as the main part of the PICUP design method, provide metamodel-level UML design constraints using UML stereotype notations and metamodel-level Object Constraint Language design constraints. Assessment of pattern-based designs in UML class diagram with the corresponding DPUPs enforces maintainers to make necessary and correct changes to keep the principles of the original designs. Pattern-related information is annotated using stereotype notations to help assess pattern-based designs when changes are made. Furthermore, the structural conformance checking of a given UML pattern-based design can be automated by using the assessment tool. The major contributions of this paper are: (i) specifying design patterns using extended UML profile; (ii) providing a means of how to instantiate pattern-based designs from DPUPs with naming conventions; and (iii) providing design constraints for maintaining pattern-based design to guide correct changes of a given design in PICUP method. Explanatory type case studies were performed to better understand and evaluate the effectiveness of the PICUP design method with DPUPs.
   Answers to the case study questionnaires and the pattern defects discovered from the case studies support the hypothesis that the PICUP method is an improved design method that ensures structural conformance of UML pattern-based designs to the corresponding design patterns during perfective and corrective design maintenance for software systems. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Park, Jaeyong] Lib Corp, Dept R&D, Inwood, WV USA.
   [Lee, Seok-Won] Univ Texas San Antonio, Dept Informat Syst, San Antonio, TX 78249 USA.
   [Lee, Seok-Won] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
   [Rine, David C.] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 University of Texas System; University of Texas at San Antonio (UTSA);
   University of Nebraska System; University of Nebraska Lincoln; George
   Mason University
RP Lee, SW (corresponding author), Univ Texas San Antonio, Dept Informat Syst, San Antonio, TX 78249 USA.
EM Seok-Won.Lee@utsa.edu
CR [Anonymous], UN MOD LANG UML SUP
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Booch G., 2005, The Unified Modeling Language User Guide
   Bratthall L, 2002, IEEE T SOFTWARE ENG, V28, P1181, DOI 10.1109/TSE.2002.1158290
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Dong J, 2010, SOFTWARE QUAL J, V18, P269, DOI 10.1007/s11219-009-9093-8
   Dunn R.H., 1984, SOFTWARE DEFECT REMO
   Fayad ME, 2002, COMMUN ACM, V45, P109, DOI 10.1145/505248.505278
   Fayad ME, 2001, COMMUN ACM, V44, P95, DOI 10.1145/383694.383713
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Galin Daniel, 2004, Software quality assurance: from theory to implementation
   Gamma Erich., 1994, DESIGN PATTERNS
   Grubb P., 2003, Software Maintenance: Concepts and Practice, V2.
   Kim D. K., 2003, P WORKSH SOFTW MOD E
   Kim DK, 2008, SOFTWARE QUAL J, V16, P329, DOI 10.1007/s11219-008-9048-5
   KOSKINEN J, 2003, SOFTWARE MAINTENANCE
   Lee S. W., 2004, 16 INT C SOFTW ENG K
   Lu LJ, 2010, J UNIVERS COMPUT SCI, V16, P2455
   Mellor StephenJ., 2004, MDA Distilled: Principles of Model-Driven Architecture
   NASA, 1999, MARS CLIM ORB TEAM F
   Oquendo F., 2006, ACM SIGSOFT SOFTWARE, V31, P1
   PFLEEGER S.L., 2006, Software Engineering, Theory and Practice
   Sommerville I., 2004, Software Engineering
   Sommerville I, 2001, Software Engineering
   Takang A.A., 1996, Software maintenance: concepts and practice
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Wirfs-Brock RJ, 2006, IEEE SOFTWARE, V23, P45, DOI 10.1109/MS.2006.81
   Yin R.K., 2011, Qualitative research from start to finish
   Younessi H., 2002, OBJECT ORIENTED DEFE
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 52
TC 2
Z9 2
U1 1
U2 20
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2013
VL 43
IS 7
SI SI
BP 835
EP 866
DI 10.1002/spe.1116
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 158TW
UT WOS:000319997100007
DA 2024-07-18
ER

PT J
AU Pukall, M
   Kästner, C
   Cazzola, W
   Götz, S
   Grebhahn, A
   Schröter, R
   Saake, G
AF Pukall, Mario
   Kaestner, Christian
   Cazzola, Walter
   Goetz, Sebastian
   Grebhahn, Alexander
   Schroeter, Reimar
   Saake, Gunter
TI JavAdaptor - Flexible runtime updates of Java applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic software updates; program evolution; state migration: tool
   support
ID REFLECTION
AB Software is changed frequently during its life cycle. New requirements come, and bugs must be fixed. To update an application, it usually must be stopped, patched, and restarted. This causes time periods of unavailability, which is always a problem for highly available applications. Even for the development of complex applications, restarts to test new program parts can be time consuming and annoying. Thus, we aim at dynamic software updates to update programs at runtime. There is a large body of research on dynamic software updates, but so far, existing approaches have shortcomings either in terms of flexibility or performance. In addition, some of them depend on specific runtime environments and dictate the program's architecture. We present JavAdaptor, the first runtime update approach based on Java that (a) offers flexible dynamic software updates, (b) is platform independent, (c) introduces only minimal performance overhead, and (d) does not dictate the program architecture. JavAdaptor combines schema changing class replacements by class renaming and caller updates with Java HotSwap using containers and proxies. It runs on top of all major standard Java virtual machines. We evaluate our approach's applicability and performance in non-trivial case studies and compare it with existing dynamic software update approaches. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Pukall, Mario; Grebhahn, Alexander; Schroeter, Reimar; Saake, Gunter] Univ Magdeburg, Sch Comp Sci, D-39106 Magdeburg, Sachsen Anhalt, Germany.
   [Kaestner, Christian] Univ Marburg, Marburg, Germany.
   [Cazzola, Walter] Univ Milan, Milan, Italy.
   [Goetz, Sebastian] Univ Dresden, Dresden, Germany.
C3 Otto von Guericke University; Philipps University Marburg; University of
   Milan; Technische Universitat Dresden
RP Pukall, M (corresponding author), Univ Magdeburg, Sch Comp Sci, POB 4120, D-39106 Magdeburg, Sachsen Anhalt, Germany.
EM mario.pukall@iti.cs.uni-magdeburg.de
RI Cazzola, Walter/AAA-3953-2019; Götz, Sebastian/AAM-7083-2020
OI Cazzola, Walter/0000-0002-4652-8113; Götz,
   Sebastian/0000-0003-1537-7815; Kastner, Christian/0000-0002-4450-4572
FU DFG [SA 465/31-2]; European Union (ERC) [203099]
FX We would like to thank Shigeru Chiba for providing the invaluable
   bytecode modification tool Javassist. Furthermore, we thank Janet
   Feigenspan for calculating the statistical significance of our benchmark
   results. Mario Pukall's work is part of the RAMSES project<SUP> </SUP>,
   which is funded by DFG (Project SA 465/31-2). Kastner's work is
   supported in part by the European Union (ERC grant ScalPL #203099).
CR Bazzi RA, 2009, P INT WORKSH HOT TOP, V7, p[1, 2]
   Boner J, 2004, P INT C ASP OR SOFTW, P1
   Bracha G, 2005, INT C OBJ OR PROGR S
   Cazzola W, 2004, J OBJECT TECHNOLOGY, V3, P117
   Chiba S, 2003, LECT NOTES COMPUT SC, V2830, P364
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   Dahm M, 1999, JAVA INFORM TAGE, P1
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   DMITRIEV M, 2001, THESIS U GLASGOW
   Fowler M, 2006, REFACTORING IMPROVIN, V19th
   Fulgham B, 2011, COMPUTER LANGUAGE BE
   Gamma E, 2004, DESIGN PATTERNS ABST
   Gosling J., 2005, JAVA TM LANGUAGE SPE, V3rd
   Gotz S., 2009, P INT WORKSH HOT TOP, P1
   Gregersen AR, 2010, THESIS U SO DENMARK
   Gregersen AR, 2011, P WORKSH PRINC SOFTW, P6, DOI DOI 10.1145/2024445.2024448
   Gupta D, 1996, IEEE T SOFTWARE ENG, V22, P120, DOI 10.1109/32.485222
   Haupt M, 2006, THESIS DARMSTADT U T
   Hicks M, 2005, ACM T PROGR LANG SYS, V27, P1049, DOI 10.1145/381694.378798
   Kabanov J, 2010, P WORKSH BYT SEM PAP, P1
   Karablieh F, 2002, SYM REL DIST SYST, P140, DOI 10.1109/RELDIS.2002.1180182
   Kim DK, 2009, THESIS VIRGINIA POLY
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Liang S, 1998, ACM SIGPLAN NOTICES, V33, P36, DOI 10.1145/286942.286945
   LIEBERMAN H, 1986, SIGPLAN NOTICES, V21, P214, DOI 10.1145/960112.28718
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Makris K, 2009, THESIS ARIZONA STATE
   Malabarba S, 2000, LECT NOTES COMPUT SC, V1850, P337
   Murarka Y, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P225
   Nicoara A, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P233, DOI 10.1145/1357010.1352617
   Opdyke WilliamF., 1990, Symposium on Object-Oriented Programming Emphasizing Practical Applications, P145
   Oracle, 2011, JAV VIRT MACH TOOL I
   Oracle, 2011, JAV PLATF DEB ARCH
   Oracle, 2011, BEA WEBL SERV US FAS
   Orso A, 2002, PROC IEEE INT CONF S, P649, DOI 10.1109/ICSM.2002.1167829
   Pawlak R, 2001, TOOLS, V39, P56, DOI 10.1109/TOOLS.2001.941659
   Pukall M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P989, DOI 10.1145/1985793.1985970
   Pukall M, 2008, ASIA PAC SOFWR ENG, P85, DOI 10.1109/APSEC.2008.66
   Ritzau T, 2000, P JAV EMB SYST WORKS, P1
   Sato Y, 2003, LECT NOTES COMPUT SC, V2830, P189
   Stoyle G, 2005, P 32 ACM SIGPLAN SIG, P183
   Subramanian S, 2009, ACM SIGPLAN NOTICES, V44, P1, DOI 10.1145/1543135.1542478
   Tanter É, 2003, ACM SIGPLAN NOTICES, V38, P27, DOI 10.1145/949343.949309
   The OSGi Alliance, 2011, OSGI SERV PLATF COR
   Truyen E, 2001, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2001.919097
   Vanderperren W, 2004, DYN ASP WORKSH, P120
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   Venners Bill, 2000, Inside the Java 2 Virtual Machine, V2
   Wurthinger T, 2011, THESIS J KEPLER U LI
   Zhang S, 2007, P INT COMP SOFTW APP, P335
NR 50
TC 25
Z9 26
U1 1
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2013
VL 43
IS 2
BP 153
EP 185
DI 10.1002/spe.2107
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 071SP
UT WOS:000313614800002
OA Green Published
DA 2024-07-18
ER

PT J
AU Kilpeläinen, P
AF Kilpelainen, Pekka
TI Using XQuery for problem solving
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XQuery; programming; problem solving; puzzles; combinatorial search
AB XQuery is a recommendation by the World Wide Web Consortium as a standard XML query language. In addition to being a special-purpose query language, XQuery has also features that support unexpected applications such as problem solving. We demonstrate and discuss these features by presenting several XQuery programs for solving recreational problems and puzzles. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 Univ Eastern Finland, Sch Comp, FI-70211 Kuopio, Finland.
C3 University of Eastern Finland
RP Kilpeläinen, P (corresponding author), Univ Eastern Finland, Sch Comp, POB 1627, FI-70211 Kuopio, Finland.
EM Pekka.T.Kilpelainen@uef.fi
CR Aho AV, 1988, The AWK Programming Language
   [Anonymous], 2009, BUILD XQUERY RAYTR X
   [Anonymous], 1975, INTRO THEORY NUMBERS
   [Anonymous], 2010, MIRROR UK       0819
   [Anonymous], 2004, XML Schema Part 2: Datatypes
   [Anonymous], 2010, W3C WORKING DRAFT
   [Anonymous], 2002, RFE TAIL CALL OPTIMI
   [Anonymous], 2013, Extensible markup language
   [Anonymous], 1998, Purely Functional Data Structures
   [Anonymous], XQUERY 1 0 XPATH 2 0
   [Anonymous], 2009, NOT AM MATH SOC
   [Anonymous], 2008, IEEE DATA ENG B
   Bamford R, 2009, P VLDB 09
   Ben-Kiki O, 1999, CAN SOLVE N QUEENS B
   Berglund A., 2010, XML Path Language (XPath), V2nd
   Bird R., 2010, Pearls of Functional Algorithm Design
   BITNER JR, 1975, COMMUN ACM, V18, P651, DOI 10.1145/361219.361224
   Boldi P, 2010, LECT NOTES COMPUTER, V6099
   Chamberlin D, 2004, XQUERY EXPERTS GUIDE
   Chamberlin D, 2007, XML QUERY USE CASES
   Chamberlin D, 2000, LECT NOTES COMPUTER, V1997
   Clocksin W.F., 1984, PROGRAMMING PROLOG
   Crescenzi P, 2007, LECT NOTES COMPUTER, V4475
   Dasgupta S., 2008, Algorithms
   Delahaye JP, 2006, SCI AM, V294, P80, DOI 10.1038/scientificamerican0606-80
   DHAR V, 1990, COMMUN ACM, V33, P323, DOI 10.1145/77481.77485
   Engovatov D, 2011, XQUERY 3 0 IN PRESS
   Eppstein D., 1987, SIGACT News, V18, P38, DOI 10.1145/24658.24662
   Flanagan D., 2005, JAVA NUTSHELL
   FLOYD RW, 1967, J ACM, V14, P636, DOI 10.1145/321420.321422
   Fourny G, 2008, P SIGMOD 08
   Fuller JR, 2008, ADV XQUERY DEV APPL
   Gallopoulos E., 1994, IEEE Computational Science and Engineering, V1, P11, DOI 10.1109/99.326669
   Gardner M, 2000, MATH PUZZLE TALES
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Inkala A, 2007, AI ESCARGOTUTHE MOST
   Kay M, 2000, XSLT PROGRAMMERS REF
   Kay M., 2007, XSL TRANSFORMATIONS
   Knuth D., 2011, Selected Papers on Fun and Games (Lecture Notes), Chapter 38
   Knuth D. E., 2011, ART COMPUTER PRO A 1, V4A
   Knuth D.E., 1996, SELECTED PAPERS COMP
   Levitin A, 2002, SIGCSE 02 P 33 SIGCS
   Levitin A., 2007, Introduction to the Design and Analysis of Algorithms, Vsecond
   Li P, 2009, 1 INT WORKSH DAT TEC
   Malhotra Ashok, 2010, XQUERY 1 0 XPATH 2 0
   Norvig P., Solving every sudoku puzzle
   O'Neill ME, 2009, J FUNCT PROGRAM, V19, P95, DOI 10.1017/S0956796808007004
   Parhami B, 2008, COMPUT SCI EDUC, V18, P261, DOI 10.1080/08993400802594089
   Polya G., 2004, How to solve it
   Rich E., 1983, ARTIF INTELL
   Romei A, 2010, SOFTWARE PRACT EXPER, V40, P101, DOI 10.1002/spe.944
   Shallit J., 2002, SIGACT News, V33, P90, DOI 10.1145/507457.507473
   STERLING L, 1986, ART PROLOG ADV PROGR
   Thompson S., 2011, HASKELL CRAFT FUNCTI
   vansRossum G., 1995, PYTHON TUTORIAL
   Walmsley Priscilla., 2007, XQuery
   Wan JWW, 2003, WIDM 03 P 5 ACM INT
   Welch A, 2006, DIMITRES TUNED SUDOK
   Wikipedia, 2010, CONSTR PROGR
   Yato T, 2003, IEICE T FUND ELECTR, VE86A, P1052
NR 60
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2012
VL 42
IS 12
BP 1433
EP 1465
DI 10.1002/spe.1140
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 040FM
UT WOS:000311307500001
DA 2024-07-18
ER

PT J
AU Lafi, W
   Lattard, D
   Jerrya, A
AF Lafi, Walid
   Lattard, Didier
   Jerrya, Ahmed
TI An asynchronous hierarchical router for networks-on-chip-based
   three-dimensional multi-processor system-on-chip
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE network-on-chip; 3D integration; MPSoC
ID DESIGN
AB Three-dimensional networks-on-chip (3D NoC) are rising as a good approach to well managed complex interconnections in 3D multi-processor system-on-chip (MPSoC). This paper introduces a new router in order to enhance throughput and latency compared to classic 3D mesh NoC. The proposed router is hierarchical as it is composed of two completely decoupled modules: one for inter-layer communication and one for intra-layer communication. It is fully implemented in asynchronous logic to allow low latency transfer. Synthesis and extrapolation results show that the hierarchical router is competitive with the classic 3D mesh in terms of area and power. Throughput and latency evaluation is performed using a SystemC-TLM NoC simulator. Simulations' results show that the proposed hierarchical router can outperform the 3D mesh by more than 25% in terms of throughput and latency in the case of transpose traffic. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Lafi, Walid; Lattard, Didier; Jerrya, Ahmed] CEA LETI, MINATEC, F-38054 Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; CEA
RP Lafi, W (corresponding author), CEA LETI, MINATEC, 17 Rue Martyrs, F-38054 Grenoble, France.
EM walid.lafi@cea.fr
CR Beigné E, 2005, INT SYMP ASYNCHRON C, P54, DOI 10.1109/ASYNC.2005.10
   Black B, 2006, INT SYMP MICROARCH, P469
   Chen Y, 2009, 2009 INTERNATIONAL CONFERENCE ON COMMUNICATIONS, CIRCUITS AND SYSTEMS PROCEEDINGS, VOLUMES I & II, P986, DOI 10.1109/ICCCAS.2009.5250358
   Clermidy F, 2009, PROCEEDINGS OF THE 2009 12TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN, ARCHITECTURES, METHODS AND TOOLS, P449, DOI 10.1109/DSD.2009.200
   Feero BS, 2009, IEEE T COMPUT, V58, P32, DOI 10.1109/TC.2008.142
   Kim J, 2007, CONF PROC INT SYMP C, P138, DOI 10.1145/1273440.1250680
   Lafi W, 2010, P 21 IEEE INT S RAP
   Li F, 2006, CONF PROC INT SYMP C, P130, DOI 10.1145/1150019.1136497
   Murali S, 2009, ASIA S PACIF DES AUT, P242, DOI 10.1109/ASPDAC.2009.4796487
   Pande PP, 2005, IEEE T COMPUT, V54, P1025, DOI 10.1109/TC.2005.134
   Park D, 2008, CONF PROC INT SYMP C, P251, DOI 10.1109/ISCA.2008.13
   Pavlidis VF, 2006, IEEE INT SOC CONF, P285, DOI 10.1109/SOCC.2006.283899
   Rahmani AM, 2009, J LOW POWER ELECTRON, V5, P396, DOI 10.1166/jolpe.2009.1039
   Thonnart Y, 2010, DES AUT TEST EUROPE, P33
   Topol AW, 2006, IBM J RES DEV, V50, P491, DOI 10.1147/rd.504.0491
   Xu Y, 2009, INT S HIGH PERF COMP, P30, DOI 10.1109/HPCA.2009.4798234
   Yan S, 2008, PR IEEE COMP DESIGN, P142, DOI 10.1109/ICCD.2008.4751853
NR 17
TC 3
Z9 4
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2012
VL 42
IS 7
SI SI
BP 877
EP 890
DI 10.1002/spe.1150
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 952UX
UT WOS:000304819600006
DA 2024-07-18
ER

PT J
AU Hierons, RM
   Merayo, MG
   Núñez, M
AF Hierons, Robert M.
   Merayo, Mercedes G.
   Nunez, Manuel
TI Scenarios-based testing of systems with distributed ports
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE formal testing; systems with distributed ports; scenarios;
   implementation relations; controllable testing
ID SYNCHRONIZATION; SEQUENCES
AB Distributed systems are usually composed of several distributed components that communicate with their environment through specific ports. When testing such a system we separately observe sequences of inputs and outputs at each port rather than a global sequence and potentially cannot reconstruct the global sequence that occurred. Typically, the users of such a system cannot synchronize their actions during use or testing. However, the use of the system might correspond to a sequence of scenarios, where each scenario involves a sequence of interactions with the system that, for example, achieves a particular objective. When this is the case there is the potential for a significant delay between two scenarios and this effectively allows the users of the system to synchronize between scenarios. If we represent the specification of the global system by using a state-based notation, we say that a scenario is any sequence of events that happens between two of these operations. We can encode scenarios in two different ways. The first approach consists of marking some of the states of the specification to denote these synchronization points. It transpires that there are two ways to interpret such models and these lead to two implementation relations. The second approach consists of adding a set of traces to the specification to represent the traces that correspond to scenarios. We show that these two approaches have similar expressive power by providing an encoding from marked states to sets of traces. In order to assess the appropriateness of our new framework, we show that it represents a conservative extension of previous implementation relations defined in the context of the distributed test architecture: if we consider that all the states are marked then we simply obtain ioco (the classical relation for single-port systems) while if no state is marked then we obtain dioco (our previous relation for multi-port systems). Finally, we concentrate on the study of controllable test cases, that is, test cases such that each local tester knows exactly when to apply inputs. We give two notions of controllable test cases, define an implementation relation for each of these notions and relate them. We also show how we can decide whether a test case satisfies these conditions. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Hierons, Robert M.] Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
   [Merayo, Mercedes G.; Nunez, Manuel] Univ Complutense Madrid, Dept Sistemas Informat & Computac, Madrid, Spain.
C3 Brunel University; Complutense University of Madrid
RP Hierons, RM (corresponding author), Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
EM rob.hierons@brunel.ac.uk
RI Núñez, Manuel/B-6889-2008; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/T-4990-2018
OI Núñez, Manuel/0000-0001-9808-6401; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/0000-0002-4634-4082; Hierons, Robert/0000-0002-4771-1446
FU EPSRC [EP/G032572/1] Funding Source: UKRI
CR Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], LECT NOTES COMPUTER
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bochmann GV, 2008, LECT NOTES COMPUT SC, V5047, P169, DOI 10.1007/978-3-540-68524-1_13
   BOYD S, 1991, INFORM PROCESS LETT, V40, P131, DOI 10.1016/0020-0190(91)90166-F
   Brinksma E, 1998, TESTING OF COMMUNICATING SYSTEMS, P67
   Broy M., 2005, Lecture Notes in Computer Science, V3472
   Clarke Edmund M., 2001, Model Checking
   Dssouli R., 1986, 6 WG6 1 INT C PROT S, P217
   Dssouli R, 1985, 5 WG6 1 INT C PROT S, P483
   Frantzen L, 2009, J LOGIC ALGEBR PROGR, V78, P417, DOI 10.1016/j.jlap.2009.02.010
   Haar S, 2007, LECT NOTES COMPUT SC, V4581, P171
   HIERONS R, 2010, 10 INT C QUAL SOFTW, P52
   HIERONS RM, 2010, IMPLEMENTATION UNPUB
   Hierons RM, 2008, LECT NOTES COMPUT SC, V5047, P200, DOI 10.1007/978-3-540-68524-1_15
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hierons RM, 2008, LECT NOTES COMPUT SC, V5311, P201, DOI 10.1007/978-3-540-88387-6_16
   *ISO IEC JTC 1 JTC, 1994, 96461 ISOIEC JTC 1 J
   Jacky J, 2008, MODEL-BASED SOFTWARE TESTING AND ANALYSIS WITH C#, P1
   Jacob J., 1989, THEORY PRACTICE REFI, P27
   JARD C, 1998, JOINT INT C FORM DES, P353
   Le Huo J, 2004, LECT NOTES COMPUT SC, V2978, P76
   LUO G, 1993, 6 IFIP WORKSH PROT T, P139
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Rafiq O, 2003, J SUPERCOMPUT, V24, P203, DOI 10.1023/A:1021759127956
   SARIKAYA B, 1984, IEEE T COMMUN, V32, P389, DOI 10.1109/TCOM.1984.1096074
   Tai KC, 1998, COMPUT NETWORKS ISDN, V30, P1111, DOI 10.1016/S0169-7552(98)00013-0
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   Tretmans J., 2008, LNCS, V4949, P1, DOI DOI 10.1007/978-3-540-78917-8_
   Ural H, 2006, FORM ASP COMPUT, V18, P84, DOI 10.1007/s00165-005-0083-8
   Utting M., 2007, PRACTICAL MODEL BASE
NR 31
TC 13
Z9 13
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2011
VL 41
IS 10
SI SI
BP 999
EP 1026
DI 10.1002/spe.1062
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 818RV
UT WOS:000294773600002
OA Green Published
DA 2024-07-18
ER

PT J
AU Wada, H
   Suzuki, J
   Yamano, Y
   Oba, K
AF Wada, Hiroshi
   Suzuki, Junichi
   Yamano, Yuji
   Oba, Katsuya
TI Evolutionary deployment optimization for service-oriented clouds
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE search-based software engineering; genetic algorithm; queueing theory;
   service level agreement; service composition; cloud computing
ID GENETIC ALGORITHM; DESIGN
AB This paper focuses on service deployment optimization in cloud computing environments. In a cloud, an application is assumed to consist of multiple services. Each service in an application can be deployed as one or more service instances. Different service instances operate at different quality of service (QoS) levels depending on the amount of computing resources assigned to them. In order to satisfy given performance requirements, i.e. service level agreements (SLAs), each application is required to optimize its deployment configuration such as the number of service instances, the amount of computing resources to assign and the locations of service instances. Since this problem is NP-hard and often faces trade-offs among conflicting QoS objectives in SLAs, existing optimization methods often fail to solve it. E-3-R is a multiobjective genetic algorithm that seeks a set of Pareto-optimal deployment configurations that satisfy SLAs and exhibit the trade-offs among conflicting QoS objectives. By leveraging queueing theory, E-3-R estimates the performance of an application and aids defining SLAs in a probabilistic manner. Moreover, E-3-R automatically reduces the number of QoS objectives and improves the quality of solutions further. Experimental studies demonstrate that E-3-R efficiently obtains quality deployment configurations that satisfy given SLAs. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Wada, Hiroshi] Natl ICT Australia, Eveleigh, NSW 1430, Australia.
   [Suzuki, Junichi] Univ New S Wales, Sch Engn & Comp Sci, Sydney, NSW 2052, Australia.
   [Yamano, Yuji] Univ Massachusetts, Dept Comp Sci, Boston, MA 02125 USA.
   [Oba, Katsuya] OGIS Int Inc, San Mateo, CA 94404 USA.
C3 NICTA; University of New South Wales Sydney; University of Massachusetts
   System; University of Massachusetts Boston
RP Wada, H (corresponding author), Natl ICT Australia, Eveleigh, NSW 1430, Australia.
EM shu@cs.umb.edu
FU OGIS International, Inc.
FX This work is supported in part by OGIS International, Inc.
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   [Anonymous], 2008, P 10 ANN C GEN EV CO, DOI DOI 10.1145/1389095.1389225
   Anselmi J., 2007, P 2007 WORKSH SERV O, P1, DOI DOI 10.1145/1272457.1272458
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Aversano L, 2006, COMPUT SYST SCI ENG, V21, P247
   Berbner R, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P72
   CANFORA G, 2004, INT C SERV OR COMP N, P36
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Cardellini V, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P743
   Chan WC, 2003, IEE P-COMMUN, V150, P159, DOI 10.1049/ip-com:20030274
   Claro D., 2005, IEEE INT WORKSH SEM, P32
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2005, Kangal report, P2005011
   Fieldsend JE, 2003, IEEE T EVOLUT COMPUT, V7, P305, DOI 10.1109/TEVC.2003.810733
   Harman M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P58, DOI 10.1109/METRIC.2004.1357891
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   HARMAN SAM, 2009, TR0903 KINGS COLL DE
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   Jaeger M.C., 2007, KIVS 2007 WORKSH SER, P359
   JAIMES AL, 2008, ACM INT C GEN EV COM, P673
   Jaimes AL, 2009, LECT NOTES COMPUT SC, V5467, P423, DOI 10.1007/978-3-642-01020-0_34
   Liu Y, 2007, P INT COMP SOFTW APP, P327
   MARTENS A, 2009, INT WORKSH QUAL SERV, P25
   Menasce D. A., 2009, INT COMP MEAS GROUP
   Mezura-Montes E, 2005, THEOR ENGN APPLICAT, P1
   PENTA MD, 2006, INT WORKSH SERV OR S, P74
   PENTA MD, 2007, ACM INT C GEN EV COM, P1090
   Qu Y, 2006, GCC 2005: FIFTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P458
   Rosario Sidney, 2008, IEEE Transactions on Services Computing, V1, P187, DOI 10.1109/TSC.2008.17
   SRINIVAS N, 1995, Evolutionary computation., V2, P221, DOI [DOI 10.1162/EVCO.1994.2.3.221, 10.1162/evco.1994.2.3.221]
   Stewart C., 2007, ACM EUR C COMP SYST, P31
   Taboada HA, 2008, IEEE T RELIAB, V57, P182, DOI 10.1109/TR.2008.916874
   Wada H, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P661, DOI 10.1109/SERVICES-I.2009.59
   Witten I. H., 2005, DATA MINING PRACTICA
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 36
TC 26
Z9 33
U1 0
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2011
VL 41
IS 5
SU SI
BP 469
EP 493
DI 10.1002/spe.1032
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 736RQ
UT WOS:000288512200002
DA 2024-07-18
ER

PT J
AU Jeong, J
   Seo, E
   Choi, J
   Kim, H
   Jo, H
   Lee, J
AF Jeong, Jinkyu
   Seo, Euiseong
   Choi, Jeonghwan
   Kim, Hwanju
   Jo, Heeseung
   Lee, Joonwon
TI KAL: kernel-assisted non-invasive memory leak tolerance with a
   general-purpose memory allocator
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE memory leak toleration; memory leak; garbage collection; Lea memory
   allocator; operating systems
ID GARBAGE COLLECTION
AB Memory leaks are a continuing problem in the software developed with programming languages, such as C and C++. A recent approach adopted by some researchers is to tolerate leaks in the software application and to reclaim the leaked memory by use of specially constructed memory allocation routines. However, such routines replace the usual general-purpose memory allocator and tend to be less efficient in speed and in memory utilization. We propose a new scheme which coexists with the existing memory allocation routines and which reclaims memory leaks. Our scheme identifies and reclaims leaked memory at the kernel level. There are some major advantages to our approach: (I) the application software does not need to be modified; (2) the application does not need to be suspended while leaked memory is reclaimed; (3) a remote host can be used to identify the leaked memory, thus minimizing impact on the application program's performance; and (4) our scheme does not degrade the service availability of the application while detecting and reclaiming memory leaks. We have implemented a prototype that works with the GNU C library and with the Linux kernel. Our prototype has been tested and evaluated with various real-world applications. Our results show that the computational overhead of our approach is around 2% of that incurred by the conventional memory allocator in terms of throughput and average response time. We also verified that the prototype successfully suppressed address space expansion caused by memory leaks when the applications are run on synthetic workloads. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Choi, Jeonghwan; Lee, Joonwon] Sungkyunkwan Univ, Sch Informat & Commun Engn, Suwon, South Korea.
   [Jeong, Jinkyu; Kim, Hwanju; Jo, Heeseung] Korea Adv Inst Sci & Technol, Dept Comp Sci, Comp Architecture Lab, Taejon 305701, South Korea.
   [Seo, Euiseong] Ulsan Natl Inst Sci & Technol, Sch Elect & Comp Engn, Ulsan, South Korea.
C3 Sungkyunkwan University (SKKU); Korea Advanced Institute of Science &
   Technology (KAIST); Ulsan National Institute of Science & Technology
   (UNIST)
RP Lee, J (corresponding author), Sungkyunkwan Univ, Sch Informat & Commun Engn, Suwon, South Korea.
EM joonwon@skku.edu
RI Jeong, Jinkyu/KQU-1902-2024; Seo, Euiseong/F-6212-2010
OI Jeong, Jinkyu/0000-0002-4905-9244; 
FU Korea government (MEST) [2010-0000829]; Ministry of Education, Science
   and Technology [2009-0089491]
FX This work was supported by the National Research Foundation of Korea
   (NRF) grant funded by the Korea government (MEST) under grant number
   2010-0000829 and by Basic Science Research Program through the National
   Research Foundation of Korea (NRF), funded by the Ministry of Education,
   Science and Technology under grant number 2009-0089491.
CR [Anonymous], P 29 ACM SIGPLAN SIG
   [Anonymous], 1998, HTTPERF TOOL MEASURI, DOI DOI 10.1145/306225.306235
   BARRETT DA, 1993, P ACM SIGPLAN C PROG, P187
   BERGER ED, 2001, P 2001 ACM SIGPLAN C, P114
   BERGER ED, 2002, OOPSLA, P1
   Berger ED, 2006, ACM SIGPLAN NOTICES, V41, P158, DOI 10.1145/1133981.1134000
   Boehm H. J., 1991, SIGPLAN Notices, V26, P157, DOI 10.1145/113446.113459
   BOEHM HJ, 1993, SIGPLAN NOTICES, V28, P197, DOI 10.1145/173262.155109
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   BOEHM HJ, 2009, GARBAGE COLLECTOR C
   Bond MD, 2009, ACM SIGPLAN NOTICES, V44, P277, DOI 10.1145/1508284.1508277
   Bond MD, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P109
   BONWICK J, 1994, USTC 94 P USENIX SUM, P6
   Chow Jim., 2008, USENIX 2008 ANN TECH, P1
   Clark C, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI '05), P273
   DIJKSTRA EW, 1978, COMMUN ACM, V21, P966, DOI 10.1145/359642.359655
   ENDO T, 2002, ISMM 02 P 3 INT S ME, P119
   Goldsmith M, 2007, PSYCHOL LEARN MOTIV, V48, P1, DOI 10.1016/S0079-7421(07)48001-X
   HASTINGS R, 1991, PROCEEDINGS OF THE WINTER 1992 USENIX CONFERENCE, P125
   HAUSWIRTH M, 2004, P 11 INT C ARCH SUPP, P156
   HERTZ M, 2005, P 2005 ACM SIGPLAN C, P143
   Krishnakumar R., 2005, Linux Journal, V2005, P11
   KUECHLIN W, 1991, LECT NOTES COMPUT SC, V508, P341
   Lea D., MEMORY ALLOCATOR
   LVIN VB, 2008, ASPLOS 13 P 13 INT C, P115
   MCCARTHY J, 1960, COMMUN ACM, V3, P184, DOI 10.1145/367177.367199
   Nguyen HH, 2007, ISMM'07: PROCEEDINGS OF THE 2007 INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P15
   NOVARK G, 2008, 0809 U MASS
   *OSDB, 2009, OP SOURC DAT BENCHM
   Qin F, 2005, INT S HIGH PERF COMP, P291
   SEWARD J, 2005, ATEC 05, P2
   TANG Y, 2008, P 2008 USENIX ANN TE, P307
   THEIMER MM, 1985, P 10 ACM S OP SYST P, P2
   Waldspurger CA, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P181, DOI 10.1145/1060289.1060307
   Zorn B., 1988, Proceedings of the Summer 1988 USENIX Conference, P223
NR 35
TC 1
Z9 2
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2010
VL 40
IS 8
BP 605
EP 625
DI 10.1002/spe.970
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 627MS
UT WOS:000280044400002
DA 2024-07-18
ER

PT J
AU Meister, JA
   Foster, JS
   Hicks, M
AF Meister, Jeffrey A.
   Foster, Jeffrey S.
   Hicks, Michael
TI Serializing C intermediate representations for efficient and portable
   parsing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C; static analysis; intermediate representations; parsing; XML; XDR
AB C static analysis tools often use intermediate representations (IRs) that organize program data in a simple, well-structured manner However, the C parseis that create IRs are slow, and because they are difficult to write, only a few implementations exist, limiting the languages in which a C static analysis can be written To solve these problems we investigate two language-independent, on-disk representations of C IRs one using XML and the other using an Internet standard binary encoding called eXternal Data Representation (XDR). We benchmark the parsing speeds of both options, finding the XML to be about a factor of 2 slower than parsing C and the XDR over 6 times faster. Furthermore, we show that the XML files are far too large at 19 times the size of C source code, whereas XDR is only 2 2 times the C size We also demonstrate the portability of our XDR system by presenting a C source code querying tool in Ruby Our solution and the insights we gained from building it will be useful to analysis authors and other chents of C IRs We have made our software freely available for download at http://www.cs.umd.edu/projects/PL/scil/ Copyright (C) 2010 John Wiley & Sons, Ltd
C1 [Foster, Jeffrey S.; Hicks, Michael] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   [Meister, Jeffrey A.] Univ Calif San Diego, Dept Comp Sci & Engn, La Jolla, CA 92093 USA.
C3 University System of Maryland; University of Maryland College Park;
   University of California System; University of California San Diego
RP Foster, JS (corresponding author), Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
CR AIKEN A, 2007, LEVICW 01 SMINI PROJ
   Conde C., 2007, FOOD, V1, P1, DOI DOI 10.1186/S12864-016-2660-Z
   HENNESSY JL, 2007, COMPUIER ARONLECTME
   MARTIN M, 2005, FINDING APPL ERRORS, P13
   Necula GC, 2005, ACM T PROGR LANG SYS, V27, P477, DOI 10.1145/1065887.1065892
   NECULA GC, 2004, LECT NOTES COMPUTER, P213
   PRATIKAKI P, 2006, CONTEXTCRISITIVE COR, V6, P320
   *RFC, 2008, 4506 RFC
   STOLPMANN G, 2007, COMMUNICATION    JUL
   2009, EXPAT XMI PARSER PAG
   1915, TECLINOLOOYGENERIC A
   2009, M LTECHN ICA SPECIFI
   2008, FXUBERANT CLAGS PAGE
   2008, PXP PALE
   2008, GEN PAIE
   2001, CAML LANGUAGE AGE HO, P1
   2009, IIVM COMPILEI INTNUM
   2006, XNIL 1 0 SPECIFICATI
   2008, W3C BINARY CHDRACTCR
   2008, SLOCCOTINT PAE
   1917, SCFWSIMPLE C FXPAT W
   2008, CSCOPE PAGE
   2009, GNU ZIP PAE AVAILAHL
   2009, XERCESC PAGE AVAILAB
   2009, FRANIZIC P ILTE
   2011, OCANFLNET PAGE
NR 26
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2010
VL 40
IS 3
BP 225
EP 238
DI 10.1002/spe.954
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 562ES
UT WOS:000275033100002
DA 2024-07-18
ER

PT J
AU Taïani, F
   Killijian, MO
   Fabre, JC
AF Taiani, Francois
   Killijian, Marc-Olivier
   Fabre, Jean-Charles
TI COSMOPEN: dynamic reverse engineering on a budget. How cheap observation
   techniques can be used to reconstruct complex multi-level behaviour
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE reverse engineering; tracing; stack-traces; middleware; model;
   call-tree; graph transformation; CORBA; multi-threading
ID SYSTEM; VISUALIZATION
AB In this paper we present COSMOPEN, a reverse-engineering tool optimized for the behavioural analysis of complex layered software. COSMOPEN combines cheap and non-intrusive observation techniques with a versatile graph manipulation engine. By programming different graph manipulation scripts, the 'focal length' of our tool can be adapted to different abstraction levels. We illustrate how our tool can be used to extract high-level behavioural models from a complex multi-threaded platform (GNU/Linux, CORBA middleware). Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Taiani, Francois] Univ Lancaster, Dept Comp, Lancaster, England.
   [Killijian, Marc-Olivier; Fabre, Jean-Charles] Univ Toulouse, CNRS, LAAS, Toulouse, France.
   [Fabre, Jean-Charles] Univ Toulouse, INP Toulouse, Toulouse, France.
C3 Lancaster University; Universite de Toulouse; Centre National de la
   Recherche Scientifique (CNRS); Universite Federale Toulouse
   Midi-Pyrenees (ComUE); Universite de Toulouse; Institut National
   Polytechnique de Toulouse
RP Taïani, F (corresponding author), Univ Lancaster, Dept Comp, Lancaster, England.
EM f.taiani@lancaster.ac.uk
RI Taïani, François/AAQ-7684-2021; Killijian, Marc-Olivier/C-6617-2008
OI Taïani, François/0000-0002-9692-5678; 
CR [Anonymous], 2007, PROC 21 IEEE INT PAR
   [Anonymous], 2007, Graphviz - Graph Visualization Software
   [Anonymous], LNCS
   Becker D., 2007, 2007 IEEE International Parallel and Distributed Processing Symposium, P1
   Bernat AR, 2007, CONCURR COMP-PRACT E, V19, P1533, DOI [10.1002/cpe.1125, 10.1002/cpe]
   Chan A, 2003, PROG COMPREHEN, P237
   Chen YFR, 1997, LECT NOTES COMPUT SC, V1301, P414, DOI 10.1145/267896.267924
   Chen YFR, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P66, DOI 10.1109/ICSM.1995.526528
   Chiba S, 2003, LECT NOTES COMPUT SC, V2830, P364
   De Pauw W, 2000, CONCURRENCY-PRACT EX, V12, P1431, DOI 10.1002/1096-9128(20001210)12:14<1431::AID-CPE542>3.0.CO;2-2
   Ebert J., 2002, Electronic Notes in Theoretical Computer Science, V72, P47
   Fabre JC, 1998, IEEE T COMPUT, V47, P78, DOI 10.1109/12.656088
   *FAULT TOL CORBA, 2002, 23123105 FAULT TOL C, pCH23
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   Geimer M., 2007, NIC SERIES, V38, P645
   GRAHAM SL, 1983, SOFTWARE PRACT EXPER, V13, P671, DOI 10.1002/spe.4380130803
   GRISBY D, 2008, OMNIORB VERSION 4 0
   Jerding DF, 1997, PROC INT CONF SOFTW, P360, DOI 10.1145/253228.253356
   Killijian MO, 2000, SYM REL DIST SYST, P154, DOI 10.1109/RELDI.2000.885403
   *MITRE CORP, 2003, 02W0000101 MP MITRE, P1
   O'Byrne J., 1996, SKY SPACE, P20
   Object Management Group (OMG), 2002, COMM OBJ REQ BROK AR
   *OMG, 2009, OMG UN MOD LANG V 1
   *ORB, 2008, ORB DOC
   Ottogalli FG, 2001, LECT NOTES COMPUT SC, V2074, P831
   Reiss S.P., 2000, PROC ACM 2000 C JAVA, P71
   Reiss SP, 2003, SPRING INT SER ENG C, P311
   Richner T., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P13, DOI 10.1109/ICSM.1999.792487
   SCHMIDT D, 1999, IEEE COMMUNICATIONS, V16, P54, DOI DOI 10.1109/35.755450
   Schwarz B, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/WCRE.2002.1173063
   STALLMAN R, 2002, DEBUGGING GDB, P1
   Stolper SA, 1999, IEEE SOFTWARE, V16, P52, DOI 10.1109/52.795102
   *SUN MICR, 2008, SUN MICR JVM TOOL IN
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
   Taïani F, 2005, I C DEPEND SYS NETWO, P270, DOI 10.1109/DSN.2005.10
   Taïani F, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P435, DOI 10.1109/DSN.2003.1209954
   TAIANI F, 2009, COMP0102009 LANC U C, P1
   Tatsubori M, 2000, LECT NOTES COMPUT SC, V1826, P117
   TORVALDS L, 2008, THREAD CREATION IS 1
   Walker RJ, 1998, ACM SIGPLAN NOTICES, V33, P271, DOI 10.1145/286942.286966
   Wolf F, 2004, LECT NOTES COMPUT SC, V3149, P47
   WONG K, 1995, IEEE SOFTWARE, V12, P46, DOI 10.1109/52.363166
   WONG K, 1998, RIGI USERS MANUAL VE, P1
   Zaidman A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P134, DOI 10.1109/CSMR.2005.12
NR 44
TC 4
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC 25
PY 2009
VL 39
IS 18
BP 1467
EP 1514
DI 10.1002/spe.943
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 532HC
UT WOS:000272736100002
DA 2024-07-18
ER

PT J
AU Bellotti, F
   Berta, R
   Margarone, M
   De Gloria, A
AF Bellotti, Francesco
   Berta, Riccardo
   Margarone, Massimiliano
   De Gloria, Alessandro
TI oDect: an RFID-based object detection API to support applications
   development on mobile devices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE RFID; HCI with mobile devices; context awareness; user interfaces;
   interaction styles; mobile applications; wireless sensor networks;
   programming languages; development tools
AB The RFID technology is becoming ever more popular in the development of ubiquitous computing applications. A full exploitation of the RFID potential requires the study and implementation of human-computer interaction (HCI) modalities to be able to support wide usability by the target audience. This implies the need for programming methodologies specifically dedicated to support the easy and efficient prototyping of applications to have feedback from early tests with users. On the basis of our field-working experience, we have designed oDect, a high-level language and platform-independent application programming interface (API), ad hoc designed to meet the needs of typical applications for mobile devices (smart phones and PDAs). oDect aims at allowing application developers to create their prototypes focusing on the needs of the final users, without having to care about the low-level software that interacts with the RFID hardware. Further, in an end-user developing (EUD) approach, oDect provides specific support for the application end-user herself to cope with typical problems of RFID applications in detecting objects. We describe in detail the features of the API and discuss the findings of a test with four programmers, where we analyse and evaluate the use of the API in four sample applications. We also present results of an end-user test, which investigated strengths and weaknesses of the territorial agenda (TA) concept. The TA is an RFID-based citizen guide that aids-through time- and location-based reminders-users in their daily activities in a city. The TA directly exploits EUD features of oDect, in particular concerning the possibility of linking detected objects with custom actions. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Bellotti, Francesco; Berta, Riccardo; Margarone, Massimiliano; De Gloria, Alessandro] Univ Genoa, DIBE Dept Elect & Biophys Engn, I-16145 Genoa, Italy.
C3 University of Genoa
RP Berta, R (corresponding author), Univ Genoa, DIBE Dept Elect & Biophys Engn, Via Opera Pia 11A, I-16145 Genoa, Italy.
EM berta@elios.unige.it
RI Berta, Riccardo/G-8989-2012; Berta, Riccardo/O-8165-2019
OI Berta, Riccardo/0000-0003-1937-3969; Berta, Riccardo/0000-0003-1937-3969
CR Abowd G. D., 2000, ACM Transactions on Computer-Human Interaction, V7, P29, DOI 10.1145/344949.344988
   [Anonymous], 2005, P 4 INT JOINT C AUT
   [Anonymous], 1996, Technical report, MSR-TR-95-06
   [Anonymous], 1999, Designing Web Usability: The Practice of Simplicity
   [Anonymous], 14443 ISOIEC
   Arcelus A, 2007, 21ST INTERNATIONAL CONFERENCE ON ADVANCED NETWORKING AND APPLICATIONS WORKSHOPS/SYMPOSIA, VOL 2, PROCEEDINGS, P820
   Bellotti F., 2005, Cognition, Technology & Work, V7, P36, DOI 10.1007/s10111-004-0168-9
   Bellotti F, 2003, COMPUTER, V36, P48, DOI 10.1109/MC.2003.1231194
   Bellotti F., 2002, IEEE Pervasive Computing, V1, P33, DOI 10.1109/MPRV.2002.1012335
   Bellotti F, 2003, COMPUT GRAPH-UK, V27, P617, DOI 10.1016/S0097-8493(03)00105-5
   BELLOTTI F, 2006, VIRT C 2006 MOB GUID
   Bellotti V., 2001, HUMAN COMPUTER INTER, V16
   Cano JC, 2006, WIRELESS PERS COMMUN, V38, P187, DOI 10.1007/s11277-005-9001-x
   Carroll JM, 1997, INT J HUM-COMPUT ST, V46, P501, DOI 10.1006/ijhc.1996.0101
   Coroama Vlad, 2003, 2 INT WORKSH UB COMP
   Dey AK, 2006, LECT NOTES COMPUT SC, V3968, P254
   Fischer G, 2004, COMMUN ACM, V47, P33, DOI 10.1145/1015864.1015884
   Fleck M., 2002, IEEE PERVAS COMPUT, V1, P11
   GOKER R, 2004, 2 EUR UN S AMB INT E
   Goodrum PM, 2006, AUTOMAT CONSTR, V15, P292, DOI 10.1016/j.autcon.2005.06.004
   GUTH DA, 1997, FDN ORIENTATION MOBI, P9
   Hazas M, 2004, COMPUTER, V37, P95, DOI 10.1109/MC.2004.1266301
   *JSR, 2007, 179 JSR
   *JSR, 2007, 257 JSR
   Kindberg T, 2001, COMPUT NETW, V35, P443, DOI 10.1016/S1389-1286(00)00181-X
   KUFLIK T, 2006, P ENTER 2006 13 INT
   LANGHEINRICH M, 2000, 1 STEPS EVENT BASED
   LIEBERMAN H, 2001, YOUR WISH MY COMMAND
   Lu MH, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON MULTIMEDIA AND EXPO - ICME 2006, VOLS 1-5, PROCEEDINGS, P2129, DOI 10.1109/ICME.2006.262656
   Mann WC, 2004, IEEE PERVAS COMPUT, V3, P12, DOI 10.1109/MPRV.2004.1316812
   MAYERS BA, 2004, COMMUN ACM, V47, P47
   Nielsen J, 2000, WHY YOU ONLY NEED TE
   OIU RG, 2007, 16 INT C FLEX AUT IN, V23, P677
   Philipose M, 2004, IEEE PERVAS COMPUT, V3, P50, DOI 10.1109/MPRV.2004.7
   Polling D, 2005, IEEE SYS MAN CYBERN, P853
   QUAADGRAS A, 2005, 38 HAW INT C SYST SC, P855
   RANDALL D, 2003, S FDN COMP SCI
   Raskar R, 2005, COMMUN ACM, V48, P46, DOI 10.1145/1081992.1082019
   Regattieri A, 2007, J FOOD ENG, V81, P347, DOI 10.1016/j.jfoodeng.2006.10.032
   ROMER K, 2003, SMART IDENTIFICATION
   Ross DA, 2004, IEEE PERVAS COMPUT, V3, P30, DOI 10.1109/MPRV.2004.1316815
   SHERRY H, 2005, COMMUN ACM, V48, P60
   SIEGEMUND F, 2003, INTERACTION PERVASIV
   Smith JR, 2005, COMMUN ACM, V48, P39, DOI 10.1145/1081992.1082018
   Sutcliffe A, 2004, COMMUN ACM, V47, P31, DOI 10.1145/1015864.1015883
   TAPIA E, 2004, 6 INT C UB COMP NOTT
   Vapnik V., 1999, NATURE STAT LEARNING
   Vergara A, 2007, SENSOR ACTUAT B-CHEM, V127, P143, DOI 10.1016/j.snb.2007.07.107
   Want R, 2004, COMPUTER, V37, P84, DOI 10.1109/MC.2004.1297315
   WANT R, 1999, ACM C HUM FACT COMP
   Wulf V, 2001, BEHAV INFORM TECHNOL, V20, P249, DOI 10.1080/01449290110048016
   ZHANG T, 2004, INT S UB COMP SYST T
NR 52
TC 1
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2008
VL 38
IS 12
BP 1241
EP 1259
DI 10.1002/spe.864
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 369LC
UT WOS:000260695000002
DA 2024-07-18
ER

PT J
AU Gorton, I
   Liu, Y
   Trivedi, N
AF Gorton, Ian
   Liu, Yan
   Trivedi, Nihar
TI An extensible and lightweight architecture for adaptive server
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive; server applications; autonomic computing; components;
   performance
AB Server applications augmented with behavioral adaptation logic can react to environmental changes, creating self-managing server applications with improved quality of service at runtime. However, developing adaptive server applications is challenging due to the complexity of the underlying server technologies and highly dynamic application environments. This paper presents an architecture framework, the Adaptive Server Framework (ASF), to facilitate the development of adaptive behavior for legacy server applications. ASF provides a clear separation between the implementation of adaptive behavior and the business logic of the server application. This means a server application can be extended with programmable adaptive features through the definition and implementation of control components defined in ASE Furthermore, ASF is a lightweight architecture in that it incurs low CPU overhead and memory usage. We demonstrate the effectiveness of ASF through a case study, in which a server application dynamically determines the resolution and quality to scale an image based on the load of the server and network connection speed. The experimental evaluation demonstrates the performance gains possible by adaptive behavior and the low overhead introduced by ASE Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Liu, Yan] Natl ICT Australia Ltd, Alexandria, NSW, Australia.
   [Gorton, Ian] Pacific NW Natl Lab, Richland, WA 99352 USA.
   [Trivedi, Nihar] Univ Sydney, Sch Informat Technol, Sydney, NSW 2006, Australia.
C3 NICTA; United States Department of Energy (DOE); Pacific Northwest
   National Laboratory; University of Sydney
RP Liu, Y (corresponding author), Natl ICT Australia Ltd, Australian Technol Pk,Garden St, Alexandria, NSW, Australia.
EM jenny.liu@nicta.com.au
RI Gorton, Ian/A-8247-2009; Gorton, Ian/AAA-3301-2020
CR Abdellatif T, 2005, EUROMICRO-SEAA 2005: 31ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P70
   BARTOLI A, ADAPT FRAMEWORK ADAP
   Chess DM, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P140, DOI 10.1109/ICAC.2004.1301357
   ENGEL M, 2005, AOSD 05, P51
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Gorton I, 2003, COMPUTER, V36, P50, DOI 10.1109/MC.2003.1185217
   Grace P., 2005, P IFIP ACM USENIX MI
   Hallsteinsen S, 2005, LECT NOTES COMPUT SC, V3437, P107
   *IBM ETTK, 2005, IBM ETTK WEB SER AUT
   Kephart JO, 2004, FIFTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P3, DOI 10.1109/POLICY.2004.1309145
   Kon F, 2002, COMMUN ACM, V45, P33, DOI 10.1145/508448.508470
   KON F, 2000, IFIP ACM INT C DISTR
   Lea Doug, 1999, Concurrent Programming in Java. Second Edition: Design Principles and Patterns, V2nd
   Menasce D.A., 2004, PERFORMANCE DESIGN
   STAEHLI R, 2004, P 3 WORKSH AD REFL M, V80, P189
   WILDSTROM J, 2005, 17 IBM DEVELOPERWORK
   2004, JAVA MANAGEMENT EXTE
NR 18
TC 5
Z9 6
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2008
VL 38
IS 8
BP 853
EP 883
DI 10.1002/spe.857
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 321YA
UT WOS:000257341200004
DA 2024-07-18
ER

PT J
AU Kirkham, CC
AF Kirkham, C. C.
TI Ranked reservoir sampling: an extension to the reservoir sampling
   algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE random sampling; algorithms
C1 Univ Manchester, Sch Comp Sci, Manchester M13 9PL, Lancs, England.
C3 University of Manchester
RP Kirkham, CC (corresponding author), Univ Manchester, Sch Comp Sci, Oxford Rd, Manchester M13 9PL, Lancs, England.
EM ckirkham@cs.manchester.ac.uk
CR KNUTH D. E., 1981, Addison-Wesley Series in Computer Science and Information Processing, V2
   VITTER JS, 1985, ACM T MATH SOFTWARE, V11, P37, DOI 10.1145/3147.3165
NR 2
TC 0
Z9 0
U1 2
U2 4
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2007
VL 37
IS 12
BP 1285
EP 1288
DI 10.1002/spe.805
PG 4
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 224BF
UT WOS:000250419600003
DA 2024-07-18
ER

PT J
AU Liu, HH
   Chiang, ML
   Wu, MC
AF Liu, Ho-Han
   Chiang, Mei-Ling
   Wu, Men-Chao
TI Efficient support for content-aware request distribution and persistent
   connection in Web clusters
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cluster-based systems; Web clusters; content-aware dispatching;
   persistent connection; Linux virtual server
AB To support Web clusters with efficient dispatching mechanisms and policies, we propose a light-weight TCP connection transfer mechanism, TCP Rebuilding, and use it to develop a content-aware request dispatching platform, LVS-CAD, in which the request dispatcher can extract and analyze the content in requests and then dispatch each request by its content or type of service requested. To efficiently support HTTP/1.1 persistent connection in Web clusters, request scheduling should be performed per request rather than per connection. Consequently, multiple TCP Rebuilding, as an extension to normal TCP Rebuilding, is proposed and implemented. On this platform, we also devise fast TCP module handshaking to process the handshaking between clients and the request dispatcher in the IP layer instead of in the TCP layer for faster response times. Furthermore, we also propose content-aware request distribution policies that consider cache locality and various types of costs for dispatching requests in this platform, which makes the resource utilization of Web servers more effective. Experimental results of a practical implementation on Linux show that the proposed system, mechanisms, and policies can effectively improve the performance of Web clusters. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 Natl Chinan Univ, Dept Informat Management, Puli 545, Nantou, Taiwan.
   Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu 330, Taiwan.
C3 National Chi Nan University; National Yang Ming Chiao Tung University
RP Chiang, ML (corresponding author), Natl Chinan Univ, Dept Informat Management, Puli 545, Nantou, Taiwan.
EM joanna@ncnu.edu.tw
OI Chiang, Mei-Ling/0000-0001-9022-577X
CR Andreolini M, 2003, SECOND IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS, PROCEEDINGS, P25, DOI 10.1109/NCA.2003.1201134
   ANDREOLINI M, 2003, P 12 INT WORLD WIDE
   ARON M, 1999, P ANN US TECH C MONT
   ARON M, 2000, P ANN US TECHN C SAN
   Cardellini V, 2002, ACM COMPUT SURV, V34, P263, DOI 10.1145/508352.508355
   Casalicchio E., 2001, Proceedings of the International Conference on World Wide Web, P535
   Cherkasova L, 2001, THIRD INTERNATIONAL WORKSHOP ON ADVANCED ISSUES OF E-COMMERCE AND WEB-BASED INFORMATION SYSTEMS, PROCEEDINGS, P212, DOI 10.1109/WECWIS.2001.933926
   COLBY, 1999, Patent No. 6006264
   Fielding R., 2004, Hypertext Transfer Protocol - HTTP/1.1
   Kokku R, 2002, 10TH IEEE INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS, PROCEEDINGS, P12, DOI 10.1109/ICNP.2002.1181382
   LIN YD, 2003, P GLOB TEL C 2003 SA, V7, P3663
   LIU HH, 2005, J INT TECHNOLOGY, V6, P231
   MALIZ D, 1998, TCP SPLICING APPL LA
   Pai VS, 1998, ACM SIGPLAN NOTICES, V33, P205, DOI 10.1145/291006.291048
   PSTEL J, 1981, TRANSMISSION CONTROL
   SIT YF, 2004, CLUSTER COMPUT, V7, P21
   YANG C, 1999, P 2 USENIX S INT TEC
   YANG CS, 2001, P 3 USENIX S INT TEC
   ZHANG W, 1999, P 1999 LINUXEXPO CON
   ZHANG W, 2000, P OTTAWA S OTT CAN J
   ZHANG X, 1999, P 3 USENIX WIND NT S
NR 21
TC 5
Z9 7
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2007
VL 37
IS 11
BP 1215
EP 1241
DI 10.1002/spe.814
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 204JW
UT WOS:000249040900004
DA 2024-07-18
ER

PT J
AU Xiao, GY
   Aziz, A
   Nowinski, WL
AF Xiao, Gaoyu
   Aziz, Aamer
   Nowinski, Wieslaw L.
TI Hybrid image-based collision detection in Java 3D
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE collision detection; hybrid; image-based; Java 3D; temporal coherence
ID INTERSECTION TESTS; OBJECTS
AB Collision detection is highly important in computer graphics and virtual reality. Most collision detection methods are object-based, relying on testing the geometrical interference of objects, and their performance therefore depends on the geometrical complexity of the objects. Recently, image-based methods have gained increasing acceptance for their simplicity in implementation, robustness with respect to the object geometry, and the potential to distribute the computational burden onto graphics hardware. However, all existing image-based methods require direct calls to OpenGL, but so far there is no direct way to access OpenGL through the Java 3D API. Although Java 3D provides its own built-in collision detection classes, they are either incorrect or inefficient. In this paper, we present a hybrid image-based collision detection method in Java 31), which incorporates the Java 3D built-in collision detection and the image-based collision detection in our specially devised scene graph. In addition, we take advantage of the fact that the 3D position of successive offscreen views (i.e. virtual views perceived by the probing object) does not change significantly and thereby reduce the occurrences of offscreen rendering, so that the collision detection becomes even faster (up to 50% in our case). Experimental results prove the correctness and efficiency of our method. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Nanyang Technol Univ, Comp Integrated Med Intervent Lab, Singapore 639798, Singapore.
   Agcy Sci Technol & Res, Singapore Bioimaging Consortium, Singapore 138671, Singapore.
C3 Nanyang Technological University; Agency for Science Technology &
   Research (A*STAR); A*STAR - Institute of Bioengineering & Bioimaging
   (IBB); A*STAR - Singapore Bioimaging Consortium (SBIC)
RP Xiao, GY (corresponding author), Nanyang Technol Univ, Comp Integrated Med Intervent Lab, Singapore 639798, Singapore.
EM xiaogy@ntu.edu.sg
RI Nowinski, Wieslaw/AFR-8393-2022
OI Nowinski, Wieslaw/0000-0003-2869-0608
CR AHARON S, 2002, P MED IM COMP COMP A, P211
   [Anonymous], 1997, J GRAPH TOOLS, DOI DOI 10.1080/10867651.1997.10487480
   Baciu G, 2004, IEEE T VIS COMPUT GR, V10, P649, DOI 10.1109/TVCG.2004.44
   Baciu G, 2003, IEEE T VIS COMPUT GR, V9, P254, DOI 10.1109/TVCG.2003.1196011
   Baciu G, 1999, J VISUAL COMP ANIMAT, V10, P181, DOI 10.1002/(SICI)1099-1778(199910/12)10:4<181::AID-VIS211>3.0.CO;2-Q
   Burrows AL, 2002, SOFTWARE PRACT EXPER, V32, P359, DOI 10.1002/spe.441
   CAMERON S, 1989, INT J ROBOT RES, V8, P3, DOI 10.1177/027836498900800101
   Choi YJ, 2006, VISUAL COMPUT, V22, P80, DOI 10.1007/s00371-006-0368-9
   CHUNG K, 1996, P ACM S VIRT REAL SO, P125
   Cohen J. D., 1995, Proceedings 1995 Symposium on Interactive 3D Graphics, P189, DOI 10.1145/199404.199437
   COUCH J, 2003, COLLISION DETECTION
   Fan ZW, 2003, J VISUAL COMP ANIMAT, V14, P169, DOI 10.1002/vis.315
   GILBERT EG, 1988, IEEE T ROBOTIC AUTOM, V4, P193, DOI 10.1109/56.2083
   Gottschalk S., 1996, Computer Graphics Proceedings. SIGGRAPH '96, P171, DOI 10.1145/237170.237244
   Govindaraju NK, 2006, IEEE T VIS COMPUT GR, V12, P143, DOI 10.1109/TVCG.2006.29
   Govindaraju NK, 2005, P IEEE VIRT REAL ANN, P59
   HAMADA K, 1996, P ACM INT WORKSH ADV, P705
   Hudson T. C., 1997, Proceedings VRML 97. Second Symposium on the Virtual Reality Modeling Language, P117, DOI 10.1145/253437.253472
   Jiménez P, 2001, COMPUT GRAPH-UK, V25, P269, DOI 10.1016/S0097-8493(00)00130-8
   Jung D, 1996, IEEE INT CONF ROBOT, P454
   Klosowski JT, 1998, IEEE T VIS COMPUT GR, V4, P21, DOI 10.1109/2945.675649
   Lin M.C., 1998, PROC IMA C MATH SURF, P37
   LIN MC, 1991, 1991 IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND AUTOMATION, VOLS 1-3, P1008, DOI 10.1109/ROBOT.1991.131723
   Lin MingC., 2004, HDB DISCRETE COMPUTA
   Lombardo JC, 1999, COMP ANIM CONF PROC, P82, DOI 10.1109/CA.1999.781201
   Mirtich B, 1998, ACM T GRAPHIC, V17, P177, DOI 10.1145/285857.285860
   MYSZKOWSKI K, 1995, VISUAL COMPUT, V11, P497, DOI 10.1007/BF02439645
   ROSSIGNAC J, 1992, COMP GRAPH, V26, P353, DOI 10.1145/142920.134092
   Shinya M., 1991, J VISUAL COMP ANIMAT, V2, P132
   *SUN MICR, 2000, JAVA 3D API TUT
   THIBAULT W, 1987, COMPUT GRAPH, V21, P153
   VANECEK G, 1994, J VISUAL COMP ANIMAT, V5, P55, DOI 10.1002/vis.4340050105
   Wagner C., 2002, Virtual Environments 2002. Eurographics Workshop Proceedings, P27
   Wong WSK, 2005, COMPUT ANIMAT VIRT W, V16, P153, DOI 10.1002/cav.104
NR 34
TC 2
Z9 2
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2007
VL 37
IS 9
BP 963
EP 982
DI 10.1002/spe.796
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 194CN
UT WOS:000248321700003
DA 2024-07-18
ER

PT J
AU Henricksen, K
   Indulska, J
   Rakotonirainy, A
AF Henricksen, Karen
   Indulska, Jadwiga
   Rakotonirainy, Andry
TI Using context and preferences to implement self-adapting pervasive
   computing applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE context-awareness; self-adapting applications; pervasive computing;
   preference modelling
AB Applications that exploit contextual information in order to adapt their behaviour to dynamically changing operating environments and user requirements are increasingly being explored as part of the vision of pervasive or ubiquitous computing. Despite recent advances in infrastructure to support these applications through the acquisition, interpretation and dissemination of context data from sensors, they remain prohibitively difficult to develop and have made little penetration beyond the laboratory. This situation persists largely due to a lack of appropriately high-level abstractions for describing, reasoning about and exploiting context information as a basis for adaptation. In this paper, we present our efforts to address this challenge, focusing on our novel approach involving the use of preference information as a basis for making flexible adaptation decisions. We also discuss our experiences in applying our conceptual and software frameworks for context and preference modelling to a case study involving the development of an adaptive communication application. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Queensland, Sch Informat Technol & Elect Engn, St Lucia, Qld 4072, Australia.
   Queensland Univ Technol, Ctr Accid Res & Rd Safety Queensland, Carseldine, Qld 4034, Australia.
C3 University of Queensland; Queensland University of Technology (QUT)
RP Henricksen, K (corresponding author), Univ Queensland, Sch Informat Technol & Elect Engn, St Lucia, Qld 4072, Australia.
EM karen@itee.uq.edu.au
RI Indulska, Jadwiga/AAR-1358-2021; Rakotonirainy,
   Rakotonirainy/HJI-9729-2023; Rakotonirainy, Rakotonirainy/JAC-4062-2023
OI Indulska, Jadwiga/0000-0001-8083-4299; Rakotonirainy,
   Rakotonirainy/0000-0002-2144-4909; Rakotonirainy,
   Rakotonirainy/0000-0002-2144-4909
CR Abowd GD, 1997, WIREL NETW, V3, P421, DOI 10.1023/A:1019194325861
   AGRAWAL R, 2000, P ACM SIGMOD INT C M, P297, DOI DOI 10.1145/342009.335423
   [Anonymous], 2003, THESIS U QUEENSLAND
   Balasubramaniam S, 2003, ICON 2003: 11TH IEEE INTERNATIONAL CONFERENCE ON NETWORKS, P705
   BARKHUUS L, 2003, LECT NOTES COMPUTER, V2864
   Brown P. J., 2001, Personal and Ubiquitous Computing, V5, P253, DOI 10.1007/s007790170004
   Brown P.J., 1998, PERSONAL TECHNOLOGIE, V2, P1
   Brown PJ, 1997, IEEE PERS COMMUN, V4, P58, DOI 10.1109/98.626984
   BROWN PJ, 1996, P EL PUBL PAL ALT, P259
   BYUN HE, 2002, P ECAI2002 WORKSH AI
   BYUN HE, 2001, P UM2001 WORKSH US M
   Cetintemel U., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P622, DOI 10.1109/ICDE.2000.839477
   Chen Guanling, 2002, P 4 IEEE WORKSH MOB
   Cheverst K, 1999, LECT NOTES COMPUT SC, V1707, P193
   Cheverst K., 2000, P ACM C MOBILE COMPU, P20, DOI DOI 10.1145/345910.345916
   Chomicki J, 2002, LECT NOTES COMPUT SC, V2287, P34
   Cohen WW, 1998, ADV NEUR IN, V10, P451
   COUTAZ J, 2002, P 4 INT C COMP AID D
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Fishburn P, 1999, THEOR COMPUT SCI, V217, P359, DOI 10.1016/S0304-3975(98)00277-1
   Henricksen K, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P77, DOI 10.1109/PERCOM.2004.1276847
   HENRICKSEN K, 2002, LECT NOTES COMPUTER, V2414, P167
   Indulska J, 2003, LECT NOTES COMPUT SC, V2893, P224
   Indulska J, 2003, LECT NOTES COMPUT SC, V2574, P247
   Jameson A, 2001, PERS UBIQUIT COMPUT, V5, P29, DOI 10.1007/s007790170025
   JIANG X, 2002, IEEE PERVAS COMPUT, V1, P59
   Klyne Graham., 2003, Composite Capability/Preference Profiles (CC/PP): Structure and Vocabularies
   ROSENBERG J, 2002, 3261 RFC IETF
   RYAN NS, 1999, P TELEGEO 99 1 INT W, P156
   Schilit BN, 2002, IEEE WIREL COMMUN, V9, P46, DOI 10.1109/MWC.2002.1043853
   Schmandt C, 2000, IBM SYST J, V39, P660, DOI 10.1147/sj.393.0660
   Yau S. S., 2002, IEEE Pervasive Computing, V1, P33, DOI 10.1109/MPRV.2002.1037720
NR 32
TC 24
Z9 26
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1307
EP 1330
DI 10.1002/spe.760
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 086HN
UT WOS:000240664500012
DA 2024-07-18
ER

PT J
AU Atkinson, DC
   Griswold, WG
AF Atkinson, DC
   Griswold, WG
TI Effective pattern matching of source code using abstract syntax patterns
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE pattern matching; program understanding; program analysis; call-graphs;
   abstract syntax trees
ID LANGUAGE
AB Program understanding can be assisted by tools that match patterns in the program source. Lexical pattern matchers provide excellent performance and ease of use, but have a limited vocabulary. Syntactic matchers provide more precision, but may sacrifice performance, robustness, or power. To achieve more of the benefits of both models, we extend the pattern syntax of AWK to support matching of abstract syntax trees, as demonstrated in a tool called TAWK. Its pattern syntax is language- independent, based on abstract tree patterns. As in AWK, patterns can have associated actions, which in TAWK are written in C for generality, familiarity, and performance. The use of C is simplified by high-level libraries and dynamic linking. To allow processing of program files containing non-syntactic constructs such as textual macros, mechanisms have been designed that allow matching of 'language-like' macros in a syntactic fashion. We survey and apply prototypical approaches to concretely demonstrate the tradeoffs in program processing. Our results indicate that TAWK can be used to quickly and easily perform a variety of common software engineering tasks, and the extensions to accommodate non-syntactic features significantly extend the generality of syntactic matchers. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Santa Clara Univ, Dept Comp Engn, Santa Clara, CA 95053 USA.
   Univ Calif San Diego, Dept Comp Sci & Engn, La Jolla, CA 92093 USA.
C3 Santa Clara University; University of California System; University of
   California San Diego
RP Atkinson, DC (corresponding author), Santa Clara Univ, Dept Comp Engn, 500 El Camino Real, Santa Clara, CA 95053 USA.
EM atkinson@engr.scu.edu
OI Griswold, William/0000-0003-0663-6977
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   AHO AV, 1979, SOFTWARE PRACT EXPER, V9, P267, DOI 10.1002/spe.4380090403
   AHO AV, 1980, FORMAL LANGUAGE THEO, P325
   [Anonymous], COMPUTATIONAL LINGUI
   Atkinson DC, 2001, PROC IEEE INT CONF S, P52, DOI 10.1109/ICSM.2001.972711
   Atkinson DC, 1996, PROC INT CONF SOFTW, P16, DOI 10.1109/ICSE.1996.493398
   Boehm B., 1975, PRACTICAL STRATEGIES, P3
   BURSON S, 1990, PROCEEDINGS : THE FOURTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P314, DOI 10.1109/CMPSAC.1990.139375
   Devanbu P. T., 1996, ACM Transactions on Software Engineering and Methodology, V5, P42, DOI 10.1145/226155.226157
   DEVANBU PT, 1992, P 14 INT C SOFTW ENG, P307
   GRAHAM SL, 1979, P SIGPLAN 79 S COMP, P168
   GRISWOLD R, 1990, ICON PROGRAMMING LAN
   GRISWOLD WG, 1995, J SYST SOFTWARE, V30, P99, DOI 10.1016/0164-1212(94)00119-8
   GROBAT JI, 1994, CS94376 U CAL DEP CO
   LADD DA, 1995, IEEE T SOFTWARE ENG, V21, P894, DOI 10.1109/32.473218
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Levine J.R., 1992, LEX YACC
   LEWKOWICZ JM, 1989, COMPLETE MUMPS INTRO
   MARCUS M, 1992, PENN TREEBANK PROJEC
   Murphy G. C., 1996, ACM Transactions on Software Engineering and Methodology, V5, P262, DOI 10.1145/234426.234441
   Murphy GC, 1996, PROC INT CONF SOFTW, P90, DOI 10.1109/ICSE.1996.493405
   PAUL S, 1994, IEEE T SOFTWARE ENG, V20, P463, DOI 10.1109/32.295894
   Stallman R, 1993, GNU EMACS MANUAL
   Steele G.L., 1984, Common LISP: The Language, V2nd
   WEISE D, 1993, P C PROGR LANG DES I, P156, DOI DOI 10.1145/155090.155105
NR 25
TC 7
Z9 13
U1 0
U2 4
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2006
VL 36
IS 4
BP 413
EP 447
DI 10.1002/spe.704
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 031MK
UT WOS:000236708500004
DA 2024-07-18
ER

PT J
AU Venstermans, K
   Eeckhout, L
   De Bosschere, K
AF Venstermans, K
   Eeckhout, L
   De Bosschere, K
TI 64-bit versus 32-bit virtual machines for Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; Virtual Machine; 64-bit versus 32-bit computing; performance
   evaluation; PowerPC
AB The Java language is popular because of its platform independence, making it useful in a lot of technologies ranging from embedded devices to high-performance systems. The platform-independent property of Java, which is visible at the Java bytecode level, is only made possible thanks to the availability of a Virtual Machine (VM), which needs to be designed specifically for each underlying hardware platform. More specifically, the same Java bytecode should run properly on a 32-bit or a 64-bit VM. In this paper, we compare the behavioral characteristics of 32-bit and 64-bit VMs using a large set of Java benchmarks. This is done using the Jikes Research VM as well as the IBM JDK 1.4.0 production VM on a PowerPC-based IBM machine. By running the PowerPC machine in both 32-bit and 64-bit mode we are able to compare 32-bit and 64-bit VMs. We conclude that the space an object takes in the heap in 64-bit mode is 39.3% larger on average than in 32-bit mode. We identify three reasons for this: (i) the larger pointer size, (ii) the increased header and (iii) the increased alignment. The minimally required heap size is 51.1% larger on average in 64-bit than in 32-bit mode. From our experimental setup using hardware performance monitors, we observe that 64-bit computing typically results in a significantly larger number of data cache misses at all levels of the memory hierarchy. In addition, we observe that when a sufficiently large heap is available, the IBM JDK 1.4.0 VM is 1.7% slower on average in 64-bit mode than in 32-bit mode. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Ghent, Dept Elect & Informat Syst, B-9000 Ghent, Belgium.
C3 Ghent University
RP Univ Ghent, Dept Elect & Informat Syst, St Pietersnieuwstr 41, B-9000 Ghent, Belgium.
EM kvenster@elis.UGent.be
RI De Bosschere, Koen OM/P-6865-2014
CR Adl-Tabatabai AR, 2004, INT SYM CODE GENER, P100, DOI 10.1109/CGO.2004.1281667
   Alpern B, 2000, IBM SYST J, V39, P211, DOI 10.1147/sj.391.0211
   Behling S., 2001, POWER4 PROCESSOR INT
   Blackburn SM, 2004, PROC INT CONF SOFTW, P137, DOI 10.1109/ICSE.2004.1317436
   BLACKBURN SM, 2004, P ACM C MEAS MOD COM, P25
   Cain HW, 2001, HPCA: SEVENTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTING ARCHITECTURE, PROCEEDINGS, P229, DOI 10.1109/HPCA.2001.903266
   Chilimbi TrishulM., 1998, Proceedings of the 1st international symposium on Memory management, ISMM '98, P37
   Dieckmann S, 1999, LECT NOTES COMPUT SC, V1628, P92
   EECKHOUT L, 2003, P 18 ANN ACM SIGPLAN, P169
   GEORGES A, 2004, P 19 ANN ACM SIGPLAN, P270
   GLASKOWSKY PN, 2004, ATHLON 64 MOVING MAS
   HALFHILL TR, 2004, AMD  INTEL HARMONIZE
   Karlsson M, 2003, NINTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE, PROCEEDINGS, P217, DOI 10.1109/HPCA.2003.1183540
   Kim JS, 2000, PERF E R SI, V28, P264, DOI 10.1145/345063.339422
   KREWELL K, 2003, AMD SERVES OPTERON
   LI T, 2000, P ACM INT C SUP, P22
   MOGUL JC, 1995, USENIX 1995 TECH C U, P187
   Radhakrishnan R, 2001, IEEE T COMPUT, V50, P131, DOI 10.1109/12.908989
   SESHADRI P, 2001, IEEE 4 ANN WORKSH WO
   SHUF Y, 2001, SIGMETRICS PERFORMAN, P194
   Suganuma T, 2000, IBM SYST J, V39, P175, DOI 10.1147/sj.391.0175
   SWEENEY P, 2004, P 3 VIRT MACH RES TE, P57
   VENSTERMANS K, 2003, WORKSH SIGN PROC INT
NR 23
TC 4
Z9 4
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2006
VL 36
IS 1
BP 1
EP 26
DI 10.1002/spe.679
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 002KR
UT WOS:000234610800001
DA 2024-07-18
ER

PT J
AU Gold, NE
   Harman, M
   Binkley, D
   Hierons, RM
AF Gold, NE
   Harman, M
   Binkley, D
   Hierons, RM
TI Unifying program slicing and concept assignment for higher-level
   executable source code extraction
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 9th Working Conference on Reverse Engineering
CY OCT 29-NOV 01, 2002
CL RICHMOND, VA
SP Reengn Forum, Virginia Commonwealth Univ, IEEE Comp Soc, Tech Council Software Engn
DE program slicing; concept assignment; reverse engineering
ID SOFTWARE MAINTENANCE; REUSABLE FUNCTIONS; INFORMATION
AB Program slicing and concept assignment have both been proposed as source code extraction techniques. Unfortunately, each has a weakness that prevents wider application. For slicing, the extraction criterion is expressed at a very low level; constructing a slicing criterion requires detailed code knowledge which is often unavailable. The concept assignment extraction criterion is expressed at the domain level. However, unlike a slice, the extracted code is not executable as a separate subprogram in its own right. This paper introduces a unification of slicing and concept assignment which exploits their combined advantages, while overcoming these two individual weaknesses. Our ' concept slices ' are executable programs extracted using high-level criteria. The paper introduces four techniques that combine slicing and concept assignment and algorithms for each. These algorithms were implemented in two separate tools used to illustrate the application of the concept slicing algorithms in two very different case studies. The first is a commercially-written COBOL module from a large financial organization, the second is an open source utility program written in C. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Kings Coll London, Dept Comp Sci, London WC2R 2LS, England.
   Loyola Coll, Baltimore, MD 21210 USA.
   Brunel Univ, Uxbridge UB8 3PH, Middx, England.
C3 University of London; King's College London; Loyola University Maryland;
   Brunel University
RP Kings Coll London, Dept Comp Sci, London WC2R 2LS, England.
EM nicolas@dcs.kcl.ac.uk
OI Harman, Mark/0000-0002-5864-4488; Hierons, Robert/0000-0002-4771-1446
CR [Anonymous], 1997, SPRINGER SERIES INFO
   [Anonymous], 1995, FDN SOFTWARE MEASURE
   [Anonymous], SOFTWARE METRICS RIG
   Anquetil N, 1998, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.1998.671105
   Ball T., 1994, Proceedings. IEEE Symposium on Visual Languages (Cat. No.94TH8010), P288, DOI 10.1109/VL.1994.363606
   Beszédes A, 2002, PROC IEEE INT CONF S, P12, DOI 10.1109/ICSM.2002.1167743
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   BIGGERSTAFF TJ, 1993, P 5 INT C SOFTW ENG
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Binkley D., 1993, ACM Letters on Programming Languages and Systems, V2, P31, DOI 10.1145/176454.176473
   Binkley D, 2003, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2003.1235405
   Binkley D., 1996, Advances in Computers, V43, P1
   CANFORA G, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P424, DOI 10.1109/ICSM.1994.336752
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   Cimitile A., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P216, DOI 10.1109/ICSM.1993.366940
   Cimitile A, 1996, J SOFTW MAINT-RES PR, V8, P145, DOI 10.1002/(SICI)1096-908X(199605)8:3<145::AID-SMR127>3.0.CO;2-9
   DANICIC S, IN PRESS J SYSTEMS S
   DANICIC S, 2004, P 12 INT WORKSH PROG
   De Lucia A, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P363, DOI 10.1109/CSMR.2003.1192445
   De Lucia A, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P142, DOI 10.1109/SCAM.2001.972675
   DEVANBU P, 1991, COMMUN ACM, V34, P34, DOI 10.1145/103167.103172
   FIELD J, 1995, P 22 ACM S PRINC PRO, P379
   Fox C, 2004, SOFTWARE PRACT EXPER, V34, P15, DOI 10.1002/spe.556
   Gold N., 2002, IEE Proceedings-Software, V149, P103, DOI 10.1049/ip-sen:20020549
   Gold N, 2001, PROC IEEE INT CONF S, P545, DOI 10.1109/ICSM.2001.972768
   Gold N, 2001, PROG COMPREHEN, P135, DOI 10.1109/WPC.2001.921725
   GOLD NE, 2000, THESIS U DURHAM
   *GRAMM INC, 2002, COD SLIC SYST
   Hall R. J., 1995, Automated Software Engineering, V2, P33, DOI 10.1007/BF00873408
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   Harman M, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P11, DOI 10.1109/WCRE.2002.1173060
   HARMAN M, 2001, SOFTWARE FOCUS, V2, P85
   HARMAN M, 1997, P 19 ICSE WORKSH PRO
   HARMAN M, 2004, J AUTOMATED SOFTWARE, V11, P27
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Karakostas V., 1992, Journal of Software Maintenance: Research and Practice, V4, P1, DOI 10.1002/smr.4360040102
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Lanubile F, 1997, IEEE T SOFTWARE ENG, V23, P246, DOI 10.1109/32.588543
   Longworth H. D., 1986, Proceedings 10th Anniversary COMSAC '86. The IEEE Computer Society's Tenth Annual International Computer Software and Applications Conference (Cat. No.86CH2356-4), P383
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Merlo E, 2003, J SOFTW MAINT EVOL-R, V15, P205, DOI 10.1002/smr.274
   NING JQ, 1993, IEEE WORK C REV ENG, P64
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   Ott L. M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P198, DOI 10.1145/74587.74614
   Ott LM, 1998, INFORM SOFTWARE TECH, V40, P691, DOI 10.1016/S0950-5849(98)00092-5
   OTT LM, 1992, P 10 ANN SOFTW REL S, P16
   Rich C., 1990, PROGRAMMERS APPRENTI
   TIP F, 1995, J PROGRAM LANG, V3, P121
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser MD., 1979, PROGRAM SLICES FORMA
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   WILLS LM, 1992, THESIS MIT
NR 53
TC 13
Z9 14
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2005
VL 35
IS 10
BP 977
EP 1006
DI 10.1002/spe.664
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 952AV
UT WOS:000230974500004
DA 2024-07-18
ER

PT J
AU Buyya, R
   Murshed, M
   Abramson, D
   Venugopal, S
AF Buyya, R
   Murshed, M
   Abramson, D
   Venugopal, S
TI Scheduling parameter sweep applications on global Grids: a deadline and
   budget constrained cost-time optimization algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE grid computing; scheduling; computational economy; Nimrod-G; Gridbus
   broker
AB Computational Grids and peer-to-peer (P2P) networks enable the sharing, selection, and aggregation of geographically distributed resources for solving large-scale problems in science, engineering, and commerce. The management and composition of resources and services for scheduling applications, however, becomes a complex undertaking. We have proposed a computational economy framework for regulating the supply of and demand for resources and allocating them for applications based on the users' quality-of-service requirements. The framework requires economy-driven deadline- and budget-constrained (DBC) scheduling algorithms for allocating resources to application jobs in such a way that the users' requirements are met. In this paper, we propose a new scheduling algorithm, called the DBC cost-time optimization scheduling algorithm, that aims not only to optimize cost, but also time when possible. The performance of the cost-time optimization scheduling algorithm has been evaluated through extensive simulation and empirical studies for deploying parameter sweep applications on global Grids. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Melbourne, Dept Comp Sci & Software Engn, Grid Comp & Distributed Syst Lab, Melbourne, Vic 3010, Australia.
   Monash Univ, Gippsland Sch Comp & Informat Technol, Churchill, Vic 3842, Australia.
   Monash Univ, Sch Comp Sci & Software Engn, Melbourne, Vic 3145, Australia.
C3 University of Melbourne; Monash University; Federation University
   Australia; Monash University
RP Univ Melbourne, Dept Comp Sci & Software Engn, Grid Comp & Distributed Syst Lab, Melbourne, Vic 3010, Australia.
EM raj@cs.mu.oz.au
RI Buyya, Rajkumar/C-3424-2009
OI Murshed, Manzur/0000-0001-7079-9717; Abramson, David/0000-0003-0441-4596
CR ABRAMSON D, 1999, 1999 ADV SIM TECHN C
   ABRAMSOND, 2000, P INT PAR DISTR PROC
   [Anonymous], CONCURRENCY COMPUTAT
   [Anonymous], 2001, PEER TO PEER HARNESS
   Aydin H., 1999, P IEEE REAL TIME SYS
   BERMAN F, 1997, P 8 NEC RES S GERM M
   BIYABANI S, 1998, P REAL TIM SYST S 6
   BLACKSTONE, 2001, WHITE PAPER
   Buyya R, 2004, GECON 2004, P19
   BUYYA R, 2001, CSSE103 MON U
   BUYYA R, WORLD WIDE GRID
   Buyya R., 2000, P 2 INT WORKSH ACT M
   BUYYA R, 2002, THESIS MONASH U MELB
   Buyya R, 2000, P 4 INT C EXH HIGH P
   BUYYA R, 2000, P 2000 INT C PAR DIS
   CASANOVA H, 2001, INT J HIGH PERFORMAN, V15
   CASANOVA H, 1999, INT J HIGH PERFORMAN, V13
   CASANOVA H, 2001, P 1 IEEE ACM INT S C
   CASANOVA H, 2000, P IEEE SC 2000 INT C
   CASAVANT TL, 1988, IEEE T SOFTWARE ENG, V14
   *CERN, 2003, LARG HADR COLL LHC C
   Chun B.N., 2002, P 2 IEEE INT S CLUST
   CZAJKOWSKI K, 1998, P IPPS SPDP 98 WORKS
   FEITELSON DG, 1999, LECT NOTES COMPUTER, V1659
   Foster I., 1999, GRID BLUEPRINT FUTUR
   Frey James., 2001, P 10 IEEE S HIGH PER
   HACKER T, GLOBAL GRID FORUM
   HARITSA JR, 1991, P REAL TIM SYST S
   HAWICK K, 1999, FUTURE GENERATION CO, V15
   Mutka M., 1988, P 8 INT C DISTR COMP
   PANDE V, 2001, PROTEIN FOLDING INTE
   Sato M., 1997, P INT C HIGH PERF CO
   SMALLEN S, 2001, P IEEE ACM SUP SC 20
   SONG H, 2000, P SUP SC 2000 C DALL
   *SPEC, 2002, SPEC CPU2000 RES
   SULLIVAN WT, 1997, P 5 INT C BIOASTR
   WALDSPURGER C, 1992, IEEE T SOFTW ENG FEB
   WEISSMAN J, 1996, P 5 IEEE INT S HIGH
   WOLSKI R, 2001, INT J HIGH PERFORMAN, V15
   YU J, 2002, MARKET ORIENTED GRID
NR 40
TC 86
Z9 105
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2005
VL 35
IS 5
BP 491
EP 512
DI 10.1002/spe.646
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 913XQ
UT WOS:000228189300004
DA 2024-07-18
ER

PT J
AU Sunderland, RA
   Damper, RI
   Crowder, RA
AF Sunderland, RA
   Damper, RI
   Crowder, RA
TI Flexible XML-based configuration of physical simulations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XML; robotics; simulation of physical systems
AB The extensible markup language XML can be used to support the integration of several component programming environments to create a flexible physical simulation system. Data exchange via open-standard-based plain text files allows system components to be loosely-coupled, rather than combined into an integrated development environment, so that the most appropriate tools can be used for each component and the system can be extended with minimal disruption. This paper details an example application using this technology to configure a simulation of robotic manipulation. Those parts of the system that require real-time data exchange use simple UNIX socket-based interactions, which are configured using shared XML setup files. The approach provides a reusable template for other, similar projects. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
C3 University of Southampton
RP Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
EM rid@ecs.soton.ac.uk
CR Bray Tim., 1998, EXTENSIBLE MARKUP LA
   Corke PI, 1996, IEEE ROBOT AUTOM MAG, V3, P24, DOI 10.1109/100.486658
   Denavit J., 1955, J. Appl. Mech., V22, P215, DOI DOI 10.1115/1.4011045
   DOMINGUEZLOPEZ JA, 2003, P INT C ROB VIS INF, P367
   DOMINGUEZLOPEZ JA, UNPUB ROBOTICS AUTON
   MILLER AT, 2001, THESIS COLUMBIA U
NR 6
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2004
VL 34
IS 12
BP 1149
EP 1155
DI 10.1002/spe.606
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859BU
UT WOS:000224237900002
DA 2024-07-18
ER

PT J
AU Papaspyrou, NS
   Kassios, IT
AF Papaspyrou, NS
   Kassios, IT
TI GLU embedded in C++: a marriage between multidimensional and
   object-oriented programming
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multidimensional programming; object-oriented programming; GLU; C plus;
   lazy arrays; lazy functions
ID LANGUAGE; LOGIC
AB The embedding of a small but expressive language of multidimensional functional programming in a well known and widely used language of object-oriented programming leads to the combination of two radically different programming models. In this paper, we formally define the syntax and semantics of GLU, which can be thought of as the multidimensional core of Lucid and GLU, and we describe its implementation as a language embedded in C++. With the aid of a few examples, we argue that the marriage of the two programming models is not only compatible and natural, but also that it produces a new and interesting hybrid language. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Natl Tech Univ Athens, Sch Elect & Comp Engn, Inst Software Engn, Athens 15780, Greece.
   Univ Toronto, Dept Comp Sci, Toronto, ON M5S 3G4, Canada.
C3 National Technical University of Athens; University of Toronto
RP Natl Tech Univ Athens, Sch Elect & Comp Engn, Inst Software Engn, Athens 15780, Greece.
EM nickie@softlab.ntua.gr
OI Papaspyrou, Nikolaos/0000-0002-1934-7181
CR [Anonymous], 1998, Purely Functional Data Structures
   Ashcroft E., 1995, MULTIDIMENSIONAL PRO
   ASHCROFT EA, 1977, COMMUN ACM, V20, P519, DOI 10.1145/359636.359715
   COPLIEN JO, 1992, ADV CPLUSPLUS PROGRA
   Dowty D. R., 1981, INTRO MONTAGUE SEMAN
   DU WC, 1990, IEEE SOFTWARE, V7, P78, DOI 10.1109/52.55232
   Hudak P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P134, DOI 10.1109/ICSR.1998.685738
   Lalement Rene., 1993, P 6 INT S LUCID INTE, P83
   Paquet Joey., 1994, P 7 INT S LUCID INTE, P28
   PLAICE J, 1993, IEEE T SOFTWARE ENG, V19, P268, DOI 10.1109/32.221137
   Rondogiannis P, 1999, SOFTWARE PRACT EXPER, V29, P1201, DOI 10.1002/(SICI)1097-024X(199911)29:13<1201::AID-SPE278>3.0.CO;2-0
   Rondogiannis P., 1997, Journal of Functional Programming, V7, P73, DOI 10.1017/S0956796897002633
   Rondogiannis P., 1999, Journal of Functional Programming, V9, P527, DOI 10.1017/S0956796899003445
   Rondogiannis P, 1998, COMPUT LANG, V24, P155, DOI 10.1016/S0096-0551(98)00009-5
   Stoy Joseph E., 1977, DENOTATIONAL SEMANTI
   Tennent R.D., 1991, Semantics of Programming Languages
   Wadge W. W., 1985, Lucid, the Dataflow Programming Language
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 31
TC 0
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2004
VL 34
IS 7
BP 609
EP 630
DI 10.1002/spe.582
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825SB
UT WOS:000221777500001
DA 2024-07-18
ER

PT J
AU Garcia, AF
   de Lucena, CJP
   Cowan, DD
AF Garcia, AF
   de Lucena, CJP
   Cowan, DD
TI Agents in object-oriented software engineering
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multi-agent systems; software agents; software engineering;
   object-oriented systems; aspect-oriented software development
AB Software engineers of multi-agent systems (MASs) are faced with different concerns such as autonomy, adaptation, interaction, collaboration, learning, and mobility, which are essentially different from classical concerns addressed in object-oriented software engineering. MAS developers, however, have relied mostly on object-oriented design techniques and programming languages, such as Java. This often leads to a poor separation of MAS concerns and in turn to the production of MASs that are difficult to maintain and reuse. This paper discusses software engineering approaches for MASs, and presents a new method for integrating agents into object-oriented software engineering from an early stage of design. The proposed approach encourages the separate handling of MAS concerns, and provides a disciplined scheme for their composition. Our proposal explores the benefits of aspect-oriented software development for the incorporation of agents into object-oriented systems. We also illustrate our aspect-oriented approach through the Portalware multi-agent system, a Web-based environment for the development of e-commerce portals. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Pontificia Univ Catolica Rio de Janeiro, Dept Comp Sci, Software Engn Lab, SoC & Agents TecComm Grp, BR-22453900 Rio De Janeiro, Brazil.
   Univ Waterloo, Comp Syst Grp, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 Pontificia Universidade Catolica do Rio de Janeiro; University of
   Waterloo
RP Pontificia Univ Catolica Rio de Janeiro, Dept Comp Sci, Software Engn Lab, SoC & Agents TecComm Grp, Rua Marques Sao Vicente 225, BR-22453900 Rio De Janeiro, Brazil.
EM afgarcia@inf.puc-rio.br
CR [Anonymous], 2003, Foundation for Intelligent Physical Agents
   [Anonymous], LECT NOTES COMPUTER
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Baumer Dirk., 1997, P 1997 C PATT LANG P
   Bellifemine F., 1999, PAAM99. Proceedings of the Fourth International Conference on the Practical Applications of Intelligent Agents and Multi-agent Technology, P97
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Bradshaw J., 1996, SOFTWARE AGENTS
   Bradshaw J.M., 1997, SOFTWARE AGENTS
   CHAVEZ C, 2001, P TUT WORKSH ASP OR
   CHAVEZ C, 2001, P WORKSH ADV SEP CON
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   DEBENHAM J, 2002, P OOPSLA 2002 WORKSH
   ELAMMARI M, 1999, P WORKSH AG OR INF S
   Fayad M., 1999, IMPLEMENTING APPL FR
   FININ T., 1994, P 3 INT C INFORM KNO, P456
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia A., 2002, Journal of the Brazilian Computer Society, V8, DOI 10.1590/S0104-65002002000100006
   GARCIA A, 2003, SOFTWARE ENG LARGE S
   Garcia A., 2002, ACM SOFTWARE ENG NOT, V27, P82
   GARCIA A, 2004, IN PRESS LECT NOTES, V2940
   Garcia A. F., 2001, Managing Information Technology in a Global Environment. 2001 Information Resources Management Association International Conference, P722
   Gosling James, 1996, The Java Language Specification
   Guessoum Z, 1999, IEEE CONCURR, V7, P68, DOI 10.1109/4434.788781
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   Iglesias Carlos., 1998, ATAL, V98, P317
   Jennings N.R., 2000, HDB AGENT TECHNOLOGY
   KANG KC, 1990, CMUSEI90TR21 SOFTW E
   KARAGEORGOS A, 2002, P ACM S APPL COMPUTE, P306
   KENDALL E, 1999, IMPLEMENTING APPL FU
   KENDALL EA, 1999, P ACM C OBJ OR SYST, P353
   KICZALES G, 2001, LECT NOTES COMPUTER, V2072
   Lange D. B., 1998, PROGRAMMING DEV JAVA
   LEHMAN T, 1999, HAWAII INT C SYST SC
   LETIER E, 2001, P 24 INT C SOFTW ENG
   Nwana HS, 1996, KNOWL ENG REV, V11, P205, DOI 10.1017/S026988890000789X
   Nwana HS, 1999, APPL ARTIF INTELL, V13, P129, DOI 10.1080/088395199117513
   *OBJ MAN GROUP AG, 2000, AG TECHN GREEN PAP V
   Odell J., 2000, P AGENT ORIENTED INF
   PACE A, 2003, LECT NOTES COMPUTER, V2603
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   RAO AS, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P473
   Rao AS., 1995, Proceedings of the first international conference on multi-agent systems, P312
   Ripper P. S., 2000, World Wide Web, V3, P43, DOI 10.1023/A:1019273427930
   SANTANNA C, 2003, P 17 BRAZ S SOFTW EN
   SHOHAM Y, 1993, ARTIF INTELL, V60, P51, DOI 10.1016/0004-3702(93)90034-9
   SILVA O, 2003, LECT NOTES COMPUTER, V2603
   SILVA V, 2003, LECT NOTES COMPUTER, V2603
   *SOC AG GROUP, SEP CONC MULT AG SYS
   SYCARA K, 2003, AUTON AGENT MULTI-AG, V7, P1
   TARR P, 2002, HYPER J USER INSTALL
   Tarr P., 1999, P 21 INT C SOFTW ENG
   WAGNER G, 2000, P 2 INT S AG THEOR A
   Wooldridge M, 2000, AUTON AGENT MULTI-AG, V3, P285, DOI 10.1023/A:1010071910869
   WOOLDRIDGE M, 2001, STATE ART AGENT ORIE
   WOOLDRIDGE M, 1994, LECT NOTES ARTIF INT, V890, P1
   2001, BORLAND TOGETHER CON
   1999, FIPA99 DRAFT SPECIFI
NR 59
TC 19
Z9 21
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2004
VL 34
IS 5
BP 489
EP 521
DI 10.1002/spe.578
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 810TU
UT WOS:000220727400004
DA 2024-07-18
ER

PT J
AU Tak, SW
   Park, EK
AF Tak, SW
   Park, EK
TI Adaptive secure software architecture for electronic commerce
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Computer Communications and Networks
CY OCT 15-17, 2001
CL PHOENIX, AZ
SP Army Res Lab, IBM, Telcordia, Nokia, Avaya, IEEE Communicat Soc
DE adaptive; security; e-commerce; dependency; efficiency
AB As Internet business exponentially grows, a need for the high security level categories that identify a group of connections or an individual transaction is manifest. Recently the development of efficient and secure software architecture has been in high demand. In this paper, we propose adaptive secure software architecture to support secure e-commerce transactions. Our adaptive secure software architecture dynamically adapts security classes based on the nature and sensitivity of interactions among participants. Four security classes incorporate security levels of cryptographic techniques with a degree of information sensitivity. We have done extensive experiments on the performance of the proposed adaptive secure software architecture. Experimental results show that our adaptive secure software architecture provides e-commerce transactions with high-quality security services. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Missouri, Sch Interdisciplinary Comp & Engn, Kansas City, MO 64110 USA.
C3 University of Missouri System; University of Missouri Kansas City
RP Univ Missouri, Sch Interdisciplinary Comp & Engn, 5100 Rockhill Rd, Kansas City, MO 64110 USA.
EM swt5e1@umkc.edu
CR [Anonymous], 1988, ACM SIGCOMM COMPUTER
   BARRON N, 1996, RSA EURO TECHNICAL R
   BELLARE M, 1995, P 1 USENIX WORKSH EL
   Electronic Frontier Foundations, 1998, CRACK DES SECR ENCR
   FORD W, 1997, SECURE ELEC COMMERCE
   KAN P, 1987, COMPUT COMMUN, V17, P2
   Krishnamurthy P, 2000, IEEE VTS VEH TECHNOL, P1960, DOI 10.1109/VETECF.2000.886156
   MANI A, 1996, COMMUN ACM, V39, P29
   Pfleeger C.P., 1997, SECURITY COMPUTING, V2nd, DOI [10.5555/48805, DOI 10.5555/48805]
   Portmann M, 2001, NINTH IEEE INTERNATIONAL CONFERENCE ON NETWORKS, PROCEEDINGS, P216, DOI 10.1109/ICON.2001.962343
   Wagner D, 1996, PROCEEDINGS OF THE SECOND USENIX WORKSHOP ON ELECTRONIC COMMERCE, P29
   1991, 793 RFC
NR 12
TC 7
Z9 8
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2003
VL 33
IS 14
BP 1343
EP 1357
DI 10.1002/spe.551
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 741JJ
UT WOS:000186454700004
OA Bronze
DA 2024-07-18
ER

PT J
AU Wu, MY
   Shu, W
   Lin, CS
AF Wu, MY
   Shu, W
   Lin, CS
TI Odyssey: a high-performance clustered video server
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE video content retrieval; clustered video servers; real-time scheduling;
   quality-of-service; interactive browsing operations
ID ON-DEMAND
AB Video servers are essential in video-on-demand and other multimedia applications. In this paper, we present our high-performance clustered CBR video server, Odyssey. Odyssey is a server connecting PCs with switched Ethernet. It provides efficient support for normal play and interactive browsing functions such as fast-forward and fast-backward. We designed a set of algorithms for scheduling, synchronization and admission control, which results in a high utilization of resources. Odyssey is able to deliver a large number of video streams. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ New Mexico, Dept Elect & Comp Engn, Albuquerque, NM 87131 USA.
C3 University of New Mexico
RP Wu, MY (corresponding author), Univ New Mexico, Dept Elect & Comp Engn, Albuquerque, NM 87131 USA.
RI Wu, MinYou/B-3780-2009; Lin, Chow-Sing/JPX-6621-2023; Shu,
   Wei/A-9329-2009
CR BERSON S, 1994, 5 INT C MAN DAT MAY
   BOLOSKY WJ, 1996, NOSSDAV 96
   Bondy J. A., 1976, GRAPH THEORY APPL, V290
   BUDDHIKOT MM, 1994, J COMPUTER NETWORKS, P504
   BUDDHIKOT MM, 1995, P 5 INT WORKSH NETW
   CHANG E, 1994, P STOR RETR IM VID D, V2
   CHEN M, 1994, ACM MULTIMEDIA 9 OCT
   DEY JK, 1994, IS T SPIE S EL IM SC
   DEYSIRCAR JK, 1994, ACM MULTIMEDIA   OCT, P25
   FENG W, 1996, ACM MULTIMEDIA 9 JUN, P127
   FREEDMAN C, 1995, SIGMOD
   GALL DL, 1991, COMMUN ACM, V34, P46
   GHANDEHARIZADEH S, 1993, IEEE T KNOWL DATA EN, V5, P658, DOI 10.1109/69.234777
   Ghandeharizadeh S, 1997, MULTIMED TOOLS APPL, V5, P79, DOI 10.1023/A:1009690011119
   Hall P., 1935, J LOND MATH SOC, V10, P26, DOI [DOI 10.1112/JLMS/S1-10.37.26, 10.1112/jlms/s1-10.37.26]
   HASKIN R, 1996, IEEE 1996 SPR COMPCO
   HSIEH JW, 1995, J PARALLEL DISTR COM, V30, P147, DOI 10.1006/jpdc.1995.1134
   JADAV D, 1995, J PARALLEL DISTR COM, V30, P190, DOI 10.1006/jpdc.1995.1137
   LEE Y, 1996, IEEE INFOCOM 98
   LIN CS, 2000, IEEE INT C MULT EXP
   LIN CS, 1999, ACM MULT 99 NOV, V2, P143
   MARTIN C, 1996, MULTIMEDIA INFORMATI, pCH5
   Reddy A. L. N., 1993, P ACM MULT C, P225
   REDDY ALN, 1995, 2 IEEE INT C MULT CO
   REDDY ALN, 1997, SPIE MULT COMP NETW
   TEWARI R, 1995, RC20020 IBM RES REP
   TEWARI R, 1996, 3 IEEE INT C MULT CO
   VIN HM, 1992, 3 INT WORKSH NETW OP, P56
   Wu MY, 2002, IEEE T MULTIMEDIA, V4, P48, DOI 10.1109/6046.985553
   Wu MY, 2001, MULTIMED TOOLS APPL, V14, P79, DOI 10.1023/A:1011363808503
NR 30
TC 1
Z9 1
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2003
VL 33
IS 7
BP 673
EP 700
DI 10.1002/spe.521
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 686FL
UT WOS:000183310700003
DA 2024-07-18
ER

PT J
AU Clausecker, R
   Lemire, D
AF Clausecker, Robert
   Lemire, Daniel
TI Transcoding unicode characters with AVX-512 instructions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE character encoding; text processing; unicode; vectorization
AB Intel includes in its recent processors a powerful set of instructions capable of processing 512-bit registers with a single instruction (AVX-512). Some of these instructions have no equivalent in earlier instruction sets. We leverage these instructions to efficiently transcode strings between the most common formats: UTF-8 and UTF-16. With our novel algorithms, we are often twice as fast as the previous best solutions. For example, we transcode Chinese text from UTF-8 to UTF-16 at more than 5 GiB s-1$$ {\mathrm{s}}<^>{-1} $$ using fewer than 2 CPU instructions per character. To ensure reproducibility, we make our software freely available as an open-source library. Our library is part of the popular Node.js JavaScript runtime.
C1 [Clausecker, Robert] Zuse Inst Berlin, Berlin, Germany.
   [Lemire, Daniel] Univ Quebec TELUQ, DOT Lab Res Ctr, Montreal, PQ, Canada.
   [Lemire, Daniel] Univ Quebec TELUQ, DOT Lab Res Ctr, Montreal, PQ H2S 3L5, Canada.
C3 Zuse Institute Berlin; University of Quebec; Universite TELUQ;
   University of Quebec; Universite TELUQ
RP Lemire, D (corresponding author), Univ Quebec TELUQ, DOT Lab Res Ctr, Montreal, PQ H2S 3L5, Canada.
EM daniel.lemire@teluq.ca
FU Natural Sciences and Engineering Research Council of Canada
FX We thank W. Mu & lstrok;a who produced an early UTF-8 to UTF-16
   transcoder using AVX-512 instructions. The version presented in this
   manuscript follows a different design but Mu & lstrok;a's work provided
   a crucial motivation. We thank N. Boyer for his technical work on our
   software library, benchmarks, and tests.
CR Abel A, 2022, PROCEEDINGS OF THE 36TH ACM INTERNATIONAL CONFERENCE ON SUPERCOMPUTING, ICS 2022, DOI 10.1145/3524059.3532396
   Abel A, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P673, DOI 10.1145/3297858.3304062
   [Anonymous], 2010, INT COMPONENTS UNICO
   Cameron RD, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P91, DOI 10.1145/1345206.1345222
   Downs T., 2020, ICE LAKE AVX 512 DOW
   Fog A., 2022, MICROARCHITECTURE IN
   Fog Agner, 2022, INSTRUCTION TABLES L
   Gatilov S., 2012, UTF8LUT VECTORIZED U
   Hoffman P., 2000, UTF 16 ENCODING ISO
   Inoue H., 2008, INF PROCESS SOC JPN, V1, P1
   Intel, 2023, INTRINSICS GUIDE
   Intel, 2022, 64 IA 32 ARCHITECTUR, V2
   International Business Machines Corporation, 2022, ZARCHITECTURE PRINCI
   Keiser J, 2021, SOFTWARE PRACT EXPER, V51, P950, DOI 10.1002/spe.2920
   Lemire D, 2022, SOFTWARE PRACT EXPER, V52, P555, DOI 10.1002/spe.3036
   Matz Michael., 2014, SYSTEM APPL BINARY I
   Mula W, 2020, SOFTWARE PRACT EXPER, V50, P89, DOI 10.1002/spe.2777
   Najafi Ali, 2021, HotOS '21: Proceedings of the Workshop on Hot Topics in Operating Systems, P65, DOI 10.1145/3458336.3465293
   Yergeau F., 2003, UTF 8
NR 19
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2023
VL 53
IS 12
SI SI
BP 2430
EP 2462
DI 10.1002/spe.3261
EA SEP 2023
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LI0I5
UT WOS:001119191700001
OA Green Submitted, Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Denkers, J
   Brunner, M
   van Gool, L
   Vinju, JJ
   Zaidman, A
   Visser, E
AF Denkers, Jasper
   Brunner, Marvin
   van Gool, Louis
   Vinju, Jurgen J.
   Zaidman, Andy
   Visser, Eelco
TI Taming complexity of industrial printing systems using a
   constraint-based DSL: An industrial experience report
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE constraint programming; digital printing systems; domain-specific
   languages; industrial experiences
ID LANGUAGE; MINIZINC
AB Flexible printing systems are highly complex systems that consist of printers, that print individual sheets of paper, and finishing equipment, that processes sheets after printing, for example, assembling a book. Integrating finishing equipment with printers involves the development of control software that configures the devices, taking hardware constraints into account. This control software is highly complex to realize due to (1) the intertwined nature of printing and finishing, (2) the large variety of print products and production options for a given product, and (3) the large range of finishers produced by different vendors. We have developed a domain-specific language called CSX that offers an interface to constraint solving specific to the printing domain. We use it to model printing and finishing devices and to automatically derive constraint solver-based environments for automatic configuration. We evaluate CSX on its coverage of the printing domain in an industrial context, and we report on lessons learned on using a constraint-based DSL in an industrial context.
C1 [Denkers, Jasper; Zaidman, Andy; Visser, Eelco] Delft Univ Technol, Software Technol, Delft, Netherlands.
   [Brunner, Marvin; van Gool, Louis] Canon Prod Printing, Venlo, Netherlands.
   [Vinju, Jurgen J.] Ctr Wiskunde & Informat, Software Anal & Transformat, Amsterdam, Netherlands.
   [Vinju, Jurgen J.] Eindhoven Univ Technol, Software Engn & Technol, Eindhoven, Netherlands.
C3 Delft University of Technology; Eindhoven University of Technology
RP Denkers, J (corresponding author), Delft Univ Technol, Software Technol, Delft, Netherlands.
EM j.denkers@tudelft.nl
RI ; Zaidman, Andy/O-6542-2014
OI Visser, Eelco/0000-0002-7384-3370; Zaidman, Andy/0000-0003-2413-3935;
   Vinju, Jurgen/0000-0002-2686-7409; Denkers, Jasper/0000-0003-3014-8324
FU Canon Production Printing; Top Consortia for Knowledge and Innovation
   (TKIs) of the Dutch Ministry of Economic Affairs
FX Canon Production Printing; Top Consortia for Knowledge and Innovation
   (TKIs) of the Dutch Ministry of Economic Affairs
CR Barrett C, 2021, FRONT ARTIF INTEL AP, P1267, DOI 10.3233/FAIA201017
   Bravenboer M, 2008, SCI COMPUT PROGRAM, V72, P52, DOI 10.1016/j.scico.2007.11.003
   Dageförde JC, 2019, J COMPUT LANG, V53, P63, DOI 10.1016/j.cola.2019.05.001
   de Roo A, 2013, J SYST SOFTWARE, V86, P2502, DOI 10.1016/j.jss.2013.04.002
   Denkers J, 2021, LECT NOTES COMPUT SC, V13085, P423, DOI 10.1007/978-3-030-92124-8_24
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   Fowler M, 2005, Language workbenches: The killer-app for domain specific languages?
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Kats LCL, 2010, ACM SIGPLAN NOTICES, V45, P444, DOI 10.1145/1932682.1869497
   Keshishzadeh S, 2013, LECT NOTES COMPUT SC, V8137, P182, DOI 10.1007/978-3-642-40561-7_13
   Klint Paul, 2010, 10 WORKSH LANG DESCR, P1, DOI [10.1145/1868281.1868291, DOI 10.1145/1868281.1868291]
   Leo K, 2017, LECT NOTES COMPUT SC, V10335, P77, DOI 10.1007/978-3-319-59776-8_7
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   Schindler E., 2021, Domain-Specific Languages in Practice: with JetBrains MPS, P53
   Stoel J, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P46, DOI 10.1145/3359591.3359726
   Stuckey PJ, 2014, AI MAG, V35, P55, DOI 10.1609/aimag.v35i2.2539
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Voelter M., 2021, DomainSpecific Languages in Practice, P93
   Voelter M, 2019, SOFTW SYST MODEL, V18, P585, DOI 10.1007/s10270-016-0575-4
   Voelter M, 2018, LECT NOTES COMPUT SC, V10888, P3, DOI 10.1007/978-3-319-93317-7_1
NR 21
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2023
VL 53
IS 10
BP 2026
EP 2064
DI 10.1002/spe.3239
EA JUL 2023
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R6FK9
UT WOS:001036381100001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Arasan, KK
   Anandhakumar, P
AF Arasan, K. Kalai
   Anandhakumar, P.
TI Energy-efficient task scheduling and resource management in a cloud
   environment using optimized hybrid technology
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; energy consumption; Makespan; resource allocation; task
   scheduling
ID ALGORITHM; ALLOCATION
AB Cloud computing is a significant platform emerging for IT enterprises, business applications, and mobile computing. It is a dynamic environment where efficiently and properly allocating resources in such an environment becomes a tedious task. Most existing approaches cannot guarantee energy-efficient resource management due to the existence of time-dependent tasks. Cloud resources consume a huge amount of energy, which may reduce the Makespan of the entire network. The process of appropriate task scheduling may satisfy the user's requirement. Reducing energy consumption by satisfying the user's QoS requirements is essential to ensure each user's service level agreement (SLA). Therefore, to achieve an energy-efficient and unique task scheduling, a technique for order preference by similarity to ideal solution (TOPSIS) based unique ranking (uRank-TOPSIS) and a Hybrid state-action-reward-state-action (SARSA), Reinforcement Learning with Black widow Algorithm (HSRLBA) are proposed in this paper. Here, the task scheduling process is carried out using the uRank-TOPSIS process by producing a set of unique weights and ranking the alternatives. Also, HSRLBA is used to perform resource allocation, which uses the Black widow Algorithm (BWA) to rapidly converge parallel agents in the SARSA model of RL. The Cloudsim simulator is used for experiments. The efficiency of the proposed framework is measured in terms of Makespan, Task Completion Ratio (TCR), total energy consumption, response time and resource utilization. The proposed uRank-TOPSIS and HSRLBA achieved an energy consumption of 325 KWh, response time of 15.42 s, Makespan of the 1150 s, TCR of 98% and resource utilization of 92%. The proposed framework maximizes TCR and resource utilization and minimizes the Makespan, energy consumption, and response time.
C1 [Arasan, K. Kalai; Anandhakumar, P.] Anna Univ, Madras Inst Technol, Dept Informat Technol, Chennai 600044, Tamil Nadu, India.
   [Arasan, K. Kalai] Anna Univ, Madras Inst Technol, Dept Informat, Chennai 600044, Tamil Nadu, India.
C3 Anna University; Anna University Chennai; Madras Institute of
   Technology; Anna University; Madras Institute of Technology; Anna
   University Chennai
RP Arasan, KK (corresponding author), Anna Univ, Madras Inst Technol, Dept Informat, Chennai 600044, Tamil Nadu, India.
EM kalai210622@gmail.com
CR Alhamad M., 2010, 4 IEEE INT C DIG EC
   Alla HB., 2016, INT C HYDR INT SYST
   Asghari A, 2020, SOFT COMPUT, V24, P16177, DOI 10.1007/s00500-020-04931-7
   Botta A, 2016, FUTURE GENER COMP SY, V56, P684, DOI 10.1016/j.future.2015.09.021
   Chakravarthi KK, 2021, J SYST ARCHITECT, V114, DOI 10.1016/j.sysarc.2020.101916
   Ding D, 2020, FUTURE GENER COMP SY, V108, P361, DOI 10.1016/j.future.2020.02.018
   Dubey K, 2018, PROCEDIA COMPUT SCI, V125, P725, DOI 10.1016/j.procs.2017.12.093
   Eisa M, 2020, SIMUL MODEL PRACT TH, V103, DOI 10.1016/j.simpat.2020.102108
   Garg N, 2021, CLUSTER COMPUT, V24, P767, DOI 10.1007/s10586-020-03149-4
   Gong H., 2021, RESOURCE ALLOCATION
   Hayyolalam V, 2020, ENG APPL ARTIF INTEL, V87, DOI 10.1016/j.engappai.2019.103249
   Khorsand R, 2020, INT J COMMUN SYST, V33, DOI 10.1002/dac.4379
   Kumar N., 2020, Mater Today Proc, DOI [10.1016/j.matpr.2020.10.082, DOI 10.1016/J.MATPR.2020.10.082]
   Ma JT, 2016, LECT NOTES ELECTR EN, V348, P829, DOI 10.1007/978-81-322-2580-5_75
   Muthulakshmi B, 2019, CLUSTER COMPUT, V22, P10769, DOI 10.1007/s10586-017-1174-z
   Naim R., 2021, ADV INTERDISCIPLINAR, P85
   Natesan G, 2020, INT ARAB J INF TECHN, V17, P73, DOI 10.34028/iajit/17/1/9
   Nzanywayingoma Frederic, 2019, International Journal of Computers and Applications, V41, P165, DOI 10.1080/1206212X.2017.1416558
   Panda SK, 2019, CLUSTER COMPUT, V22, P509, DOI 10.1007/s10586-018-2858-8
   Panda SK., 2015, 2015 INT C EL DES CO
   Panwar N, 2019, CLUSTER COMPUT, V22, P1379, DOI 10.1007/s10586-019-02915-3
   PDS Group, GRID WORKL ARCH
   Peng MG, 2015, IEEE T VEH TECHNOL, V64, P5275, DOI 10.1109/TVT.2014.2379922
   Pradeep K, 2018, INF SECUR J, V27, P77, DOI 10.1080/19393555.2017.1407848
   Praveen SP, 2018, ARAB J SCI ENG, V43, P4265, DOI 10.1007/s13369-017-2926-z
   Praveenchandar J, 2021, J AMB INTEL HUM COMP, V12, P4147, DOI 10.1007/s12652-020-01794-6
   Rezaei H, 2018, STUD COMPUT INTELL, V720, P19, DOI 10.1007/978-981-10-5221-7_3
   Rjoub G, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.5919
   Rugwiro U, 2019, J INTERNET TECHNOL, V20, P1463, DOI 10.3966/160792642019092005013
   Sen J, 2015, CLOUD TECHNOLOGY: CONCEPTS, METHODOLOGIES, TOOLS, AND APPLICATIONS, P1585, DOI 10.4018/978-1-4666-6539-2.ch074
   Shariat SS, 2022, COMPUTING, V104, P1123, DOI 10.1007/s00607-021-01049-y
   Sharma Dhananjay Kr, 2021, ICT Analysis and Applications. Proceedings of ICT4SD 2020. Lecture Notes in Networks and Systems (LNNS 154), P309, DOI 10.1007/978-981-15-8354-4_31
   Sharma M, 2020, SUSTAIN COMPUT-INFOR, V26, DOI 10.1016/j.suscom.2020.100373
   Tabassam S., 2017, J INF TECHNOL SOFTW, V7
   Tayde AV., INT CONF NETW SER
   Thakkar HK, 2020, IEEE J SEL AREA COMM, V38, P1058, DOI 10.1109/JSAC.2020.2986663
   Vignesh V., 2013, Int J Sci Res Publ, V3, P1
   Wang B, 2021, FUTURE GENER COMP SY, V125, P616, DOI 10.1016/j.future.2021.07.023
   Xu XL, 2016, IEEE T CLOUD COMPUT, V4, P166, DOI 10.1109/TCC.2015.2453966
   Yang ZF, 2015, 2015 IEEE INTERNATIONAL SYMPOSIUM ON SAFETY, SECURITY, AND RESCUE ROBOTICS (SSRR)
   Zhang YM, 2020, IEEE ACM T NETWORK, V28, P1227, DOI 10.1109/TNET.2020.2979807
NR 41
TC 2
Z9 2
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2023
VL 53
IS 7
BP 1572
EP 1593
DI 10.1002/spe.3203
EA MAR 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H9FS7
UT WOS:000962209100001
DA 2024-07-18
ER

PT J
AU Sánchez-de la Rosa, M
   Núñez-Gómez, C
   Caminero, MB
   Carrión, C
AF Sanchez-de la Rosa, Miguel
   Nunez-Gomez, Carlos
   Blanca Caminero, M.
   Carrion, Carmen
TI Exploring the use of blockchain in resource-constrained fog computing
   environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE blockchain; fog computing; internet of things; smart contracts;
   single-board computers
ID EDGE; FRAMEWORK; INTERNET; THINGS
AB Fog computing has become a complementary technology to cloud computing and addresses some of the cloud computing threats such as the response time and network bandwidth demand. Fog computing successes processing data and storing data near to the edge, and usually is combined with container virtualization to provide hardware isolation. Empowered by these capabilities, numerous Internet of Things (IoT) applications are developed as virtualized instances on resource-constrained fog nodes such as single-board computers (SBC). In addition, blockchain has emerged as a key technology that is transforming the way we share information. Blockchain technology represents a decentralised, distributed, and immutable database ledger and is a potential solution for the distributed ecosystem of IoT applications. The distributed structure of blockchain is naturally suitable for IoT applications. However, it introduces new challenges related to CPU overhead or response time. This paper proposes a layered architecture that integrates blockchain technology and OS-level virtualization technology to develop fog-based IoT applications. It also provides insights for future deployments through a proof-of-concept use case harnessing SBCs, in this case Raspberry Pi, as blockchain-enabled fog nodes to drive virtualized IoT applications. The study shows that the maximum CPU overhead added by a permissioned blockchain based on Ethereum on the Raspberry Pi is around a 25% under stress situations while the overhead introduced by the sealer process is negligible. These results support the feasibility of using blockchain on resource-constrained fog nodes for supporting IoT applications.
C1 [Sanchez-de la Rosa, Miguel; Nunez-Gomez, Carlos] Univ Castilla La Mancha, Albacete Res Inst Informat I3A, High Performance Networks & Architectures Grp RAA, Albacete 02071, Spain.
   [Blanca Caminero, M.; Carrion, Carmen] Univ Castilla La Mancha, Dept Comp Syst, Albacete, Spain.
C3 Universidad de Castilla-La Mancha; Universidad de Castilla-La Mancha
RP Sánchez-de la Rosa, M (corresponding author), Univ Castilla La Mancha, Albacete Res Inst Informat I3A, High Performance Networks & Architectures Grp RAA, Albacete 02071, Spain.
EM miguel.sanchez@uclm.es
RI Carrion, Carmen/R-9168-2017; Caminero, Maria Blanca/F-2133-2015
OI Carrion, Carmen/0000-0003-4289-8034; Caminero, Maria
   Blanca/0000-0003-3312-7393; Nunez-Gomez, Carlos/0000-0002-7899-1321
FU Agencia Estatal de Investigacion/Ministerio de Ciencia e
   innovacion/European Regional Development Fund [PID2021-123627OB-C52];
   Ministerio de Ciencia e Innovacion; Junta de Comunidades de Castilla-La
   Mancha (Regional Government) [GC-020-017]
FX Agencia Estatal de Investigacion/Ministerio de Ciencia e
   innovacion/European Regional Development Fund, Grant/Award Number:
   PID2021-123627OB-C52; Ministerio de Ciencia e Innovacion; Junta de
   Comunidades de Castilla-La Mancha (Regional Government), Grant/Award
   Number: GC-020-017
CR Adere EM, 2022, ARRAY-NY, V14, DOI 10.1016/j.array.2022.100139
   Ali MS, 2019, IEEE COMMUN SURV TUT, V21, P1676, DOI 10.1109/COMST.2018.2886932
   Baker T, 2022, COMPUT NETW, V203, DOI 10.1016/j.comnet.2021.108676
   Baniata H, 2020, IEEE ACCESS, V8, P102657, DOI 10.1109/ACCESS.2020.2999213
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Buterin V., 2014, ETHEREUM NEXT GENERA, V3, P2
   Canonical I., 2021, INSTALL UBUNTU RASPB
   Carrión C, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3539606
   Dai HN, 2019, IEEE INTERNET THINGS, V6, P8076, DOI 10.1109/JIOT.2019.2920987
   Dastjerdi Amir Vahid, 2016, Internet of Things, P61, DOI [10.1016/B978 -0-12-805395-9.00004-6. arXiv: 1601.02752, DOI 10.1016/B978-0-12-805395-9.00004-6.ARXIV:1601.02752]
   Docker, About us
   Fan CX, 2020, IEEE ACCESS, V8, P126927, DOI 10.1109/ACCESS.2020.3006078
   Ferdous MS., 2020, ARXIV PREPRINT ARXIV
   Ferrag MA, 2021, IEEE INTERNET THINGS, V8, P17236, DOI 10.1109/JIOT.2021.3078072
   Geth, US
   Govil N., 2020, APPL BLOCKCHAIN IOT
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Islam N, 2019, FUTURE GENER COMP SY, V100, P569, DOI 10.1016/j.future.2019.05.059
   Kumar T, 2020, IEEE ACCESS, V8, P154166, DOI 10.1109/ACCESS.2020.3017891
   Mahmud R, 2022, IEEE INTERNET THINGS, V9, P4125, DOI 10.1109/JIOT.2021.3103053
   Mahmud R, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3403955
   Memon RA, 2019, IEEE ACCESS, V7, P169073, DOI 10.1109/ACCESS.2019.2952472
   Mouradian C, 2018, IEEE COMMUN SURV TUT, V20, P416, DOI 10.1109/COMST.2017.2771153
   Nakamoto S, 2008, BITCOIN PEER TO PEER, DOI DOI 10.1007/S10838-008-9062-0
   Oktian YE, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9061050
   Pan JL, 2019, IEEE INTERNET THINGS, V6, P4719, DOI 10.1109/JIOT.2018.2878154
   Popov, IOTA FEELESS FREE IE
   R. P. Foundation, 2021, TEACH LEARN MAK RASP
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Szabo N., 1996, Extropy Journal of Transhuman Thought
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
NR 31
TC 2
Z9 2
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2023
VL 53
IS 4
BP 971
EP 987
DI 10.1002/spe.3173
EA NOV 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9M3GK
UT WOS:000891904800001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Kumari, S
   Singh, M
   Singh, R
   Tewari, H
AF Kumari, Swati
   Singh, Maninder
   Singh, Raman
   Tewari, Hitesh
TI Post-quantum cryptography techniques for secure communication in
   resource-constrained Internet of Things devices: A comprehensive survey
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE post-quantum cryptography; Internet of Things; cyber security; public
   key cryptosystem; key distribution
ID PUBLIC-KEY CRYPTOSYSTEM; LATTICE-BASED CRYPTOGRAPHY; POLYNOMIAL
   MULTIPLICATION; SIGNATURE; IOT; CHALLENGES; BLOCKCHAIN; PRIVACY;
   IMPLEMENTATION; ALGORITHMS
AB As the number and characteristics of smart devices change, the concept of the Internet of Things (IoT) emerges. The IoT provides the connected devices with a variety of resources that enable effective communication. At this point, several security issues arise to get the sensitive information behind every communication in the IoT. To provide users with security and privacy, cryptographic schemes are adopted, the most popular being public key cryptographic systems (PKC). However, with the advent of quantum computing, the level of security that can be provided by the PKC schemes is a big question. Another important issue is that the IoT environment is resource-constrained, which necessitates the implementation of lightweight cryptographic algorithms for better security. In response to these issues, the post-quantum cryptographic (PQC) schemes are one of the significant developments contributing to IoT security in the post-quantum world. This article examines the key security issues in the IoT environment and examines the effective solutions found in the literature. The problems in IoT in the quantum era are discussed and appropriate solutions by PKC schemes under limited resources in IoT are focused. As the lattice-based cryptosystems are more effective, the importance of these schemes in the resource-constrained IoT is highlighted. This survey also leads to feasible future directions that can support developers and researchers in this field.
C1 [Kumari, Swati; Singh, Maninder] Thapar Inst Engn & Technol, Dept Comp Sci & Engn, Patiala, Punjab, India.
   [Singh, Raman] Univ West Scotland, Sch Comp Engn & Phys Sci, Paisley, Renfrew, Scotland.
   [Tewari, Hitesh] Trinity Coll Dublin, Sch Comp Sci & Stat, Dublin, Ireland.
C3 Thapar Institute of Engineering & Technology; University of West
   Scotland; Trinity College Dublin
RP Kumari, S (corresponding author), Thapar Inst Engn & Technol, Dept Comp Sci & Engn, Patiala, Punjab, India.
EM swati.kumari@thapar.edu
RI singh, maninder/IQS-3568-2023; Singh, Maninder/B-7553-2009
OI Singh, Maninder/0000-0001-8489-8759; Singh, Raman/0000-0002-6839-5454;
   kumari, swati/0000-0002-6557-5935
CR Aguilar-Melchor C, 2018, IEEE T INFORM THEORY, V64, P3927, DOI 10.1109/TIT.2018.2804444
   Akleylek Sedat, 2016, Progress in Cryptology (AFRICACRYPT 2016). 8th International Conference in Cryptology. Proceedings: LNCS 9646, P44, DOI 10.1007/978-3-319-31517-1_3
   Akleylek S, 2016, J SUPERCOMPUT, V72, P438, DOI 10.1007/s11227-015-1570-1
   Al Hinai S, 2017, 2017 INTERNATIONAL CONFERENCE ON INFOCOM TECHNOLOGIES AND UNMANNED SYSTEMS (TRENDS AND FUTURE DIRECTIONS) (ICTUS), P198
   Alassaf N, 2019, MULTIMED TOOLS APPL, V78, P32633, DOI 10.1007/s11042-018-6801-z
   Alkim E., 2016, 20161157 CRYPT EPR
   Almudever CG, 2017, DES AUT TEST EUROPE, P836, DOI 10.23919/DATE.2017.7927104
   Amadeo M, 2016, IEEE NETWORK, V30, P92, DOI 10.1109/MNET.2016.7437030
   Anand MV, 2016, LECT NOTES COMPUT SC, V9606, P44, DOI 10.1007/978-3-319-29360-8_4
   [Anonymous], 2019, NEW HOPES DOCUMENTAT
   [Anonymous], 2019, CLASSICAL MCELIECE D
   Banerjee U, 2019, ISSCC DIG TECH PAP I, V62, P46, DOI 10.1109/ISSCC.2019.8662528
   Banerjee Utsav., 2020, 2020 IEEE International Symposium on Circuits and Systems (ISCAS), P1
   Bernstein DJ, 2018, LECT NOTES COMPUT SC, V10719, P235, DOI 10.1007/978-3-319-72565-9_12
   Bernstein DJ, 2017, NATURE, V549, P188, DOI 10.1038/nature23461
   Bhatt A., 2018, Int J Comput Math Sci, V7, P616
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Bos JW, 2015, P IEEE S SECUR PRIV, P553, DOI 10.1109/SP.2015.40
   Chaudhary R, 2019, IEEE INTERNET THINGS, V6, P4897, DOI 10.1109/JIOT.2018.2878707
   Chaudhary R, 2018, IEEE COMMUN MAG, V56, P24, DOI 10.1109/MCOM.2018.1700787
   Chen JH, 2020, THEOR COMPUT SCI, V809, P372, DOI 10.1016/j.tcs.2019.12.032
   Childs A, 2014, J MATH CRYPTOL, V8, P1, DOI 10.1515/jmc-2012-0016
   Chowdhury S., 2020, ARXIV200504344
   Costello C., 2016, 2016413 CRYPT EPR
   D'Anvers Jan-Pieter, 2018, Progress in Cryptology - AFRICACRYPT 2018. 10th International Conference on Cryptology in Africa. Proceedings: LNCS 10831, P282, DOI 10.1007/978-3-319-89339-6_16
   de Avila AB, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3961
   De Feo L, 2014, J MATH CRYPTOL, V8, P209, DOI 10.1515/jmc-2012-0015
   Deneuville JC, 2017, LECT NOTES COMPUT SC, V10346, P18, DOI 10.1007/978-3-319-59879-6_2
   Ding JT, 2017, IEEE SECUR PRIV, V15, P28, DOI 10.1109/MSP.2017.3151328
   Ding JT, 2005, LECT NOTES COMPUT SC, V3531, P164
   Duc Tri Nguyen, 2020, Applied Reconfigurable Computing Architectures, Tools, and Applications. 16th International Symposium, ARC 2020. Proceedings. Lecture Notes in Computer Science (LNCS 120830), P247, DOI 10.1007/978-3-030-44534-8_19
   Dwarakanath NC, 2014, APPL ALGEBR ENG COMM, V25, P159, DOI 10.1007/s00200-014-0218-3
   Ebrahimi S, 2019, IEEE INTERNET THINGS, V6, P5500, DOI 10.1109/JIOT.2019.2903082
   Faraji-Biregani M, 2021, J SUPERCOMPUT, V77, P5076, DOI 10.1007/s11227-020-03462-0
   Fernández-Caramés TM, 2020, IEEE INTERNET THINGS, V7, P6457, DOI 10.1109/JIOT.2019.2958788
   Fernández-Caramés TM, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19153319
   Fernández-Caramés TM, 2019, IEEE ACCESS, V7, P45201, DOI 10.1109/ACCESS.2019.2908780
   Fernández-Caramés TM, 2018, IEEE ACCESS, V6, P32979, DOI 10.1109/ACCESS.2018.2842685
   Fotohi R, 2020, VEH COMMUN, V26, DOI 10.1016/j.vehcom.2020.100267
   googleblog, GOOGLE BLOG GOOGLES
   Grassl M, 2016, LECT NOTES COMPUT SC, V9606, P29, DOI 10.1007/978-3-319-29360-8_3
   Greuet A, 2021, LECT NOTES COMPUT SC, V12910, P205, DOI 10.1007/978-3-030-89915-8_10
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Gueron S, 2016, LECT NOTES COMPUT SC, V10014, P187, DOI 10.1007/978-3-319-47560-8_12
   Gupta PC, 2016, WIRELESS PERS COMMUN, V87, P225, DOI 10.1007/s11277-015-3040-8
   Gupta S., 2016, INDIAN J SCI TECHNOL, V9
   Hashemi SHO, 2019, IRAN CONF ELECTR ENG, P1373, DOI [10.1109/IranianCEE.2019.8786376, 10.1109/iraniancee.2019.8786376]
   He PZ, 2021, IEEE J EM SEL TOP C, V11, P383, DOI 10.1109/JETCAS.2021.3075456
   Hoffstein J, 2017, LECT NOTES COMPUT SC, V10159, P3, DOI 10.1007/978-3-319-52153-4_1
   Hooshmand R, 2020, IET COMMUN, V14, P1883, DOI 10.1049/iet-com.2019.0689
   Howe J., 2021, IACR CRYPTOL EPRINT, V2021, P462
   Hülsing A, 2016, LECT NOTES COMPUT SC, V9614, P387, DOI 10.1007/978-3-662-49384-7_15
   Ishtiaq A., 2021, CRYPTOL EPRINT ARCH
   Islam SKH, 2017, J KING SAUD UNIV-COM, V29, P63, DOI 10.1016/j.jksuci.2015.01.004
   Jamali S, 2014, COMPUT ELECTR ENG, V40, P2013, DOI 10.1016/j.compeleceng.2014.05.012
   Jao D, 2011, LECT NOTES COMPUT SC, V7071, P19, DOI 10.1007/978-3-642-25405-5_2
   Joseph D.P., 2015, INT J ADV RES COMPUT, V6, DOI 10.26483/ijarcs.v6i3.2469
   Kim S, 2020, IEEE T INFORM THEORY, V66, P1934, DOI 10.1109/TIT.2019.2938984
   Kipnis A, 1999, LECT NOTES COMPUT SC, V1592, P206
   Koziel B, 2017, IEEE T CIRCUITS-I, V64, P86, DOI 10.1109/TCSI.2016.2611561
   Kshetri N, 2017, IT PROF, V19, P68, DOI 10.1109/MITP.2017.3051335
   Kumar A, 2022, SECUR PRIVACY, V5, DOI 10.1002/spy2.200
   Kundu N, 2020, J INF SECUR APPL, V53, DOI 10.1016/j.jisa.2020.102512
   Kurniawan Febrian, 2021, Advances in Computer, Communication and Computational Sciences. Proceedings of IC4S 2019. Advances in Intelligent Systems and Computing (AISC 1158), P45, DOI 10.1007/978-981-15-4409-5_4
   Kuznetsov A, 2020, 2020 IEEE 11TH INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS, SERVICES AND TECHNOLOGIES (DESSERT): IOT, BIG DATA AND AI FOR A SAFE & SECURE WORLD AND INDUSTRY 4.0, P166, DOI [10.1109/dessert50317.2020.9125053, 10.1109/DESSERT50317.2020.9125053]
   Langlois A, 2015, DESIGN CODE CRYPTOGR, V75, P565, DOI 10.1007/s10623-014-9938-4
   Lee JS, 2017, HELIYON, V3, DOI 10.1016/j.heliyon.2017.e00422
   Lee J, 2019, IEEE ACCESS, V7, P2080, DOI 10.1109/ACCESS.2018.2884084
   Lee W, 2017, IET COMMUN, V11, P1543, DOI 10.1049/iet-com.2016.1268
   Lee Y, 2020, IEEE ACCESS, V8, P177506, DOI 10.1109/ACCESS.2020.3026989
   Liu Z, 2018, IEEE COMMUN MAG, V56, P158, DOI 10.1109/MCOM.2018.1700330
   Lohachab A., 2018, Journal of Communications and Information Networks, V3, P57, DOI [10.1007/s41650-018-0022-5, DOI 10.1007/S41650-018-0022-5]
   Lohachab A, 2020, INTERNET THINGS-NETH, V9, DOI 10.1016/j.iot.2020.100174
   Lohachab A, 2019, J INF SECUR APPL, V46, P1, DOI 10.1016/j.jisa.2019.02.005
   Ma MM, 2018, IEEE T IND INFORM, V14, P759, DOI 10.1109/TII.2017.2703922
   Maletsky K., 2015, RSA VS ECC COMP EMBE
   Malina L, 2021, IEEE ACCESS, V9, P36038, DOI 10.1109/ACCESS.2021.3062201
   Malina L, 2018, IFAC PAPERSONLINE, V51, P462, DOI 10.1016/j.ifacol.2018.07.104
   Mao CC, 2017, QUANTUM INF PROCESS, V16, DOI 10.1007/s11128-017-1707-7
   Matuszewski L, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21113920
   Meyer M., 2017, 20171213 CRYPT EPRIN
   Moosavi SR, 2016, FUTURE GENER COMP SY, V64, P108, DOI 10.1016/j.future.2016.02.020
   Mosca M, 2018, IEEE SECUR PRIV, V16, P38, DOI 10.1109/MSP.2018.3761723
   Mukherjee A, 2015, P IEEE, V103, P1747, DOI 10.1109/JPROC.2015.2466548
   Mustafa I, 2020, IEEE ACCESS, V8, P99273, DOI 10.1109/ACCESS.2020.2995801
   Nannipieri P, 2021, IEEE ACCESS, V9, P150798, DOI 10.1109/ACCESS.2021.3126208
   Nejatollahi H., 2018, IACR CRYPTOL EPRINT
   NTRU, 2019, US
   NTRU Prime, US
   ntruprime, 2019, NTRU PRIMES DOCUMENT
   O'Neill M, 2016, ENGINEERING-PRC, V2, P48, DOI 10.1016/J.ENG.2016.01.014
   Oliveira PRD, 2014, IEEE LAT AM T, V12, P1141, DOI 10.1109/TLA.2014.6894012
   Panchiwala S., 2020, J. Data, Inf. Manag., V2, P257, DOI [10.1007/s42488-020-00030-2, DOI 10.1007/S42488-020-00030-2]
   Peng C, 2020, J INF SECUR APPL, V54, DOI 10.1016/j.jisa.2020.102504
   Petzoldt A, 2017, LECT NOTES COMPUT SC, V10346, P205, DOI 10.1007/978-3-319-59879-6_12
   Petzoldt A, 2015, LECT NOTES COMPUT SC, V9452, P311, DOI 10.1007/978-3-662-48797-6_14
   Porambage P, 2016, IEEE CLOUD COMPUT, V3, P36, DOI 10.1109/MCC.2016.28
   round5, ROUND5 S DOCUMENTATI
   round5, ROUND5
   SABER, US
   Sciancalepore S, 2017, IEEE EMBED SYST LETT, V9, P1, DOI 10.1109/LES.2016.2630729
   Sepúlveda J, 2019, IEEE EMBED SYST LETT, V11, P106, DOI 10.1109/LES.2019.2895392
   Shakiba Herfeh M., 2021, PHYS LAYER SECURITY, P129, DOI DOI 10.1007/978-3-030-55366-1_6
   Shor P. W., 1994, Proceedings. 35th Annual Symposium on Foundations of Computer Science (Cat. No.94CH35717), P124, DOI 10.1109/SFCS.1994.365700
   Singh G, 2019, IEEE T IND INFORM, V15, P469, DOI 10.1109/TII.2018.2866917
   sourceforge, OFFICIAL SOURCE FORG
   Stebila D., 2016, CRYPTOLOGY
   Suárez-Albela M, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18113868
   Tao CD, 2015, FINITE FIELDS TH APP, V35, P352, DOI 10.1016/j.ffa.2015.06.001
   Thilakarathne N.N., 2020, IJEMR, V10, DOI DOI 10.31033/IJEMR.10.1.5
   Tseng CH, 2015, IEEE T RELIAB, V64, P1078, DOI 10.1109/TR.2015.2429271
   Wang J, 2018, IEEE T NEUR NET LEAR, V29, P353, DOI 10.1109/TNNLS.2016.2626466
   Wang LP, 2020, THEOR COMPUT SCI, V835, P82, DOI 10.1016/j.tcs.2020.06.013
   Xi Sun, 2012, 2012 4th International Conference on Intelligent Networking and Collaborative Systems (INCoS 2012), P292, DOI 10.1109/iNCoS.2012.70
   Xie JF, 2021, DES AUT CON, P1279, DOI 10.1109/DAC18074.2021.9586151
   Xie JF, 2020, IEEE VLSI TEST SYMP, DOI 10.1109/vts48691.2020.9107585
   Xie R, 2019, ANN TELECOMMUN, V74, P531, DOI 10.1007/s12243-019-00705-x
   Xin GZ, 2020, IEEE T CIRCUITS-I, V67, P2672, DOI 10.1109/TCSI.2020.2983185
   XINMEI W, 1990, ELECTRON LETT, V26, P898, DOI 10.1049/el:19900586
   Yan F, 2016, QUANTUM INF PROCESS, V15, P1, DOI 10.1007/s11128-015-1195-6
   Yang XP, 2019, IEEE ACCESS, V7, P155552, DOI 10.1109/ACCESS.2019.2949429
   Yang YC, 2017, IEEE INTERNET THINGS, V4, P1250, DOI 10.1109/JIOT.2017.2694844
   Zhang MQ, 2017, ADV INTELL SYST, V454, P541, DOI 10.1007/978-3-319-38789-5_62
   Zhou J, 2017, IEEE COMMUN MAG, V55, P26, DOI 10.1109/MCOM.2017.1600363CM
NR 124
TC 10
Z9 10
U1 10
U2 31
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2047
EP 2076
DI 10.1002/spe.3121
EA JUL 2022
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000822977500001
DA 2024-07-18
ER

PT J
AU Yang, B
   Wu, B
   You, YW
   Guo, CM
   Qiao, L
   Lv, ZH
AF Yang, Bin
   Wu, Bin
   You, Yuwen
   Guo, Chunmei
   Qiao, Liang
   Lv, Zhihan
TI Edge intelligence based digital twins for internet of autonomous
   unmanned vehicles
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE deep learning (DL); digital twins (DTs); edge intelligence; intelligent
   network architecture; Internet of Vehicles (IoV)
ID COMMUNICATION; BLOCKCHAIN; IMPACT
AB It aims to explore the efficient and reliable wireless transmission and cooperative communication mechanism of Internet of Vehicles (IoV) based on edge intelligence technology. It first proposes an intelligent network architecture for IoV services by combining network slicing and deep learning (DL) technology, and then began to study the key technologies needed to achieve the architecture. It designs the cooperative control mechanism of unmanned vehicle network based on the full study of wireless resource allocation algorithm from the micro level. Second, in order to improve the safety of vehicle driving, deep reinforcement learning is used to configure the wireless resources of IoV network to meet the needs of various IoV services. The research results show that the accuracy rate of the improved AlexNet algorithm model can reach 99.64%, the accuracy rate is more than 80%, the data transmission delay is less than 0.02 ms, and the data transmission packet loss rate is less than 0.05. The algorithm model has practical application value for solving the data transmission related problems of vehicular internet communication, providing an important reference value for the intelligent development of unmanned vehicle internet.
C1 [Yang, Bin; You, Yuwen; Guo, Chunmei] Tianjin Chengjian Univ, Sch Energy & Safety Engn, Tianjin, Peoples R China.
   [Wu, Bin] Zhejiang A&F Univ, Informat & Educ Technol Ctr, Hangzhou, Zhejiang, Peoples R China.
   [Qiao, Liang] Qingdao Univ, Coll Comp Sci & Technol, Qingdao, Peoples R China.
   [Lv, Zhihan] Uppsala Univ, Fac Arts, Dept Game Design, Uppsala, Sweden.
C3 Tianjin Chengjian University; Zhejiang A&F University; Qingdao
   University; Uppsala University
RP Lv, ZH (corresponding author), Uppsala Univ, Fac Arts, Dept Game Design, Uppsala, Sweden.
EM lvzhihan@gmail.com
RI Lv, Zhihan/GLU-4458-2022; Lyu, Zhihan/I-3187-2014; Lv,
   Zhihan/GLR-6000-2022; wu, bin/IUM-4802-2023; Yang, Bin/GQA-9324-2022;
   Lv, Zhihan/AHD-0875-2022
OI Lyu, Zhihan/0000-0003-2525-3074; Lv, Zhihan/0000-0003-2525-3074; Yang,
   Bin/0000-0002-1579-7978; 
CR Alam T., 2020, JURNAL ONLINE INFORM, V4, P90, DOI DOI 10.15575/JOIN.V4I2.487
   Anjomshoa F, 2017, IEEE ACCESS, V5, P12199, DOI 10.1109/ACCESS.2017.2719706
   Autiosalo J, 2020, IEEE ACCESS, V8, P1193, DOI 10.1109/ACCESS.2019.2950507
   Boualouache A, 2020, IEEE T INTELL TRANSP, V21, P3209, DOI 10.1109/TITS.2019.2924856
   Camposano JC, 2021, IEEE ACCESS, V9, P27167, DOI 10.1109/ACCESS.2021.3058009
   Chen C, 2021, IEEE T INTELL TRANSP, V22, P1840, DOI 10.1109/TITS.2020.3025687
   Cheng YW, 2021, KNOWL-BASED SYST, V216, DOI 10.1016/j.knosys.2021.106796
   Cortés E, 2021, IEEE LAT AM T, V19, P944, DOI 10.1109/TLA.2021.9451239
   Duan W, 2020, IEEE NETWORK, V34, P283, DOI 10.1109/MNET.001.1900659
   El Saddik A, 2018, IEEE MULTIMEDIA, V25, P87, DOI 10.1109/MMUL.2018.023121167
   Feng Q, 2020, IEEE T IND INFORM, V16, P4146, DOI 10.1109/TII.2019.2948053
   Groshev M, 2021, IEEE ACCESS, V9, P102862, DOI 10.1109/ACCESS.2021.3098109
   Hasan HR, 2020, IEEE ACCESS, V8, P34113, DOI 10.1109/ACCESS.2020.2974810
   Lee J, 2021, IEEE T NETW SCI ENG, V8, P2412, DOI 10.1109/TNSE.2021.3093435
   Mani Z, 2018, J PROD INNOVAT MANAG, V35, P780, DOI 10.1111/jpim.12463
   Mogensen RS, 2021, MANUF LETT, V28, P1, DOI 10.1016/j.mfglet.2021.01.006
   Nguyen HX, 2021, IEEE COMMUN MAG, V59, P10, DOI 10.1109/MCOM.001.2000343
   NGUYEN TM, 2021, IEEE T ROBOT, P1
   Patra S, 2020, IEEE SENS J, V20, P6324, DOI 10.1109/JSEN.2020.2976541
   Qiao FL, 2021, IEEE T INTELL TRANSP, V22, P4443, DOI 10.1109/TITS.2020.3003211
   Rawat D. B., 2017, VEHICULAR CYBER PHYS, P1, DOI [10.1007/978-3-319-44494-9-1, DOI 10.1007/978-3-319-44494-9-1]
   Saracco R, 2019, COMPUTER, V52, P58, DOI 10.1109/MC.2019.2942803
   Sepulcre M., 2021, ARXIV PREPRINT ARXIV
   Silva CM., 2021, J NETW SYST MANAG, V29, P1
   Suhail S, 2022, IEEE INTERNET COMPUT, V26, P58, DOI 10.1109/MIC.2021.3059320
   Tariq M, 2021, IEEE ACCESS, V9, P67501, DOI 10.1109/ACCESS.2021.3074326
   Wang FY, 2020, IEEE T COMPUT SOC SY, V7, P2, DOI 10.1109/TCSS.2020.2970305
   Wei X, 2021, IEEE ACCESS, V9, P86685, DOI 10.1109/ACCESS.2021.3086980
   Yaqoob I, 2020, IEEE NETWORK, V34, P290, DOI 10.1109/MNET.001.1900661
   Zeitouni MJ, 2020, INVENTIONS-BASEL, V5, DOI 10.3390/inventions5020019
   Zhang DG, 2019, IEEE T INTELL TRANSP, V20, P1517, DOI 10.1109/TITS.2018.2853165
   Zhang K, 2019, IEEE ACCESS, V7, P9872, DOI 10.1109/ACCESS.2018.2890127
   Zhao L, 2020, IEEE NETWORK, V34, P178, DOI 10.1109/MNET.011.1900587
NR 33
TC 4
Z9 4
U1 6
U2 38
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2022 MAR 7
PY 2022
DI 10.1002/spe.3080
EA MAR 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO3FG
UT WOS:000765613500001
DA 2024-07-18
ER

PT J
AU Sun, L
   Chen, YF
   Li, WL
   Deng, QX
AF Sun, Lei
   Chen, Yanfeng
   Li, Wenlong
   Deng, Qingxu
TI Charging stations-oriented electric vehicle charging strategy based on
   battery characteristics
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE charging station; charging strategy; CPS; electric vehicle; user
   satisfaction
ID SYSTEM
AB In recent years, electric vehicles (EVs) receive intensive attention due to their environment-friendly nature and outstanding energy efficiency. However, there are still obstacles in EVs' popularity. Battery related issues are most concerned from users' perspective. While the evolution in battery technology may help to address the aforementioned problems eventually, other solutions are in urgent demand for the time being. In this paper, we propose an innovative charge scheduling method that could significantly improve EV users' charging experience with the nowadays battery technology. Specifically, the proposed method takes into account the characteristics of the batteries to be charged as well as the constraints of the external power grid; thus, a plan can be devised for efficiently allocating the power of the charging station to the EVs through cyber-physical system. Our method prioritizes jobs based on their marginal utilities to maximize user satisfaction with limited power resource. The power allocation in our method is managed globally and constrained by specific rules to avoid waste or overload in the power grid. Lastly, we simulate several power scheduling methods in charging stations, which validates that the user satisfaction under our method is higher than that of other traditional method.
C1 [Sun, Lei; Chen, Yanfeng; Li, Wenlong; Deng, Qingxu] Northeastern Univ, Sch Comp Sci & Engn, Shenyang, Peoples R China.
C3 Northeastern University - China
RP Deng, QX (corresponding author), Northeastern Univ, Sch Comp Sci & Engn, Shenyang, Peoples R China.
EM sunlei@stumail.neu.edu.cn; dengqx@mail.neu.edu.cn
RI Chen, Yanfeng/JHU-9469-2023
OI Sun, Lei/0000-0002-1758-6015; Deng, Qingxu/0000-0002-5185-6306
FU NSFC - Liaoning Joint Fund Key Project [U1908212]; Xingliao Talents
   Project [XLYC1902017]
FX NSFC - Liaoning Joint Fund Key Project, Grant/Award Number: U1908212;
   Xingliao Talents Project, Grant/Award Number: XLYC1902017
CR Ardakanian O., 2012, Performance Evaluation Review, V40, P38
   Ardakanian O., 2013, P INT C FUT EN SYST, P101
   Ardakanian O, 2014, IEEE T SMART GRID, V5, P2295, DOI 10.1109/TSG.2014.2327203
   Chen SY, 2013, P ANN HICSS, P2319, DOI 10.1109/HICSS.2013.435
   Chen SY, 2012, INT CONF SMART GRID, P629, DOI 10.1109/SmartGridComm.2012.6486056
   Chen SY, 2012, IEEE POW ENER SOC GE
   Chen SY, 2012, PR IEEE SEN ARRAY, P13, DOI 10.1109/SAM.2012.6250449
   Fanxin Kong, 2016, 2016 ACM/IEEE 7th International Conference on Cyber-Physical Systems (ICCPS), P1, DOI 10.1109/ICCPS.2016.7479118
   Fotouhi A, 2016, RENEW SUST ENERG REV, V56, P1008, DOI 10.1016/j.rser.2015.12.009
   He GQ, 2019, REAL TIM SYST SYMP P, P107, DOI 10.1109/RTSS46320.2019.00020
   Kanchwala Husain, 2015, International Journal of Vehicle Systems Modelling and Testing, V10, P168
   Kong F., 2016, P REAL TIM SYST S SA
   Kong FX, 2018, 2018 IEEE/ACM THIRD INTERNATIONAL CONFERENCE ON INTERNET-OF-THINGS DESIGN AND IMPLEMENTATION (IOTDI 2020), P213, DOI 10.1109/IoTDI.2018.00029
   Kong FX, 2016, PROCEEDINGS OF 2016 IEEE REAL-TIME SYSTEMS SYMPOSIUM (RTSS), P69, DOI [10.1109/RTSS.2016.17, 10.1109/RTSS.2016.016]
   Liu LS, 2015, RENEW SUST ENERG REV, V51, P648, DOI 10.1016/j.rser.2015.06.036
   MAS JA, 1969, SAE J-AUTOMOT ENG, V77, P31
   Mas JA., 1974, US Patent, Patent No. [3,816,806, 3816806]
   Mets K., 2010, NOMS 2010 - 2010 IEEE/IFIP Network Operations and Management Symposium Workshops, P293, DOI 10.1109/NOMSW.2010.5486561
   Rahbari-Asr N, 2013, IEEE IND ELEC, P6148, DOI 10.1109/IECON.2013.6700146
   Rezvani Z, 2015, TRANSPORT RES D-TR E, V34, P122, DOI 10.1016/j.trd.2014.10.010
   Sierzchula W, 2014, ENERG POLICY, V68, P183, DOI 10.1016/j.enpol.2014.01.043
   Subramanian A, 2012, P AMER CONTR CONF, P3643
   Tushar W, 2012, IEEE T SMART GRID, V3, P1767, DOI 10.1109/TSG.2012.2211901
   Vagropoulos SI, 2013, IEEE T POWER SYST, V28, P4031, DOI 10.1109/TPWRS.2013.2274673
   Wang QL, 2016, IEEE COMMUN SURV TUT, V18, P1500, DOI 10.1109/COMST.2016.2518628
   Wu XK, 2015, TRANSPORT RES D-TR E, V34, P52, DOI 10.1016/j.trd.2014.10.007
NR 26
TC 4
Z9 5
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2168
EP 2184
DI 10.1002/spe.2980
EA MAY 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000647575800001
DA 2024-07-18
ER

PT J
AU Singh, RG
   Scholliers, C
AF Gurdeep Singh, Robbert
   Scholliers, Christophe
TI GraphRedex: Look at your research
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE operational semantics; PLT Redex; semantics engineering; state
   explosion; tooling; visualization
AB A significant aspect of designing new programming languages is to define their operational semantics. Working with a pen and paper version of such a semantics is notoriously difficult. For this reason, tools for computer aided semantics engineering were created. Many of these tools allow programmers to execute their language's operational semantics. An executable semantics makes it easier to verify whether the execution of a program leads to the desired result. When a program exhibits unexpected behavior, the programmer can consult the reduction graph to see what went wrong. Unfortunately, visualization of these graphs is currently not well-supported by most tools. Consequently, the comprehension of errors remains challenging. In this article, we present GraphRedex an open-source tool that empowers language designers to interactively explore their reduction graphs, offering three main benefits. First, a global exploration mode allows users to obtain a bird's-eye overview of the reduction graph and learn its high level workings. Second, a local exploration mode lets the programmer closely interact with the individual reduction rules. Third, our query interface allows the programmer to filter out and highlight specific regions of the reduction graph. We evaluated our tool by carrying out a user study showing that participants comprehend programs on average twice as fast while being able to answer questions more accurately. Finally, we demonstrate how GraphRedex helps to understand the semantics of two published works. Exploration of the semantics with GraphRedex unveiled an issue in one of the implementations of these works, which the author confirmed.
C1 [Gurdeep Singh, Robbert; Scholliers, Christophe] Univ Ghent, Dept Appl Math Comp Sci & Stat, Krijgslaan 281, Ghent, Belgium.
C3 Ghent University
RP Singh, RG (corresponding author), Univ Ghent, Dept Appl Math Comp Sci & Stat, Krijgslaan 281, Ghent, Belgium.
EM robbert.gurdeepsingh@ugent.be
RI Scholliers, Christophe/F-6280-2015
OI Scholliers, Christophe/0000-0002-2837-4763; Gurdeep Singh,
   Robbert/0000-0003-4394-0011
FU SpecialResearch Fund (BOF) of GhentUniversity [BOF18/DOC/327]
FX We would like to thank Robby Findler and Eric Tanter for their valuable
   feedback and discussions on an earlier version of GraphRedex. In
   particular, we want to thank Robby Findler for his help with the usage
   scenarios based on a paper1 from his group. Finally, we would also like
   to thank the reviewers for their invaluable feedback. A first draft
   version of GraphRedex was developed by Thomas Dupriez (ENS Paris-Saclay
   - RMoD, Inria, Lille-Nord Europe). Robbert Gurdeep Singh received
   funding fromthe SpecialResearch Fund (BOF) of GhentUniversity under
   grant number BOF18/DOC/327.
CR Alpuente M, 2015, J SYMB COMPUT, V69, P3, DOI 10.1016/j.jsc.2014.09.028
   Alpuente M, 2018, LECT NOTES COMPUT SC, V10931, P1, DOI 10.1007/978-3-319-96418-8_1
   Bangor A, 2009, J USABILITY STUD, V4, P114
   BARNES J, 1986, NATURE, V324, P446, DOI 10.1038/324446a0
   Bertot Y., 2004, TEXT THEORET COMP S
   Boldo S, 2015, J AUTOM REASONING, V54, P135, DOI 10.1007/s10817-014-9317-x
   Bostock M, 2011, IEEE T VIS COMPUT GR, V17, P2301, DOI 10.1109/TVCG.2011.185
   BREAZUTANNEN V, 1991, INFORM COMPUT, V93, P172, DOI 10.1016/0890-5401(91)90055-7
   Brinkmann GG, 2017, PROC INT CONF PARAL, P382, DOI 10.1109/ICPP.2017.47
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Chaudhuri A, 2009, ACM SIGPLAN NOTICES, V44, P269, DOI 10.1145/1631687.1596589
   Clavel M, 2007, All About Maude: A High-Performance Logical Framework
   Eades P., 1984, C NUMERANTIUM, V42, P149
   Felleisen M., 2009, Semantics Engineering with PLT Redex
   Findler RB, 2002, J FUNCT PROGRAM, V12, P159, DOI 10.1017/S0956796801004208
   Frick A., 1995, Graph Drawing. DIMACS International Workshop, GD'94. Proceedings, P388
   FRUCHTERMAN TMJ, 1991, SOFTWARE PRACT EXPER, V21, P1129, DOI 10.1002/spe.4380211102
   Gurdeep Singh R, 2021, SOFTW PRACT EXPER, P1
   Haas A, 2017, ACM SIGPLAN NOTICES, V52, P185, DOI [10.1145/3062341.3062363, 10.1145/3140587.3062363]
   Nguyen HT, 2021, IEEE T VIS COMPUT GR, V27, P2455, DOI 10.1109/TVCG.2019.2953746
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Kienle HM, 2010, ADV COMPUT, V79, P189, DOI 10.1016/S0065-2458(10)79005-7
   Klein C, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P285
   Lopez CT., 2019, P 33 EUR C OBJ OR PR, V134
   Martínez G, 2019, LECT NOTES COMPUT SC, V11423, P30, DOI 10.1007/978-3-030-17184-1_2
   McCarthy John., 1959, Computer Programming and Formal Systems, volume 26 of Studies in Logic and the Foundations of Mathematics, V26, P33, DOI DOI 10.1016/S0049-237X(09)70099-0
   Merino L, 2018, J SYST SOFTWARE, V144, P165, DOI 10.1016/j.jss.2018.06.027
   Munzner T., 2014, Visualization analysis and design: principles, techniques, and practice
   Nipkow Tobias, 2002, ISABELLE HOL PROOF A
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Plotkin GD, 2004, J LOGIC ALGEBR PROGR, V60-1, P17, DOI 10.1016/j.jlap.2004.03.002
   Pollock J, 2019, SPLASH-E'19: PROCEEDINGS OF THE 2019 ACM SIGPLAN SYMPOSIUM ON SPLASH-E, P46, DOI 10.1145/3358711.3361625
   Reppy J, 2009, ICFP'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P257
   Rosu G, 2015, LECT NOTES COMPUT SC, V9200, P598, DOI 10.1007/978-3-319-23165-5_28
   Rosu G, 2010, J LOGIC ALGEBR PROGR, V79, P397, DOI 10.1016/j.jlap.2010.03.012
   Sewell P, 2007, ICFP'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P1
   Shneiderman B, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P336, DOI 10.1109/VL.1996.545307
   Swamy N, 2009, ICFP'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P329
   Tamassia R., 2016, HDB GRAPH DRAWING VI, V1st
   Tutte W.T., 1963, Proc. London Math. Soc., V13, P743, DOI DOI 10.1112/PLMS/S3-13.1.743
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
   Van Cutsem T, 2014, COMPUT LANG SYST STR, V40, P112, DOI 10.1016/j.cl.2014.05.002
   von Landesberger T, 2011, COMPUT GRAPH FORUM, V30, P1719, DOI 10.1111/j.1467-8659.2011.01898.x
NR 43
TC 0
Z9 0
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1322
EP 1351
DI 10.1002/spe.2959
EA MAR 2021
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000624493700001
DA 2024-07-18
ER

PT J
AU Ayoubi, M
   Ramezanpour, M
   Khorsand, R
AF Ayoubi, Masoumeh
   Ramezanpour, Mohammadreza
   Khorsand, Reihaneh
TI An autonomous IoT service placement methodology in fog computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE evolutionary algorithm; fog computing; Internet of Things; service
   placement
ID SCHEDULING ALGORITHM; CLOUD; OPTIMIZATION; SIMULATION; TOOLKIT; TASKS
AB With the increase in the number of Internet of Things (IoT) devices having limited resources, an extension of the cloud-computing paradigm has emerged so-called fog computing, where all the fog cells are located at the edge of the network and the latency can be reduced. Meanwhile, an important challenge has attracted much attention with the definition of fog computing is service placement problem that is still at its very beginning research. It allows to deployment IoT applications on computational fog resources, with the objective of optimizing quality of service (QoS) requirements of applications while taking into account maximizing the utilization of fog resources. In this paper, an autonomous IoT service placement methodology including four phases of monitoring, analysis, decision-making, and execution is proposed called as (MADE). First, the available resources and application services' status are monitored at run time. Next, the requested services are prioritized with respect to application services' deadline. Then, the Strength Pareto Evolutionary Algorithm II is applied to take decisions about the application services placement as a multi-objective optimization problem. Finally, the decisions made in the previous phases are executed in a fog environment. The experiment results indicate that the proposed methodology outperforms its counterparts in terms of different performance metrics.
C1 [Ayoubi, Masoumeh; Ramezanpour, Mohammadreza] Islamic Azad Univ, Dept Comp Engn, Mobarakeh Branch, Esfahan, Iran.
   [Khorsand, Reihaneh] Islamic Azad Univ, Dept Comp Engn, Dolatabad Branch, Esfahan, Iran.
C3 Islamic Azad University; Islamic Azad University
RP Ramezanpour, M (corresponding author), Islamic Azad Univ, Dept Comp Engn, Mobarakeh Branch, Esfahan, Iran.
EM ramezanpour@mau.ac.ir
RI Ramezanpour, Mohammadreza/AAD-6944-2021; Khorsand,
   Reihaneh/AAN-5797-2021
OI Ramezanpour, Mohammadreza/0000-0002-1588-0982; 
CR Aburukba RO, 2020, FUTURE GENER COMP SY, V111, P539, DOI 10.1016/j.future.2019.09.039
   [Anonymous], 2005, SUMMARY COMP MOEA AL
   Azizi S, 2019, COMPUT METHODS DIFFE, V7, P521
   Bellendorf J, 2020, FUTURE GENER COMP SY, V107, P158, DOI 10.1016/j.future.2020.01.036
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Choodowicz E, 2017, COMP SPEA2 NSG 2 APP, V26, P67
   Eyckerman R, 2020, INTERNET OF THINGS, P100237
   Guerrero C, 2019, FUTURE GENER COMP SY, V97, P131, DOI 10.1016/j.future.2019.02.056
   Guerrero C, 2019, J AMB INTEL HUM COMP, V10, P2447, DOI 10.1007/s12652-018-0914-0
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hu PF, 2017, J NETW COMPUT APPL, V98, P27, DOI 10.1016/j.jnca.2017.09.002
   Jacob B., 2004, IBM REDBOOKS, V10, P4
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Khorsand R, 2020, INT J COMMUN SYST, V33, DOI 10.1002/dac.4379
   Khorsand R, 2017, J SYST SOFTWARE, V132, P253, DOI 10.1016/j.jss.2017.05.017
   Khorsand R, 2017, J SUPERCOMPUT, V73, P2430, DOI 10.1007/s11227-016-1928-z
   King RTFA., 2010, U MAURITIUS RES J, V16, P485
   Mahmud R., 2019, P 12 IEEE ACM INT C, P1
   Mahmud R, 2020, J PARALLEL DISTR COM, V135, P177, DOI 10.1016/j.jpdc.2019.10.001
   Mahmud R, 2019, J PARALLEL DISTR COM, V132, P190, DOI 10.1016/j.jpdc.2018.03.004
   Mehmandar MF, 2020, INT J COMMUN SYST, V33, DOI 10.1002/dac.4541
   Naha RK, 2020, FUTURE GENER COMP SY, V104, P131, DOI 10.1016/j.future.2019.10.018
   Rafieyan E, 2020, COMPUT IND ENG, V140, DOI 10.1016/j.cie.2020.106272
   Saeedi S, 2020, COMPUT IND ENG, V147, DOI 10.1016/j.cie.2020.106649
   Safari M, 2018, SIMUL MODEL PRACT TH, V87, P311, DOI 10.1016/j.simpat.2018.07.006
   Safari M, 2018, J SUPERCOMPUT, V74, P5578, DOI 10.1007/s11227-018-2498-z
   Shah A, 2020, COPD, V17, P40, DOI [10.1145/3334480.3381661, 10.1080/15412555.2019.1695247]
   Shahidinejad A, 2020, SOFTWARE PRACT EXPER, V50, P2212, DOI 10.1002/spe.2888
   Shahidinejad A, 2020, CLUSTER COMPUT, V23, P1045, DOI 10.1007/s10586-019-02972-8
   Skarlat O, 2017, SERV ORIENTED COMPUT, V11, P427, DOI 10.1007/s11761-017-0219-8
   Skarlat O, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P89, DOI 10.1109/ICFEC.2017.12
   Taneja Mohit, 2017, 2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), P1222, DOI 10.23919/INM.2017.7987464
   Trivedi V, 2019, SWARM INTELL, V14, P1
   Venticinque S, 2019, J AMB INTEL HUM COMP, V10, P1955, DOI 10.1007/s12652-018-0785-4
   Yi S., 2015, P 2015 WORKSH MOB BI, P37, DOI [DOI 10.1145/2757384.2757397, 10.1145/2757384.2757397]
   Yigitoglu E, 2017, 2017 IEEE 6TH INTERNATIONAL CONFERENCE ON AI & MOBILE SERVICES (AIMS), P38, DOI 10.1109/AIMS.2017.14
   Yousefpour A, 2019, IEEE INTERNET THINGS, V6, P5080, DOI 10.1109/JIOT.2019.2896311
   Zhu ZM, 2016, IEEE T PARALL DISTR, V27, P1344, DOI 10.1109/TPDS.2015.2446459
   Zitzler E., 2001, TIK-Report, V103, P1
NR 39
TC 28
Z9 28
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 1097
EP 1120
DI 10.1002/spe.2939
EA DEC 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000597062600001
DA 2024-07-18
ER

PT J
AU Jevitha, KP
   Jayaraman, S
   Jayaraman, B
   Sethumadhavan, M
AF Jevitha, K. P.
   Jayaraman, Swaminathan
   Jayaraman, Bharat
   Sethumadhavan, M.
TI Finite-state model extraction and visualization from Java program
   execution
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Apache Tomcat server; byte-code instrumentation; concurrency problems;
   finite-state model; Java; model abstraction; model extraction; OAuth
   protocol; program execution trace
ID RUNTIME VERIFICATION; INFERENCE; CHECKING
AB Finite-state models are extensively used for discrete systems and they have also been adopted for the analysis and verification of concurrent systems. Programs that have a repetitive cycle, such as event-driven servers and controllers, lend themselves to finite-state modeling. In this article, we use the termmodel extractionto refer to the construction of a finite-state model from an execution trace of a Java program and a set of key attributes, that is, a subset of the fields of the objects in the program execution. By choosing different sets of attributes, different finite-state models (or views) of the execution can be obtained. Such models aid program comprehension and they can also be used in debugging a program. We present algorithms for model extraction and also formodel abstractionin order to reduce the size of the extracted models so that they are amenable to visualization. For long executions, we show how to minimize the overhead of execution trace collection through a bytecode instrumentation technique; and, for large models, which are not amenable to visualization, we show how key properties of the extracted model can be checked against declarative specifications. We have implemented our techniques in the context of JIVE, an Eclipse plugin that supports runtime visualization and analysis of Java program executions. We illustrate our techniques through a collection of case studies of varying size and complexity, from classic problems of concurrency control to a medium-size protocol for authorization (OAuth2.0 protocol) to a large-scale software that underlies web applications (Apache Tomcat server).
C1 [Jevitha, K. P.] Amrita Vishwa Vidyapeetham, Dept Comp Sci & Engn, Amrita Sch Engn, Coimbatore, Tamil Nadu, India.
   [Jayaraman, Swaminathan] Amrita Vishwa Vidyapeetham, Dept Comp Sci & Engn, Amrita Sch Engn, Kollam, India.
   [Jayaraman, Bharat] SUNY Buffalo, Dept Comp Sci & Engn, New York, NY USA.
   [Sethumadhavan, M.] Amrita Vishwa Vidyapeetham, Amrita Sch Engn, TIFAC Core Cyber Secur, Coimbatore, Tamil Nadu, India.
C3 Amrita Vishwa Vidyapeetham; Amrita Vishwa Vidyapeetham Coimbatore;
   Amrita Vishwa Vidyapeetham; Amrita Vishwa Vidyapeetham Amritapuri; State
   University of New York (SUNY) System; State University of New York
   (SUNY) Buffalo; Amrita Vishwa Vidyapeetham; Amrita Vishwa Vidyapeetham
   Coimbatore
RP Jevitha, KP (corresponding author), Amrita Vishwa Vidyapeetham, Dept Comp Sci & Engn, Amrita Sch Engn, Coimbatore, Tamil Nadu, India.
EM kp_jevitha@cb.amrita.edu
RI J, Swaminathan/AFZ-7856-2022
OI J, Swaminathan/0000-0001-5646-3213; KP, Jevitha/0000-0002-0428-6531
CR Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2012, DWARF DEBUGGING STAN
   [Anonymous], 2003, PAPARAZZI UAV FREE A
   [Anonymous], DYN API
   [Anonymous], 1986, P 1 S LOG COMP SCI I
   [Anonymous], 2019, DRAWING UML PLANT UM
   [Anonymous], 2013, THESIS
   [Anonymous], 2012, OAUTH 2 0 AUTHORIZAT
   Ball T, 2001, ACM SIGPLAN NOTICES, V36, P203, DOI 10.1145/381694.378846
   Ben-Ari M., 2008, Principles of the Spin Model Checker
   Bernardi Simona., 2002, Proceedings of the 3rd international workshop on Software and performance, P35, DOI DOI 10.1145/584369.584376
   Bertolino A, 2005, ELECTRON NOTES THEOR, V116, P85, DOI 10.1016/j.entcs.2004.02.084
   Bruneton E., 2002, Adaptable and extensible component systems, V30
   Choorakuzil M, 2020, TECHNICAL REPORT
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   CZYZ J.K., 2007, Proceedings of the 2007 OOPSLA Workshop on Eclipse Technology Exchange (Montreal, Quebec, Canada, October 21 - 21, P31, DOI [10.1145/1328279.1328286, DOI 10.1145/1328279.1328286]
   De Giacomo Giuseppe., International Joint Conference on Artificial Intelligence, IJCAI. IJCAI/AAAI, P854, DOI DOI 10.5555/2540128.2540252
   Duarte L.M., 2007, THESIS
   Duarte L, 2017, SOFTW SYST MODEL, V16, P523, DOI 10.1007/s10270-015-0466-0
   Ernst M.D., 2003, WODA 2003 ICSE WORKS, P24
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Gestwicki P., 2005, P 2005 ACM S SOFTWAR, P95
   Giannakopoulou D., 2003, Software Engineering Notes, V28, P257, DOI 10.1145/949952.940106
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Gronmo R, 2010, LECT NOTES COMPUT SC, V6142, P93, DOI 10.1007/978-3-642-13688-7_7
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   Havelund K, 2004, FORM METHOD SYST DES, V24, P189, DOI 10.1023/B:FORM.0000017721.39909.4b
   Hinrichs T., 2014, HOWARD-60: A Festschrift on the Occasion of Howard Barringer's 60th Birthday, V42, P234
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Holzmann GJ, 2001, SOFTW TEST VERIF REL, V11, P65, DOI 10.1002/stvr.228
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jayaraman S, 2017, SOFTWARE PRACT EXPER, V47, P163, DOI 10.1002/spe.2411
   Jayasri K.S., 2018, P COMP SOC IND, P58
   Jevitha KP, 2020, FINITE STATE MODEL E
   Kapre A, 2013, P JPF WORKSH HELD CO
   KOSKIMIES K, 1994, SOFTWARE PRACT EXPER, V24, P643, DOI 10.1002/spe.4380240704
   Kuleshov Eugene., 2007, Aspect-Oriented Software Development 2007
   Lee I, 1998, P 1998 KOR US TECHN
   Lessa D, 2011, P 13 INT S DAT PROGR
   Luo QZ, 2014, LECT NOTES COMPUT SC, V8734, P285, DOI 10.1007/978-3-319-11164-3_24
   Matthews M, 1998, POLICY REV, P7
   Menapace J, 1993, STABS DEBUG FORMAT
   Mousavi A, 2007, P 11 IASTED INT C SO, P523
   Nimmer J. W., 2002, Software Engineering Notes, V27, P232, DOI 10.1145/566171.566213
   Oracle, 2019, JAVA PLATFORM STANDA
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Sarma M, 2007, ACM SIGPLAN NOTICES, V42, P5, DOI 10.1145/1328788.1328792
   Stevenson A, 2014, SCI COMPUT PROGRAM, V96, P444, DOI 10.1016/j.scico.2014.05.008
   Sun J, 2006, IEEE T SOFTWARE ENG, V32, P349, DOI 10.1109/TSE.2006.55
   Tanter E, 2002, LECT NOTES COMPUT SC, V2487, P283
   The apache software foundation, 2019, AP TOMC
   The apache software foundation, 2019, AP TOMC 9 ARCH
   Uchitel S, 2007, PROC INT CONF SOFTW, P34
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Walkinshaw N, 2008, J SOFTW MAINT EVOL-R, V20, P269, DOI 10.1002/smr.373
   Wheeler D.A., 2019, SLOCCOUNT
NR 59
TC 7
Z9 7
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 409
EP 437
DI 10.1002/spe.2910
EA OCT 2020
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000576596800001
DA 2024-07-18
ER

PT J
AU Rimsa, A
   Amaral, JN
   Pereira, FMQ
AF Rimsa, Andrei
   Amaral, Jose Nelson
   Pereira, Fernando M. Q.
TI Practical dynamic reconstruction of control flow graphs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code instrumentation; control flow graph; dynamic analysis
AB The automatic recovery of a program's high-level representation from its binary version is a well-studied problem in programming languages. However, most of the solutions to this problem are based on purely static approaches: techniques such as dataflow analyses or type inference are used to convert the bytes that constitute the executable code back into a control flow graph (CFG). This article departs from such a modus operandi to show that a dynamic analysis can be effective and useful, both as a standalone technique, and as a way to enhance the precision of static approaches. The experimental results provide evidence that completeness, that is, the ability to conclude that the entire CFG has been discovered, is achievable on many functions that are part of industry-strong benchmarks. Experiments also indicate that dynamic information greatly enhances the ability ofDynInst, a state-of-the-art binary reconstructor, to deal with code stripped of debugging information. These results were obtained withCFGgrind, a new implementation of a dynamic code reconstructor, built on top ofValgrind. When applied tocBench,CFGgrindis 9% faster thancallgrind,Valgrind's tool used to track targets of function calls; and 7% faster inSpec Cpu2017.CFGgrindrecovers the complete CFG of 40% of all the procedures invoked during the standard execution of programs inSpec Cpu2017, and 37% incBench. When combined withCFGgrind,DynInstfinds 15% more CFGs forcBench, and 7% more CFGs forSpec Cpu2017. Finally,CFGgrindis more than 7 times faster than DCFG, a CFG reconstructor from Intel, and 1.30 times faster thanbfTrace, a CFG reconstructor used in research.CFGgrindis also more precise than these two tools, handling operating system signals, shared code in functions, and unaligned instructions; besides supporting multithreaded programs, exact profiling and incremental refinements.
C1 [Rimsa, Andrei] CEFET MG, Dept Comp, Av Amazonas 7675, BR-30510000 Belo Horizonte, MG, Brazil.
   [Amaral, Jose Nelson] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
   [Pereira, Fernando M. Q.] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
C3 University of Alberta; Universidade Federal de Minas Gerais
RP Rimsa, A (corresponding author), CEFET MG, Dept Comp, Av Amazonas 7675, BR-30510000 Belo Horizonte, MG, Brazil.
EM andrei@cefetmg.br
RI Pereira, Fernando/HNR-7786-2023
OI Quintao Pereira, Fernando Magno/0000-0002-0375-1657; Amaral, Jose
   Nelson/0000-0002-9943-1809; Rimsa, Andrei/0000-0002-0151-2900
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [406377/2018-9]; Fundacao de Amparo a Pesquisa do Estado de Minas Gerais
   [PPM-00193-16]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Number: 406377/2018-9; Fundacao de Amparo a Pesquisa do
   Estado de Minas Gerais, Grant/Award Number: PPM-00193-16
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Agrawal Rakesh., 1993, P 1993 ACM SIGMOD IN, P207, DOI DOI 10.1145/170035.170072
   Alvarez-Perez D., 2017, DEPTH ANAL MALWARE E
   [Anonymous], 1970, ACM SIGPLAN NOTICES, DOI DOI 10.1145/390013.808479
   [Anonymous], 1994, Technical Report
   [Anonymous], 2011, IDA PRO BOOK UNOFFIC
   [Anonymous], 2016, P 25 INT S SOFTWARE, DOI DOI 10.1145/2931037.2931047
   [Anonymous], 2009, TECHNICAL REPORT
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Balakrishnan G, 2004, LECT NOTES COMPUT SC, V2985, P5
   Bernat A. R., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P9, DOI 10.1109/WCRE.2012.11
   Blazy S, 2016, PROCEEDINGS OF THE 5TH ACM SIGPLAN CONFERENCE ON CERTIFIED PROGRAMS AND PROOFS (CPP'16), P176, DOI 10.1145/2854065.2854082
   Brumley David, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P463, DOI 10.1007/978-3-642-22110-1_37
   Carrington Tim, 2018, REMOTE CODE EXECUTIO
   Checkoway S, 2010, P 17 ACM C COMP COMM, P1
   CIFUENTES C, 1995, SOFTWARE PRACT EXPER, V25, P811, DOI 10.1002/spe.4380250706
   Endre Tarjan R., 1974, P 6 ANN ACM S THEOR, P185
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gao DB, 2008, LECT NOTES COMPUT SC, V5308, P238
   Godefroid P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P539, DOI 10.11455/2568225.2568273
   Gorelik M., 2018, CRITICAL ALERT CVE 2
   Gruber F, 2019, PROCEEDINGS OF THE 24TH SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING (PPOPP '19), P173, DOI 10.1145/3293883.3295737
   Hu YK, 2018, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSME.2018.00019
   Kimball WB, 2013, THESIS
   Kinder J, 2008, LECT NOTES COMPUT SC, V5123, P423
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Lemos O.A. L., 2006, P 2 WORKSHOP TESTING, P33
   Lin Y, 2018, IEEE INT CONF AUTOM, P509, DOI 10.1145/3238147.3238163
   Moser A, 2007, P IEEE S SECUR PRIV, P231, DOI 10.1109/SP.2007.17
   Panchenko M, 2019, INT SYM CODE GENER, P2, DOI [10.5281/zenodo.2542117, 10.1109/CGO.2019.8661201]
   RICE HG, 1953, T AM MATH SOC, V74, P358, DOI 10.2307/1990888
   Rimsa A, 2019, XXIII BRAZILIAN SYMPOSIUM ON PROGRAMMING LANGUAGES, P19, DOI 10.1145/3355378.3355383
   Schwarz B., 2002, DISASSEMBLY EXECUTAB, P45
   Seward J, 2019, VALGRIND MANUAL
   Shacham H, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P552
   SITES RL, 1993, COMMUN ACM, V36, P69, DOI 10.1145/151220.151227
   Smithson M, 2013, WORK CONF REVERSE EN, P52, DOI 10.1109/WCRE.2013.6671280
   Song D, 2008, LECT NOTES COMPUT SC, V5352, P1, DOI 10.1007/978-3-540-89862-7_1
   Theiling H, 2000, SEVENTH INTERNATIONAL CONFERENCE ON REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P23, DOI 10.1109/RTCSA.2000.896367
   Yount C, 2015, INT SYM PERFORM ANAL, P52, DOI 10.1109/ISPASS.2015.7095784
   Zhen L, 2014, THESIS
   Zhou RY, 2019, INT SYM CODE GENER, P15, DOI [10.1109/CGO.2019.8661196, 10.17863/CAM.33893]
NR 42
TC 8
Z9 8
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 353
EP 384
DI 10.1002/spe.2907
EA OCT 2020
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000576596700001
OA Green Published
DA 2024-07-18
ER

PT J
AU Guedria, S
   De Palma, N
   Renard, F
   Vuillerme, N
AF Guedria, Soulaimane
   De Palma, Noel
   Renard, Felix
   Vuillerme, Nicolas
TI R2D2: A scalable deep learning toolkit for medical imaging segmentation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deep learning; distributed optimization; distributed systems;
   high-performance computing; medical imaging; semantic segmentation;
   software engineering
ID NEURAL-NETWORK; PLATFORM
AB Deep learning has gained a significant popularity in recent years thanks to its tremendous success across a wide range of relevant fields of applications, including medical image analysis domain in particular. Although convolutional neural networks (CNNs) based medical applications have been providing powerful solutions and revolutionizing medicine, efficiently training of CNNs models is a tedious and challenging task. It is a computationally intensive process taking long time and rare system resources, which represents a significant hindrance to scientific research progress. In order to address this challenge, we propose in this article, R2D2, a scalable intuitive deep learning toolkit for medical imaging semantic segmentation. To the best of our knowledge, the present work is the first that aims to tackle this issue by offering a novel distributed versions of two well-known and widely used CNN segmentation architectures [ie, fully convolutional network (FCN) and U-Net]. We introduce the design and the core building blocks of R2D2. We further present and analyze its experimental evaluation results on two different concrete medical imaging segmentation use cases. R2D2 achieves up to17.5xand10.4xspeedup than single-node based training of U-Net and FCN, respectively, with a negligible, though still unexpected segmentation accuracy loss. R2D2 offers not only an empirical evidence and investigates in-depth the latest published works but also it facilitates and significantly reduces the effort required by researchers to quickly prototype and easily discover cutting-edge CNN configurations and architectures.
C1 [Guedria, Soulaimane; De Palma, Noel; Renard, Felix] Univ Grenoble Alpes, CNRS, Grenoble INP, LIG, Grenoble, France.
   [Guedria, Soulaimane; Renard, Felix; Vuillerme, Nicolas] Univ Grenoble Alpes, AGEIS, Grenoble, France.
   [Vuillerme, Nicolas] Inst Univ France, Paris, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Communaute Universite Grenoble Alpes;
   Universite Grenoble Alpes (UGA); Institut Universitaire de France
RP Guedria, S (corresponding author), Univ Grenoble Alpes, CNRS, Grenoble INP, LIG, Batiment IMAG,700 Ave Cent, F-38400 St Martin Dheres, France.
EM soulaimane.guedria@univ-grenoble-alpes.fr
RI VUILLERME, Nicolas/U-5767-2019
OI VUILLERME, Nicolas/0000-0003-3773-393X; GUEDRIA,
   Soulaimane/0000-0001-6622-0418
FU French National Research Agency [ANR-10-AIRT-05]; Virtual Studio RA;
   Smart Support Center (SSC) FEDER EU projects; FSN Hydda project;
   Institut Carnot LSI
FX The French National Research Agency in the framework of the
   "Investissements d'avenir" program (ANR-10-AIRT-05), the Virtual Studio
   RA and Smart Support Center (SSC) FEDER EU projects, the FSN Hydda
   project and Institut Carnot LSI
CR [Anonymous], 2017, Scaling sgd batch size to 32k for imagenet training
   [Anonymous], 2001, Intelligent Signal Processing
   [Anonymous], 2015, ABS150504366 CORR
   [Anonymous], 2012, P 29 INT COFERENCE I
   [Anonymous], 2017, ARXIV171104325
   Avants B.B., 2009, Insight j, V2, P1, DOI DOI 10.54294/UVNHIN
   Balouek D, 2013, COMM COM INF SC, V367, P3
   Bar Y, 2015, I S BIOMED IMAGING, P294, DOI 10.1109/ISBI.2015.7163871
   Ben-Nun T, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3320060
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Beutel J., 2000, Handbook of Medical Imaging, V1, DOI DOI 10.1117/3.832716.CH15
   Bradski G, 2000, DR DOBBS J, V25, P120
   Calkins H, 2012, EUROPACE, V14, P528, DOI 10.1093/europace/eus027
   Cardoso M, 2012, P IEEE INT S BIOM IM
   Chilimbi T., 2014, 11 USENIX S OPERATIN, P571
   Chollet F, 2015, KERAS
   CHUA LO, 1993, IEEE T CIRCUITS-I, V40, P147, DOI 10.1109/81.222795
   Coates A, 2013, PROC INT C MACH LEAR, P1337
   Cook P.a., 2006, 14 SCI M INT SOC MAG, V14, P2759
   Cox DD, 2014, CURR BIOL, V24, pR921, DOI 10.1016/j.cub.2014.08.026
   Dean J., 2012, ADV NEURAL INFORM PR, P1223
   Dowling J, 2017, DISTRIBUTED TENSORFL
   Felter W, 2015, INT SYM PERFORM ANAL, P171, DOI 10.1109/ISPASS.2015.7095802
   Gabriel E, 2004, LECT NOTES COMPUT SC, V3241, P97
   Garcia A, 2017, APPR DIGIT GAME STUD, V5, P1
   Gibiansky A, 2017, BRINGING HPC TECHNIQ
   Gibson E, 2018, COMPUT METH PROG BIO, V158, P113, DOI 10.1016/j.cmpb.2018.01.025
   Gordillo N, 2013, MAGN RESON IMAGING, V31, P1426, DOI 10.1016/j.mri.2013.05.002
   Goyal Priya, 2017, CoRR abs/1706.02677
   Greenspan H, 2016, IEEE T MED IMAGING, V35, P1153, DOI 10.1109/TMI.2016.2553401
   Guedria S, 2019, 2019 6TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND COMPUTATIONAL INTELLIGENCE (CSCI 2019), P943, DOI 10.1109/CSCI49370.2019.00179
   Guedria S, 2019, IEEE INT CONF BIG DA, P3330, DOI [10.1109/BigData47090.2019.9006175, 10.1109/bigdata47090.2019.9006175]
   Harlap A., 2018, CORR
   Hoffer E., 2017, Adv. Neural Inf. Process. Syst
   HUBEL DH, 1959, J PHYSIOL-LONDON, V148, P574, DOI 10.1113/jphysiol.1959.sp006308
   Hunter JD, 2007, COMPUT SCI ENG, V9, P90, DOI 10.1109/MCSE.2007.55
   Isin A, 2016, PROCEDIA COMPUT SCI, V102, P317, DOI 10.1016/j.procs.2016.09.407
   Jenkinson M, 2012, NEUROIMAGE, V62, P782, DOI 10.1016/j.neuroimage.2011.09.015
   Jiang JW, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P463, DOI 10.1145/3035918.3035933
   Johnsen SF, 2015, INT J COMPUT ASS RAD, V10, P1077, DOI 10.1007/s11548-014-1118-5
   Julkunen P, 2008, PHYS MED BIOL, V53, P2425, DOI 10.1088/0031-9155/53/9/014
   Kamnitsas K, 2016, LECT NOTES COMPUT SC, V10154, P138, DOI 10.1007/978-3-319-55524-9_14
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Krizhevsky Alex, 2014, ARXIV14045997
   Lakhani P, 2017, RADIOLOGY, V284, P574, DOI 10.1148/radiol.2017162326
   Larrabide I, 2009, LECT NOTES COMPUT SC, V5528, P417, DOI 10.1007/978-3-642-01932-6_45
   LeCun Y., 1995, The handbook of brain theory and neural networks, V3361, DOI [10.5555/303568.303704, DOI 10.5555/303568.303704]
   Lee L, 2015, SURVEY MED IMAGE PRO
   Lee S, 2014, ADV NEUR IN, V27
   Li H, 2018, ADV NEUR IN, V31
   Li M., 2014, P 28 ANN C NEURAL IN, P19
   Li Mu, 2014, USENIX OSDI, P583
   Lo SCB, 1995, NEURAL NETWORKS, V8, P1201, DOI 10.1016/0893-6080(95)00061-5
   Long J, 2015, PROC CVPR IEEE, P3431, DOI 10.1109/CVPR.2015.7298965
   Loshchilov I., 2016, arXiv
   Maintz J B, 1998, Med Image Anal, V2, P1, DOI 10.1016/S1361-8415(01)80026-8
   MEHRTASH A, 2017, P SPIE INT SOC OPTIC
   Menze BH, 2015, IEEE T MED IMAGING, V34, P1993, DOI 10.1109/TMI.2014.2377694
   Milletari F, 2016, INT CONF 3D VISION, P565, DOI 10.1109/3DV.2016.79
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Patarasuk P, 2009, J PARALLEL DISTR COM, V69, P117, DOI 10.1016/j.jpdc.2008.09.002
   Pawlowski N., 2017, ABS171106853 CORR
   Pieper S, 2006, I S BIOMED IMAGING, P698
   Rasmussen CE, 2004, LECT NOTES ARTIF INT, V3176, P63, DOI 10.1007/978-3-540-28650-9_4
   Ronneberger O, 2015, LECT NOTES COMPUT SC, V9351, P234, DOI 10.1007/978-3-319-24574-4_28
   Roth HR, 2016, IEEE T MED IMAGING, V35, P1170, DOI 10.1109/TMI.2015.2482920
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Sergeev A., 2018, Horovod: fast and easy distributed deep learning in tensorflow
   Sharma N, 2010, J MED PHYS, V35, P3, DOI 10.4103/0971-6203.58777
   Shen DG, 2017, ANNU REV BIOMED ENG, V19, P221, DOI [10.1146/annurev-bioeng-071516044442, 10.1146/annurev-bioeng-071516-044442]
   Shi JB, 2000, IEEE T PATTERN ANAL, V22, P888, DOI 10.1109/34.868688
   Shin HC, 2016, IEEE T MED IMAGING, V35, P1285, DOI 10.1109/TMI.2016.2528162
   Shipman GM, 2006, P 20 IEEE INT PAR DI, P10
   Smith S. L., 2017, ARXIV171100489
   Snoek J., 2012, Advances in Neural Information Processing Systems, V25, DOI DOI 10.48550/ARXIV.1206.2944
   Strom Nikko., 2015, Proc. Interspeech
   Tobon-Gomez C, 2015, IEEE T MED IMAGING, V34, P1460, DOI 10.1109/TMI.2015.2398818
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   Wolf I, 2005, MED IMAGE ANAL, V9, P594, DOI 10.1016/j.media.2005.04.005
   Wu Y., 2016, GOOGLES NEURAL MACHI
   Yu L, 2006, IEEE T KNOWL DATA EN, V18, P217, DOI 10.1109/TKDE.2006.22
   Zhang W., 2016, P 25 INT JOINT C ART, P2350
   Zhang YJ, 1996, PATTERN RECOGN, V29, P1335, DOI 10.1016/0031-3203(95)00169-7
   Zhao LY, 2016, COMPUT MATH METHOD M, V2016, DOI 10.1155/2016/8356294
NR 84
TC 5
Z9 5
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2020
VL 50
IS 10
BP 1966
EP 1985
DI 10.1002/spe.2878
EA AUG 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ8HF
UT WOS:000557841900001
DA 2024-07-18
ER

PT J
AU Mazidi, A
   Golsorkhtabaramiri, M
   Tabari, MY
AF Mazidi, Arash
   Golsorkhtabaramiri, Mehdi
   Tabari, Meisam Yadollahzadeh
TI Autonomic resource provisioning for multilayer cloud applications with
   K-nearest neighbor resource scaling and priority-based resource
   allocation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomic provisioning; K-NN algorithm; MAPE-K loop; resource management
ID VIRTUAL MACHINE ALLOCATION; PREDICTION ALGORITHM; WEB APPLICATIONS;
   ENERGY; SCHEME; MANAGEMENT
AB Providing a pool of various resources and services to customers on the Internet in exchanging money has made cloud computing as one of the most popular technologies. Management of the provided resources and services at the lowest cost and maximum profit is a crucial issue for cloud providers. Thus, cloud providers proceed to auto-scale the computing resources according to the users' requests in order to minimize the operational costs. Therefore, the required time and costs to scale-up and down computing resources are considered as one of the major limits of scaling which has made this issue an important challenge in cloud computing. In this paper, a new approach is proposed based on MAPE-K loop to auto-scale the resources for multilayered cloud applications. K-nearest neighbor (K-NN) algorithm is used to analyze and label virtual machines and statistical methods are used to make scaling decision. In addition, a resource allocation algorithm is proposed to allocate requests on the resources. Results of the simulation revealed that the proposed approach results in operational costs reduction, as well as improving the resource utilization, response time, and profit.
C1 [Mazidi, Arash; Golsorkhtabaramiri, Mehdi; Tabari, Meisam Yadollahzadeh] Islamic Azad Univ, Dept Comp Engn, Babol Branch, Babol Sar, Iran.
C3 Islamic Azad University
RP Golsorkhtabaramiri, M (corresponding author), Islamic Azad Univ, Dept Comp Engn, Babol Branch, Babol Sar, Iran.
EM golesorkh@baboliau.ac.ir
RI Mazidi, Arash/ABC-8496-2020; Yadollahzadeh-Tabari, meisam/AAO-2334-2021;
   Golsorkhtabaramiri, Mehdi/T-8097-2018
OI Mazidi, Arash/0000-0002-0417-5655; Yadollahzadeh-Tabari,
   meisam/0000-0002-5231-7611; Golsorkhtabaramiri,
   Mehdi/0000-0002-9932-2477
CR Abdul-Rahman O, 2013, INT CONF CLOUD COMP, P238, DOI 10.1109/CloudCom.2013.138
   AGGARWAL R, 2018, INT J SCI RES COMPUT, V3, P31
   Al-Ayyoub M, 2018, FUTURE GENER COMP SY, V86, P765, DOI 10.1016/j.future.2017.07.005
   Al-Ayyoub M, 2015, CLUSTER COMPUT, V18, P919, DOI 10.1007/s10586-015-0449-5
   [Anonymous], 2016, Google Compute Engine Service Level Agreement (SLA)
   Aslanpour MS, 2018, J SUPERCOMPUT, V74, P6470, DOI 10.1007/s11227-017-2156-x
   Aslanpour MS, 2017, J NETW COMPUT APPL, V95, P26, DOI 10.1016/j.jnca.2017.07.012
   Cao ZB, 2012, 2012 13TH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED COMPUTING, APPLICATIONS, AND TECHNOLOGIES (PDCAT 2012), P363, DOI 10.1109/PDCAT.2012.68
   CHEN IC, 2018, ADARES ADAPTIVE RESO
   Coutinho EF, 2015, ANN TELECOMMUN, V70, P289, DOI 10.1007/s12243-014-0450-7
   DAS H, 2018, RESOURCE ALLOCATION, P825
   Du BQ, 2019, AAAI CONF ARTIF INTE, P7570
   Faragardi HR, 2018, SOFTWARE PRACT EXPER, V48, P1734, DOI 10.1002/spe.2592
   Ghobaei-Arani M, 2018, FUTURE GENER COMP SY, V78, P191, DOI 10.1016/j.future.2017.02.022
   Ghobaei-Arani M, 2016, CLUSTER COMPUT, V19, P1017, DOI 10.1007/s10586-016-0574-9
   Guan SC, 2019, IEEE T CLOUD COMPUT, V7, P5, DOI 10.1109/TCC.2015.2453945
   Gupta MK, 2018, J SUPERCOMPUT, V74, P122, DOI 10.1007/s11227-017-2112-9
   Haghighi MA, 2019, WIRELESS PERS COMMUN, V104, P1367, DOI 10.1007/s11277-018-6089-3
   Hameed A, 2016, COMPUTING, V98, P751, DOI 10.1007/s00607-014-0407-8
   Hao F, 2017, IEEE ACM T NETWORK, V25, P238, DOI 10.1109/TNET.2016.2575779
   Javaid S, 2019, ENERGIES, V12, DOI 10.3390/en12050815
   Khorsand R, 2019, SOFTWARE PRACT EXPER, V49, P1618, DOI 10.1002/spe.2737
   Khorsand R, 2018, SOFTWARE PRACT EXPER, V48, P2147, DOI 10.1002/spe.2627
   Kumar KD., 2018, INT J PURE APPL MATH, V119, P333
   LI J, 2018, INT J HIGH PERFORM C, V12, P13
   Li JX, 2015, TSINGHUA SCI TECHNOL, V20, P81, DOI 10.1109/TST.2015.7040517
   García AL, 2018, SOFTWARE PRACT EXPER, V48, P486, DOI 10.1002/spe.2544
   Mann ZA, 2018, SOFTWARE PRACT EXPER, V48, P1368, DOI 10.1002/spe.2579
   Mann ZA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2797211
   Maurer M, 2011, IEEE SYMP COMP COMMU
   MAZIDI A, 2019, J APPL DYN SYST CONT, V2, P7
   Mazidi A., 2017, CIRC COMPUT SCI, V2, P1
   Mazidi A, 2020, INT J COMMUN SYST, V33, DOI 10.1002/dac.4334
   Messias VR, 2016, NEURAL COMPUT APPL, V27, P2383, DOI 10.1007/s00521-015-2133-3
   *MICR AZ, 2019, AZ AUT
   Mortazavi SH, 2017, SEC 2017: 2017 THE SECOND ACM/IEEE SYMPOSIUM ON EDGE COMPUTING (SEC'17), DOI 10.1145/3132211.3134464
   Mustafa S, 2015, COMPUT ELECTR ENG, V47, P186, DOI 10.1016/j.compeleceng.2015.07.021
   NADJARANTOOSI A, 2018, FUTURE GENER COMP SY, V79, P765
   Priya V, 2019, APPL SOFT COMPUT, V76, P416, DOI 10.1016/j.asoc.2018.12.021
   QIU C, 2019, IEEE T CLOUD COMPUT, V8, P1
   Rahmanian AA, 2017, INT J COMMUN SYST, V30, DOI 10.1002/dac.3179
   Rahmanian AA, 2018, FUTURE GENER COMP SY, V79, P54, DOI 10.1016/j.future.2017.09.049
   Ranjbari M, 2018, J PARALLEL DISTR COM, V113, P55, DOI 10.1016/j.jpdc.2017.10.009
   Rath Mamata, 2019, International Journal of Information Technology, V11, P357, DOI 10.1007/s41870-017-0059-y
   Rathod KD, 2018, 2018 3RD INTERNATIONAL CONFERENCE FOR CONVERGENCE IN TECHNOLOGY (I2CT)
   Roy N, 2011, INT CONF PERVAS COMP, P63, DOI 10.1109/PERCOM.2011.5767596
   Saraswathi AT, 2015, PROCEDIA COMPUT SCI, V47, P30, DOI 10.1016/j.procs.2015.03.180
   SINGH S, 2018, P 2018 INT C INV RES, P1375
   Singh S, 2016, KNOWL INF SYST, V49, P1005, DOI 10.1007/s10115-016-0922-3
   Singh S, 2016, J GRID COMPUT, V14, P217, DOI 10.1007/s10723-015-9359-2
   Singh S, 2015, COMPUT ELECTR ENG, V47, P138, DOI 10.1016/j.compeleceng.2015.02.003
   Tofighy S, 2018, SOFTWARE PRACT EXPER, V48, P2257, DOI 10.1002/spe.2641
   Verma M, 2016, CONCURR COMP-PRACT E, V28, P4429, DOI 10.1002/cpe.3767
   Yang JQ, 2014, INFORM SYST FRONT, V16, P7, DOI 10.1007/s10796-013-9459-0
   Zhang JX, 2018, CMC-COMPUT MATER CON, V56, P123, DOI 10.3970/cmc.2018.03728
   Zhang XQ, 2019, J SYST SOFTWARE, V147, P147, DOI 10.1016/j.jss.2018.09.084
   Zhong W, 2018, APPL INTELL, V48, P4072, DOI 10.1007/s10489-018-1194-2
NR 57
TC 8
Z9 8
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2020
VL 50
IS 8
BP 1600
EP 1625
DI 10.1002/spe.2837
EA APR 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MG0MA
UT WOS:000526026100001
DA 2024-07-18
ER

PT J
AU Khan, OA
   Malik, SUR
   Baig, FM
   Ul Islam, S
   Pervaiz, H
   Malik, H
   Ahmed, SH
AF Khan, Osama Amir
   Malik, Saif U. R.
   Baig, Faizan M.
   Ul Islam, Saif
   Pervaiz, Haris
   Malik, Hassan
   Ahmed, Syed Hassan
TI A cache-based approach toward improved scheduling in fog computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cache; cloud computing; fog computing; IoT; job scheduling; QoE; QoS
ID TECHNOLOGIES; ARCHITECTURE; SIMULATION; MANAGEMENT; TOOLKIT
AB Fog computing is a promising technique to reduce the latency and power consumption issues of the Internet of Things (IoT) ecosystem by enabling storage and computational resource close to the end-user devices with additional benefits such as improved execution time and processing. However, with an increase in IoT devices, the resource allocation and job scheduling became a complicated and cumbersome task due to limited and heterogeneous resources along with the locality restriction in such computing environment. Therefore, this paper proposes a cache-based approach for efficient resource allocation in fog computing environment, while maintaining the quality of service. The proposed algorithm is realized using iFogSim simulator and a comprehensive comparison is presented with the traditional First Come First Served and Shortest Job First policies. The performance evaluation revealed that with the proposed scheme the execution time, latency, processing delays and power consumption decreased by 38%, 11.1%, 6%, and 17.8%, respectively, as compared to those of the traditional schemes.
C1 [Khan, Osama Amir; Baig, Faizan M.] COMSATS Univ, Dept Comp Sci, Islamabad, Pakistan.
   [Malik, Saif U. R.] Cybernet AS, Tallinn, Estonia.
   [Ul Islam, Saif] Dr AQ Khan Inst Comp Sci & Informat Technol, Rawalpindi, Pakistan.
   [Pervaiz, Haris] Univ Lancaster, Sch Comp & Commun, Lancaster, England.
   [Malik, Hassan] Tallinn Univ Technol, Thomas Johann Seebeck Dept Elect, Tallinn, Estonia.
   [Ahmed, Syed Hassan] Georgia Southern Univ, Dept Comp Sci, Statesboro, GA USA.
C3 COMSATS University Islamabad (CUI); Cybernetica; Lancaster University;
   Tallinn University of Technology; University System of Georgia; Georgia
   Southern University
RP Malik, SUR (corresponding author), Cybernet AS, Tallinn, Estonia.
EM saif.rehmanmalik@cyber.ee
RI Malik, Hassan/S-2765-2018; Ahmed, Syed/GSN-7305-2022; Malik, Saif Ur
   Rehman/M-3948-2019; Islam, Saif ul/AAX-4521-2020; Shah, Syed
   Hassan/E-5058-2014
OI Malik, Hassan/0000-0002-8564-3683; Malik, Saif Ur
   Rehman/0000-0001-8195-1630; Islam, Saif ul/0000-0002-9546-4195; Shah,
   Syed Hassan/0000-0002-1381-5095; Pervaiz, Haris/0000-0002-8364-4682
CR Aazam M, 2018, IEEE COMMUN MAG, V56, P46, DOI 10.1109/MCOM.2018.1700707
   Aazam M, 2015, INT CON ADV INFO NET, P687, DOI 10.1109/AINA.2015.254
   Aazam M, 2014, 2014 INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD), P464, DOI 10.1109/FiCloud.2014.83
   Aazam M, 2014, MATH PROBL ENG, V2014, DOI 10.1155/2014/108286
   Alam MM, 2018, IEEE ACCESS, V6, P36611, DOI 10.1109/ACCESS.2018.2853148
   [Anonymous], IEEE T CLOUD COMPUT
   Assila B, 2018, INT CONF NEW TECHNOL
   Bitam S, 2018, ENTERP INF SYST-UK, V12, P373, DOI 10.1080/17517575.2017.1304579
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Choudhari T, 2018, ACMSE '18: PROCEEDINGS OF THE ACMSE 2018 CONFERENCE, DOI 10.1145/3190645.3190699
   Dastjerdi Amir Vahid, 2016, Internet of Things, P61, DOI [10.1016/B978 -0-12-805395-9.00004-6. arXiv: 1601.02752, DOI 10.1016/B978-0-12-805395-9.00004-6.ARXIV:1601.02752]
   Datta Subhajit, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321215
   Gedeon J, 2017, IEEE INT CON DIS, P145, DOI 10.1109/ICDCSW.2017.61
   *GITHUB, 2019, IOT COMP DAT
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hu PF, 2017, J NETW COMPUT APPL, V98, P27, DOI 10.1016/j.jnca.2017.09.002
   Idachaba U, 2015, IEEE INT CONGR BIG, P559, DOI 10.1109/BigDataCongress.2015.87
   Intharawijitr K, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATION WORKSHOPS (PERCOM WORKSHOPS)
   Jia GY, 2018, ENTERP INF SYST-UK, V12, P435, DOI 10.1080/17517575.2017.1295321
   KRISHNAPRIYA S, 2015, INT J SCI ENG RES, V6, P294
   Lee WJ, 2016, I C CONT AUTOMAT ROB
   LUAN TH, 2015, ARXIV150201815
   Malik H, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ENVIRONMENTAL ENGINEERING (EE)
   Malik SUR, 2016, DISTRIB PARALLEL DAT, V34, P179, DOI 10.1007/s10619-015-7173-2
   NINGNING S, 2016, CHINA COMMUN, V13, P156, DOI DOI 10.1109/CC.2016.7445510
   Pang AC, 2017, INT CON DISTR COMP S, P615, DOI 10.1109/ICDCS.2017.83
   Ruia Atin, 2016, 2016 IEEE Conference on Computer Communications: Workshops (INFOCOM WKSHPS), P610, DOI 10.1109/INFCOMW.2016.7562149
   SALEEM A, 2019, IEEE INTERNET THINGS
   Verma Manisha, 2016, International Journal of Information Technology and Computer Science, V8, P1, DOI 10.5815/ijitcs.2016.04.01
   Xiao Y, 2017, CHINA IN THE MIX: CINEMA, SOUND, AND POPULAR CULTURE IN THE AGE OF GLOBALIZATION, P1
   Yi S., 2015, P 2015 WORKSH MOB BI, P37, DOI [DOI 10.1145/2757384.2757397, 10.1145/2757384.2757397]
   Yin LX, 2018, IEEE T IND INFORM, V14, P4712, DOI 10.1109/TII.2018.2851241
NR 32
TC 12
Z9 12
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2360
EP 2372
DI 10.1002/spe.2824
EA APR 2020
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000526011100001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Kaur, A
   Singh, P
   Batth, RS
   Lim, CP
AF Kaur, Avinash
   Singh, Parminder
   Batth, Ranbir Singh
   Lim, Chee Peng
TI Deep-Q learning-based heterogeneous earliest finish time scheduling
   algorithm for scientific workflows in cloud
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; deep-Q learning; HEFT; multiobjective optimization;
   workflow scheduling
ID ENERGY; SYSTEMS
AB The complex and large-scale scientific workflow applications are effectively executes on the cloud. The performance of cloud computing highly depends on the task scheduling. Optimal workflow scheduling is still a challenge that needs to be addressed due to the conflicting objectives and increasing demand for quality of service. Task scheduling is an NP-hard problem due to its complexity. The newly introduced methods for resolving the problem of task scheduling are facing challenges to take the benefits of all aspects of cloud computing. In this article, we study the joint optimization of cost and makespan of scheduling workflows in infrastructure as a service clouds and propose a new workflow scheduling scheme using deep learning. In this scheme, a deep-Q learning-based heterogeneous earliest-finish-time (DQ-HEFT) algorithm is developed, which closely integrates the deep learning mechanism with the task scheduling heuristic HEFT. The workflowsim simulator is used for the experiment of the real-world and synthetic workflows. The experiment results demonstrate the efficiency of our proposed approach compared with existing algorithms. This technique can achieve significantly better makespan and speed metrics with a remarkably higher volume of data and can run faster compared with the existing workflow scheduling algorithms in cloud computing environment.
C1 [Kaur, Avinash; Singh, Parminder; Batth, Ranbir Singh] Lovely Profess Univ, Dept Comp Sci & Engn, Phagwara, Punjab, India.
   [Lim, Chee Peng] Deakin Univ, Inst Intelligent Syst Res & Innovat, Waurn Ponds, Australia.
C3 Lovely Professional University; Deakin University
RP Singh, P (corresponding author), Lovely Profess Univ, Dept Comp Sci & Engn, Phagwara, Punjab, India.
EM parminder.16479@lpu.co.in
RI Singh, Parminder/AAC-7323-2019; Kaur, Avinash/JFJ-0637-2023; batth,
   Ranbir singh/AAD-4726-2019; Singh, Parminder/GQZ-8220-2022; Lim, Chee
   Peng/AAS-4698-2021; Lim, CP/D-1999-2009
OI batth, Ranbir singh/0000-0002-8655-7613; Singh,
   Parminder/0000-0002-0750-6309; Lim, CP/0000-0003-4191-9083; Kaur,
   Avinash/0000-0003-3534-4121
CR Abdelkader DM, 2012, EGYPT INFORM J, V13, P135, DOI 10.1016/j.eij.2012.04.001
   Akbar MF, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON INTERNET OF THINGS (ITHINGS) AND IEEE GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) AND IEEE CYBER, PHYSICAL AND SOCIAL COMPUTING (CPSCOM) AND IEEE SMART DATA (SMARTDATA), P652, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData.2016.143
   Alkhanak EN, 2015, FUTURE GENER COMP SY, V50, P3, DOI 10.1016/j.future.2015.01.007
   [Anonymous], 2010, AUSTR J BASIC APPL S
   Arabnejad H, 2014, IEEE T PARALL DISTR, V25, P682, DOI 10.1109/TPDS.2013.57
   Aujla GS, 2019, IEEE ICC
   Aujla GS, 2019, IEEE T CLOUD COMPUT, V7, P1109, DOI 10.1109/TCC.2017.2715817
   Bergou A, 2003, ADASS
   Cao HT, 2020, IEEE T IND INFORM, V16, P1406, DOI 10.1109/TII.2019.2936074
   Cong PJ, 2018, IEEE T PARALL DISTR, V29, P2742, DOI 10.1109/TPDS.2018.2843343
   Duan MX, 2018, IEEE T NEUR NET LEAR, V29, P2337, DOI 10.1109/TNNLS.2017.2654357
   Graves R, 2011, PURE APPL GEOPHYS, V168, P367, DOI 10.1007/s00024-010-0161-6
   Gulati A., 2018, PROC IEEE INT C COMM, V2018, P1
   Hagras T., 2004, Proceedings. 18th International Parallel and Distributed Processing Symposium
   Hosseinzadeh M, 2011, SIMUL-T SOC MOD SIM, V87, P1067, DOI 10.1177/0037549711406911
   Jindal T, 2018, SPRINGERBR ENV SCI, P1, DOI 10.1007/978-3-319-58415-7
   Kaur K, 2022, IEEE T CLOUD COMPUT, V10, P172, DOI 10.1109/TCC.2019.2950002
   Kober J, 2013, INT J ROBOT RES, V32, P1238, DOI 10.1177/0278364913495721
   Kumar N, 2019, IEEE T IND INFORM, V15, P2947, DOI 10.1109/TII.2018.2800693
   Kumar V., 2014, INT J COMPUT APPL, V85, P35
   Laird PW, 2009, EPIGENOMICS-UK, V1, P29, DOI 10.2217/epi.09.12
   Li KQ, 2016, J PARALLEL DISTR COM, V95, P15, DOI 10.1016/j.jpdc.2016.02.006
   Liu B, 2016, INTERSPEECH, P685, DOI 10.21437/Interspeech.2016-1352
   Liu ZW, 2015, IEEE I CONF COMP VIS, P3730, DOI 10.1109/ICCV.2015.425
   Livny J, 2008, PLOS ONE, V3, DOI 10.1371/journal.pone.0003197
   MUDGILL V, 2018, IEEE GLOBE WORK, P1
   Mullainathan S, 2017, J ECON PERSPECT, V31, P87, DOI 10.1257/jep.31.2.87
   Orhean AI, 2018, J PARALLEL DISTR COM, V117, P292, DOI 10.1016/j.jpdc.2017.05.001
   Peng ZP, 2016, 2016 IEEE 3RD INTERNATIONAL CONFERENCE ON CYBER SECURITY AND CLOUD COMPUTING (CSCLOUD), P142, DOI 10.1109/CSCloud.2016.16
   Peng ZP, 2015, CLUSTER COMPUT, V18, P1595, DOI 10.1007/s10586-015-0484-2
   Roy A., 2017, ADV NEURAL INFORM PR, P3043
   Sirisha D, 2016, LECT NOTES COMPUT SC, V9581, P199, DOI 10.1007/978-3-319-28034-9_27
   Sutton R. S., 1998, Adaptive Computation and Machine Learning
   Tang Z, 2018, FUTURE GENER COMP SY, V78, P287, DOI 10.1016/j.future.2016.06.027
   Tong Z, 2014, J PARALLEL DISTR COM, V74, P2662, DOI 10.1016/j.jpdc.2014.03.007
   Topcuoglu H, 2002, IEEE T PARALL DISTR, V13, P260, DOI 10.1109/71.993206
   Wei ZC, 2017, COMPUT NETW, V126, P141, DOI 10.1016/j.comnet.2017.06.005
   Wu CQ, 2015, IEEE T CLOUD COMPUT, V3, P169, DOI 10.1109/TCC.2014.2358220
   Wu TM, 2018, J SYST ARCHITECT, V84, P12, DOI 10.1016/j.sysarc.2018.03.001
   Xiong W, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH AND SIGNAL PROCESSING (ICASSP), P5934, DOI 10.1109/ICASSP.2018.8461870
   Xu YM, 2014, INFORM SCIENCES, V270, P255, DOI 10.1016/j.ins.2014.02.122
   Yang Q, 2012, IEEE SYS MAN CYBERN, P1, DOI 10.1109/ICSMC.2012.6377667
   Zhang XQ, 2019, J SYST SOFTWARE, V147, P147, DOI 10.1016/j.jss.2018.09.084
   Zhu ZM, 2016, IEEE T PARALL DISTR, V27, P1344, DOI 10.1109/TPDS.2015.2446459
   Zuo, 2015, P INT S COMP INT INT, V575, P305, DOI [10.1007/978-981-10-0356-1, DOI 10.1007/978-981-10-0356-1]
NR 45
TC 25
Z9 25
U1 2
U2 37
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2022
VL 52
IS 3
SI SI
BP 689
EP 709
DI 10.1002/spe.2802
EA FEB 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YS2YA
UT WOS:000513228500001
DA 2024-07-18
ER

PT J
AU Wu, KD
   Ma, Y
   Huang, G
   Liu, XZ
AF Wu, Kaidong
   Ma, Yun
   Huang, Gang
   Liu, Xuanzhe
TI A first look at blockchain-based decentralized applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE decentralized applications; empirical study; Ethereum; smart contract
AB With the increasing popularity of blockchain technologies in recent years, blockchain-based decentralized applications (DApps for short in this paper) have been rapidly developed and widely adopted in many areas, being a hot topic in both academia and industry. Despite of the importance of DApps, we still have quite little understanding of DApps along with its ecosystem. To bridge the knowledge gap, this paper presents the first comprehensive empirical study of blockchain-based DApps to date, based on an extensive dataset of 995 Ethereum DApps and 29,846,075 transaction logs over them. We make a descriptive analysis of the popularity of DApps, summarize the patterns of how DApps use smart contracts to access the underlying blockchain, and explore the worth-addressing issues of deploying and operating DApps. Based on the findings, we propose some implications for DApp users to select proper DApps, for DApp developers to improve the efficiency of DApps, and for blockchain vendors to enhance the support of DApps.
C1 [Wu, Kaidong; Ma, Yun; Huang, Gang; Liu, Xuanzhe] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
C3 Peking University
RP Ma, Y (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
EM mayun@pku.edu.cn
RI Wu, Kaidong/IWU-6732-2023
OI Ma, Yun/0000-0001-7866-4075
FU National Key R&D Program of China [2018YFB1004800]; National Natural
   Science Foundation of China [61725201]; Beijing Municipal Science and
   Technology Project [Z171100005117002]
FX National Key R&D Program of China, Grant/Award Number: 2018YFB1004800;
   National Natural Science Foundation of China, Grant/Award Number:
   61725201; Beijing Municipal Science and Technology Project, Grant/Award
   Number: Z171100005117002
CR Amad M, 2015, 2015 INTERNATIONAL CONFERENCE ON PROTOCOL ENGINEERING (ICPE) AND INTERNATIONAL CONFERENCE ON NEW TECHNOLOGIES OF DISTRIBUTED SYSTEMS (NTDS)
   [Anonymous], 2019, ETHEREUM ETH BLOCKCH
   [Anonymous], 2019, IDEX DECENTRALIZED E
   [Anonymous], 2019, WHAT IS DAPP DECENTR
   [Anonymous], 2019, DAPP DEV SURVEY RESU
   [Anonymous], 2019, DAPP SURVEY RESULTS
   [Anonymous], 2019, ANDROID APPS GOOGLE
   [Anonymous], **NON-TRADITIONAL**
   Bahri L, 2018, COMPANION PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2018 (WWW 2018), P1165, DOI 10.1145/3184558.3191553
   Barger A, 2017, SYSTOR'17: PROCEEDINGS OF THE 10TH ACM INTERNATIONAL SYSTEMS AND STORAGE CONFERENCE, DOI 10.1145/3078468.3078492
   Briola D, 2019, SOFTWARE PRACT EXPER, V49, P549, DOI 10.1002/spe.2657
   Chang J, 2018, ARXIV180800624
   Chen T, 2018, IEEE INFOCOM SER, P1484, DOI 10.1109/INFOCOM.2018.8486401
   Chen T, 2017, LECT NOTES COMPUT SC, V10701, P3, DOI 10.1007/978-3-319-72359-4_1
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Chen W., 2018, P 2018 WORLD WID WEB
   Coblenz M, 2017, PROC IEEE ACM INT C, P97, DOI 10.1109/ICSE-C.2017.150
   Cooper C, 2009, P 28 ACM S PRINC DIS
   Dapp.com, 2019, 2018 DAPP MARK REP
   Friedman R, 2015, SOFTWARE PRACT EXPER, V45, P435, DOI 10.1002/spe.2226
   Gervais A., 2016, P 2016 ACMSIGSAC C C, P3
   Gilad Y, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P51, DOI 10.1145/3132747.3132757
   Grech N, 2019, PROC INT CONF SOFTW, P1176, DOI 10.1109/ICSE.2019.00120
   King Susan, 2012, LOS ANGELES TIM 1219, pD12
   Klems M, 2017, LECT NOTES COMPUT SC, V10601, P731, DOI 10.1007/978-3-319-69035-3_53
   Kosba A, 2016, P IEEE S SECUR PRIV, P839, DOI 10.1109/SP.2016.55
   Larimer D., 2014, DELEGATED PROOF OF S, V81, P85
   Lian Q., 2007, P 27 INT C DISTRIBUT, P56, DOI DOI 10.1109/ICDCS.2007.84
   Liang J, 2005, IEEE INFOCOM SER, P1174
   Liao CF, 2017, 2017 IEEE 10 C SERV
   Liu B., 2017, 2017 IEEE INT C WEB, DOI DOI 10.1109/ICWS.2017.54
   Liu CL, 2010, INT J AD HOC UBIQ CO, V6, P150, DOI 10.1504/IJAHUC.2010.034968
   Locasto ME, 2005, P 6 ANN IEEE SMC INF
   Loo BT, 2004, P 30 INT C VER LARG, V30
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P17, DOI 10.1145/2976749.2978389
   Meiklejohn S, 2013, P C INT MEAS C OCT, P127, DOI [DOI 10.1145/2504730.2504747, 10.1145/2896384, DOI 10.1145/2896384]
   Nakamoto S, 2008, BITCOIN PEER TO PEER, DOI DOI 10.1007/S10838-008-9062-0
   Nguyen HL, 2018, COMPANION PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2018 (WWW 2018), P79, DOI 10.1145/3184558.3186938
   Nurminen J. K., 2013, P IEEE C COMP COMM W, P63, DOI [10.1109/INFCOMW.2013.6970739, DOI 10.1109/INFCOMW.2013.6970739]
   Porru S, 2017, PROC IEEE ACM INT C, P169, DOI 10.1109/ICSE-C.2017.142
   Pouwelse J, 2005, LECT NOTES COMPUT SC, V3640, P205, DOI 10.1007/11558989_19
   Ron D., 2013, INT C FIN CRYPT DAT, P6, DOI [DOI 10.1007/978-3-642-39884-1_2, 10.1007/978-3-642-39884-1_2]
   Ruta M, 2017, PROCEEDINGS OF THE 15TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS (SENSYS'17), DOI 10.1145/3131672.3136974
   Saroiu S, 2002, P SOC PHOTO-OPT INS, V4673, P156
   Shae Z, 2017, INT CON DISTR COMP S, P1972, DOI 10.1109/ICDCS.2017.61
   Szabo N., 1996, Extropy Journal of Transhuman Thought
   Szabo N., 1994, SMART CONTRACTS
   Wang J., 2019, NSDI
   Xu JL, 2019, IEEE T IND INFORM, V15, P3538, DOI 10.1109/TII.2019.2896965
   Zhang F, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1427
   Zhang XW, 2005, IEEE INTERNET COMPUT, V9, P42, DOI 10.1109/MIC.2005.124
   Zheng PL, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P134, DOI 10.1145/3183519.3183546
   Zheng ZB, 2018, INT J WEB GRID SERV, V14, P352, DOI 10.1504/IJWGS.2018.095647
   Zhou Chi, 2019, ARXIV PREPRINT ARXIV
NR 54
TC 48
Z9 50
U1 5
U2 38
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2021
VL 51
IS 10
SI SI
BP 2033
EP 2050
DI 10.1002/spe.2751
EA OCT 2019
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UN1VW
UT WOS:000491702900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Urra, E
   Cubillos, C
   Cabrera-Paniagua, D
   Mellado, R
AF Urra, Enrique
   Cubillos, Claudio
   Cabrera-Paniagua, Daniel
   Mellado, Rafael
TI <i>hMod</i>: A software framework for assembling highly detailed
   heuristics algorithms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE algorithm assembling; dependency injection; heuristic algorithms;
   hyperheuristics; software framework
ID HYPER-HEURISTICS; JAVA FRAMEWORK
AB Software design and component reuse for heuristic algorithms have gained in relevance; however, further innovation is needed. In this context, hMod is presented as a software framework suited for implementing heuristic algorithms, with a focus on intensive reuse of highly cohesive operator and data components within algorithmic structures, making it possible to dynamically (re)configure and manage such a structure. Rather than a fast-prototyping tool, hMod supports heuristic implementation in the long term, whereby complexity can escalate from simple operators to major hyperheuristic architectures. In its core resides a novel object-oriented representation of algorithms through a pattern-like implementation, namely, algorithm assembling (AA). Additionally, it incorporates component integration features, such as dependency injection mechanisms. hMod has been mentioned in previous research, in which hyperheuristic methods were implemented and evaluated from an optimization perspective. In this work, a description of the framework is presented from the software design perspective, including the AA model, its architecture, and a detailed presentation of the main features of the framework. Previous hMod applications have demonstrated that it supports not only the software design requirements of heuristic algorithms but performance standards as well. Available sources of the framework can be found in http://gitlab.com/eurra/hmod.
C1 [Urra, Enrique] Univ Aysen, Dept Ciencias Nat & Tecnol, Obispo Vielmo 62, Coyhaique 5950000, Chile.
   [Cubillos, Claudio] Pontificia Univ Catolica Valparaiso, Escuela Ingn Informat, Valparaiso, Chile.
   [Cabrera-Paniagua, Daniel] Univ Valparaiso, Escuela Ingn Comercial, Vina Del Mar, Chile.
   [Mellado, Rafael] Pontificia Univ Catolica Valparaiso, Escuela Comercio, Valparaiso, Chile.
C3 Pontificia Universidad Catolica de Valparaiso; Universidad de
   Valparaiso; Pontificia Universidad Catolica de Valparaiso
RP Urra, E (corresponding author), Univ Aysen, Dept Ciencias Nat & Tecnol, Obispo Vielmo 62, Coyhaique 5950000, Chile.
EM enrique.urra@uaysen.cl
RI Mellado Silva, Rafael/R-8599-2019; Figueroa, Claudio
   Cubillos/C-2861-2012
OI Mellado Silva, Rafael/0000-0002-6143-2929; Urra,
   Enrique/0000-0003-4382-6542; Cabrera-Paniagua,
   Daniel/0000-0001-5826-287X; Cubillos, Claudio/0000-0003-3990-0658
CR Acampora G, 2016, 2016 IEEE INT C FUZZ
   Aljawawdeh HJ, 2015, GECCO COMP 15 P COMP
   Almutairi A, 2016, COMM COM INF SC, V659, P154, DOI 10.1007/978-3-319-47217-1_17
   Parejo JA, 2012, SOFT COMPUT, V16, P527, DOI 10.1007/s00500-011-0754-8
   Arcuri A, 2014, INFORM SCIENCES, V259, P412, DOI 10.1016/j.ins.2009.12.019
   Berbeglia G, 2007, TOP, V15, P1, DOI 10.1007/s11750-007-0009-0
   Brownlee AEI, 2014, GECCO COMP 14 P COMP
   Brownlee AEI, 2015, GECCO COMP 15 P COMP
   Burke EK, 2013, J OPER RES SOC, V64, P1695, DOI 10.1057/jors.2013.71
   Cabrera D, 2018, IEEE ACCESS, V6, P7610, DOI 10.1109/ACCESS.2018.2802781
   Cabrera-Paniagua D, 2015, EXPERT SYST APPL, V42, P7070, DOI 10.1016/j.eswa.2015.05.004
   Chekanin Vladislav A., 2015, Applied Mechanics and Materials, V799-800, P1149, DOI 10.4028/www.scientific.net/AMM.799-800.1149
   Cordeau JF, 2003, 4OR-Q J OPER RES, V1, P89, DOI 10.1007/s10288-002-0009-8
   De Beukelaer H, 2017, SOFTWARE PRACT EXPER, V47, P921, DOI 10.1002/spe.2459
   Derigs U, 2014, J HEURISTICS, V20, P75, DOI 10.1007/s10732-013-9232-z
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Ercan MB, 2016, ENVIRON MODELL SOFTW, V84, P112, DOI 10.1016/j.envsoft.2016.06.017
   Faris H, 2016, P 8 INT JOINT C COMP, V1
   Fowler M, 2004, INVERSION CONTROL CO
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garzon-Rodriguez LP, 2015, GECCO COMP 15 P COMP
   Goldenberg M, 2017, KNOWL-BASED SYST, V129, P1, DOI 10.1016/j.knosys.2017.05.009
   Guizzo G, 2016, 2016 5 BRAZ C INT SY
   Gyori A, 2013, ESEC FSE 2013 P 2013
   JARVI J, ACM SYMPOSIUM ON APP, V75, P762, DOI DOI 10.1016/J.SCICO.2009.04.003
   Jorgensen RM, 2007, J OPER RES SOC, V58, P1321, DOI 10.1057/palgrave.jors.2602287
   Kaplanoglu V, 2016, EXPERT SYST APPL, V45, P71, DOI 10.1016/j.eswa.2015.09.050
   Kocsis ZA, 2015, 7 INT S SEARCH BAS S
   Krawiec K, 2018, HDB RES EMERGENT APP, P1
   Li WW, 2014, COMPUT ENVIRON URBAN, V43, P1, DOI 10.1016/j.compenvurbsys.2013.10.002
   Lopez-lbanez M, 2017, TRIRIDIA2017012 U LI
   Lukasiewycz M, 2011, GECCO 11 P 13 ANN C
   Luke S, 2010, ECJ OWNERS MANUAL US
   Lundberg A, 2015, THESIS UM U DEP COMP
   Luo F, 2017, 2017 IEEE INT C COGN
   Myszkowski PB, 2018, SOFT COMPUT
   Nebro AJ, 2015, GECCO COMP 15 P COMP
   Nebro AJ, 2017, GECCO 17 P GEN EV CO
   Oracle Corporation, PROJ NASH
   Sabané A, 2017, EMPIR SOFTW ENG, V22, P2612, DOI 10.1007/s10664-016-9448-2
   Scheller T, 2015, INFORM SOFTWARE TECH, V61, P145, DOI 10.1016/j.infsof.2015.01.009
   Sorensen K., 2013, ENCY OPERATIONS RES, V62, P960, DOI [DOI 10.1007/978-1-4419-1153-7_1167, 10.1007/978-1-4419-1153-7]
   Swan J, 2015, 18 EUR C GEN PROGR E
   Swann J, 2015, 11 MET INT C MIC AG
   Urra E, 2013, 21 JORN CHIL COMP TE
   Urra E, 2016, 2016 6 INT C COMP CO
   Urra E, 2015, MATH PROBL ENG, V2015, DOI 10.1155/2015/707056
   Wagner S, 2014, T INTEL ENG INFORMAT, V6, P197, DOI 10.1007/978-3-319-01436-4_10
   White DR, 2012, GENET PROGRAM EVOL M, V13, P65, DOI 10.1007/s10710-011-9148-z
   Woodward JR, 2014, GECCO COMP 14 P COMP
   Zambrano-Vega C, 2017, LECT N BIOINFORMAT, V10209, P245, DOI 10.1007/978-3-319-56154-7_23
NR 51
TC 6
Z9 6
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2019
VL 49
IS 6
BP 971
EP 994
DI 10.1002/spe.2690
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW3GY
UT WOS:000466579600002
DA 2024-07-18
ER

PT J
AU Chang, HP
   Chiang, CP
AF Chang, Hsung-Pin
   Chiang, Cheng-Pang
TI PARC: A novel OS cache manager
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE buffer cache; cache manager; operating systems; page cache; replacement
   algorithms
ID BUFFER CACHE; REPLACEMENT ALGORITHMS; PERFORMANCE; IMPLEMENTATION
AB To boost input-output performance, operating systems employ a kernel-managed caching space called the buffer cache or page cache. Given the limited size of a buffer cache, an effective cache manager is required to decide which blocks should be evicted from the cache. Previous cache managers use historical information to make replacement decisions. However, existing approaches are unable to maximize performance since they rely on limited historical information. Motivated by the limitations of existing solutions, this paper proposes a novel manager called the Pattern-assisted Adaptive Recency Caching (PARC) manager. PARC simultaneously uses the historical information of recency, frequency, and access patterns to estimate the locality strengths of blocks and, upon a cache miss, evicts the block with the least strength. Specifically, PARC exploits the reference regularities exhibited in past input-output behaviors to actively and rapidly adapt the recency and frequency information of blocks so as to precisely distinguish blocks with long- and short-term utility. Through comprehensive simulations on a variety of traces of different access patterns, we show that PARC is robust since, except for random workloads where the performance of each cache manager is similar, PARC always outperforms existing solutions.
C1 [Chang, Hsung-Pin; Chiang, Cheng-Pang] Natl Chung Hsing Univ, Dept Comp Sci & Engn, Taichung, Taiwan.
C3 National Chung Hsing University
RP Chang, HP (corresponding author), Natl Chung Hsing Univ, Dept Comp Sci & Engn, Taichung, Taiwan.
EM hpchang@cs.nchu.edu.tw
OI Chang, Hsung-Pin/0000-0002-2680-8556
FU Ministry of Science and Technology [MOST 104-2221-E-005-003-]
FX Ministry of Science and Technology, Grant/Award Number: MOST
   104-2221-E-005-003-
CR [Anonymous], P USENIX WINT 1994 T
   Bach MJ, 1986, DESIGN UNIX OPERATIN
   Bansal S., 2004, P 3 USENIX C FIL STO
   BELADY LA, 1966, IBM SYST J, V5, P78, DOI 10.1147/sj.52.0078
   Brown AD, 2001, ACM T COMPUT SYST, V19, P111, DOI 10.1145/377769.377774
   Butt AR, 2007, IEEE T COMPUT, V56, P889, DOI 10.1109/TC.2007.1029
   Cao P, 1996, ACM T COMPUT SYST, V14, P311, DOI 10.1145/235543.235544
   Cao P, 1994, P USENIX SUMM 1994 T
   Carr RW, 1981, P 8 ACM S OP SYST PR
   Chang HP, 2015, SOFTWARE PRACT EXPER, V45, P1229, DOI 10.1002/spe.2279
   Choi J, 2002, IEEE T COMPUT, V51, P793, DOI 10.1109/TC.2002.1017699
   Choi J, 1999, P 1999 USENIX ANN TE
   Choi J, 2000, P ACM C MEAS MOD COM
   Cidon A, 2016, P 13 USENIX S NETW S
   Cooper B.F., 2010, P ACM S CLOUD COMPUT, DOI DOI 10.1145/1807128.1807152
   Ding X., 2007, Trans. Storage, V3, P5
   Ghemawat S., LevelDB
   Glass G, 1997, P ACM INT C MEAS MOD
   Gniady C, 2004, P 6 USENIX S OP SYST
   Jiang S, 2005, IEEE T COMPUT, V54, P939, DOI 10.1109/TC.2005.130
   Jiang S, 2002, P ACM INT C MEAS MOD
   Jiang S, 2005, P 4 USENIX C FIL STO
   Jiang S, 2005, P USENIX ANN TECHN C
   Kim JM, 2000, P USENIX 4 S OP SYST
   Kim YJ, 2012, J SYST ARCHITECT, V58, P86, DOI 10.1016/j.sysarc.2011.12.002
   Lee D, 2001, IEEE T COMPUT, V50, P1352, DOI 10.1109/tc.2001.970573
   Lee D, 1999, P ACM INT C MEAS MOD
   Lee E, 2014, ACM T STORAGE, V10, DOI 10.1145/2633691
   Lee PCH, 1997, SOFTWARE PRACT EXPER, V27, P547, DOI 10.1002/(SICI)1097-024X(199705)27:5<547::AID-SPE96>3.0.CO;2-E
   MATTSON RL, 1970, IBM SYST J, V9, P78, DOI 10.1147/sj.92.0078
   McDougall R., Filebench
   Megiddo N., 2003, P 2 USENIX C FIL STO
   O'Neil EJ, 1993, P ACM INT C MAN DAT
   Park J, 2009, P 7 ACM INT C EMB SO
   Patterson R. Hugo, 1995, SOSP
   Robinson JT, 1990, P ACM INT C MEAS MOD
   Shasha D, 1994, P 20 INT C VER LARG
   Smaragdakis Y, 1999, P ACM INT C MEAS MOD
   SO K, 1988, IEEE T COMPUT, V37, P700, DOI 10.1109/12.2208
   Steffen JL, 1985, P USENIX WINT 1985 T
   Tanenbaum AndrewS., 1987, OPERATING SYSTEMS DE
   Zhou F, 2005, P USENIX TECHN C AN
   Zhou Y., 2001, P USENIX ANN TECHN C
   Zhu YF, 2008, IEEE T COMPUT, V57, P25, DOI 10.1109/TC.2007.70788
NR 44
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2193
EP 2222
DI 10.1002/spe.2633
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700004
DA 2024-07-18
ER

PT J
AU Krüger, J
   Pinnecke, M
   Kenner, A
   Kruczek, C
   Benduhn, F
   Leich, T
   Saake, G
AF Krueger, Jacob
   Pinnecke, Marcus
   Kenner, Andy
   Kruczek, Christopher
   Benduhn, Fabian
   Leich, Thomas
   Saake, Gunter
TI Composing annotations without regret? Practical experiences using
   FeatureC
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE annotation; composition; integration; migration; refactoring; software
   product line
ID SOFTWARE; VARIABILITY
AB Software product lines enable developers to derive similar products from a common code base. Existing implementation techniques can be categorized as composition-based and annotation-based approaches, with both approaches promising complementary benefits. However, annotation-based approaches are commonly used in practice despite composition allowing physical separation of features and, thus, improving traceability and maintenance. A main hindrance to migrate annotated systems toward a composition-based product line is the challenging and time-consuming transformation task. For a company, it is difficult to predict the corresponding costs, and a successful outcome is uncertain. To overcome such problems, a solution proposed by the previous work is to use a hybrid approach, utilizing composition and annotation simultaneously. Based on this idea, we introduce a stepwise migration process from annotation-based toward composition-based approaches to lower the adoption barrier of composition. This process itself is independent of used implementation techniques and enables developers to incrementally migrate toward composition. We support our approach with detailed examples by partially migrating a real-world system. In detail, we describe the following: (1) our migration process, (2) its application on a real-world system, and (3) discuss practical challenges we face. We implemented the proposed approach and show that appropriate tool support helps to migrate toward composition-based product lines. Based on the case study, we show that the hybrid product lines work correctly and can compete with the performance of the original annotated system. However, the results also illustrate open issues that have to be solved to apply such migrations in practice.
C1 [Krueger, Jacob; Pinnecke, Marcus; Benduhn, Fabian; Saake, Gunter] Otto von Guericke Univ, Magdeburg, Germany.
   [Krueger, Jacob; Leich, Thomas] Harz Univ Appl Sci, Wernigerode, Germany.
   [Kenner, Andy; Kruczek, Christopher; Leich, Thomas] METOP GmbH, Magdeburg, Germany.
C3 Otto von Guericke University
RP Krüger, J (corresponding author), Otto von Guericke Univ, Fac Comp Sci, Univ Pl 2, D-39106 Magdeburg, Germany.
EM jkrueger@ovgu.de
OI Kruger, Jacob/0000-0002-0283-248X
FU DFG [LE 3382/2-1, SA 465/49-1]; BMBF [01IS14017A, 01IS14017B];
   Volkswagen Financial Services AG
FX DFG, Grant/Award Number: LE 3382/2-1 and SA 465/49-1; BMBF, Grant/Award
   Number: 01IS14017A and 01IS14017B; Volkswagen Financial Services AG
CR Adams B, 2009, INT C ASP OR SOFTW D
   Al-Hajjaji M, 2014, INT SYST SOFTW PROD
   Alves V, 2006, WORKSH ASP OR PROD L
   [Anonymous], 2013, P 12 INT C GEN PROGR
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S., 2013, IEEE Transactions on Software Engineering, V39, P63, DOI 10.1109/TSE.2011.120
   Apel S, 2009, INT C SOFTW ENG VANC
   Apel S, 2005, INT C GEN PROGR COMP
   Apel S, 2008, IEEE T SOFTWARE ENG, V34, P162, DOI 10.1109/TSE.2007.70770
   AssuncAo WKG, 2014, INT SYST SOFTW PROD
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Behringer B, 2016, S APPL COMP PIS IT S
   Behringer B, 2014, INT S FDN SOFTW ENG
   Benduhn F, 2016, INT C ADV TRENDS SOF
   Berger T, 2013, INT WORKSH VAR MOD S
   Beuche D, 2012, INT SYST SOFTW PROD
   Biggerstaff TJ, 1993, INT C SOFTW ENG BALT
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Clements P, 2002, IEEE SOFTWARE, V19, P28, DOI 10.1109/MS.2002.1020283
   Czarnecki K, 2012, INT WORKSH VAR MOD S
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Fenske W, 2015, INT WORKSH VAR MOD S
   Fenske W, 2015, INT WORK C SOURC COD
   Fenske W, 2014, INT WORKSH VAR MOD S
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gacek C, 2001, S SOFTW REUS PUTT SO
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Hunsen C, 2016, EMPIR SOFTW ENG, V21, P449, DOI 10.1007/s10664-015-9360-1
   Jarzabek S, 2003, INT C SOFTW ENG PORT
   Kästner C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P223, DOI 10.1109/SPLINE.2007.12
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kästner C, 2009, J OBJECT TECHNOL, V8, P59
   Kastner C, 2008, GPCE WORKSH MOD COMP
   Kastner C, 2011, TECHNICAL REPORT
   Kastner C, 2009, INT C SOFTW ENG VANC
   Kastner C, 2009, INT C GEN PROGR COMP
   Kastner C, 2008, INT C SOFTW ENG LEIP
   Kastner C, 2007, INT SYST SOFTW PROD
   Kenner A, 2010, INT WORKSH FEAT OR S
   Kernighan B.W., 1988, The C Programming Language
   Kiczales G, 1997, EUR C OBJ OR PROGR J
   Krueger CW, 2007, ACM SIGPLAN C OBJ OR
   Kruger J, 2017, INT C SOFTW ENG COMP
   Kruger J., 2016, INT SYST SOFTW PROD
   Kruger J, 2016, INT WORKSH FEAT OR S
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Le D, 2011, S VIS LANG HUM CENTR
   Lee J, 2006, COMMUN ACM, V49, P55, DOI 10.1145/1183236.1183266
   Leich T, 2005, OOPSLA WORKSH ECL TE
   Liebig J, 2010, INT C SOFTW ENG CAP
   Liebig J, 2011, INT C ASP OR SOFTW D
   Liebig J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P380, DOI 10.1109/ICSE.2015.57
   Lonchamp J, 1993, INT C SOFTW PROC BER
   Lopez-Herrejon RE, 2011, INT SYST SOFTW PROD
   Mantyla M., 2003, THESIS
   Medeiros F, 2015, EUR C OBJ OR PROGR D
   Meinicke J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P629, DOI 10.1145/2889160.2889175
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mohabbati B, 2013, INFORM SOFTWARE TECH, V55, P1845, DOI 10.1016/j.infsof.2013.05.006
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy GC, 2001, INT C SOFTW ENG TOR
   Nadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P140, DOI 10.1145/2568225.2568283
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pawlak R, 2005, WORKSH ASP OR MIDDL
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Prehofer C, 1997, EUR C OBJ OR PROGR J
   Reynolds A, 2008, AOSD WORKSH ASP COMP
   Rosenmüller M, 2009, DATA KNOWL ENG, V68, P1493, DOI 10.1016/j.datak.2009.07.013
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Schaefer I., 2012, International Journal on Software Tools for Technology Transfer (STTT), V14, P477, DOI [DOI 10.1007/S10009-012-0253-Y, 10.1007/s10009-012-0253-y]
   Schaefer I, 2010, INT SYST SOFTW PROD
   Schobbens PY, 2006, INT C REQ ENG MINN S
   Strnia R, 2007, C OBJ OR PROGR SYST
   Tesanovic A, 2004, INT DAT ENG APPL S C
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Thum T., 2015, THESIS
   Thum T, 2013, WORKSH MECH SPECIALI
   Walkingshaw E, 2013, ACM SIGPLAN NOTICES, V48, P132, DOI 10.1145/2480361.2371421
   Yu DJ, 2015, ASIA PAC SOFWR ENG, P277, DOI 10.1109/APSEC.2015.22
   Yu DJ, 2012, ASIA PAC SOFWR ENG, P27, DOI 10.1109/APSEC.2012.135
NR 89
TC 11
Z9 11
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 402
EP 427
DI 10.1002/spe.2525
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300002
DA 2024-07-18
ER

PT J
AU Zhu, Y
   Huang, ZQ
   Zhou, H
AF Zhu, Yi
   Huang, Zhiqiu
   Zhou, Hang
TI Modeling and verification of Web services composition based on model
   transformation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE formal verification; model transformation; Web services composition;
   BPEL; CSP
AB With the rapid development of Cloud computing, social computing, and Web of Things, an increasing number of requirements of complexity and reliability for modeling Web services composition have emerged too. As more reliable methods are needed to model and verify current complex Web services composition, this paper proposes a method to model and verify Web services composition based on model transformation. First, a modeling and verifying framework based on model transformation is established. Then, Communicating Sequential Process (CSP) is defined according to the features of Web services composition and the corresponding model checking tool Failure Divergence Refinement (FDR) is introduced. The transformation approaches between Business Process Execution Language (BPEL) and CSP are later defined in detail. Lastly, the effect of this method is evaluated by modeling and verifying the Web services composition of a Online Shopping System. The results of the experiments show that this method can greatly increase the reliability of Web services composition. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Zhu, Yi] Jiangsu Normal Univ, Sch Comp Sci & Technol, 101 Shanghai Rd, Xuzhou 221116, Jiangsu, Peoples R China.
   [Zhu, Yi; Huang, Zhiqiu; Zhou, Hang] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
   [Zhu, Yi] Boston Univ, Dept Comp Sci, 111 Cummington St, Boston, MA 02215 USA.
C3 Jiangsu Normal University; Nanjing University of Aeronautics &
   Astronautics; Boston University
RP Zhu, Y (corresponding author), Jiangsu Normal Univ, Sch Comp Sci & Technol, 101 Shanghai Rd, Xuzhou 221116, Jiangsu, Peoples R China.
EM zhuy@jsnu.edu.cn
FU National Natural Science Foundation of China [61262002]; Postdoctoral
   Science Foundation of Jiangsu Province [1501055B]; Jiangsu Government
   Scholarship for Overseas Studies [JS-2014-161]
FX This research is supported by the National Natural Science Foundation of
   China under Grant No. 61262002, the Postdoctoral Science Foundation of
   Jiangsu Province under Grant No. 1501055B, and the Jiangsu Government
   Scholarship for Overseas Studies (JS-2014-161)
CR ATLAS Team, 2016, ATLAS TRANSF LANG AT
   Cambronero ME, 2012, SIMUL-T SOC MOD SIM, V88, P349, DOI 10.1177/0037549710372098
   Cambronero ME, 2011, J LOGIC ALGEBR PROGR, V80, P25, DOI 10.1016/j.jlap.2010.02.001
   Ferrara A., 2004, Proceedings of the 2nd International Conference on Service-Oriented Computing, ICSOC '04, P242
   Fu X, 2005, IEEE T SOFTWARE ENG, V31, P1042, DOI 10.1109/TSE.2005.141
   Fu X., 2004, P 13 INT C WORLD WID, P621
   [何炎祥 He Yanxiang], 2013, [计算机学报, Chinese Journal of Computers], V36, P1953
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Huiqun Zhao, 2012, 2012 IEEE/ACIS 11th International Conference on Computer and Information Science (ICIS), P631, DOI 10.1109/ICIS.2012.92
   Li XT, 2011, IEEE T SYST MAN CY A, V41, P510, DOI 10.1109/TSMCA.2010.2093884
   Lomuscio A, 2012, AUTON AGENT MULTI-AG, V24, P345, DOI 10.1007/s10458-010-9152-3
   Mei J., 2010, INT J DIGIT CONTENT, V4, P23
   Ouyang C, 2007, SCI COMPUT PROGRAM, V67, P162, DOI 10.1016/j.scico.2007.03.002
   Roscoe A.W., 2005, THEORY PRACTICE CONC
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sheng QZ, 2014, INFORM SCIENCES, V280, P218, DOI 10.1016/j.ins.2014.04.054
   Tan W, 2009, IEEE T AUTOM SCI ENG, V6, P94, DOI 10.1109/TASE.2008.916747
   Wu H, 2013, J COMPUTER, V38, P204
   Xiao FX, 2011, INT J WEB SERV RES, V8, P47, DOI 10.4018/jwsr.2011100103
NR 19
TC 12
Z9 12
U1 0
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2017
VL 47
IS 5
BP 709
EP 730
DI 10.1002/spe.2434
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ER1SO
UT WOS:000398573700004
DA 2024-07-18
ER

PT J
AU Nitu, V
   Teabe, B
   Fopa, L
   Tchana, A
   Hagimont, D
AF Nitu, Vlad
   Teabe, Boris
   Fopa, Leon
   Tchana, Alain
   Hagimont, Daniel
TI StopGap: elastic VMs to enhance server consolidation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; cooperation; resource management
AB Virtualized cloud infrastructures (also known as IaaS platforms) generally rely on a server consolidation system to pack virtual machines (VMs) on as few servers as possible. However, an important limitation of consolidation is not addressed by such systems. Because the managed VMs may be of various sizes (small, medium, large, etc.), VM packing may be obstructed when VMs do not fit available spaces. This phenomenon leaves servers with a set of unused resources ('holes'). It is similar to memory fragmentation, a well-known problem in operating system domain. In this paper, we propose a solution which consists in resizing VMs so that they can fit with holes. This operation leads to the management of what we call elastic VMs and requires cooperation between the application level and the IaaS level, because it impacts management at both levels. To this end, we propose a new resource negotiation and allocation model in the IaaS, called HRNM. We demonstrate HRNM's applicability through the implementation of a prototype compatible with two main IaaS managers (OpenStack and OpenNebula). By performing thorough experiments with SPECvirt_sc2010 (a reference benchmark for server consolidation), we show that the impact of HRNM on customer's application is negligible. Finally, using Google data center traces, we show an improvement of about 62.5% for the traditional consolidation engines. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Nitu, Vlad; Teabe, Boris; Fopa, Leon; Tchana, Alain; Hagimont, Daniel] IRIT ENSEEIHT, Toulouse, France.
C3 Universite de Toulouse; Universite Toulouse III - Paul Sabatier;
   Universite Federale Toulouse Midi-Pyrenees (ComUE); Institut National
   Polytechnique de Toulouse
RP Nitu, V (corresponding author), IRIT ENSEEIHT, Toulouse, France.
EM vlad.nitu@enseeiht.fr
CR AbdelSalam H, 2009, LECT NOTES COMPUT SC, V5637, P161, DOI 10.1007/978-3-642-02627-0_13
   AMIT NADAV, 2014, ASPLOS
   [Anonymous], ISCA KEYNOTE
   [Anonymous], P USENIX C ANN TECH
   AWS, EL COMP CLOUD EC2 CL
   Barroso LA, 2007, COMPUTER, V40, P33, DOI 10.1109/MC.2007.443
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Bobroff N, 2007, 2007 10TH IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2009), VOLS 1 AND 2, P119, DOI 10.1109/INM.2007.374776
   Chaisiri S, 2008, APSCC, P103
   Clark C, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI '05), P273
   Delimitrou C, 2014, ACM SIGPLAN NOTICES, V49, P127, DOI 10.1145/2541940.2541941
   Dósa G, 2007, LECT NOTES COMPUT SC, V4614, P1
   Farahnakian F, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P381, DOI 10.1109/CLOUD.2015.58
   Feller E., 2012, Proceedings of the 2012 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2012), P482, DOI 10.1109/CCGrid.2012.71
   Guo ZH, 2011, IEEE INT C CL COMP, P335, DOI 10.1109/CLUSTER.2011.44
   Hamilton J., 2009, CIDR
   Jayasinghe D., 2011, 2011 Proceedings of IEEE International Conference on Services Computing (SCC 2011), P72, DOI 10.1109/SCC.2011.28
   Konstanteli K., 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P41, DOI 10.1109/CLOUD.2012.63
   Liu L, 2009, 6TH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATION, ICAC-INDUST'09, P29
   Meisner D, 2011, ACM T COMPUT SYST, V29, DOI 10.1145/1925109.1925112
   Murtazaev A, 2011, IETE TECH REV, V28, P212, DOI 10.4103/0256-4602.81230
   Nakada H, 2009, LECT NOTES COMPUT SC, V5518, P651, DOI 10.1007/978-3-642-02481-8_96
   Quiroz Andres, 2009, Proceedings of the 2009 10th IEEE/ACM International Conference on Grid Computing (GRID), P50, DOI 10.1109/GRID.2009.5353066
   Rajagopalan S., 2013, 10 USENIX S NETW SYS, P227
   Salomie Tudor-Ioan., 2013, Proceedings of the 8th ACM European Conference on Computer Systems, EuroSys '13, P337, DOI DOI 10.1145/2465351.2465384
   Sharma Prateek., 2012, P 21 INT S HIGH PERF, P15
   Van HN, 2009, CLOUD: 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING CHALLENGES OF CLOUD COMPUTING, P1, DOI 10.1109/CLOUD.2009.5071526
NR 27
TC 4
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1501
EP 1519
DI 10.1002/spe.2482
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Petkovich, JC
   Oliveira, A
   Zhang, Y
   Reidemeister, T
   Fischmeister, S
AF Petkovich, J. C.
   Oliveira, A.
   Zhang, Y.
   Reidemeister, T.
   Fischmeister, S.
TI DataMill: a distributed heterogeneous infrastructure forrobust
   experimentation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE DataMill; performance; experimentation; infrastructure; robustness;
   repeatability
ID COMPUTER-SCIENCE
AB Empirical systems research is facing a dilemma. Minor aspects of an experimental setup can have a significant impact on its associated performance measurements and potentially invalidate conclusions drawn from them. Examples of such influences, often called hidden factors, include binary link order, process environment size, compiler generated randomized symbol names, or group scheduler assignments. The growth in complexity and size of modern systems will further aggravate this dilemma, especially with the given time pressure of producing results. How can one trust any reported empirical analysis of a new idea or concept in computer science? DataMill is a community-based services-oriented open benchmarking infrastructure for rigorous performance evaluation. DataMill facilitates producing robust, reliable, and reproducible results. The infrastructure incorporates the latest results on hidden factors and automates the variation of these factors. DataMill is also of interest for research on performance evaluation. The infrastructure supports quantifying the effect of hidden factors, disseminating the research results beyond mere reporting. It provides a platform for investigating interactions and composition of hidden factors. This paper discusses experience earned through creating and using an open benchmarking infrastructure. Multiple research groups participate and have used DataMill. Furthermore, DataMill has been used for a performance competition at the International Conference on Runtime Verification (RV) 2014 and is currently hosting the RV 2015 competition. This paper includes a summary of our experience hosting the first RV competition. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Petkovich, J. C.; Oliveira, A.; Zhang, Y.; Reidemeister, T.; Fischmeister, S.] Univ Waterloo, Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Petkovich, JC (corresponding author), Univ Waterloo, Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
EM j2petkov@uwaterloo.ca
CR [Anonymous], 2012, 412 U KENT
   [Anonymous], SPEC CPU2006
   [Anonymous], P 2009 C HOT TOP CLO
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 2014, DESIGN EXPT ENG SCI
   [Anonymous], 2012, HAD
   Augusto Oliveira, 2015, THESIS
   Bergmans W., 2012, MAXIMUM COMPRESSION
   Bonakdarpour B, 2013, FORM METHOD SYST DES, V43, P29, DOI 10.1007/s10703-012-0182-0
   Bouqata B, 2003, P 6 INT WORKSH HIGH
   Curtsinger C., 2012, STABILIZER ENABLING
   Curtsinger C, 2013, ACM SIGPLAN NOTICES, V48, P219, DOI 10.1145/2499368.2451141
   de Oliveira AB, 2014, INT WORKSH REPR RES, P23
   de Oliveira AugustoBorn., 2013, Proceedings of the 4th ACM/SPEC International Conference on Performance Engineering, ICPE'13, P137
   Denning PJ, 2005, COMMUN ACM, V48, P27, DOI 10.1145/1053291.1053309
   DENNING PJ, 1981, COMMUN ACM, V24, P725, DOI 10.1145/358790.358791
   DENNING PJ, 1980, COMMUN ACM, V23, P543, DOI 10.1145/359015.359016
   DENNING PJ, 1989, COMMUN ACM, V32, P9, DOI 10.1145/63238.63239
   Desprez F, 2012, TECHNICAL REPORT
   distcc, DISTCC FAST FREE DIS
   Evaluate Collaboratory, 2015, EV COLL TECHN REP
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Harji Ashif S., 2011, APSYS, P1
   Huang M., 2006, Operating Systems Review, V40, P89, DOI 10.1145/1113361.1113376
   Jaffe E, 2007, USENIX ASSOCIATION PROCEEDING OF THE 21ST LARGE INSTALLATION SYSTEMS ADMINISTRATION CONFERENCE, P203
   Julian S., BZIP2 LIBBZIP2 JULIA
   Kalibera T, 2006, LECT NOTES COMPUT SC, V4054, P63
   Kalibera T, 2013, ACM SIGPLAN NOTICES, V48, P63, DOI 10.1145/2555670.2464160
   Kalibera T, 2011, ACM SIGPLAN NOTICES, V46, P89, DOI 10.1145/2076022.1993492
   Kemp S., 2014, OPTIMIZING SERVERS T
   Linaro L., WRITING LAVA TEST DE
   Linaro L., 2014, WELCOME TO LAVA
   Linaro L., DEPLOYING KVM X86 64
   Montgomery D., 2013, DESIGN ANAL EXPT, V8
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Park K., CODEPLOY SCALABLE DE
   Payer Mathias, 2013, P 2 ACM SIGPLAN PROG, P1
   Peterson L., 2006, Operating Systems Review, V40, P11, DOI 10.1145/1113361.1113367
   Peterson L, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P351
   Peterson L, 2007, COMMUN ACM, V50, P38, DOI 10.1145/1297797.1297820
   Sterling Thomas., 2001, Beowulf Cluster Computing with Windows, V1, P307
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Vince W., 2012, PERF EVENT OVERHEAD
   Vitek J., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P33
   Watterson C, 2007, IET SOFTW, V1, P172, DOI 10.1049/iet-sen:20060076
   Yasugi Masahiro, 2013, P WORKSH PROGR ANAL, P41, DOI [10.1145/2462029.2462035, DOI 10.1145/2462029.2462035]
NR 47
TC 4
Z9 4
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2016
VL 46
IS 10
BP 1411
EP 1440
DI 10.1002/spe.2382
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW4PG
UT WOS:000383624900007
DA 2024-07-18
ER

PT J
AU Di Martino, B
   Esposito, A
AF Di Martino, Beniamino
   Esposito, Antonio
TI A rule-based procedure for automatic recognition of design patterns in
   UML diagrams
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design pattern; first-order logic; Prolog; UML; OWL; OWL-S; pattern
   recognition
ID PROGRAMS; LANGUAGE; LEVEL; WEB
AB In the present work, we describe a procedure and a prototype implementation for the automatic recognition of design patterns from documentation of software artefacts design and implementation, provided in a machine readable form, namely, the XML Metadata Interchange (XMI) coded representation of UML class diagrams. The procedure exploits a semantic representation of the patterns to be recognized, based on an existing Web Ontology Language (OWL), known as object design ontology layer (ODOL), defined by the University of Massey (New Zealand), which has been augmented with an OWL-S based representation of the patterns' dynamic behaviour. Both the UML set of diagrams related to the analysed software artefacts and the ODOL+OWL-S patterns representation are automatically scanned and translated into a first-order logic representation (namely Prolog). A set of first-order logic rules, independent from the specific pattern to be recognized, has been defined to describe the heuristics and features which trigger the recognition, exploiting the Prolog description of the patterns to be recognized and the base of Prolog facts, which represents the UML documentation. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Di Martino, Beniamino; Esposito, Antonio] Univ Naples 2, Dept Ind & Informat Engn, Real Casa Annunziata Via Roma 29, I-81031 Aversa, CE, Italy.
C3 Universita della Campania Vanvitelli
RP Di Martino, B (corresponding author), Univ Naples 2, Dept Ind & Informat Engn, Real Casa Annunziata Via Roma 29, I-81031 Aversa, CE, Italy.
EM beniamino.dimartino@unina.it
RI Esposito, Antonio/AHC-3301-2022; Di Martino, Beniamino/O-6876-2015
OI Esposito, Antonio/0000-0002-2004-4815; 
CR Agerbo E, 1998, ACM SIGPLAN NOTICES, V33, P134, DOI 10.1145/286942.286952
   Alhusain S, 2013, 2013 13TH UK WORKSHOP ON COMPUTATIONAL INTELLIGENCE (UKCI), P244, DOI 10.1109/UKCI.2013.6651312
   Alves A., 2007, WEB SERVICES BUSINES, V11
   [Anonymous], 2010, S USABLE PRIVACY SEC
   [Anonymous], 2015, CLOUD PORTABILITY IN
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   AVERSA R, 2013, P 10 INT C UB INT CO, P527, DOI DOI 10.1109/UIC-ATC.2013.52
   Ballis D, 2008, ELECTRON NOTES THEOR, V219, P51, DOI 10.1016/j.entcs.2008.10.034
   Bergenti F, 2000, 12 INT C SOFTW ENG K, P336
   Beyer D, 2003, PROG COMPREHEN, P294
   Cretella G, 2015, SOFTWARE PRACT EXPER, V45, P1619, DOI 10.1002/spe.2304
   Dastjerdi AV, 2012, SOFTWARE PRACT EXPER, V42, P501, DOI 10.1002/spe.1104
   Dietrich J., 2009, Software Applications: Concepts, Methodologies, Tools, and Applications, P528, DOI DOI 10.4018/978-1-60566-060-8.CH036
   Dietrich J, 2007, J WEB SEMANT, V5, P108, DOI 10.1016/j.websem.2006.11.007
   Edwin N.M., 2014, J SOFTW ENG APPL, V7, P670
   Emeakaroha VC, 2012, FUTURE GENER COMP SY, V28, P1017, DOI 10.1016/j.future.2011.08.018
   Fontana FA, 2011, INFORM SCIENCES, V181, P1306, DOI 10.1016/j.ins.2010.12.002
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GUITART J, 2009, MARKET ORIENTED GRID, V75, P261
   Kaczor O, 2006, P 10 EUR C SOFTW MAI
   Khwaja S, 2013, SOFTWARE PRACT EXPER, V43, P747, DOI 10.1002/spe.1122
   Kim DK, 2015, SOFTWARE PRACT EXPER, V45, P473, DOI 10.1002/spe.2238
   Kirasic D, 2008, LECT NOTES ARTIF INT, V5177, P384, DOI 10.1007/978-3-540-85563-7_50
   Lavender R.G., 1996, PATTERN LANGUAGES PR, P483
   Mark B., OWL S SEMANTIC MARKU
   MATTSON T. G., 2004, Patterns for parallel programming
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   Paydar S, 2012, P 2 INT ECONFERENCE, P289
   Riehle D., 2000, FRAMEWORK DESIGN ROL, P138
   Samuel K, 2008, THEOR PRACT LOG PROG, V8, P301, DOI 10.1017/S1471068407003249
   Shi N, 2005, PATTERNS HIGH PERFOR, P1
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   Taibi T., 2003, Journal of Object Technology, V2, P127
   Taibi T., 2007, IGI GLOBAL, P1, DOI [10.4018/978-1-59904-219-0, DOI 10.4018/978-1-59904-219-0]
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Vassiliadis V, 2015, THEA WEB ONTOLOGY LA
   Vu D. H., 2010, SPECIFYING OBJECT OR
   Weidenbach C., 2002, Automated Deduction - CADE-18. 18th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.2392), P275
   Wust J., 2005, Sdmetrics: The software design metrics tool for uml
   Yu K, 2010, USING OWL S FORMALIZ
   Yu W, 2010, WILEY ENCY OPERATION
   Zhu H, 2009, P INT COMP SOFTW APP, P228, DOI 10.1109/COMPSAC.2009.37
   [No title captured]
NR 44
TC 17
Z9 18
U1 0
U2 11
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2016
VL 46
IS 7
BP 983
EP 1007
DI 10.1002/spe.2336
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN7OL
UT WOS:000377266200005
DA 2024-07-18
ER

PT J
AU Park, SH
   Kim, SM
   Ha, YG
AF Park, Seong-hun
   Kim, Sung-min
   Ha, Young-guk
TI Scalable visualization for DBpedia ontology analysis using Hadoop
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ontology visualization; big data visualization; scalable visualization;
   Hadoop; DBpedia visualization; DBpedia ontology
AB As ontologies are becoming larger and more diverse, ontological analysis and visualization of results have become more challenging, rendering the need for more computing resources. To address this issue, we suggest a system based on Hadoop for ontological analysis for large ontologies. Our suggested system consists of three parts: a data server to analyze ontological data, a visualization server to visualize the result of data analysis, and user applications to provide users with the visualized data. Server applications are implemented based on the Hadoop framework, and the ontological data are processed efficiently using the MapReduce algorithm. We performed ontological analysis using the DBpedia ontology and visualized the result. The goal of the visualization process is to determine the major properties of each class, and visualization is conducted on the Web in order to provide users with a cross-platform environment. We evaluate the performance of the method by measuring execution times and analyzing experimental results obtained in the visualization process. The system we present is scalable for big ontological data. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Park, Seong-hun; Kim, Sung-min; Ha, Young-guk] Konkuk Univ, Dept Comp Sci & Engn, Seoul, South Korea.
C3 Konkuk University
RP Ha, YG (corresponding author), Konkuk Univ, Dept Comp Sci & Engn, Seoul, South Korea.
EM ygha@konkuk.ac.kr
FU National Research Foundation of Korea (NRF) - Ministry of Education,
   Science and Technology [2012006817]
FX This research was supported by the Basic Science Research Program of the
   National Research Foundation of Korea (NRF) funded by the Ministry of
   Education, Science and Technology (grant no. 2012006817).
CR Ali M, 2013, ADV INTELL SYST, V177, P385
   [Anonymous], ETFA2011
   Byambajav B, 2012, 12 IEEE INT C DAT MI, P260
   Du JH, 2012, LECT NOTES ARTIF INT, V7390, P633, DOI 10.1007/978-3-642-31576-3_80
   Husain M, 2013, 29 IEEE INT C DAT EN, P565
   Lama M., 2011, 2011 11th IEEE International Conference on Advanced Learning Technologies (ICALT 2011), P460, DOI 10.1109/ICALT.2011.143
   Mika P, IEEE INTELLIGENT SYS, V23, P82
   Ochs C, 2011, IEEE INT C SEMANT CO, P320, DOI 10.1109/ICSC.2011.50
   Papantoniou A., 2011, Proceedings of the 2011 15th Panhellenic Conference on Informatics (PCI 2011), P240, DOI 10.1109/PCI.2011.32
   Park SH, 2013, 2013 SEVENTH INTERNATIONAL CONFERENCE ON INNOVATIVE MOBILE AND INTERNET SERVICES IN UBIQUITOUS COMPUTING (IMIS 2013), P228, DOI 10.1109/IMIS.2013.46
   Tanimura Y, 2010, I C DATA ENGIN WORKS, P251, DOI 10.1109/ICDEW.2010.5452704
   Wlodarczyk Tomasz Wiktor, 2011, Proceedings 2011 25th IEEE International Conference on Advanced Information Networking and Applications Workshops (WAINA 2011), P507, DOI 10.1109/WAINA.2011.130
   Zhu Xin Zhu Xin, 2011, China Vegetables, P1
NR 13
TC 0
Z9 0
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2015
VL 45
IS 8
SI SI
BP 1103
EP 1114
DI 10.1002/spe.2310
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM6JB
UT WOS:000357793500006
DA 2024-07-18
ER

PT J
AU Mohamed, N
   Al-Jaroodi, J
AF Mohamed, Nader
   Al-Jaroodi, Jameela
TI MidCloud: an agent-based middleware for effective utilization of
   replicated Cloud services
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cloud computing; middleware; agents; Internet; fault tolerance; load
   balancing
ID MATRIX-MULTIPLICATION; PARALLEL
AB The Cloud relies heavily on resource replication to support the demands of the clients efficiently. Replicated Cloud services are distributed across large geographic areas and are accessible via the Internet. This paper describes MidCloud; an agent-based middleware that provides Cloud clients with dynamic load balancing and fault tolerance mechanisms for effective utilization of replicated Cloud services and resources. MidCloud can be used to connect clients with multiple replicated Cloud services and provide fast and reliable service delivery from multiple replicas. Several approaches for load balancing and fault tolerance in distributed systems were introduced; however, they require prior knowledge of the environment's operating conditions and/or constant monitoring of these conditions at run time that allows the applications to adjust the load and redistribute the tasks when operational conditions change and when failures occur. These techniques work well when there is no high communication delay. Yet, this is not true in the Cloud, where data storage and computation servers are scattered all over the world and communication delays are usually very high. MidCloud deploys approaches to reduce the negative impact of high and dynamic delays on the Cloud servers and the Internet. The experimental results show the positive effects of using MidCloud to provide efficient load balancing and fault tolerance. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Mohamed, Nader] UAEU, Coll Informat Technol, POB 15551, Al Ain, U Arab Emirates.
   [Al-Jaroodi, Jameela] Univ Pittsburgh, Pittsburgh, PA USA.
C3 United Arab Emirates University; Pennsylvania Commonwealth System of
   Higher Education (PCSHE); University of Pittsburgh
RP Mohamed, N (corresponding author), UAEU, Coll Informat Technol, POB 15551, Al Ain, U Arab Emirates.
EM nader.m@uaeu.ac.ae
RI Al-Jaroodi, Jameela/AAY-6477-2020
OI Al-Jaroodi, Jameela/0000-0003-1376-0052
CR AGARWAL RC, 1994, IBM J RES DEV, V38, P673, DOI 10.1147/rd.386.0673
   Al-Jaroodi J, 2003, IEEE T PARALL DISTR, V14, P1100, DOI 10.1109/TPDS.2003.1247671
   Al-Jaroodi J, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, PROCEEDINGS, P19, DOI 10.1109/CLUSTR.2002.1137724
   Al-Jaroodi J, 2012, CONCURR COMP-PRACT E, V24, P1919, DOI 10.1002/cpe.2817
   Al-Jaroodi J, 2012, J NETW COMPUT APPL, V35, P211, DOI 10.1016/j.jnca.2011.07.013
   Alonso P, 2010, EUROMICRO WORKSHOP P, P263, DOI 10.1109/PDP.2010.52
   [Anonymous], P 24 ACM SIGPLAN C C
   [Anonymous], 1994, Introduction to parallel computing: design and analysis of algorithms
   [Anonymous], 2009, TECHNICAL REPORT NO
   Beaumont O, 2001, IEEE T PARALL DISTR, V12, P1033, DOI 10.1109/71.963416
   Blackford L S, 1997, SCALAPACK USERS GUID
   Bridgwater A, 2012, CLOUD MIDDLEWARE GOO
   de Oliveira D., 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P378, DOI 10.1109/CLOUD.2010.64
   Drozdowicz M, 2008, AIP CONF PROC, V1067, P527, DOI 10.1063/1.3030827
   Ekanayake J, 2010, P IEEE 2 INT C CLOUD, P383
   Essaaidi M., 2012, Software Agents, Agent Systems and Their Applications
   Evangelinos C., 2008, CCA, P22
   Ferrari L, 2012, SOFTWARE PRACT EXPER, V42, P707, DOI 10.1002/spe.1091
   FOX GC, 1987, PARALLEL COMPUT, V4, P17, DOI 10.1016/0167-8191(87)90060-3
   Ganzha M, 2009, SCALABLE COMPUT-PRAC, V10, P397
   Gardner D, 2010, WSO2 TAILORS OPEN SO
   Goldman A, 2009, CLOUD MIDDLEWARE MOV
   Grance T., 2011, NIST SPECIAL PUBLICA, V800-144
   Hanna EM, 2012, P 12 IEEE ACM INT S
   Huang TC, 2012, J NETW COMPUT APPL, V35, P423, DOI 10.1016/j.jnca.2011.09.006
   Jhawar R., 2012, Systems Conference (SysCon), 2012 IEEE International, P1
   Khajeh-Hosseini A, 2012, SOFTWARE PRACT EXPER, V42, P447, DOI 10.1002/spe.1072
   Lagar-Cavilla H A, 2009, P 4 CM EUR C COMP SY
   Lombardi F, 2011, J NETW COMPUT APPL, V34, P1113, DOI 10.1016/j.jnca.2010.06.008
   Moretti Christopher, 2008, 2008 IEEE International Parallel & Distributed Processing Symposium, P1, DOI 10.1109/IPDPS.2008.4536311
   Qian Zhang, 2010, Proceedings of the Fifth ChinaGrid Annual Conference (ChinaGrid 2010), P240, DOI 10.1109/ChinaGrid.2010.20
   Ranabahu A., 2009, Best Practices in Cloud Computing: Designing for the Cloud workshop, P41
   Subashini S., 2012, J NETW COMPUT APPL, V34, P1
   van Renesse R, 1998, MIDDLEWARE'98: IFIP INTERNATIONAL CONFERENCE ON DISTRIBUTED SYSTEMS PLATFORMS AND OPEN DISTRIBUTED PROCESSING, P55
   Vouk Mladen A., 2008, Journal of Computing and Information Technology - CIT, V16, P235, DOI 10.2498/cit.1001391
   Wenbing Zhao, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P67, DOI 10.1109/CLOUD.2010.26
NR 36
TC 10
Z9 12
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2015
VL 45
IS 3
BP 343
EP 363
DI 10.1002/spe.2235
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AZ7XW
UT WOS:000348429500003
DA 2024-07-18
ER

PT J
AU Sonntag, B
   Colnet, D
AF Sonntag, Benoit
   Colnet, Dominique
TI Efficient compilation strategy for object-oriented languages under the
   closed-world assumption
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented; code customization; type flow analysis; compiler;
   dynamic dispatch; inlining
ID OPTIMIZING COMPILER; INFERENCE; DISPATCH; ALGORITHM
AB Reaching the best level of runtime performance from a high-level, object-oriented language is often considered challenging if not unattainable. The closed-world assumption involves considering all of the source code of an application together at compile time. That assumption makes it possible to produce an efficient code. For instance, multiple inheritance can be implemented as efficiently as single inheritance. Our compilation strategy is the result of a prolonged project, tying together several compilation techniques: call graph analysis, dead code elimination, type flow analysis, code customization, implementation of dynamic dispatch, inlining, pointer optimization, switch optimization, objects layout, and so on. Merging all of these techniques into a global strategy appears to be quite problematic. Throughout the paper, two real-world compilers are used as benchmarks to provide measurements for compiler writers to evaluate the applicability of our approach. Type flow analysis is a fundamental aspect of our strategy to resolve method calls. We have extended type flow analysis to deal with the content of arrays, enabling us to process additional expressions and thus making it possible to obtain a true global analysis. Typically, more than 90% of method call sites are statically resolved. Our experience indicates that the closed-world assumption is suitable for numerous applications. Surprisingly, even library-defined control statements from dynamic languages are perfectly processed with our strategy. The Smalltalk ifTrue:ifFalse:, whileTrue:, to:do:, and so on are, for the very first time, perfectly translated. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Sonntag, Benoit] Univ Strasbourg, LSIIT, Illkirch Graffenstaden, France.
   [Colnet, Dominique] Univ Lorraine, LORIA, Vandoeuvre Les Nancy, France.
C3 Universites de Strasbourg Etablissements Associes; Universite de
   Strasbourg; Universite de Lorraine
RP Colnet, D (corresponding author), LORIA, Campus Sci,BP 239, F-54506 Vandoeuvre Les Nancy, France.
EM Dominique.Colnet@loria.fr
CR AGESEN O, 1995, SOFTWARE PRACT EXPER, V25, P975, DOI 10.1002/spe.4380250903
   Agesen O, 1995, LECT NOTES COMPUT SC, V952, P2
   AIGNER G, 1996, LECT NOTES COMPUTER, V1098, P142
   ANDRE P, 1992, SIGPLAN NOTICES, V27, P110, DOI 10.1145/141937.141947
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Blanchet B, 2003, ACM SIGPLAN NOTICES, V38, P196, DOI 10.1145/780822.781153
   Chambers C., 1992, DESIGN IMPLEMENTATIO
   Chambers C, 1989, 4 ANN ACM C OBJ OR P, P146
   Collin S, 1997, LECT NOTES COMPUT SC, V1204, P67
   Colnet D, 1999, ACM SIGPLAN NOTICES, V34, P154, DOI 10.1145/301589.286877
   Colnet D, C INGENIERIE LOG CIE
   Colnet D., 1998, ISMM, P154, DOI DOI 10.1145/286860.286877
   Consel C., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P493, DOI 10.1145/158511.158707
   Corney D., 1994, Programming Languages and System Architectures. International Conference Proceedings, P137
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Dean J, 1996, ACM SIGPLAN NOTICES, V31, P83, DOI 10.1145/236338.236344
   DEUTSCH PL, 1984, 11 ANN ACM S PRINC P
   DIXON R, 1989, SIGPLAN NOTICES, V24, P211, DOI 10.1145/74878.74900
   DRIESEN K, 1993, SIGPLAN NOTICES, V28, P259, DOI 10.1145/167962.165902
   Driesen K, 1995, LECT NOTES COMPUT SC, V952, P253
   Driesen K, 1996, ACM SIGPLAN NOTICES, V31, P306, DOI 10.1145/236338.236369
   DRIESEN K, 1995, SIGPLAN NOTICES, V30, P141, DOI 10.1145/217839.217851
   Ducournau R, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1391956.1391960
   Ducournau R, 2009, ACM SIGPLAN NOTICES, V44, P41, DOI 10.1145/1639949.1640093
   Ellis MargaretA., 1990, The annotated C++ reference manual
   Fitzgerald R, 2000, SOFTWARE PRACT EXPER, V30, P199, DOI 10.1002/(SICI)1097-024X(200003)30:3<199::AID-SPE296>3.0.CO;2-2
   Futamura Y., 1999, Higher-Order and Symbolic Computation, V12, P381, DOI 10.1023/A:1010095604496
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Glew N, 2002, LECT NOTES COMPUT SC, V2374, P525
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Grove D, 2001, ACM T PROGR LANG SYS, V23, P685, DOI 10.1145/506315.506316
   Hlzle U, 1991, 5 EUR C OBJ OR PROGR, V512, P21
   Holzle U., 1994, CSTR941520
   Jones Richard., 1996, GARBAGE COLLECTION
   Lee H, 2006, SOFTWARE PRACT EXPER, V36, P835, DOI [10.1002/spe.718, 10.1002/spc.718]
   Mossenbock H, 1991, 160 ETH ZUR
   Neil D., 1981, LECT NOTES COMPUTER, V115, P114
   Palacz K, 2003, LECT NOTES COMPUT SC, V2743, P378
   PALSBERG J, 1991, SIGPLAN NOTICES, V26, P146
   Pizlo F, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P69
   Privat J., 2005, SIGSOFT Softw. Eng. Notes, V31, P20, DOI 10.1145/1108792.1108799
   SHIVERS O, 1988, SIGPLAN NOTICES, V23, P164, DOI 10.1145/960116.54007
   Sonntag B, 2002, 40 C TECHN OBJ OR LA, P45
   Sonntag B, 2002, INT WORKSH OBJ OR OP, P25
   UNGAR D, 1987, SIGPLAN NOTICES, V22, P227, DOI 10.1145/38807.38828
   UNGAR D, 1987, COMPUTER, V20, P67, DOI 10.1109/MC.1987.1663359
   Vitek J., 1994, Object-Oriented Programming. 8th European Conference, ECOOP '94. Proceedings, P432, DOI 10.1007/BFb0052195
   Zendra O, 1997, ACM SIGPLAN NOTICES, V32, P125, DOI 10.1145/263700.263728
   Zendra O, 2001, SOFTWARE PRACT EXPER, V31, P601, DOI 10.1002/spe.373
   Zhong Shao, 1994, Proceedings of the 1994 ACM Conference on LISP and Functional Programming, P150, DOI 10.1145/182409.156783
   Zibin Y, 2002, ACM SIGPLAN NOTICES, V37, P142, DOI 10.1145/583854.582434
NR 51
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2014
VL 44
IS 5
BP 565
EP 592
DI 10.1002/spe.2174
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE3YW
UT WOS:000333915400004
OA Green Published
DA 2024-07-18
ER

PT J
AU Lin, WW
   Liang, C
   Wang, JZ
   Buyya, R
AF Lin, Weiwei
   Liang, Chen
   Wang, James Z.
   Buyya, Rajkumar
TI Bandwidth-aware divisible task scheduling for cloud computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; task-scheduling algorithm; nonlinear programming model
ID ALGORITHM
AB Task scheduling is a fundamental issue in achieving high efficiency in cloud computing. However, it is a big challenge for efficient scheduling algorithm design and implementation (as general scheduling problem is NP-complete). Most existing task-scheduling methods of cloud computing only consider task resource requirements for CPU and memory, without considering bandwidth requirements. In order to obtain better performance, in this paper, we propose a bandwidth-aware algorithm for divisible task scheduling in cloud-computing environments. A nonlinear programming model for the divisible task-scheduling problem under the bounded multi-port model is presented. By solving this model, the optimized allocation scheme that determines proper number of tasks assigned to each virtual resource node is obtained. On the basis of the optimized allocation scheme, a heuristic algorithm for divisible load scheduling, called bandwidth-aware task-scheduling (BATS) algorithm, is proposed. The performance of algorithm is evaluated using CloudSim toolkit. Experimental result shows that, compared with the fair-based task-scheduling algorithm, the bandwidth-only task-scheduling algorithm, and the computation-only task-scheduling algorithm, the proposed algorithm (BATS) has better performance. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Lin, Weiwei; Liang, Chen] S China Univ Technol, Sch Comp Engn & Sci, Guangzhou, Guangdong, Peoples R China.
   [Wang, James Z.] Clemson Univ, Sch Comp, Clemson, SC 29634 USA.
   [Buyya, Rajkumar] Univ Melbourne, Dept Comp Sci & Software Engn, Cloud Comp & Distributed Syst Lab, Parkville, Vic 3052, Australia.
C3 South China University of Technology; Clemson University; University of
   Melbourne
RP Lin, WW (corresponding author), S China Univ Technol, Sch Comp Engn & Sci, Guangzhou, Guangdong, Peoples R China.
EM linweiwei2004@yahoo.com.cn
RI Wang, James/JAD-0675-2023; Buyya, Rajkumar/C-3424-2009
FU National Natural Science Foundation of China [61070015]; Guangdong
   Natural Science Foundation [10451064101005155, S2012030006242,
   S2011010001754]; GuangZhou City Science and Technology Projects
   [x2jsB2120750]; Guangdong Provincial Science and technology projects
   [2012B010100030]; Guangdong Province strategic emerging industry project
   [2011A010801002]; NSF [DBI-0960586]; Div Of Biological Infrastructure;
   Direct For Biological Sciences [0960586] Funding Source: National
   Science Foundation
FX The authors would like to thank the anonymous reviewers for their
   valuable comments and suggestions that have improved the presentation,
   quality, and correctness of this paper. This work is financially
   supported by the National Natural Science Foundation of China (no.
   61070015), Guangdong Natural Science Foundation (no. 10451064101005155,
   S2012030006242 and S2011010001754), GuangZhou City Science and
   Technology Projects (no. x2jsB2120750), Guangdong Provincial Science and
   technology projects (no. 2012B010100030) and Guangdong Province
   strategic emerging industry project (no. 2011A010801002). James Wang's
   work is partially supported by NSF grant DBI-0960586.
CR Beaumont O, 2008, P 22 IEEE INT S PAR
   Bharadwaj V., 1996, Scheduling divisible loads in parallel and distributed systems
   Buyya R, 2008, P 10 IEEE INT C HIGH
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Fang YQ, 2010, LECT NOTES COMPUT SC, V6318, P271, DOI 10.1007/978-3-642-16515-3_34
   Farkas T, 2008, IND ENG CHEM RES, V47, P3088, DOI 10.1021/ie0711426
   Grounds NG, 2009, LECT NOTES COMPUT SC, V5931, P435, DOI 10.1007/978-3-642-10665-1_40
   Hong B., 2004, Proceedings. 18th International Parallel and Distributed Processing Symposium
   Hong B., 2003, 15 ANN INT C PAR DIS
   Hong B, 2007, IEEE T PARALL DISTR, V18, P1420, DOI 10.1109/TPDS.2007.1042
   Iosup A, 2011, IEEE T PARALL DISTR, V22, P931, DOI 10.1109/TPDS.2011.66
   Jackson KR, 2011, SCI PROGRAMMING-NETH, V19, P107, DOI [10.3233/SPR-2011-0324, 10.1155/2011/498542]
   Kong XZ, 2011, J NETW COMPUT APPL, V34, P1068, DOI 10.1016/j.jnca.2010.06.001
   Li LQ, 2009, THIRD INTERNATIONAL CONFERENCE ON MULTIMEDIA AND UBIQUITOUS ENGINEERING (MUE 2009), P295, DOI 10.1109/MUE.2009.58
   Lin Wei-Wei, 2006, Journal of Software, V17, P2352, DOI 10.1360/jos172352
   Lizheng Guo, 2012, Journal of Networks, V7, P547, DOI 10.4304/jnw.7.3.547-553
   Mathew K., 2010, 2010 2 INT C COMN SY, P1, DOI [10.1109/COMSNETS.2010.5431965, DOI 10.1109/COMSNETS.2010.5431965]
   MEHDI N, 2011, INT J INFORM COMMUN, V7, P13
   Pandey S, 2010, INT CON ADV INFO NET, P222, DOI 10.1109/AINA.2010.30
   Qin XA, 2008, IEEE T COMPUT, V57, P188, DOI 10.1109/TC.2007.70738
   Sadhasivam S, 2009, 2009 INTERNATIONAL CONFERENCE ON ADVANCES IN RECENT TECHNOLOGIES IN COMMUNICATION AND COMPUTING (ARTCOM 2009), P884, DOI 10.1109/ARTCom.2009.148
   Shi W, 2010, PR IEEE COMP DESIGN, P321, DOI 10.1109/ICCD.2010.5647721
   Shrestha H.K., 2009, P INT C PAR DISTR PR
   Sjaugi MF, 2010, MANAGED GRIDS AND CLOUD SYSTEMS IN THE ASIA-PACIFIC RESEARCH COMMUNITY, P195, DOI 10.1007/978-1-4419-6469-4_14
   Song SS, 2006, IEEE T COMPUT, V55, P703, DOI 10.1109/TC.2006.89
   Sonnek Jason, 2010, Proceedings 39th International Conference on Parallel Processing (ICPP 2010), P228, DOI 10.1109/ICPP.2010.30
   Spellucci P, 1998, MATH PROGRAM, V82, P413, DOI 10.1007/BF01580078
   Wang C, 2011, P 8 INT S NUER NETW
   Wang LZ, 2010, INT CON ADV INFO NET, P230, DOI 10.1109/AINA.2010.47
NR 29
TC 89
Z9 101
U1 0
U2 46
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2014
VL 44
IS 2
BP 163
EP 174
DI 10.1002/spe.2163
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285BM
UT WOS:000329367700002
DA 2024-07-18
ER

PT J
AU Lawall, JL
   Brunel, J
   Palix, N
   Hansen, RR
   Stuart, H
   Muller, G
AF Lawall, Julia L.
   Brunel, Julien
   Palix, Nicolas
   Hansen, Rene Rydhof
   Stuart, Henrik
   Muller, Gilles
TI WYSIWIB: exploiting fine-grained program structure in a scriptable
   API-usage protocol-finding process
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Linux; bug finding; program analysis
AB Bug-finding tools rely on specifications of what is correct or incorrect code. As it is difficult for a tool developer or user to anticipate all possible specifications, strategies for inferring specifications have been proposed. These strategies obtain probable specifications by observing common characteristics of code or execution traces, typically focusing on sequences of function calls. To counter the observed high rate of false positives, heuristics have been proposed for ranking or pruning the results. These heuristics, however, can result in false negatives, especially for rarely used functions. In this paper, we propose an alternate approach to specification inference, in which the user guides the inference process using patterns of code that reflect the user's understanding of the conventions and design of the targeted software project. We focus on specifications describing the correct usage of API functions, which we refer to as API protocols. Our approach builds on the Coccinelle program matching and transformation tool, which allows a user to construct patterns that reflect the structure of the code to be matched. We evaluate our approach on the source code of the Linux kernel, which defines a very large number of API functions with varying properties. Linux is also critical software, implying that fixing even bugs involving rarely used protocols is essential. In our experiments, we use our approach to find over 3000 potential API protocols, with an estimated false positive rate of under 15% and use these protocols to find over 360 bugs in the use of API functions. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Lawall, Julia L.; Brunel, Julien; Palix, Nicolas; Stuart, Henrik] Univ Copenhagen, DIKU, Copenhagen, Denmark.
   [Hansen, Rene Rydhof] Aalborg Univ, Aalborg, Denmark.
   [Lawall, Julia L.; Muller, Gilles] INRIA LIP6, Paris, France.
C3 University of Copenhagen; Aalborg University; Sorbonne Universite
RP Lawall, JL (corresponding author), Univ Copenhagen, DIKU, Copenhagen, Denmark.
EM julia@diku.dk
RI Palix, Nicolas/ABG-1533-2020
OI Palix, Nicolas/0000-0001-8873-281X; Hansen, Rene
   Rydhof/0000-0002-5688-6432
FU Agence Nationale de la Recherche (France); Danish Research Council for
   Technology and Production Sciences
FX This work has been supported in part by the Agence Nationale de la
   Recherche (France) and the Danish Research Council for Technology and
   Production Sciences. We are grateful to the Linux community for
   validating the patches we that have submitted on the basis this work and
   to the reviewers for their suggestions for improvement.
CR [Anonymous], LKML LIN KERN MAIL L
   [Anonymous], 2008, P INT WORKSH DYN AN, DOI 10.1145/1401827.1401838
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Ball T., 2006, Operating Systems Review, V40, P73, DOI 10.1145/1218063.1217943
   Brunel J, 2009, ACM SIGPLAN NOTICES, V44, P114, DOI 10.1145/1594834.1480897
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Engler D, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE FOURTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P1
   Kremenek T, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P161
   Lawall JL, 2009, I C DEPEND SYS NETWO, P43, DOI 10.1109/DSN.2009.5270354
   Le Goues C, 2009, LECT NOTES COMPUT SC, V5505, P292, DOI 10.1007/978-3-642-00768-2_26
   Li Z., 2005, ESEC FSE
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   MacKenzie D., 2003, COMP MERGING FILES G
   Olesen MC, 2010, 4 INT WORKSH FDN TEC
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Palix N, 2011, ACM SIGPLAN NOTICES, V46, P305, DOI 10.1145/1961296.1950401
   Ramanathan MK, 2007, PROC INT CONF SOFTW, P240
   Stuart H, 2007, 4 WORKSH PROGR LANG
   Stuart H, 2008, THESIS U COPENHAGEN
   Tan L., 2008, P 17 C SECURITY S SS, P379
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Weimer W, 2005, LECT NOTES COMPUT SC, V3440, P461
NR 22
TC 8
Z9 10
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2013
VL 43
IS 1
BP 67
EP 92
DI 10.1002/spe.2102
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 058SC
UT WOS:000312653300003
DA 2024-07-18
ER

PT J
AU Drusinsky, D
   Shing, MT
AF Drusinsky, Doron
   Shing, Man-Tak
TI Validating quality attribute requirements via execution-based model
   checking
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE quality attribute requirements; execution-based model checking;
   statechart assertions; runtime execution monitoring; automatic white-box
   testing; validation and verification
ID VERIFICATION; TOOL
AB This paper is concerned with the correct specification and validation of quality attribute requirements (QARs) that crosscut through a diverse set of complex system functions. These requirements act as modifiers of system level functional requirements and thus have substantial influence on the eventual architectural selection. Because system designers traditionally address these requirements one quality attribute at a time, the process frequently results in QARs that contain subtle conflicting behaviors. This paper presents an approach to QAR-induced behavior validation and conflict detection via execution-based model checking early in the software development process. It explores the concept of conflicts between requirements with temporal and sequencing behaviors and presents an automated approach for discovering such conflicts. Published 2012. This article is a US Government work and is in the public domain in the USA.
C1 [Drusinsky, Doron; Shing, Man-Tak] USN, Dept Comp Sci, Postgrad Sch, Monterey, CA 93943 USA.
   [Drusinsky, Doron] Time Rover Inc, Cupertino, CA 95014 USA.
C3 United States Department of Defense; United States Navy; Naval
   Postgraduate School
RP Shing, MT (corresponding author), USN, Dept Comp Sci, Postgrad Sch, 1411 Cunningham Rd, Monterey, CA 93943 USA.
EM shing@nps.edu
FU National Aeronautics and Space Administration
FX The research reported in this article was funded in part by a grant from
   the National Aeronautics and Space Administration.
CR Agerholm S, 1991, P 1991 INT WORKSH HO, P208
   [Anonymous], IEEE DISTRIB SYST ON
   [Anonymous], 1990, LICS, DOI DOI 10.1109/LICS.1990.113767
   [Anonymous], 2000, Computer-Aided Reasoning: An Approach
   [Anonymous], 1994, LECT NOTES COMPUTER, DOI DOI 10.1007/BFB0030556
   Bachmann F, 2005, IEE P-SOFTW, V152, P153, DOI 10.1049/ip-sen:20045037
   Beck K, 1998, JAVA REP, V3, P37
   Bjorner N., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P415
   Boehm B, 1996, IEEE SOFTWARE, V13, P25, DOI 10.1109/52.506460
   Boyer R.S., 1988, A Computational Logic Handbook, V1st ed.
   Bozga M, 1998, LECT NOTES COMPUT SC, V1427, P546, DOI 10.1007/BFb0028779
   Church A.A., 1936, The journal of symbolic logic, V1, P40
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   Drusinsky Doron, 2008, 2008 Second IEEE International Conference on Secure System Integration and Reliability Improvement (SSIRI), P47, DOI 10.1109/SSIRI.2008.54
   Drusinsky D, 2000, LECT NOTES COMPUT SC, V1885, P323
   Drusinsky D., 2006, Modeling and verification using UML statecharts: a working guide to reactive systems design, runtime modeling and execution-based model checking
   Drusinsky D, 2010, NPSCS10007 NAV POSTG
   Drusinsky D, 2010, P 21 IEEE INT S RAP, P8
   Drusinsky D, 2008, IEEE SYST J, V2, P513, DOI 10.1109/JSYST.2008.2009190
   Easterbrook S, 1998, IEEE T SOFTWARE ENG, V24, P4, DOI 10.1109/32.663994
   Gordon M.J.C., 1993, Introduction to HOL: A theorem proving environment for higher order logic
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Havelund K, 2004, FORM METHOD SYST DES, V24, P189, DOI 10.1023/B:FORM.0000017721.39909.4b
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Heimdahl MPE, 1996, IEEE T SOFTWARE ENG, V22, P363, DOI 10.1109/32.508311
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   King D. J., 1996, ICL Systems Journal, V11, P106
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   LEVESON NG, 1994, IEEE T SOFTWARE ENG, V20, P684, DOI 10.1109/32.317428
   Lintao Zhang, 2002, Automated Deduction - CADE-18. 18th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.2392), P295
   Nitsche U., 1994, Logical Foundations of Computer Science. Third International Symposium, LFCS '94 Proceedings, P265
   Ruiz-Cortes A, 2002, P WORKSH ENG REQ WER, P299
   Sammapun U, 2005, 11TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P147, DOI 10.1109/RTCSA.2005.84
   Shankar N, 2001, PVS PROVER GUIDE
NR 35
TC 3
Z9 3
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2012
VL 42
IS 7
SI SI
BP 853
EP 875
DI 10.1002/spe.1152
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 952UX
UT WOS:000304819600005
DA 2024-07-18
ER

PT J
AU Dubey, A
   Karsai, G
   Mahadevan, N
AF Dubey, Abhishek
   Karsai, Gabor
   Mahadevan, Nagabhushan
TI A component model for hard real-time systems: CCM with ARINC-653
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 13th IEEE International Symposium on Object/Component/Service-Oriented
   Real-Time Distributed Computing (ISORC)
CY MAY 05-06, 2010
CL Carmona, SPAIN
SP IEEE
DE ARINC-653; real-time component model; hard-real time systems
ID DESIGN
AB The size and complexity of software in safety-critical systems is increasing at a rapid pace. One technology that can be used to mitigate this complexity is component-based software development. However, in spite of the apparent benefits of a component-based approach to development, little work has been done in applying these concepts to hard real-time systems. This paper improves the state of the art by making three contributions: (1) we present a component model for hard real-time systems and define the semantics of different types of component interactions; (2) we present an implementation of a middleware that supports this component model. This middleware combines an open-source CORBA Component Model (CCM) implementation (MICO) with ARINC-653: a state-of-the-art real-time operating systems (RTOS) standard, (3) finally; we describe a modeling environment that enables design, analysis, and deployment of component assemblies. We conclude with a discussion of the lessons learned during this exercise. Our experiences point toward extending both the CCM as well as revising the ARINC-653. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Dubey, Abhishek; Karsai, Gabor; Mahadevan, Nagabhushan] Vanderbilt Univ, Inst Software Integrated Syst, Nashville, TN 37212 USA.
C3 Vanderbilt University
RP Dubey, A (corresponding author), Vanderbilt Univ, Inst Software Integrated Syst, Nashville, TN 37212 USA.
EM dabhishe@isis.vanderbilt.edu
OI Dubey, Abhishek/0000-0002-0168-4948; Karsai, Gabor/0000-0001-7775-9099
CR Alena Richard L., 2007, 2007 IEEE Aerospace Conference, P1, DOI 10.1109/AERO.2007.352639
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], Model Integrated Computing
   [Anonymous], Ciao
   [Anonymous], TINYOS
   [Anonymous], 2005, J EMBEDDED COMPUT
   [Anonymous], 2001, MODEL DRIVEN ARCHITE
   [Anonymous], OMNeT++ Network Simulation Framework
   *AR, 2005, 6532 AR 1
   Audsley N, 1996, REAL TIM SYST SYMP P, P39, DOI 10.1109/REAL.1996.563698
   Balasubramanian KR, 2003, EIGHTH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, PROCEEDINGS, P226
   Burns A, 2007, FORM ASP COMPUT, V19, P111, DOI 10.1007/s00165-006-0021-4
   Conmy P., 2002, 20 INT SYST SAF C
   Delange J, 2009, LECT NOTES COMPUT SC, V5570, P30, DOI 10.1007/978-3-642-01924-1_3
   Diniz N., 2005, DATA SYSTEMS AEROSPA
   DUBEY A, 2009, ISIS09111 VAND U I S
   DUBEY A, 2010, 13 IEEE INT S OBJ CO, P143
   DUBEY A, 2010, ISIS10106 VAND U I S
   EASWARAN A, 2009, MSCIS0904 U PENNS
   Fay-Wolfe V, 2000, IEEE T PARALL DISTR, V11, P1073, DOI 10.1109/71.888646
   Feiler PH, 2004, INT FED INFO PROC, V176, P3
   Goldman AI, 2007, GRAZ PHIL S, V74, P1
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Jezequel JM, 1997, COMPUTER, V30, P129, DOI 10.1109/2.562936
   Kim KHK, 1997, COMPUTER, V30, P62, DOI 10.1109/2.607090
   Kuz I, 2007, J SYST SOFTWARE, V80, P687, DOI 10.1016/j.jss.2006.08.039
   LAKSHMANAN K, 2008, REAL TIM EMB TECHN A, P195
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Morgan D. R., 1989, AEROSPACE ELECT SYST, V4, P12
   Obermaisser R., 2009, GENESYS ARTEMIS CROS
   Puder A, 2004, IEEE SOFTWARE, V21, P17, DOI 10.1109/MS.2004.22
   Rushby J., 2001, MODULAR CERTIFICATIO
   SCHNEIDER S, 1995, SIGPLAN NOTICES, V30, P146, DOI 10.1145/216633.216681
   Schoofs T., 2009, JTRES'09: Proceedings of the 7th International Workshop on Java Technologies for Real-Time and Embedded Systems. (Madrid, P169, DOI DOI 10.1145/1620405.1620429
   SCHULTE M, ISORC 2005, P62
   Subramonian V, 2007, J SYST SOFTWARE, V80, P668, DOI 10.1016/j.jss.2006.08.023
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Wallace M, 2005, ELECTRON NOTES THEOR, V141, P53, DOI 10.1016/j.entcs.2005.02.051
   Wang N., 2001, OVERVIEW CORBA COMPO, P557
   Watkins C., 2007, DIG AV SYST C 2007 D
   1994, JOINT ADV STRIKE TEC
   ISIS MODEL INTEGRATE
NR 43
TC 37
Z9 44
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2011
VL 41
IS 12
SI SI
BP 1517
EP 1550
DI 10.1002/spe.1083
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 842NP
UT WOS:000296606500007
DA 2024-07-18
ER

PT J
AU Scheler, F
   Schröder-Preikschat, W
AF Scheler, Fabian
   Schroeder-Preikschat, Wolfgang
TI The Real-Time Systems Compiler: migrating event-triggered systems to
   time-triggered systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 13th IEEE International Symposium on Object/Component/Service-Oriented
   Real-Time Distributed Computing (ISORC)
CY MAY 05-06, 2010
CL Carmona, SPAIN
SP IEEE
DE real-time systems; time-triggered systems; event-triggered systems
ID ARCHITECTURE; SOFTWARE
AB In this paper, we present a prototype of the Real-Time Systems Compiler (RTSC). The RTSC is a compiler-based tool that enables the migration from event-triggered to time-triggered real-time systems. This is achieved by replacing the real-time systems architecture of a given real-time system. The real-time systems architecture governs the structural properties of the white-box view of a real-time system: how are tasks attached to events and how are dependencies between different tasks implemented. The RTSC uses an abstraction called Atomic Basic Blocks (ABBs) to hide the real-time systems architecture and capture all relevant dependencies of an event-triggered system in a global ABB-graph. The RTSC automatically extracts that ABB-graph from an event-triggered real-time system given as source code, transforms that ABB-graph appropriately, and maps it to a statically computed schedule that could be executed by standard time-triggered real-time operating systems. Important temporal properties of the physical environment of the real-time system needed for that transformation are stored in a system model provided as additional input to the RTSC. Furthermore, we demonstrate the applicability of our approach and the operation of our prototype by transforming an event-triggered control application into a time-triggered equivalent. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Scheler, Fabian; Schroeder-Preikschat, Wolfgang] Univ Erlangen Nurnberg, Dept Comp Sci Distributed Syst & Operating Syst 4, Erlangen, Germany.
C3 University of Erlangen Nuremberg
RP Scheler, F (corresponding author), Univ Erlangen Nurnberg, Dept Comp Sci Distributed Syst & Operating Syst 4, Erlangen, Germany.
EM scheler@cs.fau.de
CR Abdelzaher TF, 1999, IEEE T PARALL DISTR, V10, P1179, DOI 10.1109/71.809575
   Albers K, 2006, EUROMICRO, P97, DOI 10.1109/ECRTS.2006.12
   [Anonymous], OMG SYST MOD LANG OM
   [Anonymous], 2004, P 2004 INT S COD GEN
   *AUTOSAR, 2006, SPEC RTE SOFTW VERS
   BRIAND LC, 1997, M DEADLINES HARD REA
   Campbell R.H., 1974, LNCS, V16, P89, DOI 10.1007/BFb0029355
   CARLOW GD, 1984, COMMUN ACM, V27, P926, DOI 10.1145/358234.358258
   Caspi P., 2003, P 2003 ACM SIGPLAN C, P153
   CUNY JE, 1987, ACM T PROGR LANG SYS, V9, P599, DOI 10.1145/29873.31334
   de Niz D, 2006, Proceedings of the 12th IEEE Real-Time and Embedded Technology and Applications Symposium, P231
   Domaratsky Y, 2001, P INT COMP SOFTW APP, P237, DOI 10.1109/CMPSAC.2001.960622
   Engler Dawson., 2003, Proceedings of the Nineteenth ACM Symposium on Operating Systems Principles, SOSP '03, P237, DOI DOI 10.1145/945445.945468
   FARCAS E, 2005, P ACM SIGPLAN SIGBED, P31
   *FLEXRAY CONS, 2005, FLEXRAY PROT SPEC 2
   Gerber R, 1997, ACM T PROGR LANG SYS, V19, P525, DOI 10.1145/256167.256394
   *GMBH RB, 1991, CAN SPEC VERS 2 0
   GOPINATH P, 1990, PROCEEDINGS : 11TH REAL-TIME SYSTEMS SYMPOSIUM, P247, DOI 10.1109/REAL.1990.128755
   GRAY Ian., 2009, P 2009 INT C COMPILE, P147
   HENZINGER TA, 2009, P 30 IEEE INT S REAL
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Huber B, 2007, PROCEEDINGS OF THE FIFTH WORKSHOP ON INTELLIGENT SOLUTIONS IN EMBEDDED SYSTEMS, P155
   *INF TECHN AG, 2005, TRIC 1 US MAN V1 3 5, V1
   JAHANIAN F, 1994, IEEE T SOFTWARE ENG, V20, P933, DOI 10.1109/32.368134
   Kirner R, 2010, REAL-TIME SYST, V45, P72, DOI 10.1007/s11241-010-9091-8
   KOPETZ H, 1991, LECT NOTES COMPUT SC, V563, P87
   Kopetz H., 1997, REAL TIME SYSTEMS DE
   KRAUSE M, 2006, DESIGN AUTOMATION EM, V19, P229
   Laventhal M. S., 1979, Proceedings of the 4th International Conference on Software Engineering, P194
   Lu S., 2007, P 21 ACM S OPERATING, P103
   LU S, 2006, P 12 INT C ARCH SUPP, P37, DOI DOI 10.1145/1168857.1168864
   MACKERT L, 1983, THESIS FRIEDRICHALEX
   MOHAN Sibin., 2008, P 20 EUROMICRO C REA, P71
   Muchnick S., 1997, ADV COMPILER DESIGN
   Obermaisser R, 2007, REAL-TIME SYST, V36, P101, DOI 10.1007/s11241-007-9015-4
   OSEK/VDX Group, 2005, OP SYST SPEC 2 2 3
   *OSEK VDX GROUP, 2001, TIM TRIGG OP SYST SP
   Peng DT, 1997, IEEE T SOFTWARE ENG, V23, P745, DOI 10.1109/32.637388
   PETRI CA, 1963, P IFIP C, V62, P386
   POLEDNA S, 1994, REAL-TIME SYST, V6, P289, DOI 10.1007/BF01088629
   PUSCHNER P, 1993, THESIS TU WIEN VIENN
   Scheler Fabian, 2010, Proceedings of the 2010 13th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC 2010). Volume I: Main Symposium, P34, DOI 10.1109/ISORC.2010.11
   SCHELER F, 2006, P GI ITG WORKSH NONF, P107
   Scheler F, 2007, PROCEEDINGS OF THE FIFTH WORKSHOP ON INTELLIGENT SOLUTIONS IN EMBEDDED SYSTEMS, P63
   Scheler Fabian, 2006, 12 IEEE INT IN PRESS, P49
   SHANNON CE, 1949, P IRE, V37, P10, DOI 10.1109/JRPROC.1949.232969
   Shepard T., 1990, Proceedings. The 10th International Conference on Distributed Computing Systems (Cat. No.90CH2878-7), P62, DOI 10.1109/ICDCS.1990.89285
   WOLFE V, 1991, PROCEEDING : TWELFTH REAL-TIME SYSTEMS SYMPOSIUM, P43, DOI 10.1109/REAL.1991.160357
   XU J, 1993, IEEE T SOFTWARE ENG, V19, P139, DOI 10.1109/32.214831
   Zheng W, 2007, RTSS 2007: 28TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P161, DOI 10.1109/RTSS.2007.40
NR 50
TC 3
Z9 5
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2011
VL 41
IS 12
SI SI
BP 1491
EP 1515
DI 10.1002/spe.1099
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 842NP
UT WOS:000296606500006
DA 2024-07-18
ER

PT J
AU Grunske, L
   Winter, K
   Yatapanage, N
   Zafar, S
   Lindsay, PA
AF Grunske, Lars
   Winter, Kirsten
   Yatapanage, Nisansala
   Zafar, Saad
   Lindsay, Peter A.
TI Experience with fault injection experiments for FMEA
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE behavior trees; failure modes and effects analysis; fault injection
   experiments; model checking
ID FAILURE MODE; RELIABILITY; CHECKING; SYSTEMS
AB Failure Modes and Effects Analysis (FMEA) is a widely used system and software safety analysis technique that systematically identifies failure modes of system components and explores whether these failure modes might lead to potential hazards. In practice, FMEA is typically a labor-intensive team-based exercise, with little tool support. This article presents our experience with automating parts of the FMEA process, using a model checker to automate the search for system-level consequences of component failures. The idea is to inject runtime faults into a model based on the system specification and check if the resulting model violates safety requirements, specified as temporal logical formulas. This enables the safety engineer to identify if a component failure, or combination of multiple failures, can lead to a specified hazard condition. If so, the model checker produces an example of the events leading up to the hazard occurrence which the analyst can use to identify the relevant failure propagation pathways and co-effectors. The process is applied on three medium-sized case studies modeled with Behavior Trees. Performance metrics for SAL model checking are presented. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Grunske, Lars] Swinburne Univ Technol, Fac ICT, Hawthorn, Vic 3122, Australia.
   [Winter, Kirsten; Lindsay, Peter A.] Univ Queensland, Sch ITEE, St Lucia, Qld 4072, Australia.
   [Yatapanage, Nisansala] Griffith Univ, Software Qual Inst, Nathan, Qld 4111, Australia.
   [Zafar, Saad] Riphah Int Univ, Rawalpindi, Pakistan.
C3 Swinburne University of Technology; University of Queensland; Griffith
   University
RP Grunske, L (corresponding author), Swinburne Univ Technol, Fac ICT, Hawthorn, Vic 3122, Australia.
EM lars.grunske@gmail.com
RI Yatapange, Nisansala/KIG-6358-2024; Grunske, Lars/AAH-4550-2019;
   Lindsay, Peter/F-8474-2014
OI Yatapange, Nisansala/0000-0002-0498-513X; Grunske,
   Lars/0000-0002-8747-3745; Lindsay, Peter/0000-0002-0608-8969; , Saad
   Zafar/0000-0002-0527-5914
CR Aljazzar H, 2005, LECT NOTES COMPUT SC, V3829, P177
   Aljazzar H, 2009, INT CONF QUANT EVAL, P299, DOI 10.1109/QEST.2009.8
   [Anonymous], 61025 IEC
   [Anonymous], 1990, Handbook of Theoretical Comp. Sc.
   [Anonymous], 2000, P C FUTURE SOFTWARE, DOI DOI 10.1145/336512.336556
   ATCHISON B, 1999, 9931 SVRC U QUEENSL
   Back RJR, 1994, LECT NOTES COMPUT SC, V836, P367
   Berry DM, 2002, SCI COMPUT PROGRAM, V42, P11, DOI 10.1016/S0167-6423(01)00026-0
   Bieber P, 2002, LECT NOTES COMPUT SC, V2485, P19
   Bitsch F., 2001, LNCS, V2187, P176, DOI [10.1007/3-540-45416-018, DOI 10.1007/3-540-45416-018]
   Bondavalli A, 1990, FAILURE CLASSIFICATI
   Boston J., 2008, 6 ANN SOFTW SYST ENG
   Bozzano M, 2003, LECT NOTES COMPUT SC, V2788, P49
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BTE, 2010, GEN SOFTW ENG TOOLS
   BURNS A, 1991, COMPUT J, V34, P173, DOI 10.1093/comjnl/34.2.173
   Cichocki T, 2000, LECT NOTES COMPUT SC, V1943, P382
   Colvin R., 2007, ACCSTR0701 ARC CTR C
   Colvin R, 2007, LECT NOTES COMPUT SC, V4591, P156
   Colvin R, 2008, J SYST SOFTWARE, V81, P2163, DOI 10.1016/j.jss.2008.04.035
   de Moura L, 2004, LECT NOTES COMPUT SC, V3114, P496
   Dromey RG, 2003, I C SOFTW ENG FORM M, P2, DOI 10.1109/SEFM.2003.1236202
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Grunske L, 2005, LECT NOTES COMPUT SC, V3771, P129
   Grunske L, 2008, J VISUAL LANG COMPUT, V19, P343, DOI 10.1016/j.jvlc.2007.11.003
   Grunske L, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P211, DOI 10.1109/ASWEC.2007.49
   Grunske L, 2007, INT CONF QUANT EVAL, P119, DOI 10.1109/QEST.2007.18
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Han T, 2009, IEEE T SOFTWARE ENG, V35, P241, DOI 10.1109/TSE.2009.5
   Heimdahl M. P. E., 2005, Automated Software Engineering, V12, P321, DOI 10.1007/s10515-005-2642-x
   *IEC, 1991, 60812 IEC
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Lindsay PA., 2010, P 8 IEEE INT C SOFTW
   Lutz RR, 1997, ANN SOFTW ENG, V3, P459, DOI 10.1023/A:1018929719710
   Papacostantinou P., 2008, 19 AUSTR SOFTW ENG C, P61
   Powell D., IND TRACK AUSTR C SO
   Price CJ, 2002, RELIAB ENG SYST SAFE, V76, P1, DOI 10.1016/S0951-8320(01)00136-3
   Reese JD, 1997, PROC INT CONF SOFTW, P250, DOI 10.1145/253228.253281
   Schneider F, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P4, DOI 10.1109/ICRE.1998.667803
   Tang ZH, 2006, IEEE T RELIAB, V55, P350, DOI 10.1109/TR.2006.874941
   VESELY WE, 1996, FAULT TREE HDB
   Walker M, 2009, SAE INT J PASSEN CAR, V2, P791, DOI 10.4271/2009-01-0738
   Walker M, 2009, CONTROL ENG PRACT, V17, P1115, DOI 10.1016/j.conengprac.2008.10.003
   Wen L, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P104, DOI 10.1109/SEFM.2004.1347509
   Winter K, 2010, METAL PRESS CASE STU
   Winter K, 2010, P 8 IEEE INT C SOFTW
   Yatapanage N, 2010, P 6 IFIP INT C THEOR, V323
NR 47
TC 21
Z9 22
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2011
VL 41
IS 11
BP 1233
EP 1258
DI 10.1002/spe.1039
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827RZ
UT WOS:000295446900004
DA 2024-07-18
ER

PT J
AU Ferreira, J
   Sharp, H
   Robinson, H
AF Ferreira, Jennifer
   Sharp, Helen
   Robinson, Hugh
TI User experience design and agile development: managing cooperation
   through articulation work
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE user experience design; agile development; scrum; situated action;
   cooperative work; articulation work
AB Previous discussions of how User Experience (UX) designers and Agile developers can work together have focused on bringing the disciplines together by merging their processes or adopting specific techniques. This paper reports in detail on one observational study of a mature Scrum team in a large organization, and their interactions with the UX designers working on the same project. The evidence from our study shows that Agile development and UX design practice is not explained by rationalized accounts dealing with processes or techniques. Instead, understanding practice requires examining the wider organizational setting in which the Agile developers and UX designers are embedded. Our account focuses on the situatedness of the work by making reference to values and assumptions in the organizational setting, and the consequences that those values and assumptions had for practice. In this organizational setting, cooperation between the Agile developers and UX designers was achieved through ongoing articulation work by the developers, who were compelled to engage a culturally distinct UX design division. Based on this study, insights into culture, self-organization and purposeful work highlight significant implications for practice. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Ferreira, Jennifer; Sharp, Helen; Robinson, Hugh] Open Univ, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Ferreira, J (corresponding author), Open Univ, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
EM j.ferreira@open.ac.uk
OI Ferreira, Jennifer/0000-0002-1600-452X; Sharp, Helen/0000-0003-4376-1734
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   [Anonymous], P 1994 ACM C COMP SU
   [Anonymous], HCI 2004 DES LIF LEE
   [Anonymous], 2004, XP Ser
   [Anonymous], CHI 08 HUM FACT COMP
   [Anonymous], P 21 BCS IICI GROUP
   [Anonymous], THESIS VICTORIA U WE
   [Anonymous], INTERACTIONS
   [Anonymous], P 2 XP UN 1 AG UN C
   [Anonymous], P EUR MED C INF SYST
   [Anonymous], INTERACTION DESIGN H
   [Anonymous], CHI 06 HUM FACT COMP
   [Anonymous], MODES MECH INTERACTI
   Blomkvist S, 2005, HUM COM INT, V8, P219, DOI 10.1007/1-4020-4113-6_12
   Boyatzis R.E., 1998, TRANSFORMING QUALITA
   Chamberlain S, 2006, LECT NOTES COMPUT SC, V4044, P143
   Detweiler M., 2007, Interactions, V14, P40, DOI 10.1145/1242421.1242447
   Ferreira J, 2007, AGILE 2007, PROCEEDINGS, P50, DOI 10.1109/AGILE.2007.8
   Fitzgerald B, 1997, INFORM SYST J, V7, P201, DOI 10.1046/j.1365-2575.1997.d01-18.x
   Garrett James J., 2011, The elements of user experience: User-centered design for the web
   Gasson S., 1999, Journal of End User Computing, V11, P5
   GERSON EM, 1986, ACM T OFF INF SYST, V4, P257, DOI 10.1145/214427.214431
   Haikara J, 2007, LECT NOTES COMPUT SC, V4536, P153
   Highsmith J., 2002, Agile software development ecosystems
   Hoda R., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P285, DOI [10.1145/1806799.1806843, DOI 10.1145/1806799.1806843]
   Hodgetts P, 2005, AGILE 2005, Proceedings, P235, DOI 10.1109/ADC.2005.24
   Jokela T, 2004, LECT NOTES COMPUT SC, V3009, P393
   Lee JC, 2007, AGILE 2007, PROCEEDINGS, P59, DOI 10.1109/AGILE.2007.63
   Miller L, 2005, AGILE 2005, PROCEEDINGS, P225, DOI 10.1109/ADC.2005.16
   Moe NB, 2009, IEEE SOFTWARE, V26, P20, DOI 10.1109/MS.2009.182
   Patten J., 2002, P 2002 C NEW INTERFA, P1
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   STRAUSS A, 1988, SOCIOL QUART, V29, P163, DOI 10.1111/j.1533-8525.1988.tb01249.x
   Suchman L. A., 1987, Plans and situated actions: The problem of human-machine communication
   Teasly S.D., 1993, COMPUTERS COGNITIVE, P229
   Vaughan D., 1996, The Challenger launch decision: risky technology, culture and deviance at NASA
NR 38
TC 36
Z9 37
U1 1
U2 41
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2011
VL 41
IS 9
SI SI
BP 963
EP 974
DI 10.1002/spe.1012
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 792IR
UT WOS:000292737400003
DA 2024-07-18
ER

PT J
AU Hoffman, DM
   Ly-Gagnon, D
   Strooper, P
   Wang, HY
AF Hoffman, Daniel Malcolm
   Ly-Gagnon, David
   Strooper, Paul
   Wang, Hong-Yi
TI Grammar-based test generation with YouGen
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automated testing; grammar-based test generation; covering array;
   firewall testing; RSS; XML
ID AUTOMATIC-GENERATION; COVERING ARRAYS; COMPILER; STRATEGY; DESIGN
AB Grammars are traditionally used to recognize or parse sentences in a language, but they can also be used to generate sentences. In grammar-based test generation (GBTG), context-free grammars are used to generate sentences that are interpreted as test cases. A generator reads a grammar G and generates L(G), the language accepted by the grammar. Often L(G) is so large that it is not practical to execute all of the generated cases. Therefore, GBTG tools support 'tags': extra-grammatical annotations which restrict the generation. Since its introduction in the early 1970s, GBTG has become well established: proven on industrial projects and widely published in academic venues. Despite the demonstrated effectiveness, the tool support is uneven; some tools target specific domains, e.g. compiler testing, while others are proprietary. The tools can be difficult to use and the precise meaning of the tags are sometimes unclear. As a result, while many testing practitioners and researchers are aware of GBTG, few have detailed knowledge or experience. We present YouGen, a new GBTG tool supporting many of the tags provided by previous tools. In addition, YouGen incorporates covering-array tags, which support a generalized form of pairwise testing. These tags add considerable power to GBTG tools and have been available only in limited form in previous GBTG tools. We provide semantics for the YouGen tags using parse trees and a new construct, generation trees. We illustrate YouGen with both simple examples and a number of industrial case studies. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Hoffman, Daniel Malcolm; Ly-Gagnon, David; Wang, Hong-Yi] Univ Victoria, Dept Comp Sci, Victoria, BC V8W 3P6, Canada.
   [Strooper, Paul] Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld 4072, Australia.
C3 University of Victoria; University of Queensland
RP Hoffman, DM (corresponding author), Univ Victoria, Dept Comp Sci, POB 3055 STN CSC, Victoria, BC V8W 3P6, Canada.
EM dhoffman@cs.uvic.ca
OI Strooper, Paul/0000-0003-4789-2897
CR [Anonymous], 2003, RSS 2 0 SPEC
   [Anonymous], XSLT XQUERY PROC
   Auger Robert., 2006, Zero Day Subscriptions: Using RSS and Atom Feeds As Attack Delivery Systems
   BIRD DL, 1983, IBM SYST J, V22, P229, DOI 10.1147/sj.223.0229
   BURGESS C, 1994, J SOFTWARE TESTING V, V4, P81
   CELENTANO A, 1980, SOFTWARE PRACT EXPER, V10, P897, DOI 10.1002/spe.4380101104
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   COLBOURN C, 2004, DISCRETE MATH, V308, P772
   Colbourn C.J., 2004, Le Matematiche, VLIX, P125
   Colbourn CJ, 2006, DESIGN CODE CRYPTOGR, V41, P33, DOI 10.1007/s10623-006-0020-8
   Duncan A.G., 1981, P 5 INT C SOFTW ENG, P170
   Forbes M, 2008, J RES NATL INST STAN, V113, P287, DOI 10.6028/jres.113.022
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   HOFFMAN D, 2005, P 20 IEEE ACM INT C, P96
   HOFFMAN D, 2007, P SCADA SEC SCI S MI
   HOFFMAN D, 2010, J SYSTEMS SOFTWARE
   Hoffman D, 2009, 2009 TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE-PRACTICE AND RESEARCH TECHNIQUES, TAIC PART 2009, P105, DOI 10.1109/TAICPART.2009.34
   Hoffman D, 2009, 2009 TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE-PRACTICE AND RESEARCH TECHNIQUES, TAIC PART 2009, P43, DOI 10.1109/TAICPART.2009.35
   HOMER W, 1989, SOFTWARE PRACT EXPER, V19, P53, DOI 10.1002/spe.4380190106
   Hopcroft JE., 2008, Introduction to automata theory, languages, and computation
   KAKSONEN R, 2001, FUNCT METH ASS PROT
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lämmel R, 2006, LECT NOTES COMPUT SC, V3964, P19
   MACNAMARA C, 2009, THESIS U QUEENSLAND
   MAURER PM, 1988, IEEE DES TEST COMPUT, V5, P11, DOI 10.1109/54.7959
   MAURER PM, 1992, SOFTWARE PRACT EXPER, V22, P223, DOI 10.1002/spe.4380220303
   MCCARTY B, 2003, RED HAT LINUX FIREWA
   Moura L, 2003, J COMB DES, V11, P413, DOI 10.1002/jcd.10059
   MURALI V, 1983, SOFTWARE PRACT EXPER, V13, P857, DOI 10.1002/spe.4380130911
   Payne A. J., 1978, SIGPLAN Notices, V13, P59, DOI 10.1145/953428.953435
   *RSS, 2000, RDF SIT SUMM RSS 1 0
   SCHMIDT AR, 2001, XML BENCHMARK PROJEC, P6
   Sherwood GB, 2006, J COMB DES, V14, P202, DOI 10.1002/jcd.20067
   SIRER E, 1999, 2 C DOM SPEC LANG, P1
   SOBOTKIEWICZ L, 2008, THESIS U VICTORIA, P45
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
   Tanenbaum A. S., 2003, Computer networks
   Utting M., 2007, PRACTICAL MODEL BASE
   WANG H, 2008, GRAMMER BASED TEST G, P25
   WEHRLE K, 2005, LINUX NETWORKING ARC
   *XIMPLEWARE, VRD XML FUT XML PROC
   *XML, XML PATH LANG XPATH
   *XMLSOFT, XML C PARS TOOLK GNO
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   ZAYTSEV V, 2004, THESIS U TWENTE, P7
   2005, ATOM SYNDICATION FOR
   XQUERY 1 0 XML QUERY
NR 49
TC 13
Z9 16
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2011
VL 41
IS 4
BP 427
EP 447
DI 10.1002/spe.1017
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 731BH
UT WOS:000288080800005
DA 2024-07-18
ER

PT J
AU Groote, JF
   Keiren, JJA
   Stappers, FPM
   Wesselink, JW
   Willemse, TAC
AF Groote, J. F.
   Keiren, J. J. A.
   Stappers, F. P. M.
   Wesselink, J. W.
   Willemse, T. A. C.
TI Experiences in developing the mCRL2 toolset
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software modelling; software engineering; software quality; verification
AB This paper presents practices and experiences in developing the formal methods toolset mCRL2. Findings are presented based on years of experiences in developing tools in an academic environment. Practical problems and ways to solve them are discussed. We also present the direction that we foresee for the coming years of development in formal methods tool support. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Groote, J. F.; Keiren, J. J. A.; Stappers, F. P. M.; Wesselink, J. W.; Willemse, T. A. C.] Tech Univ Eindhoven, Dept Math & Comp Sci, NL-5600 MB Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP Keiren, JJA (corresponding author), Tech Univ Eindhoven, Dept Math & Comp Sci, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM j.j.a.keiren@tue.nl
OI Keiren, Jeroen/0000-0002-5772-9527; Groote, Jan
   Friso/0000-0003-2196-6587; Willemse, Tim/0000-0003-3049-7962
CR [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   Baeten J., 2009, CAMBRIDGE TRACTS THE, V50
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Blom S, 2001, LECT NOTES COMPUT SC, V2102, P250
   Bodei C, 2005, J COMPUT SECUR, V13, P347
   Dos Reis G, 2006, ACM SIGPLAN NOTICES, V41, P295, DOI 10.1145/1111320.1111064
   FERNANDEZ JC, 1996, LECT NOTES COMPUTER, V1102, P437
   Garcia R, 2005, SOFTWARE PRACT EXPER, V35, P159, DOI 10.1002/spe.630
   Gregor D., 2006, OOPSLA '06, P291, DOI DOI 10.1145/1167473.1167499
   GROOTE J, 2006, P WORKSH ESS ALG PRO, V162, P191
   Groote JF, 2009, CH CRC COMP SCI SER, P99
   Groote JF, 2005, THEOR COMPUT SCI, V343, P332, DOI 10.1016/j.tcs.2005.06.016
   Groote JF, 2005, SCI COMPUT PROGRAM, V56, P251, DOI 10.1016/j.scico.2004.08.002
   Hilderink GH, 2006, CONCUR SYST ENGN SER, V64, P297
   Hoare CAR., 1985, Communicating Sequential Processes
   ISO, 2005, SOFTW ENG SOFTW PROD
   Jensen K., 1992, EATCS Monographs on Theoretical Computer Science
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Martin Ken, 2010, MASTERING CMAKE CROS
   Mathijssen A, 2007, LECT NOTES COMPUT SC, V4346, P165
   STAPPERS FPM, 2009, P AVOCS 09 ECEASST S, V23
   van Beek DA, 2006, J LOGIC ALGEBR PROGR, V68, P129, DOI 10.1016/j.jlap.2005.10.005
   van Dam A, 2008, LECT NOTES COMPUT SC, V5160, P440
   van den Brand MGJ, 2000, SOFTWARE PRACT EXPER, V30, P259, DOI 10.1002/(SICI)1097-024X(200003)30:3<259::AID-SPE298>3.0.CO;2-Y
   van Ham F, 2002, IEEE T VIS COMPUT GR, V8, P319, DOI 10.1109/TVCG.2002.1044518
   VANEEKELEN M, 2007, LECT NOTES COMPUTER, V4916
NR 26
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2011
VL 41
IS 2
SI SI
BP 143
EP 153
DI 10.1002/spe.1021
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718FH
UT WOS:000287106000003
DA 2024-07-18
ER

PT J
AU Seshadri, K
   Iyer, KV
AF Seshadri, Karthick
   Iyer, K. Viswanathan
TI Parallelization of a dynamic SVD clustering algorithm and its
   application in information retrieval
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE document clustering; latent semantic indexing; parallel tree-sum;
   similarity search; SVD
ID WEB
AB We describe an implementation of a parallel document clustering scheme based on latent semantic indexing, which uses singular value decomposition. Given a set of documents, the clustering algorithm is dynamic in the sense that it automatically infers the number of clusters to be output. The parallel version has been implemented on a LAN and on a dual-core system. Experimental evaluation of the algorithm shows an average speed-up of 6.22 for the LAN implementation and an average speed-up of 3.71 for the dual-core implementation, while still maintaining a precision and recall in the range [0.85, 1]. To put these implementations in the context of information retrieval, we use the parallel clustering algorithm and develop a document similarity search system. The similarity search system shows good performance in terms of precision and recall. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Seshadri, Karthick; Iyer, K. Viswanathan] Natl Inst Technol, Dept Comp Sci & Engn, Tiruchirappalli 620015, Tamil Nadu, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Tiruchirappalli
RP Iyer, KV (corresponding author), Natl Inst Technol, Dept Comp Sci & Engn, Tiruchirappalli 620015, Tamil Nadu, India.
EM kvi@nitt.edu
RI Seshadri, Karthick/R-5871-2019
OI Seshadri, Karthick/0000-0002-5658-141X; Iyer, Viswanathan
   K./0000-0002-9815-327X
CR Akl S.G., 1989, DESIGN ANAL PARALLEL
   ANICK P, 1997, ACM SIGIR, P314
   [Anonymous], 1994, Electron. Trans. Numer. Anal.
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   CHISHOLM E, 1999, ORNLITM13756, P1
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   FERRAGINA P, 2005, P WORLD WID WEB C CH
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   Kummamuru Krishna., 2004, Proceedings of the 13th international conference on World Wide Web, P658
   Mecca G, 2007, DATA KNOWL ENG, V62, P504, DOI 10.1016/j.datak.2006.10.006
   OSINSKI S, 2004, P INT C INT INF SYST
   SCHUTZE H, 1997, P ACM SIGIR C RES DE
   Strang, 2009, Introduction to linear algebra
   ZAHN CT, 1971, IEEE T COMPUT, VC 20, P68, DOI 10.1109/T-C.1971.223083
   Zamir O, 1999, COMPUT NETW, V31, P1361, DOI 10.1016/S1389-1286(99)00054-7
   ZENG HJ, 2004, P ACM SIGIR C SHEFF
   ZHANG D, 2004, P AS PAC WEB C HANGZ
   2009, JAVA DOCUMENT PARSER
   2009, JAVA HIGH PERFORMANC
NR 21
TC 5
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2010
VL 40
IS 10
BP 883
EP 896
DI 10.1002/spe.987
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 644EE
UT WOS:000281355100003
DA 2024-07-18
ER

PT J
AU Moret, P
   Binder, W
   Villazón, A
   Ansaloni, D
   Heydarnoori, A
AF Moret, Philippe
   Binder, Walter
   Villazon, Alex
   Ansaloni, Danilo
   Heydarnoori, Abbas
TI Visualizing and exploring profiles with calling context ring charts
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE calling context profiles; Calling Context Tree (CCT); Calling Context
   Ring Charts (CCRCs); visualization; dynamic metrics
ID INFORMATION; NAVIGATION
AB Calling context profiling is an important technique for analyzing the performance of object-oriented software with complex inter-procedural control flow. The Calling Context Tree (CCT) is a common data structure that stores dynamic metrics, such as CPU time, separately for each calling context. As CCTs may comprise millions of nodes, there is a need for a condensed visualization that eases the localization of performance bottlenecks. In this article, we discuss Calling Context Ring Charts (CCRCs), a compact visualization for CCTs, where callee methods are represented in ring segments surrounding the caller's ring. segment. In order to reveal hot methods, their callers, and callees, the ring segments can be sized according to a chosen dynamic metric. We describe two case studies where CCRCs help us to detect and fix performance problems in applications. A performance evaluation also confirms that our implementation can efficiently handle large CCTs. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Moret, Philippe] Univ Lugano, Fac Informat, CH-6900 Lugano, Switzerland.
   [Villazon, Alex] UPB, CINTI, Cochabamba, Bolivia.
C3 Universita della Svizzera Italiana
RP Moret, P (corresponding author), Univ Lugano, Fac Informat, CH-6900 Lugano, Switzerland.
EM philippe.moret@usi.ch
RI Villazón, Alex/AGR-6972-2022; Villazon, Alex/AAK-3937-2020; Heydarnoori,
   Abbas/ABB-2493-2020
OI Villazón, Alex/0000-0001-8428-3420; Heydarnoori,
   Abbas/0000-0001-9785-2880; Binder, Walter/0000-0002-2477-2182; Moret,
   Philippe/0000-0002-3810-2091
FU Swiss National Science Foundation
FX The work presented in this article has been supported by the Swiss
   National Science Foundation.
CR Ammons Glenn, 1997, P ACM SIGPLAN 97 C P, P85, DOI [10.1145/258915, DOI 10.1145/258915]
   ANDREWS K, 1998, INFOVIS 98 IEEE S IN
   [Anonymous], S SOFTW VIS
   [Anonymous], 2008, NDSS
   ARNOLD M, 2000, RC21789 IBM TJ WATS
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Barlow T, 2001, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2001, PROCEEDINGS, P131, DOI 10.1109/INFVIS.2001.963290
   BERK E, 2003, JLEX LEXICAL ANAL GE
   Binder W, 2009, SOFTWARE PRACT EXPER, V39, P47, DOI 10.1002/spe.890
   BLACKBURN SM, 2006, OOPSLA 06, P169
   Bond MD, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P97
   CHAKRABARTI A, 2006, EMSOFT, P262
   CHANG PP, 1991, SOFTWARE PRACT EXPER, V21, P1301, DOI 10.1002/spe.4380211204
   COOPER BF, 1998, CUCS85398 U COL BOUL
   Dabrowski J.R., 2001, P SIGCHI C HUMAN FAC, P317
   Dachselt R, 2001, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2001, PROCEEDINGS, P79, DOI 10.1109/INFVIS.2001.963284
   DEELEN P, 2007, VISSOFT 07 4 IEEE IN, P39
   Draper GM, 2009, IEEE T VIS COMPUT GR, V15, P759, DOI 10.1109/TVCG.2009.23
   Ha J, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P101, DOI 10.1145/1250734.1250747
   Herman I, 2000, IEEE T VIS COMPUT GR, V6, P24, DOI 10.1109/2945.841119
   Heydarnoori A, 2009, LECT NOTES COMPUT SC, V5653, P344, DOI 10.1007/978-3-642-03013-0_16
   HOLTEN D, 2007, VISSOFT 2007 4 IEEE, P47
   Holten D, 2006, IEEE T VIS COMPUT GR, V12, P741, DOI 10.1109/TVCG.2006.147
   Jeong CS, 1998, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION - PROCEEDINGS, P19, DOI 10.1109/INFVIS.1998.729555
   JOHNSON B, 1991, VISUALIZATION 91, P284
   Kleiberg E, 2001, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2001, PROCEEDINGS, P87, DOI 10.1109/INFVIS.2001.963285
   Lamping J, 1996, J VISUAL LANG COMPUT, V7, P33, DOI 10.1006/jvlc.1996.0003
   MORET P, 2009, VISSOFT 2009 5 IEEE, P33
   MORET P, 2009, PEPM 09, P151
   MORET P, 2010, WOSP SIPEW 2010 P 1, P63
   Munzner T, 1998, LECT NOTES COMPUT SC, V1547, P384
   *NETBEANS, 2010, NETBEANS PROF PROJ
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   POETTERING B, 2010, SSSS SHAMIRS SECRET
   *PROSYST, 2010, JPROFILER
   ROBERTSON G.G., 1991, CHI 91, P189, DOI DOI 10.1145/108844.108883
   Röthlisberger D, 2009, INT C PROGRAM COMPRE, P253, DOI 10.1109/ICPC.2009.5090052
   Rountev A., 2005, FUNDAMENTAL APPROACH, P282
   SHAMIR A, 1979, COMMUN ACM, V22, P612, DOI 10.1145/359168.359176
   Shneiderman B, 2001, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2001, PROCEEDINGS, P73, DOI 10.1109/INFVIS.2001.963283
   Spivey JM, 2004, SOFTWARE PRACT EXPER, V34, P249, DOI 10.1002/spe.562
   Stasko J, 2000, INT J HUM-COMPUT ST, V53, P663, DOI 10.1006/ijhc.2000.0420
   Stasko J, 2000, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2000, P57, DOI 10.1109/INFVIS.2000.885091
   Storey MAD, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P275, DOI 10.1109/ICSM.1995.526549
   Tollis I.G., 1998, Graph drawing: Algorithms for the visualization of graphs, V1
   Vliegen R, 2006, IEEE T VIS COMPUT GR, V12, P789, DOI 10.1109/TVCG.2006.200
   Weidendorfer J, 2004, LECT NOTES COMPUT SC, V3038, P440
   Whaley John., 2000, JAVA 00, P78
   Zhuang X, 2006, ACM SIGPLAN NOTICES, V41, P263, DOI 10.1145/1133981.1134012
   2010, SHAMIRS SECRET SHARI
NR 50
TC 9
Z9 12
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2010
VL 40
IS 9
BP 825
EP 847
DI 10.1002/spe.985
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 635WF
UT WOS:000280687400005
DA 2024-07-18
ER

PT J
AU Dong, J
   Zhao, YJ
   Sun, YT
AF Dong, Jing
   Zhao, Yajing
   Sun, Yongtao
TI XSLT-based evolutions and analyses of design patterns
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design pattern evolution; model transformation; semantic web; UML; XSLT;
   XMI; SOA
AB Design patterns document flexible designs that may evolve over time. Design pattern evolution typically involves the addition or removal of a group of modeling elements, such as classes, attributes, operations, and relationships. However, the possible evolutions of each design pattern are often not explicitly documented. Missing part of the evolution process may result in inconsistent evolution. Pattern instances may interact with each other making the evolution of design patterns more error-prone. Undetected design errors and inconsistencies may cause failures of systems. In this paper, we propose a service-oriented architecture for design pattern evolution and analysis based on two-level transformations, thus making the possible evolutions of each design pattern explicit. In addition, we automate the evolution processes as XSLT transformations that can transform the unified modeling language (UML) model of a design pattern application into the evolved UML model of the pattern. Both the original and evolved UML models are represented in the XML Metadata Interchange format to facilitate the transformations. Furthermore, we check the consistency of the evolution results using the semantic web checker based on the Java Theorem Prover. A case study on a large real-world system is presented to illustrate and evaluate our approach. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Dong, Jing; Zhao, Yajing] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
   [Sun, Yongtao] Amer Airlines Inc, Ft Worth, TX 76155 USA.
C3 University of Texas System; University of Texas Dallas
RP Dong, J (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
EM jdong@utdallas.edu
CR Alencar P., 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P160, DOI 10.1109/CMPSAC.1999.812694
   [Anonymous], P 7 WORLD MULT SYST
   Aoyama M, 2000, INTERNATIONAL SYMPOSIUM ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P110, DOI 10.1109/ISPSE.2000.913228
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Clocksin W., 1987, PROGRAMMING PROLOG
   DEMOTH B, 2001, WORKSH TRANSF UML ET
   DON J, 2007, IEEE T SOFTWARE ENG, V33, P433
   Dong F, 2006, 13TH ANNUAL IEEE INTERNATIONAL SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P80
   Dong J., 2007, P 19 INT C SOFTW ENG, P473
   DONG J, 2005, P 9 IASTED INT C SOF, P344
   Dong J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P371
   Dong J, 2006, SOSE 2006: SECOND IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING, PROCEEDINGS, P11
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   KALNINS A, 2005, 6 INT BALT C DB IS 2, P169
   Kalnins A., 2004, P MOD DRIV ARCH FDN, V3599, P14
   KEIENBURG F, 2001, P INT C HAW INT C SY, P3945
   Kim TH, 2005, P IEEE I C SERV COMP, P319
   Kobayashi T., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P18, DOI 10.1109/APSEC.1999.809580
   Kovse J, 2002, LECT NOTES COMPUT SC, V2425, P192
   Lu XL, 2005, P IEEE I C SERV COMP, P191
   MULLER PA, 2005, P INRIA WORKSH MOD T
   Noda Natsuko, 2001, P 4 INT WORKSH PRINC, P158
   OCINNEIDE M, 2001, P 4 INT WORKSH PRINC, P162
   W3C, 2008, EXT MARK LANG XML
   *W3C, 2008, XSL TRANSF XSLT
   Zhao C, 2007, J VISUAL LANG COMPUT, V18, P378, DOI 10.1016/j.jvlc.2007.07.004
   2008, MODEL DRIVEN ARCHITE
NR 28
TC 3
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN 10
PY 2009
VL 39
IS 8
BP 773
EP 805
DI 10.1002/spe.914
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 447FL
UT WOS:000266176900002
DA 2024-07-18
ER

PT J
AU Geihs, K
   Barone, P
   Eliassen, F
   Floch, J
   Fricke, R
   Gjorven, E
   Hallsteinsen, S
   Horn, G
   Khan, MU
   Mamelli, A
   Papadopoulos, GA
   Paspallis, N
   Reichle, R
   Stav, E
AF Geihs, K.
   Barone, P.
   Eliassen, F.
   Floch, J.
   Fricke, R.
   Gjorven, E.
   Hallsteinsen, S.
   Horn, G.
   Khan, M. U.
   Mamelli, A.
   Papadopoulos, G. A.
   Paspallis, N.
   Reichle, R.
   Stav, E.
TI A comprehensive solution for application-level adaptation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive software; component framework; compositional adaptation;
   context awareness; model-driven development; utility function
ID REFLECTIVE MIDDLEWARE; CONTEXT; ARCHITECTURE; EXPERIENCES; MANAGEMENT;
   SYSTEM
AB Driven by the emergence of mobile and pervasive computing there is a growing demand For context-aware software systems that can dynamically adapt to their run-time environment. We present the results of project MADAM that has delivered a comprehensive solution for the development and operation of context-aware, self-adaptive applications. The main contributions of MADAM are (a) a sophisticated middleware that supports the dynamic adaptation of component-based applications, and (b) an innovative model-driven development methodology that is based on abstract adaptation models and corresponding model-to-code transformations. MADAM has demonstrated the viability of a general, integrated approach to application-level adaptation. We discuss our experiences with two real-world case studies that were built using the MADAM approach. Copyright (c) 2008 John Wiley & Sons, Ltd.
C1 [Geihs, K.; Khan, M. U.; Reichle, R.] Univ Kassel, D-34121 Kassel, Germany.
   [Barone, P.; Mamelli, A.] HP Italy Innovat Ctr, I-20063 Milan, Italy.
   [Eliassen, F.; Gjorven, E.] Simula Res Lab, NO-1325 Lysaker, Norway.
   [Floch, J.; Hallsteinsen, S.; Horn, G.; Stav, E.] SINTEF ICT, NO-7465 Trondheim, Norway.
   [Fricke, R.] Condat AG, D-10559 Berlin, Germany.
   [Papadopoulos, G. A.; Paspallis, N.] Univ Cyprus, CY-1678 Nicosia, Cyprus.
   [Eliassen, F.] Univ Oslo, NO-0316 Oslo, Norway.
C3 Universitat Kassel; SINTEF; University of Cyprus; University of Oslo
RP Geihs, K (corresponding author), Univ Kassel, D-34121 Kassel, Germany.
EM geihs@vs.uni-kassel.de
RI Horn, Geir/AAV-6432-2020; Papadopoulos, George Angelos/JCO-4266-2023;
   Papadopoulos, George Angelos/ISU-5890-2023; Papadopoulos, George
   Angelos/ABA-3162-2021
OI Horn, Geir/0000-0002-8028-4247; Papadopoulos, George
   Angelos/0000-0001-9250-4916; Geihs, Kurt/0000-0001-9833-6108; Paspallis,
   Nearchos/0000-0002-2636-7973; Stav, Erlend/0000-0001-9957-6744
FU EC [FP6 IST 4159]
FX The contributions Of all members of the MADAM learn are gratefully
   acknowledLed. We thank the anOnYMOLIS reviewers for their constructive
   comments. MADAM WaS Supported financially y the EC under contract FP6
   IST 4159.
CR Aksit M, 2006, SOFTWARE PRACT EXPER, V36, P1227, DOI 10.1002/spe.780
   ALIA M, 2006, 8 INT S DISTR OBJ AP, P1686
   Aurrecoechea C, 1998, MULTIMEDIA SYST, V6, P138, DOI 10.1007/s005300050083
   Bellavista P., 2002, IEEE Pervasive Computing, V1, P81, DOI 10.1109/MPRV.2002.1037726
   Blair GS, 1998, MIDDLEWARE'98: IFIP INTERNATIONAL CONFERENCE ON DISTRIBUTED SYSTEMS PLATFORMS AND OPEN DISTRIBUTED PROCESSING, P191
   Brewer EA, 1998, IEEE PERS COMMUN, V5, P8, DOI 10.1109/98.729719
   Capra L, 2003, IEEE T SOFTWARE ENG, V29, P929, DOI 10.1109/TSE.2003.1237173
   Chan ATS, 2003, IEEE T SOFTWARE ENG, V29, P1072, DOI 10.1109/TSE.2003.1265522
   Chen G H, 2000, TR2000381 DARTM COLL, P1
   CHIMARIS A, 2008, MADAM DELIVERABLE D1
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Fitzpatrick T, 1998, FOURTH INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P128, DOI 10.1109/CDS.1998.675766
   Floch J, 2006, LECT NOTES COMPUT SC, V4025, P64
   FRICKE R, 2008, MADAM DELIVERABLE D6
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   GEIHS K, 2006, IFIP WORK C SOFTW EN, P85
   GEIHS K, 2008, MADAM DELIVERABLE D3
   GJORVEN E, 2006, P 2 IEEE INT WORKSH, P15
   Grace P, 2003, LECT NOTES COMPUT SC, V2888, P1170
   HEINEMAN GT, 2004, INT S COMP BAS SOFTW, P249
   Henricksen K, 2006, PERVASIVE MOB COMPUT, V2, P37, DOI 10.1016/j.pmcj.2005.07.003
   Henricksen K, 2006, SOFTWARE PRACT EXPER, V36, P1307, DOI 10.1002/spe.760
   KATZMAN R, 1996, CAUSES DIAGNOSIS TRE, P15
   Keeney J, 2003, IEEE 4TH INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P3, DOI 10.1109/POLICY.2003.1206953
   Kephart JO, 2007, IEEE INTERNET COMPUT, V11, P40, DOI 10.1109/MIC.2007.2
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   KHAN MU, 2008, IEEE DISTRIBUTED SYS, V9, P13
   Kon F, 2000, LECT NOTES COMPUT SC, V1795, P121
   Lundesgaard SA, 2006, LECT NOTES COMPUT SC, V4025, P228
   Lutfiyya H, 2001, LECT NOTES COMPUT SC, V1995, P185
   Mascolo C, 2002, LECT NOTES COMPUT SC, V2497, P20
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Mikalsen M, 2006, INT WORKSH MAN CONT, P76
   Noble BD, 1999, MOBILE NETW APPL, V4, P245, DOI 10.1023/A:1019159101405
   *OMG, 2008, PTC070816 OMG
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Paspallis N, 2007, LECT NOTES COMPUT SC, V4531, P225
   Poladian V., 2004, P 26 INT C SOFTW ENG
   RUIZ P, 2008, MADAM DELIVERABLE D5
   SHARMA PK, 2004, P INT S DISTR OBJ AP, P1208
   Walsh WE, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P70, DOI 10.1109/ICAC.2004.1301349
   2008, XML METADATA INTERCH
   2008, MOFSCRIPT MODEL TO T
NR 43
TC 31
Z9 32
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR 25
PY 2009
VL 39
IS 4
BP 385
EP 422
DI 10.1002/spe.900
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 421JC
UT WOS:000264354200003
DA 2024-07-18
ER

PT J
AU Monteiro, MP
   Fernandes, JM
AF Monteiro, Miguel P.
   Fernandes, Joao M.
TI An illustrative example of refactoring object-oriented source code with
   aspect-oriented mechanisms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE refactoring; aspect-oriented programming; design patterns
AB This paper describes a refactoring process that transforms a Java source code base into a functionally equivalent AspectJ source code base. The process illustrates the use of a collection of refactorings for aspect-oriented source code, covering the extraction of scattered implementation elements to aspects, the internal reorganization of the extracted aspects and the extraction of commonalities to super-aspects. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Fernandes, Joao M.] Univ Minho, Dept Informat, P-4710057 Braga, Portugal.
   [Fernandes, Joao M.] Univ Minho, CCTC, P-4710057 Braga, Portugal.
   [Monteiro, Miguel P.] Univ Nova Lisboa, Fac Ciencias & Tecnol, Dept Informat, P-28298516 Caparica, Portugal.
C3 Universidade do Minho; Universidade do Minho; Universidade Nova de
   Lisboa
RP Fernandes, JM (corresponding author), Univ Minho, Dept Informat, P-4710057 Braga, Portugal.
EM jmf@di.uminho.pt
RI Fernandes, João M/B-3942-2013; Fernandes, João/IUN-2117-2023; FCTUNL,
   CITI/G-6714-2011
OI Fernandes, João M/0000-0003-1174-1966; Monteiro,
   Miguel/0000-0001-6043-8176
CR [Anonymous], P OBJ OR PROGR SYST
   Bruntink M, 2005, PROC IEEE INT CONF S, P37
   Cole L., 2005, Proc. 4th ACM International Conference on Aspect-Oriented Software Development (AOSD), P123
   Colyer A., 2004, P 3 INT C ASPECT ORI, P56, DOI DOI 10.1145/976270.976279
   Colyer Adrian., 2005, ASPECT ORIENTED SOFT, P123
   Cooper J.W., 2000, JAVA DESIGN PATTERNS
   Eckel B., 2006, THINKING JAVA, V4th
   Eckel B., Thinking in Patterns Revision 0.9
   Elrad T, 2001, COMMUN ACM, V44, P33, DOI 10.1145/383845.383854
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   Filman RobertE., 2005, ASPECT ORIENTED SOFT, P21
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   FUENTS J, 2005, LATE WORKSH AOSD 200
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia A, 2006, LECT NOTES COMPUT SC, V3880, P36
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   Griswold W. G, 1991, THESIS U WASHINGTON
   HANENBERG S, 2003, 4 ANN INT C OBJ OR I, P19
   HANNEMANN J, 2006, LATER WORKSH AOSD 20
   HANNEMANN J, 2005, P 4 INT C ASP OR SOF, P135
   Iwamoto M., 2003, 4 AOSD MOD UML WORKS
   KE WF, 1990, P S OBJ OR PROGR EMP, P145
   KELLEN A, 2005, SPLAT WORKSH AOSD 20
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   KOPPEN C, 2004, P INT WORKSH ASP SOF
   KULESZA U, 2005, 20 ANN ACM SIGPLAN C, P136
   LADDAD R, 2003, ASPECT ORIENTED RE 1
   Laddad R., 2003, ASPECTJ ACTION PRACT
   LAGAISSE B, 2006, SPLAT WORKSH AOSD 20
   LESIECKI N, 2005, ENHANCE DESIGN PAT 2
   Martin Michael., 2005, OOPSLA '05: Proceedings of the 20th annual ACM SIGPLAN conference on Object oriented programming systems languages and applications, P365
   Mezini M, 2005, ASPECT ORIENTED SOFT, P165
   Miles Russ., 2005, ASPECTJ COOKBOOK
   Monteiro M., 2005, Proceedings of the 4th international conference on Aspect-oriented software development, P111
   Monteiro MP, 2005, PROC IEEE INT CONF S, P17
   MONTEIRO MP, 2005, THESIS U MINHO BRAGA
   MONTEIRO MP, 2004, 3 INT C ASPECT ORIEN
   NORDBERG IM, 2005, ASPECET ORIENTED SOF, P557
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Tonella P, 2004, PROC IEEE INT CONF S, P220, DOI 10.1109/ICSM.2004.1357806
   TOURWE T, 2003, WORKSH SOFTW ENG PRO
   VANDEURSEN A, 2005, SENR0507 CENTR WISK
   WAKE W, 2005, REFACTORING WORKBOOK
   Wloka J, 2005, P WORKSH LINK ASP TE
   WLOKA J, 2006, P WORKSH LINK ASP TE
   Zhang C, 2003, LECT NOTES COMPUT SC, V2888, P1243
NR 48
TC 9
Z9 9
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2008
VL 38
IS 4
BP 361
EP 396
DI 10.1002/spe.835
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 286OD
UT WOS:000254854300002
OA Green Published
DA 2024-07-18
ER

PT J
AU Nagpal, R
   Srikant, YN
AF Nagpal, Rahul
   Srikant, Y. N.
TI Pragmatic integrated scheduling for clustered VLIW architectures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE scheduling; clustered VLIW architectures; cluster scheduling
AB Clustered architecture processors are preferred for embedded systems because centralized register file architectures scale poorly in terms of clock rate, chip area, and power consumption. Scheduling for clustered architectures involves spatial concerns (where to schedule) as well as temporal concerns (when to schedule). Various clustered VLIW configurations, connectivity types, and inter-cluster communication models present different performance trade-offs to a scheduler. The scheduler is responsible for resolving the conflicting requirements of exploiting the parallelism offered by the hardware and limiting the communication among clusters to achieve better performance. In this paper, we describe our experience with developing a pragmatic scheme and also a generic graph-matching-based framework for cluster scheduling based on a generic and realistic clustered machine model. The proposed scheme effectively utilizes the exact knowledge of available communication slots, functional units, and load on different clusters as well as future resource and communication requirements known only at schedule time. The proposed graph-matching-based framework for cluster scheduling resolves the phase-ordering and fixed-ordering problem associated with earlier schemes for. scheduling clustered VLIW architectures. The experimental evaluation in the context of a state-of-art commercial clustered architecture (using real-world benchmark programs) reveals a significant performance improvement over the earlier proposals, which were mostly evaluated using compiled simulation of hypothetical clustered architectures. Our results clearly highlight the importance of considering the peculiarities of commercial clustered architectures and the hard-nosed performance measurement. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Nagpal, Rahul; Srikant, Y. N.] Indian Inst Sci, Dept CSA, Bangalore 560012, Karnataka, India.
C3 Indian Institute of Science (IISC) - Bangalore
RP Srikant, YN (corresponding author), Indian Inst Sci, Dept CSA, Bangalore 560012, Karnataka, India.
EM srikant@csa.iisc.emet.in
CR [Anonymous], P S HIGH PERF COMP A
   CAPITANIO A, 1992, P 25 ANN INT S MICR, V25, P292
   CHOW FC, 1990, ACM T PROGR LANG SYS, V12, P501, DOI 10.1145/88616.88621
   Faraboschi P, 2000, PROCEEDING OF THE 27TH INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE, P203, DOI [10.1145/342001.339682, 10.1109/ISCA.2000.854391]
   Faraboschi P., 1998, CLUSTERED INSTRUCTIO
   Farkas KI, 1997, INT SYMP MICROARCH, P149, DOI 10.1109/MICRO.1997.645806
   FISHER JA, 1998, 25 YEARS INT S COMP, P263
   Fridman J, 2000, IEEE MICRO, V20, P66, DOI 10.1109/40.820055
   Ho R, 2001, P IEEE, V89, P490, DOI 10.1109/5.920580
   Johnson W, 1991, SUPERSCALAR MICROPRO
   Kailas K., 2001, P 7 INT S HIGH PERF
   Lapinskii VS, 2002, ACM T DES AUTOMAT EL, V7, P430, DOI 10.1145/567270.567274
   Lee CH, 1997, INT SYMP MICROARCH, P330, DOI 10.1109/MICRO.1997.645830
   Lee W, 2002, INT SYMP MICROARCH, P111, DOI 10.1109/MICRO.2002.1176243
   LEUPERS R, 2000, P INT C PAR ARCH COM
   Matzke D, 1997, COMPUTER, V30, P37, DOI 10.1109/2.612245
   NAGPAL R, 2007, PRAGMATIC INTEGRATED
   Özer E, 1998, 31ST ANNUAL ACM/IEEE INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, PROCEEDINGS, P308, DOI 10.1109/MICRO.1998.742792
   Palacharla S, 1997, ACM COMP AR, P206, DOI 10.1145/384286.264201
   Pechanek GG, 2000, EUROMICRO CONF PROC, P348, DOI 10.1109/EURMIC.2000.874652
   Qin W, 2003, COMPILER DESIGN HANDBOOK, P535
   RAU BR, 1993, J SUPERCOMPUT, V7, P9, DOI 10.1007/BF01205181
   SESHAN N, 1998, IEEE SIGNAL PROCESSI, V15
   Srikant Y.N., 2002, COMPILER DESIGN HDB
   *TEX INSTR INC, 1998, TMS320C6000 CPU
   *TEX INSTR INC, 2003, TMS320C6000
   Zalamea J, 2001, INT SYMP MICROARCH, P160
NR 27
TC 7
Z9 7
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2008
VL 38
IS 3
BP 227
EP 257
DI 10.1002/spe.826
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 284BA
UT WOS:000254679000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Lee, EK
   Martel, CU
AF Lee, Eric K.
   Martel, Charles U.
TI When to use splay trees
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE splay tree; cache performance; empirical; heuristic
AB In this paper we present new empirical results for splay trees. These results provide a better understanding of how cache performance affects query execution time. Our results show that splay trees can have faster lookup times compared with randomly built binary search trees (BST) under certain settings. In contrast, previous experiments have shown that because of the instruction overhead involved in splaying, splay trees are less efficient in answering queries than randomly built BSTs-even when the data sets are heavily skewed (a favorable setting for splay trees). We show that at large tree sizes the difference in cache performance between the two types of trees is significant. This difference means that splay trees are faster than BSTs for this setting-despite still having a higher instruction count. Based on these results we offer guidelines in terms of tree size, access pattern, and cache size as to when splay trees will likely be more efficient. We also present a new splaying heuristic aimed at reducing instruction count and show that it can improve on standard splaying by 10-27%. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Lee, Eric K.; Martel, Charles U.] Univ Calif Davis, Dept Comp Sci, Davis, CA 95618 USA.
C3 University of California System; University of California Davis
RP Lee, EK (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95618 USA.
EM leeer@cs.ucdavis.edu
RI Lee, Kam Pui Eric/I-3685-2018
OI Lee, Kam Pui Eric/0000-0001-8267-9384
CR Albers S, 2002, INFORM PROCESS LETT, V81, P213, DOI 10.1016/S0020-0190(01)00230-7
   [Anonymous], 2003, Computer Architecture
   [Anonymous], 1949, Human behaviour and the principle of least-effort
   BELL J, 1993, SOFTWARE PRACT EXPER, V23, P369, DOI 10.1002/spe.4380230403
   BOLSTER A, 2003, THESIS BOND U SCH IN
   Breslau L, 1999, IEEE INFOCOM SER, P126, DOI 10.1109/INFCOM.1999.749260
   FURER M, 1999, P ACM SIAM S DISCR A
   Hennessy John L., 1997, Computer Organization and Design: The Hardware/Software Interface, VSecond
   IANCU C, 2001, UCSBTRCS0108
   *INTEL, 1999, INT ARCH OPT REF MAN
   JONES DW, 1986, COMMUN ACM, V29, P300, DOI 10.1145/5684.5686
   LEE EK, 2005, THESIS U CALIFORNIA
   *RIGHTMARK, 2004, RIGHTMARK MEM AN
   SLEATOR DD, 1985, J ACM, V32, P652, DOI 10.1145/3828.3835
   Weiss MarkAllen., 1997, DATA STRUCTURES ALGO
   Williams HE, 2001, SOFTWARE PRACT EXPER, V31, P925, DOI 10.1002/spe.394
NR 16
TC 2
Z9 3
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2007
VL 37
IS 15
BP 1559
EP 1575
DI 10.1002/spe.813
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 243BT
UT WOS:000251770600001
DA 2024-07-18
ER

PT J
AU Chen, B
   Cheng, HH
   Palen, J
AF Chen, Bo
   Cheng, Harry H.
   Palen, Joe
TI Mobile-C: a mobile agent platform for mobile C/C++ agents
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agent technology; mobile agents; mobility; FIPA; C/C plus plus
   interpreter; Ch
ID REAL-TIME; DETECTION SYSTEM; ARCHITECTURE; MANAGEMENT; SOFTWARE;
   INFRASTRUCTURE; PERFORMANCE; COMPLEX; CODE
AB This article presents the design, implementation and application of Mobile-C, an IEEE Foundation for Intelligent Physical Agents (FIPA) compliant agent platform for mobile C/C++ agents. IEEE FIPA standards are a set of specifications designed to ensure the interoperation between agents in a heterogeneous network. Mobile-C conforms to the FIPA standards both at agent and platform level. Mobile-C extends FIPA standards to support mobile agents by integrating an embeddable C/C++ interpreter-Chin-to the platform as a mobile agent execution engine and defining a mobile agent mobility protocol to direct agent migration process. Agent migration in Mobile-C is achieved through FIPA agent communication language (ACL) messages encoded in XML. Using FIPA ACL messages for agent migration provides a straightforward but effective way for inter-platform agent migration in FIPA compliant agent systems as both agent communication and migration can share the same communication mechanism. Choosing scriptable C/C++ as a mobile agent language allows mobile agents easy interfacing with low-level software modules and underlying hardware. Mobile-C has been used to simulate highway traffic detection and management. The agent-based traffic detection and management system uses agent technology for real-time distributed traffic information fusion. Mobile agents in the system are used for dynamic code deployment and performing unanticipated actions. The application of agent technology shows a great potential for enhancing the interoperability, flexibility and distributed computing capabilities of intelligent transportation systems. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Calif Davis, Dept Aeronaut & Mech Engn, Integrat Engn Lab, Davis, CA 95616 USA.
   Calif Dept Transportat, Off New Technol & Res, Sacramento, CA 94273 USA.
C3 University of California System; University of California Davis
RP Cheng, HH (corresponding author), Univ Calif Davis, Dept Aeronaut & Mech Engn, Integrat Engn Lab, Davis, CA 95616 USA.
EM hhcheng@ucdavis.edu
RI Chen, Bo/B-3447-2018
CR Adler JL, 2002, TRANSPORT RES C-EMER, V10, P433, DOI 10.1016/S0968-090X(02)00030-X
   Baumann J, 2002, SOFTWARE PRACT EXPER, V32, P575, DOI 10.1002/spe.450
   Bölöni L, 2000, CONCURRENCY-PRACT EX, V12, P845, DOI 10.1002/1096-9128(20000810)12:9<845::AID-CPE494>3.0.CO;2-J
   Brennan RW, 2002, IEEE T ROBOTIC AUTOM, V18, P444, DOI 10.1109/TRA.2002.802211
   Casanova H, 1998, PARALLEL COMPUT, V24, P1777, DOI 10.1016/S0167-8191(98)00077-5
   CHEN B, 2004, P ASME 24 COMP ENG C, P543
   Chen B, 2005, DETC 2005: ASME INTERNATIONAL DESIGN ENGINEERING TECHNICAL CONFERENCES AND COMPUTERS AND INFORMATION IN ENGINEERING CONFERENCE, 2005, VOL 4, P37
   CHEN BY, 2005, THESIS U CALIFORNIA
   Chen WSE, 2002, INFORM SCIENCES, V141, P3, DOI 10.1016/S0020-0255(01)00189-X
   Cheng H., 2006, C/C++ Users Journal, V24, P6
   Cheng H. H., 1993, Scientific Programming, V2, P49
   Cheng HH, 2005, IEEE T INTELL TRANSP, V6, P147, DOI 10.1109/TITS.2005.848364
   Cheng HH, 2001, IEEE-ASME T MECH, V6, P170, DOI 10.1109/3516.928732
   Choi SPM, 2001, COMPUT NETW, V37, P195, DOI 10.1016/S1389-1286(01)00215-8
   CHONG C, 1999, P 1 INT WORKSH MOB A, P37
   Chou LD, 2003, LECT NOTES ARTIF INT, V2744, P280
   Dia H, 2002, TRANSPORT RES C-EMER, V10, P331, DOI 10.1016/S0968-090X(02)00025-6
   Eo SY, 2000, COMPUT CHEM ENG, V24, P729, DOI 10.1016/S0098-1354(00)00329-X
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   Gray RS, 1996, PROCEEDINGS OF THE FOURTH ANNUAL TCL/TK WORKSHOP, P9
   Gray RS, 2002, SOFTWARE PRACT EXPER, V32, P543, DOI 10.1002/spe.449
   Griss M., 2001, Component-based software engineering: putting the pieces together, P641
   Hernández JZ, 2002, TRANSPORT RES C-EMER, V10, P473, DOI 10.1016/S0968-090X(02)00032-3
   Hidas P, 2002, TRANSPORT RES C-EMER, V10, P351, DOI 10.1016/S0968-090X(02)00026-8
   HUANG J, 1995, APPL ARTIF INTELL, V9, P401, DOI 10.1080/08839519508945482
   *IEEE FIPA, 2006, PUBL AV AG PLATF IMP
   *IEEE FIPA, AG COMM LANG SPEC
   *JADE BOARD, 2006, JAV AG DEVELOPMENT F
   Jennings NR, 2003, IEEE CONTR SYST MAG, V23, P61, DOI 10.1109/MCS.2003.1200249
   Jennings NR, 2001, COMMUN ACM, V44, P35, DOI 10.1145/367211.367250
   JENNINGS NR, 1998, INT J AUTONOMOUS AGE, V1, P7
   Johansen D, 2002, SOFTWARE PRACT EXPER, V32, P605, DOI 10.1002/spe.451
   Lange D. B., 1998, PROGRAMMING DEPLOYIN
   Lange DB, 1999, COMMUN ACM, V42, P88, DOI 10.1145/295685.298136
   Logi F, 2002, TRANSPORT RES C-EMER, V10, P507, DOI 10.1016/S0968-090X(02)00033-5
   Luck M, 2004, AUTON AGENT MULTI-AG, V9, P199, DOI 10.1023/B:AGNT.0000038057.78313.87
   MALIK J, 1997, INTELLIMOTION, V6, P6
   *MICR CORP, OP DAT CONN
   Noda I, 2003, AUTON AGENT MULTI-AG, V7, P101, DOI 10.1023/A:1024128904944
   *OBJ MAN GROUP, 2006, MOB AG SYST INT FAC
   Odell J. J., 2001, Agent-Oriented Software Engineering. First International Workshop, AOSE 2000. Revised Papers (Lecture Notes in Computer Science Vol.1957), P121
   Ono K, 2002, SOFTWARE PRACT EXPER, V32, P497, DOI 10.1002/spe.447
   OSTLAND M, 1997, INTELLIMOTION, V6, P4
   Parunak HV, 2001, INTEGR COMPUT-AID E, V8, P45
   Peine H, 2002, SOFTWARE PRACT EXPER, V32, P515, DOI 10.1002/spe.448
   PEINE H, 2002, THESIS U KAISERSLAUT
   Sandholm T, 2002, COMPUT INTELL-US, V18, P656, DOI 10.1111/1467-8640.t01-1-00209
   Schapire RE., 2002, MSRI WORKSHOP NONLIN, P1
   Schmidt DC, 2002, COMMUN ACM, V45, P43, DOI 10.1145/508448.508472
   Shen W., 1998, PAAM 98. Proceedings of the Third International Conference on the Practical Application of Intelligent Agents and Multi-Agent Technology, P533
   *SOFT INC, 2006, CH AN EMB C C INT
   *SOFT INC, 2006, CH ODBC
   Stathis K, 2002, INTERACT COMPUT, V14, P663, DOI 10.1016/S0953-5438(02)00014-0
   Sudmann N.P., 2000, P IEEE ICDCS00 WORKS, P73
   Trivedi MM, 2000, 2000 IEEE INTELLIGENT TRANSPORTATION SYSTEMS PROCEEDINGS, P155, DOI 10.1109/ITSC.2000.881042
   Tu HC, 2000, DECIS SUPPORT SYST, V28, P255, DOI 10.1016/S0167-9236(99)00089-5
   *U CAL INT ENG LAB, 2006, CH SQLITE
   *U KAIS, MACE MOB AG COD ENV
   Wada H, 2002, INTEGR COMPUT-AID E, V9, P251
   Wang ZQ, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.27
   Wang ZQ, 2003, J MECH DESIGN, V125, P802, DOI 10.1115/1.1625401
   Wong D, 1997, LECT NOTES COMPUT SC, V1219, P86
   WOOLDRIDGE M, 2001, LECT NOTES ARTIF INT, V1957, P1
   Yokoo M, 2001, NEW GENERAT COMPUT, V19, P369, DOI 10.1007/BF03037574
   Zambonelli F, 2003, LECT NOTES ARTIF INT, V2577, P13
NR 65
TC 76
Z9 90
U1 1
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2006
VL 36
IS 15
BP 1711
EP 1733
DI 10.1002/spe.742
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 114XW
UT WOS:000242699900004
DA 2024-07-18
ER

PT J
AU Engebretsen, L
AF Engebretsen, Lars
TI Platform-independent code conversion within the C++ locale framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C plus; locale; code conversion
AB This paper describes some of the author's experiences from a C++ implementation of a concordance program for texts in Old West Norse (also known as Old Icelandic) and Runic Swedish. Since the input to the program used a character repertoire that no standard one-byte character encoding covers, it was natural to use Unicode to represent data both inside the program and in external files. Inside the program, each character was represented with C++ 'wide characters'; the input and output was represented in UTF-8. The author constructed C++ code conversion facets that convert data between those two representations during file I/O. This enabled him to successfully compile, and run, the concordance program on both Linux (Fedora Core 3 with gcc 3.4.2) and Windows XP (using Visual C++ NET 2003). The only necessary change to the source when changing platform was isolated to the lines selecting which code conversion facet to use-all other pieces of code remained unchanged. In particular, the author could still use the standard C++ locale framework for collation and code conversion, in spite of the fact that the library-provided code conversion facets had been replaced. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Royal Inst Technol, Dept Numer Anal & Comp Sci, SE-10044 Stockholm, Sweden.
C3 Royal Institute of Technology
RP Engebretsen, L (corresponding author), Royal Inst Technol, Dept Numer Anal & Comp Sci, SE-10044 Stockholm, Sweden.
EM enge@kth.se
CR [Anonymous], 2003, 148822003 ISOIEC
   [Anonymous], 2000, The C++ Programming Language
   [Anonymous], 2003, The Unicode Standard Version 4.0.0
   ELMEVIK L, 1997, NYTT RUNER MELDINGSB, V12, P33
   ELMEVIK L, 1993, NYTT RUNER MELDINGSB, V8, P32
   *ISO IEC, 1998, 885911998 ISOIEC
   LANGER A, 2000, STANDARD C IO STREAM
   PETERSON L, 1994, BIRKA STUDIES, V3, P305
NR 8
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2006
VL 36
IS 15
BP 1643
EP 1654
DI 10.1002/spe.734
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 114XW
UT WOS:000242699900001
OA Bronze
DA 2024-07-18
ER

PT J
AU Soares, S
   Borba, P
   Laureano, E
AF Soares, Sergio
   Borba, Paulo
   Laureano, Eduardo
TI Distribution and persistence as aspects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE aspect-oriented programming; separation of concerns; framework;
   persistence; distribution
AB This paper reports our experience using AspectJ, a general-purpose aspect-oriented extension to Java, to implement distribution and persistence concerns in a Web-based information system. This system was originally implemented in Java and restructured with AspectJ. Our main contribution is to show that AspectJ is useful for implementing several persistence and distribution concerns in the considered application, but also in similar applications. We have also identified interferences between the implemented aspects and a few drawbacks in the language, so we suggest some minor language modifications that could significantly improve similar implementations. Despite those problems, we argue that the AspectJ implementation is superior to the pure Java implementation. Some of the aspects implemented in our experiment are abstract and constitute a simple aspect framework. The other aspects are application specific but we suggest that different implementations might follow the same aspect patterns. The framework and the patterns allow us to propose architecture-specific guidelines that provide practical advice for both restructuring and implementing certain kinds of persistent and distributed applications with AspectJ. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Pernambuco State Univ, Dept Comp Syst, BR-50720001 Recife, PE, Brazil.
   Univ Fed Pernambuco, Informat Ctr, BR-50732970 Recife, PE, Brazil.
   Microsoft Corp, Redmond, WA 98052 USA.
C3 Universidade Federal de Pernambuco; Microsoft
RP Soares, S (corresponding author), Univ Pernambuco, Escola Politecn, Dept Sistemas Computacionais, Rua Benfica,455, BR-50720001 Recife, PE, Brazil.
EM sergio@dsc.upe.br
RI Soares, Sergio/K-3712-2012; Borba, Paulo/C-5617-2013
OI Soares, Sergio/0000-0002-4428-2535; Borba, Paulo/0000-0002-0381-2843
CR ALVES V, 2001, P 1 LAT AM C PATT LA
   *ASP TEAM, 2005, ASP PROGR GUID
   Baniassad E.L.A., 2002, 1 INT C ASPECT ORIEN, P120
   BECKER C, 1998, INT WORKSH ASP OR PR
   BODKIN R, 2003, 2 INT C ASP OR SOFTW
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   BORBA P, 1999, ENG DISTR OBJ WORKSH, P40
   CASTOR F, 2001, 15 BRAZ S SOFTW ENG, P374
   Coady Y., 2003, P 2 INT C ASPECT ORI, P50
   DAMORIM M, 2002, WORKSH GEN PROGR ECO
   ELMASRI R, 1994, FUNDAMENTALS DATABAS
   Elrad T, 2001, COMMUN ACM, V44, P28
   Filman R.E., 2000, WORKSH ADV SEP CONC
   Flanagan D., 2001, JavaScript: The Definitive Guide
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Gosling J., 2000, The Java Language Specification
   Hanenberg Stefan., 2003, Proceedings of the 2nd International Conference On Asped-Oriented Software Development (AOSD'03), P80
   HUNTER J, 1998, JAVA SERVLET PROGRAM
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Kienzle J, 2002, LECT NOTES COMPUT SC, V2374, P37
   LOUGHRAN N, 2004, P 8 INT C SOFTW REUS, P127
   MASSONI T, 2001, P 1 LAT AM C PATT LA
   MEZINI M, 2004, P INT S FDN SOFTW EN, P127
   Monson-Haefel Richard., 2001, ENTERPRISE JAVABEANS
   Murphy GC, 2001, COMMUN ACM, V44, P75, DOI 10.1145/383845.383862
   *OBJ TECHN INT INC, 2001, ECL PLATF TECHN OV
   ORFALI R, 1998, CLIENT SERVER PROGRA
   Pawlak R, 2004, SOFTWARE PRACT EXPER, V34, P1119, DOI 10.1002/spe.605
   Rashid Awais., 2003, AOSD 03, P120
   Soares S, 2002, ACM SIGPLAN NOTICES, V37, P174, DOI 10.1145/583854.582437
   SOARES S, 2002, 2 LAT AM C PATT LANG
   SOARES S, 2005, THESIS FEDERAL U PER
   SOARES S, 2002, P 1 WORKSH SOFTW DEV
   *SUN MICR, 2005, JAV REM METH INV
   *SUN MICR INC, 2002, ENT JAV SPEC VERS 2
   TATSUBORI M, 2001, OOPSLA 01
   TATSUBORI M, 2004, P 3 INT C ASP OR SOF, P7
   WALDO J, 1994, TR9429 SUN MICR INC
   WALKER RJ, 2000, P ACM SIGSOFT 8 INT, P69
   Zhang C., 2004, Proc. OOPSLA 2004, P188
   Zhang Charles., 2003, AOSD 03, P130
   [No title captured]
NR 44
TC 31
Z9 33
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2006
VL 36
IS 7
BP 711
EP 759
DI 10.1002/spe.715
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 053TP
UT WOS:000238328500003
DA 2024-07-18
ER

PT J
AU Buchheim, C
   Jünger, M
   Leipert, S
AF Buchheim, C
   Jünger, M
   Leipert, S
TI Drawing rooted trees in linear time
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE graph drawing; trees; Reingold-Tilford algorithm; Walker's algorithm
AB The aim of automatic graph drawing is the development of algorithms for creating nice and easily readable layouts of abstractly given graphs. For the special case of rooted trees of unbounded degree, John Q. Walker 11 presented a drawing algorithm in this journal in 1990. This algorithm is an extension of the Reingold-Titford algorithm. It yields very good results and is therefore widely used. Furthermore, it is widely assumed to run in linear time, as the author claims in his article. However, the algorithm in its presented form clearly needs quadratic runtime. We explain the reasons for that and state a revised algorithm that creates the same layouts in linear time. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Cologne, Inst Informat, D-50969 Cologne, Germany.
   Gerling Lebensversicherungs AG, Abt MTG, D-50670 Cologne, Germany.
C3 University of Cologne
RP Buchheim, C (corresponding author), Univ Cologne, Inst Informat, Pohligstr 1, D-50969 Cologne, Germany.
EM buchheim@informatik.uni-koeln.de
OI Buchheim, Christoph/0000-0001-9974-404X
CR REINGOLD EM, 1981, IEEE T SOFTWARE ENG, V7, P223, DOI 10.1109/TSE.1981.234519
   SCHIEBER B, 1988, LECTURE NOTES COMPUT, V319, P111
   WALKER JQ, 1990, SOFTWARE PRACT EXPER, V20, P685, DOI 10.1002/spe.4380200705
   WETHERELL C, 1979, IEEE T SOFTWARE ENG, V5, P514, DOI 10.1109/TSE.1979.234212
NR 4
TC 3
Z9 4
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2006
VL 36
IS 6
BP 651
EP 665
DI 10.1002/spe.713
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 042QV
UT WOS:000237544800004
DA 2024-07-18
ER

PT J
AU Barr, R
   Haas, ZJ
   van Renesse, R
AF Barr, R
   Haas, ZJ
   van Renesse, R
TI JiST: an efficient approach to simulation using virtual machines
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE discrete event simulation; simulation languages; Java; wireless
   networks; aspect-oriented programming
ID WIRELESS
AB Discrete event simulators are important scientific tools and their efficient design and execution is the subject of much research. In this paper, we propose a new approach for constructing simulators that leverages virtual machines and combines advantages from the traditional systems-based and language-based simulator designs. We introduce JiST, a Java-based simulation system that executes discrete event simulations both efficiently and transparently by embedding simulation semantics directly into the Java execution model. The system provides standard benefits that the modern Java runtime affords. In addition, JiST is efficient, out-performing existing highly optimized simulation runtimes. As a case study, we illustrate the practicality of the JiST framework by applying it to the construction of SWANS, a scalable wireless ad hoc network simulator. We simulate million node wireless networks, which represents two orders of magnitude increase in scale over what existing simulators can achieve on equivalent hardware and at the same level of detail. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Cornell Univ, Dept Comp Sci, Ithaca, NY 14853 USA.
   Cornell Univ, Dept Elect Engn, Ithaca, NY 14853 USA.
C3 Cornell University; Cornell University
RP Cornell Univ, Dept Comp Sci, Ithaca, NY 14853 USA.
EM rimon@acm.org
CR ABRAMS M, 1988, WINT SIM C DEC, P210
   Alpern B, 1999, ACM SIGPLAN NOTICES, V34, P314, DOI 10.1145/320385.320418
   AMERICA P, 1990, SIGPLAN NOTICES, V25, P161, DOI 10.1145/97946.97966
   ANDERSON D, 2001, ACM S OP SYST PRINC
   [Anonymous], PLANT MORPHOL
   ARIDOR Y, 1999, INT C PAR PROC SEPT
   Baezner D., 1990, Distributed Simulation. Proceedings of the SCS Multiconference, P211
   BAGLEY D, 2001, GREAT COMPUTER LANGU
   Bagrodia R, 1998, COMPUTER, V31, P77, DOI 10.1109/2.722293
   BAGRODIA RL, 1994, IEEE T SOFTWARE ENG, V20, P225, DOI 10.1109/32.277572
   BARR R, 2001, 20011853 CORN U COMP
   BARR R, 2004, THESIS CORNELL U
   BARR R, 2002, ACM SIGOPS OPERATING, V36, P1
   BARR R, 2004, JIST SWANS WEBSITE
   BEGEL A, 2000, PICOTHREADS LIGHTWEI
   BERSHAD B, 1995, ACM S OP SYST PRINC
   BHATTACHARYYA S, 2002, M0223 UCBERL EECS
   Biberstein M., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P28
   BOUCHENAK S, 2002, 0261 INRIA
   Boukerche A, 2001, WIREL NETW, V7, P467, DOI 10.1023/A:1016770526188
   BRUCE D, 1997, WORKSH DOM SPEC LANG
   BRYAN OF, 1989, WINT SIM C DEC, P122
   Carothers CD, 1999, THIRTEENTH WORKSHOP ON PARALLEL AND DISTRIBUTED SIMULATION - PROCEEDINGS, P126, DOI [10.1109/PADS.1999.766169, 10.1145/347823.347828]
   DAHL OJ, 1966, COMMUN ACM, V9, P671, DOI 10.1145/365813.365819
   DAHM M, 2001, B1798 FREIE U BERL I
   DAS S, 1994, 1994 WINTER SIMULATION CONFERENCE PROCEEDINGS, P1332
   de Lara J, 2003, SIMUL-T SOC MOD SIM, V79, P19, DOI 10.1177/0037549703253455
   Floyd S McCanne S., 1995, NETWORK SIMULATOR
   FUJIMOTO R, 2003, S MOD AN SIM COMP TE
   FUJIMOTO RM, 1990, COMMUN ACM, V33, P30, DOI 10.1145/84537.84545
   Fujimoto RM, 1995, 1995 WINTER SIMULATION CONFERENCE PROCEEDINGS, P118
   GEHANI S, 2000, PAR DISTR COMP SYST
   Gomes F, 1995, 1995 WINTER SIMULATION CONFERENCE PROCEEDINGS, P706
   Gosling James, 1996, The Java Language Specification
   HAAS ZJ, 1997, IEEE C UN PERS COMM
   Hawblitzel C, 1998, PROCEEDINGS OF THE USENIX 1998 ANNUAL TECHNICAL CONFERENCE, P259
   Healy KJ, 1997, PROCEEDINGS OF THE 1997 WINTER SIMULATION CONFERENCE, P475, DOI 10.1145/268437.268545
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   HOWELL F, 1998, INT C WEB BAS MOD SI
   JEFFERSON DR, 1987, ACM S OP SYST PRINC, P77
   Johnson D.B., 1996, Mobile Computing, DOI DOI 10.1007/978-0-585-29603-65
   JOHNSON DB, 1999, DARPA NIST WORKSH VA
   JOINES JA, 1994, 1994 WINTER SIMULATION CONFERENCE PROCEEDINGS, P157
   KAFURA DG, 1989, COMPUT J, V32, P297, DOI 10.1093/comjnl/32.4.297
   Kelly OE, 2000, MOBILE NETW APPL, V5, P199, DOI 10.1023/A:1019112713217
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kilgore RA, 1998, 1998 WINTER SIMULATION CONFERENCE PROCEEDINGS, VOLS 1 AND 2, P1707, DOI 10.1109/WSC.1998.746051
   LINDHOLM T, 1996, JAVA VIRTUAL MACHINE
   LIU J, 2001, SIM INT WORKSH
   Ma MJM, 1999, INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOL VI, PROCEEDINGS, P2781
   MARTIN DE, 1996, INT C SYST SCI JAN, P383
   Martin JM, 1995, 1995 WINTER SIMULATION CONFERENCE PROCEEDINGS, P763
   Mascarenhas E, 1995, 1995 WINTER SIMULATION CONFERENCE PROCEEDINGS, P690
   MISRA J, 1986, COMPUT SURV, V18, P39, DOI 10.1145/6462.6485
   NAOUMOV V, 2003, ACM INT WORKSH MOD A, P50
   Nicol D., 1994, Annals of Operations Research, V53, P249, DOI 10.1007/BF02136831
   Nicol DM, 1997, PROCEEDINGS OF THE 1997 WINTER SIMULATION CONFERENCE, P93, DOI 10.1145/268437.268455
   NICOL DM, 1997, WORKSH PAR DISTR SIM
   NICOL DM, 2002, COMP NETWORK SIMULAT
   PECHTCHANSKI I, 2002, JAVA GRANDE      NOV
   PERUMALLA K, 1998, PERFORM EVALUATION, V25, P4
   Philippsen M, 1997, CONCURRENCY-PRACT EX, V9, P1225, DOI 10.1002/(SICI)1096-9128(199711)9:11<1225::AID-CPE332>3.0.CO;2-F
   Philippsen M, 2000, CONCURRENCY-PRACT EX, V12, P495, DOI 10.1002/1096-9128(200005)12:7<495::AID-CPE496>3.0.CO;2-W
   PREISS BR, 1989, SCS MULT DISTR SIM, P139
   Ratnasamy S., 2001, ACM SIGCOMM
   RILEY G, 2002, C GRAND CHALL MOD SI
   RILEY G, 2003, PDNS
   RILEY G, 1999, S MOD AN SIM COMP TE
   RILEY G, 2003, SIGCOMM WORKSH MOD M, P5
   ROWSTRON A, 2001, ACM C DISTR SYST PLA, P329
   SAKAMOTO T, 2000, INT S MOB AG
   Schwetman H, 1996, 1996 WINTER SIMULATION CONFERENCE PROCEEDINGS, P517, DOI 10.1145/256562.256735
   Sekiguchi T., 2001, Advances in exception handling techniques (Lecture Notes in Computer Science Vol.2022), P217
   STEINMAN JS, 1991, SCS MULT ADV PAR DIS, P95
   Stoica I, 2001, ACM SIGCOMM COMP COM, V31, P149, DOI 10.1145/964723.383071
   TOLKSDORF R, 1996, PROGRAMMING LANGUAGE
   TOMLINSON C, 1989, OOPSLA 89 C OBJ OR P, P103
   TYAN HY, 2001, W SIM MULT JAN
   Vallee-Rai R., 1999, CASCON 1999, P125
   WALDORF J, 1994, INT J COMPUTER SIMUL, V4, P235
   WHITE B, 2002, ACM S OP SYST DES IM
   Zeng X, 1998, TWELFTH WORKSHOP ON PARALLEL AND DISTRIBUTED SIMULATION - PADS'98, PROCEEDINGS, P154, DOI 10.1109/PADS.1998.685281
   Zhao B., 2001, COMPUTER, V74, P11
NR 83
TC 126
Z9 141
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2005
VL 35
IS 6
BP 539
EP 576
DI 10.1002/spe.647
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 923JN
UT WOS:000228906300002
DA 2024-07-18
ER

PT J
AU Uh, GR
   Wang, YH
   Whalley, D
   Jinturkar, S
   Paek, Y
   Cao, V
   Burns, C
AF Uh, GR
   Wang, YH
   Whalley, D
   Jinturkar, S
   Paek, Y
   Cao, V
   Burns, C
TI Compiler transformations for effectively exploiting a Zero Overhead Loop
   Buffer
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler; optimization; DSP; ZOLB
AB A Zero Overhead Loop Buffer (ZOLB) is an architectural feature that is commonly found in DSP processors. This buffer can be viewed as a compiler managed cache that contains a sequence of instructions that will be executed a specified number of times without incurring any loop overhead. Unlike loop unrolling, a loop buffer can be used to minimize loop overhead without the penalty of increasing code size. In addition, a ZOLB requires relatively little space and power, which are both important considerations for most DSP applications. This paper describes strategies for generating code to effectively use a ZOLB. We have found that many common code improving transformations used by optimizing compilers on conventional architectures can be easily used to (1) allow more loops to be placed in a ZOLB, (2) further reduce loop overhead of the loops placed in a ZOLB, and (3) avoid redundant loading of ZOLB loops. The results given in this paper demonstrate that this architectural feature can often be exploited with substantial improvements in execution time and slight reductions in code size for various signal processing applications. Copyright (c) 2004 John Wiley & Sons, Ltd.
C1 Boise State Univ, Dept Comp Sci, Boise, ID 83725 USA.
   LA Times, Los Angeles, CA USA.
   Florida State Univ, CS Dept, Tallahassee, FL 32306 USA.
   Sandbridge Technol, White Plains, NY USA.
   Seoul Natl Univ, Seoul, South Korea.
   Agere Syst, Allentown, PA USA.
C3 Idaho; Boise State University; State University System of Florida;
   Florida State University; Seoul National University (SNU); Broadcom; LSI
   Corporation
RP Boise State Univ, Dept Comp Sci, 1910 Univ Dr, Boise, ID 83725 USA.
EM uh@cs.boisestate.edu; ypaek@ee.snu.ac.kr
CR Alt M., 1994, Compiler Construction. 5th International Conference, CC'94. Proceedings, P278
   BACON DF, 1994, ACM COMPUT SURV, V26, P345, DOI 10.1145/197405.197406
   DAVIDSON JW, 1996, P COMP CONSTR C APR, P59
   EICHENBERGER AE, 1997, THESIS U MICHIGAN
   Eyre J, 1998, COMPUTER, V31, P51, DOI 10.1109/2.707617
   Hennessy J. L., 2012, Computer Architecture A Quantitative Approach, V5th
   HUFF RA, 1993, P ACM SIGPLAN 93 C P, P258, DOI DOI 10.1145/155090.155115
   Lam M., 1988, P ACM SIGPLAN 1988 C, P318, DOI [10.1145/53990.54022, DOI 10.1145/53990.54022]
   Lapsley P., 1996, DSP Processor Fundamentals: Architecture and Features
   *LUC TECHN, 1997, DSP16000 DIG SIGN PR
   *LUC TECHN, 1997, DSP16000 ASS LANG US
   *LUC TECHN, 1997, DSP16000 C COMP US G
   *LUC TECHN, 1997, DSP16000 LUXW DEB TO
   Rau B.R., 1994, P 27 ANN INT S MICRO, P63
   STOTZER E, 1999, P ACM SIGPLAN WORKSH, P28
   UH GR, 2000, 9 INT C COMP CONSTR
   UH GR, 1999, ACM SIGPLAN 1999 WOR, P10
   WANG Y, 1999, INTERPROCEDURAL OPTI
   WHALLEY D, 1998, DSP16000 C OPTIMIZER
NR 19
TC 5
Z9 5
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2005
VL 35
IS 4
BP 393
EP 412
DI 10.1002/spe.642
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 911UA
UT WOS:000228029500005
DA 2024-07-18
ER

PT J
AU Rubira, CMF
   de Lemos, R
   Ferreira, GRM
   Castor, E
AF Rubira, CMF
   de Lemos, R
   Ferreira, GRM
   Castor, E
TI Exception handling in the development of dependable component-based
   systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE exception handling; fault tolerance; catalysis process; use cases;
   component-based software development; dependable software architecture
ID SOFTWARE; ISSUES
AB Exception handling is a structuring technique that facilitates the design of software systems by encapsulating the process of error recovery. In this paper, we present a systematic approach for incorporating exceptional behaviour in the development of component-based software. The premise of our approach is that components alone do not provide the appropriate means to deal with exceptional behaviour in an effective manner, hence the need to consider the notion of collaborations for capturing the interactive behaviour between components when error recovery involves more than one component. The feasibility of the approach is demonstrated in terms of the mining control system case study. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 State Univ Campinas, UNICAMP, Inst Comp, BR-13084971 Campinas, SP, Brazil.
   Univ Kent, Comp Lab, Canterbury CT2 7NF, Kent, England.
C3 Universidade Estadual de Campinas; University of Kent
RP Rubira, CMF (corresponding author), State Univ Campinas, UNICAMP, Inst Comp, POB 6176, BR-13084971 Campinas, SP, Brazil.
EM cmrubira@ic.unicamp.br
RI Rubira, Cecilia Mary Fischer/G-5594-2012; Castor, Fernando/V-4011-2018
OI Rubira, Cecilia Mary Fischer/0000-0003-4549-7105; Castor,
   Fernando/0000-0002-6389-3630; de Lemos, Rogerio/0000-0002-0281-6308
CR Avizienis A, 1997, COMPUTER, V30, P51, DOI 10.1109/2.585154
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   CASTOR F, 2004, P 8 BRAZ S PROGR LAN
   Cheesman J., 2001, UML COMPONENTS
   Cockburn A., 2001, Writing effective use cases
   D'Souza D., 1998, OBJECTS COMPONENTS F
   de Lemos R, 2001, PROC IEEE INT CONF S, P320, DOI 10.1109/ICSM.2001.972745
   de Lemos R., 2001, INT J COMPUTER SYSTE, V16, P167
   Dellarocas C., 2000, Information Technology & Management, V1, P155, DOI 10.1023/A:1019116823502
   GARCIA A, 1999, P 10 IEEE S SOFTW RE
   GARCIA A, 2002, COMPUTER J SPECIAL I, V44, P569
   Garcia AF, 2001, J SYST SOFTWARE, V59, P197, DOI 10.1016/S0164-1212(01)00062-0
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Gosling James, 1996, The Java Language Specification
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Lee P. A., 1990, Fault Tolerance: Principles and Practice, V2nd
   MAES P, 1987, ACM SIGPLAN NOTICES, V22, P147
   Meyer B., 1988, Object-Oriented Software Construction
   Miller R, 1997, LECT NOTES COMPUT SC, V1241, P85
   SCHNEIDER G, 2000, APPL USE CASES PRACT
   SILVA M, 2003, P AUT SOFTW ENG 2003, P327
   SLOMAN M, 1987, DISTRIBUTED SYSTEMS
   WARNER J, 1999, OBJECT CONSTRAINT LA
   ZORZO A, 1999, P C OBJ OR PROGR SYS, P453
NR 26
TC 22
Z9 23
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2005
VL 35
IS 3
BP 195
EP 236
DI 10.1002/spe.632
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902II
UT WOS:000227347800001
DA 2024-07-18
ER

PT J
AU Makaroff, DJ
   Neufeld, GW
   Hutchinson, NC
AF Makaroff, DJ
   Neufeld, GW
   Hutchinson, NC
TI Performance evaluation for VBR continuous media file server admission
   control
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multimedia; file servers; variable bit rate; admission control;
   performance evaluation
ID VIDEO; DEMAND
AB A file server for continuous media must provide resource guarantees and only admit requests that do not violate the resource availability. This paper addresses the admission performance of a server that explicitly considers the variable bit rate nature of the continuous media streams. A prototype version of the server has been implemented and evaluated in several heterogeneous environments. The two system resources for which admission control is evaluated are the disk bandwidth and the network bandwidth. Performance results from both measurement and simulation are shown with respect to different admission methods and varying scenarios of stream delivery patterns. We show that the vbrSim algorithm developed specifically for the server outperforms the other options for disk admission especially with request patterns that have staggered arrivals, while the network admission control algorithm is able to utilize a large percentage of the network bandwidth available. We also show the interactions between the limits of these two resources and how a system can be configured without wasted capacity on either one of the resources. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK S7N 5AN, Canada.
   Univ British Columbia, Dept Comp Sci, Vancouver, BC V5Z 1M9, Canada.
C3 University of Saskatchewan; University of British Columbia
RP Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK S7N 5AN, Canada.
EM makaroff@cs.usask.ca
CR Bernhardt C, 1996, HIGH-SPEED NETWORKING FOR MULTIMEDIA APPLICATIONS, P103
   BIERSACK E, 1996, EUROMICRO 96, P633
   Burchard LO, 2000, LECT NOTES COMPUT SC, V1905, P132
   CHANG E, 1994, IEEE IMAGE PROC, P278, DOI 10.1109/ICIP.1994.413319
   CHANG E, 1996, IST SPIE MULT COMP N, P381
   DEYSIRCAR JK, 1994, ACM MULTIMEDIA   OCT, P25
   Eager D, 1999, ACM MULTIMEDIA 99, PROCEEDINGS, P199, DOI 10.1145/319463.319601
   FENG W, 1998, ACM MULTIMEDIA 98, P285
   FENG W, 1997, THESIS U MICHIGAN
   GOLUBCHIK L, 1995, ACM SIGMETRICS, P25
   GROSSGLAUSER M, 1995, ACM SIGCOMM, P219
   *ISO IEC, 1996, JTC1SC29WG11 ISOIEC
   JAMIN S, 1995, ACM SIGCOMM COMPUTER, P2
   KNIGHTLY EW, 1995, ACM SIGMETRICS 95 C, P98
   KUMAR M, 1996, IST SPIE MULTIMEDIA, P410
   LAU SW, 1995, 5 INT WORKSH NETW OP, P294
   Leung MYY, 2002, IEEE T KNOWL DATA EN, V14, P615, DOI 10.1109/TKDE.2002.1000346
   Makaroff D, 2001, IEEE T SOFTWARE ENG, V27, P13, DOI 10.1109/32.895985
   McManus JM, 1996, IEEE INFOCOM SER, P1357, DOI 10.1109/INFCOM.1996.493083
   NEUFELD G, 1996, IST SPIE MULTIMEDIA, P370
   RANGAN PV, 1992, IEEE COMMUN MAG, V30, P56, DOI 10.1109/35.144778
   Santos J. R., 1998, Proceedings ACM Multimedia 98, P303, DOI 10.1145/290747.290786
   Santos JR, 2000, PERF E R SI, V28, P44, DOI 10.1145/345063.339352
   Sen S., 1999, NOSSDAV'99 Workshop. 9th International Workshop on Network and Operating Systems Support for Digital Audio and Video, P265
   Sen S, 1999, IEEE INFOCOM SER, P455, DOI 10.1109/INFCOM.1999.751378
   Sen S, 1999, IEEE INFOCOM SER, P1310, DOI 10.1109/INFCOM.1999.752149
   VIN HM, 1994, ACM MULTIMEDIA, P33
   Wrege DE, 1996, IEEE INFOCOM SER, P537, DOI 10.1109/INFCOM.1996.493346
   ZHANG H, 1995, 5 INT WORKSH NETW OP, P381
   Zhang ZL, 1997, IEEE J SEL AREA COMM, V15, P1148, DOI 10.1109/49.611165
NR 30
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2004
VL 34
IS 12
BP 1187
EP 1210
DI 10.1002/spe.609
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859BU
UT WOS:000224237900004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Briand, LC
   Labiche, Y
   Sun, H
AF Briand, LC
   Labiche, Y
   Sun, H
TI Investigating the use of analysis contracts to improve the testability
   of object-oriented code
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented testing; testability; contracts; object-oriented
   analysis
AB dA number of activities involved in testing software are known to be difficult and time consuming. Among them is the definition and coding of test oracles and the isolation of faults once failures have been detected. Through a thorough and rigorous empirical study, we investigate how the instrumentation of contracts could address both issues. Contracts are known to be a useful technique in specifying the precondition and postcondition of operations and class invariants, thus making the definition of object-oriented analysis or design elements more precise. It is one of the reasons the Object Constraint Language (OCL) was made part of the Unified Modeling Language. Our aim in this paper is to reuse and instrument contracts to ease testing. A thorough case study is run where we define OCL contracts, instrument them using a commercial tool and assess the benefits and limitations of doing so to support the automated detection of failures and the isolation of faults. As contracts can be defined at various levels of detail, we also investigate the cost and benefit of using contracts at different levels of precision. We then draw practical conclusions regarding the applicability of the approach and its limitations. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Carleton Univ, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
C3 Carleton University
RP Carleton Univ, Software Qual Engn Lab, 1125 Colonel By Dr, Ottawa, ON K1S 5B6, Canada.
EM briand@sce.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836
CR [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2001, DESIGN CONTRACT EXAM
   Baudry B, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P272, DOI 10.1109/METRIC.2001.915535
   Baudry B, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P4, DOI 10.1109/ISSRE.2000.885856
   Chevalley P, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P254, DOI 10.1109/ISSRE.2001.989479
   Coleman Derek., 1994, OBJECT ORIENTED DEV
   COUSOT P, 2000, P SSGRR 2000 COMP EB
   EISENSTADT M, 1997, COMMUN ACM, V40, P31
   Jézéquel JM, 2001, IEEE SOFTWARE, V18, P76, DOI 10.1109/MS.2001.936221
   Kim CJ, 1999, INT J GYNECOL CANCER, V9, P1
   KIM S, 2000, P MUT 2000 SAN JOS 6
   KIM S, 2000, P NET OBJ DAYS ERF G
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   OMG, 2001, OBJ CONSTR LANG OCL
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   *PAR CORP, 2002, JCONTRACT
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   VOAS J, 1991, IEEE SOFTWARE, V8, P41, DOI 10.1109/52.73748
   VOAS JM, 1995, GCR95675 NIST
   VOAS JM, 1995, P 2 INT WORKSH AUT A
   WANG A, 1997, POLYETHYLENE WEAR OR, V22, P4
   Warmer J., 1999, AW OBJ TECHNOL S
NR 25
TC 35
Z9 40
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2003
VL 33
IS 7
BP 637
EP 672
DI 10.1002/spe.520
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 686FL
UT WOS:000183310700002
DA 2024-07-18
ER

PT J
AU Verma, P
   Maurya, AK
   Yadav, RS
AF Verma, Prateek
   Maurya, Ashish Kumar
   Yadav, Rama Shankar
TI A survey on energy-efficient workflow scheduling algorithms in cloud
   computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; energy-efficient scheduling; task scheduling; workflow
   scheduling
ID PRECEDENCE-CONSTRAINED TASKS; MULTIOBJECTIVE OPTIMIZATION; AWARE;
   INTERNET; SYSTEMS; THINGS; FUTURE; DVFS; 5G
AB The advancements in computing and storage capabilities of machines and their fusion with new technologies like the Internet of Thing (IoT), 5G networks, and artificial intelligence, to name a few, has resulted in a paradigm shift in the way computing is done in a cloud environment. In addition, the ever-increasing user demand for cloud services and resources has resulted in cloud service providers (CSPs) expanding the scale of their data center facilities. This has increased energy consumption leading to more carbon dioxide emission levels. Hence, it becomes all the more important to design scheduling algorithms that optimize the use of cloud resources with minimum energy consumption. This paper surveys state-of-the-art algorithms for scheduling workflow tasks to cloud resources with a focus on reducing energy consumption. For this, we categorize different workflow scheduling algorithms based on the scheduling approaches used and provide an analytical discussion of the algorithms covered in the paper. Further, we provide a detailed classification of different energy-efficient strategies used by CSPs for energy saving in data centers. Finally, we describe some of the popular real-world workflow applications as well as highlight important emerging trends and open issues in cloud computing for future research directions.
C1 [Verma, Prateek; Maurya, Ashish Kumar; Yadav, Rama Shankar] Motilal Nehru Natl Inst Technol Allahabad, Dept Comp Sci & Engn, Prayagraj, India.
   [Maurya, Ashish Kumar] Motilal Nehru Natl Inst Technol Allahabad, Dept Comp Sci & Engn, Prayagraj, Uttar Pradesh, India.
C3 National Institute of Technology (NIT System); Motilal Nehru National
   Institute of Technology; National Institute of Technology (NIT System);
   Motilal Nehru National Institute of Technology
RP Maurya, AK (corresponding author), Motilal Nehru Natl Inst Technol Allahabad, Dept Comp Sci & Engn, Prayagraj, Uttar Pradesh, India.
EM ashishmaurya@mnnit.ac.in
CR Adhikari M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3325097
   Agiwal M, 2016, IEEE COMMUN SURV TUT, V18, P1617, DOI 10.1109/COMST.2016.2532458
   Al-Mahruqi AAH, 2021, WIRELESS PERS COMMUN, V118, P43, DOI 10.1007/s11277-020-08001-x
   Alloghani M., 2020, Supervised and unsupervised learning for data science, P3, DOI [DOI 10.1007/978-3-030-22475-2_1, 10.1007/978-3-030-22475-2_1, DOI 10.1007/978-3-030-22475-21]
   Alrammah H., 2020, 3 OBJECTIVE WORKFLOW
   Amoura AK, 1998, IEEE T PARALL DISTR, V9, P679, DOI 10.1109/71.707547
   [Anonymous], 2000, APPL OPTIMIZAT
   Arabnejad H, 2014, IEEE T PARALL DISTR, V25, P682, DOI 10.1109/TPDS.2013.57
   Arunarani AR, 2019, FUTURE GENER COMP SY, V91, P407, DOI 10.1016/j.future.2018.09.014
   Asghari A, 2020, COMPUT NETW, V179, DOI 10.1016/j.comnet.2020.107340
   AWS U, 2023, AWS LAMBDA
   Bansal S, 2022, T EMERG TELECOMMUN T, V33, DOI 10.1002/ett.4523
   Baxevanis A.D., 2020, Bioinformatics
   Bharathi S, 2008, 2008 THIRD WORKSHOP ON WORKFLOWS IN SUPPORT OF LARGE-SCALE SCIENCE (WORKS 2008), P11
   Bisong E., 2019, OVERVIEW GOOGLE CLOU
   Bittencourt L, 2018, INTERNET THINGS-NETH, V3-4, P134, DOI 10.1016/j.iot.2018.09.005
   Bullen KE., 1985, INTRO THEORY SEISMOL
   Burd TD., 1995, ENERGY EFFICIENT CMO
   Cao E., 2022, IEEE TRANS CLOUD COM
   CASAVANT TL, 1988, IEEE T SOFTWARE ENG, V14, P141, DOI 10.1109/32.4634
   Chapman C. H., 2004, Fundamentals of Seismic Wave Propagation
   Chen JC, 2022, J SYST ARCHITECT, V129, DOI 10.1016/j.sysarc.2022.102598
   Cheng MX, 2018, ASIA S PACIF DES AUT, P129, DOI 10.1109/ASPDAC.2018.8297294
   Choudhary A, 2022, CLUSTER COMPUT, V25, P3845, DOI 10.1007/s10586-022-03613-3
   Chu SC, 2006, LECT NOTES ARTIF INT, V4099, P854
   Copeland M., 2015, Microsoft Azure: Planning, Deploying, and Managing Your Data Center in the Cloud
   Dastjerdi Amir Vahid, 2016, Internet of Things, P61, DOI [10.1016/B978 -0-12-805395-9.00004-6. arXiv: 1601.02752, DOI 10.1016/B978-0-12-805395-9.00004-6.ARXIV:1601.02752]
   Dayarathna M, 2016, IEEE COMMUN SURV TUT, V18, P732, DOI 10.1109/COMST.2015.2481183
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Demestichas P, 2013, IEEE VEH TECHNOL MAG, V8, P47, DOI 10.1109/MVT.2013.2269187
   Dillon T, 2010, INT CON ADV INFO NET, P27, DOI 10.1109/AINA.2010.187
   Dorigo M, 2006, IEEE COMPUT INTELL M, V1, P28, DOI 10.1109/MCI.2006.329691
   Droegemeier KK, 2005, COMPUT SCI ENG, V7, P12, DOI 10.1109/MCSE.2005.124
   Fan X., 2005, SYNERGY POWER AWARE
   Feigelson ED, 2012, MODERN STATISTICAL METHODS FOR ASTRONOMY: WITH R APPLICATIONS, P1, DOI 10.1017/CBO9781139015653
   Figueiredo EMN, 2016, INFORM SCIENCES, V374, P115, DOI 10.1016/j.ins.2016.09.026
   Garg N, 2021, CLUSTER COMPUT, V24, P767, DOI 10.1007/s10586-020-03149-4
   Garg R, 2019, CLUSTER COMPUT, V22, P1283, DOI 10.1007/s10586-019-02911-7
   Gartner, 2022, WORLDWIDE PUBLIC CLO
   Geem ZW, 2009, STUD COMPUT INTELL, V191, P1, DOI 10.1007/978-3-642-00185-7
   Ghafari R, 2022, CLUSTER COMPUT, V25, P1035, DOI 10.1007/s10586-021-03512-z
   Giagkiozis I, 2015, INFORM SCIENCES, V293, P338, DOI 10.1016/j.ins.2014.08.071
   Goldberg D.E., 1991, FDN GENETIC ALGORITH, V1, P69
   Google, 2023, CLOUD FUNCTIONS
   Graves R, 2011, PURE APPL GEOPHYS, V168, P367, DOI 10.1007/s00024-010-0161-6
   Gu Y, 2020, FUTURE GENER COMP SY, V113, P106, DOI 10.1016/j.future.2020.06.031
   Hochba Dorit S., 1997, ACM SIGACT News, V28, P40
   Hosseinzadeh M, 2020, J GRID COMPUT, V18, P327, DOI 10.1007/s10723-020-09533-z
   Houssein EH, 2021, SWARM EVOL COMPUT, V62, DOI 10.1016/j.swevo.2021.100841
   Hu YK, 2017, FUTURE GENER COMP SY, V74, P119, DOI 10.1016/j.future.2016.08.022
   Hussain M, 2022, FUTURE GENER COMP SY, V132, P211, DOI 10.1016/j.future.2022.02.018
   IEA P, 2022, DATA CENTRES DATA TR
   Jacob JC, 2009, INT J COMPUT SCI ENG, V4, P73, DOI 10.1504/IJCSE.2009.026999
   Jamil B, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3513002
   Jayanetti A, 2022, FUTURE GENER COMP SY, V137, P14, DOI 10.1016/j.future.2022.06.012
   Kalra M, 2021, WIRELESS PERS COMMUN, V116, P1743, DOI 10.1007/s11277-020-07759-4
   Karaboga D., 2010, Scholarpedia, V5, P6915, DOI [DOI 10.4249/SCHOLARPEDIA.6915, 10.4249/scholarpedia.6915]
   Karttunen H., 2007, FUNDAMENTAL ASTRONOM
   Khan WZ, 2019, FUTURE GENER COMP SY, V97, P219, DOI 10.1016/j.future.2019.02.050
   Khattar N, 2019, J SUPERCOMPUT, V75, P4750, DOI 10.1007/s11227-019-02764-2
   Kotsiantis SB, 2007, INFORM-J COMPUT INFO, V31, P249
   Kumar MR, 2021, J AMB INTEL HUM COMP, DOI 10.1007/s12652-020-02711-7
   Kumar M, 2019, J NETW COMPUT APPL, V143, P1, DOI 10.1016/j.jnca.2019.06.006
   Kumar P, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3281010
   Lam AYS, 2010, IEEE T EVOLUT COMPUT, V14, P381, DOI 10.1109/TEVC.2009.2033580
   Lara A, 2014, IEEE COMMUN SURV TUT, V16, P493, DOI 10.1109/SURV.2013.081313.00105
   Leal B, 2010, INTERNET OF THINGS-BOOK, P3, DOI 10.1007/978-1-4419-1674-7_1
   Lee YC, 2011, IEEE T PARALL DISTR, V22, P1374, DOI 10.1109/TPDS.2010.208
   Lesk A., 2019, Introduction to bioinformatics, V5th, DOI [10.1002/biot.200800277, DOI 10.1002/BIOT.200800277]
   Li L., 2022, ACM COMPUT SURV, V54, P1
   Li XD, 2003, LECT NOTES COMPUT SC, V2723, P37
   Li XP, 2022, IEEE T SERV COMPUT, V15, P891, DOI 10.1109/TSC.2020.2965106
   Li ZJ, 2018, IEEE T SERV COMPUT, V11, P713, DOI 10.1109/TSC.2015.2466545
   Liu B, 2005, CHAOS SOLITON FRACT, V25, P1261, DOI 10.1016/j.chaos.2004.11.095
   Luo QY, 2021, IEEE COMMUN SURV TUT, V23, P2131, DOI 10.1109/COMST.2021.3106401
   Mahmud R., 2018, Internet of Everything, P103, DOI [10.1007/978-981-10-5861-5_5, DOI 10.1007/978-981-10-5861-5_5]
   Marler RT, 2010, STRUCT MULTIDISCIP O, V41, P853, DOI 10.1007/s00158-009-0460-7
   Mathew S., 2014, Amazon Whitepapers, V105, P1
   Maurya AK., 2018, DEADLINE CONSTRAINED
   Maurya AK, 2020, CLUSTER COMPUT, V23, P911, DOI 10.1007/s10586-019-02965-7
   Maurya AK, 2019, COMPUTING, V101, P1015, DOI 10.1007/s00607-018-0636-3
   Maurya AK, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5060
   Maurya AK, 2018, J SUPERCOMPUT, V74, P3039, DOI 10.1007/s11227-018-2355-0
   McKeown N, 2008, ACM SIGCOMM COMP COM, V38, P69, DOI 10.1145/1355734.1355746
   Medara R, 2022, WIRELESS PERS COMMUN, V125, P1545, DOI 10.1007/s11277-022-09621-1
   Medara R, 2021, WIRELESS PERS COMMUN, V119, P1301, DOI 10.1007/s11277-021-08263-z
   Mell P., 2009, NIST, Inf. Tech. Lab., V2, P304
   Microsoft, 2022, INTRO AZURE FUNCTION
   Mirjalili S, 2019, STUD COMPUT INTELL, V780, P43, DOI 10.1007/978-3-319-93025-1_4
   Mirjalili S, 2016, ADV ENG SOFTW, V95, P51, DOI 10.1016/j.advengsoft.2016.01.008
   Mirjalili S, 2016, KNOWL-BASED SYST, V96, P120, DOI 10.1016/j.knosys.2015.12.022
   Mirjalili S, 2015, ADV ENG SOFTW, V83, P80, DOI 10.1016/j.advengsoft.2015.01.010
   Mitchell M., 1999, INTRO GENETIC ALGORI, DOI DOI 10.1016/S0898-1221(96)90227-8
   Mohammadzadeh A, 2021, CLUSTER COMPUT, V24, P1479, DOI 10.1007/s10586-020-03205-z
   Nunes BAA, 2014, IEEE COMMUN SURV TUT, V16, P1617, DOI 10.1109/SURV.2014.012214.00180
   Olson DL, 2004, MATH COMPUT MODEL, V40, P721, DOI 10.1016/j.mcm.2004.10.003
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Paknejad P, 2021, FUTURE GENER COMP SY, V117, P12, DOI 10.1016/j.future.2020.11.002
   Philips B., 2007, 314 INTEGRATING END
   POLI R, 2007, SWARM INTELL-US, V1, P33, DOI [DOI 10.1007/S11721-007-0002-0, DOI 10.1109/ICNN.1995.488968]
   Qin Y, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9273-z
   Qin Y, 2020, J SUPERCOMPUT, V76, P455, DOI 10.1007/s11227-019-03033-y
   Ramakrishnan L., 2010, Proceedings of the 1st International Workshop on Workflow Approaches to New Data-centric Science, P1
   Rani R., 2022, LANCET, P1
   Rani R, 2021, APPL SOFT COMPUT, V113, DOI 10.1016/j.asoc.2021.107943
   Rehman A, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.4949
   Rodriguez MA, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4041
   Saeedi S, 2020, COMPUT IND ENG, V147, DOI 10.1016/j.cie.2020.106649
   Safari M, 2018, SIMUL MODEL PRACT TH, V87, P311, DOI 10.1016/j.simpat.2018.07.006
   Shafiei H, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3510611
   Shah-Hosseini H, 2009, INT J BIO-INSPIR COM, V1, P71, DOI 10.1504/IJBIC.2009.022775
   Sharifi M, 2013, COMPUTING, V95, P67, DOI 10.1007/s00607-012-0212-1
   Sharma M, 2020, ENG SCI TECHNOL, V23, P211, DOI 10.1016/j.jestch.2019.03.009
   Shearer PM, 2019, INTRODUCTION TO SEISMOLOGY, 3RD EDITION
   Singh SP, 2022, CONCURR COMP-PRACT E, V34, DOI 10.1002/cpe.5913
   Singh S, 2016, KNOWL INF SYST, V49, P1005, DOI 10.1007/s10115-016-0922-3
   Singh V, 2020, J GRID COMPUT, V18, P357, DOI 10.1007/s10723-019-09490-2
   Siva Nayanah, 2008, Nat Biotechnol, V26, P256, DOI 10.1038/nbt0308-256b
   Skrutskie MF, 2006, ASTRON J, V131, P1163, DOI 10.1086/498708
   Smith J., 2005, VIRTUAL MACHINES VER
   Sobhanayak S, 2023, COMPUTING, V105, P2119, DOI 10.1007/s00607-023-01175-9
   Soma P, 2022, WIRELESS PERS COMMUN, V124, P3567, DOI 10.1007/s11277-022-09526-z
   Son JM, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3190617
   Statista, 2021, ENERGY DEMAND DATA C
   statista, 2023, ANN SPENDING CLOUD I
   Stavrinides GL, 2019, FUTURE GENER COMP SY, V96, P216, DOI 10.1016/j.future.2019.02.019
   Szalay AS, 2000, SIGMOD REC, V29, P451, DOI 10.1145/335191.335439
   Taghinezhad-Niar A, 2022, COMPUTING, V104, P601, DOI 10.1007/s00607-021-01030-9
   Tang Z, 2016, J GRID COMPUT, V14, P55, DOI 10.1007/s10723-015-9334-y
   Topcuoglu H, 2002, IEEE T PARALL DISTR, V13, P260, DOI 10.1109/71.993206
   Vamplew P, 2008, LECT NOTES ARTIF INT, V5360, P372, DOI 10.1007/978-3-540-89378-3_37
   Wang DS, 2018, SOFT COMPUT, V22, P387, DOI 10.1007/s00500-016-2474-6
   Wang SY, 2016, IEEE T SYST MAN CY-S, V46, P139, DOI 10.1109/TSMC.2015.2416127
   Wieder P., 2011, SERVICE LEVEL AGREEM
   Wiering MarcoA., 2012, Adaptation, learning, and optimization, V12, P729
   Wu CG, 2018, J PARALLEL DISTR COM, V117, P63, DOI 10.1016/j.jpdc.2018.02.009
   Xia WF, 2015, IEEE COMMUN SURV TUT, V17, P27, DOI 10.1109/COMST.2014.2330903
   Xia XW, 2022, INFORM SCIENCES, V606, P38, DOI 10.1016/j.ins.2022.05.053
   Xiao P, 2013, J COMPUT SCI TECH-CH, V28, P948, DOI 10.1007/s11390-013-1390-9
   Xu YM, 2015, IEEE T PARALL DISTR, V26, P3208, DOI 10.1109/TPDS.2014.2385698
   Yang XS, 2010, STUD COMPUT INTELL, V284, P65, DOI 10.1007/978-3-642-12538-6_6
   Yu W, 2018, IEEE ACCESS, V6, P6900, DOI 10.1109/ACCESS.2017.2778504
   Yuan Ymg-Chun, 2008, Chinese Journal of Computers, V31, P282, DOI 10.3724/SP.J.1016.2008.00282
   Zhang F, 2018, IEEE COMMUN SURV TUT, V20, P1206, DOI 10.1109/COMST.2018.2794881
   Zhang GT, 2019, INFORM MANAGE-AMSTER, V56, P343, DOI 10.1016/j.im.2018.07.008
   Zhang LF, 2022, LECT NOTES COMPUT SC, V13686, P1, DOI 10.1007/978-3-031-19809-0_1
   Zhu D, 2004, ICCAD-2004: INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, IEEE/ACM DIGEST OF TECHNICAL PAPERS, P35, DOI 10.1109/ICCAD.2004.1382539
   Zotkiewicz M, 2016, IEEE T PARALL DISTR, V27, P3561, DOI 10.1109/TPDS.2016.2542817
NR 148
TC 1
Z9 1
U1 6
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2024
VL 54
IS 5
BP 637
EP 682
DI 10.1002/spe.3292
EA DEC 2023
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NB0V3
UT WOS:001112470200001
DA 2024-07-18
ER

PT J
AU Li, ZS
   Pan, Y
   Dai, HP
   Zhang, WH
   Li, Z
   Wang, W
   Chen, GH
AF Li, Zeshui
   Pan, Yang
   Dai, Haipeng
   Zhang, Wenhao
   Li, Zhen
   Wang, Wei
   Chen, Guihai
TI PD-Gait: Contactless and privacy-preserving gait measurement of
   Parkinson's disease patients using acoustic signals
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE acoustic sensing; mobile edge computing; Parkinson's disease; privacy
   protection
AB In this article, we propose a mobile edge computing (MEC)-related system named PD-Gait, which can measure gait parameters of Parkinson's disease patients in a contactless and privacy-preserving manner. We utilize inaudible acoustic signals and band-pass filters to achieve privacy data protection in the physical layer. The proposed framework can be easily deployed in the mobile end of MEC, and hence release the edge server in cybersecurity attacks fighting. The gait parameters include stride cycle time length and moving speed, and hence providing an objective basis for the doctors' judgment. PD-Gait utilizes acoustic signals in bands from 16 to 23 kHz to achieve device-free sensing, which would release both doctors and patients from the tedious wearing process and psychological burden caused by traditional wearable devices. To achieve robust measurement, we propose a novel acoustic ranging method to avoid "broken tones" and "uneven peak distribution" in the received data. The corresponding ranging accuracy is 0.1 m. We also propose auto-focus micro-Doppler features to extract robust stride cycle time length, and can achieve an accuracy of 0.052 s. We deployed PD-Gait in a brain hospital and collected data from 8 patients. The total walked distance is over 330 m. From the overall trend, our results are highly correlated with the doctor's judgment.
C1 [Li, Zeshui; Dai, Haipeng; Zhang, Wenhao; Wang, Wei; Chen, Guihai] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Pan, Yang; Li, Zhen] Nanjing Med Univ, Dept Geriatr Neurol, Affiliated Brain Hosp, Nanjing, Jiangsu, Peoples R China.
   [Pan, Yang] Nanjing Med Univ, Affiliated Brain Hosp, Dept Geriatr, Nanjing 210029, Jiangsu, Peoples R China.
   [Dai, Haipeng] Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, CS Bldg 542,163 Xianlin Blvd, Nanjing 210023, Jiangsu, Peoples R China.
   [Chen, Guihai] Nanjing Univ, Dept Comp Sci & Technol, CS Bldg 601,163 Xianlin Blvd, Nanjing 210023, Jiangsu, Peoples R China.
C3 Nanjing University; Nanjing Medical University; Nanjing Medical
   University; Nanjing University; Nanjing University
RP Pan, Y (corresponding author), Nanjing Med Univ, Affiliated Brain Hosp, Dept Geriatr, Nanjing 210029, Jiangsu, Peoples R China.; Dai, HP (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, CS Bldg 542,163 Xianlin Blvd, Nanjing 210023, Jiangsu, Peoples R China.; Chen, GH (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, CS Bldg 601,163 Xianlin Blvd, Nanjing 210023, Jiangsu, Peoples R China.
EM neuro_panyang@163.com; haipengdai@nju.edu.cn; gchen@nju.edu.cn
RI Li, Hongbo/KHV-4191-2024; Wang, Jinlong/KHC-3829-2024; Wang,
   YuHan/KGY-2933-2024; wang, wang/KGW-2828-2024; Dai,
   Haipeng/JOZ-1338-2023
OI Li, Hongbo/0000-0003-4495-0756; 
FU This work was supported in part by the National Natural Science
   Foundation of China under Grant 62272223, U22A2031, 61872178, in part by
   the National Natural Science Foundation of China under Grant 61832005,
   62272213, 82101332, in part by the Collaborative [61832005, 62272213,
   82101332]; National Natural Science Foundation of China; Collaborative
   Innovation Center of Novel Software Technology and Industrialization,
   Nanjing University; Jiangsu High-level Innovation and Entrepreneurship
   (Shuangchuang) Program; program B for outstanding PhD candidate of
   Nanjing University
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62272223, U22A2031, 61872178, in part by
   the National Natural Science Foundation of China under Grant 61832005,
   62272213, 82101332, in part by the Collaborative Innovation Center of
   Novel Software Technology and Industrialization, Nanjing University, and
   in part by the Jiangsu High-level Innovation and Entrepreneurship
   (Shuangchuang) Program. The work was also supported in part by the
   program B for outstanding PhD candidate of Nanjing University.
CR Aging oNI, Parkinson's disease
   Altaf MUB., 2015, IEEE Trans Biomed Eng
   Bodkhe U, 2021, SOFTWARE PRACT EXPER, V51, P2469, DOI 10.1002/spe.2811
   Borzi L., 2019, J Reliab Intell Environ
   Cai C., 2021, Proceedings of ACM UbiComp
   Chang Z., 2022, Electronics
   Cho CW, 2009, EXPERT SYST APPL, V36, P7033, DOI 10.1016/j.eswa.2008.08.076
   Dai H., 2023, IEEE Trans Knowl Data Eng
   Dong Y., 2020, Proceedings of ACM UbiComp/ISWC Adjunct
   Fagert J, 2021, J ENG MECH, V147, DOI 10.1061/(ASCE)EM.1943-7889.0001889
   Fu Y., 2022, Proceedings of ACM SenSys
   Iravantchi Y., 2021, Proceedings of ACM CHI
   Jeon HS., 2008, Proceedings IEEE EMBS
   Kausar S, 2020, SOFTWARE PRACT EXPER, V50, P2095, DOI 10.1002/spe.2782
   Kim J., 2010, Proceedings Springer WCB
   Lin CH., 2021, IEEE Sens J
   Lu L., 2019, IEEE/ACM Trans Netw
   Lu M, 2021, MED IMAGE ANAL, V73, DOI 10.1016/j.media.2021.102179
   Lv ZH, 2021, SOFTWARE PRACT EXPER, V51, P2446, DOI 10.1002/spe.2806
   MathWorks, CZT
   Nanzer JA., 2013, Proceedings IEEE APSURSI
   Parkinson's Foundation, Understanding Parkinson's
   Prateek G., 2017, IEEE Trans Biomed Eng
   Schalkamp AK, 2023, NAT MED, V29, P2048, DOI 10.1038/s41591-023-02440-2
   Shah SA., 2020, IEEE Sens J
   Shibata Y., 2023, Proceedings of IEEE/CVF CVPR
   STMicroelectronics, BlueCoin Starter kit
   Wang L., 2022, IEEE Trans Indus Inform
   Wang Tianben, 2023, IEEE Transactions on Mobile Computing
   Wang W, 2016, UBICOMP'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P363, DOI 10.1145/2971648.2971670
   Wikipedia, Pearson correlation coefficient
   Wikipedia, Unified Parkinson's disease rating scale
   Xie Yadong, 2021, IEEE Transactions on Mobile Computing
   Xie Y, 2021, SOFTWARE PRACT EXPER, V51, P2108, DOI 10.1002/spe.2965
   Xu W., 2019, Proceedings of ACM UbiComp
   Xu Xiangyu, 2019, P 17 ACM INT C MOB S, P54, DOI 10.1145/3307334.3326074
   Yang YZ, 2022, NAT MED, V28, P2207, DOI 10.1038/s41591-022-01932-x
   Zhang H., 2019, Proceedings of ACM UbiComp
   Zuiderveld K., 1994, Graphics Gems, P474, DOI 10.1016/B978-0-12-336156-1.50061-6
NR 39
TC 1
Z9 1
U1 2
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 NOV 20
PY 2023
DI 10.1002/spe.3289
EA NOV 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y7ZN2
UT WOS:001107405500001
DA 2024-07-18
ER

PT J
AU Zhao, ZY
   Zhang, L
   Lian, XL
AF Zhao, Ziyan
   Zhang, Li
   Lian, Xiaoli
TI Usefulness of open domain model for identifying missing software
   requirements concepts
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE completeness validation; domain model; model completion; software
   requirements
ID SYSTEMS; TERMS
AB Detecting missing requirements during software development is crucial to avoid unexpected consequences. However, this task is challenging due to limited domain knowledge of requirements analysts and the dynamic nature of software requirements. Previous studies have shown that requirement-oriented domain models can help identify omissions in requirements, but they are often incomplete for many domains. Meanwhile, domain models constructed from other artifacts are available online. This raises the question: Can these domain models be useful in identifying missing functional information in requirement specifications? To address this question, we conducted a study to measure the overlap between entities in domain models and requirements. We analyzed the occurrence of overlapped entities, considering four distribution characteristics: the type of entities in the domain model, the distribution of mapped entities in the domain model, the family belonging of the mapped entities in the domain model, and the distribution of mapped entities in the requirements. Based on our findings, we proposed recommendations for missing requirements. Additionally, we performed experiments, including the use of the proposed metric "ancestors of the highest level with the most mapped entities" (AHME). The results showed significant improvements with F2$$ {F}_2 $$ gains of 146% and 223% in the two domains, highlighting the benefits of these distribution characteristics.
C1 [Zhao, Ziyan; Zhang, Li; Lian, Xiaoli] Beihang Univ, SKLSDE, Beijing, Peoples R China.
   [Lian, Xiaoli] Beihang Univ, Beijing, Peoples R China.
C3 Beihang University; Beihang University
RP Lian, XL (corresponding author), Beihang Univ, Beijing, Peoples R China.
EM lianxiaoli@buaa.edu.cn
RI Zhao, Ziyan/AAK-2065-2020
OI Zhao, Ziyan/0000-0002-5858-4489
FU Funding for this work has been provided by the National Science
   Foundation of China grant nos. 62102014 and 62177003. It is also
   supported by State Key Laboratory of Software Development Environment,
   No. SKLSDE-2023ZX. [62102014, 62177003]; National Science Foundation of
   China [SKLSDE-2023ZX]; State Key Laboratory of Software Development
   Environment
FX Funding for this work has been provided by the National Science
   Foundation of China grant nos. 62102014 and 62177003. It is also
   supported by State Key Laboratory of Software Development Environment,
   No. SKLSDE-2023ZX.
CR Arora C, 2019, EMPIR SOFTW ENG, V24, P2509, DOI 10.1007/s10664-019-09693-x
   Arora C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P250, DOI 10.1145/2976767.2976769
   Bechhofer S., 2004, W3C RECOMMEND, V10
   Bi ZQ, 2020, IEEE ACCESS, V8, P159039, DOI 10.1109/ACCESS.2020.3019592
   Bolshakova E., 2013, EUR C INF RETR
   Bordes A., 2013, P 26 INT C NEURAL IN, P2787
   Chen P.P.S., 1975, Proceedings of the 1st International Conference on Very Large Data Bases, P173
   China BP., 2000, TERMINOLOGY WORK PRI
   Cleland-Huang J., 2018, DRONOLOGY INCUBATOR
   COHEN JD, 1995, J AM SOC INFORM SCI, V46, P162, DOI 10.1002/(SICI)1097-4571(199504)46:3<162::AID-ASI2>3.0.CO;2-6
   Dahlstedt ÅG, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P95, DOI 10.1007/3-540-28244-0_5
   Daille B., 1994, STUDY IMPLEMENTATION
   Dalpiaz F, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106484
   Dalpiaz F, 2018, LECT NOTES COMPUT SC, V10753, P119, DOI 10.1007/978-3-319-77243-1_8
   Dermeval D, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P1, DOI 10.1109/SBES.2014.13
   Deshpande G., 2020, 2020 IEEE 28 INT REQ
   Eckhardt J, 2016, INT REQUIR ENG CONF, P46, DOI 10.1109/RE.2016.24
   Eric E., 2004, DOMAIN DRIVEN DESIGN
   Espana S., 2009, 2009 17 IEEE INT REQ
   Feng Z., 1997, INTRO MODERN TERMINO
   Ferrari Alessio, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P23, DOI 10.1007/978-3-319-05843-6_3
   Frantzi K., 2000, International Journal on Digital Libraries, V3, P115, DOI 10.1007/s007999900023
   Fulton R., 2017, Airborne Electronic Hardware Design Assurance: A Practitioner's Guide to RTCA/DO-254
   Ge H, 2017, IEEE ICC
   Geierhos M., 2016, INT C APPL NAT LANG
   Gelbukh A., 2010, INT C APPL NAT LANG
   Harmain H. M., 2003, Automated Software Engineering, V10, P157, DOI 10.1023/A:1022916028950
   Hasegawa R., 2009, Proceedings of the Sixth Asia-Pacific Conference on Conceptual Modeling - Volume 96, APCCM'09, P87
   Hazem A., 2014, 9 ED LANG RES EV C L
   Hazem A, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P297
   Javed M, 2021, INFORM SOFTWARE TECH, V135, DOI 10.1016/j.infsof.2021.106558
   Ji G., 2015, Knowledge graph embedding via dynamic mapping matrix
   Ji SX, 2022, IEEE T NEUR NET LEAR, V33, P494, DOI 10.1109/TNNLS.2021.3070843
   Kaiya H, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P223
   Kamalrudin M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P531, DOI 10.1145/1985793.1985866
   Kop C., 2010, INT WORKSH DES EV RE
   Kucera A, 2018, ADV ENG INFORM, V35, P69, DOI 10.1016/j.aei.2018.01.002
   Lin Y., 2015, 29 AAAI C ART INT
   Liu W., 2009, 2009 AS PAC C COMP I
   Lucassen G, 2017, REQUIR ENG, V22, P339, DOI 10.1007/s00766-017-0270-1
   Madala K., 2017, IEEE 25 INT REQ ENG
   Manda P., 2018, ICBO
   Martin-Lammerding D., REFERENCE ONTOLOGY C
   Martin-Lammerding D., 2022, VEHICULAR 2022 11 IN
   Martín-Lammerding D, 2023, EXPERT SYST APPL, V215, DOI 10.1016/j.eswa.2022.119027
   Mich L., 1996, Natural Language Engineering, V2, P161, DOI 10.1017/S1351324996001337
   PARK Y., 2002, PROCEEDING 19 INT C, P1, DOI [10.3115/1072228.1072370, DOI 10.3115/1072228.1072370]
   Patsch R, 2010, IEEE INT SYM ELEC IN
   Pohl K., 1996, Requirements engineering: An overview
   Robeer M., 2016, 24 IEEE INT REQ ENG
   Roth M., 2015, P 1 WORKSH LANG ONT
   Saeki M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P64, DOI 10.1145/74587.74594
   Sagar VBRV, 2014, J SYST SOFTWARE, V88, P25, DOI 10.1016/j.jss.2013.08.036
   Sager J.C., 1980, ENGLISH SPECIAL LANG
   Thakur JS., 2016, 2016 31 IEEE ACM INT
   Toronto, 2015, STAND BUILD AUT SYST
   Velardi P., 2001, P ACL 2001 WORKSH HU
   Vivaldi J, 2007, TERMINOLOGY, V13, P225, DOI 10.1075/term.13.2.06viv
   Wand Y, 2002, INFORM SYST RES, V13, P363, DOI 10.1287/isre.13.4.363.69
   Wang Z., 2014, P 2014 C EMP METH NA, DOI [10.3115/v1/D14-1167, DOI 10.3115/V1/D14-1167]
   Yu M., 2021, AUTOMATIC GENERATION
   [袁劲松 Yuan Jinsong], 2015, [计算机科学, Computer Science], V42, P7
   Zhao Z, 2021, IEEE INT SYM BROADB, DOI 10.1109/BMSB53066.2021.9547077
   Zhong H., 2015, P 2015 C EMP METH NA, P267
   Zhu GG, 2017, IEEE T KNOWL DATA EN, V29, P72, DOI 10.1109/TKDE.2016.2610428
   Zowghi D, 2003, INFORM SOFTWARE TECH, V45, P993, DOI 10.1016/S0950-5849(03)00100-9
NR 66
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2024
VL 54
IS 3
BP 437
EP 464
DI 10.1002/spe.3285
EA NOV 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HI4X1
UT WOS:001094520700001
DA 2024-07-18
ER

PT J
AU Kumar, A
   Srirama, SN
AF Kumar, Aditya
   Srirama, Satish Narayana
TI FIDEL: Fog integrated federated learning framework to train neural
   networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE decentralized training; distributed computing; federated learning; fog
   computing; Internet of Things
ID MODEL; EDGE; INTERNET; IOT
AB Technological advancement in the digital era has continued to produce voluminous amounts of data through various devices. Even though data is produced distributively, it needs to be accumulated centrally for processing, analysis, and knowledge extraction that faces several challenges such as bandwidth, latency, congestion, privacy, and security. Fog computing paradigm addresses some of these issues, and can be used as a distributed data processing unit. Federated learning trains a shared model over distributed nodes. However, a fog node can not process continuously growing data due to computational limitations. In this paper, we propose FIDEL: a fog integrated federated learning framework for neural network training using resource-constrained devices. The federation of resource-constrained Internet of Things (IoT) devices creates a shared global model trained on local data, which is generalized on the unseen dataset for prediction/inferences. We have also designed an online training scheme to process continuous data with limited compute resources. The FIDEL supports both synchronous and asynchronous federate learning that empowers resource-constrained devices to train machine learning models. To test the learning capabilities of the FIDEL, we have trained three neural networks (i) Shallow network; (ii) Deep Network; (iii) Convolutional Neural Network (CNN) models for human position detection in industrial IoT setup on rapidly changing datasets. The experimental results show that the framework can learn input-output relationships with significantly high accuracy. The overall system efficiency of the framework is reasonable in terms of latency and memory usage for resource-constrained devices.
C1 [Kumar, Aditya; Srirama, Satish Narayana] Univ Hyderabad, Sch Comp & Informat Sci, Cloud & Smart Lab, Hyderabad, Telangana, India.
C3 University of Hyderabad
RP Srirama, SN (corresponding author), Univ Hyderabad, Sch Comp & Informat Sci, Cloud & Smart Lab, Hyderabad, Telangana, India.
EM satish.srirama@uohyd.ac.in
RI Srirama, Satish Narayana/H-2729-2015
OI Srirama, Satish Narayana/0000-0002-7600-7124
FU This research is supported by SERB, India, through grant
   CRG/2021/003888. We also thank financial support to UoH-IoE by MHRD,
   India (F11/9/2019-U3(A)). [F11/9/2019-U3(A)]; SERB, India; MHRD, India; 
   [CRG/2021/003888]
FX This research is supported by SERB, India, through grant
   CRG/2021/003888. We also thank financial support to UoH-IoE by MHRD,
   India (F11/9/2019-U3(A)).
CR Abreha HG, 2022, SENSORS-BASEL, V22, DOI 10.3390/s22020450
   Anawar MR, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/7157192
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Chen JB, 2022, IEEE T INSTRUM MEAS, V71, DOI 10.1109/TIM.2022.3180417
   Chen ZY, 2021, DIGIT COMMUN NETW, V7, P317, DOI 10.1016/j.dcan.2021.04.001
   Diro AA, 2018, IEEE COMMUN MAG, V56, P169, DOI 10.1109/MCOM.2018.1700332
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Holst A., 2023, VOLUME DATA INFORM C
   Hu CH, 2023, IEEE J SEL AREA COMM, V41, P874, DOI [10.1109/JSAC.2023.3242719, 10.1109/ICASSP49357.2023.10096633]
   Imteaj A, 2022, IEEE INTERNET THINGS, V9, P1, DOI 10.1109/JIOT.2021.3095077
   Jiang Y, 2023, IEEE T INTELL TRANSP, V24, P2307, DOI [10.17706/ijeeee.2022.12.1.1-15, 10.1109/TITS.2022.3157447, 10.1002/joc.7642]
   Kumar A., 2021, FOG ENABLED DISTRIBU, P78
   Liang FY, 2022, IEEE T VEH TECHNOL, V71, P4677, DOI 10.1109/TVT.2022.3148872
   Liu YR, 2022, IEEE INTERNET THINGS, V9, P21025, DOI 10.1109/JIOT.2022.3176305
   Luo SQ, 2020, IEEE T WIREL COMMUN, V19, P6535, DOI 10.1109/TWC.2020.3003744
   Ma QPA, 2021, IEEE J SEL AREA COMM, V39, P3654, DOI 10.1109/JSAC.2021.3118435
   McMahan HB, 2017, PR MACH LEARN RES, V54, P1273
   Nguyen DC, 2021, IEEE COMMUN SURV TUT, V23, P1622, DOI 10.1109/COMST.2021.3075439
   Nguyen J, 2022, PR MACH LEARN RES, V151
   OpenFog Consortium, 2017, OPENFOG REF ARCH FOG
   Saha R, 2021, IEEE INTERNET THINGS, V8, P8456, DOI 10.1109/JIOT.2020.3046509
   Savazzi S., 2019, FEDERATED LEARNING E
   Savazzi S, 2020, IEEE INTERNET THINGS, V7, P4641, DOI 10.1109/JIOT.2020.2964162
   Srirama SN, 2024, SOFTWARE PRACT EXPER, V54, P3, DOI 10.1002/spe.3243
   Srirama SN, 2023, COMPUT COMMUN, V199, P1, DOI 10.1016/j.comcom.2022.12.007
   Stergiou KD, 2022, IEEE T NETW SERV MAN, V19, P4213, DOI 10.1109/TNSM.2022.3197059
   Taneja M, 2020, COMPUT ELECTRON AGR, V171, DOI 10.1016/j.compag.2020.105286
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
   Tuo Zhang, 2021, SenSys '21: Proceedings of the 19th ACM Conference on Embedded Networked Sensor Systems, P413, DOI 10.1145/3485730.3493444
   Xu C., 2021, J INTELL MANUF, P32, DOI [10.1007/s10845-020-01570-5, DOI 10.1007/S10845]
   Zhu HQ, 2023, IEEE T MULTIMEDIA, V25, P5291, DOI 10.1109/TMM.2022.3189778
NR 31
TC 2
Z9 2
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2024
VL 54
IS 2
BP 186
EP 207
DI 10.1002/spe.3265
EA SEP 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL7E2
UT WOS:001058798000001
DA 2024-07-18
ER

PT J
AU Kuzma, B
   Korostelev, I
   de Carvalho, JPL
   Moreira, JE
   Barton, C
   Araujo, G
   Amaral, JN
AF Kuzma, Braedy
   Korostelev, Ivan
   de Carvalho, Joao P. L.
   Moreira, Jose E.
   Barton, Christopher
   Araujo, Guido
   Amaral, Jose Nelson
TI Fast matrix multiplication via compiler-only layered data reorganization
   and intrinsic lowering
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler analysis and transformations; GEMM; generating code for
   accelerators; LLVM
ID SOFTWARE
AB The resurgence of machine learning has increased the demand for high-performance basic linear algebra subroutines (BLAS), which have long depended on libraries to achieve peak performance on commodity hardware. High-performance BLAS implementations rely on a layered approach that consists of tiling and packing layers-for data (re)organization-and micro kernels that perform the actual computations. The algorithm for the tiling and packing layers is target independent but is parameterized to the memory hierarchy and register-file size. The creation of high-performance micro kernels requires significant development effort to write tailored assembly code for each architecture. This hand optimization task is complicated by the recent introduction of matrix engines by IBM (R) 's POWER10 (TM) (Matrix Multiply Assist-MMA), Intel (R) (Advanced Matrix eXtensions-AMX), and Arm (R) (Matrix Extensions-ME) to deliver high-performance matrix operations. This article presents a compiler-only alternative to the use of high-performance libraries by incorporating, to the best of our knowledge and for the first time, the automatic generation of the layered approach into LLVM, a production compiler. Modular design of the algorithm, such as the use of LLVM's matrix-multiply intrinsic for a clear interface between the tiling and packing layers and the micro kernel, makes it easy to retarget the code generation to multiple accelerators. The parameterization of the tiling and packing layers is demonstrated in the generation of code for the MMA unit on IBM's POWER10. This article also describes an algorithm that lowers the matrix-multiply intrinsic to the MMA unit. The use of intrinsics enables a comprehensive performance study. In processors without hardware matrix engines, the tiling and packing delivers performance up to 22x (Intel)-for small matrices-and more than 6x (POWER9)-for large matrices-faster than PLuTo, a widely used polyhedral optimizer. The performance also approaches high-performance libraries and is only 34% slower than OpenBLAS and on-par with Eigen for large matrices. With MMA in POWER10 this solution is, for large matrices, over 2.6x faster the vector-extension solution, matches Eigen performance, and achieves up to 96% of BLAS peak performance.
C1 [Kuzma, Braedy; Korostelev, Ivan; de Carvalho, Joao P. L.; Amaral, Jose Nelson] Univ Alberta, Comp Sci Dept, Edmonton, AB, Canada.
   [Moreira, Jose E.] IBM Corp, Thomas J Watson Res Ctr, New York, NY USA.
   [Barton, Christopher] IBM Corp, IBM Canada Software Lab, Markham, ON, Canada.
   [Araujo, Guido] Univ Estadual Campinas, Inst Comp, Campinas, SP, Brazil.
   [de Carvalho, Joao P. L.] Univ Alberta, Comp Sci Dept, 8900 114 St NW, Edmonton, AB, Canada.
C3 University of Alberta; International Business Machines (IBM);
   International Business Machines (IBM); Universidade Estadual de
   Campinas; University of Alberta
RP de Carvalho, JPL (corresponding author), Univ Alberta, Comp Sci Dept, 8900 114 St NW, Edmonton, AB, Canada.
EM joao.carvalho@ualberta.ca
RI Moreira, Jose/KMX-4138-2024; L. de Carvalho, João P./AEE-8616-2022
OI L. de Carvalho, João P./0000-0002-3476-184X
CR Alappat Christie L., 2020, High Performance Computing. 35th International Conference, ISC High Performance 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12151), P412, DOI 10.1007/978-3-030-50743-5_21
   [Anonymous], 2018, NVIDIA TENSOR CORE P
   ARM Ltd, 2021, Arm Architecture Reference Manual Armv8, for Armv8-A architecture profile
   BARNES GH, 1968, IEEE T COMPUT, VC 17, P746, DOI 10.1109/TC.1968.229158
   Bhat Puneeth., 2021, Matrix-Multiply Assist (MMA) Best Practices Guide
   Bondhugula U, 2008, LECT NOTES COMPUT SC, V4959, P132
   Bondhugula Uday, 2020, High Performance Code Generation in MLIR: An Early Case Study with GEMM
   dJPL C., 2021, ACM T ARCHIT CODE OP, V18
   Domke J., 2021, MATRIX ENGINES HIGH
   Fatahalian K., 2004, UNDERSTANDING EFFICI, P133
   Gareev R, 2018, ACM T ARCHIT CODE OP, V15, DOI 10.1145/3235029
   Goto K, 2008, ACM T MATH SOFTWARE, V34, DOI 10.1145/1356052.1356053
   Grosser T, 2012, PARALLEL PROCESS LET, V22, DOI 10.1142/S0129626412500107
   Guennebaud G., EIGEN V3 2010
   HAN D, 2019, DISTME FAST ELASTIC, P759
   Hassana SA, 2016, MICROPROCESS MICROSY, V47, P369, DOI 10.1016/j.micpro.2016.10.002
   Hemeida AM, 2020, AIN SHAMS ENG J, V11, P1179, DOI 10.1016/j.asej.2020.01.003
   IBM, 2020, POWER ISA VERSION 31
   IBM Corporation, 2020, POWER ISA VERSION 31
   Intel Corporation, 2021, INTEL ARCHITECTURE I
   Jouppi NP, 2017, 44TH ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA 2017), P1, DOI 10.1145/3079856.3080246
   KUCK DJ, 1968, IEEE T COMPUT, VC 17, P758, DOI 10.1109/TC.1968.229159
   Larsen ES., 2001, FAST MATRIX MULTIPLI, P55
   LI J, 2011, STRASSENS MATRIX MUL, P157
   Liao H., 2019, DAVINCI SCALABLE ARC, P1
   Low TM, 2016, ACM T MATH SOFTWARE, V43, DOI 10.1145/2925987
   Nath R, 2011, LECT NOTES COMPUT SC, V6449, P83, DOI 10.1007/978-3-642-19328-6_10
   Poenaru A, 2020, LECT NOTES COMPUT SC, V12247, P98, DOI 10.1007/978-3-030-57675-2_7
   QIN E, 2020, SIGMA SPARSE IRREGUL, P58, DOI 10.1109/HPCA47549.2020.00015
   Salvador Rohwedder C., 2023, PACK NOT PACK GEN PA, P14
   Starke WJ, 2021, IEEE MICRO, V41, P7, DOI 10.1109/MM.2021.3058632
   Van Zee FG, 2015, ACM T MATH SOFTWARE, V41, DOI 10.1145/2764454
   vande Geijn RA, 2011, Encyclopedia of parallel computing, P157, DOI [10.1007/978-0-387-09766-4_84, DOI 10.1007/978-0-387-09766-4_84]
   Vasudevan A, 2017, IEEE INT CONF ASAP, P19, DOI 10.1109/ASAP.2017.7995254
   Waugh H., 2020, SMOKY MOUNTAINS COMP, P67
   Whaley RC, 2001, PARALLEL COMPUT, V27, P3, DOI 10.1016/S0167-8191(00)00087-9
   XIANYI Z, 2012, MODEL DRIVEN LEVEL 3, P684, DOI 10.1109/ICPADS.2012.97
NR 37
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2023
VL 53
IS 9
BP 1793
EP 1814
DI 10.1002/spe.3214
EA MAY 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N8MZ4
UT WOS:000988585200001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Joskowski, A
   Przybylek, A
   Marcinkowski, B
AF Joskowski, Andrzej
   Przybylek, Adam
   Marcinkowski, Bartosz
TI Scaling scrum with a customized nexus framework: A report from a joint
   industry-academia research project
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE action research; agile process tailoring; agile transformation;
   large-scale agile; method configuration; organizational change; software
   process improvement
ID SOFTWARE-DEVELOPMENT; AGILE DEVELOPMENT; TEAM AUTONOMY; ADOPTION;
   CHALLENGES
AB Despite a wide range of scaling frameworks available, large-scale agile transformations are not straightforward undertakings. Few organizations have structures in place that fit the predefined workflows - while once one applies an off-the-shelf framework outside of its prescribed process, guidance quickly runs out. In this paper, we demonstrate how to instantiate a method configuration process using a lightweight experimental approach embedded in Action Research cycles. The proposed approach was developed to assist practitioners working on a multiple-team project at Intel Technology Poland to find the right practices to continue their Nexus-based transformation and integrate their in-house method into the already established company structures, processes, and routines. In particular, it enabled identifying a series of challenges with scaled practices and coping with those. The challenges ranged from logistical problems, through poor availability of the Product Owner, to lackluster knowledge transfer and a wide array of communication/coordination issues at meetings. The study broadens the current body of knowledge within technology management and the scaled agile method-tailoring domain. It indicates potential corrective actions that may be taken advantage of by entities that are not inclined, due to organizational constraints, to directly implement an off-the-shelf framework. Furthermore, our study demonstrates that a gradual transition to large-scale agile at the project level (1) is possible with the preservation of traditional command-and-control management practices; (2) requires neither middle management involvement nor upfront investment; and (3) does not need to disrupt the continuous delivery of the product.
C1 [Joskowski, Andrzej] Intel Technol Poland, Data Ctr Grp, Gdansk, Poland.
   [Przybylek, Adam] Gdansk Univ Technol, Fac Elect Telecommun & Informat, Gdansk, Poland.
   [Marcinkowski, Bartosz] Univ Gdansk, Dept Business Informat, Sopot, Poland.
   [Marcinkowski, Bartosz] Univ Gdansk, Dept Business Informat, Piaskowa 9, PL-81864 Sopot, Poland.
C3 Intel Corporation; Fahrenheit Universities; Gdansk University of
   Technology; Fahrenheit Universities; University of Gdansk; Fahrenheit
   Universities; University of Gdansk
RP Marcinkowski, B (corresponding author), Univ Gdansk, Dept Business Informat, Piaskowa 9, PL-81864 Sopot, Poland.
EM bartosz.marcinkowski@ug.edu.pl
RI Przybylek, Adam/AFR-3682-2022; Marcinkowski, Bartosz/H-9945-2014
OI Przybylek, Adam/0000-0002-8231-709X; Marcinkowski,
   Bartosz/0000-0002-7230-2978
CR Abrar MF, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2366
   Agerfalk PJ., 2003, P 5 INT C ENTERPRISE, P519
   Agh H, 2021, SOFTWARE QUAL J, V29, P337, DOI 10.1007/s11219-021-09551-4
   Almeida F., 2021, J. Appl. Sci. Manag. Eng. Technol., V2, P16
   Ambler SW, 2016, LECT NOTES BUS INF P, V238, P3, DOI 10.1007/978-3-319-27033-3_1
   Baskerville R. L., 1999, Communications of the association for information systems, V2, P2, DOI [https://doi.org/10.17705/1CAIS.00219, DOI 10.17705/1CAIS.00219]
   Berntzen M, 2023, IEEE T SOFTWARE ENG, V49, P699, DOI 10.1109/TSE.2022.3160873
   Berntzen M, 2019, LECT NOTES BUS INF P, V355, P121, DOI 10.1007/978-3-030-19034-7_8
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Buchalcevova A., 2021, ISD2021 P, P1377
   Butt SA, 2023, ADV ENG SOFTW, V175, DOI 10.1016/j.advengsoft.2022.103329
   Butt SA, 2022, ADV ENG SOFTW, V171, DOI 10.1016/j.advengsoft.2022.103159
   Butt SA, 2022, LECT NOTES BUS INF P, V438, P201, DOI 10.1007/978-3-030-94238-0_12
   Campanelli AS, 2018, J SYST SOFTWARE, V137, P366, DOI 10.1016/j.jss.2017.12.012
   Carroll N, 2020, LECT NOTES BUS INF P, V396, P75, DOI 10.1007/978-3-030-58858-8_8
   Childs S, 2013, REC MANAG J, V23, P191, DOI 10.1108/RMJ-07-2013-0016
   Ciancarini P, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P175, DOI [10.1109/ICSE-SEIP55303.2022.9794087, 10.1145/3510457.3513028]
   Conboy K, 2019, IEEE SOFTWARE, V36, P44, DOI 10.1109/MS.2018.2884865
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Cram WA, 2019, INFORM SYST MANAGE, V36, P2, DOI 10.1080/10580530.2018.1553645
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Edison H, 2022, IEEE T SOFTWARE ENG, V48, P2709, DOI 10.1109/TSE.2021.3069039
   Esfahani HC, 2010, LECT NOTES COMPUT SC, V6195, P163, DOI 10.1007/978-3-642-14347-2_15
   Esfahani HC, 2010, LECT NOTES COMPUT SC, V6051, P424, DOI 10.1007/978-3-642-13094-6_33
   Gustavsson T, 2022, IJISPM-INT J INF SYS, V10, P29, DOI 10.12821/ijispm100102
   Hanslo Ridewaan, 2020, 2020 15th Conference on Computer Science and Information Systems (FedCSIS), P697, DOI 10.15439/2020F214
   Hanslo R, 2020, LECT NOTES BUS INF P, V376, P82, DOI 10.1007/978-3-030-37534-8_5
   Hanslo R, 2018, FED CONF COMPUT SCI, P949, DOI 10.15439/2018F270
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Jacobson I, 2022, SOFTWARE PRACT EXPER, V52, P1531, DOI 10.1002/spe.3070
   Jarzebowicz A, 2019, ADV INTELL SYST, V830, P3, DOI 10.1007/978-3-319-99617-2_1
   Julian B, 2019, LECT NOTES BUS INF P, V355, P3, DOI 10.1007/978-3-030-19034-7_1
   Kalenda M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1954
   Karlsson F, 2004, INFORM SOFTWARE TECH, V46, P619, DOI 10.1016/j.infsof.2003.12.004
   Kasauli R, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110851
   Khalid A, 2020, INT J SOFTW INNOV, V8, P85, DOI 10.4018/IJSI.2020040106
   Kiv S, 2022, EXPERT SYST APPL, V195, DOI 10.1016/j.eswa.2022.116520
   Kowalczyk M, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2455
   Krasteva I, 2010, LECT NOTES COMPUT SC, V6051, P266, DOI 10.1007/978-3-642-13094-6_22
   Kurtz CF, 2003, IBM SYST J, V42, P462, DOI 10.1147/sj.423.0462
   Laanti M, 2019, LECT NOTES BUS INF P, V364, P81, DOI 10.1007/978-3-030-30126-2_10
   Malinova M, 2022, INFORM SYST, V104, DOI 10.1016/j.is.2021.101880
   Marner K, 2020, LECT NOTES BUS INF P, V376, P19, DOI 10.1007/978-3-030-37534-8_2
   McBride T., 2006, THESIS U TECHNOLOGY
   Mich D, 2020, FEDCSIS 2020 P, DOI [10.15439/2020F62, DOI 10.15439/2020F62]
   Naidoo R., 2021, ISD2021 P, P1317
   Neumann M, 2021, 2021 9TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2021), P79, DOI 10.1109/CONISOFT52520.2021.00022
   Neumann M, 2022, LECT NOTES BUS INF P, V438, P19, DOI 10.1007/978-3-030-94238-0_2
   Ozkan Necmettin, 2019, SOFTW QUAL PROF, V21, P11, DOI DOI 10.18517/IJASEIT.6.6.1374
   Poth Alexander, 2020, 2020 15th Conference on Computer Science and Information Systems (FedCSIS), P731, DOI 10.15439/2020F186
   Poth A, 2020, COMM COM INF SC, V1251, P191, DOI 10.1007/978-3-030-56441-4_14
   Poth A, 2020, HUM SYST MANAGE, V39, P573, DOI 10.3233/HSM-201049
   Pries-Heje J., 2017, Proceedings of the XP2017 Scientific Workshops on - XP'17, P1, DOI DOI 10.1145/3120459.3120478
   Putta A, 2021, LECT NOTES BUS INF P, V419, P172, DOI 10.1007/978-3-030-78098-2_11
   Putta A, 2019, LECT NOTES BUS INF P, V355, P154, DOI 10.1007/978-3-030-19034-7_10
   Qumer A, 2008, J SYST SOFTWARE, V81, P1899, DOI 10.1016/j.jss.2007.12.806
   Ramin F., 2020, P IEEE ACM 42 INT C, P137, DOI DOI 10.1145/3387940.3392241
   Remta D, 2021, INFORMATION, V12, DOI 10.3390/info12030107
   Rico S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2372
   Rolland K., 2016, 37 INT C INF SYST AI
   Russo D, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464938
   Saeeda H, 2023, 38TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2023, P1030, DOI 10.1145/3555776.3577662
   Schnitter J, 2011, COMM COM INF SC, V230, P209
   Schön EM, 2020, LECT NOTES BUS INF P, V383, P132, DOI 10.1007/978-3-030-49392-9_9
   Schwaber K, 2021, NEXUS GUIDE DEFINITI
   Spiegler SV, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09949-5
   Staron M, 2020, ACTION RES SOFTWARE, DOI [10.1007/978-3-030-32610-4, DOI 10.1007/978]
   Stettina CJ, 2015, INT J PROJ MANAG, V33, P140, DOI 10.1016/j.ijproman.2014.03.008
   Strode DE, 2022, IEEE T ENG MANAGE, V69, P3572, DOI 10.1109/TEM.2022.3160415
   Tengstrand SN, 2021, LECT NOTES BUS INF P, V419, P157, DOI 10.1007/978-3-030-78098-2_10
   Theobald S, 2020, LECT NOTES BUS INF P, V396, P219, DOI 10.1007/978-3-030-58858-8_22
   Theobald S, 2019, LECT NOTES BUS INF P, V364, P88, DOI 10.1007/978-3-030-30126-2_11
   Trippensee L., 2021, AMCIS 2021 P, P1340
   Uludag Ö, 2022, J SYST SOFTWARE, V194, DOI 10.1016/j.jss.2022.111473
   Uludag Ö, 2021, LECT NOTES BUS INF P, V419, P123, DOI 10.1007/978-3-030-78098-2_8
   Uludag Ö, 2018, IEEE INT ENTERP DIST, P191, DOI 10.1109/EDOC.2018.00032
NR 77
TC 3
Z9 3
U1 3
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2023
VL 53
IS 7
BP 1525
EP 1542
DI 10.1002/spe.3201
EA MAR 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H9FS7
UT WOS:000946432500001
DA 2024-07-18
ER

PT J
AU Balasubramanian, V
   Jolfaei, A
AF Balasubramanian, Venki
   Jolfaei, Alireza
TI A scalable framework for healthcare monitoring application using the
   Internet of Medical Things
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE IoT; IoMT; healthcare; framework; alerts; alarms
AB Internet of Things (IoT) is finding application in many areas, particularly in health care where an IoT can be effectively used in the form of an Internet of Medical Things (IoMT) to monitor the patients remotely. The quality of life of the patients and health care outcomes can be improved with the deployment of an IoMT because health care professionals can monitor conditions; access the electronic medical records and communicates with each other. This remote monitoring and consultations might reduce the traditional stressful and costly exercise of frequent hospitalization. Also, the rising costs of health care in many developed countries have influenced the introduction of the Healthcare Monitoring Application (HMA) to their existing health care practices. To materialize the HMA concepts for successful deployment for civilian and commercial use with ease, application developers can benefit from a generic, scalable framework that provides significant components for building an HMA. In this chapter, a generic maintainable HMA is advanced by amalgamating the advantages of event-driven and the layered architecture. The proposed framework is used to establish an HMA with an end-to-end Assistive Care Loop Framework (ACLF) to provide a real-time alarm and assistance to monitor pregnant women.
C1 [Balasubramanian, Venki] Federat Univ, Sch Sci Informat Technol & Engn, Ballarat, Vic, Australia.
   [Jolfaei, Alireza] Macquarie Univ, Dept Comp, Sydney, NSW, Australia.
C3 Federation University Australia; Macquarie University
RP Balasubramanian, V (corresponding author), Federat Univ, Sch Sci Informat Technol & Engn, Ballarat, Vic, Australia.
EM v.balasubramanian@federation.edu.au
RI Jolfaei, Alireza/GQH-6907-2022
OI Balasubramanian, Venki/0000-0001-6686-4424; Jolfaei,
   Alireza/0000-0001-7818-459X
CR Alexander KP, 2007, CIRCULATION, V115, P2570, DOI 10.1161/CIRCULATIONAHA.107.182616
   [Anonymous], 1999, P 1 WORK IFIP C SOFT
   Arora J., 2019, U-PORTO J ENG, V5, P34, DOI DOI 10.24840/2183-6493_005.001_0003
   Balasubramanian V., 2011, 2011 21st International Conference on Systems Engineering, P416, DOI 10.1109/ICSEng.2011.82
   Balasubramanian V, 2010, J HEALTHC ENG, V1, P239, DOI 10.1260/2040-2295.1.2.239
   Benjemmaa Afef, 2020, Advanced Information Networking and Applications. Proceedings of the 33rd International Conference on Advanced Information Networking and Applications (AINA-2019). Advances in Intelligent Systems and Computing (AISC 926), P963, DOI 10.1007/978-3-030-15032-7_81
   Crossbow Technology Inc, MOT WEAR SENS
   Ferneley EH, 1999, J SOFTW MAINT-RES PR, V11, P55, DOI 10.1002/(SICI)1096-908X(199901/02)11:1<55::AID-SMR184>3.0.CO;2-O
   Gamma Erich., 1994, DESIGN PATTERNS
   Gay D, 2003, ACM SIGPLAN NOTICES, V38, P1, DOI 10.1145/780822.781133
   Gilb T., 2008, DESIGNING MAINTAINAB
   Hasan MK, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19051208
   Hoang DB, 2008, 2008 10TH IEEE INTERNATIONAL CONFERENCE ON E-HEALTH NETWORKING, APPLICATIONS AND SERVICES, P118, DOI 10.1109/HEALTH.2008.4600121
   Islam SMR, 2015, IEEE ACCESS, V3, P678, DOI 10.1109/ACCESS.2015.2437951
   Jovanov E, 2001, Biomed Sci Instrum, V37, P373
   Land R, 2002, P ARTES GRAD STUD C
   Land R., 2002, 2 C SOFTW ENG RES PR
   Mahmoud MM., 2019, 2019 INT C COMP INF, P1
   Mardini MT, 2019, J MED SYST, V43, DOI 10.1007/s10916-019-1165-0
   Michelson B.M., 2006, EVENT DRIVEN ARCHITE
   Michelson BM., 2005, EVOLUTION SERVICE OR
   Sharma S, 2014, I C INF TECH MULTIM, P49, DOI 10.1109/ICIMU.2014.7066602
   Sriraman B., 2005, EVENT DRIVEN ARCHITE
   Stranieri A, 2019, MANAGERIAL PERSPECTI, P163
   Uddin Md Ashraf, 2018, Stud Health Technol Inform, V254, P105
   Wilson LS, 2000, TELEMED J, V6, P275, DOI 10.1089/107830200415225
NR 26
TC 7
Z9 7
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2457
EP 2468
DI 10.1002/spe.2849
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000713879400009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bocanegra, J
   Frantz, RZ
   Roos-Frantz, F
   Basso, FP
AF Bocanegra, Jose
   Frantz, Rafael Z.
   Roos-Frantz, Fabricia
   Basso, Fabio P.
TI Evaluating the semantic transparency of Guarana: A domain-specific
   language for enterprise application integration
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE DSL; enterprise application integration; graphical notation; integration
   patterns; integration process; integration solution; semantic
   transparency
ID COGNITIVE EFFECTIVENESS; SOFTWARE; PHYSICS; DESIGN
AB Guarana domain-specific language is aimed to design enterprise application integration models. Although the language has been broadly used in the industry and academy, the design of its graphical notation was based in the common sense and social opinion of its developers rather than theoretical principles and empirical evidence. Thus, Guarana becomes as an option for studying, modifying, and improving its concrete syntax. In this article we conducted an experiment with 85 participants in order to evaluate the semantic transparency of the concrete syntax of Guarana. The study concludes that the language is not found to be semantically immediate because most of the language constructs used in the graphical notation of Guarana are not semantically immediate, that is, a novice reader is not able to infer their meaning from their appearance alone.
C1 [Bocanegra, Jose] Univ Andes, Sch Engn, Dept Syst & Comp Engn, Bogota, Colombia.
   [Frantz, Rafael Z.; Roos-Frantz, Fabricia] Unijui Univ, Dept Exact Sci & Engn, Ijui, Brazil.
   [Basso, Fabio P.] Fed Univ Pampa, Campus Alegrete, Alegrete, Brazil.
C3 Universidad de los Andes (Colombia); Universidade Regional do Noroeste
   do Estado do Rio Grande do Sul - UNIJUI; Universidade Federal do Pampa
RP Bocanegra, J (corresponding author), Univ Andes, Sch Engn, Dept Syst & Comp Engn, Bogota, Colombia.
EM j.bocanegra@uniandes.edu.co
RI Roos-Frantz, Fabricia/Y-6059-2018; Z. Frantz, Rafael/J-9521-2012
OI Roos-Frantz, Fabricia/0000-0001-9514-6560; Z. Frantz,
   Rafael/0000-0003-3740-7560; Basso, Fabio/0000-0003-4275-0638; Bocanegra,
   Jose/0000-0002-8342-7346
FU Fundacao de Amparo a Pesquisa do Estado do Rio Grande do Sul
   [19/2551-0001268-3]; National Council for Scientific and Technological
   Development (CNPq) [309315/2020-4]; Research Support Foundation of Rio
   Grande do Sul (FAPERGS) [17/2551-0001206-2]
FX Fundacao de Amparo a Pesquisa do Estado do Rio Grande do Sul,
   Grant/Award Number: 19/2551-0001268-3; National Council for Scientific
   and Technological Development (CNPq), Grant/Award Number: 309315/2020-4;
   Research Support Foundation of Rio Grande do Sul (FAPERGS), Grant/Award
   Number: 17/2551-0001206-2
CR Albaum G, 1997, J MARKET RES SOC, V39, P331
   Albuquerque D, 2015, J SYST SOFTWARE, V101, P245, DOI 10.1016/j.jss.2014.11.051
   ALTMAN DG, 1994, BRIT MED J, V308, P1552, DOI 10.1136/bmj.308.6943.1552
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Boone S, 2014, LECT NOTES BUS INF P, V197, P87
   Caire P, 2013, S VIS LANG HUM CEN C, P115, DOI 10.1109/RE.2013.6636711
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Dossot D., 2014, Mule in action
   El Kouhen A, 2015, LECT NOTES COMPUT SC, V9369, P122, DOI 10.1007/978-3-319-24912-4_10
   Estublier J, 2005, LECT NOTES COMPUT SC, V3713, P69, DOI 10.1007/11557432_6
   Fisher M., 2012, Spring integration in action
   Fowler M., 2010, Domain-specific languages
   Frantz RZ, 2016, J SYST SOFTWARE, V111, P89, DOI 10.1016/j.jss.2015.08.044
   Frantz RZ, 2011, INT J COOP INF SYST, V20, P143, DOI 10.1142/S0218843011002225
   Freire DL, 2019, SOFTWARE PRACT EXPER, V49, P341, DOI 10.1002/spe.2670
   Genon Nicolas, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P140, DOI 10.1007/978-3-642-28714-5_12
   Genon N, 2011, LECT NOTES COMPUT SC, V6598, P221, DOI 10.1007/978-3-642-21652-7_14
   Genon N, 2011, LECT NOTES COMPUT SC, V6563, P377, DOI 10.1007/978-3-642-19440-5_25
   Ghosh D., 2011, DSLS ACTION
   Granada D, 2017, SOFTW SYST MODEL, V16, P195, DOI 10.1007/s10270-014-0447-8
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   He W, 2014, IEEE T IND INFORM, V10, P35, DOI 10.1109/TII.2012.2189221
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Ibsen C., 2010, Camel in action
   Indrasiri K., 2016, Introduction to WSO2 ESB
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Konsek H., 2013, Instant apache servicemix how-to
   Lazar J, 2017, RESEARCH METHODS IN HUMAN-COMPUTER INTERACTION, 2ND EDITION, P187, DOI 10.1016/B978-0-12-805390-4.00008-X
   Li Y., 2017, THESIS KTH ROYAL I T
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Patten ML., 2017, UNDERSTANDING RES ME
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Riti P., 2018, PRACTICAL SCALA DSLS, P59, DOI DOI 10.1007/978-1-4842-3036-7_4
   Russell J., 2012, Fuse esb
   Russell J., 2012, Petals ESB
   Russell J., 2012, Jitterbit integration server
   Saeed M., 2014, REQUIR ENG, P180
   Santos M, 2018, LECT NOTES COMPUT SC, V11157, P424, DOI 10.1007/978-3-030-00847-5_30
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Scott MacKenzie I., 2013, Human-Computer Interaction: An Empirical Research Perspective, Vfrst
   Spector PaulE., 1981, RES DESIGNS, V23
   Thoo E, 2019, MAGIC QUADRANT ENTER
   Tolvanen JP, 2005, LECT NOTES COMPUT SC, V3714, P198
   van der Linden D, 2019, IEEE T SOFTWARE ENG, V45, P736, DOI 10.1109/TSE.2018.2802910
   Van Deursen A, 1998, J SOFTW MAINT-RES PR, V10, P75, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<75::AID-SMR168>3.0.CO;2-5
   Yamane T., 1973, STAT INTRO ANAL 3
NR 47
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 967
EP 983
DI 10.1002/spe.3045
EA OCT 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000708793600001
DA 2024-07-18
ER

PT J
AU Wilson, AJ
   Radhamani, AS
AF Wilson, Allan Jenose
   Radhamani, Aravindhan Sarojini
TI Real time flood disaster monitoring based on energy efficient ensemble
   clustering mechanism in wireless sensor network
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE black widow spiders optimization algorithm; consensus function; data
   transmission; ensemble clustering method; ensemble generation; flood
   disaster monitoring; unified scalable ensemble clustering algorithm;
   wireless sensor network
ID AWARE ROUTING PROTOCOL; QOS-AWARE; ALGORITHM; MAXIMIZATION; CONSUMPTION;
   PREDICTION; STRATEGY; DELIVERY; LIFETIME; SCHEME
AB In this article, energy efficient ensemble clustering method (EECM) with black widow optimization (EECM-BWO) algorithm is proposed for effective data transmission with the help of real time flood disaster monitoring wireless sensor network (WSN). Initially, unified scalable ensemble clustering algorithm based on ensemble generation and consensus function is proposed for selecting the optimal routing path among the node using BWO algorithm. Then, biologically inspired routing black widow spiders optimization algorithm is proposed to trade off the nodes energy level, self-organization, and self-configuration in the WSN. The simulation is performed using NS2 simulator for validating the performance of the proposed EECM-BWO method. Here, in node, low delay achieves 24.07%, 72.58%, 51.36%, 81.75%, 77.74%, high packet delivery ratio achieves 70.83%, 53.93%, 90.23%, 43.58%, 24.58%, low packet drop attains 77.93%, 72.76%, 61.56%, 51.87%, 34.35%, low energy consumption attains 75.9%, 52.94%, 65.81%, 58%, 41.2% compared with existing energy-efficient clustering approach consolidated game theory as well as dual-cluster-head mode for WSNs energy-aware clustering by cuckoo optimization approach (EECM-COA), energy-aware clustering-based routing using multi-path reliable transmission with routing and control board (EECM-RCB-MRT), adaptive repair algorithm with temporally ordered routing algorithms for flood control strategy (EECM-AR-TORA-FCS), passive multi-hop clustering algorithm (EECM-PMC), dynamic source routing protocol based on genetic algorithm-bacterial foraging optimization (DSR-GA-BFO).
C1 [Wilson, Allan Jenose] Amrita Coll Engn & Technol, Dept Elect & Commun Engn, Nagercoil, India.
   [Radhamani, Aravindhan Sarojini] VV Coll Engn, Dept Elect & Commun Engn, Tirunelveli, India.
RP Wilson, AJ (corresponding author), Amrita Coll Engn & Technol, Dept Elect & Commun Engn, Nagercoil, India.
EM allanjw94449@gmail.com
RI A S, Radhamani/JCF-2701-2023; J Wilson, Allan/IQU-6466-2023
CR Al Qundus J, 2020, ANN OPER RES, DOI 10.1007/s10479-020-03754-x
   Amjad M, 2017, IEEE ACCESS, V5, P10250, DOI 10.1109/ACCESS.2017.2712662
   Anisi MH, 2013, WIREL NETW, V19, P495, DOI 10.1007/s11276-012-0480-x
   Anisi MH, 2013, INT J AD HOC UBIQ CO, V12, P46, DOI 10.1504/IJAHUC.2013.051390
   Anisi MH, 2008, 2008 INTERNATIONAL CONFERENCE ON SOFTWARE, TELECOMMUNICATIONS AND COMPUTER NETWORKS, P190, DOI 10.1109/SOFTCOM.2008.4669477
   Arthi K, 2019, CLUSTER COMPUT, V22, P15273, DOI 10.1007/s10586-018-2563-7
   Chen JQ, 2018, IEEE T VEH TECHNOL, V67, P1546, DOI 10.1109/TVT.2017.2753772
   Cui YY, 2020, AEU-INT J ELECTRON C, V118, DOI 10.1016/j.aeue.2020.153134
   Debasis K, 2021, J AMB INTEL HUM COMP, V12, P1435, DOI 10.1007/s12652-020-02214-5
   Faheem M, 2018, APPL SOFT COMPUT, V68, P910, DOI 10.1016/j.asoc.2017.07.045
   Fu XW, 2019, J NETW COMPUT APPL, V137, P11, DOI 10.1016/j.jnca.2019.04.005
   Goudarzi S, 2019, COMPUT ELECTR ENG, V75, P1, DOI 10.1016/j.compeleceng.2019.01.028
   Hayyolalam V, 2020, ENG APPL ARTIF INTEL, V87, DOI 10.1016/j.engappai.2019.103249
   Huang D, 2020, IEEE T KNOWL DATA EN, V32, P1212, DOI 10.1109/TKDE.2019.2903410
   Khabiri M, 2018, WIRELESS PERS COMMUN, V98, P2473, DOI 10.1007/s11277-017-4983-8
   Kumar S, 2019, COMPUT NETW, V154, P79, DOI 10.1016/j.comnet.2019.03.001
   Li F, 2018, PHYS COMMUN-AMST, V27, P181, DOI 10.1016/j.phycom.2018.02.010
   Liang XY, 2019, WIRELESS PERS COMMUN, V107, P57, DOI 10.1007/s11277-019-06240-1
   Liu S, 2020, COMPUT COMMUN, V151, P437, DOI 10.1016/j.comcom.2020.01.024
   Liu XX, 2021, APPL INTELL, V51, P4162, DOI 10.1007/s10489-020-01938-3
   Marietta J, 2020, WIRELESS PERS COMMUN, V111, P209, DOI 10.1007/s11277-019-06853-6
   Mehta D, 2020, SUSTAIN COMPUT-INFOR, V28, DOI 10.1016/j.suscom.2020.100406
   Ning T, 2021, J AMB INTEL HUM COMP, V12, P2053, DOI 10.1007/s12652-020-02304-4
   Pitchaimanickam B, 2020, NEURAL COMPUT APPL, V32, P7709, DOI 10.1007/s00521-019-04441-0
   Priyadarshini RR, 2019, J OCEAN ENG SCI, V4, P317, DOI 10.1016/j.joes.2019.05.007
   Rao M, 2018, WIRELESS PERS COMMUN, V101, P635, DOI 10.1007/s11277-018-5708-3
   Saini TK, 2019, AD HOC NETW, V89, P58, DOI 10.1016/j.adhoc.2019.03.001
   Sangaiah AK, 2019, IEEE ACCESS, V7, P180258, DOI 10.1109/ACCESS.2019.2952644
   Sayeed MA, 2020, INT J COMMUN SYST, V33, DOI 10.1002/dac.4170
   Shah IK, 2020, IET COMMUN, V14, P1301, DOI 10.1049/iet-com.2019.0465
   Sharma H, 2019, AD HOC NETW, V94, DOI 10.1016/j.adhoc.2019.101966
   Slowik A, 2018, IEEE T IND INFORM, V14, P1004, DOI 10.1109/TII.2017.2786782
   Soleymani SA, 2016, WATER RESOUR MANAG, V30, P3265, DOI 10.1007/s11269-016-1347-1
   Su J, 2020, IEEE T WIREL COMMUN, V19, P2974, DOI 10.1109/TWC.2020.2969634
   Sujanthi S, 2020, WIRELESS PERS COMMUN, V114, P2135, DOI 10.1007/s11277-020-07469-x
   Tan JW, 2019, IEEE ACCESS, V7, P64878, DOI 10.1109/ACCESS.2019.2915385
   Wahyono ID, 2019, 2019 INTERNATIONAL CONFERENCE ON ELECTRICAL, ELECTRONICS AND INFORMATION ENGINEERING (ICEEIE), P144, DOI [10.1109/iceeie47180.2019.8981459, 10.1109/ICEEIE47180.2019.8981459]
   Yahiaoui S, 2018, AEU-INT J ELECTRON C, V83, P193, DOI 10.1016/j.aeue.2017.08.045
   Yang JN, 2019, IEEE T WIREL COMMUN, V18, P1779, DOI 10.1109/TWC.2019.2897296
   Yicheng Wei, 2020, Machine Learning for Cyber Security. Third International Conference, ML4CS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12488), P144, DOI 10.1007/978-3-030-62463-7_14
   Zervopoulos A, 2019, INT CONF INFORM INTE, P453, DOI 10.1109/iisa.2019.8900750
   Zhang DG, 2020, IEEE ACCESS, V8, P69058, DOI 10.1109/ACCESS.2020.2986078
   Zhang DG, 2021, MOBILE NETW APPL, V26, P523, DOI 10.1007/s11036-018-1123-y
   Zhang DG, 2020, WIREL NETW, V26, P1503, DOI 10.1007/s11276-019-02216-y
   Zhang DG, 2019, IEEE ACCESS, V7, P158514, DOI 10.1109/ACCESS.2019.2950266
   Zhang DG, 2019, WIREL NETW, V25, P3587, DOI 10.1007/s11276-019-01955-2
   Zhang DG, 2018, INT J COMMUN SYST, V31, DOI 10.1002/dac.3824
   Zhang DG, 2018, J NETW COMPUT APPL, V122, P37, DOI 10.1016/j.jnca.2018.07.018
   Zhang DG, 2018, EURASIP J WIREL COMM, DOI 10.1186/s13638-018-1176-4
   Zhang DG, 2018, MOBILE NETW APPL, V23, P828, DOI 10.1007/s11036-017-0878-x
   Zhang DG, 2017, SOFT COMPUT, V21, P7313, DOI 10.1007/s00500-016-2270-3
   Zhang DG, 2017, J NETW COMPUT APPL, V88, P1, DOI 10.1016/j.jnca.2017.03.025
   Zhang DG, 2020, AEU-INT J ELECTRON C, V126, DOI 10.1016/j.aeue.2020.153372
   Zhang DG, 2019, APPL INTELL, V49, P1866, DOI 10.1007/s10489-018-1368-y
   Zhang DG, 2019, IEEE T INTELL TRANSP, V20, P1517, DOI 10.1109/TITS.2018.2853165
   Zhang T, 2021, NEUROCOMPUTING, V420, P98, DOI 10.1016/j.neucom.2020.09.042
   Zhang T, 2019, IEEE ACCESS, V7, P82571, DOI 10.1109/ACCESS.2019.2921310
   Zhang W., 2020, SOFT COMPUT, P1
   Zhang WB, 2018, IEEE ACCESS, V6, P46495, DOI 10.1109/ACCESS.2018.2866165
NR 59
TC 8
Z9 9
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 254
EP 276
DI 10.1002/spe.3019
EA AUG 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000687885100001
DA 2024-07-18
ER

PT J
AU Marowka, A
AF Marowka, Ami
TI Reformulation of the performance portability metric
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE benchmarking; heterogeneous computing; metrics; performance model;
   performance portability
AB The 3-P challenge of high-performance programming-performance, portability and productivity-has become more difficult than ever in the age of heterogeneous computing. It would be naive to think that the performance portability problem can be completely solved, but it can certainly be reduced and made tolerable. However, first and foremost, an agreement is needed on what it means for an application to be performance portable. Unfortunately, there is still no consensus in the scientific community on a workable definition of the term performance portability. Several years ago, a comprehensive effort was made to formulate a novel definition of performance portability and an associated metric. Since the new metric was first introduced, it has been widely adopted by the scientific community, and many advanced studies have used it. Unfortunately, the definition of the new metric has flaws. This article presents a proof of the theoretical flaws in the definition of the new metric, considers the practical implications of these flaws as reflected in many studies that have used it in recent years, and proposes a revised metric that addresses the flaws and provides guidelines on how to use it correctly.
C1 [Marowka, Ami] Parallel Res Lab, 8 Rosh Pina, IL-49729 Petah Tiqwa, Israel.
RP Marowka, A (corresponding author), Parallel Res Lab, 8 Rosh Pina, IL-49729 Petah Tiqwa, Israel.
EM amimar2@yahoo.com
CR Daniel DF, 2019, PROCEEDINGS OF P3HPC 2019: 2019 IEEE/ACM INTERNATIONAL WORKSHOP ON PERFORMANCE, PORTABILITY AND PRODUCTIVITY IN HPC (P3HPC), P50, DOI 10.1109/P3HPC49587.2019.00010
   de Carvalho M, 2016, AM STAT, V70, P270, DOI 10.1080/00031305.2016.1148632
   Deakin T, 2019, PROCEEDINGS OF P3HPC 2019: 2019 IEEE/ACM INTERNATIONAL WORKSHOP ON PERFORMANCE, PORTABILITY AND PRODUCTIVITY IN HPC (P3HPC), P1, DOI 10.1109/P3HPC49587.2019.00006
   DOE, 2016, CTR EXC PERF PORT M
   Dreuning H, 2018, LECT NOTES COMPUT SC, V11203, P724, DOI 10.1007/978-3-030-02465-9_52
   Ferrante J., 1994, PORTABILITY PERFORMA
   Frey B. B., 2018, The SAGE encyclopedia of educational research, measurement, and evaluation Vols, DOI DOI 10.4135/9781506326139
   Geva R., 2017, RAINBOWS UNICORNS PE
   Grete P, 2021, IEEE T PARALL DISTR, V32, P85, DOI 10.1109/TPDS.2020.3010016
   Harrell SL, 2018, PROCEEDINGS OF 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON PERFORMANCE, PORTABILITY AND PRODUCTIVITY IN HPC (P3HPC 2018), P24, DOI 10.1109/P3HPC.2018.00006
   Hsu A, 2018, PROCEEDINGS OF 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON PERFORMANCE, PORTABILITY AND PRODUCTIVITY IN HPC (P3HPC 2018), P47, DOI 10.1109/P3HPC.2018.00008
   Kirk RO, 2017, IEEE INT C CL COMP, P834, DOI 10.1109/CLUSTER.2017.122
   Law T. R., 2018, P 2018 INT WORKSH PE
   Marowka A., 2021, P 2021 29 EUR INT C
   Marowka A, 2011, COMPUTER, V44, P49, DOI 10.1109/MC.2011.133
   McChesney J., 2016, YOU SHOULD SUMMARIZE
   Mcintosh-Smith, 2020, P PERF PORT PROD WOR
   McNichol D., 2018, AVERAGE YOURE USING
   Pellissier Gart M., 1986, SOFTWARE PORTABILITY
   Pennycook SJ, 2018, PROCEEDINGS OF 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON PERFORMANCE, PORTABILITY AND PRODUCTIVITY IN HPC (P3HPC 2018), P37, DOI 10.1109/P3HPC.2018.00007
   Pennycook SJ, 2019, FUTURE GENER COMP SY, V92, P947, DOI 10.1016/j.future.2017.08.007
   Pennycook Simon J., 2016, ARXIV161107409
   Reguly IZ, 2019, PROCEEDINGS OF P3HPC 2019: 2019 IEEE/ACM INTERNATIONAL WORKSHOP ON PERFORMANCE, PORTABILITY AND PRODUCTIVITY IN HPC (P3HPC), P26, DOI 10.1109/P3HPC49587.2019.00008
   SMITH JE, 1988, COMMUN ACM, V31, P1202, DOI 10.1145/63039.63043
   Standl B, 2017, LECT NOTES COMPUT SC, V10696, P180, DOI 10.1007/978-3-319-71483-7_15
   Williams S, 2009, COMMUN ACM, V52, P65, DOI 10.1145/1498765.1498785
   Yang C, 2018, PROCEEDINGS OF 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON PERFORMANCE, PORTABILITY AND PRODUCTIVITY IN HPC (P3HPC 2018), P14, DOI 10.1109/P3HPC.2018.00005
   Zhao TW, 2018, PROCEEDINGS OF 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON PERFORMANCE, PORTABILITY AND PRODUCTIVITY IN HPC (P3HPC 2018), P59, DOI 10.1109/P3HPC.2018.00009
NR 28
TC 6
Z9 6
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 154
EP 171
DI 10.1002/spe.3002
EA JUN 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000659708200001
DA 2024-07-18
ER

PT J
AU Abid, A
   Cheikhrouhou, S
   Kallel, S
   Jmaiel, M
AF Abid, Amal
   Cheikhrouhou, Saoussen
   Kallel, Slim
   Jmaiel, Mohamed
TI NovidChain: Blockchain-based privacy-preserving platform for COVID-19
   test/vaccine certificates
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Blockchain; COVID-19 pandemic; digital health certificate; GDPR; KYC;
   privacy self-sovereignty; W3C verifiable credentials
AB The COVID-19 pandemic has emerged as a highly transmissible disease which has caused a disastrous impact worldwide by adversely affecting the global economy, health, and human lives. This sudden explosion and uncontrolled worldwide spread of COVID-19 has revealed the limitations of existing healthcare systems regarding handling public health emergencies. As governments seek to effectively re-establish their economies, open workplaces, ensure safe travels and progressively return to normal life, there is an urgent need for technologies that may alleviate the severity of the losses. This article explores a promising solution for secure Digital Health Certificate, called NovidChain, a Blockchain-based privacy-preserving platform for COVID-19 test/vaccine certificates issuing and verifying. More precisely, NovidChain incorporates several emergent concepts: (i) Blockchain technology to ensure data integrity and immutability, (ii) self-sovereign identity to allow users to have complete control over their data, (iii) encryption of Personally Identifiable Information to enhance privacy, (iv) W3C verifiable credentials standard to facilitate instant verification of COVID-19 proof, and (v) selective disclosure concept to permit user to share selected pieces of information with trusted parties. Therefore, NovidChain is designed to meet a high level of protection of personal data, in compliant with the GDPR and KYC requirements, and guarantees the user's self-sovereignty, while ensuring both the safety of populations and the user's right to privacy. To prove the security and efficiency of the proposed NovidChain platform, this article also provides a detailed technical description, a proof-of-concept implementation, different experiments, and a comparative evaluation. The evaluation shows that NovidChain provides better financial cost and scalability results compared to other solutions. More precisely, we note a high difference in time between operations (i.e., between 46% and 56%). Furthermore, the evaluation confirms that NovidChain ensures security properties, particularly data integrity, forge, binding, uniqueness, peer-indistinguishability, and revocation.
C1 [Abid, Amal; Cheikhrouhou, Saoussen; Kallel, Slim; Jmaiel, Mohamed] Univ Sfax, Natl Engn Sch Sfax, ReDCAD, BP 1173, Sfax 3038, Tunisia.
   [Cheikhrouhou, Saoussen; Kallel, Slim; Jmaiel, Mohamed] Digital Res Ctr Sfax, Sfax, Tunisia.
C3 Universite de Sfax; Ecole Nationale dIngenieurs de Sfax (ENIS); Centre
   de Recherche en Numerique de Sfax (CRNS); Universite de Sfax
RP Abid, A (corresponding author), Univ Sfax, Natl Engn Sch Sfax, ReDCAD, BP 1173, Sfax 3038, Tunisia.
EM amal.abid@redcad.org
OI Cheikhrouhou, Saoussen/0000-0003-4607-7452; Abid,
   Amal/0000-0003-0669-8406; Jmaiel, Mohamed/0000-0002-2664-0204
CR Abid Amal, 2020, SenSys '20: Proceedings of the 18th Conference on Embedded Networked Sensor Systems, P764, DOI 10.1145/3384419.3430605
   [Anonymous], 2019, PUBLIC KEY AUTHENTIC
   [Anonymous], 2018, ERC 1056 LIGHTWEIGHT
   [Anonymous], 2020, NOVIDCHAIN PROOF CON
   [Anonymous], 2020, IMMUPASS SIMPLE SECU
   [Anonymous], 2018, NEXT GENERATION UPOR
   [Anonymous], 2020, COVI PASS TENTO HLTH
   [Anonymous], 2021, CORONAVIRUS COMMISSI
   [Anonymous], 2018, ERC 1098 ENCRYPTION
   [Anonymous], 2020, CORONAVIRUS FIGHT CH
   [Anonymous], 2020, SECURITY NHS CONTACT
   [Anonymous], BBC NEWS
   [Anonymous], 2021, IBM DIGITAL HLTH PAS
   [Anonymous], 2017, UPORT PROJECT GITHUB
   [Anonymous], 2020, ESTONIA TESTS 1 DIGI
   Bansal A, 2020, J MED SYST, V44, DOI 10.1007/s10916-020-01616-4
   Benet J, 2014, ARXIV14073561
   Bernal JL, 2021, NEW ENGL J MED, V385, P585, DOI 10.1056/NEJMoa2108891
   Chen SM, 2020, LANCET, V395, P1305, DOI 10.1016/S0140-6736(20)30744-3
   CoronaPass-FAQ, 2020, BIZ
   Crowcroft J., 2020, ARXIV PREPRINT ARXIV
   Eisenstadt M, 2020, IEEE OPEN J ENG MED, V1, P148, DOI 10.1109/OJEMB.2020.2999214
   Fraser B, 2020, LANCET, V395, P1473, DOI 10.1016/S0140-6736(20)31096-5
   Groppe S, 2011, DATA MANAGEMENT AND QUERY PROCESSING IN SEMANTIC WEB DATABASES, P1, DOI 10.1007/978-3-642-19357-6_1
   Kalla Anshuman, 2020, IEEE Engineering Management Review, V48, P85, DOI 10.1109/EMR.2020.3014052
   Khurshid A, 2020, JMIR MED INF, V8, DOI 10.2196/20477
   Mansour E, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P223, DOI 10.1145/2872518.2890529
   Mithani S.S., 2021, SCOPING REV GLOBAL V, DOI 10.21203/rs.3.rs-334258/v2
   Naik N, 2020, 2020 6TH IEEE INTERNATIONAL SYMPOSIUM ON SYSTEMS ENGINEERING (IEEE ISSE 2020), DOI 10.1109/isse49799.2020.9272223
   Nakamoto Satoshi, 2008, Re: Bitcoin P2P e-cash paper 2008-11-17 16:33:04 UTC
   Phelan AL, 2020, LANCET, V395, P1595, DOI 10.1016/S0140-6736(20)31034-5
   Sharma A, 2020, REPROD MED BIOL, V19, P243, DOI [10.1002/rmb2.12326, 10.1007/s42600-020-00106-3]
   Shen J., 2019, P INT S QUAL SERV IW, P1, DOI [DOI 10.1109/icems.2019.8922119, DOI 10.1109/ICAWST.2019.8923506]
   Sicpa CERTUS, 2020, COVID 19 HLTH PASSP
   Sporny M., 2019, Verifiable Credentials Data Model 1.0
   Tuli S, 2020, INTERNET THINGS-NETH, V11, DOI 10.1016/j.iot.2020.100222
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Xu H, 2021, IEEE INTERNET THINGS, V8, P3915, DOI 10.1109/JIOT.2020.3025953
NR 39
TC 42
Z9 42
U1 5
U2 32
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 841
EP 867
DI 10.1002/spe.2983
EA MAY 2021
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000651548100001
PM 34226768
OA Green Published
DA 2024-07-18
ER

PT J
AU Araújo-de-Oliveira, P
   Durán, F
   Pimentel, E
AF Araujo-de-Oliveira, Patricia
   Duran, Francisco
   Pimentel, Ernesto
TI A procedural and flexible approach for specification, modeling,
   definition, and analysis for self-adaptive systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptation specification; design-time analysis; modeling; self-adaptive
   behavior; self-adaptive models
ID PERFORMANCE
AB An adaptive system can modify its settings at runtime as a response to changes in its operational environment. To analyse this kind of systems at design time is a difficult task since it requires considering the system together with the adaptation operations, and taking into account how such adaptations act on the system. In order to use simulation-based techniques for the analysis of such systems, we not only need precise executable models of the systems to be analyzed, but also to capture the semantics of their adaptation mechanisms. Given the wide range and flexibility of adaptation operations, we need ways to allow the definition of new operations. We present a flexible approach for the definition and simulation-based analysis in design-time of adaptive component-based systems. Our approach combines an extension of the Palladio component model in e-Motions, a model of the adaptation mechanisms, and elastic requirements specification using the SYBL language. From the model of the system, its adaptation mechanisms, and its requirements, an executable Maude specification is generated for simulation. The application of the approach is illustrated on a use case that comprises some components and adaptations rules. The example is then analyzed using simulations. It is also shown that it is indeed possible to define additional metrics, specify adaptation requirements and rules which conduct simulations of the models in a more flexible way, and that the results of the simulation performed from these definitions can be used to carry on a valuable predictive performance analysis.
C1 [Araujo-de-Oliveira, Patricia; Duran, Francisco; Pimentel, Ernesto] Univ Malaga, ITIS Software, Malaga, Spain.
   [Araujo-de-Oliveira, Patricia] Univ Fed Amapa, Dept Exact & Technol Sci, Amapa, Brazil.
C3 Universidad de Malaga; Fundacao Universidade Federal do Amapa
RP Araújo-de-Oliveira, P (corresponding author), Univ Malaga, ITIS Software, Malaga, Spain.
EM patricia.araoli@gmail.com
RI Araujo de Oliveira, Patricia/IQW-2877-2023; Pimentel,
   Ernesto/AAC-3810-2019; Durán, Francisco/JXL-7273-2024
OI Pimentel, Ernesto/0000-0002-7125-8434; Araujo de Oliveira,
   Patricia/0000-0002-2233-9609
FU CNPq of the Ministry of Science and Technology [205846/2014-9]; Ministry
   of Economy, Industry and Competitiveness [PGC2018-094905-B-100];
   Regional Government of Andalucia [UMA18-FEDERJA-180, UMA-CEIATECH-08]
FX CNPq of the Ministry of Science and Technology, Grant/Award Number:
   205846/2014-9; Ministry of Economy, Industry and Competitiveness,
   Grant/Award Number: PGC2018-094905-B-100; Regional Government of
   Andalucia, Grant/Award Numbers: UMA18-FEDERJA-180 and UMA-CEIATECH-08
CR Abuseta Y, 2015, INT CONF SOFTW ENG, P70, DOI 10.1109/ICSESS.2015.7339008
   [Anonymous], 2011, OMG business process model and notation (BPMN
   Arcelli D, 2020, PROCEDIA COMPUT SCI, V170, P498, DOI 10.1016/j.procs.2020.03.108
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Becker Koziolek., 2007, P 6 INT WORKSHOP SOF, P54
   Becker M., 2013, Software Engineering, V213, P71
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Becker Steffen, 2017, Engineering Scalable, Elastic, and Cost-Efficient Cloud Computing Applications: The CloudScale Method
   Bernardi S, 2019, SOFTW SYST MODEL, V18, P2241, DOI 10.1007/s10270-018-0663-8
   Bezerra CIM, 2017, ACM INT CONF PR SER, P35, DOI 10.1145/3168365.3168375
   Bezerra Carla IM, 2016, P 20 INT SYSTEMS SOF, P314
   Bucchiarone Antonio, 2015, Software, Services and Systems: Essays Dedicated to Martin Wirsing on the Occasion of his Retirement from the Chair of Programming and Software Engineering: LNCS 8950, P582
   Chen B, 2019, IEEE T SERV COMPUT, V12, P73, DOI 10.1109/TSC.2016.2593459
   Copil G, 2013, IEEE ACM INT SYMP, P112, DOI 10.1109/CCGrid.2013.42
   Criado J, 2018, FUND INFORM, V162, P283, DOI 10.3233/FI-2018-1726
   Criado J, 2016, LECT NOTES COMPUT SC, V9893, P288, DOI 10.1007/978-3-319-45547-1_23
   de Oliveira PA, 2018, LECT NOTES COMPUT SC, V10729, P475, DOI 10.1007/978-3-319-74781-1_32
   de Sousa AO, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P213, DOI 10.1145/3350768.3352455
   Durán F, 2016, LECT NOTES COMPUT SC, V9633, P305, DOI 10.1007/978-3-662-49665-7_18
   Edwards R, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P12, DOI 10.1145/3194133.3194142
   Eker S., 2007, ALL MAUDE LECT NOTES, V4350
   Falkner K, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P44, DOI 10.1145/2976767.2987689
   Franco JM, 2016, J SYST SOFTWARE, V115, P42, DOI 10.1016/j.jss.2016.01.026
   Grassi V, 2009, LECT NOTES COMPUT SC, V5525, P201, DOI 10.1007/978-3-642-02161-9_11
   Happe J, 2011, IEEE SOFTWARE, V28, P27, DOI 10.1109/MS.2011.25
   Heinrich Robert, 2016, ACM SIGMETRICS Performance Evaluation Review, V43, P13, DOI 10.1145/2897356.2897359
   Huber N, 2012, INT CONF E BUS ENG, P70, DOI 10.1109/ICEBE.2012.21
   Johnsen EB, 2016, LECT NOTES COMPUT SC, V9953, P482, DOI 10.1007/978-3-319-47169-3_39
   Kaplan GN., 2017, P 20 IB C SOFTW ENG, P1
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Mian NA, 2017, INT J COMPUT SCI NET, V17, P158
   Moreno-Delgado A, 2014, LECT NOTES COMPUT SC, V8569, P132
   Naeen HM, 2020, SOFTWARE PRACT EXPER, V50, P161, DOI 10.1002/spe.2764
   Raibulet C, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P325, DOI 10.1016/B978-0-12-802855-1.00013-7
   Romero JR, 2007, J OBJECT TECHNOL, V6, P187, DOI 10.5381/jot.2007.6.9.a10
   Rivera JE, 2009, S VIS LANG HUM CEN C, P51, DOI 10.1109/VLHCC.2009.5295300
   Rivera JE, 2009, SIMUL-T SOC MOD SIM, V85, P778, DOI 10.1177/0037549709341635
   Sanislav T, 2016, MICROPROCESS MICROSY, V41, P67, DOI 10.1016/j.micpro.2015.11.021
   Schmid K., 2018, P 9 S SOFTW PERF
   Serral E, 2018, J AMB INTEL HUM COMP, V9, P1729, DOI 10.1007/s12652-017-0611-4
   Sinreich D., 2006, ARCHITECTURAL BLUEPR, V31
   Troya J, 2013, INFORM SOFTWARE TECH, V55, P88, DOI 10.1016/j.infsof.2012.07.009
   Weyns D, 2016, PR INT CONF AUTONOM, P364, DOI 10.1109/ICAC.2016.67
NR 43
TC 6
Z9 6
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1387
EP 1415
DI 10.1002/spe.2962
EA MAR 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000627022700001
DA 2024-07-18
ER

PT J
AU Jung, K
   Gascon-Samson, J
   Goyal, S
   Rezaiean-Asel, A
   Pattabiraman, K
AF Jung, Kumseok
   Gascon-Samson, Julien
   Goyal, Shivanshu
   Rezaiean-Asel, Armin
   Pattabiraman, Karthik
TI ThingsMigrate: Platform-independent migration of stateful JavaScript
   Internet of Things applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Internet of Things; JavaScript; process migration; program
   transformation
ID WEB APPLICATIONS; PUBLISH/SUBSCRIBE; NODE.JS; FUTURE; IOT
AB The Internet of Things (IoT) has gained wide popularity both in academic and industrial contexts. Unlike traditional embedded devices with specialized firmwares, modern IoT devices accommodate general-purpose operating systems, allowing developers to run more sophisticated applications written in high-level languages like JavaScript. Because IoT devices are subject to resource constraints like available battery power, we need to dynamically migrate a running process between different devices to prevent losing state. However, it is challenging to apply migration techniques using memory snapshots across the heterogeneous pool of IoT devices. We present ThingsMigrate, a middleware providing platform-independent migration of JavaScript processes across IoT devices. Prior to execution, ThingsMigrate instruments the source code of a given program to expose its internal state. During run-time, the transformed program produces on demand a JSON snapshot of its current state, from which new code is generated to resume execution. Thus, ThingsMigrate enables process migration entirely in the application space without any modifications to the underlying virtual machine (VM), providing VM-independence. We present three versions of ThingsMigrate, each building on the previous to optimize for run-time latency and memory consumption. We report on the experience of building each successive version and discuss the insights gained and the learning outcomes. We evaluated ThingsMigrate against standard benchmarks, over two IoT platforms and a cloud-like environment. We show that it can migrate even highly CPU-intensive applications, with average run-time latency overhead of 33% and memory overhead of 78%. ThingsMigrate supports multiple subsequent migrations without introducing additional overhead over each subsequent migration.
C1 [Jung, Kumseok; Goyal, Shivanshu; Rezaiean-Asel, Armin; Pattabiraman, Karthik] Univ British Columbia, Elect & Comp Engn Dept, Vancouver, BC, Canada.
   [Gascon-Samson, Julien] Ecole Technol Super, Software & IT Engn Dept, Montreal, PQ, Canada.
C3 University of British Columbia; University of Quebec; Ecole de
   Technologie Superieure - Canada
RP Jung, K (corresponding author), Univ British Columbia, Elect & Comp Engn Dept, Vancouver, BC, Canada.
EM kumseok@ece.ubc.ca
OI Jung, Kumseok/0000-0001-8791-1568
FU Canadian Network for Research and Innovation in Machining Technology,
   Natural Sciences and Engineering Research Council of Canada; Institute
   for Computing, Information and Cognitive Systems; Intel Corporation
FX Canadian Network for Research and Innovation in Machining Technology,
   Natural Sciences and Engineering Research Council of Canada; Institute
   for Computing, Information and Cognitive Systems; Intel Corporation
CR Aho Alfred V., 1986, Addison Wesley, V7, P9
   Alimadadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P367, DOI 10.1145/2568225.2568268
   Allen J., 2001, Proceedings of the Fifth National Colloquium for Information Systems Security Education (NCISSE'01), George Mason University, Fairfax, VA USA, P22
   Ananthanarayanan G, 2017, COMPUTER, V50, P58, DOI 10.1109/MC.2017.3641638
   Andreasen E, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3106739
   Andrica S, 2011, I C DEPEND SYS NETWO, P403, DOI 10.1109/DSN.2011.5958253
   [Anonymous], 2017, 2017 TIOBE INDEX
   [Anonymous], 2017, P 4 WORKSHOP MIDDLEW
   [Anonymous], 2017, BABEL JS JAVASCRIPT
   [Anonymous], 2013, P 26 ANN ACM S USER
   [Anonymous], 2017, JIMP JAVASCRIPT IMAG
   [Anonymous], 2013, P 2013 9 JOINT M FDN, DOI [10.1145/2491411.2491447, DOI 10.1145/2491411.2491447]
   [Anonymous], 2017, CHROMIUM OCTANE BENC
   [Anonymous], 2017, FLUENT FFMPEG API NO
   Bellucci Federico, 2011, P 3 ACM SIGCHI S ENG, P105, DOI 10.1145/1996461.1996502
   Biswas S, 2020, IEEE T ENG MANAGE, V67, P1363, DOI 10.1109/TEM.2020.2989779
   Chang TC, 2012, SYM REL DIST SYST, P454, DOI 10.1109/SRDS.2012.14
   Chaniotis IK, 2015, COMPUTING, V97, P1023, DOI 10.1007/s00607-014-0394-9
   Clark C, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI '05), P273
   Crockford D., 2008, JAVASCRIPT GOOD PART
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Foundation Mozilla, 2020, RHIN MOZ
   Garfinkel S, 2002, WEB SECURITY PRIVACY
   Gascon-Samson J, 2018, LEIBN INT P INF LIPI, V109
   Gavrin Evgeny., 2015, Companion Proceedings of the 2015 ACM SIG-PLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity, SPLASH Companion 2015, P19
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guinard D, 2009, P WORKSH MASH ENT MA, V15
   Ha K., 2015, Tech. Rep. CMUCS-15-113
   HARROLD MJ, 2001, P ACM C OBJ OR PROGR, P312
   Hidayat Ariya, 2017, ESPRIMA ECMASCRIPT P
   Intel XDK, 2017, INTEL XDK
   International Ecma, 2011, ECMASCRIPT LANG SPEC
   International Ecma, 2015, ECMASCRIPT 2015 LANG
   Karagiannis V., 2015, T IOT CLOUD COMPUT, V3, P11, DOI [DOI 10.5281/ZENODO.51613, DOI 10.5281/ZEN0D0.51613]
   KNUTH DE, 1965, INFORM CONTROL, V8, P607, DOI 10.1016/S0019-9958(65)90426-2
   Kwon JW, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P133, DOI 10.1145/3038912.3052572
   Levy A, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P234, DOI 10.1145/3132747.3132786
   Lin J, 2016, IEEE INTERNET COMPUT, V20, P82, DOI 10.1109/MIC.2016.109
   Litzkow M, 1997, CHECKPOINT MIGRATION
   Lo James Teng Kin, 2013, 22 INT WORLD WID WEB, P815
   Machen A, 2018, IEEE WIREL COMMUN, V25, P140, DOI 10.1109/MWC.2017.1700011
   Madsen M, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133910
   Mickens James., 2010, P 7 S NETWORKED SYST, P11, DOI [10.5555/1855711.1855722, DOI 10.5555/1855711.1855722]
   Milojicic DS, 2000, ACM COMPUT SURV, V32, P241, DOI 10.1145/367701.367728
   mjs, 2017, MJS
   Oh J, 2015, ACM SIGPLAN NOTICES, V50, P173, DOI [10.1145/2731186.2731197, 10.1145/2817817.2731197]
   Saha HN, 2017, 2017 IEEE 7TH ANNUAL COMPUTING AND COMMUNICATION WORKSHOP AND CONFERENCE IEEE CCWC-2017
   Satyanarayanan M, 2017, COMPUTER, V50, P30, DOI 10.1109/MC.2017.9
   Services Amazon Web, 2019, IOT GREENGR
   Shan ZY, 2015, 14TH INTERNATIONAL SYMPOSIUM ON DISTRIBUTED COMPUTING AND APPLICATIONS FOR BUSINESS, ENGINEERING AND SCIENCE (DCABES 2015), P50, DOI 10.1109/DCABES.2015.20
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Shih-Pang Wang, 2015, 2015 IEEE Sensors. Proceedings, P1, DOI 10.1109/ICSENS.2015.7370645
   Sin D, 2016, LECT NOTES COMPUT SC, V9786, P602, DOI 10.1007/978-3-319-42085-1_50
   Suzuki Y., 2017, ESCODEGEN ECMASCRIPT
   Taivalsaari A, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.26
   Tilkov S, 2010, IEEE INTERNET COMPUT, V14, P80, DOI 10.1109/MIC.2010.145
   Van der Cruysse Jonathan, 2019, P 4 ACM SIGPLAN INT, P31
   Wang C., 2008, SC, P43
   Wang JJ, 2018, 2018 THIRD IEEE/ACM SYMPOSIUM ON EDGE COMPUTING (SEC), P159, DOI 10.1109/SEC.2018.00019
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   WILSON PR, 1992, LECT NOTES COMPUT SC, V637, P1, DOI 10.1007/BFb0017182
   Wood Timothy., 2007, P 4 USENIX C NETWORK, P17
   Wright A., 2017, JSON Schema: A media type for describing JSON documents
   Yoon Y, 2011, INT CON DISTR COMP S, P800, DOI 10.1109/ICDCS.2011.93
   Yue C., 2009, Proceedings of the 18th international conference on World Wide Web, WWW, P961, DOI DOI 10.1145/1526709.1526838
   Zarrabi A., 2012, INT J DISTRIB PARALL, V3, P29, DOI DOI 10.5121/IJDPS
NR 67
TC 4
Z9 4
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2021
VL 51
IS 1
SI SI
BP 117
EP 155
DI 10.1002/spe.2936
EA DEC 2020
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PH6SW
UT WOS:000595610300001
DA 2024-07-18
ER

PT J
AU Qadeer, A
   Heidemann, J
AF Qadeer, Abdul
   Heidemann, John
TI Plumb: Efficient stream processing of multi-user pipelines
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE arbitrary operators; binary UDF; data and processing de-duplication;
   multi-user pipelines; unstructured data
AB Operational services run 24x7 and require analytics pipelines to evaluate performance. In mature services such as domain name system (DNS), these pipelines often grow to many stages developed by multiple, loosely coupled teams. Such pipelines pose two problems: first, computation and data storage may beduplicated across componentsdeveloped by different groups, wasting resources. Second, processing can beskewed, withstructural skewoccurring when different pipeline stages need different amounts of resources, andcomputational skewoccurring when a block of input data requires increased resources. Duplication and structural skew both decrease efficiency, increasing cost, latency, or both. Computational skew can cause pipeline failure or deadlock when resource consumption balloons; we have seen cases where pessimal traffic increases CPU requirements 6-fold. Detecting duplication is challenging when components from multiple teams evolve independently and require fault isolation. Skew management is hard due to dynamic workloads coupled with the conflicting goals of both minimizing latency and maximizing utilization. We proposePlumb, a framework to abstract stream processing as large-block streaming (LBS) for a multi-stage, multi-user workflow. Plumb users express analytics as a DAG of processing modules, allowing Plumb to integrate and optimize workflows from multiple users. Many real-world applications map to the LBS abstraction. Plumb detects and eliminates duplicate computation and storage, and it detects and addresses both structural and computational skew by tracking computation across the pipeline. We exercise Plumb using the analytics pipeline for B-Root DNS. We compare Plumb to a hand-tuned system, cutting latency to one-third the original, and requiring39%fewer container hours, while supporting more flexible, multi-user analytics and providing greater robustness to DDoS-driven demands.
C1 [Qadeer, Abdul; Heidemann, John] Univ Southern Calif, Informat Sci Inst, 4676 Admiralty Way,Suite 1001, Marina Del Rey, CA 90292 USA.
C3 University of Southern California
RP Qadeer, A (corresponding author), Univ Southern Calif, Informat Sci Inst, 4676 Admiralty Way,Suite 1001, Marina Del Rey, CA 90292 USA.
EM aqadeer@isi.edu
OI Heidemann, John/0000-0002-1225-7562
FU Air Force Research Laboratory [FA8750-18-2-0280]; Defense Advanced
   Research Projects Agency (DARPA) [W911NF-17-C-0011]; U.S. Army
   Contracting Command-Aberdeen Proving Ground (ACC-APG) [W911NF-17-C-0011]
FX Air Force Research Laboratory, Grant/Award Number: FA8750-18-2-0280; The
   U.S. Army Contracting Command-Aberdeen Proving Ground (ACC-APG) and the
   Defense Advanced Research Projects Agency (DARPA), Grant/Award Number:
   W911NF-17-C-0011
CR Ahn S, 2019, SOFTWARE PRACT EXPER, V49, P1509, DOI 10.1002/spe.2732
   Akidau T, 2013, PROC VLDB ENDOW, V6, P1033, DOI 10.14778/2536222.2536229
   [Anonymous], 2005, Sci. Program
   [Anonymous], 2016, EV 2016 06 25
   [Anonymous], 2013, INTRO THEORY COMPUTA
   [Anonymous], 2015, 2015 USENIX ANN TECH
   Cappellari P, 2018, SOFTWARE PRACT EXPER, V48, P1607, DOI 10.1002/spe.2596
   Carbone P., 2015, IEEE DATA ENG B, V36, P28, DOI DOI 10.1109/IC2EW.2016.56
   Chambers C, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P363, DOI 10.1145/1806596.1806638
   Chen XY, 2013, MATH COMPUT SCI, V7, P379, DOI 10.1007/s11786-013-0169-2
   Chu SM, 2018, PROC VLDB ENDOW, V11, P1482, DOI 10.14778/3236187.3236200
   Coppa E, 2015, ACM SOCC'15: PROCEEDINGS OF THE SIXTH ACM SYMPOSIUM ON CLOUD COMPUTING, P139, DOI 10.1145/2806777.2806843
   Dean Jeffrey, 2004, OSDI 04, P10
   Deelman E., 2005, Scientific Programming, V13, P219
   Dennison D, 2015, CONTINUOUS PIPELINES
   DNS-OARC, 2014, DAY LIF INT DITL
   Dyer R., 2013, P 2013 COMPANION PUB, P117
   Ehsan Moussa, 2013, 2013 IEEE International Symposium on Parallel and Distributed Processing, Workshops and PhD Forum (IPDPSW), P2230, DOI 10.1109/IPDPSW.2013.175
   Fox A, 1997, P 16 ACM S OP SYST P, V31, P778
   Fukuda K, 2017, IEEE ACM T NETWORK, V25, P3203, DOI 10.1109/TNET.2017.2724506
   Gunda Pradeep Kumar, 2010, P 9 S OP SYST DES IM, P10
   Helong L., 2014, 2014 23 INT C COMP C, P1, DOI [DOI 10.1145/2670979.2670985, DOI 10.1109/ICCCN.2014.6911807]
   Hirzel M, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2528412
   Isard M., 2007, Operating Systems Review, V41, P59, DOI 10.1145/1272998.1273005
   Islam Mohammad., 2012, Proceedings of the 1st ACM SIGMOD Workshop on Scalable Work ow Execution Engines and Technologies (New York, NY, USA), SWEET '12, ACM, p4:1
   Jindal A, 2018, INT CONF MANAGE DATA, P191, DOI 10.1145/3183713.3190656
   Kreps Jay, 2011, P NETDB, P1, DOI DOI 10.1007/BF00640482
   Morton Kristi., 2010, SIGMOD, P507
   Murray DG, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P439, DOI 10.1145/2517349.2522738
   O'Gorman K, 2005, SOFTWARE PRACT EXPER, V35, P361, DOI 10.1002/spe.640
   Ogata M, 2016, ELECTR COMMUN JPN, V99, P28, DOI 10.1002/ecj.11781
   Olston C., 2008, Proceedings of the 2008 ACM SIGMOD International Conference on Manage- ment of Data, P1099
   OUSTERHOUT K., 2013, HotOS, V13, P14
   Palkar Shoumik, 2017, Conference on Innovative Data Systems Research (CIDR), P45
   Pavlo A, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P165
   Periasamy JK, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.5213
   Rasmussen Alexander., 2012, P 3 ACM S CLOUD COMP, p13:1
   Schlaipfer M, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P631, DOI 10.1145/3132747.3132773
   SELLIS TK, 1988, ACM T DATABASE SYST, V13, P23, DOI 10.1145/42201.42203
   Tian WL, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.5350
   Toshniwa A, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P147, DOI 10.1145/2588555.2595641
   Vavilapalli V.K., P 4 ANN S
   Venkataraman S, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P363
   Zaharia M, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P423, DOI 10.1145/2517349.2522737
   Zaharia M, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P265
NR 45
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 385
EP 408
DI 10.1002/spe.2909
EA OCT 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000576596900001
DA 2024-07-18
ER

PT J
AU Javanmardi, S
   Shojafar, M
   Persico, V
   Pescapè, A
AF Javanmardi, Saeed
   Shojafar, Mohammad
   Persico, Valerio
   Pescape, Antonio
TI FPFTS: A joint fuzzy particle swarm optimization mobility-aware approach
   to fog task scheduling algorithm for Internet of Things devices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fog computing; Internet of Things; Mamdani fuzzy inference system;
   particle swarm optimization algorithm; resource management; task
   scheduling
ID RESOURCE-MANAGEMENT; COMMUNICATION TECHNOLOGIES; SMART CITY; CLOUD;
   PERSPECTIVES; ARCHITECTURE; INFORMATION; TAXONOMIES
AB In the Internet of Things (IoT) scenario, the integration with cloud-based solutions is of the utmost importance to address the shortcomings resulting from resource-constrained things that may fall short in terms of processing, storing, and networking capabilities. Fog computing represents a more recent paradigm that leverages the wide-spread geographical distribution of the computing resources and extends the cloud computing paradigm to the edge of the network, thus mitigating the issues affecting latency-sensitive applications and enabling a new breed of applications and services. In this context, efficient and effective resource management is critical, also considering the resource limitations of local fog nodes with respect to centralized clouds. In this article, we present FPFTS, fog task scheduler that takes advantage of particle swarm optimization and fuzzy theory, which leverages observations related to application loop delay and network utilization. We evaluate FPFTS using an IoT-based scenario simulated within iFogSim, by varying number of moving users, fog-device link bandwidth, and latency. Experimental results report that FPFTS compared with first-come first-served (respectively, delay-priority) allows to decrease delay-tolerant application loop delay by 85.79% (respectively, 86.36%), delay sensitive application loop delay by 87.11% (respectively, 86.61%), and network utilization by 80.37% (respectively, 82.09%), on average.
C1 [Javanmardi, Saeed; Persico, Valerio; Pescape, Antonio] Univ Napoli Federico II, Dept Elect Engn & Informat Technol DIETI, Naples, Italy.
   [Shojafar, Mohammad] Univ Surrey, 5G Innovat Ctr, Inst Commun Syst, Guildford, Surrey, England.
C3 University of Naples Federico II; University of Surrey
RP Pescapè, A (corresponding author), Univ Napoli Federico II, Dept Elect Engn & Informat Technol DIETI, Naples, Italy.
EM pescape@unina.it
RI Shojafar, Mohammad/C-9151-2013
OI Shojafar, Mohammad/0000-0003-3284-5086; javanmardi,
   saeed/0000-0002-8992-0545; Persico, Valerio/0000-0002-7477-1452
CR Aazam M, 2018, IEEE T IND INFORM, V14, P4674, DOI 10.1109/TII.2018.2855198
   Aazam M, 2018, FUTURE GENER COMP SY, V87, P278, DOI 10.1016/j.future.2018.04.057
   Abbasi AA, 2019, IEEE ACCESS, V7, P93294, DOI 10.1109/ACCESS.2019.2927822
   Abdi S, 2014, 2014 ELECTRICAL INSULATION CONFERENCE (EIC), P5, DOI 10.1109/EIC.2014.6869335
   Aburukba RO, 2020, FUTURE GENER COMP SY, V111, P539, DOI 10.1016/j.future.2019.09.039
   Aceto G, 2020, J IND INF INTEGR, V18, DOI 10.1016/j.jii.2020.100129
   Aceto G, 2019, IEEE COMMUN SURV TUT, V21, P3467, DOI 10.1109/COMST.2019.2938259
   Aceto G, 2018, J NETW COMPUT APPL, V107, P125, DOI 10.1016/j.jnca.2018.02.008
   Alkhashai HM, 2016, INT J ADV COMPUT SC, V7, P207
   [Anonymous], 2016, 2016 IEEE 16 INT C E, DOI [DOI 10.1109/EEEIC.2016.7555867, 10.1109/EEEIC.2016.7555867]
   Arora S, 2009, COMPUTATIONAL COMPLEXITY: A MODERN APPROACH, P1, DOI 10.1017/CBO9780511804090
   Balasubramanian V, 2020, SIMUL MODEL PRACT TH, V98, DOI 10.1016/j.simpat.2019.101968
   Ben Alla H, 2017, LECT NOTES ELECT ENG, V397
   Benblidia MA, 2019, INT WIREL COMMUN, P1451, DOI [10.1109/IWCMC.2019.8766437, 10.1109/iwcmc.2019.8766437]
   Bitam S, 2018, ENTERP INF SYST-UK, V12, P373, DOI 10.1080/17517575.2017.1304579
   Bittencourt LF, 2017, IEEE CLOUD COMPUT, V4, P26, DOI 10.1109/MCC.2017.27
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Botta A, 2016, FUTURE GENER COMP SY, V56, P684, DOI 10.1016/j.future.2015.09.021
   Butt AA, 2019, INT WIREL COMMUN, P1588
   Choy S, 2012, BREWING STORM CLOUD, P1
   Cingolani P, 2013, INT J COMPUT INT SYS, V6, P61, DOI 10.1080/18756891.2013.818190
   Dainotti A, 2005, SECOND INTERNATIONAL WORKSHOP ON HOT TOPICS IN PEER-TO-PEER SYSTEMS, PROCEEDINGS, P33, DOI 10.1109/HOT-P2P.2005.4
   Dastjerdi Amir Vahid, 2016, Internet of Things, P61, DOI [10.1016/B978 -0-12-805395-9.00004-6. arXiv: 1601.02752, DOI 10.1016/B978-0-12-805395-9.00004-6.ARXIV:1601.02752]
   Deng YQ, 2019, IEEE ACCESS, V7, P14410, DOI 10.1109/ACCESS.2019.2893486
   Ghobaei-Arani M, 2020, J GRID COMPUT, V18, P1, DOI 10.1007/s10723-019-09491-1
   Gill SS, 2019, J SYST SOFTWARE, V154, P125, DOI 10.1016/j.jss.2019.04.058
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   HOSSEINIOUN P, 2020, T EMERGING TELECOMMU
   Hu PF, 2017, J NETW COMPUT APPL, V98, P27, DOI 10.1016/j.jnca.2017.09.002
   Javanmardi S, 2014, HYBRID JOB SCHEDULIN, P43
   Javanmardi S, 2014, ARXIV14042632
   Javanmardi S, 2014, J SUPERCOMPUT, V69, P955, DOI 10.1007/s11227-014-1221-y
   Jeschke S, 2017, SP SER WIRELESS TECH, P3, DOI 10.1007/978-3-319-42559-7_1
   Kosko B., NEURAL NETWORKS FUZZ
   Le LT, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9132630
   Liu YX, 2019, FUTURE GENER COMP SY, V100, P701, DOI 10.1016/j.future.2019.04.043
   Mahmud R., 2018, Internet of Everything, P103, DOI [10.1007/978-981-10-5861-5_5, DOI 10.1007/978-981-10-5861-5_5]
   Mahmud R, 2019, WILEY SER PARA DIST, P433, DOI 10.1002/9781119525080.ch17
   Mahmud R, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3186592
   Mass J, 2019, INTERNET THINGS-NETH, V6, DOI 10.1016/j.iot.2019.100051
   Memos VA, 2018, FUTURE GENER COMP SY, V83, P619, DOI 10.1016/j.future.2017.04.039
   Naranjo PGV, 2019, J PARALLEL DISTR COM, V132, P274, DOI 10.1016/j.jpdc.2018.07.003
   Osanaiye O, 2017, IEEE ACCESS, V5, P8284, DOI 10.1109/ACCESS.2017.2692960
   Palumbo F, 2019, IEEE GLOB COMM CONF, DOI 10.1109/globecom38437.2019.9013343
   Park S, 2020, PEER PEER NETW APPL, V13, P684, DOI 10.1007/s12083-019-00780-w
   Persico V, 2015, COMPUT NETW, V93, P408, DOI 10.1016/j.comnet.2015.09.037
   Pourjavad E, 2019, J INTELL MANUF, V30, P1085, DOI 10.1007/s10845-017-1307-5
   Puliafito C, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3301443
   Rafique H, 2019, IEEE ACCESS, V7, P115760, DOI 10.1109/ACCESS.2019.2924958
   Sangaiah AK., 2018, Gewerbestrasse, V11, P6330
   Shojafar M, 2017, J SUPERCOMPUT, V73, P5239, DOI 10.1007/s11227-017-2082-y
   Shojafar M, 2015, CLUSTER COMPUT, V18, P829, DOI 10.1007/s10586-014-0420-x
   Sidhu MS, 2013, 2013 IEEE SYMPOSIUM ON SWARM INTELLIGENCE (SIS), P180, DOI 10.1109/SIS.2013.6615176
   Song H., 2017, Smart Cities: Foundations, Principles, and Applications
   Sun SY, 2019, FUTURE GENER COMP SY, V100, P844, DOI 10.1016/j.future.2019.05.054
   Sun Y, 2018, WIRELESS PERS COMMUN, V102, P1369, DOI 10.1007/s11277-017-5200-5
   Talaat FM, 2019, J NETW SYST MANAG, V27, P883, DOI 10.1007/s10922-019-09490-3
   Dang TD, 2017, IEEE TRUST, P1109, DOI 10.1109/Trustcom/BigDataSE/ICESS.2017.360
   Zadeh LA, 2015, FUZZY SET SYST, V281, P4, DOI 10.1016/j.fss.2015.05.009
   Zeng DZ, 2016, IEEE T COMPUT, V65, P3702, DOI 10.1109/TC.2016.2536019
   Zhu J, 2018, IEEE INTERNET THINGS, V5, P2375, DOI 10.1109/JIOT.2017.2759728
NR 61
TC 46
Z9 46
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2519
EP 2539
DI 10.1002/spe.2867
EA AUG 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000561008400001
DA 2024-07-18
ER

PT J
AU Bhatt, A
   Dimri, P
   Aggarwal, A
AF Bhatt, Ashutosh
   Dimri, Priti
   Aggarwal, Ambika
TI Self-adaptive brainstorming for jobshop scheduling in multicloud
   environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE brain storm optimization; cloud computing; job scheduling; makespan;
   utilization
ID OPTIMIZATION; ALGORITHMS; ENERGY
AB Cloud computing is a popular platform for processing the tasks by utilizing Virtual Machines as executing elements. The problems such as utilization and makespan persist in task scheduling in cloud which has to be solved and hence this article presents a human-inspired approach for solving the job shop scheduling issue in the cloud environment. Since the job shop scheduling is challenging under multicloud environment, this article improves the well-known method which is termed as self-adaptive Brain Storm Optimization scheme. As a result, the recommendation of solutions is improved and so the desired updating is done. With this context, the scheduling process is performed. Here, the allocation of jobs for resources of heterogeneous cloud is encoded as brain storming process. Furthermore, the resultant scheduling scheme is evaluated for different performance constraints such as resource utilization rate, job completion, and makes span and the outcomes are verified. Next, to the implementation, the proposed model is compared with BSO, Particle Swarm Optimization, Genetic Algorithm, and Differential Evolution and the analysis proves its better performance.
C1 [Bhatt, Ashutosh] Uttarkhand Tech Univ, Dehra Dun, Uttarakhand, India.
   [Dimri, Priti] GBPEC Ghurdauri, Garhwal, India.
   [Aggarwal, Ambika] Univ Petr & Energy Studies, Dehra Dun, Uttarakhand, India.
C3 Uttarakhand Technical University; University of Petroleum & Energy
   Studies (UPES)
RP Bhatt, A (corresponding author), Uttarkhand Tech Univ, Dehra Dun, Uttarakhand, India.
EM bashutosh240@gmail.com
RI Bhatt, Ashutosh/AAR-8893-2021
OI Aggarwal, Ambika/0000-0002-6005-2879; Bhatt,
   Ashutosh/0000-0002-7078-4045
CR Abdullahi M, 2016, FUTURE GENER COMP SY, V56, P640, DOI 10.1016/j.future.2015.08.006
   Ali HGEH, 2017, EGYPT INFORM J, V18, P11, DOI 10.1016/j.eij.2016.07.002
   [Anonymous], 2013, Int. J. Appl. Innov. Eng. Manag
   Bahnasawy NA, 2011, EGYPT INFORM J, V12, P219, DOI 10.1016/j.eij.2011.10.001
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Chen F, 2014, J PARALLEL DISTR COM, V74, P2141, DOI 10.1016/j.jpdc.2013.11.007
   Chitra P, 2011, APPL SOFT COMPUT, V11, P2725, DOI 10.1016/j.asoc.2010.11.003
   Cong Wan, 2012, 2012 IEEE International Conference on Information Science and Technology, P634, DOI 10.1109/ICIST.2012.6221722
   Congedo G., 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P1038, DOI 10.1109/ICDAR.1995.602080
   de Oliveira LL, 2018, INFORM SCIENCES, V425, P48, DOI 10.1016/j.ins.2017.10.022
   Di Lecce V, 2000, CLASSIFIER COMBINATI, V7, P143
   El-Abd M, 2017, SWARM EVOL COMPUT, V37, P27, DOI 10.1016/j.swevo.2017.05.001
   Fan LY, 2012, J PARALLEL DISTR COM, V72, P693, DOI 10.1016/j.jpdc.2012.01.011
   Ge MM, 2016, J NETW COMPUT APPL, V63, P24, DOI 10.1016/j.jnca.2016.01.012
   Ghafarian T, 2015, FUTURE GENER COMP SY, V51, P87, DOI 10.1016/j.future.2014.11.007
   Hao YS, 2016, KNOWL-BASED SYST, V98, P226, DOI 10.1016/j.knosys.2016.01.038
   Hao YS, 2015, IET SOFTW, V9, P7, DOI 10.1049/iet-sen.2014.0014
   Jiang WJ, 2014, FUTURE GENER COMP SY, V31, P48, DOI 10.1016/j.future.2012.06.010
   Jorissen K, 2012, COMPUT PHYS COMMUN, V183, P1911, DOI 10.1016/j.cpc.2012.04.010
   Juarez F, 2018, FUTURE GENER COMP SY, V78, P257, DOI 10.1016/j.future.2016.06.029
   Kim SS, 2014, APPL MATH COMPUT, V247, P266, DOI 10.1016/j.amc.2014.09.008
   Kong XZ, 2011, J NETW COMPUT APPL, V34, P1068, DOI 10.1016/j.jnca.2010.06.001
   Li JN, 2015, AEROSP SCI TECHNOL, V42, P187, DOI 10.1016/j.ast.2015.01.017
   Liu C, 2013, FUTURE GENER COMP SY, V29, P1300, DOI 10.1016/j.future.2012.07.001
   Liu HB, 2010, FUTURE GENER COMP SY, V26, P1336, DOI 10.1016/j.future.2009.05.022
   Liu H, 2008, IEEE ACM INT SYMP, P295, DOI 10.1109/CCGRID.2008.30
   Nadeem F, 2013, FUTURE GENER COMP SY, V29, P926, DOI 10.1016/j.future.2012.10.005
   Netjinda N, 2014, J SUPERCOMPUT, V68, P1579, DOI 10.1007/s11227-014-1126-9
   Nikolic M, 2017, EXPERT SYST APPL, V72, P283, DOI 10.1016/j.eswa.2016.10.061
   Pathan MV, 2018, COMPUT STRUCT, V198, P51, DOI 10.1016/j.compstruc.2018.01.005
   Ramezani F, 2014, INT J PARALLEL PROG, V42, P739, DOI 10.1007/s10766-013-0275-4
   SHERIFI I, 2018, EUROPEAN J BUSINESS, V3, P37
   Shi Y, 2011, LECT NOTES COMPUTER, V6728
   Tao F, 2014, APPL SOFT COMPUT, V19, P264, DOI 10.1016/j.asoc.2014.01.036
   Tsai CW, 2014, IEEE T CLOUD COMPUT, V2, P236, DOI 10.1109/TCC.2014.2315797
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P1661, DOI 10.1016/j.future.2013.02.010
   Wang XL, 2014, FUTURE GENER COMP SY, V36, P91, DOI 10.1016/j.future.2013.12.004
   Wu GH, 2018, INFORM SCIENCES, V423, P172, DOI 10.1016/j.ins.2017.09.053
   Yang J, 2017, FUTURE GENER COMPUT, V105, P985
   Zhang JH, 2017, J SOUND VIB, V389, P153, DOI 10.1016/j.jsv.2016.11.006
NR 40
TC 10
Z9 10
U1 2
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2020
VL 50
IS 8
BP 1381
EP 1398
DI 10.1002/spe.2819
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MG0MA
UT WOS:000545728200003
DA 2024-07-18
ER

PT J
AU Zhang, J
   Li, X
   Zhang, XY
   Xue, Y
   Srivastava, G
   Dou, WC
AF Zhang, Jie
   Li, Xiang
   Zhang, Xuyun
   Xue, Yuan
   Srivastava, Gautam
   Dou, Wanchun
TI Service offloading oriented edge server placement in smart farming
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE edge computing; ESs placement; IoT; smart farming
ID INTERNET; THINGS
AB Currently, smart farming has been established to realize agriculture automation by leveraging sensors to gather the growth and environmental data for crops, and realizing multiple intelligent controls, such as irrigation, fertilization, and so on, to increase the crop yields. To support real-time intelligent controls, edge computing is introduced to smart farming by endowing computing and storage capacities to edge devices nearby the geographically distributed sensors. However, the farmers are relatively willing to purchase and deploy a small quantity of edge servers (ESs) in the farm from the perspective of expenditure saving, thereby leading to a key challenge to guarantee the performance of the real-time controls and the overall edge services. In view of this challenge, a service offloading-oriented ES placement method for supporting smart farming, called SOP, is proposed to optimize the data transmission delay from sensors to ESs and the load balance among ESs. More precisely, the corresponding service range of a certain ES is ascertained according to the specific analysis of the farming service requirements. Subsequently, the layout policies for the trade-offs of the ES performance and service efficiency are acquired. Then the most balanced policy is determined as the final ES placement strategy. Eventually, we evaluate the performance of the whole ES system and the service execution efficiency with SOP.
C1 [Zhang, Jie; Dou, Wanchun] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Li, Xiang; Xue, Yuan] Nanjing Univ Informat Sci & Technol, Sch Comp & Software, Nanjing, Peoples R China.
   [Zhang, Xuyun] Macquarie Univ, Dept Comp, Sydney, NSW, Australia.
   [Srivastava, Gautam] Brandon Univ, Dept Math & Comp Sci, Brandon, MB R7A 6A9, Canada.
C3 Nanjing University; Nanjing University of Information Science &
   Technology; Macquarie University; Brandon University
RP Dou, WC (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM douwc@nju.edu.cn
RI zhang, xu/GYE-3558-2022; ZHANG, XUCHEN/KBB-7989-2024; Srivastava,
   Gautam/N-5668-2019
OI Srivastava, Gautam/0000-0001-9851-4103; Zhang, Xuyun/0000-0001-7353-4159
FU National Key Research and Development Program of China [2017YFB1400600];
   National Natural Science Foundation of China [61672276]; Development
   Project of Jiangsu Province [BE2019104]
FX This work is supported by the National Key Research and Development
   Program of China (No. 2017YFB1400600). This work is also supported by
   the National Natural Science Foundation of China under grant no.
   61672276, and the Development Project of Jiangsu Province under Grant
   No. BE2019104.
CR Ahmed N, 2018, IEEE INTERNET THINGS, V5, P4890, DOI 10.1109/JIOT.2018.2879579
   Bauer J., 2018, 2018 IOT VERTICAL TO, P1, DOI DOI 10.1109/IOT-TUSCANY.2018.8373022
   Botta A, 2016, FUTURE GENER COMP SY, V56, P684, DOI 10.1016/j.future.2015.09.021
   Caria M, 2017, 2017 40TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P152, DOI 10.23919/MIPRO.2017.7973408
   Channe H., 2015, Int. J. Computer Technology Applications, V6, P374
   Datta S.K., 2017, 2017 IEEE 6th Global Conference on Consumer Electronics, P1
   Fan TongKe, 2013, Journal of Convergence Information Technology, V8, P210, DOI 10.4156/jcit.vol8.issue2.26
   Gayatri MK, 2015, PROCEEDINGS 2015 IEEE INTERNATIONAL CONFERENCE ON TECHNOLOGICAL INNOVATIONS IN ICT FOR AGRICULTURE AND RURAL DEVELOPMENT TIAR 2015, P40, DOI 10.1109/TIAR.2015.7358528
   Ferrández-Pastor FJ, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18061731
   Ferrández-Pastor FJ, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16071141
   Jayaraman PP, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16111884
   Mach P, 2017, IEEE COMMUN SURV TUT, V19, P1628, DOI 10.1109/COMST.2017.2682318
   Mahadev S, 2017, IEEE COMPUTER COMMUN, V50, P30
   Mekala MS, 2017, 2017 INTERNATIONAL CONFERENCE ON MICROELECTRONIC DEVICES, CIRCUITS AND SYSTEMS (ICMDCS)
   Mekonnen Y, 2018, TRANS DISTRIB CONF
   Minwoo R, 2015, P 2015 IEEE SENS, ps1
   Nasir A, 2017, IEEE IOT J, V1, P99
   Patel P, 2017, IEEE INTELL SYST, V32, P64, DOI 10.1109/MIS.2017.3711653
   Patil K. A., 2016, 2016 International Conference on Global Trends in Signal Processing, Information Computing and Communication (ICGTSPICC). Proceedings, P543, DOI 10.1109/ICGTSPICC.2016.7955360
   Paulraj GJL, 2018, FUTURE GENER COMP SY, V85, P173, DOI 10.1016/j.future.2018.03.024
   Porambage P, 2018, IEEE COMMUN SURV TUT, V20, P2961, DOI 10.1109/COMST.2018.2849509
   Prathibha SR, 2017, 2017 INTERNATIONAL CONFERENCE ON RECENT ADVANCES IN ELECTRONICS AND COMMUNICATION TECHNOLOGY (ICRAECT), P81, DOI 10.1109/ICRAECT.2017.52
   Ray PP, 2017, J AMB INTEL SMART EN, V9, P395, DOI 10.3233/AIS-170440
   Rittinghouse John W, 2016, CLOUD COMPUTING IMPL
   Roopaei M, 2017, IEEE CLOUD COMPUT, V4, P10, DOI 10.1109/MCC.2017.5
   Roy S, 2017, 2017 8TH ANNUAL INDUSTRIAL AUTOMATION AND ELECTROMECHANICAL ENGINEERING CONFERENCE (IEMECON), P303, DOI 10.1109/IEMECON.2017.8079610
   Rupanagudi Sudhir Rao, 2015, 2015 International Conference on Communication, Information & Computing Technology (ICCICT), P1, DOI 10.1109/ICCICT.2015.7045722
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Shi WS, 2016, COMPUTER, V49, P78, DOI 10.1109/MC.2016.145
   Suma N., 2017, Int. J. Recent Innov. Trends Comput. Commun., V5, P177
   Walter A, 2017, P NATL ACAD SCI USA, V114, P6148, DOI 10.1073/pnas.1707462114
   Wolfert S, 2017, AGR SYST, V153, P69, DOI 10.1016/j.agsy.2017.01.023
   Xu X, 2019, IEEE T IND INFORM
   Xu X, 2019, P INT C SERV OR COMP, P494
   Xu XL, 2020, IEEE INTERNET THINGS, V7, P4084, DOI 10.1109/JIOT.2019.2959124
   Xu XL, 2020, IEEE INTERNET THINGS, V7, P2622, DOI 10.1109/JIOT.2019.2944007
   Xu XL, 2020, IEEE T IND INFORM, V16, P4187, DOI 10.1109/TII.2019.2936869
   Xu XL, 2019, FUTURE GENER COMP SY, V95, P522, DOI 10.1016/j.future.2018.12.055
   Zamora-Izquierdo MA, 2019, BIOSYST ENG, V177, P4, DOI 10.1016/j.biosystemseng.2018.10.014
   Zhang K, 2018, IEEE COMMUN MAG, V56, P39, DOI 10.1109/MCOM.2018.1700882
   Zhu CS, 2018, IEEE NETWORK, V32, P100, DOI 10.1109/MNET.2018.1800029
NR 41
TC 16
Z9 16
U1 2
U2 30
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2540
EP 2557
DI 10.1002/spe.2847
EA JUN 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000540891400001
DA 2024-07-18
ER

PT J
AU Longo, A
   Zappatore, M
   De Matteis, A
AF Longo, Antonella
   Zappatore, Marco
   De Matteis, Andrea
TI An osmotic computing infrastructure for urban pollution monitoring
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile crowdsensing; osmotic computing; service-oriented architecture;
   smart cities
ID INTERNET; SECURE; THINGS; CLOUD
AB Urban pollution control systems suffer from the presence of fixed stations in a greater number than mobile monitoring devices. Data gathered from such stations provide detailed and reliable information, thanks to equipment quality and effective measuring protocols, but these sampled data are gathered from very limited areas and through discontinuous monitoring campaigns. Fortunately, the spread of technologies for mobility has fostered the development of new approaches like mobile crowdsensing (MCS), increasing the chances of using mobile devices, even personal ones, as suitable sensors for the urban monitoring scenario. Nevertheless, one of the open challenges is the management of integrated heterogeneous data flows, differing in terms of typology, technical specifications (eg, transmission protocols), and semantics. The osmotic computing paradigm aims at creating an abstract level between mobile devices/Internet-of-Things devices and a cloud platform, which enables opportunistic filtering and the addition of metadata for improving the data processing flow. This work focuses on the design and development of a middleware that integrates data coming from mobile and Internet-of-Things devices specifically deployed in urban contexts using the osmotic computing paradigm. Moreover, a component of the osmotic membrane has been developed for security management.
C1 [Longo, Antonella; Zappatore, Marco; De Matteis, Andrea] Univ Salento, Dept Engn Innovat, SetLab, I-73100 Lecce, Italy.
   [Longo, Antonella; Zappatore, Marco] Hesplora Srl, I-73100 Lecce, Italy.
   [Longo, Antonella] Univ Salento, Dept Engn Innovat, Via Per Monteroni, I-73100 Lecce, Italy.
C3 University of Salento; University of Salento
RP Longo, A (corresponding author), Univ Salento, Dept Engn Innovat, SetLab, I-73100 Lecce, Italy.; Longo, A (corresponding author), Hesplora Srl, I-73100 Lecce, Italy.
EM antonella.longo@unisalento.it
RI Longo, Antonella/A-5335-2009
OI Longo, Antonella/0000-0002-6902-0160
CR Ang LM, 2016, BIG DATA RES, V4, P1, DOI 10.1016/j.bdr.2015.12.003
   [Anonymous], SOUND MET PRO
   [Anonymous], AP PROJ
   [Anonymous], IEEE IC COMP COM NET
   [Anonymous], STANDARD ARCHITECTUR
   [Anonymous], P 2017 5 INT S COMP
   [Anonymous], FOGMQ MESSAGE BROKER
   [Anonymous], 2014, BIG DATA INTERNET TH
   [Anonymous], P 2017 IEEE S SERV O
   [Anonymous], P 2015 10 COMP COL C
   [Anonymous], P 18 INT C ENT INF S
   [Anonymous], AP SPARK DOC V242
   [Anonymous], P ACM SIGMOD WORKSH
   [Anonymous], INT THINGS TOD TOM
   [Anonymous], P INT C COMP COMM AU
   [Anonymous], PAPER PRESENTED NOKO
   [Anonymous], P 2015 IEEE INT C MO
   [Anonymous], DEC MET PRO
   [Anonymous], P 1 INT WORKSH SOFTW
   [Anonymous], 2016, DOCKER BOOK CONTAINE
   [Anonymous], P 2016 INT IEEE C UB
   [Anonymous], P INT C INF PROC SEN
   Bernstein D, 2014, IEEE CLOUD COMPUT, V1, P81, DOI 10.1109/MCC.2014.51
   Corradi A., 2015, P 2015 IEEE S COMP C
   Dolara A, 2017, INT CONF RENEW ENERG, P200, DOI 10.1109/ICRERA.2017.8191266
   Evans D., 2011, CISCO
   Galletta Antonino, 2018, 2018 IEEE 2 INT C, P1
   Ganti RK, 2011, IEEE COMMUN MAG, V49, P32, DOI 10.1109/MCOM.2011.6069707
   Georgakopoulos D, 2016, IEEE CLOUD COMPUT, V3, P66, DOI 10.1109/MCC.2016.91
   Giang NK, 2015, PROCEEDINGS 2015 5TH INTERNATIONAL CONFERENCE ON THE INTERNET OF THINGS (IOT), P155, DOI 10.1109/IOT.2015.7356560
   Hung M., 2017, Gartner Research, P1
   Kanjo E, 2010, MOBILE NETW APPL, V15, P562, DOI 10.1007/s11036-009-0217-y
   Khoshkbarforoushha A, 2017, IEEE T EMERG TOP COM, V5, P120, DOI 10.1109/TETC.2016.2597546
   Lewis J., 2014, MartinFowler. com
   Longo A, 2015, IEEE GLOB ENG EDUC C, P742, DOI 10.1109/EDUCON.2015.7096052
   Ma Y, 2015, INFORM SCIENCES, V319, P171, DOI 10.1016/j.ins.2014.10.006
   Morshed A, 2017, IEEE CLOUD COMPUT, V4, P22
   Nardelli M, 2017, IEEE CLOUD COMPUT, V4, P68, DOI 10.1109/MCC.2017.22
   OpenFog Consortium Architecture Working Group, 2017, OP REF ARCH FOG COMP
   Puthal D, 2019, J PARALLEL DISTR COM, V124, P60, DOI 10.1016/j.jpdc.2018.10.007
   Puthal D, 2018, IEEE COMMUN MAG, V56, P60, DOI 10.1109/MCOM.2018.1700795
   Puthal D, 2017, ACM T EMBED COMPUT S, V16, DOI 10.1145/2937755
   Ranjan R, 2018, IEEE CLOUD COMPUT, V5, P12, DOI 10.1109/MCC.2018.032591612
   Rausch T, 2018, IEEE CLOUD COMPUT, V5, P17, DOI 10.1109/MCC.2018.022171663
   Sharma V., 2017, CORRABS170404213
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Shu L, 2017, IEEE ACCESS, V5, P15300, DOI 10.1109/ACCESS.2017.2657820
   Stojanovic D., 2016, European Handbook of Crowdsourced Geographic Information, P371, DOI [10.5334/bax.aa, DOI 10.5334/BAX.AA]
   Villari M, 2018, ADV INTELL SYST, V611, P906, DOI 10.1007/978-3-319-61566-0_86
   Villari M, 2016, IEEE CLOUD COMPUT, V3, P76, DOI 10.1109/MCC.2016.124
   Zappatore M, 2017, Journal of Communications Software and Systems, V13, P53, DOI [10.24138/jcomss.v13i2.373/files/47/Zappatoreetal.-2017-Crowd-sensingourSmartCitiesaPlatformforNoi.pdf10., DOI 10.24138/JCOMSS.V13I2.373/FILES/47/ZAPPATOREETAL.-2017-CROWD-SENSINGOURSMARTCITIESAPLATFORMFORNOI.PDF10]
   Zappatore M, 2016, 2016 INTERNATIONAL MULTIDISCIPLINARY CONFERENCE ON COMPUTER AND ENERGY SCIENCE (SPLITECH), P110
NR 52
TC 6
Z9 6
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 533
EP 557
DI 10.1002/spe.2721
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000526578200006
DA 2024-07-18
ER

PT J
AU Shakarami, A
   Shahidinejad, A
   Ghobaei-Arani, M
AF Shakarami, Ali
   Shahidinejad, Ali
   Ghobaei-Arani, Mostafa
TI A review on the computation offloading approaches in mobile edge
   computing: A game-theoretic perspective
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE game theory; mobile edge computing; offloading; systematic review
ID RESOURCE-ALLOCATION; BIG DATA; ENVIRONMENT; INTERNET; IOT; OPTIMIZATION;
   MANAGEMENT
AB In recent years, novel mobile applications such as augmented reality, virtual reality, and three-dimensional gaming, running on handy mobile devices have been pervasively popular. With rapid developments of such mobile applications, decentralized mobile edge computing (MEC) as an emerging distributed computing paradigm is developed for serving them near the smart devices, usually in one hop, to meet their computation, and delay requirements. In the literature, offloading mechanisms are designed to execute such mobile applications in the MEC environments through transferring resource-intensive tasks to the MEC servers. On the other hand, due to the resource limitations, resource heterogeneity, dynamic nature, and unpredictable behavior of MEC environments, it is necessary to consider the computation offloading issues as the challenging problem in the MEC environment. However, to the best of our knowledge, despite its importance, there is not any systematic, comprehensive, and detailed survey in game theory (GT)-based computation offloading mechanisms in the MEC environment. In this article, we provide a systematic literature review on the GT-based computation offloading approaches in the MEC environment in the form of a classical taxonomy to recognize the state-of-the-art mechanisms on this important topic and to provide open issues as well. The proposed taxonomy is classified into four main fields: classical game mechanisms, auction theory, evolutionary game mechanisms, and hybrid-base game mechanisms. Next, these classes are compared with each other according to the important factors such as performance metrics, case studies, utilized techniques, and evaluation tools, and their advantages and disadvantages are discussed, as well. Finally, open issues and future uncovered or weakly covered research challenges are discussed and the survey is concluded.
C1 [Shakarami, Ali; Shahidinejad, Ali; Ghobaei-Arani, Mostafa] Islamic Azad Univ, Dept Comp Engn, Qom Branch, Qom, Iran.
C3 Islamic Azad University
RP Shahidinejad, A (corresponding author), Islamic Azad Univ, Dept Comp Engn, Qom Branch, Qom, Iran.
EM a.shahidinejad@qom-iau.ac.ir
RI Shahidinejad, Ali/V-5523-2019; Shakarami, Ali/HHN-7233-2022;
   Ghobaei-Arani, Mostafa/K-5058-2015
OI Shahidinejad, Ali/0000-0003-4856-9119; Ghobaei-Arani,
   Mostafa/0000-0003-2639-0900
CR Aazam M, 2018, FUTURE GENER COMP SY, V87, P278, DOI 10.1016/j.future.2018.04.057
   Abbas N, 2018, IEEE INTERNET THINGS, V5, P450, DOI 10.1109/JIOT.2017.2750180
   Al-Dhuraibi Y, 2018, IEEE T SERV COMPUT, V11, P430, DOI 10.1109/TSC.2017.2711009
   Anawar MR, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/7157192
   [Anonymous], 2019, ARXIV190402601
   [Anonymous], 2017, ARXIV171109012
   Apostolopoulos PA, 2018, GLOB INFORM INFRAS
   BERZ G, 2016, GAME THEORY BARGAINI
   BHAT UN, 2015, INTRO QUEUEING THEOR, P233
   Bhattacharya A, 2017, J NETW COMPUT APPL, V78, P97, DOI 10.1016/j.jnca.2016.10.023
   BOUKERCHE A, 2019, ACM COMPUT SURV, V52
   Burnham Judy F, 2006, Biomed Digit Libr, V3, P1
   Cao B, 2019, IEEE COMMUN MAG, V57, P56, DOI 10.1109/MCOM.2019.1800608
   Cardellini V, 2016, MATH PROGRAM, V157, P421, DOI 10.1007/s10107-015-0881-6
   Chen LX, 2018, IEEE ACM T NETWORK, V26, P1619, DOI 10.1109/TNET.2018.2841758
   Chen X, 2016, IEEE ACM T NETWORK, V24, P2827, DOI 10.1109/TNET.2015.2487344
   Chen X, 2015, IEEE T PARALL DISTR, V26, P974, DOI 10.1109/TPDS.2014.2316834
   Darwish TSJ, 2018, IEEE ACCESS, V6, P15679, DOI 10.1109/ACCESS.2018.2815989
   De Maio V, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P127, DOI 10.1145/3297663.3310301
   De Maio V, 2018, 2018 18TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND GRID COMPUTING (CCGRID), P83, DOI 10.1109/CCGRID.2018.00023
   Dinh TQ, 2018, IEEE T COMMUN, V66, P6353, DOI 10.1109/TCOMM.2018.2866572
   Dong CW, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19030740
   Escamilla-Ambrosio PJ, 2018, STUD COMPUT INTELL, V731, P87, DOI 10.1007/978-3-319-64063-1_4
   Gao LF, 2018, PROCEEDINGS 2018 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P1000, DOI 10.1109/HPCS.2018.00157
   Ghobaei-Arani M, 2020, J GRID COMPUT, V18, P1, DOI 10.1007/s10723-019-09491-1
   Ghobaei-Arani M, 2019, J NETW COMPUT APPL, V142, P76, DOI 10.1016/j.jnca.2019.06.002
   Guo HZ, 2018, IEEE INTERNET THINGS, V5, P4977, DOI 10.1109/JIOT.2018.2838584
   Guo HZ, 2018, IEEE T VEH TECHNOL, V67, P4514, DOI 10.1109/TVT.2018.2790421
   Guo HZ, 2018, IEEE NETWORK, V32, P66, DOI 10.1109/MNET.2018.1700139
   Guo K, 2019, J NETW COMPUT APPL, V134, P40, DOI 10.1016/j.jnca.2019.02.017
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Han Y., 2019, Convergence of edge computing and deep learning: a comprehensive survey. CoRR abs/1907.08349
   Han Z., 2019, GAME THEORY NEXT GEN
   Han Z., 2012, GAME THEORY WIRELESS
   Hong C., 2018, ARXIV181000305
   Hua Y, 2003, PARALLEL AND DISTRIBUTED COMPUTING, APPLICATIONS AND TECHNOLOGIES, PDCAT'2003, PROCEEDINGS, P268, DOI 10.1109/PDCAT.2003.1236303
   Huang L, 2022, MOBILE NETW APPL, V27, P1123, DOI 10.1007/s11036-018-1177-x
   Huang L, 2019, DIGIT COMMUN NETW, V5, P10, DOI 10.1016/j.dcan.2018.10.003
   Huang M, 2019, CHIN PERSP JOURNAL C, P1, DOI 10.1080/15376516.2019.1669242
   Hung SH, 2015, SOFTWARE PRACT EXPER, V45, P1087, DOI 10.1002/spe.2265
   Iosifidis G, 2015, IEEE ACM T NETWORK, V23, P1634, DOI 10.1109/TNET.2014.2345875
   Iyer Ganesh Neelakanta, 2020, Computational Intelligence in Data Mining. Proceedings of the International Conference on ICCIDM 2018. Advances in Intelligent Systems and Computing (AISC 990), P299, DOI 10.1007/978-981-13-8676-3_27
   Jin XL, 2019, MATH PROBL ENG, V2019, DOI 10.1155/2019/5716729
   Josilo Slacdana, 2017, INFOCOM 2017 - IEEE Conference on Computer Communications, DOI 10.1109/INFOCOM.2017.8057148
   Josilo S, 2018, MECOMM'18: PROCEEDINGS OF THE 2018 WORKSHOP ON MOBILE EDGE COMMUNICATIONS, P13, DOI 10.1145/3229556.3229559
   Josilo S, 2019, IEEE INFOCOM SER, P2467, DOI [10.1109/infocom.2019.8737480, 10.1109/INFOCOM.2019.8737480]
   Kaur R, 2018, 2018 4TH INTERNATIONAL CONFERENCE ON COMPUTING SCIENCES (ICCS), P94, DOI 10.1109/ICCS.2018.00023
   Khan JA, 2017, 2017 PROCEEDINGS OF THE 29TH INTERNATIONAL TELETRAFFIC CONGRESS (ITC 29), VOL 1, P223, DOI [10.23919/ITC.2017.8064359, 10.1109/ITC.29.112]
   Kiani A, 2017, IEEE INTERNET THINGS, V4, P2082, DOI 10.1109/JIOT.2017.2750030
   Kuang ZK, 2019, IEEE T VEH TECHNOL, V68, P12190, DOI 10.1109/TVT.2019.2944742
   Li K., 2019, ARXIV190310837
   Li K, 2018, IEEE ICC
   Li KQ, 2019, IEEE ACCESS, V7, P69960, DOI 10.1109/ACCESS.2019.2919106
   LI L, 2019, ARXIV190507749
   LI L, 2018, ARXIV181205743
   Li LX, 2019, INT CONF ACOUST SPEE, P4784, DOI 10.1109/ICASSP.2019.8682862
   Li MF, 2018, INT J DIGIT MULTIMED, V2018, DOI 10.1155/2018/2619438
   LIU D, 2019, IEEE ICC
   Liu DQ, 2017, 2017 SECOND INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P20, DOI 10.1109/FMEC.2017.7946402
   LIU H, 2018, 4 INT C COMP COMM IC
   Liu LQ, 2018, IEEE INTERNET THINGS, V5, P1869, DOI 10.1109/JIOT.2018.2816682
   Liu Y, 2017, COMPUT NETW, V129, P399, DOI 10.1016/j.comnet.2017.03.015
   Luo SY, 2019, IEEE ACCESS, V7, P169055, DOI 10.1109/ACCESS.2019.2954898
   Ma X, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18061945
   Mach P, 2017, IEEE COMMUN SURV TUT, V19, P1628, DOI 10.1109/COMST.2017.2682318
   Mahmud R, 2019, J PARALLEL DISTR COM, V132, P190, DOI 10.1016/j.jpdc.2018.03.004
   MAJEED AA, 2019, ARXIV190904945
   Mao YJ, 2017, INT GEOL REV, V59, P1276, DOI [10.1109/COMST.2017.2745201, 10.1080/00206814.2016.1209435]
   MASDARI M, 2019, CLUSTER COMPUT 1205
   Masdari M, 2020, CLUSTER COMPUT, V23, P2533, DOI 10.1007/s10586-019-03026-9
   Meskar E, 2017, IEEE T MOBILE COMPUT, V16, P87, DOI 10.1109/TMC.2016.2538227
   Misra S, 2019, IEEE SYST J, V13, P2978, DOI 10.1109/JSYST.2019.2898903
   Moura J, 2019, IEEE COMMUN SURV TUT, V21, P260, DOI 10.1109/COMST.2018.2863030
   Mukherjee A, 2018, J SUPERCOMPUT, V74, P2412, DOI 10.1007/s11227-018-2269-x
   NGUYEN TT, 2019, ARXIV190308566
   Peng K, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/8267838
   Pham QV, 2018, IEEE ACCESS, V6, P75868, DOI 10.1109/ACCESS.2018.2882800
   Ranadheera S, 2018, IEEE WIREL COMMUN LE, V7, P688, DOI 10.1109/LWC.2018.2810292
   Ren JK, 2018, IEEE T WIREL COMMUN, V17, P5506, DOI 10.1109/TWC.2018.2845360
   Ritzberger K., 2002, Foundations of non-cooperative game theory
   Roman R, 2018, FUTURE GENER COMP SY, V78, P680, DOI 10.1016/j.future.2016.11.009
   Ruan LN, 2018, J COMMUN NETW-S KOR, V20, P247, DOI 10.1109/JCN.2018.000037
   Shahidinejad A, 2020, CLUSTER COMPUT, V23, P1045, DOI 10.1007/s10586-019-02972-8
   Shahnaz F, 2006, INFORM PROCESS MANAG, V42, P373, DOI 10.1016/j.ipm.2004.11.005
   Sun W, 2018, IEEE T IND INFORM, V14, P4692, DOI 10.1109/TII.2018.2855746
   VALLIN F, 2019, AUCTION THEORY
   Verma T., 2020, Fuzzy Solution Concepts for Non-cooperative Games
   Wang C, 2019, 2019 THE 3RD INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPILATION, COMPUTING AND COMMUNICATIONS (HP3C 2019), P159, DOI 10.1145/3318265.3318276
   Wang JY, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3284387
   WANG L, 2019, C P 2019 IEEE INT C, pNI464, DOI DOI 10.1109/icspcc46631.2019.8960778
   Wang T, 2018, VEH TECHNOL CONFE
   Wen ZG, 2018, IEEE ACCESS, V6, P72786, DOI 10.1109/ACCESS.2018.2879334
   Wu BW, 2019, IEEE ACCESS, V7, P121982, DOI 10.1109/ACCESS.2019.2938186
   Wu SY, 2018, INT CONF WIRE COMMUN
   Xiang Liu, 2015, ISA 60th Analysis Division Symposium 2015, P1
   Xiao L, 2016, IEEE ACCESS, V4, P2281, DOI 10.1109/ACCESS.2016.2565198
   Xiong ZH, 2020, IEEE T SERV COMPUT, V13, P356, DOI 10.1109/TSC.2019.2947914
   Xu XL, 2021, SOFTWARE PRACT EXPER, V51, P2015, DOI 10.1002/spe.2749
   Xu XL, 2019, FUTURE GENER COMP SY, V95, P522, DOI 10.1016/j.future.2018.12.055
   YAN J, 2019, ARXIV191207599
   YANG B, 2018, ARXIV181207781
   Yang LC, 2018, IEEE ACM T NETWORK, V26, P2762, DOI 10.1109/TNET.2018.2876941
   Yu S, 2018, IEEE T VEH TECHNOL, V67, P11098, DOI 10.1109/TVT.2018.2869144
   Yue YL, 2019, IEEE ICC
   Zhang HL, 2017, IEEE ACCESS, V5, P13455, DOI 10.1109/ACCESS.2017.2721957
   Zhang TK, 2019, IEEE T VEH TECHNOL, V68, P12314, DOI 10.1109/TVT.2019.2947334
NR 106
TC 76
Z9 77
U1 4
U2 106
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2020
VL 50
IS 9
BP 1719
EP 1759
DI 10.1002/spe.2839
EA APR 2020
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MT2QQ
UT WOS:000527923300001
DA 2024-07-18
ER

PT J
AU Lamperti, G
AF Lamperti, Gianfranco
TI Temporal determinization of mutating finite automata: Reconstructing or
   restructuring
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE determinization; finite automata; mutating automata; subset
   construction; subset restructuring
ID DISCRETE-EVENT SYSTEMS; INCREMENTAL DETERMINIZATION; ACTIVE SYSTEMS;
   DIAGNOSIS; CONSTRUCTION
AB A mutating finite automaton (MFA) is a nondeterministic finite automaton (NFA) that changes its morphology over discrete time by a sequence of mutations. This results in a sequence of NFAs, the initial NFA, and one mutated NFA for each mutation. Some application domains, including model-based diagnosis of discrete-event systems in artificial intelligence and model-based testing in software engineering, require temporal determinization of MFAs. Determinizing an MFA temporally means generating a deterministic finite automaton (DFA) that is equivalent to the mutated NFA as soon as a mutation occurs. Since, in computation time, the classical Subset Construction determinization algorithm may be less than optimal when applied to MFAs, a conservative algorithm is proposed, called Subset Restructuring, which, instead of constructing the new DFA from scratch based on the mutated NFA, generates the new DFA by updating the previous DFA based on the mutation occurred. Subset Restructuring is sound and complete, thereby yielding the same DFA generated by Subset Construction. Results from massive experimentation indicate the viability of Subset Restructuring, especially so when large MFAs change by small mutations.
C1 [Lamperti, Gianfranco] Univ Brescia, Brescia, Italy.
C3 University of Brescia
RP Lamperti, G (corresponding author), Univ Brescia, Dept Informat Engn, Via Branze 38, I-25123 Brescia, Italy.
EM gianfranco.lamperti@unibs.it
OI LAMPERTI, Gian Franco/0000-0002-1915-6932
CR Aichernig Bernhard K., 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P1, DOI 10.1007/978-3-642-38916-0_1
   Aichernig BK, 2015, SCI COMPUT PROGRAM, V97, P383, DOI 10.1016/j.scico.2014.05.004
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Balan SI, 2014, LECT NOTES COMPUT SC, V8708, P29, DOI 10.1007/978-3-319-10975-6_3
   BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   Brognoli S, 2016, COMPUT J, V59, P1872, DOI 10.1093/comjnl/bxw044
   Caniato G, 2018, PROCEDIA COMPUT SCI, V126, P59, DOI 10.1016/j.procs.2018.07.209
   Carrasco RC, 2009, ALGORITHMICA, V55, P95, DOI 10.1007/s00453-008-9172-4
   Carrasco RC, 2002, COMPUT LINGUIST, V28, P207, DOI 10.1162/089120102760173652
   Cassandras C. G., 2008, INTRO TODISCRETE EVE
   Cerutti S, 2007, SOFTWARE PRACT EXPER, V37, P365, DOI 10.1002/spe.773
   Champarnaud JM, 2005, INT J FOUND COMPUT S, V16, P441, DOI 10.1142/S012905410500308X
   CHOMSKY N, 1956, IRE T INFORM THEOR, V2, P113
   Daciuk J, 2004, ADV SOFT COMP, P201
   Daciuk J, 2000, COMPUT LINGUIST, V26, P3, DOI 10.1162/089120100561601
   Euvrard C, 2014, 2014 INTERNATIONAL CONFERENCE ON PLANARIZATION/CMP TECHNOLOGY (ICPT), P25, DOI 10.1109/ICPT.2014.7017237
   Hamscher W., 1992, READINGS MODEL BASED
   Hopcroft J. E., 2006, INTRO AUTOMATA THEOR
   Lamperti G, 2002, ARTIF INTELL, V137, P91, DOI 10.1016/S0004-3702(02)00123-6
   Lamperti G, 1997, INT JOINT CONF ARTIF, P446
   Lamperti G, 2004, 6 INT C ENT INF SYST, V2, P249
   Lamperti G., 2018, Introduction to Diagnosis of Active Systems, DOI DOI 10.1007/978-3-319-92733-6
   Lamperti G, 2005, P 16 INT WORKSH PRIN
   Lamperti G, 2008, LECT NOTES BUS INF P, V3, P135
   Lamperti G, 2008, LECT NOTES ARTIF INT, V5177, P362, DOI 10.1007/978-3-540-85563-7_48
   Lamperti G, 2007, AI COMMUN, V20, P27
   Lamperti G, 2006, ICEIS 2006: Proceedings of the Eighth International Conference on Enterprise Information Systems, P47
   Lamperti G, 2018, SMART INNOV SYST TEC, V72, P22, DOI 10.1007/978-3-319-59421-7_3
   Lamperti G, 2016, SMART INNOV SYST TEC, V56, P215, DOI 10.1007/978-3-319-39630-9_18
   Lamperti G, 2016, LECT NOTES COMPUT SC, V9817, P45, DOI 10.1007/978-3-319-45507-5_4
   Lamperti G, 2016, SOFTWARE PRACT EXPER, V46, P513, DOI 10.1002/spe.2309
   Lamperti G, 2014, IEEE T SYST MAN CY-S, V44, P1028, DOI 10.1109/TSMC.2013.2296277
   Lamperti G, 2013, AI COMMUN, V26, P373, DOI 10.3233/AIC-130574
   Lamperti G, 2011, IEEE T SYST MAN CY A, V41, P356, DOI 10.1109/TSMCA.2010.2069096
   Lamperti G, 2008, FRONT ARTIF INTEL AP, V178, P793, DOI 10.3233/978-1-58603-891-5-793
   RABIN MO, 1959, IBM J RES DEV, V3, P114, DOI 10.1147/rd.32.0114
   Watson B. W., 2003, Natural Language Engineering, V9, P49, DOI 10.1017/S1351324903003127
NR 37
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2020
VL 50
IS 4
BP 335
EP 367
DI 10.1002/spe.2776
EA DEC 2019
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS7QQ
UT WOS:000502667800001
DA 2024-07-18
ER

PT J
AU López-Pintado, O
   García-Bañuelos, L
   Dumas, M
   Weber, I
   Ponomarev, A
AF Lopez-Pintado, Orlenys
   Garcia-Banuelos, Luciano
   Dumas, Marlon
   Weber, Ingo
   Ponomarev, Alexander
TI Caterpillar: A business process execution engine on the Ethereum
   blockchain
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE blockchain; business process management system; distributed ledger;
   model-driven engineering
AB Blockchain platforms, such as Ethereum, allow a set of actors to maintain a ledger of transactions without relying on a central authority and to deploy programs, called smart contracts, that are executed whenever certain transactions occur. These features can be used as basic building blocks for executing collaborative business processes between mutually untrusting parties. However, implementing business processes using the low-level primitives provided by blockchain platforms is cumbersome and error-prone. In contrast, established business process management systems (BPMSs), such as those based on the standard Business Process Model and Notation (BPMN), provide convenient abstractions for rapid development of process-oriented applications. This article demonstrates how to combine the advantages of a BPMS with those of a blockchain platform. The article introduces a blockchain-based BPMN execution engine, named Caterpillar. Like any BPMN execution engine, Caterpillar supports the creation of instances of a process model and allows users to monitor the state of process instances and to execute tasks thereof. The specificity of Caterpillar is that the state of each process instance is maintained on the (Ethereum) blockchain and the workflow routing is performed by smart contracts generated by a BPMN-to-Solidity compiler. The Caterpillar compiler supports a large array of BPMN constructs, including subprocesses, multiple-instance activities, and event handlers. The paper describes the architecture of Caterpillar and the interfaces it provides to support the monitoring of process instances, the allocation and execution of work items, and the execution of service tasks.
C1 [Lopez-Pintado, Orlenys; Garcia-Banuelos, Luciano; Dumas, Marlon] Univ Tartu, Inst Comp Sci, Juhan Liivi 2, EE-50409 Tartu, Estonia.
   [Garcia-Banuelos, Luciano] Tecnol Monterrey, Sch Engn & Sci, Puebla, Mexico.
   [Weber, Ingo; Ponomarev, Alexander] CSIRO, Data61, Sydney, NSW, Australia.
   [Weber, Ingo] Univ New South Wales Sydney, Sch Comp Sci & Engn, Sydney, NSW, Australia.
C3 University of Tartu; Tecnologico de Monterrey; Commonwealth Scientific &
   Industrial Research Organisation (CSIRO); University of New South Wales
   Sydney
RP López-Pintado, O (corresponding author), Univ Tartu, Inst Comp Sci, Juhan Liivi 2, EE-50409 Tartu, Estonia.
EM orlenyslp@ut.ee
RI Garcia-Banuelos, Luciano/R-1277-2016; López-Pintado,
   Orlenys/AAR-8672-2020; Dumas, Marlon/H-2757-2015; Weber,
   Ingo/C-9166-2011
OI Garcia-Banuelos, Luciano/0000-0001-9076-903X; López-Pintado,
   Orlenys/0000-0002-5953-0327; Dumas, Marlon/0000-0002-9247-7476; Weber,
   Ingo/0000-0002-4833-5921
FU Estonian Research Council [IUT20-55]
FX Estonian Research Council, Grant/Award Number: IUT20-55
CR [Anonymous], 2014, Business process model and notation (bpmn) v2.0.2
   Attaran M., 2019, ARCHITECTURE BLOCKCH, P21, DOI DOI 10.1007/978-3-030-03035-3
   Auberger L, 2017, DIGITAL PROCESS AU 1
   Augusto A, 2016, P 35 INT C CONC MOD
   Buterin V, 2014, ETHEREUM ORACLES
   Frantz CK, 2016, P 1 INT WORKSH FDN A
   Garcia-Banuelos L, 2017, P 15 INT C BUS PROC
   Hull R, 2016, P 14 INT C SERV OR C
   JSON RPC Working Group, 2018, JSON RPC 2 0 SPEC
   Lopez-Pintado O., 2017, P INT C BUS PROC MAN
   Matuleviius R., 2015, CREATION SMART CONTR
   Mendling J, 2018, ACM TRANS MANAG INF, V9, DOI 10.1145/3183367
   Nigam A, 2003, IBM SYST J, V42, P428, DOI 10.1147/sj.423.0428
   Object Management Group, 2018, BPMN 2 0 SPEC
   Palacin L, 2018, ACCELERATE BLOCKCHAI
   Prybila C, 2017, FUTUR GENER COMPUT S
   Rikken O., BPM BLOCKCHAIN MILES
   Russell N, 2005, P INT C ADV INF SYST
   Sadiq S, 2007, LECT NOTES COMPUT SC, V4714, P149
   Staples M., 2017, DATA61 CSIRO SYDN 20
   Sturm C, 2018, P 16 INT C BUS PROC
   The Ethereum Foundation, 2018, ETH WIR PROT
   Tran AB, 2018, BPM 18
   UK Government Chief Scientific Adviser, 2016, Technical Report
   Weber I, 2016, P 14 INT C BUS PROC
NR 25
TC 67
Z9 70
U1 2
U2 34
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2019
VL 49
IS 7
BP 1162
EP 1193
DI 10.1002/spe.2702
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IC6BJ
UT WOS:000471053400005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Adewumi, A
   Misra, S
   Omoregbe, N
   Sanz, LF
AF Adewumi, Adewole
   Misra, Sanjay
   Omoregbe, Nicholas
   Fernandez Sanz, Luis
TI FOSSES: Framework for open-source software evaluation and selection
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE analytic hierarchy process; evidential reasoning; MCDM; open-source
   software; process framework; weighted scoring model
ID QUALITY; MODELS; SYSTEM
AB A plethora of approaches exists for the evaluation and selection of open-source software (OSS) in the literature. However, these approaches are hardly ever used in practice for the following reasons: first, the lack of a situational-based procedure to define the evaluation criteria for OSS given its varied and dynamic nature; second, the inability of existing evaluation techniques, such as the analytic hierarchy process, to cope well with uncertainty factors, thus producing misleading results that affect the quality of decisions made; and third, a significant number of existing approaches require the prototyping of alternatives being considered in order to facilitate evaluation and decision-making. This study addresses the aforementioned challenges by evolving a process framework for evaluating and selecting OSS. The proposed framework is validated by applying it to a case study. In addition, expert opinion was elicited via questionnaires from 10 experts, and overall feedback suggests that 80% of them are willing to adopt the approach.
C1 [Adewumi, Adewole; Omoregbe, Nicholas] Covenant Univ, Dept Comp & Informat Sci, Ota, Nigeria.
   [Misra, Sanjay] Covenant Univ, Dept Elect & Informat Engn, Ota, Nigeria.
   [Misra, Sanjay] Atilim Univ, Dept Comp Engn, Kizilcasar Mahallesi, TR-06830 Ankara, Turkey.
   [Fernandez Sanz, Luis] Univ Alcala, Dept Comp Sci, Madrid, Spain.
C3 Covenant University; Covenant University; Atilim University; Universidad
   de Alcala
RP Misra, S (corresponding author), Atilim Univ, Dept Comp Engn, Kizilcasar Mahallesi, TR-06830 Ankara, Turkey.
EM ssopam@gmail.com
RI Misra, Sanjay/K-2203-2014; Adewumi, Adewole/M-8695-2013; Fernandez-Sanz,
   Luis/J-4895-2012; Fernandez, Luis/KHX-5442-2024
OI Misra, Sanjay/0000-0002-3556-9331; Fernandez-Sanz,
   Luis/0000-0003-0778-0073; 
FU Covenant University through the Centre for Research, Innovation and
   Discovery (CUCRID)
FX Covenant University through the Centre for Research, Innovation and
   Discovery (CUCRID)
CR Adewumi A, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-3612-4
   Adewumi A, 2013, IERI PROC, V4, P88, DOI 10.1016/j.ieri.2013.11.014
   Adewumi A, 2013, IEEE INT C COMPUT, P1207, DOI 10.1109/CSE.2013.179
   Ahmad N., 2013, Strategic Adoption of Technological Innovations, P50, DOI [10.4018/978-1-4666-2782-6.ch004, DOI 10.4018/978-1-4666-2782-6.CH004]
   Alfonzo O, 2008, 19 AUSTR C SOFTW ENG, DOI [10.1109/ASWEC.2008.4483214, DOI 10.1109/ASWEC.2008.4483214]
   [Anonymous], 2006, P EFOSS WORKSH COM I
   Atos, 2006, METH QUAL SEL OP SOU
   Aversano Lerina, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P202, DOI 10.1007/978-3-642-21843-9_17
   Aversano L, 2013, INFORM SOFTWARE TECH, V55, P1260, DOI 10.1016/j.infsof.2013.01.007
   Azadeh A., 2014, International Journal of Industrial and Systems Engineering, V18, P256
   BlackDuck, 2014, BLACKDUCK 2014 FUTUR
   Cavus N, 2011, BRIT J EDUC TECHNOL, V42, P19, DOI 10.1111/j.1467-8535.2009.01033.x
   Cavus N, 2010, ADV ENG SOFTW, V41, P248, DOI 10.1016/j.advengsoft.2009.07.009
   Cruz D., 2006, Software Process Improvement and Practice, V11, P107, DOI 10.1002/spip.257
   Deprez JC, 2008, LECT NOTES COMPUT SC, V5089, P189, DOI 10.1007/978-3-540-69566-0_17
   Duijnhouwer F. W., 2003, CAPGEMINI EXPERT LET
   Fitzgerald B, 2011, ADOPTING OPEN SOURCE SOFTWARE: A PRACTICAL GUIDE, P1
   Goh DHL, 2006, ONLINE INFORM REV, V30, P360, DOI 10.1108/14684520610686283
   Haaland K., 2010, 4 FLOS INT WORKSH FR, V0, P1
   Hauge O, 2009, 2008 ICSE WORKSH EM, DOI [10.1109/FLOSS.2009.5071359, DOI 10.1109/FL0SS.2009.5071359]
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Hossain M. S., 2012, INT J COMPUTER APPL, V57, P51
   Houstis EN, 2000, ACM T MATH SOFTWARE, V26, P227, DOI 10.1145/353474.353475
   Hwang CL, 1981, Multiple attribute decision making: Methods and applications a state-ofthe-art survey, DOI [DOI 10.1007/978-3-642-48318-93, 10.1007/978-3-642-48318-93, DOI 10.1007/978-3-642-48318-9]
   Ishizaka A, 2011, EXPERT SYST APPL, V38, P14336, DOI 10.1016/j.eswa.2011.04.143
   Jadhav AS, 2011, J SYST SOFTWARE, V84, P1394, DOI 10.1016/j.jss.2011.03.034
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   KHONDOKER R, 2014, INFORMATION SYSTEMS
   Klein J., 2015, P 1 WORKSH PERF AN B
   Klein John, 2014, Quality attribute-guided evaluation of nosql databases: An experience report
   Krylovas A, 2014, INT J INF TECH DECIS, V13, P1119, DOI 10.1142/S0219622014500825
   Kuwata Y, 2014, PROCEDIA COMPUT SCI, V35, P1711, DOI 10.1016/j.procs.2014.08.264
   Lange C, 2016, ASSIGNING WEIGHT EVA
   Malczewski J, 2006, INT J GEOGR INF SCI, V20, P703, DOI 10.1080/13658810600661508
   Ncube C., 2002, COTS-Based Software Systems. First International Conference, ICCBSS 2002. Proceedings (Lecture Notes in Computer Science Vol.2255), P176
   Oriol M, 2014, INFORM SOFTWARE TECH, V56, P1167, DOI 10.1016/j.infsof.2014.03.012
   Parker KR, 2010, EDUC INF TECHNOL, V15, P255, DOI 10.1007/s10639-010-9126-8
   Raffoul Eduardo, 2008, Proceedings of the IASTED International Conference on Software Engineering, as part of the 26th IASTED International Multi-Conference on Applied Informatics, P43
   Rainer A, 2005, P 1 INT C OP SOURC S
   Ramanathan R, 2006, COMPUT OPER RES, V33, P1289, DOI 10.1016/j.cor.2004.09.020
   Ricci F, 2007, IEEE INTELL SYST, V22, P22, DOI 10.1109/MIS.2007.43
   Rossi B, 2012, INFORM TECHNOL PEOPL, V25, P156, DOI 10.1108/09593841211232677
   Ruhe G, 2002, LECT NOTES COMPUT SC, V2640, P104
   SALMAN O, 2016, CYPRUS
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Siena A, 2014, LECT NOTES COMPUT SC, V8824, P335, DOI 10.1007/978-3-319-12206-9_28
   Siraj S, 2015, INT T OPER RES, V22, P217, DOI 10.1111/itor.12054
   Sohn H., 2015, INT J SOFT ENG APPL, V9, P1, DOI DOI 10.14257/IJSEIA.2015.9.6.01
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   Stol K., 2010, FLOSS-3, P17, DOI [10.1145/1833272.1833276, DOI 10.1145/1833272.1833276]
   Sung WJ, 2007, ALPIT 2007: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON ADVANCED LANGUAGE PROCESSING AND WEB INFORMATION TECHNOLOGY, P515, DOI 10.1109/ALPIT.2007.81
   Swain NR, 2015, ENVIRON MODELL SOFTW, V67, P108, DOI 10.1016/j.envsoft.2015.01.014
   Taibi D, 2007, INT FED INFO PROC, V234, P173
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   Walkinshaw N, 2013, P 9 INT C PRED MOD S
   Xu L, 2001, WORKING PAPER
   Zavadskas EK, 2014, TECHNOL ECON DEV ECO, V20, P165, DOI 10.3846/20294913.2014.892037
NR 57
TC 13
Z9 13
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2019
VL 49
IS 5
BP 780
EP 812
DI 10.1002/spe.2682
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HR3KH
UT WOS:000463035200004
DA 2024-07-18
ER

PT J
AU Cimino, LD
   de Resende, JEE
   Silva, LHM
   Rocha, SQS
   Correia, MD
   Monteiro, GS
   Fernandes, GND
   Moreira, RD
   de Silva, JG
   Santos, MIB
   Aquino, ALL
   Almeida, ALB
   Lima, JD
AF Cimino, Leonardo de Souza
   Eugenio de Resende, Jose Estevao
   Moreira Silva, Lucas Henrique
   Souza Rocha, Samuel Queiroz
   Correia, Matheus de Oliveira
   Monteiro, Guilherme Souza
   de Souza Fernandes, Gabriel Nata
   Moreira, Renan da Silva
   de Silva, Junior Guilherme
   Batista Santos, Matheus Inacio
   Lins Aquino, Andre Luiz
   Barroso Almeida, Andre Luis
   Lima, Joubert de Castro
TI A middleware solution for integrating and exploring IoT and HPC
   capabilities
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE high-performance computing; Internet of Things; middleware
ID INTERNET; THINGS; SERVICE
AB Even with the considerable advances in the development of middleware solutions, there is still a substantial gap in Internet of Things (IoT) and high-performance computing (HPC) integration. It is not possible to expose services such as processing, storage, sensing, security, context awareness, and actuating in a unified manner with the existing middleware solutions. The consequence is the utilization of several solutions with their particularities, thus requiring different skills. Besides that, the users have to solve the integration and all heterogeneity issues. To reduce the gap between IoT and HPC technologies, we present the JavaCa&La (JCL), a middleware used to help the implementation of distributed user-applications classified as IoT-HPC. This ubiquity is possible because JCL incorporates (1) a single application programming interface to program different device categories; (2) the support for different programming models; (3) the interoperability of sensing, processing, storage, and actuating services; (4) the integration with MQTT technology; and (5) security, context awareness, and actions services introduced through JCL application programming interface. Experimental evaluations demonstrated that JCL scales when doing the IoT-HPC services. Additionally, we identify that customized JCL deployments become an alternative when Java-Android and vice-versa code conversion is necessary. The MQTT brokers usually are faster than JCL HashMap sensing storage, but they do not perform distributed, so they cannot handle a huge amount of sensing data. Finally, a short example for monitoring moving objects exemplifies JCL facilities for IoT-HPC development.
C1 [Cimino, Leonardo de Souza; Barroso Almeida, Andre Luis] Inst Fed Minas Gerais, Dept Tecnol Informacao, BR-36415000 Congonhas, MG, Brazil.
   [Cimino, Leonardo de Souza; Eugenio de Resende, Jose Estevao; Moreira Silva, Lucas Henrique; Souza Rocha, Samuel Queiroz; Correia, Matheus de Oliveira; Monteiro, Guilherme Souza; de Souza Fernandes, Gabriel Nata; Lima, Joubert de Castro] Univ Fed Ouro Preto, Inst Ciencias Exatas & Biol, Dept Comp, Ouro Preto, Brazil.
   [Batista Santos, Matheus Inacio; Lins Aquino, Andre Luiz] Univ Fed Alagoas, Inst Comp, Maceio, Brazil.
   [Moreira, Renan da Silva; de Silva, Junior Guilherme; Barroso Almeida, Andre Luis] Inst Fed Minas Gerais, Coordenadoria Curso Tecn Automacao Ind, Ouro Preto, Brazil.
C3 Instituto Federal de Educacao, Ciencia e Tecnologia de Minas Gerais
   (IFMG); Universidade Federal de Ouro Preto; Universidade Federal de
   Alagoas; Instituto Federal de Educacao, Ciencia e Tecnologia de Minas
   Gerais (IFMG)
RP Cimino, LD (corresponding author), Inst Fed Minas Gerais, Dept Tecnol Informacao, BR-36415000 Congonhas, MG, Brazil.
EM leonardo.cimino@ifmg.edu.br
RI Almeida, André/KHD-0917-2024; Silva, Lucas Yuri da/KIG-4840-2024;
   Aquino, Andre Luiz Lins/H-4005-2011; Aquino, Andre Luiz
   Lins/GRS-4766-2022; Aquino, Andre L L/T-2158-2019; Cimino,
   Leonardo/Y-5894-2018
OI Silva, Lucas Yuri da/0009-0002-2471-3366; Aquino, Andre Luiz
   Lins/0000-0002-9008-5954; Aquino, Andre Luiz Lins/0000-0002-9008-5954;
   Aquino, Andre L L/0000-0002-9008-5954; Cimino,
   Leonardo/0000-0002-7807-8225
FU FAPEAL; FAPESP; CNPq
FX We thank UFOP and IFMG for the infrastructure. A. L. L. Aquino
   gratefully acknowledges his research support from FAPEAL, FAPESP, and
   CNPq.
CR Aberer K, 2006, INT C VER LARG DAT B
   Al-Jaroodi J, 2012, CONCURR COMP-PRACT E, V24, P1919, DOI 10.1002/cpe.2817
   Almeida ALB, 2016, 18 INT C ENT INF SYS
   Amazon Web Services, 2017, AM KIN
   Androutsellis-Theotokis S, 2004, ACM COMPUT SURV, V36, P335, DOI 10.1145/1041680.1041681
   [Anonymous], 2017, OASIS STAND
   [Anonymous], 2017, RED HAT
   [Anonymous], 2002, DESIGN RIJNDAEL
   [Anonymous], 2017, RED HAT
   [Anonymous], 2017, SMART CLOUD ARCH PLA
   [Anonymous], 1997, HMAC KEYED HASHING M, DOI DOI 10.17487/RFC2104
   Baduel L, 2005, IEEE INT S CLUST COM
   Baker M, 2006, 2006 IEEE INT C CLUS
   Bandyopadhyay S, 2011, COMM COM INF SC, V162, P288
   Barbaro B, 2017, ZANZITO
   Bazzani M, 2012, IEEE INT C TRUST SEC
   Bonomi F., 2012, P 1 ACM MCC WORKSH M, P13
   Botta A, 2016, FUTURE GENER COMP SY, V56, P684, DOI 10.1016/j.future.2015.09.021
   Calbimonte J-P, 2014, INT WORKSH SEM SENS
   Caro RJ, 2009, ICT MOB WIR COMM SUM
   Cimino LdS, 2017, BRAZ S COMP SYST ENG
   CloudPlugs Inc, 2017, CLOUDPLUGS
   Cohen L, 2017, JAVA PARALLEL PROCES
   Compton M, 2012, J WEB SEMANT, V17, P25, DOI 10.1016/j.websem.2012.05.003
   Diaz J, 2012, IEEE T PARALL DISTR, V23, P1369, DOI 10.1109/TPDS.2011.308
   Eclipse, 2017, MOSQ BROK
   Eisenhauer M, 2009, IEEE COMM SOC C SENS
   El Baz D, 2014, INT C ID INF KNOWL I
   Emeakaroha VC, 2013, INT C UT CLOUD COMP
   Engelmann C, 2007, INT C COMP SCI BEIJ
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Gámez N, 2011, PERS UBIQUIT COMPUT, V15, P329, DOI 10.1007/s00779-010-0354-0
   Lopez PG, 2015, ACM SIGCOMM COMP COM, V45, P37, DOI 10.1145/2831347.2831354
   Genaud Stephane, 2007, Journal of Grid Computing, V5, P109, DOI 10.1007/s10723-006-9056-2
   Gligori N, 2011, INT C DISTR COMP SEN
   Graham RL, 2006, 2006 IEEE INT C CLUS
   Infinite Automation Systems, 2017, MANGO
   Intel IoT DevKit, 2017, LIBMR
   KaaIoT Technologies, 2017, KAA IOT DEV PLATF
   Kaminsky A., 2007, IEEE INT PAR DISTR P
   Kim M, 2008, ETRI J, V30, P696, DOI 10.4218/etrij.08.1308.0039
   Kurzyniec D, 2003, PAR DISTR PROC S NIC
   Levis P, 2002, ACM SIGPLAN NOTICES, V37, P85, DOI 10.1145/605432.605407
   Li S, 2003, INT C INF PROC SENS
   Liu T, 2003, ACM SIGPLAN NOTICES, V38, P107, DOI 10.1145/966049.781516
   LogMeIn, 2017, XIV IOT PLATF
   LORD MicroStrain, 2017, SENSORCLOUD
   Lua EK, 2005, IEEE COMMUN SURV TUT, V7, P72, DOI 10.1109/COMST.2005.1610546
   McAfee A, 2012, HARVARD BUS REV, V90, P60
   McKee DW, 2017, IEEE 13 INT S AUT DE
   Message Passing Interface Forum, 1994, MPI MESS PASS INT ST
   myDevices, 2017, MYDEVICES
   Nimbits Inc, 2017, NIMB PLATF
   O'Hare GMP, 2012, INT J ARTIF INTELL T, V21, DOI 10.1142/S0218213012400064
   OASIS, 2017, EXTENSIBLE ACC CONTR
   Oracle Corporation, 2017, OR COH
   Pan B., 2017, dex2jar
   Patel DK, 2016, J NETW COMPUT APPL, V65, P103, DOI 10.1016/j.jnca.2016.02.012
   Perera C, 2014, HAW INT C SYST SCI W
   Perera C, 2015, IEEE TRANS COMPUT SO, V2, P171, DOI 10.1109/TCSS.2016.2515844
   Perera C, 2014, IEEE ACCESS, V2, P1660, DOI 10.1109/ACCESS.2015.2389854
   Perera C, 2014, IEEE COMMUN SURV TUT, V16, P414, DOI 10.1109/SURV.2013.042313.00197
   Philippsen M, 2000, CONCURRENCY-PRACT EX, V12, P495, DOI 10.1002/1096-9128(200005)12:7<495::AID-CPE496>3.0.CO;2-W
   Pitt E., 2001, Java. rmi: The Remote Method Invocation Guide
   Protic J, 1996, IEEE PARALL DISTRIB, V4, P63, DOI 10.1109/88.494605
   Pugh W, 2003, INT WORKSH LANG COMP
   Razzaque MA, 2016, IEEE INTERNET THINGS, V3, P70, DOI 10.1109/JIOT.2015.2498900
   RSA Laboratories East, 1998, PKCS 7 CRYPT MESS SY
   Shahrivari S, 2011, INT S PAR DISTR COMP
   Sheng QZ, 2005, INT C MOB BUS SYDN A
   Sheng X, 2013, IEEE SENS J, V13, P3733, DOI 10.1109/JSEN.2013.2262677
   Shvachko K, 2010, IEEE S MASS STOR SYS
   Soldatos J, 2014, INTEROPERABILITY OPE
   St Ville L, 2003, 23RD INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, P235
   Taboada GL, 2012, J SUPERCOMPUT, V60, P117, DOI 10.1007/s11227-009-0270-0
   Taboada GL, 2013, SCI COMPUT PROGRAM, V78, P425, DOI 10.1016/j.scico.2011.06.002
   Taveira WF, 2003, J UNIVERS COMPUT SCI, V9, P761
   The MathWorks Inc, 2017, THINGSPEAK
   Walker S, 2006, RAFDA POLICY AWARE M
   Wang K, 2015, INT C CLUST COMP CHI
   ZeroC Inc, 2017, IC COMPR RPC FRAM
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
   Zhu W, 2002, INT C CLUST COMP CHI
NR 83
TC 8
Z9 8
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2019
VL 49
IS 4
SI SI
BP 584
EP 616
DI 10.1002/spe.2630
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN5AE
UT WOS:000460194000003
DA 2024-07-18
ER

PT J
AU Li, CQ
   Gu, JH
AF Li, Changqing
   Gu, Jianhua
TI An integration approach of hybrid databases based on SQL in cloud
   computing environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; cloud computing; database services; hybrid databases;
   integration; NoSQL
ID FRAMEWORK; DESIGN
AB As the applications with big data in cloud computing environment grow, many existing systems expect to expand their service to support the dramatic increase of data, and modern software development for services computing and cloud computing software systems is no longer based on a single database but on existing multidatabases and this convergence needs new software architecture design. This paper proposes an integration approach to support hybrid database architecture, including MySQL, MongoDB, and Redis, to make it possible of allowing users to query data simultaneously from both relational SQL systems and NoSQL systems in a single SQL query. Two mechanisms are provided for constructing Redis's indexes and semantic transforming between SQL and MongoDB API to add the SQL feature for these NoSQL databases. With the proposed approach, hybrid database systems can be performed in a flexible manner, ie, access can be either relational database or NoSQL, depending on the size of data. The approach can effectively reduce development complexity and improve development efficiency of the software systems with multidatabases. This is the result of further research on the related topic, which fills the gap ignored by relevant scholars in this field to make a little contribution to the further development of NoSQL technology.
C1 [Li, Changqing; Gu, Jianhua] Northwestern Polytech Univ, Sch Comp Sci & Engn, Xian 710072, Shaanxi, Peoples R China.
C3 Northwestern Polytechnical University
RP Li, CQ (corresponding author), Northwestern Polytech Univ, Sch Comp Sci & Engn, Xian 710072, Shaanxi, Peoples R China.
EM li_changqing@126.com
CR [Anonymous], MONGODB DOC REL 3 2
   [Anonymous], 2011 6 INT C PERS CO
   [Anonymous], J COMPUT SCI COLL
   [Anonymous], 2013, INT J SCI RES PUBL
   [Anonymous], P 2012 ACM SIGMOD IN
   [Anonymous], P 2014 INT C COMP SC
   [Anonymous], 2014 IEEE INT C BIG
   [Anonymous], P 28 BRAZ S DAT REC
   [Anonymous], P 2016 INT C MAN DAT
   [Anonymous], P 2011 INT C TRANSP
   [Anonymous], FUTUR GENER COMPUT S
   [Anonymous], P 29 ANN ACM S APPL
   [Anonymous], P 2014 ACM SIGMOD IN
   [Anonymous], INT J RECENT INNOVAT
   [Anonymous], 2010 6 WORLD C SERV
   [Anonymous], P 2011 IEEE 13 C COM
   Atzeni Paolo, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P160, DOI 10.1007/978-3-642-31095-9_11
   Bayer R., 1972, Acta Informatica, V1, P173, DOI 10.1007/BF00288683
   Bhuvan NikhilaT., 2015, International Journal of Computer Applications, V121, P24
   Brayton Robert K., 1984, KLUWER INT SERIES EN, V2
   Calil Andre, 2012, Advances in Databases and Information Systems. Proceedings 16th East European Conference, ADBIS 2012, P99, DOI 10.1007/978-3-642-33074-2_8
   Carlson J., 2013, Redis in action
   Cattell R, 2010, SIGMOD REC, V39, P12, DOI 10.1145/1978915.1978919
   Chen WH, 2017, FUTURE GENER COMP SY, V74, P1, DOI 10.1016/j.future.2017.03.008
   Chen YK, 2018, IEEE ACCESS, V6, P20572, DOI 10.1109/ACCESS.2018.2825648
   Chodorow Kristina, 2013, MongoDB: The Definitive Guide, V2nd
   Costa C, 2016, TRANSACTIONS ON ENGINEERING TECHNOLOGIES, P383, DOI 10.1007/978-981-10-1088-0_29
   Ganski R. A., 1987, SIGMOD Record, V16, P23, DOI 10.1145/38714.38723
   George L., 2011, HBASE DEFINITIVE GUI
   KIM W, 1982, ACM T DATABASE SYST, V7, P443, DOI 10.1145/319732.319745
   Liao YT, 2016, FUTURE GENER COMP SY, V65, P111, DOI 10.1016/j.future.2016.02.002
   Parr T., 2012, The definitive ANTLR 4 reference
   Pereira RHR, 2017, SOFTWARE PRACT EXPER, V47, P193, DOI 10.1002/spe.2415
   Pokorny J, 2013, INT J WEB INF SYST, V9, P69, DOI 10.1108/17440081311316398
   Reyes-Delgado PY, 2016, COMPUT STAND INTER, V47, P24, DOI 10.1016/j.csi.2016.02.005
   Vila RR, 2013, PIXEL-BIT, P155, DOI [10.1007/978-3-642-38541-4_12, 10.12795/pixelbit.2013.i43.11]
   Vukotic A, 2014, NEO4J ACTION
   Xie GQ, 2020, IEEE T SERV COMPUT, V13, P871, DOI 10.1109/TSC.2017.2665552
   Xie GQ, 2018, SOFTWARE PRACT EXPER, V48, P366, DOI 10.1002/spe.2472
NR 39
TC 15
Z9 17
U1 1
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2019
VL 49
IS 3
BP 401
EP 422
DI 10.1002/spe.2666
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0HU
UT WOS:000459868900004
OA hybrid
DA 2024-07-18
ER

PT J
AU Mashkoor, A
   Kossak, F
   Egyed, A
AF Mashkoor, Atif
   Kossak, Felix
   Egyed, Alexander
TI Evaluating the suitability of state-based formal methods for industrial
   deployment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE evaluation criteria; formal methods
ID EVENT-B; MODEL CHECKING; ELECTRONIC PURSE; SPECIFICATION; REFINEMENT;
   SYSTEMS; MONDEX; VALIDATION; FRAMEWORK; LANGUAGE
AB After a number of success stories in safety-critical domains, we are starting to witness applications of formal methods in contemporary systems and software engineering. However, one thing that is still missing is the evaluation criteria that help software practitioners choose the right formal method for the problem at hand. In this paper, we present the criteria for evaluating and comparing different formal methods. The criteria were chosen through a literature review, discussions with experts from academia and practitioners from industry, and decade-long personal experience with the application of formal methods in industrial and academic projects. The criteria were then evaluated on several model-oriented state-based formal methods. Our research shows that besides technical grounds (eg, modeling capabilities and supported development phases), formal methods should also be evaluated from social and industrial perspectives. We also found out that it is not possible to generate a matrix that renders the selection of the right formal method an automatic process. However, we can generate several pointers, which make this selection process a lot less cumbersome.
C1 [Mashkoor, Atif; Kossak, Felix] Software Competence Ctr Hagenberg GmbH, A-4232 Hagenberg, Austria.
   [Mashkoor, Atif; Egyed, Alexander] Johannes Kepler Univ Linz, Linz, Austria.
C3 Softwarepark Hagenberg; Johannes Kepler University Linz
RP Mashkoor, A (corresponding author), Software Competence Ctr Hagenberg GmbH, A-4232 Hagenberg, Austria.
EM atif.mashkoor@scch.at
RI Egyed, Alexander/E-2632-2017; Mashkoor, Atif/AAK-6747-2020
OI Mashkoor, Atif/0000-0003-1210-5953; Kossak, Felix/0000-0002-0999-1686
FU Austrian Ministry for Transport, Innovation and Technology; Federal
   Ministry of Science, Research and Economy; Province of Upper Austria of
   COMET center SCCH
FX We would like to thank the following persons for their support,
   discussion, and feedback from academia: Daniel Jackson (MIT), Eunsuk
   Kang (Berkeley), Joe Near (Berkeley) (on the Alloy section), Egon Borger
   (Pisa) (on the ASM section), Richard Banach (Manchester) (on B and
   Event-B sections), Stephan Merz (INRIA) and Leslie Lamport (Microsoft)
   (on the TLA+ section), John Fitzgerald (Newcastle) (on the VDM section),
   and Jim Woodcock (York) (on the Z section). We would also like to extend
   our gratitude to the following persons from industry for discussion and
   feedback on criteria for evaluating formal methods: Cydeny Minkowitz
   (Alstom), Eric Verhulst (Altreonic), Thierry Lecomte (ClearSy), Gerrit
   Steinocker (Fronius), David Mentre (Mitsubishi Electric R&D Centre
   Europe), Michael Dierkes (Rockwell Collins), Laurent Voisin (Systerel),
   and Klaus Reichl (Thales). This work was partially supported by the
   Austrian Ministry for Transport, Innovation and Technology, the Federal
   Ministry of Science, Research and Economy, and the Province of Upper
   Austria in the frame of the COMET center SCCH.
CR Abad P, 2013, 2013 IEEE 6 INT C SO
   Abdunabi R, 2014, COMPUTING, V96, P313, DOI 10.1007/s00607-013-0340-2
   Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J. R., 1980, On the construction of programs, P343
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial JR, 2003, LECT NOTES COMPUT SC, V2805, P51
   Abrial JR, 1998, LECT NOTES COMPUT SC, V1393, P83
   Anlauff M., 2000, Abstract State Machines Theory and Applications. International Workshop, ASM 2000. Proceedings (Lecture Notes in Computer Science Vol.1912), P69
   [Anonymous], 2014, ABZ 2014 LANDING GEA
   [Anonymous], 2001, Java and the Java Virtual Machine: Definition, Verification, Validation
   [Anonymous], 2010, LOGICAL ANAL HYBRID
   [Anonymous], 2016, HAGENBERG BUSINESS P
   Arcaini P, 2014, CCIS, P95, DOI DOI 10.1007/978-3-319-07512-9_7
   Arcaini P, 2015, P 2015 ACM IEEE INT
   Arcaini P, 2018, SCI COMPUT PROGRAM, V158, P148, DOI 10.1016/j.scico.2017.07.003
   Arcaini P, 2016, LECT NOTES COMPUT SC, V9763, P253, DOI 10.1007/978-3-319-41591-8_17
   Arcaini P, 2014, SCI COMPUT PROGRAM, V94, P93, DOI 10.1016/j.scico.2014.02.007
   Ardis MA, 1996, IEEE T SOFTWARE ENG, V22, P378, DOI 10.1109/32.508312
   Banach R, 1998, LECT NOTES COMPUT SC, V1393, P129
   Banach R, 2008, LECT NOTES COMPUT SC, V5238, P42
   Banach R, 2011, ELECTRON P THEOR COM, P121, DOI 10.4204/EPTCS.55.8
   Banach R, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2610375
   Barjaktarovic M, 1998, TECHNICAL REPORT
   Batson B, 2003, LECT NOTES COMPUT SC, V2852, P242
   Baumann P, 1996, P 4 INT WORKSH PAR D
   Bendisposto J, 2011, SOFTWARE PRACT EXPER, V41, P189, DOI 10.1002/spe.1016
   Berry DM, 2002, SCI COMPUT PROGRAM, V42, P11, DOI 10.1016/S0167-6423(01)00026-0
   Bertot Y., 2004, TEXT THEORET COMP S
   Bicarregui J. C., 1995, SOFSEM '95: Theory and Practice of Informatics. 22nd Seminar on Current Trends in Theory and Practice of Informatics. Proceedings, P184
   Bicarregui J. C., 1997, IEE Proceedings-Software Engineering, V144, P119, DOI 10.1049/ip-sen:19970974
   Bodeveix JP, 2005, LECT NOTES COMPUT SC, V3771, P187
   Bolis Francesco, 2012, Current Trends in Web Engineering (ICWE 2012). International Workshops (MDWE), Composable Web, WeRE, QWE, and Doctoral Consortium. Revised Selected Papers, P71, DOI 10.1007/978-3-642-35623-0_7
   Bonfanti S, 2017, LECT NOTES COMPUT SC, V10227, P295, DOI 10.1007/978-3-319-57288-8_21
   Borger E., 2000, Abstract State Machines Theory and Applications. International Workshop, ASM 2000. Proceedings (Lecture Notes in Computer Science Vol.1912), P361
   Borger E., 2003, ABSTRACT STATE MACHI
   Börger E, 2016, ACTA INFORM, V53, P469, DOI 10.1007/s00236-015-0249-7
   Boström P, 2014, FORM ASP COMPUT, V26, P281, DOI 10.1007/s00165-012-0260-5
   Boulanger JL., 2014, FORMAL METHODS APPL, DOI 10.1002/9781119002727
   Bowen J. P., 1998, ZUM '98: Z Formal Specification Notation. 11th International Conference of Z Users. Proceedings, P367
   BOWEN JP, 1995, COMPUTER, V28, P56, DOI 10.1109/2.375178
   Bowen JP, 2001, FACIT, P3
   Brunel J, 2014, 3 INT WORKSH ENG SAF
   Campbell C, 2005, LECT NOTES COMPUT SC, V3582, P542
   Cavalcanti A., 2003, Formal Aspects of Computing, V15, P146, DOI 10.1007/s00165-003-0006-5
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Clavel M., 1999, Rewriting Techniques and Applications. 10th International Conference, RTA-99. Proceedings (Lecture Notes in Computer Science Vol.1631), P240
   Cohen E, 2009, LECT NOTES COMPUT SC, V5674, P23, DOI 10.1007/978-3-642-03359-9_2
   Cortier A, 2007, LECT NOTES COMPUT SC, V4550, P1062
   Cousineau D., 2012, LECT NOTES COMPUTER, V7436, P147, DOI 10.1007/978-3-642-32759-914
   Cousot P, 1977, P 4 ACM SIGACT SIGPL
   Couto LD, 2015, P 2 INT WORKSH FORM
   Craigen D., 1993, Z User Workshop London 1992. Proceedings of the Seventh Annual Z User Meeting, P1
   Déharbe D, 2014, SCI COMPUT PROGRAM, V94, P130, DOI 10.1016/j.scico.2014.04.012
   Devyanin PN, 2014, LECT NOTES COMPUT SC, V8477, P309, DOI 10.1007/978-3-662-43652-3_30
   Dinca Ionut, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P361, DOI 10.1007/978-3-642-30885-7_32
   Dondossola G, 1998, P KR 98 EUR WORKSH V
   Edmunds Andrew, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P365, DOI 10.1007/978-3-642-30885-7_33
   Farahbod R, 2007, FUND INFORM, V77, P71
   Ferrarotti F, 2016, THEOR COMPUT SCI, V649, P25, DOI 10.1016/j.tcs.2016.08.013
   Ferreira RR, 2008, COMP 23 ACM SIGPLAN
   Fitzgerald J, 2009, MODELLING SYSTEMS: PRACTICAL TOOLS AND TECHNIQUES IN SOFTWARE DEVELOPMENT, 2ND EDITION, P1, DOI 10.1017/CBO9780511626975
   Fitzgerald J., 2013, IND DEPLOYMENT SYSTE, P123
   Fitzgerald J., 2005, Validated Designs for Object-oriented Systems
   Fitzgerald J, 2015, P 3 FME WORKSH FORM
   Fitzgerald J, 2008, ACM SIGPLAN NOTICES, V43, P3, DOI 10.1145/1361213.1361214
   Frappier M., 2006, Software Specification Methods, DOI DOI 10.1002/9780470612514
   Freitas L, 2008, FORM ASP COMPUT, V20, P117, DOI 10.1007/s00165-007-0059-y
   Fruja NG, 2007, THESIS
   Furst A, 2014, LECT NOTES COMPUT SC, V8739, P323, DOI 10.1007/978-3-319-10181-1_20
   Gannon JohnD., 1994, SOFTWARE SPECIFICATI
   Gargantini A, 2008, P 2008 3 INT C SOFTW
   Georg G, 2001, WORKSH PUML GROUP HE
   GHEZZI C, 1990, J SYST SOFTWARE, V12, P107, DOI 10.1016/0164-1212(90)90074-V
   Gibson JP, 2010, LECT NOTES COMPUT SC, V6150, P89, DOI 10.1007/978-3-642-13556-9_6
   Gurevich Yuri., 1995, Speci fication and Validation Methods
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Hallerstede S, 2014, SCI COMPUT PROGRAM, V82, P2, DOI 10.1016/j.scico.2013.03.008
   Hansen D., 2012, LNCS, V7321, P24, DOI 10.1007/978-3-642-30729-43
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1486, P18, DOI 10.1007/BFb0055332
   Hoang TS, 2010, LECT NOTES COMPUT SC, V5977, P319, DOI 10.1007/978-3-642-11811-1_24
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jones CB, 1999, LECT NOTES COMPUT SC, V1708, P28
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Kang E, 2008, LECT NOTES COMPUT SC, V5238, P294
   Kaur A., 2012, International Journal of Advancements in Research and Technology, V1, P1
   Khalek SA, 2011, P 2011 26 IEEE ACM I
   Kim J.S., 2006, P ISSTA 2006 WORKSH
   Knight JC, 1997, 4 NASA LANGL FORM ME
   Kossak Felix, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P184, DOI 10.1007/978-3-319-05843-6_14
   Kossak F, 2016, LECT NOTES COMPUT SC, V9675, P213, DOI 10.1007/978-3-319-33600-8_13
   Kramer J, 2007, COMMUN ACM, V50, P37
   Krishnamurthi S, 2008, P 16 ACM SIGSOFT INT
   Lamport L, 2005, LECT NOTES COMPUT SC, V3725, P162
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Lamport L, 2009, LECT NOTES COMPUT SC, V5684, P36, DOI 10.1007/978-3-642-03466-4_2
   Larsen PG, 2010, TR201002
   Larsen PG, 2010, P 2010 8 IEEE INT C
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Liu X, 1997, P 21 INT COMP SOFTW
   Malik P, 2005, LECT NOTES COMPUT SC, V3455, P65
   Maoz S, 2011, LECT NOTES COMPUTER, V6981
   Marinov D., 2002, FME 2002: Formal Methods-Getting IT Right. International Symposium of Formal Methods Europe (Lecture Notes in Computer Science Volume 2391), P234
   Mashkoor A, 2015, 2015 IEEE 16 INT S H
   Mashkoor A, 2010, P 2010 18 IEEE INT R
   Mashkoor A., 2015, LECT NOTES BUSINESS, V200, P120, DOI DOI 10.1007/978-3-319-13251-8_
   Mashkoor A, 2017, SOFTW SYST MODEL, V16, P789, DOI 10.1007/s10270-016-0514-4
   Mashkoor A, 2016, SOFTWARE QUAL J, V24, P571, DOI 10.1007/s11219-015-9288-0
   Mashkoor A, 2016, IEEE EMBED SYST LETT, V8, P14, DOI 10.1109/LES.2015.2494459
   Mashkoor A, 2011, REQUIR ENG, V16, P191, DOI 10.1007/s00766-011-0120-5
   Matos PJ, 2008, LECT NOTES COMPUT SC, V5238, P346
   Mcgibbon T, 1997, TECHNICAL REPORT
   Mentre David, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P238, DOI 10.1007/978-3-642-30885-7_17
   Mery D, 2011, P 2 S INF COMM TECHN
   Merz S, 2008, MONOGR THEOR COMPUT, P401, DOI 10.1007/978-3-540-74107-7_8
   Milhau J, 2010, LECT NOTES COMPUT SC, V6396, P245, DOI 10.1007/978-3-642-16265-7_18
   Miller SP, 1996, 3 AMAST WORKSH REAL
   Miller SP, 1998, P 2 IEEE WORKSH IND
   Mirian-HosseinAbadi S-H, 2002, P IR COMP SOC ANN C
   Mukherjee P, 2000, P 2 VDM WORKSH
   Newcombe C, 2015, COMMUN ACM, V58, P66, DOI 10.1145/2699417
   Newcombe C, 2014, LECT NOTES COMPUT SC, V8477, P25, DOI 10.1007/978-3-662-43652-3_3
   Nipkow T., 2002, ISABELLE HOL PROOF A, DOI DOI 10.1007/3-540-45949-9
   Oda T, 2015, P 3 FME WORKSH FORM
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Paige RR, 2005, LECT NOTES COMPUT SC, V3771, P109
   Pandey S.K., 2013, International Journal of Computer Applications, P7
   Plagge D, 2007, LECT NOTES COMPUT SC, V4591, P480
   Ponsard Christophe, 2006, REMO2V
   Ramananandro T, 2008, FORM ASP COMPUT, V20, P21, DOI 10.1007/s00165-007-0058-z
   Randolph A, 2013, LECT NOTES COMPUT SC, V8187, P184, DOI 10.1007/978-3-642-41010-9_13
   Rehm J., 2010, International Journal on Software Tools for Technology Transfer, V12, P39, DOI 10.1007/s10009-009-0130-5
   Rivera V, 2014, P 29 ANN ACM S APPL
   Robertson D, 2002, SCI COMPUT PROGRAM, V42, P29, DOI 10.1016/S0167-6423(01)00024-7
   Rupakheti CR, 2012, P 2012 IEEE INT C SO
   Satpathy M, 2007, LECT NOTES COMPUT SC, V4454, P95
   Savary A, 2015, LECT NOTES COMPUT SC, V9276, P132, DOI 10.1007/978-3-319-22969-0_10
   Schmalz M, 2011, LECT NOTES COMPUT SC, V6991, P633, DOI 10.1007/978-3-642-24559-6_42
   Schmid J, 2001, J UNIVERS COMPUT SCI, V7, P1068
   Schulte W, 2000, INTEGRATED FORMAL ME, P297
   Sifakis J, 1997, FEMSYS MUN GERM
   Singh N. K., 2013, USING EVENT B CRITIC
   Smith G, 2001, FORM METHOD SYST DES, V18, P249, DOI 10.1023/A:1011269103179
   Snook C, 2006, ACM T SOFTW ENG METH, V15, P92, DOI 10.1145/1125808.1125811
   Spivey J. M., 1989, The Z Notation: A Reference Manual
   SPIVEY JM, 1990, IEEE SOFTWARE, V7, P21, DOI 10.1109/52.57889
   Stidolph DC, 2003, LECT NOTES COMPUT SC, V2805, P170
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Verhoef M, 2006, LECT NOTES COMPUT SC, V4085, P147
   Wang X, 2014, P 11 WORKSH MOD DRIV
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Woodcock J, 2014, COMMUNICATING PROCES, P1
   Woodcock J. C. P., 1990, Software Engineering for Large Software Systems, P345
   WOODCOCK JCP, 1989, SOFTWARE ENG J, V4, P51, DOI 10.1049/sej.1989.0007
   Woodcock J, 2008, FORM ASP COMPUT, V20, P5, DOI 10.1007/s00165-007-0060-5
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
   Wright S, 2009, WORKSH INT MOD BAS F
   Xie G, 2012, 2012 7 INT C COMP CO
   Yu Y, 1999, LECT NOTES COMPUT SC, V1703, P54
   Zave P, 2015, FORM ASP COMPUT, V27, P239, DOI 10.1007/s00165-014-0302-2
NR 161
TC 16
Z9 17
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2350
EP 2379
DI 10.1002/spe.2634
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700011
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Suk, JH
   Lee, JY
   Jin, H
   Kim, IS
   Lee, DH
AF Suk, Jae Hyuk
   Lee, Jae-Yung
   Jin, Hongjoo
   Kim, In Seok
   Lee, Dong Hoon
TI <i>UnThemida</i>: Commercial obfuscation technique analysis with a fully
   obfuscated program
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE debugging; packer; reverse engineering; software implementation;
   software protection
AB The main goal of code obfuscation is to make software more difficult to reverse engineer. These techniques modify data structures and control flow while retaining the functionality of the original program. Although obfuscation is a useful method for protecting programs, it can also be used to protect malware. This raises concerns that malware could use code obfuscation to avoid detection by antivirus software. It is very difficult to analyze the functionality of obfuscated malware before it has been deobfuscated. Furthermore, commercial obfuscation tools allow malware authors to apply multiple obfuscation options simultaneously, and current deobfuscation techniques cannot handle this situation. In this study, we analyzed a well-known commercial obfuscation tool called Themida. We applied its many obfuscation options to a program and implemented a tool to recover the original code and data. We extracted features from obfuscated programs and analyzed their control flow. Our tool is based on these features and the control flow patterns and can identify whether Themida has been applied to the program and which obfuscation options have been used. Finally, we suggested a method for recovering the import address table of programs by using dynamic binary instrumentation. The proposed rules and algorithms can almost completely recover the APIs of programs even though they are hidden by obfuscation options provided by Themida.
C1 [Suk, Jae Hyuk; Lee, Jae-Yung; Jin, Hongjoo; Kim, In Seok; Lee, Dong Hoon] Korea Univ, Ctr Informat Secur Technol, Seoul, South Korea.
C3 Korea University
RP Lee, DH (corresponding author), Korea Univ, Ctr Informat Secur Technol, Seoul, South Korea.
EM donghlee@korea.ac.kr
OI Jin, Hongjoo/0000-0002-4651-0773
FU Ministry of Science, ICT and Future Planning [2014-6-00910]; Institute
   for Information & Communications Technology Promotion
FX Institute for Information & Communications Technology Promotion;
   Ministry of Science, ICT and Future Planning, Grant/Award Number:
   2014-6-00910
CR Anderson Ross., 2013, The Economics of Information Security and Privacy
   [Anonymous], 2011, P 18 ACM C COMP COMM
   [Anonymous], P 22 ACM SIGSAC C CO
   Bardin Sebastien, 2017, 2017 IEEE S SEC PRIV
   Blazytko T, SYNTIA BREAKING STAT
   Calvet J., 2012, ACM C COMP COMM SEC
   Collberg Christian, 1997, Technical report
   Debray S, 2010, 17 WORK C REV ENG WC
   ERNST MD, 2003, ICSE WORKSH DYN AN W
   Eyrolles N, 2016, P 2016 ACM WORKSH SO
   Guillot Y, 2010, J COMPUT VIROL HACKI, V6, P261, DOI 10.1007/s11416-009-0126-4
   Hwi Lee Jae, 2017, [Journal of The Korea Institute of Information Security and Cryptology, 정보보호학회논문지], V27, P67, DOI 10.13089/JKIISC.2017.27.1.67
   Kinder J, 2012, 2012 19 WORK C REV E
   Kruegel C, 2004, USENIX SEC S SAN DIE
   Lakhotia A, 2004, 4 IEEE INT WORKSH SO
   LCF AT, VMPROTECT 1 XX 2 XX
   LCF AT, THEM WINLICENSE 2 X
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Rolles R., 2009, 3 USENIX WORKSH OFF
   Spasojevi B, 2010, THESIS
   Udupa SK, 2005, 12 WORK C REV ENG PI
   Yadegari B, 2015, 2015 IEEE S SEC PRIV
   Yadegari B., 2015, P 22 ACM SIGSAC C CO
NR 23
TC 9
Z9 9
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2331
EP 2349
DI 10.1002/spe.2622
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700010
DA 2024-07-18
ER

PT J
AU Balalaie, A
   Heydarnoori, A
   Jamshidi, P
   Tamburri, DA
   Lynn, T
AF Balalaie, Armin
   Heydarnoori, Abbas
   Jamshidi, Pooyan
   Tamburri, Damian A.
   Lynn, Theo
TI Microservices migration patterns
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud-native architectures; cloud computing; microservices; migration
   patterns
AB Microservices architectures are becoming the defacto standard for building continuously deployed systems. At the same time, there is a substantial growth in the demand for migrating on-premise legacy applications to the cloud. In this context, organizations tend to migrate their traditional architectures into cloud-native architectures using microservices. This article reports a set of migration and rearchitecting design patterns that we have empirically identified and collected from industrial-scale software migration projects. These migration patterns can help information technology organizations plan their migration projects toward microservices more efficiently and effectively. In addition, the proposed patterns facilitate the definition of migration plans by pattern composition. Qualitative empirical research is used to evaluate the validity of the proposed patterns. Our findings suggest that the proposed patterns are evident in other architectural refactoring and migration projects and strong candidates for effective patterns in system migrations.
C1 [Balalaie, Armin; Heydarnoori, Abbas] Sharif Univ Technol, Dept Comp Engn, Azadi Ave, Tehran 1136511155, Iran.
   [Jamshidi, Pooyan] Univ South Carolina, Comp Sci & Engn Dept, Columbia, SC USA.
   [Tamburri, Damian A.] Politecn Milan, DEIB, Milan, Italy.
   [Lynn, Theo] Irish Ctr Cloud Comp & Commerce, Dublin, Ireland.
C3 Sharif University of Technology; University of South Carolina System;
   University of South Carolina Columbia; Polytechnic University of Milan
RP Heydarnoori, A (corresponding author), Sharif Univ Technol, Dept Comp Engn, Azadi Ave, Tehran 1136511155, Iran.
EM heydarnoori@sharif.edu
RI Tamburri, Damian Andrew/AAJ-2507-2021; Heydarnoori, Abbas/ABB-2493-2020;
   Lynn, Theo/AAE-8832-2020; Jamshidi, Pooyan/K-2848-2014
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Heydarnoori,
   Abbas/0000-0001-9785-2880; Lynn, Theo/0000-0001-9284-7580; Jamshidi,
   Pooyan/0000-0002-9342-0703
FU Irish Centre for Cloud Computing and Commerce, an Irish National
   Technology Centre - Enterprise Ireland; Irish Industrial Development
   Authority
FX The research work done by Pooyan Jamshidi and Theo Lynn in this paper
   was partially supported by the Irish Centre for Cloud Computing and
   Commerce, an Irish National Technology Centre funded by Enterprise
   Ireland and the Irish Industrial Development Authority.
CR Balalaie A, 2015, ADV SERV OR CLOUD CO
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   DOOLAN EP, 1992, SOFTWARE PRACT EXPER, V22, P173, DOI 10.1002/spe.4380220205
   Evans E., 2003, Domain-Driven Design
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   Gholami MF, 2014, SOFTW SYST MODEL, V13, P361, DOI 10.1007/s10270-011-0222-z
   Hammersley M., 2003, Ethnography
   Henderson-Sellers B., 2014, Situational Method Engineering
   Henderson-Sellers B, 2008, 19 AUSTR C SOFTW ENG
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jamshidi P, 2014, 10 INT WORKSH SERV O
   Jamshidi P, 2017, SOFTWARE PRACT EXPER, V47, P1159, DOI 10.1002/spe.2442
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Kaid L.L., 1989, MEASUREMENT COMMUNIC, P197
   Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001
   Krause L., 2015, Microservices: Patterns and Applications: Designing Fine-Grained Services by Applying Patterns
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Lewis James, 2014, Microservices
   Menychtas A, 2014, SCALABLE COMPUT-PRAC, V15, P131, DOI 10.12694/scpe.v15i2.980
   Mirbel I, 2006, REQUIR ENG, V11, P58, DOI 10.1007/s00766-005-0019-0
   Newman S., 2015, BUILDING MICROSERVIC
   Nygard M., 2007, Release It!: Design and Deploy Production-Ready Software
   Pahl C, 2016, P 6 INT C CLOUD COMP
   Pautasso C, 2017, IEEE SOFTWARE, V34, P91, DOI 10.1109/MS.2017.24
   Prat N, 1997, P 3 INT WORKSH REQ E
   Proper E, 2012, P 4 WORK C PRET 2012
   van der Hoek A, 2003, SOFTWARE PRACT EXPER, V33, P77, DOI 10.1002/spe.496
   van Gurp J, 2001, SOFTWARE PRACT EXPER, V31, P277, DOI 10.1002/spe.366
   Yin R., 1994, CASE STUDY RES DESIG
NR 32
TC 73
Z9 82
U1 3
U2 60
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2018
VL 48
IS 11
BP 2019
EP 2042
DI 10.1002/spe.2608
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GW3WX
UT WOS:000446841000005
DA 2024-07-18
ER

PT J
AU Rahman, MM
   Riyadh, RR
   Khaled, SM
   Satter, A
   Rahman, MR
AF Rahman, Md. Masudur
   Riyadh, Rashed Rubby
   Khaled, Shah Mostafa
   Satter, Abdus
   Rahman, Md. Rayhanur
TI MMRUC3: A recommendation approach of <i>move method</i> refactoring
   using coupling, cohesion, and contextual similarity to enhance software
   design
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cohesion; contextual similarity; coupling; feature envy code smell; move
   method refactoring
AB Placement of methods is one of the most important design activities for any object-oriented application in terms of coupling and cohesion. Due to method misplacement, the application becomes tightly coupled and loosely cohesive, reflecting inefficient design. Therefore, a feature envy code smell emerges from the application, as many methods use more features of other classes than its current class. Hence, development and maintenance time, cost, and effort are increased. To refactor the code smell and enhance the design quality, move method refactoring plays a significant role through grouping similar behaviors of methods. This is because the manual refactoring process is infeasible due to the necessity of huge time and most of the existing techniques consider only coupling-based and/or cohesion-based information of nonstatic entities (methods and attributes) for the recommendation. However, this article proposes an approach that uses contextual information, based on information retrieval techniques, along with dependency (coupling and cohesion)-based information of the application for the recommendation. In addition, the approach incorporates both static and nonstatic entities in the recommendation process. For validation, the approach is applied on seven well-known open source projects. The results of the experimental evaluation indicate that the proposed approach provides better results with an average precision of 18.91%, a recall of 69.91%, and an F-measure of 29.77% than the JDeodorant tool (a widely used eclipse plugin for refactorings). Moreover, this article establishes several relationships between the accuracy of the approach and project standards and sizes.
C1 [Rahman, Md. Masudur; Riyadh, Rashed Rubby; Khaled, Shah Mostafa; Satter, Abdus; Rahman, Md. Rayhanur] Univ Dhaka, Inst Informat Technol, Dhaka, Bangladesh.
C3 University of Dhaka
RP Rahman, MM (corresponding author), Univ Dhaka, Inst Informat Technol, Dhaka, Bangladesh.
EM bit0413@iit.du.ac.bd
OI Rahman, Md. Masudur/0000-0002-0931-1919; Rahman, Md
   Rayhanur/0000-0003-4980-7350
FU ICT Division, Government of the People's Republic of Bangladesh,
   Bangladesh [56.00.0000.028.33.065.16-747]
FX ICT Division, Government of the People's Republic of Bangladesh,
   Bangladesh, Grant/Award Number: 56.00.0000.028.33.065.16-747, 21-06-2016
   and 56.00.0000.028.33.065.16-747, 14-06-2016
CR Allamanis Miltiadis, 2015, P 2015 10 JOINT M FD
   [Anonymous], CORE JAVA 2
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 2017, Encyclopedia of Machine Learning and Data Mining, DOI DOI 10.1007/978-1-4899-7687-1964
   [Anonymous], JMOVW
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bavota G, 2010, PROC IEEE INT CONF S
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bavota Gabriele., P IEEEACM INT C AUTO, DOI DOI 10.1145/1858996.1859024
   Butler S, 2009, WORK CONF REVERSE EN, P31, DOI 10.1109/WCRE.2009.50
   de F Carneiro Glauco, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P128, DOI 10.1109/SBES.2010.21
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Deissenböck F, 2005, PROG COMPREHEN, P97, DOI 10.1109/WPC.2005.14
   Fokaefs Marios, 2007, 2007 IEEE International Conference on Software Maintenance, P519, DOI 10.1109/ICSM.2007.4362679
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gethers M, 2010, 2010 IEEE INT C SOFT
   Hamid A., 2013, International Journal of Advanced Science and Technology, V60, P25
   Host EW, 2009, LECT NOTES COMPUT SC, V5653, P294, DOI 10.1007/978-3-642-03013-0_14
   Kimura S, 2012, 2012 28 IEEE INT C S
   Liu H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P1, DOI 10.1109/SANER.2016.14
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marinescu R, 2010, EUR CON SFTWR MTNCE, P274, DOI 10.1109/CSMR.2010.44
   Martin Fowler., 1999, REFACTORING IMPROVIN
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Napoli C, 2013, 2013 7 INT C COMPL I
   Niwattanakul Suphakit, 2013, IMECS 2013 Proceedings of International Multiconference of Engineers and Computer Scientists, P380
   Oliveto R, 2011, P 33 INT C SOFTW ENG
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Papadimitriou Christos H, 2003, Encyclopedia of computer science, P260
   Ponisio L, 2006, TECHNICAL REPORT
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Sales V, 2013, WORK CONF REVERSE EN, P232, DOI 10.1109/WCRE.2013.6671298
   Satter A, 2016, 3 INT WORKSH CONC DI
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   Yamashita A, 2013, 2013 35 INT C SOFTW
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
NR 42
TC 5
Z9 5
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2018
VL 48
IS 9
BP 1560
EP 1587
DI 10.1002/spe.2591
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GP5RZ
UT WOS:000440932300003
DA 2024-07-18
ER

PT J
AU Lekidis, A
   Stachtiari, E
   Katsaros, P
   Bozga, M
   Georgiadis, CK
AF Lekidis, Alexios
   Stachtiari, Emmanouela
   Katsaros, Panagiotis
   Bozga, Marius
   Georgiadis, Christos K.
TI Model-based design of IoT systems with the BIP component framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Internet of things; model-based design; service-oriented architecture
ID INTERNET
AB The design of software for networked systems with nodes running an Internet of things operating system faces important challenges due to the heterogeneity of interacting things and the constraints stemming from the often limited amount of available resources. In this context, it is hard to build confidence that a design solution fulfills the application's requirements. This paper introduces a design flow for web service applications of the representational state transfer style that is based on a formal modeling language, the behaviour, interaction, priority (BIP) component framework. The proposed flow applies the principles of separation of concerns in a component-based design process that supports the modular design and reuse of model artifacts. The BIP tools for state-space exploration allow verifying qualitative properties for service responsiveness, ie, the timely handling of events. Moreover, essential quantitative properties are validated through statistical model checking of a stochastic BIP model. All properties are preserved in actual implementation by ensuring that the deployed code is consistent with the validated model. We illustrate the design of a representational state transfer sense-compute-control application for a Wireless Personal Area Network architecture with nodes running the Contiki operating system. The results validate qualitative and quantitative properties for the system and include the study of error behaviours.
C1 [Lekidis, Alexios; Stachtiari, Emmanouela; Katsaros, Panagiotis] Aristotle Univ Thessaloniki, Sch Informat, Thessaloniki 54124, Greece.
   [Bozga, Marius] Univ Grenoble Alpes, CNRS, VERIMAG, F-38000 Grenoble, France.
   [Georgiadis, Christos K.] Univ Macedonia, Dept Appl Informat, Thessaloniki 54006, Greece.
C3 Aristotle University of Thessaloniki; Communaute Universite Grenoble
   Alpes; Institut National Polytechnique de Grenoble; Universite Grenoble
   Alpes (UGA); Centre National de la Recherche Scientifique (CNRS);
   University of Macedonia
RP Katsaros, P (corresponding author), Aristotle Univ Thessaloniki, Sch Informat, Thessaloniki 54124, Greece.
EM katsaros@csd.auth.gr
RI GEORGIADIS, CHRISTOS Κ./AAM-7076-2021; Katsaros,
   Panagiotis/JBR-8825-2023; Lekidis, Alexios/AAJ-3401-2020
OI GEORGIADIS, CHRISTOS Κ./0000-0003-0897-9009; Katsaros,
   Panagiotis/0000-0002-4309-5295; Lekidis, Alexios/0000-0002-8243-7075
CR Abraham D, US Patent, Patent No. [7,657,612, 7657612]
   Antonopoulos C, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16060804
   Baccelli Emmanuel, 2013, 2013 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), P79, DOI 10.1109/INFCOMW.2013.6970748
   Basagiannis S, 2010, COMPUT SECUR, V29, P16, DOI 10.1016/j.cose.2009.08.003
   Basu A., 2013, LECT NOTES COMPUTER, P314
   Basu A, 2011, IEEE SOFTWARE, V28, P41, DOI 10.1109/MS.2011.27
   Beal J, 2015, COMPUTER, V48, P22, DOI 10.1109/MC.2015.261
   Benini L, 1998, P 1998 INT S LOW POW
   Bertran B, 2014, SCI COMPUT PROGRAM, V79, P39, DOI 10.1016/j.scico.2012.04.001
   Bliudze S, 2017, SOFTWARE PRACT EXPER, V47, P1801, DOI 10.1002/spe.2495
   Bouajjani A, 2017, VERIFYING ROBUSTNESS, P170
   Cao Q., 2008, P 6 ACM C EMB NETW S
   Castellani Angelo P., 2010, 2010 8th IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops), P678, DOI 10.1109/PERCOMW.2010.5470520
   Cherrier S, 2014, MOBILE NETW APPL, V19, P18, DOI 10.1007/s11036-013-0481-8
   Cinque M, 2012, IEEE T COMPUT, V61, P870, DOI 10.1109/TC.2011.96
   Colitti Walter., 2011, Integrating Wireless Sensor Networks with The Web
   Desai A, 2013, P 34 ACM SIGPLAN C P
   Deshpande T, 2011, 2011 IEEE 13 INT S H
   Despaux F, 2015, MODELLING EVALUATION
   Deze Zeng, 2011, Journal of Communications, V6, P424, DOI 10.4304/jcm.6.6.424-438
   Duhart C, 2016, INT J WIREL INF NETW, V23, P173, DOI 10.1007/s10776-016-0316-1
   Dunkels A, 2004, CONF LOCAL COMPUT NE, P455
   Eriksson J., 2009, P 2 INT C SIM TOOLS, P1
   Fernandes E, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P531
   Glombitza N., 2010, P 2010 ICSE WORKSHOP, P2
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Halbwachs Nicolas., 1994, Algebraic Methodology and Software Technology (AMAST'93), P83, DOI DOI 10.1007/978-1-4471-3227-1_8
   Halcu I, 2015, 7 INT C EL COMP ART
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Hong K, 2013, P 2 ACM SIGCOMM WORK, P15, DOI DOI 10.1145/2491266.2491270
   Jan M, 2012, SOFTWARE PRACT EXPER, V42, P1467, DOI 10.1002/spe.1143
   Kovatsch M., 2011, 2011 IEEE 8th International Conference on Mobile Ad-Hoc and Sensor Systems, P855, DOI 10.1109/MASS.2011.100
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Lekidis A, 2015, 10 INT S IND EMB SYS
   Lekidis A, 2015, 2015 SENS APPL S SAS
   Lekidis A, 2015, THESIS
   Montenegro G., 2007, 4944 RFC, P1
   Nastic S, 2013, IEEE INT CONF SERV, P53, DOI 10.1109/SOCA.2013.48
   Nouri A, 2014, 2014 INT C RUNT VER
   Nouri A, 2016, ACM T EMBED COMPUT S, V15, DOI 10.1145/2885498
   Nouri A, 2015, INT J SOFTW TOOLS TE, V17, P171, DOI 10.1007/s10009-014-0313-6
   Patel P, 2015, J SYST SOFTWARE, V103, P62, DOI 10.1016/j.jss.2015.01.027
   Patino MAN, 2016, THESIS
   Poroor J, 2012, P 1 INT C SEC INT TH
   Said NB, 2010, 7 INT S LEV APPL FOR
   Schantz RE, 2006, SOFTWARE PRACT EXPER, V36, P1189, DOI 10.1002/spe.761
   Schor L., 2009, P 1 ACM WORKSH EMB S
   Shelby Z., 2014, The Constrained Application Protocol (CoAP), DOI [DOI 10.17487/RFC7252, 10.17487/RFC7252, 10.17487/rfc7252]
   Shimizu R., 2011, Proceeding of the 2nd workshop on Software engineering for sensor network applications - SESENA'11, P31, DOI [DOI 10.1145/1988051, 10.1145/1988051.1988058, DOI 10.1145/1988051.1988058]
   Sifakis J, 2012, FOUND TRENDS ELECTRO, V6, P293, DOI 10.1561/1000000034
   Song Z., 2014, Internet of Things: Challenges and Opportunities, P75
   Stachtiari E, 2014, IEEE 8 INT S SERV OR
   Stankovic J. A., 2004, Proceedings of the 2nd International Conference on Mobile Systems, Applications and Services (MobiSys '04), P125, DOI DOI 10.1145/990064.990081
   Sugihara R, 2008, ACM T SENSOR NETWORK, V4, DOI 10.1145/1340771.1340774
   Taherkordi A, 2010, 2010 INT C DISTR COM
   Testa A, 2012, 8 INT C SIGN IM TECH
   Xu S, 2016, 2016 IEEE INT C SOFT
NR 58
TC 11
Z9 11
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2018
VL 48
IS 6
BP 1167
EP 1194
DI 10.1002/spe.2568
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF5UQ
UT WOS:000432033700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Petri, M
   Moffat, A
AF Petri, Matthias
   Moffat, Alistair
TI Compact inverted index storage using general-purpose compression
   libraries
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE index compression; inverted index; web search
AB Efficient storage of large inverted indexes is one of the key technologies that support current web search services. Here we re-examine mechanisms for representing document-level inverted indexes and within-document term frequencies, including comparing specialized methods developed for this task against recent fast implementations of general-purpose adaptive compression techniques. Experiments with the Gov2-URL collection and a large collection of crawled news stories show that standard compression libraries can provide compression effectiveness as good as or better than previous methods, with decoding rates only moderately slower than reference implementations of those tailored approaches. This surprising outcome means that high-performance index compression can be achieved without requiring the use of specialized implementations.
C1 [Petri, Matthias; Moffat, Alistair] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Petri, M (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic 3010, Australia.
EM Matthias.Petri@unimelb.edu.au
FU Australian Research Council Discovery Projects Scheme [DP140103256]
FX Australian Research Council Discovery Projects Scheme, Grant/Award
   Number: DP140103256
CR Anh VN, 2005, INFORM RETRIEVAL, V8, P151, DOI 10.1023/B:INRT.0000048490.99518.5c
   Anh VN, 1998, P ACM INT C RES DEV
   Anh VN, 2006, P S STRING PROC INF
   Anh VN, 2010, SOFTWARE PRACT EXPER, V40, P131, DOI 10.1002/spe.948
   Bookstein A, 1997, ACM T INFORM SYST, V15, P254, DOI 10.1145/256163.256166
   Dimopoulos C., 2013, P 6 ACM INT C WEB SE
   Ding S, 2011, P ACM INT C RES DEV
   Duda J., 2013, Asymmetric numeral systems: entropy coding combining speed of Huffman coding with compression rate of arithmetic coding
   ELIAS P, 1974, J ACM, V21, P246, DOI 10.1145/321812.321820
   Fraenkel A., 1985, COMBINATORIAL ALGORI, V12, P169
   Gog S, 2014, P S EXP EFF ALG SEA
   Lemire D., 2015, Software: Practice and Experience, V45, P1, DOI 10.1002/spe.2203
   Moffat A, 2000, INFORM RETRIEVAL, V3, P25, DOI 10.1023/A:1013002601898
   Moffat A, 2017, P ACM INT C INF KNOW
   Moffat A, 1992, P ACM INT C RES DEV
   Ottaviano G, 2014, P ACM INT C RES DEV
   Ottaviano G, 2015, 8 INT C WEB SEARCH D
   Pibiri GE, 2017, ACM T INFORM SYST, V36, DOI 10.1145/3052773
   Trotman A, 2003, INFORM RETRIEVAL, V6, P5, DOI 10.1023/A:1022949613039
   Trotman A, 2014, P 2014 AUSTR DOC COM
   Vigna S, 2013, P 6 ACM INT C WEB SE
   Wang J, 2017, P INT C MAN DAT SIGM
   Wang JG, 2017, PROC VLDB ENDOW, V10, P853, DOI 10.14778/3090163.3090164
   Williams HE, 1999, COMPUT J, V42, P193, DOI 10.1093/comjnl/42.3.193
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   Yan H, 2009, P ACM INT C RES DEV
   Zhang J., 2008, P 17 INT C WORLD WID
   Zhang Z, 2016, P ACM INT C RES DEV
   Zukowski M., 2006, P 22 INT C DAT ENG I, P59
NR 29
TC 12
Z9 12
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2018
VL 48
IS 4
BP 974
EP 982
DI 10.1002/spe.2556
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FY3VV
UT WOS:000426749900010
OA Green Published
DA 2024-07-18
ER

PT J
AU Brisaboa, NR
   Cao, R
   Paramá, JR
   Silva-Coira, F
AF Brisaboa, Nieves R.
   Cao, Ricardo
   Parama, Jose R.
   Silva-Coira, Fernando
TI Scalable processing and autocovariance computation of big functional
   data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autocovariance function; big data; compact representation; efficient
   computation; functional data; R package
ID COMPRESSION; ACCESS
AB This paper presents 2 main contributions. The first is a compact representation of huge sets of functional data or trajectories of continuous-time stochastic processes, which allows keeping the data always compressed even during the processing in main memory. It is oriented to facilitate the efficient computation of the sample autocovariance function without a previous decompression of the data set, by using only partial local decoding. The second contribution is a new memory-efficient algorithm to compute the sample autocovariance function. The combination of the compact representation and the new memory-efficient algorithm obtained in our experiments the following benefits. The compressed data occupy in the disk 75% of the space needed by the original data. The computation of the autocovariance function used up to 13 times less main memory, and run 65% faster than the classical method implemented, for example, in the R package.
C1 [Brisaboa, Nieves R.; Parama, Jose R.; Silva-Coira, Fernando] Univ A Coruna, Fac Informat, Dept Comp Sci, LBD Grp,CITIC, Campus Elvina, La Coruna 15071, Spain.
   [Cao, Ricardo] Univ A Coruna, Fac Informat, Dept Math, MODES Grp,CITIC,ITMATI, Campus Elvina, La Coruna, Spain.
C3 Universidade da Coruna; Universidade da Coruna
RP Paramá, JR (corresponding author), Univ A Coruna, Fac Informat, Dept Comp Sci, LBD Grp,CITIC, Campus Elvina, La Coruna 15071, Spain.
EM jose.parama@udc.es
RI Silva-Coira, Fernando/M-7101-2018; Cao, Ricardo/HRB-4587-2023; Parama,
   Jose R./L-4793-2014; Cao, Ricardo/A-1621-2008; Brisaboa, Nieves
   R./S-4744-2016
OI Silva-Coira, Fernando/0000-0003-1341-3368; Parama, Jose
   R./0000-0002-8727-0980; Cao, Ricardo/0000-0001-8304-687X; Brisaboa,
   Nieves R./0000-0001-8025-3048
FU Ministerio de Economia y Competitividad (PGE) [TIN2016-78011-C4-1-R,
   MTM2014-52876-R, TIN2013-46238-C4-3-R]; Ministerio de Economia y
   Competitividad (FEDER) [TIN2016-78011-C4-1-R, MTM2014-52876-R,
   TIN2013-46238-C4-3-R]; Centro para el desarrollo Tecnologico e
   Industrial MINECO [IDI-20141259, ITC-20151247, ITC-20151305,
   ITC-20161074]; Xunta de Galicia under Grupos de Referencia Competitiva
   [ED431C-2016-015]; Xunta de Galicia-Conselleria de Cultura, Educacion e
   Ordenacion Universitaria under Redes [R2014/041, ED341D R2016/045];
   Xunta de Galicia-Conselleria de Cultura, Educacion e Ordenacion
   Universitaria under Centro Singular de Investigacion de Galicia
   [ED431G/01]
FX Ministerio de Economia y Competitividad (PGE and FEDER), Grant/Award
   Number: TIN2016-78011-C4-1-R, MTM2014-52876-R, TIN2013-46238-C4-3-R;
   Centro para el desarrollo Tecnologico e Industrial MINECO, Grant/Award
   Number: IDI-20141259, ITC-20151247, ITC-20151305, and ITC-20161074;
   Xunta de Galicia (co-founded with FEDER) under Grupos de Referencia
   Competitiva, Grant/Award Number: ED431C-2016-015; Xunta de
   Galicia-Conselleria de Cultura, Educacion e Ordenacion Universitaria
   (co-founded with FEDER) under Redes, Grant/Award Number: R2014/041,
   ED341D R2016/045; Xunta de Galicia-Conselleria de Cultura, Educacion e
   Ordenacion Universitaria (co-founded with FEDER) under Centro Singular
   de Investigacion de Galicia, Grant/Award Number: ED431G/01
CR [Anonymous], 2012, MEMORY DATA MANAGEME
   Azhar S, 1994, P DAT COMPR C DCC 94
   BLACK F, 1973, J POLIT ECON, V81, P637, DOI 10.1086/260062
   Brisaboa NR, 2007, INFORM RETRIEVAL, V10, P1, DOI 10.1007/s10791-006-9001-9
   Brisaboa NR, 2013, INFORM PROCESS MANAG, V49, P392, DOI 10.1016/j.ipm.2012.08.003
   Brisaboa NR, 2008, P INT ACM SIGIR C RE
   Burtscher M, 2010, P DAT COMPR C DCC 10
   Burtscher M, 2009, IEEE T COMPUT, V58, P18, DOI 10.1109/TC.2008.131
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   DeWitt David J, 1984, P ACM SIGMOD INT C M
   Dudoladov S, 2015, P ACM SIGMOD INT C M
   Einstein A, 1906, ANN PHYS-BERLIN, V19, P371
   ELIAS P, 1975, IEEE T INFORM THEORY, V21, P194, DOI 10.1109/TIT.1975.1055349
   Engelson V, 2000, P DAT COMPR C DCC 00
   Fariña A, 2014, INFORM PROCESS MANAG, V50, P857, DOI 10.1016/j.ipm.2014.07.002
   FERRATY F, 2006, SPR S STAT, P1
   Fout N, 2012, IEEE T VIS COMPUT GR, V18, P2295, DOI 10.1109/TVCG.2012.194
   GOLOMB SW, 1966, IEEE T INFORM THEORY, V12, P399, DOI 10.1109/TIT.1966.1053907
   Gonzalez R, 2005, POST P VOL WORKSH EF
   Grossi R, 2003, P S DISCR ALG SODA 0
   Horvath L., 2012, Inference for functional data with applications
   HUFFMAN DA, 1952, P IRE, V40, P1098, DOI 10.1109/JRPROC.1952.273898
   Hulll J, 2009, OPTIONS FUTURES OTHE
   Kane MJ, 2013, J STAT SOFTW, V55, P1
   Klein ST, 2016, DISCRETE APPL MATH, V212, P115, DOI 10.1016/j.dam.2015.11.003
   Kulekci MO, 2014, P DAT COMPR C DCC 14
   Liebchen T, 2004, P DAT COMPR C DCC 04
   Lindstrom P, 2006, IEEE T VIS COMPUT GR, V12, P1245, DOI 10.1109/TVCG.2006.143
   López-Granados F, 2008, WEED RES, V48, P28, DOI 10.1111/j.1365-3180.2008.00598.x
   Mitchell J.L., 1996, MPEG VIDEO COMPRESSI
   Muckell J, 2011, P INT C COMP GEOSP R
   Munro JI, 1996, P C FDN SOFTW TECHN
   Navarro G, 2016, COMPACT DATA STRUCTURES: A PRACTICAL APPROACH, P1, DOI 10.1017/CBO9781316588284
   Okanohara D, 2007, P WORKSH ALG ENG EXP
   Plattner H, 2009, P ACM SIGMOD INT C M
   Ramsay J.O., 2005, FUNCTIONAL DATA ANAL
   Ratanaworabhan Paruj, 2006, P DAT COMPR C DCC 06
   Rice R.F., 7922 JET PROP LAB
   Schelter S, 2013, P ACM INT C INF KNOW
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Teuhola J, 2011, INFORM PROCESS MANAG, V47, P742, DOI 10.1016/j.ipm.2010.11.006
   WALLACE GK, 1991, COMMUN ACM, V34, P30, DOI 10.1145/103085.103089
   Williams HE, 1999, COMPUT J, V42, P193, DOI 10.1093/comjnl/42.3.193
   You Y, 2008, P INT C COMM
   Zukowski M, 2006, P INT C DAT ENG ICDE
NR 45
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2018
VL 48
IS 1
BP 123
EP 140
DI 10.1002/spe.2524
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FP4WK
UT WOS:000417617500007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Chondros, N
   Roussopoulos, M
AF Chondros, Nikos
   Roussopoulos, Mema
TI Developing IntegrityCatalog, a software system for managing
   integrity-related metadata in digital repositories
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE digital repositories; integrity checking; software system
ID EFFICIENT; SECURE
AB Digital repositories must periodically check the integrity of stored objects to assure users of their correctness. Prior solutions calculate integrity metadata and require the repository to store it alongside the actual data objects. To safeguard and detect damage to this metadata, prior solutions rely on widely visible media (unaffiliated third parties) to store and provide back digests of the metadata to verify it is intact. However, they do not address recovery of the integrity metadata in case of damage or adversarial attack. We introduce IntegrityCatalog, a novel software system that can be integrated into any digital repository. It collects all integrity-related metadata in a single component and treats them as first class objects, managing both their integrity and their preservation. We introduce a treap-based persistent authenticated dictionary managing arbitrary length key/value pairs, which we use to store all integrity metadata, accessible simply by object name. Additionally, IntegrityCatalog is a distributed system that includes a network protocol that manages both corruption detection and preservation of this metadata, using administrator-selected network peers with 2 possible roles. Verifiers store and offer attestations on digests and have minimal storage requirements, while preservers efficiently synchronize a complete copy of the catalog to assist in recovery in case of a detected catalog compromise on the local system. We present our approach in developing the prototype implementation, measure its performance experimentally, and demonstrate its effectiveness in real-world situations. We believe the implementation techniques of our open-source IntegrityCatalog will be useful in the construction of next-generation digital repositories.
C1 [Chondros, Nikos; Roussopoulos, Mema] Univ Athens, Dept Informat & Telecommun, Athens 15784, Greece.
C3 National & Kapodistrian University of Athens
RP Roussopoulos, M (corresponding author), Univ Athens, Dept Informat & Telecommun, Athens 15784, Greece.
EM mema@di.uoa.gr
OI Chondros, Nikos/0000-0003-4968-9606
FU ERC [279237]; European Research Council; Greek General Secretariat for
   Research and Technology; European Research Council (ERC) [279237]
   Funding Source: European Research Council (ERC)
FX ERC Starting, Grant/Award Number: 279237; European Research Council;
   Greek General Secretariat for Research and Technology
CR Adya A., 2002, P 5 S OP SYST DES IM
   Anagnostopoulos A., 2001, INFORM SECURITY, P379, DOI DOI 10.1007/3-540-45439-X
   [Anonymous], 2016, VARIOUS EUROPEAN OP
   [Anonymous], 2013, VARIOUS CLUEWEB12 D
   [Anonymous], P FAST 02 C FIL STOR
   Aragon CR, 1989, 30 ANN S FDN COMP SC
   Austern MH, 2003, SOFTWARE PRACT EXPER, V33, P1273, DOI 10.1002/spe.564
   Chang HT, 2014, J SYST SOFTWARE, V93, P102, DOI 10.1016/j.jss.2014.02.057
   Chen LX, 2013, FUTURE GENER COMP SY, V29, P1709, DOI 10.1016/j.future.2012.01.004
   CLARKE I, 2000, INT WORKSH DES ISS A
   Cox LP, 2003, P 9 ACM S OP SYST PR, V37
   Cox LP, 2002, P 5 ACM S OP SYST DE
   Crosby SA, 2009, THESIS
   Crosby SA, 2009, LECT NOTES COMPUT SC, V5789, P671, DOI 10.1007/978-3-642-04444-1_41
   Dabek F., 2001, Operating Systems Review, V35, P202, DOI 10.1145/502059.502054
   Driscoll JR, 1986, ACM S THEOR COMP STO
   ETSI, 2009, 101903 ETSI TS
   FIPS, 2002, SECURE HASH STANDARD
   Gondrom T, 2007, 4998 RFC ERS
   Goodson GR, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P135
   Haber S, 2006, HPL200654 HEWL PACK
   Haeberlen A, 2005, NSDI USENIX
   HARRISON MC, 1971, COMMUN ACM, V14, P777, DOI 10.1145/362919.362934
   Hasan Ragib, 2009, ACM Transactions on Storage, V5, DOI 10.1145/1629080.1629082
   He J, 2012, J COMPUT SYST SCI, V78, P1345, DOI 10.1016/j.jcss.2011.12.018
   KARP RM, 1987, IBM J RES DEV, V31, P249, DOI 10.1147/rd.312.0249
   Kubiatowicz J, 2000, ACM SIGPLAN NOTICES, V35, P190, DOI 10.1145/384264.379239
   Lillibridge M, 2003, USENIX ANN TECHN C G
   Maniatis P, 2002, P 11 USENIX SEC S SE
   Maniatis P, 2003, P 9 ACM S OP SYST PR, V37
   Menezes A., 1996, Cryptography
   Merkle Ralph C., 1987, CRYPTO
   Muniswamy-Reddy Kiran-Kumar., 2010, Proceedings of the 8th USENIX Conference on File and Storage Technologies, FAST'10, P15
   Nakamoto S, 2008, BITCOIN PEER TO PEER, DOI DOI 10.1007/S10838-008-9062-0
   Naor M, 1989, P 21 ANN S THEOR COM
   Papamanthou C, 2016, ALGORITHMICA, V74, P664, DOI 10.1007/s00453-014-9968-3
   Parrish A, 1998, SOFTWARE PRACT EXPER, V28, P1559, DOI 10.1002/(SICI)1097-024X(19981225)28:15<1559::AID-SPE214>3.0.CO;2-7
   Rabin M. O., 1981, Fingerprinting by random polynomials
   Rosenthal David., 2013, Int'l Journal of Digital Curation, V8, P107, DOI [DOI 10.2218/IJDC.V8I1.248, 10.2218/ijdc.v8i1.248]
   Rosenthal DavidSH., 2012, The economics of long-term digital storage
   Samanthula BK, 2015, INFORM SYST, V48, P196, DOI 10.1016/j.is.2013.08.004
   Schwarz TSJ, 2006, 26 IEEE INT C DISTR
   Seidel R, 1996, ALGORITHMICA, V16, P464, DOI 10.1007/BF01940876
   Shah MehulA., 2008, IACR Cryptology ePrint Archive, V2008, P186
   Song S, 2007, ACM INT C P SERIES, V228
   Subbiah A., 2005, STORAGESS 05, P84
   WALDMAN M, 2000, P 9 USENIX SEC S AUG
   Wang C, 2012, IEEE T SERV COMPUT, V5, P220, DOI 10.1109/TSC.2011.24
   Williams HE, 2001, SOFTWARE PRACT EXPER, V31, P925, DOI 10.1002/spe.394
   Wong WHL, 2006, SOFTWARE PRACT EXPER, V36, P1467, DOI 10.1002/spe.730
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Worku SG, 2014, COMPUT ELECTR ENG, V40, P1703, DOI 10.1016/j.compeleceng.2013.10.004
   Xiao D, 2012, COMPUT SECUR, V31, P192, DOI 10.1016/j.cose.2011.12.005
   Yu Y, 2014, FUTURE GENER COMP SY, V30, P127, DOI 10.1016/j.future.2013.05.005
   Zhang Y., 2010, FAST, P29
   Zhu Y, 2012, J SYST SOFTWARE, V85, P1083, DOI 10.1016/j.jss.2011.12.024
   Zlotnick F, 2006, C HIGH SPEED COMP LA
   Zobel J, 1993, P 4 AUSTR DAT C ADC
NR 58
TC 1
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2018
VL 48
IS 1
BP 45
EP 64
DI 10.1002/spe.2515
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FP4WK
UT WOS:000417617500003
DA 2024-07-18
ER

PT J
AU de Almeida, DS
   Hara, CS
   Ciferri, RR
   Ciferri, CDD
AF de Almeida, Dayse Silveira
   Hara, Carmem Satie
   Ciferri, Ricardo Rodrigues
   de Aguiar Ciferri, Cristina Dutra
TI An asynchronous collaborative reconciliation model based on data
   provenance
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE asynchronous collaboration; conflict resolution; data integration; data
   provenance; data sharing; multiuser reconciliation
ID INTEGRATION; SYSTEM
AB Reconciliation is the process of providing a consistent view of the data imported from different sources. Despite some efforts reported in the literature for providing data reconciliation solutions with asynchronous collaboration, the challenge of reconciling data when multiple users work asynchronously over local copies of the same imported data has received less attention. In this paper, we propose AcCORD, an asynchronous collaborative data reconciliation model based on data provenance. AcCORD is innovative because it supports applications in which all users are required to agree on the data values to provide a single consistent view to all of them, as well as applications that allow users to disagree on the data values to keep in their local copies but promote collaboration by sharing integration decisions. We also introduce a decision integration propagation method that keeps users from taking inconsistent decisions over data items present in several sources. Further, different policies based on data provenance are proposed for solving conflicts among multiusers' integration decisions. Our experimental analysis shows that AcCORDis efficient and effective. It performs well, and the results highlight its flexibility by generating either a single integrated view or different local views. We have also conducted interviews with end users to analyze the proposed policies and feasibility of the multiuser reconciliation. They provide insights with respect to acceptability, consistency, correctness, time-saving, and satisfaction. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [de Almeida, Dayse Silveira; de Aguiar Ciferri, Cristina Dutra] Univ Sao Paulo, Inst Ciencias Matemat & Comp, Sao Carlos, SP, Brazil.
   [Hara, Carmem Satie] Univ Fed Parana, Dept Informat, Curitiba, PR, Brazil.
   [Ciferri, Ricardo Rodrigues] Univ Fed Sao Carlos, Dept Comp, Sao Carlos, SP, Brazil.
C3 Universidade de Sao Paulo; Universidade Federal do Parana; Universidade
   Federal de Sao Carlos
RP Ciferri, CDD (corresponding author), Univ Sao Paulo, Inst Ciencias Matemat & Comp, Sao Carlos, SP, Brazil.
EM cdac@icmc.usp.br
RI Hara, Carmem S/G-1495-2012; de Almeida, Dayse S/Q-4882-2018
OI de Almeida, Dayse S/0000-0003-2718-5132; Hara,
   Carmem/0000-0002-0674-9229; Aguiar, Cristina/0000-0002-7618-1405
FU FAPESP; CNPq; CAPES
FX FAPESP, CNPq, and CAPES
CR Abadi D.J., 2009, B IEEE COMPUTER SOC, V32, P3
   [Anonymous], 2012, P 9 USENIX C NETWORK
   Archer DW, 2009, P 1 WORKSH THEOR PRA
   Bhattacharjee Anupam, 2012, International Journal of Information and Decision Sciences, V4, P167, DOI 10.1504/IJIDS.2012.047071
   Bleiholder J, 2006, P IJCAI WORKSH INF W, P1
   Bleiholder J, 2008, ACM COMPUT SURV, V41, DOI 10.1145/1456650.1456651
   Buneman P, 2006, LECT NOTES COMPUT SC, V4145, P162, DOI 10.1007/11890850_17
   Buneman Peter, 2006, Proc. of the 2006 ACM SIGMOD international conference on Management of data, P539, DOI DOI 10.1145/1142473.1142534
   Cao Y, 2013, P 2013 ACM SIGMOD IN, P565
   Cecchin F, 2010, LECT NOTES COMPUT SC, V6263, P297, DOI 10.1007/978-3-642-15105-7_24
   Cheney J, 2007, FOUND TRENDS DATABAS, V1, P379, DOI 10.1561/1900000006
   Doan A, 2012, PRINCIPLES OF DATA INTEGRATION, P1, DOI 10.1016/B978-0-12-416044-6.00001-6
   Edwards W. K., 1997, Proceedings of the ACM Symposium on User Interface Software and Technology. 10th Annual Symposium. UIST '97, P119, DOI 10.1145/263407.263530
   Fuentes-Lorenzo D, 2015, SOFTWARE PRACT EXPER, V45, P1161, DOI 10.1002/spe.2267
   Green T.J., 2007, VLDB, P675
   Halevy Alon, 2006, Proceedings of the 32nd international conference on Very large data bases (2006), P9
   Hossain MS, 2014, COMPUT HUM BEHAV, V30, P485, DOI 10.1016/j.chb.2013.06.019
   Ives Z.G., 2005, C INNOVATIVE DATA SY, P107
   Ives ZG, 2008, SIGMOD REC, V37, P26, DOI 10.1145/1462571.1462577
   Jing Han, 2011, Proceedings 2011 6th International Conference on Pervasive Computing and Applications (ICPCA 2011), P363, DOI 10.1109/ICPCA.2011.6106531
   Karvounarakis G, 2013, ACM T DATABASE SYST, V38, DOI 10.1145/2500127
   Kearse M, 2012, BIOINFORMATICS, V28, P1647, DOI 10.1093/bioinformatics/bts199
   Kermarrec A.-M., 2001, PODC 2001 P 20 ANN A, P210
   Köpcke H, 2010, PROC VLDB ENDOW, V3, P484
   Kot Lucja., 2009, PVLDB, V2, P193
   Lacroix Z, 2002, IEEE T INF TECHNOL B, V6, P123, DOI 10.1109/TITB.2002.1006299
   Larsen B, 2009, J AM SOC INF SCI TEC, V60, P646, DOI 10.1002/asi.21028
   Mahmood T, 2013, COMPUT STAND INTER, V35, P6, DOI 10.1016/j.csi.2012.02.004
   Marinho A, 2012, CONCURR COMP-PRACT E, V24, P1513, DOI 10.1002/cpe.1870
   Masud M, 2011, DATA KNOWL ENG, V70, P307, DOI 10.1016/j.datak.2010.12.003
   Nguyen HQ, 2011, J SYST SOFTWARE, V84, P63, DOI 10.1016/j.jss.2010.07.055
   Palopoli L, 2003, SOFTWARE PRACT EXPER, V33, P847, DOI 10.1002/spe.531
   Pierce BC, 2004, MSCIS0342 U PENNS
   Saito Y, 2005, ACM COMPUT SURV, V37, P42, DOI 10.1145/1057977.1057980
   Satie Hara Carmem, 2013, In Search of Elegance in the Theory and Practice of Computation. Essays Dedicated to Peter Buneman: LNCS 8000, P339, DOI 10.1007/978-3-642-41660-6_18
   Silveira de Almeida Dayse, 2015, 17th International Conference on Enterprise Information Systems (ICEIS 2015). Proceedings, P184
   Taylor N.E., 2006, ACM SIGMOD C MANAGEM, P13
   Taylor NE, 2010, PROC INT CONF DATA, P40, DOI 10.1109/ICDE.2010.5447876
   Tomazela B, 2008, P 23 BRAZ S DAT, P283
   Tomazela B, 2013, DATA KNOWL ENG, V86, P102, DOI 10.1016/j.datak.2013.01.006
NR 40
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2018
VL 48
IS 1
BP 197
EP 232
DI 10.1002/spe.2506
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FP4WK
UT WOS:000417617500010
DA 2024-07-18
ER

PT J
AU Jayaraman, PP
   Perera, C
   Georgakopoulos, D
   Dustdar, S
   Thakker, D
   Ranjan, R
AF Jayaraman, Prem Prakash
   Perera, Charith
   Georgakopoulos, Dimitrios
   Dustdar, Schahram
   Thakker, Dhavalkumar
   Ranjan, Rajiv
TI Analytics-as-a-service in a multi-cloud environment through
   semantically-enabled hierarchical data processing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE internet of things; multi-cloud environments; big data; semantic web;
   data analytics
ID INTERNET; THINGS
AB A large number of cloud middleware platforms and tools are deployed to support a variety of internet-of-things (IoT) data analytics tasks. It is a common practice that such cloud platforms are only used by its owners to achieve their primary and predefined objectives, where raw and processed data are only consumed by them. However, allowing third parties to access processed data to achieve their own objectives significantly increases integration and cooperation and can also lead to innovative use of the data. Multi-cloud, privacy-aware environments facilitate such data access, allowing different parties to share processed data to reduce computation resource consumption collectively. However, there are interoperability issues in such environments that involve heterogeneous data and analytics-as-a-service providers. There is a lack of both architectural blueprints that can support such diverse, multi-cloud environments and corresponding empirical studies that show feasibility of such architectures. In this paper, we have outlined an innovative hierarchical data-processing architecture that utilises semantics at all the levels of IoT stack in multi-cloud environments. We demonstrate the feasibility of such architecture by building a system based on this architecture using OpenIoT as a middleware, and Google Cloud and Microsoft Azure as cloud environments. The evaluation shows that the system is scalable and has no significant limitations or overheads. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Jayaraman, Prem Prakash; Georgakopoulos, Dimitrios] Swinburne Univ Technol, Hawthorn Campus, Melbourne, Vic 3122, Australia.
   [Perera, Charith] Open Univ, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
   [Dustdar, Schahram] Vienna Univ Technol, Distributed Syst Grp, Argentinierstr 8 184-1, A-1040 Vienna, Austria.
   [Thakker, Dhavalkumar] Univ Bradford, Bradford BD7, W Yorkshire, England.
   [Ranjan, Rajiv] China Univ Geosci, Wuhan, Peoples R China.
   [Ranjan, Rajiv] Newcastle Univ, Sch Comp Sci, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
C3 Swinburne University of Technology; Open University - UK; Technische
   Universitat Wien; University of Bradford; China University of
   Geosciences; Newcastle University - UK
RP Jayaraman, PP (corresponding author), Swinburne Univ Technol, Hawthorn Campus, Melbourne, Vic 3122, Australia.
EM prem.jayaraman@gmail.com
RI Ranjan, Rajiv/F-4700-2011; Dustdar, Schahram/G-9877-2015;
   Georgakopoulos, Dimitrios/C-5019-2011; Jayaraman, Prem
   Prakash/A-6784-2013; Thakker, Dhavalkumar/A-5743-2011
OI Dustdar, Schahram/0000-0001-6872-8821; Thakker,
   Dhavalkumar/0000-0003-4479-3500; Jayaraman, Prem
   Prakash/0000-0003-4500-3443; Georgakopoulos,
   Dimitrios/0000-0001-7880-2140; Ranjan, Rajiv/0000-0002-6610-1328
FU European Research Council (ASAP) [291652]
FX Charith Perera's work is supported by European Research Council Advanced
   Grant 291652 (ASAP).
CR Alhamazani K, 2015, COMPUTING, V97, P357, DOI 10.1007/s00607-014-0398-5
   Bennett C, 2009, BENCHMARK DATA INTEN
   Bizer C, 2011, SEMANTIC SERVICES, INTEROPERABILITY AND WEB APPLICATIONS: EMERGING CONCEPTS, P205, DOI 10.4018/978-1-60960-593-3.ch008
   Brush A.B., 2013, SER UBICOMP 13 ADJUN, P35
   Chen D, 2017, SOFTWARE PRACT EXPER, V47, P405, DOI 10.1002/spe.2418
   Chen D, 2015, IEEE T COMPUT, V64, P707, DOI 10.1109/TC.2013.2295806
   Deng Z, 2015, IEEE T PARALL DISTR, V26, P834, DOI 10.1109/TPDS.2014.2311811
   Diaz J., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P560, DOI 10.1109/CloudCom.2011.85
   Dixon C., 2012, Proceedings of the 9th USENIX conference on Networked Systems Design and Implementation. NSDI'12, P25
   Hindman B., 2011, Mesos: a platform for fine-grained resource sharing in the data center, P295
   Hu YY, 2015, IEEE ACM DIS SIM, P18, DOI 10.1109/DS-RT.2015.17
   Ouyang C, 2009, HDB RES BUSINESS PRO, P91
   Pepper R, 2014, TECHNICAL REPORT
   Perera C, 2014, 2014 IEEE WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P135, DOI 10.1109/WF-IoT.2014.6803135
   Perera C, 2014, T EMERG TELECOMMUN T, V25, P81, DOI 10.1002/ett.2704
   Perera C, 2014, IEEE COMMUN SURV TUT, V16, P414, DOI 10.1109/SURV.2013.042313.00197
   Soldatos J, 2015, LECT NOTES COMPUT SC, V9001, P13, DOI 10.1007/978-3-319-16546-2_3
   Song W, 2015, IEEE SYST J, V9, P416, DOI 10.1109/JSYST.2013.2283954
   THAKKER D, 2010, THE SEMANTIC WEB RES, P379
   Vavilapalli V.K., P 4 ANN S CLOUD COMP
   Wang LZ, 2015, IEEE CLOUD COMPUT, V2, P76, DOI 10.1109/MCC.2015.14
   Wang LZ, 2015, IEEE T PARALL DISTR, V26, P1497, DOI 10.1109/TPDS.2014.2322362
   Wang LZ, 2015, KNOWL-BASED SYST, V79, P43, DOI 10.1016/j.knosys.2014.10.004
   Wang LZ, 2013, COMPUT ELECTR ENG, V39, P3, DOI 10.1016/j.compeleceng.2012.05.001
   Wang LZ, 2012, INT J AD HOC UBIQ CO, V10, P96, DOI 10.1504/IJAHUC.2012.048261
   Wang LZ, 2010, NEW GENERAT COMPUT, V28, P137, DOI 10.1007/s00354-008-0081-5
NR 26
TC 14
Z9 40
U1 0
U2 28
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2017
VL 47
IS 8
SI SI
BP 1139
EP 1156
DI 10.1002/spe.2432
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FA1LW
UT WOS:000405202100008
OA Green Accepted, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU de Murillas, EGL
   Fabra, J
   Alvarez, P
   Ezpeleta, J
AF de Murillas, Eduardo Gonzalez-Lopez
   Fabra, Javier
   Alvarez, Pedro
   Ezpeleta, Joaquin
TI Parallel computation of the reachability graph of petri net models with
   semantic information
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE petri nets; reachability graph; semantics; parallel computing;
   high-perfomance computing; cloud computing
AB Formal verification plays a crucial role when dealing with correctness of systems. In a previous work, the authors proposed a class of models, the Unary Resource Description Framework Petri Nets (U-RDF-PN), which integrated Petri nets and (RDF-based) semantic information. The work also proposed a model checking approach for the analysis of system behavioural properties that made use of the net reachability graph. Computing such a graph, specially when dealing with high-level structures as RDF graphs, is a very expensive task that must be considered. This paper describes the development of a parallel solution for the computation of the reachability graph of U-RDF-PN models. Besides that, the paper presents some experimental results when the tool was deployed in cluster and cloud frameworks. The results not only show the improvement in the total time required for computing the graph, but also the high scalability of the solution, which make it very useful thanks to the current (and future) availability of cloud infrastructures. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [de Murillas, Eduardo Gonzalez-Lopez] Eindhoven Univ Technol, Dept Math & Comp Sci, Architecture Informat Syst AIS Grp, Eindhoven, Netherlands.
   [Fabra, Javier; Alvarez, Pedro; Ezpeleta, Joaquin] Univ Zaragoza, Dept Comp Sci & Syst Engn, Inst Engn Res I3A, Zaragoza, Spain.
C3 Eindhoven University of Technology; University of Zaragoza
RP Fabra, J (corresponding author), Univ Zaragoza, Dept Comp Sci & Syst Engn, Inst Engn Res I3A, Zaragoza, Spain.
EM jfabra@unizar.es
RI de Murillas, Eduardo Gonzalez Lopez/Q-8555-2019
OI /0000-0002-9622-8186; Gonzalez Lopez de Murillas,
   Eduardo/0000-0002-6340-6388
FU Spanish Government [TIN2014-56633-C3-2-R]; Universidad de Zaragoza
   [JIUZ-2015-TEC-04]; Obra Social de la Fundacion Ibercaja
FX This work has been funded by project TIN2014-56633-C3-2-R from the
   Spanish Government and project JIUZ-2015-TEC-04 from the Universidad de
   Zaragoza and Obra Social de la Fundacion Ibercaja.
CR Allmaier SC, 1997, INT WORKSH PETRI NET, P112, DOI 10.1109/PNPM.1997.595542
   Allmaier SC, 1997, LECT NOTES COMPUT SC, V1253, P207
   [Anonymous], 2008, RESTFUL WEB SERVICES
   [Anonymous], 2002, Workflow management: models, methods, and systems
   Ansel J, 2009, INT PARALL DISTRIB P, P895
   Arunachalam P, 1996, PR IEEE COMP DESIGN, P365, DOI 10.1109/ICCD.1996.563580
   Barbuti R, 1999, SOFTWARE PRACT EXPER, V29, P1123, DOI 10.1002/(SICI)1097-024X(199910)29:12<1123::AID-SPE275>3.0.CO;2-6
   Barrett C., 2010, P 8 INT WORKSHOP SAT, V13, P14
   Barrett C, 2007, LECT NOTES COMPUT SC, V4590, P298
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Finkel A., 1993, Advances in Petri Nets 1993, P210
   Friedman R, 1997, SOFTWARE PRACT EXPER, V27, P929, DOI 10.1002/(SICI)1097-024X(199708)27:8<929::AID-SPE113>3.0.CO;2-#
   FWang QXin., 2004, P 21 IEEE 12 NASA GO, P139
   Girault C., 2001, Petri Nets for System Engineering: A Guide to Modeling, Verification, and Applications
   Gonzalez-Lopezde Murillas E, 2012, P 6 INT C ADV ENG CO, P46
   Guan ZJ, 2006, CONCURR COMP-PRACT E, V18, P1115, DOI 10.1002/cpe.988
   Haddad S, 1995, LECT NOTES COMPUT SC, V935, P238
   Hayes P., 2004, RDF SEMANTICS
   HUBER P, 1986, THEOR COMPUT SCI, V45, P261, DOI 10.1016/0304-3975(86)90046-0
   Ibáñez MJ, 2012, IEEE T SYST MAN CY A, V42, P854, DOI 10.1109/TSMCA.2012.2183357
   Koliadis G, 2007, P IEEE I C SERV COMP, P731
   Kordon F, 2006, OPTIMIZED COLORED NE, P339
   Li XT, 2011, IEEE T SYST MAN CY A, V41, P510, DOI 10.1109/TSMCA.2010.2093884
   Litzkow M, 1997, CHECKPOINT MIGRATION
   Liu G, 2011, IEEE T SYST MAN CY A, V42, P213
   Marenzoni P, 1997, INT WORKSH PETRI NET, P122, DOI 10.1109/PNPM.1997.595543
   Miner A. S., 1999, Application and Theory of Petri Nets 1999. 20th International Conference, ICATPN'99. Proceedings (Lecture Notes in Computer Science Vol.1639), P6
   Moreau L, 2008, CONCURR COMP-PRACT E, V20, P409, DOI 10.1002/cpe.1233
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Pastor E., 1994, Application and Theory of Petri Nets 1994. 15th International Conference. Proceedings, P416
   ter Horst HJ, 2005, J WEB SEMANT, V3, P79, DOI 10.1016/j.websem.2005.06.001
   VALMARI A, 1991, LECT NOTES COMPUT SC, V483, P491
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Van Dijk T, 2013, ELECTRON NOTES THEOR, V296, P127, DOI 10.1016/j.entcs.2013.07.009
   van Hee Kees M., 2013, Transactions on Petri Nets and Other Models of Concurrency VII, P116, DOI 10.1007/978-3-642-38143-0_4
   Wang SG, 2013, IEEE T SYST MAN CY-S, V43, P932, DOI 10.1109/TSMCA.2012.2226878
   Xiong PC, 2010, IEEE T SYST MAN CY A, V40, P376, DOI 10.1109/TSMCA.2009.2037018
NR 39
TC 2
Z9 2
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2017
VL 47
IS 5
BP 647
EP 668
DI 10.1002/spe.2438
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ER1SO
UT WOS:000398573700001
OA Green Published
DA 2024-07-18
ER

PT J
AU de Oliveira, DB
   de Oliveira, RS
AF de Oliveira, Daniel Bristot
   de Oliveira, Romulo Silva
TI Timing analysis of the PREEMPT RT Linux kernel
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE real time; response-time analysis; Linux; PREEMPT RT; trace; Ftrace
AB In the theory of real-time scheduling, tasks are described by mathematical variables, which are used in analytical models in order to prove schedulability of the system. On real-time Linux, tasks are computer programs, and Linux developers try to lower the latencies caused by the Linux kernel, trying to achieve faster response for the highest-priority task. Although both seek temporal correctness, they use different abstractions, which end up separating these efforts in two different worlds, making it hard for the Linux practitioners to understand and apply the formally proved models to the Linux kernel and for theoretical researchers to apply the restrictions imposed by Linux for the theoretical models. This paper traces a parallel between the theory of response-time analysis and the abstractions used in the Linux kernel. The contribution of this paper is threefold. We first identify the PREEMPT RT Linux kernel mechanisms that impact the timing of real-time tasks and map these impacts to the main abstractions used by the real-time scheduling theory. Then, we describe a customized trace tool, based on the existing trace infrastructure of the Linux kernel, that allows the measurement of the delays associated with the main abstractions of the real-time scheduling theory. Finally, we use this customized trace tool to characterize the timing lines resulting from the behavior of the PREEMPT RT Linux kernel. Copyright (c) 2015John Wiley & Sons, Ltd.
C1 [de Oliveira, Daniel Bristot; de Oliveira, Romulo Silva] Univ Fed Santa Catarina, Dept Automat & Syst, Caixa Postal 476, BR-88040900 Florianopolis, SC, Brazil.
   [de Oliveira, Daniel Bristot] Red Hat Inc, Sao Paulo, Brazil.
C3 Universidade Federal de Santa Catarina (UFSC)
RP de Oliveira, RS (corresponding author), Univ Fed Santa Catarina, Dept Automat & Syst, Caixa Postal 476, BR-88040900 Florianopolis, SC, Brazil.
EM romulo.deoliveira@ufsc.br
RI de Oliveira, Romulo S/C-3544-2013; de Oliveira, Rômulo/AAM-3694-2021
OI de Oliveira, Romulo S/0000-0002-8853-9021; 
CR Bastoni A, 2011, EUROMICRO, P125, DOI 10.1109/ECRTS.2011.20
   Bastoni A, 2010, REAL TIM SYST SYMP P, P14, DOI 10.1109/RTSS.2010.23
   Brandenbug B., 2009, P 11 REAL TIM LIN WO, P19
   Brandenburg B., 2007, P 3 INT WORKSHOP OPE, P19
   Brandenburg BB, 2013, EUROMICRO, P292, DOI 10.1109/ECRTS.2013.38
   Brandenburg BB, 2009, IEEE INT CONF EMBED, P273, DOI 10.1109/RTCSA.2009.37
   Buttazzo G., 2005, S COMP SCI
   Corbet J., 2010, LINUX WEEKLY NEW OCT
   Corbet J., 2009, LINUX WEEKLY NEW JUL
   Corbet Jonathan., 2005, Linux device driver, 3ed
   Davis RI, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978814
   Gleixner T., 2010, LINUX WEEKLY NEW JUL
   Guniguntala D, 2008, IBM SYST J, V47, P221, DOI 10.1147/sj.472.0221
   Hart DV, 2007, OTT LIN S OTT ONT, P161
   JOSEPH M, 1986, COMPUT J, V29, P390, DOI 10.1093/comjnl/29.5.390
   Kenna C. J., 2011, Proceedings of the 2011 IEEE 32nd Real-Time Systems Symposium (RTSS 2011), P93, DOI 10.1109/RTSS.2011.16
   Lelli J, 2012, J SYST SOFTWARE, V85, P2405, DOI 10.1016/j.jss.2012.05.048
   Lelli Juri., 2011, PROC 7 INT WORKSHOP, P6
   Love Robert, 2010, Linux Kernel Development
   McKenney P, 2014, LINUX WEEKLY NEW SEP
   MCKENNEY PE, 2007, LINUX WEEKLY NEW DEC
   OSADL, OSADL PROJ REALT LIN
   Rostedt S., 2010, LINUX WEEKLY NEW JAN
   Rostedt S., 2014, RT MUTEX SUBSYSTEM P
   Rostedt S, 2010, LINUX WEEKLY NEW MAR
   Spear A, 2012, COMPUTER, V45, P60, DOI 10.1109/MC.2012.191
   Steven Rostedt, 2012, LINUX WEEKLY NEW MAR
   Steven Rostedt, 2009, LINUX WEEKLY NEW DEC
   Toupin D, 2011, IEEE SOFTWARE, V28, P87, DOI 10.1109/MS.2011.20
NR 29
TC 17
Z9 17
U1 1
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2016
VL 46
IS 6
BP 789
EP 819
DI 10.1002/spe.2333
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK1WU
UT WOS:000374706600004
DA 2024-07-18
ER

PT J
AU Kune, R
   Konugurthi, PK
   Agarwal, A
   Chillarige, RR
   Buyya, R
AF Kune, Raghavendra
   Konugurthi, Pramod Kumar
   Agarwal, Arun
   Chillarige, Raghavendra Rao
   Buyya, Rajkumar
TI The anatomy of big data computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; big data computing; big data analytics as a service; big data
   cloud architecture
ID CHALLENGES; MANAGEMENT
AB Advances in information technology and its widespread growth in several areas of business, engineering, medical, and scientific studies are resulting in information/data explosion. Knowledge discovery and decision-making from such rapidly growing voluminous data are a challenging task in terms of data organization and processing, which is an emerging trend known as big data computing, a new paradigm that combines large-scale compute, new data-intensive techniques, and mathematical models to build data analytics. Big data computing demands a huge storage and computing for data curation and processing that could be delivered from on-premise or clouds infrastructures. This paper discusses the evolution of big data computing, differences between traditional data warehousing and big data, taxonomy of big data computing and underpinning technologies, integrated platform of big data and clouds known as big data clouds, layered architecture and components of big data cloud, and finally open-technical challenges and future directions. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Kune, Raghavendra; Konugurthi, Pramod Kumar] Adv Data Proc Res Inst, Dept Space, Hyderabad, Andhra Pradesh, India.
   [Agarwal, Arun; Chillarige, Raghavendra Rao] Univ Hyderabad, Sch Comp & Informat Sci, Hyderabad 500134, Andhra Pradesh, India.
   [Buyya, Rajkumar] Univ Melbourne, Sch Engn, Dept Comp & Informat Syst, CLOUDS Lab, Melbourne, Vic, Australia.
C3 University of Hyderabad; University of Melbourne
RP Kune, R (corresponding author), Adv Data Proc Res Inst, Dept Space, Hyderabad, Andhra Pradesh, India.
EM raghav.es@gmail.com
RI Konugurthi, Pramod/AAQ-6449-2021; Buyya, Rajkumar/C-3424-2009;
   Raghavendra, Kune/AAQ-3640-2021
OI Konugurthi, Pramod/0000-0002-0451-1030; Agarwal,
   Arun/0000-0003-4191-408X
FU Future Fellowship project of the Australian Research Council;
   Melbourne-Chindia Cloud Computing (MC3) Research Network
FX We thank Rodrigo Calheiros, Nikolay Grozev, Amir Vahid, and Harshit
   Gupta for their comments and suggestions on improving the quality of the
   paper. This work is partially supported by the Future Fellowship project
   of the Australian Research Council and Melbourne-Chindia Cloud Computing
   (MC3) Research Network.
CR Afrati F, VISION PAPER UNDERST
   Aggarwal CC, 2012, PROBABILISTIC MODELS, P257
   Aldrich J, 1997, STAT SCI, V12, P162
   [Anonymous], 2009, IN MEMORY ANAL LEVER
   [Anonymous], P 21 ACM S OP SYST P
   [Anonymous], P 36 INT C VER LARG
   [Anonymous], 2014, SURV BIG DAT ARCH FR
   [Anonymous], 2008, Queue
   [Anonymous], 2005, Building the Data Warehouse
   [Anonymous], 2006, P 7 USENIX S OP SYST
   [Anonymous], 2013, MASTERING CLOUD COMP
   Assunçao MD, 2015, J PARALLEL DISTR COM, V79-80, P3, DOI 10.1016/j.jpdc.2014.08.003
   Berger P, 2013, P 12 ANN C INF KNOWL
   Bhatotia P, 2011, P 3 USENIX WORKSH HO
   Brewer Eric A., 2000, 19 ACM S PRINC DISTR
   Broberg J, 2008, J GRID COMPUT, V6, P255, DOI 10.1007/s10723-007-9095-3
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Catanese S. A, 2011, P 1 INT C WEB INT MI
   Chauhan Avkash., 2014, Introducing Microsoft Azure HDInsight
   Chen CLP, 2014, INFORM SCIENCES, V275, P314, DOI 10.1016/j.ins.2014.01.015
   Chen JC, 2013, FRONT COMPUT SCI-CHI, V7, P157, DOI 10.1007/s11704-013-3903-7
   Chen M, 2014, MOBILE NETW APPL, V19, P171, DOI 10.1007/s11036-013-0489-0
   Chervenak A, 2000, J NETW COMPUT APPL, V23, P187, DOI 10.1006/jnca.2000.0110
   Condie T, 2010, P 7 USENIX NETW SYST
   Cooper M, 2014, TACKLING BIG DATA
   CRA (Computing Research Association), CHALL OPP BIG DAT
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Deepak P., 2008, 2008 IEEE Fourth International Conference on eScience, P47, DOI 10.1109/eScience.2008.17
   Depak P., 2009, 2009 International Conference on High Performance Computing & Simulation (HPCS), P131, DOI 10.1109/HPCSIM.2009.5191739
   Ginsberg J, 2009, NATURE, V457, P1012, DOI 10.1038/nature07634
   Gray J., 1981, Proceedings of the Seventh International Conference on Very Large Data Bases, P144
   HAERDER T, 1983, COMPUT SURV, V15, P287, DOI 10.1145/289.291
   IDC, DIG UN 2020 BIG DAT
   Janaki A, 2008, CISC VIS NETW IND GL
   Jardak C, 2014, IEEE NETWORK, V28, P26, DOI 10.1109/MNET.2014.6863128
   Kaisler S, 2013, P ANN HICSS, P995, DOI 10.1109/HICSS.2013.645
   Karloi' H, 2010, P 21 ACM SIAM S DISC
   Lee JG, 2015, BIG DATA RES, V2, P74, DOI 10.1016/j.bdr.2015.01.003
   Lin J, MAPREDUCE GOOD ENOUG
   Mayer Viktor, 2013, BIG DATA REVOLUTION
   Nyce C., 2007, Predictive analytics white paper
   Oracle Berkeley DB, OR DAT SHEET
   Radhadevi PV, 2008, PHOTOGRAMM REC, V23, P69, DOI 10.1111/j.1477-9730.2007.00453.x
   Raghavendra K, 2012, P 1 INT C ADV CLOUD
   Raghavendra K, 2010, 10 IEEE ACM INT S CL
   Wu XD, 2014, IEEE T KNOWL DATA EN, V26, P97, DOI 10.1109/TKDE.2013.109
   Zhang B, 2010, P 19 ACM INT S HIGH
   Zhang Y., 2011, P 2 ACM S CLOUD COMP, p13:1
NR 48
TC 89
Z9 91
U1 8
U2 138
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2016
VL 46
IS 1
SI SI
BP 79
EP 105
DI 10.1002/spe.2374
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA6HI
UT WOS:000367903200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Aycock, J
AF Aycock, J.
TI Stringlish: improved English string searching in binary files
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE binary images; string searching; English
AB When analyzing binary files, printable strings are easy to find, but a naive approach yields a large number of false positives: 'uninteresting' string-like sequences that occur by chance in the binary. We present a lightweight yet surprisingly effective method of filtering printable strings for English or English-like sequences. Copyright (C) 2015 John Wiley & Sons Ltd.
C1 Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Aycock, J (corresponding author), Univ Calgary, Dept Comp Sci, ICT 602,2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM aycock@ucalgary.ca
CR Aycock J., 2014, 2014106213 U CALG DE
   Boris D, 2006, ASCII TEXT IN ROMS
   Brown RD, 2012, DIGIT INVEST, V9, pS34, DOI 10.1016/j.diin.2012.05.004
   CAVNAR WB, 1994, 3 ANN S DOC AN INF R, P161
   Reharek R, 2009, 10 INT C COMP LING I, P357
   Vatanen T, 2010, 7 INT C LANG RES EV, P3423
NR 6
TC 0
Z9 0
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2015
VL 45
IS 11
BP 1591
EP 1595
DI 10.1002/spe.2327
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LI
UT WOS:000363500900007
DA 2024-07-18
ER

PT J
AU Hung, SH
   Tzeng, TT
   Wu, GD
   Shieh, JP
AF Hung, Shih-Hao
   Tzeng, Tien-Tzong
   Wu, Gyun-De
   Shieh, Jeng-Peng
TI A code offloading scheme for big-data processing in android applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE pervasive computing; smartphone; virtualization; mobile-cloud computing;
   android; big-data processing
ID CLOUD
AB Smart mobile devices and wireless networks are changing the way people execute applications and access information. In the meantime, more and more personal data are thus spread around different data silos in the Internet. One day, you will find that you may want to access your own data, but the service providers may not allow or the vendors do not provide any application for your need. It means your personal data are locked in by the service vendors. While the advances in the hardware/software technology of the smart mobile devices enable more complicated application than the user can image a couple of years ago, those devices still fall short of big storage, powerful computing and more battery capacity for better user experience. The user may expect a device with secure and unlimited storage for his personal data and run his application as he wishes without incurring more energy consumption. So far, no simple solutions have been proposed to enable compute cloud for code offloading Android application and trusted storage cloud for personal data. The work described in this paper enhances current Android application framework to address the aforementioned issues. We introduce the MobileFBP framework to augment the compute part for the Android device and propose to leverage the central storage part with personal data store, that is, PDS, for trusted usage. In addition to the design and implementation of the enhanced framework, our preliminary experimental results are illustrated as well. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Hung, Shih-Hao; Tzeng, Tien-Tzong; Wu, Gyun-De; Shieh, Jeng-Peng] Natl Taiwan Univ, Dept Comp Sci & Informat Engn, Taipei 106, Taiwan.
   [Hung, Shih-Hao] Acad Sinica, Res Ctr Informat Tech Innovat, Taipei 115, Taiwan.
C3 National Taiwan University; Academia Sinica - Taiwan
RP Hung, SH (corresponding author), Natl Taiwan Univ, Performance Applicat Secur PAS Lab, Dept Comp Sci & Informat Engn, Taipei 106, Taiwan.
EM hungsh@csie.ntu.edu.tw
OI HUNG, SHIH-HAO/0000-0003-2043-2663
CR Angin P., 2013, Journal of Wireless Mobile Networks, Ubiquitous Computing, and Dependable Applications, V4, P1
   [Anonymous], 2010, PROC 8 INT C MOBILE, DOI [DOI 10.1145/1814433, 10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   [Anonymous], 2011, Personal data, the emergence of a new asset class
   [Anonymous], 2013, MIT TECHNOLOGY REV
   [Anonymous], 2010, P IEEE GLOB TEL C, DOI 10.1109/GLOCOM.2010.5683561
   Chun BG, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P301
   Clark C, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI '05), P273
   Giurgiu I, 2009, LECT NOTES COMPUT SC, V5896, P83, DOI 10.1007/978-3-642-10445-9_5
   Hou S., 2013, J. Wireless Mobile Netw., Ubiquitous Comput., Dependable Appl., V4, P104
   Hung SH, 2013, 2013 SEVENTH INTERNATIONAL CONFERENCE ON INNOVATIVE MOBILE AND INTERNET SERVICES IN UBIQUITOUS COMPUTING (IMIS 2013), P43, DOI 10.1109/IMIS.2013.17
   Hung SH, 2012, ASIA S PACIF DES AUT, P395, DOI 10.1109/ASPDAC.2012.6164980
   Hung SH, 2012, COMPUT MATH APPL, V63, P573, DOI 10.1016/j.camwa.2011.10.044
   Kirkham T., 2011, 2011 International Conference on Information Society (i-Society), P92
   Kirkham T, 2012, IEEE SECUR PRIV, V99, P1
   Kosta S, 2012, IEEE INFOCOM SER, P945, DOI 10.1109/INFCOM.2012.6195845
   Milojicic DS, 2000, ACM COMPUT SURV, V32, P241, DOI 10.1145/367701.367728
   Morrison J.P., 2010, Flow-Based Programming, 2nd Edition: A New Approach to Application Development
   Satyanarayanan M, 2007, IEEE INTERNET COMPUT, V11, P16, DOI 10.1109/MIC.2007.46
   Shih-Hao Hung, 2011, Proceedings of the 2011 Fifth International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS), P20, DOI 10.1109/IMIS.2011.77
   The Ganglia team, 2000, GANGL IS SCAL DISTR
   The Iperf team, 2010, IPERF WAS DEV NLANR
NR 21
TC 11
Z9 11
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2015
VL 45
IS 8
SI SI
BP 1087
EP 1101
DI 10.1002/spe.2265
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM6JB
UT WOS:000357793500005
DA 2024-07-18
ER

PT J
AU Delahaye, M
   du Bousquet, L
AF Delahaye, Mickael
   du Bousquet, Lydie
TI Selecting a software engineering tool: lessons learnt from mutation
   analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE tool comparison; software engineering; software testing; mutation
   analysis; mutation testing
AB Software developers employ many tools in every step of the development. As automation progresses, tools take a more and more important place. A common and difficult problem is choosing a tool among every tool for a given task.As a particular instance of this problem, this paper considers mutation analysis tools. Mutation analysis is a way to evaluate the quality of a test suite. The quality is measured as the ability of the test suite to detect faults injected into the program under tests. A fault is detected if at least one test case gives different results on the original program and the fault-injected one. Mutation tools aim at automating and speeding both the generation of fault-injected variants, called mutants, and the execution of the test suite on those mutants.This paper proposes a methodology to compare tools and applies it for comparing mutation tools. This methodology proposes to dress a list of comparison criteria as well as a list of usage profiles. Mutation tools for Java are compared on paper and by experiments. The work is then extended to other languages to assert the pertinence of the comparison criteria and the usage profiles. Finally, lessons are drawn from our selection process. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Delahaye, Mickael; du Bousquet, Lydie] Univ Grenoble Alpes, Lab Informat Grenoble, Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS)
RP du Bousquet, L (corresponding author), Univ Grenoble Alpes, Lab Informat Grenoble, Grenoble, France.
EM lydie.du-bousquet@imag.fr
FU French-government Single Inter-Ministry Fund (FU) [IO32]
FX This work has been partly funded by the French-government Single
   Inter-Ministry Fund (FU) through the IO32 project (Instrumentation and
   Tools for 32-bit Microcontrollers).
CR Abbasi A, 2009, COMPUTER, V42, P78, DOI 10.1109/MC.2009.306
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], SOFTWARE
   Arlacos Quality Center, 2012, BACT MUT TEST SYST
   Barbosa EF, 2004, SOFTW TEST VERIF REL, V11, P113
   Bellay B, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P2, DOI 10.1109/WCRE.1997.624571
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Brady P, 2012, MUTAGENESIS
   Candrlic S, 2007, ITI, P121
   Chevalley P., 2003, International Journal on Software Tools for Technology Transfer, V5, P90, DOI 10.1007/s10009-002-0099-9
   Coelho da Silva Stanisce Correa G, 2011, 30 IEEE AIAA DIG AV
   Coles H, 2013, PIT MUTATION TESTING
   Danicic S., 2007, LAVA SYSTEM MUTATION
   Delahaye M, 2013, INT CONF QUAL SOFTW, P187, DOI 10.1109/QSIC.2013.47
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   Delamaro ME, PROTEUM WEBSITE
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Derezinska A, CREAM CREATOR MUTANT
   Derezinska A, 2008, DEPCOS - RELCOMEX 2008: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, P261, DOI 10.1109/DepCoS-RELCOMEX.2008.51
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P80, DOI 10.1109/ICSTW.2010.13
   Irvine SA, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P169, DOI 10.1109/TAIC.PART.2007.38
   Jia Y, 2013, MILU PROJECT INFORM
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R, MAJOR MUTATION FRAME
   Lepine J-F, 2013, MUTATESTING
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Madeyski L, 2011, JUDY JAVA MUTATION T
   Madeyski L, 2010, IET SOFTW, V4, P32, DOI 10.1049/iet-sen.2008.0038
   Mantere M, 2009, 2009 THIRD INTERNATIONAL CONFERENCE ON EMERGING SECURITY INFORMATION, SYSTEMS, AND TECHNOLOGIES, P15, DOI 10.1109/SECURWARE.2009.10
   Mateo Pedro Reales, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P110, DOI 10.1109/ICSTW.2010.18
   Microsoft, 2014, OV NET FRAM
   Microsoft, 2013, C PROGR GUID LANG SP
   Moore I, 2015, JESTER HOMEPAGE
   Moore I, 2001, 2 INT C EXTR PROGR F
   Musgrove D, NINJATURTLES
   Offut J, MUJAVA HOMEPAGE
   Offutt A. J., 1996, SIGSOFT Software Engineering Notes, V21, P195, DOI [10.1145/229000.226317, 10.1145/226295.226317]
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Polo M, 2007, SOFTW TEST VERIF REL, V17, P3, DOI 10.1002/stvr.348
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Schuler D, 2015, JAVALANCHE MUTATION
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Shriram A, 2005, LECT NOTES COMPUT SC, V3431, P306, DOI 10.1007/978-3-540-31966-5_24
   Smith B, 2011, MUCLIPSE
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   Song HT, 2011, 2011 INTERNATIONAL CONFERENCE ON ELECTRONICS, COMMUNICATIONS AND CONTROL (ICECC), P1
   TIOBE, 2013, THE TIOBE IND
   Two Reel, 2007, JUMBLE
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zaikin A, NESTER
NR 52
TC 16
Z9 16
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2015
VL 45
IS 7
BP 875
EP 891
DI 10.1002/spe.2312
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8EW
UT WOS:000355733900002
DA 2024-07-18
ER

PT J
AU Wang, Y
   Kent, KB
   Johnson, G
AF Wang, Yang
   Kent, Kenneth B.
   Johnson, Graeme
TI Improving J9 virtual machine with LTTng for efficient and effective
   tracing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance tuning; LTTng; tracing framework; instrumentation; Java
   virtual machine; IBM J9; MariaDB
AB The ability to observe the internal operation of the J9 virtual machine is essential for effective performance tuning. To this end, tracing is an important method, which is the action of recording events from a running system with minimum performance overhead for online or off-line analysis. In this paper, we propose the integration of LTTng, an effective open-source tracing toolset, with J9 to improve its tracing functions. With this integration, the tracing component is not only decoupled from the virtual machine but also performed efficiently at both user and kernel levels to achieve a high-throughput result. To validate the integration and its impact performance, some empirical study results based on SpecJBB2005 and SQLBenchmark (supported by instrumented MariaDB) are also presented. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Wang, Yang; Kent, Kenneth B.; Johnson, Graeme] IBM Ctr Adv Studies Atlantic, Fredericton, NB E3B 5A3, Canada.
RP Wang, Y (corresponding author), Univ New Brunswick, Fac Comp Sci, Fredericton, NB E3B 5A3, Canada.
EM yangwang5@msn.com
RI Wang, Yang/E-1495-2014
OI Kent, Kenneth B/0000-0003-2764-823X
FU IBM CAS (Atlantic), Canada; Atlantic Canada Opportunities Agency (ACOA)
FX This research is sponsored by IBM CAS (Atlantic), Canada, and Atlantic
   Canada Opportunities Agency (ACOA). We are grateful to Mathieu
   Desnoyers, David Goulet, and Alexandre Montplaisir from the ltt-dev team
   for providing us with valuable information regarding LTTng and MariaDB
   and for fixing the reported issues quickly. We also would like to thank
   the anonymous reviewers who gave insightful comments that has helped to
   improve the quality of the manuscript.
CR Bligh Martin., 2007, Proceedings of the Linux Symposium, P29
   Cantrill B., 2004, P ANN C USENIX ANN T, P2
   Desnoyers Mathieu, 2012, Operating Systems Review, V46, P65
   Desnoyers M., 2009, LIN FDN COLL SUMM 20
   Desnoyers M, 2012, IEEE T PARALL DISTR, V23, P375, DOI 10.1109/TPDS.2011.159
   Desnoyers M, 2010, SOFTWARE PRACT EXPER, V40, P1053, DOI 10.1002/spe.991
   Desnoyers Mathieu, 2008, LIN S, V101
   ECLIPSE, 2013, PLUG IN LTTNGECLIPSE
   EFFICIOS, 2013, RFC COMM TRAC FORM R
   Ericsson, 2012, TRAC COD INSTR INSTR
   GITHUB, 2013, SQLBENCHMARK
   Liang S, 1999, P 5 C US C OBJ OR TE, V5, P17
   RDROP, 2013, READ COP UPD
   SPEC, 2013, SPECJBB2005
   Whaley John., 2000, JAVA 00, P78
   Wisniewski RW, 2007, LECT NOTES COMPUT SC, V4641, P139
NR 16
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2015
VL 45
IS 7
BP 973
EP 987
DI 10.1002/spe.2282
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8EW
UT WOS:000355733900006
DA 2024-07-18
ER

PT J
AU Adler, P
   Amme, W
AF Adler, Philipp
   Amme, Wolfram
TI Speculative optimizations for interpreting environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE interpreter; bytecode; optimistic code generation; speculative
   optimization
ID FRAMEWORK; BYTECODE
AB Most constrained systems use interpreters to run mobile programs written in Java. Such interpreters are designed to minimize resource usage and often do not allow mobile code in the devices to be changed. For this reason, runtime optimization is typically not supported, even though it is completely feasible. In this paper, we propose optimistic optimization as a concept for improving application performance in restricted interpreter environments. In an optimistic optimization, a mobile program is restructured speculatively during code generation. This requires that it is possible to undo such optimizations, at runtime, if an incorrect use is detected or the set of available classes has changed when compared with compile time. Experimental results show that interpreted applications using optimistic optimizations tend to run faster when compared with their conventionally optimized counterparts. Compared with standard load elimination, reductions in runtimes of up to 9% for optimistic load elimination and up to 23% for the combined optimization were achieved. Whereas an average performance improvement of 1.87% for optimistic load elimination and 3.7% for the combined optimization could be realized. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Adler, Philipp; Amme, Wolfram] Univ Jena, Inst Comp Sci, D-07743 Jena, Germany.
C3 Friedrich Schiller University of Jena
RP Amme, W (corresponding author), Univ Jena, Inst Comp Sci, Ernst Abbe Pl 2, D-07743 Jena, Germany.
EM wolfram.amme@uni-jena.de
FU Deutsche Forschungsgemeinschaft [AM 150/2-1]
FX This work is supported in part by the Deutsche Forschungsgemeinschaft
   (contract/grant number: AM 150/2-1).
CR Adler P, 2012, THESIS F SCHILLER U
   Adler P, 2009, LECT NOTES COMPUT SC, V5779, P26, DOI 10.1007/978-3-642-04694-0_3
   Alpern B, 2005, IBM SYST J, V44, P399, DOI 10.1147/sj.442.0399
   Amme W, 2001, ACM SIGPLAN NOTICES, V36, P137, DOI 10.1145/381694.378825
   Arnold M, 2002, LECT NOTES COMPUT SC, V2374, P498
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Berk E, LEXICAL ANAL GENERAT
   Brunthaler S, 2010, ACM SIGPLAN NOTICES, V45, P1, DOI 10.1145/1899661.1869633
   Brunthaler S, 2010, LECT NOTES COMPUT SC, V6183, P429, DOI 10.1007/978-3-642-14107-2_21
   Bull J. M., 1999, Proceedings of the ACM 1999 Java Grande Conference, P81, DOI 10.1145/304065.304103
   CLICK C, 1995, SIGPLAN NOTICES, V30, P246, DOI 10.1145/223428.207154
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Detlefs D, 1999, LECT NOTES COMPUT SC, V1628, P258
   Embedded Microprocessor Benchmark Consortium, GRIND BENCHM SUIT
   ERTL MA, 1995, SIGPLAN NOTICES, V30, P315, DOI 10.1145/223428.207165
   Fink SJ, 2003, INT SYM CODE GENER, P241, DOI 10.1109/CGO.2003.1191549
   Hartmann A., 2003, P COMP OPT MEETS COM, P18
   Le A, 2005, LECT NOTES COMPUT SC, V3443, P287, DOI 10.1007/11406921_22
   Le A., 2005, THESIS MCGILL U MONT
   Lengauer T., 1979, ACM T PROGR LANG SYS, V1, P121, DOI 10.1145/357062.357071
   Mahlke S. A., 1992, SIGMICRO Newsletter, V23, P45
   Manson Jeremy., 2005, Proceedings of the 32Nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, POPL'05, P378, DOI DOI 10.1145/1040305.1040336
   Mathew J. A., 1999, Proceedings of the ACM 1999 Java Grande Conference, P72, DOI 10.1145/304065.304101
   Pavlov I., LZMA SOFTWARE DEV KI
   Pechtchanski I, 2001, ACM SIGPLAN NOTICES, V36, P195, DOI 10.1145/504311.504297
   Phillips M, BORK FIL ENCR
   Shi YH, 2007, ACM T ARCHIT CODE OP, V4, DOI 10.1145/1328195.1328197
   Sun Microsystems Inc, JSR 133 JAV MEM MOD
   Sun Microsystems Inc, K VIRT MACH
   Sun Microsystems Inc, JSR 30 J2ME CONN LTD
   Sundaresan V, 2000, ACM SIGPLAN NOTICES, V35, P264, DOI 10.1145/354222.353189
   SUNDARESAN V, 1999, THESIS MCGILL U MONT
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Vallee-Rai R, SOOT JAVA OPTIMIZATI
   von Praun C, 2004, LECT NOTES COMPUT SC, V2958, P390
NR 35
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2014
VL 44
IS 10
BP 1223
EP 1249
DI 10.1002/spe.2199
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP2AR
UT WOS:000341875200004
DA 2024-07-18
ER

PT J
AU Noureddine, A
   Rouvoy, R
   Seinturier, L
AF Noureddine, Adel
   Rouvoy, Romain
   Seinturier, Lionel
TI A review of middleware approaches for energy management in distributed
   environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE energy-aware middleware; autonomic computing; distributed environments;
   energy management; service-oriented architecture
ID EXPERIENCES
AB Energy management solutions and approaches for computer systems are becoming broadly available as energy concerns are becoming mainstream. Many approaches have been proposed to manage the energy consumption of the hardware, operating system, or software layers. The widespread usage of ubiquitous devices and the high coverage of networks (Wi-Fi and 3G) have led to a new generation of communicating and mobile devices that uses complex middleware platform functionalities. Therefore, energy management has emerged as a topic of research interest in the middleware layer, and solutions specific to this layer are proposed along the more traditional ones existing at the other levels. In this article, we report on a review of state-of-the-art approaches for energy management middleware platforms. This article defines also an architectural taxonomy and compares existing approaches on the basis of this taxonomy. In particular, we review middleware platforms and detail a number of approaches where energy management is handled. Finally, we review application scenarios where the energy management concepts at the middleware layer are applied in intelligent environments. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Noureddine, Adel; Rouvoy, Romain; Seinturier, Lionel] Inria Lille Nord Europe, Villeneuve Dascq, France.
   [Noureddine, Adel; Rouvoy, Romain; Seinturier, Lionel] Univ Lille 1, LIFL, CNRS, UMR 8022, F-59655 Villeneuve Dascq, France.
   [Seinturier, Lionel] Inst Univ France, Paris, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite de
   Lille; Institut Universitaire de France
RP Noureddine, A (corresponding author), Inria Lille Nord Europe, Villeneuve Dascq, France.
EM adel.noureddine@inria.fr
RI Seinturier, Lionel/ABG-2829-2020
OI Seinturier, Lionel/0000-0003-0006-6088; Rouvoy,
   Romain/0000-0003-1771-8791; Noureddine, Adel/0000-0002-8585-574X
FU French Ministry of Higher Education and Research; Nord-Pas de Calais
   Regional Council; FEDER through the Contrat de Projets Etat Region
   Campus Intelligence Ambiante (CPER-CIA)
FX This work is partially funded by the French Ministry of Higher Education
   and Research, Nord-Pas de Calais Regional Council, and FEDER through the
   Contrat de Projets Etat Region Campus Intelligence Ambiante (CPER-CIA)
   2007-2013.
CR Agarwal Y., 2010, Proceedings Of The USENIX 2010 Annual Technical Conference (USENIX ATC'10), P22
   [Anonymous], 2009, EENVIRONMENT EUR C C
   [Anonymous], P 8 INT C NEW TECHN
   [Anonymous], GRACE HIERARCHICAL A
   [Anonymous], P 7 INT WORKSH APPL
   [Anonymous], TECHNICAL REPORT
   [Anonymous], P 23 INT C DISTR COM
   [Anonymous], P AUT SPONT NETW S A
   [Anonymous], 2008, P IEEE EN 2030 C ATL, DOI DOI 10.1109/ENERGY.2008.4781028
   [Anonymous], TECHNICAL REPORT
   [Anonymous], P 2010 C USENIX ANN
   Becker C, 2003, PROCEEDINGS OF THE FIRST IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS (PERCOM 2003), P443, DOI 10.1109/PERCOM.2003.1192769
   Binder W, 2009, LECT NOTES COMPUT SC, V5404, P117
   Edwards W.K., 2001, UBICOMP 2001 UBIQUIT, DOI [DOI 10.1007/3-540-45427-6, 10.1007/3-540-45427-6_22, DOI 10.1007/3-540-45427-6_22]
   Eisenhauer M, 2009, 2009 6TH ANNUAL IEEE COMMUNICATION SOCIETY CONFERENCE ON SENSOR, MESH AND AD HOC COMMUNICATIONS AND NETWORKS WORKSHOPS, P143
   Jahn M., 2010, Proc. 5th Int. Conf. Future Inf. Technology (FutureTech), P1, DOI DOI 10.1109/FUTURETECH.2010.5482712
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Krakowiak Sacha., 2007, MIDDLEWARE ARCHITECT
   Lu YH, 2011, COMPUTER, V44, P75, DOI 10.1109/MC.2011.342
   Mohapatra S, 2007, IEEE J SEL AREA COMM, V25, P722, DOI 10.1109/JSAC.2007.070509
   Schiele G, 2008, INT CONF PERVAS COMP, P504, DOI 10.1109/PERCOM.2008.92
   Sen S, 2012, IEEE MILIT COMMUN C
   Vardhan V, 2009, INT J EMBED SYST, V4, P152, DOI 10.1504/IJES.2009.027939
   Xiao Y., 2011, Proceedings of the Second International Workshop on Mobile Cloud Computing and Services, MCS'11, P13, DOI [10.1145/1999732.1999736, DOI 10.1145/1999732.1999736]
   Xiao Yang., 2009, Computer Communications and Networks, P1
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zeng H, 2005, IEEE PERVAS COMPUT, V4, P62, DOI 10.1109/MPRV.2005.10
NR 27
TC 5
Z9 5
U1 1
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2013
VL 43
IS 9
SI SI
BP 1071
EP 1100
DI 10.1002/spe.2139
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 195OH
UT WOS:000322712200003
OA Green Published
DA 2024-07-18
ER

PT J
AU Liu, H
   Kuo, FC
   Chen, TY
AF Liu, Huai
   Kuo, Fei-Ching
   Chen, Tsong Yueh
TI Comparison of adaptive random testing and random testing under various
   testing and debugging scenarios
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software testing; random testing; adaptive random testing;
   failure-detection effectiveness; testing effectiveness metric
ID STRATEGY
AB Adaptive random testing is an enhancement of random testing. Previous studies on adaptive random testing assumed that once a failure is detected, testing is terminated and debugging is conducted immediately. It has been shown that adaptive random testing normally uses fewer test cases than random testing for detecting the first software failure. However, under many practical situations, testing should not be withheld after the detection of a failure. Thus, it is important to investigate the effectiveness with respect to the detection of multiple failures. In this paper, we compare adaptive random testing and random testing under various scenarios and examine whether adaptive random testing is still able to use fewer test cases than random testing to detect multiple software failures. Our study delivers some interesting results and highlights a number of promising research projects. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Liu, Huai; Kuo, Fei-Ching; Chen, Tsong Yueh] Swinburne Univ Technol, Ctr Software Anal & Testing, Hawthorn, Vic 3122, Australia.
C3 Swinburne University of Technology
RP Liu, H (corresponding author), Swinburne Univ Technol, Ctr Software Anal & Testing, Hawthorn, Vic 3122, Australia.
EM hliu@swin.edu.au
RI Liu, Huai/E-2060-2013; Liu, Huai/M-4871-2019
OI Liu, Huai/0000-0003-3125-4399; Liu, Huai/0000-0003-3125-4399; Chen,
   Tsong/0000-0003-3578-0994
FU Australian Research Council [DP0880295]; Australian Research Council
   [DP0880295] Funding Source: Australian Research Council
FX Contract/grant sponsor: Australian Research Council Discovery Grant;
   contract/grant number: DP0880295
CR AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   [Anonymous], 2004, Understanding Probability
   Bishop P. G., 1993, P 23 INT S FAULT TOL, P98
   Chan KP, 2006, P INT COMP SOFTW APP, P485
   Chan KP, 2006, INT J SOFTW ENG KNOW, V16, P553, DOI 10.1142/S0218194006002926
   Chen T. Y., 2006, P 1 INT WORKSH RAND, P64
   Chen TY, 2008, INT CONF QUAL SOFTW, P145, DOI 10.1109/QSIC.2008.23
   Chen TY, 2007, INT J SOFTW ENG KNOW, V17, P805, DOI 10.1142/S0218194007003501
   Chen TY, 2006, J SYST SOFTWARE, V79, P591, DOI 10.1016/j.jss.2005.05.029
   Chen TY, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363107
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P79
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   DeMillo R.A., 1978, IEEE COMPUT, V1, P31
   Ellims M, 2007, TAIC PART 2007 - Testing: Academic and Industrial Conference - Practice and Research Techniques, Proceedings, P185, DOI 10.1109/TAIC.PART.2007.28
   Gutjahr WJ, 1999, IEEE T SOFTWARE ENG, V25, P661, DOI 10.1109/32.815325
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Johannes M., 2006, P 1 INT WORKSH RAND, P70
   Kuo F.-C., 2007, P 19 INT C SOFTW ENG, P135
   KUO FC, 2006, THESIS SWINBURNE U T
   Kuo FC, 2008, SOFTWARE QUAL J, V16, P303, DOI 10.1007/s11219-008-9047-6
   Lin Y, 2009, IEEE INT CONF AUTOM, P221, DOI 10.1109/ASE.2009.13
   Mayer J., 2005, P 20 IEEEACM INT C A, P333, DOI DOI 10.1145/1101908
   Mayer J, 2006, INT CONF QUAL SOFTW, P251
   Menzies T, 2000, IEEE SOFTWARE, V17, P107, DOI 10.1109/52.877876
   Merkel R., 2005, THESIS SWINBURNE U T
   Motulsky H., 1995, Intuitive biostatistics
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Press W. H., 2002, Numerical Recipes in C: the Art of Scientific Computing, V2nd ed., DOI DOI 10.1119/1.14981
   van der Meulen MJP, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P101, DOI 10.1109/ISSRE.2004.7
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   Yu Liu, 2008, 2008 Second IEEE International Conference on Secure System Integration and Reliability Improvement (SSIRI), P24, DOI 10.1109/SSIRI.2008.18
NR 34
TC 10
Z9 11
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2012
VL 42
IS 8
BP 1055
EP 1074
DI 10.1002/spe.1113
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 970MG
UT WOS:000306133400006
OA Bronze
DA 2024-07-18
ER

PT J
AU Arthur, RB
   Olsen, DR
AF Arthur, Richard B.
   Olsen, Dan R., Jr.
TI Privacy-aware shared UI toolkit for nomadic environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE SPICE; privacy-aware; toolkit
AB As computing becomes more nomadic, privacy becomes a greater concern. People use portable devices to annex displays in their environments so that they can share information with other people. However, private information such as usernames, e-mail addresses, and folder names are shown on foreign displays. In addition, foreign keyboards can be used to enter in passwords generating a significant privacy and security risk. Because nomadic users' sensitive data is constantly at risk for exploitation via the UI toolkit, a solution for protecting user privacy must include that toolkit. This paper introduces the XICE frameworka windowing toolkit that provides easy display annexing and includes a robust privacy framework to help protect users and their data. This paper discusses the exploits that annexing external devices introduces and how XICE mitigates or eliminates those threats safely and naturally for both users and developers. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Arthur, Richard B.; Olsen, Dan R., Jr.] Brigham Young Univ, Provo, UT 84602 USA.
C3 Brigham Young University
RP Arthur, RB (corresponding author), Brigham Young Univ, Provo, UT 84602 USA.
EM startether@startether.com
CR Apple Computer, 2010, BONJ
   Apple Computer, 2010, MAC
   Arthur R, 2011, ACM T COMPUTER HUMAN
   Bederson BB, 2004, IEEE T SOFTWARE ENG, V30, P535, DOI 10.1109/TSE.2004.44
   Berger S, 2005, THIRD IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P139, DOI 10.1109/PERCOM.2005.52
   Berry L., 2005, Proceedings of the 18th annual ACM symposium on User interface software and technology, P23, DOI DOI 10.1145/1095034.1095039
   Bier E. A., 1993, Computer Graphics Proceedings, P73, DOI 10.1145/166117.166126
   GKS (Graphical Kernel System), 1984, X31241985 GKS ANS AN, P124
   Hawkey Kirstie, 2007, Proceedings Graphics Interface 2007, P215, DOI 10.1145/1268517.1268553
   Howard M., 2003, Writing Secure Code
   Izadi S., 2006, User Interface Software and Technology (UIST '03), P159
   Microsoft Corporation Silverlight, 2010, SILV
   Olsen DR, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P251
   Olsen DR, P SIGCHI C HUM FACT, P191, DOI http://doi.acm.org/10.1145/302979.303038
   Oprea A., 2004, Proceedings. 20th Annual Computer Security Applications Conference, P438
   Oracle Corporation, 2010, JAVAFX
   Petzold C., 2006, Applications = Code + Markup: A Guide to the Microsoft Windows Presentation Foundation
   Raja F., 2009, Proceedings of the 27th international conference extended abstracts on Human Factors in Computing Systems (CHI EA'09), P4633, DOI [DOI 10.1145/1520340, 10.1145/1520340]
   Richardson T, 1998, IEEE INTERNET COMPUT, V2, P33, DOI 10.1109/4236.656066
   SCHEIFLER RW, 1986, ACM T GRAPHIC, V5, P79, DOI 10.1145/22949.24053
   Sharp R, 2006, LECT NOTES COMPUT SC, V3968, P238
   Sharp R, 2008, MOBISYS'08: PROCEEDINGS OF THE SIXTH INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P94
   SHUEY D, 1986, IEEE COMPUT GRAPH, V6, P50, DOI 10.1109/MCG.1986.276770
   Tarasewich P., 2006, CHI '06 Extended Abstracts on Human Factors in Computing Systems (CHI 2006), P1409, DOI DOI 10.1145/1125451.1125711
   Tritsch B., 2003, Microsoft Windows Server 2003 Terminal Services
   Want R., 2002, LNCS, V2498, P223
   Yue CA, 2009, UBICOMP'09: PROCEEDINGS OF THE 11TH ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P125
NR 27
TC 2
Z9 3
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2012
VL 42
IS 5
BP 601
EP 628
DI 10.1002/spe.1085
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 919AN
UT WOS:000302293100005
DA 2024-07-18
ER

PT J
AU Salehie, M
   Tahvildari, L
AF Salehie, Mazeiar
   Tahvildari, Ladan
TI Towards a goal-driven approach to action selection in self-adaptive
   software
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE self-adaptive software; goal-driven model; run-time action selection
ID PERFORMANCE PREDICTION; ARCHITECTURE; SYSTEM
AB Self-adaptive software is a closed-loop system, since it continuously monitors its context (i.e. environment) and/or self (i.e. software entities) in order to adapt itself properly to changes. We believe that representing adaptation goals explicitly and tracing them at run-time are helpful in decision making for adaptation. While goal-driven models are used in requirements engineering, they have not been utilized systematically yet for run-time adaptation. To address this research gap, this article focuses on the deciding process in self-adaptive software, and proposes the Goal-Action-Attribute Model (GAAM). An action selection mechanism, based on cooperative decision making, is also proposed that uses GAAM to select the appropriate adaptation action(s). The emphasis is on building a light-weight and scalable run-time model which needs less design and tuning effort comparing with a typical rule-based approach. The GAAM and action selection mechanism are evaluated using a set of experiments on a simulated multi-tier enterprise application, and two sample ordinal and cardinal action preference lists. The evaluation is accomplished based on a systematic design of experiment and a detailed statistical analysis in order to investigate several research questions. The findings are promising, considering the obtained results, and other impacts of the approach on engineering self-adaptive software. Although, one case study is not enough to generalize the findings, and the proposed mechanism does not always outperform a typical rule-based approach, less effort, scalability, and flexibility of GAAM are remarkable. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Salehie, Mazeiar; Tahvildari, Ladan] Univ Waterloo, Dept Elect & Comp Engn, Software Technol Appl Res Grp, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Salehie, M (corresponding author), Univ Waterloo, Dept Elect & Comp Engn, Software Technol Appl Res Grp, Waterloo, ON N2L 3G1, Canada.
EM msalehie@uwaterloo.ca
CR [Anonymous], 2003, P 9 C HOT TOP OP SYS
   [Anonymous], 2007, Applied nonparametric statistical methods
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 1980, TOPICS THEORY VOTING
   Arkin R., 1998, BEHAV BASED ROBOTICS
   Asadollahi R, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P58, DOI 10.1109/SEAMS.2009.5069074
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   BRAMS SJ, 1978, AM POLIT SCI REV, V72, P831, DOI 10.2307/1955105
   BROOKS RA, 1986, IEEE T ROBOTIC AUTOM, V2, P14, DOI 10.1109/JRA.1986.1087032
   Brown G., 2006, ACM 2006 International Workshop on Self-Adaptation and Self-Managing Systems (SEAMS 2006), P23
   Campbell D.T., 2001, Experimental and quasiexperimental designs for generalized causal inference
   Candea G, 2004, PERFORM EVALUATION, V56, P213, DOI 10.1016/j.peva.2003.07.007
   Chen SP, 2005, J SYST SOFTWARE, V74, P35, DOI 10.1016/j.jss.2003.05.005
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Curiel I, 1997, GAME THEORY APPL COO
   Finkelstein A., 2008, REQUIREMENTS REFLECT
   Gat E, 1998, ARTIFICIAL INTELLIGENCE AND MOBILE ROBOTS, P195
   Gjorven E., 2006, Autonomic and Autonomous Systems, P9
   Glinz M, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.42
   Goldsby HJ, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P36, DOI 10.1109/ECBS.2008.22
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Ignizio J.P., 1976, GOAL PROGRAMMING EXT
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Keeney R. L., 1976, DECISION MULTIPLE OB
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Laddaga R., 1997, 9812 DARPA BAA
   Lapouchnian Alexei., 2006, CASCON 06, P7
   Lapouchnian Alexei., 2005, DEAS 05, P1
   Maes P., 1990, Robotics and Autonomous Systems, V6, P49, DOI 10.1016/S0921-8890(05)80028-4
   Maes Pattie, 1994, Artificial Life, V1, P135
   Mas-Colell A., 1995, MICROECONOMIC THEORY, V1
   Mathworks, 2011, MATL STATFL TOOLB
   Mathworks, 2011, MATL SIM TOOLB
   McCann JA, 2006, KNOWL ENG REV, V21, P239, DOI 10.1017/S0269888906000853
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Menascé DA, 2005, LECT NOTES COMPUT SC, V3460, P128
   Morandini M., 2008, P 2008 INT WORKSH SO, P9, DOI [10.1145/1370018.1370021, DOI 10.1145/1370018.1370021]
   NURMI H, 1987, COMPARING VOTING SYS
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Pokahr A, 2005, MU S ART SOC SIM ORG, V15, P149, DOI 10.1007/0-387-26350-0_6
   Rao A. S., 1995, ICMAS-95 Proceedings. First International Conference on Multi-Agent Systems, P312
   Rosenblatt JK, 1997, J EXP THEOR ARTIF IN, V9, P339, DOI 10.1080/095281397147167
   Roy B.M., 1996, MULTICRITERIA METHOD
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Salehie M., 2005, Proceedings Workshop on Design and Evolution of Autonomic Application Software, P82
   Salehie M, 2009, THESIS U WATERLOO
   SALEHIE M, 2007, UWECE200717
   Salehie M, 2007, FIRST IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS, P328, DOI 10.1109/SASO.2007.4
   Salehie M, 2007, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSECOMPANION.2007.13
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Sinreich D., 2006, Technical Report,
   Srivastava B, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P331
   Subramanian N., 2001, P 4 INT WORKSHOP PRI, P52
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 56
TC 35
Z9 40
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2012
VL 42
IS 2
BP 211
EP 233
DI 10.1002/spe.1066
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 880OQ
UT WOS:000299417200004
OA Green Published
DA 2024-07-18
ER

PT J
AU Saidis, K
   Smaragdakis, Y
   Delis, A
AF Saidis, Kostas
   Smaragdakis, Yannis
   Delis, Alex
TI DOLAR: virtualizing heterogeneous information spaces to support their
   expansion
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE information space expansion; virtual objects; service reuse and ROI
ID MODEL; SYSTEMS
AB Users expect applications to successfully cope with the expansion of information as necessitated by the continuous inclusion of novel types of content. Given that such content may originate from 'notseen thus far' data collections and/or data sources, the challenging issue is to achieve the return of investment on existing services, adapting to new information without changing existing business-logic implementation. To address this need, we introduce DOLAR (Data Object Language And Runtime), a service-neutral framework which virtualizes the information space to avoid invasive, time-consuming, and expensive source-code extensions that frequently break applications. Specifically, DOLAR automates the introduction of new business-logic objects in terms of the proposed virtual 'content objects'. Such user-specified virtual objects align to storage artifacts and help realize uniform 'store-to-user' data flows atop heterogeneous sources, while offering the reverse 'user-to-store' flows with identical effectiveness and ease of use. In addition, the suggested virtual object composition schemes help decouple business logic from any content origin, storage and/or structural details, allowing applications to support novel types of items without modifying their service provisions. We expect that content-rich applications will benefit from our approach and demonstrate how DOLAR has assisted in the cost-effective development and gradual expansion of a production-quality digital library. Experimentation shows that our approach imposes minimal overheads and DOLAR-based applications scale as well as any underlying datastore(s). Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Saidis, Kostas; Smaragdakis, Yannis; Delis, Alex] Univ Athens, Dept Informat & Telecommun, Athens 15784, Greece.
   [Smaragdakis, Yannis] Univ Massachusetts, Dept Comp Sci, Amherst, MA 01003 USA.
C3 National & Kapodistrian University of Athens; University of
   Massachusetts System; University of Massachusetts Amherst
RP Delis, A (corresponding author), Univ Athens, Dept Informat & Telecommun, Athens 15784, Greece.
EM ad@di.uoa.gr
RI Smaragdakis, Yannis/AAM-2851-2021
FU National Science Foundation [CCF-0917774, CCF-0934631]
FX Yannis Smaragdakis was supported by the National Science Foundation
   under grants CCF-0917774 and CCF-0934631.
CR AGARWAL S, 1995, OOPSLA WORKSH OBJ DA
   Agosti M, 2008, ACM T INFORM SYST, V26, DOI 10.1145/1292591.1292594
   [Anonymous], REF MOD OP ARCH INF
   [Anonymous], 1997, DESIGN PATTERNS ELEM
   [Anonymous], INTRO OBJECT ORIENTE
   Arms W. Y., 1997, D-Lib Magazine
   Bainbridge D, 2004, LECT NOTES COMPUT SC, V3232, P1
   Bekaert J, 2005, MULTIMEDIA SYST, V10, P286, DOI 10.1007/s00530-005-0163-x
   Bergmans L, 2001, COMMUN ACM, V44, P51, DOI 10.1145/383845.383857
   Blanchi C., 2001, D-Lib Magazine, V7, DOI 10.1045/december2001-blanchi
   Bohn R.E., 2009, How much information? 2009 report on American consumers
   Candela Leonardo, 2007, D-Lib Magazine, V13, DOI 10.1045/march2007-castelli
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   Chandrasekaran B, 1999, IEEE INTELL SYST APP, V14, P20, DOI 10.1109/5254.747902
   Dijkstra E.W., 1982, EWD 447: On the role of scientific thought. Selected Writings on Computing: A Personal Perspective, P60, DOI DOI 10.1007/978-1-4612-5695-3
   Fowler M., 2003, Patterns of Enterprise Application Architecture. A Martin Fowler signature book
   Garcia-Molina H., 1997, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V8, P117, DOI 10.1023/A:1008683107812
   Gonçalves MA, 2004, ACM T INFORM SYST, V22, P270, DOI 10.1145/984321.984325
   Gupta A., 1996, Advances in Database Technology - EDBT '96. 5th International Conference on Extending Database Technology. Proceedings, P140, DOI 10.1007/BFb0014149
   Halevy AY, 2001, VLDB J, V10, P270, DOI 10.1007/s007780100054
   Hudak P., 1996, ACM COMPUT SURV, V28, P196, DOI [10.1145/242224.242477, DOI 10.1145/242224.242477]
   Hull R., 1996, SIGMOD Record, V25, P481, DOI 10.1145/235968.233365
   [IDF] International DOI Foundation, 2018, DOI HDB, DOI [10.1000/182, DOI 10.1000/182]
   Kahn R, 2006, INT J DIGIT LIBRARIE, V6, P115, DOI 10.1007/s00799-005-0128-x
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Kuang Chen, 2009, Proceedings of the 2009 International Conference on Information and Communication Technologies and Development (ICTD 2009), DOI 10.1109/ICTD.2009.5426738
   Kumar A, 2004, ACM-IEEE J CONF DIG, P2, DOI 10.1145/996350.996354
   LAGOZE C., 2001, P 1 ACMIEEE CS JOINT, P54, DOI DOI 10.1145/379437.379449
   Lagoze C, 2006, INT J DIGIT LIBRARIE, V6, P124, DOI 10.1007/s00799-005-0130-3
   Lenzerini  M., 2002, P 21 ACM SIGMOD SIGA
   Lesk M., 1997, MUCH INFORM IS THERE
   Lieberman H, 2006, LECT NOTES COMPUT SC, V4067, P192
   Lukovic I, 2007, SOFTWARE PRACT EXPER, V37, P1621, DOI 10.1002/spe.820
   MANOLA F, 2004, RESOURCE DESCRIPTION
   McDonough JP, 2006, INT J DIGIT LIBRARIE, V6, P148, DOI 10.1007/s00799-005-0132-1
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Nelson ML, 1999, LECT NOTES COMPUT SC, V1696, P453
   Ossher H., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P734, DOI 10.1109/ICSE.2000.870483
   Ossher H, 2001, COMMUN ACM, V44, P43, DOI 10.1145/383845.383856
   OTIS A, 1991, COMP STAND INTER, V13, P19, DOI 10.1016/0920-5489(91)90006-L
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Parsons D, 2006, SOFTWARE PRACT EXPER, V36, P157, DOI 10.1002/spe.694
   Roth MT, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P266
   Saidis Kostas, 2007, D-Lib Magazine, V13, DOI 10.1045/may2007-saidis
   Santanchè A, 2007, IEEE T KNOWL DATA EN, V19, P324, DOI 10.1109/TKDE.2007.16
   Sehring HW, 2004, LECT NOTES COMPUT SC, V3255, P99
   Shadbolt N, 2006, IEEE INTELL SYST, V21, P96, DOI 10.1109/MIS.2006.62
   Shao F., 2007, P 33 INT C VERY LARG, P1057
   Suleman H., 2002, Research and Advanced Technology for Digital Libraries. 6th European Conference, ECDL 2002. Proceedings (Lecture Notes in Computer Science Vol.2458), P568
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Ullman JD, 2000, THEOR COMPUT SCI, V239, P189, DOI 10.1016/S0304-3975(99)00219-4
   Van de Sompel H, 2005, COMPUT J, V48, P514, DOI 10.1093/comjnl/bxh114
   Vodislav D, 2006, LECT NOTES COMPUT SC, V4275, P72
   Wile D. S., 2001, Journal of Computing and Information Technology - CIT, V9, P263, DOI 10.2498/cit.2001.04.01
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 66
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2011
VL 41
IS 11
BP 1349
EP 1383
DI 10.1002/spe.1050
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827RZ
UT WOS:000295446900009
DA 2024-07-18
ER

PT J
AU Gonzalez-Sanchez, A
   Piel, É
   Abreu, R
   Gross, HG
   van Gemund, AJC
AF Gonzalez-Sanchez, Alberto
   Piel, Eric
   Abreu, Rui
   Gross, Hans-Gerhard
   van Gemund, Arjan J. C.
TI Prioritizing tests for software fault diagnosis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE test prioritization; testing; diagnosis
ID ALGORITHMS; TESTABILITY
AB During regression testing, test prioritization techniques select test cases that maximize the confidence on the correctness of the system when the resources for quality assurance (QA) are limited. In the event of a test failing, the fault at the root of the failure has to be localized, adding an extra debugging cost that has to be taken into account as well. However, test suites that are prioritized for failure detection can reduce the amount of useful information for fault localization. This deteriorates the quality of the diagnosis provided, making the subsequent debugging phase more expensive, and defeating the purpose of the test cost minimization. In this paper we introduce a new test case prioritization approach that maximizes the improvement of the diagnostic information per test. Our approach minimizes the loss of diagnostic quality in the prioritized test suite. When considering QA cost as a combination of testing cost and debugging cost, on our benchmark set, the results of our test case prioritization approach show reductions of up to 60% of the overall combined cost of testing and debugging, compared with the next best technique. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Gonzalez-Sanchez, Alberto; Piel, Eric; Gross, Hans-Gerhard; van Gemund, Arjan J. C.] Delft Univ Technol, Dept Software Technol, NL-2600 AA Delft, Netherlands.
   [Abreu, Rui] Univ Porto, Fac Engn, Dept Informat Engn, Oporto, Portugal.
C3 Delft University of Technology; Universidade do Porto
RP Gonzalez-Sanchez, A (corresponding author), Delft Univ Technol, Dept Software Technol, NL-2600 AA Delft, Netherlands.
EM a.gonzalezsanchez@tudelft.nl
RI Abreu, Rui/K-7048-2019; Abreu, Rui/A-8119-2015
OI Abreu, Rui/0000-0003-3734-3157; Abreu, Rui/0000-0003-3734-3157
FU Dutch Ministry of Economic Affairs [BSIK03021]
FX The authors thank their partners in the Poseidon project in the Embedded
   Systems Institute (ESI). This project is partially supported by the
   Dutch Ministry of Economic Affairs under the BSIK03021 program. We also
   thank our anonymous reviewers for their helpful comments and insights,
   which greatly improved the quality of this paper.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   [Anonymous], EV COMP CEC 2010 IEE
   Baah GeorgeK., 2008, P 2008 INT S SOFTWAR, P189, DOI DOI 10.1145/1390630.1390654
   Baudry B., 2006, Improving test suites for efficient fault localization, P82
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   Chittimalli PK, 2009, IEEE T SOFTWARE ENG, V35, P452, DOI 10.1109/TSE.2009.4
   de Kleer J, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P733
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   FELDMAN A, 2009, IJCAI 09 P 21 INT JO, P778
   FREEDMAN RS, 1991, IEEE T SOFTWARE ENG, V17, P553, DOI 10.1109/32.87281
   Gonzalez-Sanchez Alberto, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P42, DOI 10.1109/QSIC.2010.28
   Hao D, 2005, PROC IEEE INT CONF S, P683
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Janssem T, 2009, IEEE INT CONF AUTOM, P662, DOI 10.1109/ASE.2009.27
   JIANG B, 2009, COMPSAC 09 P 2009 3, P99
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Johnson R.A., 1960, IRE T RELIAB QUAL, VRQC-9, P35, DOI [DOI 10.1109/IRE-PGRQC.1960.5007263, 10.1109/IRE-PGRQC.1960.5007263]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liang Zhao, 2006, 28th International Conference on Software Engineering Proceedings, P985, DOI 10.1145/1134285.1134469
   LIBLIT B, 2008, ISSTA 08 P 2008 INT, P119
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Nica M, 2010, LECT NOTES COMPUT SC, V6303, P88, DOI 10.1007/978-3-642-15585-7_9
   Offutt A. J., 1996, SIGSOFT Software Engineering Notes, V21, P195, DOI [10.1145/229000.226317, 10.1145/226295.226317]
   Pietersma J, 2007, IEEE INSTRU MEAS MAG, V10, P46, DOI 10.1109/MIM.2007.364961
   Raghavan V, 1999, IEEE T SYST MAN CY A, V29, P347, DOI 10.1109/3468.769753
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Shakeri M, 2000, IEEE T SYST MAN CY A, V30, P1, DOI 10.1109/3468.823474
   SMITH AM, 2009, SAC 09 P 2009 ACM S, P461
   VOAS JM, 1993, J SYST SOFTWARE, V20, P207, DOI 10.1016/0164-1212(93)90064-5
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Woodward M. R., 2000, Software Engineering Notes, V25, P168, DOI 10.1145/347636.349016
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
NR 45
TC 24
Z9 28
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2011
VL 41
IS 10
SI SI
BP 1105
EP 1129
DI 10.1002/spe.1065
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 818RV
UT WOS:000294773600006
DA 2024-07-18
ER

PT J
AU von Dincklage, D
   Diwan, A
AF von Dincklage, Daniel
   Diwan, Amer
TI Integrating program analyses with programmer productivity tools
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE program analyses; analysis communication; programmer interaction
ID TRANSFORMATION
AB Because software continues to grow in size and complexity, programmers increasingly rely on productivity tools to understand, debug, and modify their programs. These tools typically use program analyses to produce information for the programmer. This is problematic because it is based on the assumption that the programmer and program analyses all use the same vocabulary. If the programmer and analyses did not use the same vocabulary then the results of the analyses will be meaningless to the programmer. For example, 'v124 may be NULL' does not mean much to the programmer but 'myStack may be NULL' is meaningful. Often, the programmer and analyses prefer different vocabularies. While the programmer prefers his programs' source code, an analysis will prefer a simplified representation. Unfortunately, writing an analysis that works on the source code is difficult because the analysis must deal with the idiosyncracies of the source language (e. g. nested classes). In comparison, writing an analysis on SSA form is easy but the output of the analysis is not meaningful to the programmer; it must somehow be translated into something the programmer understands. We present a system, RTalk, that makes it easy to support both the programmers' and the analysis' needs. RTalk generates a translator between the programmers' and the analysis' vocabulary. Thus both the programmer and the analysis can use the vocabulary most natural to them. We demonstrate the effectiveness of RTalk by describing program understanding and program optimization tools that we have already built using RTalk. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [von Dincklage, Daniel] Google Inc, Mountain View, CA 94043 USA.
   [Diwan, Amer] Univ Colorado, Dept Comp Sci, Boulder, CO 80301 USA.
C3 Google Incorporated; University of Colorado System; University of
   Colorado Boulder
RP von Dincklage, D (corresponding author), Google Inc, 1600 Amphitheatre Pkwy, Mountain View, CA 94043 USA.
EM danielvd@google.com
CR ADLTABATABAI AR, 1996, SIGPLAN C PROGR LANG, P33
   [Anonymous], THESIS YALE U
   AYEWAH N, 2007, OOPSLA 07, P805
   Burke M. G., 1999, Proceedings of the ACM 1999 Java Grande Conference, P129, DOI 10.1145/304065.304113
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   FLANAGAN C, 2002, P ACM SIGPLAN 2002 C, P234
   Fowler M., 2000, REFACTORING, P75
   FRADET P, 1991, ACM T PROGR LANG SYS, V13, P21, DOI 10.1145/114005.102805
   JONES SP, 1994, FUNCTIONAL PROGRAMMI
   Klint P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P176, DOI 10.1145/151257.151260
   KRANZ D, 1986, SIGPLAN S COMPILER C, P219
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   NIELSON F, 2005, PRINCIPLES PROGRAM A, P2
   REICHENBACH C, 2009, P 23 EUR C OBJ OR PR, P318
   SHAVOR S, 2003, JAVA DEV GUIDE ECLIP
   *STAND PERF EV COR, SPECJBB2000
   STEENSGAARD B, 1996, S PRINC PROGR LANG, P32
   STROUT MM, 2005, P 6 ACM SIGPLAN SIGS, P67
   VAN DEURSEN A, 1993, J SYMB COMPUT, V15, P523, DOI 10.1016/S0747-7171(06)80004-0
   Visser E, 2003, LECT NOTES COMPUT SC, V3016, P216
   von Dincklage D, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P409
   von Dincklage D, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P260, DOI 10.1145/1375581.1375614
   VONDINCKLAGE D, 2004, ACM S OBJ OR PROGR S, P1
   [No title captured]
NR 26
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2011
VL 41
IS 7
BP 817
EP 840
DI 10.1002/spe.1035
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 766TV
UT WOS:000290810300004
DA 2024-07-18
ER

PT J
AU Behrmann, G
   David, A
   Larsen, KG
   Pettersson, P
   Yi, W
AF Behrmann, Gerd
   David, Alexandre
   Larsen, Kim Guldstrand
   Pettersson, Paul
   Yi, Wang
TI Developing UPPAAL over 15 years
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE UPPAAL; real-time; model-checker; development
ID MODEL-CHECKING; TIMED AUTOMATA; VERIFICATION; ALGORITHMS; PROTOCOL;
   DESIGN; TOOL
AB UPPAAL is a tool suitable for model checking real-time systems described as networks of timed automata communicating by channel synchronizations and extended with integer variables. Its first version was released in 1995 and its development is still very active. It now features an advanced modeling language, a user-friendly graphical interface, and a performant model checker engine. In addition, several flavors of the tool have matured in recent years. In this paper, we present how we managed to maintain the tool during 15 years, its current architecture with its challenges, and we give the future directions of the tool. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [David, Alexandre; Larsen, Kim Guldstrand] Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
   [Behrmann, Gerd] NORDUnet AS, Copenhagen, Denmark.
   [Pettersson, Paul] Malardalen Univ, Malardalen Res & Technol Ctr, Vasteras, Sweden.
   [Yi, Wang] Uppsala Univ, Dept Informat Technol, Uppsala, Sweden.
C3 Aalborg University; Malardalen University; Uppsala University
RP David, A (corresponding author), Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
EM adavid@cs.aau.dk
OI Guldstrand Larsen, Kim/0000-0002-5953-3384; Pettersson,
   Paul/0000-0003-4040-3480
CR AlAttili I, 2009, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.13.1
   ALUR R, 1990, LECT NOTES COMPUT SC, V443, P322, DOI 10.1007/BFb0032042
   Amnell T, 2002, LECT NOTES COMPUT SC, V2280, P460
   [Anonymous], THESIS U TWENTE
   Arnaud Y., 2009, 7 WORKSH ADV CONTR D
   Beauquier D, 2003, THEOR COMPUT SCI, V292, P65, DOI 10.1016/S0304-3975(01)00215-8
   Behrmann G., 2004, Formal Methods for Components and Objects. Third International Symposium, FMCO 2004. Revised Lectures (Lecture Notes in Computer Science Vol. 3657), P162
   Behrmann G., 2001, Hybrid Systems: Computation and Control. 4th International Workshop, HSCC 2001. Proceedings (Lecture Notes in Computer Science Vol.2034), P147
   BEHRMANN G, LECT NOTES COMPUTER, V2648, P225
   BEHRMANN G, 2001, LECT NOTES COMPUTER, V2301, P174
   Behrmann G, 2007, LECT NOTES COMPUT SC, V4590, P121
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Bengtsson J, 2002, J LOGIC ALGEBR PROGR, V52-3, P163, DOI 10.1016/S1567-8326(02)00036-X
   Bulychev P, 2009, LECT NOTES COMPUT SC, V5813, P73, DOI 10.1007/978-3-642-04368-0_8
   Cassez F, 2005, LECT NOTES COMPUT SC, V3653, P66, DOI 10.1007/11539452_9
   Cassez F, 2007, LECT NOTES COMPUT SC, V4762, P192
   DArgenio PR, 1997, LECT NOTES COMPUT SC, V1217, P416, DOI 10.1007/BFb0035403
   David A, 2002, LECT NOTES COMPUT SC, V2306, P218
   David A, 2000, EUROMICRO, P165, DOI 10.1109/EMRTS.2000.854004
   DAVID A, 2008, 4 WORKSH MOD BAS TES
   David A, 2006, LECT NOTES COMPUT SC, V4202, P128
   ERICSSON A, 2008, 1 INT WORKSH COMPL E, P1613
   Fersman E, 2002, LECT NOTES COMPUT SC, V2280, P67
   Gebremichael B, 2006, P 6 ANN ACM IEEE C E, P242
   Håkansson J, 2007, LECT NOTES COMPUT SC, V4763, P211
   Håkansson J, 2008, LECT NOTES COMPUT SC, V5311, P252, DOI 10.1007/978-3-540-88387-6_23
   Hamberg Roelof, 2008, Operating Systems Review, V42, P101, DOI 10.1145/1453775.1453793
   Heidarian F, 2009, LECT NOTES COMPUT SC, V5850, P516, DOI 10.1007/978-3-642-05089-3_33
   Hessel A, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P268
   Hessel A., 2007, Testing of Software and Communicating Systems: Work-in-Progress and Position Papers, Tool Demonstrations, and Tutorial Abstracts of TestCom/FATES, P31
   Jessen JJ, 2007, LECT NOTES COMPUT SC, V4763, P227
   Krichen M, 2004, LECT NOTES COMPUT SC, V2989, P109
   Kwiatkowska M, 2004, LECT NOTES COMPUT SC, V3253, P293
   LARSEN K, 2004, LECT NOTES COMPUTER, P79
   Larsen K.G., 2005, Proceedings of the 5th ACM international conference on Embedded software, P299, DOI DOI 10.1145/1086228.1086283
   Larsen KG, 1997, REAL TIM SYST SYMP P, P14, DOI 10.1109/REAL.1997.641265
   LARSEN KG, 1995, LNCS, V965, P62, DOI DOI 10.1007/3-540-60249-6
   Larsson F, 2000, LECT NOTES COMPUT SC, V1785, P127
   Lindahl M, 1998, LECT NOTES COMPUT SC, V1384, P281, DOI 10.1007/BFb0054178
   Liu XX, 1998, LECT NOTES COMPUT SC, V1443, P53
   Lonn H, 1997, PACIFIC RIM INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT SYSTEMS, PROCEEDINGS, P235, DOI 10.1109/PRFTS.1997.640153
   Shann CH, 2000, SEVENTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P470, DOI 10.1109/ICPADS.2000.857731
   Yi W., 1994, PROC 7 INT C FORMAL, P223, DOI [10.1007/978-0-387-34878-018, DOI 10.1007/978-0-387-34878-018]
   [No title captured]
NR 44
TC 53
Z9 58
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2011
VL 41
IS 2
SI SI
BP 133
EP 142
DI 10.1002/spe.1006
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718FH
UT WOS:000287106000002
DA 2024-07-18
ER

PT J
AU del Amo, IJG
   Pelta, DA
   Masegosa, AD
   Verdegay, JL
AF del Amo, Ignacio J. G.
   Pelta, David A.
   Masegosa, Antonio D.
   Verdegay, Jose L.
TI A software modeling approach for the design and analysis of cooperative
   optimization systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software modeling; cooperative optimization system; eclipse modeling
   framework
AB Optimization problems are ubiquitous in our daily lives and one way to cope with them is using cooperative optimization systems that allow to obtain good enough, fast enough, and cheap enough solutions. From a practical point of view, the design and the analysis of such systems are complex tasks. In this work, an integrated system (DACOS) for helpings in the design and analysis of cooperative, centralized optimization systems is presented. Also, the methodology used for the creation of DACOS (mainly, the use of software modeling.) is described in detail. This may also be useful for researchers who want to build up their own system for their particular needs. DACOS has been developed using the Eclipse developing framework, which, among other advantages, is also able to automatically generate source code. Finally, a practical case of use is presented: the application of DACOS to the configuration and analysis of a cooperative strategy on a location problem. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [del Amo, Ignacio J. G.; Pelta, David A.; Masegosa, Antonio D.; Verdegay, Jose L.] Univ Granada, Dept Comp Sci & Artificial Intelligence, Models Decis & Optimizat MODO Res Grp, E-18071 Granada, Spain.
C3 University of Granada
RP del Amo, IJG (corresponding author), Univ Granada, Dept Comp Sci & Artificial Intelligence, Models Decis & Optimizat MODO Res Grp, E-18071 Granada, Spain.
EM ngdelamo@decsai.ugr.es
RI Verdegay, Jose-Luis/B-1852-2012; Pelta, David/B-6978-2008; Masegosa,
   Antonio D./AAA-7848-2019; Verdegay, Jose Luis/I-8402-2014; Pelta, David
   A./ABG-9763-2020
OI Masegosa, Antonio D./0000-0001-7759-9072; Pelta, David
   A./0000-0002-7653-1452
FU Spanish Ministry of Science and Innovation [TIN2008-01948]; Andalusian
   Government [TIC-02970, P07-TIC-02970]; Spanish Ministry of Science and
   Technology
FX This work has been partially funded by the project TIN2008-01948 from
   the Spanish Ministry of Science and Innovation and TIC-02970 from the
   Andalusian Government. Ignacio J. G. del Amo is supported by a
   scholarship associated to the excellence project P07-TIC-02970 from the
   Andalusian Government. Antonio D. Masegosa is supported by the
   scholarship program FPI from the Spanish Ministry of Science and
   Technology.
CR [Anonymous], 2013, Wiley Series in Discrete Mathematics and Optimization
   CAMPBELL J, 2001, LOCATION THEORY APPL
   Crainic TG, 2004, J HEURISTICS, V10, P293, DOI 10.1023/B:HEUR.0000026897.40171.1a
   Cruz C, 2009, APPL SOFT COMPUT, V9, P30, DOI 10.1016/j.asoc.2007.12.007
   GAMMA E, 1995, DESIGN PATTERNS
   James T, 2009, EUR J OPER RES, V195, P810, DOI 10.1016/j.ejor.2007.06.061
   MASEGOSA A, 2009, STUDIES COMPUTATIONA, V236
   McAffer Jeff., 2006, Eclipse Rich Client Platform: Designing, Coding, and Packaging Java
   NIETO J, 2007, ACM P GEN EV C GECCO
   Pelta D, 2006, INFORM SCIENCES, V176, P1849, DOI 10.1016/j.ins.2005.06.007
   Pelta DA, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-161
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Toulouse M, 2004, PARALLEL COMPUT, V30, P57, DOI 10.1016/j.parco.2002.07.001
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   2008, BIRT BUSINESS INTELL
NR 15
TC 1
Z9 1
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2010
VL 40
IS 9
BP 811
EP 823
DI 10.1002/spe.984
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 635WF
UT WOS:000280687400004
DA 2024-07-18
ER

PT J
AU Parrend, P
   Frenot, S
AF Parrend, P.
   Frenot, S.
TI Security benchmarks of OSGi platforms: toward Hardened OSGi
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software security assurance; software vulnerabilities; security
   benchmark; OSGi component framework; component platform; dependability
AB OSGi platforms are extensible component platforms, i.e. they support the dynamic and transparent installation of components that are provided by third party providers at runtime. This feature makes systems built using OSGi extensible and adaptable, but opens a dangerous attack vector that has not been considered as such until recently. Performing a security benchmark of the OSGi platform is therefore necessary to gather knowledge related to the weaknesses it introduces as well as to propose enhancements. A suitable Vulnerability Pattern is defined. The attacks that can be performed through malicious OSGi components are identified. Quantitative analysis is then performed so as to characterize the origin of the vulnerabilities and the target and consequences of the attacks. The assessment of the security status of the various implementations of the OSGi platform and of existing security mechanisms is done through a metric we introduce, the Protection rate (PR). Based on these benchmarks, OSGi-specific security enhancements are identified anti evaluated. First recommendations are given. Then evaluation is performed through the PR metric and performance analysis. Lastly, further requirements for building secure OSGi platforms are identified. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Parrend, P.] Forschungszentrum Informat, D-76131 Karlsruhe, Germany.
   [Frenot, S.] Inst Natl Sci Appl, INRIA Amazones CITI, F-69621 Villeurbanne, France.
C3 Institut National des Sciences Appliquees de Lyon - INSA Lyon
RP Parrend, P (corresponding author), Forschungszentrum Informat, Haid & Neu Str 10-14, D-76131 Karlsruhe, Germany.
EM parrend@fzi.de
RI Parrend, Pierre/AAJ-8659-2021
OI Parrend, Pierre/0000-0002-1680-1182
FU ANR-LISE Project [ANR-07-SESU_007]
FX Contract/grant sponsor: ANR-LISE Project contract/grant number:
   ANR-07-SESU_007
CR [Anonymous], OSGI SERV PLATF COR
   [Anonymous], 1989, 12 NATL COMPUTER SEC
   ARNOLD TF, 1973, IEEE T COMPUT, VC 22, P251, DOI 10.1109/T-C.1973.223703
   ARVIDSSON J, 2001, 3067 IETF RFC
   ASLAM T, 1995, THESIS PURDUE U PURD, P120
   Bieber Guy., 2001, Introduction to service-oriented programming
   BLACK PE, 2005, P 2005 INT C SOFTW E
   Bloch J., 2001, EFFECTIVE JAVA PROGR
   Bloch Joshua, 2005, Java Puzzlers: Traps, Pitfalls, and Corner Cases
   BRYCE C, 2004, NEW APPROACH MULTI P
   COTRONEO D, 2006, 26 IEEE INT C DISTR
   Czajkowski G, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P85
   CZAJKOWSKI G, 2003, TR2003124 SMLI
   Dean D, 1996, P IEEE S SECUR PRIV, P190, DOI 10.1109/SECPRI.1996.502681
   Drossopoulou S, 1997, LECT NOTES COMPUT SC, V1241, P389, DOI 10.1007/BFb0053388
   *EISPP CONS, 2003, EISPPD3001TR
   Gamma Erich., 1994, DESIGN PATTERNS
   GONG L, 2003, INSIDE JAVA 2 PLATFO
   GONG L, 1997, P USENIX S INT TECHN
   HALL RS, 2006, 112 OSGI ALL RFC
   HOWARD M, 2005, MEASURING RELATIVE A, P109
   HOWES T, 1997, STRING REPRESENTATIO, P2254
   Huang CC, 2007, 21ST INTERNATIONAL CONFERENCE ON ADVANCED NETWORKING AND APPLICATIONS WORKSHOPS/SYMPOSIA, VOL 2, PROCEEDINGS, P518
   Jensen T, 1998, 1998 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, PROCEEDINGS, P4, DOI 10.1109/ICCL.1998.674152
   *JSR 118 EXP GROUP, 2002, MIDP 2 0
   Lindholm T., 1999, JAVA TM VIRTUAL MACH, V2nd
   Lindqvist U, 1997, P IEEE S SECUR PRIV, P154, DOI 10.1109/SECPRI.1997.601330
   MARTIN RA, 2005, J DEFENSE SOFTWARE E, P12
   MIKKONEN T, 2007, PROGRAMMING MOBILE D, P244
   Mowbray ThomasJ., 1997, CORBA Design Patterns
   Necula G. C., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P106, DOI 10.1145/263699.263712
   *OSGI ALL RFC, 2001, 18 OSGI ALL RFC
   PARREND P, 2007, 1 IEEE WOWMOM WORKSH
   PARREND P, 2007, RR6231 INRIA, P84
   Saraswat Vijay., 1997, JAVA IS NOT TYPE SAF
   Schumacher Markus., 2003, SECURITY ENG PATTERN
   *SUN MICR INC, 2003, JAR FIL SPEC SUN JAV
   *SUN MICR INC, 2004, JVMTM TOOL INT JVMTI
   *SUN MICR INC, 2004, JAVATM VIRT MACH PRO
NR 39
TC 14
Z9 14
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2009
VL 39
IS 5
BP 471
EP 499
DI 10.1002/spe.906
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425NU
UT WOS:000264645200002
DA 2024-07-18
ER

PT J
AU Lim, SS
   Choi, JH
   Zeilenga, KD
AF Lim, Sang Seok
   Choi, Jong Hyuk
   Zeilenga, Kurt D.
TI Design, implementation, and performance analysis of PKI certificate
   repository using LDAP Component Matching
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE LDAP; component matching; X.509 certificate; PKI
AB The X.509 certificate stored in a Lightweight Directory Access Protocol (LDAP) certificate repository requires secure and flexible means to make assertions against its component values such as the identity of its owner, issuer, and the intended usage of the public key contained therein. LDAP has traditionally lacked this ability because its string-based encodings do not have a standardized way of carrying structural information of complex syntaxes as in X.500. The traditional remedies to this limitation are (1) to provide certificate-specific matching for a limited set of components and their combinations and (2) to extract and store the certificate components in separate searchable attributes. Neither of these remedies is considered complete, because the former lacks flexibility while the latter heightens complexity in managing the integrity of the certificate repository and doubles storage requirements. Owing to the significant downside of these remedies, we investigate the possibility of an Abstract Syntax Notation One-based Component Matching alternative. In this paper, we present (1) the design and implementation of the LDAP Component Matching for an OpenLDAP directory server to facilitate its use as the certificate repository in Public Key Infrastructure (PKI), (2) various optimization mechanisms to increase the performance of the Component Matching and their implementation in OpenLDAP, and (3) the detailed performance analysis of the LDAP directory server as a certificate repository in comparison with the traditional certificate-specific matching and the attribute extraction approaches. We show that Component Matching, if equipped with the optimization techniques proposed in this paper, outperforms the traditional approaches. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Lim, Sang Seok] Samsung Elect Co Ltd, Gyeonggi Do 443742, South Korea.
   [Choi, Jong Hyuk; Zeilenga, Kurt D.] IBM TJ Watson Res Ctr, Yorktown Hts, NY USA.
   [Zeilenga, Kurt D.] OpenLDAP Fdn, Carson City, NV USA.
C3 Samsung; International Business Machines (IBM)
RP Lim, SS (corresponding author), Samsung Elect Co Ltd, Dong Suwon POB 105, Gyeonggi Do 443742, South Korea.
EM sangseok.lim@samsung.com
CR [Anonymous], 1999, RFC 2560
   BOX D, 2000, W3C NOTE         MAY
   CHADWICK DW, 2004, 3876 RFC
   CHADWICK DW, 2003, 17 ANN IFIP WG 11 3
   CHOI JH, 2003, INT S PERF EV COMP T
   CHOI JH, 2005, IEEE INF ASS WORKSH
   CHOI JH, 2005, DIMACS WORKSH SEC WE
   FORD W, 2002, 3280 RFC
   HODGES J, 2002, 3377 RFC
   JOOP R, 2007, SNACC 1 2RJ
   KLASEN N, 2002, IDAPV3 SCHEMA X509 C
   LEGG S, 2004, 3687 RFC
   LEGG S, 2003, 3641 RFC
   LIM SS, 2005, PKI INT PKI R D WORK
   LIM SS, 2004, ACM WORKSH SEC WEB S
   *OASIS, 2004, 200401 OASIS
   *W3C, 2002, XML SIGN SYNT PROC
   *W3C, 2001, XML KEY MAN SPEC XKM
NR 18
TC 0
Z9 0
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2008
VL 38
IS 8
BP 827
EP 851
DI 10.1002/spe.854
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 321YA
UT WOS:000257341200003
DA 2024-07-18
ER

PT J
AU Gomes, D
   Silva, MJ
AF Gomes, Daniel
   Silva, Mario J.
TI The Viuva Negra crawler: An experience report
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE crawler; experience; harvesting; Viuva Negra; Tumba; Tomba
ID DISTRIBUTED WEB CRAWLER; DESIGN
AB This paper documents hazardous situations on the Web that crawlers must address. This knowledge was accumulated while developing and operating the Viuva Negra (VN) crawler to feed a search engine and a Web archive for the Portuguese Web for four years. The design, implementation and evaluation of the VN crawler are also presented as a case study of a Web crawler design. The case study tested provides crawling techniques that may be useful for the further development of crawlers. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Gomes, Daniel; Silva, Mario J.] Univ Lisbon, Fac Ciencias, Dept Informat, P-1749016 Lisbon, Portugal.
C3 Universidade de Lisboa
RP Gomes, D (corresponding author), Univ Lisbon, Fac Ciencias, Dept Informat, Edificio C6,Piso 3, P-1749016 Lisbon, Portugal.
EM dcg@di.fc.ul.pt
RI Silva, Mário J./H-5420-2019
OI Silva, Mário J./0000-0002-5452-6185; Gomes, Daniel/0000-0002-5447-4581
CR BAEZAYATES R, 2004, LECT NOTES COMPUTER, V3243
   Barr David., 2013, Common DNS Operational and Configuration Errors, P1, DOI DOI 10.17487/RFC1912
   Berk E, LEXICAL ANAL GENERAT
   Berners-Lee T., 2005, Uniform Resource Identifier
   Bharat K, 2000, J AM SOC INFORM SCI, V51, P1114, DOI 10.1002/1097-4571(2000)9999:9999<::AID-ASI1025>3.0.CO;2-0
   Boldi P, 2004, SOFTWARE PRACT EXPER, V34, P711, DOI 10.1002/spe.587
   BRANDMAN O, 2000, P WORKSH PERF ARCH W
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Broder AndreiZ., 2003, WWW '03, P679, DOI DOI 10.1145/775152.775247
   CAMPOS J, 2003, THESIS FACULDADE CIE
   CARVALHO ALD, 2005, S BRAS BANC DAD UBER, P25
   Chakrabarti S, 1999, COMPUT NETW, V31, P1623, DOI 10.1016/S1389-1286(99)00052-3
   Cho J, 1998, COMPUT NETWORKS ISDN, V30, P161, DOI 10.1016/S0169-7552(98)00108-1
   Cho J., 2004, STANFORD WEBBASE COM
   Cho Junghoo., 2002, WWW 02, P124, DOI [DOI 10.1145/511446.511464, 10.1145/511446.511464]
   Cho Junghoo, 2004, WWW'04, Proceedings of the 13th international conference on World Wide Web, P20, DOI DOI 10.1145/988672.988676
   Cockburn A, 2001, INT J HUM-COMPUT ST, V54, P903, DOI 10.1006/ijhc.2001.0459
   Cothey V, 2004, J AM SOC INF SCI TEC, V55, P1228, DOI 10.1002/asi.20078
   DOUGLIS F, 1997, P USENIX S INT TECHN
   EIRON N., 2004, P 13 INT C WORLD WID, P309, DOI DOI 10.1145/988672.988714
   Fielding R., 1999, 2616 RFC
   Gomes D., 2005, ACM Transactions on Internet Technology, V5, P508, DOI 10.1145/1084772.1084775
   GOMES D, 2006, LECT NOTES COMPUTER, V4172
   GOMES D, 2006, P 21 ANN ACM S APPL
   GOMES D, 2006, DIFCULTR0621 U LISB
   HABIB MA, 2000, WEBNET, P227
   HALLAMBAKER PM, 2005, SESSION IDENTIFICATI
   HANDSCHUH S, 2003, P 12 INT WORLD WID W, P431, DOI DOI 10.1145/775152.775214
   Hawking D., 2004, TREC BOOK
   Henzinger M. R., 2002, SIGIR Forum, V36, P11, DOI 10.1145/792550.792553
   Heydon A., 1999, World Wide Web, V2, P219, DOI 10.1023/A:1019213109274
   *ICANN, ICANN VER WILD SERV
   *JAHNS, SPID TRAPS UPC ARMS
   JAIMES A, 2003, P 1 C LAT AM WEB C L
   KOHTARSA K, 2003, THESIS KASETSART U
   Koster Martijn., STANDARD ROBOT EXCLU
   LIU B, 1998, THESIS U BLACKSBURG
   LTD N, 2005, P 20 ANN ACM S APPL
   Marshak M, 2003, COMPUT COMMUN, V26, P872, DOI 10.1016/S0140-3664(02)00220-7
   MARTINS B, 2005, P 2005 IEEE WIC ACM
   MOCKAPETRIS PV, 1987, 1035 NETW WORK GROUP
   OLSEN S, 2002, CNET NEWS COM    OCT
   *OR CORP, ORACLE9I
   Paulson LD, 2005, COMPUTER, V38, P14, DOI 10.1109/MC.2005.330
   Raghavan S., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P129
   Shkapenyuk V, 2002, PROC INT CONF DATA, P357, DOI 10.1109/ICDE.2002.994750
   THELWALL M, 2002, INT J SCIENTOMETRICS, V6
   WILLS CE, 1999, P 4 INT WEB CATCH WO
   WOODRUFF A, 1996, P 5 INT WORLD WID WE, P963
   Yan HF, 2002, J SYST SOFTWARE, V60, P185, DOI 10.1016/S0164-1212(01)00091-7
NR 50
TC 2
Z9 2
U1 2
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2008
VL 38
IS 2
BP 161
EP 188
DI 10.1002/spe.825
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 268SU
UT WOS:000253600500003
DA 2024-07-18
ER

PT J
AU Chang, DW
   Hsieh, CE
   Chen, YP
   Chiu, KC
AF Chang, Da-Wei
   Hsieh, Cheng-En
   Chen, Yan-Pai
   Chiu, Kwo-Cheng
TI Virtual machine support for zero-loss Internet service recovery and
   upgrade
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE service recovery; online maintenance; virtual machine; connection
   migration
AB Software is critical for Internet service availability since an Internet service may become unavailable due to software faults or software maintenance. In this paper, we propose a framework to allow zeroloss recovery and online maintenance for Internet services. The framework is based on the virtual machine (VM) technology and a connection migration technique called FT-TCP. It can recover transient application/operating system faults and it allows fault recovery and online maintenance on a single host. The framework substantially enhances FT-TCP so that it can be run efficiently in the VM environment. Specifically, we propose techniques to reduce the inter-VM switches and communication. Moreover, we propose service-specific optimizations to reduce the recovery time of FT-TCP. Finally, the framework provides an interface for the service designers to implement more service-specific optimizations. The framework was implemented by modifying an open source VM monitor, Xen, and the Linux kernel running on top of Xen. The effectiveness and efficiency of the framework were evaluated by running two Internet services, WWW proxy and FTP, on the proposed framework and measuring the impact on their performance. According to the experimental results, our approach causes only slight performance overhead (i.e. less than 4%) and memory overhead (i.e. less than 750 KB) for both the services. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 70101, Taiwan.
   Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
C3 National Cheng Kung University; National Yang Ming Chiao Tung University
RP Chang, DW (corresponding author), Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 70101, Taiwan.
EM david.oslab@gmail.com
CR Alvisi L, 2001, IEEE INFOCOM SER, P329, DOI 10.1109/INFCOM.2001.916715
   [Anonymous], P 20 ANN IEEE INT FA
   Barham P., 2003, Operating Systems Review, V37, P164, DOI 10.1145/1165389.945462
   BROWN A, 2001, P 2001 WORKSH EV ARC
   Brown AB, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P1
   Candea G, 2004, PERFORM EVALUATION, V56, P213, DOI 10.1016/j.peva.2003.07.007
   CANDEA G, 2003, P 9 WORKSH HOT TOP O, P67
   CHAWATHE Y, 1998, P 1998 IFIP INT C DI
   Chou Andy., 2001, P 18 ACM S OPERATING, P73
   Clark C., 2005, P 2 USENIX S NETW SY
   *HP NONSTOP GROUP, 1998, COMM
   Hsu ST, 1997, SOFTWARE PRACT EXPER, V27, P1103, DOI 10.1002/(SICI)1097-024X(199709)27:9<1103::AID-SPE130>3.0.CO;2-2
   HUANG YN, 1995, DIG PAP INT SYMP FAU, P381, DOI 10.1109/FTCS.1995.466961
   *INT CORP, 2003, INT NETW TECHN LOAD
   Jann J, 2003, IBM SYST J, V42, P29, DOI 10.1147/sj.421.0029
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Landau C. R., 1992, Proceedings of the Second International Workshop on Object Orientation in Operating systems (Cat. No.92TH0477-0), P86, DOI 10.1109/IWOOOS.1992.252995
   Ling BC, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FIRST SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI'04), P295
   LONG J, 1992, P 22 ANN INT S FAULT, P58
   LOWELL DE, 2004, P 11 INT C ARCH SUPP, P211
   MALTZ DA, 1998, 21139 IBM
   *MICR CORP, 2000, WIND 2000 TECHN RES
   Nelson M, 2005, USENIX Association Proceedings of the General Track: 2005 UNENIX Annual Technical Conference, P391
   Oppenheimer David., 2003, USENIX Symposium on Internet Technologies and Systems, V67
   Osman S, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P361, DOI 10.1145/1060289.1060323
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   PATTERSON D, 2002, UCBCSD021175 U
   PATTERSON DA, 1989, 34 IEEE COMP SOC INT, P112
   *PERF TECHN INC, 2007, EFF NETW DOWNT PROF
   PLANK JS, 1995, PROCEEDINGS OF THE 1995 USENIX TECHNICAL CONFERENCE, P213
   PLANK JS, 1997, UTCS97372 U TENN
   SNOEREN AC, 2000, P 6 ANN INT C MOB CO, P155
   SNOEREN AC, 2001, P 3 USENIX S INT TEC
   SU G, 2002, CUCS00302 COL U
   Sultan F, 2005, IEEE INTERNET COMPUT, V9, P17, DOI 10.1109/MIC.2005.45
   Sultan F, 2002, INT CON DISTR COMP S, P469, DOI 10.1109/ICDCS.2002.1022294
   ZAGORODNOV D, 2003, P 2003 INT C DEP SYS, P22
NR 37
TC 3
Z9 4
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2007
VL 37
IS 13
BP 1349
EP 1376
DI 10.1002/spe.808
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 226SA
UT WOS:000250607600001
DA 2024-07-18
ER

PT J
AU Bida, E
   Toledo, S
AF Bida, Eran
   Toledo, Sivan
TI An automatically-tuned sorting library
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code generation; sorting; automatic performance tuning
AB We present ATSL, an automatically-tuned sorting library. ATSL generates a sorting routine optimized to the target machine for a specific data type. ATSL finds a high-performance sorting routine by searching an algorithmic space that we have defined. The search space includes basic sorting algorithms and automatically-generated compositions of sorting algorithms. Performance measurements are used both for ranking candidate algorithms and for characterizing the behavior of candidates in specific settings (e.g. ranges of input sizes). These characterizations allow ATSL to generate hybrid algorithms that intelligently exploit the strengths of particular algorithms, such as high speed at specific input-size ranges. Many sorting algorithms can be tuned using numeric parameters and ATSL searches these parameter spaces to find values that yield high performance on the target machine. The building blocks from which ATSL synthesizes sorting algorithms include adaptations of many of the most effective hand-tuned sorting routines, including several that are tuned for cache efficiency. An extensive experimental evaluation shows that ATSL generates high-performance codes that are well tuned for the target machine and data type. The experiments were conducted on six different machines, of several architectures, and with three different compilers. The algorithms that are generated are fast; in particular, they beat the hand-tuned building blocks and the compiler's C++ built-in sorting routine. The algorithms that ATSL generates on different machines and using different compilers are different from each other. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 Tel Aviv Univ, Sch Comp Sci, IL-69978 Tel Aviv, Israel.
C3 Tel Aviv University
RP Toledo, S (corresponding author), Tel Aviv Univ, Sch Comp Sci, IL-69978 Tel Aviv, Israel.
EM stoledo@tau.ac.il
CR AKL S.G., 1990, PARALLEL SORTING ALG
   [Anonymous], 1998, The art of computer programming: Sorting and searching
   [Anonymous], 2004, PATIENT CARE
   BILMES J, 1998, UCBCSD981020
   Brodal GS, 2005, LECT NOTES COMPUT SC, V3580, P576
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Demmel J, 2005, P IEEE, V93, P293, DOI 10.1109/JPROC.2004.840848
   FRIEND EH, 1956, J ACM, V3, P134, DOI 10.1145/320831.320833
   FRIGO M, 2005, P 40 ANN S FOUND COM, P285
   Frigo M., 1999, P ACM SIGPLAN 1999 C, P169, DOI [DOI 10.1145/301631.301661, 10.1145/301631.301661]
   Hoare C.A.R., 1961, Communications of the ACM, V4, P321, DOI [DOI 10.1145/366622.366647, DOI 10.1145/366622.366644]
   Irony D, 2004, FUTURE GENER COMP SY, V20, P425, DOI 10.1016/j.future.2003.07.007
   Kleinberg Jon, 2005, ALGORITHM DESIGN
   LaMarca A, 1999, J ALGORITHMS, V31, P66, DOI 10.1006/jagm.1998.0985
   LI X, 2005, P 2004 IEEE ACM INT, P111
   Li XM, 2005, INT SYM CODE GENER, P99
   Mahmoud H.M., 2000, WIL INT S D
   MIRKOVIC D, 2001, LECT NOTES COMPUTER, V2073, P71
   Sanders P, 2004, LECT NOTES COMPUT SC, V3221, P784
   SEDGEWICK R, 1978, COMMUN ACM, V21, P847, DOI 10.1145/359619.359631
   Sedgewick R., 1998, ALGORITHMS C
   Seward H., 1954, INFORM SORTING APPL
   Vuduc R, 2005, J PHYS CONF SER, V16, P521, DOI 10.1088/1742-6596/16/1/071
   Whaley RC, 2001, PARALLEL COMPUT, V27, P3, DOI 10.1016/S0167-8191(00)00087-9
   WICKREMESINGHE R, 2002, J EXP ALGORITHMICS, V7, P9
   WILLIAMS JWJ, 1964, COMMUN ACM, V7, P347
   YOUN P, 2003, SERIAL PARALLEL EXEC
NR 27
TC 1
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2007
VL 37
IS 11
BP 1161
EP 1192
DI 10.1002/spe.802
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 204JW
UT WOS:000249040900002
DA 2024-07-18
ER

PT J
AU Collberg, C
   Myles, G
   Stepp, M
AF Collberg, Christian
   Myles, Ginger
   Stepp, Michael
TI An empirical study of Java bytecode programs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; bytecode; measure; software complexity metrics
AB We present a study of the static structure of real Java bytecode programs. A total of 1132 Java jar-files were collected from the Internet and analyzed. In addition to simple counts (number of methods per class, number of bytecode instructions per method, etc.), structural metrics such as the complexity of controlflow and inheritance graphs were computed. We believe this study will be valuable in the design of future programming languages and virtual machine instruction sets, as well as in the efficient implementation of compilers and other language processors. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
C3 University of Arizona
RP Myles, G (corresponding author), Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
EM gmyles@gmail.com
CR Antonov IP, 1998, ZH NEVROPATOL PSIKH, V98, P4
   BERNSTEIN RL, 1985, SOFTWARE PRACT EXPER, V15, P1021, DOI 10.1002/spe.4380151009
   Chevance R. J., 1978, SIGPLAN Notices, V13, P44, DOI 10.1145/953411.953414
   Collberg C., 2003, IEEE Security & Privacy, V1, P40, DOI 10.1109/MSECP.2003.1219058
   COLLBERG C, 2003, P ACM S SOFTW VIS JU
   Collberg CS, 2002, IEEE T SOFTWARE ENG, V28, P735, DOI 10.1109/TSE.2002.1027797
   COOK RP, 1982, SOFTWARE PRACT EXPER, V12, P195, DOI 10.1002/spe.4380120209
   COOK RP, 1989, IEEE T COMPUT, V38, P156, DOI 10.1109/12.8740
   COUSOT P, 2004, P ACM C PRINC PROGR
   GUSTEDT J, 2002, LECT NOTES COMPUTER, V2409
   KANNAN S, 1994, SOFTWARE PRACTICE EX, V24, P233
   Knuth D. E., 1971, Software - Practice and Experience, V1, P105, DOI 10.1002/spe.4380010203
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   O'Donoghue D., 2002, P 2 WORKSH INT REPR, P187
   SAAL HJ, 1977, INT J COMPUTER LANGU, V2, P47
   SAAL HJ, 1975, P 7 INT C APL, P292
   Salvadori A., 1975, SIGPLAN Notices, V10, P20, DOI 10.1145/956028.956031
   STATA R, 1998, P 25 ACM S PRINC PRO, P149
   [No title captured]
NR 19
TC 34
Z9 37
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2007
VL 37
IS 6
BP 581
EP 641
DI 10.1002/spe.776
PG 61
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 167CC
UT WOS:000246427300001
DA 2024-07-18
ER

PT J
AU Sierra, JL
   Moreno-Ger, P
   Martínez-Ortiz, I
   Fernández-Manjón, B
AF Sierra, Jose Luis
   Moreno-Ger, Pablo
   Martinez-Ortiz, Ivan
   Fernandez-Manjon, Baltasar
TI A highly modular and extensible architecture for an integrated IMS-based
   authoring system:: the &lt;e-Aula&gt; experience
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE e-learning; IMS-based experimental platform; IMS-based authoring system;
   < e-Aula >; J2EE; struts
AB The (e-Aula) platform is a new experimental e-learning environment that adheres closely to IMS Global Learning Consortium, Inc. e-learning standards in order to facilitate their applicability in different learning scenarios. (e-Aula) is equipped with an integrated modular and extensible architecture for the authoring of IMS-compliant learning materials focused on the IMS manifest. This manifest-driven architecture facilitates maintenance and promotes the evolution of the authoring system in (e-Aula), both of which are mandatory requirements in the successful production and maintenance of content for many different specialized learning domains. In this paper, we describe this authoring system, its manifest-driven architecture and its implementation using well-known and robust Java-based Web technologies. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Complutense Madrid, Fac Informat, Dpto Ingn Software & Inteligencia Artificial, E-28040 Madrid, Spain.
   Ctr Estud Super Felipe II, Aranjuez, Spain.
C3 Complutense University of Madrid
RP Fernández-Manjón, B (corresponding author), Univ Complutense Madrid, Fac Informat, Dpto Ingn Software & Inteligencia Artificial, C Prof Jose Garcia Santesmases S-N, E-28040 Madrid, Spain.
EM balta@fdi.ucm.es
RI Martinez-Ortiz, Ivan/D-1898-2012; Martínez, Iván/IST-4290-2023;
   Fernandez-Manjon, Baltasar/A-5281-2011; Ortiz, Ivan/JDM-8977-2023;
   Moreno-Ger, Pablo/B-5419-2009; Sierra, Jose Luis/J-6935-2014
OI Martinez-Ortiz, Ivan/0000-0001-6595-5690; Moreno-Ger,
   Pablo/0000-0003-4817-8150; Fernandez-Manjon,
   Baltasar/0000-0002-8200-6216; Sierra, Jose Luis/0000-0002-0317-0510
CR *ADL TECHN TEAM, 2006, SCORM 2004 PHOT EX V
   ANIDORIFON L, 2001, ACM J ED RESOURCES C, V1, DOI DOI 10.1145/384055.384056
   [Anonymous], 2000, EXTENSIBLE MARKUP LA
   [Anonymous], 2006, IMS Content Packaging Information Model
   [Anonymous], 1996, Structure and interpretation of computer programs
   [Anonymous], 2006, IMS Question and Test Interoperability Overview
   Avgeriou P, 2003, EDUC TECHNOL SOC, V6, P11
   Bodoff S, 2004, J2EE TUTORIAL
   *BOLT U, 2006, REL PROJ
   CHOPRA V, 2005, BEGINNING JAVASERVER
   Clark James, 1999, Xsl transformations (xslt)
   COLLIER G, 2002, WHITE PAPER
   COLLIS B, 2004, J INTERACTIVE MEDIA, P4
   COOMBS JH, 1987, COMMUN ACM, V30, P933, DOI 10.1145/32206.32209
   da Silva VT, 2001, COMPUT EDUC, V37, P273, DOI 10.1016/S0360-1315(01)00052-5
   *FAULKN INF SYST, 2003, ADV DISTR LEARN SHAR
   Fernandez-Manjon B., 1997, Education and Information Technologies, V2, P193, DOI 10.1023/A:1018613330173
   Fernandez-Manjon B., 2002, Interactive Educational Multimedia, V4, P1
   FERNANDEZVALMAY.A, 2003, COMPUTERS ED LIFELON
   Goodwill J., 2003, PROFESSIONAL JAKARTA
   HODGINGS W, 2002, 14841212002 IEEE
   Koper R., 2005, An introduction to learning design
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   LECKYTHOMPSON E, 2004, PROFESSIONAL PHP5
   Martínez-Ortiz I, 2005, INT FED INFO PROC, V192, P11
   MARTINEZORTIZ I, 2006, P 3 INT C INF TECHN
   MORENOGER P, 2005, COGN EXPL LEARN DIG
   MORENOGER P, 2006, P 6 IEEE INT C ADV L
   Sancho P, 2004, INT FED INFO PROC, V151, P177
   SCHLUSMANS KHL, 2003, INTEGRATED ELEARNING, P126
   Sierra J.L., 2005, P 5 IEEE INT C ADV L
   Sierra JL, 2005, ACM SIGPLAN NOTICES, V40, P28, DOI 10.1145/1117303.1117308
   Sierra JL, 2005, INT J SOFTW ENG KNOW, V15, P975, DOI 10.1142/S0218194005002634
   Sierra JL, 2005, LECT NOTES COMPUT SC, V3583, P144
   Sierra JL, 2004, J UNIVERS COMPUT SCI, V10, P1302
   SIERRA JL, 2006, IN PRESS ELECT NOTES
   Sierra JL, 2006, COMPUT J, V49, P562, DOI 10.1093/comjnl/bxl008
   Walsh N., 1999, DocBook: The Definitive Guide
   WILSON S, 2001, AUTHORWARE, V6
   *WORLD WID WEB CON, 2004, DOC OBJ MOD DOM TECH
   ZONGKAI Y, 2004, P 2004 INT C INF TEC
   2006, LERSUS SYSTEM
   2006, WEBCT SYSTEM
   2006, IMS LEARNING INFORM
   2006, IMS SIMPLE SEQUENCIN
   2006, IMS LEARNING DESIGN
   2006, E AULA PROJECT
NR 47
TC 10
Z9 10
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2007
VL 37
IS 4
BP 441
EP 461
DI 10.1002/spe.779
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 151VK
UT WOS:000245318700004
DA 2024-07-18
ER

PT J
AU Rintala, M
AF Rintala, Matti
TI Exceptions in remote procedure calls using C++ template metaprogramming
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C plus; RPC; RMI; distributed systems; exception handling; templates;
   serialization
AB Serialization of data is needed when information is passed among program entities that have no shared memory. For remote procedure calls, this includes serialization of exception objects in addition to more traditional parameters and return values. In C++, serialization of exceptions is more complicated than parameters and return values, since internal copying and passing of exceptions is handled differently from C++ parameters and return values. This article presents a light-weight template metaprogramming-based mechanism for passing C++ exceptions in remote procedure calls, remote method invocations, and other situations where caller and callee do not have a shared address space. This mechanism has been implemented and tested in the KC++ concurrent active object system. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Tampere Univ Technol, Inst Software Syst, FI-33101 Tampere, Finland.
C3 Tampere University
RP Rintala, M (corresponding author), Tampere Univ Technol, Inst Software Syst, POB 553, FI-33101 Tampere, Finland.
EM matti.rintala@tut.fi
OI Rintala, Matti/0000-0002-1780-377X
CR Alexandrescu A., 2001, Modern C++ Design
   [Anonymous], COMM OBJ REQ BROK AR
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Bartosik M., 2004, C/C++ Users Journal, V22, P28
   Bryant R. E., 2003, Computer systems: a programmer's perspective
   Budd TA., 2002, An Introduction to Object-Oriented Programming
   Coplien J.O., 1995, C++ REP, V7, P24
   Gamma E., 1996, DESIGN PATTERNS ELEM, P395
   Meyers S., 1998, EFFECTIVE C, VSecond
   VANDEVOORDE D, 2003, C TEMPLATES COMPLETE
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 21
TC 2
Z9 2
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2007
VL 37
IS 3
BP 231
EP 246
DI 10.1002/spe.754
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 145ZS
UT WOS:000244904900001
DA 2024-07-18
ER

PT J
AU Wong, WHL
   Ng, JKY
AF Wong, William Hak-Lim
   Ng, Joseph Kee-Yin
TI Scalable peer-to-peer networking architecture: DIVINE
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed computing; peer-to-peer networks; collaborative virtual
   environment
AB This paper describes the issues that are involved in designing and implementing a large-scale cooperative object database server for a collaborative virtual environment. The focus of the paper is about the way to handle the distributing factors and the communication model among nodes within a collaborative virtual environment. Within the system, all objects are decentralized and scattered among three tiers of object databases. By limiting the knowledge and refining the tasks for each server, the network and processor workload can be reduced. The objective of the system is to provide a virtual environment for distributed computing that is k-fault tolerant and subject to expansion without the interruption of services. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Hong Kong Baptist Univ, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong Baptist University
RP Ng, JKY (corresponding author), Hong Kong Baptist Univ, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
EM jng@comp.hkbu.edu.hk
CR AGRAWAL D, 1995, P 3 INT C COOP INF S, P112
   BERNSTEIN PA, 1984, ACM T DATABASE SYST, V9, P596, DOI 10.1145/1994.2207
   CARROLL JL, 1987, P INT C DISTR COMP S, P146
   LEACH PJ, 1998, UNPUB UUIDS GUIDS
   NIKLANDER JKT, 1997, P 2 INT C INT NETW I
   Shands D., 2001, ACM Transactions on Information and Systems Security, V4, P103, DOI 10.1145/501963.501964
   Tanenbaum A.S., 2002, DISTRIBUTED SYSTEMS
NR 7
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2006
VL 36
IS 13
BP 1467
EP 1487
DI 10.1002/spe.730
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 100ZJ
UT WOS:000241708400004
DA 2024-07-18
ER

PT J
AU Yau, SS
   Huang, DZ
   Gong, HS
   Yao, YS
AF Yau, Stephen S.
   Huang, Dazhi
   Gong, Haishan
   Yao, Yisheng
TI Support for situation awareness in trustworthy ubiquitous computing
   application software
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 28th Annual International Computer Software and Applications Conference
CY SEP 28-30, 2004
CL Hong Kong, PEOPLES R CHINA
DE trustworthy ubiquitous application software; situation-awareness;
   Situation-Aware Interface Definition Language (SA-IDL); situation-aware
   middleware; situation-aware security policies; development and runtime
   support
ID CONTEXT-SENSITIVE MIDDLEWARE; FRAMEWORK
AB Due to the dynamic and ephemeral nature of ubiquitous computing (ubicomp) environments, it is especially important that the application software in ubicomp environments is trustworthy. In order to have trustworthy application software in ubicomp environments, situation-awareness (SAW) in the application software is needed to enforce flexible security policies and detect violations of security policies. In this paper, an approach is presented to provide development and runtime support to incorporate SAW in trustworthy ubicomp, application software. The development support is to provide SAW requirement specification and automated code generation to achieve SAW in trustworthy ubicomp application software, and the runtime support is for context acquisition, situation analysis and situation-aware communication. To realize our approach, the improved Reconfigurable Context-Sensitive Middleware (RCSM) is developed to provide the above development and runtime support. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Arizona State Univ, Dept Comp Sci & Engn, Tempe, AZ 85287 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Yau, SS (corresponding author), Arizona State Univ, Dept Comp Sci & Engn, Tempe, AZ 85287 USA.
EM yau@asu.edu
CR BELL D, 1975, MTR1997 MITRE, P134
   Caswell D, 2000, LECT NOTES COMPUT SC, V1927, P114
   Chan ATS, 2003, IEEE T SOFTWARE ENG, V29, P1072, DOI 10.1109/TSE.2003.1265522
   CHOLEWKA DG, 2000, P IFIP TX 11 16 ANN, P53
   Covington MJ, 2002, 18TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P249, DOI 10.1109/CSAC.2002.1176296
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   HESS C, 2002, P INT C PERV COMP SP
   Joshi JBD, 2005, IEEE T KNOWL DATA EN, V17, P4, DOI 10.1109/TKDE.2005.1
   Lampson B.W., 1971, P 5 PRINCETON C INFO, P437
   Lehman TJ, 2001, COMPUT NETW, V35, P457, DOI 10.1016/S1389-1286(00)00178-X
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Lu CY, 2002, REAL-TIME SYST, V23, P85, DOI 10.1023/A:1015398403337
   NELSON BJ, 1998, THESIS U CAMBRIDGE
   *OBJ MAN GROUP INC, NAM SERV SPEC VERS 1
   *OBJ MAN GROUP INC, TRAD SERV SPEC VERS
   *OMG CORBA, 2002, SEC SERV SPEC V1 8
   PHILLIPS C, 2002, P 3 ANN INF SYST SEC
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Schapire RE., 2002, MSRI WORKSHOP NONLIN, P1
   *SUN MICR INC, JIN TECHN COR PLATF
   Yau S. S., 2002, IEEE Pervasive Computing, V1, P33, DOI 10.1109/MPRV.2002.1037720
   Yau SS, 2005, ISADS 2005: INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS,PROCEEDINGS, P17, DOI 10.1109/ISADS.2005.1452011
   Yau SS, 2004, REAL-TIME SYST, V26, P29, DOI 10.1023/B:TIME.0000009305.62647.ee
   Yau SS, 2004, J PARALLEL DISTR COM, V64, P301, DOI 10.1016/j.jpdc.2003.10.007
   Yau SS, 2003, IEEE T PARALL DISTR, V14, P1074, DOI 10.1109/TPDS.2003.1247669
   Yau SS, 2002, P INT COMP SOFTW APP, P233, DOI 10.1109/CMPSAC.2002.1044557
   Yau SS, 2004, INT WKSHP FUT TR DIS, P261
   YAU SS, 2003, P 2 ASEE INT C ENG E
NR 28
TC 12
Z9 15
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2006
VL 36
IS 9
BP 893
EP 921
DI 10.1002/spe.736
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 068GR
UT WOS:000239361500002
OA Bronze
DA 2024-07-18
ER

PT J
AU Humphrey, M
   Basney, JB
   Jokl, J
AF Humphrey, M
   Basney, JB
   Jokl, J
TI The case for using Bridge Certificate Authorities for Grid computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT International Workshop on Grid Security
CY JUL, 2004
CL Oxford, ENGLAND
DE Grid computing; authentication; PKI; Bridge Certificate Authority
AB As Grid deployments increase, the challenge remains to create a scalable, multi-organizational authentication infrastructure. Public key infrastructures (PKIs) are widely used for authentication in Grids, due in large part to the success of the Globus toolkit, despite the challenges and difficulties both for PKI administrators and users. The Bridge Certificate Authority (CA) is a compromise between a strictly hierarchical PKI and a mesh PKI and achieves many of the benefits of the hierarchical PKI and mesh PKI but has been untested for use with Grid software. This paper reports on the use of a Bridge CA with two representative Grid software packages: the Globus Toolkit v2 and WSRF.NET. We find that both packages support Bridge CAs sufficiently today to be usable in Grid software architectures, although not without limitations. In this paper, and through these experiments, we build the case for using Bridge CAs for Grid computing. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Virginia, Sch Engn & Appl Sci, Dept Comp Sci, Charlottesville, VA 22904 USA.
   Univ Illinois, Natl Ctr Supercomp Applicat, Champaign, IL 61820 USA.
C3 University of Virginia; University of Illinois System; University of
   Illinois Urbana-Champaign
RP Univ Virginia, Sch Engn & Appl Sci, Dept Comp Sci, 151 Engn Way,POB 400740, Charlottesville, VA 22904 USA.
EM humphrey@cs.virginia.edu
CR [Anonymous], P 5 ACM COMP COMM SE, DOI DOI 10.1145/288090.288111
   Butler R, 2000, COMPUTER, V33, P60, DOI 10.1109/2.889094
   Clarke R., 2001, P EUR C INF SYST BLE
   DIERKS T, 2004, RFC, V2246
   Ellison C., 2000, Computer Security Journal, V16, P1
   FOSTER I, PHYSIOLOGY GRID OPEN
   HOUSELY R, 2002, RFC, V3280
   HUMPHREY M, 2004, 2004 GRID COMP WORKS
   HUMPHYRE M, 2001, P 10 INT S HIGH PERF
   JOKL J, 2004, P WORKSH GRID SEC PR
   MYERS M, 1999, RFC, V2560
   NEUMAN BC, 1994, IEEE COMMUN MAG, V32, P33, DOI 10.1109/35.312841
   NOVOTNY J, 2001, P 10 INT S HIGH PERF
   POLK T, 2000, PKI FOR M P JUN
   *RSA LAB, 1993, CRYPT MESS SYNT STAN
   *RSA LAB, 1999, PKCS 12 V 1 0 PERS I
NR 16
TC 6
Z9 6
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2005
VL 35
IS 9
BP 817
EP 826
DI 10.1002/spe.689
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 943CO
UT WOS:000230329800003
DA 2024-07-18
ER

PT J
AU Elfatatry, A
   Layzell, P
AF Elfatatry, A
   Layzell, P
TI A negotiation description language
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automated negotiation; service based development
AB As the software industry shifts towards a service-oriented model of development and delivery, complex forms of interaction, such as negotiation, will become dominant. The design of a negotiation system in the context of an open service-oriented model is a complex task and involves many interrelated issues. This paper presents a negotiation description language; the purpose of which is to provide a high-level description of a negotiation situation in such a way that facilitates human reasoning about negotiation-related aspects in a service-oriented context. Copyright (c) 2004 John Wiley & Sons, Ltd.
C1 Univ Alexandria, Dept Informat Technol, Alexandria, Egypt.
   Univ Manchester, Manchester M13 9PL, Lancs, England.
C3 Egyptian Knowledge Bank (EKB); Alexandria University; University of
   Manchester
RP Univ Alexandria, Dept Informat Technol, 163 El Horeya Ave,POB 832 Elshatby, Alexandria, Egypt.
EM elfatatry@G5online.com
CR BEATH CM, 1998, 21 ANN HAW INT C SYS
   Bennett IC., 2002, PROCEEDING 35 HAWAII, V3, P76
   BENNETT K, 2001, IEEE INT C SOFTW MAI
   Blumenthal M.S., 2001, ACM T INTERNET TECHN, V1, P70, DOI DOI 10.1145/383034.383037
   ELFATATRY A, 2002, THESIS UMIST
   FINKELSTEIN A, 2000, P C FUT SOFTW ENG LI
   FISHER M, 1994, P INT WORK C COOP KN
   HALL RM, 1999, THESIS U COLORADO CO
   JANG J, 2001, ACM SIGSOFT SOFTWARE
   Jennings NR, 2000, ARTIF INTELL, V117, P277, DOI 10.1016/S0004-3702(99)00107-1
   Jobber D., 1998, PRINCIPLES PRACTICE, V2nd
   Kendall JE., 1999, Communications of the AIS, V1
   MOWSHOWITZ A, 1999, P 2 INT VON WORKSH
   ROSENSCHEIN J, 1993, RULES ENCOUNTER DESI
   Sierra C, 1998, LECT NOTES ARTIF INT, V1365, P177, DOI 10.1007/BFb0026758
   STROBEL M, 2000, P 8 EUR C INF SYST V, V1, P445
   Truex DP, 1999, COMMUN ACM, V42, P117, DOI 10.1145/310930.310984
NR 17
TC 8
Z9 11
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2005
VL 35
IS 4
BP 323
EP 343
DI 10.1002/spe.638
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 911UA
UT WOS:000228029500002
DA 2024-07-18
ER

PT J
AU Latorre, R
   López, F
   Martínez, AE
AF Latorre, R
   López, F
   Martínez, AE
TI Sharing of precompiled database statements in J2EE applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE database access; prepared statement; data source; J2EE application;
   database connection pooling; persistence
AB This paper presents a mechanism to optimize the access to a database for Java 2 Platform Enterprise Edition (J2EE) applications. This mechanism was used in the migration of a PHP application to the J2EE platform to solve the limitations found in the standard database access. The proposed mechanism is optimal for applications with complex database queries and/or a high number of them per time unit. It presents an alternative to the traditional access, which can produce a database overhead in applications with these characteristics. The proposed database access mechanism is based on the idea of sharing precompiled statements and connections between different users. When a part of the application wants to execute an SQL statement, either a new object is created representing it, or an existing one, created previously, is reused. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Autonoma Madrid, IIC, Escuela Politecn Super, E-28049 Madrid, Spain.
   Univ Autonoma Madrid, Dept Ingn Informat, Escuela Politecn Super, E-28049 Madrid, Spain.
C3 Autonomous University of Madrid; Autonomous University of Madrid
RP Latorre, R (corresponding author), Univ Autonoma Madrid, IIC, Escuela Politecn Super, Ctra Colmenar Viejo Km 15,Edificio B Planta 5a, E-28049 Madrid, Spain.
EM roberto.latorre@iic.uam.es
RI Latorre, Roberto/F-9436-2012
OI Latorre, Roberto/0000-0003-3835-7905
CR Alur D., 2001, Core J2EE patterns: Best practices and design strategies, V1st
   ARMSTRON E, 2003, J2EE 1 4 TUTORIAL
   Atkinson M.P., 1995, VLDB J, V4, P319
   ATKINSON MP, 1986, P 19 INT C SYST SCI, P842
   Bushmann F., 1996, PATTERN ORIENTED SOF
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   *OR CORP, 2000, OR 8I SQL REF REL 3
   *SUN MICR, JAV SERVL JAVASERVER
   *SUN MICR, 2001, ENT JAVABEANS SPEC V
   2003, JAKARTA SITE APACHE
   2003, JMETER APACHE JMETER
   2003, JAVA 2 PLATFORM
NR 12
TC 1
Z9 2
U1 0
U2 6
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2005
VL 35
IS 3
BP 301
EP 311
DI 10.1002/spe.636
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902II
UT WOS:000227347800005
DA 2024-07-18
ER

PT J
AU Czajkowski, G
   Hahn, S
   Skinner, G
   Soper, P
   Bryce, C
AF Czajkowski, G
   Hahn, S
   Skinner, G
   Soper, P
   Bryce, C
TI A resource management interface for the Java™ platform
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE resource management; safe languages; Java (TM) platform
AB Software systems in many circumstances need awareness of their resource usage. Meeting performance requirements often requires the ability to manage consumption of resources pro-tided by the environment. Resource management is traditionally handled by operating systems. but the growing need to use safe languages in the systems programming domain adds increased pressure to equip them with resource management capabilities at a level of abstraction that fits gracefully with the language. This paper proposes an extensible, flexible, and widely applicable resource management inter-face for the Java platform. The interface is small, but capable of modeling a variety of resources and resource management policies. In particular, application-specific resources can be defined, as well as more traditional computational resources such as heap memory and processor time. The interface is presented here in detail. along with a series of examples and a description of a prototype implementation. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Sun Microsyst Labs, Mountain View, CA 94043 USA.
   Univ Geneva, Object Syst Grp, Geneva, Switzerland.
C3 University of Geneva
RP Sun Microsyst Labs, 2600 Casey Ave, Mountain View, CA 94043 USA.
EM grzegorz.czajkwski@sun.com
RI SKINNER, GEOFFREY/ABC-3092-2021
OI SKINNER, GEOFFREY/0000-0002-7690-3746; Bryce, Ciaran/0000-0001-5963-6829
CR Back G, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE FOURTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P333
   Banga Gaurav., 1999, P 3 S OPERATING SYST, P45
   BINDER W, 2001, P ACM C OBJ OR PROGR, P139
   Bollella Greg., 2000, REAL TIME SPECIFICAT
   Bryce C, 2001, AUTON AGENT MULTI-AG, V4, P359, DOI 10.1023/A:1012715226170
   CZAJKOWSKI G, 2001, P ACM C OBJ OR PROGR, P125
   CZAJKOWSKI G, 1998, P ACM C OBJ OR PROGR, P21
   Golm M, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P45
   GONG L., 1999, INSIDE JAVA 2 PLATFO
   Gosling J., 2000, The Java Language Specification
   Hall Marty., 2000, Servlets and JavaServer Pages
   Jones Richard., 1999, GARBAGE COLLECTION A
   Price DW, 2003, P IEEE S SECUR PRIV, P263, DOI 10.1109/SECPRI.2003.1199342
   Qie XH, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P45
   SURI N, 2001, JAV VIRT MACH RES TE
   TULLMAN P, 1998, P 8 ACM SIGOPS EUR W
   WICK A, 2002, SCHEM WORKSH PITTSB
NR 17
TC 14
Z9 15
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2005
VL 35
IS 2
BP 123
EP 157
DI 10.1002/spe.628
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893SF
UT WOS:000226738800002
DA 2024-07-18
ER

PT J
AU Garcia, R
   Lumsdaine, A
AF Garcia, R
   Lumsdaine, A
TI MultiArray: a C++ library for generic programming with arrays
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C plus; array programming; generic programming; Standard Template
   Library; Boost
AB In C++, multi-dimensional arrays are often used but the language provides limited native support for them. The language, in its Standard Library, supplies sophisticated interfaces for manipulating sequential data. but relies on its bare-bones C heritage for arrays. The MultiArray library. a part of the Boost library collection, enhances a C++ programmer's tool set with versatile multi-dimensional array abstractions. It includes a general array class template and native array adaptors that support idiomatic array operations and interoperate with C++ Standard Library containers and algorithms. The arrays share a common interface, expressed as a generic programming concept, in terms of which generic array algorithms can be implemented. We present the library design, introduce a generic interface for array programming, demonstrate how the arrays integrate with the C++ Standard Library, and discuss the essential aspects of their implementation. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Indiana Univ, Open Syst Lab, Bloomington, IN 47405 USA.
C3 Indiana University System; Indiana University Bloomington
RP Indiana Univ, Open Syst Lab, Bloomington, IN 47405 USA.
EM garcia@cs.indiana.edu
OI Lumsdaine, Andrew/0000-0002-9153-6622
CR ANDERSON E, 1990, P SUP 90, P1
   [Anonymous], C REPORT
   Austern MatthewH., 1999, AW PRO COMP, V1st
   BAVESTRELLI G, 2000, C C USERS J, V186, P32
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   *ISO, 1998, 14882 ISO
   Josuttis NicolaiM., 1999, The C++ standard library: a tutorial and reference
   Karmesin S., 1998, ISCOPE
   Lawson C. L., 1979, ACM Transactions on Mathematical Software, V5, P324, DOI [10.1145/355841.355847, 10.1145/355841.355848]
   Musser D.R., 2001, STL Tutorial and Reference Guide. C++ Programming with the Standard Template Library, V2nd
   PARSONS R, 1994, OONSKI, P408
   SIEK J, 2000, 1 WORKSH C TEMPL PRO
   Stepanov A. A., 1994, X3J16940095 ISO
   Veldhuizen T., 1995, C++ Report, V7, P26
   Veldhuizen TL, 1998, LECT NOTES COMPUT SC, V1505, P223
   [No title captured]
NR 16
TC 9
Z9 11
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2005
VL 35
IS 2
BP 159
EP 188
DI 10.1002/spe.630
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893SF
UT WOS:000226738800003
DA 2024-07-18
ER

PT J
AU Lee, MG
   Lee, SG
   Kim, KH
AF Lee, MG
   Lee, SG
   Kim, KH
TI Implementation of a TMO-structured real-time airplane-landing simulator
   on a distributed computing environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE TMO; real time; distributed system; simulation; object-oriented
   programming
ID SCHEME
AB In real-time simulation, the simulated system should display the same (or very close) timing behavior as the target system. The simulation accuracy is increased as the simulation time unit is decreased. Although there are several models for such systems, the TMO model is particularly appropriate due to its natural support for real-time distributed object-oriented programming. This paper discusses the results of the implementation of a real-time airplane-landing simulator on a distributed computing environment using the TMO model. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 POSTECH, EE Dept, Pohang 790784, South Korea.
   Univ Calif Irvine, Dept Elect & Comp Engn, Irvine, CA 92697 USA.
C3 Pohang University of Science & Technology (POSTECH); University of
   California System; University of California Irvine
RP POSTECH, EE Dept, San 31,Hyoja Dong, Pohang 790784, South Korea.
EM slee@postech.ac.kr
CR ELLENBERGER R, 1993, SIMULATION, V61, P337, DOI 10.1177/003754979306100509
   FUJIMOTO RM, 1990, COMMUN ACM, V33, P30, DOI 10.1145/84537.84545
   Henderson T., 2001, Proceedings of the 10th Australian Agronomy Conference, Australian Society of Agronomy, P1
   ISHIKAWA Y, 1992, COMPUTER, V25, P66, DOI 10.1109/2.161281
   Kim KH, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P54, DOI 10.1109/ISORC.1999.776351
   Kim KH, 1996, P INT COMP SOFTW APP, V20, P176, DOI 10.1109/CMPSAC.1996.544160
   Kim KH, 1996, SECOND WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, PROCEEDINGS OF WORDS '96, P59, DOI 10.1109/WORDS.1996.506262
   Kim KH, 1999, INT J SOFTW ENG KNOW, V9, P251, DOI 10.1142/S0218194099000164
   KIM KH, 1999, P COMPSAC 99 IEEE CS, P130
   Kim KHK, 2002, ISORC 2002: FIFTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P263, DOI 10.1109/ISORC.2002.1003726
   Kim KHK, 1997, COMPUTER, V30, P62, DOI 10.1109/2.607090
   ZEIGLER BP, 1993, IEEE T ROBOTIC AUTOM, V9, P351, DOI 10.1109/70.240207
NR 12
TC 2
Z9 2
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2004
VL 34
IS 15
BP 1441
EP 1462
DI 10.1002/spe.620
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 875VY
UT WOS:000225451400002
DA 2024-07-18
ER

PT J
AU Sherwani, J
   Ali, N
   Lotia, N
   Hayat, Z
   Buyya, R
AF Sherwani, J
   Ali, N
   Lotia, N
   Hayat, Z
   Buyya, R
TI Libra: a computational economy-based job scheduling system for clusters
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cluster computing; scheduling; market-based computing; gridbus;
   distributed computing
AB Clusters of computers have emerged as mainstream parallel and distributed platforms for high-performance, high-throughput and high-availability computing. To enable effective resource management on clusters, numerous cluster management systems and schedulers have been designed. However, their focus has essentially been on maximizing CPU performance, but not on improving the value of utility delivered to the user and quality of services. This paper presents a new computational economy driven scheduling system called Libra, which has been designed to support allocation of resources based on the users' quality of service requirements. It is intended to work as an add-on to the existing queuing and resource management system. The first version has been implemented as a plugin scheduler to the Portable Batch System. The scheduler offers market-based economy driven service for managing batch jobs on clusters by scheduling CPU time according to user-perceived value (utility), determined by their budget and deadline rather than system performance considerations. The Libra scheduler has been simulated using the GridSim toolkit to carry out a detailed performance analysis. Results show that the deadline and budget based proportional resource allocation strategy improves the utility of the system and user satisfaction as compared with system-centric scheduling strategies. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Melbourne, Dept Comp Sci& Software Engn, Grid Comp & Distributed Syst Lab, Parkville, Vic 3052, Australia.
   Lahore Univ Management Sci, Dept Comp Sci & Engn, Lahore, Pakistan.
C3 University of Melbourne; Lahore University of Management Sciences
RP Univ Melbourne, Dept Comp Sci& Software Engn, Grid Comp & Distributed Syst Lab, Parkville, Vic 3052, Australia.
EM raj@cs.mu.oz.au
RI Buyya, Rajkumar/C-3424-2009
CR BASNEY J, 1999, HIGH PERFORMANCE CLU, V1, pCH5
   Bode B., 2000, P 4 LIN SHOWC C ATL
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1175, DOI 10.1002/cpe.710
   BUYYA R, 2001, 10 IEEE INT HET COMP
   Buyya R, 1999, High Performance Cluster Computing: Architectures and Systems, V1
   Buyya R., 2000, P 2 INT WORKSH ACT M
   Buyya R, 2000, P 4 INT C EXH HIGH P
   Buyya R, 2000, P INT C PAR DISTR PR
   CHUN B, 2000, CSD1092 U CAL BERK C
   Chun B., 2000, P 4 WORKSH COMM ARCH
   Chun B.N., 2002, P 2 IEEE INT S CLUST
   GENTZSCH W, 2002, SUN GRID ENGINE CLUS
   HOWELL F, 1998, 1 INT C WEB BAS MOD
   MA G, 2000, 12 IASTED INT C PAR
   SPEC, CPU2000 SPEC
   Stonebraker M., 1994, P 3 INT C PAR DISTR
   *SUN MICR, 2002, SUN GRID ENG
   *VER SYST INC, 2000, OPENPBS V2 3 PROT BA
   WALDSPURGER CA, 1992, IEEE T SOFTWARE ENG, V18, P103, DOI 10.1109/32.121753
NR 19
TC 67
Z9 77
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2004
VL 34
IS 6
BP 573
EP 590
DI 10.1002/spe.581
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 817WC
UT WOS:000221206600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jain, R
   Aggarwal, SK
   Jalote, P
   Biswas, S
AF Jain, R
   Aggarwal, SK
   Jalote, P
   Biswas, S
TI An interactive method for extracting grammar from programs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE grammar extraction; legacy systems; reengineering; reverse engineering
AB The grammar of the language in which some given code is written is essential for developing automated tools for maintenance, reengineering, and program analysis. Frequently grammar is available for a language but not for its variants that are implemented by various vendors and in which the given code may be written. In this work we address the problem of obtaining the grammar from source code, which can then be used for generating tools for the programs. We propose an incremental method for obtaining grammar for a particular language variant, from a set of programs written in the language variant and an approximate grammar (presumably of the standard language) with some user interaction. We also present the design of a tool for implementing this approach and our experience in working with grammars of C, C++ and COBOL. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Indian Inst Technol, Dept Comp Sci & Engn, Kanpur 208016, Uttar Pradesh, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kanpur
RP Indian Inst Technol, Dept Comp Sci & Engn, Kanpur 208016, Uttar Pradesh, India.
EM jalote@cse.iitk.ac.in
CR Aho A., 1988, Compilers - Principles, Techniques and Tools
   [Anonymous], 1972, THEORY PARSING TRANS
   BISWASS S, 2003, THESIS DEP COMPUTER
   BURSHTEYN B, 1992, SIGPLAN NOTICES, V27, P42, DOI 10.1145/130722.130724
   CABASINO S, 1992, SIGPLAN NOTICES, V27, P39, DOI 10.1145/141018.141037
   Chin DN, 1996, J SOFTW MAINT-RES PR, V8, P3, DOI 10.1002/(SICI)1096-908X(199601)8:1<3::AID-SMR122>3.0.CO;2-I
   JOHNSON SC, 1975, 32 BELL LAB, V2
   Lämmel R, 2001, SOFTWARE PRACT EXPER, V31, P1395, DOI 10.1002/spe.423
   Lämmel R, 2001, IEEE SOFTWARE, V18, P78, DOI 10.1109/52.965809
   PAREKH R, GRAMMER INFERENCE AU
   RICH C, 1990, IEEE SOFTWARE, V7, P82, DOI 10.1109/52.43053
   ROSKIND JC, C YACC FILES
   Sellink A, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P314
   SELLINK MPA, 1999, P INT C SOFTW MAIN 1, P151
   VANDENBRAND M, 1997, P 2 INT WORKSH THEOR, P1
   Verhoef C, 2000, ANN SOFTW ENG, V9, P315, DOI 10.1023/A:1018941228255
NR 16
TC 4
Z9 4
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2004
VL 34
IS 5
BP 433
EP 447
DI 10.1002/spe.568
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 810TU
UT WOS:000220727400001
OA Bronze
DA 2024-07-18
ER

PT J
AU Schrefl, M
   Thalhammer, T
AF Schrefl, M
   Thalhammer, T
TI Using roles in Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented design; evolving objects; roles; Java
AB Using roles in object-oriented design leads to a more natural representation of a given problem domain. Despite a lot of research into role-based systems, there is still a gap between conceptual representations of roles and the usage of roles in strongly typed object-oriented programming languages such as C++ or Java. Since these languages associate classes and their instances exclusively and permanently, representing evolving objects that may take on different roles over time is difficult without special support: (i) entities must be reclassified any time they evolve and (ii) class hierarchies may grow exponentially if entities may take on several independent roles.
   This article shows how role hierarchies can be easily implemented in Java. It introduces the Java Role Package, which provides a set of classes to support handling of evolving objects without modifying the semantics of Java itself. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Linz, A-4040 Linz, Austria.
   SPAR Osterreich Warenhandels AG, A-5015 Salzburg, Austria.
C3 Johannes Kepler University Linz
RP Schrefl, M (corresponding author), Univ Linz, Altenberger Str 69, A-4040 Linz, Austria.
EM schrefl@dke.uni-linz.ac.at
OI Schrefl, Michael/0000-0003-1741-0252
CR Albano Antonio., 1995, The VLDB Journal, V4, P403
   [Anonymous], P ACM SIGOIS IEEE CS
   Bachman C. W., 1977, Proceedings on very large data bases, P464
   Gottlob G, 1996, ACM T INFORM SYST, V14, P268, DOI 10.1145/230538.230540
   PAPAZOGLOU MP, 1991, P INT C DAT EXP SYST, P7
   RAMBAUGH I, 1999, UNIFIED MODELING LAN
   RICHARDSON J, 1991, P ACM SIGMOD INT C M, P298
   RUNDENSTEINER EA, 1992, PROC INT CONF VERY L, P187
   Snoeck M, 1996, DATA KNOWL ENG, V19, P171, DOI 10.1016/0169-023X(95)00044-S
   Wieringa R., 1995, Theory and Practice of Object Systems, V1, P61
   Wong RK, 1997, PROC INT CONF DATA, P402, DOI 10.1109/ICDE.1997.581963
NR 11
TC 6
Z9 6
U1 1
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2004
VL 34
IS 5
BP 449
EP 464
DI 10.1002/spe.571
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 810TU
UT WOS:000220727400002
DA 2024-07-18
ER

PT J
AU Mogul, JC
AF Mogul, JC
TI Clarifying the fundamentals of HTTP
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE HTTP; protocol design
AB The simplicity of HTTP was a major factor in the success of the Web. However, as both the protocol and its uses have evolved, HTTP has grown complex. This complexity results in numerous problems, including confused implementors, interoperability failures, difficulty in extending the protocol, and a long specification without much documented rationale.
   Many of the problems with HTTP can be traced to unfortunate choices about fundamental definitions and models. This paper analyzes the current (HTTP/1.1) protocol design, showing how it fails in certain cases, and how to improve these fundamentals. Some problems with HTTP can be fixed simply by adopting new models and terminology, allowing us to think more clearly about implementations and extensions. Other problems require explicit (but compatible) protocol changes.
   This paper explains that HTTP needs a clean and consistent data-type model, and in particular needs an explicit 'instance' data type; that HTTP needs a clear data access model, and that resources and instances should carry explicit access-model labels; and that HTTP needs a simple name space for implementations to declare sets of supported extensions. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 HP Labs, Palo Alto, CA 94304 USA.
C3 Hewlett-Packard
RP HP Labs, 1501 Page Mill Rd, Palo Alto, CA 94304 USA.
EM JeffMogul@acm.org
OI Mogul, Jeffrey/0000-0001-6042-8496
CR [Anonymous], 1997, PROCEEDINGS OF THE A
   BAKER M, 2001, IN PRESS ABSTRACT MO
   BERNERSLEE T, 1993, IN PRESS HYPERTEXT T
   Blumenthal M.S., 2001, ACM T INTERNET TECHN, V1, P70, DOI DOI 10.1145/383034.383037
   BRADLEY AD, 2002, P 7 INT WORKSH WEB C, P49
   Chan MC, 1999, IEEE INFOCOM SER, P117, DOI 10.1109/INFCOM.1999.749259
   COOPER I, 2001, 3143 RFC IETF
   Dilley J, 2000, IEEE NETWORK, V14, P24, DOI 10.1109/65.844497
   Douglis F, 1997, PROCEEDINGS OF THE USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS, P147
   *EASTL 3 DE, 2001, IN PRESS PROT VERS D
   EINSTEIN A, WIDELY ATTRIBUTED EQ
   FIELDING R, 1999, 2616 RFC HTTP WORK G
   Fielding R. T., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P407, DOI 10.1109/ICSE.2000.870431
   FIELDING RT, 1997, 2068 RFC HTTP WORK G
   FISHER D, 2003, COMMUNICATION    APR
   FREED N, 1996, 2045 RFC NETW WORK G
   GOLAND Y, 1999, 2518 RFC IETF
   HOLTMAN K, 1998, 2295 RFC IETF
   HOLTMAN K, 1998, 2310 RFC IETF
   Housel Barron., 1996, Proceedings of the 2nd Annual international Conference on Mobile Computing and Networking (MobiCom '96), P108
   *INT ARCH BOARD, 2002, 3238 RFC IETF INT AR
   KLYNE G, 2000, 2938 RFC IETF
   KLYNE G, 1999, 2533 RFC IETF
   Knutsson Bjorn., 2003, ACM T INTERNET TECHN, V3, P392
   Krishnan A, 2001, OPT COMMUN, V200, P1, DOI 10.1016/S0030-4018(01)01558-9
   KRISTOL DM, 2000, 2965 RFC IETF
   LI D, 2001, IN PRESS WCIP WEB CA
   MERRIAMWEBSTER, 1963, WEBSTERS 7 NEW COLL
   MOGUL J, 1997, IN PRESS SPECIFICATI
   Mogul JC, 2001, COMPUT COMMUN, V24, P155, DOI 10.1016/S0140-3664(00)00310-8
   MOGUL JC, 2002, 3229 RFC IETF
   MOGUL JC, 1997, 2145 RFC HTTP WORK G
   MOGUL JC, 2002, 3230 RFC IETF
   *MOZ ORG, BUGZ BUG 176222 HTTP
   NIELSEN HF, 1998, IN PRESS HTTP NG OVE
   NIELSEN HF, 2000, 2774 RFC IETF
   NIELSEN HF, 2003, COMMUNICATION    APR
   RESCORLA E, 1999, 2660 RFC IETF
   ROUSSKOV A, 2003, COMMUNICATION    APR
   Saltzer J. H., 1978, Operating Systems. An Advanced Course, P99
   SALTZER JH, 1984, ACM T COMPUT SYST, V2, P277, DOI 10.1145/357401.357402
   Tridgell A., 1996, The rsync algorithm
   WESSELS D, 2003, COMMUNICATION    APR
NR 43
TC 2
Z9 2
U1 5
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2004
VL 34
IS 2
BP 103
EP 134
DI 10.1002/spe.573
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 770XQ
UT WOS:000188757000002
DA 2024-07-18
ER

PT J
AU Tambag, Y
   Cosar, A
AF Tambag, Y
   Cosar, A
TI Managing business lifecycle using ebIOP
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ebXML; B2B interoperability; electronic commerce; ebXML platform; ebIOP
   component; RosettaNet
AB In this paper, we describe how ebIOP (an ebXML compliant B2B interoperability platform) manages the business lifecycle by providing an example scenario. ebIOP provides a common storage for ebIOP components (ebXML applications). ebIOP defines an ebIOP component to be a software implementation of one or more ebXML specifications which is a solution of an e-commerce pattern (description of an e-commerce problem). ebIOP contains a server that listens to a port over the TCP/IP protocol for client requests and provides one or more ebIOP components to interact with the partners of the company.
   We show how ebIOP could be used to handle the business lifecycle with application of the ebIOP to the RosettaNet partner interface processes (PIPS). In the example, a part of the RosettaNet PIPS are registered to an ebXML registry using the ebIOP Registry Client Component, parties that support RosettaNet PIPS register/update their profiles in the ebXML registry. A party prepares an ebXML business process by combining some of the RosettaNet PIPS in a logical order and searches for possible trading partners using the ebIOP Registry Client Component. After locating the trading partners, all partners prepare agreements among themselves and they execute the business process using the ebIOP B2BServer Component. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 TUBITAK UEKEA, Ankara Ofisi, Ankara, Turkey.
   Middle E Tech Univ, Dept Comp Engn, TR-06531 Ankara, Turkey.
C3 Turkiye Bilimsel ve Teknolojik Arastirma Kurumu (TUBITAK); Middle East
   Technical University
RP Tambag, Y (corresponding author), TUBITAK UEKEA, Ankara Ofisi, TUBITAK 15 Kat, Ankara, Turkey.
RI COSAR, AHMET none/AAC-7425-2021
NR 0
TC 0
Z9 0
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2003
VL 33
IS 13
BP 1217
EP 1227
DI 10.1002/spe.543
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 739LA
UT WOS:000186346300002
DA 2024-07-18
ER

PT J
AU Matera, M
   Maurino, A
   Ceri, S
   Fraternali, P
AF Matera, M
   Maurino, A
   Ceri, S
   Fraternali, P
TI Model-driven design of collaborative Web applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web application design; conceptual modelling; Web-based cooperative
   applications; CASE tools for Web application development
AB This paper introduces a model-driven approach to the design of collaborative Web-based applications, i.e. applications in which several users play different roles, in a collaborative way, to pursue a specific goal. The paper illustrates a conference management application (CMA), whose main requirements include: (i) the management of users profiles and access rights based on the role played by users during the conference life cycle; (ii) the delivery of information and services to individual users; (iii) the management of the sequence of activities that lead to the achievement of a common goal. The presented approach is based on WebML, a conceptual modelling language for the Web. The paper also highlights some general properties as understood by the practical experience of CMA, development-that a Web modelling language should feature in order to fully support the development of collaborative applications. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Politecn Milan, Dipartimento Elettr & Informat, I-20133 Milan, Italy.
C3 Polytechnic University of Milan
RP Politecn Milan, Dipartimento Elettr & Informat, Piazza Leonardo Vinci 32, I-20133 Milan, Italy.
EM matera@elet.polimi.it
OI MATERA, MARISTELLA/0000-0003-0552-8624
CR Alur D., 2001, Core J2EE patterns: Best practices and design strategies, V1st
   [Anonymous], PATTERN LANGUAGES PR
   Atzeni P., 2001, World Wide Web, V4, P21, DOI 10.1023/A:1012456311864
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   BONGIO A, 2000, LECT NOTES COMPUTER, V1997, P201
   BOOCH G, 1998, UNIFIED MODELING LAN
   Brambilla Marco., 2002, IEEE Data Engineering Bulletin, V25, P53
   CASATI F, 2000, P 26 INT C VER LARG, P688
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   CERI S, 2001, P IWWOST 01 WORKSH 1, P130
   Ceri S., 2003, Designing data-intensive Web applications
   Conallen J., 2000, BUILDING WEB APPL UM
   DAVIS M, 2002, STRUTS OPEN SOURCE M
   De Troyer OMF, 1998, COMPUT NETWORKS ISDN, V30, P85, DOI 10.1016/S0169-7552(98)00042-7
   Fernandez M., 1998, SIGMOD Record, V27, P414, DOI 10.1145/276305.276341
   Fraternali P, 1998, LECT NOTES COMPUT SC, V1377, P421
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GARZOTTO F, 1993, ACM T INFORM SYST, V11, P1, DOI 10.1145/151480.151483
   *IBM, 2002, LOT NOT
   ISAKOWITZ T, 1995, COMMUN ACM, V38, P34, DOI 10.1145/208344.208346
   KRUCHTEN P., 1999, Rational Unified Process-An Introduction
   *MICR CORP, 2002, SHAR TECHN
   PASTOR O, 2001, P IWWOST 01 WORKSH 1
   SCHWABE D, 1995, COMMUN ACM, V38, P45, DOI 10.1145/208344.208354
NR 26
TC 5
Z9 5
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2003
VL 33
IS 8
BP 701
EP 732
DI 10.1002/spe.523
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 694AG
UT WOS:000183750100001
DA 2024-07-18
ER

PT J
AU Sweeney, PF
   Burke, M
AF Sweeney, PF
   Burke, M
TI Quantifying and evaluating the space overhead for alternative C++ memory
   layouts
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented optimizations; programming language implementation; C
   plus
AB This paper develops a formalism that precisely characterizes when class tables are required for C++ memory layouts. A memory layout is a particular choice of data structures for implementing run-time support for object-oriented languages. We use this formalism to quantify and evaluate, on a set of benchmarks, the space overhead for a set of C++ memory layouts. In particular, this paper studies the space overhead due to three language features: virtual dispatch, virtual inheritance, and dynamic typing. To date, there has been no scientific quantification or evaluation of C++ memory layouts. Our approach can help C++ implementors. This work has already influenced the memory layout design choices in IBM's Visual Age C++ V5 compiler.
   Applying our approach to a set of five benchmarks, we demonstrate that the impact of object-oriented space overhead can vary dramatically between applications (ranging from 0.42% to 99.79% for our benchmarks). In particular, applications whose object space is dominated by instances of classes that heavily use object-oriented language features will be significantly impacted by the choice of a memory layout. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 IBM Corp, Thomas J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
C3 International Business Machines (IBM)
RP Sweeney, PF (corresponding author), IBM Corp, Thomas J Watson Res Ctr, POB 704, Yorktown Hts, NY 10598 USA.
CR *ACCR STAND COMM, 1997, X3J16970108 WG21N114
   AGESEN O, 1995, P 10 ANN C OBJ OR PR, P91
   AIGNER G, 1996, LECT NOTES COMPUTER, V1098, P142
   BACON D, 1996, 11 ANN C OBJ PROGR S, P324
   BURKE M, 1996, 20421 IBM TJ WATS RE
   CALDER B, 1994, 21 S PRINC PROGR LAN, P397
   DIXON R, 1989, P OOPSLA 89, P211
   ELLIS ME, 1990, ANNOTATED CPLUSPLUS
   FERNANDEZ MF, 1995, SIGPLAN 95 C PROGR L, P103
   GIL J, 1999, C OBJ OR PROGR SYST, P256
   Gosling James, 1996, The Java Language Specification
   Hind M, 1999, ACM T PROGR LANG SYS, V21, P848, DOI 10.1145/325478.325519
   JONES DT, 1994, Patent No. 5297284
   KARASICK M, 1998, P ACM SIGSOFT 6 INT, P131
   LINTON MA, 1991, CPLUSPLUS C CAMBR MA, P227
   LIPPMAN SB, 1996, INSIDE CPLUSPLUS OBJ
   Martel-Thoumian Bernadette, 1991, CIVILS ADM ETAT MILI, P51
   *MICR CORP DIG EQ, 1995, COMP OBJ MOD SPEC VE
   MYERS AC, 1995, P 1995 ACM C OBJ OR, P124
   NACKMAN LR, 1994, 6 US CPLUSPLUS TECHN
   Porat S, 1996, PROCEEDINGS OF THE SECOND USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS), P3
   PUGH W, 1990, P SIGPLAN C PROGR LA, P85, DOI DOI 10.1145/1620405.1620421
   ROSE JR, 1988, P OOPSLA, P27
   ROSSIE JG, 1995, 10 ANN C OBJ OR PROG, P187
   SRINIVASAN H, 1996, 20330 IBM TJ WATS RE
   STROUSTRUP B, 1987, P SPR 1987 EUR UN SY
   Sweeney PF, 1998, ACM SIGPLAN NOTICES, V33, P324, DOI 10.1145/277652.277750
   ZIBIN Y, 2002, P 17 ACM C OBJ OR PR, P142
   [No title captured]
NR 29
TC 8
Z9 9
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2003
VL 33
IS 7
BP 595
EP 636
DI 10.1002/spe.519
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 686FL
UT WOS:000183310700001
DA 2024-07-18
ER

PT J
AU Bauer, L
   Appel, AW
   Felten, EW
AF Bauer, L
   Appel, AW
   Felten, EW
TI Mechanisms for secure modular programming in Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE information hiding; abstract data types; computer security; hierarchical
   module system; name-space management; dynamic linking; Java
AB We present a new module system for Java that improves upon many of the deficiencies of the Java package system and gives the programmer more control over dynamic linking. Our module system provides explicit interfaces, multiple views of modules based on hierarchical nesting and more flexible name-space management than the Java package system. Relationships between modules are explicitly specified in module description files. We provide more control over dynamic linking by allowing import statements in module description files to require that imported modules be annotated with certain properties, which we implement by digital signatures. Our module system is compatible enough with standard Java to be implemented as a source-to-source and bytecode-to-bytecode transformation wrapped around a standard Java compiler, using a standard Java virtual machine (JVM). Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Princeton Univ, Dept Comp Sci, Princeton, NJ 08544 USA.
C3 Princeton University
RP Princeton Univ, Dept Comp Sci, 35 Olden St, Princeton, NJ 08544 USA.
EM lbauer@cs.princeton.edu
OI Appel, Andrew/0000-0001-6009-0325; Bauer, Lujo/0000-0002-8209-6792
CR AGESEN O, 1997, SIGPLAN NOTICES, V32
   APPEL AW, 1994, ACM C PROGR LANG DES, P13
   APPEL AW, 2002, QUANTITATIVE MEASURE
   Blume M, 1999, ACM T PROGR LANG SYS, V21, P813, DOI 10.1145/325478.325518
   CARDELLI L, 1997, 24 S PRINC PROGR LAN, P266
   DEAN D, 1997, 4 ACM C COMP COMM SE
   Dean R.D., 1999, THESIS PRINCETON U P
   DREW D, 1997, JAVA SECURITY WEB BR
   FINDLER RB, 1998, P 3 ACM SIGPLAN INT, P94
   GLEW N, 1999, 26 ACM SIGPLAN SIGAC, P250
   Gosling J., 2000, The Java Language Specification
   HANSON DR, 1996, INTERFACES IMPLEMENT
   JENSEN T, 1998, P 1998 IEEE INT C CO
   Kernighan B.W., 1988, The C Programming Language
   Leroy X., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P391, DOI 10.1145/268946.268979
   Liang S, 1998, ACM SIGPLAN NOTICES, V33, P36, DOI 10.1145/286942.286945
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   MCGRAW G, 1998, SECURING JAVA GETTIN
   MCGRAW G, 12 RULES DEV SECURE
   Milner R., 1990, The Definition of Standard ML
   NELSON G, 1991, PRENTICE HALL SERIES
   Pawlan M., 1998, SIGNED APPLETS BROWS
   WALLACH DS, 1998, IEEE S SEC PRIV MAY
NR 23
TC 10
Z9 12
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2003
VL 33
IS 5
BP 461
EP 480
DI 10.1002/spe.516
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 668VE
UT WOS:000182313200004
DA 2024-07-18
ER

EF