FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Oono, M
   Atlam, ES
   Fuketa, M
   Morita, K
   Aoe, J
AF Oono, M
   Atlam, ES
   Fuketa, M
   Morita, K
   Aoe, J
TI A fast and compact elimination method of empty elements from a
   double-array structure
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dictionary; information retrieval; trie search; natural language
   processing
AB A double-array is a well-known data structure to implement the trie. However, the space efficiency of the double-array degrades with the number of key deletions because the double-array keeps empty elements produced by the key deletion. This paper presents a fast and compact elimination method of empty elements using properties of the trie nodes that have no siblings. The present elimination method is implemented by C language. From simulation results for large sets of keys, the present elimination method is about 30-330 times faster than the conventional elimination method and maintains high space efficiency. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Tokushima, Fac Engn, Dept Informat Sci & Intelligent Syst, Tokushima 7708506, Japan.
C3 Tokushima University
RP Univ Tokushima, Fac Engn, Dept Informat Sci & Intelligent Syst, Minamijosanjima 2, Tokushima 7708506, Japan.
EM oono@is.tokushima-u.ac.jp
RI Atlam, El-sayed/ABC-6182-2021
CR AHO AV, 1975, COMMUN ACM, V18, P333, DOI 10.1145/360825.360855
   AHO AV, 1983, DATA STRUCTURES ALOG
   Aho AV., 1974, DESIGN ANAL COMPUTER
   AOE J, 1987, P 2 INT C SUP SANT C, P361
   AOE JI, 1989, IEEE T SOFTWARE ENG, V15, P1066, DOI 10.1109/32.31365
   FREDKIN E, 1960, COMMUN ACM, V3, P490, DOI 10.1145/367390.367400
   LESK ME, 1975, 39 BELL LAB COMP SCI, P1
   MALY K, 1976, COMMUN ACM, V19, P409, DOI 10.1145/360248.360258
   Morita K, 2002, IEEE SYS MAN CYBERN, P494
   PETERSON JL, 1980, COMPUTER PROGRAMS SP
   STANDISH TA, 1980, DATA STRUCTURE TECHN
NR 11
TC 10
Z9 11
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2003
VL 33
IS 13
BP 1229
EP 1249
DI 10.1002/spe.545
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 739LA
UT WOS:000186346300003
DA 2024-07-18
ER

PT J
AU Raith, P
   Rausch, T
   Furutanpey, A
   Dustdar, S
AF Raith, Philipp
   Rausch, Thomas
   Furutanpey, Alireza
   Dustdar, Schahram
TI <i>faas-sim</i>: A trace-driven simulation framework for serverless edge
   computing platforms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE co-simulation; edge-cloud continuum; serverless edge computing;
   simulation
ID OPTIMIZATION; PERFORMANCE; TOOLKIT
AB This paper presents faas-sim, a simulation framework tailored to serverless edge computing platforms. In serverless computing, platform operators are tasked with efficiently managing distributed computing infrastructure completely abstracted from application developers. To that end, platform operators and researchers need tools to design, build, and evaluate resource management techniques that efficiently use of infrastructure while optimizing application performance. This challenge is exacerbated in edge computing scenarios, where, compared to cloud computing, there is a lack of reference architectures, design tools, or standardized benchmarks. faas-sim bridges this gap by providing (a) a generalized model of serverless systems that builds on the function-as-a-service abstraction, (b) a simulator that uses trace data from real-world edge computing testbeds and representative workloads, and (c) a network topology generator to model and simulate distributed and heterogeneous edge-cloud systems. We present the conceptual design, implementation, and a thorough evaluation of faas-sim. By running experiments on both real-world test beds and replicating them using faas-sim, we show that the simulator provides accurate results and reasonable simulation performance. We have profiled a wide range of edge computing infrastructure and workloads, focusing on typical edge computing scenarios such as edge AI inference or data processing. Moreover, we present several instances where we have successfully used faas-sim to either design, optimize, or evaluate serverless edge computing systems.
C1 [Raith, Philipp; Rausch, Thomas; Furutanpey, Alireza; Dustdar, Schahram] TU Wien, Distributed Syst Grp, Vienna, Austria.
C3 Technische Universitat Wien
RP Raith, P (corresponding author), TU Wien, Distributed Syst Grp, Vienna, Austria.
EM p.raith@dsg.tuwien.ac.at
RI Dustdar, Schahram/G-9877-2015; Raith, Philipp/KBQ-4720-2024
OI Dustdar, Schahram/0000-0001-6872-8821; Raith,
   Philipp/0000-0003-3293-9437
FU TU Wien Bibliothek
FX The authors acknowledge TU Wien Bibliothek for financial support through
   its Open Access Funding Programme.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Alwasel K, 2021, J SYST ARCHITECT, V116, DOI 10.1016/j.sysarc.2020.101956
   Alwasel K, 2020, J PARALLEL DISTR COM, V143, P17, DOI 10.1016/j.jpdc.2020.04.006
   Amazon, 2014, AWS LAMBD
   [Anonymous], 2018, 2018 YELLOW TAXI TRI
   Aslanpour MS., 2021, ACSW 21 ASS COMP MAC
   Balla D, 2020, 2020 43RD INTERNATIONAL CONFERENCE ON TELECOMMUNICATIONS AND SIGNAL PROCESSING (TSP), P358, DOI [10.1109/TSP49548.2020.9163456, 10.1109/tsp49548.2020.9163456]
   Baresi L, 2022, I W S E ADAP SM SYS, P144, DOI 10.1145/3524844.3528051
   Bertsekas D., 1996, Data Networks, V2nd
   Bhardwaj A., 2022, AS PAC WORKSH NETW A, P7
   Bruckner A., 2022, THESIS TU WIEN
   Burckhardt S, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3485510
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Catlett C.E., 2017, Proceedings of the 2nd International Workshop on Science of Smart City Operations and Platforms Engineering-SCOPE '17, P26
   CHIU DM, 1989, COMPUT NETWORKS ISDN, V17, P1, DOI 10.1016/0169-7552(89)90019-6
   Cooper Brian F., 2010, P 1 ACM S CLOUD COMP, P143, DOI [DOI 10.1145/1807128.1807152, 10.1145/1807128.1807152]
   Crankshaw Daniel, 2020, SoCC '20: Proceedings of the 11th ACM Symposium on Cloud Computing, P477, DOI 10.1145/3419111.3421285
   Deng SG, 2020, IEEE INTERNET THINGS, V7, P7457, DOI 10.1109/JIOT.2020.2984887
   Duplyakin D, 2019, PROCEEDINGS OF THE 2019 USENIX ANNUAL TECHNICAL CONFERENCE, P1
   Eismann S., 2021, P 22 INT MIDDL C QUE, P248
   Fernández-Cerero D, 2020, SIMUL MODEL PRACT TH, V101, DOI 10.1016/j.simpat.2019.101966
   Fernández-Cerero D, 2018, SIMUL MODEL PRACT TH, V82, P160, DOI 10.1016/j.simpat.2018.01.004
   Fission, 2016, FISSION
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hannun Awni, 2014, ARXIV
   He K., 2016, PROC CVPR IEEE, P770, DOI [10.1109/CVPR.2016.90, DOI 10.1109/CVPR.2016.90]
   Henderson TR., 2008, SIGCOMM DEMONSTRATIO, P527
   Howard A.G., 2017, MOBILENETS EFFICIENT, DOI DOI 10.48550/ARXIV.1704.04861
   HTTP Archive, 2023, STAT WEB
   IBM, 2016, OPENWHISK
   Iosup A, 2017, INT SYMP PARA DISTR, P85, DOI 10.1109/ISPDC.2017.25
   Jeon H., 2019, P 20 INT C PAR DISTR, P386
   Jha DN, 2020, SOFTWARE PRACT EXPER, V50, P844, DOI 10.1002/spe.2787
   Jonas Eric, 2019, Cloud Programming Simplified: A Berkeley View on Serverless Computing
   Kelly F, 1997, EUR T TELECOMMUN, V8, P33, DOI 10.1002/ett.4460080106
   Knative, 2018, KNATIVE
   Kolosov O., 2020, 3 USENIX WORKSH HOT
   Kubernetes, 2014, Kubernetes
   Lähderanta T, 2021, J PARALLEL DISTR COM, V153, P130, DOI 10.1016/j.jpdc.2021.03.007
   Lin CY, 2023, IEEE T PARALL DISTR, V34, P180, DOI 10.1109/TPDS.2022.3214783
   Mahmoudi N, 2021, CLOSER: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P23, DOI 10.5220/0010376500230033
   Mampage A, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3510412
   Manner J, 2021, IEEE INT CONF CLOUD, P168, DOI 10.1109/CLOUD53861.2021.00030
   Markus A, 2020, SIMUL MODEL PRACT TH, V101, DOI 10.1016/j.simpat.2019.102042
   Massoulié L, 1999, IEEE INFOCOM SER, P1395, DOI 10.1109/INFCOM.1999.752159
   Mastenbroek F, 2021, 21ST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2021), P455, DOI 10.1109/CCGrid51090.2021.00055
   Matloff N., 2009, INTRO DISCRETE EVENT, V2, P1
   Mayer Ruben., 2017, 2017 IEEE FOG WORLD, P1, DOI DOI 10.1109/FWC.2017.8368524
   Morris R, 1997, 1997 INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS - PROCEEDINGS, P205, DOI 10.1109/ICNP.1997.643715
   Olson RS, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P485, DOI 10.1145/2908812.2908918
   OpenFaaS, 2016, OPENFAAS
   Palecek J., 2022, THESIS TU WIEN
   Pfandzelter T, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2020), P17, DOI 10.1109/ICFC49376.2020.00011
   Raith P., 2022, 2022 IEEE INT C CLOU
   Raith PA., 2021, CONTAINER SCHEDULING
   Raith P, 2023, IEEE INTERNET COMPUT, V27, P50, DOI 10.1109/MIC.2023.3260939
   Raith P, 2022, INT CONF UTIL CLOUD, P123, DOI 10.1109/UCC56403.2022.00023
   Raith P, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2021), P252, DOI 10.1109/SCC53864.2021.00038
   Rausch T., 2020, PIPESIM TRACE DRIVEN
   Rausch T., 2021, THESIS TU WIEN
   Rausch T., 2020, 3 USENIX WORKSH HOT
   Rausch T, 2021, FUTURE GENER COMP SY, V114, P259, DOI 10.1016/j.future.2020.07.017
   Rausch T, 2018, INT CONF CLOUD ENG, P191, DOI 10.1109/IC2E.2018.00043
   Rausch T, 2018, 2018 THIRD IEEE/ACM SYMPOSIUM ON EDGE COMPUTING (SEC), P260, DOI 10.1109/SEC.2018.00026
   Rausch Thomas, 2019, P 2 USENIX WORKSH HO
   Riley G. F., 2010, MODELING TOOLS NETWO, P15, DOI [DOI 10.1007/978-3-642-12331-3_2, DOI 10.1007/978-3-642-12331-32, 10.1007/978-3-642-12331-3_2]
   Ristov S., 2022, P 13 S CLOUD COMP AS, P323
   Rodriguez MA, 2019, SOFTWARE PRACT EXPER, V49, P698, DOI 10.1002/spe.2660
   Rossi F, 2020, COMPUT COMMUN, V159, P161, DOI 10.1016/j.comcom.2020.04.061
   Rossi F, 2019, IEEE INT CONF CLOUD, P329, DOI 10.1109/CLOUD.2019.00061
   Sallo DH, 2022, LECT NOTES COMPUT SC, V13098, P428, DOI 10.1007/978-3-031-06156-1_34
   Shafiei H, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3510611
   Sonmez C, 2017, 2017 SECOND INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P39, DOI 10.1109/FMEC.2017.7946405
   Tamiru MA., 2021, 2021 INT C COMP COMM, P1
   Tuli S, 2022, IEEE T PARALL DISTR, V33, P101, DOI 10.1109/TPDS.2021.3087349
   Verma A., 2015, EUROSYS 15 ASS COMP
   Wang CY, 2021, J SYST ARCHITECT, V115, DOI 10.1016/j.sysarc.2021.102016
   Wolski R, 2019, SEC'19: PROCEEDINGS OF THE 4TH ACM/IEEE SYMPOSIUM ON EDGE COMPUTING, P236, DOI 10.1145/3318216.3363314
   Xie RC, 2021, IEEE WIREL COMMUN, V28, P126, DOI 10.1109/MWC.001.2000466
   Xinjie Chang, 1999, WSC'99. 1999 Winter Simulation Conference Proceedings. `Simulation - A Bridge to the Future' (Cat. No.99CH37038), P307, DOI 10.1109/WSC.1999.823089
   Yao XY, 2023, FUTURE GENER COMP SY, V139, P74, DOI 10.1016/j.future.2022.09.009
   Zhang Y., 2019, arXiv
   Zhong ZH, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3510415
NR 83
TC 3
Z9 3
U1 6
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2023
VL 53
IS 12
SI SI
BP 2327
EP 2361
DI 10.1002/spe.3277
EA OCT 2023
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X8MK4
UT WOS:001091903700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Silva, J
   Marques, ERB
   Lopes, LMB
   Silva, FMA
AF Silva, Joaquim
   Marques, Eduardo R. B.
   Lopes, Luis M. B.
   Silva, Fernando M. A.
TI Jay: A software framework for prototyping and evaluating offloading
   applications in hybrid edge clouds
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE computation offloading; edge computing; hybrid edge clouds; mobile edge
   clouds
AB We present Jay, a software framework for offloading applications in hybrid edge clouds. Jay provides an API, services, and tools that enable mobile application developers to implement, instrument, and evaluate offloading applications using configurable cloud topologies, offloading strategies, and job types. We start by presenting Jay's job model and the concrete architecture of the framework. We then present the programming API with several examples of customization. Then, we turn to the description of the internal implementation of Jay instances and their components. Finally, we describe the Jay Workbench, a tool that allows the setup, execution, and reproduction of experiments with networks of hosts with different resource capabilities organized with specific topologies. The complete source code for the framework and workbench is provided in a GitHub repository.
C1 [Silva, Joaquim; Marques, Eduardo R. B.; Lopes, Luis M. B.; Silva, Fernando M. A.] Univ Porto, CRACS, FCUP, INESC,TEC, Porto, Portugal.
   [Silva, Joaquim; Marques, Eduardo R. B.; Lopes, Luis M. B.; Silva, Fernando M. A.] Univ Porto, DCC, FCUP, Porto, Portugal.
   [Marques, Eduardo R. B.] FCUP, DCC, Ruado Campo Alegre 1055, P-4169007 Porto, Portugal.
C3 INESC TEC; Universidade do Porto; Universidade do Porto; Universidade do
   Porto
RP Marques, ERB (corresponding author), FCUP, DCC, Ruado Campo Alegre 1055, P-4169007 Porto, Portugal.
EM ebmarques@fc.up.pt
RI Silva, Fernando/C-5986-2009; Marques, Eduardo R.B./M-1817-2015; Lopes,
   Luis/H-2044-2014
OI Silva, Fernando/0000-0001-8411-7094; Marques, Eduardo
   R.B./0000-0002-6980-6868; Lopes, Luis/0000-0001-8273-1357
FU Augmanity [POCI-01-0247-FEDER046103]; COMPETE 2020; FCT
   [UIDB/50014/2020]; SafeCities [POCI-01-0247-FEDER-041435]; PORTUGAL 2020
FX & nbsp;Augmanity, Grant/Award Number: POCI-01-0247-FEDER046103; COMPETE
   2020; FCT, Grant/Award Number: UIDB/50014/2020; SafeCities, Grant/Award
   Number: POCI-01-0247-FEDER-041435; PORTUGAL 2020
CR Albrecht Martin R., 2021, Topics in Cryptology - CT-RSA 2021. Cryptographers Track at the RSA Conference 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12704), P375, DOI 10.1007/978-3-030-75539-3_16
   [Anonymous], 2007, ANDR DEB BRIDG
   [Anonymous], 2010, PROC 8 INT C MOBILE, DOI [DOI 10.1145/1814433, 10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   [Anonymous], 2021, Ericsson Mobility Report.
   [Anonymous], A high performance, open source universal RPC framework
   [Anonymous], 2012, Cuckoo: A computation offloading framework for smartphones, DOI DOI 10.1007/978-3-642-29336-84
   Arslan M.Y., 2012, Proceedings of the 8th International Conference on Emerging Networking Experiments and Technologies, CoNEXT'12, page, P193
   Balan Rajesh., 2002, EW10, P87
   Barnsley M.F, 1988, The Science of Fractal Images
   Bland Archie., 2014, The Guardian
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Ciobanu RI, 2019, FUTURE GENER COMP SY, V92, P889, DOI 10.1016/j.future.2017.11.044
   Cohen Noam., 2007, NEW YORK TIMES
   developers.google.com, PROTOCOLBUFFERS
   Dreibholz T, 2019, EUROMICRO WORKSHOP P, P59, DOI 10.1109/EMPDP.2019.8671599
   Drolia U, 2013, 2013 IEEE 10TH INTERNATIONAL CONFERENCE ON AND 10TH INTERNATIONAL CONFERENCE ON AUTONOMIC AND TRUSTED COMPUTING (UIC/ATC) UBIQUITOUS INTELLIGENCE AND COMPUTING, P209, DOI 10.1109/UIC-ATC.2013.94
   Erman J., 2013, Proceedings of the 2013 conference on Internet measurement conference, P353
   Fernando N., 2013, Mobile and Ubiquitous Systems: Computing, Networking, and Services, P224
   Fernando N, 2013, FUTURE GENER COMP SY, V29, P84, DOI 10.1016/j.future.2012.05.023
   Garcia M, 2020, 2020 FIFTH INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P172, DOI [10.1109/fmec49853.2020.9144881, 10.1109/FMEC49853.2020.9144881]
   Gedawy Hend, 2021, IEEE Transactions on Mobile Computing, V20, P2654, DOI 10.1109/TMC.2020.2984134
   Habak K, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P9, DOI 10.1109/CLOUD.2015.12
   Howard A. G., 2017, arXiv
   Hu YC., 11 ETSI
   Huang J, 2017, PROC CVPR IEEE, P3296, DOI 10.1109/CVPR.2017.351
   Kharbanda H, 2012, IEEE INT C CL COMP, P54, DOI 10.1109/CLUSTER.2012.64
   Kosta S, 2012, IEEE INFOCOM SER, P945, DOI 10.1109/INFCOM.2012.6195845
   kotlinlang.org, KOTL PROGR LANG
   Kristensen Mads Daro, 2010, 2010 IEEE International Conference on Pervasive Computing and Communications (PerCom 2010), P217, DOI 10.1109/PERCOM.2010.5466972
   Liu DY, 2020, IEEE OPEN J COMM SOC, V1, P634, DOI 10.1109/OJCOMS.2020.2994737
   Liu FM, 2013, IEEE WIREL COMMUN, V20, P14
   Liyanage M, 2016, 2016 17TH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED COMPUTING, APPLICATIONS AND TECHNOLOGIES (PDCAT), P73, DOI [10.1109/PDCAT.2016.29, 10.1109/PDCAT.2016.030]
   Marin RC, 2019, INT CONF PERVAS COMP, P298, DOI [10.1109/PERCOMW.2019.8730788, 10.1109/percomw.2019.8730788]
   Nemoto Hiromi, 2014, 2014 Sixth International Workshop on Quality of Multimedia Experience (QoMEX), P39, DOI 10.1109/QoMEX.2014.6982284
   Neto JLD, 2018, IEEE T MOBILE COMPUT, V17, P2660, DOI 10.1109/TMC.2018.2815015
   Pamboris A., THESIS IMPERIAL COLL
   Potkin Fanny, 2021, REUTERS
   Rodrigues J., 2017, Proceedings of the 2Nd Workshop on Middleware for Edge Clouds Cloudlets, P1, DOI [10.1145/3152360. 3152361, DOI 10.1145/3152360.3152361]
   Rodrigues JF., THESIS U PORTO
   Satyanarayanan M., 1996, Proceedings of the Fifteenth Annual ACM Symposium on Principles of Distributed Computing, P1, DOI 10.1145/248052.248053
   Satyanarayanan M, 2009, IEEE PERVAS COMPUT, V8, P14, DOI 10.1109/MPRV.2009.82
   Shi C, 2014, MOBIHOC'14: PROCEEDINGS OF THE 15TH ACM INTERNATIONAL SYMPOSIUM ON MOBILE AD HOC NETWORKING AND COMPUTING, P287, DOI 10.1145/2632951.2632958
   Silva J., JAY WORKBENCH 2020
   Silva J., JAY FRAMEWORK 2020
   Silva J., ADAPTATIVE COMPUTATI
   Silva J, 2021, J CLOUD COMPUT-ADV S, V10, DOI 10.1186/s13677-021-00251-9
   Silva J, 2020, 2020 FIFTH INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P54, DOI [10.1109/FMEC49853.2020.9144950, 10.1109/fmec49853.2020.9144950]
   Vaquero LM, 2009, ACM SIGCOMM COMP COM, V39, P50, DOI 10.1145/1496091.1496100
   Verbelen T, 2012, J SYST SOFTWARE, V85, P2629, DOI 10.1016/j.jss.2012.06.011
   Xia F, 2014, INFORM SYST FRONT, V16, P95, DOI 10.1007/s10796-013-9458-1
   Yousafzai A, 2020, IEEE INTERNET THINGS, V7, P4171, DOI 10.1109/JIOT.2019.2943176
   Zhang Q, 2018, IEEE T PARALL DISTR, V29, P2004, DOI 10.1109/TPDS.2018.2812177
   Zhou BW, 2017, IEEE T SERV COMPUT, V10, P797, DOI 10.1109/TSC.2015.2511002
NR 53
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2023
VL 53
IS 10
BP 2007
EP 2025
DI 10.1002/spe.3231
EA JUN 2023
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R6FK9
UT WOS:001011878100001
OA Bronze
DA 2024-07-18
ER

PT J
AU Silva-Coira, F
   Paramá, JR
   Ladra, S
AF Silva-Coira, Fernando
   Parama, Jose R.
   Ladra, Susana
TI Map algebra on raster datasets represented by compact data structures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compression; map algebra; raster maps
ID IMAGE RETRIEVAL; BIG DATA; COMPRESSION
AB The increase in the size of data repositories has forced the design of new computing paradigms to be able to process large volumes of data in a reasonable amount of time. One of them is in-memory computing, which advocates storing all the data in main memory to avoid the disk I/O bottleneck. Compression is one of the key technologies for this approach. For raster data, a compact data structure, called k(2)-raster, have been recently been proposed. It compresses raster maps while still supporting fast retrieval of a given datum or a portion of the data directly from the compressed data. k(2)-raster's original work introduced several queries in which it was superior to competitors. However, to be used as the basis of an in-memory system for raster data, it is mandatory to demonstrate its efficiency when performing more complex operations such as the map algebra operators. In this work, we present the algorithms to run a set of these operators directly on k(2)-raster without a decompression procedure.
C1 [Silva-Coira, Fernando; Parama, Jose R.; Ladra, Susana] Univ A Coruna, Ctr Invest CITIC, Fac Informat, La Coruna, Spain.
C3 Universidade da Coruna
RP Silva-Coira, F (corresponding author), Univ A Coruna, Fac Informat, CITIC, Campus Elvina S N, La Coruna 15071, Spain.
EM fernando.silva@udc.es; jose.parama@udc.es; susana.ladra@udc.es
RI Ladra, Susana/O-1972-2015; Silva-Coira, Fernando/M-7101-2018; Parama,
   Jose R./L-4793-2014
OI Ladra, Susana/0000-0003-4616-0774; Silva-Coira,
   Fernando/0000-0003-1341-3368; Parama, Jose R./0000-0002-8727-0980
FU CITIC; Ministerio de Ciencia e Innovacion [PID2020-114635RB-I00,
   PDC2021-120917-C21, PDC2021-121239-C31, PID2019-105221RB-C41,
   TED2021-129245-C21]; Xunta de Galicia [ED431C 2021/53, IN852D 2021/3]
FX CITIC; Ministerio de Ciencia e Innovacion, Grant/Award
   Numbers:PID2020-114635RB-I00,PDC2021-120917-C21,PDC2021-121239-C31,PID20
   19-105221RB-C41,TED2021-129245-C21; Xunta de Galicia,Grant/Award
   Numbers: ED431C 2021/53,IN852D 2021/3 (CO3)
CR [Anonymous], 2006, Data Compression: The Complete Reference
   [Anonymous], 1995, DIGITAL IMAGE COMPRE
   BERRY JK, 1987, ENVIRON MANAGE, V11, P317, DOI 10.1007/BF01867159
   Bosque J., 1992, RIALP
   Brisaboa NR, 2020, INFORM SCIENCES, V506, P196, DOI 10.1016/j.ins.2019.08.007
   Brisaboa NR, 2015, IEEE DATA COMPR CONF, P373, DOI 10.1109/DCC.2015.9
   Brisaboa NR, 2014, INFORM SYST, V39, P152, DOI 10.1016/j.is.2013.08.003
   Brisaboa NR, 2013, INFORM SYST, V38, P635, DOI 10.1016/j.is.2013.01.005
   Brisaboa NR, 2013, INFORM PROCESS MANAG, V49, P392, DOI 10.1016/j.ipm.2012.08.003
   Brisaboa NR, 2009, LECT NOTES COMPUT SC, V5721, P18, DOI 10.1007/978-3-642-03784-9_3
   Caniupán M, 2022, GEOINFORMATICA, V26, P95, DOI 10.1007/s10707-021-00445-y
   Chan YK, 2004, IMAGE VISION COMPUT, V22, P391, DOI 10.1016/j.imavis.2003.12.003
   Claude F, 2009, SPIRE, P176, DOI [10.1007/978-3-540-89097-3_18, DOI 10.1007/978-3-540-89097-3_18]
   Claude F, 2007, LECT NOTES COMPUT SC, V4726, P118
   de Bernardo G, 2013, LECT NOTES COMPUT SC, V8214, P96, DOI 10.1007/978-3-319-02432-5_14
   Eldawy A, 2015, PROC INT CONF DATA, P1352
   Esri, INTR US MAP ALG SPAT
   Funke F, 2012, PROC VLDB ENDOW, V5, P1424, DOI 10.14778/2350229.2350258
   GARGANTINI I, 1982, COMMUN ACM, V25, P905, DOI 10.1145/358728.358741
   Gog S, 2014, LECT NOTES COMPUT SC, V8504, P326, DOI 10.1007/978-3-319-07959-2_28
   Grass, R MAPC 2022
   Graziosi D, 2020, APSIPA TRANS SIGNAL, V9, DOI 10.1017/ATSIP.2020.12
   Hijmans RJ, 2005, INT J CLIMATOL, V25, P1965, DOI 10.1002/joc.1276
   Isenburg M, 2013, PHOTOGRAMM ENG REM S, V79, P209, DOI 10.14358/PERS.79.2.209
   JACOBSON G, 1989, ANN IEEE SYMP FOUND, P549, DOI 10.1109/SFCS.1989.63533
   Klinger A., 1976, COMPUT VISION GRAPH, V5, P68, DOI [10.1016/S0146-664X(76)80006-8, DOI 10.1016/S0146-664X(76)80006-8]
   Klinger A., 1971, PATTERN SEARCH STAT
   Chung KL, 2006, J VIS COMMUN IMAGE R, V17, P1209, DOI 10.1016/j.jvcir.2006.01.002
   Ladra S, 2016, 28TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT (SSDBM) 2016), DOI 10.1145/2949689.2949710
   Ladra S, 2017, INFORM SYST, V72, P179, DOI 10.1016/j.is.2017.10.007
   Lee C., NETCDF 4 PERFORMANCE
   Lemke C, 2010, LECT NOTES COMPUT SC, V6263, P117, DOI 10.1007/978-3-642-15105-7_10
   Li YS, 2021, INFORM FUSION, V67, P94, DOI 10.1016/j.inffus.2020.10.008
   Lin TW, 1997, IMAGE VISION COMPUT, V15, P833, DOI 10.1016/S0262-8856(97)00031-0
   Luo HZ, 2021, INT PARALL DISTRIB P, P402, DOI 10.1109/IPDPS49936.2021.00048
   Mennis J., 2005, Cartography and Geographic Information Science, V32, P17
   Munro J. I., 1996, Foundations of Software Technology and Theoretical Computer Science. 16th Conference Proceedings, P37
   Navarro G, 2016, COMPACT DATA STRUCTURES: A PRACTICAL APPROACH, P1, DOI 10.1017/CBO9781316588284
   Navarro G, 2014, J DISCRET ALGORITHMS, V25, P2, DOI 10.1016/j.jda.2013.07.004
   Navarro G, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2535933
   Peter Deutsch L., RFC 1951-DEFLATE Compressed Data Format Specification version 1.3
   Pinto A, 2017, IEEE DATA COMPR CONF, P320, DOI 10.1109/DCC.2017.21
   Fuentes CQ, 2020, IEEE ACCESS, V8, P25949, DOI 10.1109/ACCESS.2020.2970983
   Ritter N, 1997, INT J REMOTE SENS, V18, P1637, DOI 10.1080/014311697218340
   Samet H, 2006, FDN MULTIDIMENSIONAL
   Sikka V., 2012, SIGMOD, P731
   Silva-Coira F, 2020, PLOS ONE, V15, DOI 10.1371/journal.pone.0226943
   Strafella L, 2022, J COMPUT PHYS, V470, DOI 10.1016/j.jcp.2022.111577
   Tomlin C., 1983, P HARVARD COMPUTER G
   Tomlin C.D., 1979, P AM C SURVEYING MAP, P269
   Tomlin C.D., 1990, GEOGRAPHIC INFORM SY
   Vigna S, 2008, LECT NOTES COMPUT SC, V5038, P154, DOI 10.1007/978-3-540-68552-4_12
   Wallace G. K., 1991, Communications of the ACM, V34, P30, DOI 10.1145/103085.103089
   WOODWARK JR, 1984, COMPUT J, V27, P225, DOI 10.1093/comjnl/27.3.225
   You SM, 2015, 2015 13TH IEEE INTERNATIONAL CONFERENCE ON DATA ENGINEERING WORKSHOPS (ICDEW), P34, DOI 10.1109/ICDEW.2015.7129541
   Zhang H, 2015, IEEE T KNOWL DATA EN, V27, P1920, DOI 10.1109/TKDE.2015.2427795
   Zhang JT, 2015, PROCEEDINGS 2015 IEEE INTERNATIONAL CONFERENCE ON BIG DATA, P478, DOI 10.1109/BigData.2015.7363789
   Zhang JT, 2013, INT J GEOGR INF SCI, V27, P2207, DOI 10.1080/13658816.2013.828840
   Zhang JT, 2010, LECT NOTES COMPUT SC, V6187, P379, DOI 10.1007/978-3-642-13818-8_27
NR 59
TC 0
Z9 0
U1 4
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2023
VL 53
IS 6
BP 1362
EP 1390
DI 10.1002/spe.3191
EA FEB 2023
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E8MO0
UT WOS:000936055500001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Di Martino, B
   Cante, LC
   Esposito, A
   Graziano, M
AF Di Martino, Beniamino
   Cante, Luigi Colucci
   Esposito, Antonio
   Graziano, Mariangela
TI A tool for the semantic annotation, validation and optimization of
   business process models
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business process model notation; expert system; process validation;
   Semantic Web
AB The adoption of the business process model notation for the description of internal workflows and procedures by both public administrations and private organizations is steadily growing, thanks to the simplicity of the standard and its consistent expressivity. However, the lack of semantic support from BPMN can pose important limitations to its efficient use, as ambiguities in task definitions and communications can lead to misinterpretations. Furthermore, there is the need to validate the BPMNs, to check their adherence to regulations, especially in public administration, and to verify their conformance to security and privacy constraints. In this work, we present SemPrAnn, a semantic annotation tool for BPMN that, exploiting domain ontologies and logical rules, provides the possibility to unambiguously identify concepts in workflows and to run inferential engines against them to enforce the rules. The manuscript presents the methodology applied for the implementation of the tool, the tool itself with its exposed functionalities, and a case study demonstrating its current capabilities.
C1 [Di Martino, Beniamino; Cante, Luigi Colucci; Esposito, Antonio; Graziano, Mariangela] Univ Campania L Vanvitelli, Dept Engn, Aversa, Italy.
   [Di Martino, Beniamino] Asia Univ, Dept Comp Sci & Informat Engn, Taichung, Taiwan.
   [Di Martino, Beniamino] Univ Vienna, Dept Comp Sci, Vienna, Austria.
   [Di Martino, Beniamino] Univ Campania LVanvitelli, Dept Engn, I-81031 Aversa, Italy.
C3 Universita della Campania Vanvitelli; Asia University Taiwan; University
   of Vienna
RP Di Martino, B (corresponding author), Univ Campania LVanvitelli, Dept Engn, I-81031 Aversa, Italy.
EM beniamino.dimartino@unicampania.it
RI Graziano, Mariangela/HPF-2471-2023; Di Martino, Beniamino/O-6876-2015;
   Esposito, Antonio/AHC-3301-2022
OI Graziano, Mariangela/0000-0002-1258-8249; Esposito,
   Antonio/0000-0002-2004-4815
FU Universita degli Studi della Campania Luigi Vanvitelli
FX Universita degli Studi della Campania Luigi Vanvitelli
CR Agostinelli S, 2019, LECT NOTES BUS INF P, V350, P10, DOI 10.1007/978-3-030-21297-1_2
   Awad A, 2008, LECT NOTES COMPUT SC, V5240, P326, DOI 10.1007/978-3-540-85758-7_24
   Belecheanu R., 200726850 FP6 SUPER, P26850
   Born M, 2008, LECT NOTES COMPUT SC, V5021, P772
   Di Ciccio C, 2018, LECT NOTES BUS INF P, V319, P56, DOI 10.1007/978-3-319-94214-8_4
   Di Martino Beniamino, 2022, Complex, Intelligent and Software Intensive Systems: Proceedings of the 16th International Conference on Complex, Intelligent and Software Intensive Systems (CISIS-2022). Lecture Notes in Networks and Systems (497), P435, DOI 10.1007/978-3-031-08812-4_42
   Di martino Beniamino, 2022, Complex, Intelligent and Software Intensive Systems: Proceedings of the 16th International Conference on Complex, Intelligent and Software Intensive Systems (CISIS-2022). Lecture Notes in Networks and Systems (497), P414, DOI 10.1007/978-3-031-08812-4_40
   Di martino Beniamino, 2022, Complex, Intelligent and Software Intensive Systems: Proceedings of the 16th International Conference on Complex, Intelligent and Software Intensive Systems (CISIS-2022). Lecture Notes in Networks and Systems (497), P404, DOI 10.1007/978-3-031-08812-4_39
   Di Martino B., 2015, IIWAS 2015 P, DOI [10.1145/2837185.2837257, DOI 10.1145/2837185.2837257]
   Di Martino B., 2021, J AMB INTEL HUM COMP, V13, P1
   Di Martino B, 2021, ADV INTELL SYST COMP, V1194, P520, DOI 10.1007/978-3-030-50454-0_54
   Di Martino B, 2021, LECT NOTE NETW SYST, V278, P667, DOI 10.1007/978-3-030-79725-6_67
   Dimitrov M., 2007, CEUR WORKSHOP PROC, P251
   Dimitrov M, 2007, LECT NOTES COMPUT SC, V4519, P749
   Es-Satty A, 2020, I CONF LOGISTICS, DOI 10.1109/LOGISTIQUA49782.2020.9353936
   Fill HG, 2017, SEMANT WEB, V8, P747, DOI 10.3233/SW-160235
   Hinge K, 2009, IEEE INT ENTERP DIST, P54, DOI 10.1109/EDOC.2009.24
   Kolb P., P KONVENS 2008
   Kolb Peter., 2009, Proceedings of Nordic Conference on Computational Linguistics, V4, P81
   Lin Y, 2010, INT J INF SYST MODEL, V1, P45, DOI 10.4018/jismd.2010070103
   Mitchell Jeff, 2008, P ACL 08 HLT, P236, DOI DOI 10.1039/9781847558633-00236
   Rak Massimiliano, 2022, Complex, Intelligent and Software Intensive Systems: Proceedings of the 16th International Conference on Complex, Intelligent and Software Intensive Systems (CISIS-2022). Lecture Notes in Networks and Systems (497), P456, DOI 10.1007/978-3-031-08812-4_44
   Rospocher M., 2014, Front. Artif. Intell. Appl, V267, P133, DOI 10.3233/978-1-61499-438-1-133
   Schleicher D., 2010, International conference on service-oriented computing and applications, Perth, P1
NR 24
TC 4
Z9 4
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2023
VL 53
IS 5
BP 1174
EP 1195
DI 10.1002/spe.3184
EA JAN 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C0ZX8
UT WOS:000912300500001
OA hybrid
DA 2024-07-18
ER

PT J
AU St-Onge, C
   Kara, N
   Edstrom, C
AF St-Onge, Cedric
   Kara, Nadjia
   Edstrom, Claes
TI NFVLearn: A multi-resource, long short-term memory-based virtual network
   function resource usage prediction architecture
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE correlation coefficients; GNN; input feature selection; LSTM; network
   function virtualization; resource usage prediction
ID ALGORITHM; TIME
AB Virtual resource load prediction in network function virtualization (NFV) is the subject of intense research due to its crucial role in enabling proactive resource adaptation in dynamic NFV environments whose resource demand constantly changes. Several long short-term memory (LSTM)-based approaches have been proposed to forecast the resource load of multiple resource attributes of a virtual network function (VNF) in a service function chain (SFC). In this article, we present NFVLearn, a flexible multivariate, many-to-many LSTM-based model which uses different types of resource load history (CPU, memory, I/O bandwidth) from various VNFs of an SFC to predict future loads of multiple resources of a VNF. We then compare four novel automated input selection frameworks for NFVLearn. Simulations on those frameworks based on graph neural networks, Pearson correlation coefficient, Spearman rank correlation coefficient, and Kendall rank correlation coefficient demonstrate that models using lesser, highly correlated input features retain high prediction root mean squared error accuracy and coefficients of determination scores by leveraging resource attribute inter-dependencies from the SFC. Those results show that resource attribute interdependency-based input feature selection frameworks can reduce overhead in the control plane while keeping high accuracy and high fidelity resource load prediction of multiple resource attributes.
C1 [St-Onge, Cedric; Kara, Nadjia] Univ Quebec, Dept Software & Informat Technol Engn, Ecole Technol Super, Montreal, PQ, Canada.
   [Edstrom, Claes] Ericsson Canada, Montreal, PQ, Canada.
C3 University of Quebec; Ecole de Technologie Superieure - Canada;
   University of Quebec Montreal; Ericsson
RP St-Onge, C (corresponding author), Univ Quebec, Dept Software & Informat Technol Engn, Ecole Technol Super, Montreal, PQ, Canada.
EM cedric.st-onge.1@ens.etsmtl.ca
RI St-Onge, Cédric/HTP-8083-2023
OI St-Onge, Cédric/0000-0003-0759-4270
FU Natural Sciences and Engineering Research Council of Canada [492183]
FX Natural Sciences and Engineering Research Council of Canada, Grant/Award
   Number: 492183
CR Antwi E, 2021, MATH PROBL ENG, V2021, DOI 10.1155/2021/6032325
   Betken A, 2021, J MULTIVARIATE ANAL, V186, DOI 10.1016/j.jmva.2021.104798
   Boutaba R., 2021, COMMUNICATION NETWOR, P33
   Chakraborty P., 2020, P 2020 14 INT C SIGN
   Cho Y, 2020, I C INF COMM TECH CO, P344, DOI 10.1109/ICTC49870.2020.9289275
   Duggan M, 2019, SOFTWARE PRACT EXPER, V49, P617, DOI 10.1002/spe.2635
   Eramo V, 2021, COMPUT NETW, V193, DOI 10.1016/j.comnet.2021.108104
   Eramo V, 2020, FUTURE INTERNET, V12, DOI 10.3390/fi12110196
   Hirayama T, 2021, IEICE T INF SYST, VE104D, P606, DOI 10.1587/transinf.2020NTP0010
   Hirayama T, 2020, PROCEEDINGS OF THE 2020 6TH IEEE CONFERENCE ON NETWORK SOFTWARIZATION (NETSOFT 2020): BRIDGING THE GAP BETWEEN AI AND NETWORK SOFTWARIZATION, P272, DOI 10.1109/NetSoft48620.2020.9165449
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Kim HEO, 2019, PROCEEDINGS OF THE 2019 IEEE CONFERENCE ON NETWORK SOFTWARIZATION (NETSOFT 2019), P444, DOI [10.1109/NETSOFT.2019.8806620, 10.1109/netsoft.2019.8806620]
   Lange S, 2021, IEEE T NETW SERV MAN, V18, P1476, DOI 10.1109/TNSM.2020.3015244
   Li Y., 2016, P 4 INT C LEARNING R, V1, p1
   Mijumbi R, 2014, IEEE IFIP NETW OPER
   Mijumbi R, 2017, IEEE T NETW SERV MAN, V14, P106, DOI 10.1109/TNSM.2017.2666781
   Moradi M, 2022, J NETW SYST MANAG, V30, DOI 10.1007/s10922-021-09629-1
   Patel YS, 2019, NATL CONF COMMUN, DOI 10.1109/ncc.2019.8732201
   Shah Syed Yousaf, 2017, 2017 IEEE International Conference on Big Data (Big Data), P1534
   Wang S, 2019, COMPUT NETW, V161, P251, DOI 10.1016/j.comnet.2019.05.004
   Zhang CY, 2019, IEEE COMMUN SURV TUT, V21, P2224, DOI 10.1109/COMST.2019.2904897
   Zhang WS, 2018, IEEE ACCESS, V6, P23551, DOI 10.1109/ACCESS.2018.2825538
   Zhang XB, 2019, ENERG ECON, V81, P899, DOI 10.1016/j.eneco.2019.05.026
   Zhang YL, 2020, FUTURE GENER COMP SY, V102, P738, DOI 10.1016/j.future.2019.09.018
   Zhou J, 2020, AI OPEN, V1, P57, DOI 10.1016/j.aiopen.2021.01.001
NR 25
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 555
EP 578
DI 10.1002/spe.3160
EA NOV 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000877540300001
DA 2024-07-18
ER

PT J
AU Magalhaes, JWD
   Liao, CH
   Pereira, FMQ
AF de Souza Magalhaes, Jose Wesley
   Liao, Chunhua
   Quintao Pereira, Fernando Magno
TI Automatic inspection of program state in an uncooperative environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE debugging; inspection point; program state
ID TRANSLATION VALIDATION; GARBAGE COLLECTION
AB The program state is formed by the values that the program manipulates. These values are stored in the stack, in the heap, or in static memory. The ability to inspect the program state is useful as a debugging or as a verification aid. Yet, there exists no general technique to insert inspection points in type-unsafe languages such as C or C++. The difficulty comes from the need to traverse the memory graph in a so-called uncooperative environment. In this article, we propose an automatic technique to deal with this problem. We introduce a static code transformation approach that inserts in a program the instrumentation necessary to report its internal state. Our technique has been implemented in LLVM. It is possible to adjust the granularity of inspection points trading precision for performance. In this article, we demonstrate how to use inspection points to debug compiler optimizations; to augment benchmarks with verification code; and to visualize data structures.
C1 [de Souza Magalhaes, Jose Wesley; Quintao Pereira, Fernando Magno] Univ Fed Minas Gerais, Comp Sci Dept, Antonio Carlos Ave 6627, Belo Horizonte, MG, Brazil.
   [Liao, Chunhua] Lawrence Livermore Natl Lab, Ctr Appl Sci Comp, Livermore, CA 94550 USA.
C3 Universidade Federal de Minas Gerais; United States Department of Energy
   (DOE); Lawrence Livermore National Laboratory
RP Pereira, FMQ (corresponding author), Univ Fed Minas Gerais, Comp Sci Dept, Antonio Carlos Ave 6627, Belo Horizonte, MG, Brazil.
EM fernando@dcc.ufmg.br
RI Pereira, Fernando/HNR-7786-2023
OI Liao, Chunhua/0000-0001-6477-0547; Quintao Pereira, Fernando
   Magno/0000-0002-0375-1657
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [406377/2018-9]; FAPEMIG [PPM-00333-18]; Coordenacao de Aperfeicoamento
   de Pessoal de Nivel Superior; U.S. Department of Energy [ASCR SC-21]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Number: 406377/2018-9; FAPEMIG, Grant/Award Number:
   PPM-00333-18; Coordenacao de Aperfeicoamento de Pessoal de Nivel
   Superior; U.S. Department of Energy, Grant/Award Number: ASCR SC-21
CR Aftandilian EE, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P53
   AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Agrawal H., 1992, THESIS PURDUE U
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Armengol-Estape J., 2022, EXEBENCH ML SCALE DA, P1
   Armengol-EstapU J., 2021, CORR, V7639
   Banerjee S, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428244
   Bao T, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P845
   BOEHM HJ, 1993, SIGPLAN NOTICES, V28, P197, DOI 10.1145/173262.155109
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   Bonwick J., 1994, USTC 94, V6
   Brade K., 1992, WHORF VISUALIZATION, P148
   Brusilovsky Peter, 1993, INTERACT 93 CHI 93 C, P29
   Collie B, 2021, INT CONFER PARA, P60, DOI 10.1109/PACT52795.2021.00012
   Cowan C., 1998, SSYM 98, V5
   Cummins C, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P95, DOI 10.1145/3213846.3213848
   Cummins C, 2017, INT SYM CODE GENER, P86, DOI 10.1109/CGO.2017.7863731
   CYTRON R, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P25, DOI 10.1145/75277.75280
   da Silva AF, 2021, INT SYM CODE GENER, P378, DOI 10.1109/CGO51591.2021.9370322
   Dahiya M, 2017, LECT NOTES COMPUT SC, V10695, P127, DOI 10.1007/978-3-319-71237-6_7
   Grech N, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133892
   Gupta S, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428289
   Guthaus MR, 2001, WWC-4: IEEE INTERNATIONAL WORKSHOP ON WORKLOAD CHARACTERIZATION, P3, DOI 10.1109/WWC.2001.990739
   Harris Laune C, 2005, ACM SIGARCH Comput. Architect. News, V33, P63
   Hathhorn C, 2015, ACM SIGPLAN NOTICES, V50, P336, DOI [10.1145/2813885.2737979, 10.1145/2737924.2737979]
   Henderson F, 2003, ACM SIGPLAN NOTICES, V38, P256
   Ingalls D, 2020, SOFTWARE PRACT EXPER, V50, P1629, DOI 10.1002/spe.2841
   Jevitha KP, 2021, SOFTWARE PRACT EXPER, V51, P409, DOI 10.1002/spe.2910
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lee D., 2020, 2 TIER GARBAGE COLLE, P1246
   Lee JongHyup, 2011, TIE: Principled reverse engineering of types in binary programs
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   Lopes NP, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P65, DOI 10.1145/3453483.3454030
   Mastrangelo L, 2015, ACM SIGPLAN NOTICES, V50, P695, DOI [10.1145/2814270.2814313, 10.1145/2858965.2814313]
   Meng X., 2016, BINARY CODE IS NOT E, P24
   Necula G. C., 2000, SIGPLAN Notices, V35, P83, DOI 10.1145/358438.349314
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Pnueli A, 1998, LECT NOTES COMPUT SC, V1384, P151, DOI 10.1007/BFb0054170
   Rafkind J, 2009, ISMM'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P39
   Richards G, 2011, ACM SIGPLAN NOTICES, V46, P677, DOI 10.1145/2076021.2048119
   Rimsa A, 2021, SOFTWARE PRACT EXPER, V51, P353, DOI 10.1002/spe.2907
   Sagiv M, 1998, ACM T PROGR LANG SYS, V20, P1, DOI 10.1145/271510.271517
   SCHILDT H, 1990, 98991990 ANSI ISO
   Smith C., 2010, DATA STRUCTURE VISUA
   Stallman R.M., 2002, Debugging with GDB: The GNU Source-Level Debugger, V9th
   Stasko J., 1992, SIGACT News, V23, P67, DOI 10.1145/130956.130959
   Sun CN, 2016, ACM SIGPLAN NOTICES, V51, P849, DOI 10.1145/3022671.2984038
   Thakur M, 2020, PROCEEDINGS OF THE 29TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC '20), P27, DOI 10.1145/3377555.3377902
   Thakur M, 2019, PROCEEDINGS OF THE 28TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC '19), P135, DOI 10.1145/3302516.3307359
   Tristan JB, 2011, ACM SIGPLAN NOTICES, V46, P295, DOI 10.1145/1993316.1993533
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   WILSON PR, 1992, LECT NOTES COMPUT SC, V637, P1, DOI 10.1007/BFb0017182
   Yang LW, 2015, 2015 INTERNATIONAL CONFERENCE ON FIELD PROGRAMMABLE TECHNOLOGY (FPT), P228, DOI 10.1109/FPT.2015.7393155
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Zakowski Y, 2019, J AUTOM REASONING, V63, P489, DOI 10.1007/s10817-018-9489-x
   ZORN B, 1990, PROCEEDINGS OF THE 1990 ACM CONFERENCE ON LISP AND FUNCTIONAL PROGRAMMING, P87, DOI 10.1145/91556.91597
NR 56
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2022
VL 52
IS 12
BP 2727
EP 2758
DI 10.1002/spe.3146
EA AUG 2022
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A1NL
UT WOS:000847914900001
OA Green Published
DA 2024-07-18
ER

PT J
AU Dröge, B
   Rusu, VH
   Hoste, K
   van Leeuwen, C
   O'Cais, A
   Röblitz, T
AF Droge, Bob
   Rusu, Victor Holanda
   Hoste, Kenneth
   van Leeuwen, Caspar
   O'Cais, Alan
   Roblitz, Thomas
TI EESSI: A cross-platform ready-to-use optimised scientific software stack
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE high-performance computing; scientific software; supercomputing
ID SCALE
AB Getting scientific software installed correctly and ensuring it performs well has been a ubiquitous problem for several decades now, which is compounded currently by the changing landscape of computational science with the (re-)emergence of different microprocessor families, and the expansion to additional scientific domains like artificial intelligence and next-generation sequencing. The European Environment for Scientific Software Installations (EESSI) project aims to provide a ready-to-use stack of scientific software installations that can be leveraged easily on a variety of platforms, ranging from personal workstations to cloud environments and supercomputer infrastructure, without making compromises with respect to performance. In this article, we provide a detailed overview of the project, highlight potential use cases, and demonstrate that the performance of the provided scientific software installations can be competitive with system-specific installations.
C1 [Droge, Bob] Univ Groningen, Ctr Informat Technol, Groningen, Netherlands.
   [Rusu, Victor Holanda] Swiss Fed Inst Technol, Swiss Natl Supercomp Ctr, Zurich, Switzerland.
   [Hoste, Kenneth] Univ Ghent, Dept ICT, Ghent, Belgium.
   [van Leeuwen, Caspar] SURF, Compute Serv, Amsterdam, Netherlands.
   [O'Cais, Alan] Forschungszentrum Julich, Julich Supercomp Ctr, Julich, Germany.
   [Roblitz, Thomas] Univ Bergen, IT Div, Bergen, Norway.
C3 University of Groningen; Swiss Federal Institutes of Technology Domain;
   ETH Zurich; Ghent University; Helmholtz Association; Research Center
   Julich; University of Bergen
RP Dröge, B (corresponding author), Univ Groningen, Ctr Informat Technol, Groningen, Netherlands.
EM b.e.droge@rug.nl
OI van Leeuwen, Caspar/0000-0003-4407-6675; O'Cais,
   Alan/0000-0002-8254-8752; Droge, Bob/0000-0002-8279-868X
FU EuropeanUnion's Horizon 2020 Research and Innovation Programmethrough
   the ICEI project [800858]; European Union's Horizon 2020 research and
   innovation program [676531]
FX We acknowledge PRACE for awarding access to the Fenix Infrastructure
   resources, which are partially funded from the EuropeanUnion's Horizon
   2020 Research and Innovation Programmethrough the ICEI project under the
   grant agreement No. 800858. Alan O'Cais acknowledges support from the
   European Union's Horizon 2020 research and innovation program, under
   grant agreement No. 676531 (project E-CAM).
CR Abraham Mark James, 2015, SoftwareX, V1-2, P19, DOI 10.1016/j.softx.2015.06.001
   Anaconda Inc, CONDA PACKAGE MANAGE
   [Anonymous], GNU C LIB GLIBC
   [Anonymous], 2021, FUSE IMPLEMENTATION
   [Anonymous], INTEL ONEAPI MATH KE
   [Anonymous], BLAS (Basic Linear Algebra Subprograms)
   [Anonymous], COMPUTECANADAMAGIC C
   [Anonymous], FREE ICONS DESIGNED
   [Anonymous], GENTOO LINUX PROJECT
   [Anonymous], AGILE SOFTWARE DEV W
   [Anonymous], Terraform by hashicorp
   [Anonymous], EXTREME SCALE SCI SO
   [Anonymous], EESSI ACTIONS GITHUB
   [Anonymous], Gnu binutils
   [Anonymous], SNAKEMAKE
   [Anonymous], LAPACK-Linear Algebra PACKage
   [Anonymous], CVMFSEXEC
   [Anonymous], DOCUMENTATION EUROPE
   [Anonymous], GNU GUIX
   [Anonymous], UEABS UEABS GITLAB
   [Anonymous], WEBSITE EUROPEAN ENV
   [Anonymous], TODD GAMBLIN SPACK
   [Anonymous], Horizon Europe
   [Anonymous], OPENBLAS AN OPTIMIZE
   [Anonymous], ANSIBLE IS SIMPLE IT
   [Anonymous], FLEXIBLAS A BLAS LAP
   [Anonymous], CONFIGURATION JUSUF
   [Anonymous], ABI COMPATIBILITY IN
   AUGUST MC, 1989, COMPUTER, V22, P45, DOI 10.1109/2.19822
   Blomer J, 2011, J PHYS CONF SER, V331, DOI 10.1088/1742-6596/331/4/042003
   Boissonneault M, 2019, PEARC '19: PROCEEDINGS OF THE PRACTICE AND EXPERIENCE IN ADVANCED RESEARCH COMPUTING ON RISE OF THE MACHINES (LEARNING), DOI 10.1145/3332186.3332210
   CERN, 2018, LARGE HADRON COLLIDE
   Condurache C, 2014, J PHYS CONF SER, V513, DOI 10.1088/1742-6596/513/3/032020
   Culpo M, 2020, PROCEEDINGS OF 2020 2ND INTERNATIONAL WORKSHOP ON CONTAINERS AND NEW ORCHESTRATION PARADIGMS FOR ISOLATED ENVIRONMENTS IN HPC (CANOPIE-HPC 2020), P45, DOI 10.1109/CANOPIEHPC51917.2020.00011
   Di Tommaso P, 2017, NAT BIOTECHNOL, V35, P316, DOI 10.1038/nbt.3820
   Dubois PF, 2003, COMPUT SCI ENG, V5, P83, DOI 10.1109/MCISE.2003.1225867
   FURLANI JL, 1991, PROCEEDINGS OF THE FIFTH LARGE INSTALLATION SYSTEMS ADMINISTRATION CONFERENCE, P141
   Gabriel E, 2004, LECT NOTES COMPUT SC, V3241, P97
   Gamblin T, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807623
   GCC, the GNU Compiler Collection
   Geimer M, 2014, 2014 1ST INTERNATIONAL WORKSHOP ON HPC USER SUPPORT TOOLS (HUST), P41, DOI 10.1109/HUST.2014.8
   Giardine B, 2005, GENOME RES, V15, P1451, DOI 10.1101/gr.4086505
   Grüning B, 2018, NAT METHODS, V15, P475, DOI 10.1038/s41592-018-0046-7
   Hoste K, 2012, 2012 SC COMPANION: HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SCC), P572, DOI 10.1109/SC.Companion.2012.81
   HOWARD JH, 1988, ACM T COMPUT SYST, V6, P51, DOI 10.1145/35037.35059
   Ison J, 2016, NUCLEIC ACIDS RES, V44, pD38, DOI 10.1093/nar/gkv1116
   Karakasis V., 2020, TOOLS TECHNIQUES HIG, P49
   Kohler M., 2014, LAPACK WORKING NOTE
   Kovac Mario, 2019, Electronic Components and Systems for Automotive Applications. Proceedings of the 5th CESA Automotive Electronics Congress. Lecture Notes in Mobility (LNMOB), P185, DOI 10.1007/978-3-030-14156-1_15
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kurtzer GM, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177459
   McLay R., 2011, 2011 INT C HIGH PERF, P1, DOI [10.1145/2063348.2063360, DOI 10.1145/2063348.2063360]
   McLay R., LMOD ENV MODULES SYS
   Molder Felix, 2021, F1000Res, V10, P33, DOI 10.12688/f1000research.29032.1
   MVAPICH, Benchmarks
   NixOS, REPRODUCIBLE BUILDS
   Open MPI, OPEN SOURCE HIGH PER
   Sandberg R., 1985, USENIX Association Summer Conference Proceedings 1985, P119
   Sato M, 2020, PROCEEDINGS OF SC20: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SC20), DOI 10.1109/SC41405.2020.00051
   Shamis P, 2015, PROCEEDINGS 2015 IEEE 23RD ANNUAL SYMPOSIUM ON HIGH-PERFORMANCE INTERCONNECTS - HOTI 2015, P40, DOI 10.1109/HOTI.2015.13
   Tucker T, 2009, AM J HUM GENET, V85, P142, DOI 10.1016/j.ajhg.2009.06.022
   Van Zee FG, 2015, ACM T MATH SOFTWARE, V41, DOI 10.1145/2764454
   Wilson G, 2014, PLOS BIOL, V12, DOI 10.1371/journal.pbio.1001745
   EVALUATION ACCELERAT
NR 64
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2023
VL 53
IS 1
SI SI
BP 176
EP 210
DI 10.1002/spe.3075
EA FEB 2022
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7B2CV
UT WOS:000756126400001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Taghizadeh, J
   Ghobaei-Arani, M
   Shahidinejad, A
AF Taghizadeh, Jaber
   Ghobaei-Arani, Mostafa
   Shahidinejad, Ali
TI A metaheuristic-based data replica placement approach for data-intensive
   IoT applications in the fog computing environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data replica placement; data-intensive IoT applications; fog computing;
   NSGA-II
ID EDGE; MANAGEMENT; INTERNET; STRATEGY; LATENCY; THINGS; AWARE
AB Over the past few years, Internet of Things (IoT) applications have grown rapidly. The data-intensive IoT applications that take advantage of cloud servers for computations and data storage will result in higher latency and other network traffic in the Internet core. IoT applications are characterized by their sensitivity to latency. As an example, delays will result in irreparable damage in the medical and healthcare industries. Cloud servers are no longer necessary because cloud computing utilizes fog nodes that are closer to users. Nodes with different hardware capabilities pose a significant challenge since they differ significantly in latency and traffic reduction. This article presented a metaheuristic-based method using the non-dominated sorting genetic algorithm II for data-intensive IoT applications in fog infrastructure. Besides, we provide a new automatic method for managing data replica transmissions, including deploying them in a fog cloud environment. The proposed solution was evaluated in the iFogSim simulator and compared with two other data replica placement methods in different scenarios. The results showed a decrease in latency and cost for data access and an increase in data availability.
C1 [Taghizadeh, Jaber; Ghobaei-Arani, Mostafa; Shahidinejad, Ali] Islamic Azad Univ, Qom Branch, Dept Comp Engn, Qom, Iran.
C3 Islamic Azad University
RP Ghobaei-Arani, M (corresponding author), Islamic Azad Univ, Qom Branch, Dept Comp Engn, Qom, Iran.
EM m.ghobaei@qom-iau.ac.ir
RI Shahidinejad, Ali/V-5523-2019; Ghobaei-Arani, Mostafa/K-5058-2015
OI Shahidinejad, Ali/0000-0003-4856-9119; Ghobaei-Arani,
   Mostafa/0000-0003-2639-0900
CR [Anonymous], 2015, P USENIX HOTSTORAGE, DOI DOI 10.5555/2827719.2827740
   Brogi A, 2020, SOFTWARE PRACT EXPER, V50, P719, DOI 10.1002/spe.2766
   Confais B, 2018, IEEE GLOB COMM CONF
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Fahs AJ, 2019, IEEE ACM INT SYMP, P478, DOI 10.1109/CCGRID.2019.00062
   Giang NK, 2020, SOFTWARE PRACT EXPER, V50, P519, DOI 10.1002/spe.2695
   Guerrero C, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5343
   Guo JJ, 2020, SOFT COMPUT, V24, P14943, DOI 10.1007/s00500-020-04847-2
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hasenburg J., 2019, ARXIV PREPRINT ARXIV
   Huang TS, 2019, J SIGNAL PROCESS SYS, V91, P1191, DOI 10.1007/s11265-019-1444-5
   Karatas F, 2019, FUTURE GENER COMP SY, V93, P156, DOI 10.1016/j.future.2018.10.039
   Li CL, 2020, J PARALLEL DISTR COM, V143, P107, DOI 10.1016/j.jpdc.2020.04.012
   Li CL, 2019, FUTURE GENER COMP SY, V100, P921, DOI 10.1016/j.future.2019.05.003
   Li CL, 2019, J SUPERCOMPUT, V75, P7209, DOI 10.1007/s11227-019-02930-6
   Li CL, 2019, COMPUT COMMUN, V146, P1, DOI 10.1016/j.comcom.2019.07.013
   Li CL, 2019, J NETW COMPUT APPL, V143, P152, DOI 10.1016/j.jnca.2019.04.018
   Li CL, 2019, J PARALLEL DISTR COM, V125, P93, DOI 10.1016/j.jpdc.2018.11.006
   Mayer Ruben., 2017, 2017 IEEE FOG WORLD, P1, DOI DOI 10.1109/FWC.2017.8368524
   Monga SK, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P336, DOI 10.1109/ICWS.2019.00062
   Naas MI, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P767, DOI 10.1145/3167132.3167217
   Naas MI, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P97, DOI 10.1109/ICFEC.2017.15
   Qureshi NMF, 2019, WIRELESS PERS COMMUN, V106, P2225, DOI 10.1007/s11277-018-5936-6
   Saranya N, 2020, WIRELESS PERS COMMUN, V112, P2643, DOI 10.1007/s11277-020-07168-7
   Sarkar S, 2018, IEEE T CLOUD COMPUT, V6, P46, DOI 10.1109/TCC.2015.2485206
   Shao YL, 2019, J NETW COMPUT APPL, V129, P46, DOI 10.1016/j.jnca.2019.01.001
   Shao YL, 2019, COMPUT NETW, V148, P46, DOI 10.1016/j.comnet.2018.10.017
   Shi Yingjuan., 2015, Future Information and Communication Technologies for Ubiquitous HealthCare (Ubi-HealthTech), 2015 2nd International Symposium on, P1, DOI DOI 10.1109/UBI-HEALTHTECH.2015.7203325
   Singh A, 2020, SOFTWARE PRACT EXPER, V50, P2012, DOI 10.1002/spe.2722
   Srinivas N., 1994, Evolutionary Computation, V2, P221, DOI 10.1162/evco.1994.2.3.221
   Vales R, 2019, J NETW COMPUT APPL, V135, P84, DOI 10.1016/j.jnca.2019.03.001
   Varshney P, 2020, SOFTWARE PRACT EXPER, V50, P558, DOI 10.1002/spe.2699
NR 32
TC 10
Z9 10
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 482
EP 505
DI 10.1002/spe.3032
EA OCT 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000712535000001
DA 2024-07-18
ER

PT J
AU Bufano, R
   Costagliola, G
   Mattia, R
   Fuccella, V
AF Bufano, Roberto
   Costagliola, Gennaro
   De Rosa, Mattia
   Fuccella, Vittorio
TI PolyRec Gesture Design Tool: A tool for fast prototyping of
   gesture-based mobile applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE gesture recognition; gesture-based interaction; PolyRec; unistroke
   gestures
ID RECOGNITION; KEYSCRETCH
AB In this article, we present PolyRec Gesture Design Tool (PolyRec GDT), a tool that allows the definition of gesture sets for mobile applications. It supports the entire process of designing gesture sets, from collecting gestures to analyzing and exporting the set created for use in a mobile application. It is equipped with the PolyRec gesture recognizer, a unistroke recognizer based on template matching with good accuracy and performances while still allowing support for other recognizers. The main features of PolyRec GDT include the ability to collect gestures directly on mobile devices, to detect similarities between gestures to help the designer to detect ambiguities in the design phase, and the ability to automatically select the most representative gestures for each gesture class by using a clustering technique to increase recognition speed without affecting accuracy. Experimental results show that this latter feature allows an increase in accuracy compared with when the same operation is performed manually by developers or randomly by software. Finally, a user study was carried out to evaluate PolyRec GDT, in which participants were asked to use it to add gesture functionality to a mobile application. The results showed that with the support of PolyRec GDT this operation took only a few minutes for participants with mobile development experience, whereas it would have taken much longer without the support of PolyRec GDT.
C1 [Bufano, Roberto; Costagliola, Gennaro; De Rosa, Mattia; Fuccella, Vittorio] Univ Salerno, Dept Informat, Via Giovanni Paolo 2, I-84084 Fisciano, SA, Italy.
C3 University of Salerno
RP Mattia, R (corresponding author), Univ Salerno, Dept Informat, Via Giovanni Paolo 2, I-84084 Fisciano, SA, Italy.
EM matderosa@unisa.it
RI De Rosa, Mattia/V-7792-2019; Costagliola, Gennaro/GLV-1530-2022
OI De Rosa, Mattia/0000-0002-6922-5529; Costagliola,
   Gennaro/0000-0003-3816-7765; Fuccella, Vittorio/0000-0003-3244-3650
FU University of Salerno [:300392FRB19COSTA, 300392FRB20COSTA]
FX This work was partially supported by two grants from the University of
   Salerno:300392FRB19COSTA and 300392FRB20COSTA.
CR [Anonymous], 2009, Proceedings of the 23rd British HCI Group Annual Conference on People and Computers: Celebrating People and Technology, DOI [10.14236/ewic/hci2009.55, DOI 10.14236/EWIC/HCI2009.55]
   Anthony L., 2012, P GRAPHICS INTERFACE, P117
   Anthony L, 2013, P GRAPHICS INTERFACE, P87
   Anthony L., 2010, Proc. of Graphics Interface 2010, P245
   Ashbrook D, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2159
   Bangor A, 2009, J USABILITY STUD, V4, P114
   Baytas MA, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P677, DOI 10.1145/2639189.2639255
   Blickenstorfer Conrad H., 1995, Pen Computing Magazine, V01/95, P30
   Bomsdorf Birgit, 2015, International Journal of People-Oriented Programming, V4, P54, DOI 10.4018/IJPOP.2015070103
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Caputo F.M., 2017, STAG, P9
   Casiez G., 2012, P SIGCHI C HUMAN FAC, P2527, DOI DOI 10.1145/2207676.2208639
   Chang SHH., 2010, P EUR 2010 SKETCH BA, P95
   Ciresan DC, 2010, NEURAL COMPUT, V22, P3207, DOI 10.1162/NECO_a_00052
   Costagliola G., 2019, DMSVIVA, P51, DOI [10.18293/DMSVIVA2019-014, DOI 10.18293/DMSVIVA2019-014]
   Costagliola G, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P49, DOI 10.1109/VLHCC.2018.8506501
   Costagliola G, 2018, J VISUAL LANG COMPUT, V47, P1, DOI 10.1016/j.jvlc.2018.04.002
   Costagliola G, 2017, IEEE T HUM-MACH SYST, V47, P1100, DOI 10.1109/THMS.2017.2754938
   Costagliola G, 2013, J VISUAL LANG COMPUT, V24, P234, DOI 10.1016/j.jvlc.2013.02.003
   Douglas D.H., 1973, Cartographica: The International Journal for Geographic Information and Geovisualization, V10, P112, DOI [https://doi.org/10.3138/FM57-6770-U75U-7727, DOI 10.1002/9780470669488.CH2]
   Fuccella V, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3351, DOI 10.1145/2702123.2702505
   Fuccella V, 2014, IEEE T HUM-MACH SYST, V44, P511, DOI 10.1109/THMS.2014.2314447
   Girden ER., 1992, ANOVA: Repeated measures
   Haroon M., 2015, INT J COMPUT APPL, V121, P25
   Herold J., 2012, Proceedings of the International Symposium on Sketch-Based Interfaces and Modeling, SBIM'12, P39
   Jang Sujin, 2014, P 2 ACM S SPAT US IN, P30, DOI [10.1145/2659766.2659772, DOI 10.1145/2659766.2659772]
   Kara L.B., 2004, Proceedings of the UIST '04 Symposium on User Interface Software and Technology, P13
   Kaufman L., 1987, Statistical Data Analysis Based on the L1-Norm and Related Methods. First International Conference, P405
   Keskin Cem, 2011, Human Behavior Unterstanding. Proceedings Second International Workshop, HBU 2011, P72, DOI 10.1007/978-3-642-25446-8_8
   Khandkar ShahedulHuq., 2010, International Conference on Interactive Tabletops and Surfaces, P59, DOI DOI 10.1145/1936652.1936663
   Kim J., 2013, CHI, P267, DOI 10.1145/2470654.2470691
   Kin K., 2012, CHI, P2885, DOI DOI 10.1145/2207676.2208694
   Kratz S., 2011, Proceedings of the 16th international conference on Intelligent user interfaces, P371
   Kristensson P., 2004, P 17 ANN ACM S USER, P43, DOI DOI 10.1145/1029632.1029640
   Li Y, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2169
   LONG A.A., 2001, Les philosophes hellenistiques II : Les Stoiciens, P1
   Long AC., 2001, THESIS U CALIFORNIA
   Long AllanChristian., 1999, P SIGCHI C HUMAN FAC, P40
   Lu H., 2013, Proceedings of the ACM Conference on Human Factors in Computing Systems (CHI 2013), P257
   Lu H., 2012, CHI, P2875
   Lü H, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P1685, DOI 10.1145/2556288.2557263
   Magrofuoco Nathan, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3331148
   Magrofuoco N, 2019, PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS (EICS'19), DOI 10.1145/3319499.3328227
   Milazzo F, 2018, SOFTWARE PRACT EXPER, V48, P141, DOI 10.1002/spe.2521
   MYERS CS, 1981, AT&T TECH J, V60, P1389, DOI 10.1002/j.1538-7305.1981.tb00272.x
   Nebeling M., 2015, P 7 ACM SIGCHI S ENG, P142, DOI DOI 10.1145/2774225.2774846
   NEEDLEMAN SB, 1970, J MOL BIOL, V48, P443, DOI 10.1016/0022-2836(70)90057-4
   Ouyang Tom., 2012, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P2895, DOI DOI 10.1145/2207676.2208695
   Parnami A, 2016, PROCEEDINGS OF THE 8TH INDIAN CONFERENCE ON HUMAN COMPUTER INTERACTION (INDIA HCI 2016), P35, DOI 10.1145/3014362.3014365
   Pittman C, 2016, PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES (IUI'16), P370, DOI 10.1145/2856767.2856808
   PLIMMER B., 2012, Proceedings of the twenty-sixth annual BCS interaction specialist group conference on people and computers. British Computer Society, P137
   Poppinga B, 2014, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI'14), P173, DOI 10.1145/2628363.2628378
   Forster CHQ, 2007, PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS DESIGN AND APPLICATIONS, P641, DOI 10.1109/ISDA.2007.23
   Reaver J, 2011, P 8 EUR S SKETCH BAS, P103, DOI DOI 10.1145/2021164.2021183
   Renau-Ferrer N, 2012, INT C PATT RECOG, P3741
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Roy P, 2018, INT CONF FRONT HAND, P404, DOI 10.1109/ICFHR-2018.2018.00077
   RUBINE D, 1991, COMP GRAPH, V25, P329, DOI 10.1145/127719.122753
   Sezgin T.M., 2005, Proceedings of International Conference on Intelligent User Interfaces (IUI 2005), P281, DOI DOI 10.1145/1040830.1040899
   Signer B, 2007, PROC INT CONF DOC, P954
   Speicher M, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174221
   Tang J.K., 2013, P 27 INT BCS HUM COM, P1, DOI [https://doi.org/10.14236/ewic/HCI2013.22, DOI 10.14236/EWIC/HCI2013.22]
   TAPPERT CC, 1982, IBM J RES DEV, V26, P765, DOI 10.1147/rd.266.0765
   Taranta EM, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P5850, DOI 10.1145/3025453.3026002
   Taranta EM, 2016, COMPUT GRAPH-UK, V55, P130, DOI 10.1016/j.cag.2015.10.011
   Vanderdonckt J, 2018, ICMI'18: PROCEEDINGS OF THE 20TH ACM INTERNATIONAL CONFERENCE ON MULTIMODAL INTERACTION, P125, DOI 10.1145/3242969.3243032
   Vatavu R-D, 2014, P 16 INT C MULTIMODA, P172, DOI DOI 10.1145/2663204.2663256
   Vatavu RD, 2018, 20TH INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI 2018), DOI 10.1145/3229434.3229465
   Vatavu RD, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P4667, DOI 10.1145/3025453.3025941
   Vatavu RD, 2013, ICMI'13: PROCEEDINGS OF THE 2013 ACM INTERNATIONAL CONFERENCE ON MULTIMODAL INTERACTION, P279, DOI 10.1145/2522848.2522875
   Vatavu RD, 2012, ICMI '12: PROCEEDINGS OF THE ACM INTERNATIONAL CONFERENCE ON MULTIMODAL INTERACTION, P273
   Vatavu Radu-Daniel, 2012, P 2012 ACM INT C INT, P297, DOI DOI 10.1145/2166966.2167022
   Wobbrock JO, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P159
   Wu D, 2016, IEEE T PATTERN ANAL, V38, P1583, DOI 10.1109/TPAMI.2016.2537340
   Xiong YY, 2010, COMPUT GRAPH-UK, V34, P513, DOI 10.1016/j.cag.2010.06.008
NR 75
TC 0
Z9 0
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 594
EP 618
DI 10.1002/spe.3024
EA SEP 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000695206100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Xu, MX
   Zhou, QH
   Wu, HM
   Lin, WW
   Ye, KJ
   Xu, CZ
AF Xu, Minxian
   Zhou, Qiheng
   Wu, Huaming
   Lin, Weiwei
   Ye, Kejiang
   Xu, Chengzhong
TI PDMA: Probabilistic service migration approach for delay-aware and
   mobility-aware mobile edge computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE edge service allocation; latency; mobile edge computing; service
   migration; user mobility
ID PLACEMENT; ALLOCATION; DECISION; INTERNET; ENERGY
AB As a key technology in the 5G era, mobile edge computing (MEC) has developed rapidly in recent years. MEC aims to reduce the service delay of mobile users, while alleviating the processing pressure on the core network. MEC can be regarded as an extension of cloud computing on the user side, which can deploy edge servers and bring computing resources closer to mobile users, and provide more efficient interactions. However, due to the user's dynamic mobility, the distance between the user and the edge server will change dynamically, which may cause fluctuations in Quality of Service. Therefore, when a mobile user moves in the MEC environment, certain approaches are needed to schedule services deployed on the edge server to ensure the user experience. In this article, we model service scheduling in MEC scenarios and propose a delay-aware and mobility-aware service management approach based on concise probabilistic methods. This approach has low computational complexity and can effectively reduce service delay and migration costs. Furthermore, we conduct experiments by utilizing multiple realistic datasets and use iFogSim to evaluate the performance of the algorithm. The results show that our proposed approach can optimize the performance on service delay, with 8%-20% improvement and reduce the migration cost by more than 75% compared with baselines during the rush hours.
C1 [Xu, Minxian; Zhou, Qiheng; Ye, Kejiang] Chinese Acad Sci, Shenzhen Inst Adv Technol, Shenzhen, Peoples R China.
   [Wu, Huaming] Tianjin Univ, Ctr Appl Math, Tianjin, Peoples R China.
   [Lin, Weiwei] South China Univ Technol, Sch Comp Sci & Engn, Guangzhou, Peoples R China.
   [Zhou, Qiheng; Xu, Chengzhong] Univ Macau, Dept Comp Sci, State Key Lab IOTSC, Macau, Peoples R China.
C3 Chinese Academy of Sciences; Shenzhen Institute of Advanced Technology,
   CAS; Tianjin University; South China University of Technology;
   University of Macau
RP Zhou, QH (corresponding author), Chinese Acad Sci, Shenzhen Inst Adv Technol, Shenzhen, Peoples R China.
EM zhouqh7@outlook.com
RI XU, CHENGZHONG/AAX-1707-2020; Xu, Minxian/W-5340-2019; Wu,
   Huaming/F-1049-2019
OI XU, CHENGZHONG/0000-0001-9480-0356; Xu, Minxian/0000-0002-0046-5153; Wu,
   Huaming/0000-0002-4761-9973
FU Key-Area Research and Development Program of Guangdong Province
   [2020B010164003]; National Natural Science Foundation of China
   [62072187, 62072451]; SIAT Innovation Program for Excellent Young
   Researchers; Shenzhen Basic Research Program [JCYJ20170818153016513]
FX Key-Area Research and Development Program of Guangdong Province,
   Grant/Award Number: 2020B010164003; National Natural Science Foundation
   of China, Grant/Award Numbers: 62072187, 62072451; SIAT Innovation
   Program for Excellent Young Researchers; Shenzhen Basic Research
   Program, Grant/Award Number: (No. JCYJ20170818153016513)
CR [Anonymous], 2018, P 2018 INT APPL COMP, DOI DOI 10.23919/ACESS.2018.8669092
   Antennasearch, 2020, ANT DISTR
   Badri H, 2020, IEEE T PARALL DISTR, V31, P909, DOI 10.1109/TPDS.2019.2950937
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Bin Gao, 2019, IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, P1459, DOI 10.1109/INFOCOM.2019.8737543
   Brogi A, 2020, SOFTWARE PRACT EXPER, V50, P719, DOI 10.1002/spe.2766
   crawdad, 2009, COMM RES ARCH WIR DA
   Ding ZG, 2019, IEEE T VEH TECHNOL, V68, P6207, DOI 10.1109/TVT.2019.2907253
   Galloway JM, 2011, LECT NOTES ENG COMP, P127
   Ghosh S, 2020, IEEE T NETW SCI ENG, V7, P2271, DOI 10.1109/TNSE.2019.2941754
   Guo Y, 2020, SOFTWARE PRACT EXPER, V50, P489, DOI 10.1002/spe.2685
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   KyoungSoo Park, 2006, Operating Systems Review, V40, P65, DOI 10.1145/1113361.1113374
   Ouyang T, 2019, IEEE INFOCOM SER, P1468, DOI [10.1109/infocom.2019.8737560, 10.1109/INFOCOM.2019.8737560]
   Ouyang T, 2018, IEEE J SEL AREA COMM, V36, P2333, DOI 10.1109/JSAC.2018.2869954
   Pasteris Stephen, 2019, IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, P514, DOI 10.1109/INFOCOM.2019.8737449
   Poularakis K, 2019, IEEE INFOCOM SER, P10, DOI [10.1109/INFOCOM.2019.8737385, 10.1109/infocom.2019.8737385]
   Samanta A, 2020, IEEE INTERNET THINGS, V7, P6164, DOI 10.1109/JIOT.2020.2981958
   Samanta A, 2019, PROCEEDINGS OF THE 2019 IEEE CONFERENCE ON NETWORK SOFTWARIZATION (NETSOFT 2019), P223, DOI [10.1109/NETSOFT.2019.8806674, 10.1109/netsoft.2019.8806674]
   Shahidinejad A, 2020, SOFTWARE PRACT EXPER, V50, P2212, DOI 10.1002/spe.2888
   Shi Y, 2018, IEEE INTERNET THINGS, V5, P164, DOI 10.1109/JIOT.2017.2776252
   Wan LT, 2019, IEEE WIREL COMMUN, V26, P94, DOI 10.1109/MWC.001.1800582
   Wang SG, 2021, IEEE T MOBILE COMPUT, V20, P939, DOI 10.1109/TMC.2019.2957804
   Wang SG, 2019, J PARALLEL DISTR COM, V127, P160, DOI 10.1016/j.jpdc.2018.06.008
   Wang S, 2015, 2015 IFIP NETWORKING CONFERENCE (IFIP NETWORKING)
   Wang SQ, 2019, IEEE ACM T NETWORK, V27, P1272, DOI 10.1109/TNET.2019.2916577
   Wu HY, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P201, DOI [10.1109/ICWS.2019.00042, 10.1109/icws.2019.00042]
   Wu HM, 2020, IEEE INTERNET THINGS, V7, P8099, DOI 10.1109/JIOT.2020.2996784
   WYNER AD, 1974, IEEE T INFORM THEORY, V20, P2, DOI 10.1109/TIT.1974.1055171
   Xu M, 2020, IEEE J-STSP, V14, P5, DOI 10.1109/JSTSP.2020.2966864
   Xu MX, 2019, J SYST SOFTWARE, V155, P91, DOI 10.1016/j.jss.2019.05.031
   Xu MX, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3234151
   Yu FXQ, 2018, FUTURE GENER COMP SY, V89, P722, DOI 10.1016/j.future.2018.07.032
   Zhang C, 2019, FUTURE GENER COMP SY, V96, P111, DOI 10.1016/j.future.2019.01.059
   Zhao L, 2019, IEEE NETWORK, V33, P30, DOI 10.1109/MNET.2019.1800221
NR 35
TC 15
Z9 15
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 394
EP 414
DI 10.1002/spe.3014
EA JUL 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000670099700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gu, R
   Zhang, ZX
   Xu, ZH
   Wang, ZK
   Zhang, K
   Yuan, CF
   Huang, YH
AF Gu, Rong
   Zhang, Zhixiang
   Xu, Zhihao
   Wang, Zhaokang
   Zhang, Kai
   Yuan, Chunfeng
   Huang, Yihua
TI Alchemy: Distributed financial quantitative analysis system with
   high-level programming model
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed systems; financial quantitative analysis; pipeline
   programming model
ID BIG DATA
AB Nowadays, the financial securities investment and transaction are processed digitally. The securities companies have accumulated a large amount of financial data. Given that, quantitative analysis has become a common method for securities investors. However, as the scale of data continues to grow, data storing and processing have increasingly become a big challenge to financial quantitative analysts. First, most existing stand-alone quantitative analysis systems are hard to accelerate data processing in a distributed way. Second, existing distributed computing frameworks such as Apache Spark demands financial quantitative analysts with expertise knowledge on distributed computing. Third, transition from traditional stand-alone financial quantitative analysis (FQA) system to such distributed computing system often introduces learning efforts and development overheads. To solve these problems, we propose Alchemy, a distributed processing platform tailored for FQA with high-level programming interface. Alchemy offers distributed computing service and provides a pipeline-based programming model which shares many similarities with the traditional stand-alone systems, reducing learning efforts for financial quantitative analysts. The performance of Alchemy is evaluated in both experimental environment and a real-world production environment in Huatai Securites which is a leading financial company in China. The results show that Alchemy is able to achieve up to 300 times speedup compared against existing financial quantitative analysis systems.
C1 [Gu, Rong; Zhang, Zhixiang; Xu, Zhihao; Yuan, Chunfeng; Huang, Yihua] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Gu, Rong; Zhang, Zhixiang; Xu, Zhihao; Yuan, Chunfeng; Huang, Yihua] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
   [Wang, Zhaokang] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Zhang, Kai] Alibaba Grp, Beijing, Peoples R China.
C3 Nanjing University; Nanjing University; Nanjing University of
   Aeronautics & Astronautics; Alibaba Group
RP Huang, YH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.; Huang, YH (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
EM yhuang@nju.edu.cn
RI Huang, YH/KHZ-6459-2024; Wang, Zhaokang/AAK-9973-2021
FU National Key RAMP;D Program of China [2019YFC1711000]; China National
   Science Foundation [U1811461, 62072230, 61702254]; Collaborative
   Innovation Center of Novel Software Technology and Industrialization;
   Alibaba Innovative Research Project
FX National Key R&D Program of China, Grant/Award Number: 2019YFC1711000;
   China National Science Foundation, Grant/Award Numbers: U1811461,
   62072230, 61702254; Collaborative Innovation Center of Novel Software
   Technology and Industrialization; Alibaba Innovative Research Project
CR Bouslama O-., 2014, International Journal of Economics and Finance, V6, P200, DOI [10.5539/ijef.v6n3p200, DOI 10.5539/ijef.v6n3p200]
   Fang JL, 2014, REV FINANC ECON, V23, P30, DOI 10.1016/j.rfe.2013.05.004
   Garg A., 2017, J BUS FINANC AFFAIRS, V6, pE149
   Ghazi MR, 2015, PROCEDIA COMPUT SCI, V48, P45, DOI 10.1016/j.procs.2015.04.108
   Kakushadze Z, 2016, J INVEST STRATEG, V5, P1, DOI 10.21314/JOIS.2016.072
   McSherry F, 2015, 15 WORKSHOP HOT TOPI
   Salloum S, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0205-4
   Sharma S., 2018, ARCH INT PHARMACOD T, V11, P48
   Vassiliadis P, 2009, INT J DATA WAREHOUS, V5, P1, DOI 10.4018/jdwm.2009070101
   Zaharia M, 2016, COMMUN ACM, V59, P56, DOI 10.1145/2934664
   Zaharia Matei, 2012, Proceedings of the 9th USENIX Conference on Networked Systems Design and Implementation, NSDI'12, P1, DOI DOI 10.1111/J.1095-8649.2005.00662.X
NR 11
TC 0
Z9 0
U1 2
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2021
VL 51
IS 8
BP 1676
EP 1699
DI 10.1002/spe.2982
EA MAY 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TD0EL
UT WOS:000648769400001
DA 2024-07-18
ER

PT J
AU Chen, HH
   Yuan, J
   Jin, H
   Wang, YH
   Wu, SJ
   Jiang, ZH
AF Chen, Hanhua
   Yuan, Jie
   Jin, Hai
   Wang, Yonghui
   Wu, Sijie
   Jiang, Zhihao
TI RGraph: Asynchronous graph processing based on asymmetry of remote
   direct memory access
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE asynchronous execution; distributed graph processing; RDMA
ID FRAMEWORK
AB The scale of real-world graphs is constantly growing. To deal with large-scale graphs, distributed graph processing has attracted much research efforts. Existing distributed graph processing systems are commonly built on traditional TCP/IP communication stack, which leads to network bottleneck because of low bandwidth and heavy kernel stack operations. Meanwhile, in real power-law graphs, the average number of mirror vertices after graph partitioning is very large, resulting in significant communication overhead among nodes. The emerging high-performance Remote Direct Memory Access (RDMA) network has the features of low latency, high bandwidth, and low CPU overhead, which brings new opportunities for distributed graph processing systems. Existing RDMA-assisted graph processing systems focus on synchronous execution, which imposes barriers between consecutive iterations. Synchronous execution transfers bulk data among nodes and thus only needs a small number of network transfers. However, synchronous execution is usually less efficient than asynchronous execution because of bulk synchronization. Asynchronous execution accelerates graph processing by eliminating barriers, which in turn requires to transfer a large amount of small size data. In this paper, we propose RGraph, an RDMA-assisted asynchronous distributed graph processing system. RGraph distributes edges into two parts to isolate master and mirror vertices. RGraph exploits the asymmetry of RDMA to accelerate the one-to-many communication between master and mirror vertices. We implement RGraph on top of PowerGraph and conduct comprehensive experiments with large-scale real graphs to evaluate its performance. Results show that compared to existing designs, RGraph reduces the execution time by up to 81%.
C1 [Chen, Hanhua; Yuan, Jie; Jin, Hai; Wang, Yonghui; Wu, Sijie; Jiang, Zhihao] Huazhong Univ Sci & Technol, Sch Comp Sci & Technol, Serv Comp Technol & Syst Lab, Natl Engn Res Ctr Big Data Technol & Syst,Cluster, Wuhan 430074, Peoples R China.
C3 Huazhong University of Science & Technology
RP Jin, H (corresponding author), Huazhong Univ Sci & Technol, Sch Comp Sci & Technol, Serv Comp Technol & Syst Lab, Natl Engn Res Ctr Big Data Technol & Syst,Cluster, Wuhan 430074, Peoples R China.
EM hjin@hust.edu.cn
OI Chen, Hanhua/0000-0002-8366-7438
FU National Key Research and Development Program of China [2018YFB1004602];
   National Natural Science Foundation of China [61972446]
FX National Key Research and Development Program of China, Grant/Award
   Number: 2018YFB1004602; National Natural Science Foundation of China,
   Grant/Award Number: 61972446
CR Boldi Paolo, 2004, P 13 INT WORLD WID W, P595, DOI DOI 10.1145/988672.988752
   Chen R., 2014, P 23 INT S HIGH PERF, P215
   Chen R., 2012, Proceedings of the 3rd ACM Symposium on Cloud Computing (SoCC '12), P1
   Chen Rong, 2015, EUROSYS, P1
   Chen YM, 2019, PROCEEDINGS OF THE FOURTEENTH EUROSYS CONFERENCE 2019 (EUROSYS '19), DOI 10.1145/3302424.3303968
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Yan D, 2014, PROC VLDB ENDOW, V7, P1981, DOI 10.14778/2733085.2733103
   Feige U, 1998, J ACM, V45, P634, DOI 10.1145/285055.285059
   Gonzalez J. E., 2014, P 11 USENIX S OP SYS, P599
   Gonzalez Joseph E., 2012, 10 USENIX S OP SYST, P17
   Gupta Pankaj, 2013, P 22 INT C WORLD WID, P505, DOI DOI 10.1145/2488388.2488433
   Heidari S, 2018, SOFTWARE PRACT EXPER, V48, P2174, DOI 10.1002/spe.2623
   Jin H, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-017-9226-8
   Kunegis J, 2013, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'13 COMPANION), P1343
   Leskovec J., 2020, SNAP DATASETS STANFO
   Liu XZ, 2018, IEEE T SOFTWARE ENG, V44, P384, DOI 10.1109/TSE.2017.2685387
   Low Y, 2012, PROC VLDB ENDOW, V5, P716, DOI 10.14778/2212351.2212354
   Malewicz Grzegorz, 2010, P ACM SIGMOD INT C M, P135, DOI [DOI 10.1145/1807167.1807184, 10.1145/1807167.1807184]
   Mittal R, 2018, PROCEEDINGS OF THE 2018 CONFERENCE OF THE ACM SPECIAL INTEREST GROUP ON DATA COMMUNICATION (SIGCOMM '18), P313, DOI 10.1145/3230543.3230557
   Page L., 1999, PAGERANK CITATION RA, DOI DOI 10.1109/IISWC.2012.6402911
   Rossi RA, 2015, AAAI CONF ARTIF INTE, P4292
   Roy A, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P410, DOI 10.1145/2815400.2815408
   Shi JX, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P317
   Shvachko K, 2010, IEEE S MASS STOR SYS
   SU MM, 2017, P 12 EUR C COMP, P1, DOI DOI 10.1145/3064176.3064189
   Tian Y, 2013, PROC VLDB ENDOW, V7, P193, DOI 10.14778/2732232.2732238
   VALIANT LG, 1990, COMMUN ACM, V33, P103, DOI 10.1145/79173.79181
   Wei XD, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P233
   Wu M, 2015, ACM SoCC'15: Proceedings of the Sixth ACM Symposium on Cloud Computing, P408, DOI 10.1145/2806777.2806849
   Xie CN, 2015, ACM SIGPLAN NOTICES, V50, P194, DOI [10.1145/2688500.2688508, 10.1145/2858788.2688508]
   Ying TW, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P699, DOI 10.1145/3318464.3380590
   Zaharia M, 2012, P 9 USENIX C NETW SY, P15
   Zamanian E, 2019, PROC VLDB ENDOW, V12, P1637, DOI 10.14778/3342263.3342639
   Zhang XY, 2014, IEEE T PARALL DISTR, V25, P363, DOI 10.1109/TPDS.2013.48
   Zhou AC, 2017, INT CON DISTR COMP S, P1397, DOI 10.1109/ICDCS.2017.98
   Zhu XW, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P301
NR 36
TC 1
Z9 1
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 374
EP 393
DI 10.1002/spe.2979
EA APR 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000644067200001
DA 2024-07-18
ER

PT J
AU Bingmann, T
   Marianczuk, J
   Sanders, P
AF Bingmann, Timo
   Marianczuk, Jasper
   Sanders, Peter
TI Engineering faster sorters for small sets of items
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE base case sorting; sample sort; sorter; sorting; sorting algorithm;
   sorting networks
ID ALGORITHM
AB Sorting a set of items is a task that can be useful by itself or as a building block for more complex operations. That is why a lot of effort has been put into finding sorting algorithms that sort large sets as efficiently as possible. But the more sophisticated and complex the algorithms become, the less efficient they are for small sets of items due to large constant factors. A relatively simple sorting algorithm that is often used as a base case sorter is insertion sort, because it has small code size and small constant factors influencing its execution time. We aim to determine if there is a faster way to sort small sets of items to provide an efficient base case sorter. We looked at sorting networks, at how they can improve the speed of sorting few elements, and how to implement them in an efficient manner using conditional moves. Since sorting networks need to be implemented explicitly for each set size, providing networks for larger sizes becomes less efficient due to increased code sizes. To also enable the sorting of slightly larger base cases, we adapted sample sort to Register Sample Sort, to break down those larger sets into sizes that can in turn be sorted by sorting networks. From our experiments we found that when sorting only small sets of integers, the sorting networks outperform insertion sort by a factor of at least 1.76 for any array size between six and 16, and by a factor of 2.72 on average across all machines and array sizes. When integrating sorting networks as a base case sorter into Quicksort, we achieved far less performance improvements over using insertion sort, which is probably due to the networks having a larger code size and cluttering the L1 instruction cache. The same effect occurs when including Register Sample Sort as a base case sorter for IPS4o. But for x86 machines that have a larger L1 instruction cache of 64 KiB or more, we obtained speedups of 12.7% when using sorting networks as a base case sorter in std::sort, and of 5%-6% when integrating Register Sample Sort as a base case sorter into IPS4o, each in comparison to using insertion sort as the base case sorter. In conclusion, the desired improvement in speed could only be achieved under special circumstances, but the results clearly show the potential of using conditional moves in the field of sorting algorithms.
C1 [Bingmann, Timo; Marianczuk, Jasper; Sanders, Peter] Karlsruhe Inst Technol, Inst Theoret Informat, Fasanengarten 5, D-76131 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Bingmann, T (corresponding author), Karlsruhe Inst Technol, Inst Theoret Informat, Fasanengarten 5, D-76131 Karlsruhe, Germany.
EM bingmann@kit.edu
OI Bingmann, Timo/0000-0003-0529-0097
FU Projekt DEAL
FX Open access funding enabled and organized by Projekt DEAL
CR Ajtai Miklos, 1983, P 15 ANN ACM S THEOR, P1
   [Anonymous], 2010, 2010 IEEE INT S PARA
   [Anonymous], 1998, The art of computer programming: Sorting and searching
   Axtmann M, 2017, LIPICS, V9, P9
   Axtmann M., 2017, 2017 P 19 WORKSH ALG, P83
   Batcher K. E., 1968, P AFIPS SPRING JOINT, P307, DOI [DOI 10.1145/1468075.1468121, 10.1145/1468075. 1468121]
   Bingmann T, 2018, THESIS
   Bingmann T, 2013, LECT NOTES COMPUT SC, V8125, P169, DOI 10.1007/978-3-642-40450-4_15
   Blelloch G. E., 1991, SPAA '91. 3rd Annual ACM Symposium on Parallel Algorithms and Architectures, P3, DOI 10.1145/113379.113380
   BOSE RC, 1962, J ACM, V9, P282, DOI 10.1145/321119.321126
   Bramas B, 2017, INT J ADV COMPUT SC, V8, P337, DOI 10.14569/IJACSA.2017.081044
   Bundala D, 2014, LECT NOTES COMPUT SC, V8370, P236, DOI 10.1007/978-3-319-04921-2_19
   Codish M, 2017, FORM ASP COMPUT, V29, P559, DOI 10.1007/s00165-016-0401-3
   Codish M, 2014, PROC INT C TOOLS ART, P186, DOI 10.1109/ICTAI.2014.36
   Dobbelaere B, 2017, SORTERHUNTER
   Ehlers T, 2015, LECT NOTES COMPUT SC, V9136, P167, DOI 10.1007/978-3-319-20028-6_17
   Elmasry Amr, 2012, Experimental Algorithms. Proceedings 11th International Symposium, SEA 2012, P160, DOI 10.1007/978-3-642-30850-5_15
   FRAZER WD, 1970, J ACM, V17, P496, DOI 10.1145/321592.321600
   Furtak T, 2007, SPAA'07: PROCEEDINGS OF THE NINETEENTH ANNUAL SYMPOSIUM ON PARALLELISM IN ALGORITHMS AND ARCHITECTURES, P348
   Gamble JM, SORTING NETWORK GENE
   GERBESSIOTIS AV, 1994, J PARALLEL DISTR COM, V22, P251, DOI 10.1006/jpdc.1994.1085
   HIBBARD TN, 1963, COMMUN ACM, V6, P206, DOI 10.1145/366552.366557
   HOARE CAR, 1962, COMPUT J, V5, P10, DOI 10.1093/comjnl/5.1.10
   Hou KX, 2018, IEEE T PARALL DISTR, V29, P958, DOI 10.1109/TPDS.2018.2789903
   Inoue H, 2012, SOFTWARE PRACT EXPER, V42, P753, DOI 10.1002/spe.1102
   Karypis G, 1998, SIAM J SCI COMPUT, V20, P359, DOI 10.1137/S1064827595287997
   Mahmoud H.M., 2000, WIL INT S D
   Marianczuk J., 2019, THESIS
   Mueller R, 2012, VLDB J, V21, P1, DOI 10.1007/s00778-011-0232-z
   Musser DR, 1997, SOFTWARE PRACT EXPER, V27, P983, DOI 10.1002/(SICI)1097-024X(199708)27:8<983::AID-SPE117>3.0.CO;2-#
   PARBERRY I, 1991, MATH SYST THEORY, V24, P101, DOI 10.1007/BF02090393
   Sanders P, 2004, LECT NOTES COMPUT SC, V3221, P784
   Sedgewick R., 1983, ALGORITHMS
   Sklyarov V, 2014, MICROPROCESS MICROSY, V38, P470, DOI 10.1016/j.micpro.2014.03.003
   Xiaochen T, 2013, P 3 WORKSH IRR APPL, P1
   Yin Z, 2019, P 21 IEEE INT C HIGH
NR 36
TC 5
Z9 5
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 965
EP 1004
DI 10.1002/spe.2922
EA NOV 2020
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000583759700001
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Pibiri, GE
   Venturini, R
AF Pibiri, Giulio Ermanno
   Venturini, Rossano
TI Practical trade-offs for the prefix-sum problem
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE efficiency; performance evaluation; prefix-sum; SIMD
ID COMPLEXITY
AB Given an integer arrayA, theprefix-sum problemis to answersum(i)queries that return the sum of the elements inA[0..i], knowing that the integers inAcan be changed. It is a classic problem in data structure design with a wide range of applications in computing from coding to databases. In this work, we propose and compare practical solutions to this problem, showing that new trade-offs between the performance of queries and updates can be achieved on modern hardware.
C1 [Pibiri, Giulio Ermanno] ISTI CNR, High Performance Comp Lab, Via G Moruzzi 1, I-56124 Pisa, Italy.
   [Venturini, Rossano] Univ Pisa, Dept Comp Sci, Pisa, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); University
   of Pisa
RP Pibiri, GE (corresponding author), ISTI CNR, High Performance Comp Lab, Via G Moruzzi 1, I-56124 Pisa, Italy.
EM giulio.ermanno.pibiri@isti.cnr.it
RI Pibiri, Giulio Ermanno/KRO-7891-2024
OI Pibiri, Giulio Ermanno/0000-0003-0724-7092
FU BigDataGrapes (EU H2020 RIA) [780751]; Algorithms, Data Structures and
   Combinatorics for Machine Learning [MIUR-PRIN 2017]; OK-INSAID (MIUR-PON
   2018) [ARS01_00917]
FX This work was partially supported by the BigDataGrapes (EU H2020 RIA,
   grant agreement No 780751), the "Algorithms, Data Structures and
   Combinatorics for Machine Learning" (MIUR-PRIN 2017), and the OK-INSAID
   (MIUR-PON 2018, grant agreement No ARS01_00917) projects.
CR [Anonymous], 1989, PROC 1 WADS
   [Anonymous], 1990, SYNTHESIS PARALLEL A
   [Anonymous], 1977, SOLUTIONS KLEES RECT
   BENTLEY JL, 1980, IEEE T COMPUT, V29, P571, DOI 10.1109/TC.1980.1675628
   Bille P, 2018, ALGORITHMICA, V80, P3207, DOI 10.1007/s00453-017-0380-7
   Bille P, 2017, LECT NOTES COMPUT SC, V10508, P91, DOI 10.1007/978-3-319-67428-5_8
   Brodnik A, 2006, INT FED INFO PROC, V209, P103
   Chan TM, 2010, PROC APPL MATH, V135, P161
   Corporation I, 2020, INT INTR GUID
   De Berg M., 2008, Computational Geometry: Algorithms and Applications, V17
   FENWICK PM, 1994, SOFTWARE PRACT EXPER, V24, P327, DOI 10.1002/spe.4380240306
   Fredman M. L., 1989, Proceedings of the Twenty First Annual ACM Symposium on Theory of Computing, P345, DOI 10.1145/73007.73040
   GOODRICH MT, 1994, PROCEEDINGS OF THE FIFTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P241
   Gray J, 1997, DATA MIN KNOWL DISC, V1, P29, DOI 10.1023/A:1009726021843
   Hampapuram H, 1998, SIAM J COMPUT, V28, P1, DOI 10.1137/S0097539795291598
   Harris M., 2007, GPU GEMS, V3, P851
   Hon WK, 2011, THEOR COMPUT SCI, V412, P5176, DOI 10.1016/j.tcs.2011.05.023
   Khuong Paul-Virak, 2017, Journal of Experimental Algorithmics, V22, DOI 10.1145/3053370
   Marchini S, 2020, SOFTWARE PRACT EXPER, V50, P1184, DOI 10.1002/spe.2791
   MEIJER H, 1987, INT J PARALLEL PROG, V16, P127, DOI 10.1007/BF01379098
   Patrascu M, 2006, SIAM J COMPUT, V35, P932, DOI 10.1137/S0097539705447256
   Raman R, 2001, LECT NOTES COMPUT SC, V2125, P426
   RYABKO BY, 1992, IEEE T INFORM THEORY, V38, P1400, DOI 10.1109/18.144725
   Toth CD., 2017, Handbook of Discrete and Computational Geometry
   YAO AC, 1985, SIAM J COMPUT, V14, P277, DOI 10.1137/0214022
NR 25
TC 3
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 921
EP 949
DI 10.1002/spe.2918
EA OCT 2020
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000580566400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ebad, SA
AF Ebad, Shouki A.
TI Healthcare software design and implementation-A project failure case
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE electronic health record; software design; software project management;
   failure; software security
ID INFORMATION-SYSTEMS; RECORDS; PHYSICIANS
AB Electronic health records (EHRs) are implemented by many health care organizations as a potential service solution. Despite the appeal of EHRs, failure in their implementation can lead to negative consequences, ranging from the loss of money to reputation damage, for health care providers. However, the causes of this problem have not attracted the attention of a sufficient number of researchers. This paper aims to investigate this phenomenon objectively and subjectively in a public context using an interview-based qualitative approach supported by archival data and records of a real-world failed EHR project. The results show that the factors influencing failure are divergent and include technical and managerial issues. In particular, the timing and duration of the training as well as the integration of EHR with the enterprise systems were found to be the strongest influencing factors, followed by reasons related to the software design (eg, a lack of required pharmacy functionality) and software people management (eg, resistance to change). The paper also discusses points related to EHR development and design, such as the development paradigm, data quality and validation, architecture for security, and source code naming convention.
C1 [Ebad, Shouki A.] Northern Border Univ, Fac Sci, Dept Comp Sci, Ar Ar, Saudi Arabia.
C3 Northern Border University
RP Ebad, SA (corresponding author), Northern Border Univ, Fac Sci, Dept Comp Sci, Ar Ar, Saudi Arabia.
EM shouki.abbad@nbu.edu.sa
RI Ebad, Shouki A./P-8759-2018
OI Ebad, Shouki A./0000-0003-1043-2774
FU Deanship of Scientific Research at Northern Border University
   [SCI-2018-9-F-7582]
FX Deanship of Scientific Research at Northern Border University,
   SCI-2018-9-F-7582
CR Abouzahra M, 2011, 3 INT C ADV MAN SCI
   Aceituna D, 2014, INFORM SOFTWARE TECH, V56, P321, DOI 10.1016/j.infsof.2013.11.004
   Adebayo Kolawole J., 2014, International Journal of Modern Education and Computer Science, V6, P36, DOI 10.5815/ijmecs.2014.09.06
   Alsharo M, 2020, INFORM HEALTH SOC CA, V45, P43, DOI 10.1080/17538157.2018.1540423
   [Anonymous], 2015, HEALTHCARE DATA GROW
   [Anonymous], 2015, BOOK SOFTWARE ENG 10
   [Anonymous], 2004, 20514 ISODTR
   Atasoy H, 2019, ANNU REV PUBL HEALTH, V40, P487, DOI 10.1146/annurev-publhealth-040218-044206
   Baig MM, 2015, AUSTRALAS PHYS ENG S, V38, P23, DOI 10.1007/s13246-014-0315-4
   Bar-Dayan Y, 2013, J AM MED INFORM ASSN, V20, pE17, DOI 10.1136/amiajnl-2012-001504
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Chen RF, 2012, INT J MED INFORM, V81, P810, DOI 10.1016/j.ijmedinf.2012.05.003
   Duarte JG, 2017, INT J MED INFORM, V102, P80, DOI 10.1016/j.ijmedinf.2017.03.007
   Ebad Shouki A., 2016, International Journal of People-Oriented Programming, V5, P39, DOI 10.4018/IJPOP.2016010103
   Ebad Shouki A., 2016, Journal of Software, V11, P1145, DOI 10.17706/jsw.11.11.1145-1153
   Ebad SA, 2018, J GLOB INF TECH MAN, V21, P139, DOI 10.1080/1097198X.2018.1462071
   Ebad SA, 2017, MALAYS J COMPUT SCI, V30, P99
   Elmasri R., 2015, FUNDAMENTALS DATABAS, V7th
   Feufel MA, 2011, INT J MED INFORM, V80, DOI 10.1016/j.ijmedinf.2010.09.008
   Findikoglu M, 2016, J INF TECHNOL-UK, V31, P382, DOI 10.1057/s41265-016-0023-5
   Gascón F, 2013, INT J MED INFORM, V82, P514, DOI 10.1016/j.ijmedinf.2013.03.006
   Häyrinen K, 2008, INT J MED INFORM, V77, P291, DOI 10.1016/j.ijmedinf.2007.09.001
   Howles T., 2014, Software Quality Professional, V16, P27
   Kaur K, 2015, COMPUTER, V48, P52, DOI 10.1109/MC.2015.77
   Kshetri N, 2014, BIG DATA SOC, V1, DOI 10.1177/2053951714564227
   Nguyen L, 2014, INT J MED INFORM, V83, P779, DOI 10.1016/j.ijmedinf.2014.06.011
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lu SL, 2015, CONCURR COMP-PRACT E, V27, P2602, DOI 10.1002/cpe.3325
   McEvoy D, 2018, J AM MED INFORM ASSN, V25, P572, DOI 10.1093/jamia/ocy007
   McHugh M, 2014, J SOFTW-EVOL PROC, V26, P504, DOI 10.1002/smr.1608
   Schoen C, 2012, HEALTH AFFAIR, V31, P2805, DOI 10.1377/hlthaff.2012.0884
   Schumaker Robert P., 2014, International Journal of Privacy and Health Information Management, V2, P57, DOI 10.4018/ijphim.2014070104
   Standing C, 2015, SYST RES BEHAV SCI, V32, P75, DOI 10.1002/sres.2209
   Stefanou CJ, 2006, J ENTERP INF MANAG, V19, P115, DOI 10.1108/17410390610636913
   Tuikka A, 2015, ACM SIGCAS COMPUTSOC, V45, P73
   Wohlin C., 2012, Experimentation in Software Engineering
   Wu PY, 2017, IEEE T BIO-MED ENG, V64, P263, DOI 10.1109/TBME.2016.2573285
   Yin R, 2014, APPL SOCIAL RES METH, V5th
NR 38
TC 11
Z9 12
U1 4
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1258
EP 1276
DI 10.1002/spe.2807
EA FEB 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA LT6RF
UT WOS:000515309900001
DA 2024-07-18
ER

PT J
AU Perez, TD
   Neves, MV
   Medaglia, D
   Monteiro, PHG
   De Rose, CAF
AF Perez, Taciano D.
   Neves, Marcelo, V
   Medaglia, Diego
   Monteiro, Pedro H. G.
   De Rose, Cesar A. F.
TI Orthogonal persistence in nonvolatile memory architectures: A persistent
   heap design and its implementation for a Java Virtual Machine
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java Virtual Machine; nonvolatile memory; orthogonal persistence;
   persistent memory
AB Current computer systems separate main memory from storage, and programming languages typically reflect this distinction using different representations for data in memory and storage. However, moving data back and forth between these different layers and representations compromise both programming and execution efficiency. To remedy this, the concept of orthogonal persistence (OP) was proposed in the early 1980s advocating that, from a programmer's standpoint, there should be no differences in the way that short-term and long-term data are manipulated. However, at that time, the underlying implementations still had to cope with the complexity of moving data across memory and storage. Today, recent nonvolatile memory (NVM) technologies, such as resistive RAM and phase-change memory, allow main memory and storage to be collapsed into a single layer of persistent memory, opening the way for more efficient programming abstractions for handling persistence. In this work, we revisit OP concepts in the context of NVM architectures and propose a persistent heap design for languages with automatic memory management. We demonstrate how it can significantly increase programmer and execution efficiency, removing the impedance mismatch of crossing semantic boundaries. To validate and demonstrate the presented concepts, we present JaphaVM, an implementation of the proposed design based on JamVM, an open-source Java Virtual Machine. Our results show that JaphaVM, in most cases, executes the same operations between one and two orders of magnitude faster than regular database-based and file-based implementations, while requiring significantly less lines of code.
C1 [Perez, Taciano D.] ASML, Eindhoven, Netherlands.
   [Neves, Marcelo, V; De Rose, Cesar A. F.] Pontificia Univ Catolica Rio Grande do Sul, Polytech Sch, BR-90619790 Porto Alegre, RS, Brazil.
   [Medaglia, Diego; Monteiro, Pedro H. G.] HP Res & Dev, Porto Alegre, RS, Brazil.
C3 ASML Holding; Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Neves, MV (corresponding author), Pontificia Univ Catolica Rio Grande do Sul, Polytech Sch, BR-90619790 Porto Alegre, RS, Brazil.
EM marcelo.neves@pucrs.br
RI Martins Monteiro, Pedro Henrique/HMD-4763-2023; De Rose, Cesar A.
   F./F-9271-2012
OI Veiga Neves, Marcelo/0000-0001-5996-3061; De Rose, Cesar A.
   F./0000-0003-0070-0157
FU HP Inc; Hewlett-Packard Enterprise
FX The authors would like to thank Maiki Buffet, Gabriel Chiele, Natan
   Facchin, Rafael Furtado, Pedro Gyrao, Cristovam Lage, Matheus Alves, and
   Icaro Raupp Henrique from the HP/PUCRS/LIS lab for their contributions
   to the implementation of JaphaVM. The authors would also like to thank
   Dejan S. Milojicic, Susan Spence, and Haris Volos from Hewlett-Packard
   Labs for reviewing early drafts of this paper. This research was
   supported in part by HP Inc and Hewlett-Packard Enterprise.
CR Akiyama F, 1971, P IFIP C 1971 LJUBLJ
   Al-Mansari M, 2007, P 6 WORKSH ASP COMP
   [Anonymous], 2011, P 16 INT C ARCH SUPP
   [Anonymous], JAMVM A COMPACT JAVA
   [Anonymous], 2009, P 36 ANN INT S COMP
   [Anonymous], 2014, P 2014 ACM INT C OBJ
   [Anonymous], 2005, PLEXISTOR SDM USER G
   Atkinson M.P., 1995, VLDB J, V4, P319
   Atkinson Malcolm, 2000, TECHNICAL REPORT
   ATKINSON MP, 1983, COMPUT J, V26, P360, DOI 10.1093/comjnl/26.4.360
   Carey MJ, 1993, P 1993 ACM SIGMOD IN
   Condit Jeremy, 2009, P ACM SIGOPS 22 S OP
   Dearle A, 2000, SOFTWARE PRACT EXPER, V30, P295, DOI 10.1002/(SICI)1097-024X(20000410)30:4<295::AID-SPE301>3.0.CO;2-P
   Dearle A, 1996, 1 INT WORKSH PERS JA
   Dearle A, 2010, LECT NOTES COMPUT SC, V5936, P1
   Dulloor Subramanya R., 2014, P 9 EUR C COMP SYST
   Farkas A, 1995, PERSISTENT OBJECT SY, P302
   Ferreira P, 1996, P 16 INT C DISTR COM
   Free Software Foundation, 2015, GNU CLASSP
   Gosling J., 2000, The Java Language Specification
   Hwang T, 2015, ACM T STORAGE, V11, DOI 10.1145/2629619
   Ibrahim A, 2013, PUBLIC IMPLEMENTATIO
   Intel Corp, 2018, PERS COLL JAV PCJ
   Intel Corp, 2016, NVML LIB
   KITCHENHAM BA, 1990, SOFTWARE ENG J, V5, P50, DOI 10.1049/sej.1990.0007
   Lee BC, 2009, CONF PROC INT SYMP C, P2, DOI 10.1145/1555815.1555758
   Lewis BT, 2000, TECHNICAL REPORT
   Marquez A., 2001, POS 9 REVISED PAPERS, P247
   Pereira RHR, 2011, 6 IB C INF SYST TECH
   Perez T, 2018, JAPHAVM CODE REPOSIT
   Project Gutenberg, 2003, AUG 2003 CD
   Puglia GO, 2019, IEEE ACCESS, V7, P25836, DOI 10.1109/ACCESS.2019.2899463
   SNIA, 2015, NVM PROGR MOD NPM VE
   Stornelli M, 2013, PROTECTED PERSISTENT
   Strukov DB, 2008, NATURE, V453, P80, DOI 10.1038/nature06932
   Suezawa Takashi, 2000, P ACM 2000 C JAV GRA
   The Apache Software Foundation, 2016, AP LUC
   Volos Haris, 2011, P 16 INT C ARCH SUPP
   Welc A, 2006, EUR C OBJ OR PROGR N
   Wilcox Matthew, 2014, SUPPORT EXT4 NV DIMM
   Wu M., 2018, P 23 INT C ARCH SUPP P 23 INT C ARCH SUPP
   Wu Xiaojian, 2011, P 2011 INT C HIGH PE
   Xu J., 2016, 14 USENIX C FIL STOR
NR 43
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2020
VL 50
IS 4
BP 368
EP 387
DI 10.1002/spe.2781
EA DEC 2019
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS7QQ
UT WOS:000503146400001
OA Green Published
DA 2024-07-18
ER

PT J
AU Narayanan, ME
   Muthukumar, B
AF Narayanan, Munisamy Eswara
   Muthukumar, Balasundaram
TI A highly secured and streamlined cloud collaborative editing scheme
   along with an efficient user revocation in cloud computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE access control; attribute-based signature (ABS); cloud collaborative
   editing; cloud computing; MCP-HABE
ID ATTRIBUTE-BASED ENCRYPTION; DATA ACCESS-CONTROL
AB These days with the expanded fame of cloud computing, the interest for cloud-based collaborative editing service is rising. The encryption method is utilized to ensure and secure the data, during the collaborative editing process. In the encryption process, the cloud requires more time to work the collaborative editing. This paper proposes an efficient scheme for reducing the encryption burden over the cooperative users, as the possibilities of cooperative users read and write data by means of any gadget. In the proposed scheme, the encrypted file sent by the data owner is split into smaller segments and stored in the cloud by the cloud service provider (CSP) along with specific tags. Once the cooperative user receives and decrypts the file from the CSP, it modifies and encrypts only the modified segment and resends to the CSP. The CSP after verifying the signature replace the original file segment in the cloud with the modified segment based on the tag information. The scheme that is put forward is performed based on the modified ciphertext-policy hierarchical attribute-based encryption, and the security process is done based on the attribute-based signature schemes. This work employs a proficient attribute updating method to accomplish the dynamic change of users' attributes, consisting granting new attributes, revoking previous attributes, and regranting formerly revoked attributes. A writer's attributes and keys have been revoked, and the stale information cannot be written.
C1 [Narayanan, Munisamy Eswara] Sathyabama Inst Sci & Technol, Chennai 600119, Tamil Nadu, India.
   [Narayanan, Munisamy Eswara] Infosys Ltd, Chennai, Tamil Nadu, India.
   [Muthukumar, Balasundaram] Chennai Inst Technol, Dept Comp Sci & Engn, Chennai, Tamil Nadu, India.
C3 Sathyabama Institute of Science & Technology; Infosys Limited; Chennai
   Institute of Technology
RP Narayanan, ME (corresponding author), Sathyabama Inst Sci & Technol, Chennai 600119, Tamil Nadu, India.; Narayanan, ME (corresponding author), Infosys Ltd, Chennai, Tamil Nadu, India.
EM eswaranarayanan0112@gmail.com
RI B, Muthukumar/C-4761-2017
OI B, Muthukumar/0000-0002-8999-2266
CR [Anonymous], 2006, IACR CRYPTOL EPRINT
   [Anonymous], P 8 ACM SIGSAC S INF
   Attrapadung N, 2009, P 3 INT C PAL ALT CA
   Dai W, 2018, IEEE T INF FOREN SEC, V13, P1169, DOI 10.1109/TIFS.2017.2779427
   Deng H, 2014, INFORM SCI, V273, P70
   Dong X, 2013, IEEE ACM 21 INT S QU
   Dong X, 2015, COMPUT SECUR, V50, P91, DOI 10.1016/j.cose.2015.01.003
   Huang QL, 2017, FUTURE GENER COMP SY, V72, P239, DOI 10.1016/j.future.2016.09.021
   Huang QL, 2015, CHINESE J ELECTRON, V24, P862, DOI 10.1049/cje.2015.10.033
   Hur J, 2013, IEEE T PARALL DISTR, V24, P2171, DOI 10.1109/TPDS.2012.61
   Karati A, 2016, ARAB J SCI ENG, V41, P3201, DOI 10.1007/s13369-016-2156-9
   Kim J, 2016, DATA SCI ENG, V1, P149, DOI 10.1007/s41019-016-0014-0
   Lai J, 2011, 7 INT C INF SEC PRAC
   Lee N, 2011, P 17 INT C PAR DISTR
   Li J, 2015, IEEE T COMPUT, V64, P425, DOI 10.1109/TC.2013.208
   Li M, 2013, IEEE T PARALL DISTR, V24, P131, DOI 10.1109/TPDS.2012.97
   Li YN, 2018, FUTURE GENER COMP SY, V78, P789, DOI 10.1016/j.future.2016.09.003
   Liu Z, 2016, COMPUT J, V59, P983, DOI 10.1093/comjnl/bxv101
   Ruj S, 2014, IEEE T PARALL DISTR, V25, P384, DOI 10.1109/TPDS.2013.38
   Sahai A, 2015, P 24 ANN INT C THEOR
   Sahai A, 2012, P 32 ANN CRYPT C SAN
   Shaw SB, 2014, 2014 INTERNATIONAL CONFERENCE ON GREEN COMPUTING COMMUNICATION AND ELECTRICAL ENGINEERING (ICGCCEE)
   Tassanaviboon A, 2011, P 2 INT WORKSH DAT I
   Wan ZG, 2012, IEEE T INF FOREN SEC, V7, P743, DOI 10.1109/TIFS.2011.2172209
   Wang B, 2012, 10 INT C APPL CRYPT
   Wang BY, 2015, IEEE T SERV COMPUT, V8, P92, DOI 10.1109/TSC.2013.2295611
   Wang BY, 2014, IEEE T CLOUD COMPUT, V2, P43, DOI [10.1109/TCC.2014.2299807, 10.1109/CLOUD.2012.46]
   Wang GJ, 2011, COMPUT SECUR, V30, P320, DOI 10.1016/j.cose.2011.05.006
   Wang HQ, 2018, FUTURE GENER COMP SY, V78, P712, DOI 10.1016/j.future.2017.02.032
   Xie YP, 2019, IEEE T CLOUD COMPUT, V7, P383, DOI 10.1109/TCC.2015.2513388
   Xiong JB, 2014, IEEE T CLOUD COMPUT, V2, P448, DOI 10.1109/TCC.2014.2372758
   Xu Z, 2012, IEEE INT C TRUST SEC
   Yang K, 2016, IEEE T MULTIMEDIA, V18, P940, DOI 10.1109/TMM.2016.2535728
   Yang K, 2014, IEEE T PARALL DISTR, V25, P1735, DOI 10.1109/TPDS.2013.253
   Yang K, 2013, IEEE T INF FOREN SEC, V8, P1790, DOI 10.1109/TIFS.2013.2279531
   Yeh SC, 2013, J NETW COMPUT APPL, V36, P1632, DOI 10.1016/j.jnca.2013.05.012
   Yu S, 2009, 2009 INT C SEC PRIV
   Zheng HD, 2017, MYCOKEYS, P1, DOI 10.3897/mycokeys.26.14506
   Zhu H, 2016, SECUR COMMUN NETW, V9, P2143, DOI 10.1002/sec.1474
   IEEE INFOCOM SER
NR 40
TC 1
Z9 1
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2019
VL 49
IS 12
BP 1728
EP 1747
DI 10.1002/spe.2754
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JH7QQ
UT WOS:000492963400003
DA 2024-07-18
ER

PT J
AU Alqahtani, A
   Solaiman, E
   Patel, P
   Dustdar, S
   Ranjan, R
AF Alqahtani, Awatif
   Solaiman, Ellis
   Patel, Pankesh
   Dustdar, Schahram
   Ranjan, Rajiv
TI Service level agreement specification for end-to-end IoT application
   ecosystems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE IoT; service level agreement; SLA specification
ID INTERNET; THINGS; MANAGEMENT
AB With an ever-increasing variety and complexity of Internet of Things (IoT) applications delivered by increasing numbers of service providers, there is a growing demand for an automated mechanism that can monitor and regulate the interaction between the parties involved in IoT service provision and delivery. This mechanism needs to take the form of a contract, which, in this context, is referred to as a service level agreement (SLA). As a first step toward SLA monitoring and management, an SLA specification is essential. We believe that current SLA specification formats are unable to accommodate the unique characteristics of the IoT domain, such as its multilayered nature. Therefore, we propose a grammar for a syntactical structure of an SLA specification for IoT. The grammar is built based on a proposed conceptual model that considers the main concepts that can be used to express the requirements for hardware and software components of an IoT application on an end-to-end basis. We followed the goal question metric approach to evaluate the generality and expressiveness of the proposed grammar by reviewing its concepts and their predefined lists of vocabularies against two use cases with a considerable number of participants whose research interests are mainly related to IoT. The results of the analysis show that the proposed grammar achieved 91.70% of its generality goal and 93.43% of its expressiveness goal.
C1 [Alqahtani, Awatif; Solaiman, Ellis; Ranjan, Rajiv] Newcastle Univ, Sch Comp, Newcastle Upon Tyne, Tyne & Wear, England.
   [Alqahtani, Awatif] King Saud Univ, Coll Appl Studies & Community Serv, Nat & Engn, Riyadh, Saudi Arabia.
   [Patel, Pankesh] Pandit Deendayal Petr Univ, Gandhinagar, India.
   [Dustdar, Schahram] Vienna Univ Technol, Vienna, Austria.
C3 Newcastle University - UK; King Saud University; Pandit Deendayal Energy
   University; Technische Universitat Wien
RP Alqahtani, A (corresponding author), Newcastle Univ, Sch Comp Sci, Newcastle Upon Tyne, Tyne & Wear, England.
EM a.alqahtani@ncl.ac.uk
RI ALQAHTANI, AWATIF/JAX-6287-2023; Dustdar, Schahram/G-9877-2015; Ranjan,
   Rajiv/F-4700-2011
OI Dustdar, Schahram/0000-0001-6872-8821; Patel,
   Pankesh/0000-0001-5973-4197
FU Newcastle University
FX Newcastle University
CR ALQAHTANI A, 2018, ARXIV181002749
   ALQAHTANI A, 2016, IEEE TECH COMM CYBER, P9
   Alqahtani A, 2018, IEEE ICC
   ANDRIEUX A, 2007, OP GRID FOR SEATTL W
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bhuyan B., 2010, Wirel. Sens. Netw, V2, P861, DOI DOI 10.4236/WSN.2010.211104
   Buyya R., 2016, Internet of Things: Principles and Paradigms
   CALBIMONTE JP, 2014, UTILITY METRICS SPEC
   Díaz M, 2016, J NETW COMPUT APPL, V67, P99, DOI 10.1016/j.jnca.2016.01.010
   DUAN R, 2011, 2011 INT C INT THING
   Flammini A, 2014, PROCEDIA ENGINEER, V87, P672, DOI 10.1016/j.proeng.2014.11.577
   FOK CL, 2011, P 2 WORKSH SOFTW ENG
   Gaillard G, 2014, IEEE IFIP NETW OPER
   Galati A, 2014, LECT NOTES COMPUT SC, V8914, P159, DOI 10.1007/978-3-319-14609-6_11
   GAMEZDIAZ A, 2018, 14 JORN CIENC ING SE
   Gantz J., 2012, The Digital Universe in 2020: Big Data, Bigger Digital Shadows, and Biggest Growth in the Far East, V2012, P1
   Lopez PG, 2015, ACM SIGCOMM COMP COM, V45, P37, DOI 10.1145/2831347.2831354
   Jayaraman PP, 2015, 2015 IEEE TENTH INTERNATIONAL CONFERENCE ON INTELLIGENT SENSORS, SENSOR NETWORKS AND INFORMATION PROCESSING (ISSNIP)
   KEARNEY KT, 2010, 2010 11 IEEE ACM INT
   KIM EC, 2000, NOMS 2000 2000 IEEE
   KOUKI Y, 2014, 2014 14 IEEE ACM INT
   Li BA, 2011, PROCEDIA ENGINEER, V15, DOI 10.1016/j.proeng.2011.08.390
   Li YH, 2019, J PARALLEL DISTR COM, V131, P161, DOI 10.1016/j.jpdc.2019.04.016
   Maarouf A, 2015, 2015 10TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS: THEORIES AND APPLICATIONS (SITA)
   Mahmud R., 2016, INTERNET EVERYTHING
   Molina-Jimenez C, 2018, 2018 IEEE 8TH INTERNATIONAL SYMPOSIUM ON CLOUD AND SERVICE COMPUTING (SC2), P83, DOI 10.1109/SC2.2018.00018
   MOLINAJIMENEZ C, 2019, EUR C PAR PROC GOTT
   Moreno MV, 2014, SENSORS-BASEL, V14, P9582, DOI 10.3390/s140609582
   RADHA K, 2015, INT J ELECT COMPUTER, V5, P158
   Ranjan R, 2017, IEEE CLOUD COMPUT, V4, P20, DOI 10.1109/MCC.2017.55
   SAVOLA RM, 2015, 2015 INF SEC S AFR I
   Solaiman E, 2016, IT PROF, V18, P8, DOI 10.1109/MITP.2016.90
   Stamatakis G, 2014, 2014 4TH INTERNATIONAL CONFERENCE ON WIRELESS COMMUNICATIONS, VEHICULAR TECHNOLOGY, INFORMATION THEORY AND AEROSPACE & ELECTRONIC SYSTEMS (VITAE)
   Uriarte RB, 2014, IEEE IFIP NETW OPER
   URIARTE RB, 2015, THESIS
   van Solingen D.R., 1999, GOAL QUESTION METRIC
   VERMESAN O, 2015, INTERNET THINGS HYPE
   Wang LZ, 2018, FUTURE GENER COMP SY, V78, P353, DOI 10.1016/j.future.2016.06.009
   Wang M, 2018, FUTURE GENER COMP SY, V87, P580, DOI 10.1016/j.future.2018.01.047
   Zheng XR, 2014, IEEE T IND INFORM, V10, P1506, DOI 10.1109/TII.2014.2305641
   2015, PRACTICAL GUIDE CLOU
NR 41
TC 5
Z9 5
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2019
VL 49
IS 12
BP 1689
EP 1711
DI 10.1002/spe.2747
EA SEP 2019
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JH7QQ
UT WOS:000485483100001
DA 2024-07-18
ER

PT J
AU Wang, RY
   Sun, D
   Li, GQ
   Wong, R
   Chen, SP
AF Wang, Ruoyu
   Sun, Daniel
   Li, Guoqiang
   Wong, Raymond
   Chen, Shiping
TI Pipeline provenance for cloud-based big data analytics
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; cloud; data analytic pipeline; Elasticsearch; Hadoop; log;
   Nectar; Pig; provenance
ID ROLLING-UPGRADE
AB Provenance is information about the origin and creation of data. In data science and engineering related with cloud environment, such information is useful and sometimes even critical. In data analytics, it is necessary for making data-driven decisions to trace back history and reproduce final or intermediate results, even to tune models and adjust parameters in a real-time fashion. Particularly, in cloud, users need to evaluate data and pipeline trustworthiness. In this paper, we propose a solution: LogProv, toward realizing these functionalities for big data provenance, which needs to renovate data pipelines or some of big data software infrastructure to generate structured logs for pipeline events, and then stores data and logs separately in cloud space. The data are explicitly linked to the logs, which implicitly record pipeline semantics. Semantic information can be retrieved from the logs easily since they are well defined and structured beforehand. We implemented and deployed LogProv in Nectar Cloud,* associated with Apache Pig, Hadoop ecosystem, and adopted Elasticsearch to provide query service. LogProv was evaluated and empirically case studied. The results show that LogProv is efficient since the performance overhead is no more than 10%; the query can be responded within 1 second; the trustworthiness is marked clearly; and there is no impact on the data processing logic of original pipelines.
C1 [Wang, Ruoyu; Li, Guoqiang] Shanghai Jiao Tong Univ, Sch Software, Shanghai, Peoples R China.
   [Wang, Ruoyu; Sun, Daniel; Wong, Raymond] Univ New South Wales, Sch Comp Sci & Engn, Sydney, NSW, Australia.
   [Sun, Daniel; Chen, Shiping] CSIRO, Data61, Canberra, ACT, Australia.
C3 Shanghai Jiao Tong University; University of New South Wales Sydney;
   Commonwealth Scientific & Industrial Research Organisation (CSIRO)
RP Li, GQ (corresponding author), Shanghai Jiao Tong Univ, Sch Software, Shanghai, Peoples R China.; Sun, D (corresponding author), Univ New South Wales, Sch Comp Sci & Engn, Sydney, NSW, Australia.; Sun, D (corresponding author), CSIRO, Data61, Canberra, ACT, Australia.
EM daniel.sun@data61.csiro.au; li.g@sjtu.edu.cn
RI Wang, Ruoyu/ISU-3815-2023; Chen, Shiping/B-7492-2011
OI Wang, Ruoyu/0000-0002-7091-0291; Chen, Shiping/0000-0002-4603-0024
FU National Natural Science Foundation of China [61872232]; Key the R&D
   Project of Zhejiang Province [2017C02036]; Shanghai Pujiang Program
   [19pj1433100]
FX National Natural Science Foundation of China, Grant/Award Number:
   61872232; Key the R&D Project of Zhejiang Province, Grant/Award Number:
   2017C02036; Shanghai Pujiang Program, Grant/Award Number: 19pj1433100
CR Amsterdamer Y, 2011, PROC VLDB ENDOW, V5, P346, DOI 10.14778/2095686.2095693
   [Anonymous], 2008, The political economy of land tenure in Ethiopia, School of International Relations
   Barga R.S., 2010, IEEE DATA ENG B DEBU, V33, P50
   Bermudez I, 2013, IEEE INFOCOM SER, P230
   Bertino E, 2010, LECT NOTES COMPUT SC, V6358, P1, DOI 10.1007/978-3-642-15546-8_1
   Copeland M., 2015, Microsoft azure, P3, DOI DOI 10.1007/978-1-4842-1043-7_1
   Deelman E, 2009, FUTURE GENER COMP SY, V25, P528, DOI 10.1016/j.future.2008.06.012
   Elo A. E., 1978, The Rating of Chessplayers, Past and Present
   Gantz J., 2012, The Digital Universe in 2020: Big Data, Bigger Digital Shadows, and Biggest Growth in the Far East, V2012, P1
   Glavic B., 2012, SPECIFYING BIG DATA, P72, DOI DOI 10.1007/978-3-642-53974-9_7
   Glavic Boris., 2007, Proceedings of the 12th GI Conference on Datenbanksysteme in Buisness, Technologie und Web (BTW), P227, DOI 10.5167/uzh-24450
   Gramoli V, 2016, IEEE T PARALL DISTR, V27, P2711, DOI 10.1109/TPDS.2015.2499772
   Hoekstra Rinke, 2014, P INT PROV ANN WORKS
   Liu C, 2013, IEEE INT C COMPUT, P1128, DOI 10.1109/CSE.2013.164
   Liu Qing., 2013, Data provenance and data management in eScience
   Ma Y, 2015, INFORM SCIENCES, V319, P171, DOI 10.1016/j.ins.2014.10.006
   Muniswamy-Reddy K.-K., 2009, P 2009 USENIX ANN TE
   Sahoo SS, 2008, IEEE INTERNET COMPUT, V12, P46, DOI 10.1109/MIC.2008.86
   Sculley D., 2014, MACHINE LEARNING HIG
   Simmhan Y, 2009, MSRTR2009125
   Simmhan Y. L., 2005, TECHNICAL REPORT
   Simmhan YL, 2005, SIGMOD REC, V34, P31, DOI 10.1145/1084805.1084812
   Simmhan Y, 2013, COMPUT SCI ENG, V15, P38, DOI 10.1109/MCSE.2013.39
   Simmhan Y, 2011, FUTURE GENER COMP SY, V27, P790, DOI 10.1016/j.future.2010.10.005
   Sun D, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3338851
   Sun D, 2019, J PARALLEL DISTR COM, V127, P184, DOI 10.1016/j.jpdc.2018.02.016
   Sun D, 2018, IEEE T DEPEND SECURE, V15, P811, DOI 10.1109/TDSC.2016.2615919
   Sun D, 2016, IEEE T EMERG TOP COM, V4, P278, DOI 10.1109/TETC.2016.2520883
   Talia D, 2013, COMPUTER, V46, P98, DOI 10.1109/MC.2013.162
   Wang RY, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON BIG DATA (BIG DATA), P1402, DOI 10.1109/BigData.2016.7840748
   Wang Z, 2019, J PARALLEL DISTR COM, V132, P164, DOI 10.1016/j.jpdc.2018.06.009
   Xie X, 2016, P 2016 IEEE 32 INT C
   Xie XK, 2016, VLDB J, V25, P473, DOI 10.1007/s00778-016-0425-6
   Xue GT, 2017, IEEE T MOBILE COMPUT, V16, P1408, DOI 10.1109/TMC.2016.2597839
   Xue XJ, 2016, IEEE SENSOR
   Yilmaz YS, 2014, IEEE GLOB COMM CONF, P2807, DOI 10.1109/GLOCOM.2014.7037233
   Zeng XZ, 2017, J SYST ARCHITECT, V72, P93, DOI 10.1016/j.sysarc.2016.06.008
   Zhao DF, 2013, IEEE INT C CL COMP
   Zhao J, 2004, LECT NOTES COMPUT SC, V3298, P92
NR 39
TC 3
Z9 3
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 658
EP 674
DI 10.1002/spe.2744
EA SEP 2019
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000485339500001
DA 2024-07-18
ER

PT J
AU Guo, JQ
   Dai, YZ
   Wang, CX
   Wu, H
   Xu, TY
   Lin, K
AF Guo, Junqi
   Dai, Yazhu
   Wang, Chixiang
   Wu, Hao
   Xu, Tianyou
   Lin, Kai
TI A physiological data-driven model for learners' cognitive load detection
   using HRV-PRV feature fusion and optimized XGBoost classification
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE classification; cognitive load detection; feature fusion; HRV;
   physiological data-driven model; PRV; XGBoost
ID HEART-RATE-VARIABILITY; PERFORMANCE; PERCEPTIONS; FRAMEWORK
AB Due to the increasing attention to online learning, cognitive load has been recently considered as a crucial indicator for judging teenagers' learning state so as to improve both learning and teaching effects. However, some traditional cognitive load measurement methods such as subjective measurement are easily influenced by subjective sensation deviation of subjects. None of them can reflect the cognitive load of learners more precisely. Recently, machine learning-based data modeling has gained more importance in the scenarios of various smart wearables and Internet of things applications. Meanwhile, physiological signals have proven to contribute much to human health assessment. On the basis of the above considerations, this paper proposes a physiological data-driven model for learners' cognitive load detection under the application of smart wearables. The model consists of four modules: physiological signal acquisition, signal preprocessing, heart rate variability and pulse rate variability feature fusion, and cognitive load classification through an optimized extreme gradient boosting classifier in which hyperparameters are adaptively tuned with sequential model-based optimization. Furthermore, we design an experimental paradigm for signal acquisition in a learning environment, and the experimental results demonstrate that the proposed model for cognitive load detection outperforms conventional approaches that only employ either heart rate variability or pulse rate variability for modeling. We also compare the effects of different feature fusion algorithms combined with different classification algorithms, which demonstrates that the proposed model achieves the highest accuracy of cognitive load detection due to its optimal combination of feature fusion and classification.
C1 [Guo, Junqi; Dai, Yazhu; Wang, Chixiang; Wu, Hao; Xu, Tianyou] Beijing Normal Univ, Coll Informat Sci & Technol, Beijing 100875, Peoples R China.
   [Lin, Kai] Beijing Univ Posts & Telecommun, Int Sch, Telecommun Engn Management, Beijing, Peoples R China.
C3 Beijing Normal University; Beijing University of Posts &
   Telecommunications
RP Wu, H (corresponding author), Beijing Normal Univ, Coll Informat Sci & Technol, Beijing 100875, Peoples R China.
EM wuhao_bnu@163.com
RI wang, yi/KBB-3614-2024; lin, kai/KJL-3762-2024
OI Lin, Kai/0000-0002-7021-8422
FU "Educational Big Data R&D and its Application,"Major Big Data
   Engineering Project of the National Development and Reform Commission
   [240200002]; Beijing Advanced Innovation Center for Future Education
   [BJAICFE2016IR-004]; National Natural Science Foundation of China
   [61401029, 61601033, 61571049]
FX "Educational Big Data R&D and its Application,"Major Big Data
   Engineering Project of the National Development and Reform Commission
   2017, Grant/Award Number: 240200002; Beijing Advanced Innovation Center
   for Future Education, Grant/Award Number: BJAICFE2016IR-004; National
   Natural Science Foundation of China, Grant/Award Number: 61401029,
   61601033, and 61571049
CR Adam S, 2009, INTERACT TECHNOL SMA, V6, P140, DOI 10.1108/17415650911005366
   Adeniyi D., 2016, APPL COMPUT INFORM, V12, P90, DOI [DOI 10.1016/J.ACI.2014.10.001, 10.1016/j.aci.2014.10.001]
   [Anonymous], 2015, CoRR
   Arteaga-Falconi JS, 2016, IEEE T INSTRUM MEAS, V65, P591, DOI 10.1109/TIM.2015.2503863
   Atoui H, 2010, IEEE T INF TECHNOL B, V14, P883, DOI 10.1109/TITB.2010.2047754
   Awodeyi AE, 2015, IEEE INT C BIOINF BI
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bulte CSE, 2011, EUR J ANAESTH, V28, P34, DOI 10.1097/EJA.0b013e32834088c4
   Camm AJ, 1996, EUR HEART J, V17, P354
   Chan D, 1997, J APPL PSYCHOL, V82, P300, DOI 10.1037/0021-9010.82.2.300
   Chen M, 2017, IEEE COMMUN MAG, V55, P54, DOI 10.1109/MCOM.2017.1600410CM
   Chen PSD, 2010, COMPUT EDUC, V54, P1222, DOI 10.1016/j.compedu.2009.11.008
   Chen T., 2016, P 22ND ACM SIGKDD IN
   de Haan G, 2014, PHYSIOL MEAS, V35, P1913, DOI 10.1088/0967-3334/35/9/1913
   Durantin G, 2014, BEHAV BRAIN RES, V259, P16, DOI 10.1016/j.bbr.2013.10.042
   Feng J, 2016, PATTERN RECOGN, V51, P295, DOI 10.1016/j.patcog.2015.08.018
   Ghadimi E, 2015, IEEE T AUTOMAT CONTR, V60, P644, DOI 10.1109/TAC.2014.2354892
   Guzik P, 2007, J PHYSIOL SCI, V57, P63, DOI 10.2170/physiolsci.RP005506
   Ham J, 2005, IEEE T GEOSCI REMOTE, V43, P492, DOI 10.1109/TGRS.2004.842481
   Hutter F, 2012, 5 INT C LEARN INT OP
   Karnin E D, 1990, IEEE Trans Neural Netw, V1, P239, DOI 10.1109/72.80236
   Kittler J, 1998, IEEE T PATTERN ANAL, V20, P226, DOI 10.1109/34.667881
   Kyriazis D, 2013, PROCEDIA COMPUT SCI, V21, P442, DOI 10.1016/j.procs.2013.09.059
   Laguna P, 1998, IEEE T BIO-MED ENG, V45, P698, DOI 10.1109/10.678605
   Leahy W, 2015, EDUC PSYCHOL REV, V27, P291, DOI 10.1007/s10648-015-9296-4
   Li Liping, 2011, SHANDONG U, V41, P102
   Lu Sheng, 2008, J Clin Monit Comput, V22, P23, DOI 10.1007/s10877-007-9103-y
   Mavroforakis ME, 2006, IEEE T NEURAL NETWOR, V17, P671, DOI 10.1109/TNN.2006.873281
   McDuff DJ, 2018, IEEE T BIO-MED ENG, V65, P1725, DOI 10.1109/TBME.2017.2771518
   Mizuno K, 2011, BEHAV BRAIN FUNCT, V7, DOI 10.1186/1744-9081-7-17
   PAAS FGWC, 1994, PERCEPT MOTOR SKILL, V79, P419, DOI 10.2466/pms.1994.79.1.419
   Patel M, 2011, EXPERT SYST APPL, V38, P7235, DOI 10.1016/j.eswa.2010.12.028
   Runswick OR, 2018, APPL COGNITIVE PSYCH, V32, P141, DOI 10.1002/acp.3386
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   Schnotz W, 2007, EDUC PSYCHOL REV, V19, P469, DOI 10.1007/s10648-007-9053-4
   Sun YC, 2016, IEEE ACCESS, V4, P766, DOI 10.1109/ACCESS.2016.2529723
   Sweller John, 2008, Educational Technology, V48, P32
   SWELLER J, 1988, COGNITIVE SCI, V12, P257, DOI 10.1207/s15516709cog1202_4
   Tsagaris V, 2005, IEEE T GEOSCI REMOTE, V43, P2365, DOI 10.1109/TGRS.2005.856104
   Tsunoda K, 2016, PAPER PRESENTED IEEE
   Voss A, 2009, PHILOS T R SOC A, V367, P277, DOI 10.1098/rsta.2008.0232
   Wen J, 2019, IEEE T CIRC SYST VID, V29, P390, DOI 10.1109/TCSVT.2018.2799214
   Yan JJ, 2016, IEEE T MULTIMEDIA, V18, P1319, DOI 10.1109/TMM.2016.2557721
   Zhang L, 2017, IEEE T AFFECT COMPUT, V8, P176, DOI 10.1109/TAFFC.2016.2582490
   Zhang ZL, 2015, IEEE T BIO-MED ENG, V62, P522, DOI 10.1109/TBME.2014.2359372
   Zheng Y., 2008, Language Testing, V25, P408, DOI [DOI 10.1177/0265532208092433, 10.1177/0265532208092433]
   Zhongshen YU, 2015, J DETECT CONTROL
NR 47
TC 4
Z9 4
U1 3
U2 29
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2020
VL 50
IS 11
SI SI
BP 2046
EP 2064
DI 10.1002/spe.2730
EA JUL 2019
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NW3WG
UT WOS:000479760500001
DA 2024-07-18
ER

PT J
AU Yaseen, MU
   Anjum, A
   Farid, M
   Antonopoulos, N
AF Yaseen, Muhammad Usman
   Anjum, Ashiq
   Farid, Mohsen
   Antonopoulos, Nick
TI Cloud-based video analytics using convolutional neural networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; convolutional neural networks; deep learning;
   hyperparameter tuning; video analytics
AB Object classification is a vital part of any video analytics system, which could aid in complex applications such as object monitoring and management. Traditional video analytics systems work on shallow networks and are unable to harness the power of distributed processing for training and inference. We propose a cloud-based video analytics system based on an optimally tuned convolutional neural network to classify objects from video streams. The tuning of convolutional neural network is empowered by in-memory distributed computing. The object classification is performed by comparing the target object with the prestored trained patterns, generating a set of matching scores. The matching scores greater than an empirically determined threshold reveal the classification of the target object. The proposed system proved to be robust to classification errors with an accuracy and precision of 97% and 96%, respectively, and can be used as a general-purpose video analytics system.
C1 [Yaseen, Muhammad Usman; Anjum, Ashiq; Farid, Mohsen; Antonopoulos, Nick] Univ Derby, Dept Elect Comp & Math, Derby, England.
C3 University of Derby
RP Yaseen, MU (corresponding author), Univ Derby, Dept Comp & Math, Derby DE22 1GB, England.
EM m.yaseen@derby.ac.uk
RI Yaseen, Muhammad Usman/AFQ-4449-2022
OI Yaseen, Muhammad Usman/0000-0002-7032-9544; Anjum,
   Ashiq/0000-0002-3378-1152
CR Abdullah T, 2014, P 7 IEEE ACM INT C U
   [Anonymous], 2015, PROC CVPR IEEE
   [Anonymous], APACHE SPARK LIGHTNI
   BioID Technology Research, 2001, The BioID face database
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Carrasco M, 2007, LECT NOTES COMPUT SC, V4872, P114
   Dhanalakshmi A., 2013, International Journal of Advanced Networking and Applications, V4, P1731
   Fox N, 2003, ACM MULT WORKSH BIOM
   Geiger JT, 2014, P 2014 WORKSH MAPP P
   Grozev N, 2014, SOFTWARE PRACT EXPER, V44, P369, DOI 10.1002/spe.2168
   Ikram A, 2015, CONCURR COMP-PRACT E, V27, P1966, DOI 10.1002/cpe.3131
   Ioffe S, 2015, P INT C MACH LEARN, V2015, P1
   Karpathy A, 2014, PROC CVPR IEEE, P1725, DOI 10.1109/CVPR.2014.223
   Lee S-U, 2000, P IAPR C MACH VIS AP
   Levi Gil, 2015, 2015 IEEE Conference on Computer Vision and Pattern Recognition Workshops (CVPRW), P34, DOI 10.1109/CVPRW.2015.7301352
   Li W, 2014, PROC CVPR IEEE, P152, DOI 10.1109/CVPR.2014.27
   Lu YY, 2015, IEEE CONF EVOL ADAPT
   McClatchey R, 2013, INT J MED INFORM, V82, P882, DOI 10.1016/j.ijmedinf.2013.05.005
   Miller H, 2013, ACM SIGPLAN NOTICES, V48, P183, DOI [10.1145/2509136.2509547, 10.1145/2544173.2509547]
   Nanni Loris, 2016, Applied Computing and Informatics, V12, P142, DOI 10.1016/j.aci.2015.02.002
   Reynolds D., 2015, ENCY BIOMETRICS, P827, DOI 10.1007/978-1-4899-7488-4_196
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Soleymani B., 2017, IEEE Transactions on Services Computing, P1
   Steenberg C, 2004, 14 INT C COMP HIGH E
   Van Lingen F, 2005, 34 INT C PAR PROC WO
   VanLingen F, 2004, 14 INT C COMP HIGH E
   Waheed Z, 2016, COMPUT ELECTR ENG, V53, P359, DOI 10.1016/j.compeleceng.2016.03.010
   Yale, 2001, EXT YAL FAC DAT B CR
   Yaseen M.U., 2018, IEEE T SYST MAN CYB, V15, P1
   Yaseen MU, 2016, P 3 IEEE ACM INT C B
   Yaseen MU, 2017, P 4 IEEE ACM INT C B
   Yaseen MU, 2018, FUTURE GENER COMP SY, V80, P286, DOI 10.1016/j.future.2017.02.003
   Yi D, 2014, 22 INT C PATT REC IC
NR 33
TC 7
Z9 7
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2019
VL 49
IS 4
SI SI
BP 565
EP 583
DI 10.1002/spe.2636
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN5AE
UT WOS:000460194000002
DA 2024-07-18
ER

PT J
AU Zhu, XY
   Niu, BB
   Whitehead, EJ
   Sun, ZB
AF Zhu, Xiaoyan
   Niu, Binbin
   Whitehead, E. James, Jr.
   Sun, Zhongbin
TI An empirical study of software change classification with imbalance
   data-handling methods
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bug prediction; change classification; ensemble learning; imbalance
   data; resampling
ID STATIC CODE ATTRIBUTES
AB Bug prediction in software code changes can help developers to find out and fix bugs immediately when they are introduced, thus to improve the effectiveness and validity of bug fixing. In data mining, this problem can be regarded as a change classification task. However, one of its key characteristics, ie, class-imbalance, holds back the performance of standard classification methods. In this paper, we consider a quantity of imbalance data-handling methods and extract a more comprehensive groups of change features, aiming to achieve better change classification performance. Two different types of imbalance data-handling methods, namely, resampling and ensemble learning methods, are employed. Especially, we explore the performance of their combination. To compare the performance of different imbalance data-handling methods, an experiment with 10 open source projects is conducted. Four classification methods, including J48, Naive Bayes, SMO, and Random Forest, are used as standard classifiers and as the base classifiers, respectively. Moreover, contribution of different groups of change features are evaluated. Experimental results show that imbalance data-handling methods can improve the performance of change classification and the combination methods, which take advantage of both ensemble learning and resampling, perform better than using ensemble learning methods or resampling methods individually. Of the studied imbalance data-handling methods, the combination of Bagging and random undersampling with J48 as the base classifier yields out better prediction results than those achieved by other methods. Additionally, of the collected change features, text vector features accounts for a larger proportion than others.
C1 [Zhu, Xiaoyan; Niu, Binbin; Sun, Zhongbin] Xi An Jiao Tong Univ, Sch Elect & Informat Engn, Xian, Shaanxi, Peoples R China.
   [Whitehead, E. James, Jr.] Univ Calif Santa Cruz, Dept Computat Media, Santa Cruz, CA 95064 USA.
C3 Xi'an Jiaotong University; University of California System; University
   of California Santa Cruz
RP Zhu, XY (corresponding author), Xi An Jiao Tong Univ, Dept Comp Sci, Xian 710049, Shaanxi, Peoples R China.
EM zhu.xy@mail.xjtu.edu.cn
RI 朱, 欣妍/JZD-6639-2024; zhu, xin/JXN-3188-2024
FU National Natural Science Foundation of China [61402355, 61502378,
   61702405]; Fundamental Research Funds for the Central Universities
   [xjj2014050]
FX National Natural Science Foundation of China, Grant/Award Number:
   61402355, 61502378, and 61702405; Fundamental Research Funds for the
   Central Universities, Grant/Award Number: xjj2014050
CR AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   [Anonymous], 6 IEEE INT WORKSH SO
   [Anonymous], P ACM SIGS 20 INT S
   [Anonymous], 1995, THESIS
   [Anonymous], P 28 IEEE ACM INT C
   [Anonymous], 1993, MORGAN KAUFMANN SERI
   [Anonymous], P 2013 INT C SOFTW E
   [Anonymous], 35 INT C SOFTW ENG S
   [Anonymous], 2007, P 24 INT C MACH LEAR
   [Anonymous], P 2 ACM IEEE INT S E
   [Anonymous], P 2005 INT WORKSH MI
   [Anonymous], MICROSYS TECHNOLOGIE
   [Anonymous], 2014, UNDERSTAND STATIC CO
   [Anonymous], P 29 INT C SOFTW ENG
   [Anonymous], P 8 WORK C MIN SOFT
   [Anonymous], P 2004 ACM SIGSOFT I
   [Anonymous], P 30 INT C INT C MAC
   [Anonymous], P 45 ANN SE REG C WI
   [Anonymous], P 24 ACM SIGSOFT INT
   [Anonymous], P 30 INT C SOFTW ENG
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Atkeson CG, 1997, ARTIF INTELL REV, V11, P11, DOI 10.1023/A:1006559212014
   Bishnu PS, 2012, IEEE T KNOWL DATA EN, V24, P1146, DOI 10.1109/TKDE.2011.163
   Breiman L., 2001, Mach. Learn., V45, P5
   Cleary JG, 1995, P 12 INT C MACH LEAR
   Dash M., 1997, Intelligent Data Analysis, V1
   Drown DJ, 2009, IEEE T SYST MAN CY A, V39, P1097, DOI 10.1109/TSMCA.2009.2020804
   Duda R. O., 1973, PATTERN CLASSIFICATI, V3
   Ebrahimi NB, 1997, IEEE T SOFTWARE ENG, V23, P529, DOI 10.1109/32.624308
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Friedman J, 2000, ANN STAT, V28, P337, DOI 10.1214/aos/1016218223
   Guo H., 2004, SIGKDD EXPLORATIONS, V6, P30, DOI DOI 10.1145/1007730.1007736
   Hall M.A., 1999, P 17 INT C MACHINE L, P359
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Holland JH., 1975, Ann Arbor
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Joachims T., 1998, Machine Learning: ECML-98. 10th European Conference on Machine Learning. Proceedings, P137, DOI 10.1007/BFb0026683
   JOHN G, 1994, P 11 INT C MACH LEAR
   John G., 1995, P 11 C UNCERTAINTY A
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kittler J, 1998, IEEE T PATTERN ANAL, V20, P226, DOI 10.1109/34.667881
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rokach L, 2010, ARTIF INTELL REV, V33, P1, DOI 10.1007/s10462-009-9124-7
   Seiffert C, 2009, IEEE T SYST MAN CY A, V39, P1283, DOI 10.1109/TSMCA.2009.2027131
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Tan M., 2015, IEEE ACM 37 IEEE INT
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thelin T, 2002, INFORM SOFTWARE TECH, V44, P683, DOI 10.1016/S0950-5849(02)00095-2
   Wang S, 2017, I C NETWORK PROTOCOL
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Xia X, 2016, IEEE T RELIAB, V65, P1810, DOI 10.1109/TR.2016.2588139
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yi QP, 2015, IEEE ICST WORKSHOP
   Zhu ML, 2006, IEEE T PATTERN ANAL, V28, P1274, DOI 10.1109/TPAMI.2006.172
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
NR 62
TC 5
Z9 5
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2018
VL 48
IS 11
BP 1968
EP 1999
DI 10.1002/spe.2606
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GW3WX
UT WOS:000446841000003
DA 2024-07-18
ER

PT J
AU Fan, GS
   Chen, LQ
   Yu, HQ
   Liu, DM
AF Fan, Guisheng
   Chen, Liqiong
   Yu, Huiqun
   Liu, Dongmei
TI Formally modeling and analyzing cost-aware job scheduling for cloud data
   center
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE alternating direction method of multipliers; cloud data center; cost;
   job scheduling; Petri nets
ID ENERGY-CONSUMPTION; VIRTUAL MACHINES; CONSOLIDATION; SYSTEMS; TASKS
AB With the rapid development of cloud computing, many distributed data centers have been deployed. This means larger energy consumption requirements from the data center. How to reduce the cost of data center has received significant attention recently. Although there are several efforts in studying energy consumption of the data center, very few have considered modeling and analyzing cost-aware job scheduling for the cloud data center. To address this emerging problem, we propose a systematic approach that considers both basic elements and their relationships in cloud data center. First, we present a formal language to describe the cloud data center, and a job scheduling net is proposed to formally model the basic elements such as user request, Web portal, data center, and server. Second, we minimize the total cost of the cloud data center by considering the multidimensional resource and local electricity price on the basis of the state space of constructed model. The dynamic job scheduling algorithm and its specific execution steps are proposed based on the alternating direction method of multipliers algorithm. Third, the operational semantics and related theories of Petri nets for establishing the correctness of our proposed method are presented. Finally, a series of simulations are performed to illustrate that the proposed method can guarantee the correct behavior of job scheduling in the cloud data center while meeting the required cost.
C1 [Fan, Guisheng; Yu, Huiqun; Liu, Dongmei] East China Univ Sci & Technol, Dept Comp Sci & Engn, 130 Meilong Rd, Shanghai 200237, Peoples R China.
   [Chen, Liqiong] Shanghai Inst Technol, Dept Comp Sci & Informat Engn, 100 Haiquan Rd, Shanghai 201418, Peoples R China.
C3 East China University of Science & Technology; Shanghai Institute of
   Technology
RP Fan, GS (corresponding author), East China Univ Sci & Technol, Dept Comp Sci & Engn, 130 Meilong Rd, Shanghai 200237, Peoples R China.; Chen, LQ (corresponding author), Shanghai Inst Technol, Dept Comp Sci & Informat Engn, 100 Haiquan Rd, Shanghai 201418, Peoples R China.
EM gsfan@ecust.edu.cn; lqchen@sit.edu.cn
FU National Natural Science Foundation of China [61702334, 61772200];
   Shanghai Pujiang Talent Program [17PJ1401900]; Shanghai Municipal
   Natural Science Foundation [17ZR1406900, 17ZR1429700]; Action Plan for
   Innovation on Science Technology Projects of Shanghai [16511101000];
   Collaborative Innovation Foundation of Shanghai Institute of Technology
   [XTCX2016-20]; Educational Research Fund of ECUST [ZH1726108]
FX National Natural Science Foundation of China, Grant/Award Number:
   61702334 and 61772200; Shanghai Pujiang Talent Program, Grant/Award
   Number: 17PJ1401900; Shanghai Municipal Natural Science Foundation,
   Grant/Award Number: 17ZR1406900 and 17ZR1429700; Action Plan for
   Innovation on Science Technology Projects of Shanghai, Grant/Award
   Number: 16511101000; The Collaborative Innovation Foundation of Shanghai
   Institute of Technology, Grant/Award Number: XTCX2016-20; Educational
   Research Fund of ECUST, Grant/Award Number: ZH1726108
CR Abd SK, 2017, J COMPUT SCI-NETH, V21, P349, DOI 10.1016/j.jocs.2016.11.007
   Adnan MA, 2013, 2013 DES AUT TEST EU
   Al-Ayyoub M, 2015, CLUSTER COMPUT, V18, P919, DOI 10.1007/s10586-015-0449-5
   [Anonymous], STATE ART POWER SAVI
   [Anonymous], 2011, HADOOP MAPREDUCE TUT
   Arianyan E, 2015, COMPUT ELECTR ENG, V47, P222, DOI 10.1016/j.compeleceng.2015.05.006
   Babu LDD, 2013, APPL SOFT COMPUT, V13, P2292, DOI 10.1016/j.asoc.2013.01.025
   Baliga J, 2011, P IEEE, V99, P149, DOI 10.1109/JPROC.2010.2060451
   Buyya Rajkumar, 2009, 2009 International Conference on High Performance Computing & Simulation (HPCS), P1, DOI 10.1109/HPCSIM.2009.5192685
   Cai X, 2014, ADV INTELLIGENT SYST, V255
   Cao Z, 2008, J SUPERCOMPUT, V69, P429
   Celaya J, 2014, 2014 IEEE ACM 7 INT
   Chang V, 2016, FUTURE GENER COMP SY, V57, P24, DOI 10.1016/j.future.2015.09.031
   Chen HK, 2015, J SYST SOFTWARE, V99, P20, DOI 10.1016/j.jss.2014.08.065
   Cook G., 2011, How Dirty is Your Data? A Look at the Energy Choices that Power Cloud Computing
   De Maio V, 2016, FUTURE GENER COMP SY, V56, P388, DOI 10.1016/j.future.2015.07.007
   Deng ZG, 2014, CLUSTER COMPUT, V17, P1295, DOI 10.1007/s10586-014-0378-8
   Ding YW, 2015, FUTURE GENER COMP SY, V50, P62, DOI 10.1016/j.future.2015.02.001
   Ding ZH, 2016, IEEE T SYST MAN CY-S, V46, P483, DOI 10.1109/TSMC.2015.2433892
   Fan G, 2010, P 2010 AS PAC SOFTW
   Fan GS, 2016, IEEE T NETW SERV MAN, V13, P281, DOI 10.1109/TNSM.2016.2553157
   Federal Energy Regulatory Commission, 2017, EL POW MARK NAT OV
   Ghosh R, 2013, FUTURE GENER COMP SY, V29, P1216, DOI 10.1016/j.future.2012.06.005
   Girault C., 2003, Petri Nets for Systems Engineering: A Guide to Modeling, Verification, and Applications, DOI [10.1007/978.3-602-05324-9, DOI 10.1007/978-3-662-05324-9]
   Guan HB, 2015, IEEE T PARALL DISTR, V26, P2434, DOI 10.1109/TPDS.2014.2350499
   He B, 2015, SIAM J NUMER ANAL, V50, P700
   Hong L, 2016, ADV MECH ENG, V8, DOI 10.1177/1687814016648649
   Hsu CH, 2014, INFORM SCIENCES, V258, P452, DOI 10.1016/j.ins.2012.10.041
   Huang J, 2014, 2014 INT C HIGH PERF
   Ignacio A, 2015, 2015 IEEE 8 INT C CL
   Ismail L, 2015, SOFTWARE PRACT EXPER, V45, P765, DOI 10.1002/spe.2258
   Jia Y, 2013, 28 ANN ACM S APPL CO
   Jiang DD, 2016, TELECOMMUN SYST, V63, P89, DOI 10.1007/s11235-015-9975-y
   Kaplan J, 2009, REVOLUTIONIZING DATA
   Keshanchi B, 2017, J SYST SOFTWARE, V124, P1, DOI 10.1016/j.jss.2016.07.006
   Kliazovich D, 2013, 2013 IEEE INT C GREE
   Kumbhare AG, 2015, IEEE T CLOUD COMPUT, V3, P105, DOI 10.1109/TCC.2015.2394316
   Lu X, 2015, 2015 IEEE 8 INT C CL
   Qureshi A, 2009, ACM SIGCOMM COMP COM, V39, P123, DOI 10.1145/1594977.1592584
   Sheeja YS, 2014, 2014 1 INT C COMP SY
   Sheikhalishahi M, 2015, SOFTWARE PRACT EXPER, V45, P161, DOI 10.1002/spe.2223
   Sun D, 2015, INFORM SCI, V319, P452
   Tim Jones M, 2011, SCHEDULING HADOOP IN
   Tong Y, 2017, IEEE T AUTOMAT CONTR, V62, P2823, DOI 10.1109/TAC.2016.2620429
   Toosi AN, 2015, 2015 IEEE ACM 8 INT
   Wang W, 2016, SC16 INT C HIGH PERF
   Wei HW, 2016, SOFTWARE PRACT EXPER, V46, P581, DOI 10.1002/spe.2323
   Xiao ZJ, 2015, J SYST SOFTWARE, V101, P260, DOI 10.1016/j.jss.2014.12.030
   Xiong YH, 2016, J NETW COMPUT APPL, V59, P63, DOI 10.1016/j.jnca.2015.06.017
   Yang Y, 2017, IEEE T CLOUD COMPUT, V5, P168, DOI 10.1109/TCC.2015.2459704
   Zeng W, 2016, J INF SECUR APPL, V27-28, P103, DOI 10.1016/j.jisa.2016.03.002
   Zhu XM, 2014, IEEE TRANS CLOUD COM, V2, P168, DOI 10.1109/TCC.2014.2310452
NR 52
TC 4
Z9 5
U1 1
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2018
VL 48
IS 9
BP 1536
EP 1559
DI 10.1002/spe.2590
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GP5RZ
UT WOS:000440932300002
DA 2024-07-18
ER

PT J
AU Márton, G
   Porkolab, Z
AF Marton, Gabor
   Porkolab, Zoltan
TI Selective friends in C plus
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C plus plus programming language; encapsulation; friend; selective
   friend
ID C++ SOFTWARE; ENCAPSULATION
AB There is a strong prejudice against the friendship access control mechanism in C++. People claim that friendship breaks the encapsulation, reflects bad design, and creates too strong coupling. However, friends appear even in the most carefully designed systems, and if it is used judiciously (like using the attorney-client idiom), they may be better choice than widening the public interface of the class. In this paper, we investigate how the friendship mechanism is used in C++ programs. We have made measurements on several open source projects to understand the current use of friends. Our results show various holes and errors in friend usage, like friend functions accessing only public members or not accessing members at all or the class, which declare friends has no private members at all. The results also show that friend functions actually use only a low percentage of the private members they were granted to access, which is a source of errors. These results have motivated us to propose a selective friend language construct for C++, which can restrict friendship only to well-defined members. Such a new language element may decrease the degradation of encapsulation and significantly increase the diagnostic capacity of the compiler. We have created a proof-of-concept implementation based on the LLVM/Clang compiler infrastructure to show that such constructs can be established with a minimal syntactical and compilation overhead.
C1 [Marton, Gabor; Porkolab, Zoltan] Eotvos Lorand Univ, Dept Programming Languages & Compilers, Pazmany Peter Setany 1-C, H-1117 Budapest, Hungary.
C3 Eotvos Lorand University
RP Márton, G (corresponding author), Eotvos Lorand Univ, Dept Programming Languages & Compilers, Pazmany Peter Setany 1-C, H-1117 Budapest, Hungary.
EM martongabesz@gmail.com
RI Porkolab, Zoltan/H-8233-2017; MARTON, George Iuliu/ABA-4677-2020
OI MARTON, George Iuliu/0000-0003-2469-4900
CR Aldrich J, 2002, ACM SIGPLAN NOTICES, V37, P311, DOI 10.1145/583854.582448
   Almeida PS, 1997, LECT NOTES COMPUT SC, V1241, P32, DOI 10.1007/BFb0053373
   [Anonymous], OBJECT ORIENTED PROG
   [Anonymous], 2014, ADA LETT, DOI DOI 10.1145/2692956.2663188
   Berge A, 2016, TALES C PLUS PLUS FR
   Bolton AR, 2006, FRIENDSHIP ATTORNEYC
   Boostorg, BOOST OP LIB 2008
   Boostorg, BOOST C PLUS PLUS LI
   Boyapati C, 2003, ACM SIGPLAN NOTICES, V38, P213, DOI 10.1145/640128.604156
   Comprehensive Perl Archive Network, PERLT TOMS OBJ OR TU
   Coplien J.O., 1995, C++ REP, V7, P24
   Counsell S, 2000, J SYST SOFTWARE, V53, P15, DOI 10.1016/S0164-1212(00)00004-2
   Dlangorg, D PROGR LANG FRIENDS
   Eiffel Documentation, ADD CLASS FEAT MAK F
   English M, ANAL USE FRIENDS C P
   English M, 2005, INT S EMP SOFTW ENG
   English M, 2005, P 13 INT WORKSH PROG
   English M, 2012, COMPUT LANG SYST STR, V38, P300, DOI 10.1016/j.cl.2012.06.002
   English M, 2010, J SYST SOFTWARE, V83, P2275, DOI 10.1016/j.jss.2010.07.013
   Gosling J., 2015, The Java Language Specification
   HOGG J, 1991, SIGPLAN NOTICES, V26, P271
   ISO, 2017, ISO/IEC 14882:2017 Information technology-Programming languages-C++, V5th
   ISO, 2006, 254362006 ISOIEC
   ISO ISO \ IEC 14882:2014, 2014, 148822014 ISOIEC
   isocpp org, C PLUS PLUS FAQ FRIE
   isocpp org, 2016, C PLUS PLUS FRIENDS
   Khan ME, 2012, INT J ADV COMPUT SC, V3, P12
   Kniesel G, 1999, P INT WORKSH AL OBJ
   LLVMOrg, 2016, CLANG C LANG FAM FRO
   LLVMOrg, CLANG 3 7 DOC TUT BU
   Marton G, 2016, SELECTIVE FRIEND 201
   Marton G, FRIEND STAT 2016
   Meyers S, 2005, EFFECTIVE C PLUS PLU, P256
   Meyers S., 2014, Effective Modern C++
   Microsoft Developer Network, ACC MOD C REF 2016
   Microsoft Developer Network, INT CLASS 2016
   Misfeldt T, 2004, ELEMENTS C STYLE, P77
   Nidhra S, 2012, Int. J. Embed. Syst. Appl, V2, P29, DOI [DOI 10.5121/IJESA.2012.2204, 10.5121/ijesa.2012.2204]
   Nierstrasz O., 1989, Object-Oriented Concepts, Databases and Applications, P3
   Noble J., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P158, DOI 10.1007/BFb0054091
   Oracle, OR CONTR ACC MEMB CL
   Python SoftwareFoundation, PYTH LANG REF 2016
   Qt, 2018, CROSS PLATF SOFTW DE
   Savikko V, 1997, P 6 INT PYTH C CIT T
   Schärli N, 2004, ACM SIGPLAN NOTICES, V39, P130, DOI 10.1145/1035292.1028988
   Scharli N, 2004, ECOOP 04, P248
   Schling B, 2011, BOOST C PLUS PLUS LI
   SNYDER A, 1986, SIGPLAN NOTICES, V21, P38, DOI 10.1145/960112.28702
   Stackoverflow, 2016, NAM THIS KEY OR ACC
   Stackoverflow, WHY CAN OUT JAV CLAS
   Stackoverflow, IS THER WAY SIM FRIE
   Stackoverflow, WHAT IS C EQ FRIEND
   Stroustrup B, 1994, DESIGN EVOLUTION C, P53
   Stroustrup Bjarne, 2013, The C++ programming language
   Sutter H, 2004, C PLUS PLUS DEPTH SE
   The Rust Project Developers, RUST DOC 2018
   Wikibooks org, 2016, MOR C PLUS PLUS FRIE
   Wikipedia org, 2016, EIFF PROGR LANG 2016
   Wilkie FG, 2001, INFORM SOFTWARE TECH, V43, P801, DOI 10.1016/S0950-5849(01)00198-7
NR 59
TC 0
Z9 0
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2018
VL 48
IS 8
BP 1493
EP 1519
DI 10.1002/spe.2587
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GL9XH
UT WOS:000437696200005
DA 2024-07-18
ER

PT J
AU Guimaraes, E
   Vidal, S
   Garcia, A
   Pace, JAD
   Marcos, C
AF Guimaraes, E.
   Vidal, S.
   Garcia, A.
   Diaz Pace, J. A.
   Marcos, C.
TI Exploring architecture blueprints for prioritizing critical code
   anomalies: Experiences and tool support
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architecture blueprints; code anomaly; empirical evaluation; software
   architecture; tool support
AB The manifestation of code anomalies in software systems often indicates symptoms of architecture degradation. Several approaches have been proposed to detect such anomalies in the source code. However, most of them fail to assist developers in prioritizing anomalies harmful to the software architecture of a system. This article presents an investigation on how developers, when supported by architecture blueprints, are able to prioritize architecturally relevant code anomalies. First, we performed a controlled experiment where participants explored both blueprints and source code to reveal architecturally relevant code anomalies. Although the use of blueprints has the potential to improve code anomaly prioritization, the participants often made several mistakes. We found these mistakes might occur because developers miss relationships between implementation and blueprint elements when they prioritize anomalies in an ad hoc manner. Furthermore, the time spent on the prioritization process was considerably high. Aiming to improve the accuracy and effectiveness of the process, we provided means to automate the prioritization process. In particular, we explored 3 prioritization criteria, which establish different ways of relating the blueprint elements with code anomalies. These criteria were implemented in the JSpIRIT tool. The approach was evaluated in the context of 2 applications with satisfactory precision results.
C1 [Guimaraes, E.] Univ Fortaleza UNIFOR, Technol Sci Ctr, Fortaleza, Ceara, Brazil.
   [Vidal, S.; Diaz Pace, J. A.] UNICEN, ISISTAN CONICET Res Inst, Tandil, Argentina.
   [Garcia, A.] Pontifical Catholic Univ Rio de Janeiro PUC Rio, Software Engn Lab LES, Rio De Janeiro, Brazil.
   [Marcos, C.] UNICEN, ISISTAN CIC Res Inst, Tandil, Argentina.
C3 Universidade Fortaleza; Pontificia Universidade Catolica do Rio de
   Janeiro
RP Vidal, S (corresponding author), UNICEN, ISISTAN CONICET Res Inst, Tandil, Argentina.
EM svidal@exa.unicen.edu.ar
OI Vidal, Santiago/0000-0003-2440-3034
CR [Anonymous], J SOFT ENG RES DEV
   [Anonymous], [No title captured]
   [Anonymous], AUTOM SOFTW ENG
   [Anonymous], P 9 WORK C REV ENG W
   Arcoverde R, 2013, 2013 27 BRAZ S SOFTW
   Arcoverde R, 2012, P 3 INT WORKSH REC S
   Baltes S, 2014, P 22 ACM SIGSOFT INT
   Basili V., 1994, The Goal Question Metric Approach, P528
   Fernandes E, 2016, P 20 INT C EV ASS SO
   Ferreira M, 2014, P 29 ANN ACM S APPL
   Figueiredo E, 2008, 2008 P 30 INT C SOFT
   Figueiredo E, 2008, 2008 12 EUR C SOFTW
   Fontana FA, 2017, 2017 INT C SOFTW ARC
   Fontana FA, 2017, KNOWL BASED SYST
   Fontana FA, 2015, 2015 IEEE 7 INT WORK
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fowler M., 2009, Refactoring: improving the design of existing code
   Garcia J., 2009, INT C QUAL SOFTW ARC
   Garcia J, 2009, 2009 13 EUR C SOFTW
   Garcia J., 2012, P 11 ANN INT C ASP O
   Garcia J., 2014, UNIFIED FRAMEWORK ST
   GODFREY MW, 2000, P 2 S CONSTR SOFTW E
   GuimarAes E, 2015, P 14 INT C MOD FORT
   Guimaraes E., 2014, 2014 IEEE 38 ANN COM
   Hochstein L, 2005, INFORM SOFTWARE TECH, V47, P643, DOI 10.1016/j.infsof.2004.11.005
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lange CF, 2004, P 8 INT C EMP ASS SO
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   Macia I, 2013, 2013 17 EUR C SOFTW
   Macia I, 2011, P 10 INT C ASP OR SO
   Macia I, 2012, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2012.35
   Maffort C, 2013, 2013 20 WORK C REV E
   Maiga A, 2012, 2012 P 27 IEEE ACM I
   Maneerat N, 2011, 2011 8 INT JOINT C C
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Marinescu R, 2010, 2010 14 EUR C SOFTW
   Marinescu R, 2004, P 20 IEEE INT C SOFT
   McCallum A.K., 2002, MALLET MACHINE LEARN
   Mo R., 2015, 2015 12 WORK IEEE IF
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Nguyen TT, 2011, P 33 INT C SOFTW ENG
   Oizumi W., 2016, P 38 INT C SOFTW ENG
   Olbrich SM, 2010, PROC IEEE INT CONF S
   Padilha J, 2014, INT C ADV INF SYST E
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Ratzinger Jacek., 2005, Improving evolvability through refactoring, V30
   Ricci F, 2011, RECOMMENDER SYSTEMS HANDBOOK, P1, DOI 10.1007/978-0-387-85820-3_1
   Sant'Anna C, 2007, EUR C SOFTW ARCH SPR
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Vidal SA, 2013, J SYST SOFTWARE, V86, P1482, DOI 10.1016/j.jss.2012.12.045
   Wohlin C., 2012, Experimentation in Software Engineering
   Wong SMS, 2011, ADV M C M, P33, DOI 10.1079/9781845937607.0033
   Yamashita A, 2013, P 2013 INT C SOFTW E
NR 56
TC 8
Z9 8
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2018
VL 48
IS 5
BP 1077
EP 1106
DI 10.1002/spe.2563
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC4BJ
UT WOS:000429727600005
DA 2024-07-18
ER

PT J
AU Ozkaya, M
AF Ozkaya, Mert
TI The analysis of architectural languages for the needs of practitioners
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ADLs; architectural languages; software architectures; survey; UML
ID SOFTWARE ARCHITECTURE; COMPONENT MODEL; SPECIFICATION; SUPPORT; ADL;
   SEMANTICS; SYSTEMS; DESIGN; LOGIC
AB Architectural languages (ALs) have attracted much attention as the modeling notations for specifying and reasoning about important design decisions. In this study, 124 different existing ALs have been analyzed for a set of requirements that are crucial for practitioners. These requirements are concerned with language definition, language features, and tool support. Some of the important findings obtained from the analysis are as follows: (1) performance is the top popular nonfunctional requirement supported by ALs; (2) no ALs offer both textual and visual notation sets, one of which could be used independently; (3) process algebras are the top preferred formal method by formal ALs; (4) the physical, deployment, and operational viewpoints are rarely supported by ALs; (5) the top preferred extension mechanism of the extensible ALs is XML for syntax extension; (6) Java is the top preferred programming language in generating software code; (7) the exhaustive model checking is the top preferred automated analysis method; (8) the logic-based formal techniques are so popular in specifying system requirements; (9) among the analysis properties considered, consistency is the top supported property for the automated checking; and (10) most ALs do not provide any discussion platform (eg, forums). Hence, these findings can be used by the new AL developers in addressing the needs of practitioners and bridging the gaps in the field. Practitioners can also use the findings to find out about the existing ALs and compare them to choose the one(s) that suits their needs best.
C1 [Ozkaya, Mert] Istanbul Kemerburgaz Univ, Dept Comp Engn, Altinbas Univ, Istanbul, Turkey.
C3 Altinbas University
RP Ozkaya, M (corresponding author), Altinbas Univ, Dept Comp Engn, Istanbul, Turkey.
EM mert.ozkaya@kemerburgaz.edu.tr
RI Ozkaya, Mert/P-1420-2017
OI Ozkaya, Mert/0000-0002-3464-6489
FU Scientific and Technological Research Council of Turkey (TUBITAK)
   [215E159]
FX Scientific and Technological Research Council of Turkey (TUBITAK),
   Grant/Award Number: 215E159
CR Aarts F, 2010, LECT NOTES COMPUT SC, V6269, P71, DOI 10.1007/978-3-642-15375-4_6
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Aldrich J, 2002, P 16 EUR C OBJ OR PR
   Ali N, 2008, P 1 INT WORKSH SOFTW, DOI [10. 1145/1370888. 1370897, DOI 10.1145/1370888.1370897]
   Ali N, 2007, SOFTWARE ENG TECHNIQ, P37, DOI DOI 10.1007/978-0-387-39388-9_4
   Ali N, 2010, J SYST SOFTWARE, V83, P937, DOI 10.1016/j.jss.2009.12.009
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   ALLEN R, 1994, P 16 INT C SOFTW ENG
   Alloui I, 2001, ENTERPRISE INFORM SY
   Ameller D., 2012, Proceedings from RE: The 20th International Requirements Engineering Conference, P41, DOI DOI 10.1109/RE.2012.6345838
   Amirat A, 2009, J OBJECT TECHNOL, V8, P107, DOI 10.5381/jot.2009.8.7.a3
   [Anonymous], 1986, Denotational Semantics: A Methodology for Language Development
   [Anonymous], 1992, The Z Notation
   [Anonymous], 1968, First-Order Logic
   Arbab F, 2003, LECT NOTES COMPUT SC, V2755, P34
   Babar MA, 2009, COMPUTER, V42, P26, DOI 10.1109/MC.2009.233
   Bailin SC, 1991, TECHNICAL REPORT
   Balasubramanian D, 2015, SCI COMPUT PROGRAM, V106, P3, DOI 10.1016/j.scico.2015.04.002
   Balsamo S, 2002, P 3 INT WORKSH SOFTW, DOI DOI 10.1145/584369.584398
   Balter R, 1998, P IFIP INT C DISTR S, DOI DOI 10.1007/978-1-4471-1283-9_15
   Barais O, 2004, INT FED INFO PROC, V176, P85
   Bashroush R, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P297, DOI 10.1109/ECBS.2008.55
   Bashroush R, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P163, DOI 10.1109/SEW.2005.17
   Bashroush R, 2006, LECT NOTES COMPUT SC, V4344, P212
   Batista T., 2006, 20 BRAZ S SOFTW ENG
   Batory D., 1995, SIGSOFT Software Engineering Notes, P27, DOI 10.1145/223427.211786
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bellissard L, 2000, C3DS
   Bernardo M., 2000, Software Engineering Notes, V25, P140, DOI 10.1145/357474.355064
   Bernardo M., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P1, DOI 10.1145/350391.350394
   Bernardo M., 1999, THESIS
   BERRY G, 1992, THEOR COMPUT SCI, V96, P217, DOI 10.1016/0304-3975(92)90185-I
   Bouzoualegh A, 2008, 2008 32 ANN IEEE INT, DOI [10. 1109/COMPSAC. 2008. 107, DOI 10.1109/C0MPSAC.2008.107]
   Brachman R.J., 1991, Principles of Semantic Networks, P401, DOI DOI 10.1016/B978-1-4832-0771-1.50022-9
   Bruneton E, 2004, LECT NOTES COMPUT SC, V3054, P7
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Bruni R, 2008, MSRTR200861
   Burback R, 1998, TECHNICAL REPORT
   Bures T., 2006, 4 INT C SOFTW ENG RE
   Canal C, 1999, INT FED INFO PROC, V12, P107
   Cardelli L, 1998, LECT NOTES COMPUT SC, V1378, P140, DOI 10.1007/BFb0053547
   Cassou Damien., 2009, GPCE '09: Proceedings of the 8th International Conference on Generative Programming and Component Engineering, P137
   Cervantes H, 2008, CONSUM COMM NETWORK, P147, DOI 10.1109/ccnc08.2007.40
   Chaudet C, 15 IEEE INT C AUT SO, DOI DOI 10.1109/ASE.2000.873669
   Choppy C, 2001, J UNIVERS COMPUT SCI, V7, P19
   Ciancarini P, 2000, ACM T SOFTW ENG METH, V9, P167, DOI 10.1145/350887.350893
   Ciancarini P, 1998, SCI COMPUT PROGRAM, V31, P231, DOI 10.1016/S0167-6423(97)00022-1
   Ciancarini P, 1998, P 9 INT WORKSH SOFTW
   Clements P.C., 1996, P 8 INT WORKSH SOFTW
   CLEMENTS PC, 1995, P WORKSH FORM METH A
   Cohen PR, 1988, 433 AI CTR SRI INT
   Cuesta CE, 2002, LECT NOTES COMPUT SC, V2315, P141
   Dashofy EM, 2005, ACM T SOFTW ENG METH, V14, P199, DOI 10.1145/1061254.1061258
   De Lucia A, 2007, J VISUAL LANG COMPUT, V18, P492, DOI 10.1016/j.jvlc.2007.08.005
   de Silva L, 2011, LECT NOTES COMPUT SC, V6903, P319, DOI 10.1007/978-3-642-23798-0_34
   Debruyne V, 2005, ARCHITECTURE DESCRIP, P181, DOI DOI 10.1007/0-387-24590-1_12
   Di Ruscio Davide, 2010, P 32 ACM IEEE INT C, V1, P85, DOI DOI 10.1145/1806799.1806816
   Dorfman M., 1990, STANDARDS GUIDELINES
   Dunsire K, 2005, 12th IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, Proceedings, P62, DOI 10.1109/ECBS.2005.66
   Eixelsberger W, 1998, COMPSAC 98 22 INT CO, DOI DOI 10.1109/CMPSAC.1998.716645
   Elloy JP, 2002, IFAC P VOLUMES, V35, P349, DOI [10. 3182/20020721-6-ES-1901, DOI 10.3182/20020721-6-ES-1901.00060]
   ESTRIN G, 1986, IEEE T SOFTWARE ENG, V12, P293, DOI 10.1109/TSE.1986.6312945
   Eterovich Y., 2004, 1 INT WORKSH COORD A
   Faucou S, 2005, ARCHITECTURE DESCRIP, P67, DOI DOI 10.1007/0-387-24590-1_5
   Feiler P., 2006, COMPUTER AIDED CONTR, P1206
   Fiadeiro J.L., 2005, CATEGORIES SOFTWARE, DOI [10.1007/b138249, DOI 10.1007/B138249]
   Fiadeiro JL, 2003, LECT NOTES COMPUT SC, V2793, P178
   Franca RB, 2007, P 12 IEEE INT C ENG, DOI DOI 10.1109/ICECCS.2007.41
   FURIA CA, 2004, 200428 DIP EL INF PO
   Gardner Jr RI, 1974, THESIS
   Garlan D., 1994, SIGSOFT Software Engineering Notes, V19, P175, DOI 10.1145/195274.195404
   Garlan D, 1997, P CASCON 97 TOR
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Georg G, 2000, 7 IEEE INT S ENG COM, DOI DOI 10.1109/ECBS.2000.839876
   Giannakopoulou D., 1999, Automated Software Engineering, V6, P7, DOI 10.1023/A:1008645800955
   Gorlick M., 1994, Proceedings. IEEE Symposium on Visual Languages (Cat. No.94TH8010), P137, DOI 10.1109/VL.1994.363631
   Group TO, 1999, ADML DOC TYP DEF
   Gruhn V, 2006, ELECTRON NOTES THEOR, V150, P51, DOI 10.1016/j.entcs.2005.12.023
   Guttag JohnV., 1993, LARCH LANGUAGES TOOL
   Haber Arne, 2012, TECHNICAL REPORT
   Hamdaqa M, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON CLOUD ENGINEERING (IC2E 2015), P96, DOI 10.1109/IC2E.2015.42
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Harel D, P 10 INT C SOFTW ENG
   He N., 2012, P EMB REAL TIM SOFTW
   Hervey S.G.J., 1979, AXIOMATIC SEMANTICS
   Heym W. D., 1995, THESIS
   Hill RJ, 1998, APPLIED CRYSTALLOGRAPHY, P65, DOI 10.1145/288408.288425
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Hopcroft J. E., 2006, INTRO AUTOMATA THEOR
   INVERARDI P, 1995, IEEE T SOFTWARE ENG, V21, P373, DOI 10.1109/32.385973
   Issarny V, 1996, INT CON DISTR COMP S, P586, DOI 10.1109/ICDCS.1996.508009
   Issarny E, 2011, LECT NOTES COMPUT SC, V6659, P217, DOI 10.1007/978-3-642-21455-4_7
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jacquet C, 2008, 6 ACM IEEE INT C FOR, DOI [10. 1109/MEMCOD. 2008. 4547682, DOI 10.1109/MEMCOD.2008.4547682]
   JAHANIAN F, 1994, IEEE T SOFTWARE ENG, V20, P933, DOI 10.1109/32.368134
   JAHANIAN F, 1986, IEEE T SOFTWARE ENG, V12, P890, DOI 10.1109/TSE.1986.6313045
   Jerad C, 2008, P 2008 INT C VIS COM
   Jia XY, 2007, SIXTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P96, DOI 10.1109/GCC.2007.18
   Kamandi A., 2007, ICSEA, P20, DOI DOI 10.1109/ICSEA.2007.78
   Kang B, 2004, HAPPYWORK SOFTWARE A
   Khare R., 2001, Proceedings of the 34th Annual Hawaii International Conference on System Sciences, DOI 10.1109/HICSS.2001.927248
   Kicillof N., 1998, P 1 AUSTR WORKSH CON
   Kifer M., 1995, Deductive and Object-Oriented Databases. Fourth International Conference, DOOD '95. Proceedings, P187
   Kruchten P., 1994, P C TRIADA 94 TRIADA, P262, DOI DOI 10.1145/197694.197728
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Krüger IH, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P177, DOI 10.1109/WICSA.2004.1310701
   Kum D, 2008, 2008 INT C CONTR AUT, DOI DOI 10.1109/ICCAS.2008.4694565
   KUMAR V, 1992, AI MAG, V13, P32
   Kurshan R.P., 1994, COMPUTER AIDED VERIF
   Lago P, 2015, IEEE SOFTWARE, V32, P98, DOI 10.1109/MS.2014.28
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Lankhorst MM, 2010, INT J INF SYST MODEL, V1, P1, DOI 10.4018/jismd.2010092301
   Lankhorst MM, 2009, LECT NOTES BUS INF P, V29, P367
   Lau KK, 2012, EUROMICRO CONF PROC, P158, DOI 10.1109/SEAA.2012.32
   Li JC, 2010, J SYST SOFTWARE, V83, P235, DOI 10.1016/j.jss.2009.09.043
   Loques O., 2004, J BRAZ COMPUT SOC, V10, P5, DOI DOI 10.1007/BF03192350
   Lorenzo A, 2002, P 16 INT MULT CIRC S
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P336, DOI 10.1109/32.385971
   Luckham DC, 1984, ANNA LANGUAGE ANNOTA
   Magableh B, 2010, 7 INT C INF SYST INF
   Magee J., 1995, P 5 EUROPEAN SOFTWAR, P137
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Malavolta Ivano, 2017, ARCHITECTURAL LANGUA
   Mascolo C, 1999, LECT NOTES COMPUTER, V1594, DOI DOI 10.1007/3-540-48919-3_5
   McDuffie JH, 2002, P 21 DIG AV SYST C I, DOI DOI 10.1109/DASC.2002.1052937
   McKenzie FD, 2004, SIMUL-T SOC MOD SIM, V80, P559, DOI 10.1177/0037549704050185
   MCVEIGH A, 2006, P 2006 C SPEC VER CO, P49, DOI DOI 10.1145/1181195.1181206
   Medvidovic N., 1996, Software Engineering Notes, V21, P24, DOI [10.1145/239098.239106, 10.1145/250707.239106]
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P44, DOI 10.1109/ICSE.1999.840994
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Mehra A., 2005, ASE, P204, DOI DOI 10.1145/1101908.1101940
   Mei H, 2002, LECT NOTES COMPUT SC, V2495, P38
   MESEGUER J, 1991, LECT NOTES COMPUT SC, V516, P64
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Mishra P, 2005, IEE P-COMPUT DIG T, V152, P285, DOI 10.1049/ip-cdt:20045071
   Mohammad M, 2011, J SYST SOFTWARE, V84, P77, DOI 10.1016/j.jss.2010.08.048
   Monroe RT, 1996, CMUCS98163
   Moriconi M., 1997, SRICSL9701
   Mouratidis H., 2005, AAMAS 05, P578
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Navasa A, 2007, LECT NOTES COMPUT SC, V4758, P330
   Oh Y, 2007, P 5 IEEE ACM INT C F, DOI DOI 10.1109/MEMCOD.2007.371243
   Oliveira C, 2005, ELECTRON NOTES THEOR, V141, P3, DOI 10.1016/j.entcs.2005.06.031
   Op 't Land M., 2009, Symposium on Applied Computing Proceedings of the 2009 ACM symposium on Applied Computing, Honolulu, Hawaii, Organizational engineering track, P245, DOI DOI 10.1145/1529282.1529336
   Oquendo F., 2004, ACM SIGSOFT SOFTWARE, V29, P1, DOI DOI 10.1145/986710.986728
   OUSSALAH M, 2004, P 11 IEEE INT C WORK
   Ozkaya M, 2013, EUROMICRO SEAA
   Ozkaya M., 2014, P 17 INT ACM SIGS S, P129, DOI DOI 10.1145/2602458.2602463
   Perez J, 2003, P 3 INT C QUAL SOFTW
   Pérez J, 2008, INFORM SOFTWARE TECH, V50, P969, DOI 10.1016/j.infsof.2007.08.007
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pessemier N, 2006, LECT NOTES COMPUT SC, V4089, P259
   Peterson AS, 1994, TECHNICAL REPORT
   Phillips A., 2006, THESIS
   Pinto M, 2003, LECT NOTES COMPUT SC, V2830, P118
   Pinto M, 2011, INFORM SOFTWARE TECH, V53, P1165, DOI 10.1016/j.infsof.2011.04.003
   Plasil F, 2002, IEEE T SOFTWARE ENG, V28, P1056, DOI 10.1109/TSE.2002.1049404
   Plotkin GD, 2004, J LOGIC ALGEBR PROGR, V60-1, P3, DOI 10.1016/j.jlap.2004.03.009
   Pnueli A, 1977, SFCS 77 P 18 ANN S F
   Poizat P., 2003, 83 LAB METH INF
   Poizat P, 2006, J UNIVERS COMPUT SCI, V12, P1741
   Pradella M, 2005, LECT NOTES COMPUT SC, V3731, P381
   Qin W, 2007, COMPILER DESIGN HDB, P16
   Rademaker A, 2005, ELECTRON NOTES THEOR, V130, P345, DOI 10.1016/j.entcs.2005.03.018
   Rao Y, 2005, LECT NOTES COMPUT SC, V3795, P214
   Raunak MS, 2005, UNIFYING SOFTWARE PR, DOI DOI 10.1007/11608035_34
   Reid A, 2000, P 4 C S OP SYST DES
   Ren Jie, 2005, WORKSH SOFTW SEC ASS
   Reussner RH, 2003, J SYST SOFTWARE, V66, P241, DOI 10.1016/S0164-1212(02)00080-8
   RICE MD, 1996, CS96120 COL STAT U D
   Richters M, 2002, LECT NOTES COMPUT SC, V2263, P42
   Ricks K. G., 2002, International Journal of Computers and Their Applications, V9, P126
   Ringert JO, 2014, COMPUTING RES REPOSI
   RobertKrut J, 1993, INTEGRATING 001 TOOL
   Roshandel R, 2004, ACM T SOFTW ENG METH, V13, P240, DOI 10.1145/1018210.1018213
   Rost Dominik, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P72, DOI 10.1007/978-3-642-39031-9_7
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Ryoo J, 2006, J SYST SOFTWARE, V79, P1180, DOI 10.1016/j.jss.2006.02.045
   Schwanke R. W., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P176, DOI 10.1109/IWSSD.1996.501164
   Selic B, 1996, 1996 IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P214, DOI 10.1109/RTTAS.1996.509538
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   Singhal V, 1993, P 6 ANN WORKSH SOFTW
   Sitaraman M, 2000, P 6 INT C SOFTW REUS
   Smeda A, 2004, P WSEAS INT C SOFTW
   Su GX, 2010, LECT NOTES COMPUT SC, V6285, P8
   Suvee D, 2005, 3 EUR C WEB SERV ECO, DOI DOI 10.1109/ECOWS.2005.13
   Taylor Richard N., 2010, Software Architecture-Foundations, Theory, and Practice.
   Taylor RN, 1996, IEEE T SOFTWARE ENG, V22, P390, DOI 10.1109/32.508313
   Terry A., 1994, SIGSOFT Software Engineering Notes, V19, P68, DOI 10.1145/190679.190686
   Thum C, 2009, LECT NOTES COMPUT SC, V5795, P137
   Tibermacine C., 2011, P 14 INT ACM SIGS S, P31
   Tibermacine C, 2010, LECT NOTES COMPUT SC, V6285, P505, DOI 10.1007/978-3-642-15114-9_51
   Tofan Dan, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P192, DOI 10.1007/978-3-642-39031-9_17
   Tracz W, 1993, 1993 P ADV SOFTW REU, DOI DOI 10.1109/ASR.1993.291716
   Truszkowski W, 1991, P 2 NAT TECHN TRANSF
   Tsai JJP, 1999, P IEEE INT C MULT CO, DOI DOI 10.1109/MMCS.1999.779127
   Ubayashi N, 2010, 2010 ACM IEEE 32 INT
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Vestal S., 1993, TECHNICAL REPORT
   Wang B, 2008, ISCSCT 2008: INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND COMPUTATIONAL TECHNOLOGY, VOL 2, PROCEEDINGS, P383, DOI 10.1109/ISCSCT.2008.357
   Warshaw L, 2007, DEFINITION APPL GENV
   Weinreich R, 2010, ACM S APPL COMP SAC, DOI [10. 1145/1774088. 1774571, DOI 10.1145/1774088.1774571]
   Wen J, 2008, PROCEEDINGS OF THE 2008 ADVANCED SOFTWARE ENGINEERING & ITS APPLICATIONS, P147, DOI 10.1109/ASEA.2008.11
   Woods E, 2005, P 5 WORK IEEE IFIP C, DOI DOI 10.1109/WICSA.2005.15
   Wu Qing, 2009, Journal of Software, V4, P1061, DOI 10.4304/jsw.4.10.1061-1068
   Wu Q, 2009, 2009 ISECS INTERNATIONAL COLLOQUIUM ON COMPUTING, COMMUNICATION, CONTROL, AND MANAGEMENT, VOL IV, P611, DOI 10.1109/CCCM.2009.5267500
   Yu Z, 2005, LECT NOTES COMPUTER, V3645, DOI DOI 10.1007/11538356_23
   Zhang HX, 2010, LECT NOTES COMPUT SC, V6285, P295, DOI 10.1007/978-3-642-15114-9_22
   Zhang Q, 2008, INT CONF QUAL SOFTW, P366, DOI 10.1109/QSIC.2008.59
   Zheng L, 2010, INT CONF BIOINFORM
NR 215
TC 17
Z9 17
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2018
VL 48
IS 5
BP 985
EP 1018
DI 10.1002/spe.2561
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC4BJ
UT WOS:000429727600001
DA 2024-07-18
ER

PT J
AU García, AL
   Fernández-del-Castillo, E
   Fernández, PO
   Plasencia, IC
   de Lucas, JM
AF Lopez Garcia, Alvaro
   Fernandez-del-Castillo, Enol
   Orviz Fernandez, Pablo
   Campos Plasencia, Isabel
   Marco de Lucas, Jesus
TI Resource provisioning in Science Clouds: Requirements and challenges
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud challenges; cloud computing; Science Clouds; scientific computing
ID HPC APPLICATIONS; INFRASTRUCTURE; MANAGEMENT
AB Cloud computing has permeated into the information technology industry in the last few years, and it is emerging nowadays in scientific environments. Science user communities are demanding a broad range of computing power to satisfy the needs of high-performance applications, such as local clusters, high-performance computing systems, and computing grids. Different workloads are needed from different computational models, and the cloud is already considered as a promising paradigm. The scheduling and allocation of resources is always a challenging matter in any form of computation and clouds are not an exception. Science applications have unique features that differentiate their workloads; hence, their requirements have to be taken into consideration to be fulfilled when building a Science Cloud. This paper will discuss what are the main scheduling and resource allocation challenges for any Infrastructure as a Service provider supporting scientific applications.
C1 [Lopez Garcia, Alvaro; Fernandez-del-Castillo, Enol; Orviz Fernandez, Pablo; Campos Plasencia, Isabel; Marco de Lucas, Jesus] UC, Adv Comp & E Sci Grp, CSIC, Inst Fis Cantabria, Santander, Spain.
   [Fernandez-del-Castillo, Enol] EGI Fdn, Amsterdam, Netherlands.
C3 Consejo Superior de Investigaciones Cientificas (CSIC); Universidad de
   Cantabria; CSIC - Instituto de Fisica de Cantabria (IFCA)
RP García, AL (corresponding author), UC, Adv Comp & E Sci Grp, CSIC, Inst Fis Cantabria, Santander, Spain.
EM aloga@ifca.unican.es
RI Orviz, Pablo/G-4791-2016; García, Álvaro López/G-4796-2016;
   Fernandez-del-Castillo, Enol/I-8055-2012; Marco de Lucas,
   Jesus/B-8735-2008
OI Orviz, Pablo/0000-0002-2473-6405; García, Álvaro
   López/0000-0002-0013-4602; Campos Plasencia, Isabel/0000-0002-9350-0383;
   Fernandez-del-Castillo, Enol/0000-0002-5152-5902; Marco de Lucas,
   Jesus/0000-0001-7914-8494
FU EGI-Engage [654142]; INDIGO-DataCloud [653549]; European Commission's
   Horizon Framework Programme
FX EGI-Engage, Grant/Award Number: 654142; INDIGO-DataCloud, Grant/Award
   Number: 653549; European Commission's Horizon 2020 Framework Programme
CR Afgan E, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-S12-S4
   [Anonymous], 2014, VCYCLE VM LIFECYCLE
   [Anonymous], UBIQUITOUS INFORM TE
   Antcheva I, 2009, COMPUT PHYS COMMUN, V180, P2499, DOI 10.1016/j.cpc.2009.08.005
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Barham P., 2003, Operating Systems Review, V37, P164, DOI 10.1145/1165389.945462
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Birkenheuer G, 2012, SOFTWARE PRACT EXPER, V42, P485, DOI 10.1002/spe.1055
   Blanquer I, 2012, P 2012 6 IB GRID INF
   Blomer J, 2012, J PHYS CONF SER, V396, DOI 10.1088/1742-6596/396/5/052013
   Buyya R., 2010, ENERGY EFFICIENT MAN
   Calheiros RN, 2012, FUTURE GENER COMP SY, V28, P861, DOI 10.1016/j.future.2011.07.005
   Campos I, 2013, EUR PHYS J C, V73, DOI 10.1140/epjc/s10052-013-2375-0
   Cardonha C, 2013, PATIENCE AWARE SCHED
   Chaisiri S, 2011, IEEE INT WORKSH MOD
   Chauhan MA, 2017, SOFTWARE PRACT EXPER, V47, P599, DOI 10.1002/spe.2409
   Chen D, 2017, SOFTWARE PRACT EXPER, V47, P405, DOI 10.1002/spe.2418
   Corradi A, 2014, FUTURE GENER COMP SY, V32, P118, DOI 10.1016/j.future.2012.05.012
   de Oliveira D, 2012, J GRID COMPUT, V10, P521, DOI 10.1007/s10723-012-9227-2
   Evangelinos C, 2008, 1 WORKSH CLOUD COMP
   Expósito RR, 2013, FUTURE GENER COMP SY, V29, P218, DOI 10.1016/j.future.2012.06.009
   Fakhfakh F, 2014, 2014 IEEE 18 INT ENT, V71
   Fernandez Albor V, 2015, INT S GRIDS CLOUDS A, V160, P1
   Foster I, 2008, GCE: 2008 GRID COMPUTING ENVIRONMENTS WORKSHOP, P60
   Garg SK, 2011, LECT NOTES COMPUT SC, V7916, P371, DOI 10.1007/978-3-642-24650-0_32
   Gunarathne T, 2011, CONCURR COMP-PRACT E, V23, P2338, DOI 10.1002/cpe.1780
   Gupta A, 2011, P 2011 6 OP CIRR SUM
   Hardt M, 2012, COMPUT INFORM, V31, P119
   Hategan M, 2011, 4 IEEE INT C UT CLOU
   Hoffa Christina, 2008, 2008 IEEE Fourth International Conference on eScience, P640, DOI 10.1109/eScience.2008.167
   Hu Ye., 2009, Proceedings of the 2009 Conference of the Center for Advanced Studies on Collaborative Research, P101
   Huang H., 2013, IEEE 6th International Conference on Cloud Computing (IEEE Cloud) (Research Track)
   Ismail L, 2013, SOFTWARE PRACT EXPER, V43, P281, DOI 10.1002/spe.2112
   Juve G, 2008, 2008 IEEE 4 INT C ES
   Juve G., 2010, ACM CROSSROADS CROSS, V16, P14, DOI [DOI 10.1145/1734160.1734166, 10.1145/1734160.1734166]
   Kosar T, 2006, CHALL LARG APPL DIST
   Kune R, 2016, SOFTWARE PRACT EXPER, V46, P79, DOI 10.1002/spe.2374
   Lee YC, 2015, KNOWL-BASED SYST, V80, P153, DOI 10.1016/j.knosys.2015.02.012
   Lin X, 2013, P INT C PAR PROC LYO
   Manvi SS, 2014, J NETW COMPUT APPL, V41, P424, DOI 10.1016/j.jnca.2013.10.004
   Mao MJ, 2012, IEEE ICC
   Mazzucco M, 2010, IEEE 3 INT C CLOUD C
   Mcnab A, 2014, J PHYS CONF SER, V513, DOI 10.1088/1742-6596/513/3/032065
   Mell P, 2010, COMMUN ACM, V53, P50
   Michelotto M, 2010, J PHYS CONF SER, V219, DOI 10.1088/1742-6596/219/5/052009
   Mogul JC, 2012, ACM SIGCOMM COMP COM, V42, P44, DOI 10.1145/2378956.2378964
   Montero RS, 2011, J PARALLEL DISTR COM, V71, P750, DOI 10.1016/j.jpdc.2010.05.005
   Nilsson P, 2014, INT S GRIDS CLOUDS I
   Oesterle F, 2015, GEOSCI MODEL DEV, V8, P2067, DOI 10.5194/gmd-8-2067-2015
   Orgerie A-C, 2011, COMPUT COMMUN, P143
   Ostermann S, 2010, L N INST COMP SCI SO, V34, P115
   Ramakrishnan L, 2011, P 2 INT WORKSH SCI C
   Ranadive A, 2008, HPCVIRT 08 P 2 WORKS
   Regola N, 2010, 2 INT C CLOUD COMP T
   Rehr JJ, 2010, COMPUT SCI ENG, V12, P34, DOI 10.1109/MCSE.2010.70
   Rodriguez MA, 2014, IEEE T CLOUD COMPUT, V2, P222, DOI 10.1109/TCC.2014.2314655
   Rodríguez-Marrero AY, 2012, J PHYS CONF SER, V396, DOI 10.1088/1742-6596/396/3/032091
   Shamsi J, 2013, J GRID COMPUT, V11, P281, DOI 10.1007/s10723-013-9255-6
   Smanchat S, 2015, FUTURE GENER COMP SY, V52, P1, DOI 10.1016/j.future.2015.04.019
   Smith JW, 2011, TIME
   Somasundaram TS, 2014, FUTURE GENER COMP SY, V34, P47, DOI 10.1016/j.future.2013.12.024
   Sotomayor B, 2006, P 2 INT WORKSH VIRT
   Sotomayor B, 2009, IEEE INTERNET COMPUT, V13, P14, DOI 10.1109/MIC.2009.119
   Srikantaiah S, 2008, P HOTPOWER 08 WORKSH
   Srirama SN, 2012, FUTURE GENER COMP SY, V28, P184, DOI 10.1016/j.future.2011.05.025
   Subramanya S., 2015, P 6 ACM S CLOUD COMP
   Szabo C, 2014, J GRID COMPUT, V12, P245, DOI 10.1007/s10723-013-9282-3
   Tan YS, 2013, SOFTWARE PRACT EXPER, V43, P1241, DOI 10.1002/spe.1082
   Tchernykh A, 2015, PROCEDIA COMPUT SCI, V51, P1772, DOI 10.1016/j.procs.2015.05.387
   Vockler J-S, 2011, P 2 INT WORKSH SCI C
   Voorsluys W, 2012, P INT C ADV INF NETW
   Voorsluys W, 2011, LECT NOTES COMPUT SC, V7916, P395, DOI 10.1007/978-3-642-24650-0_34
   WALKER E., 2008, login:: the magazine of USENIX SAGE, V33, P18
   Wang L, 2008, 2008 10 IEEE INT C H
   Yelick Katherine., 2011, The Magellan Report on Cloud Computing for Science
NR 75
TC 11
Z9 11
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 486
EP 498
DI 10.1002/spe.2544
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300005
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Chivers, H
AF Chivers, Howard
TI Optimising unicode regular expression evaluation with previews
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE regular expression; finite automaton; non-deterministic; optimization;
   searching; forensics
AB The jsre regular expression library was designed to provide fast matching of complex expressions over large input streams using user-selectable character encodings. An established design approach was used: a simulated non-deterministic automaton (NFA) implemented as a virtual machine, avoiding exponential cost functions in either space or time. A deterministic automaton (DFA) was chosen as a general dispatching mechanism for Unicode character classes, and this also provided the opportunity to use compact DFAs in various optimization strategies. The result was the development of a regular expression Preview which provides a summary of all the matches possible from a given point in a regular expression in a form that can be implemented as a compact DFA and can be used to further improve the performance of the standard NFA simulation algorithm. This paper formally defines a preview and describes and evaluates several optimizations using this construct. They provide significant speed improvements accrued from fast scanning of anchor positions, avoiding retesting of repeated strings in unanchored searches and efficient searching of multiple alternate expressions which in the case of keyword searching has a time complexity which is logarithmic in the number of words to be searched. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Chivers, Howard] Univ York, Dept Comp Sci, Deramore Lane, York YO10 5GH, N Yorkshire, England.
C3 University of York - UK
RP Chivers, H (corresponding author), Univ York, Dept Comp Sci, Deramore Lane, York YO10 5GH, N Yorkshire, England.
EM hrchivers@iee.org
CR Aho AV, 1974, DESIGN ANAL COMPUTER, V4
   Becchi M, 2009, P 5 ACM IEEE S ARCH
   Becchi Michela, 2007, P 3 ACM IEEE S ARCH
   Berglund M., 2014, ARXIV14055599
   Chivers H., 2015, FAST REGULAR EXPRESS
   Cox R., 2009, REGULAR EXPRESSION M
   Cox Russ, 2007, REGULAR EXPRESSION M
   Ficara D, 2008, ACM SIGCOMM COMP COM, V38, P29, DOI 10.1145/1452335.1452339
   Garfinkel S, 2009, DIGIT INVEST, V6, pS2, DOI 10.1016/j.diin.2009.06.016
   Jiang L, 2015, SECUR COMMUN NETW, V8, P13, DOI 10.1002/sec.780
   Karakoidas V, 2008, SOFTWARE PRACT EXPER, V38, P557, DOI 10.1002/spe.841
   Kirrage James, 2013, NSS 13, P135
   Knuth D. E., 1977, SIAM Journal on Computing, V6, P323, DOI 10.1137/0206024
   Kumar S, 2006, ACM SIGCOMM COMP COM, V36, P339, DOI 10.1145/1151659.1159952
   Langdale G., 2015, HYPERSCAN DOCUMENTAT
   Liu T, 2011, INFOCOM 2011 P IEEE
   Meyer A, 1971, GRAMMARS, V1, P10
   MYERS G, 1992, J ACM, V39, P430, DOI 10.1145/128749.128755
   RABIN MO, 1959, IBM J RES DEV, V3, P114, DOI 10.1147/rd.32.0114
   Schumacher D., 1994, SOFTWARE SOLUTIONS C
   Sedgewick R., 2011, Algorithm
   Spivey J.M., 1992, THE Z NOTATION
   THOMPSON K, 1968, COMMUN ACM, V11, P419, DOI 10.1145/363347.363387
   Watson BW, 2003, SCI COMPUT PROGRAM, V48, P99, DOI 10.1016/S0167-6423(03)00013-3
NR 24
TC 1
Z9 1
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2017
VL 47
IS 5
BP 669
EP 688
DI 10.1002/spe.2436
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ER1SO
UT WOS:000398573700002
DA 2024-07-18
ER

PT J
AU van der Walt, P
   Consel, C
   Balland, E
AF van der Walt, Paul
   Consel, Charles
   Balland, Emilie
TI Frameworks compiled from declarations: a language-independent approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE generative programming; programming frameworks; privacy controls;
   domain-specific languages
ID INFORMATION; SYSTEM
AB Programming frameworks are an accepted fixture in the object-oriented world, motivated by the need for code reuse, developer guidance and restriction. A new trend is emerging where frameworks require domain experts to provide declarations using a domain-specific language, influencing the structure and behaviour of the resulting application. These mechanisms address concerns such as user privacy. Although many popular open platforms such as Android are based on declaration-driven frameworks, current implementations provide ad hoc and narrow solutions to concerns raised by their openness to non-certified developers. Most widely used frameworks fail to address serious privacy leaks and provide the user with little insight into application behaviour. To address these shortcomings, we show that declaration-driven frameworks can limit privacy leaks, as well as guide developers, independently from the underlying programming paradigm. To do so, we identify concepts that underlie declaration-driven frameworks and apply them systematically to an object-oriented language, Java and a dynamic functional language, Racket. The resulting programming framework generators are used to develop a prototype mobile application, illustrating how we mitigate a common class of privacy leaks. Finally, we explore the possible design choices and propose development principles for developing domain-specific language compilers to produce frameworks, applicable across a spectrum of programming paradigms. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [van der Walt, Paul] INRIA Bordeaux, Equipe Phoenix, Bordeaux, France.
   [Consel, Charles] INRIA Bordeaux, Bordeaux, France.
   [Balland, Emilie] INRIA, Le Chesnay, France.
C3 Inria
RP van der Walt, P (corresponding author), INRIA Bordeaux, Equipe Phoenix, Bordeaux, France.
EM paul@denknerd.org
FU Conseil Regional d'Aquitaine [6932-CRA-2012]; INRIA CORDI-S grant
FX The authors would like to thank Damien Cassou for their constructive
   criticism and proofreading of early drafts. We also thank the anonymous
   reviewers for their effort. Their constructive and actionable comments
   have significantly improved this paper. The first author was jointly
   funded by the Conseil Regional d'Aquitaine, grant 6932-CRA-2012, and an
   INRIA CORDI-S grant.
CR Agarwal Yuvraj, 2013, P 11 ANN INT C MOB S, P97, DOI DOI 10.1145/2462456.2464460
   [Anonymous], 2010, PLTTR20101 INC
   [Anonymous], 2003, The art of UNIX programming
   [Anonymous], 1991, Ph.D. dissertation
   [Anonymous], 1984, Capability-Based Computer Systems
   [Anonymous], 2012, P 27 ANN ACM S APPL
   [Anonymous], TECH REP
   Balland E, 2010, PROGRAMMING SUPPORT
   Bartel A, 2012, IEEE INT CONF AUTOM, P274, DOI 10.1145/2351676.2351722
   Ben-Ari M., 2008, Principles of the Spin Model Checker
   Biederman E.W., 2006, Proceedings of the Linux Symposium, V1, P101
   Bruneau J, 2013, SOFTWARE PRACT EXPER, V43, P885, DOI 10.1002/spe.2130
   Cameron N, 2010, LECT NOTES COMPUT SC, V6141, P271, DOI 10.1007/978-3-642-13953-6_15
   Cassou D, 2012, IEEE T SOFTWARE ENG, V38, P1445, DOI 10.1109/TSE.2011.107
   Cassou D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P431, DOI 10.1145/1985793.1985852
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Choi K, 2015, COMPUT LANG SYST STR, V44, P283, DOI 10.1016/j.cl.2015.08.010
   Chrome developers, 2015, DEV CHROM EXT DECL P
   Culpepper Ryan., 2007, P 2007 WORKSHOP SCHE, P1
   Dalheimer MK, 2010, PROGRAMMING QT WRITI
   Dupuy L, 2015, WOMENCOURAGE 2015
   Earl C, 2012, ACM SIGPLAN NOTICES, V47, P177, DOI 10.1145/2398856.2364576
   Elish KO, 2015, COMPUT SECUR, V49, P255, DOI 10.1016/j.cose.2014.11.001
   Enard Q, 2013, THESIS
   Enck W, 2014, COMMUN ACM, V57, P99, DOI 10.1145/2494522
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   Feiler J., 2008, DO EVERYTHING FACEBO
   Flatt Matthew, 2013, P GPCE, P13
   Fowler M., 2010, Domain-specific languages
   Fritz C., 2013, TUDCS20130113 EC SPR
   Gatti S, 2014, THESIS
   Gibler C., 2011, ANDROIDLEAKS DETECTI
   Hardy N., 1985, Operating Systems Review, V19, P8, DOI 10.1145/858336.858337
   Horspool RN, 2013, THE EXPERTS VOICE
   Kim N., 2013, 2013 USENIX ANN TECH, P139
   Liu Y., 2008, Workshop on Program Analysis for Software Tools and Engineering (PASTE), P50
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Mark Dave., 2009, BEGINNING IPHONE DEV
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Miller M. J., 2006, THESIS
   Mirzaei Nariman, 2012, ACM SIGSOFT Software Engineering Notes, V37, P1, DOI DOI 10.1145/2382756.2382798
   Mobility + Security Group Universityof E, 2015, APPGUARDEN
   Naira SK, 2008, ELECTRON NOTES THEOR, V197, P3, DOI 10.1016/j.entcs.2007.10.010
   Park H, 2015, COMPUT LANG SYST STR, V44, P251, DOI 10.1016/j.cl.2015.08.006
   Rees J. A., 1995, THESIS
   Rogers R., 2009, ANDROID APPL DEV PRO, V1st
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Shapiro JonathanS., 2004, Proc. NICTA Invitational Workshop on Operating System Verification, P1
   Shapiro JS, 1999, OPERATING SYSTEMS REVIEW, VOL 33, NO 5, DECEMBER 1999, P170, DOI 10.1145/319344.319163
   Siek Jeremy, 2006, WORKSHOP SCHEME FUNC, P81
   Snoyman M., 2012, DEV WEB APPL HASKELL
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Stevens R., 2012, WORKSH MOB SEC TECHN
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   The LKD, 2015, SECURE COMPUTING FIL
   Tobin-Hochstadt S, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P132
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Watson R. N., 2010, USENIX SEC S, V46, P2
   Wei XT, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P31
   Xiao XS, 2012, IEEE INT CONF AUTOM, P80, DOI 10.1145/2351676.2351689
NR 60
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2017
VL 47
IS 5
BP 741
EP 762
DI 10.1002/spe.2417
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ER1SO
UT WOS:000398573700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ruano-Ordás, D
   Fdez-Glez, J
   Fdez-Riverola, F
   Fernandes, VB
   Méndez, JR
AF Ruano-Ordas, David
   Fdez-Glez, Jorge
   Fdez-Riverola, Florentino
   Fernandes, Vitor Basto
   Ramon Mendez, Jose
TI RuleSIM: a toolkit for simulating the operation and improving throughput
   of rule-based spam filters
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE rule scheduling optimization; spam-filtering rules; computational
   resource management; scheduling application; filtering performance
   benchmark tool; rule-based spam systems
ID FRAMEWORK
AB This paper introduces RuleSIM, a toolkit comprising different simulation tools specifically designed to aid researchers concerned about spam-filtering throughput. RuleSIM allows easily designing, developing, simulating and comparing new scheduling heuristics using different filters and sets of e-mails. Simulation results can be both graphically analysed, by using different complementary views, and quantitatively compared through several measures. Moreover, the underlying RuleSIM API can be easily integrated with third-party Java optimization platforms to facilitate debugging and achieve better configurations for rule scheduling. RuleSIM is free software distributed under the terms of GNU Lesser General Public License, and both source code and documentation are publicly available at . Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Ruano-Ordas, David; Fdez-Glez, Jorge; Fdez-Riverola, Florentino; Ramon Mendez, Jose] Univ Vigo, Dept Comp Sci, ESEI, Campus As Lagoas, Orense 32004, Spain.
   [Fernandes, Vitor Basto] Polytech Inst Leiria, Sch Technol & Management, Comp Sci & Commun Res Ctr, P-2411901 Leiria, Portugal.
C3 Universidade de Vigo
RP Méndez, JR (corresponding author), Univ Vigo, Dept Comp Sci, ESEI, Campus As Lagoas, Orense 32004, Spain.
EM moncho.mendez@uvigo.es
RI Ruano-Ordás, David/G-8482-2017; Basto-Fernandes, Vitor/N-1891-2016;
   Méndez Reboredo, José Ramón/F-3993-2016; Fdez-Riverola,
   Florentino/G-1411-2011
OI Ruano-Ordás, David/0000-0002-6050-373X; Basto-Fernandes,
   Vitor/0000-0003-4269-5114; Méndez Reboredo, José
   Ramón/0000-0002-1935-4760; Fdez-Riverola, Florentino/0000-0002-3943-8013
FU University of Vigo [14VI05]
FX This work was partially funded by the [14VI05] Contract-Programme from
   the University of Vigo. D. Ruano-Ordas was supported by a pre-doctoral
   fellowship from the University of Vigo.
CR [Anonymous], CEAS
   [Anonymous], EMAIL STAT REPORT 20
   [Anonymous], 2001, 2822 RFC
   Arbib MA, 1970, THEORIES ABSTRACT AU
   Cisco Systems, 2012, SPAM GLOB VOL OV SEN
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Fdez-Riverola F, 2007, DECIS SUPPORT SYST, V43, P722, DOI 10.1016/j.dss.2006.11.012
   GitHub Inc, 2014, RULSEIM SOURC REP
   Görling S, 2007, INTERNET RES, V17, P169, DOI 10.1108/10662240710737022
   Levin J., 2010, 5782 RFC
   Oracle, 2010, TRAIL CREAT GUI JFC
   Oracle, 2011, JAV SE 7 COLL REL AP
   Oracle, 2010, TRAIL JAV 2D
   Oracle, 2010, TRAIL REFL API
   Oracle, 2013, JAVAFX GETT START JA
   Pérez-Díaz N, 2013, SOFTWARE PRACT EXPER, V43, P1299, DOI 10.1002/spe.2135
   Ruano-Ordás D, 2013, J SYST SOFTWARE, V86, P3151, DOI 10.1016/j.jss.2013.07.036
   Ryholite Software LLC, 2000, DISTR CHECKS CLEAR
   Shah S, 2007, SOFTWARE PRACT EXPER, V37, P1515, DOI 10.1002/spe.816
   Shcherbakova Tatyana, 2014, SPAM IN AUGUST 2014, V2014
   Song Y, 2009, SOFTWARE PRACT EXPER, V39, P1003, DOI 10.1002/spe.925
   The Apache SpamAssassin Group, 2003, SPAMC CLIENT SPAMD
   The Apache SpamAssassin Group, 2003, 1 ENT OP SOURC SPAM
   TrendMicro, 2011, GLOB SPAM MAP
   Wirebrush4SPAM, 2011, SPAM FILT MIDDL
   Wozniak M, 2014, INFORM FUSION, V16, P3, DOI 10.1016/j.inffus.2013.04.006
NR 26
TC 2
Z9 3
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2016
VL 46
IS 8
BP 1091
EP 1108
DI 10.1002/spe.2342
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR4ZQ
UT WOS:000379912900004
DA 2024-07-18
ER

PT J
AU Cabodi, G
   Camurati, P
   Quer, S
AF Cabodi, Gianpiero
   Camurati, Paolo
   Quer, Stefano
TI A graph-labeling approach for efficient cone-of-influence computation in
   model-checking problems with multiple properties
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE model checking; Boolean functions; cone of influence; graph labeling
AB In order to make model checking applicable to realistic problems, simplification techniques are essential. Models may be simplified eliminating the variables that do not appear in the cone-of-influence (COI) of the properties under verification. Efficient COI computation is thus required. Algorithms based on depth-first visits may become cumbersome when they must be applied several times; for instance, when multiple properties must be verified on the same model. An alternative is to resort to graph-labeling methods, trading-off time for memory. Modeling the problem in terms of graphs, this paper develops a technique based on bitmaps that keeps the amount of memory needed within acceptable limits. The paper also describes a portfolio of optimizations of the original algorithm that allow even more reductions in memory usage. Experimental results show that the basic algorithm and its optimized versions perform very well on standard benchmark circuits used in the model-checking community. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Cabodi, Gianpiero; Camurati, Paolo; Quer, Stefano] Politecn Torino, Dipartimento Automat & Informat, Corso Duca Abruzzi 24, I-10129 Turin, Italy.
C3 Polytechnic University of Turin
RP Quer, S (corresponding author), Politecn Torino, Dipartimento Automat & Informat, Corso Duca Abruzzi 24, I-10129 Turin, Italy.
EM stefano.quer@polito.it
RI Cabodi, Gianpiero/I-6558-2012
OI Cabodi, Gianpiero/0000-0001-5839-8697; QUER, Stefano/0000-0001-6835-8277
FU SRC [2012-TJ-2328]
FX This work was sponsored by SRC (contract/grant number 2012-TJ-2328).
CR Alstrup S, 1999, SIAM J COMPUT, V28, P2117, DOI 10.1137/S0097539797317263
   Berezin S, 1998, LECT NOTES COMPUT SC, V1536, P81, DOI 10.1007/3-540-49213-5_4
   Biere A, 2013, HARDWARE MODEL CHECK
   Cabodi G, 2011, DES AUT TEST EUROPE, P543
   Chen YL, 2008, 2008 IEEE 10TH WORKSHOP ON MULTIMEDIA SIGNAL PROCESSING, VOLS 1 AND 2, P807
   Clarke Edmund M., 2001, Model Checking
   Cohen E, 2002, SIAM PROC S, P937
   Harel D., 1985, P 17 ANN ACM S THEOR, P185
   Holzmann G. J., 2004, SPIN MODEL CHECKER
   Hu X, 2009, TEST DIAGN 2009 ICTD, P1
   Kurshan R.P., 1995, COMPUTER AIDED VERIF
   Lengauer T., 1979, ACM T PROGR LANG SYS, V1, P121, DOI 10.1145/357062.357071
   Loiacono C, 2013, DES AUT TEST EUROPE, P803
   Mony H, 2009, DES AUT TEST EUROPE, P1674
   Moon IH, 2000, LECT NOTES COMPUT SC, V1954, P73
   Nasre R, 2012, ACM SIGPLAN NOTICES, V47, P121, DOI 10.1145/2426642.2259013
   Qu HY, 2006, PROCEEDINGS OF THE SECOND IASTED INTERNATIONAL CONFERENCE ON TELEHEALTH, P75
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Teuhola J, 1996, IEEE T KNOWL DATA EN, V8, P446, DOI 10.1109/69.506711
NR 19
TC 4
Z9 5
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2016
VL 46
IS 4
BP 493
EP 511
DI 10.1002/spe.2321
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DG8HR
UT WOS:000372324600003
DA 2024-07-18
ER

PT J
AU Huh, S
   Yoo, J
   Hong, S
AF Huh, Sungju
   Yoo, Jonghun
   Hong, Seongsoo
TI Cross-layer resource control and scheduling for improving interactivity
   in Android
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Android smartphone; cross-layer resource management; interactivity
   enhancement; Linux task scheduling
AB Android smartphones are often reported to suffer from sluggish user interactions due to poor interactivity. This is partly because Android and its task scheduler, the completely fair scheduler (CFS), may incur perceptibly long response time to user-interactive tasks. Particularly, the Android framework cannot systemically favor user-interactive tasks over other background tasks since it does not distinguish between them. Furthermore, user-interactive tasks can suffer from high dispatch latency due to the non-preemptive nature of CFS. To address these problems, this paper presents framework-assisted task characterization and virtual time-based CFS. The former is a cross-layer resource control mechanism between the Android framework and the underlying Linux kernel. It identifies user-interactive tasks at the framework-level, by using the notion of a user-interactive task chain. It then enables the kernel scheduler to selectively promote the priorities of worker tasks appearing in the task chain to reduce the preemption latency. The latter is a cross-layer refinement of CFS in terms of interactivity. It allows a task to be preempted at every predefined period. It also adjusts the virtual runtimes of the identified user-interactive tasks to ensure that they are always scheduled prior to the other tasks in the run-queue when they wake up. As a result, the dispatch latency of a user-interactive task is reduced to a small value. We have implemented our approach into Android 4.1.2 running with Linux kernel 3.0.31. Experimental results show that the response time of a user interaction is reduced by up to 77.35% while incurring only negligible overhead. Copyright (C) 2014 John Wiley & Sons, Ltd.
C1 [Huh, Sungju; Hong, Seongsoo] Seoul Natl Univ, Grad Sch Convergence Sci & Technol, Dept Transdisciplinary Studies, Suwon, Gyeonggi Do, South Korea.
   [Yoo, Jonghun; Hong, Seongsoo] Seoul Natl Univ, Dept Elect & Comp Engn, Seoul, South Korea.
   [Hong, Seongsoo] Adv Inst Convergence Technol, Suwon, Gyeonggi Do, South Korea.
C3 Seoul National University (SNU); Seoul National University (SNU)
RP Hong, S (corresponding author), Seoul Natl Univ, Dept Elect & Comp Engn, Real Time Operating Syst Lab, Seoul, South Korea.
EM sshong@redwood.snu.ac.kr
FU IT R&D program of MSIP/KEIT [10041753]; National Research Foundation of
   Korea (NRF) grant - Korea government (MEST) [2012-0000348]; MSIP
   (Ministry of Science, ICT&Future Planning), Korea, under ITRC
   (Information Technology Research Center) support program
   [NIPA-2013-H0301-13-4006]
FX This work was partly supported by the IT R&D program of MSIP/KEIT
   [10041753, Development of the Core Technologies of a General Purpose OS
   for Reducing 30% of Energy Consumption in IT Equipments], by the
   National Research Foundation of Korea (NRF) grant funded by the Korea
   government (MEST) [No. 2012-0000348] and by the MSIP (Ministry of
   Science, ICT&Future Planning), Korea, under the ITRC (Information
   Technology Research Center) support program [NIPA-2013-H0301-13-4006]
   supervised by the NIPA (National IT Industry Promotion Agency).
CR Aas J, 2005, UNDERSTANDING LINUX, V16, P1
   [Anonymous], MITLCSTM528
   AVG, 2012, AVG ANT
   Aviary, 2012, AV PHOT ED APPL
   Brady P, 2008, GOOGL I O DEV C SAN
   DEMERS A, 1989, COMP COMM R, V19, P1, DOI 10.1145/75247.75248
   Fingas J, 2012, ANDROID HAS HEADY 59
   Guy R, 2012, WHATS NEW IN ANDROID
   Guy R, 2012, BUTTER WORSE SMOOTHI
   Hackborn D, 2011, FUNDAMENTAL DESIGN D
   Hilzinger M., 2009, CON KOLIVAS INTRO NE
   Huh S, 2012, 2012 IEEE 18 INT C E, P250
   Huh S, 2013, VIDEO DEMONSTRATION
   Huh S, 2012, INT CON DISTR COMP S, P606, DOI 10.1109/ICDCS.2012.33
   Kolivas C, 2010, BFS BRAIN FUCK SCHED
   Li T, 2009, ACM SIGPLAN NOTICES, V44, P65, DOI 10.1145/1594835.1504188
   Markovic SD, 2012, PI BENCHMARK
   McVoy L, 1996, PROCEEDINGS OF THE USENIX 1996 ANNUAL TECHNICAL CONFERENCE, P279
   Molnar I, 2007, THE CFS SCHEDULER
   Nagle J, 1985, IEEE T COMMUN, V35, P435
   Nieh J, 2003, ACM T COMPUT SYST, V21, P117, DOI 10.1145/762483.762484
   Parekh AK, 1993, IEEE ACM T NETWORK, V1, P344, DOI 10.1109/90.234856
   Rieder A, 2011, DEALING GARBAGE COLL
   Russell R, 2001, COMMUNICATION
   Salah K, 2011, COMPUT ELECTR ENG, V37, P1090, DOI 10.1016/j.compeleceng.2011.07.001
   Stoica I, 1996, REAL TIM SYST SYMP P, P288, DOI 10.1109/REAL.1996.563725
   Tolia N, 2006, COMPUTER, V39, P46, DOI 10.1109/MC.2006.101
   Torrey LA, 2007, SOFTWARE PRACT EXPER, V37, P347, DOI 10.1002/spe.772
   Zhang L., 1990, COMPUT COMMUN REV, V20, P19, DOI DOI 10.1145/99517.99525.URL
   Zhang YT, 2004, REAL TIM SYST SYMP P, P151
NR 30
TC 5
Z9 5
U1 0
U2 9
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2015
VL 45
IS 11
BP 1549
EP 1570
DI 10.1002/spe.2285
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LI
UT WOS:000363500900005
DA 2024-07-18
ER

PT J
AU Jara, AJ
   Genoud, D
   Bocchi, Y
AF Jara, Antonio J.
   Genoud, Dominique
   Bocchi, Yann
TI Big data for smart cities with KNIME a real experience in the
   SmartSantander testbed
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; data fusion; knowledge discovery from data; KDD; smart cities;
   SmartSantander; Internet of Things; human dynamics; KNIME
ID INTERNET; TRANSPORT
AB Big data techniques are conceived as the powerful tool to exploit all the potential of the Internet of Things and the smart cities. A new dimension of understanding about the human behaviours is expected to be reached through all the gathered data in the emerging smart environment. The described potential, so-called Human Dynamics, pursues to describe in real-time the human behaviours and activities. This work presents our experiences for big data analytics in smart cities, in terms of sensors data management, data fusion and knowledge discovery from the data. The data used is from the European Project SmartSantander, where the traffic behaviour has been correlated with respect to the temperature in the Santander City. The evolution of both flows present a similar behaviour, in detail, a fine grain correlation is discovered. On the one hand, the traffic distribution, aggregated by temperature bins, follows up a Poisson distribution model. The Poisson modelling allows to interpolate and predict complex behaviours based on simple measures such as the temperature. At the same time, on the other hand, the isolated traffic density distribution, without taking into account the temperature-based aggregation has been analysed. The traffic distribution has presented a burst behaviour, which presents a closer model to the human dynamics. Therefore, this work presents as the smart cities data can be modelled as Poisson or Human Dynamics (burst models). Finally, reference data analytics process, data sets and models are offered for the Open Source Data analytics platform Konstanz Information Miner (KNIME). Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Jara, Antonio J.; Genoud, Dominique; Bocchi, Yann] Univ Appl Sci Western Switzerland HES SO, Inst Informat Syst IIG, Sierre, Switzerland.
C3 University of Applied Sciences & Arts Western Switzerland
RP Jara, AJ (corresponding author), Univ Appl Sci Western Switzerland, Inst Informat Syst, HES SO, Technopole 3, Sierre, Switzerland.
EM jara@ieee.org
RI Jara, Antonio J,/Z-4083-2019
OI Jara, Antonio J,/0000-0002-2651-6684
FU HES-SO; Institute of Information Systems; European Project 'Universal
   Integration of the IoT through an IPv6-based Service Oriented
   Architecture enabling heterogeneous components interoperability (IoT6)'
   from the FP7 [288445]
FX The authors would like to thank to the HES-SO and the Institute of
   Information Systems funding and support. Special thanks to the
   SmartSantander EU project team, and in particular to Luis Munoz from the
   University of Cantabria for this great opportunity to work with the
   SmartSantander data. Finally, the authors would like also to thank to
   The European Project 'Universal Integration of the IoT through an
   IPv6-based Service Oriented Architecture enabling heterogeneous
   components interoperability (IoT6)' from the FP7 with the grant
   agreement no 288445.
CR [Anonymous], 2002, LINKED EVERYTHING IS
   [Anonymous], P IWCMC CAEN FRANC J, DOI 10.1145/1815396.1815600
   [Anonymous], 2011, P 2011 FUT NETW MOB
   [Anonymous], DESCARTES DREAM WORL
   Barabasi AL, 2010, BURSTS THE HIDDEN PA
   Barzel B, 2013, NAT PHYS, V9, P673, DOI [10.1038/nphys2741, 10.1038/NPHYS2741]
   Berthold M., 2003, Intelligent data analysis : An introduction, V2nd
   Berthold MR, 2008, STUD CLASS DATA ANAL, P319, DOI 10.1145/1656274.1656280
   Emmerson B., 2010, WinWin Mag., P19
   Gibson DavidV., 1992, The Technopolis Phenomenon: Smart Cities, Fast Systems, Global Networks
   González MC, 2008, NATURE, V453, P779, DOI 10.1038/nature06958
   Haight F. A., 1967, HDB POISSON DISTRIBU
   HOFSTADTER DR, 1979, ETERNAL GOLDEN BRAID
   Hui J., 2011, RFC6282
   Jara A, 2014, INT J WEB GRID SERV, V10, P1741
   Jara AJ, J WIRELESS MOBILE NE, V3, P97
   Jara AJ, 2014, MOB INF SYST, V10, P3, DOI 10.1155/2014/831974
   Jara AJ, 2012, MOB INF SYST, V8, P177, DOI 10.1155/2012/819250
   Valera AJJ, 2009, AMB INTELL SMART ENV, V1, P221, DOI 10.3233/978-1-58603-946-2-221
   KRAMER D, 2013, PHYS TODAY, V66, P19, DOI DOI 10.1063/PT.3.2110
   Kumar P, 2005, IEEE T INTELL TRANSP, V6, P43, DOI 10.1109/TITS.2004.838219
   Lin HE, 2005, PROC E ASIA SOC TRAN, V5, P1433
   Malmgren RD, 2008, P NATL ACAD SCI USA, V105, P18153, DOI 10.1073/pnas.0800332105
   Valverde S, 2013, ARCHIT DESIGN, V83, P112, DOI 10.1002/ad.1627
   Vázquez A, 2006, PHYS REV E, V73, DOI 10.1103/PhysRevE.73.036127
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Zhang M, 2011, APPL MECH MATER, V48-49, P1073, DOI 10.4028/www.scientific.net/AMM.48-49.1073
NR 27
TC 30
Z9 32
U1 1
U2 64
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2015
VL 45
IS 8
SI SI
BP 1145
EP 1160
DI 10.1002/spe.2274
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM6JB
UT WOS:000357793500009
DA 2024-07-18
ER

PT J
AU Liao, CS
   Chuang, CP
   Chang, RS
AF Liao, Chih-Shan
   Chuang, Chen-Po
   Chang, Ruay-Shiung
TI A novel monitoring mechanism by event trigger for Hadoop system
   performance analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; Apache Hadoop; performance analysis
ID MAPREDUCE
AB Cloud computing has become more and more popular nowadays since it possesses various conveniences such as pay as you go, dynamically deployment, and high efficiency. A numbers of cloud computing platforms are now in the market. Apache Hadoop, an open-source platform, is one of these platforms which has been widely used by companies and organizations, because it is free for both research and production. From the perspective of service providers, it is better to see infrastructure running at the lowest possible power consumption and in the same time satisfying the QoS. From the viewpoint of the service clients, it is also the best situation that all functions they desire are running well at the lowest service cost. By putting ourselves in their shoes, in this paper, we propose the event trigger, which provides an automatic event recording mechanism. The event trigger applies the recorded parameters onto an easy-understanding visual graph. By doing so, users will be able to adjust their deployment of hardware resource through a simple and straightforward understanding of their system performance records. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Liao, Chih-Shan; Chuang, Chen-Po; Chang, Ruay-Shiung] Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, Shoufeng 974, Hualien, Taiwan.
C3 National Dong Hwa University
RP Chang, RS (corresponding author), Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, 1,Sec 2,Da Hsueh Rd, Shoufeng 974, Hualien, Taiwan.
EM rschang@mail.ndhu.edu.tw
RI Chang, Ruay-Shiung/AAH-9494-2021
FU ROC NSC [NSC 100-2221-E-259-009]
FX This research is supported in part by ROC NSC under contract number NSC
   100-2221-E-259-009.
CR [Anonymous], PERF AN SYST SOFTW I
   [Anonymous], 2011, NIST DEFINITION CLOU
   [Anonymous], SC COMPANION
   Boulon J., 2008, P CCA, V8, P1
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Ghemawat S., 2003, ACM SIGOPS OPERATING, V37, P29, DOI [DOI 10.1145/945445.945450, DOI 10.1145/1165389.945450, 10.1145/1165389.945450]
   Massie ML, 2004, PARALLEL COMPUT, V30, P817, DOI 10.1016/j.parco.2004.04.001
   Pavlo A, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P165
   Rabkin A., 2010, Proceedings of the 24th International Conference on Large Installation System Administration, P1
   Shvachko K, 2010, IEEE S MASS STOR SYS
   Wang LZ, 2012, J SUPERCOMPUT, V61, P780, DOI 10.1007/s11227-011-0635-z
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P1661, DOI 10.1016/j.future.2013.02.010
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P739, DOI 10.1016/j.future.2012.09.001
   Zujie Ren, 2012, 2012 IEEE International Symposium on Workload Characterization (IISWC 2012), P3, DOI 10.1109/IISWC.2012.6402895
NR 14
TC 3
Z9 4
U1 0
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2014
VL 44
IS 7
SI SI
BP 823
EP 834
DI 10.1002/spe.2230
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ5NN
UT WOS:000337731000005
DA 2024-07-18
ER

PT J
AU Pati, T
   Hill, JH
AF Pati, Tanumoy
   Hill, James H.
TI A survey report of enhancements to the visitor software design pattern
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE extended Visitor patterns; design patterns; survey; alternative Visitor
   patterns; Visitor pattern
AB The Visitor pattern is a behavioral software design pattern where different objects represent an operation to be performed on elements of an object structure. Despite the benefits of the Visitor pattern, its rigid structure has limitations. Owing to the Visitor pattern's usefulness and importance to software design, many researchers have extended and modified the original Visitor pattern to overcome its limitations. Researchers have even replaced the Visitor pattern with more refined design patterns (e.g., Reflective Visitor pattern, Java Walkabout Class, and Dynamic Dispatcher) that bear minimal resemblance to the original Visitor pattern's structure while retaining its major advantages (e.g., ability to add new operations to an object structure without changing the classes of objects, localizing related behavior, and accumulating state). This article therefore provides a comprehensive survey of the Visitor pattern for software practitioners. Within the survey, we focus on major enhancements that have been made to the original Visitor pattern to overcome its limitations. On the basis of our survey results, we found that variations of the Visitor pattern can be separated into two categories: extended Visitor patterns where the original Visitor pattern structure stays intact and alternative Visitor patterns where the structure of the original Visitor pattern is altered. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Pati, Tanumoy; Hill, James H.] Indiana Univ Purdue Univ, Dept Comp & Informat Sci, Indianapolis, IN 46202 USA.
C3 Indiana University System; Indiana University Indianapolis
RP Pati, T (corresponding author), Indiana Univ Purdue Univ, Dept Comp & Informat Sci, Indianapolis, IN 46202 USA.
EM tpati@cs.iupui.edu
CR Beeri C., 1978, Proceedings of the Fourth International Conference on Very Large Data Bases, P113
   BOHM C, 1985, THEOR COMPUT SCI, V39, P135, DOI 10.1016/0304-3975(85)90135-5
   Bravenboer M, 2001, TECHNICAL REPORT
   Bttner Fabian., 2004, PROC IEEE 16 INT C S, P135
   Bulka A, 2002, P 3 AS PAC C PATT LA, P1
   Dascalu S, 2005, 2005 IEEE International Symposium on Signal Processing and Information Technology (ISSPIT), Vols 1 and 2, P699
   Devadithya T., 2007, P 2007 SPRING SIMULA, V2, P435
   Emir B, 2007, LECT NOTES COMPUT SC, V4609, P273
   Falco R.D., 2001, HIERARCHICAL VISITOR
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ghosh D, 2004, ACM SIGPLAN NOTICES, V39, P40, DOI 10.1145/997140.997144
   ISO/IEC, 1998, 148821998E ISOIEC
   Khaer MA, 2008, 2008 INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATION ENGINEERING, VOLS 1-3, P133, DOI 10.1109/ICCCE.2008.4580582
   Ledeczi Akos., 2001, The Generic Modeling Environment
   Leitner A, 2007, J OBJECT TECHNOL, V6, P319, DOI 10.5381/jot.2007.6.9.a16
   Lippman StanleyB., 1996, INSIDE C OBJECT MODE
   MAI Y, 2001, 8 ANN C PATT LANG PR
   Mai Yun, 2001, EUROPEAN C PATTERN L, P299
   Martin R. C., 1996, C REPORT
   Martin RC, 1998, SOFTW PATT S, P93
   Martin RC, 2000, OBJECT MENTOR, P1
   Nordberg III ME, 1996, PLOP 96 WRIT WORKSH
   OLIVEIRA BCD, 2007, THESIS U OXFORD
   Oliveira BCDS, 2008, ACM SIGPLAN NOTICES, V43, P439, DOI 10.1145/1449955.1449799
   Oliveira Bruno C. d. S., 2009, LNCS, P269
   Palsberg J, 1998, P INT COMP SOFTW APP, P9, DOI 10.1109/CMPSAC.1998.716629
   PARIGOT M, 1992, THEOR COMPUT SCI, V94, P335, DOI 10.1016/0304-3975(92)90042-E
   Sandhu PS, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P3, DOI 10.1109/ICACTE.2008.205
   TAO K, 1997, JAVA TREE BUILDER
   Tichy W.F., 1997, 23 RD INT C TECHNOLO, V1, P330
   van Deursen A, 2002, PROG COMPREHEN, P137, DOI 10.1109/WPC.2002.1021335
   Visser J, 2001, ACM SIGPLAN NOTICES, V36, P270, DOI 10.1145/504311.504302
   Vlissides J, 1999, C++ REP, V11, P40
   Xiao-Peng Z, 2010, P 2 INT ED TECHN COM, V3, P434, DOI [10.1109/ETCS.2010.284, DOI 10.1109/ETCS.2010.284]
NR 34
TC 3
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2014
VL 44
IS 6
BP 699
EP 733
DI 10.1002/spe.2167
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH0QS
UT WOS:000335825800003
DA 2024-07-18
ER

PT J
AU Zaplata, S
   Meiners, M
   Lamersdorf, W
AF Zaplata, Sonja
   Meiners, Matthias
   Lamersdorf, Winfried
TI Designing future-context-aware dynamic applications with structured
   context prediction
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE context awareness; mobile computing; distributed systems; context
   prediction
ID COOPERATION
AB Middleware support for advanced pervasive applications includes dealing with heterogeneous systems and dynamic changes of execution environments. If applications are context aware, they are able to detect such changes at runtime and react to them accordingly. Furthermore, they can also proactively adapt to upcoming situations by making accurate assumptions about future contexts. However, the design of reusable middleware support for such future-context-aware applications is still challenging as a supporting prediction system has to be generic, but at the same time has to provide potential for high accuracy and efficiency.
   This paper proposes a concept for the development of future-context-aware applications on the basis of the novel approach of structured context prediction. As a framework, this approach allows for integrating domain-specific knowledge and facilitates application, combination, and implementation of suitable prediction methods. In addition, specific runtime mechanisms for distribution of knowledge and adaptation of prediction tasks are proposed, which enable useful context predictions even for dynamic applications. The overall development process as well as practical experiments with the prototype framework is illustrated by two use case scenariosdemonstrating that both high accuracy and efficiency of future context predictions are achievable and even ad hoc context predictions can be supported this way. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Zaplata, Sonja; Meiners, Matthias; Lamersdorf, Winfried] Univ Hamburg, Dept Comp Sci, D-22527 Hamburg, Germany.
C3 University of Hamburg
RP Zaplata, S (corresponding author), Univ Hamburg, Dept Comp Sci, Vogt Koelln Str 30, D-22527 Hamburg, Germany.
EM sonja.zaplata@informatik.uni-hamburg.de
FU European Community [215483]
FX The research leading to these results has received funding from the
   European Community's Seventh Framework Programme FP7/2007-2013 under
   grant agreement 215483 (S-Cube).
CR Akoush Sherif., 2007, Proceedings of the 2007 international conference on Wireless communications and mobile computing, IWCMC '07, P191, DOI DOI 10.1145/1280940.1280982
   ANAGNOSTOPOULOS C, 2005, P 6 INT C MOB DAT MA, P137
   Anagnostopoulos CB, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE SERVICES, P181
   [Anonymous], 2005, 2005 1 INT WORKSHOP
   [Anonymous], 2016, Pattern Recognition and Machine Learning, Softcover Reprint of the Original 1st ed., Information Science and Statistics, DOI DOI 10.1117/1.2819119
   [Anonymous], 2002, Graphical Models-Methods for Data Analysis and Mining [Relatorio]
   Beamon Bridget, 2010, 2010 8th IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops), P30, DOI 10.1109/PERCOMW.2010.5470599
   Boytsov A., 2011, CONTEXT REASONING CO
   Boytsov A, 2009, LECT NOTES COMPUT SC, V5764, P8, DOI 10.1007/978-3-642-04190-7_2
   Chen G., 2000, 2000381 TR DARTM COL
   DAGUM P, 1992, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, P41
   Dey A. K., 1999, TECHNICAL REPORT
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Gellert A., 2006, Studies in Informatics and Control, V15, P17
   Hassani M, 2011, P INT WORKSH MAN HLT
   Hilario M, 1997, CONNECTIONIST-SYMBOLIC INTEGRATION, P13
   JAMESON A, 2001, P 17 INT JOINT C ART, P1185
   Jensen F. V., 2007, Bayesian networks and decision graphs
   Kunze CP, 2008, LECT NOTES BUS INF, V7, P459
   Mayrhofer R, 2004, THESIS J KEPL U LINZ
   Meiners M, 2010, LECT NOTES COMPUT SC, V6115, P84, DOI 10.1007/978-3-642-13645-0_7
   NURMI P, 2005, P WORKSH CONT AW PRO, P159
   Padovitz A, 2008, IEEE T SYST MAN CY A, V38, P729, DOI 10.1109/TSMCA.2008.918589
   Pearl J., 1988, PROBABILISTIC REASON
   Petzold J., 2005, THESIS U AUGSBURG
   Petzold J, 2006, LECT NOTES COMPUT SC, V4159, P125
   SALBER D, 1999, P CHI 99
   Satyanarayanan M., 1996, Proceedings of the Fifteenth Annual ACM Symposium on Principles of Distributed Computing, P1, DOI 10.1145/248052.248053
   Si HB, 2010, CONSUM COMM NETWORK, P1130
   Sigg S., 2008, THESIS U KASSEL
   Symeonidis A.L., 2005, Agent Intelligence Through Data Mining
   Upendra R., 2008, Proc. of the 5th Annual Int. Conf. on Mobile and Ubiquitous Systems, P1
   Zaplata S, 2009, BUS INFORM SYST ENG+, V1, P301, DOI 10.1007/s12599-009-0060-5
NR 33
TC 2
Z9 2
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2013
VL 43
IS 10
SI SI
BP 1185
EP 1204
DI 10.1002/spe.1126
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 212YJ
UT WOS:000324018600004
DA 2024-07-18
ER

PT J
AU Calheiros, RN
   Netto, MAS
   De Rose, CAF
   Buyya, R
AF Calheiros, Rodrigo N.
   Netto, Marco A. S.
   De Rose, Cesar A. F.
   Buyya, Rajkumar
TI EMUSIM: an integrated emulation and simulation environment for modeling,
   evaluation, and validation of performance of Cloud computing
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cloud computing; emulation; simulation; performance prediction and
   validation
ID RESOURCE; SYSTEMS
AB Cloud computing allows the deployment and delivery of application services for users worldwide. Software as a Service providers with limited upfront budget can take advantage of Cloud computing and lease the required capacity in a pay-as-you-go basis, which also enables flexible and dynamic resource allocation according to service demand. One key challenge potential Cloud customers have before renting resources is to know how their services will behave in a set of resources and the costs involved when growing and shrinking their resource pool. Most of the studies in this area rely on simulation-based experiments, which consider simplified modeling of applications and computing environment. In order to better predict service's behavior on Cloud platforms, we developed an integrated architecture that is based on both simulation and emulation. The proposed architecture, named EMUSIM, automatically extracts information from application behavior via emulation and then uses this information to generate the corresponding simulation model. We performed experiments using an image processing application as a case study and found that EMUSIM was able to accurately model such application via emulation and use the model to supply information about its potential performance in a Cloud provider. We also discuss our experience using EMUSIM for deploying applications in a real public Cloud provider. EMUSIM is based on an open source software stack and therefore it can be extended for analysis behavior of several other applications. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Calheiros, Rodrigo N.; Buyya, Rajkumar] Univ Melbourne, Dept Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic 3010, Australia.
   [Netto, Marco A. S.] IBM Res, Sao Paulo, Brazil.
C3 University of Melbourne
RP Calheiros, RN (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
EM rncalheiros@ieee.org
RI Buyya, Rajkumar/C-3424-2009; Calheiros, Rodrigo N./B-5155-2008; De Rose,
   Cesar A. F./F-9271-2012
OI Calheiros, Rodrigo N./0000-0001-7435-2445; De Rose, Cesar A.
   F./0000-0003-0070-0157
CR Abramson D, 2002, FUTURE GENER COMP SY, V18, P1061, DOI 10.1016/S0167-739X(02)00085-7
   ABRAMSON D, 2000, P 14 INT PAR DISTR P
   Barham P., SOSP 2003
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Calheiros RN, 2010, SOFTWARE PRACT EXPER, V40, P405, DOI 10.1002/spe.964
   Casanova H., 2008, P 10 IEEE INT C COMP
   Citron D, 2011, IBM J RES DEV, V55, DOI 10.1147/JRD.2011.2170913
   Elmroth E, 2006, LECT NOTES COMPUT SC, V3732, P1061
   Emeakaroha V. C., 2010, P 2 INT ICST C CLOUD
   GIROD L, 2004, P 2 INT C EMB NETW S
   Glassner A. S., 1989, INTRO RAY TRACING
   Gustedt J, 2009, PARALLEL PROCESS LET, V19, P399, DOI 10.1142/S0129626409000304
   Iosup A, 2008, P 17 INT S HIGH PERF
   Krauter K, 2002, SOFTWARE PRACT EXPER, V32, P135, DOI 10.1002/spe.432
   Lacage M., 2010, ACM SIGOPS Operating Systems Review, V43, P60, DOI DOI 10.1145/1713254.1713268
   Liu J, 2007, P 26 IEEE INT C COMP
   NETTO MAS, 2009, P 18 INT HET COMP WO
   Quinson M, 2006, P 18 IASTED INT C PA
   Ramakrishnan L, 2010, P 10 IEEE ACM INT C
   Sobeih A, 2006, IEEE WIREL COMMUN, V13, P104, DOI 10.1109/MWC.2006.1678171
   White B, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P255, DOI 10.1145/1060289.1060313
   Wickremasinghe B., 2010, P 24 IEEE INT C ADV
   Zheng GB, 2005, INT J PARALLEL PROG, V33, P183, DOI 10.1007/s10766-005-3582-6
NR 23
TC 55
Z9 65
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2013
VL 43
IS 5
BP 595
EP 612
DI 10.1002/spe.2124
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 127HW
UT WOS:000317690100006
OA Green Published
DA 2024-07-18
ER

PT J
AU Thimbleby, H
AF Thimbleby, Harold
TI Heedless programming: ignoring detectable error is a widespread hazard
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE heedless programming; dependability; human error; Excel; FORTRAN; Java;
   JavaScript; Mathematica; design tradeoffs
AB Software should be correct and robust. This paper suggests that we need forthright words for the failure of not being robustheedless and heedlessnessand of recursively creating software (such as a compiler or virtual machine) that itself does not support dependable software development. Heedless programming is common, particularly affecting trivial operations such as on numbers, and extends deep into programming language design and into the use of computers more widely, thus making robust, dependable applications of all sorts unnecessarily problematic. The paper defines the problem and presents a call to action to start addressing the problems identified. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 Swansea Univ, Future Interact Technol Lab, Swansea, W Glam, Wales.
C3 Swansea University
RP Thimbleby, H (corresponding author), Swansea Univ, Future Interact Technol Lab, Swansea, W Glam, Wales.
EM harold@thimbleby.net
RI Thimbleby, Harold/D-4389-2013
OI Thimbleby, Harold/0000-0003-2222-4243
FU UK Engineering and Physical Sciences Research Council [EP/F020031/1,
   EP/G059063/1]; EPSRC [EP/G059063/1] Funding Source: UKRI
FX The author is grateful to the editor and referees and to Paul Cairns,
   Jon Crowcroft, Tony Hoare, Daniel Jackson and Martyn Thomas for very
   constructive comments that have led to numerous improvements in the
   exposition. This research was funded by the UK Engineering and Physical
   Sciences Research Council (EP/F020031/1 & EP/G059063/1).
CR Amey P, 2001, LECT NOTES COMPUTER, V2043
   [Anonymous], 2008, MISTAKES WERE MADE N
   [Anonymous], 2000, Engineering Psychology and Human Performance
   [Anonymous], 1978, The Elements of Programming Style
   [Anonymous], 1996, TROUBLE COMPUTERS US
   Arnold Ken., 1996, The Java Programming Language
   Associated Press Writer, 2010, NY TIMES
   Babbage C., 1864, Passages From the Life of a Philosopher
   Berra Y., 1999, YOGI BOOK I REALLY D
   Bloch J., 2016, Effective Java
   Bloch Joshua, 2005, Java Puzzlers: Traps, Pitfalls, and Corner Cases
   Brooks F., 2010, DESIGN DESIGN
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Crockford D., 2008, JAVASCRIPT GOOD PART
   Dijkstra EW, 2001, COMMUN ACM, V44, P92, DOI 10.1145/365181.365217
   Feynman R.P., 1992, "Surely you're joking
   Gawande A., 2010, The checklist manifesto: how to get things right
   HOARE CAR, 1981, COMMUN ACM, V24, P75, DOI 10.1145/358549.358561
   Hoare CAR, 1998, UNIFIED THEORIES PRO
   Hoare CAR, 2009, ACM COMPUT SURV, V41, P22
   Hoare T, 2007, COMPUT J, V50, P254, DOI [10.1093/comjnl/bxl078, 10.1093/comjnl/bx1078]
   Kruger J, 1999, J PERS SOC PSYCHOL, V77, P1121, DOI 10.1037/0022-3514.77.6.1121
   Lowry ES, 1970, NATO C SOFTW ENG TEC
   Lowry ES, 2004, INT S TECHN SOC
   Nader Ralph., 1973, Unsafe at Any Speed: The Designed-In Dangers of the American Automobile
   Patterson K., 2008, INFLUENCER
   RITCHIE DM, 1978, AT&T TECH J, V57, P1991, DOI 10.1002/j.1538-7305.1978.tb02140.x
   SPAFFORD EH, 1989, COMMUN ACM, V32, P678, DOI 10.1145/63526.63527
   Summers S, 2004, AIRCR ENG AEROSP TEC, V76, P47, DOI 10.1108/00022660410515008
   Thimbleby H, 2000, INT J HUM-COMPUT ST, V52, P1031, DOI 10.1006/ijhc.1999.0341
   Thimbleby Harold, 2010, Journal of Computing and Information Technology - CIT, V18, P349, DOI 10.2498/cit.1001921
   Thimbleby H., 1990, Interacting with Computers, V2, P8, DOI 10.1016/0953-5438(90)90011-6
   Thimbleby H, 1999, SOFTWARE PRACT EXPER, V29, P457, DOI 10.1002/(SICI)1097-024X(19990425)29:5<457::AID-SPE243>3.0.CO;2-5
   Thimbleby H. W., 2008, INTERACTIONS, V15, P52, DOI DOI 10.1145/1390085.1390098
   Thimbleby H, 2011, COMPUT J, V54, P1119, DOI 10.1093/comjnl/bxq061
   Thimbleby H, 2010, J R SOC INTERFACE, V7, P1429, DOI 10.1098/rsif.2010.0112
   THOMPSON K, 1984, COMMUN ACM, V27, P761, DOI 10.1145/358198.358210
   WILKES MV, 1982, PREPARATION PROGRAMS
   Wilkes MV, 2011, COMMUN ACM, V54, P25
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
   [No title captured]
NR 41
TC 5
Z9 6
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2012
VL 42
IS 11
BP 1393
EP 1407
DI 10.1002/spe.1141
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015OV
UT WOS:000309456700004
DA 2024-07-18
ER

PT J
AU Navarro, A
   Cristóbal, J
   Fernández-Chamizo, C
   Fernández-Valmayor, A
AF Navarro, Antonio
   Cristobal, Jesus
   Fernandez-Chamizo, Carmen
   Fernandez-Valmayor, Alfredo
TI Architecture of a multiplatform virtual campus
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE e-learning; integration; LMS; WebCT; Moodle; Sakai; Blackboard
AB The design, development and maintenance of large virtual campuses are complex issues. This paper describes the architecture of a large university multiplatform virtual campus. Because we have not found virtual campus architectures described in the literature, the goal of this paper is to make our experience available to a wider audience so that organizations interested in the deployment of a large virtual campus can take advantage of our work. Thus, this paper analyzes this architecture from three different points of view: (i) software architecture; (ii) detailed software design; and (iii) hardware architecture. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Navarro, Antonio; Fernandez-Chamizo, Carmen; Fernandez-Valmayor, Alfredo] Univ Complutense Madrid, Dept Ingn Software & Inteligencia Artificial, E-28040 Madrid, Spain.
   [Cristobal, Jesus] Univ Complutense Madrid, Unidad Apoyo Tecn & Docente Campus Virtual, E-28040 Madrid, Spain.
C3 Complutense University of Madrid; Complutense University of Madrid
RP Navarro, A (corresponding author), Univ Complutense Madrid, Dept Ingn Software & Inteligencia Artificial, E-28040 Madrid, Spain.
EM anavarro@fdi.ucm.es
OI Cristobal Barrios, Jesus/0000-0002-2177-7076
FU Ministerio de Ciencia e Innovacion [AACV TIN2009-14317-C03-01];
   Universidad Complutense de Madrid [921340]
FX The Ministerio de Ciencia e Innovacion (project AACV
   TIN2009-14317-C03-01), and the Universidad Complutense de Madrid (group
   921340) have supported this work.
CR Allison D. H., 2008, EDUCAUSE Q, V31
   Alur D., 2003, Core J2EE patterns, best practices and design strategies, V2nd
   [Anonymous], 2011, OR JAV T API
   [Anonymous], 2008, W3C EXTENSIBLE MARKU
   Arlow Jim., 2005, UML 2 UNIFIED PROCES
   Berg A., 2009, OFFICIAL SAKAI HDB C
   Carter G., 2003, LDAP SYSTEM ADM
   Chopra V., 2007, PROFESSIONAL APACHE, V6
   Conallen J., 2002, BUILDING WEB APPL UM
   Cristobal J., INTERACTIVE IN PRESS
   DuBois Paul., 2008, MySQL, V4th
   Epper RM., 2004, EDUCAUSE CTR APPL RE
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Gamma Erich., 1994, DESIGN PATTERNS
   Goodwill J., 2003, PROFESSIONAL JAKARTA
   Green K. C., 2005, 2005 NATL SURVEY IT
   Guri-Rosenblit S., HIGHER ED POLICY, V18, P5
   Hansen M., 2007, SOA USING JAVA WEB S
   Instructional Technology Council ITC., 2008, DIST ED SURV RES
   Kaplan-Leison E., 2009, ASTD LEARNING CIRCUI
   Leidner DE., MIS Q, V19, P265
   Lowe S., 2009, MASTERING VMWARE VSP, V4
   Michiels E., TRCTIT0018 U TWENT
   Moodle Rice W., 2008, MOODL 1 9 E LEARN CO
   Navarro A, 2008, SCI COMPUT PROGRAM, V71, P1, DOI 10.1016/j.scico.2007.10.003
   Navarro A., 2010, ADV INT C TEL 2010
   Navarro A., INTERNET RES, V17, P207
   Neville K., J INFORM TECHNOLOGY, V20, P117
   PLS RAMBOLL, 2004, STUD CONT E LEARN IN
   Rubinger A. L., 2010, ENTERPRISE JAVABEANS
   Schwartz RL., 2008, Learning Perl
   Southworth H., 2006, BALCKBOARD DUMMIES
   Taylor Hugh., 2009, EVENT DRIVEN ARCHITE, V1st
   Van Dusen GC., ASHE ERIC HIGHER ED, V25
   Weaver J. L., 2004, BEGINNING J2EE 1 4 N
   Whittington CD., COMPUTERS ED, V30, P41
   Yabar JM., J CASES INFORM TECHN, V9, P37
NR 37
TC 7
Z9 7
U1 0
U2 26
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2012
VL 42
IS 10
BP 1229
EP 1246
DI 10.1002/spe.1130
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000QM
UT WOS:000308402000003
DA 2024-07-18
ER

PT J
AU Russo, A
   Mecella, M
   de Leoni, M
AF Russo, Alessandro
   Mecella, Massimo
   de Leoni, Massimiliano
TI ROME4EU-A service-oriented process-aware information system for mobile
   devices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE process-aware information system (PAIS); mobile; emergency management;
   Web service
ID EMERGENCY RESPONSE; CRISIS RESPONSE; COMMUNICATION; COORDINATION;
   CHALLENGES; MANAGEMENT; NETWORKS; SUPPORT; SOFTWARE; PATTERNS
AB Nowadays, process-aware information systems (PAISs) are widely used for the management of administrative processes characterized by clear and well-defined structures. Besides those scenarios, PAISs can be used also in mobile and pervasive scenarios, where process participants can be only equipped with smart devices, such as personal digital assistants. None of existing PAISs can be entirely deployed on smart devices, making unfeasible its usage in highly mobile scenarios. This paper presents ROME4EU, a mobile PAIS developed for being applied to the coordination of emergency operators, and an extensive validation of the system, both in term of performances and usability/acceptability by the users. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Russo, Alessandro; Mecella, Massimo; de Leoni, Massimiliano] Univ Roma La Sapienza, Dipartimento Informat & Sistemist, I-00185 Rome, Italy.
   [de Leoni, Massimiliano] Tech Univ Eindhoven, NL-5600 MB Eindhoven, Netherlands.
C3 Sapienza University Rome; Eindhoven University of Technology
RP Russo, A (corresponding author), Univ Roma La Sapienza, Dipartimento Informat & Sistemist Antonio Ruberti, Via Ariosto 25, I-00185 Rome, Italy.
EM arusso@dis.uniroma1.it
RI Mecella, Massimo/N-8699-2019
OI Mecella, Massimo/0000-0002-9730-8882; de Leoni,
   Massimiliano/0000-0002-8447-5374; Russo, Alessandro/0009-0006-9437-0249
FU European Commission [FP6-2005-IST-5-034749]; Regione Lazio and FILAS
   through the 'Progetto Sensoristica Interconnessa per la Sicurezza';
   SAPIENZA Universita di Roma [METRO, FARI 2008, FARI 2010, TESTMED]
FX This work has been partially supported by the European Commission
   through the FP6-2005-IST-5-034749 project WORKPAD
   (http://www.dis.uniroma1.it/similar to workpad). The authors would like
   to thank all project partners, namely Universita di Roma TOR VERGATA,
   IBM Italia - CAS, Salzburg Research, Technische Universitaet Wien, APIF
   Moviquity, SOFTWARE 602, and Regione Calabria - Settore Protezione
   Civile, for useful discussions and insights undertaken during the design
   and development of ROME4EU. The work has been also partly supported by
   Regione Lazio and FILAS through the 'Progetto Sensoristica Interconnessa
   per la Sicurezza' and by SAPIENZA Universita di Roma through the grants
   METRO, FARI 2008, FARI 2010, and TESTMED. Moreover, the authors would
   like to thank Daniele Battista, Alessio De Gaetanis, Juno Valerio
   Franchi, Francesco Frontali, Daniele Graziano, Paolo Manfre, Andrea
   Marrella, Stefano Menotti, Alessandro Pezzullo, Costantino Saponaro, and
   Matteo Vita, who contributed in various ways to the development of
   ROME4EU.
CR Akyildiz IF, 2005, COMPUT NETW, V47, P445, DOI 10.1016/j.comnet.2004.12.001
   Alonso G, 1996, DISTRIB PARALLEL DAT, V4, P229, DOI 10.1007/BF00140951
   [Anonymous], THESIS SAPIENZA U RO
   [Anonymous], P 8 INT ISCRAM C
   [Anonymous], 1 RESP CAPST IPT DEL
   [Anonymous], CISC NEW EN IP BAS I
   [Anonymous], 2 WORLD C SOC SIM
   [Anonymous], DEL D1 2 STAT ART
   [Anonymous], P 2009 10 INT C MOB
   [Anonymous], OM 99 P INT WORKSH K
   [Anonymous], INF 2010 SERV SCI NE
   [Anonymous], P INF 2001
   [Anonymous], IEEE COMPUTER SOC
   [Anonymous], 2010 5 INT C INT WEB
   [Anonymous], P INT C ADV INF SYST
   [Anonymous], 2004, P 3 INT JOINT C AUT
   [Anonymous], P SOFTW ENG APPL SEA
   [Anonymous], P 2010 ACM S APPL CO
   [Anonymous], 2006, BPM Center Report BPM-06-04: 288-302
   [Anonymous], WFMCTC1011ISSUE30
   [Anonymous], P ADV INT C TEL INT
   [Anonymous], P 11 IEEE INT ENT DI
   [Anonymous], 11 EUR WIR C 2005 NE
   [Anonymous], P 11 INT C COMP SUPP
   [Anonymous], P 15 IEEE INT WORKSH
   [Anonymous], P INT C INF TECH INF
   [Anonymous], 1999, Linear Assignment Problems and Extensions
   [Anonymous], 200618 WASH U ST LOU
   [Anonymous], MOBILE AD HOC NETWOR
   [Anonymous], 141 DEP COMP SCI ENG
   [Anonymous], INFORM SYSTEMS E BUS
   [Anonymous], THESIS SAPIENZA U RO
   [Anonymous], P 7 INT JOINT C AUT
   [Anonymous], 2004, Journal of Information Technology Theory and Application
   [Anonymous], P 5 INT C BUS PROC M
   [Anonymous], P 13 IEEE C COMM ENT
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Avanes A, 2008, PROC VLDB ENDOW, V1, P1631, DOI 10.14778/1454159.1454238
   Balachandran K, 2006, IEEE COMMUN MAG, V44, P56, DOI 10.1109/MCOM.2006.1580933
   Bolcer GA, 2000, IEEE INTERNET COMPUT, V4, P46, DOI 10.1109/4236.845390
   Bonfiglio A, 2007, LECT NOTES COMPUT SC, V4458, P95
   Bortenschlager M, 2009, J LOCAT BASED SERV, V3, P229, DOI 10.1080/17489720903463666
   Carver L, 2007, COMMUN ACM, V50, P33, DOI 10.1145/1226736.1226761
   Catarci Tiziana, 2011, International Journal of Information Systems for Crisis Response and Management, V3, P32, DOI 10.4018/jiscrm.2011010103
   Chen R, 2008, COMMUN ACM, V51, P66, DOI 10.1145/1342327.1342340
   Currion P, 2007, COMMUN ACM, V50, P61, DOI 10.1145/1226736.1226768
   da Costa CA, 2008, IEEE PERVAS COMPUT, V7, P64, DOI 10.1109/MPRV.2008.21
   Davis J, 2006, SEVENTH IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS & APPLICATIONS, PROCEEDINGS, P10, DOI 10.1109/WMCSA.2006.27
   De Rosa F, 2005, IEEE PERVAS COMPUT, V4, P62, DOI 10.1109/MPRV.2005.55
   Diniz VB, 2005, INT C COMP SUPP COOP, P1188, DOI 10.1109/CSCWD.2005.194358
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Fiedrich F, 2007, COMMUN ACM, V50, P41, DOI 10.1145/1226736.1226763
   FORMAN GH, 1994, COMPUTER, V27, P38, DOI 10.1109/2.274999
   Giner P, 2010, IEEE PERVAS COMPUT, V9, P18, DOI 10.1109/MPRV.2010.14
   Gottschalk F, 2008, INT J COOP INF SYST, V17, P177, DOI 10.1142/S0218843008001798
   Gunes AE, 2000, J URBAN PLAN D-ASCE, V126, P136, DOI 10.1061/(ASCE)0733-9488(2000)126:3(136)
   Hackmann G, 2006, LECT NOTES COMPUT SC, V4294, P503
   Han LX, 2010, J PARALLEL DISTR COM, V70, P1128, DOI 10.1016/j.jpdc.2010.06.005
   Jing J, 1999, WMCSA '99, SECOND IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P62, DOI 10.1109/MCSA.1999.749278
   Kanchanasut K, 2007, INT J EMERG MANAG, V4, P670, DOI 10.1504/IJEM.2007.015736
   Kopena J, 2005, IEEE INTELL SYST, V20, P17, DOI 10.1109/MIS.2005.94
   Kopena JB, 2008, IEEE INTERNET COMPUT, V12, P45, DOI 10.1109/MIC.2008.9
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Kunze CP, 2007, J COMPUT, V2, P1, DOI 10.4304/jcp.2.1.1-11
   La Rosa M., 2008, INT C BUSINESS PROCE, P290
   Likert R., 1932, Archives of Psychology, V22, P44
   Lorincz K, 2004, IEEE PERVAS COMPUT, V3, P16, DOI 10.1109/MPRV.2004.18
   Luyten K, 2006, LECT NOTES COMPUT SC, V4278, P1966, DOI 10.1007/11915072_105
   Malizia A, 2010, EXPERT SYST APPL, V37, P3380, DOI 10.1016/j.eswa.2009.10.010
   Manoj BS, 2007, COMMUN ACM, V50, P51, DOI 10.1145/1226736.1226765
   Mehrotra S, 2004, P SOC PHOTO-OPT INS, V5304, P179, DOI 10.1117/12.537805
   Monares A, 2011, EXPERT SYST APPL, V38, P1255, DOI 10.1016/j.eswa.2010.05.018
   Neyem A, 2008, J UNIVERS COMPUT SCI, V14, P88
   Nof SY, 2003, PROD PLAN CONTROL, V14, P681, DOI 10.1080/09537280310001647832
   Norros L., 2010, P 28 ECCE C, P49
   Ochoa SF, 2007, J DECIS SYST, V16, P143, DOI 10.3166/JDS.16.143-172
   Pinelle D., 2006, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V15, P537, DOI 10.1007/s10606-006-9031-2
   Pratistha IMP, 2003, ICWS'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON WEB SERVICES, P320
   Ranganathan A, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P288, DOI 10.1109/ICWS.2004.1314750
   Rozinat A, 2009, DATA KNOWL ENG, V68, P834, DOI 10.1016/j.datak.2009.02.014
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Russell N., 2006, Workflow Control-Flow Patterns: A Revised View
   Sawyer S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/971617.971647
   Schöning J, 2009, LECT NOTES COMPUT SC, V5424, P57
   Sen R, 2008, LECT NOTES COMPUT SC, V5052, P280, DOI 10.1007/978-3-540-68265-3_18
   Staines TS, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P191, DOI 10.1109/ECBS.2008.12
   Turoff M, 2002, COMMUN ACM, V45, P29, DOI 10.1145/505248.505265
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   van der Aalst WMP, 1999, INFORM SOFTWARE TECH, V41, P639, DOI 10.1016/S0950-5849(99)00016-6
   van Dongen B.F., 2005, P CAISE, V5, P309
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   Wang JC, 2008, IEEE T SYST MAN CY A, V38, P1041, DOI 10.1109/TSMCA.2008.2001080
   Weber B, 2004, LECT NOTES COMPUT SC, V3155, P434
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Yu J, 2008, STUD COMPUT INTELL, V146, P173
   Yuan YF, 2005, COMMUN ACM, V48, P95, DOI 10.1145/1042091.1042097
   Zeng DD, 2005, INFORMS J COMPUT, V17, P374, DOI 10.1287/ijoc.1040.0067
NR 97
TC 9
Z9 9
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2012
VL 42
IS 10
BP 1275
EP 1314
DI 10.1002/spe.1138
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000QM
UT WOS:000308402000005
OA Bronze
DA 2024-07-18
ER

PT J
AU Gallardo, MM
   Merino, P
   Panizo, L
   Linares, A
AF Gallardo, M. M.
   Merino, P.
   Panizo, L.
   Linares, A.
TI A practical use of model checking for synthesis: generating a dam
   controller for flood management
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automatic synthesis; model checking; flood management; software
   controller
ID DECISION-SUPPORT-SYSTEM
AB Program synthesis with automated methods has been an active research area for many years; however, we still lack well-known and accepted techniques for this software engineering task. In this case, the design space to be considered is infinite, even when the solution is restricted to software that meets the requirements. In this paper we propose the use of model checking (MC) techniques to automatically synthesize controllers. Given a goal in the evolution of a plant, MC can be used to search for acceptable software controllers that enable the plant to evolve as desired. We also develop a realistic application in the context of a joint project with a major water reservoir management company. This application generates controllers for dam management during flood seasons. The controllers give the proper orders (open or close the outflow elements) at precise times in order to avoid disasters and to preserve the water level in the dam. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Panizo, L.] Univ Malaga, ETSI Informat, E-29071 Malaga, Spain.
   [Linares, A.] Befesa Agua SAU, Seville, Spain.
C3 Universidad de Malaga
RP Panizo, L (corresponding author), Univ Malaga, ETSI Informat, Campus Teatinos S-N, E-29071 Malaga, Spain.
EM laurapanizo@lcc.uma.es
RI Gallardo, Maria-del-Mar/JAC-7780-2023; Panizo Jaime, Laura/H-6283-2015;
   Gallardo Melgarejo, Maria del Mar/G-4371-2014; Merino-Gomez,
   Pedro/L-4518-2014
OI Panizo Jaime, Laura/0000-0002-6399-6162; Gallardo Melgarejo, Maria del
   Mar/0000-0003-3481-5307; Merino-Gomez, Pedro/0000-0003-2456-4946
FU Spanish Ministry of Science; Andalusian Department of Science; Befesa
   Agua SAU [TIN2008-05932, CENIT-E TECOAGUA CEN-20091028, P07-TIC-03131]
FX The work received funding from Spanish Ministry of Science, Andalusian
   Department of Science and Befesa Agua SAU, grant numbers TIN2008-05932,
   CENIT-E TECOAGUA CEN-20091028, P07-TIC-03131.
CR ANDERSEN HR, 1995, IEEE S LOG, P398, DOI 10.1109/LICS.1995.523274
   [Anonymous], ICAS 07 P 3 INT C AU
   [Anonymous], 2004, Mastering Simulink
   [Anonymous], SVERTS 2004
   [Anonymous], 2002, Communications in information and systems
   [Anonymous], P 15 IFIP WG6 1 INT
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Behrmann G, 2007, LECT NOTES COMPUT SC, V4590, P121
   Bhansali S, 1998, IEEE T SOFTWARE ENG, V24, P848, DOI 10.1109/32.729684
   Bosnacki D, 1998, LECT NOTES COMPUT SC, V1486, P307, DOI 10.1007/BFb0055359
   Cassez F, 2005, LECT NOTES COMPUT SC, V3653, P66, DOI 10.1007/11539452_9
   Cassez F, 2009, LECT NOTES COMPUT SC, V5469, P90, DOI 10.1007/978-3-642-00602-9_7
   Clarke EM, 2008, LECT NOTES COMPUT SC, V5000, P196
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   de la Cámara P, 2007, LECT NOTES COMPUT SC, V4595, P243
   Fehnker A., 1999, Proceedings Sixth International Conference on Real-Time Computing Systems and Applications. RTCSA'99 (Cat. No.PR00306), P280, DOI 10.1109/RTCSA.1999.811256
   Frehse G, 2005, LECT NOTES COMPUT SC, V3414, P258
   Gallardo M. D. M., 2004, International Journal on Software Tools for Technology Transfer, V5, P165, DOI 10.1007/s10009-003-0122-9
   Gallardo MD, 2009, J AUTOM REASONING, V42, P229, DOI 10.1007/s10817-009-9124-y
   Giupponi C, 2004, MATH COMPUT SIMULAT, V64, P13, DOI 10.1016/j.matcom.2003.07.003
   Gomes CP, 1996, PROCEEDINGS OF THE 11TH KNOWLEDGE-BASED SOFTWARE ENGINEERING CONFERENCE, P12, DOI 10.1109/KBSE.1996.552819
   Gromyko A, 2006, WODES 2006: EIGHTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P475
   Hasebe M, 2002, ADV ENG SOFTW, V33, P245, DOI 10.1016/S0965-9978(02)00015-7
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Holzmann GJ, 2008, AUTOMAT SOFTW ENG, V15, P283, DOI 10.1007/s10515-008-0033-9
   Holzmann GJ, 2004, LECT NOTES COMPUT SC, V2989, P76
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Hune T., 2001, Nordic Journal of Computing, V8, P43
   Jessen JJ, 2007, LECT NOTES COMPUT SC, V4763, P227
   Karaboga D, 2008, APPL SOFT COMPUT, V8, P232, DOI 10.1016/j.asoc.2007.01.004
   Koutsoyiannis D, 2003, PHYS CHEM EARTH, V28, P599, DOI 10.1016/S1474-7065(03)00106-2
   Lerda F, 2008, P AMER CONTR CONF, P2734, DOI 10.1109/ACC.2008.4586906
   Maler O., 1995, STACS 95. 12th Annual Symposium on Theoretical Aspects of Computer Science. Proceedings, P229
   MANNA Z, 1984, ACM T PROGR LANG SYS, V6, P68, DOI 10.1145/357233.357237
   Milner R., 1989, Communication and concurrency
   Morgenstern A, 2005, IEEE DECIS CONTR P, P2757
   Mysiak J, 2005, ENVIRON MODELL SOFTW, V20, P203, DOI 10.1016/j.envsoft.2003.12.019
   Pasareanu CS, 1999, LECT NOTES COMPUT SC, V1680, P168
   Queille JP, 2008, LECT NOTES COMPUT SC, V5000, P216
   Rödönyi G, 2009, MED C CONTR AUTOMAT, P815, DOI 10.1109/MED.2009.5164644
   Ruys TC, 2003, LECT NOTES COMPUT SC, V2648, P1
   Taghirad HD, 2002, 2002 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS, VOLS 1-3, PROCEEDINGS, P2067, DOI 10.1109/IRDS.2002.1041570
   Tronci E, 1996, IEEE DECIS CONTR P, P2237, DOI 10.1109/CDC.1996.572981
NR 44
TC 4
Z9 4
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2011
VL 41
IS 11
BP 1329
EP 1347
DI 10.1002/spe.1048
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827RZ
UT WOS:000295446900008
OA Green Published
DA 2024-07-18
ER

PT J
AU Brooke, PJ
   Paige, RF
   Power, C
AF Brooke, Phillip J.
   Paige, Richard F.
   Power, Christopher
TI Document-centric XML workflows with fragment digital signatures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XML; workflow; digital signature; authorization
AB The use of digital document management and processing is increasing. Traditional workflows of paper forms are being replaced by electronic workflows of digital documents. These workflows often require multiple signatures to be added to the documents for authorization and/or integrity. We describe examples of digital workflows that illustrate problems with digital signatures: i.e. the use of digital signatures across entire documents results in signatures that can be unnecessarily invalidated by subsequent modification of the document. We propose the use of fragment signatures, which reduce unnecessary invalidation of signatures and enable greater concurrency in workflows. Our approach is document-centric and does not use a centralized database. We report on an implementation that allows fragment signatures over document fragments as well as the attachment (or embedding) of other documents. This allows collaborative or cooperative editing to occur on parts of a document without disturbing unrelated signatures. We describe the lessons learned from our deployments and offer further ways to embed such signatures into other document types. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Brooke, Phillip J.] Univ Teesside, Sch Comp, Middlesbrough TS1 3BA, Cleveland, England.
   [Paige, Richard F.; Power, Christopher] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 University of Teesside; University of York - UK
RP Brooke, PJ (corresponding author), Univ Teesside, Sch Comp, Middlesbrough TS1 3BA, Cleveland, England.
EM pjb@scm.tees.ac.uk
CR ADAMS C, 2009, INTERNET X 509 PUBLI
   [Anonymous], 1999, ACM Trans. Inform Syst. Secur, DOI DOI 10.1145/317087.317089
   *AVACOSECURE, 2006, 10 THINGS LOOK DIG S
   BERBECARU D, 2000, P AICA S 20000
   Bertino E, 2004, LECT NOTES COMPUT SC, V3225, P207
   Boyer J., CANONICAL XML VERSIO
   BROOKE PJ, 2006, IMPLEMENTING XML RSI
   CALLAS J, 2009, OPENPGP MESSAGE FORM
   ERNST J, 2006, WHAT REALLY SIMPLE X
   GUTMANN P, 2004, WHY XML SECURITY IS
   Jensen CD, 2007, INT FED INFO PROC, V238, P399
   Kain K, 2002, INT FED INFO PROC, V100, P293
   KROWNE A, 2004, 37 HAW INT C SYST SC
   Lautenbach Berin., 2004, Information Security Technical Report, V9, P6
   LIOY A, 2004, MULTIPLE ELECT SIGNA
   Maniatis P, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P297
   MAZUMDAR S, FIREFOX EXTENSION XM
   MIKLAU G, 2005, P 8 INT WORKSH WEB D, P13
   *OASIS, OP DOC FORM OFF APPL
   *OOODIGITALSIGNATU, 2009, IMPR DIG SIGN FEAT
   SANIN A, 2007, XML SECURITY LIB
   Schneier B., 2015, APPL CRYPTOGRAPHY, VSecond
   Stanski P., 2003, P 12 INT WORLD WID, P170, DOI 10.1145/775152.775176
   Takura A., 1999, 1999 Internet Workshop. IWS99. (Cat. No.99EX385), P88, DOI 10.1109/IWS.1999.810997
   *W3C, XML SIGN SYNT PROC
   Whitten Alma, 2005, SECURITY USABILITY D, P679
NR 26
TC 7
Z9 8
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2010
VL 40
IS 8
BP 655
EP 672
DI 10.1002/spe.974
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 627MS
UT WOS:000280044400004
DA 2024-07-18
ER

PT J
AU Kramer, TR
AF Kramer, Thomas R.
TI Automatic detection and replacement of syntactic constructs causing
   shift/reduce conflicts
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bison; conflict; DMIS; EBNF; parse; shift/reduce; YACC
AB A method is described for repairing some shift/reduce conflicts caused by limited lookahead in LALR(1) parsers such as those built by bison. Also, six types of Extended BNF (EBNF) construct are identified that cause a shift/reduce conflict when a Yet Another Compiler Compiler (YACC) file translated directly from EBNF is processed by bison. For each type, a replacement EBNF construct is described representing the same grammar and causing no shift/reduce conflict when its YACC equivalent is processed by bison. Algorithms are given for identifying instances of each type and transforming them into their replacements. The algorithms are implemented in an automatic parser builder that builds parsers for subsets of the DMIS language. The parser builder reads an EBNF file and writes C++ classes, a YACC file, and a Lex file, which are then processed to build a parser. The parsers build a parse tree using the C++ classes. The EBNF for DMIS is written in natural terms so that natural C++ classes are generated. However, if translated directly into YACC, the natural EBNF leads to 22 shift/reduce conflicts that fall into the six types. The parser builder recognizes the six constructs and replaces them automatically before generating YACC. The YACC that is generated parses in terms of unnatural constructs while building a parse tree using natural C++ classes. The six types of construct may occur in any statement-based language that uses a minor separator, such as a comma; hence knowing how to recognize and replace them may be broadly useful. Published in 2010 by John Wiley & Sons, Ltd.
C1 Natl Inst Stand & Technol, Gaithersburg, MD 20899 USA.
C3 National Institute of Standards & Technology (NIST) - USA
RP Kramer, TR (corresponding author), Natl Inst Stand & Technol, Gaithersburg, MD 20899 USA.
EM kramer@cme.nist.gov
CR *DIM METR STAND CO, 2007, 10512007 ANSIDMIS 1
   DONNELLY C, 2006, YACC COMPATIBLE PARS
   *ISO IEC, 2008, 14977 ISOIEC
   Johnson StephenC., 1975, YACC YET ANOTHER COM, V32
   Levine John., 1995, LEX YACC
   MCCOY EE, 1980, PROGRAM CONVERSION P
   NUFFER D, 2008, EBNF2YACC
   Passos LT, 2007, J UNIVERS COMPUT SCI, V13, P737
   PAXON V, 2003, FLEX FAST SCANNER GE
   PELLAUER M, 2004, 200409 CHALM U TECHN
NR 10
TC 0
Z9 0
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2010
VL 40
IS 5
BP 387
EP 404
DI 10.1002/spe.962
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 583DB
UT WOS:000276652000001
DA 2024-07-18
ER

PT J
AU Seo, E
   Jeong, J
   Park, S
   Kim, J
   Lee, J
AF Seo, Euiseong
   Jeong, Jinkyu
   Park, Seonyeong
   Kim, Jinsoo
   Lee, Joonwoon
TI Catching two rabbits: adaptive real-time support for embedded Linux
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE operating systems; embedded systems; real-time systems; soft real-time;
   Linux
AB The trend of digital convergence makes multitasking common in many digital electronic products. Some applications in those systems have inherent real-time properties, while many others have few or no timeliness requirements. Therefore the embedded Linux kernels, which are widely used in those devices, provide real-time features in many forms. However, providing real-time scheduling usually induces throughput degradation in heavy multitasking due to the increased context switches. Usually the throughput degradation becomes a critical problem, since the performance of the embedded processors is generally limited for cost, design and energy efficiency reasons. This paper proposes schemes to lessen the throughput degradation, which is from real-time scheduling, by suppressing unnecessary context switches and applying real-time scheduling mechanisms only when it is necessary. Also the suggested schemes enable the complete priority inheritance protocol to prevent the well-known priority inversion problem. We evaluated the effectiveness of our approach with open-source benchmarks. By using the suggested schemes, the throughput is improved while the scheduling latency is kept same or better in comparison with the existing approaches. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Seo, Euiseong] Penn State Univ, CSE Dept, University Pk, PA 16803 USA.
   [Jeong, Jinkyu; Park, Seonyeong] Korea Adv Inst Sci & Technol, CS Dept, Taejon 305701, South Korea.
   [Kim, Jinsoo; Lee, Joonwoon] Sungkyunkwan Univ, Sch ICE, Suwon, South Korea.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania State University -
   University Park; Korea Advanced Institute of Science & Technology
   (KAIST); Sungkyunkwan University (SKKU)
RP Seo, E (corresponding author), Penn State Univ, CSE Dept, University Pk, PA 16803 USA.
EM euiseong@ese.psu.edu
RI Seo, Euiseong/F-6212-2010
OI Jeong, Jinkyu/0000-0002-4905-9244
FU Korea Science and Engineering Foundation (KOSEF); Korea government
   (MOST) [R01-2006-000-10724-0]; Defense Acquisition Program
   Administration; Agency for Defense Development
FX Contract/grant sponsor: Korea Science and Engineering Foundation
   (KOSEF); Contract/grant sponsor: Korea government (MOST); Contract/grant
   number: R01-2006-000-10724-0; Contract/grant sponsor: Defense
   Acquisition Program Administration; Contract/grant sponsor: Agency for
   Defense Development
CR BIANCHI E, 2000, P REALT LIN WORKSH O
   CONSORTIUM AF, 2005, LECT NOTES COMPUTER, V3436, P258
   DANKWARDT K, 2002, LINUX J, V8
   DANKWARDT K, 2002, LINUX J, V9
   HAHN M, REALFEEL
   HEURSCH AC, 2003, P WORKSH REAL TIM PR
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   MAN CT, 2006, P 1 INT C INN COMP I, P217
   MERCER CW, 1992, P 13 IEEE REAL TIM S, P78
   MOLNAR I, 2005, REAL TIME PREEMPTION
   RUSLING D, 2000, LINUX KERNEL, P139
   RUSSELL R, 2001, HACKBENCH
   SHA L, 1990, IEEE T COMPUT, V39, P1175, DOI 10.1109/12.57058
   TRIDGELL A, 2002, DBENCH
   VONHAGEN W, 2005, LINUX J, P8
   Wang YC, 1998, FIFTH INTERNATIONAL CONFERENCE ON REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P11, DOI 10.1109/RTCSA.1998.726346
   WEBBER A, 2002, LINUX J          OCT
   WILLIAMS C, 2002, LINUX DEVICES    MAR
   YODAIKEN V, 1999, P 5 LIN EXP RAL NC U
NR 19
TC 4
Z9 6
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2009
VL 39
IS 5
BP 531
EP 550
DI 10.1002/spe.911
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425NU
UT WOS:000264645200004
OA Green Published
DA 2024-07-18
ER

PT J
AU Zhang, H
   Lee, J
   Guha, R
AF Zhang, Hua
   Lee, Joohan
   Guha, Ratan
TI VCluster: a thread-based Java middleware for SMP and heterogeneous
   clusters with thread migration support
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE message passing; multithreading; Java; MPI; PVM
ID SHARED-MEMORY
AB Clusters, composed of symmetric multiprocessor (SMP) machines and heterogeneous machines, have become increasingly popular for high-performance computing. Message-passing libraries, such as message-passing interface (MPI) and parallel virtual machine (PVM), are de facto parallel programming libraries for clusters that usually consist of homogeneous and uni-processor machines. For SMP machines, MPI is combined with multithreading libraries like POSIX Thread and OpenMP to take advantage of the architecture. In addition to existing parallel programming libraries that are in C/C++ and FORTRAN programming languages, the Java programming language presents itself as another alternative with its object-oriented framework, platform neutral byte code, and ever-increasing performance. This paper presents a new parallel programming model and a library, VCluster, which implements this model. VCluster is based on migrating virtual threads instead of processes to support clusters of SMP machines more efficiently. The implementation uses thread migration, which can be used in dynamic load balancing. VCluster was developed in pure Java, utilizing the portability of Java to support clusters of heterogeneous machines. Several applications are developed to illustrate the use of this library and compare the usability and performance of VCluster with other approaches. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Zhang, Hua; Lee, Joohan; Guha, Ratan] Univ Cent Florida, Sch Elect Engn & Comp Sci, Orlando, FL 32816 USA.
C3 State University System of Florida; University of Central Florida
RP Zhang, H (corresponding author), Univ Cent Florida, Sch Elect Engn & Comp Sci, Orlando, FL 32816 USA.
EM hzhang@cs.ucf.edu
CR Al-Jaroodi J, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, PROCEEDINGS, P19, DOI 10.1109/CLUSTR.2002.1137724
   Baker M, 1999, SOFTWARE PRACT EXPER, V29, P551, DOI 10.1002/(SICI)1097-024X(199905)29:6<551::AID-SPE248>3.0.CO;2-C
   Baker M, 2000, LECT NOTES COMPUT SC, V1800, P552
   BAKER M, 1998, UK WORKSH JAV HIGH P
   BOKU T, 2000, P WCBC 00 WORKSH CLU
   Buyya Rajkumar., 1999, HIGH PERFORMANCE CLU
   CHOI M, 2004, IEEE INT C CLUST COM
   FACTOR M, 2003, IEEE 5 INT C CLUST C
   FERRARI AJ, 1998, ACM WORKSH JAV HIGH
   GROPP W, 1995, USING MPI PORTABLE P
   HAYZELDEN LG, 1999, SOFTWARE AGENTS FUTU
   Iosevich V, 2005, SOFTWARE PRACT EXPER, V35, P755, DOI 10.1002/spe.656
   Janjua MU, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, PROCEEDINGS, P389, DOI 10.1109/CLUSTR.2002.1137771
   Jordan H.F., 2003, FUNDAMENTALS PARALLE
   Kontothanassis L, 2005, ACM T COMPUT SYST, V23, P301, DOI 10.1145/1082469.1082472
   Lee HK, 2002, NUMER METH PART D E, V18, P1, DOI 10.1002/num.1043
   LI K, 1989, ACM T COMPUT SYST, V7, P321, DOI 10.1145/75104.75105
   LI K, 1988, P INT C PAR PROC ICP
   Ma MJM, 2000, J PARALLEL DISTR COM, V60, P1194, DOI 10.1006/jpdc.2000.1650
   Ma MJM, 1999, INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS I-V, PROCEEDINGS, P518
   Ma RKK, 2002, CCGRID 2002: 2ND IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P255, DOI 10.1109/CCGRID.2002.1017134
   Morin S., 2002, 4 INT WORKSHOP JAVA, P118
   *MPICH, 2006, PORT IMPL MPI
   Mueller F, 1997, INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS I-III, PROCEEDINGS, P315
   NORDSTROM T, 1992, J PARALLEL DISTR COM, V14, P260, DOI 10.1016/0743-7315(92)90068-X
   *OPENMP FOR, 1997, OPENMP PROP IND STAN
   PENG L, 2000, IEEE STAND INT C CLU
   SHI WHG, 2001, CLUST 3 IEEE INT C C, P149
   SONG D, 2001, US SEC S WASH DC
   Stankovic N, 2000, SOFTWARE PRACT EXPER, V30, P741, DOI 10.1002/(SICI)1097-024X(200006)30:7<741::AID-SPE315>3.0.CO;2-6
   Stankovic N, 2002, IEEE T SOFTWARE ENG, V28, P478, DOI 10.1109/TSE.2002.1000451
   Sunderam V. S., 1990, Concurrency: Practice and Experience, V2, P315, DOI 10.1002/cpe.4330020404
   TABOADA GL, 2003, IEEE 5 INT C CLUST C
   *TECHN COMM OP SYS, 1996, 10031 ANSIIEEE TECHN
   VALLLEE G, 2002, 2 IEEE ACM INT S CLU, P325
   WATTS J, 1998, IEEE INF TECHN C EX, V228, P153
   ZHU W, 2004, 16 IASTED INT C PAR, P766
   Zhu WZ, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, PROCEEDINGS, P381, DOI 10.1109/CLUSTR.2002.1137770
   Zhu WZ, 2003, 2003 INTERNATIONAL CONFERENCE ON PARALLEL PROCESSING, PROCEEDINGS, P465
   ZHU WZ, 2002, IEEE 4 INT C CLUST C
   ZICKENHEINER S, 1994, IEEE INT C NEUR NETW, V4, P2052
NR 41
TC 7
Z9 8
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2008
VL 38
IS 10
BP 1049
EP 1071
DI 10.1002/spe.862
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 340DA
UT WOS:000258625100003
OA Bronze
DA 2024-07-18
ER

PT J
AU Jansen, S
   McGregor, A
AF Jansen, Sam
   McGregor, Anthony
TI Static virtualization of C source code
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE virtualization; C; parsing; static; source
AB Many existing systems are written in C and are not re-entrant or thread safe. Sometimes these systems are required in a context for which they were not first designed, possibly meaning they now need to be re-entrant. This article introduces a program that filters C source code, modifying shared resources (the global variables) to make the code re-entrant: 'virtualizing' the code. The code is then compiled as normal. This approach allows programmatic virtualization with little cost at runtime. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Jansen, Sam; McGregor, Anthony] Univ Waikato, Dept Comp Sci, Hamilton, New Zealand.
C3 University of Waikato
RP Jansen, S (corresponding author), Univ Waikato, Dept Comp Sci, Private Bag 3105, Hamilton, New Zealand.
EM sam@wand.net.nz
CR BARHAM P, 2003, SOSP 03, P164, DOI DOI 10.1145/945445.945462
   BHIDE A, 2005, NASA C PUBL, P43
   Bless R, 2004, PROCEEDINGS OF THE 2004 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P1556
   Devine S. W., 2002, US Patent, Patent No. 6397242
   DIKE J, 2000, P 4 ANN LIN SHOWC C
   DUNKELS A, IWIP EMBEDDED TCP IP
   FRANCK, 2006, P WORKSH EXP GRID TE
   *FSF, US GNU COMP COLL C E
   *FSF, GNU COMP COLL C COMP
   HIBLER M, 2004, FEEDBACK DIRECTED VI
   Huang XW, 1999, IEEE INFOCOM SER, P1107, DOI 10.1109/INFCOM.1999.751666
   *ISO, 1999, 989919999 ISOIEC
   JANSEN S, 2003, WINT SIM C ORL FL DE
   JIANG X, 2004, PARALLEL DISTRIBUTED
   LEE J, ANSI C GRAMMAR
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Nichols Bradford., 1998, PTHREADS PROGRAMMING, Vfirst
   Qiao L, 2005, PROC INT CONF DATA, P1048
   Weng L, 2004, 13TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P24
   Whitaker A, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P195, DOI 10.1145/1060289.1060308
   Zec M, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK, P137
NR 21
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2008
VL 38
IS 4
BP 397
EP 416
DI 10.1002/spe.836
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 286OD
UT WOS:000254854300003
OA Bronze
DA 2024-07-18
ER

PT J
AU Lin, JM
   Hong, ZW
   Fang, GM
   Lee, CT
AF Lin, Jim-Min
   Hong, Zeng-Wei
   Fang, Guo-Ming
   Lee, Che-Tai
TI A style for integrating MS-Windows software applications to
   client-server systems using Java technology
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE COTS reuse; legacy applications; software integration; architectural
   style
ID DECOMPOSING LEGACY PROGRAMS; CORBA; ENVIRONMENTS; PLATFORMS; OBJECTS;
   STEP; SOAP; WEB
AB Developing software systems by integrating the existing applications/systems over the network has become an established and practical technique. The Microsoft (MS) Windows operating systems today support a huge number of software applications. If these commercial applications could be transformed to software components, this may accelerate the construction of new components. This paper proposes an architectural style to support a three-phase process for integrating MS-Windows applications in a distributed system using Java technologies. This style provides a solution with clear documentation and sufficient information that is helpful for the rapid integration of MS-Windows applications. Finally, an exemplary graphical construction part management system that assembles two MS-Windows applications was developed in this study to demonstrate the feasibility of this style. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Feng Chia Univ, Dept Informat Engn & Comp Sci, Taichung 40724, Taiwan.
C3 Feng Chia University
RP Lin, JM (corresponding author), Feng Chia Univ, Dept Informat Engn & Comp Sci, Taichung 40724, Taiwan.
EM jimmy@fcu.edu.tw
OI Hong, Zeng-Wei/0000-0002-5090-2788
CR Aversano L, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P148, DOI 10.1109/CSMR.2001.914979
   Canfora G, 1996, SOFTWARE PRACT EXPER, V26, P25, DOI 10.1002/(SICI)1097-024X(199601)26:1<25::AID-SPE994>3.0.CO;2-T
   Canfora G, 2001, INFORM SOFTWARE TECH, V43, P401, DOI 10.1016/S0950-5849(01)00149-5
   Canfora G, 1998, PROG COMPREHEN, P136, DOI 10.1109/WPC.1998.693336
   Canfora G, 2000, J SYST SOFTWARE, V54, P99, DOI 10.1016/S0164-1212(00)00030-3
   Canfora G, 1998, IEEE T SOFTWARE ENG, V24, P721, DOI 10.1109/32.713328
   Cimitile A, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P59, DOI 10.1109/WCRE.1998.723176
   Curbera F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.991449
   DeLucia A, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P122, DOI 10.1109/ICSM.1997.624238
   Fatoohi R, 2003, SOFTWARE PRACT EXPER, V33, P1, DOI 10.1002/spe.492
   GOEDICKE M, 2002, J SOFTWARE MAINTENAN, P1
   *IBM, 2002, IBM WEBSPHERE SOFTW
   JEPSEN T, 2002, IT PROFESSIONAL, V3, P52
   Lakhotia A, 1997, J SYST SOFTWARE, V36, P211, DOI 10.1016/0164-1212(95)00098-4
   Lin JM, 2004, INFORM SOFTWARE TECH, V46, P403, DOI 10.1016/j.infsof.2003.08.003
   LIN JM, 2001, P 8 IEEE INT WORKSH
   Roy J., 2001, IT Professional, V3, P69, DOI 10.1109/6294.977775
   Sang J, 2001, SOFTWARE PRACT EXPER, V31, P1313, DOI 10.1002/spe.415
   Schmidt Douglas., 1999, PATTERN ORIENTED SOF, V2
   SERRANO M, 2000, P 13 INT C IND ENG A, P79
   SERRANO M, 1999, P 1999 IEEE INT C SO, P85
   Serrano MA, 2002, J SYST SOFTWARE, V64, P37, DOI 10.1016/S0164-1212(02)00020-1
   Sneed HM, 2000, ANN SOFTW ENG, V9, P293, DOI 10.1023/A:1018989111417
   Sneed HM, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P59, DOI 10.1109/WSE.2003.1234009
   Sneed HM, 2002, P INT COMP SOFTW APP, P167, DOI 10.1109/CMPSAC.2002.1044548
   Sneed HM, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P189, DOI 10.1109/WCRE.2001.957823
   Sneed HM, 1998, PROC IEEE INT CONF S, P86, DOI 10.1109/ICSM.1998.738496
   Sneed HM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P104, DOI 10.1109/WCRE.1996.558885
   Spinellis D, 2000, INFORM SOFTWARE TECH, V42, P609, DOI 10.1016/S0950-5849(00)00105-1
   2006, CORBA TECHNOLOGY JAV
   2006, INTEGRATION WINDOWS
   2005, LEBACYJ WHITE PAPER
   2006, RMI IIOP PROGRAMMERS
   2006, JAVA RMI OVER IIOP
   2006, APACHE XERCES
   2006, JAVA LANGUAGE ENV WH
   2006, APACHE SOAP PACKAGE
NR 37
TC 8
Z9 8
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2007
VL 37
IS 4
BP 417
EP 440
DI 10.1002/spe.775
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 151VK
UT WOS:000245318700003
DA 2024-07-18
ER

PT J
AU Pryanishnikov, I
   Krall, A
   Horspool, N
AF Pryanishnikov, Ivan
   Krall, Andreas
   Horspool, Nigel
TI Compiler optimizations for processors with SIMD instructions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE DSP; SIMD; vectorization; alignment analysis; static pointer analysis
AB To achieve maximum efficiency, modern embedded processors for media applications exploit single instruction multiple data (SIMD) instructions. SIMD instructions provide a form of vectorization where a large machine word is viewed as a vector of subwords and the same operation is performed on all subwords in parallel. Systematic usage of SIMD instructions can significantly improve program performance. With C becoming the dominant language for programming embedded devices, there is a clear need for C compilers that use SIMD instructions whenever appropriate. However, SIMD instructions typically require each memory access to be aligned with the instruction's data access size. Therefore an important problem in designing the compiler is to determine whether a C pointer is aligned, i.e. whether it refers to the beginning of a machine word. In this paper, we describe our SIMD generation algorithm and present an analysis method which determines the alignment of pointers at compile time. The alignment information is used to reduce the number of dynamic alignment checks and the overhead incurred by them. Our method uses an interprocedural analysis which propagates pointer alignment information in function bodies and through function calls. The effectiveness of our method is supported by experimental results which show that in typical programs the alignments of about 50% of the pointers can be statically determined. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Vienna Univ Technol, Inst Computersprachen, A-1040 Vienna, Austria.
   Univ Victoria, Dept Comp Sci, Victoria, BC V8W 3P6, Canada.
C3 Technische Universitat Wien; University of Victoria
RP Pryanishnikov, I (corresponding author), Vienna Univ Technol, Inst Computersprachen, Argentinier Str 8, A-1040 Vienna, Austria.
EM prianich@complang.tuwien.ac.at
CR Abramsky Samson., 1987, Abstract Interpretation of Declarative Languages
   BIK A. J. C, 2004, SOFTWARE VECTORIZATI
   Bik AJC, 2002, INT J PARALLEL PROG, V30, P65, DOI 10.1023/A:1014230429447
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Eichenberger AE, 2004, ACM SIGPLAN NOTICES, V39, P82, DOI 10.1145/996893.996853
   EMAMI M, 1994, P ACM SIGPLAN 94 C P, P242
   Farfeleder S, 2005, LECT NOTES COMPUT SC, V3553, P222
   Hind M, 1999, ACM T PROGR LANG SYS, V21, P848, DOI 10.1145/325478.325519
   HIRNSCHROTT U, 2001, THESIS TU WIEN
   Krall A, 2004, IEEE MICRO, V24, P67, DOI 10.1109/MM.2004.40
   Krall A, 2000, INT J PARALLEL PROG, V28, P347, DOI 10.1023/A:1007507005174
   Larsen S, 2002, 2002 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P18, DOI 10.1109/PACT.2002.1105970
   Larsen S, 2000, ACM SIGPLAN NOTICES, V35, P145, DOI 10.1145/358438.349320
   LARSEN S, 2001, LCSTM621 MIT
   Leupers Rainer., 2000, CODE OPTIMIZATION TE
   PRYANISHNIKOV I, P 5 WORKSH MED STREA
   SMITH KB, 2004, INTEL TECHNOLOGY J, V8, P19
   Sreraman N, 2000, INT J PARALLEL PROG, V28, P363, DOI 10.1023/A:1007559022013
   Steensgaard Bjarne., 1996, POINTS TO ANAL ALMOS, P32
   VOGLER K, 2002, THESIS TU WIEN
   Wu P, 2005, INT SYM CODE GENER, P153
   [No title captured]
NR 22
TC 3
Z9 5
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2007
VL 37
IS 1
BP 93
EP 113
DI 10.1002/spe.751
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 126KH
UT WOS:000243511300004
DA 2024-07-18
ER

PT J
AU Sadjadi, SM
   McKinley, PK
   Kasten, EP
   Zhou, Z
AF Sadjadi, S. M.
   McKinley, P. K.
   Kasten, E. P.
   Zhou, Z.
TI MetaSockets: design and operation of runtime reconfigurable
   communication services
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile computing; quality-of-service; computational reflection; adaptive
   middleware; real-time audio-streaming; event-based systems
AB This paper describes the internal architecture and operation of an adaptable communication component called the MetaSocket. MetaSockets are created using Adaptive Java, a reflective extension to Java that enables a component's internal architecture and behavior to be adapted at runtime in response to external stimuli. This paper describes how adaptive behavior is implemented in MetaSockets, as well as how MetaSockets interact with other adaptive components, such as decision makers and event mediators. Results of experiments on a mobile computing testbed demonstrate how MetaSockets respond to dynamic wireless channel conditions in order to improve the quality of interactive audio streams delivered to iPAQ handheld computers. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Florida Int Univ, Sch Comp & Informat Sci, Auton Comp Res Lab, Miami, FL 33199 USA.
   Michigan State Univ, Dept Comp Sci & Engn, Software Engn & Network Syst Lab, E Lansing, MI 48824 USA.
C3 State University System of Florida; Florida International University;
   Michigan State University
RP Sadjadi, SM (corresponding author), Florida Int Univ, Sch Comp & Informat Sci, Auton Comp Res Lab, Miami, FL 33199 USA.
EM sadjadi@cis.fiu.edu
OI Kasten, Eric/0000-0002-6097-4435
CR Adve V., 2001, P ACM SIGPLAN WORKSH
   AKKAI F, 2001, P OOPSLA 2001 WORKSH
   Andersson J., 2000, P ICSE 00 WORKSH SOF
   [Anonymous], LECT NOTES COMPUTER
   Bacon J, 2000, COMPUTER, V33, P68, DOI 10.1109/2.825698
   Baker Jason., 2002, AOSD 02, P86, DOI DOI 10.1145/508386.508396
   Baldoni R, 2002, SYM REL DIST SYST, P109, DOI 10.1109/RELDIS.2002.1180179
   Bergmans L, 2001, COMMUN ACM, V44, P51, DOI 10.1145/383845.383857
   BLAIR G, 1998, P IFIP INT C DISTR S
   CAROMEL D, 2001, LECT NOTES COMPUTER, V2072, P256
   Eckhardt DA, 1999, MOBILE NETW APPL, V4, P273, DOI 10.1023/A:1019163202314
   GOLM M, 1997, THESIS F ALEXANDER U
   GUIMARAES J, 1998, P ECOOP 98 BRUX BELG, P440
   HIRSCHFELD R, 2004, P 4 IEEE INT WORKSH
   Hudson S.E., 1999, CUP User's Manual
   Kasten EP, 2002, 22ND INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOP, PROCEEDINGS, P465, DOI 10.1109/ICDCSW.2002.1030813
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   Kon F, 2000, P IFIP ACM INT C DIS
   LEDOUX T, 1999, LECT NOTES COMPUTER, V1616
   MAES P, 1987, P ACM C OBJ OR LANG
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   MCKINLEY PK, 2004, MSUCSE0417 DEP COMP
   OLIVA A, 1998, IC9832 UN
   Popovici A., 2001, DYNAMIC HOMOGENOUS A
   Redmond B, 2002, LECT NOTES COMPUT SC, V2374, P205
   REN S, 2004, P 4 IEEE INT WORKSH
   Rizzo L., 1997, ACM COMPUTER COMMUNI, V27, P24, DOI DOI 10.1145/263876.263881
   Sadjadi S. M., 2004, P INT S DISTR OBJ AP
   Sadjadi SM, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P310, DOI 10.1109/ICAC.2004.1301392
   Schmidt DC, 1998, COMPUT COMMUN, V21, P294, DOI 10.1016/S0140-3664(97)00165-5
   Smith B. C., 1984, P 11 ACM SIGACT SIGP, P23, DOI [DOI 10.1145/800017.800513, 10.1145/800017.800513]
   Tatsubori M, 2000, LECT NOTES COMPUT SC, V1826, P117
   TRUYEN E, 2000, P ECOOP 2000 WORKSH
   WAGELAAR D, 2004, P 4 IEEE INT WORKSH
   Welch I, 2000, LECT NOTES COMPUT SC, V1826, P155
   Zhou Z, 2004, P 12 IEEE INT WORKSH
   Zinky J. A., 1997, Theory and Practice of Object Systems, V3, P55, DOI 10.1002/(SICI)1096-9942(1997)3:1<55::AID-TAPO6>3.0.CO;2-6
NR 37
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1157
EP 1178
DI 10.1002/spe.748
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 086HN
UT WOS:000240664500004
DA 2024-07-18
ER

PT J
AU Santhanakrishnan, G
   Amer, A
   Chrysanthis, PK
AF Santhanakrishnan, Ganesh
   Amer, Ahmed
   Chrysanthis, Panos K.
TI Self-tuning caching: the Universal Caching algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE caching; adaptive; automated; self-tuning; self-optimizing
AB A cache replacement policy is normally suited to a particular class of applications, or limited to a set of fixed criteria for evaluating the cache-worthiness of an object. We present Universal Caching as a mechanism to capture the generality of the most adaptive algorithms, while depending on a very limited set of basic criteria for cache-replacement decisions. Our testing was limited to Web workloads, where we tested the Universal Caching policy using real-world traces from both the server-side and client-side proxies. Using a self-tuning mechanism, combined with a generalization of the criteria employed in GD-* Web caching, Universal Caching was able to consistently outperform any other fixed choice of algorithm we tested. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Pittsburgh, Dept Comp Sci, Pittsburgh, PA 15260 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE); University
   of Pittsburgh
RP Amer, A (corresponding author), Univ Pittsburgh, Dept Comp Sci, Pittsburgh, PA 15260 USA.
EM amer@cs.pitt.edu
OI Chrysanthis, Panos/0000-0001-7189-9816
CR [Anonymous], P USENIX FIL STOR TE
   [Anonymous], 1998, IMPROVING WWW PROXIE
   Ari I., 2002, P WORKSH DISTR DAT S
   ARLITT M, 1998 WORLD CUP
   Cao P., 1997, P USENIX S INT TECHN
   Cunha C., 1995, TR95010 BOST U DEP C
   Herbster M, 1998, MACH LEARN, V32, P151, DOI 10.1023/A:1007424614876
   JIANG S, 2002, P ACM SIGMETRICS C J
   Jin S, 2001, COMPUT COMMUN, V24, P174, DOI 10.1016/S0140-3664(00)00312-1
   Lee D, 2001, IEEE T COMPUT, V50, P1352, DOI 10.1109/tc.2001.970573
   LEE D, 1999, P ACM SIGMETRICS C J
   ROBINSON J, 1990, P ACM SIGMETRICS C M
   SANTHANAKRISHNA.G, 2005, P 4 ACM WORKSH DAT E
   SANTHANAKRISHNA.G, 2004, P 19 ACM S APPL COMP
   Scheuermann P, 1997, COMPUT NETWORKS ISDN, V29, P997, DOI 10.1016/S0169-7552(97)00032-9
   Wong T.M., 2002, P USENIX ANN TECHN C
   Zhou Y., 2001, P USENIX ANN TECHN C
NR 17
TC 4
Z9 4
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1179
EP 1188
DI 10.1002/spe.755
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 086HN
UT WOS:000240664500005
DA 2024-07-18
ER

PT J
AU Kawahito, M
   Komatsu, H
   Nakatani, T
AF Kawahito, M
   Komatsu, H
   Nakatani, T
TI Partial redundancy elimination for access expressions by speculative
   code motion
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; speculation; partial redundancy elimination; alias analysis;
   memory access; scalar replacement
AB We present a new memory access optimization for Java to perform aggressive code motion for speculatively optimizing memory accesses by applying partial redundancy elimination (PRE) techniques. First, to reduce as many barriers as possible and to enhance code motion, we perform alias analysis to identify all the regions in which each object reference is not aliased. Secondly, we find all the possible barriers. Finally, we perform code motions in three steps. For the first step, we apply a non-speculative PRE algorithm to move load instructions and their following instructions in the backwards direction of the control flow graph. For the second step, we apply a speculative PRE algorithm to move some of them aggressively before the conditional branches. For the third step, we apply our modified version of a non-speculative PRE algorithm to move store instructions in the forward direction of the control flow graph and to even move some of them after the merge points. We implemented our new algorithm in our production-level Java just-in-time compiler. Our experimental results show that our speculative algorithm improves the average (maximum) performance by 13.1% (90.7%) for jBYTEmark and 1.4% (4.4%) for SPECjvm98 over the fastest algorithm previously described, while it increases the average (maximum) compilation time by 0.9% (2.9%) for both benchmark suites. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 IBM Corp, Tokyo Res Lab, Kanagawa 242, Japan.
C3 International Business Machines (IBM)
RP IBM Corp, Tokyo Res Lab, 1623-14 Shimotsuruma, Kanagawa 242, Japan.
EM jl25131@jp.ibm.com
CR AIGNER G, 1996, P 10 EUR C OBJ OR PR, P152
   BODIK R, 1998, SIGPLAN C PROGR LANG, P1
   BODIK R, 1995, LANGUAGES COMPILERS, P1
   BODIK R, 2000, SIGPLAN C PROGR LANG, P321
   BODIK R, 1999, SIGPLAN C PROGR LANG, P64
   CARR S, 1994, SOFTWARE PRACT EXPER, V24, P51, DOI 10.1002/spe.4380240104
   COOPER KD, 1997, C PROGR LANG DES IMP, P308
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Fink S, 2000, LECT NOTES COMPUT SC, V1824, P155
   GHEMAWAT S, 2000, C PROGR LANG DES IMP, P334
   Gosling James, 1996, The Java Language Specification
   Gupta M, 2000, LECT NOTES COMPUT SC, V1850, P422
   GUPTA R, 1998, IEEE C COMP LANG
   Horspool RN, 1997, PROCEEDINGS OF THE EIGHTH ISRAELI CONFERENCE ON COMPUTER SYSTEMS AND SOFTWARE ENGINEERING, P111, DOI 10.1109/ICCSSE.1997.599882
   Hosking AL, 2001, SOFTWARE PRACT EXPER, V31, P577, DOI 10.1002/spe.371
   ISHIZAKI K, 2000, P INT C OBJ OR PROGR
   ISHIZAKI K, 1999, P ACM SIGPLAN JAV GR
   Kawahito M, 2000, ACM SIGPLAN NOTICES, V35, P139, DOI 10.1145/384264.379234
   KAWAHITO M, 2002, C PROGR LANG DES IMP, P187
   KNOOP J, 1994, ACM T PROGR LANG SYS, V16, P1117, DOI 10.1145/183432.183443
   LO R, 1998, C PROGR LANG DES IMP, P26
   Muchnick S., 1997, ADV COMPILER DESIGN
   OGATA K, 2002, C ARCH SUPP PROGR LA, P58
   PUGH W, 1999, JAVA 99 P 1999 ACM I, P89
   Suganuma T, 2000, IBM SYST J, V39, P175, DOI 10.1147/sj.391.0175
   SUGANUMA T, 2001, P INT C OBJ OR PROGR
   WAGNER TA, 1994, C PROGR LANG DES IMP, P85
   ZAHIR R, 2000, P 9 INT C ARCH SUPP, P212
NR 28
TC 6
Z9 7
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2004
VL 34
IS 11
BP 1065
EP 1090
DI 10.1002/spe.604
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 850ZH
UT WOS:000223652400003
DA 2024-07-18
ER

PT J
AU Bernard, E
   Legeard, B
   Luck, X
   Peureux, F
AF Bernard, E
   Legeard, B
   Luck, X
   Peureux, F
TI Generation of test sequences from formal specifications: GSM 11-11
   standard case study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE specification-based testing; B notation; smart card GSM 11-11 standard;
   constraint logic programming with sets
AB This paper presents the results of a case study on generating test cases for a fragment of the smart card GSM 11-11 standard. The generation method is based on an original approach using the B notation and techniques of constraint logic programming with sets. The GSM 11-11 technical specifications were formalized with the B notation. From this B specification, a system of constraints was derived, equivalent to this formal model. Using a set constraint solver, boundary states were computed and test cases were obtained by traversing the constrained reachability graph of the specifications. The purpose of this project was to evaluate the contribution of this testing environment, called B-TESTING-TOOLS, in an industrial process on a real life-size application, by comparing the generated test sequences with the already used and high-quality manually-designed tests. This comparison enabled us to validate our approach and showed its effectiveness in the validation process of critical applications: the case study gives a wide coverage (about 85%) of the generated tests compared to the pre-existing tests and a saving of 30% in test design time. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Franche Comte, CNRS, Lab Informat, F-25030 Besancon, France.
   SchlumbergerSema Montrouge Prod Ctr, F-92542 Montrouge, France.
   Univ Franche Comte, CNRS, Lab Informat, F-25030 Besancon, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite de
   Franche-Comte; Schlumberger; Centre National de la Recherche
   Scientifique (CNRS); Universite de Franche-Comte
RP Legeard, B (corresponding author), Univ Franche Comte, CNRS, Lab Informat, 16 Route Gray, F-25030 Besancon, France.
EM legeard@lifc.univ-fcomte.fr
OI Legeard, Bruno/0000-0003-4986-7097
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Ambert F, 2002, P FORM APPR TEST SOF, P105
   AMBERT F, 1994, P ICLP 94 WORKSH CON, P151
   [Anonymous], 1992, The Z Notation
   [Anonymous], P 14 ANN ACM S PRINC
   [Anonymous], LNCS
   BALCER MJ, 1908, P ACM SIGSOFT 89 3 S, P210
   Behm P, 1998, LECT NOTES COMPUT SC, V1393, P29
   Behnia S, 1999, LECT NOTES COMPUT SC, V1708, P509
   Beizer Boris, 1995, Black-box testing: techniques for functional testing of software and systems
   Bouquet F, 2002, LECT NOTES COMPUT SC, V2280, P188
   BOUQUET F, 2000, CL 00 WORKSH COSTR L
   Carrington D., 1994, P 8 Z US M, P51
   CHOI Y, 2001, SOFTWARE ENG NOTES, V26, P164
   COLIN S, 2003, P UK TEST WORKSH YOR
   EL-FAR I. K., 2002, ENCY SOFTWARE ENG, V1, P825
   *EUR TEL STAND I, 1999, GSM 11 11 V7 20 TECH
   FRIEDMAN G, 2002, P INT S SOFTW TEST A, V27, P134
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   Gotlieb A, 2000, LECT NOTES ARTIF INT, V1861, P399
   Grieskamp W., 2002, Software Engineering Notes, V27, P112, DOI 10.1145/566171.566190
   HARTMAN A, 2002, AGEDIS MODEL BASED T
   Hierons R. M., 1997, Software Testing, Verification and Reliability, V7, P19, DOI 10.1002/(SICI)1099-1689(199703)7:1<19::AID-STVR124>3.0.CO;2-N
   HORCHER HM, 1995, SOFTWARE QUAL J, V4, P309, DOI 10.1007/BF00402650
   *ISO, 1998, 9646 ISO
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Julliand J, 1998, LECT NOTES COMPUT SC, V1393, P273
   Larsen P., 1993, LNCS, V670, P268
   Legeard B, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P377, DOI 10.1109/ASE.2001.989833
   LEGEARD B, 2001, TR0101 LIFC
   LEGEARD B, 2002, LNCS, V2272, P309
   Marre B, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P229, DOI 10.1109/ASE.2000.873667
   Meudec C, 2001, SOFTW TEST VERIF REL, V11, P81, DOI 10.1002/stvr.225
   PHILIPPS J, 2003, P 8 INT WORKSH FORM, P168
   Pretschner A, 2001, P 2 ICSE WORKSHOP AU, P1
   PRETSCHNER A, 2001, P CONCUR 01 WORKSH F
   SEKERINSKI E, 1999, PROGRAM DEV REFINEME
   STOCKS PA, 1993, PROC INT CONF SOFTW, P405, DOI 10.1109/ICSE.1993.346025
   *SUM MICR, 2000, JAV CARD 2 1 1 VIRT
   *SWED I COMP SCI, 2001, SICSTUS PROL 3 8 7 M
   VANAERTRYCK L, 1997, 1 IEEE INT C FORM EN, P99
   VAYSBURG B, 2002, P INT S SOFTW TEST A, V27, P107
   WEYUKER EJ, 1980, IEEE T SOFTWARE ENG, V6, P236, DOI 10.1109/TSE.1980.234485
   ATELIER B TECHNICAL
NR 44
TC 39
Z9 44
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2004
VL 34
IS 10
BP 915
EP 948
DI 10.1002/spe.597
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 844AN
UT WOS:000223129300001
DA 2024-07-18
ER

PT J
AU Austern, MH
   Stroustrup, B
   Thorup, M
   Wilkinson, J
AF Austern, MH
   Stroustrup, B
   Thorup, M
   Wilkinson, J
TI Untangling the balancing and searching of balanced binary search trees
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C plus plus templates; generic data structures; balanced search trees
AB A balanced binary search tree can be characterized by two orthogonal issues: its search strategy and its balancing strategy. In this paper, we show how to decouple search and balancing strategies so that they can be expressed independently of each other, communicating only by basic operations such as rotations. Different balancing strategies, such as red-black trees and splay trees, and different search applications, such as key search and rank search, can be combined arbitrarily. As a new result, we show how optimal string search can be expressed as a search application on any balanced binary tree.
   We implement our framework in C++, with the heavy use of templates and inlining. It keeps balancing and searching separate, while still delivering a performance that compares favorably to widely used binary tree implementations. Common services, such as correctness checks and timing measurements, do not have to be rewritten for each tree implementation. The common framework simplifies experimentation with trees and search algorithms; as a demonstration, we present some simple comparisons of red-black trees, splay trees and treaps. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Texas A&M Univ, Dept Comp Sci, College Stn, TX 77843 USA.
   Apple Comp Inc, Cupertino, CA 95014 USA.
   AT&T Labs Res, Shannon Lab, Florham Pk, NJ 07932 USA.
   Silicon Graph Inc, Mountain View, CA 94043 USA.
C3 Texas A&M University System; Texas A&M University College Station; Apple
   Inc; AT&T
RP Texas A&M Univ, Dept Comp Sci, TAMU 3112, College Stn, TX 77843 USA.
EM bs@cs.tamu.edu
OI Thorup, Mikkel/0000-0001-5237-1709
CR [Anonymous], 1983, Data Structures and Network Algorithms
   ARAGON CR, 1989, P 30 ANN IEEE S FDN, P540
   AUSTERN M, ELECT APPENDIX UNTAN
   Austern MatthewH., 1999, AW PRO COMP, V1st
   Bayer R., 1972, Acta Informatica, V1, P290, DOI 10.1007/BF00289509
   BENT SW, 1985, SIAM J COMPUT, V14, P545, DOI 10.1137/0214041
   Bentley JL, 1997, PROCEEDINGS OF THE EIGHTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P360
   COPLIEN J, 1996, CURIOUSLY RECURRING
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Goodrich M.T., 2002, ALGORITHM DESIGN FDN
   Guibas LJ., 1978, P 19 ANN S FDN COMPU, P8, DOI DOI 10.1109/SFCS.1978.3
   *ISO, 1998, 14882 ISOIEC
   JOSUTTIS NM, 1999, C PLUS PLUS STANDARD
   Mehlhorn K., 1999, LEDA PLATFORM COMBIN
   Motwani Rajeev, 1995, RANDOMIZED ALGORITHM
   Musser D.R., 2001, STL Tutorial and Reference Guide. C++ Programming with the Standard Template Library, V2nd
   SEDGEWICK R, 1998, ALGORITHMS C PLUS PL
   SLEATOR DD, 1985, J ACM, V32, P652, DOI 10.1145/3828.3835
   STROUSTRUP B, 2000, C PLUS PLUS PROGRAMM
   STROUSTRUP B, 1994, DESIGN EVOLUTION C P
   VANWYK CJ, 1998, DATA STRUCTURES PROG
NR 21
TC 5
Z9 5
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2003
VL 33
IS 13
BP 1273
EP 1298
DI 10.1002/spe.564
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 739LA
UT WOS:000186346300005
DA 2024-07-18
ER

PT J
AU Müller, J
   Korvink, JG
AF Müller, J
   Korvink, JG
TI A general purpose adaptivity driver for FE software
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE finite element software; numerical simulation; mesh adaptivity driver;
   error control
ID FINITE-ELEMENT METHODS; PARABOLIC PROBLEMS; REFINEMENT
AB This paper describes a tool that serves as an automatic mesh adaptivity driver program for general purpose finite element (FE) software packages. Many commercially available FE programs lack a feature to control the numerical solution's accuracy properly. Our tool implements a mesh adaptive method that, in conjunction with separate finite element software, allows one to fully automatically improve the quality of the numerical solution up to a user specified accuracy. We demonstrate the use of the package with selected computational examples performed with a commercial FE package, ANSYS, and with our FE program FEMEngine. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Freiburg, IMTEK, Inst Microsyst Technol, D-79085 Freiburg, Germany.
C3 University of Freiburg
RP Korvink, JG (corresponding author), Univ Freiburg, IMTEK, Inst Microsyst Technol, Georges Koehler Allee 103, D-79085 Freiburg, Germany.
RI Korvink, Jan G./C-6136-2009
OI Korvink, Jan G./0000-0003-4354-7295
CR [Anonymous], POSTERIORI ERROR EST
   BABUSKA I, 1978, SIAM J NUMER ANAL, V15, P736, DOI 10.1137/0715049
   BABUSKA I, 1978, INT J NUMER METH ENG, V12, P1597, DOI 10.1002/nme.1620121010
   BABUSKA I, 1986, ACCURACY ESTIMATES A
   BANK RE, 1985, MATH COMPUT, V44, P283, DOI 10.1090/S0025-5718-1985-0777265-X
   Bansch E., 1991, Impact of Computing in Science and Engineering, V3, P181, DOI 10.1016/0899-8248(91)90006-G
   BANSCH E, 1993, ADAPTIVE FINITE BOUN, P47
   Bastian P., 1997, Computing and Visualization in Science, V1, P27, DOI 10.1007/s007910050003
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Braess D., 2001, Finite Elements: Theory, Fast Solvers, and Applications in Solid Mechanics, V2
   CHRISTOFFEL EB, 1868, ANN MAT PUR APPL, V1, P89
   Do Carmo Manfredo P, 2016, Dover Books on Mathematics, Vsecond
   ERIKSSON K, 1991, SIAM J NUMER ANAL, V28, P43, DOI 10.1137/0728003
   ERIKSSON K, 1995, SIAM J NUMER ANAL, V32, P1729, DOI 10.1137/0732078
   Hennessy J., 2017, Computer Architecture, Sixth Edition: A Quantitative Approach, V6th
   KOSSACZKY I, 1994, J COMPUT APPL MATH, V55, P275, DOI 10.1016/0377-0427(94)90034-5
   Langtangen HansPetter., 1999, COMPUTATIONAL PARTIA
   *MATHW, DEV MATLAB SIM TECHN
   MAUBACH JM, 1995, SIAM J SCI COMPUT, V16, P210, DOI 10.1137/0916014
   MITCHELL WF, 1989, ACM T MATH SOFTWARE, V15, P326, DOI 10.1145/76909.76912
   Moore G.E., 1965, Electronics, V38, P114
   MULLER J, 2001, THESIS U FREIBURG GE
   MULLER J, 1999, P EUR 14 COP, P277
   Reddy B. D., 1997, TEXTS APPL MATH, V27
   REINBOLDT WC, 1980, SIAM J NUMER ANAL, V17, P766
   RIVARA MC, 1984, INT J NUMER METH ENG, V20, P745, DOI 10.1002/nme.1620200412
   SCHMIDT A, 1996, LECT NOTES SUMMER SC
   STRANG G, 1997, ANAL FINITE ELEMENT
   Taschini S, 1999, SOFTWARE PRACT EXPER, V29, P67, DOI 10.1002/(SICI)1097-024X(199901)29:1<67::AID-SPE221>3.0.CO;2-7
   Taschini S, 2000, CMES-COMP MODEL ENG, V1, P31
   VERFUTH R, 1996, REV POSTERIORI ERROR
   ZIENKIEWICZ OC, 1987, INT J NUMER METH ENG, V24, P337, DOI 10.1002/nme.1620240206
   VIRTUAL ALBUM FLUID
   NUMERICAL OBJECTS SO
   FINITE ELEMENT NUMER
NR 35
TC 0
Z9 0
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2003
VL 33
IS 12
BP 1097
EP 1116
DI 10.1002/spe.536
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 727JN
UT WOS:000185655000001
DA 2024-07-18
ER

PT J
AU Pichler, R
   Ostermann, K
   Mezini, M
AF Pichler, R
   Ostermann, K
   Mezini, M
TI On aspectualizing component models
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE aspect-oriented programming; components; EJB
AB Server-side component models such as Enterprise JavaBeans (EJB) add powerful abstractions to the bare 'business objects' layer in order to support a clean separation of server-side application logic from other concerns such as distribution, security, transaction management and persistence. An improved separation of concerns is also the main goal of aspect-oriented programming (AOP). This paper compares the two approaches and reasons about the possibility of substituting (parts of) component models using AOP mechanisms. We conclude that AOP is a promising approach to eliminate important shortcomings of the container-based component approach. However, our analysis of concrete aspect-oriented languages shows that current AOP technology is not yet mature enough to supersede component models. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Tech Univ Darmstadt, D-64283 Darmstadt, Germany.
   Siemens AG, Corp Technol, D-81730 Munich, Germany.
C3 Technical University of Darmstadt; Siemens AG; Siemens Germany
RP Ostermann, K (corresponding author), Tech Univ Darmstadt, Alexanderstr 10, D-64283 Darmstadt, Germany.
CR Alur D., 2001, Core J2EE patterns: Best practices and design strategies, V1st
   BLANK G, 1998, ECOOP WORKSH ASP OR
   CLARKE S, 2001, P 23 INT C SOFTW ENG
   EDDON G, 1999, INSIDE COMPLUS
   HERRMANN S, 2001, 6 INT WORKSH COMP OR
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   LIEBERHERR K, 1999, NUCCS9901
   MEZINI M, 1998, P OOPSLA 98 ACM SIGP
   MEZINI M, 2003, P INT C ASP OR SOFTW
   MEZINI M, 2002, P OOPSLA 02 SEATTL U
   *OBJ MAN GROUP, 1999, 990205 OMG TC
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Sun Microsystems, 2001, ENT JAV SPEC VERS 2
   Sun Microsystems, 2001, JAV SERVL SPEC VERS
   TARR P, 1999, HYPER J USER INSTALL
NR 15
TC 15
Z9 15
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2003
VL 33
IS 10
BP 957
EP 974
DI 10.1002/spe.534
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715CV
UT WOS:000184953700004
DA 2024-07-18
ER

PT J
AU Caromel, D
   Vayssière, J
AF Caromel, D
   Vayssière, J
TI A security framework for reflective Java applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE reflection; security; access control; Java; components
AB The advent of component-based reflective applications raises the issue of protecting baselevel components from the actions performed by metalevel components. However, by their very nature, reflective applications are far more difficult to secure than non-reflective applications, which certainly explains why the problem has received very little attention so far. In this paper we present a security framework for enforcing access control between metalevel components and the baselevel components they reflect on. Rather than designing a new security architecture from scratch, we extend the standard security architecture of Java to provide security for a fully-functional proxy-based MOP for Java. We implement a number of well-known meta-level behaviors and study their security requirements, the results of which support our design choices. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 INRIA Sophia Antipolis, F-06902 Sophia Antipolis, France.
RP Caromel, D (corresponding author), INRIA Sophia Antipolis, 2004 Route Lucioles,BP 93, F-06902 Sophia Antipolis, France.
CR AGRAWAL R, 1991, P OOPSLA 91, P113
   [Anonymous], LNCS
   BACK G, 2000, P 4 S OP SYST DES IM
   Bruneton Eric, 2002, P AD EXT COMP SYST
   Caromel D, 1998, CONCURRENCY-PRACT EX, V10, P1043, DOI 10.1002/(SICI)1096-9128(199809/11)10:11/13<1043::AID-CPE413>3.0.CO;2-6
   CAROMEL D, 2001, LECT NOTES COMPUTER, V2072, P256
   CAROMEL D, 2001, LECT NOTES COMPUTER, V2192, P118
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   CHIBA S, 1998, ECOOP 98 WORKSH REFL
   Dahm M., 1999, JIT'99. Java-Information-Tag 1999, P267
   Giroux S., 1993, P TOOLS EUROPE 93, P109
   GONG L, 1999, P 4 IEEE INT S HIGH, P89
   GONG L, 1999, INSIDE JAVA 2 PLATFO, P262
   Gosling J., 1997, The Java Language Specification
   HOARE CAR, 1974, COMMUN ACM, V17, P549, DOI 10.1145/355620.361161
   IBRAHIM MH, 1991, P EUR C OBJ OR PROGR, P73
   Kiczales G., 1991, The Art of the Metaobject Protocol
   KLEINOEDER J, 1996, TR149603 IMMD 4 U ER
   LAMPSON BW, 1974, ACM OPERATING SYSTEM, V8, P18
   MAES P, 1987, THESIS VRIJE U BRUSS
   MILOJICIC DS, 1998, P USENIX COOTS 98 SA
   MULLET P, 1995, OOPSLA 95 C P ACM SI, V30, P316
   Myers Andrew C., 1999, S PRINC PROGR LANG, P228
   Oliva A, 1999, PROCEEDINGS OF THE FIFTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS '99), P203
   OLIVA A, 1999, IC9908
   OUSTERHOUT JK, 1998, LECT NOTES COMPUTER, V1419, P217
   PASCOE GA, 1986, P OOPSLA 86, P341
   Redmond Barry, 2000, ECOOP 2000 WORKSH RE
   RUIZ JC, 2001, LECT NOTES COMPUTER, V1234, P134
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Smith B. C., 1984, P 11 ACM SIGACT SIGP, P23, DOI [DOI 10.1145/800017.800513, 10.1145/800017.800513]
   *SUN MICR, 1998, JAV COR REFL API
   Sun Microsystems, 2001, ENT JAV SPEC VERS 2
   *US DEP DEF, 1985, 520028 US DEP DEF
   VIGNA G, 1998, LECT NOTES COMPUTER, V1419
   Wand M., 1988, LISP and Symbolic Computation, V1, P11, DOI 10.1007/BF01806174
   WELCH I, 1998, OOPSLA 98 WORKSH REF
   WELCH I, 1999, LNCS, V1616, P2
NR 38
TC 1
Z9 2
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2003
VL 33
IS 9
BP 821
EP 846
DI 10.1002/spe.528
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 706MA
UT WOS:000184456400002
DA 2024-07-18
ER

PT J
AU di Vimercati, SD
   Paraboschi, S
   Samarati, P
AF di Vimercati, SD
   Paraboschi, S
   Samarati, P
TI Access control: principles and solutions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE access control; security principles; operating systems; DBMS;
   Internet-based solutions
AB Access control is the process of mediating every request to resources and data maintained by a system and determining whether the request should be granted or denied. The variety and complexity of the protection requirements that may need to be imposed makes access control a far from trivial process. Expressiveness and flexibility are top requisites for an access control system together with, and usually in conflict with, simplicity and efficiency. In this paper, we discuss the main desiderata for access control systems and illustrate the main characteristics of access control solutions in some of the most popular existing systems. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Milan, Dipartimento Tecnol Informaz, I-26013 Crema, Italy.
   Univ Bergamo, Dipartimento Ingn, I-24044 Dalmine, Italy.
C3 University of Milan; University of Bergamo
RP Univ Milan, Dipartimento Tecnol Informaz, Via Bramante 65, I-26013 Crema, Italy.
EM samarati@dti.unimi.it
OI Paraboschi, Stefano/0000-0003-0399-1738; DE CAPITANI DI VIMERCATI,
   SABRINA/0000-0003-0793-3551; Samarati, Pierangela/0000-0001-7395-4620
CR [Anonymous], APACHE HTTP SERVER V
   Atzeni P., 1999, DATABASE SYSTEMS CON
   BELLOVIN SM, 1995, SECURITY PROBLEMS TC
   Castano Silvana., 1995, Database Security
   Fielding R., 1999, 2616 RFC
   GONG L., 1999, INSIDE JAVA 2 PLATFO
   *ISO IEC, 1999, 9075 ISOIEC
   Jajodia S, 2001, ACM T DATABASE SYST, V26, P214, DOI 10.1145/383891.383894
   Sandhu R., 1997, CRC HDB COMPUTER SCI, P1929
   Sandhu R, 1990, P IFIP WG11 3 WORKSH
   Sandhu R., 2000, Symposium on Access Control Models and Technologies: Proceedings of the fifth ACM workshop on Role-based access control, V26, P47, DOI 10.1145/344287.344301
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   [No title captured]
NR 13
TC 41
Z9 52
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2003
VL 33
IS 5
BP 397
EP 421
DI 10.1002/spe.513
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 668VE
UT WOS:000182313200002
DA 2024-07-18
ER

PT J
AU Gachet, A
   Haettenschwiler, P
AF Gachet, A
   Haettenschwiler, P
TI A Jini-based software framework for developing distributed cooperative
   decision support systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE decision support systems; distributed systems; Java; Jini; JavaSpaces
AB Many mission-critical, decision-making situations happen in dynamic, rapidly changing, and often unpredictable environments. Military, governmental, and medical contexts are examples of such situations, which can be characterized by highly decentralized, up-to-date data sets coming from various sources. Unlike other decision-making tools, decision support systems (DSS) designed for such situations are challenged by the need to access this decentralized data at any time, from anywhere, under tight time constraints.
   This paper presents the design of a software framework for developing these kinds of distributed DSSs. The proposed Java-based framework relies mostly on the Jini technology and its JavaSpaces service. The construction of the framework is presented with UML class diagrams, UML sequence diagrams, and additional explanations. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Fribourg, Dept Informat, Dec Support Syst Grp, CH-1700 Fribourg, Switzerland.
C3 University of Fribourg
RP Univ Fribourg, Dept Informat, Dec Support Syst Grp, Faucigny 2, CH-1700 Fribourg, Switzerland.
EM alexandre.gachet@unifr.ch
CR ALTER SL, 1980, DECIS SUPPORT SYST, V16, P316
   ARNOLD K, 1991, JINI SPECIFICATION J, V22, P385
   Buschmann F., 1996, Pattern-oriented software architecture: a system of patterns, Vxvi, P457
   DRUZDZEL MJ, 1999, ENCY LIB INFORMATION
   Finlay P. N., 1994, INTRO DECISION SUPPO, P274
   FOWLER M, 2000, UML DISTILLED BRIEF, V21, P185
   FREEMAN E, 1999, JAVASPACES PRINCIPLE, V21, P344
   GACHET A, 2001, INF SCI INT C KRAK P
   GACHET A, 2002, DSLAGE 2002
   GACHET A, 2001, SOFTWARE FRAMEWORK D
   GAMMA E, 1995, DESIGN PATTERNS ELEM, V15, P395
   Gupta R, 2002, COMPUTER, V35, P34, DOI 10.1109/MC.2002.1023786
   Haettenschwiler P., 1999, GUTES ENTSCHEIDEN WI, P189
   HUERLIMANN T, 1999, APPL OPTIMIZATION, V31
   KUMARAN SI, 2002, JINI TECHNOLOGY OVER, V19, P358
   LI S, 2000, PROGRAMMER PROGRAMME, V17, P886
   MARAKAS GM, 1999, DECIS SUPPORT SYST, V21, P506
   OAKS S, 2000, JINI DESKTOP QUICK R, V13, P400
   POWER DJ, 2002, DECIS SUPPORT SYST, V16, P251
   SAGE AP, 1991, DECIS SUPPORT SYST, V11, P344
   SAUTER VL, 1997, DECIS SUPPORT SYST, V19, P408
   SCHMIDT K, 1991, DISTRIBUTED DECISION
   SCHROFF A, 1998, THESIS U FRIBOURG FR
   SILVER M, 1991, SYSTEMS SUPPORT DECI, V17, P254
   SOMMERS F, 2002, JAVAWORLD
   SPRAGUE R., 1993, Decision Support Systems, V3th
   TURBAN E, 1995, DECISION SUPPORT EXP, V25, P36
   TURBAN E, 1995, DECISION SUPPORT EXP, V25, P887
NR 28
TC 8
Z9 8
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2003
VL 33
IS 3
BP 221
EP 258
DI 10.1002/spe.503
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 655GD
UT WOS:000181542200002
DA 2024-07-18
ER

PT J
AU Bainbridge, D
   Bell, T
AF Bainbridge, D
   Bell, T
TI A music notation construction engine for optical music recognition
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE optical music recognition; music notation construction; definite clause
   grammars; graph traversal
AB Optical music recognition (OMR) systems are used to convert music scanned from paper into a format suitable for playing or editing on a computer. These systems generally have two phases: recognizing the graphical symbols (such as note-heads and lines) and determining the musical meaning and relationships of the symbols (such as the pitch and rhythm of the notes). In this paper we explore the second phase and give a two-step approach that admits an economical representation of the parsing rules for the system. The approach is flexible and allows the system to be extended to new notations with little effort-the current system can parse common music notation, Sacred Harp notation and plainsong. It is based on a string grammar and a customizable graph that specifies relationships between musical objects. We observe that this graph can be related to printing as well as recognizing music notation, bringing the opportunity for cross-fertilization between the two areas of research. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Canterbury, Dept Comp Sci, Christchurch, New Zealand.
   Univ Waikato, Dept Comp Sci, Hamilton, New Zealand.
C3 University of Canterbury; University of Waikato
RP Univ Canterbury, Dept Comp Sci, Private Bag 4800, Christchurch, New Zealand.
EM tim@cosc.canterbury.ac.nz
OI Bainbridge, David/0000-0002-0603-5728
CR [Anonymous], P 13 INT C PATT REC
   [Anonymous], THESIS U CANTERBURY
   [Anonymous], THESIS MIT CAMBRIDGE
   Bainbridge D, 1999, IEE CONF PUBL, P474, DOI 10.1049/cp:19990367
   Bainbridge D, 1998, IEEE DATA COMPR CONF, P209, DOI 10.1109/DCC.1998.672149
   BAINBRIDGE D, 1996, P 19 AUSTR COMP SCI, P308
   BAINBRIDGE D, 1997, HDB CHARACTER RECOGN, P583
   BAINBRIDGE D, 1999, 4 ACM C DIG LIB BERK, P161
   BAIRD H, 1992, STRUCTURAL DOCUMENT
   Barr A., 1981, HDB ARTIFICIAL INTEL, VI.
   Baumann S., 1995, P 3 INT C DOC AN REC, V2, P1080
   Bratko I., 1990, PROLOG PROGRAMMING A, V2
   CARTER NP, 1989, THESIS U SURREY
   CHIANG NT, 1998, THESIS U WAIKATO NZ
   COUASNON B, 1995, 3 INT C PRACT APPL P, P115
   COUASNON B, 1997, THESIS IRISA FRANCE
   COUASNON B, 1994, INT ASS PATT REC WOR, P15
   FAHMY H, 1991, P 1 INT C DOC AN REC, V1, P70
   FAHMY H, 1992, SERIES MACHINE PERCE, V5, P373
   Fahmy S, 1998, IEEE NETWORK, V12, P6, DOI 10.1109/MNET.1998.730745
   FUJINAGA I, 1997, THESIS MCGILL U MONT
   HAKEN L, 1993, COMPUT MUSIC J, V17, P43, DOI 10.2307/3680942
   KATO H, 1990, P IAPR WORKSH SYNT S, P231
   MCPHERSON JR, 2001, 4 NZ COMP SCI RES ST, P50
   NG KC, 1995, THESIS U LEEDS LEEDS
   Pruslin DennisH., 1966, AUTOMATIC RECOGNITIO
   SELFRIDGEFIELD E, 1994, COMPUTING MUSICOLOGY, V9, P109
   SUCKELBERG MV, 1997, UNIGEAI9701 U GEN
   Wijaya K, 1999, IEE CONF PUBL, P760, DOI 10.1049/cp:19990426
NR 29
TC 17
Z9 23
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2003
VL 33
IS 2
BP 173
EP 200
DI 10.1002/spe.502
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 644PX
UT WOS:000180928300004
DA 2024-07-18
ER

PT J
AU Xiang, HL
   Zhang, XY
   Bilal, M
AF Xiang, Haolong
   Zhang, Xuyun
   Bilal, Muhammad
TI A cloud-edge service offloading method for the metaverse in smart
   manufacturing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE cloud-edge computing; metaverse; minority game; reinforcement learning;
   service offloading
ID MINORITY GAME; PLACEMENT; ARCHITECTURE
AB With the development of artificial intelligence, cloud-edge computing and virtual reality, the industrial design that originally depends on human imagination and computing power can be transitioned to metaverse applications in smart manufacturing, which offloads the services of metaverse to cloud and edge platforms for enhancing quality of service (QoS), considering inadequate computing power of terminal devices like industrial sensors and access points (APs). However, large overhead and privacy exposure occur during data transmission to cloud, while edge computing devices (ECDs) are at risk of overloading with redundant service requests and difficult central control. To address these challenges, this paper proposes a minority game (MG) based cloud-edge service offloading method named COM for metaverse manufacturing. Technically, MG possesses a distribution mechanism that can minimize reliance on centralized control, and gains its effectiveness in resource allocation. Besides, a dynamic control of cut-off value is supplemented on the basis of MG for better adaptability to network variations. Then, agents in COM (i.e., APs) leverage reinforcement learning (RL) to work on MG history, offloading decision, QoS mapping to state, action and reward, for further optimizing distributed offloading decision-making. Finally, COM is evaluated using a variety of real-world datasets of manufacturing. The results indicate that COM has 5.38% higher QoS and 8.58% higher privacy level comparing to benchmark method.
C1 [Xiang, Haolong; Zhang, Xuyun] Macquarie Univ, Scool Comp, Sydney, NSW 2122, Australia.
   [Bilal, Muhammad] Hankuk Univ Foreign Studies, Dept Comp & Elect Syst Engn, Yongin, South Korea.
C3 Macquarie University; Hankuk University Foreign Studies
RP Zhang, XY (corresponding author), Macquarie Univ, Scool Comp, Sydney, NSW 2122, Australia.
EM xuyun.zhang@mq.edu.au
RI zhang, xu/GYE-3558-2022; Bilal, Muhammad/F-5225-2019; ZHANG,
   XUCHEN/KBB-7989-2024; Xiang, Haolong/KMX-9063-2024
OI Bilal, Muhammad/0000-0003-4221-0877; Zhang, Xuyun/0000-0001-7353-4159
FU ARC DECRA Fund of the Australian Government;  [DE210101458]
FX This research is supported by the ARC DECRA Fund of the Australian
   Government under grant no. DE210101458.
CR Cao YJ, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P1669, DOI 10.1145/3397271.3401196
   Challet D, 1998, PHYSICA A, V256, P514, DOI 10.1016/S0378-4371(98)00260-X
   Chen JS, 2019, P IEEE, V107, P1655, DOI 10.1109/JPROC.2019.2921977
   Dinh TQ, 2018, IEEE T COMMUN, V66, P6353, DOI 10.1109/TCOMM.2018.2866572
   Gupta M, 2022, IEEE T SERV COMPUT, V15, P1912, DOI 10.1109/TSC.2020.3025993
   He Q., 2023, EDIndex: enabling fast data queries in edge storage systems. Proceedings of the 46th International ACM SIGIR Conference on Research and Development in Information Retrieval
   He Q, 2020, IEEE T PARALL DISTR, V31, P515, DOI 10.1109/TPDS.2019.2938944
   He XF, 2020, IEEE T WIREL COMMUN, V19, P1814, DOI 10.1109/TWC.2019.2958091
   Huang HT, 2017, IEEE T COMPUT AID D, V36, P573, DOI 10.1109/TCAD.2016.2571847
   Li K, IEEE Trans. Sustain. Comput.
   Liu WT, 2023, IEEE INTERNET THINGS, V10, P7343, DOI 10.1109/JIOT.2022.3229122
   Lv WK, 2022, IEEE T PARALL DISTR, V33, P2968, DOI 10.1109/TPDS.2022.3150311
   Mahenge MPJ, 2022, DIGIT COMMUN NETW, V8, P1048, DOI 10.1016/j.dcan.2022.04.001
   Mourtzis D, 2022, J MANUF SYST, V65, P653, DOI 10.1016/j.jmsy.2022.11.004
   Nain G, 2022, J MANUF SYST, V62, P588, DOI 10.1016/j.jmsy.2022.01.010
   Osia SA, 2020, IEEE INTERNET THINGS, V7, P4505, DOI 10.1109/JIOT.2020.2967734
   Qi LY, 2023, IEEE T KNOWL DATA EN, V35, P5444, DOI 10.1109/TKDE.2022.3168611
   Qian YF, 2018, IEEE INTERNET THINGS, V5, P1242, DOI 10.1109/JIOT.2018.2800035
   Rahimi H, 2021, IEEE T COMPUT, V70, P1213, DOI 10.1109/TC.2021.3066579
   Ranadheera S, 2018, IEEE WIREL COMMUN LE, V7, P688, DOI 10.1109/LWC.2018.2810292
   Reents G, 2001, PHYSICA A, V299, P253, DOI 10.1016/S0378-4371(01)00303-X
   Rehm S.-V., 2015, Journal For Virtual Worlds Research, V8
   Ren JK, 2019, IEEE T VEH TECHNOL, V68, P5031, DOI 10.1109/TVT.2019.2904244
   Ren Q, 2022, DIGIT COMMUN NETW, V8, P825, DOI 10.1016/j.dcan.2021.09.012
   Roman R, 2018, FUTURE GENER COMP SY, V78, P680, DOI 10.1016/j.future.2016.11.009
   Shen B., 2020, Dynamic task offloading with minority game for internet of vehicles in cloud-edge computing. Paper presented at: IEEE International Conference on Web Services (ICWS) IEEE
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Sun YX, 2019, IEEE T VEH TECHNOL, V68, P3061, DOI 10.1109/TVT.2019.2895593
   Wang MZ, 2022, DIGIT COMMUN NETW, V8, P955, DOI 10.1016/j.dcan.2022.08.005
   Wang SG, 2019, J PARALLEL DISTR COM, V127, P160, DOI 10.1016/j.jpdc.2018.06.008
   Wang SY, 2023, Arxiv, DOI arXiv:2304.07920
   Wang T, 2020, IEEE T IND INFORM, V16, P6663, DOI 10.1109/TII.2019.2962844
   Wang YM, 2021, IEEE T IND INFORM, V17, P5898, DOI 10.1109/TII.2020.3036406
   Wang YJ, 2020, IEEE T WIREL COMMUN, V19, P4220, DOI 10.1109/TWC.2020.2981328
   Wu XT, 2022, NEUROCOMPUTING, V485, P181, DOI 10.1016/j.neucom.2021.01.145
   Xu XL, 2022, IEEE T FUZZY SYST, V30, P4593, DOI 10.1109/TFUZZ.2022.3158000
   Xu XL, 2021, IEEE T IND INFORM, V17, P2910, DOI 10.1109/TII.2020.2987994
   Yang YH, 2022, DIGIT COMMUN NETW, V8, P498, DOI 10.1016/j.dcan.2021.11.004
   Yao X., 2022, Journal of Intelligent Manufacturing, P1
   Zhan YF, 2020, IEEE T COMPUT, V69, P883, DOI 10.1109/TC.2020.2969148
   Zhang M., 2020, Fog Comput: Theory Pract, p1:67
   Zhang SA, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3285029
   Zhang SP, 2019, NONLINEAR DYNAM, V95, P1627, DOI 10.1007/s11071-018-4649-4
   Zhang XY, 2022, MOBILE NETW APPL, V27, P2292, DOI 10.1007/s11036-022-01911-z
   Zhao LC, 2020, IEEE T INF FOREN SEC, V15, P1486, DOI 10.1109/TIFS.2019.2939713
   Zhou ZY, 2019, IEEE T VEH TECHNOL, V68, P8322, DOI 10.1109/TVT.2019.2926732
NR 46
TC 2
Z9 2
U1 11
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 DEC 9
PY 2023
DI 10.1002/spe.3301
EA DEC 2023
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF4K8
UT WOS:001117035800001
DA 2024-07-18
ER

PT J
AU Batista, C
   Morais, F
   Cavalcante, E
   Batista, T
   Proenca, B
   Cavalcante, WBR
AF Batista, Cesar
   Morais, Felipe
   Cavalcante, Everton
   Batista, Thais
   Proenca, Bruno
   Cavalcante, William Breno Rodrigues
TI Managing asynchronous workloads in a multi-tenant microservice
   enterprise environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE asynchronous workloads; microservices; multi-tenancy
ID CLOUD; MANAGEMENT; TAXONOMY
AB A multi-tenant microservice architecture involving components with asynchronous interactions and batch jobs requires efficient strategies for managing asynchronous workloads. This article addresses this issue in the context of a leading company developing tax software solutions for many national and multi-national corporations in Brazil. A critical process provided by the company's cloud-based solutions encompasses tax integration, which includes coordinating complex tax calculation tasks and needs to be supported by asynchronous operations using a message broker to guarantee order correctness. We explored and implemented two approaches for managing asynchronous workloads related to tax integration within a multi-tenant microservice architecture in the company's context: (i) a polling-based approach that employs a queue as a distributed lock (DL) and (ii) a push-based approach named single active consumer (SAC) that relies on the message broker's logic to deliver messages. These approaches aim to achieve efficient resource allocation when dealing with a growing number of container replicas and tenants. In this article, we evaluate the correctness and performance of the DL and SAC approaches to shed light on how asynchronous workloads impact the management of multi-tenant microservice architectures from delivery and deployment perspectives.
C1 [Batista, Cesar; Proenca, Bruno; Cavalcante, William Breno Rodrigues] Synchro Informat Syst, Joao Pessoa, Brazil.
   [Morais, Felipe; Cavalcante, Everton; Batista, Thais] Univ Fed Rio Grande do Norte, Natal, Brazil.
   [Cavalcante, William Breno Rodrigues] Univ Fed Paraiba, Joao Pessoa, Brazil.
   [Cavalcante, Everton] Univ Fed Rio Grande do Norte, Inst Metropole Digital, Campus Univ Lagoa Nova, BR-59078900 Natal, RN, Brazil.
C3 Universidade Federal do Rio Grande do Norte; Universidade Federal da
   Paraiba; Universidade Federal do Rio Grande do Norte
RP Cavalcante, E (corresponding author), Univ Fed Rio Grande do Norte, Inst Metropole Digital, Campus Univ Lagoa Nova, BR-59078900 Natal, RN, Brazil.
EM everton.cavalcante@ufrn.br
RI Cavalcante, Everton/J-6229-2013
OI Cavalcante, Everton/0000-0002-2475-5075
FU This work is supported by Synchro Information Systems, Brazil.; Synchro
   Information Systems, Brazil
FX This work is supported by Synchro Information Systems, Brazil.
CR Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Basili VR., 2002, ENCY SOFTWARE ENG
   Batista C, 2022, 2022 IEEE 46TH ANNUAL COMPUTERS, SOFTWARE, AND APPLICATIONS CONFERENCE (COMPSAC 2022), P553, DOI 10.1109/COMPSAC54236.2022.00100
   Bezemer CP, 2010, PROC IEEE INT CONF S
   Bittencourt LF, 2012, IEEE COMMUN MAG, V50, P42, DOI 10.1109/MCOM.2012.6295710
   Burns B., 2018, DESIGNING DISTRIBUTE
   CASAVANT TL, 1988, IEEE T SOFTWARE ENG, V14, P141, DOI 10.1109/32.4634
   CHANDY KM, 1985, ACM T COMPUT SYST, V3, P63, DOI 10.1145/214451.214456
   Coulouris G., 2012, Distributed Systems: Concepts and Design
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Elnozahy EN, 2002, ACM COMPUT SURV, V34, P375, DOI 10.1145/568522.568525
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   HUBBARD RG, 1993, J ECON PERSPECT, V7, P115, DOI 10.1257/jep.7.1.115
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Hussain H, 2013, PARALLEL COMPUT, V39, P709, DOI 10.1016/j.parco.2013.09.009
   Ibryam Bilgin, 2019, Kubernetes Patterns
   Javadi SA, 2019, PROCEEDINGS OF THE 2019 TENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '19), P272, DOI 10.1145/3357223.3362734
   Jiang CF, 2019, IEEE ACCESS, V7, P22495, DOI 10.1109/ACCESS.2019.2897898
   Kabbedijk J, 2015, J SYST SOFTWARE, V100, P139, DOI 10.1016/j.jss.2014.10.034
   Kelley K, 2012, PSYCHOL METHODS, V17, P137, DOI 10.1037/a0028086
   Kiss T, 2019, FUTURE GENER COMP SY, V101, P99, DOI 10.1016/j.future.2019.05.062
   Kiss T, 2019, FUTURE GENER COMP SY, V94, P937, DOI 10.1016/j.future.2017.09.050
   Kleppmann M., 2017, Designing data-intensive applications: The big ideas behind reliable, scalable, and maintainable systems
   Koo R., 1986, 1986 Proceedings of the Fall Joint Computer Conference (Cat. No.86CH2345-7), P1150
   Kumara I, 2019, SOFTWARE PRACT EXPER, V49, P813, DOI 10.1002/spe.2686
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Lewis J., MICROSERVICES DEFINI
   Li GH, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11030923
   Mansouri N, 2020, DISTRIB PARALLEL DAT, V38, P365, DOI 10.1007/s10619-019-07273-y
   Ongaro D., Search Understandable Consensus Algorithm
   Richardson C., 2019, Microservices Patterns
   Rodero-Merino L, 2010, FUTURE GENER COMP SY, V26, P1226, DOI 10.1016/j.future.2010.02.013
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   The Linux Foundation, KUB
   The Linux Foundation, 2023, CIG LIV READ START P
   The Linux Foundation, 2022, POD LIF KUB
   Torchiano M., EFFSIZE EFFICIENT EF
   Tu HQ, 2022, IEEE T PARALL DISTR, V33, P4654, DOI 10.1109/TPDS.2022.3199031
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Videla A., 2014, DISTRIBUTED SEMAPHOR
   Vinoski S, 2006, IEEE INTERNET COMPUT, V10, P87, DOI 10.1109/MIC.2006.116
   VMware Inc, DEAD LETT EXCHANGES
   VMware Inc, 2022, QUOR QUEUES RABBITMQ
   VMware Inc, ABOUT US
   VMware Inc, SPRING BOOT
   VMware Inc, 2022, SINGL ACT CONS
   Yeo CS, 2006, SOFTWARE PRACT EXPER, V36, P1381, DOI 10.1002/spe.725
NR 50
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2024
VL 54
IS 2
BP 334
EP 359
DI 10.1002/spe.3278
EA OCT 2023
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL7E2
UT WOS:001086050200001
OA Bronze
DA 2024-07-18
ER

PT J
AU Muhammad, AA
   Soliman, A
   Zayed, H
   Yousef, AH
   Selim, S
AF Muhammad, Ahmad Ahmad
   Soliman, Abdelrahman
   Zayed, Hala
   Yousef, Ahmed H.
   Selim, Sahar
TI Automated library mapping approach based on cross-platform for mobile
   development programming languages
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automation; cross-platform; library mapping; mobile application
   development
AB Context: The most popular mobile platforms, Android and iOS, are traditionally developed using native programming languages-Java and Kotlin for Android, and Objective-C followed by Swift for iOS, respectively. Due to their popularity, there is always a demand to convert applications written for one of these two platforms to another. Cross-platform mobile development is widely used as a solution where an application is written once and deployed on multiple platforms written in several other programming languages. One common cross-platform approach that has been used recently by some research groups is the Trans-Compilation approach. They focus on translating a program written in iOS into Android or vice versa. The main problem with their solutions is that library function mapping is not generalized and usually functions constitute most of the parts of any program.
   Objective: This study aims to introduce an automatic library mapping approach for mobile programming languages.
   Method: A library function of a source language will be automatically mapped to a corresponding function of the destination language by using the function structure for the two languages. The function structure includes the library to which the function belongs, the return type, parameter types, and the number of parameters. To test our approach, we map from Swift to Java.
   Results: The results of our experiments show that our automatic library mapping approach achieves an average accuracy of 83.6% when tested on the most used libraries and outperforms current state-of-the-art mapping techniques in terms of mapping accuracy.
   Conclusion: These findings show that our automatic mapping approach is promising and can help to overcome the limitations of the trans-compilation approaches.
C1 [Muhammad, Ahmad Ahmad; Soliman, Abdelrahman; Zayed, Hala; Yousef, Ahmed H.; Selim, Sahar] Nile Univ, Sch Informat Technol & Comp Sci, Giza, Egypt.
   [Muhammad, Ahmad Ahmad; Yousef, Ahmed H.; Selim, Sahar] Nile Univ, Ctr Informat Sci, Giza, Egypt.
   [Zayed, Hala] Egyptian Univ Informat, Sch Engn, Cairo, Egypt.
   [Yousef, Ahmed H.] Ain Shams Univ, Fac Engn, Cairo, Egypt.
C3 Egyptian Knowledge Bank (EKB); Nile University; Egyptian Knowledge Bank
   (EKB); Nile University; Egyptian Knowledge Bank (EKB); Ain Shams
   University
RP Muhammad, AA (corresponding author), Nile Univ, Sch Informat Technol & Comp Sci, Giza, Egypt.
EM ah.mohammed@nu.edu.eg
OI zayed, hala/0000-0001-6779-7577; Ahmad Muhammad,
   Ahmad/0000-0002-2245-8878
CR An KJ, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P180, DOI 10.1145/3197231.3197240
   [Anonymous], 2020, GITHUB BAIYYANG BLEU
   [Anonymous], 2021, LEVENSHTEIN DISTANCE
   [Anonymous], 2021, JAVA PROGRAM IMPLEME
   [Anonymous], 2010, P 32 ACMIEEE INT C S, DOI DOI 10.1145/1806799.1806831
   Barakat Rameez, 2023, Model and Data Engineering: 11th International Conference, MEDI 2022, Proceedings. Lecture Notes in Computer Science (13761), P162, DOI 10.1007/978-3-031-21595-7_12
   Bui NDQ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P796, DOI 10.1145/3338906.3338924
   Bui NDQ, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P33, DOI 10.1145/3183399.3183427
   Byalik A, 2016, ACM SIGPLAN NOTICES, V51, P99, DOI [10.1145/2814204.2814210, 10.1145/2936314.2814210]
   Chadha S, 2017, COMPUT LANG SYST STR, V48, P3, DOI 10.1016/j.cl.2016.08.005
   Chen S, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR MOBILE (AI4MOBILE '19), P13, DOI [10.1109/AI4Mobile.2019.8672718, 10.1109/ai4mobile.2019.8672718]
   El-kaliouby SS., 2022, APPROACHES SURVEY, V2, DOI [10.1007/978-3-031-23119-3, DOI 10.1007/978]
   El-Kaliouby SS., 2021, P 2021 16 INT C COMP, DOI [10.1109/ICCES54031.2021.9686093, DOI 10.1109/ICCES54031.2021.9686093]
   El-Ramly M, 2006, I C COMP SYST APPLIC, P1036
   Eunike E., 2023, J BUS TECHNOL, V3, P14, DOI [10.24167/jbt.v3i1.5263, DOI 10.24167/JBT.V3I1.5263]
   Global mobile OS Market Share, 2022, STAT
   Gu XD, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3675
   Hamza RB., 2019, 2019 NOVEL INTELLIGE, V2019, P230, DOI [10.1109/NILES.2019.8909207, DOI 10.1109/NILES.2019.8909207]
   Ilyas M., FEATURE BASED COMP L
   Ji R., 2019, EXTRACTING MAPPING R
   Mahmoud AT, 2023, INT J ADV COMPUT SC, V14, P275
   Muhammad Ahmad A., 2020, 2020 2nd Novel Intelligent and Leading Emerging Sciences Conference (NILES), P247, DOI 10.1109/NILES50944.2020.9257928
   Muhammad AA., 2021 INT MOB INT UB, P62, DOI [10.1109/MIUCC52538.2021.9447641, DOI 10.1109/MIUCC52538.2021.9447641]
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   Pandita R, 2015, IEEE INT WORK C SO, P231, DOI 10.1109/SCAM.2015.7335419
   Rieger C, 2019, J SYST SOFTWARE, V153, P175, DOI 10.1016/j.jss.2019.04.001
   Salama DI, 2020, ADV INTELL SYST, V1058, P842, DOI 10.1007/978-3-030-31129-2_77
   Terence P., 2013, DEFINITIVE ANTLR 4 R
   US Smartphone Market Share, 2023, OB
   Zhang ZJ, 2020, INT C PROGRAM COMPRE, P106, DOI 10.1145/3387904.3389282
NR 30
TC 0
Z9 0
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2024
VL 54
IS 5
BP 683
EP 703
DI 10.1002/spe.3281
EA OCT 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NB0V3
UT WOS:001086484400001
OA Bronze
DA 2024-07-18
ER

PT J
AU Wiesner, P
   Steinke, M
   Nickel, H
   Kitana, Y
   Kao, O
AF Wiesner, Philipp
   Steinke, Marvin
   Nickel, Henrik
   Kitana, Yazan
   Kao, Odej
TI Software-in-the-loop simulation for developing and testing carbon-aware
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE co-simulation; energy-awareness; software-in-the-loop; sustainable
   computing; virtual energy system
AB The growing electricity demand of IT infrastructure has raised significant concerns about its carbon footprint. To mitigate the associated emissions of computing systems, current efforts therefore increasingly focus on aligning the power usage of software with the availability of clean energy. To operate, such carbon-aware applications require visibility and control over relevant metrics and configurations of the energy system. However, research and development of novel energy system abstraction layers and interfaces remain difficult due to the scarcity of available testing environments: Real testbeds are expensive to build and maintain, while existing simulation testbeds are unable to interact with real computing systems. To provide a widely applicable approach for developing and testing carbon-aware software, we propose a method for integrating real applications into a simulated energy system through software-in-the-loop simulation. The integration offers an API for accessing the energy system, while continuously modeling the computing system's power demand within the simulation. Our system allows for the integration of physical as well as virtual compute nodes, and can help accelerate research on carbon-aware computing systems in the future.
C1 [Wiesner, Philipp; Steinke, Marvin; Nickel, Henrik; Kitana, Yazan; Kao, Odej] Tech Univ Berlin, Distributed & Operating Syst, Berlin, Germany.
C3 Technical University of Berlin
RP Wiesner, P (corresponding author), Tech Univ Berlin, Distributed & Operating Syst, Berlin, Germany.
EM wiesner@tu-berlin.de
RI Wiesner, Philipp/KMY-1174-2024
OI Wiesner, Philipp/0000-0001-5352-7525; Kao, Odej/0000-0001-6454-6799
FU We sincerely thank Maximilian Hipp for his insights into energy systems.
   Moreover, we would like to thank Ilja Behnke and the anonymous reviewers
   for many helpful comments on this work. Open Access funding enabled and
   organized by Projekt DEAL.
FX We sincerely thank Maximilian Hipp for his insights into energy systems.
   Moreover, we would like to thank Ilja Behnke and the anonymous reviewers
   for many helpful comments on this work. Open Access funding enabled and
   organized by Projekt DEAL.
CR Amazon Web Services, 2023, GUID CARB ACC AWS
   Anderson Thomas, 2022, WORKSH SUST COMP SYS
   [Anonymous], 2023, UPT I GLOB DAT CTR S
   [Anonymous], 2023, UV WEB SERV
   [Anonymous], 2023, ABOUT US
   [Anonymous], 2023, SYSB
   [Anonymous], 2023, FASTAPI
   [Anonymous], 2023, TYPH HIL
   [Anonymous], 2023, TESL POW MOD
   [Anonymous], 2023, Redis
   Barroso LA, 2007, COMPUTER, V40, P33, DOI 10.1109/MC.2007.443
   Bashir N., 2021, ACM S CLOUD COMP SOC
   Behnke I., 2019, 12 IEEE ACM INT C UT
   Beilharz J., 2021, INT C SERV OR COMP I
   Beilharz J., 2021, IEEE INT C PERV COMP
   Brown T, 2018, Journal of Open Research Software, V6, DOI DOI 10.5334/JORS.188
   Casanova H, 2014, J PARALLEL DISTR COM, V74, P2899, DOI 10.1016/j.jpdc.2014.06.008
   Cintuglu MH, 2017, IEEE COMMUN SURV TUT, V19, P446, DOI 10.1109/COMST.2016.2627399
   Colmant M., 2017, IEEE ACM INT S CLUST
   Colmant M., 2015, EUR C COMP SYST EURO
   Davis J., 2022, GLOBAL DATA CTR SURV
   Enes J., 2020, IEEE INT C CLUST COM
   Fieni G., 2020, IEEE ACM INT S CLUST
   Gomes C, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3179993
   Google, 2023, CARB FOOTPR REP METH
   Hagenmeyer V, 2016, ENERGY TECHNOL-GER, V4, P145, DOI 10.1002/ente.201500304
   Hasenburg J, 2023, IEEE T CLOUD COMPUT, V11, P58, DOI 10.1109/TCC.2021.3074988
   IEA, 2022, Data Centres and Data Transmission Networks
   Jay M., 2023, IEEE ACM INT S CLUST
   Jones N, 2018, NATURE, V562, pS5, DOI 10.1038/d41586-018-06831-1
   Kliazovich D, 2010, GLOB TELECOMM CONF
   Li S., 2020, USENIX OSDI
   Ligozat AL., 2021, 2 WORKSH SIMPL EFF N
   Masanet E, 2020, SCIENCE, V367, P984, DOI 10.1126/science.aba3758
   Microsoft Azure, 2023, MICR CLOUD SUST API
   Morrissett A., 2019, INT C HUM SYST INT H
   National Renewable Energy Laboratory (NREL), 2023, GRID SIM POW HARDW I
   Radovanovic A, 2023, IEEE T POWER SYST, V38, P1270, DOI 10.1109/TPWRS.2022.3173250
   Schünemann B, 2011, COMPUT NETW, V55, P3189, DOI 10.1016/j.comnet.2011.05.005
   Silva Filho Manoel C., 2017, 2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), P400, DOI 10.23919/INM.2017.7987304
   Souza A., 2023, INT C ARCH SUPP PROG
   Standard Performance Evaluation Corporation, 2023, SPECPOWER BENCHM
   Steinbrink C, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9050923
   Sulzer V., 2021, J. Open Res. Softw., V9, P1, DOI [10.5334/jors.309, DOI 10.5334/JORS.309]
   Symeonides M., 2020, IEEE ACM S EDG COMP
   Teads Engineering, 2023, CARB FOOTPR EST AWS
   Ledesma JV, 2021, WATER-SUI, V13, DOI 10.3390/w13131875
   Vogt M, 2018, APPL ENERG, V222, P67, DOI 10.1016/j.apenergy.2018.03.123
   Wiesner P., 2021, ACM IFIP INT MIDDL C
   Wiesner P., 2021, IEEE INT C FOG EDG C
   Wiesner P., 2023, ARXIV
   Yuventi J, 2013, ENERG BUILDINGS, V64, P90, DOI 10.1016/j.enbuild.2013.04.015
   Zimmerman RD, 2011, IEEE T POWER SYST, V26, P12, DOI 10.1109/TPWRS.2010.2051168
NR 53
TC 2
Z9 2
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2023
VL 53
IS 12
SI SI
BP 2362
EP 2376
DI 10.1002/spe.3275
EA SEP 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X8MK4
UT WOS:001070210500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Pfandzelter, T
   Japke, N
   Schirmer, T
   Hasenburg, J
   Bermbach, D
AF Pfandzelter, Tobias
   Japke, Nils
   Schirmer, Trever
   Hasenburg, Jonathan
   Bermbach, David
TI Managing data replication and distribution in the fog with FReD
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE data distribution; data replication; fog computing; internet of things
ID INTERNET
AB The heterogeneous, geographically distributed infrastructure of fog computing poses challenges in data replication, data distribution, and data mobility for fog applications. Fog computing is still missing the necessary abstractions to manage application data, and fog application developers need to re-implement data management for every new piece of software. Proposed solutions are limited to certain application domains, such as the IoT, are not flexible in regard to network topology, or do not provide the means for applications to control the movement of their data. In this paper, we present FReD, a data replication middleware for the fog. FReD serves as a building block for configurable fog data distribution and enables low-latency, high-bandwidth, and privacy-sensitive applications. FReD is a common data access interface across heterogeneous infrastructure and network topologies, provides transparent and controllable data distribution, and can be integrated with applications from different domains. To evaluate our approach, we present a prototype implementation of FReD and show the benefits of developing with FReD using three case studies of fog computing applications.
C1 [Pfandzelter, Tobias] Tech Univ Berlin, Mobile Cloud Comp Grp, Berlin, Germany.
   [Pfandzelter, Tobias] Einstein Ctr Digital Future, Berlin, Germany.
C3 Technical University of Berlin
RP Pfandzelter, T (corresponding author), Tech Univ Berlin, Mobile Cloud Comp Grp, Berlin, Germany.; Pfandzelter, T (corresponding author), Einstein Ctr Digital Future, Berlin, Germany.
EM tp@mcc.tu-berlin.de
RI Pfandzelter, Tobias/AAZ-7485-2021
OI Pfandzelter, Tobias/0000-0002-7868-8613; Schirmer,
   Trever/0000-0001-9277-3032; Japke, Nils/0000-0002-2412-4513; Bermbach,
   David/0000-0002-7524-3256; Hasenburg, Jonathan/0000-0001-8549-0405
CR Abadi DJ, 2012, COMPUTER, V45, P37, DOI 10.1109/MC.2012.33
   Alrawais A, 2017, IEEE INTERNET COMPUT, V21, P34, DOI 10.1109/MIC.2017.37
   [Anonymous], 2012, In FAST
   [Anonymous], 2015, P USENIX HOTSTORAGE, DOI DOI 10.5555/2827719.2827740
   [Anonymous], 2001, P 8 WORKSH HOT TOP O
   [Anonymous], 2018, P 2018 USENIX ANN TE
   Antony I., 2001, LECT NOTES COMPUTER, P329, DOI DOI 10.1007/3-540-45518-3_18
   Armbrust, 2009, UCBEECS200928, V53, P50
   Bellmann M, 2021, COMPANION PROCEEDINGS OF THE 14TH IEEE/ACM INTERNATIONAL CONFERENCE ON UTILITY AND CLOUD COMPUTING (UCC'21 COMPANION), DOI 10.1145/3492323.3495595
   Bermbach D., 2013, P 1 INT C CLOUD ENG
   Bermbach D., 2021, P 8 WORKSH MIDDL APP
   Bermbach D., 2017, P 2 WORKSH IOT SYST
   Bermbach D., 2011, P IEEE INT C CLOUD C
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Confais B., 2020, FOG STORAGE SOFTWARE
   Confais B, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P41, DOI 10.1109/ICFEC.2017.13
   Confais B, 2016, INT CONF CLOUD COMP, P294, DOI 10.1109/CloudCom.2016.0055
   Dastjerdi AV, 2016, COMPUTER, V49, P112, DOI 10.1109/MC.2016.245
   DeCandia Giuseppe, 2007, Operating Systems Review, V41, P205, DOI 10.1145/1323293.1294281
   Gadepalli PK., 2019, CHALLENGES OPPORTUNI
   George G., 2020, P 2020 IEEE ACM S ED
   Ghemawat S., 2003, Operating Systems Review, V37, P29, DOI 10.1145/1165389.945450
   Grambow M., 2018, P 5 WORKSH MIDDL APP
   Gupta H., 2018, P 12 ACM INT C DISTR
   Hampe M, 2020, EMC EUR, DOI 10.1109/emceurope48519.2020.9245722
   Hasenburg J., 2019, P 4 WORKSH IOT SYST
   Hasenburg J., 2020, P 2 IEEE INT C FOG C
   Hasenburg J, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P267, DOI 10.1145/3341105.3374060
   Jeffery A, 2021, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON EDGE SYSTEMS, ANALYTICS AND NETWORKING (EDGESYS'21), P7, DOI 10.1145/3434770.3459730
   Kubiatowicz J, 2000, ACM SIGPLAN NOTICES, V35, P190, DOI 10.1145/384264.379239
   Kurze T, 2011, CLOUD COMPUTING 2011: THE SECOND INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, GRIDS, AND VIRTUALIZATION, P32
   Lakshman Avinash, 2010, Operating Systems Review, V44, P35, DOI 10.1145/1773912.1773922
   Lin Y., 2007, P 26 IEEE INT S REL
   Maccormick John, 2009, ACM Transaction on Storage, V4, DOI 10.1145/1480439.1480440
   Mayer R., 2017, P 2017 IEEE FOG WORL, P1
   Maymounkov P., 2002, P INT WORKSH PEER TO
   Mohan Nitinder, 2020, P 19 ACM WORKSH HOT
   Mor N, 2016, IEEE INTERNET COMPUT, V20, P54, DOI 10.1109/MIC.2016.51
   Mortazavi S, 2017, IEEE INT SYMP ELEC
   Mortazavi SH, 2020, 4TH IEEE INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC 2020), P59, DOI 10.1109/ICFEC50348.2020.00014
   Naas MI., 2019, P 5 WORKSH PERF SCAL
   Naas MI, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P97, DOI 10.1109/ICFEC.2017.15
   Pallas F, 2020, IEEE INTERNET COMPUT, V24, P15, DOI 10.1109/MIC.2020.2979161
   Pfandzelter T., 2019, P 1 WORKSH EFF DAT M
   Pfandzelter T., 2021, P 9 IEEE INT C CLOUD
   Pfandzelter T., 2020, P 2 IEEE INT C FOG C
   Pfandzelter T., 2021, P 21 IEEE ACM INT S
   Pfandzelter T, 2022, 2022 22ND IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2022), P760, DOI 10.1109/CCGrid54584.2022.00087
   Pfandzelter T, 2021, SOFTWARE PRACT EXPER, V51, P1798, DOI 10.1002/spe.3003
   Plebani P., 2017, P CAISE FOR 2017 ESS
   Psaras I., 2018, P USENIX WORKSH HOT, P1
   Rao FY, 2019, P IEEE, V107, P1632, DOI 10.1109/JPROC.2019.2918749
   Rausch T., 2020, 3 USENIX WORKSH HOT
   Ryden M., 2014, P 2014 IEEE INT C CL
   Samizadeh Nikoui T., 2019, Data Management in Fog Computing: Principles and Paradigms
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Shi WS, 2016, COMPUTER, V49, P78, DOI 10.1109/MC.2016.145
   Shneidman J., 2004, HOURGLASS INFRASTRUC
   Shvachko K, 2010, IEEE S MASS STOR SYS
   Stoica I, 2001, ACM SIGCOMM COMP COM, V31, P149, DOI 10.1145/964723.383071
   Trivedi A., 2020, 3 USENIX WORKSHOP HO
   Van Steen M., 2017, Distributed systems
   Vogels W, 2009, COMMUN ACM, V52, P40, DOI 10.1145/1435417.1435432
   Weil S.A., 2006, P 2006 ACM IEEE C SU
   Weil SA, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P307
NR 65
TC 4
Z9 4
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 JUL 11
PY 2023
DI 10.1002/spe.3237
EA JUL 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L4RQ7
UT WOS:001023158700001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, Y
   Lin, LJ
   Jiang, L
   Zhang, WZ
   Wang, X
   Gheisari, M
   Gong, T
   Gao, C
   Najafabadi, HE
AF Liu, Yang
   Lin, Liangjie
   Jiang, Lin
   Zhang, Weizhe
   Wang, Xuan
   Gheisari, Mehdi
   Gong, Tao
   Gao, Chao
   Najafabadi, Hamid Esmaeili
TI A blockchain-based privacy-preserving advertising attribution
   architecture: Requirements, design, and a prototype implementation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE advertising attribution; blockchain; data forgery; data leakage;
   privacy-preserving; trust
AB In the era of digital marketing, advertisements have become an indispensable part. One of the central challenges is advertising attribution which explains the amount of contribution every publisher has with the conversions. However, through observation, we have found that current advertising platforms attribution, advertisers attribution, or third-party platforms attribution all have the problems of trust, data leakage, and data forgery. To fill the gap, our work's main contribution is combining blockchain with advertising attribution to propose an architecture for improving the privacy-preserving degree and amount. In the proposed architecture, publishers, and advertisers can store real-time data on a blockchain. The attribution results are credible because blockchain is decentralized, tamper-proof, and traceable. We combine privacy set intersection and zero-knowledge proof technology to increase the privacy of flowing data. In addition, we describe a preliminary prototype in which publishers, advertisers, and advertising platforms can get the corresponding attribution details. To show its effectiveness, we analyze it from different perspectives, including communication cost, attribution accuracy, and time cost. The results show that our communication cost has significantly reduced compared to the recent studies.
C1 [Liu, Yang; Lin, Liangjie; Jiang, Lin; Zhang, Weizhe; Wang, Xuan; Gheisari, Mehdi] Harbin Inst Technol Shenzhen, Sch Comp Sci & Technol, Shenzhen, Peoples R China.
   [Liu, Yang; Zhang, Weizhe] Peng Cheng Lab, Shenzhen, Peoples R China.
   [Lin, Liangjie] Univ Calgary, Dept Elect & Software Engn, Calgary, AB, Canada.
   [Gong, Tao; Gao, Chao] Guangdong Prov Key Lab Novel Secur Intelligence Te, Shenzhen, Peoples R China.
   [Najafabadi, Hamid Esmaeili] Tencent Holdings Ltd, Advertising Data Dept, Beijing, Peoples R China.
   [Lin, Liangjie; Jiang, Lin] Harbin Inst Technol Shenzhen, Sch Comp Sci & Technol, Shenzhen 518055, Peoples R China.
C3 Harbin Institute of Technology; Peng Cheng Laboratory; University of
   Calgary; Tencent; Harbin Institute of Technology
RP Lin, LJ; Jiang, L (corresponding author), Harbin Inst Technol Shenzhen, Sch Comp Sci & Technol, Shenzhen 518055, Peoples R China.
EM sherlockllj@163.com; zoeljiang@hit.edu.cn
RI Esmaeili Najafabadi, hamid/AAZ-4165-2020; Liu, Yang/D-2306-2013
OI Esmaeili Najafabadi, hamid/0000-0003-1653-9900; Liu,
   Yang/0000-0001-7300-9215; Liu, Yang/0000-0003-2486-5765
FU National Key Research and Development Program of China [2020YFB1005805];
   CCF-Tencent Rhino-Bird Open Research Fund [CCF-Tencent RAGR20210132];
   Peng Cheng Laboratory Project [PCL2021A02]; Guangdong Provincial Key
   Laboratory of Novel Security Intelligence Technologies
   [2022B1212010005]; Shenzhen Basic Research (General Project)
   [JCYJ20190806142601687]; Shenzhen Stable supporting Program (General
   Project) [GXWD20201230155427003-20200821160539001]
FX National Key Research and Development Program of China, Grant/Award
   Number: 2020YFB1005805; CCF-Tencent Rhino-Bird Open Research Fund,
   Grant/Award Number: CCF-TencentRAGR20210132; Peng Cheng Laboratory
   Project, Grant/Award Number: PCL2021A02; Guangdong Provincial Key
   Laboratory of Novel Security Intelligence Technologies, Grant/Award
   Number: 2022B1212010005; Shenzhen Basic Research (General Project),
   Grant/Award Number: JCYJ20190806142601687; Shenzhen Stable Supporting
   Program (General Project), Grant/Award Number:
   GXWD20201230155427003-202008211605 39001
CR Abhishek V., Media Exposure through the Funnel: A Model of MultiStage Attribution
   Abid A, 2022, SOFTWARE PRACT EXPER, V52, P841, DOI 10.1002/spe.2983
   Androulaki E., P 13 EUROSYS C
   Androulaki E, 2018, LECT NOTES COMPUT SC, V11098, P111, DOI 10.1007/978-3-319-99073-6_6
   Benet Juan, IPFS-Content Addressed, Versioned, P2P File System
   Brandenburger M, 2019, SYM REL DIST SYST, P324, DOI 10.1109/SRDS47363.2019.00045
   Camenisch J, 2004, LECT NOTES COMPUT SC, V3152, P56
   Casino F, 2020, IEEE T ENG MANAGE, V67, P1501, DOI 10.1109/TEM.2019.2944279
   Casino F, 2019, TELEMAT INFORM, V36, P55, DOI 10.1016/j.tele.2018.11.006
   Chen G, 2016, IEEE COMMUN SURV TUT, V18, P2124, DOI 10.1109/COMST.2016.2519912
   Chen H, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1223, DOI 10.1145/3243734.3243836
   Chen H, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1243, DOI 10.1145/3133956.3134061
   CHEN S, 2022, J INSTRUM, V52, P2026
   Ciampi M, 2018, LECT NOTES COMPUT SC, V11035, P464, DOI 10.1007/978-3-319-98113-0_25
   Cui HR., 2019, INF SECUR COMMUN P, V303, P50
   Dalessandro B., P 6 INT WORKSH DAT M
   Ding Y, 2021, PEER PEER NETW APPL, V14, P482, DOI 10.1007/s12083-020-00984-5
   Fang M, 2021, PROC INT CONF DATA, P1907, DOI 10.1109/ICDE51399.2021.00175
   Gleim MR, 2021, MARKET LETT, V32, P123, DOI 10.1007/s11002-021-09557-9
   GlobalPlatform, GLOBALPLATFORM TECHN
   Guan ZT, 2022, IEEE INTERNET THINGS, V9, P14287, DOI 10.1109/JIOT.2021.3061107
   Harvey CR., 3257511 SSRN
   Huang YD, 2022, IEEE T COMPUT, V71, P2102, DOI 10.1109/TC.2021.3122891
   Iafrati R., 2019, PITTSBURGH J TECHNOL, V20, P25
   Kerber T, 2019, P IEEE S SECUR PRIV, P157, DOI 10.1109/SP.2019.00063
   Kohlweiss M., P 2021 IEEE S SEC PR
   Kshetri N, 2019, COMPUTER, V52, P58, DOI 10.1109/MC.2018.2887322
   Kumar R, 2019, 2019 FIFTH INTERNATIONAL CONFERENCE ON IMAGE INFORMATION PROCESSING (ICIIP 2019), P246, DOI 10.1109/ICIIP47207.2019.8985677
   LAVIDGE RJ, 1961, J MARKETING, V25, P59, DOI 10.2307/1248516
   Liu Y, 2016, SOFTWARE PRACT EXPER, V46, P1657, DOI 10.1002/spe.2403
   Majeed U, 2019, ASIA-PAC NETW OPER M, DOI 10.23919/apnoms.2019.8892848
   Nair PR., EVALUATION PERFORMAN
   Nakamoto S., 2008, DECENT BUS REV, V21260, DOI https://bitcoin.org/bitcoin.pdf
   Noshad Z, 2021, J SENSORS, V2021, DOI 10.1155/2021/1798256
   Odoom J, 2022, SOFTWARE PRACT EXPER, V52, P2263, DOI 10.1002/spe.3126
   Pärssinen M, 2018, IEEE ACCESS, V6, P54884, DOI 10.1109/ACCESS.2018.2872694
   Passerat-Palmbach J, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2020), P550, DOI 10.1109/Blockchain50366.2020.00080
   Pepelnjak JC., 2008, CONSUMERS DATABASE A, V33, P38
   Pinkas B, 2018, ACM T PRIV SECUR, V21, DOI 10.1145/3154794
   Pinkas B, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P515
   Politou E, 2018, J CYBERSECURITY, V4, DOI 10.1093/cybsec/tyy001
   Preiss F.S., 2013, IDMAN 13, P34, DOI [DOI 10.1007/978-3-642-37282-7_4, 10.1007/978-3-642-37282-7_4]
   Qiao K, 2019, 2019 IEEE 4TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA ANALYSIS (ICCCBDA), P492, DOI [10.1109/ICCCBDA.2019.8725693, 10.1109/icccbda.2019.8725693]
   Rejeb A, 2020, FRONT BLOCKCHAIN, V3, DOI 10.3389/fbloc.2020.00003
   Sabt M., P 2015 IEEE TRUSTC B
   Shabtai A, 2012, SPRINGERBRIEF COMPUT, P1, DOI 10.1007/978-1-4614-2053-8
   Shi Y., 2021, INT S MOB INT SEC, P139
   Shrivastva KMP, 2014, 2014 6TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND COMMUNICATION NETWORKS, P776, DOI 10.1109/CICN.2014.167
   Vitalik B., PUBLIC PRIVATE BLOCK
   Wuthier S, 2021, INT CON DISTR COMP S, P1098, DOI 10.1109/ICDCS51616.2021.00110
   Xu LZ, 2014, MANAGE SCI, V60, P1392, DOI 10.1287/mnsc.2014.1952
   Yan Y, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P2227, DOI 10.1145/3318464.3386127
   Yang F, 2019, IEEE ACCESS, V7, P118541, DOI 10.1109/ACCESS.2019.2935149
   Yuvaraj C., P 2018 IEEE DISTR CO
   Zhang Y, 2014, IEEE DATA MINING, P687, DOI 10.1109/ICDM.2014.130
NR 55
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2023
VL 53
IS 8
BP 1700
EP 1721
DI 10.1002/spe.3209
EA APR 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L1MX2
UT WOS:000972127100001
DA 2024-07-18
ER

PT J
AU Amankwah, R
   Chen, JF
   Song, HP
   Kudjo, PK
AF Amankwah, Richard
   Chen, Jinfu
   Song, Heping
   Kudjo, Patrick Kwaku
TI Bug detection in Java code: An extensive evaluation of static analysis
   tools using Juliet Test Suites
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bug detection; common weakness enumeration; SAMATE; static analysis
   tools
ID CHECKING
AB Previous studies have demonstrated the usefulness of employing automated static analysis tools (ASAT) and techniques to detect security bugs in software systems. However, these studies are usually focused on analyzing the effectiveness of the tools using open-source tools based on C/C++ source code. The choice for making an appropriate decision on the most suitable tool for bug detection in Java code software remains a relatively unexplored domain. To address this deficiency, this study empirically evaluates eight widely used ASATs, namely, Findbug, PMD, YASCA, LAPSE+, JLint, Bandera, ESC/Java, and Java Pathfinder using the Juliet Test Suite (Test Suite v1.2). Additionally, we assessed the performance of the detection capabilities for the aforementioned bug detection tools using robust performance measures such as precision, recall, Youden index, and the OWASP web benchmark evaluation (WBE). The experimental results show that the tools obtain precision values ranging from 83% to 90.7% based on the studied datasets. Specifically, the Java Pathfinder achieves the best precision score of 90.7%, followed by YASCA and Bandera with a precision score of 88.7% and 83%, respectively. Similarly, Bandera, ESC/Java, and Java Pathfinder obtain a Youden index of 0.8, which indicates the effectiveness of the tools in detecting security bugs in Java source code.
C1 [Amankwah, Richard; Chen, Jinfu; Song, Heping] Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang, Peoples R China.
   [Amankwah, Richard] Presbyterian Coll Educ, Dept Math & Info Tech, Akropong Akuapem, Ghana.
   [Kudjo, Patrick Kwaku] Wisconsin Int Univ, Dept Informat Technol Studies, Accra, Ghana.
C3 Jiangsu University
RP Chen, JF (corresponding author), Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang, Peoples R China.
EM jinfuchen@ujs.edu.cn
OI Chen, Jinfu/0000-0002-3124-5452
FU National Natural Science Foundation of China [62172194, U1836116,
   62172193]; Nation-al Key R&D Program of China; National Key R&D Program
   of China [2020YFB1005500]; Jiangsu Natural Science Foundation
   [BK20202001]; Natural Science Foundation of Jiangsu Province
   [BK20220515]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   62172194, U1836116, 62172193; Nation-al Key R&D Program of China;
   National Key R&D Program of China, Grant/Award Number: 2020YFB1005500;
   Jiangsu Natural Science Foundation, Grant/Award Number: BK20202001;
   Natural Science Foundation of Jiangsu Province, Grant/Award Numbers:
   BK20220515
CR AlBreiki HH, 2014, IEEE INT CONF INNOV, P93, DOI 10.1109/INNOVATIONS.2014.6987569
   Amankwah R., 2018, INT J COMPUT APPL, V975, P8887
   Anand S, 2007, LECT NOTES COMPUT SC, V4424, P134
   [Anonymous], 2019, OWASP BENCHMARK PROJ
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617
   Antunes Nuno, 2010, 2010 IEEE International Conference on Web Services (ICWS), P203, DOI 10.1109/ICWS.2010.76
   Ashouri M, 2019, LECT NOTES COMPUT SC, V11547, P494, DOI 10.1007/978-3-030-21548-4_27
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Beba Sindre, 2019, Implementation analysis of vulnerabilities
   Black Paul E., 2007, Ada User Journal, V28, P184
   Black P.E., 2018, JULIET 1 3 TEST SUIT
   Blackmo CL., 2018, GSTF J COMPUT, V2, P1
   Boland T, 2012, COMPUTER, V45, P88, DOI 10.1109/MC.2012.345
   Chang R.-Y., 2007, P 2007 INT S SOFTWAR, P163, DOI DOI 10.1145/1273463.1273486
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Cordeiro L, 2018, LECT NOTES COMPUT SC, V10981, P183, DOI 10.1007/978-3-319-96145-3_10
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cowan C, 1998, PROCEEDINGS OF THE SEVENTH USENIX SECURITY SYMPOSIUM, P63
   Csallner C, 2005, PROC INT CONF SOFTW, P422
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Eugene Schultz E., 1990, Responding to Computer Security Incidents: Guidelines for Incident Handling
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Gonzalez T., 2014, COMPUTING HDB COMPUT, V1
   Goseva-Popstojanova K, 2015, INFORM SOFTWARE TECH, V68, P18, DOI 10.1016/j.infsof.2015.08.002
   Gruhn V, 2010, BUS PROCESS MANAG J, V16, P806, DOI 10.1108/14637151011076485
   Hackmann G, 2006, LECT NOTES COMPUT SC, V4294, P503
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   Harada T., 2010, 2010 10th IEEE/IPSJ International Symposium on Applications and the Internet (SAINT), P367, DOI 10.1109/SAINT.2010.105
   Hentschel, 2016, INTEGRATING SYMBOLIC
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Hovemeyer D., 2005, ACM SIGSOFT Software Engineering Notes, P13
   Kester D, 2010, IEEE INT WORK C SO, P115, DOI 10.1109/SCAM.2010.26
   Kim S., 2007, 4 INT WORKSHOP MININ, P27, DOI DOI 10.1109/MSR.2007.26
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Liang B, 2016, PROC INT CONF SOFTW, P333, DOI 10.1145/2884781.2884870
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Louridas P, 2006, IEEE SOFTWARE, V23, P58, DOI 10.1109/MS.2006.114
   Makino Y, 2015, INT WORKSH INT DATA, P399, DOI 10.1109/IDAACS.2015.7340766
   Manzoor N, 2012, PROC INT SYMP SOFTW, P129, DOI 10.1109/ISSREW.2012.28
   Pérez PM, 2011, COMM COM INF SC, V184, P148
   McLean R. K., 2012, 2012 International Conference on Software Security and Reliability Companion, P68, DOI 10.1109/SERE-C.2012.16
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nanda M. G., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P99, DOI 10.1145/1810295.1810310
   Oyetoyan TD, 2018, LECT NOTES BUS INF P, V314, P86, DOI 10.1007/978-3-319-91602-6_6
   Pinconschi E, 2021, PROC INT SYMP SOFTW, P196, DOI 10.1109/ISSRE52982.2021.00031
   Ranganath VP, 2020, EMPIR SOFTW ENG, V25, P178, DOI 10.1007/s10664-019-09749-y
   Rapoport, 2014, DATA FLOW ANAL PRESE
   Reis S, 2017, SECSE ESORICS, V1977, P69
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Shankar U., 2001, P USENIX SECURITY S, P210
   Shen HL, 2010, IEEE IMAGE PROC, P521, DOI 10.1109/ICIP.2010.5652058
   Smaragdakis Y, 2007, LECT NOTES COMPUT SC, V4454, P1
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Thung F, 2012, IEEE INT CONF AUTOM, P50, DOI 10.1145/2351676.2351685
   Tung YH., 2013, NETWORK OPERATIONS M, P1
   Visalli N, 2019, 2019 IEEE/ACIS 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P90, DOI [10.1109/SERA.2019.8886795, 10.1109/sera.2019.8886795]
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Wagner D., 2000, NDSS, P2000
   Wagner S, 2005, LECT NOTES COMPUT SC, V3502, P40
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   WARE M.S., 2008, P 2008 WORKSHOP STAT, P12, DOI DOI 10.1145/1394504.1394506
   YOUDEN WJ, 1950, CANCER-AM CANCER SOC, V3, P32, DOI 10.1002/1097-0142(1950)3:1<32::AID-CNCR2820030106>3.0.CO;2-3
   Yu L., 2008, 32 ANN IEEE INT COMP, P92, DOI DOI 10.1109/COMPSAC.2008.73
NR 66
TC 6
Z9 6
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2023
VL 53
IS 5
BP 1125
EP 1143
DI 10.1002/spe.3181
EA DEC 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C0ZX8
UT WOS:000905720700001
DA 2024-07-18
ER

PT J
AU Candal-Ventureira, D
   González-Castaño, FJ
   Gil-Castiñeira, F
   Fondo-Ferreiro, P
AF Candal-Ventureira, David
   Javier Gonzalez-Castano, Francisco
   Gil-Castineira, Felipe
   Fondo-Ferreiro, Pablo
TI Is the edge really necessary for drone computing offloading? An
   experimental assessment in carrier-grade 5G operator networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE 5G; edge computing; offloading; UAV
ID INTERNET
AB In this article, we evaluate the first experience of computation offloading from drones to real fifth-generation (5G) operator systems, including commercial and private carrier-grade 5G networks. A follow-me drone service was implemented as a representative testbed of remote video analytics. In this application, an image of a person from a drone camera is processed at the edge, and image tracking displacements are translated into positioning commands that are sent back to the drone, so that the drone keeps the camera focused on the person at all times. The application is characterised to identify the processing and communication contributions to service delay. Then, we evaluate the latency of the application in a real non standalone 5G operator network, a standalone carrier-grade 5G private network, and, to compare these results with previous research, a Wi-Fi wireless local area network. We considered both multi-access edge computing (MEC) and cloud offloading scenarios. Onboard computing was also evaluated to assess the trade-offs with task offloading. The results determine the network configurations that are feasible for the follow-me application use case depending on the mobility of the end user, and to what extent MEC is advantageous over a state-of-the-art cloud service.
C1 [Candal-Ventureira, David; Javier Gonzalez-Castano, Francisco; Gil-Castineira, Felipe; Fondo-Ferreiro, Pablo] Univ Vigo, AtlanTTic, Informat Technol Grp, Vigo, Spain.
C3 Universidade de Vigo; atlanTTic
RP González-Castaño, FJ (corresponding author), El Telecomunicac, Campus Univ Lagoas Marcosende, Vigo 36310, Spain.
EM javier@deluvigo.es
RI Fondo-Ferreiro, Pablo/AAN-6174-2021; Gil-Castiñeira,
   Felipe/ABE-6411-2020
OI Fondo-Ferreiro, Pablo/0000-0002-7732-8288; Gil-Castiñeira,
   Felipe/0000-0002-5164-0855; Candal-Ventureira, David/0000-0002-9391-5597
FU Ministerio de Ciencia e Innovacion [PDC2021-121335-C21,
   PID2020-116329GB-C21, PRE2021-098290]
FX Ministerio de Ciencia e Innovacion, Grant/Award Numbers:
   PDC2021-121335-C21, PID2020-116329GB-C21, PRE2021-098290
CR 3gpp, 3GPP TS 38 104 version 15 5 0 Release 15
   3GPP, 2020, Tech. Rep. (TS) 38.214, V16.1.0.
   3GPP. 5G; NR; User Equipment (UE) radio access capabilities, 2021, TECHNICAL SPECIFICAT
   Ananthanarayanan G, 2017, COMPUTER, V50, P58, DOI 10.1109/MC.2017.3641638
   [Anonymous], 2019, 2019 AEIT International Conference of Electrical and Electronic Technologies for Automotive (AEIT AUTOMOTIVE)
   Avino G, 2019, IEEE T NETW SERV MAN, V16, P1450, DOI 10.1109/TNSM.2019.2931878
   Barták R, 2015, 2015 FOURTEENTH MEXICAN INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (MICAI), P35, DOI 10.1109/MICAI.2015.12
   Barthélemy J, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19092048
   Bylykbashi K, 2020, FUTURE GENER COMP SY, V105, P665, DOI 10.1016/j.future.2019.12.030
   Callegaro D, 2019, PROCEEDINGS OF THE 2019 ACM SIGCOMM WORKSHOP ON MOBILE AIRGROUND EDGE COMPUTING, SYSTEMS, NETWORKS, AND APPLICATIONS (MAGESYS '19), P29, DOI 10.1145/3341568.3342109
   Candal-Ventureira D, 2021, IEEE ACCESS, V9, P134435, DOI 10.1109/ACCESS.2021.3115695
   Chirivella-Perez E, 2020, SOFTWARE PRACT EXPER, V50, P741, DOI 10.1002/spe.2681
   Dautov R, 2018, SOFTWARE PRACT EXPER, V48, P1475, DOI 10.1002/spe.2586
   ETSI, 2020, MULT ACC EDG COMP ME
   Farahbakhsh F, 2021, T EMERG TELECOMMUN T, V32, DOI 10.1002/ett.4127
   Feng HG, 2021, PROCEEDINGS OF THE 2021 CROSS STRAIT RADIO SCIENCE AND WIRELESS TECHNOLOGY CONFERENCE (CSRSWTC), P319, DOI 10.1109/CSRSWTC52801.2021.9631594
   Fondo-Ferreiro P., P 2021 IEEE 22 INT C
   Giang NK, 2020, SOFTWARE PRACT EXPER, V50, P519, DOI 10.1002/spe.2695
   Guo Y, 2020, SOFTWARE PRACT EXPER, V50, P489, DOI 10.1002/spe.2685
   Hayat S, 2021, IEEE ROBOT AUTOM LET, V6, P2571, DOI 10.1109/LRA.2021.3062319
   He ZL, 2021, SOFTWARE PRACT EXPER, V51, P1868, DOI 10.1002/spe.2951
   Jiang H, 2002, ACM SIGCOMM COMP COM, V32, P75, DOI 10.1145/571697.571725
   Liu J, 2018, IEEE ACCESS, V6, P30269, DOI 10.1109/ACCESS.2018.2833619
   Maheshwari S, 2018, 2018 THIRD IEEE/ACM SYMPOSIUM ON EDGE COMPUTING (SEC), P286, DOI 10.1109/SEC.2018.00028
   Messous MA, 2020, IEEE ICC, DOI 10.1109/icc40277.2020.9149087
   Messous MA, 2019, IEEE T VEH TECHNOL, V68, P4964, DOI 10.1109/TVT.2019.2902318
   Monajjemi M, 2016, 2016 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS (IROS 2016), P4410, DOI 10.1109/IROS.2016.7759649
   Motlagh NH, 2017, IEEE COMMUN MAG, V55, P128, DOI 10.1109/MCOM.2017.1600587CM
   Naseer T, 2013, IEEE INT C INT ROBOT, P624, DOI 10.1109/IROS.2013.6696416
   Nguyen QH, 2020, COMPUT COMMUN, V150, P83, DOI 10.1016/j.comcom.2019.10.033
   Premsankar G, 2018, IEEE INTERNET THINGS, V5, P1275, DOI 10.1109/JIOT.2018.2805263
   Rischke J, 2021, IEEE ACCESS, V9, P121786, DOI 10.1109/ACCESS.2021.3108423
   Roy P, 2020, COMPUT NETW, V182, DOI 10.1016/j.comnet.2020.107573
   Saeik F, 2021, COMPUT NETW, V195, DOI 10.1016/j.comnet.2021.108177
   Serra W., MON SMART DEC ARCH D
   Shahidinejad A, 2020, SOFTWARE PRACT EXPER, V50, P2212, DOI 10.1002/spe.2888
   Shriram A, 2005, LECT NOTES COMPUT SC, V3431, P306, DOI 10.1007/978-3-540-31966-5_24
   Sonmez C, 2018, T EMERG TELECOMMUN T, V29, DOI 10.1002/ett.3493
   Takagi S, 2019, INT C CONTROL DECISI, P773, DOI [10.1109/codit.2019.8820388, 10.1109/CoDIT.2019.8820388]
   Xu MX, 2022, SOFTWARE PRACT EXPER, V52, P394, DOI 10.1002/spe.3014
   Yu W, 2018, IEEE ACCESS, V6, P6900, DOI 10.1109/ACCESS.2017.2778504
NR 41
TC 1
Z9 1
U1 3
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 579
EP 599
DI 10.1002/spe.3161
EA OCT 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000871435300001
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Jiménez, P
   Corchuelo, R
AF Jimenez, Patricia
   Corchuelo, Rafael
TI On the design of an advanced business rule engine
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business rule engines (BRE); Semantic Vocabulary of Business Rules
   (SBVR)
ID GENERATION; VOCABULARY
AB Business rules govern how well-managed companies perform every day. They are expected to be written in natural language because they are devised by business people. That makes it difficult to translate them automatically into executable rules that can be integrated into typical information systems. Our industrial and academic research concludes that the current tools have a number of problems, namely: many of them do not pay any attention to the SBVR standard; some of them are not multi-language; most of them cannot achieve perfect parsing accuracy; some of them are not domain agnostic; some of them use proprietary technologies; some of them do not produce executable rules; and none supports exploratory what-if analyses natively. In this article, we present Tier-Rules, which is a system that overcomes the previous problems. We also report on an industrial case study that helps illustrate it in practice.
C1 [Jimenez, Patricia; Corchuelo, Rafael] Univ Seville, ETSI Informat, Avda Reina Mercedes S-N, E-41012 Seville, Spain.
C3 University of Sevilla
RP Corchuelo, R (corresponding author), Univ Seville, ETSI Informat, Avda Reina Mercedes S-N, E-41012 Seville, Spain.
EM corchu@us.es
RI Corchuelo, Rafael/G-3149-2016; Jimenez, Patricia/B-4619-2018
OI Corchuelo, Rafael/0000-0003-1563-6979; Jimenez,
   Patricia/0000-0001-5070-5904
FU Spanish National Research Council [TIN2016-75394-R,
   PID2020-112540RB-C44]; Andalusian Research Council [P18-RT-1060,
   US-1381375]
FX The authors were partially supported by the Spanish National Research
   Council through Grants TIN2016-75394-R and PID2020-112540RB-C44
   (MCIN/AEI/10.13039/501100011033), the Andalusian Research Council
   through Grants P18-RT-1060 and US-1381375. They are very grateful to
   Tier1 Technologies, S.A. and Dinamic Area, S.L. for providing an ideal
   industrial context, integrating our results into the Comerzzia platform,
   and providing part of the machinery required to carry the project out.
CR Aiello G, 2014, IEEE INT CONF SERV, P131, DOI 10.1109/SOCA.2014.39
   Al-Ali Hamda, 2018, Data-Driven Process Discovery and Analysis. 6th IFIP WG 2.6 International Symposium, SIMPDA 2016. Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 307), P22, DOI 10.1007/978-3-319-74161-1_2
   Anish PR, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P227, DOI 10.1109/REW.2019.00047
   Arshad S., 2018, P INT C INTELLIGENT, P379, DOI [10.1007/978-981-13-6052-7_33, DOI 10.1007/978]
   Bajwa IS., 2011, AAAI SPRING S AI BUS, P1
   Bockhorst J, 2019, AAAI CONF ARTIF INTE, P9422
   Bolt A, 2018, INFORM SYST, V74, P53, DOI 10.1016/j.is.2017.12.006
   CHITTIMALLI P, 2020, P C INNOVATIONS SOFT
   Chittimalli PK, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1190, DOI 10.1109/ASE.2019.00134
   Chittimalli PK, 2019, PROCEEDINGS OF THE 12TH INNOVATIONS ON SOFTWARE ENGINEERING CONFERENCE (ISEC), DOI 10.1145/3299771.3299786
   Cosentino Valerio, 2012, Rules on the Web: Research and Applications. Proceedings of the 6th International Symposium, RuleML 2012, P17, DOI 10.1007/978-3-642-32689-9_3
   Danenas P, 2020, DATA KNOWL ENG, V128, DOI 10.1016/j.datak.2020.101822
   De Masellis R, 2017, IEEE INT ENTERP DIST, P165, DOI 10.1109/EDOC.2017.30
   Dees J.G., 2016, The Palgrave encyclopedia of strategic management, P1, DOI [DOI 10.1109/ICIS.2016.7550824, 10.1057/978-1-349-94848-2_373-1, DOI 10.1057/978-1-349-94848-2_373-1]
   Figl K, 2020, LECT NOTES COMPUT SC, V12400, P119, DOI 10.1007/978-3-030-62522-1_9
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Frantz RZ, 2021, SOFTWARE PRACT EXPER, V51, P824, DOI 10.1002/spe.2916
   Gallego FO, 2020, ENG APPL ARTIF INTEL, V91, DOI 10.1016/j.engappai.2020.103568
   Gallego FO, 2020, KNOWL-BASED SYST, V193, DOI 10.1016/j.knosys.2019.105422
   Geist V, 2021, SOFTWARE PRACT EXPER, V51, P798, DOI 10.1002/spe.2933
   Barbosa MHG, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P41, DOI 10.1109/ICSA-C50368.2020.00015
   Haj A, 2021, IEEE ACCESS, V9, P56506, DOI 10.1109/ACCESS.2021.3071623
   Hatano T, 2016, IEICE T INF SYST, VE99D, P1117, DOI 10.1587/transinf.2015EDP7202
   Hay D., 2000, Defining Business Rules: What Are They Really?
   Hildreth Sue., 2005, ComputerWorld, V39, P24
   Hnatkowska B., 2016, P KKIO SOFTWARE ENG, V504, P3, DOI [10.1007/978-3-319-43606-7_1, DOI 10.1007/978]
   Hnatkowska B, 2020, IEEE SYS MAN CYBERN, P905, DOI [10.1109/SMC42975.2020.9283400, 10.1109/smc42975.2020.9283400]
   Hnatkowska B, 2018, STUD COMPUT INTELL, V733, P91, DOI 10.1007/978-3-319-65208-5_7
   Hnatkowska B, 2016, LECT NOTES ARTIF INT, V9621, P225, DOI 10.1007/978-3-662-49381-6_22
   Hnatkowska B, 2015, ADV INTELL SYST, V365, P175, DOI 10.1007/978-3-319-19216-1_17
   Karaa WB, 2016, SOFTWARE PRACT EXPER, V46, P1443, DOI 10.1002/spe.2384
   Kopp A., COLINS, V2021, p1274
   Mesbahi N., 2019, J DIGIT INF MANAG, V17, P270, DOI [10.6025/jdim/2019/17/5/270-288, DOI 10.6025/JDIM/2019/17/5/270]
   Mickeviciute E, 2017, INF TECHNOL CONTROL, V46, P360, DOI 10.5755/j01.itc.46.2.18520
   Minock M, 2010, DATA KNOWL ENG, V69, P290, DOI 10.1016/j.datak.2009.10.007
   OMG, 2019, SEM BUS VOC BUS RUL
   Parr T, 2014, ACM SIGPLAN NOTICES, V49, P579, DOI [10.1145/2714064.2660202, 10.1145/2660193.2660202]
   Roldán JC, 2021, INFORM SCIENCES, V577, P49, DOI 10.1016/j.ins.2021.04.087
   Ross RG., 2003, BUSINESS RULES MANIF
   Saruwatari T., 2018, P JOINT C KNOWLEDGE, P33, DOI [10.1007/978-3-319-97679-2_4, DOI 10.1007/978]
   Sinur J., 2007, BUSINESS RULE ENGINE
   Skersys T, 2018, J SYST SOFTWARE, V141, P111, DOI 10.1016/j.jss.2018.03.061
   Sneed HM, 2020, STUD COMPUT INTELL, V851, P187, DOI 10.1007/978-3-030-26574-8_14
   Wang Olivier, 2016, Machine Learning, Optimization and Big Data. Second International Workshop, MOD 2016. Revised Selected Papers: LNCS 10122, P257, DOI 10.1007/978-3-319-51469-7_22
   Wang W., 2011, 2011 IEEE 54 INT MID, P1, DOI DOI 10.1080/01431161.2010.489073
   Wang W, 2016, LECT NOTES COMPUT SC, V9694, P51, DOI 10.1007/978-3-319-39696-5_4
   Zoet M., 2011, P 19 EUR C INF SYST, P34
   Z┬u├men┬u┬ikov┬u├ E., 2016, ACTA INFORM, V5, P72, DOI [10.18267/j.aip.86, DOI 10.18267/J.AIP.86]
NR 48
TC 0
Z9 0
U1 3
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2097
EP 2126
DI 10.1002/spe.3115
EA JUN 2022
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000813628800001
DA 2024-07-18
ER

PT J
AU Ampatzoglou, A
   Chatzigeorgiou, A
   Arvanitou, EM
   Bibi, S
AF Ampatzoglou, Apostolos
   Chatzigeorgiou, Alexander
   Arvanitou, Elvira Maria
   Bibi, Stamatia
TI SDK4ED: A platform for technical debt management
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
AB Technical debt management is of paramount importance for the software industry, since maintenance is the costlier activity in the software development lifecycle. In this article, we present the SDK4ED platform that enables efficient technical debt management (i.e., measurement, evolution analysis, prevention, etc.) at the code level, and evaluate its capabilities in an industrial setting. The SDK4ED platform is the outcome of a 3-year project, including several software industries. Since, the research rigor of the approaches that reside in SDK4ED have already been validated, in this work we focus: (a) on the presentation of the platform per se; (b) the evaluation of its industrial relevance; (c) the usability of the platform; as well as (d) the financial implications of its usage.
C1 [Ampatzoglou, Apostolos; Chatzigeorgiou, Alexander; Arvanitou, Elvira Maria] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Bibi, Stamatia] Univ Western Macedonia, Dept Elect & Comp Engn, Kozani, Greece.
C3 University of Macedonia; University of Western Macedonia
RP Ampatzoglou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM a.ampatzoglou@uom.edu.gr
RI Chatzigeorgiou, Alexandros/AAL-6077-2021
FU European Commission
FX European Commission
CR Amanatidis T, 2020, EMPIR SOFTW ENG, V25, P4161, DOI 10.1007/s10664-020-09869-w
   Ampatzoglou AR., 2005, P 5 INT S BUS MOD SO
   Ampatzoglou A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P115, DOI 10.1145/3194164.3194175
   [Anonymous], 2008, SOFTWARE ENG PRINCIP
   Arvanitou EM., 2019, P 23 INT C EV ASS SO
   Avgeriou P., 2016, DAGSTUHL SEMINAR 161, V6
   Avgeriou P, 2021, IEEE SOFTWARE, V38, P61, DOI 10.1109/MS.2020.3024958
   Baldassarre MT, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106377
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Charalampidou S., 2017, T SOFTW ENG IEEE COM, V43
   Charalampidou S., 2017, P 9 INT WORKSH MAN T, V22
   Chatzigeorgiou A, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P53, DOI 10.1109/MTD.2015.7332625
   Digkas G., 2022, T SOFTW ENG IEEE COM
   Digkas G., 2018, P 25 INT C SOFTW AN
   Eisenberg J, 2012, ACM SIGSOFT SOFTW EN, V37, P1
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Lefever J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P121, DOI 10.1109/ICSE-SEIP52600.2021.00021
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Maikantis T., 2020, P 24 PAN HELL C INF
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Spencer D., 2009, CARD SORTING DESIGNI
   Tsintzira AA., 2019, P 15 CHIN EUR INT S
   Tsoukalas D., 2023, IEEE T SOFTW ENG
   Tsoukalas D, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110777
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
NR 30
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2022
VL 52
IS 8
BP 1879
EP 1902
DI 10.1002/spe.3093
EA MAY 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2R3HL
UT WOS:000790262800001
DA 2024-07-18
ER

PT J
AU Huang, RB
   Towey, D
   Xu, YY
   Zhou, YN
   Yang, N
AF Huang, Rubing
   Towey, Dave
   Xu, Yinyin
   Zhou, Yunan
   Yang, Ning
TI Dissimilarity-based test case prioritization through data fusion
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data fusion; dissimilarity; regression testing; software testing; test
   case prioritization
ID INFORMATION FUSION; MUTATION; COMBINATION; ALGORITHMS
AB Test case prioritization (TCP) aims at scheduling test case execution so that more important test cases are executed as early as possible. Many TCP techniques have been proposed, according to different concepts and principles, with dissimilarity-based TCP (DTCP) prioritizing tests based on the concept of test case dissimilarity: DTCP chooses the next test case from a set of candidates such that the chosen test case is farther away from previously selected test cases than the other candidates. DTCP techniques typically only use one aspect/granularity of the information or features from test cases to support the prioritization process. In this article, we adopt the concept of data fusion to propose a new family of DTCP techniques, data-fusion-driven DTCP (DDTCP), which attempts to use different information granularities for prioritizing test cases by dissimilarity. We performed an empirical study involving 30 versions of five subject programs, investigating the testing effectiveness and efficiency by comparing DDTCP against DTCP techniques that use a dissimilarity granularity. The experimental results show that not only does DDTCP have better fault-detection rates than single-granularity DTCP techniques, but it also appears to only incur similar prioritization costs. The results also show that DDTCP remains robust over multiple system releases.
C1 [Huang, Rubing] Macau Univ Sci & Technol, Fac Informat Technol, Taipa 999078, Macao, Peoples R China.
   [Towey, Dave] Univ Nottingham Ningbo China, Sch Comp Sci, Ningbo, Peoples R China.
   [Xu, Yinyin; Zhou, Yunan] Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang, Jiangsu, Peoples R China.
   [Yang, Ning] Jiangsu Univ, Sch Elect & Informat Engn, Zhenjiang, Jiangsu, Peoples R China.
C3 Macau University of Science & Technology; University of Nottingham
   Ningbo China; Jiangsu University; Jiangsu University
RP Huang, RB (corresponding author), Macau Univ Sci & Technol, Fac Informat Technol, Taipa 999078, Macao, Peoples R China.
EM rbhuang@must.edu.mo
RI Towey, Dave/K-3160-2014
OI Towey, Dave/0000-0003-0877-4353; Huang, Rubing/0000-0002-1769-6126
FU Postgraduate Research & Practice Innovation Program of Jiangsu Province
   [KYCX19_1616]; National Natural Science Foundation of China [61502205,
   61872167]; Science and Technology Development Fund of Macau
   [0046/2021/A]; Science and Technology Program of the Ministry of Housing
   and Urban-Rural Development of China [2020-S-001]
FX Postgraduate Research & Practice Innovation Program of Jiangsu Province,
   Grant/Award Number: KYCX19_1616; National Natural Science Foundation of
   China, Grant/Award Numbers: 61502205, 61872167; Science and Technology
   Development Fund of Macau, Grant/Award Number: 0046/2021/A; Science and
   Technology Program of the Ministry of Housing and Urban-Rural
   Development of China, Grant/Award Number: 2020-S-001
CR Abadeh MN, 2019, SOFTWARE PRACT EXPER, V49, P274, DOI 10.1002/spe.2654
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Banerjee TP, 2012, INFORM SCIENCES, V217, P96, DOI 10.1016/j.ins.2012.06.016
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Ben Ayed S, 2015, INT CONF INTELL SYST, P277, DOI 10.1109/ISDA.2015.7489238
   Boriah S., 2008, P 2008 SIAM INT C DA, P243, DOI [10.1137/1.9781611972788.22, DOI 10.1137/1.9781611972788.22]
   Bryce R.C., 2007, WORKSHOP DOMAIN SPEC, P1
   Callahan J, 1996, P 1996 SPIN WORKSH, V353
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Cha S., 2019, Handbook of Software Engineering
   Chen JJ, 2016, IEEE INT CONF SOFTW, P266, DOI 10.1109/ICST.2016.19
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5314-x
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Cheng RX, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P452, DOI 10.1145/3460319.3464810
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Dasarathy BV, 1997, P IEEE, V85, P24, DOI 10.1109/5.554206
   Dianxiang Xu, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P265, DOI 10.1109/ICST.2010.14
   Ding WX, 2019, INFORM FUSION, V51, P129, DOI 10.1016/j.inffus.2018.12.001
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Eskin E, 2002, APPL DATA MINING COM, P77, DOI [DOI 10.1007/978-1-4615-0953-04, DOI 10.1007/978-1-4615-0953-0_4]
   Fang CR, 2014, SOFTWARE QUAL J, V22, P335, DOI 10.1007/s11219-013-9224-0
   Fraser G., 2019, HDB SOFTWARE ENG, P123
   Gonzalez-Sanchez A, 2011, SOFTWARE PRACT EXPER, V41, P1105, DOI 10.1002/spe.1065
   Grindall M, 2006, EMPIR SOFTW ENG, V11, P583, DOI 10.1007/s10664-006-9024-2
   Hall DL, 1997, P IEEE, V85, P6, DOI [10.1109/5.554205, 10.1109/ISCAS.1998.705329]
   HAMMING RW, 1950, BELL SYST TECH J, V29, P147, DOI 10.1002/j.1538-7305.1950.tb00463.x
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   Huang R., 2014, P 26 INT C SOFTW ENG, P121
   Huang RB, 2021, IEEE T SOFTWARE ENG, V47, P2052, DOI 10.1109/TSE.2019.2942921
   Huang RB, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110712
   Huang RB, 2020, IEEE T RELIAB, V69, P349, DOI 10.1109/TR.2019.2908068
   Huang RB, 2019, IET SOFTW, V13, P313, DOI 10.1049/iet-sen.2018.5199
   Huang RB, 2017, P INT COMP SOFTW APP, P3, DOI 10.1109/COMPSAC.2017.271
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Just R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P720, DOI 10.1109/ICST.2012.162
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kaminski G, 2013, J SYST SOFTWARE, V86, P2002, DOI 10.1016/j.jss.2012.08.024
   Kapfhammer G. M., 2007, PROC ACM INT WORKSHO, P19
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kim DY, 2014, INFORM SCIENCES, V278, P641, DOI 10.1016/j.ins.2014.03.080
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li N, 2021, INFORM SCIENCES, V544, P238, DOI 10.1016/j.ins.2020.07.039
   Li QM, 2020, INFORM SCIENCES, V530, P148, DOI 10.1016/j.ins.2020.03.106
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lou YL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P46, DOI 10.1109/ISSRE.2015.7381798
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   Luo Q, 2019, IEEE T SOFTWARE ENG, V45, P1054, DOI 10.1109/TSE.2018.2822270
   Luo R. C., 1988, Proceedings of the SPIE - The International Society for Optical Engineering, V931, P42, DOI 10.1117/12.946646
   Mahmud MR, 2016, SOFTWARE PRACT EXPER, V46, P1525, DOI 10.1002/spe.2392
   Marchetto A, 2016, IEEE T SOFTWARE ENG, V42, P918, DOI 10.1109/TSE.2015.2510633
   Miranda B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P222, DOI 10.1145/3180155.3180210
   Mocanu B, 2019, INFORM SCIENCES, V479, P607, DOI 10.1016/j.ins.2018.06.070
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Papadakis M., 2016, P 25 INT S SOFTW TST, P355
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Papadakis M, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P1, DOI 10.1109/ICST.2014.11
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qu X, 2013, ADV COMPUT, V89, P141, DOI 10.1016/B978-0-12-408094-2.00004-7
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Sammut C., 2010, ENCY MACHINE LEARNIN
   Schuler D, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P69
   Shahbazi A, 2018, AUTOMAT SOFTW ENG, V25, P531, DOI 10.1007/s10515-018-0232-y
   Shihab E, 2011, SOFTWARE PRACT EXPER, V41, P1027, DOI 10.1002/spe.1053
   Shin D, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1695
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang JZ, 2015, INFORM FUSION, V23, P3, DOI 10.1016/j.inffus.2014.04.002
   White F.E., 1991, Data Fusion Lexicon
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P312, DOI 10.1109/ICSE.2013.6606577
   Zhou ZQ, 2018, J SYST SOFTWARE, V136, P187, DOI 10.1016/j.jss.2017.08.031
   Zhu H, 2015, INFORM SCIENCES, V324, P186, DOI 10.1016/j.ins.2015.06.042
NR 87
TC 3
Z9 3
U1 2
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2022
VL 52
IS 6
BP 1352
EP 1377
DI 10.1002/spe.3068
EA JAN 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1A1RT
UT WOS:000744410700001
DA 2024-07-18
ER

PT J
AU Nourisa, J
   Zeller-Plumhoff, B
   Willumeit-Römer, R
AF Nourisa, Jalil
   Zeller-Plumhoff, Berit
   Willumeit-Roemer, Regine
TI CppyABM: An open-source agent-based modeling library to integrate C plus
   plus and Python
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agent-based modeling; C plus plus; Python
ID PLATFORM
AB Agent-based modeling (ABM) has been extensively used to study the collective behavior of systems emerging from the interaction of numerous independent individuals called agents. Python and C++ are commonly used for ABM thanks to their unique features; the latter offers superior performance while the former provides ease-of-use and rich libraries in data science, visualization, and machine learning. We present the framework CppyABM that unifies these features by providing identical ABM semantic and development styles in both C++ and Python as well as the essential binding tools to expose a certain functionality from C++ to Python. The binding feature allows users to tailor and further extend a type or function within Python while it is originally defined in C++. Using CppyABM, users can choose either C++ or Python depending on their expertise and the specialty of the model or combine them to benefit from the advantages of both languages simultaneously. We provide showcases of CppyABM capabilities using several examples in computational biology, ecology, and virology. These examples are implemented in different formats using either C++ or Python or a combination of both to provide a comparison between the performance of implementation scenarios. The results of the example show a clear performance advantage of the models entirely or partly implemented in C++ compared to purely Python-based implementations.
C1 [Nourisa, Jalil; Zeller-Plumhoff, Berit; Willumeit-Roemer, Regine] Inst Metall Biomat Helmholtz Zentrum Hereon, Max Planck Str 1, D-21502 Geesthacht, Germany.
C3 Max Planck Society
RP Nourisa, J (corresponding author), Inst Metall Biomat Helmholtz Zentrum Hereon, Max Planck Str 1, D-21502 Geesthacht, Germany.
EM jalil.nourisa@hereon.de
RI Willumeit, Regine/I-8029-2013; Nourisa, Jalil/AAB-5607-2022
OI Zeller-Plumhoff, Berit/0000-0002-7562-9423
FU Helmholtz Zentrum Hereon
FX Helmholtz Zentrum Hereon
CR Abar S, 2017, COMPUT SCI REV, V24, P13, DOI 10.1016/j.cosrev.2017.03.001
   Abeel T, 2009, J MACH LEARN RES, V10, P931
   Allan R.J., 2010, SURVEY AGENT BASED M
   [Anonymous], 2009, MULTIAGENT SYSTEMS
   [Anonymous], 2004, P INT C COMPL SYST
   Beu T.A., 2014, Introduction to Numerical Programming: A Practical Guide for Scientists and Engineers Using Python and C/C++
   Borgiani E, 2017, FRONT PHYSIOL, V8, DOI 10.3389/fphys.2017.00287
   Borshchev A, 2014, WILEY SER OPERAT RES, P248
   Briola D, 2019, SOFTWARE PRACT EXPER, V49, P549, DOI 10.1002/spe.2657
   Cardinot M, 2019, SOFTWAREX, V9, P199, DOI 10.1016/j.softx.2019.02.009
   Collier Nick., 2003, The University of Chicago's Social Science Research, V36, P2003
   Curtin RR, 2013, J MACH LEARN RES, V14, P801
   DeAngelis DL, 2019, FRONT ECOL EVOL, V6, DOI 10.3389/fevo.2018.00237
   Fowler M., 2010, Domain-specific languages
   Gan T, 2018, IEEE INT C BIOINFORM, P1277, DOI 10.1109/BIBM.2018.8621416
   Ghaffarizadeh A, 2018, PLOS COMPUT BIOL, V14, DOI 10.1371/journal.pcbi.1005991
   Hadjerrouit S., 1998, SIGCSE Bulletin, V30, P43, DOI 10.1145/292422.292440
   Kardas G, 2012, SOFTWARE PRACT EXPER, V42, P1247, DOI 10.1002/spe.1137
   Kavak Hamdi., 2018, Proceedings of the Annual Simulation Symposium, ANSS'18, P1, DOI DOI 10.22360/SPRINGSIM.2018.ANSS.021
   KOHAVI R, 1994, PROC INT C TOOLS ART, P740, DOI 10.1109/TAI.1994.346412
   Luke S, 2005, SIMUL-T SOC MOD SIM, V81, P517, DOI 10.1177/0037549705058073
   Luna F., 2012, EC SIMULATIONS SWARM, V14
   Macal CM, 2016, J SIMUL, V10, P144, DOI 10.1057/jos.2016.7
   Macal CM, 2009, WINT SIMUL C PROC, P86, DOI 10.1109/WSC.2009.5429318
   Masad David, 2015, 14 PYTHON SCI C CIT, V2015, P53
   Melo LS, 2019, INT T ELECTR ENERGY, V29, DOI 10.1002/2050-7038.12012
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Nikolai C, 2009, JASSS-J ARTIF SOC S, V12
   Nourisa J, 2021, COMPUT STRUCT BIOTEC, V19, P4110, DOI 10.1016/j.csbj.2021.07.005
   N┬u┬C┬u┬ez-Corrales S., 2020, EPIDEMIOLOGY WORKBEN, DOI 10.1101/2020.07.22.20159798
   Perkel JM, 2018, NATURE, V560, P513, DOI 10.1038/d41586-018-05990-5
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Railsback S. F., 2019, AGENT BASED INDIVIDU
   Rand W., 2006, P C SOC AG RES PROSP
   Rezaeiye P.P., 2017, 2017 Second International Conference on Electrical, Computer and Communication Technologies (ICECCT), P1
   Srinath K. R., 2017, International Research Journal of Engineering and Technology, V4, P354
   Tartarini D, 2016, FRONT BIOENG BIOTECH, V3, DOI 10.3389/fbioe.2015.00206
   van der Hoog S., 2017, ARXIV170606302
   Van Rossum G., 2007, Usenix annual technical conference, V41, P1
   Xiao JJ, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3291048
   Zhang L, 2009, J MATH BIOL, V58, P545, DOI 10.1007/s00285-008-0211-1
   Zou J, 2019, NAT GENET, V51, P12, DOI 10.1038/s41588-018-0295-5
NR 42
TC 4
Z9 4
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2022
VL 52
IS 6
BP 1337
EP 1351
DI 10.1002/spe.3067
EA JAN 2022
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1A1RT
UT WOS:000739094800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Hevia, JL
   Peterssen, G
   Piattini, M
AF Luis Hevia, Jose
   Peterssen, Guido
   Piattini, Mario
TI QuantumPath: A quantum software development platform
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE quantum computing; quantum toolkits; QuantumPath
AB Quantum computing has experienced a breakthrough. Several companies are taking up the challenge of designing and manufacturing quantum computers, and the supply of tools for quantum software development is growing all the time. This article addresses quantum software development toolkits and introduces the 'QuantumPath' platform. In developing QuantumPath, our aim is to fulfil certain principles such as: agnosticism, extensibility, integration, independency, optimisation, scalability, security, usability and software engineering support. This article presents both the architecture itself as well as the main tools that compose QuantumPath, in order to illustrate the support which platform provides to the development and execution of quantum software.
C1 [Luis Hevia, Jose; Peterssen, Guido; Piattini, Mario] aQuantum, Madrid, Spain.
   [Piattini, Mario] Univ Castilla La Mancha, aQuantum, Alarcos Res Grp, ITSI Inst Informat Technol & Syst, Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Piattini, M (corresponding author), Univ Castilla La Mancha, aQuantum, Alarcos Res Grp, ITSI Inst Informat Technol & Syst, Ciudad Real, Spain.
EM mario.piattini@uclm.es
RI Piattini, Mario/F-6271-2013
OI Piattini, Mario/0000-0002-7212-8279
FU European Regional Development Fund; Centre for the Development of
   Industrial Technology of the Ministry of Science and Innovation of Spain
FX European Regional Development Fund; Centre for the Development of
   Industrial Technology of the Ministry of Science and Innovation of Spain
CR Aaronson S., 2018, SCI AM, V298, p62
   Ball H., 2020, ARXIV200104060
   Booch G, 2018, IEEE SOFTWARE, V35, P108, DOI 10.1109/MS.2018.3571234
   Cusumano MA, 2018, COMMUN ACM, V61, P20, DOI 10.1145/3267352
   Deutsch D., 2011, The beginning of infinity: Explanations that transform the world
   Ding Y., 2020, QUANTUM COMPUTER SYS
   EQF, 2020, STRAT RES AG
   Hevia JL, 2021, IEEE SOFTWARE, V38, P7, DOI 10.1109/MS.2021.3087755
   Lloyd S., 2006, Programming the Universe: a Quantum Computer Scientist Takes on the Cosmos
   Murali P, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P1015, DOI 10.1145/3297858.3304075
   Orquestra, PROD OV
   Pérez-Castillo R, 2021, ADV ENG SOFTW, V151, DOI 10.1016/j.advengsoft.2020.102933
   Piattini Mario, 2020, ACM SIGSOFT Software Engineering Notes, V45, P12, DOI 10.1145/3402127.3402131
   Piattini M., 2020, P 1 INT WORKSH QUANT
   Piattini M, 2021, IT PROF, V23, P62, DOI 10.1109/MITP.2020.3019522
   Preskill J, 2018, QUANTUM-AUSTRIA, V2, DOI 10.22331/q-2018-08-06-79
   QHealth, QUANT PHARM APPL AG
   Resch S., 2019, ARXIV190507240V1
   Tools of Quantum Computing, QUANT COMP REP
   Zhao J., 2020, ARXIV200707047
NR 20
TC 9
Z9 9
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2022
VL 52
IS 6
BP 1517
EP 1530
DI 10.1002/spe.3064
EA DEC 2021
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1A1RT
UT WOS:000733577500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Liu, LF
   Zhang, HQ
   Wu, JG
   Xu, J
AF Liu, Linfeng
   Zhang, Houqian
   Wu, Jiagao
   Xu, Jia
TI Message piece dissemination approach for opportunistic underwater sensor
   network invaded by underwater spy-robots
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE delivery ratio; message pieces; opportunistic underwater sensor
   networks; theft ratio; underwater spy-robots
ID PROTOCOL
AB Opportunistic underwater sensor network (OUSN) is deployed for various underwater applications, such as underwater creatures tracking and tactical surveillance. Particularly, the OUSN in military applications may be invaded by some underwater spy-robots termed eavesdroppers. The eavesdroppers could move around some OUSN nodes and eavesdrop on their communication channels silently, and these eavesdropping actions are difficult to be perceived by OUSN nodes. To reduce the theft ratio of data messages and guarantee the required delivery ratio of data messages, we conceive the idea that each data message is encoded into several message pieces, and then the message pieces are disseminated to sink node individually. Besides, a lightweight encryption method is adopted to encrypt the message pieces before the dissemination. Such mechanism can protect the data messages from being stolen by eavesdroppers effectively. In this article, we propose a message piece dissemination approach (MPDA) for the OUSN invaded by some underwater spy-robots. In MPDA, OUSN nodes disseminate the held message pieces to some selected neighboring nodes at each time slot, and a data message is considered to be delivered when all pieces of this data message have been delivered to the sink node. Extensive simulations and comparisons demonstrate the preferable performance of MPDA, that is, MPDA can reduce the theft ratio of data messages and guarantee the required delivery ratio of data messages.
C1 [Liu, Linfeng; Zhang, Houqian; Wu, Jiagao; Xu, Jia] Nanjing Univ Posts & Telecommun, Sch Comp Sci & Technol, Nanjing 210023, Peoples R China.
   [Liu, Linfeng; Zhang, Houqian; Wu, Jiagao; Xu, Jia] Jiangsu Key Lab Big Data Secur & Intelligent Proc, Nanjing, Peoples R China.
C3 Nanjing University of Posts & Telecommunications
RP Xu, J (corresponding author), Nanjing Univ Posts & Telecommun, Sch Comp Sci & Technol, Nanjing 210023, Peoples R China.
EM xujia@njupt.edu.cn
FU National Natural Science Foundation of China [61872191, 61872193]; Six
   Talents Peak Project of Jiangsu Province [2019-XYDXX-247]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   61872191, 61872193; Six Talents Peak Project of Jiangsu Province,
   Grant/Award Number: 2019-XYDXX-247
CR Ahmed F, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18041062
   [Anonymous], 2010, PROC 5 ACM INT WORKS
   Arai H., 2017, P IEEE 22 PAC RIM IN
   Ayaz F., 2020, P IEEE INT C COMMUNI
   Chen JQ, 2020, IEEE T INTELL TRANSP, V21, P135, DOI [10.1109/TITS.2018.2889746, 10.1109/ieee-iws.2019.8803964]
   COOPERSMITH D, 1994, IBM J RES DEV, V38, P243, DOI 10.1147/rd.383.0243
   Coutinho RWL, 2017, IEEE ICC
   Coutinho RWL, 2017, COMPUT NETW, V126, P1, DOI 10.1016/j.comnet.2017.06.027
   Coutinho RWL, 2016, IEEE T COMPUT, V65, P548, DOI 10.1109/TC.2015.2423677
   Davis R, 2016, OCEANS 2016 MTS/IEEE MONTEREY, DOI 10.1109/OCEANS.2016.7761461
   Dede J, 2018, IEEE COMMUN SURV TUT, V20, P1547, DOI 10.1109/COMST.2017.2782182
   Ferguson B.G., 2016, J ACOUSTICAL SOC AM, V140, P3119, DOI 10.1121/1.4969765
   Goulet P, 2019, DEEP-SEA RES PT I, V148, P1, DOI 10.1016/j.dsr.2019.04.007
   Han GJ, 2017, J NETW COMPUT APPL, V92, P51, DOI 10.1016/j.jnca.2017.01.009
   Khurshid J, 2004, I C CONT AUTOMAT ROB, P771
   Li F, 2009, 2009 6TH ANNUAL IEEE COMMUNICATIONS SOCIETY CONFERENCE ON SENSOR, MESH AND AD HOC COMMUNICATIONS AND NETWORKS (SECON 2009), P574
   Liu LF, 2020, COMPUT NETW, V169, DOI 10.1016/j.comnet.2020.107097
   Liu LF, 2018, J PARALLEL DISTR COM, V122, P131, DOI 10.1016/j.jpdc.2018.08.004
   Liu LF, 2017, COMPUT NETW, V114, P80, DOI 10.1016/j.comnet.2017.01.009
   Osuki T, 2017, IEEE INFOCOM SER
   Paranjothi A, 2019, INTERNET THINGS-NETH, V7, DOI 10.1016/j.iot.2019.100071
   Qin YL, 2017, 2017 4TH INTERNATIONAL CONFERENCE ON INFORMATION SCIENCE AND CONTROL ENGINEERING (ICISCE), P1622, DOI 10.1109/ICISCE.2017.338
   Reed B, 2016, SPRINGER TRAC ADV RO, V114, P79, DOI 10.1007/978-3-319-28872-7_5
   Sakai K, 2015, INT CON DISTR COMP S, P706, DOI 10.1109/ICDCS.2015.77
   Tan H, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/7978027
   Wu DP, 2018, FUTURE GENER COMP SY, V87, P803, DOI 10.1016/j.future.2017.07.028
   Zhang SL, 2017, J SIGNAL PROCESS SYS, V89, P3, DOI 10.1007/s11265-016-1138-1
   Zhang S, 2013, 2013 IEEE NINTH INTERNATIONAL CONFERENCE ON MOBILE AD-HOC AND SENSOR NETWORKS (MSN 2013), P17, DOI 10.1109/MSN.2013.21
   Zhao D, 2015, IEEE T PARALL DISTR, V26, P392, DOI 10.1109/TPDS.2014.2308178
   Zhou G, 2006, ACM T SENSOR NETWORK, V2
NR 30
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2022
VL 52
IS 5
BP 1242
EP 1261
DI 10.1002/spe.3063
EA DEC 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0G4IQ
UT WOS:000734097100001
DA 2024-07-18
ER

PT J
AU Di Sanzo, P
   Avresky, DR
   Pellegrini, A
AF Di Sanzo, Pierangelo
   Avresky, Dimiter R.
   Pellegrini, Alessandro
TI Autonomic rejuvenation of cloud applications as a countermeasure to
   software anomalies
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomic computing; cloud computing; hybrid cloud; proactive
   management; software rejuvenation
ID SYSTEM
AB Failures in computer systems can be often tracked down to software anomalies of various kinds. In many scenarios, it might be difficult, unfeasible, or unprofitable to carry out extensive debugging activity to spot the cause of anomalies and remove them. In other cases, taking corrective actions may led to undesirable service downtime. In this article, we propose an alternative approach to cope with the problem of software anomalies in cloud-based applications, and we present the design of a distributed autonomic framework that implements our approach. It exploits the elastic capabilities of cloud infrastructures, and relies on machine learning models, proactive rejuvenation techniques, and a new load balancing approach. By putting together all these elements, we show that it is possible to improve both availability and performance of applications deployed to heterogeneous cloud regions and subject to frequent failures. Overall, our study demonstrates the viability of our approach, thus opening the way towards its adoption, and encouraging further studies and practical experiences to evaluate and improve it.
C1 [Di Sanzo, Pierangelo; Pellegrini, Alessandro] Univ Rome, DIAG, Rome, Italy.
   [Avresky, Dimiter R.] Int Res Inst Auton Network Comp IRIANC, Boston, MA USA.
C3 Sapienza University Rome
RP Pellegrini, A (corresponding author), Univ Rome, DIAG, Rome, Italy.
EM pellegrini@diag.uniroma1.it
RI Di Sanzo, Pierangelo/W-6340-2019; Pellegrini, Alessandro/S-6105-2018; Di
   Sanzo, Pierangelo/HII-2776-2022
OI Di Sanzo, Pierangelo/0000-0001-6136-6303; Pellegrini,
   Alessandro/0000-0002-0179-9868; Di Sanzo, Pierangelo/0000-0001-6136-6303
FU European Union via the EC [FP7 610764]
FX The research presented in this article has been supported by the
   European Union via the EC funded project PANACEA, contract number FP7
   610764.
CR Adamu H, 2017, 2017 IEEE 5TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD 2017), P191, DOI 10.1109/FiCloud.2017.56
   Aditham S, 2017, IEEE SYM PARA DISTR, P1259, DOI 10.1109/IPDPSW.2017.76
   Afzal S, 2019, J CLOUD COMPUT-ADV S, V8, DOI 10.1186/s13677-019-0146-7
   Alonso J, 2011, 2011 10TH IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), DOI 10.1109/NCA.2011.29
   Alpaydin E, 2014, ADAPT COMPUT MACH LE, P1
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   Anu V, 2018, INFORM SOFTWARE TECH, V103, P112, DOI 10.1016/j.infsof.2018.06.011
   Araujo Jean, 2016, Journal of Software, V11, P976, DOI 10.17706/jsw.11.10.976-993
   Ardagna D, 2012, J PARALLEL DISTR COM, V72, P796, DOI 10.1016/j.jpdc.2012.02.014
   ARULKUMAR V, 2019, CONCURRENCY COMPUTAT
   Bezenek T, 2000, P 3 WORKSH COMP ARCH
   Boutaba R, 2018, J INTERNET SERV APPL, V9, DOI 10.1186/s13174-018-0087-2
   Chawathe SS, 2018, P NCA 2018 2018 IEEE, DOI 10.1109/NCA.2018.8548330
   Cherkasova L, 2008, I C DEPEND SYS NETWO, P452, DOI 10.1109/DSN.2008.4630116
   CHESNAIS A, 1983, COMMUN ACM, V26, P196, DOI 10.1145/358061.358073
   Chipman HA, 1998, EXTRACTING REPRESENT, P363
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Cotroneo D., 2011, Proceedings of the 2011 IEEE Third International Workshop on Software Aging and Rejuvenation (WoSAR 2011), P1, DOI 10.1109/WoSAR.2011.15
   Cui L, 2012, INT C PAR DISTRIB SY, P718, DOI 10.1109/ICPADS.2012.111
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   De Felice F, 2017, THEORY APPL COGNITIV
   Di Sanzo P, 2015, SYMP NETW CLOUD, P51, DOI 10.1109/NCCA.2015.18
   Drgan I, 2017, CLOUD COMPUTING, P255
   Forster Florian, 2012, COLLECTD THE SYSTEM
   GELENBE E, 1986, ACTA INFORM, V23, P643, DOI 10.1007/BF00264311
   GELENBE E, 1979, IEEE T COMPUT, V28, P737, DOI 10.1109/TC.1979.1675241
   Gelenbe E, 2012, SYMP NETW CLOUD, P25, DOI 10.1109/NCCA.2012.16
   Gonzalez NM, 2016, P 2016 IEEE 15 INT S, DOI 10.1109/NCA.2016.7778591
   Gosain A., 2015, Advances in Intelligent Systems and Computing), P581
   Gulenko A, 2016, PROCEDIA COMPUT SCI, V94, P491, DOI 10.1016/j.procs.2016.08.076
   Han Y, 2014, IEEE INT SYM BROADB
   HUANG YN, 1995, DIG PAP INT SYMP FAU, P381, DOI 10.1109/FTCS.1995.466961
   Li LY, 2018, IEEE INT SYMP SOFTW, P278, DOI [10.1109/1SSREW.2018.00019, 10.1109/ISSREW.2018.00019]
   Liu J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P283, DOI 10.1109/ICWS.2019.00055
   Meng SC, 2013, IEEE T COMPUT, V62, P1705, DOI 10.1109/TC.2012.165
   Mijumbi R, 2017, IEEE T NETW SERV MAN, V14, P106, DOI 10.1109/TNSM.2017.2666781
   Neville-Neil GV, 2017, COMMUN ACM, V60, P29, DOI 10.1145/3108930
   Palmieri R, 2012, LECT NOTES COMPUT SC, V7155, P45, DOI 10.1007/978-3-642-29737-3_6
   Pellegrini A, 2016, IEEE SYM PARA DISTR, P1311, DOI 10.1109/IPDPSW.2016.124
   Pellegrini A, 2015, 2015 IEEE 29TH INTERNATIONAL PARALLEL AND DISTRIBUTED PROCESSING SYMPOSIUM WORKSHOPS, P1072, DOI 10.1109/IPDPSW.2015.110
   Pertet Soila., 2005, Causes of failure in web applications (cmu-pdl-05-109), P48
   Pietrantuono R, 2018, IEEE INT SYMP SOFTW, P257, DOI [10.1109/1SSREW.2018.00016, 10.1109/ISSREW.2018.00016]
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Sahoo RK, 2003, P ACM SIGKDD INT C K, P426, DOI [10.1145/956750.956799., DOI 10.1145/956750.956799, 10.1145/956750.956799]
   Semmoud A, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5652
   Siavvas M., 2019, P 9 INT C INF SOC TE, V1, P199
   Siavvas M, 2019, SIMUL MODEL PRACT TH, V97, DOI 10.1016/j.simpat.2019.101951
   Siavvas M, 2018, COMM COM INF SC, V821, P142, DOI 10.1007/978-3-319-95189-8_13
   Silva LM, 2009, IEEE T COMPUT, V58, P1525, DOI 10.1109/TC.2009.119
   Simeonov D, 2010, L N INST COMP SCI SO, V34, P186
   Smith Wayne D., 2000, TPC W BENCHMARKING E
   Suykens JAK, 1999, NEURAL PROCESS LETT, V9, P293, DOI 10.1023/A:1018628609742
   Taherizadeh S, 2019, COMPUT J, V62, P174, DOI 10.1093/comjnl/bxy043
   Tibshirani R, 1996, J ROY STAT SOC B, V58, P267, DOI 10.1111/j.2517-6161.1996.tb02080.x
   Torquato M, 2019, 2019 15TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2019), P1, DOI 10.1109/EDCC.2019.00014
   Wang L, 2015, SCI ADV, V1, DOI 10.1126/sciadv.1500463
   Wang Y, 1997, P 9 EUR C MACH LEARN, P128
   Yan YQ, 2018, IET SOFTW, V12, P41, DOI 10.1049/iet-sen.2016.0290
   Yin YH, 2017, IEEE IJCNN, P1623, DOI 10.1109/IJCNN.2017.7966045
   Zhang H, 2014, IEEE T NETW SERV MAN, V11, P90, DOI 10.1109/TNSM.2013.122313.130448
   Zhao ZL, 2019, I C DEPEND SYS NETWO, P630, DOI 10.1109/DSN.2019.00068
NR 61
TC 6
Z9 6
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2021
VL 51
IS 1
SI SI
BP 46
EP 71
DI 10.1002/spe.2908
EA OCT 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PH6SW
UT WOS:000578030300001
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Chahal, PK
   Pandey, S
AF Kaur Chahal, Prabhjot
   Pandey, Shreelekha
TI An efficient Hadoop-based brain tumor detection framework using big data
   analytic
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE brain tumor; computer aided detection; Hadoop; magnetic resonance
   images; Matlab distributed computing server; segmentation
ID SEGMENTATION; CLASSIFICATION; IMAGES
AB The exponential increase of brain MR image data in the medical imaging field requires faster and accurate segmentation of tumor. The computer aided detection systems acting as a second option to experts, radiologists, and surgeons needs to be swift enough to handle parallelism. However, handling of massive MR data for segmentation with high accuracy and low processing time is significant concern of any framework. In this article, distributed platforms for brain tumor segmentation using hybrid weighted fuzzy approach integrated with Matlab Distributed Computing Server and Hadoop has been proposed. The approach is based on the fuzzification of the pixel values to achieve more meaningful clusters by grouping of large data into similar clusters. The article focuses on analyzing the performance of varying sized data sets using hybrid fuzzy clustering in MapReduce on Hadoop to deal with huge MR brain data cross clusters of commodity computers. For experimentation varying size of DICOM data set is processed through different number of clusters to compare the read, write, and processing time on each node. The read and write operation time elevates as the data size increasing is floated to multinode. However, the processing time of the proposed approach turns to be 35 min on single, whereas 3-node clusters process the same data set (215 MB) in 3.4 min. Furthermore, increasing the data set to 7.3 GB the 3-node cluster performs in 235.4 min which is greatly reduced from single node processing time of 2085.2 min.
C1 [Kaur Chahal, Prabhjot; Pandey, Shreelekha] Thapar Inst Engn & Technol, Comp Sci & Engn Dept, Patiala, Punjab, India.
C3 Thapar Institute of Engineering & Technology
RP Chahal, PK (corresponding author), Thapar Inst Engn & Technol, Comp Sci & Engn Dept, Patiala, Punjab, India.
EM prabhjot_kaur@thapar.edu
CR Abdel-Maksoud E, 2015, EGYPT INFORM J, V16, P71, DOI 10.1016/j.eij.2015.01.003
   Akkus Z., 2016, ARXIV PREPRINT ARXIV
   Alias N, 2016, J TEKNOL, V78, P151
   Angulakshmi M, 2017, J ENG SCI TECHNOL, V12, P875
   [Anonymous], 2011, HIPI HADOOP IMAGE PR
   Augustine D. P., 2016, INDIAN J SCI TECHNOL, V9, P1373, DOI [10.17485/ijst/2016/v9i48/91373, DOI 10.17485/ijst/2016/v9i48/91373]
   Aujla GS, 2018, IEEE COMMUN MAG, V56, P78, DOI 10.1109/MCOM.2018.1700379
   Bahadure NB, 2017, INT J BIOMED IMAGING, V2017, DOI 10.1155/2017/9749108
   Bao S, 2017, 101380B INT SOC OPT
   Chahal PK, 2019, ADV COMPUTING DATA S, P264
   Chahal PK, 2020, MULTIMED TOOLS APPL, V79, P21771, DOI 10.1007/s11042-020-08898-3
   Chaudhary R, 2018, IEEE COMMUN MAG, V56, P118, DOI 10.1109/MCOM.2018.1700211
   Chen YT, 2019, CLUSTER COMPUT, V22, pS7435, DOI 10.1007/s10586-018-1772-4
   Choy R, 2005, P IEEE, V93, P331, DOI 10.1109/JPROC.2004.840490
   Chrisochoides N, 2006, P 2006 ACM IEEE C SU, P76
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dutta R, 2012, 2012 INTERNATIONAL SYMPOSIUM ON CLOUD AND SERVICES COMPUTING (ISCOS 2012), P141, DOI 10.1109/ISCOS.2012.17
   El-Gamal FEZA, 2018, INT C PATT RECOG, P2989, DOI 10.1109/ICPR.2018.8545196
   Ghemawat S., 2003, Operating Systems Review, V37, P29, DOI 10.1145/1165389.945450
   Gordillo N, 2013, MAGN RESON IMAGING, V31, P1426, DOI 10.1016/j.mri.2013.05.002
   Gupta N, 2017, SIGNAL PROCESS-IMAGE, V59, P18, DOI 10.1016/j.image.2017.05.013
   Jayachandran A, 2014, INT J IMAG SYST TECH, V24, P72, DOI 10.1002/ima.22081
   Louis DN, 2007, ACTA NEUROPATHOL, V114, P547, DOI 10.1007/s00401-007-0278-6
   Madhukumar S, 2015, EGYPT J RADIOL NUC M, V46, P475, DOI 10.1016/j.ejrnm.2015.02.008
   Meena K, 2019, J MED SYST, V43, DOI 10.1007/s10916-019-1369-3
   Nambura A, 2017, APPL SOFT COMPUT, V54, P456, DOI 10.1016/j.asoc.2016.08.020
   Nie JX, 2009, COMPUT MED IMAG GRAP, V33, P431, DOI 10.1016/j.compmedimag.2009.04.006
   Patil JS, 2016, IND J SCI TECHNOL, V9, P1
   Patil JS, 2018, ADV INTELL SYST, V632, P131, DOI 10.1007/978-981-10-5520-1_13
   Ryan M, 2013, NCI MICCAI CHALLENGE, P43
   Shubhangi DC., 2009, P INT C ADV COMP COM, P444, DOI [DOI 10.1145/1523103.1523191, 10.1145/1523103.1523191]
   Sonawane MM, 2017, 2017 INTERNATIONAL CONFERENCE ON CURRENT TRENDS IN COMPUTER, ELECTRICAL, ELECTRONICS AND COMMUNICATION (CTCEEC), P945, DOI 10.1109/CTCEEC.2017.8455204
   Telrandhe SR, 2016, 2016 WORLD CONFERENCE ON FUTURISTIC TRENDS IN RESEARCH AND INNOVATION FOR SOCIAL WELFARE (STARTUP CONCLAVE)
   Varatharajan R, 2018, MULTIMED TOOLS APPL, V77, P10195, DOI 10.1007/s11042-017-5318-1
   Vendt B, 2016, NEUROIMAGING TOOLS R
   Vishnuvarthanan A, 2017, APPL SOFT COMPUT, V57, P399, DOI 10.1016/j.asoc.2017.04.023
   Vo H, 2019, DISTRIB PARALLEL DAT, V37, P251, DOI 10.1007/s10619-018-7237-1
   Wang HQ, 2019, ICEPT2019: THE 2019 20TH INTERNATIONAL CONFERENCE ON ELECTRONIC PACKAGING TECHNOLOGY, DOI 10.1109/ICEPT47577.2019.245192
   Wang J, 2020, J INTERNET TECHNOL, V21, P393, DOI 10.3966/160792642020032102008
   Wu CR, 2018, J INTERNET TECHNOL, V19, P581, DOI 10.3966/160792642018031902026
NR 40
TC 3
Z9 3
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2022
VL 52
IS 3
SI SI
BP 805
EP 818
DI 10.1002/spe.2899
EA SEP 2020
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YS2YA
UT WOS:000569230000001
DA 2024-07-18
ER

PT J
AU Elahi, B
   Malik, AW
   Rahman, AU
   Khan, MA
AF Elahi, Bukhtawar
   Malik, Asad Waqar
   Rahman, Anis U.
   Khan, Muazzam A.
TI Toward scalable cloud data center simulation using high-level
   architecture
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE broker; cloud computing; CloudSim; distributed simulation; HLA; RTI
ID TOOLKIT
AB Existing simulators are designed to simulate a few thousand nodes due to the tight integration of modules. Thus, with limited simulator scalability, researchers/developers are unable to simulate protocols and algorithms in detail, although cloud simulators provide geographically distributed data centers environment but lack the support for execution on distributed systems. In this paper, we propose a distributed simulation framework referred to as CloudSimScale. The framework is designed on top of highly adapted CloudSim with communication among different modules managed using IEEE Std 1516 (high-level architecture). The underlying modules can now run on the same or different physical systems and still manage to discover and communicate with one another. Thus, the proposed framework provides scalability across distributed systems and interoperability across modules and simulators.
C1 [Elahi, Bukhtawar; Malik, Asad Waqar; Rahman, Anis U.; Khan, Muazzam A.] Natl Univ Sci & Technol, Sch Elect Engn & Comp Sci, Islamabad 44000, Pakistan.
   [Malik, Asad Waqar; Rahman, Anis U.] Univ Malaya, Fac Comp Sci & Informat Technol, Dept Informat Syst, Kuala Lumpur 50603, Malaysia.
C3 National University of Sciences & Technology - Pakistan; Universiti
   Malaya
RP Malik, AW (corresponding author), Natl Univ Sci & Technol, Sch Elect Engn & Comp Sci, Islamabad 44000, Pakistan.; Malik, AW (corresponding author), Univ Malaya, Fac Comp Sci & Informat Technol, Dept Informat Syst, Kuala Lumpur 50603, Malaysia.
EM asad.malik@seecs.edu.pk
RI Rahman, Anis/Q-1412-2019; Khan, Muazzam A. Khan/AAF-1494-2020; Malik,
   Dr. Asad Waqar/P-9499-2019
OI Rahman, Anis/0000-0002-8306-475X; Khan, Muazzam A.
   Khan/0000-0001-6140-1201; Malik, Dr. Asad Waqar/0000-0003-3804-997X
CR Alves DC, 2016, IEEE WORLD C SERV SE
   [Anonymous], 151612000 IEEE
   Association IS, 2010, 15162010IEEE ASS IS
   Brito AV, 2015, IEEE ACM DIS SIM, P195, DOI 10.1109/DS-RT.2015.16
   Bux M, 2015, FUTURE GENER COMP SY, V46, P85, DOI 10.1016/j.future.2014.09.007
   Buyya Rajkumar, 2009, 2009 International Conference on High Performance Computing & Simulation (HPCS), P1, DOI 10.1109/HPCSIM.2009.5192685
   Calheiros RN, 2013, SOFTWARE PRACT EXPER, V43, P595, DOI 10.1002/spe.2124
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Dahmann JS, 1997, WINTER SIMULATION C
   Falcone A, 2017, J SIMUL, V11, P208, DOI 10.1057/s41273-016-0039-4
   Fujimoto R, 2000, P 4 IEEE INT WORKSH
   Galli E, 2008, P 2008 12 IEEE ACM I
   Gervais C, 2012, P 2012 IEEE ACM 16 I
   Guan S, 2016, IEEE ACM 20 INT S DI
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Higashino WA, 2016, FUTURE GENER COMP SY, V65, P122, DOI 10.1016/j.future.2015.10.023
   Jararweh Y, 2014, SIMUL MODEL PRACT TH, V49, P180, DOI 10.1016/j.simpat.2014.09.003
   Jung J, 2012, 2012 INT C ICT CONV
   Kathiravelu P, 2014, 2014 IEEE 22 INT S M
   Kim TG, 2019, MODEL ENG SIMULATION, P355
   Li X, 2013, IEEE 6 INT C CLOUD C
   Lim Seung-Hwan, 2009, 2009 IEEE INT C CLUS, P1
   Lu T, 2002, P INT C COMP ED AUCK
   Malik AW, 2014, 2014 11 ANN HIGH CAP
   Malik AW, 2005, P 4 WSEAS INT C SOFT
   Narayanan V, 2014, INT CONF CONNECT VEH, P12, DOI [10.1109/ICCVE.2014.7297526, 10.1109/ICCVE.2014.244]
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   Ostermann S, 2010, GROUDSIM EVENT BASED
   Ourdev I., 2008, TSINGHUA SCI TECH S1, V13, P121
   Qayyum T, 2018, IEEE ACCESS, V6, P63570, DOI 10.1109/ACCESS.2018.2877696
   Rehman K, 2019, 2019 IEEE SICE INT S
   Sa T.T., 2014, CloudReports: An Extensible Simulation Tool for Energy-Aware Cloud Computing Environments. Cloud Computing. Z. Mahmood, P127, DOI [DOI 10.1007/978-3-319-10530-76., DOI 10.1007/978-3-319-10530-7_6]
   Shiraz M, 2012, 2012 10 INT C FRONT
   Son J, 2015, 15 IEEE ACM INT S CL
   Sotiriadis S, 2013, IEEE INT C BIOINF BI
   Sung C, 2011, 2011 IEEE WORKSHOP ON PRINCIPLES OF ADVANCED AND DISTRIBUTED SIMULATION (PADS)
   Tampouratzis N, 2018, IEEE T MULTI-SCALE C, V4, P565, DOI 10.1109/TMSCS.2018.2879601
   Tian WH, 2015, IEEE T AUTOM SCI ENG, V12, P153, DOI 10.1109/TASE.2013.2266338
   Tighe M, 2012, 8 INT C NETW SERV MA
   Wang H, 2003, AIAA MOD SIM TECHN C
   Wickremasinghe B, 2010, INT CON ADV INFO NET, P446, DOI 10.1109/AINA.2010.32
   Zajac K, 2003, P 7 IEEE INT S DISTR
NR 42
TC 5
Z9 5
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2020
VL 50
IS 6
BP 827
EP 843
DI 10.1002/spe.2769
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK4IJ
UT WOS:000530823800003
DA 2024-07-18
ER

PT J
AU Mugarza, I
   Parra, J
   Jacob, E
AF Mugarza, Imanol
   Parra, Jorge
   Jacob, Eduardo
TI Cetratus: A framework for zero downtime secure software updates in
   safety-critical systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE availability; Cetratus; dynamic software updates; live patching; live
   updates; safety; security
ID MIXED-CRITICALITY; EFFICIENT
AB Safety-critical systems are evolving into complex, networked, and distributed systems. As a result of the high interconnectivity among all networked systems and of potential security threats, security countermeasures need to be incorporated. Nonetheless, albeit cutting-edge security measures are adopted and incorporated during the system development, such as latest recommended encryption algorithms, these protection mechanisms may turn out obsolete because of the long operational periods. New security flaws and bugs are continuously detected. Software updates are then essential to restore the security level of the system. However, system shutdowns may not be acceptable when high availability is required. As expressed by the European Union Agency for Network and Information Security (ENISA) "the research in the area of patching and updating equipment without disruption of service and tools" is needed. In this article, a novel live updating approach for zero downtime safety-critical systems named Cetratus is presented. Cetratus, which is based on a quarantine-mode execution and monitoring, enables the update of non-safety-critical software components while running, without compromising the safety integrity level of the system. The focus of this work lies on the incorporation of leading-edge security mechanisms while safety-related software components will remain untouched. Other non-safety-related software components could also be updated.
C1 [Mugarza, Imanol; Parra, Jorge] Ikerlan Technol Res Ctr, Dependable Embedded Syst Area, Arrasate Mondragon, Spain.
   [Jacob, Eduardo] Univ Basque Country UPV EHU, Fac Engn, Bilbao, Spain.
C3 University of Basque Country
RP Mugarza, I (corresponding author), Ikerlan Technol Res Ctr, Dependable Embedded Syst Area, Arrasate Mondragon, Spain.
EM imugarza@ikerlan.es
RI Jacob, Eduardo/F-3866-2012
OI Jacob, Eduardo/0000-0001-7093-0586; Parra, Jorge/0000-0001-6688-891X;
   Mugarza, Imanol/0000-0002-6311-0632
FU Eusko Jaurlaritza [KK-2017-00044]
FX Eusko Jaurlaritza, Grant/Award Number: SEKUTEK project, KK-2017-00044
CR ALTEKAR G, 2005, P 14 C USENIX SEC S, V5, P18
   [Anonymous], 2014, IFAC Proc., DOI DOI 10.3182/20140824-6-ZA-1003.02004
   [Anonymous], 2000, 61508 IEC 1
   Arnold J, 2009, EUROSYS'09: PROCEEDINGS OF THE FOURTH EUROSYS CONFERENCE, P187
   Backes M, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P691
   Balaguer J.G., 2015, ACM SIGADA ADA LETT, V35, P38, DOI [10.1145/2870544.2870550, DOI 10.1145/2870544.2870550]
   Baresi L, 2017, IEEE T SOFTWARE ENG, V43, P340, DOI 10.1109/TSE.2016.2592913
   BAUMANN A, 2007, THESIS
   BERBERS Y, 2007, DYNAMICALLY UPDATING
   CHEN H, 2006, P 2 INT C VIRT EX EN
   Chen HB, 2007, PROC INT CONF SOFTW, P271
   Chothia T, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P743, DOI 10.1145/3052973.3053027
   De La Puente J. A., 1999, Ada Letters, V19, P73
   Feiler P., 2013, Four pillars for improving the quality of safetycritical softwarereliant systems
   Giuffrida C, 2013, ACM SIGPLAN NOTICES, V48, P279, DOI 10.1145/2499368.2451147
   Gracioli Giovani, 2008, P 1 INT WORKSH HOT T, DOI 10.1145/1490283.1490287
   *GREEN HILLS SOFTW, 2018, INT REAL TIM OP SYST
   Hayden C. M., 2011, Proceedings 2011 27th IEEE International Conference on Data Engineering Workshops (ICDEW 2011), P179, DOI 10.1109/ICDEW.2011.5767632
   Hayden CM, 2012, ACM SIGPLAN NOTICES, V47, P249, DOI 10.1145/2398857.2384635
   HAYDEN CM, 2012, THESIS
   Hicks M, 2005, ACM T PROGR LANG SYS, V27, P1049, DOI 10.1145/381694.378798
   Hosek P, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P612, DOI 10.1109/ICSE.2013.6606607
   *INT EL COMM, 2010, 617843 IEC
   *INT EL COMM, 2010, 62443 IEC
   *INT EL COMM, 2010, 6244323 IEC
   KANG S, 2014, I SYMP CONSUM ELECTR
   KUNTZE N, 2015, P INT COMM NAV SURV
   Langner R, 2011, IEEE SECUR PRIV, V9, P49, DOI 10.1109/MSP.2011.67
   LESZCZYNA R, 2011, TECHNICAL REPORT
   Lopez I, 2015, IEEE COMMUN MAG, V53, P110, DOI 10.1109/MCOM.2015.7295471
   MAKRIS K, 2012, UPSTARE MANUAL
   MAKRIS K, 2009, THESIS
   Makris Kristis., 2007, Proceedings of the 2nd ACM SIGOPS/EuroSys European Conference on Computer Systems 2007, P327
   Montgomery J, 2004, REAL-TIME SYST, V27, P169, DOI 10.1023/B:TIME.0000027932.11280.3c
   Mugarza I., 2018, INT J SAFETY SECUR E, V8, P121
   MUGARZA I, 2017, SOFTWARE UPDATES SAF, P199
   Mugarza I, 2018, INT SYM IND EMBED, P178
   Mugarza I, 2019, IEEE ACCESS, V7, P42269, DOI 10.1109/ACCESS.2019.2905925
   NEAMTIU IG, 2008, PROQUEST
   Neamtiu I, 2006, ACM SIGPLAN NOTICES, V41, P72, DOI 10.1145/1133981.1133991
   *NIST, ITL B NOV 2017 GUID
   Noubissi A. C., 2011, Proceedings 2011 27th IEEE International Conference on Data Engineering Workshops (ICDEW 2011), P168, DOI 10.1109/ICDEW.2011.5767630
   Paul S., 2015, Safety and Security Engineering, P379, DOI 10.2495/SAFE150321
   PAUL S, 2015, RECOMMENDATIONS SECU
   Paul S, 2015, WIT Trans. Built Environ., V151, P335, DOI [10.2495/SAFE150291, DOI 10.2495/SAFE150291]
   PAUNA A, 2013, TECHNICAL REPORT
   PAYER M, 2013, DYNSEC ON THE FLY CO
   Piètre-Cambacédès L, 2010, INT J CRIT INFR PROT, V3, P55, DOI 10.1016/j.ijcip.2010.06.003
   PINA DLG, 2016, THESIS
   SAUR K, 2015, THESIS
   Saur K, 2016, SOFTWARE PRACT EXPER, V46, P767, DOI 10.1002/spe.2332
   Seifzadeh H, 2009, PROCEEDINGS OF THE 8TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, P34, DOI 10.1109/ICIS.2009.206
   SMART NP, 2014, EUROPEAN UNION AGENC, V95
   SOLARSKI M, 2004, DYNAMIC UPGRADE DIST
   STOYLE G, 2007, THEORY DYNAMIC SOFTW
   SUBRAMANIAN S, 2009, DYNAMIC SOFTWARE UPD, V44
   *UNISIG, SUBSET 026 SYST REQ
   *UNISIG, SUBSET 037 EUR FIS V
   Wahler M., 2011, Proceedings 2011 27th IEEE International Conference on Data Engineering Workshops (ICDEW 2011), P174, DOI 10.1109/ICDEW.2011.5767631
   WAHLER M, 2014, 2014 IEEE EM TECHN
   Wahler Michael, 2009, P 2 INT WORKSH HOT T, P1, DOI [10.1145/1656437.1656440, DOI 10.1145/1656437.1656440]
NR 61
TC 8
Z9 8
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2020
VL 50
IS 8
BP 1399
EP 1424
DI 10.1002/spe.2820
EA MAR 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MG0MA
UT WOS:000520724800001
DA 2024-07-18
ER

PT J
AU Rivero-García, A
   Santos-González, I
   Hernández-Goya, C
   Caballero-Gil, P
AF Rivero-Garcia, Alexandra
   Santos-Gonzalez, Ivan
   Hernandez-Goya, Candelaria
   Caballero-Gil, Pino
TI Using blockchain in the follow-up of emergency situations related to
   events
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Android; blockchain; emergencies; identity-based signcryption; smart
   contract
AB This paper describes a decentralized low-cost system designed to reinforce personal security in big events in case of emergency. The proposal consists of using smart contracts supported by blockchain in the management of events. An alternative communication channel that does not require any cloud service is also provided with the aim of improving the coordination of emergency services. Peers may use this emergency support tool to interact with each other through a chat when additional support is required. Since information security is mandatory in this scenario, identity-based signcryption schemes are here used to guarantee communication confidentiality, authenticity, and integrity. Depending on the communication mode (peer-to-peer or broadcast), different signcryption methods are used. A first implementation of the proposal has produced promising results.
C1 [Rivero-Garcia, Alexandra; Santos-Gonzalez, Ivan; Hernandez-Goya, Candelaria; Caballero-Gil, Pino] Univ La Laguna, Dept Comp Sci & Syst, Tenerife, Spain.
C3 Universidad de la Laguna
RP Rivero-García, A (corresponding author), Univ La Laguna, Dept Comp Sci & Syst, Tenerife, Spain.
EM ariverog@ull.edu.com
RI Goya, Candelaria Hernández/Q-5534-2018; Caballero-Gil, Pino/K-7251-2012
OI Hernandez Goya, Candelaria/0000-0002-9468-708X
FU Centre for the Development of Industrial Technology (CDTI) [C2017/3-9];
   European Regional Development Fund (ERDF) [RTI2018-097263-B-I00];
   Government of the Canary Islands [TESIS2015010102, TESIS-2015010106]
FX Centre for the Development of Industrial Technology (CDTI), Grant/Award
   Number: C2017/3-9 (UNICRINF); European Regional Development Fund (ERDF),
   Grant/Award Number: RTI2018-097263-B-I00 (ACTIS); Government of the
   Canary Islands, Grant/Award Number: TESIS2015010102 and TESIS-2015010106
CR [Anonymous], 2019, About us
   [Anonymous], 2019, DOCUMENTATION WI FI
   Boneh D, 2003, SIAM J COMPUT, V32, P586, DOI 10.1137/S0097539701398521
   Camps-Mur D, 2013, IEEE WIREL COMMUN, V20, P96, DOI 10.1109/MWC.2013.6549288
   Cha SC, 2018, IEEE ACCESS, V6, P24639, DOI 10.1109/ACCESS.2018.2799942
   Conti M, 2013, IFIP WIREL DAY, DOI 10.1109/WD.2013.6686501
   d'Oro EC, 2019, INTERNET THINGS-NETH, V6, DOI 10.1016/j.iot.2019.100054
   Das D., 2019, Radio resource allocation in wi-fi aware neighborhood area network data links
   Dubovitskaya Alevtina, 2017, AMIA Annu Symp Proc, V2017, P650
   Ekblaw A., 2016, A Case Study for Blockchain in Healthcare:"MedRec" prototype for electronic health records and medical research data, DOI DOI 10.1109/OBD.2016.11
   Griggs KN, 2018, J MED SYST, V42, DOI 10.1007/s10916-018-0982-x
   Guo R, 2018, IEEE ACCESS, V6, P11676, DOI 10.1109/ACCESS.2018.2801266
   Keranen A., 2009, P 2 INT C SIM TOOLS, P1, DOI 10.4108/ICST.SIMUTOOLS2009.5674
   Malone-Lee John., 2002, Identity-Based Signcryption
   Minoli D, 2018, INTERNET THINGS-NETH, V1-2, P1, DOI 10.1016/j.iot.2018.05.002
   Motta R, 2010, P 2 IARIA C ADV P2P
   Nakamoto S., 2008, DECENTRAL BUS REV
   Panwar G., 2017, Inside Bluetooth Low Energy
   Radanovi I, 2018, OPPORTUNITIES USE BL
   Rivero-Garcia A., 2018, Secure communication system for emergency services in network congestion scenarios
   Santos-Gonzalez I, 2014, P 10 INT C WEB INF S
   Selvi SSD, 2009, INT WORKSH SEC TOYAM
   Shen WL, 2016, IEEE NETWORK, V30, P4, DOI 10.1109/MNET.2016.7579020
   Yue X, 2016, J MED SYST, V40, DOI 10.1007/s10916-016-0574-6
NR 24
TC 3
Z9 4
U1 1
U2 37
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2021
VL 51
IS 10
SI SI
BP 2000
EP 2014
DI 10.1002/spe.2779
EA DEC 2019
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UN1VW
UT WOS:000503186500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Naeen, HM
   Zeinali, E
   Haghighat, AT
AF Naeen, Hossein Monshizadeh
   Zeinali, Esmaeil
   Haghighat, Abolfazl Toroghi
TI Adaptive Markov-based approach for dynamic virtual machine consolidation
   in cloud data centers with quality-of-service constraints
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; dynamic consolidation; energy efficiency; green
   information technology; Markov chains; virtualization
ID EFFICIENT RESOURCE-MANAGEMENT; SERVER CONSOLIDATION; ENERGY EFFICIENCY;
   HEURISTICS; PERFORMANCE; ALGORITHMS; SIMULATION; FRAMEWORK
AB Dynamic virtual machine (VM) consolidation is one of the emerging technologies that has been considered for low-cost computing in cloud data centers. Quality-of-service (QoS) assurance is one of the challenging issues in the VM consolidation problem since it is directly affected by the increase of resource utilization due to the consolidations. In this paper, we take advantage of Markov chain models to propose a novel approach for VM consolidation that can be used to explicitly set a desired level of QoS constraint in a data center to ensure the QoS goals while improving system utilization. For this purpose, an energy-efficient and QoS-aware best fit decreasing algorithm for VM placement is proposed, which considers QoS objective when determining the location of a migrating VM. This algorithm employs an online transition matrix estimator method to deal with the nonstationary nature of real workload data. We also propose new policies for detecting overloaded and underloaded hosts. The performance of our proposed algorithms is evaluated through simulations. The results show that the proposed VM consolidation algorithms in this paper outperforms the benchmark algorithms in terms of energy consumption, service-level agreement violations, and other cost factors.
C1 [Naeen, Hossein Monshizadeh; Zeinali, Esmaeil; Haghighat, Abolfazl Toroghi] Islamic Azad Univ, Qazvin Branch, Fac Comp & Informat Technol Engn, Qazvin 341851416, Iran.
C3 Islamic Azad University
RP Zeinali, E (corresponding author), Islamic Azad Univ, Qazvin Branch, Fac Comp & Informat Technol Engn, Qazvin 341851416, Iran.
EM zeinali@qiau.ac.ir
RI Monshizadeh Naeen, Hossein/AAA-9437-2020; Zeinali, Esmaeil/AAO-3759-2021
OI Monshizadeh Naeen, Hossein/0000-0002-3740-6915; Zeinali,
   Esmaeil/0000-0002-7099-5934
CR Abadi RMB, 2018, SOFTWARE PRACT EXPER, V48, P1688, DOI 10.1002/spe.2582
   Abadi RMB, 2018, CLUSTER COMPUT, V21, P1711, DOI 10.1007/s10586-018-2806-7
   [Anonymous], 2018, ENCY BIOINFORMATICS
   [Anonymous], P 44 ANN IEEE ACM IN
   Arianyan E, 2017, J NETW COMPUT APPL, V78, P43, DOI 10.1016/j.jnca.2016.09.016
   Arianyan E, 2015, COMPUT ELECTR ENG, V47, P222, DOI 10.1016/j.compeleceng.2015.05.006
   Asyabi Esmail, 2015, International Journal of Modern Education and Computer Science, V7, P61, DOI 10.5815/ijmecs.2015.04.07
   Beloglazov A, 2015, CONCURR COMP-PRACT E, V27, P1310, DOI 10.1002/cpe.3314
   Beloglazov A, 2013, IEEE T PARALL DISTR, V24, P1366, DOI 10.1109/TPDS.2012.240
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Buyya R., 2010, ENERGY EFFICIENT MAN
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Castañé GG, 2013, SIMUL MODEL PRACT TH, V39, P56, DOI 10.1016/j.simpat.2013.05.002
   Chen S, 2019, 2019 ARCH SUPP PROGR
   Delimitrou C, 2013, ACM T COMPUT SYST, V31, DOI 10.1145/2556583
   Delimitrou C, 2014, ACM SIGPLAN NOTICES, V49, P127, DOI 10.1145/2541940.2541941
   Delimitrou C, 2013, ACM SIGPLAN NOTICES, V48, P77, DOI 10.1145/2499368.2451125
   Fan XB, 2007, CONF PROC INT SYMP C, P13, DOI 10.1145/1273440.1250665
   Farahnakian F, 2015, IEEE T SERV COMPUT, V8, P187, DOI 10.1109/TSC.2014.2382555
   Feller E, 2012, P 2012 12 IEEE ACM I
   Gao YQ, 2014, COMPUT ELECTR ENG, V40, P1621, DOI 10.1016/j.compeleceng.2013.11.001
   Garg SK, 2014, J NETW COMPUT APPL, V45, P108, DOI 10.1016/j.jnca.2014.07.030
   Govindan Sriram., 2011, P 2 ACM S CLOUD COMP, p22:1
   Horri A, 2014, J SUPERCOMPUT, V69, P1445, DOI 10.1007/s11227-014-1224-8
   Jararweh Y, 2014, SIMUL MODEL PRACT TH, V49, P180, DOI 10.1016/j.simpat.2014.09.003
   Kurowski K, 2013, SIMUL MODEL PRACT TH, V39, P135, DOI 10.1016/j.simpat.2013.08.007
   KyoungSoo Park, 2006, Operating Systems Review, V40, P65, DOI 10.1145/1113361.1113374
   Lee YC, 2012, J SUPERCOMPUT, V60, P268, DOI 10.1007/s11227-010-0421-3
   Li HJ, 2017, CLUSTER COMPUT, V20, P2793, DOI 10.1007/s10586-017-0893-5
   Lu K, 2013, IEEE 6 INT C CLOUD C
   Manvi SS, 2014, J NETW COMPUT APPL, V41, P424, DOI 10.1016/j.jnca.2013.10.004
   Moges FF, 2019, J CLOUD COMPUT-ADV S, V8, DOI 10.1186/s13677-019-0126-y
   Montgomery SL, 2009, J SPEC TRANSL, P6
   Naeen HM, 2020, J SUPERCOMPUT, V76, P1903, DOI 10.1007/s11227-018-2431-5
   Paige C. C., 1975, Journal of Statistical Computation and Simulation, V4, P173, DOI 10.1080/00949657508810122
   Rajabzadeh M, 2017, J SUPERCOMPUT, V73, P2001, DOI 10.1007/s11227-016-1900-y
   Rao KS, 2015, FUTURE GENER COMP SY, V50, P87, DOI 10.1016/j.future.2014.09.009
   Rimal BP, 2009, NCM 09 P 2009 5 INT
   Ross SM, 2013, SIMULATION, V5th
   Speitkamp B, 2010, IEEE T SERV COMPUT, V3, P266, DOI 10.1109/TSC.2010.25
   Srikantaiah S, 2008, USENIX HOTPOWER 08 W, V12, P1
   Tang ML, 2015, NEURAL PROCESS LETT, V41, P211, DOI 10.1007/s11063-014-9339-8
   Verma A., 2009, P 2009 C USENIX ANN
   Wang YF, 2014, SUSTAIN COMPUT-INFOR, V4, P52, DOI 10.1016/j.suscom.2014.02.001
   Zhang Long., 2013, International Journal of Hybrid Information Technology, V6, P333, DOI [10.14257/ijhit.2013.6.6.30, DOI 10.14257/IJHIT.2013.6.6.30]
   Zhang S, 2016, IEEE T PARALL DISTR, V27, P964, DOI 10.1109/TPDS.2015.2425403
   Zheng Q, 2012, J PARALLEL DISTR COM, V72, P27, DOI 10.1016/j.jpdc.2011.09.001
NR 47
TC 11
Z9 11
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2020
VL 50
IS 2
BP 161
EP 183
DI 10.1002/spe.2764
EA DEC 2019
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KA5NF
UT WOS:000502542700001
DA 2024-07-18
ER

PT J
AU Rong, GP
   Jin, ZF
   Zhang, H
   Zhang, YW
   Ye, WH
   Shao, D
AF Rong, Guoping
   Jin, Zefeng
   Zhang, He
   Zhang, Youwen
   Ye, Wenhua
   Shao, Dong
TI DevDocOps: Enabling continuous documentation in alignment with DevOps
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automated documentation; continuous delivery; continuous documentation;
   DevDocOps; DevOps
AB The proliferation of DevOps enables significant acceleration and automation of the delivery and deployment of massive software products. Unfortunately, the development of supporting documents that is vital for large-scale software systems in many cases does not keep pace with the rhythm of feature delivery using DevOps in practice, which becomes the bottleneck for many software organizations to deliver full value to the customers as claimed by the DevOps. This paper proposes, implements, and evaluates an integrated approach, DevDocOps, for continuous automated documentation, in particular for DevOps. With DevDocOps, supporting documents are created along with the development process simultaneously by various roles within a DevOps project, which largely guarantees the accuracy and integrity of documents as well as significantly increases their delivery speed. Within an established delivery chain, a set of templates are created to collect and transform the required information from its origin to the target documents for delivery. A real system, iDoc, is implemented to map, collect, and synthesize the information from document templates and automate the documentation process. DevDocOps has been successfully adopted in a top-tier global telecommunication enterprise to support more than 5000 users with different roles related to documentation. The lag time between the releases of the product version and its supporting document has been shortened from 1 to 2 months on average to less than 2 days. DevDocOps extends the scope of DevOps and enhances the value delivery by supporting continuous documentation and bridges the gap between feature delivery and document delivery with automation.
C1 [Rong, Guoping; Zhang, He; Shao, Dong] Nanjing Univ, Software Inst, 22 Hankou Rd, Nanjing 210008, Peoples R China.
   [Jin, Zefeng; Zhang, Youwen; Ye, Wenhua] ZTE, Wireless Prod R&D Inst, Nanjing, Jiangsu, Peoples R China.
C3 Nanjing University; ZTE
RP Shao, D (corresponding author), Nanjing Univ, Software Inst, 22 Hankou Rd, Nanjing 210008, Peoples R China.
EM dongshao@nju.edu.cn
RI Shao, Dong/O-3805-2019; Rong, Guoping/CAH-6145-2022; Rong,
   Guoping/CAF-0529-2022
OI Shao, Dong/0000-0002-3253-2680; Shao, Dong/0000-0001-6500-0341
FU National Natural Science Foundation of China [61572251]
FX National Natural Science Foundation of China, Grant/Award Number:
   61572251
CR Ariel M, 2015, WHAT CAN DEVOPS DO Y
   Beck K., 2011, MANIFESTO AGILE SOFT
   de Montcheuil Y, 2016, APPL MICROSERVICES D
   Diaz O, 2009, 9 ACM S DOC ENG MUN
   Evia C, 2017, SIGDOC'17: PROCEEDINGS OF THE 35TH ACM INTERNATIONAL CONFERENCE ON THE DESIGN OF COMMUNICATION, DOI 10.1145/3121113.3121204
   Gentle A, 2018, CONTINUOUS INTEGRATI
   Kaplan N, 2018, DEATH TECHNICAL WRIT
   Kelly W., 2018, MAKE DEVOPS DOCUMENT
   Kim G., 2014, 3 WAYS PRINCIPLES UN
   Kratky R, 2018, DEVOPS MEETS DOCS DO
   lokori, 2016, DOCUMENTATION PIPELI
   OASIS, 2018, DARW INF TYP ARCH 2
   Priestley M, 2001, TECH COMMUN, V48, P352
   Priestley M, 2001, 19 ANN INT C COMP DO
   Riley C, 2018, CONTINUOUS DEVOPS DO
   Riley C., 2015, DOCUMENTING DEVOPS A
   Rivera J, 2018, GARTNER SAYS 2016 DE
   Rong G, 2019, 41 ACM IEEE INT C SO
   Turcotte J, 2018, DOCOPS CA TECHNOLOGI
   WAITS T, 2014, IEEE INT PROF COMMUN
   Waits T., 2015, 3 CHALLENGES DOCUMEN
   Waterhouse H., 2018, DOCUMENTATION DEVOPS
NR 22
TC 6
Z9 6
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2020
VL 50
IS 3
SI SI
BP 210
EP 226
DI 10.1002/spe.2770
EA NOV 2019
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KH3BI
UT WOS:000499030900001
DA 2024-07-18
ER

PT J
AU Akram, J
   Mumtaz, M
   Luo, P
AF Akram, Junaid
   Mumtaz, Majid
   Luo, Ping
TI IBFET: Index-based features extraction technique for scalable code clone
   detection at file level granularity
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big code; clone detection; code similarity detection; plagiarism
   detection; software reuse; software security and maintenance
ID SYSTEM
AB Many techniques have been developed over the years to detect code clones in different software systems to maintain security measures. These techniques often require the source code to compare the subject system against a very large data set of big code. This paper presents index-based features extraction technique (IBFET) to detect code clones at a very large-scale level to billions of LOC at file level granularity. We performed preprocessing, indexing, and clone detection for more than 324 billion of LOC using a Hadoop distributed environment, which is quite faster and more efficient as compared to existing distributed indexing and clone detection techniques; meanwhile, it detects all three types of clones efficiently. The MapReduce rule of divide and conquer is used for a count and retrieve the similar features between different systems. We evaluated the execution time, scalability, precision, and recall of IBFET by using a well-known clone detection data set IJaDataset and BigCloneBench; furthermore, we compared the results with other state-of-the-art tools. Our approach is faster, flexible, scalable, and provides accurate results with high authenticity and can be implemented at a large-scale level.
C1 [Akram, Junaid; Mumtaz, Majid; Luo, Ping] Tsinghua Univ, Sch Software, Key Lab Informat Syst Secur, Beijing, Peoples R China.
C3 Tsinghua University
RP Akram, J (corresponding author), Tsinghua Univ, Sch Software, Key Lab Informat Syst Secur, Beijing, Peoples R China.
EM znd15@mails.tsinghua.edu.cn
RI Mumtaz, Majid/E-9400-2018; Akram, Junaid/AAX-2254-2020
OI Mumtaz, Majid/0000-0002-5043-5550; Akram, Junaid/0000-0003-1752-6124
FU National Natural Science Foundation of China [90818021, 9071803]
FX National Natural Science Foundation of China, Grant/Award Number:
   90818021 and 9071803
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   AKRAM J, 2019, 2019 12 IEEE C SOFTW
   AKRAM J, 2019, INT J INF COMPUT SEC, V11
   AKRAM J, 2019, IET INF SECUR
   Akram J, 2018, P INT COMP SOFTW APP, P100, DOI 10.1109/COMPSAC.2018.00021
   Akram Junaid, 2018, P SEKE 2018 30 INT C, P354
   Alam S, 2017, COMPUT SECUR, V65, P230, DOI 10.1016/j.cose.2016.11.011
   ALOMARI F, 2016, P 31 ANN ACM S APPL
   Bag S, 2019, INFORM SCIENCES, V483, P53, DOI 10.1016/j.ins.2019.01.023
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Carver JC, 2017, IEEE SOFTWARE, V34, P105, DOI 10.1109/MS.2017.51
   Charalampidou S, 2017, P XP2017 SCI WORKSH, P1
   Cheng SB, 2017, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON NUCLEAR ENGINEERING, 2017, VOL 6
   Cheng X, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   CHOI E, 2011, P 5 INT WORKSH SOFTW
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   DANG Y, 2017, 2017 IEEE ACM 39 IN
   DAVEY N, 1995, INT J APPL SOFTW TEC
   DEWIT M, 2009, 2009 IEEE INT C SOFT
   Evans WS, 2009, SOFTWARE QUAL J, V17, P309, DOI 10.1007/s11219-009-9074-y
   GHOSH A, 2018, GSTF J COMPUT, V5
   GODE N, 2009, 2009 13 EUR C SOFTW
   Gupta A, 2018, LECT NOTE DATA ENG, V4, P27, DOI 10.1007/978-981-10-4600-1_3
   Han ZM, 2007, CHINA PET PROCESS PE, P29
   Hassanian-esfahani R, 2018, EXPERT SYST APPL, V99, P203, DOI 10.1016/j.eswa.2018.01.014
   HATANO T, 2017, P 25 INT C PROGR COM
   Higo Y, 2002, LECT NOTES COMPUT SC, V2559, P185
   Hummel B, 2010, PROC IEEE INT CONF S
   JOGI VD, 2016, 2016 3 INT C REC ADV
   Johnson J. H., 1993, Proceedings CASCON '93, P171
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   KAPSER C, 2005, 21 IEEE INT C SOFTW
   KEUNING H, 2017, P 2017 ACM C INN TEC
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kim S, 2017, IEEE SOI3DSUB MICRO
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Koschke R, 2012, EUR CON SFTWR MTNCE, P309, DOI 10.1109/CSMR.2012.37
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   KRUTZ DE, 2016, P 31 ANN ACM S APPL
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   LYU F, 2016, 2016 IEEE TRUSTC BIG
   Mahmud MS, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON TELECOMMUNICATIONS AND PHOTONICS (ICTP)
   MARCUS A, 2001, P 16 ANN INT C AUT S
   MATSUSHITA T, 2017, P 2017 ACM SIGPLAN W
   MISU MRH, 2017, 2017 24 AS PAC SOFTW
   MONDAL M, 2017, P 25 INT C PROGR COM
   Mondelli M, 2017, IEEE WIREL COMMUNN
   Mubarak-Ali AF, 2015, OPEN SOURCE TECHNOLOGY: CONCEPTS, METHODOLOGIES, TOOLS, AND APPLICATIONS, P1951, DOI 10.4018/978-1-4666-7230-7.ch100
   Nishi MA, 2018, J SYST SOFTWARE, V137, P130, DOI 10.1016/j.jss.2017.11.039
   Ragkhitwetsagul C, 2017, INT WORKS SOFTW CLON, P8
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   RIEGER M, 2005, THESIS
   Roy A, 2018, IEEE INT CONF COMM
   Roy CK, 2008, WORK CONF REVERSE EN, P81, DOI 10.1109/WCRE.2008.54
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   SAINI V, 2016, P 38 INT C SOFTW ENG
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sajnani H, 2015, J SOFTW-EVOL PROC, V27, P402, DOI 10.1002/smr.1707
   SHENEAMER A, 2016, INT J COMPUTER APPL, V137, P1, DOI DOI 10.5120/IJCA2016908896
   Su FH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P702, DOI 10.1145/2950290.2950321
   SVAJLENKO J, 2017, 2017 IEEE ACM 39 INT
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Tekchandani R, 2017, COMPUT ELECTR ENG, V61, P15, DOI 10.1016/j.compeleceng.2017.05.011
   UEDA Y, 2002, P 8 IEEE S SOFTW MET
   Wahler V, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P128
   WALENSTEIN A, 2006, DAGST SEM P WAD GERM
   Wang P, 2018, DESTECH TRANS SOC
   Yu D, 2017, IEEE DECIS CONTR P
   YUKI Y, 2017, 2017 IEEE 11 INT WOR
NR 75
TC 7
Z9 7
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2020
VL 50
IS 1
BP 22
EP 46
DI 10.1002/spe.2759
EA OCT 2019
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JR9RB
UT WOS:000491597500001
DA 2024-07-18
ER

PT J
AU Fan, YK
   Lin, XD
   Liang, WH
   Wang, J
   Tan, G
   Lei, X
   Jing, L
AF Fan, Yongkai
   Lin, Xiaodong
   Liang, Wei
   Wang, Jinghan
   Tan, Gang
   Lei, Xia
   Jing, Lei
TI TraceChain: A blockchain-based scheme to protect data confidentiality
   and traceability
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ABE; cloud computing; confidentiality; data sharing
AB The risk of sharing data in cloud computing has gathered increasing attention. After the owner of some confidential data outsources the data to cloud storage services and shares it with others, the data owner lost the control to the data to a large extent. To achieve data sharing while keeping data confidentiality, attribute-based encryption (ABE) can be employed by cloud storage services. However, ABE can only guarantee that outsourced data on the cloud is decrypted by attribute-satisfying users but cannot restrict data from being accessed by dishonest users whose attributes also satisfy the access-control policy. It is impossible for the data owner to control the shared data after it has been decrypted by dishonest users, especially when a set of attribute-satisfying dishonest users may collude. To address this concern, we propose a traceable data sharing scheme called TraceChain. In TraceChain, data is encrypted over a new CP-ABE scheme called E-CP-ABE. Furthermore, the system parameters for generating the private key in E-CP-ABE are uploaded to the private blockchain and transactions are performed on the chain. The data owner can obtain the identity of users by monitoring system parameters simultaneously and control data sharing on the blockchain. To prove the security of our scheme, the security analysis is given in this paper. Meanwhile, experimental results also show that our system is viable and efficient.
C1 [Fan, Yongkai; Lin, Xiaodong; Wang, Jinghan; Lei, Xia; Jing, Lei] China Univ Petr, Beijing Key Lab Petr Data Min, Beijing, Peoples R China.
   [Fan, Yongkai; Lin, Xiaodong; Wang, Jinghan; Lei, Xia; Jing, Lei] China Univ Petr, Dept Comp Sci & Technol, Beijing, Peoples R China.
   [Liang, Wei] Xiamen Univ Technol, Dept Comp Sci & Technol, Xiamen 361024, Fujian, Peoples R China.
   [Tan, Gang] Penn State Univ, Dept Comp Sci & Engn, State Coll, PA USA.
C3 China University of Petroleum; China University of Petroleum; Xiamen
   University of Technology; Pennsylvania Commonwealth System of Higher
   Education (PCSHE); Pennsylvania State University
RP Liang, WH (corresponding author), Xiamen Univ Technol, Dept Comp Sci & Technol, Xiamen 361024, Fujian, Peoples R China.
EM wliang@xmut.edu.cn
RI Fan, Yongkai/AEX-2951-2022; lei, xia/T-5940-2017
OI liang, wei/0000-0003-3813-3223; Tan, Gang/0000-0001-6109-6091
FU National Science Foundation of China [61572188]; Scientific Research
   Program of the New Century Excellent Talents in Fujian Province
   University, Fujian Provincial Natural Science Foundation of China [2018
   J01570]; CERNET Innovation Project [NGII20180406]; Beijing Higher
   Education Young Elite Teacher Project [YETP0683]; Beijing Higher
   Education Teacher Project [00001149]
FX National Science Foundation of China, Grant/Award Number: Grant61572188;
   Scientific Research Program of the New Century Excellent Talents in
   Fujian Province University, Fujian Provincial Natural Science Foundation
   of China, Grant/Award Number: 2018 J01570; CERNET Innovation Project,
   Grant/Award Number: NGII20180406; Beijing Higher Education Young Elite
   Teacher Project, Grant/Award Number: YETP0683; Beijing Higher Education
   Teacher Project, Grant/Award Number: 00001149
CR [Anonymous], 1996, SECURE SCHEMES SECRE
   [Anonymous], 2011, P 6 ACM S INF COMP C, DOI DOI 10.1007/978-3-642-19379-8_19
   Barhanpure A, 2018, INT S SEC COMP COMM
   Bethencourt J, 2007, P IEEE S SECUR PRIV, P321, DOI 10.1109/sp.2007.11
   BISWAS K, 2016, 2016 IEEE 18 INT C H, DOI [DOI 10.1109/HPCC-SMARTCITY-DSS.2016.178, 10.1109/HPCC-SmartCity-DSS.2016.0198]
   Castro M, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P173, DOI 10.1145/571637.571640
   Eyal I, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P45
   Gervais A., 2016, P 2016 ACMSIGSAC C C, P3
   Goyal V, 2006, P 13 ACM C COMP COMM
   Hur J, 2011, IEEE T PARALL DISTR, V22, P1214, DOI 10.1109/TPDS.2010.203
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Lewko A, 2010, ANN INT C THEOR APPL
   Lewko A, 2011, LECT NOTES COMPUT SC, V6632, P547, DOI 10.1007/978-3-642-20465-4_30
   Li M, 2013, IEEE T PARALL DISTR, V24, P131, DOI 10.1109/TPDS.2012.97
   Liang W, 2019, FUTURE GENER COMP SY, V100, P132, DOI 10.1016/j.future.2019.04.040
   Liang W, 2019, IEEE T IND INFORM, V15, P3582, DOI 10.1109/TII.2019.2907092
   Liang W, 2019, FUTURE GENER COMP SY, V92, P383, DOI 10.1016/j.future.2018.09.002
   Liu ZC, 2018, J NETW COMPUT APPL, V108, P112, DOI 10.1016/j.jnca.2018.01.016
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mao XP, 2016, IEEE T DEPEND SECURE, V13, P533, DOI 10.1109/TDSC.2015.2423669
   Merkle RC, 1980, IEEE S SEC PRIV OAKL
   Nakamoto S., 2008, DECENT BUS REV, V21260, DOI https://bitcoin.org/bitcoin.pdf
   Ning J., 2018, IEEE Transactions on Services Computing
   Ning JT, 2015, IEEE T INF FOREN SEC, V10, P1274, DOI 10.1109/TIFS.2015.2405905
   Poon J., 2016, The bitcoin lightning network: Scalable off-chain instant payments
   Rouselakis Y., 2013, P 2013 ACM SIGSAC C, P463
   Sahai A, 2005, LECT NOTES COMPUT SC, V3494, P457, DOI 10.1007/11426639_27
   Swan Melanie, 2015, BLOCKCHAIN BLUEPRINT
   Wang JY, 2017, CALCIFIED TISSUE INT, V100, P55, DOI 10.1007/s00223-016-0201-z
   Waters B, 2008, INT WORKSH PUBL KEY
   Waters B, 2011, LECT NOTES COMPUT SC, V6571, P53, DOI 10.1007/978-3-642-19379-8_4
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Yue X, 2016, J MED SYST, V40, DOI 10.1007/s10916-016-0574-6
   Zhang R, 2017, PAPER PRESENTED AT 2
   Zheng ZB, 2017, IEEE INT CONGR BIG, P557, DOI 10.1109/BigDataCongress.2017.85
   Zhou J, 2015, IEEE INFOCOM SER
NR 36
TC 22
Z9 26
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 115
EP 129
DI 10.1002/spe.2753
EA OCT 2019
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000491818500001
DA 2024-07-18
ER

PT J
AU Sharma, S
   Sodhi, B
AF Sharma, Shipra
   Sodhi, Balwinder
TI Using Stack Overflow content to assist in code review
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE automated software engineering; code review; crowd knowledge; software
   development; Stack Overflow
ID SEARCH
AB An essential goal for programmers is to minimize the cost of identifying and correcting defects in source code. Code review is commonly used for identifying programming defects. However, manual code review has some shortcomings: (1) it is time-consuming and (2) outcomes are subjective and depend on the skills of reviewers. An automated approach for assisting in code reviews is thus highly desirable. We present a tool for assisting in code review and results from our experiments evaluating the tool in different scenarios. The tool leveraged content available from professional programmer support forums (eg, StackOverflow.com) to determine potential defectiveness of a given piece of source code. The defectiveness is expressed on the scale of {Likely defective, neutral, unlikely to be defective}. The basic idea employed in the tool is (1) to identify a set P of discussion posts on Stack Overflow such that each p is an element of P contains source code fragment(s), which sufficiently resemble the input code C being reviewed, and (2) to determine the likelihood of C being defective by considering all p is an element of P. A novel aspect of our approach is to use document fingerprinting for comparing two pieces of source code. Our choice of document fingerprinting technique is inspired by source code plagiarism detection tools where it has proven to be very successful. In the experiments that we performed to verify the effectiveness of our approach, source code samples from more than 300 GitHub open-source repositories were taken as input. An F1 score of 0.94 has been achieved in identifying correct/relevant results.
C1 [Sharma, Shipra; Sodhi, Balwinder] Indian Inst Technol Ropar, Dept Comp Sci & Engn, 101 Ramanujan Block,Bara Phool, Rupnagar 140001, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Ropar
RP Sodhi, B (corresponding author), Indian Inst Technol Ropar, Dept Comp Sci & Engn, 101 Ramanujan Block,Bara Phool, Rupnagar 140001, India.
EM sodhi@iitrpr.ac.in
OI Sodhi, Balwinder/0000-0001-7137-5529
CR [Anonymous], P 11 WORK C MIN SOFT
   [Anonymous], 2014, P 52 ANN M ASS COMP
   [Anonymous], 2014, Eighth Int. AAAI Conf. Weblogs Soc. Media
   [Anonymous], 2013, P 2013 C EMPIRICAL M
   Cambria E, 2014, IEEE COMPUT INTELL M, V9, P48, DOI 10.1109/MCI.2014.2307227
   DiNoia T, 2014, SOFTW ARCH 8 EUR C V
   Honsel V, 2015, 2015 IEEE ACM 12 WOR
   Huizinga D., 2007, AUTOMATED DEFECT PRE
   Jenkins, JENK BUILD PIP EX EV
   Littlewood B, 1997, IEEE T SOFTWARE ENG, V23, P673, DOI 10.1109/32.637384
   McConnell S. C., 1993, Code complete: A practical handbook of software construction
   McEntire R, 2016, DRUG DISCOV TODAY, V21, P826, DOI 10.1016/j.drudis.2016.03.006
   McGraw G, 2008, COMPUTER, V41, P107, DOI 10.1109/MC.2008.514
   Mishne A, 2012, ACM SIGPLAN NOTICES, V47, P997, DOI 10.1145/2398857.2384689
   Movshovitz-Attias D., 2013, P 2013 IEEE ACM INT
   Ponzanelli L, 2013, 35 INT C SOFTW ENG I
   Rahman MM, 2014, 2014 SOFTW EV WEEK I
   SCHLEIMER S, 2003, P 2003 ACM SIGMOD IN
   Sommerville I., 2010, SOFTWARE ENG
   Synopsys Inc, 2014, COV SCAN OP SOURC RE
   Thummalapenta S, 2007, P 22 IEEE ACM INT C
   Treude Christoph, 2011, 33 INT C SOFTW ENG I
   ubrani D, 2003, P 25 INT C SOFTW ENG
   Vasilescu B, 2013, 2013 INT C SOC COMP
   Wang S, 2013, P 28 ANN ACM S APPL
   Zanaty FE, 2018, P 12 ACM IEEE INT S
NR 26
TC 3
Z9 3
U1 0
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2019
VL 49
IS 8
BP 1255
EP 1277
DI 10.1002/spe.2706
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IG7YI
UT WOS:000474013200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mukherjee, A
   De, D
   Buyya, R
AF Mukherjee, Anwesha
   De, Debashis
   Buyya, Rajkumar
TI E<SUP>2</SUP>R-F<SUP>2</SUP>N: Energy-efficient retailing using a
   femtolet-based fog network
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE femtolet; power; retail; sensor; smart trolley
ID AUGMENTED REALITY; RESOURCE-MANAGEMENT; BIG DATA; MOBILE; INTERNET;
   COMMUNICATION; SIMULATION; CHALLENGES; ANALYTICS; TOOLKIT
AB Energy-efficient smart retail system design is a challenging research area. In this paper, we propose an automated retail system using a femtolet-based fog network. A femtolet is an indoor base station providing computation and storage. Femtolets in our system work as indoor base stations and maintain databases of the products located in their respective coverage areas. The femtolets switch to active or idle mode according to the user's presence in its coverage. A smart trolley is proposed for our retailing system, which guides the user to the particular product type selected by the user. The user, after entering the shopping mall, carries the smart trolley. The customer selects and purchases products using this trolley. On the basis of product purchasing, the respective databases maintained inside the femtolets are updated. An Android application for the proposed retailing is developed. We compare the power consumption and delay of the proposed retail system with the existing retail system. Simulation analyses illustrate that the proposed approach reduces power by approximately 89% and 94%, respectively, in comparison to the localcloudserver-based and remotecloudserver-based retail systems. Thus, we refer to the proposed system as a green retail system. The performance of the proposed system through experimental analysis is also evaluated.
C1 [Mukherjee, Anwesha] Indian Inst Technol Kharagpur, Dept Comp Sci & Engn, Kharagpur, W Bengal, India.
   [De, Debashis] Maulana Abul Kalam Azad Univ Technol, Dept Comp Sci & Engn, Ctr Mobile Cloud Comp, BF-142,Salt Lake,Sect 1, Kolkata 700064, W Bengal, India.
   [De, Debashis] Univ Western Australia, Dept Phys, 35 Stirling Highway, Perth, WA 6009, Australia.
   [Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic, Australia.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kharagpur; Maulana Abul Kalam Azad University of
   Technology; University of Western Australia; University of Melbourne
RP De, D (corresponding author), Maulana Abul Kalam Azad Univ Technol, Dept Comp Sci & Engn, Ctr Mobile Cloud Comp, BF-142,Salt Lake,Sect 1, Kolkata 700064, W Bengal, India.; De, D (corresponding author), Univ Western Australia, Dept Phys, 35 Stirling Highway, Perth, WA 6009, Australia.
EM dr.debashis.de@gmail.com
RI De, Debashis/AAE-1221-2020; De, Debashis/AAO-5800-2020; Mukherjee,
   Anwesha/J-1409-2018; Buyya, Rajkumar/C-3424-2009
OI De, Debashis/0000-0002-9688-9806; Mukherjee,
   Anwesha/0000-0001-9110-8591; Buyya, Rajkumar/0000-0001-9754-6496
CR Abed SS, 2018, ADV THE PRAC EMER MA, P107, DOI 10.1007/978-3-319-75013-2_10
   Aijaz A, 2013, IEEE WIREL COMMUN, V20, P104, DOI 10.1109/MWC.2013.6507401
   Anderson M, 2018, FUTURE GENER COMP SY, V80, P400, DOI 10.1016/j.future.2017.07.006
   [Anonymous], IEEE T CLOUD COMPUT
   Baccarelli E, 2017, IEEE ACCESS, V5, P9882, DOI 10.1109/ACCESS.2017.2702013
   Basu A, 2011, INT C INF SYST SEC K
   Bonetti F, 2018, PROGR IS, P119, DOI 10.1007/978-3-319-64027-3_9
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Bradlow ET, 2017, J RETAILING, V93, P79, DOI 10.1016/j.jretai.2016.12.004
   Bujari A, 2018, MOBILE NETW APPL, V23, P147, DOI 10.1007/s11036-017-0835-8
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chandrasekhar V, 2008, IEEE COMMUN MAG, V46, P59, DOI 10.1109/MCOM.2008.4623708
   Chirakan J, 2018, US patent, Patent No. [9,910,501, 9910501]
   Costa Marim Segura D, 2017, P 20 ACM INT C MOD A
   Cruz E, 2019, VIRTUAL REAL-LONDON, V23, P281, DOI 10.1007/s10055-018-0338-3
   Dacko SG, 2017, TECHNOL FORECAST SOC, V124, P243, DOI 10.1016/j.techfore.2016.09.032
   Dautov R, 2018, SOFTWARE PRACT EXPER, V48, P1475, DOI 10.1002/spe.2586
   De Debashis., 2016, MOBILE CLOUD COMPUTI
   Di Rienzo A, 2015, ADJ P 2015 ACM INT J
   Dinh HT, 2013, WIREL COMMUN MOB COM, V13, P1587, DOI 10.1002/wcm.1203
   Fernando N, 2013, FUTURE GENER COMP SY, V29, P84, DOI 10.1016/j.future.2012.05.023
   Flores H, 2015, IEEE COMMUN MAG, V53, P80, DOI 10.1109/MCOM.2015.7060486
   Foroudi P, 2018, COMPUT HUM BEHAV, V80, P271, DOI 10.1016/j.chb.2017.11.014
   Gai KK, 2018, APPL SOFT COMPUT, V70, P12, DOI 10.1016/j.asoc.2018.03.056
   Gai KK, 2018, IEEE INTERNET THINGS, V5, P3059, DOI 10.1109/JIOT.2018.2830340
   Gai KK, 2018, IEEE T IND INFORM, V14, P3590, DOI 10.1109/TII.2017.2780885
   Gai KK, 2018, FUTURE GENER COMP SY, V85, P190, DOI 10.1016/j.future.2018.03.043
   Gai KK, 2016, J NETW COMPUT APPL, V59, P46, DOI 10.1016/j.jnca.2015.05.016
   Gamvroulas S, 2000, FUTURE GENER COMP SY, V16, P423, DOI 10.1016/S0167-739X(99)00066-7
   Grewal D, 2017, J RETAILING, V93, P1, DOI 10.1016/j.jretai.2016.12.008
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Kaur G, 2018, STUD BIG DATA, V30, P315, DOI 10.1007/978-3-319-60435-0_13
   Kelly S, 2007, 4868 RFC IETF TRUST
   Kirkpatrick K, 2013, COMMUN ACM, V56, P16, DOI 10.1145/2500468.2500473
   Kolb L, 2012, PROC VLDB ENDOW, V5, P1878, DOI 10.14778/2367502.2367527
   Kumar K, 2013, MOBILE NETW APPL, V18, P129, DOI 10.1007/s11036-012-0368-0
   Kune R, 2016, SOFTWARE PRACT EXPER, V46, P79, DOI 10.1002/spe.2374
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Mahmud R., 2018, INTERNET EVERYTHING, P103, DOI DOI 10.1007/978-981-10-5861-5_5
   Moorhouse N, 2018, PROGR IS, P133, DOI 10.1007/978-3-319-64027-3_10
   Mukherjee A, 2014, 2014 APPL INN MOB CO
   Mukherjee A, 2018, J SUPERCOMPUT, V74, P2412, DOI 10.1007/s11227-018-2269-x
   Mukherjee A, 2016, ENG SCI TECHNOL, V19, P260, DOI 10.1016/j.jestch.2015.08.001
   Mukherjee A, 2016, SIMUL MODEL PRACT TH, V62, P68, DOI 10.1016/j.simpat.2016.01.014
   Mukherjee A, 2013, COMPUT NETW, V57, P162, DOI 10.1016/j.comnet.2012.09.007
   Naranjo PGV, 2018, J SUPERCOMPUT, V74, P2470, DOI 10.1007/s11227-018-2274-0
   Naranjo PGV, 2017, J SUPERCOMPUT, V73, P733, DOI 10.1007/s11227-016-1785-9
   Naranjo PGV, 2018, J PARALLEL DISTRIBUT
   Paterson KG, 2006, ANN INT C THEOR APPL
   Rashid Z, 2017, FUTURE GENER COMP SY, V76, P248, DOI 10.1016/j.future.2016.11.030
   Roy DG, 2017, J SUPERCOMPUT, V73, P1672, DOI 10.1007/s11227-016-1872-y
   Sahami Shirazi A., 2018, INTERNET EVERYTHING, P3055, DOI [10.1145/2556288.2557189, DOI 10.1007/978-981-10-5861-5_6]
   Satyanarayanan M, 2009, IEEE PERVAS COMPUT, V8, P14, DOI 10.1109/MPRV.2009.82
   Schulten MB, 2015, INT REV RETAIL DISTR, V25, P516, DOI 10.1080/09593969.2015.1081099
   Sharma PK, 2018, IEEE INTERNET THINGS, V5, P1719, DOI 10.1109/JIOT.2018.2791999
   Shojafar M, 2017, J SUPERCOMPUT, V73, P5239, DOI 10.1007/s11227-017-2082-y
   Solano A, 2017, FUTURE GENER COMP SY, V76, P215, DOI 10.1016/j.future.2016.10.029
   Stark E, 2009, 2009 ANN COMP SEC AP
   Stefanidis A, 2013, GEOJOURNAL, V78, P319, DOI 10.1007/s10708-011-9438-2
   Ting CY, 2018, BIG DATA-US, V6, P42, DOI 10.1089/big.2017.0085
   van densBroek F, 2013, NORD C SEC IT SYST I
   Wang JX, 2018, IEEE INTERNET THINGS, V5, P1400, DOI 10.1109/JIOT.2018.2800003
   Yan L, 2009, IEEE INT C CLOUD COM
   Yi S., 2015, P 2015 WORKSH MOB BI, P37
NR 64
TC 6
Z9 6
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2019
VL 49
IS 3
BP 498
EP 523
DI 10.1002/spe.2673
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HN0HU
UT WOS:000459868900008
OA Green Published
DA 2024-07-18
ER

PT J
AU Simmhan, Y
   Ravindra, P
   Chaturvedi, S
   Hegde, M
   Ballamajalu, R
AF Simmhan, Yogesh
   Ravindra, Pushkara
   Chaturvedi, Shilpa
   Hegde, Malati
   Ballamajalu, Rashmi
TI Towards a data-driven IoT software architecture for smart city utilities
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data platforms; cloud computing; information integration; Internet
   of things; smart cities; stream processing; wireless sensor networks
ID INTERNET; THINGS; SYSTEMS
AB The Internet of things (IoT) is emerging as the next big wave of digital presence for billions of devices on the Internet. Smart cities are a practical manifestation of IoT, with the goal of efficient, reliable, and safe delivery of city utilities like water, power, and transport to residents, through their intelligent management. A data-driven IoT software platform is essential for realizing manageable and sustainable smart utilities and for novel applications to be developed upon them. Here, we propose such service-oriented software architecture to address 2 key operational activities in a smart utility: the IoT fabric for resource management and the data and application platform for decision-making. Our design uses Open Web standards and evolving network protocols, cloud and edge resources, and streaming big data platforms. We motivate our design requirements using the smart water management domain; some of these requirements are unique to developing nations. We also validate the architecture within a campus-scale IoT testbed at the Indian Institute of Science, Bangalore and present our experiences. Our architecture is scalable to a township or city while also generalizable to other smart utility domains. Our experiences serve as a template for other similar efforts, particularly in emerging markets and highlight the gaps and opportunities for a data-driven IoT software architecture for smart cities.
C1 [Simmhan, Yogesh; Ravindra, Pushkara; Chaturvedi, Shilpa; Hegde, Malati; Ballamajalu, Rashmi] Indian Inst Sci, Bangalore, Karnataka, India.
C3 Indian Institute of Science (IISC) - Bangalore
RP Simmhan, Y (corresponding author), Indian Inst Sci, Dept Computat & Data Sci, Bangalore 560012, Karnataka, India.
EM simmhan@iisc.ac.in
RI Sharma, Dr Yogesh Kumar/HKV-8683-2023; Li, Wang/M-1612-2019
OI Sharma, Dr Yogesh Kumar/0000-0002-3779-4380; Simmhan,
   Yogesh/0000-0003-4140-7774
FU Ministry of Electronics and Information Technology (MeitY), Government
   of India; Robert Bosch Center for Cyber Physical Systems (RBCCPS) at
   IISc; Microsoft's Azure for Research program; VMWare
FX Ministry of Electronics and Information Technology (MeitY), Government
   of India; Robert Bosch Center for Cyber Physical Systems (RBCCPS) at
   IISc; Microsoft's Azure for Research program; VMWare
CR Aloi G, 2017, J NETW COMPUT APPL, V81, P74, DOI 10.1016/j.jnca.2016.10.013
   Amrutur B, 2017, 2017 IEEE ACM 2 INT
   Amrutur B, 2016, INT WORKSH CYB PHYS
   Anjana G, 2016, IWA WAT LOSS C BENG
   [Anonymous], 2015, TECHNICAL REPORT
   [Anonymous], 2016, TECHNICAL REPORT
   [Anonymous], 2014, TECHNICAL REPORT
   [Anonymous], 2016, TECHNICAL REPORT
   [Anonymous], 2016, TECHNICAL REPORT
   [Anonymous], 2012, 6550 RFC
   [Anonymous], 2012, TECHNICAL REPORT
   Bassi A, 2013, Enabling things to talk
   Bertino E, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/3013520
   Bhagwan R, 2016, MICROSOFT RES INDIA
   Bhattacharya A, 2013, INT CONF COMMUN SYST
   Botta A, 2016, FUTURE GENER COMP SY, V56, P684, DOI 10.1016/j.future.2015.09.021
   Bouguettaya A, 2017, COMMUN ACM, V60, P64, DOI 10.1145/2983528
   Cardone G, 2013, IEEE COMMUN MAG, V51, P112, DOI 10.1109/MCOM.2013.6525603
   Chen D, 2017, SOFTWARE PRACT EXPER, V47, P1043, DOI 10.1002/spe.2508
   Chernyshev M, 2018, IEEE INTERNET THINGS, V5, P1637, DOI 10.1109/JIOT.2017.2786639
   Core Resource Directory, 2017, TECHNICAL REPORT
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   Eclipse Californium, 2017, ECLIPSE CALIFORNIUM
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Farres JC, 2015, P EUR BARC SPAIN
   Fortino G, 2017, COMPUT SCI ENG, V19, P68, DOI 10.1109/MCSE.2017.3421541
   Fremantle P, 2015, TECHNICAL REPORT
   Ghosh R, 2017, ACM T CYBER PHYS SYS
   Govindarajan N, 2014, P 20 INT C MAN DAT C
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guinard D, 2011, ARCHITECTING THE INTERNET OF THINGS, P97
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Harrison C, 2010, IBM J RES DEV, V54, DOI 10.1147/JRD.2010.2048257
   Huhns MN, 2005, IEEE INTERNET COMPUT, V9, P75, DOI 10.1109/MIC.2005.21
   Infrastructure L.E.C., 2015, IEEE STAND, V2015, P1
   ISO, 2016, TECHNICAL REPORT
   Jara AJ, 2015, SOFTWARE PRACT EXPER, V45, P1145, DOI 10.1002/spe.2274
   Kajimoto K., 2017, TECHNICAL REPORT
   Kim KD, 2012, P IEEE, V100, P1287, DOI 10.1109/JPROC.2012.2189792
   Kovatsch M, 2011, IEEE INT C MOB AD HO
   Lanza J, 2016, INT J SEMANT WEB INF, V12, P22, DOI 10.4018/IJSWIS.2016100102
   Lightweight Directory Access Protocol (LDAP), 2006, TECHNICAL REPORT
   Lohith Y, 2015, 2015 IEEE INT C MOB
   Misra P, 2015, IEEE INTERNET THINGS
   Molina B, 2014, IEEE SYS MAN CYBERN, P7, DOI 10.1109/SMC.2014.6973876
   Pautasso Cesare., 2008, WWW 08, P805
   Perez JL, 2014, P 23 INT C WORLD WID
   Radjou N., 2012, JUGAAD INNOVATION TH
   Ranjan R, 2014, IEEE CLOUD COMPUT, V1, P78, DOI 10.1109/MCC.2014.22
   Rathod N, PERFORMANCE ANAL WIR
   Ravindra P, 2017, SERV OR COMP 15 INT
   Sanchez L, 2014, COMPUT NETW, V61, P217, DOI 10.1016/j.bjp.2013.12.020
   Shukla A, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4257
   Simmhan Y, 2013, IEEE AIP COMPUT SCI
   Simmhan YL, 2008, INT J WEB SERV RES, V5, P1, DOI 10.4018/jwsr.2008040101
   Soldatos J., 2015, INTEROPERABILITY OPE
   Suhothayan S., 2011, Proceedings of the 2011 ACM workshop on Gateway computing environments, P43, DOI DOI 10.1145/2110486.2110493
   Toshniwa A, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P147, DOI 10.1145/2588555.2595641
   Varshney P, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P115, DOI 10.1109/ICFEC.2017.20
   Verma P, 2015, 2015 IEEE FIRST INTERNATIONAL SMART CITIES CONFERENCE (ISC2)
   Vilajosana I, 2013, IEEE COMMUN MAG, V51, P128, DOI 10.1109/MCOM.2013.6525605
   Vögler M, 2017, SOFTWARE PRACT EXPER, V47, P443, DOI 10.1002/spe.2424
   Xu L., 2014, INFORMAT, P1, DOI [DOI 10.1109/TII.2014.2300753, 10.1109/TII.2014.2300753]
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
   Zahariadis T, 2014, 2014 IEEE ACM 7 INT
   Zolertia, 2017, RE MOT
NR 66
TC 34
Z9 35
U1 1
U2 40
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2018
VL 48
IS 7
BP 1390
EP 1416
DI 10.1002/spe.2580
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI6XE
UT WOS:000434645700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tian, DH
   Xiong, X
   Hu, CZ
   Liu, P
AF Tian, Donghai
   Xiong, Xi
   Hu, Changzhen
   Liu, Peng
TI A policy-centric approach to protecting OS kernel from vulnerable LKMs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE OS kernel protection; static analysis; virtualization
AB Loadable kernel modules (LKMs) that contain vulnerabilities are a big threat to modern operating systems (OSs). The primary reason is that there is no protection mechanism inside the kernel space when the LKM is executed. As a result, kernel module exploitation can seriously affect the OS kernel security. Although many protection systems have been developed to address this problem in the past few years, there still remain some challenges: (1) How to automatically generate a security policy before the kernel module is enforced? (2) How to properly mediate the interactions between the kernel module and the OS kernel without modifications on the existing OS, hardware, and kernel module structure? To address these challenges, we present LKM guard (LKMG), a policy-centric system that can protect commodity OS kernel from vulnerable LKMs. Compared with previous systems, LKMG is able to generate a security policy from a kernel module and then enforce the policy during the run time. Generally, the working process of LKMG can be divided into 2 stages. First, we utilize static analysis to extract the kernel code and data access patterns from a kernel module's source code and then combine these patterns with the related memory address information to generate a security policy. Second, by leveraging the hardware-assisted virtualization technology, LKMG isolates the kernel module from the rest of the kernel and then enforces the kernel module's execution to obey the derived policy. The experiments show that our system can defend against various attacks launched by the compromised kernel module effectively with moderate performance cost.
C1 [Tian, Donghai; Hu, Changzhen] Beijing Inst Technol, Beijing Key Lab Software Secur Engn Tech, Beijing 100081, Peoples R China.
   [Xiong, Xi] Facebook Inc, Menlo Pk, CA 94025 USA.
   [Liu, Peng] Penn State Univ, University Pk, PA 16802 USA.
   [Tian, Donghai] Chinese Acad Sci, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing 100093, Peoples R China.
C3 Beijing Institute of Technology; Facebook Inc; Pennsylvania Commonwealth
   System of Higher Education (PCSHE); Pennsylvania State University;
   Pennsylvania State University - University Park; Chinese Academy of
   Sciences; Institute of Information Engineering, CAS
RP Tian, DH (corresponding author), Beijing Inst Technol, Beijing Key Lab Software Secur Engn Tech, Beijing 100081, Peoples R China.; Tian, DH (corresponding author), Chinese Acad Sci, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing 100093, Peoples R China.
EM donghaitad@gmail.com
RI Liu, Peng/A-4255-2013
FU National Natural Science Foundation of China (NSFC) [61602035]; National
   Key Research and Development Program of China [2016YFB0800700]; Open
   Found of Key Laboratory of Network Assessment Technology, Institute of
   Information Engineering, Chinese Academy of Sciences; ARO
   [W911NF-13-1-0421]; NSF [CNS-1422594, CNS-1505664]
FX National Natural Science Foundation of China (NSFC), Grant/Award Number:
   61602035; National Key Research and Development Program of China,
   Grant/Award Number: 2016YFB0800700; Open Found of Key Laboratory of
   Network Assessment Technology, Institute of Information Engineering,
   Chinese Academy of Sciences; ARO, Grant/Award Number: W911NF-13-1-0421
   (MURI); NSF, Grant/Award Number: CNS-1422594 and CNS-1505664
CR [Anonymous], P 6 C S OP SYST DES
   [Anonymous], P 16 INT C ARCH SUPP
   [Anonymous], P 2001 IEEE S SEC PR
   Barham P, 2006, P 19 ACM S OP SYST P
   Boyd-Wickizer Silas, 2010, P 2010 USENIX ANN TE
   Bulygin Y, 2007, BLACKH US LAS VEG NV
   Butt S, 2009, P 2009 ANN COMP SEC
   Butti L, 2008, J COMPUT VIROL HACKI, V4, P25, DOI 10.1007/s11416-007-0065-x
   Castro M., 2009, P ACM SIGOPS 22 S OP
   Chen HH, 2006, EURASIP J WIREL COMM, DOI 10.1155/WCN/2006/36040
   Chou A, 2011, P 18 ACM S OP SYST P
   Chubb P, 2004, GET MORE DEVICE DRIV
   Coverity, 2004, AN LIN KERN
   Das M, 2001, INT STAT AN S HEID B
   Dautenhahn N, 2015, ACM SIGPLAN NOTICES, V50, P191, DOI [10.1145/2694344.2694386, 10.1145/2775054.2694386]
   Elson J, 2004, LINUX FRAMEWORK USER
   Erlingsson u, 2008, P 7 S OP SYST DES IM
   Erlingsson Ulfar, 2005, TECHNICAL REPORT
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Evtyushkin Dmitry, 2016, MICR MICRO 2016 49 A, P1, DOI DOI 10.1109/MICRO.2016.7783743
   Ganapathy V, 2008, P 13 INT C ARCH SUPP
   Han S, 2017, BLACKH ASIA SING
   Intel, INT 64 IA 32 ARCH SO
   Leslie B, 2005, J COMPUT SCI TECH-CH, V20, P654, DOI 10.1007/s11390-005-0654-4
   Mao Yandong, 2011, P 23 ACM S OP SYST P
   Maynor D., 2007, OS X KERNEL MODE EXP
   MCCAMANT S., 2006, P 15 C USENIX SEC S
   Microsoft, 2006, ARCH US MOD DRIV FRA
   Necula GC, 2002, P 11 INT C COMP CONS
   Petroni N. L., 2006, P 15 USENIX SEC S VA
   SESHADRI A, 2007, P 21 ACM SIGOPS S OP
   Sun Y, 2013, P 43 ANN IEEE IFIP I
   Suzaki K., 2014, ADV INFORM COMPUTER, P48
   Swift MM, 2005, ACM T COMPUT SYST, V23, P77, DOI 10.1145/1047915.1047919
   US CERT/NIST, CVE20092407 USCERTNI
   Wagner David, 2002, P 9 ACM C COMP COMM
   Wahbe R, 1993, P 14 ACM S OP SYST E
   Williams D, 2008, P 8 USENIX C OP SYST
   Witchel Emmett, 2005, SOSP
   Xiong X., J MED VIROL
   Zheng H, 2015, COMPUT J, V58, P3035, DOI 10.1093/comjnl/bxv035
   ZHOU F., 2006, P 7 S OP SYST DES IM
NR 42
TC 3
Z9 3
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2018
VL 48
IS 6
BP 1269
EP 1284
DI 10.1002/spe.2576
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF5UQ
UT WOS:000432033700005
DA 2024-07-18
ER

PT J
AU De Beukelaer, H
   Davenport, GF
   De Meyer, G
   Fack, V
AF De Beukelaer, Herman
   Davenport, Guy F.
   De Meyer, Geert
   Fack, Veerle
TI JAMES: An object-oriented Java framework for discrete optimization using
   local search metaheuristics
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE discrete optimization; metaheuristics; local search; framework;
   object-oriented; Java
ID GENETIC DIVERSITY; CORE COLLECTIONS; MICROSATELLITE; ALGORITHM;
   PARALLEL; HUNTER; DESIGN
AB This paper describes the Java Metaheuristics Search framework (JAMES, v1.1): an object-oriented Java framework for discrete optimization using local search algorithms that exploits the generality of such metaheuristics by clearly separating search implementation and application from problem specification. A wide range of generic local searches are provided, including (stochastic) hill climbing, tabu search, variable neighbourhood search and parallel tempering. These can be applied to any user-defined problem by plugging in a custom neighbourhood for the corresponding solution type. Using an automated analysis workflow, the performance of different search algorithms can be compared in order to select an appropriate optimization strategy. Implementations of specific components are included for subset selection, such as a predefined solution type, generic problem definition and several subset neighbourhoods used to modify the set of selected items. Additional components for other types of problems (e.g. permutation problems) are provided through an extensions module which also includes the analysis workflow. In comparison with existing Java metaheuristics frameworks that mainly focus on population-based algorithms, JAMES has a much lower memory footprint and promotes efficient application of local searches by taking full advantage of move-based evaluation. Releases of JAMES are deployed to the Maven Central Repository so that the framework can easily be included as a dependency in other Java applications. More information can be found at http://www.jamesframework.org. The project is fully open source and hosted on GitHub. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [De Beukelaer, Herman; Fack, Veerle] Univ Ghent, Dept Appl Math Comp Sci & Stat, Krijgslaan 281 S9, B-9000 Ghent, Belgium.
   [Davenport, Guy F.; De Meyer, Geert] Bayer CropSci NV, Innovat Ctr, Technol Pk 38, B-9052 Zwijnaarde, Belgium.
C3 Ghent University; Bayer AG; Bayer CropScience
RP De Beukelaer, H (corresponding author), Univ Ghent, Dept Appl Math Comp Sci & Stat, Krijgslaan 281 S9, B-9000 Ghent, Belgium.
EM herman.debeukelaer@ugent.be
RI Davenport, Guy/S-3795-2017; Fack, Veerle/W-3830-2019; Davenport,
   Guy/AAY-5873-2020
OI Davenport, Guy/0000-0001-8013-4575; Fack, Veerle/0000-0002-0662-7176;
   Davenport, Guy/0000-0001-8013-4575; De Meyer, Geert/0000-0002-7073-2691;
   De Beukelaer, Herman/0000-0002-3968-7386
FU Research Foundation of Flanders (FWO); Ghent University; Hercules
   Foundation; Flemish Government-department EWI
FX Herman De Beukelaer is supported by a Ph.D. grant from the Research
   Foundation of Flanders (FWO). The computational resources (Stevin
   Supercomputer Infrastructure) and services used in this work were
   provided by the VSC (Flemish Supercomputer Center), funded by Ghent
   University, the Hercules Foundation and the Flemish
   Government-department EWI. Research Foundation of Flanders (FWO).
CR Alba Enrique, 2007, International Journal of Innovative Computing and Applications, V1, P74, DOI 10.1504/IJICA.2007.013403
   [Anonymous], ANN OPER RES, DOI DOI 10.1007/BF02078647
   [Anonymous], 4 INT S 26 NAT C OP
   [Anonymous], EUROGEN
   [Anonymous], 2010, HDB METAHEURISTICS
   [Anonymous], 20071220 SWINB U TEC
   Parejo JA, 2012, SOFT COMPUT, V16, P527, DOI 10.1007/s00500-011-0754-8
   BROWN AHD, 1989, GENOME, V31, P818, DOI 10.1139/g89-144
   Cahon S, 2004, J HEURISTICS, V10, P357, DOI 10.1023/B:HEUR.0000026900.92269.ec
   Carey J, 2002, SOFTWARE PRACT EXPER, V32, P789, DOI 10.1002/spe.459
   De Beukelaer H, 2012, BMC BIOINFORMATICS, V13, DOI 10.1186/1471-2105-13-312
   De Corte A, 2016, NETWORKS, V67, P187, DOI 10.1002/net.21673
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Di Gaspero L, 2003, SOFTWARE PRACT EXPER, V33, P733, DOI 10.1002/spe.524
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Earl DJ, 2005, PHYS CHEM CHEM PHYS, V7, P3910, DOI 10.1039/b509983h
   Hansen P, 2010, ANN OPER RES, V175, P367, DOI 10.1007/s10479-009-0657-6
   Johnson D. S., 1997, LOCAL SEARCH COMBINA, V1, P215
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kronfeld M, 2010, LECT NOTES COMPUT SC, V6073, P247, DOI 10.1007/978-3-642-13800-3_27
   Lukasiewycz M, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1723
   Odong TL, 2013, THEOR APPL GENET, V126, P289, DOI 10.1007/s00122-012-1971-y
   Odong TL, 2011, CROP SCI, V51, P2401, DOI 10.2135/cropsci2011.02.0095
   Parejo JA, 2003, LECT NOTES COMPUT SC, V2660, P886
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Reinelt G., 1991, ORSA Journal on Computing, V3, P376, DOI 10.1287/ijoc.3.4.376
   Smykal P, 2008, THEOR APPL GENET, V117, P413, DOI 10.1007/s00122-008-0785-4
   Thachuk C, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-243
   Ventura S, 2008, SOFT COMPUT, V12, P381, DOI 10.1007/s00500-007-0172-0
   White DR, 2012, GENET PROGRAM EVOL M, V13, P65, DOI 10.1007/s10710-011-9148-z
NR 30
TC 10
Z9 10
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2017
VL 47
IS 6
BP 921
EP 938
DI 10.1002/spe.2459
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EE
UT WOS:000403114000008
OA Green Published
DA 2024-07-18
ER

PT J
AU Zhang, WS
   Duan, PC
   Yang, LT
   Xia, F
   Li, ZW
   Lu, QH
   Gong, WJ
   Yang, S
AF Zhang, Weishan
   Duan, Pengcheng
   Yang, Laurence T.
   Xia, Feng
   Li, Zhongwei
   Lu, Qinghua
   Gong, Wenjuan
   Yang, Su
TI Resource requests prediction in the cloud computing environment with a
   deep belief network
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deep belief network; prediction; cloud computing; resource request
ID NEURAL-NETWORKS; SERIES
AB Accurate resource requests prediction is essential to achieve optimal job scheduling and load balancing for cloud Computing. Existing prediction approaches fall short in providing satisfactory accuracy because of high variances of cloud metrics. We propose a deep belief network (DBN)-based approach to predict cloud resource requests. We design a set of experiments to find the most influential factors for prediction accuracy and the best DBN parameter set to achieve optimal performance. The innovative points of the proposed approach is that it introduces analysis of variance and orthogonal experimental design techniques into the parameter learning of DBN. The proposed approach achieves high accuracy with mean square error of [10(-6),10(-5)], approximately 72% reduction compared with the traditional autoregressive integrated moving average predictor, and has better prediction accuracy compared with the state-of-art fractal modeling approach. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Zhang, Weishan; Duan, Pengcheng; Li, Zhongwei; Lu, Qinghua; Gong, Wenjuan] China Univ Petr, Dept Software Engn, 66 Changjiang West Rd, Qingdao 266580, Peoples R China.
   [Yang, Laurence T.] St Francis Xavier Univ, Dept Comp Sci, Antigonish, NS, Canada.
   [Xia, Feng] Dalian Univ Technol, Sch Software, Dalian 116620, Peoples R China.
   [Yang, Su] Fudan Univ, Coll Comp Sci & Technol, Shanghai 200433, Peoples R China.
C3 China University of Petroleum; Saint Francis Xavier University - Canada;
   Dalian University of Technology; Fudan University
RP Zhang, WS (corresponding author), China Univ Petr, Dept Software Engn, 66 Changjiang West Rd, Qingdao 266580, Peoples R China.
EM zhangws@upc.edu.cn
RI liu, sha/JXL-6600-2024; Duan, Pengcheng/I-1801-2018; li,
   fang/KDO-8841-2024; Xia, Feng/Y-2859-2019; Laurence T. Yang,
   FCAE/AAA-1898-2019; Lu, Qinghua/AAG-3378-2021
OI Xia, Feng/0000-0002-8324-1859; Laurence T. Yang,
   FCAE/0000-0002-7986-4244; Gong, Wenjuan/0000-0001-7805-3629; Zhang,
   Weishan/0000-0001-9800-1068
FU National Natural Science Foundation of China [61309024, 61402533];
   Natural Science Foundation of Shandong Province [ZR2014FM038]; "Academic
   Top-Notch Professors in China University of Petroleum" program
FX This research was supported by the National Natural Science Foundation
   of China (Grant No. 61309024 and 61402533) and Natural Science
   Foundation of Shandong Province (Grant No. ZR2014FM038), "Key
   Technologies Development Plan of Qingdao Technical Economic Development
   Area". Weishan Zhang was supported through the "Academic Top-Notch
   Professors in China University of Petroleum" program.
CR Akioka S, 2004, 2004 IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID - CCGRID 2004, P765
   [Anonymous], 2005, AISTATS BRIDGETOWN B
   [Anonymous], 2011, P 2011 18 INT C HIGH
   [Anonymous], 2012, DEEP LEARNING TIME S
   [Anonymous], 2011, P 5 INT WORKSH LARG
   [Anonymous], 2012, INT CONF HIGH PERFOR, DOI 10.1145/3458817.3476165
   [Anonymous], 2009, P 7 AUSTR S GRID COM
   Aote SS., 2013, International Journal of Computer Science Engineering (IJCSE), V2, P196
   Bengio Y, 2009, FOUND TRENDS MACH LE, V2, P1, DOI 10.1561/2200000006
   Calheiros RN, 2015, IEEE T CLOUD COMPUT, V3, P449, DOI 10.1109/TCC.2014.2350475
   Carrington L, 2003, LECT NOTES COMPUT SC, V2659, P926
   Chen S, 2014, IEEE INT CONGR BIG, P733, DOI 10.1109/BigData.Congress.2014.108
   CONNOR JT, 1994, IEEE T NEURAL NETWOR, V5, P240, DOI 10.1109/72.279188
   Di S, 2014, J SUPERCOMPUT, V69, P139, DOI 10.1007/s11227-014-1131-z
   Di S, 2012, IEEE INT C CL COMP, P230, DOI 10.1109/CLUSTER.2012.35
   Dinda P. A., 2000, Cluster Computing, V3, P265, DOI 10.1023/A:1019048724544
   GARDNER ES, 1989, MANAGE SCI, V35, P372, DOI 10.1287/mnsc.35.3.372
   Hamilton JD, 1994, TIME SERIES ANAL, V2, P68
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Hu RD, 2014, SCI WORLD J, DOI 10.1155/2014/321231
   Hyndman RJ, 2008, J STAT SOFTW, V27, P1, DOI 10.18637/jss.v027.i03
   Kennedy James., 2010, Particle Swarm Optimization, P760, DOI DOI 10.1007/978-0-387-30164-8_630
   Khan A, 2012, IEEE IFIP NETW OPER, P1287, DOI 10.1109/NOMS.2012.6212065
   Kuremoto T, 2014, NEUROCOMPUTING, V137, P47, DOI 10.1016/j.neucom.2013.03.047
   Liang J, 2004, 2004 IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID - CCGRID 2004, P293
   Liu C, 2015, IEEE T COMPUT, V64, P2609, DOI 10.1109/TC.2014.2375190
   Ma Y, 2014, IEEE T PARALL DISTR, V25, P2126, DOI 10.1109/TPDS.2013.272
   Menzel M, 2015, IEEE T COMPUT, V64, P1336, DOI 10.1109/TC.2014.2317188
   Roy N, 2011, INT CONF PERVAS COMP, P63, DOI 10.1109/PERCOM.2011.5767596
   Saripalli P., 2011, Proceedings of the 2011 IEEE 4th International Conference on Utility and Cloud Computing (UCC 2011), P397, DOI 10.1109/UCC.2011.66
   Sharma B, 2011, P 2 ACM S CLOUD COMP, V3
   Wolski R., 1999, Proceedings. The Eighth International Symposium on High Performance Distributed Computing (Cat. No.99TH8469), P105, DOI 10.1109/HPDC.1999.805288
   Wu YW, 2010, IEEE T PARALL DISTR, V21, P925, DOI 10.1109/TPDS.2009.137
   Yexi Jiang, 2011, Proceedings of the 2011 IEEE 11th International Conference on Data Mining (ICDM 2011), P1104, DOI 10.1109/ICDM.2011.25
   Zhang GP, 2001, COMPUT OPER RES, V28, P381, DOI 10.1016/S0305-0548(99)00123-9
   Zhang QC, 2015, INT J COMMUN SYST, V28, P1610, DOI 10.1002/dac.2779
   Zhang WS, 2017, SOFTWARE PRACT EXPER, V47, P473, DOI 10.1002/spe.2426
   Zhang YY, 2007, IEICE T INF SYST, VE90D, P40, DOI [10.1093/ietisy/e90-1.1.40, 10.1093/ietisy/e90-d.1.40]
NR 38
TC 38
Z9 38
U1 0
U2 29
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2017
VL 47
IS 3
SI SI
BP 473
EP 488
DI 10.1002/spe.2426
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL9RK
UT WOS:000394957500010
DA 2024-07-18
ER

PT J
AU Lemire, D
   Ssi-Yan-Kai, G
   Kaser, O
AF Lemire, Daniel
   Ssi-Yan-Kai, Gregory
   Kaser, Owen
TI Consistently faster and smaller compressed bitmaps with Roaring
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance; measurement; index compression; bitmap index
ID INDEXES
AB Compressed bitmap indexes are used in databases and search engines. Many bitmap compression techniques have been proposed, almost all relying primarily on run-length encoding (RLE). However, on unsorted data, we can get superior performance with a hybrid compression technique that uses both uncompressed bitmaps and packed arrays inside a two-level tree. An instance of this technique, Roaring, has recently been proposed. Due to its good performance, it has been adopted by several production platforms (e.g., Apache Lucene, Apache Spark, Apache Kylin, and Druid). Yet there are cases where run-length-encoded bitmaps are smaller than the original Roaring bitmapstypically when the data are sorted so that the bitmaps contain long compressible runs. To better handle these cases, we build a new Roaring hybrid that combines uncompressed bitmaps, packed arrays, and RLE-compressed segments. The result is a new Roaring format that compresses better. Overall, our new implementation of Roaring can be several times faster (up to two orders of magnitude) than the implementations of traditional RLE-based alternatives (WAH, Concise, and EWAH) while compressing better. We review the design choices and optimizations that make these good results possible. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Lemire, Daniel] TELUQ, LICEF Res Ctr, Montreal, PQ, Canada.
   [Ssi-Yan-Kai, Gregory] 42 Quai Georges Gorse, Boulogne, France.
   [Kaser, Owen] UNB St John, Comp Sci & Appl Stat, St John, NB, Canada.
C3 University of Quebec; Universite TELUQ
RP Lemire, D (corresponding author), Univ Quebec, TELUQ, LICEF Res Ctr, 5800 St Denis,Off 1105, Montreal, PQ H2S 3L5, Canada.
EM lemire@gmail.com
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922; Kaser, Owen/0000-0001-6204-5085
CR Antoshenkov G., 1995, Proceedings. DCC '95 Data Compression Conference (Cat. No.95TH8037), DOI 10.1109/DCC.1995.515586
   Bentley J. L., 1976, Information Processing Letters, V5, P82, DOI 10.1016/0020-0190(76)90071-5
   Chambi S, 2016, SOFTWARE PRACT EXPER, V46, P709, DOI 10.1002/spe.2325
   Chen Z, 2015, TSINGHUA SCI TECHNOL, V20, P100, DOI 10.1109/TST.2015.7040519
   Colantonio A, 2010, INFORM PROCESS LETT, V110, P644, DOI 10.1016/j.ipl.2010.05.018
   Culpepper JS, 2010, ACM T INFORM SYST, V29, DOI 10.1145/1877766.1877767
   Fusco F, 2010, PROC VLDB ENDOW, V3, P1382, DOI 10.14778/1920841.1921011
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Grand A, 2014, LUCENE 5983 ROARINGD
   Grand A, 2015, FRAME REFERENCE ROAR
   Guzun G, 2016, VLDB J, V25, P339, DOI 10.1007/s00778-015-0419-9
   Guzun G, 2014, PROC INT CONF DATA, P484, DOI 10.1109/ICDE.2014.6816675
   Kaser O, 2016, SOFTWARE PRACT EXPER, V46, P167, DOI 10.1002/spe.2289
   Lemire D., 2015, Software: Practice and Experience, V45, P1, DOI 10.1002/spe.2203
   Lemire D, 2016, SOFTWARE PRACT EXPER, V46, P723, DOI 10.1002/spe.2326
   Lemire D, 2012, ACM T DATABASE SYST, V37, DOI 10.1145/2338626.2338633
   Lemire D, 2010, DATA KNOWL ENG, V69, P3, DOI 10.1016/j.datak.2009.08.006
   Nagarkar P, 2015, PROC VLDB ENDOW, V8, P1382
   Nagendra M, 2015, ACM T DATABASE SYST, V40, DOI 10.1145/2699483
   O'Neil E, 2007, INT DATABASE ENG APP, P72
   O'Neil P., 1997, SIGMOD Record, V26, P38, DOI 10.1145/253262.253268
   Rinfret D, 2001, SIGMOD RECORD, V30, P47, DOI 10.1145/376284.375669
   Stonebraker Mike., 2005, VLDB'05
   Warren Jr HS, 2013, HACKERS DELIGHT, V2
   Wu KS, 2008, LECT NOTES COMPUT SC, V5069, P348
   Yang FJ, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P157, DOI 10.1145/2588555.2595631
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
NR 27
TC 26
Z9 32
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2016
VL 46
IS 11
BP 1547
EP 1569
DI 10.1002/spe.2402
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DZ8VK
UT WOS:000386150000006
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Desfossez, J
   Desnoyers, M
   Dagenais, MR
AF Desfossez, Julien
   Desnoyers, Mathieu
   Dagenais, Michel R.
TI Runtime latency detection and analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE latency; tracing; cloud computing; real-time
AB Detecting latency-related problems in production environments is usually carried out at the application level with custom instrumentation. This is enough to detect high latencies in instrumented applications but does not provide all the information required to understand the source of the latency and is dependent on manually deployed instrumentation. The abnormal latencies usually start in the operating system kernel because of contention on physical resources or locks. Hence, finding the root cause of a latency may require a kernel trace. This trace can easily represent hundreds of thousands of events per second. In this paper, we propose and evaluate a methodology, efficient algorithms, and concurrent data structures to detect and analyze latency problems that occur at the kernel level. We introduce a new kernel-based approach that enables developers and administrators to efficiently track latency problems in production and trigger actions when abnormal conditions are detected. The result of this study is a working scalable latency tracker and an efficient approach to perform stateful tracing in production. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Desfossez, Julien; Dagenais, Michel R.] Ecole Polytech Montreal, 2900 Blvd Edouard Montpetit, Montreal, PQ H3T 1J4, Canada.
   [Desnoyers, Mathieu] EfficiOS Inc, 4200 Blvd St Laurent,Suite 680, Montreal, PQ H2W 2R2, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Desfossez, J (corresponding author), Ecole Polytech Montreal, 2900 Blvd Edouard Montpetit, Montreal, PQ H3T 1J4, Canada.
EM julien.desfossez@polymtl.ca
FU Ericsson; EfficiOS; NSERC
FX This work was made possible by the financial support of Ericsson,
   EfficiOS, and NSERC. We are grateful to Naser Ezzati for reviewing this
   paper.
CR [Anonymous], 2012, PROC 3 ACM S CLOUD C
   Betz W., 2009, IEEE C EM TECH FACT, P1
   Brendan G, 2013, SYSTEMS PERFORMANCE
   Buyya R, 2000, SOFTWARE PRACT EXPER, V30, P723, DOI 10.1002/(SICI)1097-024X(200006)30:7<723::AID-SPE314>3.0.CO;2-5
   Calandrino JM, 2006, REAL TIM SYST SYMP P, P111, DOI 10.1109/RTSS.2006.27
   Desnoyers M, 2012, IEEE T PARALL DISTR, V23, P375, DOI 10.1109/TPDS.2011.159
   Desnoyers Mathieu, 2006, OLS OTT LIN S CIT, V2006, P209
   Huan Liu, 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P435, DOI 10.1109/DASC.2011.87
   Jacobson V., 1989, TCPDUMP MANUAL PAGE
   Jake E, 2009, PERFCOUNTERS ADDED M
   Jake E, 2009, A LOOK AT FTRACE
   Larsen S, 2009, INT J PARALLEL PROG, V37, P556, DOI 10.1007/s10766-009-0109-6
   Leverich J., 2014, ACM EUROSYS
   Lo D, 2014, CONF PROC INT SYMP C, P301, DOI 10.1109/ISCA.2014.6853237
   Massie ML, 2004, PARALLEL COMPUT, V30, P817, DOI 10.1016/j.parco.2004.04.001
   Mathieu D, 2009, THESIS
   Prasad V., 2005, OTTAWA LINUX S, P49
   Reiss Charles., 2012, Intel Science and Technology Center for Cloud Computing, Tech. Rep, V84
   Steven R, 2009, P RT LIN WS DRESD GE
   Triplett J, 2011, P 2011 USENIX ANN TE, V11, P145
   Uthayopas P, 1998, P HPC ASIA98 C SING
NR 21
TC 4
Z9 6
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2016
VL 46
IS 10
BP 1397
EP 1409
DI 10.1002/spe.2389
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW4PG
UT WOS:000383624900006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Osorio, RR
   González, P
AF Osorio, Roberto R.
   Gonzalez, Patricia
TI A fast algorithm for constructing nearly optimal prefix codes
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data compression; prefix-codes; Huffman algorithm
AB Huffman algorithm allows for constructing optimal prefix-codes with O(n<bold>logn</bold>) complexity. As the number of symbols ngrows, so does the complexity of building the code-words. In this paper, a new algorithm and implementation are proposed that achieve nearly optimal coding without sorting the probabilities or building a tree of codes. The complexity is proportional to the maximum code length, making the algorithm especially attractive for large alphabets. The focus is put on achieving almost optimal coding with a fast implementation, suitable for real-time compression of large volumes of data. A practical case example about checkpoint files compression is presented, providing encouraging results. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Osorio, Roberto R.; Gonzalez, Patricia] Univ A Coruna, Dept Elect & Syst, La Coruna 15011, Spain.
C3 Universidade da Coruna
RP Osorio, RR (corresponding author), Univ A Coruna, Dept Elect & Syst, La Coruna 15011, Spain.
EM roberto.osorio@udc.es
RI Osorio, Roberto R/IYJ-2696-2023; Osorio, Roberto R/F-7633-2016;
   Gonzalez, Patricia/F-3822-2016
OI Osorio, Roberto R/0000-0001-8768-2240; Gonzalez,
   Patricia/0000-0003-0378-9222
FU Ministry of Economy and Competitiviness of Spain [TIN2013-42148-P];
   Galician Government (Xunta de Galicia) under the Consolidation Program
   of Competitive Research Units [GRC2013/055]; FEDER funds of the EU
FX This work has been supported by the Ministry of Economy and
   Competitiviness of Spain (project TIN2013-42148-P) and by the Galician
   Government (Xunta de Galicia) under the Consolidation Program of
   Competitive Research Units (Ref. GRC2013/055), both co-funded by FEDER
   funds of the EU.
CR Berman P, 2007, J DISCRET ALGORITHMS, V5, P479, DOI 10.1016/j.jda.2006.10.007
   Crochemore M, 1996, HDB COMPUTER SCI ENG
   GALLAGER RG, 1978, IEEE T INFORM THEORY, V24, P668, DOI 10.1109/TIT.1978.1055959
   HARMAN D, 1995, INFORM PROCESS MANAG, V31, P271, DOI 10.1016/0306-4573(94)00047-7
   Hashemian R, 2003, ITCC 2003: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: COMPUTERS AND COMMUNICATIONS, PROCEEDINGS, P237, DOI 10.1109/ITCC.2003.1197533
   HUFFMAN DA, 1952, P IRE, V40, P1098, DOI 10.1109/JRPROC.1952.273898
   Iskra K, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P153, DOI 10.1145/1345206.1345230
   Kirkpatrick DG, 1996, ALGORITHMICA, V15, P172, DOI 10.1007/BF01941687
   KNUTH DE, 1985, J ALGORITHM, V6, P163, DOI 10.1016/0196-6774(85)90036-7
   Liddell M, 2006, SOFTWARE PRACTICE EX, DOI [10.1002/spe.v36:15, DOI 10.1002/SPE.V36:15]
   MCMILLAN B, 1956, IRE T INFORM THEOR, V2, P115, DOI 10.1109/TIT.1956.1056818
   Milidiú RL, 1999, IEEE DATA COMPR CONF, P267
   Moffat A, 1997, IEEE T COMMUN, V45, P1200, DOI 10.1109/26.634683
   Moffat A, 1995, LECT NOTES COMPUT SC, V955, P393
   Moffat A, 1998, IEEE T INFORM THEORY, V44, P1650, DOI 10.1109/18.681345
   Osorio RR, 2012, IEEE DATA COMPR CONF, P407, DOI 10.1109/DCC.2012.62
   Ostadzadeh S. Arash, 2007, 2007 International Conference on Parallel and Distributed Processing Techniques and Applications (PDPTA'07), P284
   Rodríguez G, 2010, CONCURR COMP-PRACT E, V22, P749, DOI 10.1002/cpe.1541
   SCHWARTZ ES, 1964, COMMUN ACM, V7, P166, DOI 10.1145/363958.363991
   Teng S.-H., 1987, SIGACT News, V18, p18.4/54, DOI 10.1145/36068.36071
   Van Leeuwen J, 1976, ICALP, p382C410
   VITTER JS, 1987, J ACM, V34, P825, DOI 10.1145/31846.42227
NR 22
TC 0
Z9 0
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2016
VL 46
IS 10
BP 1299
EP 1316
DI 10.1002/spe.2375
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW4PG
UT WOS:000383624900001
DA 2024-07-18
ER

PT J
AU Criado, J
   Rodríguez-Gracia, D
   Iribarne, L
   Padilla, N
AF Criado, Javier
   Rodriguez-Gracia, Diego
   Iribarne, Luis
   Padilla, Nicolas
TI Toward the adaptation of component-based architectures by model
   transformation: behind smart user interfaces
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE component-based architectures; run-time adaptation; model
   transformations; higher-order transformations; mashup user interfaces;
   smart user interfaces
ID ADAPTIVE SYSTEMS; SOFTWARE; SUPPORT; GENERATION; FRAMEWORK; BEHAVIOR;
   SERVICE; RUNTIME; WEB
AB Graphical user interfaces are not always developed for remaining static. There are GUIs with the need of implementing some variability mechanisms. Component-based GUIs are an ideal target for incorporating this kind of operations, because they can adapt their functionality at run-time when their structure is updated by adding or removing components or by modifying the relationships between them. Mashup user interfaces are a good example of this type of GUI, and they allow to combine services through the assembly of graphical components. We intend to adapt component-based user interfaces for obtaining smart user interfaces. With this goal, our proposal attempts to adapt abstract component-based architectures by using model transformation. Our aim is to generate at run-time a dynamic model transformation, because the rules describing their behavior are not pre-set but are selected from a repository depending on the context. The proposal describes an adaptation schema based on model transformation providing a solution to this dynamic transformation. Context information is processed to select at run-time a rule subset from a repository. Selected rules are used to generate, through a higher-order transformation, the dynamic model transformation. This approach has been tested through a case study which applies different repositories to the same architecture and context. Moreover, a web tool has been developed for validation and demonstration of its applicability. The novelty of our proposal arises from the adaptation schema that creates a non pre-set transformation, which enables the dynamic adaptation of component-based architectures. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Criado, Javier; Rodriguez-Gracia, Diego; Iribarne, Luis; Padilla, Nicolas] Univ Almeria, Dept Informat, Appl Comp Grp, Almeria, Spain.
C3 Universidad de Almeria
RP Criado, J (corresponding author), Univ Almeria, Dept Informat, Appl Comp Grp, Almeria, Spain.
EM javi.criado@ual.es
RI Criado, Javier/K-1723-2017; Padilla, Nicolas/K-3523-2017; Iribarne,
   Luis/A-2811-2008
OI Criado, Javier/0000-0002-8035-5260; Iribarne, Luis/0000-0003-1815-4721;
   Padilla Soriano, Nicolas/0000-0002-8851-6751
FU EU ERDF; Spanish Ministry of Economy and Competitiveness (MINECO)
   [TIN2013-41576-R]; Spanish Ministry of Education, Culture, and Sport
   (MECD) under FPU grant [AP2010-3259]; Andalusian Regional Government
   (Spain) [P10-TIC-6114]
FX This work was funded by the EU ERDF and the Spanish Ministry of Economy
   and Competitiveness (MINECO) under Project TIN2013-41576-R, the Spanish
   Ministry of Education, Culture, and Sport (MECD) under a FPU grant
   (AP2010-3259), and the Andalusian Regional Government (Spain) under
   Project P10-TIC-6114.
CR Bollati VA, 2013, INFORM SOFTWARE TECH, V55, P699, DOI 10.1016/j.infsof.2012.11.004
   [Anonymous], 2011, MODELS SOFTWARE ENG, DOI DOI 10.1007/978-3-642-21210-9_22
   [Anonymous], 2003, P SIGCHI C HUMAN FAC, DOI DOI 10.1145/642611.642697
   [Anonymous], 2003, MDA GUIDE VERSION 1
   [Anonymous], W3C STAND SEM WEB 20
   [Anonymous], 2011, INT J KNOWLEDGE SOC
   [Anonymous], OSGI SERV PLATF REL
   [Anonymous], 2012, J OBJECT TECHNOL
   [Anonymous], CONTEXT AWARENESS SM
   [Anonymous], P 1 EUR WORKSH COMP
   [Anonymous], ADAPTATION COMPONENT
   [Anonymous], MET FAC MOF SPEC V2
   [Anonymous], P 11 INT C FUND APPR
   [Anonymous], CEUR WORKSHOP P
   Arora Sanjeev, 2012, THEORY COMPUTING
   Batty Michael., 2010, Annals of GIS, V16, P1, DOI [10.1080/19475681003700831, DOI 10.1080/19475681003700831]
   Becker Basil, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P123, DOI 10.1007/978-3-642-21732-6_9
   Becker Basil, 2009, Models in Software Engineering. Workshops and Symposia at MODELS 2009. Reports and Revised Selected Papers, P83
   Bencomo N, 2009, LECT NOTES COMPUT SC, V5525, P183, DOI 10.1007/978-3-642-02161-9_10
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bradbury J.S., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems. WOSS '04, P28, DOI [10.1145/1075405.1075411, DOI 10.1145/1075405.1075411]
   Cabot Jordi, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P58, DOI 10.1007/978-3-642-30982-3_3
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   Cetina C, 2009, COMPUTER, V42, P37, DOI 10.1109/MC.2009.309
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Criado J, 2012, EUROMICRO CONF PROC, P150, DOI 10.1109/SEAA.2012.27
   Crnkovic I, 2011, IEEE T SOFTWARE ENG, V37, P593, DOI 10.1109/TSE.2010.83
   Czarnecki K., 2003, P 2 OOPSLA WORKSH GE, V45, P1
   Daniel F, 2007, IEEE INTERNET COMPUT, V11, P59, DOI 10.1109/MIC.2007.74
   Edwards G, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P142, DOI 10.1109/SEAMS.2009.5069083
   Fleurey F, 2009, LECT NOTES COMPUT SC, V5795, P606, DOI 10.1007/978-3-642-04425-0_47
   Floch J, 2013, SOFTWARE PRACT EXPER, V43, P359, DOI 10.1002/spe.2116
   GalitzWO, 2007, ESSENTIAL GUIDE USER
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Gruber T, 2008, J WEB SEMANT, V6, P4, DOI 10.1016/j.websem.2007.11.011
   Grundy J, 2002, INTERACT COMPUT, V14, P175, DOI 10.1016/S0953-5438(01)00049-2
   Gui N, 2013, SOFTWARE PRACT EXPER, V43, P937, DOI 10.1002/spe.2137
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Hinchey M, 2012, COMPUTER, V45, P22, DOI 10.1109/MC.2012.332
   Hnetynka P, 2011, SOFTWARE PRACT EXPER, V41, P1185, DOI 10.1002/spe.1036
   Hoyer V, 2008, LECT NOTES COMPUT SC, V5364, P708, DOI 10.1007/978-3-540-89652-4_62
   Inglés-Romero JF, 2011, IEEE ENABL TECHNOL, P79, DOI 10.1109/WETICE.2011.54
   Insfran E, 2010, LECT NOTES COMPUT SC, V6395, P288
   Iribarne L, 2004, COMPUT J, V47, P342, DOI 10.1093/comjnl/47.3.342
   Iribarne L, 2012, J UNIVERS COMPUT SCI, V18, P2669
   Iribarne L, 2010, INFORM SYST MANAGE, V27, P207, DOI 10.1080/10580530.2010.493816
   Irmert F., 2008, Proceedings of the 2008 International Workshop on Software Engineering for Adaptive and Self-managing Systems (SEAMS 2008), P97, DOI 10.1145/1370018.1370036
   Jie Sun, 2010, Proceedings of the 2010 Fourth International Conference on Genetic and Evolutionary Computing (ICGEC 2010), P276, DOI 10.1109/ICGEC.2010.75
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kolovos DS, 2007, J OBJECT TECHNOL, V6, P53, DOI 10.5381/jot.2007.6.9.a3
   Kruchten P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.59
   Kurtev I, 2007, SCI COMPUT PROGRAM, V68, P138, DOI 10.1016/j.scico.2007.05.006
   Mikroyannidis A, 2007, COMPUTER, V40, P113, DOI 10.1109/MC.2007.405
   Morin B., 2012, P 15 ACM SIGSOFT S C, P135, DOI [DOI 10.1145/2304736, 10.1145/2304736.2304759, DOI 10.1145/2304736.2304759]
   Morin B, 2009, PROC INT CONF SOFTW, P122, DOI 10.1109/ICSE.2009.5070514
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   O'reilly T, 2007, COMMUN STRAT, V97, P253
   Paulheim H, 2010, INT J SEMANT WEB INF, V6, P36, DOI 10.4018/jswis.2010040103
   Perrouin G, 2012, PROC INT CONF SOFTW, P1353, DOI 10.1109/ICSE.2012.6227081
   Porres I., 2005, SOFTW SYST MODEL, V4, P368
   Ramirez Andres J., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P99, DOI 10.1109/SEAMS.2012.6224396
   Rodriguez-Gracia Diego, 2012, Model and Data Engineering. Proceedings of the 2nd International Conference, MEDI 2012, P16, DOI 10.1007/978-3-642-33609-6_4
   Rouvoy R, 2008, LECT NOTES COMPUT SC, V4954, P52
   Sadjadi SM, 2004, INT CON DISTR COMP S, P74, DOI 10.1109/ICDCS.2004.1281570
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Seinturier L, 2012, SOFTWARE PRACT EXPER, V42, P559, DOI 10.1002/spe.1077
   Serral E, 2010, LECT NOTES COMPUT SC, V6051, P378, DOI 10.1007/978-3-642-13094-6_30
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Tisi M, 2010, LECT NOTES COMPUT SC, V6142, P215, DOI 10.1007/978-3-642-13688-7_15
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Vogel T., 2010, P 2010 ICSE WORKSH S, P39, DOI [10.1145/1808984.1808989, DOI 10.1145/1808984.1808989]
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
NR 77
TC 17
Z9 17
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2015
VL 45
IS 12
BP 1677
EP 1718
DI 10.1002/spe.2306
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LK
UT WOS:000363501100005
OA Green Published
DA 2024-07-18
ER

PT J
AU Kim, T
   Hwang, M
   Hwang, MN
   Song, SK
   Jeong, DH
   Jung, H
AF Kim, Taehong
   Hwang, Myunggwon
   Hwang, Mi-Nyeong
   Song, Sa-kwang
   Jeong, Do-Heon
   Jung, Hanmin
TI Translation of technical terminologies between English and Korean based
   on textual big data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE technical terminologies; English-Korean pairs; textual big data; machine
   translation
AB A number of web applications provide completely automated machine translation services, allowing users to easily translate information of interest. However, these services still generate inaccurate results when translating technical terminologies. Therefore, we propose a new method that collects reliable pairs of English-Korean technical terms and translates the given English terminology to Korean. To collect the pairs, we utilize textual big data, such as Korean academic papers, and develop a new statistical model to determine appropriate characteristics. Our method is evaluated in terms of the reliability of English-Korean pairs and the precision of translation. We thus confirm that our method can produce highly reliable data and can positively influence the translation quality of technical terminologies. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Kim, Taehong; Hwang, Myunggwon; Hwang, Mi-Nyeong; Song, Sa-kwang; Jeong, Do-Heon; Jung, Hanmin] Korea Inst Sci & Technol Informat, Daejeon, South Korea.
C3 Korea Institute of Science & Technology Information (KISTI)
RP Hwang, M (corresponding author), Korea Inst Sci & Technol Informat, Dept Comp Intelligence Res, 245 Daehak Ro, Daejeon, South Korea.
EM mg.hwang@gmail.com
FU MSIP/KEIT [2014044034002]
FX This work was partly supported by the IT R&D program of MSIP/KEIT.
   [2014044034002, High performance database solution development for
   Integrated big data monitoring and Analytics].
CR Agirre E, 2006, TEXT SPEECH LANG TEC, V33, P1, DOI 10.1007/978-1-4020-4809-8
   [Anonymous], IT CONVERGENCE PRACT
   [Anonymous], 1999, WordNet
   [Anonymous], 1992, the 14th International Conference on Computational Linguistics
   Chiao YC, 2002, AMIA 2002 SYMPOSIUM, PROCEEDINGS, P150
   Dagan I., 1994, Computational Linguistics, V20, P563
   Dagan I., 1994, ANLP, P34
   Edmonds P., 2001, P SENSEVAL 2 2 INT W, P1
   Fung P., 1997, Machine Translation, V12, P53, DOI 10.1023/A:1007974605290
   Fung Pascale., 1998, P COLING ACL98, P414
   GALE WA, 1992, COMPUT HUMANITIES, V26, P415, DOI 10.1007/BF00136984
   Hwang M, 2013, 2013 SEVENTH INTERNATIONAL CONFERENCE ON INNOVATIVE MOBILE AND INTERNET SERVICES IN UBIQUITOUS COMPUTING (IMIS 2013), P202, DOI 10.1109/IMIS.2013.41
   Kilgarriff A, 2000, COMPUT HUMANITIES, V34, P15, DOI 10.1023/A:1002693207386
   Lee Taerim, 2014, J INTERNET SERVICES, V4, P12
   Li X, 2014, INT J INFORM MANAGE, V34, P319, DOI 10.1016/j.ijinfomgt.2013.11.007
   Manning C.D., 1999, FDN STAT NATURAL LAN
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Oh JH, 2006, J ARTIF INTELL RES, V27, P119, DOI 10.1613/jair.1999
   Resnik Philip., 1995, P 3 WORKSHOP VERY LA, P54
   Yarowsky D., 1995, 33 ANN M ASS COMPUTA, P189, DOI DOI 10.3115/981658.981684
NR 20
TC 2
Z9 2
U1 1
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2015
VL 45
IS 8
SI SI
BP 1115
EP 1126
DI 10.1002/spe.2284
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Arts &amp; Humanities Citation Index (A&amp;HCI)
SC Computer Science
GA CM6JB
UT WOS:000357793500007
DA 2024-07-18
ER

PT J
AU Reiss, SP
   Bott, JN
   La Viola, JJ
AF Reiss, Steven P.
   Bott, Jared N.
   La Viola, Joseph J., Jr.
TI Plugging in and into code bubbles: the code bubbles architecture
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE programming environments; plug-in architectures; software development
AB Code Bubbles is an attempt to redefine the user interface for an integrated programming environment. As it represents a whole new user interface, implementing it as a plug-in is inherently difficult. We get around this difficulty by combining two different plug-in architectures, a standard one based on registrations and callbacks and a message-based one that puts the plug-in at arm's length and defines a narrower two-way interface. This paper describes both how we have implemented Code Bubbles as a plug-in to Eclipse and how Code Bubbles itself is implemented as a set of plug-ins representing the different aspects of the environment, using both traditional and message-based plug-in architectures as appropriate. It also shows how the resultant architecture is flexible enough to support collaboration, different back ends, and a cloud-based environment. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Reiss, Steven P.] Brown Univ, Dept Comp Sci, Providence, RI 02912 USA.
   [Bott, Jared N.; La Viola, Joseph J., Jr.] Univ Cent Florida, Dept EECS, Orlando, FL 32816 USA.
C3 Brown University; State University System of Florida; University of
   Central Florida
RP Reiss, SP (corresponding author), Brown Univ, Dept Comp Sci, Providence, RI 02912 USA.
EM spr@cs.brown.edu
FU National Science Foundation [CCF1130822]; Microsoft; Google; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1012056] Funding Source: National Science Foundation
FX This work is supported by the National Science Foundation grant
   CCF1130822. Additional support has come from Microsoft and Google.
CR Alves de Castro A, 2011, OSGI DEPTH
   Bragdon A., 2010, Proceedings of the 32nd International Conference on Software Engineering (ICSE'10), P455, DOI [DOI 10.1145/1806799.1806866, 10.1145/1806799.1806866]
   Bragdon A, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2503
   Brun Yuriy., 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P444, DOI 10.1145/2025113.2025187
   Coblenz M.J., 2006, Proc. 2006 OOPSLA Workshop on Eclipse Technology eXchange, P65
   De Volder K, 2006, LECT NOTES COMPUT SC, V3819, P88
   DeLine R., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P207, DOI 10.1145/1810295.1810331
   DeLine R., 2012, INT C SOFTW ENG 2012
   DeLine R, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P11
   Diankov R., 2008, ROBOTICS
   ECMA, 1993, 500211 ECMA NIST
   Gamma E., 2004, CONTRIBUTING ECLIPSE
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Gropp W, 1994, USING MPI PROTABLE
   Helsinger A, 2004, IEEE SYS MAN CYBERN, P1910
   Ingalls D, 1997, ACM SIGPLAN NOTICES, V32, P318, DOI 10.1145/263700.263754
   Kelleher C, 2005, ACM COMPUT SURV, V37, P83, DOI 10.1145/1089733.1089734
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Ko AJ, 2005, PROC INT CONF SOFTW, P126
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Liedtke J., 1993, Operating Systems Review, V27, P175, DOI 10.1145/173668.168633
   MCBRYAN OA, 1994, PARALLEL COMPUT, V20, P417, DOI 10.1016/0167-8191(94)90021-3
   McCabe F. G., 1995, Intelligent Agents. ECAI-94 Workshop on Agent Theories, Architectures, and Languages Proceedings, P324
   Migliari M, 1999, P 6 EUR PVM MPI US G, P177
   Moir K, 2011, ARCH OPEN SOURCE APP, P89
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Olivero F., 2010, P 1 INT WORKSH FLEX
   Parnin C, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P15
   Pears Arnold, 2007, SIGCSE Bulletin, V39, P204, DOI 10.1145/1345375.1345441
   Pedretti A, 2004, J COMPUT AID MOL DES, V18, P167, DOI 10.1023/B:JCAM.0000035186.90683.f2
   Reiss S. P., 2012, Proceedings 2012 2nd International Workshop on Developing Tools as Plug-ins (TOPI 2012), P55, DOI 10.1109/TOPI.2012.6229811
   REISS SP, 1990, SOFTWARE PRACT EXPER, V20, pS89, DOI 10.1002/spe.4380201308
   Reiss SP, 1996, PROC INT CONF SOFTW, P398, DOI 10.1109/ICSE.1996.493434
   Reiss SP, 2012, PROC INT CONF SOFTW, P1411, DOI 10.1109/ICSE.2012.6227235
   Resnick M, 2009, COMMUN ACM, V52, P60, DOI 10.1145/1592761.1592779
   Ritter S., 1996, Journal of Artificial Intelligence in Education, V7, P315
   Sinha Vineet, 2005, P 2005 ACM SIGPLAN O, P21, DOI 10.1145/1117696.1117701
   Snodgrass R, 1985, P INT WORKSH ADV PRO, P290
   Stockton R, 1998, SHEETS HYDPERCODE EE
   Taylor RN, 1996, IEEE T SOFTWARE ENG, V22, P390, DOI 10.1109/32.508313
   UNGAR D, 1987, SIGPLAN NOTICES, V22, P227, DOI 10.1145/38807.38828
   WASSERMAN AI, 1990, LECT NOTES COMPUT SC, V467, P137
NR 42
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2014
VL 44
IS 3
SI SI
BP 261
EP 276
DI 10.1002/spe.2196
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA7KI
UT WOS:000331275900002
DA 2024-07-18
ER

PT J
AU de Caso, G
   Garbervetsky, D
   Gorín, D
AF de Caso, Guido
   Garbervetsky, Diego
   Gorin, Daniel
TI Integrated program verification tools in education
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE education; formal methods; automated program verification; Eclipse
   plug-in
ID JML
AB Automated software verification is an active field of research, which has made enormous progress both in theoretical and practical aspects. Even if not ready for large-scale industrial adoption, the technology behind automated program verifiers is now mature enough to gracefully handle the kind of programs that arise in introductory programming courses. This opens exciting new opportunities in teaching the basics of reasoning about program correctness to novice students. However, for these tools to be effective, command-line-style user-interfaces need to be replaced. In this paper, we report on our experience using the verifying compiler for PEST in an introductory programming course as well as in a more advanced course on program analysis. PEST is an extremely basic programming language, but with expressive annotations capabilities and semantics amenable to verification. In particular, we comment on the crucial role played by the integration of this verifying compiler with the Eclipse integrated development environment. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [de Caso, Guido; Garbervetsky, Diego] Univ Buenos Aires, FCEyN, Dept Computac, RA-1053 Buenos Aires, DF, Argentina.
   [Garbervetsky, Diego] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
   [Gorin, Daniel] Univ Erlangen Nurnberg, Erlangen, Germany.
C3 University of Buenos Aires; Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET); University of Erlangen Nuremberg
RP de Caso, G (corresponding author), Intendente Guiraldes 2160,C1428EGA, Buenos Aires, DF, Argentina.
EM gdecaso@dc.uba.ar
OI Garbervetsky, Diego/0000-0003-4180-7196
FU Microsoft Research Software Engineering Innovation Foundation;  [UBACyT
   20020090300064/20020100100813];  [MinCyT PICT-2010 235];  [PICT-PAE
   02278];  [CONICET-PIP-11220110100596]
FX This work was partly funded by the national grants UBACyT
   20020090300064/20020100100813, MinCyT PICT-2010 235, PICT-PAE 02278,
   CONICET-PIP-11220110100596, and Microsoft Research Software Engineering
   Innovation Foundation award 2010.
CR [Anonymous], 2004, J. Obj. Technol., DOI [10.5381/jot.2004.3.6.a2, DOI 10.5381/JOT.2004.3.6.A2]
   [Anonymous], 1997, A Discipline of Programming
   Atlee JM, 2005, PROC INT CONF SOFTW, P623
   Back RJ, 2007, LECT NOTES COMPUT SC, V4454, P61
   Back RJ, 2009, FORM ASP COMPUT, V21, P227, DOI 10.1007/s00165-008-0070-y
   Barnett M, 2005, LECT NOTES COMPUT SC, V3362, P49
   Barrett C, 2004, LECT NOTES COMPUT SC, V3114, P515
   Chatterjee S, 2007, LECT NOTES COMPUT SC, V4424, P19
   Cok DR, 2005, LECT NOTES COMPUT SC, V3362, P108
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   Damas L., 1982, C REC 9 ANN ACM S PR, P207, DOI DOI 10.1145/582153.582176
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DEMILLO RA, 1979, COMMUN ACM, V22, P271, DOI 10.1145/359104.359106
   Detlefs D, 2005, J ACM, V52, P365, DOI 10.1145/1066100.1066102
   Dijkstra E.W., 1988, A Method of Programming
   Dutertre B., YICES SMT SOLVER
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Garbervetsky D, 2009, S AUT PROGR VER APV
   Garbervetsky D, 2011, LECT NOTES COMPUT SC, V6605, P65, DOI 10.1007/978-3-642-19835-9_8
   Good D. I., 1975, SIGPLAN Notices, V10, P482, DOI 10.1145/390016.808472
   Gorin D, 2012, TECHNICAL REPORT
   Gorin D, 2011, P 1 WORKSH DEV TOOLS, P5, DOI DOI 10.1145/1984708.1984711
   Kassios IT, 2006, LECT NOTES COMPUT SC, V4085, P268
   Le Goues C, 2011, LECT NOTES COMPUT SC, V7041, P407, DOI 10.1007/978-3-642-24690-6_28
   Leavens GT, 1999, SPRING INT SER ENG C, V523, P175
   Leino K.R. M., 2009, Proceedings of the 2009 ACM Symposium on Applied Computing, SAC '09, P615, DOI 10.1145/1529282.1529411
   Leino KRM, 2007, FORM TECHN JAV LIK P
   Monahan R, 2011, COMMUNICATION
   Noble J., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P158, DOI 10.1007/BFb0054091
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Poll E, 2009, LECT NOTES COMPUT SC, V5846, P92, DOI 10.1007/978-3-642-04912-5_7
   RANISE S., 2006, The SMT-LIB standard: Version 1.2
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Sloan R, 2008, ACM SIGCSE B, V40, P530
   Xu D.N., 2006, Proceedings of the 2006 ACM SIGPLAN workshop on Haskell, Haskell '06, P48, DOI DOI 10.1145/1159842.1159849
NR 35
TC 4
Z9 4
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2013
VL 43
IS 4
SI SI
BP 403
EP 418
DI 10.1002/spe.2143
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 112UL
UT WOS:000316619200003
DA 2024-07-18
ER

PT J
AU Culpepper, JS
   Petri, M
   Puglisi, SJ
AF Culpepper, J. Shane
   Petri, Matthias
   Puglisi, Simon J.
TI Revisiting bounded context block-sorting transformations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data compression; Burrows-Wheeler transform; block-sorting; suffix array
ID BURROWS-WHEELER-TRANSFORM; DATA-COMPRESSION; EFFICIENT ALGORITHMS;
   LINEAR-TIME; SPACE; BWT
AB The BurrowsWheeler Transform (BWT) produces a permutation of a string X, denoted X*, by sorting the n cyclic rotations of X into full lexicographical order and taking the last column of the resulting nxn matrix to be X*. The transformation is reversible inO(n) time. In this paper, we consider an alteration to the process, called k-BWT, where rotations are only sorted to a depth k. We propose new approaches to the forward and reverse transform, and show that the methods are efficient in practice. More than a decade ago, two algorithms were independently discovered for reversing k-BWT, both of which run inO(nk) time. Two recent algorithms have lowered the bounds for the reverse transformation toO(nlogk) andO(n), respectively. We examine the practical performance for these reversal algorithms. We find that the originalO(nk) approach is most efficient in practice, and investigates new approaches, aimed at further speeding reversal, which store precomputed context boundaries in the compressed file. By explicitly encoding the context boundaries, we present anO(n) reversal technique that is both efficient and effective. Finally, our study elucidates an inherently cache-friendly and hitherto unobserved behavior in the reverse k-BWT, which could lead to new applications of the k-BWT transform. In contrast to previous empirical studies, we show that the partial transform can be reversed significantly faster than the full transform, without significantly affecting compression effectiveness. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Culpepper, J. Shane; Petri, Matthias; Puglisi, Simon J.] RMIT Univ, Sch Comp Sci & Informat Technol, Melbourne, Vic 3001, Australia.
C3 Royal Melbourne Institute of Technology (RMIT)
RP Culpepper, JS (corresponding author), RMIT Univ, Sch Comp Sci & Informat Technol, Melbourne, Vic 3001, Australia.
EM shane.culpepper@rmit.edu.au
RI Culpepper, Shane/JFJ-8558-2023
OI Culpepper, Shane/0000-0002-1902-9087
FU Australian Research Council
FX This work was supported by Australian Research Council.
CR Adjeroh D., 2008, The Burrows-Wheeler Transform:: Data Compression, Suffix Arrays, and Pattern Matching
   [Anonymous], 2002, Compression and Coding Algorithms
   [Anonymous], 2007, J CHEM INF MODEL, DOI DOI 10.1017/CBO9781107415324.004
   [Anonymous], PIZZA CHILI CORPUS C
   [Anonymous], 2000, 4 ANN INT C COMP MOL
   Apostolico A., 2000, Proceedings DCC 2000. Data Compression Conference, P143, DOI 10.1109/DCC.2000.838154
   Balkenhol B, 2000, IEEE T COMPUT, V49, P1043, DOI 10.1109/12.888040
   Bell T. C., 1990, TEXT COMPRESSION
   Brandon MC, 2009, BIOINFORMATICS, V25, P1731, DOI 10.1093/bioinformatics/btp319
   Burrows M., 1994, BLOCK SORTING LOSSLE
   Culpepper JS, 2005, LECT NOTES COMPUT SC, V3772, P1
   Deorowicz S, 2002, SOFTWARE PRACT EXPER, V32, P99, DOI 10.1002/spe.426
   Effros M, 2002, IEEE T INFORM THEORY, V48, P1061, DOI 10.1109/18.995542
   Effros M., 2000, Proceedings DCC 2000. Data Compression Conference, P203, DOI 10.1109/DCC.2000.838160
   Ferragina P, 2005, J ACM, V52, P552, DOI 10.1145/1082036.1082039
   Ferragina P, 2005, J ACM, V52, P688, DOI 10.1145/1082036.1082043
   Ferragina P, 2006, LECT NOTES COMPUT SC, V4168, P756
   HORSPOOL RN, 1992, P 1992 IEEE DAT COMP, P62
   HUFFMAN DA, 1952, P IRE, V40, P1098, DOI 10.1109/JRPROC.1952.273898
   Inagaki K, 2009, LECT NOTES COMPUT SC, V5721, P102, DOI 10.1007/978-3-642-03784-9_10
   Kärkkäinen J, 2006, J ACM, V53, P918, DOI 10.1145/1217856.1217858
   Kärkkäinen J, 2007, THEOR COMPUT SCI, V387, P249, DOI 10.1016/j.tcs.2007.07.018
   Kärkkäinen J, 2010, LECT NOTES COMPUT SC, V6346, P451, DOI 10.1007/978-3-642-15775-2_39
   Kärkkäinen J, 2008, LECT NOTES COMPUT SC, V5280, P3
   Lauther U, 2005, LECT NOTES COMPUT SC, V3669, P293
   Manzini G, 2001, J ACM, V48, P407, DOI 10.1145/382780.382782
   Moffat A, 1998, ACM T INFORM SYST, V16, P256, DOI 10.1145/290159.290162
   Navarro G, 2007, ACM COMPUT SURV, V39, DOI 10.1145/1216370.1216372
   Nong G, 2008, LECT NOTES COMPUT SC, V5029, P178, DOI 10.1007/978-3-540-69068-9_18
   Nong G, 2007, IEEE T COMPUT, V56, P1564, DOI 10.1109/TC.2007.70762
   Okanohara D, 2009, LECT NOTES COMPUT SC, V5721, P90, DOI 10.1007/978-3-642-03784-9_9
   Rivals E, 1996, DCC '96 - DATA COMPRESSION CONFERENCE, PROCEEDINGS, P453, DOI 10.1109/DCC.1996.488385
   Schindler M., 1997, Proceedings DCC '97. Data Compression Conference (Cat. No.97TB100108), DOI 10.1109/DCC.1997.582137
   Schindler M, 1998, IEEE DATA COMPR CONF, P572, DOI 10.1109/DCC.1998.672314
   Seward J., 2000, Proceedings DCC 2000. Data Compression Conference, P173, DOI 10.1109/DCC.2000.838157
   Seward J, 2001, IEEE DATA COMPR CONF, P439, DOI 10.1109/DCC.2001.917175
   SLEATOR DD, 1985, COMMUN ACM, V28, P202, DOI 10.1145/2786.2793
   Yokoo H, 1999, ELECTRON COMM JPN 3, V82, P18, DOI 10.1002/(SICI)1520-6440(199906)82:6<18::AID-ECJC3>3.0.CO;2-7
   Yokoo H, 2010, LECT NOTES COMPUT SC, V6129, P338, DOI 10.1007/978-3-642-13509-5_30
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 46
TC 4
Z9 4
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2012
VL 42
IS 8
BP 1037
EP 1054
DI 10.1002/spe.1112
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 970MG
UT WOS:000306133400005
DA 2024-07-18
ER

PT J
AU Toegl, R
   Winkler, T
   Nauman, M
   Hong, TW
AF Toegl, Ronald
   Winkler, Thomas
   Nauman, Mohammad
   Hong, Theodore W.
TI Specification and Standardization of a Java Trusted Computing API
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE trusted computing; Java; standardization
AB The paradigm of Trusted Computing promises a new approach to improve the security of computer systems. The core functionality, based on a hardware component known as Trusted Platform Module, is integrated into commodity hardware. However, operating system integration and application software support remains limited at present. In particular, for Java, the most widely used platform-independent computing environment, there is currently no generally accepted Trusted Computing API. In this article, we describe the design of a high-level API for Trusted Computing. We report on the current state of the Trusted Computing Group's software architecture and on previous approaches targeting Java. We derive our requirements and design goals and describe a novel API design. We report on our transparent approach to standardization in the Java Community Process. The result of this effort is the API we propose in the Java Specification Request 321. In this work, we not only present the design of this new API but also discuss implementation and testing strategies. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Toegl, Ronald] Graz Univ Technol, Inst Appl Informat Proc & Commun IAIK, A-8010 Graz, Austria.
   [Winkler, Thomas] Klagenfurt Univ, Pervas Comp Grp, Inst Networked & Embedded Syst NES, A-9020 Klagenfurt, Austria.
   [Hong, Theodore W.] Univ Cambridge, Comp Lab, Cambridge CB3 0FD, England.
C3 Graz University of Technology; University of Klagenfurt; University of
   Cambridge
RP Toegl, R (corresponding author), Graz Univ Technol, Inst Appl Informat Proc & Commun IAIK, Inffeldgasse 16A, A-8010 Graz, Austria.
EM ronald.toegl@iaik.tugraz.at
OI Nauman, Mohammad/0000-0003-0941-2549
FU European Commission [IST-027635]; Osterreichische
   Forschungsforderungsgesellschaft (FFG) [820848]
FX The authors' work was supported by the European Commission's 6th
   Framework Programme Open_TC, Contract no. IST-027635 and by the
   Osterreichische Forschungsforderungsgesellschaft (FFG) through project
   acTvSM, funding theme FIT-IT, no. 820848.
CR Advanced Micro Devices, 2005, ADV MICR PUBL
   Alam M, 2008, P 2008 ACM WORKSH SE, P21
   [Anonymous], 2006, 2 WORKSH ADV TRUST C
   [Anonymous], JUNIT POCKET GUIDE
   Baldwin Adrian, 2009, Operating Systems Review, V43, P44, DOI 10.1145/1496909.1496919
   Balfe S, 2007, P ADV INF NETW APPL
   Berger Stefan, 2008, Operating Systems Review, V42, P40, DOI 10.1145/1341312.1341321
   Berger S, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 15TH USENIX SECURITY SYMPOSIUM, P305
   Brett A, 2009, BROADB MULT SYST BRO, P1, DOI [10.1109/ISBMSB.2009.5133835, DOI 10.1109/ISBMSB.2009.5133835]
   Brickell Ernest F., 2004, P 11 ACM C COMP COMM, P132, DOI DOI 10.1145/1030083.1030103
   Cabiddu G, 2011, IEEE SOFTWARE, V28, P35, DOI 10.1109/MS.2010.160
   Challener D, 2008, PRACTICAL GUIDE TRUS
   Chen L, 2010, LECT NOTES COMPUTER, V5983
   Chen L, 2006, STC 06 P 1 ACM WORKS
   Coker G, 2008, LECT NOTES COMPUT SC, V5308, P1, DOI 10.1007/978-3-540-88625-9_1
   Dietrich K, 2008, LECT NOTES COMPUT SC, V4912, P156
   Dietrich K, 2010, LECT NOTES COMPUT SC, V6109, P268
   Dietrich K, 2007, STC'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON SCALABLE TRUSTED COMPUTING, P2
   EMSCB Project Consortium, 2004, EUR MULT SEC COMP BA
   England P, 2008, LECT NOTES COMPUT SC, V4968, P1
   Garfinkel T., 2003, Operating Systems Review, V37, P193, DOI 10.1145/1165389.945464
   Getov V, 2001, COMMUN ACM, V44, P118, DOI 10.1145/383845.383872
   Grawrock D., 2006, INTEL SAFER COMPUTIN
   Grawrock D., 2009, DYNAMICS TRUSTED PLA, V1st
   Hermanowski M, 2009, TPM4JAVA
   Hoffman L, 2006, JT HARNESS
   IBM Corp, 2008, TROUS OP SOURC TEG S
   Intel Corporation, 2008, TRUST BOOT OP SOURC
   JSR 321 Expert Group, 2011, JSR 321 TRU IN PRESS
   Kauer B., 2007, SS 07 P 16 USENIX SE, P1
   Kerckhoffs A., 1883, Journal des Sciences Millitaires, pIX
   Löhr H, 2007, LECT NOTES COMPUT SC, V4610, P372
   Lyle J, 2009, LECT NOTES COMPUT SC, V5471, P153, DOI 10.1007/978-3-642-00587-9_10
   Mao W, 2009, LECT NOTES COMPUTER, V5087
   McCune J, 2010, IEEE S SEC PRIV IEEE
   Microsoft, 2007, TPM BAS SERV MICR DE
   OpenTC Project Consortium, 2005, OP TRUST COMP OPENTC
   Ort E., 2001, JAVA COMPATIBILITY T
   Peng XG, 2010, INT CONF COMP SCI, P5, DOI 10.1109/ICCSIT.2010.5564906
   PIRKER M, 2009, LNCS, V5471
   Pirker M, 2010, TRUSTED COMPUTING JA
   Pirker M, 2010, LECT NOTES COMPUTER, V6101
   Pirker M, 2010, J UNIVERS COMPUT SCI, V16, P531
   Reiter A, 2011, LECT NOTES COMPUTER, V6802
   Roubtsov V., 2006, EMMA USER GUIDE
   *RSA LAB, 2004, PKCS 11 V2 20 CRYPT
   Sailer R, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 13TH USENIX SECURITY SYMPOSIUM, P223
   Sarmenta L, 2006, P STC 06 ACM
   Sarmenta L, 2007, TPM J JAVA BASED API
   Schnepp I, 2010, JSR 321 FEED BACK TE
   Selhorst M, 2008, TSS STUDY
   Shim R, 2010, WORLDWIDE INTERFACES
   Smith M, 2006, J PARALLEL DISTR COM, V66, P1189, DOI 10.1016/j.jpdc.2006.04.009
   Stuble C, 2010, MUTSS SIMPLIFIED TRU
   Stueble C, 2010, LNCS
   Stumpf F, 2007, LECT NOTES COMPUT SC, V4610, P191
   Toegl R, 2009, P 1 INT C FUT TRUST
   Toegl R, 2011, LECT NOTES COMPUTER, V6802
   Toegl R, 2009, STC 2009, P61
   Toegl R, 2009, LECT NOTES COMPUT SC, V5576, P60, DOI 10.1007/978-3-642-02617-1_7
   *TRUST COMP GROUP, 2007, TCG TPM SPEC VERS 1
   Trusted Computing Group, 2007, TCG SOFTW STACK SPEC
   Trusted Computing Group, 2008, TCG MOB TRUST MOD SP
   Vejda T, 2008, LNCS, V4968
NR 64
TC 2
Z9 2
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2012
VL 42
IS 8
BP 945
EP 965
DI 10.1002/spe.1095
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 970MG
UT WOS:000306133400001
DA 2024-07-18
ER

PT J
AU Fenwick, PM
AF Fenwick, P. M.
TI PPM compression without escapes
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE PPM; no escapes; bit-wise compression
AB A significant cost in PPM data compression (and often the major cost) is the provision and efficient coding of escapes while building contexts. This paper presents some recent, preliminary, work on a new technique for eliminating escapes in PPM compression, using bit-wise compression with binary contexts. It shows that PPM without escapes can achieve averages of 2.5 bits per character on the Calgary Corpus and 2.2 bpc on the Canterbury Corpus, both values comparing well with accepted good compressors. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
C3 University of Auckland
RP Fenwick, PM (corresponding author), Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
EM p.fenwick@auckland.ac.nz
CR [Anonymous], 2010, CTW CONTEXT TREE WEI
   Bloom C, 1988, SOLVING PROBLEMS CON
   CLEARY JG, 1984, IEEE T COMMUN, V32, P396, DOI 10.1109/TCOM.1984.1096090
   CLEARY JG, 1995, DAT COMPR C, P52
   Fenwick P, 2007, THEOR COMPUT SCI, V387, P200, DOI 10.1016/j.tcs.2007.07.012
   WILLEMS FMJ, 1995, IEEE T INFORM THEORY, V41, P653, DOI 10.1109/18.382012
NR 6
TC 2
Z9 2
U1 0
U2 4
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2012
VL 42
IS 2
BP 255
EP 260
DI 10.1002/spe.1070
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 880OQ
UT WOS:000299417200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kim, KH
   Qian, J
   Zhang, Z
   Zhou, Q
   Moon, KD
   Park, JH
   Park, KR
   Kim, DH
AF Kim, Kwang-Hae (Kane)
   Qian, Jing
   Zhang, Zhen
   Zhou, Qian
   Moon, Kyung-Deok
   Park, Jun-Hee
   Park, Kwang-Roh
   Kim, Doo-Hyun
TI A scheme for reliable real-time messaging with bounded delays
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 13th IEEE International Symposium on Object/Component/Service-Oriented
   Real-Time Distributed Computing (ISORC)
CY MAY 05-06, 2010
CL Carmona, SPAIN
SP IEEE
DE reliable messaging; delay bound; message loss; detection/reaction
   latency; real-time messaging; clock synchronization
ID COMMUNICATION
AB Network-based real-time computing applications that require tightly bounded end-to-end delays have been increasing at a steady rate in recent years. A messaging layer that yields tight bounds on the latencies in detecting message losses and enables the application layer to initiate a timely recovery action has thus become highly desirable. In this paper, we present a new reliable real-time messaging scheme called the Delay-Bounded Reliable Messaging Scheme (DB-RMS) that is aimed at meeting such requirements. It is built on top of the User Datagram Protocol sub-layer. DB-RMS provides multiple service options, each with different fault detection/recovery capabilities and different costs in terms of the execution overhead. This feature makes DB-RMS suitable for a variety of applications. In this paper, the DB-RMS service options and the corresponding support protocols are presented first followed by a formal analysis on the detection and reaction latency bounds under various service options. A messaging layer prototype using DB-RMS has been implemented. To demonstrate the practice of the DB-RMS, we implemented a clock synchronization algorithm for 802.11 wireless local area networks on top of the DB-RMS messaging layer. Performance measurements of the prototype implementation have been taken, and the positive results obtained are also presented. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Kim, Doo-Hyun] Konkuk Univ, Seoul, South Korea.
   [Kim, Kwang-Hae (Kane); Qian, Jing; Zhang, Zhen] Univ Calif Irvine, Dept EECS, DREAM Lab, Irvine, CA USA.
   [Zhou, Qian] Microsoft Res, Redmond, WA USA.
   [Moon, Kyung-Deok; Park, Jun-Hee; Park, Kwang-Roh] Elect & Telecom Res Inst, Taejon, South Korea.
C3 Konkuk University; University of California System; University of
   California Irvine; Microsoft; Electronics & Telecommunications Research
   Institute - Korea (ETRI)
RP Kim, DH (corresponding author), Konkuk Univ, Seoul, South Korea.
EM doohyun@konkuk.ac.kr
RI Kim, Doo-Hyun/D-9805-2011
CR BALAKRISHNAN H, 2002, 3449 RFC
   Bessani AN, 2005, LECT NOTES COMPUT SC, V3760, P662
   CRISTIAN F, 1989, DISTRIB COMPUT, V3, P146, DOI 10.1007/BF01784024
   Elmenreich W, 2001, INTRO TTP C TTP A
   GIUSTINIANO D, P IEEE WOWMOM 2007 E, P1
   Goyal P., 1995, P 5 NOSSDAV, P278
   Henrich E, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P91, DOI 10.1109/ISORC.2008.87
   Hsu C, 2009, P ACM SPIE MULT COMP
   *ISO IEC, 1999, 8802111999E ISOIEC
   Kerry S., 2007, IEEE STD 80211 2007, P1
   Kim KHK, 2007, 10TH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT AND COMPONENT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P29, DOI 10.1109/ISORC.2007.31
   Kim KH, 2000, COMPUTER, V33, P72, DOI 10.1109/2.846321
   Kim KHK, 2005, ISORC 2005: EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P34
   Kim KHK, 1997, COMPUTER, V30, P62, DOI 10.1109/2.607090
   Kopetz H., 1993, Digest of Papers FTCS-23 The Twenty-Third International Symposium on Fault-Tolerant Computing, P524, DOI 10.1109/FTCS.1993.627355
   Kopetz H, 1997, REAL TIME SYSTEMS DE
   KOPETZ H, 2002, P IEEE SPEC ISS MOD
   Kopetz H., 1989, 1589 TU WIEN
   Kopetz H., 1997, REAL TIME SYSTEMS DE
   Li F, 2009, IWCMC, P176
   Liang S., 2002, INT C NETW PROT
   Liu S, 2009, P ISORC 09 TOK
   MILLS DL, 1991, IEEE T COMMUN, V39, P1482, DOI 10.1109/26.103043
   N SS, 2007, IEEE T VEH TECHNOL, V56, P2346, DOI 10.1109/TVT.2007.897646
   NELSON J, 2002, P 5 S OP SYST DES IM, P147
   Nett E, 2003, IEEE T COMPUT, V52, P166, DOI 10.1109/TC.2003.1176984
   Obermaisser R, 2005, WORDS 2005: 10TH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE, PROCEEDINGS, P241, DOI 10.1109/WORDS.2005.55
   Partridge C., 1990, 1151 RFC
   Pinho LM, 2003, IEEE T COMPUT, V52, P1594, DOI 10.1109/TC.2003.1252855
   Raisinghani VT, 2006, IEEE COMMUN MAG, V44, P85, DOI 10.1109/MCOM.2006.1580937
   Ravindran K, 2008, CONSUM COMM NETWORK, P1128, DOI 10.1109/ccnc08.2007.254
   Schulzrinne H., 2003, RTP TRANSPORT PROTOC
   Sinha P., 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P126, DOI 10.1109/REAL.1999.818834
   Tian Y, 2005, IEEE COMMUN MAG, pS27, DOI 10.1109/MCOM.2005.1404595
   [TTA-Group TTTech], 2003, TIME TRIGG PROT TTP
   van der Schaar M, 2006, IEEE T MOBILE COMPUT, V5, P755, DOI 10.1109/TMC.2006.81
   Wellings A, 2002, ISORC 2002: FIFTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P13, DOI 10.1109/ISORC.2002.1003655
NR 37
TC 0
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2011
VL 41
IS 12
SI SI
BP 1387
EP 1407
DI 10.1002/spe.1107
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 842NP
UT WOS:000296606500002
DA 2024-07-18
ER

PT J
AU Jiang, B
   Tse, TH
   Grieskamp, W
   Kicillof, N
   Cao, YM
   Li, X
   Chan, WK
AF Jiang, Bo
   Tse, T. H.
   Grieskamp, Wolfgang
   Kicillof, Nicolas
   Cao, Yiming
   Li, Xiang
   Chan, W. K.
TI Assuring the model evolution of protocol software specifications by
   regression testing process improvement
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE model-based testing; regression testing; protocol document testing
ID TEST-CASE PRIORITIZATION
AB Model-based testing helps test engineers automate their testing tasks so that they are more cost-effective. When the model is changed because of the evolution of the specification, it is important to maintain the test suites up to date for regression testing. A complete regeneration of the whole test suite from the new model, although inefficient, is still frequently used in the industry, including Microsoft. To handle specification evolution effectively, we propose a test case reusability analysis technique to identify reusable test cases of the original test suite based on graph analysis. We also develop a test suite augmentation technique to generate new test cases to cover the change-related parts of the new model. The experiment on four large protocol document testing projects shows that our technique can successfully identify a high percentage of reusable test cases and generate low-redundancy new test cases. When compared with a complete regeneration of the whole test suite, our technique significantly reduces regression testing time while maintaining the stability of requirement coverage over the evolution of requirements specifications. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Chan, W. K.] City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
   [Jiang, Bo; Tse, T. H.] Univ Hong Kong, Pokfulam, Hong Kong, Peoples R China.
   [Grieskamp, Wolfgang; Kicillof, Nicolas] Microsoft Corp, Redmond, WA 98052 USA.
   [Cao, Yiming; Li, Xiang] Microsoft Corp, Beijing, Peoples R China.
C3 City University of Hong Kong; University of Hong Kong; Microsoft;
   Microsoft
RP Chan, WK (corresponding author), City Univ Hong Kong, Dept Comp Sci, Tat Chee Ave, Kowloon, Hong Kong, Peoples R China.
EM wkchan@cs.cityu.edu.hk
RI Chan, Wah Kheong/AGA-6636-2022; Cao, Yiming/D-3541-2013; Tse,
   T.H./C-6590-2008
OI Chan, Wah Kheong/0000-0002-9105-5837; Tse, T.H./0000-0002-0460-8377;
   Chan, Wing Kwong/0000-0001-7726-6235
FU Research Grants Council of Hong Kong [717308]; City University of Hong
   Kong [7008039]; Microsoft Corporation
FX This research is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong (project no. 717308), a Strategic
   Research Grant of City University of Hong Kong (project no. 7008039),
   and an internship at Microsoft Corporation.
CR Alur R., 1995, Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, P363, DOI 10.1145/225058.225161
   [Anonymous], P WORKSH ARCH DEP SY
   [Anonymous], INT S SOFTW TEST AN
   BALL T, 1998, ACM SOFTWARE ENG NOT, V23, P134
   Bo Jiang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P62, DOI 10.1109/QSIC.2010.55
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   CHAKRABARTI SK, 2006, P INT C SOFTW ENG AD
   Chen YX, 2002, PROC INT C TOOLS ART, P67, DOI 10.1109/TAI.2002.1180789
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   ELFAKIH K, 2002, P IFIP 14 INT C TEST, P373
   GRIESKAMP W, 2008, P 1 INT C SOFTW TEST, P502
   Grieskamp W, 2006, LECT NOTES COMPUT SC, V4262, P1
   Grieskamp W, 2006, INT J SOFTW ENG KNOW, V16, P705, DOI 10.1142/S0218194006002963
   Harrold MJ, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P99, DOI 10.1109/FOSM.2008.4659253
   Iqbal MuhammadZohaib Z., 2007, Proceedings of the 3rd international workshop on Advances in model-based testing, P44
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jiang B, 2009, P INT COMP SOFTW APP, P99, DOI 10.1109/COMPSAC.2009.23
   Korel B, 2002, PROC IEEE INT CONF S, P214, DOI 10.1109/ICSM.2002.1167768
   Kuliamin VV, 2003, PROGRAM COMPUT SOFT+, V29, P310, DOI 10.1023/B:PACS.0000004131.54590.fb
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   MEMON AM, 2003, ACM SIGSOFT SOFTWARE, V28, P118, DOI DOI 10.1145/949952.940088
   Naslavsky L, 2009, PROC IEEE INT CONF S, P515, DOI 10.1109/ICSM.2009.5306338
   Orso A, 2007, SOFTW TEST VERIF REL, V17, P61, DOI 10.1002/stvr.344
   Person Suzette, 2008, P 16 INT S FDN SOFTW, P226, DOI [DOI 10.1145/1453101.1453131, 10.1145/1453101.1453131]
   Rothermel G, 1998, IEEE T SOFTWARE ENG, V24, P401, DOI 10.1109/32.689399
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Santich R., 2008, Phytotherapy essentials: healthy children - optimising children's health with herbs
   SCHIEFERDECKER I, 2002, IFIP ADV INFORM COMM, V82
   Tahat LH, 2001, P INT COMP SOFTW APP, P489, DOI 10.1109/CMPSAC.2001.960658
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Xu ZH, 2009, ASIA PAC SOFWR ENG, P406, DOI 10.1109/APSEC.2009.29
   Zhang L, 2009, PROCEEDINGS OF 2009 INTERNATIONAL SYMPOSIUM ON AIRCRAFT AIRWORTHINESS, P212
   Zhang QQ, 2010, PROCEEDINGS OF 2010 INTERNATIONAL WORKSHOP ON DIFFUSE POLLUTION-MANAGEMENT MEASURES AND CONTROL TECHNIQUE, P171, DOI 10.1109/QSIC.2010.16
NR 35
TC 15
Z9 16
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2011
VL 41
IS 10
SI SI
BP 1073
EP 1103
DI 10.1002/spe.1092
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 818RV
UT WOS:000294773600005
OA Green Published
DA 2024-07-18
ER

PT J
AU Bosch, J
   Bosch-Sijtsema, PM
AF Bosch, Jan
   Bosch-Sijtsema, Petra M.
TI Introducing agile customer-centered development in a legacy software
   product line
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software product lines; agile software development; compositional
   software engineering; design thinking
AB The ability to rapidly respond to customer interest and to effectively prioritize development effort has been a long-standing challenge for mass-market software intensive products. This problem is exacerbated in the context of software product lines as functionality may easily fall over software asset and organizational boundaries with consequent losses in efficiency and nimbleness. Some companies facing these problems in their product line respond with a new development process. In this paper we discuss the developments within a single case study, Intuit's Quickbooks product line that combined agile software development, design thinking and self-organizing teams in a successful approach, which provided a significant improvement in terms of responsiveness and accuracy of building customer value. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Bosch, Jan; Bosch-Sijtsema, Petra M.] Chalmers, S-41296 Gothenburg, Sweden.
C3 Chalmers University of Technology
RP Bosch, J (corresponding author), Chalmers, S-41296 Gothenburg, Sweden.
EM jan@janbosch.com
RI Bosch-Sijtsema, Petra/B-2889-2016
OI Bosch-Sijtsema, Petra/0000-0001-8141-9759
CR Adler P.A., 1994, HDB QUALITATIVE RES, P377, DOI DOI 10.1016/J.RBMO.2010.02.012
   [Anonymous], 2004, Agile and Iterative Development
   BABAR MA, 2009, P 13 INT SOFTW PROD, V446, P171
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Bosch J, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P217, DOI 10.1007/978-3-642-12442-6_15
   Bosch J, 2010, IEEE SOFTWARE, V27, P29, DOI 10.1109/MS.2010.32
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Hanssen GK, 2008, J SYST SOFTWARE, V81, P843, DOI 10.1016/j.jss.2007.10.025
   Kruchten Philippe., 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - ICSE '10, V2, P497, DOI DOI 10.1145/1810295.1810448
   Miller Jody., 1997, QUAL RES, P99
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Schwaber K., 2001, Agile software development with scrum
   TIAN K, 2006, 1 INT WORKSH AG PROD
   van der Linden F, 2004, LECT NOTES COMPUT SC, V3154, P110
NR 20
TC 22
Z9 25
U1 1
U2 17
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2011
VL 41
IS 8
SI SI
BP 871
EP 882
DI 10.1002/spe.1063
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 777DW
UT WOS:000291596600002
DA 2024-07-18
ER

PT J
AU Farahbod, R
   Glässer, U
AF Farahbod, Roozbeh
   Glaesser, Uwe
TI The CoreASM modeling framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CoreASM; abstract state machines; specification language; executable
   specification; modeling framework; software system design; formal
   methods; requirements engineering
ID ARCHITECTURE; SYSTEMS
AB Engineering complex distributed systems calls for systematic approaches that build on well-defined methodological frameworks and supporting computational tools. This paper addresses the specification, design, and development of the CoreASM modeling framework, focusing on a set of features that any comprehensive framework and tool environment for modeling and analysis of complex distributed systems should provide. We discuss the key design features, the underlying design principles, and the lessons learned using CoreASM. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Farahbod, Roozbeh] Def R&D Canada Valcartier, Quebec City, PQ, Canada.
   [Glaesser, Uwe] Simon Fraser Univ, Sch Comp Sci, Burnaby, BC V5A 1S6, Canada.
C3 Simon Fraser University
RP Farahbod, R (corresponding author), Def R&D Canada, Decis Support Syst Sect C2, 2459 Pie XI Blvd N, Quebec City, PQ, Canada.
EM roozbeh.farahbod@drdc-rddc.gc.ca
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   ABRIAL JR, 2009, LECT NOTES COMPUTER, V5115
   Altenhofen M, 2009, LECT NOTES COMPUT SC, V5486, P1, DOI 10.1007/978-3-642-03429-9_1
   Anlauff M., eXtensible Abstract State Machines
   [Anonymous], 2001, Java and the Java Virtual Machine: Definition, Verification, Validation
   Beckers J, 2008, LECT NOTES COMPUT SC, V5238, P112
   Beckert B, 1996, LECT NOTES COMPUT SC, V1092, P64
   Berry DM, 2002, SCI COMPUT PROGRAM, V42, P11, DOI 10.1016/S0167-6423(01)00026-0
   Bjorner Dines., 1978, LECT NOTES COMPUTER, V61
   BORGER E, 1995, KLUW S VLSI, V307, P107
   Borger E., 2003, ABSTRACT STATE MACHI
   Börger E, 2007, FORM ASP COMPUT, V19, P225, DOI 10.1007/s00165-006-0019-y
   Brantingham P, 2009, MATHEMATICAL METHODS IN COUNTERTERRORISM, P9, DOI 10.1007/978-3-211-09442-6_2
   Del Castillo G, 1999, LECT NOTES COMPUT SC, V1641, P311
   DelCastillo G, 1996, LECT NOTES COMPUT SC, V1092, P191
   DIESEN D, 1995, THESIS U OSLO NORWAY
   Farahbod R., 2006, International Journal of Business Process Integration and Management, V1, P279, DOI 10.1504/IJBPIM.2006.012626
   Farahbod R, 2009, LECT NOTES COMPUT SC, V5115, P147, DOI 10.1007/978-3-642-11447-2_10
   FARAHBOD R, 2008, P 11 INT C INF FUS F
   Farahbod R., 2009, THESIS S FRASER U BU
   FARAHBOD R, 2009, P SPIE S DEF SEC SEN
   Farahbod R, 2007, FUND INFORM, V77, P71
   FOWLER M, 2003, NEW METHODOLOGY
   Glässer U, 2004, IEEE T SOFTWARE ENG, V30, P458, DOI 10.1109/TSE.2004.25
   Glässer U, 2003, COMPUT NETW, V42, P343, DOI 10.1016/S1389-1286(03)00247-0
   GUREVICH Y, 1994, IFIP 13 WORLD COMP C, V1, P587
   Gurevich Yuri, 1995, SPECIFICATION VALIDA, P9
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Johnson CW, 1996, SOFTWARE ENG J, V11, P225, DOI 10.1049/sej.1996.0028
   LEMCKE J, 2007, INT C SERV COMP WRKS, P262
   MA GZ, 2007, THESIS S FRASER U CA
   MAUPIN P, 2007, P 10 INT C INF FUS Q
   Micheloud S., 2003, SCALA ASML SIDE SIDE
   *MICR FSE GROUP, 2003, ABSTR STAT MACH LANG
   RUSSELL B, 1919, MONIST, V29
   RUSSELL B, 1918, MONIST, V28
   Spivey JMichael., 1992, international series in computer science
   Standish T. A., 1975, SIGPLAN Notices, V10, P18, DOI 10.1145/987305.987310
   Veanes M., 2008, Formal methods and testing, chapter Model-based testing of object-oriented reactive systems with spec explorer, P39, DOI DOI 10.1007/978-3-540-78917-8
   Z NOTATION TOOL SUPP
   ASMGOFER
NR 41
TC 8
Z9 8
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2011
VL 41
IS 2
SI SI
BP 167
EP 178
DI 10.1002/spe.1029
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718FH
UT WOS:000287106000005
DA 2024-07-18
ER

PT J
AU Selçuk, YE
   Erdogan, N
AF Selcuk, Yunus Emre
   Erdogan, Nadia
TI Role models-implementation-based approaches to using roles
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE role models; instance-level specialization; object-level inheritance
ID OBJECTS
AB A role of an entity can be defined as the set of properties that are important for an object in order to behave in a certain way, as expected by a set of other objects. A role model is a software that specifies a style of designing and implementing roles. This paper evaluates roles in the context of modeling dynamic systems by examining its foundations, surveying the recent role models available for academic use and giving implementation examples. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Selcuk, Yunus Emre] Yildiz Tech Univ, Istanbul, Turkey.
   [Erdogan, Nadia] Istanbul Tech Univ, TR-80626 Istanbul, Turkey.
C3 Yildiz Technical University; Istanbul Technical University
RP Selçuk, YE (corresponding author), Yildiz Tech Univ, Istanbul, Turkey.
EM yunus@ce.yildiz.edu.tr
RI SELÇUK, YUNUS EMRE/AAZ-7692-2020; Erdogan, Nadia/ABB-2583-2020
OI SELÇUK, YUNUS EMRE/0000-0001-8179-8955; Erdogan,
   Nadia/0000-0002-7719-1955
CR Albano A., 1993, 19th International Conference on Very Large Data Bases Proceedings, P39
   Aritsugi M, 2000, SOFTWARE PRACT EXPER, V30, P151, DOI 10.1002/(SICI)1097-024X(200002)30:2<151::AID-SPE295>3.0.CO;2-0
   Baldoni M, 2006, ELECTRON NOTES THEOR, V150, P9, DOI 10.1016/j.entcs.2005.12.021
   Bettini L, 2003, ELECT NOTES THEORETI, V82, P33
   Cabri G, 2006, SCI COMPUT PROGRAM, V59, P127, DOI 10.1016/j.scico.2005.07.008
   Cabri G, 2005, IBM SYST J, V44, P185, DOI 10.1147/sj.441.0185
   Cabri G, 2003, LECT NOTES COMPUT SC, V2888, P145
   COLMAN AW, 2005, P AAAI FALL S ROL IN, P55
   Drossopoulou S, 2002, ACM T PROGR LANG SYS, V24, P153, DOI 10.1145/514952.514955
   Fowler M., 1997, PATTERN LANGUAGES PR
   Fowler M., 1977, ANAL PATTERNS REUSAB
   Frank U., 2000, JOOP, V13, P13
   Gamma Erich., 1994, DESIGN PATTERNS
   Gottlob G, 1996, ACM T INFORM SYST, V14, P268, DOI 10.1145/230538.230540
   Graversen KB, 2006, THESIS U COPENHAGEN, P44
   Graversen KB., 2003, AOSD 03 WORKSH SPLAT
   Hannemann Jan., 2005, AOSD 05, P135
   Herrmann S, 2007, APPL ONTOL, V2, P181
   Kendall EA, 1999, BT TECHNOL J, V17, P46, DOI 10.1023/A:1009690824323
   Kristensen B. B., 1996, Theory and Practice of Object Systems, V2, P143, DOI 10.1002/(SICI)1096-9942(1996)2:3<143::AID-TAPO2>3.0.CO;2-X
   Kristensen BentBruun., 1995, Proceedings of the 2nd International Conference on Object-Oriented Information Systems, P57
   Lee JS, 2002, SOFTWARE PRACT EXPER, V32, P1317, DOI 10.1002/spe.483
   Loebe F., 2005, ROLES INTERDISCIPLIN, P93
   Ossher H, 2001, COMMUN ACM, V44, P43, DOI 10.1145/383845.383856
   Reenskaug Trygve., 1995, Working With Objects: The Ooram Software Engineering Method
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Schrefl M, 2004, SOFTWARE PRACT EXPER, V34, P449, DOI 10.1002/spe.571
   Selcuk YE, 2006, THESIS ISTANBUL TU I, P103
   Selcuk YE, 2005, AAAI 05 FALL S SER R, P120
   Selçuk YE, 2006, LECT NOTES ARTIF INT, V3963, P29, DOI 10.1007/11759683_3
   Sintes T., 2001, JAVAWORLD, P1
   Steimann F, 2000, DATA KNOWL ENG, V35, P83, DOI 10.1016/S0169-023X(00)00023-9
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Sunagawa E, 2006, LECT NOTES ARTIF INT, V4248, P67
   Tamai T, 2005, PROC INT CONF SOFTW, P166
   Thomas G, 2005, AAAI 05 ROL INT PERS, P144
   Tripathi AR, 2002, INT CON DISTR COMP S, P393, DOI 10.1109/ICDCS.2002.1022277
   Ungar D, 1987, P ACM C OBJ OR PROGR, P214
   Wong RK, 1997, PROC INT CONF DATA, P402, DOI 10.1109/ICDE.1997.581963
   Zendler AM, 1998, INFORM SOFTWARE TECH, V40, P475, DOI 10.1016/S0950-5849(98)00076-7
NR 40
TC 2
Z9 3
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2011
VL 41
IS 1
BP 1
EP 22
DI 10.1002/spe.994
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 701UB
UT WOS:000285847800001
DA 2024-07-18
ER

PT J
AU Chae, HS
   Park, JG
   Cui, JF
   Lee, JS
AF Chae, Heung Seok
   Park, Jae Geol
   Cui, Jian Feng
   Lee, Joon Sang
TI An adaptive load balancing management technique for RFID middleware
   systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive load balancing; RFID middleware; performance model; load
   balancing strategy
ID ALGORITHMS
AB In recent years, Radio Frequency Identification (REID) industries have taken a great interest in utilizing the benefits of RFID for supply chain management, inventory control and various other applications. This paper proposed an adaptive load balancing technique for RFID middleware systems to meet the demands of scalability and heterogeneity. First, we explored five basic load balancing policies, namely, information policy, job selection policy, transfer policy, initiation policy and location policy. Eighteen load balancing schemes were then proposed for RFID middleware systems that were combinations of various types of the five basic load balancing policies. Our empirical study suggested that these load balancing strategies performed differently under different workload statuses. Finally, an adaptive load balancing strategy was proposed. The load balancing schemes and the proposed adaptive load balancing strategy have been implemented in the RFID Middleware Load Management System (RM-LMS). Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Chae, Heung Seok; Cui, Jian Feng] Pusan Natl Univ, Dept Comp Sci & Engn, Pusan, South Korea.
C3 Pusan National University
RP Chae, HS (corresponding author), Pusan Natl Univ, Dept Comp Sci & Engn, Pusan, South Korea.
EM hschae@pusan.ac.kr
RI cui, jian/IAN-2010-2023
FU Korean Ministry of Education, Science and Technology
FX This work was supported by the Korean Ministry of Education, Science and
   Technology Grant (The Regional Core Research Program/Institute of
   Logistics Information Technology).
CR Al-Amri M. S., 2002, International Journal of Network Management, V12, P165, DOI 10.1002/nem.428
   Myint CC, 2005, APSITT 2005: 6th Asia-Pacific Symposium on Information and Telecommunication Technologies, Proceedings, P66
   CORRADI A, 1999, IEEE PARALL DISTRIB, V17, P22
   Dong QF, 2008, COMPUT NETW, V52, P1782, DOI 10.1016/j.comnet.2008.03.003
   EAGER DL, 1986, PERFORM EVALUATION, V6, P53, DOI 10.1016/0166-5316(86)90008-8
   EAGER DL, 1986, IEEE T SOFTWARE ENG, V12, P662, DOI 10.1109/TSE.1986.6312961
   EMMERICH W., 2000, P C FUTURE SOFTWARE, P117, DOI DOI 10.1145/336512.336542
   *EPCGLOBAL INC, 2008, EPCGLOBAL ARCH FRAM
   EPCglobal Inc, 2008, APPL LEV EV ALE SPEC
   KIM H, 2007, THESIS KOREA MARITIM
   Kremien O., 1993, IEEE Parallel & Distributed Technology: Systems & Applications, V1, P62, DOI 10.1109/88.242447
   KRUEGER P, 1994, IEEE T SOFTWARE ENG, V20, P432, DOI 10.1109/32.295892
   Lu C, 1996, INT CON DISTR COMP S, P629, DOI 10.1109/ICDCS.1996.508014
   Lu K, 2006, LECT NOTES COMPUT SC, V3947, P466
   PARK J, 2006, P INT JOINT C SICE I, P4409
   Park SM, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P132, DOI 10.1109/SERA.2007.95
   PAYLI R, 2004, P PAR CFD COMP FLUID, P1
   Qin X, 2008, J NETW COMPUT APPL, V31, P32, DOI 10.1016/j.jnca.2006.07.001
   Sanghi D, 2004, SOFTWARE PRACT EXPER, V34, P339, DOI 10.1002/spe.567
   Shah R, 2007, IEEE T PARALL DISTR, V18, P1675, DOI 10.1109/TPDS.2007.1115
   Sheng QZ, 2008, COMPUTER, V41, P21, DOI 10.1109/MC.2008.386
   SHIVARATRI NG, 1992, COMPUTER, V25, P33, DOI 10.1109/2.179115
   THEIMER MM, 1989, IEEE T SOFTWARE ENG, V15, P1444, DOI 10.1109/32.41336
   Weinstein R., 2005, IT Professional, V7, P27, DOI 10.1109/MITP.2005.69
   ZHU W, 1995, P 1 AIZ INT S PAR AL, P220
NR 25
TC 8
Z9 9
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2010
VL 40
IS 6
BP 485
EP 506
DI 10.1002/spe.967
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 592CH
UT WOS:000277352100001
DA 2024-07-18
ER

PT J
AU Tun, TT
   Trew, T
   Jackson, M
   Laney, R
   Nuseibeh, B
AF Tun, Thein Than
   Trew, Tim
   Jackson, Michael
   Laney, Robin
   Nuseibeh, Bashar
TI Specifying features of an evolving software system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software features; evolution; specifications; feature composition;
   problem frames
ID REQUIREMENTS
AB Software development is increasingly concerned with maintaining and extending existing software systems to meet the evolving user requirements. Many of these systems are feature-rich and are developed incrementally. As structures of existing software systems-in addition to the user requirements-influence the specifications, specifying these systems poses unique challenges. This paper reports on our experience of applying an engineering approach to specifying an evolving feature-rich television software system. In this approach, features are specified modularly by first fitting their problems to known problem patterns, and then analyzing typical concerns-meaning the potential causes of errors-associated with those patterns. In cases where the existing design poses difficulties when fitting problems to patterns, we transform its structure using known design mechanisms so that the problems fit the patterns. After deriving specifications of individual features, possible interactions between features are detected, before declaratively specifying resolutions to undesired interactions. As the concerns of features and their composition are addressed separately, the specifications derived are modular, thus, providing rich treaceability to their requirements. As well as discussing how features may be specified using natural language, we also show how their descriptions may be formalized using a form of temporal logic called the Event Calculus, and prove their correctness using an off-the-shelf tool. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Tun, Thein Than; Jackson, Michael; Laney, Robin; Nuseibeh, Bashar] Open Univ, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
   [Trew, Tim] NXP Semicond, NL-5656 AE Eindhoven, Netherlands.
C3 Open University - UK; NXP Semiconductors
RP Tun, TT (corresponding author), Open Univ, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
EM t.t.tun@open.ac.uk
OI Laney, Robin/0000-0002-9319-8209; Nuseibeh, Bashar/0000-0002-3476-053X
FU EPSRC [EP/C007719/1]
FX Contract/grant sponsor: EPSRC; contract/grant number: EP/C007719/1
CR [Anonymous], 2006, Commonsense Reasoning
   [Anonymous], J ELECT T ARTIFICI A
   Antón AI, 2003, IEEE T SOFTWARE ENG, V29, P151, DOI 10.1109/TSE.2003.1178053
   Bayardo R.J., 1997, USING CSP LOOK BACK, P203
   Bosch J, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1183236.1183263
   CLASSEN A, 2008, P INT WORKSH APPL AD, P74
   JACKSON M, 2001, PROGLEM FRAMES ANAL
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   LANCY R, 2007, P 9 INT C FEAT INT T, P141
   LI Z, 2006, P 2 INT WORKSH APP A, P65
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   Rapanotti L, 2006, IEE P-SOFTW, V153, P183, DOI 10.1049/ip-sen:20060011
   Seater R, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P169
   Shanahan M., 1999, LECT NOTES COMPUTER, V1600, P409
   TUN TT, 2007, 200813 OP U DEP COMP
   Turner CR, 1999, J SYST SOFTWARE, V49, P3, DOI 10.1016/S0164-1212(99)00062-X
   van Ommering R, 2003, SOFTWARE PRACT EXPER, V33, P1117, DOI 10.1002/spe.541
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
NR 19
TC 10
Z9 12
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG 10
PY 2009
VL 39
IS 11
BP 973
EP 1002
DI 10.1002/spe.923
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 476DP
UT WOS:000268418300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sozer, H
   Tekinerdogan, B
   Aksit, M
AF Sozer, Hasan
   Tekinerdogan, Bedir
   Aksit, Mehmet
TI FLORA: a framework for decomposing software architecture to introduce
   local recovery
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE local recovery; software architecture; availability; fault-tolerance
AB The decomposition of software architecture into modular units is usually driven by the required quality concerns. In this paper we focus on the impact of local recovery concern on the decomposition of the software system. For achieving local recovery, the system needs to be decomposed into separate units that can be recovered in isolation. However, it appears that this required decomposition for recovery is usually not aligned with the decomposition based on functional concerns. Moreover, introducing local recovery to a software system, while preserving the existing decomposition, is not trivial and requires substantial development and maintenance effort. To reduce this effort we propose a framework that supports the decomposition and implementation of software architecture for local recovery. The framework provides reusable abstractions for defining recoverable units and the necessary coordination and communication protocols for recovery. We discuss our experiences in the application and evaluation of the framework for introducing local recovery to the open-source media player called MPlayer. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Sozer, Hasan; Aksit, Mehmet] Univ Twente, Dept Comp Sci, NL-7500 AE Enschede, Netherlands.
   [Tekinerdogan, Bedir] Bilkent Univ, Dept Comp Engn, TR-06800 Ankara, Turkey.
C3 University of Twente; Ihsan Dogramaci Bilkent University
RP Sozer, H (corresponding author), Univ Twente, Dept Comp Sci, POB 217, NL-7500 AE Enschede, Netherlands.
EM sozerh@cs.utwente.nl
RI Sözer, Hasan/AAR-8697-2020; Sözer, Hasan/A-4722-2015; Tekinerdogan,
   Bedir/K-3639-2019
OI Sözer, Hasan/0000-0002-2968-4763; Sözer, Hasan/0000-0002-2968-4763;
   Tekinerdogan, Bedir/0000-0002-8538-7261
FU Netherlands Ministry of Economic Affairs
FX This work has been carried out as a part of the TRADER project under the
   responsibility of the Embedded Systems Institute. This project is
   partially supported by the Netherlands Ministry of Economic Affairs
   under the BSIK program.
CR [Anonymous], 2001, P 2001 ACM SIGPLAN S, DOI DOI 10.1145/379605.379665
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Binkley D, 2007, FoSE 2007: Future of Software Engineering, P104, DOI 10.1109/FOSE.2007.27
   BUSKENS R, 2007, LECT NOTES COMPUTER, P409
   Candea G, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P605, DOI 10.1109/DSN.2002.1029006
   CANDEA G, 2003, P 9 WORKSH HOT TOP O, P67
   CANDEA G, 2004, MICROREBOOT TECHNIQU, P31
   Clements P., 2002, DOCUMENTING SOFTWARE
   De Florio V, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1348246.1348249
   DEVISSER I, 2008, THESIS TU EINDHOVEN
   Dollimore J., 2005, DISTRIBUTED SYSTEMS, V4th
   Elrad T, 2001, COMMUN ACM, V44, P28
   *ERL, 2009, ERL OTP DES PRINC
   *ESI, 2009, TRAD PROJ
   FENLASON J, 2009, GNU GPROF GNU PROFIL
   Harris J.M., 2000, COMBINATORICS GRAPH
   HERDER JN, 2007, FAILURE RESILIENCE D, P41
   HUANG Y, 1995, SOFTWARE FAULT TOLER, P231
   HUNT G, 2007, SIGOPS OPER SYST REV, V41, P341
   Kernighan B.W., 1988, The C Programming Language
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   RASHID R, 1989, P 1989 IEEE INT C CO, P176
   RUSKEY F, 1993, LECT NOTES COMPUT SC, V762, P201
   SOZER H, 2008, INTRO RECOVERY STYLE, P167
   Teitelbaum Tim., 2000, ACM SIGSOFT Software Engineering Notes, V25, P99
NR 28
TC 12
Z9 15
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2009
VL 39
IS 10
BP 869
EP 889
DI 10.1002/spe.916
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 464HR
UT WOS:000267496500001
OA Green Published
DA 2024-07-18
ER

PT J
AU Dangelmayr, C
   Blochinger, W
AF Dangelmayr, C.
   Blochinger, W.
TI Aspect-oriented component assembly-a case study in parallel software
   design
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE aspect-oriented programming; parallel programming; code re-use; software
   metrics
ID JAVA
AB In this paper we deal with building parallel programs based on sequential application code and generic components providing specific functionality for parallelization, like load balancing or fault tolerance. We describe an architectural approach employing aspect-oriented programming to assemble arbitrary object-oriented components. Several non-trivial crosscutting concerns arising from parallelization are addressed in the light of different applications, which are representative of the most common types of parallelism. In particular, we demonstrate how aspect-oriented techniques allow us to leave all existing code untouched. We evaluate and compare our approach with its counterparts in conventional object-oriented programming. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Dangelmayr, C.; Blochinger, W.] Univ Tubingen, Symbol Computat Grp, D-72076 Tubingen, Germany.
C3 Eberhard Karls University of Tubingen
RP Blochinger, W (corresponding author), Univ Tubingen, Symbol Computat Grp, Sand 14, D-72076 Tubingen, Germany.
EM blochinger@informatik.uni-tuebingen.de
FU Ohio Supercomputer Center
FX Wolfgang Blochinger has been supported in part by the Ohio Supercomputer
   Center.
CR [Anonymous], 1997, Software engineering with reusable components
   [Anonymous], P 3 INT C ASP OR SOF
   [Anonymous], 2003, Introduction to parallel computing
   [Anonymous], 1997, Requirements engineering: a good practice guide
   Anvik J, 2005, J PARALLEL DISTR COM, V65, P1542, DOI 10.1016/j.jpdc.2005.05.029
   Ashlock D., 2006, Evolutionary Computation for Modeling and Optimization
   ASSmann Uwe., 2003, INVASIVE SOFTWARE CO
   Axelrod R., 1987, GENETIC ALGORITHMS S, P1
   Bang PF, 2007, PAST PRESENT, P3, DOI 10.1093/pastj/gt1031
   Blochinger W, 2006, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P49
   CHALABINE M, 2006, P 39 HAW INT C SYST, pB214
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CLEMENTE PJ, 2007, P 40 ANN HAW INT C S, pA257
   CONSTANTINIDES CA, 2000, ACM COMPUT SURV, V32
   Cunha CarlosA., 2006, AOSD 06 P 5 INT C AS, P134
   Danelutto M, 2002, LECT NOTES COMPUT SC, V2330, P844
   Dijkstra E.W., 1982, EWD 447: On the role of scientific thought. Selected Writings on Computing: A Personal Perspective, P60, DOI DOI 10.1007/978-1-4612-5695-3
   Falcou J, 2006, PARALLEL COMPUT, V32, P604, DOI 10.1016/j.parco.2006.06.001
   Ferreira JF, 2006, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P301
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia A., 2005, AOSD 05, P3
   GREENWOOD P, 2007, EARLYASPECTS 07 P EA, P8
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   Harbulot Bruno., 2006, AOSD 06, P63, DOI DOI 10.1145/1119655.1119666
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   Henderson-Sellers B., 1995, Object-oriented metrics: measures of complexity
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Kuchen H, 2002, LECT NOTES COMPUT SC, V2400, P620
   Kulesza U, 2006, PROC IEEE INT CONF S, P223
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Lammel Ralf., 2005, AOSD '05: Proceedings of the 4th international conference on Aspect-oriented software development, P99, DOI [10.1145/1052898.1052907, DOI 10.1145/1052898.1052907]
   LEGAISSE B, 2005, COMPONENT BASED SOFT, P139
   Lieberherr K, 2001, COMMUN ACM, V44, P39, DOI 10.1145/383845.383855
   MCMENAMIN S, 1984, ESSENTIAL SYSTEM ANA
   Neary Michael., 2002, JOINT ACM JAVA GRAND, P56
   Pawlak R, 2004, SOFTWARE PRACT EXPER, V34, P1119, DOI 10.1002/spe.605
   PAWLAK R, 2006, IEEE DISTRIBUTED SYS, V7
   PESSMIER N, 2006, P 11 INT ECOOP WORKS, P2
   Rashid A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P199, DOI 10.1109/ICRE.2002.1048526
   Rashid Awais., 2003, AOSD 03, P120
   Sakurai Kouhei., 2004, AOSD 04, P16
   Sant'Anna C., 2003, P BRAZILIAN S SOFTWA, P19
   Seinturier L, 2006, LECT NOTES COMPUT SC, V4063, P139
   SHAH V, 2002, P 13 INT S SOFTW REL, P115
   Smith L. A., 2001, P 2001 ACMIEEE C SUP, P8, DOI [10.1145/582034.582042, DOI 10.1145/582034.582042]
   Smith L.A., 2001, P 3 WORKSHOP JAVA HI, P97
   Sobral JL, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, P365, DOI 10.1109/CLUSTR.2007.4629251
   SOBRAL JL, 2006, P 20 INT PAR DISTR P, P95
   Suvee D., 2003, 2nd International Conference on Aspect-Oriented Software Development, P21
   Tan Kai., 2003, Proceedings of the ninth ACM SIGPLAN symposium on Principles and practice of parallel programming, PPoPP '03, P203, DOI DOI 10.1145/781498.781532
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Wilson Gregory V, 1994, P IFIP WORK C PROGR, P183
NR 54
TC 3
Z9 4
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN 25
PY 2009
VL 39
IS 9
BP 807
EP 832
DI 10.1002/spe.912
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 459EK
UT WOS:000267083300001
DA 2024-07-18
ER

PT J
AU Wang, YH
   Wu, IC
AF Wang, Yi-Hsien
   Wu, I-Chen
TI Achieving high and consistent rendering performance of Java AWT/Swing on
   multiple platforms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CYC Window Toolkit; DirectX; OpenGL; Windows; Linux; Mac OS X
AB Wang et al. (Softw. Pract. Exper. 2007; 37(7):727-745) observed a phenomenon of performance inconsistency in the graphics of Java Abstract Window Toolkit (AWT)/Swing among different Java runtime environments (JREs) on Windows XP This phenomenon makes it difficult to predict the performance of Java game applications. Therefore, they proposed a portable AWT/Swing architecture, called CYC Window Toolkit (CWT), to provide programmers with high and consistent rendering performance for Java game development among different JREs. They implemented a DirectX version to demonstrate the feasibility of the architecture. This paper extends the above research to other environments in two aspects. First, we evaluate the rendering performance of the original Java AWT with different combinations of JREs, image application programming interfaces, system properties and operating systems (OSs), including Windows XP, Windows Vista, Fedora and Mac OS X. The evaluation results indicate that the performance inconsistency of Java AWT also exists among the four OSs, even if the same hardware configuration is used. Second, we design an OpenGL version of CWT, named CWT-GL, to take advantage of modern 3D graphics cards, and compare the rendering performance of CWT with Java AWT/Swing. The results show that CWT-GL achieves more consistent and higher rendering performance in JREs 1.4 to 1.6 on the four OSs. The results also hint at two approaches: (a) decouple the rendering pipelines of Java AWT/Swing from the JREs for faster upgrading and supporting old JREs and (b) use other graphics libraries, such as CWT, instead of Java AWT/Swing to develop cross-platform Java games with higher and more consistent rendering performance. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Wang, Yi-Hsien; Wu, I-Chen] Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
C3 National Yang Ming Chiao Tung University
RP Wu, IC (corresponding author), Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
EM icwu@csie.nctu.edu.tw
RI Wu, I-Chen/AAB-2645-2021
OI Wu, I-Chen/0000-0003-2535-0587
FU National Science Council of the Republic of China; ThinkNewIdea Inc.
   [NSC 95-2622-E-009-008-CC3]
FX The authors would like to thank the National Science Council of the
   Republic of China and ThinkNewIdea Inc. for joint financial support of
   this research under contract number NSC 95-2622-E-009-008-CC3. Next, the
   authors would like to thank ThinkNewIdea, Inc. for providing the data
   required for this research. Finally, the authors would also like to
   thank Chin-Yi Cheng who contributed to the OpenGL implementation of CWT.
CR *3 RINGS DES INC, 2008, PUZZL PIR
   *ADV MICR DEV INC, 2008, RAD X1600 SER GPU SP
   *APPL INC, 2008, INTR JAV PROP VM OPT
   *APPL INC, 2008, GRAPH IM OV
   Burrows AL, 2002, SOFTWARE PRACT EXPER, V32, P359, DOI 10.1002/spe.441
   *BYT SOFTW, 2008, JAKE2
   CAMPBELL C, 2008, STR CRAZY IMPROVING
   Chu PC, 1998, J HEURISTICS, V4, P63, DOI 10.1023/A:1009642405419
   DENAULT A, 2007, ACM CROSSROADS, V13
   GRAY A, 2008, GC USAGE STAT
   Hsu CC, 2006, INFORM SOFTWARE TECH, V48, P471, DOI 10.1016/j.infsof.2005.05.005
   *IN FUSIO, 2008, AG EMP 2 MOB
   *INT APPL TECHN, 2008, CWT CYC WIND TOOLK
   *IONCHRON INC, 2008, JAV GAM
   *JAG LTD, 2008, RUNESCAPE
   *JAUS, 2008, GL4JAVA OPENGL JAV
   *JELL INC, 2008, YOU DONT KOW JACK
   *LWJGL, 2008, LIGHTW JAV GAM LIB
   MARNER J, 2002, EVALUATING JAVA GAME, P8
   MCREYNOLDS T, 2005, ADV GRAPHICS PROGRAM, P274
   MEYER J, 2008, AGILE2D OPENGL RENDE
   *MICR CORP, 2008, MICR DIRECTX
   *MICR CORP, 2008, MICR JAV VIRT MACH S
   *MICR CORP, 2008, DESKT WIND MAN
   *MICR CORP, 2008, AG EMP
   *MICR CORP, 2008, MICR VIS J
   *MOJ SPEC, 2008, WURM ONL
   *ODDL APS, 2008, TRIB TROUBL
   *OPENGL ARCH REV B, 2008, GL EXT FRAM OBJ OPEN
   *OPENGL ARCH REV B, 2008, WGL ARB PBUFF OPENGL
   *OPENGL ARCH REV B, 2008, OPENGL OP GRAPH LIB
   SCHABACK J, 2008, JAVA GUIS OPENGL
   SHREINER D, 2003, OPENGL PROGRAMMING G, P37
   *SUN MICR INC, 2008, JAV 3D
   *SUN MICR INC, 2005, UPD DESKT JAV FEAT J
   *SUN MICR INC, 2001, HIGH PERF GRAPH GRAP
   *SUN MICR INC, 2008, BUG ID 6260751 APPL
   *SUN MICR INC, 2004, NEW JAV 2D FEAT J2SE
   *SUN MICR INC, 2008, BUG ID 6343853 REND
   *SUN MICR INC, 2008, JOGL JAV BIND OPENGL
   *SUN MICR INC, 2008, BUG ID 5037133 MIX M
   *SUN MICR INC, 1999, AWT NAT INT
   *SUN MICR INC, 2004, SYST PROP JAV 2D TEC
   *SUN MICR INC, 2001, VOL APIS US GUID, P5
   *SUN MICR INC, 2008, JAV HOM PAG
   *SUN MICR INC, 2008, JSR 231 JAV BIND OPE
   *THINKNEWIDEA INT, 2008, CYC GAM
   *VIV GAM, 2008, LAW ORD DEAD MON
   *W3SCHOOLS, 2008, OS PLATF STAT
   Wang YH, 2007, SOFTWARE PRACT EXPER, V37, P727, DOI 10.1002/spe.786
   WONG A, 2007, P 2007 C FUT PLAY TO, P189
   *X ORG FDN, 2008, X ORG PROJ
   *XITH3D COMM, 2008, XITH3D PROJ
   *YAH INC, 2008, YAH GAM
NR 54
TC 15
Z9 17
U1 7
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2009
VL 39
IS 7
BP 701
EP 736
DI 10.1002/spe.920
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 434ZW
UT WOS:000265313900002
OA Bronze
DA 2024-07-18
ER

PT J
AU Lin, YH
   Gray, J
   Zhang, J
   Nordstrom, S
   Gokhale, A
   Neema, S
   Gokhale, S
AF Lin, Yuehua
   Gray, Jeff
   Zhang, Jing
   Nordstrom, Steve
   Gokhale, Aniruddha
   Neema, Sandeep
   Gokhale, Swapna
TI Model replication: transformations to address model scalability
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE model transformation; scalability; domain-specific modeling;
   model-driven engineering
AB in model-driven engineering, it is often desirable to evaluate different design alternatives as they relate to scalability issues of the modeled system. A typical approach to address scalability is model replication, which starts by creating base models that capture the key entities as model elements and their relationships as model connections. A collection of base models can be adorned with necessary information to characterize a specific scalability concern as it relates to how the base modeling elements are replicated and connected together. In current modeling practice, such a model replication is usually accomplished by scaling the base model manually. This is a time-consuming process that represents a source of error, especially when there are deep interactions between model components. As an alternative to the manual process, this paper presents the idea of automated model replication through a model transformation process that expands the number of elements from the base model and makes the correct connections among the generated modeling elements. The paper motivates the need for model replication through case studies taken from models supporting different domains. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Lin, Yuehua; Gray, Jeff; Zhang, Jing] Univ Alabama Birmingham, Dept Comp & Informat Sci, Birmingham, AL 35294 USA.
   [Nordstrom, Steve; Gokhale, Aniruddha; Neema, Sandeep] Vanderbilt Univ, Inst Software Integrated Syst, Nashville, TN 37235 USA.
   [Gokhale, Swapna] Univ Connecticut, Dept Comp Sci & Engn, Storrs, CT 06269 USA.
C3 University of Alabama System; University of Alabama Birmingham;
   Vanderbilt University; University of Connecticut
RP Gray, J (corresponding author), Univ Alabama Birmingham, Dept Comp & Informat Sci, Birmingham, AL 35294 USA.
EM gray@cis.uab.edu
OI Gokhale, Aniruddha/0000-0002-7706-7102; Neema,
   Sandeep/0000-0002-9781-3619; Gray, Jeff/0000-0003-0082-6753
FU DARPA Program Composition for Embedded Systems (PCES); National Science
   Foundation [CAREER-0643725, CSR-SMA-0509342, CSR-SMA-0509296]; Direct
   For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1052616] Funding Source: National Science
   Foundation
FX This project was supported by the DARPA Program Composition for Embedded
   Systems (PCES) program and is currently supported by the National
   Science Foundation under CAREER-0643725, CSR-SMA-0509342 and
   CSR-SMA-0509296.
CR Ajmone Marsan M., 1995, Wiley Series in Parallel Computing
   [Anonymous], 1994, Communications in Reliability, Maintainability and Serviceability
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   BEZIVIN J, 2004, OOPSLA WORKSH BEST P
   Cuccuru A, 2005, LECT NOTES COMPUT SC, V3713, P445, DOI 10.1007/11557432_34
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   *FUJABA, 2004, FUJABA TOOLS
   Gray J, 2005, LECT NOTES COMPUT SC, V3713, P295, DOI 10.1007/11557432_22
   Gray J, 2001, COMMUN ACM, V44, P87, DOI 10.1145/383845.383864
   GRAY J, 2006, IEEE COMPUTER SPECIA, V39, P41
   Gray J., 2007, CRC HDB DYNAMIC SYST
   Hatcliff J, 2003, PROC INT CONF SOFTW, P160, DOI 10.1109/ICSE.2003.1201197
   Johann S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P362, DOI 10.1109/ASE.2004.1342765
   KOGEKAR A, 2006, IPDPS WORKSH NEXT GE
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   Lin YH, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P219, DOI 10.1007/3-540-28554-7_10
   MENS T, 2005, INT WORKSH GRAPH MOD
   Milicev D, 2002, IEEE T SOFTWARE ENG, V28, P413, DOI 10.1109/TSE.2002.995438
   PATRASCOIU O, 2004, ENTERPRISE DISTRIBUT, P286
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   Petriu D.C., 2005, MODEL DRIVEN ENG DIS, P205
   Racz S, 1999, INT C NUM SOL MARK C, P169
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Shetty S, 2005, 12TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P481, DOI 10.1109/ECBS.2005.65
   Sztipanovits J, 1997, COMPUTER, V30, P110, DOI 10.1109/2.585163
   2006, WORKSHOP SERIES ASPE
   2006, GENERIC MODELING ENV
   2003, CONSTRAINT SPECIFIC
NR 30
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2008
VL 38
IS 14
BP 1475
EP 1497
DI 10.1002/spe.876
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 372EH
UT WOS:000260884300002
DA 2024-07-18
ER

PT J
AU Fong, J
   Shiu, H
   Cheung, D
AF Fong, Joseph
   Shiu, Herbert
   Cheung, Davy
TI A relational-XML data warehouse for data aggregation with SQL and XQuery
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data warehouse; XML data cube; relational data cube; aggregation data;
   XQuery; SQL; schema integration; data integration; metadata
AB Integrating information from multiple data sources is becoming increasingly important for enterprises that partner with other companies for e-commerce. However, companies have their internal business applications deployed on diverse platforms and no standard solution for integrating information from these sources exists. To support business intelligence query activities, it is useful to build a data warehouse on top of middleware that aggregates the data obtained from various heterogeneous database systems. Online analytical processing (OLAP) can then be used to provide fast access to materialized views from the data warehouse. Since extensible markup language (XML) documents are a common data representation standard on the Internet and relational tables are commonly used for production data, OLAP must handle both relational and XML data. SQL and XQuery can be used to process the materialized relational and XML data cubes created from the aggregated data. This paper shows how to handle the two kinds of data cubes from a relational-XML data warehouse using extract, transformation and loading. Copyright (c) 2008 John Wiley & Sons, Ltd.
C1 [Fong, Joseph; Shiu, Herbert; Cheung, Davy] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
C3 City University of Hong Kong
RP Fong, J (corresponding author), City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
EM csjfong@cityu.edu.hk
FU University of Hong Kong [7002140]
FX This paper is funded by Strategic Research Grant 7002140 of City
   University of Hong Kong.
CR CHASE N, 2003, XML PRIMER PLUS, P47
   Chaudhri AB, 2003, XML DATA MANAGEMENT
   DEITEL HM, 2001, XML PROGRAM, P297
   Fong J, 2003, INT J COOP INF SYST, V12, P325, DOI 10.1142/S0218843003000772
   FONG J, 2006, INFORM SYSTEMS REENG, P21
   HAN J, 2001, DATA MINING CONCEPTS, P58
   Han J, 2001, DATA MINING CONCEPTS, P39
   KATZ H, 2004, XQUERY EXPERTS GUIDE, P187
   Kimball R., 2004, DATA WAREHOUSE ETL T
   Kwan I, 1999, INFORM SYST, V24, P355, DOI 10.1016/S0306-4379(99)00022-8
   Lee D, 2001, DATA KNOWL ENG, V39, P3, DOI 10.1016/S0169-023X(01)00028-3
   Madnick S., 2001, SEIZING OPPORTUNITY
   Madnick S, 2006, DATA KNOWL ENG, V59, P460, DOI 10.1016/j.datak.2005.10.001
   MORGENTHAL JP, 2001, ENTERPRISE APPL INTE, P131
   Park BK, 2005, LECT NOTES COMPUT SC, V3589, P32, DOI 10.1007/11546849_4
   PEDERSEN D, 2002, P 14 INT C SCI STAT
   POE V, 1998, BUILDING DATA WAREHO, pCH9
   XYLEME XL, 2001, INT S DAT ENG APPL G, P3
   ZHU H, 2001, INFORM AGGREGATIONA
   BUILDING XQUERY BASE
   2004, MID TIER XML MARKET
   2005, AGGREGATE DATA XQUER
   2003, HIGH PERFORMANCE INF
   IEEE SOC DISTINGUISH
NR 24
TC 4
Z9 4
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2008
VL 38
IS 11
BP 1183
EP 1213
DI 10.1002/spe.868
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 364OR
UT WOS:000260345500004
DA 2024-07-18
ER

PT J
AU Tremblay, G
   Guérin, F
   Pons, A
   Salah, A
AF Tremblay, G.
   Guerin, F.
   Pons, A.
   Salah, A.
TI Oto, a generic and extensible tool for marking programming assignments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE educational software; automated marking; unit testing
AB Marking programming assignments in programming courses involves a lot of work: each program must he tested, the source code must be read and evaluated, etc. With the large classes encountered nowadays, the feedback provided to students through marking is thus rather limited, and often late. Tools providing support for marking programming assignments do exist, ranging from support for administrative aspects through automation of program testing or support for source code evaluation based on metrics. In this paper, we introduce a tool, called Oto, that provides support for submission and marking of assignments. Oto aims at reducing the workload associated with the marking task. Oto also aims at providing timely feedback to the students, including feedback before the final submission. Furthermore, the tool has been designed to be generic and extensible, so that the marking process for a specific assignment can easily be customized and the tool can be extended with various marking components (modules) that allows it to deal with various aspects of marking (testing, style, structure, etc.) and with programs written in various programming languages. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Tremblay, G.; Guerin, F.; Pons, A.; Salah, A.] Univ Quebec, Dept Informat, Montreal, PQ H3C 3P8, Canada.
C3 University of Quebec; University of Quebec Montreal
RP Tremblay, G (corresponding author), Univ Quebec, Dept Informat, CP 8888 Succ Centre Ville, Montreal, PQ H3C 3P8, Canada.
EM tremblay.guy@uqam.ca
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Allowatt A., 2005, P 2005 OOPSLA WORKSH, P100
   ANDREWS GR, 2000, FDN MULTIHREADED PAR
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   BARIIOCANAL EG, 2002, SIGCSE B, V34, P125
   Barnes D.J., 2003, OBJECTS 1 JAVA PRACT, VSecond
   Beck K, 1998, JAVA REP, V3, P37
   Beck K., 2000, EXTREME PROGRAMMING
   Cheang B, 2003, COMPUT EDUC, V41, P121, DOI 10.1016/S0360-1315(03)00030-7
   Cockburn A., 2001, Writing effective use cases
   Dawson-Howe K. M., 1996, SIGCSE Bulletin, V28, P40, DOI 10.1145/228296.228303
   DOUCE D, 2005, ACM J ED RESOURCES C, V5
   EDWARDS SH, 2007, J COMPUTING SCI COLL, V22, P44
   Fewster M., 1999, Software test automation: effective use of test execution tools
   Foubister SP, 1997, J COMPUT ASSIST LEAR, V13, P99, DOI 10.1046/j.1365-2729.1997.00012.x
   Foxley E., 1999, P CBLISS 99 C U TWEN
   GAMM E, 1995, DESIGN PATTERN ELEME
   Grune D., 1989, Informatie, V31, P864
   GUERIN F, 2005, THESIS UQAM
   GUERIN F, 2006, OUTIL CORRECTION PRO
   GUERIN F, 2003, CORRECTION AUTOMATIQ
   HIGGINS CA, 2005, ACM J ED RESOURCES C, V5
   HUNG SL, 1993, COMPUT EDUC, V20, P183, DOI 10.1016/0360-1315(93)90086-X
   Hunt A., 2000, PRAGMATIC PROGRAMMER
   *IEEE, 2001, COMP CURR 2001
   Jackson D., 1997, SIGCSE Bulletin, V29, P335, DOI 10.1145/268085.268210
   Jackson D, 2000, SIGCSE BULL, V32, P164, DOI 10.1145/353519.343160
   JOY M, 2000, 1 ANN C LTSN CTR INF, P335
   JOY N, 2005, ACM J ED RESOURCES C, V5
   KUNIA A, 2001, COMPUT EDUC, V36, P299
   LABONTE E, 2002, THESIS UQAM
   Leach R. J., 1995, SIGCSE Bulletin, V27, P41, DOI 10.1145/201998.202010
   Luck M, 1999, SOFTWARE PRACT EXPER, V29, P721, DOI 10.1002/(SICI)1097-024X(19990710)29:8<721::AID-SPE257>3.0.CO;2-0
   Noonan R. E., 2002, SIGCSE Bulletin, V34, P232, DOI 10.1145/563517.563429
   Reek K. A., 1989, SIGCSE Bulletin, V21, P112, DOI 10.1145/65294.71198
   TAKIM M, 2006, THESIS UQAM
   THOMAS D, 2004, PRAGMATIC VERSION CO
   Tremblay G, 2003, INTERNATIONAL CONFERENCE ON EDUCATION AND INFORMATION SYSTEMS: TECHNOLOGIES AND APPLICATIONS, PROCEEDINGS, P42
   TREMBLAY G, 2006, OUTIL CORRECTION PRO
   TREMBLAY G, 2006, OUTIL DAIDE CORRECTI
   TREMBLAY G, 2007, P 12 ANN C INN TECHN
   *VIRG POL I STAT U, NEW AUT GRAD PROJ HO
   *VIRG POL I STAT U, CUR EL SUMB MAN ENV
   [No title captured]
NR 45
TC 14
Z9 14
U1 1
U2 3
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2008
VL 38
IS 3
BP 307
EP 333
DI 10.1002/spe.839
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 284BA
UT WOS:000254679000003
DA 2024-07-18
ER

PT J
AU Guo, HF
   Gupta, G
AF Guo, Hai-Feng
   Gupta, Gopal
TI Simplifying dynamic programming via mode-directed tabling
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE logic programming; dynamic programming; tabling; mode declaration
AB In the dynamic programming paradigm the value of an optimal solution is recursively defined in terms of optimal solutions to subproblems. Such dynamic programming definitions can be tricky and error-prone to specify. This paper presents an elegant method based on tabled logic programming (TLP) that simplifies the specification of such dynamic programming solutions. Our method introduces a new mode declaration for tabled predicates. The arguments of each tabled predicate are divided into indexed and non-indexed arguments so that tabled predicates can be regarded as functions: indexed arguments represent input values and non-indexed arguments represent output values. The non-indexed arguments in a tabled predicate can be further declared to be aggregated, for example, the minimum, so that while generating answers, the global table will dynamically maintain the smallest value for that argument. This mode-declaration scheme, coupled with recursion, provides an easy-to-use method for dynamic programming: there is no need to define the value of an optimal solution recursively, as the definition of a general solution suffices. The optimal value as well as its corresponding concrete solution can be derived implicitly and automatically using tabled logic programming systems. Our experimental results show that mode declarations improve performance in solving dynamic programming problems on TLP systems. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Guo, Hai-Feng] Univ Nebraska, Dept Comp Sci, Omaha, NE 68182 USA.
   [Gupta, Gopal] Univ Texas Richardson, Dept Comp Sci, Richardson, TX 75083 USA.
C3 University of Nebraska System; University of Texas System; University of
   Texas Dallas
RP Guo, HF (corresponding author), Univ Nebraska, Dept Comp Sci, Omaha, NE 68182 USA.
EM haifengguo@mail.unomaha.edu
CR Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   GUO HF, 2001, P INT C LOG PROGR IC, P181
   Lloyd J. W., 1987, Foundations of logic programming
   Pemmasani G, 2004, LECT NOTES COMPUT SC, V2998, P24
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1254, P143
   ROCHA R, 2001, LECT NOTES COMPUTER, V2237, P166
   ROYCHOUDHURY A, 2000, 2 INT ACM SIGPLAN C, P178
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   Shen YD, 2001, THEOR PRACT LOG PROG, V1, P71, DOI 10.1017/S1471068400001010
   SPECHT G, 1992, P 5 WORKSH LOG PROGR
   Swift T, 1999, ANN MATH ARTIF INTEL, V25, P201, DOI 10.1023/A:1018990308362
   Warren David S., 2007, Programming in tabled Prolog (draft)
   ZHOU NF, 2000, P PRACT ASP DECL LAN
NR 14
TC 16
Z9 18
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2008
VL 38
IS 1
BP 75
EP 94
DI 10.1002/spe.824
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 259JA
UT WOS:000252934400003
DA 2024-07-18
ER

PT J
AU Dal Palù, A
   Dovier, A
   Pontelli, E
AF Dal Palù, Alessandro
   Dovier, Agostino
   Pontelli, Enrico
TI A constraint solver for discrete lattices, its parallelization, and
   application to protein structure prediction
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE constraint programming; protein structure prediction; parallel
   processing
AB This paper presents the design, implementation and application of a constraint programming framework on 3D crystal lattices. The framework provides the flexibility to express and resolve constraints dealing with structural relationships of entities placed in a 3D lattice structure in space. Both sequential and parallel implementations of the framework are described, along with experiments that highlight its superior performance with respect to the use of more traditional frameworks (e.g. constraints on finite domains and integer programming) to model lattice constraints. The framework is motivated and applied to address the problem of solving the protein folding prediction problem, i.e. predicting the 3D structure of a protein from its primary amino acid sequence. Results and comparison with performance of other constraint-based solutions to this problem are presented. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
   Univ Udine, Dipartimento Informat, I-33100 Udine, Italy.
   Univ Parma, Dipartimento Matemat, I-43100 Parma, Italy.
C3 New Mexico State University; University of Udine; University of Parma
RP Pontelli, E (corresponding author), New Mexico State Univ, Dept Comp Sci, Box 30001-CS, Las Cruces, NM 88003 USA.
EM epontell@cs.nmsu.edu
RI Dovier, Agostino/JAO-3262-2023; Pontelli, Enrico/AAJ-5161-2021; Dal
   Palu', Alessandro/AAS-3911-2020
OI Pontelli, Enrico/0000-0002-7753-1737; Dal Palu',
   Alessandro/0000-0003-0353-158X; Dovier, Agostino/0000-0003-2052-8593
CR Agarwala R, 1997, J COMPUT BIOL, V4, P275, DOI 10.1089/cmb.1997.4.275
   AITKACI H, 1991, WARR ABSTR MACH TUR
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   [Anonymous], 1989, Constraint Satisfaction in Logic Programming
   [Anonymous], 2003, Introduction to parallel computing
   [Anonymous], 2003, Principles of Constraint Programming
   Backofen R., 2001, Principles and Practice of Constraint Programming - CP 2002. 7th International Conference, CP 2001. Proceedings (Lecture Notes in Computer Science Vol.2239), P494
   Backofen R., 2001, Constraints, V6, P223, DOI 10.1023/A:1011485622743
   Backofen R, 2003, LECT NOTES COMPUT SC, V2916, P49, DOI 10.1007/978-3-540-24599-5_5
   Bartak R., 1999, Proceedings of the Week of Doctoral Students (WDS99), V4, P555
   BENHAMOU F, 1999, NEW TRENDS CONSTRAIN, P1
   Berman HM, 2000, NUCLEIC ACIDS RES, V28, P235, DOI 10.1093/nar/28.1.235
   Berrera M, 2003, BMC BIOINFORMATICS, V4, DOI 10.1186/1471-2105-4-8
   Brodsky A., 1997, Constraints, V2, P279, DOI 10.1023/A:1009795512753
   CLARK DA, 1991, PROTEIN ENG, V4, P751, DOI 10.1093/protein/4.7.751
   Clote P., 2001, Computational Molecular Biology
   *COMM MATH CHALL C, 1995, MATH CHALL THEOR COM
   Crescenzi P, 1998, J COMPUT BIOL, V5, P423, DOI 10.1089/cmb.1998.5.423
   *CTR COMP MAT SCI, 2007, CRYST LATT STRUCT
   DAIZ D, 2007, GNU PROLOG NATIVE PR
   DALPALU A, 2003, RECENT ADV CONSTRAIN, P250
   DAPALU A, 2004, BMC BIOINFORMATICS, V5, DOI DOI 10.1186/1471-2105-5-186
   DAPALU A, 2005, P INT C PRINC PRACT, P230
   Dechter R., 2003, Constraint Processing
   DIJKSTRA EW, 1980, INFORM PROCESS LETT, V11, P1, DOI 10.1016/0020-0190(80)90021-6
   Dovier A, 2000, ACM T PROGR LANG SYS, V22, P861, DOI 10.1145/365151.365169
   ECKSTEIN J, 2001, INHERENTLY PARALLEL, P219
   FINKEL R, 1987, ACM T PROGR LANG SYS, V9, P235, DOI 10.1145/22719.24067
   Fogolari F, 1996, BIOPHYS J, V70, P1183, DOI 10.1016/S0006-3495(96)79678-9
   FORMAN S, 2001, THESIS U IOWA
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   HART WE, 2003, HDB ALGORITHMS BIOIN
   HINDS DA, 1992, P NATL ACAD SCI USA, V89, P2536, DOI 10.1073/pnas.89.7.2536
   *ILOG, 2007, ILOG CPLEX HIGH PERF
   Kolinski A, 2004, POLYMER, V45, P511, DOI 10.1016/j.polymer.2003.10.064
   Krippahl L, 1999, LECT NOTES COMPUT SC, V1713, P289
   KUMAR V, 1994, J PARALLEL DISTR COM, V22, P60, DOI 10.1006/jpdc.1994.1070
   Lassalles J. P., 1987, Plant vacuoles: their importance in solute compartmentation in cells and their applications in plant biotechnology., P111
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Newman A, 2002, SIAM PROC S, P876
   Perron L, 1999, LECT NOTES COMPUT SC, V1713, P346
   Quimper CG, 2005, LECT NOTES COMPUT SC, V3709, P812, DOI 10.1007/11564751_70
   Raghunathan G, 1997, PROTEIN SCI, V6, P2072
   *SICS, 2005, SICSTUS PROL US MAN
   Skolnick J, 2001, COMPUT SCI ENG, V3, P40, DOI 10.1109/5992.919264
   Toma L, 1999, PROTEIN SCI, V8, P196
   WALLANCE M, 1997, ECLIPSE PLATFORM CON
   Xuan Liu, 2001, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V10, P639, DOI 10.1142/S0218213001000696
   2007, GLPK GNU LINEAR PROG
NR 49
TC 18
Z9 20
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2007
VL 37
IS 13
BP 1405
EP 1449
DI 10.1002/spe.810
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 226SA
UT WOS:000250607600003
DA 2024-07-18
ER

PT J
AU Chang, DW
   Tsai, CM
   Li, WK
   Lee, TR
AF Chang, Da-Wei
   Tsai, Chuan-Ming
   Li, Wei-Kou
   Lee, Tzu-Rung
TI Kernel support for zero-loss Internet service restart
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE zero-loss service restart; Internet; transient fault; operating system
AB Owing to long serving time and huge numbers of clients, Internet services can easily suffer from transient faults. Although restarting a service can solve this problem, information of the on-line requests will be lost owing to the service restart, which is unacceptable for many commercial or transaction-based services. In this paper, we propose an approach to achieve the goal of zero-loss restart for Internet services. Under this approach, a kernel subsystem is responsible for detecting the transient faults, retaining the I/O channels of the service, and managing the service restart How. In addition, some straightforward modifications to the service should be made to take advantage of the kernel support. To demonstrate the feasibility of our approach, we implemented the subsystem in the Linux kernel. Moreover, we modified a Web server and a CGI program to take advantage of the kernel support. According to the experimental results, our approach incurs little runtime overhead (i.e. less than 3.2%). When the service crashes, it can be restarted quickly (i.e. within 210 mu s) with no information loss. Furthermore, the performance impact due to the service crash is small. These results show that the approach can efficiently achieve the goal of zero-loss restart for Internet services. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 70101, Taiwan.
   Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
C3 National Cheng Kung University; National Yang Ming Chiao Tung University
RP Chang, DW (corresponding author), Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 70101, Taiwan.
EM david.oslab@gmail.com
CR Aghdaie N, 2001, IEEE IPCCC, P209, DOI 10.1109/IPCCC.2001.918654
   Alvisi L, 2001, IEEE INFOCOM SER, P329, DOI 10.1109/INFCOM.2001.916715
   [Anonymous], 2002, UCBCSD021175
   [Anonymous], P 20 ANN IEEE INT FA
   Barga R, 2004, PROC INT CONF DATA, P486, DOI 10.1109/ICDE.2004.1320021
   Brown AB, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P1
   Candea G, 2004, PERFORM EVALUATION, V56, P213, DOI 10.1016/j.peva.2003.07.007
   CANDEA G, 2003, P 9 WORKSH HOT TOP O, P67
   CHAWATHE Y, 1998, P IFIP INT C DISTR S
   Fielding R., 1999, Tech. Rep
   Hsu ST, 1997, SOFTWARE PRACT EXPER, V27, P1103, DOI 10.1002/(SICI)1097-024X(199709)27:9<1103::AID-SPE130>3.0.CO;2-2
   Landau C. R., 1992, Proceedings of the Second International Workshop on Object Orientation in Operating systems (Cat. No.92TH0477-0), P86, DOI 10.1109/IWOOOS.1992.252995
   Li K., 1990, P 2 ACM SIGPLAN S PR, P79, DOI DOI 10.1145/99163.99173
   LONG J, 1992, P 22 ANN INT S FAULT, P58
   Luo MY, 2001, IEEE INFOCOM SER, P1781, DOI 10.1109/INFCOM.2001.916676
   *MINDCR INF, 2005, WEBSTONE BENCHM WEB
   *PERF TECHN INC, EFF NETW DOWNT PROF
   Plank James S., 1997, UTCS97372
   PLANK JS, 1995, PROCEEDINGS OF THE 1995 USENIX TECHNICAL CONFERENCE, P213
   STAKNIS ME, 1989, P 3 INT C ARCH SUPP, P96
   Sultan F, 2003, SYM REL DIST SYST, P177, DOI 10.1109/RELDIS.2003.1238067
   Sultan F, 2002, INT CON DISTR COMP S, P469, DOI 10.1109/ICDCS.2002.1022294
   SWIFT M. M., 2004, P 6 S OP SYST DES IM, P1
   Swift Michael M., 2003, P 19 ACM S OP SYST P
   WANG YM, 1995, DIG PAP INT SYMP FAU, P22, DOI 10.1109/FTCS.1995.466999
   Yang C., 2000, P 2000 ACM IEEE C SU
   ZAGORODNOV D, 2003, P 2003 INT C DEP SYS, P22
NR 27
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2007
VL 37
IS 8
BP 833
EP 855
DI 10.1002/spe.787
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 187HB
UT WOS:000247837100002
DA 2024-07-18
ER

PT J
AU Breuer, PT
   Valls, MG
AF Breuer, PT
   Valls, MG
TI Raiding the Noosphere: the open development of networked RAID support
   for the Linux kernel
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE operating systems; open source; Linux; storage; networking; software
   engineering
AB The Noosphere is a term borrowed by open-source advocate Eric Raymond to denote the virtual world of the Internet. Fitting a new driver into the Linux kernel requires a 'noospheric' strategy as well as an engineering strategy, because the code is part of the open-source development process, not its end. This article recounts the technology and the development process followed for a 'fast and intelligent' driver extension to the existing Linux software RAID subsystem. The development adapts the kernel RAID subsystem for use in the context of network-attached storage. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Carlos III Madrid, Madrid 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Breuer, PT (corresponding author), Univ Carlos III Madrid, Avda Univ 30, Madrid 28911, Spain.
EM ptb@inv.it.uc3m.es
RI Breuer, Peter/V-3357-2018
OI Breuer, Peter/0000-0003-2296-6175
CR [Anonymous], 1999, CATHEDRAL BAZAAR
   [Anonymous], MYTHICAL MAN MONTH E
   Breuer Peter, 2000, Linux Journal, V73
   BREUER PT, 2005, 23 IASTED INT C PAR, P517
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   KOCH S, 2000, 22 VIENN U EC DEP IN, pA1090
   KOCH S, 2003, P 2003 IRMA INT C IN
   Pressman R.S., 2000, SOFTWARE ENG PRACTIT
   RUBINI A, 1998, LINUX DEVICE DRIVERS
   WIEBALCK A, 2003, P 3 INT S CLUST COMP
NR 10
TC 1
Z9 1
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2006
VL 36
IS 4
BP 365
EP 395
DI 10.1002/spe.701
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 031MK
UT WOS:000236708500002
DA 2024-07-18
ER

PT J
AU Firth, A
   Bell, T
   Mukherjee, A
   Adjeroh, D
AF Firth, A
   Bell, T
   Mukherjee, A
   Adjeroh, D
TI A comparison of BWT approaches to string pattern matching
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compressed pattern matching; suffix arrays; binary search; q-grams;
   FM-index; BWT
ID ALGORITHM
AB Recently a number of algorithms have been developed to search files compressed with the Burrows-Wheeler Transform (BWT) without the need for full decompression first. This allows the storage requirement of data to be reduced through the exceptionally good compression offered by BWT, while allowing fast access to the information for searching by taking advantage of the sorted nature of BWT files. We provide a detailed description of five of these algorithms: BWT-based Boyer-Moore, Binary Search, Suffix Arrays, q-grams and the FM-index, and also present results from a set of extensive experiments that were performed to evaluate and compare the algorithms. Furthermore, we introduce a technique to improve the search times of Binary Search, Suffix Arrays and q-grams by 22% on average, as well as reduce the memory requirement of the latter two by 40% and 31%, respectively. Our results indicate that, while the compressed files of the FM-index are larger than those of the other approaches, it is able to perform searches with considerably less memory. Additionally, when only counting the occurrences of a pattern, or when locating the positions of a small number of matches, it is the fastest algorithm. For larger searches, Binary Search provides the fastest results. Comparative results with non-BWT based search methods are also included. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   Univ Canterbury, Dept Comp Sci, Canterbury, New Zealand.
   Univ Cent Florida, Sch Elect Engn & Comp Sci, Orlando, FL 32816 USA.
C3 West Virginia University; University of Canterbury; State University
   System of Florida; University of Central Florida
RP Adjeroh, D (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM don@csee.wvu.edu
CR Adjeroh D, 2002, IEEE DATA COMPR CONF, P445, DOI 10.1109/DCC.2002.999988
   Amir A, 1996, J COMPUT SYST SCI, V52, P299, DOI 10.1006/jcss.1996.0023
   [Anonymous], 1997, ACM SIGACT NEWS
   Arnold R, 1997, IEEE DATA COMPR CONF, P201, DOI 10.1109/DCC.1997.582019
   Bell T, 2002, IEEE DATA COMPR CONF, P112, DOI 10.1109/DCC.2002.999949
   BELL T, 2002, CANTERBURY CORPUS
   BENTLEY JL, 1986, COMMUN ACM, V29, P320, DOI 10.1145/5684.5688
   BOYER RS, 1977, COMMUN ACM, V20, P762, DOI 10.1145/359842.359859
   BUNKE H, 1993, COMPUTING, V50, P297, DOI 10.1007/BF02243873
   BUNKE H, 1995, INFORM PROCESS LETT, V54, P93, DOI 10.1016/0020-0190(95)00005-W
   Burrows M., 1994, Algorithm, Data Compression, DOI 10.1.1.37.6774
   CLEARY JG, 1984, IEEE T COMMUN, V32, P396, DOI 10.1109/TCOM.1984.1096090
   Deorowicz S, 2002, SOFTWARE PRACT EXPER, V32, P99, DOI 10.1002/spe.426
   Farach M, 1998, ALGORITHMICA, V20, P388, DOI 10.1007/PL00009202
   Ferragina P, 2001, SIAM PROC S, P269
   Ferragina P, 2000, ANN IEEE SYMP FOUND, P390, DOI 10.1109/SFCS.2000.892127
   MANBER U, 1993, SIAM J COMPUT, V22, P935, DOI 10.1137/0222058
   MOURA E, 2000, ACM T INFORM SYST, V18, P113, DOI DOI 10.1145/348751.348754
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   NAVARRO G, 2003, LZGREP DIRECT TEXT S
   POWELL M, 2001, THESIS U CANTERBURY
   Sadakane K, 1999, LECT NOTES COMPUT SC, V1552, P434
   SADAKANE K, 2000, THESIS U TOKYO
   SHIBATA Y, 2001, T INFORMATION PROCES, V42, P370
   *SUN MICR, 2002, JAV DEV KIT
   Weiner P., 1973, 14th Annual Symposium on Switching Automata Theory, P1
   WHEELER D, 1997, UPGRADING BRED MULTI
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   Ziviani N, 2000, COMPUTER, V33, P37, DOI 10.1109/2.881693
   [No title captured]
   [No title captured]
NR 31
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2005
VL 35
IS 13
BP 1217
EP 1258
DI 10.1002/spe.669
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 979FH
UT WOS:000232927300001
DA 2024-07-18
ER

PT J
AU Chung, YC
   Moon, SM
   Ebcioglu, K
   Sahlin, D
AF Chung, YC
   Moon, SM
   Ebcioglu, K
   Sahlin, D
TI Selective sweeping
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE garbage collection; mark and sweep; selective sweeping
ID GARBAGE COLLECTION
AB Traditional mark and sweep garbage collectors use time proportional to the heap size when sweeping memory, since all objects in the heap, dead or alive, must be traversed. Here we introduce a sweeping algorithm which traverses only the live objects. Since this sweeping algorithm is slower when the heap occupancy is high, we also discuss how to avoid this slowdown by using an adaptive algorithm. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Seoul Natl Univ, Sch Elect Engn, Seoul 151742, South Korea.
   IBM Corp, Thomas J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
   Ericsson Utvecklings AB, Comp Sci Lab, SE-12525 Aalvsjoe, Sweden.
C3 Seoul National University (SNU); International Business Machines (IBM);
   Ericsson
RP Seoul Natl Univ, Sch Elect Engn, POB 34, Seoul 151742, South Korea.
EM smoon@altair.snu.ac.kr
RI Ebcioglu, Kemal/AAK-8011-2020
OI Ebcioglu, Kemal/0000-0001-6256-4248
CR APPEL AW, 1987, INFORM PROCESS LETT, V25, P275, DOI 10.1016/0020-0190(87)90175-X
   BAKER HG, 1992, SIGPLAN NOTICES, V27, P66, DOI 10.1145/130854.130862
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   BOEHM HJ, 1995, MARK SWEEP COPYING C
   BOEHM HJ, 2000, P 2000 INT S MEM MAN, P59
   CHENEY CJ, 1970, COMMUN ACM, V13, P677, DOI 10.1145/362790.362798
   CHUNG YC, 2003, UNPUB MEMORY MANAGEM
   CHUNG YC, 2000, P 2000 INT S MEM MAN, P65
   CHUNG YC, 2000, 27 ANN ACM SIGPLAN S, P378
   HUGES RJM, 1982, SOFTWARE PRACTICE EX, V12, P1081
   MCCARTHY J, 1960, COMMUN ACM, V3, P184, DOI 10.1145/367177.367199
   MOON SM, 2000, IEEE COMPUT, P41
   SAHLIN D, 1987, SICSR8787008 SICS
   WILSON PR, 1993, OOPSLA ECOOP 93 WORK
NR 14
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2005
VL 35
IS 1
BP 15
EP 26
DI 10.1002/spe.624
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 884HO
UT WOS:000226075700002
DA 2024-07-18
ER

PT J
AU Hourcade, JP
   Bederson, BB
   Druin, A
AF Hourcade, JP
   Bederson, BB
   Druin, A
TI Building KidPad: an application for children's collaborative
   storytelling
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE children; collaborations; Java; single-display groupware; storytelling;
   zoomable user interfaces (ZUIs)
AB Collaborating in small groups can be beneficial to children's learning and socializing. However, there is currently little computer support for children's collaborative activities. This was our motivation for building KidPad, a collaborative storytelling tool for children. KidPad provides children with drawing, typing, and hyperlinking capabilities in a large, two-dimensional canvas. It supports collaboration by accepting input from multiple mice. In building KidPad, we developed solutions to problems common to all single-display groupware applications for children: using an intuitive user interface metaphor that can support collaboration, and obtaining input from multiple devices. We addressed the need for an appropriate user interface metaphor by using the local tools metaphor. In developing the concept of local tools we learned about the importance of addressing the issue of global modes. Our solution for obtaining input from multiple devices was MID, an architecture written in Java. In building MID, we learned about the importance of building flexible architectures that can support a wide range of applications and devices in a consistent manner, and that are easy to extend and use by programmers. This paper describes our work on local tools and MID in the context of building KidPad, and aims to provide developers with valuable insights into how to develop collaborative applications for children. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Maryland, Human Comp Interact Lab, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Univ Maryland, Human Comp Interact Lab, AV Williams Bldg, College Pk, MD 20742 USA.
EM jpablo@acm.org
OI Bederson, Benjamin/0000-0002-3247-779X; Hourcade, Juan
   Pablo/0000-0002-4627-9743
CR [Anonymous], P 14 ANN ACM S US IN
   [Anonymous], 1996, Proceedings o f VIST (User Interface Software and Technology)
   Bederson BB, 1996, J VISUAL LANG COMPUT, V7, P3, DOI 10.1006/jvlc.1996.0002
   BEDERSON BB, 2000, P 13 ANN ACM S US IN, P171
   Benford S., 2000, P ACM C HUMAN FACTOR, P556
   Bier E. A., 1991, UIST Fourth Annual Symposium on User Interface Software and Technology. Proceedings of the ACM Symposium on User Interface Software and Technology, P79, DOI 10.1145/120782.120791
   BIER EA, 1992, P SIGCHI C HUM FACT, P645
   BOLTMAN A, 2002, ANN M AM ED RES ASS
   BRICKER L, 1998, THESIS U WASHINGTON
   BRICKER LJ, 1998, UWCSE980903 U WASH
   Dragicevic P, 2001, BCS CONF SERIES, P543
   Druin A., 1999, P ACM CHI 99 C HUMAN, V14, P223
   Druin Allison., 1997, P ACM SIGCHI C HUMAN, P463, DOI DOI 10.1145/258549.258866
   Kaluger George., 1979, HUMAN DEV SPAN LIFE, V2nd
   KERR R, 1975, PERCEPT MOTOR SKILL, V41, P151, DOI 10.2466/pms.1975.41.1.151
   MYERS AB, 1998, P COMP SUPP COOP WOR, P285
   Rubin David C., 1995, Memory in oral traditions: The cognitive psychology of epic, ballads, and counting-out rhymes, DOI 10.1093/oso/9780195082111.001.0001
   SALMONI AW, 1979, PERCEPT MOTOR SKILL, V49, P403, DOI 10.2466/pms.1979.49.2.403
   Stewart J., 1999, P CHI 99, P286, DOI [10.1145/302979.303064, DOI 10.1145/302979.303064]
   STEWART J, 1999, THESIS U NEW MEXICO
   WALLACE SA, 1978, CHILD DEV, V49, P509, DOI 10.2307/1128718
   Wood David., 1996, Educational Psychology in Practice, V11, P4, DOI DOI 10.1080/0266736960110402
NR 22
TC 13
Z9 16
U1 2
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2004
VL 34
IS 9
BP 895
EP 914
DI 10.1002/spe.598
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 836HU
UT WOS:000222547300005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Acuña, ST
   Juristo, N
AF Acuña, ST
   Juristo, N
TI Assigning people to roles in software projects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE process modelling; software process; people; development team;
   person-role fit; capabilities
AB This paper is based on the premise that people's behavioural competencies or characteristics of professional conduct influence the effectiveness and efficiency with which they perform a predetermined role in the software process. We propose a capabilities-oriented process model that includes traditional elements of the software process (activities, products, techniques, people and roles) and the original element of this paper (capabilities). With the aim of adding behavioural competencies to the process model, we define the capability-person and capability-role relationships involved in software development. Additionally, we propose two procedures that are based on each of these relationships: a procedure that can be used to determine the capabilities of the members of a development team; and a procedure that can be used to assign people to perform roles depending on their capabilities and the capabilities demanded by the roles. Finally, the person-capabilities-role relationship has been empirically validated. The results yielded by this experiment confirm the hypothesis that assigning people to roles according to their capabilities and the capabilities demanded by the role improves software development. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Autonoma Madrid, Escuela Politecn Super, Dept Ingn Informat, E-28049 Madrid, Spain.
   Univ Politecn Madrid, Fac Informat, Dept Ingn Software, E-28660 Madrid, Spain.
C3 Autonomous University of Madrid; Universidad Politecnica de Madrid
RP Univ Autonoma Madrid, Escuela Politecn Super, Dept Ingn Informat, Ctra Colmenar Km 15, E-28049 Madrid, Spain.
EM silvia.acuna@ii.uam.es
RI Acuna, Silvia/A-7395-2008
OI Acuna, Silvia/0000-0003-2135-6113
CR ABDELHARRID TK, 1991, SOFTWARE PROJECT DYN
   ACUNA ST, 2002, THESIS U POLITECNICA
   [Anonymous], 1999, SOFT SYSTEMS METHODO
   [Anonymous], 1994, HARVARD BUS REV
   [Anonymous], 1998, MANAGING TECHNICAL P
   [Anonymous], CSEG21995 LANC U COM
   Avison D.E., 1990, MULTIVIEW EXPLORATIO
   Boam R., 1992, DESIGNING ACHIEVING
   Cattell R.B., 1993, Sixteen Personality Factor Fifth Edition Questionnaire, VFifth
   CHECKLAND P, 1998, INFORMATION SYSTEMS
   Constantine L, 2001, METHODOLOGICAL AGILI
   COUGAR JD, 1980, MOTIVATION MANAGING
   CURTIS B, 1995, CMUSEI95MM9I
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   ENGELS G, 1995, SOFTWARE PROCESS MOD, P71
   Finkelstein A., 1994, Software process modelling and technology
   Fuggetta A., 2000, FUTURE SOFTWARE ENG, P27
   Harzallah M, 2002, COMPUT IND, V48, P157, DOI 10.1016/S0166-3615(02)00003-9
   HASS A, 2001, HDB QUALIFIZIERUNGSM
   Humphrey W., 1997, INTRO PERSONAL SOFTW
   HUMPHREY WS, 1998, CROSSTALK, V11, P14
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Juristo N., 2013, BASICS SOFTWARE ENG
   MIN SY, 1997, P 9 INT C SOFTW ENG, P78
   Molleman E, 2001, J ENG TECHNOL MANAGE, V18, P271, DOI 10.1016/S0923-4748(01)00038-8
   MOSES JL, 1987, APPL ASSESSMENT METH
   Russell M. T., 1994, 16PF 5 EDITION ADM M
   Slomp J, 2002, INT J PROD RES, V40, P1193, DOI 10.1080/00207540110098823
   Stowell F., 1994, CLIENT LED DESIGN SY
   ULLOA RAR, 1990, SISTEMICA, V1, P63
   West D., 1991, THESIS U PORTSMOUTH
   WHITAKER K, 1994, MANAGING SOFTWARE MA
NR 32
TC 78
Z9 85
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2004
VL 34
IS 7
BP 675
EP 696
DI 10.1002/spe.586
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825SB
UT WOS:000221777500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cheung, KKT
   Ip, HHS
AF Cheung, KKT
   Ip, HHS
TI Developing an object-oriented framework for content-based image
   retrieval
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE content-based image retrieval; object-oriented framework; design
   pattern; CBIRFrame
ID DATABASES; PICTURES; SYSTEMS; SHAPE
AB Content-based image retrieval (CBIR) is a process of retrieving images from an image database by exploiting the content of the images (typically the querying of an image). CBIR avoids many problems associated with traditional ways of retrieving images by keywords. Thus, a growing interest in the area of CBIR has been established in recent years. In this paper, a novel object-oriented framework (CBIRFrame) is built for CBIR applications development. We discuss the motivations for CBIRFrame before discussing its design in detail. Two applications of CBIRFrame are also briefly discussed to show the effectiveness of applying CBIRFrame to real applications. Finally, we outline the possible uses of the design of CBIRFranze for other types of domains, such as content-based retrieval of video clips. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 City Univ Hong Kong, Dept Comp Sci, Image Comp Grp, Kowloon, Peoples R China.
   City Univ Hong Kong, Ctr Innovat Applicat, Internet & Multimedia Technol Ctr, AIMtech Ctr, Hong Kong, Peoples R China.
C3 City University of Hong Kong; City University of Hong Kong
RP Ip, HHS (corresponding author), City Univ Hong Kong, Dept Comp Sci, Image Comp Grp, Tat Chee Ave, Kowloon, Peoples R China.
OI IP, Ho Shing Horace/0000-0002-1509-9002
CR [Anonymous], MULTIMED TOOLS APPL
   Bach JR, 1996, P SOC PHOTO-OPT INS, V2670, P76, DOI 10.1117/12.234785
   Berretti S, 2001, IEEE T PATTERN ANAL, V23, P1089, DOI 10.1109/34.954600
   Brinkley J. F., 1994, Proceedings of the IEEE Workshop on Biomedical Image Analysis (Cat. No.94TH0624-7), P194, DOI 10.1109/BIA.1994.315852
   Charlton P., 1996, Proceedings of the Fourth Euromicro Workshop on Parallel and Distributed Processing - PDP '96, P59, DOI 10.1109/EMPDP.1996.500569
   Ferro A, 2001, IEEE T PATTERN ANAL, V23, P707, DOI 10.1109/34.935845
   Flickner M., 1995, IEEE COMPUT, V28, P23, DOI DOI 10.1109/2.410146
   GUDIVADA VN, 1995, COMPUTER, V28, P18, DOI 10.1109/2.410145
   Huang CL, 1998, IMAGE VISION COMPUT, V16, P149, DOI 10.1016/S0262-8856(97)00062-0
   Huang PW, 1997, PATTERN RECOGN, V30, P1229, DOI 10.1016/S0031-3203(96)00143-4
   Jain AK, 1996, PATTERN RECOGN, V29, P1233, DOI 10.1016/0031-3203(95)00160-3
   Jain AK, 1998, PATTERN RECOGN, V31, P1369, DOI 10.1016/S0031-3203(97)00131-3
   LAUFER K, 1995, PROCEEDINGS OF THE USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES (COOTS), P103
   Oflazer K, 1997, IEEE T PATTERN ANAL, V19, P1376, DOI 10.1109/34.643897
   Pentland A, 1996, INT J COMPUT VISION, V18, P233, DOI 10.1007/BF00123143
   Porkaew K., 1999, PROC INT C VIS INF S, P68
   Robinson JA, 1996, P SOC PHOTO-OPT INS, V2663, P206, DOI 10.1117/12.233034
   Rui Y, 1998, IEEE T CIRC SYST VID, V8, P644, DOI 10.1109/76.718510
   Smeulders AWM, 2000, IEEE T PATTERN ANAL, V22, P1349, DOI 10.1109/34.895972
   Soffer A., 1997, P 2 INT C VISUAL INF, P117
   TAMURA H, 1984, PATTERN RECOGN, V17, P29, DOI 10.1016/0031-3203(84)90033-5
   Tang L.H., 1998, Proceedings of the International Conference on Artificial Intelligence, Expert Systems and Applications (EXPERSYS1998), Virginia Beach, VA, USA, P77
   Tang LH, 1998, P SOC PHOTO-OPT INS, V3339, P572, DOI 10.1117/12.319817
   TORTORA G, 1990, COMPUT VISION GRAPH, V52, P26, DOI 10.1016/0734-189X(90)90122-C
   Wu TC, 1997, PATTERN RECOGN LETT, V18, P595, DOI 10.1016/S0167-8655(97)00042-1
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 34
TC 2
Z9 2
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2003
VL 33
IS 6
BP 523
EP 565
DI 10.1002/spe.518
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 675MH
UT WOS:000182698700003
DA 2024-07-18
ER

PT J
AU Müller, S
   Sparka, JA
   Kuban, M
   Draxl, C
   Grunske, L
AF Mueller, Sebastian
   Sparka, Jan Arne
   Kuban, Martin
   Draxl, Claudia
   Grunske, Lars
TI Grammar-based fuzzing of data integration parsers in computational
   materials science
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE grammar based fuzzing; search based testing; test case generation
AB ContextComputational materials science (CMS) focuses on in silico experiments to compute the properties of known and novel materials, where many software packages are used in the community. The NOMAD Laboratory (Draxl C, Scheffler) offers to store the input and output files in its FAIR data repository. Since the file formats of these software packages are non-standardized, parsers are used to provide the results in a normalized format.ObjectiveThe main goal of this article is to report experience and findings of using grammar-based fuzzing on these parsers.MethodWe have constructed an input grammar for four common software packages in the CMS domain and performed an experimental evaluation on the capabilities of grammar-based fuzzing to detect failures in the Novel Materials Discovery (NOMAD) parsers.ResultsWith our approach, we were able to identify three unique critical bugs concerning service availability, as well as several additional syntactic, semantic, logical, and downstream bugs in the investigated NOMAD parsers. We reported all issues to the developer team prior to publication.ConclusionBased on the experience gained, we can recommend grammar-based fuzzing also for other research software packages to improve the trust level in the correctness of the produced results.
C1 [Mueller, Sebastian; Sparka, Jan Arne; Grunske, Lars] Humboldt Univ, Inst Informat, Berlin, Germany.
   [Kuban, Martin; Draxl, Claudia] Humboldt Univ, Phys Dept, Berlin, Germany.
   [Kuban, Martin; Draxl, Claudia] Humboldt Univ, IRIS Adlershof, Berlin, Germany.
C3 Humboldt University of Berlin; Humboldt University of Berlin; Humboldt
   University of Berlin
RP Sparka, JA (corresponding author), Humboldt Univ, Inst Informat, Berlin, Germany.
EM sparkaar@hu-berlin.de
RI Grunske, Lars/AAH-4550-2019; Draxl, Claudia/O-6189-2016
OI Grunske, Lars/0000-0002-8747-3745; Kuban, Martin/0000-0002-1619-2460;
   Sparka, Jan Arne/0000-0002-5886-4595; Draxl,
   Claudia/0000-0003-3523-6657; Muller, Sebastian/0000-0002-3057-1125
FU This work was funded by the Deutsche Forschungsgemeinschaft (DFG, German
   Research Foundation)-Project-ID 414984028-SFB 1404 FONDA. Open Access
   funding enabled and organized by Projekt DEAL. [414984028-SFB 1404
   FONDA]; Deutsche Forschungsgemeinschaft (DFG, German Research
   Foundation)
FX This work was funded by the Deutsche Forschungsgemeinschaft (DFG, German
   Research Foundation)-Project-ID 414984028-SFB 1404 FONDA. Open Access
   funding enabled and organized by Projekt DEAL.
CR Aschermann C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23412
   Blum V, 2009, COMPUT PHYS COMMUN, V180, P2175, DOI 10.1016/j.cpc.2009.06.022
   Draxl C, 2019, J PHYS-MATER, V2, DOI 10.1088/2515-7639/ab13bb
   Eberlein Martin, 2020, INT S SEARCH BAS SOF, DOI [DOI 10.1007/978-3-030, DOI 10.1007/978-3-030-59762-7_8]
   Fioraldi Andrea, 2020, 14 USENIX WORKSHOP O
   Ghiringhelli LM, 2017, NPJ COMPUT MATER, V3, DOI 10.1038/s41524-017-0048-5
   Giannozzi P, 2009, J PHYS-CONDENS MAT, V21, DOI 10.1088/0953-8984/21/39/395502
   Godefroid Patrice, 2008, NDSS, V8, P151
   Gopinath R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P172, DOI 10.1145/3368089.3409679
   Gulans A, 2014, J PHYS-CONDENS MAT, V26, DOI 10.1088/0953-8984/26/36/363202
   Hafner J, 2007, COMPUT PHYS COMMUN, V177, P6, DOI 10.1016/j.cpc.2007.02.045
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   Havrikov N, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P189, DOI 10.1109/ASE.2019.00027
   Höschele M, 2016, IEEE INT CONF AUTOM, P720, DOI 10.1145/2970276.2970321
   HOHENBERG P, 1964, PHYS REV B, V136, pB864, DOI 10.1103/PhysRevB.7.1912
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Kulkarni N, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P456, DOI 10.1109/ASE51524.2021.9678879
   Lejaeghere K, 2016, SCIENCE, V351, DOI 10.1126/science.aad3000
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Müller S, 2022, P IEEE INT C E-SCI, P521, DOI 10.1109/eScience55777.2022.00092
   Niu YN, 2022, BIOINFORMATICS, V38, P3327, DOI 10.1093/bioinformatics/btac327
   Soremekun E, 2022, IEEE T SOFTWARE ENG, V48, P1138, DOI 10.1109/TSE.2020.3013716
   Trübenbach D, 2022, 15TH SEARCH-BASED SOFTWARE TESTING WORKSHOP (SBST 2022), P6, DOI 10.1145/3526072.3527523
   Wilkinson Mark D, 2016, Sci Data, V3, P160018, DOI 10.1038/sdata.2016.18
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
NR 25
TC 0
Z9 0
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2024
VL 54
IS 2
BP 208
EP 224
DI 10.1002/spe.3266
EA SEP 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL7E2
UT WOS:001076092400001
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Li, FY
   Zou, K
   Keung, JW
   Yu, X
   Feng, S
   Xiao, Y
AF Li, Fuyang
   Zou, Kuan
   Keung, Jacky Wai
   Yu, Xiao
   Feng, Shuo
   Xiao, Yan
TI On the relative value of imbalanced learning for code smell detection
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code smell detection; empirical software engineering; imbalanced
   learning; machine learning
ID MISSING VALUES; SEARCH
AB Machine learning-based code smell detection (CSD) has been demonstrated to be a valuable approach for improving software quality and enabling developers to identify problematic patterns in code. However, previous researches have shown that the code smell datasets commonly used to train these models are heavily imbalanced. While some recent studies have explored the use of imbalanced learning techniques for CSD, they have only evaluated a limited number of techniques and thus their conclusions about the most effective methods may be biased and inconclusive. To thoroughly evaluate the effect of imbalanced learning techniques for machine learning-based CSD, we examine 31 imbalanced learning techniques with seven classifiers to build CSD models on four code smell data sets. We employ four evaluation metrics to assess the detection performance with the Wilcoxon signed-rank test and Cliff's & delta;$$ \delta $$. The results show that (1) Not all imbalanced learning techniques significantly improve detection performance, but deep forest significantly outperforms the other techniques on all code smell data sets. (2) SMOTE (Synthetic Minority Over-sampling TEchnique) is not the most effective technique for resampling code smell data sets. (3) The best-performing imbalanced learning techniques and the top-3 data resampling techniques have little time cost for code smell detection. Therefore, we provide some practical guidelines. First, researchers and practitioners should select the appropriate imbalanced learning techniques (e.g., deep forest) to ameliorate the class imbalance problem. In contrast, the blind application of imbalanced learning techniques could be harmful. Then, better data resampling techniques than SMOTE should be selected to preprocess the code smell data sets.
C1 [Li, Fuyang; Zou, Kuan; Yu, Xiao] Wuhan Univ Technol, Sch Comp Sci & Artificial Intelligence, Wuhan, Peoples R China.
   [Zou, Kuan] Guangxi Univ, Sch Comp Elect & Informat, Nanning, Peoples R China.
   [Keung, Jacky Wai] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Yu, Xiao] Wuhan Univ Technol, Sanya Sci & Educ Innovat Pk, Sanya, Peoples R China.
   [Yu, Xiao] Wuhan Univ Technol, Chongqing Res Inst, Chongqing, Peoples R China.
   [Feng, Shuo] Zhengzhou Univ, Sch Comp & Artificial Intelligence, Zhengzhou, Peoples R China.
   [Xiao, Yan] Sun Yat Sen Univ, Sch Cyber Sci & Technol, Shenzhen Campus, Shenzhen, Peoples R China.
C3 Wuhan University of Technology; Guangxi University; City University of
   Hong Kong; Wuhan University of Technology; Wuhan University of
   Technology; Zhengzhou University; Sun Yat Sen University
RP Yu, X (corresponding author), Wuhan Univ Technol, Sanya Sci & Educ Innovat Pk, Sanya, Peoples R China.
EM xiaoyu@whut.edu.cn
OI Keung, Jacky/0000-0002-3803-9600; Li, Fuyang/0009-0003-5862-9709; Yu,
   Xiao/0000-0002-4473-3068
FU Project of Sanya Yazhou Bay Science and Technology City
   [SCKJ-JYRC-2022-17]; Natural Science Foundation of China [62272356];
   Youth Fund Project of Hainan Natural Science Foundation [622QN344];
   Natural Science Foundation of Chongqing [cstc2021jcyj-msxmX1115]; Wuhan
   University of Technology [104-40120693]
FX Project of Sanya Yazhou Bay Science and Technology City, Grant/Award
   Number:SCKJ-JYRC-2022-17; Natural Science Foundation of China,
   Grant/Award Number: 62272356; Youth Fund Project of Hainan Natural
   Science Foundation, Grant/Award Number: 622QN344;Natural Science
   Foundation of Chongqing, Grant/Award Number:cstc2021jcyj-msxmX1115;
   Start-up Grant from Wuhan University of Technology, Grant/Award Number:
   104-40120693
CR Acuña E, 2004, ST CLASS DAT ANAL, P639
   Akhter Nazneen, 2021, Proceedings of 2021 International Conference on Information and Communication Technology for Sustainable Development (ICICT4SD), P356, DOI 10.1109/ICICT4SD50815.2021.9396937
   Al-Shaaby A, 2020, ARAB J SCI ENG, V45, P2341, DOI 10.1007/s13369-019-04311-w
   Alazba A, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106648
   Aljamaan H, 2021, 20TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2021), P897, DOI 10.1109/ICMLA52953.2021.00148
   Alkharabsheh K, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106736
   Alkharabsheh K, 2021, SOFTWARE QUAL J, V29, P197, DOI 10.1007/s11219-021-09550-5
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Amorim L, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P261, DOI 10.1109/ISSRE.2015.7381819
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Boutaib S, 2021, EXPERT SYST APPL, V166, DOI 10.1016/j.eswa.2020.114076
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Bryton S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P337, DOI 10.1109/QUATIC.2010.60
   Chen Y, 2022, IEEE T GEOSCI REMOTE, V60, DOI 10.1109/TGRS.2020.3043980
   Chen YX, 2020, IEEE T GEOSCI REMOTE, V58, P7049, DOI 10.1109/TGRS.2020.2979273
   Chen YZ, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21196417
   De Stefano M, 2021, MALTESQUE '21: PROCEEDINGS OF THE 5TH INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVOLUTION, P1, DOI 10.1145/3472674.3473978
   Dewangan S, 2021, IEEE ACCESS, V9, P162869, DOI 10.1109/ACCESS.2021.3133810
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 1997, REFACTORING IMPROVIN
   Galar M, 2012, IEEE T SYST MAN CY C, V42, P463, DOI 10.1109/TSMCC.2011.2161285
   Garcia FJP., 2011, THESIS U VALLADOLID
   Gupta H., 2021, Advanced Information Networking and Applications, P120
   He CC, 2022, J ASSOC INF SCI TECH, V73, P70, DOI 10.1002/asi.24546
   He CC, 2021, SCIENTOMETRICS, V126, P4005, DOI 10.1007/s11192-021-03943-w
   Jain S, 2021, SCI COMPUT PROGRAM, V212, DOI 10.1016/j.scico.2021.102713
   Jia K., 2023, IEEE T EMERG TOP COM
   John G.H., 1994, P 11 INT C MACH LEAR, P121
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Khleel N.A.A., 2022, Indones. J. Electr. Eng. Comput. Sci., V26, P1725
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim D.K., 2017, Int. J. Electr. Comput. Eng., V7, P3613, DOI [DOI 10.11591/IJECE.V7I6.PP3613-3621, 10.11591/ijece.v7i6.pp3613-3621]
   Kovacevic A, 2022, EXPERT SYST APPL, V204, DOI 10.1016/j.eswa.2022.117607
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   LaValle SM, 2004, INT J ROBOT RES, V23, P673, DOI 10.1177/0278364904045481
   Li F., 2023, IET SOFTW
   Li Y., MULTILABEL CODE SMEL
   Li Z., 2022, IEEE T SOFTW ENG
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Ma XX, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106906
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mundfrom D.J., 1998, Imputing Missing Values: The Effect on the Accuracy of Classification
   Nanda J., 2022, INT J INF TECHNOL, P1
   Palomba F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P482, DOI 10.1145/3180155.3182532
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Patnaik Archana, 2021, DSMLAI '21': Proceedings of the International Conference on Data Science, Machine Learning and Artificial Intelligence, P178, DOI 10.1145/3484824.3484911
   Pecorelli F., 2018, P 3 ACM SIGSOFT INT
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Pornprasit C, 2023, IEEE T SOFTWARE ENG, V49, P84, DOI 10.1109/TSE.2022.3144348
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rahad K, 2021, SOFTWARE PRACT EXPER, V51, P1308, DOI 10.1002/spe.2957
   Rahman MM, 2018, SOFTWARE PRACT EXPER, V48, P1560, DOI 10.1002/spe.2591
   Sabir F, 2019, SOFTWARE PRACT EXPER, V49, P3, DOI 10.1002/spe.2639
   Santos Geanderson, 2023, Fundamental Approaches to Software Engineering: 26th International Conference, FASE 2023, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2023, Proceedings. Lecture Notes in Computer Science (13991), P282, DOI 10.1007/978-3-031-30826-0_16
   Sharma T, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110936
   Shen L, 2020, ASIA PAC SOFWR ENG, P276, DOI 10.1109/APSEC51365.2020.00036
   Singh S., 2023, J I ENG INDIA B, p104:1
   Sousa BL, 2019, SOFTWARE PRACT EXPER, V49, P1079, DOI 10.1002/spe.2697
   Tong HN, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106747
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yang Z, 2021, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC52881.2021.00010
   Yedida R., 2022, ARXIV
   Young W, 2011, THEOR ISS ERGON SCI, V12, P15, DOI 10.1080/14639220903470205
   Yu J, 2021, IEEE INT C S Q R S, P738, DOI 10.1109/QRS54544.2021.00083
   Yu X, 2023, INFORM SOFTWARE TECH, V157, DOI 10.1016/j.infsof.2023.107165
   Yu X, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106847
   Yu X, 2020, IEEE T RELIAB, V69, P139, DOI 10.1109/TR.2019.2931559
   Zhang Y., 2022, KNOWL-BASED SYST
   Zhang Y, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2403
   Zhen Y., 2022, ACM T SOFTW ENG METH
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zhu K, 2022, INFORM SCIENCES, V583, P332, DOI 10.1016/j.ins.2021.11.029
   Zhu K, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111026
NR 83
TC 7
Z9 7
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2023
VL 53
IS 10
BP 1902
EP 1927
DI 10.1002/spe.3235
EA JUN 2023
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R6FK9
UT WOS:001016042200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mushtak, N
   Lemire, D
AF Mushtak, Noble
   Lemire, Daniel
TI Fast number parsing without fallback
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE floating-point numbers; IEEE-754; parsing
AB In recent work, Lemire (2021) presented a fast algorithm to convert number strings into binary floating-point numbers. The algorithm has been adopted by several important systems: for example, it is part of the runtime libraries of GCC 12, Rust 1.55, and Go 1.16. The algorithm parses any number string with a significand containing no more than 19 digits into an IEEE floating-point number. However, there is a check leading to a fallback function to ensure correctness. This fallback function is never called in practice. We prove that the fallback is unnecessary. Thus we can slightly simplify the algorithm and its implementation.
C1 [Mushtak, Noble] Northeastern Univ, Comp Sci Dept, Boston, MA USA.
   [Lemire, Daniel] Univ Quebec TELUQ, Lab Res Ctr, DOT, Montreal, PQ, Canada.
   [Lemire, Daniel] Univ Quebec TELUQ, Lab Res Ctr, DOT, Montreal, PQ H2S3L5, Canada.
C3 Northeastern University; University of Quebec; Universite TELUQ;
   University of Quebec; Universite TELUQ
RP Lemire, D (corresponding author), Univ Quebec TELUQ, Lab Res Ctr, DOT, Montreal, PQ H2S3L5, Canada.
EM lemire@gmail.com
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922
FU Natural Sciences and Engineering Research Council of Canada
   [RGPIN-2017-03910]
FX Natural Sciences and Engineering Research Council of Canada,
   Grant/AwardNumber: RGPIN-2017-03910
CR Adams U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360595
   [Anonymous], 1985, ANSI/IEEE Standard 754-1985, P1, DOI [DOI 10.1109/IEEESTD.1985.82928, 10.1109/IEEESTD.1985.82928]
   CLINGER WD, 1990, SIGPLAN NOTICES, V25, P92, DOI 10.1145/93548.93557
   Clinger WD, 2004, ACM SIGPLAN NOTICES, V39, P360, DOI 10.1145/989393.989430
   Gay DM., 1990, CORRECTLY ROUN UNPUB
   Hardy G.H., 1979, An introduction to the theory of numbers
   Legendre A.-M., 1808, Essai sur la theorie des nombres
   Lemire D, 2021, SOFTWARE PRACT EXPER, V51, P1700, DOI 10.1002/spe.2984
   Ry AU., 2018, P 39 ACM SIGPLAN C P, P270, DOI [10.1145/3192366.3192369, DOI 10.1145/3192366.3192369]
   Steele GL, 2004, ACM SIGPLAN NOTICES, V39, P372, DOI 10.1145/989393.989431
NR 10
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2023
VL 53
IS 7
BP 1467
EP 1471
DI 10.1002/spe.3198
EA MAR 2023
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H9FS7
UT WOS:000943248000001
OA Green Accepted, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Bacocco, DL
   Carrani, E
   Ciciani, B
   Di Sanzo, P
   Leotta, F
   Torre, M
AF Bacocco, Duilio Luca
   Carrani, Eugenio
   Ciciani, Bruno
   Di Sanzo, Pierangelo
   Leotta, Francesco
   Torre, Marina
TI Design and implementation of the new Italian healthcare digital
   interoperable registry for implantable medical devices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data quality; data services; digital registry; interoperablity
ID E-GOVERNMENT
AB Nowadays, the role played by registries in monitoring and improving healthcare, including the quality of medical devices, is widely recognized. A well-designed digital healthcare registry, in particular regarding data collection procedures and tools, can effectively support goals such as monitoring a (large) population subject to a specific condition, describing the natural history of diseases, supporting observational study methods, as well as evaluating the clinical effectiveness or cost effectiveness of healthcare products and services. This article describes the architecture of a new platform implementing a digital interoperable healthcare registry, the Italian Implantable Prostheses Registry (RIPI). One of the main goals of RIPI is to provide reliable and high-quality data for monitoring surgery outcomes, performing survival analysis, assessing the safety of devices and procedures, and supporting the traceability of patients. The article focuses on the key aspects and choices that guided the design and implementation processes of the new platform. Most of the design choices came from specific requirements to fulfill, in particular concerning data quality, access policy, interoperability, extensibility and modularity. Overall, the article discusses the main challenges and the adopted solutions, proposing a design perspective and describing an experience of interest for computer scientists, engineers and practitioners, in particular in the area of healthcare information systems.
C1 [Bacocco, Duilio Luca; Carrani, Eugenio; Torre, Marina] Ist Super Sanita, Rome, Italy.
   [Bacocco, Duilio Luca; Ciciani, Bruno; Leotta, Francesco] Sapienza Univ Rome, DIAG, Rome, Italy.
   [Di Sanzo, Pierangelo] Univ LAquila, DISIM, Laquila, Italy.
C3 Istituto Superiore di Sanita (ISS); Sapienza University Rome; University
   of L'Aquila
RP Bacocco, DL (corresponding author), Ist Super Sanita, Rome, Italy.
EM duilioluca.bacocco@iss.it
RI Di Sanzo, Pierangelo/HII-2776-2022; Di Sanzo, Pierangelo/W-6340-2019;
   Leotta, Francesco/AAT-2480-2020; Torre, Marina/N-7449-2017
OI Di Sanzo, Pierangelo/0000-0001-6136-6303; Di Sanzo,
   Pierangelo/0000-0001-6136-6303; Carrani, Eugenio/0000-0002-5362-1439;
   Bacocco, Duilio Luca/0000-0003-0593-5457; Torre,
   Marina/0000-0003-3851-187X; Leotta, Francesco/0000-0001-9216-8502
FU Universita degli Studi di Roma La Sapienza within the CRUI-CARE
   Agreement
FX This study was coordinated by the Italian National Institute of Health
   (ISS) and its realization was possible thanks to the contribution from
   the General Directorate of Medical Devices and the Pharmaceutical
   Service at the Ministry of Health. Open Access Funding provided by
   Universita degli Studi di Roma La Sapienza within the CRUI-CARE
   Agreement.
CR Abbonizio F., 20212115 ISTISAN
   [Anonymous], 2017, DECRETO PRESIDENTE C
   Bacocco D., 2021, RAPPORTI ISTISAN
   Bacocco D., 2021, P 10 INT C ARTHROPLA
   Baladrón C, 2009, TOWARDS THE FUTURE INTERNET: A EUROPEAN RESEARCH PERSPECTIVE, P217, DOI 10.3233/978-1-60750-007-0-217
   Baresi L, 2006, LECT NOTES COMPUT SC, V4294, P240
   Carrani E., 2020, PROCEDURA CONTROLLO
   Carrani E., 2020, PROCEDURA OPERATIVA
   Carrani E., 2020, TRACCIATI RECORD RIA
   Ebad SA, 2020, SOFTWARE PRACT EXPER, V50, P1258, DOI 10.1002/spe.2807
   Estes A., 2011, Encyclopedia of Cryptography and Security, P81, DOI DOI 10.1007/978-1-4419-5906-5
   Fabian R., 2018, DATA ORIENTED DESIGN
   Ferraiolo D. E., 1995, Proceedings. 11th Annual Computer Security Applications Conference, P241
   Garante Privacy, 2020, GDPR REG 2016 679
   Gliklich RE, 2014, Registries for evaluating patient outcomes: a user's guide, V3rd
   Gliklich RichardE., 2010, Registries for evaluating patient outcomes: a user's guide
   Graves SE, 2010, ACTA ORTHOP, V81, P8, DOI 10.3109/17453671003667184
   Ishida T, 2006, International Symposium on Applications and the Internet , Proceedings, P96, DOI 10.1109/SAINT.2006.40
   Kovac M, 2014, COMPUTER, V47, P34, DOI 10.1109/MC.2014.282
   Liquid Technologies, 2021, LIQ STUD
   Lübbeke A, 2018, HEALTH POLICY, V122, P548, DOI 10.1016/j.healthpol.2018.03.010
   Lübbeke A, 2017, BMC MUSCULOSKEL DIS, V18, DOI 10.1186/s12891-017-1773-0
   Luzi, 2018, ITALIAN ARTHROPLASTY
   Mecella M, 2001, COMPUTER, V34, P40, DOI 10.1109/2.901166
   Ministero della Salute, 2020, NUOV SIST INF SAN NS
   Ministero della Salute, SCHED DIM OSP SDO
   Ministero della Salute, SIST SAN NAZ
   Murakami Y., 2012, 2012 IEEE International Conference on Services Computing (SCC), P539, DOI 10.1109/SCC.2012.101
   Niederländer C, 2013, HEALTH POLICY, V113, P20, DOI 10.1016/j.healthpol.2013.08.008
   Paolucci M, 2002, LECT NOTES COMPUT SC, V2512, P225
   Torre M., 2014, PROGETTO REGISTRO IT
   Torre M., 2021, BOLL EPIDEMIOL NAZ, V2, P16, DOI [10.53225/BEN_015, DOI 10.53225/BEN_015]
   Torre M., 2019, P 8 INT C ARTHROPLAS
   Urban S., 2009, ENCY DATABASE SYSTEM
   Viscusi G, 2010, INFORMATION SYSTEMS FOR EGOVERNMENT: A QUALITY-OF-SERVICE PERSPECTIVE, P3, DOI 10.1007/978-3-642-13571-2
NR 35
TC 0
Z9 0
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2022
VL 52
IS 11
BP 2368
EP 2392
DI 10.1002/spe.3130
EA JUL 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5C7YI
UT WOS:000832778700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Ghobaei-Arani, M
   Asadianfam, S
   Abolfathi, A
AF Ghobaei-Arani, Mostafa
   Asadianfam, Shiva
   Abolfathi, Ahad
TI Deploying IoT services on the fog infrastructure: A graph
   partitioning-based approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE IoT; fog computing; graph partitioning; service placement
ID PLACEMENT; MANAGEMENT
AB Internet of Things (IoT) represents a new generation of information and communication technology for anyone, anytime and anywhere. Cloud service-based IoT applications significantly increase latency and network utilization. The fog environment is closer to the user to perform computing, communication, and storage tasks on network edge devices. Therefore, it can greatly reduce the latency of real-time applications. It is an essential feature of fog computing and its most important advantage compared to cloud computing. This study proposed a new approach to service placement generated by running applications on IoT devices in the fog computing. IoT devices send applications to the fog environment that each application contains a set of services. The purpose of solving the IoT services placement problem is to efficiently deploy these services on fog cells. For this purpose, it is assumed that the received services from the IoT applications are received as a directed acyclic graph that depicts the communication between the cells within the graph that shows the communication between the services. Then, the imperialist competitive algorithm is used to place and select the destination for IoT services. The simulation results of the iFogSim simulator in different experiments showed that the imperialist competitive algorithm with the proposed graph partitioning approach has improved service placement on the fog infrastructure compared to the genetic algorithm and best-fit algorithm.
C1 [Ghobaei-Arani, Mostafa; Asadianfam, Shiva] Islamic Azad Univ, Qom Branch, Dept Comp Engn, Qom, Iran.
   [Abolfathi, Ahad] Islamic Azad Univ, Qazvin Branch, Dept Comp & Informat Technol Engn, Qazvin, Iran.
C3 Islamic Azad University; Islamic Azad University
RP Ghobaei-Arani, M (corresponding author), Islamic Azad Univ, Qom Branch, Dept Comp Engn, Qom, Iran.
EM m.ghobaei@qom-iau.ac.ir
RI Ghobaei-Arani, Mostafa/K-5058-2015
OI Ghobaei-Arani, Mostafa/0000-0003-2639-0900
CR Al-Tarawneh MAB, 2022, J AMB INTEL HUM COMP, V13, P445, DOI 10.1007/s12652-021-02910-w
   [Anonymous], 2018, KUVS FACHGESPR CH FO
   Atashpaz-Gargari E, 2007, IEEE C EVOL COMPUTAT, P4661, DOI 10.1109/CEC.2007.4425083
   Azad ST, 2022, J EXP THEOR ARTIF IN, V34, P949, DOI 10.1080/0952813X.2021.1938698
   Baranwal G, 2021, J SUPERCOMPUT, V77, P10562, DOI 10.1007/s11227-021-03702-x
   Berahmand K, 2022, CLUSTER COMPUT, V25, P869, DOI 10.1007/s10586-021-03430-0
   Berahmand K, 2021, COMPUT BIOL MED, V138, DOI 10.1016/j.compbiomed.2021.104933
   Brogi A, 2017, IEEE INTERNET THINGS, V4, P1185, DOI 10.1109/JIOT.2017.2701408
   Choi J, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21041506
   Elsadek WF, 2018, PROCEEDINGS OF 2018 INTERNATIONAL CONFERENCE ON INNOVATIVE TRENDS IN COMPUTER ENGINEERING (ITCE' 2018), P63, DOI 10.1109/ITCE.2018.8316601
   Faticanti F, 2020, IEEE T NETW SERV MAN, V17, P2436, DOI 10.1109/TNSM.2020.3023011
   Filiposka S, 2015, J SUPERCOMPUT, V71, P4504, DOI 10.1007/s11227-015-1546-1
   Ghobaei-Arani M, 2022, EXPERT SYST APPL, V200, DOI 10.1016/j.eswa.2022.117012
   Guerrero C, 2019, J AMB INTEL HUM COMP, V10, P2447, DOI 10.1007/s12652-018-0914-0
   Hedhli A, 2021, J GRID COMPUT, V19, DOI 10.1007/s10723-021-09565-z
   Huang Z., 2014, Journal of Innovation in Digital Ecosystems, V1, P47, DOI 10.1016/j.jides.2015.02.005
   Keller M, 2017, IEEE T NETW SERV MAN, V14, P121, DOI 10.1109/TNSM.2016.2611590
   Khosroabadi F, 2021, J SENS ACTUAT NETW, V10, DOI 10.3390/jsan10020026
   Kochovski P, 2019, FUTURE GENER COMP SY, V101, P747, DOI 10.1016/j.future.2019.07.030
   Lera I, 2019, IEEE INTERNET THINGS, V6, P3641, DOI 10.1109/JIOT.2018.2889511
   Liu C, 2022, NEURAL PROCESS LETT, V54, P1823, DOI 10.1007/s11063-021-10708-2
   Maia AM, 2021, COMPUT NETW, V194, DOI 10.1016/j.comnet.2021.108146
   Makkes MX, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P1, DOI 10.1109/ICFEC.2017.11
   Naas MI, 2021, J GRID COMPUT, V19, DOI 10.1007/s10723-021-09571-1
   Naranjo PGV, 2018, J SUPERCOMPUT, V74, P2470, DOI 10.1007/s11227-018-2274-0
   Natesha BV, 2021, J NETW COMPUT APPL, V178, DOI 10.1016/j.jnca.2020.102972
   Ni LN, 2017, IEEE INTERNET THINGS, V4, P1216, DOI 10.1109/JIOT.2017.2709814
   Martin JP, 2020, SOFTWARE PRACT EXPER, V50, P2337, DOI 10.1002/spe.2896
   Pfandzelter T, 2021, SOFTWARE PRACT EXPER, V51, P1798, DOI 10.1002/spe.3003
   Rezaeipanah Amin, 2022, International Journal of Computers and Applications, V44, P139, DOI 10.1080/1206212X.2019.1709288
   Selimi M, 2019, J GRID COMPUT, V17, P169, DOI 10.1007/s10723-018-9437-3
   Shahidinejad A, 2020, CLUSTER COMPUT, V23, P1045, DOI 10.1007/s10586-019-02972-8
   Skarlat O, 2017, SERV ORIENTED COMPUT, V11, P427, DOI 10.1007/s11761-017-0219-8
   Velasquez K, 2017, ANN TELECOMMUN, V72, P105, DOI 10.1007/s12243-016-0524-9
   Vögler M, 2018, IEEE T SERV COMPUT, V11, P879, DOI 10.1109/TSC.2016.2617327
   Wang JX, 2021, J GRID COMPUT, V19, DOI 10.1007/s10723-021-09558-y
   Yousefpour A, 2019, IEEE INTERNET THINGS, V6, P5080, DOI 10.1109/JIOT.2019.2896311
   Zeng DZ, 2016, IEEE T COMPUT, V65, P3702, DOI 10.1109/TC.2016.2536019
NR 38
TC 6
Z9 6
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2022
VL 52
IS 9
BP 1967
EP 1986
DI 10.1002/spe.3111
EA JUN 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3T7YW
UT WOS:000805659100001
DA 2024-07-18
ER

PT J
AU Tao, YD
   Wang, TY
   Sun, AN
   Hamid, SS
   Chen, SC
   Shyu, ML
AF Tao, Yudong
   Wang, Tianyi
   Sun, Anchen
   Hamid, Shahid S.
   Chen, Shu-Ching
   Shyu, Mei-Ling
TI Florida public hurricane loss model: Software system for insurance loss
   projection
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE disaster management; distributed computing; hurricane loss estimation;
   system integration
ID RISK; VULNERABILITY; MANAGEMENT
AB A six-month-long Atlantic hurricane season impacts Florida residents every year and can result in devastating consequences, including loss of life, property damage, and business interruptions. Hurricane risk assessment and loss prediction are critical to various uses such as determining homeowner insurance premiums, regulating these premiums, conducting scenario analysis, conducting stress tests for companies, disaster management, and evaluating the benefits of disaster mitigation techniques. This article describes the Florida Public Hurricane Loss Model (FPHLM): a large-scale catastrophe model with massive databases and analytics tools for business and government decision-making. We will discuss the design and implementation of each component in FPHLM and explain the tools and techniques utilized to tackle challenges in data availability, data analytics, and the interface between the data, analytical techniques, and computing. Results are shown to validate the software system's effectiveness and reliability and illustrate some of the system's use cases.
C1 [Tao, Yudong; Sun, Anchen; Shyu, Mei-Ling] Univ Miami, Dept Elect & Comp Engn, Coral Gables, FL 33124 USA.
   [Wang, Tianyi; Chen, Shu-Ching] Florida Int Univ, Knight Fdn Sch Comp & Informat Sci, Miami, FL 33199 USA.
   [Hamid, Shahid S.] Florida Int Univ, Dept Finance, Miami, FL 33199 USA.
C3 University of Miami; State University System of Florida; Florida
   International University; State University System of Florida; Florida
   International University
RP Chen, SC (corresponding author), Florida Int Univ, Knight Fdn Sch Comp & Informat Sci, Miami, FL 33199 USA.
EM chens@cs.fiu.edu
RI Tao, Yudong/AAB-9101-2019
OI Tao, Yudong/0000-0002-0116-3878; Chen, Shu-Ching/0000-0001-9209-390X;
   Wang, Tianyi/0000-0001-5120-6568; Sun, Anchen/0000-0003-3633-6385
CR Arnette AN, 2019, PROD OPER MANAG, V28, P457, DOI 10.1111/poms.12934
   Castellanos M, 2005, PROC INT CONF DATA, P1084
   Choi T.M., 2018, PROD OPER MANAG, V27, P1868, DOI 10.1111/poms.12838
   Clark K.M., 1986, Proceedings of the Casualty Actuarial Society, V73, P69
   Emanuel K, 2017, B AM METEOROL SOC, V98, P495, DOI 10.1175/BAMS-D-16-0134.1
   Florida commission on hurricane loss projection methodology, 2019, FLOR COMM HURR LOSS
   Garcia R., 2015, P 10 IEEE INT C COLL, P304
   Hamid S., 2019, Florida Public Hurricane Loss Model 7.0: Submitted in compliance with the 2017 Standards of the Florida Commission on Hurricane Loss Projection Methodology
   Khanduri AC, 2003, J WIND ENG IND AEROD, V91, P455, DOI 10.1016/S0167-6105(02)00408-7
   Klaus L, 2018, METROLOGIA, V55, pS70, DOI 10.1088/1681-7575/aaa21b
   LIN LI, 1989, BIOMETRICS, V45, P255, DOI 10.2307/2532051
   Mili RR, 2018, INT J DISAST RISK RE, V27, P355, DOI 10.1016/j.ijdrr.2017.10.022
   Pinelli JP, 2011, NAT HAZARDS REV, V12, P190, DOI 10.1061/(ASCE)NH.1527-6996.0000051
   Pita G., 2010, P 2 AM ASS WIND ENG
   Pita GL, 2013, J WIND ENG IND AEROD, V114, P96, DOI 10.1016/j.jweia.2012.12.004
   Shahid HamidB.M., 2010, Statistical Methodology, V7, P552, DOI DOI 10.1016/J.STAMET.2010.02.004
   Shook G, 1997, DISASTERS, V21, P77, DOI 10.1111/1467-7717.00045
   Shvachko K, 2010, IEEE S MASS STOR SYS
   SUGG AL, 1969, MON WEATHER REV, V97, P225, DOI 10.1175/1520-0493(1969)097<0225:TAHSO>2.3.CO;2
   Tabandeh A, 2022, RELIAB ENG SYST SAFE, V219, DOI 10.1016/j.ress.2021.108208
   Vickery P.J., 2006, Natural Hazards Review, V7, P94, DOI [10.1061/(ASCE)1527- 6988(2006)7:2(94), DOI 10.1061/(ASCE)1527-6988(2006)7:2(94)]
   Vickery PJ, 2009, J WIND ENG IND AEROD, V97, P392, DOI 10.1016/j.jweia.2009.05.005
   Wang YM, 2011, WATER RESOUR MANAG, V25, P3465, DOI 10.1007/s11269-011-9866-2
   Wang YM, 2008, COMPUT IND ENG, V54, P513, DOI 10.1016/j.cie.2007.09.002
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
   Zhang JY, 2019, SUSTAINABILITY-BASEL, V11, DOI 10.3390/su11102738
NR 26
TC 1
Z9 2
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2022
VL 52
IS 7
BP 1736
EP 1755
DI 10.1002/spe.3086
EA APR 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1X8ZE
UT WOS:000776639500001
DA 2024-07-18
ER

PT J
AU Raj, V
   Ravichandra, S
AF Raj, Vinay
   Ravichandra, Sadam
TI A service graph based extraction of microservices from monolith services
   of service-oriented architecture
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE microservices; migration; monoliths; service graph; service oriented
   architecture
ID MIGRATION
AB Service-oriented architecture (SOA) has been widely used to design enterprise applications in the past two decades. The services in SOA are becoming complex with the increase in changing user requirements and SOA is still seen as monolithic from a deployment perspective. Monolithic services make the application complex, and it becomes difficult to maintain. With the evolution of microservices architecture, software architects started migrating legacy applications to microservices. However, existing migration approaches in the literature mostly focus on migrating monolithic applications to microservices. To the best of our knowledge, very few works have been done in migrating SOA applications to microservices. One of the major challenges in the migration process is the extraction of microservices from the existing legacy applications. To address this, we propose an approach to extract the candidate microservices using graph based algorithms. In particular, four algorithms are defined: (i) construction of service graph (SG), (ii) construction of task graph (TG) for each service of the a SOA application, (iii) extraction of candidate microservices using the SG of SOA application, and (iv) construction of a SG for a microservices application to retain the dependencies between the generated microservices. We chose a SOA-based web application to demonstrate the proposed microservices extraction approach and extracted the microservices. Additionally, we have evaluated the extracted microservices and compared them with SOA based services.
C1 [Raj, Vinay; Ravichandra, Sadam] Natl Inst Technol Warangal, Dept Comp Sci & Engn, Warangal, Telangana, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Warangal
RP Raj, V (corresponding author), Natl Inst Technol Warangal, Dept Comp Sci & Engn, Warangal, Telangana, India.
EM rvinay1@student.nitw.ac.in
RI Raj, Vinay/HTP-7373-2023
OI Raj, Vinay/0000-0002-4739-5893; SADAM, RAVICHANDRA/0000-0002-3029-1107
CR Abdullah M, 2021, IEEE SYST J, V15, P1275, DOI 10.1109/JSYST.2020.2997518
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Baresi L, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P3, DOI 10.1007/978-3-030-31646-4_1
   Baresi L, 2017, LECT NOTES COMPUT SC, V10465, P19, DOI 10.1007/978-3-319-67262-5_2
   Bartsch C, 2008, IEEE IFIP NETW OPER, P714, DOI 10.1109/NOMS.2008.4575196
   Bhallamudi P., 2009, Proceedings of the 2009 11th IEEE International Symposium on Web Systems Evolution (WSE 2009), P71, DOI 10.1109/WSE.2009.5630392
   Carvalho L, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P26, DOI 10.1145/3336294.3336319
   Cerny T, 2017, APPL COMPUT REV, V17, P29, DOI [10.1145/3129676.3129682, 10.1145/3183628.3183631]
   Christensen E., 2001, WEB SERVICES DESCRIP
   da Silva HC, 2019, ADV INTELL SYST, V800, P575, DOI 10.1007/978-3-030-14070-0_81
   De Iasio A, 2021, SOFTWARE PRACT EXPER, V51, P25, DOI 10.1002/spe.2877
   Desai U, 2021, AAAI CONF ARTIF INTE, V35, P72
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Fan CY, 2017, 2017 IEEE 6TH INTERNATIONAL CONFERENCE ON AI & MOBILE SERVICES (AIMS), P109, DOI 10.1109/AIMS.2017.23
   Passini WF, 2022, SOFTWARE PRACT EXPER, V52, P5, DOI 10.1002/spe.3013
   Freire AFAA, 2021, SOFTWARE PRACT EXPER, V51, P1280, DOI 10.1002/spe.2956
   Furda A, 2018, IEEE SOFTWARE, V35, P63, DOI 10.1109/MS.2017.440134612
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Hasselbring W, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P133, DOI 10.1145/2851553.2858659
   Henry A, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P45, DOI 10.1007/978-3-030-31646-4_3
   Jammes F, 2005, IEEE T IND INFORM, V1, P62, DOI 10.1109/TII.2005.844419
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Jin WX, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P211, DOI 10.1109/ICWS.2018.00034
   Kalia AK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1214, DOI 10.1145/3468264.3473915
   Kalia AK, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1606, DOI 10.1145/3368089.3417933
   Kamimura M, 2018, ASIA PAC SOFWR ENG, P571, DOI 10.1109/APSEC.2018.00072
   Laso S, 2021, SOFTWARE PRACT EXPER, V51, P1910, DOI 10.1002/spe.2976
   Lenarduzzi V, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110710
   Li SS, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.008
   Lyu Z., 2020, IEEE SYST J
   Martha VS., 2019, WEBSERVICES, P173
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Mazzara M, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P29, DOI 10.1007/978-3-030-31646-4_2
   Megargel A, 2020, COMPUT COMMUN NETW S, P85, DOI 10.1007/978-3-030-33624-0_4
   Microservices EW., 2016, FLEX SOFTW ARCH
   Namiot D., 2014, International Journal of Open Information Technologies, V2, P24
   Pahl C, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P137, DOI 10.5220/0005785501370146
   Pautasso C., 2009, P 18 INT C WORLD WID, P911, DOI DOI 10.1145/1526709.1526832
   Ponce F, 2019, P INT C CHIL COMPUT, DOI [10.1109/sccc49216.2019.8966423, 10.1109/SCCC49216.2019.8966423]
   Raj Vinay, 2018, 2018 3rd IEEE International Conference on Recent Trends in Electronics, Information & Communication Technology (RTEICT), P1531, DOI 10.1109/RTEICT42901.2018.9012140
   Raj V, 2021, J WEB ENG, V20, P1229, DOI 10.13052/jwe1540-9589.2051
   Raj V, 2021, INT J COMMUN NETW DI, V27, P100, DOI 10.1504/IJCNDS.2021.116463
   Raj Vinay, 2021, SN Computer Science, V2, P1
   Rodriguez G, 2019, LECT NOTES COMPUT SC, V11622, P544, DOI 10.1007/978-3-030-24305-0_41
   Salah T, 2016, INT CONF INTERNET, P318, DOI 10.1109/ICITST.2016.7856721
   Sindhgatta R, 2009, LECT NOTES COMPUT SC, V5900, P485, DOI 10.1007/978-3-642-10383-4_36
   Siriwardena P., 2018, MICROSERVICES ENTERP, P19
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Tusjunt Mathawee, 2018, 2018 IEEE 4th International Conference on Computer and Communications (ICCC). Proceedings, P609, DOI 10.1109/CompComm.2018.8781036
   Tyszberowicz Shmuel, 2018, Dependable Software Engineering. Theories, Tools, and Applications. 4th International Symposium, SETTA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 10998), P50, DOI 10.1007/978-3-319-99933-3_4
   Washizaki H, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P211, DOI 10.1109/METRIC.2003.1232469
   Xiao ZX, 2016, 2016 4TH INTERNATIONAL CONFERENCE ON ENTERPRISE SYSTEMS (ES) PROCEEDINGS, P60, DOI 10.1109/ES.2016.14
   Yanchuk A., 2006, J SOFTWARE, V1, P32
NR 54
TC 7
Z9 7
U1 4
U2 31
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2022
VL 52
IS 7
BP 1661
EP 1678
DI 10.1002/spe.3081
EA MAR 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1X8ZE
UT WOS:000768461300001
DA 2024-07-18
ER

PT J
AU Maiti, M
   Vukovic, D
   Mukherjee, A
   Paikarao, PD
   Yadav, JK
AF Maiti, Moinak
   Vukovic, Darko
   Mukherjee, Amrit
   Paikarao, Pavan D.
   Yadav, Janardan Krishna
TI Advanced data integration in banking, financial, and insurance software
   in the age of COVID-19
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE blockchains; COVID-19; Fintech; integration; IoT; Neurotech
ID 4TH INDUSTRIAL-REVOLUTION; BIG DATA; INFORMATION; MOTIVATION; SECTOR
AB This study contributes to our understanding of how the emergence of the COVID-19 pandemic changes the global Banking Financial Services and Insurance (BFSI) landscape. Before the COVID-19 pandemic, BFSIs corporate strategy was solely aligned to the quest for operational efficiency. However, during the ongoing COVID-19 pandemic, global BFSIs are forced to adopt digital transformation in their operations due to a rise in transaction volumes. The ongoing COVID-19 pandemic already triggers holistic innovations concerning the global BFSI's product, process, concept, trend, or idea. Thus, the BFSI cannot survive without efficient and innovative system software for global operations. The study plots the hype cycle to identify relevant technologies to deal with real-world business problems. The hype cycle indicates that the need for advanced data integration is growing and COVID-19 pandemic has already triggered it. The study argues that the incorporation of data integration might be challenging initially for BFSIs but eventually it may result in an efficient model to handle these types of pandemic or unexpected circumstances.
C1 [Maiti, Moinak] Natl Res Univ, Dept Finance, Higher Sch Econ, St Petersburg 194100, Russia.
   [Vukovic, Darko] RUDN Univ, Peoples Friendship Univ Russia, Fac Econ, Finance & Credit Dept, Moscow, Russia.
   [Mukherjee, Amrit] Anhui Univ, Sch Elect & Informat Engn, Hefei, Peoples R China.
   [Paikarao, Pavan D.] Terna Publ Charitable Trusts Coll Engn, Dept Elect & Telecommun, Osmanabad, India.
   [Yadav, Janardan Krishna] OP Jindal Global Univ, Jindal Global Business Sch, Sonipat, India.
C3 HSE University (National Research University Higher School of
   Economics); Peoples Friendship University of Russia; Anhui University;
   O.P. Jindal Global University
RP Maiti, M (corresponding author), Natl Res Univ, Dept Finance, Higher Sch Econ, St Petersburg 194100, Russia.
EM maitisoft@gmail.com
RI Mukherjee, Amrit/Q-3174-2016; Vukovic, Darko B/G-9374-2016; Maiti,
   Moinak/Q-7181-2019; Vukovic, Darko B./AGI-2271-2022; Vukovic, Darko
   B./GQY-5928-2022
OI Mukherjee, Amrit/0000-0002-6714-5568; Vukovic, Darko
   B/0000-0002-1165-489X; Maiti, Moinak/0000-0003-0045-6174; Vukovic, Darko
   B./0000-0002-1165-489X; Yadav, Janardan Krishna/0000-0003-1970-8933
CR Abid A, 2022, SOFTWARE PRACT EXPER, V52, P841, DOI 10.1002/spe.2983
   Acar Okan, 2019, Procedia Computer Science, V158, P971, DOI 10.1016/j.procs.2019.09.138
   Albion R. G., 1932, Am. Hist. Rev, V37, P718, DOI [10.2307/1843336, DOI 10.2307/1843336]
   Almansi AA., 2020, FINANCIAL SECTORS CY
   Alt R, 2018, ELECTRON MARK, V28, P235, DOI 10.1007/s12525-018-0310-9
   Asif S., 2000, EUR J MARKETING, V34 Nos, P299, DOI DOI 10.1108/03090560010311867
   Baig A., 2020, NEXT GEN TECHNOLOGY
   Barker R.G., 1998, ACCOUNT BUS RES, V29, P3
   Blind K, 2010, TELECOMMUN POLICY, V34, P162, DOI 10.1016/j.telpol.2009.11.016
   Borgogno O, 2019, COMPUT LAW SECUR REV, V35, DOI 10.1016/j.clsr.2019.03.008
   Boru T., 2020, EUR J BUS MANAG, V12, P53
   Burrell PR, 1997, NEURAL COMPUT APPL, V6, P193, DOI 10.1007/BF01501506
   Cameron R., 1963, SCAND ECON HIST REV, V11, P117
   Chen Y, 2016, J IND INF INTEGR, V2, P30, DOI 10.1016/j.jii.2016.04.004
   Chen ZM, 2017, FINANC INNOV, V3, DOI 10.1186/s40854-017-0062-0
   Cheng CY, 2021, ECON MODEL, V94, P662, DOI 10.1016/j.econmod.2020.02.008
   COLLIER DA, 1983, LONG RANGE PLANN, V16, P10, DOI 10.1016/0024-6301(83)90002-X
   Demirguc-Kunt A, 2020, Banking sector performance during the COVID-19 crisis
   Ejrnæs M, 2010, EUR REV ECON HIST, V14, P361, DOI 10.1017/S1361491610000109
   FRANKE RH, 1987, TECHNOL FORECAST SOC, V31, P143, DOI 10.1016/0040-1625(87)90046-1
   Gai K., 2016, SMARTCOM, P236
   Gates C., 2014, 2014 Proceedings of the New Security Paradigms Workshop, P105
   Gerth F, 2021, J FINANC SERV MARK, V26, P215, DOI 10.1057/s41264-021-00098-w
   Gorden M, 1965, Electronics, V38, P114, DOI [DOI 10.1109/N-SSC.2006.4785860, DOI 10.1109/JPROC.1998.658762]
   Griffiths F, 2018, IEEE INSTRU MEAS MAG, V21, P29, DOI 10.1109/MIM.2018.8573590
   Hinson R, 2019, CURR OPIN ENV SUST, V41, P1, DOI 10.1016/j.cosust.2019.07.002
   Hoag C, 2006, J ECON HIST, V66, P342, DOI 10.1017/S0022050706000143
   Husain Z., 2013, BUSINESS MANAGEMENT, V3, P43
   Jovane F, 2008, CIRP ANN-MANUF TECHN, V57, P641, DOI 10.1016/j.cirp.2008.09.010
   Kallel A, 2021, SOFTWARE PRACT EXPER, V51, P91, DOI 10.1002/spe.2924
   Kim S., 2004, THESIS U S CAROLINA
   Kumar A, 2021, FUTURE GENER COMP SY, V115, P1, DOI 10.1016/j.future.2020.08.046
   Langseth J., 2007, U.S. Patent No. 7,181,417, Patent No. [7,181,417, 7181417]
   Lee Y, 2015, COMPUT HUM BEHAV, V51, P418, DOI 10.1016/j.chb.2015.05.021
   Liermann V., 2019, IMPACT DIGITAL TRANS
   Liu Y, 2014, CHINA COMMUN, V11, P1, DOI 10.1109/CC.2014.7019834
   Loureiro A, 2018, WORLDW HOSP TOUR THE, V10, P740, DOI 10.1108/WHATT-07-2018-0044
   Lu Y, 2017, J IND INF INTEGR, V6, P1, DOI 10.1016/j.jii.2017.04.005
   Maiti M., 2017, Asian Economic and Financial Review, V7, P541, DOI DOI 10.18488/JOURNAL.AEFR.2017.76.541
   Maiti M., 2020, J EC STRUCT, V9, P1
   Maiti M, 2023, IEEE INTERNET THINGS, V10, P2104, DOI 10.1109/JIOT.2021.3063494
   Maiti M, 2020, INTERNET TECHNOL LET, V3, DOI 10.1002/itl2.157
   Maiti M, 2020, MANAGE DECIS, V58, P1525, DOI 10.1108/MD-06-2019-0725
   Maiti M, 2021, J SUSTAIN FINANC INV, V11, P199, DOI 10.1080/20430795.2020.1723380
   Maiti M, 2020, J ECON SURV, V34, P175, DOI 10.1111/joes.12344
   Maiti M, 2018, INT J LAW MANAG, V60, P1377, DOI 10.1108/IJLMA-08-2017-0179
   Maiti M, 2018, INT J LAW MANAG, V60, P1210, DOI 10.1108/IJLMA-06-2017-0141
   Maiti M, 2018, J ECON STUD, V45, P710, DOI 10.1108/JES-05-2017-0132
   Malhotra DK., 1999, J LENDING CREDIT RIS, V81, P24
   Marafie Z, 2018, CONF BUS INFORM, P72, DOI 10.1109/CBI.2018.10048
   Markides CC, 2006, EUR J INNOV MANAG, V9, P129, DOI 10.1108/14601060610663532
   Martin P, 2015, BIOSOCIETIES, V10, P422, DOI 10.1057/biosoc.2014.40
   Maslow AH, 1943, PSYCHOL REV, V50, P370, DOI 10.1037/h0054346
   Milian EZ, 2019, ELECTRON COMMER R A, V34, DOI 10.1016/j.elerap.2019.100833
   Mohammed D., 1970, J INTERNET BANK COMM, V20, P1
   Mohan Senthilkumar, 2022, Softw Pract Exp, V52, P824, DOI 10.1002/spe.2969
   Moleke P., 2003, HUMAN RES DEV REV, P635
   Mollick E, 2006, IEEE ANN HIST COMPUT, V28, P62, DOI 10.1109/MAHC.2006.45
   Nakashima T, 2018, IATSS RES, V42, P61, DOI 10.1016/j.iatssr.2018.06.001
   Neto R.de Castro Sobrosa., 2020, RES GLOBALIZATION, V2, DOI [DOI 10.1016/J.RESGLO.2020.100024, 10.1016/J.RESGLO.2020.100024]
   Nikkel B, 2020, FORENS SCI INT-DIGIT, V33, DOI 10.1016/j.fsidi.2020.200908
   Philbeck Thomas., 2018, J INT AFF, V72, P17, DOI [DOI 10.14738/ASSRJ.101.13481, DOI 10.2307/26588339.]
   Pornsakulvanich V, 2008, COMPUT HUM BEHAV, V24, P2292, DOI 10.1016/j.chb.2007.11.003
   Rogers Everett M., 2000, Asian Journal of Communication, V10, P71
   Ryals L., 2001, J STRATEG MARK, V9, P3, DOI DOI 10.1080/713775725
   Ryan BJ., 2019, PAYTECH BOOK PAYMENT, P28
   Schaller RR, 1997, IEEE SPECTRUM, V34, P52, DOI 10.1109/6.591665
   Shamim F, 2007, J ECON STUD, V34, P352, DOI 10.1108/01443580710817452
   Singhal R, 2021, COMPUT APPL ENG EDUC, V29, P1007, DOI 10.1002/cae.22355
   Soproni L., 2008, ED RES INNOVATION PO, P267
   Steven AP., 2015, U.S. Patent No. 9,159,042., Patent No. [9,159,042, 9159042]
   Tuli S, 2020, INTERNET THINGS-NETH, V11, DOI 10.1016/j.iot.2020.100222
   Tuli S, 2022, IEEE T PARALL DISTR, V33, P101, DOI 10.1109/TPDS.2021.3087349
   Vukovic D, 2020, PHYSICA A, V542, DOI 10.1016/j.physa.2019.123331
   Waldrop MM, 2016, NATURE, V530, P144, DOI 10.1038/530144a
   White DF, 2002, ENVIRON POLIT, V11, P1, DOI 10.1080/714000603
   Wonglimpiyarat J., 2018, J. High Technol. Manag. Res., V29, P98, DOI DOI 10.1016/J.HITECH.2018.04.009
   Yan TC, 2018, HANDBOOK OF BLOCKCHAIN, DIGITAL FINANCE, AND INCLUSION, VOL 1: CRYPTOCURRENCY, FINTECH, INSURTECH, AND REGULATION, P249, DOI 10.1016/B978-0-12-810441-5.00011-7
   Yin S, 2015, P IEEE, V103, P143, DOI 10.1109/JPROC.2015.2388958
   Yin S, 2020, J IND INF INTEGR, V19, DOI 10.1016/j.jii.2020.100157
   Zhang P., 2017, IEEE T BIG DATA, V4, P368
NR 81
TC 13
Z9 15
U1 4
U2 33
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 887
EP 903
DI 10.1002/spe.3018
EA AUG 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ZO1ZF
UT WOS:000685484400001
PM 34538963
OA Green Published
DA 2024-07-18
ER

PT J
AU McCarthy, H
   Koay, A
   Dawson, M
   Kent, KB
   Patros, P
AF McCarthy, Harry
   Koay, Abigail
   Dawson, Michael
   Kent, Kenneth B.
   Patros, Panos
TI Benchmarking and learning garbage collection delays for
   resource-restricted graphical user interfaces
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE benchmarking; garbage collection; GUI GC; JVM; machine learning;
   performance engineering
AB Tablets, smartphones, and wearables have limited resources. Applications on these devices employ a graphical user interface (GUI) for interaction with users. Language runtimes for GUIs employ dynamic memory management using garbage collection (GC). However, GC policies and algorithms are designed for data centers and cloud computing, but they are not necessarily ideal for resource-constrained embedded devices. In this article, we present GUI GC, a JavaFX GUI benchmark, which we use to compare the performance of the four GC policies of the Eclipse OpenJ9 Java runtime on a resource-constrained environment. Overall, our experiments suggest that the default policy Gencon registered significantly lower execution times than its counterparts. The region-based policy, Balanced, did not fully utilize blocking times; thus, using GUI GC, we conducted experiments with explicit GC invocations that measured significant improvements of up to 13.22% when multiple CPUs were available. Furthermore, we created a second version of GUI GC that expands on the number of controllable load-stressing dimensions; we conducted a large number of randomly configured experiments to quantify the performance effect that each knob has. Finally, we analyzed our dataset to derive suitable knob configurations for desired runtime, GC, and hardware stress levels.
C1 [McCarthy, Harry; Koay, Abigail; Patros, Panos] Univ Waikato, Dept Software Engn, Hamilton, New Zealand.
   [Dawson, Michael] IBM Runtime Technol, Toronto, ON, Canada.
   [Kent, Kenneth B.; Patros, Panos] Univ New Brunswick, Fac Comp Sci, Fredericton, NB, Canada.
C3 University of Waikato; University of New Brunswick
RP Patros, P (corresponding author), Univ Waikato, Dept Software Engn, Hamilton, New Zealand.
EM panos.patros@waikato.ac.nz
OI Koay, Abigail/0000-0002-4130-9931; Kent, Kenneth B/0000-0003-2764-823X
CR Adamoli A, 2010, INT SYM PERFORM ANAL, P13, DOI 10.1109/ISPASS.2010.5452080
   Alloghani M., 2020, Supervised and unsupervised learning for data science, P3, DOI [DOI 10.1007/978-3-030-22475-2_1, 10.1007/978-3-030-22475-2_1, DOI 10.1007/978-3-030-22475-21]
   [Anonymous], 2012, The Garbage Collection Handbook
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Compton R., 2020, P 2020 MIN SOFTW REP
   Frank E, 2000, MACH LEARN, V41, P5, DOI 10.1023/A:1007670802811
   Jayasena S, 2015, 2015 IEEE 29TH INTERNATIONAL PARALLEL AND DISTRIBUTED PROCESSING SYMPOSIUM WORKSHOPS, P1261, DOI 10.1109/IPDPSW.2015.84
   Jovic M., 2008, PPPJ 08, P137, DOI DOI 10.1145/1411732.1411751
   Kalibhat NM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING WORKSHOPS (HIPCW), P3, DOI 10.1109/HiPCW.2017.00010
   Michie D., 1994, MACHINE LEARNING NEU
   Neu N., 2014, P 8 INT C PERF EV ME, P147
   Patros Panagiotis, 2018, International Journal of Cloud Computing, V7, P282
   Patros P., 2016, Proceedings of the 26th Annual International Conference on Computer Science and Software Engineering, CASCON '16, page, P166
   Patros P, 2018, 2018 ELEVENTH INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND UBIQUITOUS NETWORK (ICMU 2018)
   Patros P, 2018, INT CONF SELF SELF, P168, DOI 10.1109/SASO.2018.00029
   Patros P, 2017, IEEE INT C CL COMP, P633, DOI 10.1109/CLUSTER.2017.74
   Podolskiy V, 2019, INT CONF SELF SELF, P72, DOI 10.1109/SASO.2019.00018
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Singer J, 2011, ACM SIGPLAN NOTICES, V46, P109, DOI 10.1145/2076022.1993495
   Sor V, 2013, PROC IEEE INT CONF S, P544, DOI 10.1109/ICSM.2013.92
   Stallings W., 2016, Computer Organization and Architecture: Designing for Performance
   Tanenbaum AndrewS., 1987, OPERATING SYSTEMS DE
   Torgo L., 1996, Advances in Artificial Intelligence 13th Brazilian Symposium on Artificial Intelligence, SBIA'96. Proceedings, P51
   Wilkinson B., 1996, COMPUTER ARCHITECTUR
   Witten IH, 2011, MOR KAUF D, P1
   Zhu J., 2018, P 28 ANN INT C COMPU, P201
NR 26
TC 0
Z9 0
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 172
EP 193
DI 10.1002/spe.3005
EA JUN 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000663851600001
DA 2024-07-18
ER

PT J
AU Pfandzelter, T
   Hasenburg, J
   Bermbach, D
AF Pfandzelter, Tobias
   Hasenburg, Jonathan
   Bermbach, David
TI From zero to fog: Efficient engineering of fog-based Internet of Things
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE application design; fog computing; IoT; simulation; testbed
ID SERVICE PLACEMENT; EDGE; MOBILE; PERFORMANCE; SIMULATION; TOOLKIT
AB In Internet of Things (IoT) data processing, cloud computing alone does not suffice due to latency constraints, bandwidth limitations, and privacy concerns. By introducing intermediary nodes closer to the edge of the network that offer compute services in proximity to IoT devices, fog computing can reduce network strain and high access latency to application services. While this is the only viable approach to enable efficient IoT applications, the issue of component placement among cloud and intermediary nodes in the fog adds a new dimension to system design. State-of-the-art solutions to this issue rely on simulation or solving a formalized assignment problem through heuristics only, which both have their drawbacks. In this article, we present a five-step process for designing practical fog-based IoT applications that combines best practices, simulation, and testbed analysis to converge towards an efficient system architecture. We then apply this process in a smart factory case study. By deploying filtered options to a physical testbed, we show that each step of our process converges towards more efficient application designs.
C1 [Pfandzelter, Tobias; Hasenburg, Jonathan; Bermbach, David] Tech Univ Berlin, Mobile Cloud Comp Res Grp, Einsteinufer 17, D-10587 Berlin, Germany.
   [Pfandzelter, Tobias; Hasenburg, Jonathan; Bermbach, David] Einstein Ctr Digital Future, Einsteinufer 17, D-10587 Berlin, Germany.
C3 Technical University of Berlin
RP Pfandzelter, T (corresponding author), Tech Univ Berlin, Mobile Cloud Comp Res Grp, Einsteinufer 17, D-10587 Berlin, Germany.; Pfandzelter, T (corresponding author), Einstein Ctr Digital Future, Einsteinufer 17, D-10587 Berlin, Germany.
EM tp@mcc.tu-berlin.de
RI Pfandzelter, Tobias/AAZ-7485-2021
OI Pfandzelter, Tobias/0000-0002-7868-8613; Bermbach,
   David/0000-0002-7524-3256; Hasenburg, Jonathan/0000-0001-8549-0405
FU Deutsche Forschungsgemeinschaft (DFG, German Research Foundation)
   [415899119]
FX Funded by the Deutsche Forschungsgemeinschaft (DFG, German Research
   Foundation) 415899119.
CR Anawar MR, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/7157192
   [Anonymous], 2010, P SIGMOD INT C MAN D, DOI DOI 10.1145/1807167.1807231
   [Anonymous], 2015, P USENIX HOTSTORAGE, DOI DOI 10.5555/2827719.2827740
   Badri H, 2020, IEEE T PARALL DISTR, V31, P909, DOI 10.1109/TPDS.2019.2950937
   Bagaa M, 2020, IEEE T WIREL COMMUN, V19, P4700, DOI 10.1109/TWC.2020.2986408
   Balasubramanian D, 2014, P IEEE RAP SYST PROT, P128, DOI 10.1109/RSP.2014.6966903
   Bermbach D., 2014, THESIS KARLSRUHE I T
   Bermbach D, 2017, LECT NOTES COMPUT SC, V10601, P314, DOI 10.1007/978-3-319-69035-3_22
   Bermbach D, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2020), P25, DOI 10.1109/ICFC49376.2020.00012
   Bermbach D, 2018, LECT NOTES COMPUT SC, V10797, P198, DOI 10.1007/978-3-319-91764-1_16
   Bermbach David, 2017, Cloud Service Benchmarking: Measuring Quality of Cloud Services from a Client Perspective
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Brambilla G., 2014, Proceedings of the First International Conference on IoT in Urban Space, P50, DOI DOI 10.4108/ICST.URB-IOT.2014.257268
   Brogi A, 2017, IEEE INTERNET THINGS, V4, P1185, DOI 10.1109/JIOT.2017.2701408
   Brogi A, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P105, DOI 10.1109/ICFEC.2017.8
   Cao K, 2021, SOFTWARE PRACT EXPER, V51, P2225, DOI 10.1002/spe.2942
   Cardellini V., 2016, P 10 ACM INT C DISTR, P69
   Coutinho A, 2018, IEEE ICC
   Eisele S, 2017, 2017 IEEE FOG WORLD CONGRESS (FWC), P49
   Fernández-Cerero D, 2020, SIMUL MODEL PRACT TH, V101, DOI 10.1016/j.simpat.2019.101966
   Gao B, 2022, IEEE T INTELL TRANSP, V23, P6608, DOI 10.1109/TITS.2021.3058553
   Giang NK, 2015, PROCEEDINGS 2015 5TH INTERNATIONAL CONFERENCE ON THE INTERNET OF THINGS (IOT), P155, DOI 10.1109/IOT.2015.7356560
   Goudarzi M, 2021, IEEE T MOBILE COMPUT, V20, P1298, DOI 10.1109/TMC.2020.2967041
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Gusev M, 2019, IEEE INTERNET COMPUT, V23, P37, DOI 10.1109/MIC.2019.2892219
   Hasenburg J., 2019, FBASE REPLICATION SE
   Hasenburg J, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P267, DOI 10.1145/3341105.3374060
   Hasenburg J, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2020), P9, DOI 10.1109/ICFC49376.2020.00010
   Hasenburg J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2019), P144, DOI 10.1109/ICFC.2019.00026
   Hasenburg J, 2018, PROCEEDINGS OF THE 2018 WORKSHOP ON MIDDLEWARE AND APPLICATIONS FOR THE INTERNET OF THINGS (M4IOT '18), P1, DOI 10.1145/3286719.3286720
   He ZL, 2021, SOFTWARE PRACT EXPER, V51, P1868, DOI 10.1002/spe.2951
   Heintz B, 2020, IEEE T CLOUD COMPUT, V8, P232, DOI 10.1109/TCC.2017.2750678
   Hong H.-J., 2016, Network Operations and Management Symposium (APNOMS), 2016 18th Asia-Pacific, P1
   Jha DN, 2020, SOFTWARE PRACT EXPER, V50, P844, DOI 10.1002/spe.2787
   Kangasharju, 2020, P 19 ACM WORKSH HOT, P182, DOI [10.1145/3422604.3425943, DOI 10.1145/3422604.3425943]
   Karagiannis V, 2020, 4TH IEEE INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC 2020), P19, DOI 10.1109/ICFEC50348.2020.00010
   Khare S, 2019, SEC'19: PROCEEDINGS OF THE 4TH ACM/IEEE SYMPOSIUM ON EDGE COMPUTING, P1, DOI 10.1145/3318216.3363315
   Li YP, 2021, THORAC CANCER, V12, P752, DOI 10.1111/1759-7714.13832
   Luthra M., 2019, Proceedings of the 2nd International Workshop on Distributed Fog Services Design, P7
   Ma Y, 2022, IEEE T MOBILE COMPUT, V21, P196, DOI 10.1109/TMC.2020.3006507
   Mahmud R, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3186592
   Manna Z., 2012, Temporal verification of reactive systems: safety
   Mayer Ruben, 2017, P 1 WORKSH DISTR INF, P1, DOI DOI 10.1109/FWC.2017.8368525
   Misra, 2014, P 20 INT C MAN DAT H, P101
   Morabito R, 2018, IEEE NETWORK, V32, P102, DOI 10.1109/MNET.2018.1700175
   Moubayed A, 2021, IEEE T MOBILE COMPUT, V20, P1380, DOI 10.1109/TMC.2020.2965929
   Naas MI, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P97, DOI 10.1109/ICFEC.2017.15
   Németh B, 2022, IEEE T MOBILE COMPUT, V21, P3150, DOI 10.1109/TMC.2021.3055426
   Oh K, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P649, DOI 10.1109/CCGrid49817.2020.00-28
   Martin JP, 2020, SOFTWARE PRACT EXPER, V50, P2337, DOI 10.1002/spe.2896
   Pfandzelter T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2019), P201, DOI 10.1109/ICFC.2019.00033
   Qayyum T, 2018, IEEE ACCESS, V6, P63570, DOI 10.1109/ACCESS.2018.2877696
   Rausch T., 2020, 3 USENIX WORKSH HOT
   Roy N, 2011, P 2 ACM SPEC INT C P, P259
   Santoro D, 2017, INT CONF CLOUD COMP, P231, DOI 10.1109/CloudCom.2017.62
   de Oliveira RLS, 2014, 2014 IEEE COLOMBIAN CONFERENCE ON COMMUNICATIONS AND COMPUTING (COLCOM)
   Santos J, 2019, PROCEEDINGS OF THE 2019 IEEE CONFERENCE ON NETWORK SOFTWARIZATION (NETSOFT 2019), P351, DOI [10.1109/NETSOFT.2019.8806671, 10.1109/netsoft.2019.8806671]
   Santos L, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1488, DOI 10.1145/3341105.3374030
   Saurez E., 2016, P 10 ACM INT C DISTR, P258, DOI [DOI 10.1145/2933267.2933317, 10.1145/2933267, DOI 10.1145/2933267]
   Shekhar S, 2020, J SYST ARCHITECT, V107, DOI 10.1016/j.sysarc.2020.101710
   Shi WS, 2016, COMPUTER, V49, P78, DOI 10.1109/MC.2016.145
   Skarlat O, 2018, INT CONF UTIL CLOUD, P164, DOI 10.1109/UCC.2018.00025
   Skarlat O, 2017, SERV ORIENTED COMPUT, V11, P427, DOI 10.1007/s11761-017-0219-8
   Skarlat O, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P89, DOI 10.1109/ICFEC.2017.12
   Sonmez C, 2018, T EMERG TELECOMMUN T, V29, DOI 10.1002/ett.3493
   Sotiriadis S, 2014, 2014 28TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P444, DOI 10.1109/WAINA.2014.74
   Tong L, 2016, 35 IEEE ANN INT C CO
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
   Wöbker C, 2018, IEEE IFIP NETW OPER
   Xu XL, 2019, IEEE ACCESS, V7, P67734, DOI 10.1109/ACCESS.2019.2918585
   Zeng XZ, 2017, J SYST ARCHITECT, V72, P93, DOI 10.1016/j.sysarc.2016.06.008
   Zhao PX, 2021, INT J GEOGR INF SCI, V35, P2187, DOI 10.1080/13658816.2020.1862126
   Zhao YM, 2021, IEEE T MOBILE COMPUT, V20, P460, DOI 10.1109/TMC.2019.2947465
NR 73
TC 16
Z9 16
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2021
VL 51
IS 8
BP 1798
EP 1821
DI 10.1002/spe.3003
EA JUN 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TD0EL
UT WOS:000656529000001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Pham, TA
   Wang, JJ
   Iyengar, R
   Xiao, Y
   Pillai, P
   Klatzky, R
   Satyanarayanan, M
AF Truong An Pham
   Wang, Junjue
   Iyengar, Roger
   Xiao, Yu
   Pillai, Padmanabhan
   Klatzky, Roberta
   Satyanarayanan, Mahadev
TI Ajalon: Simplifying the authoring of wearable cognitive assistants
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE artificial intelligence; augmented reality; cloudlets; computer vision;
   edge computing; Gabriel; machine learning; mobile computing; software
   productivity; wearables
ID TOOL
AB Wearable Cognitive Assistance (WCA) amplifies human cognition in real time through a wearable device and low-latency wireless access to edge computing infrastructure. It is inspired by, and broadens, the metaphor of GPS navigation tools that provide real-time step-by-step guidance, with prompt error detection and correction. WCA applications are likely to be transformative in education, health care, industrial troubleshooting, manufacturing, assisted driving, and sports training. Today, WCA application development is difficult and slow, requiring skills in areas such as machine learning and computer vision that are not widespread among software developers. This paper describes Ajalon, an authoring toolchain for WCA applications that reduces the skill and effort needed at each step of the development pipeline. Our evaluation shows that Ajalon significantly reduces the effort needed to create new WCA applications.
C1 [Truong An Pham; Xiao, Yu] Aalto Univ, Sch Elect Engn, Espoo, Finland.
   [Wang, Junjue; Iyengar, Roger; Klatzky, Roberta; Satyanarayanan, Mahadev] Carnegie Mellon Univ, Dept Comp Sci, Pittsburgh, PA 15213 USA.
   [Pillai, Padmanabhan] Intel Labs, Pittsburgh, PA USA.
C3 Aalto University; Carnegie Mellon University; Intel Corporation
RP Pham, TA (corresponding author), Aalto Univ, Sch Elect Engn, Dept Commun & Networking, Konemiehentie 2, Espoo 02150, Finland.
EM truong.pham@aalto.fi
OI Xiao, Yu/0000-0002-4517-3779
FU Business Finland [1660/31/2018]; National Science Foundation (NSF)
   [CNS-1518865]; NSF Graduate Research Fellowship [DGE1252522,
   DGE1745016]; CableLabs; Crown Castle; Deutsche Telekom; Intel;
   InterDigital; Microsoft; Seagate; VMware; Vodafone; Conklin Kistler
   family fund
FX We thank the editor, Dr. Satish Srirama, and the anonymous reviewers for
   their guidance in improving the presentation of our work. This research
   was supported by Business Finland under the grant number 1660/31/2018,
   and by the National Science Foundation (NSF) under grant number
   CNS-1518865. Roger Iyengar was supported by an NSF Graduate Research
   Fellowship under Grants DGE1252522 and DGE1745016. Additional support
   was provided by CableLabs, Crown Castle, Deutsche Telekom, Intel,
   InterDigital, Microsoft, Seagate, VMware, Vodafone, and the Conklin
   Kistler family fund. Any opinions, findings, conclusions or
   recommendations expressed in this material are those of the authors and
   do not necessarily reflect the view(s) of their employers or the above
   funding sources.
CR [Anonymous], 2018, COMPUTER VISION ANNO
   [Anonymous], 2018, GABRIEL PLATFORM WEA
   Bertasius G, 2017, ROBOTICS: SCIENCE AND SYSTEMS XIII
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Carmines E.G., 1979, RELIABILITY VALIDITY, P11
   Chen Z., 2017, EMPIRICAL STUDY LATE, P14
   Danelljan M., 2014, Accurate Scale Estimation for Robust Visual Tracking
   Everingham M, 2015, INT J COMPUT VISION, V111, P98, DOI 10.1007/s11263-014-0733-5
   Gagnon J. C., 2018, SAGE ENCY ED RES MEA, V2, P668, DOI [10.4135/9781506326139.n259, DOI 10.4135/9781506326139.N35]
   Gordillo A, 2017, COMPUT APPL ENG EDUC, V25, P188, DOI 10.1002/cae.21789
   Ha K, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P68, DOI 10.1145/2594368.2594383
   Jalal A, 2017, PATTERN RECOGN, V61, P295, DOI 10.1016/j.patcog.2016.08.003
   Jelodar AB, 2019, IEEE T MULTIMEDIA, V21, P1813, DOI 10.1109/TMM.2018.2885228
   Jinjun Wang, 2005, 13th Annual ACM International Conference on Multimedia, P735, DOI 10.1145/1101149.1101309
   Kim JH, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P4017, DOI 10.1145/2556288.2556986
   KIM Y, 2019, CHI 19
   Li XH, 2020, IMAGE VISION COMPUT, V93, DOI 10.1016/j.imavis.2019.103853
   Lo JY, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300633
   Mura Katharina, 2013, Front Psychol, V4, P994, DOI 10.3389/fpsyg.2013.00994
   Nater F., 2011, 2011 IEEE International Conference on Computer Vision Workshops (ICCV Workshops), P1912, DOI 10.1109/ICCVW.2011.6130482
   Ray, 2018, ANGEL YOUR SHOULDER
   Redmon J, 2018, Arxiv, DOI [arXiv:1804.02767, DOI 10.1109/CVPR.2017.690, DOI 10.48550/ARXIV.1804.02767]
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Rosenberg D, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2144
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Russell BC, 2008, INT J COMPUT VISION, V77, P157, DOI 10.1007/s11263-007-0090-8
   Satyanarayanan M, 2019, COMPUTER, V52, P37, DOI 10.1109/MC.2019.2911878
   Satyanarayanan M, 2017, COMPUTER, V50, P30, DOI 10.1109/MC.2017.9
   Satyanarayanan M, 2009, IEEE PERVAS COMPUT, V8, P14, DOI 10.1109/MPRV.2009.82
   Shorten C, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0197-0
   Pham TA, 2018, HOTMOBILE'18: PROCEEDINGS OF THE 19TH INTERNATIONAL WORKSHOP ON MOBILE COMPUTING SYSTEMS & APPLICATIONS, P31, DOI 10.1145/3177102.3177112
   Tsung-Yi Lin, 2017, 2017 IEEE International Conference on Computer Vision (ICCV), P2999, DOI 10.1109/ICCV.2017.324
   Walter K., 2010, ADAPTATION COOKING I, P199
   Yampolskiy RV., 2011, 2 U LOUISV
   Zhang SA, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3285029
NR 35
TC 2
Z9 3
U1 2
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2021
VL 51
IS 8
BP 1773
EP 1797
DI 10.1002/spe.2987
EA MAY 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TD0EL
UT WOS:000651521100001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Venigalla, ASM
   Chimalakonda, S
AF Venigalla, Akhila Sri Manasa
   Chimalakonda, Sridhar
TI On the comprehension of application programming interface usability in
   game engines
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE APIs; game engines; metrics; structural usability
ID EDUCATIONAL GAMES; API USABILITY; SERIOUS GAME; PATTERN
AB Extensive development of games for various purposes including education and entertainment has resulted in increased development of game engines. Game engines are being used on a large scale as they support and simplify game development to a greater extent. Game developers using game engines are often compelled to use various application programming interfaces (APIs) of game engines in the process of game development. Thus, both quality and ease of development of games are greatly influenced by APIs defined in game engines. Hence, understanding API usability in game engines could greatly help in choosing better game engines among the ones that are available for game development and also could help developers in designing better game engines. In this article, we thus aim to evaluate API usability of 95 publicly available game engine repositories on GitHub, written primarily in C++ programming language. We test API usability of these game engines against the eight structural API usability metrics-AMNOI, AMNCI, AMGI, APXI, APLCI, AESI, ATSI, and ADI. We see this research as a first step toward the direction of improving usability of APIs in game engines. We present the results of the study, which indicate that about 25% of the game engines considered have minimal API usability, with respect to the considered metrics. It was observed that none of the considered repositories have ideal (all metric scores equal to 1) API usability, indicating the need for developers to consider API usability metrics while designing game engines.
C1 [Venigalla, Akhila Sri Manasa; Chimalakonda, Sridhar] Indian Inst Technol Tirupati, Dept Comp Sci & Engn, Res Intelligent Software & Human Analyt RISHA Lab, Tirupati Renigunta Rd, Tirupati 517506, Andhra Pradesh, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Tirupati
RP Venigalla, ASM (corresponding author), Indian Inst Technol Tirupati, Dept Comp Sci & Engn, Res Intelligent Software & Human Analyt RISHA Lab, Tirupati Renigunta Rd, Tirupati 517506, Andhra Pradesh, India.
EM cs19d504@iittp.ac.in
OI Venigalla, Akhila Sri Manasa/0000-0003-4356-0334
CR Birn Thomas, 2014, Universal Access in Human-Computer Interaction. Aging and Assistive Environments. 8th International Conference, UAHCI 2014, Held as Part of HCI International 2014. Proceedings: LNCS 8515, P3, DOI 10.1007/978-3-319-07446-7_1
   Brito A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P255, DOI 10.1109/SANER.2018.8330214
   Burns C, 2012, S VIS LANG HUM CEN C, P179, DOI 10.1109/VLHCC.2012.6344511
   Christopoulou E, 2017, INT J SERIOUS GAMES, V4, P21, DOI 10.17083/ijsg.v4i4.194
   Cowan B, 2014, IEEE INT CONF ADV LE, P662, DOI 10.1109/ICALT.2014.194
   D F RITSCH., 2004, Archiwum ISPRS, V35, pB5
   de Souza CRB, 2009, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE-COMPANION.2009.5071006
   Ellaway Rachel H., 2010, 2010 Fifth International Conference on Digital Information Management (ICDIM 2010), P490, DOI 10.1109/ICDIM.2010.5664241
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   Farooq U, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P207
   Foster I, 2001, INT J HIGH PERFORM C, V15, P200, DOI 10.1177/109434200101500302
   Grill Thomas, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P164, DOI 10.1007/978-3-642-34347-6_10
   Hall L., 2004, P 2004 ACM SIGCHI IN, P284
   Huang TW, 2021, IEEE T COMPUT AID D, V40, P776, DOI 10.1109/TCAD.2020.3007319
   Hudlicka Eva., 2009, Proceedings of the 4th International Conference on Foundations of Digital Games, P299
   Kangas M, 2017, TEACH TEACH, V23, P451, DOI 10.1080/13540602.2016.1206523
   Kazimoglu C, 2012, PROCD SOC BEHV, V47, P1991, DOI 10.1016/j.sbspro.2012.06.938
   Lee MJ, 2014, S VIS LANG HUM CEN C, P193, DOI 10.1109/VLHCC.2014.6883051
   Lima C, 2020, SOFTWARE QUAL J, V28, P425, DOI 10.1007/s11219-019-09476-z
   Lomborg S, 2014, INFORM SOC, V30, P256, DOI 10.1080/01972243.2014.915276
   López-Fernández L, 2017, MULTIMED TOOLS APPL, V76, P14247, DOI 10.1007/s11042-016-3729-z
   Marin-Lora Carlos, 2020, Trends and Innovations in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 1159), P494, DOI 10.1007/978-3-030-45688-7_50
   Marin-Vega H, 2017, J INF TECHNOL RES, V10, P1, DOI 10.4018/JITR.2017100101
   Marks S, 2007, GRAPHITE 2007: 5TH INTERNATIONAL CONFERENCE ON COMPUTER GRAPHICS AND INTERACTIVE TECHNIQUES IN AUSTRALASIA AND SOUTHERN ASIA, PROCEEDINGS, P273
   Messaoudi F, 2017, ACM T MULTIM COMPUT, V13, DOI 10.1145/3115934
   Messaoudi Farouk., 2015, 2015 international workshop on network and systems support for games (NetGames), P1
   Mosqueira-Rey E, 2018, INFORM SOFTWARE TECH, V97, P46, DOI 10.1016/j.infsof.2017.12.010
   Murphy-Hill E, 2018, 2018 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON API USAGE AND EVOLUTION (WAPI), P14, DOI 10.1145/3194793.3194795
   Myers BA, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2896587
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Orji R, 2013, PERS UBIQUIT COMPUT, V17, P1211, DOI 10.1007/s00779-012-0590-6
   Park Joongsin., 2015, Proceedings of the 2015 Annual Symposium on Computer-Human Interaction in Play, P673
   Pavkov S, 2017, 2017 40TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P728, DOI 10.23919/MIPRO.2017.7973518
   Petri G, 2016, J UNIVERS COMPUT SCI, V22, P992
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   Rama GM, 2015, SOFTWARE PRACT EXPER, V45, P75, DOI 10.1002/spe.2215
   Rauf I, 2019, COMPUT SCI REV, V33, P49, DOI 10.1016/j.cosrev.2019.05.001
   Rohs M., 2007, JVRB J VIR REAL BROA, V4, P1
   Scacchi W, 2017, IEEE SOFTWARE, V34, P110, DOI 10.1109/MS.2017.20
   Scheller T, 2015, INFORM SOFTWARE TECH, V61, P145, DOI 10.1016/j.infsof.2015.01.009
   Stylos Jeffrey., 2008, Proc. of the 16th International Symposium on Foundations of Software Eng, P105
   Venigalla Akhila Sri Manasa, 2020, ARXIV PREPRINT ARXIV
NR 42
TC 0
Z9 0
U1 7
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2021
VL 51
IS 8
BP 1728
EP 1744
DI 10.1002/spe.2985
EA MAY 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TD0EL
UT WOS:000649855900001
DA 2024-07-18
ER

PT J
AU Jindal, A
   Gerndt, M
   Chadha, M
   Podolskiy, V
   Chen, PF
AF Jindal, Anshul
   Gerndt, Michael
   Chadha, Mohak
   Podolskiy, Vladimir
   Chen, Pengfei
TI Function delivery network: Extending serverless computing for
   heterogeneous platforms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; edge computing; function delivery network;
   function&#8208; as&#8208; a&#8208; service; heterogeneous Faas;
   heterogeneous platforms; high&#8208; performance computing; serverless
   computing
AB Serverless computing has rapidly grown following the launch of Amazon's Lambda platform. Function-as-a-Service (FaaS) a key enabler of serverless computing allows an application to be decomposed into simple, standalone functions that are executed on a FaaS platform. The FaaS platform is responsible for deploying and facilitating resources to the functions. Several of today's cloud applications spread over heterogeneous connected computing resources and are highly dynamic in their structure and resource requirements. However, FaaS platforms are limited to homogeneous clusters and homogeneous functions and do not account for the data access behavior of functions before scheduling. We introduce an extension of FaaS to heterogeneous clusters and to support heterogeneous functions through a network of distributed heterogeneous target platforms called Function Delivery Network (FDN). A target platform is a combination of a cluster of homogeneous nodes and a FaaS platform on top of it. FDN provides Function-Delivery-as-a-Service (FDaaS), delivering the function to the right target platform. We showcase the opportunities such as varied target platform's characteristics, possibility of collaborative execution between multiple target platforms, and localization of data that the FDN offers in fulfilling two objectives: Service Level Objective (SLO) requirements and energy efficiency when scheduling functions by evaluating over five distributed target platforms using the FDNInspector, a tool developed by us for benchmarking distributed target platforms. Scheduling functions on an edge target platform in our evaluation reduced the overall energy consumption by 17x without violating the SLO requirements in comparison to scheduling on a high-end target platform.
C1 [Jindal, Anshul; Gerndt, Michael; Chadha, Mohak; Podolskiy, Vladimir] Tech Univ Munich, Chair Comp Architecture & Parallel Syst, Informat 10,Boltzmannstr 3, D-85748 Garching, Germany.
   [Chen, Pengfei] Sun Yat Sen Univ, Sch Data & Comp Sci, Guangzhou, Peoples R China.
C3 Technical University of Munich; Sun Yat Sen University
RP Jindal, A (corresponding author), Tech Univ Munich, Chair Comp Architecture & Parallel Syst, Informat 10,Boltzmannstr 3, D-85748 Garching, Germany.
EM anshul.jindal@tum.de
RI Jindal, Anshul/AAD-3273-2020; Podolskiy, Vladimir/B-8635-2015; Chadha,
   Mohak/HQZ-4671-2023
OI Jindal, Anshul/0000-0002-7773-5342; Chadha, Mohak/0000-0002-1995-7166
FU German Federal Ministry of Education and Research (BMBF)
FX This work was supported by the funding of the German Federal Ministry of
   Education and Research (BMBF) in the scope of the Software Campus
   program. Google Cloud credits were provided by the Google Cloud Platform
   research credits. We thank the anonymous reviewers for their
   constructive reviews to improve this work and inspire future work.
CR Akkus IE, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P923
   [Anonymous], 2020, CLOUD FUNCTIONS OVER
   [Anonymous], 2017, STATUS SERVERLESS CO
   [Anonymous], 2016, 8 USENIX WORKSH HOT
   Apache, 2017, OPENWHISK DOCUMENTAT
   Baldini I., 2017, RES ADV CLOUD COMPUT, P1, DOI DOI 10.1007/978-981-10-5026-8_1
   Balouek-Thomert D, 2019, INT J HIGH PERFORM C, V33, P1159, DOI 10.1177/1094342019877383
   Baresi L, 2017, LECT NOTES COMPUT SC, V10465, P196, DOI 10.1007/978-3-319-67262-5_15
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Chen S, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P107, DOI 10.1145/3297858.3304005
   Chen X, 2016, IEEE ACM T NETWORK, V24, P2827, DOI 10.1109/TNET.2015.2487344
   Delimitrou C, 2014, ACM SIGPLAN NOTICES, V49, P127, DOI 10.1145/2541940.2541941
   Ellis A., 2019, BRIGHT 2019 OPENFAAS
   Figiela K, 2018, CONCURR COMP-PRACT E, V30, DOI 10.1002/cpe.4792
   Freeman R, 2018, P ACM MEAS ANAL COMP, V2, DOI 10.1145/3179406
   Garg N, 2013, Apache kafka
   GoogleCloud, 2020, CLOUD FUNCTIONS EXEC
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   HELLERSTEIN J. M., 2018, 9 BIENNIAL C INNOVAT
   Jalali F, 2016, IEEE J SEL AREA COMM, V34, P1728, DOI 10.1109/JSAC.2016.2545559
   Jamieson F., LOSING SERVER
   Jindal A, 2021, SOFTWARE PRACT EXPER, V51, P1936, DOI 10.1002/spe.2966
   Jonas E., 2019, CLOUD PROGRAMMING SI
   Jonas E, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P445, DOI 10.1145/3127479.3128601
   Kairouz P., 2019, ABS191204977 CORR
   Kozuch, 2012, P 3 ACM S CLOUD  COM
   Kratzke N, 2018, APPL SCI-BASEL, V8, DOI 10.3390/app8081368
   Lane K., 2015, OVERVIEW BACKEND SER
   Lee H, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P442, DOI 10.1109/CLOUD.2018.00062
   LRZ, LEIBNIZ RECHENZENTRU
   Lynn T, 2017, INT CONF CLOUD COMP, P162, DOI 10.1109/CloudCom.2017.15
   Malawski M., 2017, EUR C PAR PROC, P415
   Malla S, 2020, INTERNET TECHNOL LET, V3, DOI 10.1002/itl2.137
   McGrath G, 2017, IEEE INT CON DIS, P405, DOI 10.1109/ICDCSW.2017.36
   Mohan Anup., 2019, P 11 USENIX C HOT TO
   Mohanty SK, 2018, INT CONF CLOUD COMP, P115, DOI 10.1109/CloudCom2018.2018.00033
   Munger, 2011, US Patent, Patent No. [7,962,580, 7962580]
   NVIDIA developer, 2020, PROGRAM MEMBERSHIP R
   OpenfaaS, 2019, KUBERNETES HPAV2 OPE
   OpenfaaS, 2019, OPENFAAS STACK
   Ostberg P.O, 2017, P EUR C NETW COMM EU, P1, DOI DOI 10.1109/EUCNC.2017.7980667
   Palade A, 2019, IEEE WORLD CONGR SER, P206, DOI 10.1109/SERVICES.2019.00057
   Pfandzelter T, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2020), P17, DOI 10.1109/ICFC49376.2020.00011
   Pfzelter, 2020, AUCTION BASED FUNCTI, P25
   Pierre-Louis MA., 2016, OPENWHISK QUICK TECH, V22, P7
   Reese Will, 2008, Linux J
   Satyanarayanan M, 2009, IEEE PERVAS COMPUT, V8, P14, DOI 10.1109/MPRV.2009.82
   Shahrad M, 2019, MICRO'52: THE 52ND ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, P1063, DOI 10.1145/3352460.3358296
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Skarlat O, 2016, IEEE INT CONF SERV, P32, DOI 10.1109/SOCA.2016.10
   Sowmya Nag K., 2019, STUDY MODERN MESSAGI
   Spillner J, 2018, COMM COM INF SC, V796, P154, DOI 10.1007/978-3-319-73353-1_11
   Tong L., 2016, P 35 ANN IEEE INT C, P1
   Turnbull J., 2018, Monitoring with Prometheus
   Villari M, 2016, IEEE CLOUD COMPUT, V3, P76, DOI 10.1109/MCC.2016.124
   Wang L, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P133
   WG CNCF serverless, 2018, CNCF WG SERVERLESS W
   Xiong Y, 2018, 2018 THIRD IEEE/ACM SYMPOSIUM ON EDGE COMPUTING (SEC), P373, DOI 10.1109/SEC.2018.00048
NR 59
TC 24
Z9 25
U1 3
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2021
VL 51
IS 9
SI SI
BP 1936
EP 1963
DI 10.1002/spe.2966
EA MAR 2021
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT9JV
UT WOS:000626881100001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Jin, YR
   Feng, Q
   Zhang, XP
   Lu, PL
   Shen, JQ
   Tu, YH
   Wu, ZQ
AF Jin, Yanrui
   Feng, Qiang
   Zhang, Xiping
   Lu, Peili
   Shen, Jiaqi
   Tu, Yihui
   Wu, Zhiquan
TI Deep domain adversarial residual neural network for sustainable wind
   turbine cyber-physical system fault diagnosis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bearing fault diagnosis; domain adversarial learning; residual block;
   sustainable wind turbine cyber&#8208; physical system
ID BEARING; DECOMPOSITION; MODEL
AB As a popular renewable energy generation technology, wind turbine system has become a critical enabler for building the sustainable cyber-physical system (CPS). The main shaft bearing is an important part of the wind turbine CPS and often runs under variable working conditions. Thus, the reliable bearing diagnosis method can timely discover the main shaft bearing fault, which reduces the maintenance cost of wind turbines. Inspired by the idea of domain adaptation, we combined domain adversarial neural network and residual network and proposed a novel deep domain adversarial residual neural network (DDA-RNN) for diagnosing bearing fault and improving model performance on the unlabeled dataset. This proposed software and hardware co-design method was evaluated by our bearing dataset, which was collected from two wind turbine CPSs from Sanmenxia in Henan Province. Besides, F1 score and accuracy are served as model metrics, which reflect the diagnosis performance. Compared with other methods, the experimental results show that DDA-RNN can improve model performance. Meanwhile, DDA-RNN extracts diagnosis knowledge from labeled dataset and improves the model performance on the unlabeled dataset under different working condition. Therefore, the proposed method can be potentially used to benefit many practical scenarios in the future.
C1 [Jin, Yanrui] Shanghai Jiao Tong Univ, Sch Mech Engn, State Key Lab Mech Syst & Vibrat, Shanghai, Peoples R China.
   [Feng, Qiang] Datang Renewable Energy Res Inst Co Ltd, Beijing, Peoples R China.
   [Zhang, Xiping] China Datang Corp, Renewable Energy Sci & Technol Res Inst, Distributed Energy & Multi Energy Complementary C, Beijing, Peoples R China.
   [Lu, Peili] Shanghai Minghuan Technol Co Ltd, Shanghai, Peoples R China.
   [Shen, Jiaqi; Tu, Yihui] Shanghai Jiao Tong Univ, Sch Math Sci, Shanghai, Peoples R China.
   [Wu, Zhiquan] State Power Investment Corp Res Inst Co Ltd, Beijing 102200, Peoples R China.
C3 Shanghai Jiao Tong University; Shanghai Jiao Tong University
RP Wu, ZQ (corresponding author), State Power Investment Corp Res Inst Co Ltd, Beijing 102200, Peoples R China.
EM wuzhiquan@139.com
RI Wu, Zhiquan/ABD-2420-2020
FU State Power Investment Corporation Research Institute, Co. Ltd; China
   Datang Corporation Ltd.
FX This work was supported in part by the State Power Investment
   Corporation Research Institute, Co. Ltd and China Datang Corporation
   Ltd.
CR An XL, 2012, J VIB CONTROL, V18, P240, DOI 10.1177/1077546311403185
   Appana DK, 2018, SOFT COMPUT, V22, P6719, DOI 10.1007/s00500-018-3256-0
   Ben Ali J, 2015, APPL ACOUST, V89, P16, DOI 10.1016/j.apacoust.2014.08.016
   Bodla MK, 2016, C IND ELECT APPL, P1628, DOI 10.1109/ICIEA.2016.7603846
   Chen CZ, 2013, J RENEW SUSTAIN ENER, V5, DOI 10.1063/1.4773826
   Chu S, 2012, NATURE, V488, P294, DOI 10.1038/nature11475
   FUKUSHIMA K, 1980, BIOL CYBERN, V36, P193, DOI 10.1007/BF00344251
   Ganin Y, 2016, J MACH LEARN RES, V17
   Ghifary M, 2014, LECT NOTES ARTIF INT, V8862, P898, DOI 10.1007/978-3-319-13560-1_76
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Jiang SB, 2019, IEEE ACCESS, V7, P157796, DOI 10.1109/ACCESS.2019.2950240
   Jing LY, 2017, MEASUREMENT, V111, P1, DOI 10.1016/j.measurement.2017.07.017
   Johansson V, 2017, ENERGY, V126, P352, DOI 10.1016/j.energy.2017.03.038
   Johnson Rie, 2015, Adv Neural Inf Process Syst, V28, P919
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Li H, 2020, P I MECH ENG C-J MEC, V234, P343, DOI 10.1177/0954406219875756
   Liu ZH, 2019, IEEE SENS J, V19, P12261, DOI 10.1109/JSEN.2019.2939360
   Lu WN, 2017, IEEE T IND ELECTRON, V64, P2296, DOI 10.1109/TIE.2016.2627020
   Patel VM, 2015, IEEE SIGNAL PROC MAG, V32, P53, DOI 10.1109/MSP.2014.2347059
   Purarjomandlangrudi A, 2014, IEEE IND ELEC, P1984, DOI 10.1109/IECON.2014.7048774
   Qiang Y., 2017, ARXIV170805629V1
   Saari J, 2019, MEASUREMENT, V137, P287, DOI 10.1016/j.measurement.2019.01.020
   Shi HT, 2019, IEEE ACCESS, V7, P171559, DOI 10.1109/ACCESS.2019.2954091
   Su B., 2012, AMPLITUDE ENVELOPE A
   Sun SN, 2017, NEUROCOMPUTING, V257, P79, DOI 10.1016/j.neucom.2016.11.063
   Sun XB, 2019, IEEE ACCESS, V7, P148764, DOI 10.1109/ACCESS.2019.2944974
   Wang, 2019, DISTRIB ENERGY, V4, P8
   Wang CY, 2020, J DISPER SCI TECHNOL, V41, P383, DOI 10.1080/01932691.2019.1579654
   Wang JJ, 2020, RENEW ENERG, V145, P642, DOI 10.1016/j.renene.2019.06.103
   Wang M, 2018, NEUROCOMPUTING, V312, P135, DOI 10.1016/j.neucom.2018.05.083
   Wang ZW, 2017, IEEE SENS J, V17, P5581, DOI 10.1109/JSEN.2017.2726011
   Wen L, 2019, IEEE T SYST MAN CY-S, V49, P136, DOI 10.1109/TSMC.2017.2754287
   Xia SQ, 2019, IEEE ACCESS, V7, P178177, DOI 10.1109/ACCESS.2019.2958141
   Xiaoming R., 2019, IOP C SER MAT SCI EN, V677
   Yang B, 2019, MECH SYST SIGNAL PR, V122, P692, DOI 10.1016/j.ymssp.2018.12.051
   Zhang L, 2016, IEEE T IND ELECTRON, V63, P6347, DOI 10.1109/TIE.2016.2580519
   Zhang W, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17020425
NR 37
TC 4
Z9 4
U1 4
U2 34
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2128
EP 2142
DI 10.1002/spe.2937
EA MAR 2021
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000625822000001
DA 2024-07-18
ER

PT J
AU Jarrah, M
   Al-khatieb, B
   Mahasneh, N
   Al-khateeb, B
   Jararweh, Y
AF Jarrah, Moath
   Al-khatieb, Bahaa
   Mahasneh, Naseem
   Al-khateeb, Baghdad
   Jararweh, Yaser
TI GDBApex: A graph-based system to enable efficient transformation of
   enterprise infrastructures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE graph-based modeling; Hazelcast; Hibernate; load balancing; OrientDB;
   scalability; semantic relations; software design and development
ID ALGORITHM; ISOMORPHISM
AB Graph-based database engines have been developed by different researchers and companies. Many optimization methods have been integrated within these engines to enable fast and efficient data processing. However, many small- and medium-size organizations have not changed their database infrastructures and still rely on a relational management modeling approach. This limits their service performance, especially in today's large-scale data processing requirements. Transformation to the use of graph-based modeling and design is not a straightforward process. In order to make a successful transformation, correct process semantics as well as the design of vertices, edges, labels, and process relations are required. The goal of this article is to help small- and medium-size organizations make this transformation successful in order to satisfy customers' expectations and meet the requirements of data-intensive applications. The proposed graph-based modeling approach uses a graph structure for semantic queries and applies software engineering design principles. Moreover, it provides a case study with many data transactions. The system outperformed relational database management systems by an order of magnitude. Scalability of the system is examined and compared with the regular relational-based modeling. In addition, a load balancing solution is used to achieve high scalability.
C1 [Jarrah, Moath; Al-khatieb, Bahaa; Mahasneh, Naseem; Al-khateeb, Baghdad] Jordan Univ Sci & Technol, Dept Comp Engn, Irbid 22110, Jordan.
   [Jararweh, Yaser] Jordan Univ Sci & Technol, Dept Comp Sci, Irbid, Jordan.
C3 Jordan University of Science & Technology; Jordan University of Science
   & Technology
RP Jarrah, M (corresponding author), Jordan Univ Sci & Technol, Dept Comp Engn, Irbid 22110, Jordan.
EM mjarrah@just.edu.jo
RI Jararweh, Yaser/ABE-6543-2021; Jararweh, Yaser/JCO-2836-2023
OI Jarrah, Moath/0000-0002-5619-1032
FU Jordan University of Science and Technology [20160197/71-2016]
FX Jordan University of Science and Technology, Grant/Award Number:
   20160197/71-2016
CR Al-khafajiy M, 2019, FUTURE GENER COMP SY, V100, P266, DOI 10.1016/j.future.2019.05.015
   Aldwairi M, 2019, COMPUT COMMUN, V145, P126, DOI 10.1016/j.comcom.2019.06.011
   Angles R., 2012, Proceedings of the 2012 IEEE International Conference on Data Engineering Workshops (ICDEW 2012), P171, DOI 10.1109/ICDEW.2012.31
   [Anonymous], 2014, OPEN J DATABASES
   Baker T, 2015, AD HOC NETW, V35, P83, DOI 10.1016/j.adhoc.2015.06.008
   Beis S, 2015, BENCHMARKING GRAPH D, P3
   Berry J.W., 2007, IPDPS, P1
   Cordella LP, 2004, IEEE T PATTERN ANAL, V26, P1367, DOI 10.1109/TPAMI.2004.75
   Desai R, 2014, INT J ELECT ELECT CO, V2, P2347
   Dighriri M, 2018, BIG DATA ENV SMART H, P1
   Fahim M, 2017, KNOWLEDGE BASED DECI, P187
   Fernandes D, 2018, GRAPH DATABASES COMP, P373
   Hassan Mohamed S., 2018, EDBT
   Hernandez BM, 2017, SECURITY GRAPH DATAB, P303
   Kamphuis Chris, 2020, Advances in Information Retrieval. 42nd European Conference on IR Research, ECIR 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12036), P608, DOI 10.1007/978-3-030-45442-5_79
   Kaur S., 2016, INT J COMPUTER APPL, V145, P11
   Kim J, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P637, DOI 10.1145/2588555.2588563
   Kim MS, 2016, PROC INT CONF DATA, P1504, DOI 10.1109/ICDE.2016.7498396
   Kumar P, 2020, ACM T STORAGE, V15, DOI 10.1145/3364180
   Kunda D., 2017, Zamb. ICT J, V1, P1, DOI DOI 10.33260/ZICTJOURNAL.V1I1.8
   Kundu P., 2017, INT J ADV RES COMPUT, V7, P359, DOI [10.23956/ijarcsse/v7i3/0154, DOI 10.23956/IJARCSSE/V7I3/0154]
   Lee J, 2012, PROC VLDB ENDOW, V6, P133, DOI 10.14778/2535568.2448946
   Maciej B, 2020, ARXIV191009017V4 COR
   Messina A, 2016, IEEE 30TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA 2016), P220, DOI 10.1109/WAINA.2016.71
   Mongiovi Misael, 2010, Journal of Bioinformatics and Computational Biology, V8, P199, DOI 10.1142/S021972001000477X
   Mpinda S.A.T, 2015, INT J ARTIFICIAL INT, V6, P87, DOI [10.5121/ijaia.2015.6506, DOI 10.5121/IJAIA.2015.6506]
   Ottinger JB, 2016, INTEGRATING CONFIGUR
   Plantenga T, 2013, J PARALLEL DISTR COM, V73, P164, DOI 10.1016/j.jpdc.2012.10.005
   Salhi H, 2017, OPEN SOURCE IN MEMOR, P163
   Sharma Sugam, 2015, EXTENDED CLASSIFICAT
   ULLMANN JR, 1976, J ACM, V23, P31, DOI 10.1145/321921.321925
   Wu YH, 2013, PROC INT CONF DATA, P697, DOI 10.1109/ICDE.2013.6544867
   Yan J, 2006, IEEE T SYST MAN CY A, V36, P922, DOI 10.1109/TSMCA.2005.855789
   Santana LHZ, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P386, DOI 10.1145/3341105.3375753
NR 34
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2021
VL 51
IS 3
SI SI
BP 517
EP 531
DI 10.1002/spe.2871
EA JUL 2020
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QH1RQ
UT WOS:000544518000001
DA 2024-07-18
ER

PT J
AU De Cremer, P
   Desmet, N
   Madou, M
   De Sutter, B
AF De Cremer, Pieter
   Desmet, Nathan
   Madou, Matias
   De Sutter, Bjorn
TI Sensei: Enforcing secure coding guidelines in the integrated development
   environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE coding guidelines; IDE support; security by design; software development
ID STATIC ANALYSIS
AB We discuss the potential benefits, requirements, and implementation challenges of a security-by-design approach in which an integrated development environment plugin assists software developers to write code that complies with secure coding guidelines. We discuss how such a plugin can enable a company's policy-setting security experts and developers to pass their knowledge on to each other more efficiently, and to let developers more effectively put that knowledge into practice. This is achieved by letting the team members develop customized rule sets that formalize coding guidelines and by letting the plugin check the compliance of code being written to those rule sets in real time, similar to an as-you-type spell checker. Upon detected violations, the plugin suggests options to quickly fix them and offers additional information for the developer. We share our experience with proof-of-concept designs and implementations rolled out in multiple companies, and present some future research and development directions.
C1 [De Cremer, Pieter; Desmet, Nathan; Madou, Matias; De Sutter, Bjorn] Secure CodeWarrior, Baron Ruzettelaan 5-3, B-8310 Assebroek, Belgium.
   [De Cremer, Pieter; Desmet, Nathan; Madou, Matias; De Sutter, Bjorn] Univ Ghent, Comp Syst Lab, Ghent, Belgium.
C3 Ghent University
RP De Cremer, P (corresponding author), Secure CodeWarrior, Baron Ruzettelaan 5-3, B-8310 Assebroek, Belgium.
EM pdecremer@securecodewarrior.com
OI De Cremer, Pieter/0000-0001-6246-7683; De Sutter,
   Bjorn/0000-0003-0317-2089
FU Agentschap Innoveren en Ondernemen [HBC.2017.0215]
FX Agentschap Innoveren en Ondernemen, Grant/Award Number: HBC.2017.0215
CR [Anonymous], 2005, USENIX SEC S
   Association JSS, 2016, ANDR APPL SEC DES SE
   Ayewah N., 2007, 22 ACM SIGPLAN C OBJ, P805
   Ayewah N., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P241
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Baca D, 2008, PLAS'08: PROCEEDINGS OF THE ACM SIGPLAN THIRD WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY, P79, DOI 10.1145/1375696.1375707
   Banerjee C, 2009, ARXIV09110494
   Baset AZ, 2017, IEEE SEC PRIV WORKS, P143, DOI 10.1109/SPW.2017.37
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   Brown F, 2016, ACM SIGPLAN NOTICES, V51, P143, DOI 10.1145/2954679.2872364
   Checkmarx, STAT APPL SEC TEST S
   Checkmarx, CXAUDIT OV
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   Cruzes DS, 2017, LECT NOTES BUS INF P, V283, P201, DOI 10.1007/978-3-319-57633-6_13
   Damm L.-O., 2006, Software Process Improvement and Practice, V11, P47, DOI 10.1002/spip.253
   FindSecBugs, FIND SEC BUGS SPOTBU
   Futcher L., 2008, Proceedings of the 2008 Annual Research Conference of the South African Institute of computer Scientists and Information Technologists, V338, P56, DOI DOI 10.1145/1456659.1456667
   Google, GITH SHIPSH
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jovanovic N, 2006, P IEEE S SECUR PRIV, P258, DOI 10.1109/SP.2006.29
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Layman Lucas, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P176
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Lipford HR, 2010, P 14 C INF SYST SEC, P212
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   McGraw Gary, 2018, BUILDING SECURITY MA
   Micro Focus, FORT SCA CUST RUL RE
   Micro Focus, FORT STAT COD AN STA
   Micro Focus, SEC SDLC IDES
   Micro Focus, FORT DEM APPL SEC SE
   OWASP, ENT SEC API TOOLK DA
   OWASP, ASIDE PROJ
   Paletov R, 2018, ACM SIGPLAN NOTICES, V53, P450, DOI [10.1145/3192366.3192403, 10.1145/3296979.3192403]
   Poller Andreas, 2016, CHI C EXT ABSTR HUM, P1288, DOI 10.1145/2851581.2892392
   Romeo C., TRANSFORM DEV SECURI
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Scandariato R, 2013, PROC INT SYMP SOFTW, P451, DOI 10.1109/ISSRE.2013.6698898
   Schumacher M., 2013, Security Patterns: Integrating Security and Systems Engineering
   Sharma A., 2017, ADV COMPUTATIONAL SC, V10, P203
   Snyk, OP SOURC SEC PLATF
   SpotBugs, BUG DESCR
   SpotBugs, SPOTBUGS FIND BUGS J
   SpotBugs, SPOTBUGS API DOC
   Syed M., 2015, Black Box Thinking: Why Most People Never Learn from Their Mistakes-But Some Do
   synopsys, SAST IDE SECUREASSIS
   synopsys, US SECUREASSIST INTE
   synopsys, SECUREASSIST CUST RU
   synopsys, SECUREASSIST OV
   Tabassum M, 2017, P S US PRIV SEC SOUP
   Trustwave, GLOB SEC REP
   UNC Charlotte College of Computing and Informatics, ED SEC IDE ESIDE
   University of Maryland, FINDBUGS FIND BUGS J
   US Department of Homeland Security, INF SOFTW ASS
   Veracode, VER STAT AN DONT JUS
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Whitney M, 2018, J EDUC COMPUT RES, V56, P415, DOI 10.1177/0735633117708816
   Witteman M, 2008, P RSA C, V2008
   Wohlin C., 2012, Experimentation in Software Engineering
   Xie J., 2012, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, New York, NY, USA, P2707
   Xie J, 2011, 27TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2011), P267
   Xie J, 2011, S VIS LANG HUM CEN C, P161, DOI 10.1109/VLHCC.2011.6070393
   Xie J, 2011, LECT NOTES COMPUT SC, V6542, P248, DOI 10.1007/978-3-642-19125-1_19
NR 64
TC 4
Z9 5
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2020
VL 50
IS 9
BP 1682
EP 1718
DI 10.1002/spe.2844
EA JUN 2020
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MT2QQ
UT WOS:000538540800001
OA Green Published
DA 2024-07-18
ER

PT J
AU Varshney, P
   Simmhan, Y
AF Varshney, Prateeksha
   Simmhan, Yogesh
TI Characterizing application scheduling on edge, fog, and cloud computing
   resources
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE application models; cloud computing; edge computing; fog computing;
   quality of service; scheduling algorithms
ID SCIENTIFIC WORKFLOWS; INDEPENDENT TASKS; COST; ALGORITHMS; MANAGEMENT;
   INTERNET; OPTIMIZATION; PERFORMANCE; SIMULATION; ANALYTICS
AB Cloud computing has grown to become a popular distributed computing service offered by commercial providers. More recently, edge and fog computing resources have emerged on the wide-area network as part of Internet of things (IoT) deployments. These three resource abstraction layers are complementary, and offer distinctive benefits. Scheduling applications on clouds has been an active area of research, with workflow and data flow models offering a flexible abstraction to specify applications for execution. However, the application programming and scheduling models for edge and fog are still maturing, and can benefit from learnings on cloud resources. At the same time, there is also value in using these resources cohesively for application execution. In this article, we offer a taxonomy of concepts essential for specifying and solving the problem of scheduling applications on edge, fog, and cloud computing resources. We first characterize the resource capabilities and limitations of these infrastructure and offer a taxonomy of application models, quality-of-service constraints and goals, and scheduling techniques, based on a literature review. We also tabulate key research prototypes and papers using this taxonomy. This survey benefits developers and researchers on these distributed resources in designing and categorizing their applications, selecting the relevant computing abstraction(s), and developing or selecting the appropriate scheduling algorithm. It also highlights gaps in literature where open problems remain.
C1 [Varshney, Prateeksha; Simmhan, Yogesh] Indian Inst Sci, Dept Computat & Data Sci, Bangalore 560012, Karnataka, India.
C3 Indian Institute of Science (IISC) - Bangalore
RP Simmhan, Y (corresponding author), Indian Inst Sci, Dept Computat & Data Sci, Bangalore 560012, Karnataka, India.
EM simmhan@iisc.ac.in
RI Sharma, Dr Yogesh Kumar/HKV-8683-2023
OI Sharma, Dr Yogesh Kumar/0000-0002-3779-4380; Simmhan,
   Yogesh/0000-0003-4140-7774
CR Aazam M, 2016, 2016 23RD INTERNATIONAL CONFERENCE ON TELECOMMUNICATIONS (ICT), DOI 10.1109/ICT.2016.7500362
   Aazam M, 2014, MATH PROBL ENG, V2014, DOI 10.1155/2014/108286
   Abbas N, 2018, IEEE INTERNET THINGS, V5, P450, DOI 10.1109/JIOT.2017.2750180
   Abrishami S, 2013, FUTURE GENER COMP SY, V29, P158, DOI 10.1016/j.future.2012.05.004
   Agmon Ben-Yehuda O., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P304, DOI 10.1109/CloudCom.2011.48
   Aman S, 2015, INT CONF SMART GRID, P338, DOI 10.1109/SmartGridComm.2015.7436323
   Aman S, 2015, IEEE T KNOWL DATA EN, V27, P475, DOI 10.1109/TKDE.2014.2327022
   Ananthanarayanan G, 2017, COMPUTER, V50, P58, DOI 10.1109/MC.2017.3641638
   Anderson DP, 2004, FIFTH IEEE/ACM INTERNATIONAL WORKSHOP ON GRID COMPUTING, PROCEEDINGS, P4, DOI 10.1109/GRID.2004.14
   [Anonymous], 2018 6 IEEE INT C MO
   [Anonymous], EDG FOUND
   [Anonymous], 2006, TECHNICAL REPORT
   [Anonymous], 208 IEEE 4 INT C ESC
   [Anonymous], 2017, P INT C SERV OR COMP
   [Anonymous], 2010, P HOTCL
   [Anonymous], USENIX 2018 USENIX C
   [Anonymous], ACM 2 INT C SERV OR
   [Anonymous], 2015 IEEE WORLD C SE
   [Anonymous], 6 C COMP SYST EUROSY
   [Anonymous], 2015 10 INT C P2P PA
   [Anonymous], 2013 13 IEEE ACM INT
   [Anonymous], ACM INT C DISTR EV B
   [Anonymous], 2014 IEEE INT PAR DI
   [Anonymous], INT C JOB SCHED STRA
   [Anonymous], ACM SIGOPS OPER SYST
   [Anonymous], 2012 IEEE 26 INT C A
   [Anonymous], P 13 ACM INT S MOB A
   [Anonymous], 2008 10 IEEE INT C H
   [Anonymous], 14 IEEE INT PAR DIST
   [Anonymous], 2017 IEEE 37 INT C D
   [Anonymous], 2015, FOG COMPUTING FOCUSI
   [Anonymous], 2017 IEEE 24 INT C H
   [Anonymous], 2014 14 IEEE ACM INT
   [Anonymous], 2007, Workflows for E-Science: Scientific Workflows for Grids
   [Anonymous], 2016 IEEE INT C
   [Anonymous], 2010 IEEE INT C CLOU
   [Anonymous], P 2008 ACM IEEE C SU
   [Anonymous], 1 ACM S CLOUD COMP S
   [Anonymous], IEEE IOT NEWSLETTER
   [Anonymous], 2014 IEEE INT C CLOU
   [Anonymous], FOG EDGE MASS DISTR
   [Anonymous], 2 INT C INT THINGS D
   [Anonymous], 2009 9 IEEE ACM INT
   [Anonymous], 2014, 2014 FED C COMP SCI
   [Anonymous], 2009 5 IEEE INT C E
   [Anonymous], IEEE ACM 11 INT C HI
   [Anonymous], 2016 18 AS NETW OP
   [Anonymous], 2017, IEEE INTERNET THINGS
   [Anonymous], 2009, TECHNICAL REPORT
   [Anonymous], 2011 IEEE 4 INT C CL
   [Anonymous], 2014 IEEE C COMP COM
   [Anonymous], 2008, 2008 GRID COMP ENV W
   [Anonymous], 2011 11 IEEE ACM INT
   [Anonymous], 2017 IEEE INT C CLOU
   [Anonymous], 2008 IEEE WORKSH MAN
   [Anonymous], 2012 IEEE 5 INT C UT
   [Anonymous], 2010 IEEE 2 INT C CL
   [Anonymous], 2018 18 IEEE ACM INT
   [Anonymous], OPENFOG REF ARCH
   [Anonymous], INT C GRID COOP COMP
   [Anonymous], EDGEXFOUNDRY OP PLAT
   [Anonymous], 6 ACM S CLOUD COMP S
   [Anonymous], 2003, JOB SCHED STRAT PAR
   [Anonymous], 2015 WORKSH MOB BIG
   [Anonymous], 2010 IEEE 2 INT C CL
   [Anonymous], 2014 14 IEEE ACM INT
   [Anonymous], 3 ACM S CLOUD COMP S
   [Anonymous], 2018 14 S NEUR NETW
   Badiger S, 2018, LECT NOTES COMPUT SC, V11014, P309, DOI 10.1007/978-3-319-96983-1_22
   Barbera MV, 2013, IEEE INFOCOM SER, P1285
   Bellavista P, 2017, 18TH INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING AND NETWORKING (ICDCN 2017), DOI 10.1145/3007748.3007777
   Bittencourt LF, 2017, IEEE CLOUD COMPUT, V4, P26, DOI 10.1109/MCC.2017.27
   Blum C, 2003, ACM COMPUT SURV, V35, P268, DOI 10.1145/937503.937505
   Bonomi F., 2012, P 1 ACM MCC WORKSH M, P13
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Brogi A, 2017, IEEE INTERNET THINGS, V4, P1185, DOI 10.1109/JIOT.2017.2701408
   Burns B, 2016, COMMUN ACM, V59, P50, DOI 10.1145/2890784
   Buyya R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241737
   Calheiros RN, 2014, IEEE T PARALL DISTR, V25, P1787, DOI 10.1109/TPDS.2013.238
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Callaghan S, 2011, INT J HIGH PERFORM C, V25, P274, DOI 10.1177/1094342011414743
   Chen W, 2015, J SUPERCOMPUT, V71, P1297, DOI 10.1007/s11227-014-1361-0
   Chiang M, 2016, IEEE INTERNET THINGS, V3, P854, DOI 10.1109/JIOT.2016.2584538
   Chohan N., 2010, USENIX HOTCLOUD
   Chu HY, 2014, INT PARALL DISTRIB P, DOI 10.1109/IPDPS.2014.43
   Convolbo MW, 2016, J SUPERCOMPUT, V72, P985, DOI 10.1007/s11227-016-1637-7
   Coutinho EF, 2015, ANN TELECOMMUN, V70, P289, DOI 10.1007/s12243-014-0450-7
   Dastjerdi AV, 2016, COMPUTER, V49, P112, DOI 10.1109/MC.2016.245
   Dastjerdi Amir Vahid, 2016, Internet of Things, P61, DOI [10.1016/B978 -0-12-805395-9.00004-6. arXiv: 1601.02752, DOI 10.1016/B978-0-12-805395-9.00004-6.ARXIV:1601.02752]
   Deng RL, 2016, IEEE INTERNET THINGS, V3, P1171, DOI 10.1109/JIOT.2016.2565516
   Deng SG, 2015, IEEE T PARALL DISTR, V26, P3317, DOI 10.1109/TPDS.2014.2381640
   Diaz-Montes J, 2018, IEEE T CLOUD COMPUT, V6, P250, DOI 10.1109/TCC.2015.2481410
   Dinh HT, 2013, WIREL COMMUN MOB COM, V13, P1587, DOI 10.1002/wcm.1203
   Fard HM, 2013, IEEE T PARALL DISTR, V24, P1203, DOI 10.1109/TPDS.2012.257
   Bittencourt LF, 2011, J INTERNET SERV APPL, V2, P207, DOI 10.1007/s13174-011-0032-0
   Fernando N, 2013, FUTURE GENER COMP SY, V29, P84, DOI 10.1016/j.future.2012.05.023
   Lopez PG, 2015, ACM SIGCOMM COMP COM, V45, P37, DOI 10.1145/2831347.2831354
   Garg S. K., 2009, P 32 AUSTR C COMP SC, V91, P151
   Ghosh R, 2018, ACM TRANS CYBER-PHYS, V2, DOI 10.1145/3140256
   Grozev N, 2014, SOFTWARE PRACT EXPER, V44, P369, DOI 10.1002/spe.2168
   Guo T, 2014, ACM T INTERNET TECHN, V13, DOI 10.1145/2602571
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Gutierrez-Garcia JO, 2013, FUTURE GENER COMP SY, V29, P1682, DOI 10.1016/j.future.2012.01.005
   Hong W, 2013, CONFERENCE PROCEEDINGS OF 2013 ASIA-PACIFIC CONFERENCE ON SYNTHETIC APERTURE RADAR (APSAR), P2
   Hu PF, 2017, J NETW COMPUT APPL, V98, P27, DOI 10.1016/j.jnca.2017.09.002
   IBARRA OH, 1977, J ACM, V24, P280, DOI 10.1145/322003.322011
   Jackson KR, 2011, SCI PROGRAMMING-NETH, V19, P107, DOI [10.3233/SPR-2011-0324, 10.1155/2011/498542]
   Jin J., 2012, 2012 INT S COMM INF, P956
   Jung D, 2014, J APPL MATH, DOI 10.1155/2014/217547
   Jung ES, 2011, IEEE SYMP COMP COMMU
   Kim H, 2011, SCI PROGRAMMING-NETH, V19, P75, DOI [10.3233/SPR-2011-0319, 10.1155/2011/940242]
   Liu K, 2010, INT J HIGH PERFORM C, V24, P445, DOI 10.1177/1094342010369114
   Lo V, 2004, LECT NOTES COMPUT SC, V3279, P227
   Loke S. W., 2015, INTERNET FLYING THIN
   Lu Huang, 2013, Journal of Software, V8, P480, DOI 10.4304/jsw.8.2.480-487
   Mach P, 2017, IEEE COMMUN SURV TUT, V19, P1628, DOI 10.1109/COMST.2017.2682318
   Madsen H, 2013, INT CONF SYST SIGNAL, P43
   Maheswaran M, 1999, PROC HETER COMP WORK, P30, DOI 10.1109/HCW.1999.765094
   Malawski M, 2015, SCI PROGRAMMING-NETH, V2015, DOI 10.1155/2015/680271
   Malawski M, 2012, INT CONF HIGH PERFOR, DOI 10.1109/SC.2012.38
   Mann ZA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2797211
   Masip-Bruin X, 2016, IEEE WIREL COMMUN, V23, P120, DOI 10.1109/MWC.2016.7721750
   Massoud Amin S., 2005, IEEE Power & Energy Magazine, V3, P34, DOI 10.1109/MPAE.2005.1507024
   Mell P, 2010, COMMUN ACM, V53, P50
   Mickulicz N., 2013, INT C AUT COMP ICAC
   Moslehi K, 2010, IEEE T SMART GRID, V1, P57, DOI 10.1109/TSG.2010.2046346
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Pietri I, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2983575
   Pinedo ML, 2012, SCHEDULING: THEORY, ALGORITHMS, AND SYSTEMS, FOURTH EDITION, P1, DOI 10.1007/978-1-4614-2361-4
   Poola D, 2016, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2815624
   Poola D, 2014, PROCEDIA COMPUT SCI, V29, P523, DOI 10.1016/j.procs.2014.05.047
   Rodriguez MA, 2014, IEEE T CLOUD COMPUT, V2, P222, DOI 10.1109/TCC.2014.2314655
   Sakellariou Rizos., 2007, INTEGRATED RES GRID, P189, DOI DOI 10.1007/978-0-387-47658-2_14
   Sanaei Z, 2014, IEEE COMMUN SURV TUT, V16, P369, DOI 10.1109/SURV.2013.050113.00090
   Sathiaseelan A, 2016, DRONET'16: PROCEEDINGS OF THE 2ND WORKSHOP ON MICRO AERIAL VEHICLE NETWORKS, SYSTEMS, AND APPLICATIONS FOR CIVILIAN USE, P41, DOI 10.1145/2935620.2935625
   Satyanarayanan M, 2015, IEEE PERVAS COMPUT, V14, P24, DOI 10.1109/MPRV.2015.32
   Satyanarayanan M, 2009, IEEE PERVAS COMPUT, V8, P14, DOI 10.1109/MPRV.2009.82
   Schad J, 2010, PROC VLDB ENDOW, V3, P460, DOI 10.14778/1920841.1920902
   Shafique M, 2018, DES AUT TEST EUROPE, P827, DOI 10.23919/DATE.2018.8342120
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Shukla A, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4257
   Simmhan Y., 2018, ENCY BIG DATA TECHNO, P1, DOI DOI 10.1007/978-3-319-63962-841-1
   Simmhan Y, 2013, IEEE AIP COMPUT SCI
   Skarlat O, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P89, DOI 10.1109/ICFEC.2017.12
   Skarlat O, 2016, IEEE INT CONF SERV, P32, DOI 10.1109/SOCA.2016.10
   Soo S, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON INTERNET OF THINGS (ITHINGS) AND IEEE GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) AND IEEE CYBER, PHYSICAL AND SOCIAL COMPUTING (CPSCOM) AND IEEE SMART DATA (SMARTDATA), P561, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData.2016.126
   Stojmenovic I, 2014, 2014 AUSTRALASIAN TELECOMMUNICATION NETWORKS AND APPLICATIONS CONFERENCE (ATNAC), P117, DOI 10.1109/ATNAC.2014.7020884
   Taleb T, 2017, IEEE COMMUN SURV TUT, V19, P1657, DOI 10.1109/COMST.2017.2705720
   Topcuoglu H, 2002, IEEE T PARALL DISTR, V13, P260, DOI 10.1109/71.993206
   Truong NB, 2015, PROCEEDINGS OF THE 2015 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM), P1202, DOI 10.1109/INM.2015.7140467
   Tsai CW, 2014, IEEE SYST J, V8, P279, DOI 10.1109/JSYST.2013.2256731
   Tsai PH, 2017, ASIA-PAC NETW OPER M, P145, DOI 10.1109/APNOMS.2017.8094194
   Urgaonkar R, 2015, PERFORM EVALUATION, V91, P205, DOI 10.1016/j.peva.2015.06.013
   Vaquero LM, 2014, ACM SIGCOMM COMP COM, V44, P27, DOI 10.1145/2677046.2677052
   Varshney P, 2019, IEEE T PARALL DISTR, V30, P1512, DOI 10.1109/TPDS.2018.2889851
   Voorsluys W, 2012, INT CON ADV INFO NET, P542, DOI 10.1109/AINA.2012.106
   Wang JJ, 2017, PROCEEDINGS OF THE 8TH ACM MULTIMEDIA SYSTEMS CONFERENCE (MMSYS'17), P38, DOI 10.1145/3083187.3083192
   Wang SP, 2006, INT J COMPUT SCI NET, V6, P13
   Wimalajeewa T, 2017, 2017 IEEE 7TH INTERNATIONAL WORKSHOP ON COMPUTATIONAL ADVANCES IN MULTI-SENSOR ADAPTIVE PROCESSING (CAMSAP)
   Wu FH, 2015, J SUPERCOMPUT, V71, P3373, DOI 10.1007/s11227-015-1438-4
   Wu ZJ, 2013, J SUPERCOMPUT, V63, P256, DOI 10.1007/s11227-011-0578-4
   Xhafa F, 2010, FUTURE GENER COMP SY, V26, P608, DOI 10.1016/j.future.2009.11.005
   Xu M, 2009, 2009 IEEE INTERNATIONAL SYMPOSIUM ON PARALLEL AND DISTRIBUTED PROCESSING WITH APPLICATIONS, PROCEEDINGS, P629, DOI 10.1109/ISPA.2009.95
   Yamada T., 1997, Genetic Algorithms in Engineering Systems, P134, DOI 10.1049/PBCE055E_ch7
   Yannuzzi M, 2014, IEEE INT WORKSH COMP, P325, DOI 10.1109/CAMAD.2014.7033259
   Yannuzzi M, 2017, IEEE INTERNET COMPUT, V21, P54, DOI 10.1109/MIC.2017.25
   Yi SH, 2015, 2015 THIRD IEEE WORKSHOP ON HOT TOPICS IN WEB SYSTEMS AND TECHNOLOGIES (HOTWEB), P73, DOI 10.1109/HotWeb.2015.22
   Yu J, 2005, SIGMOD REC, V34, P44, DOI 10.1145/1084805.1084814
   Yu J, 2008, STUD COMPUT INTELL, V146, P173
   Yu W, 2018, IEEE ACCESS, V6, P6900, DOI 10.1109/ACCESS.2017.2778504
   Zhan ZH, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2788397
   Zhang HY, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P390, DOI 10.1145/3127479.3127490
   Zheng W, 2013, J GRID COMPUT, V11, P633, DOI 10.1007/s10723-013-9257-4
   Zhou AC, 2014, IEEE T CLOUD COMPUT, V2, P85, DOI 10.1109/TCC.2013.2297928
NR 174
TC 40
Z9 40
U1 1
U2 29
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 558
EP 595
DI 10.1002/spe.2699
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000526578200007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Maciel, BIF
   Santos, SGTC
   Barros, RSM
AF Maciel, Bruno I. F.
   Santos, Silas G. T. C.
   Barros, Roberto S. M.
TI MOAManager: A tool to support data stream experiments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE concept drift; online learning; performance analysis; PHP; statistical
   analysis; tool
ID STATISTICAL COMPARISONS; DRIFT; CLASSIFIERS
AB This short communication describes Massive Online Analysis Manager Hypertext Preprocessor framework (MOAManager), an open-source web tool that assists in the creation, execution, extraction, and formatting of experiments in online environments using the MOA framework. MOAManager also brings together a set of features for data analysis, including the calculation of metrics and statistical tests for performance evaluation. The purpose of the tool is to provide a structure that automates several repetitive experimental steps, helping the users to customize, run, and analyze the experiments quickly and reliably, enabling gains in productivity.
C1 [Maciel, Bruno I. F.; Santos, Silas G. T. C.; Barros, Roberto S. M.] Univ Fed Pernambuco, Ctr Informat, Cidade Univ, BR-50740560 Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP Barros, RSM (corresponding author), Univ Fed Pernambuco, Ctr Informat, Cidade Univ, BR-50740560 Recife, PE, Brazil.
EM roberto@cin.ufpe.br
RI Santos, Silas/AHB-4946-2022; Maciel, Bruno/AAD-5658-2020; Maciel,
   Bruno/HKP-1489-2023
OI Maciel, Bruno/0000-0001-6126-6759; Barros, Roberto Souto Maior
   de/0000-0002-3127-822X; Santos, Silas Garrido T. C./0000-0002-9758-7543
CR Barros RSM, 2017, EXPERT SYST APPL, V90, P344, DOI 10.1016/j.eswa.2017.08.023
   Bifet A, 2013, LECT NOTES COMPUT SC, V8207, P92, DOI 10.1007/978-3-642-41398-8_9
   Bifet A, 2010, J MACH LEARN RES, V11, P1601
   Cabral DRD, 2018, INFORM SCIENCES, V442, P220, DOI 10.1016/j.ins.2018.02.054
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Gama J, 2010, CH CRC DATA MIN KNOW, P1
   Gamma Erich., 1994, DESIGN PATTERNS
   García S, 2008, J MACH LEARN RES, V9, P2677
   Gonçalves PM Jr, 2014, EXPERT SYST APPL, V41, P8144, DOI 10.1016/j.eswa.2014.07.019
   Hamed T., 2017, Computer and Information Security Handbook, VThird, P109, DOI DOI 10.1016/B978-0-12-803843-7.00006-5
   Hidalgo JIG, 2019, P 28 INT C ART NEUR
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Larson R., 2014, Elementary statistics: Picturing the world, V6th
   Barros RSM, 2018, INFORM SCIENCES, V451, P348, DOI 10.1016/j.ins.2018.04.014
   de Barros RSM, 2019, INFORM FUSION, V52, P213, DOI 10.1016/j.inffus.2019.03.006
   de Barros RSM, 2018, NEUROCOMPUTING, V275, P1954, DOI 10.1016/j.neucom.2017.10.051
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Metcalf L, 2016, CYBERSECURITY AND APPLIED MATHEMATICS, P3, DOI 10.1016/B978-0-12-804452-0.00002-6
   Montgomery D.C., 2010, Applied Statistics and Probability for Engineers (Edicao: 6)
   Perry J.W., 1955, American Documentation, V6, P242, DOI DOI 10.1002/ASI.5090060411
   Santos SGTD, 2020, ARTIF INTELL REV, V53, P1293, DOI 10.1007/s10462-019-09696-6
   The University of Waikato, 2019, ADV DAT MIN MACH LEA
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
NR 24
TC 8
Z9 8
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2020
VL 50
IS 4
BP 325
EP 334
DI 10.1002/spe.2795
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS7QQ
UT WOS:000518501600001
DA 2024-07-18
ER

PT J
AU Balaji, N
   Lakshmi, S
   Anand, M
   Anbarasan, M
   Mathiyalagan, P
AF Balaji, N.
   Lakshmi, S.
   Anand, M.
   Anbarasan, M.
   Mathiyalagan, P.
TI An efficient scheme for secure feature location using data fusion and
   data mining in internet of things environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE artificial flora optimization; latent semantic indexing; normalized
   K-means; Caesar Cipher-Rivest; Data mining; association rule mining
ID DEVELOPERS; MODELS
AB Feature location (FL) is performed to find the relationships between domain concepts and other software artifacts. One major problem in maintaining a software system is to understand how many functional features exist in a system and how these features are implemented. Also, poor security is the prime problem in the FL system. However, the existing recent FL techniques use a textual and dynamic approach, which is not found to be secure, keeping in view the changes in the description of security attacks. To overcome this drawback, this work proposed a novel secure approach for FL utilizing data fusion as well as data mining for the internet of things environment. Firstly, the repeated test cases (TC) are eradicated as of the labeled TC. Next, important attributes are selected using the artificial flora optimization algorithm from the removed labeled TC. Then, association rule mining is performed to ascertain closed attributes. Subsequently, encrypt the closed attributes utilizing Caesar Cipher-Rivest, Shamirs, as well as Adelman algorithm. After that, the score value of the closed attributes counts was found utilizing entropy calculation. Finally, the score value is given as input to the normalized-K-Means (N-[K-Means]) algorithm, where the score value is normalized utilizing min-max normalization and then grouped utilizing K-Means algorithm (KMA). It proffers better results for FL in the source code. The proposed N-(K-Means) performance is found better in comparison to the KMA and latent semantic indexing methods. The proposed system proffered better FL results in comparison to the other prevailing methods.
C1 [Balaji, N.] Tagore Engn Coll, Dept Comp Sci & Engn, Chennai, Tamil Nadu, India.
   [Lakshmi, S.] Tagore Engn Coll, Dept Elect & Commun Engn, Chennai, Tamil Nadu, India.
   [Anand, M.] Saveetha Inst Med & Tech Sci, Saveetha Sch Engn, Dept Comp Sci & Engn, Chennai, Tamil Nadu, India.
   [Anbarasan, M.] Sri Sai Ram Inst Technol, Dept Comp Sci & Engn, Chennai, Tamil Nadu, India.
   [Mathiyalagan, P.] Sri Ramakrishna Engn Coll, Dept Comp Sci & Engn, Coimbatore, Tamil Nadu, India.
C3 Saveetha Institute of Medical & Technical Science; Saveetha School of
   Engineering; Sri Ramakrishna Engineering College
RP Balaji, N (corresponding author), Tagore Engn Coll, Dept Comp Sci & Engn, Chennai, Tamil Nadu, India.
EM nbalaji@tagore-engg.ac.in
RI P, Mathiyalagan/L-4764-2019; N, Balaji/AAY-2037-2020; M,
   Anand/AAE-5629-2020
OI P, Mathiyalagan/0000-0003-0624-0526; M, Anand/0000-0001-5801-3654
CR Alhindawi N, 2013, PROC IEEE INT CONF S, P300, DOI 10.1109/ICSM.2013.41
   Arcega L, 2017, LECT NOTES COMPUT SC, V10376, P90, DOI 10.1007/978-3-319-61482-3_6
   Armaly A, 2016, PROC IEEE INT CONF S, P553, DOI 10.1109/ICSME.2016.76
   BalaAnand M, 2019, WIRELESS PERS COMMUN, V109, P777, DOI 10.1007/s11277-019-06590-w
   BalaAnand M, 2019, J SUPERCOMPUT, V75, P6085, DOI 10.1007/s11227-019-02948-w
   BalaAnand M, 2020, INT J PARALLEL PROG, V48, P329, DOI 10.1007/s10766-018-0598-2
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Binkley D, 2015, J SYST SOFTWARE, V101, P30, DOI 10.1016/j.jss.2014.11.013
   Chochlov M, 2017, INFORM SOFTWARE TECH, V88, P110, DOI 10.1016/j.infsof.2017.04.003
   Corley CS, 2015, PROC IEEE INT CONF S, P71, DOI 10.1109/ICSM.2015.7332453
   Damevski K, 2016, EMPIR SOFTW ENG, V21, P724, DOI 10.1007/s10664-015-9373-9
   Dit B., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P203
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Font J, 2018, IEEE T EVOLUT COMPUT, V22, P363, DOI 10.1109/TEVC.2017.2751100
   Fujioka D, 2017, PROC IEEE INT CONF S, P499, DOI 10.1109/ICSME.2017.55
   Hamid B, 2016, INNOV SYST SOFTW ENG, V12, P109, DOI 10.1007/s11334-015-0259-1
   Hayashi S, 2016, ASIA PAC SOFWR ENG, P393, DOI [10.1109/APSEC.2016.63, 10.1109/APSEC.2016.068]
   Hill E, 2015, INT C PROGRAM COMPRE, P140, DOI 10.1109/ICPC.2015.23
   Jordan H, 2015, INT C PROGRAM COMPRE, P174, DOI 10.1109/ICPC.2015.26
   Lafeta Raquel F., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P154, DOI 10.1109/SBES.2011.22
   Martinez J, 2018, INFORM SOFTWARE TECH, V104, P46, DOI 10.1016/j.infsof.2018.07.005
   Peng X, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-015-0860-9
   Pérez F, 2019, AUTOMAT SOFTW ENG, V26, P161, DOI 10.1007/s10515-019-00251-9
   Salva S, 2019, SOFTWARE QUAL J, V27, P675, DOI 10.1007/s11219-018-9438-2
   Shahmehri N, 2012, INFORM SOFTWARE TECH, V54, P997, DOI 10.1016/j.infsof.2012.03.004
   Sun XB, 2019, IEEE ACCESS, V7, P49872, DOI 10.1109/ACCESS.2019.2910732
   Wang J, 2011, ANN REP COMP CHEM, V7, P3, DOI 10.1016/B978-0-444-53835-2.00001-8
   Zamani S, 2016, KNOWL INF SYST, V49, P629, DOI 10.1007/s10115-015-0909-5
   Ziftci C., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P155, DOI 10.1109/WCRE.2012.25
NR 29
TC 10
Z9 10
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2022
VL 52
IS 3
SI SI
BP 642
EP 657
DI 10.1002/spe.2805
EA MAR 2020
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YS2YA
UT WOS:000561192400001
DA 2024-07-18
ER

PT J
AU Hu, G
   Peng, M
   Zhang, YH
   Xie, QQ
   Gao, W
   Yuan, MT
AF Hu, Gang
   Peng, Min
   Zhang, Yihan
   Xie, Qianqian
   Gao, Wang
   Yuan, Mengting
TI Unsupervised software repositories mining and its application to code
   search
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code search; feature fusion; software repositories; wavelet
   transformation
AB Software repositories are crucial resources for many software tasks, including code retrieval and annotation. Programming forums provide questions and answers (Q&A) from software developers, containing abundant code-description posts for exchanging knowledge about programming issues. However, most posts provide personal opinions of users that are often not adequately confirmed or outdated. Mining software repositories in such open and unrestricted forums is challenging. Since the posts can be arbitrary and noisy, it is difficult to get unified labels for supervised noise elimination. Different from existing mining approaches, this paper proposes Code-Description Mining Framework (CodeMF), an unsupervised framework to eliminate noisy posts and extract high quality software repositories from programming forums. CodeMF treats all social features of the posts as discrete-time signals for kernel principal component analysis and further performs wavelet transform feature fusion to find the delicate changes (noises in temporal signals). We conduct comprehensive experiments on StackOverflow. Experimental results demonstrate that CodeMF can effectively reduce running time and improve precision via mining high-quality software repositories for various programming languages, especially for the large-scale codebases. To further illustrate the effect of CodeMF applied in software tasks, we introduce it to improve the performance of query-expansion code search. Meanwhile, for SQL and C# programs, compared to the state-of-the-art query-expansion method QECK, the improvement of QECK(CodeMF) is 2% and 6% on Recall@10, and 4% and 14% on mean reciprocal rank, respectively.
C1 [Hu, Gang; Peng, Min; Xie, Qianqian; Gao, Wang; Yuan, Mengting] Wuhan Univ, Sch Comp Sci, Dept Natl Engn, Res Ctr Multimedia Software, Wuhan, Hubei, Peoples R China.
   [Zhang, Yihan] Natl Univ Singapore, Sch Comp, Singapore, Singapore.
C3 Wuhan University; National University of Singapore
RP Yuan, MT (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
EM ymt@whu.edu.cn
RI GAO, WANG/GWU-5411-2022
OI GAO, WANG/0000-0001-9671-489X; Hu, Gang/0000-0002-7867-8087
FU National Key R&D Program of China [2018YFC1604000, 2018YFC1604003];
   National Science Foundation of China [61872272, 61772382]
FX National Key R&D Program of China, Grant/Award Number: 2018YFC1604000
   and 2018YFC1604003; National Science Foundation of China, Grant/Award
   Number: 61872272 and 61772382
CR Ahmad A, 2018, DATA TECHNOL APPL, V52, P190, DOI 10.1108/DTA-07-2017-0054
   [Anonymous], ARXIV170907642
   [Anonymous], P 11 WORK C MIN SOFT
   [Anonymous], P 33 INT C AUT SOFTW
   [Anonymous], P 1 INT C WEB SEARCH
   [Anonymous], 2013, P 10 WORK C MIN SOFT
   [Anonymous], P 14 INT C WEB INF S
   [Anonymous], P 22 INT C SOFTW AN
   [Anonymous], P 22 INT S FDN SOFTW
   [Anonymous], 2018, P 40 INT C SOFTW ENG
   [Anonymous], P 24 INT C INF KNOWL
   [Anonymous], P 38 INT C SOFTW ENG
   [Anonymous], P 32 INT C SOFTW ENG
   [Anonymous], P 2 INT WORKSH MACH
   [Anonymous], P 12 WORK C MIN SOFT
   [Anonymous], 2016, P 54 ANN M ASS COMP
   [Anonymous], P 4 INT C WEBL SOC M
   [Anonymous], COMPUTER SCI
   [Anonymous], COMPUTER SCI
   [Anonymous], IEEE T SERV COMPUT
   [Anonymous], P 17 INT C WEB INF S
   [Anonymous], P 22 INT C COMP SUPP
   [Anonymous], P 33 EUR C INF RETR
   [Anonymous], P 25 INT C SOFTW AN
   [Anonymous], P 31 INT C AUT SOFTW
   [Anonymous], P 35 INT C SOFTW ENG
   [Anonymous], P 17 INT C WEB AG IN
   [Anonymous], 2011, ACM T MULTIM COMPUT
   [Anonymous], SIGNAL PROCESSING US
   [Anonymous], 2016, IJCAI
   [Anonymous], P 38 INT C SOFTW ENG
   [Anonymous], P 7 INT C ADV SOC NE
   [Anonymous], P 26 C PROGR COMPR I
   [Anonymous], 1997, P 7 INT C ART NEUR N
   [Anonymous], P 30 INT C SOFTW MAI
   [Anonymous], P 12 WORK C MIN SOFT
   [Anonymous], P 28 INT C AUT SOFTW
   [Anonymous], P 24 INT S FDN SOFTW
   Becker H., 2011, P INT AAAI C WEB SOC
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Chipman HA, 1997, J AM STAT ASSOC, V92, P1413, DOI 10.2307/2965411
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Harabagiu S. M., 2011, P 5 INT C WEBL SOC M
   Huang JJ, 2017, WORLD WIDE WEB, V20, P325, DOI 10.1007/s11280-016-0390-4
   Huang Q, 2019, SOFTWARE PRACT EXPER, V49, P1600, DOI 10.1002/spe.2736
   Joorabchi A, 2016, J ENTERP INF MANAG, V29, P255, DOI 10.1108/JEIM-11-2014-0109
   Pal D, 2014, J ASSOC INF SCI TECH, V65, P2469, DOI 10.1002/asi.23143
   Peng M, 2019, IEEE T KNOWL DATA EN, V31, P1080, DOI 10.1109/TKDE.2018.2847707
   Peng M, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P2332
   Peng M, 2018, ACM T KNOWL DISCOV D, V12, DOI 10.1145/3173044
   Peng M, 2017, ACM T INFORM SYST, V36, DOI 10.1145/3086702
   Peng M, 2016, EXPERT SYST APPL, V44, P92, DOI 10.1016/j.eswa.2015.08.056
   Perez-Iglesias Joaquin, 2009, ARXIV09115046
   Ramos Juan, 2003, ICML
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Vosecky Jan, 2012, Database Systems for Advanced Applications. Proceedings of the 17th International Conference, DASFAA 2012, P397, DOI 10.1007/978-3-642-29038-1_29
NR 56
TC 8
Z9 9
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2020
VL 50
IS 3
SI SI
BP 299
EP 322
DI 10.1002/spe.2760
EA NOV 2019
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KH3BI
UT WOS:000497775800001
DA 2024-07-18
ER

PT J
AU Gallego, FO
   Corchuelo, R
AF Gallego, Fernando O.
   Corchuelo, Rafael
TI Torii: An aspect-based sentiment analysis system that can mine
   conditions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deep learning; identification of aspects; mining conditions; sentiment
   analysis
AB Aspect-based sentiment analysis systems are a kind of text-mining systems that specialize in summarizing the sentiment that a collection of reviews convey regarding some aspects of an item. There are many cases in which users write their reviews using conditional sentences; in such cases, mining the conditions so that they can be analyzed is very important not to misinterpret the corresponding sentiment summaries. Unfortunately, current commercial systems or research systems neglect conditions; current frameworks and toolkits do not provide any components to mine them; furthermore, the proposals in the literature are insufficient because they are based on handcrafted patterns that fall short regarding recall or machine learning procedures that are tightly bound with a specific language and require too much configuration. In this article, we present Torii, which is a system that loads a collection of reviews, discovers the aspects on which they report, and summarizes the sentiment that is conveyed on them taking into account the existing conditions, if any. We also describe its architecture, our approach to mine conditions, and our experimental analysis on a large multilingual data set with reviews from multiple categories. To the best of our knowledge, Torii is the first proposal that addresses aspect-based sentiment analysis taking conditions into account.
C1 [Gallego, Fernando O.; Corchuelo, Rafael] Univ Seville, Escuela Tecn Super Ingn Informat, Ave Reina Mercedes S-N, E-41012 Seville, Spain.
C3 University of Sevilla
RP Gallego, FO (corresponding author), Univ Seville, Escuela Tecn Super Ingn Informat, Ave Reina Mercedes S-N, E-41012 Seville, Spain.
EM fogallego@us.es
RI Corchuelo, Rafael/G-3149-2016
OI Corchuelo, Rafael/0000-0003-1563-6979; Ortega,
   Fernando/0000-0002-9002-0157
FU Spanish RD programme [TIN2013-40848-R, TIN2016-75394-R]; Opileak
FX Spanish R&D programme, Grant/Award Number: TIN2013-40848-R and
   TIN2016-75394-R; Opileak
CR [Anonymous], 2016, INT JOINT C ARTIFICI
   *AP SOFTW FDN, 2018, AP OPENNLP
   Bart Robert, 2012, P C EMP METH NAT LAN, P523
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   CARUANA R, 2000, P 13 INT C NEUR INF
   CHIKERSAL P, 2015, INT C INT TEXT PROC
   Costa-Montenegro E, 2017, SOFTWARE PRACT EXPER, V47, P867, DOI 10.1002/spe.2467
   Cunningham H, 2013, PLOS COMPUT BIOL, V9, DOI 10.1371/journal.pcbi.1002854
   Do HH, 2019, EXPERT SYST APPL, V118, P272, DOI 10.1016/j.eswa.2018.10.003
   Etzioni O, 2011, 22 INT JOINT C ART I
   *EXPL, 2018, SPACY IND STRENGTH N
   Ferrucci D., 2009, UNSTRUCTURED INFORM
   Flory L, 2017, DECIS SUPPORT SYST, V94, P85, DOI 10.1016/j.dss.2016.11.003
   García-Pablos A, 2018, EXPERT SYST APPL, V91, P127, DOI 10.1016/j.eswa.2017.08.049
   Han HG, 2017, NEUROCOMPUTING, V242, P51, DOI 10.1016/j.neucom.2017.02.038
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   HU M, 2004, P 19 NAT C ART INT S
   Kingma D. P., 2014, arXiv
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mitchell T, 2015, AAAI CONF ARTIF INTE, P2302
   NAKAYAMA Y, 2015, P 2015 C EMP METH NA
   NARAYANAN R, 2009, P 2009 C EMP METH NA
   Nilashi M, 2018, EXPERT SYST APPL, V92, P507, DOI 10.1016/j.eswa.2017.09.058
   PADRO L, 2012, INT C LANG RES EV LR
   Pascanu R., 2013, INT C MACH LEARN, P1310
   SKEPPSTEDT M, 2015, P 6 WORKSH COMP APPR
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sutskever I, 2014, ADV NEUR IN, V27
   Taboada M, 2011, COMPUT LINGUIST, V37, P267, DOI 10.1162/COLI_a_00049
   Yoo S, 2018, EXPERT SYST APPL, V105, P102, DOI 10.1016/j.eswa.2018.03.055
NR 30
TC 4
Z9 5
U1 1
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2020
VL 50
IS 1
BP 47
EP 64
DI 10.1002/spe.2762
EA NOV 2019
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JR9RB
UT WOS:000495786900001
OA Green Published
DA 2024-07-18
ER

PT J
AU Apolónia, N
   Freitag, F
   Navarro, L
   Girdzijauskas, S
AF Apolonia, Nuno
   Freitag, Felix
   Navarro, Leandro
   Girdzijauskas, Sarunas
TI Socially aware microcloud service overlay optimization in community
   networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE community networks; community of practice; microclouds; P2P overlay
   networks; social networks
AB Community networks are a growing network cooperation effort by citizens to build and maintain Internet infrastructure in regions that are not available. Adding that, to bring cloud services to community networks (CNs), microclouds were started as an edge cloud computing model where members cooperate using resources. Therefore, enhancing routing for services in CNs is an attractive paradigm that benefits the infrastructure. The problem is the growing consumption of resources for disseminating messages in the CN environment. This is because the services that build their overlay networks are oblivious to the underlying workload patterns that arise from social cooperation in CNs. In this paper, we propose Select in Community Networks (SELECTinCN), which enhances the overlay creation for pub/sub systems over peer-to-peer (P2P) networks. Moreover, SELECTinCN includes social information based on cooperation within CNs by exploiting the social aspects of the community of practice. Our work organizes the peers in a ring topology and provides an adaptive P2P connection establishment algorithm, where each peer identifies the number of connections needed based on the social structure and user availability. This allows us to propagate messages using a reduced number of hops, thus providing an efficient heuristic to an NP-hard problem that maps the workload graph to the structured P2P overlays resulting in a number of messages close to the theoretical minimum. Experiments show that, by using social network information, SELECTinCN reduces the number of relay nodes by up to 89% using the community of practice information versus the state-of-the-art pub/sub notification systems given as baseline.
C1 [Apolonia, Nuno; Freitag, Felix; Navarro, Leandro] Univ Politecn Cataluna, Barcelona, Spain.
   [Apolonia, Nuno; Girdzijauskas, Sarunas] KTH Royal Inst Technol, Stockholm, Sweden.
C3 Universitat Politecnica de Catalunya; Royal Institute of Technology
RP Apolónia, N (corresponding author), Edif C6-E208 CJordi Girona,1-3, Barcelona 08034, Spain.
EM apolonia@ac.upc.edu
RI Navarro, Leandro/D-2545-2010; Freitag, Felix/E-5933-2015
OI Freitag, Felix/0000-0001-5438-479X; Girdzijauskas,
   Sarunas/0000-0003-4516-7317
CR APOLONIA N, 2015, 3 INT C FUT INT THIN
   APOLONIA N, 2018, IEEE INT PAR DISTR P
   CHEN C, 2015, IND TRACK 16 ACM IFI
   Chen C, 2016, IEEE ACM T NETWORK, V24, P422, DOI 10.1109/TNET.2014.2369346
   Chen CY, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962588
   CHOCKLER G, 2007, ANN ACM S PRINC DIST
   CHOCKLER G, 2007, IN INT C DISTR EV BA
   DEMARSICO M, 2014, SOCIAL NETWORK ANAL
   DHARA K, 2010, OVERVIEW STRUCTURED
   Jiménez J, 2013, 2013 GLOBAL INFORMATION INFRASTRUCTURE SYMPOSIUM
   Leskovec J., 2014, SNAP Datasets: Stanford large network dataset collection
   McCune RR, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2818185
   RAHIMIAN F, 2012, IFIP INT C DISTR APP
   RAHIMIAN F, 2011, IEEE INT C PAR DISTR
   Saovapakhiran B, 2011, IEEE ICC
   SELIMI M, 2017, 17 IEEE ACM INT S CL
   SERRAT O, 2017, BUILDING COMMUNITIES
   SETTY V, 2012, 13 INT MIDDL C MONTR
   VISWANATH B, 2009, P ACM WORKSH ONL SOC
   Xia F, 2015, IEEE SYST J, V9, P904, DOI 10.1109/JSYST.2013.2281262
   Xia F, 2015, IEEE T COMPUT, V64, P1857, DOI 10.1109/TC.2014.2345409
   Zhu KL, 2013, COMPLEX ADAPT SYST M, V1, DOI 10.1186/2194-3206-1-14
   Zhuang S.Q., 2001, 11 INT WORKSH NETW O
NR 23
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 675
EP 687
DI 10.1002/spe.2750
EA SEP 2019
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000485481400001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Frantz, RZ
   Rehbein, MH
   Berlezi, R
   Roos-Frantz, F
AF Frantz, Rafael Z.
   Rehbein, Matheus H.
   Berlezi, Rodolfo
   Roos-Frantz, Fabricia
TI Ranking open source application integration frameworks based on
   maintainability metrics: A review of five-year evolution
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE adaptive maintenance; enterprise application integration; integration
   frameworks; integration patterns; integration platforms; software
   maintainability; software metrics
ID PLATFORMS; PATTERNS
AB Integration frameworks are specialized software tools built and adapted to facilitate the design and implementation of integration solutions. An integration solution allows for the reuse of applications from the software ecosystem of companies to support their business processes. There are several open-source integration frameworks available on the market designed to operate in a business context to manipulate structured data; however, increasingly, they are required to deal with unstructured and large volumes of data, thus requiring effort to adapt these frameworks to work with unstructured and large volume of data. Choosing the framework, which is the easiest to be adapted, is not a trivial task. In this article, we review the newest stable versions of four open-source integration frameworks by analyzing how they have evolved regarding their adaptive maintainability over five years. We rank them according to their maintainability degree and compare past and current versions of each framework. To encourage and enable researchers and developers to replicate our experiments, with the aim of verifying our findings, and to experiment with new versions of the integration frameworks analyzed, we detail the experimental protocol used while also having made all the required software involved available on the Web.
C1 [Frantz, Rafael Z.; Rehbein, Matheus H.; Berlezi, Rodolfo; Roos-Frantz, Fabricia] Unijui Univ, Dept Exact Sci & Engn, Ijui, RS, Brazil.
C3 Universidade Regional do Noroeste do Estado do Rio Grande do Sul -
   UNIJUI
RP Frantz, RZ (corresponding author), Unijui Univ, Dept Exact Sci & Engn, Ijui, RS, Brazil.
EM rzfrantz@unijui.edu.br
RI Roos-Frantz, Fabricia/Y-6059-2018; Frantz, Rafael Z./J-9521-2012
OI Roos-Frantz, Fabricia/0000-0001-9514-6560; Frantz, Rafael
   Z./0000-0003-3740-7560
FU Brazilian Co-ordination Board for the Improvement of University
   Personnel (CAPES) [88881.119518/2016-01]; Research Support Foundation of
   the State of Rio Grande do Sul (FAPERGS) [17/2551-0001206-2]
FX Brazilian Co-ordination Board for the Improvement of University
   Personnel (CAPES), Grant/Award Number: 88881.119518/2016-01; Research
   Support Foundation of the State of Rio Grande do Sul (FAPERGS),
   Grant/Award Number: 17/2551-0001206-2
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   Alkadi I., 2003, J OBJECT TECHNOL, V2, P127, DOI [10.5381/jot.2003.2.3.a3, DOI 10.5381/JOT.2003.2.3.A3]
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], THESIS
   [Anonymous], 2005, METRICS 1 3 6
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Briand LC, 1997, P 4 INT S SOFTW METR
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   da Silva RF, 2017, FUTURE GENER COMP SY, V75, P228, DOI 10.1016/j.future.2017.02.026
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Dong X, 2009, INT C SOFTW MAINT ED
   Dossot D., 2014, Mule in action
   dossSantos RP, 2011, P WORKSH SOFTW EC BR
   Ebert N, 2017, BUS INFORM SYST ENG+, V59, P375, DOI 10.1007/s12599-017-0486-0
   Fisher M., 2012, Spring integration in action
   Fowler M., 2010, Domain-specific languages
   Frantz Rafael Z., 2015, International Journal of Web Engineering and Technology, V10, P334
   Frantz RZ, 2016, J SYST SOFTWARE, V111, P89, DOI 10.1016/j.jss.2015.08.044
   Freire DL, 2019, SOFTWARE PRACT EXPER, V49, P921, DOI 10.1002/spe.2679
   Freire DL, 2019, SOFTWARE PRACT EXPER, V49, P341, DOI 10.1002/spe.2670
   Genero M, 2005, J OBJECT TECHNOL, V4, P59, DOI 10.5381/jot.2005.4.9.a1
   Guttridge K., 2017, Magic quadrant for enterprise integration platform as a service 2017
   He W, 2014, IEEE T IND INFORM, V10, P35, DOI 10.1109/TII.2012.2189221
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Herraiz I, 2009, 13 EUR C SOFTW MAINT
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   IBSEN C, 2010, CAMEL ACTION
   Lajios G, 2009, 13 EUR C SOFTW MAINT
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Linthicum D.S., 1999, ENTERPRISE APPL INTE
   Linthicum DS, 2017, IEEE CLOUD COMPUT, V4, P50, DOI 10.1109/MCC.2017.47
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mouchawrab S, 2005, INFORM SOFTWARE TECH, V47, P979, DOI 10.1016/j.infsof.2005.09.003
   Offutt J, 2008, SOFTWARE QUAL J, V16, P489, DOI 10.1007/s11219-008-9051-x
   Radatz Jane., 1990, Ieee standard glossary of software engineering terminology
   Risi M, 2013, 17 EUR C SOFTW MAINT
   Ritter D., 2017, IEEE 21 INT ENT DIST
   Ritter D, 2017, INFORM SYST, V67, P36, DOI 10.1016/j.is.2017.03.003
   Sheldon FT, 2002, J SOFTW MAINT EVOL-R, V14, P147, DOI 10.1002/smr.249
   Yu L., 2008, J BRAZ COMPUT SOC, V14, P45, DOI [10.1007/BF03192551, DOI 10.1007/BF03192551]
   Zimmermann O, 2016, IEEE SOFTWARE, V33, P13, DOI 10.1109/MS.2016.11
NR 44
TC 4
Z9 4
U1 1
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2019
VL 49
IS 10
BP 1531
EP 1549
DI 10.1002/spe.2733
EA JUL 2019
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU8BK
UT WOS:000478231200001
DA 2024-07-18
ER

PT J
AU Shiang, CW
   Tee, FS
   Halin, AA
   Yap, NK
   Hong, PC
AF Shiang, Cheah Wai
   Tee, Fu Swee
   Halin, Alfian Abdul
   Yap, Ng Keng
   Hong, Puah Chin
TI Ontology reuse for multiagent system development through pattern
   classification
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multi-agent system; ontology; ontology pattern; ontology reuse; pattern
   classification
ID FRAMEWORK
AB Ontologies play a crucial role in multiagent systems (MASs) development, especially for domain knowledge modeling, interaction specifications, and behavioral aspect representation. Domain-specific ontologies can be developed in an ad hoc or systematic manner through the incorporation of ontology development steps on the basis of agent-oriented methodologies. Developing such ontologies, however, is challenging because of the extensive amounts of knowledge and experience required. Moreover, since many ontologies cater for very specific domains, the question arises of whether some can be reused for faster systems development. This paper attempts to answer this question by proposing an ontology pattern classification scheme to allow the reuse of existing ontology knowledge for MAS development. Specifically, ontology patterns relevant to the design problem at hand are identified through the pattern classification scheme. These patterns are then reused and shared among agent software communities during the system development phase. The effectiveness of the proposed approach is validated using a restaurant-finder MAS case study. Our findings suggest that utilization of the classified ontology patterns reduces development time and complexity when dealing with domain-specific applications. The scheme also seems useful for software practitioners, where searching and reusing the patterns can easily be done during the analysis, design, and implementation of MAS development.
C1 [Shiang, Cheah Wai] Univ Malaysia Sarawak, Fac Comp Sci & Informat Technol, Kota Samarahan 94300, Sarawak, Malaysia.
   [Tee, Fu Swee] Swinburne Univ Technol Sarawak Campus, Fac Engn Comp & Sci, Jalan Simpang Tiga, Kuching 93350, Sarawak, Malaysia.
   [Halin, Alfian Abdul; Yap, Ng Keng] Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Serdang, Selangor, Malaysia.
   [Hong, Puah Chin] Univ Malaysia Sarawak, Fac Econ & Business, Kota Samarahan, Sarawak, Malaysia.
C3 University of Malaysia Sarawak; Swinburne University of Technology
   Sarawak; Universiti Putra Malaysia; University of Malaysia Sarawak
RP Shiang, CW (corresponding author), Univ Malaysia Sarawak, Fac Comp Sci & Informat Technol, Kota Samarahan 94300, Sarawak, Malaysia.
EM wscheah@unimas.my
CR Bailin SC, 2001, P 30 INT C SCI STAT, DOI [10. 1109/SSDM. 2001. 938557, DOI 10.1109/SSDM.2001.938557]
   Bernon C, 2005, KNOWL ENG REV, V20, P99, DOI 10.1017/S0269888905000421
   Blomqvist E., 2005, P 7 INT C ENT INF SY
   Breitman K.K., 2007, SEMANT WEB, P155
   Cheah W., 2010, Principles and Practice of Multi-Agent Systems, P459, DOI [DOI 10.1007/978-3-642-25920-3_33, 10.1007/978-3-642-25920-3_33]
   Cheah Wai Shiang, 2016, CIT. Journal of Computing and Information Technology, V24, P349, DOI 10.20532/cit.2016.1002869
   CICORTAS A, 2008, P 10 WSEAS INT C MAT
   Corcho O, 2003, LAW SEMANTIC WEB, P142
   DILEO J, 2002, 4 INT BIC WORKSH AG
   Dolia Prashant M., 2010, Journal of Emerging Technologies in Web Intelligence, V2, P42, DOI 10.4304/jetwi.2.1.42-47
   El-Ghamrawy Sally M., 2009, 2009 International Conference on Networking and Media Convergence (ICNM'09), P103, DOI 10.1109/ICNM.2009.4907198
   Falbo RA, 2013, P 4 INT C ONT SEM WE
   Freitas A, 2015, 2015 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE AND INTELLIGENT AGENT TECHNOLOGY (WI-IAT), VOL 2, P143, DOI 10.1109/WI-IAT.2015.116
   Girardi R, 2004, P PORT C ART INT CAN
   González EJ, 2006, SOFTWARE PRACT EXPER, V36, P667, DOI 10.1002/spe.711
   Hammar K, 2005, WORKSH ONT PATT WOP, P2005
   Jureta I, 2005, LECT NOTES ARTIF INT, V3682, P814
   Lasheng Y, 2009, P 2 S INT COMP SCI C
   Lima E.F.A., 2004, ACM SIGSOFT SOFTWARE, V29, P1, DOI DOI 10.1145/986710.986726
   Noy N., 2001, KNOWLEDGE SYSTEMS LA, P32, DOI DOI 10.1016/J.ARTMED.2004.01.014
   Oluyomi A, 2007, AUTON AGENT MULTI-AG, V15, P337, DOI 10.1007/s10458-007-9014-9
   Schelfthout K, 2002, P OOPSLA 2002 WORKSH
   Sharp B, 2011, EXPERT SYST APPL, V38, P6949, DOI 10.1016/j.eswa.2010.12.020
   Sterling LS, 2009, ART OF AGENT-ORIENTED MODELING, P1, DOI 10.1080/17482960903207997
   Tran N, 2007, ADVANCES IN INFORMATION SYSTEMS DEVELOPMENT, VOL 2, P63, DOI 10.1007/978-0-387-70802-7_6
   WaiShiang C., 2017, J TELECOMMUNICATION, V9, P145
   WaiShiang C, 2015, J SOFTW ENG COMPUT S
   WaiShiang Cheah, 2017, International Journal of Interactive Mobile Technologies, V11, P32, DOI 10.3991/ijim.v11i6.6760
   Wyai G. L. C., 2017, J TELECOMMUNICATION, V9, P153
   Xiaomeng S, 2003, P IEEE WIC INT C WEB
   Yang K, 2007, 30 AUSTR WORLD WID W
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
NR 32
TC 6
Z9 6
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2018
VL 48
IS 11
BP 1923
EP 1939
DI 10.1002/spe.2595
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GW3WX
UT WOS:000446841000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Sharma, SD
   Dagenais, MR
AF Sharma, Suchakrapani Datt
   Dagenais, Michel R.
TI Hardware trace reconstruction of runtime compiled code
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE debugging; hardware tracing; JIT compilation; performance analysis
AB Hardware tracing has emerged as a low-cost technique to analyze systems at a very fine granularity, thus mitigating the need for software-only trace approaches for performance analysis. State-of-the-art trace hardware on modern Intel and ARM processors allows recording change-of-flow instructions in executable binaries, such as branches, for off-line reconstruction. This conventional userspace-based trace reconstruction, however, is not robust enough in the common scenarios where runtime code is being generated, compiled, and executed. We therefore propose a novel kernel-assisted mechanism called FlowJIT to reconstruct hardware traces with a low overhead of around 1.3 s per code page modification event. We further show the efficacy or our technique with the help of 2 illustrative usecases that cover the JIT compiled code scenario and a same-page instruction modification scenario. Our implementation has been open sourced as a patch for the Linux kernel.
C1 [Sharma, Suchakrapani Datt; Dagenais, Michel R.] Ecole Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Sharma, SD (corresponding author), Ecole Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ H3T 1J4, Canada.
EM suchakrapani.sharma@polymtl.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   EfficiOS; Ericsson Canada
FX Natural Sciences and Engineering Research Council of Canada (NSERC);
   EfficiOS; Ericsson Canada
CR Ayers A, 2005, P 2005 ACM SIGPLAN C
   BALL T, 1994, ACM T PROGR LANG SYS, V16, P1319, DOI 10.1145/183432.183527
   Ball T, 2009, 31 INT C SOFTW ENG C
   Baron Jason., 2012, Static keys
   Begel A, 1999, COMP COMM R, V29, P123, DOI 10.1145/316194.316214
   Calvet J., 2012, ACM C COMP COMM SEC
   Desnoyers M., 2009, LIN FDN COLL SUMM 20
   Hawkins B, 2015, P 13 ANN IEEE ACM IN
   Intel, JIT PROF API
   Intel Corporation, 2016, Intel 64 and IA-32 Architectures Software Developer Manuals
   Keniston Jim., 2014, Kernel probes (kprobes)
   Khanna P, 2016, J ENG-NY, V2016, DOI 10.1155/2016/2863508
   Koltachev M, 2014, US patent application, Patent No. [13/911,108, 13911108]
   LARUS JR, 1993, COMPUTER, V26, P52, DOI 10.1109/2.211900
   Lee J, 2009, LCTES'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN/SIGBED CONFERENCE ON LANGUAGES, COMPILERS, AND TOOLS FOR EMBEDDED SYSTEMS, P41
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Nethercote Nicholas., 2003, ELECT NOTES THEORETI, V89, P149, DOI DOI 10.1016/S1571-0661(04)81047-8
   Pedersen Craig, 2012, Intel Technology Journal, V16, P130
   Ramasamy V, 2008, P GCC DEV SUMM 2008
   Reinders James., 2013, processor tracing"
   Sandon PA, 1997, IBM J RES DEV, V41, P331, DOI 10.1147/rd.413.0331
   Sharma SD, 2016, J COMPUT SCI TECHNOL
   Sharma SD, 2016, IEEE GLOBE WORK
   Soffa ML, 2011, P 33 INT C SOFTW ENG
   Thalheim J, 2016, P IEEE C DISTR COMP
   Tikir MM, 2002, SIGSOFT SOFTW ENG NO, V28, P10
   Vasudevan A, 2011, 2011 44 HAW INT C SY
   Vermeulen B, 2008, IEEE DES TEST COMPUT, V25, P208, DOI 10.1109/MDT.2008.66
   Weidendorfer J, 2008, TOOLS FOR HIGH PERFORMANCE COMPUTING, P93, DOI 10.1007/978-3-540-68564-7_7
NR 29
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2018
VL 48
IS 5
BP 1042
EP 1055
DI 10.1002/spe.2567
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC4BJ
UT WOS:000429727600003
DA 2024-07-18
ER

PT J
AU Luo, HY
   Liu, J
   Liu, X
   Yang, Y
AF Luo, Haoyu
   Liu, Jin
   Liu, Xiao
   Yang, Yun
TI Predicting temporal violations for parallel business cloud workflows
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; delay propagation; epidemic model; parallel workflows;
   temporal violations
AB Workflow temporal violations, namely, intermediate workflow runtime delays, often occur and have a serious impact on the on-time completion of massive concurrent requests. Therefore, accurate prediction of cloud workflow temporal violations is critical as its result can serve as an essential reference for temporal violation prevention and handling strategies. Conventional studies mainly focus on the time delays of a single workflow activity or a single workflow instance but overlook the propagation of time delays among them. This is a serious problem as time delays can propagate in cloud workflow system due to resource sharing and the dependencies among workflow activities. This paper first proposes a novel temporal violation transmission model inspired by an epidemic model to model the dynamics of time delay propagation. Afterward, a novel temporal violation prediction strategy is presented to estimate the number of temporal violations that may occur and determine the number of violations that must be handled to achieve the target service-level agreement, namely, the on-time completion rate. To the best of our knowledge, this is the first attempt to predict cloud workflow temporal violations at the workflow build-time stage by analyzing the propagation of temporal violations. Experimental results demonstrate that our strategy can make highly accurate predictions and is scalable for a large batch of parallel workflows running in the cloud.
C1 [Luo, Haoyu; Liu, Jin] Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan, Hubei, Peoples R China.
   [Liu, Xiao] Deakin Univ, Sch Informat Technol, Melbourne, Vic, Australia.
   [Yang, Yun] Swinburne Univ Technol, Sch Software & Elect Engn, Melbourne, Vic, Australia.
C3 Wuhan University; Deakin University; Swinburne University of Technology
RP Liu, J (corresponding author), Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan, Hubei, Peoples R China.; Liu, X (corresponding author), Deakin Univ, Sch Informat Technol, Melbourne, Vic, Australia.
EM jinliu@whu.edu.cn; xiao.liu@deakin.edu.au
RI Liu, Xiao/AAG-1593-2020
OI Liu, Xiao/0000-0001-8400-5754; Liu, Jin/0000-0003-0359-0248
FU National Natural Science Foundation of China [61572374, 61300042,
   U163620068, U1135005]; Academic Team Building Plan from Wuhan University
   [WHU2016012]
FX National Natural Science Foundation of China, Grant/Award Number:
   61572374, 61300042, U163620068 and U1135005; Academic Team Building Plan
   from Wuhan University, Grant/Award Number: WHU2016012
CR [Anonymous], 2011, Distributed and Cloud Computing: From Parallel Processing to the Internet of Things
   [Anonymous], THEOR ASP SOFTW ENG
   [Anonymous], 2004, Workflow Management: Models, Methods, and Systems
   Atmaca T, 2014, REDUCING COMPLEXITY
   Brauer F., 2001, MATH MODELS POPULATI, P8
   Cabanillas C, 2014, INT C BUS PROC MAN
   Cheikhrouhou S, 2014, 2014 IEEE INT C SERV
   Chen J, 2005, 1 INT C E SCI GRID C
   Chen JJ, 2007, ACM T AUTON ADAP SYS, V2, DOI 10.1145/1242060.1242063
   Chen JJ, 2007, CONCURR COMP-PRACT E, V19, P965, DOI 10.1002/cpe.1088
   Chen JJ, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000793
   Chinn SJ, 2000, IEEE T ENG MANAGE, V47, P485, DOI 10.1109/17.895343
   Deelman E, 2009, FUTURE GENER COMP SY, V25, P528, DOI 10.1016/j.future.2008.06.012
   Dejun J, 2010, SERV OR COMP ICSOC S
   Desfossez J, 2016, SOFTWARE PRACT EXPER, V46, P1397, DOI 10.1002/spe.2389
   Du YH, 2011, IEEE T SYST MAN CY A, V41, P1166, DOI 10.1109/TSMCA.2011.2116003
   Eder J., 1999, Advanced Information Systems Engineering. 11th International Conference, CAiSE'99. Proceedings (Lecture Notes in Computer Science Vol. 1626), P286
   Gross D., 2008, FUNDAMENTALS QUEUEIN, DOI DOI 10.1002/9781118625651
   Han J, 2014, PROCESSING OF 2014 INTERNATIONAL CONFERENCE ON MULTISENSOR FUSION AND INFORMATION INTEGRATION FOR INTELLIGENT SYSTEMS (MFI)
   Heyszl J, 2016, GREAT LAK S VLSI 201
   Huang WZ, 2010, MATH BIOSCI ENG, V7, P51, DOI 10.3934/mbe.2010.7.51
   Ivanovi D, 2011, INT C SERV OR COMP
   Khazaei H, 2012, IEEE T PARALL DISTR, V23, P936, DOI 10.1109/TPDS.2011.199
   Kumar A, 2015, INT C BUS PROC MAN
   Lan ZL, 2010, IEEE T PARALL DISTR, V21, P174, DOI 10.1109/TPDS.2009.52
   Leitner P, 2010, 2010 IEEE INT C WEB
   Lerner BS, 2010, IEEE T SOFTWARE ENG, V36, P162, DOI 10.1109/TSE.2010.1
   Liu X, 2008, INT C BUS PROC MAN
   Liu X, 2008, IEEE 4 INT C ESCIENC
   Liu X, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559938
   Liu X, 2011, CONCURR COMP-PRACT E, V23, P1893, DOI 10.1002/cpe.1739
   Liu XA, 2011, J SYST SOFTWARE, V84, P354, DOI 10.1016/j.jss.2010.11.927
   Liu X, 2011, IEEE T SOFTWARE ENG, V37, P805, DOI 10.1109/TSE.2010.99
   Luo H, 2016, 2016 IEEE INT C SERV
   Luo H, 2015, 2015 IEEE INT C DAT
   Marjanovic O., 1999, Knowledge and Information Systems, V1, P157
   Mi HB, 2012, SCI CHINA INFORM SCI, V55, P2757, DOI 10.1007/s11432-012-4747-8
   Nadeem F, 2009, P 2009 9 IEEE ACM IN
   Nguyen H, 2013, 2013 IEEE 33 INT C D
   Nogayama T, 2015, INT C BUS PROC MAN
   Pérez-Castillo R, 2012, SOFTWARE PRACT EXPER, V42, P159, DOI 10.1002/spe.1057
   Pika A, 2012, LECT NOTES BUSINESS, V132
   Ranjan R, 2014, SOFTWARE PRACT EXPER, V44, P771, DOI 10.1002/spe.2266
   Schad J, 2010, PROC VLDB ENDOW, V3, P460, DOI 10.14778/1920841.1920902
   Wang FT, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5317-7
   Zhao Z, 2014, 2014 10 INT C SEM KN
NR 46
TC 4
Z9 5
U1 0
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2018
VL 48
IS 4
BP 775
EP 795
DI 10.1002/spe.2554
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FY3VV
UT WOS:000426749900002
DA 2024-07-18
ER

PT J
AU Shirvani, MH
   Rahmani, AM
   Sahafi, A
AF Shirvani, Mirsaeid Hosseini
   Rahmani, Amir Masoud
   Sahafi, Amir
TI An iterative mathematical decision model for cloud migration: A cost and
   security risk approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business process outsourcing (BPO); cloud computing; CPV; TCO;
   transaction theory
ID ADOPTION; LEASE
AB This paper presents an iterative mathematical decision model for organizations to evaluate whether to invest in establishing information technology (IT) infrastructure on-premises or outsourcing IT services on a multicloud environment. This is because a single cloud cannot cover all types of users' functional/nonfunctional requirements, in addition to several drawbacks such as resource limitation, vendor lock-in, and prone to failure. On the other hand, multicloud brings several merits such as vendor lock-in avoidance, system fault tolerance, cost reduction, and better quality of service. The biggest challenge is in selecting an optimal web service composition in the ever increasing multicloud market in which each provider has its own pricing schemes and delivers variation in the service security level. In this regard, we embed a module in the cloud broker to log service downtime and different attacks to measure the security risk. If security tenets, namely, security service level agreement, such as availability, integrity, and confidentiality for mission-critical applications, are targeted by cybersecurity attacks, it causes disruption in business continuity, leading to financial losses or even business failure. To address this issue, our decision model extends the cost model by using the cost present value concept and the risk model by using the advanced mean failure cost concept, which are derived from the embedded module to quantify cloud competencies. Then, the cloud economic problem is transformed into a bioptimization problem, which minimizes cost and security risks simultaneously. To deal with the combinatorial problem, we extended a genetic algorithm to find a Pareto set of optimal solutions. To reach a concrete result and to illustrate the effectiveness of the decision model, we conducted different scenarios and a small-to-medium business IT development for a 5-year investment as a case study. The result of different implementation shows that multicloud is a promising and reliable solution against IT on-premises deployment.
C1 [Shirvani, Mirsaeid Hosseini; Rahmani, Amir Masoud] Islamic Azad Univ, Dept Comp Engn, Sci & Res Branch, Tehran, Iran.
   [Rahmani, Amir Masoud] Univ Human Dev, Dept Comp Sci, Coll Sci & Technol, Sulaymaniyah, Iraq.
   [Sahafi, Amir] Islamic Azad Univ, Dept Comp Engn, South Tehran Branch, Tehran, Iran.
C3 Islamic Azad University; Islamic Azad University
RP Rahmani, AM (corresponding author), Islamic Azad Univ, Dept Comp Engn, Sci & Res Branch, Tehran, Iran.; Rahmani, AM (corresponding author), Univ Human Dev, Dept Comp Sci, Coll Sci & Technol, Sulaymaniyah, Iraq.
EM rahmani@srbiau.ac.ir
RI Rahmani, Amir Masoud/K-2702-2013; Sahafi, Amir/AAS-1208-2021; Shirvani,
   Mirsaeid Hosseini/AAO-2012-2021; Li, Wang/M-1612-2019
OI Rahmani, Amir Masoud/0000-0001-8641-6119; Shirvani, Mirsaeid
   Hosseini/0000-0001-9396-5765; Sahafi, Amir/0000-0002-6555-670X
CR Albach H., 1981, J INST THEOR ECON, V137, P717
   Alhabeeb M, 2010, IEEE 24 INT C ADV IN
   Alrifai M, 2012, ACM T WEB, V6, DOI 10.1145/2180861.2180864
   Altmann J, 2014, FUTURE GENER COMP SY, V41, P79, DOI 10.1016/j.future.2014.08.014
   AlZain MA, 2012, 5 HAW INT C SYST SCI
   AlZain MA, 2014, INT J CLOUD COM SER, V3, P230
   [Anonymous], PAR EFF
   [Anonymous], 2009, SEC GUID CRIT AR FOC
   [Anonymous], 2009, CLOUD COMPUTING BENE
   [Anonymous], 2010, P INT C CLOUD COMPUT
   [Anonymous], 2010, Cloud Security, a Comprehensive Guide To Secure Cloud Computing
   [Anonymous], IEEE 3 INT C CLOUD C
   [Anonymous], 2009, NATL I STAND TECHNOL, DOI DOI 10.6028/NIST.SP.800-145
   Armbrust M., 2009, EECS200928
   Aubert B.A., 2005, DATA BASE ADV INF SY, V36, P9, DOI DOI 10.1145/1104004.1104007
   Badis H, 2014, IEEE IFIP NETW OPER
   Bahram S, 2010, P 2010 29 IEEE S REL
   Beimborn D., 2008, Cooperative Sourcing : Simulation studies and empirical data on outsourcing coalitions in the banking industry
   Ben Aissa A, 2010, INNOV SYST SOFTW ENG, V6, P269, DOI 10.1007/s11334-010-0123-2
   Benlian A, 2009, BUS INFORM SYST ENG+, V1, P357, DOI 10.1007/s12599-009-0068-x
   Bishop M., 2002, Computer Security: Art and Science
   Böhme R, 2008, LECT NOTES COMPUT SC, V4909, P176, DOI 10.1007/978-3-540-68947-8_15
   Catteddu D, 2009, EUR NETW INF SEC AG
   Cha HS, 2008, MIS QUART, V32, P281
   Cheung S.N., 1987, The New Palgrave: A Dictionary of Economics, V2, P55
   Chun-Hung Cheng, 2006, International Journal of Services Operations and Informatics, V1, P221, DOI 10.1504/IJSOI.2006.011013
   Ciavotta M, 2017, J SYST SOFTWARE, V123, P64, DOI 10.1016/j.jss.2016.10.001
   *CIS, 2009, CIS SEC METR V1 0 0
   Coppolino L, 2017, COMPUT ELECTR ENG, V59, P126, DOI 10.1016/j.compeleceng.2016.03.004
   Dastjerdi AV, 2015, SOFTWARE PRACT EXPER, V45, P197, DOI 10.1002/spe.2288
   Drissi S, 2013, INT J ADV COMPUT SC, V4, P143
   El-Gazzar R, 2016, J SYST SOFTWARE, V118, P64, DOI 10.1016/j.jss.2016.04.061
   Fernandes DAB, 2014, INT J INF SECUR, V13, P113, DOI 10.1007/s10207-013-0208-7
   Ford C, SINGLE MULTISOURCING
   Foroughi F, 2008, LECT NOTES ENG COMP, P91
   Grozev N, 2014, SOFTWARE PRACT EXPER, V44, P369, DOI 10.1002/spe.2168
   Hanna S., 2009, CLOUD COMPUTING FIND
   HARWOOD GB, 1976, J ACCOUNTANCY, V142, P83
   Heilig L, 2016, COMPUT IND ENG, V95, P16, DOI 10.1016/j.cie.2016.02.015
   Ibrahim AS, 2010, AS PAC SOFTW ENG C 2
   Jackson K, 2010, CLOUDCOM NOV 30 2010
   Jamshidi P, 2017, SOFTWARE PRACT EXPER, V47, P1159, DOI 10.1002/spe.2442
   Jansen Wayne A., 2011, 44 HAW INT C SYST SC
   Jaouini M, 2014, 5 INT C AMB SYST NET, V32
   Jensen M, 2009, P 2009 IEEE INT C CL
   Jenson W, 2011, NIST SPECIAL PUBLICA
   JOHNSON RW, 1972, J FINANC, V27, P815, DOI 10.2307/2978670
   Jouini M, 2015, J COMPUT, V10, P184, DOI 10.17706/jcp.10.3.184-194
   Karimi MB, 2017, J SUPERCOMPUT, V73, P1387, DOI 10.1007/s11227-016-1814-8
   Keahey K, 2012, P 2012 WORKSH CLOUD
   Khajeh-Hosseini A, 2012, SOFTWARE PRACT EXPER, V42, P447, DOI 10.1002/spe.1072
   Kim W, 2011, INT J WEB GRID SERV, V7, P225, DOI 10.1504/IJWGS.2011.043529
   Kurdi H, 2015, COMPUT ELECTR ENG, V42, P107, DOI 10.1016/j.compeleceng.2014.11.002
   Lewellen WG, 1970, THE COST OF CAPITAL
   Li Q, 2013, COMPUT IND, V64, P813, DOI 10.1016/j.compind.2013.05.003
   Lin A, 2012, INT J INFORM MANAGE, V32, P533, DOI 10.1016/j.ijinfomgt.2012.04.001
   Mabrouk NB, 2009, INT C MIDDL BERL HEI
   Martens B, 2012, INFORM SYST FRONT, V14, P871, DOI 10.1007/s10796-011-9317-x
   Moscato F, 2005, INT C HIGH PERF COMP
   Puschel T, 2009, P 17 EUR C INF SYST
   Rabai LB, 2013, J KING SAUD UNIV-COM, V25, P63, DOI 10.1016/j.jksuci.2012.06.002
   Rimal BP., 2009, 2009 5 INT JOINT C I
   Ristenpart Thomas, 2009, P 16 ACM C COMP COMM
   Safari Narges, 2015, International Journal of Business Information Systems, V19, P488
   Saripalli P, 2011, P IEEE INT C CLOUD C
   Shawish A., 2014, Inter-Cooperative Collective Intelligence: Techniques and Applications, P39, DOI [DOI 10.1007/978-3-642-35016-0_2, 10.1007/978-3-642-35016-0]
   Tak BC, 2011, HOTCLOUD2011 3USENIX
   Takahashi T, 2012, FUT INT COMM BCFIC 2
   Tebaa M, 2014, INT C FUT INF ENG BE
   Truong HL, 2010, ICCS INT C COMP SCI
   Tsiakis T, 2010, INT J COMPUT SCI NET, V10, P7
   vonsBohm-Bawerk E, 1890, CAPITAL INTEREST CRI
   Wang DD, 2015, COMPUT ELECTR ENG, V43, P129, DOI 10.1016/j.compeleceng.2014.10.008
   WANG JA, 2009, P INT INT CONS, V1, P284
   Williamson O., 1981, AM J SOCIOL, V15, P219
   Wooley P. S., 2011, IDENTIFYING CLOUD CO
   Xiao ZF, 2013, IEEE COMMUN SURV TUT, V15, P843, DOI 10.1109/SURV.2012.060912.00182
   Ye Z, 2011, INT C DAT SYST ADV A
   [俞能海 Yu Nenghai], 2013, [电子学报, Acta Electronica Sinica], V41, P371
   Yu Q, 2015, COMPUT ELECTR ENG, V41, P18, DOI 10.1016/j.compeleceng.2014.12.004
   Zeng LF, 2017, SOFTWARE PRACT EXPER, V47, P813, DOI 10.1002/spe.2441
NR 81
TC 40
Z9 41
U1 2
U2 26
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 449
EP 485
DI 10.1002/spe.2528
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FV0ZR
UT WOS:000424291300004
DA 2024-07-18
ER

PT J
AU Nunes, LH
   Estrella, JC
   Perera, C
   Reiff-Marganiec, S
   Delbem, ACB
AF Nunes, Luiz Henrique
   Estrella, Julio Cezar
   Perera, Charith
   Reiff-Marganiec, Stephan
   Botazzo Delbem, Alexandre Claudio
TI Multi-criteria IoT resource discovery: a comparative analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Internet of things; resource discovery; multi-objective; optimization
ID INTERNET; THINGS; SEARCH; WEB
AB The growth of real-world objects with embedded and globally networked sensors allows to consolidate the Internet of things paradigm and increase the number of applications in the domains of ubiquitous and context-aware computing. The merging between cloud computing and Internet of things named cloud of things will be the key to handle thousands of sensors and their data. One of the main challenges in the cloud of things is context-aware sensor search and selection. Typically, sensors require to be searched using two or more conflicting context properties. Most of the existing work uses some kind of multi-criteria decision analysis to perform the sensor search and selection, but does not show any concern for the quality of the selection presented by these methods. In this paper, we analyse the behaviour of the SAW, TOPSIS and VIKOR multi-objective decision methods and their quality of selection comparing them with the Pareto-optimality solutions. The gathered results allow to analyse and compare these algorithms regarding their behaviour, the number of optimal solutions and redundancy. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Nunes, Luiz Henrique; Estrella, Julio Cezar; Botazzo Delbem, Alexandre Claudio] Univ Sao Paulo, Inst Math & Comp Sci ICMC, Sao Carlos, SP, Brazil.
   [Nunes, Luiz Henrique] Fed Inst Sao Paulo IFSP, Matao, SP, Brazil.
   [Perera, Charith] Open Univ, Fac Maths Comp & Technol, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
   [Reiff-Marganiec, Stephan] Univ Leicester, Univ Rd, Leicester LE1 7RH, Leics, England.
C3 Universidade de Sao Paulo; Instituto Federal de Sao Paulo (IFSP); Open
   University - UK; University of Leicester
RP Nunes, LH (corresponding author), Univ Sao Paulo, Inst Math & Comp Sci ICMC, Sao Carlos, SP, Brazil.
EM lhnunes@icmc.usp.br
RI Estrella, Julio Cezar/AAP-4484-2020; Delbem, Alexandre C B/A-9287-2008
OI Estrella, Julio Cezar/0000-0003-0524-3274; Delbem, Alexandre C
   B/0000-0003-1810-1742; Reiff-Marganiec, Stephan/0000-0001-6456-7063
CR Aazam M, 2014, 2014 INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD), P464, DOI 10.1109/FiCloud.2014.83
   Abdullah Lazim, 2014, International Journal of Information Processing and Management, V5, P39
   Aberer K., 2006, GI/ITG KuVS Fachgespraech - Drahtlose Sensornetze, V5, P15
   Afshari A., 2010, International Journal of Innovation and Technology Management, V1, P511, DOI DOI 10.7763/IJIMT.2010.V1.89
   [Anonymous], 2014, INT C REC ADV INN EN
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Behzadian M, 2012, EXPERT SYST APPL, V39, P13051, DOI 10.1016/j.eswa.2012.05.056
   Bhuyan B., 2010, Wirel. Sens. Netw, V2, P861, DOI DOI 10.4236/WSN.2010.211104
   Carlson D, 2014, 2014 IEEE INTERNATIONAL CONFERENCE (ITHINGS) - 2014 IEEE INTERNATIONAL CONFERENCE ON GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) - 2014 IEEE INTERNATIONAL CONFERENCE ON CYBER-PHYSICAL-SOCIAL COMPUTING (CPS), P177, DOI 10.1109/iThings.2014.34
   Collette Y., 2004, Multiobjective optimization: principles and case studies, DOI [DOI 10.1007/978-3-662-08883-8, 10.1007/978-3-662-08883-8]
   Dada A, 2008, LECT NOTES COMPUT SC, V4952, P140
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dodgson J., 2009, Multi-criteria Analysis: A Manual
   Elahi BM, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS (IPSN 2009), P217
   Evans D., 2011, CISCO
   Fersi G, 2015, 2015 INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING IN SENSOR SYSTEMS (DCOSS), P230, DOI 10.1109/DCOSS.2015.43
   Gao F., 2014, CEUR WORKSHOP P, V1280, P15
   Gerla M, 2014, 2014 IEEE WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P241, DOI 10.1109/WF-IoT.2014.6803166
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guinard D, 2010, IEEE T SERV COMPUT, V3, P223, DOI 10.1109/TSC.2010.3
   Huang JJ, 2009, COMM COM INF SC, V35, P761, DOI 10.1007/978-3-642-02298-2_112
   Islam SMR, 2015, IEEE ACCESS, V3, P678, DOI 10.1109/ACCESS.2015.2437951
   Khan R, 2012, 10TH INTERNATIONAL CONFERENCE ON FRONTIERS OF INFORMATION TECHNOLOGY (FIT 2012), P257, DOI 10.1109/FIT.2012.53
   Kothari A, 2014, 2014 INTERNATIONAL CONFERENCE ON COLLABORATIVE COMPUTING: NETWORKING, APPLICATIONS AND WORKSHARING (COLLABORATECOM), P295, DOI 10.4108/icst.collaboratecom.2014.257475
   Marler RT, 2004, STRUCT MULTIDISCIP O, V26, P369, DOI 10.1007/s00158-003-0368-6
   Memariani A., 2009, J IND ENGINEERING, V4, P13
   Opricovic S, 2004, EUR J OPER RES, V156, P445, DOI 10.1016/s0377-2217(03)00020-1
   Ostermaier Benedikt., 2010, 2010 Internet of Things (IOT), P1, DOI DOI 10.1109/IOT.2010.5678450
   Perera C, 2016, KNOWL-BASED SYST, V109, P122, DOI 10.1016/j.knosys.2016.06.030
   Perera C, 2014, IEEE COMMUN SURV TUT, V16, P414, DOI 10.1109/SURV.2013.042313.00197
   Perera C, 2013, 2013 IEEE 14TH INTERNATIONAL CONFERENCE ON MOBILE DATA MANAGEMENT (MDM 2013), VOL 1, P314, DOI 10.1109/MDM.2013.46
   Robles T, 2014, 2014 28TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P821, DOI 10.1109/WAINA.2014.129
   Römer K, 2010, P IEEE, V98, P1887, DOI 10.1109/JPROC.2010.2062470
   Ruta M., 2013, 2013 IEEE International Conference on Green Computing and Communications (GreenCom) and IEEE Internet of Things (iThings) and IEEE Cyber, Physical and Social Computing (CPSCom), P527, DOI 10.1109/GreenCom-iThings-CPSCom.2013.103
   Shah M., 2012, Proceedings of the First International Conference on Security of Internet of Things, P63, DOI DOI 10.1145/2490428
   Soldatos J., 2012, IMIS, V2012, P874, DOI DOI 10.1109/IMIS.2012.135
   Truong C, 2013, IEEE GLOB COMM CONF, P2654, DOI 10.1109/GLOCOM.2013.6831475
   Tzeng GH, 2011, MULTIPLE ATTRIBUTE DECISION MAKING: METHODS AND APPLICATIONS, P1
   Vermesan O, 2011, RIVER PUBL SER COMM, P9
   Xu L., 2001, WORKING PAPER SERIES, V0106
   Zhang MH, 2012, INT SYM COMPUT INTEL, P294, DOI 10.1109/ISCID.2012.81
   Zhiming Ding, 2012, 2012 9th Web Information Systems and Applications Conference (WISA 2012), P57, DOI 10.1109/WISA.2012.11
NR 42
TC 19
Z9 19
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2017
VL 47
IS 10
BP 1325
EP 1341
DI 10.1002/spe.2469
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG0OJ
UT WOS:000409457000002
OA Green Submitted, Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Wu, EH
   Chuang, SM
   Shih, CY
   Hsueh, HC
   Huang, SS
   Huang, HP
AF Wu, Eric Hsiaokuang
   Chuang, Shumin
   Shih, Chen-Yen
   Hsueh, Hao-Che
   Huang, Shih-Syuan
   Huang, Hsiao-Ping
TI A flexible and lightweight user-demand DRM system for multimedia
   contents over multiple portable device platforms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE digital right management; DRM; content protection; digital signature;
   copyright; intellectual property
ID ENCRYPTION
AB With the rapid development of technology, digital multimedia has been widely utilized. Access of multimedia contents has become a daily routine. Although multimedia brings ease and convenience for content sharing, it also makes piracy more feasible. For example, it is easy to upload a copyrighted video to YouTube without the owners' permission. Authors and merchants are very much in need of protecting their intellectual property and commercial profits. Digital right management (DRM) systems are provided to fulfill this desire. DRM is a collection of techniques used to control access to copyrighted materials. Because current enterprise DRM solutions are not allowed for customized modification, they cannot fit in our considered scenario perfectly. As a result, we propose a secure DRM system with a design based on user demands, where a consumer can access contents only on authenticated devices until the authorization expires. Our DRM scheme involves a series of robust cryptosystems including AES, SHA-256, and RSA. Applications as DRM agents are implemented on Windows, Mac OS, Android, and iOS platforms. Moreover, we modularized the DRM components for easy extension and integration. For better performance on low-end devices, parameters of encryption are introduced, namely, the key size and the encryption density. We addressed the mask shift problem caused by random access and implemented the device identifier acquirement. The DRM system also proved to have high security and good performance in our analysis. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [Wu, Eric Hsiaokuang; Chuang, Shumin; Shih, Chen-Yen; Hsueh, Hao-Che; Huang, Shih-Syuan; Huang, Hsiao-Ping] Natl Cent Univ, Dept Comp Sci & Informat Engn, Zhongli, Taiwan.
C3 National Central University
RP Wu, EH (corresponding author), Natl Cent Univ, Dept Comp Sci & Informat Engn, Zhongli, Taiwan.
EM hsiao@csie.ncu.edu.tw
CR [Anonymous], 2001, Selected Areas in Cryptography
   [Anonymous], 1 MONDAY
   Bhatt S, 2009, COMPUT SECUR, V28, P327, DOI 10.1016/j.cose.2009.03.001
   Changgui Shi, 1998, Proceedings ACM Multimedia 98, P81
   Cheng H, 2000, IEEE T SIGNAL PROCES, V48, P2439, DOI 10.1109/78.852023
   Chodowiec P.R., 2002, THESIS
   Crosby S., 2002, Security and Privacy in Digital Rights Management. ACM CCS-8 Workshop DRM 2001. Revised Papers (Lecture Notes in Computer Science Vol.2320), P192
   Diehl E, 2012, SECURING DIGITAL VID, DOI [10.1007/978-3-642-17345-5, DOI 10.1007/978-3-642-17345-5]
   DIFFIE W, 1977, COMPUTER, V10, P74, DOI 10.1109/C-M.1977.217750
   Dilger DE, FAIRPLAY WORKS APPLE
   Dworkin M, 2001, Recommendation for block cipher modes of operation. Methods and Techniques
   Gal A., Reconciling Mozilla's Mission and W3C EME
   Grosul A.L., 2000, A related-key cryptanalysis of RC4
   Hammersland R., 2008, DIGITAL RIGHTS MANAG
   Han J, 2008, ICISS 2008: INTERNATIONAL CONFERENCE ON INFORMATION SCIENCE AND SECURITY, PROCEEDINGS, P108, DOI 10.1109/ICISS.2008.13
   Iwakiri M, 2012, INT CON ADV INFO NET, P755, DOI 10.1109/AINA.2012.111
   Jain G, 2012, INT J INNOVATIONS CO, V1, P1
   Kim G, 2004, IEEE T CONSUM ELECTR, V50, P1130, DOI 10.1109/TCE.2004.1362509
   Ku W, 2004, LECT NOTES COMPUT SC, V3225, P391
   Liu Y, 2007, 9TH INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION TECHNOLOGY: TOWARD NETWORK INNOVATION BEYOND EVOLUTION, VOLS 1-3, P583, DOI 10.1109/ICACT.2007.358423
   Maeda K., 2012, 2012 Second International Conference on Digital Information and Communication Technology and it's Applications (DICTAP), P177, DOI 10.1109/DICTAP.2012.6215346
   Menezes AlfredJ., 2010, Handbook of applied cryptography
   Michiels S, 2005, CW REPORTS, pCW428
   Nickolova M, 2007, INFORM TECHNOLOGIES, V1, P163
   Nurseitov Nurzhan, 2009, Proceedings on the ISCA 22nd International Conferenceon Computers and Their Applications in Industry and Engineering. CAINE-2009, P157
   Rogaway P., 2011, EVALUATION SOME BLOC
   Schneier B., 2000, Third Advanced Encryption Standard Candidate Conference, P123
   Tang L., 1997, P 4 ACM INT C MULT, P219
   Taylor Jim., 2006, DVD Demystified, V3rd
   Vaudenay S, 2002, LECT NOTES COMPUT SC, V2332, P534
   VideoLAN, VLC MED PLAYER
   Yang ZK, 2008, KAM: 2008 INTERNATIONAL SYMPOSIUM ON KNOWLEDGE ACQUISITION AND MODELING, PROCEEDINGS, P472, DOI 10.1109/KAM.2008.155
   Yi X, 2005, IEEE T CIRCUITS-II, V52, P354, DOI 10.1109/TCSII.2005.848992
   Zhang Y, 2008, 2008 INTERNATIONAL SEMINAR ON FUTURE INFORMATION TECHNOLOGY AND MANAGEMENT ENGINEERING, PROCEEDINGS, P261, DOI 10.1109/FITME.2008.43
   Zhou J, 1999, COMPUT COMMUN, V22, P710, DOI 10.1016/S0140-3664(99)00031-6
NR 35
TC 3
Z9 4
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2017
VL 47
IS 10
BP 1417
EP 1441
DI 10.1002/spe.2479
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG0OJ
UT WOS:000409457000006
DA 2024-07-18
ER

PT J
AU Godboley, S
   Mohapatra, DP
   Das, A
   Mall, R
AF Godboley, Sangharatna
   Mohapatra, Durga Prasad
   Das, Avijit
   Mall, Rajib
TI An improved distributed concolic testing approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE MC; DC; concolic testing; distributed concolic testing; code
   transformation; Coverage Analyser
ID COVERAGE
AB Distributed concolic testing (DCT) for complex programs takes a remarkable computational time. Also, the achieved modified condition/decision coverage (MC/DC) for such programs is often inadequate. We propose an improved DCT approach that reduces the computational time and simultaneously enhanced the MC/DC. We have named our approach SMCDCT (scalable MC/DC percentage calculator using DCT). Our experimental study on forty-five C programs indicates 6.62% of average increase in MC/DC coverage. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Godboley, Sangharatna; Mohapatra, Durga Prasad] Natl Inst Technol, Dept Comp Sci & Engn, Rourkela, India.
   [Das, Avijit] Def Res & Dev Org, ASL, Hyderabad, Telangana, India.
   [Mall, Rajib] Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur, W Bengal, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Rourkela; Defence Research & Development Organisation (DRDO);
   Advanced System Laboratory (ASL); Indian Institute of Technology System
   (IIT System); Indian Institute of Technology (IIT) - Kharagpur
RP Godboley, S (corresponding author), Natl Inst Technol, Dept Comp Sci & Engn, Rourkela, India.
EM sanghu1790@gmail.com
RI GODBOLEY, SANGHARATNA/AAG-5527-2019; GODBOLEY, SANGHARATNA/G-2192-2014;
   Mohapatra, Durga Prasad/B-2722-2017
OI GODBOLEY, SANGHARATNA/0000-0002-6169-6334; Mohapatra, Durga
   Prasad/0000-0002-4824-7091
CR Ammann P, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P99, DOI 10.1109/ISSRE.2003.1251034
   Awedikian Z., 2009, P 11 ANN C GEN EV CO, P1657
   Bokil P, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P359, DOI 10.1109/SSIRI.2009.53
   Burnim Jacob., 2008, Proceedings of the 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI DOI 10.1109/ASE.2008.69
   Bush WR, 2000, SOFTWARE PRACT EXPER, V30, P775, DOI 10.1002/(SICI)1097-024X(200006)30:7<775::AID-SPE309>3.0.CO;2-H
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Das A., 2012, THESIS
   Das A, 2013, INT J SOFTWARE ENG, V2
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Godboley S., 2013, THESIS
   Godboley S., 2013, 7 CSI INT C SOFTW EN, p[91, 11]
   Godboley S, 2015, LECT NOTES COMPUT SC, V8956, P199, DOI 10.1007/978-3-319-14977-6_15
   Godboley S, 2013, IEEE INT ADV COMPUT, P1400
   Godboley S, 2013, 2013 IEEE INTERNATIONAL MULTI CONFERENCE ON AUTOMATION, COMPUTING, COMMUNICATION, CONTROL AND COMPRESSED SENSING (IMAC4S), P524, DOI 10.1109/iMac4s.2013.6526469
   GODEFROID P, 2005, P PLDI NEW YORK US, P75
   Hayhurst K. J., 2001, NASATM2001210876
   Hussain I, 2014, RUGRAT EVALUATING PR
   Jiang B, 2011, SOFTWARE PRACT EXPER, V41, P1073, DOI 10.1002/spe.1092
   Kim M, 2012, CASE STUDIES, P390
   Kim Y, 2013, IEEE INT CONF AUTOM, P519, DOI 10.1109/ASE.2013.6693109
   Kim Yunho., 2011, Proceedings of the Joint Meeting of the European Software Engi- neering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering (ESEC/FSE), P420
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Mano M., 1990, DIGITAL DESIGN, P1
   Moonzoo Kim, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P340, DOI 10.1109/ICST.2012.114
   Moonzoo Kim, 2012, Formal Aspects of Computing, V24, P355, DOI 10.1007/s00165-011-0200-9
   PANDITA R, 2010, IEEE INT C SOFTW MAI, P1
   RTCA/DO-178B, 1992, RTCADO178B FLIGHT SY
NR 28
TC 17
Z9 18
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2017
VL 47
IS 2
BP 311
EP 342
DI 10.1002/spe.2405
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EK2RP
UT WOS:000393774700006
DA 2024-07-18
ER

PT J
AU Pereira, RHR
   Perez-Schofield, JBG
   Ortin, F
AF Pereira, Rui Humberto R.
   Garcia Perez-Schofield, J. Baltasar
   Ortin, Francisco
TI Modularizing application and database evolution - an aspect-oriented
   framework for orthogonal persistence
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE schema evolution; instance adaptation; aspect-oriented programming;
   orthogonal persistent systems
ID ASPECT-ORIENTATION; SYSTEMS; SCIENCE; DESIGN; CODE; JAVA
AB In the maintenance of software applications, database evolution is one common difficulty. In object-oriented databases, this process comprises schema evolution and instance adaptation. Both tasks usually require significant effort from programmers and database administrators. In this paper, we propose orthogonal persistence and aspect-oriented programming to support semi-transparent database evolution. A default mechanism for instance evolution is defined, but the user may provide modularized solutions using the aspect-oriented paradigm. We present our framework AOF4OOP to test the feasibility of our proposed approach. This prototype allows programmes to transparently access data in other versions of the database schema. We evaluate our framework, comparing it to related approaches using two real applications and measuring the improvement of the productivity of the programmer. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Pereira, Rui Humberto R.] Inst Politecn Porto ISCAP, CICE, Matosinhos, Portugal.
   [Garcia Perez-Schofield, J. Baltasar] Univ Vigo, Dept Informat, Pontevedra, Spain.
   [Ortin, Francisco] Univ Oviedo, Dept Informat, Oviedo, Spain.
C3 Instituto Politecnico do Porto; Universidade de Vigo; University of
   Oviedo
RP Pereira, RHR (corresponding author), Inst Politecn Porto ISCAP, CICE, Matosinhos, Portugal.
EM rhp@iscap.ipp.pt
RI Ortin, Francisco/K-9272-2014; Pereira, Rui Humberto/E-7918-2011; Garcia
   Perez-Schofield, Baltasar/S-1171-2017
OI Ortin, Francisco/0000-0003-1199-8649; Pereira, Rui
   Humberto/0000-0002-9780-3912; Garcia Perez-Schofield,
   Baltasar/0000-0002-0603-2842
CR Al-Mansari M, 2007, P 6 WORKSH ASP COMP
   Al-Mansari M, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P271
   Alagic S, 2008, VLDB J, V17, P847, DOI 10.1007/s00778-006-0042-x
   Aldrich J., 2004, Workshop on foundations of aspect-oriented lan- guages, P7
   Atkinson M.P., 1995, VLDB J, V4, P319
   ATKINSON MP, 1983, COMPUT J, V26, P360, DOI 10.1093/comjnl/26.4.360
   Banerjee J., 1987, SIGMOD Record, V16, P311, DOI 10.1145/38714.38748
   Bartsch M, 2008, SOFTWARE QUAL J, V16, P23, DOI 10.1007/s11219-007-9022-7
   Beine M, BIDIRECTIONAL TRANSF
   Bernstein P.A., 2013, Sigmod conference, P1269, DOI 10.1145/2463676.2465294
   Bloch J, 2004, JSR 175 METADATA FAC, V30
   Clamen SM., 1992, TECHNICAL REPORT
   Clifton C., 2002, SPECTATORS ASSISTANT
   Clifton C., 2002, FOAL WORKSH
   Clifton C., 2003, SPLAT
   Cook W.R., 2005, Native queries for persistent objects, a design white paper
   Corporation V., 2010, Versant object database fundamentals manual
   Curino CA, 2008, PROC VLDB ENDOW, V1, P761, DOI 10.14778/1453856.1453939
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   Dearle A, 2010, LECT NOTES COMPUT SC, V5936, P1
   Deepak Advani, 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1713, DOI 10.1145/1141277.1141685
   Denning PJ, 1997, COMMUN ACM, V40, P132, DOI 10.1145/253671.253755
   Ferrandina F., 1995, VLDB '95. Proceedings of the 21st International Conference on Very Large Data Bases, P170
   Filman R.E., 2000, WORKSH ADV SEP OOPSL
   Gudmundson S, 2001, ADV SEPARATION
   Hanenberg S, 2013, INFORM SOFTWARE TECH, V55, P722, DOI 10.1016/j.infsof.2012.09.005
   Hanenberg S, 2009, INT SYMP EMP SOFTWAR, P156, DOI 10.1109/ESEM.2009.5316028
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hoffman K, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491516
   Kiczales G, 2005, PROC INT CONF SOFTW, P49
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kienzle J, 2002, LECT NOTES COMPUT SC, V2374, P37
   Kusspuswami S., 2007, Proceedings of the 15th International Conference on Advanced Computing and Communications, P35
   Leavens GT, 2007, P 5 WORKSH SOFTW ENG
   Ltd OS, OBJECTDB 2 3 DEV GUI, VAvailable from
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   Monk S., 1993, SIGMOD Record, V22, P16, DOI 10.1145/163090.163094
   Mortensen M, 2012, IEEE T SOFTWARE ENG, V38, P118, DOI 10.1109/TSE.2010.109
   Paterson J., 2006, The Definitive Guide to db4o
   Pereira R.H., 2012, Information Systems and Technologies (CISTI), 2012 7th Iberian Conference, P1
   Pereira Rui Humberto R., 2014, 16th International Conference on Enterprise Information Systems (ICEIS 2014). Proceedings, P308
   Pereira R. H. R., 2011, 2011 6 IB C INF SYST, P1
   Pereira RH, 2014, ADV INTELL SYST, V276, P23, DOI 10.1007/978-3-319-05948-8_3
   Piccioni M, 2011, CORR, V39, P184
   Przybylek A, 2013, EUR CON SFTWR MTNCE, P253, DOI 10.1109/CSMR.2013.34
   Przybylek A, 2011, LECT NOTES COMPUT SC, V6705, P163, DOI 10.1007/978-3-642-21952-8_13
   Rashid A, 2004, LECT NOTES COMPUT SC, V3286, P75
   Rashid A, 2005, J SOFTW MAINT EVOL-R, V17, P93, DOI 10.1002/smr.310
   Rashid A., 2001, IEE Proceedings-Software, V148, P156, DOI 10.1049/ip-sen:20010732
   Rashid A., 2000, Database and expert systems applications. 11th International Conference, DEXA 2000. Proceedings (Lecture Notes in Computer Science Vol.1873), P125
   Rashid A., 2001, Generative and Component-Based Software Engineering. Second International Symposium, GCSE 2000. Revised Papers (Lecture Notes in Computer Science Vol.2177), P26
   Rashid A., 1999, Database and Expert Systems Applications, V1677, P816
   Rashid A., 1998, Workshop ion on Object-Oriented Technology, ECOOP '98, P24
   Rashid A, 2002, WORKSH UN SOFTW EV S
   Rashid A, 2006, WORKSH LINK ASP TECH
   Rashid A, 2006, LECT NOTES COMPUT SC, V4199, P155
   Rashid Awais., 2003, AOSD 03, P120
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Soares S, 2006, SOFTWARE PRACT EXPER, V36, P711, DOI 10.1002/spe.715
   Soares S, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1293, DOI 10.1145/1244002.1244281
   Steimann F, 2005, LECT NOTES COMPUT SC, V3713, P171, DOI 10.1007/11557432_13
   Steimann F, 2004, P EUR INT WORKSH ASP
   Steimann F, 2006, ACM SIGPLAN NOTICES, V41, P481, DOI 10.1145/1167515.1167514
   Storzer Maximilian, 2004, EUR INT WORKSH ASP S
   Terwilliger J.F., 2011, LECT NOTES COMPUTER, V7680, P219, DOI [10.1007/978-3-642-35992-7_6, DOI 10.1007/978-3-642-35992-7_6]
   Tsichritzis D., 1997, Beyond Calculation, P259
NR 66
TC 4
Z9 5
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2017
VL 47
IS 2
BP 193
EP 221
DI 10.1002/spe.2415
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EK2RP
UT WOS:000393774700002
DA 2024-07-18
ER

PT J
AU Solaimani, M
   Iftekhar, M
   Khan, L
   Thuraisingham, B
   Ingram, J
   Seker, SE
AF Solaimani, Mohiuddin
   Iftekhar, Mohammed
   Khan, Latifur
   Thuraisingham, Bhavani
   Ingram, Joe
   Seker, Sadi Evren
TI Online anomaly detection for multi-source VMware using a distributed
   streaming framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE real-time anomaly detection; incremental clustering; resource
   scheduling; data center; Apache Spark; Apache Storm
AB Anomaly detection refers to the identification of patterns in a dataset that do not conform to expected patterns. Such non-conformant patterns typically correspond to samples of interest and are assigned to different labels in different domains, such as outliers, anomalies, exceptions, and malware. A daunting challenge is to detect anomalies in rapid voluminous streams of data. This paper presents a novel, generic real-time distributed anomaly detection framework for multi-source stream data. As a case study, we investigate anomaly detection for a multi-source VMware-based cloud data center, which maintains a large number of virtual machines (VMs). This framework continuously monitors VMware performance stream data related to CPU statistics (e.g., load and usage). It collects data simultaneously from all of the VMs connected to the network and notifies the resource manager to reschedule its CPU resources dynamically when it identifies any abnormal behavior from its collected data. A semi-supervised clustering technique is used to build a model from benign training data only. During testing, if a data instance deviates significantly from the model, then it is flagged as an anomaly. Effective anomaly detection in this case demands a distributed framework with high throughput and low latency. Distributed streaming frameworks like Apache Storm, Apache Spark, S4, and others are designed for a lower data processing time and a higher throughput than standard centralized frameworks. We have experimentally compared the average processing latency of a tuple during clustering and prediction in both Spark and Storm and demonstrated that Spark processes a tuple much quicker than storm on average. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Solaimani, Mohiuddin; Iftekhar, Mohammed; Khan, Latifur; Thuraisingham, Bhavani] Univ Texas Dallas, Dept Comp Sci, Dallas, TX 75080 USA.
   [Ingram, Joe] Sandia Natl Labs, Albuquerque, NM 87123 USA.
   [Seker, Sadi Evren] Istanbul Medeniyet Univ, Dept Business, Istanbul, Turkey.
C3 University of Texas System; University of Texas Dallas; United States
   Department of Energy (DOE); Sandia National Laboratories; Istanbul
   Medeniyet University
RP Solaimani, M (corresponding author), Univ Texas Dallas, Dept Comp Sci, Dallas, TX 75080 USA.
EM mxs121731@utdallas.edu
RI Khan, Latifur/AAE-8134-2021; SEKER, Evren Sadi/HLW-1386-2023; SEKER,
   Sadi Evren/AAG-4911-2019
OI SEKER, Evren Sadi/0000-0002-7323-3695; SEKER, Sadi
   Evren/0000-0002-7323-3695; Khan, Latifur/0000-0002-9300-1576
FU Laboratory Directed Research and Development program at Sandia National
   Laboratories; National Science Foundation (NSF); US Department of
   Energy's National Nuclear Security Administration [DE-AC04-94AL85000];
   NSF [CNS 1229652, DUE 1129435]; Direct For Computer & Info Scie &
   Enginr; Division Of Computer and Network Systems [1229652] Funding
   Source: National Science Foundation
FX Funding for this work was partially supported by the Laboratory Directed
   Research and Development program at Sandia National Laboratories and The
   National Science Foundation (NSF). Sandia National Laboratories is a
   multi-program laboratory managed and operated by Sandia Corporation, a
   wholly owned subsidiary of Lockheed Martin Corporation, for the US
   Department of Energy's National Nuclear Security Administration under
   contract DE-AC04-94AL85000. NSF grant is contracted under NSF award No.
   CNS 1229652 and NSF Award No. DUE 1129435.
CR Abuaitah G., 2013, THESIS
   [Anonymous], 2013, P 2013 WORKSH DATA M
   [Anonymous], 2005, Wiley series in probability and statistics
   Assent Ira, 2012, Database Systems for Advanced Applications. Proceedings of the 17th International Conference, DASFAA 2012, P228, DOI 10.1007/978-3-642-29038-1_18
   Balaji B., 2014, 2014 INT RADAR C, P1
   Camacho J, 2014, IEEE CONF COMPUT, P500, DOI 10.1109/INFCOMW.2014.6849282
   Chang F, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1365815.1365816
   Charikar M, 2004, SIAM J COMPUT, V33, P1417, DOI 10.1137/S0097539702418498
   Cooper Brian F., 2010, P 1 ACM S CLOUD COMP, P143, DOI [DOI 10.1145/1807128.1807152, 10.1145/1807128.1807152]
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Frey E., 2009, BashReduce
   Hayes MA, 2014, IEEE INT CONGR BIG, P64, DOI 10.1109/BigData.Congress.2014.19
   Janeja VP, 2014, BIG DAT BIG DAT 2014, P32
   Kumar Tan, 2005, INTRO DATA MINING
   Lee W, 2001, DISCEX'01: DARPA INFORMATION SURVIVABILITY CONFERENCE & EXPOSITION II, VOL I, PROCEEDINGS, P89, DOI 10.1109/DISCEX.2001.932195
   Mustafa A, 2014, 10 ANN IFIP WG11 9 I
   Mustafa A, 2014, 2014 INTERNATIONAL CONFERENCE ON COLLABORATIVE COMPUTING: NETWORKING, APPLICATIONS AND WORKSHARING (COLLABORATECOM), P154, DOI 10.4108/icst.collaboratecom.2014.257769
   Savage D, 2014, SOC NETWORKS, V39, P62, DOI 10.1016/j.socnet.2014.05.002
   Solaimani M, 2014, 2014 IEEE 15TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P458, DOI 10.1109/IRI.2014.7051925
   Solaimani M, 2014, 2014 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN CYBER SECURITY (CICS), P66
   Yao YA, 2010, PERFORM EVALUATION, V67, P1059, DOI 10.1016/j.peva.2010.08.018
   Yu L., 2013, ACM Cloud and Autonomic Computing Conference CAC, P22
   Zaharia M., 2012, Proceedings of the 4th USENIX Conference on Hot Topics in Cloud Ccomputing, HotCloud'12, P10
   Zaharia Matei., 2012, NSDI 12
   Zaharia Zaharia M. M., Login: The Usenix Magazine, V37 37, P45
NR 25
TC 9
Z9 10
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2016
VL 46
IS 11
BP 1479
EP 1497
DI 10.1002/spe.2390
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DZ8VK
UT WOS:000386150000003
DA 2024-07-18
ER

PT J
AU Chambi, S
   Lemire, D
   Kaser, O
   Godin, R
AF Chambi, Samy
   Lemire, Daniel
   Kaser, Owen
   Godin, Robert
TI Better bitmap performance with Roaring bitmaps
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance; measurement; index compression; bitmap index
AB Bitmap indexes are commonly used in databases and search engines. By exploiting bit-level parallelism, they can significantly accelerate queries. However, they can use much memory, and thus, we might prefer compressed bitmap indexes. Following Oracle's lead, bitmaps are often compressed using run-length encoding (RLE). Building on prior work, we introduce the Roaring compressed bitmap format: it uses packed arrays for compression instead of RLE. We compare it to two high-performance RLE-based bitmap encoding techniques: Word Aligned Hybrid compression scheme and Compressed n' Composable Integer Set. On synthetic and real data, we find that Roaring bitmaps (1) often compress significantly better (e.g., 2x) and (2) are faster than the compressed alternatives (up to 900x faster for intersections). Our results challenge the view that RLE-based bitmap compression is best. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Chambi, Samy] Univ Quebec Montreal, Dept Informat, Montreal, PQ, Canada.
   [Lemire, Daniel; Godin, Robert] TELUQ, LICEF Res Ctr, Montreal, PQ, Canada.
   [Kaser, Owen] UNB St John, Comp Sci & Appl Stat, St John, NB, Canada.
C3 University of Quebec; University of Quebec Montreal; University of
   Quebec; Universite TELUQ
RP Lemire, D (corresponding author), Univ Quebec, LICEF Res Ctr, TELUQ, 5800 St Denis,Off 1105, Montreal, PQ H2S 3L5, Canada.
EM lemire@gmail.com
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922
CR [Anonymous], 2013, HACKERS DELIGHT
   Antoshenkov G., 1995, BYT ALIGNED BITMAP C, P476
   Beyer K, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P359, DOI 10.1145/304181.304214
   Colantonio A, 2010, INFORM PROCESS LETT, V110, P644, DOI 10.1016/j.ipl.2010.05.018
   Corrales Fabian, 2011, Database and Expert Systems Applications. Proceedings 22nd International Conference, DEXA 2011, P381, DOI 10.1007/978-3-642-23091-2_32
   Culpepper JS, 2010, ACM T INFORM SYST, V29, DOI 10.1145/1877766.1877767
   Fusco F, 2010, PROC VLDB ENDOW, V3, P1382, DOI 10.14778/1920841.1921011
   Grand A, 2014, LUCENE5983
   Guzun G, 2014, PROC INT CONF DATA, P484, DOI 10.1109/ICDE.2014.6816675
   Inoue H, 2014, P VLDB ENDOWMENT, V8
   Kaser O, 2006, INFORM SCIENCES, V176, P2304, DOI 10.1016/j.ins.2005.09.005
   Kaser O, 2016, SOFTWARE PRACT EXPER, V46, P167, DOI 10.1002/spe.2289
   Lemire D., 2015, Software: Practice and Experience, V45, P1, DOI 10.1002/spe.2203
   Lemire D., 2014, SIMD COMPRESSION INT
   Lemire D, 2012, ACM T DATABASE SYST, V37, DOI 10.1145/2338626.2338633
   Lemire D, 2010, DATA KNOWL ENG, V69, P3, DOI 10.1016/j.datak.2009.08.006
   O'Neil E, 2007, INT DATABASE ENG APP, P72
   Polychroniou O., 2014, Proceedings of the Tenth International Workshop on Data Management on New Hardware - DaMoN '14 (New York, New York, USA, 2014), P1, DOI DOI 10.1145/2619228.2619234
   Rinfret D, 2001, SIGMOD RECORD, V30, P47, DOI 10.1145/376284.375669
   Wu K, 2008, BREAKING CURSE CARDI, P348
   Yang FJ, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P157, DOI 10.1145/2588555.2595631
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
NR 22
TC 70
Z9 80
U1 4
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2016
VL 46
IS 5
BP 709
EP 719
DI 10.1002/spe.2325
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ3YV
UT WOS:000374143500007
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Ashraf, J
   Hussain, OK
   Hussain, FK
AF Ashraf, Jamshaid
   Hussain, Omar Khadeer
   Hussain, Farookh Khadeer
TI Making sense from Big RDF Data: OUSAF for measuring ontology usage
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Big Data analytics; Big RDF Data; ontology usage analysis; usage
   analytics
ID SEMANTIC-WEB
AB Recent growth and advancements in the Semantic Web have shifted the research focus from being knowledge-centered to data-centered. This has led to the increased use of ontologies to structurally represent the data, thereby generating huge amounts of RDF data, which we term Big RDF Data. Nevertheless, the literature lacks the tools to analyze Big RDF Data and make sense of it. Access to such tools would enable pragmatic inputs and insights for users in respect of such tasks as the usage and adoption of Ontologies, their uptake by different users in the community, and the identification of prevalent patterns. This analysis, which we term Ontology Usage, is important from the viewpoint of users who need informed inputs in the various stages of the ontology engineering lifecycle, such as ontology evolution, ontology population, and ontology deployment. In this paper, we propose the Ontology USage Analysis Framework (OUSAF), which performs analysis of Ontology Usage on Big RDF Data and synthesizes the usage knowledge acquired. OUSAF provides a methodological approach to performing the various phases such as identifying, analyzing, representing, and utilizing the Ontology usage results from Big RDF Data. We describe in detail each of those phases and the metrics required to perform the analysis of each phase. The utilization of the OUSAF results obtained by users such as data publishers and ontology developers is demonstrated by a dataset collected in the e-business domain. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Ashraf, Jamshaid] Curtin Univ, Sch Informat Syst, Curtin Business Sch, Perth, WA 6107, Australia.
   [Hussain, Omar Khadeer] Australian Def Force Acad, Sch Business, UNSW Canberra, Canberra, ACT 2601, Australia.
   [Hussain, Farookh Khadeer] Univ Technol Sydney, Decis Support & E Serv Intelligence Lab, Quantum Computat & Intelligent Syst, Sch Software,Fac Engn & Informat Technol, Sydney, NSW 2007, Australia.
C3 Curtin University; Australian Defense Force Academy; University of New
   South Wales Sydney; University of Technology Sydney
RP Hussain, FK (corresponding author), Univ Technol Sydney, Decis Support & E Serv Intelligence Lab, Quantum Computat & Intelligent Syst, Sch Software,Fac Engn & Informat Technol, Sydney, NSW 2007, Australia.
EM Farookh.Hussain@uts.edu.au
RI Hussain, Omar/R-3326-2019
OI Hussain, Omar/0000-0002-5738-6560
CR [Anonymous], 2003, Journal of Web Semantics
   [Anonymous], PELLET OWL DL REASON
   [Anonymous], 2005, P C DAT MIN DAT WAR
   Ashraf Jamshaid, 2013, Web Technologies and Applications. 15th Asia-Pacific Web Conference, APWeb 2013. Proceedings, P19, DOI 10.1007/978-3-642-37401-2_5
   Ashraf J, 2011, CEUR WORKSHOP P, V813, P1
   Ashraf J, 2013, THESIS
   Ashraf J, 2014, CONCURR COMP-PRACT E, V26, P1157, DOI 10.1002/cpe.3089
   Ashraf J, 2013, COMPUT J, V56, P1083, DOI 10.1093/comjnl/bxs134
   Berners-Lee T., 2011, TIMES 1231, P1
   Borgatti S, 2011, The Sage handbook of social network analysis, P1, DOI DOI 10.4135/9781446294413.N28
   Breslin J. G., 2006, International Journal of Web Based Communities, V2, P133
   Cheng G, 2011, LECT NOTES COMPUT SC, V7031, P98, DOI 10.1007/978-3-642-25073-6_7
   d'Aquin M, 2012, J WEB SEMANT, V11, P96, DOI 10.1016/j.websem.2011.08.005
   Dasgupta S, 2007, P 5 INT WORKSH EV ON, V329, P31
   Ding L., 2010, Proceedings of the 19th International Conference on World Wide Web, P1383
   Ding L., 2004, P 13 ACM INT C INF K, P652, DOI DOI 10.1145/1031171.1031289
   Ding L, 2006, LECT NOTES COMPUT SC, V4273, P242
   Gradmann S, 2005, CAT CLASSIF Q, V39, P63, DOI 10.1300/J104v39n03_05
   Guarino N, 2003, IN HAND I S, P151
   Heath  T., 2011, SYNTHESIS LECT SEMAN, DOI [10.2200/S00334ED1V01Y201102WBE001, DOI 10.2200/S00334ED1V01Y201102WBE001, 10.2200/s00334ed1v01y201102wbe001]
   Hepp M, 2008, LECT NOTES ARTIF INT, V5268, P329, DOI 10.1007/978-3-540-87696-0_29
   Hitzler P, 2013, SEMANT WEB, V4, P233, DOI 10.3233/SW-130117
   Isele R., 2010, P INT SEM WEB C ISWC, V658, P29
   Li X, 2014, INT J INFORM MANAGE, V34, P319, DOI 10.1016/j.ijinfomgt.2013.11.007
   Martinez-Prieto Miguel A., 2012, The Semantic Web: Research and Applications. Proceedings 9th Extended Semantic Web Conference (ESWC 2012), P437, DOI 10.1007/978-3-642-30284-8_36
   Mizoguchi R, 1996, AITR961 OS U I SCI I
   OpenLink Software, 2009, OPENLINK SOFTWARE VI
   Raimond Y., 2007, P 8 INT C MUSIC INFO, P417
   Staab S, 2001, IEEE INTELL SYST APP, V16, P26, DOI 10.1109/5254.912382
   Steiner RTT, 2010, P WORKSH LINK DAT FU, V700, P1
   Stojanovic Ljiljana., 2004, METHODS TOOLS ONTOLO
   Zablith F, 2009, WORKSH MATCH MEAN AR
   Zimmermann A., 2010, P 1 WORKSH ONT REP C, V596, P1
NR 33
TC 7
Z9 7
U1 0
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2015
VL 45
IS 8
SI SI
BP 1051
EP 1071
DI 10.1002/spe.2272
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM6JB
UT WOS:000357793500003
DA 2024-07-18
ER

PT J
AU Han, S
   Jin, HW
AF Han, Sanghyun
   Jin, Hyun-Wook
TI Resource partitioning for Integrated Modular Avionics: comparative study
   of implementation alternatives
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ARINC 653; Integrated Modular Avionics; Linux; partitioning;
   virtualization
ID SYSTEMS
AB Most current generation avionics systems are based on a federated architecture, where an electronic device runs a single software module or application that collaborates with other devices through a network. This architecture makes the software development process very simple, but the hardware system becomes very complicated and it is difficult to resolve issues of size, weight, and power efficiently. An integrated architecture can address the size, weight, and power issues and provide better software reusability, testability, and reliability by means of partitioning. Partitioning provides a framework that can transparently integrate several real-time applications on the same computing device, allowing the isolation of the execution environment in terms of resources and faults. Several studies on partitioning software platforms have been reported; however, to the best of our knowledge, extensive comparison and analysis of design and implementation alternatives have not been conducted owing to the extreme complexity of their implementation and measurement. In this paper, we present three design alternatives for partitioning at the user, kernel, and virtual machine monitor levels, which are compared quantitatively. In particular, we target the worldwide standard software platform for avionics systems, that is, Aeronautical Radio, Incorporated Specification 653 (ARINC 653). Overall, our study provides valuable design references and demonstrates the characteristics of design alternatives. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Han, Sanghyun; Jin, Hyun-Wook] Konkuk Univ, Dept Comp Sci & Engn, Seoul 143701, South Korea.
C3 Konkuk University
RP Jin, HW (corresponding author), Konkuk Univ, Dept Comp Sci & Engn, 1 Hwayang Dong, Seoul 143701, South Korea.
EM jinh@konkuk.ac.kr
FU Basic Science Research Program [2012-0001671]; National Space Lab
   Program through the National Research Foundation - Ministry of
   Education, Science and Technology [2012-0006617]
FX This research was supported by the Basic Science Research Program
   (#2012-0001671) and the National Space Lab Program (#2012-0006617)
   through the National Research Foundation funded by the Ministry of
   Education, Science and Technology.
CR Adams K, 2006, ACM SIGPLAN NOTICES, V41, P2, DOI 10.1145/1168918.1168860
   [Anonymous], 2005, 653P12 ARINC
   [Anonymous], 2008, 653P21 ARINC
   [Anonymous], 2012, REAL TIME SYSTEMS AR
   [Anonymous], P IEEE AIAA 26 DIG A
   *ARINC, 1991, 651 ARINC
   Asberg M, 2009, P 14 IEEE INT C EM T
   Åsberg M, 2011, IEEE INT C EMERG
   Automotive open system architecture, 2012, AUTOSAR SPEC REL 4 0
   Baker J, 2006, PROCEEDINGS OF THE 12TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, P384
   Barham P., 2003, Operating Systems Review, V37, P164, DOI 10.1145/1165389.945462
   Behnam M., 2008, P 4 INT WORKSH OP SY, P63
   Calandrino JM, 2006, REAL TIM SYST SYMP P, P111, DOI 10.1109/RTSS.2006.27
   Camargos F., 2008, 2008 Linux Symposium, P63
   Davis RI, 2005, P 26 IEEE INT S REAL, P388
   DENG Z, 1997, P 9 EUR WORKSH REAL
   Di Natale M, 2010, P IEEE, V98, P603, DOI 10.1109/JPROC.2009.2039550
   Dingding Li, 2010, Journal of Software, V5, P206, DOI 10.4304/jsw.5.2.206-213
   Dubey A, 2011, SOFTWARE PRACT EXPER, V41, P1517, DOI 10.1002/spe.1083
   Edgar P, 2008, P EUR DAT SYST AER C
   Eswaran A, 2005, EUROMICRO, P11, DOI 10.1109/ECRTS.2005.14
   Faggioli D, 2009, P REAL TIM LIN WORKS
   Goiffon S, 2004, INT FED INFO PROC, V156, P719
   Han S, 2012, P 27 ACM INT S APPL, P781
   Han S, 2011, P 30 IEEE AIAA DIG A
   Haomiao Huang, 2009, 2009 IEEE International Conference on Robotics and Automation (ICRA), P3277, DOI 10.1109/ROBOT.2009.5152561
   Hartig H, 1998, P 5 ANN AUSTR C PAR
   Hergenhan A, 2008, P 6 EMB SEC CARS C N
   Heuvel M, 2010, P INT WORKSH OP SYST, P71
   Hong WE, 2005, 11th IEEE International Conference on Embedded and Real-Time Computing Systems and Applications, Proceedings, P555
   Inam R, 2011, P IEEE INT C EM TECH
   Jin H-W, 2011, P 16 IEEE INT C EM T
   Kim S-P, 2006, P 25 IEEE AIAA DIG A
   King S, 2003, P INT C USENIX ANN T
   Leiner B, 2007, LECT NOTES COMPUT SC, V4680, P342
   Locke CDouglass., 1990, Generic avionics software specification
   Masmano M, 2009, P REAL TIM LIN WORKS
   Navet N, VIRTUALIZATION AUTOM
   Netter T, 2002, 2002 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS, VOLS 1-3, PROCEEDINGS, P129, DOI 10.1109/IRDS.2002.1041376
   Oh S-C, 2010, P INT C CLOUD COMP G
   Oikawa S, 1999, PROCEEDINGS OF THE FIFTH IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, P111, DOI 10.1109/RTTAS.1999.777666
   Palopoli L, 2009, SOFTWARE PRACT EXPER, V39, P1, DOI 10.1002/spe.883
   *RTCA INC, 1992, DO178B RTCA INC
   Rufino J, 2009, P DAT SYST AER C MAY
   Saewong S, 2002, P 14 EUR C REAL TIM
   Schoofs T, 2009, P 28 IEEE AIAA DIG A, DOI DOI 10.1109/DASC.2009.5347582
   Shin I, 2003, RTSS 2003: 24TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P2, DOI 10.1109/REAL.2003.1253249
   Sung-Moon Chung, 2010, Proceedings 2010 IEEE/IFIP 8th International Conference on Embedded and Ubiquitous Computing (EUC 2010), P791, DOI 10.1109/EUC.2010.134
   Tei-Wei Kuo, 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P256, DOI 10.1109/REAL.1999.818851
   VanderLeest SH, 2010, IEEEAAIA DIGIT AVION
   Yang J, 2010, P WORKSH COMP THEOR
   Yodaiken V, 1997, P LIN APPL DEV DEPL
   Yun H, 2013, P IEEE REAL TIM EMB
   Zang H, 2009, P 9 IEEE INT C COMP, P396
NR 54
TC 11
Z9 12
U1 0
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2014
VL 44
IS 12
BP 1441
EP 1466
DI 10.1002/spe.2210
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AT2AR
UT WOS:000344733600002
DA 2024-07-18
ER

PT J
AU Mistry, J
   Naylor, M
   Woodcock, J
AF Mistry, James
   Naylor, Matthew
   Woodcock, Jim
TI Adapting FreeRTOS for multicores: an experience report
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE embedded systems; operating systems; multicore computing; task
   scheduling; software-based mutual exclusion; field-programmable gate
   arrays
AB Multicore processors are ubiquitous. Their use in embedded systems is growing rapidly, and given the constraints on uniprocessor clock speeds, their importance in meeting the demands of increasingly processor-intensive embedded applications cannot be understated. To harness this potential, system designers need to have available to them embedded operating systems with built-in multicore support for widely available embedded hardware. This paper documents our experience of adapting FreeRTOS, a popular embedded real-time operating system, to support multiple processors. A working multicore version of FreeRTOS that is able to schedule tasks on multiple processors as well as provide full mutual-exclusion support for use in concurrent applications is presented. Mutual exclusion is achieved in an almost completely platform-agnostic manner, preserving one of FreeRTOS's most attractive features: portability. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Mistry, James] British Telecommun PLC, Ipswich IP5 3RE, Suffolk, England.
   [Naylor, Matthew; Woodcock, Jim] Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
C3 British Telecom (BT); University of York - UK
RP Mistry, J (corresponding author), British Telecommun PLC, Adastral Pk, Ipswich IP5 3RE, Suffolk, England.
EM james.mistry@bt.com
OI Woodcock, James/0000-0001-7955-2702
FU EPSRC [EP/H017461/1, EP/G061947/1, EP/E025366/1] Funding Source: UKRI
CR Agrons J, 2011, CREATE PROGRAM INTER
   Alagarsamy K, 2005, INFORM PROCESS LETT, V96, P36, DOI 10.1016/j.ipl.2005.05.015
   Andrews D., 2005, Proceedings of the 1st International Workshop Operating System Platforms for Embedded Real-Time Applications (OSPERT'05) in conjunction with the 17th Euromicro International Conference on Real-Time Systems (ECRTS'05), P13
   BLOCK K, 1990, INFORM PROCESS LETT, V35, P219, DOI 10.1016/0020-0190(90)90048-3
   ChibiOS/RT, 2011, RTOS CONC
   Chynoweths M, 2011, IMPLEMENTING SCALABL
   Hofri M., 1990, Operating Systems Review, V24, P18, DOI 10.1145/90994.91002
   Huerta Pablo, 2008, 2008 International Conference on Reconfigurable Computing and FPGAs (ReConFig), P157, DOI 10.1109/ReConFig.2008.43
   Laplantes PA, 2004, REAL TIME SYSTEMS DE
   Lomass N, 2011, DUAL CORE SMARTPHONE
   Microsoft, 2011, SETTHREADAFFINITYMAS
   Mistrys J, 2011, THESIS U YORK
   PETERSON GL, 1981, INFORM PROCESS LETT, V12, P115, DOI 10.1016/0020-0190(81)90106-X
   Real Time Engineers Limited, 2011, TASK PRIOR
   Real Time Engineers Limited, 2011, INTR FREERTOS
   STANKOVIC JA, 1988, COMPUTER, V21, P10, DOI 10.1109/2.7053
   Xilinx Inc., 2013, MICROBLAZE PROC REF
   Xilinx Inc, 2011, XPS MUT DOC
NR 18
TC 8
Z9 9
U1 2
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2014
VL 44
IS 9
BP 1129
EP 1154
DI 10.1002/spe.2188
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN2MI
UT WOS:000340419100005
DA 2024-07-18
ER

PT J
AU Ortin, F
   Mendez, S
   García-Díaz, V
   Garcia, M
AF Ortin, Francisco
   Mendez, Sheila
   Garcia-Diaz, Vicente
   Garcia, Miguel
TI On the suitability of dynamic languages for hot-reprogramming a robotics
   framework: a Python case study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
ID PERFORMANCE; MACHINE; SYSTEMS; SUPPORT
C1 [Ortin, Francisco; Garcia-Diaz, Vicente; Garcia, Miguel] Univ Oviedo, Dept Comp Sci, Oviedo 33007, Spain.
   [Mendez, Sheila] B2B 2000, Dept Res & Dev, El Entrego 33940, Spain.
C3 University of Oviedo
RP Ortin, F (corresponding author), Univ Oviedo, Dept Comp Sci, Calvo Sotelo S-N, Oviedo 33007, Spain.
EM francisco.ortin@gmail.com
RI Ortin, Francisco/K-9272-2014; Garcia-Diaz, Vicente/T-3938-2017; Garcia
   Rodriguez, Miguel/I-1594-2015
OI Ortin, Francisco/0000-0003-1199-8649; Garcia-Diaz,
   Vicente/0000-0003-2037-8548; Garcia Rodriguez,
   Miguel/0000-0002-3150-2826
FU Department of Science and Technology (Spain) [TIN2011-25978]; Spanish
   Ministry of Industry, Tourism and Commerce [TSI-020100-2008-235]
FX This work has been funded by the Department of Science and Technology
   (Spain) under the National Program for Research, Development and
   Innovation, project TIN2011-25978 entitled Obtaining Adaptable, Robust
   and Efficient Software by including Structural Reflection to Statically
   Typed Programming Languages. It has also been funded by the Spanish
   Ministry of Industry, Tourism and Commerce (TSI-020100-2008-235) with
   the project entitled TIC4BOT - Research and Development in the
   application of Information and Communication Technologies in Social
   Robotics: Health sector.
CR Almudena Garcia Fuente A. M. P., 2009, Proceedings of the 2009 International Conference on Artificial Intelligence. ICAI 2009, P823
   [Anonymous], 1995, TECHNICAL REPORT
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2011, URB US MAN
   Beazley D.M., 1996, USENIX TCLTK C, P15
   BLANK D, 2003, J ED RESOURCES COMPU, V3, P1, DOI DOI 10.1145/1047568.1047569
   Bordignon M, 2009, IEEE INT CONF ROBOT, P3792
   Boren J, 2010, IEEE ROBOT AUTOM MAG, V17, P18, DOI 10.1109/MRA.2010.938836
   Bruyninckx H, 2001, IEEE INT CONF ROBOT, P2523, DOI 10.1109/ROBOT.2001.933002
   EDWARDS WK, 2001, CORE JINI
   Eng K, 2005, IEEE T SYST MAN CY A, V35, P66, DOI 10.1109/TSMCA.2004.838467
   Friedman-Hill E, 1997, JESS MANUAL
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia-Diaz Vicente, 2009, Proceedings of the 2009 International Conference on Artificial Intelligence. ICAI 2009, P833
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Gerkey BP, 2003, PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON ADVANCED ROBOTICS 2003, VOL 1-3, P317
   Gessler DDG, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-309
   Grogan M, 2006, JSR 223 SCRIPTING JA, Vfinal
   Jorgensen M. W., 2004, 2004 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) (IEEE Cat. No.04CH37566), P2068
   Kazi IH, 2000, ACM COMPUT SURV, V32, P213, DOI 10.1145/367701.367714
   Kim H, 2005, 2005 IEEE Workshop on Advanced Robotics and its Social Impacts, P237
   Krzysztof CzarneckiUlrich W. Eisenecker., 2000, Generative programming: methods, tools, and applications
   Lacey G, 2000, INT J ROBOT RES, V19, P1054, DOI 10.1177/02783640022067968
   Lei H, 2005, INTERNATIONAL WORKSHOP ON UBIQUITOUS DATA MANAGEMENT, PROCEEDINGS, P43
   MAES P, 1987, THESIS VRIJE U BRUSS
   Makarenko A., 2006, International Conference on Intelligent Robots and Systems, Beijing, China, P163
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Niemueller T, 2010, LECT NOTES ARTIF INT, V6472, P300, DOI 10.1007/978-3-642-17319-6_29
   Oracle, 2012, JAV HOTSPOT PERF ENG
   Orebäck A, 2003, AUTON ROBOT, V14, P33, DOI 10.1023/A:1020975419546
   Ortin F, 2005, INFORM SOFTWARE TECH, V47, P81, DOI 10.1016/j.infsof.2004.06.002
   Ortin F, 2004, IEEE SOFTWARE, V21, P41, DOI 10.1109/MS.2004.52
   Ortin F, 2004, J SYST SOFTWARE, V71, P229, DOI 10.1016/S0164-1212(02)00157-7
   Ortin F, 2010, IET SOFTW, V4, P268, DOI 10.1049/iet-sen.2009.0070
   Ortin F, 2002, THESIS U OVIEDO
   Ortin F, 2011, TIC4BOT SUITABILITY
   Ortin F, 2009, SCI COMPUT PROGRAM, V74, P836, DOI 10.1016/j.scico.2009.04.001
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pineau J, 2003, ROBOT AUTON SYST, V42, P271, DOI 10.1016/S0921-8890(02)00381-0
   Quigley M., 2009, P ICRA WORKSH OP SOU, V3, P1
   Röning J, 2001, PROC SPIE, V4572, P504, DOI 10.1117/12.444221
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   SCHILIT BN, 1994, IEEE NETWORK, V8, P22, DOI 10.1109/65.313011
   Schlegel C., 1999, Proceedings 1999 IEEE/RSJ International Conference on Intelligent Robots and Systems. Human and Environment Friendly Robots with High Intelligence and Emotional Quotients (Cat. No.99CH36289), P1610, DOI 10.1109/IROS.1999.811709
   Shlegel C., 2006, International Journal of Advanced Robotic Systems, V3, P49
   Smach, 2012, SMACH PACK
   Steck A., 2010, P INT WORKSH DYN LAN, P274
   Tenorth M, 2012, IEEE INT CONF ROBOT, P1284, DOI 10.1109/ICRA.2012.6224812
   Tiobe Software, 2012, TIOB PROGR COMM IND
   Urbi, 2011, URB FORG
   Van Rossum G., 1995, Centrum voor Wiskunde en Informatica
   W3C, 2009, OWL WEB ONTOLOGY LAN
   W3C, 2007, SOAP VERS 1 2 0
   Waibel M, 2011, IEEE ROBOT AUTOM MAG, V18, P69, DOI 10.1109/MRA.2011.941632
   Zhang P, 2006, 2005 IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND BIOMIMETICS, P410
NR 55
TC 2
Z9 2
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2014
VL 44
IS 1
BP 77
EP 104
DI 10.1002/spe.2162
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 271VL
UT WOS:000328419600004
DA 2024-07-18
ER

PT J
AU Gui, N
   De Florio, V
   Holvoet, T
AF Gui, Ning
   De Florio, Vincenzo
   Holvoet, Tom
TI Transformer: an adaptation framework supporting contextual adaptation
   behavior composition
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic behavior composition; architecture-based adaptation;
   context-awareness; service-oriented middleware
ID AWARE DEPLOYMENT; SERVICE
AB As software systems today increasingly operate in changing and complex environments, they are expected to dynamically adapt to the changing environments sometimes with multiple coexisting adaptation goals. In this paper, an adaptation framework to facilitate adaptation with multiple concerns by using reusable and composable adaptation modules is proposed. Rather than using one-size-fits-all approach, in this framework, system global adaptation behavior is generated by contextually fusing adaptation plans from multiple adaptation modules. In order to handle possible conflicts from multiple adaptation plans, supports for conflict detection and resolution are provided. Following the framework design principles, a supporting middleware is implemented based on the service-oriented component model. Adaptation behaviors are realized as individually deployable adaptation components. A strategy called normalized context matching degree is proposed to rate and select applicable adaptation components. Possible conflicts in dealing with multiple adaptation concerns are resolved by using the semantics of actuators and context conditions. This middleware is also designed to be readily reconfigurable to support new features. Case studies and experiment results show that our framework exhibits significant advantage over traditional approaches in light of flexibility and reusability of the adaptation modules, with little complexity and performance overhead. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Gui, Ning] ZSTU, Dept Comp Sci, Hangzhou, Zhejiang, Peoples R China.
   [De Florio, Vincenzo] Univ Antwerp, Performance Anal Telecommun Syst Grp, B-2020 Antwerp, Belgium.
   [Gui, Ning; Holvoet, Tom] Univ Leuven, Distrinet Lab, Louvain, Belgium.
C3 Zhejiang Sci-Tech University; University of Antwerp; KU Leuven
RP Gui, N (corresponding author), ZSTU, Dept Comp Sci, Hangzhou, Zhejiang, Peoples R China.
EM ninggui@gmail.com
RI ; Holvoet, Tom/A-3649-2015
OI De Florio, Vincenzo/0000-0003-1443-9367; Holvoet,
   Tom/0000-0003-1304-3467
FU Zhejiang Provincial Natural Science foundation of China [Y1100289,
   Y1100726, Y12F020194]; Science Technology Department of Zhejiang
   Province [2011C33G2060108]; IBBT (the Interdisciplinary Institute for
   Broadband Technology)
FX This work is partially supported by the Zhejiang Provincial Natural
   Science foundation of China under Grant
   No,Y1100289,Y1100726,Y12F020194,and Science Technology Department of
   Zhejiang Province Grant No. 2011C33G2060108. This work is partially
   supported by IBBT (the Interdisciplinary Institute for Broadband
   Technology), an independent research institute founded by the Flemish
   government.
CR Boner J, 2010, ASPECTWERKZ SIMPLE H
   Capra L, 2003, IEEE T SOFTWARE ENG, V29, P929, DOI 10.1109/TSE.2003.1237173
   Cervantes H, 2004, PROC INT CONF SOFTW, P614, DOI 10.1109/ICSE.2004.1317483
   Cheng S.-W, 2008, CMUISR08113
   De Win B, 2004, P INT WORKSH SOFTW E
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Fujii K, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516536
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Goldsack Patrick, 2009, Operating Systems Review, V43, P16, DOI 10.1145/1496909.1496915
   Gu T, 2005, J NETW COMPUT APPL, V28, P1, DOI 10.1016/j.jnca.2004.06.002
   Gui N, 2008, P 7 WORKSH AD REFL M
   Gui N, 2011, J SYST SOFTWARE, V84, P185, DOI 10.1016/j.jss.2010.09.017
   Gui N, 2009, LECT NOTES COMPUT SC, V5873, P325
   Gui N, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P502, DOI 10.1109/SEAA.2009.43
   Gui N, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P1590
   Hall R. S., 2003, Software Engineering Notes, V28, P379, DOI 10.1145/949952.940126
   ISO/IEC, 2000, 9126 ISOIEC TR
   Jain R, 2004, IEEE MULTIMEDIA, V11, P96, DOI 10.1109/MMUL.2004.1261114
   Janik A, 2010, INFORM SOFTWARE TECH, V52, P380, DOI 10.1016/j.infsof.2009.10.006
   Kasten EP, 2004, 24TH INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P332, DOI 10.1109/ICDCSW.2004.1284051
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kon F, 2005, SOFTWARE PRACT EXPER, V35, P667, DOI 10.1002/spe.654
   Kwon J, 2006, J INTELL INF SYST, V26, P149, DOI 10.1007/s10844-006-0199-1
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Montes-y-Gómez M, 2000, LECT NOTES ARTIF INT, V1793, P548
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   OSGi, 2007, DECL SERV SPEC
   POPOVICI A., 2002, P 1 INT C ASPECT ORI, P141
   Restivo A, 2007, P 5 WORKSH SOFTW ENG
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Sicard S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P101, DOI 10.1145/1368088.1368103
   Springer T., 2006, P INT C AUT AUT SYST, P41
NR 34
TC 4
Z9 4
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2013
VL 43
IS 8
SI SI
BP 937
EP 967
DI 10.1002/spe.2137
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 279UM
UT WOS:000328984900003
OA Green Published
DA 2024-07-18
ER

PT J
AU Plebani, P
   Cappiello, C
   Comuzzi, M
   Pernici, B
   Yadav, S
AF Plebani, Pierluigi
   Cappiello, Cinzia
   Comuzzi, Marco
   Pernici, Barbara
   Yadav, Sandeep
TI MicroMAIS: executing and orchestrating Web services on constrained
   mobile devices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobile information systems; WS-BPEL; micro application server
AB Mobile devices with their more and more powerful resources allow the development of mobile information systems in which services are not only provided by traditional systems but also autonomously executed and controlled in the mobile devices themselves. Services distributed on autonomous mobile devices allow both the development of cooperative applications without a back-end infrastructure and the development of applications blending distributed and centralized services. In this paper, we propose MicroMAIS: an integrated platform for supporting the execution of Web service-based applications natively on a mobile device. The MicroMAIS platform is composed of mAS and mu-BPEL. The former allows the execution of a single Web service, whereas the latter permits the orchestration of several Web services according to the WS-BPEL standard. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Plebani, Pierluigi] Politecn Milan, Dipartimento Elettron & Informaz, I-20133 Milan, Italy.
   [Comuzzi, Marco] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [Yadav, Sandeep] Texas A&M Univ, College Stn, TX 77843 USA.
C3 Polytechnic University of Milan; Eindhoven University of Technology;
   Texas A&M University System; Texas A&M University College Station
RP Plebani, P (corresponding author), Politecn Milan, Dipartimento Elettron & Informaz, Piazza Leonardo da Vinci 32, I-20133 Milan, Italy.
EM plebani@elet.polimi.it
RI ; Pernici, Barbara/C-1035-2016
OI PLEBANI, PIERLUIGI/0000-0001-8245-226X; Comuzzi,
   Marco/0000-0002-6944-4705; Pernici, Barbara/0000-0002-2034-9774;
   CAPPIELLO, CINZIA/0000-0001-6062-5174
FU European Community [215483]
FX The authors would like to thank all the students who helped them in
   developing mAS and mu-BPEL. A special thanks to Matteo Galli, Giovanni
   Furnari, Tommaso Codella, Paola Sandrinelli, and Matteo Sansalone. This
   work has been partially funded by the European Community's Seventh
   Framework Programme FP7/2007-2013 under grant agreement 215483 (S-Cube).
CR AlShahwan Feda, 2010, Proceedings of the Fifth International Conference on Internet and Web Applications and Services (ICIW 2010), P174, DOI 10.1109/ICIW.2010.33
   [Anonymous], MOBILE WEB SERVICES
   Apache Software Foundation, 2009, AP AX 2 US GUID
   Arkin A, 2002, 20041068 USGS
   Baresi L., 2007, P 2 INT WORKSH SERV, P47
   Battista D, 2008, LECT NOTES COMPUT SC, V5364, P726, DOI 10.1007/978-3-540-89652-4_65
   Berger S, 2003, FIFTH IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS & APPLICATIONS, PROCEEDINGS, P100
   Brioschi M, 2006, DEV TRACK 15 INT WOR
   Farley P, 2005, BT TECHNOL J, V23, P202, DOI 10.1007/s10550-005-0042-1
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gehlen G, 2005, CONSUM COMM NETWORK, P427
   Glombitza N., 2010, 2010 7 ANN IEEE COMM, P1, DOI 10.1109/secon.2010.5508255
   Gosh S., 2002, J2ME REC MAN STOR
   Hackmann G, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE SERVICES, P204
   Hassan Mahbub, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P490, DOI 10.1109/CLOUD.2010.30
   Java Community Process, 2002, JSR 000118 MOB INF D
   Jing J, 1999, WMCSA '99, SECOND IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P62, DOI 10.1109/MCSA.1999.749278
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Juszczyk L., 2008, Proceedings of the 6th international workshop on Middleware for pervasive and ad-hoc computing (MPAC '08), P37
   Kikkert S, 2010, 20041068 USGS
   Kim YS, 2009, COMPUT SCI-RES DEV, V24, P199, DOI 10.1007/s00450-009-0091-7
   Lai KY, 2005, LCN 2005: 30TH CONFERENCE ON LOCAL COMPUTER NETWORKS, PROCEEDINGS, P218
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   Park GC, 2006, THIRD INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, PROCEEDINGS, P382
   Pernici B., 2006, MOBILE INFORM SYSTEM
   Schall D, 2006, INT J WEB INF SYST, V2, P45, DOI 10.1108/17440080680000100
   Schmidt H., 2008, MW4SOC'08: Proceedings of the 3rd workshop on Middleware for service oriented computing, P13
   Shu Fang R., 2006, DESIGNING MOBILE WEB
   Slominski A., 2005, XML PULL PARSER XPP
   Smith H, 2003, INFORM SOFTWARE TECH, V45, P1065, DOI 10.1016/S0950-5849(03)00135-6
   Srirama S.N., 2006, ADV INT C TELECOMMUN, P120, DOI DOI 10.1109/AICT-ICIW.2006.215
   TOSIC V, 2005, 7 INT C TEL MOD SAT, V1, P57, DOI DOI 10.1109/TELSKS.2005.1572063
   Truong HL, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P366, DOI 10.1109/SEAA.2008.42
   uDPWS, DEV PROF WEB SERV DP
   van Engelen RA, 2002, CCGRID 2002: 2ND IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P128, DOI 10.1109/CCGRID.2002.1017120
   Vieka Technology Inc, ESQL DAT ENG
   Wohed P, 2003, LECT NOTES COMPUT SC, V2813, P200
   Wolff A, 2007, IEEE INT ENTERP, P105, DOI 10.1109/EDOCW.2007.20
   WS4D, 2010, WHAT IS DPWS UDPWS A
   Zaplata S, 2009, IFIP ADV INF COMM TE, V305, P240
NR 40
TC 5
Z9 6
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2012
VL 42
IS 9
BP 1075
EP 1094
DI 10.1002/spe.1106
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 983FC
UT WOS:000307103100001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Dastjerdi, AV
   Tabatabaei, SGH
   Buyya, R
AF Dastjerdi, Amir Vahid
   Tabatabaei, Sayed Gholam Hassan
   Buyya, Rajkumar
TI A dependency-aware ontology-based approach for deploying service level
   agreement monitoring services in Cloud
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE service level agreement; Cloud computing; monitoring; Semantic Web
   Service
AB Cloud computing offers virtualized computing elements on demand in a pay-as-you-go manner. The major motivations to adopt Cloud services include no upfront investment on infrastructure and transferring responsibility of maintenance, backups, and license management to Cloud Providers. However, one of the key challenges that holds businesses from adopting Cloud computing services is that, by migrating to Cloud, they move some of their information and services out of their direct control. Their main concern is how well the Cloud providers keep their information (security) and deliver their services (performance). To cope with this challenge, several service level agreement management systems have been proposed. However, monitoring service deployment as a major responsibility of those systems have not been deeply investigated yet. Therefore, this paper shows how monitoring services have to be described, deployed (discovered and ranked), and then how they have to be executed to enforce accurate penalties by eliminating service level agreement failure cascading effects on violation detection. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Dastjerdi, Amir Vahid; Buyya, Rajkumar] Univ Melbourne, Cloud Comp & Distributed Syst CLOUDS Lab, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Dastjerdi, AV (corresponding author), Univ Melbourne, Cloud Comp & Distributed Syst CLOUDS Lab, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
EM amirv@csse.unimelb.edu.au
RI Tabatabaei, Sayed Gholam Hassan/A-4638-2011; Buyya, Rajkumar/C-3424-2009
CR [Anonymous], UPTIME PERFORMANCE M
   [Anonymous], 2009, Open virtualization format specification (OVF)"
   [Anonymous], MON AWS CLOUD RES
   [Anonymous], 1994, FUNDAMENTALS DECISIO
   [Anonymous], ENTERPRISE MONITORIN
   [Anonymous], CLOUDKICK CLOUD MANA
   Bodenstaff L, 2008, P IEEE I C SERV COMP, P21, DOI 10.1109/SCC.2008.120
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Comuzzi M, 2009, P CAISE 2009 FOR AMS
   Comuzzi M, 2009, ACM T WEB, V3, DOI 10.1145/1541822.1541825
   Dastjerdi Amir Vahid, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P104, DOI 10.1109/CCGRID.2010.87
   Emeakaroha Vincent C., 2010, 2010 International Conference on High Performance Computing & Simulation (HPCS 2010), P48, DOI 10.1109/HPCS.2010.5547150
   Faratin P, 1998, INT J ROBOT AUTOM, V24, P159
   Fensel D., 2002, ELETRONIC COMMERCE, V1, P113, DOI DOI 10.1016/S1567-4223(02)00015-7
   Fensel D., 2006, ENABLING SEMANTIC WE
   Foster I., 2008, IEEE GRID COMP ENV W
   Jones Don W, 2010, DEFINITIVE GUIDE MON
   Kotsokalis Constantinos, 2010, Proceedings of the Fifth International Conference on Internet and Web Applications and Services (ICIW 2010), P303, DOI 10.1109/ICIW.2010.51
   Monitis, ALL IN ON MON PLATF
   Panopta, ADV SERV MON
   SUN C, 2008, IEEE INT C SERV COMP
   Theilmann W, 2010, FUT INT FIS 2010 3 F
   Wilson M, 2009, P 2009 C HOT TOP CLO
   Winkler M., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P59, DOI 10.1109/ECOWS.2010.21
   Zulkernine F., 2008, P IEEE INT C WEB SER
NR 25
TC 34
Z9 39
U1 0
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2012
VL 42
IS 4
SI SI
BP 501
EP 518
DI 10.1002/spe.1104
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902OK
UT WOS:000301047600008
OA Bronze
DA 2024-07-18
ER

PT J
AU Shihab, E
   Jiang, ZM
   Adams, B
   Hassan, AE
   Bowerman, R
AF Shihab, Emad
   Jiang, Zhen Ming
   Adams, Bram
   Hassan, Ahmed E.
   Bowerman, Robert
TI Prioritizing the creation of unit tests in legacy software systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE unit testing; testing legacy systems; test driven maintenance; software
   quality
AB Test-driven development (TDD) is a software development practice that prescribes writing unit tests before writing implementation code. Recent studies have shown that TDD practices can significantly reduce the number of pre-release defects. However, most TDD research thus far has focused on new development. We investigate the adaptation of TDD-like practices for already-implemented code, in particular legacy systems. We call such an adaptation 'Test-driven maintenance' (TDM). In this paper, we present a TDM approach that assists software development and testing managers to use the limited resources they have for testing legacy systems efficiently. The approach leverages the development history of a project to generate a prioritized list of functions that managers should focus their unit test writing resources on. The list is updated dynamically as the development of the legacy system progresses. We evaluate our approach on two large software systems: a large commercial system and the Eclipse Open Source Software system. For both systems, our findings suggest that heuristics based on the function size, modification frequency and bug fixing frequency should be used to prioritize the unit test writing efforts for legacy systems. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Shihab, Emad; Jiang, Zhen Ming; Adams, Bram; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [Bowerman, Robert] Res Mot, Waterloo, ON, Canada.
C3 Queens University - Canada
RP Shihab, E (corresponding author), 156 Barrie St, Kingston, ON K7L 3N6, Canada.
EM emads@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Ali, Ahmed/HOF-4672-2023; Hassan,
   Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Adams,
   Bram/0000-0001-7213-4006
CR [Anonymous], 2004, ACM SIGSOFT SOFTWARE
   [Anonymous], SAC 03
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Beck K., 2001, Planning extreme programming
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   BENNETT K, 1995, IEEE SOFTWARE, V12, P19, DOI 10.1109/52.363157
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bisbal J, 1999, IEEE SOFTWARE, V16, P103, DOI 10.1109/52.795108
   Do HS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P113
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Harold Elliotte Rusty., Testing legacy code
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herraiz I., 2007, Proceedings of the International Workshop on Mining Software Repositories, P21
   Holschuh T, 2009, PROC INT CONF SOFTW, P172, DOI 10.1109/ICSE-COMPANION.2009.5070975
   Khoshgoftaar TM, 1999, INT J SOFTW ENG KNOW, V9, P547, DOI 10.1142/S0218194099000309
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Leszak M, 2002, J SYST SOFTWARE, V61, P173, DOI 10.1016/S0164-1212(01)00146-7
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   MOAD J, 1990, DATAMATION, V36, P61
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   MULLER HA, 1993, CASCON 93, P217
   Müller MM, 2001, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE.2001.919128
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Nagappan Nachiappan., 2007, EMPIR SOFTW ENG, P364, DOI DOI 10.1109/ESEM.2007.13
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   OSTRAND TJ, 2004, INT S SOFTW TEST AN, P86, DOI DOI 10.1145/1007512.1007524
   Rochkind M. J., 1975, IEEE Transactions on Software Engineering, VSE-1, P364, DOI 10.1109/TSE.1975.6312866
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Shihab Emad, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P132, DOI 10.1109/QSIC.2010.74
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   WALCOTT KR, 2006, INT S SOFTW TEST AN, P1
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
   YU TJ, 1988, IEEE T SOFTWARE ENG, V14, P1261, DOI 10.1109/32.6170
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 49
TC 15
Z9 17
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2011
VL 41
IS 10
SI SI
BP 1027
EP 1048
DI 10.1002/spe.1053
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 818RV
UT WOS:000294773600003
DA 2024-07-18
ER

PT J
AU Ducournau, R
   Morandat, F
AF Ducournau, Roland
   Morandat, Floreal
TI Perfect class hashing and numbering for object-oriented implementation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented programming; dynamic loading; multiple inheritance; late
   binding; subtype test; perfect hashing
ID LANGUAGES; LAYOUT; TESTS
AB Late binding and subtyping create run-time overhead for object-oriented languages, especially in the context of both multiple inheritance and dynamic loading, for instance for JAVA interfaces. In a previous article, we proposed a novel approach based on perfect hashing and truly constant-time hashtables for implementing subtype testing and method invocation in a dynamic loading setting. In this first study, we based our efficiency assessment on Driesen's abstract computational model for the time aspect, and on large-scale benchmarks for the space aspect. The conclusions were that the technique was promising but required further research in order to assess its scalability. This article presents some new results on perfect class hashing that enhance its interest. We propose and test both new hashing functions and an inverse problem that amounts to selecting the best class identifiers in order to minimize the overall hashtable size. This optimizing approach is proven to be optimal for single-inheritance hierarchies. Experiments within an extended testbed with random class loading and under cautious assumptions about what should be a sensible class-loading order show that perfect class hashing scales up gracefully, especially on JAVA-like multiple-subtyping hierarchies. Furthermore, perfect class hashing is implemented in the PRM compiler testbed, and compared here with the coloring technique, which amounts to maintaining the single-inheritance implementation in multiple inheritance. The overall conclusion is that the approach is efficient from both time and space standpoints with the bit-wise and hashing function. In contrast, the poor time efficiency of modulus hashing function on most processors is confirmed. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Ducournau, Roland] Univ Montpellier 2, LIRMM, F-34000 Montpellier, France.
   [Ducournau, Roland] CNRS, F-34000 Montpellier, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite
   Paul-Valery; Universite Perpignan Via Domitia; Universite de
   Montpellier; Centre National de la Recherche Scientifique (CNRS)
RP Ducournau, R (corresponding author), Univ Montpellier 2, LIRMM, 161 Rue Ada, F-34000 Montpellier, France.
EM ducour@lirmm.fr
CR Alpern B, 2001, USENIX ASSOCIATION PROCEEDINGS JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P41
   Alpern B, 2001, ACM SIGPLAN NOTICES, V36, P108, DOI 10.1145/504311.504291
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1973, The art of computer programming
   [Anonymous], MORE EFFECTIVE C
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Click Cliff, 2002, P 2002 JOINT ACMISCO, P96, DOI DOI 10.1145/583810.583821
   COHEN NH, 1991, ACM T PROGR LANG SYS, V13, P626, DOI 10.1145/115372.115297
   Coke James, 2008, Intel Technology Journal, V12, P179, DOI 10.1535/itj.1203.03
   Czech ZJ, 1997, THEOR COMPUT SCI, V182, P1, DOI 10.1016/S0304-3975(96)00146-6
   Czech ZJ, 1998, COMPUT J, V41, P416, DOI 10.1093/comjnl/41.6.416
   DIXON R, 1989, SIGPLAN NOTICES, V24, P211, DOI 10.1145/74878.74900
   Driesen Karel., 2001, EFFICIENT POLYMORPHI
   DUCOURNAU R, 2010, P MASPEGHI ICOOOLPS, P1
   Ducournau R, 2011, SOFTWARE PRACT EXPER, V41, P627, DOI 10.1002/spe.1022
   Ducournau R, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922655
   Ducournau R, 2011, SCI COMPUT PROGRAM, V76, P555, DOI 10.1016/j.scico.2010.10.006
   Ducournau R, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1391956.1391960
   Ducournau R, 2009, ACM SIGPLAN NOTICES, V44, P41, DOI 10.1145/1639949.1640093
   GAGNON ME, 2001, P USENIX JVM 01 MONT, P27
   HOLZLE U, 1991, LECT NOTES COMPUT SC, V512, P21
   Lippman StanleyB., 1996, INSIDE C OBJECT MODE
   Morandat F., 2010, P ICOOOLPS WORKSH, P7, DOI [10.1145/1639949.1640093, DOI 10.1145/1639949.1640093]
   MORRIS R, 1968, COMMUN ACM, V11, P38, DOI 10.1145/362851.362882
   MYERS AC, 1995, SIGPLAN NOTICES, V30, P124, DOI 10.1145/217839.217849
   Palacz K, 2003, LECT NOTES COMPUT SC, V2743, P378
   PRIVAT J, 2005, ACM WORKSH PROG AN S, P20, DOI DOI 10.1145/1108792.1108799
   PUGH W, 1990, SIGPLAN NOTICES, V25, P85, DOI 10.1145/93548.93556
   SPRUGNOLI R, 1977, COMMUN ACM, V20, P841, DOI 10.1145/359863.359887
   Steele Jr Guy L., 1990, COMMON LISP LANGUAGE
   Steimann F, 2000, COMMUN ACM, V43, P109, DOI 10.1145/332051.332083
   Vitek J, 1997, ACM SIGPLAN NOTICES, V32, P142, DOI 10.1145/263700.263730
   VITTER SJ, 1990, HDB THEORETICAL COMP, V1, P431
   Warren H. S, 2003, Hacker's Delight
   Zendra O, 1997, ACM SIGPLAN NOTICES, V32, P125, DOI 10.1145/263700.263728
   ZENDRA O, 2002, P JAV VIRT MACH RES, P105
   Zibin Y, 2003, LECT NOTES COMPUT SC, V2743, P329
NR 37
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2011
VL 41
IS 6
BP 661
EP 694
DI 10.1002/spe.1024
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 748GZ
UT WOS:000289379600003
DA 2024-07-18
ER

PT J
AU Kim, S
   Song, H
   Han, S
AF Kim, SeongKi
   Song, HaYoon
   Han, SangYong
TI ZipfAllocation: an algorithm for static allocation of movies in a
   cluster of video servers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE video server; parallel processing; allocation algorithm
ID LOAD
AB When a single video server provides a streaming service, there are many limitations. Thus, clusters of multiple video servers are widely used today to provide better service. How movies are allocated to each server in a cluster is an important and ongoing research topic because the movies are large, and there are so many of them. We have developed a movie allocation algorithm based on the observation that client accesses follow a Zipf distribution. We have developed an algorithm in which servers use their storage to their full capacities, movies are assigned to servers as evenly as possible, servers receive requests as evenly as possible, and all movies are allocated to at least one server. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Kim, SeongKi] Samsung Elect, Syst LSI, Giheung, Yongin, South Korea.
   [Song, HaYoon] Honglk Univ, Dept Comp Engn, Seoul, South Korea.
   [Han, SangYong] Seoul Natl Univ, Sch Comp Sci & Engn, Seoul, South Korea.
C3 Samsung; Hongik University; Seoul National University (SNU)
RP Kim, S (corresponding author), Samsung Elect, Syst LSI, Giheung, Yongin, South Korea.
EM skkim9226@gmail.com
RI Kim, SeongKi/K-2774-2019
OI Kim, SeongKi/0000-0002-2664-3632
FU Korea Research Foundation [KRF-2009-013-D00106]
FX This work was supported by the Korea Research Foundation Grant
   (KRF-2009-013-D00106).
CR Almeida J.M., 2001, Proceedings of the 11th international workshop on Network and operating systems support for digital audio and video, P21, DOI 10.1145/378344.378348
   Arya V., 2001, P 33 ANN ACM S THEOR, P21, DOI DOI 10.1145/380752.380755
   BAE IH, 1998, J KISS A, V25, P536
   Baert AE, 2009, INT J GRID UTIL COMP, V1, P287, DOI 10.1504/IJGUC.2009.027918
   BALINSKI ML, 1980, P NATL ACAD SCI USA, V77, P1, DOI 10.1073/pnas.77.1.1
   CHEN M, 1995, P MULTIMEDIA 95, P121
   CHERKASOVA L, 2002, HPL200256
   CHESIRE M, 2001, P USENIX S INT TECHN
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Jin SD, 2002, INT CON DISTR COMP S, P153, DOI 10.1109/ICDCS.2002.1022252
   Lee JYB, 1998, IEEE MULTIMEDIA, V5, P20, DOI 10.1109/93.682522
   Liao XF, 2005, J SYST ARCHITECT, V51, P79, DOI 10.1016/j.sysarc.2004.09.001
   Serpanos DN, 1998, IEEE T CIRC SYST VID, V8, P13, DOI 10.1109/76.660824
   SPASOJEVIC M, 2005, P 10 INT WORKSH WEB, P83
   Sripanidkulchai K., 2004, Proc. ACM Internet Measurement Conference, P41
   Wolf JL, 1997, MULTIMEDIA SYST, V5, P358, DOI 10.1007/s005300050067
   WOLF JL, 1995, P ACM SIGMETRICS C M, P157
   Zipf GK, 1950, J CLIN PSYCHOL, V6, P306
   Zipf GK., 1935, PSYCHO BIOL LANGUAGE
NR 19
TC 2
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2011
VL 41
IS 6
BP 695
EP 716
DI 10.1002/spe.1027
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 748GZ
UT WOS:000289379600004
DA 2024-07-18
ER

PT J
AU Koskinen, J
   Kettunen, M
   Systä, T
AF Koskinen, Johannes
   Kettunen, Markus
   Systa, Tarja
TI Behavioral profiles-a way to model and validate program behavior
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design and analysis of program behavior; UML; program comprehension;
   program validation
AB Software architecture contains, in addition to its structural part, interaction patterns that can be regarded as part of the architectural solution of the system. The interaction patterns define architecturally significant behavior of the software system. In this paper we propose a visual modeling language, behavioral profiles, for specifying architecturally significant behavioral rules for an application. The language is built on the Unified Modeling Language (UML), which is a visual language widely used in software development. We show how behavioral profiles can be used to support software designers in creating behavioral models that conform to some predefined rules and for ensuring that an application behaves correctly with respect to the rules given in the profiles. A tool called Bebop was built to support software engineers in behavioral profile-based design and analysis of program behavior. To evaluate the approach and the tools in different application domains, they are utilized in three cases. The size of the applications used in the cases varies from small to quite large software systems, and from academic to industrial ones. The examples demonstrate how the approach presented can be used in practice for different steps in a software engineering process. The examples cover specializing an application framework and monitoring the program execution in run-time. In addition, they show how behavioral profiles can be used to support guided program comprehension and to validate program execution by analyzing execution traces. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Koskinen, Johannes; Kettunen, Markus; Systa, Tarja] Tampere Univ Technol, Dept Software Syst, FIN-33101 Tampere, Finland.
C3 Tampere University
RP Koskinen, J (corresponding author), Tampere Univ Technol, Dept Software Syst, POB 553, FIN-33101 Tampere, Finland.
EM johannes.koskinen@tut.fi
CR [Anonymous], 2000, IEEE STD, V1471-2000, P1
   *ASPECTJ TEAM, 2008, ASPECTJ GUID
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   De Pauw W, 2002, LECT NOTES COMPUT SC, V2269, P151
   De Pauw W, 1999, LECT NOTES COMPUT SC, V1628, P116
   *ECL FDN, 2008, GRAPH ED FRAM
   *ECL FDN, 2008, ECL TEST PERF TOOLS
   Fayad Mohamed E., 1999, Building Application Frameworks: Object-oriented Foundations of Framework Design
   Fielding R.T., 2000, THESIS U CALIF, P162
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Jerding D, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P56, DOI 10.1109/WCRE.1997.624576
   Jiang J, 2007, INT C PROGRAM COMPRE, P259
   KETTUNEN M, 2007, THESIS TAMPERE U TEC
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KIVILUOMA K, 2006, P 2006 INT S SOFTW T, P181
   Koskinen J., 2006, Nordic Journal of Computing, V13, P162
   KOSKINEN J, 2008, U TECHNOLOGY PUBLICA, V757, P220
   Koskinen J, 2006, INT C PROGRAM COMPRE, P212, DOI 10.1109/ICPC.2006.37
   LEPPANEN S, 2008, THESIS TAMPERE U TEC
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   *OBJ MAN GROUP INC, 2007, UML 2 0 OCL FORMAL
   *OBJ MAN GROUP INC, 2003, OMG UN MOD LANG UML
   *OBJ MAN GROUP INC, UN MOD LANG SUP VERS
   Object Management Group Inc, 2003, XML MET INT XMI SPEC
   Oechsle R, 2002, LECT NOTES COMPUT SC, V2269, P176
   Pettit RG, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P57, DOI 10.1109/WICSA.2004.1310690
   *RAT SOFTW, 2008, RAT SOFTW ARCH
   *RAT SOFTW, 2005, RAT ROS
   RIVA C, 2007, P 3 INT WORKSH ENG S, P12
   ROUNTEV A, 2005, P ACM WORKSH PROGR A, P96
   *SUN MICROSYSTEMS, 2006, JAV WEB SERV DEV PAC
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
   Walker RJ, 1998, ACM SIGPLAN NOTICES, V33, P271, DOI 10.1145/286942.286966
NR 35
TC 2
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2010
VL 40
IS 8
BP 701
EP 733
DI 10.1002/spe.977
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 627MS
UT WOS:000280044400006
OA Bronze
DA 2024-07-18
ER

PT J
AU Sheridan, F
AF Sheridan, Flash
TI Practical testing of a C99 compiler using output comparison
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compilers; program testing; correctness
AB A simple technique is presented for testing a C99 compiler, by comparing its output with the output from pre-existing tools. The advantage to this approach is that new test cases can be added in bulk from existing sources, reducing the need for in-depth investigation of correctness issues and for creating new test code by hand. This technique was used in testing the PalmSource Palm OS (R) Cobalt ARM C/C++ cross-compiler for Palm-Powered personal digital assistants, primarily for standards compliance and the correct execution of generated code. The technique described here found several hundred bugs, mostly in our in-house code, but also in longstanding high-quality front- and back-end code from Edison Design Group and Apogee Software. It also found 18 bugs in the GNU C compiler, as well as a bug specific to the Apple version of GCC, a bug specific to the Suse version of GCC, and a dozen bugs in versions of GCC for the ARM processor, several of which were critical. (C) 2007 John Wiley & Sons, Ltd.
C1 Access Syst Amer Inc, Sunnyvale, CA 94305 USA.
RP Sheridan, F (corresponding author), Palm Inc, 950 W Maude Ave, Sunnyvale, CA 94085 USA.
EM flash@pobox.com
RI Sheridan, Flash/A-5828-2009
OI Sheridan, Flash/0000-0002-0327-1370
CR *ADS, ARM DEV SUIT ADS VER
   Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 2000, Programming Perl
   *ARM, 1999, ARM EMUL GDB VERS
   Bailey MW, 2003, IEEE T SOFTWARE ENG, V29, P1031, DOI 10.1109/TSE.2003.1245304
   Beizer Boris, 1984, Software System Testing and Quality Assurance
   BURGESS CJ, 1993, BIBLIOGRAPHY AUTOMAT
   DOMINUS MJ, 2002, GOOD ADVICE MAXIMS P
   DUTTA S, 1999, SMALL DEVICE C COMPI
   Fraser Christopher W., 1995, A retargetable C compiler: Design and implementation
   GCC, 1987, GNU COMP COLL
   *GCC, GCC BUGZ DAT
   *GCC, GCC C TORT TEST SUIT
   Harbison SamuelP., 2002, C REFERENCE MANUAL, V5th
   *ISO IEC, 1998, 14882 ANSI ISO
   *ISO IEC, CPP ISO IEC
   KAHAN W, 1983, PARANOIA FLOATING PO
   Kaner Cem., 1999, Testing Computer Software, 2nd Edition, V2nd
   Kernighan B.W., 1988, The C Programming Language
   LINDIG C, 2005, P 6 INT WORKSH AUT D
   LISCHNER R, 2003, C PLUS PLUS NUTSHELL
   *SUN MICR INC, 1993, FRE DISTR MATH LIB F
   TYDEMAN F, 1995, C99 FPCE TEST SUITE
   WILKERSON D, 2003, DELTA TOOL TEST FAIL
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
NR 25
TC 21
Z9 25
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2007
VL 37
IS 14
BP 1475
EP 1488
DI 10.1002/spe.812
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 228JA
UT WOS:000250725000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Loewe, L
AF Loewe, Laurence
TI Evolution@home: observations on participant choice, work unit variation
   and low-effort global computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Internet distributed computing; individual-based simulations of
   evolution; Muller's ratchet; computational complexity; user choices;
   Grid; error of magnitude
ID MODELS
AB Many simulation efforts in ecology and evolutionary biology employ individual-based models that are well suited for including many biological details. These models often pose serious computational challenges if all biologically interesting parameter combinations are to be explored. The challenges are even greater for biologists who often lack supercomputing facilities and the manpower for implementing complex global computing systems such as SETI@home. Under such limiting conditions, evolution@home started as a one-man effort to distribute simulations of Muller's ratchet to Internet-connected computers of participants from the general public. This paper addresses experiences in low-effort global computing made with evolution@home over more than four years. It shows how allowing participants to choose the class of computational complexity they want to contribute to can help to deal with the bewildering variety of computational complexities that easily result from individual-based models. Results suggest that, as a first rough approximation, participants' complexity choices are distributed surprisingly even over all reasonable classes of CPU-time and RAM requirements. More often than not, participants tend to finish the simulations they start, if they are committed enough to submit any results at all. Potential uses of intermediate simulation results are discussed and the error of magnitude is introduced to help to deal with imprecise CPU-time predictions. Experiences with the choices of over 300 users who have contributed more than 100 000 simulations with a total of over 80 years CPU time are reviewed. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 Univ Edinburgh, Ashworth Labs, Sch Biol Sci, Inst Evolutionary Biol, Edinburgh EH9 3JT, Midlothian, Scotland.
C3 University of Edinburgh
RP Loewe, L (corresponding author), Univ Edinburgh, Ashworth Labs, Sch Biol Sci, Inst Evolutionary Biol, Kings Bldg,W Mains Rd, Edinburgh EH9 3JT, Midlothian, Scotland.
EM Laurence.Loewe@evolutionary-research.net
CR ANDERSON DP, 2002, SOFTWARE INFRASTRUCT
   [Anonymous], 2013, Individualbased modeling and ecology, DOI DOI 10.1515/9781400850624
   [Anonymous], P 28 HAW INT C SYST
   [Anonymous], 2000, Simulation Modeling and Analysis
   BART J, 1995, ECOL APPL, V5, P411, DOI 10.2307/1942032
   Berman F, 2003, IEEE T PARALL DISTR, V14, P369, DOI 10.1109/TPDS.2003.1195409
   BERMAN F, 1996, P SUP 96 PITTSB
   BUYYA R, 2006, GRID COMPUTING INFO
   BUYYA R, 2002, THESIS MONASH U MELB
   Casanova H., 2000, Proceedings 9th Heterogeneous Computing Workshop (HCW 2000) (Cat. No.PR00556), P349, DOI 10.1109/HCW.2000.843757
   CHRISTENSEN C, 2005, P 1 IEEE INT C ESCIE
   Godfrey B., 2002, A primer on distributed computing
   GUSTAFSON JL, 2006, HINT WEB SITE
   HUSTON M, 1988, BIOSCIENCE, V38, P682, DOI 10.2307/1310870
   Loewe L, 2002, CCGRID 2002: 2ND IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P425, DOI 10.1109/CCGRID.2002.1017176
   LOEWE L, 2006, EVOLUTION HOME WEB S
   Loewe Laurence, 2002, Brief Bioinform, V3, P377, DOI 10.1093/bib/3.4.377
   Loewe L, 2006, GENET RES, V87, P133, DOI 10.1017/S0016672306008123
   PEARSON K, 2006, INTERNET BASED DISTR
   *R PROJ, 2006, LANG DAT AN GRAPH
   Smallen S., 2000, P 9 HET COMP WORKSH
   SOTTRUP CU, 2005, THESIS U COPENHAGEN, P1
   Stephan W, 2002, MODERN DEV THEORETIC, P72
   Sutter H, 2005, DR DOBBS J, V30, P16
NR 24
TC 6
Z9 6
U1 0
U2 3
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2007
VL 37
IS 12
BP 1289
EP 1318
DI 10.1002/spe.806
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 224BF
UT WOS:000250419600004
DA 2024-07-18
ER

PT J
AU Burrows, S
   Tahaghoghi, SMM
   Zobel, J
AF Burrows, Steven
   Tahaghoghi, S. M. M.
   Zobel, Justin
TI Efficient plagiarism detection for large code repositories
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE plagiarism detection; program code similarity; indexing; local alignment
AB Unauthorized re-use of code by students is a widespread problem in academic institutions, and raises liability issues for industry. Manual plagiarism detection is time-consuming, and current effective plagiarism detection approaches cannot be easily scaled to very large code repositories. While there are practical text-based plagiarism detection systems capable of working with large collections, this is not the case for code-based plagiarism detection. In this paper, we propose techniques for detecting plagiarism in program code using text similarity measures and local alignment. Through detailed empirical evaluation on small and large collections of programs, we show that our approach is highly scalable while maintaining similar levels of effectiveness to that of the popular JPlag and MOSS systems. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 RMIT Univ, Sch Comp Sci & Informat Technol, Melbourne, Vic 3001, Australia.
C3 Royal Melbourne Institute of Technology (RMIT)
RP Tahaghoghi, SMM (corresponding author), RMIT Univ, Sch Comp Sci & Informat Technol, GPO Box 2476V, Melbourne, Vic 3001, Australia.
EM saied@cs.rmit.edu.au
CR ALTSCHUL SF, 1990, J MOL BIOL, V215, P403, DOI 10.1016/S0022-2836(05)80360-2
   [Anonymous], 1999, MODERN INFORM RETRIE
   [Anonymous], ACM SIGIR FORUM, DOI [10.1145/281250.281253, DOI 10.1145/281250.281253]
   ARWIN C, 2006, C RES PRACTICE INFOR, V48, P277
   Baker BS, 1998, PROCEEDINGS OF THE USENIX 1998 ANNUAL TECHNICAL CONFERENCE, P179
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   BOWYER K, 1999, 29 ANN FRONT ED C FI, P18
   Broder Andrei Z., 1997, P 6 INT WORLD WID WE, p1157 , DOI [10.1016/S0169-7552(97)00031-7, DOI 10.1016/S0169-7552(97)00031-7]
   Broder AZ, 1998, COMPRESSION AND COMPLEXITY OF SEQUENCES 1997 - PROCEEDINGS, P21, DOI 10.1109/SEQUEN.1997.666900
   CHAWLA M, 2003, THESIS RMIT U MELBOU
   CHIUEH T, 1999, ECSLTR66
   CULWIN F, 2001, SBUCISM0101
   Donaldson J. L., 1981, SIGCSE Bulletin, V13, P21, DOI 10.1145/953049.800955
   Gitchell D, 1999, PROCEEDINGS OF THE THIRTIETH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P266, DOI 10.1145/299649.299783
   Heintze N, 1996, PROCEEDINGS OF THE SECOND USENIX WORKSHOP ON ELECTRONIC COMMERCE, P191
   Hoad TC, 2003, J AM SOC INF SCI TEC, V54, P203, DOI 10.1002/asi.10170
   Irving R., 2004, TR2004164 U GLASG CO
   KARP RM, 1987, IBM J RES DEV, V31, P249, DOI 10.1147/rd.312.0249
   LESTER N, 2004, P 27 C AUSTR COMP SC, P15
   MANBER U, 1994, PROCEEDINGS OF THE WINTER 1994 USENIX CONFERENCE, P1
   Morgenstern B, 1998, BIOINFORMATICS, V14, P290, DOI 10.1093/bioinformatics/14.3.290
   Mozgovoy M, 2005, LECT NOTES COMPUT SC, V3772, P267
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   ROBERTSON S.E., 1999, Proceedings of TREC-8 Conference, on, P151
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Sheard J., 2002, SIGCSE Bulletin, V34, P183, DOI 10.1145/637610.544468
   SMITH TF, 1981, J MOL BIOL, V147, P195, DOI 10.1016/0022-2836(81)90087-5
   TOMASIC A, 1994, SIGMOD94, P289
   Trotman A, 2003, INFORM RETRIEVAL, V6, P5, DOI 10.1023/A:1022949613039
   Verco K., 1996, P 1 AUSTRALASIAN C C, P81, DOI DOI 10.1145/369585.369598
   WHALE G, 1986, AUSTR COMPUTER SCI C, V8, P231
   WISE MJ, 1993, 463 TR U SYDN SCH IN
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   ZOBEL J, 1993, P INT C VER LARG DAT, P290
NR 35
TC 71
Z9 74
U1 2
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2007
VL 37
IS 2
BP 151
EP 175
DI 10.1002/spe.750
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 136GY
UT WOS:000244211800002
DA 2024-07-18
ER

PT J
AU Hassoun, Y
   Johnson, R
   Counsell, S
AF Hassoun, Y
   Johnson, R
   Counsell, S
TI Applications of dynamic proxies in distributed environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE reusability; open implementation; distributed systems; proxy;
   meta-programming; reflection
AB In object-oriented programming (OOP), proxies are entities that act as an intermediary between client objects and target objects. Dynamic proxies can be used to construct distributed systems that support the open implementation approach and promote code reuse. The 00 paradigm supports code reuse through various ways including inheritance, polymorphism and aggregation. In this paper, we adopt a definition of software reuse restricted to reuse of code components and address the question of constructing distributed systems based on dynamic proxies. Different networking techniques and programming paradigms such as Java's Remote Method Invocation (RMI), the Common Object Request Broker Architecture (CORBA) and Java Servlets are used to implement the distributed client/server architecture. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ London Birkbeck Coll, Sch Comp Sci & Informat Syst, London WC1E 7HX, England.
C3 University of London; Birkbeck University London
RP Hassoun, Y (corresponding author), Univ London Birkbeck Coll, Sch Comp Sci & Informat Syst, Malet St, London WC1E 7HX, England.
EM yhassoun@dcs.bbk.ac.uk
CR [Anonymous], 2000, Generative programming: methods, tools, and applications
   BIEMAN J, 1995, P ACM S SOFTW REUS S, P47
   BIGGERSTAFF TJ, 1995, P 7 ANN WORKSH INST
   Brose Gerald., 2001, Java Programming with CORBA, VThird
   CARGILL GC, 1992, PROGRAMMING STYLE
   Demers F.N., 1995, Proceedings of the IJCAI, P29
   FERBER J, 1989, SIGPLAN NOTICES, V24, P317, DOI 10.1145/74878.74910
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Hassoun Youssef, 2003, P 2 INT C PRINC PRAC, P3
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Kiczales G, 1996, IEEE SOFTWARE, V13, P8, DOI 10.1109/52.476280
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 1991, The Art of the Metaobject Protocol
   MAES P, 1987, ACM SIGPLAN NOTICES, V22, P147
   *OMG, 2003, OMG IDL
   *OMG, 2003, OBJ MAN GROUP
   Pike SM, 2002, LECT NOTES COMPUT SC, V2319, P46
   Sitaraman M, 2000, LECT NOTES COMPUT SC, V1844, P266
   *SUN MICR, 2003, JAVASOFT JAV REM MET
   *SUN MICR, 2003, JAVASOFT CORBA TECHN
   *SUN MICR, 2003, JAV 2 PLATF
NR 21
TC 6
Z9 6
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2005
VL 35
IS 1
BP 75
EP 99
DI 10.1002/spe.629
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 884HO
UT WOS:000226075700005
DA 2024-07-18
ER

PT J
AU VanDrunen, T
   Hosking, AL
AF VanDrunen, T
   Hosking, AL
TI Anticipation-based partial redundancy elimination for static single
   assignment form
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE partial redundancy elimination; static single assignment form;
   machine-independent program transformations
ID SSA FORM
AB Partial redundancy elimination (PRE) is a program transformation that identifies and eliminates expressions that are redundant on at least one (but not necessarily all) execution paths of a program without increasing any path length. Chow, Kennedy and co-workers devised an algorithm (SSAPRE) for performing partial redundancy elimination on intermediate representations in static single assignment (SSA) form. The practicality of that algorithm is limited by the following concerns: (1) it makes assumptions about the namespace that are stronger than those of SSA form and that may not be valid if other optimizations have already been performed on the program; (2) if redundancies occur in nested expressions, the algorithm may expose but not eliminate them (requiring a second pass of the algorithm); (3) it misses cases covered by the state of the art in PRE; and (4) it is difficult to understand and implement. We present an algorithm (A-SSAPRE) structurally similar to SSAPRE that uses anticipation rather than availability; this algorithm is simpler than SSAPRE, covers more cases, eliminates nested redundancies on a single pass, and makes no assumptions about the namespace. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Wheaton Coll, Dept Math & Comp Sci, Wheaton, IL 60187 USA.
   Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 Wheaton College; Purdue University System; Purdue University
RP Wheaton Coll, Dept Math & Comp Sci, 501 Coll Ave, Wheaton, IL 60187 USA.
EM Thomas.VanDrunen@wheaton.edu
RI Hosking, Antony/G-3618-2012
OI Hosking, Antony/0000-0002-4487-6923
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Alpern B, 2000, IBM SYST J, V39, P211, DOI 10.1147/sj.391.0211
   Bodik R, 1998, ACM SIGPLAN NOTICES, V33, P1, DOI 10.1145/277652.277653
   BODIK R, 1998, P 25 ACM SIGPLAN SIG, P237
   BRIGGS P, 1994, SIGPLAN NOTICES, V29, P159, DOI 10.1145/773473.178257
   BURKE MG, 1999, ACM 1999 JAV GRAND C, P129
   CHOI JD, 1999, WORKSH PROGR AN SOFT, P21
   Chow F, 1997, ACM SIGPLAN NOTICES, V32, P273, DOI 10.1145/258916.258940
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   *EPCC, 2004, JAV GRAND FOR BENCHM
   Fink S, 2000, LECT NOTES COMPUT SC, V1824, P155
   Hosking AL, 2001, SOFTWARE PRACT EXPER, V31, P577, DOI 10.1002/spe.371
   Kennedy R, 1999, ACM T PROGR LANG SYS, V21, P627, DOI 10.1145/319301.319348
   KNOOP J, 1992, SIGPLAN NOTICES, V27, P224, DOI 10.1145/143103.143136
   Lee H. B., 2004, CUCS97204
   MOREL E, 1979, COMMUN ACM, V22, P96, DOI 10.1145/359060.359069
   Muchnick S., 1997, ADV COMPILER DESIGN
   PUGH W, 1999, ACM 1999 JAV GRAND C, P89
   *STAND PERF EV COU, 2004, SPECJVM 98 BENCHM
NR 19
TC 2
Z9 5
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2004
VL 34
IS 15
BP 1413
EP 1439
DI 10.1002/spe.618
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 875VY
UT WOS:000225451400001
DA 2024-07-18
ER

PT J
AU Zhang, J
   Chung, JY
AF Zhang, J
   Chung, JY
TI Mockup-driven fast-prototyping methodology for Web application
   development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE prototyping of Web applications; generator; architecture; supporting
   environment; mockup
ID ARCHITECTURES; DESIGN
AB Web application development can be very complicated without an appropriate framework, architecture and application model. A good implementation model can help application developers communicate with clients, consolidate the design before starting the development, speed up the development, and make the code highly reusable. This paper proposes a mockup-driven fast prototyping methodology (MODFM) for the development of Web applications. It is built on the most recent Web technologies: EJB, JSP, Servlet, XML, Struts, and Web application server. A two-tier Model-View-Controller (MVC) architecture is proposed as the underlying backbone and a supporting environment is tailored specifically in order to enable development. Two basic supporting tools are provided: the dynamic menu generator and the generic code generator, which produce code for front-end, back-end and database schemas. MODFM helps to generate fully functional mockup systems for the client to review at an early analysis stage, and continues to provide guidance throughout follow-on development phases. Real-life experiences on the use of this methodology in industry are presented as examples. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 InfiNET Solut, Buffalo Grove, IL 60089 USA.
   IBM Corp, Thomas J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
C3 International Business Machines (IBM)
RP Zhang, J (corresponding author), InfiNET Solut, Buffalo Grove, IL 60089 USA.
EM jiazhangchicago@yahoo.com
CR [Anonymous], DATABASE SYSTEMS, DOI DOI 10.1145/320434.320440
   [Anonymous], 1989, Modern structured analysis
   Bochicchio M., 2000, Proceedings of the 2000 ACM Symposium on Applied Computing - SAC'00, P978, DOI DOI 10.1145/338407.338712
   BOOCH G, 1998, UNIFIED MODELING LAN
   CERI S, 2000, P 9 INT WORLD WID WE, P15
   Conallen J, 1999, COMMUN ACM, V42, P63, DOI 10.1145/317665.317677
   Fraternali P, 2000, ACM T INFORM SYST, V18, P323, DOI 10.1145/358108.358110
   Friman B., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P198
   GAEDKE M, 1999, 8 INT WORLD WID WEB
   GAEDKE M, 2000, P 2000 ACM S APPL CO, P927
   Gamma E., 1994, DESIGN PATTERNS
   GARZOTTO F, 1993, ACM T INFORM SYST, V11, P1, DOI 10.1145/151480.151483
   GINIGE A., 2001, IEEE Multimedia, V8, P22, DOI DOI 10.1109/MMUL.2001.917968
   *HOUGHT MIFFL COMP, 2000, AM HER DICT ENGL LAN
   ISAKOWITZ T, 1995, COMMUN ACM, V38, P34, DOI 10.1145/208344.208346
   LEI Y, 2002, P 7 INT C INT US INT, P200
   LEI Y, 2002, P 13 INT C KNOWL ENG, P219
   McLaughlin B., 2001, Java XML, V2,
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Monson-Haefel Richard., 2001, ENTERPRISE JAVABEANS
   SIGLE J, 1979, P INT C APL 1, P188
   Sommerville I., 2000, Software Engineering, V6
   SZEKELY PA, 1994, P WORKSH SOFTW ENG H, P76
   THOMAS A, 1997, ENTERPRISE JAVABEANS
   Wieringa R, 1998, ACM COMPUT SURV, V30, P459, DOI 10.1145/299917.299919
NR 25
TC 7
Z9 8
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2003
VL 33
IS 13
BP 1251
EP 1272
DI 10.1002/spe.547
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 739LA
UT WOS:000186346300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Joshi, RK
   Mascarenhas, M
   Murarka, Y
AF Joshi, RK
   Mascarenhas, M
   Murarka, Y
TI Filter objects for Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE filter objects; transparency; interclass relationship; java extension;
   evolution
AB Filtering is an emerging abstraction in object-oriented systems. Filtering can be characterized by an ability to filter messages in transit and perform intermediate actions. Filters can be used for carrying out intermediate tasks such as encryption, load balancing, caching, security checks and add-on computations. A few filtering approaches have been proposed earlier and some commercial implementations with specialized filtering capabilities are available. This paper discusses a model for transparent and dynamically pluggable first class filter objects for object-oriented systems based on the Java programming language. The filter object model is based on an interclass filter relationship. The model is realized through extensions to the Java programming language. Filter objects can be injected into message paths during execution time and they are transparent to both clients and servers. The properties of filter objects enable them to be employed as a mechanism for evolution promoting reuse of existing code. A method of evolution through filter objects is discussed. A translator for Java filters (TJF) has been designed and implemented. TJF translates an extended Java program involving filter constructs into an equivalent Java code. The translation scheme is presented and the performance of the translated code is analyzed. A brief survey of existing approaches related to filtering in object-oriented systems has also been presented. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Indian Inst Technol, Dept Comp Sci & Engn, Bombay 400076, Maharashtra, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Bombay
RP Joshi, RK (corresponding author), Indian Inst Technol, Dept Comp Sci & Engn, Bombay 400076, Maharashtra, India.
CR AKSIT M, 1994, LNCS, V821, P386
   AKSIT M, 1993, LECT NOTES COMPUTER, V791, P152
   AKSIT M, 1998, AOP 1998 WORKSH POS
   Arnold K., 1998, JAVA PROGRAMMING LAN
   BERGMANS L, 1994, THESIS U TWENTE
   GAMMA E, 1994, DEISGN PATTERNS
   GLANDRUP M, 1995, THESIS U TWENTE
   Hudson S.E., 1999, CUP Parser Generator for Java
   *ION TECHN, 1995, ORB ARCH
   Joshi RK, 1997, SOFTWARE PRACT EXPER, V27, P677, DOI 10.1002/(SICI)1097-024X(199706)27:6<677::AID-SPE103>3.0.CO;2-I
   JOSHI RK, 2001, J OBJECT ORIENTE JUN, P10
   JOSHI RK, 2000, LECT NOTES COMPUTER, V1999, P182
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   KLEIN G, 2001, JFLEX USERS MANUAL
   MCCULLOUGH PL, 1987, OOPSLA 87, P331
   MEZINI M, 2000, SOFTWARE ARCHITECTUR
   Narasimhan P, 1999, COMPUTER, V32, P62, DOI 10.1109/2.774920
   NOBLE J, ECOOP 1996 WORKSH PR
   PASCOE GA, 1986, P OOPSLA 86, P341
   REDDY GS, 2001, J OBJECT ORIENTE JAN, P12
   Seiter LM, 1998, IEEE T SOFTWARE ENG, V24, P79, DOI 10.1109/32.663999
   WICHMAN JC, 1999, THESIS U TWENTE
NR 22
TC 3
Z9 3
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2003
VL 33
IS 6
BP 509
EP 522
DI 10.1002/spe.507
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 675MH
UT WOS:000182698700002
DA 2024-07-18
ER

PT J
AU van der Hoek, A
   Wolf, AL
AF van der Hoek, A
   Wolf, AL
TI Software release management for component-based software
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software release management; components; component-based software;
   distributed development; software deployment
AB Software release management is the process through which software is made available to and obtained by its users. Until now, this process has been relatively straightforward. However, the emergence of component-based software is complicating software release management. Increasingly, software is constructed via the assembly of pre-existing, independently produced, and independently released components. Both developers and users of such software are affected by these complications. Developers need to accurately document the complex and changing dependencies among the components constituting the software. Users must be involved in locating, retrieving, and assembling components in order to appropriately bring the software into their particular environment. In this paper, we introduce the problem of release management for component-based software and discuss SRM, a prototype software release management tool we have developed that supports both developers and users in the software release management process. Copyright (C) 2002 John Wiley Sons, Ltd.
C1 Univ Calif Irvine, Inst Software Res, Dept Informat & Comp Sci, Irvine, CA 92612 USA.
   Univ Colorado, Software Engn Res Lab, Dept Comp Sci, Boulder, CO 80309 USA.
C3 University of California System; University of California Irvine;
   University of Colorado System; University of Colorado Boulder
RP Univ Calif Irvine, Inst Software Res, Dept Informat & Comp Sci, Irvine, CA 92612 USA.
EM andre@ics.uci.edu
CR Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Allen L., 1995, Software Configuration Management. ICSE SCM-4 and SCM-5 Workshops. Selected Papers, P194
   *AON, 2002, AON SEL COMP MAN
   *ATR SOFTW, 1992, CLEARC CONC MAN
   BAILEY EC, 2002, MAXIMUM RPM
   BERLINER B, 1990, P 1990 WINT USENIX C
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   *CONT SOFTW CORP, 1998, DISTR COD MAN TEAM E
   *CONT SOFTW CORP, 1994, CONT TASK REF
   CRNKOVIC I, 2001, P 4 ICSE WORKSH COMP
   DEJONGE M, 2001, SENR0204 CWI AMST
   Fogel K., 1999, OPEN SOURCE DEV CVS
   FOWLER G, 1995, PRACTICAL REUSABLE U, P78
   Guelich S., 2000, CGI PROGRAMMING PERL
   Hall R. S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P174, DOI 10.1109/ICSE.1999.841007
   Hall RS, 1997, INT CON DISTR COMP S, P269, DOI 10.1109/ICDCS.1997.598050
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   MATENA V, ENTERPRISE JAVA BEAN
   *MER, 1998, US PVCS ENT DISTR DE
   Ousterhout J.K., 1994, TCL TK TOOLKIT
   PLATT DS, 2001, INTRO MICROSOFT DOT
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   SESSIONS R, 1997, COM DCOM MICROSOFTS
   SMITH RA, 1999, THESIS U COLORADO BO
   Sreedhar VC, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P198, DOI 10.1109/ICSE.2002.1007968
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   *TIV SYST, 1997, APPL MAN SPEC
   van der Hoek A, 2002, IEEE T SOFTWARE ENG, V28, P79, DOI 10.1109/32.979990
   van der Hoek A, 1997, LECT NOTES COMPUT SC, V1301, P159, DOI 10.1145/267896.267909
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   VANDERHOEK A, 2001, P WORK C COMPL DYN S
NR 31
TC 27
Z9 35
U1 5
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2003
VL 33
IS 1
BP 77
EP 98
DI 10.1002/spe.496
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 631QE
UT WOS:000180177800005
DA 2024-07-18
ER

PT J
AU Zhong, CX
   Zhang, H
   Huang, H
   Chen, ZK
   Li, C
   Liu, XD
   Li, SS
AF Zhong, Chenxing
   Zhang, He
   Huang, Huang
   Chen, Zhikun
   Li, Chao
   Liu, Xiaodong
   Li, Shanshan
TI DOMICO: Checking conformance between domain models and implementations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architectural drift; architecture conformance checking; code
   implementation; domain model; domain-driven design; microservices
   architecture
AB As a predominant design method for microsservices architecture (MSA), domain-driven design (DDD) utilizes a series of standard patterns in both models and implementations to effectively support the design of architectural elements. However, an implementation may deviate from its original domain model that uses certain patterns. The deviation between a domain model and its implementation is a type of architectural drift, which needs to be detected promptly. This paper proposes an approach, namely DOMICO, to check the conformance between the domain model and its implementation, by which the conformance is formalized by defining eight common structural patterns of domain modeling and their representations in both models and the corresponding source code. Based on the formalization, our approach can not only identify the discrepancies (e.g., divergence, absence, and modification) with respect to pattern elements, but also detect possible violations of 24 compliance rules imposed by the patterns. To validate DOMICO, we performed a case study to investigate its use in a supply chain project and its performance. The results show that DOMICO can accurately identify 100% inconsistency issues in the cases examined. As the first conformance checking approach for DDD, DOMICO can be integrated into the regular domain modeling process and help ensure the conformity of microservice implementations to models.
C1 [Zhong, Chenxing; Zhang, He; Chen, Zhikun; Li, Chao; Liu, Xiaodong; Li, Shanshan] Nanjing Univ, Software Inst, Nanjing, Jiangsu, Peoples R China.
   [Zhong, Chenxing; Zhang, He; Chen, Zhikun; Li, Chao; Liu, Xiaodong; Li, Shanshan] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Huang, Huang] State Grid Nanjng Power Supply Co, Nanjing, Jiangsu, Peoples R China.
C3 Nanjing University; Nanjing University
RP Li, SS (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM lss@nju.edu.cn
RI Shan-Shan, Li/Q-9503-2017
FU Key Research and Development Program of Jiangsu Province [BE2021002-2];
   National Natural Science Foundation of China [62072227, 62202219];
   National Key Research and Development Program of China; Research Council
   of Norway [2019YFE0105500, 309494]
FX Key Research and Development Program of Jiangsu Province, Grant/Award
   Number: BE2021002-2; National Natural Science Foundation of China,
   Grant/Award Numbers: 62072227, 62202219; The National Key Research and
   Development Program of China jointly with the Research Council of
   Norway, Grant/Award Numbers: 2019YFE0105500, 309494
CR Abeck S., 2019, 5 INT C ADV TRENDS S
   Ali N, 2018, EMPIR SOFTW ENG, V23, P224, DOI 10.1007/s10664-017-9515-3
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Cabrera E, 2020, P IEEE I C SERV COMP, P472, DOI 10.1109/SCC49832.2020.00072
   Le DM, 2020, INFORM SOFTWARE TECH, V120, DOI 10.1016/j.infsof.2019.106239
   Estañol M, 2019, SOFTW SYST MODEL, V18, P2531, DOI 10.1007/s10270-018-0681-6
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Evans E., 2003, Domain-Driven Design
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   Fuentes-Fernandez L., 2004, UPGRADE European Journal for the Informatics Professional, VV, P6
   Gerard S., 2007, INT DAGST C MOD BAS, P361, DOI [DOI 10.1007/978-3-642-16277-019, 10.1007/978-3-642-16277-0\_19, DOI 10.1007/978-3-642-16277-0, DOI 10.1007/978-3-642-16277-0_19]
   Giallorenzo S, 2022, LECT NOTES COMPUT SC, V13271, P223, DOI 10.1007/978-3-031-08143-9_13
   Giorgi F, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P253, DOI 10.1109/ICSE-SEIP.2019.00035
   Gosling J., 2013, The Java Language Specification, V7
   Hejlsberg A., 2008, The C# Programming Language
   Hippchen B., 2017, International Journal on Advances in Software (1942-2628), V10, P432
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Jasser S, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P35, DOI 10.1109/ICSA47634.2020.00012
   Kapferer S., 2020, P S SUMM SCH SERV OR, P189
   Kapferer S., 2020, P 8 INT C MOD DRIV E, P250
   Knodel Jens, 2007, 2007 WORKING IEEEIFI, P12, DOI 10.1109/wicsa.2007.1
   Landi AD, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111116
   Landre E., 2007, PAPER PRESENTED OOPS, P983, DOI [10.1145/1297846.1297967, DOI 10.1145/1297846.1297967]
   Li RY, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2423
   Li Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3295739
   Lotz G, 2010, IEEE ENG MED BIO, P4530, DOI 10.1109/IEMBS.2010.5626032
   Lu H, 2016, INFORM SOFTWARE TECH, V72, P68, DOI 10.1016/j.infsof.2015.12.004
   Mendoza C, 2021, SOFTWARE PRACT EXPER, V51, P1822, DOI 10.1002/spe.3004
   That MTT, 2016, AUTOMAT SOFTW ENG, V23, P427, DOI 10.1007/s10515-014-0172-0
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Passos L, 2010, IEEE SOFTWARE, V27, P82, DOI 10.1109/MS.2009.117
   Paz A, 2021, IEEE T SOFTWARE ENG, V47, P2713, DOI 10.1109/TSE.2020.2966994
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Rademacher F., 2017, LNCS, P230
   Rademacher F, 2020, EUROMICRO CONF PROC, P229, DOI 10.1109/SEAA51224.2020.00047
   Roques A., 2015, PLANTUML OPEN SOURCE
   Said W, 2018, PROC IEEE INT CONF S, P149, DOI 10.1109/ICSME.2018.00025
   Sasaki Y., 2007, Teach Tutor Mater, V1, P1
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Uludag Ö, 2018, LECT NOTES BUS INF P, V314, P232, DOI 10.1007/978-3-319-91602-6_16
   Uzun B, 2019, SOFTWARE PRACT EXPER, V49, P423, DOI 10.1002/spe.2667
   Vernon V., 2013, Implementing Domain-Driven Design
   Wizenty PN, 2018, LECT NOTES COMPUT SC, V11176, P549, DOI 10.1007/978-3-030-04771-9_41
   Wohlrab R, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P151, DOI 10.1109/ICSA.2019.00024
   YIN RK, 1981, KNOWLEDGE, V3, P97, DOI 10.1177/107554708100300106
   Zhang H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P51, DOI 10.1109/ICSA.2019.00014
   Zhong CX, 2022, SOFTWARE PRACT EXPER, V52, P2574, DOI 10.1002/spe.3138
NR 47
TC 1
Z9 1
U1 3
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2024
VL 54
IS 4
SI SI
BP 595
EP 616
DI 10.1002/spe.3272
EA OCT 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KD1F8
UT WOS:001085546700001
DA 2024-07-18
ER

PT J
AU Youn, D
   Lee, S
   Ryu, S
AF Youn, Dongjun
   Lee, Sungho
   Ryu, Sukyoung
TI Declarative static analysis for multilingual programs using CodeQL
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE declarative static program analysis; JNI programs; multilingual
   programs; Python-C programs
ID SYSTEMS
AB Declarative static program analysis has become one of the widely-used program analysis techniques. Declarative static analyzers perform three steps: creating databases of facts from program source code, evaluating rules to generate new facts, and running queries over facts to extract all information related to specific properties via query systems. Declarative static analyzers can easily target diverse programming languages by modifying only databases and rules for new languages. Because query systems are independent of programming languages, they are reusable for new languages. However, even when declarative analyzers support multiple programming languages they do not currently support the analysis of multilingual programs written in two or more programming languages. We propose a systematic methodology that extends a declarative static analyzer supporting multiple languages to support multilingual programs as well. The main idea is to reuse existing components of the analyzer. Our approach first generates a merged database of facts, consisting of multiple logical language spaces. It allows existing language-specific rules to derive new facts for the corresponding language from the facts in the corresponding language space. Then, it defines language-interoperation rules that handle the language interoperation semantics. Finally, it uses the same query system to get analysis results leveraging the language interoperation semantics. We develop a proof-of-concept declarative static analyzer for multilingual programs by extending CodeQL, which can track dataflows across language boundaries. Our evaluation shows that the analyzer successfully tracks dataflows across Java-C and Python-C language boundaries and detects genuine interoperation bugs in real-world multilingualprograms.
C1 [Youn, Dongjun; Ryu, Sukyoung] Korea Adv Inst Sci & Technol, Sch Comp, Daejeon 34141, South Korea.
   [Lee, Sungho] Chungnam Natl Univ, Dept Comp Sci & Engn, Daejeon, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Chungnam
   National University
RP Ryu, S (corresponding author), Korea Adv Inst Sci & Technol, Sch Comp, Daejeon 34141, South Korea.
EM sryu.cs@kaist.ac.kr
RI ; Ryu, Sukyoung/A-8543-2015
OI Youn, Dongjun/0000-0002-5766-2035; Ryu, Sukyoung/0000-0002-0019-9772
CR Allen N., 2015, P 4 ACM SIGPLAN INT, P13, DOI DOI 10.1145/2771284.2771287
   Allen N, 2015, LECT NOTES COMPUT SC, V9031, P131, DOI 10.1007/978-3-662-46663-6_7
   Alpuente Maria, 2010, Datalog Reloaded. First International Workshop, Datalog 2010. Revised Selected Papers, P1, DOI 10.1007/978-3-642-24206-9_1
   arguslab, 2019, NATIVEFLOWBENCH
   Avgustinov Pavel., 2016, 30 EUROPEAN C OBJECT
   Bae S, 2019, PROC INT CONF SOFTW, P223, DOI 10.1109/ICSE.2019.00038
   Bravenboer M, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P243
   Dawson S., 1996, SIGPLAN Notices, V31, P117, DOI 10.1145/249069.231399
   F-Droid, 2019, F DROID FREE OP SOUR
   Foundation PS, 2022, EXT PYTH C C
   Fourtounis George, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P388, DOI 10.1145/3395363.3397368
   Grichi M, 2021, IEEE T RELIAB, V70, P428, DOI 10.1109/TR.2020.3024873
   Hajiyev E., 2006, 20 EUROPEAN C OBJECT
   Hwang S, 2021, PROC INT CONF SOFTW, P1708, DOI 10.1109/ICSE43902.2021.00151
   IBM, 2021, T J WATS LIB AN
   Jin X, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P66, DOI 10.1145/2660267.2660275
   Jordan H, 2016, LECT NOTES COMPUT SC, V9780, P422, DOI 10.1007/978-3-319-41540-6_23
   Journault M, 2020, LECT NOTES COMPUT SC, V12031, P1, DOI 10.1007/978-3-030-41600-3_1
   Kochhar PS, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P563, DOI 10.1109/SANER.2016.112
   Lagouvardos S., 2020, 34 EUROPEAN C OBJECT, p15:1
   Lee S, 2020, IEEE INT C ELECTR TA, DOI 10.1109/icce-taiwan49838.2020.9258143
   Lee S, 2016, IEEE INT CONF AUTOM, P250, DOI 10.1145/2970276.2970368
   Li W, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P847, DOI 10.1145/3540250.3549173
   Li W, 2022, PROCEEDINGS OF THE 31ST USENIX SECURITY SYMPOSIUM, P2513
   Mergendahl S., 2022, 29 ANN NETWORK DISTR
   Meta, 2022, GLEAN SYST COLL DER
   Monat R., 2021, STATIC ANAL S SAS
   Naik M, 2006, ACM SIGPLAN NOTICES, V41, P308, DOI 10.1145/1133981.1134018
   Oracle, 2021, JAVA NATIVE INTERFAC
   Oracle, 2022, Java Native Interface Specification
   Park J., 2021, P 36 IEEEACM INT C A
   Park J., 2022, P 30 ACM JOINT EUROP
   Park J, 2021, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE43902.2021.00015
   Park J, 2020, IEEE INT CONF AUTOM, P647, DOI 10.1145/3324884.3416632
   Python Software Foundation, 2022, EXT PYTH C C
   Reps T., 1994, Compiler Construction. 5th International Conference, CC'94. Proceedings, P389
   Scholz B, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P196, DOI 10.1145/2892208.2892226
   Semmle, 2021, CODEQL
   Smaragdakis Yannis, 2010, Datalog Reloaded. First International Workshop, Datalog 2010. Revised Selected Papers, P245, DOI 10.1007/978-3-642-24206-9_14
   Smaragdakis Y, 2014, ACM SIGPLAN NOTICES, V49, P485, DOI [10.1145/2666356.2594320, 10.1145/2594291.2594320]
   Tan G., 2007, Proceedings of the 22Nd Annual ACM SIGPLAN Conference on Object-oriented Programming Systems and Applications, OOPSLA '07, P39
   van Rossum G, 2021, PYTHON DEV TEAM PYTH
   Wei FG, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1137, DOI 10.1145/3243734.3243835
   Whaley J, 2005, LECT NOTES COMPUT SC, V3780, P97
NR 44
TC 0
Z9 0
U1 4
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2023
VL 53
IS 7
BP 1472
EP 1495
DI 10.1002/spe.3199
EA MAR 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H9FS7
UT WOS:000946399900001
DA 2024-07-18
ER

PT J
AU Mi, Q
   Chen, MJ
   Cai, Z
   Jia, XB
AF Mi, Qing
   Chen, Mingjie
   Cai, Zhi
   Jia, Xibin
TI What makes a readable code? A causal analysis method
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE causal analysis; code readability; PC algorithm; program comprehension
AB Context:Code readability is one of the most important quality attributes for software source code. To investigate which features affect code readability, most existing studies rely on correlation-based methods. However, spurious correlations (a mathematical relationship wherein two variables appear to be causal but are not) involved in correlation-based methods may affect research conclusions. Objective:In order to remove spurious correlations and obtain conclusions from the perspective of causation as to what makes a readable code, we propose a causal theory-based approach to analyze the relationship between code features and code readability scores. Method:First, we adopt the PC algorithm and additive noise models to construct the causal graph on the basis of the selected code features. Then, we use the linear regression algorithm based on the back-door criterion to obtain the causal effect of different features on code readability. Result:We conduct a set of experiments on readability data labeled by human annotators. The experimental results show that the average number of comments positively impacts code readability, with each additional unit increasing the code readability score by 0.799 points. Whereas the average number of assignments, identifiers, and periods have a negative impact, with each additional unit decreasing the code readability score by 0.528, 0.281, and 0.170 points respectively. Conclusion:We believe that our findings will provide developers with a better understanding of the patterns behind code readability, and guide developers to optimize their code as the ultimate goal.
C1 [Mi, Qing; Cai, Zhi; Jia, Xibin] Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
   [Chen, Mingjie] South China Univ Technol, Sch Software Engn, Guangzhou, Peoples R China.
   [Cai, Zhi] Beijing Univ Technol, Fac Informat Technol, 100 Pingleyuan,Chaoyang Dist, Beijing, Peoples R China.
C3 Beijing University of Technology; South China University of Technology;
   Beijing University of Technology
RP Cai, Z (corresponding author), Beijing Univ Technol, Fac Informat Technol, 100 Pingleyuan,Chaoyang Dist, Beijing, Peoples R China.
EM caiz@bjut.edu.cn
RI Chen, Mingjie/F-1147-2018; jia, xibin/AAE-6620-2022; Mi,
   Qing/GQI-1620-2022
OI Chen, Mingjie/0000-0002-7400-5192; Mi, Qing/0000-0001-5063-3189
FU National Key Research and Development Program of China [2019YFE0107800];
   National Research Foundation of Korea [NRF-2019K1A3A1A20093097]; GHfund
   B [20220202, ghfund202202028015]; Beijing Natural Science Foundation
   [4202004]; Consulting Project for Major Strategic Decision Making for
   Serving Capital in 2022 from Beijing University of Technology
FX National Key Research and Development Program of China, Grant/Award
   Number:2019YFE0107800; National Research Foundation of Korea,
   Grant/Award Number: NRF-2019K1A3A1A20093097; GHfund B, Grant/Award
   Numbers: 20220202, ghfund202202028015; Beijing Natural Science
   Foundation, Grant/Award Number: 4202004; Consulting Project for Major
   Strategic Decision Making for Serving Capital in 2022 from Beijing
   University of Technology
CR Abbas N., 2010, P UM 13 STUD C COMP
   [Anonymous], 2006, P 9 INT S ARTIFICIAL
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Chen GBA, 2013, SOFTWARE PRACT EXPER, V43, P1337, DOI 10.1002/spe.2138
   Chickering D. M., 2003, Journal of Machine Learning Research, V3, P507, DOI 10.1162/153244303321897717
   Collard ML, 2013, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2013.85
   Cunha CarlosA., 2006, AOSD 06 P 5 INT C AS, P134
   Dorn J, 2012, MCS Thesis, V5, P11
   Embury SM, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P345, DOI 10.1109/WCRE.2001.957841
   Fitzpatrick R., 1996, Software quality: Definitions and strategic issues
   Friedman J, 2008, BIOSTATISTICS, V9, P432, DOI 10.1093/biostatistics/kxm045
   Geiger Dan, 1990, Machine Intelligence and Pattern Recognition, V10, P139, DOI [10.1016/B978-0-444-88738-2.50018-X, DOI 10.1016/B978-0-444-88738-2.50018-X]
   Glymour C, 2019, FRONT GENET, V10, DOI 10.3389/fgene.2019.00524
   Hoyer Patrik, 2008, ADV NEURAL INFORM PR, V21
   Huang Y, 2020, SOFTWARE PRACT EXPER, V50, P227, DOI 10.1002/spe.2772
   Jiang YJ, 2020, IEEE T SOFTWARE ENG, V46, P732, DOI 10.1109/TSE.2018.2868762
   Kalisch M, 2007, J MACH LEARN RES, V8, P613
   Kleinbaum D.G., 2002, Logistic Regression
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Lewis RJ., 2000, INTRO CLASSIFICATION, P14
   MIARA RJ, 1983, COMMUN ACM, V26, P861, DOI 10.1145/182.358437
   Mitchell T. M., 1997, MACH LEARN
   Neath AA, 2012, WIRES COMPUT STAT, V4, P199, DOI 10.1002/wics.199
   Oliveira D, 2020, PROC IEEE INT CONF S, P348, DOI 10.1109/ICSME46990.2020.00041
   Pearl J., 2009, Causality, DOI DOI 10.1017/CBO9780511803161
   Pearl J, 2016, J CAUSAL INFERENCE, V4, DOI 10.1515/jci-2016-0021
   Pearl Judea, 2010, Causality: objectives and assessment, P39
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Scholkopf B., 2022, PROBABILISTIC CAUSAL, P765
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Sharma A., 2020, DOWHY END TO END LIB
   Shen ZY, 2018, PROCEEDINGS OF THE 2018 ACM MULTIMEDIA CONFERENCE (MM'18), P411, DOI 10.1145/3240508.3240577
   Shimizu S, 2006, J MACH LEARN RES, V7, P2003
   Shinyama Y, 2018, ASIA PAC SOFWR ENG, P325, DOI 10.1109/APSEC.2018.00047
   Spirtes P., 2000, CAUSATION PREDICTION
   Spirtes P., 2000, CONSTRUCTING BAYESIA
   Spirtes Peter, 2016, Appl Inform (Berl), V3, P3
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   Trockman A, 2018, IEEE WORK CONF MIN S, P314, DOI 10.1145/3196398.3196441
   Uni Yarmouk., 2013, International Journal of Software Engineering and Its Applications, V7, P441
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Xiaoran Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P35, DOI 10.1109/WCRE.2011.15
   Zhang X., 2021, CVPR, P5372
   Zhu Shengyu., 2019, Causal Discovery with Reinforcement Learning
NR 50
TC 0
Z9 0
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2023
VL 53
IS 6
BP 1391
EP 1409
DI 10.1002/spe.3192
EA FEB 2023
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E8MO0
UT WOS:000936248700001
DA 2024-07-18
ER

PT J
AU Das, J
   Ghosh, S
   Mukherjee, A
   Ghosh, SK
   Buyya, R
AF Das, Jaydeep
   Ghosh, Shreya
   Mukherjee, Anwesha
   Ghosh, Soumya K.
   Buyya, Rajkumar
TI RESCUE: Enabling green healthcare services using integrated
   IoT-edge-fog-cloud computing environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; edge computing; geospatial query processing; green
   computing; healthcare service; internet of things; spatio-temporal data
ID INTERNET; SCHEME; THINGS
AB Internet of Things (IoT) has a pivotal role in developing intelligent and computational solutions to facilitate varied real-life applications. To execute high-end computations and data analytics, IoT and cloud-based solutions play the most significant role. However, frequent communication with long distant cloud servers is not a delay-aware and energy-efficient solution while providing time-critical applications such as healthcare. This article explores the possibilities and opportunities of integrating cloud technology with fog and edge-based computing to provide healthcare services to users in exigency. Here, we propose an end-to-end framework named RESCUE (enabling green healthcare services using integrated iot-edge-fog-cloud computing environments), consisting efficient spatio-temporal data analytics module for efficient information sharing, spatio-temporal data analysis to predict the path for users to reach the destination (healthcare center or relief camps) with minimum delay in the time of exigency (say, natural disaster). This module analyzes the collected information through crowd-sourcing and assists the user by extracting optimal path postdisaster when many regions are nonreachable. Our work is different from the existing literature in varied aspects: it analyses the context and semantics by augmenting real-time volunteered geographical information (VGI) and refines it. Furthermore, the novel path prediction module incorporates such VGI instances and predicts routes in emergencies avoiding all possible risks. Also, the design of development of a latency-aware, power-aware data-driven analytics system helps to resolve any spatio-temporal query more efficiently compared to the existing works for any time-critical application. The experimental and simulation results outperform the baselines in terms of accuracy, delay, and power consumption.
C1 [Das, Jaydeep] Indian Inst Technol Kharagpur, Adv Technol Dev Ctr, Kharagpur 721302, W Bengal, India.
   [Das, Jaydeep] KIIT Deemed Univ, Sch Comp Engn, Bhubaneswar, Odisha, India.
   [Ghosh, Shreya; Ghosh, Soumya K.] Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur, W Bengal, India.
   [Ghosh, Shreya] Penn State Univ, Coll Informat Sci & Technol, State Coll, PA USA.
   [Mukherjee, Anwesha] Mahishadal Raj Coll, Dept Comp Sci, Mahishadal, W Bengal, India.
   [Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kharagpur; Kalinga Institute of Industrial Technology
   (KIIT); Indian Institute of Technology System (IIT System); Indian
   Institute of Technology (IIT) - Kharagpur; Pennsylvania Commonwealth
   System of Higher Education (PCSHE); Pennsylvania State University;
   University of Melbourne
RP Das, J (corresponding author), Indian Inst Technol Kharagpur, Adv Technol Dev Ctr, Kharagpur 721302, W Bengal, India.
EM jaydeep@iitkgp.ac.in
RI DAS, JAYDEEP/HIR-3997-2022; Mukherjee, Anwesha/J-1409-2018; Buyya,
   Rajkumar/C-3424-2009
OI Das, Jaydeep/0000-0002-7586-8205; Mukherjee,
   Anwesha/0000-0001-9110-8591; Ghosh, Shreya/0000-0002-6970-8889; Buyya,
   Rajkumar/0000-0001-9754-6496
FU Department of Science and Technology, Government of India, under
   National Geospatial Chair Professorship scheme
FX The work is partially supported by the research grant from Department of
   Science and Technology, Government of India, under National Geospatial
   Chair Professorship scheme.
CR Albrecht M, 2017, 2017 IEEE MANCHESTER POWERTECH
   Asghari M, 2020, INFORM PROCESS MANAG, V57, DOI 10.1016/j.ipm.2020.102340
   Barik RK, 2019, J AMB INTEL HUM COMP, V10, P551, DOI 10.1007/s12652-018-0702-x
   Bharti P, 2019, IEEE T MOBILE COMPUT, V18, P857, DOI 10.1109/TMC.2018.2841905
   Chang RS, 2006, 20TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOL 2, PROCEEDINGS, P308
   Chelladurai U, 2022, J AMB INTEL HUM COMP, V13, P693, DOI 10.1007/s12652-021-03163-3
   Das J., 2021, MACHINE LEARNING BIG, P37
   Das J., 2021, IEEE T SERV COMPUT, P1
   Das J, 2020, SIMUL MODEL PRACT TH, V100, DOI 10.1016/j.simpat.2019.102043
   Das J, 2016, IEEE CONF CLOUD COMP, P1, DOI [10.1109/CCEM.2016.011, 10.1109/CCEM.2016.10]
   Elazhary H, 2019, J NETW COMPUT APPL, V128, P105, DOI 10.1016/j.jnca.2018.10.021
   Eldrandaly KA, 2019, IEEE ACCESS, V7, P19653, DOI 10.1109/ACCESS.2019.2897012
   Eom S, 2020, INFORM PROCESS MANAG, V57, DOI 10.1016/j.ipm.2020.102205
   Farooq MS, 2019, IEEE ACCESS, V7, P156237, DOI 10.1109/ACCESS.2019.2949703
   Ghosh S., 2021, ARXIV PREPRINT ARXIV
   Ghosh S, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P810, DOI 10.1109/CCGrid49817.2020.000-5
   Ghosh S, 2020, J NETW COMPUT APPL, V164, DOI 10.1016/j.jnca.2020.102692
   Ghosh S, 2020, INT CONF COMMUN SYST, DOI [10.1109/COMSNETS48256.2020.9027345, 10.1109/comsnets48256.2020.9027345]
   Ghosh S, 2020, IEEE T NETW SCI ENG, V7, P2271, DOI 10.1109/TNSE.2019.2941754
   Ghosh S, 2019, INT CONF COMMUN SYST, P765, DOI [10.1109/COMSNETS.2019.8711428, 10.1109/comsnets.2019.8711428]
   Gilchrist A, 2016, IND 4 0, P195, DOI [DOI 10.1007/978-1-4842-2047-4, 10.1007/978-1-4842-2047-4_13, 10.1007/978-1-4842-2047-4]
   Goodchild MF, 2007, GEOJOURNAL, V69, P211, DOI 10.1007/s10708-007-9111-y
   Goranson C., 2013, Crowdsourcing Geographic Knowledge: Volunteered Geographic Information (VGI) in Theory and Practice, P329, DOI [DOI 10.1007/978-94-007-4587-2_18, 10.1007/978-94-007-4587-2_18/COVER, DOI 10.1007/978-94-007-4587-2_18/COVER]
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Huang J, 2014, IEEE INTERNET THINGS, V1, P196, DOI 10.1109/JIOT.2014.2301819
   Kafhali S.E., 2018, 2018 4 INT C CLOUD C, P1
   Kaur PD, 2014, COMPUT METH PROG BIO, V113, P346, DOI 10.1016/j.cmpb.2013.09.013
   Khalifa S, 2018, IEEE T MOBILE COMPUT, V17, P1353, DOI 10.1109/TMC.2017.2761744
   Lan Yushi, 2012, Proceedings of the 2012 IEEE International Conference on Computer Science and Automation Engineering (CSAE 2012), P630, DOI 10.1109/CSAE.2012.6273031
   Lee CS, 2014, IEEE SENS J, V14, P15, DOI 10.1109/JSEN.2013.2279391
   Leu JS, 2015, IEEE COMMUN LETT, V19, P259, DOI 10.1109/LCOMM.2014.2379715
   Li T, 2012, IEEE ACM T NETWORK, V20, P1978, DOI 10.1109/TNET.2012.2192448
   Mahmud R, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3186592
   Martin JP, 2020, J AMB INTEL HUM COMP, V11, P5259, DOI 10.1007/s12652-020-01854-x
   Modaresnezhad M, 2020, INFORM PROCESS MANAG, V57, DOI 10.1016/j.ipm.2019.102135
   Mooney P, 2013, J AMB INTEL HUM COMP, V4, P731, DOI 10.1007/s12652-012-0149-4
   Mukherjee A, 2021, J AMB INTEL HUM COMP, V12, P943, DOI 10.1007/s12652-020-02113-9
   Namboodiri V, 2010, IEEE T MOBILE COMPUT, V9, P44, DOI 10.1109/TMC.2009.96
   Puliafito C, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3301443
   Rajavel R, 2021, J AMB INTEL HUM COMP, DOI 10.1007/s12652-021-03157-1
   Ray PP, 2019, J NETW COMPUT APPL, V140, P1, DOI 10.1016/j.jnca.2019.05.005
   Riboni D, 2011, PERS UBIQUIT COMPUT, V15, P271, DOI 10.1007/s00779-010-0331-7
   Rodrigues JJPC, 2018, IEEE ACCESS, V6, P13129, DOI 10.1109/ACCESS.2017.2789329
   Santos J, 2016, J NETW COMPUT APPL, V71, P194, DOI 10.1016/j.jnca.2016.03.014
   Schurgers C, 2001, 2001 MILCOM, VOLS 1 AND 2, PROCEEDINGS, P357, DOI 10.1109/MILCOM.2001.985819
   Senaratne H, 2017, INT J GEOGR INF SCI, V31, P139, DOI 10.1080/13658816.2016.1189556
   Singh Shio Kumar, 2010, International Journal of Advanced Networking and Applications, V2, P570
   Singh SK, 2010, International Journal of Wireless & Mobile Networks (IJWMN), V2, P49
   Sisinni E, 2018, IEEE T IND INFORM, V14, P4724, DOI 10.1109/TII.2018.2852491
   Solutions CFC, 2015, UNL POW INT THINGS
   Vales R, 2019, J NETW COMPUT APPL, V135, P84, DOI 10.1016/j.jnca.2019.03.001
   Vinten-Johansen Peter., 2003, CHOLERA CHLOROFORM S
   Xiong X, 2020, INFORM PROCESS MANAG, V57, DOI 10.1016/j.ipm.2020.102337
   Xu LD, 2014, IEEE T IND INFORM, V10, P2233, DOI 10.1109/TII.2014.2300753
   Zheng DeniseE., 2015, Leveraging the Internet of Things for a More Efficient and Effective Military
NR 55
TC 10
Z9 10
U1 7
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2022
VL 52
IS 7
BP 1615
EP 1642
DI 10.1002/spe.3078
EA FEB 2022
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1X8ZE
UT WOS:000760729000001
DA 2024-07-18
ER

PT J
AU Steele, GL
   Vigna, S
AF Steele, Guy L. Jr Jr
   Vigna, Sebastiano
TI Computationally easy, spectrally good multipliers for congruential
   pseudorandom number generators
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE congruential generators; pseudorandom number generators
ID PARALLEL
AB Congruential pseudorandom number generators rely on good multipliers, that is, integers that have good performance with respect to the spectral test. We provide lists of multipliers with a good lattice structure up to dimension eight and up to lag eight for generators with typical power-of-two moduli, analyzing in detail multipliers close to the square root of the modulus, whose product can be computed quickly.
C1 [Steele, Guy L. Jr Jr] Oracle Labs, Burlington, MA 01803 USA.
   [Vigna, Sebastiano] Univ Milan, Dipartimento Informat, Via Celoria 18, I-20133 Milan, MI, Italy.
C3 Oracle; University of Milan
RP Vigna, S (corresponding author), Univ Milan, Dipartimento Informat, Via Celoria 18, I-20133 Milan, MI, Italy.
EM vigna@acm.org
RI Vigna, Sebastiano/R-5285-2017
OI Vigna, Sebastiano/0000-0002-3257-651X
CR [Anonymous], 2018, ARM LTD110 FULBORURN
   [Anonymous], 2019, INTEL CORPORATION IN
   Bourbaki N., 1947, ALGEBRE CHAPITRE 2 A
   COVEYOU RR, 1967, J ACM, V14, P100, DOI 10.1145/321371.321379
   DOWNHAM DY, 1967, COMPUT J, V10, P74, DOI 10.1093/comjnl/10.1.74
   DURST MJ, 1989, 1989 WINTER SIMULATION CONFERENCE PROCEEDINGS, P462, DOI 10.1109/WSC.1989.718715
   Entacher K, 2002, MATH COMPUT, V71, P1231, DOI 10.1090/S0025-5718-01-01415-6
   Entacher K., 1999, ACM Transactions on Modeling and Computer Simulation, V9, P31, DOI 10.1145/301677.301682
   FISHMAN GS, 1986, SIAM J SCI STAT COMP, V7, P24, DOI 10.1137/0907002
   HALTON JH, 1989, J COMPUT PHYS, V84, P1, DOI 10.1016/0021-9991(89)90180-0
   HORMANN W, 1993, ACM T MATH SOFTWARE, V19, P489, DOI 10.1145/168173.168414
   Knuth D.E., 1998, ART COMPUTER PROGRAM, V3rd
   L'ecuyer P, 1999, MATH COMPUT, V68, P249, DOI 10.1090/S0025-5718-99-00996-5
   L'Ecuyer P., 1997, INFORMS Journal on Computing, V9, P206, DOI 10.1287/ijoc.9.2.206
   L'Ecuyer P, 2003, MATH COMPUT SIMULAT, V62, P395, DOI 10.1016/S0378-4754(02)00234-3
   L'Ecuyer P., 1997, INFORMS Journal on Computing, V9, P57, DOI 10.1287/ijoc.9.1.57
   Lehmer D.H, 1951, P 2 S LARG SCAL DIG, V26, P141
   LENSTRA AK, 1982, MATH ANN, V261, P515, DOI 10.1007/BF01457454
   LEWIS PAW, 1969, IBM SYST J, V8, P136, DOI 10.1147/sj.82.0136
   Losego, 2016, SUPER MARIO WORLD RA
   MARSAGLIA G, 1968, P NATL ACAD SCI USA, V61, P25, DOI 10.1073/pnas.61.1.25
   Marsaglia G., 1985, Computer Science and Statistics. Proceedings of the Sixteenth Symposium on the Interface, P3
   PERCUS OE, 1989, J PARALLEL DISTR COM, V6, P477, DOI 10.1016/0743-7315(89)90002-6
   Shoup V., Ntl: A library for doing number theory
   Steele GL, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3485525
NR 25
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 443
EP 458
DI 10.1002/spe.3030
EA SEP 2021
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000701311400001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Laso, S
   Berrocal, J
   García-Alonso, J
   Canal, C
   Murillo, JM
AF Laso, Sergio
   Berrocal, Javier
   Garcia-Alonso, Jose
   Canal, Carlos
   Manuel Murillo, Juan
TI Human microservices: A framework for turning humans into service
   providers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE end devices; human in the loop; microservices; mist computing; mobile
   computing
AB During the last decade, the mobile application market has grown steadily thanks to the massive use of smartphones and the emergence of cloud computing for offloading computation tasks and improving the quality of experience. With the more recent deployment of Internet of Things (IoT) devices, this cloud-based architectural design and the corresponding communication flow has been maintained. Nevertheless, the increasing amount of information exchanged, the stringent requirements of many IoT applications, and the need for these applications to adapt their behavior in real time to the user's context set these architectural assumptions a challenge. Paradigms such as mobile, mist, and edge computing have recently been proposed to exploit the computational and storage capabilities of current smartphones and IoT devices in order to onload some tasks onto them, reducing the overhead on both the cloud and the network. Currently, the application of these paradigms requires much attention from skilled developers to create ad hoc systems, as there lack standards and tools facilitating their use. This communication introduces Human Microservices as a framework facilitating the deployment of APIs on companion devices in order to provide personal and updated information that can be consumed by other entities. The framework improves the integration of humans in the IoT loop and facilitates the deployment of computation units in devices closer to end users, enhancing system response time by reducing the stress on cloud and network infrastructure. The proposed framework is based on existing standards in order to improve software quality and shorten the learning curve.
C1 [Laso, Sergio; Berrocal, Javier; Garcia-Alonso, Jose; Manuel Murillo, Juan] Univ Extremadura, Dept Comp & Telemat Syst Engn, Avda Univ Sn, Caceres 10003, Spain.
   [Canal, Carlos] Univ Malaga, Dept Comp Sci, Malaga, Spain.
C3 Universidad de Extremadura; Universidad de Malaga
RP Berrocal, J (corresponding author), Univ Extremadura, Dept Comp & Telemat Syst Engn, Avda Univ Sn, Caceres 10003, Spain.
EM jberolm@unex.es
RI Berrocal, Javier/B-2524-2015; Garcia-Alonso, Jose/A-4316-2017; Canal,
   Carlos/H-4782-2015
OI Berrocal, Javier/0000-0002-1007-2134; Garcia-Alonso,
   Jose/0000-0002-6819-0299; Laso, Sergio/0000-0001-8911-9371
FU Interreg V-A Espanaa-Portugal (POCTEP) [4IE+, 0499-4IE-PLUS-4-E];
   Department of Economy, Science and Digital Agenda of the Government of
   Extremadura [GR18112, IB18030]; European Regional Development Fund;
   FEDER/Junta de Andalucia [UMA18-FEDERJA-180]; MCI/AEI/FEDER/UE
   [PGC2018-094905-B-I00, RTI2018-094591-B-I00]; RCIS research network
   [RED2018-102654-T]
FX Interreg V-A Espanaa-Portugal (POCTEP), Grant/Award Numbers: 4IE+,
   0499-4IE-PLUS-4-E; Department of Economy, Science and Digital Agenda of
   the Government of Extremadura, Grant/Award Numbers: GR18112, IB18030;
   European Regional Development Fund; FEDER/Junta de Andalucia,
   Grant/Award Number: UMA18-FEDERJA-180; MCI/AEI/FEDER/UE, Grant/Award
   Numbers: PGC2018-094905-B-I00, RTI2018-094591-B-I00; RCIS research
   network, Grant/Award Number: RED2018-102654-T
CR Akrivopoulos O, 2017, P INT COMP SOFTW APP, P288, DOI 10.1109/COMPSAC.2017.178
   Alam M, 2018, IEEE COMMUN MAG, V56, P118, DOI 10.1109/MCOM.2018.1701233
   [Anonymous], 2020, AM WEB SERV LAMBD
   [Anonymous], 2020, Internet of Things (IoT) connected devices installed base worldwide from 2015 to 2025
   [Anonymous], 2020, AWS IOT GREENGR
   [Anonymous], 2019, STATISTA MOBILE INTE
   [Anonymous], 2020, FIREB CLOUD MESS
   [Anonymous], 2020, TWILIO GUARDRAIL
   Barbera MV, 2014, IEEE INFOCOM SER, P2355, DOI 10.1109/INFOCOM.2014.6848180
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Berrocal J, 2017, PERVASIVE MOB COMPUT, V35, P32, DOI 10.1016/j.pmcj.2016.06.011
   De Moor K, 2010, MOBILE NETW APPL, V15, P378, DOI 10.1007/s11036-010-0223-0
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Faticanti F, 2020, 2020 INTERNATIONAL CONFERENCE ON OMNI-LAYER INTELLIGENT SYSTEMS (IEEE COINS 2020), P36, DOI 10.1109/coins49042.2020.9191379
   Guillén J, 2014, IEEE SOFTWARE, V31, P48, DOI 10.1109/MS.2013.140
   Harjula E, 2019, IEEE ACCESS, V7, P119856, DOI 10.1109/ACCESS.2019.2936714
   Herrera JL., 2020, P 2020 IEEE INT C SM
   Initiative O, 2020, OPENAPI SPEC REP CON
   Kallel A, 2021, SOFTWARE PRACT EXPER, V51, P91, DOI 10.1002/spe.2924
   Linaje M, 2019, IEEE ACCESS, V7, P123860, DOI 10.1109/ACCESS.2019.2938443
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Miranda J, 2015, IEEE INTERNET COMPUT, V19, P40, DOI 10.1109/MIC.2015.24
   Noura M, 2019, LECT NOTES COMPUT SC, V11496, P509, DOI 10.1007/978-3-030-19274-7_36
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   Petrov V, 2019, IEEE COMMUN MAG, V57, P114, DOI 10.1109/MCOM.2018.1700018
   Ren J, 2017, IEEE NETWORK, V31, P96, DOI 10.1109/MNET.2017.1700030
   Rosenberger Patrick, 2018, Procedia CIRP, V72, P1172, DOI 10.1016/j.procir.2018.03.242
   Sambra A.V., 2016, Tech. Rep.
   Satyanarayanan M., 2011, ACM SIGMOBILE Mobile Comput. Commun. Rev., V15, P2, DOI [DOI 10.1145/2016598.2016600, 10.1145/2016598.2016600]
   Shahidinejad A, 2020, SOFTWARE PRACT EXPER, V50, P2212, DOI 10.1002/spe.2888
   Shakarami A, 2020, SOFTWARE PRACT EXPER, V50, P1719, DOI 10.1002/spe.2839
   Stojkoska BLR, 2017, J CLEAN PROD, V140, P1454, DOI 10.1016/j.jclepro.2016.10.006
   Swagger, 2020, SWAGG COD
   Wendt N, 2018, IEEE T MOBILE COMPUT, V17, P2127, DOI 10.1109/TMC.2018.2795604
   Yousefpour A, 2019, J SYST ARCHITECT, V98, P289, DOI 10.1016/j.sysarc.2019.02.009
   Yu RZ, 2018, IEEE INFOCOM SER, P783, DOI 10.1109/INFOCOM.2018.8486269
NR 36
TC 8
Z9 8
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2021
VL 51
IS 9
SI SI
BP 1910
EP 1935
DI 10.1002/spe.2976
EA APR 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT9JV
UT WOS:000639131200001
DA 2024-07-18
ER

PT J
AU Freire, AFAA
   Sampaio, AF
   Carvalho, LHL
   Medeiros, O
   Mendonça, NC
AF Freire, Augusto Flavio A. A.
   Sampaio, Americo Falcone
   Carvalho, Luis Heustakio L.
   Medeiros, Otavio
   Mendonca, Nabor C.
TI Migrating production monolithic systems to microservices using aspect
   oriented programming
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE aspect&#8208; oriented programming; microservice architecture; system
   migration
AB Several organizations need to address the challenge to migrate current traditional monolithic applications in production to microservices, preferably, without having to schedule maintenances to take the application offline. This article presents an approach for migrating to microservices with almost zero downtime and minimal changes in the monolithic code. The approach is based on the concepts of aspect-oriented programming (AOP) and reflection to enable to intercept calls inside the monolith and transform them into service requests invoking the newly built microservices using the concept of around advices. The aspects do the "dirty work" of decoupling what will be refactored and which service to call and practically "zero" code changes need to be done in the original monolithic code. This enables one key novel contribution of our migration approach which is the ability to revert code and data changes without having to take the system offline. Two applications are used as proofs of concept to demonstrate that the proposed approach enables to go "forward" or "backward" among different versions of the application with minimal code or data changes. An evaluation performed in the cloud demonstrates that this work does not introduce significant performance or cost overhead when compared to the current state of the art and to the original monolith.
C1 [Freire, Augusto Flavio A. A.; Sampaio, Americo Falcone; Carvalho, Luis Heustakio L.; Medeiros, Otavio; Mendonca, Nabor C.] Univ Fortaleza, Programa Posgrad Informat Aplicada, Av Washington Soares 1321, BR-60811905 Fortaleza, CE, Brazil.
C3 Universidade Fortaleza
RP Sampaio, AF (corresponding author), Univ Fortaleza, Programa Posgrad Informat Aplicada, Av Washington Soares 1321, BR-60811905 Fortaleza, CE, Brazil.
EM americo.sampaio@unifor.br
RI Mendonça, Nabor C/O-8453-2015; Sampaio, Americo/C-7057-2016
OI Sampaio, Americo/0000-0003-0267-268X
CR Abdullah M, 2019, J SYST SOFTWARE, V151, P243, DOI 10.1016/j.jss.2019.02.031
   [Anonymous], JAVA TM TUTORIALS RE
   [Anonymous], Amazon EC2 Instance Purchasing Options
   [Anonymous], 2018, IEEE T SERV COMPUT
   [Anonymous], FENGLC PGADMIN4
   [Anonymous], 1998, Queueing networks and Markov chains: modeling and performance evaluation with computer science applications
   [Anonymous], SPRING PETCLINIC MIC
   Authors, PROMETHEUS
   Balalaie A., 2015, TRSUTCEASE201501
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Balalaie A, 2016, COMM COM INF SC, V567, P201, DOI 10.1007/978-3-319-33313-7_15
   Bass L., 1997, SOFTWARE ARCHITECTUR
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Bucchiarone A, 2018, IEEE SOFTWARE, V35, P50, DOI 10.1109/MS.2018.2141026
   Corp, GATL
   Cunha M, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3825
   Di Francesco P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P29, DOI 10.1109/ICSA.2018.00012
   Edson, 2017, MIGRATING MICROSERVI, V1
   Eisele Markus., 2016, Modern Java EE Design Patterns: Building Scalable Architecture for Sustainable Enterprise Development
   Fowler M., 2004, STRANGLER PATTERN
   Freire AFAA., 2021, SOFTWARE PRACT EXPER, P1
   Fritzsch J, 2019, LECT NOTES COMPUT SC, V11350, P128, DOI 10.1007/978-3-030-06019-0_10
   Furda A, 2018, IEEE SOFTWARE, V35, P63, DOI 10.1109/MS.2017.440134612
   Gonçalves M, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P813, DOI 10.1109/CLOUD.2015.112
   Gouigoux JP, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P62, DOI 10.1109/ICSAW.2017.35
   Group TPGD, POSTGRESQL WORLDS MO
   Hilsdale E., 2004, INT C ASPECT ORIENTE, P26
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Knoche H, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.2141035
   KOJARSKI S, 2003, SOFTWARE ENG PROPERT
   Lewis J., 2014, Microservices: A definition of this new architectural term
   Little M., 2018, WHY SEGMENT RETURNED
   Missbach M., 2005, Adaptive Hardware-Infrastrukturen fur SAP
   Newman, 2015, BUILDING MICROSERVIC, V1
   Noonan A., 2018, Goodbye Microservices: From 100s of problem children to 1 superstar
   Peuser, 2019, P INT C MICR MICR 20
   Pigazzini I, 2019, LECT NOTES COMPUT SC, V11681, P247, DOI 10.1007/978-3-030-29983-5_17
   Richardson C., 2016, REFACTORING MONOLITH
   Richardson Chris., 2019, MICROSERVICE PATTERN
   Rouesnel W., POSTGRES EXPORTER
   Smith, 2016, MICROSERVICES DESIGN, V1
   Spring, 2018, WEB SERVLET STACK
   Spring, 2017, SPRING CLOUD GATEWAY
   Spring, 2017, SERVICE REGISTRATION
   Valente, 2016, 3 BRAZ WORKSH SOFTW, V1
NR 46
TC 8
Z9 9
U1 2
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1280
EP 1307
DI 10.1002/spe.2956
EA MAR 2021
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000623940500001
DA 2024-07-18
ER

PT J
AU Xie, PF
   Wang, YL
   He, B
   Xie, GQ
AF Xie, Pingfu
   Wang, Yunlong
   He, Bo
   Xie, Guoqi
TI AutoToolVCC: Variable consistency check tool for automotive software
   projects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automotive software practice; automotive software project; variable
   consistency check
AB Automotive software systems have become increasingly complex and huge, leading to long development cycle and increased development difficulty. When a complete automotive software project has reached a scale of several gigabytes, the complicated development process is prone to produce the following two irregular problems: (1) variable inconsistency problem and (2) code coexistence problem. These irregular problems may eventually lead to serious consequences, such as car crashes. In response to the above irregular problems, we develop a variable consistency check tool called AutoToolVCC for automotive software projects. AutoToolVCC divides the variable consistency check process into two stages: (1) extracting all variable information from the automotive software project and (2) checking the consistency of the variables through the variable preprocessing technique and the variable attribute check technique. After an actual check of multiple automotive software projects (approximately 500-1000 MB in size) provided by an automotive manufacturer, the accuracy of variable consistency check is as high as 100%, and the check time only takes about 10-30 s, whereas the pervious plain method needs 100-600 s.
C1 [Xie, Pingfu; Wang, Yunlong; Xie, Guoqi] Hunan Univ, Coll Comp Sci & Elect Engn, Changsha 410082, Hunan, Peoples R China.
   [Xie, Pingfu; Wang, Yunlong; Xie, Guoqi] Key Lab Embedded & Network Comp Hunan Prov, Changsha, Peoples R China.
   [He, Bo] United Automot Elect Syst Co Ltd, Shanghai, Peoples R China.
C3 Hunan University
RP Xie, GQ (corresponding author), Hunan Univ, Coll Comp Sci & Elect Engn, Changsha 410082, Hunan, Peoples R China.
EM xgqman@hnu.edu.cn
OI Xie, Guoqi/0000-0001-6625-0350
FU National Natural Science Foundation of China [61932010, 61972139,
   61702172, 61672217]; Industry-University-Research Project of United
   Automotive Electronic Systems Co., Ltd. [20TMS0047CN]; Natural Science
   Foundation of Hunan Province [2018JJ3076]; Fundamental Research Funds
   for the Central Universities, Hunan University, China
FX National Natural Science Foundation of China, Grant/Award Numbers:
   61932010, 61972139, 61702172, 61672217; Industry-University-Research
   Project of United Automotive Electronic Systems Co., Ltd., Grant/Award
   Number: 20TMS0047CN; Natural Science Foundation of Hunan Province,
   Grant/Award Number: 2018JJ3076; Fundamental Research Funds for the
   Central Universities, Hunan University, China
CR Altheide DL, 2014, INT J CYBER WARF TER, V4, P1, DOI 10.4018/ijcwt.2014010101
   Altinger H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P688, DOI 10.1109/SANER.2016.81
   Åström A, 2011, VDI BERICHT, V2132, P361
   Baek JW, 2011, IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS (ICCE 2011), P573, DOI 10.1109/ICCE.2011.5722745
   Bauer A, 2005, P SAE 2005 WORLD C D
   Bodenstein C, 2010, IEEE SYS MAN CYBERN
   Ebert C, 2017, IEEE SOFTWARE, V34, P33, DOI 10.1109/MS.2017.82
   Esposito F, 2014, J ELECTR SYST, V10, P417
   Fürst S, 2010, DES AUT TEST EUROPE, P256
   Jo HC, 2009, P ICCAS SICE 2009 FU
   Kim JS, 2010, 34 ANN IEEE INT COMP
   Macher G, 2016, P 8 EUR C EMB REAL T
   Petrenko A, 2013, IEEE ICST WORKSHOP, P198, DOI 10.1109/ICSTW.2013.31
   Rao AC, 2007, P C AUT EL WARW UK
   Rapos EJ, 2015, IEEE ICST WORKSHOP
   Rinaldi FR, 2015, RESPONSIBLE FASHION COMPANY: INTEGRATING ETHICS AND AESTHETICS IN THE VALUE CHAIN, P1
   Rinaldi G, 2016, SOUND VIB, V50
   Sekulic S, 2018, P PAP 5 INT C EL EL
   Trei M, 2016, P INT C PROD FOC SOF
   Xie GQ, 2021, IEEE T INTELL TRANSP, V22, P3675, DOI 10.1109/TITS.2020.3027469
   Xie GQ, 2018, ACM T DES AUTOMAT EL, V23, DOI 10.1145/3230620
   Xie GQ, 2018, IEEE T RELIAB, V67, P196, DOI 10.1109/TR.2017.2778070
   Xie GQ, 2018, SOFTWARE PRACT EXPER, V48, P366, DOI 10.1002/spe.2472
   Ziegenbein D, 2005, DES AUT TEST EUROPE, P171, DOI 10.1109/DATE.2005.77
NR 24
TC 1
Z9 1
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2306
EP 2316
DI 10.1002/spe.2923
EA NOV 2020
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000586758700001
DA 2024-07-18
ER

PT J
AU Wang, TT
   Pang, BB
   Li, XX
   Wang, Y
   Huang, CQ
   Gong, J
   Sun, GA
   Liu, D
AF Wang, Tingting
   Pang, Beibei
   Li, Xinxi
   Wang, Yan
   Huang, Chaoqiang
   Gong, Jian
   Sun, Guangai
   Liu, Dong
TI <i>MyNeutronDAQ</i>: A general program for data acquisition of neutron
   scattering spectrometers at China Mianyang Research Reactor and on-line
   data-analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE China Mianyang Research Reactor; data acquisition; graphical user
   interface; neutron scattering spectrometers; on&#8208; line analysis
AB MyNeutronDAQ, a graphical user interface (GUI) program for data acquisition of neutron scattering spectrometers at China Mianyang Research Reactor (CMRR) and on-line data-analysis has been developed. The program is written in Microsoft Visual C++, which runs under Windows operating systems. Based on the characters of the hardware connection and time-to-digital converter (TDC) systems of the spectrometers (taking the time-of-flight and polarized neutron reflectometer [TPNR] Diting as the example), a valid event identification and screening protocol is embedded into the program. Moreover, the program design and key features of MyNeutronDAQ such as visualization interface, optional output data format, batch mode, and functions of user-friendly on-line analysis, are presented. Taking the program specifically for small-angle neutron scattering (SANS) Suanni as the example, specific applications of the MyNeutronDAQ are further presented.
C1 [Wang, Tingting; Pang, Beibei; Li, Xinxi; Wang, Yan; Huang, Chaoqiang; Gong, Jian; Sun, Guangai; Liu, Dong] China Acad Engn Phys CAEP, Key Lab Neutron Phys, Mianyang 621999, Sichuan, Peoples R China.
   [Wang, Tingting; Pang, Beibei; Li, Xinxi; Wang, Yan; Huang, Chaoqiang; Gong, Jian; Sun, Guangai; Liu, Dong] China Acad Engn Phys CAEP, Inst Nucl Phys & Chem INPC, Mianyang 621999, Sichuan, Peoples R China.
   [Wang, Tingting] Univ Sci & Technol China, Dept Modern Phys, Hefei, Peoples R China.
C3 Chinese Academy of Engineering Physics; Chinese Academy of Engineering
   Physics; Chinese Academy of Sciences; University of Science & Technology
   of China, CAS
RP Wang, Y; Liu, D (corresponding author), China Acad Engn Phys CAEP, Key Lab Neutron Phys, Mianyang 621999, Sichuan, Peoples R China.; Wang, Y; Liu, D (corresponding author), China Acad Engn Phys CAEP, Inst Nucl Phys & Chem INPC, Mianyang 621999, Sichuan, Peoples R China.
EM wangyan3591@163.com; dongliu10@mail.ustc.edu.cn
FU National Key Research and Development Program of China [2018YFB0704200];
   International Centre for Diffraction Data; Presidential Foundation of
   CAEP [YZJJLX2018004]; NSAF [U1830205]; National Natural Science
   Foundation of China [11605171]
FX National Key Research and Development Program of China, Grant/Award
   Number: 2018YFB0704200; the International Centre for Diffraction Data;
   Presidential Foundation of CAEP, Grant/Award Number: YZJJLX2018004;
   NSAF, Grant/Award Number: U1830205; National Natural Science Foundation
   of China, Grant/Award Number: 11605171
CR Bin T, 2015, PHYSCS PROC, V69, P33, DOI 10.1016/j.phpro.2015.07.004
   CHARPAK G, 1979, NUCL INSTRUM METHODS, V162, P405, DOI 10.1016/0029-554X(79)90726-2
   Chen L, 2018, J INSTRUM, V13, P8025
   Dudek P, 2000, IEEE J SOLID-ST CIRC, V35, P240, DOI 10.1109/4.823449
   Hammersley A, 1997, Eur. Synchrotron Radiat. Facility, V668, P58
   Huang CQ, 2010, NUCL SCI TECH, V21, P325
   Keiderling U, 2002, APPL PHYS A-MATER, V74, pS1455, DOI 10.1007/s003390201561
   Kline SR, 2006, J APPL CRYSTALLOGR, V39, P895, DOI 10.1107/S0021889806035059
   Li H, 2017, PHYSCS PROC, V88, P154, DOI 10.1016/j.phpro.2017.06.021
   Li J, 2015, NUCL INSTRUM METH A, V783, P76, DOI 10.1016/j.nima.2015.02.026
   Li XX, 2016, EUR PHYS J PLUS, V131, DOI 10.1140/epjp/i2016-16407-9
   Liu D, 2018, EUR POLYM J, V99, P18, DOI 10.1016/j.eurpolymj.2017.12.002
   Peng M, 2016, NUCL INSTRUM METH A, V810, P63, DOI 10.1016/j.nima.2015.11.141
   Song JM, 2020, NUCL INSTRUM METH A, V968, DOI 10.1016/j.nima.2020.163929
   Sun G., 2016, NEUTRON NEWS, V27, P21, DOI DOI 10.1080/10448632.2016.1233018
   Tian Q, 2018, J APPL CRYSTALLOGR, V51, P1662, DOI 10.1107/S1600576718015285
   Wang TT, 2019, POLYMER, V184, DOI 10.1016/j.polymer.2019.121934
   Xie L, 2019, NUCL INSTRUM METH A, V915, P31, DOI 10.1016/j.nima.2018.10.002
   Yan S, 2019, SCI CHINA PHYS MECH, V62, DOI 10.1007/s11433-019-9410-3
   Zhang J, 2018, J INSTRUM, V13, DOI 10.1088/1748-0221/13/01/T01009
   Zhang Y, 2017, EUR PHYS J PLUS, V132, DOI 10.1140/epjp/i2017-11526-5
   Zhang Y, 2016, EUR PHYS J PLUS, V131, DOI 10.1140/epjp/i2016-16376-y
   2011, NEUTRONS SOFT MATTER, P1
NR 23
TC 9
Z9 10
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 438
EP 448
DI 10.1002/spe.2912
EA NOV 2020
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000583885100001
DA 2024-07-18
ER

PT J
AU Alwasel, K
   Calheiros, RN
   Garg, S
   Buyya, R
   Pathan, M
   Georgakopoulos, D
   Ranjan, R
AF Alwasel, Khaled
   Calheiros, Rodrigo N.
   Garg, Saurabh
   Buyya, Rajkumar
   Pathan, Mukaddim
   Georgakopoulos, Dimitrios
   Ranjan, Rajiv
TI BigDataSDNSim: A simulator for analyzing big data applications in
   software-defined cloud data centers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; joint&#8208; optimization; MapReduce programming model;
   modeling and simulation; performance optimization; software&#8208;
   defined networking
ID SDN; RESOURCE; INTERNET; HADOOP
AB The integration and crosscoordination of big data processing and software-defined networking (SDN) are vital for improving the performance of big data applications. Various approaches for combining big data and SDN have been investigated by both industry and academia. However, empirical evaluations of solutions that combine big data processing and SDN are extremely costly and complicated. To address the problem of effective evaluation of solutions that combine big data processing with SDN, we present a new, self-contained simulation tool named BigDataSDNSim that enables the modeling and simulation of the big data management system YARN, its related programming models MapReduce, and SDN-enabled networks in a cloud computing environment. BigDataSDNSim supports cost-effective and easy to conduct experimentation in a controllable, repeatable, and configurable manner. The article illustrates the simulation accuracy and correctness of BigDataSDNSim by comparing the behavior and results of a real environment that combines big data processing and SDN with an equivalent simulated environment. Finally, the article presents two uses cases of BigDataSDNSim, which exhibit its practicality and features, illustrate the impact of data replication mechanisms of MapReduce in Hadoop YARN, and show the superiority of SDN over traditional networks to improve the performance of MapReduce applications.
C1 [Alwasel, Khaled; Ranjan, Rajiv] Newcastle Univ, Sch Comp, Newcastle Upon Tyne, Tyne & Wear, England.
   [Alwasel, Khaled] Saudi Elect Univ, Coll Comp & Informat, Riyadh, Saudi Arabia.
   [Calheiros, Rodrigo N.] Western Sydney Univ, Sch Comp Data & Math Sci, Sydney, NSW, Australia.
   [Garg, Saurabh] Univ Tasmania, Sch Comp & Informat Syst, Hobart, Tas, Australia.
   [Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
   [Pathan, Mukaddim] Telstra Corp Ltd, Melbourne, Vic, Australia.
   [Georgakopoulos, Dimitrios] Swinburne Univ Technol, Sch Software & Elect Engn, Melbourne, Vic, Australia.
C3 Newcastle University - UK; Saudi Electronic University; Western Sydney
   University; University of Tasmania; University of Melbourne; Telstra;
   Swinburne University of Technology
RP Alwasel, K (corresponding author), Newcastle Univ, Sch Comp, Newcastle Upon Tyne, Tyne & Wear, England.
EM kalwasel@gmail.com
RI Garg, Saurabh/J-7802-2014; Georgakopoulos, Dimitrios/C-5019-2011;
   Ranjan, Rajiv/F-4700-2011; Pathan, Mukaddim/C-2206-2011; Buyya,
   Rajkumar/C-3424-2009
OI Buyya, Rajkumar/0000-0001-9754-6496; Garg, Saurabh
   Kumar/0000-0001-8719-284X; Georgakopoulos,
   Dimitrios/0000-0001-7880-2140; Alwasel, Khaled/0000-0002-2530-1163
FU FloodPrep [NE/P017134/1]; LANDSLIP [NE/P000681/1]; PACE [EP/R033293/1]
FX FloodPrep, Grant/Award Number: NE/P017134/1; LANDSLIP, Grant/Award
   Number: NE/P000681/1; PACE, Grant/Award Number: EP/R033293/1
CR Ahmad F, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P61
   Al-Fares M, 2008, ACM SIGCOMM COMP COM, V38, P63, DOI 10.1145/1402946.1402967
   Almeida LB, 2018, P 2018 IEEE ACM 22 I, P1
   Alwasel K, 2017, IEEE CLOUD COMPUT, V4, P62, DOI 10.1109/MCC.2017.4250934
   Anadiotis ACG, 2016, IEEE T MOBILE COMPUT, V15, P2165, DOI 10.1109/TMC.2015.2496582
   Calcaterra C, 2020, J NETW SYST MANAG, V28, P1610, DOI 10.1007/s10922-020-09552-x
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chen M, 2014, MOBILE NETW APPL, V19, P171, DOI 10.1007/s11036-013-0489-0
   Chen WW, 2012, P IEEE INT C E-SCI
   Cheng DZ, 2015, INT PARALL DISTRIB P, P956, DOI 10.1109/IPDPS.2015.36
   Cui LZ, 2016, IEEE NETWORK, V30, P58, DOI 10.1109/MNET.2016.7389832
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dijkstra E. W., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Fischer MJ, 2010, SPAA '10: PROCEEDINGS OF THE TWENTY-SECOND ANNUAL SYMPOSIUM ON PARALLELISM IN ALGORITHMS AND ARCHITECTURES, P30
   Garg SK, 2011, P 4 IEEE INT C UT CL
   Ghosh S., 2020, IEEE Communications Standards Magazine, V4, P18, DOI 10.1109/MCOMSTD.001.1900035
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Hammoud S, 2010, P FUZZ SYST KNOWL DI
   Hashem IAT, 2020, J SUPERCOMPUT, V76, P4915, DOI 10.1007/s11227-018-2719-5
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Huang SS, 2010, I C DATA ENGIN WORKS, P41, DOI 10.1109/ICDEW.2010.5452747
   Iqbal Muhammad H., 2015, International Journal of Computer Trends and Technology, V19, P9, DOI [DOI 10.14445/22312803/IJCTT-V19P103, 10.14445/22312803/IJCTT-V19P103]
   Jha DN, 2020, IEEE T IND INFORM, V16, P7014, DOI 10.1109/TII.2019.2961676
   Jha DN, 2020, SOFTWARE PRACT EXPER, V50, P844, DOI 10.1002/spe.2787
   Jung J, 2012, P ICT CONV ICTC INT
   Kambatla K, 2014, J PARALLEL DISTR COM, V74, P2561, DOI 10.1016/j.jpdc.2014.01.003
   Kathiravelu P, 2016, LECT NOTES COMPUT SC, V10033, P3, DOI 10.1007/978-3-319-48472-3_1
   Kecskemeti G, 2017, IEEE CLOUD COMPUT, V4, P62, DOI 10.1109/MCC.2017.18
   Kliazovich D, 2010, GLOB TELECOMM CONF
   Kreutz D, 2015, P IEEE, V103, P14, DOI 10.1109/JPROC.2014.2371999
   Lantz Bob, 2010, P 9 ACM SIGCOMM WORK, P1
   McKeown N, 2008, ACM SIGCOMM COMP COM, V38, P69, DOI 10.1145/1355734.1355746
   Neves MV, 2015, P IEEE 23 INT S MOD
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   Qin P, 2017, IEEE SYST J, V11, P2337, DOI 10.1109/JSYST.2015.2496368
   Quan Chen, 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P2736, DOI 10.1109/CIT.2010.458
   Ranjan R, 2014, IEEE CLOUD COMPUT, V1, P78, DOI 10.1109/MCC.2014.22
   RFC, 2013, INTERNET REQUESTS CO, P7047
   Shalimov A., 2013, Proceedings of the 9th Central Eastern European Software Engineering Conference in Russia, P1
   Son JM, 2015, IEEE ACM INT SYMP, P475, DOI 10.1109/CCGrid.2015.87
   STONE HS, 1977, IEEE T SOFTWARE ENG, V3, P85, DOI 10.1109/TSE.1977.233840
   Teixeira J, 2013, P 2 EUR WORKSH SOFTW
   Tomonori F.U. J. I. T. A., 2013, Open Networking Summit, P1
   Tuxen M., 2008, P 1 INT C SIM TOOLS, V40, P1, DOI [10.1145/1416222, DOI 10.1145/1416222]
   Vavilapalli V.K., P 4 ANN S CLOUD COMP
   Wang GY, 2009, 2009 IEEE INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS & SIMULATION OF COMPUTER AND TELECOMMUNICATION SYSTEMS (MASCOTS), P5
   Wang SY, 2013, IEEE COMMUN MAG, V51, P110, DOI 10.1109/MCOM.2013.6588659
   Wette P, 2014, 2014 IFIP NETWORKING CONFERENCE
   Zeng XZ, 2017, J SYST ARCHITECT, V72, P93, DOI 10.1016/j.sysarc.2016.06.008
   Zhao S, 2016, PROCEEDINGS OF THE 2016 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION (SIGCOMM '16), P583, DOI 10.1145/2934872.2959059
NR 50
TC 7
Z9 7
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 893
EP 920
DI 10.1002/spe.2917
EA OCT 2020
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000583318400001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Prastowo, T
   Palopoli, L
   Abeni, L
AF Prastowo, Tadeus
   Palopoli, Luigi
   Abeni, Luca
TI Tice: A real-time language compilable using C plus plus compilers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE real-time programming language; logical execution time; template
   metaprogramming (TMP); C plus plus active library; C plus plus embedded
   domain-specific language; embedded software engineering
ID DESIGN
AB Model-based development (MBD) holds the promise to capture potential timing problems in embedded software during the early phases of the development, securing the production of bug-free embedded software. For most MBD approaches, the source code is just an intermediate artifact that can be generated automatically from the models. This assumption clashes with an undeniable fact: a large share of the commercial embedded software exploits existing libraries or is developed using C/C++ natively. A way to reconcile the ambitions of MBD with the use of a programming language is by offering new language constructs and an innovative compilation tool-chain that prevents model error and timing problems "by construction." However, the persistent popularity of C/C++ among embedded programmers and the limited availability of tools have severely limited the uptake of alternative programming languages for embedded software. Therefore, we propose an original route. Our language proposal, named Tice, has been shaped as a C++ active library. Tice retains full compatibility with existing C++ code, which can be integrated easily into new Tice-based projects. The enforcement of Tice syntax and semantics can be made by a standard C++ compiler, forgoing the need for new tools. In this article, we describe Tice's syntax, semantics, and model of computation and communication. We demonstrate Tice's practical applicability on an industrial scale use-case and give ample evidence for Tice's efficient compilation using off-the-shelf C++ compilers. Finally, we show Tice's code generation process.
C1 [Prastowo, Tadeus; Palopoli, Luigi] Univ Trento, DISI, Trento, Italy.
   [Abeni, Luca] Scuola Super Sant Anna, Pisa, Italy.
C3 University of Trento; Scuola Superiore Sant'Anna
RP Palopoli, L (corresponding author), Povo 2,Room 130,Via Sommar 9, I-38123 Trento, Italy.
EM luigi.palopoli@unitn.it
RI Abeni, Luca/AAF-8220-2020
OI Abeni, Luca/0000-0002-7080-9601; Palopoli, Luigi/0000-0001-8813-8685;
   Prastowo, Tadeus/0000-0002-7393-0300
CR Aba MA, 2018, LECT NOTES COMPUT SC, V10659, P353, DOI 10.1007/978-3-319-75178-8_29
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Baleani M, 2005, DES AUT TEST EUROPE, P1044, DOI 10.1109/DATE.2005.105
   Barr A, 2018, PROBLEM WITH SOFTWARE: WHY SMART ENGINEERS WRITE BAD CODE, P1
   Barr Michael., 2006, PROGRAMMING EMBEDDED
   Baruah S, 2015, EMBED SYST, P1, DOI 10.1007/978-3-319-08696-5_1
   Beningo J., 2017, Reusable Firmware Development
   Berry G., 1983, Proceedings of the Real-Time Systems Symposium, P30
   Biondi A, 2018, IEEE REAL TIME, P240, DOI 10.1109/RTAS.2018.00032
   Caspi P., 1987, P 14 ACM SIGACT SIGP, P178, DOI DOI 10.1145/41625.41641
   Cass S, 2019, INTERACTIVE TOP PROG
   Czarnecki K., 1998, GENERIC PROGRAMMING, P25
   Deters M, 2003, RTAS 2003 WORKSH MOD
   Emshoff B, USING C MISSION SAFE
   Faggioli D, DEADLINE TASK SCHEDU
   Feiertag N, 2008, P IEEE REAL TIM SYST, V16
   Foote T., CELEBRATING 9 YEARS
   Forget J, 2009, THESIS
   Forget J, 2017, IEEE INT C EMERG
   Free Software Foundation, 2020, C STAND SUPP GCC
   GAUTIER T, 1987, LECT NOTES COMPUT SC, V274, P257
   GEHANI N, 1991, REAL-TIME SYST, V3, P377, DOI 10.1007/BF00365999
   GERBER R, 1994, REAL TIM SYST SYMP P, P192, DOI 10.1109/REAL.1994.342716
   Gerkey B, WHY ROS 2 0
   Gil J, 2010, SCI COMPUT PROGRAM, V75, P573, DOI 10.1016/j.scico.2010.01.004
   Groarke P., RE EXTERNAL RE LINEA
   HABERLE RM, 2017, CAMB PLANET, P1, DOI DOI 10.1109/ETFA.2017.8247612
   Henzinger Thomas A., 2001, LNCS, V2211, P166
   Henzinger ThomasA., 2002, P PROGRAMMING LANGUA, P315
   Hili Nicolas, 2019, P 2019 FOR SPEC DES, P1
   Hong S, 1993, P 10 IEEE WORKSH REA, P80
   Horowitz B, 2003, UCBCSD031238 EECS U
   Jones N., INTRO MISRA C
   Kerrisk M, SCHED OVERVIEW CPU S
   Khatib J, 2016, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON REAL-TIME NETWORKS AND SYSTEMS PROCEEDINGS (RTNS 2016), P87, DOI 10.1145/2997465.2997479
   Kirsch C.M., 2012, Advances in Real-Time Systems (to Georg Farber on the occasion of his appointment as Professor Emeritus at TU Munchen after leading the Lehrstuhl fur Realzeit-Computersysteme for 34 illustrious years, P103
   KLIGERMAN E, 1986, IEEE T SOFTWARE ENG, V12, P941, DOI 10.1109/TSE.1986.6313049
   Kormanyos B, 2013, IEEE INT CONF COMP, P1, DOI 10.1109/CIVEMSA.2013.6617386
   Lin P., TESLA AUTOPILOT CRAS
   Louise S, 2002, P 10 WORKSH ACM SIG, P223, DOI DOI 10.1145/1133373.11334191
   Maimone M, C MARS
   Meyers S, WHY C SAILS VASA SAN
   Motor Industry Software Reliability Association, 2013, MISRA C 2012 GUID US
   Motor Industry Software Reliability Association, 2008, MISRA C 2008 GUID US
   Natarajan S, 2018, IEEE REAL TIME, P227, DOI 10.1109/RTAS.2018.00031
   Pagetti C, REPOSITORY ROSACE CA
   Pagetti C, 2018, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON REAL-TIME NETWORKS AND SYSTEMS (RTNS 2018), DOI 10.1145/3273905.3273907
   Pagetti C, 2014, IEEE REAL TIME, P309, DOI 10.1109/RTAS.2014.6926012
   Palopoli L., 1999, Proceedings Sixth International Conference on Real-Time Computing Systems and Applications. RTCSA'99 (Cat. No.PR00306), P103, DOI 10.1109/RTCSA.1999.811199
   Pitt I., 2003, PRACT SER
   Prastowo Tadeus, 2019, ACM SIGBED Review, V16, P69, DOI 10.1145/3373400.3373411
   Prastowo T, 2020, THESIS
   Prastowo T., REPOSITORY TICE LIB
   Prastowo T, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1330, DOI 10.1145/3341105.3373994
   Sangiovanni-Vincentelli A, 2007, COMPUTER, V40, P42, DOI 10.1109/MC.2007.344
   Sheard T, 2002, ACM SIGPLAN NOTICES, V37, P60, DOI 10.1145/636517.636528
   Shi Z, 2009, EUROMICRO, P3, DOI 10.1109/ECRTS.2009.17
   STOYENKO AD, 1995, COMPUT J, V38, P319, DOI 10.1093/comjnl/38.4.319
   Stroustrup B, 2007, P 3 ACM SIGPLAN C HI, DOI 10.1145/1238844.1238848
   Travis G., BOEING 737 MAX DISAS
   Tuchscherer D, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P136, DOI 10.1145/2976767.2976772
   University of Illinois at Urbana-Champaign, 2020, C SUPP CLANG
   Veldhuizen TL, 2000, LECT NOTES COMP SCI, V10, P57
   Veldhuizen TL, 2004, THESIS
NR 64
TC 0
Z9 0
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2020
VL 50
IS 12
BP 2252
EP 2292
DI 10.1002/spe.2891
EA OCT 2020
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OO7CG
UT WOS:000574889800001
DA 2024-07-18
ER

PT J
AU Llorens, D
   Vilar, JM
AF Llorens, David
   Vilar, Juan Miguel
TI Easily solving dynamic programming problems in Haskell by memoization of
   hylomorphisms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic programming; Haskell; memoization; recursion schemes
AB Dynamic programming is a well-known algorithmic technique that solves problems by a combination of dividing a problem into subproblems and using memoization to avoid an exponential growth of the costs. We show how to implement dynamic programming in Haskell using a variation of hylomorphisms that includes memoization. Our implementation uses polymorphism so the same function can return the best score or the solution to the problem based on the type of the returned value.
C1 [Llorens, David; Vilar, Juan Miguel] Univ Jaume 1, Inst New Image Technol, Castellon de La Plana 12071, Spain.
C3 Universitat Jaume I
RP Vilar, JM (corresponding author), Univ Jaume 1, Inst New Image Technol, Castellon de La Plana 12071, Spain.
EM jvilar@uji.es
RI Vilar, Juan Miguel/HGF-0715-2022
OI Vilar Torres, Juan Miguel/0000-0002-0839-8258
FU Ministerio de Ciencia/AEI/FEDER/EU [RTI2018-095 645-B-C22]
FX Ministerio de Ciencia/AEI/FEDER/EU, Grant/Award Number: Miranda-DocTIUM
   project (RTI2018-095 645-B-C22)
CR Bird Richard, 1997, Algebra of Programming
   Cormen T.H., 2009, INTRO ALGORITHMS
   de Moor O, 1992, CATEGORIES RELATIONS, V98
   Elliott Conal, 2016, DATA MEMOTRIE
   GHC, 2020, GLASG HASK COMP
   HINZE R, 2000, P 2 WORKSH GEN PROGR, P17
   Hinze R, 2013, P 9 ACM SIGPLAN WORK, P1, DOI DOI 10.1145/2502488.2502496
   Hinze R, 2015, ACM SIGPLAN NOTICES, V50, P527, DOI [10.1145/2676726.2676989, 10.1145/2775051.2676989]
   Jacobs B., 1997, Bulletin of the European Association for Theoretical Computer Science, P222
   Kabanov J, 2006, LECT NOTES COMPUT SC, V4014, P235, DOI 10.1007/11783596_15
   MEIJER E, 1991, LECT NOTES COMPUT SC, V523, P124
   Rabhi F, 1999, INT COMPUTER SCI SER
NR 12
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2020
VL 50
IS 12
BP 2193
EP 2211
DI 10.1002/spe.2887
EA SEP 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OO7CG
UT WOS:000569894800001
OA Green Published
DA 2024-07-18
ER

PT J
AU Amankwah, R
   Chen, JF
   Kudjo, PK
   Towey, D
AF Amankwah, Richard
   Chen, Jinfu
   Kudjo, Patrick Kwaku
   Towey, Dave
TI An empirical comparison of commercial and open-source web vulnerability
   scanners
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE commercial scanners; detection capability; open-source scanners;
   software vulnerability; vulnerable web application
ID SQL INJECTION; LOGIC VULNERABILITIES; TESTING TOOLS; SECURITY; SERVICES;
   XSS
AB Web vulnerability scanners (WVSs) are tools that can detect security vulnerabilities in web services. Although both commercial and open-source WVSs exist, their vulnerability detection capability and performance vary. In this article, we report on a comparative study to determine the vulnerability detection capabilities of eight WVSs (both open and commercial) using two vulnerable web applications: WebGoat and Damn vulnerable web application. The eight WVSs studied were: Acunetix; HP WebInspect; IBM AppScan; OWASP ZAP; Skipfish; Arachni; Vega; and Iron WASP. The performance was evaluated using multiple evaluation metrics: precision; recall; Youden index; OWASP web benchmark evaluation; and the web application security scanner evaluation criteria. The experimental results show that, while the commercial scanners are effective in detecting security vulnerabilities, some open-source scanners (such as ZAP and Skipfish) can also be effective. In summary, this study recommends improving the vulnerability detection capabilities of both the open-source and commercial scanners to enhance code coverage and the detection rate, and to reduce the number of false-positives.
C1 [Amankwah, Richard; Chen, Jinfu] Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang, Jiangsu, Peoples R China.
   [Kudjo, Patrick Kwaku] Univ Profess Studies, Dept Informat Technol Studies, Accra, Ghana.
   [Towey, Dave] Univ Nottingham Ningbo China, Sch Comp Sci, Ningbo, Peoples R China.
C3 Jiangsu University; University of Nottingham Ningbo China
RP Chen, JF (corresponding author), Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang, Jiangsu, Peoples R China.
EM jinfuchen@ujs.edu.cn
RI ; Towey, Dave/K-3160-2014
OI Chen, Jinfu/0000-0002-3124-5452; Towey, Dave/0000-0003-0877-4353
FU Graduate Research Innovation Project of Jiangsu Province [KYCX17_1807];
   National Natural Science Foundation of China [U1836116, 61762040,
   61872167]; Jiangsu Provincial Six Talent Peaks [XYDXXJS-016]
FX Graduate Research Innovation Project of Jiangsu Province, Grant/Award
   Number: KYCX17_1807; National Natural Science Foundation of China,
   Grant/Award Numbers: U1836116, 61762040, 61872167; The project of
   Jiangsu Provincial Six Talent Peaks, Grant/Award Number: XYDXXJS-016
CR Abdullah Himli S., 2020, Academic Journal of Nawroz University, V9, P47, DOI DOI 10.25007/AJNU.V9N1A532
   Alqahtani S, 2020, PREHOSP EMERG CARE, V24, P369, DOI 10.1080/10903127.2019.1666944
   Alsaleh M., 2017, English. Security and Communication Networks, V2017, P1
   [Anonymous], VOJNOTEHNICKI GLASNI
   Antunes Nuno, 2010, 2010 IEEE International Conference on Web Services (ICWS), P203, DOI 10.1109/ICWS.2010.76
   Antunes N, 2017, INT J INF SECUR, V16, P435, DOI 10.1007/s10207-016-0334-0
   Antunes N, 2009, LAT-AM SYMP DEP COMP, P17, DOI 10.1109/LADC.2009.21
   AWAD M, 2019, TELKOMNIKA, V17, P852
   Aziz NA, 2016, 2016 INTERNATIONAL CONFERENCE ON INFORMATICS AND COMPUTING (ICIC), P164, DOI 10.1109/IAC.2016.7905709
   Baral P, 2011, IEEE POTENTIALS, V30, P10, DOI 10.1109/MPOT.2010.939449
   Black PE, 2005, NIST SPECIAL PUBLICA, V500, P264
   Calzavara S, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P528, DOI 10.1109/EuroSP.2019.00045
   Chen Shay., 2014, The web application vulnerability scanners benchmark
   Consortium WAS, 2010, WASC THREAT CLASS RE, P1
   DAR MUJ, 2019, J ARTIF INTELL RES A, V6, P69
   Deepa G, 2018, J NETW COMPUT APPL, V109, P89, DOI 10.1016/j.jnca.2018.01.008
   Deepa G, 2016, INFORM SOFTWARE TECH, V74, P160, DOI 10.1016/j.infsof.2016.02.005
   Dessiatnikoff A, 2011, 2011 IEEE 17TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING (PRDC), P194, DOI 10.1109/PRDC.2011.31
   Du W, 1998, 9802 PURD U
   Eichbaum QG, 2013, DIAGN STAND CARE, P25
   Fang Y, 2018, PROCEEDINGS OF 2018 INTERNATIONAL CONFERENCE ON COMPUTING AND ARTIFICIAL INTELLIGENCE (ICCAI 2018), P47, DOI 10.1145/3194452.3194469
   Herrera-Quintero LF, 2018, IEEE INTEL TRANSP SY, V10, P17, DOI 10.1109/MITS.2018.2806620
   Fong E., 2007, Proc. the 40th Hawaii International Conference on System Sciences, p280b
   Fong E, 2008, P 41 ANN HAW INT C S, P478
   Fonseca J, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P365, DOI 10.1109/PRDC.2007.55
   Gupta S, 2011, P 5 NAT C, P1
   Hamed O., 2009, IJWA, V1, P146
   Haugh E, 2003, P NDSS
   Hu Q, 2020, IEEE T IND INFORM, V16, P691, DOI 10.1109/TII.2019.2923662
   Humanism, 2009, REPUBLICS LETT J STU, V1, P1, DOI DOI 10.1111/j.1728-4457.2009.00312.x
   Ibrahim A.B., 2018, International Journal of Applied Engineering Research, V13, P5935
   Idrissi S. E., 2017, INT J APPL ENG RES, V12, P11068
   Joshi C., 2016, International Journal of Computer Applications, V145, P1, DOI DOI 10.5120/IJCA2016910563
   Kals S., 2006, P 15 INT C WORLD WID, P247, DOI [DOI 10.1145/1135777.1135817, 10.1145/1135777.1135817]
   Kasemsap K., 2016, Revolutionizing Education through Web-Based Instruction Advances in Educational Technologies and Instructional Design, P202, DOI DOI 10.4018/978-1-4666-9932-8.CH012
   Kudjo P.K., 2018, CHIN C TRUST COMP IN, P389
   Kudjo PK, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P248, DOI 10.1109/QRS.2019.00041
   Laponina OR, 2017, INT J OPEN INF TECHN, V5, P18
   Le HT, 2008, AIP CONF PROC, V1060, P155, DOI 10.1063/1.3037041
   Liu Y., 2018, P CHIN CYB SEC ANN C, P145
   Luo P, 2019, COMPUT SECUR, V89, P1
   Makino Y, 2015, INT WORKSH INT DATA, P399, DOI 10.1109/IDAACS.2015.7340766
   Mantra IGN, 2019, PROCEDIA COMPUT SCI, V161, P1165, DOI 10.1016/j.procs.2019.11.229
   Maruf Hassan M., 2018, International Journal of Engineering & Technology, V7, P4
   Mburano B, 2018, 2018 26TH INTERNATIONAL CONFERENCE ON SYSTEMS ENGINEERING (ICSENG 2018)
   McQuade K., 2014, P C INFORM SYSTEMS A, V2167, P1508
   Miller L, 2019, LECT NOTES COMPUT SC, V11735, P107, DOI 10.1007/978-3-030-29959-0_6
   Mockel Caroline, 2010, 2010 Sixth International Conference on Information Assurance and Security (IAS 2010), P149, DOI 10.1109/ISIAS.2010.5604049
   Mohammed R., 2016, International Journal of Computer Applications, V133, P1
   Parvez M, 2015, INT CONF INTERNET, P186, DOI 10.1109/ICITST.2015.7412085
   Paulson LD, 2005, COMPUTER, V38, P14, DOI 10.1109/MC.2005.330
   Ratnavathi CV, 2016, SORGHUM BIOCHEMISTRY: AN INDUSTRIAL PERSPECTIVE, P1, DOI 10.1016/B978-0-12-803157-5.00001-0
   Rennhard M., 2019, International Journal on Advances in Internet Technology, V12, P12, DOI [10.21256/zhaw-17956, DOI 10.21256/ZHAW-17956]
   Muñoz FR, 2018, J SUPERCOMPUT, V74, P6454, DOI 10.1007/s11227-016-1920-7
   Saeed Fakhreldeen Abbas, 2014, Journal of Theoretical and Applied Information Technology, V61, P281
   Saeed FA, 2014, INT J SOFT COMPUT EN, V4, P177
   Sagar D, 2018, IIOAB J, V9, P43
   Salas MIP, 2014, ELECTRON NOTES THEOR, V302, P133, DOI 10.1016/j.entcs.2014.01.024
   Saripalli P., 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P280, DOI 10.1109/CLOUD.2010.22
   Seng LK, 2018, INT J INNOV COMPUT I, V8, P180
   Sharma P, 2012, INT J SYST ASSUR ENG, V3, P343, DOI 10.1007/s13198-012-0125-6
   Sridevi M, 2019, P INT C INT COMP COM, P140
   Srinivasan SM, 2017, IEEE SOFTWARE, V34, P99, DOI 10.1109/MS.2017.21
   Su ZD, 2006, ACM SIGPLAN NOTICES, V41, P372, DOI 10.1145/1111320.1111070
   Sun XF, 2019, IEEE INT CON MULTI, P115, DOI 10.1109/ICME.2019.00028
   Suteva D. Z., 2013, P 10 C INF INF TECHN, P221
   Suto L, 2010, APPL SEC CONSULT, V6, P1
   Tripathi A., 2011, Proceedings of the 2011 6th International Conference on Computer Sciences and Convergence Information Technology (ICCIT 2011), P692
   Tung YH, 2013, ASIA-PAC NETW OPER M
   Tung YH, 2014, INT CONF QUAL SOFTW, P228, DOI 10.1109/QSIC.2014.50
   Tyagi S, 2018, 2018 FIFTH INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED AND GRID COMPUTING (IEEE PDGC), P1, DOI 10.1109/PDGC.2018.8745996
   VANRIJSBERGEN CJ, 1986, COMPUT J, V29, P481, DOI 10.1093/comjnl/29.6.481
   Vieira M, 2009, I C DEPEND SYS NETWO, P566, DOI 10.1109/DSN.2009.5270294
   Wang J, 2010, P 6 INT C NATURAL LA, P1, DOI [DOI 10.1109/ISGT.2010.5434766, 10.1109/NLPKE.2010.5587852, DOI 10.1109/NLPKE.2010.5587852, 10.1109/CISE.2010.5677256]
   Whalen S., 2005, CSE200504 U CAL DEP
   Wibowo A, 2018, INT J ELECT COMPUT E, V8, P2088
   Woo DH, 2007, P WORKSH CHIP MULT M, P1
   Xu Z, 2020, P I MECH ENG C-J MEC, V234, P1516, DOI 10.1177/0954406219893719
   YOUDEN WJ, 1950, CANCER-AM CANCER SOC, V3, P32, DOI 10.1002/1097-0142(1950)3:1<32::AID-CNCR2820030106>3.0.CO;2-3
   Zabicki R., 2017, Computer and Information Security Handbook, P1031, DOI [DOI 10.1016/B978-0-12-803843-7.00075-2, 10.1016/B978-0-12-803843-7.00075-2]
NR 80
TC 13
Z9 15
U1 5
U2 46
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2020
VL 50
IS 9
BP 1842
EP 1857
DI 10.1002/spe.2870
EA JUL 2020
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MT2QQ
UT WOS:000544972000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Huang, CM
   Chen, PJ
AF Huang, Chung-Ming
   Chen, Pin-Jui
TI Proximate sharing of geo data using the credit-considered mobile edge
   computing server switching control scheme
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE credit scheme; geo data sharing; location-based service; mobile edge
   computing; proximity service
ID NETWORKS
AB This paper proposed a mobile edge computing (MEC)-based point of interests (POIs) downloading and proximate sharing system for a group of people, who belong to the same mobile social networks in proximity (MSN-P) and whose handheld devices are connected in a tree-like structure. Using the proposed system, the root handheld device plays the role of an MEC server and is charge of downloading POIs' contents from the remote cloud server using 4G/5G cellular network and then forwarding POIs' contents to other group members' handheld devices using device-to-device (D2D) communication. Since the number of connected handheld devices in each handheld device is limited using D2D communication, this work proposed a control scheme called k-Connection-Limited and n-Hop (kCL-nH) tree topology's construction scheme to achieve the proximate sharing of POIs' contents. Additionally, since the root handheld device consumes more battery power than others, this work proposed a control scheme that has each group member's handheld device to be the root handheld device alternatively. A credit scheme was thus proposed to denote each handheld device's contribution, which is referred for the selecting of the next root handheld device, to achieve the fairness concern. Then, the control scheme, which is executed in the corresponding MEC server, considering both remaining battery power and credit for the switching of the root handheld device was designed. The proposed method was developed using Wi-Fi Direct over the iOS system. Experimental results have shown some interested results among power consumption, downloaded data volume and fairness among all handheld devices.
C1 [Huang, Chung-Ming; Chen, Pin-Jui] Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan, Taiwan.
C3 National Cheng Kung University
RP Huang, CM (corresponding author), Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan, Taiwan.
EM huangcm@locust.csie.ncku.edu.tw
FU Ministry Of Science and Technology [108-2221-E-006-100-MY3]
FX Ministry Of Science and Technology, Grant/Award Number:
   108-2221-E-006-100-MY3
CR [Anonymous], IEEE ACCESS
   Baresi L, 2017, IEEE ICC
   Demir U, 2017, IEEE INT CONF MOB, P308, DOI 10.1109/MASS.2017.60
   Fan JL, 2013, IEEE T PARALL DISTR, V24, P734, DOI 10.1109/TPDS.2012.171
   Hu XP, 2015, IEEE COMMUN SURV TUT, V17, P1557, DOI 10.1109/COMST.2014.2371813
   Huang CM, 2018, SOFTWARE PRACT EXPER, V48, P600, DOI 10.1002/spe.2551
   Huang CM, 2016, IEEE T EMERG TOP COM, V4, P528, DOI 10.1109/TETC.2015.2417674
   Mao YY, 2017, IEEE COMMUN SURV TUT, V19, P2322, DOI 10.1109/COMST.2017.2745201
   Mao ZF, 2016, IEEE INT CONF COMMUN
   Ning ZL, 2017, IEEE T VEH TECHNOL, V66, P3406, DOI 10.1109/TVT.2016.2593051
   Singh AK, 2018, 2018 5TH INTERNATIONAL CONFERENCE ON SIGNAL PROCESSING AND INTEGRATED NETWORKS (SPIN), P343, DOI 10.1109/SPIN.2018.8474281
   Tian YL, 2018, IEEE INFOCOM SER, P2726, DOI 10.1109/INFOCOM.2018.8486433
   Wang YF, 2014, WIREL NETW, V20, P1295, DOI 10.1007/s11276-013-0677-7
   Zafari F, 2019, IEEE COMMUN SURV TUT, V21, P2568, DOI 10.1109/COMST.2019.2911558
   Zhao YM, 2017, IEEE ACCESS, V5, P6049, DOI 10.1109/ACCESS.2017.2693689
   Zhu YJ, 2019, PROCEEDINGS OF 2019 IEEE 3RD INFORMATION TECHNOLOGY, NETWORKING, ELECTRONIC AND AUTOMATION CONTROL CONFERENCE (ITNEC 2019), P879, DOI [10.1109/ITNEC.2019.8729149, 10.1109/itnec.2019.8729149]
NR 16
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2020
VL 50
IS 9
BP 1822
EP 1841
DI 10.1002/spe.2852
EA JUN 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MT2QQ
UT WOS:000538586000001
DA 2024-07-18
ER

PT J
AU Sharbaf, M
   Zamani, B
AF Sharbaf, Mohammadreza
   Zamani, Bahman
TI Configurable three-way model merging
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE configurable model merging; epsilon framework; model versioning;
   model-driven software engineering; three-way model merging
ID CONFLICT DETECTION; EVOLUTION
AB Software development is a collaborative activity that requires teams of software engineers to cooperate and work in parallel on versions of models. However, model management techniques such as model differencing, merging, and versioning have turned out to be difficult challenges, due to the complexity of operations and graph-like nature of models. Therefore, a well-developed support for model merging process, as well as conflict management, is highly desired. This paper presents a novel process for model merging, called the Epsilon-based Three-way Merging Process (E3MP) process. Model merging is a significant problem where there are different versions of a system model amongst modeler teams. E3MP includes three components implemented into the Epsilon framework. First, modelers can define domain-specific rules that customize the merging process. Second, E3MP enables an automated method for syntactic and semantic conflict detection amongst different versions of the system model. Third, E3MP puts forward a pattern-based approach for conflict resolution. We applied two generic benchmarks to assess conflict detection and resolution capabilities of our approach and carried out an initial scalability evaluation for the model merge with large models and large change sets. The results of our experiments revealed that the proposed process allows generating consistent and semantically correct merged models.
C1 [Sharbaf, Mohammadreza; Zamani, Bahman] Univ Isfahan, Dept Software Engn, Model Driven Software Engn Res Grp, Esfahan, Iran.
C3 University of Isfahan
RP Zamani, B (corresponding author), Univ Isfahan, Dept Software Engn, Model Driven Software Engn Res Grp, Esfahan, Iran.
EM zamani@eng.ui.ac.ir
RI Sharbaf, Mohammadreza/ABC-9932-2020
OI Sharbaf, Mohammadreza/0000-0001-5113-7689; Zamani,
   Bahman/0000-0001-6424-1442
CR Abi-Antoun M, 2008, AUTOMAT SOFTW ENG, V15, P35, DOI 10.1007/s10515-007-0023-3
   Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Altmanninger K., 2009, MODSE MCCMWORKSHOP I, P1
   Altmanninger K, 2008, LECT NOTES COMPUT SC, V5002, P293
   Altmanninger K, 2010, INT J ENTERP INF SYS, V6, P68, DOI 10.4018/jeis.2010120206
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   Anjorin Anthony, 2015, ECEASST, V73, DOI DOI 10.14279/TUJ.ECEASST.73.1031
   [Anonymous], 2018, REFACTORING IMPROVIN
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Bartelt Christian., 2008, P 1 INT WORKSHOP COM, P13
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Brosch Petra, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P336, DOI 10.1007/978-3-642-30982-3_10
   Brosch P., 2010, P 1 INT WORKSHOP MOD, P42
   BROSCH P, 2010, LNI, V161, P221
   Cicchetti A, 2008, LECT NOTES COMPUT SC, V5301, P311, DOI 10.1007/978-3-540-87875-9_23
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   Debreceni C, 2016, LECT NOTES COMPUT SC, V9633, P104, DOI 10.1007/978-3-662-49665-7_7
   Dam HK, 2016, J SYST SOFTWARE, V112, P137, DOI 10.1016/j.jss.2015.06.044
   Jebbar O, 2016, LECT NOTES COMPUT SC, V9959, P148, DOI 10.1007/978-3-319-46613-2_10
   KOEGEL M, 2010, P 1 INT WORKSH MOD C, P21, DOI DOI 10.1145/1826147.1826154
   KOGEL M, 2008, P 2008 INT WORKSH CO, P19, DOI DOI 10.1145/1370152.1370158
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5115, P204, DOI 10.1007/978-3-642-11447-2_13
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5562, P146, DOI 10.1007/978-3-642-02674-4_11
   Langer P, 2013, SOFTWARETECHNIK TREN, V33, P91, DOI [10.1007/s40568-013-0060-y, DOI 10.1007/S40568-013-0060-Y]
   Levendovszky T, 2010, LECT NOTES COMPUT SC, V6100, P241, DOI 10.1007/978-3-642-16277-0_9
   Mansoor U, 2015, J SYST SOFTWARE, V103, P423, DOI 10.1016/j.jss.2014.11.043
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Rossini A, 2010, J LOGIC ALGEBR PROGR, V79, P636, DOI 10.1016/j.jlap.2009.10.003
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schach S.R., 2007, Object-Oriented Classical Software Engineering, V7th
   Sharbaf Mohammadreza, 2019, 3 WAY MODEL MERGING, DOI [10.5281/zenodo.3596004, DOI 10.5281/ZENODO.3596004]
   Stephan Matthew, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P265
   Taentzer G, 2010, LECT NOTES COMPUT SC, V6372, P171
   Van Der Straeten R., 2008, International Conference on Model Driven Engineering Languages and Systems, P35
   Westfechtel B., 2010, P 1 INT WORKSH MOD C, P31, DOI DOI 10.1145/1826147.1826155
   Westfechtel B, 2014, SOFTW SYST MODEL, V13, P757, DOI 10.1007/s10270-012-0279-3
NR 39
TC 4
Z9 4
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2020
VL 50
IS 8
BP 1565
EP 1599
DI 10.1002/spe.2835
EA MAY 2020
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MG0MA
UT WOS:000531217100001
DA 2024-07-18
ER

PT J
AU Rosendo, D
   Gomes, D
   Santos, GL
   Silva, L
   Moreira, A
   Kelner, J
   Sadok, D
   Gonçalves, G
   Mehta, A
   Wildeman, M
   Endo, PT
AF Rosendo, Daniel
   Gomes, Demis
   Santos, Guto Leoni
   Silva, Leylane
   Moreira, Andre
   Kelner, Judith
   Sadok, Djamel
   Goncalves, Glauco
   Mehta, Amardeep
   Wildeman, Mattias
   Endo, Patricia Takako
TI Availability analysis of design configurations to compose virtual
   performance-optimized data center systems in next-generation cloud data
   centers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE availability; composable systems; next-generation cloud data center;
   Redfish standard; stochastic models
ID SENSITIVITY-ANALYSIS
AB Next-generation cloud data centers are based on software-defined data center infrastructures that promote flexibility, automation, optimization, and scalability. The Redfish standard and the Intel Rack Scale Design technology enable software-defined infrastructure and disaggregate bare-metal compute, storage, and networking resources into virtual pools to dynamically compose resources and create virtual performance-optimized data centers (vPODs) tailored to workload-specific demands. This article proposes four chassis design configurations based on Distributed Management Task Force's Redfish industry standard applied to compose vPOD systems, namely, a fully shared design, partially shared homogeneous design, partially shared heterogeneous design, and not shared design; their main difference is based on the used hardware disaggregation level. Furthermore, we propose models that combine reliability block diagram and stochastic Petri net modeling approaches to represent the complexity of the relationship between the pool of disaggregated hardware resources and their power and cooling sources in a vPOD. These four proposed design configurations were analyzed and compared in terms of availability and component's sensitivity indexes by scaling their configurations considering different data center infrastructure. From the obtained results, we can state that, in general, when one increases the hardware disaggregation, availability is improved. However, after a given point, the availability level of the fully shared, partially shared homogeneous, and partially shared heterogeneous configurations remain almost equal, while the not shared configuration is still able to improve its availability.
C1 [Rosendo, Daniel; Gomes, Demis; Santos, Guto Leoni; Silva, Leylane; Moreira, Andre; Kelner, Judith; Sadok, Djamel; Endo, Patricia Takako] Univ Fed Pernambuco, Recife, PE, Brazil.
   [Goncalves, Glauco] Univ Fed Rural Pernambuco, Recife, PE, Brazil.
   [Mehta, Amardeep; Wildeman, Mattias] Ericsson Res, Kista, Sweden.
   [Endo, Patricia Takako] Univ Pernambuco, Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco; Universidade Federal Rural de
   Pernambuco (UFRPE); Ericsson; Universidade de Pernambuco (UPE)
RP Endo, PT (corresponding author), Univ Fed Pernambuco, Recife, PE, Brazil.
EM patricia.endo@upe.br
RI Gonçalves, Glauco Estácio/H-4474-2011; Kelner, Judith/C-6746-2009;
   Sadok, Djamel F Hadj/M-9814-2015
OI Gonçalves, Glauco Estácio/0000-0003-1341-5339; Moreira,
   Andre/0000-0002-6437-0639; Endo, Patricia Takako/0000-0002-9163-5583
FU Research, Development and Innovation Center, Ericsson Telecomunicacoes
   S.A., Brazil
FX This work was supported by the Research, Development and Innovation
   Center, Ericsson Telecomunicacoes S.A., Brazil.
CR Andrade E, 2017, COMPUTING, V99, P929, DOI 10.1007/s00607-017-0539-8
   [Anonymous], 2019, REDFISH RESOURCE SCH
   [Anonymous], 2012, LNCS, DOI DOI 10.1007/978-3-642-35746-6_1
   [Anonymous], 2017, IEEE T SERV COMPUT
   [Anonymous], 2018, REDFISH COMPOSABILIT
   [Anonymous], 2016, INTEL RACK SCALE DES
   [Anonymous], 2019, REDFISH SCALABLE PLA
   Bause F., 2002, Stochastic Petri Nets: An Introduction to the Theory
   British air data center outage feeds outrage at airline cost cuts, 2017, BRIT AIR DATA CTR OU
   Brosch F, 2010, LECT NOTES COMPUT SC, V6093, P36, DOI 10.1007/978-3-642-13821-8_5
   DMTF, 2019, REDF SPEC 1 7 0
   Fazlollahtabar H, 2017, IND ROBOT, V44, P754, DOI 10.1108/IR-06-2017-0103
   Feinberg Eugene, 2014, ACM SIGMETRICS Performance Evaluation Review, V41, P57
   Ferreira L, 2020, IEEE ENG MANAG REV
   Fricks RB, 2017, P REL MAINT S
   Gomes D, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5156
   Goncalves Glauco, 2019, IEEE Communications Standards Magazine, V3, P36, DOI 10.1109/MCOMSTD.2019.1800045
   HAMBY DM, 1994, ENVIRON MONIT ASSESS, V32, P135, DOI 10.1007/BF00547132
   Hoyland A., 2009, System reliability theory: models and statistical methods
   Jiang FC, 2017, NEUROCOMPUTING, V256, P90, DOI 10.1016/j.neucom.2016.08.134
   Li CS, 2017, FUTURE GENER COMP SY, V67, P180, DOI 10.1016/j.future.2016.07.014
   Maciel P, 2010, TECHNIQUES RES DIREC, V13
   Matos R, 2017, J GRID COMPUT, V15, P1, DOI 10.1007/s10723-016-9381-z
   Matos R, 2015, SIMUL MODEL PRACT TH, V50, P151, DOI 10.1016/j.simpat.2014.04.003
   MegaRAC, SOL INT RACK SCAL DE
   Melo C, 2017, IEEE PAC RIM INT SYM, P255, DOI 10.1109/PRDC.2017.49
   Moreira A, 2019, SOFTWARE PRACT EXPER, V49, P1573, DOI 10.1002/spe.2743
   Redfish interface emulator, 2019, REDFISH INTERFACE EM
   Rosendo D, 2017, P 51 HAW INT C SYST
   Rosendo D, 2019, J SUPERCOMPUT, V75, P6361, DOI 10.1007/s11227-019-02852-3
   Silva B, 2018, INT J NETW MANAG, V28, DOI 10.1002/nem.2040
   Smith WE, 2008, IBM SYST J, V47, P621, DOI 10.1147/SJ.2008.5386524
NR 32
TC 4
Z9 4
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2020
VL 50
IS 6
BP 805
EP 826
DI 10.1002/spe.2833
EA APR 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK4IJ
UT WOS:000527293700001
DA 2024-07-18
ER

PT J
AU Wang, YF
   Ijaz, K
   Yuan, D
   Calvo, RA
AF Wang, Yifan
   Ijaz, Kiran
   Yuan, Dong
   Calvo, Rafael A.
TI VR-Rides: An object-oriented application framework for immersive virtual
   reality exergames
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code reuse; exergame; immersive virtual reality; object-oriented
   application framework; reusable component; Unity
ID GAMES
AB Exercise can improve health and well-being. With this in mind, immersive virtual reality (VR) games are being developed to promote physical activity, and are generally evaluated through user studies. However, building such applications is time consuming and expensive. This paper introduces VR-Rides, an object-oriented application framework focused on the development of experiment-oriented VR exergames. Following the modular programming pattern, this framework facilitates the integration of different hardware (such as VR devices, sensors, and physical activity devices) within immersive VR experiences that overlay game narratives on Google Street View panoramas. Combining software engineering and interaction patterns, modules of VR-Rides can be easily added and managed in the Unity game engine. We evaluate the code efficiency and development effort across our VR exergames developed using VR-Rides. The reliability, maintainability, and usability of our framework are also demonstrated via code metrics analysis and user studies. The results show that investing in a systematic approach to reusing code and design can be a worthwhile effort for researchers beyond software engineering.
C1 [Wang, Yifan; Ijaz, Kiran; Yuan, Dong; Calvo, Rafael A.] Univ Sydney, Sch Elect & Informat Engn, Sydney, NSW, Australia.
   [Wang, Yifan] Southwest Petr Univ, Sch Comp Sci, Chengdu, Peoples R China.
   [Ijaz, Kiran] Macquarie Univ, Australian Inst Hlth Innovat, Sydney, NSW, Australia.
   [Calvo, Rafael A.] Imperial Coll London, Dyson Sch Design Engn, London, England.
C3 University of Sydney; Southwest Petroleum University; Macquarie
   University; Imperial College London
RP Wang, YF (corresponding author), Univ Sydney, Sch Elect & Informat Engn, Sydney, NSW, Australia.
EM yifan.wang@sydney.edu.au
RI Jiang, Jiaojiao/AAF-7525-2020; Ijaz, Kiran/AAN-1247-2020; Calvo, Rafael
   A./B-2622-2008
OI Jiang, Jiaojiao/0000-0001-7307-8114; Ijaz, Kiran/0000-0001-8722-6595;
   Yuan, Dong/0000-0003-1130-0888; Wang, Yifan/0000-0002-6660-1621; Calvo,
   Rafael A./0000-0003-2238-0684
FU Australian Research Council; University of Sydney; Charles Perkins
   Centre
FX Australian Research Council; The University of Sydney; Charles Perkins
   Centre
CR Bideau B, 2010, IEEE COMPUT GRAPH, V30, P14, DOI 10.1109/MCG.2009.134
   Bierbaum A, 2001, P IEEE VIRT REAL ANN, P89, DOI 10.1109/VR.2001.913774
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Andrea A, 2013, PROC IEEE INT SYMP
   Dam Peter, 2015, 2015 IEEE 8th Workshop on Software Engineering and Architectures for Realtime Interactive Systems (SEARIS), P1, DOI 10.1109/SEARIS.2015.7854095
   Elvezio C, 2016, WORK SOFTW ENG
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   Fayad Mohamed E., 1999, Building Application Frameworks: Object-oriented Foundations of Framework Design
   Gamma Erich., 1994, DESIGN PATTERNS
   Gugenheimer J, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P4021, DOI 10.1145/3025453.3025683
   Ijaz K, 2019, CHI EA '19 EXTENDED ABSTRACTS: EXTENDED ABSTRACTS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290607.3313281
   Ijaz K, 2019, JMIR MENT HEALTH, V6, DOI 10.2196/13887
   Ijaz K, 2017, 2017 IEEE LIFE SCIENCES CONFERENCE (LSC), P59, DOI 10.1109/LSC.2017.8268143
   Ijaz K, 2016, LECT NOTES COMPUT SC, V9894, P289, DOI 10.1007/978-3-319-45841-0_33
   Ijaz K, 2016, LECT NOTES COMPUT SC, V9894, P140, DOI 10.1007/978-3-319-45841-0_13
   Johnson RE, 1997, COMMUN ACM, V40, P39, DOI 10.1145/262793.262799
   Katz BFG, 2015, P IEEE VIRT REAL ANN, P203, DOI 10.1109/VR.2015.7223366
   Kavanagh S., 2017, THEMES SCI TECHNOLOG, V10, P85, DOI [DOI 10.1109/ICWT47785.2019.8978263, DOI 10.1016/J.COMPEDU.2019.103778]
   Kikuchi T, 2014, 2014 IEEE 3RD GLOBAL CONFERENCE ON CONSUMER ELECTRONICS (GCCE), P33, DOI 10.1109/GCCE.2014.7031338
   Kuck R., 2008, 5th Workshop of the GI-VR/AR Group, P209
   Machado LS, 2009, STUD HEALTH TECHNOL, V142, P174, DOI 10.3233/978-1-58603-964-6-174
   Maciel A, 2011, INT J COMPUT ASS RAD, V6, P457, DOI 10.1007/s11548-010-0527-3
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menin A, 2018, IEEE COMPUT GRAPH, V38, P57, DOI 10.1109/MCG.2018.021951633
   Molina KI, 2014, J NEUROENG REHABIL, V11, DOI 10.1186/1743-0003-11-156
   Munoz J.E., 2016, e-Health Networking, Applications and Services (Healthcom), 2016 IEEE 18th International Conference on, P1, DOI DOI 10.1109/HEALTHCOM.2016.7749512
   Ohlenburg J., 2004, P ACM S VIRTUAL REAL, P166, DOI DOI 10.1145/1077534.1077568
   Oman PW, 1991, 9108TR U ID SOFTW EN
   Paraskevopoulos IT, 2016, INT CONF GAMES VIRTU
   Ruffaldi E, 2011, PRESENCE-VIRTUAL AUG, V20, P33, DOI 10.1162/pres_a_00034
   Ryan RM, 2006, MOTIV EMOTION, V30, P347, DOI 10.1007/s11031-006-9051-8
   Sandro B., 2005, Proceedings of the 2005 ACM SIGCHI International Con- ference on Advances in Computer Entertainment Technology, P270, DOI DOI 10.1145/1178477.1178524
   Schulze JP, 2013, PROC SPIE, V8649, DOI 10.1117/12.2005241
   Semblantes Piedad A., 2018, Informatics in Medicine Unlocked, V13, P41, DOI 10.1016/j.imu.2018.10.002
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Shepherd Jonathan., 2018, Proceedings, V2, P214, DOI [DOI 10.3390/PROCEEDINGS2060214, DOI 10.3390/PR0CEEDINGS2060214]
   Staiano AE, 2011, CHILD DEV PERSPECT, V5, P93, DOI 10.1111/j.1750-8606.2011.00162.x
   Takala T.M., 2014, Proceedings of the 2Nd ACM Symposium on Spatial User Interaction, P94, DOI DOI 10.1145/2659766.2659774
   Takala TM, 2014, 2014 IEEE VIRTUAL REALITY (VR), P157, DOI 10.1109/VR.2014.6802099
   Trombetta M, 2017, COMPUT METH PROG BIO, V151, P15, DOI 10.1016/j.cmpb.2017.08.008
   Turani A., 2006, Campus-Wide Information Systems, V23, P196, DOI 10.1108/10650740610674201
   Wang YF, 2017, 2017 IEEE LIFE SCIENCES CONFERENCE (LSC), P27, DOI 10.1109/LSC.2017.8268135
   Watson H, 1996, STRUCTURED TESTING T
NR 43
TC 8
Z9 8
U1 6
U2 30
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1305
EP 1324
DI 10.1002/spe.2814
EA FEB 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT6RF
UT WOS:000516597800001
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Berbecaru, D
   Lioy, A
   Cameroni, C
AF Berbecaru, Diana
   Lioy, Antonio
   Cameroni, Cesare
TI Providing digital identity and academic attributes through European eID
   infrastructures: Results achieved, limitations, and future steps
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE eID; eIDAS infrastructure; security; service-oriented attributes
ID STORK
AB Electronic identity is getting an increased importance nowadays since relentless digitalization and 24/7 connectivity continue to transform everyday life. To support the recognition of electronic identification cross-border within the European Union, the European Commission (EC) released the eIDAS Regulation, which became effective on September 2018. To put eIDAS in practice, the EC has supported the definition of the technical specification; it provides a sample implementation; and it coordinates the eIDAS Network composed of eIDAS nodes of various countries. Each eIDAS node has a generic part required for the communication with the other nodes, and a specific part that each country has to modify independently according to its legal, operational, and technical requirements. Although this specific part is very important because it affects the node flexibility and the interaction with the other actors at the national level, it is less known in practice. We describe the adaptation of this specific part in Italy to perform authentication and provision of attributes through the STORK and STORK 2.0 infrastructures (the predecessors of eIDAS), based on our experience in the homonym projects. Significant effort is spent currently to build real services exploiting the eIDAS infrastructure, eg, the eID4U project proposes eIDAS node extension with new attributes required by some common academic services, such as student registration at a foreign university. We describe the support for these new attributes in the eIDAS nodes and the modification of the specific part of the Italian eIDAS node to allow attributes retrieval from different authorities.
C1 [Berbecaru, Diana; Lioy, Antonio; Cameroni, Cesare] Politecn Torino, Dipartimento Automat & Informat, I-10129 Turin, Italy.
C3 Polytechnic University of Turin
RP Berbecaru, D (corresponding author), Politecn Torino, Dipartimento Automat & Informat, I-10129 Turin, Italy.
EM diana.berbecaru@polito.it
RI Lioy, Antonio/AAA-5168-2019; Berbecaru, Diana/AAO-6554-2020
OI Lioy, Antonio/0000-0002-5669-9338; Berbecaru, Diana/0000-0003-1930-9473;
   Cameroni, Cesare/0000-0002-3901-4712
FU European Union's Connecting European Facility (CEF)
   [INEA/CEF/ICT/A2017/1433625]
FX European Union's Connecting European Facility (CEF), Grant/Award Number:
   INEA/CEF/ICT/A2017/1433625
CR Alcalde-Morano J, 2010, STORK DELIVERABLE D5
   Berbecaru Diana, 2011, Trust, Privacy and Security in Digital Business. Proceedings 8th International Conference (TrustBus 2011), P13, DOI 10.1007/978-3-642-22890-2_2
   Berbecaru D, 2011, STORK DELIVERABLE D5
   Berbecaru D, 2018, P 22 INT C SYST THEO
   Berbecaru D, 2016, P IEEE S COMP COMM I
   Berbecaru D., 2011, P AICA 2011 SMART TE
   Berbecaru D, 2019, INFORMATION, V10, DOI 10.3390/info10060210
   Berbecaru D, 2015, SOFTWARE PRACT EXPER, V45, P1457, DOI 10.1002/spe.2292
   CANTOR S, 2005, BINDINGS OASIS SECUR
   Cantor S., 2005, ASSERTIONS PROTOCOLS
   Chau SY, 2017, P IEEE S SECUR PRIV, P503, DOI 10.1109/SP.2017.40
   De Cock D, 2004, LECT NOTES COMPUT SC, V3093, P1
   Hughes J., 2005, Profiles for the OASIS Security Assertion Markup Language
   Leitold H, LECT EID FEDERATION
   Lenz Thomas, 2015, WEB INFORM SYSTEMS T, V246, P123, DOI [10.1007/978-3-319-30996-5, DOI 10.1007/978-3-319-30996-5]
   Longo A, 2019, CARTA IDENTITA ELETT
   Manca G, 2019, TESSERA SANITARIA CN
   MuozGomez C, 2018, OAUTH SEC WORKSH 201
   Rebahi Y, 2016, SECUR COMMUN NETW, V9, P1271, DOI 10.1002/sec.1413
   Ribeiro C, 2018, INT J INF SECUR, V17, P569, DOI 10.1007/s10207-017-0385-x
   Smiraglia P, 2017, E DEMOCRACY PRIVACY, V792, P196, DOI 10.1007/978-3-319-71117-1_14
   Thomas I, 2010, P 9 S ID TRUST INT I
   Torroglosa E, 2018, FUTURE GENER COMP SY, V80, P126, DOI 10.1016/j.future.2017.09.076
   Tsakalakis N., 2016, OPEN IDENTITY SUMMIT
   Zwattendorfer B, 2012, P 2012 4 INT C COMP
NR 25
TC 6
Z9 6
U1 4
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2019
VL 49
IS 11
BP 1643
EP 1662
DI 10.1002/spe.2738
EA AUG 2019
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JG7JQ
UT WOS:000480121500001
DA 2024-07-18
ER

PT J
AU Marchezan, L
   Rodrigues, EM
   Bernardino, M
   Basso, FP
AF Marchezan, Luciano
   Rodrigues, Elder Macedo
   Bernardino, Maicon
   Basso, Fabio Paulo
TI PAxSPL: A feature retrieval process for software product line
   reengineering
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE feature model; feature retrieval; software product line; software
   product line reengineering; software reengineering; software reuse
ID EXTRACTION; MODELS
AB Software product lines (SPLs) are a well-known solution to systematically create reusable software products. Among the approaches to create an SPL, the extractive approach is usually used when the organization already has a set of similar systems. These systems are analyzed to extract, categorize, and group their common and variant features throughout the SPL reengineering process. As there are different scenario variables, such as available artifacts and team experience, the activities and techniques used to perform these tasks may change. This may increase the effort and decrease the quality of retrieved features when users with low experience in SPL reengineering perform such tasks. However, there is a lack of a process supporting these tasks considering different scenarios. Therefore, we specify the Prepare, Assemble, and Execute Process for SPL Reengineering (PAxSPL), a process that provides support to prepare, assemble, and execute feature retrieval throughout the analysis of documentation and team experience. To initially evaluate PAxSPL, we conducted and reported an exploratory case study in a real development environment. The results indicated that our proposal helps in the assembly of a feature retrieval process according to user needs. Results were important to identify points for improvement in PAxSPL. We also could use the information gathered to improve the guidelines and provide this information to be used as basis of comparison for future users.
C1 [Marchezan, Luciano; Rodrigues, Elder Macedo; Bernardino, Maicon; Basso, Fabio Paulo] Fed Univ Pampa UNIPAMPA, Lab Empir Studies Software Engn, BR-97546550 Alegrete, RS, Brazil.
C3 Universidade Federal do Pampa
RP Rodrigues, EM (corresponding author), Fed Univ Pampa UNIPAMPA, Lab Empir Studies Software Engn, BR-97546550 Alegrete, RS, Brazil.
EM elderrodrigues@unipampa.edu.br
RI de Paula, Luciano Marchezan/AAJ-3752-2020; Bernardino,
   Maicon/G-5670-2011
OI Bernardino, Maicon/0000-0003-2776-8020; Basso,
   Fabio/0000-0003-4275-0638; Marchezan, Luciano/0000-0003-3096-580X
CR Acher M., 2012, P 6 INT WORKSH VAR M
   Acher M, 2014, SOFTW SYST MODEL, V13, P1367, DOI 10.1007/s10270-013-0364-2
   Alves V, 2008, 2008 12 INT SOFTW PR
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], CMUSEI2002TR006
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 26 INT C SOFTW ENG K
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   AssuncAo WKG, 2017, THESIS
   Balbino M, 2011, 23 INT C SOFTW ENG K
   Bayer J, 1999, P 5 S SOFTW REUS SSR
   Becan G, 2013, TECHNICAL REPORT
   Böckle G, 2004, LECT NOTES COMPUT SC, V3014, P310
   Boehm B., 2004, P 2004 INT S EMP SOF
   Chen K, 2005, 13 IEEE INT C REQ EN
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Christensen AS, 2003, LECT NOTES COMPUTER
   Czarnecki K, 1999, SOFTWARE ENG ESEC FS
   DEBAUD JM, 1999, P 21 INT C SOFTW ENG
   El-Sharkawy S, 2019, INFORM SOFTWARE TECH, V106, P1, DOI 10.1016/j.infsof.2018.08.015
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   Fischer S, 2014, 2014 IEEE INT C SOFT
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Helferich A, 2005, LECT NOTES COMPUT SC, V3714, P162
   In HP, 2006, COMMUN ACM, V49, P85, DOI 10.1145/1183236.1183273
   JOHN I., 2006, P 10 INT SOFTW PROD
   John I, 2010, IEEE SOFTWARE, V27, P42, DOI 10.1109/MS.2010.34
   John R, 2009, ADVANCED MICROSYSTEMS FOR AUTOMOTIVE APPLICATIONS 2009, P13, DOI 10.1007/978-3-642-00745-3_2
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kelly MB, 2011, 2011 IEEE 11 INT WOR
   Krueger C, 2001, SOFTWARE PRODUCT FAM
   Lee J, 2004, LECT NOTES COMPUT SC, V3154, P183
   Martinez J, 2017, P 21 INT SYST SOFTW, VB
   Martínez J, 2016, PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS IMPROVEMENT (CIMPS 2016): APPLICATIONS IN SOFTWARE ENGINEERING
   McGregor JD, 2008, J OBJECT TECHNOL, V7, P7
   Mohan K, 2010, IEEE SOFTWARE, V27, P48, DOI 10.1109/MS.2010.31
   Nobauer M, 2014, ADV INFORM SYSTEMS E
   Noor MA, 2008, J SYST SOFTWARE, V81, P868, DOI 10.1016/j.jss.2007.10.028
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nunes C, 2014, SOFTWARE PRACT EXPER, V44, P1315, DOI 10.1002/spe.2200
   Otsuka J, 2011, P 15 INT SOFTW PROD, V2
   Paskevicius P, 2012, INF TECHNOL CONTROL, V41, P376, DOI 10.5755/j01.itc.41.4.1108
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Polzer A, 2012, INNOV SYST SOFTW ENG, V8, P35, DOI 10.1007/s11334-011-0174-z
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos A, 2013, P 28 ANN ACM S APPL
   SCHMID K, 2002, P 24 INT C SOFTW ENG
   Weston N., 2009, P 13 INT SOFTW PROD
   Wohlin C., 2012, Experimentation in Software Engineering
   Ziadi T, 2012, 16 EUR C SOFTW MAINT
NR 51
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2019
VL 49
IS 8
BP 1278
EP 1306
DI 10.1002/spe.2707
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IG7YI
UT WOS:000474013200004
DA 2024-07-18
ER

PT J
AU Hylton, A
   Henselman-Petrusek, G
   Sang, JC
   Short, R
AF Hylton, Alan
   Henselman-Petrusek, Gregory
   Sang, Janche
   Short, Robert
TI Tuning the performance of a computational persistent homology package
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multicore; manycore computing; performance optimization; persistent
   homology; profiling
ID TOPOLOGY
AB In recent years, persistent homology has become an attractive method for data analysis. It captures topological features, such as connected components, holes, and voids, from point cloud data and summarizes the way in which these features appear and disappear in a filtration sequence. In this project, we focus on improving the performance of Eirene, a computational package for persistent homology. Eirene is a 5000-line open-source software library implemented in the dynamic programming language Julia. We use the Julia profiling tools to identify performance bottlenecks and develop novel methods to manage them, including the parallelization of some time-consuming functions on multicore/manycore hardware. Empirical results show that performance can be greatly improved.
C1 [Hylton, Alan] NASA, Space Commun & Nav, Glenn Res Ctr, Cleveland, OH USA.
   [Henselman-Petrusek, Gregory] Univ Penn, Dept Elect & Syst Engn, Philadelphia, PA 19104 USA.
   [Sang, Janche] Cleveland State Univ, Dept Elect Engn & Comp Sci, Cleveland, OH 44115 USA.
   [Short, Robert] Lehigh Univ, Dept Math, Bethlehem, PA 18015 USA.
C3 National Aeronautics & Space Administration (NASA); NASA Glenn Research
   Center; University of Pennsylvania; University System of Ohio; Cleveland
   State University; Lehigh University
RP Sang, JC (corresponding author), Cleveland State Univ, Dept Elect Engn & Comp Sci, Cleveland, OH 44115 USA.
EM j.sang@csuohio.edu
OI Henselman-Petrusek, Gregory/0000-0002-1889-8272
FU NASA GRC Summer Faculty Fellowship
FX This research was supported by the NASA GRC Summer Faculty Fellowship
   and by allocation of computing time from the Ohio Supercomputer Center.
CR Adams Henry, 2014, Mathematical Software - ICMS 2014. 4th International Congress. Proceedings. LNCS: 8592, P129, DOI 10.1007/978-3-662-44199-2_23
   [Anonymous], 2014, TOPOLOGICAL METHODS
   [Anonymous], MONTHLY NOTICES ROYA
   [Anonymous], 2016, PROGRAMMING MASSIVEL
   [Anonymous], 1996, Pthreads Programming a POSIX Standard for Better Multiprocessing
   Bauer Ulrich, 2014, Mathematical Software - ICMS 2014. 4th International Congress. Proceedings. LNCS: 8592, P137, DOI 10.1007/978-3-662-44199-2_24
   Bauer U, 2013, RIPSER
   Bauer U, 2016, DIPHA DISTRIBUTED PE
   Bubenik P., 2015, PERSISTENCE LANDSCAP
   Carlsson G, 2008, INT J COMPUT VISION, V76, P1, DOI 10.1007/s11263-007-0056-x
   Carlsson G, 2009, B AM MATH SOC, V46, P255, DOI 10.1090/S0273-0979-09-01249-X
   Chan JM, 2013, P NATL ACAD SCI USA, V110, P18566, DOI 10.1073/pnas.1313480110
   Chazal F, 2009, P 25 ANN S COMP GEOM
   Cohen-Steiner D, 2007, DISCRETE COMPUT GEOM, V37, P103, DOI 10.1007/s00454-006-1276-5
   CohenSteiner D., 2006, P 22 ANN S COMP GEOM
   D o C S Jyamiti Research Group (Prof Tamal K Dey), 2013, O S U ENG GICOMPLEX
   D. o. C. S. Jyamiti Research Group (Prof. Tamal K. Dey), 2014, O S U ENG SIMPPERS
   de Silva V, 2007, ALGEBR GEOM TOPOL, V7, P339, DOI 10.2140/agt.2007.7.339
   Dey TK, 2016, ARXIV E PRINTS
   Dlotko P, 2014, PERSISTENCE LANDSCAP
   Edelsbrunner H, 2002, DISCRETE COMPUT GEOM, V28, P511, DOI 10.1007/s00454-002-2885-2
   Edelsbrunner H, 2012, EUR C MATH EUR MATH
   Fasy BT, 2014, **DATA OBJECT**
   Fasy BT, 2018, INTRO R PACKAGE TDA
   Frosini P, 1991, P SPIE INT ROB SYST
   Ghrist R, 2008, B AM MATH SOC, V45, P61, DOI 10.1090/s0273-0979-07-01191-3
   Giusti C, 2016, J COMPUT NEUROSCI, V41, P1, DOI 10.1007/s10827-016-0608-6
   GRAHAM SL, 1983, SOFTWARE PRACT EXPER, V13, P671, DOI 10.1002/spe.4380130803
   Gregg B, 2016, COMMUN ACM, V59, P48, DOI 10.1145/2909476
   Harris M, 2015, CUDA PROTIP KEPLER S
   Harris M, 2011, GPU COMPUTING GEMS J
   Henselman-Petrusek G, 2016, ARXIV E PRINTS
   Henselman-Petrusek G, 2017, THESIS
   Henselman-Petrusek G, 2016, EIRENE PLATFORM COMP
   Hoberock Jared., 2015, Thrust-parallel algorithms library
   Hylton A, 2017, P IEEE 36 INT PERF C
   julia, 2009, JUL PROGR LANG
   Lesnick M, 2016, RIVET RANK INVARIANT
   Lesnick M, 2011, ARXIV11065305
   Maria Clement, 2014, Mathematical Software - ICMS 2014. 4th International Congress. Proceedings. LNCS: 8592, P167, DOI 10.1007/978-3-662-44199-2_28
   McKusick M. K., 1984, P EUR UNIX US GROUP
   Morozov D, 2009, DIONYSUS
   Nanda V, 2009, PERSEUS PERSISTENT H
   Otter N., 2015, ARXIV150608903
   Perry P., 2000, PLEX
   Rego V, 2016, P 4 INT S COMP NETW
   Robins V, 1999, P 14 SUMM C GEN TOP
   Silva V, 2011, INVERSE PROBL, V27
   Tausz A, 2012, BOOK ABSTR MIN PUBL
   Zomorodian A, 2005, DISCRETE COMPUT GEOM, V33, P249, DOI 10.1007/s00454-004-1146-y
NR 50
TC 4
Z9 4
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2019
VL 49
IS 5
BP 885
EP 905
DI 10.1002/spe.2678
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HR3KH
UT WOS:000463035200007
PM 32457555
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Heidari, S
   Buyya, R
AF Heidari, Safiollah
   Buyya, Rajkumar
TI Cost-efficient and network-aware dynamic repartitioning-based algorithms
   for scheduling large-scale graphs in cloud computing environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; cost saving; graph processing; network-aware processing
AB Large amount of data that is generated by Internet and enterprize applications are stored in the form of graphs. Graph processing systems are broadly used in enterprizes to process such data. With the rapid growth in mobile and social applications and complicated connections of Internet websites, massive concurrent operations need to be handled. On the other hand, the intrinsic structure and the size of real-world graphs make distributed processing of graphs more challenging. Low balanced communication and computation, low preprocessing overhead, low memory footprint, and scalability should be offered by distributed graph analytics frameworks. Moreover, the effects of network factors such as bandwidth and traffic as well as monetary cost of processing such large-scale graphs and the mutual impact of these elements have been less studied. To address these issues, we proposed two dynamic repartitioning algorithms that consider network factors, affecting public cloud environments to decrease the monetary cost of processing. A new classification of graph algorithms and processing is also introduced, which will be used to choose the best strategy for processing at any operation. We plugged these algorithms to our extended graph processing system (iGiraph) and compared them with those supported in other graph processing systems such as Giraph and Surfer on Australian National Cloud Infrastructure. We observed that up to 30% faster execution time, up to 50% network traffic decline, and more than 50% cost reduction are achieved by our algorithms compared to a framework such as the popular Giraph.
C1 [Heidari, Safiollah; Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic, Australia.
C3 University of Melbourne
RP Heidari, S (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic, Australia.
EM sheidari@student.unimelb.edu.au
RI Buyya, Rajkumar/C-3424-2009
OI Buyya, Rajkumar/0000-0001-9754-6496
FU ARC Discovery Project [DP160102414]
FX ARC Discovery Project, Grant/Award Number: DP160102414
CR [Anonymous], 2010, ACM SIGMOD INT C MAN
   [Anonymous], 2004, P 6 S OP SYST DES I
   [Anonymous], P 22 INT C WORLD WID
   [Anonymous], P 26 C UNC ART INT U
   [Anonymous], 2013, P INT C SCIENTI FIC
   [Anonymous], 2014, P OSDI
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Chen R., 2010, P ACM SIGMOD INT C M
   Ching A, 2015, PROC VLDB ENDOW, V8, P1804, DOI 10.14778/2824032.2824077
   Coulouris G., 2012, Distributed Systems: Concepts and Design
   Gong YF, 2015, IEEE T PARALL DISTR, V26, P3079, DOI 10.1109/TPDS.2013.96
   Gregor D., 2005, P PAR OBJ OR SCI COM
   Heidari S., 2016, P 16 IEEE ACM INT S
   Kang U, 2012, VLDB J, V21, P637, DOI 10.1007/s00778-012-0283-9
   Lumsdaine A, 2007, PARALLEL PROCESS LET, V17, P5, DOI 10.1142/S0129626407002843
   Ousterhout Kay., 2015, P 12 USENIX S NETW S
   Page L., 1998, P 7 INT WORLD WID WE, P161
   Redekopp M., 2013, P IEEE 27 INT S PAR
   Sagharichian M, 2015, CONCURR COMP-PRACT E, V27, P4954, DOI 10.1002/cpe.3482
   Siek J., 2002, The Boost Graph Library: User Guide and Reference Manual
   Song L, 2018, P IEEE INT S HIGH PE
   Tian Y, 2013, PROC VLDB ENDOW, V7, P193, DOI 10.14778/2732232.2732238
   VALIANT LG, 1990, COMMUN ACM, V33, P103, DOI 10.1145/79173.79181
   Yu HWani0, 2013, P 19 ACM SIGKDD INT
   Zha ZJ, 2009, J VIS COMMUN IMAGE R, V20, P97, DOI 10.1016/j.jvcir.2008.11.009
   Zhang M, 2018, P IEEE INT S HIGH PE
NR 26
TC 4
Z9 4
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2174
EP 2192
DI 10.1002/spe.2623
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700003
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Reshetova, E
   Liljestrand, H
   Paverd, A
   Asokan, N
AF Reshetova, Elena
   Liljestrand, Hans
   Paverd, Andrew
   Asokan, N.
TI Toward Linux kernel memory safety
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Linux kernel; Linux kernel development process; memory safety
AB The security of billions of devices worldwide depends on the security and robustness of the mainline Linux kernel. However, the increasing number of kernel-specific vulnerabilities, especially memory safety vulnerabilities, shows that the kernel is a popular and practically exploitable target. Two major causes of memory safety vulnerabilities are reference counter overflows (temporal memory errors) and lack of pointer bounds checking (spatial memory errors). To succeed in practice, security mechanisms for critical systems like the Linux kernel must also consider performance and deployability as critical design objectives. We present and systematically analyze two such mechanisms for improving memory safety in the Linux kernel, ie, (1) an overflow-resistant reference counter data structure designed to securely accommodate typical reference counter usage in kernel source code and (2) runtime pointer bounds checking using Intel memory protection extension in the kernel. We have implemented both mechanisms and we analyze their security, performance, and deployability. We also reflect on our experience of engaging with Linux kernel developers and successfully integrating the new reference counter data structure into the mainline Linux kernel.
C1 [Reshetova, Elena] Intel OTC, Espoo 02160, Finland.
   [Liljestrand, Hans; Paverd, Andrew; Asokan, N.] Aalto Univ, Espoo, Finland.
C3 Aalto University
RP Reshetova, E (corresponding author), Intel OTC, Espoo 02160, Finland.
EM elena.reshetova@intel.com
RI Liljestrand, Hans/AAL-6267-2021; Asokan, N./D-3182-2012
OI Liljestrand, Hans/0000-0003-0485-679X; Paverd,
   Andrew/0000-0003-2188-5285
FU Intel Collaborative Research Institute for Secure Computing at Aalto
   University; Cloud Security Services (CloSer) project; Tekes/Business
   Finland [3881/31/2016]
FX Intel Collaborative Research Institute for Secure Computing at Aalto
   University; Cloud Security Services (CloSer) project, funded by
   Tekes/Business Finland, Grant/Award Number: 3881/31/2016
CR Akritidis P, 2009, 18 USENIX SEC S SAN
   [Anonymous], 2017, National Vulnerability Database
   [Anonymous], 2011, STACK SMASHING TECHN
   [Anonymous], 2017, SUBMITTING PATCHES E
   [Anonymous], 2017, COCCINELLE PROJECT
   [Anonymous], 2006, LINUX J
   [Anonymous], 2007, P 28 ACM SIGPLAN C P
   [Anonymous], 2017, IMPLEMENTING DM VERI
   [Anonymous], 2017, NETPERF PROJECT
   [Anonymous], 2017, GRSECURITY PROJECT
   [Anonymous], 2017, KERNEL SELF PROTECTI
   [Anonymous], 2017, KERNEL ADDRESS SANIT
   [Anonymous], 2003, PAX NONEXECUTABLE PA
   [Anonymous], P WINT 1992 USENIX C
   [Anonymous], 2017, INTEGRITY MEASUREMEN
   [Anonymous], 2003, PAX ADDRESS SPACE LA
   Branco R, 2015, GRSECURITY FORUM GUE
   Chen H., 2011, P 2 AS PAC WORKSH SY
   COLLINS GE, 1960, COMMUN ACM, V3, P655, DOI 10.1145/367487.367501
   Cook K, 2017, CODEBLOG SECURITY TH
   Cook K, 2016, STATUS KERNEL SELF P
   Cowan C., 1998, P 7 USENIX SEC S SAN
   Devietti J, 2008, ACM SIGPLAN NOTICES, V43, P103, DOI 10.1145/1353536.1346295
   Dhurjati D., 2006, P 28 INT C SOFTW ENG
   Grossman D., 2005, C C USERS J, V23, P112
   Jones R. W. M., 1997, P 3 INT WORKSH AUT D
   Krahmer S., 2005, X86 64 BUFFER OVERFL
   Kuvaiskii D., 2017, P 12 EUR C COMP SYST
   Kwon Albert., 2013, P 2013 ACM SIGSAC C
   McKenney PE, 2007, N2167070027 IBM LIN
   Moreira J., 2017, DROP THE ROP: Finegrained Control-flow Integrity for the Linux Kernel
   Nagarakatte S., 2009, P 30 ACM SIGPLAN C P
   Necula GC, 2002, ACM SIGPLAN NOTICES, V37, P128, DOI 10.1145/565816.503286
   NETHERCOTE N, 2004, P 2 WORKSH SEM PROGR
   Nikolenko V, 2016, EXPLOITING COF VULNE
   Patil H, 1997, SOFTWARE PRACT EXPER, V27, P87, DOI 10.1002/(SICI)1097-024X(199701)27:1<87::AID-SPE78>3.0.CO;2-P
   Patil H, 1995, P 2 INT WORKSH AUT D
   Pike J., 2017, SERVER CPU PREDICTIO
   RAHEJA S, 2016, INDIAN J SCI TECHNOL, V9, pNI509, DOI DOI 10.17485/ijst/2016/v9i48/105819
   Ramakesavan R., 2015, INTEL MEMORY PROTECT
   Ratanaworabhan P, 2009, 18 USENIX SEC S SAN
   Serebryany Konstantin, 2012, USENIX ANN TECHN C M
   Solar Designer, 1997, LINUX KERNEL PATCH R
   Song C, 2016, 23 ANN NETW ANN NETW
   Suan Hsi Yong, 2003, Software Engineering Notes, V28, P307, DOI 10.1145/949952.940113
   Wei Xu, 2004, Software Engineering Notes, V29, P117, DOI 10.1145/1041685.1029913
   Xu J, 2003, 22 S REL DISTR SYST
NR 47
TC 3
Z9 4
U1 5
U2 52
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2237
EP 2256
DI 10.1002/spe.2638
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Huang, CM
   Mai, CM
AF Huang, Chung-Ming
   Mai, Chia-Ming
TI K-MING: A mobile proxy handoff control scheme for proximate group-based
   geodata sharing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE clustering mechanism; data sharing; group-based touring service;
   location-based service; mobile social networks in proximity
ID ARCHITECTURES
AB This work adopts a mobile social network in proximity (MSNP)-centric group touring service concept to share geo-points of interest's (POIs') data among mobile users belonging to the same touring group. In a group-based touring service, a mobile user can create a group in the MSNP that can consist of some clusters in which some members having the 3G/3.5G/4G cellular network service are selected as cluster leaders to enable their Wi-Fi hot spot functions as mobile proxies. After that, each group member can join one of the clusters by connecting with a cluster leader's Wi-Fi hot spot. Thereafter, each cluster leader downloads geo-POIs' data using 3G/3.5G/4G cellular network and then shares the downloaded POIs' data with its cluster members through its Wi-Fi hot spot. This work proposed a handoff mechanism such that each mobile user can handoff from its currently connected cluster to the other one that belongs to the same MNSP group. The main handoff concern is that each handheld device only allows a limited number of handheld devices to connect with its Wi-Fi hot spot at the same time. This work proposed a K-member-limited MSNP-based INter Group handoff scheme called K-MING to tackle the handoff problem. The performance analysis shows that K-MING for the group touring scenario has better performance for the sharing of geo-POIs' data downloading in terms of average power consumption and average downloaded data volume from 3G/3.5G/4G cellular network than that of the individual touring scenario.
C1 [Huang, Chung-Ming; Mai, Chia-Ming] Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 701, Taiwan.
C3 National Cheng Kung University
RP Huang, CM (corresponding author), Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 701, Taiwan.
EM huangcm@locust.csie.ncku.edu.tw
FU Ministry Of Science and Technology (MOST), Taiwan (R.O.C) [NSC
   106-2221-E-006-029]
FX Ministry Of Science and Technology (MOST), Taiwan (R.O.C), Grant/Award
   Number: NSC 106-2221-E-006-029
CR [Anonymous], INT S TECHN MAN EM T
   Asadi A, 2014, IEEE COMMUN SURV TUT, V16, P1801, DOI 10.1109/COMST.2014.2319555
   Chang C, 2014, PERVASIVE MOB COMPUT, V12, P179, DOI 10.1016/j.pmcj.2013.02.004
   Du H, 2017, IEEE T MOB COMPUT
   Guo B, 2016, IEEE T HUM-MACH SYST, V46, P390, DOI 10.1109/THMS.2015.2503290
   Guo B, 2014, IEEE PERVAS COMPUT, V13, P80, DOI 10.1109/MPRV.2014.80
   Hu XP, 2015, IEEE COMMUN SURV TUT, V17, P1557, DOI 10.1109/COMST.2014.2371813
   Huang CM, 2016, IEEE T EMERG TOP COM, V4, P528, DOI 10.1109/TETC.2015.2417674
   Huang CM, 2013, P IEEE 10 INT C UB I
   Kanda A, 2014, P 7 INT C HUM SYST I
   Le QT, 2016, P 18 IEEE INT C ADV
   Li S, 2015, P 7 INT C MEAS TECHN
   Lin XQ, 2014, IEEE COMMUN MAG, V52, P40, DOI 10.1109/MCOM.2014.6807945
   Ruiz P, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2786005
   Vastardis N, 2013, IEEE COMMUN SURV TUT, V15, P1355, DOI 10.1109/SURV.2012.060912.00108
   Wang YF, 2014, WIREL NETW, V20, P1295, DOI 10.1007/s11276-013-0677-7
   Yang P, 2015, P 9 IEEE INT C ANT C
   Zuo J, 2015, P IEEE INT C SMART C
NR 18
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 600
EP 620
DI 10.1002/spe.2551
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300010
DA 2024-07-18
ER

PT J
AU Echevarria, JJ
   Garaizar, P
   Legarda, J
AF Jose Echevarria, Juan
   Garaizar, Pablo
   Legarda, Jon
TI An experimental study on the applicability of SYN cookies to networked
   constrained devices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE constrained devices; denial of service; Internet of Things; network
   throughput; SYN cookies
ID ATTACKS
AB The Internet protocol suite is increasingly used on devices with constrained resources that operate as both clients and servers within the Internet of Things paradigm. However, these devices usually apply few-if any-security measures. Therefore, they are vulnerable to network attacks, particularly to denial of service attacks. The well-known SYN flood attack works by filling up the connection queue with fake SYN requests. When the queue is full, new connections cannot be opened until some entries are removed after a time-out. Class 2 constrained devices-according to the RFC 7228-are highly vulnerable to this attack because of their limited available memory, even in low-rate attacks. This paper analyses and compares in a class 2 constrained device the performance of 2 commonly used defence mechanisms (ie, recycle half-open connections and SYN cookies) during a low-rate SYN flood. We first review 2 SYN cookies implementations (ie, Linux and FreeBSD) and compare them with a hybrid approach in a class 2 device. Finally, experimental results prove that the proposed SYN cookies implementation is more effective than recycling the oldest half-open connections.
C1 [Jose Echevarria, Juan; Garaizar, Pablo; Legarda, Jon] DeustoTech Fdn Deusto, Avda Univ 24, Bilbao 48007, Spain.
   [Jose Echevarria, Juan; Garaizar, Pablo; Legarda, Jon] Univ Deusto, Fac Ingn, Avda Univ 24, Bilbao 48007, Spain.
C3 University of Deusto; University of Deusto
RP Echevarria, JJ (corresponding author), DeustoTech Fdn Deusto, Avda Univ 24, Bilbao 48007, Spain.
EM juanjose.echevarria@deusto.es
RI Legarda, Jon/A-6273-2012; Garaizar, Pablo/A-9031-2011
OI Legarda, Jon/0000-0002-2278-1237; Garaizar, Pablo/0000-0001-8160-9130
FU Department for Education, Language Policy, and Culture of the Basque
   Government
FX This work has been supported in part by a predoctoral fellowship from
   the Department for Education, Language Policy, and Culture of the Basque
   Government.
CR Aad I, 2008, IEEE ACM T NETWORK, V16, P791, DOI 10.1109/TNET.2007.904002
   [Anonymous], 2011, CONEXT 11, DOI DOI 10.1145/2079296.2079317
   [Anonymous], 4987 RFC
   [Anonymous], 2015, SHOCK VIB, DOI DOI 10.1155/2015/949172
   [Anonymous], P BSD C 2002
   [Anonymous], SECURITY PRIVACY RES
   [Anonymous], 2015, 7228 RFC
   Aris A, 2015, SIG PROCESS COMMUN, P903, DOI 10.1109/SIU.2015.7129976
   Aumasson J.-P., 2012, INT C CRYPT IND, P489
   Beitollahi H, 2012, COMPUT COMMUN, V35, P1312, DOI 10.1016/j.comcom.2012.04.008
   BERNSTEIN DJ, SYN COOKIES
   Corder G.W., 2009, NONPARAMETRIC STAT N
   Darst C, 1999, INTEGRATED NETWORK MANAGEMENT VI, P125, DOI 10.1109/INM.1999.770679
   Dunkels A., 2001, "Design and Implementation of the lwIP TCP/IP Stack
   Geetha K., 2014, Information Communication and Embedded Systems (ICICES), 2014 International Conference on, P1
   Hahn A, 2013, IEEE T SMART GRID, V4, P847, DOI 10.1109/TSG.2012.2226919
   Hang B, 2009, 2009 INTERNATIONAL CONFERENCE ON FUTURE BIOMEDICAL INFORMATION ENGINEERING (FBIE 2009), P445, DOI 10.1109/FBIE.2009.5405818
   Kavisankar L, 2011, COMM COM INF SC, V197, P138
   Korczynski Maciej, 2011, P IEEE ICC JUN, P1
   Lopez J, 2008, CRYPTOL INF SEC SER, V1, P1
   Mahimkar A., 2007, Proceedings of the 4th USENIX conference on Networked systems design implementation, P24
   Masdari M, 2016, SECUR COMMUN NETW, V9, P3724, DOI 10.1002/sec.1539
   McKusick M.K., 2014, DESIGN IMPLEMENTATIO
   Misra S., 2017, Security Challenges and Approaches in Internet of Things, P39, DOI DOI 10.1007/978-3-319-44230-3_4
   Nur A. Y., 2016, P 2016 IEEE INT C SM, P1, DOI [10.1109/SMARTCOMP.2016.7501685, DOI 10.1109/SMARTCOMP.2016.7501685]
   Pa Y. M. P., 2015, EMU, P1
   Sample AP, 2008, IEEE T INSTRUM MEAS, V57, P2608, DOI 10.1109/TIM.2008.925019
   Schuba CL, 1997, P IEEE S SECUR PRIV, P208, DOI 10.1109/SECPRI.1997.601338
   Sessini P., 2006, SIMULATION SERIES, V38, P347
   Smith C, 2008, 2008 24TH BIENNIAL SYMPOSIUM ON COMMUNICATIONS, P243, DOI 10.1109/BSC.2008.4563248
   Zúquete A, 2002, INT FED INFO PROC, V100, P57
NR 31
TC 7
Z9 8
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 740
EP 749
DI 10.1002/spe.2510
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300016
DA 2024-07-18
ER

PT J
AU Kwon, JW
   Jeong, I
   Moon, SM
AF Kwon, Jin-woo
   Jeong, InChang
   Moon, Soo-Mook
TI Lightweight migration for web applications with framework separation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE JavaScript; libraries; lightweight migration; productivity; snapshot;
   web application
AB Web applications (apps) are programs created by web technologies such as HTML, CSS, and JavaScript. Web apps can be executed on any platform that supports a web browser. Such portability allows an interesting user experience called app migration, which can save an app's execution state to a file called snapshot, transmit it to another device, and continue the execution using the snapshot. However, existing approaches save all the states of the current app, regardless of its relevance to an app's state, making the snapshot size and snapshot creation time infeasibly large. For example, web apps are often programmed using web frameworks such as jQuery, which are libraries written in JavaScript to support app developments. We found that most objects created by frameworks during their initialization are not relevant to an app's state. Hence, one idea to reduce the snapshot size is not saving those framework objects in the snapshot but creating them after migration via re-initialization. Unfortunately, this is not always straightforward since the framework objects are intermingled with the app objects in the heap, possibly pointing to each other. To resolve this, we separated app objects that are attached to framework objects by monitoring app's execution and saved them to the snapshot. This paper proposes such a framework separated migration technique, with optimization to reduce the overhead, especially related to monitoring app's execution. With our approach, we could reduce the snapshot size by 89.1% on average and shorten the migration time by 47.6%, increasing the feasibility of app migration.
C1 [Kwon, Jin-woo; Jeong, InChang; Moon, Soo-Mook] Seoul Natl Univ, Dept Elect & Comp Engn, Seoul, South Korea.
C3 Seoul National University (SNU)
RP Kwon, JW (corresponding author), Seoul Natl Univ, Dept Elect & Comp Engn, Seoul, South Korea.
EM jwkwon@altair.snu.ac.kr
OI Kwon, Jin-woo/0000-0002-1924-3059
FU National Research Foundation of Korea; Ministry of Science, ICT & Future
   Planning [NRF-2017R1A2B2005562]
FX National Research Foundation of Korea; Ministry of Science, ICT & Future
   Planning, Grant/Award Number: NRF-2017R1A2B2005562
CR ABE Y, 2016, SIGPLAN NOTICES, V51, P51, DOI DOI 10.1145/2892242.2892252
   [Anonymous], P 10 EUR C COMP SYST
   [Anonymous], 2007, Developing Multi-Agent Systems with JADE
   Bellucci F., 2011, P 3 ACM SIGCHI S ENG
   Chen B, 2006, SOFTWARE PRACT EXPER, V36, P1711, DOI 10.1002/spe.742
   Chowhan R. S., 2016, INT J COMPUT APPL, V156, P32
   Clark C., 2005, P 2 C S NETW SYST DE
   Feeley M, 2015, SIGPLAN NOTICES, V51, P63
   Germain G, 2006, P 2006 ACM SIGPLAN W
   Ghiani G, 2012, P INT WORK C ADV VIS
   Kwon J, 2015, 2015 13 IEEE S EMB S
   Lo JTK, 2013, P 22 INT C WWW 13 20
   Nelson M., 2005, P ANN C USENIX ANN T
   Oh J, 2015, P 11 ACM SIGPLAN SIG
   Systa K, 2013, P 9 INT C WEB INF SY
   Voutilainen JP, 2016, CURR TRENDS WEB ENG
NR 16
TC 0
Z9 0
U1 2
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 621
EP 640
DI 10.1002/spe.2542
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300011
DA 2024-07-18
ER

PT J
AU Salehi, MA
   Caldwell, T
   Fernandez, A
   Mickiewicz, E
   Rozier, EWD
   Zonouz, S
   Redberg, D
AF Salehi, Mohsen Amini
   Caldwell, Thomas
   Fernandez, Alejandro
   Mickiewicz, Emmanuel
   Rozier, Eric W. D.
   Zonouz, Saman
   Redberg, David
TI RESeED: A secure regular-expression search tool for storage clouds
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud storage; security; privacy; searchable encryption;
   regular-expression
ID PROVABLE DATA POSSESSION; EFFICIENT
AB Lack of trust has become one of the main concerns of users who tend to utilize one or multiple Cloud providers. Trustworthy Cloud-based computing and data storage require secure and efficient solutions which allow clients to remotely store and process their data in the Cloud. User-side encryption is an established method to secure the user data on the Cloud. However, using encryption, we lose processing capabilities, such as searching, over the Cloud data. In this paper, we present RESeED, a tool that provides user-transparent and Cloud-agnostic regular-expression search functionality over encrypted data across multiple Clouds. Upon a client's intent to upload a new document to the Cloud, RESeED analyzes the document's content and updates its data structures accordingly. Then, it encrypts and transfers the document to the Cloud. RESeED provides the regular-expression search functionality over encrypted data by translating the search queries on-the-fly to finite automata and analyzing concise and secure representations of the data before asking the Cloud to download the encrypted documents. RESeED's parallel architecture enables efficient search over large-scale (and potentially big data scale) data-sets. We evaluate the performance of RESeED experimentally and demonstrate its scalability and correctness using real-world data-sets from arXiv. org and Internet Engineering Task Force (IETF). Our results show that RESeED produces accurate query responses with a reasonable (similar or equal to 6%) storage overhead. The results also demonstrate that for many search queries, RESeED performs faster in compare with the grep utility that functions on unencrypted data. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Salehi, Mohsen Amini] Univ Louisiana Lafayette, Sch Comp & Informat, HPCC Lab, Lafayette, LA 70503 USA.
   [Caldwell, Thomas] Microsoft Corp, Bellevue, WA 98004 USA.
   [Fernandez, Alejandro] Citrix Syst Inc, Ft Lauderdale, FL 33309 USA.
   [Mickiewicz, Emmanuel] SIGFOX Inc, Toulouse, France.
   [Rozier, Eric W. D.] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
   [Zonouz, Saman] Rutgers State Univ, Elect & Comp Engn Dept, New Brunswick, NJ 08854 USA.
   [Redberg, David] Fortinet Inc, New York, NY 10119 USA.
C3 University of Louisiana Lafayette; Microsoft; Iowa State University;
   Rutgers University System; Rutgers University New Brunswick
RP Salehi, MA (corresponding author), Univ Louisiana Lafayette, Sch Comp & Informat, Lafayette, LA 70503 USA.
EM amini@louisiana.edu
FU Fortinet Inc.
FX The authors would like to thank Fortinet Inc. for their generous
   financial support for this project. The authors would also like to thank
   Cornell University for making the full repository of arXiv.org available
   for download, and the Internet Engineering Task Force for making the RFC
   repository available for download. Preliminary version of portions of
   this material were presented at the IEEE Cloud 2014 [39] and IEEE/ACM
   International Symposium on Cluster, Cloud and Grid Computing (CCGrid
   '14) [40] conferences.
CR Agrawal D., 2011, P 14 INT C EXTENDING, P530, DOI DOI 10.1145/1951365.1951432
   AHO AV, 1975, COMMUN ACM, V18, P333, DOI 10.1145/360825.360855
   [Anonymous], 2008, IACR CRYPTOL EPRINT
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Boneh D, 2004, LECT NOTES COMPUT SC, V3027, P506
   Boneh D, 2003, SIAM J COMPUT, V32, P586, DOI 10.1137/S0097539701398521
   Boneh D, 2007, LECT NOTES COMPUT SC, V4392, P535
   Cho JH, 2002, PROC INT CONF DATA, P419, DOI 10.1109/ICDE.2002.994755
   Chow R., 2009, Proceedings of the 2009 ACM workshop on Cloud computing security, P85, DOI DOI 10.1145/1655008.1655020
   Clarke CLA, 1997, ACM T PROGR LANG SYS, V19, P413, DOI 10.1145/256167.256174
   Curtmola Reza, 2006, P 13 ACM C COMP COMM, DOI DOI 10.1145/1180405.1180417
   Dorey P. G., 2011, Information Security Technical Report, V16, P89, DOI 10.1016/j.istr.2011.08.004
   Fathi R, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P516, DOI 10.1109/CLOUD.2015.75
   Fei Hu, 2011, Journal of Computing and Information Technology - CIT, V19, P25, DOI 10.2498/cit.1001864
   Fu ZJ, 2015, IEICE T COMMUN, VE98B, P190, DOI 10.1587/transcom.E98.B.190
   Goh EJ, 2003, Cryptology ePrint Archive, Report 2003/216
   Hjaltason GR, 2003, IEEE T PATTERN ANAL, V25, P530, DOI 10.1109/TPAMI.2003.1195989
   Ibrahim Ayad, 2013, COMPUT J, V56, P1
   Kamara S, 2010, LECT NOTES COMPUT SC, V6054, P136, DOI 10.1007/978-3-642-14992-4_13
   Li J., 2010, SAFETY COAL MINES, V10, P1, DOI DOI 10.1109/INFC0M.2010.5462122
   Liu C, 2014, IEEE T PARALL DISTR, V25, P2234, DOI 10.1109/TPDS.2013.191
   López-Alt A, 2012, STOC'12: PROCEEDINGS OF THE 2012 ACM SYMPOSIUM ON THEORY OF COMPUTING, P1219
   Meier M, 2013, PRISM EXPOSE BOOSTS
   Meng SM, 2014, IEEE T PARALL DISTR, V25, P3221, DOI 10.1109/TPDS.2013.2297117
   Pasupuleti SK, 2016, J NETW COMPUT APPL, V64, P12, DOI 10.1016/j.jnca.2015.11.023
   Peterson A, 2013, NSA SNOOPING IS HURT
   Popa RA, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P85
   Ravichandran D, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P41
   Ren SQ, 2016, FUTURE GENER COMP SY, V65, P102, DOI 10.1016/j.future.2016.03.013
   Rozier EWD, 2013, 2013 IEEE 19TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING (PRDC 2013), P172, DOI 10.1109/PRDC.2013.36
   Salehi M Amini, 2014, P 14 IEEE ACM INT S
   Salehi M Amini, 2014, P 7 IEEE CLOUD C CLO
   Schadt EE, 2010, NAT REV GENET, V11, P647, DOI 10.1038/nrg2857
   Song DXD, 2000, P IEEE S SECUR PRIV, P44, DOI 10.1109/SECPRI.2000.848445
   Sun WH, 2015, IEEE INFOCOM SER, DOI 10.1109/INFOCOM.2015.7218596
   Theoharidou M, 2013, INT CONF CLOUD COMP, P177, DOI 10.1109/CloudCom.2013.31
   THOM JA, 1992, J AM SOC INFORM SCI, V43, P616, DOI 10.1002/(SICI)1097-4571(199210)43:9<616::AID-ASI4>3.0.CO;2-A
   Wang BY, 2014, IEEE T CLOUD COMPUT, V2, P43, DOI [10.1109/TCC.2014.2299807, 10.1109/CLOUD.2012.46]
   Wang C, 2012, IEEE INFOCOM SER, P451, DOI 10.1109/INFCOM.2012.6195784
   Wang HQ, 2014, IEEE T PARALL DISTR, V25, P264, DOI 10.1109/TPDS.2013.16
   Wang QA, 2011, IEEE T PARALL DISTR, V22, P847, DOI 10.1109/TPDS.2010.183
   Wang XY, 2005, LECT NOTES COMPUT SC, V3621, P17
   Williams P, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P139
   WU S, 1992, COMMUN ACM, V35, P83, DOI 10.1145/135239.135244
   Yang K, 2013, IEEE T PARALL DISTR, V24, P1717, DOI 10.1109/TPDS.2012.278
   Zhan JF, 2012, IEEE SYM PARA DISTR, P1712, DOI 10.1109/IPDPSW.2012.213
   Zhu Y, 2012, IEEE T PARALL DISTR, V23, P2231, DOI 10.1109/TPDS.2012.66
   Zissis D, 2012, FUTURE GENER COMP SY, V28, P583, DOI 10.1016/j.future.2010.12.006
NR 48
TC 5
Z9 5
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2017
VL 47
IS 9
SI SI
BP 1221
EP 1241
DI 10.1002/spe.2473
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD0BH
UT WOS:000407204300004
DA 2024-07-18
ER

PT J
AU Alam, O
   Kienzle, J
   Mussbacher, G
AF Alam, Omar
   Kienzle, Joerg
   Mussbacher, Gunter
TI Modelling a family of systems for crisis management with
   concern-oriented reuse
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE concern-oriented reuse; crisis management system; bCMS; software product
   line; SPL; aspect-oriented modelling; goal modelling; reusable concern
   library
AB Concern-oriented reuse (CORE) proposes the concern as a new unit of model-based reuse encapsulating software artefacts pertaining to a domain of interest that span multiple development phases and levels of abstraction. With CORE, a concern encapsulates multiple reusable features, while allowing its generic models to be customized to problem-specific contexts. We report on our experience of designing a family of crisis management systems (CMS) with the help of reusable concern libraries. The collected metrics show a considerable amount of reuse in our CMS design. The study provides encouraging evidence that CORE's vision to create large-scale, generic and reusable entities that are expressed with the most appropriate modelling formalisms at the right level of abstraction is feasible. We present our experience in the design of the CMS and elaborate on the advantages as well as the efforts required to adopt CORE in an industrial setting. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Alam, Omar] Trent Univ, Dept Comp & Informat Syst, Peterborough, ON K9J 7B8, Canada.
   [Kienzle, Joerg] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 2A7, Canada.
   [Mussbacher, Gunter] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0E9, Canada.
C3 Trent University; McGill University; McGill University
RP Alam, O (corresponding author), Trent Univ, Dept Comp & Informat Syst, Peterborough, ON K9J 7B8, Canada.
EM omaralam@trentu.ca
CR Alam  O., 2016, THESIS
   Alam O, 2013, LECT NOTES COMPUT SC, V8107, P604, DOI 10.1007/978-3-642-41533-3_37
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Bak K, 2011, LECT NOTES COMPUT SC, V6563, P102, DOI 10.1007/978-3-642-19440-5_7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Blume M, 1999, ACM T PROGR LANG SYS, V21, P813, DOI 10.1145/325478.325518
   Broy Manfred, 2012, What is the Benefit of a Model-Based Design of Embedded Software Systems in the Car Industry?, P343, DOI [10.4018/978-1-61350-438-3.ch013, DOI 10.4018/978-1-61350-438-3.CH013]
   Capozucca A, 2011, REQUIREMENTS DEFINIT
   Dijkstra E W, 1976, DISCIPLINE PROGRAMMI, V1
   Duran MB, 2015, LECT NOTES COMPUT SC, V9369, P141, DOI 10.1007/978-3-319-24912-4_11
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Gurp JV, 2008, COMBINING ADVANTAGES
   International Telecommunication Union (ITU-T), 2012, REC Z 151 1012 US RE
   Kästner C, 2012, ACM SIGPLAN NOTICES, V47, P773, DOI 10.1145/2398857.2384673
   Kang K, 1990, CMUSEI90TR21 SEI CMU
   Kienzle J, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P87
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P272
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P1
   Kramer ME, 2011, MODELS SOFTWARE ENG, P125
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Krueger CW, 2006, NEW METHODS SOFTWARE, P95
   Liu Y, 2014, RE 2014 KARLSKR IEEE
   McIlroy M. D., 1968, P NATO C SOFTW ENG G
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Moreira Ana., 2013, ASPECT ORIENTED REQU
   Mussbacher G, 2010, LECT NOTES COMPUT SC, V6210, P23
   Mussbacher Gunter., 2013, ASPECT ORIENTED REQU, P77, DOI DOI 10.1007/978-3-642-38640-4_5
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pérez J, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P221, DOI 10.1109/WICSA.2009.5290808
   Perrouin G, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P339, DOI 10.1109/SPLC.2008.38
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rosenmuller Marko., 2010, VAMOS, P123
   Schottle M., 2015, COMPANION P 14 INT C, P11, DOI DOI 10.1145/2735386.2735922
   Schröter R, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P96
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   van der Storm T, 2004, LECT NOTES COMPUT SC, V3107, P157
   van Ommering R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255, DOI 10.1109/ICSE.2002.1007973
NR 37
TC 3
Z9 6
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2017
VL 47
IS 7
SI SI
BP 985
EP 999
DI 10.1002/spe.2463
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EG
UT WOS:000403114200005
DA 2024-07-18
ER

PT J
AU Binder, W
   Moret, P
   Tanter, É
   Ansaloni, D
AF Binder, Walter
   Moret, Philippe
   Tanter, Eric
   Ansaloni, Danilo
TI Polymorphic bytecode instrumentation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bytecode instrumentation; dynamic program analysis; profiling;
   aspect-oriented programming; execution levels; Java virtual machine
ID SEMANTICS
AB Bytecode instrumentation is a widely used technique to implement aspect weaving and dynamic analyses in virtual machines such as the Java virtual machine. Aspect weavers and other instrumentations are usually developed independently and combining them often requires significant engineering effort, if at all possible. In this article, we present polymorphic bytecode instrumentation(PBI), a simple but effective technique that allows dynamic dispatch amongst several, possibly independent instrumentations. PBI enables complete bytecode coverage, that is, any method with a bytecode representation can be instrumented. We illustrate further benefits of PBI with three case studies. First, we describe how PBI can be used to implement a comprehensive profiler of inter-procedural and intra-procedural control flow. Second, we provide an implementation of execution levels for AspectJ, which avoids infinite regression and unwanted interference between aspects. Third, we present a framework for adaptive dynamic analysis, where the analysis to be performed can be changed at runtime by the user. We assess the overhead introduced by PBI and provide thorough performance evaluations of PBI in all three case studies. We show that pure Java profilers like JP2 can, thanks to PBI, produce accurate execution profiles by covering all code, including the core Java libraries. We then demonstrate that PBI-based execution levels are much faster than control flow pointcuts to avoid interference between aspects and that their efficient integration in a practical aspect language is possible. Finally, we report that PBI enables adaptive dynamic analysis tools that are more reactive to user inputs than existing tools that rely on dynamic aspect-oriented programming with runtime weaving. These experiments position PBI as a widely applicable and practical approach for combining bytecode instrumentations. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Binder, Walter; Moret, Philippe; Ansaloni, Danilo] USI, Fac Informat, Via G Buffi 13, CH-6900 Lugano, Switzerland.
   [Tanter, Eric] Univ Chile, Comp Sci Dept DCC, PLEIAD Lab, Santiago, Chile.
C3 Universita della Svizzera Italiana; Universidad de Chile
RP Binder, W (corresponding author), USI, Fac Informat, Via G Buffi 13, CH-6900 Lugano, Switzerland.
EM walter.binder@usi.ch
OI Binder, Walter/0000-0002-2477-2182
FU Oracle (ERO project) [1332]; Swiss National Science Foundation
   [CRSII2_136225]; European Commission [ACP2-GA-2013-605442]; Swiss
   National Science Foundation (SNF) [CRSII2_136225] Funding Source: Swiss
   National Science Foundation (SNF)
FX The research presented in this article was supported by Oracle (ERO
   project 1332), by the Swiss National Science Foundation (project
   CRSII2_136225), and by the European Commission (contract
   ACP2-GA-2013-605442).
CR Ammons G, 1997, ACM SIGPLAN NOTICES, V32, P85, DOI 10.1145/258916.258924
   Ansaloni D., 2010, Proceedings of the International Conference on Aspect-Oriented Software Development (AOSD'09), P1
   Ansaloni Danilo., 2010, Proceedings of the First Joint WOSP/SIPEW International Conference on Performance Engineering, WOSP/SIPEW '10, P57
   Arnold M, 2001, ACM SIGPLAN NOTICES, V36, P168, DOI 10.1145/381694.378832
   Arnold M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063241
   Arnold M, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P143
   Avgustinov P., 2005, ASPECT ORIENTED SYST, P87
   Binder W., 2007, P 5 INT S PRINC PRAC, DOI DOI 10.1145/1294325.1294344
   Binder W, 2011, CONCURR COMP-PRACT E, V23, P1749, DOI 10.1002/cpe.1760
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bodden E, 2006, LECT NOTES INFORM, P49
   Bodden E., 2008, Proceedings of the International Symposium on Software Testing and Analysis (ISSTA), P155, DOI DOI 10.1145/1390630.1390650
   Bruneton Eric, 2002, P AD EXT COMP SYST
   Charles P, 2005, ACM SIGPLAN NOTICES, V40, P519, DOI 10.1145/1103845.1094852
   Chiba S., 1996, Object Technologies for Advanced Software. Second JSSST International Symposium ISOTAS'96. Proceedings, P157
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   CLICK C, 1995, ACM T PROGR LANG SYS, V17, P181, DOI 10.1145/201059.201061
   Costanza P, 2006, LECT NOTES COMPUT SC, V4228, P84
   Denker M, 2006, COMPUT LANG SYST STR, V32, P125, DOI 10.1016/j.cl.2005.10.002
   Dmitriev M., 2004, Software Engineering Notes, V29, P139, DOI 10.1145/974043.974067
   Dutchyn C, 2006, SCI COMPUT PROGRAM, V63, P207, DOI 10.1016/j.scico.2006.01.003
   Factor M, 2004, ACM SIGPLAN NOTICES, V39, P288, DOI 10.1145/1035292.1029000
   Flann C., 2010, Addressing global change: a new agenda for botanic gardens. Fourth Global Botanic Gardens Congress, Dublin, Irish Republic, 13-18 June 2010, P1, DOI 10.1145/1806672.1806674
   Gosling J, 2005, THE JAVA SERIES
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   Harrison W, 2006, LECT NOTES COMPUT SC, V4089, P194
   Hilsdale E., 2004, INT C ASPECT ORIENTE, P26
   Hirschfeld R, 2008, J OBJECT TECHNOL, V7, P125, DOI 10.5381/jot.2008.7.3.a4
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Lee HB, 1997, PROCEEDINGS OF THE USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS, P73
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Marek Lukas, 2012, AOSD, P239, DOI [10.1145/2162049.2162077, DOI 10.1145/2162049.2162077]
   Masuhara H, 2003, LECT NOTES COMPUT SC, V2622, P46
   Millstein T, 2004, ACM SIGPLAN NOTICES, V39, P345, DOI 10.1145/1035292.1029006
   Moret P, 2011, P INT C ASP OR SOFTW, P129, DOI DOI 10.1145/1960275.1960292
   Ossher HL, 2001, KLUWER INT SERIES EN, V648, P293
   Pearce DJ, 2007, SOFTWARE PRACT EXPER, V37, P747, DOI 10.1002/spe.788
   Sarimbekov A., 2011, Proceedings of the 9th International Conference on Principles and Practice of Programming in Java, PPPJ'11, P11
   Sarimbekov A, 2014, SCI COMPUT PROGRAM, V79, P146, DOI 10.1016/j.scico.2011.11.003
   Sewe A, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P657
   Smaragdakis Y, 2002, ACM T SOFTW ENG METH, V11, P215, DOI 10.1145/505145.505148
   Steele Jr GL, 2006, OOPSLA 06, P505
   Tanter E, 2002, LECT NOTES COMPUT SC, V2487, P283
   Tanter E, 2010, P 9 ACM SIGPLAN INT, P113
   Tanter Eric, 2010, P 9 ACM INT C ASP OR, P37, DOI DOI 10.1145/1739230.1739236
   Tilevich E., 2006, P 5 INT C GENERATIVE, P89
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Villazón A, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P63
   Villazon Alex., 2009, Proceedings of the Eighth International Conference on Generative Programming and Component Engineering, GPCE'09, P85, DOI [DOI 10.1145/1621607.1621621, DOI 10.1145/1837852.1621621]
NR 49
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2016
VL 46
IS 10
BP 1351
EP 1380
DI 10.1002/spe.2385
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW4PG
UT WOS:000383624900004
OA hybrid
DA 2024-07-18
ER

PT J
AU da Silva, JR
   Clua, E
   Murta, L
AF da Silva Junior, Jose Ricardo
   Clua, Esteban
   Murta, Leonardo
TI Efficient image-aware version control systems using GPU
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE version control; image; GPU; CUDA
ID GRAPHICS
AB Version control is considered to be a vital component for supporting professional software development. While it has been widely used for textual artifacts, such as source code or documentation, little attention has been given to binary artifacts. This omission can place huge restrictions on projects in the game and media industries as they contain large amounts of binary data, such as images, videos, three-dimensional models, and animations, along with their source code. For these kinds of artifacts, existing strategies such as storing the file as a whole for each revision or saving conventional binary deltas consume significant storage space with duplicate data and, even worse, do not provide any understandable information on which modifications were made. As a response to this problem, this paper introduces a change-set model infrastructure to support version control of image artifacts using a specialized data structure. Additionally, our approach can deal with the maintenance of duplicate nearly identical images through a merge operation. Because of the amount of data that has to be processed, we designed our solution based on a parallel architecture, which permits a massively parallel approach to version control. The paper also compares our approach with some popular open-source version control systems, showing their repository growth in relation to ours as well as the time required to process image artifacts. Finally, we demonstrate that our architecture requires less storage space and runs much faster than current methods. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [da Silva Junior, Jose Ricardo; Clua, Esteban; Murta, Leonardo] Univ Fed Fluminense, Rua Passo da Patria 156, Niteroi, RJ, Brazil.
C3 Universidade Federal Fluminense
RP da Silva, JR (corresponding author), Univ Fed Fluminense, Rua Passo da Patria 156, Niteroi, RJ, Brazil.
EM jricardo@ic.uff.br
RI Clua, Esteban/AAC-7716-2022
OI Clua, Esteban/0000-0001-5650-1718
CR [Anonymous], 2008, 2008 IEEE Hot Chips 20 Symposium (HCS), DOI 10.1109/HOTCHIPS.2008.7476516
   [Anonymous], 2018, Real-Time Rendering
   [Anonymous], 2005, Proceedings of the SIGCHI conference on Human factors in computing systems
   [Anonymous], 1976, 41 CSTR BELL LAB
   Austerberry D., 2004, DIGITAL ASSET MANAGE
   Babich WayneA., 1986, Software Configuration Management: Coordination for Team Productivity
   Bay H, 2008, COMPUT VIS IMAGE UND, V110, P346, DOI 10.1016/j.cviu.2007.09.014
   Bonanni L, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P571
   Bradski G, 2000, DR DOBBS J, V25, P120
   Brandao A, 2010, PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER ENTERTAINMENT TECHNOLOGY (ACE 2010), P15
   Buffenbarger J., 1995, Software Configuration Management. ICSE SCM-4 and SCM-5 Workshops. Selected Papers, P153
   Che S, 2008, J PARALLEL DISTR COM, V68, P1370, DOI 10.1016/j.jpdc.2008.05.014
   Chen HT, 2011, ACM T GRAPHIC, V30, DOI 10.1145/1964921.1965000
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   da Silva JR, 2012, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2012.28
   Dart S., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P1, DOI 10.1145/111062.111063
   Emanuelsson P., 2012, SOFTWARETECHNIK TREN, V32, P30, DOI [10.1007/BF03323518., DOI 10.1007/BF03323518]
   Estublier J, 2005, ACM T SOFTW ENG METH, V14, P383, DOI 10.1145/1101815.1101817
   Estublier J, 1999, LECT NOTES COMPUT SC, V1675, P172
   FEILER PH, 1991, CMUSEI91TR7
   Gonzalez R C, 2008, DIGITAL IMAGE PROCES
   Grabler F, 2009, ACM T GRAPHIC, V28, DOI 10.1145/1531326.1531372
   Gross T, 2010, PROCEEDINGS OF THE 24TH PACIFIC ASIA CONFERENCE ON LANGUAGE, INFORMATION AND COMPUTATION, P143, DOI 10.1145/1866029.1866054
   Hu SM, 2013, ACM T GRAPHIC, V32, DOI 10.1145/2508363.2508371
   Hunt J. J., 1998, ACM Transactions on Software Engineering and Methodology, V7, P192, DOI 10.1145/279310.279321
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   Jacobsen Jens., 2005, Implementing a Digital Asset Management System: For Animation, Computer Games, and Web Development
   Klemmer S. R., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P1, DOI 10.1145/503376.503378
   Kurlander D., 1993, CHIMERA EXAMPLE BASE
   Lindholm E, 2008, IEEE MICRO, V28, P39, DOI 10.1109/MM.2008.31
   Murta L, 2007, SCI COMPUT PROGRAM, V65, P249, DOI 10.1016/j.scico.2006.05.011
   Paradowski M, 2010, 2010 INT C INF SCI A, P1, DOI [10.1109/ICISA.2010.5480532, DOI 10.1109/ICISA.2010.5480532]
   Satish N, 2009, INT PARALL DISTRIB P, P257
   Shneiderman B, 2007, COMMUN ACM, V50, P20, DOI 10.1145/1323688.1323689
   Wong J., 2006, P 10 WSEAS INT C COM, P2
NR 36
TC 3
Z9 3
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2016
VL 46
IS 8
BP 1011
EP 1033
DI 10.1002/spe.2340
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR4ZQ
UT WOS:000379912900001
DA 2024-07-18
ER

PT J
AU You, YP
   Chen, JR
AF You, Yi-Ping
   Chen, Jian-Ru
TI A static region-based compiler for the Dalvik virtual machine
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Android; Dalvik virtual machine; region-based compilation
AB The Dalvik virtual machine (VM) is an integral component used to execute applications in Android, which is one of the leading operating systems for mobile devices. The Dalvik VM is an interpreter and is equipped with a trace-based just-in-time compiler for enhancing the execution performance of frequently executed paths, or traces. However, traces generated by the Dalvik VM can be stopped in a conditional branch or a method call/return, which means that these traces usually have a short lifetime, decreasing the effectiveness of the compiler optimizations applied to them. Furthermore, the just-in-time compiler applies only a few simple optimizations because of performance considerations. In this article we present a traces-to-region (T2R) framework that extends traces to regions and statically compiles these regions into native binaries so as to improve the execution of Android applications. The T2R framework involves three main stages: (i) the profiling stage, in which the run-time trace information of an application is extracted; (ii) the compilation stage, in which regions are constructed from the extracted traces and are statically compiled into a native binary; and (iii) the execution stage, in which the compiled binary is loaded into the code cache when the application starts to execute. Experiments performed on an Android tablet demonstrated that the T2R framework was effective in improving the execution performance of applications by 10.5-16.2% and decreasing the size of the code cache by 4.6-28.5%. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [You, Yi-Ping; Chen, Jian-Ru] Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu 30010, Taiwan.
C3 National Yang Ming Chiao Tung University
RP You, YP (corresponding author), Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu 30010, Taiwan.
EM ypyou@cs.nctu.edu.tw
OI You, Yi-Ping/0000-0002-4455-3147
FU Ministry of Science and Technology of Taiwan [NSC-100-2218-E-009-011-
   MY3, MOST 103-2221-E-009-103-MY3]
FX This study was partially supported by the Ministry of Science and
   Technology of Taiwan under grants NSC-100-2218-E-009-011- MY3 and MOST
   103-2221-E-009-103-MY3.
CR Alpern B, 2005, IBM SYST J, V44, P399, DOI 10.1147/sj.442.0399
   ARM Ltd, 2012, CORT A9 TECHN REF MA
   Arnold M, 2005, ACM SIGPLAN NOTICES, V40, P297, DOI 10.1145/1103845.1094835
   Bebenita M., 2010, PPPJ, P59
   Bornstein D., 2008, DALVIK VM INTERNALS
   Cheng B., 2010, JIT COMPILER ANDROID
   Childers B, 2003, P 17 INT S PAR DISTR, P205
   GreeneComputing, 2012, LINP FOR ANDR
   Hank R. E., 1995, Proceedings of the 28th Annual International Symposium on Microarchitecture (Cat. No.95TB100012), P158, DOI 10.1109/MICRO.1995.476823
   Hookway R. J., 1997, Digital Technical Journal, V9, P3
   Kistler T, 2003, ACM T PROGR LANG SYS, V25, P500, DOI 10.1145/778559.778562
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Liang S., 1999, Java native interface: programmers guide and reference, V1
   LLVM, 2004, LLC LLVM STAT COMP
   Pendragon Software Corp, 1997, CAFF 3 0
   Pérez GA, 2012, CASES'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON COMPILERS, ARCHITECTURES AND SYNTHESIS FOR EMBEDDED SYSTEMS, P41
   Polychronis K., 2009, BENCHMARKPI ANDROID
   Shi YH, 2007, ACM T ARCHIT CODE OP, V4, DOI 10.1145/1328195.1328197
   Suganuma T, 2006, ACM T PROGR LANG SYS, V28, P134, DOI 10.1145/1111596.1111600
   Sun Microsystems Inc, 2001, JAV HOTSPOT PERF ENG
   Wang CS, 2011, PROCEEDINGS OF THE PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON COMPILERS, ARCHITECTURES AND SYNTHESIS FOR EMBEDDED SYSTEMS (CASES '11), P15
   Yao-Chih Huang, 2010, 2010 International Computer Symposium (ICS 2010), P489, DOI 10.1109/COMPSYM.2010.5685462
   Zhang Y, 2012, ACM SIGPLAN NOTICES, V47, P63, DOI 10.1145/2365864.2151035
NR 23
TC 0
Z9 0
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2016
VL 46
IS 8
BP 1109
EP 1130
DI 10.1002/spe.2344
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR4ZQ
UT WOS:000379912900005
DA 2024-07-18
ER

PT J
AU Di, S
   Cappello, F
AF Di, Sheng
   Cappello, Franck
TI GloudSim: Google trace based cloud simulator with virtual machines
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; simulation system; Google cluster; Google trace
ID TOOLKIT
AB In 2011, Google released a 1-month production trace with hundreds of thousands of jobs running across over 12,000 heterogeneous hosts. In order to perform in-depth research based on the trace, it is necessary to construct a close-to-practice simulation system. In this paper, we devise a distributed cloud simulator (or toolkit) based on virtual machines, with three important features. (1) The dynamic changing resource amounts (such as CPU rate and memory size) consumed by the reproduced jobs can be emulated as closely as possible to the real values in the trace. (2) Various types of events (e.g., kill/evict event) can be emulated precisely based on the trace. (3) Our simulation toolkit is able to emulate more complex and useful cases beyond the original trace to adapt to various research demands. We evaluate the system on a real cluster environment with 16x8=128 cores and 112 virtual machines constructed by XEN hypervisor. To the best of our knowledge, this is the first work to reproduce Google cloud environment with real experimental system setting and real-world large scale production trace. Experiments show that our simulation system could effectively reproduce the real checkpointing/restart events based on Google trace, by leveraging Berkeley Lab Checkpoint/Restart tool. It can simultaneously process up to 1200 emulated Google jobs over the 112 virtual machines. Such a simulation toolkit has been released as a GNU GPL v3 software for free downloading, and it has been successfully applied to the fundamental research on the optimization of checkpoint intervals for Google tasks. Published 2014. This article is a U.S. Government work and is in the public domain in the USA.
C1 [Di, Sheng; Cappello, Franck] Argonne Natl Lab, MCS, Lemont, IL 60439 USA.
   [Cappello, Franck] Univers Illinois Urbana Champaign, Champaign, IL USA.
C3 United States Department of Energy (DOE); Argonne National Laboratory;
   University of Illinois System; University of Illinois Urbana-Champaign
RP Di, S (corresponding author), Argonne Natl Lab, MCS Div, Bldg 240,9700 S Cass Ave, Lemont, IL 60439 USA.
EM sdi1@anl.gov
FU Illinois-INRIA-ANL Joint Laboratory on Petascale Computing, Hong Kong
   RGC Grant [HKU-716712E]; US Department of Energy, Office of Science
   [DE-AC02-06CH11357];  [ANR RESCUE 5323]
FX This work is supported by the projects ANR RESCUE 5323,
   Illinois-INRIA-ANL Joint Laboratory on Petascale Computing, Hong Kong
   RGC Grant HKU-716712E, and also supported in part by the US Department
   of Energy, Office of Science, under contract DE-AC02-06CH11357.
CR [Anonymous], 2011, GOOGLE RES BLOG
   [Anonymous], ISTCCCTR12101 CARN M
   [Anonymous], 2009, DEP ELECT ENG COMPUT
   [Anonymous], 2003, ACM SIGOPS OPERATING
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1175, DOI 10.1002/cpe.710
   Buyya R, 2008, HPCC 2008: 10TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P5, DOI 10.1109/HPCC.2008.172
   Calheiros RN, 2013, SOFTWARE PRACT EXPER, V43, P595, DOI 10.1002/spe.2124
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Carns PH, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH ANNUAL LINUX SHOWCASE AND CONFERENCE, ATLANTA, P317
   Casanova H, 2008, UKSIM INT CONF COMP, P126, DOI 10.1109/UKSIM.2008.28
   Cecchet E., 2011, 2 USENIX C WEB APPL, P37
   Chaisiri B.-S., 2009, 2009 IEEE AS PAC SER, P103, DOI DOI 10.1109/APSCC.2009.5394134
   Daly JT, 2006, FUTURE GENER COMP SY, V22, P303, DOI 10.1016/j.future.2004.11.016
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Di S., 2013, P INT C HIGH PERF CO
   Di S, 2014, J SUPERCOMPUT, V69, P139, DOI 10.1007/s11227-014-1131-z
   Di S, 2013, IEEE T PARALL DISTR, V24, P464, DOI 10.1109/TPDS.2012.144
   Di S, 2012, IEEE INT C CL COMP, P230, DOI 10.1109/CLUSTER.2012.35
   Gupta D, 2006, LECT NOTES COMPUT SC, V4290, P342
   Hargrove PH, 2006, J PHYS CONF SER, V46, P494, DOI 10.1088/1742-6596/46/1/067
   McCanne S., NETWORK SIMULATOR NS
   Montresor A, 2009, IEEE INT CONF PEER, P99, DOI 10.1109/P2P.2009.5284506
   Reiss Charles., 2011, Technical Report
   Sharma B., 2011, P SOCC
   Shvachko K., 2010, 2010 IEEE 26th Symposium on Mass Storage Systems and Technologies (MSST), P1
   Smith J., 2005, VIRTUAL MACHINES VER
   Vahdat A, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P271, DOI 10.1145/1060289.1060315
   Xia HX, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL WORKSHOP ON CHALLENGES OF LARGE APPLICATIONS IN DISTRIBUTED ENVIRONMENTS, P52
   Yanpei Chen, 2011, Proceedings of the 2011 IEEE 19th International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2011), P390, DOI 10.1109/MASCOTS.2011.12
   YOUNG JW, 1974, COMMUN ACM, V17, P530, DOI 10.1145/361147.361115
NR 31
TC 20
Z9 27
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2015
VL 45
IS 11
BP 1571
EP 1590
DI 10.1002/spe.2303
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LI
UT WOS:000363500900006
DA 2024-07-18
ER

PT J
AU Sor, V
   Srirama, SN
   Salnikov-Tarnovski, N
AF Sor, Vladimir
   Srirama, Satish Narayana
   Salnikov-Tarnovski, Nikita
TI Memory leak detection in Plumbr
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE memory leak; Java; garbage collection; troubleshooting
AB Platforms with automatic memory management, such as the JVM, are usually considered free of memory leaks. However, memory leaks can happen in such environments, as the garbage collector cannot free objects, which are not used by the application anymore, but are still referenced. Such unused objects can eventually fill up the heap and crash the application. Although this problem has been studied extensively, nevertheless, there are still many rooms for improvement in this area. This paper describes the statistical approach for memory leak detection, as an alternative, along with a commercial tool, Plumbr, which is based on the method. The tool is later analyzed with three case studies of real applications and in the process also analyzes strengths and weaknesses of the statistical approach for memory leak detection. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Sor, Vladimir; Salnikov-Tarnovski, Nikita] Plumbr OU, Software Technol & Applicat Competence Ctr, Tartu, Estonia.
   [Srirama, Satish Narayana] Univ Tartu, Inst Comp Sci, EE-50090 Tartu, Estonia.
C3 University of Tartu
RP Sor, V (corresponding author), Plumbr OU, Software Technol & Applicat Competence Ctr, Ulikooli 2, Tartu, Estonia.
EM volli@plumbr.eu
RI Srirama, Satish Narayana/ABE-6775-2020; Srirama, Satish
   Narayana/H-2729-2015
OI Srirama, Satish Narayana/0000-0002-7600-7124; Srirama, Satish
   Narayana/0000-0002-7600-7124
FU European Regional Development Fund through Estonian Centre of Excellence
   in Computer Science, Software Technology and Applications Competence
   Center; Plumbr OU
FX This research is supported by the European Regional Development Fund
   through Estonian Centre of Excellence in Computer Science, Software
   Technology and Applications Competence Center and Plumbr OU.
CR Amazon Inc, 2011, EL COMP CLOUD EC2
   [Anonymous], 2011, MEMORY LEAK DISCUSSI
   Apache Software Foundation, 2011, JMETER
   Apache Software Foundation, 2011, AP SOFTW FDN ISS TRA
   Apache Software Foundation, 2011, ACTIVEMQ
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bond MD, 2006, ACM SIGPLAN NOTICES, V41, P61, DOI 10.1145/1168918.1168866
   Bond MD, 2009, ACM SIGPLAN NOTICES, V44, P277, DOI 10.1145/1508284.1508277
   Bonds MD, 2008, INT C OBJ OR PROGR S, P109
   Breitgand D, 2007, 2007 10TH IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2009), VOLS 1 AND 2, P169, DOI 10.1109/INM.2007.374781
   Chen K, 2007, P INT COMP SOFTW APP, P23
   De Pauw W., 1999, LECT NOTES COMPUTER, V1628, P668
   Goldstein Maayan., 2007, INT WORKSHOP SOFTWAR, P1, DOI DOI 10.1145/1295074.1295076
   Jumps M, 2007, 34 ACM SIGPLAN SIGAC, P31
   Liangs S, 1999, JAVA NATIVE INTERFAC
   LIEBERMAN H, 1983, COMMUN ACM, V26, P419, DOI 10.1145/358141.358147
   Maxwells EK, 2010, THESIS VIRGINIA POLY
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   Mitchell N, 2003, LECT NOTES COMPUT SC, V2743, P351
   Oracle corp, 2010, JAV SE 6 HOTSP TM VI
   Qian J, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P571, DOI 10.1109/ICSM.2012.6405323
   Rayside D., 2007, INT C AUTOMATED SOFT, P194
   Rayside D, 2006, WODA 06, P57
   Reiss SP, 2009, IEEE INT WORK VIS SO, P73, DOI 10.1109/VISSOF.2009.5336418
   Rijsbergens CJV, 1979, INFORM RETRIEVAL
   Sedlaceks J, 2010, UNCOVERING MEMORY LE
   Shaham R, 2000, LECT NOTES COMPUT SC, V1781, P50
   Sor V, 2011, LECT NOTES COMPUT SC, V7045, P635, DOI 10.1007/978-3-642-25106-1_16
   Sors V, 2012, P 2012 ACM RES APPL, P269
   Sporars G, 2006, DR DOBBS J
   Sun Microsystems Inc, 2006, JVMTOOL INT
   Tang Yan, 2008, P 2008 USENIX ANN TE, P307
   The Eclipse Foundation, 2011, MEM AN
   UNGAR D, 1984, SIGPLAN NOTICES, V19, P157
   Xu GQ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P151, DOI 10.1145/1368088.1368110
   Xus G, 2011, ACM SIGPLAN C PROGR, P270
NR 36
TC 6
Z9 7
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2015
VL 45
IS 10
BP 1307
EP 1330
DI 10.1002/spe.2275
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7VW
UT WOS:000360814800001
DA 2024-07-18
ER

PT J
AU Chang, HP
   Liao, SY
   Chang, DW
   Chen, GW
AF Chang, Hsung-Pin
   Liao, Syuan-You
   Chang, Da-Wei
   Chen, Guo-Wei
TI Profit data caching and hybrid disk-aware Completely Fair Queuing
   scheduling algorithms for hybrid disks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE disk cache; hybrid disks; heterogeneous storage; disk scheduler; flash
   memory
AB Recently, a hybrid disk drive that integrates a small amount of flash memory within a mechanical drive has received significant attention. The hybrid drive extends the storage hierarchy by using flash memory to cache data from the mechanical disk. Unfortunately, current caching architectures fail to fully exploit the potential of the hybrid drive. Furthermore, current disk input/output (I/O) schedulers are optimized for rotational mechanical disk drives and thus must be re-targeted for the hybrid disk drive. In this paper, we propose a new data caching scheme, called Profit Caching, for hybrid drives. Profit Caching is a self-optimizing caching algorithm. It considers and seamlessly integrates all possible data characteristics that impact the performance of hybrid drives, including read count, write count, sequentiality, randomness, and recency, to determine the caching policy. Moreover, we propose a hybrid disk-aware Completely Fair Queuing (HA-CFQ) scheduler to avoid unnecessary I/O anticipations of the CFQ scheduler. We have implemented Profit Caching and HA-CFQ scheduler in the Linux kernel. Coupled with a trace-driven simulator, we have also conducted detailed experiments under a variety of workloads. Experimental results show that Profit Caching provides significantly improved performance compared with the previous schemes. In particular, the throughput of Profit Caching outperforms previous Random Access First and FlashCache caching schemes by factors of up to 1.8 and 7.6, respectively. In addition, the HA-CFQ scheduler reduces the total execution time of the CFQ scheduler by up to 1.74%. Finally, the experimental results show that the runtime overhead of Profit Caching is extremely insignificant and can be ignored. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Chang, Hsung-Pin; Liao, Syuan-You; Chen, Guo-Wei] Natl Chung Hsing Univ, Dept Compute Sci & Engn, Taichung 402, Taiwan.
   [Chang, Da-Wei] Natl Chung Hsing Univ, Dept Comp Sci & Informat Engn, Tainan, Taiwan.
C3 National Chung Hsing University; National Chung Hsing University
RP Chang, HP (corresponding author), Natl Chung Hsing Univ, Dept Compute Sci & Engn, 250 Kun Kuang Rd, Taichung 402, Taiwan.
EM hpchang@cs.nchu.edu.tw
OI Chang, Hsung-Pin/0000-0002-2680-8556
FU National Science Council [NSC 99-2221-E-005-076-, NSC
   101-2221-E-006-098-MY3]
FX This work is supported by the National Science Council under project NSC
   99-2221-E-005-076- and NSC 101-2221-E-006-098-MY3.
CR [Anonymous], 2009, P 1 WORKSH INT SOL S
   [Anonymous], SSD EXT DISKSIM SIM
   Appuswamy R., 2012, MASS STORAGE SYSTEMS, P1
   Cao P, 1997, PROCEEDINGS OF THE USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS, P193
   Chen F., 2011, Proc. of ACM Int. Conf. on Supercomputing, P22
   Deng YH, 2008, INFORM SCIENCES, V178, P4403, DOI 10.1016/j.ins.2008.07.022
   Deng YH, 2011, J SYST ARCHITECT, V57, P214, DOI 10.1016/j.sysarc.2010.12.003
   Iyer S., 2001, Operating Systems Review, V35, P117, DOI 10.1145/502059.502046
   Jiang S, 2005, IEEE T COMPUT, V54, P939, DOI 10.1109/TC.2005.130
   Katcher J, POSTMARK NEW FILE SY
   Kgil Taeho., 2006, P 2006 INT C COMPILE, P103, DOI DOI 10.1145/1176760.1176774
   Kim Y.-J., 2006, 6 ACM IEEE INT C EMB, P171
   Lin Lin, 2011, Proceedings of the 2011 IEEE 19th International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2011), P318, DOI 10.1109/MASCOTS.2011.41
   Park Stan., 2012, FAST, P13
   Saxena M., 2012, P 7 ACM EUR C COMP S, P267, DOI DOI 10.1145/2168836.2168863
   Stevens CE, AT ATTACHMENT 8 ATA
   Wu XD, 2009, J BIOMED BIOTECHNOL, DOI 10.1155/2009/591923
   Xiao W., 2012, 2012 IEEE 10th International Symposium on Parallel and Distributed Processing with Applications, P403
   Xiaojian Wu, 2010, Proceedings 18th IEEE/ACM International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2010), P14, DOI 10.1109/MASCOTS.2010.11
   Yang Liu, 2010, Proceedings of the 2010 IEEE International Conference on Networking, Architecture, and Storage (NAS 2010), P492, DOI 10.1109/NAS.2010.9
   YOUNG N, 1994, ALGORITHMICA, V11, P525, DOI 10.1007/BF01189992
NR 21
TC 8
Z9 9
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2015
VL 45
IS 9
BP 1229
EP 1249
DI 10.1002/spe.2279
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM9FH
UT WOS:000358012100003
OA Bronze
DA 2024-07-18
ER

PT J
AU Nunes, C
   Garcia, A
   Lucena, C
   Lee, J
AF Nunes, Camila
   Garcia, Alessandro
   Lucena, Carlos
   Lee, Jaejoon
TI Heuristic expansion of feature mappings in evolving program families
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE evolving program families; feature mappings; heuristics; experimental
   evaluation
ID TRACEABILITY LINKS; CLONE DETECTION; CODE; TOOL
AB Establishing explicit mappings between features and their implementation elements in code is one of the critical factors to maintain and evolve software systems successfully. This is especially important when developers have to evolve program families, which have evolved from one single core system to similar but different systems to accommodate various requirements from customers. Many techniques and tools have emerged to assist developers in the feature mapping activity. However, existing techniques and tools for feature mapping are limited as they operate on a single program version individually. Additionally, existing approaches are limited to recover features on demand, that is, developers have to run the tools for each family member version individually. In this paper, we propose a cohesive suite of five mapping heuristics addressing those two limitations. These heuristics explore the evolution history of the family members in order to expand feature mappings in evolving program families. The expansion refers to the action of automatically generating the feature mappings for each family member version by systematically considering its previous change history. The mapping expansion starts from seed mappings and continually tracks the features of the program family, thus eliminating the need of on demand algorithms. Additionally, we present the MapHist tool that provides support to the application of the proposed heuristics. We evaluate the accuracy of our heuristics through two evolving program families from our industrial partners. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Nunes, Camila; Garcia, Alessandro; Lucena, Carlos] Pontifical Catholic Univ Rio de Janeiro, Dept Informat, Software Engn Lab, Opus Res Grp, Rio De Janeiro, Brazil.
   [Lee, Jaejoon] Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4YW, England.
C3 Pontificia Universidade Catolica do Rio de Janeiro; Lancaster University
RP Nunes, C (corresponding author), Pontifical Catholic Univ Rio de Janeiro, Dept Informat, Software Engn Lab, Opus Res Grp, Rio De Janeiro, Brazil.
EM cnunes@inf.puc-rio.br
RI Lucena, Carlos/GQP-2277-2022
OI Lee, Jaejoon/0000-0001-6016-8540
CR Adams B., 2010, P 32 ACMIEEE INT C S, P305
   [Anonymous], 2012, 16 INT SOFTWARE PROD, DOI DOI 10.1145/2362536.2362556
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], EMPIRICAL S IN PRESS
   Antoniol G, 2005, PROC IEEE INT CONF S, P357
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   Breu S, 2006, IEEE INT CONF AUTOM, P221
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Bruntink M, 2004, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2004.1357804
   Buckner J, 2005, PROG COMPREHEN, P149, DOI 10.1109/WPC.2005.22
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   de F Carneiro Glauco, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P128, DOI 10.1109/SBES.2010.21
   Dit B, 2011, J SOFTWARE IN PRESS
   Doar M, 2007, JDIFF HTML REPORT AP
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   Eixelsberger W, 1998, PROC INT CONF SOFTW, P508, DOI 10.1109/ICSE.1998.671617
   Figueiredo E., 2011, P 10 INT C ASP OR SO, P81
   Figueiredo E, 2009, INT C PROGRAM COMPRE, P138, DOI 10.1109/ICPC.2009.5090037
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Gang Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P418, DOI 10.1109/ICSM.2011.6080809
   Hrbacek K, 1944, MONOGRAPHS TXB PURE
   Kang KC, 2005, LECT NOTES COMPUT SC, V3714, P45
   Kastner C., 2007, WORKSH REF TOOLS CON, P62
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   KELLENS A, 2007, T ASPECT ORIENTED SO, V4, P143
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   KOSCHKE R., 2005, ASE '05 Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, P86
   Liu XH, 2008, PROCEEDINGS OF THE 2008 IEEE INTERNATIONAL CONFERENCE ON NETWORKING, ARCHITECTURE, AND STORAGE, P278, DOI 10.1109/NAS.2008.58
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Marin M, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314496
   Nguyen TT, 2009, IEEE INT CONF AUTOM, P123, DOI 10.1109/ASE.2009.90
   Nguyen TT, 2009, PROC INT CONF SOFTW, P437, DOI 10.1109/ICSE-COMPANION.2009.5071050
   Novais R, 2012, PROC INT CONF SOFTW, P1044, DOI 10.1109/ICSE.2012.6227115
   Nunes C, 2010, P INT C SOFTW MAINT, P1
   Nunes C, 2011, EUR CON SFTWR MTNCE, P101, DOI 10.1109/CSMR.2011.16
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Quilty G., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P251, DOI 10.1109/SPLC.2011.30
   Ratzinger Jacek, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P354
   Revelle M, 2011, EMPIR SOFTW ENG, V16, P773, DOI 10.1007/s10664-011-9159-7
   Robillard M, 2007, TECHNICAL REPORT
   Robillard M.P., 2005, Proceedings of the OOPSLA Workshop on Eclipse Technology eXchange, eclipse '05, P65, DOI DOI 10.1145/1117696.1117710
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   Rohatgi A, 2008, INT C PROGRAM COMPRE, P234, DOI 10.1109/ICPC.2008.35
   Savage T., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P255, DOI 10.1145/1810295.1810345
   Nguyen TT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P361, DOI 10.1145/1985793.1985843
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wong WE, 1999, ASSET'99: 1999 IEEE SYMPOSIUM ON APPLICATION-SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING & TECHNOLOGY - PROCEEDINGS, P194, DOI 10.1109/ASSET.1999.756769
NR 59
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2014
VL 44
IS 11
BP 1315
EP 1349
DI 10.1002/spe.2200
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AT2AQ
UT WOS:000344733400002
DA 2024-07-18
ER

PT J
AU Uzun, E
   Güner, ES
   Kiliçaslan, Y
   Yerlikaya, T
   Agun, HV
AF Uzun, Erdinc
   Guener, Edip Serdar
   Kilicaslan, Yilmaz
   Yerlikaya, Tarik
   Agun, Hayri Volkan
TI An effective and efficient Web content extractor for optimizing the
   crawling process
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web content extraction; Web crawling; classification; intelligent
   systems
ID SEARCHING STRATEGIES
AB Classical Web crawlers make use of only hyperlink information in the crawling process. However, focused crawlers are intended to download only Web pages that are relevant to a given topic by utilizing word information before downloading the Web page. But, Web pages contain additional information that can be useful for the crawling process. We have developed a crawler, iCrawler (intelligent crawler), the backbone of which is a Web content extractor that automatically pulls content out of seven different blocks: menus, links, main texts, headlines, summaries, additional necessaries, and unnecessary texts from Web pages. The extraction process consists of two steps, which invoke each other to obtain information from the blocks. The first step learns which HTML tags refer to which blocks using the decision tree learning algorithm. Being guided by numerous sources of information, the crawler becomes considerably effective. It achieved a relatively high accuracy of 96.37% in our experiments of block extraction. In the second step, the crawler extracts content from the blocks using string matching functions. These functions along with the mapping between tags and blocks learned in the first step provide iCrawler with considerable time and storage efficiency. More specifically, iCrawler performs 14 times faster in the second step than in the first step. Furthermore, iCrawler significantly decreases storage costs by 57.10% when compared with the texts obtained through classical HTML stripping. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Uzun, Erdinc] Namk Kemal Univ, Corlu Engn Fac, Dept Comp Engn, Corlu Tekirdag, Turkey.
   [Guener, Edip Serdar; Kilicaslan, Yilmaz; Yerlikaya, Tarik; Agun, Hayri Volkan] Trakya Univ, Dept Comp Engn, Edirne, Turkey.
C3 Trakya University
RP Uzun, E (corresponding author), Namk Kemal Univ, Corlu Engn Fac, Dept Comp Engn, Corlu Tekirdag, Turkey.
EM erdincuzun@nku.edu.tr
RI Yerlikaya, Tarık/AGP-6489-2022; Uzun, Erdinç/AAG-5529-2019; Agun, Hayri
   Volkan/P-5002-2019; GUNER, EDIP SERDAR/A-1759-2016
OI Uzun, Erdinç/0000-0003-4351-2244; Agun, Hayri
   Volkan/0000-0002-4253-8920; Yerlikaya, Tarik/0000-0002-9888-0151; GUNER,
   EDIP SERDAR/0000-0002-7284-7513
CR Adelberg B., 1998, SIGMOD Record, V27, P283, DOI 10.1145/276305.276330
   [Anonymous], 2010, WSDM 2010 P 3 ACM IN, DOI DOI 10.1145/1718487.1718542
   [Anonymous], CLASSIFICATION REGRE
   [Anonymous], 2002, Proc. ACM SIGKDD International Conference on Knowledge Discovery and Data Mining
   Baluja S., 2006, WWW 06 P 15 INT C WO, P33, DOI DOI 10.1145/1135777.1135788
   Bar-Yossef Z., 2002, P 11 INT C WORLD WID, P580
   Baronis M, 2008, P 6 INT LANG RES EV
   Boldi P, 2004, SOFTWARE PRACT EXPER, V34, P711, DOI 10.1002/spe.587
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Cai D, 2003, LECT NOTES COMPUT SC, V2642, P406
   Cais D, 2003, MICROS TECHN REP
   Can F, 2008, J AM SOC INF SCI TEC, V59, P407, DOI 10.1002/asi.20750
   Carlbergers J, 2001, P NODALIDA 01 13 NOR
   Chakrabarti D., 2008, INT C WORLD WIDE WEB, P377
   Chakrabarti Deepayan., 2007, P 16 INT C WORLD WID, P61
   Chakrabartis S, WWW C 1999
   Chen J., 2001, INT C WORLD WIDE WEB, P587
   Debnath S, 2005, IEEE T KNOWL DATA EN, V17, P1233, DOI 10.1109/TKDE.2005.138
   Everts S., 2008, P 6 INT LANG RES EV
   Gibson J., 2007, Proceedings of the 9th Annual ACM International Workshop on Web Information and Data Management, P105, DOI DOI 10.1145/1316902
   Kohlschtter C., 2008, PROCEEDING 17 ACM C, P1173, DOI DOI 10.1145/1458082.1458237
   Kohlschutter Christian., 2009, P 18 INT C WORLD WID, P1165, DOI DOI 10.1145/1526709.1526909
   Kovacevics M, IEEE INT C DAT MIN I
   Liu L., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P611, DOI 10.1109/ICDE.2000.839475
   Ma L., 2003, P 12 INT C INF KNOWL, P512, DOI [10.1145/956863.956961, DOI 10.1145/956863.956961]
   Najorks M, 2001, HDB MASSIVE DATA SET
   Quinlans R., 1993, C4 5 PROGRAMS MACHIN
   Savoy J, 2008, INFORM PROCESS MANAG, V44, P310, DOI 10.1016/j.ipm.2007.01.022
   Savoy J, 2007, INFORM RETRIEVAL, V10, P509, DOI 10.1007/s10791-007-9033-9
   Shkapenyuks V, IEEE INT C DAT ENG I
   Spoustas M, WAC4 2008
   Uzun E, 2012, EXPERT SYST APPL, V39, P5658, DOI 10.1016/j.eswa.2011.11.105
   Vieira K., 2006, 15 ACM INT C INFORM, P258
   Yan HF, 2002, J SYST SOFTWARE, V60, P185, DOI 10.1016/S0164-1212(01)00091-7
   Yerlikayas T, ASYU 2010, P53
   Yi L., 2003, INT JOINT C ARTIFICI, P43
   Yi Lan., 2003, KDD 03, P296
   Yu Shipeng., 2003, P 12 INT C ONWORLDWI, P11, DOI DOI 10.1145/775152.775155
   [No title captured]
   [No title captured]
NR 40
TC 14
Z9 15
U1 0
U2 39
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2014
VL 44
IS 10
BP 1181
EP 1199
DI 10.1002/spe.2195
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP2AR
UT WOS:000341875200002
DA 2024-07-18
ER

PT J
AU Gülcü, K
   Sözer, H
   Aktemur, B
   Ercan, AÖ
AF Gulcu, Koray
   Sozer, Hasan
   Aktemur, Baris
   Ercan, Ali Ozer
TI Fault masking as a service
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE service-oriented systems; availability; fault avoidance; fault masking;
   service monitoring
ID WEB; SYSTEMS; BPEL
AB In SOA, composite services depend on a set of partner services to perform their tasks. These partner services may become unavailable because of system and/or network faults, leading to an increased error rate for the composite service. In this paper, we propose an approach to prevent the occurrence of errors that result from the unavailability of partner services. We introduce an external Web service, dubbed Fault Avoidance Service (FAS), to which composite services can register at will. After registration, FAS periodically checks the partner links, detects unavailable partner services, and updates the composite service with available alternatives. Thus, in case of a partner service error, the composite service will have been updated before attempting an ill-destined request. We provide mathematical analysis regarding the error rate and the false positive rate with respect to the monitoring frequency of FAS for two models. We obtained empirical results by conducting several tests on the Amazon Elastic Compute Cloud to evaluate our mathematical analyses. We also introduce an industrial case study for improving the quality of a service-oriented system from the broadcasting and content delivery domain. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Gulcu, Koray; Sozer, Hasan; Aktemur, Baris; Ercan, Ali Ozer] Ozyegin Univ, TR-34794 Istanbul, Turkey.
C3 Ozyegin University
RP Sözer, H (corresponding author), Ozyegin Univ, Sch Engn, Nisantepe Mah Orman Sk 13, TR-34794 Istanbul, Turkey.
EM hasan.sozer@ozyegin.edu.tr
RI Sözer, Hasan/A-4722-2015; Sözer, Hasan/AAR-8697-2020; Ercan, Ali
   Özer/C-3364-2009
OI Sözer, Hasan/0000-0002-2968-4763; Sözer, Hasan/0000-0002-2968-4763; 
FU Vestel Electronics; Turkish Ministry of Science, Industry and Technology
   [00995.STZ.2011-2]
FX We thank the anonymous reviewers for their feedback to improve this
   paper. This work is supported by Vestel Electronics and the Turkish
   Ministry of Science, Industry and Technology (00995.STZ.2011-2). The
   contents of this article reflect the ideas and positions of the authors
   and do not necessarily reflect the ideas or positions of Vestel
   Electronics and the Turkish Ministry of Science, Industry and
   Technology.
CR Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Ardagna D, 2010, J SYST SOFTWARE, V83, P1512, DOI 10.1016/j.jss.2010.03.045
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baier C., 2000, INT C COMP AID VER, P358, DOI DOI 10.1007/10722167
   BARESI L, 2004, P 1 C PRINC SOFTW EN, P27
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Cardellini V., 2011, Proceedings of the 2011 IEEE 6th International Symposium on Service Oriented System Engineering (SOSE 2011), P102, DOI 10.1109/SOSE.2011.6139098
   Cardellini V, 2009, LECT NOTES COMPUT SC, V5835, P24, DOI 10.1007/978-3-642-10248-6_2
   Chen IY, 2010, J ADV COMPUT INTELL, V14, P523, DOI 10.20965/jaciii.2010.p0523
   CHEN Y, 2008, J IT PROFESSIONALS, V10, P29
   Ciortea Liviu, 2009, Operating Systems Review, V43, P5, DOI 10.1145/1713254.1713257
   Dobson G, 2006, EUROMICRO CONF PROC, P126, DOI 10.1109/EUROMICRO.2006.63
   Ezenwoye Onyeka, 2008, Journal of Networks, V3, P42, DOI 10.4304/jnw.3.5.42-53
   Fang CL, 2007, J SYST ARCHITECT, V53, P21, DOI 10.1016/j.sysarc.2006.06.001
   Fredj M, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P101, DOI 10.1109/SERVICES-1.2008.52
   Georgakopoulos D, 2009, P 4 INT WORKSH SOFTW
   Georgakopoulos D, 2008, COOP INFORM SYST, P1
   Gorbenko A, 2007, THESIS, P228
   Gorbenko Anatoliy., 2007, ISTA, volume 107 of LNI, V107, P228
   Gulcu K, 2012, LECT NOTES MS E 221, P106
   Jordan D., 2009, WEB SERVICES BUSINES
   Leon-Garcia A., 2007, PROBABILITY STAT RAN, V3rd
   Liu A, 2010, IEEE T SERV COMPUT, V3, P46, DOI 10.1109/TSC.2009.28
   Lo T, 2012, P INT ACM C WORLD WI
   Medjahed B, 2003, VLDB J, V12, P333, DOI 10.1007/s00778-003-0101-5
   Probability Leon-Garcia A., 2007, TECHNICAL REPORT
   Robinson WN, 2011, IEEE T SERV COMPUT, V4, P17, DOI 10.1109/TSC.2010.41
   Salatge N, 2007, I C DEPEND SYS NETWO, P51, DOI 10.1109/DSN.2007.48
   Santos GT, 2005, NINTH IEEE INTERNATIONAL EDOC ENTERPRISE COMPUTING CONFERENCE, PROCEEDINGS, P95, DOI 10.1109/EDOC.2005.15
   Simmonds J, 2009, IEEE T SERV COMPUT, V2, P223, DOI 10.1109/TSC.2009.16
   Tsalgatidou A, 2002, DISTRIB PARALLEL DAT, V12, P135, DOI 10.1023/A:1016599017660
   WANG L, 2013, CLOUD COMPUTING METH
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P739, DOI 10.1016/j.future.2012.09.001
   Xiong Z, 2008, IEEE INT C NETW SENS, P1577
   Zarras A, 2006, LECT NOTES COMPUT SC, V4157, P364
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zheng ZB, 2010, EMPIR SOFTW ENG, V15, P323, DOI 10.1007/s10664-009-9126-8
   Zibin Zheng, 2010, 2010 IEEE International Conference on Web Services (ICWS), P83, DOI 10.1109/ICWS.2010.10
NR 38
TC 4
Z9 5
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2014
VL 44
IS 7
SI SI
BP 835
EP 854
DI 10.1002/spe.2255
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ5NN
UT WOS:000337731000006
DA 2024-07-18
ER

PT J
AU Falleri, JR
   Blanc, X
   Bendraou, R
   da Silva, MAA
   Teyton, C
AF Falleri, Jean-Remy
   Blanc, Xavier
   Bendraou, Reda
   da Silva, Marcos Aurelio Almeida
   Teyton, Cedric
TI Incremental inconsistency detection with low memory overhead
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE model driven engineering; program analysis; logic programming; model
   consistency; software engineering
AB Ensuring models' consistency is a key concern when using a model-based development approach. Therefore, model inconsistency detection has received significant attention over the last years. To be useful, inconsistency detection has to be sound, efficient, and scalable. Incremental detection is one way to achieve efficiency in the presence of large models. In most of the existing approaches, incrementalization is carried out at the expense of the memory consumption that becomes proportional to the model size and the number of consistency rules. In this paper, we propose a new incremental inconsistency detection approach that only consumes a small and model size-independent amount of memory. It will therefore scale better to projects using large models and many consistency rules. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Falleri, Jean-Remy; Blanc, Xavier; Teyton, Cedric] Univ Bordeaux, LaBRI, UMR 5800, F-33400 Talence, France.
   [Bendraou, Reda; da Silva, Marcos Aurelio Almeida] Univ Paris, F-75252 Paris, France.
C3 Universite de Bordeaux; Centre National de la Recherche Scientifique
   (CNRS); Universite Paris Cite
RP Falleri, JR (corresponding author), Univ Bordeaux, LaBRI, UMR 5800, F-33400 Talence, France.
EM falleri@labri.fr
OI Falleri, Jean-Remy/0000-0002-8284-7218; Bendraou,
   Reda/0000-0003-3259-6286
FU Movida ANR Project
FX This work has been supported by the Movida ANR Project.
CR Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Blanc X, 2009, LECT NOTES COMPUT SC, V5565, P32, DOI 10.1007/978-3-642-02144-2_8
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Boehm B, 1996, IEEE SOFTWARE, V13, P25, DOI 10.1109/52.506460
   Cabot J, 2006, LECT NOTES COMPUT SC, V4001, P81, DOI 10.1007/11767138_7
   Chang Xu, 2006, 28th International Conference on Software Engineering Proceedings, P292
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Eichberg M, 2007, LECT NOTES COMPUT SC, V4354, P109
   Elaasar M, 2004, SCE0418 CARL U DEP S
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Finkelstein S, 2009, CIDR 2009 4 BIENN C
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   Hessellund A, 2007, LECT NOTES COMPUT SC, V4735, P46
   Hill M. D., 1990, Computer Architecture News, V18, P18, DOI 10.1145/121973.121975
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Le Noir J, 2011, LECT NOTES COMPUT SC, V6698, P85, DOI 10.1007/978-3-642-21470-7_7
   Menet L, 2010, LECT NOTES COMPUT SC, V6428, P120, DOI 10.1007/978-3-642-16961-8_28
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5562, P130, DOI 10.1007/978-3-642-02674-4_10
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   OMG, 2011, TECHNICAL REPORT
   Paige RF, 2007, ACM T SOFTW ENG METH, V16, pB1, DOI 10.1145/1243987.1243989
   Rose LM, 2010, LECT NOTES COMPUT SC, V6138, P245, DOI 10.1007/978-3-642-13595-8_20
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   Sterling L. S., 1994, The Art of Prolog, V2nd
   Van Der Straeten R, 2003, LECT NOTES COMPUT SC, V2863, P326
   Wagner R, 2003, P INT C UN MOD LANG
   Xu C, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1656250.1656253
NR 31
TC 5
Z9 6
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2014
VL 44
IS 5
BP 621
EP 641
DI 10.1002/spe.2171
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE3YW
UT WOS:000333915400006
OA Green Published
DA 2024-07-18
ER

PT J
AU Hafiz, M
AF Hafiz, Munawar
TI A pattern language for developing privacy enhancing technologies
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE pattern; pattern language; privacy; PET
ID LOCATION PRIVACY; CRYPTOGRAPHY; ANONYMITY; DESIGN
AB A privacy enhancing technology (PET) is an application or a mechanism that allows users to protect the privacy of their personally identifiable information. Early PETs were about enabling anonymous mailing and anonymous browsing, but lately, there have been active research and development efforts in many other problem domains. This paper describes the first pattern language for developing PETs. Currently, it contains 12 patterns. These privacy patterns are not limited to a specific problem domain; they can be applied to design anonymity systems for various types of online communication, online data sharing, location monitoring, voting, and electronic cash management. The pattern language guides a developer when he or she is designing a PET for an existing problem or innovating a solution for a new problem. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 Auburn Univ, Dept Comp Sci & Software Engn, Shelby Ctr 3101, Auburn, AL 36849 USA.
C3 Auburn University System; Auburn University
RP Hafiz, M (corresponding author), Auburn Univ, Dept Comp Sci & Software Engn, Shelby Ctr 3101, Auburn, AL 36849 USA.
EM munawar@auburn.edu
CR Agrawal R, 2000, SIGMOD REC, V29, P439, DOI 10.1145/335191.335438
   [Anonymous], 2006, P 2006 C PATT LANG P
   [Anonymous], 1998, ACM Trans Inform Syst Secur TISSEC, DOI DOI 10.1145/290163.290168
   [Anonymous], 2002, W3C recommendation
   [Anonymous], 2000, in Proceedings of the 7th ACM Conference on Computer and Communications Security
   Antón AI, 2004, REQUIR ENG, V9, P169, DOI 10.1007/s00766-003-0183-z
   Beresford AR, 2003, IEEE PERVAS COMPUT, V2, P46, DOI 10.1109/MPRV.2003.1186725
   Brandeis L., 1890, Harvard law Review, V4, P193
   Chaum D, 2004, IEEE SECUR PRIV, V2, P38, DOI 10.1109/MSECP.2004.1264852
   CHAUM DL, 1981, COMMUN ACM, V24, P84, DOI 10.1145/358549.358563
   Chung Eric S, 2004, P 5 C DES INT SYST P, P233, DOI [10.1145/1013115.1013148, DOI 10.1145/1013115.1013148]
   Clarke I., 2001, LECT NOTES COMPUTER, V2009, P46, DOI DOI 10.1007/3-540-44702-4_
   Cotrell L, 1995, MIXMASTER REMAILER A
   DAI W, 1996, USENET POST      AUG
   Danezis G, 2003, P IEEE S SECUR PRIV, P2, DOI 10.1109/SECPRI.2003.1199323
   Danezis G, 2010, LECT NOTES COMPUT SC, V6205, P202, DOI 10.1007/978-3-642-14527-8_12
   Dingledine R, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 13TH USENIX SECURITY SYMPOSIUM, P303
   Dinur Irit, 2003, P 22 ACM SIGMOD SIGA, P202
   Dötzer F, 2006, LECT NOTES COMPUT SC, V3856, P197
   Electronic Privacy Infornation Centre (EPIC), 2002, PRIV HUM RIGHTS INT
   Erkin Z, 2009, LECT NOTES COMPUT SC, V5672, P235, DOI 10.1007/978-3-642-03168-7_14
   Evans J, 2004, P 1 INT WORKSH VEH A
   Fan JL, 2004, COMPUT NETW, V46, P253, DOI 10.1016/j.comnet.2004.03.033
   Fayad M, 2002, COMMUN ACM, V45, P102, DOI 10.1145/567498.567529
   Fayad ME, 2001, COMMUN ACM, V44, P95, DOI 10.1145/383694.383713
   Freedman MJ, 2004, LECT NOTES COMPUT SC, V3027, P1
   FREEDMAN MJ, 2002, P 9 ACM C COMP COMM
   Freudiger J., 2007, MIX ZONES LOCATION P
   Fu XW, 2002, INT CON DISTR COMP S, P340
   Goldberg I, 2002, LNCS, V2
   GOLDBERG I, 1997, P 42 IEEE SPRING COM
   Gruteser M, 2003, PROCEEDINGS OF MOBISYS 2003, P31, DOI 10.1145/1066116.1189037
   GULCU C, 1996, P S NETW DISTR SYST
   Hafiz M, 2007, IEEE SOFTWARE, V24, P52, DOI 10.1109/MS.2007.114
   HELSINGIUS J, 1996, JOHAN HELSINGIUS CLO
   Helsingius J, 1995, ANON PENET FI ANONYM
   ICANN Security and Stability Advisory Committee, 2008, 024 SAC ICANN
   Juels A, 2005, LECT NOTES COMPUT SC, V3352, P149
   Juels A, 2003, LECT NOTES COMPUT SC, V2742, P103
   Juels A, 2006, LECT NOTES COMPUT SC, V3856, P210
   Kesdogan D, 1998, LECT NOTES COMPUT SC, V1525, P83
   Kido H., 2005, 21 INT C DAT ENG WOR, P1248
   Minshall G, 1997, TCPDPRIV RELEASE 1 1
   Neff C.A., 2001, ACM CCS 2001, P116
   Neubauer T., 2009, SAC 09 P 2009 ACM S, P857
   Olumofin F, 2010, LECT NOTES COMPUTER, V6205
   Pfitzmann A., 1991, P GIITG C COMMUNICAT, P451, DOI DOI 10.1007/978-3-642-76462-232
   Pfitzmann A., 1985, ADV CRYPTOLOGY, V219, P245
   REISS SP, 1984, ACM T DATABASE SYST, V9, P20, DOI 10.1145/348.349
   Renner M., 2002, Worldwatch Paper
   Rieback MR, 2005, LECT NOTES COMPUT SC, V3574, P184
   Riedl B., 2008, HAWAII INT C SYSTEM, P255
   Sadicoff M., 2005, P 12 C PATT LANG PRO
   Sampigethaya K, 2007, IEEE J SEL AREA COMM, V25, P1569, DOI 10.1109/JSAC.2007.071007
   Sarma S., 2003, CRYPTOGRAPHIC HARDWA, P1
   SASSAMAN L, 2005, P 2005 ACM WORKSH PR
   Schumacher M., 2002, P EUR C PATT LANG PR
   Schummer Till., 2004, P CHI WORKSH HUM COM, P1, DOI 10.1.1.528.1860
   Sweeney L, 2002, INT J UNCERTAIN FUZZ, V10, P557, DOI 10.1142/S0218488502001648
   Syverson PF, 1997, P IEEE S SECUR PRIV, P44, DOI 10.1109/SECPRI.1997.601314
   Thielscher C., 2005, Int. Patent, Patent No. [3(034294),A2, 3034294, 03034294]
   Van Blarkom GW., 2003, The handbook of privacy and privacy enhancing technologies: the case of intelligent software agents
   van Rossum H, 1995, TECHNICAL REPORT
   Viega J., 2002, BUILDING SECURE SOFT
   Wang W, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P323
   Westin A. F., 1967, PRIVACY FREEDOM
   Yao A. C., 1982, 23rd Annual Symposium on Foundations of Computer Science, P160, DOI 10.1109/SFCS.1982.38
NR 67
TC 39
Z9 40
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2013
VL 43
IS 7
SI SI
BP 769
EP 787
DI 10.1002/spe.1131
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 158TW
UT WOS:000319997100004
DA 2024-07-18
ER

PT J
AU Ehsan, N
   Faili, H
AF Ehsan, Nava
   Faili, Heshaam
TI Grammatical and context-sensitive error correction using a statistical
   machine translation framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE syntactic error; real-word error; grammar checker; statistical machine
   translation; Persian language
AB Producing electronic rather than paper documents has considerable benefits such as easier organizing and data management. Therefore, existence of automatic writing assistance tools such as spell and grammar checker/correctors can increase the quality of electronic texts by removing noise and correcting the erroneous sentences. Different kinds of errors in a text can be categorized into spelling, grammatical and real-word errors. In this article, we present a language-independent approach based on a statistical machine translation framework to develop a proofreading tool, which detects grammatical errors as well as context-sensitive spelling mistakes (real-word errors). A hybrid model for grammar checking is suggested by combining the mentioned approach with an existing rule-based grammar checker. Experimental results on both English and Persian languages indicate that the proposed statistical method and the rule-based grammar checker are complementary in detecting and correcting syntactic errors. The results of the hybrid grammar checker, applied to some English texts, show an improvement of about 24% with respect to the recall metric with almost similar value for precision. Experiments on real-world data set show that state-of-the-art results are achieved for grammar checking and context-sensitive spell checking for Persian language. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Ehsan, Nava; Faili, Heshaam] Univ Tehran, Sch Elect & Comp Engn, Coll Engn, Tehran, Iran.
C3 University of Tehran
RP Ehsan, N (corresponding author), Univ Tehran, Sch Elect & Comp Engn, Coll Engn, Tehran, Iran.
EM n.ehsan@ece.ut.ac.ir
RI Ehsan, Nava/GXA-1341-2022
CR [Anonymous], 2010, P 7 INT C LANG RES E
   [Anonymous], IEEE WORKSH AUT SPEE
   [Anonymous], 2000, P 12 NORD C COMP LIN
   [Anonymous], SPEECH LANGUAGE PROC
   [Anonymous], 2003, P CORPUS LINGUISTICS
   [Anonymous], P RANLP
   [Anonymous], P 4 GLOB WORDN C GWC
   [Anonymous], STAT MACH TRANSL SYS
   [Anonymous], P 3 WORKSH VER LARG
   [Anonymous], PALC 2007
   [Anonymous], THESIS TECHNISCHE FA
   [Anonymous], P WORKSH COMP APPR A
   [Anonymous], 2008, 6 INT C ED INF SYST
   [Anonymous], THESIS DEEMED U PATI
   [Anonymous], 2006, VERB CAPACITY FUNDAM
   [Anonymous], P N AM CHAPT ASS COM
   [Anonymous], 2010, 6 IEEE INT C NAT LAN
   [Anonymous], 2004, INT J COMPUTER INTER
   [Anonymous], COMPUTATIONAL LINGUI
   [Anonymous], THESIS U EDINBURGH
   [Anonymous], 2007, P 45 ANN M ASS COMPU
   [Anonymous], URBANA
   [Anonymous], 8 LANG RES EV C
   [Anonymous], COMPUTATIONAL LINGUI
   [Anonymous], P 16 C COMP LING
   [Anonymous], P NODALIDA
   [Anonymous], THESIS LONDON U BIRK
   [Anonymous], COMPUTATIONAL LINGUI
   [Anonymous], AUTOMATIC PERSIAN SP
   [Anonymous], IRANIAN LINGUISTIC J
   [Anonymous], P 6 IEEE INT C NAT L
   Brockett C, 2006, COLING/ACL 2006, VOLS 1 AND 2, PROCEEDINGS OF THE CONFERENCE, P249
   Brown P. F., 1993, Computational Linguistics, V19, P263
   Chodorow M., 2000, PROC 1 M N AM CHAPTE, P140
   DAMERAU FJ, 1964, COMMUN ACM, V7, P171, DOI 10.1145/363958.363994
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   Golding A., 1996, P 34 ANN M ASS COMPU, P71
   Golding AR, 1999, MACH LEARN, V34, P107, DOI 10.1023/A:1007545901558
   Jones Michael., 1997, Proceedings of the 5th Conference on Applied Natural Language Processing, P166
   KUKICH K, 1992, COMPUT SURV, V24, P377
   Leacock C., 2010, Synthesis Lectures on Human Language Technologies, V3, P1, DOI DOI 10.2200/S00275ED1V01Y201006HLT009
   Lee J, 2006, INTERSPEECH 2006 AND 9TH INTERNATIONAL CONFERENCE ON SPOKEN LANGUAGE PROCESSING, VOLS 1-5, P1978
   MAYS E, 1991, INFORM PROCESS MANAG, V27, P517, DOI 10.1016/0306-4573(91)90066-U
   Milkowski M, 2010, SOFTWARE PRACT EXPER, V40, P543, DOI 10.1002/spe.971
   Och FJ, 2003, COMPUT LINGUIST, V29, pc, DOI 10.1162/089120103321337421
   Shaalan KF, 2005, SOFTWARE PRACT EXPER, V35, P643, DOI 10.1002/spe.653
   Simard M., 2007, P WORKSH STAT MACH T, P203
   Stolcke A, 2002, INTERSPEECH, V2002, P2002
   Sun G., 2007, P ACL, P81
NR 49
TC 10
Z9 11
U1 0
U2 33
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2013
VL 43
IS 2
BP 187
EP 206
DI 10.1002/spe.2110
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 071SP
UT WOS:000313614800003
DA 2024-07-18
ER

PT J
AU Bergel, A
   Bañados, F
   Robbes, R
   Binder, W
AF Bergel, Alexandre
   Banados, Felipe
   Robbes, Romain
   Binder, Walter
TI Execution profiling blueprints
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Profiling; Visualization; Pharo
AB Although traditional approaches to code profiling help locate performance bottlenecks, they offer only limited support for removing these bottlenecks. The main reason is the lack of detailed visual runtime information to identify and eliminate computation redundancy. We provide three profiling blueprints that help identify and remove performance bottlenecks. The structural distribution blueprint graphically represents the CPU consumption share for each method and class of an application. The behavioral distribution blueprint depicts the distribution of CPU consumption along method invocations and hints at method candidates for caching optimizations. The behavioral evolution blueprint compares profiles of different versions of a software system and highlights performance-critical changes in the system. These three blueprints helped us to significantly optimize Mondrian, an open source visualization engine. Our implementation is freely available for the Pharo development environment and has been evaluated in a number of different scenarios. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Bergel, Alexandre; Banados, Felipe; Robbes, Romain] Univ Chile, Pleiad Lab, Comp Sci Dept DCC, Santiago, Chile.
   [Binder, Walter] Univ Lugano, Lugano, Switzerland.
C3 Universidad de Chile; Universita della Svizzera Italiana
RP Bergel, A (corresponding author), Univ Chile, Pleiad Lab, Comp Sci Dept DCC, Santiago, Chile.
EM abergel@dcc.uchile.cl
RI Bergel, Alexandre/I-1397-2013; Robbes, Romain/H-3771-2013
OI Bergel, Alexandre/0000-0001-8087-1903; Robbes,
   Romain/0000-0003-4569-6868; Binder, Walter/0000-0002-2477-2182
FU University of Chile [U-INICIA 11/06 VID 2011, U-INICIA 11/06]
FX We gratefully thank Max Leske for his feedback on our finding related to
   GitFS. This work has been partially funded by Program U-INICIA 11/06 VID
   2011, grant U-INICIA 11/06, University of Chile.
CR Ammons G, 1997, ACM SIGPLAN NOTICES, V32, P85, DOI 10.1145/258916.258924
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bergel A, 2010, LECT NOTES COMPUT SC, V6141, P291, DOI 10.1007/978-3-642-13953-6_16
   Bertin J., 1974, Graphische Semiologie: Diagramme, Netze, Karten
   Binder W, 2006, SOFTWARE PRACT EXPER, V36, P615, DOI 10.1002/spe.712
   Binder W, 2009, SOFTWARE PRACT EXPER, V39, P47, DOI 10.1002/spe.890
   Cornea B, 2011, PDP 11 19 INT EUR PA
   De Pauw W, 1998, LECT NOTES COMPUT SC, V1543, P541
   Deelen P, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P39, DOI 10.1109/VISSOF.2007.4290698
   DEPAUW W, 1993, SIGPLAN NOTICES, V28, P326, DOI 10.1145/167962.165919
   Dmitriev M., 2004, Software Engineering Notes, V29, P139, DOI 10.1145/974043.974067
   Ducasse S, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P309, DOI 10.1109/CSMR.2004.1281433
   Ducasse S, 2005, 3RD IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEEDINGS, P33
   Erdos K, 1998, PROG COMPREHEN, P98, DOI 10.1109/WPC.1998.693322
   Girba T, 2004, WOOR 2004 5 ECOOP WO
   Gîrba T, 2006, J SOFTW MAINT EVOL-R, V18, P207, DOI 10.1002/smr.325
   Greevy O., 2006, Proceedings of the 2006 ACM symposium on Software visualization, P47, DOI [10.1145/1148493.1148501, DOI 10.1145/1148493.1148501]
   HOLTEN D, 2007, VISSOFT 2007 4 IEEE, P47
   Holten D, 2006, IEEE T VIS COMPUT GR, V12, P741, DOI 10.1109/TVCG.2006.147
   Johnson B., 1991, Proceedings Visualization '91 (Cat. No.91CH3046-0), P284, DOI 10.1109/VISUAL.1991.175815
   Korel B, 1998, INFORM SOFTWARE TECH, V40, P647, DOI 10.1016/S0950-5849(98)00089-5
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Meyer M., 2006, Proceedings of the 2006 ACM symposium on Software visualization, P135, DOI DOI 10.1145/1148493.1148513
   Moret P, 2010, SOFTWARE PRACT EXPER, V40, P825, DOI 10.1002/spe.985
   Moret P, 2009, IEEE INT WORK VIS SO, P33, DOI 10.1109/VISSOF.2009.5336425
   Mostafa N., 2009, Proceedings of the 7th International Conference on Principles and Practice of Programming in Java, PPPJ'09, P162, DOI 10.1145/1596655.1596682
   Mytkowicz T, 2010, ACM SIGPLAN NOTICES, V45, P187, DOI 10.1145/1809028.1806618
   Nagarajan V, 2007, PROC IEEE INT CONF S, P384
   Reiss S.P., 2005, Proceedings of the 2005 ACM Symposium on Software Visualization, P115, DOI DOI 10.1145/1056018.1056034
   REISS SP, 2009, VIS SOFTW UND AN 200, P73, DOI DOI 10.1109/VISSOF.2009.5336418
   Röthlisberger D, 2009, INT C PROGRAM COMPRE, P253, DOI 10.1109/ICPC.2009.5090052
   Sevitsky G., 2001, Proceedings Technology of Object-Oriented Languages and Systems. TOOLS 38, P85, DOI 10.1109/TOOLS.2001.911758
   Stasko J, 2000, INT J HUM-COMPUT ST, V53, P663, DOI 10.1006/ijhc.2000.0420
   Tuduce I, 2010, P EX EV RES TECHN WO
   Weidendorfer J, 2004, LECT NOTES COMPUT SC, V3038, P440
   Yang Q, 2009, COMPUT J, V52, P589, DOI 10.1093/comjnl/bxm021
   Zhang Xiangyu., 2005, ESECFSE 13, P197
   Zhuang XT, 2008, INT SYM CODE GENER, P4
NR 39
TC 11
Z9 11
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2012
VL 42
IS 9
BP 1165
EP 1192
DI 10.1002/spe.1120
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 983FC
UT WOS:000307103100005
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Savidis, A
AF Savidis, Anthony
TI Integrated implementation of dynamic untyped object-based operator
   overloading
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE untyped object-based languages; operator overloading; first-class
   operators; language implementation
AB Operator overloading, a popular mechanism in the C++ language, is a form of ad hoc polymorphism on operator functions, allowing alternative implementations for different argument types. Classless languages with untyped objects are languages that lack classes and treat all objects as compliant to a common Object type. Languages in this category are flexible, dynamic, and easy-to-use, with popular examples being JavaScript, Lua, and ActionScript (the latter being hybrid by also offering classes). This paper presents an integrated implementation of untyped operator overloading which enable users to handle dynamically the full range of operators on objects. The focus is on features not supported by other languages, such as (i) arithmetic and relational operators allowing to separately handle caller lhs and rhs positions; (ii) an assignment operator with an untyped analogy of type casting; (iii) a slot access operator allowing user-defined policies for editing object slots; and (iv) a function-call operator to support functors. Operators are treated as first-class object slots, distinguished by reserved indices that match the respective operator lexemes. All reported techniques have been applied in implementing the operator overloading features of the Delta language. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Savidis, Anthony] Univ Crete, Inst Comp Sci, FORTH, Iraklion, Greece.
   [Savidis, Anthony] Univ Crete, Dept Comp Sci, Iraklion, Greece.
C3 University of Crete; University of Crete
RP Savidis, A (corresponding author), Univ Crete, Inst Comp Sci, FORTH, Iraklion, Greece.
EM as@ics.forth.gr
CR Agesen Ole, 2000, SELF 4 1 PROGRAMMERS
   [Anonymous], 2010, DELTA LANGUAGE
   [Anonymous], 1998, DYLAN LANGUAGE
   [Anonymous], 2009, PERL LANG
   [Anonymous], 2009, ACTIONSCRIPT LANG AD
   [Anonymous], 2009, PYTH LANG
   [Anonymous], 2009, ECMA SCRIPT 5 0 ECMA
   [Anonymous], 2000, The C++ Programming Language
   [Anonymous], 2000, Programming Perl
   [Anonymous], 1996, A Theory of Objects
   Apple Inc, 2009, OBJ C 2 0 PROGR LANG
   CHAMBERS C, 2004, CECIL LANGUAGE SPECI
   Eich B., 2005, ACM SIGPLAN INT C FU, P129
   Flanagan D.Y. Matsumoto., 2008, The Ruby Programming Language
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   GOODMAN D, 2001, JAVASCRIPT BIBLE
   Gosling J., 2005, Java Language Specification, Vthird
   Hejlsberg A., 2008, The C# Programming Language
   HOLZLE U, 1991, LECT NOTES COMPUT SC, V512, P21
   Ierusalimschy R., 2003, Programming in Lua
   Ierusalimschy R, 2007, ACM C HIST PROGR LAN, P1
   Lieberman H., 1986, ACM OOPSLA 86 P PORT, P214
   Piumarta I, 2008, LECT NOTES COMPUT SC, V5146, P1
   Savidis A, 2008, J OBJECT TECHNOL, V7, P101, DOI 10.5381/jot.2008.7.4.a2
   SMITH R, 1994, P 9 INT C OBJ OR PRO, P102
   Smith RB, 1995, LECT NOTES COMPUT SC, V952, P303
   Stein LA., 1987, ACM OOPSLA 87 P ORL, P138
   Taivalsaari A, 1996, ACM COMPUT SURV, V28, P438, DOI 10.1145/243439.243441
NR 29
TC 0
Z9 0
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2011
VL 41
IS 11
BP 1155
EP 1184
DI 10.1002/spe.1025
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827RZ
UT WOS:000295446900001
DA 2024-07-18
ER

PT J
AU Bendisposto, J
   Fritz, F
   Jastram, M
   Leuschel, M
   Weigelt, I
AF Bendisposto, Jens
   Fritz, Fabian
   Jastram, Michael
   Leuschel, Michael
   Weigelt, Ingo
TI Developing Camille, a text editor for Rodin
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE formal methods; Event-B; tools; Rodin
AB Initially, the Rodin platform for Event-B did away with a textual representation for models. In this paper, we explain why a textual representation was required after all and we present the semantic-aware text editor Camille for Rodin. We explain the design choices of Camille, such as splitting the syntax into two-levels for machine and formula syntax. We also describe the challenges, such as synchronizing the textual representation with the Rodin database, and how they were overcome using an EMF abstraction layer. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Bendisposto, Jens] Univ Dusseldorf, Lehrstuhl Softwaretech & Programmiersprachen, D-40225 Dusseldorf, Germany.
   [Fritz, Fabian] Westernacher & Partner, D-69168 Wiesloch, Germany.
C3 Heinrich Heine University Dusseldorf
RP Bendisposto, J (corresponding author), Univ Dusseldorf, Lehrstuhl Softwaretech & Programmiersprachen, Gebaude 25-12,Univ Str 1, D-40225 Dusseldorf, Germany.
EM bendisposto@cs.uni-duesseldorf.de
FU EU [214158]
FX This work was supported by EU FP7 (grant number 214158).
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial JR, 2006, LECT NOTES COMPUT SC, V4260, P588
   [Anonymous], THESIS MCGILL U MONT
   *ECL, ECL TEXT MOD FRAM
   *ECL, ECL PLATF
   *ECL, ECL MOD PROJ
   *ECL, ECL MOD FRAM
   *ECL FDN, ECL FDN TEXT MOD FRA
   LOESCH F, 2010, DEPLOY DELIVERABLE 1, P33
   METAYER C, 2005, RODIN DELIVERABLE 3
   Snook C, 2006, ACM T SOFTW ENG METH, V15, P92, DOI 10.1145/1125808.1125811
   SNOOK C, 2010, WORKSH TOOL BUILD FO, P45
   *SOURC, 2010, ROD PROJ SOURC, P16
   LEHR FORSCHUNGSEINHE
NR 14
TC 4
Z9 4
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2011
VL 41
IS 2
SI SI
BP 189
EP 198
DI 10.1002/spe.1016
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718FH
UT WOS:000287106000007
DA 2024-07-18
ER

PT J
AU Scanniello, G
   D'Amico, A
   D'Amico, C
   D'Amico, T
AF Scanniello, Giuseppe
   D'Amico, Anna
   D'Amico, Carmela
   D'Amico, Teodora
TI Architectural layer recovery for software system understanding and
   evolution
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software understanding; architecture recovery; link analysis; static
   analysis
ID SIMILARITY
AB This paper presents an approach to identify software layers for the understanding and evolution of software systems implemented with any object-oriented programming language. The approach first identifies relations between the classes of a software system and then uses a link analysis algorithm (i.e. the Kleinberg algorithm) to group them into layers. Additionally to assess the approach and the underlying techniques, the paper also presents a prototype of a supporting tool and the results from a case study. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Scanniello, Giuseppe; D'Amico, Anna; D'Amico, Carmela; D'Amico, Teodora] Univ Basilicata, Dipartimento Matemat & Informat, I-85100 Potenza, Italy.
C3 University of Basilicata
RP Scanniello, G (corresponding author), Univ Basilicata, Dipartimento Matemat & Informat, Viale Dell Ateneo, I-85100 Potenza, Italy.
EM giuseppe.scanniello@unibas.it
OI Scanniello, Giuseppe/0000-0003-0024-7508
CR Andreopoulos B, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P79
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], THESIS U STUTTGART
   [Anonymous], P 6 WORK C REV ENG
   Bittencourt RA, 2009, EUR CON SFTWR MTNCE, P251, DOI 10.1109/CSMR.2009.28
   Blondel VD, 2004, SIAM REV, V46, P647, DOI 10.1137/S0036144502415960
   Bowman I. T., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P555, DOI 10.1109/ICSE.1999.841045
   Champaign J, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P95, DOI 10.1109/IWPSE.2003.1231215
   Chatzigeorgiou A, 2004, PROC INT CONF SOFTW, P656, DOI 10.1109/ICSE.2004.1317487
   Chatzigeorgiou A., 2006, P INT WORKSH INT SOF, P29
   De Lucia A, 2009, J SYST SOFTWARE, V82, P1177, DOI 10.1016/j.jss.2009.02.012
   DOVAL D, 1999, P SOFTW TECHN ENG PR, P73
   Hassan AE, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P349, DOI 10.1109/ICSE.2002.1007981
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lague B, 1998, PROG COMPREHEN, P37, DOI 10.1109/WPC.1998.693281
   LEHMAN MM, 1984, INFORM PROCESS MANAG, V20, P19, DOI 10.1016/0306-4573(84)90037-2
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   Mahdavi K, 2003, PROC IEEE INT CONF S, P315, DOI 10.1109/ICSM.2003.1235437
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   MARTIN R, AGILE SOFTWARE DEV P, P262
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Muller H., 2000, Proceedings of the Future of Software Engineering, P47, DOI [10.1145/336512.336526, DOI 10.1145/336512.336526]
   Muller H. A., 1993, Journal of Software Maintenance: Research and Practice, V5, P181, DOI 10.1002/smr.4360050402
   Myers CR, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.046116
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   SCANNIELLO G, 2010, P 25 ANN INT S APPL, P1853
   SOUZA R, 2010, P 14 IEEE C SOFTW MA, P245
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Tzerpos V, 2000, PROG COMPREHEN, P211, DOI 10.1109/WPC.2000.852495
   Tzerpos V., 1999, MOJO DISTANCE METRIC, P187
   Wen ZH, 2003, PROG COMPREHEN, P227
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   Zelkowitz M., 1979, Principles of Software Engineering and Design"
NR 36
TC 16
Z9 17
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2010
VL 40
IS 10
BP 897
EP 916
DI 10.1002/spe.988
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 644EE
UT WOS:000281355100004
OA Green Published
DA 2024-07-18
ER

PT J
AU Karakoidas, V
   Spinellis, D
AF Karakoidas, Vassilios
   Spinellis, Diomidis
TI FIRE/J - optimizing regular expression searches with generative
   programming
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE regular expressions; just-in time (JIT); Java; Java virtual machine
   (JVM); automata; domain-specific languages (DSL); generative programming
ID TEXT; COMPILER
AB Regular expressions are a powerful tool for analyzing and manipulating text. Their theoretical background lies within automata theory and formal languages. The FIRE/J (fast implementation of regular expressions for Java) regular expression library is designed to provide maximum execution speed while remaining portable across different machine architectures. To achieve that, FIRE/J transforms each regular expression into a tailor-made class file, which is compiled directly to Java virtual machine (JVM) bytecodes. The library is compatible with the POSIX standard. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Karakoidas, Vassilios; Spinellis, Diomidis] Athens Univ Econ & Business, Dept Management Sci & Technol, GR-10434 Athens, Greece.
C3 Athens University of Economics & Business
RP Karakoidas, V (corresponding author), Athens Univ Econ & Business, Dept Management Sci & Technol, Patission Ave 74, GR-10434 Athens, Greece.
EM bkarak@aueb.gr
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897
CR AHO AV, 1975, COMMUN ACM, V18, P333, DOI 10.1145/360825.360855
   [Anonymous], ANN MATH STUDIES
   [Anonymous], 2000, Programming Perl
   [Anonymous], 1961, Surveys, DOI [10.1070/RM1961v016n05ABEH004112, DOI 10.1070/RM1961V016N05ABEH004112]
   [Anonymous], 1985, Compilers principles, techniques, and tools
   [Anonymous], 1975, 39 BELL LAB
   Aycock J, 2003, ACM COMPUT SURV, V35, P97, DOI 10.1145/857076.857077
   BAEZAYATES R, 1992, COMMUN ACM, V35, P74, DOI 10.1145/135239.135243
   BOTHNER P, 1998, P USENIX TECHN C FRE
   BRZOZOWSKI JA, 1964, J ACM, V11, P481, DOI 10.1145/321239.321249
   Cattell RGG, 2004, ACM SIGPLAN NOTICES, V39, P1, DOI 10.1145/989393.989395
   CHOMSKY N, 1956, IRE T INFORM THEOR, V2, P113
   Clarke CLA, 1997, ACM T PROGR LANG SYS, V19, P413, DOI 10.1145/256167.256174
   EHRENFEUCHT A, 1974, STOC74 P 6 ANN ACM S, P75
   EISENBERG A, 2003, SQL 1999 FORMERLY KN
   FLOYD RW, 1982, J ACM, V29, P603, DOI 10.1145/322326.322327
   Friedl JEF, 2002, MASTERING REGULAR EX
   Frigo M, 2004, ACM SIGPLAN NOTICES, V39, P642, DOI 10.1145/989393.989457
   Gamma Erich., 1994, DESIGN PATTERNS
   HAMILTON E, 1988, COMMUN ACM, V31, P1376
   HAZEL P, 2006, PERL COMPATIBLE REGU
   Hume A, 1988, P EUUG SPRING 88 C B, P237
   JOHNSON SC, 1987, BELL SYST TECH J, V56, P2155
   LEISS E, 1980, ACM SIGACT NEWS, V12, P81
   LOCKE J, 2004, JAKARTA REGEXP
   MCCONELL S, 2006, CODE COMPLETE
   McCulloch W.S., 1943, B MATH BIOPHYS, V5, P115, DOI 10.1007/BF02478259
   MOELLER A, 2003, AUTOMATION LIB GENER
   *MONO COMM, 2005, MONO PROJ
   Navarro G., 2003, Journal of Discrete Algorithms, V1, P423, DOI 10.1016/S1570-8667(03)00036-4
   Navarro G, 2005, ALGORITHMICA, V41, P89, DOI 10.1007/s00453-004-1120-3
   Navarro G, 2001, SOFTWARE PRACT EXPER, V31, P1265, DOI 10.1002/spe.411
   SAVARESE D, 2004, JAKARTA ORO
   Schultz UP, 2003, ACM T PROGR LANG SYS, V25, P452, DOI 10.1145/778559.778561
   *SENS NETW, 2004, NOD C SER CONT CLASS
   Shirazi J., 2003, JAVA PERFORMANCE TUN, V2nd
   SPENCER H, 2007, REGEX HENRY SPENCERS
   Spinellis D, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/307903.307921
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   STOLZE K, 2003, BRINGING POWER REGUL
   THOMPSON K, 1968, COMMUN ACM, V11, P419, DOI 10.1145/363347.363387
   *UN TECHN COMM, 2004, UN TECHN STAND UN RE
   WATSON BW, 1994, 9422 EINDH U TECHN F
   WENTWORTH EP, 1993, SIGPLAN NOTICES, V28, P49, DOI 10.1145/152819.152825
   WU S, 1992, COMMUN ACM, V35, P83, DOI 10.1145/135239.135244
   ZLATANOV T, 2004, PERL 6 GRAMMARS REGU
   2003, SINGLE UNIX SPECIFIC
   2003, J2SDK REGULAR EXPRES
   2001, REGULAR EXPRESSIONS
NR 49
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2008
VL 38
IS 6
BP 557
EP 573
DI 10.1002/spe.841
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 298ZR
UT WOS:000255726100001
DA 2024-07-18
ER

PT J
AU Chimaris, AN
   Papadopoulos, GA
AF Chimaris, Avraam N.
   Papadopoulos, George A.
TI Implementing a generic component-based framework for telecontrol
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE telecontrol systems; distributed control system (DCS); supervisory
   control and data acquisition system (SCADA); component-based systems;
   reusable software components; patterns and frameworks
ID SOAP
AB The rapid growth of telecontrol systems is one of the major trends in today's network-oriented community. The implementation of generic frameworks, consisting of reusable components that can form the basis for the development of such systems, is a necessity. There is a plethora of associated applications that can be developed in a distributed environment, such as audio/video teleconferencing, groupware and collaborative computing environments, remote controlled services, etc. In this paper we design and implement a generic framework of components that can be used for the realization of telecontrol applications. This category of applications focuses primarily on the issues of managing distributed units on remote end-systems. Such applications contain remote units and administrators that are connected and exchange data and control messages. We analyse the outlined architecture of our framework and the most important system operations. We also describe the communication protocol used in message exchanges between the constituent components. Finally, we illustrate the usefulness of our framework by presenting two applications that were created by extending the basic software infrastructure. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 Univ Cyprus, Dept Comp Sci, CY-1678 Nicosia, Cyprus.
C3 University of Cyprus
RP Papadopoulos, GA (corresponding author), Univ Cyprus, Dept Comp Sci, 75 Kallipoleos St,POB 20537, CY-1678 Nicosia, Cyprus.
EM george@cs.ucy.ac.cy
RI Papadopoulos, George Angelos/ABA-3162-2021; Papadopoulos, George
   Angelos/JCO-4266-2023; Papadopoulos, George Angelos/ISU-5890-2023
OI Papadopoulos, George Angelos/0000-0001-9250-4916
CR AARSTEN A, COMMUNICATIONS ACM, V39, P50
   BAUER T, 2001, 2 INT WORKSH INFR AG, P61
   BOOCH B, 1999, UNIFIED MODELING LAN
   BRANDLEY NA, 2004, P WORKSH ADV CONT MO
   Brown T., 2001, P IEEE AIAA 20 DIG A, V2, P1
   Bruneton E, 2001, SOFTWARE PRACT EXPER, V31, P1237, DOI 10.1002/spe.412
   CABRI G, 2000, ACM S APPL COMP SAC, V1, P181
   CANELLA S, 2001, P 8 INT C ACC LARG E, P493
   CAPOBIANCHI R, 2000, ACM COMPUTING SURVEY, V32
   CHILNGARIAN S, 2004, P 2 WORKSH INF TECHN
   CIANCARINI P, 2002, P ACM SIGAPP S APPL, P336
   Davis A, 2005, J SYST SOFTWARE, V76, P157, DOI 10.1016/j.jss.2004.05.002
   DELUCENA VF, 2002, THESIS U STUTTGART
   DYLIACCO TE, 1999, P EPRI 2 EUR C EMS B, P1
   EDWARDS K, 1999, SUN MICROSYSTEMS PRE
   Erickson T., 2006, Designing Interactive Systems. DIS2006, P331
   Fernandez JA, 1998, IEEE INT CONF ROBOT, P524, DOI 10.1109/ROBOT.1998.677027
   FUENTES L, 2000, ACM COMPUTING SURVEY, V32
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   HALSALL F, 1996, COMPUTER NETWORKS OP
   HARINATH R, 2000, ACM COMPUTING SURVEY, V32
   Heck BS, 2003, IEEE CONTR SYST MAG, V23, P21, DOI 10.1109/MCS.2003.1172827
   HOLLOWAY FW, 1999, UCRLID133254
   Kapsalis V, 2003, IEEE IND ELEC, P866, DOI 10.1109/IECON.2003.1280096
   Kastner W, 2005, P IEEE, V93, P1178, DOI 10.1109/JPROC.2005.849726
   KUO YH, 2004, P 2004 AUSTR C ROB A, P1964
   Lee C, 2002, LECT NOTES COMPUT SC, V2402, P195
   Lee SM, 2004, 2004 2ND IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL INFORMATICS, P33, DOI 10.1109/INDIN.2004.1417298
   LEE W, 2001, T CONTROL AUTOMATION, V3, P190
   LEWIS R, 2000, MODELLING CONTROL SY
   LOWE W, 2002, P APPL INF 2002 INNS, P125
   LUTZ P, 1997, P EUR C INT MAN DRES, P247
   ORFALI R, 1998, INSTANT CORBA
   Paal S, 2003, LECT NOTES COMPUT SC, V2888, P1292
   POWER R, 2004, P WORKSH APPLY AD HY, P499
   Preuveneers D, 2004, LECT NOTES COMPUT SC, V3295, P148
   Raatikainen K., 2001, P IEEE INT C 3G WIR, P722
   Sanz R., 2001, Annual Reviews in Control, V25, P169, DOI 10.1016/S1367-5788(01)00016-5
   Sashima A, 2002, PROCEEDINGS OF THE 6TH JOINT CONFERENCE ON INFORMATION SCIENCES, P1085
   Speck A., 2000, Proceedings Seventh IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ECBS 2000), P176, DOI 10.1109/ECBS.2000.839875
   SZYPERSKI C, 2002, COMPONENT SOFTWARE
   SZYPERSKI C, 1998, SOFTWARE OBJECT ORIE
   TOMMILA T, 2001, AUTOMATION TECHNOLOG, P34
   TRAUB A, 1999, P IEEE INT C ROB AUT, V4, P3115
   *W3C, 2004, EXT MARK LANG XML
   *W3C, 2004, TRANSF XSLT
   *W3C, 2004, HTTP HYP TRANSF PROT
   WILLS L, 2000, P 19 DIG AV SYST C D
   Younis MF, 2004, J SYST ARCHITECT, V50, P649, DOI 10.1016/j.sysarc.20O4.02.005
NR 49
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2007
VL 37
IS 10
BP 1087
EP 1132
DI 10.1002/spe.800
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 198JW
UT WOS:000248625400004
DA 2024-07-18
ER

PT J
AU Chang, TK
   Hwang, GH
AF Chang, TK
   Hwang, GH
TI To secure XML documents with the extension function of XSLT
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XML; security; DSL; XSLT
AB XSLT is a very popular and flexible language for transforming XML documents which provides a powerful implementation of a tree-oriented transformation language for transmuting instances of XML using a single vocabulary into a desired output. In this paper, we propose a processing model that enables the XSLT processor to encrypt and decrypt XML documents. The details of the implementation are presented. Our model supports a more general encryption scope than previous models. The implementation and experimental results demonstrate the practicality of the proposed model. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Natl Taiwan Normal Univ, Dept Informat & Comp Educ, Taipei 106, Taiwan.
C3 National Taiwan Normal University
RP Hwang, GH (corresponding author), Natl Taiwan Normal Univ, Dept Informat & Comp Educ, 162 Hoping E Rd,Sec 1, Taipei 106, Taiwan.
EM ghhwang@ice.ntnu.edu.tw
CR *ALPHAWORKS, 2002, XML PARS JAV
   [Anonymous], 2000, EXTENSIBLE MARKUP LA
   *AP SOFTW FDN, 2002, XAL JAV
   BARTLETT RG, 2003, P 36 ANN HAW INT C S, P122
   BRANDT P, TOWARDS SECURE XML
   Chang TK, 2004, 18TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOL 1 (LONG PAPERS), PROCEEDINGS, P556
   Chang TK, 2003, IC'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INTERNET COMPUTING, VOLS 1 AND 2, P455
   Clark J., 1999, XML Path Language (XPath) Version 1.0
   Clark James, 1999, Xsl transformations (xslt)
   Fischer CharlesN., 1991, CRAFTING COMPILER C
   Hwang GH, 2004, COMPUT SECUR, V23, P498, DOI 10.1016/j.cose.2004.03.003
   Hwang GH, 2001, IC'2001: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INTERNET COMPUTING, VOLS I AND II, P393
   HWANG GH, 2002, P INT C INT COMP LAS, P348
   HWANG GH, DOCUMENT SECURITY LA
   Imamura Takeshi., 2002, XML Encryption Syntax and Processing
   KAY M, 2004, IN PRESS XSL TRANSFO
   MARUYAMA H, 2000, ELEMENT WISE XML ENC
   *NAT I STAND TECHN, 1993, PUB NAT I STAND TECH, V462
   REAGLE J, 2001, IN PRESS XML ENCRYPT
   RIVEST RL, 1978, COMMUN ACM, V21, P120, DOI [10.1145/359340.359342, 10.1145/357980.358017]
   ROSARIO R, SECURE XML OVERVIEW
   Schneier B, APPL CRYPTOGRAPHY PR, V20th
   SIMON E, 2001, XML ENCRYPTION ISSUE
   TIDWELL D, EXTENDING XSLT ENCRY
   CRYPTIX JCE PROVIDER
   XSLTC COMPILER XSLT
   XML ENCRYPTION WG
   XT IMPLEMENTATION JA
NR 28
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2006
VL 36
IS 5
BP 539
EP 555
DI 10.1002/spe.710
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 040WB
UT WOS:000237410500006
DA 2024-07-18
ER

PT J
AU Shalaby, N
   Bavier, A
   Gottlieb, Y
   Karlin, S
   Peterson, L
   Qie, XH
   Spalink, T
   Wawrzoniak, M
AF Shalaby, N
   Bavier, A
   Gottlieb, Y
   Karlin, S
   Peterson, L
   Qie, XH
   Spalink, T
   Wawrzoniak, M
TI Building extensible routers using network processors
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE extensible router design; network processors; resource allocation; CPU
   scheduling; hierarchical router architecture; Intel IXP 1200
AB This paper describes our effort to build extensible routers using a combination of general-purpose and network processors. We emphasize five overriding challenges that dictate our design decisions: (1) optimal resource allocation; (2) efficient but flexible scheduling of the CPU; (3) maintaining overall router robustness; (4) maximizing router performance; and (5) providing sufficient extensibility to enable the injection of new functionality into the router. We adopt a hierarchical architecture, in which packet flows traverse a range of processing/forwarding paths, thereby partitioning hardware and software in concert. This paper both presents the architecture, and describes our experiences implementing the architecture and addressing the five design challenges in a prototype built from Intel IXP 1200 and a Pentium. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Princeton Univ, Dept Comp Sci, Princeton, NJ 08544 USA.
C3 Princeton University
RP Princeton Univ, Dept Comp Sci, Princeton, NJ 08544 USA.
EM nadia@ias.edu
CR Alexander D.S., 1997, Proc. of ACM SIGCOMM'97, P101, DOI DOI 10.1145/263105.263149
   *ALT WEBS INC, 1999, ACENIC SERV OPT 10 1
   *AN NODEOS WORK GR, 2002, NOD OS INT SPEC
   [Anonymous], P ACM SIGCOMM
   Antony I., 2001, LECT NOTES COMPUTER, P329, DOI DOI 10.1007/3-540-45518-3_18
   Baker F, 1995, 1812 RFC
   BAVIER A, 2002, TR2002009 DEP INF TE
   BENNETT JCR, 1996, P ACM SIGCOMM 96, P143
   Braden R, 2002, DARPA ACTIVE NETWORKS CONFERENCE AND EXPOSITION, PROCEEDINGS, P238, DOI 10.1109/DANCE.2002.1003497
   Calvert K. L., 1999, ARCHITECTURAL FRAMEW
   CAMPBELL AT, 2001, 9A U PROGRAM WORKSHO
   DASEN M, 1996, P ACTS MOB SUMM 96 G, P762
   Davie B.S., 2000, MPLS: Technology and Applications
   Decasper D, 2000, IEEE ACM T NETWORK, V8, P2, DOI 10.1109/90.836474
   DEGERMARK M, 1998, P ACM SIGCOMM 97 C O, P3
   Gottlieb Y, 2002, 2002 IEEE OPEN ARCHITECTURES AND NETWORK PROGRAMMING PROCEEDINGS, P51, DOI 10.1109/OPNARC.2002.1019228
   HICKS M, 1998, P 3 ACM SIGPLAN INT, P86
   *IBM MICR DIV, 2001, IBM POW NP NP4GS3 NE
   *IEEE, 2000, 8023 IEEE
   *INF BAND SM TRAD, 2000, ARCH SPEC REL 1 0
   *INT CORP, 2000, IXP12EB INT IXP 1200
   *INT I O I2 O SPEC, 1999, INT I O I2 O ARCH SP
   Karlin S, 2002, COMPUT NETW, V38, P277, DOI 10.1016/S1389-1286(01)00288-2
   KARLIN SC, 2003, THESIS PRINCETON U P
   Kohler E, 2000, ACM T COMPUT SYST, V18, P263, DOI 10.1145/354871.354874
   Kounavis ME, 2001, IEEE J SEL AREA COMM, V19, P511, DOI 10.1109/49.917711
   KUHNS F, 2002, P DARPA ACT NETW C E
   LAKSHMAN TV, 1998, P ACM SIGCOMM, P203
   Lauer H. C., 1979, Operating Systems Review, V13, P3, DOI 10.1145/850657.850658
   Maltz DA, 1999, J HIGH SPEED NETW, V8, P225
   Mogul JC, 1997, ACM T COMPUT SYST, V15, P217, DOI 10.1145/263326.263335
   Mosberger D, 1996, PROCEEDINGS OF THE SECOND SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '96), P153, DOI 10.1145/248155.238771
   PETERSON L, 2002, P 1 ACM WORKSH HOT T
   PETERSON LL, 1999, P 7 WORKSH HOT TOP O
   Pradhan P., 1999, Proceedings of the Seventh Workshop on Hot Topics in Operating Systems, P76, DOI 10.1109/HOTOS.1999.798381
   QIE X, 2001, P ACM SIGMETRICS 200, P13
   Rowstron A., 2001, Operating Systems Review, V35, P188, DOI 10.1145/502059.502053
   Rowstron A., 2001, Networked Group Communication. Third International COST264 Workshop, NGC 2001. Proceedings (Lecture Notes in Computer Science Vol.2233), P30
   SHALABY N, 2002, P 4 ANN INT WORK C A, P1
   Smith JM, 1999, COMPUTER, V32, P32, DOI 10.1109/2.755003
   SPALINK T, 2001, P 18 ACM S OP SYST P, P216
   Spatscheck O, 2000, IEEE ACM T NETWORK, V8, P146, DOI 10.1109/90.842138
   Srinivasan V, 1999, ACM T COMPUT SYST, V17, P1, DOI 10.1145/296502.296503
   Srinivasan V., 1998, P IEEEACM SIGCOMM, P191
   Stiller B, 1999, IEEE J SEL AREA COMM, V17, P1580, DOI 10.1109/49.790483
   TENNEHOUSE D, 1996, MULTIMEDIA COMPUTING
   *VIT SEM CORP, 2000, IQ2000 NETW PROC PRO
   Waldvogel Marcel., 1997, Proceedings of the ACM SIGCOMM '97 Conference on Applications, Technologies, Architectures, and Protocols for Computer Communication, SIGCOMM '97, P25
   WAWRZONIAK M, 2002, TR64202 PRINC U DEP
   Wetherall D, 1999, OPERATING SYSTEMS REVIEW, VOL 33, NO 5, DECEMBER 1999, P64, DOI 10.1145/319344.319156
   Xu W, 2003, IEEE NETWORK, V17, P40, DOI 10.1109/MNET.2003.1220695
NR 51
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2005
VL 35
IS 12
BP 1155
EP 1194
DI 10.1002/spe.667
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 971NZ
UT WOS:000232392500003
DA 2024-07-18
ER

PT J
AU Kon, F
   Marques, JR
   Yamane, T
   Campbell, RH
   Mickunas, MD
AF Kon, F
   Marques, JR
   Yamane, T
   Campbell, RH
   Mickunas, MD
TI Design, implementation, and performance of an automatic configuration
   service for distributed component systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automatic configuration; dynamic configuration; component-based systems;
   CORBA
ID DYNAMIC CONFIGURATION
AB Component technology promotes code reuse by enabling the construction of complex applications by assembling off-the-shelf components. However, components depend on certain characteristics of the environment in which they execute. They depend on other software components and on hardware resources. In existing component architectures, the application developer is left with the task of resolving those dependencies, i.e. making sure that each component has access to all the resources it needs and that all the required components are loaded. Nevertheless, according to encapsulation principles, developers should not be aware of the component internals. Thus, it may be difficult to find out what a component really needs. In complex systems, such as the ones found in modern distributed environments, this manual approach to dependency management can lead to disastrous results. Current systems rely heavily on manual configuration by users and system administrators. This is tolerable now, when users have to manage a few computers. But, in the near future, people will have to deal with thousands of computing devices and it will no longer be acceptable to require the user to configure each of them. This paper presents the results of our 6 year research (from 1998 to 2003) in the area of automatic configuration, describing an integrated architecture for managing dependencies in distributed component-based systems. The architecture supports automatic configuration and dynamic resource management in distributed heterogeneous environments. We describe a concrete implementation of this architecture, present experimental results, and compare our approach to other works in the area. Copyright (C) 2005 John Wiley & Sons, Ltd.
C1 Univ Sao Paulo, Dept Comp Sci, Sao Paulo, Brazil.
   Mitsubishi Elect, Energy & Publ Infrastruct Syst Ctr, Tokyo, Japan.
   Univ Illinois, Dept Comp Sci, Urbana, IL 61801 USA.
C3 Universidade de Sao Paulo; University of Illinois System; University of
   Illinois Urbana-Champaign
RP Univ Sao Paulo, Dept Comp Sci, Sao Paulo, Brazil.
EM kon@ime.usp.br
RI Kon, Fabio/H-2743-2012; Campbell, Roy/O-1141-2019
OI Kon, Fabio/0000-0003-3888-7340; Campbell, Roy/0000-0002-3754-7777
CR [Anonymous], 1999, GRID BLUEPRINT NEW C
   Arnold K., 1999, JINI SPECIFICATION
   Barr M, 2003, PROC IEEE INT CONF S, P129, DOI 10.1109/ICSM.2003.1235414
   CAMPBELL RH, 2002, GAIA ACT SPAC UB COM
   Carvalho D, 2000, SEVENTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P479, DOI 10.1109/ICPADS.2000.857732
   CONNOLLY D, 2001, ANNOTATED DAML OIL O
   DASILVEIRA GE, 2000, P 33 INT C TECHN OBJ
   *DEB PROJ, 2000, DEB LIN OP SYST
   *DMTF, 2003, DSP0005 DMTF
   DMTF, 2003, DISTR MAN TASK FORC
   *DMTF, 2003, DSP0140 DMTF
   *DMTF, 2003, DSP0150 DMTF
   Fleury M, 2003, LECT NOTES COMPUT SC, V2672, P344
   Foster I, 1998, SEVENTH HETEROGENEOUS COMPUTING WORKSHOP (HCW '98), P4, DOI 10.1109/HCW.1998.666541
   Frolund S, 1999, PROCEEDINGS OF THE FIFTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS '99), P69
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   *GLOB PROJ, 2000, GLOB RES SPEC LANG R
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Hall R. S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P174, DOI 10.1109/ICSE.1999.841007
   Hall R. S., 1999, THESIS U COLORADO BO
   Horrocks I, 1998, LECT NOTES ARTIF INT, V1397, P307
   *IONA TECHN, 2000, ORB 2000
   KEIZER G, 2002, MAKE DATE WINDOWS UP
   Kon F, 2002, COMMUN ACM, V45, P33, DOI 10.1145/508448.508470
   Kon F, 2001, 6TH USENIX CONFERENCE OF OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS 01), P15
   Kon F, 1999, PROCEEDINGS OF THE FIFTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS '99), P175
   Kon F, 2001, COMPUT COMMUN, V24, P105, DOI 10.1016/S0140-3664(00)00293-0
   Kon F, 2000, LECT NOTES COMPUT SC, V1795, P121
   Kon F, 2000, NINTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P201, DOI 10.1109/HPDC.2000.868651
   KON F, 2000, P IEEE JOINT S AG SY, P86
   Li BC, 2000, LECT NOTES COMPUT SC, V1795, P256
   LINDFORS J, 2002, JMX MANAGING J2EE JA
   LOYALL JP, 1998, P 4 WORKSH LANG COMP
   MACKENZIE D, 1998, AUTOCONF CREATING AU
   Magee J., 1995, P 5 EUROPEAN SOFTWAR, P137
   Milojicic D, 1999, IEEE CONCURR, V7, P12, DOI 10.1109/MCC.1999.749132
   Monson-Haefel R., 2004, ENTERPRISE JAVABEANS, V4th
   Nahrstedt K, 1998, J HIGH SPEED NETW, V7, P229
   NAHRSTEDT K, 2000, P IEEE IFIP INT WORK
   Noy NF, 2001, IEEE INTELL SYST APP, V16, P60, DOI 10.1109/5254.920601
   *OMG, 1999, ORBOS990701 OMG
   *OMG, 1998, 981209 OMG
   *OMG, 2001, PTC011108 OMG
   OREIZY P, 1998, P 4 INT C CONF DISTR
   ORYAN C, 2000, P IFIP ACM INT C DIS
   PATTERSON RH, 1995, SOSP, P79
   PURTILO J, 1998, 4 INT C CONF DISTR S
   PURTILO JM, 1994, ACM T PROGR LANG SYS, V16, P151, DOI 10.1145/174625.174629
   Roman M., 2002, IEEE Pervasive Computing, V1, P74, DOI 10.1109/MPRV.2002.1158281
   Roman M, 2001, IEEE DISTRIBUTED SYS, V2
   *SAL CONS, 2002, SAL
   Sarkar P, 1996, P 2 USENIX S OP SYST
   Schmidt DC, 1999, IEEE COMMUN MAG, V37, P54, DOI 10.1109/35.755450
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Shaw M., 1996, P 3 INT C CONF DISTR
   SILVA FJD, 2003, MIDDL 2003 COMP P WO, P110
   Silva FJDE, 2003, LECT NOTES COMPUT SC, V2888, P1275
   *SUN MICR, 2003, JAV NAM DIR INT
   *SUN MICR, 2002, PERS JAV APPL ENV
   *SUN MICR, 2002, JAV WEB START
   Thomas A., 1998, ENTERPRISE JAVABEANS
   VISWANATHAN AK, 2000, THESIS U ILLINOIS UR
   WATANABE HY, 2003, THESIS U SAO PAULO
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   WICHADAKUL D, 2001, LECT NOTES COMPUTER, V2218, P373
   YAMANE T, 2000, THESIS U ILLINOIS UR
   [No title captured]
NR 67
TC 10
Z9 10
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2005
VL 35
IS 7
BP 667
EP 703
DI 10.1002/spe.654
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 931VF
UT WOS:000229512900003
DA 2024-07-18
ER

PT J
AU van Deursen, A
   Visser, J
AF van Deursen, A
   Visser, J
TI Source model analysis using the JJTraveler visitor combinator framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE program analysis; program comprehension; visitor design pattern;
   software visualization
AB Program understanding tools manipulate program representations, such as abstract syntax trees, control-flow graphs, or data-flow graphs. This paper deals with the use of visitor combinators to conduct such manipulations. Visitor combinators are an extension of the well-known visitor design pattern. They are small, reusable classes that carry out specific visiting steps. They can be composed in different constellations to build more complex visitors. We evaluate the expressiveness, reusability, ease of development, and applicability of visitor combinators to the construction of program understanding tools. To that end, we conduct a case study in the use of visitor combinators for control-flow analysis and visualization as used in a commercial Cobol program understanding tool. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 CWI, NL-1090 GB Amsterdam, Netherlands.
   Delft Univ Technol, Fac Elect Engn Math & Comp Sci, Software Evolut Res Lab, NL-2628 CD Delft, Netherlands.
   Univ Minho, Dept Informat, P-4710057 Braga, Portugal.
C3 Delft University of Technology; Universidade do Minho
RP CWI, POB 94079, NL-1090 GB Amsterdam, Netherlands.
EM Arie.van.Deursen@cwi.nl
RI Visser, Joost/AAD-9423-2019; van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312; Visser, Joost/0000-0003-0158-3095
CR Beck K, 1998, JAVA REP, V3, P37
   Bowman I. T., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P555, DOI 10.1109/ICSE.1999.841045
   BULL RI, 2002, P 9 WORKD C REF ENG
   Favre JM, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P251, DOI 10.1109/CSMR.2002.995812
   FIELDHOUSE J.D., 1999, PROPOSAL PREDICT NOI, P1
   GAGNON EM, 1998, TOOLS US 98
   Gamma Erich., 1994, DESIGN PATTERNS
   GANSNER ER, 1993, IEEE T SOFTWARE ENG, V19, P214, DOI 10.1109/32.221135
   Holt RC, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P210, DOI 10.1109/WCRE.1998.723191
   Hudak P, 2003, LECT NOTES COMPUT SC, V2638, P159
   HUGHES J, 1995, ADV FUNCTIONAL PROGR, V925
   Hutton G, 1998, J FUNCT PROGRAM, V8, P437, DOI [10.1017/S0956796898003050, DOI 10.1017/S0956796898003050]
   Kuipers T, 2003, SCI COMPUT PROGRAM, V47, P59, DOI 10.1016/S0167-6423(02)00108-9
   Kullbach B, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P42, DOI 10.1109/CSMR.1999.756681
   LAMMEL R, 2002, LNCS, V2257, P137
   LAMMEL R, 2003, P ASP OR SOFTW DEV A
   LAMMEL R, 2003, LECT NOTES COMPUTER, V2562
   LIEBERHERR KL, 1997, NUCCS9715
   MARKOSIAN L, 1994, COMMUN ACM, V37, P58, DOI 10.1145/175290.175297
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Murphy G.C., 1995, Proceedings of the 3rd ACM SIGSOFT symposium on Foundations of software engineering, P18
   OVLINGER J, 1999, P 1999 ACM SIGPLAN C, P70
   Palsberg J, 1998, P INT COMP SOFTW APP, P9, DOI 10.1109/CMPSAC.1998.716629
   Reps T, 1998, INFORM SOFTWARE TECH, V40, P701, DOI 10.1016/S0950-5849(98)00093-7
   STEPANOV AA, 1994, X3J16940095 HEWL PAC
   SWIERSTRA D, 1998, LECT NOTES COMPUTER, V1608, P150
   THIEMANN P, 2002, LECT NOTES COMPUTER, V2257, P192
   Van Deursen A., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P40, DOI 10.1109/ICSM.1999.792497
   van Deursen A, 1998, PROG COMPREHEN, P90, DOI 10.1109/WPC.1998.693319
   VANDENBRAND MGJ, 2002, LECT NOTES COMPUTER, V2304
   VANDENBRAND MGJ, 2001, SENR0121
   VANDENBRAND MGJ, 2000, SCI COMPUTER PROGRAM, V36
   Visser E, 1999, ACM SIGPLAN NOTICES, V34, P13, DOI 10.1145/291251.289425
   Visser J, 2001, ACM SIGPLAN NOTICES, V36, P270, DOI 10.1145/504311.504302
   Vlissides J, 1999, C++ REP, V11, P40
   Wadler P, 1997, ACM COMPUT SURV, V29, P240, DOI 10.1145/262009.262011
   Wallace M, 1999, ACM SIGPLAN NOTICES, V34, P148, DOI 10.1145/317765.317794
   WATSON AH, 1996, 500235 NIST COMP SYS
   WONG K, 1995, IEEE SOFTWARE, V12, P46, DOI 10.1109/52.363166
NR 39
TC 4
Z9 4
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2004
VL 34
IS 14
BP 1345
EP 1379
DI 10.1002/spe.616
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 869QG
UT WOS:000224998500002
DA 2024-07-18
ER

PT J
AU Eichelberger, H
   von Gudenberg, RW
AF Eichelberger, H
   von Gudenberg, RW
TI Object-oriented processing of Java source code
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; object-oriented source code processing and transformation; Java
   optimization
AB Code transformation and analysis tools provide support for software engineering tasks such as style checking, testing, calculating software metrics as well as reverse- and re-engineering. In this paper we describe the architecture and the applications of JTransform, a general Java source code processing and transformation framework. It consists of a Java parser generating a configurable parse tree and various visitors (transformers, tree evaluators) which produce different kinds of outputs. While our framework is written in Java, the paper further opens an opportunity for a new generation of XML-based source code tools. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Lehrstuhl Informat 2, Inst Informat, D-97074 Wurzburg, Germany.
RP Lehrstuhl Informat 2, Inst Informat, Am Hubland, D-97074 Wurzburg, Germany.
EM eichelberger@informatik.uni-wuerzburg.de
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], ELEMENTS JAVA STYLE
   BADROS GJ, 2000, P 9 INT WORLD WID WE, P159
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Collard M.L., 2002, DocEng '02, P34
   CONN R, 1997, P TRIAD 97, P141
   Devanbu P. T., 1996, ACM Transactions on Software Engineering and Methodology, V5, P42, DOI 10.1145/226155.226157
   Devaux F, 2000, EUR PHYS J D, V8, P117, DOI 10.1007/s10053-000-9073-9
   Eichelberger H, 2002, LECT NOTES COMPUT SC, V2269, P295
   Eichelberger H, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P23, DOI 10.1109/VISSOF.2002.1019791
   EICHELBERGER H, 2001, 272 WURZB U I COMP S
   FISCHER G, 2003, GI SOFTWARETECHNIK T, V23, P49
   FISCHER G, P ECOOP WORKSH PED T
   Fischer G., 2003, Softwaretech. Trends, V23, P49
   GAMMA E, 1995, DESIGN PATTERNS
   GENERO M, 2000, OBJET, V6, P29
   HUDSON S, 2004, CUP PARSER GENERATOR
   Joy B., 2000, JAVA TM LANGUAGE SPE, V2nd
   LEA D, 2004, DRAFT JAVA CODING ST
   Maletic JI, 2002, PROG COMPREHEN, P289, DOI 10.1109/WPC.2002.1021351
   REINIGER C, 2003, THESIS WURZBURG U
   ROSENBLUM D, 1991, P USENIX CPLUSPL C A, P119
   Seemann J, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P201, DOI 10.1109/CSMR.1998.665808
   SEEMANN J., 1998, Proceedings of 5th international symposium on Foundations of Software Engineering, P10, DOI DOI 10.1145/288195.288207
   Shirazi J., 2000, JAVA PERFORMANCE TUN
   TRAPP M, 2001, OPTIMIERUNG OBJEKTOR
   Winter A, 2002, LECT NOTES COMPUT SC, V2265, P485
   2004, GNU COMPILER JAVA TM
   2003, CORE JAVA TECHNOLOGI
   [No title captured]
   2004, BCEL BYTE CODE ENG L
   2004, JAVA TREE VIEW
   2004, JAVA HOTSPOT VIRTUA
   2004, EXCELSIOR JET
   1999, CORE JAVA TECHNOLOGI
NR 35
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2004
VL 34
IS 12
BP 1157
EP 1185
DI 10.1002/spe.607
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859BU
UT WOS:000224237900003
DA 2024-07-18
ER

PT J
AU Jaring, M
   Krikhaar, RL
   Bosch, J
AF Jaring, M
   Krikhaar, RL
   Bosch, J
TI Representing variability in a family of MRI scanners
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software product families; product derivation; variability modeling;
   dependencies
ID SOFTWARE; ARCHITECTURE
AB Promoting software reuse is probably the most promising approach to the cost-effective development and evolution of quality software. An example of reuse is the successful adoption of software product families in industry. In a product family context, software architects anticipate product variation and design architectures that support product derivation in both space (multiple contexts) and time (changing contexts). Product derivation is based on the concept of variability: a single architecture and a set of components support a family of products. Modern software product families need to support increasing amounts of variability, leading to a situation where variability engineering becomes of primary concern. Variability is often introduced as an 'add-on' to the system without taking the consequences for more than one lifecycle phase such as design or architecture into account. This paper (1) suggests a Variability Categorization and Classification Model (VCCM) for representing variability in the software lifecycle and (2) discusses a case study of a large-scale software product family of Magnetic Resonance Imaging (MRI) scanners developed by Philips Medical Systems. The study illustrates how variability can be made an integral part of system development at different levels of abstraction. VCCM has been applied to the scanner family as an analysis tool. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Groningen, Dept Math & Comp Sci, NL-9747 AC Groningen, Netherlands.
   Philips Med Syst, MR Software, NL-5684 PC Best, Netherlands.
C3 University of Groningen; Philips; Philips Healthcare
RP Jaring, M (corresponding author), Univ Groningen, Dept Math & Comp Sci, POB 800, NL-9700 AV Groningen, Netherlands.
EM jaring@cs.rug.nl
CR [Anonymous], 1997, QUAL REP
   [Anonymous], 2000, SOFTWARE ARCHITECTUR
   Bachmann F., 2001, Software Engineering Notes, V26, P126, DOI 10.1145/379377.375274
   BASS L, CMUSEI97TR003
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, P355, DOI 10.1145/136586.136587
   BOSCH J, 2002, 2 SOFTW PROD LIN C S, P257
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   BOSCH J, 2001, P PROD FAM ARCH WORK, P13
   BOSCH J, 1999, 1 WORK IFIP C SOFTW, P321
   BRONSWORD L, CMUSEI96TR016
   CLEMENTS P, 2003, FRAMEWORK SOFTWARE P
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Dikel D, 1997, COMPUTER, V30, P49, DOI 10.1109/2.607064
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GARLAN D, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.469757
   Gibson JP, 1997, FEATURE INTERACTIONS IN TELECOMMUNICATION NETWORKS IV, P46
   Glass RL, 1996, COMMUN ACM, V39, P11, DOI 10.1145/240455.240458
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   HORNAK J, 2003, BASICS MRI
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   JARING M, 2002, 2 SOFTW PROD LIN C S, P15
   Keepence B, 1999, IEEE SOFTWARE, V16, P102, DOI 10.1109/52.776957
   Krikhaar RL, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P31, DOI 10.1109/CSMR.1999.756680
   KRIKHAAR RL, 1994, PRODUCT DEV BUILDING
   KRIKHAAR RL, 1999, THESIS U AMSTERDAM N
   Macala RR, 1996, IEEE SOFTWARE, V13, P57, DOI 10.1109/52.493021
   Maier MW, 2001, COMPUTER, V34, P107, DOI 10.1109/2.917550
   Mcllroy M.D., 1968, REPORT C NATO SCI CO, P138
   *MONTR NEUR I HOSP, 2003, MARV MRI BRING VIS L
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Rooijmans J, 1996, IEEE SOFTWARE, V13, P55, DOI 10.1109/52.476286
   *SOFTW ENG I, 2003, DO YOU DEF SOFTW ARC
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   SVAHNBERG M, 2002, TAXONOMY VARIABILITY, P1103
   SVAHNBERG M, 2000, 3 INT WORKSH SOFTW A, P146
   Toft P, 2000, KLUWER INT SER ENG C, V576, P111
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   van Ommering R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255, DOI 10.1109/ICSE.2002.1007973
   VANDERLINDEN FJ, 1995, IEEE SOFTWARE, V12, P51, DOI 10.1109/52.469760
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   WIJNSTRA JG, 2000, 22 INT C SOFTW ENG, P51
NR 44
TC 15
Z9 15
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2004
VL 34
IS 1
BP 69
EP 100
DI 10.1002/spe.558
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 763TV
UT WOS:000188117300004
DA 2024-07-18
ER

PT J
AU Canonico, R
   D'Arienzo, M
   Romano, SP
   Ventre, G
AF Canonico, R
   D'Arienzo, M
   Romano, SP
   Ventre, G
TI Introducing QoS awareness in distributed programming: QTcl
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE quality of service; distributed multimedia applications; scripting
   languages; QoS API
AB A number of distributed applications require communication services with quality of service (QoS) guarantees. Building global-scale distributed systems with predictable properties is one of the great challenges for computer systems engineering in the new century. Work undertaken within the Internet Engineering Task Force has led to the definition of novel architectural models for the Internet with QoS support. According to these models, the network has to be appropriately configured in order to provide applications with the required performance guarantees.
   In next-generation networks, enabling applications to interact with the underlying QoS services is of primary importance. Hence, several special-purpose application programming interfaces (APIs) have been defined to let applications negotiate QoS parameters across QoS-capable networks. However, so far, none of these APIs are available in different operating environments. We believe that such features should be embedded in programming environments for distributed applications. In this work we present how we included QoS control features in Tcl, a programming language that has been widely adopted for the development of distributed multimedia applications. Our work has led to the implementation of QTcl, an extended Tcl interpreter that provides programmers with a new set of primitives, in full compliance with the standard SCRAM programming interface for the RSVP protocol. QTcl in highly portable, in that it enables standard QoS negotiation to be performed in a seamless fashion on the most common operating systems. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Naples Federico II, Dipartimento Sistemi & Informat, I-80125 Naples, Italy.
C3 University of Naples Federico II
RP Ventre, G (corresponding author), Univ Naples Federico II, Dipartimento Sistemi & Informat, Via Claudio 21, I-80125 Naples, Italy.
RI Romano, Simon Pietro/R-5244-2016; Canonico, Roberto/H-6046-2012
OI D'ARIENZO, Maurizio/0000-0003-3408-7469; Romano, Simon
   Pietro/0000-0002-5876-0382
CR [Anonymous], 1994, INTEGRATED SERVICES
   Braden R., 1997, Resource ReSerVation Protocol (RSVP)
   D'Albenzio R, 1999, LECT NOTES COMPUT SC, V1629, P229
   DARIENZO M, 2000, P PROMS 2000 KRAK OC
   Kavi K, 1999, COMPUTER, V32, P30, DOI 10.1109/2.738301
   Ousterhout JK, 1998, COMPUTER, V31, P23, DOI 10.1109/2.660187
   Perham M, 1997, PROCEEDINGS OF THE FIFTH ANNUAL TCL/TK WORKSHOP, P49
   *RAPI, C809 RAPI
   Shenker S., 1997, SPECIFICATION GUARAN
   SMITH BC, 1996, P 4 ACM INT MULT C B
   WROKLAWSKY J, 1997, SPECIFICATION CONTRO
   XU L, 2001, P IEEE INFOCOM 2001
   1996, WINDOWS SOCKET 2 PRO
NR 13
TC 0
Z9 0
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2003
VL 33
IS 10
BP 901
EP 911
DI 10.1002/spe.527
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715CV
UT WOS:000184953700001
DA 2024-07-18
ER

PT J
AU Fatoohi, R
   Jensen, D
AF Fatoohi, R
   Jensen, D
TI Migration of DCE applications into CORBA and SOAP environments
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE DCE; CORBA; client/server programming; interoperability; Interface
   Definition Language; SOAP
AB Legacy applications based on the Distributed Computing Environment (DCE) are subject to several significant limitations. As the development and support of DCE wanes, object-oriented development becomes more desirable, and transmission over HTTP is established as the preferred protocol over the Internet, DCE application managers and developers are pressed to find extensions and alternatives to DCE. This paper briefly discusses several alternative targets for migration of DCE systems, then proceeds to detail, compare, and contrast two preferred candidates: CORBA and SOAP. Although we have found that developing a general migration solution for legacy DCE applications to CORBA or SOAP to be a nontrivial, long-term project, developing specific solutions that are based on a general architecture is feasible. Given a short list of reasonable premises, many DCE applications may be ported to technologies such as CORBA and SOAP. Copyright (C) 2002 John Wiley Sons, Ltd.
C1 San Jose State Univ, San Jose, CA 95192 USA.
   ActivCard Inc, Fremont, CA 94555 USA.
C3 California State University System; San Jose State University
RP Fatoohi, R (corresponding author), San Jose State Univ, San Jose, CA 95192 USA.
CR Bloomer J., 1992, Power Programming with RPC, V1
   COMER DE, 1997, INTERNETWORKING TCP, V3
   DAVIS D, 2002, P IEEE INT S CLUST C
   *DCE OP GROUP, 1997, C706 DCE OP GROUP
   FATOOHI R, 2001, J RES PRACT INF TECH, V33, P161
   FATOOHI R, 1997, NAS97026 NASA AM RES
   GOVINDARAJU M, 2000, P SC2000 HIGH PERF N
   Henning M., 1999, ADV CORBA PROGRAMMIN
   *HEWL PACK, 1994, HP OBJ OR DCE CPLUSP
   *INPR CO, 1998, DCE COBRA BRIDG US G
   Meyer B, 2001, COMPUTER, V34, P92, DOI 10.1109/2.940017
   *OBJ MAN GROUP, 2001, 242 OMG CORBA
   PRITCHARD J, 1999, COM COBRA SIDE SIDE
   *RAYTH SYST, 1999, 305CD100005 RAYTH SY
   ROSENBERRY W, 1993, UNDERSTANDING DCE
   RUH W, 1999, IIOP COMPLETE
   SCHMIDT D, 1997, P ISS 97 WORLD TEL C
   SHIRLEY J, 1994, GUIDE WRITING DCE AP
   SIEGEL J, 2001, WHATS COMING COBRA, V3
   *WORLDW WEB CONS, 2000, 08 W3C
NR 20
TC 3
Z9 3
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2003
VL 33
IS 1
BP 1
EP 18
DI 10.1002/spe.492
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 631QE
UT WOS:000180177800001
DA 2024-07-18
ER

PT J
AU Jian, ZL
   Xie, XS
   Fang, YZ
   Jiang, YB
   Lu, Y
   Dash, A
   Li, T
   Wang, GL
AF Jian, Zhaolong
   Xie, Xueshuo
   Fang, Yaozheng
   Jiang, Yibing
   Lu, Ye
   Dash, Ankan
   Li, Tao
   Wang, Guiling
TI DRS: A deep reinforcement learning enhanced Kubernetes scheduler for
   microservice-based system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE deep reinforcement learning; Kubernetes scheduler; microservice
   scheduling; resource awareness
AB Recently, Kubernetes is widely used to manage and schedule the resources of microservices in cloud-native distributed applications, as the most famous container orchestration framework. However, Kubernetes preferentially schedules microservices to nodes with rich and balanced CPU and memory resources on a single node. The native scheduler of Kubernetes, called Kube-scheduler, may cause resource fragmentation and decrease resource utilization. In this paper, we propose a deep reinforcement learning enhanced Kubernetes scheduler named DRS. We initially frame the Kubernetes scheduling problem as a Markov decision process with intricately designed state, action, and reward structures in an effort to increase resource usage and decrease load imbalance. Then, we design and implement DRS mointor to perceive six parameters concerning resource utilization and create a thorough picture of all available resources globally. Finally, DRS can automatically learn the scheduling policy through interaction with the Kubernetes cluster, without relying on expert knowledge about workload and cluster status. We implement a prototype of DRS in a Kubernetes cluster with five nodes and evaluate its performance. Experimental results highlight that DRS overcomes the shortcomings of Kube-scheduler and achieves the expected scheduling target with three workloads. With only 3.27% CPU overhead and 0.648% communication delay, DRS outperforms Kube-scheduler by 27.29% in terms of resource utilization and reduces load imbalance by 2.90 times on average.
C1 [Jian, Zhaolong; Xie, Xueshuo; Fang, Yaozheng; Jiang, Yibing; Li, Tao] Nankai Univ, Coll Comp Sci, Tianjin, Peoples R China.
   [Xie, Xueshuo; Li, Tao] Chinese Acad Sci, State Key Lab Comp Architecture, Inst Comp Technol, Beijing, Peoples R China.
   [Lu, Ye] Nankai Univ, Coll Cyber Sci, Tianjin, Peoples R China.
   [Dash, Ankan; Wang, Guiling] New Jersey Inst Technol, Dept Comp Sci, Newark, NJ USA.
C3 Nankai University; Chinese Academy of Sciences; Institute of Computing
   Technology, CAS; Nankai University; New Jersey Institute of Technology
RP Li, T (corresponding author), Nankai Univ, Coll Comp Sci, Tianjin, Peoples R China.
EM litao@nankai.edu.cn
FU This work is partially supported by the National Key Research and
   Development Program of China (2018YFB2100304), National Natural Science
   Foundation (62272248), the Open Project Fund of State Key Laboratory of
   Computer Architecture, Institute of Computing [2018YFB2100304]; National
   Key Research and Development Program of China [62272248]; National
   Natural Science Foundation [CARCH201905, CARCHA202108, 2021KF0AB04];
   Open Project Fund of State Key Laboratory of Computer Architecture,
   Institute of Computing Technology, Chinese Academy of Sciences
   [2022BKY028]; Tianjin Graduate Scientific Research Innovation Project
FX This work is partially supported by the National Key Research and
   Development Program of China (2018YFB2100304), National Natural Science
   Foundation (62272248), the Open Project Fund of State Key Laboratory of
   Computer Architecture, Institute of Computing Technology, Chinese
   Academy of Sciences (CARCH201905, CARCHA202108) and Sponsored by
   Zhejiang Lab (2021KF0AB04), Tianjin Graduate Scientific Research
   Innovation Project (2022BKY028).
CR Ahmed GE, 2021, SOFTWARE PRACT EXPER, V51, P213, DOI 10.1002/spe.2898
   [Anonymous], 2016, Dueling Network Architectures for Deep Reinforcement Learning
   Azad P, 2017, INT J CLOUD APPL COM, V7, P20, DOI 10.4018/IJCAC.2017100102
   Baarzi AF., 2021, Showar: right-sizing and efficient scheduling of microservices. Proceedings of the ACM Symposium on Cloud Computing. ACM
   Boudi A, 2021, IEEE NETWORK, V35, P128, DOI 10.1109/MNET.011.2000392
   Carrion C., 2022, ACM Comput Surv
   Chen JL, 2013, J COMPUT, V8, P929, DOI 10.4304/jcp.8.4.929-936
   Chen WJ, 2017, Arxiv, DOI [arXiv:1711.07440, 10.48550/arXiv.1711.07440, DOI 10.48550/ARXIV.1711.07440]
   Chen ZY, 2022, SOFTWARE PRACT EXPER, V52, P1319, DOI 10.1002/spe.3066
   Cyr B, 2021, IEEE SENSOR, DOI 10.1109/SENSORS47087.2021.9639744
   Fu KH, 2022, IEEE T PARALL DISTR, V33, P1825, DOI 10.1109/TPDS.2021.3128037
   Guo WX, 2021, IEEE INTERNET THINGS, V8, P3576, DOI 10.1109/JIOT.2020.3025015
   Haarnoja T, 2018, PR MACH LEARN RES, V80
   Han YW, 2021, IEEE INFOCOM SER, DOI 10.1109/INFOCOM42981.2021.9488701
   Hasselt H. V., 2016, P AAAI C ART INT, P2094, DOI DOI 10.5555/3016100.3016191
   Hessel M, 2018, AAAI CONF ARTIF INTE, P3215
   Hindman B., 2011, MESOS PLATFORM FINE
   Huang J., 2020, Rlsk: a job scheduler for federated kubernetes clusters based on reinforcement learning. Paper presented at: 2020 IEEE International Conference on Cloud Engineering (IC2E). IEEE
   Javanmardi S, 2021, SOFTWARE PRACT EXPER, V51, P2519, DOI 10.1002/spe.2867
   Kaur A, 2022, SOFTWARE PRACT EXPER, V52, P2411, DOI 10.1002/spe.3132
   Kaur A, 2022, SOFTWARE PRACT EXPER, V52, P689, DOI 10.1002/spe.2802
   Liu N, 2017, INT CON DISTR COMP S, P372, DOI 10.1109/ICDCS.2017.123
   Madhura R, 2023, SOFTWARE PRACT EXPER, V53, P390, DOI 10.1002/spe.3153
   Mao HZ, 2019, SIGCOMM '19 - PROCEEDINGS OF THE ACM SPECIAL INTEREST GROUP ON DATA COMMUNICATION, P270, DOI 10.1145/3341302.3342080
   Mao HZ, 2016, PROCEEDINGS OF THE 15TH ACM WORKSHOP ON HOT TOPICS IN NETWORKS (HOTNETS '16), P50, DOI 10.1145/3005745.3005750
   Menouer T, 2021, J SUPERCOMPUT, V77, P4267, DOI 10.1007/s11227-020-03427-3
   Mnih V, 2013, Arxiv, DOI [arXiv:1312.5602, 10.48550/arxiv.1312.5602]
   Mnih V, 2016, PR MACH LEARN RES, V48
   Monteiro A., 2018, Int J Adv Secur, V11
   Mor B, 2021, COMPUT IND ENG, V153, DOI 10.1016/j.cie.2020.107024
   Najafizadeh A, 2022, CLUSTER COMPUT, V25, P141, DOI 10.1007/s10586-021-03371-8
   Park JW., 2018, Stratus: Cost-aware container scheduling in the public cloud. Proceedings of the ACM symposium on cloud computing. ACM
   Pezzella F, 2008, COMPUT OPER RES, V35, P3202, DOI 10.1016/j.cor.2007.02.014
   Rejiba Z., 2022, J ACM
   Rummery Gavin A, 1994, On-line Q-Learning Using Connectionist Systems, V37
   Schulman J, 2017, Arxiv, DOI arXiv:1707.06347
   Schulman J, 2015, PR MACH LEARN RES, V37, P1889
   Silver D, 2014, PR MACH LEARN RES, V32
   Song WJ, 2014, IEEE T COMPUT, V63, P2647, DOI 10.1109/TC.2013.148
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   WILLIAMS RJ, 1992, MACH LEARN, V8, P229, DOI 10.1007/BF00992696
   Wojciechowski L, 2021, IEEE INFOCOM SER, DOI 10.1109/INFOCOM42981.2021.9488670
   Wu JH, 2022, I S BIOMED IMAGING, DOI 10.1109/ISBI52829.2022.9761706
   Zhang WG, 2018, ICCNS 2018: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON COMMUNICATION AND NETWORK SECURITY, P144, DOI 10.1145/3290480.3290507
   Zhao HL, 2022, IEEE T SERV COMPUT, V15, P1732, DOI 10.1109/TSC.2020.3013600
NR 45
TC 0
Z9 0
U1 9
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 OCT 25
PY 2023
DI 10.1002/spe.3284
EA OCT 2023
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U8EF4
UT WOS:001087072100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hashemi, SM
   Sahafi, A
   Rahmani, AM
   Bohlouli, M
AF Hashemi, Sayed Mohsen
   Sahafi, Amir
   Rahmani, Amir Masoud
   Bohlouli, Mahdi
TI Energy-aware resource management in fog computing for IoT applications:
   A review, taxonomy, and future directions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE energy consumption; energy management; energy-aware; fog computing; QoS
ID ALLOCATION; OPTIMIZATION; CLOUD; ARCHITECTURES; NETWORKS; TASKS
AB The energy demand for Internet of Things (IoT) applications is increasing with a rise in IoT devices. Rising costs and energy demands can cause serious problems. Fog computing (FC) has recently emerged as a model for location-aware tasks, data processing, fast computing, and energy consumption reduction. The Fog computing model assists cloud computing in fast processing at the network's edge, which also exerts a vital role in cloud computing. Due to the fast computing in fog servers, different quality of service (QoS) approaches have been proposed in various sections of the fog system, and several quality factors have been considered in this regard. Despite the significance of QoS in Fog computing, no extensive study has focused on QoS and energy consumption methods in this area. Therefore, this article investigates previous research on the use and guarantee of Fog computing. This article reviews six general approaches that discuss the published articles between 2015 and late May 2023. The focal point of this paper is evaluating Fog computing and the energy consumption strategy. This article further shows the advantages, disadvantages, tools, types of evaluation, and quality factors according to the selected approaches. Based on the reviewed studies, some open issues and challenges in Fog computing energy consumption management are suggested for further study.
C1 [Hashemi, Sayed Mohsen] Islamic Azad Univ, Dept Comp Engn, Qeshm Branch, Qeshm, Iran.
   [Sahafi, Amir] Islamic Azad Univ, Dept Comp Engn, South Tehran Branch, Tehran, Iran.
   [Rahmani, Amir Masoud] Natl Yunlin Univ Sci & Technol, Future Technol Res Ctr, Touliu, Yunlin, Taiwan.
   [Bohlouli, Mahdi] Inst Adv Studies Basic Sci, Dept Comp Sci & Informat Technol, Zanjan, Iran.
   [Bohlouli, Mahdi] Petanux GmbH, Res & Innovat Dept, Bonn, Germany.
   [Bohlouli, Mahdi] Inst Adv Studies Basic Sci IASBS, Res Ctr Basic Sci & Modern Technol RBST, Zanjan, Iran.
C3 Islamic Azad University; Islamic Azad University; National Yunlin
   University Science & Technology; Institute for Advanced Studies in Basic
   Sciences (IASBS); Institute for Advanced Studies in Basic Sciences
   (IASBS)
RP Sahafi, A (corresponding author), Islamic Azad Univ, Dept Comp Engn, South Tehran Branch, Tehran, Iran.
EM sahafi@iau.ac.ir
RI hashemi, sayed mohsen/HGU-0399-2022; Rahmani, Amir Masoud/K-2702-2013
OI hashemi, sayed mohsen/0000-0002-6506-9987; Rahmani, Amir
   Masoud/0000-0001-8641-6119; Bohlouli, Mahdi/0000-0002-6659-5524
CR Abbasi M, 2021, COMPUT COMMUN, V169, P71, DOI 10.1016/j.comcom.2021.01.022
   Abbasi M, 2020, COMPUT COMMUN, V153, P217, DOI 10.1016/j.comcom.2020.02.017
   Abbasi M, 2020, J GRID COMPUT, V18, P43, DOI 10.1007/s10723-020-09507-1
   Abdulzahra AMK, 2023, INTERNET THINGS-NETH, V22, DOI 10.1016/j.iot.2023.100765
   Al-Masri E, 2023, INTERNET THINGS-NETH, V23, DOI 10.1016/j.iot.2023.100832
   Arshad H, 2020, INT J PARALLEL EMERG, V35, P309, DOI 10.1080/17445760.2019.1606913
   Bansal S, 2022, T EMERG TELECOMMUN T, V33, DOI 10.1002/ett.4523
   Bozorgchenani A, 2019, IEEE T GREEN COMMUN, V3, P250, DOI 10.1109/TGCN.2018.2885443
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Chaurasia N, 2021, J SUPERCOMPUT, V77, P11682, DOI 10.1007/s11227-021-03760-1
   Chen XC, 2021, COMPUT COMMUN, V169, P48, DOI 10.1016/j.comcom.2021.01.026
   da Silva PVBC, 2023, ANN TELECOMMUN, V78, P115, DOI 10.1007/s12243-022-00936-5
   Gavaber MD, 2021, J AMB INTEL HUM COMP, V12, P7965, DOI 10.1007/s12652-020-02525-7
   Dastjerdi Amir Vahid, 2016, Internet of Things, P61, DOI [10.1016/B978 -0-12-805395-9.00004-6. arXiv: 1601.02752, DOI 10.1016/B978-0-12-805395-9.00004-6.ARXIV:1601.02752]
   Deng RL, 2016, IEEE INTERNET THINGS, V3, P1171, DOI 10.1109/JIOT.2016.2565516
   Dhananjaya M. K., 2022, Proceedings of International Conference on Communication and Artificial Intelligence: ICCAI 2021. Lecture Notes in Networks and Systems (435), P537, DOI 10.1007/978-981-19-0976-4_44
   Dhillon A, 2022, ENTERP INF SYST-UK, V16, DOI 10.1080/17517575.2020.1820583
   Dong YF, 2019, IEEE INTERNET THINGS, V6, P7543, DOI 10.1109/JIOT.2019.2901532
   Du JB, 2018, IEEE T COMMUN, V66, P1594, DOI 10.1109/TCOMM.2017.2787700
   Etemadi M, 2021, J EXP THEOR ARTIF IN, V33, P1033, DOI 10.1080/0952813X.2020.1818294
   Eyckerman R., 2020, INTERNET THINGS, V1
   Gu L, 2019, FUTURE GENER COMP SY, V95, P89, DOI 10.1016/j.future.2018.12.062
   Guerrero C, 2019, J AMB INTEL HUM COMP, V10, P2447, DOI 10.1007/s12652-018-0914-0
   Heng L, 2022, INT J COMMUN SYST, V35, DOI 10.1002/dac.4899
   Hosseinioun P, 2020, J PARALLEL DISTR COM, V143, P88, DOI 10.1016/j.jpdc.2020.04.008
   Huang XG, 2020, IEEE INTERNET THINGS, V7, P8502, DOI 10.1109/JIOT.2020.2991481
   Jain V., 2022, INT J CLOUD APPL COM, V12, P1
   Jamil B, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3513002
   Jazayeri F, 2021, J SUPERCOMPUT, V77, P4887, DOI 10.1007/s11227-020-03476-8
   Jiang YL, 2019, IEEE SYST J, V13, P2930, DOI 10.1109/JSYST.2018.2877850
   Kaur M., 2020, MATER TODAY-PROC
   Khan OA, 2021, SOFTWARE PRACT EXPER, V51, P2360, DOI 10.1002/spe.2824
   Khan ZA, 2019, IEEE ACCESS, V7, P157254, DOI 10.1109/ACCESS.2019.2949863
   Khansari ME, 2020, J SUPERCOMPUT, V76, P5578, DOI 10.1007/s11227-019-03095-y
   Khattak HA, 2019, EURASIP J WIREL COMM, DOI 10.1186/s13638-019-1395-3
   Kim J, 2019, IEEE WIREL COMMUN LE, V8, P1200, DOI 10.1109/LWC.2019.2911521
   Kim WS, 2018, COMPUT NETW, V145, P76, DOI 10.1016/j.comnet.2018.08.011
   Lakhan A, 2022, ENTERP INF SYST-UK, V16, DOI 10.1080/17517575.2021.1883122
   Li GS, 2019, IEEE ACCESS, V7, P159688, DOI 10.1109/ACCESS.2019.2950443
   Li HT, 2020, T EMERG TELECOMMUN T, V31, DOI 10.1002/ett.3818
   Li X, 2019, IEEE ACCESS, V7, P64907, DOI 10.1109/ACCESS.2019.2917557
   Liang JB, 2019, IEEE ACCESS, V7, P77649, DOI 10.1109/ACCESS.2019.2922322
   Lu LY, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/5296406
   Luo J, 2019, FUTURE GENER COMP SY, V97, P50, DOI 10.1016/j.future.2018.12.063
   Majumdar A, 2021, INFORM SYST FRONT, V23, P1039, DOI 10.1007/s10796-020-10016-5
   Malik UM, 2022, IEEE INTERNET THINGS, V9, P14572, DOI 10.1109/JIOT.2021.3068056
   Medara R, 2022, WIRELESS PERS COMMUN, V125, P1545, DOI 10.1007/s11277-022-09621-1
   Meng XL, 2017, IEEE ACCESS, V5, P21355, DOI 10.1109/ACCESS.2017.2748140
   Mishra M, 2020, J AMB INTEL HUM COMP, V11, P3155, DOI 10.1007/s12652-019-01481-1
   Mishra SK, 2018, IEEE T IND INFORM, V14, P4497, DOI 10.1109/TII.2018.2791619
   Misra S, 2019, IEEE J SEL AREA COMM, V37, P1159, DOI 10.1109/JSAC.2019.2906793
   Mohammadzadeh A, 2023, J SUPERCOMPUT, V79, P18569, DOI 10.1007/s11227-023-05330-z
   Mohan N, 2018, ANN TELECOMMUN, V73, P463, DOI 10.1007/s12243-018-0649-0
   Mukherjee A, 2021, J AMB INTEL HUM COMP, V12, P943, DOI 10.1007/s12652-020-02113-9
   Murtaza F, 2020, J NETW COMPUT APPL, V165, DOI 10.1016/j.jnca.2020.102674
   Najafizadeh A, 2022, CLUSTER COMPUT, V25, P141, DOI 10.1007/s10586-021-03371-8
   Naranjo PGV, 2018, J SUPERCOMPUT, V74, P2470, DOI 10.1007/s11227-018-2274-0
   Pinto MF, 2019, WIREL COMMUN MOB COM, V2019, DOI 10.1155/2019/7497924
   Poornima MR, 2023, J NETW COMPUT APPL, V213, DOI 10.1016/j.jnca.2023.103584
   Rafique H, 2019, IEEE ACCESS, V7, P115760, DOI 10.1109/ACCESS.2019.2924958
   Reddy DA, 2021, EVOL INTELL, V14, P669, DOI 10.1007/s12065-020-00377-w
   Rehman AU, 2020, IEEE ACCESS, V8, P199829, DOI 10.1109/ACCESS.2020.3035181
   Saif FA, 2023, IEEE ACCESS, V11, P45393, DOI 10.1109/ACCESS.2023.3266822
   Saif FA, 2023, IEEE ACCESS, V11, P20635, DOI 10.1109/ACCESS.2023.3241240
   Salimian M, 2022, APPL ARTIF INTELL, V36, DOI 10.1080/08839514.2021.2008149
   Shahid MH, 2020, COMPUT COMMUN, V154, P534, DOI 10.1016/j.comcom.2020.03.001
   Shuminoski T., 2018, WIREL COMMUN MOB COM, V7, P2018
   Siasi N, 2020, IEEE ACCESS, V8, P167665, DOI 10.1109/ACCESS.2020.3021355
   Siasi N, 2020, IEEE ACCESS, V8, P167383, DOI 10.1109/ACCESS.2020.3021354
   Singh SP, 2020, SIMUL MODEL PRACT TH, V101, DOI 10.1016/j.simpat.2019.102017
   Soltani N, 2022, CONCURR COMP-PRACT E, V34, DOI 10.1002/cpe.6894
   Sun HY, 2020, PEER PEER NETW APPL, V13, P548, DOI 10.1007/s12083-019-00783-7
   Tan JR, 2022, ENG REP, V4, DOI 10.1002/eng2.12497
   Tiwari Rajeev, 2022, Energy Conservation Solutions for Fog-Edge Computing Paradigms. Lecture Notes on Data Engineering and Communications Technologies (74), P1, DOI 10.1007/978-981-16-3448-2_1
   Tran M.-Q., 2019, WIREL COMMUN MOB COM, V2019, P1, DOI DOI 10.1155/2019/
   Tuli S, 2022, IEEE T PARALL DISTR, V33, P101, DOI 10.1109/TPDS.2021.3087349
   Tuli S, 2020, FUTURE GENER COMP SY, V104, P187, DOI 10.1016/j.future.2019.10.043
   Xiao Y, 2018, IEEE J SEL AREA COMM, V36, P2390, DOI 10.1109/JSAC.2018.2872287
   Yamini R., 2012, INT J RES SCI ADV TE, V1, P1
   Yang Y, 2018, IEEE INTERNET THINGS, V5, P4076, DOI 10.1109/JIOT.2018.2846644
   Yannuzzi M, 2014, IEEE INT WORKSH COMP, P325, DOI 10.1109/CAMAD.2014.7033259
   Yao JJ, 2020, IEEE T VEH TECHNOL, V69, P5562, DOI 10.1109/TVT.2020.2982172
   Yao JJ, 2020, IEEE T GREEN COMMUN, V4, P556, DOI 10.1109/TGCN.2019.2956626
   Yi S., 2015, SURVEY FOG COMPUTING
   You XD, 2020, IEEE ACCESS, V8, P94279, DOI 10.1109/ACCESS.2020.2992748
   Yu Y, 2019, IEEE INTERNET THINGS, V6, P4106, DOI 10.1109/JIOT.2018.2875587
   Zhang GW, 2019, IEEE INTERNET THINGS, V6, P4388, DOI 10.1109/JIOT.2018.2887229
   Zhang GW, 2019, IEEE INTERNET THINGS, V6, P3533, DOI 10.1109/JIOT.2018.2887264
   Zhu ZW, 2019, IEEE T PARALL DISTR, V30, P2636, DOI 10.1109/TPDS.2019.2927978
NR 89
TC 1
Z9 1
U1 3
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2024
VL 54
IS 2
BP 109
EP 148
DI 10.1002/spe.3273
EA OCT 2023
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL7E2
UT WOS:001078458100001
OA Bronze
DA 2024-07-18
ER

PT J
AU Lian, ZC
   Wang, L
AF Lian, Zhichao
   Wang, Ling
TI A novel forgery classification method based on multi-scale feature
   capsule network in mobile edge computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE capsule network; deepfake detection; forgery classification; mobile edge
   computing; multi-scale feature
ID IMAGES
AB Face recognition is one of the most important applications of MEC. However, there have been many fake face data that can deceive MEC devices, causing serious problems such as information leakage. Face forgery detection can effectively solve this problem. Current face forgery detection methods have achieved high accuracy. However, most of the methods are researched on the classification of face authenticity. We find that studying multi-classification of forgery methods can not only improve the accuracy of the model to identify fake faces, but also help improve the generalization ability of fake face classification. We argue that multi-scale features and high-frequency features can expose more detailed forgery artifacts. So, we design four modules, which take advantage of the complementarity of RGB features and frequency features, global features and local features. The first module is a residual-guided multi-scale spatial attention module, which uses residuals to guide the RGB feature extractor to extract fake features from a multi-scale perspective. The second module is a multi-scale retinal feature extraction module. The third module is a multi-scale channel attention-guided local frequency statistics module, which extracts local frequency responses using sliding-window DCT. The last module is a capsule network classification module with overall correlation to classify the fused features. The information transfer between the subject capsule and the classification capsule can increase the integrity of the model, making the model converge faster. We conduct experiments on the databases FaceForensics++, DeepfakeDetection, and FakeAVCeleb. Experimental result shows that our method performs well on forgery classification.
C1 [Lian, Zhichao] Nanjing Univ Sci & Technol, Sch Cyberspace Secur, Nanjing, Peoples R China.
   [Wang, Ling] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing, Peoples R China.
C3 Nanjing University of Science & Technology; Nanjing University of
   Science & Technology
RP Lian, ZC (corresponding author), Nanjing Univ Sci & Technol, Sch Cyberspace Secur, Nanjing, Peoples R China.
EM newlzcts@njust.edu.cn
CR Amerini I, 2019, IEEE INT CONF COMP V, P1205, DOI 10.1109/ICCVW.2019.00152
   Amerini I, 2011, IEEE T INF FOREN SEC, V6, P1099, DOI 10.1109/TIFS.2011.2129512
   Boulkenafet Z., 2016, 2016 INT C BIOMETRIC, P1, DOI [10.1109/ICB.2016.7550078, DOI 10.1109/ICB.2016.7550078]
   Chen HN, 2020, IEEE T INF FOREN SEC, V15, P578, DOI 10.1109/TIFS.2019.2922241
   Coccomini DA, 2022, LECT NOTES COMPUT SC, V13233, P219, DOI 10.1007/978-3-031-06433-3_19
   Creswell A, 2018, IEEE SIGNAL PROC MAG, V35, P53, DOI 10.1109/MSP.2017.2765202
   Dai HP, 2023, IEEE T KNOWL DATA EN, V35, P6710, DOI 10.1109/TKDE.2022.3199646
   Farid H, 2009, IEEE SIGNAL PROC MAG, V26, P16, DOI 10.1109/MSP.2008.931079
   Gao MF, 2018, PROC CVPR IEEE, P6926, DOI 10.1109/CVPR.2018.00724
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Haliassos A, 2021, PROC CVPR IEEE, P5037, DOI 10.1109/CVPR46437.2021.00500
   Hao ZK, 2017, PROC CVPR IEEE, P1913, DOI 10.1109/CVPR.2017.207
   Hulzebosch N, 2020, IEEE COMPUT SOC CONF, P2729, DOI 10.1109/CVPRW50498.2020.00329
   Iacobucci S, 2021, CYBERPSYCH BEH SOC N, V24, P194, DOI 10.1089/cyber.2020.0149
   Jeon H, 2020, IFIP INT C ICT SYST, V580, P416, DOI 10.1007/978-3-030-58201-2_28
   Jobson DJ, 1997, IEEE T IMAGE PROCESS, V6, P965, DOI 10.1109/83.597272
   Khalifa AH, 2022, IEEE ACCESS, V10, P22678, DOI 10.1109/ACCESS.2022.3152029
   Khalil SS., 2021, 2020 INT C COMM SIGN, P1, DOI [DOI 10.1109/ICCSPA49915.2021.9385719, 10.1109/ICCSPA49915.2021.9385719]
   Komulainen J, 2013, INT CONF BIOMETR
   Li JM, 2021, PROC CVPR IEEE, P6454, DOI 10.1109/CVPR46437.2021.00639
   Li YZ, 2018, IEEE INT WORKS INFOR
   Lu Z., 2022, P IEEECVF C COMPUTER, P1301
   Luo YC, 2021, PROC CVPR IEEE, P16312, DOI 10.1109/CVPR46437.2021.01605
   Nguyen HH, 2019, INT CONF BIOMETR THE, DOI 10.1109/btas46853.2019.9185974
   Nguyen HH, 2019, INT CONF ACOUST SPEE, P2307, DOI 10.1109/ICASSP.2019.8682602
   Nirkin Y, 2022, IEEE T PATTERN ANAL, V44, P6111, DOI 10.1109/TPAMI.2021.3093446
   Park E, 2016, IEEE WINT CONF APPL
   Qi LY, 2023, IEEE T KNOWL DATA EN, V35, P5444, DOI 10.1109/TKDE.2022.3168611
   Qi LY, 2022, IEEE T IND INFORM, V18, P6503, DOI 10.1109/TII.2021.3139363
   Qian Y., 2020, 12357 COMPUTER VISIO, P86, DOI [10.1007/978-3-030-58610-2_6, DOI 10.1007/978]
   Rocha A, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978805
   Sabir E., 2019, INTERFACES GUI, V3, P80
   Simonyan K, 2014, ADV NEUR IN, V27
   Singh B, 2018, PROC CVPR IEEE, P3578, DOI 10.1109/CVPR.2018.00377
   Tolba A. S., 2006, INT J SIGNAL PROCESS, V2, P88
   Wang O., 2020, PROC IEEECVF C COMPU, V7, P8695
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   Wu SQ, 2023, IEEE T COMPUT SOC SY, V10, P771, DOI 10.1109/TCSS.2022.3168595
   Wu X, 2020, INT CONF ACOUST SPEE, P2952, DOI [10.1109/icassp40776.2020.9053969, 10.1109/ICASSP40776.2020.9053969]
   Xu XL, 2022, IEEE T FUZZY SYST, V30, P4593, DOI 10.1109/TFUZZ.2022.3158000
   Xu XL, 2022, IEEE T SERV COMPUT, V15, P1206, DOI 10.1109/TSC.2022.3142265
   Zhang JX, 2021, VEH TECHNOL CONFE, DOI 10.1109/VTC2021-Spring51267.2021.9449084
   Zhou P, 2017, IEEE COMPUT SOC CONF, P1831, DOI 10.1109/CVPRW.2017.229
   Zhou XK, 2023, IEEE INTERNET THINGS, V10, P3295, DOI 10.1109/JIOT.2022.3179231
   Zhou XK, 2022, IEEE INTERNET THINGS, V9, P9310, DOI 10.1109/JIOT.2021.3130434
   Zhou XK, 2023, IEEE T IND INFORM, V19, P570, DOI 10.1109/TII.2022.3170149
   Zhou XK, 2021, IEEE INTERNET THINGS, V8, P12588, DOI 10.1109/JIOT.2021.3077449
   Zhu H., 2020, P ADV NEURAL INF PRO, V33, P21699
   [朱新同 Zhu Xintong], 2021, [信息网络安全, Netinfo Security], P70
NR 49
TC 1
Z9 1
U1 6
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 JUL 26
PY 2023
DI 10.1002/spe.3245
EA JUL 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N5UZ8
UT WOS:001037673800001
DA 2024-07-18
ER

PT J
AU Denys, PF
   Fournier, Q
   Dagenais, MR
AF Denys, Pierre-Frederick
   Fournier, Quentin
   Dagenais, Michel R.
TI Distributed computation of the critical path from execution traces
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE active path; container clusters; critical path; distributed systems;
   Docker; message-oriented middleware; MPI; parallel computing; trace
   compass; tracing
ID NETWORK
AB Due to the ever-increasing number of computer nodes in distributed systems, efficient and effective tools have become crucial for their analysis. Although several efficient methods have been proposed to monitor and profile distributed systems, tracing remains the most effective solution for in-depth system analysis. Tracing is the act of collecting a trace, which is a sequence of low-level events generated by the kernel or the userspace. After data collection, the most important part is the event analysis. The paradigm and choice of graphs determine the ability of the user to detect abnormal behaviors and identify their root cause. Although tracing is a highly effective approach to analyzing complex systems, the scalability of the current analysis tools is limited. As a consequence, tracing is often impractical for large distributed systems. This paper identifies the shortcomings of the current approaches, most notably the critical path computation and the trace file transfer between nodes. Then, this paper proposes new solutions to these drawbacks, most notably a distributed algorithm to compute the critical path, that does not aggregate all traces in a single node, and an efficient architecture to perform tracing on distributed systems. These new solutions are made publically available.
C1 [Denys, Pierre-Frederick; Fournier, Quentin; Dagenais, Michel R.] Polytech Montreal, Comp Engn, Quebec City, PQ, Canada.
   [Denys, Pierre-Frederick] Polytech Montreal, Comp Engn, Quebec City, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Montreal;
   Polytechnique Montreal
RP Denys, PF (corresponding author), Polytech Montreal, Comp Engn, Quebec City, PQ H3T 1J4, Canada.
EM pierre-frederick.denys@polymtl.ca
RI Fournier, Quentin/JQV-9593-2023
OI Fournier, Quentin/0000-0002-1036-0777; DENYS,
   Pierre-Frederick/0000-0002-7348-5120
FU Advanced Micro Devices; Ciena; EfficiOS; Ericsson; Natural Sciences
   andEngineering Research Council of Canada; Promp
FX Advanced Micro Devices; Ciena; EfficiOS;Ericsson; Natural Sciences
   andEngineering Research Council of Canada;Promp
CR Aguilera MK, 2008, PROC VLDB ENDOW, V1, P598
   Ball T, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P46, DOI 10.1109/MICRO.1996.566449
   Barford P, 2001, ACM SIGCOMM COMP COM, V31, P80, DOI 10.1145/844193.844200
   Bertauld T, 2017, EURASIP J EMBED SYST, DOI 10.1186/s13639-016-0067-1
   Chan A, 2008, SCI PROGRAMMING-NETH, V16, P155, DOI [10.3233/SPR-2008-0252, 10.1155/2008/749874]
   Chanas S, 2001, FUZZY SET SYST, V122, P195, DOI 10.1016/S0165-0114(00)00076-2
   Piao YCK, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21165560
   Chen YL, 1997, EUR J OPER RES, V100, P122, DOI 10.1016/S0377-2217(96)00140-3
   Denys P-F., 2021, ADV TRACING METHODS
   DESNOYERS M., 2009, LOW IMPACT OPERATING
   Desnoyers M., 2006, OLS OTT LIN S
   Eaton Brian, 2022, ACM Queue, V20, P40, DOI 10.1145/3526967
   Giraldeau F, 2016, IEEE T PARALL DISTR, V27, P2450, DOI 10.1109/TPDS.2015.2488629
   Graefe G., 2011, 2011 IEEE 27 INT C D
   Jasika N., 2012, P 35 INT CONV MIPRO
   Lamport L., 2019, Concurrency: The Works of Leslie Lamport, P179, DOI DOI 10.1145/3335772.3335934
   Las-Casas P., 2019, SOCC 19, DOI [10.1145/3357223.3362736, DOI 10.1145/3357223.3362736]
   Mallanna S., 2020, Int. J. Comput. Appl, V975, P8887
   Menascé DA, 2005, IEEE INTERNET COMPUT, V9, P90, DOI 10.1109/MIC.2005.42
   Montplaisir A, 2013, LECT NOTES COMPUT SC, V8174, P219, DOI 10.1007/978-3-642-40787-1_13
   Morrison J., 2021, CRISP CRITICAL PATH
   NASUTION SH, 1994, IEEE T SYST MAN CYB, V24, P48, DOI 10.1109/21.259685
   Nemati H., 2019, IEEE T CLOUD COMPUT, P1
   Noeth M., 2007, 2007 IEEE INT PAR DI
   Piao YCK., 2022, THESIS ECOLE POLYTEC
   Poirier Benjamin, 2010, Operating Systems Review, V44, P75, DOI 10.1145/1842733.1842747
   Prieur-Drevon L., 2021, THESIS ECOLE POLYTEC
   Qilin L., 2010, 2010 INT FOR INF TEC
   Rodriguez-Echeverria R., 2018, P 21 ACM IEEE INT C
   Schulz M., 2005, 2005 IEEE INT C CLUS
   Tobey A., 2022, Tracing Bare Metal with {OpenTelemetry}
   Toupin D, 2011, IEEE SOFTWARE, V28, P87, DOI 10.1109/MS.2011.20
   Tullsen DM., 1998, COMPUTING CRITIAL PA
   Vinoski S, 2002, IEEE INTERNET COMPUT, V6, P83, DOI 10.1109/4236.991448
   WILLIS RJ, 1985, EUR J OPER RES, V21, P149, DOI 10.1016/0377-2217(85)90026-8
   Wu C., 2000, SC 00 P 2000 ACM IEE
   Yang C-Q., 1988, P 8 INT C DISTR
NR 37
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2023
VL 53
IS 8
BP 1722
EP 1737
DI 10.1002/spe.3210
EA MAY 2023
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L1MX2
UT WOS:000980553700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Mehboob, B
   Chong, CY
AF Mehboob, Bilal
   Chong, Chun Yong
TI A metadata driven process for assessing stability and reusability based
   on risk of change of software systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
ID OBJECT-ORIENTED SOFTWARE; METRICS
AB Measuring and estimating the reusability of software components are important steps toward finding reusable candidates. Reuse of software components can aid in the reduction of the development cost of new software or maintenance of existing ones. However, assessing the reusability of software is a challenging task. Even if reusable candidates can be identified, developers will need to decide on the reuse strategies, that is, reuse as it is without any modification, or introduce new changes to the reusable candidate to fulfill requirements in the new environment or releases. Thus, the stability of the reusable candidates plays a pivotal role because it will influence the ease of reuse. Assessing and predicting the stability of potential reusable candidates becomes a significant and important step in software reuse. In this research, we propose to leverage on risk of change as a proxy to measure software stability, where the latter is also a proxy measure for software reuse. Based on experiments conducted on 29 open-source software with different sizes and application types hosted on GitHub, we found that classes with high impact and high risk of change should be avoided from being reused due to their instability, while those classes with low impact and risk of change should be given priority. The proposed work can aid in providing a better understanding of the ease of reuse for software systems and can be used as a tool to assess its overall quality.
C1 [Mehboob, Bilal; Chong, Chun Yong] Monash Univ Malaysia, Sch Informat Technol, Bandar Sunway, Selangor Darul, Malaysia.
   [Chong, Chun Yong] Monash Univ Malaysia, Sch Informat Technol, Jalan Lagoon Selatan, Bandar Sunway 47500, Selangor Darul, Malaysia.
C3 Monash University; Monash University Malaysia; Monash University; Monash
   University Malaysia
RP Chong, CY (corresponding author), Monash Univ Malaysia, Sch Informat Technol, Jalan Lagoon Selatan, Bandar Sunway 47500, Selangor Darul, Malaysia.
EM bilal.mehboob@monash.edu; chong.chunyong@monash.edu
RI Chong, Chun Yong/G-5067-2015
OI Chong, Chun Yong/0000-0003-1164-0049
FU Ministry of Higher Education, Malaysia [FRGS/1/2018/ICT01/MUSM/03/1]
FX Ministry of Higher Education, Malaysia, Grant/Award Number:
   FRGS/1/2018/ICT01/MUSM/03/1
CR Ajayi OO., 2019, 2019 IEEE AFRICON
   Alkadhi R, 2017, IEEE WORK CONF MIN S, P436, DOI 10.1109/MSR.2017.43
   Almugrin S, 2016, J SYST SOFTWARE, V121, P298, DOI 10.1016/j.jss.2016.02.024
   Arango G., 1994, P 1994 ACM S APPL CO
   Askari M., 2006, Proceedings of the International Workshop on Mining Software Repositories, P126
   Bahsoon R., 2009, OTM CONFEDERATED INT
   Baset AZ., 2017, 2017 IEEE SECURITY P
   Behnamghader P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P251, DOI 10.1109/QRS.2017.36
   Bouktif S, 2014, ACM TRANS MANAG INF, V5, DOI 10.1145/2555596
   Braun C.L., 1994, NATO STANDARD DEV RE, V1/3
   Capilla R, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2217
   Chong CY., 2018, INT C SOFTWARE TECHN
   Chong CY., 2018, INT C SOFTWARE DATA
   Constantinou E, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1580, DOI 10.1145/2695664.2695895
   Constantinou E, 2015, J SYST SOFTWARE, V107, P142, DOI 10.1016/j.jss.2015.05.065
   Coppendale J., 1995, Engineering Management Journal, V5, P35, DOI 10.1049/em:19950103
   Dantas F., 2010, 2010 BRAZILIAN S SOF
   Devanbu PT, 2000, IEEE T SOFTWARE ENG, V26, P423, DOI 10.1109/TSE.2000.846299
   Diamantopoulos T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P488, DOI [10.1109/MSR.2016.061, 10.1145/2901739.2903492]
   Ekanem BA., 2016, INT J COMPUT APPL, V134, P22
   Elish MO, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P193, DOI 10.1109/CSMR.2003.1192427
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Ferzund J., 2009, 2009 IEEE INT C SOFT
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Fu Y, 2012, INT J PROJ MANAG, V30, P363, DOI 10.1016/j.ijproman.2011.08.004
   Giffin M, 2009, J MECH DESIGN, V131, DOI 10.1115/1.3149847
   Gill N., 2006, ACM SIGSOFT Software Engineering Notes, V31, P1, DOI [10.1145/1108768.1108771, DOI 10.1145/1108768.1108771]
   Grosser D, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P252, DOI 10.1109/METRIC.2003.1232472
   Guzman E., 2014, Association for Computing Machinery, P352
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Jazayeri M., 2002, INT C RELIABLE SOFTW
   Kakarontzas G, 2013, J SYST SOFTWARE, V86, P349, DOI 10.1016/j.jss.2012.08.041
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kelly D, 2006, IEEE T SOFTWARE ENG, V32, P315, DOI 10.1109/TSE.2006.42
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Madeyski L, 2017, IEEE WORK CONF MIN S, P515, DOI 10.1109/MSR.2017.46
   Mahdy AM, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P18, DOI 10.1109/IRI.2004.1431430
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Mehboob B., 2022, DATA METADATA DRIVEN
   Mehboob B, 2021, SOFTWARE PRACT EXPER, V51, P1416, DOI 10.1002/spe.2961
   Mija M., 2015, 6 CENTRAL EUROPEAN C
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   Namiki, 2012, REUSABILITY METRICS
   Padhy N, 2018, COMPUT ELECTR ENG, V69, P653, DOI 10.1016/j.compeleceng.2017.11.022
   Papamichail MD, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110423
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Paschali ME, 2017, J SYST SOFTWARE, V134, P211, DOI 10.1016/j.jss.2017.09.009
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Santos Danilo B., 2017, Journal of Software, V12, P19, DOI 10.17706/jsw.12.1.19-34
   Santos EA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P504, DOI [10.1109/MSR.2016.065, 10.1145/2901739.2903493]
   Sinha V., 2016, P 13 INT C MINING SO
   Soto M, 2017, IEEE WORK CONF MIN S, P483, DOI 10.1109/MSR.2017.34
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tamisier T., 2013, INT C COOPERATIVE DE
   Wu WZ, 2008, INFORM SCIENCES, V178, P1355, DOI 10.1016/j.ins.2007.10.006
   Yang X., 2016, P 13 INT C MINING SO
   YAU SS, 1988, IEEE T SOFTWARE ENG, V14, P1128, DOI 10.1109/32.7624
   Yeow Matthew Yit Hang, 2022, MaLTeSQuE 2022: Proceedings of the 6th International Workshop on Machine Learning Techniques for Software Quality Evaluation, P17, DOI 10.1145/3549034.3561177
NR 60
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2023
VL 53
IS 5
BP 1218
EP 1248
DI 10.1002/spe.3187
EA FEB 2023
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C0ZX8
UT WOS:000928881800001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ballarín, M
   Arcega, L
   Pelechano, V
   Cetina, C
AF Ballarin, Manuel
   Arcega, Lorena
   Pelechano, Vicente
   Cetina, Carlos
TI On the influence of architectural languages on requirements traceability
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architectural languages; architecture description language; requirement
   traceability; software maintenance
ID SPECIFICATION; TESTS
AB Today, a considerable number of Architectural Languages (ALs) have been proposed for specifying and analyzing the architecture of software systems. Despite the popularity of different ALs, how ALs influence software system maintainability has not received much attention. One of the most important tasks in software maintenance is requirements traceability. Requirements traceability establishes links between requirements and other software artifacts, facilitating system maintenance. In this paper, we analyze the influence of ALs on requirements traceability. Taking into account the ALs used by the industry, we analyze how ALs influence traceability among requirements and architecture models. We conducted an evaluation with our industrial partner CAF. The results show significant differences in AL performance. We also analyze the results in terms of AL concepts, requirements model elements, and AL type in order to understand the performance differences. General-Purpose/Research Languages achieve the best results for all of the performance indicators, providing a mean precision value of 0.51, a recall value of 0.38, a combined F-measure of 0.40, and an Matthews Correlation Coefficient value of 0.33. Those ALs that influence engineers to use more generic and domain-independent terms to specify their architectures obtain the best results during requirements traceability. Our results have the potential to help AL designers to improve their languages and also to help practitioners make a more informed decision about whether or not a given AL meets their traceability needs.
C1 [Ballarin, Manuel; Arcega, Lorena; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
   [Pelechano, Vicente] Univ Politecn Valencia, Ctr Invest Metodos Prod Software ProS, Valencia, Spain.
C3 Universidad San Jorge; Universitat Politecnica de Valencia
RP Ballarín, M (corresponding author), Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
EM mballarin@usj.es
RI Arcega, Lorena/AAA-8929-2022
OI Arcega, Lorena/0000-0002-2464-8894
FU Secretaria de Estado de Investigacion, Desarrollo e Innovacion; 
   [RTI2018-096411-B-I00]
FX Secretaria de Estado de Investigacion, Desarrollo e Innovacion,
   Grant/Award Number: RTI2018-096411-B-I00
CR Abbors F, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN SYSTEM TESTING AND VALIDATION LIFECYCLE, P123, DOI 10.1109/VALID.2009.15
   Abeles P., 2010, EFFICIENT JAVA MATRI
   Al-Saiyd N., 2015, EUR J SCI RES, V136, P62
   Amjad A, 2021, INT BHURBAN C APPL S, P389, DOI 10.1109/IBCAST51254.2021.9393223
   [Anonymous], 2010, APACHE OPENNLP MACHI
   [Anonymous], 1998, ACME
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Beauvoir, 2019, ARCHI OPEN SOURCE AR
   Becker, 2011, PALLADIO COMPONENT M
   Becker S., 2008, Q IMPRESS PROJECT DE
   BELINA F, 1989, COMPUT NETWORKS ISDN, V16, P311, DOI 10.1016/0169-7552(89)90078-0
   Bellissard L., 2000, OLAN ARCHITECTURE DE, P24
   Bettin J., 2009, KNOWLEDGE IND SURVIV, P709
   Blom Hans, 2013, Embedded Computing Systems: Applications, Optimization, and Advanced Design: Applications, Optimization, and Advanced Design, P456, DOI [10.4018/978- 1- 4666- 3922-5.ch023, DOI 10.4018/978-1-4666-3922-5.CH023]
   Booch G., 2005, The Unified Modeling Language User Guide
   Bouquet F., 2005, ACM SIGSOFT Software Engineering Notes, V30, P1
   Carmichael A. R., 1992, TRI-Ada '92 Proceedings, P211, DOI 10.1145/143557.143721
   Cleland-Huang J, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P289, DOI 10.1109/ICRE.2002.1048540
   Consortium O., 2013, MIND PROJECT
   Dashofy EM, 2005, ACM T SOFTW ENG METH, V14, P199, DOI 10.1145/1061254.1061258
   Dashofy E, 2007, PROC INT CONF SOFTW, P67, DOI 10.1109/ICSECOMPANION.2007.21
   Debruyne V, 2005, ARCHITECTURE DESCRIP, P181, DOI DOI 10.1007/0-387-24590-1_12
   Delater Alexander, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P25, DOI 10.1109/ESEM.2013.16
   Deltour J, 2014, LECT NOTES COMPUT SC, V8769, P198, DOI 10.1007/978-3-319-11743-0_14
   Eaddy M., 2007, 1 INT WORKSHOP ASSES, P2, DOI [10.1109/ACOM.2007.4, DOI 10.1109/ACOM.2007.4]
   Eyal-Salman H., 2014, SEKE: Software Engineering and Knowledge Engineering, P426
   Feiler P., 2019, The open source aadl tool environment (osate)
   Feiler PH., 2003, SAE ARCHITECTURE ANA, P1
   Fritzson P., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P67, DOI 10.1007/BFb0054087
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Grau A., 2002, PROJECT REPORT
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Han J, 2001, AUST COMP S, V23, P60, DOI 10.1109/ACSC.2001.906624
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Khare R., 2001, Proceedings of the 34th Annual Hawaii International Conference on System Sciences, DOI 10.1109/HICSS.2001.927248
   Lago P, 2015, IEEE SOFTWARE, V32, P98, DOI 10.1109/MS.2014.28
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lankhorst MM, 2010, INT J INF SYST MODEL, V1, P1, DOI 10.4018/jismd.2010092301
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P336, DOI 10.1109/32.385971
   Magee J., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P137
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Martin JN., 2021, 42010 ISOIEC, P1363
   Medvidovic N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P471, DOI 10.1145/1810295.1810435
   Medvidovic N, 2006, EUROMICRO CONF PROC, P2, DOI 10.1109/EUROMICRO.2006.47
   Mishra P, 2005, IEE P-COMPUT DIG T, V152, P285, DOI 10.1049/ip-cdt:20045071
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Ozkaya M., 2018, J AERONAUTICS SPACE, V11, P119
   Ozkaya M, 2018, SOFTWARE PRACT EXPER, V48, P985, DOI 10.1002/spe.2561
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Rempel P, 2017, IEEE T SOFTWARE ENG, V43, P777, DOI 10.1109/TSE.2016.2622264
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salton G, 1986, Introduction to Modern Information Retrieval
   Schmerl B, 2004, PROC INT CONF SOFTW, P704, DOI 10.1109/ICSE.2004.1317497
   Schriber TJ, 2013, WINT SIMUL C PROC, P424, DOI 10.1109/WSC.2013.6721439
   Shahid M., 2013, ASIAN ACAD RES J MUL, V1, P159
   SHERBA S.A., 2003, Second International Software Requirements to Architectures Workshop (STRAW 03), P150
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Tian FC, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2374
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   vantWout J, 2010, INTEGRATED ARCHITECTURE FRAMEWORK EXPLAINED: WHY, WHAT, HOW, P1
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   WALLNAU K, 2003, SNAPSHOT CCL LANGUAG
   Wang F, 2020, IEEE T RELIAB, V69, P154, DOI 10.1109/TR.2019.2936072
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Yourdon E., 1989, MODERN SYSTEMS ANAL
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
   Zisman A, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P448
NR 74
TC 0
Z9 0
U1 3
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 704
EP 728
DI 10.1002/spe.3166
EA NOV 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000891030700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Fritzsch, J
   Bogner, J
   Haug, M
   da Silva, ACF
   Rubner, C
   Saft, M
   Sauer, H
   Wagner, S
AF Fritzsch, Jonas
   Bogner, Justus
   Haug, Markus
   da Silva, Ana Cristina Franco
   Rubner, Carolin
   Saft, Matthias
   Sauer, Horst
   Wagner, Stefan
TI Adopting microservices and DevOps in the cyber-physical systems domain:
   A rapid review and case study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE case study; cyber-physical systems; DevOps; interviews; microservices;
   rapid review
ID CHALLENGES; ARCHITECTURES; INTERNET; THINGS
AB The domain of cyber-physical systems (CPS) has recently seen strong growth, for example, due to the rise of the Internet of Things (IoT) in industrial domains, commonly referred to as "Industry 4.0." However, CPS challenges like the strong hardware focus can impact modern software development practices, especially in the context of modernizing legacy systems. While microservices and DevOps have been widely studied for enterprise applications, there is insufficient coverage for the CPS domain. Our goal is therefore to analyze the peculiarities of such systems regarding challenges and practices for using and migrating towards microservices and DevOps. We conducted a rapid review based on 146 scientific papers, and subsequently validated our findings in an interview-based case study with nine CPS professionals in different business units at Siemens AG. The combined results picture the specifics of microservices and DevOps in the CPS domain. While several differences were revealed that may require adapted methods, many challenges and practices are shared with typical enterprise applications. Our study supports CPS researchers and practitioners with a summary of challenges, practices to address them, and research opportunities.
C1 [Fritzsch, Jonas; Bogner, Justus; Haug, Markus; da Silva, Ana Cristina Franco; Wagner, Stefan] Univ Stuttgart, Inst Software Engn, Univ Str 38, D-70569 Stuttgart, Germany.
   [Rubner, Carolin; Saft, Matthias; Sauer, Horst] Siemens AG, Siemens Technol, Munich, Germany.
C3 University of Stuttgart; Siemens AG; Siemens Germany
RP Fritzsch, J (corresponding author), Univ Stuttgart, Inst Software Engn, Univ Str 38, D-70569 Stuttgart, Germany.
EM jonas.fritzsch@iste.uni-stuttgart.de
RI Bogner, Justus/AAC-9594-2019; Wagner, Stefan/A-5200-2018
OI Bogner, Justus/0000-0001-5788-0991; Wagner, Stefan/0000-0002-5256-8429;
   Franco da Silva, Ana Cristina/0000-0001-8549-350X; Fritzsch,
   Jonas/0000-0002-6121-2731
CR Banica L, 2018, KNE SOC SCI, P250, DOI 10.18502/kss.v3i10.3542
   Baskarada S, 2020, J COMPUT INFORM SYST, V60, P428, DOI 10.1080/08874417.2018.1520056
   Bogner J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09999-9
   Bogner J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P187, DOI 10.1109/ICSA-C.2019.00041
   Broy M, 2014, COMPUTER, V47, P70, DOI 10.1109/MC.2014.30
   Campeanu G, 2018, MEDD C EMBED COMPUT, P85
   Cartaxo B., 2020, Rapid Reviews in Software Engineering, P357
   Ciavotta M., 2020, MICROSERVICES
   Combemale B., 2020, P LNCS LECT NOTES CO, V12055
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Fahmideh M., 2021, IEEE T MICROW THEORY, P1, DOI DOI 10.1109/TSE.2021.3070692
   Fowler M., 2004, STRANGLER APPL
   Fowler M., 2015, MICROSERVICES RESOUR
   Fritzsch J., 2019, P 2019 IEEE INT C SO
   Fritzsch J, 2022, Arxiv, DOI arXiv:2207.00507
   Fritzsch J, 2019, LECT NOTES COMPUT SC, V11350, P128, DOI 10.1007/978-3-030-06019-0_10
   Gartner, 2020, GARTN 2020 HYP CYCL
   Hasselbring W, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P123, DOI 10.1109/ICSA-C.2019.00029
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Ibarra-Junquera V, 2021, IEEE ACCESS, V9, P58192, DOI 10.1109/ACCESS.2021.3072040
   Jiang YX, 2018, IEEE NETWORK, V32, P122, DOI 10.1109/MNET.2017.1700271
   Joseph CT, 2019, SOFTWARE PRACT EXPER, V49, P1448, DOI 10.1002/spe.2729
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Knoche H, 2019, ENTERP MODELLING INF, V14, DOI 10.18417/emisa.14.1
   Lasi H, 2014, BUS INFORM SYST ENG+, V6, P239, DOI 10.1007/s12599-014-0334-4
   Li F, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234196
   Matias T, 2020, LECT NOTES COMPUT SC, V12292, P315, DOI 10.1007/978-3-030-58923-3_21
   Mizutani I., 2021, P 11 INT C INTERNET
   Pereira IM., 2021, P 36 ANN ACM S APPL
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Ponce F., 2019, P INT C CHIL COMPUT
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB., 2008, GUIDE ADV EMPIRICAL, P35
   Taibi D., 2019, CLOSER 2018 CCIS, P126, DOI DOI 10.1007/978-3-030-29193-8
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Torngren M., 2018, Designs, V2, P40, DOI [DOI 10.3390/DESIGNS2040040, 10.3390/designs2040040]
   Torngren M., 2018, LNCS LECT NOTES COMP, V10760
   Vale G, 2022, IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2022), P69, DOI 10.1109/ICSA53651.2022.00015
   Villari M, 2016, IEEE CLOUD COMPUT, V3, P76, DOI 10.1109/MCC.2016.124
   Waseem M, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110798
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Zhang H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P51, DOI 10.1109/ICSA.2019.00014
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
NR 43
TC 4
Z9 4
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 790
EP 810
DI 10.1002/spe.3169
EA NOV 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000888428500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Krzywaniak, A
   Czarnul, P
   Proficz, J
AF Krzywaniak, Adam
   Czarnul, Pawel
   Proficz, Jerzy
TI DEPO: A dynamic energy-performance optimizer tool for automatic power
   capping for energy efficient high-performance computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automatic power capping; green computing; HPC; performance-energy
   trade-off; software tools
ID CONSUMPTION; MANAGEMENT; SIMULATION; EXECUTION; TIME
AB In the article we propose an automatic power capping software tool DEPO that allows one to perform runtime optimization of performance and energy related metrics. For an assumed application model with an initialization phase followed by a running phase with uniform compute and memory intensity, the tool performs automatic tuning engaging one of the two exploration algorithms-linear search (LS) and golden section search (GSS), finds a power cap optimizing a given metric and sets it for the remaining computations. The considered metrics include energy (E), energy-delay sum, energy-delay product. We present experimental results obtained for a set of benchmarks that differ in compute and memory intensity-parallel custom built OpenMP implementations of: numerical integration, heat distribution simulation (HEAT), fast Fourier transform (FFT), and additionally NAS parallel benchmarks: CG, MG, BT, SP, and LU. Tests were performed using multi-core CPUs that are representatives of modern servers and the desktop family: 2 x$$ \times $$ Intel Xeon E5-2670 v3 CPU (Haswell-EP) and Intel i7-9700K CPU (Coffee Lake). The results show that our approach enabled considerable improvements for the tested metrics, for example, for HEAT and Coffee Lake we minimized energy by 50% at the cost of a 15% increase in execution time (LS), for FFT energy was minimized by 40% at a 25.5% increase in execution time (GSS), for SP and Haswell energy was minimized by 25% at the cost of an 18.5% time increase and for Coffee Lake energy was decreased by 56% with a 12% time increase.
C1 [Krzywaniak, Adam; Czarnul, Pawel] Gdansk Univ Technol, Fac Elect Telecommun & Informat, Dept Comp Architecture, Narutowicza 11-12, PL-80233 Gdansk, Poland.
   [Proficz, Jerzy] Gdansk Univ Technol, Ctr Informat Tric Acad Supercomp & NetworK CI Tas, Gdansk, Poland.
C3 Fahrenheit Universities; Gdansk University of Technology; Fahrenheit
   Universities; Gdansk University of Technology
RP Krzywaniak, A (corresponding author), Gdansk Univ Technol, Fac Elect Telecommun & Informat, Dept Comp Architecture, Narutowicza 11-12, PL-80233 Gdansk, Poland.
EM adam.krzywaniak@pg.edu.pl
RI Proficz, Jerzy/H-2628-2012; Krzywaniak, Adam/HNB-6060-2023; Czarnul,
   Pawel/K-5094-2012
OI Czarnul, Pawel/0000-0002-4918-9196; Krzywaniak, Adam/0000-0003-1904-2510
CR AMD, 2015, BIOS KERN DEV GUID B
   Amico J. C., 2021, IEEE Trans. Parallel Distrib. Syst., DOI [10.1109/TPDS.2021.3090334, DOI 10.1109/TPDS.2021.3090334]
   [Anonymous], HPE METERED POWER DI
   [Anonymous], HPE FLEXIBLE SLOT PO
   BAILEY DH, 1991, INT J SUPERCOMPUT AP, V5, P63, DOI 10.1177/109434209100500306
   BALDUCCI M, 1996, COMP ANAL FFT ALGORI
   Berned GP, 2021, J SYST ARCHITECT, V114, DOI 10.1016/j.sysarc.2020.101959
   Bodas D, 2014, 2014 ENERGY EFFICIENT SUPERCOMPUTING WORKSHOP (E2SC), P21, DOI 10.1109/E2SC.2014.8
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Calore Enrico, 2020, Parallel Processing and Applied Mathematics. 13th International Conference, PPAM 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12044), P169, DOI 10.1007/978-3-030-43222-5_15
   Chetsa GLT, 2014, FUTURE GENER COMP SY, V36, P287, DOI 10.1016/j.future.2013.07.010
   Conoci S, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.6205
   Czarnul P, 2019, SCI PROGRAMMING-NETH, V2019, DOI 10.1155/2019/8348791
   Czarnul P, 2017, SIMUL MODEL PRACT TH, V77, P124, DOI 10.1016/j.simpat.2017.05.009
   Czarnul P, 2016, ACSIS-ANN COMPUT SCI, V8, P855, DOI 10.15439/2016F308
   Czarnul P, 2014, LECT NOTES COMPUT SC, V8314, P66, DOI 10.1007/978-3-642-45249-9_5
   David Howard, 2010, Proceedings of the 16th ACM/IEEE International Symposium on Low Power Electronics and Design (ISLPED 2010), P189, DOI 10.1145/1840845.1840883
   De Sensi D, 2016, ACM T ARCHIT CODE OP, V13, DOI 10.1145/3004054
   Desrochers S, 2016, MEMSYS 2016: PROCEEDINGS OF THE INTERNATIONAL SYMPOSIUM ON MEMORY SYSTEMS, P455, DOI 10.1145/2989081.2989088
   Fahad M, 2019, ENERGIES, V12, DOI 10.3390/en12112204
   Fisher N, 2009, 15TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATION SYMPOSIUM: RTAS 2009, PROCEEDINGS, P131, DOI 10.1109/RTAS.2009.34
   Fukazawa K, 2014, IEEE ACM INT SYMP, P612, DOI 10.1109/CCGrid.2014.47
   Ge R, 2013, PROC INT CONF PARAL, P826, DOI 10.1109/ICPP.2013.98
   Gholkar N, 2018, HPDC '18: PROCEEDINGS OF THE 27TH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE PARALLEL AND DISTRIBUTED COMPUTING, P106, DOI 10.1145/3208040.3208047
   Gonzalez R, 1996, IEEE J SOLID-ST CIRC, V31, P1277, DOI 10.1109/4.535411
   Hackenberg D, 2015, 2015 IEEE 29TH INTERNATIONAL PARALLEL AND DISTRIBUTED PROCESSING SYMPOSIUM WORKSHOPS, P896, DOI 10.1109/IPDPSW.2015.70
   Hahnel Marcus, 2012, Performance Evaluation Review, V40, P13
   Haidar A, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.4485
   Huazhe Zhang, 2016, ACM SIGPLAN Notices, V51, P545, DOI 10.1145/2954679.2872375
   Imes C, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING (ICAC 2019), P31, DOI 10.1109/ICAC.2019.00015
   Intel Corporation, PROC COUNT MON
   Khan KN, 2018, ACM TRANS MODELING P, V3, DOI 10.1145/3177754
   KIEFER J, 1953, P AM MATH SOC, V4, P502, DOI 10.2307/2032161
   Kolodziej J, 2013, CLUSTER COMPUT, V16, P591, DOI 10.1007/s10586-012-0226-7
   Komoda T, 2013, 2013 IEEE 31ST INTERNATIONAL CONFERENCE ON COMPUTER DESIGN (ICCD), P349, DOI 10.1109/ICCD.2013.6657064
   Krawczyk H, 2015, POL MARIT RES, V22, P99, DOI 10.1515/pomr-2015-0062
   Krzywaniak Adam, 2019, 2019 International Conference on High Performance Computing & Simulation (HPCS), P440, DOI 10.1109/HPCS48598.2019.9188149
   Krzywaniak Adam, 2020, Parallel Processing and Applied Mathematics. 13th International Conference, PPAM 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12044), P123, DOI 10.1007/978-3-030-43222-5_11
   Krzywaniak A., 2022, LECT NOTES COMPUTER
   Krzywaniak A, 2018, FED CONF COMPUT SCI, P339, DOI 10.15439/2018F177
   Kuo HC, 2009, 2009 IEEE/ACM/IFIP 7TH WORKSHOP ON EMBEDDED SYSTEMS FOR REAL-TIME MULTIMEDIA, P1, DOI 10.1109/ESTMED.2009.5336823
   Landry G, 2015, 23RD EUROMICRO INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED, AND NETWORK-BASED PROCESSING (PDP 2015), P62, DOI 10.1109/PDP.2015.18
   Langer A., 2015, P 6 INT WORKSH PROGR, P11, DOI [10.1145/2712386.2712396, DOI 10.1145/2712386.2712396]
   Laros III James, 2013, Energy-Efficient High Performance Computing: Measurement and Tuning, P51
   Li T., 2014, P 11 ACM C COMPUTING
   Liu YP, 2010, SOFTWARE PRACT EXPER, V40, P943, DOI 10.1002/spe.952
   Martin AJ, 2002, S COMP SCI, P293
   Mishra N, 2015, ACM SIGPLAN NOTICES, V50, P267, DOI [10.1145/2694344.2694373, 10.1145/2775054.2694373]
   Moore J, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK: 2005 UNENIX ANNUAL TECHNICAL CONFERENCE, P61
   Peraza J, 2016, CONCURR COMP-PRACT E, V28, P211, DOI 10.1002/cpe.3184
   Proficz J, 2016, LECT NOTES COMPUT SC, V9574, P199, DOI 10.1007/978-3-319-32152-3_19
   Rajagopal D, 2017, INT C HIGH PERFORM, P142, DOI 10.1109/HiPC.2017.00025
   Roberts SI, 2017, LECT NOTES COMPUT SC, V10266, P413, DOI 10.1007/978-3-319-58667-0_22
   Rountree B, 2012, IEEE SYM PARA DISTR, P947, DOI 10.1109/IPDPSW.2012.116
   Sanders J., 2010, CUDA EXAMPLE INTRO G
   Sourouri M., 2017, P INT C HIGH PERFORM, P41
   Stahlke D., GNUPLOT IOSTREAM
   Szustak L, 2020, IEEE T PARALL DISTR, V31, P2582, DOI 10.1109/TPDS.2020.2996314
   Tiwari A, 2015, 2015 IEEE 29TH INTERNATIONAL PARALLEL AND DISTRIBUTED PROCESSING SYMPOSIUM WORKSHOPS, P951, DOI 10.1109/IPDPSW.2015.146
   Tiwari A, 2012, SECOND INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING / SECOND INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING AND ITS APPLICATIONS (CGC/SCA 2012), P260, DOI 10.1109/CGC.2012.62
   Tiwari N, 2018, SOFTWARE PRACT EXPER, V48, P1660, DOI 10.1002/spe.2599
   Unni Bhavyasree., 2013, CSI T ICT, V1, P175, DOI [DOI 10.1007/S40012-013-0012-6, DOI 10.1007/s40012-013-0012-6]
   Villa O, 2019, MICRO'52: THE 52ND ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, P372, DOI 10.1145/3352460.3358307
   Vysocky O, 2018, LECT NOTES COMPUT SC, V11087, P144, DOI 10.1007/978-3-319-97136-0_11
   Wang YM, 2022, IEEE T PARALL DISTR, V33, P751, DOI 10.1109/TPDS.2021.3092270
   Wang Z., 2015, P INT S QUALITY ELEC
   Ware Malcolm, 2010, 2010 IEEE 16th International Symposium on High Performance Computer Architecture (HPCA), DOI 10.1109/ITAB.2010.5687690
   Wu XF, 2016, COMPUTER, V49, P20, DOI 10.1109/MC.2016.311
   Zhou JL, 2016, IEEE T COMPUT AID D, V35, P1269, DOI 10.1109/TCAD.2015.2501286
   Zhu Q, 2017, INT PARALL DISTRIB P, P967, DOI 10.1109/IPDPS.2017.124
NR 70
TC 4
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2022
VL 52
IS 12
BP 2598
EP 2634
DI 10.1002/spe.3139
EA AUG 2022
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A1NL
UT WOS:000840390000001
DA 2024-07-18
ER

PT J
AU Wang, YZ
   Li, JF
   Zhou, LY
   Sun, JW
   Sun, GZ
AF Wang, Yunzhuo
   Li, Jianfeng
   Zhou, Liangying
   Sun, Jingwei
   Sun, Guangzhong
TI Multi-Net strategy: Accelerating physics-informed neural networks for
   solving partial differential equations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE neural networks; partial differential equations; scientific computing
ID NUMERICAL-SOLUTION; APPROXIMATION
AB Partial differential equations (PDEs) are the most ubiquitous tools for modeling natural science problems and have long received attention. Physics-informed neural networks (PINNs) are emerging approaches to approximately solve PDEs. PINNs use automatic differentiation technology to construct the residual of PDEs in the loss function to encode physics conservation laws. We call this process the Single-Net strategy. Due to the dependency of automatic differentiation among different orders of derivatives, the efficiency of PINNs under the Single-Net strategy is limited. To address this issue, we propose the Multi-Net strategy to decouple the dependency. Compared with the Single-Net strategy, the Multi-Net strategy reduces the training time of PINNs, and meanwhile, keeps the prediction accuracy. The effectiveness of the proposed strategy is demonstrated through time complexity analysis and a collection of experiments on Burgers equation, advection-dispersion equation, Kdv equation, and Allen-Cahn equation.
C1 [Wang, Yunzhuo; Li, Jianfeng; Zhou, Liangying; Sun, Jingwei; Sun, Guangzhong] Univ Sci & Technol China USTC, Sch Comp Sci & Technol, 96 Jinzhai Rd, Hefei, Anhui, Peoples R China.
   [Wang, Yunzhuo; Li, Jianfeng; Zhou, Liangying; Sun, Jingwei; Sun, Guangzhong] State Key Lab Processors SKLP, Hefei, Peoples R China.
C3 Chinese Academy of Sciences; University of Science & Technology of
   China, CAS
RP Sun, JW (corresponding author), Univ Sci & Technol China USTC, Sch Comp Sci & Technol, 96 Jinzhai Rd, Hefei, Anhui, Peoples R China.
EM sunjw@ustc.edu.cn
RI li, jy/HTT-1535-2023; Liu, Jing/IQX-0664-2023; Zhang,
   Jinfan/JPK-7588-2023; LI, JIAN/JAX-3092-2023; LI, JIAN/GRY-2197-2022;
   Li, Jing/GYU-5036-2022; qi, li/JFE-7167-2023; lin, lin/KCZ-0185-2024;
   li, jian/GSE-0245-2022; li, jian/IAQ-2794-2023; Zhang,
   Jun/JPK-7723-2023; LI, Jing/HNB-5575-2023
FU Youth Innovation Promotion Association of Chinese Academy of Sciences
FX This study was supported by Youth Innovation Promotion Association of
   Chinese Academy of Sciences.
CR Abadi M, ARXIV, DOI DOI 10.48550/ARXIV.1603.04467
   Bar-Sinai Y, 2019, P NATL ACAD SCI USA, V116, P15344, DOI 10.1073/pnas.1814058116
   Barmparis G., 2020, ARXIV
   Baydin AG, 2018, J MACH LEARN RES, V18
   Behler J, 2007, PHYS REV LETT, V98, DOI 10.1103/PhysRevLett.98.146401
   COLE JD, 1951, Q APPL MATH, V9, P225, DOI 10.1090/qam/42889
   de Bézenac E, 2019, J STAT MECH-THEORY E, V2019, DOI 10.1088/1742-5468/ab3195
   de Jager E.M., On the origin of the Korteweg-de Vries equation
   Doha EH, 2014, ADV DIFFER EQU-NY, DOI 10.1186/1687-1847-2014-231
   Haghighat E., 2020, DEEP LEARNING FRAMEW
   Han J, 2018, P NATL ACAD SCI USA, V115, P8505, DOI 10.1073/pnas.1718942115
   Jia X., 2019, P 2019 SIAM INT C DA, P558, DOI [DOI 10.1137/1.9781611975673.63, DOI 10.1137/1.9781611975673]
   Jia YQ, 2012, PROC CVPR IEEE, P3370, DOI 10.1109/CVPR.2012.6248076
   Karniadakis GE, 2021, NAT REV PHYS, V3, P422, DOI 10.1038/s42254-021-00314-5
   Kharazmi E., VARIATIONAL PHYS INF
   Lagaris IE, 1998, IEEE T NEURAL NETWOR, V9, P987, DOI 10.1109/72.712178
   Li DZ, 2020, WATER RESOUR RES, V56, DOI 10.1029/2019WR027032
   Lu L, 2021, NAT MACH INTELL, V3, P218, DOI 10.1038/s42256-021-00302-5
   Mai-Duy N, 2005, INT J NUMER METH ENG, V63, P1636, DOI 10.1002/nme.1332
   Mai-Duy N, 2002, ENG ANAL BOUND ELEM, V26, P133, DOI 10.1016/S0955-7997(01)00092-3
   Mai-Duy N, 2001, NEURAL NETWORKS, V14, P185, DOI 10.1016/S0893-6080(00)00095-2
   Mall S, 2017, NEURAL PROCESS LETT, V45, P825, DOI 10.1007/s11063-016-9551-9
   Meng XH, 2020, COMPUT METHOD APPL M, V370, DOI 10.1016/j.cma.2020.113250
   Pang GF, 2019, SIAM J SCI COMPUT, V41, pA2603, DOI 10.1137/18M1229845
   Patel RG., 2020, ARXIV
   Pfau D, 2020, PHYS REV RES, V2, DOI 10.1103/PhysRevResearch.2.033429
   Raissi M, 2019, J COMPUT PHYS, V378, P686, DOI 10.1016/j.jcp.2018.10.045
   Raissi M, 2020, SCIENCE, V367, P1026, DOI 10.1126/science.aaw4741
   Reichstein M, 2019, NATURE, V566, P195, DOI 10.1038/s41586-019-0912-1
   Rotskoff GM., LEARNING RARE DATA U
   Schütt KT, 2017, NAT COMMUN, V8, DOI 10.1038/ncomms13890
   Shukla K, 2020, J NONDESTRUCT EVAL, V39, DOI 10.1007/s10921-020-00705-1
   VANMILLIGEN BP, 1995, PHYS REV LETT, V75, P3594, DOI 10.1103/PhysRevLett.75.3594
   Wang R, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P1457, DOI 10.1145/3394486.3403198
   Wight CL., SOLVING ALLEN CAHN C
   Yang L., B PINNS BAYESIAN PHY
   Yang YB, 2019, J COMPUT PHYS, V394, P136, DOI 10.1016/j.jcp.2019.05.027
NR 37
TC 1
Z9 1
U1 3
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2022
VL 52
IS 12
BP 2513
EP 2536
DI 10.1002/spe.3136
EA AUG 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A1NL
UT WOS:000838721400001
DA 2024-07-18
ER

PT J
AU Jawaddi, SNA
   Johari, MH
   Ismail, A
AF Jawaddi, Siti Nuraishah Agos
   Johari, Muhammad Hamizan
   Ismail, Azlan
TI A review of microservices autoscaling with formal verification
   perspective
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE autoscaling; formal verification; microservice; probabilistic model
   checking; scalability
ID CLOUD
AB The process of scaling microservices is a challenging task, especially in maintaining optimum resource provisioning while respecting QoS constraints and SLA. Many research works have proposed autoscaling approaches for microservices, however, less likely concerned with the correctness guarantee of the proposed algorithms. Hence, it is significant to gather and summarize these approaches to foster future innovation. Meanwhile, a few reviews have been published concerning microservices from different aspects. Therefore, our review complements the existing by focusing on autoscaling with verification perspectives. This study highlights the recent contributions in three inter-related main topics that were published within the year 2017 to 2022, namely, microservice, verification, and autoscaling. Due to limited resources on verification for microservice autoscaling, we widen the perspective by considering the verification for autoscaling in cloud-based systems. Based on our findings, we found that the formal method is not a new thing in verifying the autoscaling policies in cloud-based systems, and one recent study that implements the formal method in the microservices area has been identified. Apart from the autoscaling techniques, we have also determined several factors that have been a concern in scaling the microservices as well as the relatable metrics. Meanwhile, from a verification perspective, we identified that probabilistic model checking is the common formal verification technique used to verify microservices and cloud autoscaling. Finally, we recommend open challenges from two perspectives which highlight the verification for existing microservice autoscaling and verification for ML-based microservice autoscaling.
C1 [Jawaddi, Siti Nuraishah Agos; Johari, Muhammad Hamizan; Ismail, Azlan] Univ Teknol MARA UiTM, Fac Comp & Math Sci, Shah Alam, Selangor, Malaysia.
   [Ismail, Azlan] Univ Teknol MARA UiTM, Inst Big Data Analyt & Artificial Intelligence IB, Shah Alam 40450, Selangor, Malaysia.
C3 Universiti Teknologi MARA; Universiti Teknologi MARA
RP Ismail, A (corresponding author), Univ Teknol MARA UiTM, Inst Big Data Analyt & Artificial Intelligence IB, Shah Alam 40450, Selangor, Malaysia.
EM azlanismail@uitm.edu.my
RI Ismail, Azlan/ABF-3524-2021
OI Ismail, Azlan/0000-0002-2535-6359; Agos Jawaddi, Siti
   Nuraishah/0000-0001-5739-2242
FU Ministry of Education Malaysia [FRGS/1/2018/ICT01/UITM/02/3]
FX Ministry of Education Malaysia, Grant/Award Number:
   FRGS/1/2018/ICT01/UITM/02/3
CR Abdullah M, 2021, IEEE SYST J, V15, P1275, DOI 10.1109/JSYST.2020.2997518
   Abdullah M, 2022, IEEE T SERV COMPUT, V15, P1448, DOI 10.1109/TSC.2020.2995937
   Abdullah M, 2019, INT CONF CLOUD COMP, P119, DOI 10.1109/CloudCom.2019.00028
   Aksakalli IK, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111014
   Al Jawarneh I., 2019, IEEE ICC, DOI [DOI 10.1109/icc.2019.8762053, 10.1109/ICC.2019.8762053, DOI 10.1109/ICC.2019.8762053]
   Aljoumah E, 2015, INT J GRID DISTRIB, V8, P7, DOI 10.14257/ijgdc.2015.8.5.02
   Almeida JoseBacelar., 2011, UNDERGRADUATE TOPICS
   [Anonymous], 2006, YICES SMT SOLVER
   [Anonymous], 1993, Kluwer, DOI DOI 10.1007/978-1-4615-3190-63
   Baier C, 2018, HDB MODEL CHECKING, P963, DOI [DOI 10.1007/978-3-319-10575-8, DOI 10.1007/978-3-319-10575-828, DOI 10.1007/978-3-319-10575-8_28]
   Barrett C, 2007, LECT NOTES COMPUT SC, V4590, P298
   Burroughs S., 2021, THESIS U WAIKATO
   Bushong V, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11177856
   Camilli M, 2020, EUROPEAN C SOFTWARE, P420
   Camilli M, 2018, LECT NOTES COMPUT SC, V10729, P187, DOI 10.1007/978-3-319-74781-1_14
   Casalicchio E, 2019, EAI SPRINGER INNOVAT, P221, DOI 10.1007/978-3-319-92378-9_14
   Cerny T, 2017, APPL COMPUT REV, V17, P29, DOI [10.1145/3129676.3129682, 10.1145/3183628.3183631]
   Chan W., 2000, LNCS, V1855, P450, DOI DOI 10.1007/10722167
   Chen T, 2013, LECT NOTES COMPUT SC, V7795, P185, DOI 10.1007/978-3-642-36742-7_13
   Chen X., 2022, IEEE ANTENN WIREL PR, P1, DOI DOI 10.1109/LAWP.2022.3210192
   Chondamrongkul N, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P79, DOI 10.1109/ICSA-C50368.2020.00024
   Clarke E.M., 2018, Handbook of Model Checking, DOI [DOI 10.1007/978-3-319-10575-8_1, 10.1007/978-3-319-10575-8_1]
   Conchon Sylvain., 2006, ERGO THEOREM PROVER
   Costello K., 2021, Gartner Forecasts Worldwide Public Cloud End-User Spending to Grow 23% in 2021
   Coulson NC, 2020, IEEE INTERNET THINGS, V7, P4195, DOI 10.1109/JIOT.2020.2964405
   Dai F, 2020, COMPLEXITY, V2020, DOI 10.1155/2020/2128793
   Dang-Quang NM, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11093835
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   de Nardin IF., 2021, PARALLEL COMPUT, V108, P1
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Desai V., 2020, International Journal for Research in Applied Science and Engineering Technology, V8, P679, DOI [DOI 10.22214/IJRASET.2020.31979, 10.22214/ijraset.2020.31979]
   Evangelidis A, 2018, FUTURE GENER COMP SY, V87, P629, DOI 10.1016/j.future.2017.12.047
   Fenjiro Y., 2018, J AUTOM MOB ROBOT IN, P20
   Forejt V, 2011, LECT NOTES COMPUT SC, V6659, P53, DOI 10.1007/978-3-642-21455-4_3
   Forejt V, 2011, LECT NOTES COMPUT SC, V6605, P112, DOI 10.1007/978-3-642-19835-9_11
   Fourati MH., 2020, ADV SCI TECHNOL ENG, V5, P972
   Gao J, 2011, IEEE ANTENNAS PROP, P634
   Ghani I, 2019, INT J INTEGR ENG, V11, P65, DOI 10.30880/ijie.2019.11.08.008
   Gias AU, 2019, INT CON DISTR COMP S, P1994, DOI 10.1109/ICDCS.2019.00197
   Gill SS, 2020, COMPUT SCI ENG, V22, P52, DOI 10.1109/MCSE.2018.2873866
   Goli A, 2021, CLOSER: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P190, DOI 10.5220/0010407701900198
   Gotin M, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P157, DOI 10.1145/3184407.3184430
   Goyal N, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P1253, DOI 10.1145/3366423.3380201
   Graiet M, 2017, FORM ASP COMPUT, V29, P987, DOI 10.1007/s00165-017-0425-3
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Gueffaz Mahdi, 2012, Journal of Software, V7, P1462, DOI 10.4304/jsw.7.7.1462-1472
   Hahn EM, 2010, LECT NOTES COMPUT SC, V6174, P660, DOI 10.1007/978-3-642-14295-6_56
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Hannousse A, 2021, COMPUT SCI REV, V41, DOI 10.1016/j.cosrev.2021.100415
   Hassan S, 2020, SOFTWARE PRACT EXPER, V50, P1651, DOI 10.1002/spe.2869
   Jagadeesan LJ., 2020, 2020 IEEE INT S SOFT, P19
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Joseph CT, 2019, SOFTWARE PRACT EXPER, V49, P1448, DOI 10.1002/spe.2729
   Karna AK, 2018, FRONT COMPUT SCI-CHI, V12, P642, DOI 10.1007/s11704-016-6192-0
   Khaleq AA, 2021, IEEE ACCESS, V9, P35464, DOI 10.1109/ACCESS.2021.3061890
   Khaleq AA, 2019, 2019 6TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND COMPUTATIONAL INTELLIGENCE (CSCI 2019), P1411, DOI 10.1109/CSCI49370.2019.00264
   Khebbeb K, 2020, CLUSTER COMPUT, V23, P1603, DOI 10.1007/s10586-020-03080-8
   Koc T, 2019, INFORM SOFTWARE TECH, V109, P14, DOI 10.1016/j.infsof.2019.01.003
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska Marta, 2009, Performance Evaluation Review, V36, P40, DOI 10.1145/1530873.1530882
   Kwiatkowska Marta, 2018, Formal System Verification: Stateof the-Art and Future Trends, P73
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Lorido-Botran T, 2014, J GRID COMPUT, V12, P559, DOI 10.1007/s10723-014-9314-7
   Mazzara M, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P29, DOI 10.1007/978-3-030-31646-4_2
   Mendonça NC, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P114, DOI 10.1109/ICSA47634.2020.00019
   Nakagawa Y., 2021, PROC ANAIS XLVIIISEM, P30
   Naskos A, 2018, PROC INT CONF DATA, P1641, DOI 10.1109/ICDE.2018.00196
   Naskos A, 2017, CLUSTER COMPUT, V20, P2687, DOI 10.1007/s10586-017-0816-5
   Naskos A, 2015, IEEE ACM INT SYMP, P31, DOI 10.1109/CCGrid.2015.91
   Neuman Sam, 2015, BUILDING MICROSERVIC
   Pahl C, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P137, DOI 10.5220/0005785501370146
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Pereira-Vale A, 2021, COMPUT SECUR, V103, DOI 10.1016/j.cose.2021.102200
   Qu CH, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3148149
   Radhika EG, 2021, MATER TODAY-PROC, V45, P2793, DOI 10.1016/j.matpr.2020.11.789
   Rajasekharaiah C., 2021, CLOUD BASED MICROSER, P1
   Ray K., 2022, IEEE T DEPEND SECURE, P1
   Rodhe I., 2015, TOTALF RSVARETS FORS, P7
   Rossi F., 2020, 2020 28 INT S MODELI, P1
   Rossi F, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2020), P28, DOI 10.1109/ACSOS49614.2020.00023
   Salem M, 2018, COMPUTERS, V8, DOI 10.3390/computers8010003
   Sharifloo Amir Molzam, 2017, Software Engineering for Self-Adaptive Systems III. Assurances. International Seminar. Revised Selected and Invited Papers: LNCS 9640, P137, DOI 10.1007/978-3-319-74183-3_5
   Souri A, 2018, COMPUT STAND INTER, V58, P1, DOI 10.1016/j.csi.2017.11.007
   Srirama SN, 2020, J NETW COMPUT APPL, V160, DOI 10.1016/j.jnca.2020.102629
   Su G., 2020, IEEE T SOFTWARE ENG, V48, P1
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Ummels M, 2010, Stochastic Multiplayer Games Theory and Algorithms
   van Zijl M., 2020, THESIS U WAIKATO
   Vayghan LA, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110924
   Wang S, 2021, IEEE T PARALL DISTR, V32, P98, DOI 10.1109/TPDS.2020.3011979
   Wu RQ, 2019, P INT COMP SOFTW APP, P622, DOI 10.1109/COMPSAC.2019.10277
   Xu MX, 2021, IEEE T SUST COMPUT, V6, P544, DOI 10.1109/TSUSC.2020.3014943
   Xu MX, 2019, IEEE T SUST COMPUT, V4, P53, DOI 10.1109/TSUSC.2018.2808493
   Yan M, 2021, APPL SOFT COMPUT, V105, DOI 10.1016/j.asoc.2021.107216
   Yao Pan, 2019, 2019 IEEE International Conference on Big Knowledge (ICBK), P191, DOI 10.1109/ICBK.2019.00033
   Yu GB, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P68, DOI 10.1109/ICWS.2019.00023
   Zhang L, 2021, INT PARALL DISTRIB P, P912, DOI 10.1109/IPDPS49936.2021.00100
   Zhong ZH, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3510415
   Zhong ZH, 2020, ACM T INTERNET TECHN, V20, DOI 10.1145/3378447
NR 99
TC 2
Z9 2
U1 0
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2022
VL 52
IS 11
BP 2476
EP 2495
DI 10.1002/spe.3135
EA AUG 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5C7YI
UT WOS:000839291700001
DA 2024-07-18
ER

PT J
AU El Motaki, S
   Yahyaouy, A
   Gualous, H
AF El Motaki, Saloua
   Yahyaouy, Ali
   Gualous, Hamid
TI Modeling the correlation between the workload and the power consumed by
   a server using stochastic and non-parametric approaches
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE datacenter; non-parametric approach; power estimation model;
   probabilistic distribution; server; stochastic model
ID VIRTUAL MACHINES; ENERGY; CONSOLIDATION; ENVIRONMENTS; PERFORMANCE;
   CONSUMPTION
AB In this article, we address a critical concern of the growth of computer servers number and the resulting power expenditures in data centers by analyzing the statistical metrics related to the workload executed in each physical node. The aim is to build a stochastic model for power consumption estimation based on historical data. Relying on in-depth investigation and experimental testing of the power consumption features and performance of the various workload datasets, we propose a model that considers the workload and the power consumed to be executed by a server as random variables. Based on the properties of the probabilistic distribution function of each random variable, we establish the correlation relationship between the workload and the power consumption using a non-parametric approach. Our use of a non-parametric method to learn a given probability model is challenging because it requires estimating the full distribution from the available data samples. The accuracy of our approach is demonstrated by estimating the energy consumption of various workloads. The experimental and simulation results show that our model outperforms many existing approaches in terms of accuracy, and it can be applied to a wide variety of workloads.
C1 [El Motaki, Saloua; Yahyaouy, Ali] Univ Sidi Mohamed Ben Abdellah, LISAC Lab, Comp Sci Dept, FSDM, Fes, Morocco.
   [Gualous, Hamid] Univ Caen Normandy, Univ Lab Appl Sci LUSAC, Caen, France.
C3 Sidi Mohamed Ben Abdellah University of Fez; Universite de Caen
   Normandie
RP El Motaki, S (corresponding author), Univ Sidi Mohamed Ben Abdellah, LISAC Lab, Comp Sci Dept, FSDM, Fes, Morocco.
EM saloua.elmotaki@usmba.ac.ma
RI Yahyaouy, Ali/JNE-0618-2023
OI Yahyaouy, Ali/0000-0003-1954-2734; El Motaki, Saloua/0000-0001-7920-6121
CR Ahmadi J, 2022, SOFTWARE PRACT EXPER, V52, P1216, DOI 10.1002/spe.3062
   [Anonymous], 1983, Statistica Neerlandica, DOI DOI 10.1111/J.1467-9574.1983.TB00802.X
   Barroso LuizAndre., 2013, DATACENTER COMPUTER, V8
   Baynes K, 2003, IEEE T COMPUT, V52, P1454, DOI 10.1109/TC.2003.1244943
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Bertran R, 2012, FUTURE GENER COMP SY, V28, P457, DOI 10.1016/j.future.2011.03.007
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   CAR D, 2021, CHINA DATA CTR ANN R
   Cheng DZ, 2016, IEEE T COMPUT, V65, P508, DOI 10.1109/TC.2015.2428695
   Dargie W, 2015, IEEE T COMPUT, V64, P1311, DOI 10.1109/TC.2014.2315629
   Delforge P., 2022, AMERICAS DATA CTR CO
   El Motaki S, 2019, J SUPERCOMPUT, V75, P6239, DOI 10.1007/s11227-019-02847-0
   Gilgur A, 2021, WEB CONFERENCE 2021: COMPANION OF THE WORLD WIDE WEB CONFERENCE (WWW 2021), P182, DOI 10.1145/3442442.3452057
   He YH, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.6134
   Horova I., 2012, World scientific
   Hsu CH, 2011, INT SYM PERFORM ANAL, P227, DOI 10.1109/ISPASS.2011.5762739
   Huang Z, 2016, IEEE T CLOUD COMPUT, V4, P415, DOI 10.1109/TCC.2014.2369423
   Isci C, 2003, 36TH INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, PROCEEDINGS, P93
   Jin CQ, 2020, APPL ENERG, V265, DOI 10.1016/j.apenergy.2020.114806
   Kafadar K., 1999, J. Am. Stat. Assoc, DOI DOI 10.2307/2670015
   Karpowicz MP, 2018, FUTURE GENER COMP SY, V78, P302, DOI 10.1016/j.future.2016.05.011
   Kataoka H, 2015, 2015 IEEE 29TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS WAINA 2015, P217, DOI 10.1109/WAINA.2015.127
   Liu X, 2015, FOUND TRENDS ELECTRO, V9, P2, DOI 10.1561/1000000038
   Malladi KT, 2012, CONF PROC INT SYMP C, P37, DOI 10.1109/ISCA.2012.6237004
   Mann ZA, 2016, IEEE T COMPUT, V65, P3357, DOI 10.1109/TC.2016.2529629
   Mercier D., 2013, OCBASE OCCT
   Möbius C, 2014, IEEE T PARALL DISTR, V25, P1600, DOI 10.1109/TPDS.2013.183
   Outlook G, 2020, F DATA CTR MARKET GL
   Phung J, 2020, IEEE T COMPUT, V69, P14, DOI 10.1109/TC.2019.2936018
   Radovanovic A., 2021, POWER MODELING EFFEC
   Son J, 2019, SOFTWARE PRACT EXPER, V49, P1748, DOI 10.1002/spe.2755
   Tang GM, 2017, IEEE T COMPUT, V66, P312, DOI 10.1109/TC.2016.2582163
   Van den Steen S, 2016, IEEE T COMPUT, V65, P3537, DOI 10.1109/TC.2016.2547387
   Verma A, 2008, LECT NOTES COMPUT SC, V5346, P243, DOI 10.1007/978-3-540-89856-6_13
NR 35
TC 0
Z9 0
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2177
EP 2190
DI 10.1002/spe.3118
EA JUN 2022
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000816933300001
DA 2024-07-18
ER

PT J
AU Fallah, S
   Bidgoly, AJ
AF Fallah, Somayyeh
   Bidgoly, Amir Jalaly
TI Android malware detection using network traffic based on sequential deep
   learning models
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE LSTM; malware detection; network traffic analysis; sequential deep
   learning; smartphone
AB The increasing trend of smartphone capabilities has caught the attention of many users. This has led to the emergence of malware that threatening the users' privacy and security. Many malware detection methods have been proposed to deal with emerging threats. One of the most effective ones is to use network traffic analysis. This article proposed a method based on LSTM (Long Short-term Memory) for malware detection which is capable of not only distinguishing malware and benign samples, but also detecting and identify the new and unseen families of malware. As far as we know, this is the first time that traffic data has been modeled as a sequence of flows and a sequential based deep learning model is employed. In this article, we have performed several case studies to exhibit the capabilities of the proposed method including malware detection, malware family identification, new (not seen before) malware family detection, as well as evaluating the minimum time required to detect malware. The case studies show that the model is even capable of detecting new families of malware with more than 90% accuracy, although these results can only be verified on existing families in this dataset and such a claim cannot be generalized to other examples of malware. Moreover, it is shown the model is able to detect the malware through capturing 50 connection flows (about 1600 packets in average) with the AUC of more than 99.9%.
C1 [Fallah, Somayyeh; Bidgoly, Amir Jalaly] Univ Qom, Dept Informat Technol & Comp Engn, Qom, Iran.
C3 University of Qom
RP Bidgoly, AJ (corresponding author), Univ Qom, Dept Informat Technol & Comp Engn, Qom, Iran.
EM Jalaly@qom.ac.ir
RI Bidgoly, Amir Jalaly/ABE-1769-2020
OI Bidgoly, Amir Jalaly/0000-0002-8574-3537
CR Alex G., 2013, ARXIV PREPRINT ARXIV
   Alzaylaee MK, 2020, COMPUT SECUR, V89, DOI 10.1016/j.cose.2019.101663
   Bekerman D, 2015, IEEE CONF COMM NETW, P134, DOI 10.1109/CNS.2015.7346821
   Bujlow T., 2012, 2012 IEEE Symposium on Computers and Communications (ISCC), P000882, DOI 10.1109/ISCC.2012.6249413
   Chen ZX, 2018, INFORM SCIENCES, V433, P346, DOI 10.1016/j.ins.2017.04.044
   Fallah S., 2019, JJCIT, V5
   IDC, 2019, SMARTPH OS MARK SHAR
   Kabakus AT, 2018, DIGIT INVEST, V24, P25, DOI 10.1016/j.diin.2018.01.001
   Kakavand M, 2018, 2018 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND INTELLIGENT SYSTEMS (CIIS 2018), P32, DOI 10.1145/3293475.3293489
   Lashkari AH, 2018, INT CARN CONF SECU, P242
   Lashkari AH, 2017, ANN CONF PRIV SECUR, P233, DOI 10.1109/PST.2017.00035
   Li J, 2018, IEEE T IND INFORM, V14, P3216, DOI 10.1109/TII.2017.2789219
   Mujumdar A., 2013, International journal of advanced research in computer science and software engineering and technology, V2, P2037
   Radoglou-Grammatikis P., 2017, P 2017 6 INT C MODER, P1
   Ribeiro J, 2020, IEEE ACCESS, V8, P23154, DOI 10.1109/ACCESS.2020.2969626
   Sak H, 2014, INTERSPEECH, P338
   Santa C., 2019, US MCAFEE LABS THREA
   Sanz B, 2013, ADV INTELL SYST COMP, V189, P289
   Shan WL, 2018, INT CONF INFRA MILLI
   Wang SS, 2019, J NETW COMPUT APPL, V133, P15, DOI 10.1016/j.jnca.2018.12.014
   Wang W, 2017, 2017 31ST INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN), P712, DOI 10.1109/ICOIN.2017.7899588
   Xing Liu, 2014, 2014 2nd IEEE International Conference on Mobile Cloud Computing, Services and Engineering (MobileCloud), P142, DOI 10.1109/MobileCloud.2014.22
   Yeo M, 2018, 2018 32ND INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN), P910, DOI 10.1109/ICOIN.2018.8343255
   Zaman M., 2015, 2015 international conference on networking systems and security (NSysS), P1
NR 24
TC 11
Z9 13
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2022
VL 52
IS 9
BP 1987
EP 2004
DI 10.1002/spe.3112
EA JUN 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3T7YW
UT WOS:000806593000001
DA 2024-07-18
ER

PT J
AU Yussupov, V
   Soldani, J
   Breitenbucher, U
   Leymann, F
AF Yussupov, Vladimir
   Soldani, Jacopo
   Breitenbucher, Uwe
   Leymann, Frank
TI Standards-based modeling and deployment of serverless function
   orchestrations using BPMN and TOSCA
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE BPMN; FaaS; function orchestrations; function-as-a-service; serverless;
   TOSCA; workflows
AB Function-as-a-Service (FaaS) is a cloud service model enabling to implement serverless applications for a variety of use cases. These range from scheduled calls of single functions to complex function orchestrations executed using orchestration services such as AWS step functions. However, since the available function orchestration technologies vary in functionalities, supported modeling languages, and APIs, modeling such function orchestrations and their deployment require significant technology-specific expertise. Moreover, the resulting models are typically not portable due to provider- and technology-specific details, and major efforts are required when exchanging an orchestrator or provider due to such lock-ins. To tackle this issue, we introduce a vendor- and technology-agnostic method for the modeling and deployment of serverless function orchestrations, which relies on the business process model and notation (BPMN) and topology and orchestration specification for cloud applications (TOSCA) standards for modeling function orchestrations and their deployment, respectively. We also present a toolchain for modeling serverless function orchestrations in BPMN, generating proprietary models supported by different function orchestration technologies from BPMN models, specifying their actual deployment in TOSCA, and then enacting such deployment. Finally, we illustrate a case study applying our method and toolchain in practice.
C1 [Yussupov, Vladimir; Breitenbucher, Uwe; Leymann, Frank] Univ Stuttgart, Inst Architecture Applicat Syst, Univ Str 38, D-70569 Stuttgart, Germany.
   [Soldani, Jacopo] Univ Pisa, Dept Comp Sci, Pisa, Italy.
C3 University of Stuttgart; University of Pisa
RP Yussupov, V (corresponding author), Univ Stuttgart, Inst Architecture Applicat Syst, Univ Str 38, D-70569 Stuttgart, Germany.
EM yussupov@iaas.uni-stuttgart.de
RI Leymann, Frank/I-2070-2016
OI Leymann, Frank/0000-0002-9123-259X; Yussupov,
   Vladimir/0000-0002-6498-637X; Breitenbucher, Uwe/0000-0002-8816-5541;
   Soldani, Jacopo/0000-0002-2435-3543
FU Projekt DEAL
FX Open access funding enabled and organized by Projekt DEAL.
CR Amazon Web Services Inc, 2021, Amazon States Language
   Amazon Web Services Inc, 2020, AWS STEP FUNCT
   Amazon Web Services Inc, 2021, AWS SERV APPL MOD
   Amazon Web Services Inc, 2021, AM EV BRIDG
   Amazon Web Services Inc, 2021, AWS LAMBD
   Amazon Web Services Inc, 2021, AWS CLOUDFORMATION
   [Anonymous], 2007, WEB SERVICES BUSINES
   Apache, 2021, OPENWHISK
   Apache, 2021, OPENWHISK COMP
   Baldini I., 2017, RES ADV CLOUD COMPUT, P1, DOI DOI 10.1007/978-981-10-5026-8_1
   Baldini I, 2017, PROCEEDINGS OF THE 2017 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!'17), P89, DOI 10.1145/3133850.3133855
   Barcelona-Pons D, 2019, PROCEEDINGS OF THE 2019 FIFTH INTERNATIONAL WORKSHOP ON SERVERLESS COMPUTING (WOSC '19), P25, DOI 10.1145/3366623.3368137
   Binz T., 2014, Advanced Web Services, P527
   Bogo M, 2020, SOFTWARE PRACT EXPER, V50, P1793, DOI 10.1002/spe.2848
   Bouzerzour NE, 2020, SOFTWARE PRACT EXPER, V50, P1025, DOI 10.1002/spe.2794
   BPMN.io, BPMN JS 2021
   Breitenbucher Uwe, 2016, EUROPEAN SPACE PROJE, V1
   Breitenbücher U, 2014, INT CONF CLOUD ENG, P87, DOI 10.1109/IC2E.2014.56
   Brogi A, 2018, SOFTWARE PRACT EXPER, V48, P2061, DOI 10.1002/spe.2625
   Bruns R, 2014, SOFTWARE PRACT EXPER, V44, P1395, DOI 10.1002/spe.2204
   Burckhardt Sebastian, 2021, ARXIV PREPRINT ARXIV
   Camunda, 2021, BPMN Workflow Engine
   Carreira J, 2019, PROCEEDINGS OF THE 2019 TENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '19), P13, DOI 10.1145/3357223.3362711
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Cloudstate, DISTR STAT MAN SERV
   Combi C., 2017, S APPL COMP, P727
   Dehury C., 2020, EUR C SOFTW ARCH, P241
   Endres C, 2017, NINTH INTERNATIONAL CONFERENCES ON PERVASIVE PATTERNS AND APPLICATIONS (PATTERNS 2017), P22
   Fn Project, 2021, CONTR FN FLOW
   Fn Project, 2021, CONTR FN
   Garcia Lopez Pedro, 2020, DEBS '20: Proceedings of the 14th ACM International Conference on Distributed and Event-based Systems, P3, DOI 10.1145/3401025.3401731
   López PG, 2018, INT CONF UTIL CLOUD, P148, DOI 10.1109/UCC-Companion.2018.00049
   Giallorenzo S., 2020, RECENT DEV DESIGN IM, P1
   Hellerstein JM., ARXIV PREPRINT ARXIV
   IBM, 2021, CLOUD FUNCT
   IBM, 2021, COMP IBM COMP
   Jangda A, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360575
   John Aji, 2019, IEEE ACM INT C UCC C, P43, DOI [DOI 10.1145/3368235.3368839, 10.1145/3368235.3368839]
   Kopp O, 2013, LECT NOTES COMPUT SC, V8274, P700, DOI 10.1007/978-3-642-45005-1_64
   Kounev S., 2021, P SERVERLESS COMPUTI, V11, P56
   Kritikos K, 2019, IEEE INT CONF CLOUD, P291, DOI 10.1109/CLOUD.2019.00056
   Leymann F., 1999, Production Workflow: Concepts and Techniques
   Luzar Anze, 2020, Software Architecture, P247
   Microsoft Azure Inc, 2021, AZ FUNCT
   Microsoft Azure Inc, AZ DUR FUNCT
   Mlitz, DISTRIBUTION CLOUD C
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   OASIS, TOSCA Simple Profile in YAML Version 1.3
   OMG, BUSINESS PROCESS MOD
   Red Hat, 2021, ANSIBLE
   Ristov S, 2021, FUTURE GENER COMP SY, V114, P368, DOI 10.1016/j.future.2020.08.012
   Ruecker, ORCHESTRATE AWS LAMB
   Russell N., WORKFLOW CONTROL FLO
   Samea F, 2019, 2019 8TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2019), P431, DOI 10.1145/3316615.3316636
   Serverless Inc, 2021, SERV FRAM
   Spillner J., ARXIV PREPRINT ARXIV
   Taibi D, 2020, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P181, DOI 10.5220/0009578501810192
   Tsagkaropoulos A, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10060737
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Wettinger J., 2015, P 5 INT C CLOUD COMP, V2015, P475
   Wieland M., CONTEXT AWARE WORKFL
   Winzinger S, 2019, IEEE ACM INT WORKS M, P82, DOI 10.1109/MiSE.2019.00020
   Wurster M, 2020, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P216, DOI 10.5220/0009794302160226
   Wurster M, 2020, SICS SOFTWARE, V35, P63, DOI 10.1007/s00450-019-00412-x
   Wurster M, 2018, IEEE INT CONF SERV, P73, DOI 10.1109/SOCA.2018.00017
   Yussupov V., TOSCA DEFINITIONS MO
   Yussupov V, 2021, CLOSER: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P268, DOI 10.5220/0010481002680279
   Yussupov V, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110906
   Yussupov V, 2020, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P456, DOI 10.5220/0009574104560467
NR 69
TC 8
Z9 8
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2022
VL 52
IS 6
BP 1454
EP 1495
DI 10.1002/spe.3073
EA JAN 2022
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1A1RT
UT WOS:000747666800001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Jacobson, I
   Sutherland, J
   Kerr, B
   Buhnova, B
AF Jacobson, Ivar
   Sutherland, Jeff
   Kerr, Brian
   Buhnova, Barbora
TI Better Scrum through Essence
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agile; Essence; methods; Scrum; software engineering practice
ID SOFTWARE
AB We live at an exciting time where software has become a dominant aspect of our everyday life. Although software provides opportunities for improving various aspects of our society, it also presents many challenges. One of them is development, deployment, and sustaining of high quality software on a broad scale. While agile methods (Scrum being one of the most prominent examples) ease the process, their popularity deteriorates the clarity and simplicity they were once meant to bring into software development. This article explores the synergy of Scrum and Essence, a domain model of software engineering processes, intending to become a common ground for software development methods, bringing clarity into the composition of methods from individual practices. This short communication motivates the interplay of Scrum and Essence, being accompanied with a set of videotutorials and 21 Scrum Essential cards to further guide more effective team's way of working.
C1 [Jacobson, Ivar] Ivar Jacobson Int, Lausanne, Switzerland.
   [Sutherland, Jeff] Scrum Inc, Cambridge, MA USA.
   [Kerr, Brian] Ivar Jacobson Int, London, England.
   [Buhnova, Barbora] Masaryk Univ, Fac Informat, Brno, Czech Republic.
C3 Masaryk University Brno
RP Jacobson, I (corresponding author), Ivar Jacobson Int, Kista, Sweden.
EM ivar@ivarjacobson.com
OI Buhnova, Barbora/0000-0003-4205-101X
CR Agile, SCALED AGILE FRAMEWO
   Greer D, 2011, SOFTWARE PRACT EXPER, V41, P943, DOI 10.1002/spe.1100
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Ivar Jacobson International, BETT SCRUM ESS INTR
   Ivar Jacobson International, ESS PRACT GUID TOUR
   Jacobson, 2018, QUEUE, V16, P101
   Jacobson, ESSENCE PRACTICE
   Jacobson I., 2019, The Essentials of Modern Software Engineering
   Jacobson I, 2012, COMMUN ACM, V55, P42, DOI 10.1145/2380656.2380670
   June Sung Park, 2016, ACM SIGSOFT Software Engineering Notes, V41, P1, DOI 10.1145/2853073.2853088
   Kerr, BETTER SCRUM ESSENCE
   Mirachi S, 2017, SOFTWARE PRACT EXPER, V47, P1465, DOI 10.1002/spe.2477
   Pieper J, 2017, IEEE GLOB ENG EDUC C, P1689, DOI 10.1109/EDUCON.2017.7943076
   Sutherland, BETTER SCRUM ESSENTI
   Sutherland, BETTER SCRUM ESSENCE
   Sutherland J., 2020, Queue, V18, P83
   Zapata-Jaramillo CM., 2020, P 2020 IEEE 32 C SOF
NR 17
TC 2
Z9 2
U1 14
U2 55
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2022
VL 52
IS 6
BP 1531
EP 1540
DI 10.1002/spe.3070
EA JAN 2022
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1A1RT
UT WOS:000743808600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Robert, A
   Gupta, A
   Shenoy, V
   Sitaram, D
   Kalambur, S
AF Robert, Andrew
   Gupta, Apaar
   Shenoy, Vinayak
   Sitaram, Dinkar
   Kalambur, Subramaniam
TI Predicting Hadoop misconfigurations using machine learning
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; Hadoop; machine learning; misconfiguration; prediction
AB Distributed applications are popular for heavy workloads where the resources of a single machine are not sufficient. These distributed applications come with many parameters to tune so that cluster resources can be effectively utilized. However, any misconfiguration of the available parameters may result in suboptimal performance of one or more machines in the cluster. These events may go unnoticed or can result in crashes. This problem of misconfigured parameters has no straightforward solution due to the variety of parameters and vastly different workloads being processed. In this article, we propose a methodology for machine learning-based detection of misconfigurations. We collect data mined from system resource utilization, Hadoop logs, and job-level metrics to train a model using decision tree and support vector machine. The models are used to identify whether a set of configuration parameters could result in a crash or a slowdown for a specific workload. The approach explained in this article can be extended to other distributed big data applications, such as Spark, Hive, Pig, and so on.
C1 [Robert, Andrew; Gupta, Apaar; Shenoy, Vinayak; Sitaram, Dinkar; Kalambur, Subramaniam] PES Univ, Ctr Cloud Comp & Big Data, Dept Comp Sci & Engn, Bangalore, Karnataka, India.
C3 PES University
RP Gupta, A (corresponding author), PES Univ, Ctr Cloud Comp & Big Data, Dept Comp Sci & Engn, Bangalore, Karnataka, India.
EM apaar.gupta.13@gmail.com
OI Gupta, Apaar/0000-0002-4597-0516
CR Al-Shaer E., 2010, P 3 ACM WORKSHOP ASS, P37
   [Anonymous], 2 7 3 YARN SIT XML
   Attariyan M., 2010, P 9 USENIX S OP SYST, P1
   Cloudera, 2014, SOM OTH CRUC PAR
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Hadoop, 2018, YARN DEF XML PAR
   Hadoop, 2 7 3 HIST SERV
   Hallé S, 2012, IEEE IFIP NETW OPER, P1111, DOI 10.1109/NOMS.2012.6212037
   Heger Dominique., 2013, CMG Journal, V4, P97
   Huang Peng, 2015, P 10 EUROPEAN C COMP
   Huang S, 2010, P ICDE WORKSH NEB DI
   Issa J, 2012, J CLOUD COMPUT-ADV S, V1, DOI 10.1186/2192-113X-1-10
   Kalibhat NM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING WORKSHOPS (HIPCW), P3, DOI 10.1109/HiPCW.2017.00010
   Kanungo T, 2002, IEEE T PATTERN ANAL, V24, P881, DOI 10.1109/TPAMI.2002.1017616
   Khurshid Ahmed., 2012, P ACM SIGCOMM HOTSDN, P15
   Lu F, 2006, P 29 AUSTR COMP SCI, V48, P147
   Makanju A, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1255
   Mickens J., 2007, P 2007 WORKSH TACKL
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   Nagaraja Kiran., 2004, OSDI 04, P5
   Page L., 1999, PAGERANK CITATION RA
   Palatin N, 2008, DATA MINING TECHNIQU, V2009, P71, DOI [10.1002/9780470699904.ch5, DOI 10.1002/9780470699904.CH5]
   Pappas V., 2004, PROC ACM SIGCOMM WOR, P265
   Pappas V, 2009, IEEE J SEL AREA COMM, V27, P275, DOI 10.1109/JSAC.2009.090404
   Pivotal, 2018, MAPREDUCE YARN MEM P
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rabkin A, 2013, IEEE SOFTWARE, V30, P88, DOI 10.1109/MS.2012.73
   Ramachandran V, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P169
   Sheth A., 2006, MobiSys2006. The Fourth International Conference on Mobile Systems, Applications and Services, P191, DOI 10.1145/1134680.1134701
   Shvachko K., 2010, 2010 IEEE 26th Symposium on Mass Storage Systems and Technologies (MSST), P1
   StackOverflow, 2014, COR MISC QUEST
   StackOverflow, 2014, MEM MISC QUEST
   Vavilapalli V.K., P 4 ANN S CLOUD COMP
   Wang HJ, 2004, USENIX Association Proceedings of the Sixth Symposium on Operating Systems Design and Implementation (OSDE '04), P245
   Xu TY, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P619
   Xu TY, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P244, DOI 10.1145/2517349.2522727
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Xu TY, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2791577
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Yuan D., 2011, P 2011 USENIX C USEN, P28
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
   Zhang JQ, 2014, ACM SIGPLAN NOTICES, V49, P687, DOI 10.1145/2541940.2541983
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P312, DOI 10.1109/ICSE.2013.6606577
   Zhang SJ, 2015, AER ADV ENG RES, V21, P12
NR 48
TC 0
Z9 0
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1168
EP 1183
DI 10.1002/spe.2790
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT6RF
UT WOS:000537195200006
DA 2024-07-18
ER

PT J
AU Liu, C
   Yang, W
   Li, Z
   Yu, YJ
AF Liu, Chun
   Yang, Wei
   Li, Zheng
   Yu, Yijun
TI Recommending software features to designers: From the perspective of
   users
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE association rules; feature extraction; feature recommendation; lasso
   regression
ID REQUIREMENTS
AB With lots of public software descriptions emerging in the application market, it is significant to extract common software features from these descriptions and recommend them to new designers. However, existing approaches often recommend features according to their frequencies which reflect designers' preferences. In order to identify those users' favorite features and help design more popular software, this paper proposes to make use of the public data of users' ratings and products' downloads which reflect users' preferences to recommend extracted features. The proposed approach distinguishes users' perspective from designers' perspective and argues that users' perspective is better for recommending features because most products are designed for users and expect to be popular among users. Based on the lasso regression to estimate the relationship between the extracted features and the users' ratings, it first distinguishes the extracted features to identify those recommendable and undesirable features. By treating each download as a support from users to the product featurefeatures, it further mines the feature association rules from users' perspective for recommending features. By taking the public data on the market of SoftPedia.com for evaluation, our empirical studies indicate that: (i) selecting recommendable features by lasso regression is better than that by feature frequencies in terms of F(1)measure; and (ii) recommending features based on the feature association rules mined from users' perspective is not only feasible but also has competitive performance compared with that based on the rules mined from designs' perspective in terms of F(1)measure.
C1 [Liu, Chun] Henan Univ, Henan Ind Technol Acad Spatiotemporal Big Data, Kaifeng, Peoples R China.
   [Liu, Chun; Yang, Wei; Li, Zheng] Henan Univ, Henan Key Lab Big Data Anal & Proc, Kaifeng 475001, Peoples R China.
   [Yu, Yijun] Open Univ, Ctr Res Comp, Milton Keynes, Bucks, England.
C3 Henan University; Henan University; Open University - UK
RP Li, Z (corresponding author), Henan Univ, Henan Key Lab Big Data Anal & Proc, Kaifeng 475001, Peoples R China.
EM lizheng@henu.edu.cn
OI Yu, Yijun/0000-0002-7154-8570
FU NSFC [61402150,61806074]
FX This work is partially supported by NSFC under Grant
   No.61402150,61806074.
CR Acher M., 2012, P 6 INT WORKSH VAR M
   Agrawal R, 1993, P ACM INT C MAN DAT
   Allison PD., 1999, MULTIPLE REGRESSION
   [Anonymous], 2013, P 10 WORK C MIN SOFT
   Bakar NH, 2016, APPL SOFT COMPUT, V49, P1297, DOI 10.1016/j.asoc.2016.07.048
   Bakar NH, 2015, J SYST SOFTWARE, V106, P132, DOI 10.1016/j.jss.2015.05.006
   Berger C., 1993, CTR QUALITY MANAGEME
   Bird Steven, 2009, NATURAL LANGUAGE PRO, DOI DOI 10.1007/S10579-010-9124-X
   Ferrari A, 2013, P 17 INT C SOFTW PRO
   Guzman E, 2014, P IEEE INT REQ ENG C
   Han J., 2000, P ACM SIGMOD INT C M, P1
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Herlocker JL, 2004, ACM T INFORM SYST, V22, P5, DOI 10.1145/963770.963772
   Johann T, 2017, P 25 IEEE INT REQ EN
   Keertipati S., 2016, P 20 INT C EV ASS SO, P1
   Li Y, 2018, P IEEE 25 INT C SOFT
   Liu YZ, 2017, J SYST SOFTWARE, V133, P126, DOI 10.1016/j.jss.2017.08.024
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Sarro F, 2015, P 23 IEEE INT REQ EN
   Sree-Kumar A, 2018, P 22 INT SYST SOFTW
   Tibshirani R, 1996, J ROY STAT SOC B, V58, P267, DOI 10.1111/j.2517-6161.1996.tb02080.x
   Vu P, 2015, P 30 IEEE ACM INT C
   Vu PM, 2016, P 31 IEEE ACM INT C
   Yang QP, 2013, 2013 IEEE THIRD INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING (CGC 2013), P9, DOI 10.1109/CGC.2013.10
   Zheng FL, 2019, J MAGN RESON IMAGING, V49, P152, DOI 10.1002/jmri.26037
NR 26
TC 4
Z9 4
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2020
VL 50
IS 9
BP 1778
EP 1792
DI 10.1002/spe.2845
EA JUN 2020
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MT2QQ
UT WOS:000537308000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Mboli, JS
   Thakker, D
   Mishra, JL
AF Mboli, Julius Sechang
   Thakker, DhavalKumar
   Mishra, Jyoti L.
TI An Internet of Things-enabled decision support system for circular
   economy business model
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE circular economy; circular supply chain management; decision support
   systems; Industry 4; 0; Internet of Things; semantic technology; zero
   waste
ID SUPPLY CHAIN; IOT APPLICATIONS; OPPORTUNITIES; TECHNOLOGIES; CHALLENGES;
   MANAGEMENT; EFFICIENCY; LOGISTICS; ONTOLOGY; PRODUCT
AB The traditional linear economy using a take-make-dispose model is resource intensive and has adverse environmental impacts. Circular economy (CE) which is regenerative and restorative by design is recommended as the business model for resource efficiency. While there is a need for businesses and organisations to switch from linear to CE, there are several challenges that needs addressing such as business models and the criticism of CE projects often being small scale. Technology can be an enabler toward scaling up CE; however, the prime challenge is to identify technologies that can allow predicting, tracking and proactively monitoring product's residual value to motivate businesses to pursue circularity decisions. In this paper, we propose an IoT-enabled decision support system (DSS) for CE business model that effectively allows tracking, monitoring, and analysing products in real time with the focus on residual value. The business model is implemented using an ontological model. This model is complemented by a semantic decision support system. The semantic ontological model, first of its kind, is evaluated for technical compliance. We applied DSS and the ontological model in a real-world use case and demonstrate viability and applicability of our approach.
C1 [Mboli, Julius Sechang; Thakker, DhavalKumar] Univ Bradford, Fac Engn & Informat, Richmod Rd, Bradford BD7 1DP, W Yorkshire, England.
   [Mboli, Julius Sechang] Taraba State Univ, Fac Engn, Dept Elect & Elect Engn, Taraba, Nigeria.
   [Mishra, Jyoti L.] Univ Leeds, Leeds Univ Business Sch, Leeds, W Yorkshire, England.
C3 University of Bradford; University of Leeds
RP Thakker, D (corresponding author), Univ Bradford, Fac Engn & Informat, Richmod Rd, Bradford BD7 1DP, W Yorkshire, England.
EM D.Thakker@bradford.ac.uk
RI Mboli, Julius Sechang/IUQ-8205-2023; Thakker, Dhavalkumar/A-5743-2011
OI Mboli, Julius Sechang/0000-0003-1708-3052; Thakker,
   Dhavalkumar/0000-0003-4479-3500; Mishra, Jyoti/0000-0003-2606-9092
FU Federal Government of Nigeria under the Oversea Scholarship Scheme (OSS)
FX The first author is funded by the Federal Government of Nigeria under
   the Oversea Scholarship Scheme (OSS) managed by the Petroleum
   Development Technology Fund (PTDF). We would also like to acknowledge
   the course developers and academics of MBA at School of Management for
   sharing the use case which helped in idea building for the paper.
CR [Anonymous], 2014, Towards the Circular Economy Vol. 3: Accelerating the scale-up across global supply chains, V3
   [Anonymous], 2015, Ellen MacArthur Foundation, P12, DOI DOI 10.1016/J.GIQ.2006.04.004
   [Anonymous], 2017, MICRECONOMICS
   [Anonymous], 2008, HDB DECISION SUPPORT
   Balde C.P., 2017, The Global e-Waste Monitor 2017: Quantities, Flows and Resources, DOI [DOI 10.1016/J.PROCI.2014.05.148, 10.1016/j.proci.2014.05.148]
   Bányai T, 2018, ENERGIES, V11, DOI 10.3390/en11071833
   Bizer C, 2011, LECT NOTES COMPUT SC, V7051, P1, DOI 10.1007/978-3-642-24577-0_1
   Blomqvist E, 2014, SEMANT WEB, V5, P177, DOI 10.3233/SW-2012-0084
   Chen SZ, 2014, IEEE INTERNET THINGS, V1, P349, DOI 10.1109/JIOT.2014.2337336
   De Angelis R, 2018, PROD PLAN CONTROL, V29, P425, DOI 10.1080/09537287.2018.1449244
   Dimitrova V, 2020, ENG APPL ARTIF INTEL, V90, DOI 10.1016/j.engappai.2019.103450
   DOUG D, 2019, NESTLE TAPS TELEFONI
   El-Haddadeh R, 2019, GOV INFORM Q, V36, P310, DOI 10.1016/j.giq.2018.09.009
   Ellen Macarthur Foundation, 2017, NEW PLAST EC RETH FU
   European Commission, 2011, AN ASS ROADM RES E 1
   Felita Cantika, 2013, 2013 International Conference on QiR (Quality in Research), P235, DOI 10.1109/QiR.2013.6632571
   Franklin-Johnson E, 2016, J CLEAN PROD, V133, P589, DOI 10.1016/j.jclepro.2016.05.023
   Gaur J, 2017, OMEGA-INT J MANAGE S, V66, P212, DOI 10.1016/j.omega.2015.11.008
   Geerts GL, 2014, DECIS SUPPORT SYST, V63, P3, DOI 10.1016/j.dss.2013.09.007
   Geissdoerfer M, 2017, J CLEAN PROD, V143, P757, DOI 10.1016/j.jclepro.2016.12.048
   Genovese A, 2017, OMEGA-INT J MANAGE S, V66, P344, DOI 10.1016/j.omega.2015.05.015
   Gligoric N, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19030586
   *GROUP OW, 2009, OWL 2 WEB ONTOLOGY L
   Haddud A, 2017, J MANUF TECHNOL MANA, V28, P1055, DOI 10.1108/JMTM-05-2017-0094
   Hanafi J, 2008, INT J LOGIST MANAG, V19, P367, DOI 10.1108/09574090810919206
   Holmström J, 2016, OPER MANAGE RES, V9, P1, DOI 10.1007/s12063-016-0106-z
   Kang HS, 2016, INT J PR ENG MAN-GT, V3, P111, DOI 10.1007/s40684-016-0015-5
   Karanasios S, 2013, J AM SOC INF SCI TEC, V64, P2452, DOI 10.1002/asi.22935
   Kifor CV, 2009, STUD INFORM CONTROL, V18, P247
   Koh SCL, 2016, INT J OPER PROD MAN, V36, P1576, DOI 10.1108/IJOPM-05-2015-0266
   KRAUTKRAEMER JA, 2005, TECH REP
   Kumar A, 2018, ALEX ENG J, V57, P1125, DOI 10.1016/j.aej.2017.01.043
   Leal B, 2010, INTERNET OF THINGS-BOOK, P3, DOI 10.1007/978-1-4419-1674-7_1
   Lenzen M, 2009, ENVIRON SCI TECHNOL, V43, P8251, DOI 10.1021/es902090z
   Jabbour ABLD, 2018, ANN OPER RES, V270, P273, DOI 10.1007/s10479-018-2772-8
   Mallach E.G., 2000, DECISION SUPPORT DAT
   Mishra JL, 2018, PROD PLAN CONTROL, V29, P509, DOI 10.1080/09537287.2018.1449245
   Nagy J, 2018, SUSTAINABILITY-BASEL, V10, DOI 10.3390/su10103491
   Nahmias S., 2009, Production and operations analysis
   Okorie O, 2018, ENERGIES, V11, DOI 10.3390/en11113009
   Pauliuk S, 2018, RESOUR CONSERV RECY, V129, P81, DOI 10.1016/j.resconrec.2017.10.019
   Poveda-Villalón M, 2014, INT J SEMANT WEB INF, V10, P7, DOI 10.4018/ijswis.2014040102
   *RESCOM, 2017, RESCOM SHAR TERM
   Rizos V., 2015, CEPS Working Document, No, P1
   Roblek V, 2016, SAGE OPEN, V6, DOI 10.1177/2158244016653987
   Sarker MK, 2017, LECT NOTES COMPUT SC, V10249, P419, DOI 10.1007/978-3-319-58068-5_26
   Schoolderman H., 2011, Minerals and Metals Scarcity in Manufacturing: the Ticking Time Bomb-Sustainable Materials Management
   Schulz P, 2017, IEEE COMMUN MAG, V55, P70, DOI 10.1109/MCOM.2017.1600435CM
   Stock T, 2016, PROC CIRP, V40, P536, DOI 10.1016/j.procir.2016.01.129
   Thakker D, 2015, LECT NOTES COMPUT SC, V9088, P683, DOI 10.1007/978-3-319-18818-8_42
   Thames L, 2016, PROC CIRP, V52, P12, DOI 10.1016/j.procir.2016.07.041
   Tibben-Lembke R.S., 2002, SUPPLY CHAIN MANAGEM, V7, P271, DOI [DOI 10.1108/13598540210447719, 10.1108/13598540210447719]
   Vermesan O, 2014, RIVER PUBL SER COMM, P7
   You XH, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-9596-5
NR 54
TC 51
Z9 52
U1 6
U2 41
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2022
VL 52
IS 3
SI SI
BP 772
EP 787
DI 10.1002/spe.2825
EA APR 2020
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA YS2YA
UT WOS:000523252000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Dow, CR
   Ngo, HH
   Lee, LH
   Lai, PY
   Wang, KC
   Bui, VT
AF Dow, Chyi-Ren
   Ngo, Huu-Huy
   Lee, Liang-Hsuan
   Lai, Po-Yu
   Wang, Kuan-Chieh
   Bui, Van-Tung
TI A crosswalk pedestrian recognition system by using deep learning and
   zebra-crossing recognition techniques
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE classifier; deep learning; pedestrian recognition; YOLO; zebra-crossing
   recognition
AB Pedestrian detection is essential for improving pedestrian safety in an intelligent traffic system. The efficiency of the system is affected by real-time processing and the error rate of detection. These concerns have not been completely addressed in previous studies. Therefore, this study proposes a real-time pedestrian recognition system that ensures high accuracy by using a deep learning classifier and zebra-crossing recognition techniques. The proposed system was designed to improve pedestrian safety and reduce accidents at intersections. Environmental feature vectors were first used to detect zebra crossings and to determine crossing areas. An adaptive mapping technique was then used to map the pedestrian waiting area based on the crossing area. A dual camera mechanism was used to maintain detection accuracy and improve system fault tolerance. Finally, the you-only-look-once model was used to recognize pedestrians at intersections. A system prototype was implemented to verify the feasibility of the proposed system. The results revealed that the proposed scheme outperforms the conventional histogram of oriented gradients and Haarcascade schemes.
C1 [Dow, Chyi-Ren; Ngo, Huu-Huy; Lee, Liang-Hsuan; Lai, Po-Yu; Wang, Kuan-Chieh; Bui, Van-Tung] Feng Chia Univ, Dept Informat Engn & Comp Sci, Taichung, Taiwan.
C3 Feng Chia University
RP Dow, CR (corresponding author), Feng Chia Univ, Dept Informat Engn & Comp Sci, Taichung, Taiwan.
EM crdow@mail.fcu.edu.tw
RI Ngo, Huu-Huy/AAX-1132-2020
OI Ngo, Huu-Huy/0000-0001-8276-0270; Dow, Chyi Ren/0000-0002-0978-9576
FU Ministry of Science and Technology, Taiwan [MOST 105-2221-E-035-050-MY2]
FX Ministry of Science and Technology, Taiwan, Grant/Award Number: MOST
   105-2221-E-035-050-MY2
CR [Anonymous], P 2017 1 IEEE INT C
   [Anonymous], 2017, 2017 INT SMART CIT
   [Anonymous], P 2016 INT WIR COMM
   [Anonymous], P EUR C COMP VIS 201
   [Anonymous], P IEEE C COMP VIS PA
   [Anonymous], P 2013 2 IAPR AS C P
   [Anonymous], P 2010 IEEE INT VEH
   [Anonymous], 2018, COMPUTER VISION PATT
   [Anonymous], P 2017 IEEE INT C MU
   [Anonymous], P 20 INT C HUM COMP
   [Anonymous], INT J ENG TECH
   [Anonymous], P 2016 25 IEEE INT S
   [Anonymous], P 2018 IEEE COMP SOC
   [Anonymous], P 2017 IEEE 41 ANN C
   [Anonymous], P 2014 22 INT C PATT
   [Anonymous], N CAROLINA PEDESTRIA
   [Anonymous], P 2016 8 INT C INT H
   [Anonymous], P 2018 15 C COMP ROB
   [Anonymous], IEEE T PATTERN ANAL
   [Anonymous], COCO COMM OBJ CONT
   [Anonymous], P 2018 IEEE INT C ME
   [Anonymous], P 2010 IEEE COMP SOC
   [Anonymous], P 9 INT C GRAPH IM P
   [Anonymous], 2015, P IEEE INT C COMP VI
   [Anonymous], INT C COMP VIS PATT
   Benenson R, 2015, LECT NOTES COMPUT SC, V8926, P613, DOI 10.1007/978-3-319-16181-5_47
   Ghenescu V, 2018, 2018 CONFERENCE GRID, CLOUD & HIGH PERFORMANCE COMPUTING IN SCIENCE (ROLCG)
   Girshick R, 2014, PROC CVPR IEEE, P580, DOI 10.1109/CVPR.2014.81
   Khaliluzzaman M, 2016, 2016 2ND INTERNATIONAL CONFERENCE ON ELECTRICAL, COMPUTER & TELECOMMUNICATION ENGINEERING (ICECTE)
   Mascetti S, 2016, PATTERN RECOGN, V60, P405, DOI 10.1016/j.patcog.2016.05.002
   Pyeong-Kang Kim, 2017, Advanced Multimedia and Ubiquitous Engineering, MUE/FutureTech 2017. LNEE 448, P218, DOI 10.1007/978-981-10-5041-1_37
   Redmon J., 2016, 2016 IEEE Conf. Comp. Vis. Patt. Recog. (CVPR), P779
   Sandt L., 2017, Discussion Guide for Automated and Connected Vehicles, Pedestrians, and Bicyclists
   Sladojevic S, 2017, COMPUT SCI INF SYST, V14, P329, DOI 10.2298/CSIS160229011S
   Zhang WB, 2018, IOP C SER EARTH ENV, V121, DOI 10.1088/1755-1315/121/2/022018
   IEEE ICCE
NR 36
TC 16
Z9 17
U1 3
U2 30
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 630
EP 644
DI 10.1002/spe.2742
EA AUG 2019
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000481113000001
DA 2024-07-18
ER

PT J
AU Heiden, S
   Grunske, L
   Kehrer, T
   Keller, F
   van Hoorn, A
   Filieri, A
   Lo, D
AF Heiden, Simon
   Grunske, Lars
   Kehrer, Timo
   Keller, Fabian
   van Hoorn, Andre
   Filieri, Antonio
   Lo, David
TI An evaluation of pure spectrum-based fault localization techniques for
   large-scale software systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE debugging; empirical studies; fault localization
ID SLICE
AB Pure spectrum-based fault localization (SBFL) is a well-studied statistical debugging technique that only takes a set of test cases (some failing and some passing) and their code coverage as input and produces a ranked list of suspicious program elements to help the developer identify the location of a bug that causes a failed test case. Studies show that pure SBFL techniques produce good ranked lists for small programs. However, our previous study based on the iBugs benchmark that uses the AspectJ repository shows that, for realistic programs, the accuracy of the ranked list is not suitable for human developers. In this paper, we confirm this based on a combined empirical evaluation with the iBugs and the Defects4J benchmark. Our experiments show that, on average, at most similar to 40%, similar to 80%, and similar to 90% of the bugs can be localized reliably within the first 10, 100, and 1000 ranked lines, respectively, in the Defects4J benchmark. To reliably localize 90% of the bugs with the best performing SBFL metric D*, similar to 450 lines have to be inspected by the developer. For human developers, this remains unsuitable, although the results improve compared with the results for the AspectJ benchmark. Based on this study, we can clearly see the need to go beyond pure SBFL and take other information, such as information from the bug report or from version history of the code lines, into consideration.
C1 [Heiden, Simon; Grunske, Lars; Kehrer, Timo] Humboldt Univ, Software Engn Grp, Inst Comp Sci, Berlin, Germany.
   [Keller, Fabian; van Hoorn, Andre] Univ Stuttgart, Reliable Software Syst Grp, Inst Software Technol, Stuttgart, Germany.
   [Filieri, Antonio] Imperial Coll London, Dept Comp, London, England.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Humboldt University of Berlin; University of Stuttgart; Imperial College
   London; Singapore Management University
RP Heiden, S (corresponding author), Humboldt Univ, Unter Linden 6, D-10099 Berlin, Germany.
EM heiden@informatik.hu-berlin.de
RI Grunske, Lars/AAH-4550-2019; Kehrer, Timo/AAI-6563-2020; Lo,
   David/A-2493-2012
OI Grunske, Lars/0000-0002-8747-3745; Kehrer, Timo/0000-0002-2582-5557; Lo,
   David/0000-0002-4367-7201
CR Abreu R, 2007, PROCEEDINGS OF THE T
   Abreu R, 2006, PROCEEDINGS OF THE 1
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Alves E, 2011, PROCEEDINGS OF THE 2
   Baudry B, 2006, PROCEEDINGS OF THE 2
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Campos J, 2013, PROCEEDINGS OF THE 2
   Cellier P, 2008, LECT NOTES ARTIF INT, V4933, P273, DOI 10.1007/978-3-540-78137-0_20
   Choi S.-S., 2010, Systemics, Cybernetics and Informatic, V8, P43
   Cleve H, 2005, P 27 INT C SOFTW ENG
   Dallmeier V, 2007, PROCEEDINGS OF THE T
   David F, 2009, SISTEMAS E TECHNOLOGIAS DE INFORMACAO: ACTAS DA 4A CONFERENCIA IBERICA DE SISTEMAS E TECNOLOGIAS DE LA INFORMACAO, P97
   de Souza HA, 2018, INFORM SOFTWARE TECH, V94, P245, DOI 10.1016/j.infsof.2017.10.014
   DiGiuseppe N, 2015, EMPIR SOFTW ENG, V20, P928, DOI 10.1007/s10664-014-9304-1
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Feyzi F, 2018, J SYST SOFTWARE, V136, P39, DOI 10.1016/j.jss.2017.11.002
   Gong DD, 2013, COMPUT LANG SYST STR, V39, P95, DOI 10.1016/j.cl.2013.04.001
   Gong L, 2012, PROCEEDINGS OF THE 2
   Gonzalez-Sanchez A, 2011, PROCEEDINGS OF THE 2
   Gonzalez-Sanchez A, 2011, SOFTWARE PRACT EXPER, V41, P1105, DOI 10.1002/spe.1065
   Hao D, 2009, PAPER PRESENTED AT 2
   Hao D, 2010, AUTOMAT SOFTW ENG, V17, P5, DOI 10.1007/s10515-009-0056-x
   Hao D, 2009, J COMPUT SCI TECH-CH, V24, P962, DOI 10.1007/s11390-009-9270-z
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   Heiden S, AN EVALUATION OF PUR
   Hong S, 2017, INFORM SOFTWARE TECH, V82, P80, DOI 10.1016/j.infsof.2016.10.002
   Hong S, 2015, IEEE INT CONF AUTOM, P464, DOI 10.1109/ASE.2015.14
   Hurstel F, 2011, PENSEE, P5
   Jiang L, 2007, PROCEEDINGS OF THE T
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jones JA, 2007, PROCEEDINGS OF THE 2
   Just R, 2014, PROCEEDINGS OF THE 2
   Keller F, 2017, PAPER PRESENTED AT 2
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   Kochhar PS, 2016, PROCEEDINGS OF THE 2
   Le TDB, 2016, PROCEEDINGS OF THE 2
   Le TDB, 2015, PROCEEDINGS OF THE 2
   Lei Zhao, 2011, Journal of Software, V6, P1977, DOI 10.4304/jsw.6.10.1977-1984
   Li X, 2018, PROCEEDINGS OF THE 4
   Li XY, 2017, J HEALTHC ENG, V2017, DOI 10.1155/2017/9298061
   Liblit Ben., 2005, P 2005 ACM SIGPLAN C
   Lin Y, 2017, PROC INT CONF SOFTW, P393, DOI 10.1109/ICSE.2017.43
   Liu C, 2005, PROCEEDINGS OF 13TH
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Lucia, 2014, PROCEEDINGS OF THE 2
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   Masri W, 2010, PAPER PRESENTED AT T
   Moon S, 2014, INT CONF BIG DATA, P145, DOI 10.1109/BIGCOMP.2014.6741425
   Naish L, 2013, PAPER PRESENTED AT 2
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Neelofar N, 2018, SOFTWARE PRACT EXPER, V48, P641, DOI 10.1002/spe.2527
   Neelofar N, 2017, SOFTWARE PRACT EXPER, V47, P1633, DOI 10.1002/spe.2490
   Openhub, 2018, THE ASPECTJ OPEN SOU
   Orso Alessandro, 2014, P FUT SOFTW ENG FOSE
   Papadakis M, 2014, PROCEEDINGS OF THE 2
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C, 2011, PROCEEDINGS OF THE 2
   Pearson S, 2017, PROCEEDINGS OF THE 3
   Perez A, 2017, PROCEEDINGS OF THE 3
   Ren X, 2007, PROCEEDINGS OF THE 2
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Sobreira V, 2018, PAPER PRESENTED AT 2
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Wang S, 2011, 3RD INTERNATIONAL SYMPOSIUM ON INFORMATION ENGINEERING AND ELECTRONIC COMMERCE (IEEC 2011), PROCEEDINGS, P26
   Wang XC, 2017, DESTECH TRANS COMP, P26
   Wen W, 2012, PAPER PRESENTED AT 3
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2007, PROCEEDINGS OF THE 3
   Wong WE, 2012, PAPER PRESENTED AT 2
   Xia X, 2016, PAPER PRESENTED AT 2
   Xia X, 2016, AUTOMAT SOFTW ENG, V23, P43, DOI 10.1007/s10515-014-0165-z
   Xie X, 2013, PROCEEDINGS OF THE 5
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Xuan J, 2014, PROCEEDINGS OF THE 2
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yoo S, 2012, PROCEEDINGS OF THE 4
   Yoo S, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078840
   Zhang L, 2013, PROCEEDINGS OF THE 2
   Zhao L, 2011, PROCEEDINGS OF THE 2
   Zou D, 2018, AN EMPIRICAL STUDY O
NR 81
TC 26
Z9 27
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2019
VL 49
IS 8
BP 1197
EP 1224
DI 10.1002/spe.2703
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IG7YI
UT WOS:000474013200001
DA 2024-07-18
ER

PT J
AU Taneja, M
   Jalodia, N
   Byabazaire, J
   Davy, A
   Olariu, C
AF Taneja, Mohit
   Jalodia, Nikita
   Byabazaire, John
   Davy, Alan
   Olariu, Cristian
TI SmartHerd management: A microservices-based fog computing-assisted IoT
   platform towards data-driven smart dairy farming
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; dairy farming; data analytics; data-driven; fog
   computing; Internet of Things (IoT); microservices; smart farm
ID DATA ANALYTICS; CLASSIFICATION; SENSOR; COW
AB Internet of Things (IoT), fog computing, cloud computing, and data-driven techniques together offer a great opportunity for verticals such as dairy industry to increase productivity by getting actionable insights to improve farming practices, thereby increasing efficiency and yield. In this paper, we present SmartHerd, a fog computing-assisted end-to-end IoT platform for animal behavior analysis and health monitoring in a dairy farming scenario. The platform follows a microservices-oriented design to assist the distributed computing paradigm and addresses the major issue of constrained Internet connectivity in remote farm locations. We present the implementation of the designed software system in a 6-month mature real-world deployment, wherein the data from wearables on cows is sent to a fog-based platform for data classification and analysis, which includes decision-making capabilities and provides actionable insights to farmer towards the welfare of animals. With fog-based computational assistance in the SmartHerd setup, we see an 84% reduction in amount of data transferred to the cloud as compared with the conventional cloud-based approach.
C1 [Taneja, Mohit; Jalodia, Nikita; Byabazaire, John; Davy, Alan] Waterford Inst Technol, Telecommun Software & Syst Grp, Dept Comp & Math, Emerging Networks Lab,Sch Sci & Comp, Waterford, Ireland.
   [Taneja, Mohit; Jalodia, Nikita; Byabazaire, John; Davy, Alan] CONNECT Ctr Future Networks & Commun, Dublin, Ireland.
   [Olariu, Cristian] IBM Ireland, Innovat Exchange, Dublin, Ireland.
C3 South East Technological University (SETU)
RP Taneja, M (corresponding author), Waterford Inst Technol, Telecommun Software & Syst Grp, Dept Comp & Math, Emerging Networks Lab,Sch Sci & Comp, Waterford, Ireland.
EM mtaneja@tssg.org
RI Jalodia, Nikita/AAD-5670-2019; Taneja, Mohit/AAA-4623-2021; Byabazaire,
   John/KEH-7478-2024; Davy, Alan/J-3579-2015
OI Jalodia, Nikita/0000-0001-9498-807X; Taneja, Mohit/0000-0002-2261-5722;
   Byabazaire, John/0000-0002-4219-1912; Davy, Alan/0000-0003-0087-4560
FU Science Foundation Ireland (SFI); European Regional Development Fund
   [13/RC/2077]; CISCO Research Gift Fund
FX Science Foundation Ireland (SFI); European Regional Development Fund,
   Grant/Award Number: 13/RC/2077; CISCO Research Gift Fund
CR Andonovic I, 2010, ICT INNOVATIONS 2009, P21
   [Anonymous], CORR
   [Anonymous], 2017, NASA SEES HURR OPH L
   [Anonymous], 2014, 2014 FED C COMP SCI
   [Anonymous], 2015, AnimalBiotelemetry, DOI [10.1186/s40317-015-0045-8, DOI 10.1186/S40317-015-0045-8]
   [Anonymous], 2015, EU AGR MARK BRIEFS
   [Anonymous], 2013, P 2 ACM SIGCOMM WORK
   [Anonymous], HURR OPH HITS IR LIV
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Bonomi F., 2012, P 1 ACM MCC WORKSH M, P13
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Brewster C, 2017, IEEE COMMUN MAG, V55, P26, DOI 10.1109/MCOM.2017.1600528
   Byabazaire J., 2019, CONSUM COMM NETWORK
   Chang TC, 2017, PROCEEDINGS OF THE 15TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS (SENSYS'17), DOI 10.1145/3131672.3136962
   Chen MS, 2014, COMPUT MATH METHOD M, V2014, DOI 10.1155/2014/471356
   Chiang M, 2016, IEEE INTERNET THINGS, V3, P854, DOI 10.1109/JIOT.2016.2584538
   Dairymaster Ireland, MILK PARL MACH HEAT
   Dell, DELL EDG GAT 5100
   deSousaRamalho F, 2016, SMARTEDGE FOG COMPUT
   Familiar B., 2015, MICROSERVICES IOT AZ
   Fowler SusanJ., 2017, Production ready microservices, V1st
   Grogan Abi, 2012, Engineering & Technology, V7, P38, DOI 10.1049/et.2012.0601
   Hao ZJ, 2017, IEEE INTERNET COMPUT, V21, P44, DOI 10.1109/MIC.2017.26
   Heimerl K, 2013, P 10 USENIX S NETW S
   IEEE, IEEE STAND ASS IOT E
   Intel, INT IOT GAT
   intel, INT POW GADG
   Jukan A, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3041960
   Kaushik S, 2016, 2016 INTERNATIONAL CONFERENCE ON COMPUTATIONAL TECHNIQUES IN INFORMATION AND COMMUNICATION TECHNOLOGIES (ICCTICT)
   Kharas H, 2010, OECD DEV CTR WORKING, DOI DOI 10.1787/5KMMP8LNCRNS-EN
   Koneny J., 2016, CORR
   Krylovskiy A, 2015, 2015 3 INT C FUT INT
   LEE S, 2013, 2013 INT C INF NETW
   McLaughlin Kathleen, 2017, GAPS 4G NETWORK HIND
   MINTA SC, 1992, ECOL APPL, V2, P178, DOI 10.2307/1941774
   Mouradian C, 2018, IEEE COMMUN SURV TUT, V20, P416, DOI 10.1109/COMST.2017.2771153
   OpenFog Consortium, 2017, OPENFOG REF ARCH FOG
   Pentland AS, 2004, COMPUTER, V37, P78, DOI 10.1109/MC.2004.1260729
   Perera C, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057266
   Quantified AG, 2017, CATTL HLTH MAN TAGS
   Ramirez W, 2017, COMPUT COMMUN, V113, P43, DOI 10.1016/j.comcom.2017.09.011
   Rutten CJ, 2013, J DAIRY SCI, V96, P1928, DOI 10.3168/jds.2012-6107
   Sarkar S, 2018, IEEE T CLOUD COMPUT, V6, P46, DOI 10.1109/TCC.2015.2485206
   Schmitt P, 2016, IEEE INFOCOM SER
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Smith D, 2016, COMPUT ELECTRON AGR, V131, P40, DOI 10.1016/j.compag.2016.10.006
   Steeneveld W, 2015, J DAIRY SCI, V98, P709, DOI 10.3168/jds.2014-8595
   Stephenson MB, 2017, AGRICULTURE-BASEL, V7, DOI 10.3390/agriculture7070058
   Taneja M, SMARTHERD CONNECTED
   Taneja M, 2018, 2018 IEEE 4 WORLD FO
   Taneja M, 2016, 2016 IEEE ACM S EDG
   Taneja M, 2017, 2017 IFIP IEEE S INT
   Taneja M, 2019, IEEE ACCESS, V7, P40969, DOI 10.1109/ACCESS.2019.2907808
   Taneja M, 2016, PROCEDIA COMPUT SCI, V97, P153, DOI 10.1016/j.procs.2016.08.295
   Taylor K, 2013, IEEE INTELL SYST, V28, P12, DOI 10.1109/MIS.2013.102
   Vasisht D., 2017, P 14 USENIX S NETW S
   Wark T, 2009, IEEE PERVAS COMPUT, V8, P30, DOI 10.1109/MPRV.2009.15
   Williams ML, 2016, J DAIRY SCI, V99, P2063, DOI 10.3168/jds.2015-10254
   Wolfert S, 2017, AGR SYST, V153, P69, DOI 10.1016/j.agsy.2017.01.023
   Yannuzzi M, 2017, IEEE INTERNET COMPUT, V21, P54, DOI 10.1109/MIC.2017.25
   Zheleva M, 2017, P 2017 WORKSH COMP L
   ZOIS D, 2012, IEEE ICC
   Zois DS, 2014, IEEE GLOB COMM CONF, P3401, DOI 10.1109/GLOCOM.2014.7037333
   Zois DS, 2014, IEEE T SIGNAL PROCES, V62, P6209, DOI 10.1109/TSP.2014.2362098
NR 64
TC 53
Z9 55
U1 4
U2 32
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2019
VL 49
IS 7
BP 1055
EP 1078
DI 10.1002/spe.2704
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IC6BJ
UT WOS:000471053400001
PM 31423028
OA Green Published, hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Liu, YZ
   Liu, L
   Liu, HX
   Yin, XL
AF Liu, Yuzhou
   Liu, Lei
   Liu, Huaxiao
   Yin, Xinglong
TI App store mining for iterative domain analysis: Combine app descriptions
   with user reviews
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE app store mining; domain analysis; feature extraction; reviews analysis
ID REQUIREMENTS; FEATURES
AB Compared with traditional software, the domain analysis of apps is conducted not only in the early stage of software development to gain knowledge of a particular domain but also runs throughout each iteration of apps to help developers understand evolution trends of the domain for maintaining their competitiveness. In this paper, we propose an approach to analyze app descriptions combined with reviews in App stores automatically and construct a feature-based domain state model (FDSM) in the form of state machine to support the domain analysis of apps. In FDSM, the domain knowledge up to a certain moment together is defined as a state. Initial state summarizes the high-level knowledge by gaining topics of app descriptions, whereas each transition is generated based on the information gained within one period of time and describes the change from the current state to the next one. Furthermore, user opinions in reviews are introduced into the model to quantify the value of information for helping developers get key domain knowledge efficiently. To validate the proposed approach, we conducted a series of experiments based on Google Play. The results show that FDSM can provide valuable information for supporting domain analysis, especially in the evolution process of apps.
C1 [Liu, Yuzhou; Liu, Lei; Liu, Huaxiao; Yin, Xinglong] Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
   [Liu, Yuzhou; Liu, Lei; Liu, Huaxiao; Yin, Xinglong] Jilin Univ, Minist Educ, Key Lab Symbol Computat & Knowledge Engn, Changchun 130012, Jilin, Peoples R China.
C3 Jilin University; Jilin University
RP Liu, HX (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.; Liu, HX (corresponding author), Jilin Univ, Minist Educ, Key Lab Symbol Computat & Knowledge Engn, Changchun 130012, Jilin, Peoples R China.
EM liuhuaxiao@jlu.edu.cn
RI lei, liu/HTR-5486-2023
OI liu, huaxiao/0000-0002-8151-1413
FU National Key Research and Development Program of China [2017YFB1003103];
   Natural Science Research Foundation of Jilin Province of China
   [20190201193JC]
FX National Key Research and Development Program of China, Grant/Award
   Number: 2017YFB1003103; Natural Science Research Foundation of Jilin
   Province of China, Grant/Award Number: 20190201193JC
CR Al-Subaihin AA, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962600
   [Anonymous], 2014, P 36 INT C SOFTW ENG
   Bakar NH, 2016, APPL SOFT COMPUT, V49, P1297, DOI 10.1016/j.asoc.2016.07.048
   Berardi G, 2015, P 30 ANN ACM S APPL
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Blair-Goldensohn S, 2008, P WWW 2008 WORKSH NL
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cao D, 2017, INFORM SCIENCES, V381, P161, DOI 10.1016/j.ins.2016.11.025
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Corral L, 2013, 2013 1 INT WORKSH EN
   Davril JM, 2013, P 2013 9 JOINT M FDN
   Ferrari A, 2013, P 17 INT SOFTW PROD
   Finkelstein A, 2017, INFORM SOFTWARE TECH, V87, P119, DOI 10.1016/j.infsof.2017.03.002
   Gu X, 2015, 2015 30 IEEE ACM INT
   Guzman E, 2015, 2015 30 IEEE ACM INT
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Harman M, 2012, P 9 IEEE WORK C MIN
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Iacob C, 2013, INT C MOB COMP APPL
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Itzik N, 2016, IEEE T SOFTWARE ENG, V42, P687, DOI 10.1109/TSE.2015.2512599
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Lian X, 2016, 2016 IEEE 24 INT REQ
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Liu YZ, 2017, J SYST SOFTWARE, V133, P126, DOI 10.1016/j.jss.2017.08.024
   Maalej W, 2015, 2015 IEEE 23 INT REQ
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   Mefteh M, 2016, COMPUT J, V59, P1784, DOI 10.1093/comjnl/bxw027
   Panichella S, 2015, 2015 IEEE INT C SOFT
   Socher Richard, 2013, Long Papers, P455
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Vakulenko S, 2014, 35 INT C INF SYST AU
   Villarroel L., 2016, 2016 IEEE ACM 38 INT
   Vu PM, 2015, 2015 30 IEEE ACM INT
   Vu PM, 2016, P 31 IEEE ACM INT C
   Yu Y, 2013, P 5 AS PAC S INT CHA
   ZHAO Y, 2002, PROCEEDINGS OF THE 1
NR 39
TC 4
Z9 5
U1 1
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2019
VL 49
IS 6
BP 1013
EP 1040
DI 10.1002/spe.2693
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW3GY
UT WOS:000466579600004
DA 2024-07-18
ER

PT J
AU Maffione, V
   Lettieri, G
   Rizzo, L
AF Maffione, Vincenzo
   Lettieri, Giuseppe
   Rizzo, Luigi
TI Cache-aware design of general-purpose Single-Producer-Single-Consumer
   queues
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cache-aware design; FastForward; Lamport lock-free queue; SPSC
ID METHODOLOGY
AB Data processing pipelines normally use lockless Single-Producer-Single-Consumer (SPSC) queues to efficiently decouple their processing threads and achieve high throughput, minimizing the cost of synchronization. SPSC queues have been widely studied, mostly for applications such as streaming data or network monitoring, where the main goal is maximizing throughput. There are now many applications, such as virtual-machine-virtual-machine communication, software-defined networking, and message-based kernels, where low latency is also important, and the tradeoffs between high-throughput and low-latency algorithms have not been studied equally well. Furthermore, at high or variable transaction rates, the effect of memory hierarchies and cache coherence subsystems may be dominant and yield surprising results. In this paper, we make two contributions. First, we provide a comprehensive study of the two main families of SPSC queues, namely, "Lamport" and "FastForward" queues, with a detailed analytical and experimental characterization of their behavior in terms of operating regimes, throughput, latency, and cache misses. Second, we propose two new queue variants, namely, improved FastForward and batched improved FastForward, which have better worst-case behavior than other variants in terms of cache misses, which is an important feature for a number of applications. Together, these two contributions provide practical guidelines to choose the best solution depending on the application requirements.
C1 [Maffione, Vincenzo; Lettieri, Giuseppe; Rizzo, Luigi] Univ Pisa, Dipartimento Ingn Informaz, Pisa, Italy.
   [Maffione, Vincenzo] Largo Lucio Lazzarino 1, I-56122 Pisa, Italy.
C3 University of Pisa
RP Maffione, V (corresponding author), Lungarno Antonio Pacinotti 43, I-56126 Pisa, PI, Italy.
EM v.maffione@gmail.com
RI Lettieri, Giuseppe/ABI-8376-2020
OI Lettieri, Giuseppe/0000-0003-1005-7441; Maffione,
   Vincenzo/0000-0003-0020-8664
CR Aldinucci M, 2012, EUR C PAR PROC EUR P
   [Anonymous], 2013, NETW FUNCT VIRT NFV
   [Anonymous], 2009, Intel 64 and IA-32 Architectures Software Developer's Manual Volume 3A: System Programming Guide, Part 1
   [Anonymous], AM EC2 INST TYP
   Deri L, PF RING DNA
   Fraser K, 2004, UCAMCLTR639
   Gamsa B, 1999, P 3 USENIX S OP SYST
   Giacomoni J, 2008, P 13 ACM SIGPLAN S P
   HERLIHY M, 1993, ACM T PROGR LANG SYS, V15, P745, DOI 10.1145/161468.161469
   HERLIHY M, 1991, ACM T PROGR LANG SYS, V13, P124, DOI 10.1145/114005.102808
   Intel, 2012, DAT PLAN DEV KIT
   Jablin Thomas B, 2010, P 8 WORKSH EXPL PAR
   Jensen E. H., 1987, Technical Report. UCRL-97663
   Kogan A, 2014, P 2014 ACM S PRINC D
   Kogan A, 2012, ACM SIGPLAN NOTICES, V47, P141, DOI 10.1145/2370036.2145835
   Ladan-Mozes E, 2004, P 18 INT S DISTR COM
   LAMPORT L, 1979, IEEE T COMPUT, V28, P690, DOI 10.1109/TC.1979.1675439
   LAMPORT L, 1983, ACM T PROGR LANG SYS, V5, P190, DOI 10.1145/69624.357207
   Lee PPC, 2010, IEEE INT S PAR DISTR
   Lettieri G, 2018, COMPUT J, V61, P808, DOI 10.1093/comjnl/bxx092
   Maffione V, SPSCQ LIB EXAMPLE PR
   McKenney P.E., 1998, P 10 IASTED INT C PA
   McKenney P.E., 2010, MEMORY BARRIERS HARD
   Michael MM, 1998, J PARALLEL DISTR COM, V51, P1, DOI 10.1006/jpdc.1998.1446
   Milman G, 2018, P 30 S PAR ALG ARCH
   Mitropoulou Konstantina, 2016, P 2016 INT C SUP ICS
   Moir M, 2005, P 17 ANN ACM S PAR A
   Morrison A, 2013, ACM SIGPLAN NOTICES, V48, P103, DOI 10.1145/2517327.2442527
   Paolino M., 2015, 2015 IEEE C NETW FUN
   Pfaff B., 2015, P 12 USENIX C NETW S
   Preud'homme T, 2010, 22 INT S COMP ARCH H
   Rizzo L., 2012, USENIX ATC
   Rizzo L., 2012, CONEXT
   Rizzo L, 2016, P ACM IEEE S ARCH NE
   Rizzo L, 2018, COMPUT COMMUN, V120, P32, DOI 10.1016/j.comcom.2018.02.018
   Scherer III WN, 2006, P 11 ACM SIGPLAN S P
   TORRELLAS J, 1994, IEEE T COMPUT, V43, P651, DOI 10.1109/12.286299
   Tsigas P, 2001, P 13 ANN ACM S PAR A
   Valois JD, 1995, P 14 ANN ACM S PRINC
   Wu Y., 2007, P INT S COD GEN OPT
   Yang C, 2016, P 21 ACM SIGPLAN S P
   Yuanming Zhang, 2009, IAENG International Journal of Computer Science, V36, P275
NR 42
TC 5
Z9 6
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2019
VL 49
IS 5
BP 748
EP 779
DI 10.1002/spe.2675
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HR3KH
UT WOS:000463035200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rodriguez, MA
   Buyya, R
AF Rodriguez, Maria A.
   Buyya, Rajkumar
TI Container-based cluster orchestration systems: A taxonomy and future
   directions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cluster management; container orchestration; container scheduling;
   survey; taxonomy
ID RESOURCE-MANAGEMENT
AB Containers, enabling lightweight environment and performance isolation, fast and flexible deployment, and fine-grained resource sharing, have gained popularity in better application management and deployment in addition to hardware virtualization. They are being widely used by organizations to deploy their increasingly diverse workloads derived from modern-day applications such as web services, big data, and internet of things in either proprietary clusters or private and public cloud data centers. This has led to the emergence of container orchestration platforms, which are designed to manage the deployment of containerized applications in large-scale clusters. These systems are capable of running hundreds of thousands of jobs across thousands of machines. To do so efficiently, they must address several important challenges including scalability, fault tolerance and availability, efficient resource utilization, and request throughput maximization among others. This paper studies these management systems and proposes a taxonomy that identifies different mechanisms that can be used to meet the aforementioned challenges. The proposed classification is then applied to various state-of-the-art systems leading to the identification of open research challenges and gaps in the literature intended as future directions for researchers.
C1 [Rodriguez, Maria A.; Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, CLOUDS Lab, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Rodriguez, MA (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, CLOUDS Lab, Melbourne, Vic 3010, Australia.
EM marodriguez@unimelb.edu.au
RI Rodriguez, Maria Alejandra/AAD-1393-2019; Buyya, Rajkumar/C-3424-2009
OI Rodriguez, Maria Alejandra/0000-0002-2831-8526; Buyya,
   Rajkumar/0000-0001-9754-6496
CR [Anonymous], 2013, 8 EUROSYS C 2013 EUR, DOI [DOI 10.1145/2465351.2465386, 10.1007/978-94-007-6925-0_19, DOI 10.1007/978-94-007-6925-0_19]
   [Anonymous], 2006, P ACM S OP SYST PRIN
   Boutin E, 2014, P USENIX C OP SYST D
   CASAVANT TL, 1988, IEEE T SOFTWARE ENG, V14, P141, DOI 10.1109/32.4634
   CoreOS, 2018, FLANN
   Docker Inc, 2018, SCAL TEST DOCK SWARM
   Felter W, 2015, INT SYM PERFORM ANAL, P171, DOI 10.1109/ISPASS.2015.7095802
   Google, 2018, LMCTFY
   Hindman B., 2011, NSDI, V11, P295, DOI DOI 10.1016/0375-6505(85)90011-2
   Hunt Patrick, 2010, P USENIX ANN TECHN C, V8
   Jennings B, 2015, J NETW SYST MANAG, V23, P567, DOI 10.1007/s10922-014-9307-7
   Krauter K, 2002, SOFTWARE PRACT EXPER, V32, P135, DOI 10.1002/spe.432
   Kubernetes, 2018, BUILD LARG CLUST
   Kubernetes, 2018, FRAKT
   Lamport L, 1998, ACM T COMPUT SYST, V16, P133, DOI 10.1145/279227.279229
   Li B, 2016, P 2016 7 INT C CLOUD
   Mann ZA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2797211
   Manvi SS, 2014, J NETW COMPUT APPL, V41, P424, DOI 10.1016/j.jnca.2013.10.004
   Melnik S, 2010, PROC VLDB ENDOW, V3, P330
   Morabito R., 2015, P 2015 IEEE INT C CL
   Opencontainers, 2018, RUNC
   Piraghaj SF, 2017, SOFTWARE PRACT EXPER, V47, P505, DOI 10.1002/spe.2422
   Ruiz C, 2015, LECT NOTES COMPUT SC, V9523, P813, DOI 10.1007/978-3-319-27308-2_65
   runV, 2018, RUNV BRING IS DOCK
   Toptal A, 2010, INT J PROD RES, V48, P5235, DOI 10.1080/00207540903121065
   Vavilapalli V.K., 2013, P 4 ANN S CLOUD COMP, P1
   Verma AK, 2015, PARKINSONS DIS-US, V2015, DOI 10.1155/2015/598028
   Zhang Z, 2014, PROC VLDB ENDOW, V7, P1393, DOI 10.14778/2733004.2733012
NR 28
TC 49
Z9 51
U1 1
U2 27
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2019
VL 49
IS 5
BP 698
EP 719
DI 10.1002/spe.2660
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HR3KH
UT WOS:000463035200001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, F
   Liu, GM
   Zhao, B
   Fu, XM
   Yahyapour, R
AF Zhang, Fei
   Liu, Guangming
   Zhao, Bo
   Fu, Xiaoming
   Yahyapour, Ramin
TI Reducing the network overhead of user mobility-induced virtual machine
   migration in mobile edge computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Internet of Things; live migration; mobile edge computing; network
   overhead; user mobility; virtual machine
AB With the popularity of mobile devices (such as smartphones and tablets) and the development of the Internet of Things, mobile edge computing is envisioned as a promising approach to improving the computation capabilities and energy efficiencies of mobile devices. It deploys cloud data centers at the edge of the network to lower service latency. To satisfy the high latency requirement of mobile applications, virtual machines (VMs) have to be correspondingly migrated between edge cloud data centers because of user mobility. In this paper, we try to minimize the network overhead resulting from constantly migrating a VM to cater for the movement of its user. First, we elaborate on two simple migration algorithms (M-All and M-Edge), and then, two optimized algorithms are designed by classifying user mobilities into two categories (certain and uncertain moving trajectories). Specifically, a weight-based algorithm (M-Weight) and a mobility prediction-based heuristic algorithm (M-Predict) are proposed for the two types of user mobilities, respectively. Numerical results demonstrate that the two optimized algorithms can significantly lower the network overhead of user mobility-induced VM migration in mobile edge computing environments.
C1 [Zhang, Fei; Zhao, Bo; Fu, Xiaoming; Yahyapour, Ramin] Univ Gottingen, Inst Comp Sci, Gottingen, Germany.
   [Zhang, Fei; Zhao, Bo; Yahyapour, Ramin] Gessellschaft Wissensch Datenverarbeitung mbH Got, Gottingen, Germany.
   [Zhang, Fei; Liu, Guangming] Natl Univ Def Technol, Coll Comp, Changsha, Hunan, Peoples R China.
   [Zhang, Fei] Fasserg 11, D-37077 Gottingen, Germany.
C3 University of Gottingen; National University of Defense Technology -
   China
RP Zhang, F (corresponding author), Univ Gottingen, Inst Comp Sci, Gottingen, Germany.; Zhang, F (corresponding author), Gessellschaft Wissensch Datenverarbeitung mbH Got, Gottingen, Germany.; Zhang, F (corresponding author), Natl Univ Def Technol, Coll Comp, Changsha, Hunan, Peoples R China.
EM fei.zhang@gwdg.de
RI Fu, Xiaoming/B-7208-2016; Fu, Xiaoming/AAD-2828-2022; zhang,
   fei/KHU-5230-2024; Yahyapour, Ramin/AAM-1875-2020
OI Fu, Xiaoming/0000-0002-8012-4753; Fu, Xiaoming/0000-0002-8012-4753;
   Yahyapour, Ramin/0000-0002-9057-4395; Zhao, Bo/0000-0002-6406-3911
FU EU FP7 Marie Curie ITN CleanSky [607584]
FX EU FP7 Marie Curie ITN CleanSky, Grant/Award Number: 607584
CR Akoush S, 2010, 18 ANN IEEE ACM INT
   Akyildiz IR, 2004, IEEE ACM T NETWORK, V12, P1021, DOI 10.1109/TNET.2004.838604
   Bittencourt L. F., 2015, 10 INT C P2P PAR GRI
   Chen X, 2015, IEEE T PARALL DISTR, V26, P974, DOI 10.1109/TPDS.2014.2316834
   Clark C., 2005, P 2 C S NETW SYST DE
   ETSI M, 2016, MOBILE EDGE COMPUTIN, P3
   Gerla M, 1999, P 2 IEEE WORKSH MOB
   Gkatzikis L, 2013, IEEE WIREL COMMUN, V20, P24, DOI 10.1109/MWC.2013.6549280
   Ha K., 2015, Tech. Rep. CMUCS-15-113
   Jiao L, 2013, FUT NETW MOB SUMM LI
   Ksentini A., 2014, IEEE INT C COMM ICC
   Lin YB, 2013, IEEE T MOBILE COMPUT, V12, P1236, DOI 10.1109/TMC.2012.87
   Liu HK, 2015, IEEE T PARALL DISTR, V26, P1192, DOI 10.1109/TPDS.2014.2316152
   Mach P, 2017, IEEE COMMUN SURV TUT, V19, P1628, DOI 10.1109/COMST.2017.2682318
   Mashtizadeh A. J., 2014, P 2014 USENIX ANN TE
   Mashtizadeh A.J., 2011, P 2011 USENIX ANN TE, P187
   Nadembega A, 2016, IEEE ICC, DOI 10.1109/ICC.2016.7511148
   NELSON M, 2005, P USENIX ANN TECHN C
   Pathirana PN, 2003, P 4 ACM INT S MOB AD
   Si H, 2010, P 7 ANN IEEE CONS CO
   Sun Xiang, 2017, IEEE T CLOUD COMPUT
   Urgaonkar R, 2015, PERFORM EVALUATION, V91, P205, DOI 10.1016/j.peva.2015.06.013
   Xu SG, 2002, WIREL COMMUN MOB COM, V2, P85, DOI 10.1002/wcm.35
   Zhang F, 2017, P 2 WORKSH CLOUD ASS
   Zheng Yu, 2009, P 18 INT C WORLD WID
NR 25
TC 17
Z9 18
U1 0
U2 38
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2019
VL 49
IS 4
SI SI
BP 673
EP 693
DI 10.1002/spe.2642
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN5AE
UT WOS:000460194000006
DA 2024-07-18
ER

PT J
AU Toffalini, F
   Sun, J
   Ochoa, M
AF Toffalini, Flavio
   Sun, Jun
   Ochoa, Martin
TI Practical static analysis of context leaks in Android applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Android; memory leak; static analysis
AB Android native applications, written in Java and distributed in APK format, are widely used in mobile devices. Their specific pattern of use lets the operating system control the creation and destruction of resources, such as activities and services (contexts). Programmers are not supposed to interfere with such life cycle events. Otherwise, contexts might be leaked, ie, they will never be deallocated from memory, or be deallocated late, leading to memory exhaustion and frozen applications. In practice, it is easy to write incorrect code, which hinders garbage collection of contexts and leads to context leakages. In this work, we present a novel static analysis method that finds context leaks in Android code. We apply this analysis to APKs translated into Java bytecode. We provide a formal analysis of our algorithms and suggest further research directions for improving precision by combining different approaches. We discuss the results of a large number of experiments with our analysis, which reveal context leaks in many widely used applications from the Android marketplace. This shows the practical usefulness of our technique and its superiority w.r.t. the well-known Lint and Infer static analysis tools. We estimate the amount of memory saved by the collection of the leaks found and explain, experimentally, where programmers often go wrong and limitations of our tool. Such lessons could be used for designing of a sound or more powerful static analysis tool. This work can be considered as a practical application of software analysis techniques to solve practical problems.
C1 [Toffalini, Flavio; Sun, Jun] Singapore Univ Technol & Design, Singapore 487372, Singapore.
   [Ochoa, Martin] Univ Rosario, Dept Appl Math & Comp Sci, Bogota, Colombia.
C3 Singapore University of Technology & Design; Universidad del Rosario
RP Toffalini, F (corresponding author), Singapore Univ Technol & Design, Singapore 487372, Singapore.
EM flavio_toffalini@mymail.sutd.edu.sg
RI Ochoa, Martín/AAV-2564-2020
OI Ochoa, Martín/0000-0002-7816-5775
CR [Anonymous], P 2013 IEEE 24 INT S
   [Anonymous], P 25 INT C COMP CONS
   [Anonymous], 2007, THESIS
   [Anonymous], P P 4 INT C MOB SOFT
   [Anonymous], ISS REL MEM LEAK OSM
   [Anonymous], DROIDLEAKS BENCHMARK
   [Anonymous], P 11 INT WORKSH AUT
   [Anonymous], 2017 IEEE 41 ANN COM
   [Anonymous], P 34 ACM SIGPLAN C P
   [Anonymous], P 2015 30 IEEE ACM I
   [Anonymous], ISS REL MEM LEAK OWN
   [Anonymous], P 2015 INT C APPL TH
   [Anonymous], COMPUT MODEL NEW TEC
   [Anonymous], P 2014 IEEE 15 INT S
   [Anonymous], COMM REL MEM LEAK MO
   [Anonymous], P 22 IEEE ACM INT C
   [Anonymous], P 2013 28 IEEE ACM I
   [Anonymous], 2012, INT J CONTROL AUTOMA
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P205, DOI 10.1109/MOBILESoft.2017.21
   Goransson Anders., 2014, Efficient Android Threading: Asynchronous Processing Techniques for Android Applications
   Cardona PAN, 2015, CUAD ACT, P154
   Payet É, 2012, INFORM SOFTWARE TECH, V54, P1192, DOI 10.1016/j.infsof.2012.05.003
   Payet É, 2011, LECT NOTES ARTIF INT, V6803, P439, DOI 10.1007/978-3-642-22438-6_33
   Toffalini F, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P215, DOI 10.1145/3183519.3183530
   Usrey MW, 2014, PROCEEDINGS OF THE ASME 8TH INTERNATIONAL CONFERENCE ON ENERGY SUSTAINABILITY, 2014, VOL 1
NR 26
TC 2
Z9 2
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2019
VL 49
IS 2
SI SI
BP 233
EP 251
DI 10.1002/spe.2659
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0GK
UT WOS:000459864300006
DA 2024-07-18
ER

PT J
AU Chainbi, W
   Sassi, E
AF Chainbi, W.
   Sassi, E.
TI A multiswarm for composite SaaS placement optimization based on PSO
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cloud; MPSO; PSO; SaaS placement
AB Recently, the demand for software as a service (SaaS) has witnessed an increasing interest, which has raised many challenges for SaaS management. One of these challenges is to deliver a high performance composite SaaS for users while optimizing the resources used. In this paper, we focus on the problem of SaaS placement. This problem occurs in the deployment of SaaS components in Cloud. It deals with the way a composite SaaS should be placed in a Cloud by the Cloud's provider such that its performance is optimal based on its estimated execution time. Previous work, including metaheuristic methods and particle swarm optimization, focuses on resolving the problem in a static environment. Moreover, in a Cloud data center, the workloads of applications and resources capacities keep changing over time, and the environment is dynamic, so the solution found for the initial placement may need to be reconfigured to maintain the SaaS performance and to optimize the resource used. As multiswarm technique has attracted increasing attention during the last decade, in this paper, we propose a new placement solution based on such technique enhanced with a cooperative learning strategy to cope with the dynamic aspect of the Cloud.
C1 [Chainbi, W.; Sassi, E.] Univ Sousse, Sousse Natl Sch Engineers, BP 264 Cite Erriadh, Sousse 4023, Tunisia.
C3 Universite de Sousse
RP Chainbi, W (corresponding author), Univ Sousse, Sousse Natl Sch Engineers, BP 264 Cite Erriadh, Sousse 4023, Tunisia.
EM Walid.Chainbi@gmail.com
OI Chainbi, Walid/0000-0001-7423-8212
CR [Anonymous], 2008, 2008 GRID COMP ENV W
   [Anonymous], 1999, INTRO GENETIC ALGORI
   Bhardwaj S, 2015, INT C COMP COMM AUT
   Blackwell T, 2006, IEEE T EVOLUT COMPUT, V10, P459, DOI 10.1109/TEVC.2005.857074
   Blackwell Tim, 2008, P193, DOI 10.1007/978-3-540-74089-6_6
   Branke J., 2002, EVOLUTIONARY OPTIMIZ
   Buyya R., 2010, Cloud Computing: Principles and Paradigms
   Carlisle A, 2000, INT C ART INT ICAI 2
   Dorigo M, 2003, INT SER OPER RES MAN, V57, P251
   Dorigo M, 1992, OPTIMIZATION LEARNIN
   Dubey A., 2007, MCKINSEY Q
   Hajji MA, 2018, SOFT COMPUT, V22, P4025, DOI 10.1007/s00500-017-2613-8
   Heilig L, 2015, EV COMP COMB OPT COP, DOI [10. 1007/978-3-319-16468-7-1, DOI 10.1007/978-3-319-16468-7-1]
   Heilig L., 2014, Tutorials in Operations Research-Bridging Data and Decisions, P1, DOI DOI 10.1287/EDUC.2014.0124
   HILLIS WD, 1990, PHYSICA D, V42, P228, DOI 10.1016/0167-2789(90)90076-2
   HU XH, 2002, P 2002 C EV COMP CEC
   IBM, 2003, CISC VIS NETW IND GL
   Kataoka S, 2014, EUR J OPER RES, V237, P440, DOI 10.1016/j.ejor.2014.02.014
   Kennedy J., 1995, 1995 P IEEE INT C NE
   Lalla-Ruiz E, 2015, LEARN INT OPT LILL F, DOI [10. 1007/978-3-319-19084-6-19, DOI 10.1007/978-3-319-19084-6-19]
   Laplante Phillip A., 2008, IT Professional, V10, P46, DOI 10.1109/MITP.2008.60
   Liu LL, 2010, IEEE T SYST MAN CY B, V40, P1634, DOI 10.1109/TSMCB.2010.2043527
   Liu ZP, 2014, COMPUT J, V57, P291, DOI 10.1093/comjnl/bxt009
   Morrison RonaldW., 2004, NAT COMP SER
   Ni ZW, 2012, APPL MECH MATER, V130-134, P3062, DOI 10.4028/www.scientific.net/AMM.130-134.3062
   Parsopoulos K. E., 2002, Natural Computing, V1, P235, DOI 10.1023/A:1016568309421
   Talbi E.-G, 2009, METAHEURISTICS DESIG, V74, DOI DOI 10.1002/9780470496916
   Yazdani D, 2013, APPL SOFT COMPUT, V13, P2144, DOI 10.1016/j.asoc.2012.12.020
   Yusoh Z, 2013, THESIS
   Yusoh ZIM, 2012, P 2012 IEEE 5 INT C
   Zaigham M., 2014, Cloud Computing Challenges, Limitations and RD Solutions, Studies in Computational Intelligence, Computer Communications and Networks
NR 31
TC 4
Z9 4
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2018
VL 48
IS 10
SI SI
BP 1847
EP 1864
DI 10.1002/spe.2600
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GS4EA
UT WOS:000443587100007
DA 2024-07-18
ER

PT J
AU Huang, Q
   Yang, YR
   Zhan, X
   Wan, HY
   Wu, GQ
AF Huang, Qing
   Yang, Yangrui
   Zhan, Xue
   Wan, Hongyan
   Wu, Guoqing
TI Query expansion based on statistical learning from code changes
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code changes; code search; information retrieval; software reuse;
   statistical learning; query expansion
AB Thesaurus-based, code-related, and software-specific query expansion techniques are the main contributions in free-form query search. However, these techniques still could not put the most relevant query result in the first position because they lack the ability to infer the expansion words that represent the user needs based on a given query. In this paper, we discover that code changes can imply what users want and propose a novel query expansion technique with code changes (QECC). It exploits (changes, contexts) pairs from changed methods. On the basis of statistical learning from pairs, it can infer code changes for a given query. In this way, it expands a query with code changes and recommends the query results that meet actual needs perfectly. In addition, we implement InstaRec to perform QECC and evaluate it with 195039 change commits from GitHub and our code tracker. The results show that QECC can improve the precision of 3 code search algorithms (ie, IR, Portfolio, and VF) by up to 52% to 62% and outperform the state-of-the-art query expansion techniques (ie, query expansion based on crowd knowledge and CodeHow) by 13% to 16% when the top 1 result is inspected.
C1 [Huang, Qing; Wan, Hongyan; Wu, Guoqing] Wuhan Univ, Comp Sch, State Key Lab Software Engn, Wuhan, Hubei, Peoples R China.
   [Yang, Yangrui] North China Univ Water Resources & Elect Power, Coll Informat Engn, Zhengzhou, Henan, Peoples R China.
   [Zhan, Xue] Deepin Technol Co Ltd, Wuhan, Hubei, Peoples R China.
C3 Wuhan University; North China University of Water Resources & Electric
   Power
RP Wu, GQ (corresponding author), Wuhan Univ, Comp Sch, State Key Lab Software Engn, Wuhan, Hubei, Peoples R China.
EM qh@whu.edu.cn
FU National Natural Science Foundation of China [61170022, 91118003]
FX National Natural Science Foundation of China, Grant/Award Number:
   61170022 and 91118003
CR Allamanis M., 2014, P 22 ACM SIGSOFT INT
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], P 36 INT C SOFTW ENG
   Brown P. F., 1993, Computational Linguistics, V19, P263
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Chan WK, 2012, P ACM SIGSOFT INT S
   desSouza LBL, 2014, P 22 INT C PROGR COM
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Fischer G, 1991, P INT C SOFTW ENG AU
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Galenson J, 2014, P 36 INT C SOFTW ENG
   Haefliger S, 2008, MANAGE SCI, V54, P180, DOI 10.1287/mnsc.1070.0748
   Haiduc S, 2013, 35 INT C SOFTW ENG S
   Hill E, 2014, P 2014 SOFTW EV WEEK
   Howard MJ, 2013, P 10 IEEE WORK C MIN
   Lau R, 1993, P IEEE INT C AC SPEE
   Leacock C, 1998, LANG SPEECH & COMMUN, P265
   Lemos O, 2014, P 11 WORK C MIN SOFT
   Lemos OAL, 2007, IEEE ACM INT C AUT S
   Lu M, 2015, INT C SOFTW AN EV RE
   Lv F, 2015, IEEE ACM INT C AUT S
   Mcmillan C, 2011, INT C SOFTW ENG HON
   Mcmillan C, ACM T SOFTW ENG METH, V22, P1
   Nazar N, 2016, FRONT COMPUT SCI-CHI, V10, P504, DOI 10.1007/s11704-015-4409-2
   Negara S., 2014, P 36 INT C SOFTW ENG
   Nguyen AT, 2016, ACM SIGSOFT INT S FD
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   RAYCHEV V, 2014, P 35 ACM SIGPLAN C P
   Roldan-Vega M, 2013, P 29 IEEE INT C SOFT
   Rosenfeld R, 1996, COMPUT SPEECH LANG, V10, P187, DOI 10.1006/csla.1996.0011
   Ryu H, 2016, PR INT CONGR SOUND V
   Sadowski C, 2015, P 2015 10 JOINT M FD
   Shepherd D, 2007, P 6 INT C ASP OR SOF
   Sim SE, 1998, P INT WORKSH PROGR C
   Singer J, 1997, C CTR ADV STUD COLL
   Sun X, 2014, P 2014 3 INT WORKSH
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xin Y, 2016, P 38 INT C SOFTW ENG
   Yang J, 2014, EMPIR SOFTW ENG, V19, P161
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
NR 41
TC 10
Z9 10
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2018
VL 48
IS 7
BP 1333
EP 1351
DI 10.1002/spe.2574
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI6XE
UT WOS:000434645700001
DA 2024-07-18
ER

PT J
AU D'Souza, C
   Deufemia, V
   Ginige, A
   Polese, G
AF D'Souza, Chris
   Deufemia, Vincenzo
   Ginige, Athula
   Polese, Giuseppe
TI Enabling the generation of web applications from mockups
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business information systems; database; end-user development;
   human-computer interaction; mockups; web application modeling
ID END-USER DEVELOPMENT; TOOL; LANGUAGES; SUPPORT
AB Mockups are widely used to elicit and validate user requirements in web applications, and several intuitive tools have been developed in recent years, actively involving the end user in the requirements solicitation process. However, most current web development approaches and tools discard mockups after the information-gathering process, abandoning the opportunity to exploit underlying information in them for autogenerating functional web applications. To overcome this limitation, we have devised a method for deriving the database schema and the logic of the web application from the information contained within mockups. In particular, the method gathers clues on how to organize the data and the control flow of the web application by analyzing the structure and relationships of the widgets in the mockup. Based on the proposed method, we have implemented a tool supporting the generation of web applications abiding by the model-view-controller architectural pattern. The tool has been evaluated by involving several end users in the development of web applications for different domains.
C1 [D'Souza, Chris] Australian Catholic Univ, Sydney, NSW 2060, Australia.
   [D'Souza, Chris; Ginige, Athula] Western Sydney Univ, Penrith, NSW 2751, Australia.
   [Deufemia, Vincenzo; Polese, Giuseppe] Univ Salerno, Dept Comp Sci, I-84084 Fisciano, Italy.
C3 Australian Catholic University; Western Sydney University; University of
   Salerno
RP Deufemia, V (corresponding author), Univ Salerno, Dept Comp Sci, I-84084 Fisciano, Italy.
EM deufemia@unisa.it
RI Deufemia, Vincenzo/M-3553-2016; Ginige, Athula/AAV-2129-2020; Polese,
   Giuseppe/CAG-5264-2022
OI Deufemia, Vincenzo/0000-0002-6711-3590; Ginige,
   Athula/0000-0002-7445-588X; Polese, Giuseppe/0000-0002-8496-2658
CR Ambwani K, 2016, TECHNICAL REPORT
   Paredes-Valverde MA, 2015, SOFTWARE PRACT EXPER, V45, P365, DOI 10.1002/spe.2233
   [Anonymous], 2006, PRACTICAL NONPARAMET
   Bouchrika I, 2013, P 2013 INT C INF SYS
   Briola D, 2017, SOFTWARE PRACT EXPER, V47, P1773, DOI 10.1002/spe.2494
   Brogneaux A, 2005, P 23 IASTED INT C DA
   Caruccio L, 2015, J VISUAL LANG COMPUT, V31, P230, DOI 10.1016/j.jvlc.2015.10.022
   Caruccio L, 2015, INT J SOFTW ENG KNOW, V25, P307, DOI 10.1142/S0218194015400112
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Costagliola G, 2007, J VISUAL LANG COMPUT, V18, P165, DOI 10.1016/j.jvlc.2006.06.002
   Coyette A, 2005, LECT NOTES COMPUT SC, V3585, P550, DOI 10.1007/11555261_45
   D'Souza C, 2010, P 2010 INT C COMP SO
   Deufemia V, 2013, P 6 INT S VIS INF CO
   Field A., 2003, How to Design and Report Experiments
   Fu Y, 2011, P 5 BIENN C INN DAT
   Giese M, 2004, P 7 INT CUN MOD LANG
   Giordano M, 2010, J VISUAL LANG COMPUT, V21, P41, DOI 10.1016/j.jvlc.2009.11.002
   Hartson H. R., 1991, Interacting with Computers, V3, P51, DOI 10.1016/0953-5438(91)90005-M
   Homrighausen A., 2002, Requirements Engineering, V7, P34, DOI 10.1007/s007660200003
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Rivero JM, 2014, INFORM SOFTWARE TECH, V56, P670, DOI 10.1016/j.infsof.2014.01.011
   Memmel T, 2008, J UNIVERS COMPUT SCI, V14, P3217
   Milosavljevic G, 2013, P 12 IEEE INT C INT
   Moore JM, 2003, P 26 IEEE ACM INT C
   Mukasa KS, 2008, P 16 IEEE INT C REQ
   Nawrocki J, 2005, FRONT ARTIF INTEL AP, V130, P319
   Noble J, 2007, P AG C AGILE 07 LOS
   O'Docherty M, 2005, OBJECT ORIENTED ANAL
   Panach JI, 2008, J UNIVERS COMPUT SCI, V14, P1480
   Ramdoyal R, 2010, P 22 INT C ADV INF S
   Reenskaug T., 1979, TECHNICAL REPORT
   Ricca F, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2629457
   Rivero JM, 2010, P 10 INT C CURR TREN
   Rode J, 2006, HUM COM INT, V9, P161
   Shah D, 2003, UML UNIFIED PROCESS
   Storrle H, 2010, P 4 EUR C SOFTW ARCH
   Valverde F, 2009, P 10 INT C WEB INF S
   Vuorimaa P, 2016, WORLD WIDE WEB, V19, P519, DOI 10.1007/s11280-015-0339-z
   Yang F, 2008, P VLDB END AUCKL NZ
   Zhang J, 2003, SOFTWARE PRACT EXPER, V33, P1251, DOI 10.1002/spe.547
   Zhang J, 2003, P 27 INT COMP SOFTW
NR 42
TC 2
Z9 2
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2018
VL 48
IS 4
BP 945
EP 973
DI 10.1002/spe.2559
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FY3VV
UT WOS:000426749900009
DA 2024-07-18
ER

PT J
AU Kobylinski, P
   Siek, K
   Baranowski, J
   Wojciechowski, PT
AF Kobylinski, Pawel
   Siek, Konrad
   Baranowski, Jan
   Wojciechowski, Pawel T.
TI Helenos: A realistic benchmark for distributed transactional memory
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE benchmark; distributed systems; heterogeneous distributed systems;
   performance testing; transactional memory
AB Transactional memory (TM) is an approach to concurrency control that aims to make writing parallel programs both effective and simple. The approach has been initially proposed for nondistributed multiprocessor systems, but it is gaining popularity in distributed systems to synchronize tasks at large scales. Efficiency and scalability are often the key issues in TM research; thus, performance benchmarks are an important part of it. However, while standard TM benchmarks like the Stanford Transactional Applications for Multi-Processing suite and STMBench7 are available and widely accepted, they do not translate well into distributed systems. Hence, the set of benchmarks usable with distributed TM systems is very limited, and must be padded with microbenchmarks, whose simplicity and artificial nature often makes them uninformative or misleading. Therefore, this paper introduces Helenos, a realistic, complex, and comprehensive distributed TM benchmark based on the problem of the Facebook inbox, an application of the Cassandra distributed store.
C1 [Kobylinski, Pawel; Siek, Konrad; Baranowski, Jan; Wojciechowski, Pawel T.] Poznan Univ Tech, Inst Comp Sci, Piotrowo 2, PL-60965 Poznan, Poland.
C3 Poznan University of Technology
RP Kobylinski, P (corresponding author), Poznan Univ Tech, Inst Comp Sci, Piotrowo 2, PL-60965 Poznan, Poland.
EM pawel.kobylinski@cs.put.edu.pl
RI Wojciechowski, Paweł/F-8720-2014
OI Wojciechowski, Paweł/0000-0003-2008-278X; Siek,
   Konrad/0000-0002-3599-2164
FU National Science Centre [DEC-2012/07/B/ST6/01230]
FX National Science Centre, Grant/Award Number: DEC-2012/07/B/ST6/01230
CR [Anonymous], 2016, HELENOS BENCHMARK
   Ansari M, 2008, P ICA3PP 08 INT C AL
   Aslot V, 2001, P WOMPAT 01 INT WORK
   Bocchino RL, 2008, P PPOPP 08 13 ACM SI
   Cooper B.F., 2010, P ACM S CLOUD COMPUT, DOI DOI 10.1145/1807128.1807152
   Corbett JC, 2012, P OSDI 12 10 USNEIX
   Couceiro M, 2009, P PRDC 13 15 IEEE AC
   Guerraoui R., 2010, PRINCIPLES TRANSACTI
   Guerraoui R, 2007, P EUR 07 2 ACM SIGOP
   Herlihy M, 1993, P ISCA 93 20 INT S C
   Hirve S, 2014, P ICDCN 14 15 INT C
   Hong S, 2010, P IISWC 10 IEEE INT
   Kobus T, 2013, P ICDCS 13 33 INT C
   Lakshman A, 2010, ACM SIGOPS OPER SYST, V44, P25
   Minh CC, 2008, P IISW 08 IEEE INT S
   Mishra S, 2013, 12 IEEE INT S NETW C
   Peng D, 2010, P OSDI 10 9 USNEIX S
   Ruan W, 2014, P TRANSACT 14 9 ACM
   Saad MM, 2012, P SBAC PAD 12 24 IEE
   Saad MM, 2011, P HPDC 11 20 INT S H
   Siek K, 2014, P DISC 14 28 INT S D
   Siek K, ARXIV160603928
   Siek K, 2014, P HLPP 14 7 INT S HI
   Siek K, 2016, INT J PARALLEL PROG, V44, P598, DOI 10.1007/s10766-015-0361-x
   Turcu A, 2013, P PPPJ 13 10 INT C P
   Turcu A, 2016, IEEE T PARALL DISTR, V27, P106, DOI 10.1109/TPDS.2015.2388448
   Wojciechowski PT., 2007, LANGUAGE DESIGN ATOM
   Woo SC, 1995, P ISCA 95 22 ANN INT
   Zyulkyarov F, 2009, P PPOPP 09 14 ACM SI
NR 29
TC 1
Z9 1
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 528
EP 549
DI 10.1002/spe.2548
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Snyder, B
   Green, RC
   Devabhaktuni, V
   Alam, M
AF Snyder, Brett
   Green, Robert C., II
   Devabhaktuni, Vijay
   Alam, Mansoor
TI ReliaCloud-NS: A scalable web-based simulation platform for evaluating
   the reliability of cloud computing systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; Monte Carlo simulation; reliability
ID TOOLKIT
AB This paper discusses the implementation, architecture, and use of a graphical web-based application called ReliaCloud-NS that allows users to (1) evaluate the reliability of a cloud computing system (CCS) and (2) design a CCS to a specified reliability level for both public and private clouds. The software was designed with a RESTful application programming interface for performing nonsequential Monte Carlo simulations to perform reliability evaluations of a CCS. Simulation results are stored and presented to the user in the form of interactive charts and graphs from within a web browser. The software contains multiple types of CCS components, simulations, and virtual machine allocation schemes. ReliaCloud-NS also contains a novel feature that evaluates CCS reliability across a range of varying virtual machine allocations and establishes and graphs a CCS reliability curve. This paper discusses the software architecture, the interactive web-based interface, and the different types of simulations available in ReliaCloud-NS and presents an overview of the results generated from a simulation.
C1 [Snyder, Brett; Devabhaktuni, Vijay; Alam, Mansoor] Univ Toledo, Dept Elect Engn & Comp Sci, 2801 West Bancroft St, Toledo, OH 43606 USA.
   [Green, Robert C., II] Bowling Green State Univ, Dept Comp Sci, Bowling Green, OH 43403 USA.
C3 University System of Ohio; University of Toledo; University System of
   Ohio; Bowling Green State University
RP Green, RC (corresponding author), Bowling Green State Univ, Dept Comp Sci, Bowling Green, OH 43403 USA.
EM greenr@bgsu.edu
OI Green, Robert/0000-0002-3792-2725; Devabhaktuni, Vijaya
   Kumar/0000-0001-9526-0347
CR [Anonymous], 1 IEEE ACM INT S CLU
   [Anonymous], 2017, TYPESAFE AKKA
   [Anonymous], 2013, AMAZON EC2 INSTANCE
   [Anonymous], 24 IEEE INT C ADV IN
   [Anonymous], GLOB TEL C GLOBECOM
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1175, DOI 10.1002/cpe.710
   Buyya R., 2009, P 1 INT C CLOUD COMP
   Buyya R, 2009, INT C HIGH PERF COMP
   Calheiros RN, 2013, SOFTWARE PRACT EXPER, V43, P595, DOI 10.1002/spe.2124
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Casanova H, 2008, IEEE 10 INT C COMP M
   Entezari-Maleki R, 2017, INFORM SCI, P106
   Ivanchenko O, 2016, ICT ED RES IND APPL
   Kang X, 2011, IEEE ICC
   Nalinipriya G, 2016, INTELL AUTOM SOFT CO, V32, P1
   Nuñez A, 2011, LECT NOTES COMPUT SC, V6784, P582
   Nunez A, 2012, P 4 INT C COMP COLL
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   Play, 2017, PLAY FRAMEWORK
   Snyder B, 2015, J CLOUD COMPUT-ADV S, V4, DOI 10.1186/s13677-015-0036-6
   Sulistio A, 2008, CONCURR COMP-PRACT E, V20, P1591, DOI 10.1002/cpe.1307
   Trivedi KS, 2016, IEEE IFIP INT C DEP
   Zhang C, 2014, IEEE CLOUD ANCH AL
NR 23
TC 3
Z9 3
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 665
EP 680
DI 10.1002/spe.2541
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300013
DA 2024-07-18
ER

PT J
AU Zeng, LF
   Xu, SJ
   Wang, Y
   Kent, KB
   Bremner, D
   Xu, CZ
AF Zeng, Lingfang
   Xu, Shijie
   Wang, Yang
   Kent, Kenneth B.
   Bremner, David
   Xu, Chengzhong
TI Toward cost-effective replica placements in cloud storage systems with
   QoS-awareness
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud storage; content distribution network; replica placement; data and
   service replication; QoS-awareness
ID CONTENT DELIVERY; CONTENT SERVICE; OPTIMIZATION; INTERNET
AB In this paper, we propose a simulation model to study real-world replication workflows for cloud storage systems. With this model, we present three new methods to maximize the storage space usage during replica creation, and two novel QoS aware greedy algorithms for replica placement optimization. By using a simulation method, our algorithms are evaluated, through a comparison with the existing placement algorithms, to show that (i) a more evenly distributed replicas for a data set can be achieved by using round-robin methods in replica creation phase and (ii) the two proposed greedy algorithms, named GS_QoS and GS_QoS_C1, not only have more economical results than those from Chen et al., but also guarantee the QoS for clients. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Zeng, Lingfang] Huazhong Univ Sci & Technol, Wuhan Natl Lab Optoelect, Wuhan, Peoples R China.
   [Xu, Shijie; Kent, Kenneth B.; Bremner, David] Univ New Brunswick, IBM Ctr Adv Studies Atlantic, Fredericton, NB, Canada.
   [Zeng, Lingfang; Wang, Yang; Xu, Chengzhong] Chinese Acad Sci, Shenzhen Inst Adv Technol, Shenzhen, Peoples R China.
   [Xu, Chengzhong] Wayne State Univ, Dept Elect & Comp Engn, Detroit, MI 48202 USA.
C3 Huazhong University of Science & Technology; University of New
   Brunswick; Chinese Academy of Sciences; Shenzhen Institute of Advanced
   Technology, CAS; Wayne State University
RP Wang, Y (corresponding author), Chinese Acad Sci, Shenzhen Inst Adv Technol, Shenzhen, Peoples R China.
EM yang.wang1@siat.ac.cn
RI XU, CHENGZHONG/AAX-1707-2020; Xu, Shijie/GYV-6217-2022
OI XU, CHENGZHONG/0000-0001-9480-0356; Xu, Shijie/0000-0003-0145-5448;
   Zeng, Lingfang/0000-0003-3130-3015; Kent, Kenneth B/0000-0003-2764-823X
FU China National Basic Research Program (973 Program) [2015CB352400];
   Science and Technology Planning Project of Guangdong Province
   [2015B010129011, 2016A030313183]; NSFC [61672513, 61572377, U1401258,
   61550110250]
FX This work was supported in part by the China National Basic Research
   Program (973 Program, No. 2015CB352400), Science and Technology Planning
   Project of Guangdong Province (2015B010129011, 2016A030313183), and NSFC
   under grants 61672513, 61572377, U1401258, and 61550110250. We would
   like to express our gratitude to Dr. Bharadwaj Veeravalli from National
   University of Singapore for his valuable comments and also thank Tan Wee
   Kiat and Xiang Cui for their work in this research, and Stephen MacKay
   for his careful proofreading and editing the paper to improve its
   quality.
CR Andronkou V, 2011, FUTURE GENER COMP SY, V28, P544
   [Anonymous], 2009, DEP ELECT ENG COMPUT
   Chen FF, 2012, IEEE INFOCOM SER, P433, DOI 10.1109/INFCOM.2012.6195782
   Dilley J, 2002, IEEE INTERNET COMPUT, V6, P50, DOI 10.1109/MIC.2002.1036038
   Ganguly S, 2005, IEEE INFOCOM SER, P2246
   Grace RK, 2014, J PARALLEL DISTR COM, V74, P2099, DOI 10.1016/j.jpdc.2013.10.009
   Karlsson M, 2003, HPL2003156 INT SYST
   Krauter K, 2002, SOFTWARE PRACT EXPER, V32, P135, DOI 10.1002/spe.432
   Li B, 1999, IEEE INFOCOM SER, P1282, DOI 10.1109/INFCOM.1999.752146
   Mansouri N, 2013, J NETW COMPUT APPL, V36, P711, DOI 10.1016/j.jnca.2012.12.021
   Mohamed N, 2015, SOFTWARE PRACT EXPER, V45, P343, DOI 10.1002/spe.2235
   Padmanabhan VN, 2001, ACM SIGCOMM COMP COM, V31, P173, DOI 10.1145/964723.383073
   Pierre G, 2006, IEEE COMMUN MAG, V44, P127, DOI 10.1109/MCOM.2006.1678120
   Xu JL, 2002, IEEE J SEL AREA COMM, V20, P1383, DOI 10.1109/JSAC.2002.802068
   Zeng LF, 2014, J NETW COMPUT APPL, V41, P358, DOI 10.1016/j.jnca.2014.02.002
   Zeng LF, 2014, J NETW COMPUT APPL, V40, P206, DOI 10.1016/j.jnca.2013.09.006
NR 16
TC 16
Z9 19
U1 0
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2017
VL 47
IS 6
BP 813
EP 829
DI 10.1002/spe.2441
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX3EE
UT WOS:000403114000002
DA 2024-07-18
ER

PT J
AU Mustacoglu, AF
AF Mustacoglu, Ahmet F.
TI A novel model-driven approach for seamless integration
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE model-driven architecture; tool integration; technological space;
   metadata; meta-model
AB This research mentions integration problems and describes a novel model-driven approach that intend to reach a higher degree of interoperability among different software development tools coming from different technological spaces (TSs) by representing data of tools through the models. The proposed concept introduce a way to integrate various software related tools and aim to provide a modular syntax for tool integration that leverage the collaboration of different tools. In this work, the proposed approach has been tested through a case-study by demonstrating a single aspect of the model-driven tool integration because the model-driven tool integration has a wide scope and it is difficult to show all aspects of it in one research. It is proved that the model-driven tool integration is possible based on the proposed concept between different TSs, and the formulation of the proposed approach is provided. As the results indicate, the proposed system integrates selected software-related tools coming from different TSs and enables them to use each other's capabilities. This work paves the way to contribute for the standardization efforts of the model-driven tool integration. Finally, further research opportunities are provided. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Mustacoglu, Ahmet F.] TUBITAK BILGEM, Gebze, Kocaeli Provinc, Turkey.
C3 Turkiye Bilimsel ve Teknolojik Arastirma Kurumu (TUBITAK)
RP Mustacoglu, AF (corresponding author), TUBITAK BILGEM, Gebze, Kocaeli Provinc, Turkey.
EM afatih.mustacoglu@tubitak.gov.tr
RI AydÄ±n, Ebru/D-1403-2010; Mustacoglu, Ahmet Fatih/AAA-2829-2021
OI Mustacoglu, Ahmet Fatih/0000-0002-5236-3917
CR [Anonymous], MOD TRANSF PRACT WOR
   [Anonymous], MOD DRIV ARCH
   [Anonymous], ATL TRANSFORMATION B
   [Anonymous], ECL MOD FRAM EMF
   Asnina E, 2008, SIGSAND EUROPE
   Bacvanski V., 2005, Mastering Eclipse modeling framework
   Tolosa JB, 2011, SOFTWARE PRACT EXPER, V41, P789, DOI 10.1002/spe.1033
   Beydeda S., 2005, Model-driven software development, V15
   Bezivin J, 2005, MET S, V20
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   Blanc X, 2005, LECT NOTES COMPUT SC, V3599, P17
   Bosua R, 1995, P SOFTW ENG ENV
   Breton E., 2001, Formal Ontology in Information Systems. Collected Papers from the Second International Conference, P70, DOI 10.1145/505168.505176
   Criado J, 2015, SOFTWARE PRACT EXPER, V45, P1677, DOI 10.1002/spe.2306
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K., 2003, P 2 OOPSLA WORKSH GE, V45
   Gaevic D, 2004, 3 WORKSH SOFTW MOD E
   Harzallah M, 2012, INFORM SYST, V37, P484, DOI 10.1016/j.is.2011.11.001
   Kapsammer E., 2006, P 3 INT C CYB INF TE
   Karsai G., 2000, ENG COMP BAS SYST 20
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kurtev Ivan, 2002, Technological spaces: An Initial Appraisal
   Maté A, 2012, INFORM SYST, V37, P753, DOI 10.1016/j.is.2012.05.003
   Mellor StephenJ., 2004, MDA Distilled: Principles of Model-Driven Architecture
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Milanovic M, 2009, SOFTWARE PRACT EXPER, V39, P1313, DOI 10.1002/spe.938
   Pivl T, JAV MET INT JMI
   Cuadrado JS, 2014, SOFTWARE PRACT EXPER, V44, P1351, DOI 10.1002/spe.2202
   Sendall S, 2003, LGLREPORT2003007
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   Strommer M, 2008, LECT NOTES BUS INF, V11, P372
   The Eclipse Foundation, ATL US GUID
   THOMAS I, 1992, IEEE SOFTWARE, V9, P29, DOI 10.1109/52.120599
   Tratt L., 2005, Software and Systems Modeling, V4, P112, DOI [DOI 10.1007/S10270-004-0070-1, 10.1007/s10270-004-0070-1]
   Wallnau KC, 1991, CMUSEI91TR11
   WASSERMAN AI, 1990, LECT NOTES COMPUT SC, V467, P137
   Wicks M., 2004, INTEGRATION VLSI J, P1
   Yang Y, 1996, P SOFTW ENG C AS PAC
   Yuan F, 2005, UNIFYING SOFTWARE PR
   Zelkowitz MV, 1996, J SYST SOFTWARE, V35, P3, DOI 10.1016/0164-1212(95)00082-8
NR 41
TC 1
Z9 1
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2017
VL 47
IS 5
BP 689
EP 708
DI 10.1002/spe.2440
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ER1SO
UT WOS:000398573700003
DA 2024-07-18
ER

PT J
AU Briggs, KT
   Zhou, BG
   Dueck, GW
AF Briggs, Kim T.
   Zhou, Baoguo
   Dueck, Gerhard W.
TI Cold object identification in the Java virtual machine
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java virtual machine; garbage collection; cold objects; access barrier;
   stack sampling
ID GARBAGE COLLECTION
AB Many Java applications instantiate objects within the Java heap that are persistent but seldom if ever referenced by the application. Examples include strings, such as error messages, and collections of value objects that are preloaded for fast access. This paper describes a stack-based framework for detecting these cold' objects at runtime, with a view to marshaling and sequestering them in designated regions of the heap where they may be preferentially paged out to a backing store, thereby freeing physical memory pages for occupation by more active objects. Furthermore, we evaluate the correctness and efficiency of stack-based approach with an access barrier. The experimental results from a series of SPECjvm2008 benchmarks are presented. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Briggs, Kim T.] IBM Canada, 770 Palladium Dr, Ottawa, ON, Canada.
   [Zhou, Baoguo; Dueck, Gerhard W.] Univ New Brunswick, Fac Comp Sci, Fredericton, NB E3B 5A3, Canada.
C3 International Business Machines (IBM); University of New Brunswick
RP Dueck, GW (corresponding author), Univ New Brunswick, Fac Comp Sci, Fredericton, NB E3B 5A3, Canada.
EM gdueck@unb.ca
FU IBM; Atlantic Canada Opportunities Agency (ACOA) through the Atlantic
   Innovation Fund (AIF) program; New Brunswick Innovation Fund
FX The authors would like to acknowledge the funding support provided by
   IBM and the Atlantic Canada Opportunities Agency (ACOA) through the
   Atlantic Innovation Fund (AIF) program. Furthermore, we would also like
   to thank the New Brunswick Innovation Fund for contributing to this
   project. Finally, we would like to thank the Centre for Advanced Studies
   - Atlantic for access to the resources for conducting our research.
CR Abuaiadh D, 2004, ACM SIGPLAN NOTICES, V39, P224, DOI 10.1145/1035292.1028995
   Adl-Tabatabai AR, 1998, ACM SIGPLAN NOTICES, V33, P280, DOI 10.1145/277652.277740
   [Anonymous], 2007, Linux System Programming
   [Anonymous], 2012, The Garbage Collection Handbook
   APPEL AW, 1989, SOFTWARE PRACT EXPER, V19, P171, DOI 10.1002/spe.4380190206
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   Colnet D, 2015, SOFTWARE PRACT EXPER, V45, P1639, DOI 10.1002/spe.2300
   Gosling J., 2013, The Java Language Specification, V7
   HUGHES RJM, 1982, SOFTWARE PRACT EXPER, V12, P1081, DOI 10.1002/spe.4380121108
   Jones R, 2005, Fifth IEEE International Workshop on Source Code Analysis and Manipulation, Proceedings, P129, DOI 10.1109/SCAM.2005.1
   Kurokawa T, 1979, LISP B, P9
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Manson J, 2005, ACM SIGPLAN NOTICES, V40, P378, DOI 10.1145/1047659.1040336
   Pirinen PP, 1999, ACM SIGPLAN NOTICES, V34, P20, DOI 10.1145/301589.286863
   Sciampacone R, 2011, IBM WEBSPHERE DEV TE
   Shiv K, 2009, LECT NOTES COMPUT SC, V5419, P17
   Sonntag B, 2014, SOFTWARE PRACT EXPER, V44, P565, DOI 10.1002/spe.2174
   UNGAR D, 1984, SIGPLAN NOTICES, V19, P157
NR 18
TC 0
Z9 0
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2017
VL 47
IS 1
BP 79
EP 95
DI 10.1002/spe.2396
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI5DO
UT WOS:000392514400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lemire, D
   Boytsov, L
   Kurz, N
AF Lemire, Daniel
   Boytsov, Leonid
   Kurz, Nathan
TI SIMD compression and the intersection of sorted integers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance; measurement; index compression; vector processing
ID FAST SET INTERSECTION
AB Sorted lists of integers are commonly used in inverted indexes and database systems. They are often compressed in memory. We can use the single-instruction, multiple data (SIMD) instructions available in common processors to boost the speed of integer compression schemes. Our S4-BP128-D4 scheme uses as little as 0.7CPU cycles per decoded 32-bit integer while still providing state-of-the-art compression. However, if the subsequent processing of the integers is slow, the effort spent on optimizing decompression speed can be wasted. To show that it does not have to be so, we (1) vectorize and optimize the intersection of posting lists; (2) introduce the SIMD GALLOPING algorithm. We exploit the fact that one SIMD instruction can compare four pairs of 32-bit integers at once. We experiment with two Text REtrieval Conference (TREC) text collections, GOV2 and ClueWeb09 (category B), using logs from the TREC million-query track. We show that using only the SIMD instructions ubiquitous in all modern CPUs, our techniques for conjunctive queries can double the speed of a state-of-the-art approach. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Lemire, Daniel] TELUQ, LICEF Res Ctr, Montreal, PQ, Canada.
   [Boytsov, Leonid] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
   [Kurz, Nathan] Verse Commun, Orinda, CA USA.
C3 University of Quebec; Universite TELUQ; Carnegie Mellon University
RP Lemire, D (corresponding author), Univ Quebec, TELUQ, LICEF Res Ctr, 5800 St Denis, Montreal, PQ H2S 3L5, Canada.
EM lemire@gmail.com
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922
FU Natural Sciences and Engineering Research Council of Canada [261437]
FX We thank the Natural Sciences and Engineering Research Council of Canada
   (contract/grant number 261437) for their financial support.
CR Anh VN, 2010, SOFTWARE PRACT EXPER, V40, P131, DOI 10.1002/spe.948
   [Anonymous], 2009, DaMoN'09
   Ao NY, 2011, PROC VLDB ENDOW, V4, P470
   BaezaYates R, 2004, LECT NOTES COMPUT SC, V3109, P400
   Balkesen C, 2013, PROC VLDB ENDOW, V7, P85, DOI 10.14778/2732219.2732227
   Barbay Jeremy, 2010, ACM Journal of Experimental Algorithmics, V14, DOI DOI 10.1145/1498698.1564507
   Bentley J. L., 1976, Information Processing Letters, V5, P82, DOI 10.1016/0020-0190(76)90071-5
   Buttcher Stefan, 2007, P 16 ACM C INF KNOWL, P761, DOI DOI 10.1145/1321440.1321546
   Catena Matteo, 2014, Advances in Information Retrieval. 36th European Conference on IR Research, ECIR 2014. Proceedings: LNCS 8416, P359, DOI 10.1007/978-3-319-06028-6_30
   Culpepper JS, 2010, ACM T INFORM SYST, V29, DOI 10.1145/1877766.1877767
   Demaine ED, 2000, PROCEEDINGS OF THE ELEVENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P743
   Ding B, 2011, PROC VLDB ENDOW, V4, P255, DOI 10.14778/1938545.1938550
   Ding Shuai., 2009, Proceedings of the 18th International Conference on World Wide Web, WWW '09, P421, DOI [10.1145/1526709.1526766, DOI 10.1145/1526709.1526766]
   Fog A, 2014, TECHNICAL REPORT
   Goldstein J, 1998, ICDE 98
   Intel Corporation, 2014, INT INTR GUID
   Kane A, 2014, SIGIR'14: PROCEEDINGS OF THE 37TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P263, DOI 10.1145/2600428.2609609
   Katsov I, 2009, FAST INTERSECTION SO
   Kim Y, 2011, PROCEEDINGS OF THE 34TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR'11), P825
   Konow R, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P193
   LADNER RE, 1980, J ACM, V27, P831, DOI 10.1145/322217.322232
   Lemire D., 2015, Software: Practice and Experience, V45, P1, DOI 10.1002/spe.2203
   Moffat A, 1996, ACM T INFORM SYST, V14, P349, DOI 10.1145/237496.237497
   Ottaviano G, 2014, SIGIR 14
   Polychroniou O., 2014, Proceedings of the Tenth International Workshop on Data Management on New Hardware - DaMoN '14 (New York, New York, USA, 2014), P1, DOI DOI 10.1145/2619228.2619234
   Sanders P, 2007, SIAM PROC S, P71
   Schlegel Benjamin., 2011, ADMS@VLDB, P1
   Stepanov Alexander A., 2011, Proceedings of the 20th ACM International Conference on Information and Knowledge Management, CIKM '11, P317
   Tatikonda S, 2011, PROCEEDINGS OF THE 34TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR'11), P963
   THIEL LH, 1972, INFORM STORAGE RET, V8, P1, DOI 10.1016/0020-0271(72)90024-1
   Tonellotto N, 2011, PROCEEDINGS OF THE 34TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR'11), P1179
   Transier F, 2010, ACM T INFORM SYST, V29, DOI 10.1145/1877766.1877768
   Vigna Sebastiano, 2013, P 6 ACM INT C WEB SE, P83
   Willhalm Thomas., 2013, ADMS workshop, P1
   Yan Hao, 2009, P INT C WORLD WID WE, P401, DOI [DOI 10.1145/1526709.1526764, 10.1145/1526709.1526764]
   Zukowski Marcin, 2006, ICDE 59, DOI DOI 10.1109/ICDE.2006.150
NR 36
TC 44
Z9 53
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2016
VL 46
IS 6
BP 723
EP 749
DI 10.1002/spe.2326
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK1WU
UT WOS:000374706600001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Kammer, D
   Henkens, D
   Henzen, C
   Groh, R
AF Kammer, D.
   Henkens, D.
   Henzen, C.
   Groh, R.
TI Gesture Formalization for Multitouch
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multitouch; gestures; domain-specific languages; DSL; editor
AB Since multitouch interfaces are steadily moving out of the experimental niche, the demand for comprehensive programming support increases. Between the formation of de facto standards for multitouch gestures by the industry, and continued research and experimentation by developers or academia, the abstraction of gesture properties becomes essential. This paper contributes a revision of the Gesture Formalization for Multitouch (GeForMT) gesture description language. This language aims at a short and concise syntax, which is still able to capture the complexity of multitouch gestures. We report on a previously missing reference architecture and practical implementation. Based on a study comparing the revised GeForMT language with other formalization approaches for multitouch gestures, we introduce an editor for GeForMT.Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Kammer, D.; Groh, R.] Tech Univ Dresden, Fac Comp Sci, D-01062 Dresden, Germany.
   [Henkens, D.] Queo GmbH, D-01159 Dresden, Germany.
   [Henzen, C.] Tech Univ Dresden, Geoinformat Syst, D-01062 Dresden, Germany.
C3 Technische Universitat Dresden; Technische Universitat Dresden
RP Kammer, D (corresponding author), Tech Univ Dresden, D-01062 Dresden, Germany.
EM dietrich.kammer@tu-dresden.de
RI Kammer, Dietrich/AAA-2742-2019
OI Kammer, Dietrich/0000-0002-3822-6043; Henzen,
   Christin/0000-0002-5181-4368
FU Federal Ministry of Education and Research [VIP 18]
FX We thank the participants of our studies. Thanks are due to Romy Muller
   for helping with the analysis of the language evaluation and Christian
   Ropke for implementation help and participation in this research.
   Dietrich Kammer received funding by the Federal Ministry of Education
   and Research (Project Number: VIP 18).
CR [Anonymous], 2009, Proceedings of the 23rd British HCI Group Annual Conference on People and Computers: Celebrating People and Technology, DOI [10.14236/ewic/hci2009.55, DOI 10.14236/EWIC/HCI2009.55]
   Anthony L., 2010, Proc. of Graphics Interface 2010, P245
   Appert C, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2289
   Bau O, 2008, UIST 2008: PROCEEDINGS OF THE 21ST ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P37, DOI 10.1145/1449715.1449724
   Blickenstorfer Conrad H., 1995, Pen Computing Magazine, V01/95, P30
   Brade M, 2011, TEI 2011: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON TANGIBLE EMBEDDED AND EMBODIED INTERACTION, P419
   Cederbergs P, 2010, GRAMMATICA PARSER GE
   Dietz P., 2001, 01UIST. Proceedings of the 14th Annual ACM Symposium on User Interface Software and Technology, P219, DOI 10.1145/502348.502389
   Echtler F., 2012, Proceedings of the Sixth International Conference on Tangible, P233
   Echtler Florian., 2008, Proceedings of the 5th Nordic conference on Human-computer interaction: building bridges, NordiCHI '08, P463, DOI DOI 10.1145/1463160.1463220
   Ford Bryan., 2004, 31 ACM SIGPLAN SIGAC, P111, DOI DOI 10.1145/964001.964011
   Frankes IS, 2010, MENSCH COMP 2010 ENT, P45
   Freeman D., Proceedings of the ACM International Conference on Interactive Tabletops and Surfaces, ser. ITS '09. New York, NY, USA: ACM, P165, DOI DOI 10.1145/1731903.1731935
   Gabbays DM, 1996, LABELLED DEDUCTIVE S, V1
   Görg MT, 2010, THIRD INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER-HUMAN INTERACTIONS: ACHI 2010, P143, DOI 10.1109/ACHI.2010.8
   Grohs R, 2010, P 6 ANN EUR COMP SCI
   Kaltenbrunners M, 2005, P 6 INT WORKSH GEST
   Kammer Dietrich, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P444, DOI 10.1007/978-3-642-31753-8_40
   Kammer D., 2011, P 29 ANN EUR C COGN, P141
   Kammer D, 2010, ACM INT C INT TABL S, P4958
   Kecks S, 2011, DELVIZ DEEP EXPLORAT
   Khandkar ShahedulHuq., 2010, International Conference on Interactive Tabletops and Surfaces, P59, DOI DOI 10.1145/1936652.1936663
   Kin K., 2012, CHI, P2885, DOI DOI 10.1145/2207676.2208694
   Kin K, 2012, UIST'12: PROCEEDINGS OF THE 25TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P477
   Laufs U., 2010, VIMATION J, V1, P58
   Lees JC, 2010, XRDS, V16, P912
   Lees R, 2012, GESTURECONS ICONS MU
   Li Y, 2010, PROCEEDINGS OF THE 2010 INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY AND SCIENTIFIC MANAGEMENT, VOLS 1-2, P87, DOI 10.1145/1866029.1866044
   Lis Y, 2010, PROTRACTOR
   Lu H., 2012, CHI, P2875
   Majdas D., 2011, PEG JS PARSER GENERA
   Microsoft, 2012, APPL GEST SEM BEH
   Morris M. R., 2006, P SIGCHI C HUM FACT, P1201, DOI [https://doi.org/10.1145/1124772.1124952, DOI 10.1145/1124772.1124952]
   Mullers M, 2012, WORKSH DES COLL INT
   Norman Don, 2010, Interactions, V17, DOI 10.1145/1836216.1836228
   NUIGroup Authors, 2009, GEST REC
   Parrs T, 2011, SIGPLAN NOTICES, V46, P425
   Paterno F, 2009, ACM T COMPUT-HUM INT, V16, DOI 10.1145/1614390.1614394
   Ramakers R, 2012, UIST'12: PROCEEDINGS OF THE 25TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P35
   Scholliers C, 2011, TEI 2011: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON TANGIBLE EMBEDDED AND EMBODIED INTERACTION, P49
   Sezgin T.M., 2001, PROC WORKSHOP PERCEP, P1
   Signer B, 2007, PROC INT CONF DOC, P954
   Sizzle, 2012, SIZZL JAVASCRIPT SEL
   Spanos LD, 2012, HUMAN CTR SOFTWARE E
   Swigarts S, 2005, EASILY WRITE CUSTOM
   Vanackens D, 2012, THESIS
   Walther-Frankss B, 2008, IEEE TABL INT SURF 2
   Wigdor D, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P3
   Wobbrock JO, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P159
   Wus Y, 2010, P 10 WORKSH DOM SPEC
NR 50
TC 7
Z9 8
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2015
VL 45
IS 4
BP 527
EP 548
DI 10.1002/spe.2247
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD0HU
UT WOS:000350752200005
DA 2024-07-18
ER

PT J
AU Moore, T
   Tilak, S
   Papadouplous, P
   Clementi, L
AF Moore, Thomas
   Tilak, Sameer
   Papadouplous, Phillip
   Clementi, Luca
TI Programmatically defining the software footprint of sensor networks
   using the Android platform
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE sensor networks; Android; automation; embedded device
AB Sensor networks are being used for an increasing number of applications ranging from environmental monitoring and precision agriculture to manufacturing and health care. By gathering data at unprecedented temporal and spatial granularity, sensor networks are revolutionizing these applications. Given the scale and complexity of these systems, they face a critical challenge in software Operations and Management, that is, installing, configuring, and updating thousands of software components in a heterogeneous sensor network. In this paper, we discuss automating and simplifying the process of defining the software environment on a sensor node running the Android platform. Android has significant share in the mobile phone market and runs on a broad range of devices including embedded platforms. This paper outlines the use of a new method for configuring embedded devices and sensor networks by drawing from techniques used for defining the software environment in data centers. We have also developed a software prototype to allow for a simple, reproducible, and flexible configuration of the Android software stack on a sensor node. Our exploratory research provides an insight into the use of modular configuration techniques in embedded devices and how they can be applied to the Android ecosystem. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Moore, Thomas] Monash Univ, Melbourne, Vic 3004, Australia.
   [Tilak, Sameer] Univ Calif San Diego, Calif Inst Telecommun & Informat Technol, San Diego, CA 92103 USA.
   [Papadouplous, Phillip; Clementi, Luca] Univ Calif San Diego, San Diego Supercomp Ctr, San Diego, CA 92103 USA.
C3 Monash University; University of California System; University of
   California San Diego; University of California System; University of
   California San Diego
RP Tilak, S (corresponding author), Univ Calif San Diego, Calif Inst Telecommun & Informat Technol, La Jolla, CA 92093 USA.
EM stilak@ucsd.edu
CR [Anonymous], SENSYS 04 ACM NEW YO
   [Anonymous], 2004, P 11 WORKSH ACM SIGO
   [Anonymous], 2002, WSNA '02
   Bruno G, 2004, 2004 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, P421, DOI 10.1109/CLUSTR.2004.1392641
   Fountain T, 2011, ENV INF MAN EIM
   Jafer Essa, 2010, 2010 17th International Conference on Telecommunications (ICT 2010), P887, DOI 10.1109/ICTEL.2010.5478832
   Katz MJ, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, PROCEEDINGS, P47, DOI 10.1109/CLUSTR.2002.1137728
   Miller PA, 1998, AUUGN J AUUG INC, V19, P1
   Naik V, 2007, IEEE T MOBILE COMPUT, V6, P777, DOI 10.1109/TMC.2007.1013
   Othman A.-K., 2009, International Conference on Ultra Modern Telecommunications Workshops, P1, DOI DOI 10.1109/ICUMT.2009.5345571
   Papadopoulos P. M., 2001, Proceedings 2001 IEEE International Conference on Cluster Computing, P258, DOI 10.1109/CLUSTR.2001.959986
   Thomson I, 2012, LATEST LINUX KERNEL
   Yaghmour K., 2013, Embedded Android: Porting, Extending, and Customizing
NR 13
TC 0
Z9 0
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2014
VL 44
IS 10
BP 1277
EP 1286
DI 10.1002/spe.2209
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP2AR
UT WOS:000341875200006
DA 2024-07-18
ER

PT J
AU Ryckbosch, F
   Diwan, A
AF Ryckbosch, Frederick
   Diwan, Amer
TI Analyzing performance traces using temporal formulas
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance analysis; trace matching; temporal logic; large-scale online
   applications; long-tail latencies
ID LOGIC; SPECIFICATIONS; LANGUAGE
AB While profiling is invaluable for debugging performance problems that affect the common case, it is of little help in tracking performance problems that affect the slowest 1% of the operations (i.e., long-tail latencies). For Web service providers, these long-tail latencies affect both the cost of the service and the user experience. Because interactions between operations are often responsible for long-tail latency, we must analyze fine-grained traces to investigate their cause.Unfortunately, analyzing traces is difficult because one needs to reason over long chains of events and because this reasoning often requires significant domain knowledge about what the event sequences mean. This paper shows how we can use formulas in linear-temporal logic to analyze traces. Given these formulas, our system searches through traces to find matches for these formulas and extracts relevant information from the matches. We demonstrate that our system is scalable and enables us to investigate long-tail performance problems at Google. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Ryckbosch, Frederick] Univ Ghent, B-9000 Ghent, Belgium.
   [Diwan, Amer] Google Inc, Mountain View, CA USA.
C3 Ghent University; Google Incorporated
RP Ryckbosch, F (corresponding author), Univ Ghent, B-9000 Ghent, Belgium.
EM frederick.ryckbosch@elis.ugent.be
CR Altman E, 2010, ACM SIGPLAN NOTICES, V45, P739, DOI 10.1145/1932682.1869519
   [Anonymous], ACM Computing Surveys, DOI [DOI 10.1145/242224.242420, 10.1145/242224.242420]
   [Anonymous], P 7 USENIX S OP SYST
   [Anonymous], 1985, LOGIQUE ANAL
   Barga R.S., 2007, CIDR 2007 3 BIENNIAL, P363
   BATES PC, 1995, ACM T COMPUT SYST, V13, P1, DOI 10.1145/200912.200913
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Brenna Lars., 2007, SIGMOD 07, P1100, DOI DOI 10.1145/1247480.1247620
   Brzoska C, 1995, LECT NOTES ARTIF INT, V897, P21
   Cantrill B., 2004, P ANN C USENIX ANN T, P2
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Cugola Gianpaolo., 2010, Proceedings of the Fourth ACM International Conference on Distributed Event-Based Systems - DEBS'10, P50
   FINKBEINER B, 2002, ELECT NOTES THEORETI, V70, P36
   FREY M, 1993, MICROPROC MICROPROG, V39, P97, DOI 10.1016/0165-6074(93)90065-S
   Geimer M, 2006, LECT NOTES COMPUT SC, V4192, P303
   GHEZZI C, 1990, J SYST SOFTWARE, V12, P107, DOI 10.1016/0164-1212(90)90074-V
   Giannakopoulou D., 2001, IEEE INT C AUT SOFTW
   Goldsmith S, 2005, ACM SIGPLAN NOTICES, V40, P385, DOI 10.1145/1103845.1094841
   GOLDSZMIDT GS, 1990, ACM T COMPUT SYST, V8, P311, DOI 10.1145/128733.128737
   HAILPERN RT, 1982, VERIFYING CONCURRENT
   Hoelzle Urs., 2009, The Datacenter as a Computer: An Introduction to the Design of Warehouse-Scale Machines, V1st
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   Mei Y, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P193
   Menzel M., 2012, Proceedings of the 21st international conference on World Wide Web, New York, P979
   MOSZKOWSKI B, 1985, COMPUTER, V18, P10, DOI 10.1109/MC.1985.1662795
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Trentelman K., 2002, Algebraic Methodology and Software Technology. 9th International Conference, AMAST 2002. Proceedings (Lecture Notes in Computer Science Vol.2422), P334
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3760, P130
   Viswanathan A., 2011, Proceedings of the 8th USENIX conference on Networked systems design and implementation, P10
   Wang LZ, 2013, FUTURE GENER COMP SY, V29, P739, DOI 10.1016/j.future.2012.09.001
   Wu E., 2006, P ASS COMP MACH ACM, P407
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Zhang Z, 2012, COMPUT MATH METHOD M, V2012, DOI 10.1155/2012/805827
NR 34
TC 5
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2014
VL 44
IS 7
SI SI
BP 777
EP 792
DI 10.1002/spe.2256
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ5NN
UT WOS:000337731000002
OA Green Published
DA 2024-07-18
ER

PT J
AU Ressia, J
   Gîrba, T
   Nierstrasz, O
   Perin, F
   Renggli, L
AF Ressia, Jorge
   Girba, Tudor
   Nierstrasz, Oscar
   Perin, Fabrizio
   Renggli, Lukas
TI Talents: an environment for dynamically composing units of reuse
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE reflection; object adaption; object-specific behavior; Smalltalk;
   traits; Mixins
ID OBJECTS; TRAITS; SELF
AB Reuse in object-oriented languages typically focuses on inheritance. Numerous techniques have been developed to provide finer-grained reuse of methods, such as flavors, mixins, and traits. These techniques, however, only deal with reuse at the level of classes. Class-based reuse is inherently static. Increasing use of reflection and meta-programming techniques in real-world applications underlines the need for more dynamic approaches. New approaches have shifted to object-specific reuse. However, these techniques fail to provide a complete solution to the composition issues arising during reuse. We propose a new approach that deals with reuse at the object level and that supports behavioral and state composition. We introduce a new abstraction called a talent that models features that are shared between objects of different class hierarchies. Talents provide a composition mechanism that is as flexible as that of traits but that is dynamic. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Ressia, Jorge; Girba, Tudor; Nierstrasz, Oscar; Perin, Fabrizio; Renggli, Lukas] Univ Bern, Software Composit Grp, CH-3012 Bern, Switzerland.
C3 University of Bern
RP Ressia, J (corresponding author), Univ Bern, Inst Informat, Software Composit Grp, Neubruckstr 10, CH-3012 Bern, Switzerland.
EM ressia@iam.unibe.ch
FU Swiss National Science Foundation (SNF) [200020-131827]; Swiss National
   Science Foundation (SNF) [200020_131827] Funding Source: Swiss National
   Science Foundation (SNF)
FX We gratefully acknowledge the financial support of the Swiss National
   Science Foundation for the project 'Synchronizing Models and Code' (SNF
   Project No. 200020-131827, Oct. 2010-Sept. 2012). We also like to thank
   Simon Denier for his feedback on earlier drafts of this paper.
CR Ancona D, 2000, LECT NOTES COMPUT SC, V1850, P154
   [Anonymous], 1986, The C++ Programming Language
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 1998, P 25 ACM SIGPLAN SIG, DOI DOI 10.1145/268946.268961
   Aryani A, 2011, P 18 WORK C REV ENG, DOI 10.1109/WCRE.2011.17
   Bergel A, 2007, LECT NOTES COMPUT SC, V4406, P66
   Bergel A, 2011, LECT NOTES COMPUT SC, V6705, P68, DOI 10.1007/978-3-642-21952-8_7
   Bettini L, 2009, SCI COMPUT PROGRAM, V74, P261, DOI 10.1016/j.scico.2009.01.007
   Borning A.H., 1982, P NAT C AI PITTSB PA, P234
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   Bracha G., 2016, The Dart Programming Language. Always learning
   Bracha G, 2010, LECT NOTES COMPUT SC, V6183, P405, DOI 10.1007/978-3-642-14107-2_20
   Bracha Gilad., 2004, GENERICS JAVA PROGRA
   Bunge P., 2009, THESIS U BERN
   Cohen T, 2009, P 7 INT C PRINC PRAC, V57-66, DOI 10.1145/1596655.1596665
   Costanza P., 2005, P DYN LANG S DLS 05, P1
   Darderes B, 2004, OOPSLA WORKSH REV DY, P1
   DEMICHIEL LG, 1987, LECT NOTES COMPUT SC, V276, P151
   Di Gianantonio P, 1998, ACM SIGPLAN NOTICES, V33, P166, DOI 10.1145/286942.286955
   DIXON R, 1989, SIGPLAN NOTICES, V24, P211, DOI 10.1145/74878.74900
   Drossopoulou S., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P130
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   DUCOURNAU R, 1992, SIGPLAN NOTICES, V27, P16
   Fowler M, 2005, PATTERNS ENTERPRISE
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ghelli G, 2002, INFORM COMPUT, V175, P50, DOI 10.1006/inco.2001.2943
   Gil J, 1999, ACM SIGPLAN NOTICES, V34, P256, DOI 10.1145/320385.320408
   Girba T, 2010, MOOSE BOOK
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Keene S.E., 1989, OBJECT ORIENTED PROG
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kristensen BentBruun., 1995, Proceedings of the 2nd International Conference on Object-Oriented Information Systems, P57
   Langone D, 2011, LECT NOTES COMPUT SC, V6705, P115, DOI 10.1007/978-3-642-21952-8_10
   Lawless JA, 1989, UNDERSTANDING CLOS C
   LIEBERMAN H, 1986, SIGPLAN NOTICES, V21, P214, DOI 10.1145/960112.28718
   Lincke J, 2011, SCI COMPUT PROGRAM, V76, P1194, DOI 10.1016/j.scico.2010.11.013
   Madsen O. Lehrmann, 1993, Object Oriented Programming in the BETA Programming Language
   Matsumoto Yukihiro., 2001, RUBY NUTSHELL
   McAffer J, 1996, P 1 INT C MET ARCH R
   MOON DA, 1986, SIGPLAN NOTICES, V21, P1, DOI 10.1145/960112.28698
   Nierstrasz O., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [DOI 10.1145/1095430, 10.1145/1095430.1081707, DOI 10.1145/1095430.1081707]
   Paepcke A., 1993, OBJECT ORIENTED PROG, V66-99
   Perin F., 2010, PROC 4 WORKSHOP FAMI, P1
   Rashid A, 2006, LECT NOTES COMPUTER, V4242
   Ressia J., 2010, P 5 WORKSH MOD RUN T, P37
   Ressia Jorge, 2012, P 34 INT C SOFTW ENG
   Sakkinen M., 1989, ECOOP '89. Proceedings of the 1989 European Conference on Object-Oriented Programming, P39
   SCHAFFERT C, 1986, SIGPLAN NOTICES, V21, P9, DOI 10.1145/960112.28699
   Schärli N, 2003, LECT NOTES COMPUT SC, V2743, P248
   Smith C, 2005, P 19 EUR C OBJ OR PR, P453
   Smith R. B., 1996, Theory and Practice of Object Systems, V2, P161, DOI 10.1002/(SICI)1096-9942(1996)2:3<161::AID-TAPO3>3.0.CO;2-Z
   SNYDER A, 1986, SIGPLAN NOTICES, V21, P38, DOI 10.1145/960112.28702
   Tichelaar S, 2000, INTERNATIONAL SYMPOSIUM ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P154, DOI 10.1109/ISPSE.2000.913233
   UNGAR D, 1987, SIGPLAN NOTICES, V22, P227, DOI 10.1145/38807.38828
   VanLimberghen M, 1996, OBJECT ORIENTED SYST, V3, P1
NR 56
TC 5
Z9 5
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2014
VL 44
IS 4
SI SI
BP 413
EP 432
DI 10.1002/spe.2160
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1IH
UT WOS:000332987100003
DA 2024-07-18
ER

PT J
AU Al Dallal, J
AF Al Dallal, Jehad
TI Incorporating transitive relations in low-level design-based class
   cohesion measurement
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented design; class quality; class cohesion metric; method
   invocation; transitive cohesive relation; fault prediction
ID ORIENTED CLASS COHESION; OPEN SOURCE SOFTWARE; PRACT.-EXPER. 2000; FAULT
   PREDICTION; METRICS SUITE; QUALITY; CHAE,HEUNG,SEOK; KWON,YONG,RAE
AB Class cohesion metrics apply different approaches to quantify the relatedness of the attributes and methods in a class. These relations can be direct or transitive. Method invocations are among the key sources of potential transitive attributemethod relations. That is, a method is not only related to the attributes that it references, but it may also be transitively related to the attributes referenced by the methods that it invokes. A few of the existing class cohesion metrics capture this potential transitive cohesion aspect. In this paper, we classify the method invocations as direct or transitive. The definitions of the class representative models used by 16 existing low-level design (LLD) metrics are extended to incorporate the cohesion caused by the two types of method invocations. The impact of incorporating the transitive relations because of the two types of method invocations on the cohesion values and on the ability of the LLD metrics to predict faulty classes are studied empirically. The results show that the transitive relations because of both types of method invocations featured a considerable degree of cohesion that is not captured by most of the existing LLD metrics. However, practically, incorporating transitive relations in cohesion measurement was found to be ineffective in improving the fault-prediction powers of most of the LLD metrics. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Al Dallal, Jehad] Kuwait Univ, Dept Informat Sci, Safat 13060, Kuwait.
C3 Kuwait University
RP Al Dallal, J (corresponding author), Kuwait Univ, POB 5969, Safat 13060, Kuwait.
EM j.aldallal@ku.edu.kw
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
FU Kuwait University [WI04/08]
FX The author would like to acknowledge the support of this work by Kuwait
   University Research Grant WI04/08. In addition, the author would like to
   thank Anas Abdin for assisting in collecting the cohesion results.
CR Abdi H., 2007, Encyclopedia of measurement and statistics, DOI DOI 10.4135/9781412952644.N299
   Aggarwal KK, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.10.a5
   Al Dallal J, 2009, IET SOFTW, V3, P46, DOI 10.1049/iet-sen:20080054
   Al Dallal J., 2010, INT J COMPUTER SCI, V4, P45
   Al Dallal J, 2010, P WORLD C INF TECHN
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Al Dallal J, 2012, J SYST SOFTWARE, V85, P1042, DOI 10.1016/j.jss.2011.12.006
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P396, DOI 10.1016/j.infsof.2011.11.007
   Al Dallal J, 2011, INFORM SOFTWARE TECH, V53, P914, DOI 10.1016/j.infsof.2011.03.004
   Al Dallal J, 2011, IEEE T SOFTWARE ENG, V37, P788, DOI 10.1109/TSE.2010.97
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   [Anonymous], 2002, THESIS SE U
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Chae HS, 2007, 6TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, PROCEEDINGS, P1053, DOI 10.1109/ICIS.2007.192
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Eastman P, 2011, ILLUSION
   Fernandez L., 2006, INF THEOR APPL, V13, P82
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hines WW, 2003, Probability and statistics in engineering
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Morasca S, 2009, INT SYMP EMP SOFTWAR, P44, DOI 10.1109/ESEM.2009.5316048
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Samoladas I, 2003, 9 PANH C INF THESS G, P640
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Sarkar S, 2008, IEEE T SOFTWARE ENG, V34, P700, DOI 10.1109/TSE.2008.43
   Sarkar S, 2007, IEEE T SOFTWARE ENG, V33, P14, DOI 10.1109/TSE.2007.256942
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Xu BW, 2003, SOFTWARE PRACT EXPER, V33, P583, DOI 10.1002/spe.505
   Xu BW, 2001, SOFTWARE PRACT EXPER, V31, P1381, DOI 10.1002/spe.413
NR 46
TC 17
Z9 17
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2013
VL 43
IS 6
BP 685
EP 704
DI 10.1002/spe.2127
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 140MD
UT WOS:000318657300004
DA 2024-07-18
ER

PT J
AU Hong, K
   Park, J
   Kim, S
   Kim, T
   Kim, H
   Burgstaller, B
   Scholz, B
AF Hong, Kirak
   Park, Jiin
   Kim, Sungho
   Kim, Taekhoon
   Kim, Hwangho
   Burgstaller, Bernd
   Scholz, Bernhard
TI TinyVM: an energy-efficient execution infrastructure for sensor networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE virtual machines; bytecode compression; mixed-mode execution; binary;
   bytecode partitioning
ID PROGRAMMING ENVIRONMENT; SYSTEM ARCHITECTURE; CODE COMPRESSION
AB Energy-efficient implementation techniques for virtual machines (VMs) have received little attention yet: conventional wisdom claims that VMs have a diametrical effect on energy consumption, and VM-based applications are therefore short-lived. In this paper, we argue that bytecode interpretation is affordable if we synthesize VMs specifically for energy efficiency. We present TinyVM, an execution infrastructure that seamlessly integrates with C and nesC/TinyOS-based programming environments. TinyVM achieves high code density through the use of compressed bytecode as the primary program representation. Compressed bytecode allows rapid application deployment with low communication overhead. TinyVM executes compressed bytecode in place, which eliminates the need for a decompression stage and thereby reduces memory consumption on sensor nodes. Our infrastructure automates the creation of energy-efficient application-specific VMs. Applications are partitioned in machine code, bytecode, and VM instruction set extensions. Partitioning is manually controlled and/or fully guided by a discrete optimization problem that produces a partitioning with lowest energy consumption for a given program size limit. We provide experimental results for sensor network benchmarks and for selected applications on various CPU architectures including Atmega128-based motes and the ARM-based Intel iMote2. TinyVM has been released under the GNU General Public License. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Hong, Kirak; Park, Jiin; Kim, Sungho; Kim, Taekhoon; Kim, Hwangho; Burgstaller, Bernd] Yonsei Univ, Dept Comp Sci, Seoul 120749, South Korea.
   [Scholz, Bernhard] Univ Sydney, Sch Informat Technol, Sydney, NSW 2006, Australia.
C3 Yonsei University; University of Sydney
RP Burgstaller, B (corresponding author), Yonsei Univ, Dept Comp Sci, 134 Sinchon Dong, Seoul 120749, South Korea.
EM bburg@cs.yonsei.ac.kr
FU Australian Research Council through ARC DP [DP1096445, DP0560190];
   National Research Foundation of Korea (NRF); Korea government (MEST)
   [2010-0005234]; OKAWA Foundation; Australian Research Council
   [DP1096445, DP0560190] Funding Source: Australian Research Council
FX This research was partially supported by the Australian Research Council
   through ARC DP grants DP1096445 and DP0560190, the National Research
   Foundation of Korea (NRF) grant funded by the Korea government (MEST)
   under grant No. 2010-0005234, and the OKAWA Foundation Research Grant
   (2009).
CR [Anonymous], P 10 INT C ARCH SUPP
   Balani R., 2006, P 6 ACM IEEE INT C E, P112
   Bay H, 2008, COMPUT VIS IMAGE UND, V110, P346, DOI 10.1016/j.cviu.2007.09.014
   Beutel J, 2006, P C DES AUT TEST EUR
   Burgstaller B, 2006, LECT NOTES COMPUT SC, V4128, P1204
   Cooper KD, 1999, ACM SIGPLAN NOTICES, V34, P139, DOI 10.1145/301631.301655
   Costa N., 2007, P 2 INT C SYST NETW
   Debray S, 2002, ACM SIGPLAN NOTICES, V37, P95, DOI 10.1145/543552.512542
   Dutta P, 2008, SENSYS'08: PROCEEDINGS OF THE 6TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P71
   Ernst J, 1997, ACM SIGPLAN NOTICES, V32, P358, DOI 10.1145/258916.258947
   Ertl MA, 2002, SOFTWARE PRACT EXPER, V32, P265, DOI 10.1002/spe.434
   Fourer R., 1989, Algorithms and model formulations in mathematical programming. NATO ASI series, DOI [DOI 10.1007/978-3-642-83724-1_12, 10.1007/978-3-642-83724-1]
   FRASER CW, 1984, SIGPLAN NOTICES, V19, P117, DOI 10.1145/502949.502886
   Gay D, 2003, ACM SIGPLAN NOTICES, V38, P1, DOI 10.1145/780822.781133
   Guthaus MR, 2001, WWC-4: IEEE INTERNATIONAL WORKSHOP ON WORKLOAD CHARACTERIZATION, P3, DOI 10.1109/WWC.2001.990739
   Hanson D.R., 1995, A Retargetable C Compiler: Design and Implementation
   Hempstead M, 2005, CONF PROC INT SYMP C, P208, DOI 10.1109/ISCA.2005.12
   Hill J, 2000, ACM SIGPLAN NOTICES, V35, P93, DOI 10.1145/384264.379006
   Jiin Park., 2011, ELECT NOTES THEORETI
   Johnson M., 2009, P IEEE SENSORS
   Kim H., 2008, TR0001 YONS U DEP CO
   Kim H., 2008, P 3 INT C UB INF TEC
   Kim Tae H., 2009, Proceedings of the 10th Korea-Japan Joint Workshop on PSA, P320
   Kirak Hong, 2009, 7th ACM Conference on Embedded Networked Sensor Systems 2009 (SenSys 09), P399
   Koshy J., 2005, 3rd International Conference on Embedded networked sensor systems, P243, DOI DOI 10.1145/1098918.1098945
   KOZUCH M, 1994, PR IEEE COMP DESIGN, P270, DOI 10.1109/ICCD.1994.331903
   Latendresse M, 2005, SCI COMPUT PROGRAM, V57, P295, DOI 10.1016/j.scico.2004.07.005
   Lekatsas H, 1999, IEEE T COMPUT AID D, V18, P1689, DOI 10.1109/43.811316
   Levis P., 2005, P 2 S NETW SYST DES
   Liao S., 1995, P 16 C ADV RES VLSI
   Lin JN, 2007, P INT COMP SOFTW APP, P87
   MALAN D, 2004, TR0404 HARV U
   Muller R., 2007, P 3 BIENN C INN DAT
   Nachman L., 2005, P 4 INT S INF PROC S
   Nazhandali L, 2005, CONF PROC INT SYMP C, P197, DOI 10.1109/ISCA.2005.26
   Park J., 2010, P 5 INT S EMB TECHN
   Polastre J, 2005, 2005 Fourth International Symposium on Information Processing in Sensor Networks, P364
   Simon D., 2006, VEE 2006. Proceedings of the Second International Conference on Virtual Execution Environments, P78
   Standard Performance Evaluation Corporation, 2000, SPEC CPU 2000
   Titzer BL, 2005, 2005 Fourth International Symposium on Information Processing in Sensor Networks, P477
NR 40
TC 8
Z9 9
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2012
VL 42
IS 10
BP 1193
EP 1209
DI 10.1002/spe.1123
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000QM
UT WOS:000308402000001
DA 2024-07-18
ER

PT J
AU Delange, J
   Pautet, L
   Kordon, F
AF Delange, Julien
   Pautet, Laurent
   Kordon, Fabrice
TI Design, implementation and verification of MILS systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE MILS; AADL; POK; code generation; Ocarina
ID SECURITY
AB Safety-critical systems are used in many domains (military, avionics, aerospace, etc.) and handle critical data in hostile environments. To prevent data access by unauthorized subjects, they must protect and isolate information so that only allowed entities can read or write information. However, because of their increased number of functionalities, safety-critical systems design becomes more complex; this increases difficulties in the design and the verification of security functions and potential error in their implementation. The multiple independent levels of security (MILS) approach introduces rules and guidelines for the design of secure systems. It isolates data according to their security levels, reducing system complexity to ease development. However, there is no approach addressing the whole development of MILS systems from high-level specification (application components with their security levels) to the final implementation (code that executes application functions and provide security mechanisms). This paper presents a complete development approach for the design, verification and implementation of MILS architectures. It aims at providing a complete framework to build secure applications based on MILS guidelines. We describe security concerns using a modeling language, verify security requirements and automatically implement the system code generation techniques and a MILS-compliant operating system that provides security functions. Copyright (C) 2012 John Wiley & Sons, Ltd.
C1 [Delange, Julien; Pautet, Laurent] TELECOM ParisTech, LTCI UMR 5141, F-75634 Paris 13, France.
   [Kordon, Fabrice] Univ Paris 06, LIP6, CNRS UMR 7606, F-75005 Paris, France.
C3 IMT - Institut Mines-Telecom; Institut Polytechnique de Paris; Telecom
   Paris; Sorbonne Universite; Centre National de la Recherche Scientifique
   (CNRS)
RP Pautet, L (corresponding author), TELECOM ParisTech, LTCI UMR 5141, 46 Rue Barrault, F-75634 Paris 13, France.
EM laurent.pautet@telecom-paristech.fr
OI Pautet, Laurent/0000-0003-0888-187X; Delange, Julien/0000-0001-8802-7811
CR [Anonymous], 1981, ACM OPERATING SYSTEM, DOI DOI 10.1145/1067627.806586
   [Anonymous], CROSSTALK J DEFENCE
   [Anonymous], 2002, 7007011 RTI NAT I ST
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Delange J., POK USER GUIDE
   Delange J, 2009, SIGADA 2009: PROCEEDINGS OF THE ACM INTERNATIONAL CONFERENCE ON ADA AND RELATED TECHNOLOGIES, P31
   Feiler P. H., 2006, ARCHITECTURE ANAL DE
   Feiler P.H., 2007, FLOW LATENCY ANAL AR
   Gilles O, 2008, ING DIR MOD IDM 08 M, P35
   Hansson J, 2008, MODELING VALIDATING
   Hansson J, 2008, CROSSTALK, V21
   Hansson J, 2010, IEEE SECUR PRIV, V8, P43, DOI 10.1109/MSP.2010.30
   Information assurance directorate, 2007, HIGH
   Jurjens J., 2002, UML 2002  The Unified Modeling Language, V2460, P1
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   *OMG, 2007, SYST MOD LANG SYSML
   *OMG, 2007, PTC070804 OMG
   Orebaugh Angela, 2006, Wireshark & Ethereal Network Protocol Analyzer Toolkit
   Rodríguez A, 2006, FIRST INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P670, DOI 10.1109/ARES.2006.125
   Rodríguez A, 2006, LECT NOTES COMPUT SC, V4083, P51
   Rushby J., 2008, SEPARATION INTEGRATI
   *SAE, 2008, ARCH AN DES LANG V2
   The OpenSSL Project. OpenSSL, 1998, PROGR COMP
   Uchenick G, 2005, MIL COMM C 2005 MILC
   WW Technology Group, EDICT TOOL SUIT
   ZALILA B, OCARINA USER GUIDE
   Zhou JS, 2006, PHYS REV LETT, V96, DOI 10.1103/PhysRevLett.96.247202
NR 27
TC 3
Z9 3
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2012
VL 42
IS 7
SI SI
BP 799
EP 816
DI 10.1002/spe.1151
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 952UX
UT WOS:000304819600003
DA 2024-07-18
ER

PT J
AU Loyall, JP
   Gillen, M
   Paulos, A
   Bunch, L
   Carvalho, M
   Edmondson, J
   Schmidt, DC
   Martignoni, A
   Sinclair, A
AF Loyall, Joseph P.
   Gillen, Matthew
   Paulos, Aaron
   Bunch, Larry
   Carvalho, Marco
   Edmondson, James
   Schmidt, Douglas C.
   Martignoni, Andrew, III
   Sinclair, Asher
TI Dynamic policy-driven quality of service in service-oriented information
   management systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 13th IEEE International Symposium on Object/Component/Service-Oriented
   Real-Time Distritubed Computing (ISORC)
CY MAY 05-06, 2010
CL Carmona, SPAIN
SP IEEE
DE service-oriented architecture; quality of service; information
   management
ID REAL-TIME; QOS
AB SOA middleware has emerged as a powerful and popular distributed computing paradigm because of its high-level abstractions for composing systems and encapsulating platform-level details and complexities. Control of some details encapsulated by SOA middleware is necessary, however, to provide managed QoS for SOA systems that require predictable performance and behavior. This paper presents a policy-driven approach for managing QoS in SOA systems called QoS enabled dissemination (QED). QED includes services for: (1) specifying and enforcing the QoS preferences of individual clients; (2) mediating and aggregating QoS management on behalf of competing users; and (3) shaping information exchange to improve real-time performance. We describe QED's QoS services and mechanisms in the context of managing QoS for a set of Publish-Subscribe-Query information management services. These services provide a representative case study in which CPU and network bottlenecks can occur, client QoS preferences can conflict, and system-level QoS requirements are based on higher level, aggregate end-to-end goals. We also discuss the design of several key QoS services and describe how QED's policy-driven approach bridges users to the underlying middleware and enables QoS control based on rich and meaningful context descriptions, including users, data types, client preferences, and information characteristics. In addition, we present experimental results that quantify the improved control, differentiation, and client-level QoS enabled by QED. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Loyall, Joseph P.; Gillen, Matthew; Paulos, Aaron] BBN Technol, Cambridge, MA USA.
   [Bunch, Larry; Carvalho, Marco] Inst Human Machine Cognit, Pensacola, FL USA.
   [Edmondson, James; Schmidt, Douglas C.] Vanderbilt Univ, Inst Software Integrated Syst, Nashville, TN USA.
   [Martignoni, Andrew, III] Boeing Co, St Louis, MO USA.
   [Sinclair, Asher] USAF, Res Lab, Rome, NY USA.
C3 Raytheon Technologies; Raytheon BBN Technologies; Florida Institute for
   Human & Machine Cognition (IHMC); Vanderbilt University; Boeing; United
   States Department of Defense; United States Air Force
RP Loyall, JP (corresponding author), BBN Technol, Cambridge, MA USA.
EM jloyall@bbn.com
RI Carvalho, Marco/AAC-1001-2020
OI Carvalho, Marco/0000-0002-2354-9640; Sinclair, John/0000-0002-5865-0036
CR Al-Ali R, 2004, CONCURR COMP-PRACT E, V16, P401, DOI 10.1002/cpe.819
   Balasubramanian K, 2007, J COMPUT SYST SCI, V73, P171, DOI 10.1016/j.jcss.2006.04.008
   Behnel S., 2006, P 26 IEEE INT C DIST, P20, DOI 10.1109/ICDCSW.2006.77
   CANFORA G, 2005, P 2005 GEN EV COMP C
   CAO F, 1999, P INT C MULT COMP SY
   *CISC, 10340 CISC
   COMBS V, 2005, P 10 INT COMM CONTR
   Corsaro A, 2006, EMERG COMMUN-STUD NE, V8, P79
   de Niz D., 2006, P 12 IEEE REAL TIM E
   de Niz D, 2006, INT J EMBED SYST, V2, P196, DOI 10.1504/IJES.2006.014855
   *DEF INF SYST AG, NET CENTR ENT SERV
   DEMIGUEL MA, 2002, P 5 IEEE INT S OBJ O
   *DOD CIO, DEP DEF GLOB INF GRI
   El-Gendy MA, 2003, P IEEE, V91, P1086, DOI 10.1109/JPROC.2003.814615
   ELGENDY MA, 2004, P 12 INT WORKSH QUAL
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   GOPALAKRISHNAN S, 2006, P 12 IEEE REAL TIM E
   GRANT R, 2009, P SPIE DEF TRANSF NE
   GU Z, 2003, P 9 IEEE REAL TIM EM
   Hapner M., 2002, JAVA MESSAGE SERVICE
   HARDIN G, 1968, SCIENCE, V162, P1243, DOI 10.1126/science.162.3859.1243
   HOFFERT J, 2009, P 8 WORKSH AD REFL M
   *JBOSS COMM, JBOSS APPL SERV
   JORDAN M, 2004, P 5 INT MIDDL C TOR
   Linderman M., 2005, P 10 INT COMM CONTR
   LLAMBIRI D, 2003, 23 IEEE INT C DISTR
   LODI G, 2005, P 4 IEEE INT S NETW
   LOYALL J, 2009, P MIL COMM C MILCOM
   LOYALL J, 2010, P 13 IEEE COMP SOC S
   LOYALL J, 2009, P SPIE DEF TRANSF NE
   MABROUK N, 2009, P 10 INT MIDDL C CHA
   Mahambre SP, 2007, IEEE INTERNET COMPUT, V11, P35, DOI 10.1109/MIC.2007.77
   *OASIS, 2005, EXT ACC CONTR MARK L
   *OASIS, OASIS WEB SERV NOT
   *OBJ MAN GROUP, 2004, NOT SERV VERS 1 1 OM
   Object Management Group, 2007, DAT DISTR SERV REAL
   REPANTIS T, 2006, P 7 INT MIDDL C MELB
   Roughan Matthew, 2004, P 4 ACM SIGCOMM C IN
   SCHANTZ R, 1999, P 2 IEEE INT S OBJ O
   SCHANTZ R, 2003, P 4 INT MIDDL C RIO
   *SPRINGS COMM, SPRINGS COMM SPRING
   STANKOVIC JA, 2003, P IEEE REAL TIM EMB
   Stewart C., 2005, P 2 S NETW SYST DES
   *US AIR FORC SCI A, 1999, SABTR9902 US AIR FOR, V1
   *US AIR FORC SCI A, 1999, BUILD JOINT BATTL IN, V2
   USZOK A, 2008, P IEEE WORKSH POL DI
   Vienne P., 2005, P 5 INT WORKSH SOFTW
   WANG P, 2000, P 7 IEEE IFIP NETW O
   WICHADAKUL D, 2001, P INT MIDDL C HEID G
   *WORLD WID WEB CON, 2010, XQUERY 1 0 XML QUER
   World Wide Web Consortium, 1999, XSL TRANSF XSLT VERS
   World Wide Web Consortium, 2004, OWL WEB ONT LANG OV
   World Wide Web Consortium, 1999, XML PATH LANG XPATH
   Zhang Cheng-Wen, 2006, Chinese Journal of Computers, V29, P1029
NR 54
TC 5
Z9 5
U1 0
U2 8
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2011
VL 41
IS 12
SI SI
BP 1459
EP 1489
DI 10.1002/spe.1101
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 842NP
UT WOS:000296606500005
DA 2024-07-18
ER

PT J
AU Liu, H
   Xie, XD
   Yang, J
   Lu, YS
   Chen, TY
AF Liu, Huai
   Xie, Xiaodong
   Yang, Jing
   Lu, Yansheng
   Chen, Tsong Yueh
TI Adaptive random testing through test profiles
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software quality; software testing; random testing; adaptive random
   testing; test profile
ID STRATEGY
AB Random testing (RT), which simply selects test cases at random from the whole input domain, has been widely applied to test software and assess the software reliability. However, it is controversial whether RT is an effective method to detect software failures. Adaptive random testing (ART) is an enhancement of RT in terms of failure-detection effectiveness. Its basic intuition is to evenly spread random test cases all over the input domain. There are various notions to achieve the goal of even spread, and each notion can be implemented by different algorithms. For example, 'by exclusion' and 'by partitioning' are two different notions to evenly spread test cases. Restricted random testing (RRT) is a typical algorithm for the notion of 'by exclusion', whereas the notion of 'by partitioning' can be implemented by either the technique of bisection (ART-B) or the technique of random partitioning (ART-RP). In this paper, we propose a generic approach that can be used to implement different notions. In the new approach, test cases are simply selected based on test profiles that are in turn designed according to certain notions. In this study, we design several test profiles for the notions of 'by exclusion' and 'by partitioning', and then use these profiles to illustrate our new approach. Our experimental results show that compared with the original RRT, ART-B, and ART-RP algorithms, our new approach normally brings at least a higher failure-detection capability or a lower computational overhead. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Liu, Huai; Chen, Tsong Yueh] Swinburne Univ Technol, Ctr Software Anal & Testing, Hawthorn, Vic 3122, Australia.
   [Xie, Xiaodong; Yang, Jing; Lu, Yansheng] Huazhong Univ Sci & Technol, Coll Comp Sci & Technol, Wuhan 430074, Peoples R China.
C3 Swinburne University of Technology; Huazhong University of Science &
   Technology
RP Liu, H (corresponding author), Swinburne Univ Technol, Ctr Software Anal & Testing, Hawthorn, Vic 3122, Australia.
EM hliu@swin.edu.au
RI Liu, Huai/M-4871-2019; Liu, Huai/E-2060-2013
OI Liu, Huai/0000-0003-3125-4399; Liu, Huai/0000-0003-3125-4399; Chen,
   Tsong/0000-0003-3578-0994
FU Australian Research Council [DP0880295]; Australian Research Council
   [DP0880295] Funding Source: Australian Research Council
FX This work is supported by Australian Research Council Discovery Grant
   under grant number DP0880295.
CR ACM, 1980, COLL ALG ACM
   AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   [Anonymous], 1992, Numerical recipes in C: The Art of Scientific Computing
   [Anonymous], 2004, Understanding Probability
   Bishop P. G., 1993, P 23 INT S FAULT TOL, P98
   Cai K.-Y., 2009, P 20 INT S SOFTW REL P 20 INT S SOFTW REL, P198
   Chan FT, 2004, P INT COMP SOFTW APP, P96, DOI 10.1109/ISIC.2004.1387665
   Chan KP, 2006, P INT COMP SOFTW APP, P485
   Chan KP, 2006, INT J SOFTW ENG KNOW, V16, P553, DOI 10.1142/S0218194006002926
   Chen T. Y., 2007, P 9 INT C SOFTW ENG, P141
   Chen TY, 2007, INT J SOFTW ENG KNOW, V17, P805, DOI 10.1142/S0218194007003501
   Chen TY, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363107
   Chen TY, 2009, IEEE T RELIAB, V58, P179, DOI 10.1109/TR.2008.2011687
   Chen TY, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P292, DOI 10.1109/APSEC.2004.17
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P79
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   FINELLI GB, 1991, RELIAB ENG SYST SAFE, V32, P155, DOI 10.1016/0951-8320(91)90052-9
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   Gutjahr WJ, 1999, IEEE T SOFTWARE ENG, V25, P661, DOI 10.1109/32.815325
   HAMLET D, 1990, IEEE T SOFTWARE ENG, V16, P1402, DOI 10.1109/32.62448
   Huai Liu, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P92, DOI 10.1109/QSIC.2010.61
   JAYGARL H, 2009, P 33 ANN INT COMP SO, V1, P148
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   KUO FC, 2006, THESIS SWINBURNE U T, P56
   LAWDER J, 2000, JL100 U LOND BIRKB C, P1
   Lin Y, 2009, IEEE INT CONF AUTOM, P221, DOI 10.1109/ASE.2009.13
   Mayer J., 2005, P 20 IEEEACM INT C A, P333, DOI DOI 10.1145/1101908
   Mayer J, 2006, LECT NOTES COMPUT SC, V3997, P72
   Menzies T, 2000, IEEE SOFTWARE, V17, P107, DOI 10.1109/52.877876
   MERKEL R, 2004, THESIS SWINBURNE U T, P81
   Morasca S, 2004, P INT S SOFTW TEST A, P154
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Regehr J, 2005, P 5 ACM INT C EMB SO, P290
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Tappenden AF, 2009, IEEE T RELIAB, V58, P619, DOI 10.1109/TR.2009.2034288
   van der Meulen MJP, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P101, DOI 10.1109/ISSRE.2004.7
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
NR 40
TC 18
Z9 22
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2011
VL 41
IS 10
SI SI
BP 1131
EP 1154
DI 10.1002/spe.1067
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 818RV
UT WOS:000294773600007
DA 2024-07-18
ER

PT J
AU Hervás, R
   Bravo, J
AF Hervas, Ramon
   Bravo, Jose
TI COIVA: context-aware and ontology-powered information visualization
   architecture
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE context-awareness; ubiquitous computing; semantic web; knowledge
   management; ontology
AB This paper exploits semantics to apply context in run-time adaptation, particularly for services in a user-centered smart environment. Context-sensitive services are usually focused on their own information without interoperation pretensions. It is necessary to enable common context models and systems in order to make context-aware applications interoperable. Moreover, context management systems need to implement mechanisms to support the dynamic behavior of the users and their surroundings, including techniques to adapt the model to their future needs, to maintain the context information at run-time and to be interoperable with external context models. By adapting web semantic technologies we can enable smarter and more proactive operation of context management systems. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Hervas, Ramon; Bravo, Jose] Univ Castilla La Mancha, E-13071 Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Hervás, R (corresponding author), Univ Castilla La Mancha, E-13071 Ciudad Real, Spain.
EM ramon.hlucas@uclm.es
RI Lucas, Ramón Hervás/Y-7843-2019; Bravo, Jose/F-8861-2015; BRAVO,
   José/KDM-8889-2024
OI Lucas, Ramón Hervás/0000-0001-9924-5443; Bravo,
   Jose/0000-0001-5752-2406; 
FU Junta de Comunidades de Castilla-La Mancha (Spain) [PII1I09-0123-27]
FX This work has been financed by PII1I09-0123-27 project from Junta de
   Comunidades de Castilla-La Mancha (Spain).
CR Abate F.R., 1999, OXFORD AM DICT CURRE
   [Anonymous], 2004, W3C MEMB SUBMISS
   [Anonymous], 1995, PROFESSIONAL COMPUTI
   BANDARA A, 2004, P SEM WEB HIR JAP
   Bravo J, 2006, J UNIVERS COMPUT SCI, V12, P270
   BRAVO J, 2006, LECT NOTES COMPUTE S, V4101
   BRAVO J, 2008, LECT NOTES COMPUTER, V5355
   BURIANO L, 2006, P 7 INT C MOB DAT MA
   CARD SK, 1991, P ACM C HUM FACT COM
   CHEN H, 2003, P WORKSH ONT DISTR S
   Christopoulou E, 2005, INT J HUM-COMPUT ST, V62, P664, DOI 10.1016/j.ijhcs.2005.02.007
   DANIELE L, 2007, P OP EUR SUMM SCH IF
   DESMET B, 2007, P INT INT C MOD US C
   Dey A. K., 2005, ACM Transactions on Computer-Human Interaction, V12, P53, DOI 10.1145/1057237.1057241
   DEY AK, 2002, P WORKSH SOFTW ENG W
   DHONDT M, 2004, P INT C ASP OR SOFTW
   Dourish P, 2004, PERS UBIQUIT COMPUT, V8, P19, DOI 10.1007/s00779-003-0253-8
   Fortier A, 2010, J SYST SOFTWARE, V83, P915, DOI 10.1016/j.jss.2009.11.002
   Fujinami K., 2004, P S APPL COMP NIC CY
   GARRETT JJ, 2002, USER CENTERED DESIGN
   Giner P, 2010, IEEE PERVAS COMPUT, V9, P18, DOI 10.1109/MPRV.2010.14
   GRASSI V, 2007, P WORKSH ENG SOFTW S
   GROSS T, 2001, MENSCH COMPUTER, V5, P173
   GU T, 2004, P COMM NETW DISTR SY
   Hatala M, 2005, J WEB SEMANT, V3, P5, DOI 10.1016/j.websem.2005.05.004
   Heckmann D., 2005, USER MODELING
   Henricksen K., 2002, Pervasive Computing. First International Conference, Pervasive 2002. Proceedings (Lecture Notes in Computer Science Vol.2414), P167
   HERVAS R, SIMPLIFIED COIVA CLA
   HERVAS R, 2010, J U COMPUTER SCI, DOI DOI 10.3217/JUCS-0616-12
   HERVAS R, 2008, P 3 S UB COMP AMB IN
   HERVAS R, 2009, LECT NOTES COMPUTER, V5738
   Vazquez JI, 2007, INT J WEB INF SYST, V2, P212, DOI 10.1108/17440080780000301
   ISTAG, 2010, SCEN AMB INT 2010
   KIM G, 2009, HUMAN INTERFACE MANA
   Kobsa A, 2001, USER MODEL USER-ADAP, V11, P49, DOI 10.1023/A:1011187500863
   Kofod-Petersen A., 2005, Revue d'Intelligence Artificielle, V19, P479
   LOPEZDEIPINA D, 2007, P INT ENV ULM GERM
   LU H, 2008, P 30 INT C SOFTW ENG
   Luger GF, 1998, ARTIFICIAL INTELLIGE
   Malandrino D, 2010, PERS UBIQUIT COMPUT, V14, P301, DOI 10.1007/s00779-009-0232-9
   MARMASSE N, 2000, P 2 INT S HANDH UB C
   PEDERSON T, 2008, P ER 2008 WORKSH ADV
   Raso I., 2010, P 4 INT C MOB UB COM
   Roman M., 2002, SIGMOBILE MOBILE COM, V6, P65
   ROMAN M, 2003, THESIS U ILLINOIS UR, P31
   SHENG QZ, 2005, P INT C MOB BUS SYDN
   Sirin E., 2007, P WORKSH OWL EXP DIR
   Sousa J.P, 2002, SOFTWARE ARCHITECTUR
   STEPHENS T, 2004, WILSH C LOS ANG
   Terrenghi L, 2009, PERS UBIQUIT COMPUT, V13, P583, DOI 10.1007/s00779-009-0244-5
   THEVENIN D, 1999, P INT ED
   TONINELLI A, 2000, P 5 INT SEM WEB C AT
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Van Rijsbergen C.J, 2004, The Geometry of Information Retrieval
   VAZQUEZ JI, 2008, P 1 C INT THINGS ZUR
   VUOLLE M, 2008, P INT C HUM COMP INT
   Wang XH, 2004, IEEE PERVAS COMPUT, V3, P32, DOI 10.1109/MPRV.2004.1321026
   WRONA K, 2005, P AUT M POL INF PROC
   Zhang L, 2009, IEEE INT C EMERG
   ZHDANOVA AV, 2006, P WORKSH CAPT CONT C
   Zimmer T., 2004, P 2 IEEE ANN C PERV
NR 61
TC 19
Z9 19
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2011
VL 41
IS 4
BP 403
EP 426
DI 10.1002/spe.1011
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 731BH
UT WOS:000288080800004
OA Bronze
DA 2024-07-18
ER

PT J
AU Strembeck, M
   Zdun, U
AF Strembeck, Mark
   Zdun, Uwe
TI An approach for the systematic development of domain-specific languages
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE applied software engineering; model-driven software development;
   domain-specific languages; language engineering
ID DESIGN
AB Building tailored software systems for a particular application domain is a complex task. For this reason, domain-specific languages (DSLs) receive a constantly growing attention in recent years. So far the main focus of DSL research is on case studies and experience reports for the development of individual DSLs, design approaches and implementation techniques for DSLs, and the integration of DSLs with other software development approaches on a technical level. In this paper, we identify and describe the different activities that we conduct when engineering a DSL, and describe how these activities can be combined in order to define a tailored DSL engineering process. Our research results are based on the experiences we gained from multiple different DSL development projects and prototyping experiments. Copyright (c) 2009 John Wiley & Sons, Ltd.
C1 [Strembeck, Mark] Vienna Univ Econ & Business WU Vienna, New Media Lab, Inst Informat Syst, Vienna, Austria.
   [Zdun, Uwe] Vienna Univ Technol, Inst Informat Syst, Distributed Syst Grp, Vienna, Austria.
C3 Vienna University of Economics & Business; Technische Universitat Wien
RP Strembeck, M (corresponding author), Vienna Univ Econ & Business WU Vienna, New Media Lab, Inst Informat Syst, Vienna, Austria.
EM mark.strembeck@wu.ac.at
RI Zdun, Uwe/AFR-2161-2022
FU European Union F137 [215175]
FX This work was partially Supported by the European Union F137 project
   COMPAS, grant no. 215175.
CR Allen NA, 2005, PROCEEDINGS OF THE 2005 WINTER SIMULATION CONFERENCE, VOLS 1-4, P419, DOI 10.1109/WSC.2005.1574277
   [Anonymous], 2000, Planning Extreme Programming
   [Anonymous], PATTERN LANGUAGE PRO
   [Anonymous], 2003, The art of UNIX programming
   [Anonymous], 1974, Proceedings of the 1974 ACM SIGFIDET (now SIGMOD) workshop on Data description, access and control, ACM, DOI DOI 10.1145/800296.811515
   [Anonymous], 2004, Software Factories
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 1994, LaTeX: A Document Preparation System: User's Guide and Reference Manual
   Balasubramanian K, 2006, COMPUTER, V39, P33, DOI 10.1109/MC.2006.54
   BENTLEY J, 1986, COMMUN ACM, V29, P711, DOI 10.1145/6424.315691
   BIERHOFF K, 2006, P 6 OOPSLA WORKSH DO
   *BNF ISO IEC, 2008, 149771996 BNFISOIEC
   Cleenewerck T, 2003, LECT NOTES COMPUT SC, V2830, P245
   Clements P., 2002, Software product lines
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   Cuadrado LS, 2007, IEEE SOFTWARE, V24, P48, DOI 10.1109/MS.2007.135
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Ferraiolo DavidF., 1999, ACM T INFORM SYST SE, V2, P34, DOI DOI 10.1145/300830.300834
   Ferraiolo DF, 2007, ROLE BASED ACCESS CO
   FOWLER M, 2008, LANGUAGE WORKBENCHES
   FREEZE J, 2006, CREATING DSLS RUBY R
   Gamma E., 1994, ANAL PATTERNS REUSAB
   Graham Paul., 1993, On LISP: Advanced Techniques for Common LISP
   GRANT E, 2004, P 4 OOPSLA WORKSH DO
   HERNDON RM, 1988, IEEE T SOFTWARE ENG, V14, P803, DOI 10.1109/32.6159
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   HORS AL, 2008, DOCUMENT OBJECT MODE
   Hudak P., 1996, ACM COMPUTING SURVEY, V28
   *ISO IEC, 2008, 907512003 ISOIEC
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jones ND, 1996, ACM COMPUT SURV, V28, P480, DOI 10.1145/243439.243447
   Kelly S., 2008, Domain-Specific Modeling
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   Kosar T, 2008, INFORM SOFTWARE TECH, V50, P390, DOI 10.1016/j.infsof.2007.04.002
   KURTEV I, 2006, 21 ACM SIGPLAN C OBJ, P602
   LANDIN PJ, 1966, COMMUN ACM, V9, P157, DOI 10.1145/365230.365257
   Ledeczi Akos, 2001, P IEEE INT WORKSH IN
   LUOMA J, 2004, P 4 OOPSLA WORKSH DO
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   *MICR, 2008, MICR MOD PLATF COD N
   Neumann G, 2001, P 8 ACM C COMP COMM, P58
   Neumann G., 2002, P 7 ACM S ACC CONTR, P33, DOI DOI 10.1145/507711.507717
   *OBJ MAN GROUP, 2008, OMG UN MOD LANG OMG
   *OBJ MAN GROUP, 2008, OCL 2 0 SPEC VERS 2
   PAUL R, 2005, LINUX J
   PEMBERTON S, 2008, XHTML 1 0 EXTENSIBLE
   ROBERTS D, 1996, P PATT LANG PROGR C
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Schmechtig S, 2006, NEW ELECTRON, V39, P31
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Strembeck M., 2004, ACM Transactions on Information and Systems Security, V7, P392, DOI 10.1145/1015040.1015043
   Strembeck M, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P224
   STREMBECK M, 2006, P WORKSH OP DYN ASP
   STREMBECK M, 2005, P 3 S REQ ENG INF SE
   Strembeck M, 2008, J OBJECT TECHNOL, V7, P143, DOI 10.5381/jot.2008.7.6.a5
   Thibault SA, 1999, IEEE T SOFTWARE ENG, V25, P363, DOI 10.1109/32.798325
   THOMPSON H, 2008, XML SCHEMA 1
   Valentin EC, 2002, PROCEEDINGS OF THE 2002 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P563, DOI 10.1109/WSC.2002.1172932
   Van Deursen A, 1998, J SOFTW MAINT-RES PR, V10, P75, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<75::AID-SMR168>3.0.CO;2-5
   Wang Q., 2005, P 2005 ACM S APPL CO, P1419
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Wile D, 2004, SCI COMPUT PROGRAM, V51, P265, DOI 10.1016/j.scico.2003.12.006
   Zdun U, 2006, COMPUT LANG SYST STR, V32, P56, DOI 10.1016/j.cl.2005.04.001
   Zdun U, 2005, P INT WORKSH SOFTW F, P1
   Zdun U, 2007, INFORM SOFTWARE TECH, V49, P871, DOI 10.1016/j.infsof.2006.10.001
   2008, LOGIX MULTILANGUAGE
   2008, ATLAS MODEL MANAGEME
   2008, GENERIC MODELING ENV
NR 73
TC 77
Z9 83
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2009
VL 39
IS 15
BP 1253
EP 1292
DI 10.1002/spe.936
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 500XQ
UT WOS:000270340100002
DA 2024-07-18
ER

PT J
AU Chang, HP
   Lin, YC
   Chen, SH
AF Chang, Hsung-Pin
   Lin, Yu-Chieh
   Chen, Shiu-Hau
TI System supports for protocol and application adaptation in vertical
   handoffs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE vertical handoff; heterogeneous networks; TCP; application adaptation
ID END; BANDWIDTH
AB In overlay networks, the network characteristics before and after a vertical handoff would be drastically different. Consequently, in this paper, we propose an end-to-end based scheme to support protocol and application adaptation in vertical handoffs. First, we proposed a Vertical-handoff Aware TCP, called VA-TCP. VA-TCP can identify the packet losses caused by vertical handoffs. If segments losses are due to vertical handoffs, VA-TCP only retransmits the missing segments but does not invoke the congestion control procedure. Moreover, VA-TCP dynamically estimates the bandwidth and round-trip time in a new network. Based on the estimated bandwidth and round-trip time, VA-TCP adjusts its parameters to respond to the new network environment. Second, during a vertical handoff, applications also need to be adapted accordingly. Therefore, we design a programming interface that allows applications to be notified upon and adapt to changing network environments. To support our interface, we utilize the signal mechanism to achieve kernel-to-user notification. Nevertheless, signals cannot carry information. Thus, we implement the shared memory mechanism between applications and the kernel to facilitate parameters exchange. Finally, we also provide a handoff-aware CPU scheduler so that tasks that are interested in the vertical-handoff event are given preference over other processes to attain a prompt response for new network conditions. We have implemented a prototype system on the Linux kernel 2.6. From the experimental results, our proposed protocol and application adaptation mechanisms are shown to effectively improve the performance of TCP and applications during vertical handoffs. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Chang, Hsung-Pin] Natl Chung Hsing Univ, Inst Networking & Multimedia, Dept Comp Sci & Engn, Taichung 402, Taiwan.
C3 National Chung Hsing University
RP Chang, HP (corresponding author), Natl Chung Hsing Univ, Inst Networking & Multimedia, Dept Comp Sci & Engn, 250 Kun Kuang Rd, Taichung 402, Taiwan.
EM hpchang@cs.nchu.edu.tw
OI Chang, Hsung-Pin/0000-0002-2680-8556
FU National Science Council [NSC91-2218-E-018-004]
FX Contract/grant sponsor: National Science Council; contract/grant number
   NSC91-2218-E-018-004
CR AMIR E, 1995, P ACM MULT 95 SAN FR, P255
   Andersen D, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE FOURTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P213
   [Anonymous], P ACM SIGCOMM
   [Anonymous], P ACM SIGCOMM
   BAKRE A, 1995, INT CON DISTR COMP S, P136, DOI 10.1109/ICDCS.1995.500012
   Balakrishnan H, 1997, IEEE ACM T NETWORK, V5, P756, DOI 10.1109/90.650137
   Balakrishnan H, 1995, WIREL NETW, V1, P469, DOI 10.1007/BF01985757
   BELOT JC, 1993, P ACM SIGCOMM, P289
   Bovet D. P., 2005, Understanding the Linux Kernel: from I/O ports to process management
   CARTER R, 1996, BUCS96006
   Chang HP, 2006, INTERNATIONAL CONFERENCE ON PERVASIVE SERVICES, PROCEEDINGS, P88
   Floyd S, 1999, IEEE ACM T NETWORK, V7, P458, DOI 10.1109/90.793002
   FOX A, 1996, OPER SYS REV, V30, P160
   Grieco LA, 2004, ACM SIGCOMM COMP COM, V34, P25, DOI 10.1145/997150.997155
   Guo CX, 2004, IEEE J SEL AREA COMM, V22, P834, DOI 10.1109/JSAC.2004.826921
   Jain M, 2003, IEEE ACM T NETWORK, V11, P537, DOI 10.1109/TNET.2003.815304
   Jain M., 2004, P 4 ACM SIGCOMM C IN, P272
   JIN Q, 2001, P 10 IEEE S HIGH PER, P289
   Katz RH, 1996, P SOC PHOTO-OPT INS, V2667, P77, DOI 10.1117/12.235901
   Klaue J, 2003, LECT NOTES COMPUT SC, V2794, P255, DOI 10.1007/978-3-540-45232-4_16
   Li Z.-N., 2004, Fundamentals of Multimedia
   LISA A, 2007, SOFTWARE PRACTICE EX, V37, P347
   MASCOLO S, 1991, P ACM MIBL, P287
   MOHOMED I, 2006, P 4 INT C MOB SYST A, P42
   Noble B.D., 1997, P ACM S OPERATING SY, P276
   Parvez N, 2004, GLOB TELECOMM CONF, P2760
   Paxson V, 1999, IEEE ACM T NETWORK, V7, P277, DOI 10.1109/90.779192
   Pentikousis K., 2000, IEEE Commun. Survey, P2
   Perkins C., 2002, RFC 3344
   Prasad R, 2003, IEEE NETWORK, V17, P27, DOI 10.1109/MNET.2003.1248658
   Sharma S, 2007, SOFTWARE PRACT EXPER, V37, P779, DOI 10.1002/spe.790
   SNOEREN AC, 2000, P 6 ANN INT C MOB CO, P155
   Stemm M., 1998, Mobile Networks and Applications, V3, P335, DOI 10.1023/A:1019197320544
   Sudame P, 2001, MOBILE NETW APPL, V6, P43, DOI 10.1023/A:1009861720398
   THAYER R, 1998, 2411 RFC
   VADUVUR B, 1997, P IEEE INT COMP SOFT, P573
NR 36
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN 10
PY 2009
VL 39
IS 8
BP 739
EP 771
DI 10.1002/spe.910
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 447FL
UT WOS:000266176900001
DA 2024-07-18
ER

PT J
AU Sterling, CD
   Olsson, RA
AF Sterling, Chad D.
   Olsson, Ronald A.
TI Automated bug isolation via program chipping
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE program chipping; debugging; bug isolation; data slicing; program
   slicing
ID FAILURE
AB This paper introduces program chipping, a simple yet effective technique to isolate bugs. This technique automatically removes or chips away parts of a program so that the part that contributes to some symptomatic output becomes more apparent to the user. Program chipping is similar in spirit to traditional program slicing and debugging techniques, but chipping uses very simple techniques based on the syntactic structure of the program. We have developed a chipping tool for Java programs, called ChipperJ, and have run it on a variety of small to large programs, including a Java compiler, looking for various symptoms. The results are promising. The reduced program is generally about 20-35% of the size of the original. ChipperJ takes less than an hour on large programs to perform this reduction; even if it took overnight, that would be reasonable if it saves the developer time. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
   Hewlett Packard Corp, San Diego, CA 92127 USA.
C3 University of California System; University of California Davis;
   Hewlett-Packard
RP Olsson, RA (corresponding author), Univ Calif Davis, Dept Comp Sci, 1 Shields Ave, Davis, CA 95616 USA.
EM olsson@cs.ucdavis.edu
CR Agrawal G, 2001, ACM SIGPLAN NOTICES, P6
   AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Agrawal Hiralal, 1990, PLDI, P246, DOI 10.1145/93542.93576
   [Anonymous], PROGRAMMING LANGUAGE
   *BAND PROJ, 2006, BAND SLIC
   Chan TW, 1998, J SOFTW MAINT-RES PR, V10, P111, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<111::AID-SMR167>3.0.CO;2-8
   Chen TY, 1997, J SOFTW MAINT-RES PR, V9, P33, DOI 10.1002/(SICI)1096-908X(199701)9:1<33::AID-SMR143>3.0.CO;2-4
   CORNELIS F, 2006, LINUX INPUT REPLAY
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DeMillo RA, 1997, P INT COMP SOFTW APP, P515, DOI 10.1109/CMPSAC.1997.625061
   *ECL ORG, 2006, ECL DEV ENV
   FRITZSON P, 1991, P ACM SIGPLAN 91, P317
   Griswold R., 1996, ICON PROGRAMMING LAN, VThird
   GRISWOLD WG, 2001, P 2001 ACM SIGPLAN S
   HABRA A, 2006, GEN STRING LIB
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   LEBLANC TJ, 1987, IEEE T COMPUT, V36, P471, DOI 10.1109/TC.1987.1676929
   LINDHOLM T, 2005, JAVATM VIRTUAL MACHI
   Misherghi G., 2006, Proceedings of the 28th International Conference on Software Engineering, P142, DOI [DOI 10.1145/1134285.1134307, 10.1145/1134285.1134307]
   Offutt J., 2000, Proc. Mutat. 2000 Mutat. Test. Twent. Twenty First Centuries, P45
   Olsson RA, 1999, CONCURRENCY-PRACT EX, V11, P479, DOI 10.1002/(SICI)1096-9128(19990810)11:9<479::AID-CPE441>3.0.CO;2-S
   Ronsse M, 1999, ACM T COMPUT SYST, V17, P133, DOI 10.1145/312203.312214
   *SIMCON, 2006, FPT FORTR PARTN
   *SOURCEFORGE, 2004, SRC TKDIFF
   Sterling C.D., 2005, Proceedings of the Sixth International Symposium on Automated Analysis-Driven Debugging, P23, DOI [10.1145/1085130.1085134, DOI 10.1145/1085130.1085134]
   STERLING CD, 2005, THESIS U CALIFORNIA
   *SUN MICR, 2006, JAV BUG DAT
   TIP F, 1995, J PROGRAM LANG, V3, P121
   VENKATESH GA, 1991, P SIGPLAN 91 C PROGR, P107
   VERTES M, 2006, XLAB TOOL AUTOMATE G
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WEISER M, 1986, EMPIRICAL STUDIES PR
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   2006, APPL RES XSLICE TOOL
NR 36
TC 10
Z9 13
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2007
VL 37
IS 10
BP 1061
EP 1086
DI 10.1002/spe.798
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 198JW
UT WOS:000248625400003
DA 2024-07-18
ER

PT J
AU Fuentes, L
   Pinto, M
   Troya, JA
AF Fuentes, L.
   Pinto, M.
   Troya, J. A.
TI Supporting the development of CAM/DAOP applications: an integrated
   development process
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE component based software development; aspect-oriented software
   development; software architecture; development environment; middleware
   platform
ID SOFTWARE COMPONENTS; DYNAMIC COMPONENT; IMPLEMENTATION; DESIGN
AB The increasing complexity of large-scale distributed applications is driving the Software Engineering community to adopt new software technologies for the development of distributed systems. In this sense, the emergence of component-based software engineering represents a significant advance towards assembling applications by plugging in pre-fabricated components. Additionally, the principle of 'advanced' separation of concerns is nowadays widely applied to improve modularity, reusability and adaptability of software components. In this way, the aspect-oriented software development paradigm separates into a new dimension, named aspect, those properties that crosscut the system 'objects' or 'components', reducing their dependencies. However, the development of software based on the composition of components and aspects is still in its early stages. Part of the reason for this is the lack of well-defined development processes and tools that help software developers in the use of existing component and aspect-based approaches. Therefore, the primary aim of this paper is to propose an integrated development process for deriving applications by the assembly of a set of prefabricated components and aspects. This process supports the development of Component-Aspect Model/Dynamic Aspect-Oriented Platform (CAM/DAOP) applications, where CAM/DAOP is a new model and platform based on components and aspects. Our intention is to show how, with the support of the integrated development process presented in this paper, it is possible to use CAM/DAOP as an alternative to current distributed platforms. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Malaga, Dept Lenguajes & Ciencias Comp, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Pinto, M (corresponding author), Univ Malaga, Dept Lenguajes & Ciencias Comp, E-29071 Malaga, Spain.
EM pinto@lcc.uma.es
RI Pinto, Monica/G-1891-2015; Fuentes, Lidia/M-5580-2014
OI Pinto, Monica/0000-0002-5376-742X; Fuentes, Lidia/0000-0002-5677-7156
CR ARAUJO J, 2005, P 13 IEEE REQ ENG C
   BARAIS O, 2004, P 1 INT WORKSH COORD
   Bergmans L, 2001, COMMUN ACM, V44, P51, DOI 10.1145/383845.383857
   Blevins D., 2001, Component-BasedSoftware Engineering, P589
   Boner J., 2004, PROC AOSD 2004, P5
   BRICHAU J, SURVEY ASPECT ORIENT
   Brown AW, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.714622
   Chitchyan R., 2005, SURVEY ASPECT ORIENT
   Clarke S., 2005, ASPECT ORIENTED ANAL
   CLARKE S, 2002, P 1 INT C ASP OR SOF, P113
   Colyer A., 2004, Eclipse aspectj: aspect-oriented programming with aspectj and the eclipse aspectj development tools
   DUZAN G, 2004, P 3 INT C ASP OR SOF, P22
   Elrad T, 2002, LECT NOTES COMPUT SC, V2487, P189
   France R, 2004, IEE P-SOFTW, V151, P173, DOI 10.1049/ip-sen:20040920
   Fuentes L, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P124, DOI 10.1109/EDOC.2003.1233843
   GARLAN D, 2001, SOFTWARE ARCH
   GROHER I, 2004, ASPECT ORIENTED REQU
   Grundy J, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISRE.1999.777988
   Grundy J, 2002, SOFTWARE PRACT EXPER, V32, P983, DOI 10.1002/spe.472
   Grundy J, 2000, INT J SOFTW ENG KNOW, V10, P713, DOI 10.1142/S0218194000000341
   Ho W.M., 2002, PROC 1 INT, P99
   Jacobson Ivar., 2005, ASPECT ORIENTED SOFT
   *JAV SUN MICR, 2004, J2EE 1 4 TUT
   KANDE MM, 2003, THESIS EPFL SWITZERL
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KNIESEL G, 2001, P IEEE WORKSH SOURC
   KULESZA U, 2004, P EARL ASP 2004 ASP
   Lieberherr K., 2005, ASPECT ORIENTED SOFT, P145
   LOUGHRAN N, 2005, SURVEY ASPECT ORIENT
   NIERSTRASZ O, 1995, ACM COMPUT SURV, V27, P262, DOI 10.1145/210376.210389
   *OBJ MAN GROUP, 2002, CORBA COMP MOD TUT
   OSSHER H, 2001, SOFTWARE ARCH COMPON
   Pawlak R, 2004, SOFTWARE PRACT EXPER, V34, P1119, DOI 10.1002/spe.605
   PAWLAK R, 2002, P WORKSH AO MOD UML
   Pinto M, 2005, COMPUT J, V48, P401, DOI 10.1093/comjnl/bxh083
   Pinto M, 2003, LECT NOTES COMPUT SC, V2830, P118
   Pinto M, 2001, 21ST INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P97, DOI 10.1109/CDCS.2001.918692
   PINTO M, 2001, LECT NOTES COMP SCI, V2172, P226
   Pinto M., 2002, P 1 INT C ASPECT ORI, P134
   POPOVICI A., 2002, P 1 INT C ASPECT ORI, P141
   RASHID A, 2003, P 2 INT C ASP OR SOF, P107
   RASHID A, 2005, EARLY ASPECTS ASPECT
   Stein D., 2002, P ASP OR MOD WORKSH
   Suvee D., 2003, 2nd International Conference on Aspect-Oriented Software Development, P21
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   TEKINERDOGAN B, 2003, P EARL ASP 2003 ASP
   Truyen E, 2001, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2001.919097
   Wagelaar D., 2002, P ASP OR DES WORKSH
   Wang Nanbor., 2001, COMPONENT BASED SOFT, P557
   WICHMAN JC, 1999, THESIS U TWENTE
   2004, ASPECTJ DEV TOOLS SU
   2003, ECLIPSE PLATFORM TEC
NR 52
TC 12
Z9 13
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2007
VL 37
IS 1
BP 21
EP 64
DI 10.1002/spe.744
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 126KH
UT WOS:000243511300002
DA 2024-07-18
ER

PT J
AU Liu, YT
   Liang, TY
   Shieh, CK
AF Liu, Yen-Tso
   Liang, Tyng-Yeu
   Shieh, Ce-Kuen
TI Adapting workload distribution on software DSM clusters
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed shared memory; workload distribution; memory availability;
   location policy; node combination
ID MIGRATION
AB Achieving an appropriate workload distribution is essential if user applications are to achieve a satisfactory performance on software distributed shared memory (SDSM) clusters. To address this problem, the present study develops a novel method for distributing program threads onto the individual computers of SDSM clusters. In contrast to alternative methods, the proposed approach takes account not only of processor speed and data-sharing aspects, but also memory availability, such that application performance can be enhanced through the implementation of appropriate workload distributions. In addition, when distributing the program threads, the proposed method specifically chooses only those computers that can enhance the performance of the application, rather than simply distributing the threads to all the available nodes in the cluster. This location policy makes it possible to specify the appropriate node combinations that optimize program performance while simultaneously maximizing resource utilization. The proposed method is implemented on a testbed referred to as Teamster. The experimental results demonstrate that, compared to alternative methods, the proposed approach delivers a 20-30% improvement in the performance of the chosen test applications. Importantly, it is shown that the proposed method can efficiently specify proper node combinations for the applications. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Natl Kaohsiung Univ Appl Sci, Dept Elect Engn, Kaohsiung 807, Taiwan.
   Natl Chung Kung Univ, Dept Elect Engn, Tainan 701, Taiwan.
C3 National Kaohsiung University of Science & Technology; National Cheng
   Kung University
RP Liang, TY (corresponding author), Natl Kaohsiung Univ Appl Sci, Dept Elect Engn, 415 Chien Kung Rd, Kaohsiung 807, Taiwan.
EM lty@hpds.ee.ncku.edu.tw
CR Amza C, 1996, COMPUTER, V29, P18, DOI 10.1109/2.485843
   Chang JB, 2001, FIRST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P508, DOI 10.1109/CCGRID.2001.923235
   CHANG JB, 2005, P 1 INT WORKSH INF N, P367
   DUBROVSKI A, 1998, INT J APPL SOFTWARE, V3, P167
   Freeh V. W., 1994, Proceedings of the First USENIX Symposium on Operating Systems Design and Implementation (OSDI), P201
   Friedman R, 1997, SOFTWARE PRACT EXPER, V27, P929, DOI 10.1002/(SICI)1097-024X(199708)27:8<929::AID-SPE113>3.0.CO;2-#
   Gersho A., 2003, Vector Quantization and Signal Compression
   HOLLINGSWORTH JK, 1998, P 7 INT S HIGH PERF
   Hu W., 1999, P HIGH PERF COMP NET, P463
   Hutto P. W., 1990, Proceedings. The 10th International Conference on Distributed Computing Systems (Cat. No.90CH2878-7), P302, DOI 10.1109/ICDCS.1990.89297
   IVY KL, 1988, P 1988 INT C PAR PRO, V2, P94
   KELEHER P, 1995, TR93215 U MAR DEP CO
   Lai AC, 1997, IEEE IPCCC, P152, DOI 10.1109/PCCC.1997.581502
   Liang TY, 2000, IEICE T INF SYST, VE83D, P1721
   Liang TY, 2002, PARALLEL COMPUT, V28, P893, DOI 10.1016/S0167-8191(02)00071-6
   Peris V. G. J., 1994, Performance Evaluation Review, V22, P5, DOI 10.1145/183019.183021
   Shi WS, 1999, FOURTH INTERNATIONAL SYMPOSIUM ON PARALLEL ARCHITECTURES, ALGORITHMS, AND NETWORKS (I-SPAN'99), PROCEEDINGS, P248, DOI 10.1109/ISPAN.1999.778947
   Speight E, 1997, PROCEEDINGS OF THE USENIX WINDOWS NT WORKSHOP, P95
   Thitikamol K., 2000, Proceedings 14th International Parallel and Distributed Processing Symposium. IPDPS 2000, P583, DOI 10.1109/IPDPS.2000.846038
   Thitikamol K, 1999, P IEEE, V87, P487, DOI 10.1109/5.747869
   Thitikamol K, 1999, INT CON DISTR COMP S, P324, DOI 10.1109/ICDCS.1999.776534
   Ueng JC, 1999, IEICE T INF SYST, VE82D, P1512
   Xiao L, 2002, IEEE T PARALL DISTR, V13, P223, DOI 10.1109/71.993204
   [No title captured]
   [No title captured]
NR 25
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1133
EP 1155
DI 10.1002/spe.762
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 086HN
UT WOS:000240664500003
DA 2024-07-18
ER

PT J
AU Yerramalla, S
   Fuller, E
   Cukic, B
AF Yerramalla, Sampath
   Fuller, Edgar
   Cukic, Bojan
TI A validation approach for neural network-based online adaptive systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive systems; software safety; online monitoring; neural networks;
   Lyapunov theory
ID SELF-ORGANIZING NETWORK
AB Traditional software validation methods cannot guarantee the safe behavior of online self-adaptive systems. These systems are characterized by continual adaptation to changing environmental conditions. We present a novel methodology for validating adaptive software systems based on online operational monitoring. The methodology inherits its theoretical underpinnings from the generic stability and convergence analysis of Lyapunov's theory. Lyapunov theory is well established in mathematics and control theory, but has not been used before for software validation. The presented validation technique is applied to a neural network-based online self-adaptive system, the intelligent flight control system. In this application, environmental changes include system failure modes, such as a stuck stabilator, broken aileron and/or rudder, sensor failure, etc. Our case study for validation is a specific online self-adaptive system, the intelligent flight control that utilizes dynamic cell structures' neural networks to perform online adaptation. The theoretical foundation and practicability of the presented validation technique make the presented validation approach generally applicable to other types of online adaptive systems. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Sensor Res & Dev Corp, Orono, ME 04473 USA.
   W Virginia Univ, Dept Math, Morgantown, WV 26506 USA.
   W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
C3 West Virginia University; West Virginia University
RP Yerramalla, S (corresponding author), Sensor Res & Dev Corp, 17 Godfrey Dr, Orono, ME 04473 USA.
EM y_sampath53@yahoo.com
RI Fuller, Edgar/ABC-5644-2020; Cukic, Bojan/B-8287-2009
OI Fuller, Edgar/0000-0003-4130-090X; Cukic, Bojan/0000-0001-7130-9054
CR AHRNS I, 1995, P INT C ART NEUR NET, V2, P141
   Arora A., 2000, ENCY DISTRIBUTED COM
   *BOEING CO, 1999, INT FLIGHT CONTR ADV
   BOYD MA, 2001, VALIDATION VERIFICAT
   Brogan W.L., 1985, MODERN CONTROL THEOR, Vsecond
   BRUSKE J, 1995, NEURAL COMPUT, V7, P845, DOI 10.1162/neco.1995.7.4.845
   BRUSKE J, 1995, NIPS, V7, P497
   *CMU, 2002, CMU BENCHM ARCH
   Cottrell M, 1998, NEUROCOMPUTING, V21, P119, DOI 10.1016/S0925-2312(98)00034-4
   DELGOBBO D, 2001, VALIDATING ON LINE N
   DIJKSTRA EW, 1974, COMMUN ACM, V17, P643, DOI 10.1145/361179.361202
   FAHLMAN S, 1993, CMU BENCHMARK COLLEC
   FRITZKE B, 1995, NEURAL PROCESS LETT, V2, P9, DOI 10.1007/BF02332159
   FRITZKE B, 1991, P INT JOINT C NEUR N, V2, P531
   FRITZKE B, 1996, P EUR S ART NEUR NET
   Fritzke Bernd., 1995, Advances in neural information processing systems, V7, P625
   HESKES TM, 1993, MATH FDN NEURAL NETW, P199
   Hull J, 2002, P AMER CONTR CONF, V1-6, P4789, DOI 10.1109/ACC.2002.1025416
   *I SCI RES, 2001, IFCDCSRD002UNCLASS01
   JORGENSEN CC, 1991, WORLD AUT C ISSCI
   Kessels J, 1998, MANAGE LEARN, V29, P39, DOI 10.1177/1350507698291003
   Krogh A., 1995, Advances in Neural Information Processing Systems 7, P231
   Lowry M, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P322, DOI 10.1109/ASE.1998.732690
   MACKALL D, 2002, NASACR211409
   Marsland S, 2002, NEURAL NETWORKS, V15, P1041, DOI 10.1016/S0893-6080(02)00078-3
   MARTINETZ T, 1994, NEURAL NETWORKS, V7, P507, DOI 10.1016/0893-6080(94)90109-0
   McConley MW, 1998, SIAM J CONTROL OPTIM, V36, P2176, DOI 10.1137/S0363012997320316
   NAPOLITANO M, 1999, P IEEE CONTR SYST TE, V4, P2615
   NAPOLITANO MR, 1995, J GUID CONTROL DYNAM, V18, P1280, DOI 10.2514/3.21542
   Narendra K. S., 1991, IEEE Control Systems Magazine, V11, P39, DOI 10.1109/37.103351
   Narendra K S, 1990, IEEE Trans Neural Netw, V1, P4, DOI 10.1109/72.80202
   *NASA, 1996, NASAGB17401396
   PASSINO KM, 1994, IEEE T AUTOMATIC CON, V39
   Perhinschi M., 2002, AIAA MOD SIM TECHN C
   PETERSON GE, 1966, P C SPIE SCI ARTIFIC, V2, P196
   RAZ O, 2000, VALIDATION ONLINE AR
   RIEDLAND B, 1996, ADV CONTROL SYSTEM
   Rouche N., 1997, STABILITY THEORY LIA
   SASTRY A, 1994, ADAPTIVE CONTROL STA
   SCHNEIDER M, 1993, ASS COMPUTING MACHIN, V25
   Schumann J., 2002, Proceedings of the First Workshop on Self-healing Systems, P67, DOI DOI 10.1145/582128.582141
   Sun Y, 2000, NEUROCOMPUTING, V34, P169, DOI 10.1016/S0925-2312(00)00292-7
   Theel O, 2001, INT CON DISTR COMP S, P727
   Yerramalla S, 2003, IEEE IJCNN, P2412
   Yerramalla S., 2005, THESIS W VIRGINIA U
   Yu W, 2001, IEEE T CIRCUITS-I, V48, P256, DOI 10.1109/81.904893
   Yu XH, 2002, IEEE T NEURAL NETWOR, V13, P251, DOI 10.1109/72.977323
   Zubov VI., 1957, METHODS AM LYAPUNOV
NR 48
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP-OCT
PY 2006
VL 36
IS 11-12
BP 1209
EP 1225
DI 10.1002/spe.759
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 086HN
UT WOS:000240664500007
DA 2024-07-18
ER

PT J
AU Iosevich, V
   Schuster, A
AF Iosevich, V
   Schuster, A
TI Software Distributed Shared Memory: a VIA-based implementation and
   comparison of sequential consistency with home-based lazy release
   consistency
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multithreaded DSM; VIA; SC; HLRC; consistency models
ID ARCHITECTURE; NETWORK; MYRINET
AB A Distributed Shared Memory (DSM) system provides a distributed application with a shared virtual address space. This article proposes a design for implementing the DSM communication layer on top of the Virtual Interface Architecture (VIA), an industry standard for user-level networking protocols on high-speed clusters. User-level communication protocols operate in user mode, thus removing the operating system kernel's overhead from the critical communication pass, and significantly diminishing communication overhead as a result. We analyze VIA's facilities and limitations in order to ascertain which implementation trade-offs can be best applied to our development of an efficient communication substrate optimized for DSM requirements. We then implement a multithreaded version of the Home-based Lazy Release Consistency (HLRC) protocol on top of this substrate. In addition, we compare the performance of this HLRC protocol with that of the Sequential Consistency (SC) protocol in which a MULTIVIEW (MV) memory mapping technique was used. This technique enables a fine-grained access to shared memory, while still relying on the virtual memory hardware to track memory accesses. We perform an 'apple-to-apple' comparison on the same testbed environment and benchmark suite, and investigate the effectiveness and scalability of both protocols. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Technion Israel Inst Technol, Dept Comp Sci, IL-32000 Haifa, Israel.
C3 Technion Israel Institute of Technology
RP Technion Israel Inst Technol, Dept Comp Sci, IL-32000 Haifa, Israel.
EM assaf@cs.technion.ac.il
CR Amza C, 1996, COMPUTER, V29, P18, DOI 10.1109/2.485843
   ANTONIU G, P 6 INT WORKSH HIGH
   Aumage O, 2002, PARALLEL COMPUT, V28, P607, DOI 10.1016/S0167-8191(02)00076-5
   Banikazemi M, 2001, PROC INT CONF PARAL, P167
   Begel A, 2002, CONCURR COMP-PRACT E, V14, P55, DOI 10.1002/cpe.616
   BERSHAD B, 1991, CMUCS91170 SCH COMP
   Bilas A, 2001, ACM T COMPUT SYST, V19, P1, DOI 10.1145/367742.367747
   BILAS A, 1998, IMA VOLUMES MATH ITS, V105
   BILAS A, 1998, THESIS PRINCETON U
   BODEN NJ, 1995, IEEE MICRO, V15, P29, DOI 10.1109/40.342015
   BOUGE L, 1998, IEEE PACT, P240
   COHNDAN E, 2003, LECT NOTES COMPUTER, V2790
   DUBNICKI C, 1996, P 10 INT PAR PROC S
   Dwarkadas S, 1999, FIFTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE, PROCEEDINGS, P260, DOI 10.1109/HPCA.1999.744377
   GHARACHORLOO K, 1998, 25 YEARS ISCA RETROS, P376
   *GIG INC, 1997, GIG CLAN FAM PROD
   Gillett RB, 1996, IEEE MICRO, V16, P12, DOI 10.1109/40.482307
   HEIRICH A, 1998, SERVERNET 2 RELIABLE
   HU W, 1999, P 1 WORKSH SOFTW DIS
   HU W, 2001, CLUSTER COMPUTING J, V4, P235
   HU W, P 1 WORKSH SOFTW DIS
   IFTODE L, 1996, P 8 ACM ANN S PAR AL, P277
   IFTODE L, 1998, TR58398 PRINC U COMP
   Itzkovitz A, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P215
   ITZKOVITZ A, LPCR9603 TECHN ISR
   ITZKOVITZ A, 1998, THESIS COMPUTER SCI
   KELEHER P, 1994, PROCEEDINGS OF THE WINTER 1994 USENIX CONFERENCE, P115
   KELEHER P, 1992, ACM COMP AR, V20, P13, DOI 10.1145/146628.139676
   KELEHER P, 1995, THESIS RICE U
   Keleher PJ, 1996, INT CON DISTR COMP S, P91, DOI 10.1109/ICDCS.1996.507905
   Kontothanassis L, 1997, ACM COMP AR, P157, DOI 10.1145/384286.264163
   LAMPORT L, 1979, IEEE T COMPUT, V28, P690, DOI 10.1109/TC.1979.1675439
   LI K, 1989, ACM T COMPUT SYST, V7, P321, DOI 10.1145/75104.75105
   LI K, 1988, P 1988 INT C PAR PRO, P94
   MARINO MD, 1999, P IASTED INT C PAR D
   NG MC, 1999, P 1 WORKSH SOFTW DIS
   NG MC, 2000, ICPADS, P187
   Niv N, 2001, SOFTWARE PRACT EXPER, V31, P1439, DOI 10.1002/spe.417
   RANGARAJAN M, 2000, P 4 ANN LIN SHOWC C
   RANGARAJAN M, 1999, P 8 WORKSH SCAL SHAR
   SCALES DJ, 1996, P 7 INT C ARCH SUPP, P174
   Speight E, 1998, 1998 FOURTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE, PROCEEDINGS, P312, DOI 10.1109/HPCA.1998.650570
   SPEIGHT WE, 1997, P USENIX WIND NT WOR
   STETS R, 1997, S OP SYST PRINC, P170
   Stets Robert, 2000, P 6 INT S HIGH PERF, P265
   TALMOR Y, 2003, THESIS COMPUTER SCI
   Thitikamol K, 1998, IEEE T COMPUT, V47, P414, DOI 10.1109/12.675711
   Thitikamol K, 1999, P IEEE, V87, P487, DOI 10.1109/5.747869
   WOO SC, 1995, ACM COMP AR, P24, DOI 10.1109/ISCA.1995.524546
   Zhou YY, 1996, PROCEEDINGS OF THE SECOND SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '96), P75, DOI 10.1145/248155.238763
   Zhou YY, 1997, ACM SIGPLAN NOTICES, V32, P193, DOI 10.1145/263767.263788
   1997, VIRTUAL INTERFACE AR
   [No title captured]
NR 53
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2005
VL 35
IS 8
BP 755
EP 786
DI 10.1002/spe.656
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 941NP
UT WOS:000230221800002
DA 2024-07-18
ER

PT J
AU Liu, X
   Xu, FL
AF Liu, X
   Xu, FL
TI A softerware monitor for shared-memory multiprocessor computers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE monitor; multiprocessor; operating system; scheduler; shared memory
ID PROGRAMS; SYSTEMS
AB ANIX is a multiprocessor operating system to be used in the backbone Asynchronous Transfer Mode (ATM) switches. In ANIX, memory contention by processes running on different CPUs is managed with a protocol called WWWH (when to sleep, who to sleep, where to sleep, and how to sleep). Tools are needed to test, debug, and tune the system running WWWH. This paper describes the experience and practice in design of SHMON, a performance tool that monitors the dynamic behavior of the running system. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Arkansas, Dept Syst Engn, Little Rock, AR 72204 USA.
C3 University of Arkansas System; University of Arkansas Little Rock;
   University of Arkansas Fayetteville
RP Univ Arkansas, Dept Syst Engn, Little Rock, AR 72204 USA.
EM xxliu@ualr.edu
CR BLEVINS PR, 1976, IEEE T COMPUT, V25, P713, DOI 10.1109/TC.1976.1674680
   CHANG PP, 1991, SOFTWARE PRACT EXPER, V21, P1301, DOI 10.1002/spe.4380211204
   DODD PS, 1992, SOFTWARE PRACT EXPER, V22, P863, DOI 10.1002/spe.4380221005
   DONGARRA J, 1990, J PARALLEL DISTR COM, V9, P185, DOI 10.1016/0743-7315(90)90045-Q
   Ferrari D., 1983, Measurement and Tuning of Computer Systems
   GAIT J, 1985, SOFTWARE PRACT EXPER, V15, P539, DOI 10.1002/spe.4380150603
   GOLDSZMIDT G, 1989, P ACM SIGPLAN SIGOPS, P271
   HABAN D, 1990, IEEE T SOFTWARE ENG, V16, P197, DOI 10.1109/32.44382
   Karlin A.R., 1991, ACM SIGOPS OPERATING, V25, P41
   LEBLANC TJ, 1987, IEEE T COMPUT, V36, P471, DOI 10.1109/TC.1987.1676929
   Ousterhout J. K., 1982, Proceedings of the 3rd International Conference on Distributed Computing Systems, P22
   Vahalia U., 1996, UNIX Internals: The New Frontiers
   ZAHORJAN J, 1991, IEEE T PARALL DISTR, V2, P180, DOI 10.1109/71.89064
NR 13
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2004
VL 34
IS 8
BP 757
EP 776
DI 10.1002/spe.591
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 834SS
UT WOS:000222431700003
DA 2024-07-18
ER

PT J
AU Sulistio, A
   Yeo, CS
   Buyya, R
AF Sulistio, A
   Yeo, CS
   Buyya, R
TI A taxonomy of computer-based simulations and its mapping to parallel and
   distributed systems simulation tools
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE taxonomy; simulation tools; parallel system; distributed system
ID GRIDSIM
AB In recent years, extensive research has been conducted in the area of simulation to model large complex systems and understand their behavior, especially in parallel and distributed systems. At the same time, a variety of design principles and approaches for computer-based simulation have evolved. As a result, an increasing number of simulation tools have been designed and developed. Therefore, the aim of this paper is to develop a comprehensive taxonomy for design of computer-based simulations, and apply this taxonomy to categorize and analyze various simulation tools for parallel and distributed systems. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Melbourne, Dept Comp Sci & Software Engn, Grid Comp & Distributed Syst Lab, Melbourne, Vic 3053, Australia.
C3 University of Melbourne
RP Univ Melbourne, Dept Comp Sci & Software Engn, Grid Comp & Distributed Syst Lab, ICT Bldg,111 Barry St, Melbourne, Vic 3053, Australia.
EM raj@cs.mu.oz.au
RI Yeo, Chee Shin/D-2363-2013; Buyya, Rajkumar/C-3424-2009
OI Yeo, Chee Shin/0000-0002-9965-0905; 
CR [Anonymous], P INT C PAR DISTR PR
   [Anonymous], SOFTWARE ENABLED CON
   [Anonymous], 1999, GRID BLUEPRINT NEW C
   [Anonymous], NS MANUAL
   Bagrodia R, 1998, COMPUTER, V31, P77, DOI 10.1109/2.722293
   Barker DJP, 1999, ANN MED, V31, P3, DOI 10.1080/07853890.1999.11904392
   BHATTACHARYYA SS, 2002, PTOLEMY 2 HETEROGENE
   Breslau L, 2000, COMPUTER, V33, P59, DOI 10.1109/2.841785
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1175, DOI 10.1002/cpe.710
   CASANOVA H, 2001, P 1 IEEE ACM INT S C
   Foster I, 1997, INT J SUPERCOMPUT AP, V11, P115, DOI 10.1177/109434209701100205
   HOWELL F, 1998, 1 INT C WEB BAS MOD
   Legrand A., 2003, P 3 IEEE ACM INT S C
   Rosenblum M., 1997, ACM Transactions on Modeling and Computer Simulation, V7, P78, DOI 10.1145/244804.244807
   SONG HJ, 2000, IEEE SUP SC2000 DALL
   Sulistio A, 2003, LECT NOTES COMPUT SC, V2659, P1123
   Takefusa A., 1999, Proceedings. The Eighth International Symposium on High Performance Distributed Computing (Cat. No.99TH8469), P97, DOI 10.1109/HPDC.1999.805287
   Tsay Jeffrey J., 2000, CODE GENERATION FRAM
   Zeng X, 1998, TWELFTH WORKSHOP ON PARALLEL AND DISTRIBUTED SIMULATION - PADS'98, PROCEEDINGS, P154, DOI 10.1109/PADS.1998.685281
NR 19
TC 56
Z9 66
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2004
VL 34
IS 7
BP 653
EP 673
DI 10.1002/spe.585
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825SB
UT WOS:000221777500003
DA 2024-07-18
ER

PT J
AU Chen, SC
   Gulati, S
   Hamid, S
   Huang, X
   Luo, L
   Morisseau-Leroy, N
   Powell, MD
   Zhan, CJ
   Zhang, CC
AF Chen, SC
   Gulati, S
   Hamid, S
   Huang, X
   Luo, L
   Morisseau-Leroy, N
   Powell, MD
   Zhan, CJ
   Zhang, CC
TI A Web-based distributed system for hurricane occurrence projection
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed system; hurricane statistical analysis; database
AB As an environmental phenomenon, hurricanes cause significant property damage and loss of life in coastal areas almost every year. Research concerning hurricanes and their aftermath is gaining more and more attention nowadays. This paper presents our work in designing and building a Web-based distributed software system that can be used for the statistical analysis and projection of hurricane occurrences. Firstly, our system is a large-scale system and can handle the huge amount of hurricane data and intensive computations in hurricane data analysis and projection. Secondly, it is a distributed system, which allows multiple users at different locations to access the system simultaneously and to share and exchange the data and data model. Thirdly, our system is a database-centered system where the Oracle database is employed to store and manage the large amount of hurricane data, the hurricane model and the projection results. Finally, a three-tier architecture has been adopted to make our system robust and resistant to the potential change in the lifetime of the system. This paper focuses on the three-tier system architecture, describing the design and implementation of the components at each layer. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Florida Int Univ, Sch Comp Sci, Miami, FL 33199 USA.
   NOAA, Hurricane Div, Miami, FL 33149 USA.
   Univ Miami, Cooperat Inst Marine & Atmospher Sci, Coral Gables, FL 33124 USA.
   Florida Int Univ, Dept Finance, Miami, FL 33199 USA.
   Florida Int Univ, Dept Stat, Miami, FL 33199 USA.
C3 State University System of Florida; Florida International University;
   National Oceanic Atmospheric Admin (NOAA) - USA; University of Miami;
   State University System of Florida; Florida International University;
   State University System of Florida; Florida International University
RP Florida Int Univ, Sch Comp Sci, 11200 SW 8th St,ECS 354, Miami, FL 33199 USA.
EM chens@cs.fiu.edu
RI Powell, Mark D/I-4963-2013
OI Powell, Mark D/0000-0002-4890-8945
CR KURIHARA Y, 1995, MON WEATHER REV, V123, P2791, DOI 10.1175/1520-0493(1995)123<2791:IITGHP>2.0.CO;2
   MORISSEAULEROY N, 2000, ORACLE8I JAVA COMPON
   PANDA D, ORACLE CONTAINERS J2
   Russell LR, 1971, J WATERWAYS HARBORS, V97, P139, DOI [DOI 10.1061/AWHCAR.0000056, 10.1061/AWHCAR.0000056]
   Smith E, 1999, B AM METEOROL SOC, V80, P2717, DOI 10.1175/1520-0477(1999)080<2717:AAECHA>2.0.CO;2
   Vickery PJ, 2000, J STRUCT ENG-ASCE, V126, P1222, DOI 10.1061/(ASCE)0733-9445(2000)126:10(1222)
NR 6
TC 18
Z9 19
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2004
VL 34
IS 6
BP 549
EP 571
DI 10.1002/spe.580
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 817WC
UT WOS:000221206600002
DA 2024-07-18
ER

PT J
AU Bouchenak, S
   Hagimont, D
   Krakowiak, S
   De Palma, N
   Boyer, F
AF Bouchenak, S
   Hagimont, D
   Krakowiak, S
   De Palma, N
   Boyer, F
TI Experiences implementing efficient Java thread serialization, mobility
   and persistence
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mobility; persistence; threads; type inference; dynamic deoptimization;
   JVM
ID PROCESS MIGRATION
AB Today, mobility and persistence are important aspects of distributed computing. They have many fields of use such as load balancing, fault tolerance and dynamic reconfiguration of applications. In this context, Java provides many useful mechanisms for the mobility of code via dynamic class loading, and the mobility or persistence of data via object serialization. However, Java does not provide any mechanism for the mobility/persistence of computation (i.e. threads).
   We designed and implemented a new mechanism, called Java thread serialization, that is used to build thread mobility or thread persistence. Therefore, a running Java thread can, at an arbitrary state of its execution, migrate to a remote machine where it resumes its execution, or be checkpointed on disk for possible subsequent recovery. With our services, migrating a thread is simply performed by the call of our go primitive, and checkpointing/recovering a thread is performed by the call of our store and load primitives.
   Several projects have recently addressed the issue of Java thread serialization, e.g. Sumatra, Wasp, JavaGo, Brakes, JavaGoX, Merpati. Some of them have attempted to minimize the overhead incurred by the thread serialization mechanism on thread performance, but none of them has been able to completely avoid this overhead.
   We propose a generic Java thread serialization mechanism that does not impose any performance overhead on serialized threads. This is achieved thanks to the use of type inference and dynamic deoptimization techniques. In this paper, we describe the design and implementation details of our thread serialization prototype in Sun Microsystems' JDK. We report on experiments conducted with our prototype, present a comparative performance evaluation of the main thread serialization techniques, and confirm the elimination of the performance overhead with our thread serialization mechanism. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 INRIA, French Natl Inst Res Comp Sci & Control, F-38334 Saint Ismier, France.
C3 Inria
RP INRIA, French Natl Inst Res Comp Sci & Control, 655 Ave Europe, F-38334 Saint Ismier, France.
EM sara.bouchenak@inria.fr
CR ACHARYA A., 1996, 2 INT WORKSH MOB OBJ
   ARTSY Y, 1989, COMPUTER, V22, P47, DOI 10.1109/2.35213
   Bagrodia R, 1995, IEEE PERS COMMUN, V2, P14, DOI 10.1109/98.475985
   Baker M., 1998, 1 UK WORKSH JAV HIGH
   BERSHAD BN, 1993, IEEE INT COMP C COMP
   Bouchenak S, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - TOOLS 33, PROCEEDINGS, P22, DOI 10.1109/TOOLS.2000.848748
   BOUCHENAK S, 2002, TR0261 INRIA
   BOUCHENAK S, 2001, THESIS FRENCH NATL P
   BOUCHENAK S, 2001, 6 USENIX C OBJ OR TE
   CARDINALE Y, 2001, EUR C PAR COMP EUR P
   CHESS D, 1995, TJ WATSON RES CTR WH
   CHOU TCK, 1983, IEEE T COMPUTERS, V32
   CZAJKOWSKI G, 2000, 17 ANN ACM C OBJ OR
   DECONINCK G, 1993, SURVEY CHECKPOINTING
   DORNAN A, 2000, ESSENTIAL GUIDE WIRE
   DOUGLIS F, 1991, SOFTWARE PRACT EXPER, V21, P757, DOI 10.1002/spe.4380210802
   DOUGLIS F, 1992, 3 WORKSH WORKST OP S
   Engel Joshua, 1999, PROGRAMMING JAVA VIR
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   FUNFROCKEN S, 1998, 2 INT WORKSH MOB AG
   GOSLING J, 1996, SUN MICROSYSTMES WHI
   Hagimont D, 2001, IEEE INTERNET COMPUT, V5, P36, DOI 10.1109/4236.895140
   Hélary JM, 2000, DISTRIB COMPUT, V13, P29, DOI 10.1007/s004460050003
   HERNANDEZ E, 1999, PARALLEL COMPUTING P
   HOFMEISTER C, 1993, 13 INT C DISTR COMPU
   HOLZE U, 1992, ACM SIGPLAN 92 C PRO
   HUANG Y, 1995, IEEE TECHNICAL COMMI, V7, P5
   *IBM TOKY RES LABS, 1996, AGLWORKBENCH PROGR M
   ILLMANN T, 2001, 5 IEEE INT C MOB AG
   Izatt M, 2000, CONCURRENCY-PRACT EX, V12, P667, DOI 10.1002/1096-9128(200007)12:8<667::AID-CPE504>3.0.CO;2-U
   JUL E, 1988, ACM T COMPUT SYST, V6, P109, DOI 10.1145/35037.42182
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   LITZKOW MJ, 1992, USENIX WINT C SAN FR
   Mandelbrot B., 1975, Les objets fractals: forme, hasard et dimension
   Meloan S., 1999, The Java HotSpot performance engine: An in-depth look
   Milojicic D., 1999, MOBILITY PROCESSES C
   MOSTEFAOUI A, 1996, RR2972 IRISA
   NICHOLS DA, 1987, 11 S OP SYST PRINC S
   OUEICHEK I, 1996, THESIS INPG FRANCE O
   PEINE H, 1997, 1 INT WORKSH MOB AG
   PICCO GP, 2001, LECT NOTES COMPUTER, V2240
   SAKAMOTO T, 2000, 4 2NT S MOB AG 2000
   SEKIGUCHI T, 1999, 3 INT C CORRD MOD LA
   SUEZAWA T, 2000, ACM JAVA GRANDE 2000
   SUN MICROSYSTEMS, IMPR SER PERF EXT
   *SUN MIMCR, JAV JIT COMP
   TRUYEN E., 2000, 4 INT S MOB AG 2000
   WOJCIK ZM, 1995, OPTICAL ALGORITHM RE, V19
   ZAYAR ER, 1987, 11 ACM S OP SYST PRI
   ZHU W, 2002, IEEE  4 INT C CLUST
   SUN MICROSYSTEMS IMP
NR 51
TC 7
Z9 7
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2004
VL 34
IS 4
BP 355
EP 393
DI 10.1002/spe.569
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 810IU
UT WOS:000220698800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hanson, DR
AF Hanson, DR
TI lcc.NET: Targeting the AET common intermediate language from Standard C
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE virtual machine; NET Common Intermediate Language; lcc; code generation;
   retargetable compilers
AB The core of the Microsoft.NET platform includes a new virtual machine (VM), the Common Intermediate Language, also known as MSIL. Unlike most other VMs, including the Java VM, MSIL is specifically designed to support a wide range of languages. While it is designed primarily for type-safe, object-oriented languages, it also has facilities that support both low-level languages and very high-level languages. For example, it accommodates unsafe pointer arithmetic and tail calls. This paper describes the implementation of a MSIL back end for Ice, a retargetable compiler for Standard C. C is at one end of the range of languages that MSIL intends to support and Ice is just about the simplest 'real' C compiler that is widely available. Porting Ice to MSIL thus provides a realistic test of how well MSIL supports this class of languages and provides a glimpse at its performance costs. This effort succeeded, but static initializations, function pointers, separate compilation and address arithmetic were major problem areas. These problems also suggested improvements to Ice's code-generation interface and they exposed a long-standing error in the Ice front end. Preliminary measurements suggest that programs compiled by the MSIL back end run two to three times slower than those compiled by lcc native Intel x86 back end, but the MSIL programs have some important diagnostic benefits. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Microsoft Corp, Res, Redmond, WA 98052 USA.
C3 Microsoft
RP Hanson, DR (corresponding author), Microsoft Corp, Res, 1 Microsoft Way, Redmond, WA 98052 USA.
EM drh@microsoft.com
CR *ECMA INT, 2001, EDMA335
   ELLIS JR, 1993, CSL934 PARC XER
   Fraser Christopher W., 1995, A retargetable C compiler: Design and implementation
   FRASER CW, 1982, SOFTWARE PRACT EXPER, V12, P351, DOI 10.1002/spe.4380120407
   FRASER CW, MSRTR200164 MICR RES
   Gough John., 2002, Compiling for the .NET Common Language Runtime (CLR)
   Gunnerson Eric., 2001, PROGRAMMERS INTRO C, V2nd
   Hanson DR, 1999, SOFTWARE PRACT EXPER, V29, P417, DOI 10.1002/(SICI)1097-024X(19990425)29:5<417::AID-SPE241>3.0.CO;2-F
   KAHAN W, 1988, ACM 1998 WORKSH JAV
   Lidin S., 2002, INSIDE MICROSOFT NET
   LINDHOLM T, 1990, JAVA VIRTUAL MACHINE
   Newey M. C., 1972, Software - Practice and Experience, V2, P107, DOI 10.1002/spe.4380020203
   Platt D.S., 2002, INTRO MICROSOFT NET, VSecond
   STEEL TB, 1961, P W JOINT IRE AIEE A, P371
NR 14
TC 1
Z9 1
U1 0
U2 0
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2004
VL 34
IS 3
BP 265
EP 286
DI 10.1002/spe.563
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 800DQ
UT WOS:000220009500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Spivey, JM
AF Spivey, JM
TI Fast, accurate call graph profiling
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE call graph profiling
AB Existing methods for call graph profiling, such as that used by gprof, deal badly with programs that have shared subroutines, mutual recursion, higher-order functions, or dynamic method binding. This article discusses a way of improving the accuracy of a call graph profile by collecting more information during execution, without significantly increasing the overhead of profiling. The method is based on keeping track of a context, consisting of the set of subroutines that are active at a particular moment during execution, together with the calling arcs between these subroutines. The profiler records the time spent in each context during execution of the program, and thus obtains an accurate measurement of the total time during which each subroutine was active. By recording arc information for only the most recent activation of each subroutine, it is possible to arrange that even recursive programs give rise to a finite number of these contexts, and in typical real programs, the number of distinct contexts remains manageably small. The data can be collected efficiently during execution by constructing a finite-state machine whose states correspond to contexts, so that when a context is entered for a second or subsequent time, only a single access of a hash table is needed to update the state of the profiling monitor. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
C3 University of Oxford
RP Univ Oxford, Comp Lab, Wolfson Bldg,Parks Rd, Oxford OX1 3QD, England.
EM mike@comlab.ox.ac.uk
CR Ammons Glenn, 1997, P ACM SIGPLAN 97 C P, P85, DOI [10.1145/258915, DOI 10.1145/258915]
   BURROWS M, 2000, 166 COMP SYST RES CT
   CONWAY TC, 2001, DEEP PROFILING ENG P
   FENLASON J, 2000, BNU GPROF GNU PROFIL
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   GRAHAM SL, 1983, SOFTWARE PRACT EXPER, V13, P671, DOI 10.1002/spe.4380130803
   Jarvis, 1998, J FUNCTIONAL PROGRAM, V8, P201
   JARVIS SA, 1996, THESIS U DURHAM
   Larus J. R., 1999, SIGPLAN Notices, V34, P259, DOI 10.1145/301631.301678
   Mossenbock H., 1993, OBJECT ORIENTED PROG
   PONDER C, 1988, SOFTWARE PRACT EXPER, V18, P459, DOI 10.1002/spe.4380180506
   Reiser M., 1992, Programming in Oberon: steps beyond Pascal and Modula
   Sansom PM, 1997, ACM T PROGR LANG SYS, V19, P334, DOI 10.1145/244795.244802
   SPIVEY JM, 1995, INTRO LOGIC PROGRAMM
   SPIVEY JM, OXFORD OBERON 2 COMP
NR 15
TC 46
Z9 62
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2004
VL 34
IS 3
BP 249
EP 264
DI 10.1002/spe.562
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 800DQ
UT WOS:000220009500002
DA 2024-07-18
ER

PT J
AU Sánchez-Segura, MI
   Cuadrado, JJ
   de Antonio, A
   de Amescua, A
   García, L
AF Sánchez-Segura, MI
   Cuadrado, JJ
   de Antonio, A
   de Amescua, A
   García, L
TI Adapting traditional software processes to virtual environments
   development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE virtual environments; software engineering; development methods;
   object-oriented methodologies; virtual worlds development, process
   models
AB Virtual environments (VEs) are special kinds of interactive systems currently used in many fields such as education, training and medicine. However, as VE development is relatively recent, there is little experience in the area. Software engineering, the discipline which assures quality software, has not been successfully applied to date. In developing VEs, the object-oriented software engineering paradigm is the most suitable even though principles and techniques are insufficient. In this paper, we will demonstrate this inadequacy through the development of two different VEs, identify the processes to be improved, offer a set of guidelines to improve them (coined SENDA), and present the results obtained with SENDA. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Carlos III Madrid, Escuela Politecn Super, Dept Informat, Dept Comp Sci, Madrid 28911, Spain.
   Univ Politecn Madrid, Fac Comp Sci, Boadilla Del Monte 28660, Madrid, Spain.
C3 Universidad Carlos III de Madrid; Universidad Politecnica de Madrid
EM misanche@inf.uc3m.es
RI de Antonio, Angélica/B-2584-2009
OI de Antonio, Angélica/0000-0002-8936-9095; Amescua,
   Antonio/0000-0003-4355-6896; SANCHEZ-SEGURA,
   MARIA-ISABEL/0000-0002-2339-7851
CR [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   BERENGUER X, 1997, MAGAZINE FORMATS
   BRICKEN M, 1990, R902 U WASH HUM INT
   Brown JR, 1999, IEEE COMPUT GRAPH, V19, P70, DOI 10.1109/38.799742
   BRUCKMAN A, 1997, THESIS MIT
   DAMER B, 1996, ACM INTERACTIONS SEP, P27
   Damer Bruce., 1998, AVATARS EXPLORING BU
   de Oliveira MFD, 1998, COMPUTER GRAPHICS INTERNATIONAL, PROCEEDINGS, P287, DOI 10.1109/CGI.1998.694280
   DONATH J, 1997, THESIS MIT
   Fencott C., 1999, WORKSH US CTR DES IM
   FETCKE T, 1997, SOFTWARE ENG
   Gabbard JL, 1999, IEEE COMPUT GRAPH, V19, P51, DOI 10.1109/38.799740
   HALLER M, 2001, INT WORKSH STRUCT DE
   *IEEE COMP SOC, 1991, 10741991 IEEE
   *ISO IEC, 1995, 122071995 ISOIEC
   Kaur K., 1998, THESIS CITY U LONDON
   Larijani L.C., 1994, The virtual reality primer
   LARMAN C, 1998, APPL UML PATTERNS IN
   Pressman R.S., 2000, SOFTWARE ENG PRACTIT
   ROEHL B, SPECIFICATION STANDA
   ROMERO S, 2001, INT WORKSH STRUCT DE
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SANCHEZSEGURA MI, 2001, THESIS TU MADRID SPA
NR 23
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2003
VL 33
IS 11
BP 1051
EP 1080
DI 10.1002/spe.538
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715LU
UT WOS:000184974300003
DA 2024-07-18
ER

PT J
AU Pu, YL
   Li, ZY
   Yu, J
   Lu, L
   Guo, BL
AF Pu, Yonglin
   Li, Ziyang
   Yu, Jiong
   Lu, Liang
   Guo, Binglei
TI An elastic framework construction method based on task migration in edge
   computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE edge computing; performance bottleneck; resilient framework; task
   migration
ID RESOURCE-ALLOCATION
AB Edge computing (EC) serves as an effective technology, empowering end-users to attain high bandwidth and low latency by offloading tasks with high computational demands from mobile devices to edge servers. However, a major challenge arises when the processing load fluctuates continuously, leading to a performance bottleneck due to the inability to rescale edge node (EN) resources. To address this problem, the approach of task migration is introduced, and EN load prediction model, the resource constrained model, optimal communication overhead model, optimal task migration model, and energy consumption model are built to form a theoretical foundation from which to propose a task migration based resilient framework construction method in EC. With the aid of the domino effect and the combined effect of task migration, a dynamic node-growing algorithm (DNGA) and a dynamic node-shrinking algorithm (DNSA), both based on the task migration strategy, are proposed. Specifically, the DNGA smoothly expands the EN scale when the processing load increases, while the DNSA shrinks the EN scale when the processing load decreases. The experimental results show that for standard benchmarks deployed on an elastic framework, the proposed method realizes a smooth scaling mechanism in the EC, which reduces the latency and improves the reliability of data processing.
C1 [Pu, Yonglin] Nanjing Univ Informat Sci & Technol, Sch Software, Nanjing, Peoples R China.
   [Li, Ziyang; Yu, Jiong] Xinjiang Univ, Sch Software, Urumqi, Peoples R China.
   [Lu, Liang] Civil Aviat Univ China, Coll Comp Sci & Technol, Tianjin, Peoples R China.
   [Guo, Binglei] Hubei Univ Arts & Sci, Sch Comp Engn, Xiangyang, Peoples R China.
C3 Nanjing University of Information Science & Technology; Xinjiang
   University; Civil Aviation University of China; Hubei University of Arts
   & Science
RP Lu, L (corresponding author), Civil Aviat Univ China, Coll Comp Sci & Technol, Tianjin, Peoples R China.
EM l_lu@cauc.edu.cn
RI Lu, Liang/KCK-7148-2024
OI Lu, Liang/0000-0003-1154-1892
FU National Natural Science Foundation of China; Key R&D projects in
   Xinjiang Uygur Autonomous Region [2022295358]; Natural Science
   Foundation of the Jiangsu Higher Education Institutions [23KJB520026];
   Natural Science Foundation of Xinjiang Uygur Autonomous Region
   [2022D01C56]; Scientific Research Program of Tianjin Municipal Education
   Commission [2021KJ046];  [62262064]
FX This research is supported in part by the National Natural Science
   Foundation of China under grant no. 62262064 and the Key R&D projects in
   Xinjiang Uygur Autonomous Region No. 2022295358. Besides, this work is
   also supported by the Natural Science Foundation of the Jiangsu Higher
   Education Institutions No. 23KJB520026, the Natural Science Foundation
   of Xinjiang Uygur Autonomous Region No. 2022D01C56 and the Scientific
   Research Program of Tianjin Municipal Education Commission No.
   2021KJ046.
CR Aral A, 2018, IEEE T NETW SERV MAN, V15, P516, DOI 10.1109/TNSM.2017.2788945
   Cao K, 2021, IEEE T IND INFORM, V17, P494, DOI 10.1109/TII.2020.2975897
   Cao YJ., 2020, Adversarial attacks and detection on reinforcement learning-based interactive rec-ommender systems. Proceedings of 43rd Annual ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR)
   Chen BQ, 2022, IEEE T SERV COMPUT, V15, P819, DOI 10.1109/TSC.2019.2962469
   Chen MG, 2021, IEEE T MOBILE COMPUT, V20, P2025, DOI 10.1109/TMC.2020.2973993
   Chen XH., 2019, Joint computation offloading and resource allocation for min-max fairness in MEC systems. Proceedings of the 2019 IEEE Wireless Communications and Networking Conference (WCNC)
   Chen X, 2022, IEEE T PARALL DISTR, V33, P683, DOI 10.1109/TPDS.2021.3100298
   Cheng L, 2022, NEURAL COMPUT APPL, V34, P18579, DOI 10.1007/s00521-022-07477-x
   Cui GM, 2023, IEEE T PARALL DISTR, V34, P2155, DOI 10.1109/TPDS.2023.3277619
   Cui GM, 2023, IEEE T MOBILE COMPUT, V22, P2295, DOI 10.1109/TMC.2021.3112941
   Cui GM, 2023, IEEE T MOBILE COMPUT, V22, P1449, DOI 10.1109/TMC.2021.3108581
   Cui LZ, 2022, IEEE INTERNET THINGS, V9, P14151, DOI 10.1109/JIOT.2020.3014370
   Dai YY, 2018, IEEE T VEH TECHNOL, V67, P12313, DOI 10.1109/TVT.2018.2876804
   de Oliveira SM, 2021, COMPUT OPER RES, V135, DOI 10.1016/j.cor.2021.105359
   Gao GJ, 2017, IEEE T PARALL DISTR, V28, P3584, DOI 10.1109/TPDS.2017.2720741
   Gong WW., 2022, DAWAR: diversity-aware web APIs recommendation for mashup creation based on correlation graph. Proceedings of the 45th International ACM SIGIR Conference on Research and De-Velopment in Information Retrieval(SIGIR)
   Guo K, 2020, IEEE T COMMUN, V68, P7746, DOI 10.1109/TCOMM.2020.3024577
   He Q., 2023, EDIndex: enabling fast data queries in edge storage systems. Proceedings of the 46th International ACM SIGIR Conference on Research and Development in Information Retrieval(SIGIR), P675
   Hu B, 2022, IEEE T CLOUD COMPUT, V10, P662, DOI 10.1109/TCC.2019.2956498
   Huang L, 2020, IEEE T MOBILE COMPUT, V19, P2581, DOI 10.1109/TMC.2019.2928811
   Huang PQ, 2020, IEEE T CYBERNETICS, V50, P4228, DOI 10.1109/TCYB.2019.2916728
   Islam MT, 2022, IEEE T PARALL DISTR, V33, P1695, DOI 10.1109/TPDS.2021.3124670
   [李智勇 Li Zhiyong], 2021, [计算机学报, Chinese Journal of Computers], V44, P963
   Liu T, 2022, IEEE T MOBILE COMPUT, V21, P2687, DOI 10.1109/TMC.2020.3045471
   Lyu XC, 2018, IEEE NETWORK, V32, P54, DOI 10.1109/MNET.2018.1700101
   Mahenge MPJ, 2022, DIGIT COMMUN NETW, V8, P1048, DOI 10.1016/j.dcan.2022.04.001
   Mo R., 2021, Computation offloading and resource management for energy and cost trade-offs with deep reinforcement learning in mobile edge computing. Service-Oriented Computing: 19th International Conference (ICSOC)
   Pu Yong-Lin, 2021, Journal of Software, V32, P2557, DOI 10.13328/j.cnki.jos.006074
   Qi LY, 2023, IEEE T KNOWL DATA EN, V35, P5444, DOI 10.1109/TKDE.2022.3168611
   Ren JK, 2018, IEEE T WIREL COMMUN, V17, P5506, DOI 10.1109/TWC.2018.2845360
   Ren Q, 2022, DIGIT COMMUN NETW, V8, P825, DOI 10.1016/j.dcan.2021.09.012
   Seagate, 2023, Data age 2025
   Tian SJ, 2023, IEEE T SERV COMPUT, V16, P684, DOI 10.1109/TSC.2021.3128603
   Wang D, 2022, DIGIT COMMUN NETW, V8, P625, DOI 10.1016/j.dcan.2022.05.025
   Wang F., 2019, Optimal resource allocation for wireless powered mobile edge computing with dynamic task arrivals. Proceedings of the 2019 IEEE Int'l Conference on Communications (ICC)
   Wang MZ, 2022, DIGIT COMMUN NETW, V8, P955, DOI 10.1016/j.dcan.2022.08.005
   Wu SQ, 2023, IEEE T COMPUT SOC SY, V10, P771, DOI 10.1109/TCSS.2022.3168595
   Xu X., 2019, Load-aware edge server placement for mobile edge computing in 5G networks. Service-Oriented Computing: 17th International Conference (ICSOC)
   Xu XL, 2023, IEEE COMMUN MAG, V61, P36, DOI 10.1109/MCOM.002.2200424
   Xu XL, 2023, IEEE T IND INFORM, V19, P5485, DOI 10.1109/TII.2022.3190380
   Xu XL, 2022, IEEE T FUZZY SYST, V30, P4593, DOI 10.1109/TFUZZ.2022.3158000
   Xu XL, 2021, SOFTWARE PRACT EXPER, V51, P2015, DOI 10.1002/spe.2749
   Xue M, 2022, IEEE T SERV COMPUT, V15, P640, DOI 10.1109/TSC.2021.3116597
   Yang HY, 2021, COMPUT NETW, V193, DOI 10.1016/j.comnet.2021.108102
   Yang YH, 2022, DIGIT COMMUN NETW, V8, P498, DOI 10.1016/j.dcan.2021.11.004
   Yuan HT, 2021, IEEE T SERV COMPUT, V14, P1558, DOI 10.1109/TSC.2018.2878561
   Zhang Fei-Fei, 2023, Journal of Software, V34, P5737, DOI 10.13328/j.cnki.jos.006797
   Zhang JL, 2021, IEEE T IND INFORM, V17, P5012, DOI 10.1109/TII.2020.3007792
   Zhang SA, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3285029
   Zhou H, 2022, IEEE INTERNET THINGS, V9, P1517, DOI 10.1109/JIOT.2021.3091142
   Zou Sai, 2022, IEEE Internet of Things Magazine, V5, P128, DOI 10.1109/IOTM.001.2100226
NR 51
TC 1
Z9 1
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 DEC 13
PY 2023
DI 10.1002/spe.3302
EA DEC 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI8E5
UT WOS:001124706800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rak-amnouykit, I
   Milanova, A
   Baudart, G
   Hirzel, M
   Dolby, J
AF Rak-amnouykit, Ingkarat
   Milanova, Ana
   Baudart, Guillaume
   Hirzel, Martin
   Dolby, Julian
TI Principled and practical static analysis for Python: Weakest
   precondition inference of hyperparameter constraints
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE interprocedural analysis; machine learning libraries; Python
ID REFERENCE IMMUTABILITY; CHECKING
AB Application programming interfaces often have correctness constraints that cut across multiple arguments. Violating these constraints causes the underlying code to raise runtime exceptions, but at the interface level, these are usually documented at most informally. This article presents novel principled static analysis and the first interprocedural weakest-precondition analysis for Python to extract inter-argument constraints. The analysis is mostly static, but to make it tractable for typical Python idioms, it selectively switches to the concrete domain for some cases. This article focuses on the important case where the interfaces are machine-learning operators and their arguments are hyperparameters, rife with constraints. We extracted hyperparameter constraints for 429 functions and operators from 11 libraries and found real bugs. We used a methodology to obtain ground truth for 181 operators from 8 machine-learning libraries; the analysis achieved high precision and recall for them. Our technique advances static analysis for Python and is a step towards safer and more robust machine learning.
C1 [Rak-amnouykit, Ingkarat; Milanova, Ana] Rensselaer Polytech Inst, 110 8th St, Troy, NY 12180 USA.
   [Baudart, Guillaume] PSL Univ, INRIA, CNRS, Ecole Normale Super,DI ENS, Paris, France.
   [Hirzel, Martin; Dolby, Julian] IBM Res, Armonk, NY USA.
C3 Rensselaer Polytechnic Institute; Inria; Universite PSL; Ecole Normale
   Superieure (ENS); Centre National de la Recherche Scientifique (CNRS);
   International Business Machines (IBM)
RP Rak-amnouykit, I (corresponding author), Rensselaer Polytech Inst, 110 8th St, Troy, NY 12180 USA.
EM rakami@rpi.edu
OI Hirzel, Martin/0009-0006-8840-6065; Dolby, Julian/0000-0002-6658-2678;
   Rak-amnouykit, Ingkarat/0000-0001-7087-9282
FU National Science Foundation [1814898]
FX National Science Foundation, Grant/Award Number: #1814898
CR Allamanis M, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P91, DOI 10.1145/3385412.3385997
   Ball T, 2015, NATO SCI PEAC SECUR, V40, P26, DOI 10.3233/978-1-61499-495-4-26
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Baudart G., 2021, Advances in Neural Information Processing Systems (NeurIPS)
   Baudart G., ARXIV
   Baudart G., LALE CONSISTENT AUTO
   Bavishi R, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360594
   Behnel S, 2011, COMPUT SCI ENG, V13, P31, DOI 10.1109/MCSE.2010.118
   Blasi A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P242, DOI 10.1145/3213846.3213872
   Breck E., C SYST MACH LEARN SY
   Buitinck L., API DESIGN MACHINE L
   Chen YF, 2021, LECT NOTES COMPUT SC, V13008, P38, DOI 10.1007/978-3-030-89051-3_3
   Chlipala A, 2010, ACM SIGPLAN NOTICES, V45, P122, DOI 10.1145/1809028.1806612
   Definite MA., 2018, EUR C OBJ OR PROGR E, p25:1
   Dolby J, 2018, MAPL'18: PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P1, DOI 10.1145/3211346.3211349
   Feurer M, 2015, ADV NEUR IN, V28
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Habib A, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P620, DOI 10.1145/3460319.3464796
   Hassan M, 2018, LECT NOTES COMPUT SC, V10982, P12, DOI 10.1007/978-3-319-96142-2_2
   Hirzel M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216379
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Huang W, 2012, ACM SIGPLAN NOTICES, V47, P879, DOI 10.1145/2398857.2384680
   Kazerounian M, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P966, DOI 10.1145/3314221.3314630
   Komer B., 2014, ICML WORKSHOP AUTOML, P32, DOI [DOI 10.25080/MAJORA-14BD3278-006, 10.25080/issn.2575-9752]
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Maia E., WORKSH DYN LANG APPL
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Monat R., 2020, EUR C OBJ OR PROGR E
   Monat R, 2021, LECT NOTES COMPUT SC, V12913, P323, DOI 10.1007/978-3-030-88806-0_16
   O'Hearn P., 2001, Computer Science Logic. 15th International Workshop, CSL 2001 10th Annual Conference of the EACSL. Proceedings (Lecture Notes in Computer Science Vol.2142), P1
   OpenAPI Initiative, OPENAPI SPEC FKA SWA
   Pezoa F, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P263, DOI 10.1145/2872427.2883029
   Pradel M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P209, DOI 10.1145/3368089.3409715
   Rak-amnouykit I., ICLR WORKSH SEC SAF
   Rak-amnouykit I, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P580, DOI 10.1145/3533767.3534400
   Rak-amnouykit I, 2020, DLS '2020: PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON DYNAMIC LANGUAGES, P57, DOI 10.1145/3426422.3426981
   Rogowski S., CODE2FLOW
   Rustan K, 2005, INFORM PROCESS LETT, V93, P281, DOI 10.1016/j.ipl.2004.10.015
   Salis V, 2021, PROC INT CONF SOFTW, P1646, DOI 10.1109/ICSE43902.2021.00146
   Tschantz MS, 2005, ACM SIGPLAN NOTICES, V40, P211, DOI 10.1145/1103845.1094828
   Xu ZG, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P607, DOI 10.1145/2950290.2950343
NR 41
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2024
VL 54
IS 3
BP 363
EP 393
DI 10.1002/spe.3279
EA NOV 2023
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HI4X1
UT WOS:001108276600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Correia, ARS
   Iyoda, JM
   Mota, AC
AF Correia, Alexandre R. S.
   Iyoda, Juliano M.
   Mota, Alexandre C.
TI The effect of distance metrics in a general purpose synthesizer of
   imperative programs: A second empirical study using enlarged search
   spaces
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distance metric; fitness function; genetic algorithm; program synthesis
AB ContextProgram synthesis is the task of automatically finding a program that satisfies the user intention. In previous work, we developed APS-GA, a program synthesizer based on a genetic algorithm. As genetic algorithms depend on a fitness function, so does APS-GA. Researchers argue that different distance metrics for a fitness function may reveal behavioral differences in the genetic algorithm. More recently, we presented initial evidence that APS-GA was not affected by different distance metrics for its fitness function. However, that study was carried out on a medium-sized scale.ObjectiveIn order to investigate our previous study on a larger scale, we extended our experiment to replicate it on a search space that is up to 6500 times larger than our previous work, and we ran it with a synthesis time that was at least 20 times longer. We have chosen the same five distance metrics as fitness functions to check whether they affect the synthesis task of five integer domain imperative toy programs.MethodA hypothesis test was proposed and experiments were conducted to observe the number of calls to the fitness function (ncalls$$ {n}_{\mathrm{calls}} $$) and to measure the synthesis time (tsyn$$ {t}_{\mathrm{syn}} $$).ResultsBy considering a confidence level of 95% (with alpha=0.05$$ \alpha =0.05 $$), we found out that there were no significant differences in both ncalls$$ {n}_{\mathrm{calls}} $$ and tsyn$$ {t}_{\mathrm{syn}} $$.ConclusionWith these results, our extended replication study suggests that the discrete distance metric constitutes the best choice for APS-GA as it guides the search with the same effectiveness as the other metrics, and is cheaper to compute.
C1 [Correia, Alexandre R. S.] Inst Fed Sertao Pernambucano, Coordenacao Informat, Petrolina, PE, Brazil.
   [Iyoda, Juliano M.; Mota, Alexandre C.] Univ Fed Pernambuco, Ctr Informat, Petrolina, PE, Brazil.
   [Correia, Alexandre R. S.] Inst Fed Sertao Pernambucano, Coordenacao Informat, BR-56316686 Petrolina, PE, Brazil.
C3 Instituto Federal do Sertao Pernambucano; Universidade Federal de
   Pernambuco; Instituto Federal do Sertao Pernambucano
RP Correia, ARS (corresponding author), Inst Fed Sertao Pernambucano, Coordenacao Informat, BR-56316686 Petrolina, PE, Brazil.
EM alexandre.correia@ifsertao-pe.edu.br
FU Alexandre Mota would like to thank CNPq for supporting his work under
   grant number 307824/2021-7. [307824/2021-7]; CNPq
FX Alexandre Mota would like to thank CNPq for supporting his work under
   grant number 307824/2021-7.
CR Austin Jacob, 2021, PROGRAM SYNTHESIS LA
   Balog Matej, 2016, DeepCoder: Learning to Write Programs
   Barke S, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428295
   Borji A., 2023, A categorical archive of chatgpt failures
   Brown T., 2020, Advances in Neural Information Processing Systems, V33, P1877, DOI [DOI 10.48550/ARXIV.2005.14165, DOI 10.5555/3495724.3495883]
   Cha S.-H., 2007, Int. J. Math. Models Methods Appl. Sci., V1, P300
   Chen M., 2021, arXiv
   Chen YJ, 2020, LECT NOTES COMPUT SC, V12225, P587, DOI 10.1007/978-3-030-53291-8_30
   Correia A, 2021, SCI COMPUT PROGRAM, V201, DOI 10.1016/j.scico.2020.102536
   Correia A, 2020, INFORM PROCESS LETT, V154, DOI 10.1016/j.ipl.2019.105866
   Correia ARS, 2022, SOFTWARE PRACT EXPER, V52, P1294, DOI 10.1002/spe.3054
   Devlin J, 2017, PR MACH LEARN RES, V70
   Fast E., 2010, Conference on Genetic and Evolutionary Computation, P965
   Floridi L, 2020, MIND MACH, V30, P681, DOI 10.1007/s11023-020-09548-1
   Forstenlechner S, 2017, LECT NOTES COMPUT SC, V10196, P262, DOI 10.1007/978-3-319-55696-3_17
   Gaudesi M, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P925
   Gaunt A.L., 2016, TERPRET PROBABILISTI
   Gulwani S, 2017, LECT NOTES COMPUT SC, V10695, P3, DOI 10.1007/978-3-319-71237-6_1
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heumann C., 2016, Introduction to statistics and data analysis, DOI DOI 10.1007/978-3-319-46162-5
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jain N., 2022, P 44 INT C SOFTW ENG
   Lee W, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P436, DOI [10.1145/3192366.3192410, 10.1145/3296979.3192410]
   Loy M., 2020, LEARNING JAVA INTRO
   Mandal S., 2019, LEARNING FITNESS FUN
   Milicevic A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P609, DOI [10.1109/ICSE.2015.77, 10.1007/s10703-016-0267-2]
   Nelson AL, 2009, ROBOT AUTON SYST, V57, P345, DOI 10.1016/j.robot.2008.09.009
   Nijkamp E., 2022, A conversational paradigm for program synthesis
   Parisotto Emilio, 2016, ARXIV161101855
   Reynolds A, 2019, LECT NOTES COMPUT SC, V11562, P74, DOI 10.1007/978-3-030-25543-5_5
   Schkufza E, 2013, ACM SIGPLAN NOTICES, V48, P305, DOI 10.1145/2499368.2451150
   Sobania D., 2023, An analysis of the automatic bug fixing performance of chatgpt
   Sobania D, 2022, GENET PROGRAM EVOL M, V23, P253, DOI 10.1007/s10710-021-09425-5
   Solar-Lezama A, 2009, LECT NOTES COMPUT SC, V5904, P4, DOI 10.1007/978-3-642-10672-9_3
   Spector L, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1689
   Tamkin Alex, 2021, Understanding the capabilities, limitations, and societal impact of large language models
   Torlak Emina, 2013, P 2013 ACM INT S NEW, P135, DOI DOI 10.1145/2509578.2509586
   White DR, 2013, GENET PROGRAM EVOL M, V14, P3, DOI 10.1007/s10710-012-9177-2
   Zohar A, 2018, ADV NEUR IN, V31
NR 40
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2024
VL 54
IS 3
BP 528
EP 540
DI 10.1002/spe.3286
EA NOV 2023
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HI4X1
UT WOS:001101719500001
DA 2024-07-18
ER

PT J
AU Cai, CH
   Sun, J
   Dobbie, G
AF Cai, Cheng-Hao
   Sun, Jing
   Dobbie, Gillian
TI Automatic refactoring of conditions and substitutions for B state
   transition models
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automatic refactoring; B method; formal specification; model checking
ID SEMANTICS; PROGRAMS
AB The automation of programming, which lies at the intersection of software engineering and artificial intelligence, enables machines to automatically generate programs that satisfy given requirements. In the context of B formal design modeling, one of the challenges is the refactoring of substitutions in design specifications, which often uses state transitions to describe how program or system statuses change during execution. This paper proposes a condition and substitution refactoring algorithm for the B formal specification language. The aim of the work is to automatically derive B operational predicates based on given transitions. The work has been extremely useful to machine-driven formal design model repair as well as automated design specification generation. Given a set of state transitions, common relations of their state variables can be discovered and clustered into a number of classes. These relations can be further used to synthesize substitutions that derive new states from existing states. To restrict application domains of the synthesized substitutions, conditions that guard these substitutions are generated using first-order logic. We have implemented the proposed algorithm as an extension to the ProB model checker. Experiments were conducted based on the B model public dataset. The evaluation results demonstrated that our solution is able to synthesize conditions and substitutions for various sets of state transitions in a wide range of B models.
C1 [Cai, Cheng-Hao; Sun, Jing; Dobbie, Gillian] Univ Auckland, Sch Comp Sci, Auckland, New Zealand.
   [Cai, Cheng-Hao] Monash Univ, Suzhou Ind Pk Monash Res Inst Sci & Technol, Suzhou, Peoples R China.
   [Cai, Cheng-Hao] Univ Auckland, Sch Comp Sci, 38 Princes St, Auckland 1142, New Zealand.
C3 University of Auckland; University of Auckland
RP Cai, CH (corresponding author), Univ Auckland, Sch Comp Sci, 38 Princes St, Auckland 1142, New Zealand.
EM cheng-hao.cai@monash.edu
OI Cai, Cheng-Hao/0000-0001-6815-9091
FU Open access publishing facilitated by The University of Auckland, as
   part of the Wiley - The University of Auckland agreement via the Council
   of Australian University Librarians.; Council of Australian University
   Librarians
FX Open access publishing facilitated by The University of Auckland, as
   part of the Wiley - The University of Auckland agreement via the Council
   of Australian University Librarians.
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Alsaadi B, 2022, ARTIF INTELL REV, V55, P5485, DOI 10.1007/s10462-021-10132-x
   Behm P., 1999, Meteor: a successful application of B in a large project. Paper presented at: FM'99-Formal Methods, World Congress on Formal Methods in the Development of Computing Systems, Toulouse
   Benai''ssa N., 2016, The PERF approach for formal verification. Paper presented at: Reliability, Safety, and Security of Railway Systems. Modelling, Analysis, Verification, and Certification-First International Conference, RSSRail 2016, Paris
   BIERMANN AW, 1978, IEEE T SYST MAN CYB, V8, P585, DOI 10.1109/TSMC.1978.4310035
   Bosnjak Matko, 2017, PR MACH LEARN RES
   Cai C., 2019, Achieving abstract machine reachability with learning-based model fulfilment. Paper presented at: 26th Asia-Pacific Software Engineering Conference (APSEC), Putrajaya
   Cai CH, 2019, AUTOMAT SOFTW ENG, V26, P653, DOI 10.1007/s10515-019-00264-4
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   ClearSy Systems Engineering, 2020, User Manual of Atelier B 4.0
   ClearSy Systems Engineering, 2020, ComenC
   Correia ARS, 2022, SOFTWARE PRACT EXPER, V52, P1294, DOI 10.1002/spe.3054
   Cousot P, 2002, THEOR COMPUT SCI, V277, P47, DOI 10.1016/S0304-3975(00)00313-3
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Flener P, 1999, J LOGIC PROGRAM, V41, P141, DOI 10.1016/S0743-1066(99)00028-X
   Flener P, 2008, ARTIF INTELL REV, V29, P45, DOI 10.1007/s10462-009-9108-7
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gouda SK, 2022, SOFTWARE PRACT EXPER, V52, P1826, DOI 10.1002/spe.3092
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Guo SK, 2023, SOFTWARE PRACT EXPER, V53, P347, DOI 10.1002/spe.3151
   Huth Michael, 2004, Logic in Computer Science: Modelling and reasoning about systems
   Janicki R, 2001, SCI COMPUT PROGRAM, V39, P189, DOI 10.1016/S0167-6423(00)00004-6
   Jenkins C., 2014, PyDotPlus
   Kitzelmann E., 2009, Inductive programming: a survey of program synthesis techniques. Paper presented at: Approaches and Applications of Inductive Programming, Third International Workshop, AAIP 2009, Edinburgh
   KOWALSKI R, 1971, ARTIF INTELL, V2, P227, DOI 10.1016/0004-3702(71)90012-9
   Krings S., 2016, SMT solvers for validation of B and event-B models. Paper presented at: Integrated Formal Methods-12th International Conference, IFM 2016, Reykjavik, Iceland
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Liang P., 2010, Learning programs: a hierarchical Bayesian approach. Paper presented at: the 27th International Conference on Machine Learning (ICML), Haifa
   Mahmood Y, 2022, SOFTWARE PRACT EXPER, V52, P39, DOI 10.1002/spe.3009
   Menon AK., 2013, A machine learning framework for programming by example. Paper presented at: the 30th International Conference on Machine Learning, (ICML), Atlanta, GA
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   Nipkow T., 2002, LECT NOTES COMPUTER, V2283, DOI [10.1007/3-540-45949-9, DOI 10.1007/3-540-45949-9]
   Nowozin Sebastian, 2017, INT C LEARN REPR
   OLSSON R, 1995, ARTIF INTELL, V74, P55, DOI 10.1016/0004-3702(94)00042-Y
   Schmidt J., 2016, Interactive model repair by synthesis. Paper presented at: Abstract State Machines, Alloy, B, TLA, VDM, and Z-5th International Conference, ABZ 2016, Linz
   Schmidt J., 2018, Repair and generation of formal models using synthesis. Paper presented at: Integrated Formal Methods-14th International Conference, IFM 2018, Maynooth
   Schuts MTW, 2022, SOFTWARE PRACT EXPER, V52, P1543, DOI 10.1002/spe.3082
   Shapiro EY., 1983, Algorithmic Program Debugging
   Sulskus G., 2016, Modelling complex timing requirements with refinement. Paper presented at: 17th IEEE International Conference on Information Reuse and Integration, IRI 2016, Pittsburgh, PA
   SUMMERS PD, 1977, J ACM, V24, P161, DOI 10.1145/321992.322002
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
NR 43
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2023
VL 53
IS 11
BP 2241
EP 2270
DI 10.1002/spe.3255
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U0UL3
UT WOS:001082043200007
OA hybrid
DA 2024-07-18
ER

PT J
AU Sun, CA
   Jin, H
   Wu, SY
   Fu, A
   Wang, ZY
   Chan, WK
AF Sun, Chang-ai
   Jin, Hui
   Wu, Siyi
   Fu, An
   Wang, Zuoyi
   Chan, Wing Kwong
TI Identifying metamorphic relations: A data mutation directed approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE metamorphic relation; metamorphic testing; software testing; test Oracle
ID WEB SERVICES; SOFTWARE
AB Metamorphic testing (MT) is an effective technique to alleviate the test oracle problem. The principle of MT is to detect failures by checking whether some necessary properties, commonly known as metamorphic relations (MRs), of software under test (SUT) hold among multiple executions of source and follow-up test cases. Since both the generation of follow-up test cases and test result verification depend on MRs, the identification of MRs plays a key role in MT, which is an important yet difficult task requiring deep domain knowledge of the SUT. Accordingly, techniques that can direct a tester to identify MRs effectively are desirable. In this paper, we propose mu$$ \mu $$MT, a data mutation directed approach to identifying MRs. mu$$ \mu $$MT guides a tester to identify MRs by providing a set of data mutation operators and template-style mapping rules, which not only alleviates the difficulties faced in the process of MR identification but also improves the identification effectiveness. We have further developed a tool to implement the proposed approach and conducted an empirical study to evaluate the MR identification effectiveness of mu$$ \mu $$MT and the performance of MRs identified by mu$$ \mu $$MT with respect to fault detection capability and statement coverage. The empirical results show that mu$$ \mu $$MT is able to identify MRs for numeric programs effectively, and the identified MRs have high fault detection capability and statement coverage. The work presented in this paper advances the field of MT by providing a simple yet practical approach to the MR identification problem.
C1 [Sun, Chang-ai; Jin, Hui; Wu, Siyi; Fu, An; Wang, Zuoyi] Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing, Peoples R China.
   [Chan, Wing Kwong] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
C3 University of Science & Technology Beijing; City University of Hong Kong
RP Sun, CA (corresponding author), Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing, Peoples R China.
EM casun@ustb.edu.cn
RI Chan, Wah Kheong/AGA-6636-2022
OI Chan, Wah Kheong/0000-0002-9105-5837
FU This research is supported in part by the National Natural Science
   Foundation of China (Grant nos. 62272037, 61872039, and 61370061), the
   Fundamental Research Funds for the Central Universities (Grant no.
   FRF-GF-19-B19), the Beijing Natural Science Foundat [62272037, 61872039,
   61370061]; National Natural Science Foundation of China [FRF-GF-19-B19];
   Fundamental Research Funds for the Central Universities [4162040];
   Beijing Natural Science Foundation [2016ZD74004]; Aeronautical Science
   Foundation of China [9678180]; City University of Hong Kong
FX This research is supported in part by the National Natural Science
   Foundation of China (Grant nos. 62272037, 61872039, and 61370061), the
   Fundamental Research Funds for the Central Universities (Grant no.
   FRF-GF-19-B19), the Beijing Natural Science Foundation (Grant no.
   4162040), the Aeronautical Science Foundation of China (Grant no.
   2016ZD74004), and City University of Hong Kong (Grant no. 9678180).
CR Alatawi E., 2016, P 1 INT WORKSH MET T
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Ashok NA., 2019, P 3 ACM SIGSOFT INT
   Asrafi M., 2011, P 15 INT C SEC SOFTW
   Ayerdi J., 2021, P 29 ACM JOINT EUR S
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Barus AC., 2016, P 1 INT WORKSH MET T
   Barus AC, 2016, IEEE T COMPUT, V65, P3509, DOI 10.1109/TC.2016.2547380
   Batra G., 2011, P INT C INF INT SYST
   Blasi A, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111041
   Brilliant SS., 1990, P 20 INT S FAULT TOL
   Brown J., 2018, P 51 ANN HAW INT C S
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Chang-ai Sun, 2016, International Journal of High Performance Computing and Networking, V9, P104
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Chen TY, 2016, J SYST SOFTWARE, V116, P177, DOI 10.1016/j.jss.2015.07.037
   Chen TY, 2013, IEEE T RELIAB, V62, P226, DOI 10.1109/TR.2013.2240898
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Chen TY., 2004, P 4 IBEROAMERICAN S
   Cohen J., 1988, STAT POWER ANAL BEHA
   Donaldson Alastair F., 2017, Proceedings of the ACM on Programming Languages, V1, DOI 10.1145/3133917
   Donaldson AF., 2016, P 1 INT WORKSH MET T
   Dong Guowei, 2008, Journal of Southeast University (English Edition), V24, P437
   Gao Y, 2013, I C NETWORK PROTOCOL
   Harman M., 2013, A comprehensive survey of trends in oracles for software testing
   Hierons RM, 2012, IEEE T SOFTWARE ENG, V38, P629, DOI 10.1109/TSE.2011.45
   Jiang M., 2013, P 4 INT C SOFTW ENG
   Jin L., 2009, P INT C SOFTW ENG WO
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kanewala U., 2013, P 24 IEEE INT S SOFT
   Kanewala U, 2016, SOFTW TEST VERIF REL, V26, P245, DOI 10.1002/stvr.1594
   Kuo FC., 2011, P 36 IEEE C LOC COMP
   Kwan Yong Sim, 2014, Journal of Software, V9, P298, DOI 10.4304/jsw.9.2.298-312
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P542, DOI [10.1145/2594291.2594333, 10.1145/2666356.2594333]
   Li JY, 2020, SOFTWARE PRACT EXPER, V50, P1345, DOI 10.1002/spe.2818
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mai PX., 2020, P 13 IEEE INT C SOFT
   Mayer J., 2006, P 6 INT C QUAL SOFTW
   Murphy C., 2011, P 3 WORKSH SOFTW ENG
   Murphy C., 2008, 20 INT C SOFTWARE EN, P867
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Qiu K, 2022, IEEE T SOFTWARE ENG, V48, P1001, DOI 10.1109/TSE.2020.3009698
   Shan LJ, 2009, COMPUT J, V52, P571, DOI 10.1093/comjnl/bxm043
   Sun C, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON COMMUNICATION SYSTEMS (ICCS)
   Sun CA, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3533314
   Sun CA, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111091
   Sun CA, 2020, INT J WEB GRID SERV, V16, P364, DOI 10.1504/IJWGS.2020.110945
   Sun CA, 2021, IEEE T SOFTWARE ENG, V47, P1764, DOI 10.1109/TSE.2019.2934848
   Sun CA, 2012, INT J WEB SERV RES, V9, P51, DOI 10.4018/jwsr.2012010103
   Sun CS, 2011, IEEE INT CON MULTI
   Tao Q., 2010, P 17 AS PAC SOFTW EN
   Troya J., 2018, P 40 IEEE ACM INT C
   Troya J, 2018, J SYST SOFTWARE, V136, P188, DOI 10.1016/j.jss.2017.05.043
   Wang XL, 2018, IEEE ICC
   Wu P., 2005, P 29 ANN INT COMP SO
   Xiang ZL, 2019, INFORMATION, V10, DOI 10.3390/info10120392
   Xie X., 2009, P 9 INT C QUAL SOFTW
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang Y, 2012, IEEE INT CONF CL NET
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
   Zhu H., 2020, P 2020 IEEE INT C AR
   Zhu H., 2020, P 1 IEEE ACM INT C A
   Zhu H, 2019, IEEE CONF IMAGING SY, DOI 10.1109/ist48021.2019.9010087
   Zhu H, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2022.111231
   Zhu H, 2015, 2015 SECOND INTERNATIONAL CONFERENCE ON TRUSTWORTHY SYSTEMS AND THEIR APPLICATIONS, P120, DOI 10.1109/TSA.2015.13
NR 74
TC 0
Z9 0
U1 3
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2024
VL 54
IS 3
BP 394
EP 418
DI 10.1002/spe.3280
EA OCT 2023
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HI4X1
UT WOS:001087929300001
OA Bronze
DA 2024-07-18
ER

PT J
AU Zhang, Q
   Xu, L
   Xu, BW
AF Zhang, Qiang
   Xu, Lei
   Xu, Baowen
TI Python meets JIT compilers: A simple implementation and a comparative
   evaluation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE interpreter; JIT compiler; performance evaluation; performance
   optimization; Python
ID PERFORMANCE
AB Developing a just-in-time (JIT) compiler can be a daunting task, especially for a language as flexible as Python. While PyPy, powered with JIT compilation, can often outperform the official pure interpreter, CPython, by a noteworthy margin, its popularity remains far from comparable to that of CPython due to some issues. Given that an easier-to-deploy and better-compatible JIT compiler would benefit more Python users, we have developed comPyler, a simple JIT compiler functioning as a CPython extension and intended to convert frequently interpreted CPython bytecode into equivalent machine code. Designed with good compatibility in mind, it does not alter CPython's internal data structures or external interfaces. Based on LLVM's mature infrastructure, it can be readily ported to almost all platforms. Compared with CPython, it achieved the highest speedup of 2.205, with an average of 1.093. Despite its relatively limited effect, comPyler incurs low development costs. As a baseline compiler, it also sheds light on the improvement attainable by optimizing solely the overhead of bytecode interpretation. Furthermore, as there is still a dearth of empirical research covering the multitude of JIT compilers available for Python, we have conducted a performance study that examines Jython, IronPython, PyPy, GraalPy, Pyston, Pyjion, and our comPyler. Our research takes into account not only the benchmark speed for various time windows but also the boot latency and memory footprint. Through this comprehensive study, our objective is to assist developers in gaining a better understanding of the effects of distinct JIT compilation techniques and to aid users in making informed decisions when choosing among different Python implementations.
C1 [Zhang, Qiang; Xu, Lei; Xu, Baowen] Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
C3 Nanjing University
RP Xu, L (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM xlei@nju.edu.cn
RI Zhang, Yulin/KEI-1610-2024; Shen, Yan/KEJ-4617-2024; luo,
   Jing/KFT-0288-2024; Liu, Junjie/KHV-6949-2024; Xu, Baowen/IXW-4882-2023;
   liu, qi/KFA-4047-2024; Yang, Ning/KHD-1133-2024; Li,
   Yuanyuan/KEH-6935-2024; zhang, xiaoyu/KEJ-0657-2024; liu,
   yang/KFA-8402-2024; wang, haoyu/KHY-6295-2024; li, yf/KHX-1148-2024;
   wang, yifang/KEI-3766-2024
OI Xu, Baowen/0000-0001-7743-1296; Li, Yuanyuan/0000-0002-4955-1159; wang,
   haoyu/0009-0001-2467-5331; Xu, Lei/0000-0002-4815-2850; Zhang,
   Qiang/0000-0003-0876-4374
FU National Natural Science Foundation of China [62272214, 61832009];
   Cooperation Fund of Huawei-Nanjing University Next Generation
   Programming Innovation Lab [YBN2019105178SW32, YBN2019105178SW37];
   Software Engineering Application Technology Lab in Huawei
   [TC20230202021-2023-01]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   62272214, 61832009; Cooperation Fund of Huawei-Nanjing University Next
   Generation Programming Innovation Lab, Grant/Award Numbers:
   YBN2019105178SW32, YBN2019105178SW37; Software Engineering Application
   Technology Lab in Huawei, Grant/Award Number: TC20230202021-2023-01
CR Akeret J, 2015, ASTRON COMPUT, V10, P1, DOI 10.1016/j.ascom.2014.12.001
   Barany G., 2014, P WORKSHOP DYNAMIC L, P1, DOI DOI 10.1145/2617548.2617552
   Barany G., 2014, SOFTWARE ENG WORKSHO, P213
   Behnel S, 2011, COMPUT SCI ENG, V13, P31, DOI 10.1109/MCSE.2010.118
   Bolz C. F., 2009, ICOOOLPS, P18, DOI DOI 10.1145/1565824.1565827
   Brunthaler S., MULTI LEVEL QUICKENI
   Brunthaler S, 2010, ACM SIGPLAN NOTICES, V45, P1, DOI 10.1145/1899661.1869633
   Brunthaler S, 2010, LECT NOTES COMPUT SC, V6183, P429, DOI 10.1007/978-3-642-14107-2_21
   Citron D., 2006, Computer Architecture News, V34, P18, DOI 10.1145/1186736.1186738
   Constantinou T., 2005, ACM SIGARCH COMPUT A, V33, P80, DOI [DOI 10.1145/1105734.1105745, 10.1145/1105734.1105745]
   Crapé A, 2020, I S WORKL CHAR PROC, P83, DOI 10.1109/IISWC50251.2020.00017
   FLEMING PJ, 1986, COMMUN ACM, V29, P218, DOI 10.1145/5666.5673
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Guelton Serge, 2015, Computational Science and Discovery, V8, DOI 10.1088/1749-4680/8/1/014001
   Guelton S, 2018, COMPUT SCI ENG, V20, P83, DOI 10.1109/MCSE.2018.021651342
   Hayen K., NUITKA PYTHON COMPIL
   Ismail M, 2018, I S WORKL CHAR PROC, P36, DOI 10.1109/IISWC.2018.8573512
   Lam S. K., 2015, P 2 WORKSHOP LLVM CO, P1, DOI [DOI 10.1145/2833157.2833162, 10.1145/2833157.2833162]
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lattner C., BSD C
   Lei K, 2014, 2014 IEEE 17th International Conference on Computational Science and Engineering (CSE), P661, DOI 10.1109/CSE.2014.142
   Li YG, 2019, EMPIR SOFTW ENG, V24, P2323, DOI 10.1007/s10664-019-09691-z
   Lion D, 2022, PROCEEDINGS OF THE 2022 USENIX ANNUAL TECHNICAL CONFERENCE, P835
   Marr S, 2015, ACM SIGPLAN NOTICES, V50, P821, DOI [10.1145/2814270.2814275, 10.1145/2858965.2814275]
   Meier R, 2019, PROCEEDINGS OF THE 15TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON DYNAMIC LANGUAGES (DLS '19), P91, DOI 10.1145/3359619.3359747
   Meta Company, CIND MET INT PERF OR
   Microsoft Company, NET FREE CROSS PLATF
   Moller A., 2022, Static Program Analysis
   Mostafa N., UNDERSTANDING POTENT
   Mypyc Contributors, MYP PROJ
   .NET Foundation, IRONPYTHON PYTH PROG
   .NET Foundation, PYTHONNET
   Oracle company, HIGH PERF MOD PYTH
   Pall M., DYNASM
   Pyston Contributors, PYST ENH PYTH
   Python Software Foundation, PYTH PERF BENCHM SUI
   Python Software Foundation, Python language
   Python Software Foundation, JYTH PROJ
   Redondo JM, 2015, IEEE SOFTWARE, V32, P76, DOI 10.1109/MS.2014.104
   Relan K., 2019, BUILDING REST APIS F, DOI [10.1007/978-1-4842-5022-8, DOI 10.1007/978]
   RICE HG, 1953, T AM MATH SOC, V74, P358, DOI 10.2307/1990888
   Rigo Armin, 2006, COMP 21 ACM SIGPLAN, P944, DOI DOI 10.1145/1176617.1176753
   Rigo Armin., 2004, P 2004 ACM SIGPLAN W, P15, DOI DOI 10.1145/1014007.1014010
   RustPython Contributors, RUSTPYTHON PYTH INT
   Shaw A., PYJION DROP IN JIT C
   Shed Skin Contributors, SHED SKIN EXP RESTR
   SMITH JE, 1988, COMMUN ACM, V31, P1202, DOI 10.1145/63039.63043
   Spiegelberg L, 2021, INT CONF MANAGE DATA, P1718, DOI 10.1145/3448016.3457244
   The Benchmarks Game Team, COMPUTER LANGUAGE BE
   The HPy Team, HPY A BETT C API PYT
   TIOBE Software, TIOBE IND
   Transonic Contributors, MAK YOUR PYTH COD FL
   Unladen Swallow Contributors, UNL SWALL
   Wimmer Christian, 2013, P 2013 COMP PUBL C S, P17, DOI [10.1145/2508075.2514572, DOI 10.1145/2508075.2514572]
   Wrthinger T., 2013, P 2013 ACM INT S NEW, P187, DOI [10.1145/2509578.2509581, DOI 10.1145/2509578.2509581]
   Würthinger T, 2013, ACM SIGPLAN NOTICES, V48, P73, DOI 10.1145/2480360.2384587
   Zhang Q, 2022, ACM T ARCHIT CODE OP, V20, DOI 10.1145/3568973
   Zhang Q, 2022, SCI COMPUT PROGRAM, V215, DOI 10.1016/j.scico.2021.102759
NR 58
TC 1
Z9 1
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2024
VL 54
IS 2
BP 225
EP 256
DI 10.1002/spe.3267
EA SEP 2023
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL7E2
UT WOS:001061884200001
DA 2024-07-18
ER

PT J
AU Baresi, L
   Dolci, T
   Quattrocchi, G
   Rasi, N
AF Baresi, Luciano
   Dolci, Tommaso
   Quattrocchi, Giovanni
   Rasi, Nicholas
TI A multi-faceted analysis of the performance variability of virtual
   machines
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; software performance; software reliability; virtual
   machines
AB Cloud computing and virtualization solutions allow one to rent the virtual machines (VMs) needed to run applications on a pay-per-use basis, but rented VMs do not offer any guarantee on their performance. Cloud platforms are known to be affected by performance variability, but a better understanding is still required. This article moves in that direction and presents an in-depth, multi-faceted study on the performance variability of VMs. Unlike previous studies, our assessment covers a wide range of factors: 16 VM types from 4 well-known cloud providers, 10 benchmarks, and 28 different metrics. We present four new contributions. First, we introduce a new benchmark suite (VMBS) that let researchers and practitioners systematically collect a diverse set of performance data. Second, we present a new indicator, called VI, that allows for measuring variability in the performance of VMs. Third, we illustrate an analysis of the collected data across four different dimensions: resources, isolation, time, and cost. Fourth, we present multiple predictive models based on machine learning (ML) that aim to forecast future performance and detect time patterns. Our experiments provide important insights on the resource variability of VMs, highlighting differences and similarities between various cloud providers. To the best of our knowledge, this is the widest analysis ever conducted on the topic.
C1 [Baresi, Luciano; Dolci, Tommaso; Quattrocchi, Giovanni; Rasi, Nicholas] Dipartimento Elettron, Informaz & Bioingn, Politecn Milano, Milan, Italy.
C3 Polytechnic University of Milan
RP Quattrocchi, G (corresponding author), Dipartimento Elettron, Informaz & Bioingn, Politecn Milano, Milan, Italy.
EM giovanni.quattrocchi@polimi.it
RI Dolci, Tommaso/JAO-3339-2023; Baresi, Luciano/N-4208-2018
OI Dolci, Tommaso/0000-0002-1403-7766; Baresi, Luciano/0000-0001-6467-837X
FU SISMA national research project - MIUR under the PRIN 2017 program
   [201752ENYB]; EMELIOT national project - MUR under the PRIN 2020 program
   [2020W3A5FY]
FX This work has been partially supported by the SISMA national research
   project which has been funded by the MIUR under the PRIN 2017 program
   (Contract 201752ENYB), and by the EMELIOT national project which has
   been funded by the MUR under the PRIN 2020 program (Contract
   2020W3A5FY).
CR Abedi Ali, 2017, P 8 ACM SPEC INT C P, P287, DOI DOI 10.1145/3030207.3030229
   [Anonymous], STOR OPT COMP ENG DO
   [Anonymous], AM EBS VOL TYP AM EL
   [Anonymous], WHAT IS CONT SERV CA
   [Anonymous], 2012, Time series analysis by state space methods
   [Anonymous], WHAT IS SERV COMP
   [Anonymous], AZ STAT
   [Anonymous], SEL DISK TYP AZ LAAS
   [Anonymous], AWS SERV HLTH DASHB
   Ardagna D, 2014, J INTERNET SERV APPL, V5, DOI 10.1186/s13174-014-0011-3
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Casale Giuliano, 2013, Performance Evaluation Review, V40, P73
   Dejun JA, 2010, LECT NOTES COMPUT SC, V6275, P197
   DICKEY DA, 1979, J AM STAT ASSOC, V74, P427, DOI 10.2307/2286348
   Gesvindr David, 2016, ACM SIGMETRICS Performance Evaluation Review, V43, P3, DOI 10.1145/2897356.2897358
   GEURTS M, 1977, J MARKETING RES, V14, P269, DOI 10.2307/3150485
   Gillam L, 2013, J CLOUD COMPUT-ADV S, V2, DOI 10.1186/2192-113X-2-6
   Grohmann J, 2019, MIDDLEWARE'19: PROCEEDINGS OF THE 2019 MIDDLEWARE'19: 20TH INTERNATIONAL MIDDLEWARE CONFERENCE, P149, DOI 10.1145/3361525.3361543
   He S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P666, DOI 10.1109/ASE51524.2021.9678687
   He S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P188, DOI 10.1145/3338906.3338912
   Hyndman RJ, 2006, INT J FORECASTING, V22, P679, DOI 10.1016/j.ijforecast.2006.03.001
   Iosup A, 2011, IEEE T PARALL DISTR, V22, P931, DOI 10.1109/TPDS.2011.66
   Laaber C, 2019, EMPIR SOFTW ENG, V24, P2469, DOI 10.1007/s10664-019-09681-1
   Leitner P, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2885497
   Li A., 2010, P 10 ANN C INTERNET, DOI DOI 10.1145/1879141.1879143
   Li A, 2011, IEEE INTERNET COMPUT, V15, P50, DOI 10.1109/MIC.2011.36
   Lutkepohl H, 2005, NEW INTRO MULTIPLE T, V22, P961, DOI DOI 10.1007/978-3-540-27752-1
   Papadopoulos AV, 2021, IEEE T SOFTWARE ENG, V47, P1528, DOI 10.1109/TSE.2019.2927908
   Podolskiy V, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P954, DOI 10.1109/CLOUD.2018.00144
   Rahman J, 2019, INT CONF CLOUD ENG, P200, DOI 10.1109/IC2E.2019.00034
   Salah K., 2011, 2011 6th International Conference for Internet Technology and Secured Transactions (ICITST), P345
   Satnreen F, 2016, IEEE IFIP NETW OPER, P557, DOI 10.1109/NOMS.2016.7502858
   Schad J, 2010, PROC VLDB ENDOW, V3, P460, DOI 10.14778/1920841.1920902
   Scheuner J, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P161, DOI 10.1145/3185768.3186286
   Sharma P, 2016, PROCEEDINGS OF THE ELEVENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS, (EUROSYS 2016), DOI 10.1145/2901318.2901319
   Tian YL, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110524
   Wohlin Claes, 2006, Empirical Research Methods in Web and Software Engineering, page, P409
NR 37
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2023
VL 53
IS 11
BP 2067
EP 2091
DI 10.1002/spe.3244
EA JUL 2023
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U0UL3
UT WOS:001035605400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kumar, M
   Samriya, JK
   Dubey, K
   Gill, SS
AF Kumar, Mohit
   Samriya, Jitendra Kumar
   Dubey, Kalka
   Gill, Sukhpal Singh
TI QoS-aware resource scheduling using whale optimization algorithm for
   microservice applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fine-tuned sunflower whale optimization algorithm; microservices;
   quality of service; resource allocation
ID ALLOCATION
AB Microservices is a structural approach, where multiple small set of services are composed and processed independently with lightweight communication mechanism. To accomplish the end-user demand in minimum delay and cost without violating the service level agreement (SLA) constraints and overhead is a challenging issue in cloud computing. In addition, existing framework tries to deploy the microservice over the best computing resource for latency-sensitive applications, but long boot-time, and low resource utilization still remains a challenging task. To find the solution for aforementioned issues, we propose a Quality of Service (QoS) aware resource allocation model based on a Fine-tuned Sunflower Whale Optimization Algorithm (FSWOA) that find the best resources for microservice deployment and fulfill the objectives of users as well as service provider. The proposed technique deploys the container-based services over the physical machine based upon the capacity, to execute the micro services by utilizing the CPU and memory maximally. The proposed work aims is to distribute the workload in efficient manner and avoid the wastage of resources that leads to optimize the QoS parameters. The experimental results conducted in simulation environment demonstrates that proposed approach perform superior over baseline approaches and reduces the time, memory consumption, CPU consumption, and service cost up to 4.26%, 11.29%, 17.07% and 24.22% compared to SFWAO, GA, PSO and ACO.
C1 [Kumar, Mohit] Dr BR Ambedkar NIT Jalandhar, Dept Informat Technol, Jalandhar, India.
   [Samriya, Jitendra Kumar] Grap Era Univ, Dept Comp Sci & Engn, Dehra Dun, India.
   [Dubey, Kalka] RGIPT, Dept Comp Sci & Engn, Amethi, India.
   [Gill, Sukhpal Singh] Queen Mary Univ, Sch Elect Engn & Comp Sci, London, England.
C3 National Institute of Technology (NIT System); Dr B R Ambedkar National
   Institute of Technology Jalandhar; Graphic Era University; University of
   London; Queen Mary University London
RP Kumar, M (corresponding author), Dr BR Ambedkar NIT Jalandhar, Dept Informat Technol, Jalandhar, India.
EM kumarmohit@nitj.ac.in
RI KUMAR, MOHIT/GNP-6004-2022; Gill, Sukhpal Singh/J-5930-2014
OI KUMAR, MOHIT/0000-0003-1600-6872; Gill, Sukhpal
   Singh/0000-0002-3913-0369
CR Al Qassem LM., 2022, 2022 INT C EL COMP T
   CHAKRABORTY A, 2023, IEEE COMMUN SURV TUT, V53, P496
   Chen X, 2018, IEEE T VEH TECHNOL, V67, P8769, DOI 10.1109/TVT.2018.2846232
   Chou LD, 2018, IEEE SYST J, V12, P1554, DOI 10.1109/JSYST.2016.2596299
   Ciuffoletti A, 2015, PROCEDIA COMPUT SCI, V68, P163, DOI 10.1016/j.procs.2015.09.232
   DELAURETIS L, 2019, MONOLITHIC ARCHITECT, P93
   Ding ZY, 2022, INT J LEADERSH EDUC, DOI [10.1109/IECON49645.2022.9968822, 10.1080/13603124.2022.2068191]
   Gawali MB, 2018, J CLOUD COMPUT-ADV S, V7, DOI 10.1186/s13677-018-0105-8
   Gomes GF, 2019, ENG COMPUT-GERMANY, V35, P619, DOI 10.1007/s00366-018-0620-8
   Hammood OA., 2020, B ELECT ENG INFORM, V9, P685, DOI DOI 10.11591/EEI.V9I2.1653
   Hasan RA, 2018, ADV SCI LETT, V24, P7777, DOI 10.1166/asl.2018.13016
   He X., 2022, IEEE T FUZZY SYST
   He X, 2021, FUTURE GENER COMP SY, V118, P263, DOI 10.1016/j.future.2021.01.008
   Hussien AM, 2021, AIN SHAMS ENG J, V12, P1883, DOI 10.1016/j.asej.2020.10.020
   Joseph CT, 2020, J SYST ARCHITECT, V111, DOI 10.1016/j.sysarc.2020.101785
   Kumar A, 2020, INT J AD HOC UBIQ CO, V34, P129
   Kumar M, 2022, IEEE T SUST COMPUT, V7, P386, DOI 10.1109/TSUSC.2021.3110245
   Kumar M, 2019, J NETW COMPUT APPL, V143, P1, DOI 10.1016/j.jnca.2019.06.006
   Kumar M, 2018, SUSTAIN COMPUT-INFOR, V19, P147, DOI 10.1016/j.suscom.2018.06.002
   Linthicum DS, 2016, IEEE CLOUD COMPUT, V3, P6, DOI 10.1109/MCC.2016.114
   Shrimali B, 2020, J KING SAUD UNIV-COM, V32, P860, DOI 10.1016/j.jksuci.2017.12.001
   Singh R, 2023, Internet Things Cyber-Phys Systems, V3, P71, DOI DOI 10.1016/J.IOTCPS.2023.02.004
   Srirama SN, 2020, J NETW COMPUT APPL, V160, DOI 10.1016/j.jnca.2020.102629
   Subalakshmi N, 2020, IIOAB J, V11, P92
   Subhash LS, 2021, WIRELESS PERS COMMUN, V116, P3061, DOI 10.1007/s11277-020-07835-9
   Taherizadeh S, 2020, ADV ENG SOFTW, V140, DOI 10.1016/j.advengsoft.2019.102734
   Tseng FH, 2018, IEEE SYST J, V12, P1688, DOI 10.1109/JSYST.2017.2722476
   Vrbaski M., 2022, 2017 IEEE 5 INT C FU
   Waseem M, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111061
   Xu MX, 2022, IEEE T NETW SERV MAN, V19, P3995, DOI 10.1109/TNSM.2022.3210211
NR 30
TC 0
Z9 0
U1 3
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2024
VL 54
IS 4
SI SI
BP 546
EP 565
DI 10.1002/spe.3211
EA APR 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KD1F8
UT WOS:000972796800001
DA 2024-07-18
ER

PT J
AU Tang, B
   Luo, JC
   Zhang, JM
AF Tang, Bing
   Luo, Jincheng
   Zhang, Jiaming
TI Container-based data-intensive application scheduling in hybrid
   cloud-edge collaborative environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE container scheduling; data-intensive computing; Docker; edge computing;
   edge intelligence
ID OPTIMIZATION; ALLOCATION; MAPREDUCE; ALGORITHM
AB Container virtualization technology represented by Docker has been widely used in the industry due to its advantages of lightweight, fast deployment, and easy portability. It can bring convenience to system deployment, operation, and maintenance. This article considers the implementation of AI-based IoT applications based on Docker and container technology in a cloud-edge collaborative environment. Three typical data-intensive applications, preprocessing, training, and inference in machine learning, are deployed using Docker containers. For these three types of tasks, this article proposes a container-based data-intensive application scheduling framework. Using an attribute-based data-driven method, a new scheduling approach considering multiple weighting factors is proposed, which is called DICS-OPT. The cloud nodes and edge nodes are scored and sorted uniformly. The container is scheduled to the node with the highest score, and then the task data is transmitted to the node to execute the task. NSGA-III-based genetic algorithm has been proposed to search for the optimal weighting factors. This article introduces the implementation of the prototype system and builds a cloud-edge collaborative testbed consisting of Raspberry Pis and PCs. The performance evaluation results indicates that the proposed scheduling approach outperforms existing approaches. Compared with existing approaches, DICS-OPT improves the average edge resource utilization by 10.05% to 69.04%, and saves the cloud resource cost by 16.02% to 36.68%.
C1 [Tang, Bing; Luo, Jincheng] Hunan Univ Sci & Technol, Sch Comp Sci & Engn, Xiangtan, Hunan, Peoples R China.
   [Tang, Bing; Luo, Jincheng] Hunan Univ Sci & Technol, Hunan Key Lab Serv Comp & Novel Software Technol, Xiangtan, Hunan, Peoples R China.
   [Tang, Bing] Guangzhou Maritime Univ, Sch Informat & Commun Engn, Guangzhou, Guangdong, Peoples R China.
   [Zhang, Jiaming] Wuhan Univ Technol, Sch Informat Engn, Wuhan 430070, Hubei, Peoples R China.
C3 Hunan University of Science & Technology; Hunan University of Science &
   Technology; Guangzhou Maritime University; Wuhan University of
   Technology
RP Zhang, JM (corresponding author), Wuhan Univ Technol, Sch Informat Engn, Wuhan 430070, Hubei, Peoples R China.
EM jiamingzhang@whut.edu.cn
RI Zhang, Jiaming/KFB-5214-2024
OI Zhang, Jiaming/0009-0004-2658-2851
FU National Key R&D Program of China [2018YFB1402800]; National Natural
   Science Foundation of China [61872138, 61602169]; Natural Science
   Foundation of Hunan Province [2021JJ30278]; Postgraduate Scientific
   Research Innovation Project of Hunan Province [QL20210242]; Guangdong
   Province Key Discipline Scientific Research Capability Improvement
   Project [2022ZDJS093]; Scientific Research Fund of Hunan Provincial
   Education Department [22B0497]
FX ACKNOWLEDGMENTS This work was supported by National Key R&D Program of
   China under Grant no. 2018YFB1402800, National Natural Science
   Foundation of China under Grant no. 61872138 and 61602169, Natural
   Science Foundation of Hunan Province under Grant no. 2021JJ30278,
   Postgraduate Scientific Research Innovation Project of Hunan Province
   under Grant no. QL20210242, Guangdong Province Key Discipline Scientific
   Research Capability Improvement Project under Grant no. 2022ZDJS093, and
   Scientific Research Fund of Hunan Provincial Education Department under
   Grant no. 22B0497.
CR Ahmad I, 2022, J KING SAUD UNIV-COM, V34, P3934, DOI 10.1016/j.jksuci.2021.03.002
   Alam M, 2018, IEEE COMMUN MAG, V56, P118, DOI 10.1109/MCOM.2018.1701233
   Alcácer V, 2019, ENG SCI TECHNOL, V22, P899, DOI 10.1016/j.jestch.2019.01.006
   Alkhalaileh M, 2020, J NETW COMPUT APPL, V167, DOI 10.1016/j.jnca.2020.102735
   [Anonymous], 2021, KUBERNETES PRODUCTIO
   Bozic J, 2021, COMPUT IND, V129, DOI 10.1016/j.compind.2021.103459
   Chen F., 2020, THESIS SW JIAOTONG U
   Chen LQ, 2020, IEEE ACCESS, V8, P118638, DOI 10.1109/ACCESS.2020.3000985
   Chen Z, 2023, DIGIT COMMUN NETW, V9, P688, DOI 10.1016/j.dcan.2022.04.023
   Dautov R, 2021, IEEE T KNOWL DATA EN, V33, P55, DOI 10.1109/TKDE.2019.2923638
   Fedak G, 2009, J NETW COMPUT APPL, V32, P961, DOI 10.1016/j.jnca.2009.04.002
   Guerrero C, 2018, J GRID COMPUT, V16, P113, DOI 10.1007/s10723-017-9419-x
   Guo FY, 2023, CLUSTER COMPUT, V26, P1319, DOI 10.1007/s10586-022-03661-9
   Guo FY, 2022, WORLD WIDE WEB, V25, P2019, DOI 10.1007/s11280-022-01017-2
   Guo FY, 2021, J INTELL FUZZY SYST, V40, P8883, DOI 10.3233/JIFS-200933
   He X, 2021, FUTURE GENER COMP SY, V118, P263, DOI 10.1016/j.future.2021.01.008
   Hoque S, 2017, P INT COMP SOFTW APP, P294, DOI 10.1109/COMPSAC.2017.248
   Hsieh TH, 2020, LECT NOTE DATA ENG, V47, P351, DOI 10.1007/978-3-030-39746-3_37
   Hu Y, 2019, IEEE ACM INT SYMP, P592, DOI 10.1109/CCGRID.2019.00076
   Jonathan A, 2017, IEEE T PARALL DISTR, V28, P3229, DOI 10.1109/TPDS.2017.2717883
   Kang P, 2021, IEICE T INF SYST, VE104D, P394, DOI 10.1587/transinf.2020EDP7160
   Kaur K, 2020, IEEE INTERNET THINGS, V7, P4228, DOI 10.1109/JIOT.2019.2939534
   Kim J, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21154968
   Li J, 2020, PROCEEDINGS OF 2020 IEEE 4TH INFORMATION TECHNOLOGY, NETWORKING, ELECTRONIC AND AUTOMATION CONTROL CONFERENCE (ITNEC 2020), P2236, DOI [10.1109/ITNEC48623.2020.9085200, 10.1109/itnec48623.2020.9085200]
   Liu B, 2018, SOFT COMPUT, V22, P7741, DOI 10.1007/s00500-018-3403-7
   Luo ST, 2021, PROCEEDINGS OF THE 2021 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '21), P412, DOI 10.1145/3472883.3487003
   Mahmud MR., 2021, ABS210103533 CORR
   Mao YJ, 2017, INT GEOL REV, V59, P1276, DOI [10.1109/COMST.2017.2745201, 10.1080/00206814.2016.1209435]
   Menouer T, 2021, J SUPERCOMPUT, V77, P4267, DOI 10.1007/s11227-020-03427-3
   Menouer T, 2019, EUROMICRO WORKSHOP P, P101, DOI 10.1109/EMPDP.2019.8671594
   Mishra SK, 2020, IETE TECH REV, V37, P339, DOI 10.1080/02564602.2019.1620648
   Mishra SK, 2018, IEEE ACCESS, V6, P56587, DOI 10.1109/ACCESS.2018.2872722
   Mishra SK, 2018, J SUPERCOMPUT, V74, P370, DOI 10.1007/s11227-017-2133-4
   Nguyen ND, 2020, IEEE ACCESS, V8, P183879, DOI 10.1109/ACCESS.2020.3029583
   Pahl C, 2016, 2016 IEEE 4TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD WORKSHOPS (FICLOUDW), P117, DOI 10.1109/W-FiCloud.2016.36
   Pahl C, 2015, 2015 3RD INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD) AND INTERNATIONAL CONFERENCE ON OPEN AND BIG (OBD), P379, DOI 10.1109/FiCloud.2015.35
   Rausch T., 2019, P 2 USENIX WORKSHOP
   Rausch T, 2021, FUTURE GENER COMP SY, V114, P259, DOI 10.1016/j.future.2020.07.017
   Srirama SN, 2020, J NETW COMPUT APPL, V160, DOI 10.1016/j.jnca.2020.102629
   Taherizadeh S, 2020, ADV ENG SOFTW, V140, DOI 10.1016/j.advengsoft.2019.102734
   Tang B., P INT C P2P PAR GRID
   Tang B, 2022, PEER PEER NETW APPL, V15, P934, DOI 10.1007/s12083-021-01266-4
   Tang B, 2022, IEEE T BIG DATA, V8, P85, DOI 10.1109/TBDATA.2017.2758791
   Tang B, 2017, INFORM SCIENCES, V379, P94, DOI 10.1016/j.ins.2016.09.030
   Tang B, 2015, CONCURR COMP-PRACT E, V27, P4140, DOI 10.1002/cpe.3515
   Tang LJ, 2021, J CLOUD COMPUT-ADV S, V10, DOI 10.1186/s13677-021-00240-y
   Wang CN, 2019, PROCESSES, V7, DOI 10.3390/pr7060353
   Xiong Y, 2018, 2018 THIRD IEEE/ACM SYMPOSIUM ON EDGE COMPUTING (SEC), P373, DOI 10.1109/SEC.2018.00048
   You Q, 2021, J CLOUD COMPUT-ADV S, V10, DOI 10.1186/s13677-021-00256-4
   Zhang Y, 2022, ELECTRONICS-SWITZ, V11, DOI 10.3390/electronics11152464
   Zhong Z., ACM COMPUT SURV
   Zhou Z, 2019, P IEEE, V107, P1738, DOI 10.1109/JPROC.2019.2918951
NR 52
TC 3
Z9 3
U1 2
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2024
VL 54
IS 7
SI SI
BP 1217
EP 1240
DI 10.1002/spe.3195
EA MAR 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TC7Y2
UT WOS:000945511600001
DA 2024-07-18
ER

PT J
AU Madhura, R
   Uthariaraj, VR
   Elizabeth, BL
AF Madhura, Rajarethinam
   Uthariaraj, Vaidyanathan Rhymend
   Elizabeth, Benjamin Lydia
TI An efficient list-based task scheduling algorithm for heterogeneous
   distributed computing environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE deadline-aware; directed acyclic graph (DAG); heterogeneous distributed
   computing system; makespan; task scheduling
ID CLOUD; WORKFLOWS; INFRASTRUCTURE; RESOURCE
AB The task scheduling in heterogeneous distributed computing systems plays a crucial role in reducing the makespan and maximizing resource utilization. The diverse nature of the devices in heterogeneous distributed computing systems intensifies the complexity of scheduling the tasks. To overcome this problem, a new list-based static task scheduling algorithm namely Deadline-Aware-Longest-Path-of-all-Predecessors (DA-LPP) is being proposed in this article. In the prioritization phase of the DA-LPP algorithm, the path length of the current task from all its predecessors at each level is computed and among them, the longest path length value is assigned as the rank of the task. This strategy emphasizes the tasks in the critical path. This well-optimized prioritization phase leads to an observable minimization in the makespan of the applications. In the processor selection phase, the DA-LPP algorithm implements the improved insertion-based policy which effectively utilizes the unoccupied leftover free time slots of the processors which improve resource utilization, further least computation cost allocation approach is followed to minimize the overall computation cost of the processors and parental prioritization policy is incorporated to further reduce the scheduling length. To demonstrate the robustness of the proposed algorithm, a synthetic graph generator is used in this experiment to generate a huge variety of graphs. Apart from the synthetic graphs, real-world application graphs like Montage, LIGO, Cybershake, and Epigenomic are also considered to grade the performance of the DA-LPP algorithm. Experimental results of the DA-LPP algorithm show improvement in performance in terms of scheduling length ratio, makespan reduction rate , and resource reduction rate when compared with other algorithms like DQWS, DUCO, DCO and EPRD. The results reveal that for 1000 task set with deadline equals to two times of the critical path, the scheduling length ratio of the DA-LPP algorithm is better than DQWS by 35%, DUCO by 23%, DCO by 26 %, and EPRD by 17%.
C1 [Madhura, Rajarethinam; Uthariaraj, Vaidyanathan Rhymend] Anna Univ, Ramanujan Comp Ctr, Chennai 600025, Tamil Nadu, India.
   [Elizabeth, Benjamin Lydia] Anna Univ, Informat Technol, MIT Campus, Chennai, Tamil Nadu, India.
C3 Anna University; Anna University Chennai; Anna University; Anna
   University Chennai
RP Madhura, R (corresponding author), Anna Univ, Ramanujan Comp Ctr, Chennai 600025, Tamil Nadu, India.
EM madhuraa@mitindia.edu
CR Abrishami S, 2013, FUTURE GENER COMP SY, V29, P158, DOI 10.1016/j.future.2012.05.004
   Ahmad W, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.5987
   Al-Maytami BA, 2019, IEEE ACCESS, V7, P160916, DOI 10.1109/ACCESS.2019.2948704
   AlEbrahim S, 2017, J SUPERCOMPUT, V73, P2313, DOI 10.1007/s11227-016-1917-2
   Alkhanak EN, 2016, J SYST SOFTWARE, V113, P1, DOI 10.1016/j.jss.2015.11.023
   [Anonymous], WORKFLOWGENERATOR PE
   Arabnejad H, 2016, FUTURE GENER COMP SY, V55, P29, DOI 10.1016/j.future.2015.07.021
   Arabnejad H, 2014, IEEE T PARALL DISTR, V25, P682, DOI 10.1109/TPDS.2013.57
   Bharathi S, 2008, 2008 THIRD WORKSHOP ON WORKFLOWS IN SUPPORT OF LARGE-SCALE SCIENCE (WORKS 2008), P11
   Bittencourt LF, 2010, EUROMICRO WORKSHOP P, P27, DOI 10.1109/PDP.2010.56
   Bochenina K, 2016, FUTURE GENER COMP SY, V55, P51, DOI 10.1016/j.future.2015.08.009
   Chen WH, 2021, CLUSTER COMPUT, V24, P701, DOI 10.1007/s10586-020-03151-w
   Chen WH, 2017, FUTURE GENER COMP SY, V74, P1, DOI 10.1016/j.future.2017.03.008
   Chirkin AM, 2017, FUTURE GENER COMP SY, V75, P376, DOI 10.1016/j.future.2017.01.011
   Chopra N., 2013, P 4 INT C COMP COMM, P1, DOI [10.1109/ICCCNT.2013.6726627, DOI 10.1109/ICCCNT.2013.6726627]
   Garg R, 2015, ENG SCI TECHNOL, V18, P256, DOI 10.1016/j.jestch.2015.01.001
   Ghafouri R, 2019, PEER PEER NETW APPL, V12, P241, DOI 10.1007/s12083-018-0662-0
   Ijaz S, 2019, J SUPERCOMPUT, V75, P3740, DOI 10.1007/s11227-018-2726-6
   Kaur A, 2022, SOFTWARE PRACT EXPER, V52, P689, DOI 10.1002/spe.2802
   Khiat A, 2020, SOFTWARE PRACT EXPER, V50, P1463, DOI 10.1002/spe.2827
   Toussi GK, 2021, CLUSTER COMPUT, V24, P1711, DOI 10.1007/s10586-020-03223-x
   Konjaang JK, 2020, 2020 IEEE 6TH INT CONFERENCE ON BIG DATA SECURITY ON CLOUD (BIGDATASECURITY) / 6TH IEEE INT CONFERENCE ON HIGH PERFORMANCE AND SMART COMPUTING, (HPSC) / 5TH IEEE INT CONFERENCE ON INTELLIGENT DATA AND SECURITY (IDS), P162, DOI 10.1109/BigDataSecurity-HPSC-IDS49724.2020.00038
   Lee YC, 2015, KNOWL-BASED SYST, V80, P153, DOI 10.1016/j.knosys.2015.02.012
   Li Y, 2018, INT CON DISTR COMP S, P1573, DOI 10.1109/ICDCS.2018.00173
   Liu XC, 2015, J SYST SOFTWARE, V104, P141, DOI 10.1016/j.jss.2015.03.007
   Malawski M, 2015, FUTURE GENER COMP SY, V48, P1, DOI 10.1016/j.future.2015.01.004
   Masdari M, 2016, J NETW COMPUT APPL, V66, P64, DOI 10.1016/j.jnca.2016.01.018
   Sahni J, 2018, IEEE T CLOUD COMPUT, V6, P2, DOI 10.1109/TCC.2015.2451649
   Sinnen O, 2005, IEEE T PARALL DISTR, V16, P503, DOI 10.1109/TPDS.2005.64
   Sun T, 2019, CLUSTER COMPUT, V22, pS5987, DOI 10.1007/s10586-018-1751-9
   Topcuoglu H, 2002, IEEE T PARALL DISTR, V13, P260, DOI 10.1109/71.993206
   ULLMAN JD, 1975, J COMPUT SYST SCI, V10, P384, DOI 10.1016/S0022-0000(75)80008-0
   Wu FH, 2015, J SUPERCOMPUT, V71, P3373, DOI 10.1007/s11227-015-1438-4
   Wu H, 2016, IEEE T PARALL DISTR, V27, P885, DOI 10.1109/TPDS.2015.2411257
   Zhang LX, 2020, INFORM SCIENCES, V531, P31, DOI 10.1016/j.ins.2020.04.039
   Zhu ZM, 2016, IEEE T PARALL DISTR, V27, P1344, DOI 10.1109/TPDS.2015.2446459
NR 36
TC 2
Z9 2
U1 2
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2023
VL 53
IS 2
BP 390
EP 412
DI 10.1002/spe.3153
EA OCT 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7P3RV
UT WOS:000866494300001
DA 2024-07-18
ER

PT J
AU Zhong, CX
   Huang, H
   Zhang, H
   Li, SS
AF Zhong, Chenxing
   Huang, Huang
   Zhang, He
   Li, Shanshan
TI Impacts, causes, and solutions of architectural smells in microservices:
   An industrial investigation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architectural smell; microservice; empirical study; case study
ID ROOT CAUSE ANALYSIS; SOFTWARE
AB As a recently predominant architecture style, MicroService Architecture (MSA) is likely to suffer the issues of poor maintainability due to inappropriate microservice boundaries. Architectural Smell (AS), as a metaphor for potential architectural issues that may have negative impacts on software maintenance, can be used to pinpoint refactoring opportunity for evolving microservice boundary. However, existing studies mostly focus on AS detection with little further investigation on the possible impacts, causes, and solutions of AS, which does little help in addressing the bad smells in architecture. Our goal in this study is to bridge this gap by investigating the possible impacts, causes, and solutions of AS in MSA-based systems. An industrial case study is carried out to collect repository data and practitioners' views on six typical ASes in a real MSA-based telecommunication system. Statistical Analysis and Coding techniques are used in the analyses of quantitative and qualitative data respectively. The results show that AS influences the modularity, modifiability, analyzability, and testability of the MSA-based system, which further induce extra cross-team communication, change- and fault-prone microservices. To explore the causes for AS, a five-aspect conceptual classification with technology, project, organization, business, and professional is proposed, in which the business and organization aspects take the major roles. Both technical and non-technical solutions are distilled to deal with ASes despite potential constraints. These results and their comparison to current literature are discussed, which provide practical implications in coping with AS in microservices.
C1 [Zhong, Chenxing; Zhang, He; Li, Shanshan] Nanjing Univ, Software Inst, Asia, Peoples R China.
   [Zhong, Chenxing; Zhang, He; Li, Shanshan] Nanjing Univ, State Key Lab Novel Software Technol, Asia, Peoples R China.
   [Huang, Huang] State Grid Nanjing Power Supply Co, Asia, Peoples R China.
C3 Nanjing University; Nanjing University
RP Zhong, CX; Zhang, H (corresponding author), Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, Asia, Peoples R China.
EM zhongcx@smail.nju.edu.cn; hezhang@nju.edu.cn
RI Li, Shanshan/HLH-7747-2023
OI Huang, Huang/0000-0002-1296-4363
FU Key Research and Development Program of Jiangsu Province [BE2021002-2];
   National Key Research and Development Program of China [2019YFE0105500];
   National Natural Science Foundation of China [62072227]
FX Key Research and Development Program of Jiangsu Province, Grant/Award
   Number: BE2021002-2; National Key Research and Development Program of
   China, Grant/Award Number: 2019YFE0105500; National Natural Science
   Foundation of China, Grant/Award Number: 62072227
CR AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   [Anonymous], 1996, Focus groups as qualitative research
   Assunçao WKG, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P377, DOI 10.1109/SANER50967.2021.00042
   Azadi U, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P88, DOI 10.1109/TechDebt.2019.00027
   Bass L., 2013, SOFTWARE ARCHITECTUR
   BHANDARI I, 1993, IEEE T SOFTWARE ENG, V19, P1157, DOI 10.1109/32.249661
   Bjornson FO, 2009, INFORM SOFTWARE TECH, V51, P150, DOI 10.1016/j.infsof.2008.02.003
   Bogner J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09999-9
   Cai YF, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P231, DOI 10.1145/3377813.3381357
   CALDER BJ, 1977, J MARKETING RES, V14, P353, DOI 10.2307/3150774
   Carvalho L, 2020, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME46990.2020.00060
   Chaniotaki AM, 2021, IEEE WORK CONF MIN S, P190, DOI 10.1109/MSR52588.2021.00031
   Chantian B., 2019, P WORLD S SOFTW ENG, P27, DOI [10.1145/3362125.3362132, DOI 10.1145/3362125.3362132]
   Chen LP, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P39, DOI 10.1109/ICSA.2018.00013
   de Toledo SS, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110968
   Le DM, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P176, DOI 10.1109/ICSA.2018.00027
   Le DM, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P178, DOI 10.1109/WICSA.2016.15
   Evans E., 2003, Domain-Driven Design
   Fontana FA, 2019, J SYST SOFTWARE, V154, P139, DOI 10.1016/j.jss.2019.04.066
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fowler F., 2013, Survey research methods, V5th
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Gnoyke P, 2021, PROC IEEE INT CONF S, P413, DOI 10.1109/ICSME52107.2021.00043
   Herold S, 2020, LECT NOTES COMPUT SC, V12292, P193, DOI 10.1007/978-3-030-58923-3_13
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Karfakis P, 2018, Institutions, economic freedom and structural transformation in 11 sub-Saharan African countries, P1, DOI DOI 10.1145/3242163.3242164
   Karlsson E.-A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P649, DOI 10.1109/ICSE.2000.870459
   Kelley K, 2003, INT J QUAL HEALTH C, V15, P261, DOI 10.1093/intqhc/mzg031
   Kirby LJ, 2021, INT C PROGRAM COMPRE, P358, DOI 10.1109/ICPC52881.2021.00041
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kleehaus M, 2018, LECT NOTES BUS INF P, V317, P148, DOI 10.1007/978-3-319-92901-9_14
   Laser MS, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1546, DOI 10.1145/3368089.3417941
   Lehtinen TOA, 2011, INFORM SOFTWARE TECH, V53, P1045, DOI 10.1016/j.infsof.2011.05.005
   Lenarduzzi V., 2020, PROC 14 INT S EMPIRI, P1
   Lenarduzzi V, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110710
   Li DY, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2181
   Li SS, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106449
   Li SS, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.008
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Martini A, 2015, INFORM SOFTWARE TECH, V67, P237, DOI 10.1016/j.infsof.2015.07.005
   Mendoza C, 2021, SOFTWARE PRACT EXPER, V51, P1822, DOI 10.1002/spe.3004
   Mo R, 2021, IEEE T SOFTWARE ENG, V47, P1008, DOI 10.1109/TSE.2019.2910856
   Mo R, 2018, IEEE INT CONF AUTOM, P779, DOI 10.1145/3238147.3240467
   Mo R, 2016, PROC INT CONF SOFTW, P499, DOI 10.1145/2884781.2884825
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Mumtaz H, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110885
   Neri D, 2020, SICS SOFTWARE, V35, P3, DOI 10.1007/s00450-019-00407-8
   Ott R.L., 2015, INTRO STAT METHODS D
   Oyetoyan TD, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P241, DOI 10.1109/SANER.2015.7081834
   Pigazzini I, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110984
   Pigazzini I, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P92, DOI 10.1145/3387906.3388625
   Rabiee F, 2004, P NUTR SOC, V63, P655, DOI 10.1079/PNS2004399
   Rizzi L., 2018, P 2 INT WORKSH REF I, P7
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sas D, 2021, IEEE SOFTWARE, V38, P35, DOI 10.1109/MS.2021.3103664
   Sas D, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2398
   Sas D, 2019, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSME.2019.00090
   Soldani J, 2021, SOFTWARE PRACT EXPER, V51, P1591, DOI 10.1002/spe.2974
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Soliman M, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106669
   Sousa L, 2020, INT C PROGRAM COMPRE, P354, DOI 10.1145/3387904.3389276
   Soyer Cunha Warteruzannan, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P760, DOI 10.1145/3422392.3422507
   Sultana KZ, 2020, ASIA PAC SOFWR ENG, P31, DOI 10.1109/APSEC51365.2020.00011
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   Tian FC, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P91, DOI 10.1109/ICSA.2019.00018
   Uzun B, 2019, SOFTWARE PRACT EXPER, V49, P423, DOI 10.1002/spe.2667
   VomBrocke J, 2010, INT HANDB INFORM SYS, P1
   Wang YY, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09910-y
   Waseem M, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110798
   Zhang F, 2013, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2013.46
NR 73
TC 6
Z9 6
U1 3
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2022
VL 52
IS 12
BP 2574
EP 2597
DI 10.1002/spe.3138
EA AUG 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A1NL
UT WOS:000842174600001
DA 2024-07-18
ER

PT J
AU Correia, ARS
   Iyoda, JM
   Mota, AC
AF Correia, Alexandre R. S.
   Iyoda, Juliano M.
   Mota, Alexandre C.
TI The effect of distance metrics in a general purpose synthesizer: An
   empirical study on integer domain imperative programs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distance metric; fitness function; genetic algorithm; program synthesis
AB Context Program synthesis is the task of automatically finding a program that satisfies the user intention. In previous work, we have developed a program synthesizer that integrates genetic algorithm with model finder. A genetic algorithm uses a fitness function to calculate how "distant to a solution" a given candidate program is. Researchers argue that different distance metrics for a fitness function may reveal behavioral differences in the genetic algorithm. Objective We have chosen five distance metrics as fitness functions to check whether they affect the synthesis task of five different integer domain imperative toy-programs which read/write integer values using fundamental syntactic constructs, such as while, if-then-else, and so forth. We have used input/output examples and sketches to constrain the search space of the candidate programs. Method A hypothesis test was proposed and experiments were conducted to observe the number of calls to the fitness function (x) and to measure the synthesis time (xst). Results Regarding x, the synthesizer found a solution for all five subjects after calling the fitness function the same amount of times. For xst, a one-way ANOVA was performed with a significance level of 5% (alpha=0.05). No significant differences were observed in both x and xst. Conclusion With these preliminary results, this study suggests that the discrete distance metric is the best choice, because it guides the search with the same effectiveness as the others and is not time consuming, and so forth. However, future experimentation with a larger search space will confirm or not this initial impression.
C1 [Correia, Alexandre R. S.] Inst Fed Sertao Pernambucano, Coordenacao Informat, BR-56316686 Petrolina, PE, Brazil.
   [Correia, Alexandre R. S.; Iyoda, Juliano M.; Mota, Alexandre C.] Univ Fed Pernambuco, Ctr Informat, Recife, PE, Brazil.
C3 Instituto Federal do Sertao Pernambucano; Universidade Federal de
   Pernambuco
RP Correia, ARS (corresponding author), Inst Fed Sertao Pernambucano, Coordenacao Informat, BR-56316686 Petrolina, PE, Brazil.
EM alexandre.correia@ifsertao-pe.edu.br
OI Iyoda, Juliano Manabu/0000-0001-7137-8287; Correia,
   Alex/0000-0002-2407-4608
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [305729/2018-7]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Number: 305729/2018-7
CR Balog M., 2016, ARXIV PREPRINT ARXIV
   Barke S, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428295
   Burke E., 2002, GECCO 2002, P716
   Cha S.H., 2007, International Journal of Mathematical Models and Methods in Applied Sciences, V1, P300
   Chen YJ, 2020, LECT NOTES COMPUT SC, V12225, P587, DOI 10.1007/978-3-030-53291-8_30
   Correia A, 2020, SCI COMPUT PROGRAM, V201, DOI [10.1016/j.scico.2020.102536, DOI 10.1016/J.SCICO.2020.102536]
   Devlin J, 2017, PR MACH LEARN RES, V70
   Forstenlechner S, 2017, LECT NOTES COMPUT SC, V10196, P262, DOI 10.1007/978-3-319-55696-3_17
   Gaudesi M, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P925
   Gaunt AL, 2016, ARXIV PREPRINT ARXIV
   Gulwani S, 2017, LECT NOTES COMPUT SC, V10695, P3, DOI 10.1007/978-3-319-71237-6_1
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heumann C., 2016, INTRO STAT DATA ANAL
   Krawiec K, 2016, STUD COMPUT INTELL, V618, P1, DOI 10.1007/978-3-319-27565-9
   Lee W, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P436, DOI [10.1145/3192366.3192410, 10.1145/3296979.3192410]
   Mandal S, 2021, PROC MACH LEARN SYST, V3
   Milicevic A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P609, DOI [10.1109/ICSE.2015.77, 10.1007/s10703-016-0267-2]
   Parisotto E., 2016, Actor-mimic: Deep multitask and transfer reinforcement learning
   Reynolds A., 2019, P INT C COMP AID VER, P74
   Ristad ES, 1998, IEEE T PATTERN ANAL, V20, P522, DOI 10.1109/34.682181
   Schkufza E, 2013, ACM SIGPLAN NOTICES, V48, P305, DOI 10.1145/2499368.2451150
   Solar-Lezama A, 2009, LECT NOTES COMPUT SC, V5904, P4, DOI 10.1007/978-3-642-10672-9_3
   Spector L, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1689
   Torlak E, 2013, P 2013 ACM INT S NEW, P135, DOI DOI 10.1145/2509578.2509586
   White DR, 2013, GENET PROGRAM EVOL M, V14, P3, DOI 10.1007/s10710-012-9177-2
   Zohar A., 2018, ARXIV PREPRINT ARXIV
NR 27
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2022
VL 52
IS 5
BP 1294
EP 1304
DI 10.1002/spe.3054
EA NOV 2021
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0G4IQ
UT WOS:000720890800001
DA 2024-07-18
ER

PT J
AU Marimuthu, SK
   Gopalasamy, SK
   Ben-Othman, J
AF Marimuthu, Satheesh Kumar
   Gopalasamy, Srinivasagan Kalampatti
   Ben-Othman, Jalel
TI Intelligent antiphishing framework to detect phishing scam: A hybrid
   classification approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE datasets; machine learning; malicious URL; phishing links; phishing
   detection; URL attributes
AB In the inevitably hi-tech universe of cybercrimes, one of the major still prevailing methods is the usage of the malicious URLs and creating a Phishing link to obtain user credentials from the people. This method is highly subtle and has more effect on people's lives as well as corporate loss. To identify the malicious URLs, the security community has listed blacklists and benign links online. Still, as the technology is being developed day by day, the attackers try to create new phishing URLs using new social engineering methods that could be easily forged into the user's account. To improve the generality of malicious URL detectors, machine-learning techniques have been explored with increasing attention in recent years. This article addresses the detection of malicious URLs combining the intelligence of both the heuristic-based method and the machine learning process. It has been found that there are many possibilities for detecting zero-day attacks and spear-phishing attacks when incorporating both lexical features and machine learning methods. Out of the six-batch learning process analyzed, we implement a decision tree algorithm in our framework with 99.47% accuracy during evaluation. The true positive values gained in our proposed hybrid framework is 99.2% and indicate <1% of the false-positive values. The implementation shows a precision level higher than the previous model developed and by other antiphishing techniques. A high detection rate on zero-day and spear-phishing attacks and overall results reveal that our system outclasses the current approach to detecting phishing scams.
C1 [Marimuthu, Satheesh Kumar] Natl Engn Coll, Dept Elect & Commun Engn, Kovilpatti 628503, Tamil Nadu, India.
   [Gopalasamy, Srinivasagan Kalampatti] Natl Engn Coll, Dept Comp Sci Engn, Kovilpatti, Tamil Nadu, India.
   [Ben-Othman, Jalel] Univ Paris Saclay, L2S Lab, Cent Supelec, Rue Joliot Curie, Gif Sur Yvette, France.
C3 National Engineering College - India; National Engineering College -
   India; Universite Paris Cite; Universite Paris Saclay
RP Marimuthu, SK (corresponding author), Natl Engn Coll, Dept Elect & Commun Engn, Kovilpatti 628503, Tamil Nadu, India.
EM cyberprof.satheesh@gmail.com
OI M, SATHEESH KUMAR/0000-0002-8113-3715
CR Abdelhamid Neda, 2015, Applied Computing and Informatics, V11, P29, DOI 10.1016/j.aci.2014.07.002
   Adewole KS, 2017, J NETW COMPUT APPL, V79, P41, DOI 10.1016/j.jnca.2016.11.030
   AlShboul R, 2018, COMPUT SECUR, V77, P289, DOI 10.1016/j.cose.2018.04.007
   Amankwah R, 2020, SOFTWARE PRACT EXPER, V50, P1842, DOI 10.1002/spe.2870
   [Anonymous], 2018, ARXIV PREPRINT ARXIV
   Babagoli M, 2019, SOFT COMPUT, V23, P4315, DOI 10.1007/s00500-018-3084-2
   Barona R., 2017, SURVEY DATA BREACH C, DOI [10.1109/ICCPCT.2017.8074287, DOI 10.1109/ICCPCT.2017.8074287]
   Basnet RB, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND COMMUNICATION TECHNOLOGY CICT 2015, P220, DOI 10.1109/CICT.2015.63
   Chang EH, 2013, INT CONF IT CONVERGE
   Chen TC, 2010, ACM T INTERNET TECHN, V10, DOI 10.1145/1754393.1754394
   Chiew KL, 2018, EXPERT SYST APPL, V106, P1, DOI 10.1016/j.eswa.2018.03.050
   Chiew KL, 2015, COMPUT SECUR, V54, P16, DOI 10.1016/j.cose.2015.07.006
   Dunlop Matthew, 2010, Proceedings of the Fifth International Conference on Internet Monitoring and Protection (ICIMP 2010), P123, DOI 10.1109/ICIMP.2010.24
   Farhadi M, 2020, SOFTWARE PRACT EXPER, V50, P973, DOI 10.1002/spe.2804
   Feng Fang, 2024, Journal of Ambient Intelligence and Humanized Computing, V15, P1865, DOI 10.1007/s12652-018-0786-3
   Fette I., 2007, P 16 INT C WORLD WID, P649, DOI DOI 10.1145/1242572.1242660
   Garera S, 2007, WORM'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON RECURRING MALCODE, P1
   Geist V, 2021, SOFTWARE PRACT EXPER, V51, P798, DOI 10.1002/spe.2933
   Gupta BB, 2018, TELECOMMUN SYST, V67, P247, DOI 10.1007/s11235-017-0334-z
   Hadi W, 2016, APPL SOFT COMPUT, V48, P729, DOI 10.1016/j.asoc.2016.08.005
   Huang CR, 2008, PATTERN RECOGN, V41, P3071, DOI 10.1016/j.patcog.2008.03.013
   Huang CY, 2011, J NETW COMPUT APPL, V34, P1292, DOI 10.1016/j.jnca.2011.02.004
   Hwang S, 2020, SOFTWARE PRACT EXPER, V50, P1061, DOI 10.1002/spe.2792
   Jain AK, 2018, TELECOMMUN SYST, V68, P687, DOI 10.1007/s11235-017-0414-0
   Jain AK, 2016, EURASIP J INF SECUR, DOI 10.1186/s13635-016-0034-3
   Javed A, 2022, SOFTWARE PRACT EXPER, V52, P788, DOI 10.1002/spe.2822
   Jiménez P, 2020, SOFTWARE PRACT EXPER, V50, P2169, DOI 10.1002/spe.2886
   Jindal A, 2021, SOFTWARE PRACT EXPER, V51, P1936, DOI 10.1002/spe.2966
   Ko Y, 2019, SOFTWARE PRACT EXPER, V49, P840, DOI 10.1002/spe.2676
   Kumar MS, 2018, IEEE SYMP COMP COMMU, P1199, DOI 10.1109/ISCC.2018.8538354
   Kumar MS., 2019, P 2019 INT C VIS EM, DOI [10.1109/VITECON.2019.8899380, DOI 10.1109/VITECON.2019.8899380]
   Kumar MS, 2019, T EMERG TELECOMMUN T, V30, DOI 10.1002/ett.3590
   Kumaraguru P., 2007, eCrimes Researchers Summit, P70, DOI DOI 10.1145/1299015.1299022
   Liu F., 2020, 37 INT C MACH LEARN, P6272
   Liu WY, 2006, IEEE INTERNET COMPUT, V10, P58, DOI 10.1109/MIC.2006.23
   Louridas P, 2016, IEEE SOFTWARE, V33, P110, DOI 10.1109/MS.2016.114
   Mandal AK, 2019, SOFTWARE PRACT EXPER, V49, P1131, DOI 10.1002/spe.2698
   Mueller M, 2008, J INF TECHNOL POLITI, V5, P303, DOI 10.1080/19331680802425503
   Murai K., 2015, DEV GOOGLE CHROME EX
   Niakanlahiji A, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON INTELLIGENCE AND SECURITY INFORMATICS (ISI), P220, DOI 10.1109/ISI.2018.8587410
   Prakash P, 2010, IEEE INFOCOM SER
   Rao RS, 2019, NEURAL COMPUT APPL, V31, P3851, DOI 10.1007/s00521-017-3305-0
   RondaTroy SS., 2008, ACM SIGOPS OPER SYST, V42, P261, DOI [10.1145/1357010.1352620, DOI 10.1145/1357010.1352620]
   Shaikh AN, 2016, I C SOFTWARE KNOWL I, P9, DOI 10.1109/SKIMA.2016.7916190
   Sheng S., 2007, P 3 S US PRIV SEC, DOI DOI 10.1145/1280680.1280692
   Shreeram V., 2010, 2010 International Conference on Communication Control and Computing Technologies, P447, DOI 10.1109/ICCCCT.2010.5670593
   Smadi S, 2018, DECIS SUPPORT SYST, V107, P88, DOI 10.1016/j.dss.2018.01.001
   Sonowal G, 2020, J KING SAUD UNIV-COM, V32, P99, DOI 10.1016/j.jksuci.2017.07.005
   Tan CL, 2017, LECT NOTES ELECTR EN, V398, P133, DOI 10.1007/978-981-10-1721-6_15
   Teles G, 2021, SOFTWARE PRACT EXPER, V51, P2492, DOI 10.1002/spe.2842
   Tout Hicham, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P347, DOI 10.1109/CSE.2009.306
   Whittaker C., 2010, Large-scale automatic classification of phishing pages
   Xie Y., 2021, SOFTW PRACT EXPER, P1, DOI [10.1002/SPE.2965, DOI 10.1002/SPE.2965]
   Yu Weider D., 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P451, DOI 10.1109/COMPSAC.2009.175
   Zhang Jingfeng., 2020, MAXIMUM MEAN DISCREP
   Zolfaghari B, 2021, SOFTWARE PRACT EXPER, V51, P851, DOI 10.1002/spe.2929
NR 56
TC 1
Z9 1
U1 3
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 459
EP 481
DI 10.1002/spe.3031
EA SEP 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000697898900001
DA 2024-07-18
ER

PT J
AU Liu, HX
   Zhang, MX
   Liu, L
   Liu, Z
AF Liu, Huaxiao
   Zhang, Mengxi
   Liu, Lei
   Liu, Zhou
TI A method to acquire cross-domain requirements based on Syntax Direct
   Technique
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cross-domain; feature extraction; requirement acquisition; Syntax Direct
   Technique
ID KNOWLEDGE
AB With the rapid increase in the number of Apps, the requirement of users has also become extremely complex. Developers have to continuously acquire innovative requirements that provide the guideline for developing more competitive products. However, traditional methods to acquire requirements are not suitable for the App development due to the disadvantage that it cannot interact with users directly. Besides, some methods that use text and data analysis to acquire requirements automatically are hard to expand innovative products because they are often confined to the specific App or the same domain. Therefore, to attract more new users, developers try to find new portable inspiration from other domains for enriching the functions of the App. In this article, we propose a feature extraction method from the descriptions of Apps and use similarity matching to acquire cross-domain requirements. Our experiments have verified that the Precision, the Recall, and the F-measure are all as high as 80% of our feature extraction method. Besides, the requirements list we recommend also makes a good performance in terms of reusability with the average Reuse Rank of 59.33% and average Adjusted Functional Points of 7.49, the adaptability gets an average score of 3.3, and the average score of operability is 3.
C1 [Liu, Huaxiao; Zhang, Mengxi; Liu, Lei; Liu, Zhou] Jilin Univ, Coll Comp Sci & Technol, Changchun, Peoples R China.
   [Liu, Huaxiao; Zhang, Mengxi; Liu, Lei; Liu, Zhou] Jilin Univ, Minist Educ, Key Lab Symbol Computat & Knowledge Engn, Changchun, Peoples R China.
C3 Jilin University; Jilin University
RP Liu, HX (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun, Peoples R China.
EM liuhuaxiao@jlu.edu.cn
RI lei, liu/HTR-5486-2023
OI zhang, mengxi/0000-0003-4380-794X; liu, huaxiao/0000-0002-8151-1413
FU Interdisciplinary Research Funding Program for Doctoral Students of
   Jilin University [101832020DJX064]; National Key Research and
   Development Program of China [2017YFB1003103]; Natural Science Research
   Foundation of Jilin Province of China [20190201193JC]; Graduate
   Innovation Fund of Jilin University [101832020CX181]; Fundamental
   Research Funds for the Central Universities
FX Interdisciplinary Research Funding Program for Doctoral Students of
   Jilin University, Grant/Award Number: 101832020DJX064; National Key
   Research and Development Program of China, Grant/Award Number:
   2017YFB1003103; Natural Science Research Foundation of Jilin Province of
   China under Grant, Grant/Award Number: 20190201193JC; Supported by
   Graduate Innovation Fund of Jilin University, Grant/Award Number:
   101832020CX181; The Fundamental Research Funds for the Central
   Universities
CR Akram J, 2020, SOFTWARE PRACT EXPER, V50, P22, DOI 10.1002/spe.2759
   [Anonymous], 2014, CHABADA
   [Anonymous], 2004, POS TAG
   [Anonymous], 2017, ACM Transactions on Information Systems (TOIS), DOI [DOI 10.1145/3017429, 10.1145/3017429]
   Chen D., 2014, FAST ACCURATE DEPEND
   Devlin J., 2018, BERT PRE TRAINING DE
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Heymans P., 2013, FEATURE MODEL EXTRAC
   Jha N, 2017, LECT NOTES COMPUT SC, V10153, P273, DOI 10.1007/978-3-319-54045-0_20
   Jiang H, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3344158
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Li MY, 2020, IEEE INT CONF AUTOM, P336, DOI 10.1145/3324884.3416627
   Lian XL, 2016, INT REQUIR ENG CONF, P156, DOI 10.1109/RE.2016.50
   Liu C, 2020, SOFTWARE PRACT EXPER, V50, P1778, DOI 10.1002/spe.2845
   Liu XQ, 2018, INT REQUIR ENG CONF, P147, DOI 10.1109/RE.2018.00024
   Liu YZ, 2019, IEEE ACCESS, V7, P9501, DOI 10.1109/ACCESS.2019.2891543
   Liu YZ, 2017, J SYST SOFTWARE, V133, P126, DOI 10.1016/j.jss.2017.08.024
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI [10.1145/3084226.3084241, DOI 10.1145/3084226.3084241]
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Mikolov T., 2013, INT C LEARN REPR SCO, DOI 10.48550/ARXIV.1301.3781
   Padhy N, 2018, COMPUT ELECTR ENG, V69, P653, DOI 10.1016/j.compeleceng.2017.11.022
   VANHAI V, 2019, P COMPUTATIONAL METH, P408
   Wang G, 2014, CHINESE J COMPUT, V36, P119
   Wu SX, 2019, EXPERT SYST APPL, V116, P285, DOI 10.1016/j.eswa.2018.09.024
   Yadav A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P572, DOI [10.1109/saner48275.2020.9054843, 10.1109/SANER48275.2020.9054843]
NR 27
TC 2
Z9 2
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2022
VL 52
IS 1
BP 236
EP 253
DI 10.1002/spe.3015
EA JUN 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8FV
UT WOS:000667514900001
DA 2024-07-18
ER

PT J
AU Rahad, K
   Badreddin, O
   Reza, SM
AF Rahad, Khandoker
   Badreddin, Omar
   Mohsin Reza, Sayed
TI The human in model-driven engineering loop: A case study on integrating
   handwritten code in model-driven engineering repositories
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automated software engineering; code analysis; code comprehension; code
   generation; code smell; forward engineering; handwritten code; model
   driven engineering; technical debt; UML
AB In model-driven engineering (MDE) software projects, large portions of the executable code are automatically generated from designs and models. This generated code may or may not be edited by the developers to achieve their development objectives. MDE projects also include a significant amount of handwritten code (HC). This handwritten code is developed under unique constraints, as it must integrate with generated artifacts and code elements that are not directly developed by the engineers. These constraints adversely affect codebase quality and maintainability. This case study aims to investigate the hypothesis pertaining to the handwritten code quality developed in the context of MDE. The study analyzes these unique code fragments and compares their characteristics to handwritten code in repositories where code generation is not present. The study finds that handwritten code quality in the MDE context suffers from elevated technical debt and code smells. We observe key code smells that are particularly evident in this handwritten code. These findings imply that code generators must optimize for human comprehension, prioritize extensibility, and must facilitate integration with handwritten code elements.
C1 [Rahad, Khandoker; Badreddin, Omar; Mohsin Reza, Sayed] Univ Texas El Paso, Comp Sci, El Paso, TX 79968 USA.
C3 University of Texas System; University of Texas El Paso
RP Rahad, K (corresponding author), Univ Texas El Paso, Comp Sci, El Paso, TX 79968 USA.
EM rahadiit@gmail.com; sreza3@miners.utep.edu
RI Reza, Sayed Mohsin/AAH-8375-2019; Badreddin, Omar/A-8116-2015
OI Reza, Sayed Mohsin/0000-0003-3379-6319; 
CR [Anonymous], 2012, 2012 3rd International Workshop on Managing Technical Debt, MTD 2012-Proceedings, DOI [10.1109/MTD.2012.6225997, DOI 10.1109/MTD.2012.6225997]
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Baddreddin O., 2018, Proceedings of the 28th Annual International Conference on Computer Science and Software Engineering, P236
   Badreddin O, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P245, DOI 10.1145/3239372.3239389
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Cedrim D, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P73, DOI 10.1145/2973839.2973848
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Eclipse Foundation, 2019, GRAPH MOD FRAM ECL M
   Eclipse Foundation, 2019, FIL CLASS GMF EMF
   Evans A, 2009, LECT NOTES COMPUT SC, V5562, P301, DOI 10.1007/978-3-642-02674-4_22
   Fernández-Sáez AM, 2018, EMPIR SOFTW ENG, V23, P3281, DOI 10.1007/s10664-018-9599-4
   Forward A., 2010, P 5 WORKSH COD CENTR
   Giraldo FD., 2014, INFORM SYSTEMS ENG C, P199
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   He X, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P162, DOI 10.1145/2976767.2976806
   Herrmannsdoerfer Markus, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P3
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Izurieta C, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P31, DOI 10.1145/2737182.2737193
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Lenarduzzi V., 2018, P 6 INT C SOFTW ENG, P165
   Louridas P, 2006, IEEE SOFTWARE, V23, P58, DOI 10.1109/MS.2006.114
   Lucredio D., 2012, 2012 Sixth Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS 2012), P101, DOI 10.1109/SBCARS.2012.16
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohsin Reza, 2021, SOFTWARE PRACT EXPER, P1
   Nugroho A, 2014, EMPIR SOFTW ENG, V19, P926, DOI 10.1007/s10664-013-9243-2
   PMD Documentation, 2019, STAT COD AN TOOL
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Seaman C., 2015, SIGSOFT Softw. Eng. Notes, V40, P32, DOI DOI 10.1145/2735399.2735419
   SonarQube Documentation, 2019, STATIC CODE ANAL TOO
   Th?rn C., 2008, P 2008 INT WORKSH MO, P21
   Ho-Quang T, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P203, DOI 10.1109/ICSE-SEIP.2017.28
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
NR 37
TC 4
Z9 4
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1308
EP 1321
DI 10.1002/spe.2957
EA FEB 2021
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000619429700001
DA 2024-07-18
ER

PT J
AU Sreenivas, V
   Namdeo, V
   Kumar, EV
AF Sreenivas, Velagapudi
   Namdeo, Varsha
   Kumar, Eda Vijay
TI Modified deep belief network based human emotion recognition with
   multiscale features from video sequences
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE adaptive butterfly optimization; bilateral filter; deep belief network;
   emotion recognition; geometric features; local binary pattern
AB Emotion recognition from human faces are recently considered as growing topic for the applications in HCI (human-computer interaction) field. Therefore, a new framework is introduced in this method for emotion recognition from video. Human faces may carry huge features which increase the complexity of recognizing the emotions from the give video. Therefore, to minimize such defect, the wrapper based feature selection technique is introduced which reduce the complexity of proposed recognition framework. Initially, the frames from the input video is preprocessed. Next, the features exhibited by each emotions are extracted with geometric and local binary pattern-based feature extraction methods. Then, the features that reduce the performance of recognition technique is avoided using a feature selection algorithm. It selects the features that provides effective result on recognition process. Finally, the selected features are provided to deep belief network (DBN) for emotion recognition. The weight parameter selection of DBN is improved using an efficient Harris Hawk optimization algorithm. The performance of presented architecture is evaluated using a three different datasets they are FAMED, CK+, and MMI. The overall rate shown by proposed architecture is found better than existing methods. Furthermore, the precision, recall, and specificity are also evaluated for six different emotions (angry, disgust, fear, happy, sad, and surprise) in this proposed method. This entire emotion recognition process is implemented in Python platform.
C1 [Sreenivas, Velagapudi; Namdeo, Varsha] SRK Univ, Dept Comp Sci & Engn, Bhopal 462026, Madhya Pradesh, India.
   [Kumar, Eda Vijay] SRK Univ, Dept EEE, Bhopal, Madhya Pradesh, India.
RP Sreenivas, V (corresponding author), SRK Univ, Dept Comp Sci & Engn, Bhopal 462026, Madhya Pradesh, India.
EM velagapudisreenivas@gmail.com
FU European Union's Horizon 2020 research and innovation programme under
   the Marie Sklodowska-Curie Grant [722028]
FX This research is part of the ENIGMA-ITN project that has received
   funding from the European Union's Horizon 2020 research and innovation
   programme under the Marie Sklodowska-Curie Grant Agreement No 722028.
CR Abdulsalam Wisal Hashim, 2019, International Journal of Machine Learning and Computing, V9, P14, DOI 10.18178/ijmlc.2019.9.1.759
   An FP, 2020, VISUAL COMPUT, V36, P483, DOI 10.1007/s00371-019-01635-4
   Bargal SA, 2016, ICMI'16: PROCEEDINGS OF THE 18TH ACM INTERNATIONAL CONFERENCE ON MULTIMODAL INTERACTION, P433, DOI 10.1145/2993148.2997627
   Cai YY, 2016, COMM COM INF SC, V663, P679, DOI 10.1007/978-981-10-3005-5_56
   Chen LF, 2018, INFORM SCIENCES, V428, P49, DOI 10.1016/j.ins.2017.10.044
   Dhall A, 2012, IEEE MULTIMEDIA, V19, P34, DOI 10.1109/MMUL.2012.26
   Fan YR, 2018, ICMI'18: PROCEEDINGS OF THE 20TH ACM INTERNATIONAL CONFERENCE ON MULTIMODAL INTERACTION, P584, DOI 10.1145/3242969.3264978
   Fonnegra RD, 2018, LECT NOTES COMPUT SC, V10901, P397, DOI 10.1007/978-3-319-91238-7_32
   Goyani Mahesh, 2020, International Journal of Computers and Applications, V42, P360, DOI 10.1080/1206212X.2017.1395134
   GUO YAT, 2012, P 2012 INT C INF TEC, P631
   Guo YM, 2016, IEEE T IMAGE PROCESS, V25, P1977, DOI 10.1109/TIP.2016.2537215
   Gupta O, 2018, PATTERN RECOGN, V76, P25, DOI 10.1016/j.patcog.2017.10.017
   Nguyen HD, 2019, INT J PATTERN RECOGN, V33, DOI 10.1142/S0218001419400159
   He ZH, 2019, ICMLC 2019: 2019 11TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND COMPUTING, P374, DOI 10.1145/3318299.3318321
   Hu HM, 2017, NEUROCOMPUTING, V266, P361, DOI 10.1016/j.neucom.2017.05.052
   Hu M, 2019, J VIS COMMUN IMAGE R, V59, P176, DOI 10.1016/j.jvcir.2018.12.039
   Huang J, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH AND SIGNAL PROCESSING (ICASSP), P6837, DOI 10.1109/ICASSP.2018.8461963
   Ilyas BR, 2019, INT C CONTROL DECISI, P344, DOI [10.1109/CoDIT.2019.8820410, 10.1109/codit.2019.8820410]
   Jain DK, 2019, PATTERN RECOGN LETT, V120, P69, DOI 10.1016/j.patrec.2019.01.008
   Jain N, 2018, PATTERN RECOGN LETT, V115, P101, DOI 10.1016/j.patrec.2018.04.010
   Jangid M, 2019, ADV INTELL SYST, V924, P653, DOI 10.1007/978-981-13-6861-5_55
   Kahou SE, 2015, ICMI'15: PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON MULTIMODAL INTERACTION, P467, DOI 10.1145/2818346.2830596
   Khorrami P, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON COMPUTER VISION WORKSHOP (ICCVW), P19, DOI 10.1109/ICCVW.2015.12
   Li CD, 2018, ENERGIES, V11, DOI 10.3390/en11010242
   Li RQ, 2019, MULTIMED TOOLS APPL, V78, P28971, DOI 10.1007/s11042-018-6133-z
   Li SN, 2019, ICMI'19: PROCEEDINGS OF THE 2019 INTERNATIONAL CONFERENCE ON MULTIMODAL INTERACTION, P589, DOI 10.1145/3340555.3355719
   Lopes AT, 2017, PATTERN RECOGN, V61, P610, DOI 10.1016/j.patcog.2016.07.026
   Mao QR, 2014, IEEE T MULTIMEDIA, V16, P2203, DOI 10.1109/TMM.2014.2360798
   Mistry K, 2017, IEEE T CYBERNETICS, V47, P1496, DOI 10.1109/TCYB.2016.2549639
   Moayedi H, 2021, ENG COMPUT-GERMANY, V37, P369, DOI 10.1007/s00366-019-00828-8
   Pan XZ, 2019, SYMMETRY-BASEL, V11, DOI 10.3390/sym11010052
   Priya, 2018, J KING SAUD UNIV-COM, P1
   Ngoc QT, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9050764
   Singh B, 2018, INT J COMPUT MAT SCI, V7, DOI 10.1142/S2047684118500264
   Sreedharan NPN, 2018, IET BIOMETRICS, V7, P490, DOI 10.1049/iet-bmt.2017.0160
   Sreenivas V., 2021, SOFTWARE PRACT EXPER, P1
   Zhao GY, 2007, IEEE T PATTERN ANAL, V29, P915, DOI 10.1109/TPAMI.2007.1110
NR 37
TC 4
Z9 4
U1 0
U2 34
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1259
EP 1279
DI 10.1002/spe.2955
EA FEB 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000618047100001
DA 2024-07-18
ER

PT J
AU Guo, KH
   Li, N
   Kang, J
   Zhang, J
AF Guo, Kehua
   Li, Nan
   Kang, Jian
   Zhang, Jian
TI Towards efficient federated learning-based scheme in
   medicalcyber-physicalsystems for distributed data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE computer-aided diagnosis; distributed data; federated learning; medical
   cyber-physical systems; model fusion
AB In recent years, Cyber-Physical Systems (CPS) and Artificial Intelligence (AI) have made good progress in the medical field. The medical CPS (MCPS) based on AI can realize the efficient and reasonable utilization of medical resources and improve the quality of medical process. However, current MCPS are still facing several challenges, and the privacy protection of medical data is one of the most critical challenges. Since medical data is stored in different hospitals, most studies collect data from decentralized hospitals to train a disease diagnosis model, which is not conducive to the privacy protection of patients. And in some existing solutions, it is also difficult for doctors to select the optimal model from multiple models in clinical diagnosis. In this paper, we propose a novel scheme based on federated learning in MCPS for training disease diagnosis models from distributed medical image data. Our scheme is divided into three parts: the model provider, the server, and the consumer, and a detailed working process is designed for each part. This scheme can not only effectively solve the problem of privacy protection, but also solve the problem of model selection for doctors and save storage space. It can ensure that consumers automatically get a steadily improved disease diagnosis model. This scheme is performed on simulated distributed medical image datasets. The experimental results show the effectiveness and superiority of our scheme.
C1 [Guo, Kehua; Li, Nan; Zhang, Jian] Cent South Univ, Sch Engn & Comp Sci, Changsha, Peoples R China.
   [Kang, Jian] Cent South Univ, Xiangya Hosp 3, Dept Dermatol, Changsha, Peoples R China.
C3 Central South University; Central South University
RP Zhang, J (corresponding author), Cent South Univ, Sch Engn & Comp Sci, Changsha, Peoples R China.
EM csu_jianzhang@263.net
FU 111 project [B18059]; Earmarked Fund for China Agriculture Research
   System; Fundamental Research Funds for the Central Universities of
   Central South University [2019zzts962]; National Science Foundation of
   Hunan Province, China [2019JJ20025, 2019JJ40406]; Natural Science
   Foundation of China [61502540, 61672535, 61977062]
FX 111 project, Grant/Award Number: B18059; Earmarked Fund for China
   Agriculture Research System; Fundamental Research Funds for the Central
   Universities of Central South University, Grant/Award Number:
   2019zzts962; National Science Foundation of Hunan Province, China,
   Grant/Award Numbers: 2019JJ20025, 2019JJ40406; Natural Science
   Foundation of China, Grant/Award Numbers: 61502540, 61672535, 61977062
CR BENGIO Y, 1994, IEEE T NEURAL NETWOR, V5, P157, DOI 10.1109/72.279181
   Brisimi TS, 2018, INT J MED INFORM, V112, P59, DOI 10.1016/j.ijmedinf.2018.01.007
   Chen Fei, 2018, ARXIV180207876
   CONG P, 2020, IEEE T CLOUD COMPUT
   Cui J, 2019, FUTURE GENER COMP SY, V97, P578, DOI 10.1016/j.future.2019.03.026
   Dzwonkowski M, 2015, IEEE T IMAGE PROCESS, V24, P4614, DOI 10.1109/TIP.2015.2467317
   Esteva A, 2017, NATURE, V542, P115, DOI 10.1038/nature21056
   Frangi AF, 2018, IEEE T MED IMAGING, V37, P673, DOI 10.1109/TMI.2018.2800298
   Gibson E, 2018, COMPUT METH PROG BIO, V158, P113, DOI 10.1016/j.cmpb.2018.01.025
   Glorot X., 2010, INT C ARTIFICIAL INT, P249
   Gosman C, 2018, FUTURE GENER COMP SY, V78, P807, DOI 10.1016/j.future.2016.12.014
   Guo K., 2018, COMPUT SCI ENG, P1
   Havaei M, 2017, MED IMAGE ANAL, V35, P18, DOI 10.1016/j.media.2016.05.004
   He K., 2016, PROC CVPR IEEE, P770, DOI [10.1109/CVPR.2016.90, DOI 10.1109/CVPR.2016.90]
   Heurix J, 2016, MED BIOL ENG COMPUT, V54, P371, DOI 10.1007/s11517-015-1322-7
   Izmailov P, 2018, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, P876
   Jin Peter H, 2016, ARXIV PREPRINT ARXIV
   Keuper J, 2016, PROCEEDINGS OF 2016 2ND WORKSHOP ON MACHINE LEARNING IN HPC ENVIRONMENTS (MLHPC), P19, DOI [10.1109/MLHPC.2016.6, 10.1109/MLHPC.2016.006]
   Konecny J, 2016, ARXIV161005492
   Lee I, 2012, P IEEE, V100, P75, DOI 10.1109/JPROC.2011.2165270
   Li LY, 2021, IEEE T COMPUT, V70, P581, DOI 10.1109/TC.2020.2991177
   Litjens G, 2017, MED IMAGE ANAL, V42, P60, DOI 10.1016/j.media.2017.07.005
   Liu J, 2013, J AM MED INFORM ASSN, V20, P1021, DOI 10.1136/amiajnl-2012-001336
   Long EP, 2017, NAT BIOMED ENG, V1, DOI 10.1038/s41551-016-0024
   McMahan HB, 2017, PR MACH LEARN RES, V54, P1273
   Meng WZ, 2020, FUTURE GENER COMP SY, V108, P1258, DOI 10.1016/j.future.2018.06.007
   Nishio T, 2019, IEEE ICC
   Rahman MA, 2021, IEEE SYST J, V15, P46, DOI 10.1109/JSYST.2020.2975592
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Szegedy Christian, 2015, IEEE C COMP VIS PATT, DOI [10.1109/cvpr.2015.7298594, DOI 10.1109/CVPR.2015.7298594]
   Yang Y, 2019, INFORM SCIENCES, V479, P567, DOI 10.1016/j.ins.2018.02.005
   Zhang JH, 2019, IEEE T IND ELECTRON, V66, P9673, DOI 10.1109/TIE.2018.2880727
NR 32
TC 5
Z9 5
U1 1
U2 41
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2274
EP 2289
DI 10.1002/spe.2894
EA SEP 2020
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000573387700001
DA 2024-07-18
ER

PT J
AU Kim, T
   Behm, A
   Blow, M
   Borkar, V
   Bu, YY
   Carey, MJ
   Hubail, M
   Jahangiri, S
   Jia, JF
   Li, C
   Luo, C
   Maxon, I
   Pirzadeh, P
AF Kim, Taewoo
   Behm, Alexander
   Blow, Michael
   Borkar, Vinayak
   Bu, Yingyi
   Carey, Michael J.
   Hubail, Murtadha
   Jahangiri, Shiva
   Jia, Jianfeng
   Li, Chen
   Luo, Chen
   Maxon, Ian
   Pirzadeh, Pouria
TI Robust and efficient memory management in Apache AsterixDB
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Apache AsterixDB; big data management system; group by; hash join;
   inverted-index search; memory management; sort
ID ALGORITHMS; HASH
AB Traditional relational database systems handle data by dividing their memory into sections such as a buffer cache and working memory, assigning a memory budget to each section to efficiently manage a limited amount of overall memory. They also assign memory budgets to memory-intensive operators such as sorts and joins and control the allocation of memory to these operators; each memory-intensive operator attempts to maximize its memory usage to reduce disk I/O cost. Implementing such memory-intensive operators requires a careful design and application of appropriate algorithms that properly utilize memory. Today's Big Data management systems need the ability to handle large amounts of data similarly, as it is unrealistic to assume that truly big data will fit into memory. In this article, we share our memory management experiences in Apache AsterixDB, an open-source Big Data management software platform that scales out horizontally on shared-nothing commodity computing clusters. We describe the implementation of AsterixDB's memory-intensive operators and their designs related to memory management. We also discuss memory management at the global (cluster) level. We conducted an experimental study using several synthetic and real datasets to explore the impact of this work. We believe that future Big Data management system builders can benefit from these experiences.
C1 [Kim, Taewoo; Carey, Michael J.; Jahangiri, Shiva; Li, Chen; Luo, Chen; Maxon, Ian] Univ Calif Irvine, Dept Comp Sci, Irvine, CA 92697 USA.
   [Behm, Alexander; Borkar, Vinayak; Bu, Yingyi; Hubail, Murtadha; Jia, Jianfeng; Pirzadeh, Pouria] Univ Calif Irvine, Irvine, CA USA.
   [Blow, Michael; Hubail, Murtadha] Couchbase, Santa Clara, CA USA.
C3 University of California System; University of California Irvine;
   University of California System; University of California Irvine
RP Kim, T (corresponding author), Univ Calif Irvine, Dept Comp Sci, Irvine, CA 92697 USA.
EM taewok2@uci.edu
RI Luo, Chen/AAA-9615-2020
OI Luo, Chen/0000-0002-2180-7749; Jahangiri, Shiva/0009-0001-4854-0597;
   Kim, Taewoo/0000-0003-2841-6385; Li, Chen/0000-0001-8015-6870
FU Amazon; eBay; Facebook; Google; HTC; Infosys; Initial UC Discovery
   agent; Microsoft; NSF; Oracle Labs; Yahoo! Research
FX Amazon; eBay; Facebook; Google; HTC; Infosys; Initial UC Discovery
   agent; Microsoft; NSF; Oracle Labs; Yahoo! Research
CR Alsubaiee S, 2014, PROC VLDB ENDOW, V7, P841, DOI 10.14778/2732951.2732958
   Alsubaiee S, 2014, PROC VLDB ENDOW, V7, P1905, DOI 10.14778/2733085.2733096
   [Anonymous], 1973, The art of computer programming
   Appuswamy R., 2017, PROC 8 BIENNIAL C IN, P1
   Balkesen Ç, 2015, IEEE T KNOWL DATA EN, V27, P1754, DOI 10.1109/TKDE.2014.2313874
   Borkar V, 2015, ACM SOCC'15: PROCEEDINGS OF THE SIXTH ACM SYMPOSIUM ON CLOUD COMPUTING, P422, DOI 10.1145/2806777.2806941
   Borkar V, 2011, PROC INT CONF DATA, P1151, DOI 10.1109/ICDE.2011.5767921
   Bu YY, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P119
   Chamberlin D., 2018, SQL++ For SQL Users: A Tutorial
   Cheng XT, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P657, DOI 10.1145/3132847.3132916
   Davison D.L., 1994, VLDB 94 P 20 INT C V, P379
   Dayan N, 2018, ACM T DATABASE SYST, V43, DOI 10.1145/3276980
   Dewitt DJ, 1984, P 1984 ACM SIGMOD IN
   EFFELSBERG W, 1984, ACM T DATABASE SYST, V9, P560, DOI 10.1145/1994.2022
   GRAEFE G, 1993, COMPUT SURV, V25, P73, DOI 10.1145/152610.152611
   Graefe G, 2007, P 3 INT WORKSH DAT M, P6
   Graefe G, 2003, P CIDR 2003 1 BIENN
   Graefe G, 2006, ACM COMPUT SURV, V38, DOI 10.1145/1132960.1132964
   Gray J., 1987, SIGMOD Record, V16, P395, DOI 10.1145/38714.38755
   Gray J., 1997, SIGMOD Record, V26, P63, DOI 10.1145/271074.271094
   Gray J., 1993, The Wisconsin Benchmark: Past, Present, and Future
   Hwee Hwa Pang, 1993, 19th International Conference on Very Large Data Bases Proceedings, P618
   Jha S, 2015, PROC VLDB ENDOW, V8, P642, DOI 10.14778/2735703.2735704
   JOKINEN P, 1991, LECT NOTES COMPUT SC, V520, P240
   Kim T., 2018, EDBT, P528
   KITSUREGAWA M, 1983, NEW GENERAT COMPUT, V1, P63, DOI 10.1007/BF03037022
   Li C, 2008, PROC INT CONF DATA, P257, DOI 10.1109/ICDE.2008.4497434
   Ong KW, 2014, CORR, P1
   Pang H. H., 1993, SIGMOD Record, V22, P59, DOI 10.1145/170036.170051
   SHAPIRO LD, 1986, ACM T DATABASE SYST, V11, P239, DOI 10.1145/6314.6315
   Xu Q., 2015, ASS COMPUTING MACHIN, P1
   ZELLER H, 1990, VERY LARGE DATA BASES, P186
   Zhang W, 1996, P 1996 CASCON TOR CA
   Zhang WY, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P376
NR 34
TC 8
Z9 11
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1114
EP 1151
DI 10.1002/spe.2799
EA FEB 2020
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT6RF
UT WOS:000513799000001
DA 2024-07-18
ER

PT J
AU Kang, J
   Lim, J
   Yu, H
AF Kang, JiHun
   Lim, JongBeom
   Yu, HeonChang
TI Partial migration technique for GPGPU tasks to Prevent GPU Memory
   Starvation in RPC-based GPU Virtualization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; GPU Virtualization; resource management; task migration
AB Graphics processing unit (GPU) virtualization technology enables a single GPU to be shared among multiple virtual machines (VMs), thereby allowing multiple VMs to perform GPU operations simultaneously with a single GPU. Because GPUs exhibit lower resource scalability than central processing units (CPUs), memory, and storage, many VMs encounter resource shortages while running GPU operations concurrently, implying that the VM performing the GPU operation must wait to use the GPU. In this paper, we propose a partial migration technique for general-purpose graphics processing unit (GPGPU) tasks to prevent the GPU resource shortage in a remote procedure call-based GPU virtualization environment. The proposed method allows a GPGPU task to be migrated to another physical server's GPU based on the available resources of the target's GPU device, thereby reducing the wait time of the VM to use the GPU. With this approach, we prevent resource shortages and minimize performance degradation for GPGPU operations running on multiple VMs. Our proposed method can prevent GPU memory shortage, improve GPGPU task performance by up to 14%, and improve GPU computational performance by up to 82%. In addition, experiments show that the migration of GPGPU tasks minimizes the impact on other VMs.
C1 [Kang, JiHun; Yu, HeonChang] Korea Univ, Dept Comp Sci & Engn, 145 Anam Ro, Seoul, South Korea.
   [Lim, JongBeom] Korea Polytech Univ, Dept Game & Multimedia Engn, Gyeonggi Do, Siheung Si, South Korea.
C3 Korea University; Korea Polytechnic University
RP Yu, H (corresponding author), Korea Univ, Dept Comp Sci & Engn, 145 Anam Ro, Seoul, South Korea.
EM yuhc@korea.ac.kr
OI Yu, Heonchang/0000-0003-2216-595X
FU Institute for Information & communications Technology Promotion
   [2018-0-00480]; MSIT [IITP-2018-0-01405]
FX Institute for Information & communications Technology Promotion,
   2018-0-00480; MSIT, IITP-2018-0-01405
CR Amazon, AM GPU INST
   [Anonymous], 2013, AMD ACC PAR PROC OPE
   [Anonymous], CUDA: Compute Unified Device Architecture
   [Anonymous], 2003, ACM SIGOPS OPERATING
   [Anonymous], 2012, CUDA C PROGRAMMING G
   Deshpande U, 2018, IEEE T CLOUD COMPUT, V6, P196, DOI 10.1109/TCC.2015.2481424
   Duato Jose, 2010, 2010 International Conference on High Performance Computing & Simulation (HPCS 2010), P224, DOI 10.1109/HPCS.2010.5547126
   Gelado I, 2019, PROCEEDINGS OF THE 24TH SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING (PPOPP '19), P27, DOI 10.1145/3293883.3295727
   Gleeson James., 2017, Proceedings of the 10th ACM International Systems and Storage Conference, P1
   Google, GOOGL COMP ENG
   Kaur P, 2015, INT J GRID DISTRIB, V8, P337, DOI 10.14257/ijgdc.2015.8.5.33
   Kehne J, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2817817.2731192, 10.1145/2731186.2731192]
   Khronos Group, OPENCL OP COMP LANG
   Li PC, 2017, ACM T ARCHIT CODE OP, V14, DOI 10.1145/3046678
   Ma JC, 2018, ACM SIGPLAN NOTICES, V53, P31, DOI 10.1145/3186411.3186414
   Melhem SB, 2018, IEEE ACCESS, V6, P7190, DOI 10.1109/ACCESS.2017.2785280
   Prades J, 2017, INT CONF PARA PROC, P129, DOI 10.1109/ICPPW.2017.30
   Sani AA, 2014, ACM SIGPLAN NOTICES, V49, P319, DOI 10.1145/2541940.2541943
   Shi L, 2012, IEEE T COMPUT, V61, P804, DOI 10.1109/TC.2011.112
   Shucai Xiao, 2012, Proceedings of the 2012 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2012), P124, DOI 10.1109/CCGrid.2012.26
   Suzuki Y., 2014, Proceedings of the 2014 USENIX Annual Technical Conference, P109
   Syed HJ, 2018, IEEE ACCESS, V6, P44591, DOI 10.1109/ACCESS.2018.2864573
   Tian K., 2014, 2014 USENIX ANN TECH, P121
   Tien TR, 2014, SOFTWARE PRACT EXPER, V44, P483, DOI 10.1002/spe.2166
   Xen Projec, VGA PASSTHR
   Xiao S., 2012, 2012 Innovative Parallel Computing (InPar), P1
   Yang YD, 2018, IEEE T PARALL DISTR, V29, P1416, DOI 10.1109/TPDS.2018.2790389
NR 27
TC 2
Z9 2
U1 3
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2020
VL 50
IS 6
BP 948
EP 972
DI 10.1002/spe.2801
EA FEB 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK4IJ
UT WOS:000512469700001
DA 2024-07-18
ER

PT J
AU Ahn, S
   Lee, J
   Kim, J
   Lee, JR
AF Ahn, Sunil
   Lee, Jeongcheol
   Kim, Jaesung
   Lee, JongSuk R.
TI EDISON-DATA: A flexible and extensible platform for processing and
   analysis of computational science data
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE analysis; computational science data; EDISON; flexible; platform
ID INFRASTRUCTURE
AB With the recent emergence of new paradigm, ie, open science and big data, the need for data sharing and collaboration is becoming important in the computational science field as well. The EDISON-DATA platform aims to provide services that computational simulation data can easily published, preserved, shared, reused, discovered, and analyzed. First, this paper analyzed computational science platform-related issues, obtained during the development of the EDISON-DATA platform, regarding the sharing and reusing of the computational science data. These issues include data complexity, diversity, reliability, heterogeneity, etc. To solve the above issues and support data analysis in an efficient and integrated manner, this study proposes various ideas used in the EDISON-DATA platform. First, we suggested an automated preprocessing framework to handle the complexity of computational science data. Second, to solve the diversity issue, we presented ways to develop preprocessing logic and data presentation logic customized for each data type. Third, to improve the reliability of computational science data, some quality control and provenance management techniques were presented. Fourth, we proposed a way to manage related data in groups. Fifth, to solve data heterogeneity problem and to analyze data in an integrated way, we let the preprocessing framework to use controlled vocabularies to express descriptive metadata. Lastly, we demonstrated feasibility and usability of the proposed ideas in this paper by presenting a case study of building a research portal service in the materials field based on the EDISON-DATA platform.
C1 [Ahn, Sunil; Lee, Jeongcheol; Kim, Jaesung; Lee, JongSuk R.] Korea Inst Sci & Technol Informat, 245 Daehak Ro, Daejeon 34141, South Korea.
C3 Korea Institute of Science & Technology Information (KISTI)
RP Kim, J (corresponding author), Korea Inst Sci & Technol Informat, 245 Daehak Ro, Daejeon 34141, South Korea.
EM jskim0116@kisti.re.kr
FU National Research Foundation of Korea (NRF); Ministry of Science, ICT &
   Future Planning [NRF-2011-0020576]; KISTI Program [K-18-L12]
FX National Research Foundation of Korea (NRF); Ministry of Science, ICT &
   Future Planning, Grant/Award Number: NRF-2011-0020576; KISTI Program,
   Grant/Award Number: K-18-L12
CR Ahn S, 2018, 10 INT C INT ICONI P
   [Anonymous], 2011 6 INT C PERV CO
   [Anonymous], 2017, 8259 RFC
   [Anonymous], 2003, DSPACE OPEN SOURCE D
   Chekanov SV, 2015, ADV HIGH ENERGY PHYS, V2015, DOI 10.1155/2015/136093
   Corlosquet S, 2009, INT SEM WEB C CUANT
   De Volder K, 2006, INT S PRACT ASP DECL
   Dirk M, 2014, LINUX J, V2014
   Ghiringhelli LM, 2015, PHYS REV LETT, V114, DOI 10.1103/PhysRevLett.114.105503
   Giannozzi P, 2017, J PHYS-CONDENS MAT, V29, DOI 10.1088/1361-648X/aa8f79
   Gormley C., 2015, ELASTICSEARCH DEFINI
   Gourley D, 2010, EUR C LEM CYPR
   Groth P., 2013, PROV OVERVIEW OVERVI
   Hafner J, 2008, J COMPUT CHEM, V29, P2044, DOI 10.1002/jcc.21057
   Hospital A, 2016, NUCLEIC ACIDS RES, V44, pD272, DOI 10.1093/nar/gkv1301
   Hou Z, 2017, INT WORKSH MAT GEN I
   Jain A, 2013, APL MATER, V1, DOI 10.1063/1.4812323
   Jain Nilesh., 2015, Journal of Global Research in Computer Science, V5, P17
   Kacsuk P, 2012, J GRID COMPUT, V10, P601, DOI 10.1007/s10723-012-9240-5
   Karasti H., 2006, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V15, P321, DOI 10.1007/s10606-006-9023-2
   King G, 2007, SOCIOL METHOD RES, V36, P173, DOI 10.1177/0049124107306660
   Klimeck G, 2008, COMPUT SCI ENG, V10, P17, DOI 10.1109/MCSE.2008.120
   Kumar H, 2013, J NONLINEAR OPT PHYS, V22, DOI 10.1142/S021886351350001X
   Kurtzer GM, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177459
   Lee Sunghee, 2018, [Journal of Internet Computing and Services, 인터넷정보학회논문지], V19, P123, DOI 10.7472/jksii.2018.19.1.123
   Lehmann J, 2015, SEMANT WEB, V6, P167, DOI 10.3233/SW-140134
   Magazine D.-L., 2012, D-Lib Magazine, V18
   McLennan M, 2010, COMPUT SCI ENG, V12, P48, DOI 10.1109/MCSE.2010.41
   Meyer T, 2010, STRUCTURE, V18, P1399, DOI 10.1016/j.str.2010.07.013
   Ogata T, 2012, HARN MAT GEN ACC MAT
   Payette S, 1998, INT C THEOR PRACT DI
   Pezoa F, 2016, P 25 INT C WORLD WID
   Pizzi G, 2016, COMP MATER SCI, V111, P218, DOI 10.1016/j.commatsci.2015.09.013
   Saal JE, 2013, JOM-US, V65, P1501, DOI 10.1007/s11837-013-0755-4
   Sarang P., 2009, Practical Liferay: Java-based Portal Applications Development
   Shvachko K, 2010, IEEE S MASS STOR SYS
   Strang G., 2007, Computational Science and Engineering
   Thibault JC, 2013, J CHEM INF MODEL, V53, P726, DOI [10.1021/ci300524J, 10.1021/ci300524j]
   Van de Sompel H., 2004, D LIB MAGAZINE, V10
   van der Kamp MW, 2010, STRUCTURE, V18, P423, DOI 10.1016/j.str.2010.01.012
   Ward L, 2016, NPJ COMPUT MATER, V2, DOI 10.1038/npjcompumats.2016.28
   Winn J, 2013, IASSIST C 2013 COL G
   Xu YB, 2011, JPN J APPL PHYS, V50, DOI 10.1143/JJAP.50.11RH02
   Yamazaki M, 2009, ASME 2009 PRESS VESS
   Yu J, 2013, FUTURE INFORM COMMUN, P283
NR 45
TC 2
Z9 3
U1 1
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2019
VL 49
IS 10
BP 1509
EP 1530
DI 10.1002/spe.2732
EA AUG 2019
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU8BK
UT WOS:000480357900001
DA 2024-07-18
ER

PT J
AU Yu, HS
   Qi, H
   Li, KQ
AF Yu, Haisheng
   Qi, Heng
   Li, Keqiu
TI A powerful software-defined cyber-physical system to expand CPS adoption
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE CPSS; OpenFlow; software-defined networking
AB The cyber-physical system (CPS) has become a promising direction that can enrich the interaction between people and people, people and objects, objects and objects in the physical world and the virtual world. Because of the development of CPS, the number and types of smart device connected to the Internet has rapidly increased, bringing with it the current issues of flexibility, efficiency, availability, security, and scalability of the Internet-of-Things (IoT) network. These problems are caused by the key mechanism of large-scale distribution to the IoT network. In this article, we propose CPSS inspired by software-defined networking (SDN) and service-oriented architecture, which is a powerful software-defined cyber-physical system to solve the challenges of broader CPS adoption. CPSS has three complementary modules: application-as-a-service (AAAS), network-as-a-service (NAAS), and infrastructure-as-a-service (IAAS). IAAS collects network information from a different set of controllers and devices and generates a domain-wide network view. NAAS collects information from different domains and generates a global view, which helps data transmission between different domains and enables seamless switching between applications and infrastructure devices. AAAS provides personalized service for each user. To test CPSS, we develop a prototype system. Our experimental results show that CPSS can effectively control cyber-physical system, and CPSS has greatly improved network latency, network throughput, and network reliability compared to traditional controller-controlled CPS.
C1 [Yu, Haisheng; Qi, Heng; Li, Keqiu] Dalian Univ Technol, Fac Elect Informat & Elect Engn, Dalian 116024, Peoples R China.
   [Yu, Haisheng] 2 Linggong Rd, Dalian 116023, Peoples R China.
C3 Dalian University of Technology
RP Yu, HS (corresponding author), Dalian Univ Technol, Fac Elect Informat & Elect Engn, Dalian 116024, Peoples R China.
EM yuhaisheng1@gmail.com
RI Yu, Haisheng/AAE-7650-2022
OI Yu, Haisheng/0000-0002-9940-3728
FU State Key Program of National Natural Science of China [61432002];
   National Natural Science Foundation of China [61772112, 61672379,
   61602226, 61751203]
FX The State Key Program of National Natural Science of China, Grant/Award
   Number: 61432002; National Natural Science Foundation of China,
   Grant/Award Number: 61772112, 61672379, 61602226 and 61751203
CR Ali S, 2018, STUD COMPUT INTELL, V768, P141, DOI 10.1007/978-3-319-75880-0_7
   [Anonymous], 2009, Technical report
   BIONETS, BIONESTS BIOINSP SER
   Burns A, 2015, IEEE REAL TIM SYST S
   Burns A, 2013, 25 EUR C REAL TIM SY
   Cardenas AA, 2010, 1 WORKSH CYB PHYS SY
   Casado M., 2012, Proceedings of the first workshop on Hot topics in software defined networks, P85
   Gude N, 2008, ACM SIGCOMM COMP COM, V38, P105, DOI 10.1145/1384609.1384625
   Hong C.Y., 2013, P ACM SIGCOMM 2013 C
   Jain S., 2013, P ACM SIGCOMM 2013 C
   Koponen T., 2010, 9 USENIX S OP SYST D
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lee EA, 2015, SENSORS-BASEL, V15, P4837, DOI 10.3390/s150304837
   Lee EdwardA., 2007, Computing foundations and practice for cyber-physical systems: A preliminary report
   Monsanto Christopher, 2013, 10 USENIX S NETW SYS, P1
   Named Data Networking, NAM DAT NETW COMM M
   *NAT SCI FDN, FIND NSF NETS FIND I
   Persson M, 2015, PROCEDIA COMPUT SCI, V60, P1697, DOI 10.1016/j.procs.2015.08.279
   Qiu T, 2017, IEEE ACM T NETWORK, V25, P2944, DOI [10.1109/TMC.2017.2702670, 10.1109/TNET.2017.2713530]
   Raghavan B, 2012, PROCEEDINGS OF THE 11TH ACM WORKSHOP ON HOT TOPICS IN NETWORKS (HOTNETS-XI), P43
   Reitblatt Mark, 2011, P 10 ACM WORKSH HOT, P1
   Vinel A, 2018, IEEE COMMUN LETT, V22, P1600, DOI 10.1109/LCOMM.2018.2835484
   Wang L., 2018, Cloud-based cyber-physical systems in manufacturing
   Won Y, 2018, COMPUTER, V51, P46, DOI 10.1109/MC.2018.2876054
   Yu ML, 2010, ACM SIGCOMM COMP COM, V40, P351, DOI 10.1145/1851275.1851224
   Zhong MZ, 2019, NPJ 2D MATER APPL, V3, DOI 10.1038/s41699-018-0083-1
NR 26
TC 1
Z9 1
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 904
EP 916
DI 10.1002/spe.2728
EA JUL 2019
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000475052900001
DA 2024-07-18
ER

PT J
AU Mandal, AK
   Panarotto, F
   Cortesi, A
   Ferrara, P
   Spoto, F
AF Mandal, Amit Kr
   Panarotto, Federica
   Cortesi, Agostino
   Ferrara, Pietro
   Spoto, Fausto
TI Static analysis of Android Auto infotainment and on-board diagnostics II
   apps
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE abstract interpretation; Android auto security; in-vehicle infotainment
   system; ODB-II app security; static analysis
AB Smartphone and automotive technologies are rapidly converging, letting drivers enjoy communication and infotainment facilities and monitor in-vehicle functionalities, via on-board diagnostics (OBD) technology. Among the various automotive apps available in playstores, Android Auto infotainment and OBD-II apps are widely used and are the most popular choice for smartphone to car interaction. Automotive apps have the potential of turning cars into smartphones on wheels but can be also the gateway of attacks. This paper defines a static analysis that identifies potential security risks in Android infotainment and OBD-II apps. It identifies a set of potential security threats and presents an actual static analyzer for such apps. It has been applied to most of the highly rated infotainment apps available in the Google Play store, as well as on the available open-source OBD-II apps, against a set of possible exposure scenarios. Results show that almost 60% of such apps are potentially vulnerable and that 25% pose security threats related to the execution of JavaScript. The analysis of the OBD-II apps shows possibilities of severe controller area network injections and privacy violations, because of leaks of sensitive information.
C1 [Mandal, Amit Kr; Cortesi, Agostino] Ca Foscari Univ Venice, Venice, Italy.
   [Mandal, Amit Kr] BML Munjal Univ, Gurugram, India.
   [Panarotto, Federica; Spoto, Fausto] Univ Verona, Verona, Italy.
   [Ferrara, Pietro] JuliaSoft Srl, Verona, Italy.
C3 Universita Ca Foscari Venezia; BML Munjal University; University of
   Verona
RP Cortesi, A (corresponding author), Ca Foscari Univ Venice, Dept Environm Sci Informat & Stat, I-30123 Venice, Italy.
EM cortesi@unive.it
RI Mandal, Amit Kr/IUN-3943-2023; Cortesi, Agostino/F-9637-2011; FERRARA,
   Pietro/ABF-9761-2021; Cortesi, Agostino/AAQ-2996-2020
OI Cortesi, Agostino/0000-0002-0946-5440; FERRARA,
   Pietro/0000-0002-4678-933X; Spoto, Fausto/0000-0003-2973-0384
FU CINI Cybersecurity National Laboratory; Regione Veneto within the FSE
   project
FX CINI Cybersecurity National Laboratory, Grant/Award Number:
   FilieraSicura; Regione Veneto within the FSE project, Grant/Award
   Number: Static analysis for the safety and security of Android systems
   for automotive infotainment
CR Andersson T, 2011, INT 2011 13 IFIP TC1
   [Anonymous], 2018, QUICK ANDR REV KIT A
   [Anonymous], 2017 INT C CLOUD AUT
   Apple, APPL CARPL ULT COP
   Automotive Fleet, 70 PERC DRIV US SMAR
   Avatefipour O, 2017, IEEE INT WORKS INFOR
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   Budnick N, LARGEST DISTRACTED D
   Checkoway S., 2011, USENIX C SECUR, V11, P17
   Cortesi A, 2015, LECT NOTES COMPUT SC, V8931, P61
   Cousot P, 1977, P 4 ACM SIGACT SIGPL
   Dardanelli A, 2013, IEEE EMBED SYST LETT, V5, P34, DOI 10.1109/LES.2013.2264594
   deGraaff R, 2015, THESIS
   Ernst MD, 2015, LECT NOTES COMPUT SC, V9450, P130, DOI 10.1007/978-3-662-48899-7_10
   Giro S, ANDROID DEV BLOG SEC
   Google, ANDR AUT
   Google, ANDR AUT QUAL GUID
   GooglePlay Store, APPS ANDR AUT
   Heikkinen J., 2013, P 15 INT C HUM COMP
   Jaisingh K, 2016, P 6 ACM S DEV AN INT
   Jaiswal Gaurav., 2014, INT J INNOVAT RES EL, V1, P12
   Kim H., 2012, IEEE IC COMP COM NET
   Koscher K, 2010, P IEEE S SECUR PRIV, P447, DOI 10.1109/SP.2010.34
   Kun AL, 2016, IEEE PERVAS COMPUT, V15, P32, DOI 10.1109/MPRV.2016.14
   Macario G, 2009, IEEE INT S IND EMB S
   Mandal A.K., 2018, P 15 ACM INT C COMP
   Mazloom S., 2016, P 10 USENIX WORKSH O
   McClure S, CAUTION MALWARE AHEA
   Miller C., 2013, DEF CON, P15
   Miller C, 2015, REMOTE EXPLOITATION, P1
   Murvay PS, 2018, IEEE T VEH TECHNOL, V67, P4325, DOI 10.1109/TVT.2018.2795384
   Nirumand A, 2019, SOFTWARE PRACT EXPER, V49, P70, DOI 10.1002/spe.2643
   Nisch P, 2011, SECURITY ISSUES MODE, P1
   Panarotto F, 2018, SMART COMPUTING COMM
   Paupiah PS, 2015, 2015 International Conference on Computing, Communication and Security (ICCCS)
   Schweppe H, 2012, 2012 IEEE 1 INT WORK, P12
   Spoto F, 2016, LECT NOTES COMPUT SC, V9837, P39, DOI 10.1007/978-3-662-53413-7_3
   Udovicic K, 2015, 2015 IEEE 5 INT C CO
   Wang Q, 2014, 4 INT C INT THINGS I
   Wiese E, 2004, ERGONOMICS, V47, P965, DOI 10.1080/00140130410001686294
   Wolf M, 2006, EMBEDDED SECURITY IN CARS: SECURING CURRENT AND FUTURE AUTOMOTIVE IT APPLICATIONS, P95, DOI 10.1007/3-540-28428-1_6
   Zhao D, 2017, IEEE INT C INTELL TR
NR 42
TC 18
Z9 19
U1 1
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2019
VL 49
IS 7
BP 1131
EP 1161
DI 10.1002/spe.2698
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IC6BJ
UT WOS:000471053400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU O'Shea, D
   Ortin, F
   Geary, K
AF O'Shea, Donna
   Ortin, Francisco
   Geary, Kevin
TI A virtualized test automation framework: A DellEMC case study of test
   automation practice
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Selenium Grid; software engineering; software practice; test automation;
   TestNG; virtualized; test environments
AB As software development life-cycles continue to shorten, the need for reliable, maintainable and scalable test automation solutions becomes more and more important. This importance arises as software, test and automation activities occur earlier in the development life cycle with the aim of providing accelerated feedback on the code and software produced. In this environment, infrastructure and development environments are made available earlier to test teams, the demand of which can create environment bottlenecks as software and automation teams also require the same resources at the same time. To help maximize the use of the underlying resources virtualization and cloud based solutions have been proposed. However, at present there is no guidance on how to design and implement a test automation solution that leverages an underlying virtualized infrastructure. In this paper a virtualized test automation framework designed and implemented by DellEMC Software Quality team in Cork, Ireland is presented along with a macro benchmark analysis of its performance over different virtualization environments.
C1 [O'Shea, Donna] Cork Inst Technol, Dept Comp Sci, Cork, Ireland.
   [Ortin, Francisco] Univ Oviedo, Dept Comp Sci, Oviedo, Spain.
   [Geary, Kevin] Dell EMC, Cork, Ireland.
C3 Munster Technological University (MTU); University of Oviedo; Dell
   Incorporated; Dell EMC; Dell EMC Ireland
RP O'Shea, D (corresponding author), Cork Inst Technol, Dept Comp Sci, Cork, Ireland.
EM donna.oshea@cit.ie
RI Ortin, Francisco/K-9272-2014
OI Ortin, Francisco/0000-0003-1199-8649; O'Shea, Donna/0000-0002-2437-3106
CR Ali Qasim, 2014, DOCKER CONTAINERS PE
   Aspernas A, 2017, THESIS
   Buenen M., 2016, WORLD QUALITY REPORT
   Crispin L., 2009, AGILE TESTING PRACTI
   Davis DM, 2013, DEMYSTIFYING CPU REA
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Felter W., 2015, IEEE INT S PERF AN S
   Geary K, 2017, TEST CASE LAYER REPO
   GitHub, PAGEFACTORY
   GitHub, US DOCK NETW INST LI
   Holmes A., 2006, AGILE 2006 AGILE 06, P6
   Kaur H., 2013, J. Eng. Res. Appl, V3, P1739
   Kuutila M, 2016, ARXIV161100578
   Leotta M, 2013, IEEE 6 INT C SOFTW T
   Sahoo J., 2010, 2 INT C COMP NETW TE
   Scheepers MJ, 2014, 21 TWENT STUD C IT E
   WebDriver, 2018, W3C CAND REC
NR 17
TC 2
Z9 2
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2019
VL 49
IS 2
SI SI
BP 329
EP 337
DI 10.1002/spe.2658
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0GK
UT WOS:000459864300010
DA 2024-07-18
ER

PT J
AU Shi, K
   Yu, HQ
   Guo, JM
   Fan, GS
   Yang, XG
AF Shi, Kai
   Yu, Huiqun
   Guo, Jianmei
   Fan, Guisheng
   Yang, Xingguang
TI A parallel portfolio approach to configuration optimization for large
   software product lines
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE constraint solving; multiobjective evolutionary algorithms; parallel
   portfolio; search-based software engineering; software product lines
ID FEATURE-SELECTION; GENETIC ALGORITHM
AB Software product line (SPL) engineering demands for optimal or near-optimal products that balance multiple often competing and conflicting objectives. A major challenge for large SPLs is to efficiently explore a huge space of various products and satisfy a large number of predefined constraints simultaneously. To improve the optimality and convergence speed, we propose a parallel portfolio approach, called IBEAPORT, which designs three algorithm variants by incorporating constraint solving into the indicator-based evolutionary algorithm in different ways and performs these variants by utilizing parallelization techniques. Our approach utilizes the exploration capabilities of different algorithms and improves optimality as far as possible within a limited time budget. We evaluate our approach on five large-scale real-world SPLs. Empirical results demonstrate that our approach significantly outperforms the state of the art for all five SPLs on a quality indicator and a diversity indicator. Moreover, IBEAPORT quickly converges to a relatively stable hypervolume value even for the largest SPL with 6888 features.
C1 [Shi, Kai; Yu, Huiqun; Fan, Guisheng; Yang, Xingguang] East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai 200237, Peoples R China.
   [Guo, Jianmei] Alibaba Grp, Hangzhou 311121, Zhejiang, Peoples R China.
C3 East China University of Science & Technology; Alibaba Group
RP Yu, HQ; Fan, GS (corresponding author), East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai 200237, Peoples R China.
EM yhq@ecust.edu.cn; gsfan@ecust.edu.cn
FU National Natural Science Foundation of China [61772200, 61702334,
   61472139]; Shanghai Pujiang Talent Program [17PJ1401900]; Shanghai
   Municipal Natural Science Foundation [17ZR1406900, 17ZR1429700];
   Educational Research Fund of ECUST [ZH1726108]; Collaborative Innovation
   Foundation of Shanghai Institute of Technology [XTCX2016-20]
FX National Natural Science Foundation of China, Grant/Award Number:
   61772200, 61702334, and 61472139; Shanghai Pujiang Talent Program,
   Grant/Award Number: 17PJ1401900; Shanghai Municipal Natural Science
   Foundation, Grant/Award Number: 17ZR1406900 and 17ZR1429700; Educational
   Research Fund of ECUST, Grant/Award Number: ZH1726108; The Collaborative
   Innovation Foundation of Shanghai Institute of Technology, Grant/Award
   Number: XTCX2016-20
CR [Anonymous], 2009, TECHNICAL REPORT
   [Anonymous], 2001, P EV METH DES OPT CO
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], P 35 INT C SOFTW ENG
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Benavides D, 2013, INFORM SYST, V35, P615
   Bergin T, 2013, SOLV SOC PROB, P7
   Brockhoff D, 2013, P 10 INT C PAR PROBL
   Chakroun I, 2013, J PARALLEL DISTR COM, V73, P1563, DOI 10.1016/j.jpdc.2013.07.023
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2003, P 2 INT C EV MULT OP
   Durillo JJ, 2010, P IEEE C EV COMP CEC
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Guo J, 2014, P 29 ACM IEEE INT C
   Guo JM, 2019, SOFTW SYST MODEL, V18, P1447, DOI 10.1007/s10270-017-0610-0
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, P INT C SOFTW ENG IS
   Harman M, 2014, P 18 INT SOFTW PROD
   Henard C, 2015, P 37 IEEE ACM INT C
   Henard C, 2001, P 17 INT SOFTW PROD
   Hierons RM, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2897760
   Ishibuchi H, 2015, P 8 INT C EV MULT OP
   Jackson Daniel, 2009, ICSE WORKSHOP TRIBUT
   Kang K. C., 1990, Technical Report
   Knowles J, 2002, P 2 EV COMP ECE NEW
   Lian X, 2014, P 26 INT C SOFTW ENG
   Lian X, 2015, P 22 IEEE INT C SOFT
   Lian XL, 2018, J SYST SOFTWARE, V137, P636, DOI 10.1016/j.jss.2017.02.044
   Lu H, 2016, P IEEE INT C SOFTW T
   LVAT, 2016, LIN VAR AN TOOLS
   Metzger A, 2014, P FUT SOFTW ENG FOSE
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Noorian M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1870
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Olaechea R, 2014, P 18 INT SOFTW PROD
   Pascual GG, 2015, J SYST SOFTWARE, V103, P392, DOI 10.1016/j.jss.2014.12.041
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Sarro F, 2016, P 38 INT C SOFTW ENG
   Sayyad A, 2004, P 28 IEEE ACM INT C
   Sayyad AS, 2013, P 1 INT WORKSH COMB
   Shi K, 2017, P IEEE INT C SOFTW M
   Talbi E-G, 2008, PARALLEL APPROACHES
   Tan TH, 2015, P 2015 INT S SOFTW T
   Tan TH, 1990, P 2015 INT S SOFTW T
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   White J, 2008, P 12 INT C SOFTW PRO
   Wu ZQ, 2011, INT J INF TECH DECIS, V10, P811, DOI 10.1142/S0219622011004580
   Xue YX, 2016, APPL SOFT COMPUT, V49, P1215, DOI 10.1016/j.asoc.2016.07.040
   Yen GG, 2014, IEEE T EVOLUT COMPUT, V18, P131, DOI 10.1109/TEVC.2013.2240687
   Yoo S, 2007, P ACM SIGSOFT INT S
   Zitzler E, IEEE T EVOL COMPUT, V7, P117
   Zitzler Eckart, 2004, P 8 INT C PAR PROBL
NR 55
TC 2
Z9 3
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2018
VL 48
IS 9
BP 1588
EP 1606
DI 10.1002/spe.2594
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GP5RZ
UT WOS:000440932300004
DA 2024-07-18
ER

PT J
AU Kang, P
AF Kang, Pilsung
TI Function call interception techniques
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE function call interception; modular programming; program instrumentation
ID PARALLEL; ADAPTATION; PROGRAMS; TOOLS
AB Function call interception (FCI), or method call interception (MCI) in the object-oriented programming domain, is a technique of intercepting function calls at program runtime. Without directly modifying the original code, FCI enables to undertake certain operations before and/or after the called function or even to replace the intercepted call. Thanks to this capability, FCI has been typically used to profile programs, where functions of interest are dynamically intercepted by instrumentation code so that the execution control is transferred to an external module that performs execution time measurement or logging operations. In addition, FCI allows for manipulating the runtime behavior of program components at the fine-grained function level, which can be useful in changing an application's original behavior at runtime to meet certain execution requirements such as maintaining performance characteristics for different input problem sets. Due to this capability, however, some FCI techniques can be used as a basis of many security exploits for vulnerable systems. In this paper, we survey a variety of FCI techniques and tools along with their applications to diverse areas in the computing and software domains. We describe static and dynamic FCI techniques at large and discuss the strengths and weaknesses of different implementations in this category. In addition, we also discuss aspect-oriented programming implementation techniques for intercepting method calls.
C1 [Kang, Pilsung] Youngsan Univ, Dept Comp Engn, Junam Ro 288, Yangsan 50510, South Korea.
RP Kang, P (corresponding author), Youngsan Univ, Dept Comp Engn, Junam Ro 288, Yangsan 50510, South Korea.
EM pilsungk@ysu.ac.kr
RI Kang, Pilsung/AAH-6642-2020
OI Kang, Pilsung/0000-0001-8882-8686
FU Youngsan University
FX Youngsan University
CR Adhianto L, 2010, CONCURR COMP-PRACT E, V22, P685, DOI 10.1002/cpe.1553
   Ali N, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING AND WORKSHOPS, P86
   [Anonymous], DYN LINK LIB
   [Anonymous], MORE INFORM DLL PREL
   [Anonymous], 1003 IEEE
   [Anonymous], 2006, P 15 C USENIX SEC S
   [Anonymous], SHARED LIB CALL REDI
   [Anonymous], PROGR INSTR OPT
   [Anonymous], 1 WORKSH ADV STAT AR
   [Anonymous], P 2004 DYN ASP WORKS
   [Anonymous], P 3 WORKSH VIRT MACH
   [Anonymous], LOADLIBRARY FUNCT
   [Anonymous], 2004, THESIS
   [Anonymous], 1995, EX LINK FORM ELF SPE
   [Anonymous], SEC LOAD LIB PREV DL
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2002, WORKSH APPL ENG PRIN
   [Anonymous], HIGH PERFORMANCE COM
   [Anonymous], INTERCEPTING SYSTEM
   [Anonymous], CSTR4585 U MAR I ADV
   [Anonymous], 2005, SIGARCH COMPUT ARCHI
   [Anonymous], P WORKSH REPR RES ME
   [Anonymous], 2001, ENDO TESTING UNIT TE
   [Anonymous], 2014, The Java Virtual Machine Specification, Java SE 8 Edition
   [Anonymous], P 2 AOSD WORKSH FDN
   [Anonymous], 1996, Linux Journal
   [Anonymous], ASPECT ORIENTED PROG
   [Anonymous], P ANN C USENIX ANN T
   [Anonymous], P 2008 S DYN LANG DL
   [Anonymous], P 2004 DYN ASP WORKS
   [Anonymous], 2008, PATCH FREE USER LEVE
   Avgustinov P., 2005, ASPECT ORIENTED SYST, P87
   Avijit K, 2006, SOFTWARE PRACT EXPER, V36, P971, DOI 10.1002/spe.720
   Bach M, 2010, COMPUTER, V43, P34, DOI 10.1109/MC.2010.60
   Beazley DM, 2001, COMPUT SCI ENG, V3, P90, DOI 10.1109/5992.947112
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Bhatotia P, 2015, ACM SIGPLAN NOTICES, V50, P645, DOI [10.1145/2775054.2694371, 10.1145/2694344.2694371]
   Bockisch Christoph., 2004, AOSD 04 P 3 INT C AS, P83
   Buck B, 2000, INT J HIGH PERFORM C, V14, P317, DOI 10.1177/109434200001400404
   Charif-Rubial AS, 2013, INT C HIGH PERFORM, P206, DOI 10.1109/HiPC.2013.6799106
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Coady Y., 2001, Software Engineering Notes, V26, P88, DOI 10.1145/503271.503223
   Drepper U., 2011, WRITE SHARED LIB
   Eriksen MA, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX/OPEN SOURCE TRACK, P61
   Fleury M, 2003, LECT NOTES COMPUT SC, V2672, P344
   Ford Bryan., 2008, USENIX 2008 ANN TECH, P293
   Freeman S., 2004, Companion to the 19th annual ACM SIGPLAN Conference on Object-oriented Programming Systems, Languages, and Applications, OOPSLA '04, P236
   Hilsdale E., 2004, INT C ASPECT ORIENTE, P26
   Hmida M. B., 2006, Journal of Digital Information Management, V4, P37
   Hoglund G., 2006, Rootkits: Subverting the Windows Kernel
   Hunt G, 1999, PROCEEDINGS OF THE 3RD USENIX WINDOWS NT SYMPOSIUM, P135
   Kang P, 2012, J COMPUT SCI-NETH, V3, P28, DOI 10.1016/j.jocs.2012.01.007
   Kang P, 2012, CLUSTER COMPUT, V15, P321, DOI 10.1007/s10586-012-0205-z
   Kang P, 2012, COMPUT SCI ENG, V14, P52, DOI 10.1109/MCSE.2011.17
   Kang P, 2010, PROCEDIA COMPUT SCI, V1, P145, DOI 10.1016/j.procs.2010.04.017
   Kell S, 2016, ACM SIGPLAN NOTICES, V51, P607, DOI 10.1145/3022671.2983996
   Kiczales G, 2005, PROC INT CONF SOFTW, P49
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Laddad R., 2009, ASPECTJ ACTION ENTER
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   LEVINE J.R., 2000, LINKERS LOADERS
   Lhee KS, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P81
   Lis M, 2011, INT SYM PERFORM ANAL, P175, DOI 10.1109/ISPASS.2011.5762734
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Luu H., 2013, Cluster Computing (CLUSTER), 2013 IEEE International Conference on, P1
   Marek Lukas, 2012, AOSD, P239, DOI [10.1145/2162049.2162077, DOI 10.1145/2162049.2162077]
   Miller JE, 2010, INT S HIGH PERF COMP, P295
   Narayanasamy S, 2006, FRONT ARTIF INTEL AP, V147, P211
   Nethercote N., 2003, Electronic Notes in Theoretical Computer Science, V89, DOI 10.1016/S1571-0661(04)81042-9
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Padala P., 2002, Linux J, V104, P4
   Padala P., 2002, Linux Journal, V2002, P5
   Patil H, 2004, INT SYMP MICROARCH, P81
   Patil H, 2010, INT SYM CODE GENER, P2
   Pearce DJ, 2007, SOFTWARE PRACT EXPER, V37, P747, DOI 10.1002/spe.788
   Poletto M, 1999, ACM T PROGR LANG SYS, V21, P895, DOI 10.1145/330249.330250
   POPOVICI A., 2002, P 1 INT C ASPECT ORI, P141
   Popovici Andrei., 2003, AOSD 03, P100
   Presser L., 1972, Computing Surveys, V4, P149, DOI 10.1145/356603.356605
   Probst M, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P35, DOI 10.1109/WCRE.2002.1173062
   Roth P.C., 2007, PDSW 07 P 2 INT WORK, P50, DOI DOI 10.1145/1374596.1374609
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Schaefer CA, 2009, LECT NOTES COMPUT SC, V5704, P9, DOI 10.1007/978-3-642-03869-3_5
   Schulz Martin., 2005, SIGARCH Comput. Archit. News, V33, P9
   Scott M., 2000, PROGRAMMING LANGUAGE
   Smaragdakis Y, 2002, LECT NOTES COMPUT SC, V2319, P33
   Spinczyk O., 2002, CR PIT 02 P 40 INT C, P53
   SRIVASTAVA A, 1994, SIGPLAN NOTICES, V29, P196, DOI 10.1145/773473.178260
   Varadarajan S, 2005, FUTURE GENER COMP SY, V21, P878, DOI 10.1016/j.future.2003.12.020
   Vijayakumar K., 2009, Proceedings of the 4th Annual Workshop on Petascale Data Storage, P26
   Villazón A, 2010, ACM SIGPLAN NOTICES, V45, P85, DOI 10.1145/1837852.1621621
NR 94
TC 8
Z9 8
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 385
EP 401
DI 10.1002/spe.2501
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300001
DA 2024-07-18
ER

PT J
AU Kermia, O
AF Kermia, Omar
TI Schedulability analysis and efficient scheduling of rate constrained
   messages in the TTEthernet protocol
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE mixed criticality systems; TTEthernet; traffic scheduling;
   schedulability analysis; real-time systems
ID ETHERNET
AB Over time, cyber-physical systems are becoming mixed criticality systems. As the complexity and the size of these systems grow, computation/communication resources should be more efficient than with traditional systems. TTEthernet is a communication infrastructure that enables the use of a single physical communication infrastructure for distributed mixed criticality applications while providing timely determinism. TTEthernet distinguishes between two traffic categories: the standard event triggered and the time triggered. The latter, for which higher priority is granted, is subject to strong timing guarantees because of strict periodicity constraint that fixes start-time cycles of time-triggered messages. In addition, event-triggered traffic includes rate-constrained messages that are of lower priority and have a minimum time interval between their transmission. The paper proposes both an on-line efficient scheduling algorithm and a necessary and sufficient schedulability condition based on the worst case response time computation for rate-constrained messages while taking into account time-triggered messages transmission. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Kermia, Omar] CDTA, Cite 20 Aout 1956, Algiers, Algeria.
C3 Centre for the Development of Advanced Technologies (CDTA)
RP Kermia, O (corresponding author), CDTA, Cite 20 Aout 1956, Algiers, Algeria.
EM okermia@cdta.dz
CR Almeida L., 2004, Proceedings of the 4th ACM international Conference on Embedded Software, P95, DOI DOI 10.1145/1017753.1017772
   [Anonymous], P 28 IEEE INT REAL T
   ARINC, 2009, 664P71 ARINC
   Baruah S., 2011, Proceedings of the 2011 IEEE 32nd Real-Time Systems Symposium (RTSS 2011), P3, DOI 10.1109/RTSS.2011.9
   Baruah S, 2008, P 2008 EUR REAL TIM
   Baruah S. K., 2011, P 2011 IEEE 32 REAL
   Berwanger J, 2001, T J PASSENGER CARSEL
   Bini E, 2004, EUROMICRO, P196, DOI 10.1109/EMRTS.2004.1311021
   Burns A., 2013, MCC1B U YORK DEP COM
   Dutertre B., 2012, DIG AV SYST C DASC 2, P1
   Garey M.R., 1979, COMPUTERS INTRACTABI
   George L., 1996, Preemptive and Non-Preemptive Real-Time Uniprocessor Scheduling
   Howard CE, 2009, ORION AVIONICS EMPLO
   Howell R, 1995, INFORM COMPUTATION, V117
   Isovic D, 2010, P 21 IEEE C REAL TIM
   JEFFAY K, 1991, PROCEEDING : TWELFTH REAL-TIME SYSTEMS SYMPOSIUM, P129, DOI 10.1109/REAL.1991.160366
   John R., 1999, TECHNICAL REPORT
   Kermia O., 2015, J CIRCUIT SYST COMP, V24, P2015
   Kermia O., 2011, ADV OPERATIONS RES, V2011, P1
   Kopetz H, 2008, REAL TIM SYST SYMP P, P3, DOI 10.1109/RTSS.2008.33
   Pedreiras P, 2005, IEEE T IND INFORM, V1, P162, DOI 10.1109/TII.2005.852068
   Socci D, 2013, 1 INT WORKSH MIX CRI
   Spuri M., 1996, N2573 INRIA
   Steiner W., 2011, 14 IEEE INT S OBJ CO
   Steiner W, 2011, LECT NOTES COMPUT SC, V6617, P375, DOI 10.1007/978-3-642-20398-5_27
   Steiner W, 2010, REAL TIM SYST SYMP P, P375, DOI 10.1109/RTSS.2010.25
   Steiner W, 2009, 2009 8TH IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS, P319, DOI 10.1109/NCA.2009.28
   Tamas-Selicean D, 2015, 2015 IEEE 18TH INTERNATIONAL SYMPOSIUM ON REAL-TIME DISTRIBUTED COMPUTING (ISORC), P119, DOI 10.1109/ISORC.2015.32
   Theis J, 2013, 1 INT WORKSH MIX CRI
NR 29
TC 4
Z9 4
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1485
EP 1499
DI 10.1002/spe.2480
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500002
DA 2024-07-18
ER

PT J
AU Kupsch, JA
   Heymann, E
   Miller, B
   Basupalli, V
AF Kupsch, James A.
   Heymann, Elisa
   Miller, Barton
   Basupalli, Vamshi
TI Bad and good news about using software assurance tools
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE continuous assurance; static analysis; software security
ID BUGS
AB Software assurance tools - tools that scan the source or binary code of a program to find weaknesses - are the first line of defense in assessing the security of a software project. Even though there are a plethora of such tools available, with multiple tools for almost every programming language, adoption of these tools is spotty at best. And even though different tools have distinct abilities to find different kinds of weaknesses, the use of multiple tools is even less common. And when the tools are used (or attempted to be used), they are often used in ways that reduce their effectiveness. We present a step-by-step discussion of how to use a software assurance tool, describing the challenges that can occur in this process. We also present quantitative evidence about the effects that can occur when assurance tools are applied in a simplistic or naive way. We base this presentation on our direct experiences with using a wide variety of assurance tools. We then present the US Department of Homeland Security funded Software Assurance Marketplace (SWAMP), an open facility where users can upload their software to have it automatically and continually assessed by a variety of tools. The goal of the SWAMP is to simplify the task of the programmer in using assurance tools, thereby removing many of the obstacles to their adoption. Copyright (c) 2016 The Authors. Software: Practice and Experience Published by John Wiley & Sons, Ltd.
C1 [Kupsch, James A.; Heymann, Elisa; Miller, Barton; Basupalli, Vamshi] Univ Wisconsin, Dept Comp Sci, 1210 W Dayton St, Madison, WI 53706 USA.
   [Kupsch, James A.; Miller, Barton; Basupalli, Vamshi] Software Assurance Marketpl SWAMP, 330 N Orchard St, Madison, WI 53715 USA.
   [Heymann, Elisa] Univ Autonoma Barcelona, Comp Architecture & Operating Syst Dept, Barcelona, Spain.
C3 University of Wisconsin System; University of Wisconsin Madison;
   Autonomous University of Barcelona
RP Heymann, E (corresponding author), Univ Autonoma Barcelona, Comp Architecture & Operating Syst, Barcelona, Spain.
EM elisa.heymann@uab.cat
OI Heymann, Elisa/0000-0003-4833-9057
FU US National Science Foundation Cyber Security Center of Excellence
   [ACI-1547272]; US Department of Homeland Security under AFRL
   [FA8750-12-2-0289]; MINECO Spain [TIN2014-53172-P]
FX This work was supported in part by the US National Science Foundation
   Cyber Security Center of Excellence grant ACI-1547272, US Department of
   Homeland Security under AFRL Contract FA8750-12-2-0289, and MINECO Spain
   contract number TIN2014-53172-P.
CR Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bird J, 2012, SAN SURVEY APPL SECU
   Boland T, 2012, COMPUTER, V45, P88, DOI 10.1109/MC.2012.345
   Grammatech, 2020, CODESONAR
   Hewlett Packard, 2015, FORT DEM
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Kupsch J.A., 2009, First International Workshop on Managing Insider Security Threats (MIST), P83
   McGraw G., 2013, The Building Security In Maturity Model
   Packard H., 2015, HP FORTIFY STATIC CO
   Red Lizards, 2015, RED LIZ GOANN
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Thain D, 2005, CONCURR COMP-PRACT E, V17, P323, DOI 10.1002/cpe.938
   Wave Roque, 2015, ROQ WAV
NR 13
TC 4
Z9 4
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2017
VL 47
IS 1
BP 143
EP 156
DI 10.1002/spe.2401
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI5DO
UT WOS:000392514400007
OA hybrid
DA 2024-07-18
ER

PT J
AU Panda, S
   Mohapatra, DP
AF Panda, S.
   Mohapatra, D. P.
TI Regression test suite minimization using integer linear programming
   model
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE regression testing; test case prioritization; test case minimization;
   cohesion; integer linear programming; Softw. Pract. Exper
ID COHESION MEASURE; PREDICTION; SELECTION; SOFTWARE; METRICS;
   MAINTAINABILITY; PRIORITIZATION; TRANSFORMATION; REDUCTION; QUALITY
AB Software testers always face the dilemma of whether to retest the software with all the test cases or select a few of them on the basis of their fault detection ability. This paper introduces a novel approach to minimizing the test suite as an integer linear programming problem with optimal results. The minimization method uses the cohesion values of the program parts affected by the changes made to the program. The hypothesis is that the program parts with low cohesion values are more prone to errors. This assumption is validated on the mutation fault detection ability of the test cases. The experimental study carried out on 30 programs evaluates the effectiveness and usefulness of the proposed framework. The experimental results show that the minimized test suite can efficiently reveal the errors and ensure acceptable software quality. Copyright (C) 2017 John Wiley & Sons, Ltd.
C1 [Panda, S.] BITS PILANI, Dept CSIS, Hyderabad 500078, Andhra Pradesh, India.
   [Mohapatra, D. P.] Natl Inst Technol, Dept Comp Sci & Engn, Rourkela 769008, India.
C3 Birla Institute of Technology & Science Pilani (BITS Pilani); National
   Institute of Technology (NIT System); National Institute of Technology
   Rourkela
RP Panda, S (corresponding author), BITS PILANI, Dept CSIS, Hyderabad 500078, Andhra Pradesh, India.
EM subhrakanta11@gmail.com
RI Panda, Subhrakanta/GXZ-8960-2022; Mohapatra, Durga Prasad/B-2722-2017
OI Panda, Subhrakanta/0000-0003-4768-772X; Mohapatra, Durga
   Prasad/0000-0002-4824-7091
CR Al Dallal J, 2013, INFORM SOFTWARE TECH, V55, P2028, DOI 10.1016/j.infsof.2013.07.005
   Al Dallal J, 2013, SOFTWARE PRACT EXPER, V43, P685, DOI 10.1002/spe.2127
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P396, DOI 10.1016/j.infsof.2011.11.007
   Al Dallal J, 2011, PROCEDIA COMPUT SCI, V3, DOI 10.1016/j.procs.2011.01.053
   Alomari HW, 2014, J SOFTW-EVOL PROC, V26, P931, DOI 10.1002/smr.1651
   [Anonymous], 2012, J BRAZ COMPUT SOC
   Arroyuelo D, 2015, SOFTWARE PRACT EXPER, V45, P399, DOI 10.1002/spe.2227
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Bissyandé TF, 2015, SOFTWARE PRACT EXPER, V45, P177, DOI 10.1002/spe.2225
   Black J, 2004, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2004.1317433
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Chen ZQ, 2002, PROC IEEE INT CONF S, P377, DOI 10.1109/ICSM.2002.1167794
   Chuanqi Tao, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P347, DOI 10.1109/COMPSACW.2010.67
   Ciancarini P, SOFTWARE PRACTICE EX, V46, P227
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   Collard ML, 2003, PROG COMPREHEN, P134
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Gupta R., 1996, Software Testing, Verification and Reliability, V6, P83, DOI 10.1002/(SICI)1099-1689(199606)6:2<83::AID-STVR112>3.0.CO;2-9
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   Harrold MJ, 2001, ACM SIGPLAN NOTICES, V36, P312, DOI 10.1145/504311.504305
   Hsu HY, 2009, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2009.5070541
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Kozlov D., 2013, OPEN SOFTWARE ENG J, V7, P1
   Krinke J, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P37, DOI 10.1109/SCAM.2007.28
   Li D., 2014, P 2014 INT S SOFTWAR, P339
   Lossing N, 2015, 18 INT WORKSH COMP P, P1
   Mal S, 2014, INTELLIGENT COMPUTIN, P591
   Najumudheen E., 2009, SIGSOFT Software Engineering Notes, V34, P1, DOI [10.1145/1507195.1507208, DOI 10.1145/1507195.1507208]
   Panda S, 2015, INNOV SYST SOFTW ENG, V11, P243, DOI 10.1007/s11334-015-0252-8
   Panda S, 2015, INT J COMPU IN PRESS
   Panigrahi CR, 2016, INNOV SYST SOFTW ENG, V12, P153, DOI 10.1007/s11334-015-0262-6
   Pravin Albert, 2013, Journal of Computer Science, V9, P654, DOI 10.3844/jcssp.2013.654.659
   Qusef A, 2014, J SYST SOFTWARE, V88, P147, DOI 10.1016/j.jss.2013.10.019
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Smith BH, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P193, DOI 10.1109/TAIC.PART.2007.12
   Sun XB, 2011, CHINESE J ELECTRON, V20, P247
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Wibowo B, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P315
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoshida N, 2012, EUR CON SFTWR MTNCE, P365, DOI 10.1109/CSMR.2012.45
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhou YM, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P215, DOI 10.1109/APSEC.2003.1254374
   Zhou YM, 2002, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2002.1167746
NR 48
TC 9
Z9 9
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PY 2017
VL 47
IS 11
BP 1539
EP 1560
DI 10.1002/spe.2485
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT6QU
UT WOS:000423279500005
DA 2024-07-18
ER

PT J
AU Rudafshani, M
   Ward, PAS
AF Rudafshani, Masoomeh
   Ward, Paul A. S.
TI LeakSpot: detection and diagnosis of memory leaks in JavaScript
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE JavaScript; memory leaks; dynamic analysis; code transformation and
   manipulation
AB The migration of application logic to the client side of modern web applications and the use of JavaScript as the main language for client-side development have made memory leaks in JavaScript an issue for web applications. Client-side web applications communicate with the server asynchronously, remaining on the same web page during their lifetime. Thus, even minor memory leaks can eventually lead to excessive memory usage, negatively affecting user-perceived response time and possibly causing page crashes. To detect memory leaks and guide developers in fixing the leaks quickly and easily, this paper introduces LeakSpot, a tool that creates a run-time heap model by modifying the application code in a browser-agnostic way to record object allocations, accesses, and references created to objects. LeakSpot reports those allocation sites causing the leaks instead of all the leaky allocation sites. It also identifies the locations in the code where leaked objects are accumulated, for example, the locations where a reference from a data structure is created but forgotten to be removed by the developer. To facilitate debugging and fixing the leaks, for every leaked object, LeakSpot reports all the locations in the code that create a reference to the object. To confirm usefulness and efficacy of LeakSpot experimentally, we have used LeakSpot to find and fix four memory leaks in a JavaScript benchmark suite and in open-source web applications. LeakSpot is also shown to be effective in pointing out the potential causes of three leaks in large and popular web applications. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Rudafshani, Masoomeh; Ward, Paul A. S.] Univ Waterloo, Dept Elect & Comp Engn, 200 Univ Ave West, Waterloo, ON, Canada.
C3 University of Waterloo
RP Rudafshani, M (corresponding author), Univ Waterloo, Dept Elect & Comp Engn, 200 Univ Ave West, Waterloo, ON, Canada.
EM mrudafshani@gmail.com
CR Aigner M., 2014, P 10 ACM S DYN LANG, P67
   Almende BV, DYNAMIC BROWSER BASE
   [Anonymous], 2010, P ACM IEEE 32 INT C, DOI DOI 10.1145/1806799.1806874
   [Anonymous], 2013, P 2013 9 JOINT M FDN, DOI [10.1145/2491411.2491447, DOI 10.1145/2491411.2491447]
   AppDynamics, PERF AN NOD JS
   Bond MD, 2006, ACM SIGPLAN NOTICES, V41, P61, DOI 10.1145/1168918.1168866
   Chilimbi TM, 2004, ACM SIGPLAN NOTICES, V39, P156, DOI 10.1145/1037187.1024412
   Dolmar B, UNDERSTAND MEMORY LE
   Dufour B., 2008, A scalable technique for characterizing the usage of temporaries in framework-intensive Java applications, P59, DOI DOI 10.1145/1453101.1453111
   ECMA International, ECMA262
   Google Inc, OCT BENCHM
   Google Inc, CHROM DEV TOOLS
   Google Inc, CLOS LIB
   Google Inc, LEAKFINDER JAVASCRIP
   Google Inc, V8 BENCHM
   Google Inc, ANGULARJS HTML ENH W
   Joyent Inc, WALM NOD JS MEM LEAK
   Jump M, 2007, ACM SIGPLAN NOTICES, V42, P31, DOI 10.1145/1190215.1190224
   Jump M, 2010, SOFTWARE PRACT EXPER, V40, P1, DOI 10.1002/spe.945
   Kiciman Emre, 2007, Operating Systems Review, V41, P17, DOI 10.1145/1323293.1294264
   Lavoie E, 2014, LECT NOTES COMPUT SC, V8586, P541
   Mikowski M., 2013, SINGLE PAGE WEB APPL
   Mitchell N, 2003, LECT NOTES COMPUT SC, V2743, P351
   Mitchell N, 2007, ACM SIGPLAN NOTICES, V42, P245, DOI 10.1145/1297105.1297046
   Mozilla, LEAKGAUGE
   Mozilla, PERFORMANCE
   Mozilla Developer Network, REINTR JAVASCRIPT JS
   Mozilla Hacks, TRACK MEM LEAKS NOD
   Novark G, 2009, ACM SIGPLAN NOTICES, V44, P397, DOI 10.1145/1543135.1542521
   Pienaar J.A., 2013, Proceedings of the 2013 IEEE/ACM International Symposium on Code Generation and Optimization, CGO 2013, Shenzhen, China, February 23-27, 2013, p11:1, DOI DOI 10.1109/CGO.2013.6495007
   Pradel M, 2014, ACM SIGPLAN NOTICES, V49, P33, DOI [10.1145/2660193.2660233, 10.1145/2714064.2660233]
   Ratner B., The Correlation Coefficient: Definition
   Rayside D., 2007, INT C AUTOMATED SOFT, P194
   Richards G, 2011, ACM SIGPLAN NOTICES, V46, P677, DOI 10.1145/2076021.2048119
   Robinson T, AUTOMAGICALLY WRAPPI
   Selenium, SEL BROWS AUT FRAM
   Simpson MS, 2013, SOFTWARE PRACT EXPER, V43, P93, DOI 10.1002/spe.2105
   Sor V, 2015, SOFTWARE PRACT EXPER, V45, P1307, DOI 10.1002/spe.2275
   The WebKit Open Source Project, SUNSPIDER JAVASCRIPT
   TodoMVC, TOD HELP YOU SEL MY
   Wang Xiao Sophia, 2013, 10 USENIX S NETWORKE
   Wei SY, 2016, SOFTWARE PRACT EXPER, V46, P867, DOI 10.1002/spe.2334
   Woychowsky E, 2007, CREATING WEB PAGES A
   Xu GQ, 2011, ACM SIGPLAN NOTICES, V46, P270, DOI 10.1145/1993316.1993530
   Xu GQ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P151, DOI 10.1145/1368088.1368110
   Yahoo Inc, YAH JAV LIB YUI
   Yank K, NOT WRITE JAVASCRIPT
NR 47
TC 8
Z9 10
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2017
VL 47
IS 1
BP 97
EP 123
DI 10.1002/spe.2406
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI5DO
UT WOS:000392514400005
DA 2024-07-18
ER

PT J
AU Guo, YC
   Yang, W
   Chen, JY
   Lee, JK
AF Guo, Yu-Chuan
   Yang, Wuu
   Chen, Jiunn-Yeu
   Lee, Jenq-Kuen
TI Translating the ARM Neon and VFP instructions in a binary translator
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE binary translation; cloud computing; LLVM; floating-point instruction;
   Neon; vector instruction; VFP; virtualization
AB Binary translation attempts to emulate one instruction set with another on the same or different platforms. The important technique is widely used in modern software. Vector and floating-point instructions are widely used in many applications, including multimedia, graphics, and gaming. Although these instructions are usually simulated with software in a binary translator, it is important to support them such that the host single-instruction, multiple-data (SIMD) and floating-point hardware are efficiently used during emulation. We report our design and implementation of the emulation of ARM Neon and vector floating point (VFP) instructions in the machine-code-to-low-level-virtual-machine (MC2LLVM) binary translator. The Neon and VFP instructions are first translated into carefully chosen sequences of LLVM intermediate representation (IR), and later, the IR sequences are optimized and translated into the host native binary by the existing LLVM backend. Because MC2LLVM makes use of the vector and floating-point types in LLVM IR, the generated host native binary can take full advantage of the vector and floating-point functional units, if present, of the host machine. To be fully compliant with Neon and VFP instruction sets, all the features are supported, including the flush-to-zero mode, default not a number mode, and floating-point exceptions. The experimental results show that code generated by MC2LLVM with the Neon and VFP extensions achieves an average speedup of 1.174x in SPEC 2006 benchmark suites and exhibits a floating-point throughput of 12.05x in LINPACK, compared with code generated by MC2LLVM without the Neon and VFP extensions. Furthermore, MC2LLVM is 3.36x faster than QEMU for processing Neon/VFP instructions. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Guo, Yu-Chuan; Yang, Wuu; Chen, Jiunn-Yeu] Natl Chiao Tung Univ, Hsinchu, Taiwan.
   [Lee, Jenq-Kuen] Natl Tsing Hua Univ, Hsinchu, Taiwan.
C3 National Yang Ming Chiao Tung University; National Tsing Hua University
RP Yang, W (corresponding author), Natl Chiao Tung Univ, Hsinchu, Taiwan.
EM wuuyang@cs.nctu.edu.tw
FU Ministry of Science and Technology, Taiwan, Republic of China [MOST
   103-2221-E-009-105-MY3, NSC 100-2218-E-009-009-MY3, NSC
   100-2218-E-009-010-MY3]
FX The work reported in this paper is partially supported by Ministry of
   Science and Technology, Taiwan, Republic of China, under grants MOST
   103-2221-E-009-105-MY3, NSC 100-2218-E-009-009-MY3, and NSC
   100-2218-E-009-010-MY3.
CR [Anonymous], 2008, IEEE Standard 754-2008
   [Anonymous], 2003, ACM SIGOPS OPERATING
   [Anonymous], 2002, THESIS U ILLINOIS UR
   [Anonymous], INTEL AVX NEW FRONTI
   ARM, 2011, 0406B ARM DDI
   Bala V, 2000, ACM SIGPLAN NOTICES, V35, P1, DOI 10.1145/358438.349303
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Bruening D, 2003, INT SYM CODE GENER, P265, DOI 10.1109/CGO.2003.1191551
   Chen Jiunn-Yeu, 2008, P 6 WORKSH OPT DSP E, P55
   Chernoff A, 1998, IEEE MICRO, V18, P56, DOI 10.1109/40.671403
   Cmelik B., 1994, Performance Evaluation Review, V22, P128, DOI 10.1145/183019.183032
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Dongarra JJ, 2003, CONCURR COMP-PRACT E, V15, P803, DOI 10.1002/cpe.728
   Hazelwood K, 2009, ISMM'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P20
   Hazelwood Kim., 2006, Proceedings of the 2006 international conference on Compilers, architecture and synthesis for embedded systems, CASES '06, P261, DOI 10.1145/1176760.1176793.29.M
   Henning J. L., 2006, SIGARCH COMPUT ARCHI, V34, P1, DOI [DOI 10.1145/1186736.1186737, 10.1145/1186736.1186737]
   Inoue H, 2012, SOFTWARE PRACT EXPER, V42, P753, DOI 10.1002/spe.1102
   Jantz MR, 2014, SOFTWARE PRACT EXPER, V44, P643, DOI 10.1002/spe.2176
   Kivity A., 2007, P LIN S DTTAW DNTOR, V1, P225
   Kretz M, 2012, SOFTWARE PRACT EXPER, V42, P1409, DOI 10.1002/spe.1149
   Lemire D., 2015, Software: Practice and Experience, V45, P1, DOI 10.1002/spe.2203
   Lu Jiwei., 2004, J INSTRUCTION LEVEL, V6, P2004
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Moore RW, 2009, LCTES'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN/SIGBED CONFERENCE ON LANGUAGES, COMPILERS, AND TOOLS FOR EMBEDDED SYSTEMS, P147
   Payer M, 2011, ACM SIGPLAN NOTICES, V46, P157, DOI 10.1145/2007477.1952703
   Pryanishnikov I, 2007, SOFTWARE PRACT EXPER, V37, P93, DOI 10.1002/spe.751
   Schwarz EM, 2005, P 16 IEEE S COMP AR
   Shen BY, 2012, CASES'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON COMPILERS, ARCHITECTURES AND SYNTHESIS FOR EMBEDDED SYSTEMS, P51
   Shen BY, 2012, P 7 IEEE INT S IND E
   SITES RL, 1993, COMMUN ACM, V36, P69, DOI 10.1145/151220.151227
   Smith J., 2005, VIRTUAL MACHINES VER
   Stallman R.M., 2002, Debugging with GDB: The GNU Source-Level Debugger, V9th
   Texas Instruments, 2012, PAND OMAP4430 SCO DE
   van Rossum G., 2014, PYTHON LANGUAGE REFE
   VMware Inc, 2013, VMWARE WORKST
   Zheng C, 2000, COMPUTER, V33, P47, DOI 10.1109/2.825695
NR 36
TC 5
Z9 7
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2016
VL 46
IS 12
BP 1591
EP 1615
DI 10.1002/spe.2394
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB4TV
UT WOS:000387367600001
DA 2024-07-18
ER

PT J
AU de Souza, AJ
   Cavalcanti, ALO
AF de Souza, Alessandro J.
   Cavalcanti, Anderson Luiz O.
TI Visual Language for Use Case Description
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE use case description; interaction model; interactive software
   development
ID USABILITY
AB Use cases have been widely adopted by software engineers to model user-system interaction. However, its fragmented and textual description of functionalities has been inadequate for user-centered design concerns. This has led human-computer interaction professionals to create their own methods and techniques, which has often had the opposite philosophy from that used by software engineers when modeling user-system interactions. Therefore, the present paper proposes the Visual Language for Use Case Description aiming to improve the support of use cases for user-centered design by projecting a common artifact for the communication between both the human-computer interaction and the software engineering communities. To obtain the perceptions of potential users about Visual Language for Use Cases Description, an experimental study involving software development students and professionals was conducted. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [de Souza, Alessandro J.] Inst Fed Educ Ciencia & Tecnol Rio Grande do Nort, Natal, RN, Brazil.
   [Cavalcanti, Anderson Luiz O.] Univ Fed Rio Grande do Norte, Natal, RN, Brazil.
C3 Instituto Federal do Rio Grande do Norte; Universidade Federal do Rio
   Grande do Norte
RP de Souza, AJ (corresponding author), IFRN, Diretoria Acad Gestao & Informat, Campus Natal Cent, BR-59015000 Natal, RN, Brazil.
EM alessandro.souza@ifrn.edu.br
OI Souza, Alessandro Jose de/0000-0003-0634-419X
CR Ahmed S, 2007, J SYST SOFTWARE, V80, P1408, DOI 10.1016/j.jss.2006.10.037
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1983, The Psychology of Human-Computer Interaction
   [Anonymous], 2010, DESIGNING INTERFACES
   Barbosa JS, 2010, INTERACAO HUMANO COM
   Bass L, 2003, J SYST SOFTWARE, V66, P187, DOI 10.1016/S0164-1212(02)00076-6
   Constantine LL, 2001, AW OBJ TECHNOL S, P245
   Costa Neto M, P 10 BRAZ S HUM FACT, P124
   Cox D, P 12 INT C HUM COMP, P1072
   da Silva PP, 2003, IEEE SOFTWARE, V20, P62, DOI 10.1109/MS.2003.1207457
   de Paula M, P 2005 LAT AM C HUM, P109
   Espana Sergio., 2010, J BRAZILIAN COMPUTER, V16, P3, DOI [10.1007/s13173-010-0003-5, DOI 10.1007/S13173-010-0003-5]
   Folmer E, 2004, J SYST SOFTWARE, V70, P61, DOI 10.1016/S0164-1212(02)00159-0
   Garson D, 2013, STAT ASS BLUE BOOK S
   Hu PJ, 1999, J MANAGE INFORM SYST, V16, P91, DOI 10.1080/07421222.1999.11518247
   Jacobson Ivar., OBJECT ORIENTED SOFT
   Juristo N, 2007, IEEE T SOFTWARE ENG, V33, P744, DOI 10.1109/TSE.2007.70741
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Moody D.L., 2003, P 11 EUR C INF SYST, P1327
   OMG, 2013, UN MOD LANG SPEC
   Paterno F, P 4 INT C HUM CTR SO, P299
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   PREECE J., INTERACTION DESIGN
   Puerta A, IEEE SOFTW, V14, P40
   Rogers Yvonne, 2011, Interaction design: beyond humancomputer interaction
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   Shneiderman B., DESIGNING USER INTER
   Somé SS, 2006, INFORM SOFTWARE TECH, V48, P43, DOI 10.1016/j.infsof.2005.02.006
   Sommerville Ian., 2006, Software Engineering: (Update), V8th
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Wohlin C., 2012, Experimentation in Software Engineering
NR 32
TC 2
Z9 2
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2016
VL 46
IS 9
BP 1239
EP 1261
DI 10.1002/spe.2376
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DS8KO
UT WOS:000381032300005
DA 2024-07-18
ER

PT J
AU Lee, SW
   Moon, SM
   Kim, SM
AF Lee, Seong-Won
   Moon, Soo-Mook
   Kim, Seong-Moo
TI Flow-sensitive runtime estimation: an enhanced hot spot detection
   heuristics for embedded Java just-in-time compilers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java just-in-time compilation; hot spot detection; start-up behavior;
   HotSpot heuristic; DTV Xlet application
ID DESIGN
AB Java just-in-time compilers often compile only hot methods because the compilation overhead is a part of the running time. This requires precise and efficient hot spot detection, which includes distinguishing hot methods from cold ones, detecting them as early as possible, and paying a small detection overhead. Hot spot detection is especially important in embedded applications because they show more of a start-up phase behavior of a regular application where methods are not executed heavily, so the hot methods are not definite. Because a long-running method is likely to be a hot method, we can detect a hot method by measuring its running time during interpretation. However, precise measurement of the running time during execution is too expensive, especially in embedded systems, so many counter-based heuristics have been proposed to estimate it such as Oracle's HotSpot heuristic. One problem is that although the overhead of these heuristics is low, they do not estimate the running time precisely, which may lead to imprecise hot spot detection.This paper proposes a new hot spot detection heuristic called flow-sensitive runtime estimation, which can estimate the running time more precisely than others with a relatively low overhead. It only counts important bytecode instructions dynamically, but it can obtain the precise count of all interpreted bytecode instructions with a simple arithmetic calculation. We also propose a static analysis technique to predict those hot methods which spends a huge execution time once invoked, so as to compile them at their first invocation. Our experimental results show that these techniques can improve the performance by as much as an average of 7.4% compared with the HotSpot heuristic for the benchmarks when they run once, which is often regarded as showing the start-up phase behavior. Even for real embedded Java applications such as the digital TV Java Xlet applications, our techniques can improve the user response time by an average of 7.1%. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Lee, Seong-Won; Moon, Soo-Mook; Kim, Seong-Moo] Seoul Natl Univ, Sch Elect Engn & Comp Sci, Seoul, South Korea.
C3 Seoul National University (SNU)
RP Lee, SW (corresponding author), Seoul Natl Univ, Sch Elect Engn & Comp Sci, Seoul, South Korea.
EM swlee@altair.snu.ac.kr
FU IT R&D program of MOTIE/KEIT [10045344]
FX This work was supported by the IT R&D program of MOTIE/KEIT [10045344,
   Development of Optimized Virtual Machine Acceleration Engine for Web
   Application Platform].
CR [Anonymous], 2006, SIGBED REV, DOI DOI 10.1145/1164050.1164052
   Arnold M, 2005, P IEEE, V93, P449, DOI 10.1109/JPROC.2004.840305
   Arnold M, 2001, ACM SIGPLAN NOTICES, V36, P168, DOI 10.1145/381694.378832
   Arnold M, 2000, ACM SIGPLAN NOTICES, V35, P47, DOI 10.1145/354222.353175
   Aycock J, 2003, ACM COMPUT SURV, V35, P97, DOI 10.1145/857076.857077
   Bergel A, 2011, LECT NOTES COMPUT SC, V6813, P533, DOI 10.1007/978-3-642-22655-7_25
   Buytaert D, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P553
   Cheng B, JIT COMPILER ANDROID
   Cierniak M, 2005, CONCURR COMP-PRACT E, V17, P617, DOI 10.1002/cpe.852
   Fink SJ, 2003, INT SYM CODE GENER, P241, DOI 10.1109/CGO.2003.1191549
   Gosling James, 1996, The Java Language Specification
   Gu DY, 2008, INT SYM CODE GENER, P24
   HOLZLE U, 1992, SIGPLAN NOTICES, V27, P32, DOI 10.1145/143103.143114
   Java ME, PHONE PLATFORM DEV P
   Jung DH, 2014, ACM T EMBED COMPUT S, V13, DOI 10.1145/2506257
   Kotzmann T, 2008, ACM T ARCHIT CODE OP, V5, DOI 10.1145/1369396.1370017
   Kumar KVS, 2004, ACM SIGPLAN NOTICES, V39, P38, DOI 10.1145/981009.981015
   Morris S., 2005, Interactive TV Standards: A Guide to MHP, OCAP
   Mytkowicz T, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P187, DOI 10.1145/1806596.1806618
   Namjoshi MA, 2010, ACM SIGPLAN NOTICES, V45, P133
   Nartovich A, 2007, IBM TECHNOLOGY JAVA
   Oracle, 2005, CDC RUNT GUID SUN JA
   Oracle Microsystems, 2003, CDC APPL FRAM PERS M
   Oracle Microsystems, CDC REF IMPL
   Paleczny M, 2001, USENIX ASSOCIATION PROCEEDINGS JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P1
   Sarimbekov A., 2011, Proceedings of the 9th International Conference on Principles and Practice of Programming in Java, PPPJ'11, P11
   Schilling JL, 2003, ACM SIGPLAN NOTICES, V38, P36, DOI 10.1145/772970.772975
   Smith J.E., 2005, VIRTUAL MACHINES
   Suganuma T, 2005, ACM T PROGR LANG SYS, V27, P732, DOI 10.1145/1075382.1075386
   Sundaresan V, 2006, INT SYM CODE GENER, P87
   Tsafrir D, 2007, P ACM WORKSH EXP COM
   Whaley John., 2000, JAVA 00, P78
NR 32
TC 0
Z9 0
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2016
VL 46
IS 6
BP 841
EP 864
DI 10.1002/spe.2315
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK1WU
UT WOS:000374706600006
DA 2024-07-18
ER

PT J
AU Goonasekera, N
   Caelli, W
   Fidge, C
AF Goonasekera, Nuwan
   Caelli, William
   Fidge, Colin
TI LibVM: an architecture for shared library sandboxing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE system call inter-positioning; component isolation; dependable systems;
   information security; hardware virtualization; component software
AB Many software applications extend their functionality by dynamically loading libraries into their allocated address space. However, shared libraries are also often of unknown provenance and quality and may contain accidental bugs or, in some cases, deliberately malicious code. Most sandboxing techniques that address these issues require recompilation of the libraries using custom tool chains, require significant modifications to the libraries, do not retain the benefits of single address space programming, do not completely isolate guest code, or incur substantial performance overheads. In this paper, we present LibVM, a sandboxing architecture for isolating libraries within a host application without requiring any modifications to the shared libraries themselves, while still retaining the benefits of a single address space and also introducing a system call inter-positioning layer that allows complete arbitration over a shared library's functionality. We show how to utilize contemporary hardware-virtualization support towards this end with reasonable performance overheads, and, in the absence of such hardware support, our model can also be implemented using a software-based mechanism. We ensure that our implementation conforms as closely as possible to existing shared library manipulation functions, minimizing the amount of effort needed to apply such isolation to existing programs. Our experimental results show that it is easy to gain immediate benefits in scenarios where the goal is to guard the host application against unintentional programming errors when using shared libraries, as well as in more complex scenarios, where a shared library is suspected of being actively hostile. In both cases, no changes are required to the shared libraries themselves. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Goonasekera, Nuwan; Caelli, William; Fidge, Colin] Queensland Univ Technol, Brisbane, Qld 4001, Australia.
C3 Queensland University of Technology (QUT)
RP Goonasekera, N (corresponding author), Queensland Univ Technol, Brisbane, Qld 4001, Australia.
EM nuwan.goonasekera@unimelb.edu.au
RI Fidge, Colin/J-1036-2012
OI Fidge, Colin/0000-0002-9410-7217; Goonasekera, Nuwan/0000-0002-3019-2934
CR Adams K, 2006, ACM SIGPLAN NOTICES, V41, P2, DOI 10.1145/1168918.1168860
   AMD, 2008, AMD-V Nested Paging
   [Anonymous], 2003, ACM SIGOPS OPERATING
   [Anonymous], SOSP
   [Anonymous], 2004, 1 WORKSH OP SYST ARC
   Barth A., 2008, The security architecture of the chromium browser
   Bugnion E, 1997, ACM T COMPUT SYST, V15, P412, DOI [10.1145/265924.265930, 10.1145/269005.266672]
   Chiueh T., 1999, P 17 ACM S OP SYST P
   Chiueh T.-C., 1999, Proceedings of the Seventh Workshop on Hot Topics in Operating Systems, P110, DOI 10.1109/HOTOS.1999.798386
   Ford Bryan., 2008, USENIX 2008 ANN TECH, P293
   Garfinkel T., 2004, P NETW DISTR SYST SE
   Garfinkel Tal., 2003, P NETWORK DISTRIBUTE
   Goonasekera Nuwan, 2012, Journal of Software, V7, P2107, DOI 10.4304/jsw.7.9.2107-2118
   Goonasekera Nuwan A., 2009, 2009 Symposia and Workshops on Ubiquitous, Autonomic and Trusted Computing in conjunction with the UIC 2009 and ATC 2009 Conferences, P54, DOI 10.1109/UIC-ATC.2009.86
   Herder JN, 2009, I C DEPEND SYS NETWO, P33, DOI 10.1109/DSN.2009.5270357
   Hunt G., 2007, Operating Systems Review, V41, P341, DOI 10.1145/1272998.1273032
   Intel, 2007, INT 64 IA 32 ARCH SO, V1
   Intel, 2008, INT VIRT TECHN
   Intel, 2007, INT 64 IA 32 ARCH B, V3B
   Jain K, 1999, P ISOC S NETW DISTR, P19
   Lam LC, 2005, I C DEPEND SYS NETWO, P388
   Leslie B, 2005, J COMPUT SCI TECH-CH, V20, P654, DOI 10.1007/s11390-005-0654-4
   Levine, 1999, Linkers and Loaders, V4, P149
   Liedtke J, 1997, SIXTH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, PROCEEDINGS, P28, DOI 10.1109/HOTOS.1997.595177
   MCCAMANT S., 2006, P 15 C USENIX SEC S
   Noordende GVt, 2008, P 2 INT C SEC CRYPT, P414
   Petersson J., 2005, WHAT IS LINUX GATE S
   Redhat, 2010, KERN BAS VIRT MACH
   Reis C, 2007, UWCSE20071201 DEP CO
   Robin JohnScott., 2000, "Proceedings of the 9th Conference on USENIX Security Symposium - volume 9," SSYM'00, V9, P10
   Sugerman J, 2001, P GEN TRACK 2002 USE
   Swift M. M., 2003, Operating Systems Review, V37, P207, DOI 10.1145/1165389.945466
   The Google Chrome Team, 2008, CHROM DEV DOC MULT P
   Uhlig R, 2005, COMPUTER, V38, P48, DOI 10.1109/MC.2005.163
   Wilson P. R., 1991, Computer Architecture News, V19, P6, DOI 10.1145/122576.122577
   Yee B, 2010, COMMUN ACM, V53, P91, DOI 10.1145/1629175.1629203
   Yongzheng Wu, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P859, DOI 10.1007/978-3-642-33167-1_49
   Zeigler A., 2008, IE8 LOOSELY COUPLED
NR 38
TC 3
Z9 3
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2015
VL 45
IS 12
BP 1597
EP 1617
DI 10.1002/spe.2294
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LK
UT WOS:000363501100001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Sözer, H
AF Sozer, H.
TI Integrated static code analysis and runtime verification
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software verification; runtime verification; static code analysis; model
   transformations; tool integration
ID TAXONOMY
AB Static code analysis tools automatically generate alerts for potential software faults that can lead to failures. However, these tools usually generate a very large number of alerts, some of which are subject to false positives. Because of limited resources, it is usually hard to inspect all the alerts. As a complementary approach, runtime verification techniques verify dynamic system behavior with respect to a set of specifications. However, these specifications are usually created manually based on system requirements and constraints. In this paper, we introduce a noval approach and a toolchain for integrated static code analysis and runtime verification. Alerts that are generated by static code analysis tools are utilized for automatically generating runtime verification specifications. On the other hand, runtime verification results are used for automatically generating filters for static code analysis tools to eliminate false positives. The approach is illustrated for the static analysis and runtime verification of an open-source bibliography reference manager software. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Sozer, H.] Ozyegin Univ, TR-34794 Istanbul, Turkey.
C3 Ozyegin University
RP Sözer, H (corresponding author), Ozyegin Univ, Sch Engn, Nisantepe Mah Orman Sk 13, TR-34794 Istanbul, Turkey.
EM hasan.sozer@ozyegin.edu.tr
RI Sözer, Hasan/AAR-8697-2020; Sözer, Hasan/A-4722-2015
OI Sözer, Hasan/0000-0002-2968-4763; Sözer, Hasan/0000-0002-2968-4763
FU Scientific and Research Council of Turkey (TUBITAK) [113E548]
FX We thank the anonymous reviewers for their feedback to improve this
   paper. This work is supported by The Scientific and Research Council of
   Turkey (TUBITAK), grant number 113E548.
CR Ahrendt Wolfgang, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P312, DOI 10.1007/978-3-642-34026-0_24
   [Anonymous], 2009, EFFECTIVE MANAGEMENT
   Arthos C, 2005, P INT WORKSH INT OBJ, P98
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Ciraci S, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING CHALLENGES FOR THE SMART GRID (SE4SG), P1, DOI 10.1109/SE4SG.2013.6596105
   Çiraci S, 2012, P INT COMP SOFTW APP, P257, DOI 10.1109/COMPSAC.2012.36
   Clarke EM., 2012, LASER Summer School on Software Engineering, P1, DOI [10.1007/978-3-642-35746-6, 10.1007/978-3-642-35746-6_1, DOI 10.1007/978-3-642-35746-6_1]
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   dess Rivieress J, 2006, ECLIPSE PLATFORM TEC
   Fenns J, 2006, PRACTEXJOURNAL, V4, P1
   Gabbays D, 1997, TEMPORAL LOGIC
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Jin D, 2012, PROC INT CONF SOFTW, P1427, DOI 10.1109/ICSE.2012.6227231
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kiczaless G, 1987, P EUR C OBJ OR PROGR, P220
   Kremenek T, 2003, LECT NOTES COMPUT SC, V2694, P295
   Lamports L, 1994, LATEX DOCUMENT PREPA
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Merediths PO, 2012, THESIS U ILLINOIS UR
   Pompas R, 2004, JAVA EMITTER TEMPLAT
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   SCHROEDER BA, 1995, COMPUTER, V28, P72, DOI 10.1109/2.386988
   Sözer H, 2013, SOFTWARE QUAL J, V21, P203, DOI 10.1007/s11219-011-9171-6
   Tischers R, 1983, ACM SIGPLAN NOTICES, V18, P155
   Vissers W, 2003, AUTOMAT SOFTW ENG, V10, P3
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Wohlins C, 2012, EXPT SOFTWARE ENG
   Yong SH, 2005, FORM METHOD SYST DES, V27, P313, DOI 10.1007/s10703-005-3401-0
   Yuan X, 2007, PROC INT CONF SOFTW, P396
   Yüksel U, 2013, PROC IEEE INT CONF S, P532, DOI 10.1109/ICSM.2013.89
NR 36
TC 6
Z9 9
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2015
VL 45
IS 10
BP 1359
EP 1373
DI 10.1002/spe.2287
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7VW
UT WOS:000360814800003
DA 2024-07-18
ER

PT J
AU Ismail, L
   Khan, L
AF Ismail, Leila
   Khan, Latifur
TI Implementation and performance evaluation of a scheduling algorithm for
   divisible load parallel applications in a cloud computing environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed systems; cloud computing; divisible load application;
   autonomous computing; scheduling; perform
ID IMAGE-PROCESSING APPLICATIONS; TREE NETWORKS; WORKSTATIONS; SYSTEMS; BUS
AB Cloud computing is an emerging technology in which information technology resources are virtualized to users in a set of computing resources on a pay-per-use basis. It is seen as an effective infrastructure for high performance applications. Divisible load applications occur in many scientific and engineering applications. However, dividing an application and deploying it in a cloud computing environment face challenges to obtain an optimal performance due to the overheads introduced by the cloud virtualization and the supporting cloud middleware. Therefore, we provide results of series of extensive experiments in scheduling divisible load application in a Cloud environment to decrease the overall application execution time considering the cloud networking and computing capacities presented to the application's user. We experiment with real applications within the Amazon cloud computing environment. Our extensive experiments analyze the reasons of the discrepancies between a theoretical model and the reality and propose adequate solutions. These discrepancies are due to three factors: the network behavior, the application behavior and the cloud computing virtualization. Our results show that applying the algorithm result in a maximum ratio of 1.41 of the measured normalized makespan versus the ideal makespan for application in which the communication to computation ratio is big. They show that the algorithm is effective for those applications in a heterogeneous setting reaching a ratio of 1.28 for large data sets. For application following the ensemble clustering model in which the computation to communication ratio is big and variable, we obtained a maximum ratio of 4.7 for large data set and a ratio of 2.11 for small data set. Applying the algorithm also results in an important speedup. These results are revealing for the type of applications we consider under experiments. The experiments also reveal the impact of the choice of the platforms provided by Amazon on the performance of the applications under study. Considering the emergence of cloud computing for high performance applications, the results in this paper can be widely adopted by cloud computing developers. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Ismail, Leila] UAE Univ, Coll IT, Al Ain 17551, U Arab Emirates.
   [Khan, Latifur] Univ Texas Dallas, Erik Jonsson Sch Engn & Comp Sci, Dept Comp Sci, Richardson, TX 75083 USA.
C3 United Arab Emirates University; University of Texas System; University
   of Texas Dallas
RP Ismail, L (corresponding author), UAE Univ, Coll IT, Al Ain 17551, U Arab Emirates.
EM leila@uaeu.ac.ae
RI Ismail, Leila/Y-4172-2019
OI Ismail, Leila/0000-0003-0946-1818; Khan, Latifur/0000-0002-9300-1576
CR Altilar DT, 2002, LECT NOTES COMPUT SC, V2400, P197
   Amazon, WHAT IS EC2 COMP UN
   [Anonymous], P 10 INT S PERV SYST
   [Anonymous], IEEE INT C MULT COMP
   [Anonymous], 2009, DEP ELECT ENG COMPUT
   Barlas G, 2012, PARALLEL COMPUT, V38, P226, DOI 10.1016/j.parco.2012.02.001
   BATAINEH S, 1994, IEEE T COMPUT, V43, P1184, DOI 10.1109/12.324544
   Beaumont O, 2005, IEEE T PARALL DISTR, V16, P207, DOI 10.1109/TPDS.2005.35
   BEAUMONT O, 2002, P INT PAR DISTR PROC
   BHARADWAJ V, 1995, IEEE T AERO ELEC SYS, V31, P555, DOI 10.1109/7.381944
   Bharadwaj V., 2003, Cluster Computing, V6, P7, DOI 10.1023/A:1020958815308
   Bharadwaj V, 2002, IMAGE VISION COMPUT, V20, P917, DOI 10.1016/S0262-8856(02)00090-2
   Biania C, 2011, THESIS PRINCETON U
   Buyya R, 2008, P 10 IEEE INT C HIGH
   Buyya R, 2009, FUTURE GENERATION CO, V25
   Drozdowski M, 2000, LECT NOTES COMPUT SC, V1900, P311
   Drozdowski M, 2006, LECT NOTES COMPUT SC, V3911, P847
   Ghose D., 2003, CLUSTER COMPUTING, V6
   Greenberg A, 2009, ACM SIGCOMM COMP COM, V39, P51, DOI 10.1145/1594977.1592576
   Ismail L, 2012, INT C PAR DISTR PROC
   Ismail L, 2008, PROCEEDINGS OF NINTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING, P685, DOI 10.1109/SNPD.2008.136
   Ismail L, 2013, SOFTWARE PRACT EXPER, V43, P281, DOI 10.1002/spe.2112
   LEE CK, 1995, PARALLEL COMPUT, V21, P137, DOI 10.1016/0167-8191(94)00068-L
   Masud MM, 2012, INT J KNOWLWDGE INFO, V33
   Masud MM, 2011, IEEE T KNOWL DATA EN, V23, P859, DOI 10.1109/TKDE.2010.61
   Robertazzi TG, 2003, COMPUTER, V36, P63, DOI 10.1109/MC.2003.1198238
   Shokripour A, 2012, FUTURE GENER COMP SY, V28, P1205, DOI 10.1016/j.future.2012.03.008
   Yang Y, 2003, CS20030754 U CAL
   Yang Yang., 2007, On the complexity of multi-round divisible load scheduling
   YANG YY, 2005, IEEE T PARALLEL DIST, V16
NR 30
TC 11
Z9 13
U1 0
U2 27
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2015
VL 45
IS 6
BP 765
EP 781
DI 10.1002/spe.2258
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG1LA
UT WOS:000353032900002
DA 2024-07-18
ER

PT J
AU Zhang, YM
   Jiang, SJ
   Yuan, G
   Ju, XL
   Zhang, HC
AF Zhang, Yanmei
   Jiang, Shujuan
   Yuan, Guan
   Ju, Xiaolin
   Zhang, Hongchang
TI An approach of class integration test order determination based on test
   levels
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE integration test; abstract classes; polymorphism; test levels;
   generator; test stubs
AB In recent years, many approaches have been developed to determine the order of tested classes in interclass integration test. However, existing approaches are inaccurate, as they ignore the influence of abstract classes and polymorphism. In this paper, we propose a test-level-based approach to deal with class-integration-test order, in which both abstract classes and polymorphism are taken into account. First, based on interclass dependence analysis, we develop an edge-removing algorithm to eliminate cycles caused by static and dynamic dependencies, taking abstract classes and polymorphism into account. Then, after eliminating cycles, we propose a class-integration-test order algorithm based on test levels, including static and dynamic test levels. In this algorithm, we take into account the fact of some test levels infeasible caused by the characteristic of abstract classes that they cannot be instantiated and offer corresponding adjustment strategy. Finally, we design and implement a test level order generator. The experimental results show that the proposed strategy needs less test stubs than the most typically graph-based approaches. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Zhang, Yanmei; Jiang, Shujuan; Yuan, Guan; Ju, Xiaolin; Zhang, Hongchang] China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou, Jiangsu, Peoples R China.
C3 China University of Mining & Technology
RP Jiang, SJ (corresponding author), China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou, Jiangsu, Peoples R China.
EM shjjiang@cumt.edu.cn
RI Jiang, Shujuan/K-4178-2012; wang, shuo/KCL-3379-2024; JU,
   Xiao-lin/F-8459-2011
OI Jiang, Shujuan/0000-0003-0643-0565; JU, Xiao-lin/0000-0003-2579-5359
FU Fundamental Research Funds for the Central Universities [2013QNB17]
FX This work was supported in part by awards from the Fundamental Research
   Funds for the Central Universities (2013QNB17). The authors would like
   to thank the editor and anonymous reviewers for their helpful and
   constructive comments.
CR Abdurazik A, 2009, COMPUT J, V52, P557, DOI 10.1093/comjnl/bxm054
   Briand LC, 2003, IEEE T SOFTWARE ENG, V29, P594, DOI 10.1109/TSE.2003.1214324
   Briand LC, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P287, DOI 10.1109/ISSRE.2001.989482
   Briands L, 2002, SCE0203 CARL U
   Chen Q, 2004, INT C COMP SUPP COOP, P653, DOI 10.1109/CACWD.2004.1349104
   Clarke PJ, 2012, SOFTW TEST VERIF REL, V22, P147, DOI [10.1002/stvr.429, 10.1002/stvr.434]
   Delamare R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P804, DOI 10.1109/ICST.2012.179
   Harrold M. J., 1992, International Conference on Software Engineering, P68, DOI 10.1109/ICSE.1992.753491
   Hewett R, 2009, IEEE INT CONF AUTOM, P211, DOI 10.1109/ASE.2009.84
   Hongmin Lu, 2012, Empirical Software Engineering, V17, P200, DOI 10.1007/s10664-011-9170-z
   Jaroenpiboonkit J, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P49, DOI 10.1109/ASPEC.2007.69
   Kraft NA, 2006, J SYST SOFTWARE, V79, P1092, DOI 10.1016/j.jss.2005.10.019
   KUNG DC, 1995, J OBJECT-ORIENT PROG, V8, P51
   Labiche Y., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P136, DOI 10.1109/ICSE.2000.870405
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   Li Du, 2008, Computer Engineering and Design, V29, P781
   Lis X, 2005, J ACAD EQUIPMENT COM, V16, P93
   Malloy BA, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P353, DOI 10.1109/ISSRE.2003.1251057
   Paradkars A, 1996, P 1996 C CTR ADV STU, V30
   Swamys M, 1981, GRAPHS NETWORKS ALGO, V3
   Tai KC, 1999, J OBJECT-ORIENT PROG, V12, P18
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Vlissidess J, 1995, DESIGN PATTERNS ELEM, V49, P120
NR 23
TC 4
Z9 6
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2015
VL 45
IS 5
BP 657
EP 687
DI 10.1002/spe.2260
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF4OC
UT WOS:000352528200004
DA 2024-07-18
ER

PT J
AU Arroyuelo, D
   Claude, F
   Maneth, S
   Mäkinen, V
   Navarro, G
   Nguyen, K
   Siren, J
   Välimäki, N
AF Arroyuelo, Diego
   Claude, Francisco
   Maneth, Sebastian
   Makinen, Veli
   Navarro, Gonzalo
   Kim Nguyen
   Siren, Jouni
   Valimaki, Niko
TI Fast in-memory XPath search using compressed indexes
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XML; succinct data structures; XPath; tree automata
ID ALIGNMENT; AUTOMATA; TREES; XML; REPRESENTATION; SEQUENCES
AB Extensible Markup Language (XML) documents consist of text data plus structured data (markup). XPath allows to query both text and structure. Evaluating such hybrid queries is challenging. We present a system for in-memory evaluation of XPath search queries, that is, queries with text and structure predicates, yet without advanced features such as backward axes, arithmetics, and joins. We show that for this query fragment, which contains Forward Core XPath, our system, dubbed Succinct XML Self-Index (SXSI'), outperforms existing systems by 1-3 orders of magnitude. SXSI is based on state-of-the-art indexes for text and structure data. It combines two novelties. On one hand, it represents the XML data in a compact indexed form, which allows it to handle larger collections in main memory while supporting powerful search and navigation operations over the text and the structure. On the other hand, it features an execution engine that uses tree automata and cleverly chooses evaluation orders that leverage the speeds of the respective indexes. SXSI is modular and allows seamless replacement of its indexes. This is demonstrated through experiments with (1) a text index specialized for search of bio sequences, and (2) a word-based text index specialized for natural language search. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Arroyuelo, Diego] Univ Tecn Federico Santa Maria, Dept Informat, Valparaiso, Chile.
   [Claude, Francisco] Univ Diego Portales, Escuela Informat & Telecomunicac, Santiago, Chile.
   [Maneth, Sebastian] Univ Edinburgh, Sch Informat, Edinburgh EH8 9YL, Midlothian, Scotland.
   [Makinen, Veli] Univ Helsinki, HIIT, FIN-00014 Helsinki, Finland.
   [Makinen, Veli] Univ Helsinki, Dept Comp Sci, FIN-00014 Helsinki, Finland.
   [Navarro, Gonzalo; Siren, Jouni] Univ Chile, Dept Comp Sci, Santiago, Chile.
   [Kim Nguyen] Univ Paris 11, LRI, Paris, France.
   [Valimaki, Niko] Univ Helsinki, Fac Med, Dept Med Genet, FIN-00014 Helsinki, Finland.
C3 Universidad Tecnica Federico Santa Maria; University Diego Portales;
   University of Edinburgh; University of Helsinki; University of Helsinki;
   Universidad de Chile; Universite Paris Saclay; University of Helsinki
RP Nguyen, K (corresponding author), Univ Paris 11, LRI, Paris, France.
EM kn@lri.fr
RI Nguyen, Kim/JWP-3649-2024; Arroyuelo, Diego/JJF-1083-2023; Välimäki,
   Niko/I-7925-2012; Navarro, Gonzalo/J-3731-2016; Arroyuelo,
   Diego/AAE-8393-2020; Nguyen, Kim Truc K/G-6693-2011
OI Makinen, Veli/0000-0003-4454-1493
FU NICTA, Australia; NSERC of Canada; Go-Bell Scholarships Program;
   Fondecyt, Chile [1-110066]; Millennium Institute for Cell Dynamics and
   Biotechnology (ICDB), Mideplan, Chile [ICM P05-001-F]; Academy of
   Finland [1140727]; Helsinki Graduate School in Computer Science and
   Engineering
FX We would like to thank Schloss Dagstuhl for the very pleasant and
   stimulating research environment it provides; the work of this paper was
   initiated during the Dagstuhl seminar 'Structure-Based Compression of
   Complex Massive Data' (Number 08261). In particular, the idea of sorting
   according to end markers came alive during the meeting, as briefly
   sketched in the report [68], and was then independently developed in
   different directions [25, 64]. We are grateful to Kunihiko Sadakane for
   making available to us his implementation of parentheses structure for
   succinct trees, and to Juha Karjalainen for composing the BioXML data.
   Diego Arroyuelo and Francisco Claude were partially funded by NICTA,
   Australia. Francisco Claude was partially funded by NSERC of Canada and
   the Go-Bell Scholarships Program. Diego Arroyuelo and Gonzalo Navarro
   were partially funded by Fondecyt Grant 1-110066, Chile. Gonzalo Navarro
   was partially funded by Millennium Institute for Cell Dynamics and
   Biotechnology (ICDB), Grant ICM P05-001-F, Mideplan, Chile. Veli Makinen
   and Jouni Siren were partially funded by the Academy of Finland under
   grant number 1140727. Niko Valimaki was partially funded by the Helsinki
   Graduate School in Computer Science and Engineering.
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 2007, XML MIND PROD QIZX X
   [Anonymous], 2008, IEEE DATA ENG B
   Arroyuelo D., 2010, ALENEX, P84
   Arroyuelo D, 2006, CPM, P319
   Arroyuelo D, 2008, LECT NOTES COMPUT SC, V5029, P277, DOI 10.1007/978-3-540-69068-9_26
   Arroyuelo D, 2010, PROC INT CONF DATA, P417, DOI 10.1109/ICDE.2010.5447858
   Barbay J, 2010, LECT NOTES COMPUT SC, V6507, P315, DOI 10.1007/978-3-642-17514-5_27
   Benedikt M, 2008, ACM COMPUT SURV, V41, DOI 10.1145/1456650.1456653
   Benoit D, 2005, ALGORITHMICA, V43, P275, DOI 10.1007/s00453-004-1146-6
   Bjorklund Henrik, 2009, ACM INT C P SERIES, p162 
   Böttcher S, 2008, WEBIST 2008: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES, VOL 1, P13
   Böttcher S, 2011, IEEE DATA COMPR CONF, P403, DOI 10.1109/DCC.2011.47
   Bojanczyk M, 2011, J ACM, V58, DOI 10.1145/1989727.1989731
   Boncz Peter., 2006, SIGMOD 06, P479
   Bonifati A, 2008, DAGST SEM P SCHHL DA
   Burrows M., 1994, BLOCK SORTING LOSSLE
   Chan HL, 2007, ACM T ALGORITHMS, V3, DOI 10.1145/1240233.1240244
   Claude F, 2008, LECT NOTES COMPUT SC, V5280, P176
   Comon H., 2007, TREE AUTOMATA TECHNI
   Conchon S, 2006, P ACM SIGPLAN WORKSH
   Fariña A, 2012, ACM T INFORM SYST, V30, DOI 10.1145/2094072.2094073
   Fernandez MaryF., 2003, VLDB, P1077
   Ferragina P, 2005, ANN IEEE SYMP FOUND, P184, DOI 10.1109/SFCS.2005.69
   Ferragina P, 2005, J ACM, V52, P552, DOI 10.1145/1082036.1082039
   Ferragina P., 2006, WWW '06, P751, DOI DOI 10.1145/1135777.1135891
   Ferragina P, 2007, ACM T ALGORITHMS, V3, DOI 10.1145/1240233.1240243
   Franceschet M, 2005, LECT NOTES COMPUT SC, V3671, P129
   Franceschet M, 2007, XQUERY IMPLEMENTATIO
   Geary RF, 2004, LECT NOTES COMPUT SC, V3109, P159
   Genevès P, 2010, PROC INT CONF DATA, P1169, DOI 10.1109/ICDE.2010.5447786
   Golynski A, 2006, PROCEEDINGS OF THE SEVENTHEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P368, DOI 10.1145/1109557.1109599
   Gottlob G, 2005, ACM T DATABASE SYST, V30, P444, DOI 10.1145/1071610.1071614
   Green TJ, 2004, ACM T DATABASE SYST, V29, P752, DOI 10.1145/1042046.1042051
   Grossi R, 2003, SIAM PROC S, P841
   Grust T., 2003, VLDB, P524
   Hosoya H., 2010, FDN XML PROCESSING T
   JACOBSON G, 1989, ANN IEEE SYMP FOUND, P549, DOI 10.1109/SFCS.1989.63533
   Koch C., 2003, VLDB, P249
   KOCH C., 2007, P 33 INT C VERY LARG, P1378
   Lam TW, 2008, BIOINFORMATICS, V24, P791, DOI 10.1093/bioinformatics/btn032
   Langmead B, 2009, GENOME BIOL, V10, DOI 10.1186/gb-2009-10-3-r25
   Li H, 2009, BIOINFORMATICS, V25, P1754, DOI 10.1093/bioinformatics/btp324
   Libkin L, 2010, J APPL LOGIC, V8, P210, DOI 10.1016/j.jal.2009.09.005
   Mäkinen V, 2008, ACM T ALGORITHMS, V4, DOI 10.1145/1367064.1367072
   Mäkinen V, 2007, LECT NOTES COMPUT SC, V4726, P229
   Mäkinen V, 2007, THEOR COMPUT SCI, V387, P332, DOI 10.1016/j.tcs.2007.07.013
   Mäkinen V, 2010, J COMPUT BIOL, V17, P281, DOI 10.1089/cmb.2009.0169
   Maneth S., 2010, CORR
   Maneth S, 2010, PROC VLDB ENDOW, V3, P882, DOI 10.14778/1920841.1920954
   Manzini G, 2001, J ACM, V48, P407, DOI 10.1145/382780.382782
   McHugh J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P315
   Munro JI, 2002, SIAM J COMPUT, V31, P762
   Munro JI, 1997, ANN IEEE SYMP FOUND, P118, DOI 10.1109/SFCS.1997.646100
   Navarro G, 2007, ACM COMPUT SURV, V39, DOI 10.1145/1216370.1216372
   Navarro G, 2013, PROCEEDINGS OF THE TWENTY-FOURTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS (SODA 2013), P865
   Neven F, 2002, SIGMOD REC, V31, P39, DOI 10.1145/601858.601869
   Okanohara D, 2007, SIAM PROC S, P60
   Olteanu D, 2007, IEEE T KNOWL DATA EN, V19, P934, DOI 10.1109/TKDE.2007.1063
   Raman R, 2002, SIAM PROC S, P233
   Sadakane K, 2010, PROC APPL MATH, V135, P134
   Schmidt A., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P974
   Schwentick T, 2007, J COMPUT SYST SCI, V73, P289, DOI 10.1016/j.jcss.2006.10.003
   Sirén J, 2009, LECT NOTES COMPUT SC, V5721, P63, DOI 10.1007/978-3-642-03784-9_7
NR 64
TC 9
Z9 11
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2015
VL 45
IS 3
BP 399
EP 434
DI 10.1002/spe.2227
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AZ7XW
UT WOS:000348429500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Terra, R
   Valente, MT
   Czarnecki, K
   Bigonha, RS
AF Terra, Ricardo
   Valente, Marco Tulio
   Czarnecki, Krzysztof
   Bigonha, Roberto S.
TI A recommendation system for repairing violations detected by static
   architecture conformance checking
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software architecture; refactoring; recommendation system
ID SOFTWARE; MODULARIZATION; DESIGN
AB This paper describes a recommendation system that provides refactoring guidelines for maintainers when tackling architectural erosion. The paper formalizes 32refactoring recommendations to repair violations raised by static architecture conformance checking approaches; it describes a toolcalled ArchFixthat triggers the proposed recommendations; and it evaluates the application of this tool in two industrial-strength systems. For the first systema 21 KLOC open-source strategic management systemour approach has indicated correct refactoring recommendations for 31 out of 41 violations detected as the result of an architecture conformance process. For the second systema 728 KLOC customer care system used by a major telecommunication companyour approach has triggered correct recommendations for 624 out of 787 violations, as asserted by the system's architect. Moreover, the architects have scored 82% of these recommendations as having moderate or major complexity. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Terra, Ricardo; Valente, Marco Tulio; Bigonha, Roberto S.] Univ Fed Minas Gerais, Belo Horizonte, MG, Brazil.
   [Terra, Ricardo; Czarnecki, Krzysztof] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
C3 Universidade Federal de Minas Gerais; University of Waterloo
RP Terra, R (corresponding author), Univ Fed Minas Gerais, Belo Horizonte, MG, Brazil.
EM terra@dcc.ufmg.br
OI Valente, Marco Tulio/0000-0002-8180-7548
FU CAPES; FAPEMIG; CNPq
FX Our research has been supported by CAPES, FAPEMIG, and CNPq. We would
   like to thank the software architects Gesse Dafe (BrTCom) and Rogel
   Garcia (Geplanes) for the valuable collaboration in the case studies.
CR Ackermann Christopher, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P175, DOI 10.1109/ISSRE.2009.27
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   [Anonymous], 2007, P 22 IEEE ACM INT C
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Anquetil N, 2011, EUR CON SFTWR MTNCE, P279, DOI 10.1109/CSMR.2011.34
   Borcherss J, 2011, 15 EUR C SOFTW MAINT, P1
   Burke R., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P377
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Eichberg M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P391, DOI 10.1145/1368088.1368142
   Feilkas M, 2009, INT C PROGRAM COMPRE, P188, DOI 10.1109/ICPC.2009.5090042
   Fowlers M., 2002, PATTERNS ENTERPRISE
   Fowlers M., 1999, REFACTORING IMPROVIN
   Frenzel P, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P160, DOI 10.1109/WCRE.2007.28
   Hochstein L, 2005, INFORM SOFTWARE TECH, V47, P643, DOI 10.1016/j.infsof.2004.11.005
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Hou DQ, 2006, IEEE T SOFTWARE ENG, V32, P404, DOI 10.1109/TSE.2006.60
   Knodel J, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P43
   Knodel J, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P277
   Knodel J, 2008, PROC IEEE INT CONF S, P287, DOI 10.1109/ICSM.2008.4658077
   Knodel Jens, 2007, 2007 WORKING IEEEIFI, P12, DOI 10.1109/wicsa.2007.1
   Koschke R, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/WCRE.2003.1287235
   Koschke R, 2009, SOFTWARE QUAL J, V17, P331, DOI 10.1007/s11219-009-9077-8
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lindvall M, 2008, COMPUTER, V41, P98, DOI 10.1109/MC.2008.176
   Mens K, 2006, COMPUT LANG SYST STR, V32, P140, DOI 10.1016/j.cl.2005.09.002
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mulus K, 2012, 27 C OBJ OR PROGR SY, P1
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Passos L, 2010, IEEE SOFTWARE, V27, P82, DOI 10.1109/MS.2009.117
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Rama GirishMaskeri., 2010, Software Maintenance (ICSM), 2010 IEEE International Conference on, P1
   Resnick P, 1997, COMMUN ACM, V40, P56, DOI 10.1145/245108.245121
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Romesburgs H., 2004, CLUSTER ANAL RES
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   Sarkar S, 2009, IEEE SOFTWARE, V26, P28, DOI 10.1109/MS.2009.42
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Steimann F, 2009, LECT NOTES COMPUT SC, V5653, P419, DOI 10.1007/978-3-642-03013-0_19
   Sullivan K. J., 2001, Software Engineering Notes, V26, P99, DOI 10.1145/503271.503224
   Terra R, 2008, LECT NOTES COMPUT SC, V5292, P256, DOI 10.1007/978-3-540-88030-1_19
   Terra R, 2012, EUR CON SFTWR MTNCE, P335, DOI 10.1109/CSMR.2012.40
   Terra R, 2009, SOFTWARE PRACT EXPER, V39, P1073, DOI 10.1002/spe.931
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Unphon H, 2010, J SYST SOFTWARE, V83, P2211, DOI 10.1016/j.jss.2010.06.043
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   Ye Y., 2005, Automated Software Engineering, V12, P199, DOI 10.1007/s10515-005-6206-x
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 54
TC 19
Z9 20
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2015
VL 45
IS 3
BP 315
EP 342
DI 10.1002/spe.2228
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AZ7XW
UT WOS:000348429500002
DA 2024-07-18
ER

PT J
AU Vouillon, J
   Balat, V
AF Vouillon, Jerome
   Balat, Vincent
TI From bytecode to JavaScript: the Js_of_ocaml compiler
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler; OCaml; JavaScript; bytecode
AB We present the design and implementation of a compiler from OCaml bytecode to JavaScript. The compiler first translates the bytecode into a static single-assignment intermediate representation on which optimizations are performed, before generating JavaScript. We believe that taking bytecode as an input instead of a high-level language is a sensible choice. Virtual machines provide a very stable API. Such a compiler is thus easy to maintain. It is also convenient to use, and it can just be added to an existing installation of the development tools. Already-compiled libraries can be used directly, with no need to reinstall anything. Finally, some virtual machines are the target of several languages. A bytecode to JavaScript compiler would make it possible to retarget all these languages to Web browsers at once. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Vouillon, Jerome] Univ Paris Diderot, CNRS, UMR 7126, PPS,Sorbonne Paris Cite, F-75205 Paris 13, France.
   [Balat, Vincent] Univ Paris Diderot, CNRS, UMR 7126, Sorbonne Paris Cite,PPS,INRIA Paris Rocquencourt, F-75205 Paris 13, France.
C3 Universite Paris Cite; Centre National de la Recherche Scientifique
   (CNRS); Universite Paris Cite; Centre National de la Recherche
   Scientifique (CNRS)
RP Vouillon, J (corresponding author), Univ Paris Diderot, Lab PPS, Case 7014, F-75205 Paris 13, France.
EM jerome.vouillon@gmail.com
FU French National Research Agency (ANR), PWD project [ANR-09-EMER-009-01]
FX This work was performed at the IRILL center for Free Software Research
   and Innovation in Paris, France, and was supported by the French
   National Research Agency (ANR), PWD project, grant ANR-09-EMER-009-01.
CR Appel AW, 1998, ACM SIGPLAN NOTICES, V33, P17, DOI 10.1145/278283.278285
   Aycock J, 2000, LECT NOTES COMPUT SC, V1781, P110
   Balat V, 2009, ACM SIGPLAN NOTICES, V44, P311, DOI 10.1145/1631687.1596595
   Canou B, 2008, ML'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN WORKSHOP ON ML, P69
   Cifuentes Cristina., 1994, Reverse Compilation Techniques
   Cooper E, 2007, LECT NOTES COMPUT SC, V4709, P266
   Cooper K.D., 2001, Software Practice Experience, V4, P1
   Donham J, 2013, OCAMLJS
   E C M A International, 1999, ECMA262
   Elsman Martin, 2011, P 1 ACM SIGPLAN INT, P39, DOI [10.1145/2093328.2093336, DOI 10.1145/2093328.2093336]
   George Lal., 1996, Proceedings of the 23rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages - POPL'96, V18, P208, DOI [10.1145/237721.237777, DOI 10.1145/237721.237777]
   Google Inc, 2013, GOOGL WEB TOOLK
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Leroy X, 2000, ACM T PROGR LANG SYS, V22, P340, DOI 10.1145/349214.349230
   Leroy X., 1990, 117 INRIA
   Leroy Xavier., 2007, OBJECTIVE CAML SYSTE
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Loitsch F., 2008, TRENDS FUNCTIONAL PR, V8, P141
   Miecznikowski J, 2002, LECT NOTES COMPUT SC, V2304, P111
   Miecznikowski J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P368, DOI 10.1109/WCRE.2001.957845
   Montelatici R., 2005, 3 INT C NET TECHN, P109
   Park J, 2004, ACM T PROGR LANG SYS, V26, P735, DOI 10.1145/1011508.1011512
   Petricek T, 2007, F WEB TOOLS RI UNPUB
   Puder A., 2010, P 8 INT C PRINC PRAC, P69, DOI [10.1145/1852761.1852772, DOI 10.1145/1852761.1852772]
   Puder A, 2008, PROCEEDINGS OF NINTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING, P563, DOI 10.1109/SNPD.2008.164
   Puder A, 2008, PROCEEDINGS OF NINTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING, P251, DOI 10.1109/SNPD.2008.109
   Puder A, 2009, ELECTRON NOTES THEOR, V253, P97, DOI 10.1016/j.entcs.2009.11.017
   Puder A, 2009, SCI COMPUT PROGRAM, V74, P379, DOI 10.1016/j.scico.2009.01.009
   Schinz M., 2001, Electronic Notes in Theoretical Computer Science, V59, P158
   Serrano Manuel, 2006, PROCEEEDINGS 21 ANN, P975, DOI [10.1145/1176617.1176756, DOI 10.1145/1176617.1176756]
   Vouillon J, 2008, ML'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN WORKSHOP ON ML, P3
   Zakai A., 2011, Proceedings of the ACM international conference companion on object oriented programming systems languages and applications companion, P301, DOI DOI 10.1145/2048147.2048224
NR 32
TC 28
Z9 31
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2014
VL 44
IS 8
BP 951
EP 972
DI 10.1002/spe.2187
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AL9RW
UT WOS:000339479400005
DA 2024-07-18
ER

PT J
AU Gawade, M
   Ravikanth, K
   Aggarwal, S
AF Gawade, Makarand
   Ravikanth, K.
   Aggarwal, Sanjeev
TI <i>Constantine</i>: configurable static analysis tool in Eclipse
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE ECLIPSE; software tools; static analysis; static checking; integrated
   development environments
AB Static code analysers help in exposing internal code quality problems. For higher effectiveness, they must be pressed into use early during the development of code. They must support the formulation of new coding constraints with relative ease to better cope with variations in coding standards. We present the design of a static analyser that addresses these twin objectives. Our system provides interactive feedback to programmers on the non-conformances that occur in response to the changes made to the code. Its rule construction framework empowers programmers to define new conformance rules, which can come into effect immediately after creation. The tool has been realized as an Eclipse plug-in for the analysis of C, C++ and Java sources. Central to its design is the concept of reusing a set of primitive checks by composing them to form new rules. This renders rule construction accessible to programmers, lowers dependence on tool smiths and accelerates the enforcement of custom checks. We also present our experience in defining rules drawn from an industry standard rule set based on this approach. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Gawade, Makarand; Aggarwal, Sanjeev] Indian Inst Technol, Dept Comp Sci & Engn, Kanpur 208016, Uttar Pradesh, India.
   [Ravikanth, K.] Siemens Technol & Serv Pvt Ltd, Corp Res & Technol, Bangalore 560100, Karnataka, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kanpur; Siemens AG
RP Ravikanth, K (corresponding author), Siemens Technol & Serv Pvt Ltd, Corp Res & Technol, 84 Hosur Rd, Bangalore 560100, Karnataka, India.
EM k.ravikanth@siemens.com
FU Siemens Corporate Research and Technologies
FX We first thank the three anonymous reviewers for their critical
   appraisal of our initial draft that has helped us improve the quality of
   this paper. We next thank Himanshu Singh Kumar for providing useful
   inputs early on and Kiran Biswas for her patience in identifying the
   carelessly omitted article and the needlessly committed punctuation
   mark. The user experience study could not have been conducted without
   the time and participation of SG Ganesh, M Mahesh, Sowmya GR, Tushar
   Sharma and Prerna Totla; our thanks go to them. Finally, and
   importantly, we would like to express our gratitude to PN Ujwala for her
   effort and help in planning, coordinating and conducting the user
   experience study. The Master's thesis of the first author is supported
   by Siemens Corporate Research and Technologies.
CR Beyer D, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P216, DOI 10.1109/WCRE.2003.1287252
   Canfora G, 1998, IEEE T SOFTWARE ENG, V24, P721, DOI 10.1109/32.713328
   Derby CK, 1992, USENIX C C P, V18, P1053
   Devanbu PT, 1999, ACM T SOFTW ENG METH, V8, P177, DOI 10.1145/304399.304402
   Gutz S, TPTP STATIC ANAL TUT
   Heering J, 2000, ACM SIGPLAN NOTICES, V35, P39, DOI 10.1145/351159.351173
   HERMENEGILDO M, 1999, PARALLELISM IMPLEMEN, P65
   Hughes John., 1990, Research Topics in Functional Programming, P17
   Lockheed Martin Corporation, 2005, JOINT STRIK FIGHT AI
   MARKOSIAN L, 1994, COMMUN ACM, V37, P58, DOI 10.1145/175290.175297
   Marpons G., 2008, P GCC DEV SUMM 2008, P43
   Marpons G, 2009, ELECTRON NOTES THEOR, V248, P149, DOI 10.1016/j.entcs.2009.07.065
   Merrill Jason., 2003, Proceedings of the GCC Developers Summit May 25-27, 2003, Ottawa, Ontario Canada, P171
   Meyers S, 1997, DR DOBBS J, V22, P68
   Meyers S, 2005, ADDISON WESLEY PROFE
   MISRA, 1998, GUID US C LANG VEH B
   Muller H. A., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P80, DOI 10.1109/ICSE.1988.93690
   Prasanth Y, 2005, P 23 INT C APPL INF, V24, P287
   Reasoning Systems, 1992, REASONING SYSTEMS RE
   REASONING SYSTEMS, 1993, REASONING SYSTEMS SO
   Volanschi N, 2008, AUTOMAT SOFTW ENG, V15, P3, DOI 10.1007/s10515-007-0022-4
   WELLS CH, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P71, DOI 10.1109/WCRE.1995.514695
   Wong Kenny., 1998, The Rigi User's Manual - Version 5.4.4
NR 23
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2014
VL 44
IS 5
BP 537
EP 563
DI 10.1002/spe.2173
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE3YW
UT WOS:000333915400003
DA 2024-07-18
ER

PT J
AU Naujokat, S
   Neubauer, J
   Lamprecht, AL
   Steffen, B
   Jörges, S
   Margaria, T
AF Naujokat, Stefan
   Neubauer, Johannes
   Lamprecht, Anna-Lena
   Steffen, Bernhard
   Joerges, Sven
   Margaria, Tiziana
TI Simplicity-first model-based plug-in development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE plug-ins; simplicity; domain-specific APIs; process modeling;
   bootstrapping; evolution; code generation; loose programming; dynamic
   service binding
ID DESIGN
AB In this article, we present our experience with over a decade of strict simplicity orientation in the development and evolution of plug-ins. The point of our approach is to enable our graphical modeling framework jABC to capture plug-in development in a domain-specific setting. The typically quite tedious and technical plug-in development is shifted this way from a programming task to the modeling level, where it can be mastered also by application experts without programming expertise. We show how the classical plug-in development profits from a systematic domain-specific API design and how the level of abstraction achieved this way can be further enhanced by defining adequate building blocks for high-level plug-in modeling. As the resulting plug-in models can be compiled and deployed automatically, our approach decomposes plug-in development into three phases where only the realization phase requires plug-in-specific effort. By using our modeling framework jABC, this effort boils down to graphical, tool-supported process modeling. Furthermore, we support the automatic completion of process sketches for executability. All this will be illustrated along the most recent plug-in-based evolution of the jABC framework, which witnessed quite some bootstrapping effects. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Naujokat, Stefan; Neubauer, Johannes; Steffen, Bernhard; Joerges, Sven] TU Dortmund Univ, D-44227 Dortmund, Germany.
   [Lamprecht, Anna-Lena; Margaria, Tiziana] Univ Potsdam, D-14482 Potsdam, Germany.
C3 Dortmund University of Technology; University of Potsdam
RP Naujokat, S (corresponding author), TU Dortmund Univ, D-44227 Dortmund, Germany.
EM stefan.naujokat@tu-dortmund.de
RI Margaria, Tiziana/AAO-2272-2021
OI Margaria, Tiziana/0000-0002-5547-9739; Jorges, Sven/0000-0002-3071-7163;
   Naujokat, Stefan/0000-0002-6265-6641
CR [Anonymous], LNCS
   [Anonymous], 1993, Technical Report
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 2008, ECLIPSE MODELING PRO
   Bakera M, 2009, INNOV SYST SOFTW ENG, V5, P211, DOI 10.1007/s11334-009-0091-6
   Bakera M, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P172, DOI 10.1109/ICECCS.2009.51
   Clarke EM, 1999, MODEL CHECKING, P1
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3566, P326
   Forman Ira R, 2004, Java reflection in action
   Jörges S, 2008, INNOV SYST SOFTW ENG, V4, P361, DOI 10.1007/s11334-008-0071-2
   Jorges S., 2006, 28th International Conference on Software Engineering Proceedings, P815, DOI 10.1145/1134285.1134422
   Jorges S., 2010, POSTPR 3 INT SUMM SC, P364
   Karusseit M, 2006, ELECTRON NOTES THEOR, V157, P101, DOI 10.1016/j.entcs.2005.12.049
   Kelly S., 2008, Domain-Specific Modeling
   Lamprecht AL, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P262, DOI 10.1109/QUATIC.2010.53
   Lamprecht AL, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-S10-S8
   Margaria T, 2005, 29th Annual IEEE/NASA Software Engineering Workshop, Proceedings, P219, DOI 10.1109/SEW.2005.40
   Margaria T, 2005, LECT NOTES COMPUT SC, V3826, P450
   Margaria T., 2004, International Journal on Software Tools for Technology Transfer, V5, P107, DOI 10.1007/s10009-003-0119-4
   Margaria T, 1998, LECT NOTES COMPUT SC, V1382, P188, DOI 10.1007/BFb0053591
   Margaria T, 2007, IEEE ANNU SOFTW ENG, P214, DOI 10.1109/SEW.2007.63
   Margaria T, 2010, COMPUTER, V43, P90, DOI 10.1109/MC.2010.177
   Margaria T, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-S4-S12
   McGuinness D.L., OWL Web Ontology Language Overview
   Merten M, 2011, P 17 INT C TOOLS ALG
   Merten M, 2012, LECT NOTES COMPUT SC, V7214, P466, DOI 10.1007/978-3-642-28756-5_32
   Nagel R, 2009, THESIS TU DORTMUND, V7
   Naujokat S., 2012, Proceedings 2012 2nd International Workshop on Developing Tools as Plug-ins (TOPI 2012), P7, DOI 10.1109/TOPI.2012.6229816
   Naujokat S, 2011, P 16 IEEE INT C ENG
   Naujokat S, 2012, LECT NOTES COMPUT SC, V7212, P94, DOI 10.1007/978-3-642-28872-2_7
   Neubauer J, 2008, THESIS TU DORTMUND, V4
   Neubauer J, 2013, LECT NOTES BUS INF P, V150, P13
   Nielson F., 2005, PRINCIPLES PROGRAM A
   Parr T.J., 2004, P 13 INT C WORLD WID, P224, DOI [DOI 10.1145/988672.988703, 10.1145/988672.988703]
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Steffen B, 1996, SOFTWARE-CONC TOOL, V17, P13
   Steffen B, 1996, SERVICE CREATION FOR
   Steffen Bernhard, 1997, ACM SIGPLAN INT WORK
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
NR 40
TC 9
Z9 9
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2014
VL 44
IS 3
SI SI
BP 277
EP 297
DI 10.1002/spe.2243
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA7KI
UT WOS:000331275900003
DA 2024-07-18
ER

PT J
AU Burrows, S
   Uitdenbogerd, AL
   Turpin, A
AF Burrows, Steven
   Uitdenbogerd, Alexandra L.
   Turpin, Andrew
TI Comparing techniques for authorship attribution of source code
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
ID INFORMATION-RETRIEVAL; PROBABILISTIC MODEL
C1 [Burrows, Steven; Uitdenbogerd, Alexandra L.; Turpin, Andrew] RMIT Univ, Sch Comp Sci & Informat Technol, Melbourne, Vic 3001, Australia.
C3 Royal Melbourne Institute of Technology (RMIT)
RP Burrows, S (corresponding author), RMIT Univ, Sch Comp Sci & Informat Technol, GPO Box 2476, Melbourne, Vic 3001, Australia.
EM steven.burrows@rmit.edu.au
RI Uitdenbogerd, Alexandra/HSG-2371-2023
OI Uitdenbogerd, Alexandra/0000-0001-9004-8283
FU Australian Research Council
FX This research is supported by the Australian Research Council.
CR [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2007, ADCS 2007 P 12 AUSTR
   Burrows S., 2010, Ph.D. Thesis
   Burrows S, 2007, SOFTWARE PRACT EXPER, V37, P151, DOI 10.1002/spe.750
   Burrows S, 2009, P INT COMP SOFTW APP, P593
   Burrows S, 2009, LECT NOTES COMPUT SC, V5463, P699, DOI 10.1007/978-3-642-00887-0_61
   Colas F, 2007, LECT NOTES COMPUT SC, V4723, P296
   D'Souza D., 2007, Proceedings of the Ninth Australasian Computing Education Conference, P27
   Ding HB, 2004, J SYST SOFTWARE, V72, P49, DOI 10.1016/S0164-1212(03)00049-9
   DUNSMORE HE, 1979, COMPUTER, V12, P50, DOI 10.1109/MC.1979.1658576
   Elenbogen B. S., 2008, J. Comput. Sci. Coll, V23, P50
   Exhedra Solutions Inc, 2010, PLAN SOURC COD
   Farrell Joyce, 2008, OBJECT ORIENTED PROG
   Frantzeskou G., 2006, 28th International Conference on Software Engineering Proceedings, P893, DOI 10.1145/1134285.1134445
   Frantzeskou G., 2007, Int. J. Des. Eng, V6, P1
   Frantzeskou G., 2004, International Conference on E-Business and Telecommunication Networks (ICETE), P85
   Frantzeskou G., 2005, P 2 INT C E BUS TEL, P283
   Frantzeskou G, 2008, J SYST SOFTWARE, V81, P447, DOI 10.1016/j.jss.2007.03.004
   Frantzeskou G, 2006, INT FED INFO PROC, V204, P508
   Gray A, 1998, 1998 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: EDUCATION & PRACTICE, PROCEEDINGS, P252, DOI 10.1109/SEEP.1998.707658
   Halstead MauriceH., 1972, ACM SIGPLAN NOTICES, V7, P19, DOI [10.1145/953363.953366, DOI 10.1145/953363.953366]
   HOLMES DI, 1994, COMPUT HUMANITIES, V28, P87, DOI 10.1007/BF01830689
   Indyk P., 1998, Proceedings of the Thirtieth Annual ACM Symposium on Theory of Computing, P604, DOI 10.1145/276698.276876
   International Standardization Organization and International Electrotechnical Commission, 1998, 14882 INF TECHN IND
   Kelly A, 1997, BOON C
   Kothari J, 2007, INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY, PROCEEDINGS, P243
   Krsul I, 1997, COMPUT SECUR, V16, P233, DOI 10.1016/S0167-4048(97)00005-9
   Krsul I, 1996, TR65052 PURD U DEP C
   Krsul I, 1994, CSDTR94030 DEP COM S
   LACHENBRUCH PA, 1979, BIOMETRICS, V35, P69, DOI 10.2307/2529937
   Lange R, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P2082
   Liang Y.Daniel., 2006, INTRO JAVA PROGRAMMI
   LINDSEY CS, 2005, JAVATECH INTRO SCI T
   Macdonell S. G., 1999, ICONIP'99. ANZIIS'99 & ANNES'99 & ACNN'99. 6th International Conference on Neural Information Processing. Proceedings (Cat. No.99EX378), P66, DOI 10.1109/ICONIP.1999.843963
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MOSTELLER F, 1963, J AM STAT ASSOC, V58, P275, DOI 10.2307/2283270
   OMAN PW, 1990, COOPERATION, P244, DOI 10.1145/100348.100385
   Ranade J, 1992, ELEMENTS C PROGRAMMI
   SALLIS P, 1997, P ADD SESS INT C NEU, P53
   Search Engine Group, 2009, ZETT
   Shankland S., 2003, CNET NEWS
   Shevertalov M, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P69, DOI 10.1109/SSBSE.2009.18
   Sparck-Jones K, 2000, INFORM PROCESS MANAG, V36, P809, DOI 10.1016/S0306-4573(00)00016-9
   Sparck-Jones K, 2000, INFORM PROCESS MANAG, V36, P779, DOI 10.1016/S0306-4573(00)00015-7
   The Flex Project, 2008, FLEX FAST LEX AN
   Theobald M, 2008, P 31 ANN INT ACM SIG, P563, DOI DOI 10.1145/1390334.1390431
   Uitdenbogerd AlexandraL., 2002, Proceedings of Australasian Compter Science Conference, P275
   WinZip Computing, 2009, WINZ ZIP FIL UT WIND
   Witten I. H., 2005, DATA MINING PRACTICA
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   Zobel J., 2004, P 6 AUSTR C COMP ED, V30, P357
NR 51
TC 34
Z9 44
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2014
VL 44
IS 1
BP 1
EP 32
DI 10.1002/spe.2146
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 271VL
UT WOS:000328419600001
DA 2024-07-18
ER

PT J
AU Maciel, LAHD
   Hirata, CM
AF Hiane da Silva Maciel, Luiz Alexandre
   Hirata, Celso Massaki
TI Fault-tolerant timestamp-based two-phase commit protocol for RESTful
   services
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fault tolerance; reliability; concurrency control; distributed system;
   REST; transaction; timestamp; Web services; architectural style
ID WEB SERVICES
AB Service-oriented architecture provides interoperability and weak coupling features for software development. Representational state transfer (REST) is an architectural style that has attracted attention in the SOA domain as it allows the development of Web services based on original principles of the World Wide Web. Unlike Web service specifications, which are based on Simple Object Access Protocol and Web Services Description Language, REST does not provide official' standards to address non-functional requirements of services, such as security, reliability, and transaction control. The timestamp-based two-phase commit protocol for RESTful service (TS2PC4RS) algorithm specifies concurrency control of RESTful services during a transaction. An extension of the TS2PC4RS specifies the concurrency control of the Web services considering the update operation to meet some business rules. However, neither algorithm addresses transaction control when failures occur. In long-term transactions, failures can occur and compromise the success of Web service applications. Two common failures traditionally considered in the analysis of protocols are host and connection failures. The aim of this paper is to address fault tolerance for TS2PC4RS and its extension. A fault-tolerant protocol based on timeout and log records is proposed. The fault-tolerant protocol provides support for the host and connection failures that may occur during a transaction execution. The fault-tolerant mechanisms are used to meet the application domain business rules that guide the behavior of RESTful services. We describe the protocol using scenarios when failures occur. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Hiane da Silva Maciel, Luiz Alexandre; Hirata, Celso Massaki] Inst Tecnol Aeronaut ITA Praca Marechal Eduardo G, BR-12228900 Sao Jose Dos Campos, SP, Brazil.
RP Hirata, CM (corresponding author), Inst Tecnol Aeronaut ITA Praca Marechal Eduardo G, 50 Vila Acacias, BR-12228900 Sao Jose Dos Campos, SP, Brazil.
EM hirata@ita.br
RI Hirata, Celso M/C-5114-2016
OI Hirata, Celso/0000-0002-9746-7605
CR Al-Zoubi K, 2009, WINT SIMUL C PROC, P1303
   [Anonymous], 2006, 15 INT C WORLD WID W
   [Anonymous], 2012, JAVANET JERSEY JAVA
   [Anonymous], 2012, JAVANET GRIZZLY JAVA
   [Anonymous], 2000, TECHNICAL REPORT
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   Buys J., 2011, P 5 ACM INT C DISTR, P63, DOI [10.1145/2002259.2002271, DOI 10.1145/2002259.2002271]
   Ceri S., 1985, Distributed Databases- Principles and Systems
   Chakrabarti SK, 2009, 2009 COMPUTATION WORLD: FUTURE COMPUTING, SERVICE COMPUTATION, COGNITIVE, ADAPTIVE, CONTENT, PATTERNS, P302, DOI 10.1109/ComputationWorld.2009.116
   Costello R.L., BUILDING WEB SERVICE
   da Silva Maciel LAH, 2011, P 2011 ACM S APPL CO, P778, DOI [10.1145/1982185.1982354, DOI 10.1145/1982185.1982354]
   Fielding Roy Thomas, 2000, Architectural styles and the design of network-based software architectures, Patent No. AAI9980887
   Maciel LAHD, 2010, J WEB ENG, V9, P266
   Houston I, 2003, SOFTWARE PRACT EXPER, V33, P351, DOI 10.1002/spe.512
   Junior JGR, 2006, P 12 BRAZ S MULT WEB, P138, DOI [10.1145/1186595.1186613, DOI 10.1145/1186595.1186613]
   Kumar V, 2002, IEEE T COMPUT, V51, P1212, DOI 10.1109/TC.2002.1039846
   Lamport, 2001, SIGACTN SIGACT NEWS, V32, P51
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Lorczak P. R., 1989, FTCS 19 Digest of Papers. The Nineteenth International Symposium on Fault-Tolerant Computing (Cat. No.89CH2754-0), P444, DOI 10.1109/FTCS.1989.105617
   Mendonça NC, 2008, J SYST SOFTWARE, V81, P1346, DOI 10.1016/j.jss.2007.11.002
   O'Reilly T., 2003, REST VS SOAP AMAZON
   OASIS Web Services Transaction (WS -TX) TC, 2009, Web Services Atomic Transaction (WS-AtomicTransaction)
   Organization for the Advancement of Structured Information Standards, 2009, TECHNICAL REPORT
   Organization for the Advancement of Structured Information Standards, 2004, TECHNICAL REPORT
   Organization for the Advancement of Structured Information Standards, 2006, OAS WEB SERV SEC WSS
   Pautasso Cesare., 2008, WWW 08, P805
   Reinke C, 2009, P 24 ACM S APPL COMP, P2202, DOI [10.1145/1529282.1529768, DOI 10.1145/1529282.1529768]
   The Business Rules Group, 2000, TECHNICAL REPORT
   Vinoski S, 2008, IEEE INTERNET COMPUT, V12, P84, DOI 10.1109/MIC.2008.20
   Wang T, 2008, DISTRIB PARALLEL DAT, V23, P235, DOI 10.1007/s10619-008-7028-1
   Zheng ZB, 2010, EMPIR SOFTW ENG, V15, P323, DOI 10.1007/s10664-009-9126-8
   2001, WEB SERV DESCR LANG
NR 32
TC 2
Z9 2
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2013
VL 43
IS 12
SI SI
BP 1459
EP 1488
DI 10.1002/spe.2151
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 248JD
UT WOS:000326694500005
DA 2024-07-18
ER

PT J
AU Khwaja, S
   Alshayeb, M
AF Khwaja, Salman
   Alshayeb, Mohammad
TI Towards design pattern definition language
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design patterns; design pattern definition language; DPDL; XML
AB Design patterns are rapidly gaining acceptance in the software community not only as reusable constructs for software development but also for the documentation of the software architectural design. Most of the existing design pattern languages describe design patterns using a combination of a natural language, UML-style diagrams and complex mathematical or logic based formalisms, which makes them hard for programmers to understand. In this paper we propose a design pattern definition language (DPDL) based on XML which can be used for sharing design patterns' implementation details among developers. DPDL is easy to understand and use. It provides unambiguous description of the patterns and is extensible. DPDL also has the flexibility of defining design patterns in a generic term to be used as templates. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Khwaja, Salman; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
EM alshayeb@kfupm.edu.sa
RI Khwaja, Salman Ahmad/H-8738-2016; Khwaja, Salman/P-9118-2014; Alshayeb,
   Mohammad/B-5941-2015
OI Khwaja, Salman Ahmad/0000-0002-9965-2548; Khwaja,
   Salman/0000-0002-9965-2548; Alshayeb, Mohammad/0000-0001-7950-0099
FU King Fahd University of Petroleum and Minerals
FX The authors acknowledge the support of King Fahd University of Petroleum
   and Minerals in the development of this work.
CR [Anonymous], 2010, ALT UMODEL 2010 ENT
   Bayley I, 2010, J SYST SOFTWARE, V83, P209, DOI 10.1016/j.jss.2009.09.039
   Blewitt A., 2007, DESIGN PATTERN FORMA, P109
   BOOTH D, 2007, W3C WORKSH WEB SERV
   Campbell Sherrie, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P776, DOI 10.1109/CSSE.2008.1301
   Carroll JJ, 2002, P 11 INT C WORLD WID
   Chandy K.M., 1988, PARALLEL PROGRAM DES
   Dietrich J., 2007, DES PATTERNS FORMALI, P258
   Eden AH, 1996, WUCS9707
   Gamma Erich, 1994, DESIGN PATTERNS ELEM, V1st
   Gangemi A, 2005, LECT NOTES COMPUT SC, V3729, P262, DOI 10.1007/11574620_21
   Gasparis E., 2007, Design Pattern Formalization Techniques, P357
   Henninger S., 2007, 14 C PATT LANG PROGR
   Jalil Zunera, 2009, 2009 2nd IEEE International Conference on Computer Science and Information Technology (ICCSIT 2009), P524, DOI 10.1109/ICCSIT.2009.5234657
   Kim D.-K., 2007, Design Pattern Formalization Techniques, P183
   Mapelsden D., 2002, PROCEEDING P 40 INT, P3
   Mathkour H, 2003, AS PAC C COMM PEN MA
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   Raje R. R., 2007, DESIGN PATTERN FORMA, P236
   Raje RR, 2001, 16 ACM S APPL COMP L, P600
   Saeki M, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P408, DOI 10.1109/APSEC.2000.896727
   Salim FD, 2004, P 2004 AUSTR SOFTW E
   Siau Keng, 2003, COMPLEX IS UNIFIED M
   Taibi T, 2003, INFORM SOFTWARE TECH, V45, P157, DOI 10.1016/S0950-5849(02)000195-7
   Toufik T, 2009, J OBJECT TECHNOLOGY, V9, P137
NR 25
TC 8
Z9 8
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2013
VL 43
IS 7
SI SI
BP 747
EP 757
DI 10.1002/spe.1122
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 158TW
UT WOS:000319997100002
OA Bronze
DA 2024-07-18
ER

PT J
AU Floch, J
   Frà, C
   Fricke, R
   Geihs, K
   Wagner, M
   Lorenzo, J
   Soladana, E
   Mehlhase, S
   Paspallis, N
   Rahnama, H
   Ruiz, P
   Scholz, U
AF Floch, J.
   Fra, C.
   Fricke, R.
   Geihs, K.
   Wagner, M.
   Lorenzo, J.
   Soladana, E.
   Mehlhase, S.
   Paspallis, N.
   Rahnama, H.
   Ruiz, P. A.
   Scholz, U.
TI Playing MUSIC - building context-aware and self-adaptive mobile
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE context awareness; self-adaptive software; model-driven development;
   middleware
ID ARCHITECTURE; ADAPTATION; MIDDLEWARE; SERVICES
AB Although the idea of context-awareness was introduced almost two decades ago, few mobile software applications are available today that can sense and adapt to their run-time environment. The development of context-aware and self-adaptive applications is complex and few developers have experience in this area. On the basis of several demonstrators built by the joint European research project MUSIC, this paper describes typical context and adaptation features relevant for the development of context-aware and self-adaptive mobile applications. We explain how the demonstrators were realised using the open-source platform MUSIC and present the feedback of the developers of these demonstrators. The main contribution of this paper is to show how the development complexity of context-aware and self-adaptive mobile applications can be mastered by using an adaptation framework such as MUSIC. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Floch, J.] SINTEF, ICT, NO-7465 Trondheim, Norway.
   [Fra, C.] Telecom Italia, IT-10148 Turin, Italy.
   [Fricke, R.] Condat AG, D-10559 Berlin, Germany.
   [Geihs, K.; Wagner, M.] Univ Kassel, D-34121 Kassel, Germany.
   [Lorenzo, J.; Soladana, E.] Telefon Invest & Desarrollo, ES-47151 Boecillo, Valladolid, Spain.
   [Mehlhase, S.] European Media Lab, D-69118 Heidelberg, Germany.
   [Paspallis, N.] Univ Cyprus, CY-1678 Nicosia, Cyprus.
   [Rahnama, H.] Ryerson Univ, Toronto, ON, Canada.
   [Ruiz, P. A.] Integrasys, ES-28230 Madrid, Spain.
   [Scholz, U.] SEEBURGER AG, D-75015 Bretten, Germany.
C3 SINTEF; Telecom Italia; Universitat Kassel; University of Cyprus;
   Toronto Metropolitan University
RP Floch, J (corresponding author), SINTEF, ICT, NO-7465 Trondheim, Norway.
EM Jacqueline.Floch@sintef.no
OI Paspallis, Nearchos/0000-0002-2636-7973; Wagner,
   Michael/0000-0002-4682-4019; Geihs, Kurt/0000-0001-9833-6108
FU EU IST 6th framework programme [035166]
FX The contributions of all members of the MUSIC project consortium are
   gratefully acknowledged. MUSIC was supported financially by the EU IST
   6th framework programme under contract 035166. We also thank the
   Norwegian research project UbiCompForAll that has supported the writing
   of this paper.
CR [Anonymous], CMUSEI2000TR008
   [Anonymous], 2011, BERLIOS DEV OPEN SOU
   [Anonymous], 2011, RFC 2608 SERVICE LOC
   [Anonymous], 2011, EURONEWS FUTURIS
   Ballagny C, 2009, INT CONF SELF SELF, P206, DOI 10.1109/SASO.2009.11
   Brataas G, 2011, P 15 INT SOFTW PROD, V37, p[1, 8], DOI [10.1145/2019136.2019178, DOI 10.1145/2019136.2019178]
   Brataas G, 2004, P INT WORKSH DYN SOF, P23
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   DEY A, 2000, THESIS COLL COMPUTIN
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Fickas S., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P140, DOI 10.1109/ISRE.1995.512555
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   Floch J, 2010, J SYST SOFTWARE, V83, P1759, DOI 10.1016/j.jss.2010.04.075
   Floch J, 2011, MUSIC DELIVERABLE D2
   Floch J, 2006, LECT NOTES COMPUTER, V4025, DOI [10.1007/11773887_5, DOI 10.1007/11773887_5]
   Fra C., 2011, 2011 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops 2011). PerCom-Workshops 2011: 2011 IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops 2011), P421, DOI 10.1109/PERCOMW.2011.5766926
   Fraga L, 2008, COMMUNICATIONS EASST, V11, P1863
   Fricke R, 2011, MUSIC DELIVERABLE D2
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Geihs K, 2009, SOFTWARE PRACT EXPER, V39, P385, DOI 10.1002/spe.900
   Geihs K, 2009, LECT NOTES COMPUT SC, V5525, P146, DOI 10.1007/978-3-642-02161-9_8
   Goldsby HJ, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P36, DOI 10.1109/ECBS.2008.22
   Grace P, 2003, LECT NOTES COMPUT SC, V2888, P1170
   Gu T, 2004, IEEE PERVAS COMPUT, V3, P66
   IETF, 2005, 4168 IETF RFC
   Jiang SS, 2010, LECT NOTES COMPUT SC, V6115, P15, DOI 10.1007/978-3-642-13645-0_2
   Kephart JO, 2007, IEEE INTERNET COMPUT, V11, P40, DOI 10.1109/MIC.2007.2
   KHAN MU, 2010, THESIS U KASSEL GERM
   Kraemer FA, 2009, J SYST SOFTWARE, V82, P2068, DOI 10.1016/j.jss.2009.06.057
   Krumm J., 2010, PROCESSING SEQUENTIA
   Krumm J., 2010, LOCATION UBIQUITOUS
   Laddaga R, 2006, Second International IEEE Workshop on Software Evolvability, Proceedings, P3, DOI 10.1109/SOFTWARE-EVOLVABILITY.2006.10
   Lapouchnian Alexei., 2006, CASCON 06, P7
   Liaskos S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P9, DOI 10.1109/RE.2005.19
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Newberger A, 2003, IRBTR03016 INT RES
   Paspallis N., 2009, THESIS U CYPRUS
   Paspallis N, 2009, COOP INFORM SYST, P129
   Paspallis N, 2008, LECT NOTES COMPUT SC, V5331, P553
   Reade Chris., 1989, Elements of functional programming
   Reichle R, 2008, LECT NOTES COMPUT SC, V5053, P281
   Reichle R, 2008, INT CONF PERVAS COMP, P434, DOI 10.1109/PERCOM.2008.29
   Rouvoy R, 2009, LECT NOTES COMPUT SC, V5525, P164, DOI 10.1007/978-3-642-02161-9_9
   Ruiz PA, 2011, MUSIC DELIVERABLE D2
   Ruiz PA, 2011, MUSIC DELIVERABLE D2
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Savor T, 2008, P IEEE REAL TIM TECH, P136, DOI [10.1109/RTTAS.1997.601351, DOI 10.1109/RTTAS.1997.601351]
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   Schmidt A, 1999, COMPUT GRAPH-UK, V23, P893, DOI 10.1016/S0097-8493(99)00120-X
   Scholz U, 2010, LECT NOTES COMPUT SC, V6115, P198, DOI 10.1007/978-3-642-13645-0_15
   Shaw Mary, 1995, ACM SOFTWARE ENG NOT, V20, P27
   Sutcliffe A, 2006, REQUIR ENG, V11, P157, DOI 10.1007/s00766-006-0030-0
   Vanrompay Y, 2011, MUSIC DELIVERABLE D7
   Wagner M., 2011, 2011 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops 2011). PerCom-Workshops 2011: 2011 IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops 2011), P220, DOI 10.1109/PERCOMW.2011.5766873
   Wagner M, 2011, MUSIC DELIVERABLE D6
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
   [No title captured]
NR 58
TC 28
Z9 30
U1 0
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2013
VL 43
IS 3
BP 359
EP 388
DI 10.1002/spe.2116
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 089RE
UT WOS:000314926900005
DA 2024-07-18
ER

PT J
AU Hsu, IC
AF Hsu, I-Ching
TI Extending UML to model Web 2.0-based context-aware applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE UML profile; Web 2; 0; context-aware application; software engineering
ID INFORMATION; PROFILE
AB Web 2.0 Mashups offer entirely new opportunities for context-aware application (CAA) developers by integrating Web 2.0 technologies to facilitate interoperability among heterogeneous context-aware systems. From a software engineering perspective, a visualized approach for Web 2.0-based CAA modeling is crucial. Current CAA development, however, cannot provide a conceptual model for Web 2.0-based CAA. Therefore, the development efficiency and potential for reuse are decreased. The UML is a general purpose modeling language with potential for use in many application domains. However, UML often lacks elements needed to model concepts in specific domains, such as Web 2.0-based CAA modeling. To address the above issues, this study presents the Web 2.0-based CAA UML profile, a UML profile for modeling Web 2.0-based CAA. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 Natl Formosa Univ, Dept Comp Sci & Informat Engn, Huwei Township 632, Yunlin County, Taiwan.
C3 National Formosa University
RP Hsu, IC (corresponding author), Natl Formosa Univ, Dept Comp Sci & Informat Engn, 64 Wenhua Rd, Huwei Township 632, Yunlin County, Taiwan.
EM hsuic@nfu.edu.tw
FU National Science Council of the Republic of China, Taiwan [NSC
   97-2221-E-150-039-, NSC 98-2221-E-150-072-, NSC 99-2221-E-150-069-]
FX The author would like to thank the National Science Council of the
   Republic of China, Taiwan for financially supporting this research under
   Contract No. NSC 97-2221-E-150-039-, NSC 98-2221-E-150-072- and NSC
   99-2221-E-150-069-.
CR ABDULLAH MS, 2007, 5 ACIS INT C SOFTW E, P871, DOI DOI 10.1109/SERA.2007.26
   Acuna C.J., 2006, P 6 INT C WEB ENG, P32
   Adamkó A, 2006, J UNIVERS COMPUT SCI, V12, P1104
   Alavizaedh SF., 2007, INT C SOFTW ENG ADV, P50
   Almeida JPA, 2006, LECT NOTES COMPUT SC, V4025, P213
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Ayed D., 2006, P 1 WORKSH MOD DRIV, P1
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Ennai A., 2008, IEEE INT ENT DISTR O, P345
   Fink T, 2006, ELECTRON NOTES THEOR, V142, P161, DOI 10.1016/j.entcs.2004.12.045
   Fuentes L, 2002, ANN SOFTW ENG, V13, P249, DOI 10.1023/A:1016505712459
   Grassi V., 2007, WORKSH ENG SOFTW SER, P69
   Gronli TM., 2009, INT C INT TECHN SEC, P1
   Han WL, 2008, J NETW COMPUT APPL, V31, P559, DOI 10.1016/j.jnca.2007.11.008
   Hervás R, 2011, SOFTWARE PRACT EXPER, V41, P403, DOI 10.1002/spe.1011
   I-C Hsu., 2009, EXPERT SYSTEMS APP 2, V36, P3795
   Kao SJ, 2007, SOFTWARE PRACT EXPER, V37, P857, DOI 10.1002/spe.789
   Kapitsaki GM, 2009, INFORM SOFTWARE TECH, V51, P1244, DOI 10.1016/j.infsof.2009.03.002
   López-Sanz M, 2007, LECT NOTES COMPUT SC, V4758, P304
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Monowar MM, 2008, 10TH INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION TECHNOLOGY, VOLS I-III, P1711, DOI 10.1109/ICACT.2008.4494112
   Murugesan San, 2007, IT Professional, V9, P34, DOI 10.1109/MITP.2007.78
   Object Management Group (OMG), 2010, OBJ CONSTR LANG SPEC
   OMG, 2010, UML TEST PROF V 1 0
   OMG, 2010, OMGS METAOBJECT FAC
   OMG, 2010, UML RES PAG
   OMG, 2007, MOF 2 0 XMI MAPP V2
   OMG, 2010, UML PROF CORBA V 1 0
   OMG, 2010, UML PROF ENT DISTR O
   OMG - Object Management Group, 2010, UN MOD LANG UML VERS
   Rehr JJ, 2010, COMPUT SCI ENG, V12, P34, DOI 10.1109/MCSE.2010.70
   SCHILIT BN, 1994, IEEE NETWORK, V8, P22, DOI 10.1109/65.313011
   Schroth C., 2007, IT Professional, V9, P36, DOI 10.1109/MITP.2007.60
   Smith M., 2004, OWL web ontology language: guide
   De Giorgis RS, 2005, J COMPUT SCI TECHNOL, V5, P250
   StarUML, 2008, OP SOURC UML MDA PLA
   VALE S, 2008, 11 IEEE INT C COMP S, P412, DOI DOI 10.1109/CSEW.2008.31
   Wenjia Niu, 2008, 2008 IEEE International Conference on Web Services (ICWS), P787, DOI 10.1109/ICWS.2008.34
NR 38
TC 15
Z9 16
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2012
VL 42
IS 10
BP 1211
EP 1227
DI 10.1002/spe.1124
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000QM
UT WOS:000308402000002
DA 2024-07-18
ER

PT J
AU Yi, Q
AF Yi, Qing
TI POET: a scripting language for applying parameterized source-to-source
   program transformations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE transformation language; compiler optimization; source-to-source
   translators
ID CODE GENERATION; SOFTWARE; COMPILER; SEARCH; DESIGN; SYSTEM
AB We present POET, a scripting language designed for applying advanced program transformations to code in arbitrary programming languages as well as building ad hoc translators between these languages. We have used POET to support a large number of compiler optimizations, including loop interchange, parallelization, blocking, fusion/fission, strength reduction, scalar replacement, SSE vectorization, among others, and to fully support the code generation of several domain-specific languages, including automatic tester/timer generation, and automatically translating a finite-state-machine-based behavior modeling language into C++/ Java code. This paper presents key design and implementation decisions of the POET language and show how to use various language features to significantly reduce the difficulty of supporting programmable compiler optimization for high performance computing and supporting ad hoc code generation for various domain-specific languages. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 Univ Texas San Antonio, San Antonio, TX 78249 USA.
C3 University of Texas System; University of Texas at San Antonio (UTSA)
RP Yi, Q (corresponding author), Univ Texas San Antonio, San Antonio, TX 78249 USA.
EM qingyi@cs.utsa.edu
FU NSF [CCF0747357, CCF-0833203]; DOE [DE-SC0001770]; Direct For Computer &
   Info Scie & Enginr; Division of Computing and Communication Foundations
   [0833203, 0747357] Funding Source: National Science Foundation; Division
   Of Computer and Network Systems; Direct For Computer & Info Scie &
   Enginr [0855247] Funding Source: National Science Foundation; Division
   of Computing and Communication Foundations; Direct For Computer & Info
   Scie & Enginr [1261778] Funding Source: National Science Foundation
FX This research is funded by NSF through grant CCF0747357 and CCF-0833203,
   and DOE through grants DE-SC0001770.
CR Ahmed N, 2000, SUPERCOMPUTING, V74
   AHMED N, 2000, P 2000 ACM INT C SUP
   Akers R, 2005, 12 WORK C REV ENG
   [Anonymous], 2011, OPEN64 COMPILER
   [Anonymous], 2005, P 19 ANN INT C SUP I, DOI DOI 10.1145/1088149.1088169
   [Anonymous], CGO
   [Anonymous], ICSTR160 U CAL IRV
   [Anonymous], HIPEAC
   [Anonymous], 2003, JOINT MOD LANG C HEL
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   [Anonymous], 2011, UM
   Bagge OS, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P65, DOI 10.1109/SCAM.2003.1238032
   Balzer R., 1976, 2nd International Conference on Software Engineering, P337
   BAUER FL, 1989, IEEE T SOFTWARE ENG, V15, P165, DOI 10.1109/32.21743
   Baxter ID, 2001, PROC INT CONF SOFTW, P739
   Beckmann O, 2003, LECT NOTES COMPUT SC, V3016, P291
   Bilmes J., 1997, Conference Proceedings of the 1997 International Conference on Supercompting, P340, DOI 10.1145/263580.263662
   Bondhugula U, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P101, DOI 10.1145/1375581.1375595
   Bravenboer M, 2008, SCI COMPUTER PROGRAM, V72
   Budinsky FJ, 1996, IBM SYST J, V35, P151, DOI 10.1147/sj.352.0151
   CARR S, 1994, ACM T PROGR LANG SYS, V16, P1768, DOI 10.1145/197320.197366
   Chen C, 2005, INT S COD GEN OPT SA
   Cimatti A., 2002, LECT NOTES COMPUTER, V2404
   Daby C, 2004, IMPLEMENTING UML STA
   Dagum L, 1998, IEEE COMPUT SCI ENG, V5, P46, DOI 10.1109/99.660313
   Dave C, 2009, COMPUTER, V42, P36, DOI 10.1109/MC.2009.385
   Donadio S, 2005, LCPC HAWTH NY OCT
   Engler DawsonR., 1996, POPL 96, P131
   Erwig M, 2002, ACM SIGPLAN NOTICES, V37, P88, DOI 10.1145/636517.636530
   Fahndrich M., 2006, GPCE 06 P 5 INT C GE, P275, DOI DOI 10.1145/1173706.1173748
   FEATHER MS, 1982, ACM T PROGR LANG SYS, V4, P1, DOI 10.1145/357153.357154
   FREEMAN P, 1987, IEEE T SOFTWARE ENG, V13, P830, DOI 10.1109/TSE.1987.233494
   Frigo M, 1998, INT CONF ACOUST SPEE, P1381, DOI 10.1109/ICASSP.1998.681704
   Futamura Y, 2002, LECT NOTES COMPUT SC, V2566, P358
   Garlan D., 1992, SIGSOFT Software Engineering Notes, V17, P68, DOI 10.1145/142882.142917
   Grant B, 2000, THEOR COMPUT SCI, V248, P147, DOI 10.1016/S0304-3975(00)00051-7
   Hall M, 2009, LCPC NEW DE US OCT
   Han S.-C., 2006, PACT 06 P 15 INT C P, P222
   Huang S.S., 2005, GENERATIVE PROGRAMMI
   Kisuki T., 2000, P CPC 10 COMP PAR CO, P35
   Lam M. S., 1991, P 4 INT C ARCH SUPP
   Levine J.R., 1992, LEX YACC
   LIM AW, 1999, P 13 ACM SIGARCH INT
   Magee J, 2010, 4 WORKSH STAT MACH L
   McKinley KS, 1996, ACM T PROGR LANG SYS, V18, P424, DOI 10.1145/233561.233564
   Muchnick S., 1997, ADV COMPILER DESIGN
   O'Boyle M., 2000, LANGUAGES COMPILERS
   Oh H, 2002, DES AUT C NEW ORL LA
   Pan Z., 2006, P PAR ARCH COMP TECH
   Pike G., 2002, SC
   Pouchet LN, 2007, INT SYM CODE GENER, P144
   PUGH W, 1991, P 1991 ACM INT C SUP
   Pugh W, 1999, LCPC 99 LA JOLL SAN
   Püschel M, 2005, P IEEE, V93, P232, DOI 10.1109/JPROC.2004.840306
   Qasem A., 2006, P 20 ACM INT C SUPER
   Qasem A, 2010, 7 IFIP INT C NETW PA
   Qasem A, 2004, P LACSI S
   Qasem A, 2006, J SUPERCOMPUT, V36, P183, DOI 10.1007/s11227-006-7957-2
   Quinlan D, 2003, 16 ANN WORKSH LANG C
   Rahman SF, 2011, HIPEAC HIGH PERFORMA
   Sander I, 2002, DES AUT CON, P281, DOI 10.1109/DAC.2002.1012636
   Thibault SA, 1999, IEEE T SOFTWARE ENG, V25, P363, DOI 10.1109/32.798325
   Tiwari A., 2009, MILITARY COMMUNICATI, P1
   Vandierendonck H, 2010, PACT 2010: PROCEEDINGS OF THE NINETEENTH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P389, DOI 10.1145/1854273.1854322
   Vuduc R, 2004, INT J HIGH PERFORM C, V18, P65, DOI 10.1177/1094342004041293
   Whaley RC, 2001, PARALLEL COMPUT, V27, P3, DOI 10.1016/S0167-8191(00)00087-9
   Wolfe MJ, 1989, P SUP REN NOV
   Yi Q, 2004, J SUPERCOMPUT, V27, P219, DOI 10.1023/B:SUPE.0000011386.69245.f5
   Yi Q, 2011, CGO ACM IEEE INT S C
   YI Q, 2004, 17 INT WORKSH LANG C
   YI Q, 2007, ACM SIGPLAN S LIB CE
   Yi Q, 2011, CS TR ICSOFT 11 INT
   Yi Q, 2008, 21 INT WORKSH LANG C
   Yotov K, 2003, ACM SIGPLAN NOTICES, V38, P63, DOI 10.1145/780822.781140
NR 74
TC 29
Z9 36
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2012
VL 42
IS 6
BP 675
EP 706
DI 10.1002/spe.1089
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 936NP
UT WOS:000303597500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Girbea, A
   Nechifor, S
   Sisak, F
   Perniu, L
AF Girbea, Alina
   Nechifor, Septimiu
   Sisak, Francisc
   Perniu, Liviu
TI Efficient address space generation for an OPC UA server
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE OPC UA server; address space; information model; automatic generation;
   maintenance; data source
AB The new OPC Unified Architecture has been introduced as a replacement for the existing COM-based specifications. The article describes a generalized algorithm for the automatic generation of the address space structure for an UA server. First, we present the general startup procedure of an OPC UA server, focusing on the address space generation step. Afterwards we introduce specialized algorithms for the generation of the type nodes, of object, variable, method and view nodes. Finally the additional references are added to the fully meshed address space. The basic ideas of the algorithms are: the splitting of the nodes into groups and the sequential addition of the groups to the address space, and the naming of a main reference for every target node. The algorithms have been applied for an aggregating UA server which models the devices of an assembly line. The main advantages are: shorter development time, easier maintenance and the possibility to add nodes to the address space in both online and offline mode. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Girbea, Alina; Sisak, Francisc; Perniu, Liviu] Transilvania Univ Brasov, Fac Elect Engn & Comp Sci, Dept Automat, Brasov, Romania.
   [Nechifor, Septimiu] PSE Siemens Romania, Corporate Technol, Brasov, Romania.
C3 Transylvania University of Brasov; Siemens AG
RP Girbea, A (corresponding author), Transilvania Univ Brasov, Fac Elect Engn & Comp Sci, Dept Automat, Brasov, Romania.
EM alina.girbea@unitbv.ro
RI Perniu, Liviu/D-9291-2015
FU Sectoral Operational Programme Human Resources Development (SOP HRD);
   European Social Fund; Romanian Government [POSDRU/88/1.5/S/59321]
FX This article is supported by the Sectoral Operational Programme Human
   Resources Development (SOP HRD), financed from the European Social Fund
   and by the Romanian Government under the contract number
   POSDRU/88/1.5/S/59321.
CR [Anonymous], 2010, JEASYOPC JAV TO COM
   [Anonymous], OPC UA SPEC 1
   [Anonymous], MYSQL DAT
   [Anonymous], 2010, PROS UA JAV SDK
   Hadlich Thomas, 2006, 2006 4th IEEE International Conference on Industrial Informatics, P263, DOI 10.1109/INDIN.2006.275791
   Hannelius T, 2008, IEEE INTL CONF IND I, P722
   Huang Renjie, 2010, 2010 5th IEEE Conference on Industrial Electronics and Applications (ICIEA 2010), P1439, DOI 10.1109/ICIEA.2010.5514836
   Leitner S. H., 2006, SOFTWARETECHNIK TREN, V26, P27
   Lu HM, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 3, P278, DOI 10.1109/ICACC.2010.5486620
   Mahnke W, 2009, OPC unified architecture
   OPC Foundation, OPC UA SPEC 3
   Paljakka M, 2009, SEM FINN SOC AUT HEL, P1
   PLCOpen and the OPC Foundation, 611313 IEC PLCOPEN O
   Schleipen M, 2008, IEEE INT C EMERG, P640, DOI 10.1109/ETFA.2008.4638464
   The OPC Foundation, 2010, OPC UA SPEC 11
   The OPC Foundation, 2010, OPC UN ARCH DEV DI
   The OPC Foundation, OPC UA SPEC 5
   The OPC Foundation, 2010, OPC UA SPEC 9
   The OPC Foundation, 2010, OPC UA SPEC 8
   The OPC Foundation, 2010, OPC UA SPEC 2
NR 20
TC 14
Z9 15
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2012
VL 42
IS 5
BP 543
EP 557
DI 10.1002/spe.1076
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 919AN
UT WOS:000302293100002
DA 2024-07-18
ER

PT J
AU Fayyoumi, E
   Oommen, BJ
AF Fayyoumi, Ebaa
   Oommen, B. John
TI A survey on statistical disclosure control and micro-aggregation
   techniques for secure statistical databases
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE secure statistical databases; micro-aggregation techniques; statistical
   disclosure control; micro-aggregation problem; disclosure risk;
   information loss
ID MICROAGGREGATION; ALGORITHM; CONFIDENTIALITY; INFORMATION
AB This paper surveys the fields of Statistical Disclosure Control (SDC) and Micro-Aggregation Techniques (MATs), which are both areas fundamental to the science of secure Statistical DataBases (SDBs). The paper is written from the perspective of a computer scientist with the hope that it will prove to be a source of reference material useful to researchers and practitioners in the field. The paper first introduces the concept of SDC and describes the domain of its applications and the various data types that are currently used in SDBs. It then proceeds to focus on the family of micro-data types in SDBs. At this juncture, we introduce the importance of the relevant measures, namely the metrics termed as the Information Loss (IL) and the Disclosure Risk (DR), after which we survey the various methods of resolving the conflicting goals that these metrics represent. Thereafter, the paper summarizes the perturbative and non-perturbative SDC methods for micro-data protection, and it focuses on the families of MATs by formally stating the Micro-Aggregation Problem and surveying it in a comprehensive manner. Apart from the paper including a historical view of the field of MATs, it describes a broad selection of work that has been reported more recently. Indeed, we believe that this paper represents a complete overview of the state-of-the-art techniques. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Oommen, B. John] Carleton Univ, Sch Comp Sci, Ottawa, ON K1S 5B6, Canada.
   [Fayyoumi, Ebaa] Hashemite Univ, Fac Prince Al Hussein Bin Abdallah II Informat Te, Zarqa 13115, Jordan.
   [Oommen, B. John] Univ Agder Grimstad, Grimstad, Norway.
C3 Carleton University; Hashemite University; University of Agder
RP Oommen, BJ (corresponding author), Carleton Univ, Sch Comp Sci, Ottawa, ON K1S 5B6, Canada.
EM oommen@scs.carleton.ca
RI ; Oommen, B. John/P-6323-2017
OI Fayyoumi, Ebaa/0000-0001-7577-288X; Oommen, B. John/0000-0002-5105-1575
CR Abowd JM, 2008, LECT NOTES COMPUT SC, V5262, P239
   ADAM NR, 1989, COMPUT SURV, V21, P515, DOI 10.1145/76894.76895
   Aggarwal CC, 2008, ADV DATABASE SYST, V34, P1, DOI 10.1007/978-0-387-70992-5
   AGGARWAL CC, 2008, ADV DATABASE SYSTEMS
   [Anonymous], 1987, MULTIPLE IMPUTATIONS
   [Anonymous], 1995, Proceedings of the Survey Research Methods Section, American Statistical Association, P114
   ANWAR N, 1993, MICROAGGREGATION SMA
   BAEYENS Y, 1999, P STAT DAT PROT 98 L, P101
   BECHET L, 2000, DEV MICROAGGREGATION
   Beck L. L., 1980, ACM Transactions on Database Systems, V5, P316, DOI 10.1145/320613.320617
   Brand R., 2002, Inference Control in Statistical Databases. From Theory to Practice. Revised Papers from Seminar `Statistical Disclosure Control: From Theory to Practice' (Lecture Notes in Computer Science Vol.2316), P97
   BRAND R, 2002, REFERENCE DATA SETS, P469
   Brucker Peter., 1977, OPTIMIZATION OPERATI, P45
   Castano S., 1994, Database security
   CRISES G, 2004, SYNTHETIC MICRODATA
   Crises G., 2004, NONPERTURBATIVE METH
   Crises G., 2004, INFORM LOSS MEASURES
   CRISES G, 2004, TRADING INFORM LOSS
   Crises G., 2004, INTRO MICRODATA PROT
   Crises G., 2004, ADDITIVE NOISE MICRO
   Crises G., 2004, PERTURBATIVE MASKING
   CRISES G, 2004, MICRODATA DISCLOSURE
   Crises G., 2004, MICROAGGREGATION PRI
   Dandekar R. A., 2002, Inference Control in Statistical Databases. From Theory to Practice. Revised Papers from Seminar `Statistical Disclosure Control: From Theory to Practice' (Lecture Notes in Computer Science Vol.2316), P117
   Date C.J., 2000, INTRO DATABASE SYSTE, V7th
   Defays D, 1997, QUESTIIO, V21, P221
   Defays D., 1995, Proceedings of the 2nd International Symposium on Statistical Confidentiality, P69
   Defays D., 1993, Proceedings of the 1992 symposium on design and analysis of longitudinal surveys, P195
   Defays D, 1998, J Off Stat, V14, P449
   Denning D. E., 1980, ACM Transactions on Database Systems, V5, P291, DOI 10.1145/320613.320616
   Denning D. E., 1979, ACM Transactions on Database Systems, V4, P76, DOI 10.1145/320064.320069
   DENNING DE, 1979, COMPUT SURV, V11, P227, DOI 10.1145/356778.356782
   Domingo-Ferrer J, 2005, DATA MIN KNOWL DISC, V11, P195, DOI 10.1007/s10618-005-0007-5
   Domingo-Ferrer J, 2002, 2002 FIRST INTERNATIONAL IEEE SYMPOSIUM INTELLIGENT SYSTEMS, VOL II, EUNITE INVITED SESSION, PROCEEDINGS, P44, DOI 10.1109/IS.2002.1042572
   Domingo-Ferrer J, 2003, INT J INTELL SYST, V18, P633, DOI 10.1002/int.10107
   Domingo-Ferrer J, 2003, INFORM SCIENCES, V151, P153, DOI 10.1016/S0020-0255(03)00064-1
   Domingo-Ferrer J, 2002, ADV SOFT COMP, P289
   Domingo-Ferrer J, 2006, STUD FUZZ SOFT COMP, V197, P287
   Domingo-Ferrer J, 2002, STUD FUZZ SOFT COMP, V97, P260
   Domingo-Ferrer J, 2002, IEEE T KNOWL DATA EN, V14, P189, DOI 10.1109/69.979982
   Domingo-Ferrer J, 2002, INT J UNCERTAIN FUZZ, V10, P477, DOI 10.1142/S0218488502001594
   Domingo-Ferrer J, 1999, COMPUT MATH APPL, V38, P13, DOI 10.1016/S0898-1221(99)00281-3
   Domingo-Ferrer J., 2002, CONFIDENTIALITY DISC, P113
   Domingo-Ferrer J., 2002, Confidentiality, Disclosure and Data Access: Theory and Practical Applications for StatisticalAgencies, P93
   Domingo-Ferrer J., 2001, PREPRO CEEDINGS ETK, V2, P807
   Domingo-Ferrer J, 2008, COMPUT MATH APPL, V55, P714, DOI 10.1016/j.camwa.2007.04.034
   Domingo-Ferrer J, 2006, LECT NOTES COMPUT SC, V4302, P129
   Domingo-Ferrer J, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GRANULAR COMPUTING, P774, DOI 10.1109/GRC.2006.1635915
   Domingo-Ferrer J, 2006, LECT NOTES COMPUT SC, V4032, P106
   DOMINGOFERRER J, 2003, J ADV COMPUTATIONAL, V7, P153
   DOMINGOFERRER J, 2006, P Q2006 EUR C QUAL S
   DOMINGOFERRER J, 2001, JOINT ECE EUR WORK S
   DOMINGOFERRER J, 2004, SECURITY NOISE ADDIT, P149
   DOMINGOFERRER J, 1999, STAT DISCLOSURE CONT
   DWORK C, 2006, 3 C CRYPT TCC NEW YO, P365
   DWORK C, 2008, ADV CRYPTOLOGY CRYPT
   DWORK C, 2007, UNECE WORKS STAT DAT
   Dwork C, 2007, ACM S THEORY COMPUT, P85, DOI 10.1145/1250790.1250804
   Dwork C, 2008, LECT NOTES COMPUT SC, V4978, P1, DOI 10.1007/978-3-540-79228-4_1
   Dwork C, 2006, LECT NOTES COMPUT SC, V4052, P1
   El-Hamdouchi A., 1986, PROCEEDING 9 INT ACM, P149
   Elliot M., 2002, Inference Control in Statistical Databases. From Theory to Practice. Revised Papers from Seminar `Statistical Disclosure Control: From Theory to Practice' (Lecture Notes in Computer Science Vol.2316), P126
   EVFIMIEVSKI A, 2004, ACM PODS C PAR FRANC, P211
   EVFIMIEVSKI A, 2004, THESIS CORNELL U
   EVFIMIEVSKI A, 2002, ASS COMPUTING MACHIN
   Fayyoumi E, 2006, LECT NOTES COMPUT SC, V4302, P114
   Fayyoumi E, 2009, IEEE T SYST MAN CY B, V39, P1192, DOI 10.1109/TSMCB.2009.2013723
   FEIGE EL, 1970, DATA BASES COMPUTERS, P261
   FELSO F, 2001, CONFIDENTIALITY DISC, P17
   FERNANDEZ E, 1980, DATABASES SECURITY I
   Fuller W.A., 1993, Journal of Official Statistics, V9, P383
   GIESSING S, 2003, CASC PROJECT INTEGRA
   GOUWELEEUW JW, 1997, POSTRANDOMIZATION ST
   Hansen SL, 2003, IEEE T KNOWL DATA EN, V15, P1043, DOI 10.1109/TKDE.2003.1209020
   HUNDEPOOL A, 1998, T ARGUS USERS MANUAL
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   JONGE W, 1983, ACM T DATABASE SYST, V8, P60
   KENTHAPADI K, 2004, DIMACS WORKING GROUP
   KOOIMAN P, 1998, METHOD DISCLOSURE LI
   Laszlo M, 2005, IEEE T KNOWL DATA EN, V17, P902, DOI 10.1109/TKDE.2005.112
   Lenz R., 2006, HDB STAT DISCLOSURE
   LITTLE RJ, 2003, AM STAT ASS P SECT S
   LITTLE RJ, 2002, AM STAT ASS P SECT S, P2133
   MACHANAVAJJHALA A, 2008, ICDE 2008
   MANDUJANO S, 2001, INFERENCE ATTACKS ST
   MARTINEZBALLEST.A, 2007, ICDE WORKSH IST TURK, P180
   Mas M., 2006, STAT DATA PROTECTION
   MATEO J, 2002, NEW MICROAGGREGATION
   Mateo-Sanz J., 1998, Questiio, V22, P511
   Mateo-Sanz JM, 2005, DATA MIN KNOWL DISC, V11, P181, DOI 10.1007/s10618-005-0011-9
   MATEOSANZ J, 2004, OUTLIER PROTECTION C, P201
   MOORE R., 1996, Controlled data-swappng techniques for masking public use microdata sets
   Muralidhar K, 1999, ACM T DATABASE SYST, V24, P487, DOI 10.1145/331983.331986
   NIN J, 2008, P 12 INT C INF PROC, P138
   NORDHOLT E, 2001, STAT DISCLOSURE CONT
   OGANIAN A, 2002, THESIS U URV CATALUN
   Oganian A., 2001, Statistical Journal of the United Nations Economic Commission for Europe, V18, P345, DOI [DOI 10.3233/SJU-2001-18409, 10.3233/SJU-2001-18409]
   Oganian A, 2006, LECT NOTES COMPUT SC, V4302, P102
   Oommen BJ, 2008, LECT NOTES COMPUT SC, V5107, P404, DOI 10.1007/978-3-540-70500-0_30
   Oommen BJ, 2010, IEEE T SYST MAN CY B, V40, P198, DOI 10.1109/TSMCB.2009.2024949
   Oommen BJ, 2008, LECT NOTES ARTIF INT, V5360, P423, DOI 10.1007/978-3-540-89378-3_43
   Panaretos J., 2001, HERCMA 2001 C
   RAGHUNATHAN TE, 2003, J OFF STAT, V8, P531
   REDDY B, 2003, ASPECTS DATABASE SEC
   Reiter Jerome P., 2003, Surv. Methodol., V29, P181
   Reiter JR, 2005, J R STAT SOC A STAT, V168, P185, DOI 10.1111/j.1467-985X.2004.00343.x
   SANCHEZ J, 2003, TEST REPORT MULTIVAR
   Sánchez JA, 2004, ANN NY ACAD SCI, V3050, P307
   Sande G, 2002, INT J UNCERTAIN FUZZ, V10, P459, DOI 10.1142/S0218488502001582
   SANDE G, P NTTS ETK NEW TECHN
   SCHATZ J, 1997, SURVEY TECHNIQUES SE
   Sebe F., 2002, Inference Control in Statistical Databases. From Theory to Practice. Revised Papers from Seminar `Statistical Disclosure Control: From Theory to Practice' (Lecture Notes in Computer Science Vol.2316), P163
   SOLANAS A, 2006, 1 INT C AV REL SEC I
   SOLANAS A, 2006, 7 COMPSTAT S IASC RO
   SULLIVAN G, 1989, SECTION SURVEY RES M, P802
   Sweeney L., 1997, Record Linkage Techniques, P442
   Tasoulis DK, 2005, PATTERN RECOGN LETT, V26, P2116, DOI 10.1016/j.patrec.2005.03.023
   Torra V, 2004, ANN NY ACAD SCI, V3050, P175
   Torra V, 2004, ANN NY ACAD SCI, V3050, P162
   Torra V, 2006, LECT NOTES COMPUT SC, V4302, P233
   Valls A, 2002, ADV SOFT COMP, P355
   Vrahatis MN, 2002, J COMPLEXITY, V18, P375, DOI 10.1006/jcom.2001.0633
   WARD JH, 1963, J AM STAT ASSOC, V58, P236, DOI 10.2307/2282967
   WENDE T, 2004, DIFFERENT GRADES STA, P336
   Willenborg L., 1996, LECT NOTES STAT, V111
   Willenborg Leon, 2001, Elements of Statistical Disclosure Control
   Wilson Richard H, 2003, J Am Acad Audiol, V14, P453
   Winkler WE, 2004, ANN NY ACAD SCI, V3050, P216
   WOLF P, 1997, REFLECTIONS PRAM
   Yancey W. E., 2002, Inference Control in Statistical Databases. From Theory to Practice. Revised Papers from Seminar `Statistical Disclosure Control: From Theory to Practice' (Lecture Notes in Computer Science Vol.2316), P135
   Zaslavsky A.M., 1998, J OFF STAT, V14, P411
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 137
TC 20
Z9 22
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV-DEC
PY 2010
VL 40
IS 12
SI SI
BP 1161
EP 1188
DI 10.1002/spe.992
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677TZ
UT WOS:000284016000007
DA 2024-07-18
ER

PT J
AU Adak, M
   Topçu, O
   Oguztüzün, H
AF Adak, Mehmet
   Topcu, Okan
   Oguztuzun, Halit
TI Model-based code generation for HLA federates
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code generation; high level architecture; federation architecture
   metamodel; live sequence charts; message sequence charts;
   aspect-oriented programming
ID LIVE SEQUENCE CHARTS
AB This paper addresses the problem of automated code generation for a High Level Architecture compliant federate application given its behavior model. The behavior model is a part of the architectural model of a federation that the federate can participate in. The federate behavior model is based on Live Sequence Charts, adopted as the behavioral specification formalism in the Federation Architecture Metamodel (FAMM). FAMM serves as a formal language for describing federation architectures. An objective is to help the testing of federation architecture by means of its prototype implementation early in the development lifecycle. A further objective is to help developers construct complete federate applications that are well modularized. The approach to achieve these objectives is aspect-oriented in that the generated code. which handles the federate's interactions with a federation execution, serves as the base code, where the computation logic is to be weaved as an aspect. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Adak, Mehmet; Topcu, Okan; Oguztuzun, Halit] Middle E Tech Univ, TR-06531 Ankara, Turkey.
C3 Middle East Technical University
RP Adak, M (corresponding author), Middle E Tech Univ, TR-06531 Ankara, Turkey.
EM bmadak@yahoo.com
RI Oğuztüzün, Halit/ABA-3509-2020; Topcu, Okan/A-4137-2016; adak,
   mehmet/ABE-4098-2020
OI Topcu, Okan/0000-0003-3900-0078; Oguztuzun, Halit/0000-0001-9928-0441
CR ADAK M, 2007, METUCENG7R20074
   [Anonymous], 2009, FREE ENC
   [Anonymous], 1998, Z120 ITUT
   [Anonymous], 15161 IEEE
   *ASPECTJ, 2009, ASPECTJ PROJ
   Balasubramanian K, 2006, COMPUTER, V39, P33, DOI 10.1109/MC.2006.54
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Bontemps Y, 2005, IEEE T SOFTWARE ENG, V31, P999, DOI 10.1109/TSE.2005.137
   Braem M, 2006, LECT NOTES COMPUT SC, V4089, P66
   Brill M, 2004, LECT NOTES COMPUT SC, V3147, P374
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   DENIZ O, 2009, 4 BALK C INF BCI 200
   DURR P, 2007, 7 INT WORKSH RUNT VE, P38
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   *ECL, 2009, ECL PROJ
   Elrad T, 2001, COMMUN ACM, V44, P33, DOI 10.1145/383845.383854
   *GME, 2006, GEN MOD ENV GME 7 US
   Harel D, 2008, SOFTW SYST MODEL, V7, P237, DOI 10.1007/s10270-007-0054-z
   Harel D, 2007, LECT NOTES COMPUT SC, V4422, P121
   IEEE, 2000, 15162 IEEE
   *IEEE, 2000, IEEE 1516 STAND MOD
   *ITU T, 2004, Z120 ITUT
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   PARR S, 2003, P 2003 SPRING WORKSH
   SPINCZYK O, 2005, SOFTWARE DEV J, P68
   TOLK A, 2002, P 2002 FALL SIM INT
   TOPCU O, 2007, METU CENG TR SERIES
   Topçu O, 2008, ACM T MODEL COMPUT S, V18, DOI 10.1145/1371574.1371576
   Topçu O, 2009, SOFTW SYST MODEL, V8, P567, DOI 10.1007/s10270-009-0113-8
   2009, PITCH PRTI PITCH TEC
   2009, SIMPLICITY
NR 31
TC 14
Z9 15
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2010
VL 40
IS 2
BP 149
EP 175
DI 10.1002/spe.949
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 561AE
UT WOS:000274946400003
DA 2024-07-18
ER

PT J
AU Tian, C
   Nagarajan, V
   Gupta, R
   Tallam, S
AF Tian, Chen
   Nagarajan, Vijay
   Gupta, Rajiv
   Tallam, Sriraman
TI Automated dynamic detection of busy-wait synchronizations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data race; synchronization; record/replay system; transactional memory;
   livelocks
ID RECORD/REPLAY; HARDWARE
AB With the advent of multicores, multithreaded programming has acquired increased importance. In order to obtain good performance, the synchronization constructs in multithreaded programs need to be carefully implemented. These implementations can be broadly classified into two categories: busy-wait and schedule-based. For shared memory architectures, busy-wait synchronizations are preferred over schedule-based synchronizations because they can achieve lower wakeup latency, especially when the expected wait time is much shorter than the scheduling time. While busy-wait synchronizations can improve the performance of multithreaded programs running on multicore machines, they create a challenge in program debugging, especially in detecting and identifying the causes of data races. Although significant research has been done on data race detection, prior works rely on one important assumption-the debuggers are aware of all the synchronization operations performed during a program run. This assumption is a significant limitation as multithreaded programs, including the popular SPLASH-2 benchmark have busy-wait synchronizations such as barriers and flag synchronizations implemented in the user code. We show that the lack of knowledge of these synchronization operations leads to unnecessary reporting of numerous races. To tackle this problem, we propose a dynamic technique for identifying user-defined synchronizations that are performed during a program run. Both software and hardware implementations are presented. Furthermore, our technique can be easily exploited by a record/replay system to significantly speedup the replay. It can also be leveraged by a transactional memory system to effectively resolve a livelock situation. Our evaluation confirms that our synchronization detector is highly accurate with no false negatives and very few false positives. We further observe that the knowledge of synchronization operations results in 23% reduction in replay time. Finally, we show that using synchronization knowledge livelocks can be efficiently avoided during runtime monitoring of programs. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Tian, Chen; Nagarajan, Vijay; Gupta, Rajiv] Univ Calif Riverside, CSE Dept, Riverside, CA 92521 USA.
   [Tallam, Sriraman] Google Inc, Mountain View, CA 94043 USA.
C3 University of California System; University of California Riverside;
   Google Incorporated
RP Tian, C (corresponding author), Univ Calif Riverside, CSE Dept, Riverside, CA 92521 USA.
EM tianc@cs.ucr.edu
OI Gupta, Rajiv/0000-0002-9348-3974
FU NSF [CNS-0910906, CNS0751961, CCF-0753470, CNS-0751949]
FX Contract/grant sponsor: NSF; contract/grant numbers: CNS-0910906,
   CNS0751961, CCF-0753470, CNS-0751949
CR Adl-Tabatabai AR, 2006, ACM SIGPLAN NOTICES, V41, P26, DOI 10.1145/1133981.1133985
   ADVE SV, 1991, ACM COMP AR, V19, P234, DOI 10.1145/115953.115976
   ARTIAGA E, 1997, EXPERIENCES IMPLEMEN, P1
   BACON DF, 1991, P 1991 ACM ONR WORKS, P194
   Bhansali S., 2006, VEE 2006. Proceedings of the Second International Conference on Virtual Execution Environments, P154
   Bobba J, 2007, CONF PROC INT SYMP C, P81, DOI 10.1145/1273440.1250674
   CHOI JD, 1991, ACM T PROGR LANG SYS, V13, P491, DOI 10.1145/115372.115324
   Christiaens M., 2001, JVM 01, P15
   CHUNG J, 2008, HPCA 08 P 14 INT S H, P279
   DAMRON P, 2006, ASPLOS 12, P336
   DINNING A, 1991, P ACM ONR WORKSH PAR, P85
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Gupta R., 1989, ASPLOS-III Proceedings. Third International Conference on Architectural Support for Programming Languages and Operating Systems, P54, DOI 10.1145/70082.68187
   HERLIHY M., 1993, P 20 ANN INT S COMPU, P289, DOI DOI 10.1145/165123.165164.URL
   Krena Bohuslav., 2007, Proceedings of the 2007 ACM Workshop on Parallel and Distributed Systems: Testing and Debugging, PADTAD '07, P54
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Li T, 2006, IEEE T PARALL DISTR, V17, P508, DOI 10.1109/TPDS.2006.78
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   MAGNUSSON PS, 1998, ATEC 98 P ANN TECHN, P1
   MAGNUSSON PS, 1994, QUEUE LOCKS CACHE CO, P165
   MELLORCRUMMEY J, 1991, SUPERCOMPUTING 91, P24
   MELLORCRUMMEY JM, 1991, ACM T COMPUT SYST, V9, P21, DOI 10.1145/103727.103729
   Moravan MJ, 2006, ACM SIGPLAN NOTICES, V41, P359, DOI 10.1145/1168918.1168902
   Narayanasamy S, 2005, CONF PROC INT SYMP C, P284, DOI 10.1109/ISCA.2005.16
   Narayanasamy S, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P22, DOI 10.1145/1250734.1250738
   Narayanasamy S, 2006, ACM SIGPLAN NOTICES, V41, P229, DOI 10.1145/1168918.1168886
   Nethercote N, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P65
   NETZER RHB, 1993, P ACM ONR WORKSH PAR, P1
   OCALLAHAN R, 2003, P 9 ACM SIGPLAN S PR, P167
   Pan D.Z., 1988, PROC 1988 ACM SIGPLA, P124
   Qin F, 2006, INT SYMP MICROARCH, P135
   Ronsse M, 2003, COMMUN ACM, V46, P62, DOI 10.1145/903893.903895
   Ronsse M, 1999, ACM T COMPUT SYST, V17, P133, DOI 10.1145/312203.312214
   Saito Y., 2005, AADEBUG 05, P69, DOI DOI 10.1145/1085130.1085139
   Savage Stefan., 1997, SOSP 97, P27, DOI DOI 10.1145/269005.266641
   Srinivasan SM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK 2004 USENIX ANNUAL TECHNICAL CONFERENCE, P29
   Tallam S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, ISSTA '07, P207, DOI DOI 10.1145/1273463.1273491
   *V PROJ HELGR, DAT RAC DET
   von Praun C, 2001, ACM SIGPLAN NOTICES, V36, P70, DOI 10.1145/504311.504288
   Wells P. M., 2006, P INT C PAR ARCH COM, P124
   WITTIE LD, 1988, P ACM SIGPLAN SIGOPS, P57
   WOO SC, 1995, ACM COMP AR, P24, DOI 10.1109/ISCA.1995.524546
   Xu M, 2003, CONF PROC INT SYMP C, P122, DOI 10.1109/ISCA.2003.1206994
   Yu Y., 2005, P 20 ACM S OP SYST P, P221
NR 44
TC 8
Z9 9
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG 10
PY 2009
VL 39
IS 11
BP 947
EP 972
DI 10.1002/spe.922
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 476DP
UT WOS:000268418300001
DA 2024-07-18
ER

PT J
AU Mostinckx, S
   Van Cutsem, T
   Timbermont, S
   Boix, EG
   Tanter, É
   De Meuter, W
AF Mostinckx, Stijn
   Van Cutsem, Tom
   Timbermont, Stijn
   Boix, Elisa Gonzalez
   Tanter, Eric
   De Meuter, Wolfgang
TI Mirror-based reflection in AmbientTalk
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE reflection; metaprogramming; mirrors; mirages; actors; AmbientTalk
AB This paper introduces a novel mechanism to perform intercession (a form of reflection) in an object-oriented programming language with the goal of making the language extensible from within itself. The proposed mechanism builds upon a mirror-based architecture, leading to a reusable reflective application programming interface that cleanly separates interface from implementation details. However, support for intercession has been limited in contemporary mirror-based architectures. This is due to the fact that mirror-based architectures only support reflection explicitly triggered by metaprograms, while intercession requires reflection implicitly triggered by the language interpreter. This work reconciles mirrors with intercession in the context of an actor-based, object-oriented programming language named AmbientTalk. We describe this language's full reflective architecture, highlighting its novel mirror-based approach to reflect upon both objects and concurrently executing actors. Subsequently, we apply AmbientTalk's mirror-based reflection to implement two language features, which crucially depend on intercession, to wit future-type message passing and leased object references. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Mostinckx, Stijn; Van Cutsem, Tom; Timbermont, Stijn; Boix, Elisa Gonzalez; De Meuter, Wolfgang] Vrije Univ Brussel, Programming Technol Lab, Brussels, Belgium.
   [Tanter, Eric] Univ Chile, Dept Comp Sci, DCC, Pleiad Lab, Santiago, Chile.
C3 Vrije Universiteit Brussel; Universidad de Chile
RP Mostinckx, S (corresponding author), Vrije Univ Brussel, Programming Technol Lab, Brussels, Belgium.
EM smostinc@vub.ac.be
RI Mostinckx, Stijn/B-1653-2008; Tanter, Éric/A-7955-2008
OI Tanter, Éric/0000-0002-7359-890X; Gonzalez Boix,
   Elisa/0000-0002-9966-6421; Van Cutsem, Tom/0000-0003-4116-4290; DE
   MEUTER, WOLFGANG/0000-0002-5229-5627
FU PRFB; Institute for the Promotion of Innovation through Science and
   Technology in Flanders; Millenium Nucleus Center for Web Research
   [P04-067-F]; FONDECYT [11060493]
FX S. Mostinckx and S. Timbermont are funded by a doctoral scholarship of
   the Institute for the Promotion of Innovation through Science and
   Technology in Flanders (IWT=Vlaanderen). T. Van Cutsem is a Postdoctoral
   Fellow of the Research Foundation-Flanders (FWO). E. Gonzaler Boix is
   funded by the PRFB program of the Institute for the encouragement of
   Scientific Research and Innovation of Brussels. E. Tanter is partially
   financed by the Millenium Nucleus Center for Web Research, Grant
   P04-067-F, Mideplan, Chile, and FONDECYT project 11060493.
CR AGESEN O, 2000, SELF 4 1 PROGRAMMERS, P108
   AGHA G, 1986, ACTORS MODEL CONCURR, P144
   Bockisch Christoph., 2004, AOSD 04 P 3 INT C AS, P83
   BRACHA G, 1993, SIGPLAN NOTICES, V28, P215, DOI 10.1145/167962.165893
   BRACHA G, 2004, P 19 ANN ACM SIGPLAN, P331
   BRANT J, 1998, LNCS, V1445, P396
   CAROMEL D, 1989, J OBJECT-ORIENT PROG, V2, P12
   Chiba S, 2003, LECT NOTES COMPUT SC, V2830, P364
   Dedecker J, 2006, LECT NOTES COMPUT SC, V4067, P230
   Denker M, 2006, COMPUT LANG SYST STR, V32, P125, DOI 10.1016/j.cl.2005.10.002
   Ducasse S, 1999, J OBJECT-ORIENT PROG, V12, P39
   FERBER J, 1989, SIGPLAN NOTICES, V24, P317, DOI 10.1145/74878.74910
   GRAY C, 1989, SOSP 89, P202, DOI DOI 10.1145/74850.74870
   GUY L, 1999, HIGHER ORDER SYMBOLI, V12, P221
   Hilsdale E., 2004, INT C ASPECT ORIENTE, P26
   KICZALES G, 1991, ART METAOBJECT PROTO, P348
   LIEBERHERR K, 2004, P 3 INT C ASP OR SOF
   LIEBERMAN H, 1986, SIGPLAN NOTICES, V21, P214, DOI 10.1145/960112.28718
   MAES F, 1988, METALEVEL ARCHITECTU, P356
   MAES P, 1987, OCT P OBJ OR PROGR S, P147
   Mascolo C, 2002, LECT NOTES COMPUT SC, V2497, P20
   McAffer J, 1995, LECT NOTES COMPUT SC, V952, P190
   Miller Mark Samuel, 2000, P 4 INT C FIN CRYPT, DOI [DOI 10.1007/3-540-45472-1_24, 10.1007/3- 540- 45472- 1_24]
   Miller MS, 2005, LECT NOTES COMPUT SC, V3705, P195, DOI 10.1007/11580850_12
   MOSTINCKX S, 2007, P DYN LANG S DLS, P222
   MULET P, 1995, SIGPLAN NOTICES, V30, P316, DOI 10.1145/217839.217870
   OKAMURA H, 1992, P INT WORKSH NEW MOD, P36
   PAEPCKE A, 1993, USER LEVEL LANGUAGE, P65
   Röthlisberger D, 2008, COMPUT LANG SYST STR, V34, P46, DOI 10.1016/j.cl.2007.05.001
   Smith B. C., 1984, P 11 ACM SIGACT SIGP, P23, DOI [DOI 10.1145/800017.800513, 10.1145/800017.800513]
   *SUN MICR, 1999, DYN PROX CLASS
   Tanter É, 2003, ACM SIGPLAN NOTICES, V38, P27, DOI 10.1145/949343.949309
   UNGAR D, 1987, SIGPLAN NOTICES, V22, P227, DOI 10.1145/38807.38828
   VANCURSE MT, 2007, P 26 INT C CHIL COMP, P3, DOI DOI 10.1109/SCCC.2007.12
   WATANABE T, 1988, C P OBJ OR PROGR SYS, P306
   Welch I, 2001, 6TH USENIX CONFERENCE OF OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS 01), P119
   YONEZAWA A., 1986, OOPLSA 86, P258
NR 37
TC 16
Z9 17
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2009
VL 39
IS 7
BP 661
EP 699
DI 10.1002/spe.909
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 434ZW
UT WOS:000265313900001
DA 2024-07-18
ER

PT J
AU Kanade, A
   Sanyal, A
   Khedker, UP
AF Kanade, Aditya
   Sanyal, Amitabha
   Khedker, Uday P.
TI Validation of GCC optimizers through trace generation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler optimization; translation validation; GCC; temporal logic; PVS
AB The translation validation approach involves establishing semantics preservation of individual compilations. In this paper, we present a novel framework for translation validation of optimizers. We identify a comprehensive set of primitive program transformations that are commonly used in many optimizations. For each primitive, we define soundness conditions that guarantee. that the transformation is semantics preserving. This framework of transformations and soundness conditions is independent of any particular compiler implementation and is formalized in PVS. An optimizer is instrumented to generate the trace of an optimization run in terms of the predefined transformation-primitives. The validation succeeds if (1) the trace conforms to the optimization and (2) the soundness conditions of the individual transformations in the trace are satisfied. The first step eliminates the need to trust the instrumentation. The soundness conditions are defined in a temporal logic and therefore the second step involves model checking. Thus the scheme is completely automatable. We have applied this approach to several intraprocedural optimizations of RTL intermediate code in GNU Compiler Collection (GCC) v4.1.0, namely, loop invariant code motion, partial redundancy elimination, lazy code motion, code hoisting, and copy and constant propagation for sample programs written in a subset of the C language. The validation does not require information about program analyses performed by GCC. Therefore even though the GCC code base is quite large and complex, instrumentation could be achieved easily. The framework requires an estimated 21 lines of instrumentation code and 140 lines of PVS specifications for every 1000 lines of the GCC code considered for validation. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Kanade, Aditya; Sanyal, Amitabha; Khedker, Uday P.] Indian Inst Technol, Dept Comp Sci & Engn, Bombay, Maharashtra, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Bombay
RP Kanade, A (corresponding author), Indian Inst Technol, Dept Comp Sci & Engn, Bombay, Maharashtra, India.
EM kanade@seas.upenn.edu
CR Glesner S, 2003, J UNIVERS COMPUT SCI, V9, P191
   GLESNER S, LECT NOTES COMPUTER, V2805, P758
   GOERIGK W, 1996, SESS CC 96 LINKP SWE
   Goos G, 1999, LECT NOTES COMPUT SC, V1710, P201
   Huang YQ, 2006, LECT NOTES COMPUT SC, V4134, P281
   LEROY X, 2007, FORMAL VERIFICATION, P25
   Rinard Martin C., 1999, P FLOC WORKSH RUN TI
   Tristan JB, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P17, DOI 10.1145/1328438.1328444
NR 8
TC 3
Z9 3
U1 0
U2 1
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2009
VL 39
IS 6
BP 611
EP 639
DI 10.1002/spe.913
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 429SR
UT WOS:000264940900003
DA 2024-07-18
ER

PT J
AU Ramasamy, HV
   Pandey, P
   Cukier, M
   Sanders, WH
AF Ramasamy, HariGovind V.
   Pandey, Prashant
   Cukier, Michel
   Sanders, William H.
TI Experiences with building an intrusion-tolerant group communication
   system
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE intrusion tolerance; fault tolerance; group communication; distributed
   protocols; experimental evaluation
ID DETECTORS
AB There are many group communication systems (GCSs) that provide consistent group membership and reliable, ordered multicast properties in the presence of crash faults. However, relatively few GCS implementations are able to provide these properties in the presence of malicious faults resulting from intrusions. We describe the systematic transformation of a crash-tolerant GCS, namely C-Ensemble, into an intrusion-tolerant GCS, the ITUA GCS. To perform the transformation, we devised intrusion-tolerant versions of key group communication protocols. We then inserted implementations of the protocols into C-Ensemble and made significant changes to the rest of the C-Ensemble protocol stack to make the stack intrusion tolerant. We quantify the cost of providing intrusion-tolerant group communication in two ways. First, we quantify the implementation effort by presenting a detailed analysis of the amount of change required to the original C-Ensemble system. In doing so, we provide insight into the choice of building an intrusion-tolerant GCS from scratch versus building one by leveraging a crash-tolerant implementation. Second, we quantify the run-time performance cost of tolerating intrusions by presenting results from an experimental evaluation of the main intrusion-tolerant microprotocols. The results are analyzed to identify the parts that contribute the most overhead while providing intrusion tolerance during both normal operation and recovery from intrusions. Copyright (c) 2007 John Wiley & Sons, Ltd.
C1 [Ramasamy, HariGovind V.] IBM Corp, Zurich Res Lab, CH-8803 Ruschlikon, Switzerland.
   [Pandey, Prashant] IBM Corp, Almaden Res Lab, Almaden, CA USA.
   [Cukier, Michel] Univ Maryland, College Pk, MD 20742 USA.
   [Sanders, William H.] Univ Illinois, Urbana, IL 61801 USA.
C3 International Business Machines (IBM); International Business Machines
   (IBM); University System of Maryland; University of Maryland College
   Park; University of Illinois System; University of Illinois
   Urbana-Champaign
RP Ramasamy, HV (corresponding author), IBM Corp, Zurich Res Lab, CH-8803 Ruschlikon, Switzerland.
EM hvr@zurich.ibm.com
RI Cukier, Michel/AAV-8017-2021
OI Cukier, Michel/0000-0001-6250-4632
CR Amir Y., 2004, ACM Transactions on Information and Systems Security, V7, P457, DOI 10.1145/1015040.1015045
   AMIR Y, 1998, 984 CNDS J HOPK U
   Amir Y., 1992, Twenty-Second International Symposium on, P76
   Baldoni R, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P273, DOI 10.1109/ICDSN.2000.857550
   BIRMAN K, 1991, ACM OPERATING SYSTEM, P103
   Birman K.P., 1994, RELIABLE DISTRIBUTED
   Birman K.P., 1996, BUILDING SECURE RELI
   Birman Kenneth., 2000, Proceedings of the DARPA Information Survivability Conference and Exposition (DISCEX), P149
   Cachin C, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P423
   Cachin C, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P167, DOI 10.1109/DSN.2002.1028897
   Castro M, 2003, ACM T COMPUT SYST, V21, P236, DOI 10.1145/859716.859718
   Castro M, 2002, ACM T COMPUT SYST, V20, P398, DOI 10.1145/571637.571640
   Chandra TD, 1996, J ACM, V43, P225, DOI 10.1145/226643.226647
   Chockler GV, 2001, ACM COMPUT SURV, V33, P427, DOI 10.1145/503112.503113
   CORREIA M, 2003, THESIS U LISBON
   Correia M, 2007, J SYST SOFTWARE, V80, P178, DOI 10.1016/j.jss.2006.03.034
   Cristian F, 1999, IEEE T PARALL DISTR, V10, P642, DOI 10.1109/71.774912
   DRABKIN V, 2006, P 26 IEEE INT C DIST, P36
   Dutertre B, 2002, P IEEE S SECUR PRIV, P216, DOI 10.1109/SECPRI.2002.1004373
   EZHILCHELVAN PD, 1995, INT CON DISTR COMP S, P296, DOI 10.1109/ICDCS.1995.500032
   FISCHER MJ, 1985, J ACM, V32, P374, DOI 10.1145/3149.214121
   Franklin MK, 1996, IEEE T SOFTWARE ENG, V22, P302, DOI 10.1109/32.502223
   Friedman R, 1996, 15TH SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P140, DOI 10.1109/RELDIS.1996.559711
   HAYDEN M, 2001, ENSEMBLE REFERENCE M
   Hayden M., 1998, THESIS CORNELL U
   Kihlstrom K. P., 2001, ACM Transactions on Information and Systems Security, V4, P371, DOI 10.1145/503339.503341
   Kihlstrom KP, 2003, COMPUT J, V46, P16, DOI 10.1093/comjnl/46.1.16
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Malkhi D, 1997, P IEEE CSFW, P116, DOI 10.1109/CSFW.1997.596799
   Moser LE, 1996, COMMUN ACM, V39, P54, DOI 10.1145/227210.227226
   Mpoeleng D, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P227, DOI 10.1109/DSN.2003.1209933
   Pal P, 2006, SOFTWARE PRACT EXPER, V36, P1331, DOI 10.1002/spe.747
   PANDEY P, 2001, THESIS U ILLIONOIS U
   Ramasamy HV, 2004, EUROMICRO CONF PROC, P591, DOI 10.1109/EURMIC.2004.1333427
   Ramasamy HV, 2003, IEICE T INF SYST, VE86D, P2612
   Ramasamy HV, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P229, DOI 10.1109/DSN.2002.1028904
   RAMASAMY HV, 2005, THESIS U ILLIONOIS U
   RAMASAMY HV, 2002, THESIS U ILLINOIS UR
   Reiter M. K., 1996, Journal of Computer Security, V4, P267
   Reiter M.K., 1994, P 2 ACM C COMPUTER C, P68
   Reiter MK, 1995, LECT NOTES COMPUT SC, V938, P99
   Reiter MK, 1996, IEEE T SOFTWARE ENG, V22, P31, DOI 10.1109/32.481515
   Rodeh Ohad., 2001, ACM T INFORM SYSTEM, V4, P289
   Sames D, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P239, DOI 10.1109/DSN.2002.1028905
   SCHLICHTING RD, 1983, ACM T COMPUT SYST, V1, P222, DOI 10.1145/357369.357371
   SCHNEIDER FB, 1990, COMPUT SURV, V22, P299, DOI 10.1145/98163.98167
   Sherman AT, 2003, IEEE T SOFTWARE ENG, V29, P444, DOI 10.1109/TSE.2003.1199073
   Stevens F, 2004, SYM REL DIST SYST, P184, DOI 10.1109/RELDIS.2004.1353019
   VERISSIMO P, 2000, P IEEE 3 INF SURV WO
   Wallner D.M., 1999, KEY MANAGEMENT MULTI
   Wong CK, 2000, IEEE ACM T NETWORK, V8, P16, DOI 10.1109/90.836475
NR 51
TC 2
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2008
VL 38
IS 6
BP 639
EP 666
DI 10.1002/spe.848
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 298ZR
UT WOS:000255726100004
DA 2024-07-18
ER

PT J
AU Drechsler, RL
   Mocenigo, JM
AF Drechsler, R. L.
   Mocenigo, J. M.
TI The Yoix® scripting language:: a different way of writing Java™
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE application development; client/server; Java; scripting languages
AB Our work led us to write a full-featured, reliable and extensible scripting language implemented in Java and providing access to many Java capabilities. The result provides a mechanism for fast and efficient development, deployment and maintenance of client/server applications. The Yoix interpreter does not rely on Java reflection classes to access Java capabilities, but rather uses programmatic methods. This approach allowed us to deliver the complex aspects of Java functionality more simply and succinctly at the Yoix level as well as achieve consistent behavior and portability across platforms. We also included many practical functions and capabilities for application development. Indistinguishable from Java applications to end-users, a Yoix application's interpreted nature allows scripts to be downloaded from a Web server and executed as needed by the application. This framework has been used successfully for mission critical applications within AT&T. The interpreter, its source, documentation, a completely functional application template and a large set of examples are freely available for download under open source licensing from the AT&T Labs-Research Web site at http://www.research.att.com/sw/tools/yoix/ or its alias http://www.yoix.org/. Yoix is a registered trademark of AT&T, Inc. Java is a trademark of Sun Microsystems, Inc. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 AT&T Labs Res, Shannon Lab, Florham Pk, NJ 07932 USA.
C3 AT&T
RP Mocenigo, JM (corresponding author), AT&T Labs Res, Shannon Lab, Bldg 103,Room D-225, Florham Pk, NJ 07932 USA.
EM john@research.att.com
CR [Anonymous], 2000, Programming Perl
   DRECHSLER RL, 2002, LECT NOTES COMPUTER, V2367, P99
   Gosling J., 2005, Java Language Specification, Vthird
   Kernighan B.W., 1988, The C Programming Language
   Pedroni S, 2002, JYTHON ESSENTIALS
   Van Rossum G., 2003, An introduction to Python
   2006, INTRO JYTHON 2, P68
NR 7
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2007
VL 37
IS 6
BP 643
EP 667
DI 10.1002/spe.784
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 167CC
UT WOS:000246427300002
DA 2024-07-18
ER

PT J
AU Vilas, AF
   Redondo, RPD
   Cabrer, MR
   Arias, JJP
   Solla, AG
   Duque, JG
   Nores, ML
   Fernandez, YB
AF Fernandez Vilas, Ana
   Diaz Redondo, Rebeca P.
   Ramos Cabrer, Manuel
   Pazos Arias, Jose J.
   Gil Solla, Alberto
   Garcia Duque, Jorge
   Lopez Nores, Martin
   Blanco Fernandez, Yolanda
TI MHP-OSGi convergence: a new model for open residential gateways
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE MHP; OSGi; residential gateway; IDTV; met; bundle
AB Nowadays, we are living in a time of important technological changes that affect our lives at home and our communication with the outside world. Among them, the developments in Interactive Digital TV (IDTV) and the smart home field can be considered as particularly important. Related to the former, the new Set-Top Boxes (STBs) are not only a decoder for digital television broadcast but also an entry point to the Information Society and a suitable platform to support the execution of interactive applications. With regards to the latter, the Residential Gateways (RGs) combine different network technologies to allow the connection of different electronics devices and appliances at home, not only with each other but also with the Internet. Since there is no widespread consensus about the configurations and functions of the RGs, we propose to coordinate the two aforementioned worlds by extending the functionality of STBs to become a RG. Our proposal consists of merging the Multimedia Home Platform (MHP), one of the main standard frameworks for IDTV, with Open Service Gateway Initiative (OSGi), the most widely used open platform to set up RGs. To overcome the radically different nature of these specifications-the function-oriented MRP middleware and the service-oriented OSGi framework-we define a new kind of application, coined as XbundLET. This application is able to bridge the gap between the two frameworks and make their interaction feasible. We also show how this proposal has the potential to enable the production of scenarios that cannot currently be put into practice in a natural way. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Vigo, Dept Enxeneria Telemat, ETSE Telecomunicac, Vigo 36310, Spain.
C3 Universidade de Vigo
RP Redondo, RPD (corresponding author), Univ Vigo, Dept Enxeneria Telemat, ETSE Telecomunicac, Lagaos Marcosende S-N, Vigo 36310, Spain.
EM rebeca.redondo@det.uvigo.es
RI Díaz Redondo, Rebeca P./L-3108-2014; Vilas, Ana Fernández/L-2055-2014;
   Nores, Martín López/F-9378-2016; José, Pazos Arias/F-6788-2016; Arias,
   José/ITR-8005-2023; Nores, Martín López/AAG-8636-2020; Gil,
   Alberto/F-6827-2016; Blanco-Fernandez, Yolanda/F-8111-2016; Ramos
   Cabrer, Manuel/F-5339-2016
OI Díaz Redondo, Rebeca P./0000-0002-2367-2219; Vilas, Ana
   Fernández/0000-0003-1047-2143; José, Pazos Arias/0000-0002-0424-5481;
   Nores, Martín López/0000-0002-4802-607X; Gil,
   Alberto/0000-0002-9641-4149; Blanco-Fernandez,
   Yolanda/0000-0002-1816-1377; Ramos Cabrer, Manuel/0000-0002-1684-2160
CR Bae CS, 2003, IEEE T CONSUM ELECTR, V49, P1129, DOI 10.1109/TCE.2003.1261207
   *CENELEC, 2003, SMART HOUS WORKSH 20
   den Hartog FTH, 2004, IEEE COMMUN MAG, V42, P138, DOI 10.1109/MCOM.2004.1299358
   FERNANDEZ YB, 2004, LECT NOTES COMPUTER, V3306, P415
   FERNANDEZ YB, 2004, P 4 WORKSH PERS FUT
   HOWES T, 1996, STRING REPRESENTATIO
   Kang KC, 2004, 6TH INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION TECHNOLOGY, VOLS 1 AND 2, PROCEEDINGS, P1103
   Kushwaha N, 2004, SECOND IEEE WORKSHOP ON SOFTWARE TECHNOLOGIES FOR FUTURE EMBEDDED AND UBIQUITOUS SYSTEMS, PROCEEDINGS, P157, DOI 10.1109/WSTFES.2004.1300432
   Matsuura K, 2003, WSTFES 2003: IEEE WORKSHOP ON SOFTWARE TECHNOLOGIES FOR FUTURE EMBEDDED SYSTEMS, PROCEEDINGS, P71, DOI 10.1109/WSTFES.2003.1201364
   TKACHENKO D, 2004, P IEEE CONS COMM NET, P624
NR 10
TC 3
Z9 3
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2006
VL 36
IS 13
BP 1421
EP 1442
DI 10.1002/spe.727
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 100ZJ
UT WOS:000241708400002
DA 2024-07-18
ER

PT J
AU Zhang, YT
   Gupta, R
AF Zhang, Youtao
   Gupta, Rajiv
TI Compressing heap data for improved memory performance
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data compression; common prefix pointers; narrow data; data packing; DCX
   instructions; data memory footprint
AB We introduce a class of transformations that modify the representation of dynamic data structures used in programs with the objective of compressing their sizes. Based upon a profiling study of data value characteristics, we have developed the common-preftx and narrow-data transformations that respectively compress a 32 bit address pointer and a 32 bit integer field into 15 bit entities. A pair of fields that have been compressed by the above compression transformations are packed together into a single 32 bit word. The above transformations are designed to apply to data structures that are partially compressible, that is, they compress portions of data structures to which transformations apply and provide a mechanism to handle the data that is not compressible. The accesses to compressed data are efficiently implemented by designing data compression extensions (DCX) to the processor's instruction set. We have observed average reductions in heap allocated storage of 25% and average reductions in execution time and power consumption of 30%. If DCX support is not provided the reductions in execution times fall from 30% to 18%. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
   Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
C3 University of Texas System; University of Texas Dallas; University of
   Arizona
RP Zhang, YT (corresponding author), Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
EM zhangyt@utdallas.edu
OI Gupta, Rajiv/0000-0002-9348-3974
CR [Anonymous], P PLDI
   Brooks D, 2000, PROCEEDING OF THE 27TH INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE, P83, DOI [10.1145/342001.339657, 10.1109/ISCA.2000.854380]
   BURGER D, 1997, CSTR971342 U WISC
   CAO Y, 2002, IPSJ J, V43, P1348
   Chen G, 2003, ACM SIGPLAN NOTICES, V38, P282, DOI 10.1145/949343.949330
   Chilimbi TM, 1999, ACM SIGPLAN NOTICES, V34, P1, DOI 10.1145/301631.301633
   CHILIMBI TRISHULM., 1999, PLDI 99 PROC ACM SIG, P13
   Larsen S., 2000, SIGPLAN Notices, V35, P145, DOI 10.1145/358438.349320
   LOH G, 2002, P IEEE ACM INT S MIC
   Luk CK, 1999, CONF PROC INT SYMP C, P88
   Peleg A, 1996, IEEE MICRO, V16, P42, DOI 10.1109/40.526924
   Truong DN, 1998, 1998 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P322, DOI 10.1109/PACT.1998.727268
   TYLER J, 1999, P IEEE INT PERF COMP
   VIJAYKRISHNAN N, 2001, P USENIX JAV VIRT MA
   Yang J, 2000, INT SYMP MICROARCH, P258, DOI 10.1109/MICRO.2000.898076
   ZHANG Y, 2000, P 9 INT C ARCH SUPP, P150
   [No title captured]
   [No title captured]
   [No title captured]
NR 19
TC 5
Z9 7
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2006
VL 36
IS 10
BP 1081
EP 1111
DI 10.1002/spe.729
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 072OE
UT WOS:000239681900004
DA 2024-07-18
ER

PT J
AU Stone, RG
AF Stone, RG
TI Validation of dynamic Web pages generated by an embedded scripting
   language
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE validation; dynamic Web pages; WML; XHTML; PHP; DTD
AB This paper attempts to provide insight as to how to guarantee a statement such as My PHP script produces WML. To expand a little, the emphasis is to ensure that a script always produces a valid WML page. The context is where pages in a Web site are being created by an embedded scripting language (such as PHP, ASP, Perl) and also that the resulting pages are to conform to a strict tagged mark-up scheme such as WML or XHTML. Although there are validators for static pages, there is nothing available to check that a page containing embedded scripting will (always) generate valid documents. What is required is a validator for dynamic Web pages. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Loughborough, Dept Comp Sci, Loughborough LE11 3TU, Leics, England.
C3 Loughborough University
RP Univ Loughborough, Dept Comp Sci, Loughborough LE11 3TU, Leics, England.
EM r.g.stone@lboro.ac.uk
RI Stone, Roger G/J-7491-2012
CR Chuang TR, 2001, ACM SIGPLAN NOTICES, V36, P98, DOI 10.1145/507669.507649
   HOSOYA H, 2001, P 28 ACM SIGPLAN SIG, P67
   LONG YC, 2000, PADL, P278
   2005, CDUCE
   2005, PHPMYADMIN MYSQL DAT
   2005, W3C HTML VALIDATOR
   2005, JWIG
   2005, YACC LEX UNIX PROGRA
   2005, SWI PROLOG SGML XML
   2005, XHTML DOCUMENT TYPE
   2005, HYPERTEXT PREPROCESS
   2005, WML VALIDATOR
   2005, PRACTICAL EXTRACTION
   2005, WDG HTML VALIDATOR
   2005, PHP SYNTAX
   2005, WIRELESS APPL PROTOC
   2005, WIRELESS MARKUP LANG
   2005, MICROSOFT ACTIVE SER
   2005, SWI PROLOG
   2005, CSE HTML VALIDATOR
   2005, XDUCE
NR 21
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 10
PY 2005
VL 35
IS 13
BP 1259
EP 1274
DI 10.1002/spe.670
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 979FH
UT WOS:000232927300002
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Parson, D
   Murray, DJ
   Chen, Y
AF Parson, D
   Murray, DJ
   Chen, Y
TI Object-oriented design patterns for debugging heterogeneous languages
   and virtual machines
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE debugger; design pattern; embedded system; reflection; synchronization;
   virtual machine
AB Debugging multi-language software systems requires examining and executing these systems at multiple levels of abstraction. Embedded systems, for example, often comprise a mix of assembly language device drivers and C language control code. Embedded systems increasingly utilize Java to support dynamic loading and run-time reconfiguration. The RTEEM (Research version of the Tcl Environment for Extensible Modeling) debugger employs three design patterns in solving the problems of multi-language embedded system debugging. The Reflective virtual machine (VM) pattern models a language-neutral virtual machine abstraction, with language-specific interfaces extending this abstraction. Reflection allows a debugger to inspect and control a target VM. The Chain of Responsibility is a classic pattern used to arrange language-specific debugger command interpreters in a delegation chain. All interpreters share a single command syntax, but each interpreter adapts commands to its language abstraction by interacting with its language-specific VM view. Composite is another classic pattern, used to combine objects into tree structures. RTEEM employs it to aggregate VM debugger chains into a hierarchy that supports uniform command syntax for debugging threads, processes, multiprocessor systems, and compositions of these entities. This paper illustrates how combining two classic design patterns with the VM abstraction as a pattern results in an architecture that is powerful and flexible in adapting to the debugging needs of heterogeneous, distributed embedded systems. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Agere Syst, Allentown, PA 18109 USA.
C3 Broadcom; LSI Corporation
RP Parson, D (corresponding author), Agere Syst, 1110 Amer Pkwy NE, Allentown, PA 18109 USA.
EM dparson@agere.com
CR *AM NAT STAND I, 1998, 14882 ISOIEC AM NAT
   [Anonymous], 1999, Haskell: The Craft of Functional Programming
   Arnold K., 1998, JAVA PROGRAMMING LAN
   BOTHNER P, 1996, GCC BASED JAVA IMPLE
   BUSCHMANN F, 1996, PATTERN LANGUAGES PR, V2, P271
   Clark Randy., 1982, UCSD PASCAL HDB
   *FREE SOFTW FDN, 2001, GDB INT GUID INT GNU
   *FREE SOFTW FDN, 2001, DEB GDB GNU SOURC LE
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gordon R., 1998, Essential JNI
   Parson D., 2002, Automated Software Engineering, V9, P7, DOI 10.1023/A:1013276002164
   Parson D, 1999, PROC ANNU SIMUL SYMP, P58, DOI 10.1109/SIMSYM.1999.766455
   Parson D, 2000, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS I-V, P2409
   Parson D, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P67
   Rumbaugh James, 1999, The unified modeling language reference manual
   SIMOS MA, 1987, P WORKSH SOFTW REUS
   SOBEL JM, 1996, P RELFECTION 96
   *SUN MICR, 2004, FORT TOOLS
   Tanenbaum A.S., 1998, STRUCTURED COMPUTER
   Ullman JD., 1994, ELEMENTS ML PROGRAMM
   *UN INT, 1993, DWARF DEB INF FORM R
   Welch Brent., 1999, Practical Programming in Tcl and Tk, V3rd
NR 22
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2005
VL 35
IS 3
BP 255
EP 279
DI 10.1002/spe.634
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902II
UT WOS:000227347800003
DA 2024-07-18
ER

PT J
AU Watson, BW
AF Watson, BW
TI Reducing memory requirements in reachability-based finite automata
   operations
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE finite automata construction; reachability; memory efficiency; virtual
   memory
AB New applications of finite automata, such as computational linguistics and asynchronous circuit simulation, can require automata of millions or even billions of states. All known construction methods (in particular, the most effective reachability-based ones that save memory, such as the subset construction, and simultaneously minimizing constructions, such as Brzozowski's) have intermediate memory usage much larger than the final automaton, thereby restricting the maximum size of the automata which can be built. In this paper, I present a reachability-based optimization which can be used in most of these construction algorithms to reduce the intermediate memory requirements. The optimization is presented in conjunction with an easily understood (and implemented) canonical automaton construction algorithm. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Pretoria, Dept Comp Sci, ZA-0002 Pretoria, South Africa.
C3 University of Pretoria
RP Watson, BW (corresponding author), Univ Pretoria, Dept Comp Sci, Main Campus,Lynwood Rd, ZA-0002 Pretoria, South Africa.
EM bwatson@cs.up.ac.za
CR Aho A., 1988, Compilers - Principles, Techniques and Tools
   [Anonymous], THESIS EINDHOVEN U T
   Brzozowski J.A., 1962, PhD thesis
   BRZOZOWSKI JA, 1964, J ACM, V11, P481, DOI 10.1145/321239.321249
   Daciuk J, 2000, COMPUT LINGUIST, V26, P3, DOI 10.1162/089120100561601
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   KIRAZ GA, 1999, P 4 WORKSH IMPL AUT
   VANDEVOORDE D, 2003, C TEMPLATES COMPLETE
   Watson BruceW., 1997, International Workshop on Implementing Automata, P232
   WATSON BW, 2001, P 2 INT WORKSH FIN S
NR 10
TC 1
Z9 2
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2004
VL 34
IS 3
BP 239
EP 248
DI 10.1002/spe.561
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 800DQ
UT WOS:000220009500001
DA 2024-07-18
ER

PT J
AU Nevalainen, O
   Raita, T
   Thimbleby, H
AF Nevalainen, O
   Raita, T
   Thimbleby, H
TI Appendix - An improved insert sort algorithms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE insert sort; Java; quicksort; sentinels; warp
AB A simple and efficient insert sort algorithm is presented in Java, and is presented in stable and unstable variants. The usual double test of insert sort can be avoided by using a sentinel, but sentinels create minor problems-such as choosing an appropriate value and requiring extra memory. The insert sort here avoids both problems.
C1 UCL, Interact Ctr, London WC1H 0AP, England.
   Turku Univ, Dept Comp Sci, Turku, Finland.
C3 University of London; University College London; University of Turku
RP Thimbleby, H (corresponding author), UCL, Interact Ctr, 26 Bedford Way, London WC1H 0AP, England.
EM h.thimbleby@ucl.ac.uk
CR [Anonymous], 1998, SORTING SEARCHING
   NEVALAINEN O, 1990, INSERTION SORT STATI
   SEDGEWICK R, 2002, ALGORITHMS JAVA, V3
   THIMBLEBY H, 1989, SOFTWARE PRACT EXPER, V19, P303, DOI 10.1002/spe.4380190308
NR 4
TC 2
Z9 2
U1 0
U2 1
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2003
VL 33
IS 10
BP 999
EP 1001
PG 3
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715CV
UT WOS:000184953700006
DA 2024-07-18
ER

PT J
AU Cao, JN
   Ma, XX
   Chan, ATS
   Lu, J
AF Cao, JN
   Ma, XX
   Chan, ATS
   Lu, J
TI Architecting and implementing distributed Web applications using the
   graph-oriented approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE graph-oriented programming; distributed applications; World Wide Web;
   software architecture; dynamic reconfiguration
ID SOFTWARE ARCHITECTURE; TOOLS
AB This paper presents a graph-oriented framework, called WebGOP, for architecture modeling and programming of Web-based distributed applications. WebGOP is based on the graph-oriented programming (GOP) model, under which the components of a distributed program are configured as a logical graph and implemented using a set of operations defined over the graph. WebGOP reshapes GOP with a reflective object-oriented design, which provides powerful architectural support in the World Wide Web environment. In WebGOP, the architecture graph is reified as an explicit object which itself is distributed over the network, providing a graph-oriented context for the execution of distributed applications. The programmer can specialize the type of graph to represent a particular architecture style tailored for an application. WebGOP also has built-in support for flexible and dynamic architectures, including both planned and unplanned dynamic reconfiguration of distributed applications. We describe the WebGOP framework, a prototypical implementation of the framework on top of SOAP, and a performance evaluation of the prototype. The prototype demonstrated the feasibility of our approach. Results of the performance evaluation showed that the overhead introduced by WebGOP over SOAP is reasonable and acceptable. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Hong Kong Polytech Univ, Dept Comp, Internet Comp & E Commerce Lab, Kowloon, Hong Kong, Peoples R China.
   Nanjing Univ, Dept Comp Sci, State Key Lab Novel Software Technol, Nanjing 210008, Peoples R China.
C3 Hong Kong Polytechnic University; Nanjing University
RP Hong Kong Polytech Univ, Dept Comp, Internet Comp & E Commerce Lab, Kowloon, Hong Kong, Peoples R China.
EM csjcao@comp.polyu.edu.hk
RI Ma, Xiaoxing/K-4290-2012; Ma, Xiaoxing/X-6505-2018
OI Ma, Xiaoxing/0000-0001-7970-1384; Cao, Jiannong/0000-0002-2725-2529
CR BOX D, 1999, SIMPLE OBJECT ACCESS
   Cao J, 2000, I-SPAN 2000: INTERNATIONAL SYMPOSIUM ON PARALLEL ARCHITECTURES ALGORITHMS AND NETWORKS, PROCEEDINGS, P72, DOI 10.1109/ISPAN.2000.900264
   CAO J, 1995, P 2 INT C HIGH PERF, P417
   CAO J, IN PRESS VISUAL PROG
   CAO J, 1996, INTENSIONAL PROGRAMM, V1
   CAO J, 1997, P 1997 INT C PAR DIS, P216
   Carriero N., 1992, COMMUN ACM, V35, P97
   Fraternali P, 1999, ACM COMPUT SURV, V31, P227, DOI 10.1145/331499.331502
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garlan D., 1993, ADV SOFTWARE ENG KNO, V1
   GOUDARZI KM, 1999, THESIS IMPERIAL COLL
   Grimshaw A, 1999, COMPUTER, V32, P29, DOI 10.1109/2.762790
   Kramer J., 1998, IEE Proceedings-Software, V145, P146, DOI 10.1049/ip-sen:19982297
   KRAMER J, 1985, IEEE T SOFTWARE ENG, V11, P424, DOI 10.1109/TSE.1985.232231
   KRAMER J, 1994, P 16 INT C SOFTW ENG
   Le Metayer D, 1998, IEEE T SOFTWARE ENG, V24, P521, DOI 10.1109/32.708567
   LUCKHAM DC, 2000, FDN COMPONENT BASED
   MORICONI M, 1995, IEEE T SOFTWARE ENG, V21, P356, DOI 10.1109/32.385972
   *OBJ MAN GROUP, COMM OBJ REQ BROK AR
   Oreizy P., 1998, IEE Proceedings-Software, V145, P137, DOI 10.1049/ip-sen:19982296
   Ozsu M.T., 1999, PRINCIPLES DISTRIBUT, V2nd
   Papadopoulos G., 1998, SENR9834 CWI
   PERRY D, 1992, P ACM SIGSOFT, P40
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   SPITZNAGEL B, 1998, P 10 INT C SOFTW ENG
   STAFFORD JA, 1998, 3 INT SOFTW ARCH WOR
   STAFFORD JA, 2001, COMPONENT BASED SOFT
   Steen M., 1999, IEEE CONCURRENCY, V7, P70
   Sunderam V. S., 1990, Concurrency: Practice and Experience, V2, P315, DOI 10.1002/cpe.4330020404
   *U TENN, 1994, MPI MESSAGE PASSING
NR 30
TC 4
Z9 6
U1 0
U2 2
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2003
VL 33
IS 9
BP 799
EP 820
DI 10.1002/spe.526
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 706MA
UT WOS:000184456400001
DA 2024-07-18
ER

PT J
AU Würz, HM
   Krämer, M
   Kaster, M
   Kuijper, A
AF Wuerz, Hendrik M.
   Kraemer, Michel
   Kaster, Marvin
   Kuijper, Arjan
TI Migrating monolithic applications to function as a service
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architectural design; cloud computing; design patterns; function as a
   service; migration
AB Function as a service (FaaS) promises low operating costs, reduced complexity, and good application performance. However, it is still an open question how to migrate monolithic applications to FaaS. In this paper, we present a guideline for software designers to split monolithic applications into smaller functions that can be executed in a FaaS environment. This enables independent scaling of individual parts of the application. Our approach consists of three steps: We first identify the main tasks (and their subtasks) of the application to split. Then, we define the program flow to be able to tell which application tasks can be converted to functions and how they interact with each other. In the final step, we specify actual functions and possibly merge those that are too small and which would produce too much communication overhead or maintenance effort. Compared to existing work, our approach applies to applications of any size and results in functions that are small enough-but not too small-for efficient execution in a FaaS environment. We evaluate the usefulness of our approach by applying it to a real-world application for the storage of geospatial data. We describe the experiences made and finish the paper with a discussion, conclusions, and ideas for future work.
C1 [Wuerz, Hendrik M.; Kraemer, Michel; Kaster, Marvin; Kuijper, Arjan] Fraunhofer Inst Comp Graphics Res IGD, Darmstadt, Germany.
   [Wuerz, Hendrik M.; Kraemer, Michel; Kaster, Marvin; Kuijper, Arjan] Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Germany.
   [Wuerz, Hendrik M.] Fraunhofer Inst Comp Graphics Res IGD, Fraunhoferstr 5, D-64283 Darmstadt, Germany.
C3 Technical University of Darmstadt
RP Würz, HM (corresponding author), Fraunhofer Inst Comp Graphics Res IGD, Fraunhoferstr 5, D-64283 Darmstadt, Germany.
EM hendrik.martin.wuerz@igd.fraunhofer.de
OI Kuijper, Arjan/0000-0002-6413-0061; Kramer, Michel/0000-0003-2775-5844;
   Wurz, Hendrik M./0000-0002-4664-953X; Kaster, Marvin
   Rene/0000-0002-6468-2122
FU Open Access funding enabled and organized by Projekt DEAL.
FX Open Access funding enabled and organized by Projekt DEAL.
CR [Anonymous], 2017, STATUS SERVERLESS CO
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Barcelona-Pons D., 2019, MIDDL 19 ASS COMP MA
   Bermbach D., 2020, SAC 20 35 ACM SIGAPP
   Bjorndal N., 2020, Migration from monolith to microservices: Benchmarking a case study, DOI DOI 10.13140/RG.2.2.27715.14883
   Denys PF, 2023, SOFTWARE PRACT EXPER, V53, P1722, DOI 10.1002/spe.3210
   Eissens-van der Laan M, 2016, INT J OPER PROD MAN, V36, P308, DOI 10.1108/IJOPM-06-2015-0370
   Escobar D., 2016, UNDERSTANDING EVOLUT, DOI [10.1109/CLEI.2016.7833410, DOI 10.1109/CLEI.2016.7833410]
   Evans E., 2003, Domain-Driven Design
   Fritzsch J., 2018, International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, P128
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Hamzeh R., 2019, THESIS
   Krämer M, 2020, SOFTWAREX, V11, DOI 10.1016/j.softx.2020.100409
   Kubernetes Authors, 2022, KUBERNETES
   Landesbetrieb Information und Technik Nordrhein-Westfalen, 2020, KOLN EPSG25832 CITYG
   Leitner P, 2019, J SYST SOFTWARE, V149, P340, DOI 10.1016/j.jss.2018.12.013
   Lloyd W., 2018, 2018 IEEE ACM INT C
   Newman S., 2015, BUILDING MICROSERVIC
   OpenFaaS Ltd, 2022, HOM OPENFAAS SERV FU
   Richter D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P608, DOI 10.5220/0006791006080615
   Soltani B., 2018, CEUR WORKSHOP P
   Spillner J., 2017, ABS170508169 CORR
   Spillner J., 2017, ABS170205510 CORR
   van Eyk E., 2019, 4 TECHNIQUES SERVERL
   Wu JT, 2023, SOFTWARE PRACT EXPER, DOI 10.1002/spe.3217
NR 25
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2024
VL 54
IS 2
BP 149
EP 167
DI 10.1002/spe.3263
EA SEP 2023
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL7E2
UT WOS:001057341000001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Srirama, SN
AF Srirama, Satish Narayana
TI A decade of research in fog computing: Relevance, challenges, and future
   directions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fog challenges; fog computing; fog economics; fog offloading; fog
   state-of-the-art; Internet of Things
ID SOFTWARE-DEFINED NETWORKING; SERVICE PLACEMENT; ACTOR MODEL; EDGE;
   INTERNET; IOT; THINGS; INFRASTRUCTURE; ARCHITECTURE; FRAMEWORK
AB Recent developments in the Internet of Things (IoT) and real-time applications, have led to the unprecedented growth in the connected devices and their generated data. Traditionally, this sensor data is transferred and processed at the cloud, and the control signals are sent back to the relevant actuators, as part of the IoT applications. This cloud-centric IoT model, resulted in increased latencies and network load, and compromised privacy. To address these problems, Fog Computing was coined by Cisco in 2012, a decade ago, which utilizes proximal computational resources for processing the sensor data. Ever since its proposal, fog computing has attracted significant attention and the research fraternity focused at addressing different challenges such as fog frameworks, simulators, resource management, placement strategies, quality of service aspects, fog economics and so forth. However, after a decade of research, we still do not see large-scale deployments of public/private fog networks, which can be utilized in realizing interesting IoT applications. In the literature, we only see pilot case studies and small-scale testbeds, and utilization of simulators for demonstrating scale of the specified models addressing the respective technical challenges. There are several reasons for this, and most importantly, fog computing did not present a clear business case for the companies and participating individuals yet. This article summarizes the technical, non-functional, and economic challenges, which have been posing hurdles in adopting fog computing, by consolidating them across different clusters. The article also summarizes the relevant academic and industrial contributions in addressing these challenges and provides future research directions in realizing real-time fog computing applications, also considering the emerging trends such as federated learning and quantum computing.
C1 [Srirama, Satish Narayana] Univ Hyderabad, Sch Comp & Informat Sci, Hyderabad 500046, India.
C3 University of Hyderabad
RP Srirama, SN (corresponding author), Univ Hyderabad, Sch Comp & Informat Sci, Hyderabad 500046, India.
EM satish.srirama@uohyd.ac.in
RI Srirama, Satish Narayana/H-2729-2015
OI Srirama, Satish Narayana/0000-0002-7600-7124
FU SERB, India [CRG/2021/003888]; MHRD, India [F11/9/2019-U3(A)]
FX MHRD, India, Grant/Award Number:F11/9/2019-U3(A); SERB,
   India,Grant/Award Number: CRG/2021/003888
CR Aazam M, 2018, IEEE T IND INFORM, V14, P4674, DOI 10.1109/TII.2018.2855198
   Abdulkareem KH, 2019, IEEE ACCESS, V7, P153123, DOI 10.1109/ACCESS.2019.2947542
   Adhikari M, 2022, SOFTWARE PRACT EXPER, V52, P1004, DOI 10.1002/spe.3025
   Adhikari M, 2020, IEEE INTERNET THINGS, V7, P5773, DOI 10.1109/JIOT.2019.2946426
   Adhikari M, 2020, IEEE INTERNET THINGS, V7, P4317, DOI 10.1109/JIOT.2019.2958400
   Alotaibi A., 2017, Journal of Information Security, V8, P203
   Alzoubi YI, 2022, COMPUT COMMUN, V182, P129, DOI 10.1016/j.comcom.2021.11.005
   [Anonymous], 2018, 1547 IEEE, P1
   [Anonymous], 2016, 2016 8 INT C COMMUNI
   [Anonymous], 2919222019 ISOIEC
   Apache Software Foundation, AP EDG
   Assunçao MD, 2015, J PARALLEL DISTR COM, V79-80, P3, DOI 10.1016/j.jpdc.2014.08.003
   Badidi E, 2020, FUTURE INTERNET, V12, DOI 10.3390/fi12110190
   Bahreini T, 2022, IEEE T PARALL DISTR, V33, P667, DOI 10.1109/TPDS.2021.3099731
   Baktir AC, 2017, IEEE COMMUN SURV TUT, V19, P2359, DOI 10.1109/COMST.2017.2717482
   Banabilah S, 2022, INFORM PROCESS MANAG, V59, DOI 10.1016/j.ipm.2022.103061
   Basir R, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19214807
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Brogi A, 2020, SOFTWARE PRACT EXPER, V50, P719, DOI 10.1002/spe.2766
   Bukhari A, 2022, FUTURE GENER COMP SY, V135, P114, DOI 10.1016/j.future.2022.04.034
   Buyya R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241737
   Chang CH, 2019, IEEE INT C ELECTR TA, DOI 10.1109/icce-tw46550.2019.8991981
   Chang C, 2017, COMPUTER, V50, P92, DOI 10.1109/MC.2017.3571049
   Chen N., 2017, ADV MOBILE CLOUD COM, P203
   Cirani S, 2015, IEEE INT CONF SENS, P43
   CISCO, CISC IOX
   Crosswell LC, 2012, TRENDS BIOTECHNOL, V30, P241, DOI 10.1016/j.tibtech.2012.02.002
   Dehury CK, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111164
   Desikan KES., 2022, IEEE INTERNET THINGS, V10, P2404
   Donta PK, 2022, DIGIT COMMUN NETW, V8, P727, DOI 10.1016/j.dcan.2021.10.004
   Drolia U, 2017, SEC 2017: 2017 THE SECOND ACM/IEEE SYMPOSIUM ON EDGE COMPUTING (SEC'17), DOI 10.1145/3132211.3134456
   Dumas M., 2013, Fundamentals of Business Process Management, DOI DOI 10.1007/978-3-662-56509-4
   EU-IoT, NEXT GENERATION INTE
   Fang J, 2021, J SENSORS, V2021, DOI 10.1155/2021/4758677
   Farhadi V, 2021, IEEE ACM T NETWORK, V29, P779, DOI 10.1109/TNET.2020.3048613
   Flores H, 2015, IEEE COMMUN MAG, V53, P80, DOI 10.1109/MCOM.2015.7060486
   Fortune Business Insights, CLOUD COMP MARK EXH
   Ghobaei-Arani M, 2020, J GRID COMPUT, V18, P1, DOI 10.1007/s10723-019-09491-1
   Ghosh S, 2020, IEEE T NETW SCI ENG, V7, P2271, DOI 10.1109/TNSE.2019.2941754
   Gill M, 2021, COMPUT SCI REV, V40, DOI 10.1016/j.cosrev.2021.100391
   Gill SS, 2022, SOFTWARE PRACT EXPER, V52, P66, DOI 10.1002/spe.3039
   Golec M, 2022, IEEE T IND INFORM, V18, P3522, DOI 10.1109/TII.2021.3095466
   Goudarzi M, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3544836
   Goudarzi M, 2023, IEEE T MOBILE COMPUT, V22, P2491, DOI 10.1109/TMC.2021.3123165
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guerrero C, 2019, FUTURE GENER COMP SY, V97, P131, DOI 10.1016/j.future.2019.02.056
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Gyongyosi L, 2019, COMPUT SCI REV, V31, P51, DOI 10.1016/j.cosrev.2018.11.002
   Ha K, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P68, DOI 10.1145/2594368.2594383
   Hakiri A, 2017, I C COMP SYST APPLIC, P1149, DOI 10.1109/AICCSA.2017.9
   Hazra A, 2021, IEEE INTERNET THINGS, V8, P5185, DOI 10.1109/JIOT.2020.3041102
   Hewitt C., 1973, PROC 3 INT JOINT C A, P235, DOI 10.1145/359545.359563
   Hong CH, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3326066
   Hong K, 2013, P 2 ACM SIGCOMM WORK, P15, DOI DOI 10.1145/2491266.2491270
   Hou XW, 2020, IEEE ACCESS, V8, P7117, DOI 10.1109/ACCESS.2020.2964073
   Hu PF, 2017, IEEE INTERNET THINGS, V4, P1143, DOI 10.1109/JIOT.2017.2659783
   Huang L, 2016, IEEE SENSOR
   Issa W, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3560816
   Jayanetti A, 2022, FUTURE GENER COMP SY, V137, P14, DOI 10.1016/j.future.2022.06.012
   Jianbing Ni, 2018, IEEE Communications Surveys & Tutorials, V20, P601, DOI 10.1109/COMST.2017.2762345
   Kattepur A, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON EDGE COMPUTING (IEEE EDGE), P9, DOI 10.1109/IEEE.EDGE.2017.11
   Kaur K, 2017, IEEE WIREL COMMUN, V24, P48, DOI 10.1109/MWC.2017.1600427
   Keshari N, 2022, VEH COMMUN, V38, DOI 10.1016/j.vehcom.2022.100512
   Kim D, 2020, IEEE T MOBILE COMPUT, V19, P2609, DOI 10.1109/TMC.2019.2925797
   Kraemer FA, 2017, IEEE ACCESS, V5, P9206, DOI 10.1109/ACCESS.2017.2704100
   Kreutz D, 2015, P IEEE, V103, P14, DOI 10.1109/JPROC.2014.2371999
   Laroui M, 2021, COMPUT COMMUN, V180, P210, DOI 10.1016/j.comcom.2021.09.003
   Lin XD, 2013, IEEE T VEH TECHNOL, V62, P3339, DOI 10.1109/TVT.2013.2257188
   Lu R, 2017, IEEE ACCESS, V5, P3302, DOI 10.1109/ACCESS.2017.2677520
   Luo SQ, 2020, IEEE T WIREL COMMUN, V19, P2643, DOI 10.1109/TWC.2020.2967371
   Ma Z, 2022, IEEE T PARALL DISTR, V33, P1185, DOI 10.1109/TPDS.2021.3105325
   Mahdavinejad MS, 2018, DIGIT COMMUN NETW, V4, P161, DOI 10.1016/j.dcan.2017.10.002
   Mahmud R, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111351
   Mahmud R, 2020, J PARALLEL DISTR COM, V135, P177, DOI 10.1016/j.jpdc.2019.10.001
   Mahmud R, 2019, J PARALLEL DISTR COM, V132, P190, DOI 10.1016/j.jpdc.2018.03.004
   Market Research Future, FOG COMP MARK SIZ PR
   Mass J, 2020, J SYST SOFTWARE, V166, DOI 10.1016/j.jss.2020.110587
   Materwala H, 2022, FUTURE GENER COMP SY, V135, P205, DOI 10.1016/j.future.2022.04.009
   Midoglu C, 2021, COMPUT NETW, V184, DOI 10.1016/j.comnet.2020.107629
   Mijumbi R, 2016, IEEE COMMUN SURV TUT, V18, P236, DOI 10.1109/COMST.2015.2477041
   Morabito R, 2017, IEEE INTERNET THINGS, V4, P1019, DOI 10.1109/JIOT.2017.2714638
   Mukherjee M, 2018, IEEE COMMUN SURV TUT, V20, P1826, DOI 10.1109/COMST.2018.2814571
   Nazih O., 2020, P INT C INN INT INF, P1, DOI DOI 10.1109/3ICT51146.2020.9312007
   Pandya S, 2023, SUSTAIN ENERGY TECHN, V55, DOI 10.1016/j.seta.2022.102987
   Peng G, 2021, IEEE INTERNET THINGS, V8, P13723, DOI 10.1109/JIOT.2021.3067732
   Peng MG, 2016, IEEE NETWORK, V30, P46, DOI 10.1109/MNET.2016.7513863
   Pereira J, 2019, FUTURE GENER COMP SY, V94, P317, DOI 10.1016/j.future.2018.11.043
   Perera C, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057266
   Plebani P, 2018, LECT NOTES COMPUT SC, V10816, P203, DOI 10.1007/978-3-319-91563-0_13
   Poojara SR, 2022, FUTURE GENER COMP SY, V130, P91, DOI 10.1016/j.future.2021.12.012
   Pu LJ, 2016, IEEE J SEL AREA COMM, V34, P3887, DOI 10.1109/JSAC.2016.2624118
   Puliafito C, 2020, SIMUL MODEL PRACT TH, V101, DOI 10.1016/j.simpat.2019.102062
   Qayyum T, 2018, IEEE ACCESS, V6, P63570, DOI 10.1109/ACCESS.2018.2877696
   Qiu T, 2018, IEEE COMMUN SURV TUT, V20, P2011, DOI 10.1109/COMST.2018.2803740
   Rahimi M, 2020, J NETW COMPUT APPL, V153, DOI 10.1016/j.jnca.2020.102531
   Rahmani AM, 2018, FUTURE GENER COMP SY, V78, P641, DOI 10.1016/j.future.2017.02.014
   Rejiba Z, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3326540
   Salaht FA, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3391196
   Satyanarayanan M, 2015, IEEE PERVAS COMPUT, V14, P24, DOI 10.1109/MPRV.2015.32
   Satyanarayanan M, 2009, IEEE PERVAS COMPUT, V8, P14, DOI 10.1109/MPRV.2009.82
   Sonmez C, 2018, T EMERG TELECOMMUN T, V29, DOI 10.1002/ett.3493
   Srirama S.N., 2006, ADV INT C TELECOMMUN, P120, DOI DOI 10.1109/AICT-ICIW.2006.215
   Srirama SN, 2023, COMPUT COMMUN, V199, P1, DOI 10.1016/j.comcom.2022.12.007
   Srirama SN, 2022, IEEE INT CONF CLOUD, P342, DOI 10.1109/CLOUD55607.2022.00057
   Srirama SN, 2021, FUTURE GENER COMP SY, V117, P439, DOI 10.1016/j.future.2020.12.011
   Su ZY, 2022, IEEE T BIG DATA, V8, P35, DOI 10.1109/TBDATA.2017.2705418
   Taleb T, 2017, IEEE COMMUN SURV TUT, V19, P1657, DOI 10.1109/COMST.2017.2705720
   Tao O., 2021, IEEE T MOBILE COMPUT, V22, P1313
   Taylor P., DATA VOLUME IOT CONN
   Duc TL, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3341145
   Tomovic S, 2017, WIRELESS PERS COMMUN, V92, P181, DOI 10.1007/s11277-016-3845-0
   Tuli S, 2022, IEEE T MOBILE COMPUT, V21, P940, DOI 10.1109/TMC.2020.3017079
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
   Vilalta R, 2017, IEEE COMMUN MAG, V55, P36, DOI 10.1109/MCOM.2017.1600838
   Waqas M, 2019, IEEE ACCESS, V7, P38867, DOI 10.1109/ACCESS.2018.2883662
   Weinman J, 2017, IEEE CLOUD COMPUT, V4, P16, DOI 10.1109/MCC.2017.13
   Xiao HZ, 2022, IEEE T INTELL TRANSP, V23, P11073, DOI 10.1109/TITS.2021.3099597
   Yang Steven, 2016, 2016 Conference on Precision Electromagnetic Measurements (CPEM), P1, DOI 10.1109/CPEM.2016.7540734
   Yang SS, 2017, IEEE COMMUN MAG, V55, P21, DOI 10.1109/MCOM.2017.1600840
   Yang ZB, 2023, IEEE COMMUN SURV TUT, V25, P1059, DOI 10.1109/COMST.2023.3254481
   Yao JJ, 2019, IEEE INTERNET THINGS, V6, P8262, DOI 10.1109/JIOT.2019.2922585
   Yi LZ, 2023, T EMERG TELECOMMUN T, V34, DOI 10.1002/ett.4632
   Yoshida H., STATUS TECHNIQUES ST
   Yousefpour A, 2019, J SYST ARCHITECT, V98, P289, DOI 10.1016/j.sysarc.2019.02.009
   Zaman SKU, 2021, CLUSTER COMPUT, V24, P2735, DOI 10.1007/s10586-021-03268-6
   Zao JK, 2014, FRONT HUM NEUROSCI, V8, DOI 10.3389/fnhum.2014.00370
   Zeng M., 2018, IEEE INT C COMM ICC, P1
   Zhang HJ, 2017, IEEE WIREL COMMUN, V24, P120, DOI 10.1109/MWC.2017.1700007
   Zhang WJ, 2017, PEER PEER NETW APPL, V10, P579, DOI 10.1007/s12083-016-0476-x
   Zhang WY, 2017, IEEE COMMUN MAG, V55, P60, DOI 10.1109/MCOM.2017.1700208
   Zhang Y, 2016, IEEE T VEH TECHNOL, V65, P3685, DOI 10.1109/TVT.2015.2445833
   Zou Z, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE CIRCUITS AND SYSTEMS (AICAS 2019), P51, DOI 10.1109/AICAS.2019.8771621
NR 132
TC 13
Z9 13
U1 2
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2024
VL 54
IS 1
BP 3
EP 23
DI 10.1002/spe.3243
EA JUL 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF0T2
UT WOS:001031893100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fazul, RWA
   Barcelos, PP
AF Aita Fazul, Rhauani Weber
   Barcelos, Patricia Pitthan
TI PRBP: A prioritized replica balancing policy for HDFS balancer
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE balancing policy; data availability; data replication; distributed file
   systems; fault tolerance; reliability
AB Data replication is the main fault tolerance mechanism implemented by the Apache Hadoop Distributed File System (HDFS). The placement of the data across the cluster directly affects replica balancing and data locality. The HDFS Balancer is the native solution to rebalance the data distribution by moving the blocks from over-utilized to under-utilized nodes. Nevertheless, its current balancing policy does not address the characteristics and specific needs of the applications during data rearrangement. In this work, we present the PRBP, a customized replica balancing policy for the HDFS Balancer. The PRBP is based on a system of priorities, which can be adapted and configured according to different demands of use, either these are related to heterogeneous environments or focused on improving data reliability and availability. The priorities define whether system metrics or aspects of the cluster topology should be considered during the execution of the HDFS Balancer, thus making the process of replica balancing in HDFS more flexible. Based on the priority system, we determine association rules that allow the use of multiple priorities simultaneously. Along with these rules, we present guidelines for using the PRBP as a specialized solution in scenarios that can benefit from reactive replica balancing. In addition, we conducted a practical experimentation to highlight the behavior and the applicability of the guidelines of the PRBP to prioritize replica rearrangement in the file system.
C1 [Aita Fazul, Rhauani Weber; Barcelos, Patricia Pitthan] Fed Univ Santa Maria UFSM, Dept Languages & Comp Syst, Santa Maria, RS, Brazil.
C3 Universidade Federal de Santa Maria (UFSM)
RP Fazul, RWA (corresponding author), Fed Univ Santa Maria UFSM, Santa Maria, RS, Brazil.
EM rwfazul@inf.ufsm.br
OI Fazul, Rhauani/0000-0003-0705-9833; Pitthan Barcelos,
   Patricia/0000-0002-7164-5709
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
CR Achari Shiva., 2015, Hadoop Essentials
   Fazul RWA, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P235, DOI 10.1145/3412841.3442075
   Fazul RWA, 2022, 37TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P255, DOI 10.1145/3477314.3507311
   Apache Software Foundation, 2022, HDFS ARCH
   Apache Software Foundation, 2022, ZOOKEEPER DISTRIBUTE
   Bui DM, 2016, IEEE T KNOWL DATA EN, V28, P1369, DOI 10.1109/TKDE.2016.2523510
   Carbone P., 2015, IEEE DATA ENG B, V36, P28, DOI DOI 10.1109/IC2EW.2016.56
   Chambers B., 2018, Spark: the definitive guide
   Cloudera I., 2021, MANAGING DATA STORAG
   Dai W, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SMART CLOUD (SMARTCLOUD), P140, DOI 10.1109/SmartCloud.2016.44
   Dai W, 2016, 2016 IEEE 2ND INTERNATIONAL CONFERENCE ON BIG DATA SECURITY ON CLOUD (BIGDATASECURITY), IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE AND SMART COMPUTING (HPSC), AND IEEE INTERNATIONAL CONFERENCE ON INTELLIGENT DATA AND SECURITY (IDS), P262, DOI 10.1109/BigDataSecurity-HPSC-IDS.2016.30
   Dharanipragada J, 2017, IEEE INT CONF BIG DA, P2853, DOI 10.1109/BigData.2017.8258253
   Fazul R., 2020, ANAIS ESTENDIDOS X S, P103
   Fazul R., 2019, ANAIS 20 SIMP SIO SI, P264
   Fazul Rhauani, 2019, AN 9 S BRAS ENG SIST, P31
   Fazul RWA., 2020, ANAIS 38 SIMP SIO BR, P1
   Fazul RWA., 2019, 9 LATIN AM S DEPENDA, P1
   Garg N, 2013, Apache kafka
   Gopal Krishna Patro S., 2015, IARJSET, V2, P20, DOI [10.17148/IARJSET.2015.2305, DOI 10.17148/IARJSET.2015.2305]
   Ibrahim IA, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SMART CLOUD (SMARTCLOUD), P134, DOI 10.1109/SmartCloud.2016.23
   Iqbal Muhammad H., 2015, International Journal of Computer Trends and Technology, V19, P9, DOI [DOI 10.14445/22312803/IJCTT-V19P103, 10.14445/22312803/IJCTT-V19P103]
   Kun Liu, 2013, Journal of Networks, V8, P2816, DOI 10.4304/jnw.8.12.2816-2822
   Lamehamedi H, 2002, FIFTH INTERNATIONAL CONFERENCE ON ALGORITHMS AND ARCHITECTURES FOR PARALLEL PROCESSING, PROCEEDINGS, P378, DOI 10.1109/ICAPP.2002.1173605
   Li RH, 2017, IEEE T PARALL DISTR, V28, P2500, DOI 10.1109/TPDS.2017.2678505
   Lin CY, 2015, INT C NETWB INFO, P173, DOI 10.1109/NBiS.2015.30
   Liu ZP, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21238132
   Patole A, 2015, PROCEEDINGS OF THE 2015 IEEE RECENT ADVANCES IN INTELLIGENT COMPUTATIONAL SYSTEMS (RAICS), P376, DOI 10.1109/RAICS.2015.7488445
   Sagiroglu S, 2013, PROCEEDINGS OF THE 2013 INTERNATIONAL CONFERENCE ON COLLABORATION TECHNOLOGIES AND SYSTEMS (CTS), P42
   Shah A, 2018, 2018 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P230, DOI 10.1109/ICACCI.2018.8554404
   Shvachko K, 2010, IEEE S MASS STOR SYS
   Turkington G., 2013, Hadoop Beginner's Guide
   VishnuVardhan CB, 2016, 2016 FOURTH INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED AND GRID COMPUTING (PDGC), P225, DOI 10.1109/PDGC.2016.7913150
   Vora MN, 2012, 2011 INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND NETWORK TECHNOLOGY (ICCSNT), VOLS 1-4, P601
   Wei Dai, 2017, 2017 IEEE 4th International Conference on Cyber-Security and Cloud Computing (CSCloud), P270, DOI 10.1109/CSCloud.2017.65
   White T, 2015, Hadoop: the definitive guide: storage and analysis at internet scale, V4th
   Zhang Q, 2015, INT CON DISTR COMP S, P442, DOI 10.1109/ICDCS.2015.52
NR 36
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 600
EP 630
DI 10.1002/spe.3162
EA NOV 2022
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000884127400001
DA 2024-07-18
ER

PT J
AU Antonino, PO
   Capilla, R
   Kazman, R
   Kuhn, T
   Schnicke, F
   Treichel, T
   Bachorek, A
   Müller-Zhang, Z
   Salamanca, V
AF Antonino, Pablo Oliveira
   Capilla, Rafael
   Kazman, Rick
   Kuhn, Thomas
   Schnicke, Frank
   Treichel, Tagline
   Bachorek, Adam
   Mueller-Zhang, Zai
   Salamanca, Victor
TI Continuous engineering for Industry 4.0 architectures and systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architecture evaluation; continuous monitoring; continuous software
   development; digital twins; Industry 4; 0; quality attributes;
   simulation; Software architecture
AB Traditionally, the quality of a software or system architecture has been evaluated in the early stages of the development process using architecture quality evaluation methods. Emergent approaches like Industry 4.0 require continuous monitoring of both run-time and development-time quality properties, in contrast to traditional systems where quality is evaluated at specific milestones using techniques such as project reviews. Considering the dynamics and minimum down-time imposed by the industrial production domain, it must also be ensured that Industry 4.0 system evaluations are continuously performed with high confidence and with as much automation as possible, using simulations, for instance. In this regard, there is a need to develop new methods for continuously monitoring and evaluating the quality properties of software-based systems for Industry 4.0, which must be supported by automated quality evaluation techniques. In this research we analyze traditional architecture evaluation methods and Industry 4.0 scenarios, and propose an approach based on Digital Twins and simulations to continuously evaluate runtime quality aspects of the architecture and systems of industrial production plants. The evaluation is based on the instantiation of our approach for a concrete demand of an automation plant in the automotive domain.
C1 [Antonino, Pablo Oliveira; Kuhn, Thomas; Schnicke, Frank; Treichel, Tagline; Bachorek, Adam; Mueller-Zhang, Zai] Fraunhofer IESE, Virtual Engn Dept, Kaiserslautern, Germany.
   [Capilla, Rafael; Salamanca, Victor] Rey Juan Carlos Univ, Dept Informat, Madrid, Spain.
   [Kazman, Rick] Univ Hawaii, Dept Informat Technol Management, Honolulu, HI 96822 USA.
C3 Universidad Rey Juan Carlos; University of Hawaii System
RP Antonino, PO (corresponding author), Fraunhofer IESE, Kaiserslautern, Germany.; Capilla, R (corresponding author), Rey Juan Carlos Univ, Madrid, Spain.
EM pablo.antonino@iesc.fraunhofer.de; rafael.capilla@urjc.es
RI Antonino, Pablo Oliveira/C-9099-2017; Bachorek, Adam/HNJ-5917-2023
OI Kuhn, Thomas/0000-0001-9677-9992; Capilla, Rafael/0000-0002-6943-1285
FU Bundesministerium fur Bildung und Forschung [01IS19022A]
FX Bundesministerium fur Bildung und Forschung, Grant/Award Number:
   01IS19022A
CR Alcácer V, 2019, ENG SCI TECHNOL, V22, P899, DOI 10.1016/j.jestch.2019.01.006
   Antonino PO, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P261, DOI 10.1145/3344948.3344971
   Antonino PO, 2018, LECT NOTES COMPUT SC, V11048, P115, DOI 10.1007/978-3-030-00761-4_8
   Babar MA, 2008, MARK: 2008 FIRST INTERNATIONAL WORKSHOP ON MANAGING REQUIREMENTS KNOWLEDGE, P53, DOI 10.1109/MARK.2008.3
   Bass L., 2015, DevOps:_A_software_architect's_perspective
   Bass Len, 2012, SEI S SOFTW
   Bauer T, 2019, 2019 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 13TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS (SESOS-WDES 2019), P66, DOI 10.1109/SESoS/WDES.2019.00018
   Baumann P., 2019, P 2019 SUMMER SIMULA, V5, P1
   BEHRTECH, DIG TWINS IND 4 0 AP
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Bosch J., 2014, CONTINUOUS SOFTWARE
   Cedillo P, 2021, IEEE ACCESS, V9, P55898, DOI 10.1109/ACCESS.2021.3071417
   Chen HM, 2016, IEEE SOFTWARE, V33, P36, DOI 10.1109/MS.2016.36
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Esper Khalil, 2020, 2020 IEEE International Conference on Industry 4.0, Artificial Intelligence, and Communications Technology (IAICT). Proceedings, P8, DOI 10.1109/IAICT50021.2020.9172010
   Federal Ministry for Economic Affairs and Energy, 2011, FED MIN ED RES GERM
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fuller A, 2020, IEEE ACCESS, V8, P108952, DOI 10.1109/ACCESS.2020.2998358
   ISO/IEC, 2014, 250002014 ISOIEC, V2014, P25000
   Kannoth S, 2021, LECT NOTES COMPUT SC, V12857, P277, DOI 10.1007/978-3-030-86044-8_19
   Katsaliaki K, 2021, ANN OPER RES, DOI 10.1007/s10479-020-03912-1
   KAZMAN R, 1994, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.1994.296768
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   Kim S, 2019, IEEE ACCESS, V7, P144663, DOI 10.1109/ACCESS.2019.2945124
   Kirchen I, 2017, IEEE INTL CONF IND I, P819, DOI 10.1109/INDIN.2017.8104878
   Knodel J, 2016, FRAUNHOFER IESE SER, P1, DOI 10.1007/978-3-319-34177-4
   Knodel Jens, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P115, DOI 10.1109/WICSA.2014.37
   Kuhn T., 2020, SOFTWARE ARCHITECTUR, P490, DOI DOI 10.1007/978-3-030-59155-7_34
   Kumar VRS, 2019, KNOWL ENG REV, V34, DOI 10.1017/S0269888919000109
   Lasi H, 2014, BUS INFORM SYST ENG+, V6, P239, DOI 10.1007/s12599-014-0334-4
   Lytra I, 2020, COMPUTING, V102, P551, DOI 10.1007/s00607-019-00758-9
   Mahdavi-Hezavehi S, 2017, INFORM SOFTWARE TECH, V90, P1, DOI 10.1016/j.infsof.2017.03.013
   Morgan J, 2021, J MANUF SYST, V59, P481, DOI 10.1016/j.jmsy.2021.03.001
   Naedele M, 2015, J SYST SOFTWARE, V101, P59, DOI 10.1016/j.jss.2014.11.015
   Pessôa MVP, 2020, RES ENG DES, V31, P175, DOI 10.1007/s00163-020-00330-z
   Piroumian V, 2021, COMPUTER, V54, P61, DOI 10.1109/MC.2020.3032148
   Radziwon A, 2014, PROCEDIA ENGINEER, V69, P1184, DOI 10.1016/j.proeng.2014.03.108
   Ruppert T, 2020, J IND INF INTEGR, V20, DOI 10.1016/j.jii.2020.100174
   Schnicke F, 2020, SOFTWARE ARCHITECTUR, P490
   Schon Donald A., 1991, REFLECTIVE PRACTITIO, DOI [10.4324/9781315237473, DOI 10.4324/9781315237473]
   Sharpe R, 2019, COMPUT IND, V108, P37, DOI 10.1016/j.compind.2019.02.007
   Sobhy D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3492762
   Ustundag A, 2018, SPRINGER SER ADV MAN, P1, DOI 10.1007/978-3-319-57870-5
   Vaccarino F., 2007, ACTION RES REFLECTIO
   Vinodh S, 2021, TQM J, V33, P441, DOI 10.1108/TQM-07-2020-0157
   Wagner C, 2017, IEEE INT C EMERG
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 49
TC 3
Z9 3
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2022
VL 52
IS 10
BP 2241
EP 2262
DI 10.1002/spe.3124
EA JUL 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L3YX
UT WOS:000831086400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Szydlo, T
   Szabala, A
   Kordiumov, N
   Siuzdak, K
   Wolski, L
   Alwasel, K
   Habeeb, F
   Ranjan, R
AF Szydlo, Tomasz
   Szabala, Amadeusz
   Kordiumov, Nazar
   Siuzdak, Konrad
   Wolski, Lukasz
   Alwasel, Khaled
   Habeeb, Fawzy
   Ranjan, Rajiv
TI IoTSim-Osmosis-RES: Towards autonomic renewable energy-aware osmotic
   computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomic computing; Internet of Things; osmotic computing; sustainable
   systems
ID CLOUD; SIMULATION; INFRASTRUCTURE; MANAGEMENT; INTERNET; SYSTEMS;
   TOOLKIT; EDGE
AB Internet of Things systems exists in various areas of our everyday life. For example, sensors installed in smart cities and homes are processed in edge and cloud computing centers providing several benefits that improve our lives. The place of data processing is related to the required system response times-processing data closer to its source results in a shorter system response time. The osmotic computing concept enables flexible deployment of data processing services and their possible movement, just like particles in the osmosis phenomenon move between regions of different densities. At the same time, the impact of complex computer architecture on the environment is increasingly being compensated by the use of renewable and low-carbon energy sources. However, the uncertainty of supplying green energy makes the management of osmotic computing demanding, and therefore their autonomy is desirable. In the article, we present a framework enabling osmotic computing simulation based on renewable energy sources and autonomic osmotic agents, allowing the analysis of distributed management algorithms. We discuss the challenges posed to the framework and analyze various management algorithms for cooperating osmotic agents. In the evaluation we show that changing the adaptation logic of the osmotic agents, it is possible to increase the self-consumption of renewable energy sources or increase the usage of low emission ones.
C1 [Szydlo, Tomasz; Szabala, Amadeusz; Kordiumov, Nazar; Siuzdak, Konrad; Wolski, Lukasz] AGH Univ Sci & Technol, Inst Comp Sci, Al Mickiewicza 30, PL-30059 Krakow, Poland.
   [Alwasel, Khaled] Saudi Elect Univ, Coll Comp & Informat, Riyadh, Saudi Arabia.
   [Habeeb, Fawzy] Univ Jeddah, Coll Comp Sci, Jeddah, Saudi Arabia.
   [Habeeb, Fawzy; Ranjan, Rajiv] Newcastle Univ, Sch Comp, Newcastle Upon Tyne, Tyne & Wear, England.
C3 AGH University of Krakow; Saudi Electronic University; University of
   Jeddah; Newcastle University - UK
RP Szydlo, T (corresponding author), AGH Univ Sci & Technol, Inst Comp Sci, Al Mickiewicza 30, PL-30059 Krakow, Poland.; Alwasel, K (corresponding author), Saudi Elect Univ, Coll Comp & Informat, Riyadh, Saudi Arabia.; Habeeb, F; Ranjan, R (corresponding author), Newcastle Univ, Sch Comp, Newcastle Upon Tyne, Tyne & Wear, England.
EM tszydlo@agh.edu.pl; kalwasel@gmail.com; f.m.m.habeeb2@newcastle.ac.uk;
   raj.ranjan@ncl.ac.uk
RI Ceron, Ivonne/AHD-1086-2022; Szydlo, Tomasz/J-9319-2012
OI Szydlo, Tomasz/0000-0003-4101-2115; Alwasel, Khaled/0000-0002-2530-1163
FU Engineering and Physical Sciences Research Council [EP/T021985/1];
   Narodowe Centrum Nauki [MINIATURA/2021/05/X/ST6/00414]; EPSRC
   [EP/T021985/1] Funding Source: UKRI
FX Engineering and Physical Sciences Research Council, Grant/Award Number:
   EP/T021985/1; Narodowe Centrum Nauki, Grant/Award Number:
   MINIATURA/2021/05/X/ST6/00414
CR Alwasel K, 2021, J SYST ARCHITECT, V116, DOI 10.1016/j.sysarc.2020.101956
   Balis B, 2018, FUTURE GENER COMP SY, V79, P128, DOI 10.1016/j.future.2016.08.007
   Brazier FMT, 2009, IEEE INTERNET COMPUT, V13, P82, DOI 10.1109/MIC.2009.51
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Carnevale L, 2019, INTERNET THINGS-NETH, V5, P130, DOI 10.1016/j.iot.2019.01.001
   Carnevale L, 2018, 2018 32ND INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P419, DOI 10.1109/WAINA.2018.00122
   Chalise S., 2015, DATA CTR ENERGY SYST, P1
   Gheibi O, 2021, ACM T AUTON ADAP SYS, V15, DOI 10.1145/3469440
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Jha DN, 2020, SOFTWARE PRACT EXPER, V50, P844, DOI 10.1002/spe.2787
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kliazovich D, 2012, J SUPERCOMPUT, V62, P1263, DOI 10.1007/s11227-010-0504-1
   Lei L, 2020, IEEE COMMUN SURV TUT, V22, P1722, DOI 10.1109/COMST.2020.2988367
   Lopes MM, 2017, COMPANION PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UTILITY AND CLOUD COMPUTING (UCC'17 COMPANION), P47, DOI 10.1145/3147234.3148101
   Mohan N, 2016, 2016 CLOUDIFICATION OF THE INTERNET OF THINGS (CIOT)
   Nardelli M, 2017, IEEE CLOUD COMPUT, V4, P68, DOI 10.1109/MCC.2017.22
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   Saputri TRD, 2020, IEEE ACCESS, V8, P205948, DOI 10.1109/ACCESS.2020.3036037
   Son JM, 2015, IEEE ACM INT SYMP, P475, DOI 10.1109/CCGrid.2015.87
   Sonmez C, 2018, T EMERG TELECOMMUN T, V29, DOI 10.1002/ett.3493
   Sotiriadis S, 2014, 2014 28TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P444, DOI 10.1109/WAINA.2014.74
   Szydlo T, 2017, 2017 IEEE 26TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES - INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P74, DOI 10.1109/WETICE.2017.17
   Tighe M., 2012, 2012 8th International Conference on Network and Service Management (CNSM 2012), P385
   Villari M, 2019, COMPUTER, V52, P14, DOI 10.1109/MC.2018.2888767
NR 24
TC 2
Z9 2
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2022
VL 52
IS 7
BP 1698
EP 1716
DI 10.1002/spe.3084
EA MAR 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1X8ZE
UT WOS:000772987900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rogers, DM
AF Rogers, David M.
TI Three practical workflow schedulers for easy maximum parallelism
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed asynchronous; runtime scheduling; task graph; workflow
   management systems
ID MANAGEMENT
AB Runtime scheduling and workflow systems are an increasingly popular algorithmic component in HPC because they allow full system utilization with relaxed synchronization requirements. There are so many special-purpose tools for task scheduling, one might wonder why more are needed. Use cases seen on the Summit supercomputer needed better integration with MPI and greater flexibility in job launch configurations. Preparation, execution, and analysis of computational chemistry simulations at the scale of tens of thousands of processors revealed three distinct workflow patterns. A separate job scheduler was implemented for each one using extremely simple and robust designs: file-based, task-list based, and bulk-synchronous. Comparing to existing methods shows unique benefits of this work, including simplicity of design, suitability for HPC centers, short startup time, and well-understood per-task overhead. All three new tools have been shown to scale to full utilization of Summit, and have been made publicly available with tests and documentation. This work presents a complete characterization of the minimum effective task granularity for efficient scheduler usage scenarios. These schedulers have the same bottlenecks, and hence similar task granularities as those reported for existing tools following comparable paradigms.
C1 [Rogers, David M.] Oak Ridge Natl Lab, Natl Ctr Computat Sci, Oak Ridge, TN 37830 USA.
C3 United States Department of Energy (DOE); Oak Ridge National Laboratory
RP Rogers, DM (corresponding author), Oak Ridge Natl Lab, Natl Ctr Computat Sci, Oak Ridge, TN 37830 USA.
EM rogersdm@oml.gov
OI Rogers, David/0000-0002-5187-1768
FU Laboratory Directed Research and Development Program at Oak Ridge
   National Laboratory (ORNL); U.S. Department of Energy (DOE)
   [DE-AC05-00OR22725]; Office of Science of the U.S. Department of Energy
   [DE-AC05-00OR22725]
FX This research was sponsored in part by the Laboratory Directed Research
   and Development Program at Oak Ridge National Laboratory (ORNL), which
   is managed by UT-Battelle, LLC, for the U.S. Department of Energy (DOE)
   under ContractNo. DE-AC05-00OR22725. Thiswork also used resources,
   services, and support provided via the COVID-19 HPC Consortium
   (https://covid19-hpc-consortium.org/), which is a unique private-public
   effort to bring together government, industry, and academic leaders who
   are volunteering free compute time and resources in support of COVID-19
   research, and used resources of the Oak Ridge Leadership Computing
   Facility at the Oak Ridge National Laboratory, which is supported by the
   Office of Science of the U.S. Department of Energy under Contract No.
   DE-AC05-00OR22725.
CR Acharya A, 2020, J CHEM INF MODEL, V60, P5832, DOI 10.1021/acs.jcim.0c01010
   Adorf CS, 2018, COMP MATER SCI, V146, P220, DOI 10.1016/j.commatsci.2018.01.035
   [Anonymous], 2020, AIRFL AUTH
   Ben MD., 2020, P INT C HIGH PERF CO
   Berkowitz E., 2017, ARXIV170206122
   Bernardi S., 2011, EU STARTUPS
   Bridenstine K., 2020, DYNAMIC WORKFLOWS AI
   Crotty Andrew., 2015, CIDR
   da Silva RF, 2017, FUTURE GENER COMP SY, V75, P228, DOI 10.1016/j.future.2017.02.026
   da Silva RF., 2021, ARXIV211002168V2CSDC
   Dalcin LD, 2011, ADV WATER RESOUR, V34, P1124, DOI 10.1016/j.advwatres.2011.04.013
   Deelman E, 2015, FUTURE GENER COMP SY, V46, P17, DOI 10.1016/j.future.2014.10.008
   Doctorow, 2013, WRITERS LOSE PIRACYG
   Frings W., 2013, P INT C SUP, P389
   Gates M., 2020, ICLUT1901
   Google LLC, 2020, PROT BUFF
   Gumbel E. J., 1958, Statistics of Extremes
   Hirabayashi M., TKRZW
   Hoque Reazul., 2017, Proceedings of the 8th Workshop on Latest Advances in Scalable Algorithms for Large-Scale Systems, DOI DOI 10.1145/3148226.3148233
   Jain A, 2015, CONCURR COMP-PRACT E, V27, P5037, DOI 10.1002/cpe.3505
   Kaiser H., 2020, Journal of Open Source Software, V5, P2352, DOI [10.21105/joss.02352, DOI 10.21105/JOSS.02352]
   Kreiss S., PYSPARKLING 2015 LAT
   Merzky Andre, 2019, Job Scheduling Strategies for Parallel Processing. 22nd International Workshop, JSSPP 2018. Revised Selected Papers: Lecture Notes in Computer Science (LNCS 11332), P61, DOI 10.1007/978-3-030-10632-4_4
   Molder Felix, 2021, F1000Res, V10, P33, DOI 10.12688/f1000research.29032.1
   Motamarri P, 2020, COMPUT PHYS COMMUN, V246, DOI 10.1016/j.cpc.2019.07.016
   Slaughter E, 2020, PROCEEDINGS OF SC20: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SC20), DOI 10.1109/SC41405.2020.00066
   Slaughter E, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807629
   Vermaas Josh Vincent, 2021, Comput Sci Eng, V23, P7, DOI 10.1109/MCSE.2020.3036540
   Wanstrath C., 2009, INTRO RESQUE GITHUB
   Zaharia M, 2016, COMMUN ACM, V59, P56, DOI 10.1145/2934664
NR 30
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2023
VL 53
IS 1
SI SI
BP 99
EP 114
DI 10.1002/spe.3047
EA OCT 2021
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7B2CV
UT WOS:000711752800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, ZJ
   Huang, YH
   He, BY
AF Wang, Zhijin
   Huang, Yaohui
   He, Bingyan
TI Dual-grained representation for hand, foot, and mouth disease prediction
   within public health cyber-physical systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dual&#8208; grained representation; HFMD prediction; public health
   cyber&#8208; physical systems; real data validation
ID CLIMATE FACTORS; TIME-SERIES; HFMD; GUANGDONG; MODELS
AB The prediction model is a major component within public health cyber-physical systems, which supports decisions on prevention and control of diseases. Hand, foot, and mouth disease (HFMD) is one of the most common global infectious diseases with the highest incidence rate. Previous HFMD prediction models are mainly based on the time series that counted in equal-grained time intervals. However, there are details in the time series counted in fine-grained time intervals. To benefit from both equal-grained and fine-grained data, we proposed a dual-grained representation (DGR) model. The DGR first represents inputted data to temporal patterns. Then, the represented patterns are consolidated to generate predictions. Experimental comparisons of the short-term prediction performance are figured out by using real outpatient collections in Xiamen, China.
C1 [Wang, Zhijin; He, Bingyan] Jimei Univ, Comp Engn Coll, Yinjiang Rd 185, Xiamen 361021, Peoples R China.
   [Huang, Yaohui] Jimei Univ, Chengyi Univ Coll, Xiamen, Peoples R China.
C3 Jimei University; Jimei University
RP Wang, ZJ (corresponding author), Jimei Univ, Comp Engn Coll, Yinjiang Rd 185, Xiamen 361021, Peoples R China.
EM zhijin@jmu.edu.cn
RI Huang, Yaohui/AAI-5048-2021
OI Zhijin, Wang/0000-0002-7962-2827; Yaohui, Huang/0000-0002-3437-1120
FU Jimei University [ZP2021013]; Natural Science Foundation of Fujian
   Province [2019J01713, 2020J01700]
FX Jimei University, Grant/Award Number: ZP2021013; Natural Science
   Foundation of Fujian Province, Grant/Award Numbers: 2019J01713,
   2020J01700
CR Agrawal R., 2013, ArXiv Prepr. ArXiv, V1302, P1
   [Anonymous], 2008, Wseas Trans. Comput. Res.
   [Anonymous], 2005, PUBLIC HLTH EMERGENC
   [Anonymous], 2008, WHO REPRESENTATIVE O
   [Anonymous], P 8 WORKSH SYNT SEM
   Bai JS, 1998, ECONOMETRICA, V66, P47, DOI 10.2307/2998540
   Balestriero R, 2018, PR MACH LEARN RES, V80
   Bordel Borja, 2019, Information Technology and Systems. Proceedings of ICITS 2019. Advances in Intelligent Systems and Computing (AISC 918), P406, DOI 10.1007/978-3-030-11890-7_40
   Bordel B, 2017, PERVASIVE MOB COMPUT, V40, P156, DOI 10.1016/j.pmcj.2017.06.011
   Chen SX, 2019, SCI TOTAL ENVIRON, V652, P1013, DOI 10.1016/j.scitotenv.2018.10.304
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Cho K., 2014, ARXIV14061078
   Cleveland Robert B, 1990, J. Off. Stat, V6, P3, DOI DOI 10.1016/J.JNCA.2015.06.008
   Defferrard M, 2016, ADV NEUR IN, V29
   Dokumentov Alexander, 2020, ARXIV200905894
   Du ZC, 2019, SCI TOTAL ENVIRON, V656, P1358, DOI 10.1016/j.scitotenv.2018.11.391
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Huang DC, 2018, SCI TOTAL ENVIRON, V612, P1293, DOI 10.1016/j.scitotenv.2017.09.017
   Jain S, 2018, EXPERT SYST APPL, V106, P252, DOI 10.1016/j.eswa.2018.04.008
   Ji TJ, 2019, BIOSAF HEALTH, V1, P32, DOI 10.1016/j.bsheal.2019.02.005
   Ke HJ, 2020, SOFTWARE PRACT EXPER, V50, P596, DOI 10.1002/spe.2668
   Kingma D. P., 2014, arXiv
   Lai GK, 2018, ACM/SIGIR PROCEEDINGS 2018, P95, DOI 10.1145/3209978.3210006
   Lipton Z.C., 2015, COMPUT SCI, V1506, P19, DOI DOI 10.1145/2647868.2654889
   Liu KL, 2016, SCI REP-UK, V6, DOI 10.1038/srep39798
   Mahalakshmi G, 2016, 2016 INTERNATIONAL CONFERENCE ON COMPUTING TECHNOLOGIES AND INTELLIGENT DATA ENGINEERING (ICCTIDE'16)
   Ooi MH, 2009, BMC INFECT DIS, V9, DOI 10.1186/1471-2334-9-3
   Qin Y, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2627
   Sady CCR, 2016, COMPUT BIOL MED, V70, P220, DOI 10.1016/j.compbiomed.2016.01.016
   Safaei M, 2020, SOFTWARE PRACT EXPER, V50, P428, DOI 10.1002/spe.2785
   Schirner G, 2013, COMPUTER, V46, P36, DOI 10.1109/MC.2013.31
   Shih SY, 2019, MACH LEARN, V108, P1421, DOI 10.1007/s10994-019-05815-0
   Song C, 2019, SCI TOTAL ENVIRON, V648, P550, DOI 10.1016/j.scitotenv.2018.08.114
   Sun Bai Jun, 2018, Can J Infect Dis Med Microbiol, V2018, P2751457, DOI 10.1155/2018/2751457
   Sutskever I, 2014, ADV NEUR IN, V27
   Tao Y., 2018, ARXIV180600685
   Wang JY, 2016, BIOSYSTEMS, V140, P1, DOI 10.1016/j.biosystems.2015.12.001
   WANG Y, 2014, IEEE INT C BIOINFORM
   Wang YM, 2015, KNOWL-BASED SYST, V88, P12, DOI 10.1016/j.knosys.2015.08.013
   Wang ZJ, 2020, SCI PROGRAMMING-NETH, V2020, DOI 10.1155/2020/8814222
   Wang ZJ, 2019, LECT NOTES ARTIF INT, V11888, P658, DOI 10.1007/978-3-030-35231-8_48
   Wang ZJ, 2016, KNOWL-BASED SYST, V98, P68, DOI 10.1016/j.knosys.2016.01.018
   Wen QS, 2019, AAAI CONF ARTIF INTE, P5409
   Wilson G.T., 2015, Journal of Time Series Analysis, V37, P712
   Wu YX, 2018, ACM/SIGIR PROCEEDINGS 2018, P1085, DOI 10.1145/3209978.3210077
   Yang SG, 2017, LANCET INFECT DIS, V17, P716, DOI 10.1016/S1473-3099(17)30227-X
   Yang YW, 2018, SCI TOTAL ENVIRON, V630, P820, DOI 10.1016/j.scitotenv.2018.02.262
   Yang ZY, 2020, ATMOS ENVIRON, V225, DOI 10.1016/j.atmosenv.2020.117358
   Yuchi WR, 2019, ENVIRON POLLUT, V245, P746, DOI 10.1016/j.envpol.2018.11.034
   Zhang B, 2020, INT J FORECASTING, V36, P1318, DOI 10.1016/j.ijforecast.2020.01.004
   Zhang Y, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4369
   Zhou JL, 2021, IEEE T IND INFORM, V17, P7820, DOI 10.1109/TII.2020.3011506
   Zhou JL, 2020, IEEE T SERV COMPUT, V13, P745, DOI 10.1109/TSC.2019.2963301
NR 54
TC 8
Z9 8
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2290
EP 2305
DI 10.1002/spe.2940
EA DEC 2020
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000596491100001
DA 2024-07-18
ER

PT J
AU Daghaghzadeh, M
   Babamir, SM
AF Daghaghzadeh, Mohammad
   Babamir, Seyed Morteza
TI A model driven and clustering method for service identification directed
   by metrics
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business process model; cohesion and coupling; entity model; genetic
   algorithm; service-oriented architecture; service identification
ID BUSINESS PROCESS MODELS; ENTITY-RELATIONSHIP
AB Service identification (SI) in the life cycle of service-oriented architecture is a critical phase. Business models consisting of business process (BP) model and business entity (BE) model are the useful models that may be used for SI. To this end, SI is carried out by partitioning activities in BP based on the activities' use of the entities in BE. However, a proper partitioning activities to services, which is called a service design, is a challenge. This article aims to present a semiautomatized clustering method for partitioning the activities to services, which is directed by new proposed metrics cohesion, coupling, and granularity. With regard to the conflict of the metrics, a multiobjective evolutionary algorithm (MOEA) is used to clustering activities where the metrics are considered as objectives should be optimized. The MOEA produces a set of optimal solutions as proper identified services of a service design. Finally, we used three case studies to show the effectiveness of the proposed method and then evaluated the results.
C1 [Daghaghzadeh, Mohammad; Babamir, Seyed Morteza] Univ Kashan, Kashan, Iran.
C3 University Kashan
RP Babamir, SM (corresponding author), Univ Kashan, Kashan, Iran.
EM babamir@kashanu.ac.ir
RI Babamir, Seyed Morteza/F-5497-2011
OI Babamir, Seyed Morteza/0000-0002-1645-4002
FU University of Kashan [25413]
FX University of Kashan, Grant/Award Number: 25413
CR Akoka J, 1996, DATA KNOWL ENG, V20, P87, DOI 10.1016/S0169-023X(96)00007-9
   Al-Otaiby T. N., 2005, P 43 ANN SE REG C, P223
   Albani A, 2008, LECT NOTES COMPUT SC, V5282, P262, DOI 10.1007/978-3-540-87891-9_17
   Amiri MJ, 2016, COMPUT SCI INF SYST, V13, P335, DOI 10.2298/CSIS151105011A
   [Anonymous], 2006, ITI200610 U MAL ETSI
   [Anonymous], 2008, BPMN modeling and reference guide: understanding and using BPMN
   Azevedo LG, 2009, LECT NOTES BUS INF P, V29, P99
   Bani-Ismail B, 2018, COMM COM INF SC, V877, P203, DOI 10.1007/978-3-319-95204-8_18
   Bianchini D, 2014, IEEE T SERV COMPUT, V7, P265, DOI 10.1109/TSC.2013.26
   Blal R, 2018, SERV ORIENTED COMPUT, V12, P227, DOI 10.1007/s11761-018-0246-0
   Daghaghzadeh M., 2011, INT J COMPUT SCI ISS, V8, P83
   De Castro V, 2009, INT J COOP INF SYST, V18, P225, DOI 10.1142/S0218843009002038
   Dwivedi Vishal, 2008, 2008 IEEE Congress on Services Part II (SERVICES-2), P65, DOI 10.1109/SERVICES-2.2008.16
   Erl T., 2016, SERVICE ORIENTED ARC
   Erradi A, 2007, LECT NOTES COMPUT SC, V4749, P606
   Evdemon J., 2007, SERVICE ORIENTED ARC
   Feuerlicht George, 2006, Service-Oriented Computing ICSOC 2006 Workshops. Proceedings 4th International Conference. (Lecture Notes in Computer Science vol. 4652), P95
   Huergo RS, 2014, SERV ORIENTED COMPUT, V8, P199, DOI 10.1007/s11761-014-0161-y
   Jaeschke P, 1993, P 12 INT C ENT REL A, P451
   Jamshidi P, 2008, P IEEE I C SERV COMP, P93, DOI 10.1109/SCC.2008.52
   Jamshidi P, 2012, TRASER201201 AUT SOF
   JAVANMARD M, 2015, CUMHUR SCI J, V36, P1386
   Kazemi A., 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P339, DOI 10.1109/SERVICES.2011.40
   Kazemi A, 2013, INT J SOFTW ENG KNOW, V23, P1303, DOI 10.1142/S0218194013500411
   Khoshnevis S, 2017, FRONT COMPUT SCI-CHI, V11, P444, DOI 10.1007/s11704-016-5121-6
   Klose K., 2007, ECIS, V7, P1802
   Kohlborn T, 2009, IEEE T SERV COMPUT, V2, P50, DOI 10.1109/TSC.2009.6
   Kumaran S, 2008, LECT NOTES COMPUT SC, V5074, P32
   Lucko G, 2010, J CONSTR ENG M, V136, P127, DOI 10.1061/(ASCE)CO.1943-7862.0000025
   Ma Q, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P160, DOI 10.1109/SCC.2009.44
   Medeiros F. M., 2010, 2010 IV Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS), P70, DOI 10.1109/SBCARS.2010.17
   Merabet M, 2014, P 1 INT C ADV ASP SO, P52
   Mirarab NGF, 2014, GLOBAL J COMPUT SCI, V14, P1
   Page-Jones M., 1988, PRACTICAL GUIDE STRU
   Papazoglou M. P., 2006, International Journal of Web Engineering and Technology, V2, P412, DOI 10.1504/IJWET.2006.010423
   Perepletchikov M, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P328
   Perepletchikov M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P329, DOI 10.1109/ASWEC.2007.17
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Ramirez A, 2019, J SYST SOFTWARE, V149, P382, DOI 10.1016/j.jss.2018.12.015
   Rostampour A., 2011, Proceedings of the 2011 13th International Conference on Advanced Communication Technology (ICACT). Smart Service Innovation through Mobile Interactivity, P1462
   Schulz C., 2016, Graph Partitioning and Graph Clustering in Theory and Practice
   Sindhgatta R, 2009, LECT NOTES COMPUT SC, V5900, P485, DOI 10.1007/978-3-642-10383-4_36
   Sommerville I, 2016, SERIES SOFTWARE ENG
   Tavana M, 2007, INFORM SYST, V32, P773, DOI 10.1016/j.is.2006.07.001
   TEOREY TJ, 1989, COMMUN ACM, V32, P975, DOI 10.1145/65971.65976
   Vanderfeesten I., 2007, 19th International Conference on Advanced Information Systems Engineering Forum, P41
   Vinoski S, 2005, IEEE INTERNET COMPUT, V9, P72, DOI 10.1109/MIC.2005.131
   Weller J, 2009, P PACIS 2009 HYD IND, P52
   Zadeh Ali Taei, 2016, Journal of Theoretical and Applied Information Technology, V83, P451
NR 49
TC 1
Z9 1
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 449
EP 484
DI 10.1002/spe.2913
EA OCT 2020
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000579247100001
DA 2024-07-18
ER

PT J
AU Zhao, J
   Zhu, M
   Li, XY
   Huang, ZY
   Li, JC
   Song, JQ
AF Zhao, Juan
   Zhu, Min
   Li, Xiaoyong
   Huang, Zhenyu
   Li, Jincai
   Song, Junqiang
TI Solving Boolean polynomial systems by parallelizing characteristic set
   method for cyber-physical systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Boolean polynomial system; Boolean polynomial system solving problem;
   characteristic set method; cyber-physical systems; parallel algorithm;
   task reallocation
ID SECURITY
AB Many cyber-attach schemes and coding models established by algebra tools are build to address the problem of security of cyber-pysical systems (CPS). As an important field of algebra computing, Boolean Polynomial System Solving (PoSSo) problem plays a very important role in many algebra applications. In this article, we propose an efficientParallel Boolean Characteristic Set method (PBCS) under the high-performance computing environment to improve the efficiency of solving Boolean polynomial systems. The PBCS is implemented based on the state-of-the-artBoolean Characteristic Set method (BCS). It adopts a master-slave parallel pattern, and distributes tasks based on the polynomial sets after initial zero decomposition. We design a strategy of dynamically reallocating tasks to ameliorate load imbalance, which is caused by dynamical zero decomposition of polynomials. Furthermore, we improve its performance by optimizing the parameter settings of PBCS, including the maximum number of polynomial branches that trigger the dynamic allocation policy and the scheduling time. Experimental results with solving several Boolean polynomial systems confirm that PBCS is efficient and scalable, especially for the equations generating from stream ciphers that have block triangular structure. Moreover, the method also has good scalability. It shows a stable speedup as well even extending to the size of thousands of CPU cores.
C1 [Zhao, Juan; Zhu, Min; Li, Xiaoyong; Li, Jincai; Song, Junqiang] Natl Univ Def Technol, Coll Meteorol & Oceanog, Changsha, Peoples R China.
   [Zhao, Juan; Zhu, Min; Li, Xiaoyong; Song, Junqiang] Natl Univ Def Technol, Coll Comp Sci & Technol, Changsha, Peoples R China.
   [Huang, Zhenyu] Chinese Acad Sci, Inst Informat Engn, SKLOIS, Beijing, Peoples R China.
C3 National University of Defense Technology - China; National University
   of Defense Technology - China; Chinese Academy of Sciences; Institute of
   Information Engineering, CAS
RP Zhu, M (corresponding author), Natl Univ Def Technol, Coll Meteorol & Oceanog, Changsha, Peoples R China.
EM zm@nudt.edu.cn
RI 0, 0/KEE-7704-2024; Li, Xiaoyong/E-4274-2019
OI Li, Xiaoyong/0000-0002-0497-5978; Zhao, Juan/0000-0002-8412-2472
FU National Key Research and Development Program of China [2018YFB0203801];
   National Natural Science Foundation of China [61977060, 61702529,
   61802424]
FX National Key Research and Development Program of China, Grant/Award
   Number: 2018YFB0203801; National Natural Science Foundation of China,
   Grant/Award Numbers: 61977060, 61702529, 61802424
CR [Anonymous], 1992, Automated reasoning: Introduction and applications
   [Anonymous], 2010, Perspectives in Logic
   Asadi M, 2019, ARXIV190600039
   Bettale L, 2009, J MATH CRYPTOL, V3, P177, DOI 10.1515/JMC.2009.009
   Bogdanov A, 2007, LECT NOTES COMPUT SC, V4727, P450
   Bouillaguet C, 2010, LECT NOTES COMPUT SC, V6225, P203, DOI 10.1007/978-3-642-15031-9_14
   Boulier F., 1995, Proceedings of the 1995 International Symposium on Symbolic and Algebraic Computation, ISSAC '95, P158, DOI 10.1145/220346.220367
   Brickenstein M, 2009, J SYMB COMPUT, V44, P1326, DOI 10.1016/j.jsc.2008.02.017
   Chen TP, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON CONSTRUCTION AND REAL ESTATE MANAGEMENT, VOLS 1-3, P733
   Chhetri SR, 2016, ICCAD-IEEE ACM INT, DOI 10.1145/2966986.2967050
   CHOU SC, 1990, LECT NOTES ARTIF INT, V449, P207
   Cook S, 2004, SAT 2004, P10
   Courtois N, 2000, LECT NOTES COMPUT SC, V1807, P392
   Courtois NT, 2002, HIGHER ORDER CORRELA, P182
   Dahan X, 2005, P 2005 INT S SYMB AL, P108
   De Cannière C, 2006, LECT NOTES COMPUT SC, V4176, P171
   Ding DR, 2018, NEUROCOMPUTING, V275, P1674, DOI 10.1016/j.neucom.2017.10.009
   Dumas J-G, 2014, PARALLEL COMPUT, P499
   Faugere J. C., 2002, P 2002 INT S SYMB AL, P75, DOI DOI 10.1145/780506.780516
   Faugére JC, 1999, J PURE APPL ALGEBRA, V139, P61, DOI 10.1016/S0022-4049(99)00005-5
   Faugere JC, 2010, P 4 INT WORKSH PAR S, P89
   Faugere Jean-Charles, 2003, RR4739 INRIA
   Gao SH, 2015, MATH COMPUT, V85, P449, DOI 10.1090/mcom/2969
   Gao XS, 2009, J SYMB COMPUT, V44, P1137, DOI 10.1016/j.jsc.2008.02.010
   Gao XS, 2012, J SYMB COMPUT, V47, P655, DOI 10.1016/j.jsc.2011.12.025
   Huang ZY, 2021, J SYMB COMPUT, V103, P66, DOI 10.1016/j.jsc.2019.11.001
   Huang ZY, 2017, THEOR COMPUT SCI, V676, P52, DOI 10.1016/j.tcs.2017.03.005
   Huang ZY, 2011, LECT NOTES COMPUT SC, V6737, P77, DOI 10.1007/978-3-642-21969-6_5
   Joux A, 2017, P INT C NUMB THEOR M, P3
   Kriaa S., 2012, 2012 Proceedings of the 7th International Conference on Risks and Security of Internet and Systems (CRiSIS 2012), DOI 10.1109/CRISIS.2012.6378942
   Li XL, 2010, COMPUT MATH APPL, V60, P2983, DOI 10.1016/j.camwa.2010.09.059
   Maza Marc Moreno, 2007, COMPONENT LEVEL PARA, P69
   Mou CQ, 2021, J SYMB COMPUT, V102, P108, DOI 10.1016/j.jsc.2019.10.011
   Mullen GL, 2013, HDB FINITE FIELDS
   Murri R, 2011, P INT C PAR PROC APP, P183
   Nam J, 2018, IFAC PAPERSONLINE, V51, P188
   Neumann S, 2012, LECT NOTES COMPUT SC, V7442, P260, DOI 10.1007/978-3-642-32973-9_22
   Pasqualetti F, 2013, IEEE T AUTOMAT CONTR, V58, P2715, DOI 10.1109/TAC.2013.2266831
   Pasqualetti F, 2011, IEEE DECIS CONTR P, P2195
   Raddum H, 2006, CRYPTANALYTIC RESULT
   Shi JJ, 2013, PROCD SOC BEHV, V96, P2487, DOI 10.1016/j.sbspro.2013.08.278
   Somenzi Fabio, 2015, CUDD: CU decision diagram package release 3.0.0
   Wang QC, 2010, IEEE T INFORM THEORY, V56, P3048, DOI 10.1109/TIT.2010.2046195
   Wolf M, 2017, P IEEE, V105, P983, DOI [10.1109/JPROC.2017.2699401, 10.1109/JPROC.2017.2781198]
   Wu Y-W, 2005, RUAN JIAN XUE BAO, V16, P384
   Zhao J, 2018, PROC INT CONF PARAL, DOI 10.1145/3225058.3225097
   Zhou JL, 2020, IEEE T SERV COMPUT, V13, P745, DOI 10.1109/TSC.2019.2963301
   Zhou JL, 2019, IEEE T COMPUT, V68, P1785, DOI 10.1109/TC.2019.2935042
NR 48
TC 7
Z9 7
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2021
VL 51
IS 11
SI SI
BP 2143
EP 2167
DI 10.1002/spe.2895
EA SEP 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA6EH
UT WOS:000572088100001
DA 2024-07-18
ER

PT J
AU Sajedi-Badashian, A
   Stroulia, E
AF Sajedi-Badashian, Ali
   Stroulia, Eleni
TI Vocabulary and time based bug-assignment: A recommender system for
   open-source projects
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE TF-IDF; bug-assignment; GitHub; information retrieval; software
   engineering
ID ACCURATE
AB Bug-assignment (BA), the task of ranking developers in terms of the relevance of their expertise to fix a new bug report is time consuming, which is why substantial attention has been paid to developing methods for automating it. In this article, we describe a new BA approach that relies on two key intuitions. Similar to traditional BA methods, our method constructs the expertise profile of project developers, based on the textual elements of the bugs they have fixed in the past; unlike traditional methods, however, our method considers only the programming keywords in these bug descriptions, relying on Stack Overflow as the vocabulary for these keywords. The second key intuition of our method is that recent expertise is more relevant than past expertise, which is why our method weighs the relevance of a developer's expertise based on how recently they have fixed a bug with keywords similar to the bug at hand. We evaluated our BA method using a dataset of 93k bug-report assignments from 13 popular GitHub projects. In spite of its simplicity, our method predicts the assignee with high accuracy, outperforming state-of-the-art methods.
C1 [Sajedi-Badashian, Ali; Stroulia, Eleni] Univ Alberta, Dept Comp Sci, 2-09 Athabasca Hall, Edmonton, AB T6G 2E8, Canada.
C3 University of Alberta
RP Sajedi-Badashian, A (corresponding author), Univ Alberta, Dept Comp Sci, 2-09 Athabasca Hall, Edmonton, AB T6G 2E8, Canada.
EM alisajedi@ualberta.ca
RI Stroulia, Eleni/H-6518-2018
OI Stroulia, Eleni/0000-0002-8784-8236
FU Alberta Innovates - Technology Futures (AITF); Queen Elizabeth II
   Scholarships
FX Alberta Innovates - Technology Futures (AITF) and Queen Elizabeth II
   Scholarships
CR Afshar LK, 2019, 2019 7TH IRANIAN JOINT CONGRESS ON FUZZY AND INTELLIGENT SYSTEMS (CFIS), P1, DOI 10.1109/cfis.2019.8692156
   Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   ALJARAH I, 2011, P 7 INT C PRED MOD S, V12
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   *ARCH INT, 2017, STACK EXCH DAT DUMP
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Badashian AS, 2016, LECT NOTES COMPUT SC, V9633, P231, DOI 10.1007/978-3-662-49665-7_14
   Badashian AS, 2015, PROC IEEE INT CONF S, P506, DOI 10.1109/ICSM.2015.7332503
   Banerjee S, 2017, INFORM SOFTWARE TECH, V89, P1, DOI 10.1016/j.infsof.2016.09.006
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Berteig Mishkin, 2015, AGILE ADVICE CREATIN
   Beyer S, 2015, INT C PROGRAM COMPRE, P94, DOI 10.1109/ICPC.2015.18
   Bhattacharya P, 2010, PROC IEEE INT CONF S
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Blanco R, 2012, INFORM RETRIEVAL, V15, P54, DOI 10.1007/s10791-011-9172-x
   Borg Markus, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P243, DOI 10.1109/ESEM.2013.39
   Borg M, 2016, J SOFTW-EVOL PROC, V28, P427, DOI 10.1002/smr.1784
   CANFORA G, 2006, P 2006 ACM S APPL CO, P1767, DOI DOI 10.1145/1141277.1141693
   Carlson Patrick Eric, 2015, Engaging developers in open source software projects: harnessing social and technical data mining to improve software development
   CAVALCANTI YC, 2014, P 29 ACM IEEE INT C, P325, DOI DOI 10.1145/2642937.2642964
   Cavalcanti YC, 2016, J SYST SOFTWARE, V115, P82, DOI 10.1016/j.jss.2016.01.038
   Cavalcanti YC, 2014, J SOFTW-EVOL PROC, V26, P620, DOI 10.1002/smr.1639
   Craswell N., 2005, SIGIR 2005. Proceedings of the Twenty-Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P416, DOI 10.1145/1076034.1076106
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   ElSalamouny E, 2009, THEOR COMPUT SCI, V410, P4067, DOI 10.1016/j.tcs.2009.06.011
   *GITH, 2017, CLOS ISS US KEYW
   HAVN M, 2018, USING CONTINUOUS DEL
   Hu H, 2014, PROC INT SYMP SOFTW, P122, DOI 10.1109/ISSRE.2014.17
   HUANG L, 2010, JCDL 10, P371
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Jonsson L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1361, DOI 10.1109/ICSE.2013.6606717
   Karim MR, 2016, J SOFTW-EVOL PROC, V28, P1025, DOI 10.1002/smr.1777
   Khalil E, 2017, LECT NOTES COMPUT SC, V10452, P124, DOI 10.1007/978-3-319-66299-2_9
   Li G, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1080, DOI 10.1145/2675133.2675155
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Liu J, 2016, INT J SOFTW ENG KNOW, V26, P1593, DOI 10.1142/S0218194016710030
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Meldrum S, 2017, P 21 INT C EVALUATIO, P180
   OVEREEM B, 2017, 8 STANCES SCRUM MAST
   Ponzanelli L, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P474, DOI 10.1109/MSR.2015.67
   Rahman MM., 2012, Int. J. Pharma Life Sci, V1, P12955, DOI [10.3329/ijpls.v1i2.12955, DOI 10.3329/IJPLS.V1I2.12955]
   Saha RK, 2015, INFORM SOFTWARE TECH, V65, P114, DOI 10.1016/j.infsof.2015.03.002
   SAJEDI A, 2018, THESIS, P7
   Servant F, 2012, PROC INT CONF SOFTW, P36, DOI 10.1109/ICSE.2012.6227208
   Shokripour R, 2015, J SYST SOFTWARE, V102, P109, DOI 10.1016/j.jss.2014.12.049
   Shokripour R, 2013, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2013.6623997
   Shokripour R, 2012, INT CONF ADV COMPUT, P144, DOI 10.1109/ACSAT.2012.56
   Sun XB, 2017, J SYST SOFTWARE, V134, P355, DOI 10.1016/j.jss.2017.09.021
   Sun XB, 2014, 2014 3RD INTERNATIONAL WORKSHOP ON EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES (EAST), P32, DOI 10.1145/2627508.2627514
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Tamrawi A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P884, DOI 10.1145/1985793.1985934
   Tung Thanh Nguyen, 2014, ACM SIGSOFT Software Engineering Notes, V39, DOI 10.1145/2557833.2560585
   Wei J, 2017, EXPERT SYST APPL, V69, P29, DOI 10.1016/j.eswa.2016.09.040
   Yuan Tian, 2016, LEARNING RANK BUG RE, P1
   Zanjani MB, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P88, DOI 10.1109/MSR.2015.16
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zhang W, 2016, INFORM SOFTWARE TECH, V70, P68, DOI 10.1016/j.infsof.2015.10.004
NR 60
TC 8
Z9 8
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2020
VL 50
IS 8
BP 1539
EP 1564
DI 10.1002/spe.2830
EA APR 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MG0MA
UT WOS:000528725800001
DA 2024-07-18
ER

PT J
AU Berkani, L
AF Berkani, Lamia
TI A semantic and social-based collaborative recommendation of friends in
   social networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE collaborative filtering; competency; credibility; friends'
   recommendation; friendship; hybrid filtering; semantic filtering; social
   filtering; social recommendation; trust; Yelp social network
ID TRUST; SYSTEMS
AB The development of social media technologies has greatly enhanced social interactions. The proliferation of social platforms has generated massive amounts of data and a considerable number of persons join these platforms every day. Therefore, one of the current issues is to facilitate the search for the most appropriate friends for a given user. We focus in this article on the recommendation of users in social networks. We propose a novel approach which combines a user-based collaborative filtering (CF) algorithm with semantic and social recommendations. The semantic dimension suggests the close friends based on the calculation of the similarity between the active user and his friends. The social dimension is based on some social-behavior metrics such as friendship and credibility degree. The novelty of our approach concerns the modeling of the credibility of the user, through his/her trust and commitment in the social network. A social recommender system based on this approach is developed and experiments have been conducted using the Yelp social network. The evaluation results demonstrated that the proposed hybrid approach improves the accuracy of the recommendation compared with the user-based CF algorithm and solves the sparsity and cold start problems.
C1 [Berkani, Lamia] Univ Sci & Technol Houari Boumediene, Fac Comp & Elect Engn, Artificial Intelligence Res Lab, Dept Comp Sci, Bab Ezzouar, Algeria.
C3 University Science & Technology Houari Boumediene
RP Berkani, L (corresponding author), Univ Sci & Technol Houari Boumediene, Fac Comp & Elect Engn, Artificial Intelligence Res Lab, Dept Comp Sci, Bab Ezzouar, Algeria.
EM lberkani@usthb.dz
RI Berkani, Lamia/P-6870-2016
OI Berkani, Lamia/0000-0003-3601-2698
CR Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   Agarwal V, 2013, SOC NETW ANAL MIN, V3, P359, DOI 10.1007/s13278-012-0083-7
   [Anonymous], 2018, BIG DATA BIG DATA 20
   Banati Hema, 2014, International Journal of Computer Information Systems and Industrial Management Applications, V6, P217
   BERKANI L, 2020, P 3 INT C SMART APPL
   Berkani L, 2019, LECT NOTES COMPUT SC, V11815, P156, DOI 10.1007/978-3-030-32065-2_11
   Cai XC, 2010, LECT NOTES ARTIF INT, V6464, P476, DOI 10.1007/978-3-642-17432-2_48
   Chang CC, 2013, 2013 FIFTH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE, COMMUNICATION SYSTEMS AND NETWORKS (CICSYN), P42, DOI 10.1109/CICSYN.2013.52
   Chen JW, 2019, NEUROCOMPUTING, V341, P1, DOI 10.1016/j.neucom.2019.02.045
   CHEN M, 2016, P ELM 2015, V2, P249
   Deng D, 2018, 12TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS), P113, DOI 10.1145/3240323.3240353
   García-Sánchez F, 2020, INFORM PROCESS MANAG, V57, DOI 10.1016/j.ipm.2019.102153
   Gohari FS, 2019, ELECTRON COMMER R A, V34, DOI 10.1016/j.elerap.2019.100838
   Guo C, 2016, NEUROCOMPUTING, V204, P8, DOI 10.1016/j.neucom.2015.08.131
   Guo DY, 2017, NEUROCOMPUTING, V239, P9, DOI 10.1016/j.neucom.2017.01.068
   Guo GB, 2014, KNOWL-BASED SYST, V57, P57, DOI 10.1016/j.knosys.2013.12.007
   Guy, 2015, RECOMMENDER SYSTEMS, P511, DOI DOI 10.1007/978-1-4899-7637-6_15
   He JM, 2010, ANN INFORM SYST, V12, P47, DOI 10.1007/978-1-4419-6287-4_4
   Hou ZP, 2019, TOURISM MANAGE, V74, P276, DOI 10.1016/j.tourman.2019.03.009
   Jeong HJ, 2019, EXPERT SYST APPL, V136, P73, DOI 10.1016/j.eswa.2019.05.054
   Kalaï A, 2018, FUTURE GENER COMP SY, V80, P355, DOI 10.1016/j.future.2017.05.036
   Kautz H, 1997, COMMUN ACM, V40, P63, DOI 10.1145/245108.245123
   Khaled A, 2019, COMPUT HUM BEHAV, V101, P435, DOI 10.1016/j.chb.2018.08.051
   King Irwin, 2010, PROC INT C WORLD WID, P1355
   Lai CH, 2019, INT J HUM-COMPUT ST, V121, P42, DOI 10.1016/j.ijhcs.2018.04.002
   Li H, 2018, CLUSTER COMPUT, V21, P933, DOI 10.1007/s10586-017-0962-9
   Li XQ, 2010, PROCEEDINGS OF ACADEMY OF INNOVATION AND ENTREPRENEURSHIP 2010, P6, DOI 10.1109/WCNC.2010.5506272
   Li YM, 2013, DECIS SUPPORT SYST, V55, P740, DOI 10.1016/j.dss.2013.02.009
   Liu FK, 2010, EXPERT SYST APPL, V37, P4772, DOI 10.1016/j.eswa.2009.12.061
   Liu Y, 2019, EXPERT SYST, V36, DOI 10.1111/exsy.12365
   Ma H., 2011, Proceedings of the 4th ACM International Conference on Web Search and Data Mining, P287
   Ma YF, 2014, COMM COM INF SC, V489, P240
   MINGJUN X, 2020, INFORM PROCESS MANAG, V57, P102
   PEIS E, 2008, AN STAT TOP HYP NET, V6
   Resnick P., 1994, P ACM C COMP SUPP CO, P175
   Rowe G, 2001, INT SER OPER RES MAN, V30, P125, DOI 10.1007/978-0-306-47630-3_7
   Serrano D, 2008, SYM REL DIST SYST, P127, DOI 10.1109/SRDS.2008.22
   Shi Y, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2556270
   Sun ZB, 2015, J SYST SOFTWARE, V99, P109, DOI 10.1016/j.jss.2014.09.019
   Tang J, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P517, DOI 10.1145/2736277.2741135
   Tang JL, 2013, SOC NETW ANAL MIN, V3, P1113, DOI 10.1007/s13278-013-0141-9
   Wang RQ, 2019, EXPERT SYST APPL, V123, P70, DOI 10.1016/j.eswa.2019.01.036
   WANG X, 2014, COMPUT MOD, V1, P77
   Wang XM, 2019, FUTURE GENER COMP SY, V94, P224, DOI 10.1016/j.future.2018.11.030
   WU ZB, 1994, 32ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P133
   Xu YH, 2019, DECIS SUPPORT SYST, V119, P1, DOI 10.1016/j.dss.2019.01.004
   Yang L, 2016, 2016 15TH ACM/IEEE INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS (IPSN)
   Yun YD, 2018, J INF SCI, V44, P331, DOI 10.1177/0165551517692955
   Zhang HP, 2019, INFORM MANAGE-AMSTER, V56, P185, DOI 10.1016/j.im.2018.05.001
   Zhang H, 2018, MULTIMED TOOLS APPL, V77, P4187, DOI 10.1007/s11042-017-4553-9
   Zhang H, 2018, INT J INFORM MANAGE, V38, P150, DOI 10.1016/j.ijinfomgt.2017.07.006
   Zhang L, 2017, J WEB SEMANT, V46-47, P20, DOI 10.1016/j.websem.2017.03.002
   Zhang Y, 2017, MOBILE NETW APPL, V22, P1182, DOI 10.1007/s11036-017-0864-3
   Zhu JH, 2019, EURASIP J WIREL COMM, DOI 10.1186/s13638-019-1388-2
   Zhu L, 2017, J NETW COMPUT APPL, V82, P35, DOI 10.1016/j.jnca.2016.12.033
NR 55
TC 19
Z9 19
U1 2
U2 33
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2020
VL 50
IS 8
BP 1498
EP 1519
DI 10.1002/spe.2828
EA APR 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA MG0MA
UT WOS:000523214300001
DA 2024-07-18
ER

PT J
AU Farhadi, M
   Lanet, JL
   Pierre, G
   Miorandi, D
AF Farhadi, Mozhdeh
   Lanet, Jean-Louis
   Pierre, Guillaume
   Miorandi, Daniele
TI A systematic approach toward security in Fog computing: Assets,
   vulnerabilities, possible countermeasures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE attack; common criteria; fog computing; methodology; security
ID IOT; INTERNET; PRIVACY; THINGS; CLOUD; EDGE; CHALLENGES; ISSUES; TRUST
AB Fog computing is an emerging paradigm in the Internet of Things (IoT) space, consisting of a middle computation layer, sitting between IoT devices and Cloud servers. Fog computing provides additional computing, storage, and networking resources in close proximity to where data is being generated and/or consumed. As the Fog layer has direct access to data streams generated by IoT devices and responses/commands sent from the Cloud, it is in a critical position in terms of security of the entire IoT system. Currently, there is no specific tool or methodology for analysing the security of Fog computing systems in a comprehensive way. Generic security evaluation procedures applicable to most information technology products are time consuming, costly, and badly suited to the Fog context. In this article, we introduce a methodology for evaluating the security of Fog computing systems in a systematic way. We also apply our methodology to a generic Fog computing system, showcasing how it can be purposefully used by security analysts and system designers.
C1 [Farhadi, Mozhdeh; Miorandi, Daniele] U Hopper Srl, Trento, Italy.
   [Farhadi, Mozhdeh; Lanet, Jean-Louis; Pierre, Guillaume] Univ Rennes, INRIA, CNRS, IRISA, Rennes, France.
   [Farhadi, Mozhdeh; Miorandi, Daniele] U Hopper, Trento, Italy.
C3 Centre National de la Recherche Scientifique (CNRS); Inria; Universite
   de Rennes
RP Farhadi, M (corresponding author), Univ Rennes, INRIA, CNRS, IRISA, Rennes, France.; Farhadi, M (corresponding author), U Hopper, Trento, Italy.
EM mozhdeh.farhadi@u-hopper.com
RI Miorandi, Daniele/AAF-2298-2021
FU European Union [765452]; Marie Curie Actions (MSCA) [765452] Funding
   Source: Marie Curie Actions (MSCA)
FX This work is part of a project that has received funding from the
   European Union's Horizon 2020 research and innovation programme under
   the Marie Sklodowska-Curie grant agreement No. 765452. The information
   and views set out in this publication are those of the author(s) and do
   not necessarily reflect the official opinion of the European Union.
   Neither the European Union institutions and bodies nor any person acting
   on their behalf may be held responsible for the use which may be made of
   the information contained therein.
CR Abadi M, 2009, ACM T INFORM SYST SE, V13, DOI 10.1145/1609956.1609960
   Abomhara M., 2014, 2014 international conference on privacy and security in mobile systems (PRISMS), P1
   Alrawais A, 2017, IEEE INTERNET COMPUT, V21, P34, DOI 10.1109/MIC.2017.37
   Ammar M, 2018, J INF SECUR APPL, V38, P8, DOI 10.1016/j.jisa.2017.11.002
   [Anonymous], 2019, P MIDDL 18 ACM RENN
   Bistarelli S, 2006, FIRST INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P416, DOI 10.1109/ARES.2006.46
   Blaze M., 1999, Secure Internet programming. Security issues for mobile and distributed objects, P185
   Bonomi Flavio., 2011, 8 ACM INT WORKSHOP V, P13
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Bouffard G, 2014, J COMPUT VIROL HACKI, V10, P239, DOI 10.1007/s11416-014-0218-7
   Bouissou M, 2003, RELIAB ENG SYST SAFE, V82, P149, DOI 10.1016/S0951-8320(03)00143-1
   Chen D, P 2012 INT C COMP SC, V12012, P647
   Christina Skouloudi GF, 2018, SECURE CONVERGENCE C
   Cloud Security Alliance, 2017, TREACH 12 TOP THREAT
   Conti M, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P952, DOI 10.1145/2810103.2813671
   Criteria C, 2009, CCMB200907001
   Dang T.H.Y., 2015, P 10 ACM S INF COMP
   Esposito C, 2017, IEEE CLOUD COMPUT, V4, P13, DOI 10.1109/MCC.2017.30
   Flexera, 2019, RIGHTSCALE STAT CLOU
   Frustaci M, 2018, IEEE INTERNET THINGS, V5, P2483, DOI 10.1109/JIOT.2017.2767291
   Ganguli S, 2017, IOT TECHNOLOGY DISRU
   Gruss Daniel, 2016, Detection of Intrusions and Malware, and Vulnerability Assessment. 13th International Conference, DIMVA 2016. Proceedings: LNCS 9721, P300, DOI 10.1007/978-3-319-40667-1_15
   Halfond WG, 2016, P IEEE INT S SEC SOF, V1, P13
   IEEE Standards Association, 2018, 19342018IEEE
   Jing Q, 2014, WIREL NETW, V20, P2481, DOI 10.1007/s11276-014-0761-7
   Khan MA, 2018, FUTURE GENER COMP SY, V82, P395, DOI 10.1016/j.future.2017.11.022
   Khan S, 2017, J CLOUD COMPUT-ADV S, V6, DOI 10.1186/s13677-017-0090-3
   Kindervag J., 2010, Tech. Rep., P1
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Li HH, 2007, COMPUTER, V40, P45, DOI 10.1109/MC.2007.76
   Liu C, 2015, FUTURE GENER COMP SY, V49, P58, DOI 10.1016/j.future.2014.08.007
   Liu H, 2018, IEEE NETWORK, V32, P78, DOI 10.1109/MNET.2018.1700344
   McKinsey & Company, 2015, INT THINGS 5 CRIT QU
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Moffett JD, 1995, SECURITY DISTRIBUTED
   Mukherjee M, 2017, IEEE ACCESS, V5, P19293, DOI 10.1109/ACCESS.2017.2749422
   Neshenko N, 2019, IEEE COMMUN SURV TUT, V21, P2702, DOI 10.1109/COMST.2019.2910750
   OpenFog Consortium Architecture Working Group, 2017, Openfog reference architecture for fog computing
   Özdoganoglu H, 2006, IEEE T COMPUT, V55, P1271, DOI 10.1109/TC.2006.166
   Pang HH, 2004, PROC INT CONF DATA, P560, DOI 10.1109/ICDE.2004.1320027
   Puthal D, 2019, IEEE CONSUM ELECTR M, V8, P92, DOI 10.1109/MCE.2019.2893674
   Puthal D, 2016, IEEE CLOUD COMPUT, V3, P64, DOI 10.1109/MCC.2016.63
   Quandeng Gou, 2013, 2013 IEEE International Conference on Green Computing and Communications (GreenCom) and IEEE Internet of Things (iThings) and IEEE Cyber, Physical and Social Computing (CPSCom), P1129, DOI 10.1109/GreenCom-iThings-CPSCom.2013.195
   Roman R, 2018, FUTURE GENER COMP SY, V78, P680, DOI 10.1016/j.future.2016.11.009
   Roy A, 2012, SECUR COMMUN NETW, V5, P929, DOI 10.1002/sec.299
   Schneier B, 1999, DR DOBBS J, V24, P21
   Sicari S, 2015, COMPUT NETW, V76, P146, DOI 10.1016/j.comnet.2014.11.008
   Simmonds A, 2004, LECT NOTES COMPUT SC, V3285, P317
   Steiner J. G., 1988, USENIX Association Winter Conference Dallas 1988. Proceedings, P191
   Stellios I, 2018, IEEE COMMUN SURV TUT, V20, P3453, DOI 10.1109/COMST.2018.2855563
   Stojmenovic I, 2016, CONCURR COMP-PRACT E, V28, P2991, DOI 10.1002/cpe.3485
   Tanenbaum AS., 2007, DISTRIBUTED SYSTEMS
   Vogt P., 2007, NDSS, V2007, P12
   Wazid M, 2019, J SYST ARCHITECT, V97, P185, DOI 10.1016/j.sysarc.2018.12.005
   Weissberger A, 2017, IDC DIRECTIONS 2017
   Xu XL, 2021, SOFTWARE PRACT EXPER, V51, P2015, DOI 10.1002/spe.2749
   Yi SH, 2015, LECT NOTES COMPUT SC, V9204, P685, DOI 10.1007/978-3-319-21837-3_67
   Zhang L, P 2010 INT C COMM MO, V12010, P121
   Zhang ZK, 2014, IEEE INT CONF SERV, P230, DOI 10.1109/SOCA.2014.58
   Zhao K, 2013, 2013 9TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY (CIS), P663, DOI 10.1109/CIS.2013.145
NR 60
TC 6
Z9 6
U1 1
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2020
VL 50
IS 6
BP 973
EP 997
DI 10.1002/spe.2804
EA FEB 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK4IJ
UT WOS:000512470800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fu, JJ
   Zhou, YF
   Wang, X
AF Fu, Jiaojiao
   Zhou, Yangfan
   Wang, Xin
TI Component-based permission management of Android applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Android; mobile privacy; mobile security; permission management;
   third-party library
AB Most Android applications include third-party libraries (3PLs) to make revenues, to facilitate their development, and to track user behaviors. 3PLs generally require specific permissions to realize their functionalities. Current Android systems manage permissions in app (process) granularity. As a result, the permission sets of apps with 3PLs (3PL-apps) may be augmented, introducing overprivilege risks. In this paper, we firstly study how severe the problem is by analyzing the permission sets of 27 718 real-world Android apps with and without 3PLs downloaded in both 2016 and 2017. We find that the usage of 3PLs and the permissions required by 3PL-apps have increased over time. As a result, the possibility of overprivilege risks increases. We then propose Perman, a fine-grained permission management mechanism for Android. Perman isolates the permissions of the host app and those of the 3PLs through dynamic code instrumentation. It allows users to manage permission requests of different modules of 3PL-apps during app runtime. Unlike existing tools, Perman does not need to redesign Android apps and systems. Therefore, it can be applied to millions of existing apps and various Android devices. We conduct experiments to evaluate the effectiveness and efficiency of Perman. The experimental results verify that Perman is capable of managing permission requests of the host app and those of the 3PLs. We also confirm that the overhead introduced by Perman is comparable to that by existing commercial permission management tools.
C1 [Fu, Jiaojiao; Zhou, Yangfan; Wang, Xin] Fudan Univ, Sch Comp Sci, 825 Zhangheng Rd, Shanghai 201203, Peoples R China.
   [Fu, Jiaojiao; Zhou, Yangfan; Wang, Xin] Shanghai Key Lab Intelligent Informat Proc, Shanghai, Peoples R China.
   [Zhou, Yangfan] 825 Zhangheng Rd, Shanghai 201203, Peoples R China.
C3 Fudan University
RP Zhou, YF (corresponding author), Fudan Univ, Sch Comp Sci, 825 Zhangheng Rd, Shanghai 201203, Peoples R China.; Zhou, YF (corresponding author), 825 Zhangheng Rd, Shanghai 201203, Peoples R China.
EM zyf@fudan.edu.cn
OI Fu, Jiaojiao/0000-0002-0084-6079
FU General Program of National Natural Science Foundation of China
   [61672164]; CERNET Innovation Project [NGII20180611]
FX General Program of National Natural Science Foundation of China,
   Grant/Award Number: 61672164; CERNET Innovation Project, Grant/Award
   Number: NGII20180611
CR Android Team, 2019, GET READ SWEET TAST
   [Anonymous], P 18 ACM C COMP COMM
   [Anonymous], 2019, GOOGLE PLAY BEWARE A
   [Anonymous], 2010, P 5 ACM S INF COMP C
   [Anonymous], 2012, P USENIX SEC
   [Anonymous], 2019, ADWARE ANDROID APPS
   [Anonymous], 2015, NUCL ACIDS RES
   [Anonymous], 2019, TOOL REVERSE ENG AND
   Artail H, 2015, IEEE T MOBILE COMPUT, V14, P1560, DOI 10.1109/TMC.2014.2346785
   Backes M, 2013, LECT NOTES COMPUT SC, V7795, P543, DOI 10.1007/978-3-642-36742-7_39
   Biswas S, 2017, LECT NOTES COMPUT SC, V10251, P445, DOI 10.1007/978-3-319-60033-8_39
   Biswas S, 2016, INT J SECUR APPL, V10, P223, DOI 10.14257/ijsia.2016.10.3.21
   Book T., 2013, ARXIV13030857
   Bugiel S, 2013, P 22 USENIX SEC S WA
   Chitkara Saksham, 2017, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V1, DOI 10.1145/3132029
   Diamantaris Michalis, 2019, P 9 ACM C DAT APPL S
   El-Harake K, 2014, LECT NOTES COMPUT SC, V8803, P239, DOI 10.1007/978-3-662-45231-8_17
   Felt A.P., 2011, P 2 USENIX C WEB APP
   Fu J, 2017, IEEE INT S SOFTW REL
   Fu J, 2015, P IEEE S SERV OR SYS
   Google Inc, 2019, ANDR DEV
   Grace M., 2012, WISEC 12
   Jinseong Jeon, 2012, SPSM
   Krupp B, 2015, IEEE T DEPEND SECURE, V14, P433
   Lin J., 2014, P 10 S US PRIV SEC S
   Paturi A, 2015, NDSS WORKSH US SEC U
   Pearce P, 2012, 7TH ACM SYMPOSIUM ON INFORMATION, COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS 2012)
   Roesner F., 2012, P 33 IEEE S SEC PRIV
   Seo J., 2016, P 2016 ANN NETW DIST
   Shekhar S, 2012, P 21 USENIX C SEC S
   Su MY, 2018, APPL SCI-BASEL, V8, DOI 10.3390/app8101852
   Wang DB, 2017, IEEE T DEPEND SECURE, V14, P350, DOI 10.1109/TDSC.2015.2479613
   Wang FB, 2016, LECT NOTES COMPUT SC, V9878, P458, DOI 10.1007/978-3-319-45744-4_23
   Wang HY, 2017, ACM T INFORM SYST, V35, DOI 10.1145/3086677
   Wang Y., 2014, P 4 ACM C DAT APPL S P 4 ACM C DAT APPL S
   Wermke D, 2018, P 34 ANN COMP SEC AP
   Zhang X., 2013, ACSAC 13
   [No title captured]
NR 38
TC 0
Z9 0
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2019
VL 49
IS 9
BP 1402
EP 1418
DI 10.1002/spe.2734
EA JUL 2019
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IP8HI
UT WOS:000478246300001
DA 2024-07-18
ER

PT J
AU Astekin, M
   Zengin, H
   Sözer, H
AF Astekin, Merve
   Zengin, Harun
   Sozer, Hasan
TI DILAF: A framework for distributed analysis of large-scale system logs
   for anomaly detection
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE anomaly detection; big data; distributed systems; log analysis; machine
   learning; parallel processing; software architecture
AB System logs constitute a rich source of information for detection and prediction of anomalies. However, they can include a huge volume of data, which is usually unstructured or semistructured. We introduce DILAF, a framework for distributed analysis of large-scale system logs for anomaly detection. DILAF is comprised of several processes to facilitate log parsing, feature extraction, and machine learning activities. It has two distinguishing features with respect to the existing tools. First, it does not require the availability of source code of the analyzed system. Second, it is designed to perform all the processes in a distributed manner to support scalable analysis in the context of large-scale distributed systems. We discuss the software architecture of DILAF and we introduce an implementation of it. We conducted controlled experiments based on two datasets to evaluate the effectiveness of the framework. In particular, we evaluated the performance and scalability attributes under various degrees of parallelism. Results showed that DILAF can maintain the same accuracy levels while achieving more than 30% performance improvement on average as the system scales, compared to baseline approaches that do not employ fully distributed processing.
C1 [Astekin, Merve] TUBITAK Informat & Informat Secur Res Ctr TUBITAK, TR-41470 Gebze, Turkey.
   [Zengin, Harun] Bogazici Univ, Dept Comp Engn, Istanbul, Turkey.
   [Sozer, Hasan] Ozyegin Univ, Dept Comp Sci, Istanbul, Turkey.
C3 Bogazici University; Ozyegin University
RP Astekin, M (corresponding author), TUBITAK Informat & Informat Secur Res Ctr TUBITAK, TR-41470 Gebze, Turkey.
EM merve.astekin@tubitak.gov.tr
RI Sözer, Hasan/A-4722-2015; Sözer, Hasan/AAR-8697-2020; Astekin,
   Merve/AAI-7730-2021
OI Sözer, Hasan/0000-0002-2968-4763; Sözer, Hasan/0000-0002-2968-4763;
   Astekin, Merve/0000-0003-4181-963X
CR [Anonymous], 1983, INTRO MODERN INFORM
   [Anonymous], 2011, CISCO VISUAL NETWORK
   Banerjee S, 2010, P 2010 IEEE 21 INT S
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2014, P 36 INT C SOFTW ENG
   Chen X, 2013, P 2013 43 ANN IEEE I
   Chuah E, 2013, P 2013 IEEE 32 INT S
   Du M., 2017, P 2017 ACM SIGSAC C
   Du M, 2017, P 2016 IEEE 16 INT C
   Feldman R., 2007, TEXT MINING HDB ADV, DOI DOI 10.1017/CBO9780511546914
   Fu Q., 2009, P 2009 9 IEEE INT C
   Gu Z, 2015, P 2015 45 ANN IEEE I
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   He P, 2016, 2016 46 IEEE IFIP IN
   He PF, 2017, INT J GEOMECH, V17, DOI 10.1061/(ASCE)GM.1943-5622.0000741
   He Shilin, 2016, 2016 IEEE 27 INT S S
   Jolliffe I.T., 1986, Principal component analysis, DOI DOI 10.1016/0169-7439(87)80084-9
   Lin Q, 2016, P 38 INT C SOFTW ENG
   Lou J-G, 2010, USENIX ANN TECHN C B
   Luo C, 2017, SCI COMPUT PROGRAM, V145, P13, DOI 10.1016/j.scico.2017.04.004
   Makanju AAO, 2009, P 15 ACM SIGKDD INT
   Mariani L, 2008, P 2008 19 INT S SOFT
   Oprea A, 2015, I C DEPEND SYS NETWO, P45, DOI 10.1109/DSN.2015.14
   Patel P, 2015, J SYST SOFTWARE, V103, P62, DOI 10.1016/j.jss.2015.01.027
   Pecchia A, 2011, P 2011 IEEE IFIP 41
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Shang W, 2013, P 2013 35 INT C SOFT
   Tang L, 2011, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL SYMPOSIUM ON MOBILE AD HOC NETWORKING AND COMPUTING (MOBIHOC' 11), DOI 10.1145/2107502.2107533
   Vaarandi R, 2003, P 2003 3 IEEE WORKSH
   Xing EP, 2016, ENGINEERING-PRC, V2, P179, DOI 10.1016/J.ENG.2016.02.008
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yuan D, 2010, ACM SIGPLAN NOTICES, V45, P143, DOI 10.1145/1735971.1736038
   Zaharia M, 2012, P 9 USENIX C NETW SY, P15
NR 34
TC 12
Z9 14
U1 0
U2 33
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2019
VL 49
IS 2
SI SI
BP 153
EP 170
DI 10.1002/spe.2653
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0GK
UT WOS:000459864300002
DA 2024-07-18
ER

PT J
AU Brogi, A
   Neri, D
   Soldani, J
AF Brogi, Antonio
   Neri, Davide
   Soldani, Jacopo
TI A microservice-based architecture for (customisable) analyses of Docker
   images
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE container; Docker; microservices
AB We introduce DockerAnalyser, a microservice-based tool that permits building customised analysers of Docker images. The architecture of DockerAnalyser is designed to crawl Docker images from a remote Docker registry, to analyse each image by running an analysis function, and to store the results into a local database. Users can build their own image analysers by instantiating DockerAnalyser with a custom analysis function and by configuring the architecture. More precisely, the steps needed to obtain new analysers are (1) replacing the analysis function used to analyse crawled Docker images, (2) setting the policy for crawling Docker images, and (3) setting the scalability options for obtaining a scalable architecture. In this paper, we also present 2 different use cases, ie, 2 different analysers of Docker images created by instantiating DockerAnalyser with 2 different analysis functions and configuration options. The 2 use cases show that DockerAnalyser decreases the effort required to obtain new analysers versus building them from scratch.
C1 [Brogi, Antonio; Neri, Davide; Soldani, Jacopo] Univ Pisa, Dept Comp Sci, I-56127 Pisa, Italy.
C3 University of Pisa
RP Neri, D (corresponding author), Univ Pisa, Dept Comp Sci, I-56127 Pisa, Italy.
EM davide.neri@di.unipi.it
RI Soldani, Jacopo/O-5057-2019; Brogi, Antonio/HLQ-2040-2023
OI Soldani, Jacopo/0000-0002-2435-3543; Brogi, Antonio/0000-0003-2048-2468;
   Neri, Davide/0000-0002-4758-4328
CR Bass Len, 2015, DevOps: A Software Architect's Perspective
   Brogi A, 2017, 2017 IEEE INT C CLOU
   Brogi A, 2018, LECT NOTES COMPUT SC, V10729, P491, DOI 10.1007/978-3-319-74781-1_33
   Cavallari M, 2018, L N INF SYST ORGAN, V24, P165, DOI 10.1007/978-3-319-62636-9_11
   CoreOS, VULN STAT AN CONT
   DataDog, 8 SURPR FACTS DOCK A
   Docker Inc, DOCK
   DockerInc, DOCK HUB HITS 5 BILL
   DockerInc, DOCK HUB
   DockerInc, DOCK STOR
   DockerInc, DOCK COMP
   DockerInc, DOCK SWARM
   Express, FAST UN MIN WEB FRAM
   Fowler M, 2018, MICROSERVICES THOUGH
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   Hendrickson Scott, 2016, P USENIX HOT CLOUD
   Heroku, DYN DYN MANAG
   JFrog Ltd, DOCK SEC CLUST DOCK
   Joy AM, 2015, 2015 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER ENGINEERING AND APPLICATIONS (ICACEA), P342, DOI 10.1109/ICACEA.2015.7164727
   Kozhirbayev Z, 2017, FUTURE GENER COMP SY, V68, P175, DOI 10.1016/j.future.2016.08.025
   Kurtzer GM, 2017, RKT, V12, pe0177459
   Li Z., 2017, 31 IEEE INT C ADV IN
   Microscaling Systems, MICR SYST
   Microscaling Systems, MICR SYST
   Mongoose, EL MONG OBJ MOD NOD
   Newman S., 2015, BUILDING MICROSERVIC
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Pika, INTR PIK
   requests, REQ HTTP HUM
   Roberts Mike., 2018, SERVERLESS ARCHITECT
   Spillner J., 2017, ARXIV170307562
   Wettinger J., 2015, 2015 IEEE INT C CLOU
NR 32
TC 5
Z9 6
U1 1
U2 30
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2018
VL 48
IS 8
BP 1461
EP 1474
DI 10.1002/spe.2583
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GL9XH
UT WOS:000437696200003
DA 2024-07-18
ER

PT J
AU Dautov, R
   Distefano, S
   Bruneo, D
   Longo, F
   Merlino, G
   Puliafito, A
   Buyya, R
AF Dautov, Rustem
   Distefano, Salvatore
   Bruneo, Dario
   Longo, Francesco
   Merlino, Giovanni
   Puliafito, Antonio
   Buyya, Rajkumar
TI Metropolitan intelligent surveillance systems for urban areas by
   harnessing IoT and edge computing paradigms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; cloud computing; distributed smart camera; edge computing;
   intelligent surveillance system; IoT; smart city; Stack4Things; stream
   processing
ID SERVICE
AB Recent technological advances led to the rapid and uncontrolled proliferation of intelligent surveillance systems (ISSs), serving to supervise urban areas. Driven by pressing public safety and security requirements, modern cities are being transformed into tangled cyber-physical environments, consisting of numerous heterogeneous ISSs under different administrative domains with low or no capabilities for reuse and interaction. This isolated pattern renders itself unsustainable in city-wide scenarios that typically require to aggregate, manage, and process multiple video streams continuously generated by distributed ISS sources. A coordinated approach is therefore required to enable an interoperable ISS for metropolitan areas, facilitating technological sustainability to prevent network bandwidth saturation. To meet these requirements, this paper combines several approaches and technologies, namely the Internet of Things, cloud computing, edge computing and big data, into a common framework to enable a unified approach to implementing an ISS at an urban scale, thus paving the way for the metropolitan intelligent surveillance system (MISS). The proposed solution aims to push data management and processing tasks as close to data sources as possible, thus increasing performance and security levels that are usually critical to surveillance systems. To demonstrate the feasibility and the effectiveness of this approach, the paper presents a case study based on a distributed ISS scenario in a crowded urban area, implemented on clustered edge devices that are able to off-load tasks in a horizontal manner in the context of the developed MISS framework. As demonstrated by the initial experiments, the MISS prototype is able to obtain face recognition results 8 times faster compared with the traditional off-loading pattern, where processing tasks are pushed vertically to the cloud.
C1 [Dautov, Rustem; Distefano, Salvatore] Kazan Fed Univ, Kazan, Russia.
   [Distefano, Salvatore; Bruneo, Dario; Longo, Francesco; Merlino, Giovanni; Puliafito, Antonio] Univ Messina, Messina, Italy.
   [Buyya, Rajkumar] Univ Melbourne, Melbourne, Vic, Australia.
C3 Kazan Federal University; University of Messina; University of Melbourne
RP Dautov, R (corresponding author), Kazan Fed Univ, Kazan, Russia.
EM rdautov@it.kfu.ru
RI Merlino, Giovanni/I-3169-2019; Bruneo, Dario/A-8171-2008; Distefano,
   Salvatore/E-7962-2012; Puliafito, Antonio/H-7823-2016; Buyya,
   Rajkumar/C-3424-2009; Longo, Francesco/E-6213-2013
OI Merlino, Giovanni/0000-0002-1469-7860; Puliafito,
   Antonio/0000-0003-0385-2711; Buyya, Rajkumar/0000-0001-9754-6496;
   Dautov, Rustem/0000-0002-0260-6343; Longo, Francesco/0000-0001-6299-140X
CR Abramoff Michael D, 2010, IEEE Rev Biomed Eng, V3, P169, DOI 10.1109/RBME.2010.2084567
   Bonomi F., 2012, P 1 ACM MCC WORKSH M, P13
   Bruneo D, 2016, 2016 IEEE INT C SMAR
   Cai ZQ, 2017, MULTIMED TOOLS APPL, V76, P1941, DOI 10.1007/s11042-015-3163-7
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   Dautov R., 2017, P 11 INT C DISTR SMA
   Distefano S, 2012, 2012 6 INT C INN MOB
   Eigenraam D, 2016, 2016 SMART CITIES SYMPOSIUM PRAGUE (SCSP)
   Esterle L, 2017, 2017 IEEE 11 INT C S
   Esterle L, 2017, P 11 INT C DISTR SMA
   Fan CT, 2017, IEEE T SYST MAN CY-S, V47, P593, DOI 10.1109/TSMC.2016.2531671
   Flores H, 2015, IEEE COMMUN MAG, V53, P80, DOI 10.1109/MCOM.2015.7060486
   Gao Y, 2014, IEEE T CIRC SYST VID, V24, P1122, DOI 10.1109/TCSVT.2014.2302366
   Lopez PG, 2015, ACM SIGCOMM COMP COM, V45, P37, DOI 10.1145/2831347.2831354
   Hu L, 2018, IEEE INTERNET THINGS, V5, P747, DOI 10.1109/JIOT.2017.2705560
   Jenkins N., 2015, '245 million video surveillance cameras installed globally in 2014'
   Longo F, 2017, ANN TELECOMMUN, V72, P53, DOI 10.1007/s12243-016-0528-5
   Lu X, 2013, 2013 4 INT C NETW DI
   Merlino G, 2015, INT C AD HOC NETW SA
   Merlino G, 2016, FUTURE GENER COMP SY, V56, P623, DOI [10.1016/j.future.2015.09.01-7, 10.1016/j.future.2015.09.017]
   Peng YZ, 2019, IEEE T IND INFORM, V15, P822, DOI 10.1109/TII.2018.2810284
   Pohl C, 1998, INT J REMOTE SENS, V19, P823, DOI 10.1080/014311698215748
   Qian HH, 2011, INTEL SYST CONTR AUT, V51, P1, DOI 10.1007/978-94-007-1137-2
   Rantala A, 2013, 2013 IEEE INT C GRAN
   Räty TD, 2010, IEEE T SYST MAN CY C, V40, P493, DOI 10.1109/TSMCC.2010.2042446
   Rinner B, 2008, 2008 2 ACM IEEE INT
   Rinner B, 2008, P IEEE, V96, P1565, DOI 10.1109/JPROC.2008.928742
   Sahu D., 2012, Int. J. Mod. Eng. Res. (IJMER), V2, P4298
   Shao ZF, 2018, IEEE T BIG DATA, V4, P105, DOI 10.1109/TBDATA.2017.2715815
   Shi Y, 2009, SMART CAMERAS
   Shiva Kumar KA, 2017, P 11 INT C DISTR SMA
   Valera M, 2005, IEE P-VIS IMAGE SIGN, V152, P192, DOI 10.1049/ip-vis:20041147
   Wahyono, 2016, IEEE T IND INFORM, V12, P2247, DOI 10.1109/TII.2016.2605582
   Wang XG, 2013, PATTERN RECOGN LETT, V34, P3, DOI 10.1016/j.patrec.2012.07.005
NR 34
TC 38
Z9 40
U1 1
U2 39
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2018
VL 48
IS 8
BP 1475
EP 1492
DI 10.1002/spe.2586
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GL9XH
UT WOS:000437696200004
OA Green Published
DA 2024-07-18
ER

PT J
AU Ebad, SA
AF Ebad, Shouki A.
TI The influencing causes of software unavailability: A case study from
   industry
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE case study; software availability; software business; software failure;
   software repairability; vendor support
ID HIGH-AVAILABILITY; SYSTEMS; SERVICE
AB Software unavailability can lead to disastrous consequences ranging from delays and cancellation to a loss of millions of dollars of technology. However, research on the causes that can make systems unavailable is still little. The aim of this paper is to investigate such causes in an industrial context using 2 qualitative approaches ((a) interview and (b) retrospective analysis) using archival data and records from a student information system. As a result, connectivity, human, hardware, storage, and software were found to be the important categories of causes for the unavailability. Besides, the critical lessons to be learned that relate to activities of software management and software business are also discussed. This includes vendor support, systems documentation, health check process, licensing, and software updating or upgrading. To strengthen the claim that our findings are promising, we compare our main findings with those of a previous study. This study can generally assist software engineering people including engineers, developers, project managers, vendors. Additionally, this paper dis cusses the threats to the study's validity and suggests open problems for future research.
C1 [Ebad, Shouki A.] Northern Border Univ, Ar Ar 91431, Saudi Arabia.
C3 Northern Border University
RP Ebad, SA (corresponding author), Northern Border Univ, Ar Ar 91431, Saudi Arabia.
EM shouki.abbad@nbu.edu.sa
RI Ebad, Shouki A./P-8759-2018
OI Ebad, Shouki A./0000-0003-1043-2774
FU Deanship of Scientific Research at Northern Border University
   [6958-CIT-2017-1-7-F]
FX Deanship of Scientific Research at Northern Border University,
   Grant/Award Number: 6958-CIT-2017-1-7-F
CR AbdulGader AH, 1997, INT J INFORM MANAGE, V17, P3, DOI 10.1016/S0268-4012(96)00038-2
   Aceituna D, 2014, INFORM SOFTWARE TECH, V56, P321, DOI 10.1016/j.infsof.2013.11.004
   Adams K., 2015, Non-functional requirements in systems analysis and design
   Alexandrov T, 2013, P 14 INT C COMP SYST
   [Anonymous], 2000, P INT WORKSH FAULT T
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Dantas J, 2012, 2012 IEEE INT C SYST
   Dantas J, 2015, COMPUTING, V97, P1121, DOI 10.1007/s00607-015-0447-8
   Das P, 2013, INT J COMPUT APPL, V70, P975
   Ebad Shouki A., 2016, Journal of Software, V11, P1145, DOI 10.17706/jsw.11.11.1145-1153
   Ebad SA, 2017, MALAYS J COMPUT SCI, V30, P99
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Endo PT, 2016, J CLOUD COMPUT-ADV S, V5, DOI 10.1186/s13677-016-0066-8
   European Commission (EC), 2003, NEW SME DEF US GUID
   Ever E, 2017, J SUPERCOMPUT, V73, P2130, DOI 10.1007/s11227-016-1906-5
   Franke U, 2012, SOFTWARE QUAL J, V20, P369, DOI 10.1007/s11219-011-9141-z
   Galin Daniel., 2003, SOFTWARE QUALITY ASS
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   IBM Global Services, 1998, IMPR SYST AV
   IEEE and ISO/IEC, 2010, 247652010ISOIECIEEE
   Jakobsen S, 2013, ARAB NEWS       0824
   Kanso A, 2014, COMPUTING, V96, P975, DOI 10.1007/s00607-013-0361-x
   Langsdale G, 2014, COMMUNICATION
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P623, DOI 10.1016/j.infsof.2014.01.015
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   LEVESON NG, 1993, COMPUTER, V26, P18, DOI 10.1109/MC.1993.274940
   Liang QH, 2014, SOFTWARE PRACT EXPER, V44, P47, DOI 10.1002/spe.2155
   Marrone S, 2015, J RELIAB INTELL ENV, V1, P87, DOI [10.1007/s40860-015-0009-z, DOI 10.1007/S40860-015-0009-Z]
   Matos R, 2017, J GRID COMPUT, V15, P1, DOI 10.1007/s10723-016-9381-z
   McQuaid PA, 2012, J SOFTW-EVOL PROC, V24, P459, DOI 10.1002/smr.500
   Paraiso F, 2016, COMPUTING, V98, P539, DOI 10.1007/s00607-014-0421-x
   Popp K, 2011, PROFIT SOFTWARE ECOS
   Rinsaka K, 2016, SOFTWARE QUAL J, V24, P65, DOI 10.1007/s11219-014-9264-0
   Ronzon T, 2016, IEEE SOFTWARE, V33, P11, DOI 10.1109/MS.2016.49
   Sommerville I., 2011, Software engineering
   Sözer H, 2017, SOFTWARE QUAL J, V25, P553, DOI 10.1007/s11219-016-9315-9
   Tariq A, 2016, SAUDI GAZETTE   1221
   Thein T, 2009, J COMPUT SCI TECH-CH, V24, P339, DOI 10.1007/s11390-009-9228-1
   Toeroe M., 2012, Service Availability: Principles and Practice, VFirst
   Tsan L, 2017, 10 REASONS WHY MODER
   Verner J, 2008, 2 INT C RES CHALL IN
   Wailgum T, 2005, CIO MAGAZINE
   Wailgum T., 2009, CIO MAGAZINE    0324
   Walpole RE., 2011, PROBABILITY STAT ENG, V9th
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zambon E, 2011, SOFTW SYST MODEL, V10, P553, DOI 10.1007/s10270-010-0166-8
NR 47
TC 2
Z9 3
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2018
VL 48
IS 5
BP 1056
EP 1076
DI 10.1002/spe.2569
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC4BJ
UT WOS:000429727600004
DA 2024-07-18
ER

PT J
AU Heinze, TS
   Amme, W
   Moser, S
AF Heinze, Thomas S.
   Amme, Wolfram
   Moser, Simon
TI Static analysis and process model transformation for an advanced
   business process to Petri net mapping
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE business process; model transformation; Petri net; static analysis;
   workflow graph
ID WORKFLOW NETS; SOUNDNESS
AB Verification of business processes typically relies on Petri net-based process models. While they allow for natural modeling and analysis of aspects such as parallelism and message exchange, such a process model is seldom complete and precise. This is mainly because the available techniques for deriving a Petri net model from the original model neglect process data in favor of feasible verification. In this paper, we present an approach for deriving more precise process models by leveraging a process-to-Petri-net compiler, which takes as input a business process and generates as output a Petri net model for the process. This can be subsequently used for verification. However, in contrast to a conventional compiler, our compiler's objective is not to create the most efficient code but rather to produce a most precise but still effectively verifiable Petri net-based process model.
C1 [Heinze, Thomas S.; Amme, Wolfram] Friedrich Schiller Univ Jena, Inst Comp Sci, Ernst Abbe Pl 2, D-07743 Jena, Germany.
   [Moser, Simon] IBM Res & Dev Boblingen, Schonaicher Str 220, D-71032 Boblingen, Germany.
C3 Friedrich Schiller University of Jena; International Business Machines
   (IBM)
RP Heinze, TS (corresponding author), Friedrich Schiller Univ Jena, Inst Comp Sci, Ernst Abbe Pl 2, D-07743 Jena, Germany.
EM t.heinze@uni-jena.de
OI Heinze, Thomas/0000-0001-8816-7013
CR Amme W., 2009, INT J BUSINESS PROCE, V4, P47
   [Anonymous], 2007, J SOFTW TOOLS TECHNO
   [Anonymous], 2011, OMG STAND
   [Anonymous], 2007, OASIS STAND
   Awad A, 2009, BUS PROC MAN WORKSH
   Barletta M, 2011, SCALABLE COMPUT-PRAC, V12, P1
   BARROS A, 2005, P 3 INT C BUS PROC M
   Bodik R, 1998, ACM SIGPLAN NOTICES, V33, P1, DOI 10.1145/277652.277653
   Calvi A, 2010, P INT S SYMB NUM ALG
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Dutertre B, 2014, LNCS, V8559
   Fahland D, 2011, DATA KNOWL ENG, V70, P448, DOI 10.1016/j.datak.2011.01.004
   Heinze TS, 2011, P INT C SERV OR COMP
   Heinze TS, 2009, P 7 INT C BUS PROC M
   Heinze TS, 2016, LNCS, V9952
   Heinze TS, 2013, CEUR WORKSHOP P, V1029
   Heinze TS, 2014, CEUR WORKSHOP P, V1140
   Heinze TS, 2014, P SOCA 2014
   Heinze TS, 2012, CEUR WORKSHOP P, V847
   Kiepuszewski B, 2000, LNCS, V1789
   Knoop J, 1999, LECT NOTES COMPUTER
   Knoop J, 2000, LECT NOTES COMPUTER, V1781
   Lee J, 1999, ACM SIGPLAN NOTICES, V34, P1, DOI 10.1145/329366.301105
   Lee J, 1997, LNCS, V1366
   Lohmann N, 2011, AWPN 2011
   Lohmann N, 2008, P INT WORKSH WEB SER
   Lohmann N, 2008, DATA KNOWL ENG, V64, P38, DOI 10.1016/j.datak.2007.06.006
   Lohmann N, 2007, LECT NOTES COMPUT SC, V4546, P321
   Mans RS, 2009, LECT NOTES COMPUT SC, V5800, P25, DOI 10.1007/978-3-642-04856-2_2
   Martens A, 2006, ADV INT C TEL INT C
   Monakova G, 2009, P CENTR EUR WORKSH S
   Nguyen HN, 2012, P INT C SERV OR COMP
   Polyvyanyy A, 2012, INFORM SYST, V37, P518, DOI 10.1016/j.is.2011.10.005
   Sadiq W, 2000, INFORM SYST, V25, P117, DOI 10.1016/S0306-4379(00)00012-0
   Sidorova N, 2011, INFORM SYST, V36, P1026, DOI 10.1016/j.is.2011.04.004
   Steffen B, 2011, LECT NOTES COMPUTER
   STEFFEN B, 1996, LECT NOTES COMPUTER
   Thakur A, 2008, P 2008 CGO 6 INT S C
   Trapp M, 2001, THESIS
   van der Aalst Wil M. P., 2013, Transactions on Petri Nets and Other Models of Concurrency VII, P6, DOI 10.1007/978-3-642-38143-0_2
   van der Aalst WMP, 2011, FORM ASP COMPUT, V23, P333, DOI 10.1007/s00165-010-0161-4
   van der Aalst WMP, 2010, COMPUT J, V53, P90, DOI 10.1093/comjnl/bxn064
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van dersAalst WMP, 2002, P 14 INT C ADV INF S
   Vanhatalo J, 2008, P INT C SERV OR COMP
   Verbeek HMW, 2001, COMPUT J, V44, P246, DOI 10.1093/comjnl/44.4.246
   Wagner C, 2012, P CENTR EUR WORKSH S
   Wagner C, 2011, P 3 CENTR EUR WORKSH
   WEGMAN MN, 1991, ACM T PROGR LANG SYS, V13, P181, DOI 10.1145/103135.103136
NR 50
TC 5
Z9 5
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2018
VL 48
IS 1
BP 161
EP 195
DI 10.1002/spe.2523
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FP4WK
UT WOS:000417617500009
DA 2024-07-18
ER

PT J
AU Zaidan, BB
   Zaidan, AA
   Karim, HA
   Ahmad, NN
AF Zaidan, B. B.
   Zaidan, A. A.
   Karim, H. Abdul
   Ahmad, N. N.
TI A new digital watermarking evaluation and benchmarking methodology using
   an external group of evaluators and multi-criteria analysis based on
   "large-scale data'
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multi-criteria analysis; evaluation and benchmarking; digital watermark;
   multi-criteria decision making techniques
ID DECISION-MAKING; HIGH SECURE; DATA HIDDEN; QUALITY; IMAGE; TOPSIS;
   ROBUSTNESS
AB Digital watermarking evaluation and benchmarking are challenging tasks because of multiple evaluation and conflicting criteria. A few approaches have been presented to implement digital watermarking evaluation and benchmarking frameworks. However, these approaches still possess a number of limitations, such as fixing several attributes on the account of other attributes. Well-known benchmarking approaches are limited to robust watermarking. Therefore, this paper presents a new methodology for digital watermarking evaluation and benchmarking based on large-scale data by using external evaluators and a group decision making context. Two experiments are performed. In the first experiment, a noise gate-based digital watermarking approach is developed, and the scheme for the noise gate digital watermarking approach is enhanced. Sixty audio samples from different audio styles are tested with two algorithms. A total of 120 samples were evaluated according to three different metrics, namely, quality, payload, and complexity, to generate a set of digital watermarking samples. In the second experiment, the situation in which digital watermarking evaluators have different preferences is discussed. Weight measurement with a decision making solution is required to solve this issue. The analytic hierarchy process is used to measure evaluator preference. In the decision making solution, the technique for order of preference by similarity to the ideal solution with different contexts (e.g., individual and group) is utilized. Therefore, selecting the proper context with different aggregation operators to benchmark the results of experiment 1 (i.e., digital watermarking approaches) is recommended. The findings of this research are as follows: (1) group and individual decision making provide the same result in this case study. However, in the case of selection where the priority weights are generated from the evaluators, group decision making is the recommended solution to solve the trade-off reflected in the benchmarking process for digital watermarking approaches. (2) Internal and external aggregations show that the enhanced watermarking approach demonstrates better performance than the original watermarking approach. (c) 2016 The Authors. Software: Practice and Experience published by John Wiley & Sons Ltd.
C1 [Zaidan, B. B.; Zaidan, A. A.] Univ Pendidikan Sultan Idris, Fac Arts Comp & Creat Ind, Dept Comp, Tanjong Malim, Perak, Malaysia.
   [Karim, H. Abdul; Ahmad, N. N.] Multimedia Univ, Fac Engn, Cyberjaya, Selangor Darul, Malaysia.
C3 Universiti Pendidikan Sultan Idris; Multimedia University
RP Zaidan, AA (corresponding author), Univ Pendidikan Sultan Idris, Fac Arts Comp & Creat Ind, Dept Comp, Tanjong Malim, Perak, Malaysia.
EM aws.alaa@gmail.com
RI Albahri,, A. S./F-7289-2010; Ahmad, Nurul Nadia/AAD-9839-2020; Karim,
   Hezerul Abdul/C-1279-2009; zaidan, bilal/AAJ-7841-2021
OI Ahmad, Nurul Nadia/0000-0002-1644-6395; zaidan,
   bilal/0000-0001-7412-8267
FU research management and innovation center of the Universiti Pendidikan
   Sultan Idris [2016-00084-109-01]
FX This research was funded by the research management and innovation
   center of the Universiti Pendidikan Sultan Idris, under grant number
   2016-00084-109-01. We would like to express our very great appreciation
   to all authors for their valuable comments and constructive suggestions
   during the planning and development of this research. Their generosity
   with their time is very much appreciated.
CR Abdullateef BN, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-1828-y
   Ahmed Mohamed A., 2010, Journal of Applied Sciences, V10, P59, DOI 10.3923/jas.2010.59.64
   Alam GM, 2010, SCI RES ESSAYS, V5, P3254
   [Anonymous], 2009, P WORLD C ENG
   [Anonymous], 1988, MATH MODELS DECISION
   [Anonymous], 2009, INT J COMPUTER ELECT
   Aruldoss M., 2013, AM J INFORM SYST, V1, P31, DOI [10.12691/ajis-1-1-5, DOI 10.12691/AJIS-1-1-5]
   Augustine RJ, 2006, INT C ART INT KNOWL
   Bandyopadhyay S.-K., 2012, International Journal of Advanced Research in Computer and Communication Engineering, V1, P1
   Boato G, 2009, IEEE T INF FOREN SEC, V4, P207, DOI 10.1109/TIFS.2009.2020362
   Chen CT, 2000, FUZZY SET SYST, V114, P1, DOI 10.1016/S0165-0114(97)00377-1
   Conotter V, 2009, IS T SPIE ELECT IMAG
   Conotter V, 2009, IM PROC ICIP 2009 16
   COSMAN PC, 1994, P IEEE, V82, P919, DOI 10.1109/5.286196
   Cvejic N., 2005, PROC EUROPEAN SIGNAL, P84
   Cvejic N, 2004, INT S COMM INF TECHN
   De Simone F, 2009, QUAL MULT EXP 2009 Q
   Eltahir ME, 2009, INTERNATIONAL CONFERENCE ON FUTURE COMPUTER AND COMMUNICATIONS, PROCEEDINGS, P672, DOI 10.1109/ICFCC.2009.44
   Emami MS, 2012, INT J INNOV COMPUT I, V8, P5067
   Eskicioglu AM, 1995, IEEE T COMMUN, V43, P2959, DOI 10.1109/26.477498
   Fei C, 2004, ANAL DESIGN AUTHENTI, P760
   Ghrare S, 2008, DIAGNOSTIC QUALITY C
   Gordy JD, 2000, THESIS
   Holotyak T, 2005, PROC SPIE, V5681, P673, DOI 10.1117/12.584201
   Huang CH, 2009, INFORM SCIENCES, V179, P791, DOI 10.1016/j.ins.2008.10.035
   Kather S.-A., 2012, International Journal of Computer Applications, V46, P1
   Khalifa O.-O., 2010, International Journal of Computer Science and Network Security (IJCSNS), V9, P294
   Kiah M. M., 2011, International Journal of Physicial Sciences, V6, P3837
   Korhonen J, 2010, IM PROC ICIP 2010 17
   Kraetzer C, 2007, P 2 WAVILA CHALL 2 W
   Lang A, 2007, P 2 WAVILA CHALL 2 W
   Lashkari A.-H., 2012, International Journal of New Computer Architectures and Their Applications, V1, P198
   Lee H, 1992, SUBJECTIVE EVALUATIO
   Lin ST, 2011, INT J INNOV COMPUT I, V7, P5389
   Mollaghasemi JP-EM, 1997, TECHNICAL BRIEFING M
   Naji A., 2010, World Academy of Science Engineering and Technology, V56, P498
   Naji A. W., 2010, International Journal of Computer Science and Information Security, V3, P73
   Ngan-Le TH, 2010, 2 INT C ADV MULT ATH
   Nikolaidis N, 2002, P EL IM VIS ARTS 200
   Olson DL, 2004, MATH COMPUT MODEL, V40, P721, DOI 10.1016/j.mcm.2004.10.003
   Patil M.-M., 2012, International Journal of Engineering, V1, P1
   Petitcolas FAP, 2000, IEEE SIGNAL PROC MAG, V17, P58, DOI 10.1109/79.879339
   Saaty TL, 2003, MATH COMPUT MODEL, V38, P233, DOI [10.1016/S0895-7177(03)90083-5, 10.1016/S0895-7177(03)00216-4]
   Saaty TL, 2003, EUR J OPER RES, V145, P85, DOI 10.1016/S0377-2217(02)00227-8
   Seng WC, 2009, MALAYS J COMPUT SCI, V22, P64
   Shahreza SS, 2008, AC SPEECH SIGN PROC
   Shih HS, 2007, MATH COMPUT MODEL, V45, P801, DOI 10.1016/j.mcm.2006.03.023
   Singla K., 2012, Research Cell: An International Journal of Engineering Sciences, V6, P25
   Takahashi T, 2007, SEC PRIV COMM NETW W
   Taqa A, 2009, INT J COMPUTER ELECT, V1, P589
   Triantaphyllou E, 2000, INTERFACES PROVIDENC, V44, P81
   Triantaphyllou E., 1998, Encyclopedia of Electrical and Electronics Engineering, V15, P175
   Wang H, 2015, ARXIV150600243
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   Wu DC, 2003, PATTERN RECOGN LETT, V24, P1613, DOI 10.1016/S0167-8655(02)00402-6
   Yas QM, 2017, INT J PATTERN RECOGN, V31, DOI 10.1142/S0218001417590029
   Yiqing L, 2008, AC SPEECH SIGN PROC
   Yoon P., 1995, MULTIPLE ATTRIBUTE D
   Yue ZL, 2011, KNOWL-BASED SYST, V24, P146, DOI 10.1016/j.knosys.2010.07.014
   Zaidan A., 2010, International Journal of Computer Theory and Engineering, P218
   Zaidan AA, 2015, DECIS SUPPORT SYST, V78, P15, DOI 10.1016/j.dss.2015.07.002
   Zaidan AA, 2015, J BIOMED INFORM, V53, P390, DOI 10.1016/j.jbi.2014.11.012
   Zaidan AA, 2010, INT J PHYS SCI, V5, P1776
   Zaidan AA, 2010, SCI RES ESSAYS, V5, P1965
   Zaidan AA, 2009, PROCEEDINGS OF 2009 INTERNATIONAL CONFERENCE ON COMPUTER ENGINEERING AND APPLICATIONS, P482
   Zaidan A. A., 2009, International Journal of Engineering Technology, V1, P63
   Zaidan A. A., 2009, World Academy of Science Engineering and Technology, V54, P468
   Zaker N, 2012, MULTIMED TOOLS APPL, V58, P147, DOI 10.1007/s11042-010-0714-9
   Zanakis SH, 1998, EUR J OPER RES, V107, P507, DOI 10.1016/S0377-2217(97)00147-1
   Zhang HJ, 2007, PROCEEDINGS OF 2007 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P3884
NR 70
TC 57
Z9 57
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2017
VL 47
IS 10
BP 1365
EP 1392
DI 10.1002/spe.2465
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG0OJ
UT WOS:000409457000004
OA hybrid
DA 2024-07-18
ER

PT J
AU Saur, K
   Hicks, M
   Foster, JS
AF Saur, Karla
   Hicks, Michael
   Foster, Jeffrey S.
TI C-strider: type-aware heap traversal for C
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE programming tools; dynamic analysis; run-time systems; heap traversal
AB Researchers have proposed many tools and techniques that work by traversing the heap, including checkpointing systems, heap profilers, heap assertion checkers, and dynamic software updating systems. Yet building a heap traversal for C remains difficult, and to our knowledge, extant services have used their own application-specific traversals. This paper presents C-strider, a framework for writing C heap traversals and transformations. Writing a basic C-strider service requires implementing only four callbacks; C-strider then generates a program-specific traversal that invokes the callbacks as each heap location is visited. Critically, C-strider is type aware - it tracks types as it walks the heap, so every callback is supplied with the exact type of the associated location. We used C-strider to implement heap serialization, dynamic software updating, heap checking, and profiling, and then applied the resulting traversals to several programs. We found that C-strider requires little programmer effort, and the resulting services are efficient and effective. Copyright (c) 2015John Wiley & Sons, Ltd.
C1 [Saur, Karla; Hicks, Michael; Foster, Jeffrey S.] Univ Maryland, Dept Comp Sci, AV Williams Bldg, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Saur, K (corresponding author), Univ Maryland, Dept Comp Sci, AV Williams Bldg, College Pk, MD 20742 USA.
EM ksaur@umd.edu
OI Hicks, Michael/0000-0002-2759-9223
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1116740] Funding Source: National Science
   Foundation
CR Aftandilian EE, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P235, DOI 10.1145/1542476.1542503
   [Anonymous], 2002, TECHNICAL REPORT
   [Anonymous], CYCLONE SAFE DIALECT
   Arnold M, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P143
   Baumann Andrew., 2005, Proceedings of the USENIX Annual Technical Conference (USENIX '05), P32
   Blumofe RD, 1999, J ACM, V46, P720, DOI 10.1145/324133.324234
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   Condit J, 2007, LECT NOTES COMPUT SC, V4421, P520
   Demsky B, 2005, PROC INT CONF SOFTW, P176
   Ferrari A., 2000, Cluster Computing, V3, P63, DOI 10.1023/A:1019067801346
   Freyther H., memprof
   Hayden CM, 2014, ACM T PROGR LANG SYS, V36, DOI 10.1145/2629460
   Hinze R, 2007, P 2006 INT C DAT GEN, P150
   Jump M, 2009, ISMM'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P119
   LITZKOW M, 1997, UWCSTR1346
   MAKRIS K., 2009, P 2009 C USENIX ANN, P31
   Mihalicza J., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P457, DOI 10.1109/ICSM.2011.6080813
   Neamtiu I, 2006, ACM SIGPLAN NOTICES, V41, P72, DOI 10.1145/1133981.1133991
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Petroni NL, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P103
   Reichenbach C, 2010, ACM SIGPLAN NOTICES, V45, P256, DOI 10.1145/1932682.1869482
   Soules CraigA. N., 2003, System support for online reconfiguration
   Vechev Martin., 2010, ISMM '10, P41, DOI DOI 10.1145/1806651.1806658
   Zhou F, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P45
NR 24
TC 5
Z9 6
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2016
VL 46
IS 6
BP 767
EP 788
DI 10.1002/spe.2332
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK1WU
UT WOS:000374706600003
DA 2024-07-18
ER

PT J
AU Fredriksson, K
   Kilpeläinen, P
AF Fredriksson, Kimmo
   Kilpelainen, Pekka
TI Practically efficient array initialization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE array; constant-time initialization; performance; word-level
   parallelism; cache-efficiency; experimentation
AB Initialization of an array, out of which only a small initially unknown portion will eventually be used, is a frequent need in programming. A folklore solution for initializing an array of n entries in constant time uses 2nremvoelog2n extra bits to realize a stack of back pointers to the actually used entries of the array. Navarro has given a succinct version of this technique, which requires only n + o(n) bits of auxiliary storage. We describe, analyze, and experimentally compare these solutions and their space-efficient but theoretically suboptimal alternatives based on a simple bitmap for keeping track of the array entries which have been assigned a value. Experimental results suggest that each of the methods has its niche of excellence, which are roughly as follows: the theoretically optimal solutions based on a stack of back pointers perform in general best on sparse arrays, whose access frequency is less than 1% of the number of their entries. Brute-force initialization of the entire array seems generally to give the best overall performance for dense arrays whose access frequency is over 10% of their size. For the remaining cases of arrays with 1-10% access frequency, the methods which use a simple bitmap appear to give the best performance. The experiments show that the choice of a suitable implementation may yield substantial, up to hundreds of times speed-ups in the performance of initializable array operations. Copyright (c) 2015 John Wiley & Sons Ltd.
C1 [Fredriksson, Kimmo; Kilpelainen, Pekka] Univ Eastern Finland, Sch Comp, Kuopio, Finland.
C3 University of Eastern Finland
RP Kilpeläinen, P (corresponding author), Univ Eastern Finland, Sch Comp, Kuopio, Finland.
EM Pekka.T.Kilpelainen@uef.fi
CR AGGARWAL A, 1988, COMMUN ACM, V31, P1116, DOI 10.1145/48529.48535
   Aho A.V., 1986, COMPILERS PRINCIPLES
   Aho AV., 1974, DESIGN ANAL COMPUTER
   AIGNER M., 2010, Proofs from THE BOOK, V4th
   [Anonymous], 2009, ACM J EXPT ALGORITHM
   [Anonymous], 2004, DYNAMIC BINARY ANAL
   AOE JI, 1992, INFORM SCIENCES, V64, P95, DOI 10.1016/0020-0255(92)90113-M
   Bayer R., 1972, Acta Informatica, V1, P173, DOI 10.1007/BF00288683
   Bender MA, 2005, SIAM J COMPUT, V35, P341, DOI 10.1137/S0097539701389956
   Bentley J.L., 1989, PROGRAMMING PEARLS
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Briggs P., 1993, ACM Letters on Programming Languages and Systems, V2, P59, DOI 10.1145/176454.176484
   Brodnik A, 1999, SIAM J COMPUT, V28, P1627, DOI 10.1137/S0097539795294165
   DIETZFELBINGER M, 1994, SIAM J COMPUT, V23, P738, DOI 10.1137/S0097539791194094
   Drepper U., 2007, What every programmer should know about memory, V11
   Fog  A., MICROARCHITECTURE IN
   FREDMAN ML, 1984, J ACM, V31, P538, DOI 10.1145/828.1884
   Frigo M, 2012, ACM T ALGORITHMS, V8, DOI 10.1145/2071379.2071383
   Fujitsu Ltd, 2008, FUJITSU SPARC64 7 PR
   Fujitsu Ltd, 2011, SPARC ENT M SER SERV
   Gog S, 2014, SOFTWARE PRACT EXPER, V44, P1287, DOI 10.1002/spe.2198
   Graham RL., 1989, Concrete Mathematics
   Hagerup T, 1998, LECT NOTES COMPUT SC, V1373, P366
   Jiang XW, 2009, INT CONFER PARA, P169, DOI 10.1109/PACT.2009.31
   Melhorn K., 1984, DATA STRUCTURES ALGO
   Mitzenmacher Michael, 2017, PROBABILITY COMPUTIN
   Navarro G, 2012, CONSTANT TIME UNPUB
   Navarro G., 2002, FLEXIBLE PATTERN MAT
   Navarro G, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2535933
   Nieminen J, 2007, SOFTWARE PRACT EXPER, V37, P669, DOI 10.1002/spe.785
NR 30
TC 5
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2016
VL 46
IS 4
BP 435
EP 467
DI 10.1002/spe.2314
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DG8HR
UT WOS:000372324600001
DA 2024-07-18
ER

PT J
AU Garcia, M
   Ortin, F
   Quiroga, J
AF Garcia, Miguel
   Ortin, Francisco
   Quiroga, Jose
TI Design and implementation of an efficient hybrid dynamic and static
   typing language
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE language implementation; hybrid dynamic and static typing; type
   inference; language design; runtime performance; memory consumption; C#;
   StaDyn
ID INTERSECTION; INFERENCE; SUPPORT; UNION; JAVA
AB Dynamic languages are suitable for developing specific applications where runtime adaptability is an important issue. On the contrary, statically typed languages commonly provide better compile-time type error detection and more opportunities for compiler optimizations. Because both approaches offer different benefits, there exist programming languages that support hybrid dynamic and static typing. However, the existing hybrid typing languages commonly do not gather type information of dynamic references at compile time, missing opportunities for improving compile-time error detection and runtime performance. Therefore, we propose some design principles to implement hybrid typing languages that continue gathering type information of dynamically typed references. This type information is used to perform compile-time type checking of the dynamically typed code and improve its runtime performance. As an example, we have implemented a hybrid typing language following the proposed design principles. We have evaluated the runtime performance and memory consumption of the generated code. The average performance of the dynamic and hybrid typing code is at least 2.53x and 4.51x better than the related approaches for the same platform, consuming less memory resources. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Garcia, Miguel; Ortin, Francisco; Quiroga, Jose] Univ Oviedo, Dept Comp Sci, Oviedo 33007, Spain.
C3 University of Oviedo
RP Ortin, F (corresponding author), Univ Oviedo, Dept Comp Sci, Calvo Sotelo S-N, Oviedo 33007, Spain.
EM francisco.ortin@gmail.com
RI Quiroga, Jose/H-9830-2015; Ortin, Francisco/K-9272-2014; Garcia
   Rodriguez, Miguel/I-1594-2015
OI Quiroga, Jose/0000-0002-1646-4796; Ortin, Francisco/0000-0003-1199-8649;
   Garcia Rodriguez, Miguel/0000-0002-3150-2826
FU Microsoft Research; Department of Science and Innovation (Spain) under
   the National Program for Research, Development and Innovation
   [TIN2011-25978]
FX We thank the anonymous reviewers for their valuable corrections and
   suggestions that have helped us to improve this article. This work was
   partially funded by Microsoft Research to develop the project entitled
   Extending Dynamic Features of the SSCLI, awarded in the Phoenix and
   SSCLI, Compilation and Managed Execution Request for Proposals. This
   work was also funded by the Department of Science and Innovation (Spain)
   under the National Program for Research, Development and Innovation:
   project TIN2011-25978, entitled Obtaining Adaptable, Robust and
   Efficient Software by Including Structural Reflection in Statically
   Typed Programming Languages.
CR ABADI M, 1991, ACM T PROGR LANG SYS, V13, P237, DOI 10.1145/103135.103138
   Abadi Martin, 1995, J FUNCT PROGRAM, V5, P111
   Aiken A, P C FUNCT PROGR LANG, P31
   Anderson C, 2005, LECT NOTES COMPUT SC, V3586, P428
   [Anonymous], OOPSLA WORKSHOP REVI
   [Anonymous], 2007, The Definitive ANTLR Reference: Building Domain-Specific Languages
   [Anonymous], 1989, P 4 INT C FUNCT PROG, DOI DOI 10.1145/99370.99392
   Appel A.W., 2003, MODERN COMPILER IMPL
   BARBANERA F, 1995, INFORM COMPUT, V119, P202, DOI 10.1006/inco.1995.1086
   Bierman G, 2010, LECT NOTES COMPUT SC, V6183, P76, DOI 10.1007/978-3-642-14107-2_5
   Bloom B, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P117
   Bolz Carl Friedrich, 2009, P 4 WORKSH IMPL COMP, P18, DOI [10.1145/1565824.1565827, DOI 10.1145/1565824.1565827]
   CARDELLI L, 1987, SCI COMPUT PROGRAM, V8, P147, DOI 10.1016/0167-6423(87)90019-0
   Cartwright R, P C PROGR LANG DES I, P278
   Chiles B, 2009, DYNAMIC LANGUAGE RUN
   Chugh R, 2012, ACM SIGPLAN NOTICES, V47, P587, DOI 10.1145/2398857.2384659
   Chugh R, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P231
   Colar T., 2014, NETCOLARDB ORM FEATU
   Crane D., 2005, AJAX ACTION
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Davey A, 2014, SPECTER FRAMEWORK BE
   Costa IRD, 2014, COMPUT LANG SYST STR, V40, P37, DOI 10.1016/j.cl.2013.11.001
   de Lamadrid JG, 2012, COMPUT LANG SYST STR, V38, P214, DOI 10.1016/j.cl.2012.04.002
   De Oliveira RB, 2014, BOO PROGRAMMING LANG
   Dorn B., 2005, 0516 IOW STAT U DEP
   *ECMA, 2005, ECMA357
   Erich GammaRichard Helm., 1995, Design Patterns: Elements of Reusable Object-Oriented Software
   Flanagan C, P INT WORKSH FDN DEV, P1
   Frank B, 2014, FANTOM LANGUAGE FORM
   Frank BuschmannRegineMeunier., 1996, PATTERN ORIENTED SOF
   Furr Michael, 2009, P 2009 ACM S APPL CO, P1859
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Google Inc, 2014, V8 JAVASCRIPT ENG
   Grech Neville, 2013, Theoretical Aspects of Computing - ICTAC 2013. 10th International Colloquium. Proceedings: LNCS 8049, P195, DOI 10.1007/978-3-642-39718-9_12
   Hackett B, 2012, ACM SIGPLAN NOTICES, V47, P239, DOI 10.1145/2345156.2254094
   Huinette F, 2014, PIKE PROGRAMMING LAN
   Hunt Andrew, 1999, The Pragmatic Programmer: From Journeyman to Master, V1
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Kozmic K., 2014, CASTLE WINDSOR MATUR
   Krintz C, 2014, COLLECTION PHOENIX C
   Kulkarni S, 2012, ACM SIGPLAN NOTICES, V47, P147, DOI 10.1145/2398857.2384628
   Lagorio G, P S APPL COMP SAC, P1429
   Leavens GT, 2006, 0518A IOW STAT U DEP
   Lilja D.J., 2005, Measuring Computer Performance: A Practitioner's Guide
   Redondo JM, 2013, J SYST SOFTWARE, V86, P278, DOI 10.1016/j.jss.2012.08.016
   McEvoy P., 2014, BRAIL VIEW ENGINE MO
   Meijer E, P OOPSLA WORKSH REV, P1
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Microsoft, 2014, WIND MAN INSTR
   Microsoft, 2014, NET COMP PLATF ROSL
   MicrosoftTechnet, 2014, WIND SERV TECHC WIND
   MILNER R, 1978, J COMPUT SYST SCI, V17, P348, DOI 10.1016/0022-0000(78)90014-4
   Mozilla, 2014, SPIDERMONKEY JAVASCR
   Muchnick S., 1997, ADV COMPILER DESIGN
   Neville Grech, 2013, THESIS
   Odersky M., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P146, DOI 10.1145/263699.263715
   Odersky M, 1999, THEOR PRACT OBJ SYST, V5, P35, DOI 10.1002/(SICI)1096-9942(199901/03)5:1<35::AID-TAPO4>3.0.CO;2-4
   Olmos K, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P141, DOI 10.1109/SCAM.2003.1238040
   Ortin F, 2004, J SYST SOFTWARE, V71, P229, DOI 10.1016/S0164-1212(02)00157-7
   Ortin F, 2010, IET SOFTW, V4, P268, DOI 10.1049/iet-sen.2009.0070
   Ortin F, P IEEE INT C PROGR I, P993
   Ortin F, 2014, DESIGN IMPLEMENTATIO
   Ortin F, 2013, INF INT INTERDISCIP, V16, P8731
   Ortin F, 2007, IEEE T EDUC, V50, P273, DOI 10.1109/TE.2007.901983
   Ortin F, 2013, COMM COM INF SC, V275, P16
   Ortin F, 2014, IEEE SOFTWARE, V31, P81, DOI 10.1109/MS.2013.46
   Ortin F, 2013, ADV INTELL SYST, V206, P703, DOI 10.1007/978-3-642-36981-0_65
   Ortin F, 2014, INFORM SOFTWARE TECH, V56, P199, DOI 10.1016/j.infsof.2013.09.002
   Ortin F, 2011, ENASE 2011: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P15
   Ortin F, 2011, COMPUT J, V54, P1901, DOI 10.1093/comjnl/bxr067
   Ortin F, 2011, INFORM PROCESS LETT, V111, P278, DOI 10.1016/j.ipl.2010.12.006
   Ortin F, 2009, SCI COMPUT PROGRAM, V74, P836, DOI 10.1016/j.scico.2009.04.001
   Paterson M.S., 1976, STOC 76, P181
   Pierce B.C., 1992, CMUCS91106
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Redondo JM, 2008, INT J SOFTW ENG KNOW, V18, P759, DOI 10.1142/S021819400800388X
   Robinson J. A., 1971, Machine Intelligence Volume 6, P63
   Siegel J., 1996, COBRA FUNDAMENTALS P
   Siek J, 2007, LECT NOTES COMPUT SC, V4609, P2
   Siek Jeremy G., 2008, P 2008 S DYN LANG DL, P7
   Siek JG, 2006, SCHEME FUNCTIONAL PR, P1
   THATTE SR, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P367, DOI 10.1145/96709.96747
   Thomas D., 2005, AGILE WEB DEV RAILS
   Thomas Dave., 2004, PROGRAMMING RUBY, Vfirst
   Tobin-Hochstadt S, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P395, DOI 10.1145/1328438.1328486
   Torgersen M., 2009, NEW FEATURES C 4 0
   Van Rossum G, 2003, Python Language Reference Manual
   Vick P., 2007, MICROSOFT VISUAL BAS
   Vitousek MM, 2013, GNARLY DESIGN IMPLEM
   Vitousek MM, 2010, THESIS
   Wagner B, 2013, LOCAL TYPE INFERENCE
   Watt D, 2007, PROGRAMMING LANGUAGE
   WEICKER RP, 1984, COMMUN ACM, V27, P1013, DOI 10.1145/358274.358283
   Wrigstad T, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P377, DOI 10.1145/1706299.1706343
NR 94
TC 5
Z9 5
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2016
VL 46
IS 2
BP 199
EP 226
DI 10.1002/spe.2291
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA6HP
UT WOS:000367904000003
DA 2024-07-18
ER

PT J
AU Baude, F
   Henrio, L
   Ruz, C
AF Baude, Francoise
   Henrio, Ludovic
   Ruz, Cristian
TI Programming distributed and adaptable autonomous componentsthe
   GCM/ProActive framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE component-based software engineering; reconfiguration; distribution;
   autonomicity
ID MODEL; ARCHITECTURE; PARALLEL
AB Component-oriented software has become a useful tool to build larger and more complex systems by describing the application in terms of encapsulated, loosely coupled entities called components. At the same time, asynchronous programming patterns allow for the development of efficient distributed applications. While several component models and frameworks have been proposed, most of them tightly integrate the component model with the middleware they run upon. This intertwining is generally implicit and not discussed, leading to entangled, hard to maintain code. This article describes our efforts in the development of the GCM/ProActive framework for providing distributed and adaptable autonomous components. GCM/ProActive integrates a component model designed for execution on large-scale environments, with a programming model based on active objects allowing a high degree of distribution and concurrency. This new integrated model provides a more powerful development, composition, and execution environment than other distributed component frameworks. We illustrate that GCM/ProActive is particularly adapted to the programming of autonomic component systems, and to the integration into a service-oriented environment. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Baude, Francoise; Henrio, Ludovic] Univ Nice Sophia Antipolis, CNRS, I3S, UMR 7271, Nice, France.
   [Ruz, Cristian] Pontificia Univ Catolica Chile, Santiago, Chile.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Cote
   d'Azur; Pontificia Universidad Catolica de Chile
RP Ruz, C (corresponding author), Pontificia Univ Catolica Chile, Dept Comp Sci, Ave Vicuna Mackenna 4860, Santiago, Chile.
EM cruz@ing.puc.cl
RI Ruz, Cristian/D-3939-2016
OI Ruz, Cristian/0000-0003-3149-7796
CR Agha G, 1986, ACTORS MODEL CONCURR
   ALDINUCCI M, 2005, PARCO 2005, P145
   Aldinucci M, 2009, LECT NOTES COMPUT SC, V5704, P678, DOI 10.1007/978-3-642-03869-3_64
   Aldinuccis M, 2009, P INT PAR DISTR PROC
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   [Anonymous], 2010, 102830 ETSI TS 4
   [Anonymous], 2011, SCA POLICY FRAMEWORK
   [Anonymous], 2008, 102828 ETSI TS 2
   [Anonymous], 2007, SERVICE COMPONENT AR
   [Anonymous], 2008, 102827 ETSI TS 1
   [Anonymous], 2009, 102829 ETSI TS
   Baduels L, 2006, GRID COMPUTING SOFTW
   Barros T, 2007, ELECTRON NOTES THEOR, V182, P3, DOI 10.1016/j.entcs.2006.09.028
   Baude F, 2008, MAKING GRIDS WORK, P31, DOI 10.1007/978-0-387-78448-9_3
   Baude F, 2009, ANN TELECOMMUN, V64, P5, DOI 10.1007/s12243-008-0068-8
   Baudes F, 2011, TECHNICAL REPORT
   Baumeister H, 2006, ELECTRON NOTES THEOR, V160, P75, DOI 10.1016/j.entcs.2006.05.015
   Bertrand F., 2005, P 19 INT PAR DISTR P, p40b
   Boulifas RA, 2011, LECT NOTES COMPUTER
   Broto L, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P1658
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Brunetons E, 2004, FRACTAL COMPONENT MO
   Buisson J., 2005, International Conference ParCo, P65
   Bures T, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P40, DOI 10.1109/SERA.2006.62
   Bures T, 2008, SEVENTH INTERNATIONAL CONFERENCE ON COMPOSITION-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P138, DOI 10.1109/ICCBSS.2008.17
   Buress T, 2013, DEECO ENSEMBLE BASED, P81
   Cansados A, 2008, ELECT NOTES THEORETI, P155
   Caromel D, 2004, ACM SIGPLAN NOTICES, V39, P123, DOI 10.1145/982962.964012
   CharronBost B, 1996, DISTRIB COMPUT, V9, P173, DOI 10.1007/s004460050018
   Collets P, 2007, TECHNICAL REPORT
   Coulson G, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1328671.1328672
   Daneluttos M, 2012, LECT NOTES COMPUTER, V7155, P128, DOI 10.1007/978-3-642-29737-3_16
   David PC, 2006, LECT NOTES COMPUT SC, V4089, P82
   David PC, 2009, ANN TELECOMMUN, V64, P45, DOI 10.1007/s12243-008-0073-y
   Denis A, 2003, CONCURR COMP-PRACT E, V15, P891, DOI 10.1002/cpe.738
   Filali I., 2011, AP2PS 2011 3 INT C A, P39
   Fouquet F., 2012, DISTRIBUTED APPL INT, V2012, P16
   Gannon D, 2005, CLUSTER COMPUT, V8, P271, DOI 10.1007/s10586-005-4094-2
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Gauvrit G, 2010, EUROMICRO CONF PROC, P211, DOI 10.1109/SEAA.2010.25
   Ghosh D, 2012, J INTERNET SERV APPL, V3, P23, DOI 10.1007/s13174-011-0042-y
   Gueye SMK, 2013, LECT NOTES COMPUT SC, V7890, P75, DOI 10.1007/978-3-642-38493-6_6
   Guptas M., 2012, AKKA ESSENTIALS
   Hahnle Reiner, 2013, Lecture Notes in Computer Science, V7542, P109, DOI [10.1007/978-3-642-35887, DOI 10.1007/978-3-642-35887]
   Haller P, 2009, THEOR COMPUT SCI, V410, P202, DOI 10.1016/j.tcs.2008.09.019
   HALSTEAD RH, 1985, ACM T PROGR LANG SYS, V7, P501, DOI 10.1145/4472.4478
   Henrio Ludovic, 2008, Formal Methods for Components and Objects. 7th International Symposium, FMCO 2008. Revised Lectures, P159
   Henrio L, 2013, LECT NOTES COMPUT SC, V7890, P90, DOI 10.1007/978-3-642-38493-6_7
   Henrio L, 2012, SCI COMPUT PROGRAM, V77, P823, DOI 10.1016/j.scico.2010.12.008
   Henrios L, 2008, P WORKSH COMP BAS HI
   Hnetynka P, 2006, LECT NOTES COMPUT SC, V4063, P352
   Hornbeck P., 2001, CURR PROTOC MOL BIOL, P1121
   Johnsen EB, 2006, THEOR COMPUT SCI, V365, P23, DOI 10.1016/j.tcs.2006.07.031
   Joolia A., 2005, P 5 WORK IEEE IFIP C, P131
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Lavender R.G., 1996, PATTERN LANGUAGES PR, P483
   Léger M, 2010, LECT NOTES COMPUT SC, V6092, P74, DOI 10.1007/978-3-642-13238-4_5
   Lienhardts M, 2011, P 9 INT C FORM METH, P165, DOI 10.1007/978-3-642-25271-6_9
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Malawskis M, 2005, MOCCA DISTRIBUTED CC
   Manias E, 2012, CONCURR COMP-PRACT E, V24, P1461, DOI 10.1002/cpe.2822
   Masek K, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P47, DOI 10.1109/SEAA.2009.58
   Mathias E, 2009, LECT NOTES COMPUT SC, V5704, P691, DOI 10.1007/978-3-642-03869-3_65
   Monroes R., 2001, CMUCS98163
   Moreira RS, 2004, 24TH INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P320, DOI 10.1109/ICDCSW.2004.1284049
   Nunos G, 2013, INT J PARALLEL PROG, P1, DOI 10.1007/s10766-013-0264-7
   Parashar M, 2006, CLUSTER COMPUT, V9, P161, DOI 10.1007/s10586-006-7561-5
   Pérez C, 2003, INT J HIGH PERFORM C, V17, P417, DOI 10.1177/10943420030174006
   Proactive.inria.fr, 2004, PROACTIVE PAR SUIT
   Ruzs C, 2012, INT J ADV INTELLIGEN, V5, P32
   Schäfer J, 2010, LECT NOTES COMPUT SC, V6183, P275, DOI 10.1007/978-3-642-14107-2_13
   Seinturier L, 2006, LECT NOTES COMPUT SC, V4063, P139
   Seinturier L, 2012, SOFTWARE PRACT EXPER, V42, P559, DOI 10.1002/spe.1077
   Sicard S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P101, DOI 10.1145/1368088.1368103
   Sinreich D., 2006, Technical Report,
   Szyperskis C., 2002, COMPONENT SOFTWARE O
   Tibermacine C, 2007, LECT NOTES COMPUT SC, V4422, P140
   Wangs N, 2001, OVERVIEW CORBA COMPO
NR 79
TC 11
Z9 11
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2015
VL 45
IS 9
BP 1189
EP 1227
DI 10.1002/spe.2270
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM9FH
UT WOS:000358012100002
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Choi, D
   Kim, P
AF Choi, Dongjin
   Kim, Pankoo
TI Identifying the most appropriate expansion of acronyms used in wikipedia
   text
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE acronyms; acronym disambiguation; acronym expansion; information
   extraction; text mining
AB During the past several years, many studies have been conducted to determine the expansions (the expanded forms or definitions) of acronyms used in specific texts by using linguistic and syntactical approaches to overcome disambiguation problems. An acronym is an abbreviation formed of the initial components of multiple words. Using only these initial parts can result in huge mistakes when a machine conducts experiments to determine an acronym's meaning in given texts. Finding expansions of acronyms is currently not a major concern. However, identifying how a polysemous acronym is precisely being used in a specific text is difficult. To solve disambiguation problem acronyms have, this paper proposes a method to identify the most appropriate expansions of an acronym by analysing co-occurrence words found in articles on Wikipedia. Our goal is not to find an acronym's definition or expansion but to identify the most appropriate expansion of a given acronym as it is used in a given text. Through experiments, we demonstrate the proposed method's efficiency and performance by comparing several results. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Choi, Dongjin; Kim, Pankoo] Chosun Univ, Dept Comp Engn, 375 Seoseok Dong, Gwangju, South Korea.
C3 Chosun University
RP Kim, P (corresponding author), Chosun Univ, Dept Comp Engn, 375 Seoseok Dong, Gwangju, South Korea.
EM pkkim@chosun.ac.kr
FU National Research Foundation of Korea (NRF) - Ministry of Education
   [2013R1A1A2A10011667]
FX This research was supported by Basic Science Research Program through
   the National Research Foundation of Korea (NRF) funded by the Ministry
   of Education (no. 2013R1A1A2A10011667).
CR [Anonymous], IT CONVERGENCE PRACT
   Cattaneo G, 2014, INT CON ADV INFO NET, P366, DOI 10.1109/AINA.2014.47
   Choi D, 2013, P 11 WSEAS INT C ART, P83
   Choi D, 2013, 2013 SEVENTH INTERNATIONAL CONFERENCE ON INNOVATIVE MOBILE AND INTERNET SERVICES IN UBIQUITOUS COMPUTING (IMIS 2013), P217, DOI 10.1109/IMIS.2013.44
   Choi D, 2014, J NETW COMPUT APPL, V38, P16, DOI 10.1016/j.jnca.2013.05.007
   Choi D, 2011, COMM COM INF SC, V184, P37
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dongjin Choi, 2012, 2012 15th International Conference on Network-Based Information Systems (NBiS 2012), P739, DOI 10.1109/NBiS.2012.96
   Dongjin Choi, 2012, Multidisciplinary Research and Practice for Information Systems. International Cross-Domain Conference and Workshop on Availability, Reliability and Security (CD-ARES 2012). Proceedings, P479, DOI 10.1007/978-3-642-32498-7_36
   Fellbaum C., 1998, WORDNET ELECT LEXICA
   Frantzi K., 2000, Int. J. Digit. Libr., V3, P115
   Gaudan S, 2005, BIOINFORMATICS, V21, P3658, DOI 10.1093/bioinformatics/bti586
   Hwang M, 2013, J COMPUTING INFORM, V22, P1001
   Hwang M, 2011, IEEE T KNOWL DATA EN, V23, P845, DOI 10.1109/TKDE.2010.163
   Hwang M, 2010, INFORMATION-TOKYO, V13, P1599
   Hwang M, 2011, AUTON SYST, P347, DOI 10.1007/978-3-0348-0031-0_18
   Ji X, 2008, LECT NOTES COMPUT SC, V4976, P371
   Kong H., 2005, INT C NEXT GEN WEB S, P22
   Limsopatham N, 2011, PROCEEDINGS OF THE 34TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR'11), P1213
   OKAZAKI N, 2006, P 5 INT C LANG RES E, P959
   OKAZAKI N, 2006, P 21 INT C COMP LING, P643
   Osiek BA, 2010, IEEE T BIO-MED ENG, V57, P2677, DOI 10.1109/TBME.2010.2051033
   Pakhomov S, 2002, SEMISUPERVISED MAXIM, P160
   Park Y, 2001, PROCEEDINGS OF THE 2001 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P126
   Sánchez D, 2011, APPL INTELL, V34, P311, DOI 10.1007/s10489-009-0197-4
   Xu J, 2005, P 4 INT C MACH LEARN, P18
   Zahariev M, 2004, KNOWL INF SYST, V6, P366, DOI 10.1007/s10115-003-0105-x
NR 27
TC 3
Z9 3
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2015
VL 45
IS 8
SI SI
BP 1073
EP 1086
DI 10.1002/spe.2296
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM6JB
UT WOS:000357793500004
DA 2024-07-18
ER

PT J
AU Estébanez, C
   Saez, Y
   Recio, G
   Isasi, P
AF Estebanez, Cesar
   Saez, Yago
   Recio, Gustavo
   Isasi, Pedro
TI Performance of the most common non-cryptographic hash functions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distribution of outputs; modulo prime; avalanche effect;
   Non-cryptographic hash functions; avalanche matrices; collision
   resistance
AB Non-cryptographic hash functions (NCHFs) have an immense number of applications, ranging from compilers and databases to videogames and computer networks. Some of the most important NCHF have been used by major corporations in commercial products. This practical success demonstrates the ability of hashing systems to provide extremely efficient searches over unsorted sets. However, very little research has been devoted to the experimental evaluation of these functions. Therefore, we evaluated the most widely used NCHF using four criteria as follows: collision resistance, distribution of outputs, avalanche effect, and speed. We identified their strengths and weaknesses and found significant flaws in some cases. We also discuss our conclusions regarding general hashing considerations such as selection of the compression map. Our results should assist practitioners and engineers in making more informed choices regarding which function to use for a particular problem. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Estebanez, Cesar; Saez, Yago; Recio, Gustavo; Isasi, Pedro] Univ Carlos III Madrid, Dept Comp Sci, Madrid 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Estébanez, C (corresponding author), Univ Carlos III Madrid, Off 2-2-A06,Sabatini Bldg,Av Univ 30, Madrid 28911, Spain.
EM cesteban@inf.uc3m.es
RI Saez, Yago/X-8782-2019; Saez, Yago/B-9763-2013
OI Saez, Yago/0000-0002-0998-2907; ISASI, PEDRO/0000-0001-6397-1865
FU Spanish Department of Science and Innovation (Ministerio de Ciencia e
   Innovacion) under the research project Gestion de Movilidad Eficiente y
   Sostenible [TIN2011-28336]
FX This work was funded by the Spanish Department of Science and Innovation
   (Ministerio de Ciencia e Innovacion) under the research project Gestion
   de Movilidad Eficiente y Sostenible (TIN2011-28336).
CR [Anonymous], 1998, The art of computer programming: Sorting and searching
   [Anonymous], HASH FUNCTIONS
   Appleby A., 2008, MURMURHASH 2 0
   Bellare M, 2004, LECT NOTES COMPUT SC, V3027, P401
   Bertoni G, 2008, LECT NOTES COMPUT SC, V4965, P181
   Bertoni Guido., 2007, ECRYPT HASH WORKSHOP
   Bhattacharyya Anil, 1943, B CALCUTTA MATH SOC, V35, P99
   Biham E, 2006, 2 CRYPT HASH WORKSH
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Crosby SA, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P29
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Fai MTC, 1996, THESIS U AUCKLAND
   Fraser Christopher W., 1995, A retargetable C compiler: Design and implementation
   Goodrich MT, 2009, ALGORITHM DESIGN FDN
   Heileman GL, 1996, DATA STRUCTURES ALGO
   Henke Christian, 2008, Computer Communication Review, V38, P39, DOI 10.1145/1384609.1384614
   Jenkins Robert J., 1997, DR DOBBS J
   Kernighan B.W., 1988, The C Programming Language
   Klink A, 2011, 28 CHAOS COMM C 28C3
   KNOTT GD, 1975, COMPUT J, V18, P265, DOI 10.1093/comjnl/18.3.265
   Lucks S, 2005, LECT NOTES COMPUT SC, V3788, P474
   Martin R, 2004, GOD PARTICLE GRID
   Matsui M, 2005, LECT NOTES COMPUT SC, V3557, P398
   MCKENZIE BJ, 1990, SOFTWARE PRACT EXPER, V20, P209, DOI 10.1002/spe.4380200207
   Mitzenmacher M, 2008, PROCEEDINGS OF THE NINETEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P746
   Monash C, 2009, EBAYS 2 ENORMOUS DAT
   Mulvey Bret., 2007, Hash Functions
   Partow A, 2010, GEN PURPOSE HASH FUN
   Ramakrishna M. V., 1997, Database Systems for Advanced Applications '97. Proceedings of the Fifth International Conference, P215, DOI 10.1142/9789812819536_0023
   Sedgewick Robert., 2001, ALGORITHMS C
   Uzgalis RC, 1992, TECHNICAL REPORT
   Uzgalis RC, 1996, TECHNICAL REPORT
   Vajgel P, 2009, FACEBOOK ENG NOTES
   Valloud A, 2008, HASHING SMALLTALK TH
NR 34
TC 23
Z9 26
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2014
VL 44
IS 6
BP 681
EP 698
DI 10.1002/spe.2179
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH0QS
UT WOS:000335825800002
OA Green Published
DA 2024-07-18
ER

PT J
AU Lago-Fernández, J
   Gil-Castiñeira, F
   González-Castaño, FJ
   Román-Portabales, A
AF Lago-Fernandez, J.
   Gil-Castineira, F.
   Gonzalez-Castano, F. J.
   Roman-Portabales, A.
TI A new approach to authenticating and encrypting Voice over Internet
   Protocol communications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE VoIP security; Electronic Identity; Jitsi; PKI; VoIP authentication;
   ZRTP
ID SECURITY; TRUST
AB Traditionally, call authentication and security have not raised user concerns because wiretapping requires physical access to the phone line and special equipment. However, Voice over Internet Protocol (VoIP) communications are becoming increasingly popular, and there is the perception that they may be easier to intercept or impersonate (thus creating higher demand for security solutions), especially if the connection occurs over wireless links. The Session Initiation Protocol is widely used for managing voice and video communications over the Internet, and the Real-time Transport Protocol is used to carry voice and/or video streams. Session Initiation Protocol, however, was not designed with security in mind and is vulnerable to attacks. Furthermore, there are cases in which it is necessary to authenticate the call participants (e.g., when they are asked to disclose confidential information). There are few practical solutions to this problem, essentially because they require complex infrastructures to manage keys and certificates. In this paper, we solve this problem with a novel approach: the use of national public key infrastructures in combination with national Electronic Identity smart cards, created by governments to execute trusted electronic transactions and establish trusted identities. In addition, we will show how our approach enables new use cases (e.g., institutions - hospitals, banks, government, etc. - can be confident that they exchange confidential information to the intended person and vice versa) and simplifies the steps necessary to secure and authenticate a VoIP communication with ZRTP, simplifying and therefore encouraging the use of secure VoIP communications between authenticated users. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Lago-Fernandez, J.; Gil-Castineira, F.; Gonzalez-Castano, F. J.] Univ Vigo, Dept Enxenaria Telemat, AtlantTIC, Vigo 36310, Pontevedra, Spain.
   [Roman-Portabales, A.] Quobis Networks, O Porrino 36400, Spain.
C3 Universidade de Vigo; atlanTTic
RP Gil-Castiñeira, F (corresponding author), Escola Enxenaria Telecomunicac, Rua Maxwell S-N,Campus Univ, Vigo 36310, Pontevedra, Spain.
EM xil@gti.uvigo.es
RI González-Castaño, Francisco J./D-2637-2018; Gil-Castiñeira,
   Felipe/ABE-6411-2020
OI Gil-Castiñeira, Felipe/0000-0002-5164-0855; Gonzalez-Castano, Francisco
   Javier/0000-0001-5225-8378
FU project grant CALM [TEC2010-21405-C02-01]; project grant SECVOID
   [TSI-020100-2010-144]
FX This work has been partially funded by project grants CALM
   (TEC2010-21405-C02-01) and SECVOID (TSI-020100-2010-144).
CR Andreasen F., 2006, 4568 RFC
   [Anonymous], 2009, PACK BAS MULT COMM S
   [Anonymous], 2004, 3830 RFC
   [Anonymous], 4474 RFC
   [Anonymous], 2004, 3711 RFC
   Barnes M, 2005, 4244 RFC
   Bassil C, 2006, P 2006 INT C WIR COM, P367, DOI [10.1145/1143549.1143622, DOI 10.1145/1143549.1143622]
   Bresciani R, 2009, INT C INT TECHN SEC, P1
   Castiglione A, 2012, COMPUT SECUR, V31, P771, DOI 10.1016/j.cose.2012.06.004
   Castiglione A, 2009, LECT NOTES COMPUT SC, V5692, P50, DOI 10.1007/978-3-642-03964-5_6
   Cheng-Chi Lee, 2002, Operating Systems Review, V36, P46, DOI 10.1145/567331.567335
   Cisco, 2010, CISC 2010 ANN SEC RE
   Danny G, 2011, TECHNICAL REPORT
   Dierks T, 2008, 5246 RFC
   DIFFIE W, 1976, IEEE T INFORM THEORY, V22, P644, DOI 10.1109/TIT.1976.1055638
   Dondeti L, 2007, MIKEYV2 SRTP KEY MAN
   Frankel S., 2011, 6071 RFC IETF, DOI [10.17487/RFC6071, DOI 10.17487/RFC6071]
   Freier Alan O., 2011, RFC 6101
   Furnell SM, 2007, COMPUT SECUR, V26, P410, DOI 10.1016/j.cose.2007.03.001
   Gupta P, 2007, 20th IEEE Computer Security Foundations Symposium (CSFS20), Proceedings, P49, DOI 10.1109/CSF.2007.31
   Handley M, 2006, 4566 RFC
   Heichlinger Alexander, 2010, Identity in the Information Society, V3, P43, DOI 10.1007/s12394-010-0041-3
   Ivov E., 2011, ARCHITECTURE OPEN SO, P139
   Jennings C, 2011, 6072 RFC
   Johnston AB, 2009, ARTECH HSE TELECOM S, P1
   Koolspan, 2008, TECHNICAL REPORT
   Mantoro T., 2010, 2010 INT C INF COMM, pD13, DOI DOI 10.1109/ICT4M.2010.5971895
   McGrew D., 2010, RFC 5764 (Proposed Standard)
   Ministerio de Industria Turismo y Comercio, 2011, TECHNICAL REPORT
   Mueller S, 2002, MCGRAW HILLS TELECOM
   Naumann Ingo, 2008, Network Security, V2008, P9, DOI 10.1016/S1353-4858(08)70097-7
   OSGi Alliance, 2009, OSGI SERV PLATF COR
   Palmieri F, 2009, COMPUT SECUR, V28, P433, DOI 10.1016/j.cose.2009.01.004
   Patsos Dimitrios, 2010, Information Security Technical Report, V15, P13, DOI 10.1016/j.istr.2010.10.007
   Perlman R, 1999, IEEE NETWORK, V13, P38, DOI 10.1109/65.806987
   Peterson, 2004, 3853 RFC
   Petraschek M, 2008, J UNIVERS COMPUT SCI, V14, P673
   Plies A, 2010, 2010 2 INT C ADV MUL, P61, DOI [10.1109/MMEDIA.2010.30, DOI 10.1109/MMEDIA.2010.30]
   Rescorla E., 2003, Guidelines for writing rfc text on security considerations
   Rosenberg J., 2002, 3264 RFC
   Santis AD, 2010, CISIS 2010, P843, DOI [10.1109/CISIS.2010.81, DOI 10.1109/CISIS.2010.81]
   Schooler E., 2002, 3261 RFC
   Schulzrinne H., 2003, RTP TRANSPORT PROTOC
   Segec P, 2011, ADV MULTIMEDIA, V2011, P5
   Seo K., 2005, 4301 RFC, DOI 10.17487/RFC4301
   Sicker D. C., 2004, QUEUE, V2, P56, DOI DOI 10.1145/1028893.1028898
   Stallings W., 2010, Cryptography and Network Security: Principles and Practice, V5
   *VOIPSA, 2005, VOIP SEC PRIV THREAT
   Wu LF, 2009, COMPUT STAND INTER, V31, P286, DOI 10.1016/j.csi.2008.01.002
   Xuan P, 2007, THESIS ROYAL I TECHN
   Yang CH, 2006, TECHNICAL REPORT
   Zimmermann Phil, 2011, ZRTP MEDIA PATH KEY, P2070
NR 52
TC 3
Z9 4
U1 0
U2 9
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2014
VL 44
IS 5
BP 593
EP 619
DI 10.1002/spe.2175
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE3YW
UT WOS:000333915400005
OA Bronze
DA 2024-07-18
ER

PT J
AU Pérez-Díaz, N
   Ruano-Ordas, D
   Fdez-Riverola, F
   Méndez, JR
AF Perez-Diaz, N.
   Ruano-Ordas, D.
   Fdez-Riverola, F.
   Mendez, J. R.
TI Wirebrush4SPAM: a novel framework for improving efficiency on spam
   filtering services
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C framework; plug-in-based development; rule-based evaluation; efficient
   spam filtering; learning schemes
ID CLASSIFICATION
AB This paper introduces Wirebrush4SPAM, a plug-in-based C framework specifically designed for the development of fast spam filters by assembling different antispam schemes and techniques. Wirebrush4SPAM can be used to (i) build, execute and deploy simple spam filters and (ii) develop new techniques that can be easily combined and tested to achieve more accurate antispam models. To construct custom filters, programmers should manage three key concepts: filtering functions, parsers and event listeners. The main features of Wirebrush4SPAM include (i) a plug-in-based design, (ii) cache support for developing new plug-ins, (iii) a smart filter evaluation heuristic for improving filter execution, (iv) configurable rule scheduling and (v) support for domain specific rules. Moreover, Wirebrush4SPAM is 10 times faster than SpamAssassin, which stands for the most popular and highly extensible framework for spam filtering. Wirebrush4SPAM is an open-source project licensed under the terms of GNU lesser general public license and both source code and documentation are publicly available at http://www.wb4spam.org/. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Perez-Diaz, N.; Ruano-Ordas, D.; Fdez-Riverola, F.; Mendez, J. R.] Univ Vigo, Dept Comp Sci, ESEI, Orense 32004, Spain.
C3 Universidade de Vigo
RP Méndez, JR (corresponding author), Univ Vigo, Dept Comp Sci, ESEI, Campus Lagoas, Orense 32004, Spain.
EM moncho.mendez@uvigo.es
RI Méndez Reboredo, José Ramón/F-3993-2016; Fdez-Riverola,
   Florentino/G-1411-2011; Ruano-Ordás, David/G-8482-2017
OI Méndez Reboredo, José Ramón/0000-0002-1935-4760; Fdez-Riverola,
   Florentino/0000-0002-3943-8013; Ruano-Ordás, David/0000-0002-6050-373X
FU Xunta de Galicia, Spain [08TIC041E, 09TIC028E, 10TIC017E]
FX This work was partially funded by the projects Optimizacion de sistemas
   antispam (08TIC041E), Deseno e validacion de filtro antispam intelixente
   baseado en analise contextual ponderado do contido das mensaxes
   (09TIC028E) and Sistema aberto de filtrado antispam para xestores de
   contidos dixitais (10TIC017E) from Xunta de Galicia, Spain.
CR AMDAHL GM, 1967, P AFIPS SPRING JOINT
   [Anonymous], 2822 RFC
   Ben-Itzhak Y, 2010, P 26 CONV EL EL ENG
   Brownlow M., E COMMUNICATION
   Fanning K, 2005, J CORP ACCOUNT FINAN, V16, P29, DOI 10.1002/jcaf.20132
   Fdez-Riverola F, 2007, DECIS SUPPORT SYST, V43, P722, DOI 10.1016/j.dss.2006.11.012
   Fourment M, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-82
   Garg A, DIT05089 U TRENT DEP
   Hafiz M, 2008, SOFTWARE PRACT EXPER, V38, P1569, DOI 10.1002/spe.880
   Leather H., 2011, LIBPLUGIN PROJECT
   Lehtinen J., C PLUFF PLUGIN FRAME
   LEVINE J., DNS Blacklists and Whitelists
   Méndez JR, 2009, EXPERT SYST APPL, V36, P1601, DOI 10.1016/j.eswa.2007.11.037
   Message Labs Ltd, MESSAGELABS INT 2010
   Pakrash VV, VIPULS RAZOR
   Song Y, 2009, SOFTWARE PRACT EXPER, V39, P1003, DOI 10.1002/spe.925
   Symantec Corporation, SYM BRIGHTM GAT
   Ved Prakash V, 2005, TECHNICAL REPORT
   Wong M., 2006, Sender policy framework (SPF) for authorizing use of domains in e-mail, version 1, RFC 4408
   Xu D., 2004, P INT C COMP COMM CO
   Zahariev I., C VS PYTHOS VS PHP P
NR 21
TC 15
Z9 15
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2013
VL 43
IS 11
SI SI
BP 1299
EP 1318
DI 10.1002/spe.2135
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 233IF
UT WOS:000325561000004
OA Bronze
DA 2024-07-18
ER

PT J
AU Jan, M
   Jouvray, C
   Kordon, F
   Kung, A
   Lalande, J
   Loiret, F
   Navas, J
   Pautet, L
   Pulou, J
   Radermacher, A
   Seinturier, L
AF Jan, Mathieu
   Jouvray, Christophe
   Kordon, Fabrice
   Kung, Antonio
   Lalande, Jimmy
   Loiret, Frederic
   Navas, Juan
   Pautet, Laurent
   Pulou, Jacques
   Radermacher, Ansgar
   Seinturier, Lionel
TI Flex-eWare: a flexible model driven solution for designing and
   implementing embedded distributed systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE embedded system; software component; flexibility; model driven
   engineering
ID SUPPORT
AB The complexity of modern embedded systems increases as they incorporate new concerns such as distribution and mobility. These new features need to be considered as early as possible in the software development life cycle. Model driven engineering promotes an intensive use of models and is now widely seen as a solution to master the development of complex systems such as embedded ones. Component-based software engineering is another major trend that gains acceptance in the embedded world because of its properties such as reuse, modularity, and flexibility. This article proposes the Flex-eWare component model (FCM) for designing and implementing modern embedded systems. The FCM unifies model driven engineering and component-based software engineering and has been evaluated in several application domains with different requirements: wireless sensor networks, distributed client/server applications, and control systems for electrical devices. This approach highlights a new concept: flexibility points that arise at several stages of the development process, that is, in the model (design phase), in the execution platform, and during the execution itself. This flexibility points are captured with model libraries that can extend the FCM. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Jouvray, Christophe; Kung, Antonio] TRIALOG, F-75008 Paris, France.
   [Kordon, Fabrice] Univ Paris 06, CNRS, UMR 7606, LIP6, F-75005 Paris, France.
   [Pautet, Laurent] Telecom ParisTech, F-75013 Paris, France.
   [Navas, Juan; Pulou, Jacques] Orange Labs, F-38243 Meylan, France.
   [Jan, Mathieu; Radermacher, Ansgar] CEA, LIST, Ctr Saclay, F-91191 Gif Sur Yvette, France.
   [Lalande, Jimmy] Schneider Elect Ind Strategy & Innovat, F-38050 Grenoble, France.
   [Seinturier, Lionel] Univ Lille 1, F-59655 Villeneuve Dascq, France.
   [Seinturier, Lionel] LIFL, INRIA, F-59655 Villeneuve Dascq, France.
   [Loiret, Frederic] Royal Inst Technol KTH, Stockholm, Sweden.
C3 Sorbonne Universite; Centre National de la Recherche Scientifique
   (CNRS); IMT - Institut Mines-Telecom; Institut Polytechnique de Paris;
   Telecom Paris; Orange SA; Universite Paris Saclay; CEA; Schneider
   Electric; Universite de Lille; Inria; Royal Institute of Technology
RP Kung, A (corresponding author), TRIALOG, 25 Rue Gen Foy, F-75008 Paris, France.
EM antonio.kung@trialog.com
RI Seinturier, Lionel/ABG-2829-2020
OI Seinturier, Lionel/0000-0003-0006-6088; Jan, Mathieu/0000-0002-3016-8109
FU Agence Nationale de la Recherche (ANR) [ANR-06-TLOG-017 Flex-eWare]
FX The work presented in this article has been partially funded by Agence
   Nationale de la Recherche (ANR) under grant ANR-06-TLOG-017 Flex-eWare.
   We thank the reviewers for their comments which helped in improving the
   quality of the article.
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Allen R., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P71, DOI 10.1109/ICSE.1994.296767
   Anne M, 2009, IEEE I C EMBED SOFTW, P147, DOI 10.1109/ICESS.2009.30
   [Anonymous], 2008, UPNP DEV ARCH VERS 1
   ANR Flex-eWare Project, 2009, FLEX EWAR COMP MOD M
   As-2 Embedded Computing Systems Committee SAE, 2004, AS5506 SAE
   Aussagues C, 2009, INT C PAR COMP PARCO
   Autosar, 2010, AUTOSAR AUT OP SYST
   Broadband Forum, 2007, TR069 BROADB FOR
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Chabrol D, 2005, P INT C PAR DISTR CO, P260
   David V, 1998, LECT NOTES COMPUT SC, V1516, P45
   David V, 2004, 4 AM NUCL SOC INT TO
   Escoffier C, 2007, LECT NOTES COMPUT SC, V4829, P113
   Fassino JP, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P73
   Grimm K, 2003, PROC INT CONF SOFTW, P498, DOI 10.1109/ICSE.2003.1201228
   Jan Mathieu, 2010, 2010 International Symposium on Industrial Embedded Systems (SIES 2010), P128, DOI 10.1109/SIES.2010.5551378
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KNX, 2010, KNX STAND HOM BUILD
   Kung A, 2006, P 4 INT WORKSH JAV T, P144
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Leclercq M, 2007, PROC INT CONF SOFTW, P209
   Lobry Olivier, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P491, DOI 10.1109/COMPSAC.2009.181
   Loiret F, 2009, LECT NOTES COMPUT SC, V5582, P209, DOI 10.1007/978-3-642-02414-6_13
   Lu Tao., 2003, P OOPSLA 2003 WORKSH
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Navas JF, 2009, SINTER 09, P41
   oBIX, 2010, OBIX OP BUILD INF EX
   Object Management Group Inc. (OMG), 2006, DEPL CONF COMP BAS D
   Object Management Group (OMG), 2008, UML PROF MARTE MOD A
   OMG, 2006, CORBA COMP MOD SPEC
   OSEK/VDX Consortium, 2005, OSEK OP SYST VERS 2
   OSGi Alliance, 2005, OSG SERV PLATF COR S
   Papazoglou MP, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P3
   POLAKOVIC J, 2007, 10 INT SIGSOFT S COM, P242
   Richardson Thomas, 2010, Proceedings of the 2010 13th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC 2010). Volume I: Main Symposium, P217, DOI 10.1109/ISORC.2010.19
   Richardson T, 2009, J CLIN EXP NEUROPSYC, P1
   Royce W. W., 1987, P 9 INT C SOFTW ENG
   SAE, 2008, TECHNICAL REPORT
NR 39
TC 7
Z9 7
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2012
VL 42
IS 12
BP 1467
EP 1494
DI 10.1002/spe.1143
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 040FM
UT WOS:000311307500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chan, EYK
   Chan, WK
   Poon, PL
   Yu, YT
AF Chan, Eric Ying Kwong
   Chan, W. K.
   Poon, Pak-Lok
   Yu, Yuen Tak
TI An empirical evaluation of several test-a-few strategies for testing
   particular conditions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE particular condition; software testing; software validation; test-a-few
   strategy; test-once strategy; test case selection
ID TEST-CASE GENERATION; DESIGN
AB Existing specification-based testing techniques often generate comprehensive test suites to cover diverse combinations of test-relevant aspects. Such a test suite can be prohibitively expensive to execute exhaustively because of its large size. A pragmatic strategy often adopted in practice, called test-once strategy, is to identify certain particular conditions from the specification and to test each such condition once only. This strategy is implicitly based on the uniformity assumption that the implementation will process a particular condition uniformly, regardless of other parameters or inputs. As the decision of adopting the test-once strategy is often based on the specification, whether the uniformity assumption actually holds in the implementation needs to be critically assessed, or else the risk of inadequate testing could be non-negligible. As viable alternatives to reduce such a risk, a family of test-a-few strategies for the testing of particular conditions is proposed in this paper. Two rounds of experiments that evaluate the effectiveness of the test-a-few strategies as compared with the test-once strategy are further reported. Our experiments do the following: (1) provide clear evidence that the uniformity assumption often, but not always, holds and that the assumption usually fails to hold when the implementation is faulty; (2) demonstrate that all our proposed test-a-few strategies are statistically more reliable than the test-once strategy in revealing faulty programs; (3) show that random sampling is already substantially more effective than the test-once strategy; and (4) indicate that, compared with other test-a-few strategies under study, choice coverage seems to achieve a better trade-off between test effort and effectiveness. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Poon, Pak-Lok] Hong Kong Polytech Univ, Sch Accounting & Finance, Hong Kong, Hong Kong, Peoples R China.
   [Chan, Eric Ying Kwong; Chan, W. K.; Yu, Yuen Tak] City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University; City University of Hong Kong
RP Poon, PL (corresponding author), Hong Kong Polytech Univ, Sch Accounting & Finance, Hong Kong, Hong Kong, Peoples R China.
EM afplpoon@inet.polyu.edu.hk
RI Chan, Wah Kheong/AGA-6636-2022; Poon, Pak-Lok/ADQ-5493-2022
OI Chan, Wah Kheong/0000-0002-9105-5837; POON, Pak Lok/0000-0003-2840-2418;
   Chan, Wing Kwong/0000-0001-7726-6235
FU Research Grants Council of the Hong Kong Special Administrative Region,
   China [CityU 123206, CityU 123207]; City University of Hong Kong
   [7008039]
FX The work described in this paper was supported in part by grants
   (project numbers: CityU 123206, CityU 123207) from the Research Grants
   Council of the Hong Kong Special Administrative Region, China, and a
   Strategic Research Grant of City University of Hong Kong (project
   number: 7008039).
CR Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   Chan E. Y. K., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P318
   Chen TY, 2004, INFORM SOFTWARE TECH, V46, P887, DOI 10.1016/j.infsof.2004.03.005
   Chen TY, 2003, IEEE T SOFTWARE ENG, V29, P577, DOI 10.1109/TSE.2003.1214323
   Chen TY, 2000, INT J SOFTW ENG KNOW, V10, P647, DOI 10.1142/S0218194000000353
   Cochran W.G. G.M. Cox., 1957, Experimental Design
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Fraser G, 2009, 2009 TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE-PRACTICE AND RESEARCH TECHNIQUES, TAIC PART 2009, P72, DOI 10.1109/TAICPART.2009.20
   Fraser G, 2009, J LOGIC ALGEBR PROGR, V78, P472, DOI 10.1016/j.jlap.2009.01.004
   Grochtmann M., 1993, Software Testing, Verification and Reliability, V3, P63, DOI 10.1002/stvr.4370030203
   Hierons R, 2002, SOFTW TEST VERIF REL, V12, P23, DOI 10.1002/stvr.232
   Jiang B, 2011, SOFTWARE PRACT EXPER, V41, P1073, DOI 10.1002/spe.1092
   Jiang SJ, 2005, ACM SIGPLAN NOTICES, V40, P34, DOI 10.1145/1089851.1089858
   Kuhn R, 2008, CROSSTALK J DEFENSE, V21, P22
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lei Y, 2007, SOFTW TEST VERIF REL, V17, P207, DOI 10.1002/stvr.369
   Lin JW, 2009, INFORM SOFTWARE TECH, V51, P679, DOI 10.1016/j.infsof.2008.11.004
   Liu H, 2009, INFORM SOFTWARE TECH, V51, P546, DOI 10.1016/j.infsof.2008.07.001
   MANDL R, 1985, COMMUN ACM, V28, P1054, DOI 10.1145/4372.4375
   Ngo MN, 2012, SOFTW TEST VERIF REL, V22, P245, DOI 10.1002/stvr.439
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pareto V, 1972, TRANSLATION MANUALE
   SCHROEDER PJ, 2000, P ISSTA 00, P173, DOI DOI 10.1145/347324.349042
   Snelting G, 2006, ACM T SOFTW ENG METH, V15, P410, DOI 10.1145/1178625.1178628
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
   Tracey N, 2000, SOFTWARE PRACT EXPER, V30, P61, DOI 10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9
   Ward M, 2008, SOFTWARE PRACT EXPER, V38, P1273, DOI 10.1002/spe.869
   Ward M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216375
   Yu YT, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P83, DOI 10.1109/QSIC.2003.1319089
   Yu YT, 2001, INT J SOFTW ENG KNOW, V11, P113, DOI 10.1142/S0218194001000475
NR 34
TC 2
Z9 2
U1 0
U2 3
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2012
VL 42
IS 8
BP 967
EP 994
DI 10.1002/spe.1098
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 970MG
UT WOS:000306133400002
DA 2024-07-18
ER

PT J
AU Ryder, BG
   Wiedermann, B
AF Ryder, Barbara G.
   Wiedermann, Ben
TI Language design and analyzability: a retrospective
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE static analysis; programming language design; control flow; data flow;
   program checkers
ID DATA-FLOW ANALYSIS; CALL GRAPH CONSTRUCTION; POINTS-TO ANALYSIS; STATIC
   ANALYSIS; ALGORITHMS; GUIDELINES; CRITERIA
AB There is tension between programming language design for modularity and flexibility of programming and the amenability of the resulting programs to static analysis. At the start of Software Practice and Experience in 1971, most languages in commercial use were procedural (e.g., FORTRAN, ALGOL, PL/I) and on the whole were easier to analyze than languages of today such as JavaScript and Python. Modern languages include dynamic features, which enhance prototyping of approaches, often resulting in programs that are difficult for software tools or humans to understand. Starting with this perspective, we explore the relationship between language features and the ability of static analysis to precisely determine control flow and data flow in programs, thus enabling program optimization, transformation and understanding. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Ryder, Barbara G.; Wiedermann, Ben] Virginia Tech, Dept Comp Sci, Blacksburg, VA 24060 USA.
C3 Virginia Polytechnic Institute & State University
RP Ryder, BG (corresponding author), Virginia Tech, Dept Comp Sci, 2202 Kraft Dr, Blacksburg, VA 24060 USA.
EM ryder@cs.vt.edu
CR AGESEN O, 1995, P EUR C OBJ OR PROGR
   Aiken A, 2003, ACM SIGPLAN NOTICES, V38, P129, DOI 10.1145/780822.781146
   Allen F., 1974, Information Processing 74 (Software), P398
   Allen F. E., 1969, Annual review in automatic programming, vol.5, P239
   ALLEN FE, 1976, COMMUN ACM, V19, P137, DOI 10.1145/360018.360025
   American Standards Association Business Equipment Manufacturers Association (US), 1996, US STAND FORTRAN
   [Anonymous], 1992, Programming Language Design and Implementation (PLDI), DOI DOI 10.1145/143103.143137
   [Anonymous], 1977, Flow Analysis of Computer Programs
   [Anonymous], ACM T MATH SOFTW
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Banning J.P., 1979, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, P29, DOI [10.1145/567752.567756., DOI 10.1145/567752.567756]
   Barth J.M., 1977, POPL, P119
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   CHAN FT, 1987, SOFTWARE PRACT EXPER, V17, P227, DOI 10.1002/spe.4380170306
   CHASE DR, 1990, SIGPLAN NOTICES, V25, P296, DOI 10.1145/93548.93585
   Choi JD, 1993, P 20 ACM SIGPLAN SIG
   Clarke LA, 1996, ACM COMPUT SURV, V28, P203
   COBLEIGH JM, 2007, THESIS U MASSACHUSET
   Cook A. J., 1976, SIGPLAN Notices, V11, P10, DOI 10.1145/987500.987503
   Cooper K., 1985, P 12 S PRINCIPLES PR, P281
   COOPER KD, 1984, SIGPLAN NOTICES, V19, P247, DOI 10.1145/502949.502898
   COOPER KD, 1988, SIGPLAN NOTICES, V23, P57, DOI 10.1145/960116.53996
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Dahl O.-J., 1972, STRUCTURED PROGRAMMI
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   DeRemer F., 1975, SIGPLAN Notices, V10, P114, DOI 10.1145/390016.808431
   DEUTSCH A, 1994, SIGPLAN NOTICES, V29, P230, DOI 10.1145/773473.178263
   EMAMI M, 1994, SIGPLAN NOTICES, V29, P242, DOI 10.1145/773473.178264
   Flanagan C., 2002, P ACM SIGPLAN C PROG
   FLATER DW, 1993, SOFTWARE PRACT EXPER, V23, P617, DOI 10.1002/spe.4380230604
   Forman I. R., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P278
   Fosdick L. D., 1976, 2nd International Conference on Software Engineering, P624
   FOSDICK LD, 1976, COMPUT SURV, V8, P305, DOI 10.1145/356674.356676
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   Fox P, 1979, P SIGNUM C PROGR ENV, P80
   Fox P. A., 1978, SIGNUM Newsletter, V13, DOI 10.1145/1053397.1053400
   Ghiya R., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P1, DOI 10.1145/237721.237724
   Grove D, 2001, ACM T PROGR LANG SYS, V23, P685, DOI 10.1145/506315.506316
   Grove D, 1997, ACM SIGPLAN NOTICES, V32, P108, DOI 10.1145/263700.264352
   HAMLET R, 1981, J SYST SOFTWARE, V2, P89, DOI 10.1016/0164-1212(81)90028-5
   Hecht M. S., 1973, Conference Record of ACM Symposium on Principles of Programming Languages, P207
   Hendren L, 1994, P ACM C PROGR LANG D
   HENDREN LJ, 1993, COMPUT LANG, V19, P119, DOI 10.1016/0096-0551(93)90006-M
   Hind M., 2001, P ACM SIGPLAN SIGSOF
   HOARE CAR, 1973, CSTR73403 STANF U
   Johnson S. C., 1978, COMP SCI TECH REP, P78
   Jones N. D., 1975, Conference Record of the 2nd ACM Symposium on Principles of Programming Languages, P106
   JONES N. D., 1982, P 9 ACM SIGPLAN SIGA, P66, DOI DOI 10.1145/582153.582161
   KAM JB, 1977, ACTA INFORM, V7, P305, DOI 10.1007/BF00290339
   Kernighan B. W., 1975, Software - Practice and Experience, V5, P395, DOI 10.1002/spe.4380050408
   Kernighan B.W., 1988, The C Programming Language
   Kildall G. A., 1973, Conference Record of ACM Symposium on Principles of Programming Languages, P194
   Kirby G, 1998, SOFTWARE PRACT EXPER, V28, P1045, DOI 10.1002/(SICI)1097-024X(199808)28:10<1045::AID-SPE191>3.0.CO;2-F
   KROGH FT, 1987, ACM T MATH SOFTWARE, V13, P183, DOI 10.1145/328512.328526
   LANDI W, 1993, SIGPLAN NOTICES, V28, P56, DOI 10.1145/173262.155096
   Lhoták O, 2006, LECT NOTES COMPUT SC, V3923, P47
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Liang S, 1998, ACM SIGPLAN NOTICES, V33, P36, DOI 10.1145/286942.286945
   Liskov B., 1974, SIGPLAN Notices, V9, P50, DOI 10.1145/942572.807045
   Livshits B., 2005, 3 AS S PROGR LANG SY
   LOMET DB, 1977, IBM J RES DEV, V21, P559, DOI 10.1147/rd.216.0559
   Marlowe T, 1990, ACTA INFORM, V27, P665
   MARLOWE TJ, 1993, SIGPLAN NOTICES, V28, P67, DOI 10.1145/165364.165387
   Might M, P 2010 ACM SIGPLAN C, P305
   Milanova A, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P155, DOI 10.1109/SCAM.2002.1134115
   Milanova A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/566171.566174
   Myers EugeneM., 1981, P 8 ACM SIGPLAN SIGA, P219, DOI 10.1145/567532.567556
   NIELSON F, 1996, ACM COMPUTING SURVEY, V28
   Osterweil L, 1996, ACM COMPUT SURV, V28, P738, DOI 10.1145/242223.242288
   Osterweil L. J., 1976, Software - Practice and Experience, V6, P473, DOI 10.1002/spe.4380060405
   PALSBERG J, 1991, SIGPLAN NOTICES, V26, P146
   Pande H. D., 1996, Static Analysis. Third International Symposium, SAS'96 Proceedings, P238
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Ploedereder E., 1979, Proceedings of the 4th International Conference on Software Engineering, P63
   Randell B., 1979, Proceedings of the 4th International Conference on Software Engineering, P1
   ROSEN BK, 1979, J ACM, V26, P322, DOI 10.1145/322123.322135
   Rosen BK, 1973, 5211 IBM TJ WATS RES
   Routev A, 2001, P C OBJ OR PROGR SYS, P43
   Ryder B, 1996, ACM COMPUTING SURVEY, V28
   Ryder B. G., 1974, Software - Practice and Experience, V4, P359, DOI 10.1002/spe.4380040405
   RYDER BG, 1986, COMPUT SURV, V18, P277, DOI 10.1145/27632.27649
   Ryder BG, 2005, ACM T SOFTW ENG METH, V14, P431, DOI 10.1145/1101815.1101818
   Ryder BG, 2003, LECT NOTES COMPUT SC, V2622, P126
   RYDER BG, 1979, IEEE T SOFTWARE ENG, V5, P216, DOI 10.1109/TSE.1979.234183
   Ryder BG, 2001, ACM T PROGR LANG SYS, V23, P442
   SAGIV M, 1999, P 26 ANN ACM S PRINC
   SCARBOROUGH RG, 1980, IBM J RES DEV, V24, P660, DOI 10.1147/rd.246.0660
   Schryer NL, 1978, SIGNUM NEWSLETTER, V14, P49
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   Shivers O. G., 1991, THESIS CARNEGIE MELL
   SITES RL, 1979, SOFTWARE PRACT EXPER, V9, P571, DOI 10.1002/spe.4380090707
   Smaragdakis Y, 2011, ACM SIGPLAN NOTICES, V46, P17, DOI 10.1145/1925844.1926390
   Spillman T. C., 1971, IFIPS P, P376
   Sreedhar VC, 2000, ACM SIGPLAN NOTICES, V35, P196, DOI 10.1145/358438.349326
   Stroustrup B., 1991, C PROGRAMMING LANGUA, VSecond
   TANENBAUM AS, 1978, SOFTWARE PRACT EXPER, V8, P681, DOI 10.1002/spe.4380080604
   TARJAN RE, 1981, J ACM, V28, P594, DOI 10.1145/322261.322273
   Tichy W. F., 1992, International Conference on Software Engineering, P362, DOI 10.1145/143062.143153
   Tip F, 2000, ACM SIGPLAN NOTICES, V35, P281, DOI 10.1145/354222.353190
   WALLIS PJL, 1982, COMPUT J, V25, P375, DOI 10.1093/comjnl/25.3.375
   Weihl W.E., 1980, Proceedings of the ACM SIGPLAN-SIGACT symposium on Principles of programming languages POPL, P83
   Williams G., 1979, SIGPLAN Notices, V14, P13, DOI 10.1145/872732.806950
   WILSON RP, 1995, SIGPLAN NOTICES, V30, P1, DOI 10.1145/223428.207111
NR 103
TC 0
Z9 2
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2012
VL 42
IS 1
BP 3
EP 18
DI 10.1002/spe.1133
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 869KG
UT WOS:000298596200002
DA 2024-07-18
ER

PT J
AU Gao, KH
   Khoshgoftaar, TM
   Wang, HJ
   Seliya, N
AF Gao, Kehan
   Khoshgoftaar, Taghi M.
   Wang, Huanjing
   Seliya, Naeem
TI Choosing software metrics for defect prediction: an investigation on
   feature selection techniques
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software metric; defect prediction; attribute selection; feature
   ranking; feature subset selection; search-based software engineering;
   software quality
ID ATTRIBUTE SELECTION; CLASSIFICATION; MODELS
AB The selection of software metrics for building software quality prediction models is a search-based software engineering problem. An exhaustive search for such metrics is usually not feasible due to limited project resources, especially if the number of available metrics is large. Defect prediction models are necessary in aiding project managers for better utilizing valuable project resources for software quality improvement. The efficacy and usefulness of a fault-proneness prediction model is only as good as the quality of the software measurement data. This study focuses on the problem of attribute selection in the context of software quality estimation. A comparative investigation is presented for evaluating our proposed hybrid attribute selection approach, in which feature ranking is first used to reduce the search space, followed by a feature subset selection. A total of seven different feature ranking techniques are evaluated, while four different feature subset selection approaches are considered. The models are trained using five commonly used classification algorithms. The case study is based on software metrics and defect data collected from multiple releases of a large real-world software system. The results demonstrate that while some feature ranking techniques performed similarly, the automatic hybrid search algorithm performed the best among the feature subset selection methods. Moreover, performances of the defect prediction models either improved or remained unchanged when over 85% of the software metrics were eliminated. Copyright q (C) 2011 John Wiley & Sons, Ltd.
C1 [Khoshgoftaar, Taghi M.] Florida Atlantic Univ, Boca Raton, FL 33431 USA.
   [Gao, Kehan] Eastern Connecticut State Univ, Willimantic, CT 06226 USA.
   [Wang, Huanjing] Western Kentucky Univ, Bowling Green, KY 42101 USA.
   [Seliya, Naeem] Univ Michigan, Dearborn, MI 48128 USA.
C3 State University System of Florida; Florida Atlantic University;
   Connecticut State University System; Eastern Connecticut State
   University; Western Kentucky University; University of Michigan System;
   University of Michigan
RP Khoshgoftaar, TM (corresponding author), Florida Atlantic Univ, Boca Raton, FL 33431 USA.
EM taghi@cse.fau.edu
CR AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   [Anonymous], 1998, REGRESSION ANAL COUN
   [Anonymous], 9 INT C MUS INF RETR
   [Anonymous], 1997, Lazy Learning
   [Anonymous], P 14 INT C MACH LEAR
   [Anonymous], PATTERN RECOGNITION
   [Anonymous], P 21 INT C SOFTW ENG
   [Anonymous], 2000, SUPPORT VECTOR MACHI
   [Anonymous], 2000, EXPT SOFTWARE ENG AN
   [Anonymous], P 2004 IEEE S COMP I
   [Anonymous], P GRAPH INT GI 05
   Berenson M.L., 1983, INTERMEDIATE STAT ME
   Chen ZH, 2005, IEEE SOFTWARE, V22, P38, DOI 10.1109/MS.2005.151
   Coppin B., 2004, Artificial intelligence illuminated
   Dash M, 2003, ARTIF INTELL, V151, P155, DOI 10.1016/S0004-3702(03)00079-1
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   Forman G., 2003, Journal of Machine Learning Research, V3, P1289, DOI 10.1162/153244303322753670
   Furlanello C, 2003, BMC BIOINFORMATICS, V4, DOI 10.1186/1471-2105-4-54
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Haykin S., 1998, NEURAL NETWORKS COMP
   Hudepohl JP, 1996, IEEE SOFTWARE, V13, P56, DOI 10.1109/52.536459
   Ilczuk G, 2007, COMPUT CARDIOL, V34, P423, DOI 10.1109/CIC.2007.4745512
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Khoshgoftaar TM, 2007, PROC INT C TOOLS ART, P310, DOI 10.1109/ICTAI.2007.46
   Khoshgoftaar TM, 2009, INT J RELIAB QUAL SA, V16, P73, DOI 10.1142/S0218539309003307
   Khoshgoftaar TM, 2003, PROC INT C TOOLS ART, P47, DOI 10.1109/TAI.2003.1250169
   Kim S, 2007, PROC INT CONF SOFTW, P489
   KIRA K, 1992, MACHINE LEARNING /, P249
   Kumar V., 2006, Introduction to Data Mining
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu H, 2005, IEEE T KNOWL DATA EN, V17, P491, DOI 10.1109/TKDE.2005.66
   Mansouri S., 2009, Search Based Software Engineering : A Comprehensive Analysis and Review of Trends Techniques and Applications (Tech. Rep.)
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Oliveira A.L., 1992, P 9 INT C MACHINE LE, P355
   Pfleeger SL, 2008, IEEE SOFTWARE, V25, P32, DOI 10.1109/MS.2008.160
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Rodriguez D, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P667, DOI 10.1109/IRI.2007.4296696
   Rodriguez D, 2007, EUROMICRO CONF PROC, P418
   Sokolova M, 2006, LECT NOTES COMPUT SC, V4304, P1015
   van der Meulen MJP, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P203, DOI 10.1109/ISSRE.2007.12
   VOTTA LG, 1995, PROC INT CONF SOFTW, P277, DOI 10.1145/225014.225040
   Witten I. H., 2005, DATA MINING PRACTICA
   Yue Jiang, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P99, DOI 10.1109/ISSRE.2009.13
NR 46
TC 167
Z9 200
U1 1
U2 25
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2011
VL 41
IS 5
SU SI
BP 579
EP 606
DI 10.1002/spe.1043
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 736RQ
UT WOS:000288512200006
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Al-Gahmi, A
   Cook, J
AF Al-Gahmi, Abdulmalik
   Cook, Jonathan
TI A service-based runtime environment for native applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE runtime environments; dynamic linker; service-based architecture;
   middleware
AB Unlike interpreted application programs that run within the rich runtime environment of their own interpreters, natively compiled application programs are typically thought of as executing on the barebones runtime environment provided by their own operating systems and dynamic linkers. This article presents the notion of a service-based runtime (SBRT) environment for natively compiled application programs, in which the current dynamic linker is only a core service and other extensive middleware-type services are available to the running application program. It then describes a dynamic-linker-based implementation of such an environment, called dISBRT. dISBRT implements a unified interface that allows it to be extensible by means of extension dynamic services. Implemented examples of such services are presented and the performance of dISBRT, when Such example services are deployed, is evaluated. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Al-Gahmi, Abdulmalik; Cook, Jonathan] New Mexico State Univ, Las Cruces, NM 88003 USA.
C3 New Mexico State University
RP Al-Gahmi, A (corresponding author), New Mexico State Univ, Las Cruces, NM 88003 USA.
EM aalgahmi@nmsu.edu
FU National Science Foundation [CCF-0306457]
FX Contract/grant sponsor: National Science Foundation; contract/grant
   number CCF-0306457
CR ALGAHMI A, 2008, SAC 08 P 10 WORK C R, P507
   BEYOND C, 2005, P 5 INT WORKSH SOFTW, P69
   Bollert K., 1999, P WORKSHOP OBJECT OR, P301
   BOLLERT K, 1999, INT WORKSH ASP OR PR, P301
   Bovet D. P., 2005, Understanding the Linux Kernel: from I/O ports to process management
   Buck B, 2000, INT J HIGH PERFORM C, V14, P317, DOI 10.1177/109434200001400404
   Consel C, 1997, ACM SIGPLAN NOTICES, V32, P69, DOI 10.1145/251595.254090
   DREPPER U, 2009, ELF HANDLING THREAD
   Du W., 2004, SC 04, P29
   ERL T, 2007, SOA PRINCIPLES SERVI, P38
   FORMAN IR, 2004, JAVA REFLECTION ACTI, P1
   Foster I., 2008, GRID COMPUTING ENV W, P1
   GRIESEMER R, 2000, SCH N WIRTH ART SIMP, P133
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   LEVINE J.R., 2000, LINKERS LOADERS
   LINDHOLM T, 2009, JAVA VIRTUAL MACHINE
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   MUKHERJEE J, 2005, ARM 05 P 4 WORKSH RE, P1
   Mukhija A, 2005, LECT NOTES COMPUT SC, V3432, P124
   Newmarch J, 2006, FDN JINI 2 PROGRAMMI, P1
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Piessens Frank, 2004, J OBJECT TECHNOLOGY, V3, P27
   PISTOIA M, 2004, ENTERPRISE JAVA TM S, P213
   Reiss S.P., 2003, PROC 2003 ICSE WORKS, P41
   RICHTER J, 2002, APPL MICROSOFT NET F, P16
   SOMMERVILLE I, 2004, SOFTWARE ENG 7E, P267
   *SUN MICR INC, 2009, LINK LIB GUID
   SZYPERSKI C, 2002, COMPONENT SOFTWARE O, P35
   TAMBE S, 2005, P INT C SOFTW MAINT, P4
   TANENBAUM AS, 1997, OPERATING SYSTEMS DE, P48
   THAI TL, 2001, NET FRAMEWORK ESSENT, P12
   THOMAS R, 2009, DYNAMIC LINKING LI 1
   VOLLMANN D, 2009, META CLASSES REFLECT
   Wang YM, 1998, IEEE CONCURR, V6, P8
   YOUNGDALE E, 2009, ELF OBJECT FILE FORM
NR 35
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2010
VL 40
IS 1
BP 73
EP 100
DI 10.1002/spe.951
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 544OA
UT WOS:000273666300004
OA Bronze
DA 2024-07-18
ER

PT J
AU Gedik, B
   Andrade, H
   Frenkiel, A
   De Pauw, W
   Pfeifer, M
   Allen, P
   Cohen, N
   Wu, KL
AF Gedik, Bugra
   Andrade, Henrique
   Frenkiel, Andy
   De Pauw, Wim
   Pfeifer, Michael
   Allen, Paul
   Cohen, Norman
   Wu, Kun-Lung
TI Tools and strategies for debugging distributed stream processing
   applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE debugging tools; distributed stream processing; System S; SPADE
ID VISUALIZATION
AB Distributed data stream processing applications are often characterized by data flow graphs consisting of a large number of built-in and user-defined operators connected via streams. These flow graphs are typically deployed on a large set of nodes. The data processing is carried out on-the-fly, as tuples arrive at possibly very high rates, with minimum latency. It is well known that developing and debugging distributed, multi-threaded, and asynchronous applications, such as stream processing applications, can be challenging. Thus, without domain-specific debugging support, developers struggle when debugging distributed applications. In this paper, we describe tools and language support to support debugging distributed stream processing applications. Our key insight is to view debugging of stream processing applications from four different, but related, perspectives. First, debugging the semantics of the application involves verifying the operator-level composition and inspecting the flows at the logical level. Second, debugging the user-defined operators involves traditional source-code debugging, but strongly tied to the stream-level interactions. Third, debugging the deployment details of the application require understanding the runtime physical layout and configuration of the application. Fourth, debugging the performance of the application requires inspecting various performance metrics (such as communication rates, CPU utilization, etc.) associated with streams, operators, and nodes in the system. In light of this characterization, we developed several tools such as a debugger-aware compiler and an associated stream debugger, composition and deployment visualizers, and performance visualizers, as well as language support, such as configuration knobs for logging and tracing, deployment configurations such as operator-to-process and process-to-node mappings, monitoring directives to inspect streams, and special sink adapters to intercept and dump streaming data to files and sockets, to name a few. We describe these tools in the context of Spade-a language for creating distributed stream processing applications, and System S-a distributed stream processing middleware under development at the IBM Watson Research Center. Published in 2009 by John Wiley & Sons, Ltd.
C1 [Gedik, Bugra; Andrade, Henrique; Frenkiel, Andy; De Pauw, Wim; Cohen, Norman; Wu, Kun-Lung] IBM Res, Hawthorne, NY 10532 USA.
   [Pfeifer, Michael; Allen, Paul] IBM Software Grp, Rochester, MN 55901 USA.
C3 International Business Machines (IBM); International Business Machines
   (IBM)
RP Gedik, B (corresponding author), IBM Res, 19 Skyline Dr, Hawthorne, NY 10532 USA.
EM bgedik@us.ibin.com
RI Gedik, Buğra/F-7842-2014
FU Publishing Arts Research Council [98-1846389]
FX Contract/.grant sponsor: Publishing Arts Research Council;
   contract/grant number: 98-1846389
CR Abadi D.J., 2005, CIDR, P277
   ALSHABIBI A, 2007, WORKSH PAR DISTR SYS, P14
   AMINI L, 2006, WORKSH DAT MIN STAND, P27
   Andrade H, 2009, PROC INT CONF DATA, P1375, DOI 10.1109/ICDE.2009.116
   [Anonymous], 2008, Proceedings of the 2008 ACM SIGMOD international conference on Management of data, SIGMOD'08, ACM
   [Anonymous], 1999, Using MPI: Portable Parallel Programming with the Message Passing Interface
   Arasu A., 2003, IEEE Data Engineering Bulletin, V26
   BALAKRISHNAN H, 2004, VERY LARGE DATABASES, V13
   Beynon MD, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, PROCEEDINGS, P439, DOI 10.1109/CLUSTR.2002.1137778
   CHANDRASEKARAN S, 2003, 1 BIENN C INN DAT SY
   Chen RS, 2000, J MATER SCI TECHNOL, V16, P379
   Cranor Chuck., 2003, ACM SIGMOD
   GEDIK B, 2009, INT C INF KNOWL MAN
   Gedik B, 2007, IEEE T KNOWL DATA EN, V19, P1363, DOI 10.1109/TKDE.2007.190630
   Gedik B, 2008, PROC INT CONF DATA, P396, DOI 10.1109/ICDE.2008.4497448
   Geist A., 1994, PVM: Parallel Virtual Machine
   GEIST GA, 1994, P VIS DEB WORKSH
   Girod L, 2008, PROC INT CONF DATA, P1180, DOI 10.1109/ICDE.2008.4497527
   HIRZEL M, 2009, RC24760 IBM
   HOOD R, 1996, SIGMETRICS S PAR DIS, P127
   JACQUESSILVA G, 2007, 4 INT C AUT COMP ICA, P31
   Jain N., 2006, P 2006 ACM SIGMOD IN, P431
   JYOTHI R, 2004, WORKSH PAR DISTR SYS, P264
   Kalé LV, 2006, FUTURE GENER COMP SY, V22, P347, DOI 10.1016/j.future.2004.11.020
   Kaugars K, 2000, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS I-V, P1215
   KOHL J, 2008, XPVM GRAPHICAL CONSO
   KUMAR V, 2006, 2006 EUROSYS C LEUV
   Kunz T, 1997, COMPUT J, V40, P499, DOI 10.1093/comjnl/40.8.499
   Liu L, 1999, IEEE T KNOWL DATA EN, V11, P610, DOI 10.1109/69.790816
   Lumetta S.S., 1996, Proceedings of the SIGMETRICS symposium on Parallel and distributed tools, SPDT '96, P118
   Nagel WE, 1996, SUPERCOMPUTER, V12, P69
   Neophytou P, 2004, 2004 IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID - CCGRID 2004, P35
   *PAR PROGR LAB, 2004, CHARM PROGR LANG VER
   PAUW WD, 2009, INFORM VISUALIZATION, V8, P87
   PAUW WD, 2008, ACM 2008 S SOFTW VIS, P125
   REYES JC, 2004, THESIS MIT
   SCHAELI B, 2008, 15 PVM MPI US GROUP, P239
   Schneider S., 2009, IS DDS YOU, P1
   Sharaf MA, 2008, ACM T DATABASE SYST, V33, DOI 10.1145/1331904.1331909
   Shende SS, 2006, INT J HIGH PERFORM C, V20, P287, DOI 10.1177/1094342006064482
   *STREAMBASE, STREAMBASE SYST
   Terry D, 1992, Proceedings of the 1992 ACM SIGMOD International Conference on Management of Data, V21, P321
   Thies W, 2002, LECT NOTES COMPUT SC, V2304, P179
   Topol B, 1998, CONCURRENCY-PRACT EX, V10, P1197, DOI 10.1002/(SICI)1096-9128(19981210)10:14<1197::AID-CPE364>3.0.CO;2-O
   TURAGA DS, 2007, AEC APC S IND WELLS
   WOLF J, 2008, ACM IFIP USENIX 9 IN, P306
   WU KL, 2007, INT C VER LARG DAT B, P1185
   WU X, 2002, CLUSTER COMPUT, V5, P365
   2008, AUSTR SQUARE KILOMET
   [No title captured]
NR 50
TC 7
Z9 14
U1 2
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2009
VL 39
IS 16
BP 1347
EP 1376
DI 10.1002/spe.941
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 513QF
UT WOS:000271337300002
DA 2024-07-18
ER

PT J
AU Thomas, G
   Geoffray, N
   Clément, C
   Folliot, B
AF Thomas, Gael
   Geoffray, Nicolas
   Clement, Charles
   Folliot, Bertil
TI Designing highly flexible virtual machines: the JnJVM experience
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE dynamic adaptation; aspect weaving; Java virtual machine
AB Dynamic flexibility is a major challenge in modern system design to react to context or applicative requirements evolutions. Adapting behaviors may impose substantial code modification across the whole system, in the field, without service interruption and without state loss. This paper presents the JnJVM, a full Java virtual machine (JVM) that satisfies these needs by using dynamic aspect weaving techniques and a component architecture. It supports adding or replacing its own code, while it is running, with no overhead on unmodified code execution. Our measurements reveal similar performance when compared with the monolithic JVM Kaffe. Three illustrative examples show different extension scenarios: (i) modifying the JVMs behavior; (ii) adding capabilities to the JVM; and (iii) modifying applications behavior. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Thomas, Gael; Geoffray, Nicolas; Clement, Charles; Folliot, Bertil] Univ Paris 06, CNRS, LIP6, INRIA REGAL, F-75016 Paris, France.
C3 Sorbonne Universite; Centre National de la Recherche Scientifique (CNRS)
RP Thomas, G (corresponding author), Univ Paris 06, CNRS, LIP6, INRIA REGAL, 104 Ave President Kennedy, F-75016 Paris, France.
EM gael.thomas@lip6.fr
CR ACETTA M, 1986, P SUMM 1986 USENIX C, P93
   [Anonymous], 1999, P OBJ OR SYST LANG
   [Anonymous], 2004, P 2004 INT S COD GEN
   BACK G, 2000, P 4 S OP SYST DES IM
   Blanchet B, 2003, ACM T PROGR LANG SYS, V25, P713, DOI 10.1145/945885.945886
   Bockisch Christoph., 2004, AOSD 04 P 3 INT C AS, P83
   Boehm H. J., 1991, SIGPLAN Notices, V26, P157, DOI 10.1145/113446.113459
   DIJKSTRA EW, 1978, COMMUN ACM, V21, P966, DOI 10.1145/359642.359655
   Engler D.R., 1995, S OPERATING SYSTEMS, P251
   *EPPC, JAV GRAND FOR BENCHM
   Fassino J.-P., 2002, P USENIX ANN TECHN C
   GALLAND A, 2005, THESIS U PIERRE MARI
   GEOFFRAY N, 2006, P INT S DISTR OBJ AP
   GEOFFRAY N, 2008, 7 C SOFTW COMP UNPUB
   GEOFFRAY N, 2008, 22 EUR C OBJ O UNPUB
   Geoffray N, 2008, P 1 WORKSH IS INT EM, P41
   HACHICHI A, 2005, EUR C PAR PROC EUROP
   HARRIS TL, 1999, P OBJ OR PROGRAM SYS, P135
   Hicks M, 2001, ACM SIGPLAN NOTICES, V36, P13, DOI 10.1145/381694.378798
   Hunt GalenC., 2005, OVERVIEW SINGULARITY
   *JSR 121, APPL IS API SPEC
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KRIEGER O, 2006, P 1 ACM EUR C COMP S, P133, DOI DOI 10.1145/1217935.1217949
   LEWIS JP, 2008, PERFORMANCE JAVA VER
   Liedtke J., 1995, P 15 ACM S OP SYST P, P237, DOI DOI 10.1145/224056.224075
   LINDHOLM T, 1997, JAVA TM VIRTUAL MACH
   MANGIONE C, 2008, PERFORMANCE TESTS SH
   Necula G.C., 1997, 24 ANN S PRINCIPLES, P106
   Ogel F, 2003, PROCEEDINGS OF THE AUTONOMIC COMPUTING WORKSHOP/FIFTH ANNUAL INTERNATIONAL WORKSHOP ON ACTIVE MIDDLEWARE SERVICES, P178
   OGEL F, 2004, P ACM SIGOPS EUR WOR, P176
   OGEL F, 2003, NEW TRENDS COMPUTER
   OGEL F, 2005, 20 ANN ACM S APPL CO
   Pawlak R., 2005, Foundations of AOP for J2EE development
   PIUMARTA I, 2002, 20 IASTED APPL INF C
   PIUMARTA T, 2004, P VIRT MACH RES TECH, P97
   ROSE E, 1998, FORINAL UNDERPRINNIN
   SENART A, 2002, P ENG CONT AW OBJ OR
   SIRER EG, 1999, P 17 ACM S OP SYST P, P202
   Soules CAN, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P141
   *SUN MICR, 2008, JAV BUS TECHN SUMM
   THOMAS G, 2002, ACT C JOURN JEUN CHE, P441
   THOMAS G, 2005, SPECIAL ISSUE SYST N, V27, P28
   Tilevich E., 2003, P 23 INT C DISTRIBUT, P252
NR 43
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2008
VL 38
IS 15
BP 1643
EP 1675
DI 10.1002/spe.887
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 385JR
UT WOS:000261811000004
DA 2024-07-18
ER

PT J
AU Grothoff, C
AF Grothoff, Christian
TI The Runabout
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE visitor; pattern; dispatch; java
ID MESSAGE DISPATCH; MULTIPLE
AB This paper presents a variation of the visitor pattern which allows programmers to write visitor-like code in a concise way. The Runabout is a library extension that adds a limited form of multi-dispatch to Java. While the Runabout is not as expressive as a general multiple dispatching facility, the Runabout can be significantly faster than existing implementations of multiple dispatch for Java, such as MultiJava. Unlike MultiJava, the Runabout does not require changes to the syntax and the compiler. This paper illustrates how to use the Runabout, details its implementation and provides benchmarks comparing its performance with other approaches. Furthermore, the effect of an automatic static program transformation tool that translates bytecode using the Runabout to equivalent bytecode is evaluated. The tool uses double dispatch and runtime-type checks to achieve the same semantics that the Runabout has. The performance comparisons on large benchmarks that make extensive use of multiple dispatch show that using the Runabout does not result in a significant loss of performance for realistic applications and that, depending on the application and platform, small performance gains are also possible. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 Univ Denver, Dept Comp Sci, Denver, CO 80208 USA.
C3 University of Denver
RP Grothoff, C (corresponding author), Univ Denver, Dept Comp Sci, Denver, CO 80208 USA.
EM christian@grothoff.org
OI Grothoff, Christian/0000-0002-6858-6808
CR Alpern B, 2001, OOPSLA 2001 C OBJ OR, P108
   [Anonymous], 1998, P 25 ACM SIGPLAN SIG, DOI DOI 10.1145/268946.268961
   BETTINI L, 2004, DOUBLE DISPATCH C
   BRACHA G, 1998, OOPSLA P
   Bravenboer Martin., 2001, Guiding Visitors: Separating Navigation from Computation"
   Breuel TM, 2001, TOOLS, V39, P143, DOI 10.1109/TOOLS.2001.941668
   Chambers C, 1999, ACM SIGPLAN NOTICES, V34, P238, DOI 10.1145/320385.320407
   Clifton C, 2000, ACM SIGPLAN NOTICES, V35, P130, DOI 10.1145/354222.353181
   CUNEI A, 2005, FLEXIBLE DISPATCHING, P487
   Dietzfelbinger M., 1988, 29th Annual Symposium on Foundations of Computer Science (IEEE Cat. No.88CH2652-6), P524, DOI 10.1109/SFCS.1988.21968
   Driesen K, 1995, LECT NOTES COMPUT SC, V952, P253
   DUTCHYN C, 2001, THESIS U ALBERTA EDM
   FLATT M, 1999, TR99345, P20
   Flatt Matthew., 1998, P ACM SIGPLAN 1998 C, P236
   FORAX R, 2000, JAVA MULTIMETHOD FRA, P45
   Forax R, 2005, J OBJECT TECHNOL, V4
   GAMMA E, 1997, PATTERN LANGUAGES PR, V3, P79
   Gamma E., 1994, DESIGN PATTERNS
   Gamma Erich., 1994, DESIGN PATTERNS
   Gosling James, 1996, The Java Language Specification
   GROTHOFF C, 2001, OOPSLA 01, P241
   GROTHOFF C, 2003, JAMIT
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   Krishnamurthi S., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P91, DOI 10.1007/BFb0054088
   MARTIN RC, 2003, ANGILE SOFTWARE DEV
   Naik M, 2000, ACM SIGPLAN NOTICES, V35, P49, DOI 10.1145/351159.351174
   NORDBERG ME, 1997, PATTERN LANGUAGES PR, V3, P105
   Nystrom N, 2003, LECT NOTES COMPUT SC, V2622, P138
   Odersky Martin., 1997, P 24 ACM S PRINCIPLE, P146
   OVLINGER J, 1998, LANGUAGE SPECIFYING
   Palacz K, 2003, LECT NOTES COMPUT SC, V2743, P378
   PALACZ K, 2003, ACM SIGPLAN 2003 WOR
   Palsberg J, 1998, P INT COMP SOFTW APP, P9, DOI 10.1109/CMPSAC.1998.716629
   SAMANTA V, 2004, HITSUJI
   Shivers O. G., 1991, THESIS CARNEGIE MELL
   STROUSTRUP B, 1987, P SPRING 1987 EUR UN
   *SUM MICR, 2000, J2ME BUILD BLOCKS MO
   Tip F, 1999, ACM SIGPLAN NOTICES, V34, P292, DOI 10.1145/320385.320414
   *UCLA COMP GROUP, JAV TREE BUILD
   ZENGER M, 2001, WORKSH MULT PROGR OB
   ZIBIN Y, 2002, OOPSLA 2002 C OBJ OR, P142
   [No title captured]
NR 43
TC 0
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV 25
PY 2008
VL 38
IS 14
BP 1531
EP 1560
DI 10.1002/spe.878
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 372EH
UT WOS:000260884300004
DA 2024-07-18
ER

PT J
AU Sugiki, A
   Kono, K
   Iwasaki, H
AF Sugiki, Akiyoshi
   Kono, Kenji
   Iwasaki, Hideya
TI Tuning mechanisms for two major parameters of Apache web servers
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE parameter tuning; web servers; server management
AB Apache web servers are widely used as stand-alone servers or front-ends in multi-tiered web servers. Despite the wide availability of software, it is quite difficult for many administrators to properly configure their web servers. In particular, setting the performance-related parameters is an error-prone and time-consuming task because their values heavily depend on the server environment. In this paper, two mechanisms are described for automatically tuning two performance-related parameters of Apache web servers: KeepAliveTimeout and MaxClients. These mechanisms are easy to deploy because no modifications to the server or the operating system are required. Moreover, they are parameter specific. Although interference between KeepAliveTimeout and MaxClients is inevitable, the tuning mechanisms minimize the correlation by using almost completely independent metrics. Experimental results show that these mechanisms work well for two different workloads; the parameter values are close to optimal and can adapt to workload changes. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Sugiki, Akiyoshi] Univ Electrocommun, Grad Sch Electrocommun, Dept Comp Sci, Tokyo, Japan.
   [Kono, Kenji] Keio Univ, Dept Informat & Comp Sci, Yokohama, Kanagawa 223, Japan.
C3 University of Electro-Communications - Japan; Keio University
RP Sugiki, A (corresponding author), Univ Tsukuba, Dept Comp Sci, Kato Grp, 1-1-1 Tennoudai, Tsukuba, Ibaraki 3058573, Japan.
EM sugiki@osss.es.tsukuba.ac.jp
OI Iwasaki, Hideya/0000-0002-3708-6624
FU Core Research for Evolutional Science and Technology (CREST) program;
   Japan Science and Technology Agency
FX This research was partially supported by Core Research for Evolutional
   Science and Technology (CREST) program of Japan Science and Technology
   Agency.
CR Abdelzaher TF, 2002, IEEE T PARALL DISTR, V13, P80, DOI 10.1109/71.980028
   [Anonymous], 2001, P 7 ANN INT C MOBILE
   *AP SOFTW FDN, 2002, PERF NOT AP TUN
   Barford P., 1998, Performance Evaluation Review, V26, P151, DOI 10.1145/277858.277897
   Barford P, 1999, PERFORMANCE EVALUATION REVIEW, SPECIAL ISSUE, VOL 27 NO 1, JUNE 1999, P188, DOI 10.1145/301464.301560
   CHEN X, 2001, P 10 WORLD WID WEB C, P545
   CHERKASOVA L, 1998, HPL98119
   Chung I-Hsin., 2004, SC '04, P30, DOI [10.1109/SC.2004.65, DOI 10.1109/SC.2004.65]
   Chung IH, 2004, 13TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P36
   Crovella ME, 1997, IEEE ACM T NETWORK, V5, P835, DOI 10.1109/90.650143
   Diao Y, 2003, INT FED INFO PROC, V118, P157, DOI 10.1109/INM.2003.1194178
   DIAO Y, 2003, P 14 IFIP IEEE WORKS, P3
   Diao YX, 2002, NOMS 2002: IEEE/IFIP NETWORK OPERATIONS AND MANAGEMENT SYMPOSIUM, P219, DOI 10.1109/NOMS.2002.1015566
   Doyle RP, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS (USITS'03), P57
   Elnikety S., 2004, P 13 INT C WORLD WID, P276
   Fielding R., 1999, RFC 2616 HYPERTEXT T
   FOX A, 1997, P 16 ACM S OP SYST P, P78
   Jung J., 2002, Proc. of the International World Wide Web Conference, P252
   Kamra A, 2004, INT WORKSH QUAL SERV, P47
   Karlsson M, 2005, 2005 INTERNATIONAL CONFERENCE ON CONTROL AND AUTOMATION (ICCA), VOLS 1 AND 2, P709
   Liu X, 2003, LECT NOTES COMPUT SC, V2707, P461
   Menasce D.A., 2001, P 3 ACM C ELECT COMM, P224, DOI [10.1145/501158.501186, DOI 10.1145/501158.501186]
   Menasce D.A., 2003, 29th International Computer Measurement Group Conference, December 7-12, 2003, Dallas, Texas, USA, Proceedings, P1
   Menascé DA, 2000, PERFORM EVALUATION, V42, P223, DOI 10.1016/S0166-5316(00)00034-1
   Mogul J. C., 1995, Computer Communication Review, V25, P299, DOI 10.1145/217391.217465
   NIELSEN HF, 1997, P ACM SIGCOMM 97 CAN
   Robertsson A, 2004, P AMER CONTR CONF, P1980
   *STAND PERF EV COR, 1999, SPECWEB99 BENCHM
   Sugiki A, 2005, LECT NOTES COMPUT SC, V3818, P146, DOI 10.1007/11596370_14
   SUGIKI A, 2007, COMPUTER SOFTWARE, V24, P68
   *SUN MICR, 2005, JAV 2 PLATF
   The Apache Software Foundation, 1995, AP HTTP SERV
   Welsh M, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS (USITS'03), P43
   Xi B., 2004, P P 13 INT C WORLD W, P287, DOI DOI 10.1145/988672.988711
NR 34
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2008
VL 38
IS 12
BP 1215
EP 1240
DI 10.1002/spe.861
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 369LC
UT WOS:000260695000001
DA 2024-07-18
ER

PT J
AU Ward, M
   Zedan, H
   Ladkau, M
   Natelberg, S
AF Ward, Martin
   Zedan, Hussein
   Ladkau, Matthias
   Natelberg, Stefan
TI Conditioned semantic slicing for abstraction; industrial experiment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE slicing; program transformation; FermaT; WSL; legacy assembler; reverse
   engineering; reengineering
ID PROGRAM; ALGORITHM
AB One of the most challenging tasks a programmer can face is attempting to analyse and understand a legacy assembler system. Many features of assembler make analysis difficult, and these are the same features that make migration from assembler to a high-level language difficult. In this paper, we discuss the application of program transformation technology to assist with analysing and understanding legacy assembler systems. We briefly introduce the fundamentals of our program transformation theory and program slicing, which generalizes to conditional semantic slicing. These transformations are applied to a large commercial assembler system to automatically generate high-level abstract descriptions of the behaviour of each assembler module, with error handling code sliced away. The assembler system was then migrated to C. The result is a dramatic improvement in the understandability of the programs; on average a 6000-line assembler listing is condensed down to a 132-line high-level language abstraction. A second case study, involving over one million lines of source code from many different assembler systems, showed equally dramatic results. Copyright (C) 2008 John Wiley & Sons, Ltd.
C1 [Ward, Martin; Zedan, Hussein; Ladkau, Matthias; Natelberg, Stefan] De Montfort Univ, Leicester LE1 9BH, Leics, England.
C3 De Montfort University
RP Ward, M (corresponding author), De Montfort Univ, Gateway House, Leicester LE1 9BH, Leics, England.
EM martin@gkc.org.uk
OI Ward, Martin/0000-0001-7127-3311
FU Software Migrations Limited (SML)
FX Contract/grant sponsor: Software Migrations Limited (SML)
CR Binkley D., 1996, Advances in Computers, V43, P1
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Harman M., 1997, 5 IEEE INT WORKSH PR
   HARMAN M, 2001, P 8 WORK C REV ENG W
   HORWITZ S, 1990, TOPLAS, V12, P26, DOI DOI 10.1145/77606.77608
   HORWITZ S, 1995, P 3 ACM SIGSOFT S FD, P11
   JONES C, 1998, YEAR 2000 SOFTWARE P
   KOREL B, 1998, INFORM PROCESSING LE, V29, P155
   PRIESTLEY HA, 1994, J SYMB COMPUT, V18, P1, DOI 10.1006/jsco.1994.1035
   TIP F, 1995, THESIS CANTRUM WISKU
   VENKATESH GA, 1991, SIGPLAN NOTICES, V26, P107, DOI 10.1145/113446.113455
   Ward M, 1996, IEEE T SOFTWARE ENG, V22, P665, DOI 10.1109/32.541437
   WARD M, 1989, PROVING PROGRAM REFI
   Ward M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216375
   Ward MP, 2004, SCI COMPUT PROGRAM, V52, P213, DOI 10.1016/j.scico.2004.03.007
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   YANG H., 2003, Successful Evolution of Software Systems
NR 18
TC 12
Z9 12
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2008
VL 38
IS 12
BP 1273
EP 1304
DI 10.1002/spe.869
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 369LC
UT WOS:000260695000004
DA 2024-07-18
ER

PT J
AU Chen, JC
AF Chen, Jing-Chao
TI Symmetry partition sort
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Proportion Extend Sort; high-performance sorting; algorithm design and
   implementation; library sort functions
AB In this paper, we propose a useful replacement for quicksort-style utility functions. The replacement is called Symmetry Partition Sort, the principle of which is similar to that of Proportion Extend Sort. The main characteristic of the new algorithm is that it always places partially sorted inputs (used as a basis for proportional extensions) at each end of an array when entering the partitioning routine. This is advantageous in speeding up the processing for partitioning. The library function we developed based on the new algorithm is more attractive than the Psort library function introduced in 2004 because of its simple implementation mechanism, clearer source code, and faster operation with a performance guarantee of O(n log n). Increased robustness and adaptivity also make it highly competitive as a library function. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 DongHua Univ, Sch Informat, Shanghai 200051, Peoples R China.
C3 Donghua University
RP Chen, JC (corresponding author), DongHua Univ, Sch Informat, 1882 Yan An W Rd, Shanghai 200051, Peoples R China.
EM chen-jc@dhu.edu.cn
CR BENTLEY JL, 1993, SOFTWARE PRACT EXPER, V23, P1249, DOI 10.1002/spe.4380231105
   BILLARD T, 2001, QUICKSORT INTRO
   Chen JC, 2004, SOFTWARE PRACT EXPER, V34, P777, DOI 10.1002/spe.593
   Chen JC, 2001, SIAM J COMPUT, V31, P323, DOI 10.1137/S0097539798342903
   CHEN JC, 2004, P 8 WORLD MULT C SYS
   CHEN JC, 1996, NORDIC J COMPUTING, V3, P271
   CHEN JC, 2007, SYMMETRY PARTITION S
   Chen JC, 2006, THEOR COMPUT SCI, V369, P44, DOI 10.1016/j.tcs.2006.07.017
   COLE R, 2004, P EUR S ALG BERG NOR
   HOARE CAR, 1962, COMPUT J, V5, P10, DOI 10.1093/comjnl/5.1.10
   McIlroy MD, 1999, SOFTWARE PRACT EXPER, V29, P341, DOI 10.1002/(SICI)1097-024X(19990410)29:4<341::AID-SPE237>3.0.CO;2-R
   MCILROY P, 1993, PROCEEDINGS OF THE FOURTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P467
   Moffat A, 1996, SOFTWARE PRACT EXPER, V26, P781, DOI 10.1002/(SICI)1097-024X(199607)26:7<781::AID-SPE35>3.0.CO;2-B
   NYBERG C, 1994, P ACM SIGMOD INT C M, P233
   Ritchie D. M, 1979, UNIX PROGRAMMERS MAN
NR 15
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2008
VL 38
IS 7
BP 761
EP 773
DI 10.1002/spe.851
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 300IN
UT WOS:000255817600004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Joisha, PG
   Banerjee, P
AF Joisha, Pramod G.
   Banerjee, Prithviraj
TI A translator system for the MATLAB language
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE typeless array languages; translator architecture; type inference; code
   generation
ID GENERATION; COMPILER; APL
AB A whole-program MATLAB to C translation system is presented. The paper outlines the motivation for the problem, discusses the system's architecture, its features and limitations. The translator's operation is explained using an example input program. Details are given on how the system implements and specializes some of the language's built-in primitives. Finally, the paper reports measurements evaluating the execution time and memory usage of the translated sources, and the compilation time required for the translations. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Microsoft Res, Redmond, WA 98052 USA.
   Univ Illinois, Chicago, IL 60607 USA.
   Northwestern Univ, Evanston, IL 60208 USA.
C3 Microsoft; University of Illinois System; University of Illinois
   Chicago; University of Illinois Chicago Hospital; Northwestern
   University
RP Joisha, PG (corresponding author), Microsoft Res, 1 Microsoft Way, Redmond, WA 98052 USA.
EM pjoisha@microsoft.com
CR AHO AV, 1988, COMPUTER SCI SERIES
   ALMASI G, 2002, P ACM SIGPLAN 2002 C, P294
   Budd T., 1988, APL COMPILER
   BUDD TA, 1984, ACM T PROGR LANG SYS, V6, P297, DOI 10.1145/579.357248
   CHAUVEAU S, 1998, LECT NOTES COMPUTER, V1511, P27
   CHING WM, 1986, IBM J RES DEV, V30, P594, DOI 10.1147/rd.306.0594
   CORMEN TH, 1995, MIT ELECT ENG COMPUT
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   De Rose L, 1999, ACM T PROGR LANG SYS, V21, P286, DOI 10.1145/316686.316693
   DEROSE LA, 1996, THESIS U ILLINOIS UR
   DRISCOLL GC, 1986, IBM J RES DEV, V30, P583, DOI 10.1147/rd.306.0583
   FRIEDLAND P, 1967, COMMUN ACM, V10, P665, DOI 10.1145/363717.363780
   Iverson K. E., 1962, A Programming Language
   JOISHA P, 2003, P ACM SIGPLAN C PROG, P294
   Joisha PG, 2003, LECT NOTES COMPUT SC, V2622, P121
   JOISHA PG, 2000, P ACM SIGAPL C ARR S, P27
   JOISHA PG, 2002, CPDCTR200210004 NW U
   JOISHA PG, 2001, P ACM SIGAPL C ARR P, P6
   Joisha PG, 2006, ACM T PROGR LANG SYS, V28, P848, DOI 10.1145/1152649.1152651
   KAHAN W, 1998, MATLABS LOSS IS NOBO
   Kennedy K, 2005, P IEEE, V93, P387, DOI 10.1109/JPROC.2004.840447
   Kernighan B.W., 1988, The C Programming Language
   MALISHEVSKY A, 1998, THESIS OREGON STATE
   *MATHWORKS INC, 2006, MATHWORKS MATLAB COM
   *MATHWORKS INC, 2000, MATHLAB C MATH LIB L
   *MATHWORKS INC, 1997, US MATLAB VERS 5 MAT
   *MATHWORKS INC, 2002, ACC MATLAB MATLAB JI
   *MATHWORKS INC, 2000, MATLAB C MATH LIB LA
   MCGARRITY S, 2004, MATLAB DIGEST, V12
   MOLER C, 1983, IBM J RES DEV, V27, P577, DOI 10.1147/rd.276.0577
   Moler C., 2002, MATLABNEWSNOTES, P12
   Muchnick S., 1997, ADV COMPILER DESIGN
   Quinn MJ, 1998, FIRST MERGED INTERNATIONAL PARALLEL PROCESSING SYMPOSIUM & SYMPOSIUM ON PARALLEL AND DISTRIBUTED PROCESSING, P81, DOI 10.1109/IPPS.1998.669894
   *SUN MICR INC, 2001, NUM COMP GUID
   Tremblay J.P., 1975, DISCRETE MATH STRUCT
   WEIGANG J, 1985, P ACM SIGAPL C ARR P, P231
   WIEDMANN C, 1979, P ACM SIGAPL C ARR, P321
   Wolfram S., 2003, The Mathematica Book
NR 38
TC 5
Z9 8
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2007
VL 37
IS 5
BP 535
EP 578
DI 10.1002/spe.781
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 157FK
UT WOS:000245703800005
DA 2024-07-18
ER

PT J
AU Stoermer, C
   Rowe, A
   O'Brien, L
   Verhoef, C
AF Stoermer, C
   Rowe, A
   O'Brien, L
   Verhoef, C
TI Model-centric software architecture reconstruction
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architecture; LIN bus; models; performance; prediction; quality
   attributes; software architecture reconstruction; views
AB Much progress has been achieved in defining methods, techniques, and tools for software architecture reconstruction (SAR). However, less progress has been achieved in constructing reasoning frameworks from existing systems that support organizations in architecture analysis and design decisions. These reasoning frameworks are necessary, for example, to assemble existing components and deploy them in new system configurations. We propose a model-centric approach where this kind of reasoning is driven by the analysis of quality attribute scenarios. The scenarios and the related quality attribute models guide the SAR effort by focusing on the elicitation of model relevant artifacts. The approach further drives the model construction towards the analytical support of What If scenarios that explore responses stimulated by new requirements, such as new deployments of existing components. The paper provides two real-world case studies. The first case study introduces the model-centric reconstruction approach in the context of a large satellite tracking system. The second case study provides the construction of a time performance model for an existing embedded system in the automotive industry. The model allows us to perform cost-efficient predictions of component assemblies in new customer configurations. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Robert Bosch Corp, Res & Technol Ctr, Pittsburgh, PA 15212 USA.
   Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
   Free Univ Amsterdam, NL-1081 HV Amsterdam, Netherlands.
C3 Bosch; Carnegie Mellon University; Software Engineering Institute; Vrije
   Universiteit Amsterdam
RP Robert Bosch Corp, Res & Technol Ctr, 2 NorthShore Ctr,320, Pittsburgh, PA 15212 USA.
EM christoph.stoermer@rtc.bosch.com
RI Ferrie, Jane/AAZ-2009-2020; Singh-Manoux, Archana/F-6804-2013; Vahtera,
   Jussi/J-3271-2013; Kivimaki, Mika/B-3607-2012; Hintsanen,
   Mirka/B-6012-2008
OI Singh-Manoux, Archana/0000-0002-1244-5037; Kivimaki,
   Mika/0000-0002-4699-5627; 
CR Agha G., 1986, Actors: a model of concurrent computation in distributed systems
   AGNE R, 1991, REAL-TIME SYST, V3, P45, DOI 10.1007/BF00365392
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   Bass L., 2013, SOFTWARE ARCHITECTUR
   BEECHAM M, 2003, VEHICLE ELECT WIRING
   Bengtsson P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P308, DOI 10.1109/ICSR.1998.685756
   Buck J., 1994, INT J COMPUTER SIMUL, V4, P155
   Clements P., 2002, DOCUMENTING SOFTWARE
   Eixelsberger W, 1998, PROC INT CONF SOFTW, P508, DOI 10.1109/ICSE.1998.671617
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   FINNIGAN PJ, 1997, IBM SYST J, V36, P546
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   Kazman R., 2003, CMUSEI2002TR034
   KAZMAN R, 1999, J AUTOMATED SOFTWARE, V6, P107, DOI DOI 10.1023/A:1008781513258
   Klusener AS, 2005, SCI COMPUT PROGRAM, V54, P143, DOI 10.1016/j.scico.2004.03.012
   MENDONCA NC, 2001, SWARM FOR 8 WORK C R
   Rowson JA, 1997, DES AUT CON, P178, DOI 10.1145/266021.266060
   Sartipi K, 2001, PROC IEEE INT CONF S, P408, DOI 10.1109/ICSM.2001.972754
   Stoermer C., 2003, P 10 WORK C REV ENG
   Tahvildari L, 2003, J SYST SOFTWARE, V66, P225, DOI 10.1016/S0164-1212(02)00082-1
   1999, AUTOMMOTIVE ENG  FEB, P102
   [No title captured]
NR 23
TC 9
Z9 10
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2006
VL 36
IS 4
BP 333
EP 363
DI 10.1002/spe.699
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 031MK
UT WOS:000236708500001
DA 2024-07-18
ER

PT J
AU Maass, MG
AF Maass, MG
TI Matching statistics: efficient computation and a new practical algorithm
   for the Multiple Common Substring Problem
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE algorithms and data structures; pattern matching; Common Substring
   Problem; matching statistics; suffix array; suffix tree
ID SUFFIX ARRAY CONSTRUCTION; ASYMPTOTIC PROPERTIES; TREE
AB We present new algorithms for computing matching statistics with suffix arrays. We show how the Multiple Common Substring Problem can be solved efficiently in practice with a new approach using matching statistics. This problem consists of finding the common substrings of a set of strings. For the computation of matching statistics we compare seven different methods based on suffix trees and suffix arrays. Most of the suffix array algorithms have an inferior asymptotic worst case running time but a very low memory overhead and small constants in the running time complexity. Our experiments show a good performance in practice. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Tech Univ Munich, Fak Informat, D-85748 Garching, Germany.
C3 Technical University of Munich
RP Tech Univ Munich, Fak Informat, Boltzmannstr 3, D-85748 Garching, Germany.
EM maass@in.tum.de
CR Abouelhoda M. I., 2002, String Processing and Information Retrieval. 9th International Symposium, SPIRE 2002. Proceedings (Lecture Notes in Computer Science Vol.2476), P31
   Abouelhoda M. I., 2004, Journal of Discrete Algorithms, V2, P53, DOI 10.1016/S1570-8667(03)00065-0
   Abouelhoda MI, 2002, LECT NOTES COMPUT SC, V2452, P449
   [Anonymous], 2000, AVERAGE CASE ANAL AL
   BLUMER A, 1989, DISCRETE APPL MATH, V24, P37, DOI 10.1016/0166-218X(92)90270-K
   Burkhardt S, 2003, LECT NOTES COMPUT SC, V2676, P55
   CHANG WI, 1994, ALGORITHMICA, V12, P327, DOI 10.1007/BF01185431
   Giegerich R, 1997, ALGORITHMICA, V19, P331, DOI 10.1007/PL00009177
   Giegerich R, 2003, SOFTWARE PRACT EXPER, V33, P1035, DOI 10.1002/spe.535
   Grossi R., 2000, Proceedings of the Thirty Second Annual ACM Symposium on Theory of Computing, P397, DOI 10.1145/335305.335351
   Gusfield Dan, 1997, Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology, DOI DOI 10.1017/CBO9780511574931
   HOHL M, 2002, BIOINFORMATICS, V18, P312
   HUI LCK, 1992, LECT NOTES COMPUT SC, V644, P230
   Kärkkäinen J, 2003, LECT NOTES COMPUT SC, V2719, P943
   Kasai T., 2001, Combinatorial Pattern Matching. 12th Annual Symposium, CPM 2001. Proceedings (Lecture Notes in Computer Science Vol. 2089), P181
   Kim DK, 2004, LECT NOTES COMPUT SC, V3246, P138
   Kim DK, 2004, LECT NOTES COMPUT SC, V3059, P301
   Kim DK, 2003, LECT NOTES COMPUT SC, V2676, P186
   Ko P, 2003, LECT NOTES COMPUT SC, V2676, P200
   Kurtz S, 1999, SOFTWARE PRACT EXPER, V29, P1149, DOI 10.1002/(SICI)1097-024X(199911)29:13<1149::AID-SPE274>3.0.CO;2-O
   LARSSON NJ, 1999, LUCSTR99214 DEP COMP
   MAAS MG, 2003, TUM10312 TU MUNCH FA
   MANBER U, 1993, SIAM J COMPUT, V22, P935, DOI 10.1137/0222058
   Manzini G, 2004, ALGORITHMICA, V40, P33, DOI 10.1007/s00453-004-1094-1
   Manzini G, 2002, LECT NOTES COMPUT SC, V2461, P698
   MCCREIGHT EM, 1976, J ACM, V23, P262, DOI 10.1145/321941.321946
   SADAKANE K, 2000, LNCS, V1969, P410
   SCHIEBER B, 1988, SIAM J COMPUT, V17, P1253, DOI 10.1137/0217079
   SZPANKOWSKI W, 1993, SIAM J COMPUT, V22, P1176, DOI 10.1137/0222070
   SZPANKOWSKI W, 1993, IEEE T INFORM THEORY, V39, P1647, DOI 10.1109/18.259648
   UKKONEN E, 1995, ALGORITHMICA, V14, P249, DOI 10.1007/BF01206331
   WYNER AD, 1989, IEEE T INFORM THEORY, V35, P1250, DOI 10.1109/18.45281
NR 32
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2006
VL 36
IS 3
BP 305
EP 331
DI 10.1002/spe.698
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 020MW
UT WOS:000235914600004
DA 2024-07-18
ER

PT J
AU Bachelet, B
   Mahul, A
   Yon, L
AF Bachelet, B
   Mahul, A
   Yon, L
TI Designing generic algorithms for operations research
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE object-oriented design; operations research; algorithm implementation;
   genericity; reusability; design pattern
AB Design solutions have been proposed to implement generic data structures, however such techniques dedicated to algorithms are not well known. This article discusses various recurrent problems encountered when designing reusable, extensible algorithms for operations research. It explains how to use object-oriented concepts and the notion of genericity to design algorithms that are independent of the data structures and the algorithms they use, but that can still interact deeply with them. An object-oriented design is sometimes considered to be less efficient than a classical one, and operations research is one of these scientific fields where efficiency really matters. Hence, the main goal of this article is to explain how to design algorithms that are both generic and efficient. It also discusses specific recurring design issues for operations research software and proposes solutions that improve the genericity of the algorithms. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Clermont Ferrand, CNRS, UMR 6158, LIMOS, F-63173 Aubiere, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Clermont
   Auvergne (UCA)
RP Univ Clermont Ferrand, CNRS, UMR 6158, LIMOS, BP 10125, F-63173 Aubiere, France.
EM bruno.bachelet@isima.fr
RI Mahul, Antoine/JFJ-7867-2023
OI Mahul, Antoine/0000-0002-9729-1603; Yon, Loic/0000-0002-6411-3341;
   Bachelet, Bruno/0000-0001-9190-3405
CR Ahuja R. K., 1993, Network flows: theory, algorithms, and applications
   Duret-Lutz A, 2001, 6TH USENIX CONFERENCE OF OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS 01), P189
   Gamma E., 1996, DESIGN PATTERNS ELEM, P395
   JOHNSON RE, 1991, J OBJECT-ORIENT PROG, V4, P31
   Köthe U, 2000, C++ REP, V12, P24
   LEE L, 1999, P 14 ACM SIGPLAN C O, P399
   Manzini G, 2002, SOFTWARE PRACT EXPER, V32, P621, DOI 10.1002/spe.445
   MUSSER DR, 1989, LECT NOTES COMPUT SC, V358, P13
   *OBJ MAN GROUP, 2003, UN MOD LANG SUP VERS
   Siek J., 2002, The Boost Graph Library: User Guide and Reference Manual
   SIEK J, 2000, 1 WORKSH C TEMPL PRO
   Veldhuizen TL, 1998, LECT NOTES COMPUT SC, V1505, P223
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 26
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2006
VL 36
IS 1
BP 73
EP 93
DI 10.1002/spe.682
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 002KR
UT WOS:000234610800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Basney, J
   Humphrey, M
   Welch, V
AF Basney, J
   Humphrey, M
   Welch, V
TI The MyProxy online credential repository
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT International Workshop on Grid Security
CY JUL, 2004
CL Oxford, ENGLAND
DE Grid computing; credential management; public key infrastructure;
   virtual smart-card
AB The MyProxy online credential repository has been used by the Grid computing community for over four years for managing security credentials in the Grid public key infrastructure. MyProxy improves usability by giving users access to their credentials over the network using password authentication, allowing users to delegate their credentials via Web browser interfaces to the Grid, and supporting credential renewal for long-running jobs. MyProxy helps administrators secure users' private keys by providing an online service from which users retrieve short-lived credentials without distributing long-lived keys to potentially vulnerable end-systems. This paper describes the MyProxy system and its use. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Univ Illinois, Natl Ctr Supercomp Applicat, Champaign, IL 61820 USA.
   Univ Virginia, Dept Comp Sci, Charlottesville, VA 22904 USA.
C3 University of Illinois System; University of Illinois Urbana-Champaign;
   University of Virginia
RP Univ Illinois, Natl Ctr Supercomp Applicat, 605 E Springfield Ave, Champaign, IL 61820 USA.
EM jbasney@ncsa.uiuc.edu
CR [Anonymous], 2004, P 13 WORLD C EARTHQ
   [Anonymous], P 3 ANN PKI R D WORK
   BASNEY J, 2003, P 31 RES C COMM INF
   BASNEY J, YCS2004380 U YORK DE
   Butler R, 2000, COMPUTER, V33, P60, DOI 10.1109/2.889094
   Czajkowski K., 2004, WS RESOURCE FRAMEWOR
   CZAJKOWSKI K, 1998, P IPPS SPDP 98 WORKS
   DELVECCHIO D, 2004, USER CENTRIC CREDENT
   Dierks T., 1999, RFC, V2246
   FARRELL S, 2004, RFC, V3767
   Foster I, 2002, COMPUTER, V35, P37, DOI 10.1109/MC.2002.1009167
   Foster I, 1997, INT J SUPERCOMPUT AP, V11, P115, DOI 10.1177/109434209701100205
   FROHNER A, 2004, FINAL SECURITY REPOR
   GANESAN R, 1995, P S NETW DISTR SYST
   GUTMANN P, 2003, P 12 USENIX SEC S WA
   HOWARD L, 1998, RFC, V2307
   Hsu YK, 1998, IEEE INTERNET COMPUT, V2, P73, DOI 10.1109/4236.670687
   KALER C, 2004, WEB SERVICES TRUST L
   KORNIEVSKAIA O, 2001, P 10 USENIX SEC S WA
   Laszewski G., 2001, CONCURR COMP-PRACT E, V13, P643, DOI DOI 10.1002/CPE.572
   LINN J, 1997, RFC, V2078
   LORCH M, 2004, P 4 IEEE ACM INT S C
   MYERS J, 1997, RFC, V2222
   NEUMAN BC, 1994, IEEE COMMUN MAG, V32, P33, DOI 10.1109/35.312841
   Novotny J, 2004, EUROMICRO CONF PROC, P412, DOI 10.1109/EURMIC.2004.1333397
   Novotny J, 2001, 10TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P104, DOI 10.1109/HPDC.2001.945181
   RESCORLA E, 2000, RFC, V2818
   *RSA LAB, 2000, PUBL CRYPT STAND
   SAMAR V, 1996, P 3 ACM C COMP COMM, P1
   SANDHOLM T, GLOBUS TOOLKIT 3 COR
   SANDHU R, 2002, NIST SPECIAL PUBLICA, V7059
   SARBARI G, 2002, NIST SPECIAL PUBLICA, V7059
   TARDO J, 1991, P IEEE COMP SOC S RE
   Thomas M, 2001, 10TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P216, DOI 10.1109/HPDC.2001.945191
   TUECKE S, 2004, RFC, V3820
   Tuecke Steven., 2003, OPEN GRID SERVICES I
   WANG X, 2003, NIST SPECIAL PUBLICA, V7085
   WASSON G, 2004, EXPLOITING WSRF WSRF
   WELCH V, 2003, P 12 INT S HIGH PERF
   Zhou LD, 2002, ACM T COMPUT SYST, V20, P329, DOI 10.1145/571637.571638
NR 40
TC 76
Z9 86
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2005
VL 35
IS 9
BP 801
EP 816
DI 10.1002/spe.688
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 943CO
UT WOS:000230329800002
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Maccari, A
   Hele, A
AF Maccari, A
   Hele, A
TI Managing infinite variability
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE variability management; product family architecture; mobile terminal
   software
ID EVOLUTION
AB Mobile terminals have evolved from basic portable telephones to complex and diverse devices that encompass dozens of other features, ranging from tri-dimensional games to office suites with data transmission capabilities. Variability is value: mobile terminal manufacturers must succeed in fulfilling the requirements of hundreds of mobile telecom operators worldwide, and at the same time increase the value of their brand by adopting a common user interface style while offering the features that the target end-user category desires. This makes for practically infinite variability and creates a business problem. The complexity of the variability problem increases due to issues such as the ability to 'plug and play' and 'feature descension' (the down-scaling of high-end features and their introduction into lower-end models). The main lesson we have learned from our experience in this field is that the application of relatively simple architectural patterns usually eases up management of the complexity at the architectural level. However, tackling the variability problem at the technical level is ineffective unless the organization is able to ensure the application of the solutions. We analyze the main challenges that lie behind the variability problem in mobile terminals, at both technical and organizational level, and illustrate some of the solutions we have implemented together with our product developers and system architects. Our experience calls for more applied research in the area of variability management, as well as for a number of enhancements to academic curricula. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Nokia Networks, I-00144 Rome, Italy.
   Nokia Mobile Phones, San Diego, CA 92131 USA.
C3 Nokia Corporation; Nokia Corporation; Nokia Bell Labs
RP Maccari, A (corresponding author), Nokia Networks, Via Bombay 5, I-00144 Rome, Italy.
EM alessandro.maccari@nokia.com
CR [Anonymous], 2000, SOFTWARE ARCHITECTUR
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Brand Stewart., 1994, BUILDINGS LEARN WHAT
   BUSCHMANN F, 1995, SYSTEM PATTERNS, V1
   GIBSON JP, 1997, FEATURE INTERACTIONS, V4
   GRISS ML, 2000, LECT NOTES COMPUTER, V1844
   HEIE A, 2002, 2 INT SOFTW PROD LIN
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   JARING M, 2002, LECT NOTES COMPUTER, V2379, P15
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   KEEPENCE B, 1999, IEEE SOFTWARE    JUL, P102
   LEHMAN MM, 1994, ENCY SOFTWARE ENG, V2, P1202
   Lorentsen L., 2002, Acta Cybernetica, V15, P621
   Maccari A, 2002, LECT NOTES COMPUT SC, V2290, P64
   Maccari A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P585, DOI 10.1109/ICSE.2002.1008003
   MACCARI A, 2002, LECT NOTES COMPUTER, V1951, P107
   MACCARI A, 2002, IFIP C P, V224
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   van Ommering R, 2002, LECT NOTES COMPUT SC, V2290, P51
   VANGURP J, 2001, P WORK IEEE IFIP C S
NR 21
TC 12
Z9 12
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2005
VL 35
IS 6
BP 513
EP 537
DI 10.1002/spe.645
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 923JN
UT WOS:000228906300001
DA 2024-07-18
ER

PT J
AU Kreahling, WC
   Whalley, D
   Bailey, MW
   Yuan, X
   Uh, GR
   van Engelen, R
AF Kreahling, WC
   Whalley, D
   Bailey, MW
   Yuan, X
   Uh, GR
   van Engelen, R
TI Branch elimination by condition merging
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE compiler; condition merging; profiling; code duplication
AB Conditional branches are expensive. Branches require a significant percentage of execution cycles since they occur frequently and cause pipeline flushes when mispredicted. In addition, branches result in forks in the control flow, which can prevent other code-improving transformations from being applied. In this paper we describe profile-based techniques for replacing the execution of a set of two or more branches with a single branch on a conventional scalar processor. These sets of branches can include tests of multiple variables. For instance, the test if (p1 != 0 && p2 != 0), which is testing for NULL pointers, can be replaced with if (p1 & p2 != 0). Program profiling is performed to target condition merging along frequently executed paths. The results show that eliminating branches by merging conditions can significantly reduce the number of conditional branches executed in non-numerical applications. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Florida State Univ, Tallahassee, FL 32306 USA.
   Hamilton Coll, Clinton, NY 13323 USA.
   Boise State Univ, Boise, ID 83725 USA.
C3 State University System of Florida; Florida State University; Hamilton
   College; Idaho; Boise State University
RP Florida State Univ, Tallahassee, FL 32306 USA.
EM kreahlin@cs.fsu.edu
RI Bailey, Mark W/A-3148-2008
CR ALLEN FE, 1971, CATALOGUE OPTIMIZING, P1
   Bala V, 2000, ACM SIGPLAN NOTICES, V35, P1, DOI 10.1145/358438.349303
   BENITEZ ME, 1988, P SIGPLAN 88 C PROGR, P329
   BODIK R, 1997, P ACM SIGPLAN 97 C P, P146
   DAVIDSON JW, 1991, MICROPROCESS MICROSY, V15, P459, DOI 10.1016/0141-9331(91)90002-W
   DONGARRA JJ, 1979, SOFTWARE PRACT EXPER, V9, P219, DOI 10.1002/spe.4380090307
   Fraser Christopher W., 1995, A retargetable C compiler: Design and implementation
   GRANLUND T, 1992, P ACM SIGPLAN C PROG, P341
   Hennessy J. L., 2012, Computer Architecture A Quantitative Approach, V5th
   MUELLER F, 1995, P SIGPLAN 95 C PROGR, P56
   Ross KennethA., 2002, SIGMOD, P109
   Schlansker M., 1995, Proceedings of the 28th Annual International Symposium on Microarchitecture (Cat. No.95TB100012), P57, DOI 10.1109/MICRO.1995.476813
   SCHLANSKER MS, 1999, P ACM SIGPLAN 1999 C, P155
   SMITH AJ, 1982, COMPUT SURV, V14, P473, DOI 10.1145/356887.356892
   UH GR, 1997, P INT STAT AN S, P315
   WARTER NJ, 1993, P C PROGR LANG DES I, P290
   YANG M, 1998, P ACM SIGPLAN 98 C P, P130
   YANG M, 2002, EFFICIENT EFFECTIVE, P667
NR 18
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2005
VL 35
IS 1
BP 51
EP 74
DI 10.1002/spe.627
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 884HO
UT WOS:000226075700004
DA 2024-07-18
ER

PT J
AU Cook, JJ
AF Cook, JJ
TI P#: a concurrent Prolog for the .NET framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE concurrency; Prolog; C#; .NET
AB We discuss P#, our implementation of a tool that allows interoperation between a concurrent superset of the Prolog programming language and C#. This enables Prolog to be used as a native implementation language for Microsoft's NET platform. P# compiles a linear logic extension of Prolog to C# source code. We can thus create C# objects from Prolog and use C#'s graphical, networking and other libraries. We add language constructs on the Prolog side that allow concurrent Prolog code to be written. A primitive predicate is provided that evaluates a Prolog structure on a newly forked thread. Communication between threads is based on the unification of variables contained in such a structure. It is also possible for threads to communicate through a globally accessible table. All of the new features are available to the programmer through new built-in Prolog predicates. We discuss two software engineering tools implemented using P#. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Edinburgh, Lab Fdn Comp Sci, Edinburgh EH9 3JZ, Midlothian, Scotland.
C3 University of Edinburgh
RP Cook, JJ (corresponding author), Univ Edinburgh, Lab Fdn Comp Sci, Edinburgh EH9 3JZ, Midlothian, Scotland.
EM Jon.Cook@ed.ac.uk
CR Ai't-Kaci Hassan., 1999, Warren's Abstract Machine: A Tutorial Reconstruction
   ALBAHRARI B, 2004, COMP OVERVIEW C
   [Anonymous], 2000, The C++ Programming Language
   [Anonymous], LECT NOTES COMPUTER
   BAGNARA R, 2002, ASS LOGIC PROGRAMMIN, V15
   BANBARA M, 1998, P POSTJICSLP 98 WORK
   BANBARA M, 1999, ELECT NOTES COMPUTER, V30, P1
   BANBARA M, 1997, P 10 EXH S IND APPL, P56
   BECKET R, 2004, MERCURY TUTORIAL
   Carro M, 1999, LOGIC PROGRAMM, P320
   CIANCARINI P, 1992, COMPUT LANG, V17, P213, DOI 10.1016/0096-0551(92)90013-D
   Clocksin W.F., 1994, PROGRAMMING PROLOG
   CODOGNET P, 1995, INT C LOG PROGR, P317
   CONWAY T, 2004, PROLOG MERCURY TRANS
   DEMOEN B, 1994, ICLP WORKSH PAR DAT, P79
   FREIRE J, 1998, J FUNCTIONAL LOGIC P, P1
   Girard J.-Y., 1995, Advances in Linear Logic
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   Gosling J., 2000, The Java Language Specification
   GREGORY S, 1987, PARALLEL LOGIC PROGR
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   HENDERSON F, 2004, MERCURY LANGUAGE REF
   Hermenegildo M. V., 1995, INT C LOG PROGR 1995, P631
   Hoare A. R. C., 1985, COMMUNICATING SEQUEN
   HODAS JS, 1998, IJCSLP, P145
   KENNEDY AJ, 1996, J FUNCTIONAL PROGRAM, V6, P527
   Liberty J., 2001, Programming C#
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   LUSK E, 1988, P INT C 5 GEN COMP S, P819
   MIEROWSKY C, 1984, CS8421 TR WEIZM I
   Pereira L. M., 1984, P INT C FGCS, P283
   SHAPIRO E, 1987, CONCURRENT PROLOG CO
   TAMURA N, 1996, P 2 FUJ INT WORKSH F
   TAMURA N, 1997, P IASTED INT C ART I, P180
   TARAU P, 1990, LECT NOTES COMPUT SC, V456, P159
   TICK E, 1995, J LOGIC PROGRAM, V23, P89, DOI 10.1016/0743-1066(94)00038-8
   Warren D. H. D., 1983, 309 SRI INT
   WARREN DHD, 1988, P 5 INT C S LOG PROG
   2004, NET LANGUAGES
   2004, MICROSOFT DEV
NR 40
TC 6
Z9 6
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2004
VL 34
IS 9
BP 815
EP 845
DI 10.1002/spe.594
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 836HU
UT WOS:000222547300002
DA 2024-07-18
ER

PT J
AU Mann, ZA
   Kondorosi, K
AF Mann, ZA
   Kondorosi, K
TI Tracing system-level communication in distributed systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE tracing; debugging; CORBA; interceptor; middleware; meta-objects
ID PARALLEL
AB Traditional tracing mechanisms, usually developed for use in a single-computer environment, are bound to a specific programming language. Today's highly distributed and heterogeneous computing environments require new tracing methodologies. This paper addresses the problem by reviewing ways in which the middleware might-and should-support tracing. In particular, CORBA (Common Object Request Broker Architecture) meta-objects that can be applied for tracing are studied. One meta-object, namely the interceptor concept, is presented in more depth, followed by a detailed description of an interceptor-based tracing architecture for CORBA applications. Implementation details and evaluation experience are given. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Budapest Univ Technol & Econ, Dept Control Engn & Informat Technol, H-1117 Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Mann, ZA (corresponding author), Budapest Univ Technol & Econ, Dept Control Engn & Informat Technol, Magyar Tudosok Korutja 2, H-1117 Budapest, Hungary.
EM mann@iit.bine.hu
RI Kondorosi, Karoly/H-4867-2012; Mann, Zoltan/H-4597-2012
CR BEGUELIN A, 1993, CMUCS93167 CARN U SC
   Beguelin A L, 1993, P WORKSH HET PROC AP, P92
   COLE B, 2001, DEBUG TEST DISTRIBUT
   CONTHY SA, 2001, JAVAWORLD JAVA TIP 5
   DUCHIEN L, 1999, 9910 CNAMCEDRIC
   Gamma Erich., 1994, DESIGN PATTERNS
   GARG VK, 1997, P 3 INT WORKSH AUT D, P1
   GRANSART C, 1999, LECT NOTES COMPUTER, V1628
   HUNT GC, 1999, P 5 C OBJ OR TECHN S
   Kacsuk P, 1997, PARALLEL COMPUT, V22, P1747, DOI 10.1016/S0167-8191(96)00075-0
   Ko C., 1994, Proceedings. 10th Annual Computer Security Applications Conference (Cat. No.94TH8032), P134, DOI 10.1109/CSAC.1994.367313
   Kunz T, 1997, COMPUT J, V40, P499, DOI 10.1093/comjnl/40.8.499
   KUNZ T, 1995, P 3 PVM US GROUP M
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   LAURENTOWSKI A, 1995, LECT NOTES COMPUTER, V966
   Ludwig T, 1997, INT J SUPERCOMPUT AP, V11, P160, DOI 10.1177/109434209701100208
   MAY JM, 1994, THESIS U CALIFORNIA
   MENG X, 1997, P IEEE INT PERF COMP
   MILLS DL, 1995, IEEE ACM T NETWORK, V3, P245, DOI 10.1109/90.392384
   NERI D, 1997, P TRIADA 97
   NETZER RHB, 1992, SUPERCOMPUTING 92
   OTTA M, 2001, EUR RES SEM ADV DIST
   PLACIDE P, 1995, P ERSADS 95
   POPOVICI A, 2002, 1 INT C ASP OR SOFTW
   Siegel J., 2000, CORBA 3 Fundamentals and Programming
   SIMON E, 1997, PC NETWORKING
   SINGLETON F, 2002, LINUX J
   Tanenbaum A.S., 2002, DISTRIBUTED SYSTEMS
   THANE H, 2001, P REAL TIME EMBEDDED
   WANG N, 2001, P 6 US C OBJ OR TECH
   WANG N, 2001, IEEE COMM MAG SPEC I, V39
   WISMULLER R, 1997, TOOL SET PROJECT INT
   ZYMASZEK J, 1997, P EUR RES SEM ADV DI
   2003, REAL TIME CORBA TAO
NR 34
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2004
VL 34
IS 8
BP 727
EP 755
DI 10.1002/spe.589
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 834SS
UT WOS:000222431700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bellotti, F
   Berta, R
   De Gloria, A
AF Bellotti, F
   Berta, R
   De Gloria, A
TI Evaluation and optimization of method calls in Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; compiler optimization; inlining; dynamic message dispatching;
   performance evaluation
ID HIGH-PERFORMANCE; PROGRAMS; SUBSTITUTION; COMPILER
AB Recent advances in Virtual Machine's technology have led to the diffusion of Java execution environments which provide performance levels comparable to those of traditional languages such as C/C++ and Fortran. This paper's focus is on method calls, a well researched area of compilers' optimization. In particular, we evaluate the impact on the performance of the Java virtual call mechanism and the advantages which can be obtained through the inlining optimization. Moreover, we propose a new heuristic methodology which allows us to consider whole sequences of methods for the inlining decision and not only simple couples of caller-callee methods.
   The proposed methodology operates at bytecode level and is applicable only to the calls that can be resolved at compile time. Thus, we execute a devirtualization algorithm before the inlining decision, in order to enlarge the basis for the optimization.
   We made empirical measures on three major platforms (Unix, Windows and Linux) by using the SPEC JVM98 benchmark suite. Results reveal an average performance improvement of 1.9% with devirtualization and 5.5% with inlining. We discuss the different behaviour of single benchmarks and virtual machines, arguing that dynamic compilers are not yet able to fully exploit the wider scope for intraprocedural optimization offered by eliminating the calls. Finally, we show that taking into consideration whole sequences of calls-instead of single calls-is effective only on a few benchmarks where hotspots of execution involve cycles of nested methods. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Genoa, Dept Biophys & Elect Engn, I-16145 Genoa, Italy.
C3 University of Genoa
RP Bellotti, F (corresponding author), Univ Genoa, Dept Biophys & Elect Engn, Via Opera Pia 11A, I-16145 Genoa, Italy.
EM franz@dibe.unige.it
RI Berta, Riccardo/G-8989-2012; Berta, Riccardo/O-8165-2019
OI Berta, Riccardo/0000-0003-1937-3969; Berta, Riccardo/0000-0003-1937-3969
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 1991, OBJECT ORIENTED DESI
   ARNOLD M, 2000, P ACM WORKSH DYN AD
   BARISONE A, 2000, P ISPASS 2000 AUST T
   Bull JM, 2000, CONCURRENCY-PRACT EX, V12, P375, DOI 10.1002/1096-9128(200005)12:6<375::AID-CPE480>3.0.CO;2-M
   BULL JM, 2001, P ACM JAVA GRANDE IS
   Burke M. G., 1999, Proceedings of the ACM 1999 Java Grande Conference, P129, DOI 10.1145/304065.304113
   CALDER B, 1994, J PROGRAM LANG, V2, P313
   CHANG PP, 1992, SOFTWARE PRACT EXPER, V22, P349, DOI 10.1002/spe.4380220502
   COOPER KD, 1991, SOFTWARE PRACT EXPER, V21, P581, DOI 10.1002/spe.4380210604
   Cramer T, 1997, IEEE MICRO, V17, P36, DOI 10.1109/40.591653
   Daly C., 2001, Proceedings of the 2001 joint ACM-ISCOPE conference on Java Grande, P106, DOI [DOI 10.1145/376656.376826, 10.1145/376656, DOI 10.1145/376656]
   DAVIDSON JW, 1988, SOFTWARE PRACT EXPER, V18, P775, DOI 10.1002/spe.4380180805
   DETLEFS D, 1999, P ECOOP 99
   DRIESEN K, 2001, EFFICIENT POLYM CALL
   DRIESEN K, 1996, P OOPSLA 96 OCT
   Fitzgerald R, 2000, SOFTWARE PRACT EXPER, V30, P199, DOI 10.1002/(SICI)1097-024X(200003)30:3<199::AID-SPE296>3.0.CO;2-2
   Getov V, 2001, COMMUN ACM, V44, P118, DOI 10.1145/383845.383872
   Gosling James, 1996, The Java Language Specification
   HOELZLE U, 1992, P C PLDI 92 SAN FRAN, P32
   HOELZLE U, 1994, ACM SIGPLAN 94 C PRO, P326
   Hsieh CHA, 1997, COMPUTER, V30, P67, DOI 10.1109/2.587551
   Kazi IH, 2000, ACM COMPUT SURV, V32, P213, DOI 10.1145/367701.367714
   Kielmann T, 2001, COMMUN ACM, V44, P110, DOI 10.1145/383845.383871
   Lindholm T., 1997, JAVA VIRTUAL MACHINE
   Moreira JE, 2001, COMMUN ACM, V44, P102, DOI 10.1145/383845.383867
   MULLER G, 1997, P COOTS 97 PORTL OR
   Paleczny M., 2001, P JAV VIRT MACH RES
   PANCAKE CM, 2001, COMMUN ACM, V44, P99
   PROEBSTING T, 1997, P COOTS 97 PORTL OR
   Radhakrishnan R, 2001, IEEE T COMPUT, V50, P131, DOI 10.1109/12.908989
   RICHARDSON S, 1989, SOFTWARE PRACT EXPER, V19, P149, DOI 10.1002/spe.4380190205
   SCHEIFLER RW, 1977, COMMUN ACM, V20, P647, DOI 10.1145/359810.359830
   SESHADRI V, AIXPERT MAG
   *STAND PERF EV COR, SPECJVM98 VERS 1 03
   SUGANUMA T, 2002, JVM 02 JAVA TM VIRT
   SUGANUMA T, 2001, P ACM SIGPLAN C OBJ
   Veldema RS, 2001, LECT NOTES COMPUT SC, V2110, P685
   Venners Bill., 1998, Inside the Java Virtual Machine
   Zendra O, 1997, ACM SIGPLAN NOTICES, V32, P125, DOI 10.1145/263700.263728
   TOURBO J JAVA NATIVE
   JAVA HOT SPOT PERFOR
NR 42
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 10
PY 2004
VL 34
IS 4
BP 395
EP 431
DI 10.1002/spe.570
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 810IU
UT WOS:000220698800003
OA Bronze
DA 2024-07-18
ER

PT J
AU Järvi, J
   Powell, G
   Lumsdaine, A
AF Järvi, J
   Powell, G
   Lumsdaine, A
TI The Lambda Library:: unnamed functions in C++
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C plus; generic programming; functional programming
ID BINDERS
AB The Lambda Library (LL) adds a form of lambda functions to C++, which are common in functional programming languages. The LL is implemented as a template library using standard C++; thus no language extensions or preprocessing is required. The LL consists of a rich set of tools for defining unnamed functions. In particular these unnamed functions work seamlessly with the generic algorithms in the C++ Standard Library. The LL offers significant improvements, in terms of generality and ease of use, compared to the current tools in the C++ Standard Library. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Indiana Univ, Pervas Technol Labs, Bloomington, IN 47405 USA.
C3 Indiana University System; Indiana University Bloomington
RP Järvi, J (corresponding author), Indiana Univ, Pervas Technol Labs, Bloomington, IN 47405 USA.
OI Lumsdaine, Andrew/0000-0002-9153-6622
CR ALEXANDRESCU A, 1999, CCPLUSPLUS USERS J, V17
   ALEXANDRESCU A, 2001, MODERN CPLUSPLUS DES
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Austern MatthewH., 1998, Generic programming and the STL: Using and extending the C++ Standard Template Library
   DEGUZMAN J, 2002, PHOENIX LIB PART SPI
   GREGOR D, 2001, BOOST FUNCTION LIB
   HANEY S, 1999, DOBBS J          OCT, P88
   *INT SOFTW ENG INC, 2000, AG IT INTR
   *ISO IEC, 1998, 14882 ISOIEC
   Jarvi J., 2001, C/C++ Users Journal, V19, P24
   Järvi J, 2000, LECT NOTES COMPUT SC, V1799, P165
   JARVI J, 2001, P MULT PROGR 00 LANG, P43
   JARVI J, BOOST TUPLE LIB
   JARVI J, 2002, BOOST LAMBDA LIB
   KISELYOV O, 1998, INT C FUNCT PROGR BA
   KOENIG A, 1995, SOFTWARE PRACTICE EX, V25
   LAUFER K, 1995, P C OBJ OR TECHN COO
   MADDOCK J, 2002, BOOST TYPE TRAITS
   McNamara B, 2001, ACM SIGPLAN NOTICES, V36, P25, DOI 10.1145/375431.375417
   MCNAMARA B, 2000, P 2000 INT C FUNCT P
   POWELL G, 2000, CPLUSPLUS REPORT, V12
   *SGI, SGI STAND TEMPL LIB
   Simonis V, 2000, ACM SIGPLAN NOTICES, V35, P46, DOI 10.1145/345105.345122
   STEPANOV A, 1994, HPL9434
   STRIEGNITZ J, FACT
   STRIEGNITZ J, 2000, U WORKSH CPLUSPL TEM
   STROUSTRUP B, 1999, EMB SYST C CHIC MAR
   Veldhuizen T., 1995, C++ Report, V7, P26
   VELDHUIZEN T, 1999, BLITZPLUSPLUS LIB HO
NR 29
TC 11
Z9 16
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2003
VL 33
IS 3
BP 259
EP 291
DI 10.1002/spe.504
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 655GD
UT WOS:000181542200003
DA 2024-07-18
ER

PT J
AU Roy, M
   Bag, R
   Deb, N
   Cortesi, A
   Chaki, R
   Chaki, N
AF Roy, Mandira
   Bag, Raunak
   Deb, Novarun
   Cortesi, Agostino
   Chaki, Rituparna
   Chaki, Nabendu
TI SCARS: Suturing wounds due to conflicts between non-functional
   requirements in autonomous and robotic systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomous systems; conflicts; contexts; non-functional requirements;
   optimization
AB In autonomous and robotic systems, the functional requirements (FRs) and non-functional requirements (NFRs) are gathered from multiple stakeholders. The different stakeholder requirements are associated with different components of the robotic system and with the contexts in which the system may operate. This aggregation of requirements from different sources (multiple stakeholders) often results in inconsistent or conflicting sets of requirements. Conflicts among NFRs for robotic systems heavily depend on features of actual execution contexts. It is essential to analyze the inconsistencies and conflicts among the requirements in the early planning phase to design the robotic systems in a systematic manner. In this work, we design and experimentally evaluate a framework, called SCARS, providing: (a) a domain-specific language extending the ROS2 Domain Specific Language (DSL) concepts by considering the different environmental contexts in which the system has to operate, (b) support to analyze their impact on NFRs, and (c) the computation of the optimal degree of NFR satisfaction that can be achieved within different system configurations. The effectiveness of SCARS has been validated on the iRobot (R)$$ {}<^>{\circledR } $$ Create (R)$$ {}<^>{\circledR } $$3 robot using Gazebo simulation.
C1 [Roy, Mandira; Chaki, Nabendu] Univ Calcutta, Dept Comp Sci & Engn, Kolkata 700106, W Bengal, India.
   [Roy, Mandira; Bag, Raunak; Cortesi, Agostino] Ca Foscari Univ, Dept Environm Sci Informat & Stat, Venice, Italy.
   [Deb, Novarun] Indian Inst Informat Technol, Dept Comp Sci & Engn, Vadodara IIIT V, Gandhinagar, India.
   [Chaki, Rituparna] Univ Calcutta, AKC Sch Informat Technol, Kolkata, India.
C3 University of Calcutta; Universita Ca Foscari Venezia; University of
   Calcutta
RP Roy, M (corresponding author), Univ Calcutta, Dept Comp Sci & Engn, Kolkata 700106, W Bengal, India.
EM mrcomp_rs@caluniv.ac.in
RI CHAKI, NABENDU/A-5869-2015; Cortesi, Agostino/F-9637-2011
OI Cortesi, Agostino/0000-0002-0946-5440; Bag, Raunak/0009-0008-3592-3186
FU EU-NGEU [PE00000014]; EU - PNRR (Mission 4.2, Investment 1.5)
   NextGeneration EU [ECS 00000043]; Ca' Foscari University
FX Work partially supported by SERICS (PE00000014) under the NRRP MUR
   program funded by the EU-NGEU, iNEST-Interconnected NordEst Innovation
   Ecosystem funded by PNRR (Mission 4.2, Investment 1.5) NextGeneration
   EU-Project ID: ECS 00000043, and SPIN-2021 "Ressa-Rob" funded by Ca'
   Foscari University.
CR Alberts E., 2023, IEEE 20 INT C SOFTW, DOI [10.1109/ICSA-C57050.2023.00038, DOI 10.1109/ICSA]
   Aloui K., 2022, NEW SYSML MODEL UAV, DOI [10.1109/SysCon53536.2022.9773922, DOI 10.1109/SYSCON53536.2022.9773922]
   Bass Len, 2012, SEI S SOFTW
   Brugali D., 2019, IEEE INT C REAL TIM, DOI [10.1109/RCAR47638.2019.9044033, DOI 10.1109/RCAR47638.2019.9044033]
   Brugali D, 2018, PROCEEDINGS OF 2018 IEEE INTERNATIONAL CONFERENCE ON REAL-TIME COMPUTING AND ROBOTICS (IEEE RCAR), P439, DOI 10.1109/RCAR.2018.8621699
   Carvalho RM, 2022, REQUIR ENG, V27, P317, DOI 10.1007/s00766-021-00364-2
   Carvalho RM, 2018, INT CONF RES CHAL
   Carvalho RM, 2017, INT REQUIR ENG CONF, P544, DOI 10.1109/RE.2017.51
   Carvalho RM., 2020, P REFSQ WORKSH
   Chaudhari P, 2022, MATER TODAY-PROC, V57, P1509, DOI 10.1016/j.matpr.2021.12.047
   Chung L., 2000, Non-functional requirements in software engineering, V5
   Colledanchise M, 2021, IEEE ROBOT AUTOM LET, V6, P5929, DOI 10.1109/LRA.2021.3087442
   Cui J, 2019, AD HOC NETW, V90, DOI 10.1016/j.adhoc.2018.12.006
   Cysneiros LM., 2007, EVALUATING EFFECTIVE
   Dabbagh M, 2014, SCI WORLD J, DOI 10.1155/2014/737626
   Dhouib Saadia, 2012, Simulation, Modeling, and Programming for Autonomous Robots. Proceedings of the Third International Conference, SIMPAR 2012, P149, DOI 10.1007/978-3-642-34327-8_16
   Finucane C, 2010, IEEE INT C INT ROBOT, P1988, DOI 10.1109/IROS.2010.5650371
   Furst S., 2019, IEEE INT C SOFTW ARC, DOI [10.1109/ICSA-C.2019.00013, DOI 10.1109/ICSA]
   Guizani A, 2023, P I MECH ENG C-J MEC, V237, P3650, DOI 10.1177/09544062221149314
   Haindl P., 2019, 2019 IEEE INT C SOFT, DOI [10.1109/ICSA-C.2019.00024, DOI 10.1109/ICSA]
   Hartsell C., 2021, INT S SOFTW ENG AD S, DOI [10.1109/SEAMS51251.2021.00025, DOI 10.1109/SEAMS51251.2021.00025]
   Institute PM, 2013, GUID PROJ MAN BOD KN
   Joseane VP., 23 INT C ENT INF SYS, DOI [10.5220/0010461901110119, DOI 10.5220/0010461901110119]
   Ladeira M, 2021, J SYST ARCHITECT, V117, DOI 10.1016/j.sysarc.2021.102089
   Lawrence C., 2012, NONFUNCTIONAL REQUIR, DOI [10.1007/978-1-4615-5269-7, DOI 10.1007/978]
   Liu CL, 2016, COMPUT STAND INTER, V47, P62, DOI 10.1016/j.csi.2016.03.002
   Luckcuck M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3342355
   Mairiza D., 2013, 2013 IEEE 12 INT C I, DOI [10.1109/SoMeT.2013.6645645, DOI 10.1109/SOMET.2013.6645645]
   Mairiza D, 2011, COMM COM INF SC, V230, P31
   Mairiza D, 2010, ENASE 2010: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P20
   Maoz S, 2021, SOFTW SYST MODEL, V20, P1553, DOI 10.1007/s10270-021-00868-z
   Miyazawa A, 2019, SOFTW SYST MODEL, V18, P3097, DOI 10.1007/s10270-018-00710-z
   Nagrath V, 2022, LECT NOTE NETW SYST, V507, P892, DOI 10.1007/978-3-031-10464-0_62
   Nordmann A, 2014, LECT NOTES COMPUT SC, V8810, P195, DOI 10.1007/978-3-319-11900-7_17
   Parra S, 2021, 2021 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE 2021), P29, DOI 10.1109/RoSE52553.2021.00012
   Ramaswamy A., 2014, AAAI SPRING S
   Ramaswamy A., 2020, FORMAL SPECIFICATION, DOI [10.1007/978-3-030-14126-4%2D92, DOI 10.1007/978]
   Roy M, 2023, SOFTW SYST MODEL, V22, P1987, DOI 10.1007/s10270-023-01087-4
   Samin H, 2020, INT REQUIR ENG CONF, P416, DOI 10.1109/RE48521.2020.00061
   Vicente-Chicote C., 2018, P 5 INT WORKSH INT M, V2245, P40
   Wang Y., 2021, 2021 IEEE INT C UNM, DOI [10.1109/ICUS52573.2021.9641259, DOI 10.1109/ICUS52573.2021.9641259]
   Yoo J, 2009, IEEE SOFTWARE, V26, P42, DOI 10.1109/MS.2009.67
   Zager M., IECON 2022 48 ANN C, DOI [10.1109/IECON49645.2022.9969063, DOI 10.1109/IECON49645.2022.9969063]
   Zinovatna O, 2015, 2015 IEEE FIFTH INTERNATIONAL WORKSHOP ON REQUIREMENTS PATTERNS (REPA), P17, DOI 10.1109/RePa.2015.7407733
NR 44
TC 0
Z9 0
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2024
VL 54
IS 5
BP 759
EP 795
DI 10.1002/spe.3297
EA DEC 2023
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NB0V3
UT WOS:001126480200001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Fu, SC
   Dong, F
   Shen, D
   Lu, TY
AF Fu, Shucun
   Dong, Fang
   Shen, Dian
   Lu, Tianyang
TI Privacy-preserving model splitting and quality-aware device association
   for federated edge learning
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE federated edge learning; game theory; split learning; training accuracy;
   training efficiency
ID CLIENT SELECTION; OPTIMIZATION; NETWORKS
AB Federated edge learning (FEEL) provides a promising device-edge collaborative learning paradigm, which enables edge devices to parallel participate in model co-creation while preserving user privacy, opening countless opportunities to enable edge intelligence. With the growing demand for intelligent services, extensive FEEL deployment is inevitable. Nevertheless, existing FL schemes neglect two unique features (i.e., resource heterogeneity and data heterogeneity) in real-world edge learning and thus may negatively affect the training efficiency and accuracy. Specifically, (1) heterogeneous and limited device resources causemassive laggards, which bring intolerable training delay; (2) heterogeneous data distribution causes device quality divergence, bringing severe training accuracy degradation. This article proposes a split-based FEEL framework and an adaptive model splitting and quality-aware device association scheme (MSDA) to tackle the aforementioned challenges. MSDA contains two levels: at the model splitting level, according to device capability and model structure, an adaptive splitting mechanism is proposed to provide a low-latency and privacy-preserving model splitting strategy for each device and guide subsequent device association. At the device association level, each device is simulated as a player with a quality weight in the potential game. Then a quality-aware decentralized device association mechanism is designed to ensure that more high-quality devices upload local updates before the deadline with the help of the edge server. Finally, experimental results demonstrate that MSDA yields significant improvements, achieving up to 3.1x training speedup and 39% accuracy improvement compared to state-of-the-art methods.
C1 [Fu, Shucun; Dong, Fang; Shen, Dian; Lu, Tianyang] Southeast Univ, Sch Comp Sci & Engn, Nanjing, Peoples R China.
C3 Southeast University - China
RP Dong, F (corresponding author), Southeast Univ, Sch Comp Sci & Engn, Nanjing, Peoples R China.
EM fdong@seu.edu.cn
FU Collaborative Innovation Center of Novel Software Technology and
   Industrialization; Collaborative Innovation Center of Wireless
   Communications Technology; Jiangsu Provincial Key Laboratory of Network
   and Information Security [BM2003201]; Key Laboratory of Computer Network
   and Information Integration of Ministry of Education of China [93K-9];
   National Natural Science Foundation of China [62232004, 61972085,
   61906040, 6227072991]
FX <STRONG>& nbsp;</STRONG>Collaborative Innovation Center of Novel
   Software Technology and Industrialization; Collaborative Innovation
   Center of Wireless Communications Technology; Jiangsu Provincial Key
   Laboratory of Network and Information Security, Grant/Award Number:
   BM2003201; Key Laboratory of Computer Network and Information
   Integration of Ministry of Education of China, Grant/Award Number:
   93K-9; National Natural Science Foundation of China, Grant/Award
   Numbers: 62232004, 61972085, 61906040, 6227072991
CR Chen MZ, 2021, IEEE T WIREL COMMUN, V20, P269, DOI 10.1109/TWC.2020.3024629
   Deng XM, 2023, IEEE J SEL AREA COMM, V41, P755, DOI 10.1109/JSAC.2022.3229436
   Deng Y, 2022, INT J PAVEMENT ENG, V23, P2728, DOI 10.1080/10298436.2020.1869974
   Feng J, 2022, IEEE T PARALL DISTR, V33, P2687, DOI 10.1109/TPDS.2021.3131654
   Guo KH, 2021, SOFTWARE PRACT EXPER, V51, P2274, DOI 10.1002/spe.2894
   Gupta O, 2018, J NETW COMPUT APPL, V116, P1, DOI 10.1016/j.jnca.2018.05.003
   Han DJ., ICML 2021 WORKSH FED
   Han DJ, 2023, Arxiv, DOI [arXiv:2212.08343, DOI 10.48550/ARXIV.2212.08343]
   He Q, 2020, IEEE T PARALL DISTR, V31, P515, DOI 10.1109/TPDS.2019.2938944
   Hu M, 2024, IEEE T MOBILE COMPUT, V23, P194, DOI 10.1109/TMC.2022.3227014
   Hu M, 2022, IEEE T PARALL DISTR, V33, P2612, DOI 10.1109/TPDS.2022.3148113
   Huang G., 2022, IEEE T MOBILE COMPUT
   Huang ZW, 2021, INT CON DISTR COMP S, P729, DOI 10.1109/ICDCS51616.2021.00075
   Cho YJ, 2020, Arxiv, DOI arXiv:2010.01243
   Jia YZ, 2022, IEEE T IND INFORM, V18, P6300, DOI 10.1109/TII.2022.3154473
   Jiang QT, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, ICWS 2021, P341, DOI 10.1109/ICWS53863.2021.00052
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lai F, 2021, PROCEEDINGS OF THE 15TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '21), P19
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lim WYB, 2020, IEEE COMMUN SURV TUT, V22, P2031, DOI 10.1109/COMST.2020.2986024
   Liu J, 2023, IEEE T PARALL DISTR, V34, P535, DOI 10.1109/TPDS.2022.3224941
   Liu JC, 2021, COMPUT NETW, V199, DOI 10.1016/j.comnet.2021.108429
   Luo B, 2022, IEEE INFOCOM SER, P1739, DOI 10.1109/INFOCOM48880.2022.9796935
   McMahan HB, 2017, PR MACH LEARN RES, V54, P1273
   Iandola FN, 2016, Arxiv, DOI arXiv:1602.07360
   Nguyen DC, 2021, IEEE COMMUN SURV TUT, V23, P1622, DOI 10.1109/COMST.2021.3075439
   Nokland A., P 36 INT C MACH LEAR
   Pinyoanuntapong P, 2022, COMPUT NETW, V219, DOI 10.1016/j.comnet.2022.109396
   Qi LY, 2023, IEEE T KNOWL DATA EN, V35, P5444, DOI 10.1109/TKDE.2022.3168611
   Saha R, 2023, IEEE T PARALL DISTR, V34, P675, DOI 10.1109/TPDS.2022.3217271
   Samikwa E, 2022, COMPUT NETW, V218, DOI 10.1016/j.comnet.2022.109380
   Shi CF, 2020, PAP PALAEONTOL, V6, P143, DOI 10.1002/spp2.1265
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Song TS, 2019, IEEE INT CONF BIG DA, P2577, DOI [10.1109/bigdata47090.2019.9006327, 10.1109/BigData47090.2019.9006327]
   Thapa C., AAAI C ART INT
   Tian H, 2022, WORLD WIDE WEB, V25, P1769, DOI 10.1007/s11280-021-00939-7
   Tran NH, 2019, IEEE INFOCOM SER, P1387, DOI [10.1109/INFOCOM.2019.8737464, 10.1109/infocom.2019.8737464]
   Wang Z., 2022, Comput. Networks, V220
   Wu D, 2022, IEEE INTERNET THINGS, V9, P20889, DOI 10.1109/JIOT.2022.3176469
   Wu W, 2023, IEEE J SEL AREA COMM, V41, P1051, DOI 10.1109/JSAC.2023.3242704
   Xu J, 2021, IEEE T WIREL COMMUN, V20, P1188, DOI 10.1109/TWC.2020.3031503
   Xu XL, 2023, IEEE T IND INFORM, V19, P1655, DOI 10.1109/TII.2022.3195896
   Zeng RF, 2020, INT CON DISTR COMP S, P278, DOI 10.1109/ICDCS47774.2020.00094
   Zhao JX, 2023, IEEE T INTELL TRANSP, V24, P1106, DOI 10.1109/TITS.2022.3149753
   Zhou XK, 2023, IEEE T IND INFORM, V19, P570, DOI 10.1109/TII.2022.3170149
   Zhou XK, 2021, IEEE INTERNET THINGS, V8, P12588, DOI 10.1109/JIOT.2021.3077449
   Zhu DW, 2022, IEEE T IND INFORM, V18, P4893, DOI 10.1109/TII.2021.3113879
NR 47
TC 1
Z9 1
U1 6
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 AUG 14
PY 2023
DI 10.1002/spe.3252
EA AUG 2023
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P1TN2
UT WOS:001048537700001
OA Bronze
DA 2024-07-18
ER

PT J
AU Sadhukhan, D
   Ray, S
   Dasgupta, M
   Rodrigues, JJPC
AF Sadhukhan, Dipanwita
   Ray, Sangram
   Dasgupta, Mou
   Rodrigues, Joel J. P. C.
TI CLAACS-IOD: Certificate-embedded lightweight authentication and access
   control scheme for Internet of Drones
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Early Access
DE access control; AVISPA; Internet of Drones; Internet of Things;
   security; unmanned aerial vehicles (UAVs)
ID REMOTE USER AUTHENTICATION; CONTROL PROTOCOL; SECURITY PROTOCOLS;
   PROVABLY SECURE; KEY EXCHANGE; PRIVACY; DESIGN
AB In recent era, the unmanned aerial vehicles (UAVs) commonly known as drones has emerged as a one of the most significant and promising tools which has demonstrated its wide range of implementations variating from commercial domain to the field of defense due to its distinct capabilities such as inspection, surveillance, precision and so forth. Internet connected drones provides a propitious trend that boosts the flying safety, and service qualities of the UAVs where numerous low-altitude drones winged in different flying regions for executing a precise task such as gathering the real-time information from the unuttered environment to be interpretated by users. Nevertheless, the open-access insecure communications in hostile environment, the issues like safety and confidentiality threats, various security concerns such as the leakage of flying courses, identities, position, and gathered data by the drones are upstretched. To address these security concerns, access control mechanism provides a potential service in terms of authentication and key agreement for securing the communication between the individual drones within their respective flying regions. This article introduces a robust, efficient, lightweight, and privacy preserving ECC integrated access control approach by employing digital certificate with considering the high dynamicity and mobility of the drones. The designing of this proposed approach, that is, CLAASC-IoD is influenced by the aim of inter-drone and drone-to-ground station communication in the IoD paradigm. The detailed analysis of security using probabilistic random oracle model as well as simulation using well-accepted security verification tool AVISPA and comparative performance evaluation supports the claim of robustness, effectiveness, and proficiency.
C1 [Sadhukhan, Dipanwita; Ray, Sangram] Natl Inst Technol Sikkim, Dept Comp Sci & Engn, Ravangla, Sikkim, India.
   [Dasgupta, Mou] Natl Inst Technol Raipur, Dept Comp Applicat, Raipur, India.
   [Rodrigues, Joel J. P. C.] China Univ Petro East China, Coll Comp Sci & Technol, Qingdao, Peoples R China.
   [Rodrigues, Joel J. P. C.] Inst Telecomunicacoes, Covilha, Portugal.
   [Ray, Sangram] Natl Inst Technol Sikkim, Dept Comp Sci & Engn, Ravangla 737139, Sikkim, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Sikkim; National Institute of Technology (NIT System);
   National Institute of Technology Raipur; National Institute of
   Technology (NIT System); National Institute of Technology Sikkim
RP Ray, S (corresponding author), Natl Inst Technol Sikkim, Dept Comp Sci & Engn, Ravangla 737139, Sikkim, India.
EM sangram.ism@gmail.com
RI Rodrigues, Joel J. P. C./A-8103-2013
OI Rodrigues, Joel J. P. C./0000-0001-8657-3800; Sadhukhan,
   Dipanwita/0000-0001-6208-3591; Dasgupta, Mou/0000-0002-9948-6041
FU Ministry of Education, Government of India; FCT/MCTES [UIDB/50008/2020];
   Brazilian National Council for Scientific and Technological
   Development-CNPq [313036/2020-9]
FX Ministry of Education, Government of India; FCT/MCTES, Grant/Award
   Number: UIDB/50008/2020; Brazilian National Council for Scientific and
   Technological Development-CNPq, Grant/Award Number: 313036/2020-9
CR Abadi M, 2009, LECT NOTES COMPUT SC, V5643, P35, DOI 10.1007/978-3-642-02658-4_5
   Ali Z, 2020, IEEE ACCESS, V8, P43711, DOI 10.1109/ACCESS.2020.2977817
   Armando A, 2005, LECT NOTES COMPUT SC, V3576, P281
   BACH E, 1991, INFORM COMPUT, V90, P139, DOI 10.1016/0890-5401(91)90001-I
   Bellare M., 1993, P 1 ACM C COMP COMM, P62
   Bera B, 2020, COMPUT COMMUN, V153, P229, DOI 10.1016/j.comcom.2020.02.011
   Canetti R, 2002, LECT NOTES COMPUT SC, V2332, P337
   Canetti R, 2004, J ACM, V51, P557, DOI 10.1145/1008731.1008734
   Cao X, 2006, IEEE COMMUN LETT, V10, P580, DOI 10.1109/LCOMM.2006.060343
   Challa S, 2018, COMPUT ELECTR ENG, V69, P534, DOI 10.1016/j.compeleceng.2017.08.003
   Chang CC, 2016, IEEE T WIREL COMMUN, V15, P357, DOI 10.1109/TWC.2015.2473165
   Chaudhry SA, 2022, IEEE SYST J, V16, P309, DOI 10.1109/JSYST.2020.3036425
   Chaudhry SA, 2021, COMPUT NETW, V191, DOI 10.1016/j.comnet.2021.107999
   Cho G, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10093149
   Choudhary G, 2019, COMPUT ELECTR ENG, V74, P59, DOI 10.1016/j.compeleceng.2019.01.007
   Das AK, 2021, IEEE ACCESS, V9, P87024, DOI 10.1109/ACCESS.2021.3089871
   Das AK, 2018, IEEE INTERNET THINGS, V5, P4900, DOI 10.1109/JIOT.2018.2877690
   Das AK, 2018, FUTURE GENER COMP SY, V89, P110, DOI 10.1016/j.future.2018.06.027
   DOLEV D, 1983, IEEE T INFORM THEORY, V29, P198, DOI 10.1109/TIT.1983.1056650
   ELGAMAL T, 1985, IEEE T INFORM THEORY, V31, P469, DOI 10.1109/TIT.1985.1057074
   Ever YK, 2020, COMPUT COMMUN, V155, P143, DOI 10.1016/j.comcom.2020.03.009
   Gharibi M, 2016, IEEE ACCESS, V4, P1148, DOI 10.1109/ACCESS.2016.2537208
   Huang HF, 2009, COMPUT STAND INTER, V31, P272, DOI 10.1016/j.csi.2008.05.014
   Jameii SM, 2022, CONCURR COMP-PRACT E, V34, DOI 10.1002/cpe.7213
   Kim HS, 2009, IEEE T CONSUM ELECTR, V55, P492, DOI 10.1109/TCE.2009.5174412
   KOBLITZ N, 1987, MATH COMPUT, V48, P203, DOI 10.1090/S0025-5718-1987-0866109-5
   Kocher P. C., 1996, Advances in Cryptology - CRYPTO'96. 16th Annual International Cryptology Conference. Proceedings, P104
   Kumar N, 2021, SOFTWARE PRACT EXPER, V51, P2357, DOI 10.1002/spe.3006
   Li FG, 2016, COMPUT COMMUN, V89-90, P154, DOI 10.1016/j.comcom.2016.03.007
   Lin C, 2018, IEEE COMMUN MAG, V56, P64, DOI 10.1109/MCOM.2017.1700390
   Luo M., 2018, SECUR COMMUN NETW, V2018
   Majumder S, 2021, WIRELESS PERS COMMUN, V116, P1867, DOI 10.1007/s11277-020-07769-2
   Malani S, 2019, IEEE INTERNET THINGS, V6, P9762, DOI 10.1109/JIOT.2019.2931372
   Menezes A. J., 2018, HDB APPL CRYPTOGRAPH, DOI DOI 10.1201/9780429466335
   Messerges TS, 2002, IEEE T COMPUT, V51, P541, DOI 10.1109/TC.2002.1004593
   MILLER VS, 1986, LECT NOTES COMPUT SC, V218, P417, DOI 10.1007/3-540-39799-x_31
   Motlagh NH, 2016, IEEE INTERNET THINGS, V3, P899, DOI 10.1109/JIOT.2016.2612119
   Paar C., 2009, UNDERSTANDING CRYPTO
   Park K, 2018, IEEE ACCESS, V6, P30225, DOI 10.1109/ACCESS.2018.2844190
   Rangwani D, 2021, PEER PEER NETW APPL, V14, P1548, DOI 10.1007/s12083-020-01063-5
   Rangwani D, 2021, T EMERG TELECOMMUN T, V32, DOI 10.1002/ett.4218
   Ray S., 2011, 2011 International Conference on Recent Trends in Information Systems (ReTIS), P297, DOI 10.1109/ReTIS.2011.6146885
   Ray S., 2012, P WORLD C EXPERT SYS
   Ray S, 2016, WIRELESS PERS COMMUN, V90, P1331, DOI 10.1007/s11277-016-3393-7
   Sadhukhan D, 2021, J SYST ARCHITECT, V114, DOI 10.1016/j.sysarc.2020.101938
   Sadhukhan D, 2021, J SUPERCOMPUT, V77, P1114, DOI 10.1007/s11227-020-03318-7
   Sharma V, 2017, J NETW COMPUT APPL, V97, P79, DOI 10.1016/j.jnca.2017.08.013
   Singh J, 2021, T EMERG TELECOMMUN T, V32, DOI 10.1002/ett.4235
   Singh J, 2023, INT J COMMUN SYST, V36, DOI 10.1002/dac.4189
   Srinivas J, 2019, IEEE T VEH TECHNOL, V68, P6903, DOI 10.1109/TVT.2019.2911672
   Srinivas J, 2020, IEEE T DEPEND SECURE, V17, P1133, DOI 10.1109/TDSC.2018.2857811
   Stallings William, 2012, COMPUTER SECURITY PR
   Tian YF, 2019, J INF SECUR APPL, V48, DOI 10.1016/j.jisa.2019.06.010
   Wang D, 2015, IEEE T DEPEND SECURE, V12, P428, DOI 10.1109/TDSC.2014.2355850
   Wang H, 2020, PEER PEER NETW APPL, V13, P53, DOI 10.1007/s12083-019-0718-9
   Wang X, 2019, IEEE ACCESS, V7, P45061, DOI 10.1109/ACCESS.2019.2909004
   Wazid M., 2018, J. Ambient. Intell. Humaniz. Comput, P1, DOI [10.1007/s12652-018-1006-x, DOI 10.1007/S12652-018-1006-X]
   Wazid M, 2019, IEEE INTERNET THINGS, V6, P3572, DOI 10.1109/JIOT.2018.2888821
   Wazid M, 2018, IEEE INTERNET THINGS, V5, P269, DOI 10.1109/JIOT.2017.2780232
   Wu LB, 2019, IEEE T INF FOREN SEC, V14, P319, DOI 10.1109/TIFS.2018.2850299
   Zeng P, 2010, IEEE T CONSUM ELECTR, V56, P566, DOI 10.1109/TCE.2010.5505971
   Zhou YS, 2019, IEEE ACCESS, V7, P14757, DOI 10.1109/ACCESS.2019.2893918
NR 62
TC 2
Z9 2
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD 2023 MAR 2
PY 2023
DI 10.1002/spe.3196
EA MAR 2023
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9M3LU
UT WOS:000942136600001
DA 2024-07-18
ER

PT J
AU Wassenberg, J
   Blacher, M
   Giesen, J
   Sanders, P
AF Wassenberg, Jan
   Blacher, Mark
   Giesen, Joachim
   Sanders, Peter
TI Vectorized and performance-portable quicksort
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE quicksort; SIMD; vector instructions; vectorization
ID SORT
AB Recent works showed that implementations of quicksort using vector CPU instructions can outperform the non-vectorized algorithms in widespread use. However, these implementations are typically single-threaded, implemented for a particular instruction set, and restricted to a small set of key types. We lift these three restrictions: our proposed vqsort algorithm integrates into the state-of-the-art parallel sorter ips4o$$ ip{s}<^>4o $$, with a geometric mean speedup of 1.59. The same implementation works on seven instruction sets (including SVE and RISC-V V) across four platforms. It also supports floating-point and 16-128 bit integer keys. To the best of our knowledge, this is the fastest sort for large arrays of non-tuple keys on CPUs, up to 20 times as fast as the sorting algorithms implemented in standard libraries. This article focuses on the practical engineering aspects enabling the speed and portability, which we have not yet seen demonstrated for a quicksort implementation. Furthermore, we introduce compact and transpose-free sorting networks for in-register sorting of small arrays, and a vector-friendly pivot sampling strategy that is robust against adversarial input.
C1 [Wassenberg, Jan] Google Res, Brain Team, Zurich, Switzerland.
   [Blacher, Mark; Giesen, Joachim] Friedrich Schiller Univ, Theoret Comp Sci, Jena, Germany.
   [Sanders, Peter] Karlsruhe Inst Technol, Algorithm Engn, Inst Theoret Informat, Karlsruhe, Germany.
C3 Google Incorporated; Friedrich Schiller University of Jena; Helmholtz
   Association; Karlsruhe Institute of Technology
RP Wassenberg, J (corresponding author), Google Res, Brain Team, Zurich, Switzerland.
EM janwas@google.com
OI Blacher, Mark/0009-0007-2009-7996
CR Advanced Micro Devices Inc, 2021, AMD64 ARCH PROGR MAN
   Alexandrescu A., 2017, 16 INT S EXP ALG SCH, DOI 10.4230/lipics.sea.2017.24
   [Anonymous], 1998, The art of computer programming: Sorting and searching
   Axtmann M, 2022, ACM TRANS PARALLEL C, V9, DOI 10.1145/3505286
   Batcher K. E., 1968, P AFIPS SPRING JOINT, P307, DOI [DOI 10.1145/1468075.1468121, 10.1145/1468075. 1468121]
   Bingmann T, 2021, SOFTWARE PRACT EXPER, V51, P965, DOI 10.1002/spe.2922
   Blacher M., 2021, P S EXPT ALGORITHMS, V3, P1
   Bramas B, 2017, INT J ADV COMPUT SC, V8, P337, DOI 10.14569/IJACSA.2017.081044
   Chhugani J, 2008, PROC VLDB ENDOW, V1, P1313
   Codish M, 2019, J COMPUT SYST SCI, V104, P184, DOI 10.1016/j.jcss.2016.04.004
   Daoud AM, 2011, COMM COM INF SC, V194, P667
   github, SOFTWARE PRACT EXPER
   Google LLC, 2022, VQSORT IMPL
   Gueron S, 2016, COMPUT J, V59, P83, DOI 10.1093/comjnl/bxv063
   Hartmann G., ARXIV
   Hou KX, 2018, IEEE T PARALL DISTR, V29, P958, DOI 10.1109/TPDS.2018.2789903
   houmus, DAM THIS GOES 11
   Inoue Hiroshi., 2016, Low-Power and High-Speed Chips (COOL CHIPS XIX), 2016 IEEE Symposium in, P1
   Kushagra S., 2014, P 16 M ALG ENG EXP A, P47, DOI DOI 10.1137/1.9781611973198.6
   LEVIN SA, 1990, PARALLEL COMPUT, V16, P369, DOI 10.1016/0167-8191(90)90074-J
   Limaye A, 2018, INT SYM PERFORM ANAL, P149, DOI 10.1109/ISPASS.2018.00028
   llvm, SOFTWARE PRACT EXPER
   McIlroy MD, 1999, SOFTWARE PRACT EXPER, V29, P341, DOI 10.1002/(SICI)1097-024X(19990410)29:4<341::AID-SPE237>3.0.CO;2-R
   O'Neill M., 2018, EFFICIENTLY GENERATI
   STONE HS, 1978, IEEE T SOFTWARE ENG, V4, P138, DOI 10.1109/TSE.1978.231484
   Valve Corporation, 2021, STEAM HARDW SOFTW SU
   Wassenberg J., ARXIV
   Wassenberg J, 2011, LECT NOTES COMPUT SC, V6853, P160, DOI 10.1007/978-3-642-23397-5_16
   Yin Z., 2019, P IEEE INT C HIGH PE, P168
   Zagha M., 1991, Proceedings Supercomputing '91 (Cat. No.91CH3058-5), P712, DOI 10.1145/125826.126164
NR 30
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2022
VL 52
IS 12
BP 2684
EP 2699
DI 10.1002/spe.3142
EA AUG 2022
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A1NL
UT WOS:000843721600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, HT
   Meng, BL
   Liang, YW
AF Zhang, Hantao
   Meng, Baoluo
   Liang, Yiwen
TI Sort race
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE merge sort; quick sort; sorting algorithms
ID QUICKSORT
AB Sorting is one of the oldest computing problems and is still very important in the age of big data. Numerous algorithms and implementation techniques have been proposed. In this study, we focus on comparison based, internal sorting algorithms. We created 12 types of data of various sizes for experiments and tested extensively various implementations in a single setting. Using some effective techniques, we found that quicksort is adaptive to nearly sorted inputs and is still the best overall sorting algorithm. We also identified techniques that are effective in timsort, which is one of the most popular and efficient sorting methods based on natural mergesort. In addition, we created a version of our own mergesort, which performs better than timsort on nearly sorted instances. Our implementations of quicksort and mergesort are different from other implementations reported in all textbooks or research articles, and are faster than any version of the C library qsort functions not only for randomly generated data, but also for various types of nearly sorted data. This work can aid the user to choose the best sorting algorithm for the hard sorting job at hand, and provides a platform for anyone to test their own sorting algorithm against the best in the field.
C1 [Zhang, Hantao] Univ Iowa, Dept Comp Sci, Iowa City, IA 52242 USA.
   [Meng, Baoluo] GE Res, New York, NY USA.
   [Liang, Yiwen] Wuhan Univ, Dept Comp Sci, Wuhan, Hubei, Peoples R China.
C3 University of Iowa; General Electric; Wuhan University
RP Zhang, HT (corresponding author), Univ Iowa, Dept Comp Sci, Iowa City, IA 52242 USA.
EM hantao-zhang@uiowa.edu
RI Chen, Xupeng/KFA-5959-2024
OI Meng, Baoluo/0000-0002-3284-1969
CR BENTLEY JL, 1993, SOFTWARE PRACT EXPER, V23, P1249, DOI 10.1002/spe.4380231105
   COOK CR, 1980, COMMUN ACM, V23, P620, DOI 10.1145/359024.359026
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Dijkstra E. W., 1982, Theoretical Foundations of Programming Methodology. Lecture Notes of an International Summer School, P3
   Hoare C.A.R., 1961, Communications of the ACM, V4, P321, DOI [DOI 10.1145/366622.366647, DOI 10.1145/366622.366644]
   Kim E, 2009, INFORM PROCESS LETT, V109, P454, DOI 10.1016/j.ipl.2009.01.007
   Knuth DE., 1998, SORTING SEARCHING, V2nd, P158
   La Rocca M., 2014, ARXIV PREPRINT ARXIV
   MCILROY P, 1993, PROCEEDINGS OF THE FOURTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P467
   Moffat A, 1996, SOFTWARE PRACT EXPER, V26, P781, DOI 10.1002/(SICI)1097-024X(199607)26:7<781::AID-SPE35>3.0.CO;2-B
   Peters T., TIMSORT PYTHON
   Sarwar SM, 1996, COMPUT LANG, V22, P39, DOI 10.1016/0096-0551(96)00005-7
   SEDGEWICK R, 1978, COMMUN ACM, V21, P847, DOI 10.1145/359619.359631
   WEGENER I, 1993, THEOR COMPUT SCI, V118, P81, DOI 10.1016/0304-3975(93)90364-Y
   WILLIAMS JWJ, 1964, COMMUN ACM, V7, P347
NR 15
TC 1
Z9 1
U1 3
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2022
VL 52
IS 8
BP 1867
EP 1878
DI 10.1002/spe.3091
EA MAY 2022
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2R3HL
UT WOS:000792120300001
DA 2024-07-18
ER

PT J
AU Gruber, BM
   Amadio, G
   Blomer, J
   Matthes, A
   Widera, R
   Bussmann, M
AF Gruber, Bernhard Manfred
   Amadio, Guilherme
   Blomer, Jakob
   Matthes, Alexander
   Widera, Rene
   Bussmann, Michael
TI LLAMA: The low-level abstraction for memory access
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE memory layout; performance portability; programming techniques; software
   implementation
ID C++ LIBRARY
AB The performance gap between CPU and memory widens continuously. Choosing the best memory layout for each hardware architecture is increasingly important as more and more programs become memory bound. For portable codes that run across heterogeneous hardware architectures, the choice of the memory layout for data structures is ideally decoupled from the rest of a program. This can be accomplished via a zero-runtime-overhead abstraction layer, underneath which memory layouts can be freely exchanged. We present the low-level abstraction of memory access (LLAMA), a C++ library that provides such a data structure abstraction layer with example implementations for multidimensional arrays of nested, structured data. LLAMA provides fully C++ compliant methods for defining and switching custom memory layouts for user-defined data types. The library is extensible with third-party allocators. Providing two close-to-life examples, we show that the LLAMA-generated array of structs and struct of arrays layouts produce identical code with the same performance characteristics as manually written data structures. Integrations into the SPEC CPU(R) lbm benchmark and the particle-in-cell simulation PIConGPU demonstrate LLAMA's abilities in real-world applications. LLAMA's layout-aware copy routines can significantly speed up transfer and reshuffling of data between layouts compared with naive element-wise copying. LLAMA provides a novel tool for the development of high-performance C++ applications in a heterogeneous environment.
C1 [Gruber, Bernhard Manfred; Amadio, Guilherme; Blomer, Jakob] CERN, EP SFT, Geneva, Switzerland.
   [Gruber, Bernhard Manfred; Bussmann, Michael] Ctr Adv Syst Understanding CASUS, Saxony, Germany.
   [Gruber, Bernhard Manfred] Tech Univ Dresden, Fac Comp Sci, Dresden, Germany.
   [Matthes, Alexander; Widera, Rene] Helmholtz Zentrum Dresden Rossendorf HZDR, Dresden, Germany.
   [Matthes, Alexander] LogMeIn, Dresden, Germany.
C3 European Organization for Nuclear Research (CERN); Technische
   Universitat Dresden; Helmholtz Association; Helmholtz-Zentrum
   Dresden-Rossendorf (HZDR)
RP Gruber, BM (corresponding author), Espl Particules 1, CH-1211 Meyrin, Switzerland.
EM bernhard.manfred.gruber@cern.ch
RI ; Amadio, Guilherme/M-3195-2015; Bussmann, Michael/A-3422-2009
OI Widera, Rene/0000-0003-1642-0459; Amadio, Guilherme/0000-0002-2102-7945;
   Bussmann, Michael/0000-0002-8258-3881; Gruber, Bernhard
   Manfred/0000-0001-7848-1690
FU Center of Advanced Systems Understanding (CASUS) - Germany's Federal
   Ministry of Education and Research (BMBF); Saxon Ministry for Science,
   Culture and Tourism (SMWK); Horizon 2020 Framework Programme [654220];
   German Federal Ministry of Education and Research [05E18CHA]
FX Center of Advanced Systems Understanding (CASUS) which is financed by
   Germany's Federal Ministry of Education and Research (BMBF) and by the
   Saxon Ministry for Science, Culture and Tourism (SMWK); Horizon 2020
   Framework Programme, Grant/Award Number: 654220; Wolfgang Gentner
   Programme of the German Federal Ministry of Education and Research,
   Grant/Award Number: 05E18CHA
CR [Anonymous], 2017, SPEC CPU
   Balog P., 2020, JTC1SC22WG21 ISO
   Bavikadi S., 2020, Proceedings of the ACM Great Lakes Symposium on VLSI, GLSVLSI, P89
   Beckingsale DA, 2019, PROCEEDINGS OF P3HPC 2019: 2019 IEEE/ACM INTERNATIONAL WORKSHOP ON PERFORMANCE, PORTABILITY AND PRODUCTIVITY IN HPC (P3HPC), P71, DOI 10.1109/P3HPC49587.2019.00012
   Bussmann M, 2013, INT CONF HIGH PERFOR, DOI 10.1145/2503210.2504564
   Carvalho C., 2002, PROC IEEE INT C CONT
   Edwards HC, 2014, J PARALLEL DISTR COM, V74, P3202, DOI 10.1016/j.jpdc.2014.07.003
   Efnusheva Danijela, 2017, International Journal of Computer Science & Information Technology, V9, P151, DOI 10.5121/ijcsit.2017.9214
   Esterie P., 2014, Proceedings of the 2014 Workshop on Programming models for SIMD/Vector processing, P1, DOI DOI 10.1145/2568058.2568063
   Falcou, EVE EXPRESSIVE VECTO
   Foco M., 2021, JTC1SC22WG21 ISO
   Garcia R, 2005, SOFTWARE PRACT EXPER, V35, P159, DOI 10.1002/spe.630
   Gottschling P., MTL4
   Group TKSW, 2021, SYCL 2020 SPEC REV 3
   Gurtovoy A., 2002, BOOST C METAPROGRAMM, P22
   Hbl A., 2014, THESIS TU DRESDEN
   Hoberock J., 2019, JTC1SC22WG21 ISO
   Hollman, 2020, JTC1SC22WG21 ISO
   Hollmann D., 2019, JTC1SC22WG21 ISO
   Homann H, 2018, COMPUT PHYS COMMUN, V224, P325, DOI 10.1016/j.cpc.2017.11.015
   Incardona P, 2019, COMPUT PHYS COMMUN, V241, P155, DOI 10.1016/j.cpc.2019.03.007
   Innocente, ULTIMATESOA TRIVIAL
   Intel Corporation,, SIMD DAT LAYOUT TEMP
   Ishikawa H., 2017, ZETTASCALER LIQUID I, V3
   Jabot C., 2020, JTC1SC22WG21 ISO
   Jouppi NP, 2017, 44TH ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA 2017), P1, DOI 10.1145/3079856.3080246
   Jubertie S, 2018, PROCEEDINGS 2018 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P531, DOI 10.1109/HPCS.2018.00089
   Kretz M, 2012, SOFTWARE PRACT EXPER, V42, P1409, DOI 10.1002/spe.1149
   Liu WJ, 2021, TSINGHUA SCI TECHNOL, V26, P347, DOI 10.26599/TST.2019.9010077
   Mabille J., C WRAPPERS SIMD INTR
   McKee S. A., 2004, P 1 C COMPUTING FRON, P162, DOI [10.1145/977091.977115, DOI 10.1145/977091.977115]
   Nguyen H, 2007, GPU GEMS
   Odajima T, 2020, IEEE INT C CL COMP, P523, DOI 10.1109/CLUSTER49012.2020.00075
   Pohl T., 2017, SPEC CPU
   Pohl T., 2003, Parallel Processing Letters, V13, P549, DOI [DOI 10.1142/S0129626403001501, 10.1142/S0129626403001501]
   Qureshi Z., 2020, Tearing down the memory wall
   Scale, NSIMD HIGH PERFORMAN
   Schiller, CONTRIBUTORS SOACONT
   Singh G, 2018, 2018 21ST EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD 2018), P608, DOI 10.1109/DSD.2018.00106
   Strzodka R., 2012, GPU COMPUTING GEMS J, P429, DOI DOI 10.1016/B978-0-12-385963-1.00031-9
   Sutton A., 2020, JTC1SC22WG21 ISO
   Trott CR., 2019, MDSPAN C CASE STUD I
   Wang HJ, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P561
   Yalamanchili P., ARRAYFIRE HIGH PERFO
   YEE KS, 1966, IEEE T ANTENN PROPAG, VAP14, P302
   Zenker E, 2016, IEEE SYM PARA DISTR, P631, DOI 10.1109/IPDPSW.2016.50
NR 46
TC 2
Z9 2
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2023
VL 53
IS 1
SI SI
BP 115
EP 141
DI 10.1002/spe.3077
EA MAR 2022
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7B2CV
UT WOS:000766029200001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Zhang, S
   Guo, XW
   Li, C
   Liu, Y
   Fan, SJ
   Zhao, R
   Yang, CQ
AF Zhang, Sen
   Guo, Xiao-Wei
   Li, Chao
   Liu, Yi
   Fan, Sijiang
   Zhao, Ran
   Yang, Canqun
TI A large scale parallel fluid-structure interaction computing platform
   for simulating structural responses to a detonation shock
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE FSI; high-explosive detonation; HPC; numerical simulation; OpenFOAM;
   preCICE
ID COMPRESSIBLE MULTICOMPONENT FLOW; MIXTURE TYPE ALGORITHM; EQUATION;
   LIBRARY; VOLUME; MODEL
AB Due to the intrinsic nature of multi-physics, it is prohibitively complex to design and implement a simulation software platform for study of structural responses to a detonation shock. In this article, a partitioned fluid-structure interaction computing platform is designed for parallel simulating structural responses to a detonation shock. The detonation and wave propagation are modeled in an open-source multi-component solver based on OpenFOAM and blastFoam, and the structural responses are simulated through the finite element library deal.II. To capture the interaction dynamics between the fluid and the structure, both solvers are adapted to preCICE. For improving the parallel performance of the computing platform, the inter-solver data is exchanged by peer-to-peer communications and the intermediate server in conventional multi-physics software is eliminated. Furthermore, the coupled solver with detonation support has been deployed on a computing cluster after considering the distributed data storage and load-balancing between solvers. The 3D numerical result of structural responses to a detonation shock is presented and analyzed. On 256 processor cores, the speedup ratio of the simulations for a detonation shock reach 178.0 with 5.1 million of mesh cells and the parallel efficiency achieve 69.5%. The results demonstrate good potential of massively parallel simulations. Overall, a general-purpose fluid-structure interaction software platform with detonation support is proposed by integrating open source codes. And this work has important practical significance for engineering application in fields of construction blasting, mining, and so forth.
C1 [Guo, Xiao-Wei] Natl Univ Def Technol, Inst Quantum Informat, Coll Comp Sci & Technol, 109 Deya St, Changsha 410073, Hunan, Peoples R China.
   [Guo, Xiao-Wei] Natl Univ Def Technol, State Key Lab High Performance Comp, Coll Comp Sci & Technol, 109 Deya St, Changsha 410073, Hunan, Peoples R China.
C3 National University of Defense Technology - China; National University
   of Defense Technology - China
RP Guo, XW (corresponding author), Natl Univ Def Technol, Inst Quantum Informat, Coll Comp Sci & Technol, 109 Deya St, Changsha 410073, Hunan, Peoples R China.; Guo, XW (corresponding author), Natl Univ Def Technol, State Key Lab High Performance Comp, Coll Comp Sci & Technol, 109 Deya St, Changsha 410073, Hunan, Peoples R China.
EM guoxiaowei@nudt.edu.cn
RI ZHAO, RAN/GWM-8395-2022; Li, Chao/ABG-7849-2021
OI Li, Chao/0000-0001-8721-4826; Zhang, Sen/0000-0003-0416-8006; Guo,
   Xiao-Wei/0000-0003-4712-1320
FU National Natural Science Foundation of China [61902413]; Natural Science
   Foundation of Hunan Province [2019JJ50723]; State Key Laboratory of High
   Performance Computing [201901-12]
FX National Natural Science Foundation of China, Grant/Award Number:
   61902413; Natural Science Foundation of Hunan Province, Grant/Award
   Number: 2019JJ50723; the open fund from the State Key Laboratory of High
   Performance Computing, Grant/Award Number: 201901-12
CR Abgrall R, 2001, J COMPUT PHYS, V169, P594, DOI 10.1006/jcph.2000.6685
   Allaire G, 2002, J COMPUT PHYS, V181, P577, DOI 10.1006/jcph.2002.7143
   Arndt D, 2020, J NUMER MATH, V28, P131, DOI 10.1515/jnma-2020-0043
   Beyer M.E., 1986, NAVAL CIVIL ENGINEERING LAB PORT HUENEME CA
   Bogaers AEJ, 2014, COMPUT METHOD APPL M, V279, P113, DOI 10.1016/j.cma.2014.06.033
   Brenk M, 2006, LECT NOTES COMPUTATI, V53, P233
   Bungartz HJ, 2016, COMPUT FLUIDS, V141, P250, DOI 10.1016/j.compfluid.2016.04.003
   BUTCHER JC, 1964, MATH COMPUT, V18, P50, DOI 10.2307/2003405
   Causin P, 2005, COMPUT METHOD APPL M, V194, P4506, DOI 10.1016/j.cma.2004.12.005
   Cirak F, 2007, COMPUT STRUCT, V85, P1049, DOI 10.1016/j.compstruc.2006.11.014
   De Nayer G, 2014, COMPUT FLUIDS, V99, P18, DOI 10.1016/j.compfluid.2014.04.020
   Degroote J., 2010, THESIS GHENT U BELGI
   Degroote J, 2009, COMPUT STRUCT, V87, P793, DOI 10.1016/j.compstruc.2008.11.013
   Farhat C, 2000, COMPUT METHOD APPL M, V182, P499, DOI 10.1016/S0045-7825(99)00206-6
   Gatzhammer B., 2014, THESIS TU MUNCHEN GE
   He F, 2020, J SUPERCOMPUT, V76, P2815, DOI 10.1007/s11227-019-03063-6
   HIRT CW, 1981, J COMPUT PHYS, V39, P201, DOI 10.1016/0021-9991(81)90145-5
   Kannan R, 2014, J PARALLEL DISTR COM, V74, P2808, DOI 10.1016/j.jpdc.2014.05.001
   Kataoka S, 2014, COMPUT MECH, V53, P1299, DOI 10.1007/s00466-013-0973-1
   Küttler U, 2008, COMPUT MECH, V43, P61, DOI 10.1007/s00466-008-0255-5
   Küttler U, 2009, J APPL MECH-T ASME, V76, DOI 10.1115/1.3057468
   LARROUTUROU B, 1991, J COMPUT PHYS, V95, P59, DOI 10.1016/0021-9991(91)90253-H
   Lee E., 1973, JWL EQUATION STATE C
   Liu TG, 2001, COMPUT FLUIDS, V30, P315, DOI 10.1016/S0045-7930(00)00021-9
   Luo H, 2004, J COMPUT PHYS, V194, P304, DOI 10.1016/j.jcp.2003.09.026
   Michler C, 2005, INT J NUMER METH FL, V47, P1189, DOI 10.1002/fld.850
   Michler C, 2011, COMPUT MECH, V47, P17, DOI 10.1007/s00466-010-0519-8
   OSHER S, 1988, J COMPUT PHYS, V79, P12, DOI 10.1016/0021-9991(88)90002-2
   Parker SG, 2006, ENG COMPUT-GERMANY, V22, P277, DOI 10.1007/s00366-006-0047-5
   Pasciak, 1998, SIAM REV, V40, P169
   Repasky MP, 2002, J COMPUT CHEM, V23, P1601, DOI 10.1002/jcc.10162
   Rokhy H, 2019, INT J HYDROGEN ENERG, V44, P23289, DOI 10.1016/j.ijhydene.2019.07.030
   Sen Zhang, 2020, 2020 IEEE 22nd International Conference on High Performance Computing and Communications; IEEE 18th International Conference on Smart City; IEEE 6th International Conference on Data Science and Systems (HPCC/SmartCity/DSS), P525, DOI 10.1109/HPCC-SmartCity-DSS50907.2020.00065
   Shyue KM, 2001, J COMPUT PHYS, V171, P678, DOI 10.1006/jcph.2001.6801
   Shyue KM, 1998, J COMPUT PHYS, V142, P208, DOI 10.1006/jcph.1998.5930
   Shyue KM, 1999, J COMPUT PHYS, V156, P43, DOI 10.1006/jcph.1999.6349
   Slaughter W. S., 2012, The Linearized Theory of Elasticity
   Spiteri RJ, 2002, SIAM J NUMER ANAL, V40, P469, DOI 10.1137/S0036142901389025
   Toro E. F., 1994, Shock Waves, V4, P25, DOI 10.1007/BF01414629
   Turek S., 2009, INT WORKSH FLUID STR
   Uekermann BW., 2016, THESIS TU MUNCHEN GE
   UNVERDI SO, 1992, J COMPUT PHYS, V100, P25, DOI 10.1016/0021-9991(92)90307-K
   Vierendeels J, 2007, COMPUT STRUCT, V85, P970, DOI 10.1016/j.compstruc.2006.11.006
   Wardlaw A., 1998, Coupled hydrocode prediction of underwater explosion damage
   Xu CF, 2014, J COMPUT PHYS, V278, P275, DOI 10.1016/j.jcp.2014.08.024
   Zhang S, 2020, ENERGIES, V13, DOI 10.3390/en13164059
   Zou S, 2014, J NON-NEWTON FLUID, V211, P99, DOI 10.1016/j.jnnfm.2014.07.003
NR 47
TC 3
Z9 3
U1 1
U2 26
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2023
VL 53
IS 1
SI SI
BP 211
EP 240
DI 10.1002/spe.3051
EA NOV 2021
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7B2CV
UT WOS:000716103300001
DA 2024-07-18
ER

PT J
AU Lemire, D
   Mula, W
AF Lemire, Daniel
   Mula, Wojciech
TI Transcoding billions of Unicode characters per second with SIMD
   instructions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE character encoding; text processing; Unicode; vectorization
AB In software, text is often represented using Unicode formats (UTF-8 and UTF-16). We frequently have to convert text from one format to the other, a process called transcoding. Popular transcoding functions are slower than state-of-the-art disks and networks. These transcoding functions make little use of the single-instruction-multiple-data (SIMD) instructions available on commodity processors. By designing transcoding algorithms for SIMD instructions, we multiply the speed of transcoding on current systems (x64 and ARM). To ensure reproducibility, we make our software freely available as an open source library.
C1 [Lemire, Daniel] Univ Quebec TELUQ, DOT Lab Res Ctr, Montreal, PQ H2S 3L5, Canada.
   [Mula, Wojciech] 0X80 Pl, Wroclaw, Poland.
C3 University of Quebec; Universite TELUQ
RP Lemire, D (corresponding author), Univ Quebec TELUQ, DOT Lab Res Ctr, Montreal, PQ H2S 3L5, Canada.
EM daniel.lemire@teluq.ca
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922
FU Natural Sciences and Engineering Research Council of Canada
   [RGPIN-2017-03910]
FX Natural Sciences and Engineering Research Council of Canada, Grant/Award
   Number: RGPIN-2017-03910
CR [Anonymous], 2010, INT COMPONENTS UNICO
   Barr J., 2018, FLOODGATES ARE OPEN
   Cameron RD., 2007, U8U16 A HIGH SPEED U
   Cameron RD, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P91, DOI 10.1145/1345206.1345222
   Eichenberger AE, 2004, ACM SIGPLAN NOTICES, V39, P82, DOI 10.1145/996893.996853
   Gatilov S., 2012, UTF8LUT VECTORIZED U
   Goffart O., 2012, UTF 8 PROCESSING USI
   Hoffman P., 2000, UTF-16, an encoding of ISO 10646
   Hu┬hrmann B., 2010, FLEXIBLE EC UTF 8 DE
   Inoue H., 2008, INF PROCESS SOC JPN, V1, P1
   Inoue H., 2008, US Patent, Patent No. 7394411
   Keiser J, 2021, SOFTWARE PRACT EXPER, V51, P950, DOI 10.1002/spe.2920
   Lemire D, 2018, INFORM PROCESS LETT, V130, P1, DOI 10.1016/j.ipl.2017.09.011
   Lemire D, 2017, INFORM SYST, V66, P13, DOI 10.1016/j.is.2017.01.002
   Mitra Gaurav, 2013, 2013 IEEE International Symposium on Parallel and Distributed Processing, Workshops and PhD Forum (IPDPSW), P1107, DOI 10.1109/IPDPSW.2013.207
   Mula W, 2018, ACM T WEB, V12, DOI 10.1145/3132709
   Mula W, 2018, COMPUT J, V61, P111, DOI 10.1093/comjnl/bxx046
   Steagall B., 2018, FAST CONVERSION UTF
   Stepanov Alexander A., 2011, Proceedings of the 20th ACM International Conference on Information and Knowledge Management, CIKM '11, P317
   Yergeau F., UTF 8 TRANSFORMATION
   Zhao WX, 2015, ACM T INFORM SYST, V33, DOI 10.1145/2735629
NR 21
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2022
VL 52
IS 2
BP 555
EP 575
DI 10.1002/spe.3036
EA OCT 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YF3DK
UT WOS:000706837000001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Rodríguez, C
   Garcés, K
   Cabot, J
   Casallas, R
   Melo, F
   Escobar, D
   Salamanca, A
AF Rodriguez, Cristo
   Garces, Kelly
   Cabot, Jordi
   Casallas, Rubby
   Melo, Fabian
   Escobar, Daniel
   Salamanca, Alejandro
TI Model-based assisted migration of oracle forms applications: The overall
   process in an industrial setting
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code pattern; discovery; model&#8208; driven engineering; modernization;
   PL; SQL; visualizations
ID REVERSE; MODERNIZATION; ABSTRACTION; DESIGN
AB The migration of software is an economically important niche since the daily operations of many business still rely on systems based on legacy technologies. Migration to more recent technologies comes with major technical and management challenges mainly related to knowledge-loss issues on the specific technology but also on the architecture and design of the legacy. This article presents a method that addresses the reverse/forward engineering tasks as well as some management challenges such as the planning of the migration based on a better understanding of the system. The process relies on the use of models and transformations to create high-level abstraction views of the legacy. A big challenge with the migration of certain legacy applications is that much of the business logic is inside triggers which are written in the PL/SQL language and scattered across the application layers. Therefore, developers need to know what they need to migrate and where it is. The main contribution of our work is that the abstractions allow developers to understand and plan the migration without the need of having a vast knowledge on the initial technology. Furthermore, our views help developers to decide about the structure and business logic they want to have in the target system. In this article, we describe the application of the method to the Oracle Forms case study. Nevertheless, the approach can be generalized to other technologies through new bridges that transform from said technologies to the abstract views. The article ends by reporting lessons learned from our experience.
C1 [Rodriguez, Cristo; Melo, Fabian; Escobar, Daniel; Salamanca, Alejandro] Asesoftware, Bogota, Colombia.
   [Garces, Kelly; Casallas, Rubby] Univ Andes, Sch Engn, Dept Syst & Comp Engn, Bogota, Colombia.
   [Cabot, Jordi] UOC, ICREA, Barcelona, Spain.
C3 Universidad de los Andes (Colombia); ICREA
RP Garcés, K (corresponding author), Univ Andes, Sch Engn, Dept Syst & Comp Engn, Bogota, Colombia.
EM kj.garces971@uniandes.edu.co
RI Cabot, Jordi/P-7723-2015
OI Cabot, Jordi/0000-0003-2418-2489; Garces, Kelly/0000-0002-1070-439X
CR Achee BL, 1997, J SYST SOFTWARE, V39, P179, DOI 10.1016/S0164-1212(96)00171-9
   Alalfi MH, 2009, IEEE ICST WORKSHOP, P287, DOI 10.1109/ICSTW.2009.8
   Altinisik M., 2016, P 31 ACM S APPL COMP, P1440
   Andrade L, 2006, LECT NOTES COMPUT SC, V4143, P261
   [Anonymous], 2016, XTEXT PROGRAMMING LA
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   [Anonymous], DATABASE PL SQL LANG
   [Anonymous], SOFTWARE EVOLUTION, DOI DOI 10.1007/978-3-540-76440-3_7
   Anquetil N, 2011, EUR CON SFTWR MTNCE, P279, DOI 10.1109/CSMR.2011.34
   Bakota, 2011, P EUR SOFTW ENG C AC, P1
   Barbier F, 2010, INFORMATION SYSTEMS TRANSFORMATION: ARCHITECTURE-DRIVEN MODERNIZATION CASE STUDIES, P283, DOI 10.1016/B978-0-12-374913-0.00011-1
   Bennett C, 2008, J SOFTW MAINT EVOL-R, V20, P291, DOI 10.1002/smr.372
   Bergmayr A, 2013, EUR CON SFTWR MTNCE, P465, DOI 10.1109/CSMR.2013.73
   Ruiz FJB, 2017, INFORM SYST, V72, P136, DOI 10.1016/j.is.2017.10.004
   Blanco C, 2009, LECT NOTES COMPUT SC, V5691, P24, DOI 10.1007/978-3-642-03730-6_3
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Bysiek M, 2016, PROCEEDINGS OF PYHPC2016: 6TH WORKSHOP ON PYTHON FOR HIGH-PERFORMANCE AND SCIENTIFIC COMPUTING, P9, DOI [10.1109/PyHPC.2016.12, 10.1109/PyHPC.2016.006]
   Casallas, 2017, P 20 C IB ING SOFTW, VXX, P1
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   De Lucia A, 2008, SOFTWARE PRACT EXPER, V38, P1333, DOI 10.1002/spe.870
   Diaz O, 2010, J SYST SOFTWARE, V83, P1970, DOI 10.1016/j.jss.2010.05.075
   Duffy EB, 2005, Third ACIS International Conference on Software Engineering Research, Managment and Applications, Proceedings, P415, DOI 10.1109/SERA.2005.9
   Escobar D, 2016, PROC LAT AM COMPUT C
   Fleurey F, 2007, LECT NOTES COMPUT SC, V4735, P482
   Fuentes-Fernández R, 2012, SCI COMPUT PROGRAM, V77, P247, DOI 10.1016/j.scico.2011.04.003
   Fuhr A, 2013, COMPUT SCI-RES DEV, V28, P65, DOI 10.1007/s00450-011-0183-z
   Fujiwara D, 2016, PROCEEDINGS 2016 5TH IIAI INTERNATIONAL CONGRESS ON ADVANCED APPLIED INFORMATICS IIAI-AAI 2016, P1058, DOI 10.1109/IIAI-AAI.2016.37
   Garc?s K, 2015, P ICSEA 2015 10 INT
   Garcés K, 2018, COMPUT STAND INTER, V57, P110, DOI 10.1016/j.csi.2017.10.004
   Garcés K, 2016, LECT NOTES COMPUT SC, V9893, P274, DOI 10.1007/978-3-319-45547-1_22
   García J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3106237.3117772
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Lau TC, 2003, INFORM SYST FRONT, V5, P149, DOI 10.1023/A:1022697422240
   Mendivelso Luis F., 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0060-6
   Nagy C, 2011, EUR CON SFTWR MTNCE, P343, DOI 10.1109/CSMR.2011.66
   Navarro A, 2016, COMPUT STAND INTER, V48, P49, DOI 10.1016/j.csi.2016.03.004
   Pérez-Castillo R, 2011, COMPUT STAND INTER, V33, P519, DOI 10.1016/j.csi.2011.02.007
   Plevris, 2016, ECCOMAS C 2016 7 EUR, P8162, DOI [10.7712/100016.2402.4906, DOI 10.7712/100016.2402.4906]
   Ramalingam G., 2006, 28th International Conference on Software Engineering Proceedings, P192, DOI 10.1145/1134285.1134313
   Ramon O. S., 2011, 2011 18th Working Conference on Reverse Engineering, P293, DOI 10.1109/WCRE.2011.43
   Richner T., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P13, DOI 10.1109/ICSM.1999.792487
   Riley M., 2009, ORACLE MAGAZINE  JUL
   Ramón OS, 2014, AUTOMAT SOFTW ENG, V21, P147, DOI 10.1007/s10515-013-0130-2
   Selfridge P. G., 1993, Proceedings of Working Conference on Reverse Engineering (Cat. No.93TH0534-8), P144, DOI 10.1109/WCRE.1993.287770
   Sosa E, 2014, IEEE WORLD CONGR SER, P470, DOI 10.1109/SERVICES.2014.90
   Tu ZY, 2014, INT J COMPUT INTEG M, V27, P313, DOI 10.1080/0951192X.2011.646306
   Vallecillo A., 2015, Int. J. Inf. Syst. Softw. Eng. Big Co, V1, P52
   Wagner C., 2014, MODEL DRIVEN SOFTWAR, P67
   Ward M, 2008, SOFTWARE PRACT EXPER, V38, P1273, DOI 10.1002/spe.869
   WATERS RC, 1988, IEEE T SOFTWARE ENG, V14, P1207, DOI 10.1109/32.7629
NR 52
TC 1
Z9 1
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2021
VL 51
IS 8
BP 1641
EP 1675
DI 10.1002/spe.2981
EA MAY 2021
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TD0EL
UT WOS:000649267800001
DA 2024-07-18
ER

PT J
AU Santana, A
   Freitas, V
   Castro, M
   Pilla, LL
   Méhaut, JF
AF Santana, Alexandre
   Freitas, Vinicius
   Castro, Marcio
   Pilla, Laercio L.
   Mehaut, Jean-Francois
TI ARTful: A model for user-defined schedulers targeting multiple
   high-performance computing runtime systems
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code complexity; component; portability; runtime systems; scheduling;
   self&#8208; adaptable
AB Global schedulers are components in parallel runtime libraries that distribute the application's workload across physical resources. More often than not, applications showcase dynamic load imbalance and require customized scheduling solutions to avoid wasting resources. Some libraries lack support for user-defined schedulers and developers resort to unofficial extensions that are harder to reuse and maintain. We propose a global scheduler software design, entitled ARTful model, to create user-defined solutions with minimal alterations in the runtime library. Our model uses a component-based design to separate components from the runtime library and the scheduling policy implementation. The ARTful modeldescribes the interface of a portable scheduler library, allowing policies to operate on different runtime libraries. We study the overhead induced by our design through our ARTful library implementation metaprogramming-oriented global scheduling library using workload-aware scheduling policies. We experiment with two different policies from OpenMP and Charm++ runtime systems, also presenting evaluations of the policies outside of their original library context. We observe that our portable schedulers can sometimes perform decisions faster than their native counterparts with negligible overhead in the execution times of synthetic applications and molecular dynamics kernels.
C1 [Santana, Alexandre; Freitas, Vinicius; Castro, Marcio] Fed Univ Santa Catarina UFSC, Florianopolis, SC, Brazil.
   [Pilla, Laercio L.] Univ Bordeaux, Lab Bordelais Rech Informat, CNRS, Bordeaux INP,LaBRI,UMR 5800, 351 Cours Liberat, F-33405 Talence, France.
   [Pilla, Laercio L.] INRIA, LaBRI, UMR 5800, Talence, France.
   [Mehaut, Jean-Francois] Univ Grenoble Alpes, INRIA, CNRS, Grenoble INP,LIG, Grenoble, France.
C3 Universidade Federal de Santa Catarina (UFSC); Centre National de la
   Recherche Scientifique (CNRS); Universite de Bordeaux; Universite de
   Bordeaux; Inria; Centre National de la Recherche Scientifique (CNRS);
   Inria; Communaute Universite Grenoble Alpes; Institut National
   Polytechnique de Grenoble; Universite Grenoble Alpes (UGA); Centre
   National de la Recherche Scientifique (CNRS)
RP Pilla, LL (corresponding author), Univ Bordeaux, Lab Bordelais Rech Informat, CNRS, Bordeaux INP,LaBRI,UMR 5800, 351 Cours Liberat, F-33405 Talence, France.
EM laercio.lima-pilla@labri.fr
RI Castro, Márcio/K-5651-2013; Lima Pilla, Laercio/A-2279-2015
OI Castro, Márcio/0000-0002-9992-8540; santana,
   alexandre/0000-0002-3203-3662; Freitas, Vinicius/0000-0002-2324-349X;
   Lima Pilla, Laercio/0000-0003-0997-586X
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [401266/2016-8]; Coordenacao de Aperfeicoamento de Pessoal de Nivel
   Superior [88881.310783/2018-01]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico,
   Grant/Award Number: 401266/2016-8; Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior, Grant/Award Number: 88881.310783/2018-01
CR Acun B, 2016, COMPUTER, V49, P30, DOI 10.1109/MC.2016.310
   Augonnet C, 2011, CONCURR COMP-PRACT E, V23, P187, DOI 10.1002/cpe.1631
   Aumage O, 2017, IEEE ACM INT SYMP, P635, DOI 10.1109/CCGRID.2017.88
   Bak, 2019, P INT C PAR PROC KYO, V48, P10
   Bak S, 2019, INT WINT WORKSH BR, P174, DOI 10.1109/iww-bci.2019.8737260
   Blackford LS, 2002, ACM T MATH SOFTWARE, V28, P135, DOI 10.1145/567806.567807
   CASAVANT TL, 1988, IEEE T SOFTWARE ENG, V14, P141, DOI 10.1109/32.4634
   Che SA, 2009, I S WORKL CHAR PROC, P44, DOI 10.1109/IISWC.2009.5306797
   Dagum L, 1998, IEEE COMPUT SCI ENG, V5, P46, DOI 10.1109/99.660313
   Dongarra J, 2011, INT J HIGH PERFORM C, V25, P3, DOI 10.1177/1094342010391989
   GRAHAM RL, 1969, SIAM J APPL MATH, V17, P416, DOI 10.1137/0117039
   Grossman M, 2017, IEEE SYM PARA DISTR, P723, DOI 10.1109/IPDPSW.2017.13
   Jeannot E, 2013, IEEE INT C CL COMP
   Kale V., 2017, P 2017 C OPENMP STON, V11
   Kale V., 2019, P INT WORKSH OPENMP
   Karlin I, 2013, INT PARALL DISTRIB P, P919, DOI 10.1109/IPDPS.2013.115
   Lopes RV, 2016, IEEE T PARALL DISTR, V27, P3412, DOI 10.1109/TPDS.2016.2537821
   Mcilroy D. M., 1968, 1 INT C SOFTW ENG, P88
   Mehta V., 2004, THESIS U ILLINOIS UR
   Mollison MS, 2013, IEEE REAL TIME, P283, DOI 10.1109/RTAS.2013.6531100
   MUhaut, 2017, P BRAZ S HIGH PERF C
   Padoin EL, 2019, INT SYM COMP ARCHIT, P72, DOI 10.1109/SBAC-PAD.2019.00024
   Penna PH, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5170
   Pilla LL, 2014, FUTURE GENER COMP SY, V30, P191, DOI 10.1016/j.future.2013.06.023
   Santana AD, 2018, 2018 SYMPOSIUM ON HIGH PERFORMANCE COMPUTING SYSTEMS (WSCAD 2018), P38, DOI 10.1109/WSCAD.2018.00016
   Sarkar, 2019, P INT C PAR PROC KYO, V48, P38
   Thoman P, 2018, J SUPERCOMPUT, V74, P1422, DOI 10.1007/s11227-018-2238-4
   Unat D, 2017, IEEE T PARALL DISTR, V28, P3007, DOI 10.1109/TPDS.2017.2703149
   Walker DW, 1996, SUPERCOMPUTER, V12, P56
   Zheng GB, 2011, INT J HIGH PERFORM C, V25, P371, DOI 10.1177/1094342010394383
NR 30
TC 2
Z9 2
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2021
VL 51
IS 7
BP 1622
EP 1638
DI 10.1002/spe.2977
EA APR 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO3PJ
UT WOS:000636590600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mehboob, B
   Chong, CY
   Lee, SP
   Lim, JMY
AF Mehboob, Bilal
   Chong, Chun Yong
   Lee, Sai Peck
   Lim, Joanne Mun Yee
TI Reusability affecting factors and software metrics for reusability: A
   systematic literature review
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE reusability affecting factors; software metrics; software quality;
   software reusability; systematic literature review
ID REUSE
AB Measuring and estimating the reusability of software components is important towards finding reusable candidates. Researchers have shown that software metrics can be effectively used to assess software reusability. This work provides a systematic literature review to investigate the main factors that influence software reusability and how these identified factors can be quantified using software metrics. This paper also investigates tool availability of the identified software metrics. Based on the extensive study, we narrowed down 44 factors that could positively or negatively affect the reusability of software systems. In term of software metrics, we report our findings through five main families of metrics, namely coupling, cohesion, complexity, inheritance, and size. We found that most of the metrics examine reusability at the class-level, and the availability of software tools is limited. Furthermore, not all reusability affecting factors are equally impactful to assess the reusability of software components. While existing studies often discussed the impact of complexity towards software reusability, we found that only a handful of complexity metrics were meant for assessing reusability. We have identified several open challenges and gaps in the area, in particular lack of quantifiable measurement for reusability, limited software tools, and limited metrics that directly measure reusability.
C1 [Mehboob, Bilal; Chong, Chun Yong] Monash Univ Malaysia, Sch Informat Technol, Jalan Lagoon Selatan, Bandar Sunway 47500, Selangor Darul, Malaysia.
   [Lee, Sai Peck] Univ Malaya, Fac Comp Sci & IT, Dept Software Engn, Kuala Lumpur, Malaysia.
   [Lim, Joanne Mun Yee] Monash Univ Malaysia, Sch Engn, Jalan Lagoon Selatan, Subang Jaya, Malaysia.
C3 Monash University; Monash University Malaysia; Universiti Malaya; Monash
   University; Monash University Malaysia
RP Chong, CY (corresponding author), Monash Univ Malaysia, Sch Informat Technol, Jalan Lagoon Selatan, Bandar Sunway 47500, Selangor Darul, Malaysia.
EM chong.chunyong@monash.edu
RI Chong, Chun Yong/G-5067-2015
OI Chong, Chun Yong/0000-0003-1164-0049
FU Ministry of Education, Malaysia [FRGS/1/2018/ICT01/MUSM/03/1]
FX Fundamental Research Grant Scheme provided by the Ministry of Education,
   Malaysia, Grant/Award Number: FRGS/1/2018/ICT01/MUSM/03/1
CR Abdellatief M, 2013, J SYST SOFTWARE, V86, P587, DOI 10.1016/j.jss.2012.10.001
   Barros-Justo JL, 2018, INFORM SOFTWARE TECH, V103, P1, DOI 10.1016/j.infsof.2018.06.003
   Böckle G, 2004, IEEE SOFTWARE, V21, P23
   Bombonatti D, 2017, SOFTWARE PRACT EXPER, V47, P943, DOI 10.1002/spe.2416
   Braun C.L., 1994, NATO STANDARD DEV RE, V1/3
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Chong CY, 2017, J SYST SOFTWARE, V133, P28, DOI 10.1016/j.jss.2017.08.017
   Chong CY, 2015, J SYST SOFTWARE, V110, P28, DOI 10.1016/j.jss.2015.08.014
   Constantinou E, 2017, SOFTWARE PRACT EXPER, V47, P1027, DOI 10.1002/spe.2484
   Devanbu PT, 2000, IEEE T SOFTWARE ENG, V26, P423, DOI 10.1109/TSE.2000.846299
   Devi, 2012, 2012 INT C EM TRENDS
   Fregnan E, 2019, INFORM SOFTWARE TECH, V107, P159, DOI 10.1016/j.infsof.2018.11.008
   Gill N., 2006, ACM SIGSOFT Software Engineering Notes, V31, P1, DOI [10.1145/1108768.1108771, DOI 10.1145/1108768.1108771]
   GOODMAN LA, 1961, ANN MATH STAT, V32, P148, DOI 10.1214/aoms/1177705148
   Grover, 2007, INT J COMPUT SCI SEC, V1, P60
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Lim JMY., 2021, SOFTWARE PRACT EXPER, P1
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Montagud S, 2012, SOFTWARE QUAL J, V20, P425, DOI 10.1007/s11219-011-9146-7
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   Namiki, 2012, REUSABILITY METRICS
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rosenberg L.H., 1997, Crosstalk J., V10, P1
   Rothenberger MA, 2003, IEEE T SOFTWARE ENG, V29, P825, DOI 10.1109/TSE.2003.1232287
   Sandhu AK, 2021, SOFTWARE PRACT EXPER, V51, P735, DOI 10.1002/spe.2921
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Tahir A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P326, DOI 10.1109/ICSM.2012.6405289
   Tomer A, 2004, IEEE T SOFTWARE ENG, V30, P601, DOI 10.1109/TSE.2004.50
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
NR 34
TC 9
Z9 9
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1416
EP 1458
DI 10.1002/spe.2961
EA MAR 2021
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000623193200001
DA 2024-07-18
ER

PT J
AU Sotgiu, A
   De Donato, C
   Fornaro, C
   Tassa, S
   Scannavini, M
   Iannaccio, D
   Ambrosi, G
   Bartocci, S
   Basara, L
   Battiston, R
   Burger, WJ
   Campana, D
   Carfora, L
   Castellini, G
   Cipollone, P
   Conti, L
   Contin, A
   De Persio, F
   De Santis, C
   Follega, FM
   Guandalini, C
   Ionica, M
   Iuppa, R
   Laurenti, G
   Lazzizzera, I
   Lolli, M
   Manea, C
   Martucci, M
   Masciantonio, G
   Mergé, M
   Osteria, G
   Pacini, L
   Palma, F
   Palmonari, F
   Panico, B
   Parmentier, A
   Perfetto, F
   Picozza, P
   Piersanti, M
   Pozzato, M
   Puel, M
   Rashevskaya, I
   Ricci, E
   Ricci, M
   Ricciarini, SB
   Scotti, V
   Sparvoli, R
   Spataro, B
   Vitale, V
   Zoffoli, S
   Zuccon, P
AF Sotgiu, Alessandro
   De Donato, Cinzia
   Fornaro, Claudio
   Tassa, Sandro
   Scannavini, Marco
   Iannaccio, Dario
   Ambrosi, Giovanni
   Bartocci, Simona
   Basara, Laurent
   Battiston, Roberto
   Burger, William J.
   Campana, Donatella
   Carfora, Luca
   Castellini, Guido
   Cipollone, Piero
   Conti, Livio
   Contin, Andrea
   De Persio, Fulvio
   De Santis, Cristian
   Follega, Francesco M.
   Guandalini, Cristina
   Ionica, Maria
   Iuppa, Roberto
   Laurenti, Giuliano
   Lazzizzera, Ignazio
   Lolli, Mauro
   Manea, Christian
   Martucci, Matteo
   Masciantonio, Giuseppe
   Merge, Matteo
   Osteria, Giuseppe
   Pacini, Lorenzo
   Palma, Francesco
   Palmonari, Federico
   Panico, Beatrice
   Parmentier, Alexandra
   Perfetto, Francesco
   Picozza, Piergiorgio
   Piersanti, Mirko
   Pozzato, Michele
   Puel, Matteo
   Rashevskaya, Irina
   Ricci, Ester
   Ricci, Marco
   Ricciarini, Sergio Bruno
   Scotti, Valentina
   Sparvoli, Roberta
   Spataro, Bruno
   Vitale, Vincenzo
   Zoffoli, Simona
   Zuccon, Paolo
TI Control and data acquisition software of the high-energy particle
   detector on board the China Seismo-Electromagnetic Satellite space
   mission
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data acquisition; digital signal processors; earthquake; embedded
   software
ID OF-THE-ART; PAMELA; PERTURBATIONS; ONBOARD; BURSTS; EARTH; HEPD
AB The China Seismo-Electromagnetic Satellite (CSES) space mission-also known as Limadou in Italian-is a scientific collaboration between China and Italy that aims to investigate the structure and dynamics of the iono/magnetosphere, and in particular to study the possible correlation of perturbations to the occurrence of high-magnitude seismic events. The Chinese satellite houses the Italian high-energy particle detector (HEPD), an apparatus composed of a silicon tracker and a calorimeter system, which detects electrons and protons in the energy ranges 3-100 and 30-200 MeV, respectively. The satellite was launched on February 2, 2018; after a commissioning phase dedicated to the setting of an optimal configuration, HEPD is fully operational since July 28, 2018. After a general overview of the CSES-Limadou mission, this article presents the structure of the HEPD apparatus and describes the design and implementation of the software for the embedded computer system that is responsible for HEPD management. The onboard software runs on the digital signal processors of two electronic boards (CPU and data acquisition), monitors system status, handles instrument data acquisition, performs periodic calibration of the subdetectors, performs data compression, and communicates with the satellite. An overview of HEPD in-flight operations and performance is given in the last section.
C1 [Sotgiu, Alessandro; De Donato, Cinzia; Fornaro, Claudio; Bartocci, Simona; Carfora, Luca; Cipollone, Piero; Conti, Livio; De Persio, Fulvio; De Santis, Cristian; Martucci, Matteo; Masciantonio, Giuseppe; Palma, Francesco; Parmentier, Alexandra; Picozza, Piergiorgio; Piersanti, Mirko; Sparvoli, Roberta; Vitale, Vincenzo] INFN, Sez Roma Tor Vergata, Rome, Italy.
   [Fornaro, Claudio; Conti, Livio] Uninettuno Univ, Rome, Italy.
   [Tassa, Sandro; Scannavini, Marco] Arakne Srl, Rome, Italy.
   [Iannaccio, Dario] Innodesi Srl, Rome, Italy.
   [Ambrosi, Giovanni; Ionica, Maria] INFN, Sez Perugia, Perugia, Italy.
   [Basara, Laurent; Battiston, Roberto; Burger, William J.; Follega, Francesco M.; Iuppa, Roberto; Lazzizzera, Ignazio; Manea, Christian; Puel, Matteo; Rashevskaya, Irina; Ricci, Ester; Zuccon, Paolo] INFN TIFPA, Povo, Trento, Italy.
   [Battiston, Roberto; Follega, Francesco M.; Iuppa, Roberto; Lazzizzera, Ignazio; Ricci, Ester; Zuccon, Paolo] Univ Trento, Povo, Trento, Italy.
   [Campana, Donatella; Masciantonio, Giuseppe; Osteria, Giuseppe; Panico, Beatrice; Perfetto, Francesco] INFN, Sez Napoli, Naples, Italy.
   [Carfora, Luca; Picozza, Piergiorgio; Sparvoli, Roberta] Univ Roma Tor Vergata, Dept Phys, Rome, Italy.
   [Castellini, Guido; Pacini, Lorenzo; Ricciarini, Sergio Bruno] IFAC CNR, Sesto Fiorentino, Florence, Italy.
   [Contin, Andrea; Palmonari, Federico] Univ Bologna, Bologna, Italy.
   [Contin, Andrea; Guandalini, Cristina; Laurenti, Giuliano; Lolli, Mauro; Palmonari, Federico; Pozzato, Michele] INFN, Sez Bologna, Bologna, Italy.
   [Merge, Matteo; Palma, Francesco] ASI Space Sci Data Ctr SSDC, Rome, Italy.
   [Ricci, Marco; Spataro, Bruno] INFN LNF, Rome, Italy.
   [Scotti, Valentina] Univ Naples Federico II, Dept Phys, Naples, Italy.
   [Zoffoli, Simona] Italian Space Agcy, Rome, Italy.
C3 Istituto Nazionale di Fisica Nucleare (INFN); UNINETTUNO; Istituto
   Nazionale di Fisica Nucleare (INFN); Istituto Nazionale di Fisica
   Nucleare (INFN); University of Trento; Istituto Nazionale di Fisica
   Nucleare (INFN); University of Rome Tor Vergata; Consiglio Nazionale
   delle Ricerche (CNR); Istituto di Fisica Applicata "Nello Carrara"
   (IFAC-CNR); University of Bologna; Istituto Nazionale di Fisica Nucleare
   (INFN); Istituto Nazionale di Fisica Nucleare (INFN); University of
   Naples Federico II; Agenzia Spaziale Italiana (ASI)
RP Sotgiu, A (corresponding author), INFN, Sez Roma Tor Vergata, Rome, Italy.
EM alessandro.sotgiu@roma2.infn.it
RI Battiston, Roberto/AAV-2632-2021; Iuppa, Roberto/GQH-7165-2022; Zuccon,
   Paolo/S-3842-2019; Panico, Beatrice/F-1137-2017; Masciantonio,
   Giuseppe/L-8307-2017; Ricci, Ester/AAJ-1523-2020; Sparvoli,
   Roberta/H-8024-2018; Battiston, Roberto/AAW-5182-2021; Piersanti,
   Mirko/ABE-5680-2021; Zuccon, Paolo/AFM-0946-2022; Pacini,
   Lorenzo/O-3300-2018; Merge', Matteo/HTS-7380-2023; Piersanti,
   Mirko/AGA-3528-2022; Parmentier, Alexandra/V-3557-2019; Conti,
   Livio/JVP-0538-2024; Scotti, Valentina/U-3238-2018; Fornaro,
   Claudio/D-7255-2018; Franchini, Matteo/AAC-9259-2021; Martucci,
   Matteo/AAH-1925-2021; De Donato, Cinzia/J-9132-2015; Conti,
   Livio/E-4660-2018; Sotgiu, Alessandro/AAS-8577-2021; De Santis,
   Cristian/C-1210-2011
OI Battiston, Roberto/0000-0002-5808-7239; Iuppa,
   Roberto/0000-0001-5038-2762; Zuccon, Paolo/0000-0001-6132-754X; Panico,
   Beatrice/0000-0003-1063-6961; Masciantonio,
   Giuseppe/0000-0002-8911-1561; Ricci, Ester/0000-0002-4222-9976;
   Sparvoli, Roberta/0000-0002-6314-6117; Pacini,
   Lorenzo/0000-0001-6808-9396; Merge', Matteo/0000-0002-2018-4236;
   Piersanti, Mirko/0000-0001-5207-2944; Parmentier,
   Alexandra/0000-0002-9073-3288; Scotti, Valentina/0000-0001-8868-3990;
   Fornaro, Claudio/0000-0001-5542-8280; Franchini,
   Matteo/0000-0002-4554-252X; Martucci, Matteo/0000-0002-3033-4824; De
   Donato, Cinzia/0000-0002-9725-1281; Conti, Livio/0000-0003-2966-2000;
   Sotgiu, Alessandro/0000-0001-8835-2796; De Santis,
   Cristian/0000-0002-7280-2446; Contin, Andrea/0000-0002-2535-5700;
   Follega, Francesco Maria/0000-0003-2317-9560; Bartocci,
   Simona/0000-0002-3066-8621; Rashevskaya, Irina/0000-0002-7625-9903;
   Puel, Matteo/0000-0001-6659-9958
FU Italian Space Agency [2016-16-H0, CUP F12F1600011005]; ASI-INFN
   [2014-037-R.0, 2014-037-R-1-2017]
FX This work was supported by the Italian Space Agency in the framework of
   the Accordo Attuativo No. 2016-16-H0 Progetto Limadou Fase E/Scienza
   (CUP F12F1600011005) and the ASI-INFN agreement n. 2014-037-R.0,
   addendum 2014-037-R-1-2017.
CR Adriani G, 2015, ASTROPHYS J, V810, DOI 10.1088/0004-637X/810/2/142
   Adriani O, 2017, RIV NUOVO CIMENTO, V40, P473, DOI 10.1393/ncr/i2017-10140-x
   Adriani O, 2014, PHYS REP, V544, P323, DOI 10.1016/j.physrep.2014.06.003
   Aleksandrin SY, 2003, ANN GEOPHYS-GERMANY, V21, P597, DOI 10.5194/angeo-21-597-2003
   Ambrosi G, 2020, NUCL INSTRUM METH A, V974, DOI 10.1016/j.nima.2020.164170
   Ambrosi G, 2018, SCI CHINA TECHNOL SC, V61, P643, DOI 10.1007/s11431-018-9234-9
   [Anonymous], 2020, ADSP 2189M DAT REV
   Battiston R, 2013, NUCL PHYS B-PROC SUP, V243, P249, DOI 10.1016/j.nuclphysbps.2013.09.002
   Cao JB, 2018, SCI CHINA TECHNOL SC, V61, P653, DOI 10.1007/s11431-018-9241-7
   Cheng BJ, 2018, SCI CHINA TECHNOL SC, V61, P659, DOI 10.1007/s11431-018-9247-6
   De Donato C, 2019, IEEE NUCL SCI CONF R, DOI 10.1109/NSS/MIC42101.2019.9059620
   De Santis A, 2015, PHYS CHEM EARTH, V85-86, P17, DOI 10.1016/j.pce.2015.05.004
   DiNatale M, 2012, UNDERSTANDING AND USING THE CONTROLLER AREA NETWORK COMMUNICATION PROTOCOL: THEORY AND PRACTICE, P1, DOI 10.1007/978-1-4614-0314-2
   Fornaro C, 2019, SOFTWARE PRACT EXPER, V49, P524, DOI 10.1002/spe.2655
   Li XQ, 2019, RADIAT DETECT TECHNO, V3, DOI 10.1007/s41605-019-0101-7
   Lin J, 2018, SCI CHINA TECHNOL SC, V61, P669, DOI 10.1007/s11431-018-9245-6
   Marcelli N, 2020, ASTROPHYS J, V893, DOI 10.3847/1538-4357/ab80c2
   Martucci M, 2018, ASTROPHYS J LETT, V854, DOI 10.3847/2041-8213/aaa9b2
   Martucci M, 2014, NUCL INSTRUM METH A, V742, P158, DOI 10.1016/j.nima.2013.11.078
   Park SHC, 2005, INT OFFSHORE POLAR E, P6
   Picozza P, 2019, ASTROPHYS J SUPPL S, V243, DOI 10.3847/1538-4365/ab276c
   Roosta R, 2004, D31228 NASA NEPP
   Russo S, 2004, FRASCATI PHYS SER, VXXXVII, P107
   Scotti V, 2017, NUCL PART PHYS P, V291, P118, DOI 10.1016/j.nuclphysbps.2017.06.024
   Sgrigna V, 2005, J ATMOS SOL-TERR PHY, V67, P1448, DOI 10.1016/j.jastp.2005.07.008
   Shen XH, 2018, SCI CHINA TECHNOL SC, V61, P634, DOI 10.1007/s11431-018-9242-0
   Tsakalakos T, 2012, NANOSTRUCTURES SYNTH, V128
   Zhou L, 2013, INT CONF INSTR MEAS, P1217, DOI 10.1109/IMCCC.2013.270
NR 28
TC 14
Z9 14
U1 3
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2021
VL 51
IS 6
BP 1459
EP 1480
DI 10.1002/spe.2947
EA DEC 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RV9MM
UT WOS:000602901800001
DA 2024-07-18
ER

PT J
AU Alsghaier, H
   Akour, M
AF Alsghaier, Hiba
   Akour, Mohammed
TI Software fault prediction using Whale algorithm with genetics algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE fault prediction; genetics algorithm; machine learning; optimization
   algorithms; Whale algorithm
ID DEFECT PREDICTION; OPTIMIZATION ALGORITHM; SYSTEM; NUMBER
AB Software fault prediction became an essential research area in the last few years, there are many prediction and optimization techniques that have been developed for fault prediction. In this paper, an approach is developed by integrating genetics algorithm with support vector machine (SVM) classifier and Whale optimization algorithm for software fault prediction. The developed approach is applied to 24 datasets (12-NASA MDP and 12-Java open-source projects), where NASA MDP is considered as a large-scale dataset, and Java open source projects are considered as a small-scale dataset. Results indicate that integrating Genetics algorithm with SVM and Whale algorithm improves the performance of the software fault prediction process when it is applied to large-scale and small-scale datasets and overcome the limitations that appeared in the previous studies.
C1 [Alsghaier, Hiba; Akour, Mohammed] Yarmouk Univ, Dept Informat Syst, Irbid, Jordan.
C3 Yarmouk University
RP Akour, M (corresponding author), Yarmouk Univ, Dept Informat Syst, Irbid, Jordan.
EM mohammed.akour@yu.edu.jo
OI Akour, Mohammed/0000-0002-5858-8957
CR Abd El Aziz M, 2018, STUD COMPUT INTELL, V730, P23, DOI 10.1007/978-3-319-63754-9_2
   Abd El Aziz M, 2017, EXPERT SYST APPL, V83, P242, DOI 10.1016/j.eswa.2017.04.023
   Afzal Wasif, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P407, DOI 10.1109/ICSEA.2008.9
   Afzal W, 2011, EXPERT SYST APPL, V38, P11984, DOI 10.1016/j.eswa.2011.03.041
   Akour M, 2018, INT J OPEN SOURCE SO, V8, P2231
   Akour M., 2020, INDONESIAN J ELECT E, V19, P388, DOI [10.11591/ijeecs.v19.i1.pp388-394, DOI 10.11591/IJEECS.V19.I1.PP388-394]
   Akour M, 2019, 2019 7 INT S DIG
   Akour M., 2019, INT J ADV TRENDS COM, V8, P2231
   Al Qasem O, 2019, INT J OPEN SOURCE SO, V10, P1
   Al Qasem O, 2020, IEEE ACCESS, V8, P63945, DOI 10.1109/ACCESS.2020.2985290
   Alsghaier H, 2020, SOFTWARE PRACT EXPER, V50, P407, DOI 10.1002/spe.2784
   Arar ÖF, 2015, APPL SOFT COMPUT, V33, P263, DOI 10.1016/j.asoc.2015.04.045
   Chandrashekar G, 2014, COMPUT ELECTR ENG, V40, P16, DOI 10.1016/j.compeleceng.2013.11.024
   Chen Mingming., 2015, SEKE, P397
   COLLOFELLO JS, 1989, J SYST SOFTWARE, V9, P191, DOI 10.1016/0164-1212(89)90039-3
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Di Martino Sergio, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P247, DOI 10.1007/978-3-642-21843-9_20
   Ebrahimi A, 2016, J NAT GAS SCI ENG, V29, P211, DOI 10.1016/j.jngse.2016.01.001
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Erturk E, 2015, EXPERT SYST APPL, V42, P1872, DOI 10.1016/j.eswa.2014.10.025
   Evett M., 1998, Genetic Programming 1998. Proceedings of the Third Annual Conference, P60
   Fazel FS., 2016, B SOC R SCI LIEGE, V85, P187, DOI 10.25518/0037-9565.5275
   Feixiang Li, 2016, International Journal of Wireless and Mobile Computing, V10, P191
   Gorunescu F, 2011, INTEL SYST REF LIBR, P1, DOI 10.1007/978-3-642-19721-5
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   He P., 2016, ARXIV161209065
   Hosseini S., 2016, P 12 INT C PRED MOD, P1
   Kaminsky K, 2004, NAFIPS 2004: ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, VOLS 1AND 2, P10
   Kaveh A, 2017, MECH BASED DES STRUC, V45, P345, DOI 10.1080/15397734.2016.1213639
   Kumar S, 2017, INDIAN J ECON DEV, V13, P65, DOI 10.5958/2322-0430.2017.00009.9
   Kuutila M, 2019, ARXIV190105771
   Son LH, 2019, SYMMETRY-BASEL, V11, DOI 10.3390/sym11020212
   Mafarja MM, 2017, NEUROCOMPUTING, V260, P302, DOI 10.1016/j.neucom.2017.04.053
   Maleki I., 2014, INT J INNOVATION APP, V5, P72
   Mausa G, 2017, APPL SOFT COMPUT, V55, P331, DOI 10.1016/j.asoc.2017.01.050
   Menzies T, 2018, IEEE SOFTWARE, V35, P96, DOI 10.1109/MS.2018.1661323
   Milidiu RL, 2007, J BRAZ COMPUT SOC, V13, P39
   Mohapatra Y, 2018, INT J INTELL ENG SYS, V5, P11
   Mountrakis G, 2011, ISPRS J PHOTOGRAMM, V66, P247, DOI 10.1016/j.isprsjprs.2010.11.001
   Murillo J., 2016, Inteligencia Artif., V19, P114, DOI [10.4114/ia.v18i56.1159, DOI 10.4114/IA.V18I56.1159]
   Murillo-Morera J, 2016, 2016 IEEE 36 CENTR A
   Puri A., 2014, INT J COMPUTER SCI E, V5, P29
   Raj A, 2012, INT J SCI TECHNOL RE, V6, P210
   RAM A, 2018, 2018 2018201 212, P201, DOI DOI 10.1145/3236024.3236080
   Rathore Santosh Singh, 2016, ACM SIGSOFT Software Engineering Notes, V41, P1, DOI 10.1145/2853073.2853083
   Rathore SS, 2015, PROCEDIA COMPUT SCI, V62, P303, DOI 10.1016/j.procs.2015.08.454
   Rathore SS, 2017, EXPERT SYST APPL, V82, P357, DOI 10.1016/j.eswa.2017.04.014
   Sbih A, 2018, J MULT-VALUED LOG S, V31, P567
   Shatnawi Raed, 2017, International Journal of Information Systems and Change Management, V9, P3
   Shu J, 2019, INT J WEB SERV RES, V16, P1, DOI 10.4018/IJWSR.2019070101
   Spadini D, P 40 INT C SOFTW ENG
   Tewari P. C., 2012, J. Ind. Eng. Int, V8, P1, DOI [10.1186/2251-712X-8-1, DOI 10.1186/2251-712X-8-1]
   Wahono R.S., 2013, International Journal of Software Engineering and Its Applications, V7, P153, DOI DOI 10.14257/IJSEIA.2013.7.5.16
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Zampetti F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P38, DOI [10.1109/SANER.2019.8667996, 10.1109/saner.2019.8667996]
   Zhang D., 2007, ADV MACHINE LEARNING, P52
NR 57
TC 7
Z9 7
U1 6
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2021
VL 51
IS 5
BP 1121
EP 1146
DI 10.1002/spe.2941
EA DEC 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI2YI
UT WOS:000598744900001
DA 2024-07-18
ER

PT J
AU Hora, A
AF Hora, Andre
TI APISonar: Mining API usage examples
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE API usage examples; framework; library; mining software repositories;
   software maintenance
ID CODE SEARCH ENGINE
AB Developers spend a significant part of their time searching for code examples on the web. Often, they look for Application Programming Interface (API) usage examples, that is, how to use APIs provided by libraries and frameworks. For this purpose, several programming websites are available. Some programming websites provide manually created examples: unfortunately, as millions of APIs are available nowadays, they do not cover the majority of the APIs. To alleviate this limitation, other programming websites focus on automatically mining API usage examples from code repositories. To the best of our knowledge, however, these solutions are still very limited: they often present poor, duplicated, and similar API usage examples. In this article, we propose an approach, APISonar, to automatically mine API usage examples from code repositories. Our approach aims to overcome the limitations of current solutions: we focus on presenting readable and reusable API usage examples. We analyze millions of source files provided by 4486 software projects hosted on GitHub. Based on this data, we extract 11 million API usage examples about 1.5 million distinct APIs. We evaluate APISonar by assessing its quality and usage. We show that APISonar is a competitive solution, providing the best API examples in terms of readability and reusability, as compared with popular programming websites. Moreover, despite being a novel website, APISonar attracted a significant amount of users in a short period (3.7K users from 119 countries during 5 months). APISonar is available at www.apisonar.com.
C1 [Hora, Andre] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
C3 Universidade Federal de Minas Gerais
RP Hora, A (corresponding author), Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
EM andrehora@dcc.ufmg.br
RI Hora, Andre/HTP-0699-2023
OI Hora, Andre/0000-0003-4900-1330
FU CAPES; CNPq
FX This research is supported by CAPES and CNPq.
CR Bajracharya S, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P111, DOI 10.1109/MSR.2009.5069489
   Bajracharya Sushil, 2006, COMPANION 21 ACM SIG, P681
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Brito A, 2020, EMPIR SOFTW ENG, V25, P1458, DOI 10.1007/s10664-019-09756-z
   Brito A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P507, DOI 10.1109/SANER.2018.8330249
   Brito A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P255, DOI 10.1109/SANER.2018.8330214
   Brito G, 2018, J SYST SOFTWARE, V137, P306, DOI 10.1016/j.jss.2017.12.007
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Businge J, 2015, SOFTWARE QUAL J, V23, P107, DOI 10.1007/s11219-013-9221-3
   Clifton B., 2012, Advanced Web metrics with Google Analytics, V3rd
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Grechanik M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P259, DOI 10.1145/1810295.1810347
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   Hora A, 2015, P INT C SOFTW MAINT
   Hora A, 2018, SOFTWARE QUAL J, V26, P161, DOI 10.1007/s11219-016-9344-4
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Kim J, 2013, ACM T INFORM SYST, V31, DOI 10.1145/2414782.2414783
   Kim J, 2010, AAAI CONF ARTIF INTE, P1358
   Lima C, 2020, SOFTWARE QUAL J, V28, P425, DOI 10.1007/s11219-019-09476-z
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Manning C. D., 2008, Scoring, term weighting, and the vector space model, P100
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   Mileva YM, 2010, LECT NOTES COMPUT SC, V6303, P173, DOI 10.1007/978-3-642-15585-7_17
   Montandon JE, 2013, WORK CONF REVERSE EN, P401, DOI 10.1109/WCRE.2013.6671315
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Robbes R, 2012, P INT S FDN SOFTW EN
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sawant AA, 2019, EMPIR SOFTW ENG, V24, P3824, DOI 10.1007/s10664-019-09713-w
   Sawant AA, 2018, EMPIR SOFTW ENG, V23, P2158, DOI 10.1007/s10664-017-9554-9
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Sim Susan Elliott, 2013, CONTROLLED EXPT PROC, P53
   Stolee KT, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581377
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Swinscow TDV., 2002, STAT SQUARE ONE
   Treude C, 2018, 2018 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON API USAGE AND EVOLUTION (WAPI), P19, DOI 10.1145/3194793.3194796
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Zhu ZX, 2014, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2014.52
NR 59
TC 4
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 319
EP 352
DI 10.1002/spe.2906
EA OCT 2020
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000578007800001
DA 2024-07-18
ER

PT J
AU García-Rois, J
   Fondo-Ferreiro, P
   Gil-Castiñeira, F
   González-Castaño, FJ
   Candal-Ventureira, D
AF Garcia-Rois, Juan
   Fondo-Ferreiro, Pablo
   Gil-Castineira, Felipe
   Gonzalez-Castano, Francisco J.
   Candal-Ventureira, David
TI Evaluating management and orchestration impact on closed-loop
   orchestration delay
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE closed-loop network automation; network slicing; NFV MANO
AB Network "softwarization" is enabling new features such as detecting the risk to violate a Service Level Agreement (SLA) and performing the required automated control actions on a network slice. A real-time Network Function Virtualization (NFV) Management and Orchestration (MANO) system should detect any SLA degradation and act to recover the SLA. The closed-loop automation approach monitors the state of the network and triggers policy-based control actions when needed. The delay between the detection of an SLA issue and the completion of a correcting action is critical for satisfying latency-related SLAs. Thus, in this article we propose this delay as a new key performance indicator (KPI) for NFV MANO systems, which we call Closed-Loop Orchestration Delay (CLOD). CLOD is subdivided into independent time intervals that depend on the NFV MANO platform, the target Virtualized Infrastructure Management (VIM) and the target virtual network function (VNF) software. CLOD is evaluated on a real use case: a latency-sensitive elastic network slice in which Internet user round-trip time (RTT) is monitored. When the service level of the slice drops below a predefined limit a new data plane is deployed near the user reducing latency. In the evaluation, we considered two approaches: (i) a general implementation of the NFV MANO architecture based on the Open Network Automation Platform (ONAP) and OpenStack and (ii) an optimized ad-hoc baseline implementation to minimize CLOD. We provide the details of both implementations and compare their CLODs leading to useful insights for the NFV MANO community.
C1 [Garcia-Rois, Juan; Fondo-Ferreiro, Pablo; Gil-Castineira, Felipe; Gonzalez-Castano, Francisco J.; Candal-Ventureira, David] Univ Vigo, AtlanTTic, Informat Technol Grp, Vigo, Spain.
C3 Universidade de Vigo; atlanTTic
RP González-Castaño, FJ (corresponding author), Univ Vigo, EI Telecomunicac, Vigo 36310, Spain.
EM javier@gti.uvigo.es
RI Fondo-Ferreiro, Pablo/AAN-6174-2021; Gil-Castiñeira,
   Felipe/ABE-6411-2020
OI Fondo-Ferreiro, Pablo/0000-0002-7732-8288; Gil-Castiñeira,
   Felipe/0000-0002-5164-0855; Candal-Ventureira, David/0000-0002-9391-5597
FU "la Caixa" Foundation [LCF/BQ/ES18/11670020]; Conselleria de Cultura,
   Educacion e Ordenacion Universitaria, Xunta de Galicia [GRC 2018/053];
   H2020 European Institute of Innovation and Technology [732638]; ORCA
   [732174]; Ministerio de Economia y Competitividad [TEC
   2016-76465-C2-2-R]; H2020 - Industrial Leadership [732638] Funding
   Source: H2020 - Industrial Leadership
FX "la Caixa" Foundation, Grant/Award Number: LCF/BQ/ES18/11670020;
   Conselleria de Cultura, Educacion e Ordenacion Universitaria, Xunta de
   Galicia, Grant/Award Number: GRC 2018/053; H2020 European Institute of
   Innovation and Technology, Grant/Award Numbers: Fed4FIRE+ (grant
   agreement No. 732638), ORCA (grant agreement No. 732174); Ministerio de
   Economia y Competitividad, Grant/Award Number: TEC 2016-76465-C2-2-R
CR 3GPP TR 28.801 Technical Specification, 2017, 28801 3GPP TR EUR TE
   3GPP TS 23.501 Technical Specification, 2019, 23501 3GPP TS EUR TE
   3GPP TS 28.530 Technical Specification, 2018, 28530 3GPP TS EUR TE
   Alhuseini MU, 2019, IEEE ACCESS, V7, P110856, DOI 10.1109/ACCESS.2019.2933193
   DYNAMO, 2019, DYN MEC ORCH CELL NE
   ETSI GS NFV-MAN, 2014, ETSI GS NFV MAN NETW
   ETSI-GS-ZSM 002-V1.1.1, 2019, 002V111 ETSIGSZSM
   Fondo-Ferreiro P, 2020, IEEE T NETW SERV MAN
   Han B, 2015, IEEE COMMUN MAG, V53, P90, DOI 10.1109/MCOM.2015.7045396
   Kinney S, 2019, EDITORIAL REPORT NET
   Kreutz D, 2015, P IEEE, V103, P14, DOI 10.1109/JPROC.2014.2371999
   Mamushiane L, 2019, 2019 IEEE 2ND WIRELESS AFRICA CONFERENCE (WAC), P63, DOI 10.1109/africa.2019.8843421
   ONOS, NEW CARR GRAD SDN NE
   Open Air Interface (OAI), EPC IMPL
   Ouyang J., FLOW BASED GTP TUNNE
   Rodriguez VQ, 2019, CORR
   Saraiva de Sousa NF, 2018, COMPUT COMMUN, V142-143, P69
   Schulz P, 2017, IEEE COMMUN MAG, V55, P70, DOI 10.1109/MCOM.2017.1600435CM
   Sciancalepore V, 2018, IEEE T NETW SERV MAN, V15, P1292, DOI 10.1109/TNSM.2018.2867827
   Tran TX, 2017, IEEE COMMUN MAG, V55, P54, DOI 10.1109/MCOM.2017.1600863
   Yilma GM, 2019, CORR
NR 21
TC 2
Z9 2
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2021
VL 51
IS 2
BP 193
EP 212
DI 10.1002/spe.2897
EA SEP 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PO1AK
UT WOS:000571824800001
DA 2024-07-18
ER

PT J
AU Jiménez, P
   Roldán, JC
   Gallego, FO
   Corchuelo, R
AF Jimenez, Patricia
   Roldan, Juan C.
   Gallego, Fernando O.
   Corchuelo, Rafael
TI On the synthesis of metadata tags for HTML files
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE embedding techniques; HTML files; metadata tags
ID PERFORMANCE
AB RDFa, JSON-LD, Microdata, and Microformats allow to endow the data in HTML files with metadata tags that help software agents understand them. Unluckily, there are many HTML files that do not have any metadata tags, which has motivated many authors to work on proposals to synthesize them. But they have some problems: the authors either provide an overall picture of their designs without too many details on the techniques behind the scenes or focus on the techniques but do not describe the design of the software systems that support them; many of them cannot deal with data that are encoded using semistructured formats like forms, listings, or tables; and the few proposals that can work on tables can deal with horizontal listings only. In this article, we describe the design of a system that overcomes the previous limitations using a novel embedding approach that has proven to outperform four state-of-the-art techniques on a repository with randomly selected HTML files from 40 different sites. According to our experimental analysis, our proposal can achieve anF(1)score that outperforms the others by10.14%; this difference was confirmed to be statistically significant at the standard confidence level.
C1 [Jimenez, Patricia; Roldan, Juan C.; Gallego, Fernando O.; Corchuelo, Rafael] Univ Seville, ETSI Informat, Avda Reina Mercedes S-N, E-41012 Seville, Spain.
C3 University of Sevilla
RP Corchuelo, R (corresponding author), Univ Seville, ETSI Informat, Avda Reina Mercedes S-N, E-41012 Seville, Spain.
EM corchu@us.es
RI Corchuelo, Rafael/G-3149-2016; Jimenez, Patricia/B-4619-2018
OI Corchuelo, Rafael/0000-0003-1563-6979; Ortega,
   Fernando/0000-0002-9002-0157; Roldan, Juan C./0000-0002-9853-7230;
   Jimenez, Patricia/0000-0001-5070-5904
FU Junta de Andalucia [P18-RT-1060]; Spanish RD Programme [TIN2013-40848-R,
   TIN2016-75394-R]; University of Sevilla
FX Junta de Andalucia, Grant/Award Number: P18-RT-1060; Spanish R&D
   Programme, Grant/Award Number: TIN2013-40848-R, TIN2016-75394-R;
   University of Sevilla, Grant/Award Number: PIF Grant
CR Adrian B, 2010, LECT NOTES ARTIF INT, V6317, P178, DOI 10.1007/978-3-642-16438-5_13
   Bizer C, 2019, TECHNICAL REPORT
   Bizer C, 2013, LECT NOTES COMPUT SC, V8219, P17, DOI 10.1007/978-3-642-41338-4_2
   Burget R, 2016, KNOWL GRAPHS LANG TE, P10
   Cai HY, 2018, IEEE T KNOWL DATA EN, V30, P1616, DOI 10.1109/TKDE.2018.2807452
   Efthymiou V, 2017, LECT NOTES COMPUT SC, V10587, P260, DOI 10.1007/978-3-319-68288-4_16
   Eldesouky B, 2016, LECT NOTES COMPUT SC, V9981, P218, DOI 10.1007/978-3-319-46523-4_14
   Ferri C, 2009, PATTERN RECOGN LETT, V30, P27, DOI 10.1016/j.patrec.2008.08.010
   Foss AH, 2019, INT STAT REV, V87, P80, DOI 10.1111/insr.12274
   Frank E., 2016, THE WEKA WORKBENCH
   García S, 2008, J MACH LEARN RES, V9, P2677
   Goyal P, 2018, KNOWL-BASED SYST, V151, P78, DOI 10.1016/j.knosys.2018.03.022
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Guerrero-Contreras G, 2017, MOB INF SYST, V2017, P1
   Ji GL, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P687
   Dodero JM, 2011, COMM COM INF SC, V240, P105
   Meusel R, 2014, LECT NOTES COMPUT SC, V8796, P277, DOI 10.1007/978-3-319-11964-9_18
   Morales A, 2016, P 2016 C EMPIRICAL M
   Ngomo ACN, 2011, LECT NOTES COMPUT SC, V7032, P189, DOI 10.1007/978-3-642-25093-4_13
   Nickel M, 2016, AAAI CONF ARTIF INTE, P1955
   Oulabi Y., 2019, ADV DAT TECHN 22 INT, P385, DOI 10.5441/002/EDBT.2019.34
   Trouillon T, 2016, PR MACH LEARN RES, V48
   Wang Q, 2017, IEEE T KNOWL DATA EN, V29, P2724, DOI 10.1109/TKDE.2017.2754499
NR 23
TC 5
Z9 5
U1 2
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2020
VL 50
IS 12
BP 2169
EP 2192
DI 10.1002/spe.2886
EA SEP 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OO7CG
UT WOS:000565432400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chhikara, P
   Jain, N
   Tekchandani, R
   Kumar, N
AF Chhikara, Prateek
   Jain, Nikhil
   Tekchandani, Rajkumar
   Kumar, Neeraj
TI Data dimensionality reduction techniques for Industry 4.0: Research
   results, challenges, and future research directions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE big data; dimensionality reduction; Industry 4; 0; smart grid
ID BIG DATA ANALYTICS; ALGORITHMS; CLASSIFICATION; SELECTION; INTERNET;
   EDGE
AB From the last few years, we have witnessed the fourth generation industrial revolution (Industry 4.0), impact of which will be seen in the years to come in various disciplines such as healthcare, transportation, IoT, smart grid, autonomous vehicles, and image processing. These applications in Industry 4.0 may have data in the form of images, speech signals, videos having high dimensions containing multiple dimensions to represent data along different axis. So, the complexity of data processing increases with an increase in the dimensions of the dataset. Complexity can be viewed in terms of detecting and exploiting the relationships among different features of the dataset. These complexities among different attributes can be reduced with the help of dimensionality reduction techniques. These techniques reduce the dimensions from the original input dataset to a lower dimensional dataset. Dimensionality reduction methods are broadly categorized into two types asfeature extraction and feature selection. In feature selection method, out of the original set, a subset of features are identified to get a smaller subset which can be used to build the model whereas, the feature extraction method reduces the dataset of high dimensions to a lower dimension space, that is, a space with a less number of features having different values in comparison to the original dataset. Keeping focus on these points, in this article, we have compared and analyzed different data dimensionality reduction techniques which reduce the dimensions of a large and complex dataset during data processing. In addition, we have discussed various data dimensionality reduction techniques and compared these techniques with respect to various parameters. The comparison among various techniques provides insights to the readers about the applicability of a specific technique to the stand-alone or a group of applications.
C1 [Chhikara, Prateek; Jain, Nikhil; Kumar, Neeraj] Thapar Inst Engn & Technol, BE Comp Engn, Patiala, Punjab, India.
   [Tekchandani, Rajkumar; Kumar, Neeraj] Thapar Inst Engn & Technol, Dept Comp Sci & Engn, Patiala 147004, Punjab, India.
C3 Thapar Institute of Engineering & Technology; Thapar Institute of
   Engineering & Technology
RP Kumar, N (corresponding author), Thapar Inst Engn & Technol, Dept Comp Sci & Engn, Patiala 147004, Punjab, India.; Kumar, N (corresponding author), Asia Univ, Dept Comp Sci & Informat Engn, Taichung, Taiwan.; Kumar, N (corresponding author), King Abdulaziz Univ, Jeddah, Saudi Arabia.
EM pchhikara_be16@thapar.edu; njain_be16@thapar.edu;
   rtekchandani@thapar.edu; neeraj.kumar@thapar.edu
RI Chhikara, Prateek/AGA-7332-2022; Kumar, Neeraj/L-3500-2016; Chhikara,
   Prateek/AAR-4732-2021
OI Chhikara, Prateek/0000-0003-4833-474X; Kumar,
   Neeraj/0000-0002-3020-3947; Chhikara, Prateek/0000-0003-4833-474X
CR Aleshinloye A, 2017, IEEE ELECTR POW ENER, P378
   Annaswamy Anuradha M., 2013, IEEE Vision for Smart Grid Controls 2030 and Beyond
   [Anonymous], 2017, IND 4 0 IND IOT MANU
   [Anonymous], 2018, ULTIMATE GUIDE 12 DI
   [Anonymous], 2018, INTERNET CONNECTED D
   [Anonymous], 2004, P 21 INT C MACHINE L
   [Anonymous], 1992, UCI MACHINE LEARNING
   [Anonymous], 2018, INTRO INTERACTIVE TI
   [Anonymous], **DATA OBJECT**
   [Anonymous], 2019, EXPONENTIAL GROWTH B
   [Anonymous], 2014, WHATS BIG DATA
   [Anonymous], 2018, ALL ELECT FUTURE BIG
   [Anonymous], 2019, DEAL BIG DATA ANAL E
   [Anonymous], 1988, IRIS DATA SET
   Bashir MR, 2016, PROCEEDINGS OF 2016 IEEE 18TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS; IEEE 14TH INTERNATIONAL CONFERENCE ON SMART CITY; IEEE 2ND INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (HPCC/SMARTCITY/DSS), P1325, DOI [10.1109/HPCC-SmartCity-DSS.2016.201, 10.1109/HPCC-SmartCity-DSS.2016.0188]
   Becht E, 2019, NAT BIOTECHNOL, V37, P38, DOI 10.1038/nbt.4314
   Bunte K, 2012, NEUROCOMPUTING, V90, P23, DOI 10.1016/j.neucom.2012.02.034
   Carpenter J, 2012, CASSANDRA DEFINITIVE, V2nd
   Carreira-Perpinan M.A., 1997, Tech. Rep. CS- 96-09, V9, P1
   Chen XW, 2014, IEEE ACCESS, V2, P514, DOI 10.1109/ACCESS.2014.2325029
   Chen Z, 2015, TSINGHUA SCI TECHNOL, V20, P100, DOI 10.1109/TST.2015.7040519
   Costa BP, 2019, INT DATABASE ENG APP, P303, DOI 10.1145/3331076.3331082
   Dua D, 2011, UCI MACHINE LEARNING
   Fan Z, 2013, IEEE COMMUN SURV TUT, V15, P21, DOI 10.1109/SURV.2011.122211.00021
   German B., UCI MACHINE LEARNING
   Ghodsi A., 2006, DIMENSIONALITY REDUC, V37, P38
   Gökalp MO, 2016, 2016 INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE & COMPUTATIONAL INTELLIGENCE (CSCI), P431, DOI [10.1109/CSCI.2016.0088, 10.1109/CSCI.2016.87]
   Griparis A, 2016, INT CONF COMM, P391, DOI 10.1109/ICComm.2016.7528271
   Houari R, 2016, EXPERT SYST APPL, V64, P247, DOI 10.1016/j.eswa.2016.07.041
   John G.H., 1994, P 11 INT C MACH LEAR, P121
   Jolly K., 2018, HANDS DATA VISUALIZA
   Kaur D, 2018, IEEE T KNOWL DATA EN, V30, P1985, DOI 10.1109/TKDE.2018.2809747
   Kumar N, 2013, FRAMEWORK HUMAN EFFI
   Lal TN, 2006, Feature Extraction: Foundations and Applications, P137, DOI 10.1007/978-3-540-35488-8_6.
   Nguyen LH, 2019, PLOS COMPUT BIOL, V15, DOI 10.1371/journal.pcbi.1006907
   Li BY, 2017, IEEE COMMUN MAG, V55, P19, DOI 10.1109/MCOM.2017.1700133
   Li Q., 2005, ADV NEURAL INFORM PR, P1569, DOI DOI 10.5555/2976040.2976237
   Liu H, 2005, IEEE T KNOWL DATA EN, V17, P491, DOI 10.1109/TKDE.2005.66
   Mao KZ, 2004, IEEE T SYST MAN CY B, V34, P629, DOI 10.1109/TSMCB.2002.804363
   Mao SS, 2017, IEEE T CYBERNETICS, V47, P1299, DOI 10.1109/TCYB.2016.2587825
   Marcano-Cedeno A., 2010, IECON 2010 - 36th Annual Conference of IEEE Industrial Electronics, P2845, DOI 10.1109/IECON.2010.5675075
   McInnes L, 2020, Arxiv, DOI [arXiv:1802.03426, DOI 10.48550/ARXIV.1802.03426, 10.21105/joss.00861]
   Mehmood R, 2018, lecture notes of the institute for computer sciences, social informatics and telecommunications engineering (LNICST), V224
   Mehmood R., 2015, HDB RES REDESIGNING, P531
   Mehmood R, 2017, IEEE ACCESS, V5, P2615, DOI 10.1109/ACCESS.2017.2668840
   Mehmood R, 2017, INT J OPER PROD MAN, V37, P75, DOI 10.1108/IJOPM-03-2015-0179
   Mehmood R, 2011, J NETW COMPUT APPL, V34, P1518, DOI 10.1016/j.jnca.2010.08.002
   Mehmood R, 2011, J MANUF TECHNOL MANA, V22, P804, DOI 10.1108/17410381111149657
   Niu D., 2011, Proceedings of International Conference on Artificial Intelligence and Statistics, P552
   Rehman MHU, 2016, DATA SCI ENG, V1, P265, DOI 10.1007/s41019-016-0022-0
   REINGANUM JF, 1985, Q J ECON, V100, P81, DOI 10.2307/1885736
   Saleem Y, 2019, IEEE ACCESS, V7, P62962, DOI 10.1109/ACCESS.2019.2913984
   Satyanarayanan M, 2015, IEEE PERVAS COMPUT, V14, P24, DOI 10.1109/MPRV.2015.32
   Saul L. K., 2006, Semi-Supervised Learn., V3, P292
   Sharma SK, 2017, IEEE ACCESS, V5, P4621, DOI 10.1109/ACCESS.2017.2682640
   [宋亚奇 Song Yaqi], 2013, [电网技术, Power System Technology], V37, P927
   Srinivasan U, 2013, IT PROF, V15, P21, DOI 10.1109/MITP.2013.55
   Strange H., 2014, SPRINGERBRIEFS COMPU
   Sun YC, 2016, IEEE ACCESS, V4, P766, DOI 10.1109/ACCESS.2016.2529723
   Svetnik V, 2003, J CHEM INF COMP SCI, V43, P1947, DOI 10.1021/ci034160g
   Toole JL, 2015, TRANSPORT RES C-EMER, V58, P162, DOI 10.1016/j.trc.2015.04.022
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Van Der Maaten Laurens, 2009, Journal of Machine Learning Research, V10, P13
   VIDYASAGAR M, 1982, IEEE T AUTOMAT CONTR, V27, P880, DOI 10.1109/TAC.1982.1103015
   Wang H., 2013, 2013 IEEE International Symposium on Safety, Security, and Rescue Robotics (SSRR), P1, DOI DOI 10.1109/SSRR.2013.6719335
   Wang H, 2013, PROCEEDINGS OF THE 5TH (2013) INTERNATIONAL CONFERENCE ON FINANCIAL RISK AND CORPORATE FINANCE MANAGEMENT, VOLS I AND II, P1, DOI 10.1109/ijcnn.2013.6706812
   White T, 2015, Hadoop: the definitive guide: storage and analysis at internet scale, V4th
   Wu XD, 2014, IEEE T KNOWL DATA EN, V26, P97, DOI 10.1109/TKDE.2013.109
   Xie L, 2014, IEEE T POWER SYST, V29, P2784, DOI 10.1109/TPWRS.2014.2316476
   Xingfu Zhang, 2011, 2011 International Conference on Multimedia Technology, P934
   Zhai YT, 2014, IEEE COMPUT INTELL M, V9, P14, DOI 10.1109/MCI.2014.2326099
   Zhao W., SUBSPACE LINEAR DISC
NR 72
TC 12
Z9 12
U1 2
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2022
VL 52
IS 3
SI SI
BP 658
EP 688
DI 10.1002/spe.2876
EA AUG 2020
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YS2YA
UT WOS:000559383900001
DA 2024-07-18
ER

PT J
AU Wainer, G
   Moallemi, M
AF Wainer, Gabriel
   Moallemi, Mohammad
TI Designing real-time systems using imprecise discrete-event system
   specifications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
ID SIMULATION; DEVS; COMPUTATIONS; ALGORITHMS; PERFORMANCE
AB Real-time (RT) systems include hardware and software components interacting in a tight fashion. Although formal methods for RT systems development have advanced, they are sometimes difficult to apply in practical applications, and scalability is compromised as the complexity of the system scales up. Instead, using modeling and simulation (M&S) methods and tools has showed to be useful for verification of practical aspects of RT systems (and having the advantage to be able to including models of the physical environment they interact with). Although several efforts exist in M&S of RT systems, none of them has considered problems of transient overloading in the RT systems specifications. Here, we introduce a new theoretical framework called I-DEVS (imprecise discrete event systems specification) with the goal of guaranteeing responses to inputs within specified time constraints under such transient overloading conditions. The solution presented here has the advantages of a formal specification and the practicality of an M&S-based approach. We also discuss how to define hierarchical models running in RT, and we present a set of tools that can be applied to develop RT-embedded applications, and RT simulations.
C1 [Wainer, Gabriel] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Moallemi, Mohammad] Embry Riddle Aeronaut Univ, ERAU NEAR Lab, Daytona Beach, FL USA.
C3 Carleton University; Embry-Riddle Aeronautical University
RP Wainer, G (corresponding author), Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
EM gwainer@sce.carleton.ca
RI Wainer, Gabriel A/A-2797-2008
OI Wainer, Gabriel A/0000-0003-3366-9184
FU Natural Sciences and Engineering Research Council of Canada
FX Natural Sciences and Engineering Research Council of Canada
CR Abrial J. -R., 2006, 28th International Conference on Software Engineering Proceedings, P761, DOI 10.1145/1134285.1134406
   Amirijoo M, 2003, P 15 EUR C RT SYST J
   Aydin H, 1999, IEEE T COMPUT, V44, P111
   Baruah SK, 1998, IEEE T COMPUT, V47, P1027, DOI 10.1109/12.713322
   Blazewicz J, 2019, HDB SCHEDULING INT H
   Bocciarelli P, 2019, SIMUL-T SOC MOD SIM, V95, P1185, DOI 10.1177/0037549719829828
   Buttazzo G, 2006, COMPUTER, V39, P54, DOI 10.1109/MC.2006.148
   Camus B, 2018, SIMUL-T SOC MOD SIM, V94, P1099, DOI 10.1177/0037549717749014
   Cao K, 2020, IEEE T COMPUT AID D, V39, P2095, DOI 10.1109/TCAD.2019.2957374
   Cardoen B, 2016, P S THEOR MOD SIM, V4, P1
   Chen JM, 2009, J INF SCI ENG, V25, P185
   Chen X, 1997, SIXTH INTERNATIONAL CONFERENCE ON COMPUTER COMMUNICATIONS AND NETWORKS, PROCEEDINGS, P390, DOI 10.1109/ICCCN.1997.623341
   Chishiro H, 2014, INT SYMP OBJECT COMP, P198, DOI 10.1109/ISORC.2014.17
   CHUNG JY, 1990, IEEE T COMPUT, V39, P1156, DOI 10.1109/12.57057
   Feng W., 1993, Proceedings of the IEEE Workshop on Real-Time Applications (Cat.No.93TH0559-5), P76, DOI 10.1109/RTA.1993.263112
   Finney K, 1996, IEEE T SOFTWARE ENG, V22, P158, DOI 10.1109/32.485225
   Fujisawa K, 1999, ICRA '99: IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND AUTOMATION, VOLS 1-4, PROCEEDINGS, P1347, DOI 10.1109/ROBOT.1999.772548
   Furfaro A, 2009, INNOV SYST SOFTW ENG, V5, P117, DOI 10.1007/s11334-009-0085-4
   Glinsky E, 2005, Ninth IEEE International Symposium on Distributed Simulation and Real-Time Applications, Proceedings, P265, DOI 10.1109/DISTRA.2005.18
   Hansson J, 2000, SEVENTH INTERNATIONAL CONFERENCE ON REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P307, DOI 10.1109/RTCSA.2000.896406
   Hong JS, 1997, DISCRETE EVENT DYN S, V7, P355, DOI 10.1023/A:1008262409521
   Huang X., 1995, P REAL TIME TECHNOLO, P390
   Kang BG, 2019, SIMUL-T SOC MOD SIM, V95, P673, DOI 10.1177/0037549718809890
   Kobayashi H, 2004, RTAS 2004: 10TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P255, DOI 10.1109/RTTAS.2004.1317271
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   LIU JWS, 1994, P IEEE, V82, P83, DOI 10.1109/5.259428
   LIU JWS, 1991, COMPUTER, V24, P58, DOI 10.1109/2.76287
   Liu JWS, 2000, RT SYSTEMS
   LIU JWS, 1994, INT SER ENG COMPUT S, V284, P157
   Mello B., 2016, P 2016 SCS ACM IEEE, P1
   Moallemi M, 2011, SIMUL SERIES, V43, P95
   Moallemi M, 2013, SIMUL MODEL PRACT TH, V38, P115, DOI 10.1016/j.simpat.2013.07.004
   Monin J.F., 2003, UNDERSTANDING FORMAL
   Nicolescu G., 2010, Model-Based Design for Embedded Systems
   Parker GB, 2002, 2002 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS, VOLS 1-3, PROCEEDINGS, P2664, DOI 10.1109/IRDS.2002.1041672
   Risco-Martín JL, 2017, SIMUL-T SOC MOD SIM, V93, P459, DOI 10.1177/0037549717690447
   Saadawi H, 2009, P DEVS S
   Shih W.K., 1992, P 13 IEEE REAL TIME, P280
   SHIH WK, 1991, SIAM J COMPUT, V20, P537, DOI 10.1137/0220035
   Shih WK, 1996, SIAM J COMPUT, V25, P1105, DOI 10.1137/S0097539792233634
   SHIH WK, 1995, IEEE T COMPUT, V44, P466, DOI 10.1109/12.372040
   Song HS, 2005, SIMUL-T SOC MOD SIM, V81, P119, DOI 10.1177/0037549705052229
   Van Tendeloo Y, 2017, SIMUL-T SOC MOD SIM, V93, P103, DOI 10.1177/0037549716678330
   Vicino D., 2015, P 2015 SCS ACM IEEE, P165, DOI DOI 10.5555/2872965.2872988
   Wainer G, 2011, SIMUL-T SOC MOD SIM, V87, P555, DOI 10.1177/0037549710395649
   Wainer GA, 2009, COMPUT ANAL SYNTH DE, P3
   WIEDENHOFT GR, 2008, P 6 IFIP WORK C DIST, P121
   Zeigler BP., 2000, Theory of Modeling and Simulation
   Zhou JL, 2017, DES AUT TEST EUROPE, P1402, DOI 10.23919/DATE.2017.7927212
NR 49
TC 3
Z9 3
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2020
VL 50
IS 8
BP 1327
EP 1344
DI 10.1002/spe.2831
EA APR 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MG0MA
UT WOS:000527692900001
DA 2024-07-18
ER

PT J
AU Prasser, F
   Eicher, J
   Spengler, H
   Bild, R
   Kuhn, KA
AF Prasser, Fabian
   Eicher, Johanna
   Spengler, Helmut
   Bild, Raffael
   Kuhn, Klaus A.
TI Flexible data anonymization using ARX-Current status and challenges
   ahead
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE data anonymization; de-identification; privacy; security; software tools
ID K-ANONYMIZATION; PROTECTING PRIVACY; ANONYMITY; UTILITY; MICRODATA; RISK
AB The race for innovation has turned into a race for data. Rapid developments of new technologies, especially in the field of artificial intelligence, are accompanied by new ways of accessing, integrating, and analyzing sensitive personal data. Examples include financial transactions, social network activities, location traces, and medical records. As a consequence, adequate and careful privacy management has become a significant challenge. New data protection regulations, for example in the EU and China, are direct responses to these developments. Data anonymization is an important building block of data protection concepts, as it allows to reduce privacy risks by altering data. The development of anonymization tools involves significant challenges, however. For instance, the effectiveness of different anonymization techniques depends on context, and thus tools need to support a large set of methods to ensure that the usefulness of data is not overly affected by risk-reducing transformations. In spite of these requirements, existing solutions typically only support a small set of methods. In this work, we describe how we have extended an open source data anonymization tool to support almost arbitrary combinations of a wide range of techniques in a scalable manner. We then review the spectrum of methods supported and discuss their compatibility within the novel framework. The results of an extensive experimental comparison show that our approach outperforms related solutions in terms of scalability and output data quality-while supporting a much broader range of techniques. Finally, we discuss practical experiences with ARX and present remaining issues and challenges ahead.
C1 [Prasser, Fabian] Berlin Inst Hlth, Med Informat Lab, Berlin, Germany.
   [Prasser, Fabian] Charite Univ Med Berlin, Berlin, Germany.
   [Eicher, Johanna; Spengler, Helmut; Bild, Raffael; Kuhn, Klaus A.] Tech Univ Munich, Inst Med Informat Stat & Epidemiol, Sch Med, Munich, Germany.
C3 Berlin Institute of Health; Free University of Berlin; Humboldt
   University of Berlin; Charite Universitatsmedizin Berlin; Technical
   University of Munich
RP Prasser, F (corresponding author), Charite Univ Med Berlin, Berlin Inst Hlth, Med Informat Lab, Charitepl 1, D-10117 Berlin, Germany.
EM fabian.prasser@charite.de
OI Prasser, Fabian/0000-0003-3172-3095; Eicher, Johanna/0000-0003-4871-0282
CR Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   Aggarwal C.C., 2005, P 31 INT C VER LARG, P901, DOI [DOI 10.5555/1083592.1083696, 10.5555/1083592.1083696]
   [Anonymous], 2019, BENCHMARK DIFFERENT
   [Anonymous], 2016, Official Journal of the European Union, V119
   Armando Alessandro, 2015, International Journal of Secure Software Engineering, V6, P70, DOI 10.4018/ijsse.2015040104
   Babu KS, 2013, TRANS DATA PRIV, V6, P1
   Back Asta, 2017, ANONYMISOINTIPALVELU
   Bayardo RJ, 2005, PROC INT CONF DATA, P217
   Bild Raffael, 2018, Proceedings on Privacy Enhancing Technologies, V2018, P67, DOI 10.1515/popets-2018-0004
   Bowen Jonathan., 2012, Getting Started with Talend Open Studio for Data Integration
   Brickell Justin, 2008, P 14 ACM SIGKDD INT, P70, DOI [10.1145/1401890.1401904, DOI 10.1145/1401890.1401904]
   Byun JW, 2007, LECT NOTES COMPUT SC, V4443, P188
   Cao J, 2012, PROC VLDB ENDOW, V5, P1388, DOI 10.14778/2350229.2350255
   Chen G, 1998, Journal of Official Statistics, V14, P79
   Chen HC, 2012, MIS QUART, V36, P1165
   Cornell Database Group, 2014, CORN AN TOOLK
   Costa C, 2017, PROC INT CONF DATA, P1332, DOI 10.1109/ICDE.2017.175
   Cramer R, 2015, Secure Multiparty Computation and Secret Sharing, DOI DOI 10.1017/CBO9781107337756
   Dai CY, 2009, PROC VLDB ENDOW, V2, P1618, DOI 10.14778/1687553.1687607
   Dankar FK, 2012, BMC MED INFORM DECIS, V12, DOI 10.1186/1472-6947-12-66
   Data Anonymization in KNIME, 2019, REDF PRIV EXT WALKTH
   Desai T., 2016, Five Safes: designing data access for research
   Domingo-Ferrer J, 2005, DATA MIN KNOWL DISC, V11, P195, DOI 10.1007/s10618-005-0007-5
   Domingo-Ferrer J, 2015, PRIVACY DIGITAL NETW
   Domingos P, 2012, COMMUN ACM, V55, P78, DOI 10.1145/2347736.2347755
   Duncan GT, 2011, STAT SOC BEHAV SC, P1, DOI 10.1007/978-1-4419-7802-8
   Dutch Ministry of Justice and Security, 2018, STAT DISCL CONTR TEC
   El Emam K., 2013, Anonymizing Health Data Case Studies and Methods to Get You Started
   El Emam K, 2008, J AM MED INFORM ASSN, V15, P627, DOI 10.1197/jamia.M2716
   El Emam Khaled, 2011, PLoS One, V6, pe28071, DOI 10.1371/journal.pone.0028071
   El Emam K, 2009, J AM MED INFORM ASSN, V16, P670, DOI 10.1197/jamia.M3144
   Elliot Mark, 2016, The Anonymisation Decision-Making Framework
   European Medicines Agency, 2018, EXT GUID IMPL EUR ME
   European Medicines Agency, 2014, European Medicines Agency Policy on Publication of Clinical Data for Medical Products for Human Use
   European Union Agency for Network and Information Security, 2015, PRIV DAT PROT DES
   Fung Benjamin C. M., 2010, Introduction to Privacy-Preserving Data Publishing: Concepts and Techniques
   Fung Benjamin C M, 2019, SELECTED PUBLICATION
   Gionis A, 2007, LECT NOTES COMPUT SC, V4698, P439
   Gionis A, 2008, PROC INT CONF DATA, P744, DOI 10.1109/ICDE.2008.4497483
   Goldberger J, 2009, INT CONF DAT MIN WOR, P106, DOI 10.1109/ICDMW.2009.15
   Hoshino N., 2001, J OFF STAT, V17, P499, DOI DOI 10.1007/978-3-319-50272-4_3
   Hundepool A, 1996, COMPSTAT, P341
   Hundepool A., 2012, Statistical Disclosure Control
   Iyengar V.S., 2002, P 8 ACM SIGKDD INT C, P279, DOI [10.1145/775047.775089., DOI 10.1145/775047.775089, 10.1145/775047.775089]
   Jia XW, 2016, PROCEEDINGS OF THE 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING ASONAM 2016, P1, DOI 10.1109/ASONAM.2016.7752206
   Jiang CX, 2017, IEEE J SEL AREA COMM, V35, P432, DOI 10.1109/JSAC.2017.2659078
   Kessler S, 2019, PROC VLDB ENDOW, V12, P1998, DOI 10.14778/3352063.3352119
   Kim J, 2016, PROC INT CONF DATA, P743, DOI 10.1109/ICDE.2016.7498286
   Kohlmayer F, 2012, PROCEEDINGS OF 2012 ASE/IEEE INTERNATIONAL CONFERENCE ON PRIVACY, SECURITY, RISK AND TRUST AND 2012 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM/PASSAT 2012), P708, DOI 10.1109/SocialCom-PASSAT.2012.52
   Korea Internet & Security Agency, KISA PROM TRAIN ID P
   Kuzilek J, 2017, SCI DATA, V4, DOI 10.1038/sdata.2017.171
   LeFevre K, 2008, ACM T DATABASE SYST, V33, DOI 10.1145/1386118.1386123
   LeFevre Kristen, 2005, Proceedings of the 2005 ACM SIGMOD international conference on Management of data, P49, DOI DOI 10.1145/1066157.1066164
   LeFevre Kristen, 2006, 22 INT C DAT ENG ICD, P25
   Leoni D., 2012, P 1 INT WORKSHOP OPE, P40
   Li N, 2007, INT CONF NANO MICRO, P692, DOI 10.1109/icde.2007.367856
   LMU Munich, 2019, COND YOUR STUD
   Machanavajjhala A., 2007, ACM T KNOWL DISCOV D, V1, P3, DOI [DOI 10.1145/1217299.1217302, 10.1109/icde.2006.1, DOI 10.1109/ICDE.2006.1]
   Manning AM, 2008, DATA MIN KNOWL DISC, V16, P165, DOI 10.1007/s10618-007-0078-6
   McSherry F, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P19
   Ministere des Solidarites et de la Sante, 2015, DONN SANT AN RISQ RE
   Ministry of Science and ICT, 2016, RES DE ID TECHN PERS
   Narayanan A, 2008, P IEEE S SECUR PRIV, P111, DOI 10.1109/SP.2008.33
   Nergiz M. E., 2007, P 2007 ACM SIGMOD IN, P665, DOI [DOI 10.1145/1247480.1247554, 10.1145/1247480.1247554]
   Nergiz MehmetErcan., 2006, ICDEW 06, P96
   Office for Civil Rights HHS, 2002, Fed Regist, V67, P53181
   Office of the Australian Information Commissioner, 2017, DE ID DEC MAK FRAM
   Ohno-Machado L, 2002, J AM MED INFORM ASSN, V9, pS115, DOI 10.1197/jamia.M1241
   OpenAIRE, 2019, AMN
   Pannekoek J, 1999, STAT NEERL, V53, P55, DOI 10.1111/1467-9574.00097
   Park N, 2018, PROC VLDB ENDOW, V11, P1071, DOI 10.14778/3231751.3231757
   Personal Data Protection Commission of Singapore, 2018, GUID BAS DAT AN TECH
   Polish Ministry of Digitalization, 2018, OP DAT SEC STAND
   Poulis Giorgos., 2014, Proceedings of the 17th International Conference on Extending Database Technology, P620
   Prasser F, 2015, Medical Data Privacy Handbook, DOI [DOI 10.1007/978-3-319-23633-96, DOI 10.1007/978-3-319-23633-9_6]
   Prasser F, 2019, INT J MED INFORM, V126, P72, DOI 10.1016/j.ijmedinf.2019.03.006
   Prasser Fabian, 2017, AMIA Annu Symp Proc, V2017, P1430
   Prasser F, 2018, IEEE J BIOMED HEALTH, V22, P611, DOI 10.1109/JBHI.2017.2676880
   Prasser F, 2017, COMP MED SY, P169, DOI 10.1109/CBMS.2017.105
   Prasser F, 2016, TRANS DATA PRIV, V9, P161
   Prasser F, 2016, STUD HEALTH TECHNOL, V228, P312, DOI 10.3233/978-1-61499-678-1-312
   Prasser F, 2016, METHOD INFORM MED, V55, P347, DOI 10.3414/ME16-01-0012
   Prasser F, 2016, BMC MED INFORM DECIS, V16, DOI 10.1186/s12911-016-0287-2
   Prasser Fabian, 2014, AMIA Annu Symp Proc, V2014, P984
   Research Data Library Team, RDM WALKTHR GUID
   Roy I., 2010, NSDI, P20
   Sanchez D., 2016, SCIENCE, V6279, P1274
   Sanchez D, ARXIV151105957V22015
   Soria-Comas J, 2015, IEEE T KNOWL DATA EN, V27, P3098, DOI 10.1109/TKDE.2015.2435777
   Stammler S, 2016, LECT NOTES COMPUT SC, V9867, P135, DOI 10.1007/978-3-319-45381_11
   Standardization Administration of China, 2018, 352732017 GBT STAND
   Sweeney L., 1998, Database Security XI. Status and Prospects. IFIP TC11 WG11.3 Eleventh International Conference on Database Security, P356
   Sweeney L, 2002, INT J UNCERTAIN FUZZ, V10, P557, DOI 10.1142/S0218488502001648
   Sweeney L., 2001, Computational disclosure control: A primer on data privacy protection
   Templ M., 2017, Statistical Disclosure Control for Microdata
   Terrovitis M, 2008, PROC VLDB ENDOW, V1, P115, DOI 10.14778/1453856.1453874
   TMF - Technologie- und Methodenplattform fur die vernetzte medizinische Forschung, ANONTRAIN PRAKT ANW
   Torra V, 2017, STUD BIG DATA, V28, P1, DOI 10.1007/978-3-319-57358-8
   University of Guelph, 2018, CLEAN PREP YOUR DAT
   University of Kassel, 2019, MAN RES DAT
   Ursin G, 2017, CANCER EPIDEM BIOMAR, V26, P1219, DOI 10.1158/1055-9965.EPI-17-0172
   UT Dallas Data Security and Privacy Lab, 2012, UTD AN TOOLB
   Xia WY, 2015, J AM MED INFORM ASSN, V22, P1029, DOI 10.1093/jamia/ocv004
   Xu L, 2015, IEEE J-STSP, V9, P1256, DOI 10.1109/JSTSP.2015.2425798
   Zakerzadeh H, 2016, KNOWL INF SYST, V49, P341, DOI 10.1007/s10115-015-0906-8
   Zayatz LauraVoshell, 1991, CENSUSSRDRR9108
   Zhiyu W, 2015, PLOS ONE, V10
NR 107
TC 35
Z9 39
U1 1
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1277
EP 1304
DI 10.1002/spe.2812
EA FEB 2020
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA LT6RF
UT WOS:000515501400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Bonfim, M
   Santos, M
   Dias, K
   Fernandes, S
AF Bonfim, Michel
   Santos, Marcelo
   Dias, Kelvin
   Fernandes, Stenio
TI A real-time attack defense framework for 5G network slicing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE 5G; bloom filter; cybersecurity; network function virtualization;
   network slice; P4
ID SECURITY
AB Network Slicing (NS) is a key enabler to support 5G network services on-demand. However, since NS is a result of the recent advancement in Software-Defined Networking and Network Function Virtualization, it introduces new security issues which include attacks against an NS instance within an operator network and interslice security threats. In this scenario, identifying and mitigating attacks in real-time is of paramount importance to improve security aspects. However, it is far from being straightforward. Therefore, this work proposes the FrameRTP4, a P4-based framework that aims to deliver real-time attack detection and mitigation mechanisms in 5G NS scenarios. For this, it provides a P4-based switch that implements an Service Function Chaining protocol layer, an efficient and scalable Access Control List for the detection and mitigation of known attacks, and a monitoring system aiming to reduce the overhead induced on the control channel. Furthermore, it delivers an orchestrator that aims to control all switches in order to enable lifecycle management of NS instances and P4 table rules. Besides, it also performs some autonomous tasks such as the wildcard rules generation and the detection of new threats by using machine learning algorithms. Preliminary results point to the potential benefits of FrameRTP4 to be part of a 5G NS infrastructure.
C1 [Bonfim, Michel; Dias, Kelvin; Fernandes, Stenio] Univ Fed Pernambuco UFPE, Ctr Informat CIn, Av Jornalista Anibal Fernandes S-N,Cidade Univ, BR-50740560 Recife, PE, Brazil.
   [Santos, Marcelo] Inst Fed Educ Ciencia & Tecnol Sertao Pernambucan, Salgueiro, PE, Brazil.
C3 Universidade Federal de Pernambuco; Instituto Federal do Sertao
   Pernambucano
RP Bonfim, M (corresponding author), Univ Fed Pernambuco UFPE, Ctr Informat CIn, Av Jornalista Anibal Fernandes S-N,Cidade Univ, BR-50740560 Recife, PE, Brazil.
EM msb6@cin.ufpe.br
RI Dias, Kelvin Lopes/I-9404-2017
OI Dias, Kelvin Lopes/0000-0003-0336-1162; Sales,
   Michel/0000-0001-8665-3675
FU National Science Foundation (NSF-USA); Rede Nacional de Ensino e
   Pesquisa (RNP-Brazil) under the "EAGER: USBRCCR: SecuringNetworks in the
   ProgrammableData Plane" project
FX This work was partially funded by the National Science Foundation
   (NSF-USA) and the Rede Nacional de Ensino e Pesquisa (RNP-Brazil) under
   the "EAGER: USBRCCR: SecuringNetworks in the ProgrammableData Plane"
   project. This work was developed while Stenio Fernandes was with UFPE,
   Brazil. He is now with Element AI, Canada.
CR Afek Y, 2018, COMPUT NETW, V136, P1, DOI 10.1016/j.comnet.2018.02.018
   Al-Haidari F, 2013, INT CONF CLOUD COMP, P256, DOI 10.1109/CloudCom.2013.142
   [Anonymous], 2017, IEEE NETSOFT
   [Anonymous], 2017, CONT MOD FUT IS BION, V1, P2
   [Anonymous], P IEEE C COMP COMM I
   [Anonymous], 2004, 4 ACM SIGCOMM C INT
   [Anonymous], 2015, Openflow switch specification (version 1.5.1)
   Arashloo MT, 2016, PROCEEDINGS OF THE 2016 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION (SIGCOMM '16), P29, DOI 10.1145/2934872.2934892
   Ballani H, 2015, ACM SIGCOMM COMP COM, V45, P29, DOI 10.1145/2831347.2831352
   Bawany NZ, 2017, ARAB J SCI ENG, V42, P425, DOI 10.1007/s13369-017-2414-5
   Bhamare D, 2016, J NETW COMPUT APPL, V75, P138, DOI 10.1016/j.jnca.2016.09.001
   Bianchi G, 2014, ACM SIGCOMM COMP COM, V44, P45
   Bianco Andrea., 2017, 2017 IEEE International Conference on Communications (ICC), P1
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Bonfim M, 2019, P AN 6 WORKSH PREIET
   Bonfim MS, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3172866
   Bonola M, 2017, IEEE T DEPEND SECURE, V14, P664, DOI 10.1109/TDSC.2015.2499747
   Bosshart P, 2014, ACM SIGCOMM COMP COM, V44, P87, DOI 10.1145/2656877.2656890
   Bosshart P, 2013, ACM SIGCOMM COMP COM, V43, P99, DOI 10.1145/2534169.2486011
   Braun Wolfgang, 2014, 2014 Third European Workshop on Software Defined Networks (EWSDN), P25, DOI 10.1109/EWSDN.2014.23
   Broder Andrei, 2003, Internet Math, V1, DOI DOI 10.1080/15427951.2004.10129096
   Calyam P, 2014, COMPUT NETW, V68, P110, DOI 10.1016/j.comnet.2014.02.022
   Capone A, 2014, P 11 INT C DES REL C, DOI [10.1109/DRCN.2015.7148981, DOI 10.1109/DRCN.2015.7148981]
   Cardoso Lapolli Angelo, 2019, 2019 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), P19
   Cascone C, 2017, INT J NETW MANAG, V27, DOI 10.1002/nem.1957
   Cascone C, 2015, 2015 FOURTH EUROPEAN WORKSHOP ON SOFTWARE DEFINED NETWORKS - EWSDN 2015, P85, DOI 10.1109/EWSDN.2015.66
   Chaer A, 2019, IEEE GLOBE WORK, DOI 10.1109/gcwkshps45667.2019.9024627
   Clay Peter, 2015, Network Security, V2015, P5, DOI 10.1016/S1353-4858(15)30026-X
   Cormode G, 2005, J ALGORITHMS, V55, P58, DOI 10.1016/j.jalgor.2003.12.001
   Dargahi T, 2017, IEEE COMMUN SURV TUT, V19, P1701, DOI 10.1109/COMST.2017.2689819
   Ding D, 2020, P IEEE IFIP NETW OP
   Estan C, 2003, ACM T COMPUT SYST, V21, P270, DOI 10.1145/859716.859719
   Febro A., 2018, P NOMS 2018 2018 IEE, P1, DOI DOI 10.1109/NOMS.2018.8406281
   G. P. A. W. Group, 2016, VIEW 5G ARCH
   Garcia S, 2014, COMPUT SECUR, V45, P100, DOI 10.1016/j.cose.2014.05.011
   Giotis K, 2014, COMPUT NETW, V62, P122, DOI 10.1016/j.bjp.2013.10.014
   Gonzales Pastana Lobato A, 2016, P 36 S BRAS RED COMP
   Goodrich Michael T., 2011, 2011 49th Annual Allerton Conference on Communication, Control, and Computing (Allerton), P792
   Grandi F, 2018, INFORM PROCESS LETT, V129, P35, DOI 10.1016/j.ipl.2017.09.004
   Group GPAW, 2016, 5G PPP USE CASES PER
   Guan B., 2019, IEEE VTS VEH TECHNOL, P1
   Gupta A, 2015, IEEE ACCESS, V3, P1206, DOI 10.1109/ACCESS.2015.2461602
   Jiang LB, 2010, IEEE T INFORM THEORY, V56, P6182, DOI 10.1109/TIT.2010.2081490
   Joel Halpern, 2015, RFC 7665, DOI [10.17487/rfc7665, DOI 10.17487/RFC7665]
   Khan MA, 2018, FUTURE GENER COMP SY, V82, P395, DOI 10.1016/j.future.2017.11.022
   Kreutz D, 2015, P IEEE, V103, P14, DOI 10.1109/JPROC.2014.2371999
   Lakhina A, 2005, ACM SIGCOMM COMP COM, V35, P217, DOI 10.1145/1090191.1080118
   Lall A., 2006, Performance Evaluation Review, V34, P145, DOI 10.1145/1140103.1140295
   Li YL, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P311
   Liu ZX, 2016, PROCEEDINGS OF THE 2016 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION (SIGCOMM '16), P101, DOI 10.1145/2934872.2934906
   McClurg J, 2016, ACM SIGPLAN NOTICES, V51, P369, DOI [10.1145/2980983.2908097, 10.1145/2908080.2908097]
   McKeown N, 2008, ACM SIGCOMM COMP COM, V38, P69, DOI 10.1145/1355734.1355746
   Medhat AM, 2017, IEEE COMMUN MAG, V55, P216, DOI 10.1109/MCOM.2016.1600219RP
   Mishra P, 2019, IEEE COMMUN SURV TUT, V21, P686, DOI 10.1109/COMST.2018.2847722
   Moshref M, 2014, ACM SIGCOMM COMP COM, V44, P377, DOI [10.1145/2740070.2631439, 10.1145/2619239.2631439]
   Ordonez-Lucena J, 2017, IEEE COMMUN MAG, V55, P80, DOI 10.1109/MCOM.2017.1600935
   Paolucci F, 2019, J OPT COMMUN NETW, V11, pA84, DOI 10.1364/JOCN.11.000A84
   Patgiri R, 2018, EAI ENDORSED TRANS S, V5, DOI 10.4108/eai.19-6-2018.155865
   Pereira F, 2017, 2017 IEEE CONFERENCE ON NETWORK FUNCTION VIRTUALIZATION AND SOFTWARE DEFINED NETWORKS (NFV-SDN), P286
   Quinn P, 2018, 8330 RFC, P8300
   Rashvand HF, 2010, IET INFORM SECUR, V4, P188, DOI 10.1049/iet-ifs.2010.0041
   Rebecchi F., 2017, P IEEE C NETW SOFTW, P1, DOI [10.1109/NETSOFT.2017.8004256, DOI 10.1109/NETSOFT.2017.8004256]
   Rifai M, 2017, COMPUT NETW, V121, P185, DOI 10.1016/j.comnet.2017.04.026
   Roughgarden T, 2015, APPROXIMATE HEAVY HI
   Sahay R., 2015, SENT 2015 NDSS WORKS
   Salah K, 2013, IEEE SECUR PRIV, V11, P44, DOI 10.1109/MSP.2012.88
   Sanver D., 2017, P IEEE C NETW SOFTW, P1, DOI DOI 10.1109/NETSOFT.2017.8004227
   Sattar D, 2019, P 7 ANN IEEE C COMM
   Scott-Hayward S, 2016, IEEE COMMUN SURV TUT, V18, P623, DOI 10.1109/COMST.2015.2453114
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Sivaraman A, 2016, PROCEEDINGS OF THE 2016 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION (SIGCOMM '16), P15, DOI 10.1145/2934872.2934900
   Sivaraman V., 2017, P S SDN RES, P164, DOI DOI 10.1145/3050220.3063772
   Vizváry M, 2014, LECT NOTES COMPUT SC, V8508, P123, DOI 10.1007/978-3-662-43862-6_15
   Yang T, 2018, PROCEEDINGS OF THE 2018 CONFERENCE OF THE ACM SPECIAL INTEREST GROUP ON DATA COMMUNICATION (SIGCOMM '18), P561, DOI 10.1145/3230543.3230544
   Zhang SL, 2019, IEEE WIREL COMMUN, V26, P111, DOI 10.1109/MWC.2019.1800234
   Zhou DH, 2018, J NETW COMPUT APPL, V116, P9, DOI 10.1016/j.jnca.2018.05.004
   Zhu SY, 2015, I C NETWORK PROTOCOL, P323, DOI 10.1109/ICNP.2015.45
NR 77
TC 15
Z9 15
U1 1
U2 28
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2020
VL 50
IS 7
BP 1228
EP 1257
DI 10.1002/spe.2800
EA FEB 2020
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT6RF
UT WOS:000512444600001
DA 2024-07-18
ER

PT J
AU Freire, DL
   Frantz, RZ
   Roos-Frantz, F
AF Freire, Daniela L.
   Frantz, Rafael Z.
   Roos-Frantz, Fabricia
TI Ranking enterprise application integration platforms from a performance
   perspective: An experience report
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE enterprise application integration; integration framework; integration
   patterns; integration platform; message-based middleware;
   multiple-criteria decision-making; orchestration engine; performance
   evaluation
ID DECISION; DESIGN
AB Enterprises turn to their software applications to support their business processes. Over time, it is common for a company to end up with a wide range of applications, which are usually developed in-house by its information technology department or purchased from third-party specialized software companies. The result is a heterogeneous software ecosystem with applications developed in different technologies and frequently using different data models, which brings challenges when two or more applications have to collaborate to support a business process. Integration platforms are specialized software tools that help design, implement, run, and monitor integration solutions that orchestrate a set of applications. The run-time system is the component of integration platforms responsible for running integration solutions, which makes its performance a critically important issue. In this paper, we report our experience in evaluating and comparing four well-known open-source integration platforms in the context of a research project where performance was a central requirement to choose an integration platform. The evaluation was conducted using a decision-making methodology to build a ranking of candidate platforms by means of subjective and objective criteria. The subjective evaluation takes into account expert preferences and compares integration platforms using the analytic hierarchy process, which has been used in many applications related with decision-making. The objective evaluation is build on top of properties distributed on three dimensions, namely, message processing, hotspot detection, and fairness execution, which compose the research methodology we used. The evaluated platforms were ranked to identify the one with the best performance.
C1 [Freire, Daniela L.; Frantz, Rafael Z.; Roos-Frantz, Fabricia] Unijui Univ, Dept Exact Sci & Engn, Rua Comercio, BR-98700000 Ijui, RS, Brazil.
C3 Universidade Regional do Noroeste do Estado do Rio Grande do Sul -
   UNIJUI
RP Freire, DL (corresponding author), Unijui Univ, Dept Exact Sci & Engn, Rua Comercio, BR-98700000 Ijui, RS, Brazil.
EM dsellaro@unijui.edu.br
RI Frantz, Rafael Z./J-9521-2012; Freire, Daniela Lopes/S-3465-2019;
   Roos-Frantz, Fabricia/Y-6059-2018
OI Frantz, Rafael Z./0000-0003-3740-7560; Freire, Daniela
   Lopes/0000-0002-5363-3608; Roos-Frantz, Fabricia/0000-0001-9514-6560
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior (CAPES)
   [73318345415, 88881.119518/2016-01]; Fundacao de Amparo a Pesquisa do
   Estado do Rio Grande do Sul (FAPERGS) [17/2551-0001206-2]
FX Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior (CAPES),
   Grant/Award Number: 73318345415 and 88881.119518/2016-01; Fundacao de
   Amparo a Pesquisa do Estado do Rio Grande do Sul (FAPERGS), Grant/Award
   Number: 17/2551-0001206-2
CR Ahmad Sheraz, 2016, Computational Ecology and Software, V6, P150
   Alexander C., 1977, PATTERN LANGUAGE TOW
   Anwar N, 2018, FUTURE INTERNET, V10, DOI 10.3390/fi10010005
   Balko S, 2015, 2015 IEEE 19 INT C E
   Botta A, 2016, FUTURE GENER COMP SY, V56, P684, DOI 10.1016/j.future.2015.09.021
   Brahmi Z, 2014, INT C BUS INF SYST I
   Bridgman P.W., 1922, Dimensional analysis
   Chen M, 2014, MOBILE NETW APPL, V19, P171, DOI 10.1007/s11036-013-0489-0
   Corchuelo R, 2008, JORN ING SOFTW BAS D
   Dossot D., 2014, Mule in action
   Ebert N, 2016, MULT WIRTSCH MKWI IL
   Ebert N, 2017, BUS INFORM SYST ENG+, V59, P375, DOI 10.1007/s12599-017-0486-0
   FISHBURN PC, 1967, OPER RES, V15, P537, DOI 10.1287/opre.15.3.537
   Franek J, 2014, PROC ECON FINANC, V12, P164, DOI 10.1016/S2212-5671(14)00332-3
   Frantz RZ, 2016, J SYST SOFTWARE, V111, P89, DOI 10.1016/j.jss.2015.08.044
   Frantz RZ, 2012, J SYST SOFTWARE, V85, P480, DOI 10.1016/j.jss.2011.10.048
   Frantz RZ, 2011, INT J COOP INF SYST, V20, P143, DOI 10.1142/S0218843011002225
   Freire DL, 2019, SOFTWARE PRACT EXPER, V49, P341, DOI 10.1002/spe.2670
   Gleyzer G., 2017, US Patent, Patent No. [9,547,521 B2, 9547521]
   Guttridge K., 2017, Magic quadrant for enterprise integration platform as a service 2017
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Ibsen C., 2010, Camel in action
   Indrasiri K., 2016, BEGINNING W502 ESB, P1
   Ishizaka A, 2011, EXPERT SYST APPL, V38, P14336, DOI 10.1016/j.eswa.2011.04.143
   Khoumbati K, 2006, J MANAGE INFORM SYST, V22, P69, DOI 10.2753/MIS0742-1222220404
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   More VR, 2013, INT J ADV INF SCI TE, V11, P18
   Ritter D, 2017, INFORM SYST, V67, P36, DOI 10.1016/j.is.2017.03.003
   Saaty TL, 2008, RACSAM REV R ACAD A, V102, P251, DOI 10.1007/BF03191825
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Schlauderer S, 2015, WIRTSCH WI OSN GERM
   Sharma S., 2017, Ovum decision matrix highlights the growing importance of ipaas and API platforms in hybrid integration
   SUDARSANAM A, 2004, P 10 INT C PAR DISTR
   Tan S, 2011, ASME INT DES ENG TEC
   Triantaphyllou Evangelos., 2013, Multi-criteria decision making methods: a comparative study
   Vaidya OS, 2006, EUR J OPER RES, V169, P1, DOI 10.1016/j.ejor.2004.04.028
   Varghese B, 2018, FUTURE GENER COMP SY, V79, P849, DOI 10.1016/j.future.2017.09.020
   Zimmermann H, 2014, FUZZY SET THEORY ITS
NR 38
TC 8
Z9 11
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2019
VL 49
IS 5
BP 921
EP 941
DI 10.1002/spe.2679
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HR3KH
UT WOS:000463035200009
DA 2024-07-18
ER

PT J
AU Liu, JH
   Wang, F
   Zeng, LF
   Feng, D
   Zhu, TW
AF Liu, Jiahao
   Wang, Fang
   Zeng, Lingfang
   Feng, Dan
   Zhu, Tingwei
TI SDFS: A software-defined file system for multitenant cloud storage
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud platforms; performance isolation; software-defined file system
ID PERFORMANCE
AB Performance isolation is highly desirable in cloud platforms where the virtual disks of virtual machines are simply large files on the shared and networked storage servers. However, existing isolation techniques cannot deal with the implications of the file system used by the networked storage servers, such that underlying resource usage is unpredictable (eg, the delayed write-back mechanism could postpone writes, and the journaling mechanism could amplify writes). The lack of visibility on underlying resource usage leads to the predicament of being unable to meet isolation goals. In this paper, we present a software-defined file system (SDFS) that exploits the underlying file system to allocate resources at per-image-file granularity and provide tenants with guaranteed throughput. The SDFS comprises two components: control plane and data plane. At the control plane, we provide a set of system calls to document tenant performance requirements into the metadata of image files. At the data plane, we construct a file-based scheduler to manage memory and disk resources according to the tenant performance requirements. The SDFS design does not require a modification to guest operating systems, hypervisors, or file server protocols. Through a prototype implementation, we demonstrate that the SDFS can meet isolation goals and increase resource utilization with negligible overhead.
C1 [Liu, Jiahao; Wang, Fang; Zeng, Lingfang; Feng, Dan; Zhu, Tingwei] Huazhong Univ Sci & Technol, Wuhan Natl Lab Optoelect, Wuhan 430074, Hubei, Peoples R China.
   [Liu, Jiahao; Wang, Fang; Zeng, Lingfang; Feng, Dan; Zhu, Tingwei] Huazhong Univ Sci & Technol, Sch Comp, Wuhan 430074, Hubei, Peoples R China.
C3 Huazhong University of Science & Technology; Huazhong University of
   Science & Technology
RP Wang, F; Zeng, LF (corresponding author), Huazhong Univ Sci & Technol, Wuhan Natl Lab Optoelect, Wuhan 430074, Hubei, Peoples R China.; Wang, F; Zeng, LF (corresponding author), Huazhong Univ Sci & Technol, Sch Comp, Wuhan 430074, Hubei, Peoples R China.
EM wangfang@hust.edu.cn; lfzeng@hust.edu.cn
RI wang, fang/GYD-4295-2022; Wang, Fang/HPC-5174-2023
OI Zeng, Lingfang/0000-0003-3130-3015; , Jiahao/0000-0001-9782-1451
CR Angel S, 2014, P 11 USENIX S OP SYS
   [Anonymous], 2014, P 19 INT C ARCH SUPP
   [Anonymous], 2013, P 24 ACM S OP SYST P
   Carlson Mark., 2014, Storage Networking Industry Assoc, P20
   Carvalho M., 2014, P ACM S CLOUD COMP S
   Chang DW, 2015, ACM T DES AUTOMAT EL, V20, DOI 10.1145/2755560
   Che J., 2010, 5 IEEE AS PAC SERV C
   Expósito RR, 2013, J GRID COMPUT, V11, P613, DOI 10.1007/s10723-013-9250-y
   Gopalan K, 2017, P 2017 USENIX ANN TE
   Gracia-Tinedo R, 2017, P 15 USENIX C FIL ST
   Gulati A, 2009, 7 USENIX C FIL STOR
   Gulati Ajay, 2012, 2012 USENIX ANN TECH
   Gupta D., 2006, P ACM IFIP USENIX 20, P342
   Huang, 2017, P 15 USENIX C FIL ST
   Huang TC, 2012, SOFTWARE PRACT EXPER, V42, P303, DOI 10.1002/spe.1069
   Jararweh Y, 2016, FUTURE GENER COMP SY, V58, P56, DOI 10.1016/j.future.2015.10.015
   Kang J.-U, 2014, P 6 USENIX WORKSH HO
   Karlsson M., 2005, ACM T STORAGE, V1, P457, DOI DOI 10.1145/1111609.1111612
   Kim B. S., 2018, PROC HOTSTORAGE, P16
   Kim Jaeho, 2015, P 13 USENIX C FIL ST
   Kvalnes Å, 2010, SOFTWARE PRACT EXPER, V40, P1035, DOI 10.1002/spe.990
   Lama P, 2018, 2018 IEEE INT PAR DI
   Leverich J., 2014, EUROSYS 14
   Li N, 2016, PROCEEDINGS OF THE ELEVENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS, (EUROSYS 2016), DOI 10.1145/2901318.2901330
   Liu J, 2016, 2016 IEEE INT C CLUS
   Liu J, 2016, 2016 IEEE INT C BIG
   Ma Jiuyue, 2015, P 20 INT C ARCH SUPP
   Mace Jonathan, 2015, P 12 USENIX S NETW S
   Mathur A, 2007, P LINUX S, V01
   McDougall R., Filebench
   Merchant Arif, 2010, P 9 USENIX C OP SYST
   Mesnier M., 2011, P 23 ACM S OP SYST P
   Narasayya Vivek, 2013, Sqlvm: Performance isolation in multi-tenant relational database-as-a-service
   Shue David, 2012, 10 USENIX S OP SYST
   Stefanovici I, 2016, P 14 USENIX C FIL ST
   Stefanovici I., 2015, P 6 ACM S CLOUD COMP
   Tanenbaum A.S., 2002, COMPUT NETW, VFourth
   Thereska E, 2011, P 6 EUR C COMP SYST
   Wachs S, 2007, P 5 USENIX C FIL STO
   Wang Andrew., 2012, P 3 ACM S CLOUD COMP, p14:1
   Wu S, 2016, CONCURR COMP-PRACT E, V28, P386, DOI 10.1002/cpe.3496
   Yang S., 2015, P 25 S OP SYST PRINC
   Zhang Y, 2018, IEEE T COMPUT, V67, P457, DOI 10.1109/TC.2017.2773511
   Zhu T., 2014, P ACM S CLOUD COMP S
NR 44
TC 3
Z9 3
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2019
VL 49
IS 3
BP 361
EP 379
DI 10.1002/spe.2663
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0HU
UT WOS:000459868900002
DA 2024-07-18
ER

PT J
AU Moss, A
   Schluntz, R
   Buhr, PA
AF Moss, Aaron
   Schluntz, Robert
   Buhr, Peter A.
TI C∀: Adding modern programming language features to C
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE C; Cforall; generic types; polymorphic functions; tuple types; variadic
   types
AB The C programming language is a foundational technology for modern computing with millions of lines of code implementing everything from hobby projects to commercial operating systems. This installation base and the programmers producing it represent a massive software engineering investment spanning decades and likely to continue for decades more. Nevertheless, C, which was first standardized almost 30 years ago, lacks many features that make programming in more modern languages safer and more productive. The goal of the C for all project (pronounced "C for all") is to create an extension of C that provides modern safety and productivity features while still ensuring strong backward compatibility with C and its programmers. Prior projects have attempted similar goals but failed to honor the C programming style; for instance, adding object-oriented or functional programming with garbage collection is a nonstarter for many C developers. Specifically, C for all is designed to have an orthogonal feature set based closely on the C programming paradigm, so that C for all features can be added incrementally to existing C code bases, and C programmers can learn C for all extensions on an as-needed basis, preserving investment in existing code and programmers. This paper presents a quick tour of C for all features, showing how their design avoids shortcomings of similar features in C and other C-like languages. Experimental results are presented to validate several of the new features.
C1 [Moss, Aaron; Schluntz, Robert; Buhr, Peter A.] Univ Waterloo, Cheriton Sch Comp Sci, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Buhr, PA (corresponding author), Univ Waterloo, Cheriton Sch Comp Sci, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
EM pabuhr@uwaterloo.ca
OI Moss, Aaron/0000-0003-4569-976X
FU Natural Sciences and Engineering Research Council of Canada
FX Natural Sciences and Engineering Research Council of Canada
CR American National Standards Institute, 1990, AM NATL STAND PROGR
   [Anonymous], P 29 ACM SIGPLAN SIG
   [Anonymous], 2014, GOBJECT REFERENCE MA
   [Anonymous], 2015, RUST PROGRAMMING LAN
   [Anonymous], 2014, EXTENSIONS C LANGUAG
   [Anonymous], 2015, OBJECTIVE C
   [Anonymous], 2015, XCODE 7 REL NOT
   [Anonymous], 2016, SCAL LANG SEC VERS 2
   [Anonymous], 1986, Programming with Sets; an Introduction to SETL
   [Anonymous], 2017, VALA REFERENCE MANUA
   BAKER TP, 1982, ACM T PROGR LANG SYS, V4, P601, DOI 10.1145/69622.69623
   Bilson RC, 2003, THESIS
   Bright W, 2016, PROGRAMMING LANGUAGE
   BUHR PA, 1992, SOFTWARE PRACT EXPER, V22, P735, DOI 10.1002/spe.4380220904
   Buhr PA, 2000, IEEE T SOFTWARE ENG, V26, P820, DOI 10.1109/32.877844
   BUHR PA, 1985, SIGPLAN NOTICES, V20, P14, DOI 10.1145/988291.988293
   BUHR PA, 1994, SOFTWARE PRACT EXPER, V24, P835, DOI 10.1002/spe.4380240905
   Buhr PA, 2016, UNDERSTANDING CONTRO
   Cormack G. V., 1981, SIGPLAN Notices, V16, P48, DOI 10.1145/954269.954275
   Cormack GV, 1990, P ACM SIGPLAN 1990 C
   Cormack GV, 1987, P 20 HAW INT C SYST
   Delisle T, 2018, THESIS
   DeLozier Christian, 2013, P 2013 ACM SIGPLAN I
   Ditchfield GJ, 1992, THESIS
   DUFF T, 1983, DUFFS DEVICE
   Duggan D, 1996, ACTA INFORM, V33, P21, DOI 10.1007/s002360050035
   GNU Multiple Precision Arithmetic Library, 2016, GNU
   Gosling J., 2015, JAVA LANGUAGE SPECIF
   Griesemer Robert., 2009, The Go programming language
   Grossman D, 2006, ACM T PROGR LANG SYS, V28, P429, DOI 10.1145/1133651.1133653
   Hutchison D, 1983, ANSIMILSTD1815A1983
   International Organization for Standardization, 2012, 98992011 ISOIEC
   International Organization for Standardization, 2015, 192172015 ISOIEC TS
   JENSEN K, 1991, PASCAL USER MANUAL R
   Lei<ss>a R, 2014, P 2014 WORKSH PROGR
   Marlow Simon, 2010, Haskell 2010 language report
   MILNER R, 1978, J COMPUT SYST SCI, V17, P348, DOI 10.1016/0022-0000(78)90014-4
   Milner R., 1990, The Definition of Standard ML
   Moss A, 2018, C STACK EVALUATION P
   Nickolls John, 2008, ACM Queue, V6, DOI 10.1145/1365490.1365500
   Pharr M, 2012, 2012 INN PAR COMP IN
   Schluntz R, 2017, THESIS
   Shaw M, 1981, ALPHARD FORM CONTENT
   Smith G, 1998, SCI COMPUT PROGRAM, V32, P49, DOI 10.1016/S0167-6423(97)00030-0
   Sutter H, 2015, STRUCTURED BINDINGS
   Taylor IL, 2010, CONST
   [No title captured]
NR 47
TC 2
Z9 2
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2018
VL 48
IS 12
BP 2111
EP 2146
DI 10.1002/spe.2624
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ9MW
UT WOS:000449824700001
DA 2024-07-18
ER

PT J
AU Li, KQ
AF Li, Keqin
TI Optimal load distribution for multiple classes of applications on
   heterogeneous servers with variable speeds
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE average response time; heterogeneous server with variable speed;
   multiple classes of applications; optimal load distribution; optimal
   server speed setting; power consumption; task-type-dependent server
   speed management
ID ALGORITHM
AB Performance and power are 2 significant issues in cloud computing. It is a critical issue on how to provide the best quality of service by consuming certain available power resource. For a given application environment and a given group of servers, optimal load distribution and optimal server speed setting can be an effective way to deal with the power-performance tradeoff. The technique of variable and task-type-dependent server speed management can be explored to optimize the server performance and to minimize the power consumption of a server with mixed applications. In this paper, we consider the problem of optimal load distribution for multiple classes of applications on heterogeneous servers with variable speeds. Given several classes of applications characterized by their arrival rates and expected execution requirements, several heterogeneous servers characterized by their power consumption parameters, and certain power supply, our problem is formulated as a multivariable optimization problem, ie, finding an optimal load distribution and an optimal server speed setting, such that the average task response time is minimized. To study the problem analytically, each server is treated as an M/G/1 queueing system with mixed classes of tasks such that both the average response time and the average power consumption can be calculated analytically. We define a power constrained performance optimization problem and develop a numerical algorithm to solve our optimization problem by solving a system of nonlinear equations. We also demonstrate numerical examples to show the effectiveness of our model and method. To the best of our knowledge, such analytical study of optimal load distribution and optimal server speed setting for multiple classes of applications on heterogeneous servers with variable speeds has not been available in the existing literature.
C1 [Li, Keqin] SUNY Coll New Paltz, Dept Comp Sci, New York, NY 12561 USA.
C3 State University of New York (SUNY) System; SUNY New Paltz
RP Li, KQ (corresponding author), SUNY Coll New Paltz, Dept Comp Sci, New York, NY 12561 USA.
EM lik@newpaltz.edu
CR Al Nuaimi K, 2012, INT S NETW CLOUD COM
   Al Sallami NM, 2013, P WORLD C ENG LOND U, VII
   Anjali J, 2015, NAT C ADV ENG TECHN
   [Anonymous], IEEE T CLOUD COMPUT
   Babu LDD, 2013, APPL SOFT COMPUT, V13, P2292, DOI 10.1016/j.asoc.2013.01.025
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Burden R.L., 1981, NUMERICAL ANAL, V3rd
   Cao JW, 2014, IEEE T COMPUT, V63, P45, DOI 10.1109/TC.2013.122
   Dasgupta K, 2013, PROC TECH, V10, P340, DOI 10.1016/j.protcy.2013.12.369
   Gandhi Anshul, 2013, Dynamic server provisioning for data center power management
   Ganesh L, 2013, IEEE T COMPUT, V62, P1086, DOI 10.1109/TC.2013.32
   Gasior J, 2012, 3 INT C CLOUD COMP G
   Ghafari SM, 2013, 6 INT C CONT COMP NO
   Gopinath PPG, 2015, PROCEDIA COMPUT SCI, V50, P427, DOI 10.1016/j.procs.2015.04.009
   Grover J, 2013, 2013 INTERNATIONAL CONFERENCE ON HUMAN COMPUTER INTERACTIONS (ICHCI)
   Hamilton J., Overall data center costs
   Himanshi S., 2015, INT J ADV RES COMPUT, V5, P434
   Huang J, 2017, IEEE T COMPUT, V66, P1518, DOI 10.1109/TC.2017.2693186
   Kansal N.J., 2012, IJCSI INT J COMPUTER, V9, P238
   Kapoor S, 2015, ADV COMPUT SCI INF T, V2, P87
   Katyal M., 2013, INT J DISTRIBUTED CL, V1, P5
   Kaur R., 2014, Proc. of Int. Conf. on Recent Trends in Information, Telecommunication and Computing, P374
   Khiyaita A, 2012, NAT DAYS NETW SEC SY
   Kleinrock L., 1975, Queueing Systems-Volume 1: Theory, V1
   Leverich JB, 2014, THESIS
   Li K, OPTIMAL SPEED SETTIN
   Li KQ, 2017, IEEE T SUST COMPUT, V2, P167, DOI 10.1109/TSUSC.2017.2706425
   Li KQ, 2016, IEEE T CLOUD COMPUT, V4, P122, DOI 10.1109/TCC.2015.2440238
   Li KQ, 2013, J GRID COMPUT, V11, P27, DOI 10.1007/s10723-012-9239-y
   Malik SUR, 2017, IEEE SYST J, V11, P163, DOI 10.1109/JSYST.2015.2493565
   Pakbaznia E, 2009, 2009 ACM IEEE INT S
   Paul D, 2016, J NETW COMPUT APPL, V59, P185, DOI 10.1016/j.jnca.2015.08.012
   Rahman M, 2014, IEEE 8 INT S SERV OR
   Sahu Y, 2013, 5 INT C COMP INT COM
   Shameem P.M., 2013, INT J ENG TECHNOLOGY, V4, P3801
   Singh A., 2014, INT J COMPUT APPL, V6, P66
   Singh A, 2015, PROCEDIA COMPUT SCI, V45, P832, DOI 10.1016/j.procs.2015.03.168
   Srinivasan RK, 2012, INT S INT INF CHENN
   Tian Y, 2014, CLUSTER COMPUT, V17, P943, DOI 10.1007/s10586-013-0326-z
   Tong Z, 2014, J PARALLEL DISTR COM, V74, P2662, DOI 10.1016/j.jpdc.2014.03.007
   Tuncer O, 2014, IEEE 32 INT C COMP D
   Xiao Z, 2017, APPL SOFT COMPUT, V52, P376, DOI 10.1016/j.asoc.2016.10.028
   Xiao Z, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3939
   Yang B, 2016, IEEE T PARALL DISTR, V27, P3646, DOI 10.1109/TPDS.2016.2537809
   Zapater M, 2015, IEEE T PARALL DISTR, V26, P2764, DOI 10.1109/TPDS.2014.2361519
NR 45
TC 7
Z9 7
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2018
VL 48
IS 10
SI SI
BP 1805
EP 1819
DI 10.1002/spe.2584
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GS4EA
UT WOS:000443587100005
DA 2024-07-18
ER

PT J
AU Abadi, RMB
   Rahmani, AM
   Alizadeh, SH
AF Abadi, Reza Mohamadi Bahram
   Rahmani, Amir Masoud
   Alizadeh, Sasan H.
TI Server consolidation techniques in virtualized data centers of cloud
   environments: A systematic literature review
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Review
DE cloud computing; data center; server consolidation; virtual machine;
   virtualization
ID ENERGY EFFICIENCY; RESOURCE-MANAGEMENT; MACHINE PLACEMENT; VM
   CONSOLIDATION; DYNAMIC CONSOLIDATION; ADAPTIVE HEURISTICS; MIGRATION;
   ALGORITHM; FRAMEWORK; POWER
AB At the virtualized data centers, services are presented by active virtual machines (VMs) in physical machines (PMs). The manner in which VMs are mapped to PMs affects the performance of data centers and the energy efficiency. By employing the server consolidation technique, it is possible to configure the VMs on a smaller number of PMs, while the quality of service is guaranteed. In this way, the rate of active PM utilization increases and fewer active PMs would be required. Moreover, the server consolidation technique reacts to the management of underloaded and overloaded PMs by using the VM migration technology. Considering the capabilities of the server consolidation technique and its role in developing the cloud computing infrastructure, many researches have been conducted in this context. Still, a comprehensive and systematic study has not yet been performed on various consolidation techniques to check the capabilities, advantages, and disadvantages of current approaches. In this paper, a systematic study is conducted on a number of credible researches related to server consolidation techniques. In order to do so and by studying the selected works, proposed solutions are categorized based on the type of decision for running the consolidation algorithm in 4 groups of static method, dynamic method, prediction-based dynamic method, and hybrid method. Thereafter, the advantages and disadvantages of suggested approaches are studied and compared in each research by specifying the technique and idea applied therein. In addition, by categorizing aims of researches and specifying assessment parameters, optimization approaches and type of architecture, a possibility has been provided to get familiarized with the views of the researchers.
C1 [Abadi, Reza Mohamadi Bahram; Alizadeh, Sasan H.] Islamic Azad Univ, Qazvin Branch, Fac Comp & Informat Technol Engn, Qazvin, Iran.
   [Rahmani, Amir Masoud] Islamic Azad Univ, Sci & Res Branch, Comp Engn Dept, Tehran, Iran.
   [Rahmani, Amir Masoud] Univ Human Dev, Comp Sci, Sulaimanyah, Iraq.
C3 Islamic Azad University; Islamic Azad University
RP Rahmani, AM (corresponding author), Islamic Azad Univ, Sci & Res Branch, Comp Engn Dept, Tehran, Iran.; Rahmani, AM (corresponding author), Univ Human Dev, Comp Sci, Sulaimanyah, Iraq.
EM rahmani@srbiau.ac.ir
RI Alizadeh, Sasan/GPW-8328-2022; Rahmani, Amir Masoud/K-2702-2013
OI Alizadeh, Sasan/0000-0003-3618-8845; Rahmani, Amir
   Masoud/0000-0001-8641-6119
CR Abdelmaboud A, 2015, J SYST SOFTWARE, V101, P159, DOI 10.1016/j.jss.2014.12.015
   Abdelsamea A, 2017, EGYPT INFORM J, V18, P161, DOI 10.1016/j.eij.2016.12.002
   Al-Qawasmeh AM, 2012, 2012 IEEE 26 INT PAR
   Arianyan E, 2016, J SUPERCOMPUT, V72, P688, DOI 10.1007/s11227-015-1603-9
   Arianyan E, 2015, COMPUT ELECTR ENG, V47, P222, DOI 10.1016/j.compeleceng.2015.05.006
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Asyabi E, 2016, CLUSTER COMPUT, V19, P567, DOI 10.1007/s10586-016-0541-5
   Aznoli F, 2017, J NETW COMPUT APPL, V77, P73, DOI 10.1016/j.jnca.2016.10.009
   Banerjee A, 2011, SUSTAIN COMPUT-INFOR, V1, P134, DOI 10.1016/j.suscom.2011.02.003
   Barroso LA, 2007, COMPUTER, V40, P33, DOI 10.1109/MC.2007.443
   Beloglazov A, 2013, IEEE T PARALL DISTR, V24, P1366, DOI 10.1109/TPDS.2012.240
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Bila N, 2015, ACM T COMPUT SYST, V33, DOI 10.1145/2699683
   Biran O, 2012, 2012 12 IEEE ACM INT
   Bui DM, 2017, J PARALLEL DISTR COM, V102, P103, DOI 10.1016/j.jpdc.2016.11.011
   Buyya R., 2010, arXiv preprint arXiv: 1006. 0308
   Calheiros RN, 2011, 2011 INT C PAR PROC
   Cao JW, 2013, IEEE T PARALL DISTR, V24, P1087, DOI 10.1109/TPDS.2012.203
   Cao Z, 2012, 2012 13 INT C PAR DI
   Cao ZB, 2014, J SUPERCOMPUT, V69, P429, DOI 10.1007/s11227-014-1172-3
   Corradi A, 2014, FUTURE GENER COMP SY, V32, P118, DOI 10.1016/j.future.2012.05.012
   Costa LHM, 2012, GLOB INFORM INFRAS, P1
   da Silva RAC, 2016, J GRID COMPUT, V14, P75, DOI 10.1007/s10723-015-9343-x
   Deng W, 2012, INT CONF CLOUD COMP
   Deng W, 2014, INT J COMMUN SYST, V27, P623, DOI 10.1002/dac.2687
   Diao Y, 2006, 26 IEEE INT C DISTR
   Ebrahimi K, 2014, RENEW SUST ENERG REV, V31, P622, DOI 10.1016/j.rser.2013.12.007
   Esfandiarpoor S, 2015, COMPUT ELECTR ENG, V42, P74, DOI 10.1016/j.compeleceng.2014.09.005
   Eyraud-Dubois L, 2013, 2013 IEEE 27 INT S P
   Fang WW, 2013, COMPUT NETW, V57, P179, DOI 10.1016/j.comnet.2012.09.008
   Fard S. Y. Z., 2017, J SUPERCOMPUT, P1, DOI DOI 10.1007/s11227-016-1922-5
   Ferdaus MH, 2014, 2014 EUR C PAR PROC
   Ferreto T, 2011, 2011 EUR C PAR PROC
   Ferreto TC, 2011, FUTURE GENER COMP SY, V27, P1027, DOI 10.1016/j.future.2011.04.016
   Fu X, 2015, FRONT COMPUT SCI-CHI, V9, P322, DOI 10.1007/s11704-015-4286-8
   Gaggero M, 2016, IEEE T CONTR SYST T, V24, P461, DOI 10.1109/TCST.2015.2457874
   Gandhi A, 2011, 2011 INT GREEN COMP
   Gao YQ, 2013, J COMPUT SYST SCI, V79, P1230, DOI 10.1016/j.jcss.2013.02.004
   Garg SK, 2014, J NETW COMPUT APPL, V45, P108, DOI 10.1016/j.jnca.2014.07.030
   Genaud S, 2011, 2011 IEEE INT C CLOU
   Gong Z., 2010, 2010 INT C NETW SERV
   Goudarzi H, 2012, 2012 IEEE 5 INT C CL
   Guenter B, 2011, IEEE INFOCOM SER, P1332, DOI 10.1109/INFCOM.2011.5934917
   Gupta D., 2006, P ACM IFIP USENIX 20, P342
   Hallawi H, 2017, FUTURE GENER COMP SY, V69, P1, DOI 10.1016/j.future.2016.10.025
   Hameed A, 2016, COMPUTING, V98, P751, DOI 10.1007/s00607-014-0407-8
   Han GJ, 2018, J NETW COMPUT APPL, V103, P205, DOI 10.1016/j.jnca.2017.07.011
   Hankendi C, 2017, ACM T DES AUTOMAT EL, V22, DOI 10.1145/2994145
   Heo J, 2009, 2009 IFIP IEEE INT S
   Hieu NT, 2015, 2015 IEEE 8 INT C CL
   Hosseinimotlagh S, 2014, 2014 28 INT C ADV IN
   Huang Z, 2016, IEEE T CLOUD COMPUT, V4, P415, DOI 10.1109/TCC.2014.2369423
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Jiang JH, 2017, FUTURE GENER COMP SY, V74, P132, DOI 10.1016/j.future.2016.05.013
   Jula A, 2014, EXPERT SYST APPL, V41, P3809, DOI 10.1016/j.eswa.2013.12.017
   Jung G, 2008, 2008 INT C AUT COMP
   Katsaros G, 2013, FUTURE GENER COMP SY, V29, P2077, DOI 10.1016/j.future.2012.12.006
   Khani H, 2015, COMPUT ELECTR ENG, V47, P173, DOI 10.1016/j.compeleceng.2015.08.001
   Khazaei H, 2010, 2010 INT C HET NETW
   Khazaei H, 2013, IEEE T PARALL DISTR, V24, P2138, DOI 10.1109/TPDS.2012.280
   Khazaei H, 2012, IEEE T PARALL DISTR, V23, P936, DOI 10.1109/TPDS.2011.199
   Kim C, 2015, J SUPERCOMPUT, V71, P4623, DOI 10.1007/s11227-015-1563-0
   Kim SG, 2013, J SUPERCOMPUT, V66, P1489, DOI 10.1007/s11227-013-0939-2
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Koch F, 2016, FUTURE GENER COMP SY, V55, P473, DOI 10.1016/j.future.2015.03.013
   Kong XZ, 2011, J NETW COMPUT APPL, V34, P1068, DOI 10.1016/j.jnca.2010.06.001
   Kuehn PJ, 2015, AD HOC NETW, V25, P497, DOI 10.1016/j.adhoc.2014.11.013
   Kumar MRV, 2016, J COMPUT SYST SCI, V82, P191, DOI 10.1016/j.jcss.2015.07.005
   Kusic D, 2009, CLUSTER COMPUT, V12, P1, DOI 10.1007/s10586-008-0070-y
   Le D, 2011, IEEE T PARALL DISTR, V22, P1705, DOI 10.1109/TPDS.2011.37
   Li HJ, 2016, COMPUTING, V98, P303, DOI 10.1007/s00607-015-0467-4
   Li MF, 2016, J NETW COMPUT APPL, V59, P158, DOI 10.1016/j.jnca.2015.07.008
   Li X, 2016, INT J PARALLEL PROG, V44, P130, DOI 10.1007/s10766-014-0333-6
   Li Z, 2013, J SYST SOFTWARE, V86, P2371, DOI 10.1016/j.jss.2013.04.021
   Li ZH, 2017, FUTURE GENER COMP SY, V69, P75, DOI 10.1016/j.future.2016.12.008
   Liao XF, 2010, CLUSTER COMPUT, V13, P113, DOI 10.1007/s10586-009-0110-2
   Lin CC, 2011, 2011 IEEE INT C CLOU
   Liu X., 2006, 10 IEEE IFIP NETW OP
   Lovász G, 2013, CLUSTER COMPUT, V16, P481, DOI 10.1007/s10586-012-0214-y
   Ma F, 2012, COMPUT ENG, V38
   Mann ZA, 2015, FUTURE GENER COMP SY, V51, P1, DOI 10.1016/j.future.2015.04.004
   Manvi SS, 2014, J NETW COMPUT APPL, V41, P424, DOI 10.1016/j.jnca.2013.10.004
   Mastroianni C, 2011, 2011 EUR C PAR PROC
   Mastroianni C, 2013, IEEE T CLOUD COMPUT, V1, P215, DOI 10.1109/TCC.2013.17
   Meng XQ, 2010, IEEE INFOCOM SER
   Mesbahi MR, 2016, 2016 2 INT C WEB RES
   Milani AS, 2016, J NETW COMPUT APPL, V71, P86, DOI 10.1016/j.jnca.2016.06.003
   Mishra M, 2012, IEEE COMMUN MAG, V50, P34, DOI 10.1109/MCOM.2012.6295709
   Mukherjee T, 2009, COMPUT NETW, V53, P2888, DOI 10.1016/j.comnet.2009.06.008
   Pakbaznia E, 2010, 2010 P C DES AUT TES
   Piao JT, 2010, 2010 9 INT C GRID CO
   Prevost JJ, 2013, 2013 8 INT C SYST SY
   Procaccianti G, 2015, SUSTAIN COMPUT-INFOR, V7, P2, DOI 10.1016/j.suscom.2014.11.004
   Qiu XJ, 2015, IEEE T PARALL DISTR, V26, P3330, DOI 10.1109/TPDS.2014.2371831
   Quarati A, 2013, SIMUL MODEL PRACT TH, V39, P121, DOI 10.1016/j.simpat.2013.01.004
   Qureshi MK, 2006, 39 ANN IEEE ACM INT
   Rajabzadeh M, 2017, J SUPERCOMPUT, V73, P2001, DOI 10.1007/s11227-016-1900-y
   Rao KS, 2015, FUTURE GENER COMP SY, V50, P87, DOI 10.1016/j.future.2014.09.009
   Sansottera A, 2012, 2012 INT C HIGH PERF
   Schwarzkopf M., 2013, EUROSYS
   Sedaghat M, 2016, FUTURE GENER COMP SY, V56, P51, DOI 10.1016/j.future.2015.09.023
   Setzer T, 2013, EUR J OPER RES, V227, P62, DOI 10.1016/j.ejor.2012.12.005
   Shameli-Sendi A, 2015, J NETW COMPUT APPL, V58, P165, DOI 10.1016/j.jnca.2015.09.005
   Siadat S, 2017, J SUPERCOMPUT, V73, P2682, DOI 10.1007/s11227-016-1950-1
   Sindelar M, 2011, P 23 ANN ACM S PAR A
   Speitkamp B, 2010, IEEE T SERV COMPUT, V3, P266, DOI 10.1109/TSC.2010.25
   Srikantaiah S, 2008, USENIX HOTPOWER 08 W, V12, P1
   Subramanian Chandrasekar, 2010, 2010 INT C HIGH PERF, P1
   Sugerman J, 2001, P GEN TRACK 2001 USE
   Tang Z, 2014, J SUPERCOMPUT, V70, P1279, DOI 10.1007/s11227-014-1227-5
   Tchana A, 2016, FUTURE GENER COMP SY, V58, P1, DOI 10.1016/j.future.2015.11.027
   Teng F, 2017, J SUPERCOMPUT, V73, P782, DOI 10.1007/s11227-016-1797-5
   Varasteh A, 2017, IEEE SYST J, V11, P772, DOI 10.1109/JSYST.2015.2458273
   Wang WY, 2017, IEEE T SYST MAN CY-S, V47, P205, DOI 10.1109/TSMC.2016.2523910
   Wang W, 2015, IEEE T PARALL DISTR, V26, P2822, DOI 10.1109/TPDS.2014.2362139
   Wang XD, 2016, IEEE T PARALL DISTR, V27, P992, DOI 10.1109/TPDS.2015.2421492
   Wang YF, 2014, SUSTAIN COMPUT-INFOR, V4, P52, DOI 10.1016/j.suscom.2014.02.001
   Wei B, 2011, 2011 INT C COMP SCI
   Wu Y., 2012, 2012 IEEE INT C SYST
   Xiao Z, 2013, IEEE T PARALL DISTR, V24, P1107, DOI 10.1109/TPDS.2012.283
   Xu G., 2015, APPL MATH INFORM SCI, V9, P873
   Yang JS, 2012, INT CONF CLOUD COMP
   Ye KJ, 2015, IEEE T PARALL DISTR, V26, P878, DOI 10.1109/TPDS.2014.2313335
   Yu CH, 2012, INT CONF INFRA MILLI
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   ZHANG J, 2006, ACM T STORAGE, V2, P283, DOI DOI 10.1145/1168910.1168913
   Zhang JT, 2016, J NETW COMPUT APPL, V64, P23, DOI 10.1016/j.jnca.2015.12.018
   Zhang S, 2016, IEEE T PARALL DISTR, V27, P964, DOI 10.1109/TPDS.2015.2425403
   Zhang WZ, 2017, IEEE T CLOUD COMPUT, V5, P2, DOI 10.1109/TCC.2014.2378794
   Zhang Y, 2016, 2016 INT C NETW SYST
   Zhao Weiming., 2009, SIGOPS Operating Systems Review, V43, P37, DOI DOI 10.1145/1618525.1618530
   Zhou Z, 2015, J CENT SOUTH UNIV, V22, P974, DOI 10.1007/s11771-015-2608-5
   Zhu F., 2012, P 2012 IEEE INT C CO
   Zuo LY, 2017, MOBILE NETW APPL, V22, P4, DOI 10.1007/s11036-016-0679-7
NR 135
TC 17
Z9 17
U1 0
U2 29
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2018
VL 48
IS 9
BP 1688
EP 1726
DI 10.1002/spe.2582
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GP5RZ
UT WOS:000440932300008
DA 2024-07-18
ER

PT J
AU Martin, A
   Marangozova-Martin, V
AF Martin, Alexis
   Marangozova-Martin, Vania
TI Automatic benchmark profiling through advanced workflow-based trace
   analysis
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE benchmarking; reproducibility; trace analysis; workflow
AB Benchmarking has proven to be crucial for the investigation of the behavior and performances of a system. However, the choice of relevant benchmarks still remains a challenge. To help the process of comparing and choosing among benchmarks, we propose a solution for automatic benchmark profiling. It computes unified benchmark profiles reflecting benchmarks' duration, function repartition, stability, CPU efficiency, parallelization, and memory usage. Our approach identifies the needed system information for profile computation and collects it from execution traces captured without benchmark code modifications. It structures profile computation as a reproducible workflow for automatic trace analysis, which efficiently manages important trace volumes. In this paper, we report on the design and the implementation of our approach, which involves the collection and analysis of about 500 GB of trace data coming from 2 different platforms (an x86 desktop machine and the Juno SoC board). The computed benchmark profiles provide valuable insights about the benchmarks' behavior and help compare different benchmarks on the same platform as well as the behavior of the same benchmark on different platforms.
C1 [Martin, Alexis; Marangozova-Martin, Vania] CNRS, LIG, F-38000 Grenoble, France.
   [Martin, Alexis; Marangozova-Martin, Vania] Univ Grenoble Alpes, LIG, F-38000 Grenoble, France.
   [Martin, Alexis] INRIA, Rocquencourt, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble; Universite Grenoble Alpes
   (UGA); Centre National de la Recherche Scientifique (CNRS); Inria
RP Marangozova-Martin, V (corresponding author), LIG, ERODS Team, Batiment IMAG,CS 40700, F-38058 Grenoble 9, France.
EM Vania.Marangozova-Martin@imag.fr
FU SoC-Trace FUI project; French Ministry of Industry
FX SoC-Trace FUI project; French Ministry of Industry
CR Almeida J.B., 2011, Rigorous Software Development, P15, DOI DOI 10.1007/978-0-85729-018-2_2
   [Anonymous], 2000, MEASURING COMPUTER P
   [Anonymous], 2017, THESIS
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], C SYST SOFTW SOC SIL
   [Anonymous], USERMANUAL
   ApacheBench, AB AP HTTP SERV BENC
   Callahan SP, 2006, 2006 ACM SIGMOD INT
   Chen H, 2002, P 11 USENIX SEC S BE
   Chen KY, 2013, IEEE INT CONF SERV, P174, DOI 10.1109/SOCA.2013.28
   Cohen-Boulakia S, 2011, SIGMOD REC, V40, P6, DOI 10.1145/2034863.2034865
   Deelman E, 2015, FUTURE GENER COMP SY, V46, P17, DOI 10.1016/j.future.2014.10.008
   DESNOYERS M., 2009, LOW IMPACT OPERATING
   Dongarra J, 2003, ENCY COMPUTER SCI, P137
   EfficiOS, CTF COMM TRAC FORM
   Futuremark, FUT BENCHM PERF TEST
   Giraldeau F., 2011, LINUX S 2011
   HP, THE HTTPERF TOOL
   Huppler K, 2009, FRT BUILDING GOOD BE, P18, DOI [10. 1007/978-3-642-10424-4_3, DOI 10.1007/978-3-642-10424-4_3]
   Intel, INT MPI BENCHM 4 0 U
   Janjusic T, 2015, PROCEDIA COMPUT SCI, V51, P1363, DOI 10.1016/j.procs.2015.05.324
   Joshi A, 2006, IEEE T COMPUT, V55, P769, DOI 10.1109/TC.2006.85
   Kim J, 2004, 14 INT C AUT PLANN S
   Kistowski V., 2015, P 6 ACM SPEC INT C P
   Knupfer A, 2011, OPEN TRACE FORMAT SP
   Lachaize R, 2012, 2012 USENIX ANN TECH
   Marangozova-Martin V, 2015, THESIS
   Martin A, SWAT SYSTEME WORKFLO
   Panda DK, MVAPICH MPI INFINIBA
   Qin J., 2012, Scientific Workflows: Programming, Optimization, and Synthesis with ASKALON and AWDL
   Seward J., 2008, Valgrind 3.3-Advanced debugging and profiling for GNU/Linux applications
   Sharma SD, 2016, J COMPUT SCI TECH-CH, V31, P1161, DOI 10.1007/s11390-016-1690-y
   STLinux, STLINUX
   STMicroelectronics, STLINUX TRAC VIEW TR
   STMicroelectronics, STWORKBENCH
   Vieira M., 2012, Resilience Assessment and Evaluation of Computing Systems, P283, DOI 10.1007/978-3-642-29032-9_14
   Wang A.J. A., 2005, COMPONENT ORIENTED P
NR 37
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2018
VL 48
IS 6
BP 1195
EP 1217
DI 10.1002/spe.2570
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF5UQ
UT WOS:000432033700002
OA Green Published
DA 2024-07-18
ER

PT J
AU Malekhosseini, R
   Hosseinzadeh, M
   Navi, K
AF Malekhosseini, Razieh
   Hosseinzadeh, Mehdi
   Navi, Keyvan
TI Evaluation of users' privacy concerns by checking of their WhatsApp
   status
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE privacy; privacy settings; status; social networks; WhatsApp instant
   messenger
ID INFORMATION
AB WhatsApp Messenger is a popular instant messenger among Iranian users. The WhatsApp status feature provides the possibility of posting desired content without restrictions in terms of type with the capability of being managed by users. Status can be considered as a potential place to express users' feelings, opinions, and thoughts. However, special attention should be paid to the privacy of users and the information published in this manner because access to the content of a user's status by unauthorized friends and interpretations of the user's status content may violate his/her privacy. This study investigates the privacy issues associated with information shared through status. The data of this study were gathered via access to the status content of 4000 Iranian users and via telephone interviews conducted with 350 of them. In this study, a combination of quantitative and qualitative methods has been used to analyze the data. This study focuses on the extraction of patterns in users' status content, determination of their polarity, and examination of the factors affecting users' privacy concerns. During the research, 10 general themes were extracted from users' content. The results showed that user privacy concerns influenced the type of theme selected. In addition, the theme selected under different circumstances may include a type of feeling that, in this study, is called polarity. Polarity is affected by the users' privacy concerns. Moreover, the demographic characteristics of users (age and gender) have a significant relationship with the type of theme used and their privacy concerns.
C1 [Malekhosseini, Razieh] Islamic Azad Univ, Sci & Res Branch, Dept Comp Engn, Tehran, Iran.
   [Hosseinzadeh, Mehdi] Iran Univ Med Sci, Tehran, Iran.
   [Hosseinzadeh, Mehdi] Univ Human Dev, Comp Sci, Sulaimaniyah, Iraq.
   [Navi, Keyvan] Shahid Beheshti Univ, Nanotechnol & Quantum Comp Lab, GC, Tehran, Iran.
   [Navi, Keyvan] Inst Res Fundamental Sci IPM, Sch Comp Sci, Tehran, Iran.
C3 Islamic Azad University; Iran University of Medical Sciences; Shahid
   Beheshti University
RP Hosseinzadeh, M (corresponding author), Iran Univ Med Sci, Tehran, Iran.; Hosseinzadeh, M (corresponding author), Univ Human Dev, Comp Sci, Sulaimaniyah, Iraq.
EM Hosseinzadeh.m@Iums.ac.ir
RI Hosseinzadhe, Mehdi/AAU-4191-2021; Hosseinzadeh, Mehdi/GWV-3822-2022;
   Hosseinzadeh, Mehdi/ABE-7443-2020
CR AccessData Corporation, 2013, FTK IM
   Anglano C, 2014, DIGIT INVEST, V11, P201, DOI 10.1016/j.diin.2014.04.003
   [Anonymous], 2010, 1 MONDAY
   [Anonymous], 2010, SENTIWORDNET 3 0 ENH
   [Anonymous], 2013, NTR
   [Anonymous], 2011, Android Forensics-Investigation, Analysis and Mobile Security for Google Android
   [Anonymous], 2007, AMCIS 2007 P KEYST C
   [Anonymous], 2013, MICRO SYSTEMATION XR
   Boyd DM, 2007, J COMPUT-MEDIAT COMM, V13, P210, DOI 10.1111/j.1083-6101.2007.00393.x
   Brandeis L., 1890, Harvard law Review, V4, P193
   Buccafurri F, 2015, COMPUT HUM BEHAV, V52, P87, DOI 10.1016/j.chb.2015.05.045
   Buchenscheit A, 2014, MUM 14 P 13 INT C MO
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Cellebrite LTD, 2013, CELL ANDR FOR
   Dinev T, 2006, INFORM SYST RES, V17, P61, DOI 10.1287/isre.1060.0080
   Fogel J, 2009, COMPUT HUM BEHAV, V25, P153, DOI 10.1016/j.chb.2008.08.006
   Gilbert E, 2008, CHI 08 P SIGCHI C HU
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Groat L, 2002, ARCHITECTURE RES MET
   Gross R., 2005, WPES 05 P ACM WORKSH
   Gudipaty LP, 2015, J INF TECHNOL SOFTW, V5, P1, DOI [10. 4172/2165-7866. 1000147, DOI 10.4172/2165-7866.1000147]
   Jdruszczak K, 2005, ROCZNIKI PSYCHOLOGIC, V08, P111
   Joinson A. N, 2008, CHI 08 P SIGCHI C HU
   Karpisek F, 2015, DIGIT INVEST, V15, P110, DOI 10.1016/j.diin.2015.09.002
   Kokolakis S, 2017, COMPUT SECUR, V64, P122, DOI 10.1016/j.cose.2015.07.002
   Muller R, REEVALUATING SMARTPH
   Nov O, 2009, CHI 09 P SIGCHI C HU
   Persian POS Tagger Tool, 2016, PERSIAN POS TAGGER T
   Premazzi K, 2010, INT J ELECTRON COMM, V14, P63, DOI 10.2753/JEC1086-4415140304
   Pussewalage HSG, 2016, INT J INFORM MANAGE, V36, P1161, DOI 10.1016/j.ijinfomgt.2016.07.006
   Schrittwieser S., 2012, NETW DISTR SYST SEC
   Staddon J, 2012, SOUPS 12 P 8 S US PR
   Stutzman F, 2010, CHI 10 P SIGCHI C HU
   Vidas T, 2011, DIGIT INVEST, V8, pS14, DOI 10.1016/j.diin.2011.05.003
   Wang T, 2016, INT J INFORM MANAGE, V36, P531, DOI 10.1016/j.ijinfomgt.2016.03.003
   Westin A. F., 1967, PRIVACY FREEDOM
   Zingales N, 2017, COMPUT LAW SECUR REV, V33, P553, DOI 10.1016/j.clsr.2017.05.018
   Zlatolas LN, 2015, COMPUT HUM BEHAV, V45, P158, DOI 10.1016/j.chb.2014.12.012
NR 38
TC 3
Z9 3
U1 2
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2018
VL 48
IS 5
BP 1143
EP 1164
DI 10.1002/spe.2565
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GC4BJ
UT WOS:000429727600007
DA 2024-07-18
ER

PT J
AU Ballesteros, FJ
   Guardiola, G
   Soriano, E
AF Ballesteros, Francisco J.
   Guardiola, Gorka
   Soriano, Enrique
TI ZX: A network file system for high-latency networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; network file system; operating system
AB Using a central file server is good for interactive access to files, because of the coherency implied by a centralized design. In fact, within local area networks, this is a common case. However, distributed environments in use today may exhibit round-trip times on the order of 50 or 100 ms. This is a problem for interactive file access to a central file server because of the resulting access times. Although aggressive caching and loosely synchronized replicas may be used for distributed file access, there are cases where the better coherency provided by a central server is still desirable. In this paper, we present ZX, a distributed file system and protocol designed with latency in mind. It can use caching, but it does not require caching or batching to address latency issues. ZX relies on a novel channel-based file system interface. It includes find requests and leverages streaming requests to work well under high-latency conditions. Unlike other protocols designed for distributed access to a central server, ZX tolerates round-trip times on the order of 50 or 100 ms to access a central file server for interactive usage such as compiling shared sources, running binaries, editing documents, and other similar workloads. It can be used on UNIX using a FUSE adaptor while permitting native ZX speakers to run faster.
C1 [Ballesteros, Francisco J.; Guardiola, Gorka; Soriano, Enrique] Univ Rey Juan Carlos, Dept Sistemas Telemat & Computac GSyC, Lab Sistemas LSUB, Madrid, Spain.
C3 Universidad Rey Juan Carlos
RP Ballesteros, FJ (corresponding author), Univ Rey Juan Carlos, Dept Sistemas Telemat & Computac GSyC, Lab Sistemas LSUB, Madrid, Spain.
EM franciscojose.ballesteros@urjc.es
OI Soriano-Salvador, Enrique/0000-0002-4265-4577
FU CAM [S2013/ICE-2894]; Spanish MINECO [TIN2013-47030-P]
FX CAM, Grant/Award Number: S2013/ICE-2894; Spanish MINECO, Grant/Award
   Number: TIN2013-47030-P
CR Aguilera A, 2012, LECT NOTES COMPUT SC, V7484, P65, DOI 10.1007/978-3-642-32820-6_9
   Ananda A. L., 1992, Operating Systems Review, V26, P92, DOI 10.1145/142111.142121
   Armstrong J., 1993, Concurrent programming in ERLANG
   Ballesteros FJ, 2001, J SYST SOFTW, V85, P1637
   Ballesteros FJ, 2015, 153 LSUP TR
   Ballesteros FJ, 144 GSYCLSUB TR
   Ballesteros FJ, 2007, OP STYX BATCHING HIG
   Dorward SM, 1997, BELL LABS TECH J, V2, P5, DOI 10.1002/bltj.2028
   Fielding R., 1999, 2616 RFC
   Ghemawat S., 2003, ACM SIGOPS OPERATING, V37, P29, DOI [DOI 10.1145/945445.945450, DOI 10.1145/1165389.945450, 10.1145/1165389.945450]
   Gilbert S., 2002, SIGACT News, V33, P51, DOI 10.1145/564585.564601
   HARTMAN JH, 1995, ACM T COMPUT SYST, V13, P274, DOI 10.1145/210126.210131
   Hedges M, 2009, FUTURE GENER COMP SY, V25, P446, DOI 10.1016/j.future.2008.10.003
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   LEACH P, 1996, CIFS COMMON INTERNET
   Liskov B, 1988, P ACM SIGPLAN C PROG, V23
   Mashtizadeh AJ, 2013, P 24 ACM S OP SYST P
   McDougall R, 2004, FILEBENCH TUTORIAL
   MORRIS JH, 1986, COMMUN ACM, V29, P184, DOI 10.1145/5666.5671
   Muthitacharoen A., 2001, Operating Systems Review, V35, P174, DOI 10.1145/502059.502052
   Nielsen H.F., 1997, COMPUT COMMUN REV, V27, P155
   Nightingale EB, 2006, ACM T COMPUT SYST, V24, P361, DOI 10.1145/1189256.1189258
   Pike R, 1999, BELL LABS TECH J, V4, P146, DOI 10.1002/bltj.2169
   Pike R., 1990, EUUG NEWSLETTR, V10, P3
   Presotto D, ORG NETWORKS PLAN 9, V2
   SATYANARAYANAN M, 1990, IEEE T COMPUT, V39, P447, DOI 10.1109/12.54838
   Shepler S., 2003, NETWORK FILE SYSTEM
   Sidhu GursharanS., 1990, INSIDE APPLETALK
   Sivathanu M, 2002, ACM SIGPLAN NOTICES, V37, P264, DOI 10.1145/605432.605425
   Thain D, 2007, IEEE ACM INT WORKSH
   The Go Authors, THE GO AUTH
   The Open Group, 2001, OP GROUP BAS SPEC
   Thiebolt F, 2007, P 19 IASTED INT C PA
   Trigdell A, THE RSYNC ALGORITHM
   Whitehead EJ, 1999, P 6 C COMP SUPP COOP
   Wilson A., 2008, P 6 USENIX C FIL STO
   Ylonen T, 2002, SSH FILE TRANSFER PR
NR 37
TC 1
Z9 1
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 578
EP 599
DI 10.1002/spe.2550
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Denz, R
   Brookes, S
   Osterloh, M
   Kuhn, S
   Taylor, S
AF Denz, Robert
   Brookes, Scott
   Osterloh, Martin
   Kuhn, Stephen
   Taylor, Stephen
TI Symmetric multiprocessing from boot to virtualization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
AB The x86 multicore processor architecture and the concepts associated with symmetric multiprocessing have become the linchpin of modern operating systems and cloud computing. A solid understanding of these technologies has become critical to any developer entering the field. Unfortunately, the complexity associated with discovering, enabling, using, and virtualizing multiple cores has created a paucity in the available documentation, transferable knowledge, and readable code exemplars. This paper describes our experience in overcoming these hurdles in the design of a from scratch, multi-core operating system-Bear-for secure and resilient cloud computing. In particular, we trace the intricacies involved in the development of a multi-core microkernel with an integrated multi-core hypervisor. By exploring the implementation details, from bootstrapping through core virtualization to process scheduling, this paper aims to fill the knowledge gaps, highlight potential pitfalls, and introduce multicore development in a concise start-to-finish exemplar.
C1 [Denz, Robert; Brookes, Scott; Osterloh, Martin; Kuhn, Stephen; Taylor, Stephen] Dartmouth Coll, Thayer Sch Engn, 14 Engn Dr, Hanover, NH 03755 USA.
C3 Dartmouth College
RP Denz, R (corresponding author), Dartmouth Coll, Thayer Sch Engn, 14 Engn Dr, Hanover, NH 03755 USA.
EM robert.denz@gmail.com
FU Defense Advanced Research Projects Agency [FA8750-11-2-0257]
FX Defense Advanced Research Projects Agency, Grant/Award Number:
   FA8750-11-2-0257
CR AIM Independent Resource Benchmark, 2013, AIM BENCHMARKS  0221
   AMD, 2013, AMD64 Architecture Programmer's Manual Volume 2: System Programming
   [Anonymous], 2011, BIGKERNELLOCK   0619
   Arpaci-Dusseau R. H., 2018, Operating systems: Three easy pieces
   Barham P, 2003, ACM S OP SYST PRINC
   Brookes S, 2015, P MILCOM
   Brookes S, 2016, PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON CYBER WARFARE AND SECURITY (ICCWS 2016), P56
   Corbato FJ, 1965, JOIN COMP C ACM
   Cox R., 2014, XV6 SIMPLE UNIX LIKE
   Domas C, 2015, BLACK HAT
   Duncan R, MS DOS ENCY
   ECMA, 1995, VOL FIL STRUCT DISK
   Englander I., 2014, ARCHITECTURE COMPUTE
   Engler DawsonR., 1998, EXOKERNEL OPERATING
   Herder J. N., 2006, ACM SIGOPS OPERATING
   Hewlett-Packard Corporation Intel Corporation Microsoft Corporation Phoenix Technologies Ltd. and Toshiba Corporation, 2013, ADV CONF POW INT SPE
   Intel, 1997, MULTIPROCESSOR SPEC
   Intel, 1988, 8259A8259A2 INT
   Intel, 1998, US RDTSC INSTR PERF
   Intel, 1988, HIGH PERF MICR MEM M
   Intel, 1990, 8086 16 BIT HMOS MIC
   Intel, 2006, DUAL COR INT XEON PR
   Intel, 1993, 82489DX INT
   Intel, 2013, INT PLATF INN FRAM E
   Intel Corporation, 2016, Intel 64 and IA-32 Architectures Software Developer Manuals
   Kildall G, 1980, DDJ, V5, P6
   Larkby-Lahet J, 2010, XOMB EXOKERNEL MODER
   Lever C, 2000, USENIX ANN TECHN C M
   Magklis G, 2011, PROCESSOR MICROARCHI, P72
   McGivern J, 1998, INTERRUPT DRIVEN PC
   Nichols C, 2013, MILCOM 2013 2013 IEE
   Osterloh M, 2014, 2 INT C CLOUD SEC MA
   Pandey RK, 2011, INT J COMPUT APPL
   Patterson DA., 2014, COMPUTER ORG DESIGN
   PIKE R, 1995, COMPUT SYST, V8, P221
   Robert L, 2005, LINUX KERNEL DEV
   Sakamoto M, 2010, WHY BIOS LOADS MBR 0
   Stuart B, 2008, PRINCIPLES OPERATING, P206
   The MPI Forum, 2009, MPI MESS PASS INT VE
   Watts J, 1998, J CONCURR
   Woodhull TA, 2006, OPERATING SYSTEMS DE
NR 41
TC 0
Z9 0
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2018
VL 48
IS 3
BP 681
EP 718
DI 10.1002/spe.2505
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV0ZR
UT WOS:000424291300014
OA Bronze
DA 2024-07-18
ER

PT J
AU Lehrig, S
   Hilbrich, M
   Becker, S
AF Lehrig, Sebastian
   Hilbrich, Marcus
   Becker, Steffen
TI The architectural template method: templating architectural knowledge to
   efficiently conduct quality-of-service analyses
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE architectural templates; software architecture; software engineering;
   architectural analysis; distributed computing; cloud computing
AB Software architects plan the realization of software systems by assessing design decisions on the basis of architectural models. Using these models as input, architectural analyses assess the impact of architects' decisions on quality-of-service properties. While the creation of suitable architectural models requires software architects to apply complex architectural knowledge, for example, in the form of established architectural styles and patterns, current architectural analyses lack support for directly reusing such knowledge. This lack points to an unused potential to make the work of software architects more effective and efficient. To use this potential, we introduce the architectural template (AT) method, an engineering method that makes design-time analyses of quality-of-service properties of software systems more efficient. The AT method allows to quantify quality-of-service properties on the basis of reusable modeling templates that capture recurring architectural knowledge. Architects just need to customize such templates with system-specific parts. In a case study, we illustrate the applicability of the AT method in the domains of distributed and cloud computing and its suitability for the quality-of-service properties performance, scalability, elasticity, and cost-efficiency. Copyright (c) 2017 John Wiley & Sons, Ltd.
C1 [Lehrig, Sebastian] Paderborn Univ, Software Qual Lab, S Lab, Zukunftsmeile 1, D-33102 Paderborn, Germany.
   [Hilbrich, Marcus; Becker, Steffen] Tech Univ Chemnitz, Str Nationen 62, D-09111 Chemnitz, Germany.
C3 University of Paderborn; Technische Universitat Chemnitz
RP Lehrig, S (corresponding author), Paderborn Univ, Software Qual Lab, S Lab, Zukunftsmeile 1, D-33102 Paderborn, Germany.
EM sebastian.lehrig@uni-paderborn.de
OI Hilbrich, Marcus/0000-0003-3717-9449
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   Allen R.J., 1997, (CMU Tech- nical Report CMU-CS-97-144). (technical report).
   [Anonymous], 2016, CLOUDSTORE SCREENCAS
   [Anonymous], 2002, SEI SERIES SOFTWARE
   [Anonymous], 2004, Architecture of the World Wide Web
   [Anonymous], 2015, P 6 ACMSPEC INT C PE
   [Anonymous], 2016, CLOUDSTORE CASE STUD
   [Anonymous], 2010, SYSTEMS SOFTWARE ENG, P1, DOI DOI 10.1109/IEEESTD.2010.5733835
   Bass Len, 2012, SEI S SOFTW
   Bause F., 1998, ACM SIGMETRICS PERFO, V26, P2
   Becker S., 2008, THESIS
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Boehm B., 2003, BALANCING AGILITY DI
   Brataas G., 2013, P 4 ACM SPEC INT C P, P335
   Brosch F, 2012, IEEE T SOFTWARE ENG, V38, P1319, DOI 10.1109/TSE.2011.94
   Buschmann F., 2007, PATTERN ORIENTED SOF, V5
   Cortellessa V, 2002, J LOGIC ALGEBR PROGR, V51, P77, DOI 10.1016/S1567-8326(01)00016-9
   Dobson G, 2005, EUROMICRO-SEAA 2005: 31st EUROMICRO Conference on Software Engineering and Advanced Applications, Proceedings, P80
   Eikerling H, 2014, THESIS
   Erl T., 2013, Cloud Computing: Concepts, Technology, & Architecture
   Evans J.D., 1996, Straightforward statistics for the behavioral sciences
   Fehling C., 2014, Cloud Computing Patterns: Fundamentals to Design, Build, and Manage Cloud Applications, DOI DOI 10.1007/978-3-7091-1568-8
   Garlan D., 1994, SIGSOFT Software Engineering Notes, V19, P175, DOI 10.1145/195274.195404
   Garlan D., 2014, WORKSH FUT SOFTW ENG, P29, DOI DOI 10.1145/2593882.2593886
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Gartner Inc. and/oritsA, 2003, TECHNICAL REPORT
   Giacinto DL, 2016, THESIS
   Happe J, 2009, THESIS
   Happe L, 2011, THESIS
   Harrison NB, 2007, IEEE SOFTWARE, V24, P38, DOI 10.1109/MS.2007.124
   Hermanns H, 2002, THEOR COMPUT SCI, V274, P43, DOI 10.1016/S0304-3975(00)00305-4
   IEEE Computer Society, 2007, 42010 ISOIEC, pc1, DOI DOI 10.1109/IEEESTD.2007.386501
   Java Middleware Open Benchmarking (JMOB), 2003, TPC W BENCHM JAV SER
   Kim DK, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P452, DOI 10.1109/CMPSAC.2003.1245379
   Kitchenham B., 2007, Joint Report
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Koziolek Anne, 2011, JOINT ACM SIGSOFT C, P33
   KOZIOLEK H, 2011, THE SPOSAD ARCHITECT, P320, DOI DOI 10.1109/WICSA.2011.50
   Koziolek H, 2012, EMPIR SOFTW ENG, P1
   Koziolek H., 2008, THESIS
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Kruchten P., 1995, P 1 INT WORKSH ARCH, P198
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Lehrig S, 2014, PHD SESS ADV SCH SER
   Lehrig S, 2014, P S SOFTW PERF 2014, P141
   Lehrig S, 2014, P 2 INT WORKSH HOT T
   Lehrig S, 2015, P S SOFTW PERF 2015
   Lehrig S, 2017, FUTURE GENERATION CO
   Lehrig S., 2013, CEUR WORKSHOP P, P48
   Lehrig S, FORSCHUNGSFORUM PADE, V17, P20
   Lehrig S, 2016, 2016 12TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES (QOSA), P11, DOI 10.1109/QoSA.2016.17
   Lehrig S, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P83, DOI 10.1145/2737182.2737185
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P336, DOI 10.1109/32.385971
   Mani N, 2015, 27 INT C SOFTW ENG K, P552
   Maplesden D, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P338, DOI 10.1109/HCC.2001.995285
   Menascé DA, 2011, IEEE SOFTWARE, V28, P78, DOI 10.1109/MS.2011.22
   That MTT, 2016, AUTOMAT SOFTW ENG, V23, P427, DOI 10.1007/s10515-014-0172-0
   Moriconi M., 1997, SRICSL9701
   Morrison C, 2014, COMPUTER LITERACY BA
   Nutzel C, 2015, THESIS
   Östberg PO, 2014, INT CONF CLOUD COMP, P26, DOI 10.1109/CloudCom.2014.62
   OMG, 2011, FORMAL20110806 OMG
   OMG, 2016, MET OBJ FAC MOF 2 0
   Openkowski A, 2016, THESIS
   Petriu DC, 2000, DERIVING SOFTWARE PE
   Rathfelder C, 2013, THESIS
   Rombach H. D., 2002, ENCY SOFTWARE ENG, V2, P578
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Transaction processing performance council (TPC), 2002, TPC W BENCHM WEB COM
   Trivedi K. S., 1982, PROBABILITY STAT REL
   Vandevoorde D, 2002, C PLUS PLUS TEMPLATE
   vansSolingen R, 1999, GOAL QUESTION METRIC
   Vanwormhoudt G, 2015, SOFTWARE SYSTEMS MO, V16, P469
   Verdickt T, 2005, IEEE T SOFTWARE ENG, V31, P695, DOI 10.1109/TSE.2005.88
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Woodside M, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P22, DOI 10.1109/ICSE.2002.1007953
NR 78
TC 3
Z9 3
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2018
VL 48
IS 2
SI SI
BP 268
EP 299
DI 10.1002/spe.2517
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FS0OE
UT WOS:000419472700002
DA 2024-07-18
ER

PT J
AU Arora, R
   Goel, S
   Mittal, RK
AF Arora, Ritu
   Goel, Sanjay
   Mittal, Ravi Kant
TI Supporting collaborative software development over GitHub
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE collaborative software development; computer-supported collaborative
   work; software configuration management systems; workspace awareness
ID AWARENESS
AB GitHub is a web-based, distributed Software Configuration Management (SCM) system build over Git, which enables developers to host shared repositories over the Internet and access them from any location, at any time. It helps developers to effectively orchestrate their activities over shared codebases by capturing direct conflicts arising because of concurrent editing on the same shared artifact. However, SCM systems have limited support for capturing inconsistencies arising because of indirect conflicts which arise because of software dependency relationships that exist between related artifacts, and lead to the introduction of syntactic and semantic inconsistencies in codebases. In this paper, we propose a novel collaborative software development (CSD) tool named, Collaboration Over GitHub (COG), that provides real-time information about arising direct and indirect conflicts among collaborative developers, working over GitHub, through a collection of workspace awareness widgets. These widgets provide people-centric information about direct and indirect collaborators over GitHub. Resource-centric information about current and conflicting activities of real-time collaborators is captured and propagated to others, based on the dependency relationships between software artifacts being manipulated by them. COG uses dependency graphs to store and process dependency relationship information which is required to ascertain information about indirect conflicts. Notably, the most important novel contribution of COG is that it not only captures indirect conflicts that lead to the introduction of syntactic inconsistencies but also changes that lead to semantic inconsistencies in the codebase. It also does so at finer levels of granularity, with changes to individual method's body being traced, thereby capturing statement-level conflicts as well. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Arora, Ritu] Birla Inst Technol & Sci, Pilani, Rajasthan, India.
   [Goel, Sanjay] Jaypee Inst Informat Technol, Noida, Uttar Pradesh, India.
   [Mittal, Ravi Kant] KR Mangalam Univ, Gurgaon, Haryana, India.
C3 Birla Institute of Technology & Science Pilani (BITS Pilani); Jaypee
   Institute of Information Technology (JIIT)
RP Arora, R (corresponding author), Birla Inst Technol & Sci, Pilani, Rajasthan, India.
EM mailtorituarora@yahoo.com
RI Goel, Sanjay/AAC-2218-2021
CR [Anonymous], P EXTR PROGR EX
   Arora R, 2015, INT CONF CONTEMP, P509, DOI 10.1109/IC3.2015.7346735
   Arora R, 2012, CONF SOFTW ENG EDUC, P32, DOI 10.1109/CSEET.2012.27
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Blincoe K., 2012, Proc. Conf. Computer Supported Cooperative Work (CSCW 12), P1351
   Borici A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P5, DOI 10.1109/CHASE.2012.6223024
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Brun Yuriy., 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P444, DOI 10.1145/2025113.2025187
   Chen C, 2014, INT CONF GLOBAL SOFT, P56, DOI 10.1109/ICGSE.2014.28
   Chen C, 2013, J VISUAL LANG COMPUT, V24, P390, DOI 10.1016/j.jvlc.2013.07.003
   Chen M- Y, 2014, P 7 INT S VIS INF CO, P113
   Cheng L.-T., 2003, P 2003 OOPSLA WORKSH, P45, DOI [10.1145/965660.965670, DOI 10.1145/965660.965670]
   Davor C., 2005, P 2005 INT ACM SIGGR, P136, DOI [10.1145/1099203.1099229, DOI 10.1145/1099203.1099229]
   de Souza CRB, 2007, GROUP'07: PROCEEDINGS OF THE 2007 INTERNATIONAL ACM CONFERENCE ON SUPPORTING GROUP WORK, P147
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Froehlich J, 2004, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.2004.1317461
   Goel S, 2010, J INF TECHNOL EDUC-R, V9, P183
   Goldman M, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P65
   Guimaraes ML, 2010, 2010 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2010), P56
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   Gutwin C., 1996, People and Computers XI. Proceedings of HCI '96, P281
   Gutwin C, 1996, Proceedings of Human Factors in Computing Systems (CHI), P208
   Guzzi A, 2012, PROC INT CONF SOFTW, P1367, DOI 10.1109/ICSE.2012.6227246
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P235, DOI 10.1145/1810295.1810339
   Hattori L, 2011, 5 U LUG
   Hegde Rajesh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P178, DOI 10.1109/ASE.2008.28
   Holmes Reid., 2010, Proc. ICSE, P465
   Hupfer S., 2004, Computer Supported Cooperative Work Conference Proceedings, P21, DOI 10.1145/1031607.1031611
   Huyen PTT, 2011, ASIA PAC SOFWR ENG, P154, DOI [10.1109/APSEC.2011.24, 10.1109/APSC.2011.24]
   Huyen PTT, 2012, ARXIV12121762
   Ignat C, 2007, 9 INT WORKSH COLL ED
   Ignat CL, 2008, INT C INTELL COMP CO, P137, DOI 10.1109/ICCP.2008.4648365
   Jakobsen MR, 2009, LECT NOTES COMPUT SC, V5727, P791, DOI 10.1007/978-3-642-03658-3_83
   Jungmayr S., 2002, P 12 INT WORKSH SOFT, V25, P179
   Lanza M, 2010, EUR CON SFTWR MTNCE, P202, DOI 10.1109/CSMR.2010.37
   LAUTAMKI J., 2012, P ACM 2012 C COMPUTE, P1307, DOI DOI 10.1145/2145204.2145399
   Levin S., 2015, ARXIV150801872
   Levin S, 2015, ARXIV150406742
   Ling Wu, 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P45, DOI 10.1109/SERVICES.2011.74
   Molli P, 2001, CRIWG 2001: SEVENTH INTERNATIONAL WORKSHOP ON GROUPWARE, PROCEEDINGS, P106, DOI 10.1109/CRIWG.2001.951823
   Nordio M., 2011, ARXIV11050768
   Huyen PTT, 2013, LECT NOTES COMPUT SC, V7973, P17, DOI 10.1007/978-3-642-39646-5_2
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Sarma A, 2002, P INT COMP SOFTW APP, P1093, DOI 10.1109/CMPSAC.2002.1045155
   Sarma A., 2007, C AUTOMATED SOFTWARE, P94
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Schummer T, 2001, P 7 C EUR C COMP SUP, V79-98
   Servant F, 2010, 2010 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2010), P39
   Shatte A., 2014, P 25 AUSTR C INF SYS
   Sun C., 1998, ACM 1998 Conference on Computer Supported Cooperative Work. Proceedings. CSCW 98, P59, DOI 10.1145/289444.289469
   Trainer E., 2005, OOPSLA Workshop on Eclipse Technology Exchange, P26, DOI [10.1145/1117696.1117702, DOI 10.1145/1117696.1117702]
   Vandeventer J., 2012, P 43 ACM TECHN S COM, P75
NR 54
TC 7
Z9 8
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2017
VL 47
IS 10
BP 1393
EP 1416
DI 10.1002/spe.2468
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG0OJ
UT WOS:000409457000005
DA 2024-07-18
ER

PT J
AU Sun, H
   Wang, XF
   Buyya, R
   Su, JS
AF Sun, Hao
   Wang, Xiaofeng
   Buyya, Rajkumar
   Su, Jinshu
TI CloudEyes: Cloud-based malware detection with reversible sketch for
   resource-constrained internet of things (IoT) devices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE reversible sketch; suspicious bucket cross-filtering; signature-based;
   malware detection; cloud-based
AB Because of the rapid increasing of malware attacks on the Internet of Things in recent years, it is critical for resource-constrained devices to guard against potential risks. The traditional host-based security solution becomes puffy and inapplicable with the development of malware attacks. Moreover, it is hard for the cloud-based security solution to achieve both the high performance detection and the data privacy protection simultaneously. This paper proposes a cloud-based anti-malware system, called CloudEyes, which provides efficient and trusted security services for resource-constrained devices. For the cloud server, CloudEyes presents suspicious bucket cross-filtering, a novel signature detection mechanism based on the reversible sketch structure, which provides retrospective and accurate orientations of malicious signature fragments. For the client, CloudEyes implements a lightweight scanning agent which utilizes the digest of signature fragments to dramatically reduce the range of accurate matching. Furthermore, by transmitting sketch coordinates and the modular hashing, CloudEyes guarantees both the data privacy and low-cost communications. Finally, we evaluate the performance of CloudEyes by utilizing both the campus suspicious traffic and normal files. The results demonstrate that the mechanisms in CloudEyes are effective and practical, and our system can outperform other existing systems with less time and communication consumption. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Sun, Hao; Wang, Xiaofeng; Su, Jinshu] Natl Univ Def Technol, Coll Comp, Changsha 410073, Hunan, Peoples R China.
   [Su, Jinshu] Natl Univ Def Technol, Natl Key Lab Parallel & Distributed Proc, Changsha 410073, Hunan, Peoples R China.
   [Buyya, Rajkumar] Univ Melbourne, Dept Comp & Informat Syst, Cloud Comp & Distributed Syst Lab, Melbourne, Vic 3010, Australia.
C3 National University of Defense Technology - China; National University
   of Defense Technology - China; University of Melbourne
RP Sun, H (corresponding author), Natl Univ Def Technol, Coll Comp, Changsha 410073, Hunan, Peoples R China.
EM haosunlight@163.com
RI Hu, Shaolin/N-1791-2018; li, ye/GWN-2672-2022; Li, Ye/JBS-2949-2023;
   Buyya, Rajkumar/C-3424-2009; sun, hao/GRS-7732-2022; Sun,
   Haoyang/KHD-3534-2024; sun, hao/HMD-2991-2023; Su, Jinshu/M-1960-2014
OI Su, Jinshu/0000-0001-9273-616X
FU National Science Foundation of China (NSFC) [61303264, 61202488];
   Guangxi cooperative innovation center of cloud Computing and big data
   [YD16505]; Distinguished young scientist promotion of National
   University of Defense Technology; program of Changjiang Scholars and
   Innovative Research Team in University [IRT1012]
FX This research is supported in part by the project of National Science
   Foundation of China (NSFC) under grant No. 61303264, No. 61202488;
   Guangxi cooperative innovation center of cloud Computing and big data
   No. YD16505; Distinguished young scientist promotion of National
   University of Defense Technology; the program of Changjiang Scholars and
   Innovative Research Team in University (No. IRT1012).
CR AHO AV, 1975, COMMUN ACM, V18, P333, DOI 10.1145/360825.360855
   [Anonymous], 1994, TR9417 U AR
   [Anonymous], 2008, USENIX SEC S
   [Anonymous], 2005, DATA STREAMS ALGORIT, V1
   AV-comparative, 2010, TECHN REP AV COMP
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Borgia E, 2014, COMPUT COMMUN, V54, P1, DOI 10.1016/j.comcom.2014.09.008
   Cha Sang Kil, 2010, NSDI, P377
   Chen ZS, 2009, IEEE T INF FOREN SEC, V4, P530, DOI 10.1109/TIFS.2009.2025847
   Erclogan O., 2007, International Journal of Security and Networks, V2, P50
   Fei Wang, 2012, 2012 IEEE 11th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom), P215, DOI 10.1109/TrustCom.2012.295
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Haghighat MH, 2013, IEEE T INF FOREN SEC, V8, P705, DOI 10.1109/TIFS.2013.2252341
   He M, 2015, PEER PEER NETW APPL, V8, P642, DOI 10.1007/s12083-013-0216-4
   Jarabek C, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P209
   Jia Xu, 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P703, DOI 10.1109/CloudCom.2010.16
   Nguyen KT, 2015, AD HOC NETW, V32, P17, DOI 10.1016/j.adhoc.2015.01.006
   Min B, 2014, SOFTWARE PRACT EXPER, V44, P1201, DOI 10.1002/spe.2197
   Oberheide J., 2008, P 1 WORKSHOP VISUALI, P31, DOI DOI 10.1145/1622103.1629656
   Schweller R, 2007, IEEE ACM T NETWORK, V15, P1059, DOI 10.1109/TNET.2007.896150
   Sun H, 2015, P INT C SEC PRIV COM
   Tang Y, 2011, IEEE T COMPUT, V60, P565, DOI 10.1109/TC.2010.130
   Vasiliadis G, 2010, LECT NOTES COMPUT SC, V6307, P79, DOI 10.1007/978-3-642-15512-3_5
   Venugopal D, 2008, MOB INF SYST, V4, P33, DOI 10.1155/2008/712353
   Yan Wu, 2009, Proceedings of the 9th WSEAS International Conference on Robotics, Control and Manufacturing Technology (ROCOM'09), DOI 10.1145/1619258.1619284
   Zonouz S, 2013, COMPUT SECUR, V37, P215, DOI 10.1016/j.cose.2013.02.002
NR 26
TC 50
Z9 53
U1 0
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2017
VL 47
IS 3
SI SI
BP 421
EP 441
DI 10.1002/spe.2420
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL9RK
UT WOS:000394957500007
OA Green Published
DA 2024-07-18
ER

PT J
AU Leotta, F
   Mecella, M
AF Leotta, Francesco
   Mecella, Massimo
TI PLaTHEA: a marker-less people localization and tracking system for home
   automation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE indoor positioning; smart homes; AAL; vision-based techniques; DPWS -
   Device Profile for Web Services
ID SEARCH
AB Current smart spaces require more and more sophisticated sensors able to acquire the state of the environment in order to provide advanced and customized services. Among the most important environmental variables, locations of users and their identities represent a primary concern for smart home applications. Despite some years of investigation in indoor positioning, the availability of systems designed as components pluggable into complex home automation platforms is limited. We present People Localization and Tracking for HomE Automation (PLaTHEA), a vision-based indoor localization system specifically tailored for Ambient Assisted Living applications. PLaTHEA features a novel technique to acquire a stereo video stream from a couple of independent (and not synchronized) network-attached cameras, thus easing its physical deployment. The input stream is processed by integrating well-known techniques with a novel tracking approach targeted to indoor spaces. The system has a modular architecture that offers clear interfaces exposed as Web services, and it can run on off-the-shelf and cheap hardware (both in terms of sensing devices and computing units). We evaluated PLaTHEA in real usage conditions and reported the measured performance in terms of precision and accuracy. Low light, crowded and large monitored environments might slightly decrease the performance of the system; nevertheless, the results here presented show that it is perfectly suitable to be employed in the typical domestic day-to-day life settings. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Leotta, Francesco; Mecella, Massimo] Univ Roma La Sapienza, Dipartimento Ingn Informat Automat & Gest Antonio, I-00185 Rome, Italy.
C3 Sapienza University Rome
RP Leotta, F (corresponding author), Univ Roma La Sapienza, Dipartimento Ingn Informat Automat & Gest Antonio, Via Ariosto 25, I-00185 Rome, Italy.
EM leotta@diag.uniroma1.it
RI Leotta, Francesco/AAT-2480-2020; Mecella, Massimo/N-8699-2019
OI Mecella, Massimo/0000-0002-9730-8882; Leotta,
   Francesco/0000-0001-9216-8502
FU EU [FP7-224332, FP7-258888]; AriSLA through the Italian project
   Brindisys; Regione Lazio; FILAS through the 'Progetto Sensoristica
   Interconnessa per la Sicurezza'; SAPIENZA Universita di Roma; DIAG
   through the grant 'Assegni di Ricerca'
FX This work has been supported by the EU projects SM4All (FP7-224332) and
   GreenerBuildings (FP7-258888), by AriSLA through the Italian project
   Brindisys, by Regione Lazio and FILAS through the 'Progetto Sensoristica
   Interconnessa per la Sicurezza', and by SAPIENZA Universita di Roma, and
   DIAG through the grant 'Assegni di Ricerca 2012'. The authors would like
   to thank anonymous reviewers and prof. Stephen Kimani for their useful
   comments and revision of the manuscript, and the colleagues of IRCCS
   Fondazione Santa Lucia (Febo Cincotti, Donatella Mattia, Fabio Aloise)
   for the use of the 'Casa Agevole' and the support during the development
   and testing of the system.
CR [Anonymous], 2001, Robotica, DOI DOI 10.1017/S0263574700223217
   [Anonymous], 2007, GLOBAL POSITIONING S
   Anwar AK, 2008, 2008 3RD INTERNATIONAL SYMPOSIUM ON WIRELESS PERVASIVE COMPUTING, VOLS 1-2, P383, DOI 10.1109/ISWPC.2008.4556235
   Bahadori S, 2007, APPL INTELL, V26, P83, DOI 10.1007/s10489-006-0013-3
   Bahl P., 2000, Proceedings IEEE INFOCOM 2000. Conference on Computer Communications. Nineteenth Annual Joint Conference of the IEEE Computer and Communications Societies (Cat. No.00CH37064), P775, DOI 10.1109/INFCOM.2000.832252
   Barnes Joel., 2003, P 2003 INT S GPSN GN, P9
   Beis JS, 1997, PROC CVPR IEEE, P1000, DOI 10.1109/CVPR.1997.609451
   Beymer D, 1999, IEEE FRAM RAT WORKSH
   Bloisi D, 2009, AVSS: 2009 6TH IEEE INTERNATIONAL CONFERENCE ON ADVANCED VIDEO AND SIGNAL BASED SURVEILLANCE, P164, DOI 10.1109/AVSS.2009.96
   Bloisi D, 2009, VISAPP 2009: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON COMPUTER VISION THEORY AND APPLICATIONS, VOL 2, P484
   Bradski G., 2008, LEARNING OPENCV
   Calisi D, 2009, ADV ROBOTICS, V23, P1199, DOI 10.1163/156855309X452539
   Catarci T, 2011, LECT NOTES I COMPUTE, V70, P12, DOI [10.1007/978-3-642-23902-1_2, DOI 10.1007/978-3-642-23902-1_2]
   Cook DJ, 2009, PERVASIVE MOB COMPUT, V5, P277, DOI 10.1016/j.pmcj.2009.04.001
   Cristani M, 2010, EURASIP J ADV SIG PR, DOI 10.1155/2010/343057
   Cucchiara R, 2003, IEEE T PATTERN ANAL, V25, P1337, DOI 10.1109/TPAMI.2003.1233909
   Darrell T, 2001, EIGHTH IEEE INTERNATIONAL CONFERENCE ON COMPUTER VISION, VOL II, PROCEEDINGS, P628, DOI 10.1109/ICCV.2001.937685
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Faulkner WT, 2010, P INT TECH M I NAVIG, P198
   Harville M, 2004, IMAGE VISION COMPUT, V22, P127, DOI 10.1016/j.imavis.2003.07.009
   Harville M, 2001, IEEE WORKSHOP ON DETECTION AND RECOGNITION OF EVENTS IN VIDEO, PROCEEDINGS, P3, DOI 10.1109/EVENT.2001.938860
   Horprasert T, 1999, IEEE FRAM RAT WORKSH
   ISTAT, 2011, CENS POP AB POP RES
   Jain A. K., 2011, HDB FACE RECOGNITION
   Jensen CS, 2010, IEEE DATA ENG B, V33, P12
   Kealy Allison, 2010, 2010 IEEE/ION Position, Location and Navigation Symposium - PLANS 2010, P157, DOI 10.1109/PLANS.2010.5507132
   Leotta F, 2011, P 3 ACM SIGSPATIAL I, P23, DOI [10.1145/2077357.2077362, DOI 10.1145/2077357.2077362]
   Liu H, 2007, IEEE T SYST MAN CY C, V37, P1067, DOI 10.1109/TSMCC.2007.905750
   Liu YH, 2010, J COMPUT SCI TECH-CH, V25, P274, DOI 10.1007/s11390-010-9324-2
   Lowe DG, 2004, INT J COMPUT VISION, V60, P91, DOI 10.1023/B:VISI.0000029664.99615.94
   Miller BA, 2001, IEEE COMMUN MAG, V39, P104, DOI 10.1109/35.968819
   Moeglein M, 1998, P I NAV C, P333
   OASIS, 2009, DEV PROF WEB SERV DP
   Pellegrini S, 2008, EURASIP J IMAGE VIDE, DOI 10.1155/2008/476151
   Plataniotis K., 2000, DIGITAL SIGNAL PROC, P25
   Roos T., 2002, International Journal of Wireless Information Networks, V9, P155, DOI 10.1023/A:1016003126882
   Sarkar S, 2005, IEEE T PATTERN ANAL, V27, P162, DOI 10.1109/TPAMI.2005.39
   Scharstein D, 2002, INT J COMPUT VISION, V47, P7, DOI 10.1023/A:1014573219977
   Scharstein D, 2003, PROC CVPR IEEE, P195
   Seitz S. M., 2006, 2006 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR'06), V1, P519
   Tazari MR, 2012, AMB INTELL SMART ENV, V11, P610, DOI 10.3233/978-1-60750-837-3-610
   Viani F, 2010, INVERSE PROBL, V26, DOI 10.1088/0266-5611/26/7/074003
   Viola P, 2004, INT J COMPUT VISION, V57, P137, DOI 10.1023/B:VISI.0000013087.49260.fb
   Zhao T, 2008, IEEE T PATTERN ANAL, V30, P1198, DOI 10.1109/TPAMI.2007.70770
NR 44
TC 4
Z9 4
U1 0
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2015
VL 45
IS 6
BP 801
EP 835
DI 10.1002/spe.2262
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG1LA
UT WOS:000353032900004
DA 2024-07-18
ER

PT J
AU Souza, VES
   Mylopoulos, J
AF Silva Souza, Vitor E.
   Mylopoulos, John
TI Designing an adaptive computer-aided ambulance dispatch system with
   Zanshin: an experience report
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software requirements; adaptive systems; feedback loops; requirements
   awareness; software evolution; software reconfiguration; system
   identification; case studies
ID REQUIREMENTS; FRAMEWORK
AB We have been witnessing growing interest in systems that can adapt their behavior to deal with deviations between their performance and their requirements at run-time. Such adaptive systems usually need to support some form of a feedback loop that monitors the system's output for problems and carries out adaptation actions when necessary. Being an important feature, adaptivity needs to be considered in early stages of development. Therefore, adopting a requirements engineering perspective, we have proposed an approach and a framework (both called Zanshin) for the engineering of adaptive systems based on a feedback loop architecture. As part of our framework's evaluation, we have applied the Zanshin approach to the design of an adaptive computer-aided ambulance dispatch system, whose requirements were based on a well-known case study from the literature. In this paper, we report on the application of Zanshin for the design of an adaptive computer-aided ambulance dispatch system, presenting elements of the design, as well as the results from simulations of run-time scenarios. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Silva Souza, Vitor E.] Fed Univ Espirito Santo UFES, Dept Informat, Vitoria, ES, Brazil.
   [Mylopoulos, John] Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
C3 Universidade Federal do Espirito Santo; University of Trento
RP Souza, VES (corresponding author), Univ Fed Espirito Santo, Dept Informat CT 7, Ave Fernando Ferrari 514, BR-29075910 Vitoria, ES, Brazil.
EM vitorsouza@inf.ufes.br
OI Silva Souza, Vitor E./0000-0003-1869-5704
FU ERC [267856]; European Research Council (ERC) [267856] Funding Source:
   European Research Council (ERC)
FX This work has been partially supported by the ERC advanced grant 267856
   'Lucretius: Foundations for Software Evolution'
   (http://www.lucretius.eu) unfolding during the period of April
   2011-March 2016. The authors would also like to acknowledge the
   contributions of Alexei Lapouchnian and William N. Robinson (Georgia
   State University, USA) to some of the examples contained herein.
CR Ali Raian, 2012, Proceedings of the 7th International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE 2012), P75
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Andersson J, 2009, LECT NOTES COMPUT SC, V5525, P27, DOI 10.1007/978-3-642-02161-9_2
   Angelopoulos K, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P23, DOI 10.1109/SEAMS.2013.6595489
   [Anonymous], ELECT COMMUNICATIONS
   [Anonymous], P 2014 ACM S APPL CO
   [Anonymous], COMPUTER SCI ENG HDB
   [Anonymous], INT WORKSH SOFTW ENG
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Baresi L, 2012, P 7 INT S SOFTW ENG
   Bencomo N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P199, DOI 10.1145/1810295.1810329
   BeynonDavies P, 1995, EUR J INFORM SYST, V4, P171, DOI 10.1057/ejis.1995.20
   Breitman KK, 1999, J BRAZILIAN COMPUTER, V6
   Brueckner S, 2011, P 5 IEEE INT C SELF
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng BettyH. C., 2009, Lecture Notes in Computer Science, V5525
   Cheng SW, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P132, DOI 10.1109/SEAMS.2009.5069082
   Cornford SL, 2006, IEEE AERO EL SYS MAG, V21, P13, DOI 10.1109/MAES.2006.1662004
   Dalpiaz F, 2012, REQUIR ENG, P1
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Dastani M., 2006, P 5 INT JOINT C AUT, P1285
   de Lemos R., 2013, LECT NOTES COMPUTER, V7475
   Di Nitto E, 2008, AUTOMAT SOFTW ENG, V15, P313, DOI 10.1007/s10515-008-0032-x
   Elahi Golnaz., 2011, P 2011 ACM S APPL CO, P651
   Eric S., 2011, Social modeling for requirements engineering
   Fickas S., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P140, DOI 10.1109/ISRE.1995.512555
   Filieri A., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P43, DOI 10.1109/SEAMS.2012.6224390
   Finkelstein A., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P2, DOI 10.1109/IWSSD.1996.501141
   Finkelstein A, 1993, TECHNICAL REPORT
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Goldsby HJ, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P36, DOI 10.1109/ECBS.2008.22
   Gonzalez-Baixauli B, 2004, P 12 IEEE INT REQ EN, P183
   Hawthorne MatthewJ., 2004, P 1 ACM SIGSOFT WORK, P75
   Heaven W, 2011, INT REQUIR ENG CONF, P79, DOI 10.1109/RE.2011.6051653
   Hebig R., 2010, Proceedings of the Second International Workshop on Self-organizing Architectures, P21
   Hellerstein Joseph L, 2004, Feedback control of computing systems
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Jureta IJ, 2008, INT REQUIR ENG CONF, P71, DOI 10.1109/RE.2008.13
   Khan MJ, 2008, FOURTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS (ICAS 2008), P112, DOI 10.1109/ICAS.2008.44
   Kramer J, 1996, ACM SIGSOFT SOFTWARE, V21, P21
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Laddaga R, 2004, P 2004 INT WORKSH SE, P1
   Lapouchnian A, 2009, LECT NOTES COMPUT SC, V5829, P115, DOI 10.1007/978-3-642-04840-1_11
   Letier E., 2004, Software Engineering Notes, V29, P53, DOI 10.1145/1041685.1029905
   LETIER E, 2001, THESIS U CATHOLIQUE
   Liaskos S, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P79
   Lingxiao Fu, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P121, DOI 10.1109/RE.2012.6345796
   Wenting,, 2009, LECT NOTES COMPUT SC, V5565, P216
   Menascé DA, 2011, IEEE SOFTWARE, V28, P78, DOI 10.1109/MS.2011.22
   Menzies T, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P11
   Morandini M., 2009, P 8 INT C AUTONOMOUS, V1, P129
   Nakagawa Hiroyuki., 2011, Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P40
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Qureshi NA, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P126, DOI 10.1109/SEAMS.2009.5069081
   Robinson WN, 2010, COMPUTER, V43, P64, DOI 10.1109/MC.2009.373
   Robinson WN, 2006, REQUIR ENG, V11, P17, DOI 10.1007/s00766-005-0016-3
   Salehie M, 2012, SOFTWARE PRACT EXPER, V42, P211, DOI 10.1002/spe.1066
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Schmeck H, 2011, P 8 ACM INT C AUT CO
   Schmitz D, 2008, INT REQUIR ENG CONF, P229, DOI 10.1109/RE.2008.27
   Semmak F., 2008, MoDISE-EUS, V341, P22
   Sousa JP, 2009, COMM COM INF SC, V47, P48
   Souza V. E. S., 2011, 2011 2nd International Workshop on Requirements@Run.Time (RE@RunTime), P9, DOI 10.1109/ReRunTime.2011.6046242
   SOUZA V. E. S., 2012, LECT NOTES COMPUTER, V7565, P342
   Souza V. E. S., 2013, Software engineering for self-adaptive systems II, P133
   Souza V.E.S., 2012, THESIS U TRENTO TREN
   Souza VES, 2011, LECT NOTES COMPUT SC, V6998, P346, DOI 10.1007/978-3-642-24606-7_26
   Souza VES, 2013, COMPUT SCI-RES DEV, V28, P311, DOI 10.1007/s00450-012-0232-2
   Sykes Daniel., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing, SAC '10, P431, DOI DOI 10.1145/1774088.1774180
   Tallabaci G, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P93, DOI 10.1109/SEAMS.2013.6595496
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P194, DOI 10.1109/ISRE.1995.512561
   van Lamsweerde A, 2009, LECT NOTES COMPUT SC, V5600, P380, DOI 10.1007/978-3-642-02463-4_20
   Wang YQ, 2009, IEEE INT CONF AUTOM, P257, DOI 10.1109/ASE.2009.66
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Xin Peng, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P104, DOI 10.1109/RE.2010.22
   You Z, 2004, THESIS U TORONTO CAN
   You Z, 2001, TECHNICAL REPORT
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
NR 84
TC 3
Z9 3
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2015
VL 45
IS 5
BP 689
EP 725
DI 10.1002/spe.2245
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF4OC
UT WOS:000352528200005
DA 2024-07-18
ER

PT J
AU Chicote, M
   Ciolek, D
   Galeotti, JP
AF Chicote, M.
   Ciolek, D.
   Galeotti, J. P.
TI Practical JFSL verification using TACO
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE static analysis; bounded verification; eclipse plug-in; TACO; test case
   generation
ID ALLOY
AB Translation of Annotated COde (TACO) is a SAT-based tool for bounded verification of Java programs. One challenge many formal tools share is to provide a practical interface for a non-proficient user. In this article, we present an Eclipse plug-in for the static verifier TACO. This plug-in allows a user to walk a counterexample trace mimicking a debugging session. TacoPlug (our plug-in) uses and extends TACO to provide a better debugging experience. TacoPlug interface allows the user to verify an annotated software using the TACO verifier. If TACO finds a violation to the specification, TacoPlug presents it in terms of the annotated source code. TacoPlug features several views of the error trace to facilitate fault understanding. It resembles any software debugger, but the debugging occurs statically without executing the program. Furthermore, should a dynamic analysis be required, TacoPlug presents the user with a unit test case generated by TACO based on the detected violation. We show the usability of our tool by means of a motivational example taken from a real-life software error. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Chicote, M.; Ciolek, D.] UBA, Dept Computac, Buenos Aires, DF, Argentina.
   [Galeotti, J. P.] Univ Saarland, D-66123 Saarbrucken, Germany.
C3 University of Buenos Aires; Saarland University
RP Chicote, M (corresponding author), UBA, Dept Computac, C1428EGA, Buenos Aires, DF, Argentina.
EM mchicote@dc.uba.ar
FU CONICET [UBACyT-20020110200075, 20020100100813]; MinCyT
   PICT-2010-235/2011-1774; CONICET-PIP [11220110100596CO]; MINCYT-BMWF
   [AU/10/19]; MEALS [295261]
FX Alessandra Gorla gave helpful comments on earlier revisions of this
   paper. This work has been partially funded by CONICET,
   UBACyT-20020110200075/20020100100813, MinCyT PICT-2010-235/2011-1774,
   CONICET-PIP 11220110100596CO, MINCYT-BMWF AU/10/19 and MEALS 295261.
CR Abad P, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P21, DOI 10.1109/ICST.2013.46
   Bendersky P, 2010, THESIS U BUENOS AIRE
   Chalin P, 2009, SANTOSTR20091001 KAN
   Clarke E, 2005, LECT NOTES COMPUT SC, V3440, P570
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Parrino BC, 2011, LECT NOTES COMPUT SC, V7041, P138, DOI 10.1007/978-3-642-24690-6_11
   Dennis G, 2009, THESIS MIT
   Dennis G, 2008, LECT NOTES COMPUT SC, V5295, P130, DOI 10.1007/978-3-540-87873-5_13
   Dennis Greg, 2006, ISSTA, P109, DOI [10.1145/1146238.1146251, DOI 10.1145/1146238.1146251]
   Dolby Julian, 2007, P 6 JOINT M EUR SOFT, P195
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Frias MF, 2005, PROC INT CONF SOFTW, P442
   Galeotti Juan P., 2010, Proceedings of the Nineteenth International Symposium on Software Testing and Analysis, ISSTA 2010, Trento, Italy, July 12-16, 2010, P25, DOI [DOI 10.1145/1831708.1831712, 10.1145/1831708.1831712]
   Goldberg E, 2002, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, 2002 PROCEEDINGS, P142, DOI 10.1109/DATE.2002.998262
   Ivancic F, 2005, LECT NOTES COMPUT SC, V3576, P301
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D., 2000, Software Engineering Notes, V25, P14, DOI 10.1145/347636.383378
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jackson Daniel., 2002, Micromodels of Software
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Muller Peter, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P73, DOI 10.1007/978-3-642-21437-0_8
   Visser W., 2006, P ACM SIGSOFT INT S, P37
   Xie Y, 2007, ACM T PROGR LANG SYS, V29, P351
   Yessenov K, 2009, THESIS MIT
   Zimmermann T, 2001, VISUALIZING MEMORY G, P191
NR 28
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2014
VL 44
IS 3
SI SI
BP 317
EP 334
DI 10.1002/spe.2237
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA7KI
UT WOS:000331275900005
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Laval, J
   Ducasse, S
AF Laval, Jannik
   Ducasse, Stephane
TI Resolving cyclic dependencies between packages with enriched dependency
   structural matrix
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE software visualization; reengineering; dependency structural matrix;
   package; dependency analysis
ID SYSTEM; VISUALIZATION; INTEGRATION; DESIGN
AB Dependency structural matrix (DSM) is an approach originally developed for process optimization. It has been successfully applied to identify software dependencies among packages and subsystems. A number of algorithms have been proposed to compute the matrix so that it highlights patterns and problematic dependencies between subsystems. However, existing DSM implementations often miss important information to fully support reengineering effort. For example, they do not clearly qualify and quantify problematic relationships, information that is crucial to support remediation tasks. We propose enriched DSM (eDSM), which provides small-multiple views and micro-macro-readings by adding fine-grained information in each cell of the matrix. Each cell is enriched with contextual information about (i) the type of dependencies (inheritance, class reference, etc.), (ii) the proportion of referencing entities, and (iii) the proportion of referenced entities. We distinguish independent cycles and stress potentially simple fixes for cycles by using coloring information. This work is language independent and has been implemented on top of the Moose software analysis platform. In this paper, we expand our previous work. We improved the cell content information view on the basis of user feedback and performed multiple validations: two different case studies on Moose and Seaside software; one user study for validating eDSM as a usable approach for developers. Solutions to problems identified with eDSM have been performed and retrofitted in analyzed software. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Laval, Jannik] Univ Bordeaux, LaBRI, UMR 5800, F-33400 Talence, France.
   [Ducasse, Stephane] CNRS UMR 8022, INRIA Lille Nord Europe, RMoD Team, USTL, Lille, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite de
   Bordeaux; Universite de Lille
RP Laval, J (corresponding author), Univ Bordeaux, LaBRI, UMR 5800, F-33400 Talence, France.
EM jannik.laval@mines-douai.fr
OI Ducasse, Stephane/0000-0001-6070-6599; Laval, Jannik/0000-0002-7155-5762
CR ADAR E, 2006, P SIGCHI C HUM FACT, P791, DOI DOI 10.1145/1124772.1124889.3
   [Anonymous], T SOFTWARE ENG TSE
   [Anonymous], 2000, Information Visualization: Perception for Design
   [Anonymous], P CSMR 2006 10 EUR C
   Bergel A, 2005, J UNIVERS COMPUT SCI, V11, P1613
   Binkley D, 2005, PROC IEEE INT CONF S, P177
   Binkley D, 2004, IEEE T SOFTWARE ENG, V30, P715, DOI 10.1109/TSE.2004.78
   Briand LC., 2002, P 14 INT C SOFTW ENG, P43, DOI DOI 10.1145/568760.568769
   Browning TR, 2001, IEEE T ENG MANAGE, V48, P292, DOI 10.1109/17.946528
   Demeyer S, 2000, ACM SIGPLAN NOTICES, V35, P166, DOI 10.1145/354222.353183
   Dong Xinyi, 2007, ICSM 2007
   Ducasse S, 2005, IEEE T SOFTWARE ENG, V31, P75, DOI 10.1109/TSE.2005.14
   Ducasse  S., 2011, TECHNICAL REPORT
   DUCASSE S, 2005, TOOLS SOFTWARE MAINT, P55
   Ducasse S, 2006, PROC IEEE INT CONF S, P203
   Ducasse Stephane., 2007, Software Maintenance, P94
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   HEALEY CG, 1993, GRAPH INTER, P107
   Heer J., 2010, ACM QUEUE, V8, P20
   Henry N, 2007, IEEE T VIS COMPUT GR, V13, P1302, DOI 10.1109/TVCG.2007.70582
   Kung DC, 1996, J SYST SOFTWARE, V32, P21, DOI 10.1016/0164-1212(95)00047-X
   Laval J, 2009, WORK CONF REVERSE EN, P113, DOI 10.1109/WCRE.2009.11
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   Lopes A, 2005, LECT NOTES COMPUT SC, V3527, P146
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Martin R.C., 2000, Design Principles and Design Patterns
   Melton H, 2007, EMPIR SOFTW ENG, V12, P389, DOI 10.1007/s10664-006-9033-1
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   STEWARD DV, 1981, IEEE T ENG MANAGE, V28, P71, DOI 10.1109/TEM.1981.6448589
   SULLIVAN K, 2005, P 10 EUR SOFTW ENG C, P166
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   TREISMAN A, 1985, COMPUT VISION GRAPH, V31, P156, DOI 10.1016/S0734-189X(85)80004-9
   Tufte ER, 1997, Beautiful Evidence
   WARFIELD JN, 1973, IEEE T SYST MAN CYB, VSMC3, P441, DOI 10.1109/TSMC.1973.4309270
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 43
TC 3
Z9 3
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2014
VL 44
IS 2
BP 235
EP 257
DI 10.1002/spe.2164
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285BM
UT WOS:000329367700005
OA Green Published
DA 2024-07-18
ER

PT J
AU Surla, BD
AF Surla, Bojana Dimic
TI Developing an Eclipse editor for MARC records using Xtext
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE plug-in; OSGi; Eclipse Modelling Framework; Java; JFace; SWT
ID BIBLIOGRAPHIC RECORDS; XML EDITOR; SOFTWARE; SYSTEM; UNIMARC; MODEL
AB In this paper, we present the idea of developing an editor for MAchine-Readable Cataloguing records that is part of a library management system. The idea was realized and implemented as a part of the library management system BISIS. The objective was to generate an Eclipse plug-in of the editor in an Xtext environment by specifying the Xtext grammar and generating an Eclipse Modelling Framework model of the MAchine-Readable Cataloguing record. The next step was to specify additional features of the editor in the Xtext environment such as content assist and constraints on the record used for checking the correctnessof the input. The implementation of additional functionalities of the editor was carried out in the Eclipse plug-in development environment, and user interface components were implemented by using Standard Widget Toolkit and JFace libraries. A special emphasis is placed on the Eclipse extension model that relies on the Open Services Gateway initiative standard and enables efficient implementation of the systems with a component-based, service-oriented architecture. We took advantage of that model and created an extensible and adoptable application that can be used by any database management system and can be integrated in other library management systems. Finally, we discuss a possible way of extracting applications from Eclipse by using Rich Client Platform technology. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 Univ Novi Sad, Fac Sci, Novi Sad 21000, Serbia.
C3 University of Novi Sad
RP Surla, BD (corresponding author), Univ Novi Sad, Fac Sci, Novi Sad 21000, Serbia.
EM bdimic@uns.ac.rs
FU Ministry of Education and Science of the Republic of Serbia [OI174023]
FX The work was supported by the Ministry of Education and Science of the
   Republic of Serbia, through Project No. OI174023: "Intelligent
   techniques and their integration into wide-spectrum decision support".
CR Belic K, 2008, ELECTRON LIBR, V26, P400, DOI 10.1108/02640470810879536
   Belic K, 2008, COMPUT SCI INF SYST, V5, P61, DOI 10.2298/CSIS0801061B
   Bendisposto J, 2011, SOFTWARE PRACT EXPER, V41, P189, DOI 10.1002/spe.1016
   Boberic D, 2009, ELECTRON LIBR, V27, P474, DOI 10.1108/02640470910966916
   Clayberg E., 2008, Eclipse Plug-ins, VThird edn
   Dimic B, 2010, ELECTRON LIBR, V28, P245, DOI 10.1108/02640471011033611
   Dimic B, 2009, ELECTRON LIBR, V27, P509, DOI 10.1108/02640470910966934
   Dimic Surla B, ECLIPSE EDITOR MARC
   Efftinge S., OpenArchitectureWare 4.1: Check
   Gruber O, 2005, IBM SYST J, V44, P289, DOI 10.1147/sj.442.0289
   Harris Robert., 2004, The Definitive Guide to SWT and JFace
   Ivanovic D, 2011, ELECTRON LIBR, V29, P52, DOI 10.1108/02640471111111433
   Ivanovic D, 2011, SCIENTOMETRICS, V86, P155, DOI 10.1007/s11192-010-0228-2
   Ivanovic D, 2010, PROGRAM-ELECTRON LIB, V44, P229, DOI 10.1108/00330331011064249
   K Lo, 2006, TEACH YOUR ECLIPSE S
   Kolb B, TEXTUAL DSLS OAW XTE
   Kornstädt A, 2010, IEEE SOFTWARE, V27, P78, DOI 10.1109/MS.2010.138
   McAffer Jeff., 2010, Eclipse rich client platform
   Milosavljevic B, 2010, ELECTRON LIBR, V28, P525, DOI 10.1108/02640471011065355
   Milosavljevic B, 2010, ELECTRON LIBR, V28, P286, DOI 10.1108/02640471011033648
   Milosavljevic G, 2011, ELECTRON LIBR, V29, P565, DOI 10.1108/02640471111177035
   Ooi C, 2009, FRONTIERS NEUROINFOR, V3, DOI [10.3389/neuro.11.027.2009, DOI 10.3389/NEUR0.11.027.2009.(AVAILABLE]
   Rössling G, 2009, ELECTRON NOTES THEOR, V224, P3, DOI 10.1016/j.entcs.2008.12.044
   Skrbic S, 2008, SOFTWARE PRACT EXPER, V38, P471, DOI 10.1002/spe.834
   Spjuth O, 2007, BMC BIOINFORMATICS, V8, DOI 10.1186/1471-2105-8-59
   Taft DK., 2006, EWEEK
   Tesendic D, 2009, ELECTRON LIBR, V27, P162, DOI 10.1108/02640470910934669
   Watson GR, 2006, COMPUT SCI ENG, V8, P50, DOI 10.1109/MCSE.2006.64
   Wenig P, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-405
NR 29
TC 2
Z9 2
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2013
VL 43
IS 11
SI SI
BP 1377
EP 1392
DI 10.1002/spe.2140
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 233IF
UT WOS:000325561000008
DA 2024-07-18
ER

PT J
AU Romero, D
   Hermosillo, G
   Taherkordi, A
   Nzekwa, R
   Rouvoy, R
   Eliassen, F
AF Romero, Daniel
   Hermosillo, Gabriel
   Taherkordi, Amirhosein
   Nzekwa, Russel
   Rouvoy, Romain
   Eliassen, Frank
TI The DigiHome Service-Oriented Platform
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE SCA; context-awareness; smart homes
AB Nowadays, the computational devices are everywhere. In malls, offices, streets, cars, and even homes, we can find devices providing and consuming functionality to improve the user satisfaction. These devices include sensors that provide information about the environment state (e.g., temperature, occupancy, light levels), service providers (e.g., Internet TVs, GPS), smartphones (that contain user preferences), and actuators that act on the environment (e.g., closing the blinds, activating the alarm, changing the temperature). Although these devices exhibit communication capabilities, their integration into a larger monitoring system remains a challenging task, partly because of the strong heterogeneity of technologies and protocols. Therefore, in this article, we focus on home environments and propose a middleware solution, called DigiHome, that applies the Service Component Architecture (SCA) component model to integrate data and events generated by heterogeneous devices in this kind of environments. DigiHome exploits the SCA extensibility to incorporate the REpresentational State Transfer (REST) architectural style and, in this way, leverages on the integration of multiscale systems-of-systems (from wireless sensor networks to the Internet). Additionally, the platform applies Complex Event Processing technology that detects application-specific situations. We claim that the modularization of concerns fostered by DigiHome and materialized in a service-oriented architecture, makes it easier to incorporate new services and devices in smart home environments. The benefits of the DigiHome platform are demonstrated on smart home scenarios covering home automation, emergency detection, and energy saving situations. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Romero, Daniel; Hermosillo, Gabriel; Nzekwa, Russel; Rouvoy, Romain] Univ Lille 1, LIFL UMR CNRS 8022, INRIA Lille Nord Europe, ADAM Project Team, F-59650 Villeneuve Dascq, France.
   [Taherkordi, Amirhosein; Eliassen, Frank] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 Universite de Lille; Centre National de la Recherche Scientifique
   (CNRS); University of Oslo
RP Romero, D (corresponding author), Univ Lille 1, LIFL UMR CNRS 8022, INRIA Lille Nord Europe, ADAM Project Team, F-59650 Villeneuve Dascq, France.
EM Daniel.Romero@inria.fr
OI Rouvoy, Romain/0000-0003-1771-8791
FU EGIDE Aurora; INRIA SeaS research initiatives
FX This work is partly funded by the EGIDE Aurora and INRIA SeaS research
   initiatives.
CR [Anonymous], UPNP DEV ARCH 1 0
   [Anonymous], 2000, Dissertation
   Baker CR, 2006, INT ENV 2006 IE 06 2, V1, P51
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   CHURCHER GE, 2009, COMSWARE 2009, P1, DOI DOI 10.1145/1621890.1621898
   COBIS consortium, 2009, COB FP STREP PROJ IS
   Cook DJ, 2003, PROCEEDINGS OF THE FIRST IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS (PERCOM 2003), P521, DOI 10.1109/PERCOM.2003.1192783
   Fok CL, 2006, COORDINATION 04, P135
   Fok L, 2006, IPSN 05
   Guttman E., 1999, SERVICE LOCATION PRO
   HACKMANN G, 2006, DCOSS 06
   Henricksen K, 2005, LECT NOTES COMPUT SC, V3760, P846
   Hu X, 2007, CAMS 07 P 3 INT WORK
   Kirsch-Pinheiro M, 2008, LECT NOTES COMPUT SC, V5331, P571
   Krause M, 2005, LECT NOTES COMPUT SC, V3744, P324
   Luckham David C., 2001, POWER EVENTS INTRO C
   Melisson R., 2010, AUTOMATED SOFTWARE E
   *OP SOA, 2007, SERV COMP ARCH SPEC
   OSGi Alliance, 2004, LIST CONS HARMF WHIT
   Paganelli F., 2006, UNIVERSAL ACCESS AMB, V4397, P173, DOI DOI 10.1007/978-3-540-71025-7_
   Roman M., 2002, IEEE Pervasive Computing, V1, P74, DOI 10.1109/MPRV.2002.1158281
   Romero D, 2010, P 36 EUROMICRO INT C, P4
   Romero D, 2010, LECT NOTES COMPUT SC, V6115, P112, DOI 10.1007/978-3-642-13645-0_9
   Romero D, 2010, LECT NOTES COMPUT SC, V6115, P1, DOI 10.1007/978-3-642-13645-0_1
   Seinturier L, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P268, DOI 10.1109/SCC.2009.27
   Sorensen C., 2004, ACM 2 WORKSHOP MIDDL, P107
   Taherkordi A, 2010, P 6 IEEE INT C DISTR, P15
   TILAK S, 2005, DYNAMIC RESOURCE DIS
   Wang WX, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P165, DOI 10.1109/ISORC.2008.59
   *ZIGB ALL, 2007, ZIGBEE WIR RAD FREQ
NR 30
TC 10
Z9 10
U1 0
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2013
VL 43
IS 10
SI SI
BP 1205
EP 1218
DI 10.1002/spe.1125
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 212YJ
UT WOS:000324018600005
OA Green Published
DA 2024-07-18
ER

PT J
AU Queirós, R
   Leal, JP
AF Queiros, Ricardo
   Leal, Jose Paulo
TI crimsonHex: a learning objects repository for programming exercises
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE eLearning; repositories; SOA; standards; interoperability
AB A repository of learning objects is a system that stores electronic resources in a technology-mediated learning process. The need for this kind of repository is growing as more educators become eager to use digital educational contents and more of it becomes available. The sharing and use of these resources relies on the use of content and communication standards as a means to describe and exchange educational resources, commonly known as learning objects. This paper presents the design and implementation of a service-oriented repository of learning objects called crimsonHex. This repository supports new definitions of learning objects for specialized domains and we illustrate this feature with the definition of programming exercises as learning objects and its validation by the repository. The repository is also fully compliant with existing communication standards and we propose extensions by adding new functions, formalizing message interchange and providing a REST interface. To validate the interoperability features of the repository, we developed a repository plug-in for Moodle that is expected to be included in the next release of this popular learning management system. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Queiros, Ricardo] CRACS & DI ESEIG IPP, Oporto, Portugal.
   [Leal, Jose Paulo] Univ Porto, CRACS & DCC FCUP, P-4100 Oporto, Portugal.
C3 Instituto Politecnico do Porto; Universidade do Porto
RP Queirós, R (corresponding author), CRACS & DI ESEIG IPP, Oporto, Portugal.
EM ricardo.queiros@eu.ipp.pt
RI Leal, José Paulo/C-6071-2009; Queirós, Ricardo F./N-4055-2015
OI Leal, José Paulo/0000-0002-8409-0300; Queiros,
   Ricardo/0000-0002-1985-6285
CR Al-Khalifa H.S., Proceedings of the seventeenth conference on Hypertext and hypermedia - HYPERTEXT '06 (2006), P69, DOI DOI 10.1145/1149941.1149956
   [Anonymous], 2008, TYPOLOGY LEARNING OB, DOI DOI 10.1007/978-3-540-74155-81
   [Anonymous], 2010, REPOSITORIES SUPPORT
   [Anonymous], 2005, IMS APPLICATION PROF
   [Anonymous], 2011, IMS COMMON CARTRIDGE
   [Anonymous], 2011, INFORMATION TECHNOLO
   Cantara L., 2007, METADATA ENCODING AN, P40
   Dagger D, 2007, IEEE INTERNET COMPUT, V11, P28, DOI 10.1109/MIC.2007.70
   Fay E., 2010, BUILDING DIGITAL LIB
   Fielding R. T, 2002, ACM Transactions on Internet Technology (TOIT), V2, P115, DOI [DOI 10.1145/514183.514185, 10.1145/514183.514185]
   Friesen N., 2005, Interdisciplinary Journal of Knowledge and Learning Objects, V1, P23
   Friesen N., 2004, METADATA IN PRACTICE
   IEEE Learning Technology Standards Committee (LTSC), 2011, IEEE LEARNING TECHNO
   IMS DRI-IMS Digital Repositories Interoperability, 2003, CORE FUNCTIONS INFOR
   JORUM team, 2006, TECHNICAL REPORT
   Leal JP, 2009, LECT NOTES BUS INF P, V24, P102
   Leal JP, 2010, ICEIS 10 12TH INTERN
   Leslie S., 2006, COPPUL DISTANCE EDUC
   Massart David, 2010, D-Lib Magazine, V16, DOI 10.1045/november2010-massart
   McCallum SH, 2006, WORLD LIBRARY AND IN
   Meier W, 2003, LECT NOTES COMPUT SC, V2593, P169
   MODS, 2010, MODS USES AND FEATUR
   Nash S. S., 2005, Interdisciplinary Journal of Knowledge and Learning Objects, V1, P217
   Ochoa X, 2009, IEEE T LEARN TECHNOL, V2, P226, DOI 10.1109/TLT.2009.28
   Pons D, 2011, LEARNING TECHNOLOGY, V13
   Queiros R, 2011, HIGHER EDUCATION INS, P142
   Rogers SA, 2003, PORTAL-LIBR ACAD, V3, P125, DOI 10.1353/pla.2003.0018
   SIMON B, 2005, P 1 WORKSH INT WEB B, P11
   Ternier S., 2008, THESIS
   Ternier S, 2010, D LIB MAGAZINE, V16, P957
   Tzikopoulos A., 2007, LEARNING OBJECTS INS, P29, DOI DOI 10.4018/978-1-59904-334-0.CH003
   Verdú E, 2012, COMPUT EDUC, V58, P1, DOI 10.1016/j.compedu.2011.08.015
   Wolpert A., 2009, CWSPACE ARCHIVING MI
NR 33
TC 2
Z9 2
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2013
VL 43
IS 8
SI SI
BP 911
EP 935
DI 10.1002/spe.2132
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 279UM
UT WOS:000328984900002
OA Green Published
DA 2024-07-18
ER

PT J
AU Akinyemi, JA
   Clarke, CLA
AF Akinyemi, John A.
   Clarke, Charles L. A.
TI Fast and effective soft links
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE link recovery; traceable links; requirements traceability
ID TRACEABILITY; CODE
AB Inspired by requirements traceability problems, we present a method for implementing fast and effective hypertext links to specific locations within documents. These soft links do not depend on tags, markup, or closed tool sets, yet they can generally survive extensive edits to a document collection, allowing the targets of these links to be located in real collections after years of ongoing and frequent changes. We base our implementation of soft links on an existing passage retrieval algorithm, originally designed for question answering. The method treats the text surrounding the target of a soft link as a passage to be retrieved, creates a signature for that passage, and resolves the link by searching for the passage. The method is evaluated over a large collection of text and two large collections of source code, one written in the C programming language and one written in Java. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Akinyemi, John A.; Clarke, Charles L. A.] Univ Waterloo, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Clarke, CLA (corresponding author), Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
EM claclark@uwaterloo.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX The first author would like to thank the Natural Sciences and
   Engineering Research Council of Canada (NSERC) for their financial
   support. We also acknowledge the comments made by our anonymous
   reviewers and our colleague Daniel Berry.
CR Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Buttcher S., 2010, Information Retrieval-Implementing and Evaluating Search Engines
   Clarke C. L. A., 2001, SIGIR Forum, P358
   Clarke CLA, 2006, TEXT SPEECH LANG TEC, V32, P259
   Clarke CLA, 2004, 13 ACM INT C INF KNO, P454
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Golovchinsky G., 1997, Eighth ACM Conference on Hypertext, Hypertext '97, P67, DOI 10.1145/267437.267445
   GOLOVCHINSKY G, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P454
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Hammad M, 2009, INT C PROGRAM COMPRE, P20, DOI 10.1109/ICPC.2009.5090024
   Hayes JH, 2007, INNOV SYST SOFTW ENG, V3, P193, DOI 10.1007/s11334-007-0024-1
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Hsin-Yi Jiang, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P59, DOI 10.1109/ASE.2008.16
   Kim S, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P143
   Mader Patrick, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P49, DOI 10.1109/ASE.2008.15
   McNamee P, 2004, INFORM RETRIEVAL, V7, P73, DOI 10.1023/B:INRT.0000009441.78971.be
   McNamee P., 2008, P ACM SIGIR 2008, P813
   Mundie T., 1995, Requirements analysis using SuperTrace PC
   Murta LGP, 2006, IEEE INT CONF AUTOM, P135
   Olston C., 2003, ACM Transactions on Computer-Human Interaction, V10, P177, DOI 10.1145/937549.937550
   Prager John, 2006, Foundations and Trends in Information Retrieval, V1, P91, DOI 10.1561/1500000001
   Ramesh B, 1998, COMMUN ACM, V41, P37, DOI 10.1145/290133.290147
   Shen R, 2006, Opening Information Horizons, P1
   Tellex S., 2003, Proceedings of the 26th ACM SIGIR Conference on Research and Development in Information Retrieval, P41, DOI DOI 10.1145/860435.860445
   Wang X., 2009, P CIKM, P1237
NR 27
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2013
VL 43
IS 5
BP 577
EP 593
DI 10.1002/spe.2122
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 127HW
UT WOS:000317690100005
DA 2024-07-18
ER

PT J
AU Ferrer, J
   Chicano, F
   Alba, E
AF Ferrer, Javier
   Chicano, Francisco
   Alba, Enrique
TI Evolutionary algorithms for the multi-objective test data generation
   problem
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE multi-objective test data generation; branch coverage; oracle cost;
   evolutionary testing; evolutionary algorithms; search-based software
   engineering
ID SOFTWARE TEST DATA; GENETIC ALGORITHM
AB Automatic test data generation is a very popular domain in the field of search-based software engineering. Traditionally, the main goal has been to maximize coverage. However, other objectives can be defined, such as the oracle cost, which is the cost of executing the entire test suite and the cost of checking the system behavior. Indeed, in very large software systems, the cost spent to test the system can be an issue, and then it makes sense by considering two conflicting objectives: maximizing the coverage and minimizing the oracle cost. This is what we did in this paper. We mainly compared two approaches to deal with the multi-objective test data generation problem: a direct multi-objective approach and a combination of a mono-objective algorithm together with multi-objective test case selection optimization. Concretely, in this work, we used four state-of-the-art multi-objective algorithms and two mono-objective evolutionary algorithms followed by a multi-objective test case selection based on Pareto efficiency. The experimental analysis compares these techniques on two different benchmarks. The first one is composed of 800 Java programs created through a program generator. The second benchmark is composed of 13 real programs extracted from the literature. In the direct multi-objective approach, the results indicate that the oracle cost can be properly optimized; however, the full branch coverage of the system poses a great challenge. Regarding the mono-objective algorithms, although they need a second phase of test case selection for reducing the oracle cost, they are very effective in maximizing the branch coverage. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Ferrer, Javier; Chicano, Francisco; Alba, Enrique] Univ Malaga, Dept Lenguajes & Ciencias Comp, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Ferrer, J (corresponding author), Univ Malaga, Dept Lenguajes & Ciencias Comp, E-29071 Malaga, Spain.
EM ferrer@lcc.uma.es
RI Alba, Enrique/KCZ-2486-2024; Ferrer, Javier/A-2498-2011; Chicano,
   Francisco/I-5650-2015; Alba, Enrique/L-8604-2014
OI Ferrer, Javier/0000-0002-1074-0139; Chicano,
   Francisco/0000-0003-1259-2990; Alba, Enrique/0000-0002-5520-8875
FU Spanish Ministry of Science and Innovation; FEDER
   [TIN2008-06491-C04-01]; Andalusian Government [P07-TIC-03044]
FX This work has been partially funded by the Spanish Ministry of Science
   and Innovation and FEDER under contract TIN2008-06491-C04-01 (the M*
   project). It has also been partially funded by the Andalusian Government
   under contract P07-TIC-03044 (DIRICOM project).
CR Ahmed MA, 2008, COMPUT OPER RES, V35, P3107, DOI 10.1016/j.cor.2007.01.012
   Alba E, 2008, OPER RES COMPUT SCI, V42, P1, DOI 10.1007/978-0-387-77610-1
   Alba E, 2008, COMPUT OPER RES, V35, P3161, DOI 10.1016/j.cor.2007.01.016
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   Angeline P. J., 1999, PARETO ARCH EVOLUTIO, V1
   [Anonymous], 1981, SCI PROGRAMMING, DOI DOI 10.1007/978-1-4612-5983-1
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2006, 214 TIK ETH ZUR
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Arcuri A, 2011, APPL SOFT COMPUT, V11, P3494, DOI 10.1016/j.asoc.2011.01.023
   Baresel A., 2004, Software Engineering Notes, V29, P108, DOI 10.1145/1013886.1007527
   Blanco R, 2009, INFORM SOFTWARE TECH, V51, P708, DOI 10.1016/j.infsof.2008.11.001
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Diaz E., 2006, P INT C KNOWLEDGE EN, P229
   Díaz E, 2008, COMPUT OPER RES, V35, P3052, DOI 10.1016/j.cor.2007.01.009
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Durillo JJ, 2006, ITI200610 U MAAL DEP
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   Jones BF, 1996, SOFTWARE ENG J, V11, P299, DOI 10.1049/sej.1996.0040
   Kaldewaij A., 1990, Programming: The Derivation of Algorithms
   King J. C., 1975, Programming Methodology, P278, DOI 10.1145/390016.808444
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Knowles J, 2005, 5th International Conference on Intelligent Systems Design and Applications, Proceedings, P552, DOI 10.1109/ISDA.2005.15
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   May P.S., 2007, THESIS COMPUTING LAB
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525884
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Nebro AJ, 2007, LECT NOTES COMPUT SC, V4403, P126
   Nebro AJ, 2009, INT J INTELL SYST, V24, P726, DOI 10.1002/int.20358
   Rechenberg I, 1973, EVOLUTIONSSTRATGIE O
   Rudolph G., 2000, Evolutionary Computation 1: Basic Algorithms and Operators, P81, DOI DOI 10.1887/0750306645/B877C9
   Tracey N, 2000, SOFTWARE PRACT EXPER, V30, P61, DOI 10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Xanthakis S., 1992, 5 INT C SOFTWARE ENG, P625
   Xiao M, 2007, EMPIR SOFTW ENG, V12, P183, DOI 10.1007/s10664-006-9026-0
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zhan Y, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1941
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2001, 103 GLOR 35
NR 44
TC 52
Z9 54
U1 2
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2012
VL 42
IS 11
BP 1331
EP 1362
DI 10.1002/spe.1135
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015OV
UT WOS:000309456700002
OA Green Published
DA 2024-07-18
ER

PT J
AU Hartel, PH
   Muller, HL
AF Hartel, Pieter H.
   Muller, Henk L.
TI Simple algebraic data types for C
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE algebraic data types; pattern matching; software tool
AB Adt is a simple tool in the spirit of Lex and Yacc that makes monomorphic algebraic data types, polymorphic built-in types like the list and an efficient form of pattern matching available in C programs. C programs built with ADTs typically use NULL pointers only to indicate don't care values, and not as sentinels. This reduces the scope for errors involving NULL pointers. The Adt tool generates runtime checks, which catch many of the remaining NULL pointer dereferences. The runtime checks may consume a significant amount of CPU time; hence they can be switched off once the program is suitably debugged. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Hartel, Pieter H.] Univ Twente, CTIT, Enschede, Netherlands.
   [Muller, Henk L.] XMOS Ltd, Bristol, Avon, England.
C3 University of Twente
RP Hartel, PH (corresponding author), Univ Twente, CTIT, Enschede, Netherlands.
EM Pieter.hartel@utwente.nl
OI Hartel, Pieter/0000-0002-0411-0421
CR [Anonymous], 1997, The Definition of Standard ML
   Barr Michael., 2006, PROGRAMMING EMBEDDED
   Bird R., 1988, INTRO FUNCTIONAL PRO
   Brooks Frederick P., 1995, The mythical man-month
   Bush WR, 2000, SOFTWARE PRACT EXPER, V30, P775, DOI 10.1002/(SICI)1097-024X(200006)30:7<775::AID-SPE309>3.0.CO;2-H
   Clocksin W., 1987, PROGRAMMING PROLOG
   de Jong HA, 2004, J LOGIC ALGEBR PROGR, V59, P35, DOI 10.1016/j.jlap.2003.12.002
   Deitel P, 2010, C PROGRAM
   GROSCH J, 1991, LECT NOTES COMPUT SC, V477, P106
   Hoare CAR, 2009, INT SOFTW DEV C QCON
   IANNELLO G, 1990, SOFTWARE PRACT EXPER, V20, P243, DOI 10.1002/spe.4380200303
   Jacobs M, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P95
   Laufer K, 1995, C OBJ OR TECHN COOTS
   McNamara B, 2000, ACM SIGPLAN NOTICES, V35, P118, DOI 10.1145/357766.351251
   Moreau PE, 2003, LECT NOTES COMPUT SC, V2622, P61
   Nicholas D., 1978, LIT BIBLIOMETRICS
   Odersky M., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P146, DOI 10.1145/263699.263715
   Odersky M., 2007, Programming in Scala
   Overbey JL, 2009, LECT NOTES COMPUT SC, V5452, P114, DOI 10.1007/978-3-642-00434-6_8
   Owens HD, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P104, DOI 10.1109/ICSM.1996.564994
   Savidis A, 2004, SOFTWARE PRACT EXPER, V34, P977, DOI 10.1002/spe.600
   Schaling B, 2008, BOOST C LIBARIES
   Toetenel W. J., 1998, Systems Implementation 2000. IFIP TC2 WG2.4 Working Conference on Systems Implementation 2000: Languages, Methods and Tools, P263
   van den Brand M, 2005, IEE P-SOFTW, V152, P70, DOI 10.1049/ip-sen:20041181
   van den Brand MGJ, 2000, SOFTWARE PRACT EXPER, V30, P259, DOI 10.1002/(SICI)1097-024X(200003)30:3<259::AID-SPE298>3.0.CO;2-Y
   Wang DC, 1997, C DOM SPEC LANG DSL
NR 26
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2012
VL 42
IS 2
BP 191
EP 210
DI 10.1002/spe.1058
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 880OQ
UT WOS:000299417200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Stanier, J
   Watson, D
AF Stanier, James
   Watson, Des
TI A study of irreducibility in C programs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE control flow; irreducibility; structural analysis; C; open source
ID GRAPHS; LOOPS
AB Compilers use a variety of techniques to optimize and transform loops. However, many of these optimizations do not work when the loop is irreducible. Node splitting techniques transform irreducible loops into reducible loops, but many real-world compilers choose to leave them unoptimized. This article describes an empirical study of irreducibility in current versions of open-source software, and then compares them with older versions. We also study machine-generated C code from a number of software tools. We find that irreducibility is extremely rare, and is becoming less common with time. We conclude that leaving irreducible loops unoptimized is a perfectly feasible future-proof option due to the rarity of its occurrence in non-trivial software. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Stanier, James; Watson, Des] Univ Sussex, Sch Informat, Brighton BN1 9QJ, E Sussex, England.
C3 University of Sussex
RP Stanier, J (corresponding author), Univ Sussex, Sch Informat, Brighton BN1 9QJ, E Sussex, England.
EM j.stanier@sussex.ac.uk
FU EPSRC
FX The authors thank Dan Chalmers, Neil Johnson, Alan Lawrence and
   Christopher Gautier for their time and constructive feedback on a draft
   of this article. They also thank the anonymous reviewers for spotting
   some errors and for their suggestions. J. Stanier is supported by a
   studentship from the EPSRC.
CR Aho AV, 1973, STOC, P253
   Allen F.E., 1970, ACM Sigplan Not, V5, P1, DOI [DOI 10.1145/800028.808479, 10.1145/390013.808479, DOI 10.1145/390013.808479]
   Allen FE, 1972, 3923 IBM RC TJ WATS
   AMMARGUELLAT Z, 1992, IEEE T SOFTWARE ENG, V18, P237, DOI 10.1109/32.126773
   [Anonymous], TIOBE PROGR COMM IND
   [Anonymous], 1977, Flow Analysis of Computer Programs
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Ashenhurst R. L., 1987, COMMUN ACM, V30, P350, DOI DOI 10.1145/22899.315729
   Ashenhurst RL, 1987, COMMUN ACM, V30, P195
   Barli ND, 2000, JOHO SHORI GAKKAI KE, P37
   Carter L, 2003, P 30 ACM SIGPLSIGACT, P106
   Chevance R. J., 1978, SIGPLAN Notices, V13, P44, DOI 10.1145/953411.953414
   Cocke J., 1970, ACM SIGPLAN NOTICES P S COMPILER OPTIMIZ, V5, P20, DOI [10.1145/390013.808480, DOI 10.1145/390013.808480]
   Collberg C, 2007, SOFTWARE PRACT EXPER, V37, P581, DOI 10.1002/spe.776
   COOK RP, 1982, SOFTWARE PRACT EXPER, V12, P195, DOI 10.1002/spe.4380120209
   Cooper K. D., 2002, BUILDING CONTROL FOL
   Cooper KD, 2003, ITERATIVE DATA FLOW
   Corti M, 2004, EMSOFT 04 P 4 ACM IN, P269
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   EROSA AM, 1994, PROCEEDINGS OF THE 1994 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, P229, DOI 10.1109/ICCL.1994.288377
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Havlak P, 1997, ACM T PROGR LANG SYS, V19, P557, DOI 10.1145/262004.262005
   Havlak P., 1993, P 6 INT WORKSHOP LAN, V768, P477
   HECHT MS, 1974, J ACM, V21, P367, DOI 10.1145/321832.321835
   Hecht MS, 1973, STOC 73 P 5 ANN ACM, P253
   Hopcroft J.E., 1972, P 6 ANN PRINCETON C, P119
   Janssen J, 1997, ACM T PROGR LANG SYS, V19, P1031, DOI 10.1145/267959.269971
   Johnson N., 2004, THESIS U CAMBRIDGE
   Johnstone A, P EUR C SOFTW MAINT, P83
   Knuth D. E., 1971, Software - Practice and Experience, V1, P105, DOI 10.1002/spe.4380010203
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Muchnick S., 1997, ADV COMPILER DESIGN
   SAAL HJ, 1977, COMPUT LANG, V2, P47, DOI 10.1016/0096-0551(77)90007-8
   Saal HJ, 1975, APL 75 P 7 INT C APL, P292
   Salvadori A., 1975, SIGPLAN Notices, V10, P20, DOI 10.1145/956028.956031
   SHARIR M, 1980, COMPUT LANG, V5, P141, DOI 10.1016/0096-0551(80)90007-7
   Tarjan R., 1973, STOC 73, P96
   Unger S, 2002, ACM T PROGR LANG SYS, V24, P299, DOI 10.1145/567097.567098
   Upton E., 2006, THESIS U CAMBRIDGE
   Weise D, 1994, P 21 ACM S PRINC PRO, P297
NR 40
TC 8
Z9 9
U1 0
U2 1
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2012
VL 42
IS 1
BP 117
EP 130
DI 10.1002/spe.1059
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 869KG
UT WOS:000298596200007
DA 2024-07-18
ER

PT J
AU Greer, D
   Hamon, Y
AF Greer, Des
   Hamon, Yann
TI Agile Software Development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE agile software development; safety critical software; open-source
   software; user experience design; lean software development
AB This focus section contains papers related to agile software development. The papers address a range of research areas including the application of agile methods to safety critical software development, the relationship of agile development with user experience design and how to measure flow in lean software development.
C1 [Greer, Des] Queens Univ Belfast, Sch Comp Sci, Belfast BT7 1NN, Antrim, North Ireland.
C3 Queens University Belfast
RP Greer, D (corresponding author), Queens Univ Belfast, Sch Comp Sci, Belfast BT7 1NN, Antrim, North Ireland.
OI Greer, Des/0000-0001-6367-9274
CR Ferreira J, 2011, SOFTWARE PRACT EXPER, V41, P963, DOI 10.1002/spe.1012
   Gary K, 2011, SOFTWARE PRACT EXPER, V41, P945, DOI 10.1002/spe.1075
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
NR 3
TC 22
Z9 27
U1 35
U2 159
PU WILEY-BLACKWELL
PI MALDEN
PA COMMERCE PLACE, 350 MAIN ST, MALDEN 02148, MA USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2011
VL 41
IS 9
SI SI
BP 943
EP 944
DI 10.1002/spe.1100
PG 2
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 792IR
UT WOS:000292737400001
OA Bronze
DA 2024-07-18
ER

PT J
AU Estrella-Balderrama, A
   Fowler, JJ
   Kobourov, SG
AF Estrella-Balderrama, A.
   Fowler, J. J.
   Kobourov, S. G.
TI GraphSET, a tool for simultaneous graph drawing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE graph drawing; simultaneous embedding
ID VISUALIZATION; ALGORITHMS; EMBEDDINGS; LAYOUT; TREES; SYSTEM
AB Problems in simultaneous graph drawing involve the layout of several graphs on a shared vertex set. This paper describes a Graph Simultaneous Embedding Tool, GraphSET, designed to allow the investigation of a wide range of graph embedding problems. GraphSET can be used in the study of several variants of simultaneous embedding including simultaneous geometric embedding, simultaneous embedding with fixed edges, and colored simultaneous embedding with the vertex set partitioned into color classes. The tool has three primary uses: (i) studying theoretical problems in simultaneous graph drawing through the production of examples and counterexamples, (ii) producing layouts of given classes of graphs using built-in implementations of known algorithms, and (iii) providing a platform for development and implementation of new algorithms and data structures for all variants of simultaneous graph embedding. We also describe the design decisions involved in the construction of GraphSET in terms of the requirements dictated by its applications. GraphSET along with movies illustrating its utility are available at http://graphset.cs.arizona.edu. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Estrella-Balderrama, A.; Fowler, J. J.; Kobourov, S. G.] Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
C3 University of Arizona
RP Estrella-Balderrama, A (corresponding author), Google Inc, Mountain View, CA USA.
EM alexeb@google.com
RI Kobourov, Stephen/A-3016-2008
OI Kobourov, Stephen/0000-0002-0477-2724
FU National Science Foundation [CCF-0545743, ACR-0222920]
FX This work was supported by National Science Foundation (grant numbers:
   CCF-0545743 and ACR-0222920).
CR BOOTH KS, 1976, J COMPUT SYST SCI, V13, P335, DOI 10.1016/S0022-0000(76)80045-1
   Brandes U, 2007, LECT NOTES COMPUT SC, V4598, P254
   Chimani M, 2008, IEEE PACIFIC VISUALISATION SYMPOSIUM 2008, PROCEEDINGS, P33
   DIETZ P, 2001, 14 ACM S US INT SOFT, P219
   Eades P., 1984, C NUMERANTIUM, V42, P149
   Erten C, 2004, LECT NOTES COMPUT SC, V2912, P437
   Estrella-Balderrama A, 2008, LECT NOTES COMPUT SC, V4875, P280
   Estrella-Balderrama A, 2007, LECT NOTES COMPUT SC, V4372, P367
   Even S., 1976, Theoretical Computer Science, V2, P339, DOI 10.1016/0304-3975(76)90086-4
   Fary I., 1948, Acta Sci. Math., V11, P229
   Fowler JJ, 2008, LECT NOTES COMPUT SC, V4875, P69
   Fowler JJ, 2008, LECT NOTES COMPUT SC, V4875, P37
   FRUCHTERMAN TMJ, 1991, SOFTWARE PRACT EXPER, V21, P1129, DOI 10.1002/spe.4380211102
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Gassner E, 2006, LECT NOTES COMPUT SC, V4271, P325
   Geyer M, 2006, LECT NOTES COMPUT SC, V3843, P201
   Gutwenger C, 2002, LECT NOTES COMPUT SC, V2265, P473
   Harrigan M, 2008, LECT NOTES COMPUT SC, V4875, P62
   Healy P, 1999, LECT NOTES COMPUT SC, V1731, P205
   KAMADA T, 1989, INFORM PROCESS LETT, V31, P7, DOI 10.1016/0020-0190(89)90102-6
   Kobourov SG, 2004, LECT NOTES COMPUT SC, V3383, P492
   Kuratowski C., 1930, FUND MATH, V15, P271
   LAMPING J, 1995, ACM SIGCHI, P401
   Lempel A., 1967, Theory of graphs-international symposium, P215
   Marshall MS, 2001, SOFTWARE PRACT EXPER, V31, P739, DOI 10.1002/spe.385
   Mehlhorn K., 1999, LEDA PLATFORM COMBIN
   Munzner T, 2003, ACM T GRAPHIC, V22, P453, DOI 10.1145/882262.882291
   PRIIFER H, 1918, ARCH MATH PHYS, V27, P142
   Wiese R, 2002, LECT NOTES COMPUT SC, V2265, P453
   Wilf H.S., 1980, COMBINATORIAL ALGORI
   WILF HS, 1981, J ALGORITHM, V2, P204, DOI 10.1016/0196-6774(81)90021-3
NR 32
TC 1
Z9 1
U1 0
U2 2
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2010
VL 40
IS 10
BP 849
EP 863
DI 10.1002/spe.958
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 644EE
UT WOS:000281355100001
DA 2024-07-18
ER

PT J
AU Schoeberl, M
   Puffitsch, W
   Pedersen, RU
   Huber, B
AF Schoeberl, Martin
   Puffitsch, Wolfgang
   Pedersen, Rasmus Ulslev
   Huber, Benedikt
TI Worst-case execution time analysis for a Java processor
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE worst-case execution time; Java processor; real-time system
ID INSTRUCTION CACHE; VIRTUAL MACHINE; WCET ANALYSIS
AB In this paper, we propose a solution for a worst-case execution time (WCET) analyzable Java system: a combination of a time-predictable Java processor and a tool that performs WCET analysis at Java bytecode level. We present a Java processor, called JOP, designed for time-predictable execution of real-time tasks. The execution time of bytecodes, the instructions of the Java virtual machine, is known to cycle accuracy for JOP. Therefore, JOP simplifies the low-level WCET analysis. A method cache, which fills whole Java methods into the cache, simplifies cache analysis. The WCET analysis tool is based on integer linear programming. The tool performs the low-level analysis at the bytecode level and integrates the method cache analysis. An integrated data-flow analysis performs receiver-type analysis for dynamic method dispatches and loop-bound analysis. Furthermore, a model checking approach to WCET analysis is presented where the method cache can be exactly simulated. The combination of the time-predictable Java processor and the WCET analysis tool is evaluated with standard WCET benchmarks and three real-time applications. The WCET friendly architecture of JOP and the integrated method cache analysis yield tight WCET bounds. Comparing the exact, but expensive, model checking-based analysis of the method cache with the static approach demonstrates that the static approximation of the method cache is sufficiently tight for practical purposes. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Schoeberl, Martin; Puffitsch, Wolfgang; Huber, Benedikt] Vienna Univ Technol, Inst Comp Engn, Vienna, Austria.
   [Pedersen, Rasmus Ulslev] Copenhagen Business Sch, Dept Informat, Copenhagen, Denmark.
C3 Technische Universitat Wien; Copenhagen Business School
RP Schoeberl, M (corresponding author), Vienna Univ Technol, Inst Comp Engn, Vienna, Austria.
EM mschoebe@mail.tuwien.ac.at
OI Puffitsch, Wolfgang/0009-0004-9363-4519; Schoeberl,
   Martin/0000-0003-2366-382X
CR *ABSINT ANG INF GM, 2008, PAG PROGR AN GEN US
   [Anonymous], P 6 INT WORKSH JAV T
   [Anonymous], P 12 IEEE REC ARCH W
   ARNOLD R, 1994, REAL TIM SYST SYMP P, P172, DOI 10.1109/REAL.1994.342718
   Artho C, 2005, ELECTRON NOTES THEOR, V141, P109, DOI 10.1016/j.entcs.2005.02.034
   BACON DF, 1996, OOPSLA, P324
   Bate I, 2002, ISORC 2002: FIFTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P83, DOI 10.1109/ISORC.2002.1003664
   Bate I, 2000, SEVENTH INTERNATIONAL CONFERENCE ON REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P39, DOI 10.1109/RTCSA.2000.896369
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Bernat G, 2000, EUROMICRO, P81, DOI 10.1109/EMRTS.2000.853995
   BOLLELA G, 2000, JAVA SERIES
   BusquetsMataix JV, 1996, 1996 IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P204, DOI 10.1109/RTTAS.1996.509537
   CULLMANN C, 2007, P 7 INT WORKSH WORST, P53
   DAHM M, 2001, TECHNICAL REPORT, P11
   DUBBING B, 1998, P 1998 ANN ACM SLGAD, P1
   Engblom J., 2003, International Journal on Software Tools for Technology Transfer, V4, P437
   Ferdinand C, 1999, REAL-TIME SYST, V17, P131, DOI 10.1023/A:1008186323068
   GRUIAN F, 2007, 5 INT WORKSH JAV TEC, P222
   GUSTAFSSON J, 2000, THESIS UPPSALA U, P248
   Gustafsson J, 2006, REAL TIM SYST SYMP P, P57, DOI 10.1109/RTSS.2006.12
   HALFHILL TR, 2000, HOSYS HEDGES BETS JA, P1
   Hardin DS, 2001, FOURTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P53, DOI 10.1109/ISORC.2001.922817
   HARMON T, 2007, P 15 INT WORKSH PAR
   HARMON T, 2009, THESIS U CALIF, P307
   HARMON T, 2008, P 14 IEEE REAL TIM E
   Harmon T, 2007, 13TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P209, DOI 10.1109/RTCSA.2007.44
   Healy C, 2000, REAL-TIME SYST, V18, P129, DOI 10.1023/A:1008189014032
   Healy CA, 1995, IEEE REAL TIME, P288, DOI 10.1109/REAL.1995.495218
   Healy CA, 1999, IEEE T COMPUT, V48, P53, DOI 10.1109/12.743411
   Heckmann R, 2003, P IEEE, V91, P1038, DOI 10.1109/JPROC.2003.814618
   HENTIES F, 2009, 2 INT WORKSH CERT SA
   Hu EYS, 2003, LECT NOTES COMPUT SC, V2889, P411
   Hu EYS, 2002, ISORC 2002: FIFTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P109, DOI 10.1109/ISORC.2002.1003667
   HUNT JJ, 2006, P 4 INT WORKSH JAV T, P162
   *IMSYS, 2004, IM1101C CJIP TECHN R
   KIRNER R, 2007, P 2 INT WORKSH WORST, P77
   Kreuzinger J, 2003, MICROPROCESS MICROSY, V27, P19, DOI 10.1016/S0141-9331(02)00082-0
   Kristensen L. M., 2002, FME 2002: Formal Methods-Getting IT Right. International Symposium of Formal Methods Europe (Lecture Notes in Computer Science Volume 2391), P549
   Lee CG, 1998, IEEE T COMPUT, V47, P700, DOI 10.1109/12.689649
   Li YTS, 1995, IEEE REAL TIME, P298, DOI 10.1109/REAL.1995.495219
   LI YTS, 1995, LCTES 95, P88
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Lundqvist T., 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P12, DOI 10.1109/REAL.1999.818824
   *MAL REAL TIM RES, 2009, WCET BENCHM
   Nielson F., 1999, Principles of Program Analysis
   OConnor JM, 1997, IEEE MICRO, V17, P45, DOI 10.1109/40.592314
   OUIMET M, 2007, ESLTIK00212 MIT
   PEDERSEN RU, 2006, P 4 WORKSH KNOWL DIS, P97
   PITTER C, 2009, THESIS VIENNA U TECH
   PRANTL A, 2008, 18 WORKSH LOG BAS ME, P77
   PREUSSER TB, 2007, P 5 INT WORKSH JAV T, P206
   PUFFITSCH W, 2007, THESIS VIENNA U TECH, P113
   Puschner P, 2002, PROCEEDINGS OF THE SEVENTH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, P85, DOI 10.1109/WORDS.2002.1000040
   Puschner P, 2001, EUROMICRO, P45, DOI 10.1109/EMRTS.2001.933998
   Puschner P, 2000, REAL-TIME SYST, V18, P115, DOI 10.1023/A:1008119029962
   PUSCHNER P, 1989, J REAL TIME SYSTEMS, V1, P159
   Puschner PP, 1997, REAL-TIME SYST, V13, P67, DOI 10.1023/A:1007905003094
   Reineke J, 2007, REAL-TIME SYST, V37, P99, DOI 10.1007/s11241-007-9032-3
   Schoeberl M, 2004, LECT NOTES COMPUT SC, V3292, P371
   SCHOEBERL M, 2005, THESIS VIENNA U TECH, P240
   Schoeberl M., 2006, P DESIGN AUTOMATION, P800
   Schoeberl M., 2006, JTRES 06, P202, DOI DOI 10.1145/1167999.1168033]
   SCHOEBERL M, 2009, P 1 INT WORKSH SOFTW
   Schoeberl M, 2009, JOP REFERENCE HDB BU
   Schoeberl M, 2008, J SYSTEMS ARCHITECTU, V54, P265
   SCHOEBERL M, 2005, EVALUATION JAVA PROC, P127
   Schoeberl M, 2009, EURASIP J EMBED SYST, DOI 10.1155/2009/758480
   SHAW AC, 1989, IEEE T SOFTWARE ENG, V15, P875, DOI 10.1109/32.29487
   SHIVERS C, 1988, PLDI 88 P ACM SIGPLA, P164
   SHIVERS O, 1991, SIGPLAN NOTICES, V26, P190, DOI 10.1145/115866.115884
   *SUN MICR, 1999, PICOJAVA 2 PROGR REF
   *SUN MICR, 1999, PICOJAVA 2 MICR GUID
   Sundaresan V, 2000, ACM SIGPLAN NOTICES, V35, P264, DOI 10.1145/354222.353189
   Uhrig Sascha., 2007, Proceedings of the 5th international workshop on Java technologies for real-time and embedded systems, JTRES '07, P230
   Vallee-Rai R., 1999, CASCON 1999, P125
   Wells JM, 2003, NUTR RES REV, V16, P21, DOI 10.1079/NRR200358
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Wilhelm R, 2009, IEEE T COMPUT AID D, V28, P966, DOI 10.1109/TCAD.2009.2013287
   Zabel M, 2007, DSD 2007: 10TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN ARCHITECTURES, METHODS AND TOOLS, PROCEEDINGS, P59, DOI 10.1109/DSD.2007.4341450
NR 79
TC 38
Z9 41
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2010
VL 40
IS 6
BP 507
EP 542
DI 10.1002/spe.968
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 592CH
UT WOS:000277352100002
DA 2024-07-18
ER

PT J
AU Anh, VN
   Moffat, A
AF Anh, Vo Ngoc
   Moffat, Alistair
TI Index compression using 64-bit words
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance; measurement; index compression; information retrieval
ID TEXT RETRIEVAL; INFORMATION-RETRIEVAL; INVERTED FILES; SYSTEMS
AB Modern computers typically make use of 64-bit words as the fundamental unit of data access. However the decade-long migration from 32-bit architectures has not been reflected in compression technology, because of a widespread assumption that effective compression techniques operate in terms of bits or bytes, rather than words. Here we demonstrate that the use of 64-bit access units, especially in connection with word-bounded codes, does indeed provide the opportunity for improving the compression performance. In particular, we extend several 32-bit word-bounded coding schemes to 64-bit operation and explore their uses in information retrieval applications. Our results show that the Simple-8b approach, a 64-bit word-bounded code, is an excellent self-skipping code, and has a clear advantage over its competitors in supporting fast query evaluation when the data being compressed represents the inverted index for a large text collection. The advantages of the new code also accrue on 32-bit architectures, and for all of Boolean. ranked, and phrase queries; which means that it can be used in any situation. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Anh, Vo Ngoc; Moffat, Alistair] Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Moffat, A (corresponding author), Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
EM alistair@csse.uninielb.edu.au
FU Australian Research Council; ARC Center for Perceptive and Intelligent
   Machines in Complex Environments; Google Research Award
FX This work was supported by the Australian Research Council and the ARC
   Center for Perceptive and Intelligent Machines in Complex Environments,
   and by a Google Research Award grant.
CR Anh VN, 2006, IEEE T KNOWL DATA EN, V18, P857, DOI 10.1109/TKDE.2006.99
   Anh VN, 2005, INFORM RETRIEVAL, V8, P151, DOI 10.1023/B:INRT.0000048490.99518.5c
   Barbay J, 2006, LECT NOTES COMPUT SC, V4007, P146
   Brisaboa NR, 2003, LECT NOTES COMPUT SC, V2857, P122
   BUTTCHER S, 2006, UNALIGNED BINARY COD, P10
   Buttcher Stefan, 2007, P 16 ACM C INF KNOWL, P761, DOI DOI 10.1145/1321440.1321546
   Cheng CS, 2006, INFORM PROCESS MANAG, V42, P407, DOI 10.1016/j.ipm.2005.02.002
   Culpepper JS, 2007, LECT NOTES COMPUT SC, V4726, P137
   GOLOMB SW, 1966, IEEE T INFORM THEORY, V12, P399, DOI 10.1109/TIT.1966.1053907
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Moffat A, 1996, ACM T INFORM SYST, V14, P349, DOI 10.1145/237496.237497
   Moffat A, 2000, INFORM RETRIEVAL, V3, P25, DOI 10.1023/A:1013002601898
   SCHOLER F, 2003, P 25 ANN INT ACM SIG, P222
   Strohman T., 2007, P 30 ANN INT ACM SIG, P175
   Strohman Trevor., 2005, PROC 28 INT ACM SIGI, P219
   Trotman A, 2003, INFORM RETRIEVAL, V6, P5, DOI 10.1023/A:1022949613039
   TROTMAN A, 2007, P 2007 ACM SIGIR INT, P983
   Williams HE, 1999, COMPUT J, V42, P193, DOI 10.1093/comjnl/42.3.193
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   Zhang J., 2008, P 17 INT C WORLD WID, P387, DOI [DOI 10.1145/1367497.1367550, 10.1145/ 1367497.1367550]
   Ziviani N, 2000, COMPUTER, V33, P37, DOI 10.1109/2.881693
   ZOBEL J, 1995, SOFTWARE PRACT EXPER, V25, P891, DOI 10.1002/spe.4380250804
   Zobel J, 2006, ACM COMPUT SURV, V38, DOI 10.1145/1132956.1132959
   Zukowski Marcin, 2006, ICDE 59, DOI DOI 10.1109/ICDE.2006.150
NR 24
TC 59
Z9 77
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2010
VL 40
IS 2
BP 131
EP 147
DI 10.1002/spe.948
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 561AE
UT WOS:000274946400002
DA 2024-07-18
ER

PT J
AU Milanovic, M
   Gasevic, D
   Giurca, A
   Wagner, G
   Devedlzic, V
AF Milanovic, Milan
   Gasevic, Dragan
   Giurca, Adrian
   Wagner, Gerd
   Devedlzic, Vladan
TI Bridging concrete and abstract syntaxes in model-driven engineering: a
   case of rule languages
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE model-driven engineering; metamodels; transformation languages; syntax
ID TRANSFORMATION
AB The paper covers the problem of bridging the gap between abstract and textual concrete syntaxes of software languages in the model-driven engineering (MDE) context. This problem has been well studied in the context of programming languages, but due to the obvious difference in the definitions of abstract syntax, MDE requires a new set of engineering principles. We first explore different approaches to defining abstract and concrete syntaxes in the MDE context. Next, we investigate the current state of languages and techniques used for bridging between textual concrete and abstract syntaxes in the context of MDE. Finally, we report on lessons learned in experimenting with the current technologies. In order to provide a comprehensive coverage of the problem under study, we have selected a case of Web rule languages. Web rule languages leverage various types of syntax specification languages; and they are complex in nature and large in terms of the language elements. Thus, they provide us with a realistic analysis framework based on which we can draw general conclusions. Based on the series of experiments that we conducted with the analyzed languages, we propose a method for approaching such problems and report on the empirical results obtained from the data collected during our experiments. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Gasevic, Dragan] Athabasca Univ, Sch Comp & Informat Syst, Athabasca, AB, Canada.
   [Milanovic, Milan; Devedlzic, Vladan] Univ Belgrade, FON Sch Business Adm, Belgrade, Serbia.
   [Giurca, Adrian; Wagner, Gerd] Brandenburg Tech Univ Cottbus, Inst Informat, Cottbus, Germany.
C3 Athabasca University; University of Belgrade; Brandenburg University of
   Technology Cottbus
RP Gasevic, D (corresponding author), Athabasca Univ, Sch Comp & Informat Syst, Athabasca, AB, Canada.
EM dgasevic@acm.org
RI Giurca, Adrian/B-5805-2011; Gasevic, Dragan/AAT-3909-2020; Devedzic,
   Vladan/AAM-3208-2020
OI Gasevic, Dragan/0000-0001-9265-1908; Devedzic,
   Vladan/0000-0002-5790-0240; Wagner, Gerd/0000-0003-3049-8885
FU Natural and Engineering Sciences Research Council of Canada
FX The research of Athabasca University has in part been supported by the
   Natural and Engineering Sciences Research Council of Canada.
CR AKHTAR W, 2007, 20071214 DERI TR, P432
   [Anonymous], 2009, ATLAS TRANSFORMATION
   [Anonymous], 2004, W3C recommendation
   [Anonymous], JESS, the Rule Engine for the Java platform
   ARISHOLM E, 2008, P 1 WORKSH EMP STUD
   Badea L, 2006, LECT NOTES COMPUT SC, V4187, P78
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   BEZIVIN J, 2006, P MET S ESBJ DENM
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   BILLIG A, 2004, ACM IFIP USENIX INT, P493
   BOLEY H, 2004, P 2004 IEEE WIC ACM, P628
   BOLEY H, 2001, LECT NOTES COMPUTER, V2543, P5
   Brickley D., 2004, RDF VOCABULARY DESCR
   BROCKMANS S, 2006, METAMODEL UML PROFIL
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   DELFABRO DM, 2007, P SAC 07 SEOUL KOR, P963
   Duddy K, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P174, DOI 10.1109/EDOC.2003.1233847
   ENGELEN L, 2009, ELECT NOTES THEORETI
   FAVRE JM, 2007, SOFTWARE LINGUISTICS
   FAVRE JM, 2004, P UML2004 INT WORKSH
   Fondement F, 2005, LECT NOTES COMPUT SC, V3748, P190
   GINSBERG A, 2006, RIF USE CAS IN PRESS
   Hirtle D., 2006, SCHEMA SPECIFICATION
   Hori M, 2003, OWL WEB ONTOLOGY LAN
   Horrocks I., 2004, W3C MEMBER SUBMISSIO
   *JBOSS, JBOSS DROOLS BUS RUL
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Jovanovic J, 2005, EXPERT SYST APPL, V29, P535, DOI 10.1016/j.eswa.2005.04.024
   KIFER M, 1995, J ASSOC COMPUT MACH, V42, P741, DOI 10.1145/210332.210335
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   KURTEV I, 2002, TECHNOLOGICAL SPACES, P1
   Lassila O., Resource description framework (rdf) model and syntax specification
   LIANG H, 2008, P 1 INT C SOFTW LANG, P245
   MATHEUS CJ, 2004, P 3 INT WORKSH RUL R, P194
   metasploit, MET FRAM
   MILANOVIC M, 2006, P 6 WORKSH OCL MET M, P81
   Muller PA, 2006, LECT NOTES COMPUT SC, V4199, P98
   *OMG, 2006, AD20060501 OMG
   *OMG, 2005, 051101 OMG
   *OMG, 2006, FORM060501 OMG
   *OMG, 2005, FORM060101 OMG
   *OMG, 2005, FORM20050901 OMG
   RAFFEINER S, 2005, THESIS VIENNA U TECH
   Seidewitz E, 2003, IEEE SOFTWARE, V20, P26, DOI 10.1109/MS.2003.1231147
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sintek M, 2002, LECT NOTES COMPUT SC, V2342, P364
   Thurston AD, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P117
   VANAMSTEL MF, 2008, 1 INT C MOD TRANSF Z, P61
   VANDENBRAND MGJ, 2004, LECT NOTES COMPUTER, V2027, P365
   Visser E, 2003, LECT NOTES COMPUT SC, V3016, P216
   WAGNER G, 2006, LANGUAGE IMPROVEMENT
   WAGNER G, 2005, P DAGST SEM 05371 IN
   2009, REWERSE 11 RULE MARK
NR 54
TC 3
Z9 4
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2009
VL 39
IS 16
BP 1313
EP 1346
DI 10.1002/spe.938
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 513QF
UT WOS:000271337300001
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Francese, R
   Passero, I
   Tortora, G
AF De Lucia, Andrea
   Francese, Rita
   Passero, Ignazio
   Tortora, Genoveffa
TI Development and evaluation of a system enhancing Second Life to support
   synchronous role-based collaborative learning
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE e-learning; virtual world; computer supported collaborative learning
ID EDUCATION; ISSUES
AB Research and commercial interest toward 3D virtual worlds are recently growing because they probably represent the new direction for the next generation of web applications. Although these environments present several features that are useful for informal collaboration, structured collaboration is required to effectively use them in a working or in a didactical setting. This paper presents a system supporting synchronous collaborative learning by naturally enriching Learning Management System services with meeting management and multimedia features. Monitoring and moderation of discussions are also managed at a single group and at the teaching level. The Second Life (SL) environment has been integrated with two ad hoc developed Moodle plug-ins and SL objects have been designed, modeled, and programmed to support synchronous role-based collaborative activities. We also enriched SL with tools to support the capturing and displaying of textual information during collaborative sessions for successive retrieval. In addition, the multimedia support has been enhanced with functionalities for navigating multimedia contents. We also report on an empirical study aiming at evaluating the use of the proposed SL collaborative learning as compared with face-to-face group collaboration. Results show that the two approaches are statistically undistinguishable in terms of performance, comfort with communication, and overall satisfaction. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [De Lucia, Andrea; Francese, Rita; Passero, Ignazio; Tortora, Genoveffa] Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, SA, Italy.
C3 University of Salerno
RP Francese, R (corresponding author), Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, SA, Italy.
EM francese@unisa.it
RI De Lucia, Andrea/AAG-6781-2020; Passero, Ignazio/AAF-8780-2019; Passero,
   Ignazio/B-6564-2015; Passero, Ignazio/AAZ-7426-2020
OI Passero, Ignazio/0000-0001-9844-4301; De Lucia,
   Andrea/0000-0002-4238-1425
CR ALAVI M, 1995, MIS QUART, V19, P293, DOI 10.2307/249597
   Calefato F, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3
   CARLSSON C, 1993, IEEE VIRTUAL REALITY ANNUAL INTERNATIONAL SYMPOSIUM, P394, DOI 10.1109/VRAIS.1993.380753
   Carroll JM, 2003, INT J HUM-COMPUT ST, V58, P605, DOI 10.1016/S1071-5819(03)00024-7
   Chittaro L, 2007, COMPUT EDUC, V49, P3, DOI 10.1016/j.compedu.2005.06.002
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   De Lucia A, 2009, COMPUT EDUC, V52, P220, DOI 10.1016/j.compedu.2008.08.001
   DIBLAS N, 2007, VIRTUAL REALITY SPEC, P1434
   Eberspächer H, 2005, 5th IEEE International Conference on Advanced Learning Technologies, Proceedings, P64, DOI 10.1109/ICALT.2005.21
   EDWARDS C, 2006, IEEE ENG TECHNOLOGY, V1, P28
   Ellis C. A., 1991, Communications of the ACM, V34, P39, DOI 10.1145/99977.99987
   FABRI M, 2004, MEDIATING EXPRESSION
   Fabri Marc., 1999, Lecture Notes in Computer Science, V1739
   Gibbons J.D., 1985, NONPARAMETRIC STAT I
   GREENBERG S, 1996, AWARENESS FISHEYE VI, P28
   Harrer A, 2008, 8TH IEEE INTERNATIONAL CONFERENCE ON ADVANCED LEARNING TECHNOLOGIES, PROCEEDINGS, P41, DOI 10.1109/ICALT.2008.249
   Heater C., 1992, Presence: Teleoperators and Virtual Environments, V1, P262, DOI DOI 10.1162/PRES.1992.1.2.262
   KEMP J, 2006, PUTTING 2 LIFE METAV, P5
   KIRKPATRICK M, 2008, LINDEN LABS IBM BREA
   Light J, 2002, IPCC 2002, REFLECTIONS ON COMMUNICATION, PROCEEDINGS, P271, DOI 10.1109/IPCC.2002.1049110
   LING C, 2003, P ICCT BEIJ CHIN, V2, P1655
   Messinger P. R., 2008, Journal of Virtual Worlds Research, V1, P1
   Miller R.G., 1969, Simultaneous statistical inference
   NIJHOLT A, J PERSONAL UBIQUITOU, DOI DOI 10.1007/S00779-007-0168-X
   Normally J. C., 1994, PSYCHOMETRIC THEORY
   Oppenheim N.A., 1992, QUESTIONNAIRE DESIGN
   Prensky M., 2001, HORIZON, V9, P1, DOI [10.1108/10748120110424816, DOI 10.1108/10748120110424816, 10.1108/10748120110424843]
   Rosenman M., 2006, DESIGN COMPUTING COG, P695
   RYMASZEWSKI M, 2007, 2 LIFE OFFICE GUIDE, P4
   Schmidt K., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P285, DOI 10.1023/A:1021272909573
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Stearns H, 2006, FOURTH INTERNATIONAL CONFERENCE ON CREATING, CONNECTING AND COLLABORATING THROUGH COMPUTING, PROCEEDINGS, P136, DOI 10.1109/C5.2006.5
   STEPHENS MA, 1974, J AM STAT ASSOC, V69, P730, DOI 10.2307/2286009
   van Welbergen H, 2006, IEEE INTELL SYST, V21, P47, DOI 10.1109/MIS.2006.101
   Witmer BG, 1998, PRESENCE-TELEOP VIRT, V7, P225, DOI 10.1162/105474698565686
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   2007, P 2 LIF ED WORKSH 2, P1
NR 37
TC 15
Z9 18
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG 25
PY 2009
VL 39
IS 12
BP 1025
EP 1054
DI 10.1002/spe.926
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 482CF
UT WOS:000268860600001
DA 2024-07-18
ER

PT J
AU Amme, W
   von Ronne, J
   Adler, P
   Franz, M
AF Amme, Wolfram
   von Ronne, Jeffery
   Adler, Philipp
   Franz, Michael
TI The effectiveness of producer-side machine-independent optimizations for
   mobile code
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE machine-independent optimization; register pressure; mobile code;
   SafeTSA
ID IMPLEMENTATION; PERFORMANCE; SAFE
AB Portable mobile code is often executed by a host virtual machine using just-in-time compilation. In this context, the compilation time in the host virtual machine is critical. This compilation time can be reduced if optimizations are performed ahead-of-time before distribution of the mobile code. Unfortunately, the portable nature of mobile code limits ahead-of-time optimizations to those that are machine-independent. This work examines the effect of machine-independent optimizations on the performance of mobile code applications. All experiments use the SafeTSA Format, a mobile code format that is based on Static Single Assignment Form (SSA Form). The experiments, which are performed on both the PowerPC and IA32 architectures, indicate that the effects of performing classical machine-independent optimizations are-in fact-quite machine-dependent. Nevertheless, the results demonstrate that applying such optimizations in a mobile code system can be beneficial. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [von Ronne, Jeffery] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
   [Amme, Wolfram; Adler, Philipp] Univ Jena, Dept Math & Comp Sci, Jena, Germany.
   [Franz, Michael] Univ Calif Irvine, Dept Comp Sci, Irvine, CA USA.
C3 University of Texas System; University of Texas at San Antonio (UTSA);
   Friedrich Schiller University of Jena; University of California System;
   University of California Irvine
RP von Ronne, J (corresponding author), Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
EM vonronne@cs.utsa.edu
OI von Ronne, Jeffery/0000-0002-6575-196X
CR AdlTabatabai AR, 1996, ACM SIGPLAN NOTICES, V31, P127, DOI 10.1145/249069.231402
   ALLEN FE, 1969, INT TRACTS COMPUTER, V13, P239
   Amme W, 2001, ACM SIGPLAN NOTICES, V36, P137, DOI 10.1145/381694.378825
   Amme W, 2007, ACM T ARCHIT CODE OP, V4, DOI 10.1145/1250727.1250733
   Amme W, 2007, ELECTRON NOTES THEOR, V176, P97, DOI 10.1016/j.entcs.2006.06.019
   Arnold M, 2002, ACM SIGPLAN NOTICES, V37, P111, DOI 10.1145/583854.582432
   AUSLANDER J, 1996, P ACM SIGPLAN 96 C P, P149
   BENITEZ EM, 1994, LECT NOTES COMPUTER, V782, P105
   BRIGGS P, 1994, SIGPLAN NOTICES, V29, P159, DOI 10.1145/773473.178257
   Bull JM, 2000, CONCURRENCY-PRACT EX, V12, P375, DOI 10.1002/1096-9128(200005)12:6<375::AID-CPE480>3.0.CO;2-M
   CLICK CN, 1995, THESIS RICE U HOUSTO, P140
   Cocke J., 1970, P S COMPILER OPTIMIZ, V5, DOI [DOI 10.1145/800028.808480, 10.1145/390013.808480]
   CRELIER R, 1990, 1990TR125 SWISS FED, P46
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Gosling J., 2005, JAVA LANGUAGE SPECIF, P688
   GROVE D, 1999, P ACM 1999 C JAV GRA, P129
   Gupta R, 1999, LECT NOTES COMPUT SC, V1575, P107
   Hall M. W., 1991, Proceedings Supercomputing '91 (Cat. No.91CH3058-5), P424, DOI 10.1145/125826.126055
   HARTMANN A, 2004, ELECT NOTES THEORETI, V82, P362
   Holzle U, 1996, ACM T PROGR LANG SYS, V18, P355, DOI 10.1145/233561.233562
   *IBM CORP, 2002, JIK RES VIRT MACH US, P95
   Ishizaki K, 2003, ACM SIGPLAN NOTICES, V38, P187, DOI 10.1145/949343.949322
   Ishizaki K, 2000, CONCURRENCY-PRACT EX, V12, P457, DOI 10.1002/1096-9128(200005)12:6<457::AID-CPE485>3.0.CO;2-0
   Kildall Gary A., 1973, Proceedings of the 1st Annual ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages. POPL'73, P194
   KNOOP J, 1992, SIGPLAN NOTICES, V27, P224, DOI 10.1145/143103.143136
   LEE H, 2004, CUCS97204 U COL DEP
   Lee H, 2006, SOFTWARE PRACT EXPER, V36, P835, DOI [10.1002/spe.718, 10.1002/spc.718]
   Liang S, 1998, ACM SIGPLAN NOTICES, V33, P36, DOI 10.1145/286942.286945
   Manson Jeremy., 2005, Proceedings of the 32Nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, POPL'05, P378, DOI DOI 10.1145/1040305.1040336
   MORGAN R, 1998, BUILDING OPTIMIZING, P450
   MUCHNICK SS, 1997, ADV COMPILER DESIGN, P856
   Paleczny M, 2001, USENIX ASSOCIATION PROCEEDINGS JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P1
   Poletto M, 1999, ACM T PROGR LANG SYS, V21, P895, DOI 10.1145/330249.330250
   RADHAKRISHNAN R, 2000, P 6 INT S HIGH PERF, P387
   Tip F, 2003, COMMUN ACM, V46, P35, DOI 10.1145/859670.859695
   Tip F, 2002, ACM T PROGR LANG SYS, V24, P625, DOI 10.1145/586088.586090
   VALLEERAI R, 1999, IBM CTR ADV STUD C, V13, P1
   von Praun C, 2004, LECT NOTES COMPUT SC, V2958, P390
   von Ronne J, 2009, CONCURR COMP-PRACT E, V21, P41, DOI 10.1002/cpe.1341
   VONRONNE J, 2006, CSTR2006004 U TEX SA, P46
   Whaley John., 2001, Partial method compilation using dynamic profile information, P166
   Wimmer Christian., 2005, P ACMUSENIX INT C VI, P132
NR 42
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2009
VL 39
IS 10
BP 923
EP 946
DI 10.1002/spe.921
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 464HR
UT WOS:000267496500003
DA 2024-07-18
ER

PT J
AU Lin, L
   Prowell, SJ
   Poore, JH
AF Lin, L.
   Prowell, S. J.
   Poore, J. H.
TI The impact of requirements changes on specifications and state machines
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE requirements management; change management; requirements elicitation and
   tracking; sequence-based software specification; changing state
   diagrams; Mealy machine; automaton
ID CANONICAL WORDS; REPRESENTATION; SEMIAUTOMATA; EQUIVALENCES
AB Requirements change both during and after a phase of development for a variety of reasons, including error correction and feature changes. Requirements change management is one of the most complex and difficult problems to deal with in requirements elicitation and tracking. It is generally not understood how a specific change propagates through the specification and into the code. In this paper we capture requirements changes as series of atomic changes in specifications. Using a rigorous specification method called sequence-based specification, we propose a set of algorithms for managing all possible atomic requirements changes. The algorithms have been formulated within an axiom system for sequence-based specification and proven for correctness. They have also been implemented in a prototype tool with which users are able to push requirements changes through to changes in specifications, maintain old specifications over time and evolve them into new specifications with the least amount of human interaction and rework. The approach of utilizing state machines to model and manage requirements changes guarantees strong evidence about the correctness and completeness of the proposed theory that will lead to more reliable software in the presence of change, especially with embedded systems and safety-critical systems. The solution described is general enough for adoption by software and system developers, and well suited for incremental development. Copyright (C) 2008 John Wiley & Sons., Ltd.
C1 [Lin, L.; Poore, J. H.] Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville, TN 37996 USA.
   [Prowell, S. J.] Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
C3 University of Tennessee System; University of Tennessee Knoxville;
   Carnegie Mellon University; Software Engineering Institute
RP Lin, L (corresponding author), Univ Tennessee, Dept Elect Engn & Comp Sci, 203 Claxton Complex,1122 Volunteer Blvd, Knoxville, TN 37996 USA.
EM lin@cs.utk.edu
RI Prowell, Stacy/H-5082-2016
OI Prowell, Stacy/0000-0002-2104-5641
CR AJILA S, 1995, SOFTWARE PRACT EXPER, V25, P1155, DOI 10.1002/spe.4380251006
   [Anonymous], 1994, A classical mind: essays in honour of C. A. R. Hoare
   BARTUSSEK W, 1978, P 2 C EUR COOP INF V, P211
   BAUER T, 2007, 00707E IESE
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   Briand LC, 2003, PROC IEEE INT CONF S, P256, DOI 10.1109/ICSM.2003.1235428
   Brzozowski J, 2005, INT J FOUND COMPUT S, V16, P831, DOI 10.1142/S0129054105003327
   Brzozowski J., 2004, CS200430 U WAT
   Brzozowski JA, 2006, THEOR COMPUT SCI, V356, P46, DOI 10.1016/j.tcs.2006.01.040
   BRZOZOWSKI JA, 1964, J ACM, V11, P481, DOI 10.1145/321239.321249
   Brzozowski J, 2007, INT J FOUND COMPUT S, V18, P1065, DOI 10.1142/S0129054107005133
   Harker S., 1993, P IEEE INT S REQUIRE, P266, DOI DOI 10.1109/ISRE.1993.324847
   Hassine J, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P81, DOI 10.1109/IWPSE.2005.8
   Hoare CAR., 1985, Communicating Sequential Processes
   Hopcroft PJ, 2005, ELECTRON NOTES THEOR, V128, P127, DOI 10.1016/j.entcs.2005.04.008
   Ibrahim S., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P453
   Janicki R, 2001, IEEE T SOFTWARE ENG, V27, P577, DOI 10.1109/32.935852
   Jones C, 1996, COMPUTER, V29, P92, DOI 10.1109/2.507640
   Kobayashi A, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P171, DOI 10.1109/ECBS.2001.922419
   Lavazza L, 2000, 4TH INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P106, DOI 10.1109/ICRE.2000.855597
   Lee M, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P61, DOI 10.1109/TOOLS.2000.868959
   Linger R.C., 1979, Structured Programming; Theory and Practice the Systems Programming Series
   LOCK S, 1999, AUSTR J INFORM SYSTE, V6, P38
   MILLS HD, 1975, COMMUN ACM, V18, P43, DOI 10.1145/360569.360659
   MORICONI M, 1990, IEEE T SOFTWARE ENG, V16, P980, DOI 10.1109/32.58785
   NURMULIANI N, 2006, P 11 AUSTR WORKSH RE
   PRNAS DL, 1989, 89261 QUEENS U
   Prowell S. J., 2004, P 4 AM NUCL SOC INT
   Strens MR, 1996, IEEE SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P278, DOI 10.1109/ECBS.1996.494539
   Xiaolin Hu, 2007, Proceedings of the 2006 IEEE International Conference on Information Reuse and Integration (IEEE Cat. No.06EX1467)
NR 30
TC 8
Z9 8
U1 0
U2 2
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2009
VL 39
IS 6
BP 573
EP 610
DI 10.1002/spe.907
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 429SR
UT WOS:000264940900002
DA 2024-07-18
ER

PT J
AU Skrbic, S
   Surla, D
AF Skrbic, Srdan
   Surla, Dusan
TI Bibliographic records editor in XML native environment
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE XML native database; UNIMARC; library information system
AB In this paper, we examine the possibilities of XML native database usage in the construction of library information systems. We describe modelling and implementation of an editor designed for the processing of bibliographic matter in the form of UNIMARC XML bibliographic records. Modelling processes are described using UML notation. Java programming language and Tamino XML native database environment are used for the implementation of the editor. Copyright (C) 2007 John Wiley & Sons, Ltd.
C1 [Skrbic, Srdan; Surla, Dusan] Univ Novi Sad, Fac Sci, Dept Math & Informat, Novi Sad 21000, Serbia.
C3 University of Novi Sad
RP Skrbic, S (corresponding author), Univ Novi Sad, Fac Sci, Dept Math & Informat, Trg Dositeja Obradovica 4, Novi Sad 21000, Serbia.
EM shkrba@uns.ns.ac.yu
RI Skrbic, Srdjan/B-7180-2013; Surla, Dušan I/E-8666-2012
OI Surla, Dušan I/0000-0003-2040-8735; Skrbic, Srdjan/0000-0002-3993-4092
CR BOAG S, 2006, XQUERY 1 0 XML QUERY
   Bourret R., 2009, XML Database Products
   Budimir G., 2004, NOVI SAD J MATH, V34, P107
   Clark J., 1999, XML Path Language (XPath) Version 1.0
   *IFLA UN BIBL CONT, 1994, UNIMARC MAN BIBL FOR
   Jagadish HV, 2002, VLDB J, V11, P274, DOI 10.1007/s00778-002-0081-x
   Jaksic M, 2004, SOFTWARE PRACT EXPER, V34, P1051, DOI 10.1002/spe.603
   MIJIC V, 2003, THESIS U NOVI SAD
   Milosavljevic B, 2002, FOURTH INTERNATIONAL SYMPOSIUM ON MULTIMEDIA SOFTWARE ENGINEERING, PROCEEDINGS, P114, DOI 10.1109/MMSE.2002.1181603
   MILOSAVLJEVIC B, 2004, P INT C DISTR LIB SY, P141
   SKRBIC S, 2004, P 16 C APPL MATH PRI, P267
   SKRBIC S, 2004, P 16 C APPL MATH PRI, P275
   SURLA D, 2004, P INT C DISTR LIB SY, P13
   Vidakovic J, 2006, SOFTWARE PRACT EXPER, V36, P513, DOI 10.1002/spe.707
   ZARIC M, 2004, P INT C DISTR LIB SY, P213
   ZEREMSKI M, 2002, THESIS U NOVI SAD
NR 16
TC 3
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR 25
PY 2008
VL 38
IS 5
BP 471
EP 491
DI 10.1002/spe.834
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 289YR
UT WOS:000255090300002
DA 2024-07-18
ER

PT J
AU Pearce, DJ
   Webster, M
   Berry, R
   Kelly, PHJ
AF Pearce, David J.
   Webster, Matthew
   Berry, Robert
   Kelly, Paul H. J.
TI Profiling with AspectJ
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE AspectJ; AOP; Java; profiling; performance
AB This paper investigates whether AspectJ can be used for efficient profiling of Java programs. Profiling differs from other applications of AOP (e.g. tracing), since it necessitates efficient and often complex interactions with the target program. As such, it was uncertain whether AspectJ could achieve this goal. Therefore, we investigate four common profiling problems (heap usage, object lifetime, wasted time and time-spent) and report on how well AspectJ handles them. For each, we provide an efficient implementation, discuss any trade-offs or limitations and present the results of an experimental evaluation into the costs of using it. Our conclusions are mixed. On the one hand, we find that AspectJ is sufficiently expressive to describe the four profiling problems and reasonably efficient in most cases. On the other hand, we find several limitations with the current AspectJ implementation that severely hamper its suitability for profiling. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Univ Victoria, Sch Math Stat & Comp Sci, Wellington, New Zealand.
   IBM Corp, Winchester, Hants, England.
   Univ London Imperial Coll Sci Technol & Med, Dept Comp, London, England.
C3 Victoria University Wellington; International Business Machines (IBM);
   Imperial College London
RP Pearce, DJ (corresponding author), Univ Victoria, Sch Math Stat & Comp Sci, Wellington, New Zealand.
EM david.pearce@mcs.vuw.ac.nz
OI Berry, Robert/0000-0003-3395-046X; Pearce, David/0000-0003-4535-9677
CR AGESEN O, 2000, P INT S MEM MAN MINN, P121
   AMMONS G, 1997, ACM C PROGR LANG DES, P85
   ANDERSON J, 1997, P 16 ACM S OP SYST P, P1
   ANDERSON TE, 1990, PERF E R SI, V18, P115, DOI 10.1145/98460.98518
   Arnold M, 2002, ACM SIGPLAN NOTICES, V37, P111, DOI 10.1145/583854.582432
   ARNOLD M, 2001, P ACM SIGPLAN 2001 C, P168, DOI DOI 10.1145/378795.378832
   BALL T, 1994, ACM T PROGR LANG SYS, V16, P1319, DOI 10.1145/183432.183527
   Baxter ID, 2004, PROC INT CONF SOFTW, P625, DOI 10.1109/ICSE.2004.1317484
   Boner J., 2004, PROC AOSD 2004, P5
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   Brear D. J., 2003, IEE Proceedings-Software, V150, P235, DOI 10.1049/ip-sen:20030807
   CAIN HW, 2001, P EUR C PAR PROC EUR, P108
   Cheng P, 1998, ACM SIGPLAN NOTICES, V33, P162, DOI 10.1145/277652.277718
   Clifton C, 2000, ACM SIGPLAN NOTICES, V35, P130, DOI 10.1145/354222.353181
   COADY Y, 2001, P 8 EUR SOFTW ENG C, P88
   DAHM B, 2001, B1798 FREIE U BERL
   DESRIVIRES J, 1991, ART METAOBJECT PROTO
   DUFOUR B, 2004, P 19 ANN ACM SIGPLAN, P150
   Gradecki J.D., 2003, MASTERING ASPECTJ AS
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   Hall RJ, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P107, DOI 10.1109/ASE.2002.1114999
   Hanenberg Stefan., 2003, Proceedings of the 2nd International Conference On Asped-Oriented Software Development (AOSD'03), P80
   Hilsdale E., 2004, INT C ASPECT ORIENTE, P26
   Hirzel M., 2002, P INT S MEMORY MANAG, P36
   HULL M, 2004, P ECL TECHN EXCH ETX
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KIM H, 2002, THESIS TRINTY COLL D
   KUZINS S, 2004, THESIS OXFORD U
   Laddad Ramnivas., 2003, ASPECTJ ACTION
   Lee WH, 2003, INFORM SCIENCES, V151, P27, DOI 10.1016/S0020-0255(02)00405-X
   Liang S, 1999, PROCEEDINGS OF THE FIFTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS '99), P229
   MAHONY AD, 2004, P EUR C PAR PROC EUR, P119
   MARINOV D, 2003, P C OBJ OR PROGR SYS, P313
   MCDIRMID S, 2003, P ACM C ASP OR SOFTW
   Melski D, 1999, LECT NOTES COMPUT SC, V1575, P47
   MITHELL N, 2003, P EUR C OBJ OR PROGR, P351
   Ossher H., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P734, DOI 10.1109/ICSE.2000.870483
   PEARCE D, 2002, P 12 INT C MOD TOOLS, P220
   POPOVICI A., 2002, P 1 INT C ASPECT ORI, P141
   Rojemo Niklas., 1996, Proceedings of the first ACM SIGPLAN International Conference on Functional Programming, P34, DOI DOI 10.1145/232627.232633
   Sakurai Kouhei., 2004, AOSD 04, P16
   SHAHAM R, 2001, P ACM SIGPLAN 2001 C, P104
   Spinczyk O., 2002, CR PIT 02 P 40 INT C, P53
   Spivey JM, 2004, SOFTWARE PRACT EXPER, V34, P249, DOI 10.1002/spe.562
   SRIVASTAVA A, 1994, P SIGPLAN 94 C PROGR, P196
   *STAND PERF CORP, 2006, SPEC JVM98 BENCHM
   STRATEGO VE, 2001, P INT C REWR TECHN A, P357
   Watterson S., 2001, Compiler Construction. 10th International Conference, CC 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2027), P319
   Whaley John., 2000, JAVA 00, P78
   Yeung K, 2004, PERFORMANCE ANALYSIS AND GRID COMPUTING, P175
   Zorn B., 1988, Proceedings of the Summer 1988 USENIX Conference, P223
NR 51
TC 35
Z9 36
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2007
VL 37
IS 7
BP 747
EP 777
DI 10.1002/spe.788
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 176BT
UT WOS:000247058400004
DA 2024-07-18
ER

PT J
AU Sharma, S
   Baek, I
   Chiueh, TC
AF Sharma, Srikant
   Baek, Inho
   Chiueh, Tzi-cker
TI OmniCon: a Mobile IP-based vertical handoff system for wireless LAN and
   GPRS links
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE vertical handoff; QoS; GPRS; 802.11b (Wi-Fi); wireless LAN; network
   address translation
AB Wi-Fi based hotspots offer mobile users broadband wireless Internet connectivity in public work spaces and corporate/university campuses. Despite the aggressive deployment of these hotspots in recent years, highspeed wireless Internet access remains restricted to small geographical areas due to the limited physical coverage of wireless LANs. On the other hand, despite their lower throughput, cellular networks have a significantly wider coverage and are thus much more available. Recognizing that 2.5G or 3G cellular networks can effectively complement wireless LANs, we set out to develop a vertical handoff system that allows mobile users to seamlessly fall back to such cellular networks as the general packet radio service (GPRS) or 3G whenever wireless LAN connectivity is not available. The resulting handoff mechanism allows a network connection of a mobile node to operate over multiple wireless access networks in a way that is transparent to end user applications. In this paper, we present the design, implementation, and evaluation of a fully operational vertical handoff system, called OmniCon, which enables mobile nodes to automatically switch between wireless LAN and GPRS, based on wireless LAN availability, by introducing a simple extension to the existing Mobile IP implementation. We discuss the design issues in the proposed vertical handoff system for heterogeneous networks, including connection setup problems due to network address translation, and the disparity in link characteristics between wireless LANs and GPRS. A detailed performance evaluation study of the OmniCon prototype demonstrates its ability to migrate active network connections between these two wireless technologies with low handoff latency and close to zero packet loss. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11790 USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP Chiueh, TC (corresponding author), SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11790 USA.
EM chiueh@cs.sunysb.edu
CR Baker M., 1996, P 1996 USENIX TECHN
   BAKRE A, 1995, P 2 USENIX S MOB LOC
   Blake S, 1998, REQUEST COMMENTS 247, V2475
   BUDDHIKOT M, 2003, P IEEE INFOCOM 03 C
   CHAKRAVORTY R, 2003, P 1 ACM USENIX INT C
   DAVIE B, 2002, REQUEST COMMENTS 324
   Droms R., 1997, REQUEST COMMENTS 213
   *IEEE, 1999, IEEE STAND WIR LAN M
   *MICR CORP, 2003, WIND DDK NDIS 5 0 OV
   Perkins C.E., 1996, IP MOBILITY SUPPORT
   POLLINI GP, 1996, IEEE COMMUNICATI MAR
   RUBINI A, VIRTUAL NETWORK INTE
   SHARMA S, 2002, P ACM SPIE C MULT CO
   STEM M, 1998, ACM MOBILE NETWORKIN, V3
   WANG H, 1999, P 2 INT WORKSH MOB C
NR 15
TC 12
Z9 13
U1 1
U2 4
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2007
VL 37
IS 7
BP 779
EP 798
DI 10.1002/spe.790
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 176BT
UT WOS:000247058400005
DA 2024-07-18
ER

PT J
AU Wang, YH
   Wu, IC
   Jiang, JY
AF Wang, Yi-Hsien
   Wu, I-Chen
   Jiang, Jyh-Yaw
TI A portable AWT/Swing architecture for Java game development
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java AWT; NET; CWT; CYC window toolkit; DirectX; OpenGL
AB Recently, the performance of Java platforms has been greatly improved to satisfy the requirements for game development. However, the rendering performance of Java 1.1, which is still used by about one-third of current Web browser users, is not sufficient for high-profile games. Therefore, practically, Java game developers, especially those who use applets, have to take this into consideration in most environments. In order to solve the above problems, this paper proposes a portable window toolkit architecture called the CYC Window Toolkit (CWT) with the ability to: (1) reach high rendering performance particularly in Java 1.1 applications and applets when using DirectX to render widgets in CWT; (2) support AWT/Swing compatible widgets, so hence the CWT can be easily applied to existing Java games; (3) define a general architecture that supports multiple graphics libraries such as AWT, DirectX and OpenGL, multiple virtual machines such as Java VM and NET CLR, and multiple operating systems (OSs) such as Microsoft Windows, Mac OS and UNIX-based OSs; (4) provide programmers with one-to-one mapping APIs to directly manipulate DirectX objects and other game-related properties. The CWT has also been applied to an online Java game system to demonstrate the proposed architecture. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
C3 National Yang Ming Chiao Tung University
RP Wu, IC (corresponding author), Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
EM icwu@csic.netu.edu.tw
RI Wu, I-Chen/AAB-2645-2021
OI Wu, I-Chen/0000-0003-2535-0587
CR Bellotti F, 2001, SOFTWARE PRACT EXPER, V31, P259, DOI 10.1002/spe.365
   CHARVA PR, 2006, JAVA WINDOWING TOOLK
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GRAY A, 2006, GC USAGE STAT
   Hsu CC, 2006, INFORM SOFTWARE TECH, V48, P471, DOI 10.1016/j.infsof.2005.05.005
   *IBM CORP, 2006, SWT STAND WIDG TOOLK
   *IONCHR INC, 2006, JAV GAM
   *IWJGL ORG, 2006, JWJGL LIGHTW JAV GAM
   *JAG LTD, 2006, RUN
   *JAUS, 2006, GL4JAV OP JAV
   Marner J, 2002, EVALUATING JAVA GAME
   *MICR CORP, 2006, MICR VIS 4
   *MICR CORP, 2006, MICR JAV VIRT MACH S
   *MICR CORP, 2000, DIR PLATF SDK
   *MICR CORP, 2006, MICR DIR
   *OP ARCH REV BOARD, 2006, OP OP GRAPH LIB
   *OP GROUP, 2006, MOT GUI TOOLK
   Petzold C., 1998, Programming Windows, Vfifth
   Phipps G, 1999, SOFTWARE PRACT EXPER, V29, P345, DOI 10.1002/(SICI)1097-024X(19990410)29:4<345::AID-SPE238>3.0.CO;2-C
   QUINN E, 1998, IDC B
   ROLLINGS A, 2003, A ROLLING E ADAMS GA
   *SUN MICR INC, 2001, VOL API US GUID
   *SUN MICR INC, 1997, AWT 1 0 1 1
   *SUN MICR INC, BUG ID 6260751 APPL
   *SUN MICR INC, 2006, JAV 3D
   *SUN MICR INC, 2001, HIGH PERF GRAPH GRAP
   *SUN MICR INC, 1997, JAV FDN CLASS NOW FU
   *SUN MICR INC, 2006, BUG ID 5104393 PROV
   *SUN MICR INC, 2004, NEW JAV 2D FEAT J2SE
   *SUN MICR INC, 2003, PAINT AWT SWING
   *SUN MICR INC, 2006, JOGL JAV BIND OP API
   *SUN MICR INC, 2005, SINGL THREAD REND OP
   *SUN MICR INC, 2004, SYST PROP JAV 2D TEC
   *SUN MICR INC, 1997, JAV AWT DEL EV MOD
   *SUN MICR INC, 1995, ABSTR WIND TOOLK AWT
   SWEENEY T, 2000, T SWEENEY EPIC GAMES
   *THINK INT TECHN C, 2006, CYC GAM
   Wu IC, 2004, IEICE T INF SYST, VE87D, P2503
   *YAH INC, 2006, YAH GAM
NR 39
TC 1
Z9 1
U1 2
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2007
VL 37
IS 7
BP 727
EP 745
DI 10.1002/spe.786
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 176BT
UT WOS:000247058400003
DA 2024-07-18
ER

PT J
AU Tremblay, G
   Champagne, F
AF Tremblay, G.
   Champagne, F.
TI Marking musical dictations using the edit distance algorithm
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE symbolic music representation; marking of musical dictation; edit
   distance and sequence comparison
AB Musical dictations for ear training and training in music writing form a key practice of basic musical training. Marking students' dictation exercises for large groups of students can require a lot of work. In this paper, we present a tool, called CADiM, that can help automate the marking of such musical dictations. The edit distance, which computes the similarity between any two strings, has been used in various areas such as string/text analysis, protein/genome matching in bio-computing and musical applications, for example music retrieval or musicological analysis. CADiM's marking algorithm is based on an earlier edit distance proposed for musical sequences, but adapted to reflect the marking heuristic used by a domain expert's specific approach to musical training. Computing an edit distance on musical scores requires using an appropriate representation. More precisely, given our specific context, a symbolic representation is required. We use MusicXML, an XML application for standard Western music notation. Given a Document Type Definition for MusicXML, existing Java tools can generate a MusicXML parser. Such a parser, given appropriate input files, then generates an intermediate form (DOM object) on which analyses and transformations are performed in order to compute the edit distance. In turn, the edit distance is used to give a mark as well as identify the key errors. CADiM has been applied to a number of test cases and the results compared with those obtained by a domain expert. Overall, the results are promising, namely, only 3% difference between the domain expert's marks and those produced by CADiM. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Univ Quebec, Dept Informat, Montreal, PQ H3C 3P8, Canada.
C3 University of Quebec; University of Quebec Montreal
RP Tremblay, G (corresponding author), Univ Quebec, Dept Informat, CP 8888 Succ Ctr Ville, Montreal, PQ H3C 3P8, Canada.
EM tremblay.guy@uqam.ca
CR [Anonymous], P INT COMP MUS C
   [Anonymous], 2002, PROCEEDING 1 INT IEE
   Good M., 2002, P 1 INT C MAX2002 MU, P47
   Haus G., 2001, P INT S MUSIC INFORM, P65
   LEMSTROM K, 2000, P AISB 2000 S CREAT, P53
   MCNAB RJ, 1996, P 19 AUSTR COMP SCI, P301
   MONGEAU M, 1990, COMPUT HUMANITIES, V24, P161, DOI 10.1007/BF00117340
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Orpen K.S., 1992, Computers in music research, V4, P1
   Shmulevich I, 2001, COMPUT HUMANITIES, V35, P23, DOI 10.1023/A:1002629217152
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 16
TC 2
Z9 2
U1 0
U2 1
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2007
VL 37
IS 2
BP 207
EP 230
DI 10.1002/spe.764
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Arts &amp; Humanities Citation Index (A&amp;HCI)
SC Computer Science
GA 136GY
UT WOS:000244211800005
OA Bronze
DA 2024-07-18
ER

PT J
AU Liao, HC
   Chen, WF
AF Liao, Hsien-Chou
   Chen, Wen-Feng
TI Two-phase scale-based reduction method for fulfilling monitoring service
   on mobile devices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE location-based service; mobile service; data reduction; mobile computing
AB One of the general location-based services (LBSs) is the monitoring of real-time locations of moving objects. When the number of moving objects is large and the task of monitoring is carried out on mobile devices, the monitoring service suffers from constraints of screen size, computing speed, and network bandwidth. In the present paper, a two-phase scale-based reduction method (SRM) consisting of a zoom phase and a mosaic phase, is proposed to overcome these constraints. The zoom phase reduces the original monitoring area which, in turn, undergoes further reduction in the mosaic phase. The performance was measured with the use of two ratios: the reduction ratio (RRatio) and the transmission ratio (TRatio). From the experimental results, the lowest RRatio was 52%, i.e. almost half of the original data size was reduced. The lowest average TRatio was also 52% for the worst case, i.e. the entire original monitoring area was displayed on the mobile device. Moreover, the display time was shortened from 14.3 to 0.7 s. These results show that the use of the two-phase SRM is practical and efficient when applied to the monitoring service on mobile devices. Copyright (c) 2006 John Wiley & Sons, Ltd.
C1 Chaoyang Univ Technol, Dept Comp Sci & Informat Engn, 168 Jifong E Rd, Wufong Township 41349, Taichung, Taiwan.
C3 Chaoyang University of Technology
RP Liao, HC (corresponding author), Chaoyang Univ Technol, Dept Comp Sci & Informat Engn, 168 Jifong E Rd, Wufong Township 41349, Taichung, Taiwan.
EM hcliao@mail.cyut.edu.tw
CR Anastasi G, 2003, 23RD INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, P480
   Banerjee S, 2002, COMPUTER, V35, P46, DOI 10.1109/MC.2002.1039517
   BAUER M, 2002, ACM PERSONAL UBIQUIT, V6, P89
   Dik Lun Lee, 2002, IEEE Pervasive Computing, V1, P65, DOI 10.1109/MPRV.2002.1037724
   HARRI S, 2003, P 1 IEEE INT C PERV, P279
   Ingram SJ, 2004, IEEE POSITION LOCAT, P706
   Jin MH, 2002, IEEE IC COMP COM NET, P268, DOI 10.1109/ICCCN.2002.1043077
   Kitasuka T, 2003, 2003 IEEE PACIFIC RIM CONFERENCE ON COMMUNICATIONS, COMPUTERS, AND SIGNAL PROCESSING, VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P272
   Lo SC, 2002, IEEE T VEH TECHNOL, V51, P667, DOI 10.1109/TVT.2002.1015324
   Ni LM, 2003, PROCEEDINGS OF THE FIRST IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS (PERCOM 2003), P407, DOI 10.1109/PERCOM.2003.1192765
   Pandya D, 2003, PIMRC 2003: 14TH IEEE 2003 INTERNATIONAL SYMPOSIUM ON PERSONAL, INDOOR AND MOBILE RADIO COMMUNICATIONS PROCEEDINGS, VOLS 1-3 2003, P2208, DOI 10.1109/PIMRC.2003.1259108
   Prabhakar S, 2002, IEEE T COMPUT, V51, P1124, DOI 10.1109/TC.2002.1039840
   Roos T., 2002, IEEE Transactions on Mobile Computing, V1, P59, DOI 10.1109/TMC.2002.1011059
NR 13
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2007
VL 37
IS 1
BP 1
EP 19
DI 10.1002/spe.743
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 126KH
UT WOS:000243511300001
OA Bronze
DA 2024-07-18
ER

PT J
AU Kim, J
   Bae, DH
AF Kim, Jungyoon
   Bae, Doo Hwan
TI An approach to feature-based software construction for enhancing
   maintainability
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article; Proceedings Paper
CT 28th Annual International Computer Software and Applications Conference
CY SEP 28-30, 2004
CL Hong Kong, PEOPLES R CHINA
DE feature; dependency alignment; essentiality; maintainer; unidirectional
   dependency
AB While the way we build software affects significantly its maintenance in terms of the effort and cost, the experience level of the maintainer in a software acquirers' organization is also one of concern. In this context, often the maintainer is the user of the system. Unfortunately, it is quite possible to lose the trustworthiness of the software due to the inexperience of the maintainer, especially when the maintainer is without the help of the original developers. One remedy for providing security against the effects of the maintainer's software modifications is to restrict the access to software parts (modules) relative to the experience level of the maintainers. For such a remedy to be successful, the software should be constructed in such a way that its parts under maintenance affect others as little as possible. We propose an approach to software construction aligning the dependencies among software parts in one direction so that they are allocated to maintainers based on their experience level. Our approach decomposes the software into parts based on functionality and orders the parts by essentiality, which indicates how difficult it is to change each part. Then, we align the dependencies in such a way that the less essential functionality is dependent on the more essential functionality. Consequently, any modification on less essential functionality does not affect the essential functionalities. To demonstrate the feasibility of our proposed approach, we applied it to a military application and found that the constructed software enables us to confine maintainers' activity within a limited working area, and thus the software is safer against maintainers' modification. Copyright (C) 2006 John Wiley & Sons, Ltd.
C1 Korea Adv Inst Sci & Technol, Div Comp Sci, Software Engn Lab, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Kim, J (corresponding author), Korea Adv Inst Sci & Technol, Div Comp Sci, Software Engn Lab, Taejon 305701, South Korea.
EM jkim@se.kaist.ac.kr
RI Bae, Doo-Hwan/C-1538-2011
CR Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   Batory D, 2002, ACM T SOFTW ENG METH, V11, P191, DOI 10.1145/505145.505147
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Harrison W, 1993, OOPSLA 93, P411
   Huang SJ, 2003, IEEE T SOFTWARE ENG, V29, P327, DOI 10.1109/TSE.2003.1191797
   Jang YK, 2001, J SOFTW MAINT EVOL-R, V13, P331, DOI 10.1002/smr.236
   Jarzabek S, 2004, IEEE SOFTWARE, V21, P5
   OFFUTT AJ, 1993, J SYST SOFTWARE, V20, P295, DOI 10.1016/0164-1212(93)90072-6
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6, P545, DOI 10.1109/TSE.1980.234503
   [No title captured]
   [No title captured]
NR 14
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 25
PY 2006
VL 36
IS 9
BP 923
EP 948
DI 10.1002/spe.738
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 068GR
UT WOS:000239361500003
OA Bronze
DA 2024-07-18
ER

PT J
AU Yang, BS
   Moon, SM
   Ebcioglu, K
AF Yang, BS
   Moon, SM
   Ebcioglu, K
TI Lightweight monitors for the Java virtual machine
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE monitor; lock; Java virtual machine; just-in-time compilation
AB Java supports the monitor construct for language-level synchronization in the context of multithreading. This paper introduces the lightweight monitor, an efficient user-level monitor implementation. The lightweight monitor is useful for single-threaded Java programs as well as for multi-threaded Java programs with little lock contention. A 32-bit lock is embedded in each object for efficient lock access while other monitor data structures are managed using a hash table. We highly optimized the lock manipulation code, which is translated and inlined by a just-in-time (JIT) compiler. In the most probable cases, only nine SPARC instructions are spent for lock acquisition and five instructions are spent for lock release. Our experimental results indicate that the lightweight monitor is faster than the monitor implementation in the SUN JDK 1.2 RC1 by up to 21 times in the absence of lock contention and by up to seven times in the presence of lock contention. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Seoul Natl Univ, Sch Elect Engn, Seoul 151742, South Korea.
   IBM Corp, TJ Watson Res Ctr, Yorktown Hts, NY 10598 USA.
C3 Seoul National University (SNU); International Business Machines (IBM)
RP Seoul Natl Univ, Sch Elect Engn, POB 34, Seoul 151742, South Korea.
EM smoon@altair.snu.ac.kr
RI Ebcioglu, Kemal/AAK-8011-2020
OI Ebcioglu, Kemal/0000-0001-6256-4248
CR [Anonymous], 1994, The SPARC Architecture Manual, Version 9
   BACON DF, 1998, P 1998 ACM SIGPLAN C
   GOSLING G, 1997, JAVA LANGUAGE SPECIF
   HOARE CAR, 1974, COMMUN ACM, V17, P549, DOI 10.1145/355620.361161
   KRALL A, 1998, P 1998 INT C PAR ARC
   KRALL A, 1997, P PPOPP 97 WORKSH JA
   KRALL A, 1998, P ACM 1998 WORKSH JA
   Pugh D., 2000, CHEM MODELING APPL T, V1, P1
   SARKAR V, 2004, P WORKSH PROD PERF H
   STEIN D, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P1
   WILKINSON T, 1998, JIT INTERPRETING VIR
   YANG BS, 1999, P 1999 INT C PAR ARC
   1998, SPEC JVM98 BENCHMARK
   1998, JAVA GRANDE FORUM MU
NR 14
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2005
VL 35
IS 3
BP 281
EP 299
DI 10.1002/spe.635
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 902II
UT WOS:000227347800004
DA 2024-07-18
ER

PT J
AU Pawlak, R
   Seinturier, L
   Duchien, L
   Florin, G
   Legond-Aubry, F
   Martelli, L
AF Pawlak, R
   Seinturier, L
   Duchien, L
   Florin, G
   Legond-Aubry, F
   Martelli, L
TI JAC: an aspect-based distributed dynamic framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE aspect-oriented programming; distribution; dynamicity
ID REFLECTION; MODEL
AB In this paper, we present the Java Aspect Components (JAC) framework for building aspect-oriented distributed applications in Java. This paper describes the aspect-oriented programming model and the architectural details of the framework implementation. The framework enables extension of application semantics for handling well-separated concerns. This is achieved with a software entity called an aspect component (AC). ACs provide distributed pointcuts, dynamic wrappers and metamodel annotations. Distributed pointcuts are a key feature of our framework. They enable the definition of crosscutting structures that do not need to be located on a single host. ACs are dynamic. They can be added, removed, and controlled at runtime. This enables our framework to be used in highly dynamic environments where adaptable software is needed. Copyright (C) 2004 John Wiley Sons, Ltd.
C1 Univ Lille 1, Lab LIFL, F-59655 Villeneuve Dascq, France.
   INRIA, GOAL, F-59655 Villeneuve Dascq, France.
   Univ Paris 06, Lab LIP6, SRC, F-75252 Paris, France.
   Conservatoire Natl Arts & Metiers, Lab CEDRIC, F-75141 Paris, France.
   AOPSYS, F-75015 Paris, France.
C3 Universite de Lille; Inria; Sorbonne Universite; heSam Universite;
   Conservatoire National Arts & Metiers (CNAM); Institut Polytechnique de
   Paris; ENSTA Paris
RP Univ Sci & Tech Lille Flandres Artois, Lab LIFL, Batiment M3, F-59655 Villeneuve Dascq, France.
EM duchien@lifl.fr
RI Seinturier, Lionel/ABG-2829-2020
OI Seinturier, Lionel/0000-0003-0006-6088
CR [Anonymous], 2000, Generative programming: methods, tools, and applications
   Bergmans L, 2001, COMMUN ACM, V44, P51, DOI 10.1145/383845.383857
   BERGMANS L, 1990, LECT NOTES COMPUTER, V615, P372
   BRANT J, 1998, P ECOOP 98
   BRUNETON E, 2002, J COMPOSANTS 2002
   Büchi M, 2000, LECT NOTES COMPUT SC, V1850, P201
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   CHIBA S, 1993, 9303 U TOK DEP INF S
   CLARKE S, 2002, P 1 INT C ASP OR SOF, P113
   Coady Y., 2003, P 2 INT C ASPECT ORI, P50
   Constantinides CA, 2002, SOFTWARE PRACT EXPER, V32, P703, DOI 10.1002/spe.463
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Douence R., 2001, LECT NOTES COMPUTER, V2192, P170, DOI DOI 10.1007/3-540-45429-2_13
   ELRAD T, 2001, COMMUN ACM, V44, P51
   ESPAK M, 2003, P YOUNG RES WORKSH 2
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   KATARA M, 2003, P 2 INT C ASP OR SOF, P1
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   KNIESEL G, 1999, LECT NOTES COMPUTER, V1628
   KNIESEL G, 2001, IEEE WORKSH SOURC CO
   Lamping John, 1997, P EUR C OBJ OR PROGR
   LIEBERHERR K, 1999, NUCCS9901
   MAES P, 1987, SIGPLAN NOTICES, V22, P147
   Mezini M, 1998, ACM SIGPLAN NOTICES, V33, P97, DOI 10.1145/286942.286950
   MEZINI M, 2003, P 2 INT C ASP OR SOF
   MEZINI M, 2000, SOFTWARE ARCHITECTUR
   OSSHER H, 1995, SIGPLAN NOTICES, V30, P235, DOI 10.1145/217839.217864
   Ossher H., 1996, Theory and Practice of Object Systems, V2, P179, DOI 10.1002/(SICI)1096-9942(1996)2:3<179::AID-TAPO4>3.0.CO;2-R
   Ossher H, 2001, COMMUN ACM, V44, P43, DOI 10.1145/383845.383856
   Ossher H., 2001, SOFTWARE ARCHITECTUR
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PAWLAK R, 1999, P REFL 99 JUL 1999 S
   PAWLAK R, 2001, P TOOLS US 2001
   PAWLAK R, 2000, P TOOLS EUR 2000 JUN
   Pawlak Renaud., 2001, LECT NOTES COMPUTER, V2192, P1, DOI DOI 10.1007/3-540-45429-2_1
   Popovici Andrei., 2003, AOSD 03, P100
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   RASHID A, 2001, LECT NOTES COMPUTER, V2192, P231
   Sato Y, 2003, LECT NOTES COMPUT SC, V2830, P189
   Stein D., 2002, AOSD '02: Proceedings of the 1st international conference on Aspect-oriented software development, P106
   Sullivan GT, 2001, COMMUN ACM, V44, P95, DOI 10.1145/383845.383865
   Suvee D., 2003, 2nd International Conference on Aspect-Oriented Software Development, P21
   SUZUKI J, 1999, P 3 AOP WORKSH ECOOP
   TRUYEN E, 2002, P ICSE 01
   ZIMMERMANN C, 1996, ADV OBJECT ORIENTED
   [No title captured]
   [No title captured]
NR 49
TC 36
Z9 42
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2004
VL 34
IS 12
BP 1119
EP 1148
DI 10.1002/spe.605
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859BU
UT WOS:000224237900001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Yang, SH
   Chen, X
   Yang, L
AF Yang, SH
   Chen, X
   Yang, L
TI Integration of control system design and implementation over the
   Internet using the Jini technology
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Jini infrastructure; Internet-based control system design; collaborative
   environment; process industries
AB This paper describes an approach for the integration of control system software design, testing, and implementation over the Internet using the Java and Jini technologies. Process models and control systems are remotely designed and tested in a virtual laboratory (also called the virtual world), and then implemented in a physical plant (also called the real world) through an integrated environment. Although control system and process model designers and real-site operators are geographically dispersed they work together as a team over the Internet to provide the maintenance support to all the authorized industrial processes. As a consequence, time and money can both be saved because there is no need for an expert of the control software supplier to travel to the site of the real plant and conduct on-site implementation. A generic control system life cycle model is presented first in this paper. Then three enabling technologies including Java, Jini and WWW are briefly introduced. Taking advantage of the Java, Jini and WWW technologies, an Internet-based general infrastructure is proposed to remotely facilitate process modelling, control system design, simulation, validation and on-site implementation. An integrated environment is established to implement the infrastructure. A water tank with a liquid level control system is refereed as a case study to illustrate how the prototype of the integrated environment works over the Internet. Further work and the conclusions are given at the end. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Loughborough, Dept Comp Sci, Loughborough LE11 3TU, Leics, England.
   Univ Derby, Sch Comp & Technol, Derby DE22 1GB, England.
C3 Loughborough University; University of Derby
RP Univ Loughborough, Dept Comp Sci, Loughborough LE11 3TU, Leics, England.
EM s.h.yang@lboro.ac.uk
RI Yang, Shuang-Hua/GZA-7839-2022
CR [Anonymous], 2000, PROCESS CONTROL DESI
   Bui RT, 2000, LECT NOTES ARTIF INT, V1821, P671
   CARMAN RL, 1998, IMPLEMENTATION ROADM
   Chen X, 2002, PROCEEDINGS OF THE 5TH ASIA-PACIFIC CONFERENCE ON CONTROL & MEASUREMENT, P250
   Cutkosky MR, 1996, COMMUN ACM, V39, P78, DOI 10.1145/234215.234474
   Ghiassi M., 1999, International Journal of Flexible Automation and Integrated Manufacturing, V7, P355
   Harris TJ, 1999, J PROCESS CONTR, V9, P1, DOI 10.1016/S0959-1524(98)00031-6
   *HSE, 1995, SAF REM DIAGN MAN PL
   *HSE, 2002, 408 HSE
   Nougues A, 2002, COMP AID CH, V10, P733
   RICHARDSON T, 2001, A B J            SEP, P25
   *SEM, 2002, E DIAGN GUID
   WALRATH K, 2000, JFC SWING TUTORIAL G
   Yang SH, 2002, COMPUT-AIDED CHEM EN, V10, P601
   Yang SH, 2003, CONTROL ENG PRACT, V11, P709, DOI 10.1016/S0967-0661(02)00181-8
   Yang XF, 2002, ACTA PHYS-CHIM SIN, V18, P5, DOI 10.3866/PKU.WHXB20020102
   [No title captured]
NR 17
TC 4
Z9 4
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2003
VL 33
IS 12
BP 1151
EP 1175
DI 10.1002/spe.542
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 727JN
UT WOS:000185655000003
DA 2024-07-18
ER

PT J
AU Mejuev, I
AF Mejuev, I
TI Developing end-user tailorable Web applications using a compositional
   framework
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE tailorability; tailoring interfaces; XML; Web-based systems
AB Since Web-based applications are typically required to accommodate a rapid development cycle and be adaptable to the needs of heterogeneous communities of users, the ability to continue evolving after deployment (tailoring) is regarded as a valuable property for any software accessible via a WWW-browser interface. This article introduces a reusable compositional framework to support the development of end-user-tailorable applications for the Web. This framework defines the composition of tailorable applications with an object-scripting technique, based on nested compositional markup specifications. Application tailorability is achieved through the use of a 'visualizer' pattern that allows decoupling of tailoring interfaces from primitive components and recomposing fragments of an application at runtime. The framework permits the application of multiple tailoring interfaces (visualizers) to an application instance, reusing tailoring interfaces across multiple application domains and allows for the evolution of visual techniques for carrying out tailoring throughout a project lifecycle. This article summarizes the experience accumulated while developing the proposed framework using the Java 2 platform and introduces two case studies that have been made on the development of remote monitoring applications in the domain of large-scale control systems in high-energy physics and interactive multimedia courseware for the Web. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Tsukuba, NPAL, IISE, Tsukuba, Ibaraki 3058573, Japan.
C3 University of Tsukuba
RP Univ Tsukuba, NPAL, IISE, Tennoudai 1-1-1, Tsukuba, Ibaraki 3058573, Japan.
EM mejuev@algor.is.tsukuba.ac.jp
CR Appelt W, 1998, COMPUT NETWORKS ISDN, V30, P499, DOI 10.1016/S0169-7552(98)00016-6
   FARSHCHIAN BA, 1998, P IFIP TC8WG8 1 WORK, P70
   FLOYD C, 1989, LECT NOTES COMPUT SC, V387, P48
   FOX G, 2000, TR0027 US ARM ENG R
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   HIGASHIDA M, 2001, PFU TECHNICAL REV, V12, P50
   HIRSCHHEIM R, 1988, COMPUT J, V31, P398, DOI 10.1093/comjnl/31.5.398
   JOHNSON M, 1999, JAVAWORLD        OCT
   JOHNSON M, 1999, JAVAWORLD        AUG
   Keen P. G., 1991, Shaping the future: Business design through information technology
   Kiczales G, 1996, IEEE SOFTWARE, V13, P8, DOI 10.1109/52.476280
   Koch M, 1999, PROCEEDINGS OF THE SEVENTH EUROMICRO WORKSHOP ON PARALLEL AND DISTRIBUTED PROCESSING, PDP'99, P146, DOI 10.1109/EMPDP.1999.746658
   LAURILLARD D, 1998, P CHI 98 SUMM C CHI, P86
   MacLean Allan., 1990, CHI 90, P175, DOI DOI 10.1145/97243.97271
   MALONE TW, 1992, P C COMPUTER SUPPORT, P289
   Mejuev I, 2002, ENABLING SOCIETY WITH INFORMATION TECHNOLOGY, P111
   Mejuev I, 2001, AIP CONF PROC, V583, P119, DOI 10.1063/1.1405279
   MILNE P, 1999, SUNS 1999 WORLDW JAV
   Morch A., 1997, Computers and Design in Context, P51
   Nierstrasz Oscar., 1991, Proceedings, Esprit 1991 Conference, P534
   Rice JR, 1996, IEEE COMPUT SCI ENG, V3, P44, DOI 10.1109/99.537091
   Sommerville I, 1996, ACM COMPUT SURV, V28, P269, DOI 10.1145/234313.234420
   Stiemerling O., 1999, Proceedings. Fourth International Symposium on Autonomous Decentralized Systems. - Integration of Heterogeneous Systems -, P345, DOI 10.1109/ISADS.1999.838458
   Teege G., 2000, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V9, P101, DOI 10.1023/A:1008765810708
   ZDUN U, 2002, P ECOOP FEY WORKSH M
NR 25
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2003
VL 33
IS 10
BP 913
EP 931
DI 10.1002/spe.529
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715CV
UT WOS:000184953700002
DA 2024-07-18
ER

PT J
AU Di Gaspero, L
   Schaerf, A
AF Di Gaspero, L
   Schaerf, A
TI EASYLOCAL++: an object-oriented framework for the flexible design of
   local-search algorithms
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE algorithms design and implementation; (meta-)heuristics; local search;
   analysis of algorithms
AB Local search is a paradigm for search and optimization problems, which has recently evidenced to be very effective for a large number of combinatorial problems. Despite the increasing interest of the research community in this subject, there is still a lack of a widely-accepted software tools for local search.
   We propose EASYLOCAL++, an object-oriented framework for the design and the analysis of local-search algorithms. The abstract classes that compose the framework specify and implement the invariant part of the algorithm and are meant to be specialized by concrete classes that supply the problem-dependent part. The framework provides the full control structures of the algorithms, and the user has only to write the problem-specific code. Furthermore, the framework comes with some tools that simplify the analysis of the algorithms.
   The architecture of EASYLOCAL++ provides a principled modularization for the solution of combinatorial problems by local search and helps the user by deriving a neat conceptual scheme of the application. It also supports the design of combinations of basic techniques and/or neighborhood structures.
   The framework has been tested in some applicative domains and has proved to be flexible enough in the implementation of algorithms for the solution of various scheduling problems. Copyright (C) 2003 John Wiley Sons, Ltd.
C1 Univ Udine, Dipartimento Matemat & Informat, I-33100 Udine, Italy.
   Univ Udine, Dipartimento Ingn Elettr Gestionale & Meccan, I-33100 Udine, Italy.
C3 University of Udine; University of Udine
RP Univ Udine, Dipartimento Matemat & Informat, Via Sci 206, I-33100 Udine, Italy.
EM digasper@dimi.uniud.it
RI Di Gaspero, Luca/A-3315-2009; Di Gaspero, Luca/AAU-5502-2020; Schaerf,
   Andrea/A-9011-2010
OI Di Gaspero, Luca/0000-0003-0299-6086; Di Gaspero,
   Luca/0000-0003-0299-6086; Schaerf, Andrea/0000-0001-6965-0536
CR ANDREATTA AA, 2002, OPERATIONS RES COMPU
   ANDREATTA AA, 1997, P 2 MET INT C SOPH A
   [Anonymous], 1996, Cliques, Coloring, and Satisfiability: Second DIMACS Implementation Challenge
   [Anonymous], 2002, HDB METAHEURISTICS
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Crainic T. G., 1997, INFORMS Journal on Computing, V9, P61, DOI 10.1287/ijoc.9.1.61
   DEBACKER B, 1999, WORKSH INT AI OR TEC
   DEBRUIN A, 1996, EURFEWCS9610 ER U
   DIGASPERO L, 2002, OPERATIONS RES COMPU
   DONNOLY C, 1995, BISON YACC COMPATIBL
   Ferland JA, 1996, OPER RES, V44, P347, DOI 10.1287/opre.44.2.347
   FINK A, 2002, OPTIMIZATION SOFTWAR, P81
   FINK A, 1999, P OP RES 1998 OR 98, P210
   FLEURENT C, 1996, DIMACS SERIES DISCRE, V26, P619
   GAMMA E, 1994, J DESIGN PATTERNS EL
   Garey M., 1979, Computers and interactibility - A guide to the theory of NP-completeness
   GENDREAU M, 1994, MANAGE SCI, V40, P1276, DOI 10.1287/mnsc.40.10.1276
   Glover F., 1998, Tabu Search
   Hansen P., 1999, META HEURISTICS ADV, DOI [https://doi.org/10.1007/978-1-4615-5775-3_30, DOI 10.1007/978-1-4615-5775-3_30]
   *ILOG, 1998, ILOG OPT SUIT WHIT P
   JOHNSON DS, 1991, OPER RES, V39, P378, DOI 10.1287/opre.39.3.378
   Jünger M, 2000, SOFTWARE PRACT EXPER, V30, P1325, DOI 10.1002/1097-024X(200009)30:11<1325::AID-SPE342>3.0.CO;2-T
   Laburthe F, 1998, LECT NOTES COMPUT SC, V1520, P310
   LAURENT M, 2001, CS0102 BROWN U
   Mehlhorn K., 1999, LEDA USER MANUAL VER
   MICHEL L, 1997, P 3 INT C PRINC PRAC, V1330, P238
   Musser D.R., 2001, STL Tutorial and Reference Guide. C++ Programming with the Standard Template Library, V2nd
   PAXSON V, 1995, FLEX VERSION 2 5 FAS
   Schaerf A, 1999, IEEE T SYST MAN CY A, V29, P368, DOI 10.1109/3468.769755
   Schaerf A, 2000, SOFTWARE PRACT EXPER, V30, P233, DOI 10.1002/(SICI)1097-024X(200003)30:3<233::AID-SPE297>3.0.CO;2-K
   SCHAPPERT A, 1995, ACM SOFTWARE ENG NOT, V20, P123
   SMITH DR, 1990, IEEE T SOFTWARE ENG, V16, P1024, DOI 10.1109/32.58788
   Vaessens RJM, 1998, COMPUT OPER RES, V25, P969, DOI 10.1016/S0305-0548(97)00093-2
   Verhoeven M. G. A., 1995, Journal of Heuristics, V1, P43, DOI 10.1007/BF02430365
   VoSS S., 1999, METAHEURISTICS ADV T, DOI 10.1007/978-1-4615-5775-3
   VOSS S, 2002, OPERATIONS RES COMPU
   VOUDOURIS C, 2001, P 4 MET INT C MIC 01, P423
   VOUDOURIS C, 2002, OPERAT RES COMP SCI, V18, P177
NR 38
TC 66
Z9 69
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2003
VL 33
IS 8
BP 733
EP 765
DI 10.1002/spe.524
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 694AG
UT WOS:000183750100002
DA 2024-07-18
ER

PT J
AU Azeem, MI
   Shafiq, S
   Mashkoor, A
   Egyed, A
AF Azeem, Muhammad Ilyas
   Shafiq, Saad
   Mashkoor, Atif
   Egyed, Alexander
TI Code smells in pull requests: An exploratory study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code smell; machine learning; pull-based development; pull requests
ID IMPACT
AB The quality of a pull request is the primary factor integrators consider for its acceptance or rejection. Code smells indicate sub-optimal design or implementation choices in the source code that often lead to a fault-prone outcome, threatening the quality of pull requests. This study explores code smells in 21k pull requests from 25 popular Java projects. We find that both accepted (37%) and rejected (44%) pull requests have code smells, affected mainly by god classes and long methods. Besides, we observe that smelly pull requests are more complex and challenging to understand as they have significantly large sizes, long latency times, more discussion and review comments, and are submitted by contributors with less experience. Our results show that features used in previous studies for pull request acceptance prediction could be potentially employed to predict smell in incoming pull requests. We propose a dynamic approach to predict the presence of such code smells in the newly added pull requests. We evaluate our approach on a dataset of 25 Java projects extracted from GitHub. We further conduct a benchmark study to compare the performance of eight machine learning classifiers. Results of the benchmark study show that XGBoost is the best-performing classifier for smell prediction.
C1 [Azeem, Muhammad Ilyas] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Esch Sur Alzette, Luxembourg.
   [Shafiq, Saad; Mashkoor, Atif; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
C3 University of Luxembourg; Johannes Kepler University Linz
RP Shafiq, S (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
EM saad.shafiq@jku.at
RI Egyed, Alexander/E-2632-2017
OI Shafiq, Saad/0000-0002-5901-1420
FU The state of Upper Austria has partly funded the research reported in
   this article through the LIT Artificial Intelligence Lab and the LIT
   Secure and Correct Systems Lab.; LIT Secure and Correct Systems Lab
FX The state of Upper Austria has partly funded the research reported in
   this article through the LIT Artificial Intelligence Lab and the LIT
   Secure and Correct Systems Lab.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Aher S.B., 2011, International conference on emerging technology trends (ICETT), V3, P20
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bermejo S, 2000, PATTERN RECOGN, V33, P1999, DOI 10.1016/S0031-3203(99)00186-7
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Brindescu C, 2020, EMPIR SOFTW ENG, V25, P562, DOI 10.1007/s10664-019-09735-4
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fernández-Delgado M, 2014, J MACH LEARN RES, V15, P3133
   Feurer M, 2019, SPRING SER CHALLENGE, P3, DOI 10.1007/978-3-030-05318-5_1
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   John G H., Estimating Continuous Distributions in Bayesian Classifiers
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Lenarduzzi Valentina, 2020, Proceedings of 6th International Conference in Software Engineering for Defence Applications (SEDA 2018). Advances in Intelligent Systems and Computing (AISC 925), P165, DOI 10.1007/978-3-030-14687-0_15
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110806
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Noble WS, 2006, NAT BIOTECHNOL, V24, P1565, DOI 10.1038/nbt1206-1565
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Paper D., 2020, Hands-on Scikit-Learn for Machine Learning Applications: Data Science Fundamentals with Python, P137, DOI DOI 10.1007/978-1-4842-5373-1_5
   Pascarella L., 2019, P 27 IEEE INT C SOFT
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pecorelli F, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P19, DOI 10.1145/3340482.3342744
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Ratzinger J, 2007, LECT NOTES COMPUT SC, V4422, P12
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shafiq S, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P99, DOI 10.1109/SEAA53835.2021.00022
   Shafiq S, 2021, IEEE ACCESS, V9, P140896, DOI 10.1109/ACCESS.2021.3119746
   Shafiq S, 2021, 2021 IEEE/ACM JOINT 15TH INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES AND 16TH ACM/IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICSSP/ICGSE 2021), P39, DOI 10.1109/ICSSP-ICGSE52873.2021.00014
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Venkatesh A., 2016, INT J COMPUT APPL, V145, P36, DOI DOI 10.5120/IJCA2016910702
   WALKER SH, 1967, BIOMETRIKA, V54, P167, DOI 10.1093/biomet/54.1-2.167
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Yang J, 2015, EMPIR SOFTW ENG, V20, P1095, DOI 10.1007/s10664-014-9316-x
   Yu Y, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5595-8
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zhang X., 2017, 29 INT C SOFTW ENG K, P363
NR 58
TC 0
Z9 0
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2024
VL 54
IS 3
BP 419
EP 436
DI 10.1002/spe.3283
EA OCT 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HI4X1
UT WOS:001086046800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Kalaki, PS
   Shameli-Sendi, A
   Abbasi, BKE
AF Kalaki, Parisa Sadat
   Shameli-Sendi, Alireza
   Abbasi, Behzad Khalaji Emamzadeh
TI Anomaly detection on OpenStack logs based on an improved robust
   principal component analysis model and its projection onto column space
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; log analysis; OpenStack; RPCA algorithm
AB With the advent of technology and the development of more complex software systems, the size of logs generated by these systems has increasingly risen so that the anomaly detection for remediating common errors has been more difficult than ever. The cloud emergence in the information technology (IT) industry has led to the immigration of enterprises toward it, which has extended the application of cloud management stacks such as OpenStack. By using the OpenStack platform, users can access resource infrastructure and manage virtual machines (VMs). The anomaly detection in OpenStack logs is not realized conveniently due to the substantial size of logs, and it is required to automate this process. Since there is no appropriate open-source dataset for OpenStack logs, we have generated 25,000 logs by injecting three types of anomalies to propose a more efficient technique in terms of performance and time in detecting anomalies in OpenStack logs relative to recent studies by proper OpenStack log parsing and analyzing these logs by data mining algorithms. To this end, compared to the previous research study, we could improve the anomaly detection performance in terms of F1 score, recall, and precision by 9%, 4%, and 14%, respectively, and decrease the running time relative to the log size by at least 30 s.
C1 [Kalaki, Parisa Sadat; Shameli-Sendi, Alireza; Abbasi, Behzad Khalaji Emamzadeh] Shahid Beheshti Univ SBU, Fac Comp Sci & Engn, Tehran, Iran.
C3 Shahid Beheshti University
RP Shameli-Sendi, A (corresponding author), Shahid Beheshti Univ SBU, Fac Comp Sci & Engn, Tehran, Iran.
EM a_shameli@sbu.ac.ir
OI Shameli Sendi, Alireza/0000-0002-6250-8577
CR [Anonymous], OPENSTACK ISSUE TRAC
   Bouwmans T, 2014, COMPUT VIS IMAGE UND, V122, P22, DOI 10.1016/j.cviu.2013.11.009
   Candès EJ, 2011, J ACM, V58, DOI 10.1145/1970392.1970395
   Chalapathy R, 2017, LECT NOTES ARTIF INT, V10534, P36, DOI 10.1007/978-3-319-71249-9_3
   Cotroneo D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P200, DOI 10.1145/3338906.3338916
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Du M, 2016, IEEE DATA MINING, P859, DOI [10.1109/ICDM.2016.0103, 10.1109/ICDM.2016.160]
   Farzad A, 2020, ICT EXPRESS, V6, P229, DOI 10.1016/j.icte.2020.06.003
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Goel A, 2016, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON EMERGING NETWORKING EXPERIMENTS AND TECHNOLOGIES (CONEXT'16), P413, DOI 10.1145/2999572.2999600
   Hashemi S., 2021, ARXIV
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Hoffman K., 1973, Algebra Lineal
   Jiang ZM, 2008, INT CONF QUAL SOFTW, P181, DOI 10.1109/QSIC.2008.50
   Jin YJ, 2017, 2017 2ND IEEE INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION ENGINEERING (ICITE), P352, DOI 10.1109/ICITE.2017.8056937
   Ju X., 2013, FAULT RESILIENCE OPE, P1
   Lakhina A, 2004, ACM SIGCOMM COMP COM, V34, P219, DOI 10.1145/1030194.1015492
   Lin Z., 2009, The augmented Lagrange multiplier method for exact recovery of corrupted low-rank matrices
   Makanju A, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1255
   Messaoudi S, 2018, INT C PROGRAM COMPRE, P167, DOI 10.1145/3196321.3196340
   Paffenroth R., 2018, Robust PCA for Anomaly Detection in Cyber Networks
   Sharma D., 2015, HANSEL DIAGNOSING FA, P1
   Tang L, 2011, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL SYMPOSIUM ON MOBILE AD HOC NETWORKING AND COMPUTING (MOBIHOC' 11), DOI 10.1145/2107502.2107533
   Vaarandi R, 2003, PROCEEDINGS OF THE 3RD IEEE WORKSHOP ON IP OPERATIONS & MANAGEMENT (IPOM2003), P119
   Vaarandi R, 2008, IEEE IFIP NETW OPER, P1071, DOI 10.1109/NOMS.2008.4575281
   Vaarandi R, 2015, INT CONF NETW SER, P1, DOI 10.1109/CNSM.2015.7367331
   Wang XH, 2018, J ADV TRANSPORT, DOI 10.1155/2018/7191549
   Xing XX, 2015, IEEE INT C INTELL TR, P2219, DOI 10.1109/ITSC.2015.358
   Yin WT, 2008, SIAM J IMAGING SCI, V1, P143, DOI 10.1137/070703983
   Yu X, 2016, ACM SIGPLAN NOTICES, V51, P489, DOI 10.1145/2954679.2872407
   Yuan Y, 2019, IEEE INT CONF CLOUD, P124, DOI 10.1109/CLOUD.2019.00031
   Zakaria N., 2020, INT J DATA SCI, V1, P14, DOI [10.18517/ ijods.1.1.14-17.2020, 10.18517/ijods.1.1.14-17.2020, DOI 10.18517/IJODS.1.1.14-17.2020]
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
NR 34
TC 0
Z9 0
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2023
VL 53
IS 3
BP 665
EP 681
DI 10.1002/spe.3164
EA NOV 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8U2UJ
UT WOS:000879635500001
DA 2024-07-18
ER

PT J
AU Li, KQ
AF Li, Keqin
TI Workload management and server speed setting for cost-performance ratio
   optimization
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cost-performance ratio; data center; power-performance tradeoff; server
   speed setting; workload management
ID OPTIMAL POWER ALLOCATION; MULTIPLE HETEROGENEOUS SERVERS; CLOUD;
   TRADEOFF; CONFIGURATION; CONSUMPTION
AB The cost-performance tradeoff is a fundamental issue in a data center for cloud computing, which is closely related to two key metrics that both cloud consumers and service providers care the most, that is, quality of service and cost of service. While there are different definitions of quality of service, the average response time is a common choice of performance metric. While there are various considerations in cost of service, the average power consumption is a common choice of cost metric. Hence, the cost-performance tradeoff becomes the power-performance tradeoff. In this article, we deal with the power-performance tradeoff at the data center level. We study cost-performance ratio optimization by using the techniques of workload management and server speed setting. In particular, we make the following tangible contributions. We solve three optimization problems, that is, (1) the workload management problem-to find a workload distribution, such that the cost-performance ratio is minimized; (2) the server speed setting problem-to find a server speed setting, such that the cost-performance ratio is minimized; (3) the workload management and server speed setting problem-to find a workload distribution and a server speed setting, such that the cost-performance ratio is minimized. All the three optimization problems are analytically defined as multivariable optimization problems based on M/M/m queueing systems for multiple heterogeneous multiserver systems, together with two power consumption models, that is, the idle-speed model and the constant-speed model. Our approach makes it possible to quantitatively evaluate and optimize the cost-performance ratio of a data center within a rigorously developed framework. Each multivariable optimization problem is transformed to a nonlinear system of equations. Due to the sophistication of these equations, they are solved algorithmically by a numerical procedure. Furthermore, we provide approximate, accurate, and analytical solutions to the first two problems. Performance data are demonstrated for each problem, and the accuracy of our approximate solutions are also discussed. To the best of the author's knowledge, this is the first paper which analytically and algorithmically minimizes the cost-performance ratio of a data center with multiple heterogeneous multiserver systems using the techniques of workload management and server speed setting.
C1 [Li, Keqin] SUNY Coll New Paltz, Dept Comp Sci, New Paltz, NY 12561 USA.
C3 State University of New York (SUNY) System; SUNY New Paltz
RP Li, KQ (corresponding author), SUNY Coll New Paltz, Dept Comp Sci, New Paltz, NY 12561 USA.
EM lik@newpaltz.edu
CR Abdelmaboud A, 2015, J SYST SOFTWARE, V101, P159, DOI 10.1016/j.jss.2014.12.015
   [Anonymous], 2012, CLOUD COMPUTING SERV
   Ardagna D, 2014, J INTERNET SERV APPL, V5, DOI 10.1186/s13174-014-0011-3
   Bardsiri Amid Khatibi, 2014, International Journal of Intelligent Systems and Applications, V6, P27, DOI 10.5815/ijisa.2014.12.04
   Burden R.L., 1981, NUMERICAL ANAL, V3rd
   Cai, 2010, INT J COMPUTER NETWO, V1, P21
   Cao JW, 2014, IEEE T COMPUT, V63, P45, DOI 10.1109/TC.2013.122
   Deng RL, 2016, IEEE INTERNET THINGS, V3, P1171, DOI 10.1109/JIOT.2016.2565516
   Ding D, 2020, FUTURE GENER COMP SY, V108, P361, DOI 10.1016/j.future.2020.02.018
   Gandhi A, 2010, PERFORM EVALUATION, V67, P1155, DOI 10.1016/j.peva.2010.08.009
   Garg SK, 2013, FUTURE GENER COMP SY, V29, P1012, DOI 10.1016/j.future.2012.06.006
   He Z., 2021, SOFTWARE PRACTICE EX, V51, P1847
   He ZL, 2022, IEEE T PARALL DISTR, V33, P2198, DOI 10.1109/TPDS.2021.3135955
   Huang J, 2021, IEEE T SUST COMPUT, V6, P572, DOI 10.1109/TSUSC.2020.3014912
   Huang J, 2019, J PARALLEL DISTR COM, V130, P24, DOI 10.1016/j.jpdc.2019.03.019
   Huang J, 2017, IEEE T COMPUT, V66, P1518, DOI 10.1109/TC.2017.2693186
   Jennings B, 2015, J NETW SYST MANAG, V23, P567, DOI 10.1007/s10922-014-9307-7
   Kleinrock L., 1975, Queueing Systems-Volume 1: Theory, V1
   Li K., 2018, HORIZONS COMPUTER SC, V17, P183
   Li K., 2019, PARALLEL EMERGENT CO, P31
   Li KC, 2012, COMM COM INF SC, V302, P1
   Li KQ, 2020, IEEE T CLOUD COMPUT, V8, P1135, DOI 10.1109/TCC.2017.2665549
   Li K, 2019, IEEE T IND INFORM, V15, P1947, DOI 10.1109/TII.2018.2856909
   Li KQ, 2019, IEEE ACCESS, V7, P5071, DOI 10.1109/ACCESS.2018.2889220
   Li KQ, 2018, SOFTWARE PRACT EXPER, V48, P1805, DOI 10.1002/spe.2584
   Li KQ, 2017, IEEE T SUST COMPUT, V2, P167, DOI 10.1109/TSUSC.2017.2706425
   Li KQ, 2016, IEEE T CLOUD COMPUT, V4, P122, DOI 10.1109/TCC.2015.2440238
   Li KQ, 2012, SUSTAIN COMPUT-INFOR, V2, P13, DOI 10.1016/j.suscom.2011.11.002
   Li KQ, 2012, J SUPERCOMPUT, V61, P189, DOI 10.1007/s11227-011-0686-1
   Mao S, 2020, IEEE T WIREL COMMUN, V19, P1855, DOI 10.1109/TWC.2019.2959300
   Qin M, 2021, IEEE INTERNET THINGS, V8, P1896, DOI 10.1109/JIOT.2020.3015970
   Singh S, 2016, J GRID COMPUT, V14, P217, DOI 10.1007/s10723-015-9359-2
   Tao XY, 2017, IEEE WIREL COMMUN LE, V6, P774, DOI 10.1109/LWC.2017.2740927
   Tian Y, 2014, CLUSTER COMPUT, V17, P943, DOI 10.1007/s10586-013-0326-z
   Yang B, 2016, IEEE T PARALL DISTR, V27, P3646, DOI 10.1109/TPDS.2016.2537809
   Zhang GL, 2018, IEEE T IND INFORM, V14, P4642, DOI 10.1109/TII.2018.2843365
   Zhang J, 2018, IEEE INTERNET THINGS, V5, P2633, DOI 10.1109/JIOT.2017.2786343
   Zhou Z, 2022, IEEE T SUST COMPUT, V7, P371, DOI 10.1109/TSUSC.2021.3115388
   Zhou Z, 2018, FUTURE GENER COMP SY, V86, P836, DOI 10.1016/j.future.2017.07.048
NR 39
TC 0
Z9 0
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2022
VL 52
IS 12
BP 2635
EP 2663
DI 10.1002/spe.3140
EA AUG 2022
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A1NL
UT WOS:000845078300001
DA 2024-07-18
ER

PT J
AU Pellegrini, A
   Di Sanzo, P
   Piccione, A
   Quaglia, F
AF Pellegrini, Alessandro
   Di Sanzo, Pierangelo
   Piccione, Andrea
   Quaglia, Francesco
TI Design and implementation of a fully transparent partial abort support
   for software transactional memory
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE partial abort; software transactional memory; static binary
   instrumentation; transactional memory
ID SIMULATION; MANAGEMENT; COMPILER; DYMELOR
AB Software transactional memory (STM) provides synchronization support to ensure atomicity and isolation when threads access shared data in concurrent applications. With STM, shared data accesses are encapsulated within transactions automatically handled by the STM layer. Hence, programmers are not requested to use code-synchronization mechanisms explicitly, like locking. In this article, we present our experience in designing and implementing a partial abort scheme for STM. The objective of our work is threefold: (1) enabling STM to undo only part of the transaction execution in the case of conflict, (2) designing a scheme that is fully transparent to programmers, thus also allowing to run existing STM applications without modifications, and (3) providing a scheme that can be easily integrated within existing STM runtime environments without altering their internal structure. The scheme we designed is based on automated software instrumentation, which injects into the application capabilities to undo the required portions of transaction executions. Further, it can correctly undo also non-transactional operations executed on the stack and the heap during a transaction. This capability allows programmers to write transactional code without concerns about the side effects of aborted transactions on both shared and thread-private data. We integrated and evaluated our partial abort scheme within the TinySTM open-source library. We analyze the experimental results we achieved with common STM benchmark applications, focusing on the advantages and disadvantages of the proposed solutions for implementing our scheme's different components. Hence, we highlight the appropriate choices and possible solutions to improve partial abort schemes further.
C1 [Pellegrini, Alessandro; Quaglia, Francesco] Univ Roma Tor Vergata, DICII, Rome, Italy.
   [Di Sanzo, Pierangelo] Univ Aquila, DISIM, Laquila, Italy.
   [Piccione, Andrea] Sapienza Univ Rome, DIAG, Rome, Italy.
C3 University of Rome Tor Vergata; University of L'Aquila; Sapienza
   University Rome
RP Pellegrini, A (corresponding author), Univ Roma Tor Vergata, DICII, Rome, Italy.
EM a.pellegrini@ing.uniroma2.it
RI Di Sanzo, Pierangelo/W-6340-2019; Di Sanzo, Pierangelo/HII-2776-2022;
   Pellegrini, Alessandro/S-6105-2018
OI Di Sanzo, Pierangelo/0000-0001-6136-6303; Di Sanzo,
   Pierangelo/0000-0001-6136-6303; Piccione, Andrea/0000-0003-1367-2861;
   Pellegrini, Alessandro/0000-0002-0179-9868
CR Adl-Tabatabai AR, 2006, ACM SIGPLAN NOTICES, V41, P26, DOI 10.1145/1133981.1133985
   [Anonymous], 2006, P WORKSHOP LANGUAGES
   [Anonymous], 2013, P 2013 INT C HIGH PE
   Ansari M, 2008, LECT NOTES COMPUT SC, V5168, P719, DOI 10.1007/978-3-540-85451-7_77
   Ansari M, 2009, LECT NOTES COMPUT SC, V5409, P4
   Bader DA, 2005, LECT NOTES COMPUT SC, V3769, P465
   Bestavros A., 1995, VLDB '95. Proceedings of the 21st International Conference on Very Large Data Bases, P122
   Bezdek J. C., 1981, Pattern recognition with fuzzy objective function algorithms
   Cao MC., 2008, P IEEE INT S WORKLOA
   Chickering D. M., 1997, P UAI 1997, P80
   DAS S, 1994, 1994 WINTER SIMULATION CONFERENCE PROCEEDINGS, P1332
   Di Sanzo P, 2020, IEEE T COMPUT, V69, P621, DOI 10.1109/TC.2019.2954139
   Di Sanzo P, 2017, IEEE T PARALL DISTR, V28, P3356, DOI 10.1109/TPDS.2017.2740285
   Dice D, 2006, LECT NOTES COMPUT SC, V4167, P194
   Dolev S, 2008, PODC'08: PROCEEDINGS OF THE 27TH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P125, DOI 10.1145/1400751.1400769
   Dragojevic A, 2009, ACM SIGPLAN NOTICES, V44, P155, DOI 10.1145/1543135.1542494
   Economo S., 2017, P 16 IEEE INT S NETW, P114
   Felber P, 2010, IEEE T PARALL DISTR, V21, P1793, DOI 10.1109/TPDS.2010.49
   Felber P, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P237, DOI 10.1145/1345206.1345241
   Fernandes SM, 2011, ACM SIGPLAN NOTICES, V46, P179, DOI 10.1145/2038037.1941579
   FUJIMOTO RM, 1992, IEEE T COMPUT, V41, P68, DOI 10.1109/12.123382
   GNU Project, GCC GNU COMP COLL
   Gupta M., 2012, AUTOMATIC CHECKPOINT
   Gupta M., 2010, INT J COMPUTER APPL, V1, P80
   Herlihy M, 2003, P 22 ANN S PRINCIPLE, P92
   KARP RM, 1987, IBM J RES DEV, V31, P249, DOI 10.1147/rd.312.0249
   Koskinen E, 2008, SPAA'08: PROCEEDINGS OF THE TWENTIETH ANNUAL SYMPOSIUM ON PARALLELISM IN ALGORITHMS AND ARCHITECTURES, P160
   Le M, 2015, PROCEEDINGS OF THE 20TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING (ICFP'15), P230, DOI 10.1145/2784731.2784736
   Lev Y., 2009, P 4 ACM SIGPLAN WORK
   Lupei, 2009, THESIS U TORONTOTHE
   Moore KE, 2006, INT S HIGH PERF COMP, P258, DOI 10.1109/HPCA.2006.1598134
   Moravan MJ, 2006, ACM SIGPLAN NOTICES, V41, P359, DOI 10.1145/1168918.1168902
   Natarajan A., 2010, P 2010 INT S PAR DIS, P1
   Pellegrini A, 2015, IEEE T PARALL DISTR, V26, P1560, DOI 10.1109/TPDS.2014.2323967
   Pellegrini A, 2009, W PRIN ADV DISTR SIM, P45, DOI 10.1109/PADS.2009.24
   Quaglia F, 2003, IEEE T PARALL DISTR, V14, P593, DOI 10.1109/TPDS.2003.1206506
   Ramadan HE, 2009, ACM SIGPLAN NOTICES, V44, P163, DOI 10.1145/1594835.1504201
   Riegel T., 2006, DISTRIB COMPUT, V4167
   Rughetti D., 2012, 2012 IEEE 20th International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS), P278, DOI 10.1109/MASCOTS.2012.40
   Rughetti D, 2014, EUROMICRO WORKSHOP P, P68, DOI 10.1109/PDP.2014.24
   Shavit N., 1995, Proceedings of the Fourteenth Annual ACM Symposium on Principles of Distributed Computing, P204, DOI 10.1145/224964.224987
   Spear MF, 2009, ACM SIGPLAN NOTICES, V44, P141, DOI 10.1145/1594835.1504199
   Steinman J., 1992, INT J COMPUTER SIMUL, P251
   Sutter, 2014, WELCOME JUNGLE HETER
   Toccaceli R, 2008, W PRIN ADV DISTR SIM, P163, DOI 10.1109/PADS.2008.23
   Wu P, 2009, CONCURR COMP-PRACT E, V21, P7, DOI 10.1002/cpe.1336
   Xiao Y, 2018, CONCURR COMP-PRACT E, V30, DOI 10.1002/cpe.4397
   Yoo RM, 2013, INT CONF HIGH PERFOR, DOI 10.1145/2503210.2503232
   Yoo RM, 2008, SPAA'08: PROCEEDINGS OF THE TWENTIETH ANNUAL SYMPOSIUM ON PARALLELISM IN ALGORITHMS AND ARCHITECTURES, P169
   Zhou N, 2018, CONCURR COMP-PRACT E, V30, DOI 10.1002/cpe.4506
NR 50
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2022
VL 52
IS 11
BP 2456
EP 2475
DI 10.1002/spe.3134
EA AUG 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5C7YI
UT WOS:000837599300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gangwar, S
   Prasad, IB
   Yogita
   Yadav, SS
   Pal, V
   Patra, SK
AF Gangwar, Saumitra
   Prasad, Ikkurthi Bhanu
   Yogita
   Yadav, Satyendra Singh
   Pal, Vipin
   Patra, Sarat Kumar
TI HSCR: Hierarchical structured cluster routing protocol for load balanced
   wireless sensor networks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE clustering; hierarchical structure; multi-hop communication; routing
AB The robustness of wireless sensor networks (WSNs) has made it a preferred choice for many applications. WSNs should perform the intended sensing task with a limited amount of energy. Clustering methodology is used to reduce sensor nodes' energy consumption and increase the network lifetime by organizing nodes into independent groups. In this article, a hierarchical structured cluster routing (HSCR) protocol based on the principle of an m-way balanced tree has been proposed for multi-hop intra-cluster communication and offload the cluster head. It enhances the network performance by providing an underlying architecture that reduces the intra-cluster communication distance and the amount of data sent to the cluster head. In the proposed HSCR protocol, an m-way tree-based hierarchical structure has been proposed in which balanced structure is formed within each cluster so that data aggregation is performed at each intermediate parent node. The proposed approach can be implemented over any communication protocol used in WSNs. Simulation results prove that the proposed algorithms outperform traditional clustering algorithms, LEACH and CT-RPL, in terms of network stability, energy consumption, and network lifetime. Simulation results affirm that the proposed algorithms outperform traditional clustering algorithms, LEACH and CT-RPL, in terms of network stability, energy consumption, average intra-cluster communication distance and network lifetime by 105.32%, 49.23%, 14.98%, 109.31%, and 35.75%, 15.32%, 17%, 24.31%, respectively.
C1 [Gangwar, Saumitra; Prasad, Ikkurthi Bhanu; Yogita; Pal, Vipin] Natl Inst Technol Meghalaya, Dept Comp Sci & Engn, Shillong 793003, Meghalaya, India.
   [Yadav, Satyendra Singh] Natl Inst Technol Meghalaya, Dept Elect & Commun Engn, Shillong, Meghalaya, India.
   [Patra, Sarat Kumar] Indian Inst Informat Technol Vadodara, Vadodara, Gujarat, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Meghalaya; National Institute of Technology (NIT System);
   National Institute of Technology Meghalaya
RP Pal, V (corresponding author), Natl Inst Technol Meghalaya, Dept Comp Sci & Engn, Shillong 793003, Meghalaya, India.
EM vipinpal@nitm.ac.in
RI Yadav, Satyendra Singh/AAC-1924-2020; Patra, Sarat Kumar/F-7052-2018
OI Yadav, Satyendra Singh/0000-0002-7891-6997; Pal,
   Vipin/0000-0002-8157-1379
CR Altowaijri SM, 2022, FUTURE INTERNET, V14, DOI 10.3390/fi14020035
   Bhanu Prasad Ikkurthi, 2020, Optical and Wireless Technologies. Proceedings of OWT 2019. Lecture Notes in Electrical Engineering (LNEE 648), P607, DOI 10.1007/978-981-15-2926-9_66
   Bhattacharjya K, 2021, MICROSYST TECHNOL, V27, P443, DOI 10.1007/s00542-018-3982-3
   Bongale Anupkumar M., 2022, International Journal of Information Technology, V14, P827, DOI 10.1007/s41870-020-00419-7
   Chan L, 2020, WIREL NETW, V26, P3291, DOI 10.1007/s11276-020-02260-z
   Chowdhury S, 2019, WIRELESS PERS COMMUN, V109, P189, DOI 10.1007/s11277-019-06559-9
   De D, 2016, IETE J RES, V62, P654, DOI 10.1080/03772063.2016.1160802
   Han Z, 2014, IEEE T NUCL SCI, V61, P732, DOI 10.1109/TNS.2014.2309351
   Hazra, 2022, IEEE SENS J
   Heiniger R. W., 2000, Proceedings of the 5th International Conference on Precision Agriculture, Bloomington, Minnesota, USA, 16-19 July, 2000, P1
   Huang KC, 2007, PROCEEDINGS OF FUTURE GENERATION COMMUNICATION AND NETWORKING, WORKSHOP PAPERS, VOL 2, P31
   Jain K, 2022, J SUPERCOMPUT, V78, P13624, DOI 10.1007/s11227-022-04419-1
   Kumaresan K, 2021, J AMB INTEL HUM COMP, V12, P3821, DOI 10.1007/s12652-020-01700-0
   Kyung Tae Kim, 2010, Proceedings of the 2010 IEEE 24th International Conference on Advanced Information Networking and Applications Workshops (WAINA 2010), P680, DOI 10.1109/WAINA.2010.62
   Mezghani M, 2019, J AMB INTEL HUM COMP, V10, P1275, DOI 10.1007/s12652-018-0950-9
   Mittal N, 2019, WIRELESS PERS COMMUN, V108, P473, DOI 10.1007/s11277-019-06413-y
   Pal V, 2015, IEEE INTERNET THINGS, V2, P399, DOI 10.1109/JIOT.2015.2408115
   Rashid B, 2016, J NETW COMPUT APPL, V60, P192, DOI 10.1016/j.jnca.2015.09.008
   Sankar S, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20205858
   Satapathy SS., 2006, P 2006 IFIP INT C WI
   Sha C, 2019, IEEE ACCESS, V7, P85226, DOI 10.1109/ACCESS.2019.2924919
   Shahraki A, 2020, COMPUT NETW, V180, DOI 10.1016/j.comnet.2020.107376
   Tanwar S, 2015, J NETW COMPUT APPL, V53, P39, DOI 10.1016/j.jnca.2015.03.004
   Wilson AJ, 2022, SOFTWARE PRACT EXPER, V52, P254, DOI 10.1002/spe.3019
NR 24
TC 4
Z9 4
U1 2
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2024
VL 54
IS 7
SI SI
BP 1241
EP 1256
DI 10.1002/spe.3095
EA MAY 2022
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TC7Y2
UT WOS:000792451000001
DA 2024-07-18
ER

PT J
AU Sun, WL
   Huang, YL
AF Sun, Wen-Lin
   Huang, Yu-Lun
TI Cross: A generic framework for system integration and its adaption in
   hospitals
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; embedded system; hospital information system; smart
   healthcare; system integration
ID CLOUD; ARCHITECTURE
AB Advances in healthcare systems require faster data transmission between medical instruments and hospital information systems (HISs) and cloud migration for better computing capability and scalability. Old medical instruments should be integrated with modern HISs to provide real-time examination service to patients. Still, such integration carries some problems, especially when novel services are involved, such as real-time fall detection and mobile healthcare. Some hospitals have formulated standard operating procedures (SOPs) in response, requiring the electronic health record generated by an old instrument to be manually converted and uploaded to the HIS by medical personnel. However, such SOPs may compromise the real-time performance and increase medical personnel workload and complexity. Thus, this article proposes a framework named Cross, which comprises an embedded bridging module, CrossBridger, and a server-side software program, CrossServer, to integrate old instruments into a modern HIS using an edge computing paradigm. With Cross, users can solve system integration problems and deploy more protective strategies in existing HISs to fulfill the demands of novel services relatively cheaply. Based on the proposed framework, we implement a solution that can automate most existing SOPs and lighten the workload of medical personnel so that they can provide better care and service to patients. We summarize the practical experience of the implementation based on the solution. As a case study, we deploy the implementation to a real-world hospital to demonstrate the feasibility of Cross. Furthermore, we evaluate Cross's efficacy under various network statuses in three experiments.
C1 [Sun, Wen-Lin; Huang, Yu-Lun] Natl Yang Ming Chiao Tung Univ, Dept Elect & Elect Engn, 1001 Univ Rd, Hsinchu 300, Taiwan.
C3 National Yang Ming Chiao Tung University
RP Huang, YL (corresponding author), Natl Yang Ming Chiao Tung Univ, Dept Elect & Elect Engn, 1001 Univ Rd, Hsinchu 300, Taiwan.
EM ylhuang@nycu.edu.tw
OI Sun, Wen-Lin/0000-0003-4298-037X
FU Taiwan's Ministry of Science and Technology [105-2221-E-009-040]
FX Taiwan's Ministry of Science and Technology, Grant/Award Number:
   105-2221-E-009-040
CR Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Azaria A, 2016, PROCEEDINGS 2016 2ND INTERNATIONAL CONFERENCE ON OPEN AND BIG DATA - OBD 2016, P25, DOI 10.1109/OBD.2016.11
   Brownell David, 2004, USB Gadget API for Linux
   Catarinucci L, 2015, IEEE INTERNET THINGS, V2, P515, DOI 10.1109/JIOT.2015.2417684
   Chen M., 2017, IEEE T BIG DATA, V7
   Demirkan H, 2013, IT PROF, V15, P38, DOI 10.1109/MITP.2013.35
   Garrison G, 2012, COMMUN ACM, V55, P62, DOI 10.1145/2330667.2330685
   Gholami MF, 2016, J SYST SOFTWARE, V120, P31, DOI 10.1016/j.jss.2016.06.068
   Guang L, 2012, UBICOMP'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P762
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Ker J, 2018, IEEE ACCESS, V6, P9375, DOI 10.1109/ACCESS.2017.2788044
   Kroah-Hartman G., 2005, USB GADGET API FRAME
   Maamuom MA., 2015, EXPLORING FACTORS IN, P154
   Maenhaut PJ, 2013, 2013 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2013), P900
   Meri A, 2019, TELEMAT INFORM, V36, P132, DOI 10.1016/j.tele.2018.12.001
   Oliveira T, 2014, INFORM MANAGE-AMSTER, V51, P497, DOI 10.1016/j.im.2014.03.006
   Qiang Duan, 2012, IEEE Transactions on Network and Service Management, V9, P373, DOI 10.1109/TNSM.2012.113012.120310
   Schneider A, 2017, BIOMEDICAL ENGINEERING IN GASTROINTESTINAL SURGERY, P473
   Shen DG, 2017, ANNU REV BIOMED ENG, V19, P221, DOI [10.1146/annurev-bioeng-071516044442, 10.1146/annurev-bioeng-071516-044442]
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Shi WS, 2016, COMPUTER, V49, P78, DOI 10.1109/MC.2016.145
   Shiyong Wang, 2016, International Journal of Distributed Sensor Networks, V2016, DOI 10.1155/2016/3159805
   Singh M, 2017, 2017 PATTERN RECOGNITION ASSOCIATION OF SOUTH AFRICA AND ROBOTICS AND MECHATRONICS (PRASA-ROBMECH), P162, DOI 10.1109/RoboMech.2017.8261141
   Yang TH, 2006, COMP MED SY, P99, DOI 10.1109/CBMS.2006.27
   Zhao JF, 2014, INT J AUTOM COMPUT, V11, P143, DOI 10.1007/s11633-014-0776-7
NR 25
TC 0
Z9 0
U1 2
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2022
VL 52
IS 7
BP 1643
EP 1660
DI 10.1002/spe.3079
EA FEB 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1X8ZE
UT WOS:000761208200001
DA 2024-07-18
ER

PT J
AU Cuculovic, M
   Fondement, F
   Devanne, M
   Weber, J
   Hassenforder, M
AF Cuculovic, Milos
   Fondement, Frederic
   Devanne, Maxime
   Weber, Jonathan
   Hassenforder, Michel
TI Semantics to the rescue of document-based XML diff: A JATS case study
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE academic publishing; change semantics; diff algorithms; document
   comparison; high-level changes; JATS; text-centric XML; XML diff
ID DETECTING CHANGES
AB The writing of digital text documents has become a longer process that usually goes through revision rounds. Document comparison is important for the human reader interested in changes made by the authors. These documents contain structural data using text-centric XML as one of their main storage systems. Current XML diff algorithms are able to represent differences with a limited number of edit operations: insert, delete, move and update. This approach does not fit the scope of digital text document comparison where the human reader needs to understand actual modifications made by the author. With JATS being a text-centric XML vocabulary, we propose within this paper a new XML diff algorithm called jats-diff, able to support bijection between higher-level modifications made by the authors, such as structural changes and restyling, and the changes detected between XML documents. In addition, jats-diff provides similarity information between different nodes in order to measure the impact of the text changes on the XML tree.
C1 [Cuculovic, Milos; Fondement, Frederic; Devanne, Maxime; Weber, Jonathan; Hassenforder, Michel] Univ Haute Alsace, IRIMAS, F-68100 Mulhouse, France.
   [Cuculovic, Milos] MDPI, R&D, Basel, Switzerland.
C3 Universites de Strasbourg Etablissements Associes; Universite de
   Haute-Alsace (UHA)
RP Cuculovic, M (corresponding author), Univ Haute Alsace, IRIMAS, F-68100 Mulhouse, France.
EM milos.cuculovic@uha.fr
RI Cuculovic, Milos/AGJ-1727-2022
OI Cuculovic, Milos/0000-0003-2154-9652
FU MDPI
FX MDPI, Grant/Award Number: cuculovic-thesis
CR [Anonymous], 2016, W3C EXTENSIBLE MARKU
   [Anonymous], 2018, W3C HTMLDIFF
   [Anonymous], 2014, P 29 ANN ACM S APPL
   Chawathe S. S., 1997, SIGMOD Record, V26, P26, DOI 10.1145/253262.253266
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   Ciancarini P, 2016, SOFTWARE PRACT EXPER, V46, P227, DOI 10.1002/spe.2305
   Cobéna G, 2002, PROC INT CONF DATA, P41, DOI 10.1109/ICDE.2002.994696
   Cuculovic M., 2020, P ACM S DOC ENG, P1
   Devlin J., 2018, BERT PRE TRAINING DE
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dos Santos R.C., 2007, SEKE 2007, P438
   Du JG, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3469
   Hunt J.W., 1976, An Algorithm for Differential File Comparison
   Jaccard P., 1901, B SOCIETE VAUDOISEDE, V37, P241
   Jatnika D, 2019, PROCEDIA COMPUT SCI, V157, P160, DOI 10.1016/j.procs.2019.08.153
   La Fontaine R., 2014, P BAL MARK C, P5
   LUHN HP, 1957, IBM J RES DEV, V1, P309, DOI 10.1147/rd.14.0309
   Mikolov Tomas, 2013, EFFICIENT ESTIMATION
   MILLER W, 1985, SOFTWARE PRACT EXPER, V15, P1025, DOI 10.1002/spe.4380151102
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Oliveira A, 2018, INFORM SYST, V78, P40, DOI 10.1016/j.is.2018.07.001
   Rönnau S, 2009, MULTIMED TOOLS APPL, V43, P253, DOI 10.1007/s11042-009-0271-2
   Ronnau S., 2005, Proceedings of the 2005 ACM symposium on Document engineering, New York, NY, USA, P10, DOI 10.1145/1096601.1096606
   Rönnau S, 2012, COMPUT SCI-RES DEV, V27, P95, DOI 10.1007/s00450-010-0140-2
   SELKOW SM, 1977, INFORM PROCESS LETT, V6, P184, DOI 10.1016/0020-0190(77)90064-3
   TICHY WF, 1984, ACM T COMPUT SYST, V2, P309, DOI 10.1145/357401.357404
   Zhang SH, 2004, LECT NOTES COMPUT SC, V3306, P279
NR 27
TC 0
Z9 0
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2022
VL 52
IS 6
BP 1496
EP 1516
DI 10.1002/spe.3074
EA FEB 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1A1RT
UT WOS:000754177400001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Alenezi, M
   Basit, HA
   Beg, MA
   Shaukat, MS
AF Alenezi, Mamdouh
   Basit, Hamid Abdul
   Beg, Maham Anwar
   Shaukat, Muhammad Saad
TI Synthesizing secure software development activities for linear and agile
   lifecycle models
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE knowledge management; software engineering; software security; wiki
   platform
AB Application security is an important concern, and security activities to support software development lifecycle processes, such as specification, design, implementation, and testing are increasingly in need. Despite the plethora of knowledge available for secure software development in online and books, software systems are seldom secure as developers lack security knowledge. The primary reason for this paradox is the diversity and overwhelming nature of the available security knowledge. In this article, we propose to synthesize the well-known secure software development practices for both linear and agile lifecycle models. Using the MediaWiki platform, we make this knowledge available to software developers and designers from a single source.
C1 [Alenezi, Mamdouh; Basit, Hamid Abdul] Prince Sultan Univ, Coll Comp & Informat Sci, POB 66833,Rafha St, Riyadh 11586, Saudi Arabia.
   [Beg, Maham Anwar] Lahore Leads Univ, Dept Comp Sci & Informat Technol, Lahore, Pakistan.
C3 Prince Sultan University
RP Alenezi, M (corresponding author), Prince Sultan Univ, Coll Comp & Informat Sci, POB 66833,Rafha St, Riyadh 11586, Saudi Arabia.
EM malenezi@psu.edu.sa
RI Basit, Hamid/AAG-3806-2020; Alenezi, Mamdouh/R-2639-2016
OI Basit, Hamid/0000-0002-1684-4262; Alenezi, Mamdouh/0000-0001-6852-1206
FU Prince Sultan University
FX The authors would like to acknowledge the support of Prince Sultan
   University to carry out this research work.
CR Acar Y, 2017, 2017 IEEE CYBERSECURITY DEVELOPMENT (SECDEV), P22, DOI 10.1109/SecDev.2017.17
   Agrawal A, 2019, COMPUT FRAUD SECUR, P11, DOI 10.1016/S1361-3723(19)30107-1
   Al-Matouq H, 2020, IEEE ACCESS, V8, P215758, DOI 10.1109/ACCESS.2020.3040220
   Alenezi, 2020, INT J STW ENG APPL, V11, P1
   Alenezi M., 2020, Int. J. Electr. Comput. Eng., V10, P6507
   [Anonymous], 2007, IEEE LATIN AM T
   Ansari MTJ, 2022, J KING SAUD UNIV-COM, V34, P191, DOI 10.1016/j.jksuci.2018.12.005
   Apvrille A, 2005, IEEE SECUR PRIV, V3, P10, DOI 10.1109/MSP.2005.103
   Baca D., 2012, THESIS BLEKINGE I TE
   Bezerra C. M. M., 2020, PROC 13 INT C QUALIT, P343
   Bruno L., 2012, MSSDL MICROSOFT SECU
   Byers D, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P301
   CLASP, 2009, COMPR LIGHTW APPL SE
   Mohino JD, 2019, ELECTRONICS-SWITZ, V8, DOI 10.3390/electronics8111218
   Ee SJ., 2020, SECURE SOFTWARE DEV
   Essafi M., 2007, International Conference on Software Engineering Advances (ICSEA 2007), P24
   Flechais I., 2003, BRINGING SECURITY HO, P49
   Futcher L., 2007, SECSDM MODEL INTEGRA, P41
   Gilliam DP, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P243
   Jones Russell L., 2004, Information Systems Security, V13, P29, DOI DOI 10.1201/1086/44797.13.5.20041101/84907.5
   Khan RA, 2021, IEEE ACCESS, V9, P19139, DOI 10.1109/ACCESS.2021.3052311
   Liou J. C., 2020, Innov. Cybersecur. Educ., V1, P213
   Maier P, 2017, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2017), DOI 10.1145/3098954.3103171
   McGraw G., 2006, SOFTWARE RELIABILITY, P6
   Microsoft Agile, 2009, SECURITY DEV LIFECYC
   Microsoft Security Engineering Portal, 2021, SEC ENG PORT
   Migues Sammy., 2009, BSIMM
   Mohaddes Deylami H., 2015, INT J COMPUT INTELL, V6, P2015
   Mohammed NM, 2017, COMPUT STAND INTER, V50, P107, DOI 10.1016/j.csi.2016.10.001
   Rindell K, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234187
   Romero BD, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P235, DOI 10.1109/ITNG.2009.151
   SAFECode, 2009, FUND PRACT SEC SOFTW
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   SAMM, 2009, SOFTWARE ASSURANCE M
   Núñez JCS, 2020, IEEE ACCESS, V8, P77653, DOI 10.1109/ACCESS.2020.2989113
   Sodiya A. S., 2006, Information Universe: Journal of Issues in Informing Science & Information Technology, V3, P635
NR 36
TC 4
Z9 4
U1 1
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2022
VL 52
IS 6
BP 1426
EP 1453
DI 10.1002/spe.3072
EA JAN 2022
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1A1RT
UT WOS:000749640000001
DA 2024-07-18
ER

PT J
AU Bijlsma, LA
   Kok, AJF
   Passier, HJM
   Pootjes, HJ
   Stuurman, S
AF Bijlsma, Lex A.
   Kok, Arjan J. F.
   Passier, Harrie J. M.
   Pootjes, Harold J.
   Stuurman, Sylvia
TI Evaluation of design pattern alternatives in Java
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE design patterns; features of programming languages; functional features;
   multiparadigm; programming languages
AB Design patterns are standard solutions to common design problems. The famous Gang of Four book describes more than twenty design patterns for the object-oriented paradigm. These patterns were developed more than twenty-five years ago, using the programming language concepts available at that time. Patterns do not always fit underlying domain concepts. For example, even when a concrete strategy is a pure function, the classical strategy pattern represents this as a separate subclass and as such obscures the intent of this pattern with extra complexities due to the inheritance-based implementation. Due to the ongoing development of oo-languages, a relevant question is whether the implementation of these patterns can be improved using new language features, such that they fit more closely with the intent. An additional question is then how we can decide which implementation is to be preferred. In this article, we investigate both questions, using the strategy pattern as an example. Our main contribution is that we show how to reason about different implementations, using both the description of a design pattern and design principles as guidance.
C1 [Bijlsma, Lex A.; Kok, Arjan J. F.; Passier, Harrie J. M.; Pootjes, Harold J.; Stuurman, Sylvia] Open Univ, Dept Comp Sci, Heerlen, Netherlands.
C3 Open University Netherlands
RP Stuurman, S (corresponding author), Open Univ, Dept Comp Sci, Heerlen, Netherlands.
EM Sylvia.Stuurman@ou.nl
OI Bijlsma, Lex/0000-0003-0916-2447; Stuurman, Sylvia/0000-0002-7547-6324
CR [Anonymous], 2008, Programming in Scala
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2014, The Java Language Specification, Java SE
   Bloch J., 2018, EFFECTIVE JAVA, V3rd
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gil Y, 2019, J COMPUT LANG, V54, DOI 10.1016/j.cola.2019.100905
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   Heinzl S, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P335
   Hentrich D, 2021, J COMPUT LANG, V65, DOI 10.1016/j.cola.2021.101052
   Jafari AJ, 2020, J COMPUT LANG, V56, DOI 10.1016/j.cola.2019.100938
   Kienle HM, 2010, IEEE SOFTWARE, V27, P60, DOI 10.1109/MS.2010.76
   Larman C, 2001, IEEE SOFTWARE, V18, P89, DOI 10.1109/52.922731
   Mazinanian D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133909
   Naugler D., 2006, J COMPUT SCI COLL, V21, P62
   Smith J.M., 2012, ELEMENTAL DESIGN PAT
   Stuurman S., 2019, TROUINF201901 OP U N
   Sullivan GT., 2002, AIM2002005 MIT ART I
NR 17
TC 0
Z9 0
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2022
VL 52
IS 5
BP 1305
EP 1315
DI 10.1002/spe.3061
EA DEC 2021
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0G4IQ
UT WOS:000736492600001
DA 2024-07-18
ER

PT J
AU Pozzan, G
   Vardanega, T
AF Pozzan, Gabriele
   Vardanega, Tullio
TI Rafting multiplayer video games
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE distributed consensus; fault tolerance; Raft; reference implementation;
   scalability evaluation
AB Consensus is a central concern for distributed systems, paramount for fault-tolerant applications. Online multiplayer (video) games are an attractive instance of highly distributed application, where user experience requires resilience provisioning that includes distributed consensus. In this work, we report on experiments we performed on the use of the Raft consensus algorithm in two Proof-of-Concept instances of famous video games. Our experiments aim to show the feasibility of such a novel architectural approach, and to assess the ensuing scalability quantitatively against game-specific performance metrics. To enable the transferability of this effort, we discuss our implementation choices and testing method, as well as the findings from said empirical evaluation.
C1 [Pozzan, Gabriele; Vardanega, Tullio] Univ Padua, Dept Math, Via Trieste 63, I-35121 Padua, Italy.
C3 University of Padua
RP Pozzan, G (corresponding author), Univ Padua, Dept Math, Via Trieste 63, I-35121 Padua, Italy.
EM gabriele.pozzan@studenti.unipd.it
RI Vardanega, Tullio/P-1739-2015
OI Vardanega, Tullio/0000-0002-0089-0889; Pozzan,
   Gabriele/0000-0002-3575-6233
CR Agrawal, 2017, LEADER MAJORITY WHY
   Bursztein E, 2011, P IEEE S SECUR PRIV, P506, DOI 10.1109/SP.2011.28
   Castro M, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P173, DOI 10.1145/571637.571640
   Copeland Christopher., 2016, Tangaroa: a byzantine fault tolerant raft
   CRISTIAN F, 1991, COMMUN ACM, V34, P56, DOI 10.1145/102792.102801
   Distler T., 2019, PAPOC 19
   Fuhrer P, 2002, SOFTWARE PRACT EXPER, V32, P645, DOI 10.1002/spe.453
   Howard, 2014, UCAMCLTR857 U CAMBR
   Howard Heidi, 2015, ACM SIGOPS Operating Systems Review, V49, P12
   Howard H., 2020, PAPOC 20
   Jimenez-Diaz G, 2012, SOFTWARE PRACT EXPER, V42, P235, DOI 10.1002/spe.1071
   Lamport L, 1998, ACM T COMPUT SYST, V16, P133, DOI 10.1145/279227.279229
   Moreland A., 2014, LILA CHEATING RESIST
   Ongaro D., 2014, CONSENSUS BRIDGING T, V1
   Ongaro D., 2014, 2014 USENIX ANN TECH, P305
   SCHNEIDER FB, 1990, COMPUT SURV, V22, P299, DOI 10.1145/98163.98167
   Wada D, 2009, 2009 SECOND INTERNATIONAL CONFERENCE ON THE APPLICATIONS OF DIGITAL INFORMATION AND WEB TECHNOLOGIES (ICADIWT 2009), P753, DOI 10.1109/ICADIWT.2009.5273978
   Yuen HY, 2019, BSCI '19: PROCEEDINGS OF THE 2019 ACM INTERNATIONAL SYMPOSIUM ON BLOCKCHAIN AND SECURE CRITICAL INFRASTRUCTURE, P19, DOI 10.1145/3327960.3332386
NR 18
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2022
VL 52
IS 4
SI SI
BP 1065
EP 1091
DI 10.1002/spe.3048
EA OCT 2021
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO1ZF
UT WOS:000711218400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Lemire, D
AF Lemire, Daniel
TI Number parsing at a gigabyte per second
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE floating&#8208; point numbers; IEEE&#8208; 754; parsing; software
   performance
AB With disks and networks providing gigabytes per second, parsing decimal numbers from strings becomes a bottleneck. We consider the problem of parsing decimal numbers to the nearest binary floating-point value. The general problem requires variable-precision arithmetic. However, we need at most 17 digits to represent 64-bit standard floating-point numbers (IEEE 754). Thus, we can represent the decimal significand with a single 64-bit word. By combining the significand and precomputed tables, we can compute the nearest floating-point number using as few as one or two 64-bit multiplications. Our implementation can be several times faster than conventional functions present in standard C libraries on modern 64-bit systems (Intel, AMD, ARM, and POWER9). Our work is available as open source software used by major systems such as Apache Arrow and Yandex ClickHouse. The Go standard library has adopted a version of our approach.
C1 [Lemire, Daniel] Univ Quebec TELUQ, DOT Lab Res Ctr, Montreal, PQ H2S 3L5, Canada.
C3 University of Quebec; Universite TELUQ
RP Lemire, D (corresponding author), Univ Quebec TELUQ, DOT Lab Res Ctr, Montreal, PQ H2S 3L5, Canada.
EM lemire@gmail.com
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922
CR Abseil, 2020, CHARCONV DESIGN NOTE
   Adams U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360595
   Adams U, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P270, DOI 10.1145/3192366.3192369
   Andrysco M, 2016, ACM SIGPLAN NOTICES, V51, P555, DOI 10.1145/2914770.2837654
   [Anonymous], 2000, IEEE Standard 1459-2000, P1, DOI [DOI 10.1109/IEEESTD.2000.91944, 10.1109/IEEESTD.2000.93398, DOI 10.1109/IEEESTD.2000.93398]
   Bray T., 2017, INTERNET ENG TASK FO, V8259
   Burger RG, 1996, ACM SIGPLAN NOTICES, V31, P108, DOI 10.1145/249069.231397
   CLINGER WD, 1990, SIGPLAN NOTICES, V25, P92, DOI 10.1145/93548.93557
   Clinger WD, 2004, ACM SIGPLAN NOTICES, V39, P360, DOI 10.1145/989393.989430
   Cowlishaw MF, 2001, P S COMP ARITHM, P147, DOI 10.1109/ARITH.2001.930114
   Darvish Rouhani B., 2020, ADV NEURAL INF PROCE, V33
   Dumas JG, 2014, IEEE T COMPUT, V63, P2106, DOI 10.1109/TC.2013.94
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Fisher RJ, 1999, LECT NOTES COMPUT SC, V1656, P290, DOI 10.1007/3-540-48319-5_19
   Fousse L, 2007, ACM T MATH SOFTWARE, V33, DOI 10.1145/1236463.1236468
   Gay DM., 1990, CORRECTLY ROUNDED BI
   GOLDBERG D, 1991, COMPUT SURV, V23, P5, DOI 10.1145/103162.103163
   Grützmacher T, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5418
   Gustafson JL, 2017, The End of Error: Unum Computing
   Hars L., 2006, EURASIP J EMBEDDED S, V2007
   Knuth D.E., 1998, ART COMPUTER PROGRAM, V3rd
   Krandick W., 1993, Proceedings. 11th Symposium on Computer Arithmetic (Cat. No.93CH3324-1), P228, DOI 10.1109/ARITH.1993.378088
   Langdale G, 2019, VLDB J, V28, P941, DOI 10.1007/s00778-019-00578-5
   Lemire D, 2019, SOFTWARE PRACT EXPER, V49, P953, DOI 10.1002/spe.2689
   Loitsch F, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P233, DOI 10.1145/1806596.1806623
   Mulders T, 2000, APPL ALGEBR ENG COMM, V11, P69, DOI 10.1007/s002000000037
   Seznec A, 2011, INT SYMP MICROARCH, P117
   Steele GL, 2004, ACM SIGPLAN NOTICES, V39, P372, DOI 10.1145/989393.989431
   WARREN H.S.Jr., 2013, Hacker's Delight, V2nd
NR 29
TC 4
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2021
VL 51
IS 8
BP 1700
EP 1727
DI 10.1002/spe.2984
EA MAY 2021
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TD0EL
UT WOS:000649018700001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Yousefi-Azar, M
   Varadharajan, V
   Hamey, L
   Chen, SP
AF Yousefi-Azar, Mahmood
   Varadharajan, Vijay
   Hamey, Len
   Chen, Shiping
TI Mutual Information and Feature Importance Gradient Boosting: Automatic
   byte n-gram feature reranking for Android malware detection
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE automatic feature ranking; byte&#8208; level n&#8208; gram; gradient
   boosting; malware detection; static tool
ID RELEVANCE; PATTERNS
AB The fast pace evolving of Android malware demands for highly efficient strategy. That is, for a range of malware types, a malware detection scheme needs to be resilient and with minimum computation performs efficient and precise. In this paper, we propose Mutual Information and Feature Importance Gradient Boosting (MIFIBoost) tool that uses byte n-gram frequency. MIFIBoost consists of four steps in the model construction phase and two steps in the prediction phase. For training, first, n-grams 2 <= n <= 4 of both the classes.dex and AndroidManifest.xml binary files are obtained. Then, MIFIBoost uses Mutual Information (MI) to determine the top most informative items from the entire n-gram vocabulary. In the third phase, MIFIBoost utilizes the Gradient Boosting algorithm to re-rank these top n-grams. For testing, MIFIBoost uses the learned vocabulary of byte n-grams term-frequency (tf) to feed into the classifier for prediction. Thus, MIFIBoost does not require reverse engineering. A key insight from this work is that filtering using XGBoost helps us to address the hard problem of detecting obfuscated malware better while having a negligible impact on nonobfuscated malware. We have conducted a wide range of experiments on four different datasets one of which is obfuscated, and MIFIBoost outperforms state-of-the-art tools. MIFIBoost's f1-score for Drebin, DexShare, and AMD datasets is 99.1%, 98.87%, and 99.62%, respectively, a False Positive Rate of 0.41% using AMD dataset. On average, the False Negative Rate of MIFIBoost is 2.1% for the PRAGuard dataset in which seven different obfuscation techniques are implemented. In addition to fast run-time performance and resiliency against obfuscated malware, the experiments show that MIFIBoost performs quite efficiently for five zero-day families with 99.78% AUC.
C1 [Yousefi-Azar, Mahmood; Hamey, Len] Macquarie Univ, Fac Sci & Engn, Dept Comp, Sydney, NSW, Australia.
   [Yousefi-Azar, Mahmood; Chen, Shiping] Commonwealth Sci & Ind Res Org, Data61, Sydney, NSW, Australia.
   [Varadharajan, Vijay] Univ Newcastle, Fac Engn & Built Environm, Newcastle, NSW, Australia.
C3 Macquarie University; Commonwealth Scientific & Industrial Research
   Organisation (CSIRO); University of Newcastle
RP Yousefi-Azar, M (corresponding author), Macquarie Univ, Fac Sci & Engn, Dept Comp, Sydney, NSW, Australia.
EM mahmood.yousefiazar@hdr.mq.edu.au
RI Chen, Shiping/B-7492-2011; yousefiazar, Mahmood/B-5878-2015
OI Chen, Shiping/0000-0002-4603-0024; Hamey, Leonard/0000-0001-8594-2176;
   yousefiazar, Mahmood/0000-0002-1029-6584
CR Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   [Anonymous], 2017, P 2017 EUR S RES COM
   [Anonymous], 2021, TEST FACTS FIGURES S
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Biggio B, 2018, PATTERN RECOGN, V84, P317, DOI 10.1016/j.patcog.2018.07.023
   Cai HP, 2019, IEEE T INF FOREN SEC, V14, P1455, DOI 10.1109/TIFS.2018.2879302
   Chen Xiangyi, 2018, ARXIV180802941
   Chistyakov A., 2018, ARXIV PREPRINT ARXIV
   Cui ZH, 2018, IEEE T IND INFORM, V14, P3187, DOI 10.1109/TII.2018.2822680
   Estévez PA, 2009, IEEE T NEURAL NETWOR, V20, P189, DOI 10.1109/TNN.2008.2005601
   Fengguo Wei, 2017, Detection of Intrusions and Malware, and Vulnerability Assessment. 14th International Conference, DIMVA 2017. Proceedings: LNCS 10327, P252, DOI 10.1007/978-3-319-60876-1_12
   Fonseca Y., 2018, ARXIV PREPRINT ARXIV
   Gao TC, 2019, IEEE T MOBILE COMPUT, V18, P2754, DOI 10.1109/TMC.2018.2880731
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   Gibert D, 2020, J NETW COMPUT APPL, V153, DOI 10.1016/j.jnca.2019.102526
   Kantchelian Alex, 2016, INT C MACHINE LEARNI, P2387
   Karbab EB, 2016, DIGIT INVEST, V18, pS33, DOI 10.1016/j.diin.2016.04.013
   Kephart J.O., 1994, P 4 VIRUS B INT C, P178
   Kim T, 2019, IEEE T INF FOREN SEC, V14, P773, DOI 10.1109/TIFS.2018.2866319
   Kolter J.Z., 2004, Proceedings of Knowledge Discovery and Data mining, P470
   Kolter JZ, 2006, J MACH LEARN RES, V7, P2721
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Li CL, 2019, IEEE ACCESS, V7, P184008, DOI 10.1109/ACCESS.2019.2958927
   Louppe G., 2013, ADV NEURAL INFORM PR, P431, DOI DOI 10.5555/2999611.2999660
   Maiorca D, 2015, COMPUT SECUR, V51, P16, DOI 10.1016/j.cose.2015.02.007
   Mariconti E, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23353
   Mirzaei O, 2019, FUTURE GENER COMP SY, V90, P240, DOI 10.1016/j.future.2018.07.066
   Norris J.R., 1998, MARKOV CHAINS, Vno. 2, DOI [DOI 10.1017/CBO9780511810633, 10.1017/CBO9780511810633]
   Peng HC, 2005, IEEE T PATTERN ANAL, V27, P1226, DOI 10.1109/TPAMI.2005.159
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Raff E, 2018, J COMPUT VIROL HACKI, V14, P1, DOI 10.1007/s11416-016-0283-1
   Ramírez-Gallego S, 2017, INT J INTELL SYST, V32, DOI 10.1002/int.21833
   Rieck K, 2008, LECT NOTES COMPUT SC, V5137, P108, DOI 10.1007/978-3-540-70542-0_6
   Sebastián M, 2016, LECT NOTES COMPUT SC, V9854, P230, DOI 10.1007/978-3-319-45719-2_11
   Sen S, 2018, IEEE T INF FOREN SEC, V13, P2563, DOI 10.1109/TIFS.2018.2824250
   Strobl C, 2007, BMC BIOINFORMATICS, V8, DOI 10.1186/1471-2105-8-25
   Suarez-Tangil G, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P309, DOI 10.1145/3029806.3029825
   Tao GH, 2018, IEEE T RELIAB, V67, P355, DOI 10.1109/TR.2017.2778147
   Wang X., 2015, 1 PLACE TEAM SAY NO
   Wang XL, 2019, IEEE T MOBILE COMPUT, V18, P2768, DOI 10.1109/TMC.2018.2886881
   Wolfe B, 2014, 2014 13TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P21, DOI 10.1109/ICMLA.2014.10
   Wong MY, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23118
   Yang W, 2017, ANN COMPUT SECURITY, P288, DOI 10.1145/3134600.3134642
   Yang Zhemin., 2013, P 20 ACM C COMPUTER, P1043, DOI [DOI 10.1145/2508859.2516676, 10.1145/2508859.2516676]
   Yousefi-Azar M, 2020, COMPUT J, V63, P1125, DOI 10.1093/comjnl/bxz121
   Yousefi-Azar M, 2018, LECT NOTES COMPUT SC, V11304, P568, DOI 10.1007/978-3-030-04212-7_50
   Yousefi-Azar M, 2018, IEEE ACCESS, V6, P49418, DOI 10.1109/ACCESS.2018.2864871
   Yousefi-Azar M, 2017, LECT NOTES COMPUT SC, V10638, P848, DOI 10.1007/978-3-319-70139-4_86
   Zhang JX, 2018, IEEE ACCESS, V6, P51964, DOI 10.1109/ACCESS.2018.2870534
   Zheng C., 2012, P 2 ACM WORKSHOP SEC, P93, DOI DOI 10.1145/2381934.2381950
NR 50
TC 2
Z9 2
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2021
VL 51
IS 7
BP 1518
EP 1539
DI 10.1002/spe.2971
EA APR 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO3PJ
UT WOS:000636640900001
DA 2024-07-18
ER

PT J
AU Zhang, M
   Krintz, C
   Wolski, R
AF Zhang, Michael
   Krintz, Chandra
   Wolski, Rich
TI Edge-adaptable serverless acceleration for machine learning Internet of
   Things applications
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Cloud functions; GPU; IoT; Scheduling; Serverless
AB Serverless computing is an emerging event-driven programming model that accelerates the development and deployment of scalable web services on cloud computing systems. Though widely integrated with the public cloud, serverless computing use is nascent for edge-based, Internet of Things (IoT) deployments. In this work, we present STOIC (serverless teleoperable hybrid cloud), an IoT application deployment and offloading system that extends the serverless model in three ways. First, STOIC adopts a dynamic feedback control mechanism to precisely predict latency and dispatch workloads uniformly across edge and cloud systems using a distributed serverless framework. Second, STOIC leverages hardware acceleration (e.g., GPU resources) for serverless function execution when available from the underlying cloud system. Third, STOIC can be configured in multiple ways to overcome deployment variability associated with public cloud use. We overview the design and implementation of STOIC and empirically evaluate it using real-world machine learning applications and multitier IoT deployments (edge and cloud). Specifically, we show that STOIC can be used for training image processing workloads (for object recognition)-once thought too resource-intensive for edge deployments. We find that STOIC reduces overall execution time (response latency) and achieves placement accuracy that ranges from 92% to 97%.
C1 [Zhang, Michael; Krintz, Chandra; Wolski, Rich] Univ Calif Santa Barbara, Dept Comp Sci, Santa Barbara, CA 93106 USA.
C3 University of California System; University of California Santa Barbara
RP Zhang, M (corresponding author), Univ Calif Santa Barbara, Dept Comp Sci, Santa Barbara, CA 93106 USA.
EM lebo@cs.ucsb.edu
FU National Science Foundation [ACI-1541215, CCF-1539586, CNS-1703560]; ONR
   NEEC [N00174-16-C-0020]
FX National Science Foundation, Grant/Award Numbers: ACI-1541215,
   CCF-1539586, CNS-1703560; ONR NEEC, Grant/Award Number: N00174-16-C-0020
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   [Anonymous], 2010, PROC 8 INT C MOBILE, DOI [DOI 10.1145/1814433, 10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   [Anonymous], 2017, Google
   Burns B, 2016, COMMUN ACM, V59, P50, DOI 10.1145/2890784
   Campos V, 2017, IEEE ACM INT SYMP, P677, DOI 10.1109/CCGRID.2017.110
   Cech HL, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON FOG COMPUTING (ICFC 2019), P31, DOI 10.1109/ICFC.2019.00013
   Elias Andy Rosales, 2017, 2017 IEEE/ACM Second International Conference on Internet-of-Things Design and Implementation (IoTDI), P247, DOI 10.1145/3054977.3054986
   HELLERSTEIN J. M., 2018, 9 BIENNIAL C INNOVAT
   Ishakian V, 2018, INT CONF CLOUD ENG, P257, DOI 10.1109/IC2E.2018.00052
   Jonas Eric, 2019, Cloud Programming Simplified: A Berkeley View on Serverless Computing
   Koc T, 2019, INFORM SOFTWARE TECH, V109, P14, DOI 10.1016/j.infsof.2019.01.003
   Kochovski P, 2019, FUTURE GENER COMP SY, V101, P747, DOI 10.1016/j.future.2019.07.030
   LeCun Y., 1995, The handbook of brain theory and neural networks, V3361, DOI [10.5555/303568.303704, DOI 10.5555/303568.303704]
   Lin W, 2017, P IEEE INT C CLOUD E
   Lin WT, 2019, DEBS'19: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON DISTRIBUTED AND EVENT-BASED SYSTEMS, P139, DOI 10.1145/3328905.3329511
   Lin WT, 2019, P IEEE IC2E PRAG CZE
   Lv B, 2019, ARXIV191210732
   Mohanty Sidhanth, 2018, THESIS
   Muslim N, 2015, PROCEEDINGS OF 2017 INTERNATIONAL CONFERENCE ON IMAGING, SIGNAL PROCESSING AND COMMUNICATION, P5, DOI 10.1145/3132300.3132310
   Naranjo DM, 2020, J PARALLEL DISTR COM, V139, P32, DOI 10.1016/j.jpdc.2020.01.004
   Painski U, 2017, J GRID COMPUT, V16, P85
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pu Q, 2015, SIGCOMM'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION, P421
   Shahrad M, 2019, MICRO'52: THE 52ND ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, P1063, DOI 10.1145/3352460.3358296
   Teerapittayanon S, 2017, INT CON DISTR COMP S, P328, DOI 10.1109/ICDCS.2017.226
   Vulimiri A., 2015, P 12 USENIX C NETW S, P323
   Weil SA, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P307
   Wolski R, 2019, SEC'19: PROCEEDINGS OF THE 4TH ACM/IEEE SYMPOSIUM ON EDGE COMPUTING, P236, DOI 10.1145/3318216.3363314
   Xiao L, 2018, IEEE WIREL COMMUN, V25, P116, DOI 10.1109/MWC.2018.1700291
   Zhang M, 2020, INT CONF PERVAS COMP, DOI 10.1109/percomworkshops48775.2020.9156239
NR 30
TC 16
Z9 17
U1 1
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2021
VL 51
IS 9
SI SI
BP 1852
EP 1867
DI 10.1002/spe.2944
EA DEC 2020
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT9JV
UT WOS:000599348700001
DA 2024-07-18
ER

PT J
AU Geist, V
   Moser, M
   Pichler, J
   Santos, R
   Wieser, V
AF Geist, Verena
   Moser, Michael
   Pichler, Josef
   Santos, Rodolfo
   Wieser, Volkmar
TI Leveraging machine learning for software redocumentation-A comprehensive
   comparison of methods in practice
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE comment classification; heuristics; legacy systems; machine learning; QR
   code; software system documentation
AB Source code comments contain key information about the underlying software system. Many redocumentation approaches, however, cannot exploit this valuable source of information. This is mainly due to the fact that not all comments have the same goals and target audience and can therefore only be used selectively for redocumentation. Performing a required classification manually, for example, in the form of heuristics, is usually time-consuming and error-prone and strongly dependent on programming languages and guidelines of concrete software systems. By leveraging machine learning (ML), it should be possible to classify comments and thus transfer valuable information from the source code into documentation with less effort but the same quality. We applied classical ML techniques but also deep learning (DL) approaches to legacy systems by transferring source code comments into meaningful representations using, for example, word embeddings but also novel approaches using quick response codes or a special character-to-image encoding. The results were compared with industry-strength heuristic classification. As a result, we found that ML outperforms the heuristics in number of errors and less effort, that is, we finally achieve an accuracy of more than 95% for an image-based DL network and even over 96% for a traditional approach using a random forest classifier.
C1 [Geist, Verena; Moser, Michael] Software Competence Ctr Hagenberg GmbH, Software Analyt & Evolut, Softwarepk 21, A-4232 Hagenberg, Austria.
   [Pichler, Josef] Univ Appl Sci Upper Austria, Dept Software Engn, Hagenberg, Austria.
   [Santos, Rodolfo; Wieser, Volkmar] Software Competence Ctr Hagenberg GmbH, Knowledge Based Vis Syst, Hagenberg, Austria.
C3 Softwarepark Hagenberg; Softwarepark Hagenberg
RP Geist, V (corresponding author), Software Competence Ctr Hagenberg GmbH, Software Analyt & Evolut, Softwarepk 21, A-4232 Hagenberg, Austria.
EM verena.geist@scch.at
OI Santos, Rodolfo/0009-0004-1705-1215
FU Osterreichische Forschungsforderungsgesellschaft [864839, 871299]
FX Osterreichische Forschungsforderungsgesellschaft, Grant/Award Numbers:
   864839, 871299
CR Aman H, 2018, ASIA PAC SOFWR ENG, P643, DOI 10.1109/APSEC.2018.00082
   Chen HC, 2019, J SYST SOFTWARE, V153, P45, DOI 10.1016/j.jss.2019.03.010
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   Conneau A, 2016, arXiv:1606.01781
   Corazza A, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P76, DOI 10.1109/SEAA.2015.20
   Derczynski L, 2016, LREC 2016 - TENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P261
   Dorninger B, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P536, DOI 10.1109/SANER.2017.7884669
   Geist V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P622, DOI [10.1109/SANER48275.2020.9054838, 10.1109/saner48275.2020.9054838]
   Gheisari M, 2017, IEEE INT C COMPUT, P173, DOI 10.1109/CSE-EUC.2017.215
   Grm K, 2018, IET BIOMETRICS, V7, P81, DOI 10.1049/iet-bmt.2017.0083
   Hastie T, 2001, SPRINGE SER STAT N
   He H., 2015, Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, P1576, DOI 10.18653/v1/D15-1181
   Henstorf KG, 1999, GRUNDSATZE VERFAHRUN, V2
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kragh MF, 2019, COMPUT BIOL MED, V115, DOI 10.1016/j.compbiomed.2019.103494
   Manning C.D., 1999, FDN STAT NATURAL LAN
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Mikolov Tomas, 2015, US Patent, Patent No. 9037464
   Moser M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P464, DOI 10.1109/SANER.2015.7081857
   Nielson F., 1999, Principles of Program Analysis
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Palangi H, 2016, IEEE-ACM T AUDIO SPE, V24, P694, DOI 10.1109/TASLP.2016.2520371
   Pascarella L, 2019, EMPIR SOFTW ENG, V24, P1499, DOI 10.1007/s10664-019-09694-w
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Prusa JD, 2016, PROCEEDINGS OF 2016 IEEE 17TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IEEE IRI), P411, DOI 10.1109/IRI.2016.61
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Schreck D., 2007, 9 INT WORKSHOP PRINC, P4
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Shinyama Y, 2018, ASIA PAC SOFWR ENG, P325, DOI 10.1109/APSEC.2018.00047
   Shrestha N., 2019, International Journal on Soft Computing, Artificial Intelligence and Applications (IJSCAI), V8, P1, DOI 10.5121/ijscai.2019.8101
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Triola M, 2014, Elementary Statistics, V12th
   Van Deursen A., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P40, DOI 10.1109/ICSM.1999.792497
   Van Geet J, 2010, P JOINT ERCIM WORKSH, P33
   Wang D, 2019, IEEE ACCESS, V7, P99900, DOI 10.1109/ACCESS.2019.2930309
   Zhang X, 2015, ADV NEUR IN, V28
NR 41
TC 6
Z9 6
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD APR
PY 2021
VL 51
IS 4
SI SI
BP 798
EP 823
DI 10.1002/spe.2933
EA NOV 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR8DY
UT WOS:000587698700001
DA 2024-07-18
ER

PT J
AU Hsu, IC
   Lin, YH
AF Hsu, I-Ching
   Lin, Yin-Hung
TI Integrated machine learning with semantic web for open government data
   recommendation based on cloud computing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; machine learning; open government data; semantic web
ID LINKED OPEN DATA; FUSION
AB Open government data (OGD) is a type of trusted information that can be used to verify the correctness of information on social platforms. Finding interesting OGD to serve personalized needs to facilitate the development of social platforms is a challenging research topic. This study explores how to link the Taiwanese government's open data platform with Facebook and how to recommend related OGD. First, an integrated machine learning with semantic web into cloud computing framework is defined. Next, the linked data query platform (LDQP) is developed to validate its feasibility. The LDQP provides a graphical approach for personal query and links with related Facebook fan pages. LDQP automatically finds highly relevant OGD based on recent topics that users are following on Facebook when users login to Facebook via the LDQP. In this way, the LDQP query result can be dynamically adjusted and graphically displayed according to user's Facebook operations.
C1 [Hsu, I-Ching; Lin, Yin-Hung] Natl Formosa Univ, Dept Comp Sci & Informat Engn, 64 Wenhua Rd, Huwei Township 632, Yunlin, Taiwan.
C3 National Formosa University
RP Hsu, IC (corresponding author), Natl Formosa Univ, Dept Comp Sci & Informat Engn, 64 Wenhua Rd, Huwei Township 632, Yunlin, Taiwan.
EM hsuic@nfu.edu.tw
CR Abele Andrejs., 2018, The linking open data cloud diagram
   Afful-Dadzie E, 2017, GOV INFORM Q, V34, P244, DOI 10.1016/j.giq.2017.02.005
   Amazon, 2018, AM SIMPL STOR SERV A
   [Anonymous], 2018, Amazon Elastic Compute Cloud
   [Anonymous], 2018, Traditional Chinese Instruments
   Apache, 2017, AP
   Auer S, 2007, LECT NOTES COMPUT SC, V4825, P722, DOI 10.1007/978-3-540-76298-0_52
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Berners-Lee Tim., 2009, LINKED DATA
   Bokhari MU, 2018, IETE J RES, V2018, P1
   Bossert M, 2015, 4 WORKSH KNOWL DISC
   Bouras C, 2010, LECT NOTES ARTIF INT, V6278, P379, DOI 10.1007/978-3-642-15393-8_43
   Chen L, 2017, 2017 IEEE SMARTWORLD, UBIQUITOUS INTELLIGENCE & COMPUTING, ADVANCED & TRUSTED COMPUTED, SCALABLE COMPUTING & COMMUNICATIONS, CLOUD & BIG DATA COMPUTING, INTERNET OF PEOPLE AND SMART CITY INNOVATION (SMARTWORLD/SCALCOM/UIC/ATC/CBDCOM/IOP/SCI)
   Dimitrov M, 2015, P ESWC DEV WORKSH 20
   Ding P-W, 2018, 2 INT C DIG SIGN PRO
   Filipiak D, 2017, LECT NOTES BUS INF P, V263, P418, DOI 10.1007/978-3-319-52464-1_39
   Ganino G, 2018, SOFTWARE PRACT EXPER, V48, P2061
   Gao F, 2016, 17 ANN INT C DIG GOV
   Google, 2018, GOOGL APP ENG
   Hsu IC, 2021, J AMB INTEL HUM COMP, V12, P1023, DOI 10.1007/s12652-020-02119-3
   Hsu IC, 2019, CMC-COMPUT MATER CON, V61, P929, DOI 10.32604/cmc.2019.07876
   Hsu IC, 2019, LECT NOTES ARTIF INT, V11606, P391, DOI 10.1007/978-3-030-22999-3_34
   Hsu IC, 2015, EXPERT SYST, V32, P77, DOI 10.1111/exsy.12063
   Hsu IC, 2014, ELECTRON LIBR, V32, P147, DOI 10.1108/EL-07-2012-0096
   Hsu IC, 2013, APPL SOFT COMPUT, V13, P3745, DOI 10.1016/j.asoc.2013.03.004
   Ishibashi R, 2015, ANN IEEE SYST CONF, P235, DOI 10.1109/SYSCON.2015.7116758
   Janwe NJ, 2018, APPL INTELL, V48, P2047, DOI 10.1007/s10489-017-1033-x
   Jena, 2007, JENA SEMANTIC WEB FR
   Lnenicka M, 2019, GOV INFORM Q, V36, P129, DOI 10.1016/j.giq.2018.11.004
   Microsoft, 2010, MICROSOFT AZURE
   Mockus M, 2017, P 7 INT C E DEM OP G
   Morshed A, 2013, 2013 IEEE 29 INT C D
   Musto C, 2017, INFORM PROCESS MANAG, V53, P405, DOI 10.1016/j.ipm.2016.12.003
   Nguyen MC, 2017, BDIOT 2017 P INT C B
   Oliveira M.I.S., 2016, 17 INT DIG GOV RES C, P415, DOI DOI 10.1145/2912160.2912163
   Pai FP, 2016, APPL INTELL, V44, P1, DOI 10.1007/s10489-015-0690-x
   Paulheim Heiko, 2018, Reasoning Web. Learning, Uncertainty, Streaming, and Scalability. 14th International Summer School 2018. Tutorial Lectures: Lecture Notes in Computer Science (LNCS 11078), P110, DOI 10.1007/978-3-030-00338-8_5
   Peng KH, 2015, WIRELESS OPTIC COMM, P9, DOI 10.1109/WOCC.2015.7346106
   Poggi F, 2016, 4 INT WORKSH LINK DA, P44
   Qanbari S, 2015, INT C FUT INT THINGS
   Roul RK, 2016, ANNU IEEE IND CONF
   Shadbolt N, 2006, IEEE INTELL SYST, V21, P96, DOI 10.1109/MIS.2006.62
   Taiwan, 2019, TAIWAN OPEN GOVT DAT
   Tripathi BK, 2017, APPL INTELL, V47, P382, DOI 10.1007/s10489-017-0902-7
   Vecchiolas C., 2009, ANEKA SOFTWARE PLATF
   Vetrò A, 2016, GOV INFORM Q, V33, P325, DOI 10.1016/j.giq.2016.02.001
   Vrancken C, 2019, EXPERT SYST APPL, V125, P268, DOI 10.1016/j.eswa.2019.01.077
   Wang RQ, 2019, EXPERT SYST APPL, V123, P70, DOI 10.1016/j.eswa.2019.01.036
   Zhang Q, 2018, IEEE 38 INT C DISTR
   Zhang QC, 2018, INFORM FUSION, V42, P146, DOI 10.1016/j.inffus.2017.10.006
   Zhao YP, 2018, GOV INFORM Q, V35, P1, DOI 10.1016/j.giq.2018.01.002
   Zhou XK, 2014, EXPERT SYST APPL, V41, P6967, DOI 10.1016/j.eswa.2014.06.008
NR 52
TC 5
Z9 5
U1 6
U2 40
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2020
VL 50
IS 12
BP 2293
EP 2312
DI 10.1002/spe.2892
EA SEP 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA OO7CG
UT WOS:000568830800001
DA 2024-07-18
ER

PT J
AU Bogo, M
   Soldani, J
   Neri, D
   Brogi, A
AF Bogo, Matteo
   Soldani, Jacopo
   Neri, Davide
   Brogi, Antonio
TI Component-aware orchestration of cloud-based enterprise applications,
   from TOSCA to Docker and Kubernetes
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE application orchestration; cloud; Docker; TOSCA
ID ARCHITECTURE; SIMULATION
AB Enterprise IT is currently facing the challenge of coordinating the management of complex, multicomponent applications across heterogeneous cloud platforms. Containers and container orchestrators provide a valuable solution to deploy multicomponent applications over cloud platforms, by coupling the lifecycle of each application component to that of its hosting container. We hereby propose a solution for going beyond such a coupling, based on the OASIS standard TOSCA and on Docker. We indeed propose a novel approach for deploying multicomponent applications on top of existing container orchestrators, which enables managing each component independently from the container used to run it. We also present prototype tools that implement our approach, and we show how we effectively exploited them to carry out a concrete case study.
C1 [Bogo, Matteo; Soldani, Jacopo; Neri, Davide; Brogi, Antonio] Univ Pisa, Dept Comp Sci, Pisa, Italy.
C3 University of Pisa
RP Soldani, J (corresponding author), Univ Pisa, Dipartimento Informat, Largo B Pontecorvo 3, I-56127 Pisa, Italy.
EM soldani@di.unipi.it
RI Brogi, Antonio/HLQ-2040-2023; Soldani, Jacopo/O-5057-2019
OI Soldani, Jacopo/0000-0002-2435-3543; Neri, Davide/0000-0002-4758-4328;
   Brogi, Antonio/0000-0003-2048-2468
CR API, API DES GUID GOOGL D
   Binz T, 2013, LECT NOTES COMPUT SC, V8274, P692, DOI 10.1007/978-3-642-45005-1_62
   Brogi A, 2018, SOFTWARE PRACT EXPER, V48, P2061, DOI 10.1002/spe.2625
   Brogi A, 2018, SCI COMPUT PROGRAM, V166, P194, DOI 10.1016/j.scico.2018.07.005
   Brogi A, 2018, SOFTWARE PRACT EXPER, V48, P1461, DOI 10.1002/spe.2583
   Brogi A, 2018, J SYST SOFTWARE, V139, P189, DOI 10.1016/j.jss.2018.02.005
   Brogi A, 2016, LECT NOTES COMPUT SC, V9839, P334, DOI 10.1007/978-3-319-48992-6_25
   Brogi A, 2014, LECT NOTES COMPUT SC, V8745, P171, DOI 10.1007/978-3-662-44879-3_13
   Business Process Model and Notation (BPMN), 2011, BUS PROC MOD NOT BPM
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Carrasco J, 2018, COMPUT STAND INTER, V58, P167, DOI 10.1016/j.csi.2018.01.005
   Carrasco J, 2016, IEEE INT CONF CLOUD, P951, DOI 10.1109/CLOUD.2016.0143
   Chauhan MA, 2017, SOFTWARE PRACT EXPER, V47, P599, DOI 10.1002/spe.2409
   Chekin P, 2017, MULTICONTAINER PODS
   Cochrane K., 2018, DOCKER COOKBOOK 100, V2nd
   Di Cosmo R, 2014, INFORM COMPUT, V239, P100, DOI 10.1016/j.ic.2014.11.002
   Erl T., 2013, Cloud Computing: Concepts, Technology, & Architecture
   Etchevers X, 2017, SOFTWARE PRACT EXPER, V47, P3, DOI 10.1002/spe.2400
   Hightower K., 2017, Kubernetes: up and running dive into future of infrastructure, V1st
   Jamshidi P, 2017, SOFTWARE PRACT EXPER, V47, P1159, DOI 10.1002/spe.2442
   Joseph CT, 2019, SOFTWARE PRACT EXPER, V49, P1448, DOI 10.1002/spe.2729
   Kehrer S, 2018, COMPUT SCI-RES DEV, V33, P305, DOI 10.1007/s00450-017-0385-0
   Laplante P.A., 2007, What every engineer should know about software engineering
   Matthias K, 2018, DOCKER RUNNING
   Mitchell M., 2001, ADV LINUX PROGRAMMIN
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Pahl C, 2015, 2015 3RD INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD) AND INTERNATIONAL CONFERENCE ON OPEN AND BIG (OBD), P379, DOI 10.1109/FiCloud.2015.35
   Piraghaj SF, 2017, SOFTWARE PRACT EXPER, V47, P505, DOI 10.1002/spe.2422
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Soltesz S., 2007, Operating Systems Review, V41, P275, DOI 10.1145/1272998.1273025
   TOSCA, 2019, SIMPL PROF YAML VERS
   Tozzi C, 2017, ENTERPRISE DOCKER
   Wurster M, 2019, LNCS, V12019, P294
   Wurster M, 2020, SICS SOFTWARE, V35, P63, DOI 10.1007/s00450-019-00412-x
   Zúñiga-Prieto M, 2018, SOFTWARE PRACT EXPER, V48, P327, DOI 10.1002/spe.2457
NR 35
TC 11
Z9 11
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2020
VL 50
IS 9
BP 1793
EP 1821
DI 10.1002/spe.2848
EA MAY 2020
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MT2QQ
UT WOS:000539430200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Baker, T
   Asim, M
   MacDermott, A
   Iqbal, F
   Kamoun, F
   Shah, B
   Alfandi, O
   Hammoudeh, M
AF Baker, Thar
   Asim, Muhammad
   MacDermott, Aine
   Iqbal, Farkhund
   Kamoun, Faouzi
   Shah, Babar
   Alfandi, Omar
   Hammoudeh, Mohammad
TI A secure fog-based platform for SCADA-based IoT critical infrastructure
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE critical infrastructure; fog computing; IoT; mission-critical data;
   SCADA systems; secured platform
ID CLOUD; SYSTEMS
AB The rapid proliferation of Internet of things (IoT) devices, such as smart meters and water valves, into industrial critical infrastructures and control systems has put stringent performance and scalability requirements on modern Supervisory Control and Data Acquisition (SCADA) systems. While cloud computing has enabled modern SCADA systems to cope with the increasing amount of data generated by sensors, actuators, and control devices, there has been a growing interest recently to deploy edge data centers in fog architectures to secure low-latency and enhanced security for mission-critical data. However, fog security and privacy for SCADA-based IoT critical infrastructures remains an under-researched area. To address this challenge, this contribution proposes a novel security "toolbox" to reinforce the integrity, security, and privacy of SCADA-based IoT critical infrastructure at the fog layer. The toolbox incorporates a key feature: a cryptographic-based access approach to the cloud services using identity-based cryptography and signature schemes at the fog layer. We present the implementation details of a prototype for our proposed secure fog-based platform and provide performance evaluation results to demonstrate the appropriateness of the proposed platform in a real-world scenario. These results can pave the way toward the development of a more secure and trusted SCADA-based IoT critical infrastructure, which is essential to counter cyber threats against next-generation critical infrastructure and industrial control systems. The results from the experiments demonstrate a superior performance of the secure fog-based platform, which is around 2.8 seconds when adding five virtual machines (VMs), 3.2 seconds when adding 10 VMs, and 112 seconds when adding 1000 VMs, compared to the multilevel user access control platform.
C1 [Baker, Thar; MacDermott, Aine] Liverpool John Moores Univ, Dept Comp Sci, Liverpool L3 5UA, Merseyside, England.
   [Asim, Muhammad] Natl Univ Comp & Emerging Sci, Dept Comp Sci, Islamabad, Pakistan.
   [Iqbal, Farkhund; Shah, Babar; Alfandi, Omar] Zayed Univ, Coll Technol Innovat, Abu Dhabi, U Arab Emirates.
   [Kamoun, Faouzi] Esprit Sch Engn, Ariana, Tunisia.
   [Hammoudeh, Mohammad] Manchester Metropolitan Univ, Sch Comp Math & Digital Technol, Manchester, Lancs, England.
C3 University of Liverpool; Liverpool John Moores University; Zayed
   University; Manchester Metropolitan University
RP Baker, T (corresponding author), Liverpool John Moores Univ, Dept Comp Sci, Liverpool L3 5UA, Merseyside, England.
EM t.baker@ljmu.ac.uk
RI Hammoudeh, Mohammad/A-5797-2012; Iqbal, Farkhund/AAH-8756-2020;
   Hammoudeh, Mohammad Ali A./GYU-3435-2022; Alfandi, Omar/S-7011-2019;
   Baker, Thar/H-6073-2019
OI Hammoudeh, Mohammad/0000-0003-1058-0996; Iqbal,
   Farkhund/0000-0001-9081-3598; Hammoudeh, Mohammad Ali
   A./0000-0002-9735-2365; Alfandi, Omar/0000-0002-9581-401X; Baker,
   Thar/0000-0002-5166-4873; MacDermott, Aine/0000-0001-8939-4664; Asim,
   Muhammad/0000-0002-2894-7891
CR Aazam M., 2015, IEEE 29 INT C ADV IN
   Alam Muahammad Tanvir, 2016, INFOCOMP Journal of Computer Science, V15, P19
   Alrawais A, 2017, IEEE INTERNET COMPUT, V21, P34, DOI 10.1109/MIC.2017.37
   [Anonymous], 2009, HOTCLOUD 09 P 2009 C
   [Anonymous], 2016, ARXIV161105539
   [Anonymous], 2015, INT C WIR ALG SYST A
   [Anonymous], 2014, 2014 FED C COMP SCI
   [Anonymous], 2013, P 2 ACM SIGCOMM WORK
   Baker T, 2017, J NETW COMPUT APPL, V89, P96, DOI 10.1016/j.jnca.2017.03.008
   Barajas O, 2017, INTERNET THINGS IOT
   Bitzer B, 2013, 2013 48TH INTERNATIONAL UNIVERSITIES' POWER ENGINEERING CONFERENCE (UPEC)
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Byun J, 2012, 2012 IEEE INT C CONS
   Cecil NL, 2015, STRIKING A BALANCE: A COMPREHENSIVE APPROACH TO EARLY LITERACY, 5TH EDITION, P15
   Dastjerdi AV, 2016, ARXIV160402752
   Denning DE, 2012, FUTURE INTERNET, V4, P672, DOI 10.3390/fi4030672
   Do CT, 2015, 2015 INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN), P324, DOI 10.1109/ICOIN.2015.7057905
   Dsouza C, 2014, 2014 IEEE 15 INT C I
   Dubey H, 2015, P ASE BIGD SOC INF K
   Federal Trade Commission, 2015, INT THINGS PRIV SEC
   Fernandez EB, 2016, FUTURE INTERNET, V8, DOI 10.3390/fi8020013
   Gourbesville P, 2012, HOUILLE BLANCHE, P11, DOI 10.1051/lhb/2012034
   Khoshkbarforoushha A, 2017, IEEE T EMERG TOP COM, V5, P120, DOI 10.1109/TETC.2016.2597546
   Kim HJ, 2012, INT J DISTRIB SENS N, DOI 10.1155/2012/514836
   Lee K, 2015, INT CONF NETW FUT
   Lombardi F, 2011, J NETW COMPUT APPL, V34, P1113, DOI 10.1016/j.jnca.2010.06.008
   Ma Y, 2015, INFORM SCIENCES, V319, P171, DOI 10.1016/j.ins.2014.10.006
   MacDermott a, 2013, P 12 EUR C INF WARF
   MacDermott A, 2015, INT J CRIT INFRASTRU, V11, P365, DOI 10.1504/IJCIS.2015.073843
   Mackay M, 2012, COMPUT LAW SECUR REV, V28, P679, DOI 10.1016/j.clsr.2012.07.007
   Nechibvute A., 2013, Int. J. Eng. Technol., V3, P1025
   Nepal S, 2015, IEEE CLOUD COMPUT, V2, P78, DOI 10.1109/MCC.2015.36
   Oh C, 2015, IEEE INT CON MULTI
   Okay FY, 2016, 2016 INTERNATIONAL SYMPOSIUM ON NETWORKS, COMPUTERS AND COMMUNICATIONS (ISNCC), DOI 10.1109/ISNCC.2016.7746062
   Paganini P., 2013, SCADA Security of Critical Infrastructures
   Pereira J, 2008, MONITORING CONTROL W
   Piggin R. S. H., 2014, IET ISA 60 INT INSTR
   Rudner M, 2013, INT J INTELL COUNTER, V26, P453, DOI 10.1080/08850607.2013.780552
   Sadeghi AR, 2015, DES AUT CON, DOI 10.1145/2744769.2747942
   Sajid A, 2016, IEEE ACCESS, V4, P1375, DOI 10.1109/ACCESS.2016.2549047
   Sarkar S, 2018, IEEE T CLOUD COMPUT, V6, P46, DOI 10.1109/TCC.2015.2485206
   Stojmenovic I, 2016, CONCURR COMP-PRACT E, V28, P2991, DOI 10.1002/cpe.3485
   Stouffer KK, 2009, RECOMMENDED PRACTISE
   Takagi H, 2015, 2015 54 ANN C SOC IN
   Vaquero LM, 2014, ACM SIGCOMM COMP COM, V44, P27, DOI 10.1145/2677046.2677052
   W.L.C.A.C.P Ltd, 2017, AUT REM SCAD
   Wang MS, 2016, INT J DISTRIB SYST T, V7, P15, DOI 10.4018/IJDST.2016010102
   Yannuzzi M., 2014, 2014 IEEE 19 INT WOR
   Zao JK, 2014, 2017 INT C INT ENV I
NR 49
TC 38
Z9 39
U1 0
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2020
VL 50
IS 5
SI SI
BP 503
EP 518
DI 10.1002/spe.2688
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE2UO
UT WOS:000526578200004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zhang, PY
   Wang, C
   Qin, ZY
   Cao, HT
AF Zhang, Peiying
   Wang, Chao
   Qin, Zeyu
   Cao, Haotong
TI A multidomain virtual network embedding algorithm based on
   multiobjective optimization for Internet of Drones architecture in
   Industry 4.0
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cross-domain virtual network mapping algorithm; Industry 4; 0; MP-VNE
   algorithm; UAV network technology
AB Unmanned aerial vehicle (UAV) has a broad application prospect in the future, especially in the Industry 4.0. The development of Internet of Drones (IoD) makes UAV operation more autonomous. Network virtualization technology is a promising technology to support IoD, so the allocation of virtual resources becomes a crucial issue in IoD. How to rationally allocate potential material resources has become an urgent problem to be solved. The main work of this paper is presented as follows: (a) In order to improve the optimization performance and reduce the computation time, we propose a multidomain virtual network embedding algorithm (MP-VNE) adopting the centralized hierarchical multidomain architecture. The proposed algorithm can avoid the local optimum through incorporating the genetic variation factor into the traditional particle swarm optimization process. (b) In order to simplify the multiobjective optimization problem, we transform the multiobjective problem into a single-objective problem through weighted summation method. The results prove that the proposed algorithm can rapidly converge to the optimal solution. (c) In order to reduce the mapping cost, we propose an algorithm for selecting candidate nodes based on the estimated mapping cost. Each physical domain calculates the estimated mapping cost of all nodes according to the formula of the estimated mapping cost, and chooses the node with the lowest estimated mapping cost as the candidate node. The simulation results show that the proposed MP-VNE algorithm has better performance than MC-VNM, LID-VNE, and other algorithms in terms of delay, cost and comprehensive indicators.
C1 [Zhang, Peiying; Wang, Chao] China Univ Petr East China, Coll Comp Sci & Technol, Qingdao, Peoples R China.
   [Qin, Zeyu] Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, Beijing, Peoples R China.
   [Cao, Haotong] Nanjing Univ Posts & Telecommun, Coll Telecommun & Informat Engn, Nanjing, Peoples R China.
C3 China University of Petroleum; Beijing University of Posts &
   Telecommunications; Nanjing University of Posts & Telecommunications
RP Zhang, PY (corresponding author), China Univ Petr East China, Coll Comp Sci & Technol, Qingdao, Peoples R China.; Cao, HT (corresponding author), Nanjing Univ Posts & Telecommun, Coll Telecommun & Informat Engn, Nanjing, Peoples R China.
EM 25640521@qq.com; 1015010309@njupt.edu.cn
FU Fundamental Research Funds for the Central Universities" of China
   University of Petroleum (East China) [18CX02139A]
FX The "Fundamental Research Funds for the Central Universities" of China
   University of Petroleum (East China), Grant/Award Number: 18CX02139A
CR Alicherry M, 2012, IEEE INFOCOM SER, P963, DOI 10.1109/INFCOM.2012.6195847
   Anderson T, 2005, COMPUTER, V38, P34, DOI 10.1109/MC.2005.136
   Anderson T, 2014, ACM SIGCOMM COMP COM, V44, P81, DOI 10.1145/2656877.2656889
   Aujla GS, 2022, IEEE T SUST COMPUT, V7, P263, DOI 10.1109/TSUSC.2019.2907110
   Bechtold S, 2014, COMMUN ACM, V57, P21, DOI 10.1145/2644146
   Cai ZP, 2010, GLOB TELECOMM CONF
   Cao H., 2019, IEEE IOT J, V99, P1
   Cao HT, 2020, IEEE T IND INFORM, V16, P1406, DOI 10.1109/TII.2019.2936074
   Cao HT, 2018, IEEE T NETW SERV MAN, V15, P356, DOI 10.1109/TNSM.2017.2778106
   Cao HT, 2018, IEEE INTERNET THINGS, V5, P108, DOI 10.1109/JIOT.2017.2773489
   Chaudhary R., 2018, P 2018 IEEE INT C CO, P1
   Cheng X, 2011, J COMMUN, V32, P147
   Chowdhury NMMK, 2009, IEEE COMMUN MAG, V47, P20, DOI 10.1109/MCOM.2009.5183468
   Dhanoa KK, 2019, INT J INJ CONTROL SA, V26, P225, DOI 10.1080/17457300.2019.1625413
   Dietrich D, 2013, INT WORKSH REQUIRE, P1, DOI 10.1109/RePa.2013.6602664
   Fisher D, 2014, ACM SIGCOMM COMP COM, V44, P45, DOI 10.1145/2656877.2656884
   Garg S, 2019, IEEE CONSUM ELECTR M, V8, P35, DOI 10.1109/MCE.2019.2941345
   Geng Rui-wen, 2016, Journal of Chinese Computer Systems, V37, P2593
   Gu Y, 2016, J HUAQIAO U NATURAL, V37, P507
   Han Y, 2011, ZTE TECH, V17, P20
   Hao Z, 2008, J CHONGQ I TECH NATU, V05, P156
   Houidi I, 2008, IEEE ICC, P5634, DOI 10.1109/ICC.2008.1056
   Houidi I, 2011, COMPUT NETW, V55, P1011, DOI 10.1016/j.comnet.2010.12.011
   Jiang R, 2002, P INT PAR DISTR PROC, V6, P266
   [江逸茗 Jiang Yiming], 2018, [工程科学与技术, Advanced Engineering Sciences], V50, P118
   Kaur K, 2022, IEEE T CLOUD COMPUT, V10, P172, DOI 10.1109/TCC.2019.2950002
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Khan A, 2012, IEEE COMMUN MAG, V50, P136, DOI 10.1109/MCOM.2012.6122544
   Kurose F., 2013, Computer Networking: A Top-Down Approach, V6th
   Liu Q, 2019, CHINA EQUIP ENG, V8, P218
   Moreno-Vozmediano R, 2013, IEEE INTERNET COMPUT, V17, P18, DOI 10.1109/MIC.2012.69
   Peng L, 2015, J S CHINA U TECH NAT, V9, P67
   Porter D., 2013, INTERNET CULTURE
   Samuel F, 2013, J INTERNET SERV APPL, V4, DOI 10.1186/1869-0238-4-6
   Sun G. L., 2012, IJM, V5, P1
   Walter J., 2001, P 1 ANN WORKSH PRINC, P178
   Werle C, 2011, ACM SIGCOMM COMP COM, V41, P412, DOI 10.1145/2043164.2018495
   Wu Jian-Ping, 2008, Chinese Journal of Computers, V31, P1536
   Xiao A, 2014, RUAN JIAN XUE BAO, V25, P2018
   Xu J, 2004, COMPUT ENG DESIGN, V04, P108
   Zaheer FE, 2010, IEEE IFIP NETW OPER, P471, DOI 10.1109/NOMS.2010.5488487
   Zhang S, 2014, IEEE T PARALL DISTR, V25, P816, DOI 10.1109/TPDS.2013.64
   Zhu Y, 2016, P IEEE INT C COMP CO, P112
NR 43
TC 19
Z9 19
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2022
VL 52
IS 3
SI SI
BP 710
EP 728
DI 10.1002/spe.2815
EA MAR 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YS2YA
UT WOS:000561191700001
DA 2024-07-18
ER

PT J
AU Lv, ZH
AF Lv, Zhihan
TI Security of Internet of Things edge devices
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE edge node; gateway security; Internet of Things
ID IOT; ENVIRONMENT
AB The purpose of the study is to meet the more needs of the future social development for the Internet of things (IoT) and make IoT better provide more convenience for people and reduce the risk of data leakage in the IoT system. Starting with the IoT edge devices, the centralized and distributed hit rate and average corresponding speed of the edge nodes are studied. Meanwhile, the gateway security of the edge devices designed is discussed to obtain a more reliable gateway. The research results show that the Max-PSN cache algorithm proposed in this article is superior to the other two algorithms in terms of hit rate and average response speed of centralized and distributed fog systems, which shows the effectiveness of the cache algorithm. The gateway designed shows good randomness through frequency detection and poker detection, which can effectively resist attacks, thus ensuring the security of the gateway. Therefore, the research on the security of the IoT edge devices plays a positive role in reducing the risk of data leakage and the wide application of the IoT system.
C1 [Lv, Zhihan] Qingdao Univ, Sch Data Sci & Software Engn, Qingdao, Peoples R China.
C3 Qingdao University
RP Lv, ZH (corresponding author), Qingdao Univ, Sch Data Sci & Software Engn, Qingdao, Peoples R China.
EM lvzhihan@gmail.com
RI Lv, Zhihan/GLR-6000-2022; Lyu, Zhihan/I-3187-2014
OI Lv, Zhihan/0000-0003-2525-3074; Lyu, Zhihan/0000-0003-2525-3074
FU Key Research and Development Plan Major Scientific and Technological
   Innovation Projects of ShanDong Province [2019JZZY020101]; National
   Natural Science Foundation of China [61902203]
FX Key Research and Development Plan Major Scientific and Technological
   Innovation Projects of ShanDong Province, 2019JZZY020101; National
   Natural Science Foundation of China, 61902203
CR Al Disi M, 2018, IEEE ACCESS, V6, P69130, DOI 10.1109/ACCESS.2018.2877679
   Alrawais A, 2017, IEEE INTERNET COMPUT, V21, P34, DOI 10.1109/MIC.2017.37
   Cheng SM, 2017, IEEE COMMUN MAG, V55, P29, DOI 10.1109/MCOM.2017.1600993
   Deng DJ, 2017, IEEE COMMUN MAG, V55, P87, DOI 10.1109/MCOM.2017.1601165
   Fernandes E, 2017, IEEE SECUR PRIV, V15, P79, DOI 10.1109/MSP.2017.3151346
   Hassan N, 2018, IEEE COMMUN MAG, V56, P110, DOI 10.1109/MCOM.2018.1700906
   Hu PF, 2017, IEEE INTERNET THINGS, V4, P1143, DOI 10.1109/JIOT.2017.2659783
   Kang B, 2017, IEEE T MULTI-SCALE C, V3, P206, DOI 10.1109/TMSCS.2017.2705683
   Kaur K, 2018, IEEE COMMUN MAG, V56, P44, DOI 10.1109/MCOM.2018.1700622
   Li H, 2018, IEEE NETWORK, V32, P96, DOI 10.1109/MNET.2018.1700202
   Lin J, 2017, IEEE INTERNET THINGS, V4, P1125, DOI 10.1109/JIOT.2017.2683200
   Ling Z, 2017, IEEE INTERNET THINGS, V4, P1899, DOI 10.1109/JIOT.2017.2707465
   Liu YJ, 2019, IEEE T SYST MAN CY-S, V49, P2318, DOI 10.1109/TSMC.2018.2815560
   Mouradian C, 2018, IEEE INTERNET THINGS, V5, P4119, DOI 10.1109/JIOT.2018.2867255
   Özyilmaz KR, 2019, IEEE CONSUM ELECTR M, V8, P28, DOI 10.1109/MCE.2018.2880806
   Perera C, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057266
   Pinto S, 2017, IEEE INTERNET COMPUT, V21, P40, DOI 10.1109/MIC.2017.17
   Sairam R, 2019, IEEE SENS J, V19, P4660, DOI 10.1109/JSEN.2019.2900097
   Saxena N, 2017, IEEE COMMUN MAG, V55, P97, DOI 10.1109/MCOM.2017.1600437CM
   Shi R, 2018, I S MOD ANAL SIM COM, P333, DOI 10.1109/MASCOTS.2018.00039
   Singh A, 2019, IEEE INTERNET THINGS, V6, P421, DOI 10.1109/JIOT.2018.2861324
   Suarez-Albela M, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17091978
   Villari M, 2017, IEEE CLOUD COMPUT, V4, P92
   Wang N, 2020, IEEE T SERV COMPUT, V13, P1086, DOI 10.1109/TSC.2017.2753775
   Wang W, 2017, IEEE ACCESS, V5, P6399, DOI 10.1109/ACCESS.2017.2679198
   Wen Z, 2017, IEEE INTERNET COMPUT, V21, P16, DOI 10.1109/MIC.2017.36
   Xiao L, 2018, IEEE WIREL COMMUN, V25, P116, DOI 10.1109/MWC.2018.1700291
   Xu QC, 2018, IEEE T IND INFORM, V14, P2550, DOI 10.1109/TII.2017.2787201
   Zhao SC, 2019, IEEE COMMUN LETT, V23, P797, DOI 10.1109/LCOMM.2019.2909034
   Zhao W, 2018, IEEE NETWORK, V32, P101, DOI 10.1109/MNET.2018.1700164
NR 30
TC 42
Z9 43
U1 0
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2446
EP 2456
DI 10.1002/spe.2806
EA FEB 2020
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000512276600001
DA 2024-07-18
ER

PT J
AU Ibrahim, M
   Baloch, NK
   Anjum, S
   Bin Zikria, Y
   Kim, SW
AF Ibrahim, Muhammad
   Baloch, Naveed Khan
   Anjum, Sheraz
   Bin Zikria, Yousaf
   Kim, Sung Won
TI An energy efficient and low overhead fault mitigation technique for
   internet of thing edge devices reliable on-chip communication
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE burst error correction; ECC; edge devices; fault tolerance; internet of
   things; links crosstalk; memory buffer; network-on-chip; reliability
ID NETWORKS; AVOIDANCE; DESIGN
AB Soft errors in network-on-chip (NoC) such as single bit upsets and multibit upsets cause hazardous effects such as congestion, deadlock, livelock, and corruption of data. Error-correcting codes (ECCs) are the best choices to handle these soft errors in links and memory buffers of NoC, which is the need of all modern systems, including internet of thing (IoT) edge devices. Many of these ECCs cannot correct both random and burst errors. Specific codes possess the correction and detection capability at the cost of an increase in area, latency, and energy. In this article, a coding technique is proposed by using a single error correction double error detection-triple adjacent error correction-six adjacent error detection (SEC-DED-TAEC-6AED) (24,16) I5, that provides both random and burst error fault tolerance for NoC. The proposed technique decreases the area, energy, and latency cost of the whole NoC. It also reduces the area overhead to 173.41% and 117.91% compare to joint crosstalk avoidance multiple error correction (JCAMEC) and joint crosstalk multiple error correction (JMEC), respectively. Besides, the delay overhead of the proposed technique reduces to 4.2% and 91.97% compared with JCAMEC and JMEC, respectively. The simulation results show that the proposed code possesses an enhanced ability of error correction and detection with 3.5 times less redundant bits and a 30% fast code rate compared with JMEC and JCAMEC. Hence, the proposed scheme can effectively be used for detecting and correcting single and multiple bit errors for on-chip communication.
C1 [Ibrahim, Muhammad; Baloch, Naveed Khan] Univ Engn & Technol Taxila, Comp Engn, Taxila, Pakistan.
   [Anjum, Sheraz] COMSATS Univ Islamabad, Comp Sci, Wah Campus, Wah Cantt, Pakistan.
   [Bin Zikria, Yousaf; Kim, Sung Won] Yeungnam Univ, Dept Informat & Commun Engn, 280 Daehak Ro, Gyongsan 38541, Gyeongbuk, South Korea.
C3 University of Engineering & Technology Taxila; COMSATS University
   Islamabad (CUI); Yeungnam University
RP Bin Zikria, Y (corresponding author), Yeungnam Univ, Dept Informat & Commun Engn, 280 Daehak Ro, Gyongsan 38541, Gyeongbuk, South Korea.
EM yousafbinzikria@gmail.com
RI Zikria, Yousaf Bin/AAV-7762-2020
OI Zikria, Yousaf Bin/0000-0002-6570-5306
FU Brain Korea 21 Plus Program - National Research Foundation of Korea
   (NRF) [22A20130012814]; MSIT (Ministry of Science and ICT), Korea, under
   the ITRC (Information Technology Research Center) support program
   [IITP-2019-2016-0-00313]; National Research Foundation of Korea (NRF) -
   Ministry of Education [2018R1D1A1A09082266]; University of Engineering
   and Technology, Taxila, Pakistan
FX This research was supported in part by the Brain Korea 21 Plus Program
   (No. 22A20130012814) funded by the National Research Foundation of Korea
   (NRF), in part by the MSIT (Ministry of Science and ICT), Korea, under
   the ITRC (Information Technology Research Center) support program
   (IITP-2019-2016-0-00313) supervised by the IITP (Institute for
   Information & communications Technology Planning & Evaluation), and in
   part by Basic Science Research Program through the National Research
   Foundation of Korea (NRF) funded by the Ministry of Education
   (2018R1D1A1A09082266) and in part by University of Engineering and
   Technology, Taxila, Pakistan.
CR Agarwal K, 2006, IEEE T COMPUT AID D, V25, P1273, DOI 10.1109/TCAD.2005.855954
   Benini L, 2002, COMPUTER, V35, P70, DOI 10.1109/2.976921
   Blake I.F., 2005, Ieee transactions on information theory, V51, P1616, DOI [10.1109/TIT.2005.844056, DOI 10.1109/TIT.2005.844056]
   Chen XX, 2016, BIOMED RES INT, V2016, P2016, DOI DOI 10.1155/2016/1654623
   Dar Z, 2020, J SUPERCOMPUT, V76, P2548, DOI 10.1007/s11227-019-03021-2
   Dutta A, 2007, IEEE VLSI TEST SYMP, P349, DOI 10.1109/VTS.2007.40
   Elahi H, 2017, J MECH SCI TECHNOL, V31, P4151, DOI 10.1007/s12206-017-0811-z
   Felfernig A, 2017, PROCEDIA COMPUT SCI, V110, P504, DOI 10.1016/j.procs.2017.06.135
   Flayyih WN, 2014, IEEE T CIRCUITS-I, V61, P2034, DOI 10.1109/TCSI.2013.2295952
   Flayyih WN, 2016, IEEE T CIRCUITS-II, V63, P166, DOI 10.1109/TCSII.2015.2483379
   FU B, 2012, ERROR CONTROL NETWOR, P1
   Ganguly A, 2009, IEEE T VLSI SYST, V17, P1626, DOI 10.1109/TVLSI.2008.2005722
   Gordon MS, 2004, IEEE T NUCL SCI, V51, P3427, DOI 10.1109/TNS.2004.839134
   GUL M, 2017, IEEE T EMERGING TOPI
   Kaith BS, 2007, E-POLYMERS
   Lei Xie, 2013, 2013 IEEE Eighth International Conference on Networking, Architecture and Storage (NAS), P173, DOI 10.1109/NAS.2013.28
   Mohanram K, 2003, INT TEST CONF P, P893, DOI 10.1109/TEST.2003.1271075
   Moore GE, 1998, P IEEE, V86, P82, DOI 10.1109/JPROC.1998.658762
   Morelos-Zaragoza R. H., 2006, The art of error correcting coding
   Musaddiq A, 2018, IEEE ACCESS, V6, P8459, DOI 10.1109/ACCESS.2018.2808324
   NEALE A, 2014, DESIGN ANAL ADJACENT
   Neale A, 2013, IEEE T DEVICE MAT RE, V13, P223, DOI 10.1109/TDMR.2012.2232671
   Palesi M, 2011, IEEE T COMPUT AID D, V30, P774, DOI 10.1109/TCAD.2010.2098590
   Pande PP, 2006, DSD 2006: 9TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN: ARCHITECTURES, METHODS AND TOOLS, PROCEEDINGS, P689
   Pande PP, 2006, INT SYM DEFEC FAU TO, P466, DOI 10.1109/DFT.2006.22
   Park D, 2006, I C DEPEND SYS NETWO, P93
   Poluri P, 2015, IEEE COMPUT ARCHIT L, V14, P107, DOI 10.1109/LCA.2014.2360686
   Qiaoyan Yu, 2010, 2010 ACM/IEEE International Symposium on Networks-on-Chip (NOCS), P145, DOI 10.1109/NOCS.2010.24
   Rambo EA, 2014, 2014 EIGHTH IEEE/ACM INTERNATIONAL SYMPOSIUM ON NETWORKS-ON-CHIP (NOCS), P33, DOI 10.1109/NOCS.2014.7008759
   Shamshiri S, 2011, INT TEST CONF P
   Shanbhag N, 2000, ISLPED '00: PROCEEDINGS OF THE 2000 INTERNATIONAL SYMPOSIUM ON LOW POWER ELECTRONICS AND DESIGN, P295, DOI 10.1109/LPE.2000.876806
   Siddiqui IF, 2019, WIRELESS PERS COMMUN, V106, P1969, DOI 10.1007/s11277-018-5739-9
   Sridhara SR, 2005, IEEE T VLSI SYST, V13, P655, DOI 10.1109/TVLSI.2005.848816
   Tariq UU, 2019, ACM T INTEL SYST TEC, V10, DOI 10.1145/3336121
   Teja TS, 2018, 2018 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P726, DOI 10.1109/ICACCI.2018.8554417
   Wang LZ, 2017, IEEE T PATTERN ANAL, V39, P2104, DOI 10.1109/TPAMI.2016.2621050
   Zhang M, 2006, IEEE T COMPUT AID D, V25, P2140, DOI 10.1109/TCAD.2005.862738
NR 37
TC 10
Z9 10
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2021
VL 51
IS 12
SI SI
BP 2393
EP 2410
DI 10.1002/spe.2796
EA FEB 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ5TV
UT WOS:000510765900001
DA 2024-07-18
ER

PT J
AU Foket, C
   De Bosschere, K
   De Sutter, B
AF Foket, Christophe
   De Bosschere, Koen
   De Sutter, Bjorn
TI Effective and efficient Java-type obfuscation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Java; obfuscation; optimization; overhead; type information
AB To protect valuable assets embedded in software against reverse-engineering attacks, software obfuscations aim at raising the apparent complexity of programs and at removing information that is useful for attackers. In this work, we propose to combine five transformations that obfuscate the type hierarchy of Java applications and eliminate much of the type information that can be inferred from the Java bytecode. We rely on some existing algorithms, present adaptations, and introduce new algorithms for some of the transformations, which are all made available in an open-source prototype implementation ready for take-up. We present an extensive experimental evaluation on benchmarks of real-world complexity, using complementary metrics that cover the protection strength against both human and tool-based reverse-engineering attack methods. The results indicate that the obfuscation is effective as well as much more efficient than the previous state of the art. For the first time, this makes these obfuscations practically viable in real-world deployment scenarios.
C1 [Foket, Christophe; De Bosschere, Koen; De Sutter, Bjorn] Univ Ghent, Dept Elect & Informat Syst, Technol Pk Zwijnaarde 126, B-9052 Ghent, Belgium.
C3 Ghent University
RP De Sutter, B (corresponding author), Univ Ghent, Dept Elect & Informat Syst, Technol Pk Zwijnaarde 126, B-9052 Ghent, Belgium.
EM bjorn.desutter@ugent.be
RI De Bosschere, Koen/P-6865-2014
OI De Bosschere, Koen/0000-0002-6338-4297; De Sutter,
   Bjorn/0000-0003-0317-2089
FU Agency for Innovation by Science and Technology in Flanders (IWT); Ghent
   University
FX This work was supported by the Agency for Innovation by Science and
   Technology in Flanders (IWT) and by Ghent University. The authors would
   like to thank Ghent University, the Flemish Supercomputer Center (VSC),
   the Hercules Foundation and the Flemish Government -department EWI for
   the STEVIN Supercomputer Infrastructure on which we carried out part of
   this work. The authors also thank Sofie, Sandor, and Adriaan for
   providing useful feedback on nightly drafts of this paper.
CR Anckaert B., 2007, P 2007 ACM WORKSH QU
   [Anonymous], P 33 INT C SOFTW ENG
   [Anonymous], 2009, Surreptitious Software: Obfuscation, Watermarking, and Tamperproofing for Software Protection: Obfuscation, Watermarking, and Tamperproofing for Software Protection
   [Anonymous], 2003, ACM C COMP COMM SEC
   Badger L, 2001, 01036 NETW ASS LAB
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Batchelder M, 2007, P INT C COMP CONSTR
   Bellamy B, 2008, P ACM SIGPLAN C OBJ
   Blackburn SM, 2008, COMMUN ACM, V51, P83, DOI 10.1145/1378704.1378723
   Ceccato M, 2019, EMPIR SOFTW ENG, V24, P240, DOI 10.1007/s10664-018-9625-6
   Collberg C., 2003, IEEE Security & Privacy, V1, P40, DOI 10.1109/MSECP.2003.1219058
   Collberg C, 2002, TECHNICAL REPORT
   Collberg C, 1998, P ACM SIGPLAN SIGACT
   Collberg C, 2007, SOFTWARE PRACT EXPER, V37, P581, DOI 10.1002/spe.776
   Collberg Christian, 1997, Technical report
   Coppens B, 2013, IEEE SECUR PRIV, V11, P47, DOI 10.1109/MSP.2012.113
   Coppens B, 2013, ACM T ARCHIT CODE OP, V9, DOI 10.1145/2400682.2400683
   D'Anna L., 2003, 03015 NETW ASS LAB
   De Bus B, 2004, P ACM SIGPLAN SIGBED
   Dolby J, 2012, TJ WATSON LIB ANAL W
   Foket C, 2015, THESIS
   Foket C, 2014, IEEE T DEPEND SECURE, V11, P553, DOI 10.1109/TDSC.2014.2305990
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gagnon EM, 2000, P INT STAT AN S SANT
   Gong L, JAVA SE PLATFORM SEC
   Gupta R, 2002, PROFILE GUIDED COMPI
   Hendren Laurie, 2011, P CETUS US COMP INF
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Kalibera T, 2013, P 2013 INT S MEM MAN
   Mayfield JB, 2001, CLIN ORTHOP RELAT R, P10
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Popov Igor V., 2007, P 16 USENIX SEC S BO
   Sakabe Yusuke., 2005, IPSJ Digital Courier, V1, P349
   Schrittwieser S, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2886012
   Streckenbach M, 2004, P ACM SIGPLAN C OBJ
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tip F, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1961204.1961205
   Vallee-Rai R., P 1999 C CTR ADV STU
   Weiser M., 1981, P 5 INT C SOFTW ENG
   Zhou Y, 2007, P 8 INT WORKSH INF S
NR 40
TC 2
Z9 3
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2020
VL 50
IS 2
BP 136
EP 160
DI 10.1002/spe.2773
EA NOV 2019
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KA5NF
UT WOS:000502385900001
OA Green Published
DA 2024-07-18
ER

PT J
AU Chawla, P
   Chana, I
   Rana, A
AF Chawla, Priyanka
   Chana, Inderveer
   Rana, Ajay
TI Framework for cloud-based software test data generation service
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud testing; cloud-based testing service; prediction and profiling;
   pricing model; security model; software testing; testing service
   framework; trust
AB This paper presents the framework of cloud-based software test data generation service (CSTS) that caters to cost-effective test data generation service in a cloud environment. In contrast to existing conventional or cloud-based testing frameworks, CSTS has a number of unique benefits. First, CSTS is designed to facilitate test data generation in minimum time and cost. Second, unlike existing frameworks which mandates clients to opt for resources to test their jobs, CSTS guides customer for selecting best cluster configuration in order to minimize the cost. While the existing models do not provide any solution for trust establishment in cloud computing services, CSTS delivers it by implementing security mechanism with the provision of role based access control. The security mechanism proposed in this paper ensures the protection of data and code of different users. Third, CSTS provides a mathematical pricing model to fulfill the expectations of customers and also to maximize the net profit of service providers. Cloud service request model has also been designed that postulates service level agreements between customers and service providers. We have evaluated, compared, and analyzed our framework and have found that it outperforms other existing cloud-based frameworks.
C1 [Chawla, Priyanka] Lovely Profess Univ, Sch Comp Sci & Engn, Phagwara 144411, India.
   [Chana, Inderveer] Thapar Univ, Dept Comp Sci & Engn, Patiala, Punjab, India.
   [Rana, Ajay] Amity Univ, Dept Comp Sci & Engn, Noida, India.
C3 Lovely Professional University; Thapar Institute of Engineering &
   Technology; Amity University Noida
RP Chawla, P (corresponding author), Lovely Profess Univ, Sch Comp Sci & Engn, Phagwara 144411, India.
EM priyankamatrix@gmail.com
RI Rana, Ajay/K-5030-2012; Chana, Inderveer/AAT-4399-2020
OI Rana, Ajay/0000-0002-1681-3132; Chana, Inderveer/0000-0001-9799-5582
CR [Anonymous], 2000, ACM WORKSHOP ROLEBAS
   [Anonymous], 2011, NIST DEFINITION CLOU
   [Anonymous], P 7 IEEE INT C CLUST
   Banzai T, 2010, P 2010 10 IEEE ACM I
   Bucur S, 2011, P 6 C COMP SYST SALZ
   Chana Inderveer, 2013, SOFTWARE ENG FRAMEWO
   Chana Inderveer., 2012, ACM SIGSOFT Software Engineering Notes, V37, P1
   Chawla P, 2016, J COMPUT SYST SCI, V82, P712, DOI 10.1016/j.jcss.2015.12.001
   Chawla P, 2015, FRONT COMPUT SCI-CHI, V9, P346, DOI 10.1007/s11704-014-3496-9
   Ciortea Liviu, 2009, Operating Systems Review, V43, P5, DOI 10.1145/1713254.1713257
   Drave I, 2019, SOFTWARE PRACT EXPER, V49, P301, DOI 10.1002/spe.2650
   Duarte A, 2006, P 2006 WORKSH PAR DI
   Duarte A, 2006, P 28 INT C SOFTW ENG
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Gaisbauer S, 2008, P 5 INT C QUANT EV S
   Ganon Z, 2009, P IEEE 14 INT WORKSH
   Geronimo LD, 2012, P 2012 IEEE 5 INT C
   Herodotou H, 2011, PROC VLDB ENDOW, V4, P1111
   IRWIN DE, 2004, P 13 INT S HIGH PERF
   Kapfhammer G.M., 2000, P 18 INT C TEST COMP
   Lastovetsky A, 2005, INFORM SOFTWARE TECH, V47, P657, DOI 10.1016/j.infsof.2004.11.006
   Maenhaut PJ, 2016, SOFTWARE PRACT EXPER, V46, P31, DOI 10.1002/spe.2320
   Misailovic S, 2007, P 6 JOINT M EUR SOFT
   O'Shea D, 2019, SOFTWARE PRACT EXPER, V49, P329, DOI 10.1002/spe.2658
   Oriol M, 2010, P 3 INT C SOFTW TEST
   Palanisamy B, 2015, IEEE T PARALL DISTR, V26, P1265, DOI 10.1109/TPDS.2014.2320498
   Parveen T, 2009, P INT C SOFTW MAINT
   Patel H, 2012, P INT S CLOUD SERV C
   RANA O, 2008, P 5 INT WORKSH GRID
   Rizvi S, 2014, PROCEDIA COMPUT SCI, V36, P381, DOI 10.1016/j.procs.2014.09.009
   Verma A, 2014, PERFORM EVALUATION, V79, P328, DOI 10.1016/j.peva.2014.07.020
   Wu LL, 2012, J COMPUT SYST SCI, V78, P1280, DOI 10.1016/j.jcss.2011.12.014
   Yu L, 2010, P 5 IEEE INT S SERV
NR 33
TC 5
Z9 5
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2019
VL 49
IS 8
BP 1307
EP 1328
DI 10.1002/spe.2708
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IG7YI
UT WOS:000474013200005
DA 2024-07-18
ER

PT J
AU Lemire, D
   Kaser, O
   Kurz, N
AF Lemire, Daniel
   Kaser, Owen
   Kurz, Nathan
TI Faster remainder by direct computation: Applications to compilers and
   software libraries
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE bit manipulation; divisibility; integer division
ID DIVISION
AB On common processors, integer multiplication is many times faster than integer division. Dividing a numerator n by a divisor d is mathematically equivalent to multiplication by the inverse of the divisor (n/d=n*1/d). If the divisor is known in advance, or if repeated integer divisions will be performed with the same divisor, it can be beneficial to substitute a less costly multiplication for an expensive division. Currently, the remainder of the division by a constant is computed from the quotient by a multiplication and a subtraction. However, if just the remainder is desired and the quotient is unneeded, this may be suboptimal. We present a generally applicable algorithm to compute the remainder more directly. Specifically, we use the fractional portion of the product of the numerator and the inverse of the divisor. On this basis, we also present a new and simpler divisibility algorithm to detect nonzero remainders. We also derive new tight bounds on the precision required when representing the inverse of the divisor. Furthermore, we present simple C implementations that beat the optimized code produced by state-of-the-art C compilers on recent x64 processors (eg, Intel Skylake and AMD Ryzen), sometimes by more than 25%. On all tested platforms, including 64-bit ARM and POWER8, our divisibility test functions are faster than state-of-the-art Granlund-Montgomery divisibility test functions, sometimes by more than 50%.
C1 [Lemire, Daniel] Univ Quebec, TELUQ Univ, 5800 St Denis,Off 1105, Montreal, PQ H2S 3L5, Canada.
   [Kaser, Owen] Univ New Brunswick, Dept Comp Sci, St John, NB, Canada.
C3 University of Quebec; Universite TELUQ; University of Quebec Montreal;
   University of New Brunswick
RP Lemire, D (corresponding author), Univ Quebec, TELUQ Univ, 5800 St Denis,Off 1105, Montreal, PQ H2S 3L5, Canada.
EM lemire@gmail.com
RI Lemire, Daniel/N-7632-2017
OI Lemire, Daniel/0000-0003-3306-6922; Kaser, Owen/0000-0001-6204-5085
FU Natural Sciences and Engineering Research Council of Canada
   [RGPIN-2017-03910]
FX Natural Sciences and Engineering Research Council of Canada, Grant/Award
   Number: RGPIN-2017-03910
CR [Anonymous], 2013, HACKERS DELIGHT
   [Anonymous], 2016, CORT A57 SOFTW OPT G
   [Anonymous], 2016, Instruction tables: Lists of instruction latencies, through-puts and micro-operation breakdowns for Intel, AMD and VIA CPUs
   ARTZY E, 1976, COMMUN ACM, V19, P98, DOI 10.1145/359997.360013
   Cavagnino D, 2008, COMPUT J, V51, P470, DOI 10.1093/comjnl/bxm082
   Doran R.W., 1995, J UNIVERS COMPUT SCI, V1, P176
   GRANLUND T, 1994, SIGPLAN NOTICES, V29, P61
   JACOBSOHN DH, 1973, IEEE T COMPUT, VC 22, P608, DOI 10.1109/TC.1973.5009114
   KNUTH D. E., 1981, Addison-Wesley Series in Computer Science and Information Processing, V2
   Möller N, 2011, IEEE T COMPUT, V60, P165, DOI 10.1109/TC.2010.143
   Rutten L, 2010, ACM T MATH SOFTWARE, V37, DOI 10.1145/1731022.1731026
   Sinharoy B, 2015, IBM J RES DEV, V59, DOI 10.1147/JRD.2014.2374252
   SRINIVASAN P, 1994, IEE P-COMPUT DIG T, V141, P334, DOI 10.1049/ip-cdt:19941414
   Ugurdag HF, 2017, IEEE T COMPUT, V66, P2097, DOI 10.1109/TC.2017.2707488
   VOWELS RA, 1992, AUST COMPUT J, V24, P81
NR 15
TC 12
Z9 12
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2019
VL 49
IS 6
BP 953
EP 970
DI 10.1002/spe.2689
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW3GY
UT WOS:000466579600001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Trotman, A
   Crane, M
AF Trotman, Andrew
   Crane, Matt
TI Micro- and macro-optimizations of SaaT search
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE efficiency; inverted files; Score-at-a-Time; search
AB We introduce and test several micro- and macro-optimizations to the Score-at-a-Time approach to processing impact-ordered postings lists in a search engine. Our micro-optimizations are at the single-assembly instruction level, but our macro-optimizations are algorithmic. Overall, we see an improvement of 37% on our baseline (22% on state of the art). We experiment with parallel search and present evidence that we have hit the memory wall.
C1 [Trotman, Andrew] Univ Otago, Dept Comp Sci, 362 Leith St, Dunedin 9016, New Zealand.
   [Crane, Matt] Univ Waterloo, Dept Comp Sci, Waterloo, ON, Canada.
C3 University of Otago; University of Waterloo
RP Trotman, A (corresponding author), Univ Otago, Dept Comp Sci, 362 Leith St, Dunedin 9016, New Zealand.
EM andrew@cs.otago.ac.nz
OI Trotman, Andrew/0000-0003-1253-7123
CR Allan J, 2008, 17 TEXT RETR C TREC
   Allan J, 2007, 16 TEXT RETR C TREC
   Anh VN, 2006, SIGIR 06 P 29 ANN IN
   Anh VN, 2001, SIGIR 01 P 24 ANN IN
   Anh VN, 2004, THESIS
   Bajwa MS, 2016, 2016 3 INT C COMP SU
   Broder AZ, 2003, CIKM 03 P 12 INT C I
   CLARKE C, 2004, 13 TEXT RETR C TREC
   Crane M, 2013, CIKM 13 P 22 ACM INT
   Crane M, 2017, WSDM 17 P 10 ACM INT
   Jia X-F, 2010, ADCS 2010 P 2010 AUS
   Lee MichaelE., 1997, OPTIMIZATION COMPUTE
   Lin J, 2016, EUR C INF RETR PAD I
   Lin J, 2015, ICTIR 15 P 2015 INT
   Lin J, 2017, INFORM RETRIEVAL J, V20, P199, DOI 10.1007/s10791-016-9291-5
   Linares-Vásquez M, 2017, J SYST SOFTWARE, V130, P1, DOI 10.1016/j.jss.2017.04.018
   Mackenzie J, 2017, ADCS 2017 P 22 AUSTR
   Mark R, 2010, MICROOPTIMIZATIONS C
   Robertson S. E., 1996, P 3 TEXT RETR C TREC
   Trotman A, 2014, ADCS 14 P 2014 AUSTR
   Trotman A., 2012, SIGIR 2012 WORKSH OP
NR 21
TC 6
Z9 6
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2019
VL 49
IS 5
BP 942
EP 950
DI 10.1002/spe.2683
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HR3KH
UT WOS:000463035200010
DA 2024-07-18
ER

PT J
AU Hasanagic, M
   Tran-Jorgensen, PWV
   Nilsson, RS
   Larsen, PG
AF Hasanagic, Miran
   Tran-Jorgensen, Peter W. V.
   Nilsson, Rene S.
   Larsen, Peter Gorm
TI Realization of distributed system models using code generation
   extensions
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE code generation; distributed systems; software implementation; system
   development; validation; VDM
AB Development of distributed software systems is complex due to the distribution of resources, which complicates validation of system-wide functionality. Such systems include various facets like functionality and distribution, each of which must be validated and integrated in the final software solution. Model-based techniques advocate various abstraction approaches to cope with such challenges. To enhance model-based development, this paper proposes (1) guidelines for development of distributed systems, where the different facets are introduced gradually through systematic modeling extensions, (2) code generation capabilities supporting technology specific realizations, and (3) demonstration of the applicability of our approach using an industrial case study involving the development of a harvest planning system, where the communication infrastructure paradigm changed late in the project. When developing this system, we spent most time validating system-wide functionality. The model extensions allowed an easier change of the underlying communication paradigm and code generation supported realization of the different system representations.
C1 [Hasanagic, Miran; Tran-Jorgensen, Peter W. V.; Nilsson, Rene S.; Larsen, Peter Gorm] Aarhus Univ, Dept Engn, Aarhus, Denmark.
   [Nilsson, Rene S.] AGCO AS, Randers, Denmark.
C3 Aarhus University
RP Hasanagic, M (corresponding author), Aarhus Univ, Dept Engn, Aarhus, Denmark.
EM miran.hasanagic@eng.au.dk
OI Larsen, Peter Gorm/0000-0002-4589-1500
FU Danish High Technology Foundation; EU INTO-CPS [664047]
FX Danish High Technology Foundation; EU INTO-CPS, Grant/Award Number:
   664047
CR Almohammad A, 2013, THESIS
   [Anonymous], ARTEMIS STRAT RES AG
   [Anonymous], 2006, INT PROD MACH SYST 2
   [Anonymous], 14 OV WORKSH AN TOOL
   Back Ralph Johan, 1978, On the correctness of refinement steps in program development
   Bambagini M, 2012, P 2012 IEEE 17 INT C
   Bandur V, 2017, P 15 OV WORKSH NEWC
   Battle N, 2013, P 11 OV WORKSH AARH
   Bjorner D, 2000, ANN SOFTW ENG, V10, P11, DOI 10.1023/A:1018983515535
   Chiozzi G., 2011, P 13 INT C ACC LARG
   Coulouris G, 2007, DISTRIBUTED SYSTEMS
   Couto LD, 2016, 2016 6 INT C SIM MOD
   Couto LD, 2015, P 13 OV WORKSH TOK J
   Eclipse Paho, 2018, ECLIPSE PAHO
   Eidson JC, 2012, P IEEE, V100, P45, DOI 10.1109/JPROC.2011.2161237
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Fich F, 2003, DISTRIB COMPUT, V16, P121, DOI 10.1007/s00446-003-0091-y
   Fitzgerald J, 2009, MODELLING SYSTEMS: PRACTICAL TOOLS AND TECHNIQUES IN SOFTWARE DEVELOPMENT, 2ND EDITION, P1, DOI 10.1017/CBO9780511626975
   Fitzgerald J., 2005, Validated Designs for Object-oriented Systems
   Fredj M, 2010, 2010 10 ANN INT C NE
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garlan D, 2003, LECT NOTES COMPUT SC, V2648, P166
   Hasanagic M, 2015, P 13 OV WORKSH TOK J
   Kang DI, 1999, ACM SIGPLAN NOTICES, V34, P87, DOI 10.1145/315253.314468
   Larsen P.G., 2009, INT INT J SOFTW INFO, V3, P305
   Larsen Peter Gorm., 2010, SIGSOFT Softw. Eng. Notes, V35, P1, DOI DOI 10.1145/1668862.1668864
   Lausdahl K, 2011, LECT NOTES COMPUT SC, V6991, P179, DOI 10.1007/978-3-642-24559-6_14
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Mukherjee P, 2000, P 2 VDM WORKSH
   Nielsen Claus Ballegaard, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P266, DOI 10.1007/978-3-642-30885-7_19
   Perrotin Maxime, 2011, SDL 2011: Integrating System and Software Modeling. 15th International SDL Forum. Revised Papers, P26, DOI 10.1007/978-3-642-25264-8_4
   Riedl M, 2004, IEEE AFRICON, P1253
   Riedl M, 2011, PROC IEEE INT SYMP
   Rohnert FBRMH, 1996, PATTERN ORIENTED SOF
   Satyanarayanan M, 2001, IEEE PERS COMMUN, V8, P10, DOI 10.1109/98.943998
   Schreiner D, 2009, 2009 IEEE INT S OBJ
   Tanenbaum AS., 2007, DISTRIBUTED SYSTEMS
   Tran-Jorgensen PWV, 2018, INT J SOFTW TOOLS TE, V20, P211, DOI 10.1007/s10009-017-0448-3
   Tran-JOrgensen PWV, 2015, P 12 OV WORKSH NEWC
   Tran-JOrgensen PWV, 2016, THESIS
   UN, 2015, WORLD POPULATION PRO
   Verhoef M, 2009, THESIS
   Verhoef M, 2006, LECT NOTES COMPUT SC, V4085, P147
NR 43
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2019
VL 49
IS 3
BP 478
EP 497
DI 10.1002/spe.2671
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0HU
UT WOS:000459868900007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Malloy, BA
   Power, JF
AF Malloy, Brian A.
   Power, James F.
TI Grammar engineering for multiple front-ends for Python
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE front end; grammarware; grammar engineering; parser; programming
   language evolution; Python; software engineering
AB In this paper, we describe our experience in grammar engineering to construct multiple parsers and front ends for the Python language. We present a metrics-based study of the evolution of the Python grammars through the multiple versions of the language in an effort to distinguish and measure grammar evolution and to provide a basis of comparison with related research in grammar engineering. To conduct this research, we have built a toolkit, which builds on tools developed in other research. We use to build a system that automates much of the process needed to translate the Python grammars from EBNF to a formalism acceptable to the parser generator. We exploit the suite of Python test cases, used by the Python developers, to validate our parser generation. Finally, we describe our use of the parser generator to facilitate the parser and front-end construction, eliminating some of the transformations and providing practical support for grammar modularisation.
C1 [Malloy, Brian A.] Clemson Univ, Comp Sci Div, Sch Comp, Clemson, SC USA.
   [Power, James F.] Maynooth Univ, Dept Comp Sci, Maynooth, Kildare, Ireland.
C3 Clemson University; Maynooth University
RP Power, JF (corresponding author), Maynooth Univ, Dept Comp Sci, Maynooth, Kildare, Ireland.
EM james.power@mu.ie
OI Power, James/0000-0002-6770-3910
CR Aho AlfredV., 2013, COMPILERS PRINCIPLES
   Alves TL, 2009, SOFTW LANG ENG 1 INT
   [Anonymous], 2007, Tech. Rep. 2007-541
   Basten B, 2015, IEEE 1 INT WORKSH SO
   Basten B, 2015, SCI COMPUT PROGRAM, V114, P7, DOI 10.1016/j.scico.2015.11.003
   CERVELLE J., 2007, COMPUT SCI INF SYST, V4, P65
   Crepinsek M, 2010, COMPUT SCI INF SYST, V7, P309, DOI 10.2298/CSIS1002309C
   Duffy EB, 2007, 14 WORK C REV ENG VA
   Duffy EB, 2012, PROCEEDINGS OF THE 50TH ANNUAL ASSOCIATION FOR COMPUTING MACHINERY SOUTHEAST CONFERENCE
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Hennessy M, 2008, EMPIR SOFTW ENG, V13, P343, DOI 10.1007/s10664-008-9067-7
   Hills M, 2017, SCI COMPUT PROGRAM, V134, P37, DOI 10.1016/j.scico.2016.05.003
   Hölldobler K, 2018, COMPUT LANG SYST STR, V54, P386, DOI 10.1016/j.cl.2018.08.002
   Javed F, 2008, APPL ARTIF INTELL, V22, P707, DOI 10.1080/08839510802164127
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   Klint P, 2011, GENERATIVE TRANSFORM
   Klint P, 2010, P 10 WORKSH LANG DES
   Klusener S, 2003, P 19 INT C SOFTW MAI
   Kraft NA, 2009, IEEE T SOFTWARE ENG, V35, P780, DOI 10.1109/TSE.2009.65
   Lämmel R, 2011, SOFTWARE QUAL J, V19, P333, DOI 10.1007/s11219-010-9116-5
   Lammel R, 2001, FME 2001 FORM METH I
   Lammel R, 2009, INT FORM METH 7 INT
   Lammel R, 2013, XBGF SOFTWARE LANGUA
   Landman D, 2016, J SOFTW-EVOL PROC, V28, P589, DOI 10.1002/smr.1760
   Levine John., 2009, FLEX BISON
   Malloy BA, 2003, DR DOBBS J, V28, P54
   Malloy BA, 2002, DR DOBBS J, V27, P71
   Malloy BA, 2016, WORKSH PARS SLE AMST
   Malloy BA, 2018, PARSING PYTHON GITHU
   Malloy BA, 2017, ACM IEEE INT S EMP S
   Malloy BA, 2002, P 2002 ANN RES C S A
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mernik M., 2004, Informatica, V28, P245
   Peterson B., 2008, PEP 373 PYTHON 2 7 R
   Pottier Francois., 2018, Menhir reference manual
   Power JE, 2004, J SOFTW MAINT EVOL-R, V16, P405, DOI 10.1002/smr.293
   Power JF, 2001, 16 ACM S APPL COMP L
   Stijlaart M, 2017, P 10 ACM SIGPLAN INT
   vansRossum G, 2009, HIST PYTHON BLOG BRI
   Vavrova N., 2017, Art, Sci. Eng. Program., V1, DOI [10.22152/programming-journal.org/2017/1/11, DOI 10.22152/PROGRAMMING-JOURNAL.ORG/2017/1/11]
   Zaytsev VV, 2010, THESIS
NR 41
TC 0
Z9 0
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAR
PY 2019
VL 49
IS 3
BP 380
EP 400
DI 10.1002/spe.2665
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0HU
UT WOS:000459868900003
DA 2024-07-18
ER

PT J
AU Abadeh, MN
   Ajoudanian, S
AF Abadeh, Maryam Nooraei
   Ajoudanian, Shohreh
TI A model-driven framework to enhance the consistency of logical integrity
   constraints: Introducing integrity regression testing
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE change history model; consistency; integrity rule; logic coverage;
   model-driven testing; model transformation; regression testing
ID SELECTION; PRIORITIZATION
AB Although the importance of models continuously grows in software development, common development approaches are less able to integrate the automatic management of model integrity into the development process. These critically important constraints may ensure the coherence of models in the evolution process to prevent manipulations that could violate defined constraints on a model. This paper proposes an integrity framework in the context of model-driven architecture to achieve sufficient structural code coverage at a higher program representation level than machine code. Our framework offers to propagate the modifications from a platform-independent specification to the corresponding test template model while keeping the consistency and integrity constraints after system evolution. To examine the efficiency of the proposed framework, a quantitative analysis plan is evaluated based on two experimental case studies. In addition, we propose coverage criteria for integrity regression testing (IRT), derived from logic coverage criteria that apply different conceptual levels of testing for the formulation of integrity requirements. The defined criteria for IRT reduce the inherent complexity and cost of verifying complex design changes in regression testing while keeping the fault detection capability with respect to the changes. The framework aims to keep pace with IRT in a formal way. The framework can solve a number of restricted outlooks in model integrity and some limiting factors of incremental maintenance and retesting. The framework satisfies several valuable quality attributes in software testing, such as safety percentage, precision, abstract fault detection performance measurable coverage level, and generality.
C1 [Abadeh, Maryam Nooraei] Islamic Azad Univ, Abadan Branch, Dept Comp Engn, Abadan, Iran.
   [Ajoudanian, Shohreh] Islamic Azad Univ, Najafabad Branch, Fac Comp Engn, Najafabad, Iran.
C3 Islamic Azad University; Islamic Azad University
RP Abadeh, MN (corresponding author), Islamic Azad Univ, Abadan Branch, Dept Comp Engn, Abadan, Iran.
EM mnooraei@iauabadan.ac.ir
RI Ajoudanian, Shohreh/AAE-4969-2021
OI Ajoudanian, Shohreh/0000-0001-8798-787X
CR Abadeh MN, 2015, J SOFTW-EVOL PROC, V27, P913, DOI 10.1002/smr.1752
   Agrawal A., 2005, SOFTWARE SYSTEMS MOD, V5, P261
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Ammann P, 1994, P 1994 IEEE 9 ANN C
   Ammann P., 2016, INTRO SOFTWARE TESTI, DOI [10.1017/9781316771273, DOI 10.1017/9781316771273]
   [Anonymous], 1992, The Z Notation
   Baresel A, 2003, P 11 EUR INT C SOFTW
   BFar R, 2005, MOBILE COMPUTING PRINCIPLES: DESIGNING AND DEVELOPING MOBILE APPLICATIONS WITH UML AND XML, P1
   Biswas S, 2011, INFORM-J COMPUT INFO, V35, P289
   Bouchou Beatrice, 2011, Database and Expert Systems Applications. Proceedings 22nd International Conference, DEXA 2011, P94, DOI 10.1007/978-3-642-23088-2_7
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   Chen C-Y, 1999, P 37 ANN SE REG C AC
   Chen Y, 2002, P 2002 C CTR ADV STU
   Cristia M, 2009, LECT NOTES COMPUT SC, V5885, P167, DOI 10.1007/978-3-642-10373-5_9
   Do H, 2016, ADV COMPUT, V103, P53, DOI 10.1016/bs.adcom.2016.04.004
   Duke R., 2000, FORMAL OBJECT ORIENT
   Elbaum S, 2001, P IEEE INT C SOFTW M
   ENGSTROM E, 2008, P 2 ACM IEEE INT S E
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Farooq Q, 2010, ACM IEEE 13 INT C MO
   Farooq Q-u-a, 2014, MOD 2014 VIENN AUSTR
   Farooq Q-u-a, 2007, P 3 INT WORKSH ADV M
   Gargantini A., 2010, Int. J. Adv. Softw., V3, P1
   GOURLAY JS, 1983, IEEE T SOFTWARE ENG, V9, P686, DOI 10.1109/TSE.1983.235433
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Hemmati H, 2010, LECT NOTES COMPUT SC, V6435, P63, DOI 10.1007/978-3-642-16573-3_6
   Jalote P., 2006, An integrated approach to software engineering, V3rd
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kaminski G, 2013, J SYST SOFTWARE, V86, P2002, DOI 10.1016/j.jss.2012.08.024
   Kapfhammer GM, 2010, ENCY SOFTWARE ENG, P893
   Kirner R, 2008, ERCIM NEWS, P40
   Korel B, 2007, PROC AMOST07 P 3 INT, P3443
   Lazar C.-L., 2011, STUDIA UNIVERS BABES, V56, P27, DOI [10.5038/1937-8602.56.2.1, DOI 10.5038/1937-8602.56.2.1]
   Lazar CL, 2009, 2009 11 INT S SYMB N
   Liang H, 2005, P 10 IEEE INT C ENG
   Mahony B, 2000, IEEE T SOFTWARE ENG, V26, P150, DOI 10.1109/32.841115
   Malik P, 2005, LECT NOTES COMPUT SC, V3455, P65
   Maly J, 2015, INFORM SYST FRONT, V17, P917, DOI 10.1007/s10796-013-9471-4
   McMinn P, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2818639
   Naslavsky L, 2007, P 22 INT C AUT SOFTW
   OMG, 2005, UML 2 0 TEST PROF SP
   OMG, 2011, ACT LANG FDN UML ALF
   OMG, 2009, BPMN 2 0 SPEC
   Pravin Albert, 2013, Journal of Computer Science, V9, P654, DOI 10.3844/jcssp.2013.654.659
   Rajan A., 2008, P 30 INT C SOFTW ENG
   Rosero RH, 2016, INT J SOFTW ENG KNOW, V26, P675, DOI 10.1142/S0218194016300013
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Saaltink M., 1997, ZUM '97: The Z Formal Specification Notation. 10th International Conference of Z Users Proceedings, P72, DOI 10.1007/BFb0027284
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Tahat L, 2012, SOFTW TEST VERIF REL, V22, P481, DOI 10.1002/stvr.461
   Utting M, 2006, 04 U WAIK DEP COMP S
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Vilkomir SA, 2001, P 25 ANN INT COMP SO
   Wu Y, 2003, P 7 EUR C SOFTW MAIN
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yuan Q, 2008, 2008 10 INT S WEB SI
   Zech P, 2012, INT S LEV APPL FORM
NR 61
TC 3
Z9 3
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD FEB
PY 2019
VL 49
IS 2
SI SI
BP 274
EP 300
DI 10.1002/spe.2654
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN0GK
UT WOS:000459864300008
DA 2024-07-18
ER

PT J
AU Mezni, H
   Fayala, M
AF Mezni, Haithem
   Fayala, Mayssa
TI Time-aware service recommendation: Taxonomy, review, and challenges
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE service recommendation; survey; time information
ID SYSTEMS; PREDICTION; SELECTION
AB Nowadays, a huge number of available Web services offer the same functionalities and a high quality of service, which makes the selection of suitable services a difficult task. In such situation, the services must be differentiated by additional criteria such as users' ratings. To meet this goal, recommendation techniques become a natural choice to cope with the challenging task of optimal service selection and to help consumers satisfy their needs and preferences. However, most existing models on service recommendation are static, whereas in the real world, the perception and popularity of Web services may continually change, and users' preferences and habits also shift frequently. Time is becoming an increasingly important factor in recommender systems, since time effects influence users' preferences to a large extent. In addition, quality-of-service performance of Web services is strongly linked to the service status and network environments, which are variable against time. Recently, a wide range of service recommendation approaches, dealing with the time dimension in user modeling and recommendation strategies, have been proposed. Thus, the purpose of this survey is to present a comprehensive study and analysis of the state-of-the-art on time-aware service recommendation. We identify the techniques used in recommender systems to provide the best services. Moreover, we present a classification of time-aware recommender systems based on the target recommendation time, the type of relationship between users, and the type of feedback. Besides, we present a comparison between time-aware recommendation approaches, and we discuss their advantages and disadvantages. Finally, challenges and requirements of time-aware service recommendation as well as the future directions are identified according to the studied approaches.
C1 [Mezni, Haithem] Univ Jendouba, SMART Lab, Jendouba, Tunisia.
   [Fayala, Mayssa] Higher Inst Management, SMART Lab, Tunis, Tunisia.
C3 Universite de Jendouba; Universite de Tunis
RP Mezni, H (corresponding author), Univ Jendouba, SMART Lab, Jendouba, Tunisia.
EM haithem.mezni@gmail.com
OI Ben Said, Lamjed/0000-0001-9225-884X; Mezni, Haithem/0000-0001-9932-8433
CR Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   Adomavicius Gediminas, 2015, RECOMMENDER SYSTEMS, P191, DOI [DOI 10.1145/1454008.1454068, 10.1007/978-1-4899-7637-66, DOI 10.1007/978-1-4899-7637-66]
   [Anonymous], 2015, ACM T MULTIM COMPUT
   [Anonymous], 1999, P 1 ACM C EL COMM
   [Anonymous], 2016 IEEE INT C SERV
   Bertele U, 2007, RAPPORTO MOBILE WIRE
   Bin B, 2015, 2015 IEEE INT C WEB
   Burke R, 2002, USER MODEL USER-ADAP, V12, P331, DOI 10.1023/A:1021240730564
   Burke R., 2000, ENCY LIB INFORM S32, V69, P175, DOI DOI 10.1007/S10115-015-0897-5
   Cai HB, 2008, J NETW COMPUT APPL, V31, P944, DOI 10.1016/j.jnca.2007.01.004
   Campos PG, 2014, USER MODEL USER-ADAP, V24, P67, DOI 10.1007/s11257-012-9136-x
   Chen SH, 2017, J WEB ENG, V16, P595
   Chu VW, 2015, IEEE INT CONGR BIG, P359, DOI 10.1109/BigDataCongress.2015.60
   Ding S, 2018, DECIS SUPPORT SYST, V107, P103, DOI 10.1016/j.dss.2017.12.012
   Fan X, 2015, 2015 IEEE INT C WEB
   Fan XL, 2021, IEEE T SERV COMPUT, V14, P58, DOI 10.1109/TSC.2017.2782793
   Felfernig A, 2011, RECOMMENDER SYSTEMS HANDBOOK, P187, DOI 10.1007/978-0-387-85820-3_6
   Guidara I, 2015, 2015 INT C WEB SERV
   Hu Y, 2014, 2014 IEEE INT C WEB
   Hu Y, 2015, 2015 IEEE INT C WEB
   Hu Y, 2015, IEEE T SERV COMPUT, V8, P782, DOI 10.1109/TSC.2014.2381611
   Ikbel G, 2014, 2014 IEEE INT C WEB
   Jayapriya K, 2016, J NETW SYST MANAG, V24, P916, DOI 10.1007/s10922-015-9357-5
   Kefalas P, 2017, EXPERT SYST APPL, V78, P396, DOI 10.1016/j.eswa.2017.01.060
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kritikos K, 2009, IEEE T SERV COMPUT, V2, P320, DOI 10.1109/TSC.2009.26
   Lee TQ, 2006, P 2006 INT C E LEARN
   Lei Y, 2015, P 2015 IEEE INT C SE
   Li J, 2017, 2017 IEEE INT C SERV
   Ma H, 2017, KNOWL-BASED SYST, V138, P27, DOI 10.1016/j.knosys.2017.09.027
   Ma H, 2016, J PARALLEL DISTR COM, V96, P75, DOI 10.1016/j.jpdc.2016.05.008
   Ma H, 2014, 2014 INTERNATIONAL CONFERENCE ON SMART COMPUTING (SMARTCOMP)
   Meng SM, 2014, IEEE T PARALL DISTR, V25, P3221, DOI 10.1109/TPDS.2013.2297117
   Qi LY, 2017, INT J DISTRIB SENS N, V13, DOI [10.1177/1550147716688696, 10.1177/1550/77/6688696]
   Rana C, 2014, SWARM EVOL COMPUT, V14, P21, DOI 10.1016/j.swevo.2013.08.003
   Ricci F., 2010, Information Technology and Tourism, V12, P205, DOI 10.3727/109830511X12978702284390
   Schafer J. B., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P291
   Sebastian P, 2014, INT J ADV RES COMPUT, V5, P150, DOI DOI 10.26483/IJARCS.V5I1.1994
   Siddiqui ZF, 2015, INT J ARTIF INTELL T, V24, DOI 10.1142/S0218213015400096
   Su K, 2017, KNOWL-BASED SYST, V115, P55, DOI 10.1016/j.knosys.2016.09.033
   Sun ZB, 2015, J SYST SOFTWARE, V99, P109, DOI 10.1016/j.jss.2014.09.019
   Tian G, 2014, 2014 IEEE INT C WEB
   Tian G, 2017, INFORM SYST FRONT, V19, P75, DOI 10.1007/s10796-015-9590-1
   Wang XY, 2016, ACM T WEB, V10, DOI 10.1145/2801164
   Wang Y., 2007, International Transactions on Systems Science and Applications, V3, P118
   Watson RT, 2002, J ACAD MARKET SCI, V30, P333, DOI 10.1177/009207002236909
   Wu CH, 2016, KNOWL-BASED SYST, V109, P90, DOI 10.1016/j.knosys.2016.06.028
   Xuejie Zhang, 2015, Proceedings of the 4th International Conference on Computer Engineering and Networks. CENet2014. LNEE 355, P739, DOI 10.1007/978-3-319-11104-9_86
   Yao LN, 2015, IEEE T SERV COMPUT, V8, P453, DOI 10.1109/TSC.2014.2355842
   Yu C, 2014, IEEE INT C WEB SERV
   Yu CY, 2016, SERV ORIENTED COMPUT, V10, P135, DOI 10.1007/s11761-014-0168-4
   Yu Q, 2015, KNOWL INF SYST, V43, P417, DOI 10.1007/s10115-013-0723-x
   Zeng CL, 2017, LECT NOTES ARTIF INT, V10235, P592, DOI 10.1007/978-3-319-57529-2_46
   Zhang B, 2015, NOVEL RECOMMENDATION, P53
   Zhang S, 2013, J MANUF SYST, V32, P189, DOI 10.1016/j.jmsy.2012.07.012
   Zhang S, 2017, J ALGORITHMS COMPUT, V11, P13, DOI 10.1177/1748301816665018
   Zhang WC, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P585
   Zhang X, 2015, INT J SERV COMPUT, V3, P17
   Zhang X, 2014, 2014 IEEE INT C WEB
   Zhang YL, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P210, DOI 10.1109/ISSRE.2011.17
   Zhang Y, 2016, IEEE T SERV COMPUT, V9, P786, DOI 10.1109/TSC.2016.2592520
   Zheng N, 2011, EXPERT SYST APPL, V38, P4575, DOI 10.1016/j.eswa.2010.09.131
   Zhong Y, 2014, 2014 IEEE INT C WEB
   Zhou C, 2014, LECT NOTES COMPUT SC, V8630, P15, DOI 10.1007/978-3-319-11197-1_2
NR 64
TC 10
Z9 10
U1 1
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2018
VL 48
IS 11
BP 2080
EP 2108
DI 10.1002/spe.2605
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GW3WX
UT WOS:000446841000008
DA 2024-07-18
ER

PT J
AU Mezni, H
   Sellami, M
AF Mezni, Haithem
   Sellami, Mokhtar
TI A negotiation-based service selection approach using swarm intelligence
   and kernel density estimation
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE kernel density estimation; negotiation; particle swarm optimization;
   self-* Web service; service selection
ID OPTIMIZATION; ALGORITHM
AB Nowadays, the cloud computing environment is becoming a natural choice to deploy and provide Web services that meet user needs. However, many services provide the same functionality and high quality of service (QoS) but different self-adaptive behaviors. In this case, providers' adaptation policies are useful to select services with high QoS and high quality of adaptation (QoA). Existing approaches do not take into account providers' adaptation policies in order to select services with high reputation and high reaction to changes, which is important for the composition of self-adaptive Web services. In order to actively participate to compositions, candidate services must negotiate their self-* capabilities. Moreover, they must evaluate the participation constraints against their capabilities specified in terms of QoS and adaptation policies. This paper exploits a variant of particle swarm optimization and kernel density estimation in the selection of service compositions and the concurrent negotiations of their QoS and QoA capabilities. Selection and negotiation processes are held between intelligent agents, which adopt swarm intelligence techniques for achieving optimal selection and optimal agreement on providers' offers. To resolve unknown autonomic behavior of candidate services, we deal with the lack of such information by predicting the real QoA capabilities of a service through the kernel density estimation technique. Experiments show that our solution is efficient in comparison with several state-of-the-art selection approaches.
C1 [Mezni, Haithem] Univ Jendouba, SMART Lab, Jendouba, Tunisia.
   [Sellami, Mokhtar] Higher Inst Technologocial Studies, Jendouba, Tunisia.
C3 Universite de Jendouba; Universite de Jendouba
RP Mezni, H (corresponding author), Univ Jendouba, SMART Lab, Jendouba, Tunisia.
EM haithem.mezni@gmail.com
RI Sellami, Mokhtar/AAR-1236-2021
OI Sellami, Mokhtar/0000-0002-5260-2164; Ben Said,
   Lamjed/0000-0001-9225-884X; Mezni, Haithem/0000-0001-9932-8433
CR Ahmed W, 2015, IEEE T PARALL DISTR, V26, P551, DOI 10.1109/TPDS.2013.310
   [Anonymous], 2010, P 19 INT C WORLD WID, DOI DOI 10.1145/1772690.1772693
   [Anonymous], 2012 IEEE 26 INT C A
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Bessa RJ, 2012, IEEE T SUSTAIN ENERG, V3, P660, DOI 10.1109/TSTE.2012.2200302
   Bonabeau E, 2001, HARVARD BUS REV, V79, P106
   Cappiello C, 2007, INT C ADV INF SYST E
   Chen M, 2010, 8 ACIS INT C SOFTW E
   Cheng SW, 2009, 2009 ICSE WORKSH SOF
   da Silva AS, 2014, 2014 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P3127, DOI 10.1109/CEC.2014.6900404
   Da-Jun C, 2002, P 1 INT JOINT C AG 1
   El Haddad J, 2010, IEEE T SERV COMPUT, V3, P73, DOI 10.1109/TSC.2010.5
   Engelbrecht A.P., 2007, Computational Intelligence: An Introduction, VSecond, DOI DOI 10.1002/9780470512517
   Fang F, 2008, 2008 INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING AND 2008 INTERNATIONAL PACIFIC WORKSHOP ON WEB MINING AND WEB-BASED APPLICATION, P286, DOI 10.1109/ISIP.2008.73
   Gjorven E, 2006, INT C AUT AUT SYST 2
   Kennedy J., 1995, 1995 IEEE International Conference on Neural Networks Proceedings (Cat. No.95CH35828), P1942, DOI 10.1109/ICNN.1995.488968
   Kolomvatsos K, 2014, INFORM SCIENCES, V262, P99, DOI 10.1016/j.ins.2013.10.025
   Kurdi H, 2015, COMPUT ELECTR ENG, V42, P107, DOI 10.1016/j.compeleceng.2014.11.002
   Li B, 2015, ADV ENG TECHNOLOGY
   Liao JX, 2011, GLOB TELECOMM CONF
   Liu LL, 2010, IEEE T SYST MAN CY B, V40, P1634, DOI 10.1109/TSMCB.2010.2043527
   Ma Y, 2008, COMPUT NETW, V52, P1093, DOI 10.1016/j.comnet.2007.12.003
   McCann JA, 2004, INT C GRID COOP COMP
   McCann JA, 2006, KNOWL ENG REV, V21, P239, DOI 10.1017/S0269888906000853
   Medina JC, 2014, COMPUT METHOD APPL M, V279, P133, DOI 10.1016/j.cma.2014.06.025
   Mezni H, 2014, J UNIVERS COMPUT SCI, V20, P1130
   Microsoft Communications & Media Industries, 2013, MULT SERV DEL END TO
   Moghaddam M., 2014, WEB SERVICES FDN, V33, P321, DOI DOI 10.1007/978-1-4614-7518-7
   Nguyen TD, 2003, 14 INT WORKSH DAT EX
   Papazoglou MP, 2008, INT J COOP INF SYST, V17, P223, DOI 10.1142/S0218843008001816
   Quillinan TB, 2010, GRIDS SERVICE ORIENT
   Rezaie H, 2010, INT C NETW DIG TECHN
   Risse T., 2009, P 18 INT C WORLD WID, P881, DOI DOI 10.1145/1526709.1526828
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Satyala NT, 2008, J QUAL STAT RELIAB
   Sheng QZ, 2014, INFORM SCIENCES, V280, P218, DOI 10.1016/j.ins.2014.04.054
   Siala Fatma, 2014, International Journal of Wireless and Mobile Computing, V7, P327, DOI 10.1504/IJWMC.2014.063054
   Siebenhaar M, 2012, INT C EC GRIDS CLOUD
   Sun L., 2014, 2014 IEEE INT C WEB
   Tang KZ, 2015, ENG APPL ARTIF INTEL, V37, P9, DOI 10.1016/j.engappai.2014.08.002
   Tongguang Zhang, 2014, Journal of Networks, V9, P565, DOI 10.4304/jnw.9.3.565-570
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Wada H, 2012, IEEE T SERV COMPUT, V5, P358, DOI 10.1109/TSC.2011.6
   Wand M.P., 1994, KERNEL SMOOTHING
   Wang D, 2014, INT C ALG ARCH PAR P
   Wang WB, 2010, INT J COMPUT INT SYS, V3, P18
   Wei Y, 2010, IEEE INTERNET COMPUT, V14, P72, DOI 10.1109/MIC.2010.147
   Xu XF, 2017, FUTURE GENER COMP SY, V68, P304, DOI 10.1016/j.future.2016.09.008
   Yin H, 2014, MATH PROBL ENG, V2014, DOI 10.1155/2014/252934
   Yu C, 2015, INT LIBR POL ANAL, V5, P1
   Yu T, 2005, INT C SERV OR COMP 2
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhang J.D., 2013, P 21 ACM SIGSPATIAL, P334, DOI DOI 10.1145/2525314.2525339
   Zhao XC, 2014, KNOWL INF SYST, V40, P349, DOI 10.1007/s10115-013-0642-x
   Zhao XC, 2012, INT J INNOV COMPUT I, V8, P8527
   Zhao XC, 2012, APPL SOFT COMPUT, V12, P2208, DOI 10.1016/j.asoc.2012.03.040
   Zulkernine FH, 2011, IEEE T SERV COMPUT, V4, P31, DOI 10.1109/TSC.2010.44
NR 58
TC 10
Z9 11
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2018
VL 48
IS 6
BP 1285
EP 1311
DI 10.1002/spe.2575
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF5UQ
UT WOS:000432033700006
DA 2024-07-18
ER

PT J
AU Letrache, K
   El Beggar, O
   Ramdani, M
AF Letrache, Khadija
   El Beggar, Omar
   Ramdani, Mohammed
TI The automatic creation of OLAP cube using an MDA approach
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Data warehouse; MDA; OIM; OLAP; XMLA
ID DATA WAREHOUSES
AB The Model-Driven Architecture (MDA) is an approach that aligns modeling and automation for software development. By applying such an approach to data warehouse (DW) projects, we can minimize a great deal of time and cost. Furthermore, most of OnLine Analytical Processing (OLAP) platforms seem to be like black boxes that provide wizards only to business intelligence developers to create and manipulate OLAP objects without allowing their sustainability and migration from a platform to another. That is why many works in the literature have proposed using the MDA approach in DW projects. However, most of them have mainly focused on the generation of the DW relational model from the conceptual one, and they overlooked the OLAP model and the cube implementation.
   To deal with this problem, we propose in this paper an MDA solution to automate the process of getting OLAP cube and its implementation through a set of metamodels and automatic transformations among them. In fact, the proposal generates the OLAP and DW relational models (PSMs) from the conceptual one, using also a PDM model that describes the target business intelligence platform. After that, the source code to create the cube is got from both PSM models. For this aim, we define a set of transformation rules implemented using the Atlas transformation language. Finally, a case study will be provided to validate our approach.
C1 [Letrache, Khadija; El Beggar, Omar; Ramdani, Mohammed] Univ Hassan 2, Dept Informat, LIM Lab, Fac Sci & Tech Mohammedia, Casablanca, Morocco.
C3 Hassan II University of Casablanca
RP Letrache, K (corresponding author), Hassan II Univ, Dept Comp Sci, Casablanca BP 146,Yasmina Str 20658, Casablanca, Morocco.
RI Ramdani, Mohammed/HHS-1873-2022; Beggar, Omar El/AFV-4789-2022
OI Ramdani, Mohammed/0000-0003-2941-4461; Beggar, Omar
   El/0000-0002-5122-3322
CR [Anonymous], 1999, METADATA COALITION O
   [Anonymous], 2013, The Data Warehouse Toolkit: The Defi nitive Guide to Dimensional Modeling
   [Anonymous], 2005, Building the Data Warehouse
   ATL, 2005, ATL TRANSF LANG US M
   Blanco C, 2015, COMPUT SCI INF SYST, V12, P541, DOI 10.2298/CSIS140617007B
   Blanco C, 2015, INFORM SOFTWARE TECH, V59, P1, DOI 10.1016/j.infsof.2014.10.008
   Blanco C, 2014, J UNIVERS COMPUT SCI, V20, P79
   Blanco C, 2008, LECT NOTES COMPUT SC, V5332, P1052
   Bousetta B, 2013, J INF ENG APPL, V3
   Common Warehouse Metamodel (CWM), 2003, COMMON WAREHOUSE MET, V1
   EL Beggar O, 2017, CIM DATA WAREHOUSE R
   Glorio O, 2008, LECT NOTES COMPUT SC, V5182, P23, DOI 10.1007/978-3-540-85836-2_3
   Luján-Mora S, 2006, DATA KNOWL ENG, V59, P725, DOI 10.1016/j.datak.2005.11.004
   Mazon J.N., 2005, P 8 ACM INT WORKSH D, P57, DOI [10.1145/1097002.1097012, DOI 10.1145/1097002.1097012]
   Mazon JN, 2008, DATA WAREHOUSING MEE
   Mazón JN, 2008, DECIS SUPPORT SYST, V45, P41, DOI 10.1016/j.dss.2006.12.003
   Mazón JN, 2007, DATA KNOWL ENG, V63, P725, DOI 10.1016/j.datak.2007.04.004
   Neil Carlos G, 2014, Ingeniare. Rev. chil. ing., V22, P218, DOI 10.4067/S0718-33052014000200008
   Pardillo J, 2008, LECT NOTES COMPUT SC, V5182, P13, DOI 10.1007/978-3-540-85836-2_2
   Ponniah P., 2001, DATA WAREHOUSING FUN
   Soler E, 2009, J UNIVERS COMPUT SCI, V15, P1607
   Zepeda L, 2010, INT C COMP SCI ITS A
   Zepeda L, 2006, MODEL DRIVEN APPROAC
   Zepeda L, 2008, LECT NOTES COMPUT SC, V5073, P1204
NR 24
TC 6
Z9 6
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2017
VL 47
IS 12
BP 1887
EP 1903
DI 10.1002/spe.2512
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM0FF
UT WOS:000414636600002
DA 2024-07-18
ER

PT J
AU Chhabra, T
   Faro, S
   Külekci, MO
   Tarhio, J
AF Chhabra, Tamanna
   Faro, Simone
   Kulekci, M. Oguzhan
   Tarhio, Jorma
TI Engineering order-preserving pattern matching with SIMD parallelism
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE SIMD; SSE; AVX/AVX2; order-preserving pattern matching
AB The order-preserving pattern matching problem has gained attention in recent years. It consists in finding all substrings in the text, which have the same length and relative order as the input pattern. Typically, the text and the pattern consist of numbers. Since recent times, there has been a tendency to utilize the ability of the word RAM model to increase the efficiency of string matching algorithms. This model works on computer words, reading and processing blocks of characters at once, so that usual arithmetic and logic operations on words can be performed in one unit of time. In this paper, we present a fast order-preserving pattern matching algorithm, which uses specialized word-size packed string matching instructions, grounded on the single instruction multiple data instruction set architecture. We show with experimental results that the new proposed algorithm is more efficient than the previous solutions. (C) 2016 The Authors. Software: Practice and Experience Published by John Wiley & Sons Ltd.
C1 [Chhabra, Tamanna; Tarhio, Jorma] Aalto Univ, Dept Comp Sci, Espoo, Finland.
   [Faro, Simone] Univ Catania, Dept Math & Comp Sci, Catania, Italy.
   [Kulekci, M. Oguzhan] Istanbul Tech Univ, Inst Informat, Istanbul, Turkey.
C3 Aalto University; University of Catania; Istanbul Technical University
RP Chhabra, T (corresponding author), Aalto Univ, Dept Comp Sci, Espoo, Finland.
EM tamanna.chhabra@aalto.fi
RI Tarhio, Jorma A/F-5831-2012; kulekci, m. oguzhan/F-7512-2011
OI kulekci, m. oguzhan/0000-0002-4583-6261; Tarhio,
   Jorma/0000-0003-2455-1985; Faro, Simone/0000-0001-5937-5796
CR [Anonymous], 2013, Proceedings of the 15th Meeting on Algorithm Engineering and Experiments, ALENEX 2013, New Orleans, Louisiana
   ARNDT J., 2009, MATTERS COMPUTATIONA
   Belazzougui D, 2013, LECT NOTES COMPUT SC, V8283, P66, DOI 10.1007/978-3-642-45030-3_7
   BOYER RS, 1977, COMMUN ACM, V20, P762, DOI 10.1145/359842.359859
   Cantone D, 2015, PROCEEDINGS OF THE PRAGUE STRINGOLOGY CONFERENCE 2015, P22
   Charras C, 1998, LECT NOTES COMPUT SC, V1448, P55, DOI 10.1007/BFb0030780
   Chhabra T, 2015, PROCEEDINGS OF THE PRAGUE STRINGOLOGY CONFERENCE 2015, P36
   Chhabra T, 2014, LECT NOTES COMPUT SC, V8504, P307, DOI 10.1007/978-3-319-07959-2_26
   Cho S, 2013, P 7 INT C COMB OPT A, P84, DOI 10.1007/978-3-319-02432-513
   Durian B, 2010, INFORM PROCESS LETT, V110, P148, DOI 10.1016/j.ipl.2009.11.010
   Faro S, 2016, LECT NOTES COMPUT SC, V9778, P185, DOI 10.1007/978-3-319-41168-2_16
   Faro S, 2014, J DISCRET ALGORITHMS, V28, P61, DOI 10.1016/j.jda.2014.07.003
   HUME A, 1991, SOFTWARE PRACT EXPER, V21, P1221, DOI 10.1002/spe.4380211105
   Intel, INTR GUID
   Intel, 2004, INT ARCH INSTR SET E
   Jeong H., 2012, CORR
   Kim J, 2014, THEOR COMPUT SCI, V525, P68, DOI 10.1016/j.tcs.2013.10.006
   Knuth D. E., 1977, SIAM Journal on Computing, V6, P323, DOI 10.1137/0206024
   Kubica M, 2013, INFORM PROCESS LETT, V113, P430, DOI 10.1016/j.ipl.2013.03.015
NR 19
TC 8
Z9 8
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2017
VL 47
IS 5
BP 731
EP 739
DI 10.1002/spe.2433
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ER1SO
UT WOS:000398573700005
OA hybrid
DA 2024-07-18
ER

PT J
AU Ryu, S
AF Ryu, Sukyoung
TI Scalable framework for parsing: from Fortress to JavaScript
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE parsing; Fortress; JavaScript; automatic generation; scalable framework;
   staged parsing
AB Programming languages grow over time that requires frequent changes in language manipulations such as compilation, interpretation, and analysis. Because the very first step of most language manipulations is parsing, whether parsing can adapt to changes easily, quickly, and correctly, it affects the scalability of language manipulations. Even though various parsing techniques have been well studied theoretically, their practical experiences in scalable frameworks have not been available. In this paper, we present our experiences with parsing in scalable frameworks. We first describe our trials and errors using various parsing techniques in developing parsers for the Fortress programming language. Because Fortress was a scientific language under development, its mathematical and growable syntax introduced new challenges in parsing. We summarize the lessons learned from parsing Fortress, and we share our experience of applying the lessons to parsing the JavaScript programming language. While JavaScript is one of the most widely used languages, JavaScript itself and its diverse variants keep extending its syntax, and the extremely dynamic features of JavaScript also add new challenges in parsing. Using automatic generation tools and methods like staged parsing and automatic extraction and testing of examples in language specifications, our methodology for scalable parsing has shown to be very effective in practice. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Ryu, Sukyoung] Korea Adv Inst Sci & Technol, Sch Comp, 291 Daehak Ro, Daejeon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Ryu, S (corresponding author), Korea Adv Inst Sci & Technol, Sch Comp, 291 Daehak Ro, Daejeon 305701, South Korea.
EM sryu.cs@kaist.ac.kr
RI Ryu, Sukyoung/C-2080-2011; Ryu, Sukyoung/A-8543-2015
OI Ryu, Sukyoung/0000-0002-0019-9772
CR Allen E, 2005, PROJECT FORTRESS COM
   Allen E, 2009, P INT WORKSH FDN OBJ
   Allen Eric., 2008, FORTRESS LANGUAGE SP
   Ananian CS, 1996, CUP LALR PARSER GENE
   [Anonymous], 2000, The C++ Programming Language
   Bae S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P507, DOI 10.1145/2635868.2635916
   Baker J, 2002, ACM SIGPLAN NOTICES, V37, P270, DOI 10.1145/543552.512562
   Bracha G., 2005, JAVA LANGUAGE SPECIF
   Cho J, 2014, P 13 INT C MOD LUG S, P229
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Crockford D., 2008, ADSAFE MAKING JAVASC
   Dijkstra A, 2009, HASKELL'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN HASKELL SYMPOSIUM, P93
   Dinkelaker T, 2013, SCI COMPUTER PROGRAM, V78
   ECMA International, 2009, ECMA262
   Erdweg S, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P391
   Ford B, 2004, ACM SIGPLAN NOTICES, V39, P111, DOI 10.1145/982962.964011
   Google, 2011, TRAC COMP GOOGL VEH
   Google Caja Team, 2008, GOOGL CAJ SOURC TO S
   Grimm R, 2006, RATS EASILY EXTENSIB
   Guha A, 2010, LECT NOTES COMPUT SC, V6183, P126, DOI 10.1007/978-3-642-14107-2_7
   Hedin G, JASTADD
   Ihrig CJ, 2012, DANGERS JAVASCRIPTS
   JOHNSON S.C., 1979, UNIX Programmer's Manual
   KAIST PLRG, 2013, SAFE JAVASCRIPT AN F
   Kang S, 2012, ACM SIGPLAN NOTICES, V47, P621, DOI 10.1145/2398857.2384661
   Kats LCL, 2009, ACM SIGPLAN NOTICES, V44, P445, DOI 10.1145/1639949.1640122
   Kelsey R, 1998, ACM SIGPLAN NOTICES, V33, P26, DOI 10.1145/290229.290234
   Lee H, 2012, FOOL 2012 19 INT WOR, P96
   Leroy Xavier., 2004, OBJECTIVE CAML SYSTE
   McPeak S, 2004, LECT NOTES COMPUT SC, V2985, P73
   Mernik M, 2005, COMPUT LANG SYST STR, V31, P1, DOI 10.1016/j.cl.2004.02.001
   Microsystems Sun, 1996, JAV COMP COMP JAVACC
   Mozilla, 2011, RUST PROGR LANG
   Odersky Martin., 2004, The Scala Language Specification
   Parr T, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P425
   Peyton-Jones S., 2003, Haskell 98 Language and Libraries: The Revised Report, DOI [10.1016/j.neucom.2020.11.041, DOI 10.1016/J.NEUCOM.2020.11.041]
   Ryu Sukyoung., 2009, PPPJ 09, P76, DOI DOI 10.1145/1596655.1596667
   Unicode Consortium, 2006, UN STAND VERS 5 0
   van den Brand MGJ, 2002, LECT NOTES COMPUT SC, V2304, P143
   Van Wyk E, 2002, LECT NOTES COMPUT SC, V2304, P128
   Visser Eelco, 1997, THESIS
   Visser Eelco, 1997, P9707 U AMST
   Wyk EV, 2008, ELECT NOTES THEORETI, V203
NR 43
TC 1
Z9 1
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD SEP
PY 2016
VL 46
IS 9
BP 1219
EP 1238
DI 10.1002/spe.2380
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DS8KO
UT WOS:000381032300004
OA Bronze
DA 2024-07-18
ER

PT J
AU D'Elia, DC
   Demetrescu, C
   Finocchi, I
AF D'Elia, Daniele Cono
   Demetrescu, Camil
   Finocchi, Irene
TI Mining hot calling contexts in small space
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE performance profiling; dynamic program analysis; data streaming
   algorithms; frequent items; program instrumentation
ID PATH; EFFICIENT; FRAMEWORK; ACCURATE; FREQUENT; FLOW
AB Calling context trees (CCTs) associate performance metrics with paths through a program's call graph, providing valuable information for program understanding and performance analysis. In real applications, however, CCTs might easily consist of tens of millions of nodes, making them difficult to analyze and also hurting execution times because of poor access locality. For performance analysis, accurately mining only hot calling contexts may be more useful than constructing an entire CCT with millions of uninteresting paths, because the distribution of context frequencies is typically very skewed. In this article, we show how to exploit this property to considerably reduce the CCT size, introducing a novel runtime data structure, called hot CCT (HCCT), in the spectrum of representations for interprocedural control flow. The HCCT includes only hot nodes and their ancestors in a CCT and can be constructed independently from it by using fast, space-efficient algorithms for mining frequent items in data streams. With this approach, we can distinguish between hot and cold contexts on the fly while obtaining very accurate frequency counts. We show, both theoretically and experimentally, that the HCCT achieves a similar precision as the CCT in a space that is several orders of magnitude smaller and roughly proportional to the number of hot contexts. Our approach can be effectively combined with previous context-sensitive profiling techniques, as we show for static bursting. We devise an implementation as a plug-in for the gcc compiler that incurs a slowdown competitive with the gprof call-graph profiler while collecting finer-grained profiles. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [D'Elia, Daniele Cono; Demetrescu, Camil] Sapienza Univ Rome, Dept Comp Control & Management Engn, Via Ariosto 25, I-00185 Rome, Italy.
   [Finocchi, Irene] Sapienza Univ Rome, Dept Comp Sci, Rome, Italy.
C3 Sapienza University Rome; Sapienza University Rome
RP Demetrescu, C (corresponding author), Sapienza Univ Rome, Dept Comp Control & Management Engn, Via Ariosto 25, I-00185 Rome, Italy.
EM demetres@dis.uniroma1.it
RI Demetrescu, Camil/H-9904-2012; Finocchi, Irene/G-7404-2012
OI FINOCCHI, Irene/0000-0002-6394-6798; D'ELIA, DANIELE
   CONO/0000-0003-4358-976X
FU PRIN project AMANDA ("Algorithmics for MAssive and Networked DAta");
   Italian Ministry of University and Research (MIUR)
FX Work supported in part by PRIN project AMANDA ("Algorithmics for MAssive
   and Networked DAta"), funded by the Italian Ministry of University and
   Research (MIUR).
CR Ammons G, 1997, ACM SIGPLAN NOTICES, V32, P85, DOI 10.1145/258916.258924
   Ammons G, 1998, ACM SIGPLAN NOTICES, V33, P72, DOI 10.1145/277652.277665
   Apiwattanapong Taweesup., 2002, ACM WORKSHOP PROGRAM, P35
   Arnold M, 2001, ACM SIGPLAN NOTICES, V36, P168, DOI 10.1145/381694.378832
   Arnold M., 2000, 21789 RC IBM RES
   Ball T, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P46, DOI 10.1109/MICRO.1996.566449
   Ball T., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P134, DOI 10.1145/268946.268958
   Bernat AR, 2007, CONCURR COMP-PRACT E, V19, P1533, DOI [10.1002/cpe.1125, 10.1002/cpe]
   Bond MD, 2005, INT SYMP MICROARCH, P130
   Bond MD, 2005, INT SYM CODE GENER, P205, DOI 10.1109/CGO.2005.28
   Bond MD, 2007, ACM SIGPLAN NOTICES, V42, P97, DOI 10.1145/1297105.1297035
   Bond MD, 2010, ACM SIGPLAN NOTICES, V45, P13, DOI 10.1145/1809028.1806599
   CHANG PP, 1992, SOFTWARE PRACT EXPER, V22, P349, DOI 10.1002/spe.4380220502
   Coppa E, 2014, P ANN IEEE ACM INT S
   Coppa E, 2014, IEEE T SOFTWARE ENG, V40, P1185, DOI 10.1109/TSE.2014.2339825
   Cormode G, 2008, PROC VLDB ENDOW, V1, P1530, DOI 10.14778/1454159.1454225
   D'Elia DC, 2013, ACM SIGPLAN NOTICES, V48, P373, DOI [10.1145/2509136.2509521, 10.1145/2544173.2509521]
   D'Elia DC, 2011, ACM SIGPLAN NOTICES, V46, P516, DOI 10.1145/1993316.1993559
   Demetrescu C, 2007, HDB APPL ALGORITHMS, V241, P239
   Feng HHP, 2003, P IEEE S SECUR PRIV, P62, DOI 10.1109/SECPRI.2003.1199328
   Froyd N., 2005, P 19 ANN INT C SUPER, P81
   Goldsmith Simon F., 2007, P 6 JOINT M EUR SOFT, P395, DOI 10.1145/1287624.1287681
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   HALL RJ, 1995, IEEE T SOFTWARE ENG, V21, P481, DOI 10.1109/32.391375
   Hall RJ, 1993, P USENIX SUMM 1993 T, P1
   Hirzel M., 2001, 4th ACM Workshop on Feedback-Directed and Dynamic Optimization, P117
   Huang JQ, 2013, ADV PUB ENV OCCUP H, V2, P53
   Joshi R, 2004, INT SYM CODE GENER, P239, DOI 10.1109/CGO.2004.1281678
   Larus JR, 1999, ACM SIGPLAN NOTICES, V34, P259, DOI 10.1145/301631.301678
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Melski D, 1999, LECT NOTES COMPUT SC, V1575, P47
   Metwally A, 2006, ACM T DATABASE SYST, V31, P1095, DOI 10.1145/1166074.1166084
   Muthukrishnan S, 2005, FOUND TRENDS THEOR C, V1, P1, DOI 10.1561/0400000002
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Pavlopoulou C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P277, DOI 10.1109/ICSE.1999.841018
   PONDER C, 1988, SOFTWARE PRACT EXPER, V18, P459, DOI 10.1002/spe.4380180506
   Roy S, 2009, INT SYM CODE GENER, P70, DOI 10.1109/CGO.2009.11
   Serrano M, 2009, INT SYM CODE GENER, P221, DOI 10.1109/CGO.2009.12
   Singh Manku G., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P346
   Spivey JM, 2004, SOFTWARE PRACT EXPER, V34, P249, DOI 10.1002/spe.562
   STANDISH TA, 1980, DATA STRUCTURE TECHN
   Sumner WN, 2012, IEEE T SOFTWARE ENG, V38, P1160, DOI 10.1109/TSE.2011.70
   Vaswani K, 2007, ACM SIGPLAN NOTICES, V42, P351, DOI 10.1145/1190215.1190268
   Whaley John., 2000, JAVA 00, P78
   Xiao Xusheng, 2013, P 2013 INT S SOFTW T, P90, DOI DOI 10.1145/2483760.2483784
   Zaparanuks D, 2012, ACM SIGPLAN NOTICES, V47, P67, DOI 10.1145/2345156.2254074
   Zeng Q, 2014, P ANN IEEE ACM INT S
   Zhuang X, 2006, ACM SIGPLAN NOTICES, V41, P263, DOI 10.1145/1133981.1134012
NR 50
TC 5
Z9 5
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 2016
VL 46
IS 8
BP 1131
EP 1152
DI 10.1002/spe.2348
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR4ZQ
UT WOS:000379912900006
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Sebastio, S
   Amoretti, M
   Lafuente, AL
AF Sebastio, Stefano
   Amoretti, Michele
   Lafuente, Alberto Lluch
TI AVOCLOUDY: a simulator of volunteer clouds
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE cloud computing; volunteer computing; autonomic computing; distributed
   computing; discrete event simulation
ID NEIGHBOR-SELECTION STRATEGY; RESOURCE-MANAGEMENT; PERFORMANCE; TOOLKIT
AB The increasing demand of computational and storage resources is shifting users toward the adoption of cloud technologies. Cloud computing is based on the vision of computing as utility, where users no more need to buy machines but simply access remote resources made available on-demand by cloud providers. The relationship between users and providers is defined by a service-level agreement, where the non-fulfillment of its terms is regulated by the associated penalty fees. Therefore, it is important that the providers adopt proper monitoring and managing strategies. Despite their reduced application, intelligent agents constitute a feasible technology to add autonomic features to cloud operations. Furthermore, the volunteer computing paradigm-one of the Information and Communications Technology (ICT) trends of the last decade-can be pulled alongside traditional cloud approaches, with the purpose to `green' them. Indeed, the combination of data center and volunteer resources, managed by agents, allows one to obtain a more robust and scalable cloud computing platform. The increased challenges in designing such a complex system can benefit from a simulation-based approach, to test autonomic management solutions before their deployment in the production environment. However, currently available simulators of cloud platforms are not suitable to model and analyze such heterogeneous, large-scale, and highly dynamic systems. We propose the AVOCLOUDY simulator to fill this gap. This paper presents the internal architecture of the simulator, provides implementation details, summarizes several notable applications, and provides experimental results that measure the simulator performance and its accuracy. The latter experiments are based on real-world worldwide distributed computations on top of the PlanetLab platform. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Sebastio, Stefano] London Inst Math Sci, London W1K 2NY, England.
   [Amoretti, Michele] Univ Parma, Dipartimento Ingn Informaz, I-43100 Parma, Italy.
   [Lafuente, Alberto Lluch] Tech Univ Denmark, DTU Compute, DK-2800 Lyngby, Denmark.
   [Lafuente, Alberto Lluch] IMT Inst Adv Studies, Lucca, Italy.
C3 University of Parma; Technical University of Denmark; IMT School for
   Advanced Studies Lucca
RP Sebastio, S (corresponding author), London Inst Math Sci, 22 South Audley St Mayfair, London W1K 2NY, England.
EM stefano.sebastio@alumni.imtlucca.it
RI Sebastio, Stefano/W-8710-2019; Lafuente, Alberto Lluch/G-4413-2011;
   Amoretti, Michele/Q-3350-2016; Sebastio, Stefano/HJZ-5056-2023
OI Sebastio, Stefano/0000-0001-8905-9874; Lafuente, Alberto
   Lluch/0000-0001-7405-0818; Sebastio, Stefano/0000-0001-8905-9874
FU EU [HOME/2013/CIPS/AG/4000005013, 257414 ASCENS, 600708 QUANTICOL];
   Italian PRIN [2010LHT4KM CINA]
FX We are grateful to the anonymous reviewers for their useful comments and
   suggestions that have significantly helped us to further improve our
   simulator and its presentation in the manuscript. Research partially
   supported by the EU through the HOME/2013/CIPS/AG/4000005013 project
   CI2C, FP7-ICT Integrated Project 257414 ASCENS, STReP project 600708
   QUANTICOL, and the Italian PRIN 2010LHT4KM CINA. The contents of the
   paper do not necessarily reflect the position or the policy of funding
   parties.
CR Amoretti M, 2013, SIMULATING MOBILE DI, P107
   Amoretti M, 2013, EUROMICRO WORKSHOP P, P274, DOI 10.1109/PDP.2013.47
   Amoretti M, 2012, IEEE COMMUN LETT, V16, P1707, DOI 10.1109/LCOMM.2012.082012.121554
   Anderson DP, 2004, FIFTH IEEE/ACM INTERNATIONAL WORKSHOP ON GRID COMPUTING, PROCEEDINGS, P4, DOI 10.1109/GRID.2004.14
   Anderson DP, 2002, COMMUN ACM, V45, P56, DOI 10.1145/581571.581573
   Babaoglu O., 2012, P 27 ANN ACM S APPL, P412, DOI DOI 10.1145/2245276.2245357
   Babaoglu O, 2014, IEEE SPECTRUM, V51, P50, DOI 10.1109/MSPEC.2014.6905491
   Baset S., 2006, IEEE INT C COMPUTER, P1, DOI DOI 10.1109/INFOCOM.2006.312
   Bell WH, 2003, INT J HIGH PERFORM C, V17, P403, DOI 10.1177/10943420030174005
   BOGGS David R., 1988, Measured Capacity of an Ethernet: Myths and Reality
   Bolch G., 2006, Queueing Networks and Markov Chains: Modeling and Performance Evaluation with Computer Science Applications, VSecond
   Brasileiro F, 2007, CCGRID 2007: SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P817
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1175, DOI 10.1002/cpe.710
   Byrski A, 2013, COMPUT SCI-AGH, V14, P153, DOI 10.7494/csci.2013.14.1.153
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Cappos Justin, 2009, SIGCSE Bulletin, V41, P111, DOI 10.1145/1539024.1508905
   Casolari S, 2010, IEEE IPCCC, P247, DOI 10.1109/PCCC.2010.5682302
   Caton S, 2012, CONCURR COMP-PRACT E, V24, P992, DOI 10.1002/cpe.1715
   Celestini A., 2014, IFIP INT C TRUST MAN, P213, DOI DOI 10.1007/978-3-662-43813-8
   Costa F., 2011, 2011 IEEE International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum, P1855, DOI 10.1109/IPDPS.2011.345
   D'Acunto L., 2010, Proceedings 2010 IEEE International Symposium on Multimedia (ISM 2010), P89, DOI 10.1109/ISM.2010.22
   Di S, 2015, SOFTWARE PRACT EXPER, V45, P1571, DOI 10.1002/spe.2303
   Dumitrescu CL, 2005, 2005 IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, VOLS 1 AND 2, P1151
   Ghafarian T, 2013, J SUPERCOMPUT, V65, P797, DOI 10.1007/s11227-012-0866-7
   Ghafarian T, 2013, FUTURE GENER COMP SY, V29, P1583, DOI 10.1016/j.future.2012.08.010
   Hill MD, 2008, COMPUTER, V41, P33, DOI 10.1109/MC.2008.209
   Huang K, 2008, FUTURE GENER COMP SY, V24, P621, DOI 10.1016/j.future.2007.10.001
   Issariyakul T., 2008, Introduction to Network Simulator NS2
   Kavalionak Hanna, 2012, Self-Organizing Systems. Proceedings of the 6th IFIP TC 6 International Workshop (IWSOS 2012), P60, DOI 10.1007/978-3-642-28583-7_6
   Kavalionak H, 2015, PEER PEER NETW APPL, V8, P301, DOI 10.1007/s12083-013-0232-4
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kliazovich D, 2012, J SUPERCOMPUT, V62, P1263, DOI 10.1007/s11227-010-0504-1
   Koo SGM, 2004, IEEE IC COMP COM NET, P469, DOI 10.1109/ICCCN.2004.1401710
   Koo SGM, 2006, FUTURE GENER COMP SY, V22, P732, DOI 10.1016/j.future.2006.02.015
   Lee SJ, 2005, LECT NOTES COMPUT SC, V3431, P292
   Legrand A, 2003, CCGRID 2003: 3RD IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P138, DOI 10.1109/CCGRID.2003.1199362
   Lian FL, 2001, IEEE CONTR SYST MAG, V21, P66, DOI 10.1109/37.898793
   Mayer P, 2012, TR20120500 ASCENS
   Mishra Asit K., 2010, Performance Evaluation Review, V37, P34, DOI 10.1145/1773394.1773400
   Montresor A., 2004, 2004 P P 4 INT C PEE, P202
   Montresor A, 2011, IEEE INT CONF PEER, P250, DOI 10.1109/P2P.2011.6038743
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   Pavlou G., 2013, P 6 INT ICST C SIM T
   Pianini D, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P416, DOI 10.1109/HPCSim.2014.6903715
   Picone M, 2011, C LOCAL COMPUT NETW, P820, DOI 10.1109/LCN.2011.6115557
   Pyun YJ, 2004, FOURTH INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING, PROCEEDINGS, P210
   Satyanarayanan M, 2009, IEEE PERVAS COMPUT, V8, P14, DOI 10.1109/MPRV.2009.82
   Sebastio S., 2013, 7 INT C VALUETOOLS 1, P310, DOI DOI 10.4108/ICST.VALUETOOLS.2013.254377
   Sebastio S, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P105, DOI 10.1145/2593929.2593943
   Segal B, 2009, BUILDING VOLUNTEER C
   SHOCH JF, 1980, COMMUN ACM, V23, P711, DOI 10.1145/359038.359044
   Silberschatz A., 2008, OPERATING SYSTEM CON, V8th
   Sun XH, 2010, J PARALLEL DISTR COM, V70, P183, DOI 10.1016/j.jpdc.2009.05.002
   Thain D, 2005, CONCURR COMP-PRACT E, V17, P323, DOI 10.1002/cpe.938
   Thamarai Selvi S, 2010, 2010 INT C COMP DES, V4, DOI [10.1109/ICCDA.2010.5541135, DOI 10.1109/ICCDA.2010.5541135]
   Varga A., 2008, An Overview of the Omnet++ Simulation Environment, P1
   Wilkes  J., 2011, MORE GOOGLE CLUSTER
   Woo DH, 2008, COMPUTER, V41, P24, DOI 10.1109/MC.2008.494
NR 58
TC 8
Z9 10
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2016
VL 46
IS 1
SI SI
BP 3
EP 30
DI 10.1002/spe.2345
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA6HI
UT WOS:000367903200001
OA Green Published
DA 2024-07-18
ER

PT J
AU Cretella, G
   Di Martino, B
AF Cretella, Giuseppina
   Di Martino, Beniamino
TI A semantic engine for porting applications to the cloud and among clouds
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE semantic discovery; cloud APIs; cloud resources; cloud portability;
   cloud interoperability
AB In this paper, we present an engine based on semantic technologies aimed at supporting cloud applications developers, in the tasks of discovering functionalities, APIs, and resources needed for the application development through semantic based agnostic (vendor independent) representations of such application components, and representation of generic programming concepts and patterns, including application domain related ones. It handles, maintains, and exposes to the user in a graphical way the semantic descriptions of application domain concepts, application-related concepts, general design patterns and programming functionalities, specific API implementations and cloud resources, layering the knowledge base in four layers. The semantic engine is a component of the European project mOSAICs framework. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Cretella, Giuseppina; Di Martino, Beniamino] Univ Naples 2, Dept Ind & Informat Engn, Naples, Italy.
C3 Universita della Campania Vanvitelli
RP Di Martino, B (corresponding author), Univ Naples 2, Dept Ind & Informat Engn, Naples, Italy.
EM beniamino.dimartino@unina.it
RI ; Di Martino, Beniamino/O-6876-2015
OI CRETELLA, Giuseppina/0000-0002-8860-2553; Di Martino,
   Beniamino/0000-0001-7613-1312
FU European Community Seventh Framework Programme [n 256910]
FX The research leading to these results has received funding from the
   European Community Seventh Framework Programme (FP7/2007-2013) under
   grant agreement n 256910 (mOSAIC Project). We wish to acknowledge
   Manuela Serrao for her valuable contribution to the current
   implementation work.
CR Amato A, 2013, STUD COMPUT INTELL, V446, P271
   Amato A, 2013, 2013 IEEE 27TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P1253, DOI 10.1109/WAINA.2013.163
   [Anonymous], 2004, W3C MEMB SUBMISS
   [Anonymous], 2010, IEEE INTERNET COMPUT
   [Anonymous], 2010, P INT MULT ENG COMP
   Ardagna D., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P50, DOI 10.1109/MISE.2012.6226014
   Aversa R., 2012, 2012 Third International Conference on Emerging Intelligent Data and Web Technologies (EIDWT 2012), P46, DOI 10.1109/EIDWT.2012.57
   Collazo-Mojica XJ, 2011, SEKE, P560
   Cretella G., 2012, 14 INT C INF INT WEB, P378
   Cretella G, 2013, P 15 INT C INF INT W, P380
   Dastjerdi Amir Vahid, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P104, DOI 10.1109/CCGRID.2010.87
   Di Martino B, 2011, LECT NOTES COMPUT SC, V6586, P571, DOI 10.1007/978-3-642-21878-1_70
   Ejarque J., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P272, DOI 10.1109/CloudCom.2011.44
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Jaeyong Kang, 2011, Proceedings of the 2011 International Conference on System Science and Engineering (ICSSE), P276, DOI 10.1109/ICSSE.2011.5961913
   McGuinness D.L., 2004, W3C RECOMMENDATION, V10
   Menychtas A, 2014, INT SYMP SYMB NUMERI, P424, DOI 10.1109/SYNASC.2013.62
   Moscato F., 2011, 2011 Federated Conference on Computer Science and Information Systems (FedCSIS), P973
   Petcu D, 2013, J CLOUD COMPUT-ADV S, V2, DOI 10.1186/2192-113X-2-12
   Ranabahu A., 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P234, DOI 10.1109/CloudCom.2010.48
   Singh G., 2012, International Journal of Structural Integrity, V3, P1
   Soley R, 2000, OMG001105
   The Open Group, 2013, CLOUD COMP PORT INT
   Venticinque S., 2012, 2012 Sixth International Conference on Complex, Intelligent, and Software Intensive Systems (CISIS), P249, DOI 10.1109/CISIS.2012.139
   Venticinque S., 2012, EUROPEAN RES ACTIVIT, P178
   Venticinque S, 2014, INT J AD HOC UBIQ CO, V16, P219, DOI 10.1504/IJAHUC.2014.064857
NR 26
TC 21
Z9 21
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD DEC
PY 2015
VL 45
IS 12
BP 1619
EP 1637
DI 10.1002/spe.2304
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU4LK
UT WOS:000363501100002
DA 2024-07-18
ER

PT J
AU Schneider, C
   Barker, A
   Dobson, S
AF Schneider, Chris
   Barker, Adam
   Dobson, Simon
TI A survey of self-healing systems frameworks
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE autonomic computing; self-healing systems; survey; artificial
   intelligence; machine learning; evolutionary programming
ID RECOVERY
AB Rising complexity within multi-tier computing architectures remains an open problem. As complexity increases, so do the costs associated with operating and maintaining systems within these environments. One approach for addressing these problems is to build self-healing systems (i.e. frameworks) that can autonomously detect and recover from faulty states. Self-healing systems often combine machine learning techniques with closed control loops to reduce the number of situations requiring human intervention. This is particularly useful in situations where human involvement is both costly to develop, and a source of potential faults. Therefore, a survey of self-healing frameworks and methodologies in multi-tier architectures is provided to the reader. Uniquely, this study combines an overview of the state of the art with a comparative analysis of the computing environment, degree of behavioural autonomy, and organisational requirements of these approaches. Highlighting these aspects provides for an understanding of the different situational benefits of these self-healing systems. We conclude with a discussion of potential and current research directions within this field. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Schneider, Chris; Barker, Adam; Dobson, Simon] Univ St Andrews, Sch Comp Sci, St Andrews KY16 9AJ, Fife, Scotland.
C3 University of St Andrews
RP Schneider, C (corresponding author), Univ St Andrews, Sch Comp Sci, St Andrews KY16 9AJ, Fife, Scotland.
EM chris.schneider@st-andrews.ac.uk
RI Barker, Adam/KBC-7707-2024
OI Dobson, Simon/0000-0001-9633-2103; Barker, Adam
   David/0000-0002-0463-7207
CR Ahmed S, 2009, AUTONOMIC COMMUNICATION, P285, DOI 10.1007/978-0-387-09753-4_11
   Aldinucci M, 2008, FROM GRIDS TO SERVICE AND PERVASIVE COMPUTING, P3, DOI 10.1007/978-0-387-09455-7_1
   [Anonymous], 2012, P ACM INT C AUT COMP, DOI DOI 10.1145/2371536.2371571
   [Anonymous], 2009, AUTONOMIC COMPUTING
   [Anonymous], 2013, Assurances for Self-Adaptive Systems:Principles,Models,and Tech-niques
   Baduel L, 2007, LECT NOTES COMPUT SC, V4878, P1
   Boutilier C., 2003, P 19 C UNCERTAINTY A, P89
   Braynard R, 2002, 2002 IEEE OPEN ARCHITECTURES AND NETWORK PROGRAMMING PROCEEDINGS, P167, DOI 10.1109/OPNARC.2002.1019237
   Brodies M, 2005, P 2 INT C AUT COMP S, P15
   Brown AB, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P328
   Candeas G, 2004, P 6 S OP SYST DES IM, P101
   Cardellinis V, 2011, IEEE T SOFTWARE ENG, VPP, P1
   Carzaniga Antonio, 2008, International Journal on Software Tools for Technology Transfer, V10, P493, DOI 10.1007/s10009-008-0088-8
   Chen SQ, 2004, P SOC PHOTO-OPT INS, V5544, P276, DOI 10.1117/12.559293
   Cheng S.-W., 2006, INT WORKSH SELF AD S, P2, DOI DOI 10.1145/1137677.1137679
   Chess DM, 2004, LECT NOTES COMPUT SC, V3278, P257
   Chesss DM, 2005, SECURITY AUTONOMIC C, P33, DOI [10.1145/1055626.1055628, DOI 10.1145/1055626.1055628]
   Dai YS, 2009, LECT NOTES COMPUT SC, V5931, P45
   de Lemos R, 2005, LECT NOTES COMPUT SC, V3460, P219
   Deans DJ, 2012, P 9 INT C AUT COMP I, P181, DOI [10.1145/2371536.2371571, http://doi.acm.org/10.1145/2371536.2371571, DOI 10.1145/2371536.2371571]
   Diao YX, 2005, IEEE J SEL AREA COMM, V23, P2213, DOI 10.1109/JSAC.2005.857206
   Dobson S, 2006, ACM T AUTON ADAP SYS, V1, P223, DOI 10.1145/1186778.1186782
   Engel Y., 2011, P 5 ACM INT C DISTRI
   Fernandez-Marquezs JL, 2012, LECT NOTES I COMPUTE, V103, P2012
   Funika W, 2010, LECT NOTES COMPUT SC, V6068, P125
   Ganek AG, 2003, IBM SYST J, V42, P5, DOI 10.1147/sj.421.0005
   Garvins B, 2013, FAILURE AVOIDANCE CO, V7740, P266, DOI [http://dx.doi.org/10.1007/978-3-642-36249-1_10, DOI 10.1007/978-3-642-36249-1_10]
   Ghosh D, 2007, DECIS SUPPORT SYST, V42, P2164, DOI 10.1016/j.dss.2006.06.011
   Gomaa H., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P11, DOI 10.1109/SEAMS.2012.6224386
   Guoqiang Li, 2013, Web Technologies and Applications. 15th Asia-Pacific Web Conference, APWeb 2013. Proceedings, P654, DOI 10.1007/978-3-642-37401-2_64
   Gustavsson R, 2009, LECT NOTES COMPUT SC, V5508, P84, DOI 10.1007/978-3-642-03552-4_8
   Hassan S, 2006, ARTIF INTELL REV, V26, P89, DOI 10.1007/s10462-007-9033-6
   Hollands John, 1992, ADAPTATION NATURAL A
   Horn's P, 2001, AUTONOMIC COMPUTING
   Irwin DE, 2004, 13TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P160, DOI 10.1109/HPDC.2004.1323519
   Kamvar M. T., 2003, P 12 INT C WORLD WID, P640
   Kephart J., 2011, ICAC, V2011, P1, DOI DOI 10.1145/1998582.1998584
   Kephart JO, 2005, PROC INT CONF SOFTW, P15, DOI 10.1145/1062455.1062464
   Kephart JO, 2004, FIFTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P3, DOI 10.1109/POLICY.2004.1309145
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kirbys G, 2010, APPROACH AD HOC CLOU
   KOHONEN T, 1990, P IEEE, V78, P1464, DOI 10.1109/5.58325
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   McCann JA, 2004, LECT NOTES COMPUT SC, V3252, P597
   McCann JA, 2006, KNOWL ENG REV, V21, P239, DOI 10.1017/S0269888906000853
   Menascé DA, 2011, IEEE SOFTWARE, V28, P78, DOI 10.1109/MS.2011.22
   Miorandi D, 2010, L N INST COMP SCI SO, V39, P152
   Miorandi D, 2008, LECT NOTES COMPUT SC, V5151, P217
   Montagnas S, 2012, 6 IEEE INT C SELF AD, P10
   Naccache H, 2006, LECT NOTES COMPUT SC, V4294, P203
   Norvigs P, 2003, ARTIFICIAL INTELLIGE
   Ortega-Sanchez C., 2000, Genetic Programming and Evolvable Machines, V1, P187, DOI 10.1023/A:1010080629099
   Pernici B, 2009, LECT NOTES BUS INF P, V17, P440
   PRODAN L, 2002, P ALIFE, V8, P101
   Psaier H, 2011, SOCIALLY ENHANCED SERVICES COMPUTING: MODERN MODELS AND ALGORITHMS FOR DISTRIBUTED SYSTEMS, P95, DOI 10.1007/978-3-7091-0813-0_5
   Psaier H, 2011, COMPUTING, V91, P43, DOI 10.1007/s00607-010-0107-y
   Ramirez AJ, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P97
   Ramirez AJ, 2011, CLUSTER COMPUT, V14, P229, DOI 10.1007/s10586-010-0122-y
   Rilling L, 2006, LECT NOTES COMPUT SC, V4128, P437
   Rodoseks GD, 2009, DAGSTUHL SEMINAR P S
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Schuler C, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P26, DOI 10.1109/ICWS.2004.1314720
   Shehory O, 2007, LECT NOTES ARTIF INT, V4411, P3
   Simmonds J, 2010, LECT NOTES COMPUT SC, V6400, P250
   Sloman M., 1994, Journal of Network and Systems Management, V2, P333, DOI 10.1007/BF02283186
   Snyder P. L., 2012, 2012 IEEE 6th International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2012), P199, DOI 10.1109/SASO.2012.23
   Stoica I, 2001, ACM SIGCOMM COMP COM, V31, P149, DOI 10.1145/964723.383071
   Stojnic N., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P21, DOI 10.1109/SEAMS.2012.6224387
   Taubers M, 2010, CORR, p[1, 1578]
   Walsh WE, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P70, DOI 10.1109/ICAC.2004.1301349
NR 70
TC 18
Z9 23
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD OCT
PY 2015
VL 45
IS 10
BP 1375
EP 1398
DI 10.1002/spe.2250
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7VW
UT WOS:000360814800004
OA Bronze
DA 2024-07-18
ER

PT J
AU Mateos, C
   Rodriguez, JM
   Zunino, A
AF Mateos, Cristian
   Manuel Rodriguez, Juan
   Zunino, Alejandro
TI A tool to improve code-first Web services discoverability through text
   mining techniques
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE Web services; code first; WSDL anti-patterns; automatic detection;
   service discovery
ID FRAMEWORK
AB Service-oriented development is challenging mainly because Web service developers tend to disregard the importance of the exposed service APIs, which are specified using Web Service Description Language (WSDL) documents. Methodologically, WSDL documents can be either manually generated or inferred from service implementations using WSDL generation tools. The latter option, called code first, is the most used approach in the industry. However, it is known that there are some bad practices in service implementations or defects in WSDL generation tools that may cause WSDL documents to present WSDL anti-patterns, which in turn compromise the chances of documents of being discovered and understood. In this paper, we present a software tool that assists developers in obtaining WSDL documents with as few WSDL anti-patterns as possible. The tool combines text mining and meta-programming techniques to process service implementations and is developed as an Eclipse plug-in. An evaluation of the tool by using a data-set of real service implementations in terms of anti-pattern avoidance accuracy and discovery performance by using classical Information Retrieval metricsPrecision-at-n, Recall and Normalized Discounted Cumulative Gainis also reported.Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Mateos, Cristian; Manuel Rodriguez, Juan; Zunino, Alejandro] CONICET UNICEN, ISISTAN, Buenos Aires, DF, Argentina.
RP Mateos, C (corresponding author), CONICET UNICEN, ISISTAN, Tandil B7001BBO, Buenos Aires, DF, Argentina.
EM cmateos@conicet.gov.ar
RI Zunino, Alejandro/W-2100-2017; Rodriguez, Juan Manuel/V-9039-2019
OI Zunino, Alejandro/0000-0002-9537-3541; Rodriguez, Juan
   Manuel/0000-0002-1130-8065; Mateos, Cristian/0000-0001-5761-1898
FU ANPCyT [PICT-2012-0045]
FX We acknowledge the financial support provided by ANPCyT through grant
   PICT-2012-0045.
CR A-Masri E, 2007, IEEE IC COMP COM NET, P529
   Agichtein E., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P3, DOI 10.1145/1148170.1148175
   Al-Masri E, 2010, SOFTWARE PRACT EXPER, V40, P917, DOI 10.1002/spe.989
   Allen EE, 2006, SCI COMPUT PROGRAM, V59, P26, DOI 10.1016/j.scico.2005.07.003
   [Anonymous], IEEE S VIS LANG HUM
   Baina K, 2004, LECT NOTES COMPUTER, V3084
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Benatallah B, 2004, IEEE INTERNET COMPUT, V8, P46, DOI 10.1109/MIC.2004.1260703
   Bhagat J, 2010, NUCLEIC ACIDS RES, V38, pW689, DOI 10.1093/nar/gkq394
   Blake MB, 2008, IEEE INTERNET COMPUT, V12, P62, DOI 10.1109/MIC.2008.112
   Blake MB, 2011, IEEE T KNOWL DATA EN, V23, P889, DOI 10.1109/TKDE.2010.168
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Crasso M, 2011, INFORM SYST FRONT, V13, P407, DOI 10.1007/s10796-009-9221-9
   Crasso M, 2011, J DATABASE MANAGE, V22, P102, DOI 10.4018/jdm.2011010105
   Crasso M, 2010, IEEE INTERNET COMPUT, V14, P48, DOI 10.1109/MIC.2010.81
   Dong X., 2004, Proceedings of the 30th International Conference on Very Large Data Bases (VLDB'04), V30, P372, DOI DOI 10.1016/B978-012088469-8.50035-8
   Erl T., 2007, SOA Principles of Service Design
   Feldman R., 2006, TEXT MINING HDB ADV
   Garofalakis J, 2006, J WEB ENG, V5, P265
   Grechanik M., 2010, SEARCH ENGINE FINDIN, DOI [10.1145/1806799.1806868, DOI 10.1145/1806799.1806868]
   Gronmo R, 2004, 2004 IEEE INTERNATIONAL CONFERNECE ON E-TECHNOLOGY, E-COMMERE AND E-SERVICE, PROCEEDINGS, P42
   Guruge A, 2004, WEB SERVICES, P95
   Hao YN, 2010, FUTURE GENER COMP SY, V26, P1053, DOI 10.1016/j.future.2010.04.012
   Henning M, 2009, COMMUN ACM, V52, P46, DOI 10.1145/1506409.1506424
   Hess A, 2004, LECT NOTES COMPUT SC, V3298, P320
   Jiang W, 2011, J COMPUT SCI TECH-CH, V26, P837, DOI 10.1007/s11390-011-0183-2
   Kästner C, 2009, PROC INT CONF SOFTW, P611, DOI 10.1109/ICSE.2009.5070568
   Kim JB, 2005, DECIS SUPPORT SYST, V40, P71, DOI 10.1016/j.dss.2004.04.005
   Klein D, 2003, 41ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P423, DOI 10.3115/1075096.1075150
   Rodriguez JM, 2013, SOFTWARE PRACT EXPER, V43, P613, DOI 10.1002/spe.2123
   Rodriguez JM, 2013, IEEE INTERNET COMPUT, V17, P44, DOI 10.1109/MIC.2011.162
   Rodriguez JM, 2013, J WEB ENG, V12, P131
   Rodriguez JM, 2010, SCI COMPUT PROGRAM, V75, P1001, DOI 10.1016/j.scico.2010.01.002
   Mateos C, 2011, INT J WEB GRID SERV, V7, P357, DOI 10.1504/IJWGS.2011.044710
   Milne D, 2013, ARTIF INTELL, V194, P222, DOI 10.1016/j.artint.2012.06.007
   Papazoglou MP, 2008, INT J COOP INF SYST, V17, P223, DOI 10.1142/S0218843008001816
   Pasley J, 2006, IEEE INTERNET COMPUT, V10, P72, DOI 10.1109/MIC.2006.45
   Rodriguez J, 2010, IFIP ADV INFORM COMM, V341
   Rodriguez JM, 2013, SOA FRONTIER EXPERIE
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Santos RLT, 2008, J SYST SOFTWARE, V81, P809, DOI 10.1016/j.jss.2007.07.029
   Stroulia E, 2005, INT J COOP INF SYST, V14, P407, DOI 10.1142/S0218843005001213
   Vara JM, 2005, INTERNATIONAL CONFERENCE ON NEXT GENERATION WEB SERVICES PRACTICES, P319, DOI 10.1109/NWESP.2005.87
   Wei MJ, 2012, COMPUT SCI INF SYST, V9, P813, DOI 10.2298/CSIS101222001W
   Wu C, 2012, SCI COMPUT PROGRAM, V77, P355, DOI 10.1016/j.scico.2011.08.001
   Zhang MW, 2010, J COMPUT SCI TECH-CH, V25, P1143, DOI 10.1007/s11390-010-9395-0
   Zhu DL, 2009, INFORM SCIENCES, V179, P2606, DOI 10.1016/j.ins.2009.01.038
NR 47
TC 33
Z9 34
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL
PY 2015
VL 45
IS 7
BP 925
EP 948
DI 10.1002/spe.2268
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8EW
UT WOS:000355733900004
DA 2024-07-18
ER

PT J
AU Nesmachnow, S
   Luna, F
   Alba, E
AF Nesmachnow, Sergio
   Luna, Francisco
   Alba, Enrique
TI An empirical time analysis of evolutionary algorithms as C programs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE empirical execution time analysis; evolutionary algorithms; C
   programming language; software
ID RUNTIME ANALYSIS; OPTIMIZATION; PARALLEL
AB This article presents an empirical study devoted to characterize the computational efficiency behavior of an evolutionary algorithm (usually called canonical) as a C program. The study analyzes the effects of several implementation decisions on the execution time of the resulting evolutionary algorithm. The implementation decisions studied include: memory utilization (using dynamic vs. static variables and local vs. global variables), methods for ordering the population, code substitution mechanisms, and the routines for generating pseudorandom numbers within the evolutionary algorithm. The results obtained in the experimental analysis allow us to conclude that significant improvements in efficiency can be gained by applying simple guidelines to best program an evolutionary algorithm in C. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Nesmachnow, Sergio] Univ Republica, Fac Ingn, Montevideo, Uruguay.
   [Luna, Francisco] Univ Carlos III Madrid, Dept Informat, Madrid, Spain.
   [Alba, Enrique] Univ Malaga, Dept Lenguajes & Ciencias Computac, E-29071 Malaga, Spain.
C3 Universidad de la Republica, Uruguay; Universidad Carlos III de Madrid;
   Universidad de Malaga
RP Nesmachnow, S (corresponding author), Univ Republica, Fac Ingn, Montevideo, Uruguay.
EM sergion@fing.edu.uy
RI Luna, Francisco/HKN-2221-2023; Alba, Enrique/KCZ-2486-2024; Nesmachnow,
   Sergio/M-1963-2014
OI Luna, Francisco/0000-0002-0455-7223; Nesmachnow,
   Sergio/0000-0002-8146-4012
FU Programa de Desarrollo de las Ciencias Basicas, Universidad de la
   Republica; Agencia Nacional de Investigacion e Innovacion, Uruguay;
   Spanish Ministry of Economy and Competitiveness; FEDER [TIN2011-28194]; 
   [TIN2011-28336]
FX The work of S. Nesmachnow was partly supported by Programa de Desarrollo
   de las Ciencias Basicas, Universidad de la Republica, and Agencia
   Nacional de Investigacion e Innovacion, Uruguay. Francisco Luna and
   Enrique Alba acknowledge partial support from the Spanish Ministry of
   Economy and Competitiveness and FEDER under contracts TIN2011-28194.
   Francisco Luna also acknowledges partial support from TIN2011-28336.
CR Alba E, 2006, PARALLEL COMPUT, V32, P415, DOI 10.1016/j.parco.2006.06.007
   Alba E, 2007, LECT NOTES COMPUT SC, V4739, P764
   Alba E, 2013, INT T OPER RES, V20, P1, DOI 10.1111/j.1475-3995.2012.00862.x
   Ali S., 2000, Proceedings 9th Heterogeneous Computing Workshop (HCW 2000) (Cat. No.PR00556), P185, DOI 10.1109/HCW.2000.843743
   [Anonymous], P 12 ANN GEN EV COMP
   [Anonymous], 2020, The Algorithm Design Manual
   Back T., 1997, Handbook of evolutionary computation, V1st
   BENTLEY JL, 1993, SOFTWARE PRACT EXPER, V23, P1249, DOI 10.1002/spe.4380231105
   Brundage M., 2012, RANDOM NUMBER GENERA
   Cahon S, 2004, J HEURISTICS, V10, P357, DOI 10.1023/B:HEUR.0000026900.92269.ec
   Cantu-Paz Erick., 2002, P GEN EV COMP C GECC, P311
   Chen TS, 2009, IEEE T SYST MAN CY B, V39, P1092, DOI 10.1109/TSMCB.2008.2012167
   DASILVA CG, 2004, J MATH MODELLING ALG, V3, P183
   Detlefs D., 1994, Software - Practice and Experience, V24, P527, DOI 10.1002/spe.4380240602
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Graham R. L., 1979, Discrete Optimisation, P287
   Graham S. L., 2004, SIGPLAN Notices, V39, P51, DOI 10.1145/989393.989401
   Grefenstette J.J., 1984, Proceedings of the 1984 Conference on Intelligent Systems and Machines, P161
   HOARE CAR, 1962, COMPUT J, V5, P10, DOI 10.1093/comjnl/5.1.10
   KAUFFMAN S, 1987, J THEOR BIOL, V128, P11, DOI 10.1016/S0022-5193(87)80029-2
   Kellerer H., 2004, KNAPSACK PROBLEMS
   KIRKPATRICK S, 1981, J COMPUT PHYS, V40, P517, DOI 10.1016/0021-9991(81)90227-8
   KNUTH D. E., 1981, Addison-Wesley Series in Computer Science and Information Processing, V2
   Kunasol N, 2006, INT S INF COMM TECHN, P32
   Laumanns M, 2004, IEEE T EVOLUT COMPUT, V8, P170, DOI 10.1109/TEVC.2004.823470
   Loosemore S., GNU C LIB REFERENCE
   Lu GZ, 2011, LECT NOTES COMPUT SC, V6622, P108, DOI 10.1007/978-3-642-20364-0_10
   Marsaglia G., 2003, JMASM, V2, P2, DOI [DOI 10.22237/jmasm/1051747320, 10.22237/jmasm/1051747320, DOI 10.22237/JMASM/1051747320]
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P31, DOI 10.1145/272991.273007
   Merelo JJ, 2011, LECT NOTES COMPUT SC, V6692, P333, DOI 10.1007/978-3-642-21498-1_42
   Merz P, 1998, IEEE C EVOL COMPUTAT, P741, DOI 10.1109/ICEC.1998.700144
   Nesmachnow S., 2011, Proceedings of the 2011 11th International Conference on Intelligent Systems Design and Applications (ISDA), P271, DOI 10.1109/ISDA.2011.6121667
   Nesmachnow S, 2012, APPL SOFT COMPUT, V12, P626, DOI 10.1016/j.asoc.2011.09.022
   Nesmachnow S, 2011, SOFT COMPUT, V15, P685, DOI 10.1007/s00500-010-0594-y
   Nicolau M, 2009, GEN EV COMP C GECCO, P2473
   Oliveto PS, 2007, INT J AUTOM COMPUT, V4, P281, DOI 10.1007/s11633-007-0281-3
   Pisinger D, 1999, OPER RES, V47, P570, DOI 10.1287/opre.47.4.570
   Ribeiro C, 2011, PACIFIC J OPTIMIZATI, V1, P565
   Saito M., 2011, Tiny mersenne twister (tinyMT): A smallsized variant of mersenne twister
   Sastry K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P577
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Sudholt D, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION COMPANION (GECCO'12), P1215
   Suwannik W, 2008, IEEE C EVOL COMPUTAT, P1203, DOI 10.1109/CEC.2008.4630949
   Wall M., 1996, TECHNICAL REPORT
   White DR, 2012, GENET PROGRAM EVOL M, V13, P65, DOI 10.1007/s10710-011-9148-z
   White DR, 2011, IEEE T EVOLUT COMPUT, V15, P515, DOI 10.1109/TEVC.2010.2083669
   WHITLEY D, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P116
   Witt C, 2006, EVOL COMPUT, V14, P65, DOI 10.1162/evco.2006.14.1.65
   Zhou Y, 2007, IEEE T EVOLUT COMPUT, V11, P608, DOI 10.1109/TEVC.2006.888929
NR 49
TC 9
Z9 9
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JAN
PY 2015
VL 45
IS 1
BP 111
EP 142
DI 10.1002/spe.2217
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY4FC
UT WOS:000347532700005
OA Bronze
DA 2024-07-18
ER

PT J
AU Shaikh, A
   Wiil, UK
AF Shaikh, Asadullah
   Wiil, Uffe Kock
TI A feedback technique for unsatisfiable UML/OCL class diagrams
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE model slicing; feedback technique and slicing UML/OCL models with
   feedback
ID OCL; UML; MODELS
AB In Model-Driven Development (MDD), detection of model defects is necessary for correct model transformations. Formal verification tools and techniques can to some extent verify models. However, scalability is a serious issue in relation to verification of complex UML/OCL class diagrams. We have proposed a model slicing technique that slices the original model into submodels to address the scalability issue. A submodel can be detected as unsatisfiable if there are no valid values for one or more attributes of an object in the diagram or if the submodel provides inconsistent conditions on the number of objects of a given type. In this paper, we propose a novel feedback technique through model slicing that detects unsatisfiable submodels and their integrity constraints among the complex hierarchy of an entire UML/OCL class diagram. The software developers can therefore focus their revision efforts on the incorrect submodels while ignoring the rest of the model. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 [Shaikh, Asadullah; Wiil, Uffe Kock] Univ Southern Denmark, Maersk Mc Kinney Moller Inst, Odense, Denmark.
   [Shaikh, Asadullah] Inst Business & Technol, Dept CS & IT, Karachi, Pakistan.
C3 University of Southern Denmark
RP Shaikh, A (corresponding author), Inst Business & Technol Biztek, Dept CS & IT, Karachi, Pakistan.
EM shaikhasad@hotmail.com
RI Shaikh, Asadullah/S-4815-2016; Wiil, Uffe K./P-4226-2018
OI Shaikh, Asadullah/0000-0003-4806-6159; Wiil, Uffe K./0000-0001-6898-4083
CR Altenhofen M, 2007, LECT NOTES COMPUT SC, V4364, P169
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   [Anonymous], 2011, ECEASST
   [Anonymous], JPL
   Apt K.R., 2007, CONSTRAINT LOGIC PRO
   Brucker AD, 2008, LECT NOTES COMPUT SC, V4961, P97, DOI 10.1007/978-3-540-78743-3_8
   Cabot J, 2004, LECT NOTES COMPUT SC, V3273, P320
   Cabot Jordi, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P73, DOI 10.1109/ICSTW.2008.54
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Gogolla M, 2003, LECT NOTES COMPUT SC, V2863, P265
   Goldschmidt T, 2011, LECT NOTES COMPUT SC, V6698, P172, DOI 10.1007/978-3-642-21470-7_13
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Kagdi H, 2005, PROC IEEE INT CONF S, P635
   Kollmann R, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P89, DOI 10.1109/CSMR.2002.995793
   LALLCHANDANI J T., 2008, SIGSOFT Softw. Eng. Notes, V33, P1
   Lano K, 2010, LECT NOTES COMPUT SC, V6395, P228
   Queralt A, 2006, LECT NOTES COMPUT SC, V4215, P497
   Shaikh A., 2011, Adv. Software Engineering
   Shaikh A., 2010, Proceedings of the IEEE/ACM international conference on Automated Software Engineering, P185, DOI DOI 10.1145/1858996.1859038
   Shaikh A., 2012, P ACM SIGSOFT 20 INT, P1
   Shaikh A, FORM PROOF SLICING T
   Shaikh A, 2011, LECT NOTES COMPUT SC, V6598, P173, DOI 10.1007/978-3-642-21652-7_11
   Sulflow A., 2008, P 18 ACM GREAT LAKES, P77
   Torlak E, 2008, LECT NOTES COMPUT SC, V5014, P326, DOI 10.1007/978-3-540-68237-0_23
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
NR 25
TC 7
Z9 7
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD NOV
PY 2014
VL 44
IS 11
BP 1379
EP 1393
DI 10.1002/spe.2211
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AT2AQ
UT WOS:000344733400004
DA 2024-07-18
ER

PT J
AU Ruiz-Martínez, A
   Marín-López, CI
   Sánchez-Martínez, D
   Egea, IC
AF Ruiz-Martinez, A.
   Inmaculada Marin-Lopez, C.
   Sanchez-Martinez, D.
   Castell Egea, I.
TI SIPmsign: a lightweight mobile signature service based on the Session
   Initiation Protocol
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE nonrepudiation; mobile signature service; presence awareness;
   e-commerce; mobile signature; SIP; instant messaging
ID SCHEME
AB The development of mobile signatures could increase the spread and adoption of mobile services based on electronic signatures, such as mobile payments, mobile business transactions, and mobile government services. A Mobile Signature Service (MSS) means that a user in any of the scenarios mentioned can attach an electronic signature, anywhere, anytime, as with a handwritten signature with a device that is almost always on him or her. Several solutions have appeared, such as using the European Telecommunications Standard Institute MSS, the Mobile Signature Application Unit, and the Mobile Network Operator-independent MSS. These solutions present two kinds of drawbacks. On the one hand, some of them require the service to be developed by all mobile network operators, whereas others are not based on efficient communications. In this paper, we present a new MSS named SIPmsign that solves these problems. Our proposal is based on the Session Initiation Protocol and defines how to exchange the information in a secure and more efficient way than previously. Thanks to Session Initiation Protocol, we provide the adoption of our proposal as a MSS for the new generation of mobile communications. In this paper, we also present the prototype we have developed as a proof of its feasibility as well as an evaluation of the performance of our solution. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Ruiz-Martinez, A.; Inmaculada Marin-Lopez, C.; Sanchez-Martinez, D.; Castell Egea, I.] Univ Murcia, Dept Informat & Commun Engn, E-30100 Murcia, Spain.
C3 University of Murcia
RP Ruiz-Martínez, A (corresponding author), Univ Murcia, Dept Informat & Commun Engn, Fac Comp Sci, E-30100 Murcia, Spain.
EM arm@um.es
RI Ruiz-Martínez, Antonio/B-8921-2008
OI Ruiz-Martínez, Antonio/0000-0002-8433-159X
FU Spanish project for Excellent Research Group 'Programa de Ayuda a los
   Grupos de Excelencia de la Fundacion Seneca' [04552/GERM/06]; CICYT
   [TIN2008-06441-C02-02]; 'Secure Management of Information across
   multiple Stakeholders (SEMIRAMIS)' within the EC Seven Framework Program
   (FP7) [CIP-ICT PSP-2009-3 250453]
FX This work has been partially funded by the Spanish project for Excellent
   Research Group 'Programa de Ayuda a los Grupos de Excelencia de la
   Fundacion Seneca 04552/GERM/06', CICYT TIN2008-06441-C02-02 project, and
   'Secure Management of Information across multiple Stakeholders
   (SEMIRAMIS)' CIP-ICT PSP-2009-3 250453, within the EC Seven Framework
   Program (FP7).
CR Acharya Arup, 2008, Operating Systems Review, V42, P100, DOI 10.1145/1341312.1341332
   Ahson S., 2008, SIP Handbook: Services, Technologies, and Security of Session Initiation Protocol
   [Anonymous], LNCS
   [Anonymous], 2009, SIP SECURITY
   [Anonymous], 2008, CARD TECHNOLOGY TODA, V20, P5, DOI [10.1016/S0965-2590(08)70107-5, DOI 10.1016/S0965-2590(08)70107-5]
   [Anonymous], COMPUT INF SCI
   [Anonymous], 2012, WEBPRONEWS       FEB
   Armando A, 2003, LECT NOTES COMPUT SC, V2805, P875
   Basin D, 2003, LECT NOTES COMPUT SC, V2808, P253
   Berbecaru D, 2009, SOFTWARE PRACT EXPER, V39, P891, DOI 10.1002/spe.918
   Bicakci K, 2005, COMPUT NETW, V47, P351, DOI 10.1016/j.comnet.2004.08.008
   Bicakci K, 2004, LECT NOTES COMPUT SC, V2802, P187
   Bicakci K, 2004, LECT NOTES COMPUT SC, V2964, P143
   Boichut Y., 2004, Proc. Int. Workshop on Automated Verification of Infinite-State Systems (AVIS 2004), P1
   Botha RA, 2009, COMPUT SECUR, V28, P130, DOI 10.1016/j.cose.2008.11.001
   Brooke PJ, 2010, SOFTWARE PRACT EXPER, V40, P655, DOI 10.1002/spe.974
   Campbell B., 2002, Session Initiation Protocol (SIP) Extension for Instant Messaging, RFC 3428
   (CEN) ECfS, 2004, SEC SIGN CREAT DEV E
   Chang YF, 2009, COMPUT STAND INTER, V31, P740, DOI 10.1016/j.csi.2008.09.016
   Chevalier Y., 2004, SAPS, P193
   Damme GV, 2011, DROIDCON
   Damopoulos D, 2011, ISAM IPHONE STEALTH, V354, P1728
   Daniel Liang Y., 2010, Introduction to Java Programming, V8th
   Day M, 2000, MODEL PRESENCE INSTA
   Delac G., 2011, 2011 Proceedings of 34th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO 20111), P1468
   Dwivedi H., 2010, Mobile Application Security, V1
   Egele Manuele, 2011, 18 ANN NETW DISTR SY
   Eisenbarth T, 2011, J RES PRACT INF TECH, V43, P5
   Enck W, 2011, LECT NOTES COMPUT SC, V7093, P49, DOI 10.1007/978-3-642-25560-1_3
   European Telecommunications Standards Institute (ETSI), 2003, 102203 ETSI
   Fledel Y, 2012, GOOGLE ANDROID UPDAT, V76
   Fongen A, 2011, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON EMERGING SECURITY INFORMATION, SYSTEMS AND TECHNOLOGIES (SECURWARE 2011), P77
   Geneiatakis D, 2005, SIP SECURITY MECH ST, V20, P147
   Geneiatakis D, 2006, IEEE COMMUN SURV TUT, V8, P68, DOI 10.1109/COMST.2006.253270
   Gosling J., 2005, Java Language Specification, Vthird
   Goth G, 2012, IEEE INTERNET COMPUT, V16, P7, DOI 10.1109/MIC.2012.6
   Halbronn C, 2010, HITB HACK BOX SECCON
   Jansen W, 2008, SPECIAL PUBLICATION, V800-124
   Jaquith A, 2010, APPLES IPHONE IPAD S
   Karabag Solmaz Filiz, 2011, Info, V13, P72, DOI 10.1108/14636691111121647
   Kellog D., 2011, NIELSENWIRE      SEP
   Klyne G, 2004, COMMON PRESENCE INST
   La Polla M, 2013, IEEE COMMUN SURV TUT, V15, P446, DOI 10.1109/SURV.2012.013012.00028
   Lafourcade P, 2010, LECT NOTES COMPUT SC, V5983, P173
   Lookout Inc., 2011, TECHN REP MOB THREAT
   Mir C, 2008, CARD TECHNOLOGY TODA, V20, P12, DOI [10.1016/S0965-2590(08)70233-0, DOI 10.1016/S0965-2590(08)70233-0]
   Mundy D P, 2003, TER NETW C TNC2003 Z
   Muthukumaran D, 2008, SACMAT'08: PROCEEDINGS OF THE 13TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P155
   Nagell B, 2008, EXTENDING MOBILE IDE
   Niemi A., 2004, Session initiation protocol (sip) extension for event state publication
   Oberheide J, 2010, HOTMOBILE 10, P4348
   Ongtang M, 2009, 25TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, P340, DOI 10.1109/ACSAC.2009.39
   Pandya Vaibhav Ranchhoddas, 2010, Journal of Information Security, V1, P74, DOI 10.4236/jis.2010.12009
   Pesch D, 2005, COMPUT NETW, V49, P385, DOI 10.1016/j.comnet.2005.05.013
   Peterson J, 2004, COMMON PROFILE INSTA
   Pisko E, 2007, INT C MAN MOB BUS IC, P6
   Posch KC, 2011, SECURE PRIVACY PRESE, V6570
   project A, 2012, AUTOMATED VALIDATION
   Ramteke PL, 2012, INT J EMERGING TECHN, V2, P236
   Rosenberg J, 2002, 3261 RFC IETF AMS LL
   Rosenberg J., 2004, A Presence Event Package for the Session Initiation Protocol (SIP), RFC 3856
   Rossnagel H, 2005, LECT NOTES COMPUT SC, V3592, P110
   Rossnagel H, 2004, LECT NOTES COMPUT SC, V3093, P274
   Rouse Jason, 2012, Network Security, V2012, P11, DOI 10.1016/S1353-4858(12)70045-4
   Ruiz-Martinez A., 2007, J. Theor. Appl. Electron. Commerce Res., V2, P94
   Ruiz-Martinez A, 2009, INFORM SCI REFERENCE, P116
   Ruiz-Martínez A, 2011, SOFTWARE PRACT EXPER, V41, P209, DOI 10.1002/spe.996
   Ruiz-Martínez A, 2011, J NETW COMPUT APPL, V34, P294, DOI 10.1016/j.jnca.2010.07.003
   Rumbao F, 2011, MOBILITY 2011, P151
   Samadani Mohammad Hasan, 2010, Proceedings of the 2010 IEEE 24th International Conference on Advanced Information Networking and Applications Workshops (WAINA 2010), P437, DOI 10.1109/WAINA.2010.125
   Sawda S., 2006, Proc. IEEE 2nd Information and Communication Technologies, P3187, DOI DOI 10.1109/ICTTA.2006.1684926
   Schaefer F, 2012, SECURE ELEMENT EVALU
   Seriot N, 2010, BLACK HAT DC
   Shabtai A, 2012, J INTELL INF SYST, V38, P161, DOI 10.1007/s10844-010-0148-x
   Shabtai A, 2010, J SYST SOFTWARE, V83, P1524, DOI 10.1016/j.jss.2010.03.046
   Shabtai A, 2010, IEEE SECUR PRIV, V8, P36, DOI 10.1109/MSP.2009.144
   Shabtai A, 2010, IEEE SECUR PRIV, V8, P35, DOI 10.1109/MSP.2010.2
   Turuani M, 2003, THESIS U H POINCAR N
   Vacca Jr, 2009, COMPUTER AND INFORMATION SECURITY HANDBOOK, P1
   VanDamme G, 2012, LECT NOTES COMPUTER, V7163
   Walraven S, 2013, SOFTWARE PRACT EXPER, V43, P1145, DOI 10.1002/spe.1128
   Yoon EJ, 2010, IETE TECH REV, V27, P203, DOI 10.4103/0256-4602.62780
   Zhang XL, 2009, INT J PERVASIVE COMP, V5, P42, DOI 10.1108/17427370910950302
NR 83
TC 2
Z9 3
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2014
VL 44
IS 5
BP 511
EP 535
DI 10.1002/spe.2170
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE3YW
UT WOS:000333915400002
DA 2024-07-18
ER

PT J
AU Ferrara, P
AF Ferrara, P.
TI A generic static analyzer for multithreaded Java programs
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE static analysis; generic analyzers; abstract interpretation;
   multithreaded programs
ID RACE DETECTION; MEMORY MODEL; ABSTRACT INTERPRETATION; CHECKING;
   INFERENCE
AB In this paper, we present Checkmate, the first generic static analyzer of multithreaded Java programs based on abstract interpretation. Checkmate can be tuned at different levels of precision and efficiency in order to prove various properties (e.g., absence of divisions by zero and data races), and it is sound for multithreaded programs. It supports all the most relevant features of Java multithreading, such as dynamic thread creation, runtime creation of monitors, and dynamic allocation of memory. The experimental results demonstrate that Checkmate is accurate and efficient enough to analyze programs with some thousands of statements and a potentially infinite number of threads. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 Swiss Fed Inst Technol, Dept Comp Sci, Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Ferrara, P (corresponding author), Swiss Fed Inst Technol, Dept Comp Sci, Zurich, Switzerland.
EM pietro.ferrara@inf.ethz.ch
RI FERRARA, Pietro/ABF-9761-2021
OI FERRARA, Pietro/0000-0002-4678-933X
CR Abadi M, 2006, ACM T PROGR LANG SYS, V28, P207, DOI 10.1145/1119479.1119480
   Agarwal R, 2005, P PADTAD 05
   [Anonymous], 1999, NATO ASI SERIES F
   [Anonymous], 1997, Object-oriented software construction
   Batty M, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P55, DOI 10.1145/1926385.1926394
   Bensalem S, 2005, P PADTAD 05
   Bensalem S., 2006, PADTAD'06, P41, DOI DOI 10.1145/1147403.1147412
   Cousot P, 2005, LECT NOTES COMPUT SC, V3444, P21
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   Cousot Patrick, 1977, P 4 ACM S PRINC PROG, P238, DOI [10.1145/512950.512973, DOI 10.1145/512950.512973]
   Eytani Y, 2007, CONCURR COMP-PRACT E, V19, P267, DOI 10.1002/cpe.1068
   Fähndrich M, 2003, ACM SIGPLAN NOTICES, V38, P302, DOI 10.1145/949343.949332
   Ferrara P, 2008, BYTECODE 08, V08
   Ferrara P, 2009, THESIS U CA FOSCARI
   Ferrara P, 2008, LECT NOTES COMPUT SC, V4966, P116
   Ferrara P, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P169, DOI 10.1109/SEFM.2009.20
   Ferrara P, 2008, SEFM 2008: Sixth IEEE International Conference on Software Engineering and Formal Methods, Proceedings, P41, DOI 10.1109/SEFM.2008.14
   Flanagan C, 2003, LECT NOTES COMPUT SC, V2648, P213
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Granger P, 1991, LNCS
   Henzinger TA, 2004, ACM SIGPLAN NOTICES, V39, P1, DOI 10.1145/996893.996844
   Hovemeyer D, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P9, DOI 10.1145/1251535.1251537
   Hubert L, 2008, LECT NOTES COMPUT SC, V5051, P132, DOI 10.1007/978-3-540-68863-1_9
   Kahlon V, 2007, LNCS
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Lamport L., 1979, IEEE T COMPUTERS, V28
   LEA D, 1996, CONCURRENT PROGRAMMI
   Lee EA, 2006, COMPUTER, V39, P33, DOI 10.1109/MC.2006.180
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Logozzo F, 2010, LNCS, P10
   LOGOZZO F, 2008, LNCS
   Logozzo F, 2007, LECT NOTES COMPUT SC, V4349, P283
   Manson J, 2005, ACM SIGPLAN NOTICES, V40, P378, DOI 10.1145/1047659.1040336
   Manson Jeremy., JAVA MEMORY MODEL
   Musuvathi M, 2007, ACM SIGPLAN NOTICES, V42, P446, DOI 10.1145/1273442.1250785
   Naik M, 2007, ACM SIGPLAN NOTICES, V42, P327, DOI 10.1145/1190215.1190265
   Odersky Martin., 2008, SCALA LANGUAGE SPECI
   Owens S, 2009, LECT NOTES COMPUT SC, V5674, P391, DOI 10.1007/978-3-642-03359-9_27
   Qadeer S, 2005, LECT NOTES COMPUT SC, V3440, P93
   Qadeer S, 2004, ACM SIGPLAN NOTICES, V39, P245, DOI 10.1145/982962.964022
   Ramalingam G, 2000, ACM T PROGR LANG SYS, V22, P416, DOI 10.1145/349214.349241
   Rinard M, 2001, LECT NOTES COMPUT SC, V2126, P1
   SHAVIT N, 1995, S PRINC DISTR COMP, P204
   Spoto F, JULIA GENERIC STATIC
   Spoto F, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P21, DOI 10.1109/SEFM.2008.8
   Sutter H, 2005, ACM QUEUE, P54
   von Praun C, 2001, ACM SIGPLAN NOTICES, V36, P70, DOI 10.1145/504311.504288
   Williams A, 2005, LNCS
NR 48
TC 2
Z9 2
U1 0
U2 7
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUN
PY 2013
VL 43
IS 6
BP 663
EP 684
DI 10.1002/spe.2126
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 140MD
UT WOS:000318657300003
DA 2024-07-18
ER

PT J
AU Seinturier, L
   Merle, P
   Rouvoy, R
   Romero, D
   Schiavoni, V
   Stefani, JB
AF Seinturier, Lionel
   Merle, Philippe
   Rouvoy, Romain
   Romero, Daniel
   Schiavoni, Valerio
   Stefani, Jean-Bernard
TI A component-based middleware platform for reconfigurable
   service-oriented architectures
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE middleware; SOA; reconfiguration; component; SCA
ID MODEL; SUPPORT
AB ThetextitService Component Architecture (SCA) is a technology-independent standard for developing distributed Service-oriented Architectures (SOA). The SCA standard promotes the use of components and architecture descriptors, and mostly covers the lifecycle steps of implementation and deployment. Unfortunately, SCA does not address the governance of SCA applications and provides no support for the maintenance of deployed components. This article covers this issue and introduces the FRASCATI platform, a run-time support for SCA with dynamic reconfiguration capabilities and run-time management features. This article presents the internal component-based architecture of the FRASCATI platform, and highlights its key features. The component-based design of the FRASCATI platform introduces many degrees of flexibility and configurability in the platform itself and it can host the SOA applications. This article reports on micro-benchmarks highlighting that run-time manageability in the FRASCATI platform does not decrease its performance when compared with the de facto reference SCA implementation: Apache TUSCANY. Finally, a smart home scenario illustrates the extension capabilities and the various reconfigurations of the FRASCATI platform. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Seinturier, Lionel; Merle, Philippe; Rouvoy, Romain; Romero, Daniel] Univ Lille 1, F-59655 Villeneuve Dascq, France.
   [Seinturier, Lionel; Merle, Philippe; Rouvoy, Romain; Romero, Daniel] INRIA Lille Nord Europe, LIFL UMR CNRS 8022, ADAM Project Team, Villeneuve Dascq, France.
   [Schiavoni, Valerio; Stefani, Jean-Bernard] INRIA Grenoble Rhone Alpes, SARDES Project Team, Montbonnot St Martin, France.
C3 Universite de Lille; Centre National de la Recherche Scientifique (CNRS)
RP Seinturier, L (corresponding author), Univ Lille 1, F-59655 Villeneuve Dascq, France.
EM Lionel.Seinturier@inria.fr
RI SCHIAVONI, Valerio/AAQ-8777-2020; Merle, Philippe/K-4261-2014;
   Seinturier, Lionel/ABG-2829-2020
OI SCHIAVONI, Valerio/0000-0003-1493-6603; Merle,
   Philippe/0000-0003-3573-7312; Seinturier, Lionel/0000-0003-0006-6088;
   Rouvoy, Romain/0000-0003-1771-8791
FU EU; ANR [ICT FP7 IP SOA4All, ARPEGE ITEmIS]
FX This work is supported by EU, ANR under grants numbers ICT FP7 IP
   SOA4All project and ARPEGE ITEmIS project, respectively.
CR Abdellatif T, 2005, LECT NOTES COMPUTER, V3798
   [Anonymous], 2005, OSGI SERV PLATF COR
   [Anonymous], 2007, XQuery 1.0: An XML Query Language
   [Anonymous], 2008, UPNP DEV ARCH VERS 1
   [Anonymous], 2000, Dissertation
   Bagnier S, 2007, P 20 INT C SOFTW SYS
   Beisiegel M, 2007, SERVICE COMPONENT AR
   Beisiegel M, 2005, 09 BEA IBM IONA SAP
   Ben-Shaul I, 2001, IEEE T SOFTWARE ENG, V27, P769, DOI 10.1109/32.950315
   Bodoff S, 2004, J2EE TUTORIAL
   Bouchenak S, 2005, P 24 IEEE S REL DIST
   Bouchenak S, 2006, P IEEE INT C CLUST C
   Box D., 1998, ESSENTIAL COM
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Bures T, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P40, DOI 10.1109/SERA.2006.62
   BURKE B, 2003, JAVAS DEV J      DEC
   Caromel D, 2007, FUTURE GENERATION CO, V23
   CHASE N, 2004, AUTONOMIC COMPUTING
   Claudel B, 2006, LECT NOTES COMPUTER, V4280
   Coulson G, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1328671.1328672
   David P, 2008, LECT NOTES COMPUTER, V5053
   David PC, 2009, ANN TELECOMMUN, V64, P45, DOI 10.1007/s12243-008-0073-y
   Dowling J., 2001, P 3 INT C METALEVEL, P81, DOI DOI 10.1007/3-540-45429-2
   Drapeau S, 2009, ANR SCORWARE PROJECT
   Escoffier C, 2007, LECT NOTES COMPUT SC, V4829, P113
   Fleury M, 2003, LECT NOTES COMPUT SC, V2672, P344
   Flissi A, 2006, LECT NOTES COMPUTER, V4276
   Geihs K, 2009, SOFTWARE PRACT EXPER, V39, P385, DOI 10.1002/spe.900
   Goel A, 1998, PROCEEDINGS OF THE 2ND USENIX WINDOWS NT SYMPOSIUM, P172
   Guttman E., 1999, 2608 RFC
   Hariri S, 2006, CLUSTER COMPUT, V9, P5, DOI 10.1007/s10586-006-4893-0
   Hnetynka P, 2011, COMPUT J, V54, P1026, DOI 10.1093/comjnl/bxq046
   IBM, 2004, ARCH BLUEPR AUT COMP
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kon F, 2005, SOFTWARE PRACT EXPER, V35, P667, DOI 10.1002/spe.654
   Kon F, 2000, P IFIP ACM INT C DIS
   Malek S, 2005, IEEE T SOFTWARE ENG, V31, P256, DOI 10.1109/TSE.2005.29
   Melisson R, 2010, AUTOMAT SOFTW ENG, P171
   Merle Philippe, 2008, Research Report RR-6721
   Odersky M, 2006, LAMPREPORT2006001 EP
   OMG, 2008, FORMAL20080104 OMG
   OMG, 1999, AD990205 OMG
   Open SOA, 2007, SCA POL FRAM
   Open SOA, 2007, SCA T POL VERS 1 0
   OSGi Alliance, 2004, LIST CONS HARMF WHIT
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Parashar M, 2005, LECT NOTES COMPUT SC, V3566, P257
   Parizek P, 2007, P 30 IEEE NASA SOFTW, P133
   Pessemier N, 2006, LECT NOTES COMPUT SC, V4089, P259
   Plsek A, 2008, LECT NOTES COMPUT SC, V5346, P124, DOI 10.1007/978-3-540-89856-6_7
   Ribault K, 2009, P 2 INT C SIM TOOLS
   Roman M, 2001, IEEE DISTRIBUTED SYS, V2
   Romero D, 2009, ENABLING CONTEXT AWA, P113
   Romero D, 2010, LECT NOTES COMPUT SC, V6115, P112, DOI 10.1007/978-3-642-13645-0_9
   Rouvoy R, 2009, LECT NOTES COMPUT SC, V5525, P164, DOI 10.1007/978-3-642-02161-9_9
   Seinturier L, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P268, DOI 10.1109/SCC.2009.27
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Sicard S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P101, DOI 10.1145/1368088.1368103
   Smith B. C., 1984, P 11 ACM SIGACT SIGP, P23, DOI [DOI 10.1145/800017.800513, 10.1145/800017.800513]
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Sterritt R, 2005, ADV ENG INFORM, V19, P181, DOI 10.1016/j.aei.2005.05.012
   Sun Microsystems, 2002, 312 JSR SUN MICR
   Taherkordi A, 2010, LECT NOTES COMPUT SC, V6131, P45, DOI 10.1007/978-3-642-13651-1_4
NR 65
TC 75
Z9 84
U1 0
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 0038-0644
EI 1097-024X
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD MAY
PY 2012
VL 42
IS 5
BP 559
EP 583
DI 10.1002/spe.1077
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 919AN
UT WOS:000302293100003
OA Green Published
DA 2024-07-18
ER

EF